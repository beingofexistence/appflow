{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/model/textModel.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IA6ChG,SAAgB,GAAG,CAAqB,IAAY;QACnD,MAAM,OAAO,GAAG,IAAI,gCAAG,EAAyB,CAAC;QACjD,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC1B,OAAO,OAAO,CAAC,MAAM,EAAE,CAAC;IACzB,CAAC;IAJD,kBAIC;IAWD,SAAgB,GAAG,CAA+B,MAA4C;QAC7F,OAAO,IAAI,OAAO,CAA2B,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAChE,MAAM,OAAO,GAAG,IAAI,gCAAG,EAAyB,CAAC;YAEjD,IAAI,IAAI,GAAG,KAAK,CAAC;YAEjB,IAAA,YAAG,EAA6B,MAAM,EAAE;gBACvC,MAAM,EAAE,KAAK,CAAC,EAAE;oBACf,OAAO,CAAC,WAAW,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC7E,CAAC;gBACD,OAAO,EAAE,KAAK,CAAC,EAAE;oBAChB,IAAI,CAAC,IAAI,EAAE;wBACV,IAAI,GAAG,IAAI,CAAC;wBACZ,MAAM,CAAC,KAAK,CAAC,CAAC;qBACd;gBACF,CAAC;gBACD,KAAK,EAAE,GAAG,EAAE;oBACX,IAAI,CAAC,IAAI,EAAE;wBACV,IAAI,GAAG,IAAI,CAAC;wBACZ,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;qBAC1B;gBACF,CAAC;aACD,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAxBD,kBAwBC;IAED,SAAgB,GAAG,CAAiC,QAA6B;QAChF,MAAM,OAAO,GAAG,IAAI,gCAAG,EAAyB,CAAC;QAEjD,IAAI,KAAoB,CAAC;QACzB,OAAO,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE;YACrD,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3B;QAED,OAAO,OAAO,CAAC,MAAM,EAAE,CAAC;IACzB,CAAC;IATD,kBASC;IAED,SAAgB,GAAG,CAAc,KAA8D,EAAE,UAAkC;QAClI,IAAI,OAAiC,CAAC;QACtC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC9B,OAAO,GAAG,GAAG,CAAqB,KAAK,CAAC,CAAC;SACzC;aAAM,IAAI,KAAK,CAAC,GAAG,CAAa,KAAK,CAAC,EAAE;YACxC,OAAO,GAAG,GAAG,CAAiC,KAAK,CAAC,CAAC;SACrD;aAAM;YACN,OAAO,GAAG,KAAK,CAAC;SAChB;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IAVD,kBAUC;IAED,IAAI,QAAQ,GAAG,CAAC,CAAC;IAEjB,MAAM,gBAAgB,GAAG,GAAG,CAAC;IAC7B,MAAM,kBAAkB,GAAG,KAAK,CAAC;IAEjC,MAAM,iBAAiB;QAKtB,YAAY,MAA2B;YACtC,IAAI,CAAC,CAAC,GAAS,MAAM,CAAC;YACtB,IAAI,CAAC,CAAC,GAAM,KAAK,CAAC;QACnB,CAAC;QAEM,IAAI;YACV,IAAI,IAAI,CAAC,CAAC,EAAK;gBACd,OAAO,IAAI,CAAC;aACZ;YAED,MAAM,MAAM,GAAa,EAAE,CAAC;YAC5B,IAAI,SAAS,GAAG,CAAC,CAAC;YAClB,IAAI,YAAY,GAAG,CAAC,CAAC;YAErB,GAAG;gBACF,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAO,IAAI,EAAE,CAAC;gBAEhC,IAAI,GAAG,KAAK,IAAI,EAAE;oBACjB,gBAAgB;oBAChB,IAAI,CAAC,CAAC,GAAM,IAAI,CAAC;oBACjB,IAAI,SAAS,KAAK,CAAC,EAAE;wBACpB,OAAO,IAAI,CAAC;qBACZ;yBAAM;wBACN,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBACvB;iBACD;gBAED,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnB,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,GAAG,CAAC;oBAC1B,YAAY,IAAI,GAAG,CAAC,MAAM,CAAC;iBAC3B;gBAED,IAAI,YAAY,IAAI,EAAE,GAAG,IAAI,EAAE;oBAC9B,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBACvB;aACD,QAAQ,IAAI,EAAE;QAChB,CAAC;KACD;IAED,MAAM,WAAW,GAAG,GAAG,EAAE,GAAG,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;IAE1E,IAAW,0BASV;IATD,WAAW,0BAA0B;QACpC;;WAEG;QACH,iFAAW,CAAA;QACX;;WAEG;QACH,+FAAkB,CAAA;IACnB,CAAC,EATU,0BAA0B,KAA1B,0BAA0B,QASpC;IAEM,IAAM,GAAG,GAAT,MAAM,GAAU,SAAQ,eAAG;;iBAE1B,sBAAiB,GAAG,EAAE,GAAG,IAAI,GAAG,IAAf,AAAmB,CAAC,GAAC,2BAA2B;iBAChD,MAAC,GAA2B,EAAE,GAAG,IAAI,GAAG,IAAvC,AAA2C,CAAC,GAAC,SAAS;iBACvD,MAAC,GAAiC,GAAG,GAAG,IAAvC,AAA2C,CAAC,GAAC,aAAa;iBAC3D,MAAC,GAAqC,GAAG,GAAG,IAAI,GAAG,IAAlD,AAAsD,CAAC,GAAC,iDAAiD;iBAEpH,6BAAwB,GAAoC;YACzE,iBAAiB,EAAE,KAAK;YACxB,OAAO,EAAE,uBAAG,CAAmB,OAAO;YACtC,UAAU,EAAE,uBAAG,CAAmB,UAAU;YAC5C,YAAY,EAAE,uBAAG,CAAmB,YAAY;YAChD,iBAAiB,EAAE,KAAK;YACxB,UAAU,mCAA2B;YACrC,kBAAkB,EAAE,uBAAG,CAAmB,kBAAkB;YAC5D,sBAAsB,EAAE,uBAAG,CAAmB,sBAAsB;YACpE,8BAA8B,EAAE,uBAAG,CAAmB,8BAA8B;SAT/C,AAUrC,CAAC;QAEK,MAAM,CAAC,cAAc,CAAC,UAA6B,EAAE,OAAwC;YACnG,IAAI,OAAO,CAAC,iBAAiB,EAAE;gBAC9B,MAAM,kBAAkB,GAAG,IAAA,wBAAG,EAAc,UAAU,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;gBAC/F,OAAO,IAAI,KAAK,CAAC,GAAG,CAAsB;oBACzC,OAAO,EAAE,kBAAkB,CAAC,OAAO;oBACnC,UAAU,EAAE,SAAS;oBACrB,YAAY,EAAE,kBAAkB,CAAC,YAAY;oBAC7C,kBAAkB,EAAE,OAAO,CAAC,kBAAkB;oBAC9C,UAAU,EAAE,OAAO,CAAC,UAAU;oBAC9B,8BAA8B,EAAE,OAAO,CAAC,8BAA8B;iBACtE,CAAC,CAAC;aACH;YAED,OAAO,IAAI,KAAK,CAAC,GAAG,CAAsB,OAAO,CAAC,CAAC;QACpD,CAAC;QASD,IAAW,mBAAmB,KAAK,OAAO,IAAI,CAAC,EAAE,CAAyB,mBAAmB,CAAC,CAAC,CAAC;QAChG,IAAW,gCAAgC,KAAK,OAAO,IAAI,CAAC,EAAE,CAAyB,gCAAgC,CAAC,CAAC,CAAC;QAC1H,IAAW,iBAAiB,KAAK,OAAO,IAAI,CAAC,EAAE,CAAyB,iBAAiB,CAAC,CAAC,CAAC;QAWrF,kBAAkB,CAAC,QAAgD;YACzE,OAAO,IAAI,CAAC,CAAC,CAAa,SAAS,CAAC,CAAC,CAAM,EAA8B,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC9G,CAAC;QACM,gCAAgC,CAAC,QAAsF;YAC7H,OAAO,IAAA,eAAG,EACT,IAAI,CAAC,CAAC,CAAa,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAC9C,IAAI,CAAC,CAAC,CAAwB,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACrD,CAAC;QACH,CAAC;QAcM,YAAY,KAAc,OAAO,IAAI,CAAC,CAAC,CAAa,CAAC,CAAC;QAgC7D,IAAW,YAAY,KAAiC,OAAO,IAAI,CAAC,EAAE,CAAyB,CAAC,CAAC;QAGjG,IAAW,YAAY,KAAiC,OAAO,IAAI,CAAC,EAAE,CAAY,CAAC,CAAC;QAGpF,IAAW,MAAM,KAA2B,OAAO,IAAI,CAAC,EAAE,CAAmB,CAAC,CAAC;QAI/E,YACC,MAAyC,EACzC,qBAAkD,EAClD,eAAgD,EAChD,qBAAiC,IAAI,EACnB,EAAsC,EACtC,EAAsC,EACzB,EAAmD;YAElF,KAAK,EAAE,CAAC;YAJ2B,OAAE,GAAF,EAAE,CAAmB;YACrB,OAAE,GAAF,EAAE,CAAmB;YACR,OAAE,GAAF,EAAE,CAAgC;YA3FnF,gBAAgB;YACC,MAAC,GAA+B,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YACrE,kBAAa,GAAgB,IAAI,CAAC,CAAC,CAAc,KAAK,CAAC;YAEtD,MAAC,GAAsD,IAAI,CAAC,CAAC,CAAS,IAAI,2BAA2B,CAAC,yBAAyB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAsC,yBAAyB,CAAC,CAAC,CAAC,CAAC;YAC9M,2BAAsB,GAAyC,IAAI,CAAC,CAAC,CAAuB,KAAK,CAAC;YAMjG,MAAC,GAAyD,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAiC,CAAC,CAAC;YACpH,uBAAkB,GAAqC,IAAI,CAAC,CAAC,CAAmB,KAAK,CAAC;YAErF,MAAC,GAAqC,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YAC3E,wBAAmB,GAAgB,IAAI,CAAC,CAAC,CAAoB,KAAK,CAAC;YAElE,MAAC,GAAkE,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAqC,CAAC,CAAC;YAEhI,MAAC,GAAwC,IAAI,CAAC,CAAC,CAAS,IAAI,uBAAuB,EAAE,CAAC,CAAC;YAmBhG,MAAC,GAA4B,IAAI,CAAC,CAAC,CAAS,IAAI,eAAG,EAA6B,CAAC,CAAC;YA4BlF,MAAC,GAAiC,CAAC,CAAC;YAgB3B,OAAE,GAAe,IAAI,GAAG,EAAY,CAAC;YAarD,iCAAiC;YACjC,QAAQ,EAAE,CAAC;YACX,IAAI,CAAC,EAAE,GAAG,QAAQ,GAAG,QAAQ,CAAC;YAC9B,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,iBAAiB,CAAC;YAC3D,IAAI,OAAO,kBAAkB,KAAK,WAAW,IAAI,kBAAkB,KAAK,IAAI,EAAE;gBAC7E,IAAI,CAAC,CAAC,GAAqB,SAAG,CAAC,KAAK,CAAC,mBAAmB,GAAG,QAAQ,CAAC,CAAC;aACrE;iBAAM;gBACN,IAAI,CAAC,CAAC,GAAqB,kBAAkB,CAAC;aAC9C;YACD,IAAI,CAAC,CAAC,GAAsB,CAAC,CAAC;YAE9B,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,GAAG,CAAc,MAAM,EAAE,eAAe,CAAC,UAAU,CAAC,CAAC;YACxF,IAAI,CAAC,CAAC,GAAS,UAAU,CAAC;YAC1B,IAAI,CAAC,CAAC,GAAmB,UAAU,CAAC;YAEpC,IAAI,CAAC,CAAC,GAAU,KAAG,CAAO,cAAc,CAAC,IAAI,CAAC,CAAC,EAAQ,eAAe,CAAC,CAAC;YAExE,MAAM,UAAU,GAAG,CAAC,OAAO,qBAAqB,KAAK,QAAQ,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;YAC1H,IAAI,OAAO,qBAAqB,KAAK,QAAQ,EAAE;gBAC9C,IAAI,CAAC,CAAC,CAA0B,KAAK,GAAG,qBAAqB,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAW,qBAAqB,CAAC,UAAU,CAAC,CAAC,CAAC;aACrI;YAED,IAAI,CAAC,EAAE,GAAc,IAAI,CAAC,CAAC,CAAS,IAAI,sBAAG,CAAuB,IAAI,EAAE,IAAI,CAAC,EAAE,CAA4B,CAAC,CAAC;YAC7G,IAAI,CAAC,EAAE,GAAqB,IAAI,CAAC,CAAC,CAAS,IAAI,yBAAG,CAAiB,IAAI,EAAE,IAAI,CAAC,EAAE,CAA4B,CAAC,CAAC;YAC9G,IAAI,CAAC,EAAE,GAAoB,IAAI,CAAC,CAAC,CAAS,IAAI,6CAAG,CAAqC,IAAI,CAAC,CAAC,CAAC;YAC7F,IAAI,CAAC,EAAE,GAA2B,IAAI,+BAAG,CACxC,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,EAAE,EACP,IAAI,EACJ,IAAI,CAAC,EAAE,EACP,UAAU,EACV,IAAI,CAAC,EAAE,CACP,CAAC;YAEF,MAAM,eAAe,GAAG,IAAI,CAAC,CAAC,CAAO,YAAY,EAAE,CAAC;YACpD,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAO,qBAAqB,CAAC,IAAI,WAAG,CAAG,CAAC,EAAE,CAAC,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC,CAAO,aAAa,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,gDAAwC,CAAC;YAEtL,4EAA4E;YAC5E,6EAA6E;YAC7E,0BAA0B;YAC1B,IAAI,eAAe,CAAC,sBAAsB,EAAE;gBAC3C,IAAI,CAAC,CAAC,GAA4B,CACjC,CAAC,gBAAgB,GAAG,KAAG,CAAO,CAAC,CAAyB;uBACrD,CAAC,eAAe,GAAG,KAAG,CAAO,CAAC,CAA+B,CAChE,CAAC;gBAEF,IAAI,CAAC,CAAC,GAA6B,gBAAgB,GAAG,KAAG,CAAO,CAAC,CAAmC;aACpG;iBAAM;gBACN,IAAI,CAAC,CAAC,GAA4B,KAAK,CAAC;gBACxC,IAAI,CAAC,CAAC,GAA6B,KAAK,CAAC;aACzC;YAED,IAAI,CAAC,CAAC,GAAuB,CAAC,gBAAgB,GAAG,KAAG,CAAO,iBAAiB,CAAC,CAAC;YAE9E,IAAI,CAAC,CAAC,GAAY,CAAC,CAAC;YACpB,IAAI,CAAC,CAAC,GAAuB,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,GAA0B,IAAI,CAAC;YAErC,IAAI,CAAC,CAAC,GAAa,KAAK,CAAC;YACzB,IAAI,CAAC,CAAC,GAAe,KAAK,CAAC;YAE3B,IAAI,CAAC,CAAC,GAAa,OAAO,CAAC,GAAG,CAAc,QAAQ,CAAC,CAAC;YACtD,IAAI,CAAC,CAAC,GAAmB,CAAC,CAAC;YAC3B,IAAI,CAAC,CAAC,GAAc,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,CAAC,GAAkB,IAAI,gBAAgB,EAAE,CAAC;YAE/C,IAAI,CAAC,CAAC,GAAiB,IAAI,eAAG,CAAO,IAAI,EAAE,IAAI,CAAC,EAAE,CAAe,CAAC;YAClE,IAAI,CAAC,CAAC,GAAY,KAAK,CAAC;YACxB,IAAI,CAAC,CAAC,GAAY,KAAK,CAAC;YACxB,IAAI,CAAC,CAAC,GAA0B,IAAI,CAAC;YAGrC,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,EAAE,CAAkB,WAAW,CAAC,GAAG,EAAE;gBACxD,IAAI,CAAC,CAAC,CAAuB,iBAAiB,EAAE,CAAC;gBACjD,IAAI,CAAC,CAAC,CAAuB,IAAI,EAAE,CAAC;gBACpC,IAAI,CAAC,CAAC,CAAuB,eAAe,EAAE,CAAC;YAChD,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,EAAE,CAAe,2BAA2B,CAAC,UAAU,CAAC,CAAC;QAC/D,CAAC;QAEe,OAAO;YACtB,IAAI,CAAC,CAAC,GAAe,IAAI,CAAC;YAC1B,IAAI,CAAC,CAAC,CAAc,IAAI,EAAE,CAAC;YAC3B,IAAI,CAAC,EAAE,CAAyB,OAAO,EAAE,CAAC;YAC1C,IAAI,CAAC,CAAC,GAAa,IAAI,CAAC;YACxB,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,IAAI,CAAC,CAAC,CAAiB,OAAO,EAAE,CAAC;YACjC,IAAI,CAAC,CAAC,GAAe,KAAK,CAAC;YAC3B,0EAA0E;YAC1E,8CAA8C;YAC9C,MAAM,uBAAuB,GAAG,IAAI,yBAAG,CAAiB,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAChG,uBAAuB,CAAC,OAAO,EAAE,CAAC;YAClC,IAAI,CAAC,CAAC,GAAS,uBAAuB,CAAC;YACvC,IAAI,CAAC,CAAC,GAAmB,eAAG,CAAQ,IAAI,CAAC;QAC1C,CAAC;QAED,aAAa;YACZ,OAAO,CACN,IAAI,CAAC,CAAC,CAAc,YAAY,EAAE;mBAC/B,IAAI,CAAC,CAAC,CAAuB,YAAY,EAAE;mBAC3C,IAAI,CAAC,EAAE,CAAyB,aAAa,EAAE;mBAC/C,IAAI,CAAC,CAAC,CAAmB,YAAY,EAAE;mBACvC,IAAI,CAAC,CAAC,CAAoB,YAAY,EAAE;mBACxC,IAAI,CAAC,CAAC,CAAwB,YAAY,EAAE;mBAC5C,IAAI,CAAC,CAAC,CAAa,YAAY,EAAE,CACpC,CAAC;QACH,CAAC;QAEO,EAAE;YACT,IAAI,IAAI,CAAC,CAAC,EAAY;gBACrB,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;aACtC;QACF,CAAC;QAEM,gBAAgB,CAAC,KAAwB;YAC/C,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAO,MAAM,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC;QAEM,aAAa;YACnB,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAO;QACrB,CAAC;QAEO,EAAE,CAAuB,SAAc,EAA0B,MAAiC;YACzG,IAAI,IAAI,CAAC,CAAC,EAAc;gBACvB,iEAAiE;gBACjE,OAAO;aACP;YACD,IAAI,CAAC,EAAE,CAAyB,sBAAsB,CAAC,MAAM,CAAC,CAAC;YAC/D,IAAI,CAAC,EAAE,CAAY,sBAAsB,CAAC,MAAM,CAAC,CAAC;YAClD,IAAI,CAAC,CAAC,CAAa,IAAI,CAAC,IAAI,qBAAG,CAA6B,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;QACjF,CAAC;QAEM,QAAQ,CAAC,KAAmC;YAClD,IAAI,CAAC,EAAE,EAAkB,CAAC;YAE1B,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;gBAC1C,MAAM,IAAA,WAAE,GAAe,CAAC;aACxB;YAED,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,GAAG,CAAc,KAAK,EAAE,IAAI,CAAC,CAAC,CAAQ,UAAU,CAAC,CAAC;YACrF,IAAI,CAAC,EAAE,CAAsB,UAAU,EAAE,UAAU,CAAC,CAAC;QACtD,CAAC;QAEO,EAAE,CAAqB,KAAU,EAAI,WAAmB,EAAE,WAAmB,EAAE,IAAY,EAAE,SAAkB,EAAE,SAAkB,EAAE,OAAgB,EAAE,WAAoB;YAClL,OAAO;gBACN,OAAO,EAAE,CAAC;wBACT,KAAK,EAAE,KAAK;wBACZ,WAAW,EAAE,WAAW;wBACxB,WAAW,EAAE,WAAW;wBACxB,IAAI,EAAE,IAAI;qBACV,CAAC;gBACF,GAAG,EAAE,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE;gBAC1B,WAAW,EAAE,WAAW;gBACxB,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE;gBAC9B,SAAS,EAAE,SAAS;gBACpB,SAAS,EAAE,SAAS;gBACpB,OAAO,EAAE,OAAO;aAChB,CAAC;QACH,CAAC;QAEO,EAAE,CAAsB,UAA6B,EAAE,oBAAiC;YAC/F,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACnD,MAAM,mBAAmB,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;YAC1E,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;YAEvD,IAAI,CAAC,CAAC,GAAS,UAAU,CAAC;YAC1B,IAAI,CAAC,CAAC,CAAiB,OAAO,EAAE,CAAC;YACjC,IAAI,CAAC,CAAC,GAAmB,oBAAoB,CAAC;YAC9C,IAAI,CAAC,EAAE,EAAkB,CAAC;YAE1B,6BAA6B;YAC7B,IAAI,CAAC,CAAC,GAAc,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,CAAC,GAAkB,IAAI,gBAAgB,EAAE,CAAC;YAE/C,uCAAuC;YACvC,IAAI,CAAC,CAAC,CAAe,KAAK,EAAE,CAAC;YAC7B,IAAI,CAAC,CAAC,GAA0B,IAAI,CAAC;YAErC,IAAI,CAAC,EAAE,CACN,IAAI,qBAAG,CACN;gBACC,IAAI,qBAAG,EAAY;aACnB,EACD,IAAI,CAAC,CAAC,EACN,KAAK,EACL,KAAK,CACL,EACD,IAAI,CAAC,EAAE,CAAqB,IAAI,WAAG,CAAG,CAAC,EAAE,CAAC,EAAE,aAAa,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,mBAAmB,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAC1I,CAAC;QACH,CAAC;QAEM,MAAM,CAAC,GAA4B;YACzC,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,MAAM,MAAM,GAAG,CAAC,GAAG,yCAAiC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACtE,IAAI,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE,KAAK,MAAM,EAAE;gBACrC,gBAAgB;gBAChB,OAAO;aACP;YAED,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACnD,MAAM,mBAAmB,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;YAC1E,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;YAEvD,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,IAAI,CAAC,CAAC,CAAO,MAAM,CAAC,MAAM,CAAC,CAAC;YAC5B,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,IAAI,CAAC,EAAE,EAAiB,CAAC;YAEzB,IAAI,CAAC,EAAE,CACN,IAAI,qBAAG,CACN;gBACC,IAAI,qBAAG,EAAiB;aACxB,EACD,IAAI,CAAC,CAAC,EACN,KAAK,EACL,KAAK,CACL,EACD,IAAI,CAAC,EAAE,CAAqB,IAAI,WAAG,CAAG,CAAC,EAAE,CAAC,EAAE,aAAa,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,mBAAmB,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAC1I,CAAC;QACH,CAAC;QAEO,EAAE;YACT,gDAAgD;YAChD,IAAI,CAAC,CAAC,CAAgB,wBAAwB,CAAC,IAAI,CAAC,CAAC;QACtD,CAAC;QAEO,EAAE;YACT,oCAAoC;YACpC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,MAAM,cAAc,GAAG,IAAI,CAAC,CAAC,CAAgB,qBAAqB,EAAE,CAAC;YACrE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC1D,MAAM,IAAI,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;gBAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAM,CAAC,CAAC,mDAAmD;gBAE9E,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC;gBAEpD,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;gBACvF,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;gBAEjF,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC;gBACvC,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;gBACnC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;gBAEjC,IAAI,CAAC,KAAK,GAAG,WAAW,GAAG,KAAK,CAAC;gBACjC,IAAI,CAAC,GAAG,GAAG,SAAS,GAAG,KAAK,CAAC;gBAE7B,IAAA,kBAAG,EAAa,IAAI,CAAC,CAAC;aACtB;QACF,CAAC;QAEM,gBAAgB;YACtB,IAAI,CAAC,CAAC,EAAqB,CAAC;YAC5B,IAAI,IAAI,CAAC,CAAC,KAAwB,CAAC,EAAE;gBACpC,IAAI,CAAC,EAAE,CAAyB,uBAAuB,EAAE,CAAC;gBAC1D,IAAI,CAAC,CAAC,CAAoB,IAAI,CAAC,SAAS,CAAC,CAAC;aAC1C;YACD,OAAO,IAAI,CAAC,EAAE,CAAa,UAAU,EAAE,CAAC;QACzC,CAAC;QAEM,gBAAgB,CAAC,IAAyB;YAChD,IAAI,CAAC,CAAC,EAAqB,CAAC;YAC5B,IAAI,IAAI,CAAC,CAAC,KAAwB,CAAC,EAAE;gBACpC,IAAI,CAAC,EAAE,CAAyB,uBAAuB,EAAE,CAAC;gBAC1D,IAAI,CAAC,CAAC,CAAoB,IAAI,CAAC,SAAS,CAAC,CAAC;aAC1C;YACD,IAAI,CAAC,EAAE,CAAa,UAAU,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC;QAEM,kBAAkB;YACxB,OAAO,IAAI,CAAC,CAAC,GAAsB,CAAC,CAAC;QACtC,CAAC;QAEM,sBAAsB;YAC5B,OAAO,IAAI,CAAC,CAAC,CAAoB;QAClC,CAAC;QAEM,oBAAoB;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAqB;QACnC,CAAC;QAEM,yBAAyB;YAC/B,OAAO,IAAI,CAAC,CAAC,CAA0B;QACxC,CAAC;QAEM,0BAA0B;YAChC,OAAO,IAAI,CAAC,CAAC,CAA2B;QACzC,CAAC;QAEM,UAAU;YAChB,OAAO,IAAI,CAAC,CAAC,CAAW;QACzB,CAAC;QAEM,sBAAsB;YAC5B,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,IAAI,IAAI,CAAC,yBAAyB,EAAE,EAAE;gBACrC,mEAAmE;gBACnE,OAAO,KAAK,CAAC;aACb;YACD,IAAI,kBAAkB,GAAG,CAAC,CAAC;YAC3B,IAAI,iBAAiB,GAAG,CAAC,CAAC;YAE1B,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAO,YAAY,EAAE,CAAC;YAC9C,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,IAAI,SAAS,EAAE,UAAU,EAAE,EAAE;gBAC/D,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAO,aAAa,CAAC,UAAU,CAAC,CAAC;gBAC1D,IAAI,UAAU,IAAI,kBAAkB,EAAE;oBACrC,iBAAiB,IAAI,UAAU,CAAC;iBAChC;qBAAM;oBACN,kBAAkB,IAAI,UAAU,CAAC;iBACjC;aACD;YAED,OAAO,CAAC,iBAAiB,GAAG,kBAAkB,CAAC,CAAC;QACjD,CAAC;QAED,IAAW,GAAG;YACb,OAAO,IAAI,CAAC,CAAC,CAAmB;QACjC,CAAC;QAED,iBAAiB;QAEV,UAAU;YAChB,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAQ;QACtB,CAAC;QAEM,oBAAoB;YAC1B,OAAO;gBACN,OAAO,EAAE,IAAI,CAAC,CAAC,CAAQ,UAAU;gBACjC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAQ,YAAY;aACxC,CAAC;QACH,CAAC;QAEM,aAAa,CAAC,QAAuC;YAC3D,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,MAAM,OAAO,GAAG,CAAC,OAAO,QAAQ,CAAC,OAAO,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,OAAO,CAAC;YACrG,MAAM,UAAU,GAAG,CAAC,OAAO,QAAQ,CAAC,UAAU,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,kBAAkB,CAAC;YACzH,MAAM,YAAY,GAAG,CAAC,OAAO,QAAQ,CAAC,YAAY,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,YAAY,CAAC;YACzH,MAAM,kBAAkB,GAAG,CAAC,OAAO,QAAQ,CAAC,kBAAkB,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,kBAAkB,CAAC;YACjJ,MAAM,8BAA8B,GAAG,CAAC,OAAO,QAAQ,CAAC,0BAA0B,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,0BAA0B,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,8BAA8B,CAAC;YAEzL,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,GAAG,CAAsB;gBAClD,OAAO,EAAE,OAAO;gBAChB,UAAU,EAAE,UAAU;gBACtB,YAAY,EAAE,YAAY;gBAC1B,UAAU,EAAE,IAAI,CAAC,CAAC,CAAQ,UAAU;gBACpC,kBAAkB,EAAE,kBAAkB;gBACtC,8BAA8B;aAC9B,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,CAAC,CAAQ,MAAM,CAAC,OAAO,CAAC,EAAE;gBAClC,OAAO;aACP;YAED,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAQ,iBAAiB,CAAC,OAAO,CAAC,CAAC;YACnD,IAAI,CAAC,CAAC,GAAU,OAAO,CAAC;YAExB,IAAI,CAAC,EAAE,CAAY,sBAAsB,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,EAAE,CAAkB,sBAAsB,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,CAAC,CAAC,CAAC;QAClC,CAAC;QAEM,iBAAiB,CAAC,mBAA4B,EAAE,cAAsB;YAC5E,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,MAAM,kBAAkB,GAAG,IAAA,wBAAG,EAAc,IAAI,CAAC,CAAC,EAAQ,cAAc,EAAE,mBAAmB,CAAC,CAAC;YAC/F,IAAI,CAAC,aAAa,CAAC;gBAClB,YAAY,EAAE,kBAAkB,CAAC,YAAY;gBAC7C,OAAO,EAAE,kBAAkB,CAAC,OAAO;gBACnC,UAAU,EAAE,kBAAkB,CAAC,OAAO,EAAE,qDAAqD;aAC7F,CAAC,CAAC;QACJ,CAAC;QAEM,oBAAoB,CAAC,GAAW;YACtC,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,IAAA,iBAAG,EAAkB,GAAG,EAAE,IAAI,CAAC,CAAC,CAAQ,UAAU,EAAE,IAAI,CAAC,CAAC,CAAQ,YAAY,CAAC,CAAC;QACxF,CAAC;QAED,YAAY;QAEZ,iBAAiB;QAEV,YAAY;YAClB,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAU;QACxB,CAAC;QAEM,eAAe;YACrB,OAAO,IAAI,CAAC,CAAC,CAAO,eAAe,EAAE,CAAC;QACvC,CAAC;QAEM,kCAAkC;YACxC,OAAO,IAAI,CAAC,CAAC,CAAO,kCAAkC,EAAE,CAAC;QAC1D,CAAC;QAEM,4BAA4B,CAAC,aAAiC,IAAI;YACxE,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAsB,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,oDAAmC,CAAC;YAC7I,IAAI,CAAC,CAAC,CAAO,uCAAuC,EAAE,CAAC;YACvD,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QACrG,CAAC;QAEM,yBAAyB;YAC/B,OAAO,IAAI,CAAC,CAAC,CAAO,yBAAyB,EAAE,CAAC;QACjD,CAAC;QAEM,uBAAuB;YAC7B,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAqB;QACnC,CAAC;QAEM,0BAA0B;YAChC,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAwB;QACtC,CAAC;QAEM,WAAW,CAAC,WAAsB;YACxC,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAgB,WAAW,CAAC,UAAU,EAAE,WAAW,CAAC,MAAM,6CAAqC,CAAC;YACxH,OAAO,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QACvE,CAAC;QAEM,aAAa,CAAC,SAAiB;YACrC,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAO,SAAS,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;YAC5E,OAAO,IAAI,CAAC,CAAC,CAAO,aAAa,CAAC,MAAM,CAAC,CAAC;QAC3C,CAAC;QAEO,EAAE;YACT,IAAI,CAAC,CAAC,GAAY,IAAI,CAAC,CAAC,GAAY,CAAC,CAAC;YACtC,IAAI,CAAC,CAAC,GAAuB,IAAI,CAAC,CAAC,CAAU;QAC9C,CAAC;QAEM,mBAAmB,CAAC,SAAiB;YAC3C,IAAI,CAAC,CAAC,GAAY,SAAS,CAAC;QAC7B,CAAC;QAEM,8BAA8B,CAAC,uBAA+B;YACpE,IAAI,CAAC,CAAC,GAAuB,uBAAuB,CAAC;QACtD,CAAC;QAEM,iCAAiC,CAAC,0BAA4D;YACpG,IAAI,CAAC,CAAC,GAA0B,0BAA0B,CAAC;QAC5D,CAAC;QAEM,QAAQ,CAAC,GAA+B,EAAE,cAAuB,KAAK;YAC5E,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,IAAI,IAAI,CAAC,0BAA0B,EAAE,EAAE;gBACtC,MAAM,IAAI,YAAG,CAAgB,2CAA2C,CAAC,CAAC;aAC1E;YAED,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAChD,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YAEjE,IAAI,WAAW,EAAE;gBAChB,OAAO,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE,GAAG,cAAc,CAAC;aAC9C;YAED,OAAO,cAAc,CAAC;QACvB,CAAC;QAEM,cAAc,CAAC,cAAuB,KAAK;YACjD,OAAO,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAO,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;QACxE,CAAC;QAEM,cAAc,CAAC,GAA+B,EAAE,cAAuB,KAAK;YAClF,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAChD,MAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YAEvE,IAAI,WAAW,EAAE;gBAChB,OAAO,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE,CAAC,MAAM,GAAG,cAAc,CAAC;aACrD;YAED,OAAO,cAAc,CAAC;QACvB,CAAC;QAEM,eAAe,CAAC,QAAgB,EAAE,mDAAsE;YAC9G,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAO,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC;QACxE,CAAC;QAEM,qBAAqB,CAAC,QAAgB,EAAE,mDAAsE;YACpH,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC;QAC9E,CAAC;QAEM,wBAAwB,CAAC,QAAgB,EAAE,mDAAsE;YACvH,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAO,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC;QACjF,CAAC;QAEM,YAAY;YAClB,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAO,YAAY,EAAE,CAAC;QACpC,CAAC;QAEM,cAAc,CAAC,UAAkB;YACvC,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;gBACvD,MAAM,IAAI,YAAG,CAAgB,8BAA8B,CAAC,CAAC;aAC7D;YAED,OAAO,IAAI,CAAC,CAAC,CAAO,cAAc,CAAC,UAAU,CAAC,CAAC;QAChD,CAAC;QAEM,aAAa,CAAC,UAAkB;YACtC,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;gBACvD,MAAM,IAAI,YAAG,CAAgB,8BAA8B,CAAC,CAAC;aAC7D;YAED,OAAO,IAAI,CAAC,CAAC,CAAO,aAAa,CAAC,UAAU,CAAC,CAAC;QAC/C,CAAC;QAEM,eAAe;YACrB,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,IAAI,IAAI,CAAC,0BAA0B,EAAE,EAAE;gBACtC,MAAM,IAAI,YAAG,CAAgB,2CAA2C,CAAC,CAAC;aAC1E;YAED,OAAO,IAAI,CAAC,CAAC,CAAO,eAAe,EAAE,CAAC;QACvC,CAAC;QAEM,MAAM;YACZ,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE,CAAC;QAC9B,CAAC;QAEM,oBAAoB;YAC1B,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,CACN,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE,KAAK,IAAI;gBAC7B,CAAC;gBACD,CAAC,qCAA6B,CAC/B,CAAC;QACH,CAAC;QAEM,gBAAgB,CAAC,UAAkB;YACzC,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,OAAO,CAAC,CAAC;QACV,CAAC;QAEM,gBAAgB,CAAC,UAAkB;YACzC,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;gBACvD,MAAM,IAAI,YAAG,CAAgB,8BAA8B,CAAC,CAAC;aAC7D;YACD,OAAO,IAAI,CAAC,CAAC,CAAO,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACnD,CAAC;QAEM,+BAA+B,CAAC,UAAkB;YACxD,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;gBACvD,MAAM,IAAI,YAAG,CAAgB,8BAA8B,CAAC,CAAC;aAC7D;YACD,OAAO,IAAI,CAAC,CAAC,CAAO,+BAA+B,CAAC,UAAU,CAAC,CAAC;QACjE,CAAC;QAEM,8BAA8B,CAAC,UAAkB;YACvD,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;gBACvD,MAAM,IAAI,YAAG,CAAgB,8BAA8B,CAAC,CAAC;aAC7D;YACD,OAAO,IAAI,CAAC,CAAC,CAAO,8BAA8B,CAAC,UAAU,CAAC,CAAC;QAChE,CAAC;QAED;;;WAGG;QACI,kCAAkC,CAAC,KAAa;YACtD,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAO,YAAY,EAAE,CAAC;YAE/C,MAAM,sBAAsB,GAAG,KAAK,CAAC,eAAe,CAAC;YACrD,MAAM,kBAAkB,GAAG,KAAK,CAAC,WAAW,CAAC;YAC7C,IAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,sBAAsB,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9I,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,kBAAkB,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE9H,IAAI,eAAe,GAAG,CAAC,EAAE;gBACxB,eAAe,GAAG,CAAC,CAAC;gBACpB,WAAW,GAAG,CAAC,CAAC;aAChB;iBAAM,IAAI,eAAe,GAAG,UAAU,EAAE;gBACxC,eAAe,GAAG,UAAU,CAAC;gBAC7B,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;aACrD;iBAAM;gBACN,IAAI,WAAW,IAAI,CAAC,EAAE;oBACrB,WAAW,GAAG,CAAC,CAAC;iBAChB;qBAAM;oBACN,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;oBACzD,IAAI,WAAW,IAAI,SAAS,EAAE;wBAC7B,WAAW,GAAG,SAAS,CAAC;qBACxB;iBACD;aACD;YAED,MAAM,oBAAoB,GAAG,KAAK,CAAC,aAAa,CAAC;YACjD,MAAM,gBAAgB,GAAG,KAAK,CAAC,SAAS,CAAC;YACzC,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,oBAAoB,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtI,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,gBAAgB,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEtH,IAAI,aAAa,GAAG,CAAC,EAAE;gBACtB,aAAa,GAAG,CAAC,CAAC;gBAClB,SAAS,GAAG,CAAC,CAAC;aACd;iBAAM,IAAI,aAAa,GAAG,UAAU,EAAE;gBACtC,aAAa,GAAG,UAAU,CAAC;gBAC3B,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;aACjD;iBAAM;gBACN,IAAI,SAAS,IAAI,CAAC,EAAE;oBACnB,SAAS,GAAG,CAAC,CAAC;iBACd;qBAAM;oBACN,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;oBACvD,IAAI,SAAS,IAAI,SAAS,EAAE;wBAC3B,SAAS,GAAG,SAAS,CAAC;qBACtB;iBACD;aACD;YAED,IACC,sBAAsB,KAAK,eAAe;mBACvC,kBAAkB,KAAK,WAAW;mBAClC,oBAAoB,KAAK,aAAa;mBACtC,gBAAgB,KAAK,SAAS;mBAC9B,KAAK,YAAY,WAAG;mBACpB,CAAC,CAAC,KAAK,YAAY,eAAG,CAAO,EAC/B;gBACD,OAAO,KAAK,CAAC;aACb;YAED,OAAO,IAAI,WAAG,CAAG,eAAe,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;QAC1E,CAAC;QAEO,EAAE,CAAe,UAAkB,EAAE,MAAc,EAAE,cAA0C;YACtG,IAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBACjE,OAAO,KAAK,CAAC;aACb;YAED,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;gBACvC,OAAO,KAAK,CAAC;aACb;YAED,IAAI,UAAU,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;gBACjC,OAAO,KAAK,CAAC;aACb;YAED,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,UAAU,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,MAAM,EAAE;gBAC/D,OAAO,KAAK,CAAC;aACb;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAO,YAAY,EAAE,CAAC;YAC9C,IAAI,UAAU,GAAG,SAAS,EAAE;gBAC3B,OAAO,KAAK,CAAC;aACb;YAED,IAAI,MAAM,KAAK,CAAC,EAAE;gBACjB,OAAO,IAAI,CAAC;aACZ;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YACpD,IAAI,MAAM,GAAG,SAAS,EAAE;gBACvB,OAAO,KAAK,CAAC;aACb;YAED,IAAI,cAAc,sDAA8C,EAAE;gBACjE,8BAA8B;gBAC9B,MAAM,cAAc,GAAG,IAAI,CAAC,CAAC,CAAO,eAAe,CAAC,UAAU,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC5E,IAAI,OAAO,CAAC,GAAG,CAAa,cAAc,CAAC,EAAE;oBAC5C,OAAO,KAAK,CAAC;iBACb;aACD;YAED,OAAO,IAAI,CAAC;QACb,CAAC;QAEO,EAAE,CAAgB,WAAmB,EAAE,OAAe,EAAE,cAA0C;YACzG,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,WAAW,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1G,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,OAAO,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1F,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAO,YAAY,EAAE,CAAC;YAE9C,IAAI,UAAU,GAAG,CAAC,EAAE;gBACnB,OAAO,IAAI,cAAG,CAAM,CAAC,EAAE,CAAC,CAAC,CAAC;aAC1B;YAED,IAAI,UAAU,GAAG,SAAS,EAAE;gBAC3B,OAAO,IAAI,cAAG,CAAM,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;aACjE;YAED,IAAI,MAAM,IAAI,CAAC,EAAE;gBAChB,OAAO,IAAI,cAAG,CAAM,UAAU,EAAE,CAAC,CAAC,CAAC;aACnC;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YACpD,IAAI,MAAM,IAAI,SAAS,EAAE;gBACxB,OAAO,IAAI,cAAG,CAAM,UAAU,EAAE,SAAS,CAAC,CAAC;aAC3C;YAED,IAAI,cAAc,sDAA8C,EAAE;gBACjE,2EAA2E;gBAC3E,gCAAgC;gBAChC,8BAA8B;gBAC9B,MAAM,cAAc,GAAG,IAAI,CAAC,CAAC,CAAO,eAAe,CAAC,UAAU,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC5E,IAAI,OAAO,CAAC,GAAG,CAAa,cAAc,CAAC,EAAE;oBAC5C,OAAO,IAAI,cAAG,CAAM,UAAU,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;iBAC5C;aACD;YAED,OAAO,IAAI,cAAG,CAAM,UAAU,EAAE,MAAM,CAAC,CAAC;QACzC,CAAC;QAEM,gBAAgB,CAAC,QAAmB;YAC1C,MAAM,cAAc,oDAA4C,CAAC;YACjE,IAAI,CAAC,EAAE,EAAkB,CAAC;YAE1B,qDAAqD;YACrD,IAAI,QAAQ,YAAY,cAAG,EAAO;gBACjC,IAAI,IAAI,CAAC,EAAE,CAAe,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,cAAc,CAAC,EAAE;oBAChF,OAAO,QAAQ,CAAC;iBAChB;aACD;YAED,OAAO,IAAI,CAAC,EAAE,CAAgB,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;QACrF,CAAC;QAEO,EAAE,CAAY,KAAU,EAAI,cAA0C;YAC7E,MAAM,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;YAC9C,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;YACtC,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;YAC1C,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;YAElC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAe,eAAe,EAAE,WAAW,6CAAqC,EAAE;gBAC7F,OAAO,KAAK,CAAC;aACb;YACD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAe,aAAa,EAAE,SAAS,6CAAqC,EAAE;gBACzF,OAAO,KAAK,CAAC;aACb;YAED,IAAI,cAAc,sDAA8C,EAAE;gBACjE,MAAM,mBAAmB,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAO,eAAe,CAAC,eAAe,EAAE,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnH,MAAM,iBAAiB,GAAG,CAAC,SAAS,GAAG,CAAC,IAAI,SAAS,IAAI,IAAI,CAAC,CAAC,CAAO,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAO,eAAe,CAAC,aAAa,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAErK,MAAM,wBAAwB,GAAG,OAAO,CAAC,GAAG,CAAa,mBAAmB,CAAC,CAAC;gBAC9E,MAAM,sBAAsB,GAAG,OAAO,CAAC,GAAG,CAAa,iBAAiB,CAAC,CAAC;gBAE1E,IAAI,CAAC,wBAAwB,IAAI,CAAC,sBAAsB,EAAE;oBACzD,OAAO,IAAI,CAAC;iBACZ;gBACD,OAAO,KAAK,CAAC;aACb;YAED,OAAO,IAAI,CAAC;QACb,CAAC;QAEM,aAAa,CAAC,MAAc;YAClC,MAAM,cAAc,oDAA4C,CAAC;YACjE,IAAI,CAAC,EAAE,EAAkB,CAAC;YAE1B,qDAAqD;YACrD,IAAI,CAAC,MAAM,YAAY,WAAG,CAAG,IAAI,CAAC,CAAC,MAAM,YAAY,eAAG,CAAO,EAAE;gBAChE,IAAI,IAAI,CAAC,EAAE,CAAY,MAAM,EAAE,cAAc,CAAC,EAAE;oBAC/C,OAAO,MAAM,CAAC;iBACd;aACD;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAgB,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,WAAW,6CAAqC,CAAC;YACrH,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,CAAgB,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,SAAS,6CAAqC,CAAC;YAE/G,MAAM,eAAe,GAAG,KAAK,CAAC,UAAU,CAAC;YACzC,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;YACjC,MAAM,aAAa,GAAG,GAAG,CAAC,UAAU,CAAC;YACrC,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;YAE7B,IAAI,cAAc,sDAA8C,EAAE;gBACjE,MAAM,mBAAmB,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAO,eAAe,CAAC,eAAe,EAAE,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnH,MAAM,iBAAiB,GAAG,CAAC,SAAS,GAAG,CAAC,IAAI,SAAS,IAAI,IAAI,CAAC,CAAC,CAAO,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAO,eAAe,CAAC,aAAa,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAErK,MAAM,wBAAwB,GAAG,OAAO,CAAC,GAAG,CAAa,mBAAmB,CAAC,CAAC;gBAC9E,MAAM,sBAAsB,GAAG,OAAO,CAAC,GAAG,CAAa,iBAAiB,CAAC,CAAC;gBAE1E,IAAI,CAAC,wBAAwB,IAAI,CAAC,sBAAsB,EAAE;oBACzD,OAAO,IAAI,WAAG,CAAG,eAAe,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;iBACzE;gBAED,IAAI,eAAe,KAAK,aAAa,IAAI,WAAW,KAAK,SAAS,EAAE;oBACnE,sEAAsE;oBACtE,OAAO,IAAI,WAAG,CAAG,eAAe,EAAE,WAAW,GAAG,CAAC,EAAE,aAAa,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;iBACjF;gBAED,IAAI,wBAAwB,IAAI,sBAAsB,EAAE;oBACvD,4BAA4B;oBAC5B,OAAO,IAAI,WAAG,CAAG,eAAe,EAAE,WAAW,GAAG,CAAC,EAAE,aAAa,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;iBACjF;gBAED,IAAI,wBAAwB,EAAE;oBAC7B,iCAAiC;oBACjC,OAAO,IAAI,WAAG,CAAG,eAAe,EAAE,WAAW,GAAG,CAAC,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;iBAC7E;gBAED,+BAA+B;gBAC/B,OAAO,IAAI,WAAG,CAAG,eAAe,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;aAC7E;YAED,OAAO,IAAI,WAAG,CAAG,eAAe,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;QAC1E,CAAC;QAEM,cAAc,CAAC,WAAsB,EAAE,MAAc;YAC3D,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;YACzD,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAO,SAAS,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;QACvF,CAAC;QAEM,iBAAiB;YACvB,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,OAAO,IAAI,WAAG,CAAG,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;QACrE,CAAC;QAEO,EAAE,CAAoB,WAAgB,EAAI,UAAqB,EAAS,cAAuB,EAAE,gBAAwB;YAChI,OAAO,IAAI,CAAC,CAAC,CAAO,qBAAqB,CAAC,WAAW,EAAE,UAAU,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;QACtG,CAAC;QAEM,WAAW,CAAC,YAAoB,EAAE,cAAmB,EAAE,OAAgB,EAAE,SAAkB,EAAE,cAA6B,EAAE,cAAuB,EAAE,mBAA2B,gBAAgB;YACtM,IAAI,CAAC,EAAE,EAAkB,CAAC;YAE1B,IAAI,YAAY,GAAmB,IAAI,CAAC;YAExC,IAAI,cAAc,KAAK,IAAI,EAAE;gBAC5B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;oBACnC,cAAc,GAAG,CAAC,cAAc,CAAC,CAAC;iBAClC;gBAED,IAAI,cAAc,CAAC,KAAK,CAAC,CAAC,WAAgB,EAAI,EAAE,CAAC,WAAG,CAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE;oBAC9E,YAAY,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,WAAgB,EAAI,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;iBAC3F;aACD;YAED,IAAI,YAAY,KAAK,IAAI,EAAE;gBAC1B,YAAY,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;aAC1C;YAED,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,eAAe,GAAG,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;YAEzH,MAAM,kBAAkB,GAAY,EAAE,CAAC;YACvC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;gBAC1D,IAAI,WAAG,CAAG,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;oBACtC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;iBAC5B;gBAED,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,OAAO,IAAI,CAAC;YACb,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,WAA+E,CAAC;YACpF,IAAI,CAAC,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAC/C,4BAA4B;gBAC5B,MAAM,YAAY,GAAG,IAAI,qBAAG,CAAU,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;gBACxF,MAAM,UAAU,GAAG,YAAY,CAAC,kBAAkB,EAAE,CAAC;gBAErD,IAAI,CAAC,UAAU,EAAE;oBAChB,OAAO,EAAE,CAAC;iBACV;gBAED,WAAW,GAAG,CAAC,WAAgB,EAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAoB,WAAW,EAAE,UAAU,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;aAC5H;iBAAM;gBACN,WAAW,GAAG,CAAC,WAAgB,EAAI,EAAE,CAAC,qBAAG,CAAa,WAAW,CAAC,IAAI,EAAE,IAAI,qBAAG,CAAU,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc,CAAC,EAAE,WAAW,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;aAC3L;YAED,OAAO,kBAAkB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAA0B,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;QACjH,CAAC;QAEM,aAAa,CAAC,YAAoB,EAAE,cAAyB,EAAE,OAAgB,EAAE,SAAkB,EAAE,cAAsB,EAAE,cAAuB;YAC1J,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;YAE1D,IAAI,CAAC,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAC/C,MAAM,YAAY,GAAG,IAAI,qBAAG,CAAU,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;gBACxF,MAAM,UAAU,GAAG,YAAY,CAAC,kBAAkB,EAAE,CAAC;gBACrD,IAAI,CAAC,UAAU,EAAE;oBAChB,OAAO,IAAI,CAAC;iBACZ;gBAED,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;gBACtC,IAAI,WAAW,GAAG,IAAI,WAAG,CAAG,WAAW,CAAC,UAAU,EAAE,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrH,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAoB,WAAW,EAAE,UAAU,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;gBACjF,qBAAG,CAAa,aAAa,CAAC,IAAI,EAAE,IAAI,qBAAG,CAAU,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc,CAAC,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;gBACrI,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnB,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;iBACd;gBAED,WAAW,GAAG,IAAI,WAAG,CAAG,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAoB,WAAW,EAAE,UAAU,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;gBAE7E,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnB,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;iBACd;gBAED,OAAO,IAAI,CAAC;aACZ;YAED,OAAO,qBAAG,CAAa,aAAa,CAAC,IAAI,EAAE,IAAI,qBAAG,CAAU,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc,CAAC,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;QAC7I,CAAC;QAEM,iBAAiB,CAAC,YAAoB,EAAE,cAAyB,EAAE,OAAgB,EAAE,SAAkB,EAAE,cAAsB,EAAE,cAAuB;YAC9J,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;YAC1D,OAAO,qBAAG,CAAa,iBAAiB,CAAC,IAAI,EAAE,IAAI,qBAAG,CAAU,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc,CAAC,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;QACjJ,CAAC;QAED,YAAY;QAEZ,iBAAiB;QAEV,gBAAgB;YACtB,IAAI,CAAC,CAAC,CAAe,gBAAgB,EAAE,CAAC;QACzC,CAAC;QAEM,eAAe;YACrB,IAAI,CAAC,CAAC,CAAe,eAAe,EAAE,CAAC;QACxC,CAAC;QAEM,OAAO,CAAC,GAA4B;YAC1C,MAAM,UAAU,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,CAAC,oCAA4B,CAAC,qCAA6B,CAAC,CAAC;YACxG,IAAI,UAAU,KAAK,GAAG,EAAE;gBACvB,OAAO;aACP;YACD,IAAI;gBACH,IAAI,CAAC,CAAC,CAAuB,iBAAiB,EAAE,CAAC;gBACjD,IAAI,CAAC,CAAC,CAAa,iBAAiB,EAAE,CAAC;gBACvC,IAAI,IAAI,CAAC,CAAC,KAA4B,IAAI,EAAE;oBAC3C,IAAI,CAAC,CAAC,GAA0B,IAAI,CAAC,EAAE,CAAe,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC/E;gBACD,IAAI,CAAC,CAAC,CAAe,OAAO,CAAC,GAAG,CAAC,CAAC;aAClC;oBAAS;gBACT,IAAI,CAAC,CAAC,CAAa,eAAe,EAAE,CAAC;gBACrC,IAAI,CAAC,CAAC,CAAuB,eAAe,EAAE,CAAC;aAC/C;QACF,CAAC;QAEO,EAAE,CAAqB,YAAkD;YAChF,IAAI,YAAY,YAAY,KAAK,CAAC,GAAG,EAA0B;gBAC9D,OAAO,YAAY,CAAC;aACpB;YACD,OAAO,IAAI,KAAK,CAAC,GAAG,CACnB,YAAY,CAAC,UAAU,IAAI,IAAI,EAC/B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,EACtC,YAAY,CAAC,IAAI,EACjB,YAAY,CAAC,gBAAgB,IAAI,KAAK,EACtC,YAAY,CAAC,oBAAoB,IAAI,KAAK,EAC1C,YAAY,CAAC,UAAU,IAAI,KAAK,CAChC,CAAC;QACH,CAAC;QAEO,EAAE,CAAsB,aAAqD;YACpF,MAAM,MAAM,GAAwC,EAAE,CAAC;YACvD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBACzD,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAqB,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1D;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAEM,kBAAkB,CAAC,iBAAqC,EAAE,cAAsD,EAAE,mBAAsD,EAAE,KAAW;YAC3L,IAAI;gBACH,IAAI,CAAC,CAAC,CAAuB,iBAAiB,EAAE,CAAC;gBACjD,IAAI,CAAC,CAAC,CAAa,iBAAiB,EAAE,CAAC;gBACvC,OAAO,IAAI,CAAC,EAAE,CAAkB,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAsB,cAAc,CAAC,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;aAC7H;oBAAS;gBACT,IAAI,CAAC,CAAC,CAAa,eAAe,EAAE,CAAC;gBACrC,IAAI,CAAC,CAAC,CAAuB,eAAe,EAAE,CAAC;aAC/C;QACF,CAAC;QAEO,EAAE,CAAkB,iBAAqC,EAAE,cAAmD,EAAE,mBAAsD,EAAE,KAAW;YAC1L,IAAI,IAAI,CAAC,CAAC,CAAQ,kBAAkB,IAAI,IAAI,CAAC,CAAC,EAAyB;gBACtE,sEAAsE;gBACtE,0DAA0D;gBAE1D,MAAM,aAAa,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE;oBAC/C,OAAO;wBACN,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC;wBACnC,IAAI,EAAE,EAAE,CAAC,IAAI;qBACb,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEH,4HAA4H;gBAC5H,8GAA8G;gBAC9G,IAAI,mBAAmB,GAAG,IAAI,CAAC;gBAC/B,IAAI,iBAAiB,EAAE;oBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;wBAC7D,MAAM,GAAG,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;wBACjC,IAAI,gBAAgB,GAAG,KAAK,CAAC;wBAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;4BAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;4BACzC,MAAM,UAAU,GAAG,SAAS,CAAC,eAAe,GAAG,GAAG,CAAC,aAAa,CAAC;4BACjE,MAAM,UAAU,GAAG,GAAG,CAAC,eAAe,GAAG,SAAS,CAAC,aAAa,CAAC;4BACjE,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,EAAE;gCAC/B,gBAAgB,GAAG,IAAI,CAAC;gCACxB,MAAM;6BACN;yBACD;wBACD,IAAI,CAAC,gBAAgB,EAAE;4BACtB,mBAAmB,GAAG,KAAK,CAAC;4BAC5B,MAAM;yBACN;qBACD;iBACD;gBAED,IAAI,mBAAmB,EAAE;oBACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC,CAAwB,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;wBACzE,MAAM,cAAc,GAAG,IAAI,CAAC,CAAC,CAAwB,CAAC,CAAC,CAAC;wBACxD,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;wBAE5D,IAAI,aAAa,GAAG,IAAI,CAAC;wBACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;4BAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;4BACzC,MAAM,QAAQ,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;4BAEvC,IAAI,cAAc,GAAG,SAAS,CAAC,eAAe,IAAI,cAAc,GAAG,SAAS,CAAC,aAAa,EAAE;gCAC3F,6CAA6C;gCAC7C,SAAS;6BACT;4BAED,iBAAiB;4BACjB,qEAAqE;4BAErE,IACC,cAAc,KAAK,SAAS,CAAC,eAAe,IAAI,SAAS,CAAC,WAAW,KAAK,aAAa;mCACpF,SAAS,CAAC,OAAO,EAAE,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,EACvF;gCACD,uEAAuE;gCACvE,SAAS;6BACT;4BAED,IACC,cAAc,KAAK,SAAS,CAAC,eAAe,IAAI,SAAS,CAAC,WAAW,KAAK,CAAC;mCACxE,SAAS,CAAC,OAAO,EAAE,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,EACzG;gCACD,wEAAwE;gCACxE,SAAS;6BACT;4BAED,iFAAiF;4BACjF,aAAa,GAAG,KAAK,CAAC;4BACtB,MAAM;yBACN;wBAED,IAAI,aAAa,EAAE;4BAClB,MAAM,SAAS,GAAG,IAAI,WAAG,CAAG,cAAc,EAAE,CAAC,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC;4BAC9E,cAAc,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,CAAyB,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;yBACvG;qBAED;iBACD;gBAED,IAAI,CAAC,CAAC,GAA0B,IAAI,CAAC;aACrC;YACD,IAAI,IAAI,CAAC,CAAC,KAA4B,IAAI,EAAE;gBAC3C,IAAI,CAAC,CAAC,GAA0B,IAAI,CAAC,EAAE,CAAe,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC/E;YACD,OAAO,IAAI,CAAC,CAAC,CAAe,iBAAiB,CAAC,iBAAiB,EAAE,cAAc,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;QAC9G,CAAC;QAED,UAAU,CAAC,OAAqB,EAAE,GAA4B,EAAE,6BAAqC,EAAE,kBAAsC;YAC5I,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAuB,CAAC,MAAM,EAAE,EAAE;gBAC1D,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBAC1D,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACnD,OAAO;oBACN,KAAK,EAAE,IAAI,WAAG,CAAG,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC;oBAChG,IAAI,EAAE,MAAM,CAAC,OAAO;iBACpB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,EAAE,CAAkB,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,6BAA6B,EAAE,kBAAkB,CAAC,CAAC;QACtG,CAAC;QAED,UAAU,CAAC,OAAqB,EAAE,GAA4B,EAAE,6BAAqC,EAAE,kBAAsC;YAC5I,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAuB,CAAC,MAAM,EAAE,EAAE;gBAC1D,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBAC1D,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACnD,OAAO;oBACN,KAAK,EAAE,IAAI,WAAG,CAAG,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC;oBAChG,IAAI,EAAE,MAAM,CAAC,OAAO;iBACpB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,EAAE,CAAkB,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,6BAA6B,EAAE,kBAAkB,CAAC,CAAC;QACtG,CAAC;QAEO,EAAE,CAAkB,KAA6B,EAAE,GAA4B,EAAE,SAAkB,EAAE,SAAkB,EAAE,6BAAqC,EAAE,kBAAsC;YAC7M,IAAI;gBACH,IAAI,CAAC,CAAC,CAAuB,iBAAiB,EAAE,CAAC;gBACjD,IAAI,CAAC,CAAC,CAAa,iBAAiB,EAAE,CAAC;gBACvC,IAAI,CAAC,CAAC,GAAY,SAAS,CAAC;gBAC5B,IAAI,CAAC,CAAC,GAAY,SAAS,CAAC;gBAC5B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,CAAC;aACnE;oBAAS;gBACT,IAAI,CAAC,CAAC,GAAY,KAAK,CAAC;gBACxB,IAAI,CAAC,CAAC,GAAY,KAAK,CAAC;gBACxB,IAAI,CAAC,CAAC,CAAa,eAAe,CAAC,kBAAkB,CAAC,CAAC;gBACvD,IAAI,CAAC,CAAC,CAAuB,eAAe,EAAE,CAAC;aAC/C;QACF,CAAC;QAKM,UAAU,CAAC,aAAqD,EAAE,mBAA4B,KAAK;YACzG,IAAI;gBACH,IAAI,CAAC,CAAC,CAAuB,iBAAiB,EAAE,CAAC;gBACjD,IAAI,CAAC,CAAC,CAAa,iBAAiB,EAAE,CAAC;gBACvC,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,CAAsB,aAAa,CAAC,CAAC;gBAC/D,OAAO,IAAI,CAAC,EAAE,CAAY,UAAU,EAAE,gBAAgB,CAAC,CAAC;aACxD;oBAAS;gBACT,IAAI,CAAC,CAAC,CAAa,eAAe,EAAE,CAAC;gBACrC,IAAI,CAAC,CAAC,CAAuB,eAAe,EAAE,CAAC;aAC/C;QACF,CAAC;QAEO,EAAE,CAAY,aAAkD,EAAE,gBAAyB;YAElG,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAO,YAAY,EAAE,CAAC;YACjD,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAO,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAQ,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;YAC1G,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAO,YAAY,EAAE,CAAC;YAEjD,MAAM,cAAc,GAAG,MAAM,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,CAAC,GAA0B,MAAM,CAAC,6BAA6B,CAAC;YAErE,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,2CAA2C;gBAC3C,yDAAyD;gBACzD,2CAA2C;gBAC3C,4CAA4C;gBAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;oBAC1D,MAAM,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;oBACjC,IAAI,CAAC,CAAC,CAAgB,aAAa,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC;iBACzH;gBAED,MAAM,iBAAiB,GAAqB,EAAE,CAAC;gBAE/C,IAAI,CAAC,EAAE,EAAkB,CAAC;gBAE1B,IAAI,SAAS,GAAG,YAAY,CAAC;gBAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;oBAC1D,MAAM,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;oBACjC,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAA,gBAAG,EAAM,MAAM,CAAC,IAAI,CAAC,CAAC;oBACzC,IAAI,CAAC,CAAC,CAAuB,IAAI,EAAE,CAAC;oBAEpC,MAAM,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC;oBACrD,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC;oBAEjD,MAAM,gBAAgB,GAAG,aAAa,GAAG,eAAe,CAAC;oBACzD,MAAM,iBAAiB,GAAG,QAAQ,CAAC;oBACnC,MAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;oBAEtE,MAAM,oBAAoB,GAAG,CAAC,iBAAiB,GAAG,gBAAgB,CAAC,CAAC;oBAEpE,MAAM,0BAA0B,GAAG,YAAY,GAAG,SAAS,GAAG,oBAAoB,GAAG,eAAe,CAAC;oBACrG,MAAM,mBAAmB,GAAG,0BAA0B,CAAC;oBACvD,MAAM,sBAAsB,GAAG,0BAA0B,GAAG,iBAAiB,CAAC;oBAE9E,MAAM,wCAAwC,GAAG,IAAI,CAAC,CAAC,CAAgB,yBAAyB,CAC/F,IAAI,EACJ,IAAI,CAAC,WAAW,CAAC,IAAI,cAAG,CAAM,mBAAmB,EAAE,CAAC,CAAC,CAAC,EACtD,IAAI,CAAC,WAAW,CAAC,IAAI,cAAG,CAAM,sBAAsB,EAAE,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,CAAC,CAAC,EACrG,CAAC,CACD,CAAC;oBAGF,MAAM,yBAAyB,GAAG,qBAAG,CAAc,eAAe,CAAC,wCAAwC,CAAC,CAAC;oBAC7G,MAAM,8BAA8B,GAAG,IAAI,YAAG,CAAQ,yBAAyB,CAAC,CAAC;oBAEjF,KAAK,IAAI,CAAC,GAAG,eAAe,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC1C,MAAM,cAAc,GAAG,eAAe,GAAG,CAAC,CAAC;wBAC3C,MAAM,qBAAqB,GAAG,0BAA0B,GAAG,CAAC,CAAC;wBAE7D,8BAA8B,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,GAAG,qBAAqB,CAAC,CAAC;wBAC3F,MAAM,wBAAwB,GAAG,8BAA8B,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,qBAAqB,CAAC,CAAC;wBAE9H,iBAAiB,CAAC,IAAI,CACrB,IAAI,qBAAG,CACN,cAAc,EACd,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,EAC1C,wBAAwB,CACxB,CAAC,CAAC;qBACJ;oBAED,IAAI,eAAe,GAAG,gBAAgB,EAAE;wBACvC,yBAAyB;wBACzB,MAAM,qBAAqB,GAAG,eAAe,GAAG,eAAe,CAAC;wBAChE,iBAAiB,CAAC,IAAI,CAAC,IAAI,qBAAG,CAAkB,qBAAqB,GAAG,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC;qBAC3F;oBAED,IAAI,eAAe,GAAG,iBAAiB,EAAE;wBACxC,MAAM,8BAA8B,GAAG,IAAI,YAAG,CAAQ,yBAAyB,CAAC,CAAC;wBACjF,yBAAyB;wBACzB,MAAM,gBAAgB,GAAG,eAAe,GAAG,eAAe,CAAC;wBAC3D,MAAM,GAAG,GAAG,iBAAiB,GAAG,eAAe,CAAC;wBAChD,MAAM,cAAc,GAAG,YAAY,GAAG,SAAS,GAAG,GAAG,GAAG,gBAAgB,GAAG,CAAC,CAAC;wBAC7E,MAAM,aAAa,GAAkC,EAAE,CAAC;wBACxD,MAAM,QAAQ,GAAa,EAAE,CAAC;wBAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;4BAC7B,MAAM,UAAU,GAAG,cAAc,GAAG,CAAC,CAAC;4BACtC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;4BAE9C,8BAA8B,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC;4BACzE,aAAa,CAAC,CAAC,CAAC,GAAG,8BAA8B,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC;yBAC9F;wBAED,iBAAiB,CAAC,IAAI,CACrB,IAAI,qBAAG,CACN,gBAAgB,GAAG,CAAC,EACpB,eAAe,GAAG,iBAAiB,EACnC,QAAQ,EACR,aAAa,CACb,CACD,CAAC;qBACF;oBAED,SAAS,IAAI,oBAAoB,CAAC;iBAClC;gBAED,IAAI,CAAC,EAAE,CACN,IAAI,qBAAG,CACN,iBAAiB,EACjB,IAAI,CAAC,YAAY,EAAE,EACnB,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,CACN,EACD;oBACC,OAAO,EAAE,cAAc;oBACvB,GAAG,EAAE,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE;oBAC1B,WAAW,EAAE,KAAK;oBAClB,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE;oBAC9B,SAAS,EAAE,IAAI,CAAC,CAAC;oBACjB,SAAS,EAAE,IAAI,CAAC,CAAC;oBACjB,OAAO,EAAE,KAAK;iBACd,CACD,CAAC;aACF;YAED,OAAO,CAAC,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACzE,CAAC;QAEM,IAAI;YACV,OAAO,IAAI,CAAC,EAAE,CAAe,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7C,CAAC;QAEM,OAAO;YACb,OAAO,IAAI,CAAC,EAAE,CAAe,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChD,CAAC;QAEM,IAAI;YACV,OAAO,IAAI,CAAC,EAAE,CAAe,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7C,CAAC;QAEM,OAAO;YACb,OAAO,IAAI,CAAC,EAAE,CAAe,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChD,CAAC;QAED,YAAY;QAEZ,qBAAqB;QAEb,EAAE,CAAsC,yBAA6C;YAC5F,+DAA+D;YAE/D,IAAI,yBAAyB,KAAK,IAAI,IAAI,yBAAyB,CAAC,IAAI,KAAK,CAAC,EAAE;gBAC/E,OAAO;aACP;YAED,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC5D,MAAM,gBAAgB,GAAG,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,qBAAG,CAAiB,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,EAAE,CAAqB,UAAU,CAAC,CAAC,CAAC,CAAC;YAExK,IAAI,CAAC,CAAC,CAAwB,IAAI,CAAC,IAAI,qBAAG,CAA2B,gBAAgB,CAAC,CAAC,CAAC;QACzF,CAAC;QAEM,iBAAiB,CAAI,QAAsE,EAAE,UAAkB,CAAC;YACtH,IAAI,CAAC,EAAE,EAAkB,CAAC;YAE1B,IAAI;gBACH,IAAI,CAAC,CAAC,CAAuB,iBAAiB,EAAE,CAAC;gBACjD,OAAO,IAAI,CAAC,EAAE,CAAiB,OAAO,EAAE,QAAQ,CAAC,CAAC;aAClD;oBAAS;gBACT,IAAI,CAAC,CAAC,CAAuB,eAAe,EAAE,CAAC;aAC/C;QACF,CAAC;QAEO,EAAE,CAAoB,OAAe,EAAE,QAAsE;YACpH,MAAM,cAAc,GAA0C;gBAC7D,aAAa,EAAE,CAAC,KAAa,EAAE,OAAsC,EAAU,EAAE;oBAChF,OAAO,IAAI,CAAC,EAAE,CAAoB,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzF,CAAC;gBACD,gBAAgB,EAAE,CAAC,EAAU,EAAE,QAAgB,EAAQ,EAAE;oBACxD,IAAI,CAAC,EAAE,CAAoB,EAAE,EAAE,QAAQ,CAAC,CAAC;gBAC1C,CAAC;gBACD,uBAAuB,EAAE,CAAC,EAAU,EAAE,OAAsC,EAAE,EAAE;oBAC/E,IAAI,CAAC,EAAE,CAA2B,EAAE,EAAE,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;gBACnE,CAAC;gBACD,gBAAgB,EAAE,CAAC,EAAU,EAAQ,EAAE;oBACtC,IAAI,CAAC,EAAE,CAAoB,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC/C,CAAC;gBACD,gBAAgB,EAAE,CAAC,cAAwB,EAAE,cAA6C,EAAY,EAAE;oBACvG,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC/D,gBAAgB;wBAChB,OAAO,EAAE,CAAC;qBACV;oBACD,OAAO,IAAI,CAAC,EAAE,CAAoB,OAAO,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;gBAC5E,CAAC;aACD,CAAC;YACF,IAAI,MAAM,GAAa,IAAI,CAAC;YAC5B,IAAI;gBACH,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC;aAClC;YAAC,OAAO,CAAC,EAAE;gBACX,IAAA,WAAE,EAAgB,CAAC,CAAC,CAAC;aACrB;YACD,6BAA6B;YAC7B,cAAc,CAAC,aAAa,GAAG,WAAW,CAAC;YAC3C,cAAc,CAAC,gBAAgB,GAAG,WAAW,CAAC;YAC9C,cAAc,CAAC,uBAAuB,GAAG,WAAW,CAAC;YACrD,cAAc,CAAC,gBAAgB,GAAG,WAAW,CAAC;YAC9C,cAAc,CAAC,gBAAgB,GAAG,WAAW,CAAC;YAC9C,OAAO,MAAM,CAAC;QACf,CAAC;QAEM,gBAAgB,CAAC,cAAwB,EAAE,cAA6C,EAAE,UAAkB,CAAC;YACnH,IAAI,CAAC,EAAE,EAAkB,CAAC;YAC1B,IAAI,CAAC,cAAc,EAAE;gBACpB,cAAc,GAAG,EAAE,CAAC;aACpB;YACD,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC/D,gBAAgB;gBAChB,OAAO,EAAE,CAAC;aACV;YAED,IAAI;gBACH,IAAI,CAAC,CAAC,EAAwB,CAAC;gBAC/B,IAAI,IAAI,CAAC,CAAC,GAAyB,CAAC,EAAE;oBACrC,OAAO,CAAC,IAAI,CAAC,0EAA0E,CAAC,CAAC;oBACzF,IAAA,WAAE,EAAgB,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC,CAAC;iBACzG;gBACD,IAAI,CAAC,CAAC,CAAuB,iBAAiB,EAAE,CAAC;gBACjD,OAAO,IAAI,CAAC,EAAE,CAAoB,OAAO,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;aAC3E;oBAAS;gBACT,IAAI,CAAC,CAAC,CAAuB,eAAe,EAAE,CAAC;gBAC/C,IAAI,CAAC,CAAC,EAAwB,CAAC;aAC/B;QACF,CAAC;QAED,gBAAgB,CAAC,EAAU;YAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;QACpC,CAAC;QAID,gBAAgB,CAAC,EAAiB,EAAE,QAAsB,EAAE,aAA2C;YACtG,MAAM,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAY,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAEjD,IAAI,CAAC,IAAI,EAAE;gBACV,IAAI,CAAC,QAAQ,EAAE;oBACd,gEAAgE;oBAChE,OAAO,IAAI,CAAC;iBACZ;gBACD,qEAAqE;gBACrE,OAAO,IAAI,CAAC,EAAE,CAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,qBAAqB,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aACxH;YAED,IAAI,CAAC,QAAQ,EAAE;gBACd,uDAAuD;gBACvD,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,CAAC,CAAC;gBACnC,OAAO,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,EAAE,CAAC,CAAC;gBAClC,OAAO,IAAI,CAAC;aACZ;YAED,iFAAiF;YACjF,MAAM,KAAK,GAAG,IAAI,CAAC,kCAAkC,CAAC,QAAQ,CAAC,CAAC;YAChE,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;YACvF,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;YACjF,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YAC/D,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC,EAAE,CAAC;QAChB,CAAC;QAEM,+BAA+B,CAAC,OAAe;YACrD,IAAI,IAAI,CAAC,CAAC,EAAY;gBACrB,OAAO;aACP;YACD,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAgB,qBAAqB,CAAC,OAAO,CAAC,CAAC;YACnE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBACjD,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAEtB,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,CAAC,CAAC;gBACnC,OAAO,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,EAAE,CAAC,CAAC;aAClC;QACF,CAAC;QAEM,oBAAoB,CAAC,YAAoB;YAC/C,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAY,YAAY,CAAC,CAAC;YAC7C,IAAI,CAAC,IAAI,EAAE;gBACV,OAAO,IAAI,CAAC;aACZ;YACD,OAAO,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QAEM,kBAAkB,CAAC,YAAoB;YAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAY,YAAY,CAAC,CAAC;YAC7C,IAAI,CAAC,IAAI,EAAE;gBACV,OAAO,IAAI,CAAC;aACZ;YACD,OAAO,IAAI,CAAC,CAAC,CAAgB,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACvD,CAAC;QAEM,kBAAkB,CAAC,UAAkB,EAAE,UAAkB,CAAC,EAAE,sBAA+B,KAAK;YACtG,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE;gBACvD,OAAO,EAAE,CAAC;aACV;YACD,OAAO,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;QACvF,CAAC;QAEM,mBAAmB,CAAC,gBAAwB,EAAE,cAAsB,EAAE,UAAkB,CAAC,EAAE,sBAA+B,KAAK,EAAE,wBAAiC,KAAK;YAC7K,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,MAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC;YAC3E,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC;YACvE,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;YACvD,MAAM,KAAK,GAAG,IAAI,WAAG,CAAG,eAAe,EAAE,CAAC,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;YAEtE,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,CAAqB,KAAK,EAAE,OAAO,EAAE,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;YAC5G,IAAA,YAAG,EAAM,WAAW,EAAE,IAAI,CAAC,EAAE,CAAkB,qBAAqB,CAAC,KAAK,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC,CAAC;YAC3G,OAAO,WAAW,CAAC;QACpB,CAAC;QAEM,qBAAqB,CAAC,KAAa,EAAE,UAAkB,CAAC,EAAE,sBAA+B,KAAK,EAAE,yBAAkC,KAAK,EAAE,wBAAiC,KAAK;YACrL,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAEjD,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,CAAqB,cAAc,EAAE,OAAO,EAAE,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;YACrH,IAAA,YAAG,EAAM,WAAW,EAAE,IAAI,CAAC,EAAE,CAAkB,qBAAqB,CAAC,cAAc,EAAE,OAAO,EAAE,mBAAmB,EAAE,sBAAsB,CAAC,CAAC,CAAC;YAC5I,OAAO,WAAW,CAAC;QACpB,CAAC;QAEM,2BAA2B,CAAC,UAAkB,CAAC,EAAE,sBAA+B,KAAK;YAC3F,OAAO,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,mBAAmB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACtF,CAAC;QAEM,0BAA0B,CAAC,UAAkB,CAAC;YACpD,OAAO,IAAI,CAAC,CAAC,CAAgB,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAChE,CAAC;QAEO,EAAE,CAAqB,UAAkB;YAChD,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAC5D,MAAM,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,CAAC,CAAO,aAAa,CAAC,UAAU,CAAC,CAAC;YAEvE,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAgB,yBAAyB,CAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YAChG,OAAO,qBAAG,CAAc,eAAe,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC;QAC1F,CAAC;QAEM,iBAAiB,CAAC,UAAkB,CAAC,EAAE,sBAA+B,KAAK;YACjF,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,mBAAmB,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAC5F,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAkB,iBAAiB,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC,CAAC;YACjG,OAAO,MAAM,CAAC;QACf,CAAC;QAEM,uBAAuB,CAAC,UAAkB,CAAC;YACjD,OAAO,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACxE,CAAC;QAEO,EAAE,CAAqB,WAAgB,EAAI,aAAqB,EAAE,mBAA4B,EAAE,qBAA8B;YACrI,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,WAAW,CAAC,eAAe,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;YACnG,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC;YAC7F,OAAO,IAAI,CAAC,CAAC,CAAgB,gBAAgB,CAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;QACxI,CAAC;QAEM,UAAU,CAAC,KAAa,EAAE,GAAW;YAC3C,OAAO,IAAI,CAAC,CAAC,CAAO,UAAU,CAAC,KAAK,EAAE,GAAG,GAAG,KAAK,CAAC,CAAC;QACpD,CAAC;QAEO,EAAE,CAAoB,YAAoB,EAAE,MAAc;YACjE,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAY,YAAY,CAAC,CAAC;YAC7C,IAAI,CAAC,IAAI,EAAE;gBACV,OAAO;aACP;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;gBACvD,IAAI,CAAC,CAAC,CAAuB,gCAAgC,CAAC,QAAS,CAAC,aAAa,CAAC,CAAC;aACvF;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;gBACvD,IAAI,CAAC,CAAC,CAAuB,gCAAgC,CAAC,QAAS,CAAC,eAAe,CAAC,CAAC;aACzF;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,kCAAkC,CAAC,MAAM,CAAC,CAAC;YAC9D,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;YACvF,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;YAEjF,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YAC/D,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,CAAC,CAAuB,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEhE,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBACvB,IAAI,CAAC,CAAC,CAAuB,gCAAgC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;aACnF;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,CAAC,CAAuB,gCAAgC,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;aACrF;QACF,CAAC;QAEO,EAAE,CAA2B,YAAoB,EAAE,OAAY;YACtE,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAY,YAAY,CAAC,CAAC;YAC7C,IAAI,CAAC,IAAI,EAAE;gBACV,OAAO;aACP;YAED,MAAM,sBAAsB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC/G,MAAM,qBAAqB,GAAG,CAAC,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAEpG,IAAI,CAAC,CAAC,CAAuB,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAChE,IAAI,CAAC,CAAC,CAAuB,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAE3D,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,EAAE;gBACxC,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAgB,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACjE,IAAI,CAAC,CAAC,CAAuB,gCAAgC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;aACvF;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE;gBAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAgB,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACjE,IAAI,CAAC,CAAC,CAAuB,gCAAgC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACzF;YAED,IAAI,sBAAsB,KAAK,qBAAqB,EAAE;gBACrD,yDAAyD;gBACzD,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,CAAC,CAAC;gBACnC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBACzB,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,CAAC,CAAC;aACnC;iBAAM;gBACN,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aACzB;QACF,CAAC;QAEO,EAAE,CAAoB,OAAe,EAAE,iBAA2B,EAAE,cAA6C,EAAE,iBAA0B,KAAK;YACzJ,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAEtC,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,CAAC;YACnD,IAAI,kBAAkB,GAAG,CAAC,CAAC;YAE3B,MAAM,iBAAiB,GAAG,cAAc,CAAC,MAAM,CAAC;YAChD,IAAI,kBAAkB,GAAG,CAAC,CAAC;YAE3B,IAAI,CAAC,CAAC,CAAuB,iBAAiB,EAAE,CAAC;YACjD,IAAI;gBACH,MAAM,MAAM,GAAG,IAAI,KAAK,CAAS,iBAAiB,CAAC,CAAC;gBACpD,OAAO,kBAAkB,GAAG,iBAAiB,IAAI,kBAAkB,GAAG,iBAAiB,EAAE;oBAExF,IAAI,IAAI,GAAwB,IAAI,CAAC;oBAErC,IAAI,kBAAkB,GAAG,iBAAiB,EAAE;wBAC3C,gCAAgC;wBAChC,GAAG;4BACF,IAAI,GAAG,IAAI,CAAC,CAAC,CAAY,iBAAiB,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;yBAClE,QAAQ,CAAC,IAAI,IAAI,kBAAkB,GAAG,iBAAiB,EAAE;wBAE1D,mDAAmD;wBACnD,IAAI,IAAI,EAAE;4BACT,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gCACvB,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAgB,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gCACjE,IAAI,CAAC,CAAC,CAAuB,gCAAgC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;6BACvF;4BACD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gCACxB,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAgB,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gCACjE,IAAI,CAAC,CAAC,CAAuB,gCAAgC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;6BACzF;4BAED,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,CAAC,CAAC;4BAEnC,IAAI,CAAC,cAAc,EAAE;gCACpB,IAAI,CAAC,CAAC,CAAuB,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6BAChE;yBACD;qBACD;oBAED,IAAI,kBAAkB,GAAG,iBAAiB,EAAE;wBAC3C,qCAAqC;wBACrC,IAAI,CAAC,IAAI,EAAE;4BACV,MAAM,oBAAoB,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAiB,CAAC;4BACxD,MAAM,YAAY,GAAG,GAAG,IAAI,CAAC,CAAC,IAAc,oBAAoB,EAAE,CAAC;4BACnE,IAAI,GAAG,IAAI,kBAAG,CAAU,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;4BAC5C,IAAI,CAAC,CAAC,CAAY,YAAY,CAAC,GAAG,IAAI,CAAC;yBACvC;wBAED,sBAAsB;wBACtB,MAAM,aAAa,GAAG,cAAc,CAAC,kBAAkB,CAAC,CAAC;wBACzD,MAAM,KAAK,GAAG,IAAI,CAAC,kCAAkC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;wBAC3E,MAAM,OAAO,GAAG,iBAAiB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;wBACzD,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;wBACvF,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;wBAEjF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;wBACvB,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;wBACrD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;wBAEzB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;4BACvB,IAAI,CAAC,CAAC,CAAuB,gCAAgC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;yBACnF;wBACD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;4BACxB,IAAI,CAAC,CAAC,CAAuB,gCAAgC,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;yBACrF;wBAED,IAAI,CAAC,cAAc,EAAE;4BACpB,IAAI,CAAC,CAAC,CAAuB,oBAAoB,CAAC,OAAO,CAAC,CAAC;yBAC3D;wBAED,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,IAAI,CAAC,CAAC;wBAEnC,MAAM,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;wBAErC,kBAAkB,EAAE,CAAC;qBACrB;yBAAM;wBACN,IAAI,IAAI,EAAE;4BACT,OAAO,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,EAAE,CAAC,CAAC;yBAClC;qBACD;iBACD;gBAED,OAAO,MAAM,CAAC;aACd;oBAAS;gBACT,IAAI,CAAC,CAAC,CAAuB,eAAe,EAAE,CAAC;aAC/C;QACF,CAAC;QAED,YAAY;QAEZ,sBAAsB;QAEtB,2CAA2C;QACpC,aAAa;YACnB,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;QAC1C,CAAC;QAEM,WAAW,CAAC,qBAAkD,EAAE,MAAe;YACrF,IAAI,OAAO,qBAAqB,KAAK,QAAQ,EAAE;gBAC9C,IAAI,CAAC,CAAC,CAA0B,KAAK,EAAE,CAAC;gBACxC,IAAI,CAAC,EAAE,CAAW,qBAAqB,EAAE,MAAM,CAAC,CAAC;aACjD;iBAAM;gBACN,IAAI,CAAC,CAAC,CAA0B,KAAK,GAAG,qBAAqB,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAW,qBAAqB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC;gBAC7I,IAAI,CAAC,EAAE,CAAW,qBAAqB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;aAC5D;QACF,CAAC;QAEO,EAAE,CAAW,UAAkB,EAAE,MAAe;YACvD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YACpD,IAAI,CAAC,EAAE,CAAe,2BAA2B,CAAC,UAAU,CAAC,CAAC;QAC/D,CAAC;QAEM,uBAAuB,CAAC,UAAkB,EAAE,MAAc;YAChE,OAAO,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACtE,CAAC;QAEM,iBAAiB,CAAC,QAAmB;YAC3C,OAAO,IAAI,CAAC,EAAE,CAAyB,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACpE,CAAC;QAEM,oBAAoB,CAAC,QAAmB;YAC9C,OAAO,IAAI,CAAC,EAAE,CAAyB,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QACvE,CAAC;QAED,YAAY;QACZ,iBAAiB,CAAC,QAAa,EAAO,QAAgC;YACrE,OAAO,QAAQ,CAAC;QACjB,CAAC;QAED;;;UAGE;QACK,mBAAmB,CAAC,UAAkB;YAC5C,wBAAwB;YACxB,OAAO,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;QAC1D,CAAC;;IAhxDW,kBAAG;kBAAH,GAAG;QA4Hb,WAAA,cAAG,CAAA;QACH,WAAA,cAAG,CAAA;QACH,WAAA,mCAAG,CAAA;OA9HO,GAAG,CAixDf;IAED,SAAS,YAAY,CAAC,IAAY;QACjC,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;YACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE;gBAC5B,MAAM,EAAE,CAAC;aACT;iBAAM;gBACN,MAAM;aACN;SACD;QACD,OAAO,MAAM,CAAC;IACf,CAAC;IAED,qBAAqB;IAErB,SAAS,qBAAqB,CAAC,IAAS;QACvC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACxF,CAAC;IAED,SAAS,kBAAkB,CAAC,IAAS;QACpC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IACtD,CAAC;IAOD,MAAM,gBAAgB;QAiBrB;YACC,IAAI,CAAC,CAAC,GAAmB,IAAI,kBAAG,EAAW,CAAC;YAC5C,IAAI,CAAC,CAAC,GAAmB,IAAI,kBAAG,EAAW,CAAC;YAC5C,IAAI,CAAC,CAAC,GAA8B,IAAI,kBAAG,EAAW,CAAC;QACxD,CAAC;QAEM,wBAAwB,CAAC,IAA2B;YAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC3C,CAAC;QAEO,CAAC,CAAsB,IAA2B,EAAE,KAAqB;YAChF,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;gBACzB,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;oBACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;iBAC/E;aACD;YACD,OAAiC,KAAK,CAAC;QACxC,CAAC;QAEM,gBAAgB,CAAC,IAA2B,EAAE,KAAa,EAAE,GAAW,EAAE,aAAqB,EAAE,mBAA4B,EAAE,qBAA8B;YACnK,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAe,KAAK,EAAE,GAAG,EAAE,aAAa,EAAE,mBAAmB,EAAE,SAAS,EAAE,qBAAqB,CAAC,CAAC;YACtH,OAAO,IAAI,CAAC,CAAC,CAAsB,IAAI,EAAE,MAAM,CAAC,CAAC;QAClD,CAAC;QAEO,CAAC,CAAe,KAAa,EAAE,GAAW,EAAE,aAAqB,EAAE,mBAA4B,EAAE,eAAuB,EAAE,qBAA8B;YAC/J,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAiB,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,aAAa,EAAE,mBAAmB,EAAE,eAAe,EAAE,qBAAqB,CAAC,CAAC;YACzI,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAiB,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,aAAa,EAAE,mBAAmB,EAAE,eAAe,EAAE,qBAAqB,CAAC,CAAC;YACzI,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAA4B,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,aAAa,EAAE,mBAAmB,EAAE,eAAe,EAAE,qBAAqB,CAAC,CAAC;YACpJ,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACjC,CAAC;QAEM,yBAAyB,CAAC,IAA2B,EAAE,KAAa,EAAE,GAAW,EAAE,aAAqB;YAC9G,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAA4B,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,aAAa,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YACpH,OAAO,IAAI,CAAC,CAAC,CAAsB,IAAI,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACjH,CAAC;QAEM,kBAAkB,CAAC,IAA2B,EAAE,aAAqB;YAC3E,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAA4B,MAAM,CAAC,aAAa,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YAChG,OAAO,IAAI,CAAC,CAAC,CAAsB,IAAI,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACjH,CAAC;QAEM,MAAM,CAAC,IAA2B,EAAE,aAAqB,EAAE,mBAA4B,EAAE,iBAA0B,EAAE,qBAA8B;YACzJ,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAO,aAAa,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,SAAS,EAAE,qBAAqB,CAAC,CAAC;YACrH,OAAO,IAAI,CAAC,CAAC,CAAsB,IAAI,EAAE,MAAM,CAAC,CAAC;QAClD,CAAC;QAEO,CAAC,CAAO,aAAqB,EAAE,mBAA4B,EAAE,iBAA0B,EAAE,eAAuB,EAAE,qBAA8B;YACvJ,IAAI,iBAAiB,EAAE;gBACtB,OAAO,IAAI,CAAC,CAAC,CAAiB,MAAM,CAAC,aAAa,EAAE,mBAAmB,EAAE,eAAe,EAAE,qBAAqB,CAAC,CAAC;aACjH;iBAAM;gBACN,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAiB,MAAM,CAAC,aAAa,EAAE,mBAAmB,EAAE,eAAe,EAAE,qBAAqB,CAAC,CAAC;gBACrH,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAiB,MAAM,CAAC,aAAa,EAAE,mBAAmB,EAAE,eAAe,EAAE,qBAAqB,CAAC,CAAC;gBACrH,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAA4B,MAAM,CAAC,aAAa,EAAE,mBAAmB,EAAE,eAAe,EAAE,qBAAqB,CAAC,CAAC;gBAChI,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;aAChC;QACF,CAAC;QAEM,qBAAqB,CAAC,OAAe;YAC3C,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAiB,qBAAqB,CAAC,OAAO,CAAC,CAAC;YACjE,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAiB,qBAAqB,CAAC,OAAO,CAAC,CAAC;YACjE,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAA4B,qBAAqB,CAAC,OAAO,CAAC,CAAC;YAC5E,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACjC,CAAC;QAEM,qBAAqB;YAC3B,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAiB,qBAAqB,EAAE,CAAC;YAC1D,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAiB,qBAAqB,EAAE,CAAC;YAC1D,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAA4B,qBAAqB,EAAE,CAAC;YACrE,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACjC,CAAC;QAEM,MAAM,CAAC,IAAS;YACtB,IAAI,kBAAkB,CAAC,IAAI,CAAC,EAAE;gBAC7B,IAAI,CAAC,CAAC,CAA4B,MAAM,CAAC,IAAI,CAAC,CAAC;aAC/C;iBAAM,IAAI,qBAAqB,CAAC,IAAI,CAAC,EAAE;gBACvC,IAAI,CAAC,CAAC,CAAiB,MAAM,CAAC,IAAI,CAAC,CAAC;aACpC;iBAAM;gBACN,IAAI,CAAC,CAAC,CAAiB,MAAM,CAAC,IAAI,CAAC,CAAC;aACpC;QACF,CAAC;QAEM,MAAM,CAAC,IAAS;YACtB,IAAI,kBAAkB,CAAC,IAAI,CAAC,EAAE;gBAC7B,IAAI,CAAC,CAAC,CAA4B,MAAM,CAAC,IAAI,CAAC,CAAC;aAC/C;iBAAM,IAAI,qBAAqB,CAAC,IAAI,CAAC,EAAE;gBACvC,IAAI,CAAC,CAAC,CAAiB,MAAM,CAAC,IAAI,CAAC,CAAC;aACpC;iBAAM;gBACN,IAAI,CAAC,CAAC,CAAiB,MAAM,CAAC,IAAI,CAAC,CAAC;aACpC;QACF,CAAC;QAEM,YAAY,CAAC,IAA2B,EAAE,IAAS;YACzD,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,IAAI,IAAI,CAAC,eAAe,KAAK,SAAS,EAAE;gBACvC,IAAI,CAAC,CAAC,CAAY,IAAI,EAAE,SAAS,CAAC,CAAC;aACnC;YACD,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;gBACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;aAC/E;YACD,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;QAEO,CAAC,CAAY,IAAS,EAAW,eAAuB;YAC/D,IAAI,kBAAkB,CAAC,IAAI,CAAC,EAAE;gBAC7B,IAAI,CAAC,CAAC,CAA4B,WAAW,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;aACrE;iBAAM,IAAI,qBAAqB,CAAC,IAAI,CAAC,EAAE;gBACvC,IAAI,CAAC,CAAC,CAAiB,WAAW,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;aAC1D;iBAAM;gBACN,IAAI,CAAC,CAAC,CAAiB,WAAW,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;aAC1D;QACF,CAAC;QAEM,aAAa,CAAC,MAAc,EAAE,MAAc,EAAE,UAAkB,EAAE,gBAAyB;YACjG,IAAI,CAAC,CAAC,CAAiB,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAC;YACnF,IAAI,CAAC,CAAC,CAAiB,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAC;YACnF,IAAI,CAAC,CAAC,CAA4B,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAC;QAC/F,CAAC;KACD;IAED,SAAS,cAAc,CAAC,SAAiB;QACxC,OAAO,SAAS,CAAC,OAAO,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;IACjD,CAAC;IAED,MAAM,iBAAiB;QAItB,YAAY,OAAiC;YAC5C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;YACjC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QAE1C,CAAC;KACD;IAED,MAAa,GAAoC,SAAQ,iBAAiB;QAIzE,YAAY,OAAmD;YAC9D,KAAK,CAAC,OAAO,CAAC,CAAC;YACf,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC5G,CAAC;QAEM,QAAQ,CAAC,KAAkB;YACjC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAe;gBACzB,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;oBAC7C,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC,CAAC,CAAa,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;iBAChE;qBAAM;oBACN,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC,CAAC,CAAa,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;iBAC5D;aACD;YACD,OAAO,IAAI,CAAC,CAAC,CAAc;QAC5B,CAAC;QAEM,qBAAqB;YAC3B,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC;QAC5B,CAAC;QAEO,CAAC,CAAa,KAA0B,EAAE,KAAkB;YACnE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC9B,OAAO,KAAK,CAAC;aACb;YACD,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAClD,IAAI,CAAC,CAAC,EAAE;gBACP,OAAO,EAAE,CAAC;aACV;YACD,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACrB,CAAC;KACD;IAnCD,kBAmCC;IAED,MAAa,GAAG;QAGf,YAAY,OAAoE;YAC/E,IAAI,CAAC,QAAQ,GAAG,OAAO,EAAE,QAAQ,IAAI,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC;QACjE,CAAC;KACD;IAND,kBAMC;IAED,MAAa,GAA8B,SAAQ,iBAAiB;QAKnE,YAAY,OAA6C;YACxD,KAAK,CAAC,OAAO,CAAC,CAAC;YACf,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAClC,CAAC;QAEM,QAAQ,CAAC,KAAkB;YACjC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAe;gBACzB,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;oBAC7C,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC,CAAC,CAAa,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;iBAChE;qBAAM;oBACN,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC,CAAC,CAAa,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;iBAC5D;aACD;YAED,OAAO,IAAI,CAAC,CAAC,CAAc;QAC5B,CAAC;QAEM,qBAAqB;YAC3B,IAAI,CAAC,CAAC,GAAgB,SAAS,CAAC;QACjC,CAAC;QAEO,CAAC,CAAa,KAA0B,EAAE,KAAkB;YACnE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC9B,OAAO,WAAG,CAAG,OAAO,CAAC,KAAK,CAAC,CAAC;aAC5B;YACD,OAAO,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACjC,CAAC;KACD;IAhCD,kBAgCC;IAED,MAAa,GAAG;QACR,MAAM,CAAC,IAAI,CAAC,OAAkC;YACpD,IAAI,OAAO,YAAY,GAAG,EAAiC;gBAC1D,OAAO,OAAO,CAAC;aACf;YACD,OAAO,IAAI,GAAG,CAAgC,OAAO,CAAC,CAAC;QACxD,CAAC;QAQD,YAAoB,OAAkC;YACrD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;YACrC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,IAAI,IAAI,CAAC;YACvD,IAAI,CAAC,mCAAmC,GAAG,OAAO,CAAC,mCAAmC,IAAI,KAAK,CAAC;YAChG,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,IAAI,CAAC;YACjD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC;QAChD,CAAC;KACD;IArBD,kBAqBC;IAED,MAAa,GAAG;QAIR,MAAM,CAAC,QAAQ,CAAC,OAAsC;YAC5D,OAAO,IAAI,GAAG,CAAoB,OAAO,CAAC,CAAC;QAC5C,CAAC;QAEM,MAAM,CAAC,aAAa,CAAC,OAAsC;YACjE,OAAO,IAAI,GAAG,CAAoB,OAAO,CAAC,CAAC;QAC5C,CAAC;QA+BD,YAAoB,OAAsC;YACzD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;YACvC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC7F,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,IAAI,IAAI,CAAC;YACjE,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,IAAI,IAAI,CAAC;YACvD,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,IAAI,CAAC;YACjD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,qEAA6D,CAAC;YAClG,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC9E,IAAI,CAAC,yBAAyB,GAAG,OAAO,CAAC,yBAAyB,IAAI,IAAI,CAAC;YAC3E,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,IAAI,CAAC;YACjD,IAAI,CAAC,uBAAuB,GAAG,OAAO,CAAC,uBAAuB,IAAI,IAAI,CAAC;YACvE,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,KAAK,CAAC;YAChD,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,IAAI,KAAK,CAAC;YACxD,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC,qBAAqB,IAAI,KAAK,CAAC;YACpE,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,GAAG,CAAiC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACnH,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAA2B,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3F,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,IAAI,GAAG,CAA+B,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACpH,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC/G,IAAI,CAAC,yBAAyB,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC9H,IAAI,CAAC,4BAA4B,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACvI,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAChG,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAChG,IAAI,CAAC,mCAAmC,GAAG,OAAO,CAAC,mCAAmC,IAAI,KAAK,CAAC;YAChG,IAAI,CAAC,sBAAsB,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACrH,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAClH,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAgC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3F,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAgC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC9F,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,IAAI,KAAK,CAAC;YAChE,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,IAAI,KAAK,CAAC;QAC/D,CAAC;KACD;IAxED,kBAwEC;IACD,GAAG,CAAoB,KAAK,GAAG,GAAG,CAAoB,QAAQ,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC;IAEzF;;OAEG;IACH,MAAM,qBAAqB,GAAG;QAC7B,GAAG,CAAoB,QAAQ,CAAC,EAAE,WAAW,EAAE,iDAAiD,EAAE,UAAU,mEAA2D,EAAE,CAAC;QAC1K,GAAG,CAAoB,QAAQ,CAAC,EAAE,WAAW,EAAE,gDAAgD,EAAE,UAAU,kEAA0D,EAAE,CAAC;QACxK,GAAG,CAAoB,QAAQ,CAAC,EAAE,WAAW,EAAE,6CAA6C,EAAE,UAAU,gEAAwD,EAAE,CAAC;QACnK,GAAG,CAAoB,QAAQ,CAAC,EAAE,WAAW,EAAE,4CAA4C,EAAE,UAAU,+DAAuD,EAAE,CAAC;KACjK,CAAC;IAEF,SAAS,iBAAiB,CAAC,OAAsC;QAChE,IAAI,OAAO,YAAY,GAAG,EAAqB;YAC9C,OAAO,OAAO,CAAC;SACf;QACD,OAAO,GAAG,CAAoB,aAAa,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,MAAM,2BAA4B,SAAQ,eAAG;QAY5C,YAA6B,CAAyE;YACrG,KAAK,EAAE,CAAC;YADoB,MAAC,GAAD,CAAC,CAAwE;YAVrF,MAAC,GAAiD,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAqC,CAAC,CAAC;YAChH,UAAK,GAAyC,IAAI,CAAC,CAAC,CAAO,KAAK,CAAC;YAMzE,MAAC,GAAgD,IAAI,CAAC;YAK7D,IAAI,CAAC,CAAC,GAAc,CAAC,CAAC;YACtB,IAAI,CAAC,CAAC,GAAqB,KAAK,CAAC;YACjC,IAAI,CAAC,CAAC,GAAiB,KAAK,CAAC;YAC7B,IAAI,CAAC,CAAC,GAAuB,KAAK,CAAC;YACnC,IAAI,CAAC,CAAC,GAAqB,KAAK,CAAC;QAClC,CAAC;QAED,YAAY;YACX,OAAO,IAAI,CAAC,CAAC,CAAO,YAAY,EAAE,CAAC;QACpC,CAAC;QAEM,iBAAiB;YACvB,IAAI,CAAC,CAAC,EAAa,CAAC;QACrB,CAAC;QAEM,eAAe;YACrB,IAAI,CAAC,CAAC,EAAa,CAAC;YACpB,IAAI,IAAI,CAAC,CAAC,KAAgB,CAAC,EAAE;gBAC5B,IAAI,IAAI,CAAC,CAAC,EAAoB;oBAC7B,IAAI,CAAC,CAAC,EAAO,CAAC;iBACd;gBAED,IAAI,CAAC,CAAC,EAA2B,KAAK,EAAE,CAAC;gBACzC,IAAI,CAAC,CAAC,GAA4B,IAAI,CAAC;aACvC;QACF,CAAC;QAEM,gCAAgC,CAAC,UAAkB;YACzD,IAAI,CAAC,IAAI,CAAC,CAAC,EAA2B;gBACrC,IAAI,CAAC,CAAC,GAA4B,IAAI,GAAG,EAAE,CAAC;aAC5C;YACD,IAAI,CAAC,CAAC,CAA0B,GAAG,CAAC,UAAU,CAAC,CAAC;QACjD,CAAC;QAEM,oBAAoB,CAAC,OAAY;YACvC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAgB;gBAC1B,IAAI,CAAC,CAAC,GAAiB,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;aAClF;YACD,IAAI,CAAC,IAAI,CAAC,CAAC,EAAsB;gBAChC,IAAI,CAAC,CAAC,GAAuB,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;aACjG;YACD,IAAI,CAAC,IAAI,CAAC,CAAC,EAAoB;gBAC9B,IAAI,CAAC,CAAC,GAAqB,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;aACvE;YACD,IAAI,CAAC,CAAC,EAAQ,CAAC;QAChB,CAAC;QAEM,IAAI;YACV,IAAI,CAAC,CAAC,GAAiB,IAAI,CAAC;YAC5B,IAAI,CAAC,CAAC,GAAuB,IAAI,CAAC;YAClC,IAAI,CAAC,CAAC,GAAqB,IAAI,CAAC;YAChC,IAAI,CAAC,CAAC,EAAQ,CAAC;QAChB,CAAC;QAEO,CAAC;YACR,IAAI,IAAI,CAAC,CAAC,KAAgB,CAAC,EAAE;gBAC5B,IAAI,CAAC,CAAC,EAAO,CAAC;aACd;iBAAM;gBACN,IAAI,CAAC,CAAC,GAAqB,IAAI,CAAC;aAChC;QACF,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,CAAC,CAAgB,IAAI,CAAC,CAAC,CAA0B,CAAC;YAEvD,MAAM,KAAK,GAAkC;gBAC5C,cAAc,EAAE,IAAI,CAAC,CAAC;gBACtB,oBAAoB,EAAE,IAAI,CAAC,CAAC;gBAC5B,kBAAkB,EAAE,IAAI,CAAC,CAAC;aAC1B,CAAC;YACF,IAAI,CAAC,CAAC,GAAqB,KAAK,CAAC;YACjC,IAAI,CAAC,CAAC,GAAiB,KAAK,CAAC;YAC7B,IAAI,CAAC,CAAC,GAAuB,KAAK,CAAC;YACnC,IAAI,CAAC,CAAC,GAAqB,KAAK,CAAC;YACjC,IAAI,CAAC,CAAC,CAAO,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC;KACD;IAED,YAAY;IAEZ,MAAM,uBAAwB,SAAQ,eAAG;QAaxC;YACC,KAAK,EAAE,CAAC;YAZT;;eAEG;YACc,MAAC,GAAwD,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAuC,CAAC,CAAC;YACzH,cAAS,GAA2C,IAAI,CAAC,CAAC,CAAY,KAAK,CAAC;YAC3E,MAAC,GAAwD,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAuC,CAAC,CAAC;YACzH,cAAS,GAA2C,IAAI,CAAC,CAAC,CAAY,KAAK,CAAC;YAO3F,IAAI,CAAC,CAAC,GAAc,CAAC,CAAC;YACtB,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC;QAC5B,CAAC;QAEM,YAAY;YAClB,OAAO,CACN,IAAI,CAAC,CAAC,CAAY,YAAY,EAAE;mBAC7B,IAAI,CAAC,CAAC,CAAY,YAAY,EAAE,CACnC,CAAC;QACH,CAAC;QAEM,iBAAiB;YACvB,IAAI,CAAC,CAAC,EAAa,CAAC;QACrB,CAAC;QAEM,eAAe,CAAC,qBAAyC,IAAI;YACnE,IAAI,CAAC,CAAC,EAAa,CAAC;YACpB,IAAI,IAAI,CAAC,CAAC,KAAgB,CAAC,EAAE;gBAC5B,IAAI,IAAI,CAAC,CAAC,KAAkB,IAAI,EAAE;oBACjC,IAAI,CAAC,CAAC,CAAc,sBAAsB,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;oBACnF,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAc;oBAC9B,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC;oBAC3B,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,CAAC,CAAC,CAAC;iBAC1B;aACD;QACF,CAAC;QAEM,IAAI,CAAC,CAAM;YACjB,IAAI,IAAI,CAAC,CAAC,GAAc,CAAC,EAAE;gBAC1B,IAAI,IAAI,CAAC,CAAC,EAAe;oBACxB,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC,CAAC,CAAc,KAAK,CAAC,CAAC,CAAC,CAAC;iBACnD;qBAAM;oBACN,IAAI,CAAC,CAAC,GAAgB,CAAC,CAAC;iBACxB;gBACD,OAAO;aACP;YACD,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC;KACD;IAED;;OAEG;IACH,MAAa,GAAG;QAAhB;YACkB,MAAC,GAA2B,IAAI,WAAG,EAA4E,CAAC;YACjH,6BAAwB,GAAG,IAAI,CAAC,CAAC,CAAyB,KAAK,CAAC;YAE/D,MAAC,GAAQ,IAAI,GAAG,EAAoB,CAAC;QAcvD,CAAC;QAZO,UAAU;YAChB,MAAM,IAAI,GAAG,IAAI,gBAAgB,CAAC,CAAC,KAAK,EAAE,EAAE;gBAC3C,IAAI,CAAC,CAAC,CAAyB,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,CAAC,CAAM,GAAG,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;QACb,CAAC;QAEM,UAAU,CAAC,IAAyB;YAC1C,IAAI,CAAC,CAAC,CAAM,MAAM,CAAC,IAAwB,CAAC,CAAC;YAC7C,IAAI,CAAC,CAAC,CAAyB,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;QACjE,CAAC;KACD;IAlBD,kBAkBC;IAUD,MAAM,gBAAgB;QACrB,YAA6B,CAAsD;YAAtD,MAAC,GAAD,CAAC,CAAqD;QAAI,CAAC;QAExF,eAAe,CAAC,YAAkE,EAAE,UAAmB;YACtG,MAAM,iBAAiB,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,eAAG,CAAO,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC;YAClH,IAAI,CAAC,CAAC,CAAiB,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAAC,CAAC;QAC3D,CAAC;KACD","file":"textModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ArrayQueue, pushMany } from 'vs/base/common/arrays';\nimport { VSBuffer, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { Color } from 'vs/base/common/color';\nimport { BugIndicatingError, illegalArgument, onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { Disposable, IDisposable, MutableDisposable, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { listenStream } from 'vs/base/common/stream';\nimport * as strings from 'vs/base/common/strings';\nimport { ThemeColor } from 'vs/base/common/themables';\nimport { Constants } from 'vs/base/common/uint';\nimport { URI } from 'vs/base/common/uri';\nimport { ISingleEditOperation } from 'vs/editor/common/core/editOperation';\nimport { countEOL } from 'vs/editor/common/core/eolCounter';\nimport { normalizeIndentation } from 'vs/editor/common/core/indentation';\nimport { LineRange } from 'vs/editor/common/core/lineRange';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { TextChange } from 'vs/editor/common/core/textChange';\nimport { EDITOR_MODEL_DEFAULTS } from 'vs/editor/common/core/textModelDefaults';\nimport { IWordAtPosition } from 'vs/editor/common/core/wordHelper';\nimport { FormattingOptions } from 'vs/editor/common/languages';\nimport { ILanguageSelection, ILanguageService } from 'vs/editor/common/languages/language';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport * as model from 'vs/editor/common/model';\nimport { BracketPairsTextModelPart } from 'vs/editor/common/model/bracketPairsTextModelPart/bracketPairsImpl';\nimport { ColorizedBracketPairsDecorationProvider } from 'vs/editor/common/model/bracketPairsTextModelPart/colorizedBracketPairsDecorationProvider';\nimport { EditStack } from 'vs/editor/common/model/editStack';\nimport { GuidesTextModelPart } from 'vs/editor/common/model/guidesTextModelPart';\nimport { guessIndentation } from 'vs/editor/common/model/indentationGuesser';\nimport { IntervalNode, IntervalTree, recomputeMaxEnd } from 'vs/editor/common/model/intervalTree';\nimport { PieceTreeTextBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer';\nimport { PieceTreeTextBufferBuilder } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder';\nimport { SearchParams, TextModelSearch } from 'vs/editor/common/model/textModelSearch';\nimport { TokenizationTextModelPart } from 'vs/editor/common/model/tokenizationTextModelPart';\nimport { IBracketPairsTextModelPart } from 'vs/editor/common/textModelBracketPairs';\nimport { IModelContentChangedEvent, IModelDecorationsChangedEvent, IModelOptionsChangedEvent, InternalModelContentChangeEvent, LineInjectedText, ModelInjectedTextChangedEvent, ModelRawChange, ModelRawContentChangedEvent, ModelRawEOLChanged, ModelRawFlush, ModelRawLineChanged, ModelRawLinesDeleted, ModelRawLinesInserted } from 'vs/editor/common/textModelEvents';\nimport { IGuidesTextModelPart } from 'vs/editor/common/textModelGuides';\nimport { ITokenizationTextModelPart } from 'vs/editor/common/tokenizationTextModelPart';\nimport { IColorTheme } from 'vs/platform/theme/common/themeService';\nimport { IUndoRedoService, ResourceEditStackSnapshot, UndoRedoGroup } from 'vs/platform/undoRedo/common/undoRedo';\n\nexport function createTextBufferFactory(text: string): model.ITextBufferFactory {\n\tconst builder = new PieceTreeTextBufferBuilder();\n\tbuilder.acceptChunk(text);\n\treturn builder.finish();\n}\n\ninterface ITextStream {\n\ton(event: 'data', callback: (data: string) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: string, callback: any): void;\n}\n\nexport function createTextBufferFactoryFromStream(stream: ITextStream): Promise<model.ITextBufferFactory>;\nexport function createTextBufferFactoryFromStream(stream: VSBufferReadableStream): Promise<model.ITextBufferFactory>;\nexport function createTextBufferFactoryFromStream(stream: ITextStream | VSBufferReadableStream): Promise<model.ITextBufferFactory> {\n\treturn new Promise<model.ITextBufferFactory>((resolve, reject) => {\n\t\tconst builder = new PieceTreeTextBufferBuilder();\n\n\t\tlet done = false;\n\n\t\tlistenStream<string | VSBuffer>(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tbuilder.acceptChunk((typeof chunk === 'string') ? chunk : chunk.toString());\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (!done) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (!done) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(builder.finish());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function createTextBufferFactoryFromSnapshot(snapshot: model.ITextSnapshot): model.ITextBufferFactory {\n\tconst builder = new PieceTreeTextBufferBuilder();\n\n\tlet chunk: string | null;\n\twhile (typeof (chunk = snapshot.read()) === 'string') {\n\t\tbuilder.acceptChunk(chunk);\n\t}\n\n\treturn builder.finish();\n}\n\nexport function createTextBuffer(value: string | model.ITextBufferFactory | model.ITextSnapshot, defaultEOL: model.DefaultEndOfLine): { textBuffer: model.ITextBuffer; disposable: IDisposable } {\n\tlet factory: model.ITextBufferFactory;\n\tif (typeof value === 'string') {\n\t\tfactory = createTextBufferFactory(value);\n\t} else if (model.isITextSnapshot(value)) {\n\t\tfactory = createTextBufferFactoryFromSnapshot(value);\n\t} else {\n\t\tfactory = value;\n\t}\n\treturn factory.create(defaultEOL);\n}\n\nlet MODEL_ID = 0;\n\nconst LIMIT_FIND_COUNT = 999;\nconst LONG_LINE_BOUNDARY = 10000;\n\nclass TextModelSnapshot implements model.ITextSnapshot {\n\n\tprivate readonly _source: model.ITextSnapshot;\n\tprivate _eos: boolean;\n\n\tconstructor(source: model.ITextSnapshot) {\n\t\tthis._source = source;\n\t\tthis._eos = false;\n\t}\n\n\tpublic read(): string | null {\n\t\tif (this._eos) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst result: string[] = [];\n\t\tlet resultCnt = 0;\n\t\tlet resultLength = 0;\n\n\t\tdo {\n\t\t\tconst tmp = this._source.read();\n\n\t\t\tif (tmp === null) {\n\t\t\t\t// end-of-stream\n\t\t\t\tthis._eos = true;\n\t\t\t\tif (resultCnt === 0) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\treturn result.join('');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tmp.length > 0) {\n\t\t\t\tresult[resultCnt++] = tmp;\n\t\t\t\tresultLength += tmp.length;\n\t\t\t}\n\n\t\t\tif (resultLength >= 64 * 1024) {\n\t\t\t\treturn result.join('');\n\t\t\t}\n\t\t} while (true);\n\t}\n}\n\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\n\nconst enum StringOffsetValidationType {\n\t/**\n\t * Even allowed in surrogate pairs\n\t */\n\tRelaxed = 0,\n\t/**\n\t * Not allowed in surrogate pairs\n\t */\n\tSurrogatePairs = 1,\n}\n\nexport class TextModel extends Disposable implements model.ITextModel, IDecorationsTreesHost {\n\n\tstatic _MODEL_SYNC_LIMIT = 50 * 1024 * 1024; // 50 MB,  // used in tests\n\tprivate static readonly LARGE_FILE_SIZE_THRESHOLD = 20 * 1024 * 1024; // 20 MB;\n\tprivate static readonly LARGE_FILE_LINE_COUNT_THRESHOLD = 300 * 1000; // 300K lines\n\tprivate static readonly LARGE_FILE_HEAP_OPERATION_THRESHOLD = 256 * 1024 * 1024; // 256M characters, usually ~> 512MB memory usage\n\n\tpublic static DEFAULT_CREATION_OPTIONS: model.ITextModelCreationOptions = {\n\t\tisForSimpleWidget: false,\n\t\ttabSize: EDITOR_MODEL_DEFAULTS.tabSize,\n\t\tindentSize: EDITOR_MODEL_DEFAULTS.indentSize,\n\t\tinsertSpaces: EDITOR_MODEL_DEFAULTS.insertSpaces,\n\t\tdetectIndentation: false,\n\t\tdefaultEOL: model.DefaultEndOfLine.LF,\n\t\ttrimAutoWhitespace: EDITOR_MODEL_DEFAULTS.trimAutoWhitespace,\n\t\tlargeFileOptimizations: EDITOR_MODEL_DEFAULTS.largeFileOptimizations,\n\t\tbracketPairColorizationOptions: EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions,\n\t};\n\n\tpublic static resolveOptions(textBuffer: model.ITextBuffer, options: model.ITextModelCreationOptions): model.TextModelResolvedOptions {\n\t\tif (options.detectIndentation) {\n\t\t\tconst guessedIndentation = guessIndentation(textBuffer, options.tabSize, options.insertSpaces);\n\t\t\treturn new model.TextModelResolvedOptions({\n\t\t\t\ttabSize: guessedIndentation.tabSize,\n\t\t\t\tindentSize: 'tabSize', // TODO@Alex: guess indentSize independent of tabSize\n\t\t\t\tinsertSpaces: guessedIndentation.insertSpaces,\n\t\t\t\ttrimAutoWhitespace: options.trimAutoWhitespace,\n\t\t\t\tdefaultEOL: options.defaultEOL,\n\t\t\t\tbracketPairColorizationOptions: options.bracketPairColorizationOptions,\n\t\t\t});\n\t\t}\n\n\t\treturn new model.TextModelResolvedOptions(options);\n\t}\n\n\t//#region Events\n\tprivate readonly _onWillDispose: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onWillDispose: Event<void> = this._onWillDispose.event;\n\n\tprivate readonly _onDidChangeDecorations: DidChangeDecorationsEmitter = this._register(new DidChangeDecorationsEmitter(affectedInjectedTextLines => this.handleBeforeFireDecorationsChangedEvent(affectedInjectedTextLines)));\n\tpublic readonly onDidChangeDecorations: Event<IModelDecorationsChangedEvent> = this._onDidChangeDecorations.event;\n\n\tpublic get onDidChangeLanguage() { return this._tokenizationTextModelPart.onDidChangeLanguage; }\n\tpublic get onDidChangeLanguageConfiguration() { return this._tokenizationTextModelPart.onDidChangeLanguageConfiguration; }\n\tpublic get onDidChangeTokens() { return this._tokenizationTextModelPart.onDidChangeTokens; }\n\n\tprivate readonly _onDidChangeOptions: Emitter<IModelOptionsChangedEvent> = this._register(new Emitter<IModelOptionsChangedEvent>());\n\tpublic readonly onDidChangeOptions: Event<IModelOptionsChangedEvent> = this._onDidChangeOptions.event;\n\n\tprivate readonly _onDidChangeAttached: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeAttached: Event<void> = this._onDidChangeAttached.event;\n\n\tprivate readonly _onDidChangeInjectedText: Emitter<ModelInjectedTextChangedEvent> = this._register(new Emitter<ModelInjectedTextChangedEvent>());\n\n\tprivate readonly _eventEmitter: DidChangeContentEmitter = this._register(new DidChangeContentEmitter());\n\tpublic onDidChangeContent(listener: (e: IModelContentChangedEvent) => void): IDisposable {\n\t\treturn this._eventEmitter.slowEvent((e: InternalModelContentChangeEvent) => listener(e.contentChangedEvent));\n\t}\n\tpublic onDidChangeContentOrInjectedText(listener: (e: InternalModelContentChangeEvent | ModelInjectedTextChangedEvent) => void): IDisposable {\n\t\treturn combinedDisposable(\n\t\t\tthis._eventEmitter.fastEvent(e => listener(e)),\n\t\t\tthis._onDidChangeInjectedText.event(e => listener(e))\n\t\t);\n\t}\n\t//#endregion\n\n\tpublic readonly id: string;\n\tpublic readonly isForSimpleWidget: boolean;\n\tprivate readonly _associatedResource: URI;\n\tprivate _attachedEditorCount: number;\n\tprivate _buffer: model.ITextBuffer;\n\tprivate _bufferDisposable: IDisposable;\n\tprivate _options: model.TextModelResolvedOptions;\n\tprivate _languageSelectionListener = this._register(new MutableDisposable<IDisposable>());\n\n\tprivate _isDisposed: boolean;\n\tprivate __isDisposing: boolean;\n\tpublic _isDisposing(): boolean { return this.__isDisposing; }\n\tprivate _versionId: number;\n\t/**\n\t * Unlike, versionId, this can go down (via undo) or go to previous values (via redo)\n\t */\n\tprivate _alternativeVersionId: number;\n\tprivate _initialUndoRedoSnapshot: ResourceEditStackSnapshot | null;\n\tprivate readonly _isTooLargeForSyncing: boolean;\n\tprivate readonly _isTooLargeForTokenization: boolean;\n\tprivate readonly _isTooLargeForHeapOperation: boolean;\n\n\t//#region Editing\n\tprivate readonly _commandManager: EditStack;\n\tprivate _isUndoing: boolean;\n\tprivate _isRedoing: boolean;\n\tprivate _trimAutoWhitespaceLines: number[] | null;\n\t//#endregion\n\n\t//#region Decorations\n\t/**\n\t * Used to workaround broken clients that might attempt using a decoration id generated by a different model.\n\t * It is not globally unique in order to limit it to one character.\n\t */\n\tprivate readonly _instanceId: string;\n\tprivate _deltaDecorationCallCnt: number = 0;\n\tprivate _lastDecorationId: number;\n\tprivate _decorations: { [decorationId: string]: IntervalNode };\n\tprivate _decorationsTree: DecorationsTrees;\n\tprivate readonly _decorationProvider: ColorizedBracketPairsDecorationProvider;\n\t//#endregion\n\n\tprivate readonly _tokenizationTextModelPart: TokenizationTextModelPart;\n\tpublic get tokenization(): ITokenizationTextModelPart { return this._tokenizationTextModelPart; }\n\n\tprivate readonly _bracketPairs: BracketPairsTextModelPart;\n\tpublic get bracketPairs(): IBracketPairsTextModelPart { return this._bracketPairs; }\n\n\tprivate readonly _guidesTextModelPart: GuidesTextModelPart;\n\tpublic get guides(): IGuidesTextModelPart { return this._guidesTextModelPart; }\n\n\tprivate readonly _attachedViews = new AttachedViews();\n\n\tconstructor(\n\t\tsource: string | model.ITextBufferFactory,\n\t\tlanguageIdOrSelection: string | ILanguageSelection,\n\t\tcreationOptions: model.ITextModelCreationOptions,\n\t\tassociatedResource: URI | null = null,\n\t\t@IUndoRedoService private readonly _undoRedoService: IUndoRedoService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\t// Generate a new unique model id\n\t\tMODEL_ID++;\n\t\tthis.id = '$model' + MODEL_ID;\n\t\tthis.isForSimpleWidget = creationOptions.isForSimpleWidget;\n\t\tif (typeof associatedResource === 'undefined' || associatedResource === null) {\n\t\t\tthis._associatedResource = URI.parse('inmemory://model/' + MODEL_ID);\n\t\t} else {\n\t\t\tthis._associatedResource = associatedResource;\n\t\t}\n\t\tthis._attachedEditorCount = 0;\n\n\t\tconst { textBuffer, disposable } = createTextBuffer(source, creationOptions.defaultEOL);\n\t\tthis._buffer = textBuffer;\n\t\tthis._bufferDisposable = disposable;\n\n\t\tthis._options = TextModel.resolveOptions(this._buffer, creationOptions);\n\n\t\tconst languageId = (typeof languageIdOrSelection === 'string' ? languageIdOrSelection : languageIdOrSelection.languageId);\n\t\tif (typeof languageIdOrSelection !== 'string') {\n\t\t\tthis._languageSelectionListener.value = languageIdOrSelection.onDidChange(() => this._setLanguage(languageIdOrSelection.languageId));\n\t\t}\n\n\t\tthis._bracketPairs = this._register(new BracketPairsTextModelPart(this, this._languageConfigurationService));\n\t\tthis._guidesTextModelPart = this._register(new GuidesTextModelPart(this, this._languageConfigurationService));\n\t\tthis._decorationProvider = this._register(new ColorizedBracketPairsDecorationProvider(this));\n\t\tthis._tokenizationTextModelPart = new TokenizationTextModelPart(\n\t\t\tthis._languageService,\n\t\t\tthis._languageConfigurationService,\n\t\t\tthis,\n\t\t\tthis._bracketPairs,\n\t\t\tlanguageId,\n\t\t\tthis._attachedViews,\n\t\t);\n\n\t\tconst bufferLineCount = this._buffer.getLineCount();\n\t\tconst bufferTextLength = this._buffer.getValueLengthInRange(new Range(1, 1, bufferLineCount, this._buffer.getLineLength(bufferLineCount) + 1), model.EndOfLinePreference.TextDefined);\n\n\t\t// !!! Make a decision in the ctor and permanently respect this decision !!!\n\t\t// If a model is too large at construction time, it will never get tokenized,\n\t\t// under no circumstances.\n\t\tif (creationOptions.largeFileOptimizations) {\n\t\t\tthis._isTooLargeForTokenization = (\n\t\t\t\t(bufferTextLength > TextModel.LARGE_FILE_SIZE_THRESHOLD)\n\t\t\t\t|| (bufferLineCount > TextModel.LARGE_FILE_LINE_COUNT_THRESHOLD)\n\t\t\t);\n\n\t\t\tthis._isTooLargeForHeapOperation = bufferTextLength > TextModel.LARGE_FILE_HEAP_OPERATION_THRESHOLD;\n\t\t} else {\n\t\t\tthis._isTooLargeForTokenization = false;\n\t\t\tthis._isTooLargeForHeapOperation = false;\n\t\t}\n\n\t\tthis._isTooLargeForSyncing = (bufferTextLength > TextModel._MODEL_SYNC_LIMIT);\n\n\t\tthis._versionId = 1;\n\t\tthis._alternativeVersionId = 1;\n\t\tthis._initialUndoRedoSnapshot = null;\n\n\t\tthis._isDisposed = false;\n\t\tthis.__isDisposing = false;\n\n\t\tthis._instanceId = strings.singleLetterHash(MODEL_ID);\n\t\tthis._lastDecorationId = 0;\n\t\tthis._decorations = Object.create(null);\n\t\tthis._decorationsTree = new DecorationsTrees();\n\n\t\tthis._commandManager = new EditStack(this, this._undoRedoService);\n\t\tthis._isUndoing = false;\n\t\tthis._isRedoing = false;\n\t\tthis._trimAutoWhitespaceLines = null;\n\n\n\t\tthis._register(this._decorationProvider.onDidChange(() => {\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\tthis._onDidChangeDecorations.fire();\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}));\n\n\t\tthis._languageService.requestRichLanguageFeatures(languageId);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis.__isDisposing = true;\n\t\tthis._onWillDispose.fire();\n\t\tthis._tokenizationTextModelPart.dispose();\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t\tthis._bufferDisposable.dispose();\n\t\tthis.__isDisposing = false;\n\t\t// Manually release reference to previous text buffer to avoid large leaks\n\t\t// in case someone leaks a TextModel reference\n\t\tconst emptyDisposedTextBuffer = new PieceTreeTextBuffer([], '', '\\n', false, false, true, true);\n\t\temptyDisposedTextBuffer.dispose();\n\t\tthis._buffer = emptyDisposedTextBuffer;\n\t\tthis._bufferDisposable = Disposable.None;\n\t}\n\n\t_hasListeners(): boolean {\n\t\treturn (\n\t\t\tthis._onWillDispose.hasListeners()\n\t\t\t|| this._onDidChangeDecorations.hasListeners()\n\t\t\t|| this._tokenizationTextModelPart._hasListeners()\n\t\t\t|| this._onDidChangeOptions.hasListeners()\n\t\t\t|| this._onDidChangeAttached.hasListeners()\n\t\t\t|| this._onDidChangeInjectedText.hasListeners()\n\t\t\t|| this._eventEmitter.hasListeners()\n\t\t);\n\t}\n\n\tprivate _assertNotDisposed(): void {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('Model is disposed!');\n\t\t}\n\t}\n\n\tpublic equalsTextBuffer(other: model.ITextBuffer): boolean {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.equals(other);\n\t}\n\n\tpublic getTextBuffer(): model.ITextBuffer {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer;\n\t}\n\n\tprivate _emitContentChangedEvent(rawChange: ModelRawContentChangedEvent, change: IModelContentChangedEvent): void {\n\t\tif (this.__isDisposing) {\n\t\t\t// Do not confuse listeners by emitting any event after disposing\n\t\t\treturn;\n\t\t}\n\t\tthis._tokenizationTextModelPart.handleDidChangeContent(change);\n\t\tthis._bracketPairs.handleDidChangeContent(change);\n\t\tthis._eventEmitter.fire(new InternalModelContentChangeEvent(rawChange, change));\n\t}\n\n\tpublic setValue(value: string | model.ITextSnapshot): void {\n\t\tthis._assertNotDisposed();\n\n\t\tif (value === null || value === undefined) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tconst { textBuffer, disposable } = createTextBuffer(value, this._options.defaultEOL);\n\t\tthis._setValueFromTextBuffer(textBuffer, disposable);\n\t}\n\n\tprivate _createContentChanged2(range: Range, rangeOffset: number, rangeLength: number, text: string, isUndoing: boolean, isRedoing: boolean, isFlush: boolean, isEolChange: boolean): IModelContentChangedEvent {\n\t\treturn {\n\t\t\tchanges: [{\n\t\t\t\trange: range,\n\t\t\t\trangeOffset: rangeOffset,\n\t\t\t\trangeLength: rangeLength,\n\t\t\t\ttext: text,\n\t\t\t}],\n\t\t\teol: this._buffer.getEOL(),\n\t\t\tisEolChange: isEolChange,\n\t\t\tversionId: this.getVersionId(),\n\t\t\tisUndoing: isUndoing,\n\t\t\tisRedoing: isRedoing,\n\t\t\tisFlush: isFlush\n\t\t};\n\t}\n\n\tprivate _setValueFromTextBuffer(textBuffer: model.ITextBuffer, textBufferDisposable: IDisposable): void {\n\t\tthis._assertNotDisposed();\n\t\tconst oldFullModelRange = this.getFullModelRange();\n\t\tconst oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n\t\tconst endLineNumber = this.getLineCount();\n\t\tconst endColumn = this.getLineMaxColumn(endLineNumber);\n\n\t\tthis._buffer = textBuffer;\n\t\tthis._bufferDisposable.dispose();\n\t\tthis._bufferDisposable = textBufferDisposable;\n\t\tthis._increaseVersionId();\n\n\t\t// Destroy all my decorations\n\t\tthis._decorations = Object.create(null);\n\t\tthis._decorationsTree = new DecorationsTrees();\n\n\t\t// Destroy my edit history and settings\n\t\tthis._commandManager.clear();\n\t\tthis._trimAutoWhitespaceLines = null;\n\n\t\tthis._emitContentChangedEvent(\n\t\t\tnew ModelRawContentChangedEvent(\n\t\t\t\t[\n\t\t\t\t\tnew ModelRawFlush()\n\t\t\t\t],\n\t\t\t\tthis._versionId,\n\t\t\t\tfalse,\n\t\t\t\tfalse\n\t\t\t),\n\t\t\tthis._createContentChanged2(new Range(1, 1, endLineNumber, endColumn), 0, oldModelValueLength, this.getValue(), false, false, true, false)\n\t\t);\n\t}\n\n\tpublic setEOL(eol: model.EndOfLineSequence): void {\n\t\tthis._assertNotDisposed();\n\t\tconst newEOL = (eol === model.EndOfLineSequence.CRLF ? '\\r\\n' : '\\n');\n\t\tif (this._buffer.getEOL() === newEOL) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldFullModelRange = this.getFullModelRange();\n\t\tconst oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n\t\tconst endLineNumber = this.getLineCount();\n\t\tconst endColumn = this.getLineMaxColumn(endLineNumber);\n\n\t\tthis._onBeforeEOLChange();\n\t\tthis._buffer.setEOL(newEOL);\n\t\tthis._increaseVersionId();\n\t\tthis._onAfterEOLChange();\n\n\t\tthis._emitContentChangedEvent(\n\t\t\tnew ModelRawContentChangedEvent(\n\t\t\t\t[\n\t\t\t\t\tnew ModelRawEOLChanged()\n\t\t\t\t],\n\t\t\t\tthis._versionId,\n\t\t\t\tfalse,\n\t\t\t\tfalse\n\t\t\t),\n\t\t\tthis._createContentChanged2(new Range(1, 1, endLineNumber, endColumn), 0, oldModelValueLength, this.getValue(), false, false, false, true)\n\t\t);\n\t}\n\n\tprivate _onBeforeEOLChange(): void {\n\t\t// Ensure all decorations get their `range` set.\n\t\tthis._decorationsTree.ensureAllNodesHaveRanges(this);\n\t}\n\n\tprivate _onAfterEOLChange(): void {\n\t\t// Transform back `range` to offsets\n\t\tconst versionId = this.getVersionId();\n\t\tconst allDecorations = this._decorationsTree.collectNodesPostOrder();\n\t\tfor (let i = 0, len = allDecorations.length; i < len; i++) {\n\t\t\tconst node = allDecorations[i];\n\t\t\tconst range = node.range!; // the range is defined due to `_onBeforeEOLChange`\n\n\t\t\tconst delta = node.cachedAbsoluteStart - node.start;\n\n\t\t\tconst startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\t\tconst endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n\n\t\t\tnode.cachedAbsoluteStart = startOffset;\n\t\t\tnode.cachedAbsoluteEnd = endOffset;\n\t\t\tnode.cachedVersionId = versionId;\n\n\t\t\tnode.start = startOffset - delta;\n\t\t\tnode.end = endOffset - delta;\n\n\t\t\trecomputeMaxEnd(node);\n\t\t}\n\t}\n\n\tpublic onBeforeAttached(): model.IAttachedView {\n\t\tthis._attachedEditorCount++;\n\t\tif (this._attachedEditorCount === 1) {\n\t\t\tthis._tokenizationTextModelPart.handleDidChangeAttached();\n\t\t\tthis._onDidChangeAttached.fire(undefined);\n\t\t}\n\t\treturn this._attachedViews.attachView();\n\t}\n\n\tpublic onBeforeDetached(view: model.IAttachedView): void {\n\t\tthis._attachedEditorCount--;\n\t\tif (this._attachedEditorCount === 0) {\n\t\t\tthis._tokenizationTextModelPart.handleDidChangeAttached();\n\t\t\tthis._onDidChangeAttached.fire(undefined);\n\t\t}\n\t\tthis._attachedViews.detachView(view);\n\t}\n\n\tpublic isAttachedToEditor(): boolean {\n\t\treturn this._attachedEditorCount > 0;\n\t}\n\n\tpublic getAttachedEditorCount(): number {\n\t\treturn this._attachedEditorCount;\n\t}\n\n\tpublic isTooLargeForSyncing(): boolean {\n\t\treturn this._isTooLargeForSyncing;\n\t}\n\n\tpublic isTooLargeForTokenization(): boolean {\n\t\treturn this._isTooLargeForTokenization;\n\t}\n\n\tpublic isTooLargeForHeapOperation(): boolean {\n\t\treturn this._isTooLargeForHeapOperation;\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\tpublic isDominatedByLongLines(): boolean {\n\t\tthis._assertNotDisposed();\n\t\tif (this.isTooLargeForTokenization()) {\n\t\t\t// Cannot word wrap huge files anyways, so it doesn't really matter\n\t\t\treturn false;\n\t\t}\n\t\tlet smallLineCharCount = 0;\n\t\tlet longLineCharCount = 0;\n\n\t\tconst lineCount = this._buffer.getLineCount();\n\t\tfor (let lineNumber = 1; lineNumber <= lineCount; lineNumber++) {\n\t\t\tconst lineLength = this._buffer.getLineLength(lineNumber);\n\t\t\tif (lineLength >= LONG_LINE_BOUNDARY) {\n\t\t\t\tlongLineCharCount += lineLength;\n\t\t\t} else {\n\t\t\t\tsmallLineCharCount += lineLength;\n\t\t\t}\n\t\t}\n\n\t\treturn (longLineCharCount > smallLineCharCount);\n\t}\n\n\tpublic get uri(): URI {\n\t\treturn this._associatedResource;\n\t}\n\n\t//#region Options\n\n\tpublic getOptions(): model.TextModelResolvedOptions {\n\t\tthis._assertNotDisposed();\n\t\treturn this._options;\n\t}\n\n\tpublic getFormattingOptions(): FormattingOptions {\n\t\treturn {\n\t\t\ttabSize: this._options.indentSize,\n\t\t\tinsertSpaces: this._options.insertSpaces\n\t\t};\n\t}\n\n\tpublic updateOptions(_newOpts: model.ITextModelUpdateOptions): void {\n\t\tthis._assertNotDisposed();\n\t\tconst tabSize = (typeof _newOpts.tabSize !== 'undefined') ? _newOpts.tabSize : this._options.tabSize;\n\t\tconst indentSize = (typeof _newOpts.indentSize !== 'undefined') ? _newOpts.indentSize : this._options.originalIndentSize;\n\t\tconst insertSpaces = (typeof _newOpts.insertSpaces !== 'undefined') ? _newOpts.insertSpaces : this._options.insertSpaces;\n\t\tconst trimAutoWhitespace = (typeof _newOpts.trimAutoWhitespace !== 'undefined') ? _newOpts.trimAutoWhitespace : this._options.trimAutoWhitespace;\n\t\tconst bracketPairColorizationOptions = (typeof _newOpts.bracketColorizationOptions !== 'undefined') ? _newOpts.bracketColorizationOptions : this._options.bracketPairColorizationOptions;\n\n\t\tconst newOpts = new model.TextModelResolvedOptions({\n\t\t\ttabSize: tabSize,\n\t\t\tindentSize: indentSize,\n\t\t\tinsertSpaces: insertSpaces,\n\t\t\tdefaultEOL: this._options.defaultEOL,\n\t\t\ttrimAutoWhitespace: trimAutoWhitespace,\n\t\t\tbracketPairColorizationOptions,\n\t\t});\n\n\t\tif (this._options.equals(newOpts)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst e = this._options.createChangeEvent(newOpts);\n\t\tthis._options = newOpts;\n\n\t\tthis._bracketPairs.handleDidChangeOptions(e);\n\t\tthis._decorationProvider.handleDidChangeOptions(e);\n\t\tthis._onDidChangeOptions.fire(e);\n\t}\n\n\tpublic detectIndentation(defaultInsertSpaces: boolean, defaultTabSize: number): void {\n\t\tthis._assertNotDisposed();\n\t\tconst guessedIndentation = guessIndentation(this._buffer, defaultTabSize, defaultInsertSpaces);\n\t\tthis.updateOptions({\n\t\t\tinsertSpaces: guessedIndentation.insertSpaces,\n\t\t\ttabSize: guessedIndentation.tabSize,\n\t\t\tindentSize: guessedIndentation.tabSize, // TODO@Alex: guess indentSize independent of tabSize\n\t\t});\n\t}\n\n\tpublic normalizeIndentation(str: string): string {\n\t\tthis._assertNotDisposed();\n\t\treturn normalizeIndentation(str, this._options.indentSize, this._options.insertSpaces);\n\t}\n\n\t//#endregion\n\n\t//#region Reading\n\n\tpublic getVersionId(): number {\n\t\tthis._assertNotDisposed();\n\t\treturn this._versionId;\n\t}\n\n\tpublic mightContainRTL(): boolean {\n\t\treturn this._buffer.mightContainRTL();\n\t}\n\n\tpublic mightContainUnusualLineTerminators(): boolean {\n\t\treturn this._buffer.mightContainUnusualLineTerminators();\n\t}\n\n\tpublic removeUnusualLineTerminators(selections: Selection[] | null = null): void {\n\t\tconst matches = this.findMatches(strings.UNUSUAL_LINE_TERMINATORS.source, false, true, false, null, false, Constants.MAX_SAFE_SMALL_INTEGER);\n\t\tthis._buffer.resetMightContainUnusualLineTerminators();\n\t\tthis.pushEditOperations(selections, matches.map(m => ({ range: m.range, text: null })), () => null);\n\t}\n\n\tpublic mightContainNonBasicASCII(): boolean {\n\t\treturn this._buffer.mightContainNonBasicASCII();\n\t}\n\n\tpublic getAlternativeVersionId(): number {\n\t\tthis._assertNotDisposed();\n\t\treturn this._alternativeVersionId;\n\t}\n\n\tpublic getInitialUndoRedoSnapshot(): ResourceEditStackSnapshot | null {\n\t\tthis._assertNotDisposed();\n\t\treturn this._initialUndoRedoSnapshot;\n\t}\n\n\tpublic getOffsetAt(rawPosition: IPosition): number {\n\t\tthis._assertNotDisposed();\n\t\tconst position = this._validatePosition(rawPosition.lineNumber, rawPosition.column, StringOffsetValidationType.Relaxed);\n\t\treturn this._buffer.getOffsetAt(position.lineNumber, position.column);\n\t}\n\n\tpublic getPositionAt(rawOffset: number): Position {\n\t\tthis._assertNotDisposed();\n\t\tconst offset = (Math.min(this._buffer.getLength(), Math.max(0, rawOffset)));\n\t\treturn this._buffer.getPositionAt(offset);\n\t}\n\n\tprivate _increaseVersionId(): void {\n\t\tthis._versionId = this._versionId + 1;\n\t\tthis._alternativeVersionId = this._versionId;\n\t}\n\n\tpublic _overwriteVersionId(versionId: number): void {\n\t\tthis._versionId = versionId;\n\t}\n\n\tpublic _overwriteAlternativeVersionId(newAlternativeVersionId: number): void {\n\t\tthis._alternativeVersionId = newAlternativeVersionId;\n\t}\n\n\tpublic _overwriteInitialUndoRedoSnapshot(newInitialUndoRedoSnapshot: ResourceEditStackSnapshot | null): void {\n\t\tthis._initialUndoRedoSnapshot = newInitialUndoRedoSnapshot;\n\t}\n\n\tpublic getValue(eol?: model.EndOfLinePreference, preserveBOM: boolean = false): string {\n\t\tthis._assertNotDisposed();\n\t\tif (this.isTooLargeForHeapOperation()) {\n\t\t\tthrow new BugIndicatingError('Operation would exceed heap memory limits');\n\t\t}\n\n\t\tconst fullModelRange = this.getFullModelRange();\n\t\tconst fullModelValue = this.getValueInRange(fullModelRange, eol);\n\n\t\tif (preserveBOM) {\n\t\t\treturn this._buffer.getBOM() + fullModelValue;\n\t\t}\n\n\t\treturn fullModelValue;\n\t}\n\n\tpublic createSnapshot(preserveBOM: boolean = false): model.ITextSnapshot {\n\t\treturn new TextModelSnapshot(this._buffer.createSnapshot(preserveBOM));\n\t}\n\n\tpublic getValueLength(eol?: model.EndOfLinePreference, preserveBOM: boolean = false): number {\n\t\tthis._assertNotDisposed();\n\t\tconst fullModelRange = this.getFullModelRange();\n\t\tconst fullModelValue = this.getValueLengthInRange(fullModelRange, eol);\n\n\t\tif (preserveBOM) {\n\t\t\treturn this._buffer.getBOM().length + fullModelValue;\n\t\t}\n\n\t\treturn fullModelValue;\n\t}\n\n\tpublic getValueInRange(rawRange: IRange, eol: model.EndOfLinePreference = model.EndOfLinePreference.TextDefined): string {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.getValueInRange(this.validateRange(rawRange), eol);\n\t}\n\n\tpublic getValueLengthInRange(rawRange: IRange, eol: model.EndOfLinePreference = model.EndOfLinePreference.TextDefined): number {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.getValueLengthInRange(this.validateRange(rawRange), eol);\n\t}\n\n\tpublic getCharacterCountInRange(rawRange: IRange, eol: model.EndOfLinePreference = model.EndOfLinePreference.TextDefined): number {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.getCharacterCountInRange(this.validateRange(rawRange), eol);\n\t}\n\n\tpublic getLineCount(): number {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.getLineCount();\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\tthis._assertNotDisposed();\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new BugIndicatingError('Illegal value for lineNumber');\n\t\t}\n\n\t\treturn this._buffer.getLineContent(lineNumber);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\tthis._assertNotDisposed();\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new BugIndicatingError('Illegal value for lineNumber');\n\t\t}\n\n\t\treturn this._buffer.getLineLength(lineNumber);\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\tthis._assertNotDisposed();\n\t\tif (this.isTooLargeForHeapOperation()) {\n\t\t\tthrow new BugIndicatingError('Operation would exceed heap memory limits');\n\t\t}\n\n\t\treturn this._buffer.getLinesContent();\n\t}\n\n\tpublic getEOL(): string {\n\t\tthis._assertNotDisposed();\n\t\treturn this._buffer.getEOL();\n\t}\n\n\tpublic getEndOfLineSequence(): model.EndOfLineSequence {\n\t\tthis._assertNotDisposed();\n\t\treturn (\n\t\t\tthis._buffer.getEOL() === '\\n'\n\t\t\t\t? model.EndOfLineSequence.LF\n\t\t\t\t: model.EndOfLineSequence.CRLF\n\t\t);\n\t}\n\n\tpublic getLineMinColumn(lineNumber: number): number {\n\t\tthis._assertNotDisposed();\n\t\treturn 1;\n\t}\n\n\tpublic getLineMaxColumn(lineNumber: number): number {\n\t\tthis._assertNotDisposed();\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new BugIndicatingError('Illegal value for lineNumber');\n\t\t}\n\t\treturn this._buffer.getLineLength(lineNumber) + 1;\n\t}\n\n\tpublic getLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\tthis._assertNotDisposed();\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new BugIndicatingError('Illegal value for lineNumber');\n\t\t}\n\t\treturn this._buffer.getLineFirstNonWhitespaceColumn(lineNumber);\n\t}\n\n\tpublic getLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\tthis._assertNotDisposed();\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new BugIndicatingError('Illegal value for lineNumber');\n\t\t}\n\t\treturn this._buffer.getLineLastNonWhitespaceColumn(lineNumber);\n\t}\n\n\t/**\n\t * Validates `range` is within buffer bounds, but allows it to sit in between surrogate pairs, etc.\n\t * Will try to not allocate if possible.\n\t */\n\tpublic _validateRangeRelaxedNoAllocations(range: IRange): Range {\n\t\tconst linesCount = this._buffer.getLineCount();\n\n\t\tconst initialStartLineNumber = range.startLineNumber;\n\t\tconst initialStartColumn = range.startColumn;\n\t\tlet startLineNumber = Math.floor((typeof initialStartLineNumber === 'number' && !isNaN(initialStartLineNumber)) ? initialStartLineNumber : 1);\n\t\tlet startColumn = Math.floor((typeof initialStartColumn === 'number' && !isNaN(initialStartColumn)) ? initialStartColumn : 1);\n\n\t\tif (startLineNumber < 1) {\n\t\t\tstartLineNumber = 1;\n\t\t\tstartColumn = 1;\n\t\t} else if (startLineNumber > linesCount) {\n\t\t\tstartLineNumber = linesCount;\n\t\t\tstartColumn = this.getLineMaxColumn(startLineNumber);\n\t\t} else {\n\t\t\tif (startColumn <= 1) {\n\t\t\t\tstartColumn = 1;\n\t\t\t} else {\n\t\t\t\tconst maxColumn = this.getLineMaxColumn(startLineNumber);\n\t\t\t\tif (startColumn >= maxColumn) {\n\t\t\t\t\tstartColumn = maxColumn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst initialEndLineNumber = range.endLineNumber;\n\t\tconst initialEndColumn = range.endColumn;\n\t\tlet endLineNumber = Math.floor((typeof initialEndLineNumber === 'number' && !isNaN(initialEndLineNumber)) ? initialEndLineNumber : 1);\n\t\tlet endColumn = Math.floor((typeof initialEndColumn === 'number' && !isNaN(initialEndColumn)) ? initialEndColumn : 1);\n\n\t\tif (endLineNumber < 1) {\n\t\t\tendLineNumber = 1;\n\t\t\tendColumn = 1;\n\t\t} else if (endLineNumber > linesCount) {\n\t\t\tendLineNumber = linesCount;\n\t\t\tendColumn = this.getLineMaxColumn(endLineNumber);\n\t\t} else {\n\t\t\tif (endColumn <= 1) {\n\t\t\t\tendColumn = 1;\n\t\t\t} else {\n\t\t\t\tconst maxColumn = this.getLineMaxColumn(endLineNumber);\n\t\t\t\tif (endColumn >= maxColumn) {\n\t\t\t\t\tendColumn = maxColumn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tinitialStartLineNumber === startLineNumber\n\t\t\t&& initialStartColumn === startColumn\n\t\t\t&& initialEndLineNumber === endLineNumber\n\t\t\t&& initialEndColumn === endColumn\n\t\t\t&& range instanceof Range\n\t\t\t&& !(range instanceof Selection)\n\t\t) {\n\t\t\treturn range;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\tprivate _isValidPosition(lineNumber: number, column: number, validationType: StringOffsetValidationType): boolean {\n\t\tif (typeof lineNumber !== 'number' || typeof column !== 'number') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (isNaN(lineNumber) || isNaN(column)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (lineNumber < 1 || column < 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((lineNumber | 0) !== lineNumber || (column | 0) !== column) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst lineCount = this._buffer.getLineCount();\n\t\tif (lineNumber > lineCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (column === 1) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst maxColumn = this.getLineMaxColumn(lineNumber);\n\t\tif (column > maxColumn) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (validationType === StringOffsetValidationType.SurrogatePairs) {\n\t\t\t// !!At this point, column > 1\n\t\t\tconst charCodeBefore = this._buffer.getLineCharCode(lineNumber, column - 2);\n\t\t\tif (strings.isHighSurrogate(charCodeBefore)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _validatePosition(_lineNumber: number, _column: number, validationType: StringOffsetValidationType): Position {\n\t\tconst lineNumber = Math.floor((typeof _lineNumber === 'number' && !isNaN(_lineNumber)) ? _lineNumber : 1);\n\t\tconst column = Math.floor((typeof _column === 'number' && !isNaN(_column)) ? _column : 1);\n\t\tconst lineCount = this._buffer.getLineCount();\n\n\t\tif (lineNumber < 1) {\n\t\t\treturn new Position(1, 1);\n\t\t}\n\n\t\tif (lineNumber > lineCount) {\n\t\t\treturn new Position(lineCount, this.getLineMaxColumn(lineCount));\n\t\t}\n\n\t\tif (column <= 1) {\n\t\t\treturn new Position(lineNumber, 1);\n\t\t}\n\n\t\tconst maxColumn = this.getLineMaxColumn(lineNumber);\n\t\tif (column >= maxColumn) {\n\t\t\treturn new Position(lineNumber, maxColumn);\n\t\t}\n\n\t\tif (validationType === StringOffsetValidationType.SurrogatePairs) {\n\t\t\t// If the position would end up in the middle of a high-low surrogate pair,\n\t\t\t// we move it to before the pair\n\t\t\t// !!At this point, column > 1\n\t\t\tconst charCodeBefore = this._buffer.getLineCharCode(lineNumber, column - 2);\n\t\t\tif (strings.isHighSurrogate(charCodeBefore)) {\n\t\t\t\treturn new Position(lineNumber, column - 1);\n\t\t\t}\n\t\t}\n\n\t\treturn new Position(lineNumber, column);\n\t}\n\n\tpublic validatePosition(position: IPosition): Position {\n\t\tconst validationType = StringOffsetValidationType.SurrogatePairs;\n\t\tthis._assertNotDisposed();\n\n\t\t// Avoid object allocation and cover most likely case\n\t\tif (position instanceof Position) {\n\t\t\tif (this._isValidPosition(position.lineNumber, position.column, validationType)) {\n\t\t\t\treturn position;\n\t\t\t}\n\t\t}\n\n\t\treturn this._validatePosition(position.lineNumber, position.column, validationType);\n\t}\n\n\tprivate _isValidRange(range: Range, validationType: StringOffsetValidationType): boolean {\n\t\tconst startLineNumber = range.startLineNumber;\n\t\tconst startColumn = range.startColumn;\n\t\tconst endLineNumber = range.endLineNumber;\n\t\tconst endColumn = range.endColumn;\n\n\t\tif (!this._isValidPosition(startLineNumber, startColumn, StringOffsetValidationType.Relaxed)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this._isValidPosition(endLineNumber, endColumn, StringOffsetValidationType.Relaxed)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (validationType === StringOffsetValidationType.SurrogatePairs) {\n\t\t\tconst charCodeBeforeStart = (startColumn > 1 ? this._buffer.getLineCharCode(startLineNumber, startColumn - 2) : 0);\n\t\t\tconst charCodeBeforeEnd = (endColumn > 1 && endColumn <= this._buffer.getLineLength(endLineNumber) ? this._buffer.getLineCharCode(endLineNumber, endColumn - 2) : 0);\n\n\t\t\tconst startInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeStart);\n\t\t\tconst endInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeEnd);\n\n\t\t\tif (!startInsideSurrogatePair && !endInsideSurrogatePair) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic validateRange(_range: IRange): Range {\n\t\tconst validationType = StringOffsetValidationType.SurrogatePairs;\n\t\tthis._assertNotDisposed();\n\n\t\t// Avoid object allocation and cover most likely case\n\t\tif ((_range instanceof Range) && !(_range instanceof Selection)) {\n\t\t\tif (this._isValidRange(_range, validationType)) {\n\t\t\t\treturn _range;\n\t\t\t}\n\t\t}\n\n\t\tconst start = this._validatePosition(_range.startLineNumber, _range.startColumn, StringOffsetValidationType.Relaxed);\n\t\tconst end = this._validatePosition(_range.endLineNumber, _range.endColumn, StringOffsetValidationType.Relaxed);\n\n\t\tconst startLineNumber = start.lineNumber;\n\t\tconst startColumn = start.column;\n\t\tconst endLineNumber = end.lineNumber;\n\t\tconst endColumn = end.column;\n\n\t\tif (validationType === StringOffsetValidationType.SurrogatePairs) {\n\t\t\tconst charCodeBeforeStart = (startColumn > 1 ? this._buffer.getLineCharCode(startLineNumber, startColumn - 2) : 0);\n\t\t\tconst charCodeBeforeEnd = (endColumn > 1 && endColumn <= this._buffer.getLineLength(endLineNumber) ? this._buffer.getLineCharCode(endLineNumber, endColumn - 2) : 0);\n\n\t\t\tconst startInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeStart);\n\t\t\tconst endInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeEnd);\n\n\t\t\tif (!startInsideSurrogatePair && !endInsideSurrogatePair) {\n\t\t\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t\t}\n\n\t\t\tif (startLineNumber === endLineNumber && startColumn === endColumn) {\n\t\t\t\t// do not expand a collapsed range, simply move it to a valid location\n\t\t\t\treturn new Range(startLineNumber, startColumn - 1, endLineNumber, endColumn - 1);\n\t\t\t}\n\n\t\t\tif (startInsideSurrogatePair && endInsideSurrogatePair) {\n\t\t\t\t// expand range at both ends\n\t\t\t\treturn new Range(startLineNumber, startColumn - 1, endLineNumber, endColumn + 1);\n\t\t\t}\n\n\t\t\tif (startInsideSurrogatePair) {\n\t\t\t\t// only expand range at the start\n\t\t\t\treturn new Range(startLineNumber, startColumn - 1, endLineNumber, endColumn);\n\t\t\t}\n\n\t\t\t// only expand range at the end\n\t\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn + 1);\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\tpublic modifyPosition(rawPosition: IPosition, offset: number): Position {\n\t\tthis._assertNotDisposed();\n\t\tconst candidate = this.getOffsetAt(rawPosition) + offset;\n\t\treturn this.getPositionAt(Math.min(this._buffer.getLength(), Math.max(0, candidate)));\n\t}\n\n\tpublic getFullModelRange(): Range {\n\t\tthis._assertNotDisposed();\n\t\tconst lineCount = this.getLineCount();\n\t\treturn new Range(1, 1, lineCount, this.getLineMaxColumn(lineCount));\n\t}\n\n\tprivate findMatchesLineByLine(searchRange: Range, searchData: model.SearchData, captureMatches: boolean, limitResultCount: number): model.FindMatch[] {\n\t\treturn this._buffer.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n\t}\n\n\tpublic findMatches(searchString: string, rawSearchScope: any, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean, limitResultCount: number = LIMIT_FIND_COUNT): model.FindMatch[] {\n\t\tthis._assertNotDisposed();\n\n\t\tlet searchRanges: Range[] | null = null;\n\n\t\tif (rawSearchScope !== null) {\n\t\t\tif (!Array.isArray(rawSearchScope)) {\n\t\t\t\trawSearchScope = [rawSearchScope];\n\t\t\t}\n\n\t\t\tif (rawSearchScope.every((searchScope: Range) => Range.isIRange(searchScope))) {\n\t\t\t\tsearchRanges = rawSearchScope.map((searchScope: Range) => this.validateRange(searchScope));\n\t\t\t}\n\t\t}\n\n\t\tif (searchRanges === null) {\n\t\t\tsearchRanges = [this.getFullModelRange()];\n\t\t}\n\n\t\tsearchRanges = searchRanges.sort((d1, d2) => d1.startLineNumber - d2.startLineNumber || d1.startColumn - d2.startColumn);\n\n\t\tconst uniqueSearchRanges: Range[] = [];\n\t\tuniqueSearchRanges.push(searchRanges.reduce((prev, curr) => {\n\t\t\tif (Range.areIntersecting(prev, curr)) {\n\t\t\t\treturn prev.plusRange(curr);\n\t\t\t}\n\n\t\t\tuniqueSearchRanges.push(prev);\n\t\t\treturn curr;\n\t\t}));\n\n\t\tlet matchMapper: (value: Range, index: number, array: Range[]) => model.FindMatch[];\n\t\tif (!isRegex && searchString.indexOf('\\n') < 0) {\n\t\t\t// not regex, not multi line\n\t\t\tconst searchParams = new SearchParams(searchString, isRegex, matchCase, wordSeparators);\n\t\t\tconst searchData = searchParams.parseSearchRequest();\n\n\t\t\tif (!searchData) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tmatchMapper = (searchRange: Range) => this.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n\t\t} else {\n\t\t\tmatchMapper = (searchRange: Range) => TextModelSearch.findMatches(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchRange, captureMatches, limitResultCount);\n\t\t}\n\n\t\treturn uniqueSearchRanges.map(matchMapper).reduce((arr, matches: model.FindMatch[]) => arr.concat(matches), []);\n\t}\n\n\tpublic findNextMatch(searchString: string, rawSearchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string, captureMatches: boolean): model.FindMatch | null {\n\t\tthis._assertNotDisposed();\n\t\tconst searchStart = this.validatePosition(rawSearchStart);\n\n\t\tif (!isRegex && searchString.indexOf('\\n') < 0) {\n\t\t\tconst searchParams = new SearchParams(searchString, isRegex, matchCase, wordSeparators);\n\t\t\tconst searchData = searchParams.parseSearchRequest();\n\t\t\tif (!searchData) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst lineCount = this.getLineCount();\n\t\t\tlet searchRange = new Range(searchStart.lineNumber, searchStart.column, lineCount, this.getLineMaxColumn(lineCount));\n\t\t\tlet ret = this.findMatchesLineByLine(searchRange, searchData, captureMatches, 1);\n\t\t\tTextModelSearch.findNextMatch(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchStart, captureMatches);\n\t\t\tif (ret.length > 0) {\n\t\t\t\treturn ret[0];\n\t\t\t}\n\n\t\t\tsearchRange = new Range(1, 1, searchStart.lineNumber, this.getLineMaxColumn(searchStart.lineNumber));\n\t\t\tret = this.findMatchesLineByLine(searchRange, searchData, captureMatches, 1);\n\n\t\t\tif (ret.length > 0) {\n\t\t\t\treturn ret[0];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\treturn TextModelSearch.findNextMatch(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchStart, captureMatches);\n\t}\n\n\tpublic findPreviousMatch(searchString: string, rawSearchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string, captureMatches: boolean): model.FindMatch | null {\n\t\tthis._assertNotDisposed();\n\t\tconst searchStart = this.validatePosition(rawSearchStart);\n\t\treturn TextModelSearch.findPreviousMatch(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchStart, captureMatches);\n\t}\n\n\t//#endregion\n\n\t//#region Editing\n\n\tpublic pushStackElement(): void {\n\t\tthis._commandManager.pushStackElement();\n\t}\n\n\tpublic popStackElement(): void {\n\t\tthis._commandManager.popStackElement();\n\t}\n\n\tpublic pushEOL(eol: model.EndOfLineSequence): void {\n\t\tconst currentEOL = (this.getEOL() === '\\n' ? model.EndOfLineSequence.LF : model.EndOfLineSequence.CRLF);\n\t\tif (currentEOL === eol) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\tthis._eventEmitter.beginDeferredEmit();\n\t\t\tif (this._initialUndoRedoSnapshot === null) {\n\t\t\t\tthis._initialUndoRedoSnapshot = this._undoRedoService.createSnapshot(this.uri);\n\t\t\t}\n\t\t\tthis._commandManager.pushEOL(eol);\n\t\t} finally {\n\t\t\tthis._eventEmitter.endDeferredEmit();\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}\n\t}\n\n\tprivate _validateEditOperation(rawOperation: model.IIdentifiedSingleEditOperation): model.ValidAnnotatedEditOperation {\n\t\tif (rawOperation instanceof model.ValidAnnotatedEditOperation) {\n\t\t\treturn rawOperation;\n\t\t}\n\t\treturn new model.ValidAnnotatedEditOperation(\n\t\t\trawOperation.identifier || null,\n\t\t\tthis.validateRange(rawOperation.range),\n\t\t\trawOperation.text,\n\t\t\trawOperation.forceMoveMarkers || false,\n\t\t\trawOperation.isAutoWhitespaceEdit || false,\n\t\t\trawOperation._isTracked || false\n\t\t);\n\t}\n\n\tprivate _validateEditOperations(rawOperations: model.IIdentifiedSingleEditOperation[]): model.ValidAnnotatedEditOperation[] {\n\t\tconst result: model.ValidAnnotatedEditOperation[] = [];\n\t\tfor (let i = 0, len = rawOperations.length; i < len; i++) {\n\t\t\tresult[i] = this._validateEditOperation(rawOperations[i]);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pushEditOperations(beforeCursorState: Selection[] | null, editOperations: model.IIdentifiedSingleEditOperation[], cursorStateComputer: model.ICursorStateComputer | null, group?: UndoRedoGroup): Selection[] | null {\n\t\ttry {\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\tthis._eventEmitter.beginDeferredEmit();\n\t\t\treturn this._pushEditOperations(beforeCursorState, this._validateEditOperations(editOperations), cursorStateComputer, group);\n\t\t} finally {\n\t\t\tthis._eventEmitter.endDeferredEmit();\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}\n\t}\n\n\tprivate _pushEditOperations(beforeCursorState: Selection[] | null, editOperations: model.ValidAnnotatedEditOperation[], cursorStateComputer: model.ICursorStateComputer | null, group?: UndoRedoGroup): Selection[] | null {\n\t\tif (this._options.trimAutoWhitespace && this._trimAutoWhitespaceLines) {\n\t\t\t// Go through each saved line number and insert a trim whitespace edit\n\t\t\t// if it is safe to do so (no conflicts with other edits).\n\n\t\t\tconst incomingEdits = editOperations.map((op) => {\n\t\t\t\treturn {\n\t\t\t\t\trange: this.validateRange(op.range),\n\t\t\t\t\ttext: op.text\n\t\t\t\t};\n\t\t\t});\n\n\t\t\t// Sometimes, auto-formatters change ranges automatically which can cause undesired auto whitespace trimming near the cursor\n\t\t\t// We'll use the following heuristic: if the edits occur near the cursor, then it's ok to trim auto whitespace\n\t\t\tlet editsAreNearCursors = true;\n\t\t\tif (beforeCursorState) {\n\t\t\t\tfor (let i = 0, len = beforeCursorState.length; i < len; i++) {\n\t\t\t\t\tconst sel = beforeCursorState[i];\n\t\t\t\t\tlet foundEditNearSel = false;\n\t\t\t\t\tfor (let j = 0, lenJ = incomingEdits.length; j < lenJ; j++) {\n\t\t\t\t\t\tconst editRange = incomingEdits[j].range;\n\t\t\t\t\t\tconst selIsAbove = editRange.startLineNumber > sel.endLineNumber;\n\t\t\t\t\t\tconst selIsBelow = sel.startLineNumber > editRange.endLineNumber;\n\t\t\t\t\t\tif (!selIsAbove && !selIsBelow) {\n\t\t\t\t\t\t\tfoundEditNearSel = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!foundEditNearSel) {\n\t\t\t\t\t\teditsAreNearCursors = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (editsAreNearCursors) {\n\t\t\t\tfor (let i = 0, len = this._trimAutoWhitespaceLines.length; i < len; i++) {\n\t\t\t\t\tconst trimLineNumber = this._trimAutoWhitespaceLines[i];\n\t\t\t\t\tconst maxLineColumn = this.getLineMaxColumn(trimLineNumber);\n\n\t\t\t\t\tlet allowTrimLine = true;\n\t\t\t\t\tfor (let j = 0, lenJ = incomingEdits.length; j < lenJ; j++) {\n\t\t\t\t\t\tconst editRange = incomingEdits[j].range;\n\t\t\t\t\t\tconst editText = incomingEdits[j].text;\n\n\t\t\t\t\t\tif (trimLineNumber < editRange.startLineNumber || trimLineNumber > editRange.endLineNumber) {\n\t\t\t\t\t\t\t// `trimLine` is completely outside this edit\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// At this point:\n\t\t\t\t\t\t//   editRange.startLineNumber <= trimLine <= editRange.endLineNumber\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttrimLineNumber === editRange.startLineNumber && editRange.startColumn === maxLineColumn\n\t\t\t\t\t\t\t&& editRange.isEmpty() && editText && editText.length > 0 && editText.charAt(0) === '\\n'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// This edit inserts a new line (and maybe other text) after `trimLine`\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttrimLineNumber === editRange.startLineNumber && editRange.startColumn === 1\n\t\t\t\t\t\t\t&& editRange.isEmpty() && editText && editText.length > 0 && editText.charAt(editText.length - 1) === '\\n'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// This edit inserts a new line (and maybe other text) before `trimLine`\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Looks like we can't trim this line as it would interfere with an incoming edit\n\t\t\t\t\t\tallowTrimLine = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (allowTrimLine) {\n\t\t\t\t\t\tconst trimRange = new Range(trimLineNumber, 1, trimLineNumber, maxLineColumn);\n\t\t\t\t\t\teditOperations.push(new model.ValidAnnotatedEditOperation(null, trimRange, null, false, false, false));\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._trimAutoWhitespaceLines = null;\n\t\t}\n\t\tif (this._initialUndoRedoSnapshot === null) {\n\t\t\tthis._initialUndoRedoSnapshot = this._undoRedoService.createSnapshot(this.uri);\n\t\t}\n\t\treturn this._commandManager.pushEditOperation(beforeCursorState, editOperations, cursorStateComputer, group);\n\t}\n\n\t_applyUndo(changes: TextChange[], eol: model.EndOfLineSequence, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void {\n\t\tconst edits = changes.map<ISingleEditOperation>((change) => {\n\t\t\tconst rangeStart = this.getPositionAt(change.newPosition);\n\t\t\tconst rangeEnd = this.getPositionAt(change.newEnd);\n\t\t\treturn {\n\t\t\t\trange: new Range(rangeStart.lineNumber, rangeStart.column, rangeEnd.lineNumber, rangeEnd.column),\n\t\t\t\ttext: change.oldText\n\t\t\t};\n\t\t});\n\t\tthis._applyUndoRedoEdits(edits, eol, true, false, resultingAlternativeVersionId, resultingSelection);\n\t}\n\n\t_applyRedo(changes: TextChange[], eol: model.EndOfLineSequence, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void {\n\t\tconst edits = changes.map<ISingleEditOperation>((change) => {\n\t\t\tconst rangeStart = this.getPositionAt(change.oldPosition);\n\t\t\tconst rangeEnd = this.getPositionAt(change.oldEnd);\n\t\t\treturn {\n\t\t\t\trange: new Range(rangeStart.lineNumber, rangeStart.column, rangeEnd.lineNumber, rangeEnd.column),\n\t\t\t\ttext: change.newText\n\t\t\t};\n\t\t});\n\t\tthis._applyUndoRedoEdits(edits, eol, false, true, resultingAlternativeVersionId, resultingSelection);\n\t}\n\n\tprivate _applyUndoRedoEdits(edits: ISingleEditOperation[], eol: model.EndOfLineSequence, isUndoing: boolean, isRedoing: boolean, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void {\n\t\ttry {\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\tthis._eventEmitter.beginDeferredEmit();\n\t\t\tthis._isUndoing = isUndoing;\n\t\t\tthis._isRedoing = isRedoing;\n\t\t\tthis.applyEdits(edits, false);\n\t\t\tthis.setEOL(eol);\n\t\t\tthis._overwriteAlternativeVersionId(resultingAlternativeVersionId);\n\t\t} finally {\n\t\t\tthis._isUndoing = false;\n\t\t\tthis._isRedoing = false;\n\t\t\tthis._eventEmitter.endDeferredEmit(resultingSelection);\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}\n\t}\n\n\tpublic applyEdits(operations: model.IIdentifiedSingleEditOperation[]): void;\n\tpublic applyEdits(operations: model.IIdentifiedSingleEditOperation[], computeUndoEdits: false): void;\n\tpublic applyEdits(operations: model.IIdentifiedSingleEditOperation[], computeUndoEdits: true): model.IValidEditOperation[];\n\tpublic applyEdits(rawOperations: model.IIdentifiedSingleEditOperation[], computeUndoEdits: boolean = false): void | model.IValidEditOperation[] {\n\t\ttry {\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\tthis._eventEmitter.beginDeferredEmit();\n\t\t\tconst operations = this._validateEditOperations(rawOperations);\n\t\t\treturn this._doApplyEdits(operations, computeUndoEdits);\n\t\t} finally {\n\t\t\tthis._eventEmitter.endDeferredEmit();\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}\n\t}\n\n\tprivate _doApplyEdits(rawOperations: model.ValidAnnotatedEditOperation[], computeUndoEdits: boolean): void | model.IValidEditOperation[] {\n\n\t\tconst oldLineCount = this._buffer.getLineCount();\n\t\tconst result = this._buffer.applyEdits(rawOperations, this._options.trimAutoWhitespace, computeUndoEdits);\n\t\tconst newLineCount = this._buffer.getLineCount();\n\n\t\tconst contentChanges = result.changes;\n\t\tthis._trimAutoWhitespaceLines = result.trimAutoWhitespaceLineNumbers;\n\n\t\tif (contentChanges.length !== 0) {\n\t\t\t// We do a first pass to update decorations\n\t\t\t// because we want to read decorations in the second pass\n\t\t\t// where we will emit content change events\n\t\t\t// and we want to read the final decorations\n\t\t\tfor (let i = 0, len = contentChanges.length; i < len; i++) {\n\t\t\t\tconst change = contentChanges[i];\n\t\t\t\tthis._decorationsTree.acceptReplace(change.rangeOffset, change.rangeLength, change.text.length, change.forceMoveMarkers);\n\t\t\t}\n\n\t\t\tconst rawContentChanges: ModelRawChange[] = [];\n\n\t\t\tthis._increaseVersionId();\n\n\t\t\tlet lineCount = oldLineCount;\n\t\t\tfor (let i = 0, len = contentChanges.length; i < len; i++) {\n\t\t\t\tconst change = contentChanges[i];\n\t\t\t\tconst [eolCount] = countEOL(change.text);\n\t\t\t\tthis._onDidChangeDecorations.fire();\n\n\t\t\t\tconst startLineNumber = change.range.startLineNumber;\n\t\t\t\tconst endLineNumber = change.range.endLineNumber;\n\n\t\t\t\tconst deletingLinesCnt = endLineNumber - startLineNumber;\n\t\t\t\tconst insertingLinesCnt = eolCount;\n\t\t\t\tconst editingLinesCnt = Math.min(deletingLinesCnt, insertingLinesCnt);\n\n\t\t\t\tconst changeLineCountDelta = (insertingLinesCnt - deletingLinesCnt);\n\n\t\t\t\tconst currentEditStartLineNumber = newLineCount - lineCount - changeLineCountDelta + startLineNumber;\n\t\t\t\tconst firstEditLineNumber = currentEditStartLineNumber;\n\t\t\t\tconst lastInsertedLineNumber = currentEditStartLineNumber + insertingLinesCnt;\n\n\t\t\t\tconst decorationsWithInjectedTextInEditedRange = this._decorationsTree.getInjectedTextInInterval(\n\t\t\t\t\tthis,\n\t\t\t\t\tthis.getOffsetAt(new Position(firstEditLineNumber, 1)),\n\t\t\t\t\tthis.getOffsetAt(new Position(lastInsertedLineNumber, this.getLineMaxColumn(lastInsertedLineNumber))),\n\t\t\t\t\t0\n\t\t\t\t);\n\n\n\t\t\t\tconst injectedTextInEditedRange = LineInjectedText.fromDecorations(decorationsWithInjectedTextInEditedRange);\n\t\t\t\tconst injectedTextInEditedRangeQueue = new ArrayQueue(injectedTextInEditedRange);\n\n\t\t\t\tfor (let j = editingLinesCnt; j >= 0; j--) {\n\t\t\t\t\tconst editLineNumber = startLineNumber + j;\n\t\t\t\t\tconst currentEditLineNumber = currentEditStartLineNumber + j;\n\n\t\t\t\t\tinjectedTextInEditedRangeQueue.takeFromEndWhile(r => r.lineNumber > currentEditLineNumber);\n\t\t\t\t\tconst decorationsInCurrentLine = injectedTextInEditedRangeQueue.takeFromEndWhile(r => r.lineNumber === currentEditLineNumber);\n\n\t\t\t\t\trawContentChanges.push(\n\t\t\t\t\t\tnew ModelRawLineChanged(\n\t\t\t\t\t\t\teditLineNumber,\n\t\t\t\t\t\t\tthis.getLineContent(currentEditLineNumber),\n\t\t\t\t\t\t\tdecorationsInCurrentLine\n\t\t\t\t\t\t));\n\t\t\t\t}\n\n\t\t\t\tif (editingLinesCnt < deletingLinesCnt) {\n\t\t\t\t\t// Must delete some lines\n\t\t\t\t\tconst spliceStartLineNumber = startLineNumber + editingLinesCnt;\n\t\t\t\t\trawContentChanges.push(new ModelRawLinesDeleted(spliceStartLineNumber + 1, endLineNumber));\n\t\t\t\t}\n\n\t\t\t\tif (editingLinesCnt < insertingLinesCnt) {\n\t\t\t\t\tconst injectedTextInEditedRangeQueue = new ArrayQueue(injectedTextInEditedRange);\n\t\t\t\t\t// Must insert some lines\n\t\t\t\t\tconst spliceLineNumber = startLineNumber + editingLinesCnt;\n\t\t\t\t\tconst cnt = insertingLinesCnt - editingLinesCnt;\n\t\t\t\t\tconst fromLineNumber = newLineCount - lineCount - cnt + spliceLineNumber + 1;\n\t\t\t\t\tconst injectedTexts: (LineInjectedText[] | null)[] = [];\n\t\t\t\t\tconst newLines: string[] = [];\n\t\t\t\t\tfor (let i = 0; i < cnt; i++) {\n\t\t\t\t\t\tconst lineNumber = fromLineNumber + i;\n\t\t\t\t\t\tnewLines[i] = this.getLineContent(lineNumber);\n\n\t\t\t\t\t\tinjectedTextInEditedRangeQueue.takeWhile(r => r.lineNumber < lineNumber);\n\t\t\t\t\t\tinjectedTexts[i] = injectedTextInEditedRangeQueue.takeWhile(r => r.lineNumber === lineNumber);\n\t\t\t\t\t}\n\n\t\t\t\t\trawContentChanges.push(\n\t\t\t\t\t\tnew ModelRawLinesInserted(\n\t\t\t\t\t\t\tspliceLineNumber + 1,\n\t\t\t\t\t\t\tstartLineNumber + insertingLinesCnt,\n\t\t\t\t\t\t\tnewLines,\n\t\t\t\t\t\t\tinjectedTexts\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlineCount += changeLineCountDelta;\n\t\t\t}\n\n\t\t\tthis._emitContentChangedEvent(\n\t\t\t\tnew ModelRawContentChangedEvent(\n\t\t\t\t\trawContentChanges,\n\t\t\t\t\tthis.getVersionId(),\n\t\t\t\t\tthis._isUndoing,\n\t\t\t\t\tthis._isRedoing\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\tchanges: contentChanges,\n\t\t\t\t\teol: this._buffer.getEOL(),\n\t\t\t\t\tisEolChange: false,\n\t\t\t\t\tversionId: this.getVersionId(),\n\t\t\t\t\tisUndoing: this._isUndoing,\n\t\t\t\t\tisRedoing: this._isRedoing,\n\t\t\t\t\tisFlush: false\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn (result.reverseEdits === null ? undefined : result.reverseEdits);\n\t}\n\n\tpublic undo(): void | Promise<void> {\n\t\treturn this._undoRedoService.undo(this.uri);\n\t}\n\n\tpublic canUndo(): boolean {\n\t\treturn this._undoRedoService.canUndo(this.uri);\n\t}\n\n\tpublic redo(): void | Promise<void> {\n\t\treturn this._undoRedoService.redo(this.uri);\n\t}\n\n\tpublic canRedo(): boolean {\n\t\treturn this._undoRedoService.canRedo(this.uri);\n\t}\n\n\t//#endregion\n\n\t//#region Decorations\n\n\tprivate handleBeforeFireDecorationsChangedEvent(affectedInjectedTextLines: Set<number> | null): void {\n\t\t// This is called before the decoration changed event is fired.\n\n\t\tif (affectedInjectedTextLines === null || affectedInjectedTextLines.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst affectedLines = Array.from(affectedInjectedTextLines);\n\t\tconst lineChangeEvents = affectedLines.map(lineNumber => new ModelRawLineChanged(lineNumber, this.getLineContent(lineNumber), this._getInjectedTextInLine(lineNumber)));\n\n\t\tthis._onDidChangeInjectedText.fire(new ModelInjectedTextChangedEvent(lineChangeEvents));\n\t}\n\n\tpublic changeDecorations<T>(callback: (changeAccessor: model.IModelDecorationsChangeAccessor) => T, ownerId: number = 0): T | null {\n\t\tthis._assertNotDisposed();\n\n\t\ttry {\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\treturn this._changeDecorations(ownerId, callback);\n\t\t} finally {\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}\n\t}\n\n\tprivate _changeDecorations<T>(ownerId: number, callback: (changeAccessor: model.IModelDecorationsChangeAccessor) => T): T | null {\n\t\tconst changeAccessor: model.IModelDecorationsChangeAccessor = {\n\t\t\taddDecoration: (range: IRange, options: model.IModelDecorationOptions): string => {\n\t\t\t\treturn this._deltaDecorationsImpl(ownerId, [], [{ range: range, options: options }])[0];\n\t\t\t},\n\t\t\tchangeDecoration: (id: string, newRange: IRange): void => {\n\t\t\t\tthis._changeDecorationImpl(id, newRange);\n\t\t\t},\n\t\t\tchangeDecorationOptions: (id: string, options: model.IModelDecorationOptions) => {\n\t\t\t\tthis._changeDecorationOptionsImpl(id, _normalizeOptions(options));\n\t\t\t},\n\t\t\tremoveDecoration: (id: string): void => {\n\t\t\t\tthis._deltaDecorationsImpl(ownerId, [id], []);\n\t\t\t},\n\t\t\tdeltaDecorations: (oldDecorations: string[], newDecorations: model.IModelDeltaDecoration[]): string[] => {\n\t\t\t\tif (oldDecorations.length === 0 && newDecorations.length === 0) {\n\t\t\t\t\t// nothing to do\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\treturn this._deltaDecorationsImpl(ownerId, oldDecorations, newDecorations);\n\t\t\t}\n\t\t};\n\t\tlet result: T | null = null;\n\t\ttry {\n\t\t\tresult = callback(changeAccessor);\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t\t// Invalidate change accessor\n\t\tchangeAccessor.addDecoration = invalidFunc;\n\t\tchangeAccessor.changeDecoration = invalidFunc;\n\t\tchangeAccessor.changeDecorationOptions = invalidFunc;\n\t\tchangeAccessor.removeDecoration = invalidFunc;\n\t\tchangeAccessor.deltaDecorations = invalidFunc;\n\t\treturn result;\n\t}\n\n\tpublic deltaDecorations(oldDecorations: string[], newDecorations: model.IModelDeltaDecoration[], ownerId: number = 0): string[] {\n\t\tthis._assertNotDisposed();\n\t\tif (!oldDecorations) {\n\t\t\toldDecorations = [];\n\t\t}\n\t\tif (oldDecorations.length === 0 && newDecorations.length === 0) {\n\t\t\t// nothing to do\n\t\t\treturn [];\n\t\t}\n\n\t\ttry {\n\t\t\tthis._deltaDecorationCallCnt++;\n\t\t\tif (this._deltaDecorationCallCnt > 1) {\n\t\t\t\tconsole.warn(`Invoking deltaDecorations recursively could lead to leaking decorations.`);\n\t\t\t\tonUnexpectedError(new Error(`Invoking deltaDecorations recursively could lead to leaking decorations.`));\n\t\t\t}\n\t\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\t\treturn this._deltaDecorationsImpl(ownerId, oldDecorations, newDecorations);\n\t\t} finally {\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t\tthis._deltaDecorationCallCnt--;\n\t\t}\n\t}\n\n\t_getTrackedRange(id: string): Range | null {\n\t\treturn this.getDecorationRange(id);\n\t}\n\n\t_setTrackedRange(id: string | null, newRange: null, newStickiness: model.TrackedRangeStickiness): null;\n\t_setTrackedRange(id: string | null, newRange: Range, newStickiness: model.TrackedRangeStickiness): string;\n\t_setTrackedRange(id: string | null, newRange: Range | null, newStickiness: model.TrackedRangeStickiness): string | null {\n\t\tconst node = (id ? this._decorations[id] : null);\n\n\t\tif (!node) {\n\t\t\tif (!newRange) {\n\t\t\t\t// node doesn't exist, the request is to delete => nothing to do\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// node doesn't exist, the request is to set => add the tracked range\n\t\t\treturn this._deltaDecorationsImpl(0, [], [{ range: newRange, options: TRACKED_RANGE_OPTIONS[newStickiness] }], true)[0];\n\t\t}\n\n\t\tif (!newRange) {\n\t\t\t// node exists, the request is to delete => delete node\n\t\t\tthis._decorationsTree.delete(node);\n\t\t\tdelete this._decorations[node.id];\n\t\t\treturn null;\n\t\t}\n\n\t\t// node exists, the request is to set => change the tracked range and its options\n\t\tconst range = this._validateRangeRelaxedNoAllocations(newRange);\n\t\tconst startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\tconst endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n\t\tthis._decorationsTree.delete(node);\n\t\tnode.reset(this.getVersionId(), startOffset, endOffset, range);\n\t\tnode.setOptions(TRACKED_RANGE_OPTIONS[newStickiness]);\n\t\tthis._decorationsTree.insert(node);\n\t\treturn node.id;\n\t}\n\n\tpublic removeAllDecorationsWithOwnerId(ownerId: number): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tconst nodes = this._decorationsTree.collectNodesFromOwner(ownerId);\n\t\tfor (let i = 0, len = nodes.length; i < len; i++) {\n\t\t\tconst node = nodes[i];\n\n\t\t\tthis._decorationsTree.delete(node);\n\t\t\tdelete this._decorations[node.id];\n\t\t}\n\t}\n\n\tpublic getDecorationOptions(decorationId: string): model.IModelDecorationOptions | null {\n\t\tconst node = this._decorations[decorationId];\n\t\tif (!node) {\n\t\t\treturn null;\n\t\t}\n\t\treturn node.options;\n\t}\n\n\tpublic getDecorationRange(decorationId: string): Range | null {\n\t\tconst node = this._decorations[decorationId];\n\t\tif (!node) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._decorationsTree.getNodeRange(this, node);\n\t}\n\n\tpublic getLineDecorations(lineNumber: number, ownerId: number = 0, filterOutValidation: boolean = false): model.IModelDecoration[] {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.getLinesDecorations(lineNumber, lineNumber, ownerId, filterOutValidation);\n\t}\n\n\tpublic getLinesDecorations(_startLineNumber: number, _endLineNumber: number, ownerId: number = 0, filterOutValidation: boolean = false, onlyMarginDecorations: boolean = false): model.IModelDecoration[] {\n\t\tconst lineCount = this.getLineCount();\n\t\tconst startLineNumber = Math.min(lineCount, Math.max(1, _startLineNumber));\n\t\tconst endLineNumber = Math.min(lineCount, Math.max(1, _endLineNumber));\n\t\tconst endColumn = this.getLineMaxColumn(endLineNumber);\n\t\tconst range = new Range(startLineNumber, 1, endLineNumber, endColumn);\n\n\t\tconst decorations = this._getDecorationsInRange(range, ownerId, filterOutValidation, onlyMarginDecorations);\n\t\tpushMany(decorations, this._decorationProvider.getDecorationsInRange(range, ownerId, filterOutValidation));\n\t\treturn decorations;\n\t}\n\n\tpublic getDecorationsInRange(range: IRange, ownerId: number = 0, filterOutValidation: boolean = false, onlyMinimapDecorations: boolean = false, onlyMarginDecorations: boolean = false): model.IModelDecoration[] {\n\t\tconst validatedRange = this.validateRange(range);\n\n\t\tconst decorations = this._getDecorationsInRange(validatedRange, ownerId, filterOutValidation, onlyMarginDecorations);\n\t\tpushMany(decorations, this._decorationProvider.getDecorationsInRange(validatedRange, ownerId, filterOutValidation, onlyMinimapDecorations));\n\t\treturn decorations;\n\t}\n\n\tpublic getOverviewRulerDecorations(ownerId: number = 0, filterOutValidation: boolean = false): model.IModelDecoration[] {\n\t\treturn this._decorationsTree.getAll(this, ownerId, filterOutValidation, true, false);\n\t}\n\n\tpublic getInjectedTextDecorations(ownerId: number = 0): model.IModelDecoration[] {\n\t\treturn this._decorationsTree.getAllInjectedText(this, ownerId);\n\t}\n\n\tprivate _getInjectedTextInLine(lineNumber: number): LineInjectedText[] {\n\t\tconst startOffset = this._buffer.getOffsetAt(lineNumber, 1);\n\t\tconst endOffset = startOffset + this._buffer.getLineLength(lineNumber);\n\n\t\tconst result = this._decorationsTree.getInjectedTextInInterval(this, startOffset, endOffset, 0);\n\t\treturn LineInjectedText.fromDecorations(result).filter(t => t.lineNumber === lineNumber);\n\t}\n\n\tpublic getAllDecorations(ownerId: number = 0, filterOutValidation: boolean = false): model.IModelDecoration[] {\n\t\tlet result = this._decorationsTree.getAll(this, ownerId, filterOutValidation, false, false);\n\t\tresult = result.concat(this._decorationProvider.getAllDecorations(ownerId, filterOutValidation));\n\t\treturn result;\n\t}\n\n\tpublic getAllMarginDecorations(ownerId: number = 0): model.IModelDecoration[] {\n\t\treturn this._decorationsTree.getAll(this, ownerId, false, false, true);\n\t}\n\n\tprivate _getDecorationsInRange(filterRange: Range, filterOwnerId: number, filterOutValidation: boolean, onlyMarginDecorations: boolean): model.IModelDecoration[] {\n\t\tconst startOffset = this._buffer.getOffsetAt(filterRange.startLineNumber, filterRange.startColumn);\n\t\tconst endOffset = this._buffer.getOffsetAt(filterRange.endLineNumber, filterRange.endColumn);\n\t\treturn this._decorationsTree.getAllInInterval(this, startOffset, endOffset, filterOwnerId, filterOutValidation, onlyMarginDecorations);\n\t}\n\n\tpublic getRangeAt(start: number, end: number): Range {\n\t\treturn this._buffer.getRangeAt(start, end - start);\n\t}\n\n\tprivate _changeDecorationImpl(decorationId: string, _range: IRange): void {\n\t\tconst node = this._decorations[decorationId];\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (node.options.after) {\n\t\t\tconst oldRange = this.getDecorationRange(decorationId);\n\t\t\tthis._onDidChangeDecorations.recordLineAffectedByInjectedText(oldRange!.endLineNumber);\n\t\t}\n\t\tif (node.options.before) {\n\t\t\tconst oldRange = this.getDecorationRange(decorationId);\n\t\t\tthis._onDidChangeDecorations.recordLineAffectedByInjectedText(oldRange!.startLineNumber);\n\t\t}\n\n\t\tconst range = this._validateRangeRelaxedNoAllocations(_range);\n\t\tconst startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\tconst endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n\n\t\tthis._decorationsTree.delete(node);\n\t\tnode.reset(this.getVersionId(), startOffset, endOffset, range);\n\t\tthis._decorationsTree.insert(node);\n\t\tthis._onDidChangeDecorations.checkAffectedAndFire(node.options);\n\n\t\tif (node.options.after) {\n\t\t\tthis._onDidChangeDecorations.recordLineAffectedByInjectedText(range.endLineNumber);\n\t\t}\n\t\tif (node.options.before) {\n\t\t\tthis._onDidChangeDecorations.recordLineAffectedByInjectedText(range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _changeDecorationOptionsImpl(decorationId: string, options: ModelDecorationOptions): void {\n\t\tconst node = this._decorations[decorationId];\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nodeWasInOverviewRuler = (node.options.overviewRuler && node.options.overviewRuler.color ? true : false);\n\t\tconst nodeIsInOverviewRuler = (options.overviewRuler && options.overviewRuler.color ? true : false);\n\n\t\tthis._onDidChangeDecorations.checkAffectedAndFire(node.options);\n\t\tthis._onDidChangeDecorations.checkAffectedAndFire(options);\n\n\t\tif (node.options.after || options.after) {\n\t\t\tconst nodeRange = this._decorationsTree.getNodeRange(this, node);\n\t\t\tthis._onDidChangeDecorations.recordLineAffectedByInjectedText(nodeRange.endLineNumber);\n\t\t}\n\t\tif (node.options.before || options.before) {\n\t\t\tconst nodeRange = this._decorationsTree.getNodeRange(this, node);\n\t\t\tthis._onDidChangeDecorations.recordLineAffectedByInjectedText(nodeRange.startLineNumber);\n\t\t}\n\n\t\tif (nodeWasInOverviewRuler !== nodeIsInOverviewRuler) {\n\t\t\t// Delete + Insert due to an overview ruler status change\n\t\t\tthis._decorationsTree.delete(node);\n\t\t\tnode.setOptions(options);\n\t\t\tthis._decorationsTree.insert(node);\n\t\t} else {\n\t\t\tnode.setOptions(options);\n\t\t}\n\t}\n\n\tprivate _deltaDecorationsImpl(ownerId: number, oldDecorationsIds: string[], newDecorations: model.IModelDeltaDecoration[], suppressEvents: boolean = false): string[] {\n\t\tconst versionId = this.getVersionId();\n\n\t\tconst oldDecorationsLen = oldDecorationsIds.length;\n\t\tlet oldDecorationIndex = 0;\n\n\t\tconst newDecorationsLen = newDecorations.length;\n\t\tlet newDecorationIndex = 0;\n\n\t\tthis._onDidChangeDecorations.beginDeferredEmit();\n\t\ttry {\n\t\t\tconst result = new Array<string>(newDecorationsLen);\n\t\t\twhile (oldDecorationIndex < oldDecorationsLen || newDecorationIndex < newDecorationsLen) {\n\n\t\t\t\tlet node: IntervalNode | null = null;\n\n\t\t\t\tif (oldDecorationIndex < oldDecorationsLen) {\n\t\t\t\t\t// (1) get ourselves an old node\n\t\t\t\t\tdo {\n\t\t\t\t\t\tnode = this._decorations[oldDecorationsIds[oldDecorationIndex++]];\n\t\t\t\t\t} while (!node && oldDecorationIndex < oldDecorationsLen);\n\n\t\t\t\t\t// (2) remove the node from the tree (if it exists)\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tif (node.options.after) {\n\t\t\t\t\t\t\tconst nodeRange = this._decorationsTree.getNodeRange(this, node);\n\t\t\t\t\t\t\tthis._onDidChangeDecorations.recordLineAffectedByInjectedText(nodeRange.endLineNumber);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (node.options.before) {\n\t\t\t\t\t\t\tconst nodeRange = this._decorationsTree.getNodeRange(this, node);\n\t\t\t\t\t\t\tthis._onDidChangeDecorations.recordLineAffectedByInjectedText(nodeRange.startLineNumber);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._decorationsTree.delete(node);\n\n\t\t\t\t\t\tif (!suppressEvents) {\n\t\t\t\t\t\t\tthis._onDidChangeDecorations.checkAffectedAndFire(node.options);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (newDecorationIndex < newDecorationsLen) {\n\t\t\t\t\t// (3) create a new node if necessary\n\t\t\t\t\tif (!node) {\n\t\t\t\t\t\tconst internalDecorationId = (++this._lastDecorationId);\n\t\t\t\t\t\tconst decorationId = `${this._instanceId};${internalDecorationId}`;\n\t\t\t\t\t\tnode = new IntervalNode(decorationId, 0, 0);\n\t\t\t\t\t\tthis._decorations[decorationId] = node;\n\t\t\t\t\t}\n\n\t\t\t\t\t// (4) initialize node\n\t\t\t\t\tconst newDecoration = newDecorations[newDecorationIndex];\n\t\t\t\t\tconst range = this._validateRangeRelaxedNoAllocations(newDecoration.range);\n\t\t\t\t\tconst options = _normalizeOptions(newDecoration.options);\n\t\t\t\t\tconst startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\t\t\t\tconst endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n\n\t\t\t\t\tnode.ownerId = ownerId;\n\t\t\t\t\tnode.reset(versionId, startOffset, endOffset, range);\n\t\t\t\t\tnode.setOptions(options);\n\n\t\t\t\t\tif (node.options.after) {\n\t\t\t\t\t\tthis._onDidChangeDecorations.recordLineAffectedByInjectedText(range.endLineNumber);\n\t\t\t\t\t}\n\t\t\t\t\tif (node.options.before) {\n\t\t\t\t\t\tthis._onDidChangeDecorations.recordLineAffectedByInjectedText(range.startLineNumber);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!suppressEvents) {\n\t\t\t\t\t\tthis._onDidChangeDecorations.checkAffectedAndFire(options);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._decorationsTree.insert(node);\n\n\t\t\t\t\tresult[newDecorationIndex] = node.id;\n\n\t\t\t\t\tnewDecorationIndex++;\n\t\t\t\t} else {\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tdelete this._decorations[node.id];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} finally {\n\t\t\tthis._onDidChangeDecorations.endDeferredEmit();\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Tokenization\n\n\t// TODO move them to the tokenization part.\n\tpublic getLanguageId(): string {\n\t\treturn this.tokenization.getLanguageId();\n\t}\n\n\tpublic setLanguage(languageIdOrSelection: string | ILanguageSelection, source?: string): void {\n\t\tif (typeof languageIdOrSelection === 'string') {\n\t\t\tthis._languageSelectionListener.clear();\n\t\t\tthis._setLanguage(languageIdOrSelection, source);\n\t\t} else {\n\t\t\tthis._languageSelectionListener.value = languageIdOrSelection.onDidChange(() => this._setLanguage(languageIdOrSelection.languageId, source));\n\t\t\tthis._setLanguage(languageIdOrSelection.languageId, source);\n\t\t}\n\t}\n\n\tprivate _setLanguage(languageId: string, source?: string): void {\n\t\tthis.tokenization.setLanguageId(languageId, source);\n\t\tthis._languageService.requestRichLanguageFeatures(languageId);\n\t}\n\n\tpublic getLanguageIdAtPosition(lineNumber: number, column: number): string {\n\t\treturn this.tokenization.getLanguageIdAtPosition(lineNumber, column);\n\t}\n\n\tpublic getWordAtPosition(position: IPosition): IWordAtPosition | null {\n\t\treturn this._tokenizationTextModelPart.getWordAtPosition(position);\n\t}\n\n\tpublic getWordUntilPosition(position: IPosition): IWordAtPosition {\n\t\treturn this._tokenizationTextModelPart.getWordUntilPosition(position);\n\t}\n\n\t//#endregion\n\tnormalizePosition(position: Position, affinity: model.PositionAffinity): Position {\n\t\treturn position;\n\t}\n\n\t/**\n\t * Gets the column at which indentation stops at a given line.\n\t * @internal\n\t*/\n\tpublic getLineIndentColumn(lineNumber: number): number {\n\t\t// Columns start with 1.\n\t\treturn indentOfLine(this.getLineContent(lineNumber)) + 1;\n\t}\n}\n\nfunction indentOfLine(line: string): number {\n\tlet indent = 0;\n\tfor (const c of line) {\n\t\tif (c === ' ' || c === '\\t') {\n\t\t\tindent++;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn indent;\n}\n\n//#region Decorations\n\nfunction isNodeInOverviewRuler(node: IntervalNode): boolean {\n\treturn (node.options.overviewRuler && node.options.overviewRuler.color ? true : false);\n}\n\nfunction isNodeInjectedText(node: IntervalNode): boolean {\n\treturn !!node.options.after || !!node.options.before;\n}\n\nexport interface IDecorationsTreesHost {\n\tgetVersionId(): number;\n\tgetRangeAt(start: number, end: number): Range;\n}\n\nclass DecorationsTrees {\n\n\t/**\n\t * This tree holds decorations that do not show up in the overview ruler.\n\t */\n\tprivate readonly _decorationsTree0: IntervalTree;\n\n\t/**\n\t * This tree holds decorations that show up in the overview ruler.\n\t */\n\tprivate readonly _decorationsTree1: IntervalTree;\n\n\t/**\n\t * This tree holds decorations that contain injected text.\n\t */\n\tprivate readonly _injectedTextDecorationsTree: IntervalTree;\n\n\tconstructor() {\n\t\tthis._decorationsTree0 = new IntervalTree();\n\t\tthis._decorationsTree1 = new IntervalTree();\n\t\tthis._injectedTextDecorationsTree = new IntervalTree();\n\t}\n\n\tpublic ensureAllNodesHaveRanges(host: IDecorationsTreesHost): void {\n\t\tthis.getAll(host, 0, false, false, false);\n\t}\n\n\tprivate _ensureNodesHaveRanges(host: IDecorationsTreesHost, nodes: IntervalNode[]): model.IModelDecoration[] {\n\t\tfor (const node of nodes) {\n\t\t\tif (node.range === null) {\n\t\t\t\tnode.range = host.getRangeAt(node.cachedAbsoluteStart, node.cachedAbsoluteEnd);\n\t\t\t}\n\t\t}\n\t\treturn <model.IModelDecoration[]>nodes;\n\t}\n\n\tpublic getAllInInterval(host: IDecorationsTreesHost, start: number, end: number, filterOwnerId: number, filterOutValidation: boolean, onlyMarginDecorations: boolean): model.IModelDecoration[] {\n\t\tconst versionId = host.getVersionId();\n\t\tconst result = this._intervalSearch(start, end, filterOwnerId, filterOutValidation, versionId, onlyMarginDecorations);\n\t\treturn this._ensureNodesHaveRanges(host, result);\n\t}\n\n\tprivate _intervalSearch(start: number, end: number, filterOwnerId: number, filterOutValidation: boolean, cachedVersionId: number, onlyMarginDecorations: boolean): IntervalNode[] {\n\t\tconst r0 = this._decorationsTree0.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n\t\tconst r1 = this._decorationsTree1.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n\t\tconst r2 = this._injectedTextDecorationsTree.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n\t\treturn r0.concat(r1).concat(r2);\n\t}\n\n\tpublic getInjectedTextInInterval(host: IDecorationsTreesHost, start: number, end: number, filterOwnerId: number): model.IModelDecoration[] {\n\t\tconst versionId = host.getVersionId();\n\t\tconst result = this._injectedTextDecorationsTree.intervalSearch(start, end, filterOwnerId, false, versionId, false);\n\t\treturn this._ensureNodesHaveRanges(host, result).filter((i) => i.options.showIfCollapsed || !i.range.isEmpty());\n\t}\n\n\tpublic getAllInjectedText(host: IDecorationsTreesHost, filterOwnerId: number): model.IModelDecoration[] {\n\t\tconst versionId = host.getVersionId();\n\t\tconst result = this._injectedTextDecorationsTree.search(filterOwnerId, false, versionId, false);\n\t\treturn this._ensureNodesHaveRanges(host, result).filter((i) => i.options.showIfCollapsed || !i.range.isEmpty());\n\t}\n\n\tpublic getAll(host: IDecorationsTreesHost, filterOwnerId: number, filterOutValidation: boolean, overviewRulerOnly: boolean, onlyMarginDecorations: boolean): model.IModelDecoration[] {\n\t\tconst versionId = host.getVersionId();\n\t\tconst result = this._search(filterOwnerId, filterOutValidation, overviewRulerOnly, versionId, onlyMarginDecorations);\n\t\treturn this._ensureNodesHaveRanges(host, result);\n\t}\n\n\tprivate _search(filterOwnerId: number, filterOutValidation: boolean, overviewRulerOnly: boolean, cachedVersionId: number, onlyMarginDecorations: boolean): IntervalNode[] {\n\t\tif (overviewRulerOnly) {\n\t\t\treturn this._decorationsTree1.search(filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n\t\t} else {\n\t\t\tconst r0 = this._decorationsTree0.search(filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n\t\t\tconst r1 = this._decorationsTree1.search(filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n\t\t\tconst r2 = this._injectedTextDecorationsTree.search(filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n\t\t\treturn r0.concat(r1).concat(r2);\n\t\t}\n\t}\n\n\tpublic collectNodesFromOwner(ownerId: number): IntervalNode[] {\n\t\tconst r0 = this._decorationsTree0.collectNodesFromOwner(ownerId);\n\t\tconst r1 = this._decorationsTree1.collectNodesFromOwner(ownerId);\n\t\tconst r2 = this._injectedTextDecorationsTree.collectNodesFromOwner(ownerId);\n\t\treturn r0.concat(r1).concat(r2);\n\t}\n\n\tpublic collectNodesPostOrder(): IntervalNode[] {\n\t\tconst r0 = this._decorationsTree0.collectNodesPostOrder();\n\t\tconst r1 = this._decorationsTree1.collectNodesPostOrder();\n\t\tconst r2 = this._injectedTextDecorationsTree.collectNodesPostOrder();\n\t\treturn r0.concat(r1).concat(r2);\n\t}\n\n\tpublic insert(node: IntervalNode): void {\n\t\tif (isNodeInjectedText(node)) {\n\t\t\tthis._injectedTextDecorationsTree.insert(node);\n\t\t} else if (isNodeInOverviewRuler(node)) {\n\t\t\tthis._decorationsTree1.insert(node);\n\t\t} else {\n\t\t\tthis._decorationsTree0.insert(node);\n\t\t}\n\t}\n\n\tpublic delete(node: IntervalNode): void {\n\t\tif (isNodeInjectedText(node)) {\n\t\t\tthis._injectedTextDecorationsTree.delete(node);\n\t\t} else if (isNodeInOverviewRuler(node)) {\n\t\t\tthis._decorationsTree1.delete(node);\n\t\t} else {\n\t\t\tthis._decorationsTree0.delete(node);\n\t\t}\n\t}\n\n\tpublic getNodeRange(host: IDecorationsTreesHost, node: IntervalNode): Range {\n\t\tconst versionId = host.getVersionId();\n\t\tif (node.cachedVersionId !== versionId) {\n\t\t\tthis._resolveNode(node, versionId);\n\t\t}\n\t\tif (node.range === null) {\n\t\t\tnode.range = host.getRangeAt(node.cachedAbsoluteStart, node.cachedAbsoluteEnd);\n\t\t}\n\t\treturn node.range;\n\t}\n\n\tprivate _resolveNode(node: IntervalNode, cachedVersionId: number): void {\n\t\tif (isNodeInjectedText(node)) {\n\t\t\tthis._injectedTextDecorationsTree.resolveNode(node, cachedVersionId);\n\t\t} else if (isNodeInOverviewRuler(node)) {\n\t\t\tthis._decorationsTree1.resolveNode(node, cachedVersionId);\n\t\t} else {\n\t\t\tthis._decorationsTree0.resolveNode(node, cachedVersionId);\n\t\t}\n\t}\n\n\tpublic acceptReplace(offset: number, length: number, textLength: number, forceMoveMarkers: boolean): void {\n\t\tthis._decorationsTree0.acceptReplace(offset, length, textLength, forceMoveMarkers);\n\t\tthis._decorationsTree1.acceptReplace(offset, length, textLength, forceMoveMarkers);\n\t\tthis._injectedTextDecorationsTree.acceptReplace(offset, length, textLength, forceMoveMarkers);\n\t}\n}\n\nfunction cleanClassName(className: string): string {\n\treturn className.replace(/[^a-z0-9\\-_]/gi, ' ');\n}\n\nclass DecorationOptions implements model.IDecorationOptions {\n\treadonly color: string | ThemeColor;\n\treadonly darkColor: string | ThemeColor;\n\n\tconstructor(options: model.IDecorationOptions) {\n\t\tthis.color = options.color || '';\n\t\tthis.darkColor = options.darkColor || '';\n\n\t}\n}\n\nexport class ModelDecorationOverviewRulerOptions extends DecorationOptions {\n\treadonly position: model.OverviewRulerLane;\n\tprivate _resolvedColor: string | null;\n\n\tconstructor(options: model.IModelDecorationOverviewRulerOptions) {\n\t\tsuper(options);\n\t\tthis._resolvedColor = null;\n\t\tthis.position = (typeof options.position === 'number' ? options.position : model.OverviewRulerLane.Center);\n\t}\n\n\tpublic getColor(theme: IColorTheme): string {\n\t\tif (!this._resolvedColor) {\n\t\t\tif (theme.type !== 'light' && this.darkColor) {\n\t\t\t\tthis._resolvedColor = this._resolveColor(this.darkColor, theme);\n\t\t\t} else {\n\t\t\t\tthis._resolvedColor = this._resolveColor(this.color, theme);\n\t\t\t}\n\t\t}\n\t\treturn this._resolvedColor;\n\t}\n\n\tpublic invalidateCachedColor(): void {\n\t\tthis._resolvedColor = null;\n\t}\n\n\tprivate _resolveColor(color: string | ThemeColor, theme: IColorTheme): string {\n\t\tif (typeof color === 'string') {\n\t\t\treturn color;\n\t\t}\n\t\tconst c = color ? theme.getColor(color.id) : null;\n\t\tif (!c) {\n\t\t\treturn '';\n\t\t}\n\t\treturn c.toString();\n\t}\n}\n\nexport class ModelDecorationGlyphMarginOptions {\n\treadonly position: model.GlyphMarginLane;\n\n\tconstructor(options: model.IModelDecorationGlyphMarginOptions | null | undefined) {\n\t\tthis.position = options?.position ?? model.GlyphMarginLane.Left;\n\t}\n}\n\nexport class ModelDecorationMinimapOptions extends DecorationOptions {\n\treadonly position: model.MinimapPosition;\n\tprivate _resolvedColor: Color | undefined;\n\n\n\tconstructor(options: model.IModelDecorationMinimapOptions) {\n\t\tsuper(options);\n\t\tthis.position = options.position;\n\t}\n\n\tpublic getColor(theme: IColorTheme): Color | undefined {\n\t\tif (!this._resolvedColor) {\n\t\t\tif (theme.type !== 'light' && this.darkColor) {\n\t\t\t\tthis._resolvedColor = this._resolveColor(this.darkColor, theme);\n\t\t\t} else {\n\t\t\t\tthis._resolvedColor = this._resolveColor(this.color, theme);\n\t\t\t}\n\t\t}\n\n\t\treturn this._resolvedColor;\n\t}\n\n\tpublic invalidateCachedColor(): void {\n\t\tthis._resolvedColor = undefined;\n\t}\n\n\tprivate _resolveColor(color: string | ThemeColor, theme: IColorTheme): Color | undefined {\n\t\tif (typeof color === 'string') {\n\t\t\treturn Color.fromHex(color);\n\t\t}\n\t\treturn theme.getColor(color.id);\n\t}\n}\n\nexport class ModelDecorationInjectedTextOptions implements model.InjectedTextOptions {\n\tpublic static from(options: model.InjectedTextOptions): ModelDecorationInjectedTextOptions {\n\t\tif (options instanceof ModelDecorationInjectedTextOptions) {\n\t\t\treturn options;\n\t\t}\n\t\treturn new ModelDecorationInjectedTextOptions(options);\n\t}\n\n\tpublic readonly content: string;\n\treadonly inlineClassName: string | null;\n\treadonly inlineClassNameAffectsLetterSpacing: boolean;\n\treadonly attachedData: unknown | null;\n\treadonly cursorStops: model.InjectedTextCursorStops | null;\n\n\tprivate constructor(options: model.InjectedTextOptions) {\n\t\tthis.content = options.content || '';\n\t\tthis.inlineClassName = options.inlineClassName || null;\n\t\tthis.inlineClassNameAffectsLetterSpacing = options.inlineClassNameAffectsLetterSpacing || false;\n\t\tthis.attachedData = options.attachedData || null;\n\t\tthis.cursorStops = options.cursorStops || null;\n\t}\n}\n\nexport class ModelDecorationOptions implements model.IModelDecorationOptions {\n\n\tpublic static EMPTY: ModelDecorationOptions;\n\n\tpublic static register(options: model.IModelDecorationOptions): ModelDecorationOptions {\n\t\treturn new ModelDecorationOptions(options);\n\t}\n\n\tpublic static createDynamic(options: model.IModelDecorationOptions): ModelDecorationOptions {\n\t\treturn new ModelDecorationOptions(options);\n\t}\n\treadonly description: string;\n\treadonly blockClassName: string | null;\n\treadonly blockIsAfterEnd: boolean | null;\n\treadonly blockDoesNotCollapse?: boolean | null;\n\treadonly blockPadding: [top: number, right: number, bottom: number, left: number] | null;\n\treadonly stickiness: model.TrackedRangeStickiness;\n\treadonly zIndex: number;\n\treadonly className: string | null;\n\treadonly shouldFillLineOnLineBreak: boolean | null;\n\treadonly hoverMessage: IMarkdownString | IMarkdownString[] | null;\n\treadonly glyphMarginHoverMessage: IMarkdownString | IMarkdownString[] | null;\n\treadonly isWholeLine: boolean;\n\treadonly showIfCollapsed: boolean;\n\treadonly collapseOnReplaceEdit: boolean;\n\treadonly overviewRuler: ModelDecorationOverviewRulerOptions | null;\n\treadonly minimap: ModelDecorationMinimapOptions | null;\n\treadonly glyphMargin?: model.IModelDecorationGlyphMarginOptions | null | undefined;\n\treadonly glyphMarginClassName: string | null;\n\treadonly linesDecorationsClassName: string | null;\n\treadonly firstLineDecorationClassName: string | null;\n\treadonly marginClassName: string | null;\n\treadonly inlineClassName: string | null;\n\treadonly inlineClassNameAffectsLetterSpacing: boolean;\n\treadonly beforeContentClassName: string | null;\n\treadonly afterContentClassName: string | null;\n\treadonly after: ModelDecorationInjectedTextOptions | null;\n\treadonly before: ModelDecorationInjectedTextOptions | null;\n\treadonly hideInCommentTokens: boolean | null;\n\treadonly hideInStringTokens: boolean | null;\n\n\tprivate constructor(options: model.IModelDecorationOptions) {\n\t\tthis.description = options.description;\n\t\tthis.blockClassName = options.blockClassName ? cleanClassName(options.blockClassName) : null;\n\t\tthis.blockDoesNotCollapse = options.blockDoesNotCollapse ?? null;\n\t\tthis.blockIsAfterEnd = options.blockIsAfterEnd ?? null;\n\t\tthis.blockPadding = options.blockPadding ?? null;\n\t\tthis.stickiness = options.stickiness || model.TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges;\n\t\tthis.zIndex = options.zIndex || 0;\n\t\tthis.className = options.className ? cleanClassName(options.className) : null;\n\t\tthis.shouldFillLineOnLineBreak = options.shouldFillLineOnLineBreak ?? null;\n\t\tthis.hoverMessage = options.hoverMessage || null;\n\t\tthis.glyphMarginHoverMessage = options.glyphMarginHoverMessage || null;\n\t\tthis.isWholeLine = options.isWholeLine || false;\n\t\tthis.showIfCollapsed = options.showIfCollapsed || false;\n\t\tthis.collapseOnReplaceEdit = options.collapseOnReplaceEdit || false;\n\t\tthis.overviewRuler = options.overviewRuler ? new ModelDecorationOverviewRulerOptions(options.overviewRuler) : null;\n\t\tthis.minimap = options.minimap ? new ModelDecorationMinimapOptions(options.minimap) : null;\n\t\tthis.glyphMargin = options.glyphMarginClassName ? new ModelDecorationGlyphMarginOptions(options.glyphMargin) : null;\n\t\tthis.glyphMarginClassName = options.glyphMarginClassName ? cleanClassName(options.glyphMarginClassName) : null;\n\t\tthis.linesDecorationsClassName = options.linesDecorationsClassName ? cleanClassName(options.linesDecorationsClassName) : null;\n\t\tthis.firstLineDecorationClassName = options.firstLineDecorationClassName ? cleanClassName(options.firstLineDecorationClassName) : null;\n\t\tthis.marginClassName = options.marginClassName ? cleanClassName(options.marginClassName) : null;\n\t\tthis.inlineClassName = options.inlineClassName ? cleanClassName(options.inlineClassName) : null;\n\t\tthis.inlineClassNameAffectsLetterSpacing = options.inlineClassNameAffectsLetterSpacing || false;\n\t\tthis.beforeContentClassName = options.beforeContentClassName ? cleanClassName(options.beforeContentClassName) : null;\n\t\tthis.afterContentClassName = options.afterContentClassName ? cleanClassName(options.afterContentClassName) : null;\n\t\tthis.after = options.after ? ModelDecorationInjectedTextOptions.from(options.after) : null;\n\t\tthis.before = options.before ? ModelDecorationInjectedTextOptions.from(options.before) : null;\n\t\tthis.hideInCommentTokens = options.hideInCommentTokens ?? false;\n\t\tthis.hideInStringTokens = options.hideInStringTokens ?? false;\n\t}\n}\nModelDecorationOptions.EMPTY = ModelDecorationOptions.register({ description: 'empty' });\n\n/**\n * The order carefully matches the values of the enum.\n */\nconst TRACKED_RANGE_OPTIONS = [\n\tModelDecorationOptions.register({ description: 'tracked-range-always-grows-when-typing-at-edges', stickiness: model.TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges }),\n\tModelDecorationOptions.register({ description: 'tracked-range-never-grows-when-typing-at-edges', stickiness: model.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges }),\n\tModelDecorationOptions.register({ description: 'tracked-range-grows-only-when-typing-before', stickiness: model.TrackedRangeStickiness.GrowsOnlyWhenTypingBefore }),\n\tModelDecorationOptions.register({ description: 'tracked-range-grows-only-when-typing-after', stickiness: model.TrackedRangeStickiness.GrowsOnlyWhenTypingAfter }),\n];\n\nfunction _normalizeOptions(options: model.IModelDecorationOptions): ModelDecorationOptions {\n\tif (options instanceof ModelDecorationOptions) {\n\t\treturn options;\n\t}\n\treturn ModelDecorationOptions.createDynamic(options);\n}\n\nclass DidChangeDecorationsEmitter extends Disposable {\n\n\tprivate readonly _actual: Emitter<IModelDecorationsChangedEvent> = this._register(new Emitter<IModelDecorationsChangedEvent>());\n\tpublic readonly event: Event<IModelDecorationsChangedEvent> = this._actual.event;\n\n\tprivate _deferredCnt: number;\n\tprivate _shouldFireDeferred: boolean;\n\tprivate _affectsMinimap: boolean;\n\tprivate _affectsOverviewRuler: boolean;\n\tprivate _affectedInjectedTextLines: Set<number> | null = null;\n\tprivate _affectsGlyphMargin: boolean;\n\n\tconstructor(private readonly handleBeforeFire: (affectedInjectedTextLines: Set<number> | null) => void) {\n\t\tsuper();\n\t\tthis._deferredCnt = 0;\n\t\tthis._shouldFireDeferred = false;\n\t\tthis._affectsMinimap = false;\n\t\tthis._affectsOverviewRuler = false;\n\t\tthis._affectsGlyphMargin = false;\n\t}\n\n\thasListeners(): boolean {\n\t\treturn this._actual.hasListeners();\n\t}\n\n\tpublic beginDeferredEmit(): void {\n\t\tthis._deferredCnt++;\n\t}\n\n\tpublic endDeferredEmit(): void {\n\t\tthis._deferredCnt--;\n\t\tif (this._deferredCnt === 0) {\n\t\t\tif (this._shouldFireDeferred) {\n\t\t\t\tthis.doFire();\n\t\t\t}\n\n\t\t\tthis._affectedInjectedTextLines?.clear();\n\t\t\tthis._affectedInjectedTextLines = null;\n\t\t}\n\t}\n\n\tpublic recordLineAffectedByInjectedText(lineNumber: number): void {\n\t\tif (!this._affectedInjectedTextLines) {\n\t\t\tthis._affectedInjectedTextLines = new Set();\n\t\t}\n\t\tthis._affectedInjectedTextLines.add(lineNumber);\n\t}\n\n\tpublic checkAffectedAndFire(options: ModelDecorationOptions): void {\n\t\tif (!this._affectsMinimap) {\n\t\t\tthis._affectsMinimap = options.minimap && options.minimap.position ? true : false;\n\t\t}\n\t\tif (!this._affectsOverviewRuler) {\n\t\t\tthis._affectsOverviewRuler = options.overviewRuler && options.overviewRuler.color ? true : false;\n\t\t}\n\t\tif (!this._affectsGlyphMargin) {\n\t\t\tthis._affectsGlyphMargin = options.glyphMarginClassName ? true : false;\n\t\t}\n\t\tthis.tryFire();\n\t}\n\n\tpublic fire(): void {\n\t\tthis._affectsMinimap = true;\n\t\tthis._affectsOverviewRuler = true;\n\t\tthis._affectsGlyphMargin = true;\n\t\tthis.tryFire();\n\t}\n\n\tprivate tryFire() {\n\t\tif (this._deferredCnt === 0) {\n\t\t\tthis.doFire();\n\t\t} else {\n\t\t\tthis._shouldFireDeferred = true;\n\t\t}\n\t}\n\n\tprivate doFire() {\n\t\tthis.handleBeforeFire(this._affectedInjectedTextLines);\n\n\t\tconst event: IModelDecorationsChangedEvent = {\n\t\t\taffectsMinimap: this._affectsMinimap,\n\t\t\taffectsOverviewRuler: this._affectsOverviewRuler,\n\t\t\taffectsGlyphMargin: this._affectsGlyphMargin\n\t\t};\n\t\tthis._shouldFireDeferred = false;\n\t\tthis._affectsMinimap = false;\n\t\tthis._affectsOverviewRuler = false;\n\t\tthis._affectsGlyphMargin = false;\n\t\tthis._actual.fire(event);\n\t}\n}\n\n//#endregion\n\nclass DidChangeContentEmitter extends Disposable {\n\n\t/**\n\t * Both `fastEvent` and `slowEvent` work the same way and contain the same events, but first we invoke `fastEvent` and then `slowEvent`.\n\t */\n\tprivate readonly _fastEmitter: Emitter<InternalModelContentChangeEvent> = this._register(new Emitter<InternalModelContentChangeEvent>());\n\tpublic readonly fastEvent: Event<InternalModelContentChangeEvent> = this._fastEmitter.event;\n\tprivate readonly _slowEmitter: Emitter<InternalModelContentChangeEvent> = this._register(new Emitter<InternalModelContentChangeEvent>());\n\tpublic readonly slowEvent: Event<InternalModelContentChangeEvent> = this._slowEmitter.event;\n\n\tprivate _deferredCnt: number;\n\tprivate _deferredEvent: InternalModelContentChangeEvent | null;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._deferredCnt = 0;\n\t\tthis._deferredEvent = null;\n\t}\n\n\tpublic hasListeners(): boolean {\n\t\treturn (\n\t\t\tthis._fastEmitter.hasListeners()\n\t\t\t|| this._slowEmitter.hasListeners()\n\t\t);\n\t}\n\n\tpublic beginDeferredEmit(): void {\n\t\tthis._deferredCnt++;\n\t}\n\n\tpublic endDeferredEmit(resultingSelection: Selection[] | null = null): void {\n\t\tthis._deferredCnt--;\n\t\tif (this._deferredCnt === 0) {\n\t\t\tif (this._deferredEvent !== null) {\n\t\t\t\tthis._deferredEvent.rawContentChangedEvent.resultingSelection = resultingSelection;\n\t\t\t\tconst e = this._deferredEvent;\n\t\t\t\tthis._deferredEvent = null;\n\t\t\t\tthis._fastEmitter.fire(e);\n\t\t\t\tthis._slowEmitter.fire(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic fire(e: InternalModelContentChangeEvent): void {\n\t\tif (this._deferredCnt > 0) {\n\t\t\tif (this._deferredEvent) {\n\t\t\t\tthis._deferredEvent = this._deferredEvent.merge(e);\n\t\t\t} else {\n\t\t\t\tthis._deferredEvent = e;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis._fastEmitter.fire(e);\n\t\tthis._slowEmitter.fire(e);\n\t}\n}\n\n/**\n * @internal\n */\nexport class AttachedViews {\n\tprivate readonly _onDidChangeVisibleRanges = new Emitter<{ view: model.IAttachedView; state: IAttachedViewState | undefined }>();\n\tpublic readonly onDidChangeVisibleRanges = this._onDidChangeVisibleRanges.event;\n\n\tprivate readonly _views = new Set<AttachedViewImpl>();\n\n\tpublic attachView(): model.IAttachedView {\n\t\tconst view = new AttachedViewImpl((state) => {\n\t\t\tthis._onDidChangeVisibleRanges.fire({ view, state });\n\t\t});\n\t\tthis._views.add(view);\n\t\treturn view;\n\t}\n\n\tpublic detachView(view: model.IAttachedView): void {\n\t\tthis._views.delete(view as AttachedViewImpl);\n\t\tthis._onDidChangeVisibleRanges.fire({ view, state: undefined });\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IAttachedViewState {\n\treadonly visibleLineRanges: readonly LineRange[];\n\treadonly stabilized: boolean;\n}\n\nclass AttachedViewImpl implements model.IAttachedView {\n\tconstructor(private readonly handleStateChange: (state: IAttachedViewState) => void) { }\n\n\tsetVisibleLines(visibleLines: { startLineNumber: number; endLineNumber: number }[], stabilized: boolean): void {\n\t\tconst visibleLineRanges = visibleLines.map((line) => new LineRange(line.startLineNumber, line.endLineNumber + 1));\n\t\tthis.handleStateChange({ visibleLineRanges, stabilized });\n\t}\n}\n"]}