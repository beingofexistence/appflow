{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsImpl.ts"],"names":[],"mappings":"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","file":"bracketPairsImpl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CallbackIterable, compareBy } from 'vs/base/common/arrays';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable, IReference, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { ignoreBracketsInToken } from 'vs/editor/common/languages/supports';\nimport { LanguageBracketsConfiguration } from 'vs/editor/common/languages/supports/languageBracketsConfiguration';\nimport { BracketsUtils, RichEditBracket, RichEditBrackets } from 'vs/editor/common/languages/supports/richEditBrackets';\nimport { BracketPairsTree } from 'vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/bracketPairsTree';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { BracketInfo, BracketPairInfo, BracketPairWithMinIndentationInfo, IBracketPairsTextModelPart, IFoundBracket } from 'vs/editor/common/textModelBracketPairs';\nimport { IModelContentChangedEvent, IModelLanguageChangedEvent, IModelOptionsChangedEvent, IModelTokensChangedEvent } from 'vs/editor/common/textModelEvents';\nimport { LineTokens } from 'vs/editor/common/tokens/lineTokens';\n\nexport class BracketPairsTextModelPart extends Disposable implements IBracketPairsTextModelPart {\n\tprivate readonly bracketPairsTree = this._register(new MutableDisposable<IReference<BracketPairsTree>>());\n\n\tprivate readonly onDidChangeEmitter = new Emitter<void>();\n\tpublic readonly onDidChange = this.onDidChangeEmitter.event;\n\n\tprivate get canBuildAST() {\n\t\tconst maxSupportedDocumentLength = /* max lines */ 50_000 * /* average column count */ 100;\n\t\treturn this.textModel.getValueLength() <= maxSupportedDocumentLength;\n\t}\n\n\tprivate bracketsRequested = false;\n\n\tpublic constructor(\n\t\tprivate readonly textModel: TextModel,\n\t\tprivate readonly languageConfigurationService: ILanguageConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tthis.languageConfigurationService.onDidChange(e => {\n\t\t\t\tif (!e.languageId || this.bracketPairsTree.value?.object.didLanguageChange(e.languageId)) {\n\t\t\t\t\tthis.bracketPairsTree.clear();\n\t\t\t\t\tthis.updateBracketPairsTree();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\t//#region TextModel events\n\n\tpublic handleDidChangeOptions(e: IModelOptionsChangedEvent): void {\n\t\tthis.bracketPairsTree.clear();\n\t\tthis.updateBracketPairsTree();\n\t}\n\n\tpublic handleDidChangeLanguage(e: IModelLanguageChangedEvent): void {\n\t\tthis.bracketPairsTree.clear();\n\t\tthis.updateBracketPairsTree();\n\t}\n\n\tpublic handleDidChangeContent(change: IModelContentChangedEvent) {\n\t\tthis.bracketPairsTree.value?.object.handleContentChanged(change);\n\t}\n\n\tpublic handleDidChangeBackgroundTokenizationState(): void {\n\t\tthis.bracketPairsTree.value?.object.handleDidChangeBackgroundTokenizationState();\n\t}\n\n\tpublic handleDidChangeTokens(e: IModelTokensChangedEvent): void {\n\t\tthis.bracketPairsTree.value?.object.handleDidChangeTokens(e);\n\t}\n\n\t//#endregion\n\n\tprivate updateBracketPairsTree() {\n\t\tif (this.bracketsRequested && this.canBuildAST) {\n\t\t\tif (!this.bracketPairsTree.value) {\n\t\t\t\tconst store = new DisposableStore();\n\n\t\t\t\tthis.bracketPairsTree.value = createDisposableRef(\n\t\t\t\t\tstore.add(\n\t\t\t\t\t\tnew BracketPairsTree(this.textModel, (languageId) => {\n\t\t\t\t\t\t\treturn this.languageConfigurationService.getLanguageConfiguration(languageId);\n\t\t\t\t\t\t})\n\t\t\t\t\t),\n\t\t\t\t\tstore\n\t\t\t\t);\n\t\t\t\tstore.add(this.bracketPairsTree.value.object.onDidChange(e => this.onDidChangeEmitter.fire(e)));\n\t\t\t\tthis.onDidChangeEmitter.fire();\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.bracketPairsTree.value) {\n\t\t\t\tthis.bracketPairsTree.clear();\n\t\t\t\t// Important: Don't call fire if there was no change!\n\t\t\t\tthis.onDidChangeEmitter.fire();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns all bracket pairs that intersect the given range.\n\t * The result is sorted by the start position.\n\t*/\n\tpublic getBracketPairsInRange(range: Range): CallbackIterable<BracketPairInfo> {\n\t\tthis.bracketsRequested = true;\n\t\tthis.updateBracketPairsTree();\n\t\treturn this.bracketPairsTree.value?.object.getBracketPairsInRange(range, false) || CallbackIterable.empty;\n\t}\n\n\tpublic getBracketPairsInRangeWithMinIndentation(range: Range): CallbackIterable<BracketPairWithMinIndentationInfo> {\n\t\tthis.bracketsRequested = true;\n\t\tthis.updateBracketPairsTree();\n\t\treturn this.bracketPairsTree.value?.object.getBracketPairsInRange(range, true) || CallbackIterable.empty;\n\t}\n\n\tpublic getBracketsInRange(range: Range, onlyColorizedBrackets: boolean = false): CallbackIterable<BracketInfo> {\n\t\tthis.bracketsRequested = true;\n\t\tthis.updateBracketPairsTree();\n\t\treturn this.bracketPairsTree.value?.object.getBracketsInRange(range, onlyColorizedBrackets) || CallbackIterable.empty;\n\t}\n\n\tpublic findMatchingBracketUp(_bracket: string, _position: IPosition, maxDuration?: number): Range | null {\n\t\tconst position = this.textModel.validatePosition(_position);\n\t\tconst languageId = this.textModel.getLanguageIdAtPosition(position.lineNumber, position.column);\n\n\t\tif (this.canBuildAST) {\n\t\t\tconst closingBracketInfo = this.languageConfigurationService\n\t\t\t\t.getLanguageConfiguration(languageId)\n\t\t\t\t.bracketsNew.getClosingBracketInfo(_bracket);\n\n\t\t\tif (!closingBracketInfo) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst bracketPair = this.getBracketPairsInRange(Range.fromPositions(_position, _position)).findLast((b) =>\n\t\t\t\tclosingBracketInfo.closes(b.openingBracketInfo)\n\t\t\t);\n\n\t\t\tif (bracketPair) {\n\t\t\t\treturn bracketPair.openingBracketRange;\n\t\t\t}\n\t\t\treturn null;\n\t\t} else {\n\t\t\t// Fallback to old bracket matching code:\n\t\t\tconst bracket = _bracket.toLowerCase();\n\n\t\t\tconst bracketsSupport = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n\n\t\t\tif (!bracketsSupport) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst data = bracketsSupport.textIsBracket[bracket];\n\n\t\t\tif (!data) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn stripBracketSearchCanceled(this._findMatchingBracketUp(data, position, createTimeBasedContinueBracketSearchPredicate(maxDuration)));\n\t\t}\n\t}\n\n\tpublic matchBracket(position: IPosition, maxDuration?: number): [Range, Range] | null {\n\t\tif (this.canBuildAST) {\n\t\t\tconst bracketPair =\n\t\t\t\tthis.getBracketPairsInRange(\n\t\t\t\t\tRange.fromPositions(position, position)\n\t\t\t\t).filter(\n\t\t\t\t\t(item) =>\n\t\t\t\t\t\titem.closingBracketRange !== undefined &&\n\t\t\t\t\t\t(item.openingBracketRange.containsPosition(position) ||\n\t\t\t\t\t\t\titem.closingBracketRange.containsPosition(position))\n\t\t\t\t).findLastMaxBy(\n\t\t\t\t\tcompareBy(\n\t\t\t\t\t\t(item) =>\n\t\t\t\t\t\t\titem.openingBracketRange.containsPosition(position)\n\t\t\t\t\t\t\t\t? item.openingBracketRange\n\t\t\t\t\t\t\t\t: item.closingBracketRange,\n\t\t\t\t\t\tRange.compareRangesUsingStarts\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tif (bracketPair) {\n\t\t\t\treturn [bracketPair.openingBracketRange, bracketPair.closingBracketRange!];\n\t\t\t}\n\t\t\treturn null;\n\t\t} else {\n\t\t\t// Fallback to old bracket matching code:\n\t\t\tconst continueSearchPredicate = createTimeBasedContinueBracketSearchPredicate(maxDuration);\n\t\t\treturn this._matchBracket(this.textModel.validatePosition(position), continueSearchPredicate);\n\t\t}\n\t}\n\n\tprivate _establishBracketSearchOffsets(position: Position, lineTokens: LineTokens, modeBrackets: RichEditBrackets, tokenIndex: number) {\n\t\tconst tokenCount = lineTokens.getCount();\n\t\tconst currentLanguageId = lineTokens.getLanguageId(tokenIndex);\n\n\t\t// limit search to not go before `maxBracketLength`\n\t\tlet searchStartOffset = Math.max(0, position.column - 1 - modeBrackets.maxBracketLength);\n\t\tfor (let i = tokenIndex - 1; i >= 0; i--) {\n\t\t\tconst tokenEndOffset = lineTokens.getEndOffset(i);\n\t\t\tif (tokenEndOffset <= searchStartOffset) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ignoreBracketsInToken(lineTokens.getStandardTokenType(i)) || lineTokens.getLanguageId(i) !== currentLanguageId) {\n\t\t\t\tsearchStartOffset = tokenEndOffset;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// limit search to not go after `maxBracketLength`\n\t\tlet searchEndOffset = Math.min(lineTokens.getLineContent().length, position.column - 1 + modeBrackets.maxBracketLength);\n\t\tfor (let i = tokenIndex + 1; i < tokenCount; i++) {\n\t\t\tconst tokenStartOffset = lineTokens.getStartOffset(i);\n\t\t\tif (tokenStartOffset >= searchEndOffset) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ignoreBracketsInToken(lineTokens.getStandardTokenType(i)) || lineTokens.getLanguageId(i) !== currentLanguageId) {\n\t\t\t\tsearchEndOffset = tokenStartOffset;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn { searchStartOffset, searchEndOffset };\n\t}\n\n\tprivate _matchBracket(position: Position, continueSearchPredicate: ContinueBracketSearchPredicate): [Range, Range] | null {\n\t\tconst lineNumber = position.lineNumber;\n\t\tconst lineTokens = this.textModel.tokenization.getLineTokens(lineNumber);\n\t\tconst lineText = this.textModel.getLineContent(lineNumber);\n\n\t\tconst tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\tif (tokenIndex < 0) {\n\t\t\treturn null;\n\t\t}\n\t\tconst currentModeBrackets = this.languageConfigurationService.getLanguageConfiguration(lineTokens.getLanguageId(tokenIndex)).brackets;\n\n\t\t// check that the token is not to be ignored\n\t\tif (currentModeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex))) {\n\n\t\t\tlet { searchStartOffset, searchEndOffset } = this._establishBracketSearchOffsets(position, lineTokens, currentModeBrackets, tokenIndex);\n\n\t\t\t// it might be the case that [currentTokenStart -> currentTokenEnd] contains multiple brackets\n\t\t\t// `bestResult` will contain the most right-side result\n\t\t\tlet bestResult: [Range, Range] | null = null;\n\t\t\twhile (true) {\n\t\t\t\tconst foundBracket = BracketsUtils.findNextBracketInRange(currentModeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (!foundBracket) {\n\t\t\t\t\t// there are no more brackets in this text\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// check that we didn't hit a bracket too far away from position\n\t\t\t\tif (foundBracket.startColumn <= position.column && position.column <= foundBracket.endColumn) {\n\t\t\t\t\tconst foundBracketText = lineText.substring(foundBracket.startColumn - 1, foundBracket.endColumn - 1).toLowerCase();\n\t\t\t\t\tconst r = this._matchFoundBracket(foundBracket, currentModeBrackets.textIsBracket[foundBracketText], currentModeBrackets.textIsOpenBracket[foundBracketText], continueSearchPredicate);\n\t\t\t\t\tif (r) {\n\t\t\t\t\t\tif (r instanceof BracketSearchCanceled) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbestResult = r;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsearchStartOffset = foundBracket.endColumn - 1;\n\t\t\t}\n\n\t\t\tif (bestResult) {\n\t\t\t\treturn bestResult;\n\t\t\t}\n\t\t}\n\n\t\t// If position is in between two tokens, try also looking in the previous token\n\t\tif (tokenIndex > 0 && lineTokens.getStartOffset(tokenIndex) === position.column - 1) {\n\t\t\tconst prevTokenIndex = tokenIndex - 1;\n\t\t\tconst prevModeBrackets = this.languageConfigurationService.getLanguageConfiguration(lineTokens.getLanguageId(prevTokenIndex)).brackets;\n\n\t\t\t// check that previous token is not to be ignored\n\t\t\tif (prevModeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(prevTokenIndex))) {\n\n\t\t\t\tconst { searchStartOffset, searchEndOffset } = this._establishBracketSearchOffsets(position, lineTokens, prevModeBrackets, prevTokenIndex);\n\n\t\t\t\tconst foundBracket = BracketsUtils.findPrevBracketInRange(prevModeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\n\t\t\t\t// check that we didn't hit a bracket too far away from position\n\t\t\t\tif (foundBracket && foundBracket.startColumn <= position.column && position.column <= foundBracket.endColumn) {\n\t\t\t\t\tconst foundBracketText = lineText.substring(foundBracket.startColumn - 1, foundBracket.endColumn - 1).toLowerCase();\n\t\t\t\t\tconst r = this._matchFoundBracket(foundBracket, prevModeBrackets.textIsBracket[foundBracketText], prevModeBrackets.textIsOpenBracket[foundBracketText], continueSearchPredicate);\n\t\t\t\t\tif (r) {\n\t\t\t\t\t\tif (r instanceof BracketSearchCanceled) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _matchFoundBracket(foundBracket: Range, data: RichEditBracket, isOpen: boolean, continueSearchPredicate: ContinueBracketSearchPredicate): [Range, Range] | null | BracketSearchCanceled {\n\t\tif (!data) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst matched = (\n\t\t\tisOpen\n\t\t\t\t? this._findMatchingBracketDown(data, foundBracket.getEndPosition(), continueSearchPredicate)\n\t\t\t\t: this._findMatchingBracketUp(data, foundBracket.getStartPosition(), continueSearchPredicate)\n\t\t);\n\n\t\tif (!matched) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (matched instanceof BracketSearchCanceled) {\n\t\t\treturn matched;\n\t\t}\n\n\t\treturn [foundBracket, matched];\n\t}\n\n\tprivate _findMatchingBracketUp(bracket: RichEditBracket, position: Position, continueSearchPredicate: ContinueBracketSearchPredicate): Range | null | BracketSearchCanceled {\n\t\t// console.log('_findMatchingBracketUp: ', 'bracket: ', JSON.stringify(bracket), 'startPosition: ', String(position));\n\n\t\tconst languageId = bracket.languageId;\n\t\tconst reversedBracketRegex = bracket.reversedRegex;\n\t\tlet count = -1;\n\n\t\tlet totalCallCount = 0;\n\t\tconst searchPrevMatchingBracketInRange = (lineNumber: number, lineText: string, searchStartOffset: number, searchEndOffset: number): Range | null | BracketSearchCanceled => {\n\t\t\twhile (true) {\n\t\t\t\tif (continueSearchPredicate && (++totalCallCount) % 100 === 0 && !continueSearchPredicate()) {\n\t\t\t\t\treturn BracketSearchCanceled.INSTANCE;\n\t\t\t\t}\n\t\t\t\tconst r = BracketsUtils.findPrevBracketInRange(reversedBracketRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (!r) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n\t\t\t\tif (bracket.isOpen(hitText)) {\n\t\t\t\t\tcount++;\n\t\t\t\t} else if (bracket.isClose(hitText)) {\n\t\t\t\t\tcount--;\n\t\t\t\t}\n\n\t\t\t\tif (count === 0) {\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\n\t\t\t\tsearchEndOffset = r.startColumn - 1;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tfor (let lineNumber = position.lineNumber; lineNumber >= 1; lineNumber--) {\n\t\t\tconst lineTokens = this.textModel.tokenization.getLineTokens(lineNumber);\n\t\t\tconst tokenCount = lineTokens.getCount();\n\t\t\tconst lineText = this.textModel.getLineContent(lineNumber);\n\n\t\t\tlet tokenIndex = tokenCount - 1;\n\t\t\tlet searchStartOffset = lineText.length;\n\t\t\tlet searchEndOffset = lineText.length;\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\ttokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\t\t\tsearchStartOffset = position.column - 1;\n\t\t\t\tsearchEndOffset = position.column - 1;\n\t\t\t}\n\n\t\t\tlet prevSearchInToken = true;\n\t\t\tfor (; tokenIndex >= 0; tokenIndex--) {\n\t\t\t\tconst searchInToken = (lineTokens.getLanguageId(tokenIndex) === languageId && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n\n\t\t\t\tif (searchInToken) {\n\t\t\t\t\t// this token should be searched\n\t\t\t\t\tif (prevSearchInToken) {\n\t\t\t\t\t\t// the previous token should be searched, simply extend searchStartOffset\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the previous token should not be searched\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// this token should not be searched\n\t\t\t\t\tif (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = searchPrevMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevSearchInToken = searchInToken;\n\t\t\t}\n\n\t\t\tif (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\tconst r = searchPrevMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (r) {\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findMatchingBracketDown(bracket: RichEditBracket, position: Position, continueSearchPredicate: ContinueBracketSearchPredicate): Range | null | BracketSearchCanceled {\n\t\t// console.log('_findMatchingBracketDown: ', 'bracket: ', JSON.stringify(bracket), 'startPosition: ', String(position));\n\n\t\tconst languageId = bracket.languageId;\n\t\tconst bracketRegex = bracket.forwardRegex;\n\t\tlet count = 1;\n\n\t\tlet totalCallCount = 0;\n\t\tconst searchNextMatchingBracketInRange = (lineNumber: number, lineText: string, searchStartOffset: number, searchEndOffset: number): Range | null | BracketSearchCanceled => {\n\t\t\twhile (true) {\n\t\t\t\tif (continueSearchPredicate && (++totalCallCount) % 100 === 0 && !continueSearchPredicate()) {\n\t\t\t\t\treturn BracketSearchCanceled.INSTANCE;\n\t\t\t\t}\n\t\t\t\tconst r = BracketsUtils.findNextBracketInRange(bracketRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (!r) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n\t\t\t\tif (bracket.isOpen(hitText)) {\n\t\t\t\t\tcount++;\n\t\t\t\t} else if (bracket.isClose(hitText)) {\n\t\t\t\t\tcount--;\n\t\t\t\t}\n\n\t\t\t\tif (count === 0) {\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\n\t\t\t\tsearchStartOffset = r.endColumn - 1;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst lineCount = this.textModel.getLineCount();\n\t\tfor (let lineNumber = position.lineNumber; lineNumber <= lineCount; lineNumber++) {\n\t\t\tconst lineTokens = this.textModel.tokenization.getLineTokens(lineNumber);\n\t\t\tconst tokenCount = lineTokens.getCount();\n\t\t\tconst lineText = this.textModel.getLineContent(lineNumber);\n\n\t\t\tlet tokenIndex = 0;\n\t\t\tlet searchStartOffset = 0;\n\t\t\tlet searchEndOffset = 0;\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\ttokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\t\t\tsearchStartOffset = position.column - 1;\n\t\t\t\tsearchEndOffset = position.column - 1;\n\t\t\t}\n\n\t\t\tlet prevSearchInToken = true;\n\t\t\tfor (; tokenIndex < tokenCount; tokenIndex++) {\n\t\t\t\tconst searchInToken = (lineTokens.getLanguageId(tokenIndex) === languageId && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n\n\t\t\t\tif (searchInToken) {\n\t\t\t\t\t// this token should be searched\n\t\t\t\t\tif (prevSearchInToken) {\n\t\t\t\t\t\t// the previous token should be searched, simply extend searchEndOffset\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the previous token should not be searched\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// this token should not be searched\n\t\t\t\t\tif (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = searchNextMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevSearchInToken = searchInToken;\n\t\t\t}\n\n\t\t\tif (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\tconst r = searchNextMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (r) {\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic findPrevBracket(_position: IPosition): IFoundBracket | null {\n\t\tconst position = this.textModel.validatePosition(_position);\n\n\t\tif (this.canBuildAST) {\n\t\t\tthis.bracketsRequested = true;\n\t\t\tthis.updateBracketPairsTree();\n\t\t\treturn this.bracketPairsTree.value?.object.getFirstBracketBefore(position) || null;\n\t\t}\n\n\t\tlet languageId: string | null = null;\n\t\tlet modeBrackets: RichEditBrackets | null = null;\n\t\tlet bracketConfig: LanguageBracketsConfiguration | null = null;\n\t\tfor (let lineNumber = position.lineNumber; lineNumber >= 1; lineNumber--) {\n\t\t\tconst lineTokens = this.textModel.tokenization.getLineTokens(lineNumber);\n\t\t\tconst tokenCount = lineTokens.getCount();\n\t\t\tconst lineText = this.textModel.getLineContent(lineNumber);\n\n\t\t\tlet tokenIndex = tokenCount - 1;\n\t\t\tlet searchStartOffset = lineText.length;\n\t\t\tlet searchEndOffset = lineText.length;\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\ttokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\t\t\tsearchStartOffset = position.column - 1;\n\t\t\t\tsearchEndOffset = position.column - 1;\n\t\t\t\tconst tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n\t\t\t\tif (languageId !== tokenLanguageId) {\n\t\t\t\t\tlanguageId = tokenLanguageId;\n\t\t\t\t\tmodeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n\t\t\t\t\tbracketConfig = this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet prevSearchInToken = true;\n\t\t\tfor (; tokenIndex >= 0; tokenIndex--) {\n\t\t\t\tconst tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n\n\t\t\t\tif (languageId !== tokenLanguageId) {\n\t\t\t\t\t// language id change!\n\t\t\t\t\tif (modeBrackets && bracketConfig && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn this._toFoundBracket(bracketConfig, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevSearchInToken = false;\n\t\t\t\t\t}\n\t\t\t\t\tlanguageId = tokenLanguageId;\n\t\t\t\t\tmodeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n\t\t\t\t\tbracketConfig = this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew;\n\t\t\t\t}\n\n\t\t\t\tconst searchInToken = (!!modeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n\n\t\t\t\tif (searchInToken) {\n\t\t\t\t\t// this token should be searched\n\t\t\t\t\tif (prevSearchInToken) {\n\t\t\t\t\t\t// the previous token should be searched, simply extend searchStartOffset\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the previous token should not be searched\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// this token should not be searched\n\t\t\t\t\tif (bracketConfig && modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn this._toFoundBracket(bracketConfig, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevSearchInToken = searchInToken;\n\t\t\t}\n\n\t\t\tif (bracketConfig && modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\tconst r = BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (r) {\n\t\t\t\t\treturn this._toFoundBracket(bracketConfig, r);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic findNextBracket(_position: IPosition): IFoundBracket | null {\n\t\tconst position = this.textModel.validatePosition(_position);\n\n\t\tif (this.canBuildAST) {\n\t\t\tthis.bracketsRequested = true;\n\t\t\tthis.updateBracketPairsTree();\n\t\t\treturn this.bracketPairsTree.value?.object.getFirstBracketAfter(position) || null;\n\t\t}\n\n\t\tconst lineCount = this.textModel.getLineCount();\n\n\t\tlet languageId: string | null = null;\n\t\tlet modeBrackets: RichEditBrackets | null = null;\n\t\tlet bracketConfig: LanguageBracketsConfiguration | null = null;\n\t\tfor (let lineNumber = position.lineNumber; lineNumber <= lineCount; lineNumber++) {\n\t\t\tconst lineTokens = this.textModel.tokenization.getLineTokens(lineNumber);\n\t\t\tconst tokenCount = lineTokens.getCount();\n\t\t\tconst lineText = this.textModel.getLineContent(lineNumber);\n\n\t\t\tlet tokenIndex = 0;\n\t\t\tlet searchStartOffset = 0;\n\t\t\tlet searchEndOffset = 0;\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\ttokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\t\t\tsearchStartOffset = position.column - 1;\n\t\t\t\tsearchEndOffset = position.column - 1;\n\t\t\t\tconst tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n\t\t\t\tif (languageId !== tokenLanguageId) {\n\t\t\t\t\tlanguageId = tokenLanguageId;\n\t\t\t\t\tmodeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n\t\t\t\t\tbracketConfig = this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet prevSearchInToken = true;\n\t\t\tfor (; tokenIndex < tokenCount; tokenIndex++) {\n\t\t\t\tconst tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n\n\t\t\t\tif (languageId !== tokenLanguageId) {\n\t\t\t\t\t// language id change!\n\t\t\t\t\tif (bracketConfig && modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn this._toFoundBracket(bracketConfig, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevSearchInToken = false;\n\t\t\t\t\t}\n\t\t\t\t\tlanguageId = tokenLanguageId;\n\t\t\t\t\tmodeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n\t\t\t\t\tbracketConfig = this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew;\n\t\t\t\t}\n\n\t\t\t\tconst searchInToken = (!!modeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n\t\t\t\tif (searchInToken) {\n\t\t\t\t\t// this token should be searched\n\t\t\t\t\tif (prevSearchInToken) {\n\t\t\t\t\t\t// the previous token should be searched, simply extend searchEndOffset\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the previous token should not be searched\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// this token should not be searched\n\t\t\t\t\tif (bracketConfig && modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn this._toFoundBracket(bracketConfig, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevSearchInToken = searchInToken;\n\t\t\t}\n\n\t\t\tif (bracketConfig && modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\tconst r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (r) {\n\t\t\t\t\treturn this._toFoundBracket(bracketConfig, r);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic findEnclosingBrackets(_position: IPosition, maxDuration?: number): [Range, Range] | null {\n\t\tconst position = this.textModel.validatePosition(_position);\n\n\t\tif (this.canBuildAST) {\n\t\t\tconst range = Range.fromPositions(position);\n\t\t\tconst bracketPair =\n\t\t\t\tthis.getBracketPairsInRange(Range.fromPositions(position, position)).findLast(\n\t\t\t\t\t(item) => item.closingBracketRange !== undefined && item.range.strictContainsRange(range)\n\t\t\t\t);\n\t\t\tif (bracketPair) {\n\t\t\t\treturn [bracketPair.openingBracketRange, bracketPair.closingBracketRange!];\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst continueSearchPredicate = createTimeBasedContinueBracketSearchPredicate(maxDuration);\n\t\tconst lineCount = this.textModel.getLineCount();\n\t\tconst savedCounts = new Map<string, number[]>();\n\n\t\tlet counts: number[] = [];\n\t\tconst resetCounts = (languageId: string, modeBrackets: RichEditBrackets | null) => {\n\t\t\tif (!savedCounts.has(languageId)) {\n\t\t\t\tconst tmp = [];\n\t\t\t\tfor (let i = 0, len = modeBrackets ? modeBrackets.brackets.length : 0; i < len; i++) {\n\t\t\t\t\ttmp[i] = 0;\n\t\t\t\t}\n\t\t\t\tsavedCounts.set(languageId, tmp);\n\t\t\t}\n\t\t\tcounts = savedCounts.get(languageId)!;\n\t\t};\n\n\t\tlet totalCallCount = 0;\n\t\tconst searchInRange = (modeBrackets: RichEditBrackets, lineNumber: number, lineText: string, searchStartOffset: number, searchEndOffset: number): [Range, Range] | null | BracketSearchCanceled => {\n\t\t\twhile (true) {\n\t\t\t\tif (continueSearchPredicate && (++totalCallCount) % 100 === 0 && !continueSearchPredicate()) {\n\t\t\t\t\treturn BracketSearchCanceled.INSTANCE;\n\t\t\t\t}\n\t\t\t\tconst r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (!r) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n\t\t\t\tconst bracket = modeBrackets.textIsBracket[hitText];\n\t\t\t\tif (bracket) {\n\t\t\t\t\tif (bracket.isOpen(hitText)) {\n\t\t\t\t\t\tcounts[bracket.index]++;\n\t\t\t\t\t} else if (bracket.isClose(hitText)) {\n\t\t\t\t\t\tcounts[bracket.index]--;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (counts[bracket.index] === -1) {\n\t\t\t\t\t\treturn this._matchFoundBracket(r, bracket, false, continueSearchPredicate);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsearchStartOffset = r.endColumn - 1;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tlet languageId: string | null = null;\n\t\tlet modeBrackets: RichEditBrackets | null = null;\n\t\tfor (let lineNumber = position.lineNumber; lineNumber <= lineCount; lineNumber++) {\n\t\t\tconst lineTokens = this.textModel.tokenization.getLineTokens(lineNumber);\n\t\t\tconst tokenCount = lineTokens.getCount();\n\t\t\tconst lineText = this.textModel.getLineContent(lineNumber);\n\n\t\t\tlet tokenIndex = 0;\n\t\t\tlet searchStartOffset = 0;\n\t\t\tlet searchEndOffset = 0;\n\t\t\tif (lineNumber === position.lineNumber) {\n\t\t\t\ttokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n\t\t\t\tsearchStartOffset = position.column - 1;\n\t\t\t\tsearchEndOffset = position.column - 1;\n\t\t\t\tconst tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n\t\t\t\tif (languageId !== tokenLanguageId) {\n\t\t\t\t\tlanguageId = tokenLanguageId;\n\t\t\t\t\tmodeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n\t\t\t\t\tresetCounts(languageId, modeBrackets);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet prevSearchInToken = true;\n\t\t\tfor (; tokenIndex < tokenCount; tokenIndex++) {\n\t\t\t\tconst tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n\n\t\t\t\tif (languageId !== tokenLanguageId) {\n\t\t\t\t\t// language id change!\n\t\t\t\t\tif (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = searchInRange(modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn stripBracketSearchCanceled(r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevSearchInToken = false;\n\t\t\t\t\t}\n\t\t\t\t\tlanguageId = tokenLanguageId;\n\t\t\t\t\tmodeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n\t\t\t\t\tresetCounts(languageId, modeBrackets);\n\t\t\t\t}\n\n\t\t\t\tconst searchInToken = (!!modeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n\t\t\t\tif (searchInToken) {\n\t\t\t\t\t// this token should be searched\n\t\t\t\t\tif (prevSearchInToken) {\n\t\t\t\t\t\t// the previous token should be searched, simply extend searchEndOffset\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the previous token should not be searched\n\t\t\t\t\t\tsearchStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\t\tsearchEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// this token should not be searched\n\t\t\t\t\tif (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\t\t\tconst r = searchInRange(modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\treturn stripBracketSearchCanceled(r);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevSearchInToken = searchInToken;\n\t\t\t}\n\n\t\t\tif (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n\t\t\t\tconst r = searchInRange(modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset);\n\t\t\t\tif (r) {\n\t\t\t\t\treturn stripBracketSearchCanceled(r);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _toFoundBracket(bracketConfig: LanguageBracketsConfiguration, r: Range): IFoundBracket | null {\n\t\tif (!r) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet text = this.textModel.getValueInRange(r);\n\t\ttext = text.toLowerCase();\n\n\t\tconst bracketInfo = bracketConfig.getBracketInfo(text);\n\t\tif (!bracketInfo) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\trange: r,\n\t\t\tbracketInfo\n\t\t};\n\t}\n}\n\nfunction createDisposableRef<T>(object: T, disposable?: IDisposable): IReference<T> {\n\treturn {\n\t\tobject,\n\t\tdispose: () => disposable?.dispose(),\n\t};\n}\n\ntype ContinueBracketSearchPredicate = (() => boolean);\n\nfunction createTimeBasedContinueBracketSearchPredicate(maxDuration: number | undefined): ContinueBracketSearchPredicate {\n\tif (typeof maxDuration === 'undefined') {\n\t\treturn () => true;\n\t} else {\n\t\tconst startTime = Date.now();\n\t\treturn () => {\n\t\t\treturn (Date.now() - startTime <= maxDuration);\n\t\t};\n\t}\n}\n\nclass BracketSearchCanceled {\n\tpublic static INSTANCE = new BracketSearchCanceled();\n\t_searchCanceledBrand = undefined;\n\tprivate constructor() { }\n}\n\nfunction stripBracketSearchCanceled<T>(result: T | null | BracketSearchCanceled): T | null {\n\tif (result instanceof BracketSearchCanceled) {\n\t\treturn null;\n\t}\n\treturn result;\n}\n"]}