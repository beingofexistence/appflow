{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/commands/surroundSelectionCommand.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,MAAa,GAAG;QAKf,YAAY,KAAU,EAAQ,mBAA2B,EAAE,kBAA0B;YACpF,IAAI,CAAC,CAAC,GAAQ,KAAK,CAAC;YACpB,IAAI,CAAC,CAAC,GAAsB,mBAAmB,CAAC;YAChD,IAAI,CAAC,CAAC,GAAqB,kBAAkB,CAAC;QAC/C,CAAC;QAEM,iBAAiB,CAAC,KAAiB,EAAE,OAA8B;YACzE,OAAO,CAAC,uBAAuB,CAAC,IAAI,WAAG,CACtC,IAAI,CAAC,CAAC,CAAM,eAAe,EAC3B,IAAI,CAAC,CAAC,CAAM,WAAW,EACvB,IAAI,CAAC,CAAC,CAAM,eAAe,EAC3B,IAAI,CAAC,CAAC,CAAM,WAAW,CACvB,EAAE,IAAI,CAAC,CAAC,CAAoB,CAAC;YAE9B,OAAO,CAAC,uBAAuB,CAAC,IAAI,WAAG,CACtC,IAAI,CAAC,CAAC,CAAM,aAAa,EACzB,IAAI,CAAC,CAAC,CAAM,SAAS,EACrB,IAAI,CAAC,CAAC,CAAM,aAAa,EACzB,IAAI,CAAC,CAAC,CAAM,SAAS,CACrB,EAAE,IAAI,CAAC,CAAC,CAAmB,CAAC;QAC9B,CAAC;QAEM,kBAAkB,CAAC,KAAiB,EAAE,MAAgC;YAC5E,MAAM,qBAAqB,GAAG,MAAM,CAAC,wBAAwB,EAAE,CAAC;YAChE,MAAM,mBAAmB,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC3D,MAAM,oBAAoB,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAE5D,OAAO,IAAI,eAAG,CACb,mBAAmB,CAAC,aAAa,EACjC,mBAAmB,CAAC,SAAS,EAC7B,oBAAoB,CAAC,aAAa,EAClC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAmB,MAAM,CAChE,CAAC;QACH,CAAC;KACD;IAvCD,kBAuCC;IAED;;OAEG;IACH,MAAa,GAAG;QAEf,YACkB,CAAc,EACd,CAAa,EACb,CAAkB;YAFlB,MAAC,GAAD,CAAC,CAAa;YACd,MAAC,GAAD,CAAC,CAAY;YACb,MAAC,GAAD,CAAC,CAAiB;QAChC,CAAC;QAEE,iBAAiB,CAAC,KAAiB,EAAE,OAA8B;YACzE,OAAO,CAAC,uBAAuB,CAAC,IAAI,WAAG,CACtC,IAAI,CAAC,CAAC,CAAS,UAAU,EACzB,IAAI,CAAC,CAAC,CAAS,MAAM,EACrB,IAAI,CAAC,CAAC,CAAS,UAAU,EACzB,IAAI,CAAC,CAAC,CAAS,MAAM,CACrB,EAAE,IAAI,CAAC,CAAC,GAAO,IAAI,CAAC,CAAC,CAAU,CAAC;QAClC,CAAC;QAEM,kBAAkB,CAAC,KAAiB,EAAE,MAAgC;YAC5E,MAAM,qBAAqB,GAAG,MAAM,CAAC,wBAAwB,EAAE,CAAC;YAChE,MAAM,OAAO,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAE/C,OAAO,IAAI,eAAG,CACb,OAAO,CAAC,aAAa,EACrB,OAAO,CAAC,WAAW,EACnB,OAAO,CAAC,aAAa,EACrB,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAU,MAAM,CAC1C,CAAC;QACH,CAAC;KACD;IA5BD,kBA4BC","file":"surroundSelectionCommand.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Range } from 'vs/editor/common/core/range';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ICommand, ICursorStateComputerData, IEditOperationBuilder } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\n\nexport class SurroundSelectionCommand implements ICommand {\n\tprivate readonly _range: Selection;\n\tprivate readonly _charBeforeSelection: string;\n\tprivate readonly _charAfterSelection: string;\n\n\tconstructor(range: Selection, charBeforeSelection: string, charAfterSelection: string) {\n\t\tthis._range = range;\n\t\tthis._charBeforeSelection = charBeforeSelection;\n\t\tthis._charAfterSelection = charAfterSelection;\n\t}\n\n\tpublic getEditOperations(model: ITextModel, builder: IEditOperationBuilder): void {\n\t\tbuilder.addTrackedEditOperation(new Range(\n\t\t\tthis._range.startLineNumber,\n\t\t\tthis._range.startColumn,\n\t\t\tthis._range.startLineNumber,\n\t\t\tthis._range.startColumn\n\t\t), this._charBeforeSelection);\n\n\t\tbuilder.addTrackedEditOperation(new Range(\n\t\t\tthis._range.endLineNumber,\n\t\t\tthis._range.endColumn,\n\t\t\tthis._range.endLineNumber,\n\t\t\tthis._range.endColumn\n\t\t), this._charAfterSelection);\n\t}\n\n\tpublic computeCursorState(model: ITextModel, helper: ICursorStateComputerData): Selection {\n\t\tconst inverseEditOperations = helper.getInverseEditOperations();\n\t\tconst firstOperationRange = inverseEditOperations[0].range;\n\t\tconst secondOperationRange = inverseEditOperations[1].range;\n\n\t\treturn new Selection(\n\t\t\tfirstOperationRange.endLineNumber,\n\t\t\tfirstOperationRange.endColumn,\n\t\t\tsecondOperationRange.endLineNumber,\n\t\t\tsecondOperationRange.endColumn - this._charAfterSelection.length\n\t\t);\n\t}\n}\n\n/**\n * A surround selection command that runs after composition finished.\n */\nexport class CompositionSurroundSelectionCommand implements ICommand {\n\n\tconstructor(\n\t\tprivate readonly _position: Position,\n\t\tprivate readonly _text: string,\n\t\tprivate readonly _charAfter: string\n\t) { }\n\n\tpublic getEditOperations(model: ITextModel, builder: IEditOperationBuilder): void {\n\t\tbuilder.addTrackedEditOperation(new Range(\n\t\t\tthis._position.lineNumber,\n\t\t\tthis._position.column,\n\t\t\tthis._position.lineNumber,\n\t\t\tthis._position.column\n\t\t), this._text + this._charAfter);\n\t}\n\n\tpublic computeCursorState(model: ITextModel, helper: ICursorStateComputerData): Selection {\n\t\tconst inverseEditOperations = helper.getInverseEditOperations();\n\t\tconst opRange = inverseEditOperations[0].range;\n\n\t\treturn new Selection(\n\t\t\topRange.endLineNumber,\n\t\t\topRange.startColumn,\n\t\t\topRange.endLineNumber,\n\t\t\topRange.endColumn - this._charAfter.length\n\t\t);\n\t}\n}\n"]}