{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/cursor/cursorColumnSelection.ts"],"names":[],"mappings":"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","file":"cursorColumnSelection.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CursorConfiguration, ICursorSimpleModel, SingleCursorState, IColumnSelectData, SelectionStartKind } from 'vs/editor/common/cursorCommon';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\n\nexport class ColumnSelection {\n\n\tpublic static columnSelect(config: CursorConfiguration, model: ICursorSimpleModel, fromLineNumber: number, fromVisibleColumn: number, toLineNumber: number, toVisibleColumn: number): IColumnSelectResult {\n\t\tconst lineCount = Math.abs(toLineNumber - fromLineNumber) + 1;\n\t\tconst reversed = (fromLineNumber > toLineNumber);\n\t\tconst isRTL = (fromVisibleColumn > toVisibleColumn);\n\t\tconst isLTR = (fromVisibleColumn < toVisibleColumn);\n\n\t\tconst result: SingleCursorState[] = [];\n\n\t\t// console.log(`fromVisibleColumn: ${fromVisibleColumn}, toVisibleColumn: ${toVisibleColumn}`);\n\n\t\tfor (let i = 0; i < lineCount; i++) {\n\t\t\tconst lineNumber = fromLineNumber + (reversed ? -i : i);\n\n\t\t\tconst startColumn = config.columnFromVisibleColumn(model, lineNumber, fromVisibleColumn);\n\t\t\tconst endColumn = config.columnFromVisibleColumn(model, lineNumber, toVisibleColumn);\n\t\t\tconst visibleStartColumn = config.visibleColumnFromColumn(model, new Position(lineNumber, startColumn));\n\t\t\tconst visibleEndColumn = config.visibleColumnFromColumn(model, new Position(lineNumber, endColumn));\n\n\t\t\t// console.log(`lineNumber: ${lineNumber}: visibleStartColumn: ${visibleStartColumn}, visibleEndColumn: ${visibleEndColumn}`);\n\n\t\t\tif (isLTR) {\n\t\t\t\tif (visibleStartColumn > toVisibleColumn) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (visibleEndColumn < fromVisibleColumn) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRTL) {\n\t\t\t\tif (visibleEndColumn > fromVisibleColumn) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (visibleStartColumn < toVisibleColumn) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult.push(new SingleCursorState(\n\t\t\t\tnew Range(lineNumber, startColumn, lineNumber, startColumn), SelectionStartKind.Simple, 0,\n\t\t\t\tnew Position(lineNumber, endColumn), 0\n\t\t\t));\n\t\t}\n\n\t\tif (result.length === 0) {\n\t\t\t// We are after all the lines, so add cursor at the end of each line\n\t\t\tfor (let i = 0; i < lineCount; i++) {\n\t\t\t\tconst lineNumber = fromLineNumber + (reversed ? -i : i);\n\t\t\t\tconst maxColumn = model.getLineMaxColumn(lineNumber);\n\n\t\t\t\tresult.push(new SingleCursorState(\n\t\t\t\t\tnew Range(lineNumber, maxColumn, lineNumber, maxColumn), SelectionStartKind.Simple, 0,\n\t\t\t\t\tnew Position(lineNumber, maxColumn), 0\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tviewStates: result,\n\t\t\treversed: reversed,\n\t\t\tfromLineNumber: fromLineNumber,\n\t\t\tfromVisualColumn: fromVisibleColumn,\n\t\t\ttoLineNumber: toLineNumber,\n\t\t\ttoVisualColumn: toVisibleColumn\n\t\t};\n\t}\n\n\tpublic static columnSelectLeft(config: CursorConfiguration, model: ICursorSimpleModel, prevColumnSelectData: IColumnSelectData): IColumnSelectResult {\n\t\tlet toViewVisualColumn = prevColumnSelectData.toViewVisualColumn;\n\t\tif (toViewVisualColumn > 0) {\n\t\t\ttoViewVisualColumn--;\n\t\t}\n\n\t\treturn ColumnSelection.columnSelect(config, model, prevColumnSelectData.fromViewLineNumber, prevColumnSelectData.fromViewVisualColumn, prevColumnSelectData.toViewLineNumber, toViewVisualColumn);\n\t}\n\n\tpublic static columnSelectRight(config: CursorConfiguration, model: ICursorSimpleModel, prevColumnSelectData: IColumnSelectData): IColumnSelectResult {\n\t\tlet maxVisualViewColumn = 0;\n\t\tconst minViewLineNumber = Math.min(prevColumnSelectData.fromViewLineNumber, prevColumnSelectData.toViewLineNumber);\n\t\tconst maxViewLineNumber = Math.max(prevColumnSelectData.fromViewLineNumber, prevColumnSelectData.toViewLineNumber);\n\t\tfor (let lineNumber = minViewLineNumber; lineNumber <= maxViewLineNumber; lineNumber++) {\n\t\t\tconst lineMaxViewColumn = model.getLineMaxColumn(lineNumber);\n\t\t\tconst lineMaxVisualViewColumn = config.visibleColumnFromColumn(model, new Position(lineNumber, lineMaxViewColumn));\n\t\t\tmaxVisualViewColumn = Math.max(maxVisualViewColumn, lineMaxVisualViewColumn);\n\t\t}\n\n\t\tlet toViewVisualColumn = prevColumnSelectData.toViewVisualColumn;\n\t\tif (toViewVisualColumn < maxVisualViewColumn) {\n\t\t\ttoViewVisualColumn++;\n\t\t}\n\n\t\treturn this.columnSelect(config, model, prevColumnSelectData.fromViewLineNumber, prevColumnSelectData.fromViewVisualColumn, prevColumnSelectData.toViewLineNumber, toViewVisualColumn);\n\t}\n\n\tpublic static columnSelectUp(config: CursorConfiguration, model: ICursorSimpleModel, prevColumnSelectData: IColumnSelectData, isPaged: boolean): IColumnSelectResult {\n\t\tconst linesCount = isPaged ? config.pageSize : 1;\n\t\tconst toViewLineNumber = Math.max(1, prevColumnSelectData.toViewLineNumber - linesCount);\n\t\treturn this.columnSelect(config, model, prevColumnSelectData.fromViewLineNumber, prevColumnSelectData.fromViewVisualColumn, toViewLineNumber, prevColumnSelectData.toViewVisualColumn);\n\t}\n\n\tpublic static columnSelectDown(config: CursorConfiguration, model: ICursorSimpleModel, prevColumnSelectData: IColumnSelectData, isPaged: boolean): IColumnSelectResult {\n\t\tconst linesCount = isPaged ? config.pageSize : 1;\n\t\tconst toViewLineNumber = Math.min(model.getLineCount(), prevColumnSelectData.toViewLineNumber + linesCount);\n\t\treturn this.columnSelect(config, model, prevColumnSelectData.fromViewLineNumber, prevColumnSelectData.fromViewVisualColumn, toViewLineNumber, prevColumnSelectData.toViewVisualColumn);\n\t}\n}\n\nexport interface IColumnSelectResult {\n\tviewStates: SingleCursorState[];\n\treversed: boolean;\n\tfromLineNumber: number;\n\tfromVisualColumn: number;\n\ttoLineNumber: number;\n\ttoVisualColumn: number;\n}\n"]}