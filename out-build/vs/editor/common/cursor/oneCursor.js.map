{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/cursor/oneCursor.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAShG;;MAEE;IACF,MAAa,GAAG;QAQf,YAAY,OAAY;YACvB,IAAI,CAAC,CAAC,GAAkB,IAAI,CAAC;YAC7B,IAAI,CAAC,CAAC,GAAiB,IAAI,CAAC;YAE5B,IAAI,CAAC,CAAC,CACL,OAAO,EACP,IAAI,kBAAG,CAAe,IAAI,WAAG,CAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,qCAA6B,CAAC,EAAE,IAAI,cAAG,CAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EACjG,IAAI,kBAAG,CAAe,IAAI,WAAG,CAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,qCAA6B,CAAC,EAAE,IAAI,cAAG,CAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CACjG,CAAC;QACH,CAAC;QAEM,OAAO,CAAC,OAAY;YAC1B,IAAI,CAAC,CAAC,CAAmB,OAAO,CAAC,CAAC;QACnC,CAAC;QAEM,sBAAsB,CAAC,OAAY;YACzC,IAAI,CAAC,CAAC,GAAiB,IAAI,CAAC;YAC5B,IAAI,CAAC,CAAC,CAAmB,OAAO,CAAC,CAAC;QACnC,CAAC;QAEM,qBAAqB,CAAC,OAAY;YACxC,IAAI,CAAC,CAAC,GAAiB,KAAK,CAAC;YAC7B,IAAI,CAAC,CAAC,CAAmB,OAAO,CAAC,CAAC;QACnC,CAAC;QAEO,CAAC,CAAmB,OAAY;YACvC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAgB;gBAC1B,4BAA4B;gBAC5B,OAAO;aACP;YACD,IAAI,CAAC,CAAC,GAAkB,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAiB,IAAI,CAAC,UAAU,CAAC,SAAS,8DAAsD,CAAC;QAC/J,CAAC;QAEO,CAAC,CAAmB,OAAY;YACvC,IAAI,CAAC,CAAC,GAAkB,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAiB,IAAI,8DAAsD,CAAC;QAC1I,CAAC;QAEM,aAAa;YACnB,OAAO,IAAI,kBAAG,CAAS,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,CAAC;QAEM,wBAAwB,CAAC,OAAY;YAC3C,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAiB,CAAE,CAAC;YAEtE,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;gBAC5D,oDAAoD;gBACpD,OAAO,eAAG,CAAO,SAAS,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;aAC5F;YAED,OAAO,eAAG,CAAO,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC;QAC7E,CAAC;QAEM,gBAAgB,CAAC,OAAY;YACnC,IAAI,CAAC,CAAC,CAAS,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,CAAC;QAEM,QAAQ,CAAC,OAAY,EAAY,UAAoC,EAAE,SAAmC;YAChH,IAAI,CAAC,CAAC,CAAS,OAAO,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;QAChD,CAAC;QAEO,MAAM,CAAC,CAAC,CAA0B,SAA6B,EAAE,QAAa,EAAO,UAAe,EAAO,WAAgB;YAClI,IAAI,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;gBAChC,OAAO,WAAW,CAAC;aACnB;YACD,OAAO,SAAS,CAAC,iBAAiB,CAAC,QAAQ,gCAAwB,CAAC;QACrE,CAAC;QAEO,MAAM,CAAC,CAAC,CAAkB,SAA6B,EAAE,SAAc;YAC9E,MAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;YACpC,MAAM,cAAc,GAAG,SAAS,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;YACnE,MAAM,YAAY,GAAG,SAAS,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YAE/D,MAAM,aAAa,GAAG,SAAS,CAAC,iBAAiB,CAAC,QAAQ,gCAAwB,CAAC;YACnF,MAAM,mBAAmB,GAAG,IAAI,CAAC,CAAC,CAA0B,SAAS,EAAE,cAAc,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;YAChH,MAAM,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAA0B,SAAS,EAAE,YAAY,EAAE,cAAc,EAAE,mBAAmB,CAAC,CAAC;YAExH,IAAI,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,cAAc,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;gBAC3H,gCAAgC;gBAChC,OAAO,SAAS,CAAC;aACjB;YAED,OAAO,IAAI,kBAAG,CACb,WAAG,CAAG,aAAa,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,EAC3D,SAAS,CAAC,kBAAkB,EAC5B,SAAS,CAAC,oCAAoC,GAAG,cAAc,CAAC,MAAM,GAAG,mBAAmB,CAAC,MAAM,EACnG,aAAa,EACb,SAAS,CAAC,sBAAsB,GAAG,QAAQ,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CACzE,CAAC;QACH,CAAC;QAEO,CAAC,CAAS,OAAY,EAAY,UAAoC,EAAE,SAAmC;YAClH,IAAI,SAAS,EAAE;gBACd,SAAS,GAAG,GAAG,CAAI,CAAC,CAAkB,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;aACpE;YAED,IAAI,CAAC,UAAU,EAAE;gBAChB,IAAI,CAAC,SAAS,EAAE;oBACf,OAAO;iBACP;gBACD,yDAAyD;gBACzD,MAAM,cAAc,GAAG,OAAO,CAAC,KAAK,CAAC,aAAa,CACjD,OAAO,CAAC,oBAAoB,CAAC,4BAA4B,CAAC,SAAS,CAAC,cAAc,CAAC,CACnF,CAAC;gBAEF,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAC9C,OAAO,CAAC,oBAAoB,CAAC,kCAAkC,CAAC,SAAS,CAAC,QAAQ,CAAC,CACnF,CAAC;gBAEF,UAAU,GAAG,IAAI,kBAAG,CAAe,cAAc,EAAE,SAAS,CAAC,kBAAkB,EAAE,SAAS,CAAC,oCAAoC,EAAE,QAAQ,EAAE,SAAS,CAAC,sBAAsB,CAAC,CAAC;aAC7K;iBAAM;gBACN,2BAA2B;gBAC3B,MAAM,cAAc,GAAG,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;gBAC9E,MAAM,oCAAoC,GAAG,UAAU,CAAC,cAAc,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,oCAAoC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEzJ,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAC9C,UAAU,CAAC,QAAQ,CACnB,CAAC;gBACF,MAAM,sBAAsB,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAE5G,UAAU,GAAG,IAAI,kBAAG,CAAe,cAAc,EAAE,UAAU,CAAC,kBAAkB,EAAE,oCAAoC,EAAE,QAAQ,EAAE,sBAAsB,CAAC,CAAC;aAC1J;YAED,IAAI,CAAC,SAAS,EAAE;gBACf,yDAAyD;gBACzD,MAAM,mBAAmB,GAAG,OAAO,CAAC,oBAAoB,CAAC,kCAAkC,CAAC,IAAI,cAAG,CAAM,UAAU,CAAC,cAAc,CAAC,eAAe,EAAE,UAAU,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC5L,MAAM,mBAAmB,GAAG,OAAO,CAAC,oBAAoB,CAAC,kCAAkC,CAAC,IAAI,cAAG,CAAM,UAAU,CAAC,cAAc,CAAC,aAAa,EAAE,UAAU,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxL,MAAM,kBAAkB,GAAG,IAAI,WAAG,CAAG,mBAAmB,CAAC,UAAU,EAAE,mBAAmB,CAAC,MAAM,EAAE,mBAAmB,CAAC,UAAU,EAAE,mBAAmB,CAAC,MAAM,CAAC,CAAC;gBAC7J,MAAM,YAAY,GAAG,OAAO,CAAC,oBAAoB,CAAC,kCAAkC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAC1G,SAAS,GAAG,IAAI,kBAAG,CAAe,kBAAkB,EAAE,UAAU,CAAC,kBAAkB,EAAE,UAAU,CAAC,oCAAoC,EAAE,YAAY,EAAE,UAAU,CAAC,sBAAsB,CAAC,CAAC;aACvL;iBAAM;gBACN,0BAA0B;gBAC1B,MAAM,kBAAkB,GAAG,OAAO,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,SAAS,CAAC,cAAc,EAAE,UAAU,CAAC,cAAc,CAAC,CAAC;gBAC/H,MAAM,YAAY,GAAG,OAAO,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAChH,SAAS,GAAG,IAAI,kBAAG,CAAe,kBAAkB,EAAE,UAAU,CAAC,kBAAkB,EAAE,UAAU,CAAC,oCAAoC,EAAE,YAAY,EAAE,UAAU,CAAC,sBAAsB,CAAC,CAAC;aACvL;YAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAE3B,IAAI,CAAC,CAAC,CAAmB,OAAO,CAAC,CAAC;QACnC,CAAC;KACD;IArJD,kBAqJC","file":"oneCursor.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CursorState, ICursorSimpleModel, SelectionStartKind, SingleCursorState } from 'vs/editor/common/cursorCommon';\nimport { CursorContext } from 'vs/editor/common/cursor/cursorContext';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { PositionAffinity, TrackedRangeStickiness } from 'vs/editor/common/model';\n\n/**\n * Represents a single cursor.\n*/\nexport class Cursor {\n\n\tpublic modelState!: SingleCursorState;\n\tpublic viewState!: SingleCursorState;\n\n\tprivate _selTrackedRange: string | null;\n\tprivate _trackSelection: boolean;\n\n\tconstructor(context: CursorContext) {\n\t\tthis._selTrackedRange = null;\n\t\tthis._trackSelection = true;\n\n\t\tthis._setState(\n\t\t\tcontext,\n\t\t\tnew SingleCursorState(new Range(1, 1, 1, 1), SelectionStartKind.Simple, 0, new Position(1, 1), 0),\n\t\t\tnew SingleCursorState(new Range(1, 1, 1, 1), SelectionStartKind.Simple, 0, new Position(1, 1), 0)\n\t\t);\n\t}\n\n\tpublic dispose(context: CursorContext): void {\n\t\tthis._removeTrackedRange(context);\n\t}\n\n\tpublic startTrackingSelection(context: CursorContext): void {\n\t\tthis._trackSelection = true;\n\t\tthis._updateTrackedRange(context);\n\t}\n\n\tpublic stopTrackingSelection(context: CursorContext): void {\n\t\tthis._trackSelection = false;\n\t\tthis._removeTrackedRange(context);\n\t}\n\n\tprivate _updateTrackedRange(context: CursorContext): void {\n\t\tif (!this._trackSelection) {\n\t\t\t// don't track the selection\n\t\t\treturn;\n\t\t}\n\t\tthis._selTrackedRange = context.model._setTrackedRange(this._selTrackedRange, this.modelState.selection, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges);\n\t}\n\n\tprivate _removeTrackedRange(context: CursorContext): void {\n\t\tthis._selTrackedRange = context.model._setTrackedRange(this._selTrackedRange, null, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges);\n\t}\n\n\tpublic asCursorState(): CursorState {\n\t\treturn new CursorState(this.modelState, this.viewState);\n\t}\n\n\tpublic readSelectionFromMarkers(context: CursorContext): Selection {\n\t\tconst range = context.model._getTrackedRange(this._selTrackedRange!)!;\n\n\t\tif (this.modelState.selection.isEmpty() && !range.isEmpty()) {\n\t\t\t// Avoid selecting text when recovering from markers\n\t\t\treturn Selection.fromRange(range.collapseToEnd(), this.modelState.selection.getDirection());\n\t\t}\n\n\t\treturn Selection.fromRange(range, this.modelState.selection.getDirection());\n\t}\n\n\tpublic ensureValidState(context: CursorContext): void {\n\t\tthis._setState(context, this.modelState, this.viewState);\n\t}\n\n\tpublic setState(context: CursorContext, modelState: SingleCursorState | null, viewState: SingleCursorState | null): void {\n\t\tthis._setState(context, modelState, viewState);\n\t}\n\n\tprivate static _validatePositionWithCache(viewModel: ICursorSimpleModel, position: Position, cacheInput: Position, cacheOutput: Position): Position {\n\t\tif (position.equals(cacheInput)) {\n\t\t\treturn cacheOutput;\n\t\t}\n\t\treturn viewModel.normalizePosition(position, PositionAffinity.None);\n\t}\n\n\tprivate static _validateViewState(viewModel: ICursorSimpleModel, viewState: SingleCursorState): SingleCursorState {\n\t\tconst position = viewState.position;\n\t\tconst sStartPosition = viewState.selectionStart.getStartPosition();\n\t\tconst sEndPosition = viewState.selectionStart.getEndPosition();\n\n\t\tconst validPosition = viewModel.normalizePosition(position, PositionAffinity.None);\n\t\tconst validSStartPosition = this._validatePositionWithCache(viewModel, sStartPosition, position, validPosition);\n\t\tconst validSEndPosition = this._validatePositionWithCache(viewModel, sEndPosition, sStartPosition, validSStartPosition);\n\n\t\tif (position.equals(validPosition) && sStartPosition.equals(validSStartPosition) && sEndPosition.equals(validSEndPosition)) {\n\t\t\t// fast path: the state is valid\n\t\t\treturn viewState;\n\t\t}\n\n\t\treturn new SingleCursorState(\n\t\t\tRange.fromPositions(validSStartPosition, validSEndPosition),\n\t\t\tviewState.selectionStartKind,\n\t\t\tviewState.selectionStartLeftoverVisibleColumns + sStartPosition.column - validSStartPosition.column,\n\t\t\tvalidPosition,\n\t\t\tviewState.leftoverVisibleColumns + position.column - validPosition.column,\n\t\t);\n\t}\n\n\tprivate _setState(context: CursorContext, modelState: SingleCursorState | null, viewState: SingleCursorState | null): void {\n\t\tif (viewState) {\n\t\t\tviewState = Cursor._validateViewState(context.viewModel, viewState);\n\t\t}\n\n\t\tif (!modelState) {\n\t\t\tif (!viewState) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// We only have the view state => compute the model state\n\t\t\tconst selectionStart = context.model.validateRange(\n\t\t\t\tcontext.coordinatesConverter.convertViewRangeToModelRange(viewState.selectionStart)\n\t\t\t);\n\n\t\t\tconst position = context.model.validatePosition(\n\t\t\t\tcontext.coordinatesConverter.convertViewPositionToModelPosition(viewState.position)\n\t\t\t);\n\n\t\t\tmodelState = new SingleCursorState(selectionStart, viewState.selectionStartKind, viewState.selectionStartLeftoverVisibleColumns, position, viewState.leftoverVisibleColumns);\n\t\t} else {\n\t\t\t// Validate new model state\n\t\t\tconst selectionStart = context.model.validateRange(modelState.selectionStart);\n\t\t\tconst selectionStartLeftoverVisibleColumns = modelState.selectionStart.equalsRange(selectionStart) ? modelState.selectionStartLeftoverVisibleColumns : 0;\n\n\t\t\tconst position = context.model.validatePosition(\n\t\t\t\tmodelState.position\n\t\t\t);\n\t\t\tconst leftoverVisibleColumns = modelState.position.equals(position) ? modelState.leftoverVisibleColumns : 0;\n\n\t\t\tmodelState = new SingleCursorState(selectionStart, modelState.selectionStartKind, selectionStartLeftoverVisibleColumns, position, leftoverVisibleColumns);\n\t\t}\n\n\t\tif (!viewState) {\n\t\t\t// We only have the model state => compute the view state\n\t\t\tconst viewSelectionStart1 = context.coordinatesConverter.convertModelPositionToViewPosition(new Position(modelState.selectionStart.startLineNumber, modelState.selectionStart.startColumn));\n\t\t\tconst viewSelectionStart2 = context.coordinatesConverter.convertModelPositionToViewPosition(new Position(modelState.selectionStart.endLineNumber, modelState.selectionStart.endColumn));\n\t\t\tconst viewSelectionStart = new Range(viewSelectionStart1.lineNumber, viewSelectionStart1.column, viewSelectionStart2.lineNumber, viewSelectionStart2.column);\n\t\t\tconst viewPosition = context.coordinatesConverter.convertModelPositionToViewPosition(modelState.position);\n\t\t\tviewState = new SingleCursorState(viewSelectionStart, modelState.selectionStartKind, modelState.selectionStartLeftoverVisibleColumns, viewPosition, modelState.leftoverVisibleColumns);\n\t\t} else {\n\t\t\t// Validate new view state\n\t\t\tconst viewSelectionStart = context.coordinatesConverter.validateViewRange(viewState.selectionStart, modelState.selectionStart);\n\t\t\tconst viewPosition = context.coordinatesConverter.validateViewPosition(viewState.position, modelState.position);\n\t\t\tviewState = new SingleCursorState(viewSelectionStart, modelState.selectionStartKind, modelState.selectionStartLeftoverVisibleColumns, viewPosition, modelState.leftoverVisibleColumns);\n\t\t}\n\n\t\tthis.modelState = modelState;\n\t\tthis.viewState = viewState;\n\n\t\tthis._updateTrackedRange(context);\n\t}\n}\n"]}