{"version":3,"sources":["vs/editor/common/core/editorColorRegistry.ts"],"names":[],"mappings":"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","file":"editorColorRegistry.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Color, RGBA } from 'vs/base/common/color';\nimport { activeContrastBorder, editorBackground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight } from 'vs/platform/theme/common/colorRegistry';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\n\n/**\n * Definition of the editor colors\n */\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', { dark: '#282828', light: '#eeeeee', hcDark: '#f38518', hcLight: contrastBorder }, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', { dark: '#ffffff0b', light: '#fdff0033', hcDark: null, hcLight: null }, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'), true);\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'), true);\n\nexport const editorCursorForeground = registerColor('editorCursor.foreground', { dark: '#AEAFAD', light: Color.black, hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', { dark: '#e3e4e229', light: '#33333333', hcDark: '#e3e4e229', hcLight: '#CCCCCC' }, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', { dark: '#858585', light: '#237893', hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\n\nexport const deprecatedEditorIndentGuides = registerColor('editorIndentGuide.background', { dark: editorWhitespaces, light: editorWhitespaces, hcDark: editorWhitespaces, hcLight: editorWhitespaces }, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'), false, nls.localize('deprecatedEditorIndentGuides', '\\'editorIndentGuide.background\\' is deprecated. Use \\'editorIndentGuide.background1\\' instead.'));\nexport const deprecatedEditorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', { dark: editorWhitespaces, light: editorWhitespaces, hcDark: editorWhitespaces, hcLight: editorWhitespaces }, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'), false, nls.localize('deprecatedEditorActiveIndentGuide', '\\'editorIndentGuide.activeBackground\\' is deprecated. Use \\'editorIndentGuide.activeBackground1\\' instead.'));\n\nexport const editorIndentGuide1 = registerColor('editorIndentGuide.background1', { dark: deprecatedEditorIndentGuides, light: deprecatedEditorIndentGuides, hcDark: deprecatedEditorIndentGuides, hcLight: deprecatedEditorIndentGuides }, nls.localize('editorIndentGuides1', 'Color of the editor indentation guides (1).'));\nexport const editorIndentGuide2 = registerColor('editorIndentGuide.background2', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorIndentGuides2', 'Color of the editor indentation guides (2).'));\nexport const editorIndentGuide3 = registerColor('editorIndentGuide.background3', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorIndentGuides3', 'Color of the editor indentation guides (3).'));\nexport const editorIndentGuide4 = registerColor('editorIndentGuide.background4', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorIndentGuides4', 'Color of the editor indentation guides (4).'));\nexport const editorIndentGuide5 = registerColor('editorIndentGuide.background5', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorIndentGuides5', 'Color of the editor indentation guides (5).'));\nexport const editorIndentGuide6 = registerColor('editorIndentGuide.background6', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorIndentGuides6', 'Color of the editor indentation guides (6).'));\n\nexport const editorActiveIndentGuide1 = registerColor('editorIndentGuide.activeBackground1', { dark: deprecatedEditorActiveIndentGuides, light: deprecatedEditorActiveIndentGuides, hcDark: deprecatedEditorActiveIndentGuides, hcLight: deprecatedEditorActiveIndentGuides }, nls.localize('editorActiveIndentGuide1', 'Color of the active editor indentation guides (1).'));\nexport const editorActiveIndentGuide2 = registerColor('editorIndentGuide.activeBackground2', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorActiveIndentGuide2', 'Color of the active editor indentation guides (2).'));\nexport const editorActiveIndentGuide3 = registerColor('editorIndentGuide.activeBackground3', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorActiveIndentGuide3', 'Color of the active editor indentation guides (3).'));\nexport const editorActiveIndentGuide4 = registerColor('editorIndentGuide.activeBackground4', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorActiveIndentGuide4', 'Color of the active editor indentation guides (4).'));\nexport const editorActiveIndentGuide5 = registerColor('editorIndentGuide.activeBackground5', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorActiveIndentGuide5', 'Color of the active editor indentation guides (5).'));\nexport const editorActiveIndentGuide6 = registerColor('editorIndentGuide.activeBackground6', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorActiveIndentGuide6', 'Color of the active editor indentation guides (6).'));\n\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', { dark: '#c6c6c6', light: '#0B216F', hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', { dark: deprecatedEditorActiveLineNumber, light: deprecatedEditorActiveLineNumber, hcDark: deprecatedEditorActiveLineNumber, hcLight: deprecatedEditorActiveLineNumber }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorDimmedLineNumber = registerColor('editorLineNumber.dimmedForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorDimmedLineNumber', 'Color of the final editor line when editor.renderFinalNewline is set to dimmed.'));\n\nexport const editorRuler = registerColor('editorRuler.foreground', { dark: '#5A5A5A', light: Color.lightgrey, hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorRuler', 'Color of the editor rulers.'));\n\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', { dark: '#999999', light: '#919191', hcDark: '#999999', hcLight: '#292929' }, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\n\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', { dark: '#0064001a', light: '#0064001a', hcDark: '#0064001a', hcLight: '#0000' }, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', { dark: '#888', light: '#B9B9B9', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\n\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', { dark: '#7f7f7f4d', light: '#7f7f7f4d', hcDark: '#7f7f7f4d', hcLight: '#666666' }, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler.'));\n\nexport const editorGutter = registerColor('editorGutter.background', { dark: editorBackground, light: editorBackground, hcDark: editorBackground, hcLight: editorBackground }, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\n\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: contrastBorder }, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', { dark: Color.fromHex('#000a'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\n\nexport const ghostTextBorder = registerColor('editorGhostText.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: Color.fromHex('#292929').transparent(0.8) }, nls.localize('editorGhostTextBorder', 'Border color of ghost text in the editor.'));\nexport const ghostTextForeground = registerColor('editorGhostText.foreground', { dark: Color.fromHex('#ffffff56'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('editorGhostTextForeground', 'Foreground color of the ghost text in the editor.'));\nexport const ghostTextBackground = registerColor('editorGhostText.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorGhostTextBackground', 'Background color of the ghost text in the editor.'));\n\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', { dark: rulerRangeDefault, light: rulerRangeDefault, hcDark: rulerRangeDefault, hcLight: rulerRangeDefault }, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\n\nexport const editorBracketHighlightingForeground1 = registerColor('editorBracketHighlight.foreground1', { dark: '#FFD700', light: '#0431FAFF', hcDark: '#FFD700', hcLight: '#0431FAFF' }, nls.localize('editorBracketHighlightForeground1', 'Foreground color of brackets (1). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground2 = registerColor('editorBracketHighlight.foreground2', { dark: '#DA70D6', light: '#319331FF', hcDark: '#DA70D6', hcLight: '#319331FF' }, nls.localize('editorBracketHighlightForeground2', 'Foreground color of brackets (2). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground3 = registerColor('editorBracketHighlight.foreground3', { dark: '#179FFF', light: '#7B3814FF', hcDark: '#87CEFA', hcLight: '#7B3814FF' }, nls.localize('editorBracketHighlightForeground3', 'Foreground color of brackets (3). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground4 = registerColor('editorBracketHighlight.foreground4', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketHighlightForeground4', 'Foreground color of brackets (4). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground5 = registerColor('editorBracketHighlight.foreground5', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketHighlightForeground5', 'Foreground color of brackets (5). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground6 = registerColor('editorBracketHighlight.foreground6', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketHighlightForeground6', 'Foreground color of brackets (6). Requires enabling bracket pair colorization.'));\n\nexport const editorBracketHighlightingUnexpectedBracketForeground = registerColor('editorBracketHighlight.unexpectedBracket.foreground', { dark: new Color(new RGBA(255, 18, 18, 0.8)), light: new Color(new RGBA(255, 18, 18, 0.8)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '' }, nls.localize('editorBracketHighlightUnexpectedBracketForeground', 'Foreground color of unexpected brackets.'));\n\nexport const editorBracketPairGuideBackground1 = registerColor('editorBracketPairGuide.background1', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.background1', 'Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground2 = registerColor('editorBracketPairGuide.background2', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.background2', 'Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground3 = registerColor('editorBracketPairGuide.background3', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.background3', 'Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground4 = registerColor('editorBracketPairGuide.background4', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.background4', 'Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground5 = registerColor('editorBracketPairGuide.background5', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.background5', 'Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground6 = registerColor('editorBracketPairGuide.background6', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.background6', 'Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.'));\n\nexport const editorBracketPairGuideActiveBackground1 = registerColor('editorBracketPairGuide.activeBackground1', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground1', 'Background color of active bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground2 = registerColor('editorBracketPairGuide.activeBackground2', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground2', 'Background color of active bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground3 = registerColor('editorBracketPairGuide.activeBackground3', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground3', 'Background color of active bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground4 = registerColor('editorBracketPairGuide.activeBackground4', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground4', 'Background color of active bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground5 = registerColor('editorBracketPairGuide.activeBackground5', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground5', 'Background color of active bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground6 = registerColor('editorBracketPairGuide.activeBackground6', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground6', 'Background color of active bracket pair guides (6). Requires enabling bracket pair guides.'));\n\nexport const editorUnicodeHighlightBorder = registerColor('editorUnicodeHighlight.border', { dark: '#BD9B03', light: '#CEA33D', hcDark: '#ff0000', hcLight: '#CEA33D' }, nls.localize('editorUnicodeHighlight.border', 'Border color used to highlight unicode characters.'));\nexport const editorUnicodeHighlightBackground = registerColor('editorUnicodeHighlight.background', { dark: '#bd9b0326', light: '#cea33d14', hcDark: '#00000000', hcLight: '#cea33d14' }, nls.localize('editorUnicodeHighlight.background', 'Background color used to highlight unicode characters.'));\n\n\n// contains all color rules that used to defined in editor/browser/widget/editor.css\nregisterThemingParticipant((theme, collector) => {\n\tconst background = theme.getColor(editorBackground);\n\tconst lineHighlight = theme.getColor(editorLineHighlight);\n\tconst imeBackground = (lineHighlight && !lineHighlight.isTransparent() ? lineHighlight : background);\n\tif (imeBackground) {\n\t\tcollector.addRule(`.monaco-editor .inputarea.ime-input { background-color: ${imeBackground}; }`);\n\t}\n});\n"]}