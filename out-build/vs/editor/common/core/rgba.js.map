{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/core/rgba.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAEhG;;;OAGG;IACH,MAAa,GAAG;iBAGC,UAAK,GAAG,IAAI,GAAG,CAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAvB,AAAwB,CAAC;QAmB9C,YAAY,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;YArBtD,gBAAW,GAAS,SAAS,CAAC;YAsB7B,IAAI,CAAC,CAAC,GAAG,GAAG,CAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,CAAC,GAAG,GAAG,CAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,CAAC,GAAG,GAAG,CAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,CAAC,GAAG,GAAG,CAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC;QAEM,MAAM,CAAC,KAAU;YACvB,OAAO,CACN,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;mBACf,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;mBAClB,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;mBAClB,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CACrB,CAAC;QACH,CAAC;QAEM,MAAM,CAAC,MAAM,CAAC,CAAS;YAC7B,IAAI,CAAC,GAAG,CAAC,EAAE;gBACV,OAAO,CAAC,CAAC;aACT;YACD,IAAI,CAAC,GAAG,GAAG,EAAE;gBACZ,OAAO,GAAG,CAAC;aACX;YACD,OAAO,CAAC,GAAG,CAAC,CAAC;QACd,CAAC;;IA9CF,kBA+CC","file":"rgba.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A very VM friendly rgba datastructure.\n * Please don't touch unless you take a look at the IR.\n */\nexport class RGBA8 {\n\t_rgba8Brand: void = undefined;\n\n\tstatic readonly Empty = new RGBA8(0, 0, 0, 0);\n\n\t/**\n\t * Red: integer in [0-255]\n\t */\n\tpublic readonly r: number;\n\t/**\n\t * Green: integer in [0-255]\n\t */\n\tpublic readonly g: number;\n\t/**\n\t * Blue: integer in [0-255]\n\t */\n\tpublic readonly b: number;\n\t/**\n\t * Alpha: integer in [0-255]\n\t */\n\tpublic readonly a: number;\n\n\tconstructor(r: number, g: number, b: number, a: number) {\n\t\tthis.r = RGBA8._clamp(r);\n\t\tthis.g = RGBA8._clamp(g);\n\t\tthis.b = RGBA8._clamp(b);\n\t\tthis.a = RGBA8._clamp(a);\n\t}\n\n\tpublic equals(other: RGBA8): boolean {\n\t\treturn (\n\t\t\tthis.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\t\t\t&& this.a === other.a\n\t\t);\n\t}\n\n\tpublic static _clamp(c: number): number {\n\t\tif (c < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (c > 255) {\n\t\t\treturn 255;\n\t\t}\n\t\treturn c | 0;\n\t}\n}\n"]}