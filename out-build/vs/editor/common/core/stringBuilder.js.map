{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/core/stringBuilder.ts"],"names":[],"mappings":"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","file":"stringBuilder.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as platform from 'vs/base/common/platform';\nimport * as buffer from 'vs/base/common/buffer';\n\nlet _utf16LE_TextDecoder: TextDecoder | null;\nfunction getUTF16LE_TextDecoder(): TextDecoder {\n\tif (!_utf16LE_TextDecoder) {\n\t\t_utf16LE_TextDecoder = new TextDecoder('UTF-16LE');\n\t}\n\treturn _utf16LE_TextDecoder;\n}\n\nlet _utf16BE_TextDecoder: TextDecoder | null;\nfunction getUTF16BE_TextDecoder(): TextDecoder {\n\tif (!_utf16BE_TextDecoder) {\n\t\t_utf16BE_TextDecoder = new TextDecoder('UTF-16BE');\n\t}\n\treturn _utf16BE_TextDecoder;\n}\n\nlet _platformTextDecoder: TextDecoder | null;\nexport function getPlatformTextDecoder(): TextDecoder {\n\tif (!_platformTextDecoder) {\n\t\t_platformTextDecoder = platform.isLittleEndian() ? getUTF16LE_TextDecoder() : getUTF16BE_TextDecoder();\n\t}\n\treturn _platformTextDecoder;\n}\n\nexport function decodeUTF16LE(source: Uint8Array, offset: number, len: number): string {\n\tconst view = new Uint16Array(source.buffer, offset, len);\n\tif (len > 0 && (view[0] === 0xFEFF || view[0] === 0xFFFE)) {\n\t\t// UTF16 sometimes starts with a BOM https://de.wikipedia.org/wiki/Byte_Order_Mark\n\t\t// It looks like TextDecoder.decode will eat up a leading BOM (0xFEFF or 0xFFFE)\n\t\t// We don't want that behavior because we know the string is UTF16LE and the BOM should be maintained\n\t\t// So we use the manual decoder\n\t\treturn compatDecodeUTF16LE(source, offset, len);\n\t}\n\treturn getUTF16LE_TextDecoder().decode(view);\n}\n\nfunction compatDecodeUTF16LE(source: Uint8Array, offset: number, len: number): string {\n\tconst result: string[] = [];\n\tlet resultLen = 0;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst charCode = buffer.readUInt16LE(source, offset); offset += 2;\n\t\tresult[resultLen++] = String.fromCharCode(charCode);\n\t}\n\treturn result.join('');\n}\n\nexport class StringBuilder {\n\n\tprivate readonly _capacity: number;\n\tprivate readonly _buffer: Uint16Array;\n\n\tprivate _completedStrings: string[] | null;\n\tprivate _bufferLength: number;\n\n\tconstructor(capacity: number) {\n\t\tthis._capacity = capacity | 0;\n\t\tthis._buffer = new Uint16Array(this._capacity);\n\n\t\tthis._completedStrings = null;\n\t\tthis._bufferLength = 0;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._completedStrings = null;\n\t\tthis._bufferLength = 0;\n\t}\n\n\tpublic build(): string {\n\t\tif (this._completedStrings !== null) {\n\t\t\tthis._flushBuffer();\n\t\t\treturn this._completedStrings.join('');\n\t\t}\n\t\treturn this._buildBuffer();\n\t}\n\n\tprivate _buildBuffer(): string {\n\t\tif (this._bufferLength === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst view = new Uint16Array(this._buffer.buffer, 0, this._bufferLength);\n\t\treturn getPlatformTextDecoder().decode(view);\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tconst bufferString = this._buildBuffer();\n\t\tthis._bufferLength = 0;\n\n\t\tif (this._completedStrings === null) {\n\t\t\tthis._completedStrings = [bufferString];\n\t\t} else {\n\t\t\tthis._completedStrings[this._completedStrings.length] = bufferString;\n\t\t}\n\t}\n\n\t/**\n\t * Append a char code (<2^16)\n\t */\n\tpublic appendCharCode(charCode: number): void {\n\t\tconst remainingSpace = this._capacity - this._bufferLength;\n\n\t\tif (remainingSpace <= 1) {\n\t\t\tif (remainingSpace === 0 || strings.isHighSurrogate(charCode)) {\n\t\t\t\tthis._flushBuffer();\n\t\t\t}\n\t\t}\n\n\t\tthis._buffer[this._bufferLength++] = charCode;\n\t}\n\n\t/**\n\t * Append an ASCII char code (<2^8)\n\t */\n\tpublic appendASCIICharCode(charCode: number): void {\n\t\tif (this._bufferLength === this._capacity) {\n\t\t\t// buffer is full\n\t\t\tthis._flushBuffer();\n\t\t}\n\t\tthis._buffer[this._bufferLength++] = charCode;\n\t}\n\n\tpublic appendString(str: string): void {\n\t\tconst strLen = str.length;\n\n\t\tif (this._bufferLength + strLen >= this._capacity) {\n\t\t\t// This string does not fit in the remaining buffer space\n\n\t\t\tthis._flushBuffer();\n\t\t\tthis._completedStrings![this._completedStrings!.length] = str;\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < strLen; i++) {\n\t\t\tthis._buffer[this._bufferLength++] = str.charCodeAt(i);\n\t\t}\n\t}\n}\n"]}