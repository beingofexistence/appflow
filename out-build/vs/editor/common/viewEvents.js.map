{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/viewEvents.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAWhG,IAAkB,aAmBjB;IAnBD,WAAkB,aAAa;QAC9B,iFAAoB,CAAA;QACpB,6EAAkB,CAAA;QAClB,yFAAwB,CAAA;QACxB,qFAAsB,CAAA;QACtB,qFAAsB,CAAA;QACtB,+DAAW,CAAA;QACX,yEAAgB,CAAA;QAChB,yGAAgC,CAAA;QAChC,qFAAsB,CAAA;QACtB,yEAAgB,CAAA;QAChB,0EAAgB,CAAA;QAChB,4EAAiB,CAAA;QACjB,sFAAsB,CAAA;QACtB,4EAAiB,CAAA;QACjB,0EAAgB,CAAA;QAChB,4EAAiB,CAAA;QACjB,wFAAuB,CAAA;QACvB,0EAAgB,CAAA;IACjB,CAAC,EAnBiB,aAAa,6BAAb,aAAa,QAmB9B;IAED,MAAa,GAAG;QAEf;YADgB,SAAI,8CAAsC;QAC1C,CAAC;KACjB;IAHD,kBAGC;IAED,MAAa,GAAG;QAEf;YADgB,SAAI,4CAAoC;QACxC,CAAC;KACjB;IAHD,kBAGC;IAED,MAAa,GAAG;QAMf,YAAY,MAAiC;YAJ7B,SAAI,kDAA0C;YAK7D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACvB,CAAC;QAEM,UAAU,CAAC,EAAgB;YACjC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACpC,CAAC;KACD;IAbD,kBAaC;IAED,MAAa,GAAG;QAIf,YACiB,UAAuB,EACvB,eAA4B,EAC5B,MAA0B;YAF1B,eAAU,GAAV,UAAU,CAAa;YACvB,oBAAe,GAAf,eAAe,CAAa;YAC5B,WAAM,GAAN,MAAM,CAAoB;YAL3B,SAAI,gDAAwC;QAMxD,CAAC;KACL;IATD,kBASC;IAED,MAAa,GAAG;QAQf,YAAY,MAA4C;YANxC,SAAI,gDAAwC;YAO3D,IAAI,MAAM,EAAE;gBACX,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;gBAC5C,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC;gBACxD,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;aACpD;iBAAM;gBACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;aAC/B;QACF,CAAC;KACD;IAnBD,kBAmBC;IAED,MAAa,GAAG;QAIf;YAFgB,SAAI,qCAA6B;YAGhD,gBAAgB;QACjB,CAAC;KACD;IAPD,kBAOC;IAED,MAAa,GAAG;QAMf,YAAY,SAAkB;YAJd,SAAI,0CAAkC;YAKrD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5B,CAAC;KACD;IATD,kBASC;IAED,MAAa,GAAG;QAAhB;YAEiB,SAAI,0DAAkD;QACvE,CAAC;KAAA;IAHD,kBAGC;IAED,MAAa,GAAG;QAIf;YAFgB,SAAI,gDAAwC;YAG3D,gBAAgB;QACjB,CAAC;KACD;IAPD,kBAOC;IAED,MAAa,GAAG;QAIf;QACC;;WAEG;QACa,cAAsB;QACtC;;WAEG;QACa,KAAa;YAJb,mBAAc,GAAd,cAAc,CAAQ;YAItB,UAAK,GAAL,KAAK,CAAQ;YAVd,SAAI,0CAAkC;QAWlD,CAAC;KACL;IAdD,kBAcC;IAED,MAAa,GAAG;QAaf,YAAY,cAAsB,EAAE,YAAoB;YAXxC,SAAI,2CAAkC;YAYrD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAClC,CAAC;KACD;IAjBD,kBAiBC;IAED,MAAa,GAAG;QAaf,YAAY,cAAsB,EAAE,YAAoB;YAXxC,SAAI,4CAAmC;YAYtD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAClC,CAAC;KACD;IAjBD,kBAiBC;IAED,IAAkB,kBAQjB;IARD,WAAkB,kBAAkB;QACnC,+DAAU,CAAA;QACV,+DAAU,CAAA;QACV,iGAA2B,CAAA;QAC3B,yDAAO,CAAA;QACP,+DAAU,CAAA;QACV,iEAAW,CAAA;QACX,mGAA4B,CAAA;IAC7B,CAAC,EARiB,kBAAkB,kCAAlB,kBAAkB,QAQnC;IAED,MAAa,GAAG;QAKf;QACC;;WAEG;QACa,MAAiC;QACjD;;WAEG;QACa,aAAsB;QACtC;;WAEG;QACa,KAAmB;QACnC;;WAEG;QACa,UAA8B;QAC9C;;WAEG;QACa,YAAgC;QAChD;;;WAGG;QACa,gBAAyB;QACzC;;WAEG;QACa,UAAsB;YAzBtB,WAAM,GAAN,MAAM,CAA2B;YAIjC,kBAAa,GAAb,aAAa,CAAS;YAItB,UAAK,GAAL,KAAK,CAAc;YAInB,eAAU,GAAV,UAAU,CAAoB;YAI9B,iBAAY,GAAZ,YAAY,CAAoB;YAKhC,qBAAgB,GAAhB,gBAAgB,CAAS;YAIzB,eAAU,GAAV,UAAU,CAAY;YAhCvB,SAAI,iDAAwC;QAiCxD,CAAC;KACL;IApCD,kBAoCC;IAED,MAAa,GAAG;QAcf,YAAY,MAAmB;YAZf,SAAI,4CAAmC;YAatD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;YACtC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACpC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;YACxC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YAElC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;YACpD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;YAClD,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC;YACtD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QACjD,CAAC;KACD;IAzBD,kBAyBC;IAED,MAAa,GAAG;QAIf,YACiB,KAAkB;YAAlB,UAAK,GAAL,KAAK,CAAa;YAHnB,SAAI,2CAAkC;QAIlD,CAAC;KACL;IAPD,kBAOC;IAED,MAAa,GAAG;QAef,YAAY,MAA0D;YAbtD,SAAI,4CAAmC;YActD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACtB,CAAC;KACD;IAlBD,kBAkBC;IAED,MAAa,GAAG;QAIf;YAFgB,SAAI,kDAAyC;YAG5D,gBAAgB;QACjB,CAAC;KACD;IAPD,kBAOC;IAED,MAAa,GAAG;QAIf;YAFgB,SAAI,2CAAkC;YAGrD,gBAAgB;QACjB,CAAC;KACD;IAPD,kBAOC","file":"viewEvents.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ScrollEvent } from 'vs/base/common/scrollable';\nimport { ConfigurationChangedEvent, EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { CursorChangeReason } from 'vs/editor/common/cursorEvents';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { IModelDecorationsChangedEvent } from 'vs/editor/common/textModelEvents';\nimport { IColorTheme } from 'vs/platform/theme/common/themeService';\n\nexport const enum ViewEventType {\n\tViewCompositionStart,\n\tViewCompositionEnd,\n\tViewConfigurationChanged,\n\tViewCursorStateChanged,\n\tViewDecorationsChanged,\n\tViewFlushed,\n\tViewFocusChanged,\n\tViewLanguageConfigurationChanged,\n\tViewLineMappingChanged,\n\tViewLinesChanged,\n\tViewLinesDeleted,\n\tViewLinesInserted,\n\tViewRevealRangeRequest,\n\tViewScrollChanged,\n\tViewThemeChanged,\n\tViewTokensChanged,\n\tViewTokensColorsChanged,\n\tViewZonesChanged,\n}\n\nexport class ViewCompositionStartEvent {\n\tpublic readonly type = ViewEventType.ViewCompositionStart;\n\tconstructor() { }\n}\n\nexport class ViewCompositionEndEvent {\n\tpublic readonly type = ViewEventType.ViewCompositionEnd;\n\tconstructor() { }\n}\n\nexport class ViewConfigurationChangedEvent {\n\n\tpublic readonly type = ViewEventType.ViewConfigurationChanged;\n\n\tpublic readonly _source: ConfigurationChangedEvent;\n\n\tconstructor(source: ConfigurationChangedEvent) {\n\t\tthis._source = source;\n\t}\n\n\tpublic hasChanged(id: EditorOption): boolean {\n\t\treturn this._source.hasChanged(id);\n\t}\n}\n\nexport class ViewCursorStateChangedEvent {\n\n\tpublic readonly type = ViewEventType.ViewCursorStateChanged;\n\n\tconstructor(\n\t\tpublic readonly selections: Selection[],\n\t\tpublic readonly modelSelections: Selection[],\n\t\tpublic readonly reason: CursorChangeReason\n\t) { }\n}\n\nexport class ViewDecorationsChangedEvent {\n\n\tpublic readonly type = ViewEventType.ViewDecorationsChanged;\n\n\treadonly affectsMinimap: boolean;\n\treadonly affectsOverviewRuler: boolean;\n\treadonly affectsGlyphMargin: boolean;\n\n\tconstructor(source: IModelDecorationsChangedEvent | null) {\n\t\tif (source) {\n\t\t\tthis.affectsMinimap = source.affectsMinimap;\n\t\t\tthis.affectsOverviewRuler = source.affectsOverviewRuler;\n\t\t\tthis.affectsGlyphMargin = source.affectsGlyphMargin;\n\t\t} else {\n\t\t\tthis.affectsMinimap = true;\n\t\t\tthis.affectsOverviewRuler = true;\n\t\t\tthis.affectsGlyphMargin = true;\n\t\t}\n\t}\n}\n\nexport class ViewFlushedEvent {\n\n\tpublic readonly type = ViewEventType.ViewFlushed;\n\n\tconstructor() {\n\t\t// Nothing to do\n\t}\n}\n\nexport class ViewFocusChangedEvent {\n\n\tpublic readonly type = ViewEventType.ViewFocusChanged;\n\n\tpublic readonly isFocused: boolean;\n\n\tconstructor(isFocused: boolean) {\n\t\tthis.isFocused = isFocused;\n\t}\n}\n\nexport class ViewLanguageConfigurationEvent {\n\n\tpublic readonly type = ViewEventType.ViewLanguageConfigurationChanged;\n}\n\nexport class ViewLineMappingChangedEvent {\n\n\tpublic readonly type = ViewEventType.ViewLineMappingChanged;\n\n\tconstructor() {\n\t\t// Nothing to do\n\t}\n}\n\nexport class ViewLinesChangedEvent {\n\n\tpublic readonly type = ViewEventType.ViewLinesChanged;\n\n\tconstructor(\n\t\t/**\n\t\t * The first line that has changed.\n\t\t */\n\t\tpublic readonly fromLineNumber: number,\n\t\t/**\n\t\t * The number of lines that have changed.\n\t\t */\n\t\tpublic readonly count: number,\n\t) { }\n}\n\nexport class ViewLinesDeletedEvent {\n\n\tpublic readonly type = ViewEventType.ViewLinesDeleted;\n\n\t/**\n\t * At what line the deletion began (inclusive).\n\t */\n\tpublic readonly fromLineNumber: number;\n\t/**\n\t * At what line the deletion stopped (inclusive).\n\t */\n\tpublic readonly toLineNumber: number;\n\n\tconstructor(fromLineNumber: number, toLineNumber: number) {\n\t\tthis.fromLineNumber = fromLineNumber;\n\t\tthis.toLineNumber = toLineNumber;\n\t}\n}\n\nexport class ViewLinesInsertedEvent {\n\n\tpublic readonly type = ViewEventType.ViewLinesInserted;\n\n\t/**\n\t * Before what line did the insertion begin\n\t */\n\tpublic readonly fromLineNumber: number;\n\t/**\n\t * `toLineNumber` - `fromLineNumber` + 1 denotes the number of lines that were inserted\n\t */\n\tpublic readonly toLineNumber: number;\n\n\tconstructor(fromLineNumber: number, toLineNumber: number) {\n\t\tthis.fromLineNumber = fromLineNumber;\n\t\tthis.toLineNumber = toLineNumber;\n\t}\n}\n\nexport const enum VerticalRevealType {\n\tSimple = 0,\n\tCenter = 1,\n\tCenterIfOutsideViewport = 2,\n\tTop = 3,\n\tBottom = 4,\n\tNearTop = 5,\n\tNearTopIfOutsideViewport = 6,\n}\n\nexport class ViewRevealRangeRequestEvent {\n\n\tpublic readonly type = ViewEventType.ViewRevealRangeRequest;\n\n\n\tconstructor(\n\t\t/**\n\t\t * Source of the call that caused the event.\n\t\t */\n\t\tpublic readonly source: string | null | undefined,\n\t\t/**\n\t\t * Reduce the revealing to a minimum (e.g. avoid scrolling if the bounding box is visible and near the viewport edge).\n\t\t */\n\t\tpublic readonly minimalReveal: boolean,\n\t\t/**\n\t\t * Range to be reavealed.\n\t\t */\n\t\tpublic readonly range: Range | null,\n\t\t/**\n\t\t * Selections to be revealed.\n\t\t */\n\t\tpublic readonly selections: Selection[] | null,\n\t\t/**\n\t\t * The vertical reveal strategy.\n\t\t */\n\t\tpublic readonly verticalType: VerticalRevealType,\n\t\t/**\n\t\t * If true: there should be a horizontal & vertical revealing.\n\t\t * If false: there should be just a vertical revealing.\n\t\t */\n\t\tpublic readonly revealHorizontal: boolean,\n\t\t/**\n\t\t * The scroll type.\n\t\t */\n\t\tpublic readonly scrollType: ScrollType\n\t) { }\n}\n\nexport class ViewScrollChangedEvent {\n\n\tpublic readonly type = ViewEventType.ViewScrollChanged;\n\n\tpublic readonly scrollWidth: number;\n\tpublic readonly scrollLeft: number;\n\tpublic readonly scrollHeight: number;\n\tpublic readonly scrollTop: number;\n\n\tpublic readonly scrollWidthChanged: boolean;\n\tpublic readonly scrollLeftChanged: boolean;\n\tpublic readonly scrollHeightChanged: boolean;\n\tpublic readonly scrollTopChanged: boolean;\n\n\tconstructor(source: ScrollEvent) {\n\t\tthis.scrollWidth = source.scrollWidth;\n\t\tthis.scrollLeft = source.scrollLeft;\n\t\tthis.scrollHeight = source.scrollHeight;\n\t\tthis.scrollTop = source.scrollTop;\n\n\t\tthis.scrollWidthChanged = source.scrollWidthChanged;\n\t\tthis.scrollLeftChanged = source.scrollLeftChanged;\n\t\tthis.scrollHeightChanged = source.scrollHeightChanged;\n\t\tthis.scrollTopChanged = source.scrollTopChanged;\n\t}\n}\n\nexport class ViewThemeChangedEvent {\n\n\tpublic readonly type = ViewEventType.ViewThemeChanged;\n\n\tconstructor(\n\t\tpublic readonly theme: IColorTheme\n\t) { }\n}\n\nexport class ViewTokensChangedEvent {\n\n\tpublic readonly type = ViewEventType.ViewTokensChanged;\n\n\tpublic readonly ranges: {\n\t\t/**\n\t\t * Start line number of range\n\t\t */\n\t\treadonly fromLineNumber: number;\n\t\t/**\n\t\t * End line number of range\n\t\t */\n\t\treadonly toLineNumber: number;\n\t}[];\n\n\tconstructor(ranges: { fromLineNumber: number; toLineNumber: number }[]) {\n\t\tthis.ranges = ranges;\n\t}\n}\n\nexport class ViewTokensColorsChangedEvent {\n\n\tpublic readonly type = ViewEventType.ViewTokensColorsChanged;\n\n\tconstructor() {\n\t\t// Nothing to do\n\t}\n}\n\nexport class ViewZonesChangedEvent {\n\n\tpublic readonly type = ViewEventType.ViewZonesChanged;\n\n\tconstructor() {\n\t\t// Nothing to do\n\t}\n}\n\nexport type ViewEvent = (\n\tViewCompositionStartEvent\n\t| ViewCompositionEndEvent\n\t| ViewConfigurationChangedEvent\n\t| ViewCursorStateChangedEvent\n\t| ViewDecorationsChangedEvent\n\t| ViewFlushedEvent\n\t| ViewFocusChangedEvent\n\t| ViewLanguageConfigurationEvent\n\t| ViewLineMappingChangedEvent\n\t| ViewLinesChangedEvent\n\t| ViewLinesDeletedEvent\n\t| ViewLinesInsertedEvent\n\t| ViewRevealRangeRequestEvent\n\t| ViewScrollChangedEvent\n\t| ViewThemeChangedEvent\n\t| ViewTokensChangedEvent\n\t| ViewTokensColorsChangedEvent\n\t| ViewZonesChangedEvent\n);\n"]}