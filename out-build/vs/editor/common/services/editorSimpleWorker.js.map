{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/services/editorSimpleWorker.ts"],"names":[],"mappings":"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","file":"editorSimpleWorker.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { stringDiff } from 'vs/base/common/diff/diff';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { EndOfLineSequence, ITextModel } from 'vs/editor/common/model';\nimport { IMirrorTextModel, IModelChangedEvent, MirrorTextModel as BaseMirrorModel } from 'vs/editor/common/model/mirrorTextModel';\nimport { ensureValidWordDefinition, getWordAtText, IWordAtPosition } from 'vs/editor/common/core/wordHelper';\nimport { IColorInformation, IInplaceReplaceSupportResult, ILink, TextEdit } from 'vs/editor/common/languages';\nimport { ILinkComputerTarget, computeLinks } from 'vs/editor/common/languages/linkComputer';\nimport { BasicInplaceReplace } from 'vs/editor/common/languages/supports/inplaceReplaceSupport';\nimport { DiffAlgorithmName, IDiffComputationResult, ILineChange, IUnicodeHighlightsResult } from 'vs/editor/common/services/editorWorker';\nimport { createMonacoBaseAPI } from 'vs/editor/common/services/editorBaseApi';\nimport { IEditorWorkerHost } from 'vs/editor/common/services/editorWorkerHost';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { UnicodeTextModelHighlighter, UnicodeHighlighterOptions } from 'vs/editor/common/services/unicodeTextModelHighlighter';\nimport { DiffComputer, IChange } from 'vs/editor/common/diff/legacyLinesDiffComputer';\nimport { ILinesDiffComputer, ILinesDiffComputerOptions } from 'vs/editor/common/diff/linesDiffComputer';\nimport { DetailedLineRangeMapping } from '../diff/rangeMapping';\nimport { linesDiffComputers } from 'vs/editor/common/diff/linesDiffComputers';\nimport { createProxyObject, getAllMethodNames } from 'vs/base/common/objects';\nimport { IDocumentDiffProviderOptions } from 'vs/editor/common/diff/documentDiffProvider';\nimport { BugIndicatingError } from 'vs/base/common/errors';\nimport { IDocumentColorComputerTarget, computeDefaultDocumentColors } from 'vs/editor/common/languages/defaultDocumentColorsComputer';\n\nexport interface IMirrorModel extends IMirrorTextModel {\n\treadonly uri: URI;\n\treadonly version: number;\n\tgetValue(): string;\n}\n\nexport interface IWorkerContext<H = undefined> {\n\t/**\n\t * A proxy to the main thread host object.\n\t */\n\thost: H;\n\t/**\n\t * Get all available mirror models in this worker.\n\t */\n\tgetMirrorModels(): IMirrorModel[];\n}\n\n/**\n * @internal\n */\nexport interface IRawModelData {\n\turl: string;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n}\n\n/**\n * @internal\n */\nexport interface ICommonModel extends ILinkComputerTarget, IDocumentColorComputerTarget, IMirrorModel {\n\turi: URI;\n\tversion: number;\n\teol: string;\n\tgetValue(): string;\n\n\tgetLinesContent(): string[];\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[];\n\twords(wordDefinition: RegExp): Iterable<string>;\n\tgetWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition;\n\tgetValueInRange(range: IRange): string;\n\tgetWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null;\n\toffsetAt(position: IPosition): number;\n\tpositionAt(offset: number): IPosition;\n\tfindMatches(regex: RegExp): RegExpMatchArray[];\n}\n\n/**\n * Range of a word inside a model.\n * @internal\n */\ninterface IWordRange {\n\t/**\n\t * The index where the word starts.\n\t */\n\treadonly start: number;\n\t/**\n\t * The index where the word ends.\n\t */\n\treadonly end: number;\n}\n\n/**\n * @internal\n */\nclass MirrorModel extends BaseMirrorModel implements ICommonModel {\n\n\tpublic get uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tpublic get eol(): string {\n\t\treturn this._eol;\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.getText();\n\t}\n\n\tpublic findMatches(regex: RegExp): RegExpMatchArray[] {\n\t\tconst matches = [];\n\t\tfor (let i = 0; i < this._lines.length; i++) {\n\t\t\tconst line = this._lines[i];\n\t\t\tconst offsetToAdd = this.offsetAt(new Position(i + 1, 1));\n\t\t\tconst iteratorOverMatches = line.matchAll(regex);\n\t\t\tfor (const match of iteratorOverMatches) {\n\t\t\t\tif (match.index || match.index === 0) {\n\t\t\t\t\tmatch.index = match.index + offsetToAdd;\n\t\t\t\t}\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t}\n\t\treturn matches;\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null {\n\n\t\tconst wordAtText = getWordAtText(\n\t\t\tposition.column,\n\t\t\tensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition {\n\t\tconst wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n\t\tif (!wordAtPosition) {\n\t\t\treturn {\n\t\t\t\tword: '',\n\t\t\t\tstartColumn: position.column,\n\t\t\t\tendColumn: position.column\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tword: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n\t\t\tstartColumn: wordAtPosition.startColumn,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\n\tpublic words(wordDefinition: RegExp): Iterable<string> {\n\n\t\tconst lines = this._lines;\n\t\tconst wordenize = this._wordenize.bind(this);\n\n\t\tlet lineNumber = 0;\n\t\tlet lineText = '';\n\t\tlet wordRangesIdx = 0;\n\t\tlet wordRanges: IWordRange[] = [];\n\n\t\treturn {\n\t\t\t*[Symbol.iterator]() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (wordRangesIdx < wordRanges.length) {\n\t\t\t\t\t\tconst value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n\t\t\t\t\t\twordRangesIdx += 1;\n\t\t\t\t\t\tyield value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (lineNumber < lines.length) {\n\t\t\t\t\t\t\tlineText = lines[lineNumber];\n\t\t\t\t\t\t\twordRanges = wordenize(lineText, wordDefinition);\n\t\t\t\t\t\t\twordRangesIdx = 0;\n\t\t\t\t\t\t\tlineNumber += 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic getLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[] {\n\t\tconst content = this._lines[lineNumber - 1];\n\t\tconst ranges = this._wordenize(content, wordDefinition);\n\t\tconst words: IWordAtPosition[] = [];\n\t\tfor (const range of ranges) {\n\t\t\twords.push({\n\t\t\t\tword: content.substring(range.start, range.end),\n\t\t\t\tstartColumn: range.start + 1,\n\t\t\t\tendColumn: range.end + 1\n\t\t\t});\n\t\t}\n\t\treturn words;\n\t}\n\n\tprivate _wordenize(content: string, wordDefinition: RegExp): IWordRange[] {\n\t\tconst result: IWordRange[] = [];\n\t\tlet match: RegExpExecArray | null;\n\n\t\twordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range: IRange): string {\n\t\trange = this._validateRange(range);\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tconst lineEnding = this._eol;\n\t\tconst startLineIndex = range.startLineNumber - 1;\n\t\tconst endLineIndex = range.endLineNumber - 1;\n\t\tconst resultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tpublic offsetAt(position: IPosition): number {\n\t\tposition = this._validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts!.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n\t}\n\n\tpublic positionAt(offset: number): IPosition {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tconst out = this._lineStarts!.getIndexOf(offset);\n\t\tconst lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn {\n\t\t\tlineNumber: 1 + out.index,\n\t\t\tcolumn: 1 + Math.min(out.remainder, lineLength)\n\t\t};\n\t}\n\n\tprivate _validateRange(range: IRange): IRange {\n\n\t\tconst start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\t\tconst end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n\n\t\tif (start.lineNumber !== range.startLineNumber\n\t\t\t|| start.column !== range.startColumn\n\t\t\t|| end.lineNumber !== range.endLineNumber\n\t\t\t|| end.column !== range.endColumn) {\n\n\t\t\treturn {\n\t\t\t\tstartLineNumber: start.lineNumber,\n\t\t\t\tstartColumn: start.column,\n\t\t\t\tendLineNumber: end.lineNumber,\n\t\t\t\tendColumn: end.column\n\t\t\t};\n\t\t}\n\n\t\treturn range;\n\t}\n\n\tprivate _validatePosition(position: IPosition): IPosition {\n\t\tif (!Position.isIPosition(position)) {\n\t\t\tthrow new Error('bad position');\n\t\t}\n\t\tlet { lineNumber, column } = position;\n\t\tlet hasChanged = false;\n\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t\tcolumn = 1;\n\t\t\thasChanged = true;\n\n\t\t} else if (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t\tcolumn = this._lines[lineNumber - 1].length + 1;\n\t\t\thasChanged = true;\n\n\t\t} else {\n\t\t\tconst maxCharacter = this._lines[lineNumber - 1].length + 1;\n\t\t\tif (column < 1) {\n\t\t\t\tcolumn = 1;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\telse if (column > maxCharacter) {\n\t\t\t\tcolumn = maxCharacter;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t} else {\n\t\t\treturn { lineNumber, column };\n\t\t}\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IForeignModuleFactory {\n\t(ctx: IWorkerContext, createData: any): any;\n}\n\ndeclare const require: any;\n\n/**\n * @internal\n */\nexport class EditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerBrand: any;\n\n\tprotected readonly _host: IEditorWorkerHost;\n\tprivate _models: { [uri: string]: MirrorModel };\n\tprivate readonly _foreignModuleFactory: IForeignModuleFactory | null;\n\tprivate _foreignModule: any;\n\n\tconstructor(host: IEditorWorkerHost, foreignModuleFactory: IForeignModuleFactory | null) {\n\t\tthis._host = host;\n\t\tthis._models = Object.create(null);\n\t\tthis._foreignModuleFactory = foreignModuleFactory;\n\t\tthis._foreignModule = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._models = Object.create(null);\n\t}\n\n\tprotected _getModel(uri: string): ICommonModel {\n\t\treturn this._models[uri];\n\t}\n\n\tprivate _getModels(): ICommonModel[] {\n\t\tconst all: MirrorModel[] = [];\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\n\t\treturn all;\n\t}\n\n\tpublic acceptNewModel(data: IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, e: IModelChangedEvent): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._models[strURL];\n\t\tmodel.onEvents(e);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n\n\tpublic async computeUnicodeHighlights(url: string, options: UnicodeHighlighterOptions, range?: IRange): Promise<IUnicodeHighlightsResult> {\n\t\tconst model = this._getModel(url);\n\t\tif (!model) {\n\t\t\treturn { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n\t\t}\n\t\treturn UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n\t}\n\n\t// ---- BEGIN diff --------------------------------------------------------------------------\n\n\tpublic async computeDiff(originalUrl: string, modifiedUrl: string, options: IDocumentDiffProviderOptions, algorithm: DiffAlgorithmName): Promise<IDiffComputationResult | null> {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn EditorSimpleWorker.computeDiff(original, modified, options, algorithm);\n\t}\n\n\tprivate static computeDiff(originalTextModel: ICommonModel | ITextModel, modifiedTextModel: ICommonModel | ITextModel, options: IDocumentDiffProviderOptions, algorithm: DiffAlgorithmName): IDiffComputationResult {\n\t\tconst diffAlgorithm: ILinesDiffComputer = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n\n\t\tconst originalLines = originalTextModel.getLinesContent();\n\t\tconst modifiedLines = modifiedTextModel.getLinesContent();\n\n\t\tconst result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n\n\t\tconst identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n\n\t\tfunction getLineChanges(changes: readonly DetailedLineRangeMapping[]): ILineChange[] {\n\t\t\treturn changes.map(m => ([m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, m.innerChanges?.map(m => [\n\t\t\t\tm.originalRange.startLineNumber,\n\t\t\t\tm.originalRange.startColumn,\n\t\t\t\tm.originalRange.endLineNumber,\n\t\t\t\tm.originalRange.endColumn,\n\t\t\t\tm.modifiedRange.startLineNumber,\n\t\t\t\tm.modifiedRange.startColumn,\n\t\t\t\tm.modifiedRange.endLineNumber,\n\t\t\t\tm.modifiedRange.endColumn,\n\t\t\t])]));\n\t\t}\n\n\t\treturn {\n\t\t\tidentical,\n\t\t\tquitEarly: result.hitTimeout,\n\t\t\tchanges: getLineChanges(result.changes),\n\t\t\tmoves: result.moves.map(m => ([\n\t\t\t\tm.lineRangeMapping.original.startLineNumber,\n\t\t\t\tm.lineRangeMapping.original.endLineNumberExclusive,\n\t\t\t\tm.lineRangeMapping.modified.startLineNumber,\n\t\t\t\tm.lineRangeMapping.modified.endLineNumberExclusive,\n\t\t\t\tgetLineChanges(m.changes)\n\t\t\t])),\n\t\t};\n\t}\n\n\tprivate static _modelsAreIdentical(original: ICommonModel | ITextModel, modified: ICommonModel | ITextModel): boolean {\n\t\tconst originalLineCount = original.getLineCount();\n\t\tconst modifiedLineCount = modified.getLineCount();\n\t\tif (originalLineCount !== modifiedLineCount) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let line = 1; line <= originalLineCount; line++) {\n\t\t\tconst originalLine = original.getLineContent(line);\n\t\t\tconst modifiedLine = modified.getLineContent(line);\n\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic async computeDirtyDiff(originalUrl: string, modifiedUrl: string, ignoreTrimWhitespace: boolean): Promise<IChange[] | null> {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst originalLines = original.getLinesContent();\n\t\tconst modifiedLines = modified.getLinesContent();\n\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldComputeCharChanges: false,\n\t\t\tshouldPostProcessCharChanges: false,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldMakePrettyDiff: true,\n\t\t\tmaxComputationTime: 1000\n\t\t});\n\t\treturn diffComputer.computeDiff().changes;\n\t}\n\n\t// ---- END diff --------------------------------------------------------------------------\n\n\n\t// ---- BEGIN minimal edits ---------------------------------------------------------------\n\n\tprivate static readonly _diffLimit = 100000;\n\n\tpublic async computeMoreMinimalEdits(modelUrl: string, edits: TextEdit[], pretty: boolean): Promise<TextEdit[]> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextEdit[] = [];\n\t\tlet lastEol: EndOfLineSequence | undefined = undefined;\n\n\t\tedits = edits.slice(0).sort((a, b) => {\n\t\t\tif (a.range && b.range) {\n\t\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t\t}\n\t\t\t// eol only changes should go to the end\n\t\t\tconst aRng = a.range ? 0 : 1;\n\t\t\tconst bRng = b.range ? 0 : 1;\n\t\t\treturn aRng - bRng;\n\t\t});\n\n\t\t// merge adjacent edits\n\t\tlet writeIndex = 0;\n\t\tfor (let readIndex = 1; readIndex < edits.length; readIndex++) {\n\t\t\tif (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n\t\t\t\tedits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n\t\t\t\tedits[writeIndex].text += edits[readIndex].text;\n\t\t\t} else {\n\t\t\t\twriteIndex++;\n\t\t\t\tedits[writeIndex] = edits[readIndex];\n\t\t\t}\n\t\t}\n\t\tedits.length = writeIndex + 1;\n\n\t\tfor (let { range, text, eol } of edits) {\n\n\t\t\tif (typeof eol === 'number') {\n\t\t\t\tlastEol = eol;\n\t\t\t}\n\n\t\t\tif (Range.isEmpty(range) && !text) {\n\t\t\t\t// empty change\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst original = model.getValueInRange(range);\n\t\t\ttext = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n\t\t\tif (original === text) {\n\t\t\t\t// noop\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// make sure diff won't take too long\n\t\t\tif (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n\t\t\t\tresult.push({ range, text });\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// compute diff between original and edit.text\n\t\t\tconst changes = stringDiff(original, text, pretty);\n\t\t\tconst editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n\n\t\t\tfor (const change of changes) {\n\t\t\t\tconst start = model.positionAt(editOffset + change.originalStart);\n\t\t\t\tconst end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n\t\t\t\tconst newEdit: TextEdit = {\n\t\t\t\t\ttext: text.substr(change.modifiedStart, change.modifiedLength),\n\t\t\t\t\trange: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n\t\t\t\t};\n\n\t\t\t\tif (model.getValueInRange(newEdit.range) !== newEdit.text) {\n\t\t\t\t\tresult.push(newEdit);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lastEol === 'number') {\n\t\t\tresult.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic computeHumanReadableDiff(modelUrl: string, edits: TextEdit[], options: ILinesDiffComputerOptions): TextEdit[] {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextEdit[] = [];\n\t\tlet lastEol: EndOfLineSequence | undefined = undefined;\n\n\t\tedits = edits.slice(0).sort((a, b) => {\n\t\t\tif (a.range && b.range) {\n\t\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t\t}\n\t\t\t// eol only changes should go to the end\n\t\t\tconst aRng = a.range ? 0 : 1;\n\t\t\tconst bRng = b.range ? 0 : 1;\n\t\t\treturn aRng - bRng;\n\t\t});\n\n\t\tfor (let { range, text, eol } of edits) {\n\n\t\t\tif (typeof eol === 'number') {\n\t\t\t\tlastEol = eol;\n\t\t\t}\n\n\t\t\tif (Range.isEmpty(range) && !text) {\n\t\t\t\t// empty change\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst original = model.getValueInRange(range);\n\t\t\ttext = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n\t\t\tif (original === text) {\n\t\t\t\t// noop\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// make sure diff won't take too long\n\t\t\tif (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n\t\t\t\tresult.push({ range, text });\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// compute diff between original and edit.text\n\n\t\t\tconst originalLines = original.split(/\\r\\n|\\n|\\r/);\n\t\t\tconst modifiedLines = text.split(/\\r\\n|\\n|\\r/);\n\n\t\t\tconst diff = linesDiffComputers.getDefault().computeDiff(originalLines, modifiedLines, options);\n\n\t\t\tconst start = Range.lift(range).getStartPosition();\n\n\t\t\tfunction addPositions(pos1: Position, pos2: Position): Position {\n\t\t\t\treturn new Position(pos1.lineNumber + pos2.lineNumber - 1, pos2.lineNumber === 1 ? pos1.column + pos2.column - 1 : pos2.column);\n\t\t\t}\n\n\t\t\tfunction getText(lines: string[], range: Range): string[] {\n\t\t\t\tconst result: string[] = [];\n\t\t\t\tfor (let i = range.startLineNumber; i <= range.endLineNumber; i++) {\n\t\t\t\t\tconst line = lines[i - 1];\n\t\t\t\t\tif (i === range.startLineNumber && i === range.endLineNumber) {\n\t\t\t\t\t\tresult.push(line.substring(range.startColumn - 1, range.endColumn - 1));\n\t\t\t\t\t} else if (i === range.startLineNumber) {\n\t\t\t\t\t\tresult.push(line.substring(range.startColumn - 1));\n\t\t\t\t\t} else if (i === range.endLineNumber) {\n\t\t\t\t\t\tresult.push(line.substring(0, range.endColumn - 1));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push(line);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tfor (const c of diff.changes) {\n\t\t\t\tif (c.innerChanges) {\n\t\t\t\t\tfor (const x of c.innerChanges) {\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trange: Range.fromPositions(\n\t\t\t\t\t\t\t\taddPositions(start, x.originalRange.getStartPosition()),\n\t\t\t\t\t\t\t\taddPositions(start, x.originalRange.getEndPosition())\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttext: getText(modifiedLines, x.modifiedRange).join(model.eol)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new BugIndicatingError('The experimental diff algorithm always produces inner changes');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lastEol === 'number') {\n\t\t\tresult.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// ---- END minimal edits ---------------------------------------------------------------\n\n\tpublic async computeLinks(modelUrl: string): Promise<ILink[] | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn computeLinks(model);\n\t}\n\n\t// --- BEGIN default document colors -----------------------------------------------------------\n\n\tpublic async computeDefaultDocumentColors(modelUrl: string): Promise<IColorInformation[] | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\t\treturn computeDefaultDocumentColors(model);\n\t}\n\n\t// ---- BEGIN suggest --------------------------------------------------------------------------\n\n\tprivate static readonly _suggestionsLimit = 10000;\n\n\tpublic async textualSuggest(modelUrls: string[], leadingWord: string | undefined, wordDef: string, wordDefFlags: string): Promise<{ words: string[]; duration: number } | null> {\n\n\t\tconst sw = new StopWatch();\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst seen = new Set<string>();\n\n\t\touter: for (const url of modelUrls) {\n\t\t\tconst model = this._getModel(url);\n\t\t\tif (!model) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const word of model.words(wordDefRegExp)) {\n\t\t\t\tif (word === leadingWord || !isNaN(Number(word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tseen.add(word);\n\t\t\t\tif (seen.size > EditorSimpleWorker._suggestionsLimit) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { words: Array.from(seen), duration: sw.elapsed() };\n\t}\n\n\n\t// ---- END suggest --------------------------------------------------------------------------\n\n\t//#region -- word ranges --\n\n\tpublic async computeWordRanges(modelUrl: string, range: IRange, wordDef: string, wordDefFlags: string): Promise<{ [word: string]: IRange[] }> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Object.create(null);\n\t\t}\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst result: { [word: string]: IRange[] } = Object.create(null);\n\t\tfor (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n\t\t\tconst words = model.getLineWords(line, wordDefRegExp);\n\t\t\tfor (const word of words) {\n\t\t\t\tif (!isNaN(Number(word.word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet array = result[word.word];\n\t\t\t\tif (!array) {\n\t\t\t\t\tarray = [];\n\t\t\t\t\tresult[word.word] = array;\n\t\t\t\t}\n\t\t\t\tarray.push({\n\t\t\t\t\tstartLineNumber: line,\n\t\t\t\t\tstartColumn: word.startColumn,\n\t\t\t\t\tendLineNumber: line,\n\t\t\t\t\tendColumn: word.endColumn\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t//#endregion\n\n\tpublic async navigateValueSet(modelUrl: string, range: IRange, up: boolean, wordDef: string, wordDefFlags: string): Promise<IInplaceReplaceSupportResult | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tif (range.startColumn === range.endColumn) {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\t\tstartColumn: range.startColumn,\n\t\t\t\tendLineNumber: range.endLineNumber,\n\t\t\t\tendColumn: range.endColumn + 1\n\t\t\t};\n\t\t}\n\n\t\tconst selectionText = model.getValueInRange(range);\n\n\t\tconst wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n\t\tif (!wordRange) {\n\t\t\treturn null;\n\t\t}\n\t\tconst word = model.getValueInRange(wordRange);\n\t\tconst result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n\t\treturn result;\n\t}\n\n\t// ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n\tpublic loadForeignModule(moduleId: string, createData: any, foreignHostMethods: string[]): Promise<string[]> {\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._host.fhr(method, args);\n\t\t};\n\n\t\tconst foreignHost = createProxyObject(foreignHostMethods, proxyMethodRequest);\n\n\t\tconst ctx: IWorkerContext<any> = {\n\t\t\thost: foreignHost,\n\t\t\tgetMirrorModels: (): IMirrorModel[] => {\n\t\t\t\treturn this._getModels();\n\t\t\t}\n\t\t};\n\n\t\tif (this._foreignModuleFactory) {\n\t\t\tthis._foreignModule = this._foreignModuleFactory(ctx, createData);\n\t\t\t// static foreing module\n\t\t\treturn Promise.resolve(getAllMethodNames(this._foreignModule));\n\t\t}\n\t\t// ESM-comment-begin\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n\t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n\n\t\t\t\tresolve(getAllMethodNames(this._foreignModule));\n\n\t\t\t}, reject);\n\t\t});\n\t\t// ESM-comment-end\n\n\t\t// ESM-uncomment-begin\n\t\t// return Promise.reject(new Error(`Unexpected usage`));\n\t\t// ESM-uncomment-end\n\t}\n\n\t// foreign method request\n\tpublic fmr(method: string, args: any[]): Promise<any> {\n\t\tif (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\t// ---- END foreign module support --------------------------------------------------------------------------\n}\n\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host: IEditorWorkerHost): IRequestHandler {\n\treturn new EditorSimpleWorker(host, null);\n}\n\n// This is only available in a Web Worker\ndeclare function importScripts(...urls: string[]): void;\n\nif (typeof importScripts === 'function') {\n\t// Running in a web worker\n\tglobalThis.monaco = createMonacoBaseAPI();\n}\n"]}