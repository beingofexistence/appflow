{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/services/languagesRegistry.ts"],"names":[],"mappings":"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","file":"languagesRegistry.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { compareIgnoreCase, regExpLeadsToEndlessLoop } from 'vs/base/common/strings';\nimport { clearPlatformLanguageAssociations, getLanguageIds, registerPlatformLanguageAssociation } from 'vs/editor/common/services/languagesAssociations';\nimport { URI } from 'vs/base/common/uri';\nimport { ILanguageIdCodec } from 'vs/editor/common/languages';\nimport { LanguageId } from 'vs/editor/common/encodedTokenAttributes';\nimport { ModesRegistry, PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { ILanguageExtensionPoint, ILanguageNameIdPair, ILanguageIcon } from 'vs/editor/common/languages/language';\nimport { Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst NULL_LANGUAGE_ID = 'vs.editor.nullLanguage';\n\ninterface IResolvedLanguage {\n\tidentifier: string;\n\tname: string | null;\n\tmimetypes: string[];\n\taliases: string[];\n\textensions: string[];\n\tfilenames: string[];\n\tconfigurationFiles: URI[];\n\ticons: ILanguageIcon[];\n}\n\nexport class LanguageIdCodec implements ILanguageIdCodec {\n\n\tprivate _nextLanguageId: number;\n\tprivate readonly _languageIdToLanguage: string[] = [];\n\tprivate readonly _languageToLanguageId = new Map<string, number>();\n\n\tconstructor() {\n\t\tthis._register(NULL_LANGUAGE_ID, LanguageId.Null);\n\t\tthis._register(PLAINTEXT_LANGUAGE_ID, LanguageId.PlainText);\n\t\tthis._nextLanguageId = 2;\n\t}\n\n\tprivate _register(language: string, languageId: LanguageId): void {\n\t\tthis._languageIdToLanguage[languageId] = language;\n\t\tthis._languageToLanguageId.set(language, languageId);\n\t}\n\n\tpublic register(language: string): void {\n\t\tif (this._languageToLanguageId.has(language)) {\n\t\t\treturn;\n\t\t}\n\t\tconst languageId = this._nextLanguageId++;\n\t\tthis._register(language, languageId);\n\t}\n\n\tpublic encodeLanguageId(languageId: string): LanguageId {\n\t\treturn this._languageToLanguageId.get(languageId) || LanguageId.Null;\n\t}\n\n\tpublic decodeLanguageId(languageId: LanguageId): string {\n\t\treturn this._languageIdToLanguage[languageId] || NULL_LANGUAGE_ID;\n\t}\n}\n\nexport class LanguagesRegistry extends Disposable {\n\n\tstatic instanceCount = 0;\n\n\tprivate readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _warnOnOverwrite: boolean;\n\tpublic readonly languageIdCodec: LanguageIdCodec;\n\tprivate _dynamicLanguages: ILanguageExtensionPoint[];\n\tprivate _languages: { [id: string]: IResolvedLanguage };\n\tprivate _mimeTypesMap: { [mimeType: string]: string };\n\tprivate _nameMap: { [name: string]: string };\n\tprivate _lowercaseNameMap: { [name: string]: string };\n\n\tconstructor(useModesRegistry = true, warnOnOverwrite = false) {\n\t\tsuper();\n\t\tLanguagesRegistry.instanceCount++;\n\n\t\tthis._warnOnOverwrite = warnOnOverwrite;\n\t\tthis.languageIdCodec = new LanguageIdCodec();\n\t\tthis._dynamicLanguages = [];\n\t\tthis._languages = {};\n\t\tthis._mimeTypesMap = {};\n\t\tthis._nameMap = {};\n\t\tthis._lowercaseNameMap = {};\n\n\t\tif (useModesRegistry) {\n\t\t\tthis._initializeFromRegistry();\n\t\t\tthis._register(ModesRegistry.onDidChangeLanguages((m) => {\n\t\t\t\tthis._initializeFromRegistry();\n\t\t\t}));\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\tLanguagesRegistry.instanceCount--;\n\t\tsuper.dispose();\n\t}\n\n\tpublic setDynamicLanguages(def: ILanguageExtensionPoint[]): void {\n\t\tthis._dynamicLanguages = def;\n\t\tthis._initializeFromRegistry();\n\t}\n\n\tprivate _initializeFromRegistry(): void {\n\t\tthis._languages = {};\n\t\tthis._mimeTypesMap = {};\n\t\tthis._nameMap = {};\n\t\tthis._lowercaseNameMap = {};\n\n\t\tclearPlatformLanguageAssociations();\n\t\tconst desc = (<ILanguageExtensionPoint[]>[]).concat(ModesRegistry.getLanguages()).concat(this._dynamicLanguages);\n\t\tthis._registerLanguages(desc);\n\t}\n\n\tregisterLanguage(desc: ILanguageExtensionPoint): IDisposable {\n\t\treturn ModesRegistry.registerLanguage(desc);\n\t}\n\n\t_registerLanguages(desc: ILanguageExtensionPoint[]): void {\n\n\t\tfor (const d of desc) {\n\t\t\tthis._registerLanguage(d);\n\t\t}\n\n\t\t// Rebuild fast path maps\n\t\tthis._mimeTypesMap = {};\n\t\tthis._nameMap = {};\n\t\tthis._lowercaseNameMap = {};\n\t\tObject.keys(this._languages).forEach((langId) => {\n\t\t\tconst language = this._languages[langId];\n\t\t\tif (language.name) {\n\t\t\t\tthis._nameMap[language.name] = language.identifier;\n\t\t\t}\n\t\t\tlanguage.aliases.forEach((alias) => {\n\t\t\t\tthis._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\n\t\t\t});\n\t\t\tlanguage.mimetypes.forEach((mimetype) => {\n\t\t\t\tthis._mimeTypesMap[mimetype] = language.identifier;\n\t\t\t});\n\t\t});\n\n\t\tRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerOverrideIdentifiers(this.getRegisteredLanguageIds());\n\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate _registerLanguage(lang: ILanguageExtensionPoint): void {\n\t\tconst langId = lang.id;\n\n\t\tlet resolvedLanguage: IResolvedLanguage;\n\t\tif (hasOwnProperty.call(this._languages, langId)) {\n\t\t\tresolvedLanguage = this._languages[langId];\n\t\t} else {\n\t\t\tthis.languageIdCodec.register(langId);\n\t\t\tresolvedLanguage = {\n\t\t\t\tidentifier: langId,\n\t\t\t\tname: null,\n\t\t\t\tmimetypes: [],\n\t\t\t\taliases: [],\n\t\t\t\textensions: [],\n\t\t\t\tfilenames: [],\n\t\t\t\tconfigurationFiles: [],\n\t\t\t\ticons: []\n\t\t\t};\n\t\t\tthis._languages[langId] = resolvedLanguage;\n\t\t}\n\n\t\tthis._mergeLanguage(resolvedLanguage, lang);\n\t}\n\n\tprivate _mergeLanguage(resolvedLanguage: IResolvedLanguage, lang: ILanguageExtensionPoint): void {\n\t\tconst langId = lang.id;\n\n\t\tlet primaryMime: string | null = null;\n\n\t\tif (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\n\t\t\tresolvedLanguage.mimetypes.push(...lang.mimetypes);\n\t\t\tprimaryMime = lang.mimetypes[0];\n\t\t}\n\n\t\tif (!primaryMime) {\n\t\t\tprimaryMime = `text/x-${langId}`;\n\t\t\tresolvedLanguage.mimetypes.push(primaryMime);\n\t\t}\n\n\t\tif (Array.isArray(lang.extensions)) {\n\t\t\tif (lang.configuration) {\n\t\t\t\t// insert first as this appears to be the 'primary' language definition\n\t\t\t\tresolvedLanguage.extensions = lang.extensions.concat(resolvedLanguage.extensions);\n\t\t\t} else {\n\t\t\t\tresolvedLanguage.extensions = resolvedLanguage.extensions.concat(lang.extensions);\n\t\t\t}\n\t\t\tfor (const extension of lang.extensions) {\n\t\t\t\tregisterPlatformLanguageAssociation({ id: langId, mime: primaryMime, extension: extension }, this._warnOnOverwrite);\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(lang.filenames)) {\n\t\t\tfor (const filename of lang.filenames) {\n\t\t\t\tregisterPlatformLanguageAssociation({ id: langId, mime: primaryMime, filename: filename }, this._warnOnOverwrite);\n\t\t\t\tresolvedLanguage.filenames.push(filename);\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(lang.filenamePatterns)) {\n\t\t\tfor (const filenamePattern of lang.filenamePatterns) {\n\t\t\t\tregisterPlatformLanguageAssociation({ id: langId, mime: primaryMime, filepattern: filenamePattern }, this._warnOnOverwrite);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n\t\t\tlet firstLineRegexStr = lang.firstLine;\n\t\t\tif (firstLineRegexStr.charAt(0) !== '^') {\n\t\t\t\tfirstLineRegexStr = '^' + firstLineRegexStr;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst firstLineRegex = new RegExp(firstLineRegexStr);\n\t\t\t\tif (!regExpLeadsToEndlessLoop(firstLineRegex)) {\n\t\t\t\t\tregisterPlatformLanguageAssociation({ id: langId, mime: primaryMime, firstline: firstLineRegex }, this._warnOnOverwrite);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// Most likely, the regex was bad\n\t\t\t\tconsole.warn(`[${lang.id}]: Invalid regular expression \\`${firstLineRegexStr}\\`: `, err);\n\t\t\t}\n\t\t}\n\n\t\tresolvedLanguage.aliases.push(langId);\n\n\t\tlet langAliases: Array<string | null> | null = null;\n\t\tif (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n\t\t\tif (lang.aliases.length === 0) {\n\t\t\t\t// signal that this language should not get a name\n\t\t\t\tlangAliases = [null];\n\t\t\t} else {\n\t\t\t\tlangAliases = lang.aliases;\n\t\t\t}\n\t\t}\n\n\t\tif (langAliases !== null) {\n\t\t\tfor (const langAlias of langAliases) {\n\t\t\t\tif (!langAlias || langAlias.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresolvedLanguage.aliases.push(langAlias);\n\t\t\t}\n\t\t}\n\n\t\tconst containsAliases = (langAliases !== null && langAliases.length > 0);\n\t\tif (containsAliases && langAliases![0] === null) {\n\t\t\t// signal that this language should not get a name\n\t\t} else {\n\t\t\tconst bestName = (containsAliases ? langAliases![0] : null) || langId;\n\t\t\tif (containsAliases || !resolvedLanguage.name) {\n\t\t\t\tresolvedLanguage.name = bestName;\n\t\t\t}\n\t\t}\n\n\t\tif (lang.configuration) {\n\t\t\tresolvedLanguage.configurationFiles.push(lang.configuration);\n\t\t}\n\n\t\tif (lang.icon) {\n\t\t\tresolvedLanguage.icons.push(lang.icon);\n\t\t}\n\t}\n\n\tpublic isRegisteredLanguageId(languageId: string | null | undefined): boolean {\n\t\tif (!languageId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn hasOwnProperty.call(this._languages, languageId);\n\t}\n\n\tpublic getRegisteredLanguageIds(): string[] {\n\t\treturn Object.keys(this._languages);\n\t}\n\n\tpublic getSortedRegisteredLanguageNames(): ILanguageNameIdPair[] {\n\t\tconst result: ILanguageNameIdPair[] = [];\n\t\tfor (const languageName in this._nameMap) {\n\t\t\tif (hasOwnProperty.call(this._nameMap, languageName)) {\n\t\t\t\tresult.push({\n\t\t\t\t\tlanguageName: languageName,\n\t\t\t\t\tlanguageId: this._nameMap[languageName]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tresult.sort((a, b) => compareIgnoreCase(a.languageName, b.languageName));\n\t\treturn result;\n\t}\n\n\tpublic getLanguageName(languageId: string): string | null {\n\t\tif (!hasOwnProperty.call(this._languages, languageId)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._languages[languageId].name;\n\t}\n\n\tpublic getMimeType(languageId: string): string | null {\n\t\tif (!hasOwnProperty.call(this._languages, languageId)) {\n\t\t\treturn null;\n\t\t}\n\t\tconst language = this._languages[languageId];\n\t\treturn (language.mimetypes[0] || null);\n\t}\n\n\tpublic getExtensions(languageId: string): ReadonlyArray<string> {\n\t\tif (!hasOwnProperty.call(this._languages, languageId)) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._languages[languageId].extensions;\n\t}\n\n\tpublic getFilenames(languageId: string): ReadonlyArray<string> {\n\t\tif (!hasOwnProperty.call(this._languages, languageId)) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._languages[languageId].filenames;\n\t}\n\n\tpublic getIcon(languageId: string): ILanguageIcon | null {\n\t\tif (!hasOwnProperty.call(this._languages, languageId)) {\n\t\t\treturn null;\n\t\t}\n\t\tconst language = this._languages[languageId];\n\t\treturn (language.icons[0] || null);\n\t}\n\n\tpublic getConfigurationFiles(languageId: string): ReadonlyArray<URI> {\n\t\tif (!hasOwnProperty.call(this._languages, languageId)) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._languages[languageId].configurationFiles || [];\n\t}\n\n\tpublic getLanguageIdByLanguageName(languageName: string): string | null {\n\t\tconst languageNameLower = languageName.toLowerCase();\n\t\tif (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._lowercaseNameMap[languageNameLower];\n\t}\n\n\tpublic getLanguageIdByMimeType(mimeType: string | null | undefined): string | null {\n\t\tif (!mimeType) {\n\t\t\treturn null;\n\t\t}\n\t\tif (hasOwnProperty.call(this._mimeTypesMap, mimeType)) {\n\t\t\treturn this._mimeTypesMap[mimeType];\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic guessLanguageIdByFilepathOrFirstLine(resource: URI | null, firstLine?: string): string[] {\n\t\tif (!resource && !firstLine) {\n\t\t\treturn [];\n\t\t}\n\t\treturn getLanguageIds(resource, firstLine);\n\t}\n}\n"]}