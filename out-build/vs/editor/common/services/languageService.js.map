{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/services/languageService.ts"],"names":[],"mappings":"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","file":"languageService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { LanguagesRegistry } from 'vs/editor/common/services/languagesRegistry';\nimport { ILanguageNameIdPair, ILanguageSelection, ILanguageService, ILanguageIcon, ILanguageExtensionPoint } from 'vs/editor/common/languages/language';\nimport { firstOrDefault } from 'vs/base/common/arrays';\nimport { ILanguageIdCodec, TokenizationRegistry } from 'vs/editor/common/languages';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\n\nexport class LanguageService extends Disposable implements ILanguageService {\n\tpublic _serviceBrand: undefined;\n\n\tstatic instanceCount = 0;\n\n\tprivate readonly _onDidRequestBasicLanguageFeatures = this._register(new Emitter<string>());\n\tpublic readonly onDidRequestBasicLanguageFeatures = this._onDidRequestBasicLanguageFeatures.event;\n\n\tprivate readonly _onDidRequestRichLanguageFeatures = this._register(new Emitter<string>());\n\tpublic readonly onDidRequestRichLanguageFeatures = this._onDidRequestRichLanguageFeatures.event;\n\n\tprotected readonly _onDidChange = this._register(new Emitter<void>({ leakWarningThreshold: 200 /* https://github.com/microsoft/vscode/issues/119968 */ }));\n\tpublic readonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _requestedBasicLanguages = new Set<string>();\n\tprivate readonly _requestedRichLanguages = new Set<string>();\n\n\tprotected readonly _registry: LanguagesRegistry;\n\tpublic readonly languageIdCodec: ILanguageIdCodec;\n\n\tconstructor(warnOnOverwrite = false) {\n\t\tsuper();\n\t\tLanguageService.instanceCount++;\n\t\tthis._registry = this._register(new LanguagesRegistry(true, warnOnOverwrite));\n\t\tthis.languageIdCodec = this._registry.languageIdCodec;\n\t\tthis._register(this._registry.onDidChange(() => this._onDidChange.fire()));\n\t}\n\n\tpublic override dispose(): void {\n\t\tLanguageService.instanceCount--;\n\t\tsuper.dispose();\n\t}\n\n\tpublic registerLanguage(def: ILanguageExtensionPoint): IDisposable {\n\t\treturn this._registry.registerLanguage(def);\n\t}\n\n\tpublic isRegisteredLanguageId(languageId: string | null | undefined): boolean {\n\t\treturn this._registry.isRegisteredLanguageId(languageId);\n\t}\n\n\tpublic getRegisteredLanguageIds(): string[] {\n\t\treturn this._registry.getRegisteredLanguageIds();\n\t}\n\n\tpublic getSortedRegisteredLanguageNames(): ILanguageNameIdPair[] {\n\t\treturn this._registry.getSortedRegisteredLanguageNames();\n\t}\n\n\tpublic getLanguageName(languageId: string): string | null {\n\t\treturn this._registry.getLanguageName(languageId);\n\t}\n\n\tpublic getMimeType(languageId: string): string | null {\n\t\treturn this._registry.getMimeType(languageId);\n\t}\n\n\tpublic getIcon(languageId: string): ILanguageIcon | null {\n\t\treturn this._registry.getIcon(languageId);\n\t}\n\n\tpublic getExtensions(languageId: string): ReadonlyArray<string> {\n\t\treturn this._registry.getExtensions(languageId);\n\t}\n\n\tpublic getFilenames(languageId: string): ReadonlyArray<string> {\n\t\treturn this._registry.getFilenames(languageId);\n\t}\n\n\tpublic getConfigurationFiles(languageId: string): ReadonlyArray<URI> {\n\t\treturn this._registry.getConfigurationFiles(languageId);\n\t}\n\n\tpublic getLanguageIdByLanguageName(languageName: string): string | null {\n\t\treturn this._registry.getLanguageIdByLanguageName(languageName);\n\t}\n\n\tpublic getLanguageIdByMimeType(mimeType: string | null | undefined): string | null {\n\t\treturn this._registry.getLanguageIdByMimeType(mimeType);\n\t}\n\n\tpublic guessLanguageIdByFilepathOrFirstLine(resource: URI | null, firstLine?: string): string | null {\n\t\tconst languageIds = this._registry.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n\t\treturn firstOrDefault(languageIds, null);\n\t}\n\n\tpublic createById(languageId: string | null | undefined): ILanguageSelection {\n\t\treturn new LanguageSelection(this.onDidChange, () => {\n\t\t\treturn this._createAndGetLanguageIdentifier(languageId);\n\t\t});\n\t}\n\n\tpublic createByMimeType(mimeType: string | null | undefined): ILanguageSelection {\n\t\treturn new LanguageSelection(this.onDidChange, () => {\n\t\t\tconst languageId = this.getLanguageIdByMimeType(mimeType);\n\t\t\treturn this._createAndGetLanguageIdentifier(languageId);\n\t\t});\n\t}\n\n\tpublic createByFilepathOrFirstLine(resource: URI | null, firstLine?: string): ILanguageSelection {\n\t\treturn new LanguageSelection(this.onDidChange, () => {\n\t\t\tconst languageId = this.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n\t\t\treturn this._createAndGetLanguageIdentifier(languageId);\n\t\t});\n\t}\n\n\tprivate _createAndGetLanguageIdentifier(languageId: string | null | undefined): string {\n\t\tif (!languageId || !this.isRegisteredLanguageId(languageId)) {\n\t\t\t// Fall back to plain text if language is unknown\n\t\t\tlanguageId = PLAINTEXT_LANGUAGE_ID;\n\t\t}\n\n\t\treturn languageId;\n\t}\n\n\tpublic requestBasicLanguageFeatures(languageId: string): void {\n\t\tif (!this._requestedBasicLanguages.has(languageId)) {\n\t\t\tthis._requestedBasicLanguages.add(languageId);\n\t\t\tthis._onDidRequestBasicLanguageFeatures.fire(languageId);\n\t\t}\n\t}\n\n\tpublic requestRichLanguageFeatures(languageId: string): void {\n\t\tif (!this._requestedRichLanguages.has(languageId)) {\n\t\t\tthis._requestedRichLanguages.add(languageId);\n\n\t\t\t// Ensure basic features are requested\n\t\t\tthis.requestBasicLanguageFeatures(languageId);\n\n\t\t\t// Ensure tokenizers are created\n\t\t\tTokenizationRegistry.getOrCreate(languageId);\n\n\t\t\tthis._onDidRequestRichLanguageFeatures.fire(languageId);\n\t\t}\n\t}\n}\n\nclass LanguageSelection implements ILanguageSelection {\n\n\tpublic languageId: string;\n\n\tprivate _listener: IDisposable | null = null;\n\tprivate _emitter: Emitter<string> | null = null;\n\n\tconstructor(\n\t\tprivate readonly _onDidChangeLanguages: Event<void>,\n\t\tprivate readonly _selector: () => string\n\t) {\n\t\tthis.languageId = this._selector();\n\t}\n\n\tprivate _dispose(): void {\n\t\tif (this._listener) {\n\t\t\tthis._listener.dispose();\n\t\t\tthis._listener = null;\n\t\t}\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n\n\tpublic get onDidChange(): Event<string> {\n\t\tif (!this._listener) {\n\t\t\tthis._listener = this._onDidChangeLanguages(() => this._evaluate());\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<string>({\n\t\t\t\tonDidRemoveLastListener: () => {\n\t\t\t\t\tthis._dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tprivate _evaluate(): void {\n\t\tconst languageId = this._selector();\n\t\tif (languageId === this.languageId) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis.languageId = languageId;\n\t\tthis._emitter?.fire(this.languageId);\n\t}\n}\n"]}