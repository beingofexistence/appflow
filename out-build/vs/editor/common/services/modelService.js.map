{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/services/modelService.ts"],"names":[],"mappings":"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","file":"modelService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { EditOperation, ISingleEditOperation } from 'vs/editor/common/core/editOperation';\nimport { Range } from 'vs/editor/common/core/range';\nimport { DefaultEndOfLine, EndOfLinePreference, EndOfLineSequence, ITextBuffer, ITextBufferFactory, ITextModel, ITextModelCreationOptions } from 'vs/editor/common/model';\nimport { TextModel, createTextBuffer } from 'vs/editor/common/model/textModel';\nimport { EDITOR_MODEL_DEFAULTS } from 'vs/editor/common/core/textModelDefaults';\nimport { IModelLanguageChangedEvent } from 'vs/editor/common/textModelEvents';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { ILanguageSelection, ILanguageService } from 'vs/editor/common/languages/language';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ITextResourcePropertiesService } from 'vs/editor/common/services/textResourceConfiguration';\nimport { IConfigurationChangeEvent, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IUndoRedoService, ResourceEditStackSnapshot } from 'vs/platform/undoRedo/common/undoRedo';\nimport { StringSHA1 } from 'vs/base/common/hash';\nimport { isEditStackElement } from 'vs/editor/common/model/editStack';\nimport { Schemas } from 'vs/base/common/network';\nimport { equals } from 'vs/base/common/objects';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\n\nfunction MODEL_ID(resource: URI): string {\n\treturn resource.toString();\n}\n\nfunction computeModelSha1(model: ITextModel): string {\n\t// compute the sha1\n\tconst shaComputer = new StringSHA1();\n\tconst snapshot = model.createSnapshot();\n\tlet text: string | null;\n\twhile ((text = snapshot.read())) {\n\t\tshaComputer.update(text);\n\t}\n\treturn shaComputer.digest();\n}\n\nclass ModelData implements IDisposable {\n\n\tprivate readonly _modelEventListeners = new DisposableStore();\n\n\tconstructor(\n\t\tpublic readonly model: TextModel,\n\t\tonWillDispose: (model: ITextModel) => void,\n\t\tonDidChangeLanguage: (model: ITextModel, e: IModelLanguageChangedEvent) => void\n\t) {\n\t\tthis.model = model;\n\t\tthis._modelEventListeners.add(model.onWillDispose(() => onWillDispose(model)));\n\t\tthis._modelEventListeners.add(model.onDidChangeLanguage((e) => onDidChangeLanguage(model, e)));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._modelEventListeners.dispose();\n\t}\n}\n\ninterface IRawEditorConfig {\n\ttabSize?: any;\n\tindentSize?: any;\n\tinsertSpaces?: any;\n\tdetectIndentation?: any;\n\ttrimAutoWhitespace?: any;\n\tcreationOptions?: any;\n\tlargeFileOptimizations?: any;\n\tbracketPairColorization?: any;\n}\n\ninterface IRawConfig {\n\teol?: any;\n\teditor?: IRawEditorConfig;\n}\n\nconst DEFAULT_EOL = (platform.isLinux || platform.isMacintosh) ? DefaultEndOfLine.LF : DefaultEndOfLine.CRLF;\n\nclass DisposedModelInfo {\n\tconstructor(\n\t\tpublic readonly uri: URI,\n\t\tpublic readonly initialUndoRedoSnapshot: ResourceEditStackSnapshot | null,\n\t\tpublic readonly time: number,\n\t\tpublic readonly sharesUndoRedoStack: boolean,\n\t\tpublic readonly heapSize: number,\n\t\tpublic readonly sha1: string,\n\t\tpublic readonly versionId: number,\n\t\tpublic readonly alternativeVersionId: number,\n\t) { }\n}\n\nexport class ModelService extends Disposable implements IModelService {\n\n\tpublic static MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK = 20 * 1024 * 1024;\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate readonly _onModelAdded: Emitter<ITextModel> = this._register(new Emitter<ITextModel>());\n\tpublic readonly onModelAdded: Event<ITextModel> = this._onModelAdded.event;\n\n\tprivate readonly _onModelRemoved: Emitter<ITextModel> = this._register(new Emitter<ITextModel>());\n\tpublic readonly onModelRemoved: Event<ITextModel> = this._onModelRemoved.event;\n\n\tprivate readonly _onModelModeChanged = this._register(new Emitter<{ model: ITextModel; oldLanguageId: string }>());\n\tpublic readonly onModelLanguageChanged = this._onModelModeChanged.event;\n\n\tprivate _modelCreationOptionsByLanguageAndResource: { [languageAndResource: string]: ITextModelCreationOptions };\n\n\t/**\n\t * All the models known in the system.\n\t */\n\tprivate readonly _models: { [modelId: string]: ModelData };\n\tprivate readonly _disposedModels: Map<string, DisposedModelInfo>;\n\tprivate _disposedModelsHeapSize: number;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ITextResourcePropertiesService private readonly _resourcePropertiesService: ITextResourcePropertiesService,\n\t\t@IUndoRedoService private readonly _undoRedoService: IUndoRedoService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis._modelCreationOptionsByLanguageAndResource = Object.create(null);\n\t\tthis._models = {};\n\t\tthis._disposedModels = new Map<string, DisposedModelInfo>();\n\t\tthis._disposedModelsHeapSize = 0;\n\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => this._updateModelOptions(e)));\n\t\tthis._updateModelOptions(undefined);\n\t}\n\n\tprivate static _readModelOptions(config: IRawConfig, isForSimpleWidget: boolean): ITextModelCreationOptions {\n\t\tlet tabSize = EDITOR_MODEL_DEFAULTS.tabSize;\n\t\tif (config.editor && typeof config.editor.tabSize !== 'undefined') {\n\t\t\tconst parsedTabSize = parseInt(config.editor.tabSize, 10);\n\t\t\tif (!isNaN(parsedTabSize)) {\n\t\t\t\ttabSize = parsedTabSize;\n\t\t\t}\n\t\t\tif (tabSize < 1) {\n\t\t\t\ttabSize = 1;\n\t\t\t}\n\t\t}\n\n\t\tlet indentSize: number | 'tabSize' = 'tabSize';\n\t\tif (config.editor && typeof config.editor.indentSize !== 'undefined' && config.editor.indentSize !== 'tabSize') {\n\t\t\tconst parsedIndentSize = parseInt(config.editor.indentSize, 10);\n\t\t\tif (!isNaN(parsedIndentSize)) {\n\t\t\t\tindentSize = Math.max(parsedIndentSize, 1);\n\t\t\t}\n\t\t}\n\n\t\tlet insertSpaces = EDITOR_MODEL_DEFAULTS.insertSpaces;\n\t\tif (config.editor && typeof config.editor.insertSpaces !== 'undefined') {\n\t\t\tinsertSpaces = (config.editor.insertSpaces === 'false' ? false : Boolean(config.editor.insertSpaces));\n\t\t}\n\n\t\tlet newDefaultEOL = DEFAULT_EOL;\n\t\tconst eol = config.eol;\n\t\tif (eol === '\\r\\n') {\n\t\t\tnewDefaultEOL = DefaultEndOfLine.CRLF;\n\t\t} else if (eol === '\\n') {\n\t\t\tnewDefaultEOL = DefaultEndOfLine.LF;\n\t\t}\n\n\t\tlet trimAutoWhitespace = EDITOR_MODEL_DEFAULTS.trimAutoWhitespace;\n\t\tif (config.editor && typeof config.editor.trimAutoWhitespace !== 'undefined') {\n\t\t\ttrimAutoWhitespace = (config.editor.trimAutoWhitespace === 'false' ? false : Boolean(config.editor.trimAutoWhitespace));\n\t\t}\n\n\t\tlet detectIndentation = EDITOR_MODEL_DEFAULTS.detectIndentation;\n\t\tif (config.editor && typeof config.editor.detectIndentation !== 'undefined') {\n\t\t\tdetectIndentation = (config.editor.detectIndentation === 'false' ? false : Boolean(config.editor.detectIndentation));\n\t\t}\n\n\t\tlet largeFileOptimizations = EDITOR_MODEL_DEFAULTS.largeFileOptimizations;\n\t\tif (config.editor && typeof config.editor.largeFileOptimizations !== 'undefined') {\n\t\t\tlargeFileOptimizations = (config.editor.largeFileOptimizations === 'false' ? false : Boolean(config.editor.largeFileOptimizations));\n\t\t}\n\t\tlet bracketPairColorizationOptions = EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions;\n\t\tif (config.editor?.bracketPairColorization && typeof config.editor.bracketPairColorization === 'object') {\n\t\t\tbracketPairColorizationOptions = {\n\t\t\t\tenabled: !!config.editor.bracketPairColorization.enabled,\n\t\t\t\tindependentColorPoolPerBracketType: !!config.editor.bracketPairColorization.independentColorPoolPerBracketType\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tisForSimpleWidget: isForSimpleWidget,\n\t\t\ttabSize: tabSize,\n\t\t\tindentSize: indentSize,\n\t\t\tinsertSpaces: insertSpaces,\n\t\t\tdetectIndentation: detectIndentation,\n\t\t\tdefaultEOL: newDefaultEOL,\n\t\t\ttrimAutoWhitespace: trimAutoWhitespace,\n\t\t\tlargeFileOptimizations: largeFileOptimizations,\n\t\t\tbracketPairColorizationOptions\n\t\t};\n\t}\n\n\tprivate _getEOL(resource: URI | undefined, language: string): string {\n\t\tif (resource) {\n\t\t\treturn this._resourcePropertiesService.getEOL(resource, language);\n\t\t}\n\t\tconst eol = this._configurationService.getValue('files.eol', { overrideIdentifier: language });\n\t\tif (eol && typeof eol === 'string' && eol !== 'auto') {\n\t\t\treturn eol;\n\t\t}\n\t\treturn platform.OS === platform.OperatingSystem.Linux || platform.OS === platform.OperatingSystem.Macintosh ? '\\n' : '\\r\\n';\n\t}\n\n\tprivate _shouldRestoreUndoStack(): boolean {\n\t\tconst result = this._configurationService.getValue('files.restoreUndoStack');\n\t\tif (typeof result === 'boolean') {\n\t\t\treturn result;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getCreationOptions(languageIdOrSelection: string | ILanguageSelection, resource: URI | undefined, isForSimpleWidget: boolean): ITextModelCreationOptions {\n\t\tconst language = (typeof languageIdOrSelection === 'string' ? languageIdOrSelection : languageIdOrSelection.languageId);\n\t\tlet creationOptions = this._modelCreationOptionsByLanguageAndResource[language + resource];\n\t\tif (!creationOptions) {\n\t\t\tconst editor = this._configurationService.getValue<IRawEditorConfig>('editor', { overrideIdentifier: language, resource });\n\t\t\tconst eol = this._getEOL(resource, language);\n\t\t\tcreationOptions = ModelService._readModelOptions({ editor, eol }, isForSimpleWidget);\n\t\t\tthis._modelCreationOptionsByLanguageAndResource[language + resource] = creationOptions;\n\t\t}\n\t\treturn creationOptions;\n\t}\n\n\tprivate _updateModelOptions(e: IConfigurationChangeEvent | undefined): void {\n\t\tconst oldOptionsByLanguageAndResource = this._modelCreationOptionsByLanguageAndResource;\n\t\tthis._modelCreationOptionsByLanguageAndResource = Object.create(null);\n\n\t\t// Update options on all models\n\t\tconst keys = Object.keys(this._models);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst modelId = keys[i];\n\t\t\tconst modelData = this._models[modelId];\n\t\t\tconst language = modelData.model.getLanguageId();\n\t\t\tconst uri = modelData.model.uri;\n\n\t\t\tif (e && !e.affectsConfiguration('editor', { overrideIdentifier: language, resource: uri }) && !e.affectsConfiguration('files.eol', { overrideIdentifier: language, resource: uri })) {\n\t\t\t\tcontinue; // perf: skip if this model is not affected by configuration change\n\t\t\t}\n\n\t\t\tconst oldOptions = oldOptionsByLanguageAndResource[language + uri];\n\t\t\tconst newOptions = this.getCreationOptions(language, uri, modelData.model.isForSimpleWidget);\n\t\t\tModelService._setModelOptionsForModel(modelData.model, newOptions, oldOptions);\n\t\t}\n\t}\n\n\tprivate static _setModelOptionsForModel(model: ITextModel, newOptions: ITextModelCreationOptions, currentOptions: ITextModelCreationOptions): void {\n\t\tif (currentOptions && currentOptions.defaultEOL !== newOptions.defaultEOL && model.getLineCount() === 1) {\n\t\t\tmodel.setEOL(newOptions.defaultEOL === DefaultEndOfLine.LF ? EndOfLineSequence.LF : EndOfLineSequence.CRLF);\n\t\t}\n\n\t\tif (currentOptions\n\t\t\t&& (currentOptions.detectIndentation === newOptions.detectIndentation)\n\t\t\t&& (currentOptions.insertSpaces === newOptions.insertSpaces)\n\t\t\t&& (currentOptions.tabSize === newOptions.tabSize)\n\t\t\t&& (currentOptions.indentSize === newOptions.indentSize)\n\t\t\t&& (currentOptions.trimAutoWhitespace === newOptions.trimAutoWhitespace)\n\t\t\t&& equals(currentOptions.bracketPairColorizationOptions, newOptions.bracketPairColorizationOptions)\n\t\t) {\n\t\t\t// Same indent opts, no need to touch the model\n\t\t\treturn;\n\t\t}\n\n\t\tif (newOptions.detectIndentation) {\n\t\t\tmodel.detectIndentation(newOptions.insertSpaces, newOptions.tabSize);\n\t\t\tmodel.updateOptions({\n\t\t\t\ttrimAutoWhitespace: newOptions.trimAutoWhitespace,\n\t\t\t\tbracketColorizationOptions: newOptions.bracketPairColorizationOptions\n\t\t\t});\n\t\t} else {\n\t\t\tmodel.updateOptions({\n\t\t\t\tinsertSpaces: newOptions.insertSpaces,\n\t\t\t\ttabSize: newOptions.tabSize,\n\t\t\t\tindentSize: newOptions.indentSize,\n\t\t\t\ttrimAutoWhitespace: newOptions.trimAutoWhitespace,\n\t\t\t\tbracketColorizationOptions: newOptions.bracketPairColorizationOptions\n\t\t\t});\n\t\t}\n\t}\n\n\t// --- begin IModelService\n\n\tprivate _insertDisposedModel(disposedModelData: DisposedModelInfo): void {\n\t\tthis._disposedModels.set(MODEL_ID(disposedModelData.uri), disposedModelData);\n\t\tthis._disposedModelsHeapSize += disposedModelData.heapSize;\n\t}\n\n\tprivate _removeDisposedModel(resource: URI): DisposedModelInfo | undefined {\n\t\tconst disposedModelData = this._disposedModels.get(MODEL_ID(resource));\n\t\tif (disposedModelData) {\n\t\t\tthis._disposedModelsHeapSize -= disposedModelData.heapSize;\n\t\t}\n\t\tthis._disposedModels.delete(MODEL_ID(resource));\n\t\treturn disposedModelData;\n\t}\n\n\tprivate _ensureDisposedModelsHeapSize(maxModelsHeapSize: number): void {\n\t\tif (this._disposedModelsHeapSize > maxModelsHeapSize) {\n\t\t\t// we must remove some old undo stack elements to free up some memory\n\t\t\tconst disposedModels: DisposedModelInfo[] = [];\n\t\t\tthis._disposedModels.forEach(entry => {\n\t\t\t\tif (!entry.sharesUndoRedoStack) {\n\t\t\t\t\tdisposedModels.push(entry);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdisposedModels.sort((a, b) => a.time - b.time);\n\t\t\twhile (disposedModels.length > 0 && this._disposedModelsHeapSize > maxModelsHeapSize) {\n\t\t\t\tconst disposedModel = disposedModels.shift()!;\n\t\t\t\tthis._removeDisposedModel(disposedModel.uri);\n\t\t\t\tif (disposedModel.initialUndoRedoSnapshot !== null) {\n\t\t\t\t\tthis._undoRedoService.restoreSnapshot(disposedModel.initialUndoRedoSnapshot);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _createModelData(value: string | ITextBufferFactory, languageIdOrSelection: string | ILanguageSelection, resource: URI | undefined, isForSimpleWidget: boolean): ModelData {\n\t\t// create & save the model\n\t\tconst options = this.getCreationOptions(languageIdOrSelection, resource, isForSimpleWidget);\n\t\tconst model: TextModel = new TextModel(\n\t\t\tvalue,\n\t\t\tlanguageIdOrSelection,\n\t\t\toptions,\n\t\t\tresource,\n\t\t\tthis._undoRedoService,\n\t\t\tthis._languageService,\n\t\t\tthis._languageConfigurationService,\n\t\t);\n\t\tif (resource && this._disposedModels.has(MODEL_ID(resource))) {\n\t\t\tconst disposedModelData = this._removeDisposedModel(resource)!;\n\t\t\tconst elements = this._undoRedoService.getElements(resource);\n\t\t\tconst sha1IsEqual = (computeModelSha1(model) === disposedModelData.sha1);\n\t\t\tif (sha1IsEqual || disposedModelData.sharesUndoRedoStack) {\n\t\t\t\tfor (const element of elements.past) {\n\t\t\t\t\tif (isEditStackElement(element) && element.matchesResource(resource)) {\n\t\t\t\t\t\telement.setModel(model);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const element of elements.future) {\n\t\t\t\t\tif (isEditStackElement(element) && element.matchesResource(resource)) {\n\t\t\t\t\t\telement.setModel(model);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._undoRedoService.setElementsValidFlag(resource, true, (element) => (isEditStackElement(element) && element.matchesResource(resource)));\n\t\t\t\tif (sha1IsEqual) {\n\t\t\t\t\tmodel._overwriteVersionId(disposedModelData.versionId);\n\t\t\t\t\tmodel._overwriteAlternativeVersionId(disposedModelData.alternativeVersionId);\n\t\t\t\t\tmodel._overwriteInitialUndoRedoSnapshot(disposedModelData.initialUndoRedoSnapshot);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (disposedModelData.initialUndoRedoSnapshot !== null) {\n\t\t\t\t\tthis._undoRedoService.restoreSnapshot(disposedModelData.initialUndoRedoSnapshot);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst modelId = MODEL_ID(model.uri);\n\n\t\tif (this._models[modelId]) {\n\t\t\t// There already exists a model with this id => this is a programmer error\n\t\t\tthrow new Error('ModelService: Cannot add model because it already exists!');\n\t\t}\n\n\t\tconst modelData = new ModelData(\n\t\t\tmodel,\n\t\t\t(model) => this._onWillDispose(model),\n\t\t\t(model, e) => this._onDidChangeLanguage(model, e)\n\t\t);\n\t\tthis._models[modelId] = modelData;\n\n\t\treturn modelData;\n\t}\n\n\tpublic updateModel(model: ITextModel, value: string | ITextBufferFactory): void {\n\t\tconst options = this.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n\t\tconst { textBuffer, disposable } = createTextBuffer(value, options.defaultEOL);\n\n\t\t// Return early if the text is already set in that form\n\t\tif (model.equalsTextBuffer(textBuffer)) {\n\t\t\tdisposable.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\t// Otherwise find a diff between the values and update model\n\t\tmodel.pushStackElement();\n\t\tmodel.pushEOL(textBuffer.getEOL() === '\\r\\n' ? EndOfLineSequence.CRLF : EndOfLineSequence.LF);\n\t\tmodel.pushEditOperations(\n\t\t\t[],\n\t\t\tModelService._computeEdits(model, textBuffer),\n\t\t\t() => []\n\t\t);\n\t\tmodel.pushStackElement();\n\t\tdisposable.dispose();\n\t}\n\n\tprivate static _commonPrefix(a: ITextModel, aLen: number, aDelta: number, b: ITextBuffer, bLen: number, bDelta: number): number {\n\t\tconst maxResult = Math.min(aLen, bLen);\n\n\t\tlet result = 0;\n\t\tfor (let i = 0; i < maxResult && a.getLineContent(aDelta + i) === b.getLineContent(bDelta + i); i++) {\n\t\t\tresult++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _commonSuffix(a: ITextModel, aLen: number, aDelta: number, b: ITextBuffer, bLen: number, bDelta: number): number {\n\t\tconst maxResult = Math.min(aLen, bLen);\n\n\t\tlet result = 0;\n\t\tfor (let i = 0; i < maxResult && a.getLineContent(aDelta + aLen - i) === b.getLineContent(bDelta + bLen - i); i++) {\n\t\t\tresult++;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Compute edits to bring `model` to the state of `textSource`.\n\t */\n\tpublic static _computeEdits(model: ITextModel, textBuffer: ITextBuffer): ISingleEditOperation[] {\n\t\tconst modelLineCount = model.getLineCount();\n\t\tconst textBufferLineCount = textBuffer.getLineCount();\n\t\tconst commonPrefix = this._commonPrefix(model, modelLineCount, 1, textBuffer, textBufferLineCount, 1);\n\n\t\tif (modelLineCount === textBufferLineCount && commonPrefix === modelLineCount) {\n\t\t\t// equality case\n\t\t\treturn [];\n\t\t}\n\n\t\tconst commonSuffix = this._commonSuffix(model, modelLineCount - commonPrefix, commonPrefix, textBuffer, textBufferLineCount - commonPrefix, commonPrefix);\n\n\t\tlet oldRange: Range;\n\t\tlet newRange: Range;\n\t\tif (commonSuffix > 0) {\n\t\t\toldRange = new Range(commonPrefix + 1, 1, modelLineCount - commonSuffix + 1, 1);\n\t\t\tnewRange = new Range(commonPrefix + 1, 1, textBufferLineCount - commonSuffix + 1, 1);\n\t\t} else if (commonPrefix > 0) {\n\t\t\toldRange = new Range(commonPrefix, model.getLineMaxColumn(commonPrefix), modelLineCount, model.getLineMaxColumn(modelLineCount));\n\t\t\tnewRange = new Range(commonPrefix, 1 + textBuffer.getLineLength(commonPrefix), textBufferLineCount, 1 + textBuffer.getLineLength(textBufferLineCount));\n\t\t} else {\n\t\t\toldRange = new Range(1, 1, modelLineCount, model.getLineMaxColumn(modelLineCount));\n\t\t\tnewRange = new Range(1, 1, textBufferLineCount, 1 + textBuffer.getLineLength(textBufferLineCount));\n\t\t}\n\n\t\treturn [EditOperation.replaceMove(oldRange, textBuffer.getValueInRange(newRange, EndOfLinePreference.TextDefined))];\n\t}\n\n\tpublic createModel(value: string | ITextBufferFactory, languageSelection: ILanguageSelection | null, resource?: URI, isForSimpleWidget: boolean = false): ITextModel {\n\t\tlet modelData: ModelData;\n\n\t\tif (languageSelection) {\n\t\t\tmodelData = this._createModelData(value, languageSelection, resource, isForSimpleWidget);\n\t\t} else {\n\t\t\tmodelData = this._createModelData(value, PLAINTEXT_LANGUAGE_ID, resource, isForSimpleWidget);\n\t\t}\n\n\t\tthis._onModelAdded.fire(modelData.model);\n\n\t\treturn modelData.model;\n\t}\n\n\tpublic destroyModel(resource: URI): void {\n\t\t// We need to support that not all models get disposed through this service (i.e. model.dispose() should work!)\n\t\tconst modelData = this._models[MODEL_ID(resource)];\n\t\tif (!modelData) {\n\t\t\treturn;\n\t\t}\n\t\tmodelData.model.dispose();\n\t}\n\n\tpublic getModels(): ITextModel[] {\n\t\tconst ret: ITextModel[] = [];\n\n\t\tconst keys = Object.keys(this._models);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst modelId = keys[i];\n\t\t\tret.push(this._models[modelId].model);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tpublic getModel(resource: URI): ITextModel | null {\n\t\tconst modelId = MODEL_ID(resource);\n\t\tconst modelData = this._models[modelId];\n\t\tif (!modelData) {\n\t\t\treturn null;\n\t\t}\n\t\treturn modelData.model;\n\t}\n\n\t// --- end IModelService\n\n\tprotected _schemaShouldMaintainUndoRedoElements(resource: URI) {\n\t\treturn (\n\t\t\tresource.scheme === Schemas.file\n\t\t\t|| resource.scheme === Schemas.vscodeRemote\n\t\t\t|| resource.scheme === Schemas.vscodeUserData\n\t\t\t|| resource.scheme === Schemas.vscodeNotebookCell\n\t\t\t|| resource.scheme === 'fake-fs' // for tests\n\t\t);\n\t}\n\n\tprivate _onWillDispose(model: ITextModel): void {\n\t\tconst modelId = MODEL_ID(model.uri);\n\t\tconst modelData = this._models[modelId];\n\n\t\tconst sharesUndoRedoStack = (this._undoRedoService.getUriComparisonKey(model.uri) !== model.uri.toString());\n\t\tlet maintainUndoRedoStack = false;\n\t\tlet heapSize = 0;\n\t\tif (sharesUndoRedoStack || (this._shouldRestoreUndoStack() && this._schemaShouldMaintainUndoRedoElements(model.uri))) {\n\t\t\tconst elements = this._undoRedoService.getElements(model.uri);\n\t\t\tif (elements.past.length > 0 || elements.future.length > 0) {\n\t\t\t\tfor (const element of elements.past) {\n\t\t\t\t\tif (isEditStackElement(element) && element.matchesResource(model.uri)) {\n\t\t\t\t\t\tmaintainUndoRedoStack = true;\n\t\t\t\t\t\theapSize += element.heapSize(model.uri);\n\t\t\t\t\t\telement.setModel(model.uri); // remove reference from text buffer instance\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const element of elements.future) {\n\t\t\t\t\tif (isEditStackElement(element) && element.matchesResource(model.uri)) {\n\t\t\t\t\t\tmaintainUndoRedoStack = true;\n\t\t\t\t\t\theapSize += element.heapSize(model.uri);\n\t\t\t\t\t\telement.setModel(model.uri); // remove reference from text buffer instance\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst maxMemory = ModelService.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK;\n\t\tif (!maintainUndoRedoStack) {\n\t\t\tif (!sharesUndoRedoStack) {\n\t\t\t\tconst initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n\t\t\t\tif (initialUndoRedoSnapshot !== null) {\n\t\t\t\t\tthis._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!sharesUndoRedoStack && heapSize > maxMemory) {\n\t\t\t// the undo stack for this file would never fit in the configured memory, so don't bother with it.\n\t\t\tconst initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n\t\t\tif (initialUndoRedoSnapshot !== null) {\n\t\t\t\tthis._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._ensureDisposedModelsHeapSize(maxMemory - heapSize);\n\t\t\t// We only invalidate the elements, but they remain in the undo-redo service.\n\t\t\tthis._undoRedoService.setElementsValidFlag(model.uri, false, (element) => (isEditStackElement(element) && element.matchesResource(model.uri)));\n\t\t\tthis._insertDisposedModel(new DisposedModelInfo(model.uri, modelData.model.getInitialUndoRedoSnapshot(), Date.now(), sharesUndoRedoStack, heapSize, computeModelSha1(model), model.getVersionId(), model.getAlternativeVersionId()));\n\t\t}\n\n\t\tdelete this._models[modelId];\n\t\tmodelData.dispose();\n\n\t\t// clean up cache\n\t\tdelete this._modelCreationOptionsByLanguageAndResource[model.getLanguageId() + model.uri];\n\n\t\tthis._onModelRemoved.fire(model);\n\t}\n\n\tprivate _onDidChangeLanguage(model: ITextModel, e: IModelLanguageChangedEvent): void {\n\t\tconst oldLanguageId = e.oldLanguage;\n\t\tconst newLanguageId = model.getLanguageId();\n\t\tconst oldOptions = this.getCreationOptions(oldLanguageId, model.uri, model.isForSimpleWidget);\n\t\tconst newOptions = this.getCreationOptions(newLanguageId, model.uri, model.isForSimpleWidget);\n\t\tModelService._setModelOptionsForModel(model, newOptions, oldOptions);\n\t\tthis._onModelModeChanged.fire({ model, oldLanguageId: oldLanguageId });\n\t}\n}\n"]}