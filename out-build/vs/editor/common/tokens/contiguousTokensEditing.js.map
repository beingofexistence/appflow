{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/tokens/contiguousTokensEditing.ts"],"names":[],"mappings":"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","file":"contiguousTokensEditing.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LineTokens } from 'vs/editor/common/tokens/lineTokens';\n\nexport const EMPTY_LINE_TOKENS = (new Uint32Array(0)).buffer;\n\nexport class ContiguousTokensEditing {\n\n\tpublic static deleteBeginning(lineTokens: Uint32Array | ArrayBuffer | null, toChIndex: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn lineTokens;\n\t\t}\n\t\treturn ContiguousTokensEditing.delete(lineTokens, 0, toChIndex);\n\t}\n\n\tpublic static deleteEnding(lineTokens: Uint32Array | ArrayBuffer | null, fromChIndex: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tokens = toUint32Array(lineTokens);\n\t\tconst lineTextLength = tokens[tokens.length - 2];\n\t\treturn ContiguousTokensEditing.delete(lineTokens, fromChIndex, lineTextLength);\n\t}\n\n\tpublic static delete(lineTokens: Uint32Array | ArrayBuffer | null, fromChIndex: number, toChIndex: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS || fromChIndex === toChIndex) {\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tokens = toUint32Array(lineTokens);\n\t\tconst tokensCount = (tokens.length >>> 1);\n\n\t\t// special case: deleting everything\n\t\tif (fromChIndex === 0 && tokens[tokens.length - 2] === toChIndex) {\n\t\t\treturn EMPTY_LINE_TOKENS;\n\t\t}\n\n\t\tconst fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, fromChIndex);\n\t\tconst fromTokenStartOffset = (fromTokenIndex > 0 ? tokens[(fromTokenIndex - 1) << 1] : 0);\n\t\tconst fromTokenEndOffset = tokens[fromTokenIndex << 1];\n\n\t\tif (toChIndex < fromTokenEndOffset) {\n\t\t\t// the delete range is inside a single token\n\t\t\tconst delta = (toChIndex - fromChIndex);\n\t\t\tfor (let i = fromTokenIndex; i < tokensCount; i++) {\n\t\t\t\ttokens[i << 1] -= delta;\n\t\t\t}\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tlet dest: number;\n\t\tlet lastEnd: number;\n\t\tif (fromTokenStartOffset !== fromChIndex) {\n\t\t\ttokens[fromTokenIndex << 1] = fromChIndex;\n\t\t\tdest = ((fromTokenIndex + 1) << 1);\n\t\t\tlastEnd = fromChIndex;\n\t\t} else {\n\t\t\tdest = (fromTokenIndex << 1);\n\t\t\tlastEnd = fromTokenStartOffset;\n\t\t}\n\n\t\tconst delta = (toChIndex - fromChIndex);\n\t\tfor (let tokenIndex = fromTokenIndex + 1; tokenIndex < tokensCount; tokenIndex++) {\n\t\t\tconst tokenEndOffset = tokens[tokenIndex << 1] - delta;\n\t\t\tif (tokenEndOffset > lastEnd) {\n\t\t\t\ttokens[dest++] = tokenEndOffset;\n\t\t\t\ttokens[dest++] = tokens[(tokenIndex << 1) + 1];\n\t\t\t\tlastEnd = tokenEndOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (dest === tokens.length) {\n\t\t\t// nothing to trim\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tmp = new Uint32Array(dest);\n\t\ttmp.set(tokens.subarray(0, dest), 0);\n\t\treturn tmp.buffer;\n\t}\n\n\tpublic static append(lineTokens: Uint32Array | ArrayBuffer | null, _otherTokens: Uint32Array | ArrayBuffer | null): Uint32Array | ArrayBuffer | null {\n\t\tif (_otherTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn lineTokens;\n\t\t}\n\t\tif (lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn _otherTokens;\n\t\t}\n\t\tif (lineTokens === null) {\n\t\t\treturn lineTokens;\n\t\t}\n\t\tif (_otherTokens === null) {\n\t\t\t// cannot determine combined line length...\n\t\t\treturn null;\n\t\t}\n\t\tconst myTokens = toUint32Array(lineTokens);\n\t\tconst otherTokens = toUint32Array(_otherTokens);\n\t\tconst otherTokensCount = (otherTokens.length >>> 1);\n\n\t\tconst result = new Uint32Array(myTokens.length + otherTokens.length);\n\t\tresult.set(myTokens, 0);\n\t\tlet dest = myTokens.length;\n\t\tconst delta = myTokens[myTokens.length - 2];\n\t\tfor (let i = 0; i < otherTokensCount; i++) {\n\t\t\tresult[dest++] = otherTokens[(i << 1)] + delta;\n\t\t\tresult[dest++] = otherTokens[(i << 1) + 1];\n\t\t}\n\t\treturn result.buffer;\n\t}\n\n\tpublic static insert(lineTokens: Uint32Array | ArrayBuffer | null, chIndex: number, textLength: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\t// nothing to do\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tokens = toUint32Array(lineTokens);\n\t\tconst tokensCount = (tokens.length >>> 1);\n\n\t\tlet fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, chIndex);\n\t\tif (fromTokenIndex > 0) {\n\t\t\tconst fromTokenStartOffset = tokens[(fromTokenIndex - 1) << 1];\n\t\t\tif (fromTokenStartOffset === chIndex) {\n\t\t\t\tfromTokenIndex--;\n\t\t\t}\n\t\t}\n\t\tfor (let tokenIndex = fromTokenIndex; tokenIndex < tokensCount; tokenIndex++) {\n\t\t\ttokens[tokenIndex << 1] += textLength;\n\t\t}\n\t\treturn lineTokens;\n\t}\n}\n\nexport function toUint32Array(arr: Uint32Array | ArrayBuffer): Uint32Array {\n\tif (arr instanceof Uint32Array) {\n\t\treturn arr;\n\t} else {\n\t\treturn new Uint32Array(arr);\n\t}\n}\n"]}