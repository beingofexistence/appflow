{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/tokens/contiguousMultilineTokens.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG;;OAEG;IACH,MAAa,GAAG;QACR,MAAM,CAAC,WAAW,CAAC,IAAgB,EAAE,MAAc,EAAE,MAAmC;YAC9F,MAAM,MAAM,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5C,MAAM,eAAe,GAAG,IAAA,YAAG,EAAU,IAAI,EAAE,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,CAAC,CAAC;YAChE,MAAM,KAAK,GAAG,IAAA,YAAG,EAAU,IAAI,EAAE,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,CAAC,CAAC;YACtD,MAAM,MAAM,GAAkB,EAAE,CAAC;YACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC/B,MAAM,SAAS,GAAG,IAAA,YAAG,EAAU,IAAI,EAAE,MAAM,CAAC,CAAC;gBAAC,MAAM,IAAI,CAAC,CAAC;gBAC1D,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrE,MAAM,IAAI,SAAS,CAAC;aACpB;YACD,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAuB,eAAe,EAAE,MAAM,CAAC,CAAC,CAAC;YACpE,OAAO,MAAM,CAAC;QACf,CAAC;QAkBD;;WAEG;QACH,IAAW,eAAe;YACzB,OAAO,IAAI,CAAC,CAAC,CAAgB;QAC9B,CAAC;QAED;;WAEG;QACH,IAAW,aAAa;YACvB,OAAO,IAAI,CAAC,CAAC,GAAkB,IAAI,CAAC,CAAC,CAAO,MAAM,GAAG,CAAC,CAAC;QACxD,CAAC;QAED,YAAY,eAAuB,EAAE,MAAqB;YACzD,IAAI,CAAC,CAAC,GAAkB,eAAe,CAAC;YACxC,IAAI,CAAC,CAAC,GAAS,MAAM,CAAC;QACvB,CAAC;QAED,YAAY;YACX,OAAO,IAAI,eAAG,CAAO,IAAI,CAAC,CAAC,EAAiB,IAAI,CAAC,CAAC,GAAkB,IAAI,CAAC,CAAC,CAAO,MAAM,CAAC,CAAC;QAC1F,CAAC;QAED;;WAEG;QACI,aAAa,CAAC,UAAkB;YACtC,OAAO,IAAI,CAAC,CAAC,CAAO,UAAU,GAAG,IAAI,CAAC,CAAC,CAAgB,CAAC;QACzD,CAAC;QAEM,gBAAgB,CAAC,UAAuB;YAC9C,IAAI,CAAC,CAAC,CAAO,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,CAAC;QAEM,aAAa;YACnB,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,MAAM,IAAI,CAAC,CAAC,CAAC,oCAAoC;YACjD,MAAM,IAAI,CAAC,CAAC,CAAC,6BAA6B;YAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAO,CAAC,CAAC,CAAC;gBACnC,IAAI,CAAC,CAAC,UAAU,YAAY,WAAW,CAAC,EAAE;oBACzC,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;iBAClC;gBACD,MAAM,IAAI,CAAC,CAAC,CAAC,6BAA6B;gBAC1C,MAAM,IAAI,UAAU,CAAC,UAAU,CAAC;aAChC;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAEM,SAAS,CAAC,WAAuB,EAAE,MAAc;YACvD,IAAA,YAAG,EAAW,WAAW,EAAE,IAAI,CAAC,CAAC,EAAiB,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,CAAC,CAAC;YACvE,IAAA,YAAG,EAAW,WAAW,EAAE,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,CAAC,CAAC;YACrE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAO,CAAC,CAAC,CAAC;gBACnC,IAAI,CAAC,CAAC,UAAU,YAAY,WAAW,CAAC,EAAE;oBACzC,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;iBAClC;gBACD,IAAA,YAAG,EAAW,WAAW,EAAE,UAAU,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAAC,MAAM,IAAI,CAAC,CAAC;gBACvE,WAAW,CAAC,GAAG,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;gBAAC,MAAM,IAAI,UAAU,CAAC,UAAU,CAAC;aAC5F;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAEM,SAAS,CAAC,KAAa,EAAE,IAAY;YAC3C,MAAM,CAAC,QAAQ,EAAE,eAAe,CAAC,GAAG,IAAA,gBAAG,EAAM,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,CAAC,CAAkB,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,CAAiB,IAAI,cAAG,CAAM,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;QAC3G,CAAC;QAEO,CAAC,CAAkB,KAAa;YACvC,IAAI,KAAK,CAAC,eAAe,KAAK,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,WAAW,KAAK,KAAK,CAAC,SAAS,EAAE;gBAC3F,oBAAoB;gBACpB,OAAO;aACP;YAED,MAAM,cAAc,GAAG,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,CAAgB;YACrE,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAgB;YAElE,IAAI,aAAa,GAAG,CAAC,EAAE;gBACtB,0FAA0F;gBAC1F,MAAM,iBAAiB,GAAG,aAAa,GAAG,cAAc,CAAC;gBACzD,IAAI,CAAC,CAAC,IAAmB,iBAAiB,CAAC;gBAC3C,OAAO;aACP;YAED,IAAI,cAAc,IAAI,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE;gBAC1C,4EAA4E;gBAC5E,OAAO;aACP;YAED,IAAI,cAAc,GAAG,CAAC,IAAI,aAAa,IAAI,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE;gBAC/D,kDAAkD;gBAClD,IAAI,CAAC,CAAC,GAAkB,CAAC,CAAC;gBAC1B,IAAI,CAAC,CAAC,GAAS,EAAE,CAAC;gBAClB,OAAO;aACP;YAED,IAAI,cAAc,KAAK,aAAa,EAAE;gBACrC,4BAA4B;gBAC5B,IAAI,CAAC,CAAC,CAAO,cAAc,CAAC,GAAG,6BAAG,CAAqB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAO,cAAc,CAAC,EAAE,KAAK,CAAC,WAAW,GAAG,CAAC,EAAE,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;gBACxI,OAAO;aACP;YAED,IAAI,cAAc,IAAI,CAAC,EAAE;gBACxB,0BAA0B;gBAC1B,IAAI,CAAC,CAAC,CAAO,cAAc,CAAC,GAAG,6BAAG,CAAqB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAO,cAAc,CAAC,EAAE,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;gBAEzH,IAAI,aAAa,GAAG,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE;oBACxC,yBAAyB;oBACzB,MAAM,cAAc,GAAG,6BAAG,CAAqB,eAAe,CAAC,IAAI,CAAC,CAAC,CAAO,aAAa,CAAC,EAAE,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;oBAEjH,iFAAiF;oBACjF,IAAI,CAAC,CAAC,CAAO,cAAc,CAAC,GAAG,6BAAG,CAAqB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAO,cAAc,CAAC,EAAE,cAAc,CAAC,CAAC;oBAE5G,sBAAsB;oBACtB,IAAI,CAAC,CAAC,CAAO,MAAM,CAAC,cAAc,GAAG,CAAC,EAAE,aAAa,GAAG,cAAc,CAAC,CAAC;iBACxE;qBAAM;oBACN,iCAAiC;oBAEjC,iFAAiF;oBACjF,IAAI,CAAC,CAAC,CAAO,cAAc,CAAC,GAAG,6BAAG,CAAqB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAO,cAAc,CAAC,EAAE,IAAI,CAAC,CAAC;oBAElG,eAAe;oBACf,IAAI,CAAC,CAAC,GAAS,IAAI,CAAC,CAAC,CAAO,KAAK,CAAC,CAAC,EAAE,cAAc,GAAG,CAAC,CAAC,CAAC;iBACzD;aACD;iBAAM;gBACN,kCAAkC;gBAElC,MAAM,aAAa,GAAG,CAAC,cAAc,CAAC;gBACtC,IAAI,CAAC,CAAC,IAAmB,aAAa,CAAC;gBAEvC,kCAAkC;gBAClC,IAAI,CAAC,CAAC,CAAO,aAAa,CAAC,GAAG,6BAAG,CAAqB,eAAe,CAAC,IAAI,CAAC,CAAC,CAAO,aAAa,CAAC,EAAE,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;gBAExH,eAAe;gBACf,IAAI,CAAC,CAAC,GAAS,IAAI,CAAC,CAAC,CAAO,KAAK,CAAC,aAAa,CAAC,CAAC;aACjD;QACF,CAAC;QAEO,CAAC,CAAiB,QAAa,EAAO,QAAgB,EAAE,eAAuB;YAEtF,IAAI,QAAQ,KAAK,CAAC,IAAI,eAAe,KAAK,CAAC,EAAE;gBAC5C,oBAAoB;gBACpB,OAAO;aACP;YAED,MAAM,SAAS,GAAG,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAgB;YAE9D,IAAI,SAAS,GAAG,CAAC,EAAE;gBAClB,kFAAkF;gBAClF,IAAI,CAAC,CAAC,IAAmB,QAAQ,CAAC;gBAClC,OAAO;aACP;YAED,IAAI,SAAS,IAAI,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE;gBACrC,oEAAoE;gBACpE,OAAO;aACP;YAED,IAAI,QAAQ,KAAK,CAAC,EAAE;gBACnB,6BAA6B;gBAC7B,IAAI,CAAC,CAAC,CAAO,SAAS,CAAC,GAAG,6BAAG,CAAqB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAO,SAAS,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,eAAe,CAAC,CAAC;gBACxH,OAAO;aACP;YAED,IAAI,CAAC,CAAC,CAAO,SAAS,CAAC,GAAG,6BAAG,CAAqB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAO,SAAS,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC7G,IAAI,CAAC,CAAC,CAAO,SAAS,CAAC,GAAG,6BAAG,CAAqB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAO,SAAS,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,eAAe,CAAC,CAAC;YAExH,IAAI,CAAC,CAAC,CAAY,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAClD,CAAC;QAEO,CAAC,CAAY,WAAmB,EAAE,WAAmB;YAC5D,IAAI,WAAW,KAAK,CAAC,EAAE;gBACtB,OAAO;aACP;YACD,MAAM,UAAU,GAAyC,EAAE,CAAC;YAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;gBACrC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aACrB;YACD,IAAI,CAAC,CAAC,GAAS,MAAM,CAAC,GAAG,CAAS,IAAI,CAAC,CAAC,EAAQ,WAAW,EAAE,UAAU,CAAC,CAAC;QAC1E,CAAC;KACD;IApND,kBAoNC","file":"contiguousMultilineTokens.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport { readUInt32BE, writeUInt32BE } from 'vs/base/common/buffer';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { countEOL } from 'vs/editor/common/core/eolCounter';\nimport { ContiguousTokensEditing } from 'vs/editor/common/tokens/contiguousTokensEditing';\nimport { LineRange } from 'vs/editor/common/core/lineRange';\n\n/**\n * Represents contiguous tokens over a contiguous range of lines.\n */\nexport class ContiguousMultilineTokens {\n\tpublic static deserialize(buff: Uint8Array, offset: number, result: ContiguousMultilineTokens[]): number {\n\t\tconst view32 = new Uint32Array(buff.buffer);\n\t\tconst startLineNumber = readUInt32BE(buff, offset); offset += 4;\n\t\tconst count = readUInt32BE(buff, offset); offset += 4;\n\t\tconst tokens: Uint32Array[] = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tconst byteCount = readUInt32BE(buff, offset); offset += 4;\n\t\t\ttokens.push(view32.subarray(offset / 4, offset / 4 + byteCount / 4));\n\t\t\toffset += byteCount;\n\t\t}\n\t\tresult.push(new ContiguousMultilineTokens(startLineNumber, tokens));\n\t\treturn offset;\n\t}\n\n\t/**\n\t * The start line number for this block of tokens.\n\t */\n\tprivate _startLineNumber: number;\n\n\t/**\n\t * The tokens are stored in a binary format. There is an element for each line,\n\t * so `tokens[index]` contains all tokens on line `startLineNumber + index`.\n\t *\n\t * On a specific line, each token occupies two array indices. For token i:\n\t *  - at offset 2*i => endOffset\n\t *  - at offset 2*i + 1 => metadata\n\t *\n\t */\n\tprivate _tokens: (Uint32Array | ArrayBuffer | null)[];\n\n\t/**\n\t * (Inclusive) start line number for these tokens.\n\t */\n\tpublic get startLineNumber(): number {\n\t\treturn this._startLineNumber;\n\t}\n\n\t/**\n\t * (Inclusive) end line number for these tokens.\n\t */\n\tpublic get endLineNumber(): number {\n\t\treturn this._startLineNumber + this._tokens.length - 1;\n\t}\n\n\tconstructor(startLineNumber: number, tokens: Uint32Array[]) {\n\t\tthis._startLineNumber = startLineNumber;\n\t\tthis._tokens = tokens;\n\t}\n\n\tgetLineRange(): LineRange {\n\t\treturn new LineRange(this._startLineNumber, this._startLineNumber + this._tokens.length);\n\t}\n\n\t/**\n\t * @see {@link _tokens}\n\t */\n\tpublic getLineTokens(lineNumber: number): Uint32Array | ArrayBuffer | null {\n\t\treturn this._tokens[lineNumber - this._startLineNumber];\n\t}\n\n\tpublic appendLineTokens(lineTokens: Uint32Array): void {\n\t\tthis._tokens.push(lineTokens);\n\t}\n\n\tpublic serializeSize(): number {\n\t\tlet result = 0;\n\t\tresult += 4; // 4 bytes for the start line number\n\t\tresult += 4; // 4 bytes for the line count\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\n\t\t\tconst lineTokens = this._tokens[i];\n\t\t\tif (!(lineTokens instanceof Uint32Array)) {\n\t\t\t\tthrow new Error(`Not supported!`);\n\t\t\t}\n\t\t\tresult += 4; // 4 bytes for the byte count\n\t\t\tresult += lineTokens.byteLength;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic serialize(destination: Uint8Array, offset: number): number {\n\t\twriteUInt32BE(destination, this._startLineNumber, offset); offset += 4;\n\t\twriteUInt32BE(destination, this._tokens.length, offset); offset += 4;\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\n\t\t\tconst lineTokens = this._tokens[i];\n\t\t\tif (!(lineTokens instanceof Uint32Array)) {\n\t\t\t\tthrow new Error(`Not supported!`);\n\t\t\t}\n\t\t\twriteUInt32BE(destination, lineTokens.byteLength, offset); offset += 4;\n\t\t\tdestination.set(new Uint8Array(lineTokens.buffer), offset); offset += lineTokens.byteLength;\n\t\t}\n\t\treturn offset;\n\t}\n\n\tpublic applyEdit(range: IRange, text: string): void {\n\t\tconst [eolCount, firstLineLength] = countEOL(text);\n\t\tthis._acceptDeleteRange(range);\n\t\tthis._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount, firstLineLength);\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\t\tif (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n\t\t\t// Nothing to delete\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstLineIndex = range.startLineNumber - this._startLineNumber;\n\t\tconst lastLineIndex = range.endLineNumber - this._startLineNumber;\n\n\t\tif (lastLineIndex < 0) {\n\t\t\t// this deletion occurs entirely before this block, so we only need to adjust line numbers\n\t\t\tconst deletedLinesCount = lastLineIndex - firstLineIndex;\n\t\t\tthis._startLineNumber -= deletedLinesCount;\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex >= this._tokens.length) {\n\t\t\t// this deletion occurs entirely after this block, so there is nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex < 0 && lastLineIndex >= this._tokens.length) {\n\t\t\t// this deletion completely encompasses this block\n\t\t\tthis._startLineNumber = 0;\n\t\t\tthis._tokens = [];\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex === lastLineIndex) {\n\t\t\t// a delete on a single line\n\t\t\tthis._tokens[firstLineIndex] = ContiguousTokensEditing.delete(this._tokens[firstLineIndex], range.startColumn - 1, range.endColumn - 1);\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex >= 0) {\n\t\t\t// The first line survives\n\t\t\tthis._tokens[firstLineIndex] = ContiguousTokensEditing.deleteEnding(this._tokens[firstLineIndex], range.startColumn - 1);\n\n\t\t\tif (lastLineIndex < this._tokens.length) {\n\t\t\t\t// The last line survives\n\t\t\t\tconst lastLineTokens = ContiguousTokensEditing.deleteBeginning(this._tokens[lastLineIndex], range.endColumn - 1);\n\n\t\t\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\t\t\tthis._tokens[firstLineIndex] = ContiguousTokensEditing.append(this._tokens[firstLineIndex], lastLineTokens);\n\n\t\t\t\t// Delete middle lines\n\t\t\t\tthis._tokens.splice(firstLineIndex + 1, lastLineIndex - firstLineIndex);\n\t\t\t} else {\n\t\t\t\t// The last line does not survive\n\n\t\t\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\t\t\tthis._tokens[firstLineIndex] = ContiguousTokensEditing.append(this._tokens[firstLineIndex], null);\n\n\t\t\t\t// Delete lines\n\t\t\t\tthis._tokens = this._tokens.slice(0, firstLineIndex + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// The first line does not survive\n\n\t\t\tconst deletedBefore = -firstLineIndex;\n\t\t\tthis._startLineNumber -= deletedBefore;\n\n\t\t\t// Remove beginning from last line\n\t\t\tthis._tokens[lastLineIndex] = ContiguousTokensEditing.deleteBeginning(this._tokens[lastLineIndex], range.endColumn - 1);\n\n\t\t\t// Delete lines\n\t\t\tthis._tokens = this._tokens.slice(lastLineIndex);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, eolCount: number, firstLineLength: number): void {\n\n\t\tif (eolCount === 0 && firstLineLength === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineIndex = position.lineNumber - this._startLineNumber;\n\n\t\tif (lineIndex < 0) {\n\t\t\t// this insertion occurs before this block, so we only need to adjust line numbers\n\t\t\tthis._startLineNumber += eolCount;\n\t\t\treturn;\n\t\t}\n\n\t\tif (lineIndex >= this._tokens.length) {\n\t\t\t// this insertion occurs after this block, so there is nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (eolCount === 0) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._tokens[lineIndex] = ContiguousTokensEditing.insert(this._tokens[lineIndex], position.column - 1, firstLineLength);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tokens[lineIndex] = ContiguousTokensEditing.deleteEnding(this._tokens[lineIndex], position.column - 1);\n\t\tthis._tokens[lineIndex] = ContiguousTokensEditing.insert(this._tokens[lineIndex], position.column - 1, firstLineLength);\n\n\t\tthis._insertLines(position.lineNumber, eolCount);\n\t}\n\n\tprivate _insertLines(insertIndex: number, insertCount: number): void {\n\t\tif (insertCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst lineTokens: (Uint32Array | ArrayBuffer | null)[] = [];\n\t\tfor (let i = 0; i < insertCount; i++) {\n\t\t\tlineTokens[i] = null;\n\t\t}\n\t\tthis._tokens = arrays.arrayInsert(this._tokens, insertIndex, lineTokens);\n\t}\n}\n"]}