{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/tokens/contiguousMultilineTokensBuilder.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG,MAAa,GAAG;QAER,MAAM,CAAC,WAAW,CAAC,IAAgB;YACzC,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,MAAM,KAAK,GAAG,IAAA,YAAG,EAAU,IAAI,EAAE,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,CAAC,CAAC;YACtD,MAAM,MAAM,GAAgC,EAAE,CAAC;YAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC/B,MAAM,GAAG,+BAAG,CAAuB,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;aACrE;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAID;YACC,IAAI,CAAC,CAAC,GAAS,EAAE,CAAC;QACnB,CAAC;QAEM,GAAG,CAAC,UAAkB,EAAE,UAAuB;YACrD,IAAI,IAAI,CAAC,CAAC,CAAO,MAAM,GAAG,CAAC,EAAE;gBAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAO,IAAI,CAAC,CAAC,CAAO,MAAM,GAAG,CAAC,CAAC,CAAC;gBACnD,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,KAAK,UAAU,EAAE;oBAC1C,SAAS;oBACT,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;oBAClC,OAAO;iBACP;aACD;YACD,IAAI,CAAC,CAAC,CAAO,IAAI,CAAC,IAAI,+BAAG,CAAuB,UAAU,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC5E,CAAC;QAEM,QAAQ;YACd,OAAO,IAAI,CAAC,CAAC,CAAO;QACrB,CAAC;QAEM,SAAS;YACf,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,EAAe,CAAC;YACnC,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;YACpC,IAAI,CAAC,CAAC,CAAU,MAAM,CAAC,CAAC;YACxB,OAAO,MAAM,CAAC;QACf,CAAC;QAEO,CAAC;YACR,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,MAAM,IAAI,CAAC,CAAC,CAAC,wBAAwB;YACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,MAAM,IAAI,IAAI,CAAC,CAAC,CAAO,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;aAC1C;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAEO,CAAC,CAAU,WAAuB;YACzC,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,IAAA,YAAG,EAAW,WAAW,EAAE,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,CAAC,CAAC;YACrE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,MAAM,GAAG,IAAI,CAAC,CAAC,CAAO,CAAC,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;aACxD;QACF,CAAC;KACD;IAzDD,kBAyDC","file":"contiguousMultilineTokensBuilder.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { readUInt32BE, writeUInt32BE } from 'vs/base/common/buffer';\nimport { ContiguousMultilineTokens } from 'vs/editor/common/tokens/contiguousMultilineTokens';\n\nexport class ContiguousMultilineTokensBuilder {\n\n\tpublic static deserialize(buff: Uint8Array): ContiguousMultilineTokens[] {\n\t\tlet offset = 0;\n\t\tconst count = readUInt32BE(buff, offset); offset += 4;\n\t\tconst result: ContiguousMultilineTokens[] = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\toffset = ContiguousMultilineTokens.deserialize(buff, offset, result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate readonly _tokens: ContiguousMultilineTokens[];\n\n\tconstructor() {\n\t\tthis._tokens = [];\n\t}\n\n\tpublic add(lineNumber: number, lineTokens: Uint32Array): void {\n\t\tif (this._tokens.length > 0) {\n\t\t\tconst last = this._tokens[this._tokens.length - 1];\n\t\t\tif (last.endLineNumber + 1 === lineNumber) {\n\t\t\t\t// append\n\t\t\t\tlast.appendLineTokens(lineTokens);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis._tokens.push(new ContiguousMultilineTokens(lineNumber, [lineTokens]));\n\t}\n\n\tpublic finalize(): ContiguousMultilineTokens[] {\n\t\treturn this._tokens;\n\t}\n\n\tpublic serialize(): Uint8Array {\n\t\tconst size = this._serializeSize();\n\t\tconst result = new Uint8Array(size);\n\t\tthis._serialize(result);\n\t\treturn result;\n\t}\n\n\tprivate _serializeSize(): number {\n\t\tlet result = 0;\n\t\tresult += 4; // 4 bytes for the count\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\n\t\t\tresult += this._tokens[i].serializeSize();\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _serialize(destination: Uint8Array): void {\n\t\tlet offset = 0;\n\t\twriteUInt32BE(destination, this._tokens.length, offset); offset += 4;\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\n\t\t\toffset = this._tokens[i].serialize(destination, offset);\n\t\t}\n\t}\n}\n"]}