{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/languages/languageConfigurationRegistry.ts"],"names":[],"mappings":"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","file":"languageConfigurationRegistry.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport * as strings from 'vs/base/common/strings';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { DEFAULT_WORD_REGEXP, ensureValidWordDefinition } from 'vs/editor/common/core/wordHelper';\nimport { EnterAction, FoldingRules, IAutoClosingPair, IndentationRule, LanguageConfiguration, AutoClosingPairs, CharacterPair, ExplicitLanguageConfiguration } from 'vs/editor/common/languages/languageConfiguration';\nimport { createScopedLineTokens, ScopedLineTokens } from 'vs/editor/common/languages/supports';\nimport { CharacterPairSupport } from 'vs/editor/common/languages/supports/characterPair';\nimport { BracketElectricCharacterSupport } from 'vs/editor/common/languages/supports/electricCharacter';\nimport { IndentRulesSupport } from 'vs/editor/common/languages/supports/indentRules';\nimport { OnEnterSupport } from 'vs/editor/common/languages/supports/onEnter';\nimport { RichEditBrackets } from 'vs/editor/common/languages/supports/richEditBrackets';\nimport { EditorAutoIndentStrategy } from 'vs/editor/common/config/editorOptions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { LanguageBracketsConfiguration } from 'vs/editor/common/languages/supports/languageBracketsConfiguration';\n\n/**\n * Interface used to support insertion of mode specific comments.\n */\nexport interface ICommentsConfiguration {\n\tlineCommentToken?: string;\n\tblockCommentStartToken?: string;\n\tblockCommentEndToken?: string;\n}\n\nexport interface ILanguageConfigurationService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChange: Event<LanguageConfigurationServiceChangeEvent>;\n\n\t/**\n\t * @param priority Use a higher number for higher priority\n\t */\n\tregister(languageId: string, configuration: LanguageConfiguration, priority?: number): IDisposable;\n\n\tgetLanguageConfiguration(languageId: string): ResolvedLanguageConfiguration;\n\n}\n\nexport class LanguageConfigurationServiceChangeEvent {\n\tconstructor(public readonly languageId: string | undefined) { }\n\n\tpublic affects(languageId: string): boolean {\n\t\treturn !this.languageId ? true : this.languageId === languageId;\n\t}\n}\n\nexport const ILanguageConfigurationService = createDecorator<ILanguageConfigurationService>('languageConfigurationService');\n\nexport class LanguageConfigurationService extends Disposable implements ILanguageConfigurationService {\n\t_serviceBrand: undefined;\n\n\tprivate readonly _registry = this._register(new LanguageConfigurationRegistry());\n\n\tprivate readonly onDidChangeEmitter = this._register(new Emitter<LanguageConfigurationServiceChangeEvent>());\n\tpublic readonly onDidChange = this.onDidChangeEmitter.event;\n\n\tprivate readonly configurations = new Map<string, ResolvedLanguageConfiguration>();\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ILanguageService private readonly languageService: ILanguageService\n\t) {\n\t\tsuper();\n\n\t\tconst languageConfigKeys = new Set(Object.values(customizedLanguageConfigKeys));\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration((e) => {\n\t\t\tconst globalConfigChanged = e.change.keys.some((k) =>\n\t\t\t\tlanguageConfigKeys.has(k)\n\t\t\t);\n\t\t\tconst localConfigChanged = e.change.overrides\n\t\t\t\t.filter(([overrideLangName, keys]) =>\n\t\t\t\t\tkeys.some((k) => languageConfigKeys.has(k))\n\t\t\t\t)\n\t\t\t\t.map(([overrideLangName]) => overrideLangName);\n\n\t\t\tif (globalConfigChanged) {\n\t\t\t\tthis.configurations.clear();\n\t\t\t\tthis.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(undefined));\n\t\t\t} else {\n\t\t\t\tfor (const languageId of localConfigChanged) {\n\t\t\t\t\tif (this.languageService.isRegisteredLanguageId(languageId)) {\n\t\t\t\t\t\tthis.configurations.delete(languageId);\n\t\t\t\t\t\tthis.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(languageId));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._registry.onDidChange((e) => {\n\t\t\tthis.configurations.delete(e.languageId);\n\t\t\tthis.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(e.languageId));\n\t\t}));\n\t}\n\n\tpublic register(languageId: string, configuration: LanguageConfiguration, priority?: number): IDisposable {\n\t\treturn this._registry.register(languageId, configuration, priority);\n\t}\n\n\tpublic getLanguageConfiguration(languageId: string): ResolvedLanguageConfiguration {\n\t\tlet result = this.configurations.get(languageId);\n\t\tif (!result) {\n\t\t\tresult = computeConfig(languageId, this._registry, this.configurationService, this.languageService);\n\t\t\tthis.configurations.set(languageId, result);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nfunction computeConfig(\n\tlanguageId: string,\n\tregistry: LanguageConfigurationRegistry,\n\tconfigurationService: IConfigurationService,\n\tlanguageService: ILanguageService,\n): ResolvedLanguageConfiguration {\n\tlet languageConfig = registry.getLanguageConfiguration(languageId);\n\n\tif (!languageConfig) {\n\t\tif (!languageService.isRegisteredLanguageId(languageId)) {\n\t\t\t// this happens for the null language, which can be returned by monarch.\n\t\t\t// Instead of throwing an error, we just return a default config.\n\t\t\treturn new ResolvedLanguageConfiguration(languageId, {});\n\t\t}\n\t\tlanguageConfig = new ResolvedLanguageConfiguration(languageId, {});\n\t}\n\n\tconst customizedConfig = getCustomizedLanguageConfig(languageConfig.languageId, configurationService);\n\tconst data = combineLanguageConfigurations([languageConfig.underlyingConfig, customizedConfig]);\n\tconst config = new ResolvedLanguageConfiguration(languageConfig.languageId, data);\n\treturn config;\n}\n\nconst customizedLanguageConfigKeys = {\n\tbrackets: 'editor.language.brackets',\n\tcolorizedBracketPairs: 'editor.language.colorizedBracketPairs'\n};\n\nfunction getCustomizedLanguageConfig(languageId: string, configurationService: IConfigurationService): LanguageConfiguration {\n\tconst brackets = configurationService.getValue(customizedLanguageConfigKeys.brackets, {\n\t\toverrideIdentifier: languageId,\n\t});\n\n\tconst colorizedBracketPairs = configurationService.getValue(customizedLanguageConfigKeys.colorizedBracketPairs, {\n\t\toverrideIdentifier: languageId,\n\t});\n\n\treturn {\n\t\tbrackets: validateBracketPairs(brackets),\n\t\tcolorizedBracketPairs: validateBracketPairs(colorizedBracketPairs),\n\t};\n}\n\nfunction validateBracketPairs(data: unknown): CharacterPair[] | undefined {\n\tif (!Array.isArray(data)) {\n\t\treturn undefined;\n\t}\n\treturn data.map(pair => {\n\t\tif (!Array.isArray(pair) || pair.length !== 2) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn [pair[0], pair[1]] as CharacterPair;\n\t}).filter((p): p is CharacterPair => !!p);\n}\n\nexport function getIndentationAtPosition(model: ITextModel, lineNumber: number, column: number): string {\n\tconst lineText = model.getLineContent(lineNumber);\n\tlet indentation = strings.getLeadingWhitespace(lineText);\n\tif (indentation.length > column - 1) {\n\t\tindentation = indentation.substring(0, column - 1);\n\t}\n\treturn indentation;\n}\n\nexport function getScopedLineTokens(model: ITextModel, lineNumber: number, columnNumber?: number): ScopedLineTokens {\n\tmodel.tokenization.forceTokenization(lineNumber);\n\tconst lineTokens = model.tokenization.getLineTokens(lineNumber);\n\tconst column = (typeof columnNumber === 'undefined' ? model.getLineMaxColumn(lineNumber) - 1 : columnNumber - 1);\n\treturn createScopedLineTokens(lineTokens, column);\n}\n\nclass ComposedLanguageConfiguration {\n\tprivate readonly _entries: LanguageConfigurationContribution[];\n\tprivate _order: number;\n\tprivate _resolved: ResolvedLanguageConfiguration | null = null;\n\n\tconstructor(public readonly languageId: string) {\n\t\tthis._entries = [];\n\t\tthis._order = 0;\n\t\tthis._resolved = null;\n\t}\n\n\tpublic register(\n\t\tconfiguration: LanguageConfiguration,\n\t\tpriority: number\n\t): IDisposable {\n\t\tconst entry = new LanguageConfigurationContribution(\n\t\t\tconfiguration,\n\t\t\tpriority,\n\t\t\t++this._order\n\t\t);\n\t\tthis._entries.push(entry);\n\t\tthis._resolved = null;\n\t\treturn toDisposable(() => {\n\t\t\tfor (let i = 0; i < this._entries.length; i++) {\n\t\t\t\tif (this._entries[i] === entry) {\n\t\t\t\t\tthis._entries.splice(i, 1);\n\t\t\t\t\tthis._resolved = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getResolvedConfiguration(): ResolvedLanguageConfiguration | null {\n\t\tif (!this._resolved) {\n\t\t\tconst config = this._resolve();\n\t\t\tif (config) {\n\t\t\t\tthis._resolved = new ResolvedLanguageConfiguration(\n\t\t\t\t\tthis.languageId,\n\t\t\t\t\tconfig\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn this._resolved;\n\t}\n\n\tprivate _resolve(): LanguageConfiguration | null {\n\t\tif (this._entries.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tthis._entries.sort(LanguageConfigurationContribution.cmp);\n\t\treturn combineLanguageConfigurations(this._entries.map(e => e.configuration));\n\t}\n}\n\nfunction combineLanguageConfigurations(configs: LanguageConfiguration[]): LanguageConfiguration {\n\tlet result: ExplicitLanguageConfiguration = {\n\t\tcomments: undefined,\n\t\tbrackets: undefined,\n\t\twordPattern: undefined,\n\t\tindentationRules: undefined,\n\t\tonEnterRules: undefined,\n\t\tautoClosingPairs: undefined,\n\t\tsurroundingPairs: undefined,\n\t\tautoCloseBefore: undefined,\n\t\tfolding: undefined,\n\t\tcolorizedBracketPairs: undefined,\n\t\t__electricCharacterSupport: undefined,\n\t};\n\tfor (const entry of configs) {\n\t\tresult = {\n\t\t\tcomments: entry.comments || result.comments,\n\t\t\tbrackets: entry.brackets || result.brackets,\n\t\t\twordPattern: entry.wordPattern || result.wordPattern,\n\t\t\tindentationRules: entry.indentationRules || result.indentationRules,\n\t\t\tonEnterRules: entry.onEnterRules || result.onEnterRules,\n\t\t\tautoClosingPairs: entry.autoClosingPairs || result.autoClosingPairs,\n\t\t\tsurroundingPairs: entry.surroundingPairs || result.surroundingPairs,\n\t\t\tautoCloseBefore: entry.autoCloseBefore || result.autoCloseBefore,\n\t\t\tfolding: entry.folding || result.folding,\n\t\t\tcolorizedBracketPairs: entry.colorizedBracketPairs || result.colorizedBracketPairs,\n\t\t\t__electricCharacterSupport: entry.__electricCharacterSupport || result.__electricCharacterSupport,\n\t\t};\n\t}\n\n\treturn result;\n}\n\nclass LanguageConfigurationContribution {\n\tconstructor(\n\t\tpublic readonly configuration: LanguageConfiguration,\n\t\tpublic readonly priority: number,\n\t\tpublic readonly order: number\n\t) { }\n\n\tpublic static cmp(a: LanguageConfigurationContribution, b: LanguageConfigurationContribution) {\n\t\tif (a.priority === b.priority) {\n\t\t\t// higher order last\n\t\t\treturn a.order - b.order;\n\t\t}\n\t\t// higher priority last\n\t\treturn a.priority - b.priority;\n\t}\n}\n\nexport class LanguageConfigurationChangeEvent {\n\tconstructor(public readonly languageId: string) { }\n}\n\nexport class LanguageConfigurationRegistry extends Disposable {\n\tprivate readonly _entries = new Map<string, ComposedLanguageConfiguration>();\n\n\tprivate readonly _onDidChange = this._register(new Emitter<LanguageConfigurationChangeEvent>());\n\tpublic readonly onDidChange: Event<LanguageConfigurationChangeEvent> = this._onDidChange.event;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._register(this.register(PLAINTEXT_LANGUAGE_ID, {\n\t\t\tbrackets: [\n\t\t\t\t['(', ')'],\n\t\t\t\t['[', ']'],\n\t\t\t\t['{', '}'],\n\t\t\t],\n\t\t\tsurroundingPairs: [\n\t\t\t\t{ open: '{', close: '}' },\n\t\t\t\t{ open: '[', close: ']' },\n\t\t\t\t{ open: '(', close: ')' },\n\t\t\t\t{ open: '<', close: '>' },\n\t\t\t\t{ open: '\\\"', close: '\\\"' },\n\t\t\t\t{ open: '\\'', close: '\\'' },\n\t\t\t\t{ open: '`', close: '`' },\n\t\t\t],\n\t\t\tcolorizedBracketPairs: [],\n\t\t\tfolding: {\n\t\t\t\toffSide: true\n\t\t\t}\n\t\t}, 0));\n\t}\n\n\t/**\n\t * @param priority Use a higher number for higher priority\n\t */\n\tpublic register(languageId: string, configuration: LanguageConfiguration, priority: number = 0): IDisposable {\n\t\tlet entries = this._entries.get(languageId);\n\t\tif (!entries) {\n\t\t\tentries = new ComposedLanguageConfiguration(languageId);\n\t\t\tthis._entries.set(languageId, entries);\n\t\t}\n\n\t\tconst disposable = entries.register(configuration, priority);\n\t\tthis._onDidChange.fire(new LanguageConfigurationChangeEvent(languageId));\n\n\t\treturn toDisposable(() => {\n\t\t\tdisposable.dispose();\n\t\t\tthis._onDidChange.fire(new LanguageConfigurationChangeEvent(languageId));\n\t\t});\n\t}\n\n\tpublic getLanguageConfiguration(languageId: string): ResolvedLanguageConfiguration | null {\n\t\tconst entries = this._entries.get(languageId);\n\t\treturn entries?.getResolvedConfiguration() || null;\n\t}\n}\n\n/**\n * Immutable.\n*/\nexport class ResolvedLanguageConfiguration {\n\tprivate _brackets: RichEditBrackets | null;\n\tprivate _electricCharacter: BracketElectricCharacterSupport | null;\n\tprivate readonly _onEnterSupport: OnEnterSupport | null;\n\n\tpublic readonly comments: ICommentsConfiguration | null;\n\tpublic readonly characterPair: CharacterPairSupport;\n\tpublic readonly wordDefinition: RegExp;\n\tpublic readonly indentRulesSupport: IndentRulesSupport | null;\n\tpublic readonly indentationRules: IndentationRule | undefined;\n\tpublic readonly foldingRules: FoldingRules;\n\tpublic readonly bracketsNew: LanguageBracketsConfiguration;\n\n\tconstructor(\n\t\tpublic readonly languageId: string,\n\t\tpublic readonly underlyingConfig: LanguageConfiguration\n\t) {\n\t\tthis._brackets = null;\n\t\tthis._electricCharacter = null;\n\t\tthis._onEnterSupport =\n\t\t\tthis.underlyingConfig.brackets ||\n\t\t\t\tthis.underlyingConfig.indentationRules ||\n\t\t\t\tthis.underlyingConfig.onEnterRules\n\t\t\t\t? new OnEnterSupport(this.underlyingConfig)\n\t\t\t\t: null;\n\t\tthis.comments = ResolvedLanguageConfiguration._handleComments(this.underlyingConfig);\n\t\tthis.characterPair = new CharacterPairSupport(this.underlyingConfig);\n\n\t\tthis.wordDefinition = this.underlyingConfig.wordPattern || DEFAULT_WORD_REGEXP;\n\t\tthis.indentationRules = this.underlyingConfig.indentationRules;\n\t\tif (this.underlyingConfig.indentationRules) {\n\t\t\tthis.indentRulesSupport = new IndentRulesSupport(\n\t\t\t\tthis.underlyingConfig.indentationRules\n\t\t\t);\n\t\t} else {\n\t\t\tthis.indentRulesSupport = null;\n\t\t}\n\t\tthis.foldingRules = this.underlyingConfig.folding || {};\n\n\t\tthis.bracketsNew = new LanguageBracketsConfiguration(\n\t\t\tlanguageId,\n\t\t\tthis.underlyingConfig\n\t\t);\n\t}\n\n\tpublic getWordDefinition(): RegExp {\n\t\treturn ensureValidWordDefinition(this.wordDefinition);\n\t}\n\n\tpublic get brackets(): RichEditBrackets | null {\n\t\tif (!this._brackets && this.underlyingConfig.brackets) {\n\t\t\tthis._brackets = new RichEditBrackets(\n\t\t\t\tthis.languageId,\n\t\t\t\tthis.underlyingConfig.brackets\n\t\t\t);\n\t\t}\n\t\treturn this._brackets;\n\t}\n\n\tpublic get electricCharacter(): BracketElectricCharacterSupport | null {\n\t\tif (!this._electricCharacter) {\n\t\t\tthis._electricCharacter = new BracketElectricCharacterSupport(\n\t\t\t\tthis.brackets\n\t\t\t);\n\t\t}\n\t\treturn this._electricCharacter;\n\t}\n\n\tpublic onEnter(\n\t\tautoIndent: EditorAutoIndentStrategy,\n\t\tpreviousLineText: string,\n\t\tbeforeEnterText: string,\n\t\tafterEnterText: string\n\t): EnterAction | null {\n\t\tif (!this._onEnterSupport) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._onEnterSupport.onEnter(\n\t\t\tautoIndent,\n\t\t\tpreviousLineText,\n\t\t\tbeforeEnterText,\n\t\t\tafterEnterText\n\t\t);\n\t}\n\n\tpublic getAutoClosingPairs(): AutoClosingPairs {\n\t\treturn new AutoClosingPairs(this.characterPair.getAutoClosingPairs());\n\t}\n\n\tpublic getAutoCloseBeforeSet(forQuotes: boolean): string {\n\t\treturn this.characterPair.getAutoCloseBeforeSet(forQuotes);\n\t}\n\n\tpublic getSurroundingPairs(): IAutoClosingPair[] {\n\t\treturn this.characterPair.getSurroundingPairs();\n\t}\n\n\tprivate static _handleComments(\n\t\tconf: LanguageConfiguration\n\t): ICommentsConfiguration | null {\n\t\tconst commentRule = conf.comments;\n\t\tif (!commentRule) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// comment configuration\n\t\tconst comments: ICommentsConfiguration = {};\n\n\t\tif (commentRule.lineComment) {\n\t\t\tcomments.lineCommentToken = commentRule.lineComment;\n\t\t}\n\t\tif (commentRule.blockComment) {\n\t\t\tconst [blockStart, blockEnd] = commentRule.blockComment;\n\t\t\tcomments.blockCommentStartToken = blockStart;\n\t\t\tcomments.blockCommentEndToken = blockEnd;\n\t\t}\n\n\t\treturn comments;\n\t}\n}\n\nregisterSingleton(ILanguageConfigurationService, LanguageConfigurationService, InstantiationType.Delayed);\n"]}