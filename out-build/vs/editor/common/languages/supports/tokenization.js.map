{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/languages/supports/tokenization.ts"],"names":[],"mappings":"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","file":"tokenization.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from 'vs/base/common/color';\nimport { LanguageId, FontStyle, ColorId, StandardTokenType, MetadataConsts } from 'vs/editor/common/encodedTokenAttributes';\n\nexport interface ITokenThemeRule {\n\ttoken: string;\n\tforeground?: string;\n\tbackground?: string;\n\tfontStyle?: string;\n}\n\nexport class ParsedTokenThemeRule {\n\t_parsedThemeRuleBrand: void = undefined;\n\n\treadonly token: string;\n\treadonly index: number;\n\n\t/**\n\t * -1 if not set. An or mask of `FontStyle` otherwise.\n\t */\n\treadonly fontStyle: FontStyle;\n\treadonly foreground: string | null;\n\treadonly background: string | null;\n\n\tconstructor(\n\t\ttoken: string,\n\t\tindex: number,\n\t\tfontStyle: number,\n\t\tforeground: string | null,\n\t\tbackground: string | null,\n\t) {\n\t\tthis.token = token;\n\t\tthis.index = index;\n\t\tthis.fontStyle = fontStyle;\n\t\tthis.foreground = foreground;\n\t\tthis.background = background;\n\t}\n}\n\n/**\n * Parse a raw theme into rules.\n */\nexport function parseTokenTheme(source: ITokenThemeRule[]): ParsedTokenThemeRule[] {\n\tif (!source || !Array.isArray(source)) {\n\t\treturn [];\n\t}\n\tconst result: ParsedTokenThemeRule[] = [];\n\tlet resultLen = 0;\n\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\tconst entry = source[i];\n\n\t\tlet fontStyle: number = FontStyle.NotSet;\n\t\tif (typeof entry.fontStyle === 'string') {\n\t\t\tfontStyle = FontStyle.None;\n\n\t\t\tconst segments = entry.fontStyle.split(' ');\n\t\t\tfor (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n\t\t\t\tconst segment = segments[j];\n\t\t\t\tswitch (segment) {\n\t\t\t\t\tcase 'italic':\n\t\t\t\t\t\tfontStyle = fontStyle | FontStyle.Italic;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bold':\n\t\t\t\t\t\tfontStyle = fontStyle | FontStyle.Bold;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'underline':\n\t\t\t\t\t\tfontStyle = fontStyle | FontStyle.Underline;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'strikethrough':\n\t\t\t\t\t\tfontStyle = fontStyle | FontStyle.Strikethrough;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet foreground: string | null = null;\n\t\tif (typeof entry.foreground === 'string') {\n\t\t\tforeground = entry.foreground;\n\t\t}\n\n\t\tlet background: string | null = null;\n\t\tif (typeof entry.background === 'string') {\n\t\t\tbackground = entry.background;\n\t\t}\n\n\t\tresult[resultLen++] = new ParsedTokenThemeRule(\n\t\t\tentry.token || '',\n\t\t\ti,\n\t\t\tfontStyle,\n\t\t\tforeground,\n\t\t\tbackground\n\t\t);\n\t}\n\n\treturn result;\n}\n\n/**\n * Resolve rules (i.e. inheritance).\n */\nfunction resolveParsedTokenThemeRules(parsedThemeRules: ParsedTokenThemeRule[], customTokenColors: string[]): TokenTheme {\n\n\t// Sort rules lexicographically, and then by index if necessary\n\tparsedThemeRules.sort((a, b) => {\n\t\tconst r = strcmp(a.token, b.token);\n\t\tif (r !== 0) {\n\t\t\treturn r;\n\t\t}\n\t\treturn a.index - b.index;\n\t});\n\n\t// Determine defaults\n\tlet defaultFontStyle = FontStyle.None;\n\tlet defaultForeground = '000000';\n\tlet defaultBackground = 'ffffff';\n\twhile (parsedThemeRules.length >= 1 && parsedThemeRules[0].token === '') {\n\t\tconst incomingDefaults = parsedThemeRules.shift()!;\n\t\tif (incomingDefaults.fontStyle !== FontStyle.NotSet) {\n\t\t\tdefaultFontStyle = incomingDefaults.fontStyle;\n\t\t}\n\t\tif (incomingDefaults.foreground !== null) {\n\t\t\tdefaultForeground = incomingDefaults.foreground;\n\t\t}\n\t\tif (incomingDefaults.background !== null) {\n\t\t\tdefaultBackground = incomingDefaults.background;\n\t\t}\n\t}\n\tconst colorMap = new ColorMap();\n\n\t// start with token colors from custom token themes\n\tfor (const color of customTokenColors) {\n\t\tcolorMap.getId(color);\n\t}\n\n\n\tconst foregroundColorId = colorMap.getId(defaultForeground);\n\tconst backgroundColorId = colorMap.getId(defaultBackground);\n\n\tconst defaults = new ThemeTrieElementRule(defaultFontStyle, foregroundColorId, backgroundColorId);\n\tconst root = new ThemeTrieElement(defaults);\n\tfor (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n\t\tconst rule = parsedThemeRules[i];\n\t\troot.insert(rule.token, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n\t}\n\n\treturn new TokenTheme(colorMap, root);\n}\n\nconst colorRegExp = /^#?([0-9A-Fa-f]{6})([0-9A-Fa-f]{2})?$/;\n\nexport class ColorMap {\n\n\tprivate _lastColorId: number;\n\tprivate readonly _id2color: Color[];\n\tprivate readonly _color2id: Map<string, ColorId>;\n\n\tconstructor() {\n\t\tthis._lastColorId = 0;\n\t\tthis._id2color = [];\n\t\tthis._color2id = new Map<string, ColorId>();\n\t}\n\n\tpublic getId(color: string | null): ColorId {\n\t\tif (color === null) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst match = color.match(colorRegExp);\n\t\tif (!match) {\n\t\t\tthrow new Error('Illegal value for token color: ' + color);\n\t\t}\n\t\tcolor = match[1].toUpperCase();\n\t\tlet value = this._color2id.get(color);\n\t\tif (value) {\n\t\t\treturn value;\n\t\t}\n\t\tvalue = ++this._lastColorId;\n\t\tthis._color2id.set(color, value);\n\t\tthis._id2color[value] = Color.fromHex('#' + color);\n\t\treturn value;\n\t}\n\n\tpublic getColorMap(): Color[] {\n\t\treturn this._id2color.slice(0);\n\t}\n\n}\n\nexport class TokenTheme {\n\n\tpublic static createFromRawTokenTheme(source: ITokenThemeRule[], customTokenColors: string[]): TokenTheme {\n\t\treturn this.createFromParsedTokenTheme(parseTokenTheme(source), customTokenColors);\n\t}\n\n\tpublic static createFromParsedTokenTheme(source: ParsedTokenThemeRule[], customTokenColors: string[]): TokenTheme {\n\t\treturn resolveParsedTokenThemeRules(source, customTokenColors);\n\t}\n\n\tprivate readonly _colorMap: ColorMap;\n\tprivate readonly _root: ThemeTrieElement;\n\tprivate readonly _cache: Map<string, number>;\n\n\tconstructor(colorMap: ColorMap, root: ThemeTrieElement) {\n\t\tthis._colorMap = colorMap;\n\t\tthis._root = root;\n\t\tthis._cache = new Map<string, number>();\n\t}\n\n\tpublic getColorMap(): Color[] {\n\t\treturn this._colorMap.getColorMap();\n\t}\n\n\t/**\n\t * used for testing purposes\n\t */\n\tpublic getThemeTrieElement(): ExternalThemeTrieElement {\n\t\treturn this._root.toExternalThemeTrieElement();\n\t}\n\n\tpublic _match(token: string): ThemeTrieElementRule {\n\t\treturn this._root.match(token);\n\t}\n\n\tpublic match(languageId: LanguageId, token: string): number {\n\t\t// The cache contains the metadata without the language bits set.\n\t\tlet result = this._cache.get(token);\n\t\tif (typeof result === 'undefined') {\n\t\t\tconst rule = this._match(token);\n\t\t\tconst standardToken = toStandardTokenType(token);\n\t\t\tresult = (\n\t\t\t\trule.metadata\n\t\t\t\t| (standardToken << MetadataConsts.TOKEN_TYPE_OFFSET)\n\t\t\t) >>> 0;\n\t\t\tthis._cache.set(token, result);\n\t\t}\n\n\t\treturn (\n\t\t\tresult\n\t\t\t| (languageId << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t) >>> 0;\n\t}\n}\n\nconst STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|regexp)\\b/;\nexport function toStandardTokenType(tokenType: string): StandardTokenType {\n\tconst m = tokenType.match(STANDARD_TOKEN_TYPE_REGEXP);\n\tif (!m) {\n\t\treturn StandardTokenType.Other;\n\t}\n\tswitch (m[1]) {\n\t\tcase 'comment':\n\t\t\treturn StandardTokenType.Comment;\n\t\tcase 'string':\n\t\t\treturn StandardTokenType.String;\n\t\tcase 'regex':\n\t\t\treturn StandardTokenType.RegEx;\n\t\tcase 'regexp':\n\t\t\treturn StandardTokenType.RegEx;\n\t}\n\tthrow new Error('Unexpected match for standard token type!');\n}\n\nexport function strcmp(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t}\n\tif (a > b) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport class ThemeTrieElementRule {\n\t_themeTrieElementRuleBrand: void = undefined;\n\n\tprivate _fontStyle: FontStyle;\n\tprivate _foreground: ColorId;\n\tprivate _background: ColorId;\n\tpublic metadata: number;\n\n\tconstructor(fontStyle: FontStyle, foreground: ColorId, background: ColorId) {\n\t\tthis._fontStyle = fontStyle;\n\t\tthis._foreground = foreground;\n\t\tthis._background = background;\n\t\tthis.metadata = (\n\t\t\t(this._fontStyle << MetadataConsts.FONT_STYLE_OFFSET)\n\t\t\t| (this._foreground << MetadataConsts.FOREGROUND_OFFSET)\n\t\t\t| (this._background << MetadataConsts.BACKGROUND_OFFSET)\n\t\t) >>> 0;\n\t}\n\n\tpublic clone(): ThemeTrieElementRule {\n\t\treturn new ThemeTrieElementRule(this._fontStyle, this._foreground, this._background);\n\t}\n\n\tpublic acceptOverwrite(fontStyle: FontStyle, foreground: ColorId, background: ColorId): void {\n\t\tif (fontStyle !== FontStyle.NotSet) {\n\t\t\tthis._fontStyle = fontStyle;\n\t\t}\n\t\tif (foreground !== ColorId.None) {\n\t\t\tthis._foreground = foreground;\n\t\t}\n\t\tif (background !== ColorId.None) {\n\t\t\tthis._background = background;\n\t\t}\n\t\tthis.metadata = (\n\t\t\t(this._fontStyle << MetadataConsts.FONT_STYLE_OFFSET)\n\t\t\t| (this._foreground << MetadataConsts.FOREGROUND_OFFSET)\n\t\t\t| (this._background << MetadataConsts.BACKGROUND_OFFSET)\n\t\t) >>> 0;\n\t}\n}\n\nexport class ExternalThemeTrieElement {\n\n\tpublic readonly mainRule: ThemeTrieElementRule;\n\tpublic readonly children: Map<string, ExternalThemeTrieElement>;\n\n\tconstructor(\n\t\tmainRule: ThemeTrieElementRule,\n\t\tchildren: Map<string, ExternalThemeTrieElement> | { [key: string]: ExternalThemeTrieElement } = new Map<string, ExternalThemeTrieElement>()\n\t) {\n\t\tthis.mainRule = mainRule;\n\t\tif (children instanceof Map) {\n\t\t\tthis.children = children;\n\t\t} else {\n\t\t\tthis.children = new Map<string, ExternalThemeTrieElement>();\n\t\t\tfor (const key in children) {\n\t\t\t\tthis.children.set(key, children[key]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class ThemeTrieElement {\n\t_themeTrieElementBrand: void = undefined;\n\n\tprivate readonly _mainRule: ThemeTrieElementRule;\n\tprivate readonly _children: Map<string, ThemeTrieElement>;\n\n\tconstructor(mainRule: ThemeTrieElementRule) {\n\t\tthis._mainRule = mainRule;\n\t\tthis._children = new Map<string, ThemeTrieElement>();\n\t}\n\n\t/**\n\t * used for testing purposes\n\t */\n\tpublic toExternalThemeTrieElement(): ExternalThemeTrieElement {\n\t\tconst children = new Map<string, ExternalThemeTrieElement>();\n\t\tthis._children.forEach((element, index) => {\n\t\t\tchildren.set(index, element.toExternalThemeTrieElement());\n\t\t});\n\t\treturn new ExternalThemeTrieElement(this._mainRule, children);\n\t}\n\n\tpublic match(token: string): ThemeTrieElementRule {\n\t\tif (token === '') {\n\t\t\treturn this._mainRule;\n\t\t}\n\n\t\tconst dotIndex = token.indexOf('.');\n\t\tlet head: string;\n\t\tlet tail: string;\n\t\tif (dotIndex === -1) {\n\t\t\thead = token;\n\t\t\ttail = '';\n\t\t} else {\n\t\t\thead = token.substring(0, dotIndex);\n\t\t\ttail = token.substring(dotIndex + 1);\n\t\t}\n\n\t\tconst child = this._children.get(head);\n\t\tif (typeof child !== 'undefined') {\n\t\t\treturn child.match(tail);\n\t\t}\n\n\t\treturn this._mainRule;\n\t}\n\n\tpublic insert(token: string, fontStyle: FontStyle, foreground: ColorId, background: ColorId): void {\n\t\tif (token === '') {\n\t\t\t// Merge into the main rule\n\t\t\tthis._mainRule.acceptOverwrite(fontStyle, foreground, background);\n\t\t\treturn;\n\t\t}\n\n\t\tconst dotIndex = token.indexOf('.');\n\t\tlet head: string;\n\t\tlet tail: string;\n\t\tif (dotIndex === -1) {\n\t\t\thead = token;\n\t\t\ttail = '';\n\t\t} else {\n\t\t\thead = token.substring(0, dotIndex);\n\t\t\ttail = token.substring(dotIndex + 1);\n\t\t}\n\n\t\tlet child = this._children.get(head);\n\t\tif (typeof child === 'undefined') {\n\t\t\tchild = new ThemeTrieElement(this._mainRule.clone());\n\t\t\tthis._children.set(head, child);\n\t\t}\n\n\t\tchild.insert(tail, fontStyle, foreground, background);\n\t}\n}\n\nexport function generateTokensCSSForColorMap(colorMap: readonly Color[]): string {\n\tconst rules: string[] = [];\n\tfor (let i = 1, len = colorMap.length; i < len; i++) {\n\t\tconst color = colorMap[i];\n\t\trules[i] = `.mtk${i} { color: ${color}; }`;\n\t}\n\trules.push('.mtki { font-style: italic; }');\n\trules.push('.mtkb { font-weight: bold; }');\n\trules.push('.mtku { text-decoration: underline; text-underline-position: under; }');\n\trules.push('.mtks { text-decoration: line-through; }');\n\trules.push('.mtks.mtku { text-decoration: underline line-through; text-underline-position: under; }');\n\treturn rules.join('\\n');\n}\n"]}