{"version":3,"sources":["vs/editor/common/languages/modesRegistry.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG,6BAA6B;IAChB,QAAA,GAAG,GAAU;QACzB,aAAa,EAAE,sBAAsB;KACrC,CAAC;IAEF,MAAa,GAAG;QAOf;YAHiB,MAAC,GAAuB,IAAI,WAAG,EAAY,CAAC;YAC7C,yBAAoB,GAAgB,IAAI,CAAC,CAAC,CAAqB,KAAK,CAAC;YAGpF,IAAI,CAAC,CAAC,GAAY,EAAE,CAAC;QACtB,CAAC;QAEM,gBAAgB,CAAC,GAA4B;YACnD,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,IAAI,CAAC,CAAC,CAAqB,IAAI,CAAC,SAAS,CAAC,CAAC;YAC3C,OAAO;gBACN,OAAO,EAAE,GAAG,EAAE;oBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC,CAAU,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;wBAC3D,IAAI,IAAI,CAAC,CAAC,CAAU,CAAC,CAAC,KAAK,GAAG,EAAE;4BAC/B,IAAI,CAAC,CAAC,CAAU,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BAC7B,OAAO;yBACP;qBACD;gBACF,CAAC;aACD,CAAC;QACH,CAAC;QAEM,YAAY;YAClB,OAAO,IAAI,CAAC,CAAC,CAAU;QACxB,CAAC;KACD;IA7BD,kBA6BC;IAEY,QAAA,GAAG,GAAa,IAAI,GAAG,EAAkB,CAAC;IACvD,cAAG,CAAM,GAAG,CAAC,WAAG,CAAQ,aAAa,EAAE,WAAG,CAAW,CAAC;IAEzC,QAAA,GAAG,GAAqB,WAAW,CAAC;IACpC,QAAA,GAAG,GAAmB,MAAM,CAAC;IAE1C,WAAG,CAAW,gBAAgB,CAAC;QAC9B,EAAE,EAAE,WAAG;QACP,UAAU,EAAE,CAAC,WAAG,CAAiB;QACjC,OAAO,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAiB,EAAE,IAAY,CAAC,EAAE,MAAM,CAAC;QAChE,SAAS,EAAE,CAAC,UAAG,CAAG,IAAI,CAAC;KACvB,CAAC,CAAC;IAEH,cAAG,CAAM,EAAE,CAAyB,2BAAuB,CAAC,aAAa,CAAC;SACxE,6BAA6B,CAAC,CAAC;YAC/B,SAAS,EAAE;gBACV,aAAa,EAAE;oBACd,6CAA6C,EAAE,KAAK;oBACpD,6CAA6C,EAAE,KAAK;iBACpD;aACD;SACD,CAAC,CAAC,CAAC","file":"modesRegistry.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { ILanguageExtensionPoint } from 'vs/editor/common/languages/language';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Mimes } from 'vs/base/common/mime';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from 'vs/platform/configuration/common/configurationRegistry';\n\n// Define extension point ids\nexport const Extensions = {\n\tModesRegistry: 'editor.modesRegistry'\n};\n\nexport class EditorModesRegistry {\n\n\tprivate readonly _languages: ILanguageExtensionPoint[];\n\n\tprivate readonly _onDidChangeLanguages = new Emitter<void>();\n\tpublic readonly onDidChangeLanguages: Event<void> = this._onDidChangeLanguages.event;\n\n\tconstructor() {\n\t\tthis._languages = [];\n\t}\n\n\tpublic registerLanguage(def: ILanguageExtensionPoint): IDisposable {\n\t\tthis._languages.push(def);\n\t\tthis._onDidChangeLanguages.fire(undefined);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tfor (let i = 0, len = this._languages.length; i < len; i++) {\n\t\t\t\t\tif (this._languages[i] === def) {\n\t\t\t\t\t\tthis._languages.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic getLanguages(): ReadonlyArray<ILanguageExtensionPoint> {\n\t\treturn this._languages;\n\t}\n}\n\nexport const ModesRegistry = new EditorModesRegistry();\nRegistry.add(Extensions.ModesRegistry, ModesRegistry);\n\nexport const PLAINTEXT_LANGUAGE_ID = 'plaintext';\nexport const PLAINTEXT_EXTENSION = '.txt';\n\nModesRegistry.registerLanguage({\n\tid: PLAINTEXT_LANGUAGE_ID,\n\textensions: [PLAINTEXT_EXTENSION],\n\taliases: [nls.localize('plainText.alias', \"Plain Text\"), 'text'],\n\tmimetypes: [Mimes.text]\n});\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration)\n\t.registerDefaultConfigurations([{\n\t\toverrides: {\n\t\t\t'[plaintext]': {\n\t\t\t\t'editor.unicodeHighlight.ambiguousCharacters': false,\n\t\t\t\t'editor.unicodeHighlight.invisibleCharacters': false\n\t\t\t}\n\t\t}\n\t}]);\n"]}