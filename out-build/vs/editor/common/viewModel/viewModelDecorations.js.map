{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/viewModel/viewModelDecorations.ts"],"names":[],"mappings":"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","file":"viewModelDecorations.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IEditorConfiguration } from 'vs/editor/common/config/editorConfiguration';\nimport { IModelDecoration, ITextModel, PositionAffinity } from 'vs/editor/common/model';\nimport { IViewModelLines } from 'vs/editor/common/viewModel/viewModelLines';\nimport { ICoordinatesConverter, InlineDecoration, InlineDecorationType, ViewModelDecoration } from 'vs/editor/common/viewModel';\nimport { filterValidationDecorations } from 'vs/editor/common/config/editorOptions';\nimport { StandardTokenType } from 'vs/editor/common/encodedTokenAttributes';\n\nexport interface IDecorationsViewportData {\n\t/**\n\t * decorations in the viewport.\n\t */\n\treadonly decorations: ViewModelDecoration[];\n\t/**\n\t * inline decorations grouped by each line in the viewport.\n\t */\n\treadonly inlineDecorations: InlineDecoration[][];\n}\n\nexport class ViewModelDecorations implements IDisposable {\n\n\tprivate readonly editorId: number;\n\tprivate readonly model: ITextModel;\n\tprivate readonly configuration: IEditorConfiguration;\n\tprivate readonly _linesCollection: IViewModelLines;\n\tprivate readonly _coordinatesConverter: ICoordinatesConverter;\n\n\tprivate _decorationsCache: { [decorationId: string]: ViewModelDecoration };\n\n\tprivate _cachedModelDecorationsResolver: IDecorationsViewportData | null;\n\tprivate _cachedModelDecorationsResolverViewRange: Range | null;\n\n\tconstructor(editorId: number, model: ITextModel, configuration: IEditorConfiguration, linesCollection: IViewModelLines, coordinatesConverter: ICoordinatesConverter) {\n\t\tthis.editorId = editorId;\n\t\tthis.model = model;\n\t\tthis.configuration = configuration;\n\t\tthis._linesCollection = linesCollection;\n\t\tthis._coordinatesConverter = coordinatesConverter;\n\t\tthis._decorationsCache = Object.create(null);\n\t\tthis._cachedModelDecorationsResolver = null;\n\t\tthis._cachedModelDecorationsResolverViewRange = null;\n\t}\n\n\tprivate _clearCachedModelDecorationsResolver(): void {\n\t\tthis._cachedModelDecorationsResolver = null;\n\t\tthis._cachedModelDecorationsResolverViewRange = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._decorationsCache = Object.create(null);\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tpublic reset(): void {\n\t\tthis._decorationsCache = Object.create(null);\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tpublic onModelDecorationsChanged(): void {\n\t\tthis._decorationsCache = Object.create(null);\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tpublic onLineMappingChanged(): void {\n\t\tthis._decorationsCache = Object.create(null);\n\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tprivate _getOrCreateViewModelDecoration(modelDecoration: IModelDecoration): ViewModelDecoration {\n\t\tconst id = modelDecoration.id;\n\t\tlet r = this._decorationsCache[id];\n\t\tif (!r) {\n\t\t\tconst modelRange = modelDecoration.range;\n\t\t\tconst options = modelDecoration.options;\n\t\t\tlet viewRange: Range;\n\t\t\tif (options.isWholeLine) {\n\t\t\t\tconst start = this._coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.startLineNumber, 1), PositionAffinity.Left, false, true);\n\t\t\t\tconst end = this._coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.endLineNumber, this.model.getLineMaxColumn(modelRange.endLineNumber)), PositionAffinity.Right);\n\t\t\t\tviewRange = new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t\t\t} else {\n\t\t\t\t// For backwards compatibility reasons, we want injected text before any decoration.\n\t\t\t\t// Thus, move decorations to the right.\n\t\t\t\tviewRange = this._coordinatesConverter.convertModelRangeToViewRange(modelRange, PositionAffinity.Right);\n\t\t\t}\n\t\t\tr = new ViewModelDecoration(viewRange, options);\n\t\t\tthis._decorationsCache[id] = r;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic getMinimapDecorationsInRange(range: Range): ViewModelDecoration[] {\n\t\treturn this._getDecorationsInRange(range, true, false).decorations;\n\t}\n\n\tpublic getDecorationsViewportData(viewRange: Range): IDecorationsViewportData {\n\t\tlet cacheIsValid = (this._cachedModelDecorationsResolver !== null);\n\t\tcacheIsValid = cacheIsValid && (viewRange.equalsRange(this._cachedModelDecorationsResolverViewRange));\n\t\tif (!cacheIsValid) {\n\t\t\tthis._cachedModelDecorationsResolver = this._getDecorationsInRange(viewRange, false, false);\n\t\t\tthis._cachedModelDecorationsResolverViewRange = viewRange;\n\t\t}\n\t\treturn this._cachedModelDecorationsResolver!;\n\t}\n\n\tpublic getInlineDecorationsOnLine(lineNumber: number, onlyMinimapDecorations: boolean = false, onlyMarginDecorations: boolean = false): InlineDecoration[] {\n\t\tconst range = new Range(lineNumber, this._linesCollection.getViewLineMinColumn(lineNumber), lineNumber, this._linesCollection.getViewLineMaxColumn(lineNumber));\n\t\treturn this._getDecorationsInRange(range, onlyMinimapDecorations, onlyMarginDecorations).inlineDecorations[0];\n\t}\n\n\tprivate _getDecorationsInRange(viewRange: Range, onlyMinimapDecorations: boolean, onlyMarginDecorations: boolean): IDecorationsViewportData {\n\t\tconst modelDecorations = this._linesCollection.getDecorationsInRange(viewRange, this.editorId, filterValidationDecorations(this.configuration.options), onlyMinimapDecorations, onlyMarginDecorations);\n\t\tconst startLineNumber = viewRange.startLineNumber;\n\t\tconst endLineNumber = viewRange.endLineNumber;\n\n\t\tconst decorationsInViewport: ViewModelDecoration[] = [];\n\t\tlet decorationsInViewportLen = 0;\n\t\tconst inlineDecorations: InlineDecoration[][] = [];\n\t\tfor (let j = startLineNumber; j <= endLineNumber; j++) {\n\t\t\tinlineDecorations[j - startLineNumber] = [];\n\t\t}\n\n\t\tfor (let i = 0, len = modelDecorations.length; i < len; i++) {\n\t\t\tconst modelDecoration = modelDecorations[i];\n\t\t\tconst decorationOptions = modelDecoration.options;\n\n\t\t\tif (!isModelDecorationVisible(this.model, modelDecoration)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst viewModelDecoration = this._getOrCreateViewModelDecoration(modelDecoration);\n\t\t\tconst viewRange = viewModelDecoration.range;\n\n\t\t\tdecorationsInViewport[decorationsInViewportLen++] = viewModelDecoration;\n\n\t\t\tif (decorationOptions.inlineClassName) {\n\t\t\t\tconst inlineDecoration = new InlineDecoration(viewRange, decorationOptions.inlineClassName, decorationOptions.inlineClassNameAffectsLetterSpacing ? InlineDecorationType.RegularAffectingLetterSpacing : InlineDecorationType.Regular);\n\t\t\t\tconst intersectedStartLineNumber = Math.max(startLineNumber, viewRange.startLineNumber);\n\t\t\t\tconst intersectedEndLineNumber = Math.min(endLineNumber, viewRange.endLineNumber);\n\t\t\t\tfor (let j = intersectedStartLineNumber; j <= intersectedEndLineNumber; j++) {\n\t\t\t\t\tinlineDecorations[j - startLineNumber].push(inlineDecoration);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (decorationOptions.beforeContentClassName) {\n\t\t\t\tif (startLineNumber <= viewRange.startLineNumber && viewRange.startLineNumber <= endLineNumber) {\n\t\t\t\t\tconst inlineDecoration = new InlineDecoration(\n\t\t\t\t\t\tnew Range(viewRange.startLineNumber, viewRange.startColumn, viewRange.startLineNumber, viewRange.startColumn),\n\t\t\t\t\t\tdecorationOptions.beforeContentClassName,\n\t\t\t\t\t\tInlineDecorationType.Before\n\t\t\t\t\t);\n\t\t\t\t\tinlineDecorations[viewRange.startLineNumber - startLineNumber].push(inlineDecoration);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (decorationOptions.afterContentClassName) {\n\t\t\t\tif (startLineNumber <= viewRange.endLineNumber && viewRange.endLineNumber <= endLineNumber) {\n\t\t\t\t\tconst inlineDecoration = new InlineDecoration(\n\t\t\t\t\t\tnew Range(viewRange.endLineNumber, viewRange.endColumn, viewRange.endLineNumber, viewRange.endColumn),\n\t\t\t\t\t\tdecorationOptions.afterContentClassName,\n\t\t\t\t\t\tInlineDecorationType.After\n\t\t\t\t\t);\n\t\t\t\t\tinlineDecorations[viewRange.endLineNumber - startLineNumber].push(inlineDecoration);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdecorations: decorationsInViewport,\n\t\t\tinlineDecorations: inlineDecorations\n\t\t};\n\t}\n}\n\nexport function isModelDecorationVisible(model: ITextModel, decoration: IModelDecoration): boolean {\n\tif (decoration.options.hideInCommentTokens && isModelDecorationInComment(model, decoration)) {\n\t\treturn false;\n\t}\n\n\tif (decoration.options.hideInStringTokens && isModelDecorationInString(model, decoration)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function isModelDecorationInComment(model: ITextModel, decoration: IModelDecoration): boolean {\n\treturn testTokensInRange(\n\t\tmodel,\n\t\tdecoration.range,\n\t\t(tokenType) => tokenType === StandardTokenType.Comment\n\t);\n}\n\nexport function isModelDecorationInString(model: ITextModel, decoration: IModelDecoration): boolean {\n\treturn testTokensInRange(\n\t\tmodel,\n\t\tdecoration.range,\n\t\t(tokenType) => tokenType === StandardTokenType.String\n\t);\n}\n\n/**\n * Calls the callback for every token that intersects the range.\n * If the callback returns `false`, iteration stops and `false` is returned.\n * Otherwise, `true` is returned.\n */\nfunction testTokensInRange(model: ITextModel, range: Range, callback: (tokenType: StandardTokenType) => boolean): boolean {\n\tfor (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n\t\tconst lineTokens = model.tokenization.getLineTokens(lineNumber);\n\t\tconst isFirstLine = lineNumber === range.startLineNumber;\n\t\tconst isEndLine = lineNumber === range.endLineNumber;\n\n\t\tlet tokenIdx = isFirstLine ? lineTokens.findTokenIndexAtOffset(range.startColumn - 1) : 0;\n\t\twhile (tokenIdx < lineTokens.getCount()) {\n\t\t\tif (isEndLine) {\n\t\t\t\tconst startOffset = lineTokens.getStartOffset(tokenIdx);\n\t\t\t\tif (startOffset > range.endColumn - 1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst callbackResult = callback(lineTokens.getStandardTokenType(tokenIdx));\n\t\t\tif (!callbackResult) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ttokenIdx++;\n\t\t}\n\t}\n\treturn true;\n}\n"]}