{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/common/viewModel/viewModelImpl.ts"],"names":[],"mappings":"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","file":"viewModelImpl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ArrayQueue } from 'vs/base/common/arrays';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Color } from 'vs/base/common/color';\nimport { Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport * as strings from 'vs/base/common/strings';\nimport { ConfigurationChangedEvent, EditorOption, EDITOR_FONT_DEFAULTS, filterValidationDecorations } from 'vs/editor/common/config/editorOptions';\nimport { CursorsController } from 'vs/editor/common/cursor/cursor';\nimport { CursorConfiguration, CursorState, EditOperationType, IColumnSelectData, PartialCursorState } from 'vs/editor/common/cursorCommon';\nimport { CursorChangeReason } from 'vs/editor/common/cursorEvents';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ISelection, Selection } from 'vs/editor/common/core/selection';\nimport { ICommand, ICursorState, IViewState, ScrollType } from 'vs/editor/common/editorCommon';\nimport { IEditorConfiguration } from 'vs/editor/common/config/editorConfiguration';\nimport { EndOfLinePreference, IAttachedView, ICursorStateComputer, IIdentifiedSingleEditOperation, ITextModel, PositionAffinity, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { IActiveIndentGuideInfo, BracketGuideOptions, IndentGuide } from 'vs/editor/common/textModelGuides';\nimport { ModelDecorationMinimapOptions, ModelDecorationOptions, ModelDecorationOverviewRulerOptions } from 'vs/editor/common/model/textModel';\nimport * as textModelEvents from 'vs/editor/common/textModelEvents';\nimport { TokenizationRegistry } from 'vs/editor/common/languages';\nimport { ColorId } from 'vs/editor/common/encodedTokenAttributes';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { tokenizeLineToHTML } from 'vs/editor/common/languages/textToHtmlTokenizer';\nimport { EditorTheme } from 'vs/editor/common/editorTheme';\nimport * as viewEvents from 'vs/editor/common/viewEvents';\nimport { ViewLayout } from 'vs/editor/common/viewLayout/viewLayout';\nimport { MinimapTokensColorTracker } from 'vs/editor/common/viewModel/minimapTokensColorTracker';\nimport { ILineBreaksComputer, ILineBreaksComputerFactory, InjectedText } from 'vs/editor/common/modelLineProjectionData';\nimport { ViewEventHandler } from 'vs/editor/common/viewEventHandler';\nimport { ICoordinatesConverter, InlineDecoration, IViewModel, IWhitespaceChangeAccessor, MinimapLinesRenderingData, OverviewRulerDecorationsGroup, ViewLineData, ViewLineRenderingData, ViewModelDecoration } from 'vs/editor/common/viewModel';\nimport { ViewModelDecorations } from 'vs/editor/common/viewModel/viewModelDecorations';\nimport { FocusChangedEvent, HiddenAreasChangedEvent, ModelContentChangedEvent, ModelDecorationsChangedEvent, ModelLanguageChangedEvent, ModelLanguageConfigurationChangedEvent, ModelOptionsChangedEvent, ModelTokensChangedEvent, OutgoingViewModelEvent, ReadOnlyEditAttemptEvent, ScrollChangedEvent, ViewModelEventDispatcher, ViewModelEventsCollector, ViewZonesChangedEvent } from 'vs/editor/common/viewModelEventDispatcher';\nimport { IViewModelLines, ViewModelLinesFromModelAsIs, ViewModelLinesFromProjectedModel } from 'vs/editor/common/viewModel/viewModelLines';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\n\nconst USE_IDENTITY_LINES_COLLECTION = true;\n\nexport class ViewModel extends Disposable implements IViewModel {\n\n\tprivate readonly _editorId: number;\n\tprivate readonly _configuration: IEditorConfiguration;\n\tpublic readonly model: ITextModel;\n\tprivate readonly _eventDispatcher: ViewModelEventDispatcher;\n\tpublic readonly onEvent: Event<OutgoingViewModelEvent>;\n\tpublic cursorConfig: CursorConfiguration;\n\tprivate readonly _updateConfigurationViewLineCount: RunOnceScheduler;\n\tprivate _hasFocus: boolean;\n\tprivate readonly _viewportStart: ViewportStart;\n\tprivate readonly _lines: IViewModelLines;\n\tpublic readonly coordinatesConverter: ICoordinatesConverter;\n\tpublic readonly viewLayout: ViewLayout;\n\tprivate readonly _cursor: CursorsController;\n\tprivate readonly _decorations: ViewModelDecorations;\n\n\tconstructor(\n\t\teditorId: number,\n\t\tconfiguration: IEditorConfiguration,\n\t\tmodel: ITextModel,\n\t\tdomLineBreaksComputerFactory: ILineBreaksComputerFactory,\n\t\tmonospaceLineBreaksComputerFactory: ILineBreaksComputerFactory,\n\t\tscheduleAtNextAnimationFrame: (callback: () => void) => IDisposable,\n\t\tprivate readonly languageConfigurationService: ILanguageConfigurationService,\n\t\tprivate readonly _themeService: IThemeService,\n\t\tprivate readonly _attachedView: IAttachedView,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorId = editorId;\n\t\tthis._configuration = configuration;\n\t\tthis.model = model;\n\t\tthis._eventDispatcher = new ViewModelEventDispatcher();\n\t\tthis.onEvent = this._eventDispatcher.onEvent;\n\t\tthis.cursorConfig = new CursorConfiguration(this.model.getLanguageId(), this.model.getOptions(), this._configuration, this.languageConfigurationService);\n\t\tthis._updateConfigurationViewLineCount = this._register(new RunOnceScheduler(() => this._updateConfigurationViewLineCountNow(), 0));\n\t\tthis._hasFocus = false;\n\t\tthis._viewportStart = ViewportStart.create(this.model);\n\n\t\tif (USE_IDENTITY_LINES_COLLECTION && this.model.isTooLargeForTokenization()) {\n\n\t\t\tthis._lines = new ViewModelLinesFromModelAsIs(this.model);\n\n\t\t} else {\n\t\t\tconst options = this._configuration.options;\n\t\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\t\tconst wrappingStrategy = options.get(EditorOption.wrappingStrategy);\n\t\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\t\tconst wrappingIndent = options.get(EditorOption.wrappingIndent);\n\t\t\tconst wordBreak = options.get(EditorOption.wordBreak);\n\n\t\t\tthis._lines = new ViewModelLinesFromProjectedModel(\n\t\t\t\tthis._editorId,\n\t\t\t\tthis.model,\n\t\t\t\tdomLineBreaksComputerFactory,\n\t\t\t\tmonospaceLineBreaksComputerFactory,\n\t\t\t\tfontInfo,\n\t\t\t\tthis.model.getOptions().tabSize,\n\t\t\t\twrappingStrategy,\n\t\t\t\twrappingInfo.wrappingColumn,\n\t\t\t\twrappingIndent,\n\t\t\t\twordBreak\n\t\t\t);\n\t\t}\n\n\t\tthis.coordinatesConverter = this._lines.createCoordinatesConverter();\n\n\t\tthis._cursor = this._register(new CursorsController(model, this, this.coordinatesConverter, this.cursorConfig));\n\n\t\tthis.viewLayout = this._register(new ViewLayout(this._configuration, this.getLineCount(), scheduleAtNextAnimationFrame));\n\n\t\tthis._register(this.viewLayout.onDidScroll((e) => {\n\t\t\tif (e.scrollTopChanged) {\n\t\t\t\tthis._handleVisibleLinesChanged();\n\t\t\t}\n\t\t\tif (e.scrollTopChanged) {\n\t\t\t\tthis._viewportStart.invalidate();\n\t\t\t}\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewScrollChangedEvent(e));\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(new ScrollChangedEvent(\n\t\t\t\te.oldScrollWidth, e.oldScrollLeft, e.oldScrollHeight, e.oldScrollTop,\n\t\t\t\te.scrollWidth, e.scrollLeft, e.scrollHeight, e.scrollTop\n\t\t\t));\n\t\t}));\n\n\t\tthis._register(this.viewLayout.onDidContentSizeChange((e) => {\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(e);\n\t\t}));\n\n\t\tthis._decorations = new ViewModelDecorations(this._editorId, this.model, this._configuration, this._lines, this.coordinatesConverter);\n\n\t\tthis._registerModelEvents();\n\n\t\tthis._register(this._configuration.onDidChangeFast((e) => {\n\t\t\ttry {\n\t\t\t\tconst eventsCollector = this._eventDispatcher.beginEmitViewEvents();\n\t\t\t\tthis._onConfigurationChanged(eventsCollector, e);\n\t\t\t} finally {\n\t\t\t\tthis._eventDispatcher.endEmitViewEvents();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(MinimapTokensColorTracker.getInstance().onDidChange(() => {\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewTokensColorsChangedEvent());\n\t\t}));\n\n\t\tthis._register(this._themeService.onDidColorThemeChange((theme) => {\n\t\t\tthis._invalidateDecorationsColorCache();\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewThemeChangedEvent(theme));\n\t\t}));\n\n\t\tthis._updateConfigurationViewLineCountNow();\n\t}\n\n\tpublic override dispose(): void {\n\t\t// First remove listeners, as disposing the lines might end up sending\n\t\t// model decoration changed events ... and we no longer care about them ...\n\t\tsuper.dispose();\n\t\tthis._decorations.dispose();\n\t\tthis._lines.dispose();\n\t\tthis._viewportStart.dispose();\n\t\tthis._eventDispatcher.dispose();\n\t}\n\n\tpublic createLineBreaksComputer(): ILineBreaksComputer {\n\t\treturn this._lines.createLineBreaksComputer();\n\t}\n\n\tpublic addViewEventHandler(eventHandler: ViewEventHandler): void {\n\t\tthis._eventDispatcher.addViewEventHandler(eventHandler);\n\t}\n\n\tpublic removeViewEventHandler(eventHandler: ViewEventHandler): void {\n\t\tthis._eventDispatcher.removeViewEventHandler(eventHandler);\n\t}\n\n\tprivate _updateConfigurationViewLineCountNow(): void {\n\t\tthis._configuration.setViewLineCount(this._lines.getViewLineCount());\n\t}\n\n\tprivate getModelVisibleRanges(): Range[] {\n\t\tconst linesViewportData = this.viewLayout.getLinesViewportData();\n\t\tconst viewVisibleRange = new Range(\n\t\t\tlinesViewportData.startLineNumber,\n\t\t\tthis.getLineMinColumn(linesViewportData.startLineNumber),\n\t\t\tlinesViewportData.endLineNumber,\n\t\t\tthis.getLineMaxColumn(linesViewportData.endLineNumber)\n\t\t);\n\t\tconst modelVisibleRanges = this._toModelVisibleRanges(viewVisibleRange);\n\t\treturn modelVisibleRanges;\n\t}\n\n\tpublic visibleLinesStabilized(): void {\n\t\tconst modelVisibleRanges = this.getModelVisibleRanges();\n\t\tthis._attachedView.setVisibleLines(modelVisibleRanges, true);\n\t}\n\n\tprivate _handleVisibleLinesChanged(): void {\n\t\tconst modelVisibleRanges = this.getModelVisibleRanges();\n\t\tthis._attachedView.setVisibleLines(modelVisibleRanges, false);\n\t}\n\n\tpublic setHasFocus(hasFocus: boolean): void {\n\t\tthis._hasFocus = hasFocus;\n\t\tthis._cursor.setHasFocus(hasFocus);\n\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewFocusChangedEvent(hasFocus));\n\t\tthis._eventDispatcher.emitOutgoingEvent(new FocusChangedEvent(!hasFocus, hasFocus));\n\t}\n\n\tpublic onCompositionStart(): void {\n\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewCompositionStartEvent());\n\t}\n\n\tpublic onCompositionEnd(): void {\n\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewCompositionEndEvent());\n\t}\n\n\tprivate _captureStableViewport(): StableViewport {\n\t\t// We might need to restore the current start view range, so save it (if available)\n\t\t// But only if the scroll position is not at the top of the file\n\t\tif (this._viewportStart.isValid && this.viewLayout.getCurrentScrollTop() > 0) {\n\t\t\tconst previousViewportStartViewPosition = new Position(this._viewportStart.viewLineNumber, this.getLineMinColumn(this._viewportStart.viewLineNumber));\n\t\t\tconst previousViewportStartModelPosition = this.coordinatesConverter.convertViewPositionToModelPosition(previousViewportStartViewPosition);\n\t\t\treturn new StableViewport(previousViewportStartModelPosition, this._viewportStart.startLineDelta);\n\t\t}\n\t\treturn new StableViewport(null, 0);\n\t}\n\n\tprivate _onConfigurationChanged(eventsCollector: ViewModelEventsCollector, e: ConfigurationChangedEvent): void {\n\t\tconst stableViewport = this._captureStableViewport();\n\t\tconst options = this._configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst wrappingStrategy = options.get(EditorOption.wrappingStrategy);\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst wrappingIndent = options.get(EditorOption.wrappingIndent);\n\t\tconst wordBreak = options.get(EditorOption.wordBreak);\n\n\t\tif (this._lines.setWrappingSettings(fontInfo, wrappingStrategy, wrappingInfo.wrappingColumn, wrappingIndent, wordBreak)) {\n\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewFlushedEvent());\n\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewLineMappingChangedEvent());\n\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewDecorationsChangedEvent(null));\n\t\t\tthis._cursor.onLineMappingChanged(eventsCollector);\n\t\t\tthis._decorations.onLineMappingChanged();\n\t\t\tthis.viewLayout.onFlushed(this.getLineCount());\n\n\t\t\tthis._updateConfigurationViewLineCount.schedule();\n\t\t}\n\n\t\tif (e.hasChanged(EditorOption.readOnly)) {\n\t\t\t// Must read again all decorations due to readOnly filtering\n\t\t\tthis._decorations.reset();\n\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewDecorationsChangedEvent(null));\n\t\t}\n\n\t\teventsCollector.emitViewEvent(new viewEvents.ViewConfigurationChangedEvent(e));\n\t\tthis.viewLayout.onConfigurationChanged(e);\n\n\t\tstableViewport.recoverViewportStart(this.coordinatesConverter, this.viewLayout);\n\n\t\tif (CursorConfiguration.shouldRecreate(e)) {\n\t\t\tthis.cursorConfig = new CursorConfiguration(this.model.getLanguageId(), this.model.getOptions(), this._configuration, this.languageConfigurationService);\n\t\t\tthis._cursor.updateConfiguration(this.cursorConfig);\n\t\t}\n\t}\n\n\tprivate _registerModelEvents(): void {\n\n\t\tthis._register(this.model.onDidChangeContentOrInjectedText((e) => {\n\t\t\ttry {\n\t\t\t\tconst eventsCollector = this._eventDispatcher.beginEmitViewEvents();\n\n\t\t\t\tlet hadOtherModelChange = false;\n\t\t\t\tlet hadModelLineChangeThatChangedLineMapping = false;\n\n\t\t\t\tconst changes = (e instanceof textModelEvents.InternalModelContentChangeEvent ? e.rawContentChangedEvent.changes : e.changes);\n\t\t\t\tconst versionId = (e instanceof textModelEvents.InternalModelContentChangeEvent ? e.rawContentChangedEvent.versionId : null);\n\n\t\t\t\t// Do a first pass to compute line mappings, and a second pass to actually interpret them\n\t\t\t\tconst lineBreaksComputer = this._lines.createLineBreaksComputer();\n\t\t\t\tfor (const change of changes) {\n\t\t\t\t\tswitch (change.changeType) {\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.LinesInserted: {\n\t\t\t\t\t\t\tfor (let lineIdx = 0; lineIdx < change.detail.length; lineIdx++) {\n\t\t\t\t\t\t\t\tconst line = change.detail[lineIdx];\n\t\t\t\t\t\t\t\tlet injectedText = change.injectedTexts[lineIdx];\n\t\t\t\t\t\t\t\tif (injectedText) {\n\t\t\t\t\t\t\t\t\tinjectedText = injectedText.filter(element => (!element.ownerId || element.ownerId === this._editorId));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlineBreaksComputer.addRequest(line, injectedText, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.LineChanged: {\n\t\t\t\t\t\t\tlet injectedText: textModelEvents.LineInjectedText[] | null = null;\n\t\t\t\t\t\t\tif (change.injectedText) {\n\t\t\t\t\t\t\t\tinjectedText = change.injectedText.filter(element => (!element.ownerId || element.ownerId === this._editorId));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlineBreaksComputer.addRequest(change.detail, injectedText, null);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst lineBreaks = lineBreaksComputer.finalize();\n\t\t\t\tconst lineBreakQueue = new ArrayQueue(lineBreaks);\n\n\t\t\t\tfor (const change of changes) {\n\t\t\t\t\tswitch (change.changeType) {\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.Flush: {\n\t\t\t\t\t\t\tthis._lines.onModelFlushed();\n\t\t\t\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewFlushedEvent());\n\t\t\t\t\t\t\tthis._decorations.reset();\n\t\t\t\t\t\t\tthis.viewLayout.onFlushed(this.getLineCount());\n\t\t\t\t\t\t\thadOtherModelChange = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.LinesDeleted: {\n\t\t\t\t\t\t\tconst linesDeletedEvent = this._lines.onModelLinesDeleted(versionId, change.fromLineNumber, change.toLineNumber);\n\t\t\t\t\t\t\tif (linesDeletedEvent !== null) {\n\t\t\t\t\t\t\t\teventsCollector.emitViewEvent(linesDeletedEvent);\n\t\t\t\t\t\t\t\tthis.viewLayout.onLinesDeleted(linesDeletedEvent.fromLineNumber, linesDeletedEvent.toLineNumber);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thadOtherModelChange = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.LinesInserted: {\n\t\t\t\t\t\t\tconst insertedLineBreaks = lineBreakQueue.takeCount(change.detail.length);\n\t\t\t\t\t\t\tconst linesInsertedEvent = this._lines.onModelLinesInserted(versionId, change.fromLineNumber, change.toLineNumber, insertedLineBreaks);\n\t\t\t\t\t\t\tif (linesInsertedEvent !== null) {\n\t\t\t\t\t\t\t\teventsCollector.emitViewEvent(linesInsertedEvent);\n\t\t\t\t\t\t\t\tthis.viewLayout.onLinesInserted(linesInsertedEvent.fromLineNumber, linesInsertedEvent.toLineNumber);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thadOtherModelChange = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.LineChanged: {\n\t\t\t\t\t\t\tconst changedLineBreakData = lineBreakQueue.dequeue()!;\n\t\t\t\t\t\t\tconst [lineMappingChanged, linesChangedEvent, linesInsertedEvent, linesDeletedEvent] =\n\t\t\t\t\t\t\t\tthis._lines.onModelLineChanged(versionId, change.lineNumber, changedLineBreakData);\n\t\t\t\t\t\t\thadModelLineChangeThatChangedLineMapping = lineMappingChanged;\n\t\t\t\t\t\t\tif (linesChangedEvent) {\n\t\t\t\t\t\t\t\teventsCollector.emitViewEvent(linesChangedEvent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (linesInsertedEvent) {\n\t\t\t\t\t\t\t\teventsCollector.emitViewEvent(linesInsertedEvent);\n\t\t\t\t\t\t\t\tthis.viewLayout.onLinesInserted(linesInsertedEvent.fromLineNumber, linesInsertedEvent.toLineNumber);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (linesDeletedEvent) {\n\t\t\t\t\t\t\t\teventsCollector.emitViewEvent(linesDeletedEvent);\n\t\t\t\t\t\t\t\tthis.viewLayout.onLinesDeleted(linesDeletedEvent.fromLineNumber, linesDeletedEvent.toLineNumber);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase textModelEvents.RawContentChangedType.EOLChanged: {\n\t\t\t\t\t\t\t// Nothing to do. The new version will be accepted below\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (versionId !== null) {\n\t\t\t\t\tthis._lines.acceptVersionId(versionId);\n\t\t\t\t}\n\t\t\t\tthis.viewLayout.onHeightMaybeChanged();\n\n\t\t\t\tif (!hadOtherModelChange && hadModelLineChangeThatChangedLineMapping) {\n\t\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewLineMappingChangedEvent());\n\t\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewDecorationsChangedEvent(null));\n\t\t\t\t\tthis._cursor.onLineMappingChanged(eventsCollector);\n\t\t\t\t\tthis._decorations.onLineMappingChanged();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tthis._eventDispatcher.endEmitViewEvents();\n\t\t\t}\n\n\t\t\t// Update the configuration and reset the centered view line\n\t\t\tconst viewportStartWasValid = this._viewportStart.isValid;\n\t\t\tthis._viewportStart.invalidate();\n\t\t\tthis._configuration.setModelLineCount(this.model.getLineCount());\n\t\t\tthis._updateConfigurationViewLineCountNow();\n\n\t\t\t// Recover viewport\n\t\t\tif (!this._hasFocus && this.model.getAttachedEditorCount() >= 2 && viewportStartWasValid) {\n\t\t\t\tconst modelRange = this.model._getTrackedRange(this._viewportStart.modelTrackedRange);\n\t\t\t\tif (modelRange) {\n\t\t\t\t\tconst viewPosition = this.coordinatesConverter.convertModelPositionToViewPosition(modelRange.getStartPosition());\n\t\t\t\t\tconst viewPositionTop = this.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber);\n\t\t\t\t\tthis.viewLayout.setScrollPosition({ scrollTop: viewPositionTop + this._viewportStart.startLineDelta }, ScrollType.Immediate);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst eventsCollector = this._eventDispatcher.beginEmitViewEvents();\n\t\t\t\tif (e instanceof textModelEvents.InternalModelContentChangeEvent) {\n\t\t\t\t\teventsCollector.emitOutgoingEvent(new ModelContentChangedEvent(e.contentChangedEvent));\n\t\t\t\t}\n\t\t\t\tthis._cursor.onModelContentChanged(eventsCollector, e);\n\t\t\t} finally {\n\t\t\t\tthis._eventDispatcher.endEmitViewEvents();\n\t\t\t}\n\n\t\t\tthis._handleVisibleLinesChanged();\n\t\t}));\n\n\t\tthis._register(this.model.onDidChangeTokens((e) => {\n\t\t\tconst viewRanges: { fromLineNumber: number; toLineNumber: number }[] = [];\n\t\t\tfor (let j = 0, lenJ = e.ranges.length; j < lenJ; j++) {\n\t\t\t\tconst modelRange = e.ranges[j];\n\t\t\t\tconst viewStartLineNumber = this.coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.fromLineNumber, 1)).lineNumber;\n\t\t\t\tconst viewEndLineNumber = this.coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.toLineNumber, this.model.getLineMaxColumn(modelRange.toLineNumber))).lineNumber;\n\t\t\t\tviewRanges[j] = {\n\t\t\t\t\tfromLineNumber: viewStartLineNumber,\n\t\t\t\t\ttoLineNumber: viewEndLineNumber\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewTokensChangedEvent(viewRanges));\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(new ModelTokensChangedEvent(e));\n\t\t}));\n\n\t\tthis._register(this.model.onDidChangeLanguageConfiguration((e) => {\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewLanguageConfigurationEvent());\n\t\t\tthis.cursorConfig = new CursorConfiguration(this.model.getLanguageId(), this.model.getOptions(), this._configuration, this.languageConfigurationService);\n\t\t\tthis._cursor.updateConfiguration(this.cursorConfig);\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(new ModelLanguageConfigurationChangedEvent(e));\n\t\t}));\n\n\t\tthis._register(this.model.onDidChangeLanguage((e) => {\n\t\t\tthis.cursorConfig = new CursorConfiguration(this.model.getLanguageId(), this.model.getOptions(), this._configuration, this.languageConfigurationService);\n\t\t\tthis._cursor.updateConfiguration(this.cursorConfig);\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(new ModelLanguageChangedEvent(e));\n\t\t}));\n\n\t\tthis._register(this.model.onDidChangeOptions((e) => {\n\t\t\t// A tab size change causes a line mapping changed event => all view parts will repaint OK, no further event needed here\n\t\t\tif (this._lines.setTabSize(this.model.getOptions().tabSize)) {\n\t\t\t\ttry {\n\t\t\t\t\tconst eventsCollector = this._eventDispatcher.beginEmitViewEvents();\n\t\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewFlushedEvent());\n\t\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewLineMappingChangedEvent());\n\t\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewDecorationsChangedEvent(null));\n\t\t\t\t\tthis._cursor.onLineMappingChanged(eventsCollector);\n\t\t\t\t\tthis._decorations.onLineMappingChanged();\n\t\t\t\t\tthis.viewLayout.onFlushed(this.getLineCount());\n\t\t\t\t} finally {\n\t\t\t\t\tthis._eventDispatcher.endEmitViewEvents();\n\t\t\t\t}\n\t\t\t\tthis._updateConfigurationViewLineCount.schedule();\n\t\t\t}\n\n\t\t\tthis.cursorConfig = new CursorConfiguration(this.model.getLanguageId(), this.model.getOptions(), this._configuration, this.languageConfigurationService);\n\t\t\tthis._cursor.updateConfiguration(this.cursorConfig);\n\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(new ModelOptionsChangedEvent(e));\n\t\t}));\n\n\t\tthis._register(this.model.onDidChangeDecorations((e) => {\n\t\t\tthis._decorations.onModelDecorationsChanged();\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewDecorationsChangedEvent(e));\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(new ModelDecorationsChangedEvent(e));\n\t\t}));\n\t}\n\n\tprivate readonly hiddenAreasModel = new HiddenAreasModel();\n\tprivate previousHiddenAreas: readonly Range[] = [];\n\n\tpublic setHiddenAreas(ranges: Range[], source?: unknown): void {\n\t\tthis.hiddenAreasModel.setHiddenAreas(source, ranges);\n\t\tconst mergedRanges = this.hiddenAreasModel.getMergedRanges();\n\t\tif (mergedRanges === this.previousHiddenAreas) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.previousHiddenAreas = mergedRanges;\n\n\t\tconst stableViewport = this._captureStableViewport();\n\n\t\tlet lineMappingChanged = false;\n\t\ttry {\n\t\t\tconst eventsCollector = this._eventDispatcher.beginEmitViewEvents();\n\t\t\tlineMappingChanged = this._lines.setHiddenAreas(mergedRanges);\n\t\t\tif (lineMappingChanged) {\n\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewFlushedEvent());\n\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewLineMappingChangedEvent());\n\t\t\t\teventsCollector.emitViewEvent(new viewEvents.ViewDecorationsChangedEvent(null));\n\t\t\t\tthis._cursor.onLineMappingChanged(eventsCollector);\n\t\t\t\tthis._decorations.onLineMappingChanged();\n\t\t\t\tthis.viewLayout.onFlushed(this.getLineCount());\n\t\t\t\tthis.viewLayout.onHeightMaybeChanged();\n\t\t\t}\n\t\t\tstableViewport.recoverViewportStart(this.coordinatesConverter, this.viewLayout);\n\t\t} finally {\n\t\t\tthis._eventDispatcher.endEmitViewEvents();\n\t\t}\n\t\tthis._updateConfigurationViewLineCount.schedule();\n\n\t\tif (lineMappingChanged) {\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(new HiddenAreasChangedEvent());\n\t\t}\n\t}\n\n\tpublic getVisibleRangesPlusViewportAboveBelow(): Range[] {\n\t\tconst layoutInfo = this._configuration.options.get(EditorOption.layoutInfo);\n\t\tconst lineHeight = this._configuration.options.get(EditorOption.lineHeight);\n\t\tconst linesAround = Math.max(20, Math.round(layoutInfo.height / lineHeight));\n\t\tconst partialData = this.viewLayout.getLinesViewportData();\n\t\tconst startViewLineNumber = Math.max(1, partialData.completelyVisibleStartLineNumber - linesAround);\n\t\tconst endViewLineNumber = Math.min(this.getLineCount(), partialData.completelyVisibleEndLineNumber + linesAround);\n\n\t\treturn this._toModelVisibleRanges(new Range(\n\t\t\tstartViewLineNumber, this.getLineMinColumn(startViewLineNumber),\n\t\t\tendViewLineNumber, this.getLineMaxColumn(endViewLineNumber)\n\t\t));\n\t}\n\n\tpublic getVisibleRanges(): Range[] {\n\t\tconst visibleViewRange = this.getCompletelyVisibleViewRange();\n\t\treturn this._toModelVisibleRanges(visibleViewRange);\n\t}\n\n\tpublic getHiddenAreas(): Range[] {\n\t\treturn this._lines.getHiddenAreas();\n\t}\n\n\tprivate _toModelVisibleRanges(visibleViewRange: Range): Range[] {\n\t\tconst visibleRange = this.coordinatesConverter.convertViewRangeToModelRange(visibleViewRange);\n\t\tconst hiddenAreas = this._lines.getHiddenAreas();\n\n\t\tif (hiddenAreas.length === 0) {\n\t\t\treturn [visibleRange];\n\t\t}\n\n\t\tconst result: Range[] = [];\n\t\tlet resultLen = 0;\n\t\tlet startLineNumber = visibleRange.startLineNumber;\n\t\tlet startColumn = visibleRange.startColumn;\n\t\tconst endLineNumber = visibleRange.endLineNumber;\n\t\tconst endColumn = visibleRange.endColumn;\n\t\tfor (let i = 0, len = hiddenAreas.length; i < len; i++) {\n\t\t\tconst hiddenStartLineNumber = hiddenAreas[i].startLineNumber;\n\t\t\tconst hiddenEndLineNumber = hiddenAreas[i].endLineNumber;\n\n\t\t\tif (hiddenEndLineNumber < startLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (hiddenStartLineNumber > endLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (startLineNumber < hiddenStartLineNumber) {\n\t\t\t\tresult[resultLen++] = new Range(\n\t\t\t\t\tstartLineNumber, startColumn,\n\t\t\t\t\thiddenStartLineNumber - 1, this.model.getLineMaxColumn(hiddenStartLineNumber - 1)\n\t\t\t\t);\n\t\t\t}\n\t\t\tstartLineNumber = hiddenEndLineNumber + 1;\n\t\t\tstartColumn = 1;\n\t\t}\n\n\t\tif (startLineNumber < endLineNumber || (startLineNumber === endLineNumber && startColumn < endColumn)) {\n\t\t\tresult[resultLen++] = new Range(\n\t\t\t\tstartLineNumber, startColumn,\n\t\t\t\tendLineNumber, endColumn\n\t\t\t);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic getCompletelyVisibleViewRange(): Range {\n\t\tconst partialData = this.viewLayout.getLinesViewportData();\n\t\tconst startViewLineNumber = partialData.completelyVisibleStartLineNumber;\n\t\tconst endViewLineNumber = partialData.completelyVisibleEndLineNumber;\n\n\t\treturn new Range(\n\t\t\tstartViewLineNumber, this.getLineMinColumn(startViewLineNumber),\n\t\t\tendViewLineNumber, this.getLineMaxColumn(endViewLineNumber)\n\t\t);\n\t}\n\n\tpublic getCompletelyVisibleViewRangeAtScrollTop(scrollTop: number): Range {\n\t\tconst partialData = this.viewLayout.getLinesViewportDataAtScrollTop(scrollTop);\n\t\tconst startViewLineNumber = partialData.completelyVisibleStartLineNumber;\n\t\tconst endViewLineNumber = partialData.completelyVisibleEndLineNumber;\n\n\t\treturn new Range(\n\t\t\tstartViewLineNumber, this.getLineMinColumn(startViewLineNumber),\n\t\t\tendViewLineNumber, this.getLineMaxColumn(endViewLineNumber)\n\t\t);\n\t}\n\n\tpublic saveState(): IViewState {\n\t\tconst compatViewState = this.viewLayout.saveState();\n\n\t\tconst scrollTop = compatViewState.scrollTop;\n\t\tconst firstViewLineNumber = this.viewLayout.getLineNumberAtVerticalOffset(scrollTop);\n\t\tconst firstPosition = this.coordinatesConverter.convertViewPositionToModelPosition(new Position(firstViewLineNumber, this.getLineMinColumn(firstViewLineNumber)));\n\t\tconst firstPositionDeltaTop = this.viewLayout.getVerticalOffsetForLineNumber(firstViewLineNumber) - scrollTop;\n\n\t\treturn {\n\t\t\tscrollLeft: compatViewState.scrollLeft,\n\t\t\tfirstPosition: firstPosition,\n\t\t\tfirstPositionDeltaTop: firstPositionDeltaTop\n\t\t};\n\t}\n\n\tpublic reduceRestoreState(state: IViewState): { scrollLeft: number; scrollTop: number } {\n\t\tif (typeof state.firstPosition === 'undefined') {\n\t\t\t// This is a view state serialized by an older version\n\t\t\treturn this._reduceRestoreStateCompatibility(state);\n\t\t}\n\n\t\tconst modelPosition = this.model.validatePosition(state.firstPosition);\n\t\tconst viewPosition = this.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n\t\tconst scrollTop = this.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber) - state.firstPositionDeltaTop;\n\t\treturn {\n\t\t\tscrollLeft: state.scrollLeft,\n\t\t\tscrollTop: scrollTop\n\t\t};\n\t}\n\n\tprivate _reduceRestoreStateCompatibility(state: IViewState): { scrollLeft: number; scrollTop: number } {\n\t\treturn {\n\t\t\tscrollLeft: state.scrollLeft,\n\t\t\tscrollTop: state.scrollTopWithoutViewZones!\n\t\t};\n\t}\n\n\tprivate getTabSize(): number {\n\t\treturn this.model.getOptions().tabSize;\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.getViewLineCount();\n\t}\n\n\t/**\n\t * Gives a hint that a lot of requests are about to come in for these line numbers.\n\t */\n\tpublic setViewport(startLineNumber: number, endLineNumber: number, centeredLineNumber: number): void {\n\t\tthis._viewportStart.update(this, startLineNumber);\n\t}\n\n\tpublic getActiveIndentGuide(lineNumber: number, minLineNumber: number, maxLineNumber: number): IActiveIndentGuideInfo {\n\t\treturn this._lines.getActiveIndentGuide(lineNumber, minLineNumber, maxLineNumber);\n\t}\n\n\tpublic getLinesIndentGuides(startLineNumber: number, endLineNumber: number): number[] {\n\t\treturn this._lines.getViewLinesIndentGuides(startLineNumber, endLineNumber);\n\t}\n\n\tpublic getBracketGuidesInRangeByLine(startLineNumber: number, endLineNumber: number, activePosition: IPosition | null, options: BracketGuideOptions): IndentGuide[][] {\n\t\treturn this._lines.getViewLinesBracketGuides(startLineNumber, endLineNumber, activePosition, options);\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._lines.getViewLineContent(lineNumber);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\treturn this._lines.getViewLineLength(lineNumber);\n\t}\n\n\tpublic getLineMinColumn(lineNumber: number): number {\n\t\treturn this._lines.getViewLineMinColumn(lineNumber);\n\t}\n\n\tpublic getLineMaxColumn(lineNumber: number): number {\n\t\treturn this._lines.getViewLineMaxColumn(lineNumber);\n\t}\n\n\tpublic getLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.firstNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 1;\n\t}\n\n\tpublic getLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.lastNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 2;\n\t}\n\n\tpublic getMinimapDecorationsInRange(range: Range): ViewModelDecoration[] {\n\t\treturn this._decorations.getMinimapDecorationsInRange(range);\n\t}\n\n\tpublic getDecorationsInViewport(visibleRange: Range): ViewModelDecoration[] {\n\t\treturn this._decorations.getDecorationsViewportData(visibleRange).decorations;\n\t}\n\n\tpublic getInjectedTextAt(viewPosition: Position): InjectedText | null {\n\t\treturn this._lines.getInjectedTextAt(viewPosition);\n\t}\n\n\tpublic getViewportViewLineRenderingData(visibleRange: Range, lineNumber: number): ViewLineRenderingData {\n\t\tconst allInlineDecorations = this._decorations.getDecorationsViewportData(visibleRange).inlineDecorations;\n\t\tconst inlineDecorations = allInlineDecorations[lineNumber - visibleRange.startLineNumber];\n\t\treturn this._getViewLineRenderingData(lineNumber, inlineDecorations);\n\t}\n\n\tpublic getViewLineRenderingData(lineNumber: number): ViewLineRenderingData {\n\t\tconst inlineDecorations = this._decorations.getInlineDecorationsOnLine(lineNumber);\n\t\treturn this._getViewLineRenderingData(lineNumber, inlineDecorations);\n\t}\n\n\tprivate _getViewLineRenderingData(lineNumber: number, inlineDecorations: InlineDecoration[]): ViewLineRenderingData {\n\t\tconst mightContainRTL = this.model.mightContainRTL();\n\t\tconst mightContainNonBasicASCII = this.model.mightContainNonBasicASCII();\n\t\tconst tabSize = this.getTabSize();\n\t\tconst lineData = this._lines.getViewLineData(lineNumber);\n\n\t\tif (lineData.inlineDecorations) {\n\t\t\tinlineDecorations = [\n\t\t\t\t...inlineDecorations,\n\t\t\t\t...lineData.inlineDecorations.map(d =>\n\t\t\t\t\td.toInlineDecoration(lineNumber)\n\t\t\t\t)\n\t\t\t];\n\t\t}\n\n\t\treturn new ViewLineRenderingData(\n\t\t\tlineData.minColumn,\n\t\t\tlineData.maxColumn,\n\t\t\tlineData.content,\n\t\t\tlineData.continuesWithWrappedLine,\n\t\t\tmightContainRTL,\n\t\t\tmightContainNonBasicASCII,\n\t\t\tlineData.tokens,\n\t\t\tinlineDecorations,\n\t\t\ttabSize,\n\t\t\tlineData.startVisibleColumn\n\t\t);\n\t}\n\n\tpublic getViewLineData(lineNumber: number): ViewLineData {\n\t\treturn this._lines.getViewLineData(lineNumber);\n\t}\n\n\tpublic getMinimapLinesRenderingData(startLineNumber: number, endLineNumber: number, needed: boolean[]): MinimapLinesRenderingData {\n\t\tconst result = this._lines.getViewLinesData(startLineNumber, endLineNumber, needed);\n\t\treturn new MinimapLinesRenderingData(\n\t\t\tthis.getTabSize(),\n\t\t\tresult\n\t\t);\n\t}\n\n\tpublic getAllOverviewRulerDecorations(theme: EditorTheme): OverviewRulerDecorationsGroup[] {\n\t\tconst decorations = this.model.getOverviewRulerDecorations(this._editorId, filterValidationDecorations(this._configuration.options));\n\t\tconst result = new OverviewRulerDecorations();\n\t\tfor (const decoration of decorations) {\n\t\t\tconst decorationOptions = <ModelDecorationOptions>decoration.options;\n\t\t\tconst opts = decorationOptions.overviewRuler;\n\t\t\tif (!opts) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst lane = <number>opts.position;\n\t\t\tif (lane === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst color = opts.getColor(theme.value);\n\t\t\tconst viewStartLineNumber = this.coordinatesConverter.getViewLineNumberOfModelPosition(decoration.range.startLineNumber, decoration.range.startColumn);\n\t\t\tconst viewEndLineNumber = this.coordinatesConverter.getViewLineNumberOfModelPosition(decoration.range.endLineNumber, decoration.range.endColumn);\n\n\t\t\tresult.accept(color, decorationOptions.zIndex, viewStartLineNumber, viewEndLineNumber, lane);\n\t\t}\n\t\treturn result.asArray;\n\t}\n\n\tprivate _invalidateDecorationsColorCache(): void {\n\t\tconst decorations = this.model.getOverviewRulerDecorations();\n\t\tfor (const decoration of decorations) {\n\t\t\tconst opts1 = <ModelDecorationOverviewRulerOptions>decoration.options.overviewRuler;\n\t\t\topts1?.invalidateCachedColor();\n\t\t\tconst opts2 = <ModelDecorationMinimapOptions>decoration.options.minimap;\n\t\t\topts2?.invalidateCachedColor();\n\t\t}\n\t}\n\n\tpublic getValueInRange(range: Range, eol: EndOfLinePreference): string {\n\t\tconst modelRange = this.coordinatesConverter.convertViewRangeToModelRange(range);\n\t\treturn this.model.getValueInRange(modelRange, eol);\n\t}\n\n\tpublic getValueLengthInRange(range: Range, eol: EndOfLinePreference): number {\n\t\tconst modelRange = this.coordinatesConverter.convertViewRangeToModelRange(range);\n\t\treturn this.model.getValueLengthInRange(modelRange, eol);\n\t}\n\n\tpublic modifyPosition(position: Position, offset: number): Position {\n\t\tconst modelPosition = this.coordinatesConverter.convertViewPositionToModelPosition(position);\n\t\treturn this.model.modifyPosition(modelPosition, offset);\n\t}\n\n\tpublic deduceModelPositionRelativeToViewPosition(viewAnchorPosition: Position, deltaOffset: number, lineFeedCnt: number): Position {\n\t\tconst modelAnchor = this.coordinatesConverter.convertViewPositionToModelPosition(viewAnchorPosition);\n\t\tif (this.model.getEOL().length === 2) {\n\t\t\t// This model uses CRLF, so the delta must take that into account\n\t\t\tif (deltaOffset < 0) {\n\t\t\t\tdeltaOffset -= lineFeedCnt;\n\t\t\t} else {\n\t\t\t\tdeltaOffset += lineFeedCnt;\n\t\t\t}\n\t\t}\n\n\t\tconst modelAnchorOffset = this.model.getOffsetAt(modelAnchor);\n\t\tconst resultOffset = modelAnchorOffset + deltaOffset;\n\t\treturn this.model.getPositionAt(resultOffset);\n\t}\n\n\tpublic getPlainTextToCopy(modelRanges: Range[], emptySelectionClipboard: boolean, forceCRLF: boolean): string | string[] {\n\t\tconst newLineCharacter = forceCRLF ? '\\r\\n' : this.model.getEOL();\n\n\t\tmodelRanges = modelRanges.slice(0);\n\t\tmodelRanges.sort(Range.compareRangesUsingStarts);\n\n\t\tlet hasEmptyRange = false;\n\t\tlet hasNonEmptyRange = false;\n\t\tfor (const range of modelRanges) {\n\t\t\tif (range.isEmpty()) {\n\t\t\t\thasEmptyRange = true;\n\t\t\t} else {\n\t\t\t\thasNonEmptyRange = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasNonEmptyRange) {\n\t\t\t// all ranges are empty\n\t\t\tif (!emptySelectionClipboard) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst modelLineNumbers = modelRanges.map((r) => r.startLineNumber);\n\n\t\t\tlet result = '';\n\t\t\tfor (let i = 0; i < modelLineNumbers.length; i++) {\n\t\t\t\tif (i > 0 && modelLineNumbers[i - 1] === modelLineNumbers[i]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresult += this.model.getLineContent(modelLineNumbers[i]) + newLineCharacter;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (hasEmptyRange && emptySelectionClipboard) {\n\t\t\t// mixed empty selections and non-empty selections\n\t\t\tconst result: string[] = [];\n\t\t\tlet prevModelLineNumber = 0;\n\t\t\tfor (const modelRange of modelRanges) {\n\t\t\t\tconst modelLineNumber = modelRange.startLineNumber;\n\t\t\t\tif (modelRange.isEmpty()) {\n\t\t\t\t\tif (modelLineNumber !== prevModelLineNumber) {\n\t\t\t\t\t\tresult.push(this.model.getLineContent(modelLineNumber));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(this.model.getValueInRange(modelRange, forceCRLF ? EndOfLinePreference.CRLF : EndOfLinePreference.TextDefined));\n\t\t\t\t}\n\t\t\t\tprevModelLineNumber = modelLineNumber;\n\t\t\t}\n\t\t\treturn result.length === 1 ? result[0] : result;\n\t\t}\n\n\t\tconst result: string[] = [];\n\t\tfor (const modelRange of modelRanges) {\n\t\t\tif (!modelRange.isEmpty()) {\n\t\t\t\tresult.push(this.model.getValueInRange(modelRange, forceCRLF ? EndOfLinePreference.CRLF : EndOfLinePreference.TextDefined));\n\t\t\t}\n\t\t}\n\t\treturn result.length === 1 ? result[0] : result;\n\t}\n\n\tpublic getRichTextToCopy(modelRanges: Range[], emptySelectionClipboard: boolean): { html: string; mode: string } | null {\n\t\tconst languageId = this.model.getLanguageId();\n\t\tif (languageId === PLAINTEXT_LANGUAGE_ID) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (modelRanges.length !== 1) {\n\t\t\t// no multiple selection support at this time\n\t\t\treturn null;\n\t\t}\n\n\t\tlet range = modelRanges[0];\n\t\tif (range.isEmpty()) {\n\t\t\tif (!emptySelectionClipboard) {\n\t\t\t\t// nothing to copy\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst lineNumber = range.startLineNumber;\n\t\t\trange = new Range(lineNumber, this.model.getLineMinColumn(lineNumber), lineNumber, this.model.getLineMaxColumn(lineNumber));\n\t\t}\n\n\t\tconst fontInfo = this._configuration.options.get(EditorOption.fontInfo);\n\t\tconst colorMap = this._getColorMap();\n\t\tconst hasBadChars = (/[:;\\\\\\/<>]/.test(fontInfo.fontFamily));\n\t\tconst useDefaultFontFamily = (hasBadChars || fontInfo.fontFamily === EDITOR_FONT_DEFAULTS.fontFamily);\n\t\tlet fontFamily: string;\n\t\tif (useDefaultFontFamily) {\n\t\t\tfontFamily = EDITOR_FONT_DEFAULTS.fontFamily;\n\t\t} else {\n\t\t\tfontFamily = fontInfo.fontFamily;\n\t\t\tfontFamily = fontFamily.replace(/\"/g, '\\'');\n\t\t\tconst hasQuotesOrIsList = /[,']/.test(fontFamily);\n\t\t\tif (!hasQuotesOrIsList) {\n\t\t\t\tconst needsQuotes = /[+ ]/.test(fontFamily);\n\t\t\t\tif (needsQuotes) {\n\t\t\t\t\tfontFamily = `'${fontFamily}'`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfontFamily = `${fontFamily}, ${EDITOR_FONT_DEFAULTS.fontFamily}`;\n\t\t}\n\n\t\treturn {\n\t\t\tmode: languageId,\n\t\t\thtml: (\n\t\t\t\t`<div style=\"`\n\t\t\t\t+ `color: ${colorMap[ColorId.DefaultForeground]};`\n\t\t\t\t+ `background-color: ${colorMap[ColorId.DefaultBackground]};`\n\t\t\t\t+ `font-family: ${fontFamily};`\n\t\t\t\t+ `font-weight: ${fontInfo.fontWeight};`\n\t\t\t\t+ `font-size: ${fontInfo.fontSize}px;`\n\t\t\t\t+ `line-height: ${fontInfo.lineHeight}px;`\n\t\t\t\t+ `white-space: pre;`\n\t\t\t\t+ `\">`\n\t\t\t\t+ this._getHTMLToCopy(range, colorMap)\n\t\t\t\t+ '</div>'\n\t\t\t)\n\t\t};\n\t}\n\n\tprivate _getHTMLToCopy(modelRange: Range, colorMap: string[]): string {\n\t\tconst startLineNumber = modelRange.startLineNumber;\n\t\tconst startColumn = modelRange.startColumn;\n\t\tconst endLineNumber = modelRange.endLineNumber;\n\t\tconst endColumn = modelRange.endColumn;\n\n\t\tconst tabSize = this.getTabSize();\n\n\t\tlet result = '';\n\n\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tconst lineTokens = this.model.tokenization.getLineTokens(lineNumber);\n\t\t\tconst lineContent = lineTokens.getLineContent();\n\t\t\tconst startOffset = (lineNumber === startLineNumber ? startColumn - 1 : 0);\n\t\t\tconst endOffset = (lineNumber === endLineNumber ? endColumn - 1 : lineContent.length);\n\n\t\t\tif (lineContent === '') {\n\t\t\t\tresult += '<br>';\n\t\t\t} else {\n\t\t\t\tresult += tokenizeLineToHTML(lineContent, lineTokens.inflate(), colorMap, startOffset, endOffset, tabSize, platform.isWindows);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _getColorMap(): string[] {\n\t\tconst colorMap = TokenizationRegistry.getColorMap();\n\t\tconst result: string[] = ['#000000'];\n\t\tif (colorMap) {\n\t\t\tfor (let i = 1, len = colorMap.length; i < len; i++) {\n\t\t\t\tresult[i] = Color.Format.CSS.formatHex(colorMap[i]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t//#region cursor operations\n\n\tpublic getPrimaryCursorState(): CursorState {\n\t\treturn this._cursor.getPrimaryCursorState();\n\t}\n\tpublic getLastAddedCursorIndex(): number {\n\t\treturn this._cursor.getLastAddedCursorIndex();\n\t}\n\tpublic getCursorStates(): CursorState[] {\n\t\treturn this._cursor.getCursorStates();\n\t}\n\tpublic setCursorStates(source: string | null | undefined, reason: CursorChangeReason, states: PartialCursorState[] | null): boolean {\n\t\treturn this._withViewEventsCollector(eventsCollector => this._cursor.setStates(eventsCollector, source, reason, states));\n\t}\n\tpublic getCursorColumnSelectData(): IColumnSelectData {\n\t\treturn this._cursor.getCursorColumnSelectData();\n\t}\n\tpublic getCursorAutoClosedCharacters(): Range[] {\n\t\treturn this._cursor.getAutoClosedCharacters();\n\t}\n\tpublic setCursorColumnSelectData(columnSelectData: IColumnSelectData): void {\n\t\tthis._cursor.setCursorColumnSelectData(columnSelectData);\n\t}\n\tpublic getPrevEditOperationType(): EditOperationType {\n\t\treturn this._cursor.getPrevEditOperationType();\n\t}\n\tpublic setPrevEditOperationType(type: EditOperationType): void {\n\t\tthis._cursor.setPrevEditOperationType(type);\n\t}\n\tpublic getSelection(): Selection {\n\t\treturn this._cursor.getSelection();\n\t}\n\tpublic getSelections(): Selection[] {\n\t\treturn this._cursor.getSelections();\n\t}\n\tpublic getPosition(): Position {\n\t\treturn this._cursor.getPrimaryCursorState().modelState.position;\n\t}\n\tpublic setSelections(source: string | null | undefined, selections: readonly ISelection[], reason = CursorChangeReason.NotSet): void {\n\t\tthis._withViewEventsCollector(eventsCollector => this._cursor.setSelections(eventsCollector, source, selections, reason));\n\t}\n\tpublic saveCursorState(): ICursorState[] {\n\t\treturn this._cursor.saveState();\n\t}\n\tpublic restoreCursorState(states: ICursorState[]): void {\n\t\tthis._withViewEventsCollector(eventsCollector => this._cursor.restoreState(eventsCollector, states));\n\t}\n\n\tprivate _executeCursorEdit(callback: (eventsCollector: ViewModelEventsCollector) => void): void {\n\t\tif (this._cursor.context.cursorConfig.readOnly) {\n\t\t\t// we cannot edit when read only...\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(new ReadOnlyEditAttemptEvent());\n\t\t\treturn;\n\t\t}\n\t\tthis._withViewEventsCollector(callback);\n\t}\n\tpublic executeEdits(source: string | null | undefined, edits: IIdentifiedSingleEditOperation[], cursorStateComputer: ICursorStateComputer): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.executeEdits(eventsCollector, source, edits, cursorStateComputer));\n\t}\n\tpublic startComposition(): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.startComposition(eventsCollector));\n\t}\n\tpublic endComposition(source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.endComposition(eventsCollector, source));\n\t}\n\tpublic type(text: string, source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.type(eventsCollector, text, source));\n\t}\n\tpublic compositionType(text: string, replacePrevCharCnt: number, replaceNextCharCnt: number, positionDelta: number, source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.compositionType(eventsCollector, text, replacePrevCharCnt, replaceNextCharCnt, positionDelta, source));\n\t}\n\tpublic paste(text: string, pasteOnNewLine: boolean, multicursorText?: string[] | null | undefined, source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.paste(eventsCollector, text, pasteOnNewLine, multicursorText, source));\n\t}\n\tpublic cut(source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.cut(eventsCollector, source));\n\t}\n\tpublic executeCommand(command: ICommand, source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.executeCommand(eventsCollector, command, source));\n\t}\n\tpublic executeCommands(commands: ICommand[], source?: string | null | undefined): void {\n\t\tthis._executeCursorEdit(eventsCollector => this._cursor.executeCommands(eventsCollector, commands, source));\n\t}\n\tpublic revealPrimaryCursor(source: string | null | undefined, revealHorizontal: boolean, minimalReveal: boolean = false): void {\n\t\tthis._withViewEventsCollector(eventsCollector => this._cursor.revealPrimary(eventsCollector, source, minimalReveal, viewEvents.VerticalRevealType.Simple, revealHorizontal, ScrollType.Smooth));\n\t}\n\tpublic revealTopMostCursor(source: string | null | undefined): void {\n\t\tconst viewPosition = this._cursor.getTopMostViewPosition();\n\t\tconst viewRange = new Range(viewPosition.lineNumber, viewPosition.column, viewPosition.lineNumber, viewPosition.column);\n\t\tthis._withViewEventsCollector(eventsCollector => eventsCollector.emitViewEvent(new viewEvents.ViewRevealRangeRequestEvent(source, false, viewRange, null, viewEvents.VerticalRevealType.Simple, true, ScrollType.Smooth)));\n\t}\n\tpublic revealBottomMostCursor(source: string | null | undefined): void {\n\t\tconst viewPosition = this._cursor.getBottomMostViewPosition();\n\t\tconst viewRange = new Range(viewPosition.lineNumber, viewPosition.column, viewPosition.lineNumber, viewPosition.column);\n\t\tthis._withViewEventsCollector(eventsCollector => eventsCollector.emitViewEvent(new viewEvents.ViewRevealRangeRequestEvent(source, false, viewRange, null, viewEvents.VerticalRevealType.Simple, true, ScrollType.Smooth)));\n\t}\n\tpublic revealRange(source: string | null | undefined, revealHorizontal: boolean, viewRange: Range, verticalType: viewEvents.VerticalRevealType, scrollType: ScrollType): void {\n\t\tthis._withViewEventsCollector(eventsCollector => eventsCollector.emitViewEvent(new viewEvents.ViewRevealRangeRequestEvent(source, false, viewRange, null, verticalType, revealHorizontal, scrollType)));\n\t}\n\n\t//#endregion\n\n\t//#region viewLayout\n\tpublic changeWhitespace(callback: (accessor: IWhitespaceChangeAccessor) => void): void {\n\t\tconst hadAChange = this.viewLayout.changeWhitespace(callback);\n\t\tif (hadAChange) {\n\t\t\tthis._eventDispatcher.emitSingleViewEvent(new viewEvents.ViewZonesChangedEvent());\n\t\t\tthis._eventDispatcher.emitOutgoingEvent(new ViewZonesChangedEvent());\n\t\t}\n\t}\n\t//#endregion\n\n\tprivate _withViewEventsCollector<T>(callback: (eventsCollector: ViewModelEventsCollector) => T): T {\n\t\ttry {\n\t\t\tconst eventsCollector = this._eventDispatcher.beginEmitViewEvents();\n\t\t\treturn callback(eventsCollector);\n\t\t} finally {\n\t\t\tthis._eventDispatcher.endEmitViewEvents();\n\t\t}\n\t}\n\n\tnormalizePosition(position: Position, affinity: PositionAffinity): Position {\n\t\treturn this._lines.normalizePosition(position, affinity);\n\t}\n\n\t/**\n\t * Gets the column at which indentation stops at a given line.\n\t * @internal\n\t*/\n\tgetLineIndentColumn(lineNumber: number): number {\n\t\treturn this._lines.getLineIndentColumn(lineNumber);\n\t}\n}\n\nclass ViewportStart implements IDisposable {\n\n\tpublic static create(model: ITextModel): ViewportStart {\n\t\tconst viewportStartLineTrackedRange = model._setTrackedRange(null, new Range(1, 1, 1, 1), TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges);\n\t\treturn new ViewportStart(model, 1, false, viewportStartLineTrackedRange, 0);\n\t}\n\n\tpublic get viewLineNumber(): number {\n\t\treturn this._viewLineNumber;\n\t}\n\n\tpublic get isValid(): boolean {\n\t\treturn this._isValid;\n\t}\n\n\tpublic get modelTrackedRange(): string {\n\t\treturn this._modelTrackedRange;\n\t}\n\n\tpublic get startLineDelta(): number {\n\t\treturn this._startLineDelta;\n\t}\n\n\tprivate constructor(\n\t\tprivate readonly _model: ITextModel,\n\t\tprivate _viewLineNumber: number,\n\t\tprivate _isValid: boolean,\n\t\tprivate _modelTrackedRange: string,\n\t\tprivate _startLineDelta: number,\n\t) { }\n\n\tpublic dispose(): void {\n\t\tthis._model._setTrackedRange(this._modelTrackedRange, null, TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges);\n\t}\n\n\tpublic update(viewModel: IViewModel, startLineNumber: number): void {\n\t\tconst position = viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(startLineNumber, viewModel.getLineMinColumn(startLineNumber)));\n\t\tconst viewportStartLineTrackedRange = viewModel.model._setTrackedRange(this._modelTrackedRange, new Range(position.lineNumber, position.column, position.lineNumber, position.column), TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges);\n\t\tconst viewportStartLineTop = viewModel.viewLayout.getVerticalOffsetForLineNumber(startLineNumber);\n\t\tconst scrollTop = viewModel.viewLayout.getCurrentScrollTop();\n\n\t\tthis._viewLineNumber = startLineNumber;\n\t\tthis._isValid = true;\n\t\tthis._modelTrackedRange = viewportStartLineTrackedRange;\n\t\tthis._startLineDelta = scrollTop - viewportStartLineTop;\n\t}\n\n\tpublic invalidate(): void {\n\t\tthis._isValid = false;\n\t}\n}\n\nclass OverviewRulerDecorations {\n\n\tprivate readonly _asMap: { [color: string]: OverviewRulerDecorationsGroup } = Object.create(null);\n\treadonly asArray: OverviewRulerDecorationsGroup[] = [];\n\n\tpublic accept(color: string, zIndex: number, startLineNumber: number, endLineNumber: number, lane: number): void {\n\t\tconst prevGroup = this._asMap[color];\n\n\t\tif (prevGroup) {\n\t\t\tconst prevData = prevGroup.data;\n\t\t\tconst prevLane = prevData[prevData.length - 3];\n\t\t\tconst prevEndLineNumber = prevData[prevData.length - 1];\n\t\t\tif (prevLane === lane && prevEndLineNumber + 1 >= startLineNumber) {\n\t\t\t\t// merge into prev\n\t\t\t\tif (endLineNumber > prevEndLineNumber) {\n\t\t\t\t\tprevData[prevData.length - 1] = endLineNumber;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// push\n\t\t\tprevData.push(lane, startLineNumber, endLineNumber);\n\t\t} else {\n\t\t\tconst group = new OverviewRulerDecorationsGroup(color, zIndex, [lane, startLineNumber, endLineNumber]);\n\t\t\tthis._asMap[color] = group;\n\t\t\tthis.asArray.push(group);\n\t\t}\n\t}\n}\n\nclass HiddenAreasModel {\n\tprivate readonly hiddenAreas = new Map<unknown, Range[]>();\n\tprivate shouldRecompute = false;\n\tprivate ranges: Range[] = [];\n\n\tsetHiddenAreas(source: unknown, ranges: Range[]): void {\n\t\tconst existing = this.hiddenAreas.get(source);\n\t\tif (existing && rangeArraysEqual(existing, ranges)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.hiddenAreas.set(source, ranges);\n\t\tthis.shouldRecompute = true;\n\t}\n\n\t/**\n\t * The returned array is immutable.\n\t*/\n\tgetMergedRanges(): readonly Range[] {\n\t\tif (!this.shouldRecompute) {\n\t\t\treturn this.ranges;\n\t\t}\n\t\tthis.shouldRecompute = false;\n\t\tconst newRanges = Array.from(this.hiddenAreas.values()).reduce((r, hiddenAreas) => mergeLineRangeArray(r, hiddenAreas), []);\n\t\tif (rangeArraysEqual(this.ranges, newRanges)) {\n\t\t\treturn this.ranges;\n\t\t}\n\t\tthis.ranges = newRanges;\n\t\treturn this.ranges;\n\t}\n}\n\nfunction mergeLineRangeArray(arr1: Range[], arr2: Range[]): Range[] {\n\tconst result = [];\n\tlet i = 0;\n\tlet j = 0;\n\twhile (i < arr1.length && j < arr2.length) {\n\t\tconst item1 = arr1[i];\n\t\tconst item2 = arr2[j];\n\n\t\tif (item1.endLineNumber < item2.startLineNumber - 1) {\n\t\t\tresult.push(arr1[i++]);\n\t\t} else if (item2.endLineNumber < item1.startLineNumber - 1) {\n\t\t\tresult.push(arr2[j++]);\n\t\t} else {\n\t\t\tconst startLineNumber = Math.min(item1.startLineNumber, item2.startLineNumber);\n\t\t\tconst endLineNumber = Math.max(item1.endLineNumber, item2.endLineNumber);\n\t\t\tresult.push(new Range(startLineNumber, 1, endLineNumber, 1));\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < arr1.length) {\n\t\tresult.push(arr1[i++]);\n\t}\n\twhile (j < arr2.length) {\n\t\tresult.push(arr2[j++]);\n\t}\n\treturn result;\n}\n\nfunction rangeArraysEqual(arr1: Range[], arr2: Range[]): boolean {\n\tif (arr1.length !== arr2.length) {\n\t\treturn false;\n\t}\n\tfor (let i = 0; i < arr1.length; i++) {\n\t\tif (!arr1[i].equalsRange(arr2[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Maintain a stable viewport by trying to keep the first line in the viewport constant.\n */\nclass StableViewport {\n\tconstructor(\n\t\tpublic readonly viewportStartModelPosition: Position | null,\n\t\tpublic readonly startLineDelta: number\n\t) { }\n\n\tpublic recoverViewportStart(coordinatesConverter: ICoordinatesConverter, viewLayout: ViewLayout): void {\n\t\tif (!this.viewportStartModelPosition) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewPosition = coordinatesConverter.convertModelPositionToViewPosition(this.viewportStartModelPosition);\n\t\tconst viewPositionTop = viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber);\n\t\tviewLayout.setScrollPosition({ scrollTop: viewPositionTop + this.startLineDelta }, ScrollType.Immediate);\n\t}\n}\n"]}