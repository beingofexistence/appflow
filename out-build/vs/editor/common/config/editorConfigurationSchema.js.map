{"version":3,"sources":["vs/editor/common/config/editorConfigurationSchema.ts"],"names":[],"mappings":"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","file":"editorConfigurationSchema.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { diffEditorDefaultOptions } from 'vs/editor/common/config/diffEditor';\nimport { editorOptionsRegistry } from 'vs/editor/common/config/editorOptions';\nimport { EDITOR_MODEL_DEFAULTS } from 'vs/editor/common/core/textModelDefaults';\nimport * as nls from 'vs/nls';\nimport { ConfigurationScope, Extensions, IConfigurationNode, IConfigurationPropertySchema, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport const editorConfigurationBaseNode = Object.freeze<IConfigurationNode>({\n\tid: 'editor',\n\torder: 5,\n\ttype: 'object',\n\ttitle: nls.localize('editorConfigurationTitle', \"Editor\"),\n\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n});\n\nconst editorConfiguration: IConfigurationNode = {\n\t...editorConfigurationBaseNode,\n\tproperties: {\n\t\t'editor.tabSize': {\n\t\t\ttype: 'number',\n\t\t\tdefault: EDITOR_MODEL_DEFAULTS.tabSize,\n\t\t\tminimum: 1,\n\t\t\tmarkdownDescription: nls.localize('tabSize', \"The number of spaces a tab is equal to. This setting is overridden based on the file contents when {0} is on.\", '`#editor.detectIndentation#`')\n\t\t},\n\t\t'editor.indentSize': {\n\t\t\t'anyOf': [\n\t\t\t\t{\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['tabSize']\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tminimum: 1\n\t\t\t\t}\n\t\t\t],\n\t\t\tdefault: 'tabSize',\n\t\t\tmarkdownDescription: nls.localize('indentSize', \"The number of spaces used for indentation or `\\\"tabSize\\\"` to use the value from `#editor.tabSize#`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.\")\n\t\t},\n\t\t'editor.insertSpaces': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: EDITOR_MODEL_DEFAULTS.insertSpaces,\n\t\t\tmarkdownDescription: nls.localize('insertSpaces', \"Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when {0} is on.\", '`#editor.detectIndentation#`')\n\t\t},\n\t\t'editor.detectIndentation': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: EDITOR_MODEL_DEFAULTS.detectIndentation,\n\t\t\tmarkdownDescription: nls.localize('detectIndentation', \"Controls whether {0} and {1} will be automatically detected when a file is opened based on the file contents.\", '`#editor.tabSize#`', '`#editor.insertSpaces#`')\n\t\t},\n\t\t'editor.trimAutoWhitespace': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: EDITOR_MODEL_DEFAULTS.trimAutoWhitespace,\n\t\t\tdescription: nls.localize('trimAutoWhitespace', \"Remove trailing auto inserted whitespace.\")\n\t\t},\n\t\t'editor.largeFileOptimizations': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: EDITOR_MODEL_DEFAULTS.largeFileOptimizations,\n\t\t\tdescription: nls.localize('largeFileOptimizations', \"Special handling for large files to disable certain memory intensive features.\")\n\t\t},\n\t\t'editor.wordBasedSuggestions': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tdescription: nls.localize('wordBasedSuggestions', \"Controls whether completions should be computed based on words in the document.\")\n\t\t},\n\t\t'editor.wordBasedSuggestionsMode': {\n\t\t\tenum: ['currentDocument', 'matchingDocuments', 'allDocuments'],\n\t\t\tdefault: 'matchingDocuments',\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('wordBasedSuggestionsMode.currentDocument', 'Only suggest words from the active document.'),\n\t\t\t\tnls.localize('wordBasedSuggestionsMode.matchingDocuments', 'Suggest words from all open documents of the same language.'),\n\t\t\t\tnls.localize('wordBasedSuggestionsMode.allDocuments', 'Suggest words from all open documents.')\n\t\t\t],\n\t\t\tdescription: nls.localize('wordBasedSuggestionsMode', \"Controls from which documents word based completions are computed.\")\n\t\t},\n\t\t'editor.semanticHighlighting.enabled': {\n\t\t\tenum: [true, false, 'configuredByTheme'],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('semanticHighlighting.true', 'Semantic highlighting enabled for all color themes.'),\n\t\t\t\tnls.localize('semanticHighlighting.false', 'Semantic highlighting disabled for all color themes.'),\n\t\t\t\tnls.localize('semanticHighlighting.configuredByTheme', 'Semantic highlighting is configured by the current color theme\\'s `semanticHighlighting` setting.')\n\t\t\t],\n\t\t\tdefault: 'configuredByTheme',\n\t\t\tdescription: nls.localize('semanticHighlighting.enabled', \"Controls whether the semanticHighlighting is shown for the languages that support it.\")\n\t\t},\n\t\t'editor.stablePeek': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: nls.localize('stablePeek', \"Keep peek editors open even when double-clicking their content or when hitting `Escape`.\")\n\t\t},\n\t\t'editor.maxTokenizationLineLength': {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 20_000,\n\t\t\tdescription: nls.localize('maxTokenizationLineLength', \"Lines above this length will not be tokenized for performance reasons\")\n\t\t},\n\t\t'editor.experimental.asyncTokenization': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('editor.experimental.asyncTokenization', \"Controls whether the tokenization should happen asynchronously on a web worker.\"),\n\t\t\ttags: ['experimental'],\n\t\t},\n\t\t'editor.experimental.asyncTokenizationLogging': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('editor.experimental.asyncTokenizationLogging', \"Controls whether async tokenization should be logged. For debugging only.\"),\n\t\t},\n\t\t'editor.experimental.asyncTokenizationVerification': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('editor.experimental.asyncTokenizationVerification', \"Controls whether async tokenization should be verified against legacy background tokenization. Might slow down tokenization. For debugging only.\"),\n\t\t\ttags: ['experimental'],\n\t\t},\n\t\t'editor.language.brackets': {\n\t\t\ttype: ['array', 'null'],\n\t\t\tdefault: null, // We want to distinguish the empty array from not configured.\n\t\t\tdescription: nls.localize('schema.brackets', 'Defines the bracket symbols that increase or decrease the indentation.'),\n\t\t\titems: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.openBracket', 'The opening bracket character or string sequence.')\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.closeBracket', 'The closing bracket character or string sequence.')\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t'editor.language.colorizedBracketPairs': {\n\t\t\ttype: ['array', 'null'],\n\t\t\tdefault: null, // We want to distinguish the empty array from not configured.\n\t\t\tdescription: nls.localize('schema.colorizedBracketPairs', 'Defines the bracket pairs that are colorized by their nesting level if bracket pair colorization is enabled.'),\n\t\t\titems: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.openBracket', 'The opening bracket character or string sequence.')\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('schema.closeBracket', 'The closing bracket character or string sequence.')\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t'diffEditor.maxComputationTime': {\n\t\t\ttype: 'number',\n\t\t\tdefault: diffEditorDefaultOptions.maxComputationTime,\n\t\t\tdescription: nls.localize('maxComputationTime', \"Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.\")\n\t\t},\n\t\t'diffEditor.maxFileSize': {\n\t\t\ttype: 'number',\n\t\t\tdefault: diffEditorDefaultOptions.maxFileSize,\n\t\t\tdescription: nls.localize('maxFileSize', \"Maximum file size in MB for which to compute diffs. Use 0 for no limit.\")\n\t\t},\n\t\t'diffEditor.renderSideBySide': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.renderSideBySide,\n\t\t\tdescription: nls.localize('sideBySide', \"Controls whether the diff editor shows the diff side by side or inline.\")\n\t\t},\n\t\t'diffEditor.renderSideBySideInlineBreakpoint': {\n\t\t\ttype: 'number',\n\t\t\tdefault: diffEditorDefaultOptions.renderSideBySideInlineBreakpoint,\n\t\t\tdescription: nls.localize('renderSideBySideInlineBreakpoint', \"If the diff editor width is smaller than this value, the inline view is used.\")\n\t\t},\n\t\t'diffEditor.useInlineViewWhenSpaceIsLimited': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.useInlineViewWhenSpaceIsLimited,\n\t\t\tdescription: nls.localize('useInlineViewWhenSpaceIsLimited', \"If enabled and the editor width is too small, the inline view is used.\")\n\t\t},\n\t\t'diffEditor.renderMarginRevertIcon': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.renderMarginRevertIcon,\n\t\t\tdescription: nls.localize('renderMarginRevertIcon', \"When enabled, the diff editor shows arrows in its glyph margin to revert changes.\")\n\t\t},\n\t\t'diffEditor.ignoreTrimWhitespace': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.ignoreTrimWhitespace,\n\t\t\tdescription: nls.localize('ignoreTrimWhitespace', \"When enabled, the diff editor ignores changes in leading or trailing whitespace.\")\n\t\t},\n\t\t'diffEditor.renderIndicators': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.renderIndicators,\n\t\t\tdescription: nls.localize('renderIndicators', \"Controls whether the diff editor shows +/- indicators for added/removed changes.\")\n\t\t},\n\t\t'diffEditor.codeLens': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.diffCodeLens,\n\t\t\tdescription: nls.localize('codeLens', \"Controls whether the editor shows CodeLens.\")\n\t\t},\n\t\t'diffEditor.wordWrap': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['off', 'on', 'inherit'],\n\t\t\tdefault: diffEditorDefaultOptions.diffWordWrap,\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('wordWrap.off', \"Lines will never wrap.\"),\n\t\t\t\tnls.localize('wordWrap.on', \"Lines will wrap at the viewport width.\"),\n\t\t\t\tnls.localize('wordWrap.inherit', \"Lines will wrap according to the {0} setting.\", '`#editor.wordWrap#`'),\n\t\t\t]\n\t\t},\n\t\t'diffEditor.diffAlgorithm': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['legacy', 'advanced'],\n\t\t\tdefault: diffEditorDefaultOptions.diffAlgorithm,\n\t\t\tmarkdownEnumDescriptions: [\n\t\t\t\tnls.localize('diffAlgorithm.legacy', \"Uses the legacy diffing algorithm.\"),\n\t\t\t\tnls.localize('diffAlgorithm.advanced', \"Uses the advanced diffing algorithm.\"),\n\t\t\t],\n\t\t\ttags: ['experimental'],\n\t\t},\n\t\t'diffEditor.hideUnchangedRegions.enabled': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.hideUnchangedRegions.enabled,\n\t\t\tmarkdownDescription: nls.localize('hideUnchangedRegions.enabled', \"Controls whether the diff editor shows unchanged regions.\"),\n\t\t},\n\t\t'diffEditor.hideUnchangedRegions.revealLineCount': {\n\t\t\ttype: 'integer',\n\t\t\tdefault: diffEditorDefaultOptions.hideUnchangedRegions.revealLineCount,\n\t\t\tmarkdownDescription: nls.localize('hideUnchangedRegions.revealLineCount', \"Controls how many lines are used for unchanged regions.\"),\n\t\t\tminimum: 1,\n\t\t},\n\t\t'diffEditor.hideUnchangedRegions.minimumLineCount': {\n\t\t\ttype: 'integer',\n\t\t\tdefault: diffEditorDefaultOptions.hideUnchangedRegions.minimumLineCount,\n\t\t\tmarkdownDescription: nls.localize('hideUnchangedRegions.minimumLineCount', \"Controls how many lines are used as a minimum for unchanged regions.\"),\n\t\t\tminimum: 1,\n\t\t},\n\t\t'diffEditor.hideUnchangedRegions.contextLineCount': {\n\t\t\ttype: 'integer',\n\t\t\tdefault: diffEditorDefaultOptions.hideUnchangedRegions.contextLineCount,\n\t\t\tmarkdownDescription: nls.localize('hideUnchangedRegions.contextLineCount', \"Controls how many lines are used as context when comparing unchanged regions.\"),\n\t\t\tminimum: 1,\n\t\t},\n\t\t'diffEditor.experimental.showMoves': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.experimental.showMoves,\n\t\t\tmarkdownDescription: nls.localize('showMoves', \"Controls whether the diff editor should show detected code moves.\")\n\t\t},\n\t\t'diffEditor.experimental.showEmptyDecorations': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: diffEditorDefaultOptions.experimental.showEmptyDecorations,\n\t\t\tdescription: nls.localize('showEmptyDecorations', \"Controls whether the diff editor shows empty decorations to see where characters got inserted or deleted.\"),\n\t\t}\n\t}\n};\n\nfunction isConfigurationPropertySchema(x: IConfigurationPropertySchema | { [path: string]: IConfigurationPropertySchema }): x is IConfigurationPropertySchema {\n\treturn (typeof x.type !== 'undefined' || typeof x.anyOf !== 'undefined');\n}\n\n// Add properties from the Editor Option Registry\nfor (const editorOption of editorOptionsRegistry) {\n\tconst schema = editorOption.schema;\n\tif (typeof schema !== 'undefined') {\n\t\tif (isConfigurationPropertySchema(schema)) {\n\t\t\t// This is a single schema contribution\n\t\t\teditorConfiguration.properties![`editor.${editorOption.name}`] = schema;\n\t\t} else {\n\t\t\tfor (const key in schema) {\n\t\t\t\tif (Object.hasOwnProperty.call(schema, key)) {\n\t\t\t\t\teditorConfiguration.properties![key] = schema[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nlet cachedEditorConfigurationKeys: { [key: string]: boolean } | null = null;\nfunction getEditorConfigurationKeys(): { [key: string]: boolean } {\n\tif (cachedEditorConfigurationKeys === null) {\n\t\tcachedEditorConfigurationKeys = <{ [key: string]: boolean }>Object.create(null);\n\t\tObject.keys(editorConfiguration.properties!).forEach((prop) => {\n\t\t\tcachedEditorConfigurationKeys![prop] = true;\n\t\t});\n\t}\n\treturn cachedEditorConfigurationKeys;\n}\n\nexport function isEditorConfigurationKey(key: string): boolean {\n\tconst editorConfigurationKeys = getEditorConfigurationKeys();\n\treturn (editorConfigurationKeys[`editor.${key}`] || false);\n}\n\nexport function isDiffEditorConfigurationKey(key: string): boolean {\n\tconst editorConfigurationKeys = getEditorConfigurationKeys();\n\treturn (editorConfigurationKeys[`diffEditor.${key}`] || false);\n}\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\nconfigurationRegistry.registerConfiguration(editorConfiguration);\n"]}