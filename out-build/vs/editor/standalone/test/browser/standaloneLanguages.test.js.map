{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/standalone/test/browser/standaloneLanguages.test.ts"],"names":[],"mappings":"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","file":"standaloneLanguages.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Color } from 'vs/base/common/color';\nimport { Emitter } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { LanguageId, MetadataConsts } from 'vs/editor/common/encodedTokenAttributes';\nimport { IState, Token } from 'vs/editor/common/languages';\nimport { TokenTheme } from 'vs/editor/common/languages/supports/tokenization';\nimport { LanguageService } from 'vs/editor/common/services/languageService';\nimport { ILineTokens, IToken, TokenizationSupportAdapter, TokensProvider } from 'vs/editor/standalone/browser/standaloneLanguages';\nimport { IStandaloneTheme, IStandaloneThemeData, IStandaloneThemeService } from 'vs/editor/standalone/common/standaloneTheme';\nimport { UnthemedProductIconTheme } from 'vs/platform/theme/browser/iconsStyleSheet';\nimport { ColorIdentifier } from 'vs/platform/theme/common/colorRegistry';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\nimport { IColorTheme, IFileIconTheme, IProductIconTheme, ITokenStyle } from 'vs/platform/theme/common/themeService';\n\nsuite('TokenizationSupport2Adapter', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst languageId = 'tttt';\n\t// const tokenMetadata = (LanguageId.PlainText << MetadataConsts.LANGUAGEID_OFFSET);\n\n\tclass MockTokenTheme extends TokenTheme {\n\t\tprivate counter = 0;\n\t\tconstructor() {\n\t\t\tsuper(null!, null!);\n\t\t}\n\t\tpublic override match(languageId: LanguageId, token: string): number {\n\t\t\treturn (\n\t\t\t\t((this.counter++) << MetadataConsts.FOREGROUND_OFFSET)\n\t\t\t\t| (languageId << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t\t) >>> 0;\n\t\t}\n\t}\n\n\tclass MockThemeService implements IStandaloneThemeService {\n\t\tdeclare readonly _serviceBrand: undefined;\n\t\tpublic setTheme(themeName: string): string {\n\t\t\tthrow new Error('Not implemented');\n\t\t}\n\t\tpublic setAutoDetectHighContrast(autoDetectHighContrast: boolean): void {\n\t\t\tthrow new Error('Not implemented');\n\t\t}\n\t\tpublic defineTheme(themeName: string, themeData: IStandaloneThemeData): void {\n\t\t\tthrow new Error('Not implemented');\n\t\t}\n\t\tpublic getColorTheme(): IStandaloneTheme {\n\t\t\treturn {\n\t\t\t\tlabel: 'mock',\n\n\t\t\t\ttokenTheme: new MockTokenTheme(),\n\n\t\t\t\tthemeName: ColorScheme.LIGHT,\n\n\t\t\t\ttype: ColorScheme.LIGHT,\n\n\t\t\t\tgetColor: (color: ColorIdentifier, useDefault?: boolean): Color => {\n\t\t\t\t\tthrow new Error('Not implemented');\n\t\t\t\t},\n\n\t\t\t\tdefines: (color: ColorIdentifier): boolean => {\n\t\t\t\t\tthrow new Error('Not implemented');\n\t\t\t\t},\n\n\t\t\t\tgetTokenStyleMetadata: (type: string, modifiers: string[], modelLanguage: string): ITokenStyle | undefined => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\n\t\t\t\tsemanticHighlighting: false,\n\n\t\t\t\ttokenColorMap: []\n\t\t\t};\n\t\t}\n\t\tsetColorMapOverride(colorMapOverride: Color[] | null): void {\n\t\t}\n\t\tpublic getFileIconTheme(): IFileIconTheme {\n\t\t\treturn {\n\t\t\t\thasFileIcons: false,\n\t\t\t\thasFolderIcons: false,\n\t\t\t\thidesExplorerArrows: false\n\t\t\t};\n\t\t}\n\n\t\tprivate _builtInProductIconTheme = new UnthemedProductIconTheme();\n\n\t\tpublic getProductIconTheme(): IProductIconTheme {\n\t\t\treturn this._builtInProductIconTheme;\n\t\t}\n\t\tpublic readonly onDidColorThemeChange = new Emitter<IColorTheme>().event;\n\t\tpublic readonly onDidFileIconThemeChange = new Emitter<IFileIconTheme>().event;\n\t\tpublic readonly onDidProductIconThemeChange = new Emitter<IProductIconTheme>().event;\n\t}\n\n\tclass MockState implements IState {\n\t\tpublic static readonly INSTANCE = new MockState();\n\t\tprivate constructor() { }\n\t\tpublic clone(): IState {\n\t\t\treturn this;\n\t\t}\n\t\tpublic equals(other: IState): boolean {\n\t\t\treturn this === other;\n\t\t}\n\t}\n\n\tfunction testBadTokensProvider(providerTokens: IToken[], expectedClassicTokens: Token[], expectedModernTokens: number[]): void {\n\n\t\tclass BadTokensProvider implements TokensProvider {\n\t\t\tpublic getInitialState(): IState {\n\t\t\t\treturn MockState.INSTANCE;\n\t\t\t}\n\t\t\tpublic tokenize(line: string, state: IState): ILineTokens {\n\t\t\t\treturn {\n\t\t\t\t\ttokens: providerTokens,\n\t\t\t\t\tendState: MockState.INSTANCE\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst languageService = disposables.add(new LanguageService());\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tconst adapter = new TokenizationSupportAdapter(\n\t\t\tlanguageId,\n\t\t\tnew BadTokensProvider(),\n\t\t\tlanguageService,\n\t\t\tnew MockThemeService()\n\t\t);\n\n\t\tconst actualClassicTokens = adapter.tokenize('whatever', true, MockState.INSTANCE);\n\t\tassert.deepStrictEqual(actualClassicTokens.tokens, expectedClassicTokens);\n\n\t\tconst actualModernTokens = adapter.tokenizeEncoded('whatever', true, MockState.INSTANCE);\n\t\tconst modernTokens: number[] = [];\n\t\tfor (let i = 0; i < actualModernTokens.tokens.length; i++) {\n\t\t\tmodernTokens[i] = actualModernTokens.tokens[i];\n\t\t}\n\n\t\t// Add the encoded language id to the expected tokens\n\t\tconst encodedLanguageId = languageService.languageIdCodec.encodeLanguageId(languageId);\n\t\tconst tokenLanguageMetadata = (encodedLanguageId << MetadataConsts.LANGUAGEID_OFFSET);\n\t\tfor (let i = 1; i < expectedModernTokens.length; i += 2) {\n\t\t\texpectedModernTokens[i] |= tokenLanguageMetadata;\n\t\t}\n\t\tassert.deepStrictEqual(modernTokens, expectedModernTokens);\n\n\t\tdisposables.dispose();\n\t}\n\n\ttest('tokens always start at index 0', () => {\n\t\ttestBadTokensProvider(\n\t\t\t[\n\t\t\t\t{ startIndex: 7, scopes: 'foo' },\n\t\t\t\t{ startIndex: 0, scopes: 'bar' }\n\t\t\t],\n\t\t\t[\n\t\t\t\tnew Token(0, 'foo', languageId),\n\t\t\t\tnew Token(0, 'bar', languageId),\n\t\t\t],\n\t\t\t[\n\t\t\t\t0, (0 << MetadataConsts.FOREGROUND_OFFSET) | MetadataConsts.BALANCED_BRACKETS_MASK,\n\t\t\t\t0, (1 << MetadataConsts.FOREGROUND_OFFSET) | MetadataConsts.BALANCED_BRACKETS_MASK\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('tokens always start after each other', () => {\n\t\ttestBadTokensProvider(\n\t\t\t[\n\t\t\t\t{ startIndex: 0, scopes: 'foo' },\n\t\t\t\t{ startIndex: 5, scopes: 'bar' },\n\t\t\t\t{ startIndex: 3, scopes: 'foo' },\n\t\t\t],\n\t\t\t[\n\t\t\t\tnew Token(0, 'foo', languageId),\n\t\t\t\tnew Token(5, 'bar', languageId),\n\t\t\t\tnew Token(5, 'foo', languageId),\n\t\t\t],\n\t\t\t[\n\t\t\t\t0, (0 << MetadataConsts.FOREGROUND_OFFSET) | MetadataConsts.BALANCED_BRACKETS_MASK,\n\t\t\t\t5, (1 << MetadataConsts.FOREGROUND_OFFSET) | MetadataConsts.BALANCED_BRACKETS_MASK,\n\t\t\t\t5, (2 << MetadataConsts.FOREGROUND_OFFSET) | MetadataConsts.BALANCED_BRACKETS_MASK\n\t\t\t]\n\t\t);\n\t});\n});\n"]}