{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/standalone/browser/standaloneLayoutService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAQhG,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;QAM5B,IAAI,SAAS;YACZ,IAAI,CAAC,IAAI,CAAC,CAAC,EAAW;gBACrB,IAAI,CAAC,CAAC,GAAY,GAAG,CAAC,GAAG,CAAW,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC1D;YAED,OAAO,IAAI,CAAC,CAAC,CAAU;QACxB,CAAC;QAED,IAAI,YAAY;YACf,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,SAAS;YACZ,4FAA4F;YAC5F,4FAA4F;YAC5F,2FAA2F;YAC3F,wFAAwF;YACxF,uCAAuC;YACvC,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;QACxF,CAAC;QAED,KAAK;YACJ,IAAI,CAAC,CAAC,CAAkB,oBAAoB,EAAE,EAAE,KAAK,EAAE,CAAC;QACzD,CAAC;QAID,YACqB,CAA+B;YAAvB,MAAC,GAAD,CAAC,CAAsB;YA/B7C,gBAAW,GAAG,aAAK,CAAC,IAAI,CAAC;YA4BvB,WAAM,GAAsB,EAAE,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC;QAI7D,CAAC;KAEL,CAAA;IArCK,uBAAuB;QAkC1B,WAAA,uBAAG,CAAA;OAlCA,uBAAuB,CAqC5B;IAEM,IAAM,IAAI,GAAV,MAAM,IAA0B,SAAQ,uBAAuB;QACrE,IAAa,YAAY;YACxB,OAAO,KAAK,CAAC;QACd,CAAC;QACD,IAAa,SAAS;YACrB,OAAO,IAAI,CAAC,CAAC,CAAU;QACxB,CAAC;QACD,YACS,CAAuB,EACX,iBAAsB;YAE1C,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAHjB,MAAC,GAAD,CAAC,CAAsB;QAIhC,CAAC;KACD,CAAA;IAbY,oBAAI;mBAAJ,IAAI;QASd,WAAA,uBAAG,CAAA;OATO,IAAI,CAahB;IAED,IAAA,gBAAG,EAAe,mBAAG,EAAa,uBAAuB,oCAA4B,CAAC","file":"standaloneLayoutService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { Event } from 'vs/base/common/event';\nimport { ILayoutService, ILayoutOffsetInfo } from 'vs/platform/layout/browser/layoutService';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nclass StandaloneLayoutService implements ILayoutService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tpublic onDidLayout = Event.None;\n\n\tprivate _dimension?: dom.IDimension;\n\tget dimension(): dom.IDimension {\n\t\tif (!this._dimension) {\n\t\t\tthis._dimension = dom.getClientArea(window.document.body);\n\t\t}\n\n\t\treturn this._dimension;\n\t}\n\n\tget hasContainer(): boolean {\n\t\treturn false;\n\t}\n\n\tget container(): HTMLElement {\n\t\t// On a page, multiple editors can be created. Therefore, there are multiple containers, not\n\t\t// just a single one. Please use `ICodeEditorService` to get the current focused code editor\n\t\t// and use its container if necessary. You can also instantiate `EditorScopedLayoutService`\n\t\t// which implements `ILayoutService` but is not a part of the service collection because\n\t\t// it is code editor instance specific.\n\t\tthrow new Error(`ILayoutService.container is not available in the standalone editor!`);\n\t}\n\n\tfocus(): void {\n\t\tthis._codeEditorService.getFocusedCodeEditor()?.focus();\n\t}\n\n\treadonly offset: ILayoutOffsetInfo = { top: 0, quickPickTop: 0 };\n\n\tconstructor(\n\t\t@ICodeEditorService private _codeEditorService: ICodeEditorService\n\t) { }\n\n}\n\nexport class EditorScopedLayoutService extends StandaloneLayoutService {\n\toverride get hasContainer(): boolean {\n\t\treturn false;\n\t}\n\toverride get container(): HTMLElement {\n\t\treturn this._container;\n\t}\n\tconstructor(\n\t\tprivate _container: HTMLElement,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t) {\n\t\tsuper(codeEditorService);\n\t}\n}\n\nregisterSingleton(ILayoutService, StandaloneLayoutService, InstantiationType.Delayed);\n"]}