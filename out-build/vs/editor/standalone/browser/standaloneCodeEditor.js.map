{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/standalone/browser/standaloneCodeEditor.ts"],"names":[],"mappings":"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","file":"standaloneCodeEditor.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as aria from 'vs/base/browser/ui/aria/aria';\nimport { Disposable, IDisposable, toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { ICodeEditor, IDiffEditor, IDiffEditorConstructionOptions } from 'vs/editor/browser/editorBrowser';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { IDiffEditorOptions, IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { InternalEditorAction } from 'vs/editor/common/editorAction';\nimport { IModelChangedEvent } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { StandaloneKeybindingService, updateConfigurationService } from 'vs/editor/standalone/browser/standaloneServices';\nimport { IStandaloneThemeService } from 'vs/editor/standalone/common/standaloneTheme';\nimport { IMenuItem, MenuId, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry, ICommandHandler, ICommandService } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr, ContextKeyValue, IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { StandaloneCodeEditorNLS } from 'vs/editor/common/standaloneStrings';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IEditorProgressService } from 'vs/platform/progress/common/progress';\nimport { StandaloneThemeService } from 'vs/editor/standalone/browser/standaloneThemeService';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ILanguageSelection, ILanguageService } from 'vs/editor/common/languages/language';\nimport { URI } from 'vs/base/common/uri';\nimport { StandaloneCodeEditorService } from 'vs/editor/standalone/browser/standaloneCodeEditorService';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { IEditorConstructionOptions } from 'vs/editor/browser/config/editorConfiguration';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { DiffEditorWidget } from 'vs/editor/browser/widget/diffEditor/diffEditorWidget';\nimport { IAudioCueService } from 'vs/platform/audioCues/browser/audioCueService';\n\n/**\n * Description of an action contribution\n */\nexport interface IActionDescriptor {\n\t/**\n\t * An unique identifier of the contributed action.\n\t */\n\tid: string;\n\t/**\n\t * A label of the action that will be presented to the user.\n\t */\n\tlabel: string;\n\t/**\n\t * Precondition rule.\n\t */\n\tprecondition?: string;\n\t/**\n\t * An array of keybindings for the action.\n\t */\n\tkeybindings?: number[];\n\t/**\n\t * The keybinding rule (condition on top of precondition).\n\t */\n\tkeybindingContext?: string;\n\t/**\n\t * Control if the action should show up in the context menu and where.\n\t * The context menu of the editor has these default:\n\t *   navigation - The navigation group comes first in all cases.\n\t *   1_modification - This group comes next and contains commands that modify your code.\n\t *   9_cutcopypaste - The last default group with the basic editing commands.\n\t * You can also create your own group.\n\t * Defaults to null (don't show in context menu).\n\t */\n\tcontextMenuGroupId?: string;\n\t/**\n\t * Control the order in the context menu group.\n\t */\n\tcontextMenuOrder?: number;\n\t/**\n\t * Method that will be executed when the action is triggered.\n\t * @param editor The editor instance is passed in as a convenience\n\t */\n\trun(editor: ICodeEditor, ...args: any[]): void | Promise<void>;\n}\n\n/**\n * Options which apply for all editors.\n */\nexport interface IGlobalEditorOptions {\n\t/**\n\t * The number of spaces a tab is equal to.\n\t * This setting is overridden based on the file contents when `detectIndentation` is on.\n\t * Defaults to 4.\n\t */\n\ttabSize?: number;\n\t/**\n\t * Insert spaces when pressing `Tab`.\n\t * This setting is overridden based on the file contents when `detectIndentation` is on.\n\t * Defaults to true.\n\t */\n\tinsertSpaces?: boolean;\n\t/**\n\t * Controls whether `tabSize` and `insertSpaces` will be automatically detected when a file is opened based on the file contents.\n\t * Defaults to true.\n\t */\n\tdetectIndentation?: boolean;\n\t/**\n\t * Remove trailing auto inserted whitespace.\n\t * Defaults to true.\n\t */\n\ttrimAutoWhitespace?: boolean;\n\t/**\n\t * Special handling for large files to disable certain memory intensive features.\n\t * Defaults to true.\n\t */\n\tlargeFileOptimizations?: boolean;\n\t/**\n\t * Controls whether completions should be computed based on words in the document.\n\t * Defaults to true.\n\t */\n\twordBasedSuggestions?: boolean;\n\t/**\n\t * Controls whether word based completions should be included from opened documents of the same language or any language.\n\t */\n\twordBasedSuggestionsOnlySameLanguage?: boolean;\n\t/**\n\t * Controls whether the semanticHighlighting is shown for the languages that support it.\n\t * true: semanticHighlighting is enabled for all themes\n\t * false: semanticHighlighting is disabled for all themes\n\t * 'configuredByTheme': semanticHighlighting is controlled by the current color theme's semanticHighlighting setting.\n\t * Defaults to 'byTheme'.\n\t */\n\t'semanticHighlighting.enabled'?: true | false | 'configuredByTheme';\n\t/**\n\t * Keep peek editors open even when double-clicking their content or when hitting `Escape`.\n\t * Defaults to false.\n\t */\n\tstablePeek?: boolean;\n\t/**\n\t * Lines above this length will not be tokenized for performance reasons.\n\t * Defaults to 20000.\n\t */\n\tmaxTokenizationLineLength?: number;\n\t/**\n\t * Theme to be used for rendering.\n\t * The current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black', 'hc-light'.\n\t * You can create custom themes via `monaco.editor.defineTheme`.\n\t * To switch a theme, use `monaco.editor.setTheme`.\n\t * **NOTE**: The theme might be overwritten if the OS is in high contrast mode, unless `autoDetectHighContrast` is set to false.\n\t */\n\ttheme?: string;\n\t/**\n\t * If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme.\n\t * Defaults to true.\n\t */\n\tautoDetectHighContrast?: boolean;\n}\n\n/**\n * The options to create an editor.\n */\nexport interface IStandaloneEditorConstructionOptions extends IEditorConstructionOptions, IGlobalEditorOptions {\n\t/**\n\t * The initial model associated with this code editor.\n\t */\n\tmodel?: ITextModel | null;\n\t/**\n\t * The initial value of the auto created model in the editor.\n\t * To not automatically create a model, use `model: null`.\n\t */\n\tvalue?: string;\n\t/**\n\t * The initial language of the auto created model in the editor.\n\t * To not automatically create a model, use `model: null`.\n\t */\n\tlanguage?: string;\n\t/**\n\t * Initial theme to be used for rendering.\n\t * The current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black', 'hc-light.\n\t * You can create custom themes via `monaco.editor.defineTheme`.\n\t * To switch a theme, use `monaco.editor.setTheme`.\n\t * **NOTE**: The theme might be overwritten if the OS is in high contrast mode, unless `autoDetectHighContrast` is set to false.\n\t */\n\ttheme?: string;\n\t/**\n\t * If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme.\n\t * Defaults to true.\n\t */\n\tautoDetectHighContrast?: boolean;\n\t/**\n\t * An URL to open when Ctrl+H (Windows and Linux) or Cmd+H (OSX) is pressed in\n\t * the accessibility help dialog in the editor.\n\t *\n\t * Defaults to \"https://go.microsoft.com/fwlink/?linkid=852450\"\n\t */\n\taccessibilityHelpUrl?: string;\n\t/**\n\t * Container element to use for ARIA messages.\n\t * Defaults to document.body.\n\t */\n\tariaContainerElement?: HTMLElement;\n}\n\n/**\n * The options to create a diff editor.\n */\nexport interface IStandaloneDiffEditorConstructionOptions extends IDiffEditorConstructionOptions {\n\t/**\n\t * Initial theme to be used for rendering.\n\t * The current out-of-the-box available themes are: 'vs' (default), 'vs-dark', 'hc-black', 'hc-light.\n\t * You can create custom themes via `monaco.editor.defineTheme`.\n\t * To switch a theme, use `monaco.editor.setTheme`.\n\t * **NOTE**: The theme might be overwritten if the OS is in high contrast mode, unless `autoDetectHighContrast` is set to false.\n\t */\n\ttheme?: string;\n\t/**\n\t * If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme.\n\t * Defaults to true.\n\t */\n\tautoDetectHighContrast?: boolean;\n}\n\nexport interface IStandaloneCodeEditor extends ICodeEditor {\n\tupdateOptions(newOptions: IEditorOptions & IGlobalEditorOptions): void;\n\taddCommand(keybinding: number, handler: ICommandHandler, context?: string): string | null;\n\tcreateContextKey<T extends ContextKeyValue = ContextKeyValue>(key: string, defaultValue: T): IContextKey<T>;\n\taddAction(descriptor: IActionDescriptor): IDisposable;\n}\n\nexport interface IStandaloneDiffEditor extends IDiffEditor {\n\taddCommand(keybinding: number, handler: ICommandHandler, context?: string): string | null;\n\tcreateContextKey<T extends ContextKeyValue = ContextKeyValue>(key: string, defaultValue: T): IContextKey<T>;\n\taddAction(descriptor: IActionDescriptor): IDisposable;\n\n\tgetOriginalEditor(): IStandaloneCodeEditor;\n\tgetModifiedEditor(): IStandaloneCodeEditor;\n}\n\nlet LAST_GENERATED_COMMAND_ID = 0;\n\nlet ariaDomNodeCreated = false;\n/**\n * Create ARIA dom node inside parent,\n * or only for the first editor instantiation inside document.body.\n * @param parent container element for ARIA dom node\n */\nfunction createAriaDomNode(parent: HTMLElement | undefined) {\n\tif (!parent) {\n\t\tif (ariaDomNodeCreated) {\n\t\t\treturn;\n\t\t}\n\t\tariaDomNodeCreated = true;\n\t}\n\taria.setARIAContainer(parent || document.body);\n}\n\n/**\n * A code editor to be used both by the standalone editor and the standalone diff editor.\n */\nexport class StandaloneCodeEditor extends CodeEditorWidget implements IStandaloneCodeEditor {\n\n\tprivate readonly _standaloneKeybindingService: StandaloneKeybindingService | null;\n\n\tconstructor(\n\t\tdomElement: HTMLElement,\n\t\t_options: Readonly<IStandaloneEditorConstructionOptions>,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tconst options = { ..._options };\n\t\toptions.ariaLabel = options.ariaLabel || StandaloneCodeEditorNLS.editorViewAccessibleLabel;\n\t\toptions.ariaLabel = options.ariaLabel + ';' + (StandaloneCodeEditorNLS.accessibilityHelpMessage);\n\t\tsuper(domElement, options, {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService);\n\n\t\tif (keybindingService instanceof StandaloneKeybindingService) {\n\t\t\tthis._standaloneKeybindingService = keybindingService;\n\t\t} else {\n\t\t\tthis._standaloneKeybindingService = null;\n\t\t}\n\n\t\tcreateAriaDomNode(options.ariaContainerElement);\n\t}\n\n\tpublic addCommand(keybinding: number, handler: ICommandHandler, context?: string): string | null {\n\t\tif (!this._standaloneKeybindingService) {\n\t\t\tconsole.warn('Cannot add command because the editor is configured with an unrecognized KeybindingService');\n\t\t\treturn null;\n\t\t}\n\t\tconst commandId = 'DYNAMIC_' + (++LAST_GENERATED_COMMAND_ID);\n\t\tconst whenExpression = ContextKeyExpr.deserialize(context);\n\t\tthis._standaloneKeybindingService.addDynamicKeybinding(commandId, keybinding, handler, whenExpression);\n\t\treturn commandId;\n\t}\n\n\tpublic createContextKey<T extends ContextKeyValue = ContextKeyValue>(key: string, defaultValue: T): IContextKey<T> {\n\t\treturn this._contextKeyService.createKey(key, defaultValue);\n\t}\n\n\tpublic addAction(_descriptor: IActionDescriptor): IDisposable {\n\t\tif ((typeof _descriptor.id !== 'string') || (typeof _descriptor.label !== 'string') || (typeof _descriptor.run !== 'function')) {\n\t\t\tthrow new Error('Invalid action descriptor, `id`, `label` and `run` are required properties!');\n\t\t}\n\t\tif (!this._standaloneKeybindingService) {\n\t\t\tconsole.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\t// Read descriptor options\n\t\tconst id = _descriptor.id;\n\t\tconst label = _descriptor.label;\n\t\tconst precondition = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.equals('editorId', this.getId()),\n\t\t\tContextKeyExpr.deserialize(_descriptor.precondition)\n\t\t);\n\t\tconst keybindings = _descriptor.keybindings;\n\t\tconst keybindingsWhen = ContextKeyExpr.and(\n\t\t\tprecondition,\n\t\t\tContextKeyExpr.deserialize(_descriptor.keybindingContext)\n\t\t);\n\t\tconst contextMenuGroupId = _descriptor.contextMenuGroupId || null;\n\t\tconst contextMenuOrder = _descriptor.contextMenuOrder || 0;\n\t\tconst run = (_accessor?: ServicesAccessor, ...args: any[]): Promise<void> => {\n\t\t\treturn Promise.resolve(_descriptor.run(this, ...args));\n\t\t};\n\n\n\t\tconst toDispose = new DisposableStore();\n\n\t\t// Generate a unique id to allow the same descriptor.id across multiple editor instances\n\t\tconst uniqueId = this.getId() + ':' + id;\n\n\t\t// Register the command\n\t\ttoDispose.add(CommandsRegistry.registerCommand(uniqueId, run));\n\n\t\t// Register the context menu item\n\t\tif (contextMenuGroupId) {\n\t\t\tconst menuItem: IMenuItem = {\n\t\t\t\tcommand: {\n\t\t\t\t\tid: uniqueId,\n\t\t\t\t\ttitle: label\n\t\t\t\t},\n\t\t\t\twhen: precondition,\n\t\t\t\tgroup: contextMenuGroupId,\n\t\t\t\torder: contextMenuOrder\n\t\t\t};\n\t\t\ttoDispose.add(MenuRegistry.appendMenuItem(MenuId.EditorContext, menuItem));\n\t\t}\n\n\t\t// Register the keybindings\n\t\tif (Array.isArray(keybindings)) {\n\t\t\tfor (const kb of keybindings) {\n\t\t\t\ttoDispose.add(this._standaloneKeybindingService.addDynamicKeybinding(uniqueId, kb, run, keybindingsWhen));\n\t\t\t}\n\t\t}\n\n\t\t// Finally, register an internal editor action\n\t\tconst internalAction = new InternalEditorAction(\n\t\t\tuniqueId,\n\t\t\tlabel,\n\t\t\tlabel,\n\t\t\tprecondition,\n\t\t\t(...args: unknown[]) => Promise.resolve(_descriptor.run(this, ...args)),\n\t\t\tthis._contextKeyService\n\t\t);\n\n\t\t// Store it under the original id, such that trigger with the original id will work\n\t\tthis._actions.set(id, internalAction);\n\t\ttoDispose.add(toDisposable(() => {\n\t\t\tthis._actions.delete(id);\n\t\t}));\n\n\t\treturn toDispose;\n\t}\n\n\tprotected override _triggerCommand(handlerId: string, payload: any): void {\n\t\tif (this._codeEditorService instanceof StandaloneCodeEditorService) {\n\t\t\t// Help commands find this editor as the active editor\n\t\t\ttry {\n\t\t\t\tthis._codeEditorService.setActiveCodeEditor(this);\n\t\t\t\tsuper._triggerCommand(handlerId, payload);\n\t\t\t} finally {\n\t\t\t\tthis._codeEditorService.setActiveCodeEditor(null);\n\t\t\t}\n\t\t} else {\n\t\t\tsuper._triggerCommand(handlerId, payload);\n\t\t}\n\t}\n}\n\nexport class StandaloneEditor extends StandaloneCodeEditor implements IStandaloneCodeEditor {\n\n\tprivate readonly _configurationService: IConfigurationService;\n\tprivate readonly _standaloneThemeService: IStandaloneThemeService;\n\tprivate _ownsModel: boolean;\n\n\tconstructor(\n\t\tdomElement: HTMLElement,\n\t\t_options: Readonly<IStandaloneEditorConstructionOptions> | undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IStandaloneThemeService themeService: IStandaloneThemeService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@IModelService modelService: IModelService,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tconst options = { ..._options };\n\t\tupdateConfigurationService(configurationService, options, false);\n\t\tconst themeDomRegistration = (<StandaloneThemeService>themeService).registerEditorContainer(domElement);\n\t\tif (typeof options.theme === 'string') {\n\t\t\tthemeService.setTheme(options.theme);\n\t\t}\n\t\tif (typeof options.autoDetectHighContrast !== 'undefined') {\n\t\t\tthemeService.setAutoDetectHighContrast(Boolean(options.autoDetectHighContrast));\n\t\t}\n\t\tconst _model: ITextModel | null | undefined = options.model;\n\t\tdelete options.model;\n\t\tsuper(domElement, options, instantiationService, codeEditorService, commandService, contextKeyService, keybindingService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService);\n\n\t\tthis._configurationService = configurationService;\n\t\tthis._standaloneThemeService = themeService;\n\t\tthis._register(themeDomRegistration);\n\n\t\tlet model: ITextModel | null;\n\t\tif (typeof _model === 'undefined') {\n\t\t\tconst languageId = languageService.getLanguageIdByMimeType(options.language) || options.language || PLAINTEXT_LANGUAGE_ID;\n\t\t\tmodel = createTextModel(modelService, languageService, options.value || '', languageId, undefined);\n\t\t\tthis._ownsModel = true;\n\t\t} else {\n\t\t\tmodel = _model;\n\t\t\tthis._ownsModel = false;\n\t\t}\n\n\t\tthis._attachModel(model);\n\t\tif (model) {\n\t\t\tconst e: IModelChangedEvent = {\n\t\t\t\toldModelUrl: null,\n\t\t\t\tnewModelUrl: model.uri\n\t\t\t};\n\t\t\tthis._onDidChangeModel.fire(e);\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic override updateOptions(newOptions: Readonly<IEditorOptions & IGlobalEditorOptions>): void {\n\t\tupdateConfigurationService(this._configurationService, newOptions, false);\n\t\tif (typeof newOptions.theme === 'string') {\n\t\t\tthis._standaloneThemeService.setTheme(newOptions.theme);\n\t\t}\n\t\tif (typeof newOptions.autoDetectHighContrast !== 'undefined') {\n\t\t\tthis._standaloneThemeService.setAutoDetectHighContrast(Boolean(newOptions.autoDetectHighContrast));\n\t\t}\n\t\tsuper.updateOptions(newOptions);\n\t}\n\n\tprotected override _postDetachModelCleanup(detachedModel: ITextModel): void {\n\t\tsuper._postDetachModelCleanup(detachedModel);\n\t\tif (detachedModel && this._ownsModel) {\n\t\t\tdetachedModel.dispose();\n\t\t\tthis._ownsModel = false;\n\t\t}\n\t}\n}\n\nexport class StandaloneDiffEditor2 extends DiffEditorWidget implements IStandaloneDiffEditor {\n\n\tprivate readonly _configurationService: IConfigurationService;\n\tprivate readonly _standaloneThemeService: IStandaloneThemeService;\n\n\tconstructor(\n\t\tdomElement: HTMLElement,\n\t\t_options: Readonly<IStandaloneDiffEditorConstructionOptions> | undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IStandaloneThemeService themeService: IStandaloneThemeService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IEditorProgressService editorProgressService: IEditorProgressService,\n\t\t@IClipboardService clipboardService: IClipboardService,\n\t\t@IAudioCueService audioCueService: IAudioCueService,\n\t) {\n\t\tconst options = { ..._options };\n\t\tupdateConfigurationService(configurationService, options, true);\n\t\tconst themeDomRegistration = (<StandaloneThemeService>themeService).registerEditorContainer(domElement);\n\t\tif (typeof options.theme === 'string') {\n\t\t\tthemeService.setTheme(options.theme);\n\t\t}\n\t\tif (typeof options.autoDetectHighContrast !== 'undefined') {\n\t\t\tthemeService.setAutoDetectHighContrast(Boolean(options.autoDetectHighContrast));\n\t\t}\n\n\t\tsuper(\n\t\t\tdomElement,\n\t\t\toptions,\n\t\t\t{},\n\t\t\tcontextKeyService,\n\t\t\tinstantiationService,\n\t\t\tcodeEditorService,\n\t\t\taudioCueService,\n\t\t\teditorProgressService,\n\t\t);\n\n\t\tthis._configurationService = configurationService;\n\t\tthis._standaloneThemeService = themeService;\n\n\t\tthis._register(themeDomRegistration);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic override updateOptions(newOptions: Readonly<IDiffEditorOptions & IGlobalEditorOptions>): void {\n\t\tupdateConfigurationService(this._configurationService, newOptions, true);\n\t\tif (typeof newOptions.theme === 'string') {\n\t\t\tthis._standaloneThemeService.setTheme(newOptions.theme);\n\t\t}\n\t\tif (typeof newOptions.autoDetectHighContrast !== 'undefined') {\n\t\t\tthis._standaloneThemeService.setAutoDetectHighContrast(Boolean(newOptions.autoDetectHighContrast));\n\t\t}\n\t\tsuper.updateOptions(newOptions);\n\t}\n\n\tprotected override _createInnerEditor(instantiationService: IInstantiationService, container: HTMLElement, options: Readonly<IEditorOptions>): CodeEditorWidget {\n\t\treturn instantiationService.createInstance(StandaloneCodeEditor, container, options);\n\t}\n\n\tpublic override getOriginalEditor(): IStandaloneCodeEditor {\n\t\treturn <StandaloneCodeEditor>super.getOriginalEditor();\n\t}\n\n\tpublic override getModifiedEditor(): IStandaloneCodeEditor {\n\t\treturn <StandaloneCodeEditor>super.getModifiedEditor();\n\t}\n\n\tpublic addCommand(keybinding: number, handler: ICommandHandler, context?: string): string | null {\n\t\treturn this.getModifiedEditor().addCommand(keybinding, handler, context);\n\t}\n\n\tpublic createContextKey<T extends ContextKeyValue = ContextKeyValue>(key: string, defaultValue: T): IContextKey<T> {\n\t\treturn this.getModifiedEditor().createContextKey(key, defaultValue);\n\t}\n\n\tpublic addAction(descriptor: IActionDescriptor): IDisposable {\n\t\treturn this.getModifiedEditor().addAction(descriptor);\n\t}\n}\n\n/**\n * @internal\n */\nexport function createTextModel(modelService: IModelService, languageService: ILanguageService, value: string, languageId: string | undefined, uri: URI | undefined): ITextModel {\n\tvalue = value || '';\n\tif (!languageId) {\n\t\tconst firstLF = value.indexOf('\\n');\n\t\tlet firstLine = value;\n\t\tif (firstLF !== -1) {\n\t\t\tfirstLine = value.substring(0, firstLF);\n\t\t}\n\t\treturn doCreateModel(modelService, value, languageService.createByFilepathOrFirstLine(uri || null, firstLine), uri);\n\t}\n\treturn doCreateModel(modelService, value, languageService.createById(languageId), uri);\n}\n\n/**\n * @internal\n */\nfunction doCreateModel(modelService: IModelService, value: string, languageSelection: ILanguageSelection, uri: URI | undefined): ITextModel {\n\treturn modelService.createModel(value, languageSelection, uri);\n}\n"]}