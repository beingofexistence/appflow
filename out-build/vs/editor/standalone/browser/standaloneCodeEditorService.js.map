{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/standalone/browser/standaloneCodeEditorService.ts"],"names":[],"mappings":"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","file":"standaloneCodeEditorService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { windowOpenNoOpener } from 'vs/base/browser/dom';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { AbstractCodeEditorService } from 'vs/editor/browser/services/abstractCodeEditorService';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { ITextResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\n\nexport class StandaloneCodeEditorService extends AbstractCodeEditorService {\n\n\tprivate readonly _editorIsOpen: IContextKey<boolean>;\n\tprivate _activeCodeEditor: ICodeEditor | null;\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tsuper(themeService);\n\t\tthis._register(this.onCodeEditorAdd(() => this._checkContextKey()));\n\t\tthis._register(this.onCodeEditorRemove(() => this._checkContextKey()));\n\t\tthis._editorIsOpen = contextKeyService.createKey('editorIsOpen', false);\n\t\tthis._activeCodeEditor = null;\n\n\t\tthis._register(this.registerCodeEditorOpenHandler(async (input, source, sideBySide) => {\n\t\t\tif (!source) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn this.doOpenEditor(source, input);\n\t\t}));\n\t}\n\n\tprivate _checkContextKey(): void {\n\t\tlet hasCodeEditor = false;\n\t\tfor (const editor of this.listCodeEditors()) {\n\t\t\tif (!editor.isSimpleWidget) {\n\t\t\t\thasCodeEditor = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._editorIsOpen.set(hasCodeEditor);\n\t}\n\n\tpublic setActiveCodeEditor(activeCodeEditor: ICodeEditor | null): void {\n\t\tthis._activeCodeEditor = activeCodeEditor;\n\t}\n\n\tpublic getActiveCodeEditor(): ICodeEditor | null {\n\t\treturn this._activeCodeEditor;\n\t}\n\n\n\tprivate doOpenEditor(editor: ICodeEditor, input: ITextResourceEditorInput): ICodeEditor | null {\n\t\tconst model = this.findModel(editor, input.resource);\n\t\tif (!model) {\n\t\t\tif (input.resource) {\n\n\t\t\t\tconst schema = input.resource.scheme;\n\t\t\t\tif (schema === Schemas.http || schema === Schemas.https) {\n\t\t\t\t\t// This is a fully qualified http or https URL\n\t\t\t\t\twindowOpenNoOpener(input.resource.toString());\n\t\t\t\t\treturn editor;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst selection = <IRange>(input.options ? input.options.selection : null);\n\t\tif (selection) {\n\t\t\tif (typeof selection.endLineNumber === 'number' && typeof selection.endColumn === 'number') {\n\t\t\t\teditor.setSelection(selection);\n\t\t\t\teditor.revealRangeInCenter(selection, ScrollType.Immediate);\n\t\t\t} else {\n\t\t\t\tconst pos = {\n\t\t\t\t\tlineNumber: selection.startLineNumber,\n\t\t\t\t\tcolumn: selection.startColumn\n\t\t\t\t};\n\t\t\t\teditor.setPosition(pos);\n\t\t\t\teditor.revealPositionInCenter(pos, ScrollType.Immediate);\n\t\t\t}\n\t\t}\n\n\t\treturn editor;\n\t}\n\n\tprivate findModel(editor: ICodeEditor, resource: URI): ITextModel | null {\n\t\tconst model = editor.getModel();\n\t\tif (model && model.uri.toString() !== resource.toString()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn model;\n\t}\n}\n\nregisterSingleton(ICodeEditorService, StandaloneCodeEditorService, InstantiationType.Eager);\n"]}