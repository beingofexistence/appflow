{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/standalone/browser/quickAccess/standaloneCommandsQuickAccess.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAoBzF,IAAM,IAAI,GAAV,MAAM,IAAsC,SAAQ,0BAAI;QAE9D,IAAc,CAAC,KAAgD,OAAO,IAAI,CAAC,CAAC,CAAiB,oBAAoB,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC;QAEnI,YACwB,oBAAyB,EACX,CAAsB,EACvC,iBAAsB,EACzB,cAAmB,EACjB,gBAAqB,EACxB,aAAkB;YAElC,KAAK,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,cAAc,EAAE,gBAAgB,EAAE,aAAa,CAAC,CAAC;YANjF,MAAC,GAAD,CAAC,CAAqB;QAO5D,CAAC;QAES,KAAK,CAAC,CAAC;YAChB,OAAO,IAAI,CAAC,CAAC,EAA0B,CAAC;QACzC,CAAC;QAES,CAAC;YACV,OAAO,KAAK,CAAC;QACd,CAAC;QAES,KAAK,CAAC,CAAC;YAChB,OAAO,EAAE,CAAC;QACX,CAAC;KACD,CAAA;IA1BY,oBAAI;mBAAJ,IAAI;QAKd,WAAA,mBAAG,CAAA;QACH,WAAA,uBAAG,CAAA;QACH,WAAA,gBAAG,CAAA;QACH,WAAA,cAAG,CAAA;QACH,WAAA,eAAG,CAAA;QACH,WAAA,aAAG,CAAA;OAVO,IAAI,CA0BhB;IAED,MAAa,IAAe,SAAQ,sBAAG;iBAEtB,OAAE,GAAG,4BAA4B,CAAC;QAElD;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,IAAI,CAAW,EAAE;gBACrB,KAAK,EAAE,mCAAe,CAAC,uBAAuB;gBAC9C,KAAK,EAAE,iBAAiB;gBACxB,YAAY,EAAE,SAAS;gBACvB,MAAM,EAAE;oBACP,MAAM,EAAE,qCAAiB,CAAC,KAAK;oBAC/B,OAAO,qBAAY;oBACnB,MAAM,0CAAgC;iBACtC;gBACD,eAAe,EAAE;oBAChB,KAAK,EAAE,YAAY;oBACnB,KAAK,EAAE,CAAC;iBACR;aACD,CAAC,CAAC;QACJ,CAAC;QAED,GAAG,CAAC,QAA0B;YAC7B,QAAQ,CAAC,GAAG,CAAC,gBAAG,CAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAkC,MAAM,CAAC,CAAC;QACjG,CAAC;;IAxBF,oBAyBC;IAED,IAAA,sBAAG,EAAkB,IAAI,CAAW,CAAC;IAErC,cAAG,CAAM,EAAE,CAAuB,iBAAG,CAAQ,WAAW,CAAC,CAAC,2BAA2B,CAAC;QACrF,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,IAAI,CAAkC,MAAM;QACpD,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,mCAAe,CAAC,gBAAgB,EAAE,SAAS,EAAE,IAAI,CAAW,EAAE,EAAE,CAAC;KAC9F,CAAC,CAAC","file":"standaloneCommandsQuickAccess.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IQuickAccessRegistry, Extensions } from 'vs/platform/quickinput/common/quickAccess';\nimport { QuickCommandNLS } from 'vs/editor/common/standaloneStrings';\nimport { ICommandQuickPick } from 'vs/platform/quickinput/browser/commandsQuickAccess';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { AbstractEditorCommandsQuickAccessProvider } from 'vs/editor/contrib/quickAccess/browser/commandsQuickAccess';\nimport { IEditor } from 'vs/editor/common/editorCommon';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { EditorAction, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\n\nexport class StandaloneCommandsQuickAccessProvider extends AbstractEditorCommandsQuickAccessProvider {\n\n\tprotected get activeTextEditorControl(): IEditor | undefined { return this.codeEditorService.getFocusedCodeEditor() ?? undefined; }\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IDialogService dialogService: IDialogService\n\t) {\n\t\tsuper({ showAlias: false }, instantiationService, keybindingService, commandService, telemetryService, dialogService);\n\t}\n\n\tprotected async getCommandPicks(): Promise<Array<ICommandQuickPick>> {\n\t\treturn this.getCodeEditorCommandPicks();\n\t}\n\n\tprotected hasAdditionalCommandPicks(): boolean {\n\t\treturn false;\n\t}\n\n\tprotected async getAdditionalCommandPicks(): Promise<ICommandQuickPick[]> {\n\t\treturn [];\n\t}\n}\n\nexport class GotoLineAction extends EditorAction {\n\n\tstatic readonly ID = 'editor.action.quickCommand';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GotoLineAction.ID,\n\t\t\tlabel: QuickCommandNLS.quickCommandActionLabel,\n\t\t\talias: 'Command Palette',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyCode.F1,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'z_commands',\n\t\t\t\torder: 1\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IQuickInputService).quickAccess.show(StandaloneCommandsQuickAccessProvider.PREFIX);\n\t}\n}\n\nregisterEditorAction(GotoLineAction);\n\nRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n\tctor: StandaloneCommandsQuickAccessProvider,\n\tprefix: StandaloneCommandsQuickAccessProvider.PREFIX,\n\thelpEntries: [{ description: QuickCommandNLS.quickCommandHelp, commandId: GotoLineAction.ID }]\n});\n"]}