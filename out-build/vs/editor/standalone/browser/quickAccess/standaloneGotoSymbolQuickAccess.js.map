{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/standalone/browser/quickAccess/standaloneGotoSymbolQuickAccess.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAmBzF,IAAM,IAAI,GAAV,MAAM,IAAwC,SAAQ,4BAAI;QAIhE,YACqB,CAAmC,EAC7B,uBAA4B,EAChC,mBAAwB;YAE9C,KAAK,CAAC,uBAAuB,EAAE,mBAAmB,CAAC,CAAC;YAJf,MAAC,GAAD,CAAC,CAAiB;YAHrC,MAAC,GAAoC,aAAK,CAAC,IAAI,CAAC;QAQnE,CAAC;QAED,IAAc,CAAC;YACd,OAAO,IAAI,CAAC,CAAC,CAAa,oBAAoB,EAAE,IAAI,SAAS,CAAC;QAC/D,CAAC;KACD,CAAA;IAfY,oBAAI;mBAAJ,IAAI;QAKd,WAAA,uBAAG,CAAA;QACH,WAAA,sBAAG,CAAA;QACH,WAAA,kBAAG,CAAA;OAPO,IAAI,CAehB;IAED,MAAa,IAAiB,SAAQ,sBAAG;iBAExB,OAAE,GAAG,4BAA4B,CAAC;QAElD;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,IAAI,CAAa,EAAE;gBACvB,KAAK,EAAE,mCAAe,CAAC,uBAAuB;gBAC9C,KAAK,EAAE,iBAAiB;gBACxB,YAAY,EAAE,qCAAiB,CAAC,yBAAyB;gBACzD,MAAM,EAAE;oBACP,MAAM,EAAE,qCAAiB,CAAC,KAAK;oBAC/B,OAAO,EAAE,mDAA6B,wBAAe;oBACrD,MAAM,0CAAgC;iBACtC;gBACD,eAAe,EAAE;oBAChB,KAAK,EAAE,YAAY;oBACnB,KAAK,EAAE,CAAC;iBACR;aACD,CAAC,CAAC;QACJ,CAAC;QAED,GAAG,CAAC,QAA0B;YAC7B,QAAQ,CAAC,GAAG,CAAC,gBAAG,CAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,4BAAI,CAAkC,MAAM,EAAE,EAAE,cAAc,EAAE,2BAAc,CAAC,IAAI,EAAE,CAAC,CAAC;QAC1I,CAAC;;IAxBF,oBAyBC;IAED,IAAA,sBAAG,EAAkB,IAAI,CAAa,CAAC;IAEvC,cAAG,CAAM,EAAE,CAAuB,iBAAG,CAAQ,WAAW,CAAC,CAAC,2BAA2B,CAAC;QACrF,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,4BAAI,CAAkC,MAAM;QACpD,WAAW,EAAE;YACZ,EAAE,WAAW,EAAE,mCAAe,CAAC,uBAAuB,EAAE,MAAM,EAAE,4BAAI,CAAkC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAa,EAAE,EAAE;YAC9I,EAAE,WAAW,EAAE,mCAAe,CAAC,iCAAiC,EAAE,MAAM,EAAE,4BAAI,CAAkC,kBAAkB,EAAE;SACpI;KACD,CAAC,CAAC","file":"standaloneGotoSymbolQuickAccess.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/base/browser/ui/codicons/codiconStyles'; // The codicon symbol styles are defined here and must be loaded\nimport 'vs/editor/contrib/symbolIcons/browser/symbolIcons'; // The codicon symbol colors are defined here and must be loaded to get colors\nimport { AbstractGotoSymbolQuickAccessProvider } from 'vs/editor/contrib/quickAccess/browser/gotoSymbolQuickAccess';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IQuickAccessRegistry, Extensions } from 'vs/platform/quickinput/common/quickAccess';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { QuickOutlineNLS } from 'vs/editor/common/standaloneStrings';\nimport { Event } from 'vs/base/common/event';\nimport { EditorAction, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IQuickInputService, ItemActivation } from 'vs/platform/quickinput/common/quickInput';\nimport { IOutlineModelService } from 'vs/editor/contrib/documentSymbols/browser/outlineModel';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\n\nexport class StandaloneGotoSymbolQuickAccessProvider extends AbstractGotoSymbolQuickAccessProvider {\n\n\tprotected readonly onDidActiveTextEditorControlChange = Event.None;\n\n\tconstructor(\n\t\t@ICodeEditorService private readonly editorService: ICodeEditorService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IOutlineModelService outlineModelService: IOutlineModelService,\n\t) {\n\t\tsuper(languageFeaturesService, outlineModelService);\n\t}\n\n\tprotected get activeTextEditorControl() {\n\t\treturn this.editorService.getFocusedCodeEditor() ?? undefined;\n\t}\n}\n\nexport class GotoSymbolAction extends EditorAction {\n\n\tstatic readonly ID = 'editor.action.quickOutline';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GotoSymbolAction.ID,\n\t\t\tlabel: QuickOutlineNLS.quickOutlineActionLabel,\n\t\t\talias: 'Go to Symbol...',\n\t\t\tprecondition: EditorContextKeys.hasDocumentSymbolProvider,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyO,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IQuickInputService).quickAccess.show(AbstractGotoSymbolQuickAccessProvider.PREFIX, { itemActivation: ItemActivation.NONE });\n\t}\n}\n\nregisterEditorAction(GotoSymbolAction);\n\nRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n\tctor: StandaloneGotoSymbolQuickAccessProvider,\n\tprefix: AbstractGotoSymbolQuickAccessProvider.PREFIX,\n\thelpEntries: [\n\t\t{ description: QuickOutlineNLS.quickOutlineActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX, commandId: GotoSymbolAction.ID },\n\t\t{ description: QuickOutlineNLS.quickOutlineByCategoryActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY }\n\t]\n});\n"]}