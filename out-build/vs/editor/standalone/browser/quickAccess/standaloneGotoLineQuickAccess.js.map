{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/standalone/browser/quickAccess/standaloneGotoLineQuickAccess.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAczF,IAAM,IAAI,GAAV,MAAM,IAAsC,SAAQ,0BAAI;QAI9D,YAAgC,CAAmC;YAClE,KAAK,EAAE,CAAC;YADwC,MAAC,GAAD,CAAC,CAAiB;YAFhD,MAAC,GAAoC,aAAK,CAAC,IAAI,CAAC;QAInE,CAAC;QAED,IAAc,CAAC;YACd,OAAO,IAAI,CAAC,CAAC,CAAa,oBAAoB,EAAE,IAAI,SAAS,CAAC;QAC/D,CAAC;KACD,CAAA;IAXY,oBAAI;mBAAJ,IAAI;QAIH,WAAA,uBAAG,CAAA;OAJJ,IAAI,CAWhB;IAED,MAAa,IAAe,SAAQ,sBAAG;iBAEtB,OAAE,GAAG,wBAAwB,CAAC;QAE9C;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,IAAI,CAAW,EAAE;gBACrB,KAAK,EAAE,+BAAW,CAAC,mBAAmB;gBACtC,KAAK,EAAE,sBAAsB;gBAC7B,YAAY,EAAE,SAAS;gBACvB,MAAM,EAAE;oBACP,MAAM,EAAE,qCAAiB,CAAC,KAAK;oBAC/B,OAAO,EAAE,iDAA6B;oBACtC,GAAG,EAAE,EAAE,OAAO,EAAE,gDAA6B,EAAE;oBAC/C,MAAM,0CAAgC;iBACtC;aACD,CAAC,CAAC;QACJ,CAAC;QAED,GAAG,CAAC,QAA0B;YAC7B,QAAQ,CAAC,GAAG,CAAC,gBAAG,CAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAkC,MAAM,CAAC,CAAC;QACjG,CAAC;;IArBF,oBAsBC;IAED,IAAA,sBAAG,EAAkB,IAAI,CAAW,CAAC;IAErC,cAAG,CAAM,EAAE,CAAuB,iBAAG,CAAQ,WAAW,CAAC,CAAC,2BAA2B,CAAC;QACrF,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,IAAI,CAAkC,MAAM;QACpD,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,+BAAW,CAAC,mBAAmB,EAAE,SAAS,EAAE,IAAI,CAAW,EAAE,EAAE,CAAC;KAC7F,CAAC,CAAC","file":"standaloneGotoLineQuickAccess.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AbstractGotoLineQuickAccessProvider } from 'vs/editor/contrib/quickAccess/browser/gotoLineQuickAccess';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IQuickAccessRegistry, Extensions } from 'vs/platform/quickinput/common/quickAccess';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { GoToLineNLS } from 'vs/editor/common/standaloneStrings';\nimport { Event } from 'vs/base/common/event';\nimport { EditorAction, registerEditorAction, ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\n\nexport class StandaloneGotoLineQuickAccessProvider extends AbstractGotoLineQuickAccessProvider {\n\n\tprotected readonly onDidActiveTextEditorControlChange = Event.None;\n\n\tconstructor(@ICodeEditorService private readonly editorService: ICodeEditorService) {\n\t\tsuper();\n\t}\n\n\tprotected get activeTextEditorControl() {\n\t\treturn this.editorService.getFocusedCodeEditor() ?? undefined;\n\t}\n}\n\nexport class GotoLineAction extends EditorAction {\n\n\tstatic readonly ID = 'editor.action.gotoLine';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GotoLineAction.ID,\n\t\t\tlabel: GoToLineNLS.gotoLineActionLabel,\n\t\t\talias: 'Go to Line/Column...',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyG,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyG },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IQuickInputService).quickAccess.show(StandaloneGotoLineQuickAccessProvider.PREFIX);\n\t}\n}\n\nregisterEditorAction(GotoLineAction);\n\nRegistry.as<IQuickAccessRegistry>(Extensions.Quickaccess).registerQuickAccessProvider({\n\tctor: StandaloneGotoLineQuickAccessProvider,\n\tprefix: StandaloneGotoLineQuickAccessProvider.PREFIX,\n\thelpEntries: [{ description: GoToLineNLS.gotoLineActionLabel, commandId: GotoLineAction.ID }]\n});\n"]}