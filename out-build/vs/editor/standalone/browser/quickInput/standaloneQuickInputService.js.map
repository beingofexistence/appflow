{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/standalone/browser/quickInput/standaloneQuickInputService.ts"],"names":[],"mappings":"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","file":"standaloneQuickInputService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./standaloneQuickInput';\nimport { ICodeEditor, IOverlayWidget, IOverlayWidgetPosition, OverlayWidgetPositionPreference } from 'vs/editor/browser/editorBrowser';\nimport { EditorContributionInstantiation, registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IQuickInputService, IQuickInputButton, IQuickPickItem, IQuickPick, IInputBox, IQuickNavigateConfiguration, IPickOptions, QuickPickInput, IInputOptions, IQuickWidget } from 'vs/platform/quickinput/common/quickInput';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { EditorScopedLayoutService } from 'vs/editor/standalone/browser/standaloneLayoutService';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { QuickInputController, IQuickInputControllerHost } from 'vs/platform/quickinput/browser/quickInputController';\nimport { QuickInputService } from 'vs/platform/quickinput/browser/quickInputService';\nimport { once } from 'vs/base/common/functional';\nimport { IQuickAccessController } from 'vs/platform/quickinput/common/quickAccess';\n\nclass EditorScopedQuickInputService extends QuickInputService {\n\n\tprivate host: IQuickInputControllerHost | undefined = undefined;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService\n\t) {\n\t\tsuper(instantiationService, contextKeyService, themeService, new EditorScopedLayoutService(editor.getContainerDomNode(), codeEditorService));\n\n\t\t// Use the passed in code editor as host for the quick input widget\n\t\tconst contribution = QuickInputEditorContribution.get(editor);\n\t\tif (contribution) {\n\t\t\tconst widget = contribution.widget;\n\t\t\tthis.host = {\n\t\t\t\t_serviceBrand: undefined,\n\t\t\t\tget hasContainer() { return true; },\n\t\t\t\tget container() { return widget.getDomNode(); },\n\t\t\t\tget dimension() { return editor.getLayoutInfo(); },\n\t\t\t\tget onDidLayout() { return editor.onDidLayoutChange; },\n\t\t\t\tfocus: () => editor.focus(),\n\t\t\t\toffset: { top: 0, quickPickTop: 0 }\n\t\t\t};\n\t\t} else {\n\t\t\tthis.host = undefined;\n\t\t}\n\t}\n\n\tprotected override createController(): QuickInputController {\n\t\treturn super.createController(this.host);\n\t}\n}\n\nexport class StandaloneQuickInputService implements IQuickInputService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate mapEditorToService = new Map<ICodeEditor, EditorScopedQuickInputService>();\n\tprivate get activeService(): IQuickInputService {\n\t\tconst editor = this.codeEditorService.getFocusedCodeEditor();\n\t\tif (!editor) {\n\t\t\tthrow new Error('Quick input service needs a focused editor to work.');\n\t\t}\n\n\t\t// Find the quick input implementation for the focused\n\t\t// editor or create it lazily if not yet created\n\t\tlet quickInputService = this.mapEditorToService.get(editor);\n\t\tif (!quickInputService) {\n\t\t\tconst newQuickInputService = quickInputService = this.instantiationService.createInstance(EditorScopedQuickInputService, editor);\n\t\t\tthis.mapEditorToService.set(editor, quickInputService);\n\n\t\t\tonce(editor.onDidDispose)(() => {\n\t\t\t\tnewQuickInputService.dispose();\n\t\t\t\tthis.mapEditorToService.delete(editor);\n\t\t\t});\n\t\t}\n\n\t\treturn quickInputService;\n\t}\n\n\tget quickAccess(): IQuickAccessController { return this.activeService.quickAccess; }\n\n\tget backButton(): IQuickInputButton { return this.activeService.backButton; }\n\n\tget onShow() { return this.activeService.onShow; }\n\tget onHide() { return this.activeService.onHide; }\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService\n\t) {\n\t}\n\n\tpick<T extends IQuickPickItem, O extends IPickOptions<T>>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options: O = <O>{}, token: CancellationToken = CancellationToken.None): Promise<(O extends { canPickMany: true } ? T[] : T) | undefined> {\n\t\treturn (this.activeService as unknown as QuickInputController /* TS fail */).pick(picks, options, token);\n\t}\n\n\tinput(options?: IInputOptions | undefined, token?: CancellationToken | undefined): Promise<string | undefined> {\n\t\treturn this.activeService.input(options, token);\n\t}\n\n\tcreateQuickPick<T extends IQuickPickItem>(): IQuickPick<T> {\n\t\treturn this.activeService.createQuickPick();\n\t}\n\n\tcreateInputBox(): IInputBox {\n\t\treturn this.activeService.createInputBox();\n\t}\n\n\tcreateQuickWidget(): IQuickWidget {\n\t\treturn this.activeService.createQuickWidget();\n\t}\n\n\tfocus(): void {\n\t\treturn this.activeService.focus();\n\t}\n\n\ttoggle(): void {\n\t\treturn this.activeService.toggle();\n\t}\n\n\tnavigate(next: boolean, quickNavigate?: IQuickNavigateConfiguration | undefined): void {\n\t\treturn this.activeService.navigate(next, quickNavigate);\n\t}\n\n\taccept(): Promise<void> {\n\t\treturn this.activeService.accept();\n\t}\n\n\tback(): Promise<void> {\n\t\treturn this.activeService.back();\n\t}\n\n\tcancel(): Promise<void> {\n\t\treturn this.activeService.cancel();\n\t}\n}\n\nexport class QuickInputEditorContribution implements IEditorContribution {\n\n\tstatic readonly ID = 'editor.controller.quickInput';\n\n\tstatic get(editor: ICodeEditor): QuickInputEditorContribution | null {\n\t\treturn editor.getContribution<QuickInputEditorContribution>(QuickInputEditorContribution.ID);\n\t}\n\n\treadonly widget = new QuickInputEditorWidget(this.editor);\n\n\tconstructor(private editor: ICodeEditor) { }\n\n\tdispose(): void {\n\t\tthis.widget.dispose();\n\t}\n}\n\nexport class QuickInputEditorWidget implements IOverlayWidget {\n\n\tprivate static readonly ID = 'editor.contrib.quickInputWidget';\n\n\tprivate domNode: HTMLElement;\n\n\tconstructor(private codeEditor: ICodeEditor) {\n\t\tthis.domNode = document.createElement('div');\n\n\t\tthis.codeEditor.addOverlayWidget(this);\n\t}\n\n\tgetId(): string {\n\t\treturn QuickInputEditorWidget.ID;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition | null {\n\t\treturn { preference: OverlayWidgetPositionPreference.TOP_CENTER };\n\t}\n\n\tdispose(): void {\n\t\tthis.codeEditor.removeOverlayWidget(this);\n\t}\n}\n\nregisterEditorContribution(QuickInputEditorContribution.ID, QuickInputEditorContribution, EditorContributionInstantiation.Lazy);\n"]}