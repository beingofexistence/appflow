{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/standalone/browser/standaloneEditor.ts"],"names":[],"mappings":"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","file":"standaloneEditor.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { splitLines } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport 'vs/css!./standalone-tokens';\nimport { FontMeasurements } from 'vs/editor/browser/config/fontMeasurements';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorCommand, ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IWebWorkerOptions, MonacoWebWorker, createWebWorker as actualCreateWebWorker } from 'vs/editor/browser/services/webWorker';\nimport { ApplyUpdateResult, ConfigurationChangedEvent, EditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { EditorZoom } from 'vs/editor/common/config/editorZoom';\nimport { BareFontInfo, FontInfo } from 'vs/editor/common/config/fontInfo';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { EditorType, IDiffEditor } from 'vs/editor/common/editorCommon';\nimport * as languages from 'vs/editor/common/languages';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { NullState, nullTokenize } from 'vs/editor/common/languages/nullTokenize';\nimport { FindMatch, ITextModel, TextModelResolvedOptions } from 'vs/editor/common/model';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport * as standaloneEnums from 'vs/editor/common/standalone/standaloneEnums';\nimport { Colorizer, IColorizerElementOptions, IColorizerOptions } from 'vs/editor/standalone/browser/colorizer';\nimport { IActionDescriptor, IStandaloneCodeEditor, IStandaloneDiffEditor, IStandaloneDiffEditorConstructionOptions, IStandaloneEditorConstructionOptions, StandaloneDiffEditor2, StandaloneEditor, createTextModel } from 'vs/editor/standalone/browser/standaloneCodeEditor';\nimport { IEditorOverrideServices, StandaloneKeybindingService, StandaloneServices } from 'vs/editor/standalone/browser/standaloneServices';\nimport { StandaloneThemeService } from 'vs/editor/standalone/browser/standaloneThemeService';\nimport { IStandaloneThemeData, IStandaloneThemeService } from 'vs/editor/standalone/common/standaloneTheme';\nimport { IMenuItem, MenuId, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry, ICommandHandler } from 'vs/platform/commands/common/commands';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { ITextResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IMarker, IMarkerData, IMarkerService } from 'vs/platform/markers/common/markers';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\n\n/**\n * Create a new editor under `domElement`.\n * `domElement` should be empty (not contain other dom nodes).\n * The editor will read the size of `domElement`.\n */\nexport function create(domElement: HTMLElement, options?: IStandaloneEditorConstructionOptions, override?: IEditorOverrideServices): IStandaloneCodeEditor {\n\tconst instantiationService = StandaloneServices.initialize(override || {});\n\treturn instantiationService.createInstance(StandaloneEditor, domElement, options);\n}\n\n/**\n * Emitted when an editor is created.\n * Creating a diff editor might cause this listener to be invoked with the two editors.\n * @event\n */\nexport function onDidCreateEditor(listener: (codeEditor: ICodeEditor) => void): IDisposable {\n\tconst codeEditorService = StandaloneServices.get(ICodeEditorService);\n\treturn codeEditorService.onCodeEditorAdd((editor) => {\n\t\tlistener(<ICodeEditor>editor);\n\t});\n}\n\n/**\n * Emitted when an diff editor is created.\n * @event\n */\nexport function onDidCreateDiffEditor(listener: (diffEditor: IDiffEditor) => void): IDisposable {\n\tconst codeEditorService = StandaloneServices.get(ICodeEditorService);\n\treturn codeEditorService.onDiffEditorAdd((editor) => {\n\t\tlistener(<IDiffEditor>editor);\n\t});\n}\n\n/**\n * Get all the created editors.\n */\nexport function getEditors(): readonly ICodeEditor[] {\n\tconst codeEditorService = StandaloneServices.get(ICodeEditorService);\n\treturn codeEditorService.listCodeEditors();\n}\n\n/**\n * Get all the created diff editors.\n */\nexport function getDiffEditors(): readonly IDiffEditor[] {\n\tconst codeEditorService = StandaloneServices.get(ICodeEditorService);\n\treturn codeEditorService.listDiffEditors();\n}\n\n/**\n * Create a new diff editor under `domElement`.\n * `domElement` should be empty (not contain other dom nodes).\n * The editor will read the size of `domElement`.\n */\nexport function createDiffEditor(domElement: HTMLElement, options?: IStandaloneDiffEditorConstructionOptions, override?: IEditorOverrideServices): IStandaloneDiffEditor {\n\tconst instantiationService = StandaloneServices.initialize(override || {});\n\treturn instantiationService.createInstance(StandaloneDiffEditor2, domElement, options);\n}\n\n/**\n * Description of a command contribution\n */\nexport interface ICommandDescriptor {\n\t/**\n\t * An unique identifier of the contributed command.\n\t */\n\tid: string;\n\t/**\n\t * Callback that will be executed when the command is triggered.\n\t */\n\trun: ICommandHandler;\n}\n\n/**\n * Add a command.\n */\nexport function addCommand(descriptor: ICommandDescriptor): IDisposable {\n\tif ((typeof descriptor.id !== 'string') || (typeof descriptor.run !== 'function')) {\n\t\tthrow new Error('Invalid command descriptor, `id` and `run` are required properties!');\n\t}\n\treturn CommandsRegistry.registerCommand(descriptor.id, descriptor.run);\n}\n\n/**\n * Add an action to all editors.\n */\nexport function addEditorAction(descriptor: IActionDescriptor): IDisposable {\n\tif ((typeof descriptor.id !== 'string') || (typeof descriptor.label !== 'string') || (typeof descriptor.run !== 'function')) {\n\t\tthrow new Error('Invalid action descriptor, `id`, `label` and `run` are required properties!');\n\t}\n\n\tconst precondition = ContextKeyExpr.deserialize(descriptor.precondition);\n\tconst run = (accessor: ServicesAccessor, ...args: any[]): void | Promise<void> => {\n\t\treturn EditorCommand.runEditorCommand(accessor, args, precondition, (accessor, editor, args) => Promise.resolve(descriptor.run(editor, ...args)));\n\t};\n\n\tconst toDispose = new DisposableStore();\n\n\t// Register the command\n\ttoDispose.add(CommandsRegistry.registerCommand(descriptor.id, run));\n\n\t// Register the context menu item\n\tif (descriptor.contextMenuGroupId) {\n\t\tconst menuItem: IMenuItem = {\n\t\t\tcommand: {\n\t\t\t\tid: descriptor.id,\n\t\t\t\ttitle: descriptor.label\n\t\t\t},\n\t\t\twhen: precondition,\n\t\t\tgroup: descriptor.contextMenuGroupId,\n\t\t\torder: descriptor.contextMenuOrder || 0\n\t\t};\n\t\ttoDispose.add(MenuRegistry.appendMenuItem(MenuId.EditorContext, menuItem));\n\t}\n\n\t// Register the keybindings\n\tif (Array.isArray(descriptor.keybindings)) {\n\t\tconst keybindingService = StandaloneServices.get(IKeybindingService);\n\t\tif (!(keybindingService instanceof StandaloneKeybindingService)) {\n\t\t\tconsole.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\n\t\t} else {\n\t\t\tconst keybindingsWhen = ContextKeyExpr.and(precondition, ContextKeyExpr.deserialize(descriptor.keybindingContext));\n\t\t\ttoDispose.add(keybindingService.addDynamicKeybindings(descriptor.keybindings.map((keybinding) => {\n\t\t\t\treturn {\n\t\t\t\t\tkeybinding,\n\t\t\t\t\tcommand: descriptor.id,\n\t\t\t\t\twhen: keybindingsWhen\n\t\t\t\t};\n\t\t\t})));\n\t\t}\n\t}\n\n\treturn toDispose;\n}\n\n/**\n * A keybinding rule.\n */\nexport interface IKeybindingRule {\n\tkeybinding: number;\n\tcommand?: string | null;\n\tcommandArgs?: any;\n\twhen?: string | null;\n}\n\n/**\n * Add a keybinding rule.\n */\nexport function addKeybindingRule(rule: IKeybindingRule): IDisposable {\n\treturn addKeybindingRules([rule]);\n}\n\n/**\n * Add keybinding rules.\n */\nexport function addKeybindingRules(rules: IKeybindingRule[]): IDisposable {\n\tconst keybindingService = StandaloneServices.get(IKeybindingService);\n\tif (!(keybindingService instanceof StandaloneKeybindingService)) {\n\t\tconsole.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\n\t\treturn Disposable.None;\n\t}\n\n\treturn keybindingService.addDynamicKeybindings(rules.map((rule) => {\n\t\treturn {\n\t\t\tkeybinding: rule.keybinding,\n\t\t\tcommand: rule.command,\n\t\t\tcommandArgs: rule.commandArgs,\n\t\t\twhen: ContextKeyExpr.deserialize(rule.when),\n\t\t};\n\t}));\n}\n\n/**\n * Create a new editor model.\n * You can specify the language that should be set for this model or let the language be inferred from the `uri`.\n */\nexport function createModel(value: string, language?: string, uri?: URI): ITextModel {\n\tconst languageService = StandaloneServices.get(ILanguageService);\n\tconst languageId = languageService.getLanguageIdByMimeType(language) || language;\n\treturn createTextModel(\n\t\tStandaloneServices.get(IModelService),\n\t\tlanguageService,\n\t\tvalue,\n\t\tlanguageId,\n\t\turi\n\t);\n}\n\n/**\n * Change the language for a model.\n */\nexport function setModelLanguage(model: ITextModel, mimeTypeOrLanguageId: string): void {\n\tconst languageService = StandaloneServices.get(ILanguageService);\n\tconst languageId = languageService.getLanguageIdByMimeType(mimeTypeOrLanguageId) || mimeTypeOrLanguageId || PLAINTEXT_LANGUAGE_ID;\n\tmodel.setLanguage(languageService.createById(languageId));\n}\n\n/**\n * Set the markers for a model.\n */\nexport function setModelMarkers(model: ITextModel, owner: string, markers: IMarkerData[]): void {\n\tif (model) {\n\t\tconst markerService = StandaloneServices.get(IMarkerService);\n\t\tmarkerService.changeOne(owner, model.uri, markers);\n\t}\n}\n\n/**\n * Remove all markers of an owner.\n */\nexport function removeAllMarkers(owner: string) {\n\tconst markerService = StandaloneServices.get(IMarkerService);\n\tmarkerService.changeAll(owner, []);\n}\n\n/**\n * Get markers for owner and/or resource\n *\n * @returns list of markers\n */\nexport function getModelMarkers(filter: { owner?: string; resource?: URI; take?: number }): IMarker[] {\n\tconst markerService = StandaloneServices.get(IMarkerService);\n\treturn markerService.read(filter);\n}\n\n/**\n * Emitted when markers change for a model.\n * @event\n */\nexport function onDidChangeMarkers(listener: (e: readonly URI[]) => void): IDisposable {\n\tconst markerService = StandaloneServices.get(IMarkerService);\n\treturn markerService.onMarkerChanged(listener);\n}\n\n/**\n * Get the model that has `uri` if it exists.\n */\nexport function getModel(uri: URI): ITextModel | null {\n\tconst modelService = StandaloneServices.get(IModelService);\n\treturn modelService.getModel(uri);\n}\n\n/**\n * Get all the created models.\n */\nexport function getModels(): ITextModel[] {\n\tconst modelService = StandaloneServices.get(IModelService);\n\treturn modelService.getModels();\n}\n\n/**\n * Emitted when a model is created.\n * @event\n */\nexport function onDidCreateModel(listener: (model: ITextModel) => void): IDisposable {\n\tconst modelService = StandaloneServices.get(IModelService);\n\treturn modelService.onModelAdded(listener);\n}\n\n/**\n * Emitted right before a model is disposed.\n * @event\n */\nexport function onWillDisposeModel(listener: (model: ITextModel) => void): IDisposable {\n\tconst modelService = StandaloneServices.get(IModelService);\n\treturn modelService.onModelRemoved(listener);\n}\n\n/**\n * Emitted when a different language is set to a model.\n * @event\n */\nexport function onDidChangeModelLanguage(listener: (e: { readonly model: ITextModel; readonly oldLanguage: string }) => void): IDisposable {\n\tconst modelService = StandaloneServices.get(IModelService);\n\treturn modelService.onModelLanguageChanged((e) => {\n\t\tlistener({\n\t\t\tmodel: e.model,\n\t\t\toldLanguage: e.oldLanguageId\n\t\t});\n\t});\n}\n\n/**\n * Create a new web worker that has model syncing capabilities built in.\n * Specify an AMD module to load that will `create` an object that will be proxied.\n */\nexport function createWebWorker<T extends object>(opts: IWebWorkerOptions): MonacoWebWorker<T> {\n\treturn actualCreateWebWorker<T>(StandaloneServices.get(IModelService), StandaloneServices.get(ILanguageConfigurationService), opts);\n}\n\n/**\n * Colorize the contents of `domNode` using attribute `data-lang`.\n */\nexport function colorizeElement(domNode: HTMLElement, options: IColorizerElementOptions): Promise<void> {\n\tconst languageService = StandaloneServices.get(ILanguageService);\n\tconst themeService = <StandaloneThemeService>StandaloneServices.get(IStandaloneThemeService);\n\treturn Colorizer.colorizeElement(themeService, languageService, domNode, options).then(() => {\n\t\tthemeService.registerEditorContainer(domNode);\n\t});\n}\n\n/**\n * Colorize `text` using language `languageId`.\n */\nexport function colorize(text: string, languageId: string, options: IColorizerOptions): Promise<string> {\n\tconst languageService = StandaloneServices.get(ILanguageService);\n\tconst themeService = <StandaloneThemeService>StandaloneServices.get(IStandaloneThemeService);\n\tthemeService.registerEditorContainer(document.body);\n\treturn Colorizer.colorize(languageService, text, languageId, options);\n}\n\n/**\n * Colorize a line in a model.\n */\nexport function colorizeModelLine(model: ITextModel, lineNumber: number, tabSize: number = 4): string {\n\tconst themeService = <StandaloneThemeService>StandaloneServices.get(IStandaloneThemeService);\n\tthemeService.registerEditorContainer(document.body);\n\treturn Colorizer.colorizeModelLine(model, lineNumber, tabSize);\n}\n\n/**\n * @internal\n */\nfunction getSafeTokenizationSupport(language: string): Omit<languages.ITokenizationSupport, 'tokenizeEncoded'> {\n\tconst tokenizationSupport = languages.TokenizationRegistry.get(language);\n\tif (tokenizationSupport) {\n\t\treturn tokenizationSupport;\n\t}\n\treturn {\n\t\tgetInitialState: () => NullState,\n\t\ttokenize: (line: string, hasEOL: boolean, state: languages.IState) => nullTokenize(language, state)\n\t};\n}\n\n/**\n * Tokenize `text` using language `languageId`\n */\nexport function tokenize(text: string, languageId: string): languages.Token[][] {\n\t// Needed in order to get the mode registered for subsequent look-ups\n\tlanguages.TokenizationRegistry.getOrCreate(languageId);\n\n\tconst tokenizationSupport = getSafeTokenizationSupport(languageId);\n\tconst lines = splitLines(text);\n\tconst result: languages.Token[][] = [];\n\tlet state = tokenizationSupport.getInitialState();\n\tfor (let i = 0, len = lines.length; i < len; i++) {\n\t\tconst line = lines[i];\n\t\tconst tokenizationResult = tokenizationSupport.tokenize(line, true, state);\n\n\t\tresult[i] = tokenizationResult.tokens;\n\t\tstate = tokenizationResult.endState;\n\t}\n\treturn result;\n}\n\n/**\n * Define a new theme or update an existing theme.\n */\nexport function defineTheme(themeName: string, themeData: IStandaloneThemeData): void {\n\tconst standaloneThemeService = StandaloneServices.get(IStandaloneThemeService);\n\tstandaloneThemeService.defineTheme(themeName, themeData);\n}\n\n/**\n * Switches to a theme.\n */\nexport function setTheme(themeName: string): void {\n\tconst standaloneThemeService = StandaloneServices.get(IStandaloneThemeService);\n\tstandaloneThemeService.setTheme(themeName);\n}\n\n/**\n * Clears all cached font measurements and triggers re-measurement.\n */\nexport function remeasureFonts(): void {\n\tFontMeasurements.clearAllFontInfos();\n}\n\n/**\n * Register a command.\n */\nexport function registerCommand(id: string, handler: (accessor: any, ...args: any[]) => void): IDisposable {\n\treturn CommandsRegistry.registerCommand({ id, handler });\n}\n\nexport interface ILinkOpener {\n\topen(resource: URI): boolean | Promise<boolean>;\n}\n\n/**\n * Registers a handler that is called when a link is opened in any editor. The handler callback should return `true` if the link was handled and `false` otherwise.\n * The handler that was registered last will be called first when a link is opened.\n *\n * Returns a disposable that can unregister the opener again.\n */\nexport function registerLinkOpener(opener: ILinkOpener): IDisposable {\n\tconst openerService = StandaloneServices.get(IOpenerService);\n\treturn openerService.registerOpener({\n\t\tasync open(resource: string | URI) {\n\t\t\tif (typeof resource === 'string') {\n\t\t\t\tresource = URI.parse(resource);\n\t\t\t}\n\t\t\treturn opener.open(resource);\n\t\t}\n\t});\n}\n\n/**\n * Represents an object that can handle editor open operations (e.g. when \"go to definition\" is called\n * with a resource other than the current model).\n */\nexport interface ICodeEditorOpener {\n\t/**\n\t * Callback that is invoked when a resource other than the current model should be opened (e.g. when \"go to definition\" is called).\n\t * The callback should return `true` if the request was handled and `false` otherwise.\n\t * @param source The code editor instance that initiated the request.\n\t * @param resource The URI of the resource that should be opened.\n\t * @param selectionOrPosition An optional position or selection inside the model corresponding to `resource` that can be used to set the cursor.\n\t */\n\topenCodeEditor(source: ICodeEditor, resource: URI, selectionOrPosition?: IRange | IPosition): boolean | Promise<boolean>;\n}\n\n/**\n * Registers a handler that is called when a resource other than the current model should be opened in the editor (e.g. \"go to definition\").\n * The handler callback should return `true` if the request was handled and `false` otherwise.\n *\n * Returns a disposable that can unregister the opener again.\n *\n * If no handler is registered the default behavior is to do nothing for models other than the currently attached one.\n */\nexport function registerEditorOpener(opener: ICodeEditorOpener): IDisposable {\n\tconst codeEditorService = StandaloneServices.get(ICodeEditorService);\n\treturn codeEditorService.registerCodeEditorOpenHandler(async (input: ITextResourceEditorInput, source: ICodeEditor | null, sideBySide?: boolean) => {\n\t\tif (!source) {\n\t\t\treturn null;\n\t\t}\n\t\tconst selection = input.options?.selection;\n\t\tlet selectionOrPosition: IRange | IPosition | undefined;\n\t\tif (selection && typeof selection.endLineNumber === 'number' && typeof selection.endColumn === 'number') {\n\t\t\tselectionOrPosition = <IRange>selection;\n\t\t} else if (selection) {\n\t\t\tselectionOrPosition = { lineNumber: selection.startLineNumber, column: selection.startColumn };\n\t\t}\n\t\tif (await opener.openCodeEditor(source, input.resource, selectionOrPosition)) {\n\t\t\treturn source; // return source editor to indicate that this handler has successfully handled the opening\n\t\t}\n\t\treturn null; // fallback to other registered handlers\n\t});\n}\n\n/**\n * @internal\n */\nexport function createMonacoEditorAPI(): typeof monaco.editor {\n\treturn {\n\t\t// methods\n\t\tcreate: <any>create,\n\t\tgetEditors: <any>getEditors,\n\t\tgetDiffEditors: <any>getDiffEditors,\n\t\tonDidCreateEditor: <any>onDidCreateEditor,\n\t\tonDidCreateDiffEditor: <any>onDidCreateDiffEditor,\n\t\tcreateDiffEditor: <any>createDiffEditor,\n\n\t\taddCommand: <any>addCommand,\n\t\taddEditorAction: <any>addEditorAction,\n\t\taddKeybindingRule: <any>addKeybindingRule,\n\t\taddKeybindingRules: <any>addKeybindingRules,\n\n\t\tcreateModel: <any>createModel,\n\t\tsetModelLanguage: <any>setModelLanguage,\n\t\tsetModelMarkers: <any>setModelMarkers,\n\t\tgetModelMarkers: <any>getModelMarkers,\n\t\tremoveAllMarkers: removeAllMarkers,\n\t\tonDidChangeMarkers: <any>onDidChangeMarkers,\n\t\tgetModels: <any>getModels,\n\t\tgetModel: <any>getModel,\n\t\tonDidCreateModel: <any>onDidCreateModel,\n\t\tonWillDisposeModel: <any>onWillDisposeModel,\n\t\tonDidChangeModelLanguage: <any>onDidChangeModelLanguage,\n\n\n\t\tcreateWebWorker: <any>createWebWorker,\n\t\tcolorizeElement: <any>colorizeElement,\n\t\tcolorize: <any>colorize,\n\t\tcolorizeModelLine: <any>colorizeModelLine,\n\t\ttokenize: <any>tokenize,\n\t\tdefineTheme: <any>defineTheme,\n\t\tsetTheme: <any>setTheme,\n\t\tremeasureFonts: remeasureFonts,\n\t\tregisterCommand: registerCommand,\n\n\t\tregisterLinkOpener: registerLinkOpener,\n\t\tregisterEditorOpener: <any>registerEditorOpener,\n\n\t\t// enums\n\t\tAccessibilitySupport: standaloneEnums.AccessibilitySupport,\n\t\tContentWidgetPositionPreference: standaloneEnums.ContentWidgetPositionPreference,\n\t\tCursorChangeReason: standaloneEnums.CursorChangeReason,\n\t\tDefaultEndOfLine: standaloneEnums.DefaultEndOfLine,\n\t\tEditorAutoIndentStrategy: standaloneEnums.EditorAutoIndentStrategy,\n\t\tEditorOption: standaloneEnums.EditorOption,\n\t\tEndOfLinePreference: standaloneEnums.EndOfLinePreference,\n\t\tEndOfLineSequence: standaloneEnums.EndOfLineSequence,\n\t\tMinimapPosition: standaloneEnums.MinimapPosition,\n\t\tMouseTargetType: standaloneEnums.MouseTargetType,\n\t\tOverlayWidgetPositionPreference: standaloneEnums.OverlayWidgetPositionPreference,\n\t\tOverviewRulerLane: standaloneEnums.OverviewRulerLane,\n\t\tGlyphMarginLane: standaloneEnums.GlyphMarginLane,\n\t\tRenderLineNumbersType: standaloneEnums.RenderLineNumbersType,\n\t\tRenderMinimap: standaloneEnums.RenderMinimap,\n\t\tScrollbarVisibility: standaloneEnums.ScrollbarVisibility,\n\t\tScrollType: standaloneEnums.ScrollType,\n\t\tTextEditorCursorBlinkingStyle: standaloneEnums.TextEditorCursorBlinkingStyle,\n\t\tTextEditorCursorStyle: standaloneEnums.TextEditorCursorStyle,\n\t\tTrackedRangeStickiness: standaloneEnums.TrackedRangeStickiness,\n\t\tWrappingIndent: standaloneEnums.WrappingIndent,\n\t\tInjectedTextCursorStops: standaloneEnums.InjectedTextCursorStops,\n\t\tPositionAffinity: standaloneEnums.PositionAffinity,\n\n\t\t// classes\n\t\tConfigurationChangedEvent: <any>ConfigurationChangedEvent,\n\t\tBareFontInfo: <any>BareFontInfo,\n\t\tFontInfo: <any>FontInfo,\n\t\tTextModelResolvedOptions: <any>TextModelResolvedOptions,\n\t\tFindMatch: <any>FindMatch,\n\t\tApplyUpdateResult: <any>ApplyUpdateResult,\n\t\tEditorZoom: <any>EditorZoom,\n\n\t\t// vars\n\t\tEditorType: EditorType,\n\t\tEditorOptions: <any>EditorOptions\n\n\t};\n}\n"]}