{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/dropOrPasteInto/browser/postEditWidget.ts"],"names":[],"mappings":"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","file":"postEditWidget.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { Button } from 'vs/base/browser/ui/button/button';\nimport { toAction } from 'vs/base/common/actions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { Disposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport 'vs/css!./postEditWidget';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from 'vs/editor/browser/editorBrowser';\nimport { IBulkEditResult, IBulkEditService, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { Range } from 'vs/editor/common/core/range';\nimport { WorkspaceEdit } from 'vs/editor/common/languages';\nimport { TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\n\n\ninterface EditSet {\n\treadonly activeEditIndex: number;\n\treadonly allEdits: ReadonlyArray<{\n\t\treadonly label: string;\n\t\treadonly insertText: string | { readonly snippet: string };\n\t\treadonly additionalEdit?: WorkspaceEdit;\n\t}>;\n}\n\ninterface ShowCommand {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nclass PostEditWidget extends Disposable implements IContentWidget {\n\tprivate static readonly baseId = 'editor.widget.postEditWidget';\n\n\treadonly allowEditorOverflow = true;\n\treadonly suppressMouseDown = true;\n\n\tprivate domNode!: HTMLElement;\n\tprivate button!: Button;\n\n\tprivate readonly visibleContext: IContextKey<boolean>;\n\n\tconstructor(\n\t\tprivate readonly typeId: string,\n\t\tprivate readonly editor: ICodeEditor,\n\t\tvisibleContext: RawContextKey<boolean>,\n\t\tprivate readonly showCommand: ShowCommand,\n\t\tprivate readonly range: Range,\n\t\tprivate readonly edits: EditSet,\n\t\tprivate readonly onSelectNewEdit: (editIndex: number) => void,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tthis.create();\n\n\t\tthis.visibleContext = visibleContext.bindTo(contextKeyService);\n\t\tthis.visibleContext.set(true);\n\t\tthis._register(toDisposable(() => this.visibleContext.reset()));\n\n\t\tthis.editor.addContentWidget(this);\n\t\tthis.editor.layoutContentWidget(this);\n\n\t\tthis._register(toDisposable((() => this.editor.removeContentWidget(this))));\n\n\t\tthis._register(this.editor.onDidChangeCursorPosition(e => {\n\t\t\tif (!range.containsPosition(e.position)) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(Event.runAndSubscribe(_keybindingService.onDidUpdateKeybindings, () => {\n\t\t\tthis._updateButtonTitle();\n\t\t}));\n\t}\n\n\tprivate _updateButtonTitle() {\n\t\tconst binding = this._keybindingService.lookupKeybinding(this.showCommand.id)?.getLabel();\n\t\tthis.button.element.title = this.showCommand.label + (binding ? ` (${binding})` : '');\n\t}\n\n\tprivate create(): void {\n\t\tthis.domNode = dom.$('.post-edit-widget');\n\n\t\tthis.button = this._register(new Button(this.domNode, {\n\t\t\tsupportIcons: true,\n\t\t}));\n\t\tthis.button.label = '$(insert)';\n\n\t\tthis._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, () => this.showSelector()));\n\t}\n\n\tgetId(): string {\n\t\treturn PostEditWidget.baseId + '.' + this.typeId;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn {\n\t\t\tposition: this.range.getEndPosition(),\n\t\t\tpreference: [ContentWidgetPositionPreference.BELOW]\n\t\t};\n\t}\n\n\tshowSelector() {\n\t\tthis._contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => {\n\t\t\t\tconst pos = dom.getDomNodePagePosition(this.button.element);\n\t\t\t\treturn { x: pos.left + pos.width, y: pos.top + pos.height };\n\t\t\t},\n\t\t\tgetActions: () => {\n\t\t\t\treturn this.edits.allEdits.map((edit, i) => toAction({\n\t\t\t\t\tid: '',\n\t\t\t\t\tlabel: edit.label,\n\t\t\t\t\tchecked: i === this.edits.activeEditIndex,\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tif (i !== this.edits.activeEditIndex) {\n\t\t\t\t\t\t\treturn this.onSelectNewEdit(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class PostEditWidgetManager extends Disposable {\n\n\tprivate readonly _currentWidget = this._register(new MutableDisposable<PostEditWidget>());\n\n\tconstructor(\n\t\tprivate readonly _id: string,\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _visibleContext: RawContextKey<boolean>,\n\t\tprivate readonly _showCommand: ShowCommand,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IBulkEditService private readonly _bulkEditService: IBulkEditService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(Event.any(\n\t\t\t_editor.onDidChangeModel,\n\t\t\t_editor.onDidChangeModelContent,\n\t\t)(() => this.clear()));\n\t}\n\n\tpublic async applyEditAndShowIfNeeded(ranges: readonly Range[], edits: EditSet, canShowWidget: boolean, token: CancellationToken) {\n\t\tconst model = this._editor.getModel();\n\t\tif (!model || !ranges.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst edit = edits.allEdits[edits.activeEditIndex];\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet insertTextEdit: ResourceTextEdit[] = [];\n\t\tif (typeof edit.insertText === 'string' ? edit.insertText === '' : edit.insertText.snippet === '') {\n\t\t\tinsertTextEdit = [];\n\t\t} else {\n\t\t\tinsertTextEdit = ranges.map(range => new ResourceTextEdit(model.uri,\n\t\t\t\ttypeof edit.insertText === 'string'\n\t\t\t\t\t? { range, text: edit.insertText, insertAsSnippet: false }\n\t\t\t\t\t: { range, text: edit.insertText.snippet, insertAsSnippet: true }\n\t\t\t));\n\t\t}\n\n\t\tconst allEdits = [\n\t\t\t...insertTextEdit,\n\t\t\t...(edit.additionalEdit?.edits ?? [])\n\t\t];\n\n\t\tconst combinedWorkspaceEdit: WorkspaceEdit = {\n\t\t\tedits: allEdits\n\t\t};\n\n\t\t// Use a decoration to track edits around the trigger range\n\t\tconst primaryRange = ranges[0];\n\t\tconst editTrackingDecoration = model.deltaDecorations([], [{\n\t\t\trange: primaryRange,\n\t\t\toptions: { description: 'paste-line-suffix', stickiness: TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges }\n\t\t}]);\n\n\t\tlet editResult: IBulkEditResult;\n\t\tlet editRange: Range | null;\n\t\ttry {\n\t\t\teditResult = await this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor, token });\n\t\t\teditRange = model.getDecorationRange(editTrackingDecoration[0]);\n\t\t} finally {\n\t\t\tmodel.deltaDecorations(editTrackingDecoration, []);\n\t\t}\n\n\t\tif (canShowWidget && editResult.isApplied && edits.allEdits.length > 1) {\n\t\t\tthis.show(editRange ?? primaryRange, edits, async (newEditIndex) => {\n\t\t\t\tconst model = this._editor.getModel();\n\t\t\t\tif (!model) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait model.undo();\n\t\t\t\tthis.applyEditAndShowIfNeeded(ranges, { activeEditIndex: newEditIndex, allEdits: edits.allEdits }, canShowWidget, token);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic show(range: Range, edits: EditSet, onDidSelectEdit: (newIndex: number) => void) {\n\t\tthis.clear();\n\n\t\tif (this._editor.hasModel()) {\n\t\t\tthis._currentWidget.value = this._instantiationService.createInstance(PostEditWidget, this._id, this._editor, this._visibleContext, this._showCommand, range, edits, onDidSelectEdit);\n\t\t}\n\t}\n\n\tpublic clear() {\n\t\tthis._currentWidget.clear();\n\t}\n\n\tpublic tryShowSelector() {\n\t\tthis._currentWidget.value?.showSelector();\n\t}\n}\n"]}