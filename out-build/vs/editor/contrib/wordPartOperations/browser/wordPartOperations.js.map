{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/wordPartOperations/browser/wordPartOperations.ts"],"names":[],"mappings":"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","file":"wordPartOperations.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { registerEditorCommand } from 'vs/editor/browser/editorExtensions';\nimport { DeleteWordContext, WordNavigationType, WordPartOperations } from 'vs/editor/common/cursor/cursorWordOperations';\nimport { WordCharacterClassifier } from 'vs/editor/common/core/wordCharacterClassifier';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { DeleteWordCommand, MoveWordCommand } from 'vs/editor/contrib/wordOperations/browser/wordOperations';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\n\nexport class DeleteWordPartLeft extends DeleteWordCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: true,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'deleteWordPartLeft',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.Backspace },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _delete(ctx: DeleteWordContext, wordNavigationType: WordNavigationType): Range {\n\t\tconst r = WordPartOperations.deleteWordPartLeft(ctx);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\t\treturn new Range(1, 1, 1, 1);\n\t}\n}\n\nexport class DeleteWordPartRight extends DeleteWordCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\twhitespaceHeuristics: true,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'deleteWordPartRight',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.Delete },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _delete(ctx: DeleteWordContext, wordNavigationType: WordNavigationType): Range {\n\t\tconst r = WordPartOperations.deleteWordPartRight(ctx);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\t\tconst lineCount = ctx.model.getLineCount();\n\t\tconst maxColumn = ctx.model.getLineMaxColumn(lineCount);\n\t\treturn new Range(lineCount, maxColumn, lineCount, maxColumn);\n\t}\n}\n\nexport class WordPartLeftCommand extends MoveWordCommand {\n\tprotected _move(wordSeparators: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn WordPartOperations.moveWordPartLeft(wordSeparators, model, position);\n\t}\n}\nexport class CursorWordPartLeft extends WordPartLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'cursorWordPartLeft',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.LeftArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n// Register previous id for compatibility purposes\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeft', 'cursorWordPartLeft');\n\nexport class CursorWordPartLeftSelect extends WordPartLeftCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordStart,\n\t\t\tid: 'cursorWordPartLeftSelect',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyMod.Shift | KeyCode.LeftArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n// Register previous id for compatibility purposes\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeftSelect', 'cursorWordPartLeftSelect');\n\nexport class WordPartRightCommand extends MoveWordCommand {\n\tprotected _move(wordSeparators: WordCharacterClassifier, model: ITextModel, position: Position, wordNavigationType: WordNavigationType): Position {\n\t\treturn WordPartOperations.moveWordPartRight(wordSeparators, model, position);\n\t}\n}\nexport class CursorWordPartRight extends WordPartRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: false,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordPartRight',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.RightArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\nexport class CursorWordPartRightSelect extends WordPartRightCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tinSelectionMode: true,\n\t\t\twordNavigationType: WordNavigationType.WordEnd,\n\t\t\tid: 'cursorWordPartRightSelect',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyMod.Shift | KeyCode.RightArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\n\nregisterEditorCommand(new DeleteWordPartLeft());\nregisterEditorCommand(new DeleteWordPartRight());\nregisterEditorCommand(new CursorWordPartLeft());\nregisterEditorCommand(new CursorWordPartLeftSelect());\nregisterEditorCommand(new CursorWordPartRight());\nregisterEditorCommand(new CursorWordPartRightSelect());\n"]}