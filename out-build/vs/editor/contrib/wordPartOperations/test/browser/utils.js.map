{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/wordPartOperations/test/browser/utils.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAIhG,MAAa,IAAI;QAAjB;YACS,MAAC,GAAU,IAAI,GAAG,EAA+B,CAAC;QAc3D,CAAC;QAZO,WAAW,CAAI,EAAwB,EAAE,OAAU;YACzD,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;QACb,CAAC;QAEM,GAAG,CAAI,EAAwB;YACrC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;YACpC,IAAI,CAAC,KAAK,EAAE;gBACX,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;aAC1C;YACD,OAAO,KAAK,CAAC;QACd,CAAC;KACD;IAfD,oBAeC","file":"utils.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\n\nexport class StaticServiceAccessor implements ServicesAccessor {\n\tprivate services = new Map<ServiceIdentifier<any>, any>();\n\n\tpublic withService<T>(id: ServiceIdentifier<T>, service: T): this {\n\t\tthis.services.set(id, service);\n\t\treturn this;\n\t}\n\n\tpublic get<T>(id: ServiceIdentifier<T>): T {\n\t\tconst value = this.services.get(id);\n\t\tif (!value) {\n\t\t\tthrow new Error('Service does not exist');\n\t\t}\n\t\treturn value;\n\t}\n}\n"]}