{"version":3,"sources":["vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController.ts"],"names":[],"mappings":"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","file":"inlineCompletionsController.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { alert } from 'vs/base/browser/ui/aria/aria';\nimport { Event } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ITransaction, autorun, constObservable, disposableObservableValue, observableFromEvent, observableValue, transaction } from 'vs/base/common/observable';\nimport { CoreEditingCommands } from 'vs/editor/browser/coreCommands';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { CursorChangeReason } from 'vs/editor/common/cursorEvents';\nimport { ILanguageFeatureDebounceService } from 'vs/editor/common/services/languageFeatureDebounce';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { IModelContentChangedEvent } from 'vs/editor/common/textModelEvents';\nimport { inlineSuggestCommitId } from 'vs/editor/contrib/inlineCompletions/browser/commandIds';\nimport { GhostTextWidget } from 'vs/editor/contrib/inlineCompletions/browser/ghostTextWidget';\nimport { InlineCompletionContextKeys } from 'vs/editor/contrib/inlineCompletions/browser/inlineCompletionContextKeys';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from 'vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHintsWidget';\nimport { InlineCompletionsModel, VersionIdChangeReason } from 'vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel';\nimport { SuggestWidgetAdaptor } from 'vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider';\nimport { localize } from 'vs/nls';\nimport { AudioCue, IAudioCueService } from 'vs/platform/audioCues/browser/audioCueService';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\n\nexport class InlineCompletionsController extends Disposable {\n\tstatic ID = 'editor.contrib.inlineCompletionsController';\n\n\tpublic static get(editor: ICodeEditor): InlineCompletionsController | null {\n\t\treturn editor.getContribution<InlineCompletionsController>(InlineCompletionsController.ID);\n\t}\n\n\tpublic readonly model = disposableObservableValue<InlineCompletionsModel | undefined>('inlineCompletionModel', undefined);\n\tprivate readonly textModelVersionId = observableValue<number, VersionIdChangeReason>(this, -1);\n\tprivate readonly cursorPosition = observableValue<Position>(this, new Position(1, 1));\n\tprivate readonly suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(\n\t\tthis.editor,\n\t\t() => this.model.get()?.selectedInlineCompletion.get()?.toSingleTextEdit(undefined),\n\t\t(tx) => this.updateObservables(tx, VersionIdChangeReason.Other),\n\t\t(item) => {\n\t\t\ttransaction(tx => {\n\t\t\t\t/** @description handleSuggestAccepted */\n\t\t\t\tthis.updateObservables(tx, VersionIdChangeReason.Other);\n\t\t\t\tthis.model.get()?.handleSuggestAccepted(item);\n\t\t\t});\n\t\t}\n\t));\n\tprivate readonly _enabled = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(EditorOption.inlineSuggest).enabled);\n\n\tprivate ghostTextWidget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, {\n\t\tghostText: this.model.map((v, reader) => v?.ghostText.read(reader)),\n\t\tminReservedLineCount: constObservable(0),\n\t\ttargetTextModel: this.model.map(v => v?.textModel),\n\t}));\n\n\tprivate readonly _debounceValue = this.debounceService.for(\n\t\tthis.languageFeaturesService.inlineCompletionsProvider,\n\t\t'InlineCompletionsDebounce',\n\t\t{ min: 50, max: 50 }\n\t);\n\n\tconstructor(\n\t\tpublic readonly editor: ICodeEditor,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@ILanguageFeatureDebounceService private readonly debounceService: ILanguageFeatureDebounceService,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IAudioCueService private readonly audioCueService: IAudioCueService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(new InlineCompletionContextKeys(this.contextKeyService, this.model));\n\t\tthis._register(Event.runAndSubscribe(editor.onDidChangeModel, () => transaction(tx => {\n\t\t\t/** @description onDidChangeModel */\n\t\t\tthis.model.set(undefined, tx);\n\t\t\tthis.updateObservables(tx, VersionIdChangeReason.Other);\n\n\t\t\tconst textModel = editor.getModel();\n\t\t\tif (textModel) {\n\t\t\t\tconst model = instantiationService.createInstance(\n\t\t\t\t\tInlineCompletionsModel,\n\t\t\t\t\ttextModel,\n\t\t\t\t\tthis.suggestWidgetAdaptor.selectedItem,\n\t\t\t\t\tthis.cursorPosition,\n\t\t\t\t\tthis.textModelVersionId,\n\t\t\t\t\tthis._debounceValue,\n\t\t\t\t\tobservableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(EditorOption.suggest).preview),\n\t\t\t\t\tobservableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(EditorOption.suggest).previewMode),\n\t\t\t\t\tobservableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(EditorOption.inlineSuggest).mode),\n\t\t\t\t\tthis._enabled,\n\t\t\t\t);\n\t\t\t\tthis.model.set(model, tx);\n\t\t\t}\n\t\t})));\n\n\t\tconst getReason = (e: IModelContentChangedEvent): VersionIdChangeReason => {\n\t\t\tif (e.isUndoing) { return VersionIdChangeReason.Undo; }\n\t\t\tif (e.isRedoing) { return VersionIdChangeReason.Redo; }\n\t\t\tif (this.model.get()?.isAcceptingPartially) { return VersionIdChangeReason.AcceptWord; }\n\t\t\treturn VersionIdChangeReason.Other;\n\t\t};\n\t\tthis._register(editor.onDidChangeModelContent((e) => transaction(tx =>\n\t\t\t/** @description onDidChangeModelContent */\n\t\t\tthis.updateObservables(tx, getReason(e))\n\t\t)));\n\n\t\tthis._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\n\t\t\t/** @description onDidChangeCursorPosition */\n\t\t\tthis.updateObservables(tx, VersionIdChangeReason.Other);\n\t\t\tif (e.reason === CursorChangeReason.Explicit || e.source === 'api') {\n\t\t\t\tthis.model.get()?.stop(tx);\n\t\t\t}\n\t\t})));\n\n\t\tthis._register(editor.onDidType(() => transaction(tx => {\n\t\t\t/** @description onDidType */\n\t\t\tthis.updateObservables(tx, VersionIdChangeReason.Other);\n\t\t\tif (this._enabled.get()) {\n\t\t\t\tthis.model.get()?.trigger(tx);\n\t\t\t}\n\t\t})));\n\n\t\tthis._register(this.commandService.onDidExecuteCommand((e) => {\n\t\t\t// These commands don't trigger onDidType.\n\t\t\tconst commands = new Set([\n\t\t\t\tCoreEditingCommands.Tab.id,\n\t\t\t\tCoreEditingCommands.DeleteLeft.id,\n\t\t\t\tCoreEditingCommands.DeleteRight.id,\n\t\t\t\tinlineSuggestCommitId,\n\t\t\t\t'acceptSelectedSuggestion',\n\t\t\t]);\n\t\t\tif (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n\t\t\t\ttransaction(tx => {\n\t\t\t\t\t/** @description onDidExecuteCommand */\n\t\t\t\t\tthis.model.get()?.trigger(tx);\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.editor.onDidBlurEditorWidget(() => {\n\t\t\t// This is a hidden setting very useful for debugging\n\t\t\tif (this.contextKeyService.getContextKeyValue<boolean>('accessibleViewIsShown') || this.configurationService.getValue('editor.inlineSuggest.keepOnBlur') ||\n\t\t\t\teditor.getOption(EditorOption.inlineSuggest).keepOnBlur) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (InlineSuggestionHintsContentWidget.dropDownVisible) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttransaction(tx => {\n\t\t\t\t/** @description onDidBlurEditorWidget */\n\t\t\t\tthis.model.get()?.stop(tx);\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description forceRenderingAbove */\n\t\t\tconst state = this.model.read(reader)?.state.read(reader);\n\t\t\tif (state?.suggestItem) {\n\t\t\t\tif (state.ghostText.lineCount >= 2) {\n\t\t\t\t\tthis.suggestWidgetAdaptor.forceRenderingAbove();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.suggestWidgetAdaptor.stopForceRenderingAbove();\n\t\t\t}\n\t\t}));\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.suggestWidgetAdaptor.stopForceRenderingAbove();\n\t\t}));\n\n\t\tlet lastInlineCompletionId: string | undefined = undefined;\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description play audio cue & read suggestion */\n\t\t\tconst model = this.model.read(reader);\n\t\t\tconst state = model?.state.read(reader);\n\t\t\tif (!model || !state || !state.inlineCompletion) {\n\t\t\t\tlastInlineCompletionId = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (state.inlineCompletion.semanticId !== lastInlineCompletionId) {\n\t\t\t\tlastInlineCompletionId = state.inlineCompletion.semanticId;\n\t\t\t\tconst lineText = model.textModel.getLineContent(state.ghostText.lineNumber);\n\t\t\t\tthis.audioCueService.playAudioCue(AudioCue.inlineSuggestion).then(() => {\n\t\t\t\t\tif (this.editor.getOption(EditorOption.screenReaderAnnounceInlineSuggestion)) {\n\t\t\t\t\t\tthis.provideScreenReaderUpdate(state.ghostText.renderForScreenReader(lineText));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(new InlineCompletionsHintsWidget(this.editor, this.model, this.instantiationService));\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n\t\t\t\tthis.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this.configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n\t\t\t}\n\t\t}));\n\t\tthis.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this.configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n\t}\n\n\tprivate provideScreenReaderUpdate(content: string): void {\n\t\tconst accessibleViewShowing = this.contextKeyService.getContextKeyValue<boolean>('accessibleViewIsShown');\n\t\tconst accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n\t\tlet hint: string | undefined;\n\t\tif (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(EditorOption.inlineCompletionsAccessibilityVerbose)) {\n\t\t\thint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n\t\t}\n\t\thint ? alert(content + ', ' + hint) : alert(content);\n\t}\n\n\t/**\n\t * Copies over the relevant state from the text model to observables.\n\t * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\n\t * regardless of who calls into us.\n\t */\n\tprivate updateObservables(tx: ITransaction, changeReason: VersionIdChangeReason): void {\n\t\tconst newModel = this.editor.getModel();\n\t\tthis.textModelVersionId.set(newModel?.getVersionId() ?? -1, tx, changeReason);\n\t\tthis.cursorPosition.set(this.editor.getPosition() ?? new Position(1, 1), tx);\n\t}\n\n\tpublic shouldShowHoverAt(range: Range) {\n\t\tconst ghostText = this.model.get()?.ghostText.get();\n\t\tif (ghostText) {\n\t\t\treturn ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic shouldShowHoverAtViewZone(viewZoneId: string): boolean {\n\t\treturn this.ghostTextWidget.ownsViewZone(viewZoneId);\n\t}\n\n\tpublic hide() {\n\t\ttransaction(tx => {\n\t\t\tthis.model.get()?.stop(tx);\n\t\t});\n\t}\n}\n"]}