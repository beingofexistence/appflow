{"version":3,"sources":["vs/editor/contrib/inlineCompletions/browser/hoverParticipant.ts"],"names":[],"mappings":"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","file":"hoverParticipant.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { MarkdownString } from 'vs/base/common/htmlContent';\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { autorun, constObservable } from 'vs/base/common/observable';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { IModelDecoration } from 'vs/editor/common/model';\nimport { HoverAnchor, HoverAnchorType, HoverForeignElementAnchor, IEditorHoverParticipant, IEditorHoverRenderContext, IHoverPart } from 'vs/editor/contrib/hover/browser/hoverTypes';\nimport { InlineCompletionsController } from 'vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController';\nimport { InlineSuggestionHintsContentWidget } from 'vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHintsWidget';\nimport { MarkdownRenderer } from 'vs/editor/contrib/markdownRenderer/browser/markdownRenderer';\nimport * as nls from 'vs/nls';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport class InlineCompletionsHover implements IHoverPart {\n\tconstructor(\n\t\tpublic readonly owner: IEditorHoverParticipant<InlineCompletionsHover>,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly controller: InlineCompletionsController\n\t) { }\n\n\tpublic isValidForHoverAnchor(anchor: HoverAnchor): boolean {\n\t\treturn (\n\t\t\tanchor.type === HoverAnchorType.Range\n\t\t\t&& this.range.startColumn <= anchor.range.startColumn\n\t\t\t&& this.range.endColumn >= anchor.range.endColumn\n\t\t);\n\t}\n}\n\nexport class InlineCompletionsHoverParticipant implements IEditorHoverParticipant<InlineCompletionsHover> {\n\n\tpublic readonly hoverOrdinal: number = 4;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t) {\n\t}\n\n\tsuggestHoverAnchor(mouseEvent: IEditorMouseEvent): HoverAnchor | null {\n\t\tconst controller = InlineCompletionsController.get(this._editor);\n\t\tif (!controller) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst target = mouseEvent.target;\n\t\tif (target.type === MouseTargetType.CONTENT_VIEW_ZONE) {\n\t\t\t// handle the case where the mouse is over the view zone\n\t\t\tconst viewZoneData = target.detail;\n\t\t\tif (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, Range.fromPositions(this._editor.getModel()!.validatePosition(viewZoneData.positionBefore || viewZoneData.position)), mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\tif (target.type === MouseTargetType.CONTENT_EMPTY) {\n\t\t\t// handle the case where the mouse is over the empty portion of a line following ghost text\n\t\t\tif (controller.shouldShowHoverAt(target.range)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\tif (target.type === MouseTargetType.CONTENT_TEXT) {\n\t\t\t// handle the case where the mouse is directly over ghost text\n\t\t\tconst mightBeForeignElement = target.detail.mightBeForeignElement;\n\t\t\tif (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomputeSync(anchor: HoverAnchor, lineDecorations: IModelDecoration[]): InlineCompletionsHover[] {\n\t\tif (this._editor.getOption(EditorOption.inlineSuggest).showToolbar === 'always') {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst controller = InlineCompletionsController.get(this._editor);\n\t\tif (controller && controller.shouldShowHoverAt(anchor.range)) {\n\t\t\treturn [new InlineCompletionsHover(this, anchor.range, controller)];\n\t\t}\n\t\treturn [];\n\t}\n\n\trenderHoverParts(context: IEditorHoverRenderContext, hoverParts: InlineCompletionsHover[]): IDisposable {\n\t\tconst disposableStore = new DisposableStore();\n\t\tconst part = hoverParts[0];\n\n\t\tthis._telemetryService.publicLog2<{}, {\n\t\t\towner: 'hediet';\n\t\t\tcomment: 'This event tracks whenever an inline completion hover is shown.';\n\t\t}>('inlineCompletionHover.shown');\n\n\t\tif (this.accessibilityService.isScreenReaderOptimized() && !this._editor.getOption(EditorOption.screenReaderAnnounceInlineSuggestion)) {\n\t\t\tthis.renderScreenReaderText(context, part, disposableStore);\n\t\t}\n\n\t\tconst model = part.controller.model.get()!;\n\n\t\tconst w = this._instantiationService.createInstance(InlineSuggestionHintsContentWidget, this._editor, false,\n\t\t\tconstObservable(null),\n\t\t\tmodel.selectedInlineCompletionIndex,\n\t\t\tmodel.inlineCompletionsCount,\n\t\t\tmodel.selectedInlineCompletion.map(v => v?.inlineCompletion.source.inlineCompletions.commands ?? []),);\n\t\tcontext.fragment.appendChild(w.getDomNode());\n\n\t\tmodel.triggerExplicitly();\n\n\t\tdisposableStore.add(w);\n\n\t\treturn disposableStore;\n\t}\n\n\tprivate renderScreenReaderText(context: IEditorHoverRenderContext, part: InlineCompletionsHover, disposableStore: DisposableStore) {\n\t\tconst $ = dom.$;\n\t\tconst markdownHoverElement = $('div.hover-row.markdown-hover');\n\t\tconst hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents', { ['aria-live']: 'assertive' }));\n\t\tconst renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n\t\tconst render = (code: string) => {\n\t\t\tdisposableStore.add(renderer.onDidRenderAsync(() => {\n\t\t\t\thoverContentsElement.className = 'hover-contents code-hover-contents';\n\t\t\t\tcontext.onContentsChanged();\n\t\t\t}));\n\n\t\t\tconst inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n\t\t\tconst renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n\t\t\thoverContentsElement.replaceChildren(renderedContents.element);\n\t\t};\n\n\t\tdisposableStore.add(autorun(reader => {\n\t\t\t/** @description update hover */\n\t\t\tconst ghostText = part.controller.model.read(reader)?.ghostText.read(reader);\n\t\t\tif (ghostText) {\n\t\t\t\tconst lineText = this._editor.getModel()!.getLineContent(ghostText.lineNumber);\n\t\t\t\trender(ghostText.renderForScreenReader(lineText));\n\t\t\t} else {\n\t\t\t\tdom.reset(hoverContentsElement);\n\t\t\t}\n\t\t}));\n\n\t\tcontext.fragment.appendChild(markdownHoverElement);\n\t}\n}\n"]}