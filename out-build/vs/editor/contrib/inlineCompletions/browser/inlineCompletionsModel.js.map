{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.ts"],"names":[],"mappings":"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","file":"inlineCompletionsModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mapFindFirst } from 'vs/base/common/arraysFind';\nimport { BugIndicatingError, onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IObservable, IReader, ITransaction, autorun, derived, derivedHandleChanges, derivedOpts, recomputeInitiallyAndOnChange, observableSignal, observableValue, subtransaction, transaction } from 'vs/base/common/observable';\nimport { isDefined } from 'vs/base/common/types';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { InlineCompletionContext, InlineCompletionTriggerKind } from 'vs/editor/common/languages';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { EndOfLinePreference, ITextModel } from 'vs/editor/common/model';\nimport { IFeatureDebounceInformation } from 'vs/editor/common/services/languageFeatureDebounce';\nimport { GhostText, GhostTextOrReplacement, ghostTextOrReplacementEquals } from 'vs/editor/contrib/inlineCompletions/browser/ghostText';\nimport { InlineCompletionWithUpdatedRange, InlineCompletionsSource } from 'vs/editor/contrib/inlineCompletions/browser/inlineCompletionsSource';\nimport { SingleTextEdit } from 'vs/editor/contrib/inlineCompletions/browser/singleTextEdit';\nimport { SuggestItemInfo } from 'vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider';\nimport { addPositions, lengthOfText } from 'vs/editor/contrib/inlineCompletions/browser/utils';\nimport { SnippetController2 } from 'vs/editor/contrib/snippet/browser/snippetController2';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\n\nexport enum VersionIdChangeReason {\n\tUndo,\n\tRedo,\n\tAcceptWord,\n\tOther,\n}\n\nexport class InlineCompletionsModel extends Disposable {\n\tprivate readonly _source = this._register(this._instantiationService.createInstance(InlineCompletionsSource, this.textModel, this.textModelVersionId, this._debounceValue));\n\tprivate readonly _isActive = observableValue<boolean, InlineCompletionTriggerKind | void>(this, false);\n\tprivate readonly _forceUpdate = observableSignal<InlineCompletionTriggerKind>('forceUpdate');\n\n\t// We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n\tprivate readonly _selectedInlineCompletionId = observableValue<string | undefined>(this, undefined);\n\n\tprivate _isAcceptingPartially = false;\n\tpublic get isAcceptingPartially() { return this._isAcceptingPartially; }\n\n\tconstructor(\n\t\tpublic readonly textModel: ITextModel,\n\t\tpublic readonly selectedSuggestItem: IObservable<SuggestItemInfo | undefined>,\n\t\tpublic readonly cursorPosition: IObservable<Position>,\n\t\tpublic readonly textModelVersionId: IObservable<number, VersionIdChangeReason>,\n\t\tprivate readonly _debounceValue: IFeatureDebounceInformation,\n\t\tprivate readonly _suggestPreviewEnabled: IObservable<boolean>,\n\t\tprivate readonly _suggestPreviewMode: IObservable<'prefix' | 'subword' | 'subwordSmart'>,\n\t\tprivate readonly _inlineSuggestMode: IObservable<'prefix' | 'subword' | 'subwordSmart'>,\n\t\tprivate readonly _enabled: IObservable<boolean>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this._fetchInlineCompletions));\n\n\t\tlet lastItem: InlineCompletionWithUpdatedRange | undefined = undefined;\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description call handleItemDidShow */\n\t\t\tconst item = this.state.read(reader);\n\t\t\tconst completion = item?.inlineCompletion;\n\t\t\tif (completion?.semanticId !== lastItem?.semanticId) {\n\t\t\t\tlastItem = completion;\n\t\t\t\tif (completion) {\n\t\t\t\t\tconst i = completion.inlineCompletion;\n\t\t\t\t\tconst src = i.source;\n\t\t\t\t\tsrc.provider.handleItemDidShow?.(src.inlineCompletions, i.sourceInlineCompletion, i.insertText);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate readonly _preserveCurrentCompletionReasons = new Set([\n\t\tVersionIdChangeReason.Redo,\n\t\tVersionIdChangeReason.Undo,\n\t\tVersionIdChangeReason.AcceptWord,\n\t]);\n\tprivate readonly _fetchInlineCompletions = derivedHandleChanges({\n\t\towner: this,\n\t\tcreateEmptyChangeSummary: () => ({\n\t\t\tpreserveCurrentCompletion: false,\n\t\t\tinlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\n\t\t}),\n\t\thandleChange: (ctx, changeSummary) => {\n\t\t\t/** @description fetch inline completions */\n\t\t\tif (ctx.didChange(this.textModelVersionId) && this._preserveCurrentCompletionReasons.has(ctx.change)) {\n\t\t\t\tchangeSummary.preserveCurrentCompletion = true;\n\t\t\t} else if (ctx.didChange(this._forceUpdate)) {\n\t\t\t\tchangeSummary.inlineCompletionTriggerKind = ctx.change;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t}, (reader, changeSummary) => {\n\t\tthis._forceUpdate.read(reader);\n\t\tconst shouldUpdate = (this._enabled.read(reader) && this.selectedSuggestItem.read(reader)) || this._isActive.read(reader);\n\t\tif (!shouldUpdate) {\n\t\t\tthis._source.cancelUpdate();\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.textModelVersionId.read(reader); // Refetch on text change\n\n\t\tconst itemToPreserveCandidate = this.selectedInlineCompletion.get();\n\t\tconst itemToPreserve = changeSummary.preserveCurrentCompletion || itemToPreserveCandidate?.forwardStable\n\t\t\t? itemToPreserveCandidate : undefined;\n\n\t\tconst suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.get();\n\t\tconst suggestItem = this.selectedSuggestItem.read(reader);\n\t\tif (suggestWidgetInlineCompletions && !suggestItem) {\n\t\t\tconst inlineCompletions = this._source.inlineCompletions.get();\n\t\t\ttransaction(tx => {\n\t\t\t\t/** @description Seed inline completions with (newer) suggest widget inline completions */\n\t\t\t\tif (inlineCompletions && suggestWidgetInlineCompletions.request.versionId > inlineCompletions.request.versionId) {\n\t\t\t\t\tthis._source.inlineCompletions.set(suggestWidgetInlineCompletions.clone(), tx);\n\t\t\t\t}\n\t\t\t\tthis._source.clearSuggestWidgetInlineCompletions(tx);\n\t\t\t});\n\t\t}\n\n\t\tconst cursorPosition = this.cursorPosition.read(reader);\n\t\tconst context: InlineCompletionContext = {\n\t\t\ttriggerKind: changeSummary.inlineCompletionTriggerKind,\n\t\t\tselectedSuggestionInfo: suggestItem?.toSelectedSuggestionInfo(),\n\t\t};\n\t\treturn this._source.fetch(cursorPosition, context, itemToPreserve);\n\t});\n\n\tpublic async trigger(tx?: ITransaction): Promise<void> {\n\t\tthis._isActive.set(true, tx);\n\t\tawait this._fetchInlineCompletions.get();\n\t}\n\n\tpublic async triggerExplicitly(tx?: ITransaction): Promise<void> {\n\t\tsubtransaction(tx, tx => {\n\t\t\tthis._isActive.set(true, tx);\n\t\t\tthis._forceUpdate.trigger(tx, InlineCompletionTriggerKind.Explicit);\n\t\t});\n\t\tawait this._fetchInlineCompletions.get();\n\t}\n\n\tpublic stop(tx?: ITransaction): void {\n\t\tsubtransaction(tx, tx => {\n\t\t\tthis._isActive.set(false, tx);\n\t\t\tthis._source.clear(tx);\n\t\t});\n\t}\n\n\tprivate readonly _filteredInlineCompletionItems = derived(this, reader => {\n\t\tconst c = this._source.inlineCompletions.read(reader);\n\t\tif (!c) { return []; }\n\t\tconst cursorPosition = this.cursorPosition.read(reader);\n\t\tconst filteredCompletions = c.inlineCompletions.filter(c => c.isVisible(this.textModel, cursorPosition, reader));\n\t\treturn filteredCompletions;\n\t});\n\n\tpublic readonly selectedInlineCompletionIndex = derived<number>(this, (reader) => {\n\t\tconst selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n\t\tconst filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n\t\tconst idx = this._selectedInlineCompletionId === undefined ? -1\n\t\t\t: filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n\t\tif (idx === -1) {\n\t\t\t// Reset the selection so that the selection does not jump back when it appears again\n\t\t\tthis._selectedInlineCompletionId.set(undefined, undefined);\n\t\t\treturn 0;\n\t\t}\n\t\treturn idx;\n\t});\n\n\tpublic readonly selectedInlineCompletion = derived<InlineCompletionWithUpdatedRange | undefined>(this, (reader) => {\n\t\tconst filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n\t\tconst idx = this.selectedInlineCompletionIndex.read(reader);\n\t\treturn filteredCompletions[idx];\n\t});\n\n\tpublic readonly lastTriggerKind: IObservable<InlineCompletionTriggerKind | undefined> = this._source.inlineCompletions.map(\n\t\tv => /** @description lastTriggerKind */ v?.request.context.triggerKind\n\t);\n\n\tpublic readonly inlineCompletionsCount = derived<number | undefined>(this, reader => {\n\t\tif (this.lastTriggerKind.read(reader) === InlineCompletionTriggerKind.Explicit) {\n\t\t\treturn this._filteredInlineCompletionItems.read(reader).length;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t});\n\n\tpublic readonly state = derivedOpts<{\n\t\tsuggestItem: SuggestItemInfo | undefined;\n\t\tinlineCompletion: InlineCompletionWithUpdatedRange | undefined;\n\t\tghostText: GhostTextOrReplacement;\n\t} | undefined>({\n\t\towner: this,\n\t\tequalityComparer: (a, b) => {\n\t\t\tif (!a || !b) { return a === b; }\n\t\t\treturn ghostTextOrReplacementEquals(a.ghostText, b.ghostText)\n\t\t\t\t&& a.inlineCompletion === b.inlineCompletion\n\t\t\t\t&& a.suggestItem === b.suggestItem;\n\t\t}\n\t}, (reader) => {\n\t\tconst model = this.textModel;\n\n\t\tconst suggestItem = this.selectedSuggestItem.read(reader);\n\t\tif (suggestItem) {\n\t\t\tconst suggestCompletion = suggestItem.toSingleTextEdit().removeCommonPrefix(model);\n\t\t\tconst augmentedCompletion = this._computeAugmentedCompletion(suggestCompletion, reader);\n\n\t\t\tconst isSuggestionPreviewEnabled = this._suggestPreviewEnabled.read(reader);\n\t\t\tif (!isSuggestionPreviewEnabled && !augmentedCompletion) { return undefined; }\n\n\t\t\tconst edit = augmentedCompletion?.edit ?? suggestCompletion;\n\t\t\tconst editPreviewLength = augmentedCompletion ? augmentedCompletion.edit.text.length - suggestCompletion.text.length : 0;\n\n\t\t\tconst mode = this._suggestPreviewMode.read(reader);\n\t\t\tconst cursor = this.cursorPosition.read(reader);\n\t\t\tconst newGhostText = edit.computeGhostText(model, mode, cursor, editPreviewLength);\n\n\t\t\t// Show an invisible ghost text to reserve space\n\t\t\tconst ghostText = newGhostText ?? new GhostText(edit.range.endLineNumber, []);\n\t\t\treturn { ghostText, inlineCompletion: augmentedCompletion?.completion, suggestItem };\n\t\t} else {\n\t\t\tif (!this._isActive.read(reader)) { return undefined; }\n\t\t\tconst item = this.selectedInlineCompletion.read(reader);\n\t\t\tif (!item) { return undefined; }\n\n\t\t\tconst replacement = item.toSingleTextEdit(reader);\n\t\t\tconst mode = this._inlineSuggestMode.read(reader);\n\t\t\tconst cursor = this.cursorPosition.read(reader);\n\t\t\tconst ghostText = replacement.computeGhostText(model, mode, cursor);\n\t\t\treturn ghostText ? { ghostText, inlineCompletion: item, suggestItem: undefined } : undefined;\n\t\t}\n\t});\n\n\tprivate _computeAugmentedCompletion(suggestCompletion: SingleTextEdit, reader: IReader | undefined) {\n\t\tconst model = this.textModel;\n\t\tconst suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.read(reader);\n\t\tconst candidateInlineCompletions = suggestWidgetInlineCompletions\n\t\t\t? suggestWidgetInlineCompletions.inlineCompletions\n\t\t\t: [this.selectedInlineCompletion.read(reader)].filter(isDefined);\n\n\t\tconst augmentedCompletion = mapFindFirst(candidateInlineCompletions, completion => {\n\t\t\tlet r = completion.toSingleTextEdit(reader);\n\t\t\tr = r.removeCommonPrefix(model, Range.fromPositions(r.range.getStartPosition(), suggestCompletion.range.getEndPosition()));\n\t\t\treturn r.augments(suggestCompletion) ? { edit: r, completion } : undefined;\n\t\t});\n\n\t\treturn augmentedCompletion;\n\t}\n\n\tpublic readonly ghostText = derivedOpts({\n\t\towner: this,\n\t\tequalityComparer: ghostTextOrReplacementEquals\n\t}, reader => {\n\t\tconst v = this.state.read(reader);\n\t\tif (!v) { return undefined; }\n\t\treturn v.ghostText;\n\t});\n\n\tprivate async _deltaSelectedInlineCompletionIndex(delta: 1 | -1): Promise<void> {\n\t\tawait this.triggerExplicitly();\n\n\t\tconst completions = this._filteredInlineCompletionItems.get() || [];\n\t\tif (completions.length > 0) {\n\t\t\tconst newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n\t\t\tthis._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n\t\t} else {\n\t\t\tthis._selectedInlineCompletionId.set(undefined, undefined);\n\t\t}\n\t}\n\n\tpublic async next(): Promise<void> {\n\t\tawait this._deltaSelectedInlineCompletionIndex(1);\n\t}\n\n\tpublic async previous(): Promise<void> {\n\t\tawait this._deltaSelectedInlineCompletionIndex(-1);\n\t}\n\n\tpublic async accept(editor: ICodeEditor): Promise<void> {\n\t\tif (editor.getModel() !== this.textModel) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tconst state = this.state.get();\n\t\tif (!state || state.ghostText.isEmpty() || !state.inlineCompletion) {\n\t\t\treturn;\n\t\t}\n\t\tconst completion = state.inlineCompletion.toInlineCompletion(undefined);\n\n\t\teditor.pushUndoStop();\n\t\tif (completion.snippetInfo) {\n\t\t\teditor.executeEdits(\n\t\t\t\t'inlineSuggestion.accept',\n\t\t\t\t[\n\t\t\t\t\tEditOperation.replaceMove(completion.range, ''),\n\t\t\t\t\t...completion.additionalTextEdits\n\t\t\t\t]\n\t\t\t);\n\t\t\teditor.setPosition(completion.snippetInfo.range.getStartPosition());\n\t\t\tSnippetController2.get(editor)?.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\n\t\t} else {\n\t\t\teditor.executeEdits(\n\t\t\t\t'inlineSuggestion.accept',\n\t\t\t\t[\n\t\t\t\t\tEditOperation.replaceMove(completion.range, completion.insertText),\n\t\t\t\t\t...completion.additionalTextEdits\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\tif (completion.command) {\n\t\t\t// Make sure the completion list will not be disposed.\n\t\t\tcompletion.source.addRef();\n\t\t}\n\n\t\t// Reset before invoking the command, since the command might cause a follow up trigger.\n\t\ttransaction(tx => {\n\t\t\tthis._source.clear(tx);\n\t\t\t// Potentially, isActive will get set back to true by the typing or accept inline suggest event\n\t\t\t// if automatic inline suggestions are enabled.\n\t\t\tthis._isActive.set(false, tx);\n\t\t});\n\n\t\tif (completion.command) {\n\t\t\tawait this._commandService\n\t\t\t\t.executeCommand(completion.command.id, ...(completion.command.arguments || []))\n\t\t\t\t.then(undefined, onUnexpectedExternalError);\n\t\t\tcompletion.source.removeRef();\n\t\t}\n\t}\n\n\tpublic async acceptNextWord(editor: ICodeEditor): Promise<void> {\n\t\tawait this._acceptNext(editor, (pos, text) => {\n\t\t\tconst langId = this.textModel.getLanguageIdAtPosition(pos.lineNumber, pos.column);\n\t\t\tconst config = this._languageConfigurationService.getLanguageConfiguration(langId);\n\t\t\tconst wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n\n\t\t\tconst m1 = text.match(wordRegExp);\n\t\t\tlet acceptUntilIndexExclusive = 0;\n\t\t\tif (m1 && m1.index !== undefined) {\n\t\t\t\tif (m1.index === 0) {\n\t\t\t\t\tacceptUntilIndexExclusive = m1[0].length;\n\t\t\t\t} else {\n\t\t\t\t\tacceptUntilIndexExclusive = m1.index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tacceptUntilIndexExclusive = text.length;\n\t\t\t}\n\n\t\t\tconst wsRegExp = /\\s+/g;\n\t\t\tconst m2 = wsRegExp.exec(text);\n\t\t\tif (m2 && m2.index !== undefined) {\n\t\t\t\tif (m2.index + m2[0].length < acceptUntilIndexExclusive) {\n\t\t\t\t\tacceptUntilIndexExclusive = m2.index + m2[0].length;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acceptUntilIndexExclusive;\n\t\t});\n\t}\n\n\tpublic async acceptNextLine(editor: ICodeEditor): Promise<void> {\n\t\tawait this._acceptNext(editor, (pos, text) => {\n\t\t\tconst m = text.match(/\\n/);\n\t\t\tif (m && m.index !== undefined) {\n\t\t\t\treturn m.index + 1;\n\t\t\t}\n\t\t\treturn text.length;\n\t\t});\n\t}\n\n\tprivate async _acceptNext(editor: ICodeEditor, getAcceptUntilIndex: (position: Position, text: string) => number): Promise<void> {\n\t\tif (editor.getModel() !== this.textModel) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tconst state = this.state.get();\n\t\tif (!state || state.ghostText.isEmpty() || !state.inlineCompletion) {\n\t\t\treturn;\n\t\t}\n\t\tconst ghostText = state.ghostText;\n\t\tconst completion = state.inlineCompletion.toInlineCompletion(undefined);\n\n\t\tif (completion.snippetInfo || completion.filterText !== completion.insertText) {\n\t\t\t// not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n\t\t\tawait this.accept(editor);\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstPart = ghostText.parts[0];\n\t\tconst position = new Position(ghostText.lineNumber, firstPart.column);\n\t\tconst line = firstPart.lines.join('\\n');\n\t\tconst acceptUntilIndexExclusive = getAcceptUntilIndex(position, line);\n\n\t\tif (acceptUntilIndexExclusive === line.length && ghostText.parts.length === 1) {\n\t\t\tthis.accept(editor);\n\t\t\treturn;\n\t\t}\n\n\t\tconst partialText = line.substring(0, acceptUntilIndexExclusive);\n\n\t\tthis._isAcceptingPartially = true;\n\t\ttry {\n\t\t\teditor.pushUndoStop();\n\t\t\teditor.executeEdits('inlineSuggestion.accept', [\n\t\t\t\tEditOperation.replace(Range.fromPositions(position), partialText),\n\t\t\t]);\n\t\t\tconst length = lengthOfText(partialText);\n\t\t\teditor.setPosition(addPositions(position, length));\n\t\t} finally {\n\t\t\tthis._isAcceptingPartially = false;\n\t\t}\n\n\t\tif (completion.source.provider.handlePartialAccept) {\n\t\t\tconst acceptedRange = Range.fromPositions(completion.range.getStartPosition(), addPositions(position, lengthOfText(partialText)));\n\t\t\t// This assumes that the inline completion and the model use the same EOL style.\n\t\t\tconst text = editor.getModel()!.getValueInRange(acceptedRange, EndOfLinePreference.LF);\n\t\t\tcompletion.source.provider.handlePartialAccept(\n\t\t\t\tcompletion.source.inlineCompletions,\n\t\t\t\tcompletion.sourceInlineCompletion,\n\t\t\t\ttext.length,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic handleSuggestAccepted(item: SuggestItemInfo) {\n\t\tconst itemEdit = item.toSingleTextEdit().removeCommonPrefix(this.textModel);\n\t\tconst augmentedCompletion = this._computeAugmentedCompletion(itemEdit, undefined);\n\t\tif (!augmentedCompletion) { return; }\n\n\t\tconst inlineCompletion = augmentedCompletion.completion.inlineCompletion;\n\t\tinlineCompletion.source.provider.handlePartialAccept?.(\n\t\t\tinlineCompletion.source.inlineCompletions,\n\t\t\tinlineCompletion.sourceInlineCompletion,\n\t\t\titemEdit.text.length,\n\t\t);\n\t}\n}\n"]}