{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/inlineCompletions/browser/ghostText.ts"],"names":[],"mappings":"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","file":"ghostText.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Range } from 'vs/editor/common/core/range';\nimport { ColumnRange, applyEdits } from 'vs/editor/contrib/inlineCompletions/browser/utils';\n\nexport class GhostText {\n\tconstructor(\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly parts: GhostTextPart[],\n\t) {\n\t}\n\n\tequals(other: GhostText): boolean {\n\t\treturn this.lineNumber === other.lineNumber &&\n\t\t\tthis.parts.length === other.parts.length &&\n\t\t\tthis.parts.every((part, index) => part.equals(other.parts[index]));\n\t}\n\n\t/**\n\t * Only used for testing/debugging.\n\t*/\n\trender(documentText: string, debug: boolean = false): string {\n\t\tconst l = this.lineNumber;\n\t\treturn applyEdits(documentText, [\n\t\t\t...this.parts.map(p => ({\n\t\t\t\trange: { startLineNumber: l, endLineNumber: l, startColumn: p.column, endColumn: p.column },\n\t\t\t\ttext: debug ? `[${p.lines.join('\\n')}]` : p.lines.join('\\n')\n\t\t\t})),\n\t\t]);\n\t}\n\n\trenderForScreenReader(lineText: string): string {\n\t\tif (this.parts.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lastPart = this.parts[this.parts.length - 1];\n\n\t\tconst cappedLineText = lineText.substr(0, lastPart.column - 1);\n\t\tconst text = applyEdits(cappedLineText,\n\t\t\tthis.parts.map(p => ({\n\t\t\t\trange: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n\t\t\t\ttext: p.lines.join('\\n')\n\t\t\t}))\n\t\t);\n\n\t\treturn text.substring(this.parts[0].column - 1);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.parts.every(p => p.lines.length === 0);\n\t}\n\n\tget lineCount(): number {\n\t\treturn 1 + this.parts.reduce((r, p) => r + p.lines.length - 1, 0);\n\t}\n}\n\nexport class GhostTextPart {\n\tconstructor(\n\t\treadonly column: number,\n\t\treadonly lines: readonly string[],\n\t\t/**\n\t\t * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n\t\t*/\n\t\treadonly preview: boolean,\n\t) {\n\t}\n\n\tequals(other: GhostTextPart): boolean {\n\t\treturn this.column === other.column &&\n\t\t\tthis.lines.length === other.lines.length &&\n\t\t\tthis.lines.every((line, index) => line === other.lines[index]);\n\t}\n}\n\nexport class GhostTextReplacement {\n\tpublic readonly parts: ReadonlyArray<GhostTextPart> = [\n\t\tnew GhostTextPart(\n\t\t\tthis.columnRange.endColumnExclusive,\n\t\t\tthis.newLines,\n\t\t\tfalse\n\t\t),\n\t];\n\n\tconstructor(\n\t\treadonly lineNumber: number,\n\t\treadonly columnRange: ColumnRange,\n\t\treadonly newLines: readonly string[],\n\t\tpublic readonly additionalReservedLineCount: number = 0,\n\t) { }\n\n\trenderForScreenReader(_lineText: string): string {\n\t\treturn this.newLines.join('\\n');\n\t}\n\n\trender(documentText: string, debug: boolean = false): string {\n\t\tconst replaceRange = this.columnRange.toRange(this.lineNumber);\n\n\t\tif (debug) {\n\t\t\treturn applyEdits(documentText, [\n\t\t\t\t{ range: Range.fromPositions(replaceRange.getStartPosition()), text: `(` },\n\t\t\t\t{ range: Range.fromPositions(replaceRange.getEndPosition()), text: `)[${this.newLines.join('\\n')}]` }\n\t\t\t]);\n\t\t} else {\n\t\t\treturn applyEdits(documentText, [\n\t\t\t\t{ range: replaceRange, text: this.newLines.join('\\n') }\n\t\t\t]);\n\t\t}\n\t}\n\n\tget lineCount(): number {\n\t\treturn this.newLines.length;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.parts.every(p => p.lines.length === 0);\n\t}\n\n\tequals(other: GhostTextReplacement): boolean {\n\t\treturn this.lineNumber === other.lineNumber &&\n\t\t\tthis.columnRange.equals(other.columnRange) &&\n\t\t\tthis.newLines.length === other.newLines.length &&\n\t\t\tthis.newLines.every((line, index) => line === other.newLines[index]) &&\n\t\t\tthis.additionalReservedLineCount === other.additionalReservedLineCount;\n\t}\n}\n\nexport type GhostTextOrReplacement = GhostText | GhostTextReplacement;\n\nexport function ghostTextOrReplacementEquals(a: GhostTextOrReplacement | undefined, b: GhostTextOrReplacement | undefined): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\tif (a instanceof GhostText && b instanceof GhostText) {\n\t\treturn a.equals(b);\n\t}\n\tif (a instanceof GhostTextReplacement && b instanceof GhostTextReplacement) {\n\t\treturn a.equals(b);\n\t}\n\treturn false;\n}\n"]}