{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/inlineCompletions/test/browser/utils.ts"],"names":[],"mappings":"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","file":"utils.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { CoreEditingCommands, CoreNavigationCommands } from 'vs/editor/browser/coreCommands';\nimport { Position } from 'vs/editor/common/core/position';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { InlineCompletion, InlineCompletionContext, InlineCompletionsProvider } from 'vs/editor/common/languages';\nimport { ITestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport { InlineCompletionsModel } from 'vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel';\nimport { autorun } from 'vs/base/common/observable';\n\nexport class MockInlineCompletionsProvider implements InlineCompletionsProvider {\n\tprivate returnValue: InlineCompletion[] = [];\n\tprivate delayMs: number = 0;\n\n\tprivate callHistory = new Array<unknown>();\n\tprivate calledTwiceIn50Ms = false;\n\n\tpublic setReturnValue(value: InlineCompletion | undefined, delayMs: number = 0): void {\n\t\tthis.returnValue = value ? [value] : [];\n\t\tthis.delayMs = delayMs;\n\t}\n\n\tpublic setReturnValues(values: InlineCompletion[], delayMs: number = 0): void {\n\t\tthis.returnValue = values;\n\t\tthis.delayMs = delayMs;\n\t}\n\n\tpublic getAndClearCallHistory() {\n\t\tconst history = [...this.callHistory];\n\t\tthis.callHistory = [];\n\t\treturn history;\n\t}\n\n\tpublic assertNotCalledTwiceWithin50ms() {\n\t\tif (this.calledTwiceIn50Ms) {\n\t\t\tthrow new Error('provideInlineCompletions has been called at least twice within 50ms. This should not happen.');\n\t\t}\n\t}\n\n\tprivate lastTimeMs: number | undefined = undefined;\n\n\tasync provideInlineCompletions(model: ITextModel, position: Position, context: InlineCompletionContext, token: CancellationToken) {\n\t\tconst currentTimeMs = new Date().getTime();\n\t\tif (this.lastTimeMs && currentTimeMs - this.lastTimeMs < 50) {\n\t\t\tthis.calledTwiceIn50Ms = true;\n\t\t}\n\t\tthis.lastTimeMs = currentTimeMs;\n\n\t\tthis.callHistory.push({\n\t\t\tposition: position.toString(),\n\t\t\ttriggerKind: context.triggerKind,\n\t\t\ttext: model.getValue()\n\t\t});\n\t\tconst result = new Array<InlineCompletion>();\n\t\tresult.push(...this.returnValue);\n\n\t\tif (this.delayMs > 0) {\n\t\t\tawait timeout(this.delayMs);\n\t\t}\n\n\t\treturn { items: result };\n\t}\n\tfreeInlineCompletions() { }\n\thandleItemDidShow() { }\n}\n\nexport class GhostTextContext extends Disposable {\n\tpublic readonly prettyViewStates = new Array<string | undefined>();\n\tprivate _currentPrettyViewState: string | undefined;\n\tpublic get currentPrettyViewState() {\n\t\treturn this._currentPrettyViewState;\n\t}\n\n\tconstructor(model: InlineCompletionsModel, private readonly editor: ITestCodeEditor) {\n\t\tsuper();\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update */\n\t\t\tconst ghostText = model.ghostText.read(reader);\n\t\t\tlet view: string | undefined;\n\t\t\tif (ghostText) {\n\t\t\t\tview = ghostText.render(this.editor.getValue(), true);\n\t\t\t} else {\n\t\t\t\tview = this.editor.getValue();\n\t\t\t}\n\n\t\t\tif (this._currentPrettyViewState !== view) {\n\t\t\t\tthis.prettyViewStates.push(view);\n\t\t\t}\n\t\t\tthis._currentPrettyViewState = view;\n\t\t}));\n\t}\n\n\tpublic getAndClearViewStates(): (string | undefined)[] {\n\t\tconst arr = [...this.prettyViewStates];\n\t\tthis.prettyViewStates.length = 0;\n\t\treturn arr;\n\t}\n\n\tpublic keyboardType(text: string): void {\n\t\tthis.editor.trigger('keyboard', 'type', { text });\n\t}\n\n\tpublic cursorUp(): void {\n\t\tCoreNavigationCommands.CursorUp.runEditorCommand(null, this.editor, null);\n\t}\n\n\tpublic cursorRight(): void {\n\t\tCoreNavigationCommands.CursorRight.runEditorCommand(null, this.editor, null);\n\t}\n\n\tpublic cursorLeft(): void {\n\t\tCoreNavigationCommands.CursorLeft.runEditorCommand(null, this.editor, null);\n\t}\n\n\tpublic cursorDown(): void {\n\t\tCoreNavigationCommands.CursorDown.runEditorCommand(null, this.editor, null);\n\t}\n\n\tpublic cursorLineEnd(): void {\n\t\tCoreNavigationCommands.CursorLineEnd.runEditorCommand(null, this.editor, null);\n\t}\n\n\tpublic leftDelete(): void {\n\t\tCoreEditingCommands.DeleteLeft.runEditorCommand(null, this.editor, null);\n\t}\n}\n"]}