{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/colorPicker/browser/defaultDocumentColorProvider.ts"],"names":[],"mappings":"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","file":"defaultDocumentColorProvider.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Color, RGBA } from 'vs/base/common/color';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { DocumentColorProvider, IColor, IColorInformation, IColorPresentation } from 'vs/editor/common/languages';\nimport { EditorWorkerClient } from 'vs/editor/browser/services/editorWorkerService';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { registerEditorFeature } from 'vs/editor/common/editorFeatures';\n\nexport class DefaultDocumentColorProvider implements DocumentColorProvider {\n\n\tprivate _editorWorkerClient: EditorWorkerClient;\n\n\tconstructor(\n\t\tmodelService: IModelService,\n\t\tlanguageConfigurationService: ILanguageConfigurationService,\n\t) {\n\t\tthis._editorWorkerClient = new EditorWorkerClient(modelService, false, 'editorWorkerService', languageConfigurationService);\n\t}\n\n\tasync provideDocumentColors(model: ITextModel, _token: CancellationToken): Promise<IColorInformation[] | null> {\n\t\treturn this._editorWorkerClient.computeDefaultDocumentColors(model.uri);\n\t}\n\n\tprovideColorPresentations(_model: ITextModel, colorInfo: IColorInformation, _token: CancellationToken): IColorPresentation[] {\n\t\tconst range = colorInfo.range;\n\t\tconst colorFromInfo: IColor = colorInfo.color;\n\t\tconst alpha = colorFromInfo.alpha;\n\t\tconst color = new Color(new RGBA(Math.round(255 * colorFromInfo.red), Math.round(255 * colorFromInfo.green), Math.round(255 * colorFromInfo.blue), alpha));\n\n\t\tconst rgb = alpha ? Color.Format.CSS.formatRGB(color) : Color.Format.CSS.formatRGBA(color);\n\t\tconst hsl = alpha ? Color.Format.CSS.formatHSL(color) : Color.Format.CSS.formatHSLA(color);\n\t\tconst hex = alpha ? Color.Format.CSS.formatHex(color) : Color.Format.CSS.formatHexA(color);\n\n\t\tconst colorPresentations: IColorPresentation[] = [];\n\t\tcolorPresentations.push({ label: rgb, textEdit: { range: range, text: rgb } });\n\t\tcolorPresentations.push({ label: hsl, textEdit: { range: range, text: hsl } });\n\t\tcolorPresentations.push({ label: hex, textEdit: { range: range, text: hex } });\n\t\treturn colorPresentations;\n\t}\n}\n\nclass DefaultDocumentColorProviderFeature extends Disposable {\n\tconstructor(\n\t\t@IModelService _modelService: IModelService,\n\t\t@ILanguageConfigurationService _languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILanguageFeaturesService _languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\t\tthis._register(_languageFeaturesService.colorProvider.register('*', new DefaultDocumentColorProvider(_modelService, _languageConfigurationService)));\n\t}\n}\n\nregisterEditorFeature(DefaultDocumentColorProviderFeature);\n"]}