{"version":3,"sources":["vs/editor/contrib/quickAccess/browser/gotoSymbolQuickAccess.ts"],"names":[],"mappings":"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","file":"gotoSymbolQuickAccess.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DeferredPromise } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { IMatch } from 'vs/base/common/filters';\nimport { IPreparedQuery, pieceToQuery, prepareQuery, scoreFuzzy2 } from 'vs/base/common/fuzzyScorer';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { format, trim } from 'vs/base/common/strings';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { DocumentSymbol, SymbolKind, SymbolKinds, SymbolTag, getAriaLabelForSymbol } from 'vs/editor/common/languages';\nimport { IOutlineModelService } from 'vs/editor/contrib/documentSymbols/browser/outlineModel';\nimport { AbstractEditorNavigationQuickAccessProvider, IEditorNavigationQuickAccessOptions, IQuickAccessTextEditorContext } from 'vs/editor/contrib/quickAccess/browser/editorNavigationQuickAccess';\nimport { localize } from 'vs/nls';\nimport { IQuickInputButton, IQuickPick, IQuickPickItem, IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { Position } from 'vs/editor/common/core/position';\nimport { findLast } from 'vs/base/common/arraysFind';\n\nexport interface IGotoSymbolQuickPickItem extends IQuickPickItem {\n\tkind: SymbolKind;\n\tindex: number;\n\tscore?: number;\n\trange?: { decoration: IRange; selection: IRange };\n}\n\nexport interface IGotoSymbolQuickAccessProviderOptions extends IEditorNavigationQuickAccessOptions {\n\topenSideBySideDirection?: () => undefined | 'right' | 'down';\n}\n\nexport abstract class AbstractGotoSymbolQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {\n\n\tstatic PREFIX = '@';\n\tstatic SCOPE_PREFIX = ':';\n\tstatic PREFIX_BY_CATEGORY = `${AbstractGotoSymbolQuickAccessProvider.PREFIX}${AbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX}`;\n\n\tprotected override readonly options: IGotoSymbolQuickAccessProviderOptions;\n\n\tconstructor(\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IOutlineModelService private readonly _outlineModelService: IOutlineModelService,\n\t\toptions: IGotoSymbolQuickAccessProviderOptions = Object.create(null)\n\t) {\n\t\tsuper(options);\n\n\t\tthis.options = options;\n\t\tthis.options.canAcceptInBackground = true;\n\t}\n\n\tprotected provideWithoutTextEditor(picker: IQuickPick<IGotoSymbolQuickPickItem>): IDisposable {\n\t\tthis.provideLabelPick(picker, localize('cannotRunGotoSymbolWithoutEditor', \"To go to a symbol, first open a text editor with symbol information.\"));\n\n\t\treturn Disposable.None;\n\t}\n\n\tprotected provideWithTextEditor(context: IQuickAccessTextEditorContext, picker: IQuickPick<IGotoSymbolQuickPickItem>, token: CancellationToken): IDisposable {\n\t\tconst editor = context.editor;\n\t\tconst model = this.getModel(editor);\n\t\tif (!model) {\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\t// Provide symbols from model if available in registry\n\t\tif (this._languageFeaturesService.documentSymbolProvider.has(model)) {\n\t\t\treturn this.doProvideWithEditorSymbols(context, model, picker, token);\n\t\t}\n\n\t\t// Otherwise show an entry for a model without registry\n\t\t// But give a chance to resolve the symbols at a later\n\t\t// point if possible\n\t\treturn this.doProvideWithoutEditorSymbols(context, model, picker, token);\n\t}\n\n\tprivate doProvideWithoutEditorSymbols(context: IQuickAccessTextEditorContext, model: ITextModel, picker: IQuickPick<IGotoSymbolQuickPickItem>, token: CancellationToken): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Generic pick for not having any symbol information\n\t\tthis.provideLabelPick(picker, localize('cannotRunGotoSymbolWithoutSymbolProvider', \"The active text editor does not provide symbol information.\"));\n\n\t\t// Wait for changes to the registry and see if eventually\n\t\t// we do get symbols. This can happen if the picker is opened\n\t\t// very early after the model has loaded but before the\n\t\t// language registry is ready.\n\t\t// https://github.com/microsoft/vscode/issues/70607\n\t\t(async () => {\n\t\t\tconst result = await this.waitForLanguageSymbolRegistry(model, disposables);\n\t\t\tif (!result || token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdisposables.add(this.doProvideWithEditorSymbols(context, model, picker, token));\n\t\t})();\n\n\t\treturn disposables;\n\t}\n\n\tprivate provideLabelPick(picker: IQuickPick<IGotoSymbolQuickPickItem>, label: string): void {\n\t\tpicker.items = [{ label, index: 0, kind: SymbolKind.String }];\n\t\tpicker.ariaLabel = label;\n\t}\n\n\tprotected async waitForLanguageSymbolRegistry(model: ITextModel, disposables: DisposableStore): Promise<boolean> {\n\t\tif (this._languageFeaturesService.documentSymbolProvider.has(model)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst symbolProviderRegistryPromise = new DeferredPromise<boolean>();\n\n\t\t// Resolve promise when registry knows model\n\t\tconst symbolProviderListener = disposables.add(this._languageFeaturesService.documentSymbolProvider.onDidChange(() => {\n\t\t\tif (this._languageFeaturesService.documentSymbolProvider.has(model)) {\n\t\t\t\tsymbolProviderListener.dispose();\n\n\t\t\t\tsymbolProviderRegistryPromise.complete(true);\n\t\t\t}\n\t\t}));\n\n\t\t// Resolve promise when we get disposed too\n\t\tdisposables.add(toDisposable(() => symbolProviderRegistryPromise.complete(false)));\n\n\t\treturn symbolProviderRegistryPromise.p;\n\t}\n\n\tprivate doProvideWithEditorSymbols(context: IQuickAccessTextEditorContext, model: ITextModel, picker: IQuickPick<IGotoSymbolQuickPickItem>, token: CancellationToken): IDisposable {\n\t\tconst editor = context.editor;\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Goto symbol once picked\n\t\tdisposables.add(picker.onDidAccept(event => {\n\t\t\tconst [item] = picker.selectedItems;\n\t\t\tif (item && item.range) {\n\t\t\t\tthis.gotoLocation(context, { range: item.range.selection, keyMods: picker.keyMods, preserveFocus: event.inBackground });\n\n\t\t\t\tif (!event.inBackground) {\n\t\t\t\t\tpicker.hide();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Goto symbol side by side if enabled\n\t\tdisposables.add(picker.onDidTriggerItemButton(({ item }) => {\n\t\t\tif (item && item.range) {\n\t\t\t\tthis.gotoLocation(context, { range: item.range.selection, keyMods: picker.keyMods, forceSideBySide: true });\n\n\t\t\t\tpicker.hide();\n\t\t\t}\n\t\t}));\n\n\t\t// Resolve symbols from document once and reuse this\n\t\t// request for all filtering and typing then on\n\t\tconst symbolsPromise = this.getDocumentSymbols(model, token);\n\n\t\t// Set initial picks and update on type\n\t\tlet picksCts: CancellationTokenSource | undefined = undefined;\n\t\tconst updatePickerItems = async (positionToEnclose: Position | undefined) => {\n\n\t\t\t// Cancel any previous ask for picks and busy\n\t\t\tpicksCts?.dispose(true);\n\t\t\tpicker.busy = false;\n\n\t\t\t// Create new cancellation source for this run\n\t\t\tpicksCts = new CancellationTokenSource(token);\n\n\t\t\t// Collect symbol picks\n\t\t\tpicker.busy = true;\n\t\t\ttry {\n\t\t\t\tconst query = prepareQuery(picker.value.substr(AbstractGotoSymbolQuickAccessProvider.PREFIX.length).trim());\n\t\t\t\tconst items = await this.doGetSymbolPicks(symbolsPromise, query, undefined, picksCts.token);\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (items.length > 0) {\n\t\t\t\t\tpicker.items = items;\n\t\t\t\t\tif (positionToEnclose && query.original.length === 0) {\n\t\t\t\t\t\tconst candidate = <IGotoSymbolQuickPickItem>findLast(items, item => Boolean(item.type !== 'separator' && item.range && Range.containsPosition(item.range.decoration, positionToEnclose)));\n\t\t\t\t\t\tif (candidate) {\n\t\t\t\t\t\t\tpicker.activeItems = [candidate];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tif (query.original.length > 0) {\n\t\t\t\t\t\tthis.provideLabelPick(picker, localize('noMatchingSymbolResults', \"No matching editor symbols\"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.provideLabelPick(picker, localize('noSymbolResults', \"No editor symbols\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (!token.isCancellationRequested) {\n\t\t\t\t\tpicker.busy = false;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tdisposables.add(picker.onDidChangeValue(() => updatePickerItems(undefined)));\n\t\tupdatePickerItems(editor.getSelection()?.getPosition());\n\n\n\t\t// Reveal and decorate when active item changes\n\t\tdisposables.add(picker.onDidChangeActive(() => {\n\t\t\tconst [item] = picker.activeItems;\n\t\t\tif (item && item.range) {\n\n\t\t\t\t// Reveal\n\t\t\t\teditor.revealRangeInCenter(item.range.selection, ScrollType.Smooth);\n\n\t\t\t\t// Decorate\n\t\t\t\tthis.addDecorations(editor, item.range.decoration);\n\t\t\t}\n\t\t}));\n\n\t\treturn disposables;\n\t}\n\n\tprotected async doGetSymbolPicks(symbolsPromise: Promise<DocumentSymbol[]>, query: IPreparedQuery, options: { extraContainerLabel?: string } | undefined, token: CancellationToken): Promise<Array<IGotoSymbolQuickPickItem | IQuickPickSeparator>> {\n\t\tconst symbols = await symbolsPromise;\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst filterBySymbolKind = query.original.indexOf(AbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX) === 0;\n\t\tconst filterPos = filterBySymbolKind ? 1 : 0;\n\n\t\t// Split between symbol and container query\n\t\tlet symbolQuery: IPreparedQuery;\n\t\tlet containerQuery: IPreparedQuery | undefined;\n\t\tif (query.values && query.values.length > 1) {\n\t\t\tsymbolQuery = pieceToQuery(query.values[0]); \t\t  // symbol: only match on first part\n\t\t\tcontainerQuery = pieceToQuery(query.values.slice(1)); // container: match on all but first parts\n\t\t} else {\n\t\t\tsymbolQuery = query;\n\t\t}\n\n\t\t// Convert to symbol picks and apply filtering\n\n\t\tlet buttons: IQuickInputButton[] | undefined;\n\t\tconst openSideBySideDirection = this.options?.openSideBySideDirection?.();\n\t\tif (openSideBySideDirection) {\n\t\t\tbuttons = [{\n\t\t\t\ticonClass: openSideBySideDirection === 'right' ? ThemeIcon.asClassName(Codicon.splitHorizontal) : ThemeIcon.asClassName(Codicon.splitVertical),\n\t\t\t\ttooltip: openSideBySideDirection === 'right' ? localize('openToSide', \"Open to the Side\") : localize('openToBottom', \"Open to the Bottom\")\n\t\t\t}];\n\t\t}\n\n\t\tconst filteredSymbolPicks: IGotoSymbolQuickPickItem[] = [];\n\t\tfor (let index = 0; index < symbols.length; index++) {\n\t\t\tconst symbol = symbols[index];\n\n\t\t\tconst symbolLabel = trim(symbol.name);\n\t\t\tconst symbolLabelWithIcon = `$(${SymbolKinds.toIcon(symbol.kind).id}) ${symbolLabel}`;\n\t\t\tconst symbolLabelIconOffset = symbolLabelWithIcon.length - symbolLabel.length;\n\n\t\t\tlet containerLabel = symbol.containerName;\n\t\t\tif (options?.extraContainerLabel) {\n\t\t\t\tif (containerLabel) {\n\t\t\t\t\tcontainerLabel = `${options.extraContainerLabel} • ${containerLabel}`;\n\t\t\t\t} else {\n\t\t\t\t\tcontainerLabel = options.extraContainerLabel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet symbolScore: number | undefined = undefined;\n\t\t\tlet symbolMatches: IMatch[] | undefined = undefined;\n\n\t\t\tlet containerScore: number | undefined = undefined;\n\t\t\tlet containerMatches: IMatch[] | undefined = undefined;\n\n\t\t\tif (query.original.length > filterPos) {\n\n\t\t\t\t// First: try to score on the entire query, it is possible that\n\t\t\t\t// the symbol matches perfectly (e.g. searching for \"change log\"\n\t\t\t\t// can be a match on a markdown symbol \"change log\"). In that\n\t\t\t\t// case we want to skip the container query altogether.\n\t\t\t\tlet skipContainerQuery = false;\n\t\t\t\tif (symbolQuery !== query) {\n\t\t\t\t\t[symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, { ...query, values: undefined /* disable multi-query support */ }, filterPos, symbolLabelIconOffset);\n\t\t\t\t\tif (typeof symbolScore === 'number') {\n\t\t\t\t\t\tskipContainerQuery = true; // since we consumed the query, skip any container matching\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Otherwise: score on the symbol query and match on the container later\n\t\t\t\tif (typeof symbolScore !== 'number') {\n\t\t\t\t\t[symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, symbolQuery, filterPos, symbolLabelIconOffset);\n\t\t\t\t\tif (typeof symbolScore !== 'number') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Score by container if specified\n\t\t\t\tif (!skipContainerQuery && containerQuery) {\n\t\t\t\t\tif (containerLabel && containerQuery.original.length > 0) {\n\t\t\t\t\t\t[containerScore, containerMatches] = scoreFuzzy2(containerLabel, containerQuery);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof containerScore !== 'number') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof symbolScore === 'number') {\n\t\t\t\t\t\tsymbolScore += containerScore; // boost symbolScore by containerScore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst deprecated = symbol.tags && symbol.tags.indexOf(SymbolTag.Deprecated) >= 0;\n\n\t\t\tfilteredSymbolPicks.push({\n\t\t\t\tindex,\n\t\t\t\tkind: symbol.kind,\n\t\t\t\tscore: symbolScore,\n\t\t\t\tlabel: symbolLabelWithIcon,\n\t\t\t\tariaLabel: getAriaLabelForSymbol(symbol.name, symbol.kind),\n\t\t\t\tdescription: containerLabel,\n\t\t\t\thighlights: deprecated ? undefined : {\n\t\t\t\t\tlabel: symbolMatches,\n\t\t\t\t\tdescription: containerMatches\n\t\t\t\t},\n\t\t\t\trange: {\n\t\t\t\t\tselection: Range.collapseToStart(symbol.selectionRange),\n\t\t\t\t\tdecoration: symbol.range\n\t\t\t\t},\n\t\t\t\tstrikethrough: deprecated,\n\t\t\t\tbuttons\n\t\t\t});\n\t\t}\n\n\t\t// Sort by score\n\t\tconst sortedFilteredSymbolPicks = filteredSymbolPicks.sort((symbolA, symbolB) => filterBySymbolKind ?\n\t\t\tthis.compareByKindAndScore(symbolA, symbolB) :\n\t\t\tthis.compareByScore(symbolA, symbolB)\n\t\t);\n\n\t\t// Add separator for types\n\t\t// - @  only total number of symbols\n\t\t// - @: grouped by symbol kind\n\t\tlet symbolPicks: Array<IGotoSymbolQuickPickItem | IQuickPickSeparator> = [];\n\t\tif (filterBySymbolKind) {\n\t\t\tlet lastSymbolKind: SymbolKind | undefined = undefined;\n\t\t\tlet lastSeparator: IQuickPickSeparator | undefined = undefined;\n\t\t\tlet lastSymbolKindCounter = 0;\n\n\t\t\tfunction updateLastSeparatorLabel(): void {\n\t\t\t\tif (lastSeparator && typeof lastSymbolKind === 'number' && lastSymbolKindCounter > 0) {\n\t\t\t\t\tlastSeparator.label = format(NLS_SYMBOL_KIND_CACHE[lastSymbolKind] || FALLBACK_NLS_SYMBOL_KIND, lastSymbolKindCounter);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const symbolPick of sortedFilteredSymbolPicks) {\n\n\t\t\t\t// Found new kind\n\t\t\t\tif (lastSymbolKind !== symbolPick.kind) {\n\n\t\t\t\t\t// Update last separator with number of symbols we found for kind\n\t\t\t\t\tupdateLastSeparatorLabel();\n\n\t\t\t\t\tlastSymbolKind = symbolPick.kind;\n\t\t\t\t\tlastSymbolKindCounter = 1;\n\n\t\t\t\t\t// Add new separator for new kind\n\t\t\t\t\tlastSeparator = { type: 'separator' };\n\t\t\t\t\tsymbolPicks.push(lastSeparator);\n\t\t\t\t}\n\n\t\t\t\t// Existing kind, keep counting\n\t\t\t\telse {\n\t\t\t\t\tlastSymbolKindCounter++;\n\t\t\t\t}\n\n\t\t\t\t// Add to final result\n\t\t\t\tsymbolPicks.push(symbolPick);\n\t\t\t}\n\n\t\t\t// Update last separator with number of symbols we found for kind\n\t\t\tupdateLastSeparatorLabel();\n\t\t} else if (sortedFilteredSymbolPicks.length > 0) {\n\t\t\tsymbolPicks = [\n\t\t\t\t{ label: localize('symbols', \"symbols ({0})\", filteredSymbolPicks.length), type: 'separator' },\n\t\t\t\t...sortedFilteredSymbolPicks\n\t\t\t];\n\t\t}\n\n\t\treturn symbolPicks;\n\t}\n\n\tprivate compareByScore(symbolA: IGotoSymbolQuickPickItem, symbolB: IGotoSymbolQuickPickItem): number {\n\t\tif (typeof symbolA.score !== 'number' && typeof symbolB.score === 'number') {\n\t\t\treturn 1;\n\t\t} else if (typeof symbolA.score === 'number' && typeof symbolB.score !== 'number') {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (typeof symbolA.score === 'number' && typeof symbolB.score === 'number') {\n\t\t\tif (symbolA.score > symbolB.score) {\n\t\t\t\treturn -1;\n\t\t\t} else if (symbolA.score < symbolB.score) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\n\t\tif (symbolA.index < symbolB.index) {\n\t\t\treturn -1;\n\t\t} else if (symbolA.index > symbolB.index) {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tprivate compareByKindAndScore(symbolA: IGotoSymbolQuickPickItem, symbolB: IGotoSymbolQuickPickItem): number {\n\t\tconst kindA = NLS_SYMBOL_KIND_CACHE[symbolA.kind] || FALLBACK_NLS_SYMBOL_KIND;\n\t\tconst kindB = NLS_SYMBOL_KIND_CACHE[symbolB.kind] || FALLBACK_NLS_SYMBOL_KIND;\n\n\t\t// Sort by type first if scoped search\n\t\tconst result = kindA.localeCompare(kindB);\n\t\tif (result === 0) {\n\t\t\treturn this.compareByScore(symbolA, symbolB);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected async getDocumentSymbols(document: ITextModel, token: CancellationToken): Promise<DocumentSymbol[]> {\n\t\tconst model = await this._outlineModelService.getOrCreate(document, token);\n\t\treturn token.isCancellationRequested ? [] : model.asListOfDocumentSymbols();\n\t}\n}\n\n// #region NLS Helpers\n\nconst FALLBACK_NLS_SYMBOL_KIND = localize('property', \"properties ({0})\");\nconst NLS_SYMBOL_KIND_CACHE: { [type: number]: string } = {\n\t[SymbolKind.Method]: localize('method', \"methods ({0})\"),\n\t[SymbolKind.Function]: localize('function', \"functions ({0})\"),\n\t[SymbolKind.Constructor]: localize('_constructor', \"constructors ({0})\"),\n\t[SymbolKind.Variable]: localize('variable', \"variables ({0})\"),\n\t[SymbolKind.Class]: localize('class', \"classes ({0})\"),\n\t[SymbolKind.Struct]: localize('struct', \"structs ({0})\"),\n\t[SymbolKind.Event]: localize('event', \"events ({0})\"),\n\t[SymbolKind.Operator]: localize('operator', \"operators ({0})\"),\n\t[SymbolKind.Interface]: localize('interface', \"interfaces ({0})\"),\n\t[SymbolKind.Namespace]: localize('namespace', \"namespaces ({0})\"),\n\t[SymbolKind.Package]: localize('package', \"packages ({0})\"),\n\t[SymbolKind.TypeParameter]: localize('typeParameter', \"type parameters ({0})\"),\n\t[SymbolKind.Module]: localize('modules', \"modules ({0})\"),\n\t[SymbolKind.Property]: localize('property', \"properties ({0})\"),\n\t[SymbolKind.Enum]: localize('enum', \"enumerations ({0})\"),\n\t[SymbolKind.EnumMember]: localize('enumMember', \"enumeration members ({0})\"),\n\t[SymbolKind.String]: localize('string', \"strings ({0})\"),\n\t[SymbolKind.File]: localize('file', \"files ({0})\"),\n\t[SymbolKind.Array]: localize('array', \"arrays ({0})\"),\n\t[SymbolKind.Number]: localize('number', \"numbers ({0})\"),\n\t[SymbolKind.Boolean]: localize('boolean', \"booleans ({0})\"),\n\t[SymbolKind.Object]: localize('object', \"objects ({0})\"),\n\t[SymbolKind.Key]: localize('key', \"keys ({0})\"),\n\t[SymbolKind.Field]: localize('field', \"fields ({0})\"),\n\t[SymbolKind.Constant]: localize('constant', \"constants ({0})\")\n};\n\n//#endregion\n"]}