{"version":3,"sources":["vs/editor/contrib/clipboard/browser/clipboard.ts"],"names":[],"mappings":"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","file":"clipboard.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from 'vs/base/browser/browser';\nimport { getActiveDocument } from 'vs/base/browser/dom';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport * as platform from 'vs/base/common/platform';\nimport { CopyOptions, InMemoryClipboardMetadataManager } from 'vs/editor/browser/controller/textAreaInput';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { Command, EditorAction, MultiCommand, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { Handler } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport * as nls from 'vs/nls';\nimport { MenuId, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\n\nconst CLIPBOARD_CONTEXT_MENU_GROUP = '9_cutcopypaste';\n\nconst supportsCut = (platform.isNative || document.queryCommandSupported('cut'));\nconst supportsCopy = (platform.isNative || document.queryCommandSupported('copy'));\n// Firefox only supports navigator.clipboard.readText() in browser extensions.\n// See https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/readText#Browser_compatibility\n// When loading over http, navigator.clipboard can be undefined. See https://github.com/microsoft/monaco-editor/issues/2313\nconst supportsPaste = (typeof navigator.clipboard === 'undefined' || browser.isFirefox) ? document.queryCommandSupported('paste') : true;\n\nfunction registerCommand<T extends Command>(command: T): T {\n\tcommand.register();\n\treturn command;\n}\n\nexport const CutAction = supportsCut ? registerCommand(new MultiCommand({\n\tid: 'editor.action.clipboardCutAction',\n\tprecondition: undefined,\n\tkbOpts: (\n\t\t// Do not bind cut keybindings in the browser,\n\t\t// since browsers do that for us and it avoids security prompts\n\t\tplatform.isNative ? {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyX,\n\t\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.KeyX, secondary: [KeyMod.Shift | KeyCode.Delete] },\n\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t} : undefined\n\t),\n\tmenuOpts: [{\n\t\tmenuId: MenuId.MenubarEditMenu,\n\t\tgroup: '2_ccp',\n\t\ttitle: nls.localize({ key: 'miCut', comment: ['&& denotes a mnemonic'] }, \"Cu&&t\"),\n\t\torder: 1\n\t}, {\n\t\tmenuId: MenuId.EditorContext,\n\t\tgroup: CLIPBOARD_CONTEXT_MENU_GROUP,\n\t\ttitle: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\n\t\twhen: EditorContextKeys.writable,\n\t\torder: 1,\n\t}, {\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\n\t\torder: 1\n\t}, {\n\t\tmenuId: MenuId.SimpleEditorContext,\n\t\tgroup: CLIPBOARD_CONTEXT_MENU_GROUP,\n\t\ttitle: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\n\t\twhen: EditorContextKeys.writable,\n\t\torder: 1,\n\t}]\n})) : undefined;\n\nexport const CopyAction = supportsCopy ? registerCommand(new MultiCommand({\n\tid: 'editor.action.clipboardCopyAction',\n\tprecondition: undefined,\n\tkbOpts: (\n\t\t// Do not bind copy keybindings in the browser,\n\t\t// since browsers do that for us and it avoids security prompts\n\t\tplatform.isNative ? {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyC,\n\t\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.KeyC, secondary: [KeyMod.CtrlCmd | KeyCode.Insert] },\n\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t} : undefined\n\t),\n\tmenuOpts: [{\n\t\tmenuId: MenuId.MenubarEditMenu,\n\t\tgroup: '2_ccp',\n\t\ttitle: nls.localize({ key: 'miCopy', comment: ['&& denotes a mnemonic'] }, \"&&Copy\"),\n\t\torder: 2\n\t}, {\n\t\tmenuId: MenuId.EditorContext,\n\t\tgroup: CLIPBOARD_CONTEXT_MENU_GROUP,\n\t\ttitle: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\n\t\torder: 2,\n\t}, {\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\n\t\torder: 1\n\t}, {\n\t\tmenuId: MenuId.SimpleEditorContext,\n\t\tgroup: CLIPBOARD_CONTEXT_MENU_GROUP,\n\t\ttitle: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\n\t\torder: 2,\n\t}]\n})) : undefined;\n\nMenuRegistry.appendMenuItem(MenuId.MenubarEditMenu, { submenu: MenuId.MenubarCopy, title: { value: nls.localize('copy as', \"Copy As\"), original: 'Copy As', }, group: '2_ccp', order: 3 });\nMenuRegistry.appendMenuItem(MenuId.EditorContext, { submenu: MenuId.EditorContextCopy, title: { value: nls.localize('copy as', \"Copy As\"), original: 'Copy As', }, group: CLIPBOARD_CONTEXT_MENU_GROUP, order: 3 });\nMenuRegistry.appendMenuItem(MenuId.EditorContext, { submenu: MenuId.EditorContextShare, title: { value: nls.localize('share', \"Share\"), original: 'Share', }, group: '11_share', order: -1, when: ContextKeyExpr.and(ContextKeyExpr.notEquals('resourceScheme', 'output'), EditorContextKeys.editorTextFocus) });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { submenu: MenuId.EditorTitleContextShare, title: { value: nls.localize('share', \"Share\"), original: 'Share', }, group: '11_share', order: -1 });\nMenuRegistry.appendMenuItem(MenuId.ExplorerContext, { submenu: MenuId.ExplorerContextShare, title: { value: nls.localize('share', \"Share\"), original: 'Share', }, group: '11_share', order: -1 });\n\nexport const PasteAction = supportsPaste ? registerCommand(new MultiCommand({\n\tid: 'editor.action.clipboardPasteAction',\n\tprecondition: undefined,\n\tkbOpts: (\n\t\t// Do not bind paste keybindings in the browser,\n\t\t// since browsers do that for us and it avoids security prompts\n\t\tplatform.isNative ? {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyV,\n\t\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.KeyV, secondary: [KeyMod.Shift | KeyCode.Insert] },\n\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyCode.KeyV, secondary: [KeyMod.Shift | KeyCode.Insert] },\n\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t} : undefined\n\t),\n\tmenuOpts: [{\n\t\tmenuId: MenuId.MenubarEditMenu,\n\t\tgroup: '2_ccp',\n\t\ttitle: nls.localize({ key: 'miPaste', comment: ['&& denotes a mnemonic'] }, \"&&Paste\"),\n\t\torder: 4\n\t}, {\n\t\tmenuId: MenuId.EditorContext,\n\t\tgroup: CLIPBOARD_CONTEXT_MENU_GROUP,\n\t\ttitle: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\n\t\twhen: EditorContextKeys.writable,\n\t\torder: 4,\n\t}, {\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\n\t\torder: 1\n\t}, {\n\t\tmenuId: MenuId.SimpleEditorContext,\n\t\tgroup: CLIPBOARD_CONTEXT_MENU_GROUP,\n\t\ttitle: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\n\t\twhen: EditorContextKeys.writable,\n\t\torder: 4,\n\t}]\n})) : undefined;\n\nclass ExecCommandCopyWithSyntaxHighlightingAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.clipboardCopyWithSyntaxHighlightingAction',\n\t\t\tlabel: nls.localize('actions.clipboard.copyWithSyntaxHighlightingLabel', \"Copy With Syntax Highlighting\"),\n\t\t\talias: 'Copy With Syntax Highlighting',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst emptySelectionClipboard = editor.getOption(EditorOption.emptySelectionClipboard);\n\n\t\tif (!emptySelectionClipboard && editor.getSelection().isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tCopyOptions.forceCopyWithSyntaxHighlighting = true;\n\t\teditor.focus();\n\t\teditor.getContainerDomNode().ownerDocument.execCommand('copy');\n\t\tCopyOptions.forceCopyWithSyntaxHighlighting = false;\n\t}\n}\n\nfunction registerExecCommandImpl(target: MultiCommand | undefined, browserCommand: 'cut' | 'copy'): void {\n\tif (!target) {\n\t\treturn;\n\t}\n\n\t// 1. handle case when focus is in editor.\n\ttarget.addImplementation(10000, 'code-editor', (accessor: ServicesAccessor, args: any) => {\n\t\t// Only if editor text focus (i.e. not if editor has widget focus).\n\t\tconst focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (focusedEditor && focusedEditor.hasTextFocus()) {\n\t\t\t// Do not execute if there is no selection and empty selection clipboard is off\n\t\t\tconst emptySelectionClipboard = focusedEditor.getOption(EditorOption.emptySelectionClipboard);\n\t\t\tconst selection = focusedEditor.getSelection();\n\t\t\tif (selection && selection.isEmpty() && !emptySelectionClipboard) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tfocusedEditor.getContainerDomNode().ownerDocument.execCommand(browserCommand);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n\n\t// 2. (default) handle case when focus is somewhere else.\n\ttarget.addImplementation(0, 'generic-dom', (accessor: ServicesAccessor, args: any) => {\n\t\tgetActiveDocument().execCommand(browserCommand);\n\t\treturn true;\n\t});\n}\n\nregisterExecCommandImpl(CutAction, 'cut');\nregisterExecCommandImpl(CopyAction, 'copy');\n\nif (PasteAction) {\n\t// 1. Paste: handle case when focus is in editor.\n\tPasteAction.addImplementation(10000, 'code-editor', (accessor: ServicesAccessor, args: any) => {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\n\t\t// Only if editor text focus (i.e. not if editor has widget focus).\n\t\tconst focusedEditor = codeEditorService.getFocusedCodeEditor();\n\t\tif (focusedEditor && focusedEditor.hasTextFocus()) {\n\t\t\tconst result = focusedEditor.getContainerDomNode().ownerDocument.execCommand('paste');\n\t\t\t// Use the clipboard service if document.execCommand('paste') was not successful\n\t\t\tif (!result && platform.isWeb) {\n\t\t\t\treturn (async () => {\n\t\t\t\t\tconst clipboardText = await clipboardService.readText();\n\t\t\t\t\tif (clipboardText !== '') {\n\t\t\t\t\t\tconst metadata = InMemoryClipboardMetadataManager.INSTANCE.get(clipboardText);\n\t\t\t\t\t\tlet pasteOnNewLine = false;\n\t\t\t\t\t\tlet multicursorText: string[] | null = null;\n\t\t\t\t\t\tlet mode: string | null = null;\n\t\t\t\t\t\tif (metadata) {\n\t\t\t\t\t\t\tpasteOnNewLine = (focusedEditor.getOption(EditorOption.emptySelectionClipboard) && !!metadata.isFromEmptySelection);\n\t\t\t\t\t\t\tmulticursorText = (typeof metadata.multicursorText !== 'undefined' ? metadata.multicursorText : null);\n\t\t\t\t\t\t\tmode = metadata.mode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfocusedEditor.trigger('keyboard', Handler.Paste, {\n\t\t\t\t\t\t\ttext: clipboardText,\n\t\t\t\t\t\t\tpasteOnNewLine,\n\t\t\t\t\t\t\tmulticursorText,\n\t\t\t\t\t\t\tmode\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n\n\t// 2. Paste: (default) handle case when focus is somewhere else.\n\tPasteAction.addImplementation(0, 'generic-dom', (accessor: ServicesAccessor, args: any) => {\n\t\tgetActiveDocument().execCommand('paste');\n\t\treturn true;\n\t});\n}\n\nif (supportsCopy) {\n\tregisterEditorAction(ExecCommandCopyWithSyntaxHighlightingAction);\n}\n"]}