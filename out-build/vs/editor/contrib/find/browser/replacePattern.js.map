{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/find/browser/replacePattern.ts"],"names":[],"mappings":"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","file":"replacePattern.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { buildReplaceStringWithCasePreserved } from 'vs/base/common/search';\n\nconst enum ReplacePatternKind {\n\tStaticValue = 0,\n\tDynamicPieces = 1\n}\n\n/**\n * Assigned when the replace pattern is entirely static.\n */\nclass StaticValueReplacePattern {\n\tpublic readonly kind = ReplacePatternKind.StaticValue;\n\tconstructor(public readonly staticValue: string) { }\n}\n\n/**\n * Assigned when the replace pattern has replacement patterns.\n */\nclass DynamicPiecesReplacePattern {\n\tpublic readonly kind = ReplacePatternKind.DynamicPieces;\n\tconstructor(public readonly pieces: ReplacePiece[]) { }\n}\n\nexport class ReplacePattern {\n\n\tpublic static fromStaticValue(value: string): ReplacePattern {\n\t\treturn new ReplacePattern([ReplacePiece.staticValue(value)]);\n\t}\n\n\tprivate readonly _state: StaticValueReplacePattern | DynamicPiecesReplacePattern;\n\n\tpublic get hasReplacementPatterns(): boolean {\n\t\treturn (this._state.kind === ReplacePatternKind.DynamicPieces);\n\t}\n\n\tconstructor(pieces: ReplacePiece[] | null) {\n\t\tif (!pieces || pieces.length === 0) {\n\t\t\tthis._state = new StaticValueReplacePattern('');\n\t\t} else if (pieces.length === 1 && pieces[0].staticValue !== null) {\n\t\t\tthis._state = new StaticValueReplacePattern(pieces[0].staticValue);\n\t\t} else {\n\t\t\tthis._state = new DynamicPiecesReplacePattern(pieces);\n\t\t}\n\t}\n\n\tpublic buildReplaceString(matches: string[] | null, preserveCase?: boolean): string {\n\t\tif (this._state.kind === ReplacePatternKind.StaticValue) {\n\t\t\tif (preserveCase) {\n\t\t\t\treturn buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\n\t\t\t} else {\n\t\t\t\treturn this._state.staticValue;\n\t\t\t}\n\t\t}\n\n\t\tlet result = '';\n\t\tfor (let i = 0, len = this._state.pieces.length; i < len; i++) {\n\t\t\tconst piece = this._state.pieces[i];\n\t\t\tif (piece.staticValue !== null) {\n\t\t\t\t// static value ReplacePiece\n\t\t\t\tresult += piece.staticValue;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// match index ReplacePiece\n\t\t\tlet match: string = ReplacePattern._substitute(piece.matchIndex, matches);\n\t\t\tif (piece.caseOps !== null && piece.caseOps.length > 0) {\n\t\t\t\tconst repl: string[] = [];\n\t\t\t\tconst lenOps: number = piece.caseOps.length;\n\t\t\t\tlet opIdx: number = 0;\n\t\t\t\tfor (let idx: number = 0, len: number = match.length; idx < len; idx++) {\n\t\t\t\t\tif (opIdx >= lenOps) {\n\t\t\t\t\t\trepl.push(match.slice(idx));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tswitch (piece.caseOps[opIdx]) {\n\t\t\t\t\t\tcase 'U':\n\t\t\t\t\t\t\trepl.push(match[idx].toUpperCase());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'u':\n\t\t\t\t\t\t\trepl.push(match[idx].toUpperCase());\n\t\t\t\t\t\t\topIdx++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'L':\n\t\t\t\t\t\t\trepl.push(match[idx].toLowerCase());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\trepl.push(match[idx].toLowerCase());\n\t\t\t\t\t\t\topIdx++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\trepl.push(match[idx]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmatch = repl.join('');\n\t\t\t}\n\t\t\tresult += match;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _substitute(matchIndex: number, matches: string[] | null): string {\n\t\tif (matches === null) {\n\t\t\treturn '';\n\t\t}\n\t\tif (matchIndex === 0) {\n\t\t\treturn matches[0];\n\t\t}\n\n\t\tlet remainder = '';\n\t\twhile (matchIndex > 0) {\n\t\t\tif (matchIndex < matches.length) {\n\t\t\t\t// A match can be undefined\n\t\t\t\tconst match = (matches[matchIndex] || '');\n\t\t\t\treturn match + remainder;\n\t\t\t}\n\t\t\tremainder = String(matchIndex % 10) + remainder;\n\t\t\tmatchIndex = Math.floor(matchIndex / 10);\n\t\t}\n\t\treturn '$' + remainder;\n\t}\n}\n\n/**\n * A replace piece can either be a static string or an index to a specific match.\n */\nexport class ReplacePiece {\n\n\tpublic static staticValue(value: string): ReplacePiece {\n\t\treturn new ReplacePiece(value, -1, null);\n\t}\n\n\tpublic static matchIndex(index: number): ReplacePiece {\n\t\treturn new ReplacePiece(null, index, null);\n\t}\n\n\tpublic static caseOps(index: number, caseOps: string[]): ReplacePiece {\n\t\treturn new ReplacePiece(null, index, caseOps);\n\t}\n\n\tpublic readonly staticValue: string | null;\n\tpublic readonly matchIndex: number;\n\tpublic readonly caseOps: string[] | null;\n\n\tprivate constructor(staticValue: string | null, matchIndex: number, caseOps: string[] | null) {\n\t\tthis.staticValue = staticValue;\n\t\tthis.matchIndex = matchIndex;\n\t\tif (!caseOps || caseOps.length === 0) {\n\t\t\tthis.caseOps = null;\n\t\t} else {\n\t\t\tthis.caseOps = caseOps.slice(0);\n\t\t}\n\t}\n}\n\nclass ReplacePieceBuilder {\n\n\tprivate readonly _source: string;\n\tprivate _lastCharIndex: number;\n\tprivate readonly _result: ReplacePiece[];\n\tprivate _resultLen: number;\n\tprivate _currentStaticPiece: string;\n\n\tconstructor(source: string) {\n\t\tthis._source = source;\n\t\tthis._lastCharIndex = 0;\n\t\tthis._result = [];\n\t\tthis._resultLen = 0;\n\t\tthis._currentStaticPiece = '';\n\t}\n\n\tpublic emitUnchanged(toCharIndex: number): void {\n\t\tthis._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\n\t\tthis._lastCharIndex = toCharIndex;\n\t}\n\n\tpublic emitStatic(value: string, toCharIndex: number): void {\n\t\tthis._emitStatic(value);\n\t\tthis._lastCharIndex = toCharIndex;\n\t}\n\n\tprivate _emitStatic(value: string): void {\n\t\tif (value.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._currentStaticPiece += value;\n\t}\n\n\tpublic emitMatchIndex(index: number, toCharIndex: number, caseOps: string[]): void {\n\t\tif (this._currentStaticPiece.length !== 0) {\n\t\t\tthis._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n\t\t\tthis._currentStaticPiece = '';\n\t\t}\n\t\tthis._result[this._resultLen++] = ReplacePiece.caseOps(index, caseOps);\n\t\tthis._lastCharIndex = toCharIndex;\n\t}\n\n\n\tpublic finalize(): ReplacePattern {\n\t\tthis.emitUnchanged(this._source.length);\n\t\tif (this._currentStaticPiece.length !== 0) {\n\t\t\tthis._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n\t\t\tthis._currentStaticPiece = '';\n\t\t}\n\t\treturn new ReplacePattern(this._result);\n\t}\n}\n\n/**\n * \\n\t\t\t=> inserts a LF\n * \\t\t\t\t=> inserts a TAB\n * \\\\\t\t\t=> inserts a \"\\\".\n * \\u\t\t\t=> upper-cases one character in a match.\n * \\U\t\t\t=> upper-cases ALL remaining characters in a match.\n * \\l\t\t\t=> lower-cases one character in a match.\n * \\L\t\t\t=> lower-cases ALL remaining characters in a match.\n * $$\t\t\t=> inserts a \"$\".\n * $& and $0\t=> inserts the matched substring.\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\n * everything else stays untouched\n *\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\n */\nexport function parseReplaceString(replaceString: string): ReplacePattern {\n\tif (!replaceString || replaceString.length === 0) {\n\t\treturn new ReplacePattern(null);\n\t}\n\n\tconst caseOps: string[] = [];\n\tconst result = new ReplacePieceBuilder(replaceString);\n\n\tfor (let i = 0, len = replaceString.length; i < len; i++) {\n\t\tconst chCode = replaceString.charCodeAt(i);\n\n\t\tif (chCode === CharCode.Backslash) {\n\n\t\t\t// move to next char\n\t\t\ti++;\n\n\t\t\tif (i >= len) {\n\t\t\t\t// string ends with a \\\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst nextChCode = replaceString.charCodeAt(i);\n\t\t\t// let replaceWithCharacter: string | null = null;\n\n\t\t\tswitch (nextChCode) {\n\t\t\t\tcase CharCode.Backslash:\n\t\t\t\t\t// \\\\ => inserts a \"\\\"\n\t\t\t\t\tresult.emitUnchanged(i - 1);\n\t\t\t\t\tresult.emitStatic('\\\\', i + 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CharCode.n:\n\t\t\t\t\t// \\n => inserts a LF\n\t\t\t\t\tresult.emitUnchanged(i - 1);\n\t\t\t\t\tresult.emitStatic('\\n', i + 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CharCode.t:\n\t\t\t\t\t// \\t => inserts a TAB\n\t\t\t\t\tresult.emitUnchanged(i - 1);\n\t\t\t\t\tresult.emitStatic('\\t', i + 1);\n\t\t\t\t\tbreak;\n\t\t\t\t// Case modification of string replacements, patterned after Boost, but only applied\n\t\t\t\t// to the replacement text, not subsequent content.\n\t\t\t\tcase CharCode.u:\n\t\t\t\t// \\u => upper-cases one character.\n\t\t\t\tcase CharCode.U:\n\t\t\t\t// \\U => upper-cases ALL following characters.\n\t\t\t\tcase CharCode.l:\n\t\t\t\t// \\l => lower-cases one character.\n\t\t\t\tcase CharCode.L:\n\t\t\t\t\t// \\L => lower-cases ALL following characters.\n\t\t\t\t\tresult.emitUnchanged(i - 1);\n\t\t\t\t\tresult.emitStatic('', i + 1);\n\t\t\t\t\tcaseOps.push(String.fromCharCode(nextChCode));\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (chCode === CharCode.DollarSign) {\n\n\t\t\t// move to next char\n\t\t\ti++;\n\n\t\t\tif (i >= len) {\n\t\t\t\t// string ends with a $\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst nextChCode = replaceString.charCodeAt(i);\n\n\t\t\tif (nextChCode === CharCode.DollarSign) {\n\t\t\t\t// $$ => inserts a \"$\"\n\t\t\t\tresult.emitUnchanged(i - 1);\n\t\t\t\tresult.emitStatic('$', i + 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (nextChCode === CharCode.Digit0 || nextChCode === CharCode.Ampersand) {\n\t\t\t\t// $& and $0 => inserts the matched substring.\n\t\t\t\tresult.emitUnchanged(i - 1);\n\t\t\t\tresult.emitMatchIndex(0, i + 1, caseOps);\n\t\t\t\tcaseOps.length = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (CharCode.Digit1 <= nextChCode && nextChCode <= CharCode.Digit9) {\n\t\t\t\t// $n\n\n\t\t\t\tlet matchIndex = nextChCode - CharCode.Digit0;\n\n\t\t\t\t// peek next char to probe for $nn\n\t\t\t\tif (i + 1 < len) {\n\t\t\t\t\tconst nextNextChCode = replaceString.charCodeAt(i + 1);\n\t\t\t\t\tif (CharCode.Digit0 <= nextNextChCode && nextNextChCode <= CharCode.Digit9) {\n\t\t\t\t\t\t// $nn\n\n\t\t\t\t\t\t// move to next char\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tmatchIndex = matchIndex * 10 + (nextNextChCode - CharCode.Digit0);\n\n\t\t\t\t\t\tresult.emitUnchanged(i - 2);\n\t\t\t\t\t\tresult.emitMatchIndex(matchIndex, i + 1, caseOps);\n\t\t\t\t\t\tcaseOps.length = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.emitUnchanged(i - 1);\n\t\t\t\tresult.emitMatchIndex(matchIndex, i + 1, caseOps);\n\t\t\t\tcaseOps.length = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result.finalize();\n}\n"]}