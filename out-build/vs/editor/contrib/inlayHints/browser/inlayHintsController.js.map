{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/inlayHints/browser/inlayHintsController.ts"],"names":[],"mappings":"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","file":"inlayHintsController.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ModifierKeyEmitter } from 'vs/base/browser/dom';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LRUCache } from 'vs/base/common/map';\nimport { IRange } from 'vs/base/common/range';\nimport { assertType } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IActiveCodeEditor, ICodeEditor, IEditorMouseEvent, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { ClassNameReference, CssProperties, DynamicCssRules } from 'vs/editor/browser/editorDom';\nimport { StableEditorScrollState } from 'vs/editor/browser/stableEditorScroll';\nimport { EditorOption, EDITOR_FONT_DEFAULTS } from 'vs/editor/common/config/editorOptions';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport * as languages from 'vs/editor/common/languages';\nimport { IModelDeltaDecoration, InjectedTextCursorStops, InjectedTextOptions, ITextModel, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { ModelDecorationInjectedTextOptions } from 'vs/editor/common/model/textModel';\nimport { IFeatureDebounceInformation, ILanguageFeatureDebounceService } from 'vs/editor/common/services/languageFeatureDebounce';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { ClickLinkGesture, ClickLinkMouseEvent } from 'vs/editor/contrib/gotoSymbol/browser/link/clickLinkGesture';\nimport { InlayHintAnchor, InlayHintItem, InlayHintsFragments } from 'vs/editor/contrib/inlayHints/browser/inlayHints';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from 'vs/editor/contrib/inlayHints/browser/inlayHintsLocations';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { createDecorator, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport * as colors from 'vs/platform/theme/common/colorRegistry';\nimport { themeColorFromId } from 'vs/platform/theme/common/themeService';\n\n// --- hint caching service (per session)\n\nclass InlayHintsCache {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _entries = new LRUCache<string, InlayHintItem[]>(50);\n\n\tget(model: ITextModel): InlayHintItem[] | undefined {\n\t\tconst key = InlayHintsCache._key(model);\n\t\treturn this._entries.get(key);\n\t}\n\n\tset(model: ITextModel, value: InlayHintItem[]): void {\n\t\tconst key = InlayHintsCache._key(model);\n\t\tthis._entries.set(key, value);\n\t}\n\n\tprivate static _key(model: ITextModel): string {\n\t\treturn `${model.uri.toString()}/${model.getVersionId()}`;\n\t}\n}\n\ninterface IInlayHintsCache extends InlayHintsCache { }\nconst IInlayHintsCache = createDecorator<IInlayHintsCache>('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, InstantiationType.Delayed);\n\n// --- rendered label\n\nexport class RenderedInlayHintLabelPart {\n\tconstructor(readonly item: InlayHintItem, readonly index: number) { }\n\n\tget part() {\n\t\tconst label = this.item.hint.label;\n\t\tif (typeof label === 'string') {\n\t\t\treturn { label };\n\t\t} else {\n\t\t\treturn label[this.index];\n\t\t}\n\t}\n}\n\nclass ActiveInlayHintInfo {\n\tconstructor(readonly part: RenderedInlayHintLabelPart, readonly hasTriggerModifier: boolean) { }\n}\n\ntype InlayHintDecorationRenderInfo = {\n\titem: InlayHintItem;\n\tdecoration: IModelDeltaDecoration;\n\tclassNameRef: ClassNameReference;\n};\n\nconst enum RenderMode {\n\tNormal,\n\tInvisible\n}\n\n// --- controller\n\nexport class InlayHintsController implements IEditorContribution {\n\n\tstatic readonly ID: string = 'editor.contrib.InlayHints';\n\n\tprivate static readonly _MAX_DECORATORS = 1500;\n\n\tstatic get(editor: ICodeEditor): InlayHintsController | undefined {\n\t\treturn editor.getContribution<InlayHintsController>(InlayHintsController.ID) ?? undefined;\n\t}\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _sessionDisposables = new DisposableStore();\n\tprivate readonly _debounceInfo: IFeatureDebounceInformation;\n\tprivate readonly _decorationsMetadata = new Map<string, InlayHintDecorationRenderInfo>();\n\tprivate readonly _ruleFactory = new DynamicCssRules(this._editor);\n\n\tprivate _activeRenderMode = RenderMode.Normal;\n\tprivate _activeInlayHintPart?: ActiveInlayHintInfo;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILanguageFeatureDebounceService _featureDebounce: ILanguageFeatureDebounceService,\n\t\t@IInlayHintsCache private readonly _inlayHintsCache: IInlayHintsCache,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t) {\n\t\tthis._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n\t\tthis._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n\t\tthis._disposables.add(_editor.onDidChangeModel(() => this._update()));\n\t\tthis._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n\t\tthis._disposables.add(_editor.onDidChangeConfiguration(e => {\n\t\t\tif (e.hasChanged(EditorOption.inlayHints)) {\n\t\t\t\tthis._update();\n\t\t\t}\n\t\t}));\n\t\tthis._update();\n\n\t}\n\n\tdispose(): void {\n\t\tthis._sessionDisposables.dispose();\n\t\tthis._removeAllDecorations();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprivate _update(): void {\n\t\tthis._sessionDisposables.clear();\n\t\tthis._removeAllDecorations();\n\n\t\tconst options = this._editor.getOption(EditorOption.inlayHints);\n\t\tif (options.enabled === 'off') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tif (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// iff possible, quickly update from cache\n\t\tconst cached = this._inlayHintsCache.get(model);\n\t\tif (cached) {\n\t\t\tthis._updateHintsDecorators([model.getFullModelRange()], cached);\n\t\t}\n\t\tthis._sessionDisposables.add(toDisposable(() => {\n\t\t\t// cache items when switching files etc\n\t\t\tif (!model.isDisposed()) {\n\t\t\t\tthis._cacheHintsForFastRestore(model);\n\t\t\t}\n\t\t}));\n\n\t\tlet cts: CancellationTokenSource | undefined;\n\t\tconst watchedProviders = new Set<languages.InlayHintsProvider>();\n\n\t\tconst scheduler = new RunOnceScheduler(async () => {\n\t\t\tconst t1 = Date.now();\n\n\t\t\tcts?.dispose(true);\n\t\t\tcts = new CancellationTokenSource();\n\t\t\tconst listener = model.onWillDispose(() => cts?.cancel());\n\n\t\t\ttry {\n\t\t\t\tconst myToken = cts.token;\n\t\t\t\tconst inlayHints = await InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n\t\t\t\tscheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n\t\t\t\tif (myToken.isCancellationRequested) {\n\t\t\t\t\tinlayHints.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// listen to provider changes\n\t\t\t\tfor (const provider of inlayHints.provider) {\n\t\t\t\t\tif (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n\t\t\t\t\t\twatchedProviders.add(provider);\n\t\t\t\t\t\tthis._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n\t\t\t\t\t\t\tif (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n\t\t\t\t\t\t\t\tscheduler.schedule();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._sessionDisposables.add(inlayHints);\n\t\t\t\tthis._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n\t\t\t\tthis._cacheHintsForFastRestore(model);\n\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\n\t\t\t} finally {\n\t\t\t\tcts.dispose();\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\n\t\t}, this._debounceInfo.get(model));\n\n\t\tthis._sessionDisposables.add(scheduler);\n\t\tthis._sessionDisposables.add(toDisposable(() => cts?.dispose(true)));\n\t\tscheduler.schedule(0);\n\n\t\tthis._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n\t\t\t// update when scroll position changes\n\t\t\t// uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n\t\t\t// typing or due to \"actual\" scrolling\n\t\t\tif (e.scrollTopChanged || !scheduler.isScheduled()) {\n\t\t\t\tscheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tthis._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n\t\t\t// update less aggressive when typing\n\t\t\tconst delay = Math.max(scheduler.delay, 1250);\n\t\t\tscheduler.schedule(delay);\n\t\t}));\n\n\t\tif (options.enabled === 'on') {\n\t\t\t// different \"on\" modes: always\n\t\t\tthis._activeRenderMode = RenderMode.Normal;\n\t\t} else {\n\t\t\t// different \"on\" modes: offUnlessPressed, or onUnlessPressed\n\t\t\tlet defaultMode: RenderMode;\n\t\t\tlet altMode: RenderMode;\n\t\t\tif (options.enabled === 'onUnlessPressed') {\n\t\t\t\tdefaultMode = RenderMode.Normal;\n\t\t\t\taltMode = RenderMode.Invisible;\n\t\t\t} else {\n\t\t\t\tdefaultMode = RenderMode.Invisible;\n\t\t\t\taltMode = RenderMode.Normal;\n\t\t\t}\n\t\t\tthis._activeRenderMode = defaultMode;\n\n\t\t\tthis._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(e => {\n\t\t\t\tif (!this._editor.hasModel()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst newRenderMode = e.altKey && e.ctrlKey && !(e.shiftKey || e.metaKey) ? altMode : defaultMode;\n\t\t\t\tif (newRenderMode !== this._activeRenderMode) {\n\t\t\t\t\tthis._activeRenderMode = newRenderMode;\n\t\t\t\t\tconst model = this._editor.getModel();\n\t\t\t\t\tconst copies = this._copyInlayHintsWithCurrentAnchor(model);\n\t\t\t\t\tthis._updateHintsDecorators([model.getFullModelRange()], copies);\n\t\t\t\t\tscheduler.schedule(0);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\t// mouse gestures\n\t\tthis._sessionDisposables.add(this._installDblClickGesture(() => scheduler.schedule(0)));\n\t\tthis._sessionDisposables.add(this._installLinkGesture());\n\t\tthis._sessionDisposables.add(this._installContextMenu());\n\t}\n\n\tprivate _installLinkGesture(): IDisposable {\n\n\t\tconst store = new DisposableStore();\n\t\tconst gesture = store.add(new ClickLinkGesture(this._editor));\n\n\t\t// let removeHighlight = () => { };\n\n\t\tconst sessionStore = new DisposableStore();\n\t\tstore.add(sessionStore);\n\n\t\tstore.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n\t\t\tconst [mouseEvent] = e;\n\t\t\tconst labelPart = this._getInlayHintLabelPart(mouseEvent);\n\t\t\tconst model = this._editor.getModel();\n\n\t\t\tif (!labelPart || !model) {\n\t\t\t\tsessionStore.clear();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// resolve the item\n\t\t\tconst cts = new CancellationTokenSource();\n\t\t\tsessionStore.add(toDisposable(() => cts.dispose(true)));\n\t\t\tlabelPart.item.resolve(cts.token);\n\n\t\t\t// render link => when the modifier is pressed and when there is a command or location\n\t\t\tthis._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n\t\t\t\t? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n\t\t\t\t: undefined;\n\n\t\t\tconst lineNumber = model.validatePosition(labelPart.item.hint.position).lineNumber;\n\t\t\tconst range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n\t\t\tconst lineHints = this._getInlineHintsForRange(range);\n\t\t\tthis._updateHintsDecorators([range], lineHints);\n\t\t\tsessionStore.add(toDisposable(() => {\n\t\t\t\tthis._activeInlayHintPart = undefined;\n\t\t\t\tthis._updateHintsDecorators([range], lineHints);\n\t\t\t}));\n\t\t}));\n\t\tstore.add(gesture.onCancel(() => sessionStore.clear()));\n\t\tstore.add(gesture.onExecute(async e => {\n\t\t\tconst label = this._getInlayHintLabelPart(e);\n\t\t\tif (label) {\n\t\t\t\tconst part = label.part;\n\t\t\t\tif (part.location) {\n\t\t\t\t\t// location -> execute go to def\n\t\t\t\t\tthis._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor as IActiveCodeEditor, part.location);\n\t\t\t\t} else if (languages.Command.is(part.command)) {\n\t\t\t\t\t// command -> execute it\n\t\t\t\t\tawait this._invokeCommand(part.command, label.item);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\treturn store;\n\t}\n\n\tprivate _getInlineHintsForRange(range: Range) {\n\t\tconst lineHints = new Set<InlayHintItem>();\n\t\tfor (const data of this._decorationsMetadata.values()) {\n\t\t\tif (range.containsRange(data.item.anchor.range)) {\n\t\t\t\tlineHints.add(data.item);\n\t\t\t}\n\t\t}\n\t\treturn Array.from(lineHints);\n\t}\n\n\tprivate _installDblClickGesture(updateInlayHints: Function): IDisposable {\n\t\treturn this._editor.onMouseUp(async e => {\n\t\t\tif (e.event.detail !== 2) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst part = this._getInlayHintLabelPart(e);\n\t\t\tif (!part) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\te.event.preventDefault();\n\t\t\tawait part.item.resolve(CancellationToken.None);\n\t\t\tif (isNonEmptyArray(part.item.hint.textEdits)) {\n\t\t\t\tconst edits = part.item.hint.textEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n\t\t\t\tthis._editor.executeEdits('inlayHint.default', edits);\n\t\t\t\tupdateInlayHints();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _installContextMenu(): IDisposable {\n\t\treturn this._editor.onContextMenu(async e => {\n\t\t\tif (!(e.event.target instanceof HTMLElement)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst part = this._getInlayHintLabelPart(e);\n\t\t\tif (part) {\n\t\t\t\tawait this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _getInlayHintLabelPart(e: IEditorMouseEvent | ClickLinkMouseEvent): RenderedInlayHintLabelPart | undefined {\n\t\tif (e.target.type !== MouseTargetType.CONTENT_TEXT) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst options = e.target.detail.injectedText?.options;\n\t\tif (options instanceof ModelDecorationInjectedTextOptions && options?.attachedData instanceof RenderedInlayHintLabelPart) {\n\t\t\treturn options.attachedData;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async _invokeCommand(command: languages.Command, item: InlayHintItem) {\n\t\ttry {\n\t\t\tawait this._commandService.executeCommand(command.id, ...(command.arguments ?? []));\n\t\t} catch (err) {\n\t\t\tthis._notificationService.notify({\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tsource: item.provider.displayName,\n\t\t\t\tmessage: err\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _cacheHintsForFastRestore(model: ITextModel): void {\n\t\tconst hints = this._copyInlayHintsWithCurrentAnchor(model);\n\t\tthis._inlayHintsCache.set(model, hints);\n\t}\n\n\t// return inlay hints but with an anchor that reflects \"updates\"\n\t// that happened after receiving them, e.g adding new lines before a hint\n\tprivate _copyInlayHintsWithCurrentAnchor(model: ITextModel): InlayHintItem[] {\n\t\tconst items = new Map<InlayHintItem, InlayHintItem>();\n\t\tfor (const [id, obj] of this._decorationsMetadata) {\n\t\t\tif (items.has(obj.item)) {\n\t\t\t\t// an inlay item can be rendered as multiple decorations\n\t\t\t\t// but they will all uses the same range\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst range = model.getDecorationRange(id);\n\t\t\tif (range) {\n\t\t\t\t// update range with whatever the editor has tweaked it to\n\t\t\t\tconst anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n\t\t\t\tconst copy = obj.item.with({ anchor });\n\t\t\t\titems.set(obj.item, copy);\n\t\t\t}\n\t\t}\n\t\treturn Array.from(items.values());\n\t}\n\n\tprivate _getHintsRanges(): Range[] {\n\t\tconst extra = 30;\n\t\tconst model = this._editor.getModel()!;\n\t\tconst visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n\t\tconst result: Range[] = [];\n\t\tfor (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n\t\t\tconst extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n\t\t\tif (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n\t\t\t\tresult.push(extendedRange);\n\t\t\t} else {\n\t\t\t\tresult[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _updateHintsDecorators(ranges: readonly Range[], items: readonly InlayHintItem[]): void {\n\n\t\t// utils to collect/create injected text decorations\n\t\tconst newDecorationsData: InlayHintDecorationRenderInfo[] = [];\n\t\tconst addInjectedText = (item: InlayHintItem, ref: ClassNameReference, content: string, cursorStops: InjectedTextCursorStops, attachedData?: RenderedInlayHintLabelPart): void => {\n\t\t\tconst opts: InjectedTextOptions = {\n\t\t\t\tcontent,\n\t\t\t\tinlineClassNameAffectsLetterSpacing: true,\n\t\t\t\tinlineClassName: ref.className,\n\t\t\t\tcursorStops,\n\t\t\t\tattachedData\n\t\t\t};\n\t\t\tnewDecorationsData.push({\n\t\t\t\titem,\n\t\t\t\tclassNameRef: ref,\n\t\t\t\tdecoration: {\n\t\t\t\t\trange: item.anchor.range,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t// className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n\t\t\t\t\t\tdescription: 'InlayHint',\n\t\t\t\t\t\tshowIfCollapsed: item.anchor.range.isEmpty(), // \"original\" range is empty\n\t\t\t\t\t\tcollapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n\t\t\t\t\t\tstickiness: TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges,\n\t\t\t\t\t\t[item.anchor.direction]: this._activeRenderMode === RenderMode.Normal ? opts : undefined\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tconst addInjectedWhitespace = (item: InlayHintItem, isLast: boolean): void => {\n\t\t\tconst marginRule = this._ruleFactory.createClassNameRef({\n\t\t\t\twidth: `${(fontSize / 3) | 0}px`,\n\t\t\t\tdisplay: 'inline-block'\n\t\t\t});\n\t\t\taddInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n\t\t};\n\n\n\t\t//\n\t\tconst { fontSize, fontFamily, padding, isUniform } = this._getLayoutInfo();\n\t\tconst fontFamilyVar = '--code-editorInlayHintsFontFamily';\n\t\tthis._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n\n\t\tfor (const item of items) {\n\n\t\t\t// whitespace leading the actual label\n\t\t\tif (item.hint.paddingLeft) {\n\t\t\t\taddInjectedWhitespace(item, false);\n\t\t\t}\n\n\t\t\t// the label with its parts\n\t\t\tconst parts: languages.InlayHintLabelPart[] = typeof item.hint.label === 'string'\n\t\t\t\t? [{ label: item.hint.label }]\n\t\t\t\t: item.hint.label;\n\n\t\t\tfor (let i = 0; i < parts.length; i++) {\n\t\t\t\tconst part = parts[i];\n\n\t\t\t\tconst isFirst = i === 0;\n\t\t\t\tconst isLast = i === parts.length - 1;\n\n\t\t\t\tconst cssProperties: CssProperties = {\n\t\t\t\t\tfontSize: `${fontSize}px`,\n\t\t\t\t\tfontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n\t\t\t\t\tverticalAlign: isUniform ? 'baseline' : 'middle',\n\t\t\t\t\tunicodeBidi: 'isolate'\n\t\t\t\t};\n\n\t\t\t\tif (isNonEmptyArray(item.hint.textEdits)) {\n\t\t\t\t\tcssProperties.cursor = 'default';\n\t\t\t\t}\n\n\t\t\t\tthis._fillInColors(cssProperties, item.hint);\n\n\t\t\t\tif ((part.command || part.location) && this._activeInlayHintPart?.part.item === item && this._activeInlayHintPart.part.index === i) {\n\t\t\t\t\t// active link!\n\t\t\t\t\tcssProperties.textDecoration = 'underline';\n\t\t\t\t\tif (this._activeInlayHintPart.hasTriggerModifier) {\n\t\t\t\t\t\tcssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n\t\t\t\t\t\tcssProperties.cursor = 'pointer';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (padding) {\n\t\t\t\t\tif (isFirst && isLast) {\n\t\t\t\t\t\t// only element\n\t\t\t\t\t\tcssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n\t\t\t\t\t\tcssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n\t\t\t\t\t} else if (isFirst) {\n\t\t\t\t\t\t// first element\n\t\t\t\t\t\tcssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n\t\t\t\t\t\tcssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n\t\t\t\t\t} else if (isLast) {\n\t\t\t\t\t\t// last element\n\t\t\t\t\t\tcssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n\t\t\t\t\t\tcssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcssProperties.padding = `1px 0 1px 0`;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\taddInjectedText(\n\t\t\t\t\titem,\n\t\t\t\t\tthis._ruleFactory.createClassNameRef(cssProperties),\n\t\t\t\t\tfixSpace(part.label),\n\t\t\t\t\tisLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None,\n\t\t\t\t\tnew RenderedInlayHintLabelPart(item, i)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// whitespace trailing the actual label\n\t\t\tif (item.hint.paddingRight) {\n\t\t\t\taddInjectedWhitespace(item, true);\n\t\t\t}\n\n\t\t\tif (newDecorationsData.length > InlayHintsController._MAX_DECORATORS) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// collect all decoration ids that are affected by the ranges\n\t\t// and only update those decorations\n\t\tconst decorationIdsToReplace: string[] = [];\n\t\tfor (const range of ranges) {\n\n\t\t\tfor (const { id } of this._editor.getDecorationsInRange(range) ?? []) {\n\t\t\t\tconst metadata = this._decorationsMetadata.get(id);\n\t\t\t\tif (metadata) {\n\t\t\t\t\tdecorationIdsToReplace.push(id);\n\t\t\t\t\tmetadata.classNameRef.dispose();\n\t\t\t\t\tthis._decorationsMetadata.delete(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst scrollState = StableEditorScrollState.capture(this._editor);\n\n\t\tthis._editor.changeDecorations(accessor => {\n\t\t\tconst newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n\t\t\tfor (let i = 0; i < newDecorationIds.length; i++) {\n\t\t\t\tconst data = newDecorationsData[i];\n\t\t\t\tthis._decorationsMetadata.set(newDecorationIds[i], data);\n\t\t\t}\n\t\t});\n\n\t\tscrollState.restore(this._editor);\n\t}\n\n\tprivate _fillInColors(props: CssProperties, hint: languages.InlayHint): void {\n\t\tif (hint.kind === languages.InlayHintKind.Parameter) {\n\t\t\tprops.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n\t\t\tprops.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n\t\t} else if (hint.kind === languages.InlayHintKind.Type) {\n\t\t\tprops.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n\t\t\tprops.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n\t\t} else {\n\t\t\tprops.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n\t\t\tprops.color = themeColorFromId(colors.editorInlayHintForeground);\n\t\t}\n\t}\n\n\tprivate _getLayoutInfo() {\n\t\tconst options = this._editor.getOption(EditorOption.inlayHints);\n\t\tconst padding = options.padding;\n\n\t\tconst editorFontSize = this._editor.getOption(EditorOption.fontSize);\n\t\tconst editorFontFamily = this._editor.getOption(EditorOption.fontFamily);\n\n\t\tlet fontSize = options.fontSize;\n\t\tif (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n\t\t\tfontSize = editorFontSize;\n\t\t}\n\n\t\tconst fontFamily = options.fontFamily || editorFontFamily;\n\n\t\tconst isUniform = !padding\n\t\t\t&& fontFamily === editorFontFamily\n\t\t\t&& fontSize === editorFontSize;\n\n\t\treturn { fontSize, fontFamily, padding, isUniform };\n\t}\n\n\tprivate _removeAllDecorations(): void {\n\t\tthis._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n\t\tfor (const obj of this._decorationsMetadata.values()) {\n\t\t\tobj.classNameRef.dispose();\n\t\t}\n\t\tthis._decorationsMetadata.clear();\n\t}\n\n\n\t// --- accessibility\n\n\tgetInlayHintsForLine(line: number): InlayHintItem[] {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn [];\n\t\t}\n\t\tconst set = new Set<languages.InlayHint>();\n\t\tconst result: InlayHintItem[] = [];\n\t\tfor (const deco of this._editor.getLineDecorations(line)) {\n\t\t\tconst data = this._decorationsMetadata.get(deco.id);\n\t\t\tif (data && !set.has(data.item.hint)) {\n\t\t\t\tset.add(data.item.hint);\n\t\t\t\tresult.push(data.item);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\n\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str: string): string {\n\tconst noBreakWhitespace = '\\xa0';\n\treturn str.replace(/[ \\t]/g, noBreakWhitespace);\n}\n\n\nCommandsRegistry.registerCommand('_executeInlayHintProvider', async (accessor, ...args: [URI, IRange]): Promise<languages.InlayHint[]> => {\n\n\tconst [uri, range] = args;\n\tassertType(URI.isUri(uri));\n\tassertType(Range.isIRange(range));\n\n\tconst { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n\tconst ref = await accessor.get(ITextModelService).createModelReference(uri);\n\ttry {\n\t\tconst model = await InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n\t\tconst result = model.items.map(i => i.hint);\n\t\tsetTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n\t\treturn result;\n\t} finally {\n\t\tref.dispose();\n\t}\n});\n"]}