{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/lineSelection/test/browser/lineSelection.test.ts"],"names":[],"mappings":"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","file":"lineSelection.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport type { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction } from 'vs/editor/browser/editorExtensions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ExpandLineSelectionAction } from 'vs/editor/contrib/lineSelection/browser/lineSelection';\nimport { withTestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\n\nfunction executeAction(action: EditorAction, editor: ICodeEditor): void {\n\taction.run(null!, editor, undefined);\n}\n\nsuite('LineSelection', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('', () => {\n\t\tconst LINE1 = '    \\tMy First Line\\t ';\n\t\tconst LINE2 = '\\tMy Second Line';\n\t\tconst LINE3 = '    Third Line🐶';\n\t\tconst LINE4 = '';\n\t\tconst LINE5 = '1';\n\n\t\tconst TEXT =\n\t\t\tLINE1 + '\\r\\n' +\n\t\t\tLINE2 + '\\n' +\n\t\t\tLINE3 + '\\n' +\n\t\t\tLINE4 + '\\r\\n' +\n\t\t\tLINE5;\n\n\t\twithTestCodeEditor(TEXT, {}, (editor, viewModel) => {\n\t\t\tconst action = new ExpandLineSelectionAction();\n\n\t\t\t//              0          1         2\n\t\t\t//              01234 56789012345678 0\n\t\t\t// let LINE1 = '    \\tMy First Line\\t ';\n\t\t\teditor.setPosition(new Position(1, 1));\n\t\t\texecuteAction(action, editor);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 2, 1));\n\n\t\t\teditor.setPosition(new Position(1, 2));\n\t\t\texecuteAction(action, editor);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 2, 1));\n\n\t\t\teditor.setPosition(new Position(1, 5));\n\t\t\texecuteAction(action, editor);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 2, 1));\n\n\t\t\teditor.setPosition(new Position(1, 19));\n\t\t\texecuteAction(action, editor);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 2, 1));\n\n\t\t\teditor.setPosition(new Position(1, 20));\n\t\t\texecuteAction(action, editor);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 2, 1));\n\n\t\t\teditor.setPosition(new Position(1, 21));\n\t\t\texecuteAction(action, editor);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 2, 1));\n\t\t\texecuteAction(action, editor);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 3, 1));\n\t\t\texecuteAction(action, editor);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 4, 1));\n\t\t\texecuteAction(action, editor);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 5, 1));\n\t\t\texecuteAction(action, editor);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 5, LINE5.length + 1));\n\t\t\texecuteAction(action, editor);\n\t\t\tassert.deepStrictEqual(editor.getSelection(), new Selection(1, 1, 5, LINE5.length + 1));\n\t\t});\n\t});\n});\n"]}