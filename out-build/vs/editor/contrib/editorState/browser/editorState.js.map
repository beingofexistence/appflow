{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/editorState/browser/editorState.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAWhG,IAAkB,mBAKjB;IALD,WAAkB,mBAAmB;QACpC,+DAAS,CAAA;QACT,uEAAa,CAAA;QACb,qEAAY,CAAA;QACZ,iEAAU,CAAA;IACX,CAAC,EALiB,mBAAmB,mCAAnB,mBAAmB,QAKpC;IAED,MAAa,GAAG;QAUf,YAAY,MAAmB,EAAE,KAAa;YAC7C,IAAI,CAAC,CAAC,GAAO,KAAK,CAAC;YAEnB,IAAI,CAAC,IAAI,CAAC,CAAC,oCAAgC,CAAC,KAAK,CAAC,EAAE;gBACnD,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAChC,IAAI,CAAC,CAAC,GAAgB,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAI,SAAS,EAAE,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;aAC3G;iBAAM;gBACN,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC;aAC3B;YACD,IAAI,CAAC,IAAI,CAAC,CAAC,uCAAmC,CAAC,KAAK,CAAC,EAAE;gBACtD,IAAI,CAAC,CAAC,GAAU,MAAM,CAAC,WAAW,EAAE,CAAC;aACrC;iBAAM;gBACN,IAAI,CAAC,CAAC,GAAU,IAAI,CAAC;aACrB;YACD,IAAI,CAAC,IAAI,CAAC,CAAC,wCAAoC,CAAC,KAAK,CAAC,EAAE;gBACvD,IAAI,CAAC,CAAC,GAAW,MAAM,CAAC,YAAY,EAAE,CAAC;aACvC;iBAAM;gBACN,IAAI,CAAC,CAAC,GAAW,IAAI,CAAC;aACtB;YACD,IAAI,CAAC,IAAI,CAAC,CAAC,qCAAiC,CAAC,KAAK,CAAC,EAAE;gBACpD,IAAI,CAAC,CAAC,GAAY,MAAM,CAAC,aAAa,EAAE,CAAC;gBACzC,IAAI,CAAC,CAAC,GAAW,MAAM,CAAC,YAAY,EAAE,CAAC;aACvC;iBAAM;gBACN,IAAI,CAAC,CAAC,GAAY,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,CAAC,GAAW,CAAC,CAAC,CAAC;aACpB;QACF,CAAC;QAEO,CAAC,CAAO,KAAU;YAEzB,IAAI,CAAC,CAAC,KAAK,YAAY,GAAG,CAAS,EAAE;gBACpC,OAAO,KAAK,CAAC;aACb;YACD,MAAM,KAAK,GAAgB,KAAK,CAAC;YAEjC,IAAI,IAAI,CAAC,CAAC,KAAkB,KAAK,CAAC,CAAC,EAAe;gBACjD,OAAO,KAAK,CAAC;aACb;YACD,IAAI,IAAI,CAAC,CAAC,KAAc,KAAK,CAAC,CAAC,IAAa,IAAI,CAAC,CAAC,KAAa,KAAK,CAAC,CAAC,EAAU;gBAC/E,OAAO,KAAK,CAAC;aACb;YACD,IAAI,CAAC,IAAI,CAAC,CAAC,IAAW,KAAK,CAAC,CAAC,IAAW,IAAI,CAAC,CAAC,IAAW,CAAC,KAAK,CAAC,CAAC,IAAW,IAAI,CAAC,CAAC,IAAW,KAAK,CAAC,CAAC,IAAW,CAAC,IAAI,CAAC,CAAC,CAAQ,MAAM,CAAC,KAAK,CAAC,CAAC,CAAQ,EAAE;gBACrJ,OAAO,KAAK,CAAC;aACb;YACD,IAAI,CAAC,IAAI,CAAC,CAAC,IAAY,KAAK,CAAC,CAAC,IAAY,IAAI,CAAC,CAAC,IAAY,CAAC,KAAK,CAAC,CAAC,IAAY,IAAI,CAAC,CAAC,IAAY,KAAK,CAAC,CAAC,IAAY,CAAC,IAAI,CAAC,CAAC,CAAS,WAAW,CAAC,KAAK,CAAC,CAAC,CAAS,EAAE;gBAClK,OAAO,KAAK,CAAC;aACb;YACD,OAAO,IAAI,CAAC;QACb,CAAC;QAEM,QAAQ,CAAC,MAAmB;YAClC,OAAO,IAAI,CAAC,CAAC,CAAO,IAAI,GAAG,CAAS,MAAM,EAAE,IAAI,CAAC,CAAC,CAAK,CAAC,CAAC;QAC1D,CAAC;KACD;IA/DD,kBA+DC;IAED;;;;OAIG;IACH,MAAa,GAAmC,SAAQ,4BAAG;QAI1D,YAAY,MAAyB,EAAE,KAA0B,EAAE,KAAc,EAAE,MAA0B;YAC5G,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAHN,MAAC,GAAW,IAAI,eAAG,EAAc,CAAC;YAKlD,IAAI,KAAK,uCAA+B,EAAE;gBACzC,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC,CAAC,EAAE;oBACvD,IAAI,CAAC,KAAK,IAAI,CAAC,WAAG,CAAG,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE;wBACzD,IAAI,CAAC,MAAM,EAAE,CAAC;qBACd;gBACF,CAAC,CAAC,CAAC,CAAC;aACJ;YACD,IAAI,KAAK,wCAAgC,EAAE;gBAC1C,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC,CAAC,EAAE;oBACxD,IAAI,CAAC,KAAK,IAAI,CAAC,WAAG,CAAG,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE;wBACvD,IAAI,CAAC,MAAM,EAAE,CAAC;qBACd;gBACF,CAAC,CAAC,CAAC,CAAC;aACJ;YACD,IAAI,KAAK,qCAA6B,EAAE;gBACvC,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;aACjE;YACD,IAAI,KAAK,oCAA4B,EAAE;gBACtC,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAChE,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;aACvE;QACF,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,CAAC,CAAS,OAAO,EAAE,CAAC;YACzB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KACD;IAlCD,kBAkCC;IAED;;OAEG;IACH,MAAa,GAAiC,SAAQ,kBAAG;QAIxD,YAAY,KAAiB,EAAE,MAA0B;YACxD,KAAK,CAAC,MAAM,CAAC,CAAC;YACd,IAAI,CAAC,CAAC,GAAW,KAAK,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAChE,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,CAAC,CAAS,OAAO,EAAE,CAAC;YACzB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KACD;IAbD,kBAaC","file":"editorState.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { ICodeEditor, IActiveCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range, IRange } from 'vs/editor/common/core/range';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { IDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { EditorKeybindingCancellationTokenSource } from 'vs/editor/contrib/editorState/browser/keybindingCancellation';\n\nexport const enum CodeEditorStateFlag {\n\tValue = 1,\n\tSelection = 2,\n\tPosition = 4,\n\tScroll = 8\n}\n\nexport class EditorState {\n\n\tprivate readonly flags: number;\n\n\tprivate readonly position: Position | null;\n\tprivate readonly selection: Range | null;\n\tprivate readonly modelVersionId: string | null;\n\tprivate readonly scrollLeft: number;\n\tprivate readonly scrollTop: number;\n\n\tconstructor(editor: ICodeEditor, flags: number) {\n\t\tthis.flags = flags;\n\n\t\tif ((this.flags & CodeEditorStateFlag.Value) !== 0) {\n\t\t\tconst model = editor.getModel();\n\t\t\tthis.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n\t\t} else {\n\t\t\tthis.modelVersionId = null;\n\t\t}\n\t\tif ((this.flags & CodeEditorStateFlag.Position) !== 0) {\n\t\t\tthis.position = editor.getPosition();\n\t\t} else {\n\t\t\tthis.position = null;\n\t\t}\n\t\tif ((this.flags & CodeEditorStateFlag.Selection) !== 0) {\n\t\t\tthis.selection = editor.getSelection();\n\t\t} else {\n\t\t\tthis.selection = null;\n\t\t}\n\t\tif ((this.flags & CodeEditorStateFlag.Scroll) !== 0) {\n\t\t\tthis.scrollLeft = editor.getScrollLeft();\n\t\t\tthis.scrollTop = editor.getScrollTop();\n\t\t} else {\n\t\t\tthis.scrollLeft = -1;\n\t\t\tthis.scrollTop = -1;\n\t\t}\n\t}\n\n\tprivate _equals(other: any): boolean {\n\n\t\tif (!(other instanceof EditorState)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst state = <EditorState>other;\n\n\t\tif (this.modelVersionId !== state.modelVersionId) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validate(editor: ICodeEditor): boolean {\n\t\treturn this._equals(new EditorState(editor, this.flags));\n\t}\n}\n\n/**\n * A cancellation token source that cancels when the editor changes as expressed\n * by the provided flags\n * @param range If provided, changes in position and selection within this range will not trigger cancellation\n */\nexport class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource implements IDisposable {\n\n\tprivate readonly _listener = new DisposableStore();\n\n\tconstructor(editor: IActiveCodeEditor, flags: CodeEditorStateFlag, range?: IRange, parent?: CancellationToken) {\n\t\tsuper(editor, parent);\n\n\t\tif (flags & CodeEditorStateFlag.Position) {\n\t\t\tthis._listener.add(editor.onDidChangeCursorPosition(e => {\n\t\t\t\tif (!range || !Range.containsPosition(range, e.position)) {\n\t\t\t\t\tthis.cancel();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\tif (flags & CodeEditorStateFlag.Selection) {\n\t\t\tthis._listener.add(editor.onDidChangeCursorSelection(e => {\n\t\t\t\tif (!range || !Range.containsRange(range, e.selection)) {\n\t\t\t\t\tthis.cancel();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\tif (flags & CodeEditorStateFlag.Scroll) {\n\t\t\tthis._listener.add(editor.onDidScrollChange(_ => this.cancel()));\n\t\t}\n\t\tif (flags & CodeEditorStateFlag.Value) {\n\t\t\tthis._listener.add(editor.onDidChangeModel(_ => this.cancel()));\n\t\t\tthis._listener.add(editor.onDidChangeModelContent(_ => this.cancel()));\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\tthis._listener.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\n/**\n * A cancellation token source that cancels when the provided model changes\n */\nexport class TextModelCancellationTokenSource extends CancellationTokenSource implements IDisposable {\n\n\tprivate _listener: IDisposable;\n\n\tconstructor(model: ITextModel, parent?: CancellationToken) {\n\t\tsuper(parent);\n\t\tthis._listener = model.onDidChangeContent(() => this.cancel());\n\t}\n\n\toverride dispose() {\n\t\tthis._listener.dispose();\n\t\tsuper.dispose();\n\t}\n}\n"]}