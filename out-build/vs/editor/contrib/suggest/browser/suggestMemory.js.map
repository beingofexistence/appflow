{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/suggest/browser/suggestMemory.ts"],"names":[],"mappings":"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","file":"suggestMemory.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { LRUCache } from 'vs/base/common/map';\nimport { TernarySearchTree } from 'vs/base/common/ternarySearchTree';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { CompletionItemKind, CompletionItemKinds } from 'vs/editor/common/languages';\nimport { CompletionItem } from 'vs/editor/contrib/suggest/browser/suggest';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IStorageService, StorageScope, StorageTarget, WillSaveStateReason } from 'vs/platform/storage/common/storage';\n\nexport abstract class Memory {\n\n\tconstructor(readonly name: MemMode) { }\n\n\tselect(model: ITextModel, pos: IPosition, items: CompletionItem[]): number {\n\t\tif (items.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst topScore = items[0].score[0];\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tconst { score, completion: suggestion } = items[i];\n\t\t\tif (score[0] !== topScore) {\n\t\t\t\t// stop when leaving the group of top matches\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (suggestion.preselect) {\n\t\t\t\t// stop when seeing an auto-select-item\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tabstract memorize(model: ITextModel, pos: IPosition, item: CompletionItem): void;\n\n\tabstract toJSON(): object | undefined;\n\n\tabstract fromJSON(data: object): void;\n}\n\nexport class NoMemory extends Memory {\n\n\tconstructor() {\n\t\tsuper('first');\n\t}\n\n\tmemorize(model: ITextModel, pos: IPosition, item: CompletionItem): void {\n\t\t// no-op\n\t}\n\n\ttoJSON() {\n\t\treturn undefined;\n\t}\n\n\tfromJSON() {\n\t\t//\n\t}\n}\n\nexport interface MemItem {\n\ttype: string | CompletionItemKind;\n\tinsertText: string;\n\ttouch: number;\n}\n\nexport class LRUMemory extends Memory {\n\n\tconstructor() {\n\t\tsuper('recentlyUsed');\n\t}\n\n\tprivate _cache = new LRUCache<string, MemItem>(300, 0.66);\n\tprivate _seq = 0;\n\n\tmemorize(model: ITextModel, pos: IPosition, item: CompletionItem): void {\n\t\tconst key = `${model.getLanguageId()}/${item.textLabel}`;\n\t\tthis._cache.set(key, {\n\t\t\ttouch: this._seq++,\n\t\t\ttype: item.completion.kind,\n\t\t\tinsertText: item.completion.insertText\n\t\t});\n\t}\n\n\toverride select(model: ITextModel, pos: IPosition, items: CompletionItem[]): number {\n\n\t\tif (items.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst lineSuffix = model.getLineContent(pos.lineNumber).substr(pos.column - 10, pos.column - 1);\n\t\tif (/\\s$/.test(lineSuffix)) {\n\t\t\treturn super.select(model, pos, items);\n\t\t}\n\n\t\tconst topScore = items[0].score[0];\n\t\tlet indexPreselect = -1;\n\t\tlet indexRecency = -1;\n\t\tlet seq = -1;\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (items[i].score[0] !== topScore) {\n\t\t\t\t// consider only top items\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst key = `${model.getLanguageId()}/${items[i].textLabel}`;\n\t\t\tconst item = this._cache.peek(key);\n\t\t\tif (item && item.touch > seq && item.type === items[i].completion.kind && item.insertText === items[i].completion.insertText) {\n\t\t\t\tseq = item.touch;\n\t\t\t\tindexRecency = i;\n\t\t\t}\n\t\t\tif (items[i].completion.preselect && indexPreselect === -1) {\n\t\t\t\t// stop when seeing an auto-select-item\n\t\t\t\treturn indexPreselect = i;\n\t\t\t}\n\t\t}\n\t\tif (indexRecency !== -1) {\n\t\t\treturn indexRecency;\n\t\t} else if (indexPreselect !== -1) {\n\t\t\treturn indexPreselect;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\ttoJSON(): object {\n\t\treturn this._cache.toJSON();\n\t}\n\n\tfromJSON(data: [string, MemItem][]): void {\n\t\tthis._cache.clear();\n\t\tconst seq = 0;\n\t\tfor (const [key, value] of data) {\n\t\t\tvalue.touch = seq;\n\t\t\tvalue.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\n\t\t\tthis._cache.set(key, value);\n\t\t}\n\t\tthis._seq = this._cache.size;\n\t}\n}\n\n\nexport class PrefixMemory extends Memory {\n\n\tconstructor() {\n\t\tsuper('recentlyUsedByPrefix');\n\t}\n\n\tprivate _trie = TernarySearchTree.forStrings<MemItem>();\n\tprivate _seq = 0;\n\n\tmemorize(model: ITextModel, pos: IPosition, item: CompletionItem): void {\n\t\tconst { word } = model.getWordUntilPosition(pos);\n\t\tconst key = `${model.getLanguageId()}/${word}`;\n\t\tthis._trie.set(key, {\n\t\t\ttype: item.completion.kind,\n\t\t\tinsertText: item.completion.insertText,\n\t\t\ttouch: this._seq++\n\t\t});\n\t}\n\n\toverride select(model: ITextModel, pos: IPosition, items: CompletionItem[]): number {\n\t\tconst { word } = model.getWordUntilPosition(pos);\n\t\tif (!word) {\n\t\t\treturn super.select(model, pos, items);\n\t\t}\n\t\tconst key = `${model.getLanguageId()}/${word}`;\n\t\tlet item = this._trie.get(key);\n\t\tif (!item) {\n\t\t\titem = this._trie.findSubstr(key);\n\t\t}\n\t\tif (item) {\n\t\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\t\tconst { kind, insertText } = items[i].completion;\n\t\t\t\tif (kind === item.type && insertText === item.insertText) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn super.select(model, pos, items);\n\t}\n\n\ttoJSON(): object {\n\n\t\tconst entries: [string, MemItem][] = [];\n\t\tthis._trie.forEach((value, key) => entries.push([key, value]));\n\n\t\t// sort by last recently used (touch), then\n\t\t// take the top 200 item and normalize their\n\t\t// touch\n\t\tentries\n\t\t\t.sort((a, b) => -(a[1].touch - b[1].touch))\n\t\t\t.forEach((value, i) => value[1].touch = i);\n\n\t\treturn entries.slice(0, 200);\n\t}\n\n\tfromJSON(data: [string, MemItem][]): void {\n\t\tthis._trie.clear();\n\t\tif (data.length > 0) {\n\t\t\tthis._seq = data[0][1].touch + 1;\n\t\t\tfor (const [key, value] of data) {\n\t\t\t\tvalue.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\n\t\t\t\tthis._trie.set(key, value);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport type MemMode = 'first' | 'recentlyUsed' | 'recentlyUsedByPrefix';\n\nexport class SuggestMemoryService implements ISuggestMemoryService {\n\n\tprivate static readonly _strategyCtors = new Map<MemMode, { new(): Memory }>([\n\t\t['recentlyUsedByPrefix', PrefixMemory],\n\t\t['recentlyUsed', LRUMemory],\n\t\t['first', NoMemory]\n\t]);\n\n\tprivate static readonly _storagePrefix = 'suggest/memories';\n\n\treadonly _serviceBrand: undefined;\n\n\n\tprivate readonly _persistSoon: RunOnceScheduler;\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate _strategy?: Memory;\n\n\tconstructor(\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t) {\n\t\tthis._persistSoon = new RunOnceScheduler(() => this._saveState(), 500);\n\t\tthis._disposables.add(_storageService.onWillSaveState(e => {\n\t\t\tif (e.reason === WillSaveStateReason.SHUTDOWN) {\n\t\t\t\tthis._saveState();\n\t\t\t}\n\t\t}));\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._persistSoon.dispose();\n\t}\n\n\tmemorize(model: ITextModel, pos: IPosition, item: CompletionItem): void {\n\t\tthis._withStrategy(model, pos).memorize(model, pos, item);\n\t\tthis._persistSoon.schedule();\n\t}\n\n\tselect(model: ITextModel, pos: IPosition, items: CompletionItem[]): number {\n\t\treturn this._withStrategy(model, pos).select(model, pos, items);\n\t}\n\n\tprivate _withStrategy(model: ITextModel, pos: IPosition): Memory {\n\n\t\tconst mode = this._configService.getValue<MemMode>('editor.suggestSelection', {\n\t\t\toverrideIdentifier: model.getLanguageIdAtPosition(pos.lineNumber, pos.column),\n\t\t\tresource: model.uri\n\t\t});\n\n\t\tif (this._strategy?.name !== mode) {\n\n\t\t\tthis._saveState();\n\t\t\tconst ctor = SuggestMemoryService._strategyCtors.get(mode) || NoMemory;\n\t\t\tthis._strategy = new ctor();\n\n\t\t\ttry {\n\t\t\t\tconst share = this._configService.getValue<boolean>('editor.suggest.shareSuggestSelections');\n\t\t\t\tconst scope = share ? StorageScope.PROFILE : StorageScope.WORKSPACE;\n\t\t\t\tconst raw = this._storageService.get(`${SuggestMemoryService._storagePrefix}/${mode}`, scope);\n\t\t\t\tif (raw) {\n\t\t\t\t\tthis._strategy.fromJSON(JSON.parse(raw));\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// things can go wrong with JSON...\n\t\t\t}\n\t\t}\n\n\t\treturn this._strategy;\n\t}\n\n\tprivate _saveState() {\n\t\tif (this._strategy) {\n\t\t\tconst share = this._configService.getValue<boolean>('editor.suggest.shareSuggestSelections');\n\t\t\tconst scope = share ? StorageScope.PROFILE : StorageScope.WORKSPACE;\n\t\t\tconst raw = JSON.stringify(this._strategy);\n\t\t\tthis._storageService.store(`${SuggestMemoryService._storagePrefix}/${this._strategy.name}`, raw, scope, StorageTarget.MACHINE);\n\t\t}\n\t}\n}\n\n\nexport const ISuggestMemoryService = createDecorator<ISuggestMemoryService>('ISuggestMemories');\n\nexport interface ISuggestMemoryService {\n\treadonly _serviceBrand: undefined;\n\tmemorize(model: ITextModel, pos: IPosition, item: CompletionItem): void;\n\tselect(model: ITextModel, pos: IPosition, items: CompletionItem[]): number;\n}\n\nregisterSingleton(ISuggestMemoryService, SuggestMemoryService, InstantiationType.Delayed);\n"]}