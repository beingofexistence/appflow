{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/suggest/browser/wordContextKey.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IAOzF,IAAM,GAAG,GAAT,MAAM,GAAG;;iBAEC,UAAK,GAAG,IAAI,gBAAG,CAAoB,aAAa,EAAE,KAAK,CAAlD,AAAmD,CAAC;QAQzE,YACkB,CAAoB,EACjB,iBAAsB;YADzB,MAAC,GAAD,CAAC,CAAmB;YAJ9B,MAAC,GAAmB,KAAK,CAAC;YAQjC,IAAI,CAAC,CAAC,GAAU,KAAG,CAAY,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YAC/D,IAAI,CAAC,CAAC,GAAiB,IAAI,CAAC,CAAC,CAAO,wBAAwB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,sCAA4B,IAAI,IAAI,CAAC,CAAC,EAAQ,CAAC,CAAC;YAC9H,IAAI,CAAC,CAAC,EAAQ,CAAC;QAChB,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAe,OAAO,EAAE,CAAC;YAC/B,IAAI,CAAC,CAAC,EAAmB,OAAO,EAAE,CAAC;YACnC,IAAI,CAAC,CAAC,CAAQ,KAAK,EAAE,CAAC;QACvB,CAAC;QAEO,CAAC;YACR,oDAAoD;YACpD,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAO,SAAS,sCAA4B,KAAK,IAAI,CAAC;YAC5E,IAAI,IAAI,CAAC,CAAC,KAAY,OAAO,EAAE;gBAC9B,OAAO;aACP;YACD,IAAI,CAAC,CAAC,GAAU,OAAO,CAAC;YAExB,IAAI,IAAI,CAAC,CAAC,EAAS;gBAClB,MAAM,eAAe,GAAG,GAAG,EAAE;oBAC5B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAO,QAAQ,EAAE,EAAE;wBAC7B,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;wBACzB,OAAO;qBACP;oBACD,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAO,QAAQ,EAAE,CAAC;oBACtC,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAO,YAAY,EAAE,CAAC;oBAC9C,MAAM,IAAI,GAAG,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;oBACnE,IAAI,CAAC,IAAI,EAAE;wBACV,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;wBACzB,OAAO;qBACP;oBACD,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,CAAC;gBAC3E,CAAC,CAAC;gBACF,IAAI,CAAC,CAAC,GAAoB,IAAI,CAAC,CAAC,CAAO,0BAA0B,CAAC,eAAe,CAAC,CAAC;gBACnF,eAAe,EAAE,CAAC;aAElB;iBAAM,IAAI,IAAI,CAAC,CAAC,EAAmB;gBACnC,IAAI,CAAC,CAAC,CAAQ,KAAK,EAAE,CAAC;gBACtB,IAAI,CAAC,CAAC,CAAkB,OAAO,EAAE,CAAC;gBAClC,IAAI,CAAC,CAAC,GAAoB,SAAS,CAAC;aACpC;QACF,CAAC;;IAzDW,kBAAG;kBAAH,GAAG;QAYb,WAAA,gBAAG,CAAA;OAZO,GAAG,CA0Df","file":"wordContextKey.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\n\nexport class WordContextKey {\n\n\tstatic readonly AtEnd = new RawContextKey<boolean>('atEndOfWord', false);\n\n\tprivate readonly _ckAtEnd: IContextKey<boolean>;\n\tprivate readonly _configListener: IDisposable;\n\n\tprivate _enabled: boolean = false;\n\tprivate _selectionListener?: IDisposable;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\n\t\tthis._ckAtEnd = WordContextKey.AtEnd.bindTo(contextKeyService);\n\t\tthis._configListener = this._editor.onDidChangeConfiguration(e => e.hasChanged(EditorOption.tabCompletion) && this._update());\n\t\tthis._update();\n\t}\n\n\tdispose(): void {\n\t\tthis._configListener.dispose();\n\t\tthis._selectionListener?.dispose();\n\t\tthis._ckAtEnd.reset();\n\t}\n\n\tprivate _update(): void {\n\t\t// only update this when tab completions are enabled\n\t\tconst enabled = this._editor.getOption(EditorOption.tabCompletion) === 'on';\n\t\tif (this._enabled === enabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis._enabled = enabled;\n\n\t\tif (this._enabled) {\n\t\t\tconst checkForWordEnd = () => {\n\t\t\t\tif (!this._editor.hasModel()) {\n\t\t\t\t\tthis._ckAtEnd.set(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst model = this._editor.getModel();\n\t\t\t\tconst selection = this._editor.getSelection();\n\t\t\t\tconst word = model.getWordAtPosition(selection.getStartPosition());\n\t\t\t\tif (!word) {\n\t\t\t\t\tthis._ckAtEnd.set(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._ckAtEnd.set(word.endColumn === selection.getStartPosition().column);\n\t\t\t};\n\t\t\tthis._selectionListener = this._editor.onDidChangeCursorSelection(checkForWordEnd);\n\t\t\tcheckForWordEnd();\n\n\t\t} else if (this._selectionListener) {\n\t\t\tthis._ckAtEnd.reset();\n\t\t\tthis._selectionListener.dispose();\n\t\t\tthis._selectionListener = undefined;\n\t\t}\n\t}\n}\n"]}