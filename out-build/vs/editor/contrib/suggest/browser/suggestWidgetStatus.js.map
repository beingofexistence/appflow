{"version":3,"sources":["vs/editor/contrib/suggest/browser/suggestWidgetStatus.ts"],"names":[],"mappings":"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","file":"suggestWidgetStatus.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { ActionBar, IActionViewItemProvider } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IAction } from 'vs/base/common/actions';\nimport { ResolvedKeybinding } from 'vs/base/common/keybindings';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { MenuEntryActionViewItem } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { IMenuService, MenuId, MenuItemAction } from 'vs/platform/actions/common/actions';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\n\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n\n\tprotected override updateLabel() {\n\t\tconst kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n\t\tif (!kb) {\n\t\t\treturn super.updateLabel();\n\t\t}\n\t\tif (this.label) {\n\t\t\tthis.label.textContent = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', this._action.label, StatusBarViewItem.symbolPrintEnter(kb));\n\t\t}\n\t}\n\n\tstatic symbolPrintEnter(kb: ResolvedKeybinding) {\n\t\treturn kb.getLabel()?.replace(/\\benter\\b/gi, '\\u23CE');\n\t}\n}\n\nexport class SuggestWidgetStatus {\n\n\treadonly element: HTMLElement;\n\n\tprivate readonly _leftActions: ActionBar;\n\tprivate readonly _rightActions: ActionBar;\n\tprivate readonly _menuDisposables = new DisposableStore();\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate readonly _menuId: MenuId,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IMenuService private _menuService: IMenuService,\n\t\t@IContextKeyService private _contextKeyService: IContextKeyService,\n\t) {\n\t\tthis.element = dom.append(container, dom.$('.suggest-status-bar'));\n\n\t\tconst actionViewItemProvider = <IActionViewItemProvider>(action => {\n\t\t\treturn action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\n\t\t});\n\t\tthis._leftActions = new ActionBar(this.element, { actionViewItemProvider });\n\t\tthis._rightActions = new ActionBar(this.element, { actionViewItemProvider });\n\n\t\tthis._leftActions.domNode.classList.add('left');\n\t\tthis._rightActions.domNode.classList.add('right');\n\t}\n\n\tdispose(): void {\n\t\tthis._menuDisposables.dispose();\n\t\tthis._leftActions.dispose();\n\t\tthis._rightActions.dispose();\n\t\tthis.element.remove();\n\t}\n\n\tshow(): void {\n\t\tconst menu = this._menuService.createMenu(this._menuId, this._contextKeyService);\n\t\tconst renderMenu = () => {\n\t\t\tconst left: IAction[] = [];\n\t\t\tconst right: IAction[] = [];\n\t\t\tfor (const [group, actions] of menu.getActions()) {\n\t\t\t\tif (group === 'left') {\n\t\t\t\t\tleft.push(...actions);\n\t\t\t\t} else {\n\t\t\t\t\tright.push(...actions);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._leftActions.clear();\n\t\t\tthis._leftActions.push(left);\n\t\t\tthis._rightActions.clear();\n\t\t\tthis._rightActions.push(right);\n\t\t};\n\t\tthis._menuDisposables.add(menu.onDidChange(() => renderMenu()));\n\t\tthis._menuDisposables.add(menu);\n\t}\n\n\thide(): void {\n\t\tthis._menuDisposables.clear();\n\t}\n}\n"]}