{"version":3,"sources":["vs/editor/contrib/suggest/browser/suggest.ts"],"names":[],"mappings":"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","file":"suggest.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CancellationError, isCancellationError, onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { FuzzyScore } from 'vs/base/common/filters';\nimport { DisposableStore, IDisposable, isDisposable } from 'vs/base/common/lifecycle';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { assertType } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport * as languages from 'vs/editor/common/languages';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { SnippetParser } from 'vs/editor/contrib/snippet/browser/snippetParser';\nimport { localize } from 'vs/nls';\nimport { MenuId } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/languageFeatureRegistry';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { historyNavigationVisible } from 'vs/platform/history/browser/contextScopedHistoryWidget';\nimport { InternalQuickSuggestionsOptions, QuickSuggestionsValue } from 'vs/editor/common/config/editorOptions';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { StandardTokenType } from 'vs/editor/common/encodedTokenAttributes';\n\nexport const Context = {\n\tVisible: historyNavigationVisible,\n\tHasFocusedSuggestion: new RawContextKey<boolean>('suggestWidgetHasFocusedSuggestion', false, localize('suggestWidgetHasSelection', \"Whether any suggestion is focused\")),\n\tDetailsVisible: new RawContextKey<boolean>('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\n\tMultipleSuggestions: new RawContextKey<boolean>('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\n\tMakesTextEdit: new RawContextKey<boolean>('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\n\tAcceptSuggestionsOnEnter: new RawContextKey<boolean>('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\n\tHasInsertAndReplaceRange: new RawContextKey<boolean>('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\n\tInsertMode: new RawContextKey<'insert' | 'replace'>('suggestionInsertMode', undefined, { type: 'string', description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\") }),\n\tCanResolve: new RawContextKey<boolean>('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\")),\n};\n\nexport const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\n\nexport class CompletionItem {\n\n\t_brand!: 'ISuggestionItem';\n\n\t//\n\treadonly editStart: IPosition;\n\treadonly editInsertEnd: IPosition;\n\treadonly editReplaceEnd: IPosition;\n\n\t//\n\treadonly textLabel: string;\n\n\t// perf\n\treadonly labelLow: string;\n\treadonly sortTextLow?: string;\n\treadonly filterTextLow?: string;\n\n\t// validation\n\treadonly isInvalid: boolean = false;\n\n\t// sorting, filtering\n\tscore: FuzzyScore = FuzzyScore.Default;\n\tdistance: number = 0;\n\tidx?: number;\n\tword?: string;\n\n\t// instrumentation\n\treadonly extensionId?: ExtensionIdentifier;\n\n\t// resolving\n\tprivate _resolveDuration?: number;\n\tprivate _resolveCache?: Promise<void>;\n\n\tconstructor(\n\t\treadonly position: IPosition,\n\t\treadonly completion: languages.CompletionItem,\n\t\treadonly container: languages.CompletionList,\n\t\treadonly provider: languages.CompletionItemProvider,\n\t) {\n\t\tthis.textLabel = typeof completion.label === 'string'\n\t\t\t? completion.label\n\t\t\t: completion.label?.label;\n\n\t\t// ensure lower-variants (perf)\n\t\tthis.labelLow = this.textLabel.toLowerCase();\n\n\t\t// validate label\n\t\tthis.isInvalid = !this.textLabel;\n\n\t\tthis.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\n\t\tthis.filterTextLow = completion.filterText && completion.filterText.toLowerCase();\n\n\t\tthis.extensionId = completion.extensionId;\n\n\t\t// normalize ranges\n\t\tif (Range.isIRange(completion.range)) {\n\t\t\tthis.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\n\t\t\tthis.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n\t\t\tthis.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n\n\t\t\t// validate range\n\t\t\tthis.isInvalid = this.isInvalid\n\t\t\t\t|| Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\n\n\t\t} else {\n\t\t\tthis.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\n\t\t\tthis.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\n\t\t\tthis.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);\n\n\t\t\t// validate ranges\n\t\t\tthis.isInvalid = this.isInvalid\n\t\t\t\t|| Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace)\n\t\t\t\t|| completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber\n\t\t\t\t|| completion.range.insert.startColumn !== completion.range.replace.startColumn;\n\t\t}\n\n\t\t// create the suggestion resolver\n\t\tif (typeof provider.resolveCompletionItem !== 'function') {\n\t\t\tthis._resolveCache = Promise.resolve();\n\t\t\tthis._resolveDuration = 0;\n\t\t}\n\t}\n\n\t// ---- resolving\n\n\tget isResolved(): boolean {\n\t\treturn this._resolveDuration !== undefined;\n\t}\n\n\tget resolveDuration(): number {\n\t\treturn this._resolveDuration !== undefined ? this._resolveDuration : -1;\n\t}\n\n\tasync resolve(token: CancellationToken) {\n\t\tif (!this._resolveCache) {\n\t\t\tconst sub = token.onCancellationRequested(() => {\n\t\t\t\tthis._resolveCache = undefined;\n\t\t\t\tthis._resolveDuration = undefined;\n\t\t\t});\n\t\t\tconst sw = new StopWatch(true);\n\t\t\tthis._resolveCache = Promise.resolve(this.provider.resolveCompletionItem!(this.completion, token)).then(value => {\n\t\t\t\tObject.assign(this.completion, value);\n\t\t\t\tthis._resolveDuration = sw.elapsed();\n\t\t\t}, err => {\n\t\t\t\tif (isCancellationError(err)) {\n\t\t\t\t\t// the IPC queue will reject the request with the\n\t\t\t\t\t// cancellation error -> reset cached\n\t\t\t\t\tthis._resolveCache = undefined;\n\t\t\t\t\tthis._resolveDuration = undefined;\n\t\t\t\t}\n\t\t\t}).finally(() => {\n\t\t\t\tsub.dispose();\n\t\t\t});\n\t\t}\n\t\treturn this._resolveCache;\n\t}\n}\n\nexport const enum SnippetSortOrder {\n\tTop, Inline, Bottom\n}\n\nexport class CompletionOptions {\n\n\tstatic readonly default = new CompletionOptions();\n\n\tconstructor(\n\t\treadonly snippetSortOrder = SnippetSortOrder.Bottom,\n\t\treadonly kindFilter = new Set<languages.CompletionItemKind>(),\n\t\treadonly providerFilter = new Set<languages.CompletionItemProvider>(),\n\t\treadonly providerItemsToReuse: ReadonlyMap<languages.CompletionItemProvider, CompletionItem[]> = new Map<languages.CompletionItemProvider, CompletionItem[]>(),\n\t\treadonly showDeprecated = true\n\t) { }\n}\n\nlet _snippetSuggestSupport: languages.CompletionItemProvider;\n\nexport function getSnippetSuggestSupport(): languages.CompletionItemProvider {\n\treturn _snippetSuggestSupport;\n}\n\nexport function setSnippetSuggestSupport(support: languages.CompletionItemProvider): languages.CompletionItemProvider {\n\tconst old = _snippetSuggestSupport;\n\t_snippetSuggestSupport = support;\n\treturn old;\n}\n\nexport interface CompletionDurationEntry {\n\treadonly providerName: string;\n\treadonly elapsedProvider: number;\n\treadonly elapsedOverall: number;\n}\n\nexport interface CompletionDurations {\n\treadonly entries: readonly CompletionDurationEntry[];\n\treadonly elapsed: number;\n}\n\nexport class CompletionItemModel {\n\tconstructor(\n\t\treadonly items: CompletionItem[],\n\t\treadonly needsClipboard: boolean,\n\t\treadonly durations: CompletionDurations,\n\t\treadonly disposable: IDisposable,\n\t) { }\n}\n\nexport async function provideSuggestionItems(\n\tregistry: LanguageFeatureRegistry<languages.CompletionItemProvider>,\n\tmodel: ITextModel,\n\tposition: Position,\n\toptions: CompletionOptions = CompletionOptions.default,\n\tcontext: languages.CompletionContext = { triggerKind: languages.CompletionTriggerKind.Invoke },\n\ttoken: CancellationToken = CancellationToken.None\n): Promise<CompletionItemModel> {\n\n\tconst sw = new StopWatch();\n\tposition = position.clone();\n\n\tconst word = model.getWordAtPosition(position);\n\tconst defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\n\tconst defaultRange = { replace: defaultReplaceRange, insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column) };\n\n\tconst result: CompletionItem[] = [];\n\tconst disposables = new DisposableStore();\n\tconst durations: CompletionDurationEntry[] = [];\n\tlet needsClipboard = false;\n\n\tconst onCompletionList = (provider: languages.CompletionItemProvider, container: languages.CompletionList | null | undefined, sw: StopWatch): boolean => {\n\t\tlet didAddResult = false;\n\t\tif (!container) {\n\t\t\treturn didAddResult;\n\t\t}\n\t\tfor (const suggestion of container.suggestions) {\n\t\t\tif (!options.kindFilter.has(suggestion.kind)) {\n\t\t\t\t// skip if not showing deprecated suggestions\n\t\t\t\tif (!options.showDeprecated && suggestion?.tags?.includes(languages.CompletionItemTag.Deprecated)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// fill in default range when missing\n\t\t\t\tif (!suggestion.range) {\n\t\t\t\t\tsuggestion.range = defaultRange;\n\t\t\t\t}\n\t\t\t\t// fill in default sortText when missing\n\t\t\t\tif (!suggestion.sortText) {\n\t\t\t\t\tsuggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;\n\t\t\t\t}\n\t\t\t\tif (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & languages.CompletionItemInsertTextRule.InsertAsSnippet) {\n\t\t\t\t\tneedsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\n\t\t\t\t}\n\t\t\t\tresult.push(new CompletionItem(position, suggestion, container, provider));\n\t\t\t\tdidAddResult = true;\n\t\t\t}\n\t\t}\n\t\tif (isDisposable(container)) {\n\t\t\tdisposables.add(container);\n\t\t}\n\t\tdurations.push({\n\t\t\tproviderName: provider._debugDisplayName ?? 'unknown_provider', elapsedProvider: container.duration ?? -1, elapsedOverall: sw.elapsed()\n\t\t});\n\t\treturn didAddResult;\n\t};\n\n\t// ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\n\t// do so - no snippet filter, no special-providers-only request\n\tconst snippetCompletions = (async () => {\n\t\tif (!_snippetSuggestSupport || options.kindFilter.has(languages.CompletionItemKind.Snippet)) {\n\t\t\treturn;\n\t\t}\n\t\t// we have items from a previous session that we can reuse\n\t\tconst reuseItems = options.providerItemsToReuse.get(_snippetSuggestSupport);\n\t\tif (reuseItems) {\n\t\t\treuseItems.forEach(item => result.push(item));\n\t\t\treturn;\n\t\t}\n\t\tif (options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport)) {\n\t\t\treturn;\n\t\t}\n\t\tconst sw = new StopWatch();\n\t\tconst list = await _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\n\t\tonCompletionList(_snippetSuggestSupport, list, sw);\n\t})();\n\n\t// add suggestions from contributed providers - providers are ordered in groups of\n\t// equal score and once a group produces a result the process stops\n\t// get provider groups, always add snippet suggestion provider\n\tfor (const providerGroup of registry.orderedGroups(model)) {\n\n\t\t// for each support in the group ask for suggestions\n\t\tlet didAddResult = false;\n\t\tawait Promise.all(providerGroup.map(async provider => {\n\t\t\t// we have items from a previous session that we can reuse\n\t\t\tif (options.providerItemsToReuse.has(provider)) {\n\t\t\t\tconst items = options.providerItemsToReuse.get(provider)!;\n\t\t\t\titems.forEach(item => result.push(item));\n\t\t\t\tdidAddResult = didAddResult || items.length > 0;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check if this provider is filtered out\n\t\t\tif (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst sw = new StopWatch();\n\t\t\t\tconst list = await provider.provideCompletionItems(model, position, context, token);\n\t\t\t\tdidAddResult = onCompletionList(provider, list, sw) || didAddResult;\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedExternalError(err);\n\t\t\t}\n\t\t}));\n\n\t\tif (didAddResult || token.isCancellationRequested) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tawait snippetCompletions;\n\n\tif (token.isCancellationRequested) {\n\t\tdisposables.dispose();\n\t\treturn Promise.reject<any>(new CancellationError());\n\t}\n\n\treturn new CompletionItemModel(\n\t\tresult.sort(getSuggestionComparator(options.snippetSortOrder)),\n\t\tneedsClipboard,\n\t\t{ entries: durations, elapsed: sw.elapsed() },\n\t\tdisposables,\n\t);\n}\n\n\nfunction defaultComparator(a: CompletionItem, b: CompletionItem): number {\n\t// check with 'sortText'\n\tif (a.sortTextLow && b.sortTextLow) {\n\t\tif (a.sortTextLow < b.sortTextLow) {\n\t\t\treturn -1;\n\t\t} else if (a.sortTextLow > b.sortTextLow) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\t// check with 'label'\n\tif (a.textLabel < b.textLabel) {\n\t\treturn -1;\n\t} else if (a.textLabel > b.textLabel) {\n\t\treturn 1;\n\t}\n\t// check with 'type'\n\treturn a.completion.kind - b.completion.kind;\n}\n\nfunction snippetUpComparator(a: CompletionItem, b: CompletionItem): number {\n\tif (a.completion.kind !== b.completion.kind) {\n\t\tif (a.completion.kind === languages.CompletionItemKind.Snippet) {\n\t\t\treturn -1;\n\t\t} else if (b.completion.kind === languages.CompletionItemKind.Snippet) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn defaultComparator(a, b);\n}\n\nfunction snippetDownComparator(a: CompletionItem, b: CompletionItem): number {\n\tif (a.completion.kind !== b.completion.kind) {\n\t\tif (a.completion.kind === languages.CompletionItemKind.Snippet) {\n\t\t\treturn 1;\n\t\t} else if (b.completion.kind === languages.CompletionItemKind.Snippet) {\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn defaultComparator(a, b);\n}\n\ninterface Comparator<T> { (a: T, b: T): number }\nconst _snippetComparators = new Map<SnippetSortOrder, Comparator<CompletionItem>>();\n_snippetComparators.set(SnippetSortOrder.Top, snippetUpComparator);\n_snippetComparators.set(SnippetSortOrder.Bottom, snippetDownComparator);\n_snippetComparators.set(SnippetSortOrder.Inline, defaultComparator);\n\nexport function getSuggestionComparator(snippetConfig: SnippetSortOrder): (a: CompletionItem, b: CompletionItem) => number {\n\treturn _snippetComparators.get(snippetConfig)!;\n}\n\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', async (accessor, ...args: [URI, IPosition, string?, number?]) => {\n\tconst [uri, position, triggerCharacter, maxItemsToResolve] = args;\n\tassertType(URI.isUri(uri));\n\tassertType(Position.isIPosition(position));\n\tassertType(typeof triggerCharacter === 'string' || !triggerCharacter);\n\tassertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\n\n\tconst { completionProvider } = accessor.get(ILanguageFeaturesService);\n\tconst ref = await accessor.get(ITextModelService).createModelReference(uri);\n\ttry {\n\n\t\tconst result: languages.CompletionList = {\n\t\t\tincomplete: false,\n\t\t\tsuggestions: []\n\t\t};\n\n\t\tconst resolving: Promise<any>[] = [];\n\t\tconst actualPosition = ref.object.textEditorModel.validatePosition(position);\n\t\tconst completions = await provideSuggestionItems(completionProvider, ref.object.textEditorModel, actualPosition, undefined, { triggerCharacter: triggerCharacter ?? undefined, triggerKind: triggerCharacter ? languages.CompletionTriggerKind.TriggerCharacter : languages.CompletionTriggerKind.Invoke });\n\t\tfor (const item of completions.items) {\n\t\t\tif (resolving.length < (maxItemsToResolve ?? 0)) {\n\t\t\t\tresolving.push(item.resolve(CancellationToken.None));\n\t\t\t}\n\t\t\tresult.incomplete = result.incomplete || item.container.incomplete;\n\t\t\tresult.suggestions.push(item.completion);\n\t\t}\n\n\t\ttry {\n\t\t\tawait Promise.all(resolving);\n\t\t\treturn result;\n\t\t} finally {\n\t\t\tsetTimeout(() => completions.disposable.dispose(), 100);\n\t\t}\n\n\t} finally {\n\t\tref.dispose();\n\t}\n\n});\n\ninterface SuggestController extends IEditorContribution {\n\ttriggerSuggest(onlyFrom?: Set<languages.CompletionItemProvider>, auto?: boolean, noFilter?: boolean): void;\n}\n\nexport function showSimpleSuggestions(editor: ICodeEditor, provider: languages.CompletionItemProvider) {\n\teditor.getContribution<SuggestController>('editor.contrib.suggestController')?.triggerSuggest(\n\t\tnew Set<languages.CompletionItemProvider>().add(provider), undefined, true\n\t);\n}\n\nexport interface ISuggestItemPreselector {\n\t/**\n\t * The preselector with highest priority is asked first.\n\t*/\n\treadonly priority: number;\n\n\t/**\n\t * Is called to preselect a suggest item.\n\t * When -1 is returned, item preselectors with lower priority are asked.\n\t*/\n\tselect(model: ITextModel, pos: IPosition, items: CompletionItem[]): number | -1;\n}\n\n\nexport abstract class QuickSuggestionsOptions {\n\n\tstatic isAllOff(config: InternalQuickSuggestionsOptions): boolean {\n\t\treturn config.other === 'off' && config.comments === 'off' && config.strings === 'off';\n\t}\n\n\tstatic isAllOn(config: InternalQuickSuggestionsOptions): boolean {\n\t\treturn config.other === 'on' && config.comments === 'on' && config.strings === 'on';\n\t}\n\n\tstatic valueFor(config: InternalQuickSuggestionsOptions, tokenType: StandardTokenType): QuickSuggestionsValue {\n\t\tswitch (tokenType) {\n\t\t\tcase StandardTokenType.Comment: return config.comments;\n\t\t\tcase StandardTokenType.String: return config.strings;\n\t\t\tdefault: return config.other;\n\t\t}\n\t}\n}\n"]}