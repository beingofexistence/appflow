{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/suggest/browser/suggestCommitCharacters.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG,MAAa,GAAG;QASf,YAAY,MAAmB,EAAE,MAAW,EAAY,KAAU,EAAW,MAA8C;YAP1G,MAAC,GAAc,IAAI,eAAG,EAAc,CAAC;YASrD,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;gBAC5C,IAAI,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACzC,IAAI,CAAC,KAAK,EAAE,CAAC;iBACb;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;gBAC3C,IAAI,CAAC,KAAK,EAAE,CAAC;YACd,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAO,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC;YACrF,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAQ,IAAI,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;YAE1D,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;gBAC9C,IAAI,IAAI,CAAC,CAAC,IAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,KAAK,uBAAe,EAAE;oBACrE,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAC5C,IAAI,IAAI,CAAC,CAAC,CAAO,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,SAAS,wDAAgD,EAAE;wBAC9G,MAAM,CAAC,IAAI,CAAC,CAAC,CAAO,IAAI,CAAC,CAAC;qBAC1B;iBACD;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,CAAC,CAAO,QAAyC;YACxD,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAA,YAAG,EAAa,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE;gBAC7E,kCAAkC;gBAClC,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,OAAO;aACP;YAED,IAAI,IAAI,CAAC,CAAC,IAAU,IAAI,CAAC,CAAC,CAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,EAAE;gBAC7D,sBAAsB;gBACtB,OAAO;aACP;YAED,sCAAsC;YACtC,MAAM,gBAAgB,GAAG,IAAI,yBAAG,EAAW,CAAC;YAC5C,KAAK,MAAM,EAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE;gBAC3D,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClB,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvC;aACD;YACD,IAAI,CAAC,CAAC,GAAS,EAAE,gBAAgB,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;QACrD,CAAC;QAED,KAAK;YACJ,IAAI,CAAC,CAAC,GAAS,SAAS,CAAC;QAC1B,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAY,OAAO,EAAE,CAAC;QAC7B,CAAC;KACD;IA/DD,kBA+DC","file":"suggestCommitCharacters.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { CharacterSet } from 'vs/editor/common/core/characterClassifier';\nimport { State, SuggestModel } from 'vs/editor/contrib/suggest/browser/suggestModel';\nimport { ISelectedSuggestion, SuggestWidget } from './suggestWidget';\n\nexport class CommitCharacterController {\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate _active?: {\n\t\treadonly acceptCharacters: CharacterSet;\n\t\treadonly item: ISelectedSuggestion;\n\t};\n\n\tconstructor(editor: ICodeEditor, widget: SuggestWidget, model: SuggestModel, accept: (selected: ISelectedSuggestion) => any) {\n\n\t\tthis._disposables.add(model.onDidSuggest(e => {\n\t\t\tif (e.completionModel.items.length === 0) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}));\n\t\tthis._disposables.add(model.onDidCancel(e => {\n\t\t\tthis.reset();\n\t\t}));\n\n\t\tthis._disposables.add(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\n\t\tthis._disposables.add(widget.onDidFocus(this._onItem, this));\n\t\tthis._disposables.add(widget.onDidHide(this.reset, this));\n\n\t\tthis._disposables.add(editor.onWillType(text => {\n\t\t\tif (this._active && !widget.isFrozen() && model.state !== State.Idle) {\n\t\t\t\tconst ch = text.charCodeAt(text.length - 1);\n\t\t\t\tif (this._active.acceptCharacters.has(ch) && editor.getOption(EditorOption.acceptSuggestionOnCommitCharacter)) {\n\t\t\t\t\taccept(this._active.item);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onItem(selected: ISelectedSuggestion | undefined): void {\n\t\tif (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\n\t\t\t// no item or no commit characters\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._active && this._active.item.item === selected.item) {\n\t\t\t// still the same item\n\t\t\treturn;\n\t\t}\n\n\t\t// keep item and its commit characters\n\t\tconst acceptCharacters = new CharacterSet();\n\t\tfor (const ch of selected.item.completion.commitCharacters) {\n\t\t\tif (ch.length > 0) {\n\t\t\t\tacceptCharacters.add(ch.charCodeAt(0));\n\t\t\t}\n\t\t}\n\t\tthis._active = { acceptCharacters, item: selected };\n\t}\n\n\treset(): void {\n\t\tthis._active = undefined;\n\t}\n\n\tdispose() {\n\t\tthis._disposables.dispose();\n\t}\n}\n"]}