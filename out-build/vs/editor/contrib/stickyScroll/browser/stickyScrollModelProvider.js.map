{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/stickyScroll/browser/stickyScrollModelProvider.ts"],"names":[],"mappings":"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","file":"stickyScrollModelProvider.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { OutlineElement, OutlineGroup, OutlineModel } from 'vs/editor/contrib/documentSymbols/browser/outlineModel';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CancelablePromise, createCancelablePromise, Delayer } from 'vs/base/common/async';\nimport { FoldingController, RangesLimitReporter } from 'vs/editor/contrib/folding/browser/folding';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { SyntaxRangeProvider } from 'vs/editor/contrib/folding/browser/syntaxRangeProvider';\nimport { IndentRangeProvider } from 'vs/editor/contrib/folding/browser/indentRangeProvider';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { FoldingRegions } from 'vs/editor/contrib/folding/browser/foldingRanges';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { StickyElement, StickyModel, StickyRange } from 'vs/editor/contrib/stickyScroll/browser/stickyScrollElement';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/languageFeatureRegistry';\n\nenum ModelProvider {\n\tOUTLINE_MODEL = 'outlineModel',\n\tFOLDING_PROVIDER_MODEL = 'foldingProviderModel',\n\tINDENTATION_MODEL = 'indentationModel'\n}\n\nenum Status {\n\tVALID,\n\tINVALID,\n\tCANCELED\n}\n\nexport interface IStickyModelProvider {\n\n\t/**\n\t * Method which updates the sticky model\n\t * @param textModel text-model of the editor\n\t * @param textModelVersionId text-model version ID\n\t * @param token cancellation token\n\t * @returns the sticky model\n\t */\n\tupdate(textModel: ITextModel, textModelVersionId: number, token: CancellationToken): Promise<StickyModel | null>;\n}\n\nexport class StickyModelProvider extends Disposable implements IStickyModelProvider {\n\n\tprivate _modelProviders: IStickyModelCandidateProvider<any>[] = [];\n\tprivate _modelPromise: CancelablePromise<any | null> | null = null;\n\tprivate _updateScheduler: Delayer<StickyModel | null> = this._register(new Delayer<StickyModel | null>(300));\n\tprivate readonly _updateOperation: DisposableStore = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILanguageConfigurationService readonly _languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILanguageFeaturesService readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\tdefaultModel: string\n\t) {\n\t\tsuper();\n\n\t\tconst stickyModelFromCandidateOutlineProvider = new StickyModelFromCandidateOutlineProvider(_languageFeaturesService);\n\t\tconst stickyModelFromSyntaxFoldingProvider = new StickyModelFromCandidateSyntaxFoldingProvider(this._editor, _languageFeaturesService);\n\t\tconst stickyModelFromIndentationFoldingProvider = new StickyModelFromCandidateIndentationFoldingProvider(this._editor, _languageConfigurationService);\n\n\t\tswitch (defaultModel) {\n\t\t\tcase ModelProvider.OUTLINE_MODEL:\n\t\t\t\tthis._modelProviders.push(stickyModelFromCandidateOutlineProvider);\n\t\t\t\tthis._modelProviders.push(stickyModelFromSyntaxFoldingProvider);\n\t\t\t\tthis._modelProviders.push(stickyModelFromIndentationFoldingProvider);\n\t\t\t\tbreak;\n\t\t\tcase ModelProvider.FOLDING_PROVIDER_MODEL:\n\t\t\t\tthis._modelProviders.push(stickyModelFromSyntaxFoldingProvider);\n\t\t\t\tthis._modelProviders.push(stickyModelFromIndentationFoldingProvider);\n\t\t\t\tbreak;\n\t\t\tcase ModelProvider.INDENTATION_MODEL:\n\t\t\t\tthis._modelProviders.push(stickyModelFromIndentationFoldingProvider);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate _cancelModelPromise(): void {\n\t\tif (this._modelPromise) {\n\t\t\tthis._modelPromise.cancel();\n\t\t\tthis._modelPromise = null;\n\t\t}\n\t}\n\n\tpublic async update(textModel: ITextModel, textModelVersionId: number, token: CancellationToken): Promise<StickyModel | null> {\n\n\t\tthis._updateOperation.clear();\n\t\tthis._updateOperation.add({\n\t\t\tdispose: () => {\n\t\t\t\tthis._cancelModelPromise();\n\t\t\t\tthis._updateScheduler.cancel();\n\t\t\t}\n\t\t});\n\t\tthis._cancelModelPromise();\n\n\t\treturn await this._updateScheduler.trigger(async () => {\n\n\t\t\tfor (const modelProvider of this._modelProviders) {\n\t\t\t\tconst { statusPromise, modelPromise } = modelProvider.computeStickyModel(\n\t\t\t\t\ttextModel,\n\t\t\t\t\ttextModelVersionId,\n\t\t\t\t\ttoken\n\t\t\t\t);\n\t\t\t\tthis._modelPromise = modelPromise;\n\t\t\t\tconst status = await statusPromise;\n\t\t\t\tif (this._modelPromise !== modelPromise) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase Status.CANCELED:\n\t\t\t\t\t\tthis._updateOperation.clear();\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tcase Status.VALID:\n\t\t\t\t\t\treturn modelProvider.stickyModel;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}).catch((error) => {\n\t\t\tonUnexpectedError(error);\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\ninterface IStickyModelCandidateProvider<T> {\n\tget stickyModel(): StickyModel | null;\n\n\tget provider(): LanguageFeatureRegistry<object> | null;\n\n\t/**\n\t * Method which computes the sticky model and returns a status to signal whether the sticky model has been successfully found\n\t * @param textmodel text-model of the editor\n\t * @param modelVersionId version ID of the text-model\n\t * @param token cancellation token\n\t * @returns a promise of a status indicating whether the sticky model has been successfully found as well as the model promise\n\t */\n\tcomputeStickyModel(textmodel: ITextModel, modelVersionId: number, token: CancellationToken): { statusPromise: Promise<Status> | Status; modelPromise: CancelablePromise<T | null> | null };\n}\n\nabstract class StickyModelCandidateProvider<T> implements IStickyModelCandidateProvider<T> {\n\n\tprotected _stickyModel: StickyModel | null = null;\n\n\tconstructor() { }\n\n\tget stickyModel(): StickyModel | null {\n\t\treturn this._stickyModel;\n\t}\n\n\tprivate _invalid(): Status {\n\t\tthis._stickyModel = null;\n\t\treturn Status.INVALID;\n\t}\n\n\tpublic abstract get provider(): LanguageFeatureRegistry<object> | null;\n\n\tpublic computeStickyModel(textModel: ITextModel, modelVersionId: number, token: CancellationToken): { statusPromise: Promise<Status> | Status; modelPromise: CancelablePromise<T | null> | null } {\n\t\tif (token.isCancellationRequested || !this.isProviderValid(textModel)) {\n\t\t\treturn { statusPromise: this._invalid(), modelPromise: null };\n\t\t}\n\t\tconst providerModelPromise = createCancelablePromise(token => this.createModelFromProvider(textModel, modelVersionId, token));\n\n\t\treturn {\n\t\t\tstatusPromise: providerModelPromise.then(providerModel => {\n\t\t\t\tif (!this.isModelValid(providerModel)) {\n\t\t\t\t\treturn this._invalid();\n\n\t\t\t\t}\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn Status.CANCELED;\n\t\t\t\t}\n\t\t\t\tthis._stickyModel = this.createStickyModel(textModel, modelVersionId, token, providerModel);\n\t\t\t\treturn Status.VALID;\n\t\t\t}).then(undefined, (err) => {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\treturn Status.CANCELED;\n\t\t\t}),\n\t\t\tmodelPromise: providerModelPromise\n\t\t};\n\t}\n\n\t/**\n\t * Method which checks whether the model returned by the provider is valid and can be used to compute a sticky model.\n\t * This method by default returns true.\n\t * @param model model returned by the provider\n\t * @returns boolean indicating whether the model is valid\n\t */\n\tprotected isModelValid(model: any): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Method which checks whether the provider is valid before applying it to find the provider model.\n\t * This method by default returns true.\n\t * @param textModel text-model of the editor\n\t * @returns boolean indicating whether the provider is valid\n\t */\n\tprotected isProviderValid(textModel: ITextModel): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Abstract method which creates the model from the provider and returns the provider model\n\t * @param textModel\ttext-model of the editor\n\t * @param textModelVersionId text-model version ID\n\t * @param token cancellation token\n\t * @returns the model returned by the provider\n\t */\n\tprotected abstract createModelFromProvider(textModel: ITextModel, textModelVersionId: number, token: CancellationToken): Promise<T>;\n\n\t/**\n\t * Abstract method which computes the sticky model from the model returned by the provider and returns the sticky model\n\t * @param textModel text-model of the editor\n\t * @param textModelVersionId text-model version ID\n\t * @param token cancellation token\n\t * @param model model returned by the provider\n\t * @returns the sticky model\n\t */\n\tprotected abstract createStickyModel(textModel: ITextModel, textModelVersionId: number, token: CancellationToken, model: T): StickyModel;\n}\n\nclass StickyModelFromCandidateOutlineProvider extends StickyModelCandidateProvider<OutlineModel> {\n\n\tconstructor(@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService) {\n\t\tsuper();\n\t}\n\n\tpublic get provider(): LanguageFeatureRegistry<object> | null {\n\t\treturn this._languageFeaturesService.documentSymbolProvider;\n\t}\n\n\tprotected createModelFromProvider(textModel: ITextModel, modelVersionId: number, token: CancellationToken): Promise<OutlineModel> {\n\t\treturn OutlineModel.create(this._languageFeaturesService.documentSymbolProvider, textModel, token);\n\t}\n\n\tprotected createStickyModel(textModel: TextModel, modelVersionId: number, token: CancellationToken, model: OutlineModel): StickyModel {\n\t\tconst { stickyOutlineElement, providerID } = this._stickyModelFromOutlineModel(model, this._stickyModel?.outlineProviderId);\n\t\treturn new StickyModel(textModel.uri, modelVersionId, stickyOutlineElement, providerID);\n\t}\n\n\tprotected override isModelValid(model: OutlineModel): boolean {\n\t\treturn model && model.children.size > 0;\n\t}\n\n\tprivate _stickyModelFromOutlineModel(outlineModel: OutlineModel, preferredProvider: string | undefined): { stickyOutlineElement: StickyElement; providerID: string | undefined } {\n\n\t\tlet outlineElements: Map<string, OutlineElement>;\n\t\t// When several possible outline providers\n\t\tif (Iterable.first(outlineModel.children.values()) instanceof OutlineGroup) {\n\t\t\tconst provider = Iterable.find(outlineModel.children.values(), outlineGroupOfModel => outlineGroupOfModel.id === preferredProvider);\n\t\t\tif (provider) {\n\t\t\t\toutlineElements = provider.children;\n\t\t\t} else {\n\t\t\t\tlet tempID = '';\n\t\t\t\tlet maxTotalSumOfRanges = -1;\n\t\t\t\tlet optimalOutlineGroup = undefined;\n\t\t\t\tfor (const [_key, outlineGroup] of outlineModel.children.entries()) {\n\t\t\t\t\tconst totalSumRanges = this._findSumOfRangesOfGroup(outlineGroup);\n\t\t\t\t\tif (totalSumRanges > maxTotalSumOfRanges) {\n\t\t\t\t\t\toptimalOutlineGroup = outlineGroup;\n\t\t\t\t\t\tmaxTotalSumOfRanges = totalSumRanges;\n\t\t\t\t\t\ttempID = outlineGroup.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpreferredProvider = tempID;\n\t\t\t\toutlineElements = optimalOutlineGroup!.children;\n\t\t\t}\n\t\t} else {\n\t\t\toutlineElements = outlineModel.children as Map<string, OutlineElement>;\n\t\t}\n\t\tconst stickyChildren: StickyElement[] = [];\n\t\tconst outlineElementsArray = Array.from(outlineElements.values()).sort((element1, element2) => {\n\t\t\tconst range1: StickyRange = new StickyRange(element1.symbol.range.startLineNumber, element1.symbol.range.endLineNumber);\n\t\t\tconst range2: StickyRange = new StickyRange(element2.symbol.range.startLineNumber, element2.symbol.range.endLineNumber);\n\t\t\treturn this._comparator(range1, range2);\n\t\t});\n\t\tfor (const outlineElement of outlineElementsArray) {\n\t\t\tstickyChildren.push(this._stickyModelFromOutlineElement(outlineElement, outlineElement.symbol.selectionRange.startLineNumber));\n\t\t}\n\t\tconst stickyOutlineElement = new StickyElement(undefined, stickyChildren, undefined);\n\n\t\treturn {\n\t\t\tstickyOutlineElement: stickyOutlineElement,\n\t\t\tproviderID: preferredProvider\n\t\t};\n\t}\n\n\tprivate _stickyModelFromOutlineElement(outlineElement: OutlineElement, previousStartLine: number): StickyElement {\n\t\tconst children: StickyElement[] = [];\n\t\tfor (const child of outlineElement.children.values()) {\n\t\t\tif (child.symbol.selectionRange.startLineNumber !== child.symbol.range.endLineNumber) {\n\t\t\t\tif (child.symbol.selectionRange.startLineNumber !== previousStartLine) {\n\t\t\t\t\tchildren.push(this._stickyModelFromOutlineElement(child, child.symbol.selectionRange.startLineNumber));\n\t\t\t\t} else {\n\t\t\t\t\tfor (const subchild of child.children.values()) {\n\t\t\t\t\t\tchildren.push(this._stickyModelFromOutlineElement(subchild, child.symbol.selectionRange.startLineNumber));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchildren.sort((child1, child2) => this._comparator(child1.range!, child2.range!));\n\t\tconst range = new StickyRange(outlineElement.symbol.selectionRange.startLineNumber, outlineElement.symbol.range.endLineNumber);\n\t\treturn new StickyElement(range, children, undefined);\n\t}\n\n\tprivate _comparator(range1: StickyRange, range2: StickyRange): number {\n\t\tif (range1.startLineNumber !== range2.startLineNumber) {\n\t\t\treturn range1.startLineNumber - range2.startLineNumber;\n\t\t} else {\n\t\t\treturn range2.endLineNumber - range1.endLineNumber;\n\t\t}\n\t}\n\n\tprivate _findSumOfRangesOfGroup(outline: OutlineGroup | OutlineElement): number {\n\t\tlet res = 0;\n\t\tfor (const child of outline.children.values()) {\n\t\t\tres += this._findSumOfRangesOfGroup(child);\n\t\t}\n\t\tif (outline instanceof OutlineElement) {\n\t\t\treturn res + outline.symbol.range.endLineNumber - outline.symbol.selectionRange.startLineNumber;\n\t\t} else {\n\t\t\treturn res;\n\t\t}\n\t}\n\n}\n\nabstract class StickyModelFromCandidateFoldingProvider extends StickyModelCandidateProvider<FoldingRegions | null> {\n\n\tprotected _foldingLimitReporter: RangesLimitReporter;\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._foldingLimitReporter = new RangesLimitReporter(editor);\n\t}\n\n\tprotected createStickyModel(textModel: ITextModel, modelVersionId: number, token: CancellationToken, model: FoldingRegions): StickyModel {\n\t\tconst foldingElement = this._fromFoldingRegions(model);\n\t\treturn new StickyModel(textModel.uri, modelVersionId, foldingElement, undefined);\n\t}\n\n\tprotected override isModelValid(model: FoldingRegions): boolean {\n\t\treturn model !== null;\n\t}\n\n\n\tprivate _fromFoldingRegions(foldingRegions: FoldingRegions): StickyElement {\n\t\tconst length = foldingRegions.length;\n\t\tconst orderedStickyElements: StickyElement[] = [];\n\n\t\t// The root sticky outline element\n\t\tconst stickyOutlineElement = new StickyElement(\n\t\t\tundefined,\n\t\t\t[],\n\t\t\tundefined\n\t\t);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\t// Finding the parent index of the current range\n\t\t\tconst parentIndex = foldingRegions.getParentIndex(i);\n\n\t\t\tlet parentNode;\n\t\t\tif (parentIndex !== -1) {\n\t\t\t\t// Access the reference of the parent node\n\t\t\t\tparentNode = orderedStickyElements[parentIndex];\n\t\t\t} else {\n\t\t\t\t// In that case the parent node is the root node\n\t\t\t\tparentNode = stickyOutlineElement;\n\t\t\t}\n\n\t\t\tconst child = new StickyElement(\n\t\t\t\tnew StickyRange(foldingRegions.getStartLineNumber(i), foldingRegions.getEndLineNumber(i) + 1),\n\t\t\t\t[],\n\t\t\t\tparentNode\n\t\t\t);\n\t\t\tparentNode.children.push(child);\n\t\t\torderedStickyElements.push(child);\n\t\t}\n\t\treturn stickyOutlineElement;\n\t}\n}\n\nclass StickyModelFromCandidateIndentationFoldingProvider extends StickyModelFromCandidateFoldingProvider {\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService) {\n\t\tsuper(editor);\n\t}\n\n\tpublic get provider(): LanguageFeatureRegistry<object> | null {\n\t\treturn null;\n\t}\n\n\tprotected createModelFromProvider(textModel: TextModel, modelVersionId: number, token: CancellationToken): Promise<FoldingRegions> {\n\t\tconst provider = new IndentRangeProvider(textModel, this._languageConfigurationService, this._foldingLimitReporter);\n\t\treturn provider.compute(token);\n\t}\n}\n\nclass StickyModelFromCandidateSyntaxFoldingProvider extends StickyModelFromCandidateFoldingProvider {\n\n\tconstructor(editor: ICodeEditor,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService) {\n\t\tsuper(editor);\n\t}\n\n\tpublic get provider(): LanguageFeatureRegistry<object> | null {\n\t\treturn this._languageFeaturesService.foldingRangeProvider;\n\t}\n\n\tprotected override isProviderValid(textModel: TextModel): boolean {\n\t\tconst selectedProviders = FoldingController.getFoldingRangeProviders(this._languageFeaturesService, textModel);\n\t\treturn selectedProviders.length > 0;\n\t}\n\n\tprotected createModelFromProvider(textModel: TextModel, modelVersionId: number, token: CancellationToken): Promise<FoldingRegions | null> {\n\t\tconst selectedProviders = FoldingController.getFoldingRangeProviders(this._languageFeaturesService, textModel);\n\t\tconst provider = new SyntaxRangeProvider(textModel, selectedProviders, () => this.createModelFromProvider(textModel, modelVersionId, token), this._foldingLimitReporter, undefined);\n\t\treturn provider.compute(token);\n\t}\n}\n"]}