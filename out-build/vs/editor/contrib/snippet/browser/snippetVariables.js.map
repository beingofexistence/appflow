{"version":3,"sources":["vs/editor/contrib/snippet/browser/snippetVariables.ts"],"names":[],"mappings":"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","file":"snippetVariables.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport * as path from 'vs/base/common/path';\nimport { dirname } from 'vs/base/common/resources';\nimport { commonPrefixLength, getLeadingWhitespace, isFalsyOrWhitespace, splitLines } from 'vs/base/common/strings';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { Text, Variable, VariableResolver } from 'vs/editor/contrib/snippet/browser/snippetParser';\nimport { OvertypingCapturer } from 'vs/editor/contrib/suggest/browser/suggestOvertypingCapturer';\nimport * as nls from 'vs/nls';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { WORKSPACE_EXTENSION, isSingleFolderWorkspaceIdentifier, toWorkspaceIdentifier, IWorkspaceContextService, ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier, isEmptyWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\n\nexport const KnownSnippetVariableNames = Object.freeze<{ [key: string]: true }>({\n\t'CURRENT_YEAR': true,\n\t'CURRENT_YEAR_SHORT': true,\n\t'CURRENT_MONTH': true,\n\t'CURRENT_DATE': true,\n\t'CURRENT_HOUR': true,\n\t'CURRENT_MINUTE': true,\n\t'CURRENT_SECOND': true,\n\t'CURRENT_DAY_NAME': true,\n\t'CURRENT_DAY_NAME_SHORT': true,\n\t'CURRENT_MONTH_NAME': true,\n\t'CURRENT_MONTH_NAME_SHORT': true,\n\t'CURRENT_SECONDS_UNIX': true,\n\t'CURRENT_TIMEZONE_OFFSET': true,\n\t'SELECTION': true,\n\t'CLIPBOARD': true,\n\t'TM_SELECTED_TEXT': true,\n\t'TM_CURRENT_LINE': true,\n\t'TM_CURRENT_WORD': true,\n\t'TM_LINE_INDEX': true,\n\t'TM_LINE_NUMBER': true,\n\t'TM_FILENAME': true,\n\t'TM_FILENAME_BASE': true,\n\t'TM_DIRECTORY': true,\n\t'TM_FILEPATH': true,\n\t'CURSOR_INDEX': true, // 0-offset\n\t'CURSOR_NUMBER': true, // 1-offset\n\t'RELATIVE_FILEPATH': true,\n\t'BLOCK_COMMENT_START': true,\n\t'BLOCK_COMMENT_END': true,\n\t'LINE_COMMENT': true,\n\t'WORKSPACE_NAME': true,\n\t'WORKSPACE_FOLDER': true,\n\t'RANDOM': true,\n\t'RANDOM_HEX': true,\n\t'UUID': true\n});\n\nexport class CompositeSnippetVariableResolver implements VariableResolver {\n\n\tconstructor(private readonly _delegates: VariableResolver[]) {\n\t\t//\n\t}\n\n\tresolve(variable: Variable): string | undefined {\n\t\tfor (const delegate of this._delegates) {\n\t\t\tconst value = delegate.resolve(variable);\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport class SelectionBasedVariableResolver implements VariableResolver {\n\n\tconstructor(\n\t\tprivate readonly _model: ITextModel,\n\t\tprivate readonly _selection: Selection,\n\t\tprivate readonly _selectionIdx: number,\n\t\tprivate readonly _overtypingCapturer: OvertypingCapturer | undefined\n\t) {\n\t\t//\n\t}\n\n\tresolve(variable: Variable): string | undefined {\n\n\t\tconst { name } = variable;\n\n\t\tif (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {\n\t\t\tlet value = this._model.getValueInRange(this._selection) || undefined;\n\t\t\tlet isMultiline = this._selection.startLineNumber !== this._selection.endLineNumber;\n\n\t\t\t// If there was no selected text, try to get last overtyped text\n\t\t\tif (!value && this._overtypingCapturer) {\n\t\t\t\tconst info = this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);\n\t\t\t\tif (info) {\n\t\t\t\t\tvalue = info.value;\n\t\t\t\t\tisMultiline = info.multiline;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value && isMultiline && variable.snippet) {\n\t\t\t\t// Selection is a multiline string which we indentation we now\n\t\t\t\t// need to adjust. We compare the indentation of this variable\n\t\t\t\t// with the indentation at the editor position and add potential\n\t\t\t\t// extra indentation to the value\n\n\t\t\t\tconst line = this._model.getLineContent(this._selection.startLineNumber);\n\t\t\t\tconst lineLeadingWhitespace = getLeadingWhitespace(line, 0, this._selection.startColumn - 1);\n\n\t\t\t\tlet varLeadingWhitespace = lineLeadingWhitespace;\n\t\t\t\tvariable.snippet.walk(marker => {\n\t\t\t\t\tif (marker === variable) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (marker instanceof Text) {\n\t\t\t\t\t\tvarLeadingWhitespace = getLeadingWhitespace(splitLines(marker.value).pop()!);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tconst whitespaceCommonLength = commonPrefixLength(varLeadingWhitespace, lineLeadingWhitespace);\n\n\t\t\t\tvalue = value.replace(\n\t\t\t\t\t/(\\r\\n|\\r|\\n)(.*)/g,\n\t\t\t\t\t(m, newline, rest) => `${newline}${varLeadingWhitespace.substr(whitespaceCommonLength)}${rest}`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn value;\n\n\t\t} else if (name === 'TM_CURRENT_LINE') {\n\t\t\treturn this._model.getLineContent(this._selection.positionLineNumber);\n\n\t\t} else if (name === 'TM_CURRENT_WORD') {\n\t\t\tconst info = this._model.getWordAtPosition({\n\t\t\t\tlineNumber: this._selection.positionLineNumber,\n\t\t\t\tcolumn: this._selection.positionColumn\n\t\t\t});\n\t\t\treturn info && info.word || undefined;\n\n\t\t} else if (name === 'TM_LINE_INDEX') {\n\t\t\treturn String(this._selection.positionLineNumber - 1);\n\n\t\t} else if (name === 'TM_LINE_NUMBER') {\n\t\t\treturn String(this._selection.positionLineNumber);\n\n\t\t} else if (name === 'CURSOR_INDEX') {\n\t\t\treturn String(this._selectionIdx);\n\n\t\t} else if (name === 'CURSOR_NUMBER') {\n\t\t\treturn String(this._selectionIdx + 1);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport class ModelBasedVariableResolver implements VariableResolver {\n\n\tconstructor(\n\t\tprivate readonly _labelService: ILabelService,\n\t\tprivate readonly _model: ITextModel\n\t) {\n\t\t//\n\t}\n\n\tresolve(variable: Variable): string | undefined {\n\n\t\tconst { name } = variable;\n\n\t\tif (name === 'TM_FILENAME') {\n\t\t\treturn path.basename(this._model.uri.fsPath);\n\n\t\t} else if (name === 'TM_FILENAME_BASE') {\n\t\t\tconst name = path.basename(this._model.uri.fsPath);\n\t\t\tconst idx = name.lastIndexOf('.');\n\t\t\tif (idx <= 0) {\n\t\t\t\treturn name;\n\t\t\t} else {\n\t\t\t\treturn name.slice(0, idx);\n\t\t\t}\n\n\t\t} else if (name === 'TM_DIRECTORY') {\n\t\t\tif (path.dirname(this._model.uri.fsPath) === '.') {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn this._labelService.getUriLabel(dirname(this._model.uri));\n\n\t\t} else if (name === 'TM_FILEPATH') {\n\t\t\treturn this._labelService.getUriLabel(this._model.uri);\n\t\t} else if (name === 'RELATIVE_FILEPATH') {\n\t\t\treturn this._labelService.getUriLabel(this._model.uri, { relative: true, noPrefix: true });\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport interface IReadClipboardText {\n\t(): string | undefined;\n}\n\nexport class ClipboardBasedVariableResolver implements VariableResolver {\n\n\tconstructor(\n\t\tprivate readonly _readClipboardText: IReadClipboardText,\n\t\tprivate readonly _selectionIdx: number,\n\t\tprivate readonly _selectionCount: number,\n\t\tprivate readonly _spread: boolean\n\t) {\n\t\t//\n\t}\n\n\tresolve(variable: Variable): string | undefined {\n\t\tif (variable.name !== 'CLIPBOARD') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst clipboardText = this._readClipboardText();\n\t\tif (!clipboardText) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// `spread` is assigning each cursor a line of the clipboard\n\t\t// text whenever there the line count equals the cursor count\n\t\t// and when enabled\n\t\tif (this._spread) {\n\t\t\tconst lines = clipboardText.split(/\\r\\n|\\n|\\r/).filter(s => !isFalsyOrWhitespace(s));\n\t\t\tif (lines.length === this._selectionCount) {\n\t\t\t\treturn lines[this._selectionIdx];\n\t\t\t}\n\t\t}\n\t\treturn clipboardText;\n\t}\n}\nexport class CommentBasedVariableResolver implements VariableResolver {\n\tconstructor(\n\t\tprivate readonly _model: ITextModel,\n\t\tprivate readonly _selection: Selection,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService\n\t) {\n\t\t//\n\t}\n\tresolve(variable: Variable): string | undefined {\n\t\tconst { name } = variable;\n\t\tconst langId = this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber, this._selection.selectionStartColumn);\n\t\tconst config = this._languageConfigurationService.getLanguageConfiguration(langId).comments;\n\t\tif (!config) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (name === 'LINE_COMMENT') {\n\t\t\treturn config.lineCommentToken || undefined;\n\t\t} else if (name === 'BLOCK_COMMENT_START') {\n\t\t\treturn config.blockCommentStartToken || undefined;\n\t\t} else if (name === 'BLOCK_COMMENT_END') {\n\t\t\treturn config.blockCommentEndToken || undefined;\n\t\t}\n\t\treturn undefined;\n\t}\n}\nexport class TimeBasedVariableResolver implements VariableResolver {\n\n\tprivate static readonly dayNames = [nls.localize('Sunday', \"Sunday\"), nls.localize('Monday', \"Monday\"), nls.localize('Tuesday', \"Tuesday\"), nls.localize('Wednesday', \"Wednesday\"), nls.localize('Thursday', \"Thursday\"), nls.localize('Friday', \"Friday\"), nls.localize('Saturday', \"Saturday\")];\n\tprivate static readonly dayNamesShort = [nls.localize('SundayShort', \"Sun\"), nls.localize('MondayShort', \"Mon\"), nls.localize('TuesdayShort', \"Tue\"), nls.localize('WednesdayShort', \"Wed\"), nls.localize('ThursdayShort', \"Thu\"), nls.localize('FridayShort', \"Fri\"), nls.localize('SaturdayShort', \"Sat\")];\n\tprivate static readonly monthNames = [nls.localize('January', \"January\"), nls.localize('February', \"February\"), nls.localize('March', \"March\"), nls.localize('April', \"April\"), nls.localize('May', \"May\"), nls.localize('June', \"June\"), nls.localize('July', \"July\"), nls.localize('August', \"August\"), nls.localize('September', \"September\"), nls.localize('October', \"October\"), nls.localize('November', \"November\"), nls.localize('December', \"December\")];\n\tprivate static readonly monthNamesShort = [nls.localize('JanuaryShort', \"Jan\"), nls.localize('FebruaryShort', \"Feb\"), nls.localize('MarchShort', \"Mar\"), nls.localize('AprilShort', \"Apr\"), nls.localize('MayShort', \"May\"), nls.localize('JuneShort', \"Jun\"), nls.localize('JulyShort', \"Jul\"), nls.localize('AugustShort', \"Aug\"), nls.localize('SeptemberShort', \"Sep\"), nls.localize('OctoberShort', \"Oct\"), nls.localize('NovemberShort', \"Nov\"), nls.localize('DecemberShort', \"Dec\")];\n\n\tprivate readonly _date = new Date();\n\n\tresolve(variable: Variable): string | undefined {\n\t\tconst { name } = variable;\n\n\t\tif (name === 'CURRENT_YEAR') {\n\t\t\treturn String(this._date.getFullYear());\n\t\t} else if (name === 'CURRENT_YEAR_SHORT') {\n\t\t\treturn String(this._date.getFullYear()).slice(-2);\n\t\t} else if (name === 'CURRENT_MONTH') {\n\t\t\treturn String(this._date.getMonth().valueOf() + 1).padStart(2, '0');\n\t\t} else if (name === 'CURRENT_DATE') {\n\t\t\treturn String(this._date.getDate().valueOf()).padStart(2, '0');\n\t\t} else if (name === 'CURRENT_HOUR') {\n\t\t\treturn String(this._date.getHours().valueOf()).padStart(2, '0');\n\t\t} else if (name === 'CURRENT_MINUTE') {\n\t\t\treturn String(this._date.getMinutes().valueOf()).padStart(2, '0');\n\t\t} else if (name === 'CURRENT_SECOND') {\n\t\t\treturn String(this._date.getSeconds().valueOf()).padStart(2, '0');\n\t\t} else if (name === 'CURRENT_DAY_NAME') {\n\t\t\treturn TimeBasedVariableResolver.dayNames[this._date.getDay()];\n\t\t} else if (name === 'CURRENT_DAY_NAME_SHORT') {\n\t\t\treturn TimeBasedVariableResolver.dayNamesShort[this._date.getDay()];\n\t\t} else if (name === 'CURRENT_MONTH_NAME') {\n\t\t\treturn TimeBasedVariableResolver.monthNames[this._date.getMonth()];\n\t\t} else if (name === 'CURRENT_MONTH_NAME_SHORT') {\n\t\t\treturn TimeBasedVariableResolver.monthNamesShort[this._date.getMonth()];\n\t\t} else if (name === 'CURRENT_SECONDS_UNIX') {\n\t\t\treturn String(Math.floor(this._date.getTime() / 1000));\n\t\t} else if (name === 'CURRENT_TIMEZONE_OFFSET') {\n\t\t\tconst rawTimeOffset = this._date.getTimezoneOffset();\n\t\t\tconst sign = rawTimeOffset > 0 ? '-' : '+';\n\t\t\tconst hours = Math.trunc(Math.abs(rawTimeOffset / 60));\n\t\t\tconst hoursString = (hours < 10 ? '0' + hours : hours);\n\t\t\tconst minutes = Math.abs(rawTimeOffset) - hours * 60;\n\t\t\tconst minutesString = (minutes < 10 ? '0' + minutes : minutes);\n\t\t\treturn sign + hoursString + ':' + minutesString;\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport class WorkspaceBasedVariableResolver implements VariableResolver {\n\tconstructor(\n\t\tprivate readonly _workspaceService: IWorkspaceContextService | undefined,\n\t) {\n\t\t//\n\t}\n\n\tresolve(variable: Variable): string | undefined {\n\t\tif (!this._workspaceService) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst workspaceIdentifier = toWorkspaceIdentifier(this._workspaceService.getWorkspace());\n\t\tif (isEmptyWorkspaceIdentifier(workspaceIdentifier)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (variable.name === 'WORKSPACE_NAME') {\n\t\t\treturn this._resolveWorkspaceName(workspaceIdentifier);\n\t\t} else if (variable.name === 'WORKSPACE_FOLDER') {\n\t\t\treturn this._resoveWorkspacePath(workspaceIdentifier);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\tprivate _resolveWorkspaceName(workspaceIdentifier: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier): string | undefined {\n\t\tif (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n\t\t\treturn path.basename(workspaceIdentifier.uri.path);\n\t\t}\n\n\t\tlet filename = path.basename(workspaceIdentifier.configPath.path);\n\t\tif (filename.endsWith(WORKSPACE_EXTENSION)) {\n\t\t\tfilename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\n\t\t}\n\t\treturn filename;\n\t}\n\tprivate _resoveWorkspacePath(workspaceIdentifier: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier): string | undefined {\n\t\tif (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n\t\t\treturn normalizeDriveLetter(workspaceIdentifier.uri.fsPath);\n\t\t}\n\n\t\tconst filename = path.basename(workspaceIdentifier.configPath.path);\n\t\tlet folderpath = workspaceIdentifier.configPath.fsPath;\n\t\tif (folderpath.endsWith(filename)) {\n\t\t\tfolderpath = folderpath.substr(0, folderpath.length - filename.length - 1);\n\t\t}\n\t\treturn (folderpath ? normalizeDriveLetter(folderpath) : '/');\n\t}\n}\n\nexport class RandomBasedVariableResolver implements VariableResolver {\n\tresolve(variable: Variable): string | undefined {\n\t\tconst { name } = variable;\n\n\t\tif (name === 'RANDOM') {\n\t\t\treturn Math.random().toString().slice(-6);\n\t\t} else if (name === 'RANDOM_HEX') {\n\t\t\treturn Math.random().toString(16).slice(-6);\n\t\t} else if (name === 'UUID') {\n\t\t\treturn generateUuid();\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n"]}