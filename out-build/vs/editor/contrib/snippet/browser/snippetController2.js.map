{"version":3,"sources":["vs/editor/contrib/snippet/browser/snippetController2.ts"],"names":[],"mappings":"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","file":"snippetController2.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { assertType } from 'vs/base/common/types';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorCommand, EditorContributionInstantiation, registerEditorCommand, registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { CompletionItem, CompletionItemKind, CompletionItemProvider } from 'vs/editor/common/languages';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { Choice } from 'vs/editor/contrib/snippet/browser/snippetParser';\nimport { showSimpleSuggestions } from 'vs/editor/contrib/suggest/browser/suggest';\nimport { OvertypingCapturer } from 'vs/editor/contrib/suggest/browser/suggestOvertypingCapturer';\nimport { localize } from 'vs/nls';\nimport { ContextKeyExpr, IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ISnippetEdit, SnippetSession } from './snippetSession';\n\nexport interface ISnippetInsertOptions {\n\toverwriteBefore: number;\n\toverwriteAfter: number;\n\tadjustWhitespace: boolean;\n\tundoStopBefore: boolean;\n\tundoStopAfter: boolean;\n\tclipboardText: string | undefined;\n\tovertypingCapturer: OvertypingCapturer | undefined;\n}\n\nconst _defaultOptions: ISnippetInsertOptions = {\n\toverwriteBefore: 0,\n\toverwriteAfter: 0,\n\tundoStopBefore: true,\n\tundoStopAfter: true,\n\tadjustWhitespace: true,\n\tclipboardText: undefined,\n\tovertypingCapturer: undefined\n};\n\nexport class SnippetController2 implements IEditorContribution {\n\n\tpublic static readonly ID = 'snippetController2';\n\n\tstatic get(editor: ICodeEditor): SnippetController2 | null {\n\t\treturn editor.getContribution<SnippetController2>(SnippetController2.ID);\n\t}\n\n\tstatic readonly InSnippetMode = new RawContextKey('inSnippetMode', false, localize('inSnippetMode', \"Whether the editor in current in snippet mode\"));\n\tstatic readonly HasNextTabstop = new RawContextKey('hasNextTabstop', false, localize('hasNextTabstop', \"Whether there is a next tab stop when in snippet mode\"));\n\tstatic readonly HasPrevTabstop = new RawContextKey('hasPrevTabstop', false, localize('hasPrevTabstop', \"Whether there is a previous tab stop when in snippet mode\"));\n\n\tprivate readonly _inSnippet: IContextKey<boolean>;\n\tprivate readonly _hasNextTabstop: IContextKey<boolean>;\n\tprivate readonly _hasPrevTabstop: IContextKey<boolean>;\n\n\tprivate _session?: SnippetSession;\n\tprivate readonly _snippetListener = new DisposableStore();\n\tprivate _modelVersionId: number = -1;\n\tprivate _currentChoice?: Choice;\n\n\tprivate _choiceCompletions?: { provider: CompletionItemProvider; enable(): void; disable(): void };\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService,\n\t) {\n\t\tthis._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\n\t\tthis._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\n\t\tthis._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\n\t}\n\n\tdispose(): void {\n\t\tthis._inSnippet.reset();\n\t\tthis._hasPrevTabstop.reset();\n\t\tthis._hasNextTabstop.reset();\n\t\tthis._session?.dispose();\n\t\tthis._snippetListener.dispose();\n\t}\n\n\tapply(edits: ISnippetEdit[], opts?: Partial<ISnippetInsertOptions>) {\n\t\ttry {\n\t\t\tthis._doInsert(edits, typeof opts === 'undefined' ? _defaultOptions : { ..._defaultOptions, ...opts });\n\n\t\t} catch (e) {\n\t\t\tthis.cancel();\n\t\t\tthis._logService.error(e);\n\t\t\tthis._logService.error('snippet_error');\n\t\t\tthis._logService.error('insert_edits=', edits);\n\t\t\tthis._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\n\t\t}\n\t}\n\n\tinsert(\n\t\ttemplate: string,\n\t\topts?: Partial<ISnippetInsertOptions>\n\t): void {\n\t\t// this is here to find out more about the yet-not-understood\n\t\t// error that sometimes happens when we fail to inserted a nested\n\t\t// snippet\n\t\ttry {\n\t\t\tthis._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : { ..._defaultOptions, ...opts });\n\n\t\t} catch (e) {\n\t\t\tthis.cancel();\n\t\t\tthis._logService.error(e);\n\t\t\tthis._logService.error('snippet_error');\n\t\t\tthis._logService.error('insert_template=', template);\n\t\t\tthis._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\n\t\t}\n\t}\n\n\tprivate _doInsert(\n\t\ttemplate: string | ISnippetEdit[],\n\t\topts: ISnippetInsertOptions\n\t): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// don't listen while inserting the snippet\n\t\t// as that is the inflight state causing cancelation\n\t\tthis._snippetListener.clear();\n\n\t\tif (opts.undoStopBefore) {\n\t\t\tthis._editor.getModel().pushStackElement();\n\t\t}\n\n\t\t// don't merge\n\t\tif (this._session && typeof template !== 'string') {\n\t\t\tthis.cancel();\n\t\t}\n\n\t\tif (!this._session) {\n\t\t\tthis._modelVersionId = this._editor.getModel().getAlternativeVersionId();\n\t\t\tthis._session = new SnippetSession(this._editor, template, opts, this._languageConfigurationService);\n\t\t\tthis._session.insert();\n\t\t} else {\n\t\t\tassertType(typeof template === 'string');\n\t\t\tthis._session.merge(template, opts);\n\t\t}\n\n\t\tif (opts.undoStopAfter) {\n\t\t\tthis._editor.getModel().pushStackElement();\n\t\t}\n\n\t\t// regster completion item provider when there is any choice element\n\t\tif (this._session?.hasChoice) {\n\t\t\tconst provider: CompletionItemProvider = {\n\t\t\t\t_debugDisplayName: 'snippetChoiceCompletions',\n\t\t\t\tprovideCompletionItems: (model: ITextModel, position: Position) => {\n\t\t\t\t\tif (!this._session || model !== this._editor.getModel() || !Position.equals(this._editor.getPosition(), position)) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tconst { activeChoice } = this._session;\n\t\t\t\t\tif (!activeChoice || activeChoice.choice.options.length === 0) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst word = model.getValueInRange(activeChoice.range);\n\t\t\t\t\tconst isAnyOfOptions = Boolean(activeChoice.choice.options.find(o => o.value === word));\n\t\t\t\t\tconst suggestions: CompletionItem[] = [];\n\t\t\t\t\tfor (let i = 0; i < activeChoice.choice.options.length; i++) {\n\t\t\t\t\t\tconst option = activeChoice.choice.options[i];\n\t\t\t\t\t\tsuggestions.push({\n\t\t\t\t\t\t\tkind: CompletionItemKind.Value,\n\t\t\t\t\t\t\tlabel: option.value,\n\t\t\t\t\t\t\tinsertText: option.value,\n\t\t\t\t\t\t\tsortText: 'a'.repeat(i + 1),\n\t\t\t\t\t\t\trange: activeChoice.range,\n\t\t\t\t\t\t\tfilterText: isAnyOfOptions ? `${word}_${option.value}` : undefined,\n\t\t\t\t\t\t\tcommand: { id: 'jumpToNextSnippetPlaceholder', title: localize('next', 'Go to next placeholder...') }\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn { suggestions };\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst model = this._editor.getModel();\n\n\t\t\tlet registration: IDisposable | undefined;\n\t\t\tlet isRegistered = false;\n\t\t\tconst disable = () => {\n\t\t\t\tregistration?.dispose();\n\t\t\t\tisRegistered = false;\n\t\t\t};\n\n\t\t\tconst enable = () => {\n\t\t\t\tif (!isRegistered) {\n\t\t\t\t\tregistration = this._languageFeaturesService.completionProvider.register({\n\t\t\t\t\t\tlanguage: model.getLanguageId(),\n\t\t\t\t\t\tpattern: model.uri.fsPath,\n\t\t\t\t\t\tscheme: model.uri.scheme,\n\t\t\t\t\t\texclusive: true\n\t\t\t\t\t}, provider);\n\t\t\t\t\tthis._snippetListener.add(registration);\n\t\t\t\t\tisRegistered = true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._choiceCompletions = { provider, enable, disable };\n\t\t}\n\n\t\tthis._updateState();\n\n\t\tthis._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\n\t\tthis._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\n\t\tthis._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\n\t}\n\n\tprivate _updateState(): void {\n\t\tif (!this._session || !this._editor.hasModel()) {\n\t\t\t// canceled in the meanwhile\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\n\t\t\t// undo until the 'before' state happened\n\t\t\t// and makes use cancel snippet mode\n\t\t\treturn this.cancel();\n\t\t}\n\n\t\tif (!this._session.hasPlaceholder) {\n\t\t\t// don't listen for selection changes and don't\n\t\t\t// update context keys when the snippet is plain text\n\t\t\treturn this.cancel();\n\t\t}\n\n\t\tif (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\n\t\t\tthis._editor.getModel().pushStackElement();\n\t\t\treturn this.cancel();\n\t\t}\n\n\t\tthis._inSnippet.set(true);\n\t\tthis._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\n\t\tthis._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\n\n\t\tthis._handleChoice();\n\t}\n\n\tprivate _handleChoice(): void {\n\t\tif (!this._session || !this._editor.hasModel()) {\n\t\t\tthis._currentChoice = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tconst { activeChoice } = this._session;\n\t\tif (!activeChoice || !this._choiceCompletions) {\n\t\t\tthis._choiceCompletions?.disable();\n\t\t\tthis._currentChoice = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentChoice !== activeChoice.choice) {\n\t\t\tthis._currentChoice = activeChoice.choice;\n\n\t\t\tthis._choiceCompletions.enable();\n\n\t\t\t// trigger suggest with the special choice completion provider\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tshowSimpleSuggestions(this._editor, this._choiceCompletions!.provider);\n\t\t\t});\n\t\t}\n\t}\n\n\tfinish(): void {\n\t\twhile (this._inSnippet.get()) {\n\t\t\tthis.next();\n\t\t}\n\t}\n\n\tcancel(resetSelection: boolean = false): void {\n\t\tthis._inSnippet.reset();\n\t\tthis._hasPrevTabstop.reset();\n\t\tthis._hasNextTabstop.reset();\n\t\tthis._snippetListener.clear();\n\n\t\tthis._currentChoice = undefined;\n\n\t\tthis._session?.dispose();\n\t\tthis._session = undefined;\n\t\tthis._modelVersionId = -1;\n\t\tif (resetSelection) {\n\t\t\t// reset selection to the primary cursor when being asked\n\t\t\t// for. this happens when explicitly cancelling snippet mode,\n\t\t\t// e.g. when pressing ESC\n\t\t\tthis._editor.setSelections([this._editor.getSelection()!]);\n\t\t}\n\t}\n\n\tprev(): void {\n\t\tthis._session?.prev();\n\t\tthis._updateState();\n\t}\n\n\tnext(): void {\n\t\tthis._session?.next();\n\t\tthis._updateState();\n\t}\n\n\tisInSnippet(): boolean {\n\t\treturn Boolean(this._inSnippet.get());\n\t}\n\n\tgetSessionEnclosingRange(): Range | undefined {\n\t\tif (this._session) {\n\t\t\treturn this._session.getEnclosingRange();\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n\nregisterEditorContribution(SnippetController2.ID, SnippetController2, EditorContributionInstantiation.Lazy);\n\nconst CommandCtor = EditorCommand.bindToContribution<SnippetController2>(SnippetController2.get);\n\nregisterEditorCommand(new CommandCtor({\n\tid: 'jumpToNextSnippetPlaceholder',\n\tprecondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\n\thandler: ctrl => ctrl.next(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 30,\n\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\tprimary: KeyCode.Tab\n\t}\n}));\nregisterEditorCommand(new CommandCtor({\n\tid: 'jumpToPrevSnippetPlaceholder',\n\tprecondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\n\thandler: ctrl => ctrl.prev(),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 30,\n\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\tprimary: KeyMod.Shift | KeyCode.Tab\n\t}\n}));\nregisterEditorCommand(new CommandCtor({\n\tid: 'leaveSnippet',\n\tprecondition: SnippetController2.InSnippetMode,\n\thandler: ctrl => ctrl.cancel(true),\n\tkbOpts: {\n\t\tweight: KeybindingWeight.EditorContrib + 30,\n\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\tprimary: KeyCode.Escape,\n\t\tsecondary: [KeyMod.Shift | KeyCode.Escape]\n\t}\n}));\n\nregisterEditorCommand(new CommandCtor({\n\tid: 'acceptSnippet',\n\tprecondition: SnippetController2.InSnippetMode,\n\thandler: ctrl => ctrl.finish(),\n\t// kbOpts: {\n\t// \tweight: KeybindingWeight.EditorContrib + 30,\n\t// \tkbExpr: EditorContextKeys.textFocus,\n\t// \tprimary: KeyCode.Enter,\n\t// }\n}));\n"]}