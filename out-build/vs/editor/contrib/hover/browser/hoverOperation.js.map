{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/hover/browser/hoverOperation.ts"],"names":[],"mappings":"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","file":"hoverOperation.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AsyncIterableObject, CancelableAsyncIterableObject, createCancelableAsyncIterable, RunOnceScheduler } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\n\nexport interface IHoverComputer<T> {\n\t/**\n\t * This is called after half the hover time\n\t */\n\tcomputeAsync?: (token: CancellationToken) => AsyncIterableObject<T>;\n\t/**\n\t * This is called after all the hover time\n\t */\n\tcomputeSync?: () => T[];\n}\n\nconst enum HoverOperationState {\n\tIdle,\n\tFirstWait,\n\tSecondWait,\n\tWaitingForAsync = 3,\n\tWaitingForAsyncShowingLoading = 4,\n}\n\nexport const enum HoverStartMode {\n\tDelayed = 0,\n\tImmediate = 1\n}\n\nexport const enum HoverStartSource {\n\tMouse = 0,\n\tKeyboard = 1\n}\n\nexport class HoverResult<T> {\n\tconstructor(\n\t\tpublic readonly value: T[],\n\t\tpublic readonly isComplete: boolean,\n\t\tpublic readonly hasLoadingMessage: boolean,\n\t) { }\n}\n\n/**\n * Computing the hover is very fine tuned.\n *\n * Suppose the hover delay is 300ms (the default). Then, when resting the mouse at an anchor:\n * - at 150ms, the async computation is triggered (i.e. semantic hover)\n *   - if async results already come in, they are not rendered yet.\n * - at 300ms, the sync computation is triggered (i.e. decorations, markers)\n *   - if there are sync or async results, they are rendered.\n * - at 900ms, if the async computation hasn't finished, a \"Loading...\" result is added.\n */\nexport class HoverOperation<T> extends Disposable {\n\n\tprivate readonly _onResult = this._register(new Emitter<HoverResult<T>>());\n\tpublic readonly onResult = this._onResult.event;\n\n\tprivate readonly _firstWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerAsyncComputation(), 0));\n\tprivate readonly _secondWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerSyncComputation(), 0));\n\tprivate readonly _loadingMessageScheduler = this._register(new RunOnceScheduler(() => this._triggerLoadingMessage(), 0));\n\n\tprivate _state = HoverOperationState.Idle;\n\tprivate _asyncIterable: CancelableAsyncIterableObject<T> | null = null;\n\tprivate _asyncIterableDone: boolean = false;\n\tprivate _result: T[] = [];\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _computer: IHoverComputer<T>\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._asyncIterable) {\n\t\t\tthis._asyncIterable.cancel();\n\t\t\tthis._asyncIterable = null;\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\tprivate get _hoverTime(): number {\n\t\treturn this._editor.getOption(EditorOption.hover).delay;\n\t}\n\n\tprivate get _firstWaitTime(): number {\n\t\treturn this._hoverTime / 2;\n\t}\n\n\tprivate get _secondWaitTime(): number {\n\t\treturn this._hoverTime - this._firstWaitTime;\n\t}\n\n\tprivate get _loadingMessageTime(): number {\n\t\treturn 3 * this._hoverTime;\n\t}\n\n\tprivate _setState(state: HoverOperationState, fireResult: boolean = true): void {\n\t\tthis._state = state;\n\t\tif (fireResult) {\n\t\t\tthis._fireResult();\n\t\t}\n\t}\n\n\tprivate _triggerAsyncComputation(): void {\n\t\tthis._setState(HoverOperationState.SecondWait);\n\t\tthis._secondWaitScheduler.schedule(this._secondWaitTime);\n\n\t\tif (this._computer.computeAsync) {\n\t\t\tthis._asyncIterableDone = false;\n\t\t\tthis._asyncIterable = createCancelableAsyncIterable(token => this._computer.computeAsync!(token));\n\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tfor await (const item of this._asyncIterable!) {\n\t\t\t\t\t\tif (item) {\n\t\t\t\t\t\t\tthis._result.push(item);\n\t\t\t\t\t\t\tthis._fireResult();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._asyncIterableDone = true;\n\n\t\t\t\t\tif (this._state === HoverOperationState.WaitingForAsync || this._state === HoverOperationState.WaitingForAsyncShowingLoading) {\n\t\t\t\t\t\tthis._setState(HoverOperationState.Idle);\n\t\t\t\t\t}\n\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t} else {\n\t\t\tthis._asyncIterableDone = true;\n\t\t}\n\t}\n\n\tprivate _triggerSyncComputation(): void {\n\t\tif (this._computer.computeSync) {\n\t\t\tthis._result = this._result.concat(this._computer.computeSync());\n\t\t}\n\t\tthis._setState(this._asyncIterableDone ? HoverOperationState.Idle : HoverOperationState.WaitingForAsync);\n\t}\n\n\tprivate _triggerLoadingMessage(): void {\n\t\tif (this._state === HoverOperationState.WaitingForAsync) {\n\t\t\tthis._setState(HoverOperationState.WaitingForAsyncShowingLoading);\n\t\t}\n\t}\n\n\tprivate _fireResult(): void {\n\t\tif (this._state === HoverOperationState.FirstWait || this._state === HoverOperationState.SecondWait) {\n\t\t\t// Do not send out results before the hover time\n\t\t\treturn;\n\t\t}\n\t\tconst isComplete = (this._state === HoverOperationState.Idle);\n\t\tconst hasLoadingMessage = (this._state === HoverOperationState.WaitingForAsyncShowingLoading);\n\t\tthis._onResult.fire(new HoverResult(this._result.slice(0), isComplete, hasLoadingMessage));\n\t}\n\n\tpublic start(mode: HoverStartMode): void {\n\t\tif (mode === HoverStartMode.Delayed) {\n\t\t\tif (this._state === HoverOperationState.Idle) {\n\t\t\t\tthis._setState(HoverOperationState.FirstWait);\n\t\t\t\tthis._firstWaitScheduler.schedule(this._firstWaitTime);\n\t\t\t\tthis._loadingMessageScheduler.schedule(this._loadingMessageTime);\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (this._state) {\n\t\t\t\tcase HoverOperationState.Idle:\n\t\t\t\t\tthis._triggerAsyncComputation();\n\t\t\t\t\tthis._secondWaitScheduler.cancel();\n\t\t\t\t\tthis._triggerSyncComputation();\n\t\t\t\t\tbreak;\n\t\t\t\tcase HoverOperationState.SecondWait:\n\t\t\t\t\tthis._secondWaitScheduler.cancel();\n\t\t\t\t\tthis._triggerSyncComputation();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic cancel(): void {\n\t\tthis._firstWaitScheduler.cancel();\n\t\tthis._secondWaitScheduler.cancel();\n\t\tthis._loadingMessageScheduler.cancel();\n\t\tif (this._asyncIterable) {\n\t\t\tthis._asyncIterable.cancel();\n\t\t\tthis._asyncIterable = null;\n\t\t}\n\t\tthis._result = [];\n\t\tthis._setState(HoverOperationState.Idle, false);\n\t}\n\n}\n"]}