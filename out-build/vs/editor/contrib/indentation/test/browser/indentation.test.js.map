{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/indentation/test/browser/indentation.test.ts"],"names":[],"mappings":"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","file":"indentation.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { MetadataConsts, StandardTokenType } from 'vs/editor/common/encodedTokenAttributes';\nimport { EncodedTokenizationResult, IState, TokenizationRegistry } from 'vs/editor/common/languages';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { NullState } from 'vs/editor/common/languages/nullTokenize';\nimport { AutoIndentOnPaste, IndentationToSpacesCommand, IndentationToTabsCommand } from 'vs/editor/contrib/indentation/browser/indentation';\nimport { withTestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport { testCommand } from 'vs/editor/test/browser/testCommand';\nimport { javascriptIndentationRules } from 'vs/editor/test/common/modes/supports/javascriptIndentationRules';\nimport { javascriptOnEnterRules } from 'vs/editor/test/common/modes/supports/javascriptOnEnterRules';\nimport { createTextModel } from 'vs/editor/test/common/testTextModel';\n\nfunction testIndentationToSpacesCommand(lines: string[], selection: Selection, tabSize: number, expectedLines: string[], expectedSelection: Selection): void {\n\ttestCommand(lines, null, selection, (accessor, sel) => new IndentationToSpacesCommand(sel, tabSize), expectedLines, expectedSelection);\n}\n\nfunction testIndentationToTabsCommand(lines: string[], selection: Selection, tabSize: number, expectedLines: string[], expectedSelection: Selection): void {\n\ttestCommand(lines, null, selection, (accessor, sel) => new IndentationToTabsCommand(sel, tabSize), expectedLines, expectedSelection);\n}\n\nsuite('Editor Contrib - Indentation to Spaces', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('single tabs only at start of line', function () {\n\t\ttestIndentationToSpacesCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'\\tfourth line',\n\t\t\t\t'\\tfifth'\n\t\t\t],\n\t\t\tnew Selection(2, 3, 2, 3),\n\t\t\t4,\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'second line',\n\t\t\t\t'third line',\n\t\t\t\t'    fourth line',\n\t\t\t\t'    fifth'\n\t\t\t],\n\t\t\tnew Selection(2, 3, 2, 3)\n\t\t);\n\t});\n\n\ttest('multiple tabs at start of line', function () {\n\t\ttestIndentationToSpacesCommand(\n\t\t\t[\n\t\t\t\t'\\t\\tfirst',\n\t\t\t\t'\\tsecond line',\n\t\t\t\t'\\t\\t\\t third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 5, 1, 5),\n\t\t\t3,\n\t\t\t[\n\t\t\t\t'      first',\n\t\t\t\t'   second line',\n\t\t\t\t'          third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 9, 1, 9)\n\t\t);\n\t});\n\n\ttest('multiple tabs', function () {\n\t\ttestIndentationToSpacesCommand(\n\t\t\t[\n\t\t\t\t'\\t\\tfirst\\t',\n\t\t\t\t'\\tsecond  \\t line \\t',\n\t\t\t\t'\\t\\t\\t third line',\n\t\t\t\t' \\tfourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 5, 1, 5),\n\t\t\t2,\n\t\t\t[\n\t\t\t\t'    first\\t',\n\t\t\t\t'  second  \\t line \\t',\n\t\t\t\t'       third line',\n\t\t\t\t'   fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 7, 1, 7)\n\t\t);\n\t});\n\n\ttest('empty lines', function () {\n\t\ttestIndentationToSpacesCommand(\n\t\t\t[\n\t\t\t\t'\\t\\t\\t',\n\t\t\t\t'\\t',\n\t\t\t\t'\\t\\t'\n\t\t\t],\n\t\t\tnew Selection(1, 4, 1, 4),\n\t\t\t2,\n\t\t\t[\n\t\t\t\t'      ',\n\t\t\t\t'  ',\n\t\t\t\t'    '\n\t\t\t],\n\t\t\tnew Selection(1, 4, 1, 4)\n\t\t);\n\t});\n});\n\nsuite('Editor Contrib - Indentation to Tabs', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('spaces only at start of line', function () {\n\t\ttestIndentationToTabsCommand(\n\t\t\t[\n\t\t\t\t'    first',\n\t\t\t\t'second line',\n\t\t\t\t'    third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(2, 3, 2, 3),\n\t\t\t4,\n\t\t\t[\n\t\t\t\t'\\tfirst',\n\t\t\t\t'second line',\n\t\t\t\t'\\tthird line',\n\t\t\t\t'fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(2, 3, 2, 3)\n\t\t);\n\t});\n\n\ttest('multiple spaces at start of line', function () {\n\t\ttestIndentationToTabsCommand(\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'   second line',\n\t\t\t\t'          third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'     fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 5, 1, 5),\n\t\t\t3,\n\t\t\t[\n\t\t\t\t'first',\n\t\t\t\t'\\tsecond line',\n\t\t\t\t'\\t\\t\\t third line',\n\t\t\t\t'fourth line',\n\t\t\t\t'\\t  fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 5, 1, 5)\n\t\t);\n\t});\n\n\ttest('multiple spaces', function () {\n\t\ttestIndentationToTabsCommand(\n\t\t\t[\n\t\t\t\t'      first   ',\n\t\t\t\t'  second     line \\t',\n\t\t\t\t'       third line',\n\t\t\t\t'   fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 8, 1, 8),\n\t\t\t2,\n\t\t\t[\n\t\t\t\t'\\t\\t\\tfirst   ',\n\t\t\t\t'\\tsecond     line \\t',\n\t\t\t\t'\\t\\t\\t third line',\n\t\t\t\t'\\t fourth line',\n\t\t\t\t'fifth'\n\t\t\t],\n\t\t\tnew Selection(1, 5, 1, 5)\n\t\t);\n\t});\n\n\ttest('issue #45996', function () {\n\t\ttestIndentationToSpacesCommand(\n\t\t\t[\n\t\t\t\t'\\tabc',\n\t\t\t],\n\t\t\tnew Selection(1, 3, 1, 3),\n\t\t\t4,\n\t\t\t[\n\t\t\t\t'    abc',\n\t\t\t],\n\t\t\tnew Selection(1, 6, 1, 6)\n\t\t);\n\t});\n});\n\nsuite('Editor Contrib - Auto Indent On Paste', () => {\n\tlet disposables: DisposableStore;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('issue #119225: Do not add extra leading space when pasting JSDoc', () => {\n\t\tconst languageId = 'leadingSpacePaste';\n\t\tconst model = createTextModel(\"\", languageId, {});\n\t\tdisposables.add(model);\n\t\twithTestCodeEditor(model, { autoIndent: 'full' }, (editor, viewModel, instantiationService) => {\n\t\t\tconst languageService = instantiationService.get(ILanguageService);\n\t\t\tconst languageConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\t\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\t\tdisposables.add(TokenizationRegistry.register(languageId, {\n\t\t\t\tgetInitialState: (): IState => NullState,\n\t\t\t\ttokenize: () => {\n\t\t\t\t\tthrow new Error('not implemented');\n\t\t\t\t},\n\t\t\t\ttokenizeEncoded: (line: string, hasEOL: boolean, state: IState): EncodedTokenizationResult => {\n\t\t\t\t\tconst tokensArr: number[] = [];\n\t\t\t\t\tif (line.indexOf('*') !== -1) {\n\t\t\t\t\t\ttokensArr.push(0);\n\t\t\t\t\t\ttokensArr.push(StandardTokenType.Comment << MetadataConsts.TOKEN_TYPE_OFFSET);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttokensArr.push(0);\n\t\t\t\t\t\ttokensArr.push(StandardTokenType.Other << MetadataConsts.TOKEN_TYPE_OFFSET);\n\t\t\t\t\t}\n\t\t\t\t\tconst tokens = new Uint32Array(tokensArr.length);\n\t\t\t\t\tfor (let i = 0; i < tokens.length; i++) {\n\t\t\t\t\t\ttokens[i] = tokensArr[i];\n\t\t\t\t\t}\n\t\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\t\tbrackets: [\n\t\t\t\t\t['{', '}'],\n\t\t\t\t\t['[', ']'],\n\t\t\t\t\t['(', ')']\n\t\t\t\t],\n\t\t\t\tcomments: {\n\t\t\t\t\tlineComment: '//',\n\t\t\t\t\tblockComment: ['/*', '*/']\n\t\t\t\t},\n\t\t\t\tindentationRules: javascriptIndentationRules,\n\t\t\t\tonEnterRules: javascriptOnEnterRules\n\t\t\t}));\n\n\t\t\tconst autoIndentOnPasteController = editor.registerAndInstantiateContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste);\n\t\t\tconst pasteText = [\n\t\t\t\t'/**',\n\t\t\t\t' * JSDoc',\n\t\t\t\t' */',\n\t\t\t\t'function a() {}'\n\t\t\t].join('\\n');\n\n\t\t\tviewModel.paste(pasteText, true, undefined, 'keyboard');\n\t\t\tautoIndentOnPasteController.trigger(new Range(1, 1, 4, 16));\n\t\t\tassert.strictEqual(model.getValue(), pasteText);\n\t\t});\n\t});\n});\n\nsuite('Editor Contrib - Keep Indent On Paste', () => {\n\tlet disposables: DisposableStore;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('issue #167299: Blank line removes indent', () => {\n\t\tconst languageId = 'blankLineRemovesIndent';\n\t\tconst model = createTextModel(\"\", languageId, {});\n\t\tdisposables.add(model);\n\t\twithTestCodeEditor(model, { autoIndent: 'full' }, (editor, viewModel, instantiationService) => {\n\t\t\tconst languageService = instantiationService.get(ILanguageService);\n\t\t\tconst languageConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\t\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\t\tbrackets: [\n\t\t\t\t\t['{', '}'],\n\t\t\t\t\t['[', ']'],\n\t\t\t\t\t['(', ')']\n\t\t\t\t],\n\t\t\t\tindentationRules: javascriptIndentationRules,\n\t\t\t\tonEnterRules: javascriptOnEnterRules\n\t\t\t}));\n\n\t\t\tconst autoIndentOnPasteController = editor.registerAndInstantiateContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste);\n\t\t\tconst pasteText = [\n\t\t\t\t'',\n\t\t\t\t'export type IncludeReference =',\n\t\t\t\t'\t| BaseReference',\n\t\t\t\t'\t| SelfReference',\n\t\t\t\t'\t| RelativeReference;',\n\t\t\t\t'',\n\t\t\t\t'export const enum IncludeReferenceKind {',\n\t\t\t\t'\tBase,',\n\t\t\t\t'\tSelf,',\n\t\t\t\t'\tRelativeReference,',\n\t\t\t\t'}'\n\t\t\t].join('\\n');\n\n\t\t\tviewModel.paste(pasteText, true, undefined, 'keyboard');\n\t\t\tautoIndentOnPasteController.trigger(new Range(1, 1, 11, 2));\n\t\t\tassert.strictEqual(model.getValue(), pasteText);\n\t\t});\n\t});\n});\n"]}