{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/smartSelect/test/browser/smartSelect.test.ts"],"names":[],"mappings":"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","file":"smartSelect.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { SelectionRangeProvider } from 'vs/editor/common/languages';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { BracketSelectionRangeProvider } from 'vs/editor/contrib/smartSelect/browser/bracketSelections';\nimport { provideSelectionRanges } from 'vs/editor/contrib/smartSelect/browser/smartSelect';\nimport { WordSelectionRangeProvider } from 'vs/editor/contrib/smartSelect/browser/wordSelections';\nimport { createModelServices } from 'vs/editor/test/common/testTextModel';\nimport { javascriptOnEnterRules } from 'vs/editor/test/common/modes/supports/javascriptOnEnterRules';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/languageFeatureRegistry';\nimport { ILanguageSelection, ILanguageService } from 'vs/editor/common/languages/language';\n\nclass StaticLanguageSelector implements ILanguageSelection {\n\treadonly onDidChange: Event<string> = Event.None;\n\tconstructor(public readonly languageId: string) { }\n}\n\nsuite('SmartSelect', () => {\n\n\tconst OriginalBracketSelectionRangeProviderMaxDuration = BracketSelectionRangeProvider._maxDuration;\n\n\tsuiteSetup(() => {\n\t\tBracketSelectionRangeProvider._maxDuration = 5000; // 5 seconds\n\t});\n\n\tsuiteTeardown(() => {\n\t\tBracketSelectionRangeProvider._maxDuration = OriginalBracketSelectionRangeProviderMaxDuration;\n\t});\n\n\tconst languageId = 'mockJSMode';\n\tlet disposables: DisposableStore;\n\tlet modelService: IModelService;\n\tconst providers = new LanguageFeatureRegistry<SelectionRangeProvider>();\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\tconst instantiationService = createModelServices(disposables);\n\t\tmodelService = instantiationService.get(IModelService);\n\t\tconst languagConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\t\tconst languageService = instantiationService.get(ILanguageService);\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languagConfigurationService.register(languageId, {\n\t\t\tbrackets: [\n\t\t\t\t['(', ')'],\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']']\n\t\t\t],\n\t\t\tonEnterRules: javascriptOnEnterRules,\n\t\t\twordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n\t\t}));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tasync function assertGetRangesToPosition(text: string[], lineNumber: number, column: number, ranges: Range[], selectLeadingAndTrailingWhitespace = true): Promise<void> {\n\t\tconst uri = URI.file('test.js');\n\t\tconst model = modelService.createModel(text.join('\\n'), new StaticLanguageSelector(languageId), uri);\n\t\tconst [actual] = await provideSelectionRanges(providers, model, [new Position(lineNumber, column)], { selectLeadingAndTrailingWhitespace, selectSubwords: true }, CancellationToken.None);\n\t\tconst actualStr = actual!.map(r => new Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn).toString());\n\t\tconst desiredStr = ranges.reverse().map(r => String(r));\n\n\t\tassert.deepStrictEqual(actualStr, desiredStr, `\\nA: ${actualStr} VS \\nE: ${desiredStr}`);\n\t\tmodelService.destroyModel(uri);\n\t}\n\n\ttest('getRangesToPosition #1', () => {\n\n\t\treturn assertGetRangesToPosition([\n\t\t\t'function a(bar, foo){',\n\t\t\t'\\tif (bar) {',\n\t\t\t'\\t\\treturn (bar + (2 * foo))',\n\t\t\t'\\t}',\n\t\t\t'}'\n\t\t], 3, 20, [\n\t\t\tnew Range(1, 1, 5, 2), // all\n\t\t\tnew Range(1, 21, 5, 2), // {} outside\n\t\t\tnew Range(1, 22, 5, 1), // {} inside\n\t\t\tnew Range(2, 1, 4, 3), // block\n\t\t\tnew Range(2, 1, 4, 3),\n\t\t\tnew Range(2, 2, 4, 3),\n\t\t\tnew Range(2, 11, 4, 3),\n\t\t\tnew Range(2, 12, 4, 2),\n\t\t\tnew Range(3, 1, 3, 27), // line w/ triva\n\t\t\tnew Range(3, 3, 3, 27), // line w/o triva\n\t\t\tnew Range(3, 10, 3, 27), // () outside\n\t\t\tnew Range(3, 11, 3, 26), // () inside\n\t\t\tnew Range(3, 17, 3, 26), // () outside\n\t\t\tnew Range(3, 18, 3, 25), // () inside\n\t\t]);\n\t});\n\n\ttest('config: selectLeadingAndTrailingWhitespace', async () => {\n\n\t\tawait assertGetRangesToPosition([\n\t\t\t'aaa',\n\t\t\t'\\tbbb',\n\t\t\t''\n\t\t], 2, 3, [\n\t\t\tnew Range(1, 1, 3, 1), // all\n\t\t\tnew Range(2, 1, 2, 5), // line w/ triva\n\t\t\tnew Range(2, 2, 2, 5), // bbb\n\t\t], true);\n\n\t\tawait assertGetRangesToPosition([\n\t\t\t'aaa',\n\t\t\t'\\tbbb',\n\t\t\t''\n\t\t], 2, 3, [\n\t\t\tnew Range(1, 1, 3, 1), // all\n\t\t\tnew Range(2, 2, 2, 5), // () inside\n\t\t], false);\n\t});\n\n\ttest('getRangesToPosition #56886. Skip empty lines correctly.', () => {\n\n\t\treturn assertGetRangesToPosition([\n\t\t\t'function a(bar, foo){',\n\t\t\t'\\tif (bar) {',\n\t\t\t'',\n\t\t\t'\\t}',\n\t\t\t'}'\n\t\t], 3, 1, [\n\t\t\tnew Range(1, 1, 5, 2),\n\t\t\tnew Range(1, 21, 5, 2),\n\t\t\tnew Range(1, 22, 5, 1),\n\t\t\tnew Range(2, 1, 4, 3),\n\t\t\tnew Range(2, 1, 4, 3),\n\t\t\tnew Range(2, 2, 4, 3),\n\t\t\tnew Range(2, 11, 4, 3),\n\t\t\tnew Range(2, 12, 4, 2),\n\t\t]);\n\t});\n\n\ttest('getRangesToPosition #56886. Do not skip lines with only whitespaces.', () => {\n\n\t\treturn assertGetRangesToPosition([\n\t\t\t'function a(bar, foo){',\n\t\t\t'\\tif (bar) {',\n\t\t\t' ',\n\t\t\t'\\t}',\n\t\t\t'}'\n\t\t], 3, 1, [\n\t\t\tnew Range(1, 1, 5, 2), // all\n\t\t\tnew Range(1, 21, 5, 2), // {} outside\n\t\t\tnew Range(1, 22, 5, 1), // {} inside\n\t\t\tnew Range(2, 1, 4, 3),\n\t\t\tnew Range(2, 1, 4, 3),\n\t\t\tnew Range(2, 2, 4, 3),\n\t\t\tnew Range(2, 11, 4, 3),\n\t\t\tnew Range(2, 12, 4, 2),\n\t\t\tnew Range(3, 1, 3, 2), // block\n\t\t\tnew Range(3, 1, 3, 2) // empty line\n\t\t]);\n\t});\n\n\ttest('getRangesToPosition #40658. Cursor at first position inside brackets should select line inside.', () => {\n\n\t\treturn assertGetRangesToPosition([\n\t\t\t' [ ]',\n\t\t\t' { } ',\n\t\t\t'( ) '\n\t\t], 2, 3, [\n\t\t\tnew Range(1, 1, 3, 5),\n\t\t\tnew Range(2, 1, 2, 6), // line w/ triava\n\t\t\tnew Range(2, 2, 2, 5), // {} inside, line w/o triva\n\t\t\tnew Range(2, 3, 2, 4) // {} inside\n\t\t]);\n\t});\n\n\ttest('getRangesToPosition #40658. Cursor in empty brackets should reveal brackets first.', () => {\n\n\t\treturn assertGetRangesToPosition([\n\t\t\t' [] ',\n\t\t\t' { } ',\n\t\t\t'  ( ) '\n\t\t], 1, 3, [\n\t\t\tnew Range(1, 1, 3, 7), // all\n\t\t\tnew Range(1, 1, 1, 5), // line w/ trival\n\t\t\tnew Range(1, 2, 1, 4), // [] outside, line w/o trival\n\t\t\tnew Range(1, 3, 1, 3), // [] inside\n\t\t]);\n\t});\n\n\ttest('getRangesToPosition #40658. Tokens before bracket will be revealed first.', () => {\n\n\t\treturn assertGetRangesToPosition([\n\t\t\t'  [] ',\n\t\t\t' { } ',\n\t\t\t'selectthis( ) '\n\t\t], 3, 11, [\n\t\t\tnew Range(1, 1, 3, 15), // all\n\t\t\tnew Range(3, 1, 3, 15), // line w/ trivia\n\t\t\tnew Range(3, 1, 3, 14), // line w/o trivia\n\t\t\tnew Range(3, 1, 3, 11) // word\n\t\t]);\n\t});\n\n\t// -- bracket selections\n\n\tasync function assertRanges(provider: SelectionRangeProvider, value: string, ...expected: IRange[]): Promise<void> {\n\t\tconst index = value.indexOf('|');\n\t\tvalue = value.replace('|', ''); // CodeQL [SM02383] js/incomplete-sanitization this is purpose only the first | character\n\n\t\tconst model = modelService.createModel(value, new StaticLanguageSelector(languageId), URI.parse('fake:lang'));\n\t\tconst pos = model.getPositionAt(index);\n\t\tconst all = await provider.provideSelectionRanges(model, [pos], CancellationToken.None);\n\t\tconst ranges = all![0];\n\n\t\tmodelService.destroyModel(model.uri);\n\n\t\tassert.strictEqual(expected.length, ranges!.length);\n\t\tfor (const range of ranges!) {\n\t\t\tconst exp = expected.shift() || null;\n\t\t\tassert.ok(Range.equalsRange(range.range, exp), `A=${range.range} <> E=${exp}`);\n\t\t}\n\t}\n\n\ttest('bracket selection', async () => {\n\t\tawait assertRanges(new BracketSelectionRangeProvider(), '(|)',\n\t\t\tnew Range(1, 2, 1, 2), new Range(1, 1, 1, 3)\n\t\t);\n\n\t\tawait assertRanges(new BracketSelectionRangeProvider(), '[[[](|)]]',\n\t\t\tnew Range(1, 6, 1, 6), new Range(1, 5, 1, 7), // ()\n\t\t\tnew Range(1, 3, 1, 7), new Range(1, 2, 1, 8), // [[]()]\n\t\t\tnew Range(1, 2, 1, 8), new Range(1, 1, 1, 9), // [[[]()]]\n\t\t);\n\n\t\tawait assertRanges(new BracketSelectionRangeProvider(), '[a[](|)a]',\n\t\t\tnew Range(1, 6, 1, 6), new Range(1, 5, 1, 7),\n\t\t\tnew Range(1, 2, 1, 8), new Range(1, 1, 1, 9),\n\t\t);\n\n\t\t// no bracket\n\t\tawait assertRanges(new BracketSelectionRangeProvider(), 'fofof|fofo');\n\n\t\t// empty\n\t\tawait assertRanges(new BracketSelectionRangeProvider(), '[[[]()]]|');\n\t\tawait assertRanges(new BracketSelectionRangeProvider(), '|[[[]()]]');\n\n\t\t// edge\n\t\tawait assertRanges(new BracketSelectionRangeProvider(), '[|[[]()]]', new Range(1, 2, 1, 8), new Range(1, 1, 1, 9));\n\t\tawait assertRanges(new BracketSelectionRangeProvider(), '[[[]()]|]', new Range(1, 2, 1, 8), new Range(1, 1, 1, 9));\n\n\t\tawait assertRanges(new BracketSelectionRangeProvider(), 'aaa(aaa)bbb(b|b)ccc(ccc)', new Range(1, 13, 1, 15), new Range(1, 12, 1, 16));\n\t\tawait assertRanges(new BracketSelectionRangeProvider(), '(aaa(aaa)bbb(b|b)ccc(ccc))', new Range(1, 14, 1, 16), new Range(1, 13, 1, 17), new Range(1, 2, 1, 25), new Range(1, 1, 1, 26));\n\t});\n\n\ttest('bracket with leading/trailing', async () => {\n\n\t\tawait assertRanges(new BracketSelectionRangeProvider(), 'for(a of b){\\n  foo(|);\\n}',\n\t\t\tnew Range(2, 7, 2, 7), new Range(2, 6, 2, 8),\n\t\t\tnew Range(1, 13, 3, 1), new Range(1, 12, 3, 2),\n\t\t\tnew Range(1, 1, 3, 2), new Range(1, 1, 3, 2),\n\t\t);\n\n\t\tawait assertRanges(new BracketSelectionRangeProvider(), 'for(a of b)\\n{\\n  foo(|);\\n}',\n\t\t\tnew Range(3, 7, 3, 7), new Range(3, 6, 3, 8),\n\t\t\tnew Range(2, 2, 4, 1), new Range(2, 1, 4, 2),\n\t\t\tnew Range(1, 1, 4, 2), new Range(1, 1, 4, 2),\n\t\t);\n\t});\n\n\ttest('in-word ranges', async () => {\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'f|ooBar',\n\t\t\tnew Range(1, 1, 1, 4), // foo\n\t\t\tnew Range(1, 1, 1, 7), // fooBar\n\t\t\tnew Range(1, 1, 1, 7), // doc\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'f|oo_Ba',\n\t\t\tnew Range(1, 1, 1, 4),\n\t\t\tnew Range(1, 1, 1, 7),\n\t\t\tnew Range(1, 1, 1, 7),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'f|oo-Ba',\n\t\t\tnew Range(1, 1, 1, 4),\n\t\t\tnew Range(1, 1, 1, 7),\n\t\t\tnew Range(1, 1, 1, 7),\n\t\t);\n\t});\n\n\ttest('in-word ranges with selectSubwords=false', async () => {\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(false), 'f|ooBar',\n\t\t\tnew Range(1, 1, 1, 7),\n\t\t\tnew Range(1, 1, 1, 7),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(false), 'f|oo_Ba',\n\t\t\tnew Range(1, 1, 1, 7),\n\t\t\tnew Range(1, 1, 1, 7),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(false), 'f|oo-Ba',\n\t\t\tnew Range(1, 1, 1, 7),\n\t\t\tnew Range(1, 1, 1, 7),\n\t\t);\n\t});\n\n\ttest('Default selection should select current word/hump first in camelCase #67493', async function () {\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'Abs|tractSmartSelect',\n\t\t\tnew Range(1, 1, 1, 9),\n\t\t\tnew Range(1, 1, 1, 20),\n\t\t\tnew Range(1, 1, 1, 20),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'AbstractSma|rtSelect',\n\t\t\tnew Range(1, 9, 1, 14),\n\t\t\tnew Range(1, 1, 1, 20),\n\t\t\tnew Range(1, 1, 1, 20),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'Abstrac-Sma|rt-elect',\n\t\t\tnew Range(1, 9, 1, 14),\n\t\t\tnew Range(1, 1, 1, 20),\n\t\t\tnew Range(1, 1, 1, 20),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'Abstrac_Sma|rt_elect',\n\t\t\tnew Range(1, 9, 1, 14),\n\t\t\tnew Range(1, 1, 1, 20),\n\t\t\tnew Range(1, 1, 1, 20),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'Abstrac_Sma|rt-elect',\n\t\t\tnew Range(1, 9, 1, 14),\n\t\t\tnew Range(1, 1, 1, 20),\n\t\t\tnew Range(1, 1, 1, 20),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'Abstrac_Sma|rtSelect',\n\t\t\tnew Range(1, 9, 1, 14),\n\t\t\tnew Range(1, 1, 1, 20),\n\t\t\tnew Range(1, 1, 1, 20),\n\t\t);\n\t});\n\n\ttest('Smart select: only add line ranges if they\\'re contained by the next range #73850', async function () {\n\n\t\tconst reg = providers.register('*', {\n\t\t\tprovideSelectionRanges() {\n\t\t\t\treturn [[\n\t\t\t\t\t{ range: { startLineNumber: 1, startColumn: 10, endLineNumber: 1, endColumn: 11 } },\n\t\t\t\t\t{ range: { startLineNumber: 1, startColumn: 10, endLineNumber: 3, endColumn: 2 } },\n\t\t\t\t\t{ range: { startLineNumber: 1, startColumn: 1, endLineNumber: 3, endColumn: 2 } },\n\t\t\t\t]];\n\t\t\t}\n\t\t});\n\n\t\tawait assertGetRangesToPosition(['type T = {', '\\tx: number', '}'], 1, 10, [\n\t\t\tnew Range(1, 1, 3, 2), // all\n\t\t\tnew Range(1, 10, 3, 2), // { ... }\n\t\t\tnew Range(1, 10, 1, 11), // {\n\t\t]);\n\n\t\treg.dispose();\n\t});\n\n\ttest('Expand selection in words with underscores is inconsistent #90589', async function () {\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'Hel|lo_World',\n\t\t\tnew Range(1, 1, 1, 6),\n\t\t\tnew Range(1, 1, 1, 12),\n\t\t\tnew Range(1, 1, 1, 12),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'Hello_Wo|rld',\n\t\t\tnew Range(1, 7, 1, 12),\n\t\t\tnew Range(1, 1, 1, 12),\n\t\t\tnew Range(1, 1, 1, 12),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'Hello|_World',\n\t\t\tnew Range(1, 1, 1, 6),\n\t\t\tnew Range(1, 1, 1, 12),\n\t\t\tnew Range(1, 1, 1, 12),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'Hello_|World',\n\t\t\tnew Range(1, 7, 1, 12),\n\t\t\tnew Range(1, 1, 1, 12),\n\t\t\tnew Range(1, 1, 1, 12),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'Hello|-World',\n\t\t\tnew Range(1, 1, 1, 6),\n\t\t\tnew Range(1, 1, 1, 12),\n\t\t\tnew Range(1, 1, 1, 12),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'Hello-|World',\n\t\t\tnew Range(1, 7, 1, 12),\n\t\t\tnew Range(1, 1, 1, 12),\n\t\t\tnew Range(1, 1, 1, 12),\n\t\t);\n\n\t\tawait assertRanges(new WordSelectionRangeProvider(), 'Hello|World',\n\t\t\tnew Range(1, 6, 1, 11),\n\t\t\tnew Range(1, 1, 1, 11),\n\t\t\tnew Range(1, 1, 1, 11),\n\t\t);\n\t});\n});\n"]}