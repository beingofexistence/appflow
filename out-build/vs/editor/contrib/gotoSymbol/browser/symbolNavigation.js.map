{"version":3,"sources":["vs/editor/contrib/gotoSymbol/browser/symbolNavigation.ts"],"names":[],"mappings":"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","file":"symbolNavigation.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { combinedDisposable, DisposableStore, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { isEqual } from 'vs/base/common/resources';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorCommand, registerEditorCommand } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { Range } from 'vs/editor/common/core/range';\nimport { OneReference, ReferencesModel } from 'vs/editor/contrib/gotoSymbol/browser/referencesModel';\nimport { localize } from 'vs/nls';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { TextEditorSelectionRevealType } from 'vs/platform/editor/common/editor';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { createDecorator, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\n\nexport const ctxHasSymbols = new RawContextKey('hasSymbols', false, localize('hasSymbols', \"Whether there are symbol locations that can be navigated via keyboard-only.\"));\n\nexport const ISymbolNavigationService = createDecorator<ISymbolNavigationService>('ISymbolNavigationService');\n\nexport interface ISymbolNavigationService {\n\treadonly _serviceBrand: undefined;\n\treset(): void;\n\tput(anchor: OneReference): void;\n\trevealNext(source: ICodeEditor): Promise<any>;\n}\n\nclass SymbolNavigationService implements ISymbolNavigationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _ctxHasSymbols: IContextKey<boolean>;\n\n\tprivate _currentModel?: ReferencesModel = undefined;\n\tprivate _currentIdx: number = -1;\n\tprivate _currentState?: IDisposable;\n\tprivate _currentMessage?: IDisposable;\n\tprivate _ignoreEditorChange: boolean = false;\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICodeEditorService private readonly _editorService: ICodeEditorService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tthis._ctxHasSymbols = ctxHasSymbols.bindTo(contextKeyService);\n\t}\n\n\treset(): void {\n\t\tthis._ctxHasSymbols.reset();\n\t\tthis._currentState?.dispose();\n\t\tthis._currentMessage?.dispose();\n\t\tthis._currentModel = undefined;\n\t\tthis._currentIdx = -1;\n\t}\n\n\tput(anchor: OneReference): void {\n\t\tconst refModel = anchor.parent.parent;\n\n\t\tif (refModel.references.length <= 1) {\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._currentModel = refModel;\n\t\tthis._currentIdx = refModel.references.indexOf(anchor);\n\t\tthis._ctxHasSymbols.set(true);\n\t\tthis._showMessage();\n\n\t\tconst editorState = new EditorState(this._editorService);\n\t\tconst listener = editorState.onDidChange(_ => {\n\n\t\t\tif (this._ignoreEditorChange) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst editor = this._editorService.getActiveCodeEditor();\n\t\t\tif (!editor) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst model = editor.getModel();\n\t\t\tconst position = editor.getPosition();\n\t\t\tif (!model || !position) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet seenUri: boolean = false;\n\t\t\tlet seenPosition: boolean = false;\n\t\t\tfor (const reference of refModel.references) {\n\t\t\t\tif (isEqual(reference.uri, model.uri)) {\n\t\t\t\t\tseenUri = true;\n\t\t\t\t\tseenPosition = seenPosition || Range.containsPosition(reference.range, position);\n\t\t\t\t} else if (seenUri) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!seenUri || !seenPosition) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t});\n\n\t\tthis._currentState = combinedDisposable(editorState, listener);\n\t}\n\n\trevealNext(source: ICodeEditor): Promise<any> {\n\t\tif (!this._currentModel) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\t// get next result and advance\n\t\tthis._currentIdx += 1;\n\t\tthis._currentIdx %= this._currentModel.references.length;\n\t\tconst reference = this._currentModel.references[this._currentIdx];\n\n\t\t// status\n\t\tthis._showMessage();\n\n\t\t// open editor, ignore events while that happens\n\t\tthis._ignoreEditorChange = true;\n\t\treturn this._editorService.openCodeEditor({\n\t\t\tresource: reference.uri,\n\t\t\toptions: {\n\t\t\t\tselection: Range.collapseToStart(reference.range),\n\t\t\t\tselectionRevealType: TextEditorSelectionRevealType.NearTopIfOutsideViewport\n\t\t\t}\n\t\t}, source).finally(() => {\n\t\t\tthis._ignoreEditorChange = false;\n\t\t});\n\n\t}\n\n\tprivate _showMessage(): void {\n\n\t\tthis._currentMessage?.dispose();\n\n\t\tconst kb = this._keybindingService.lookupKeybinding('editor.gotoNextSymbolFromResult');\n\t\tconst message = kb\n\t\t\t? localize('location.kb', \"Symbol {0} of {1}, {2} for next\", this._currentIdx + 1, this._currentModel!.references.length, kb.getLabel())\n\t\t\t: localize('location', \"Symbol {0} of {1}\", this._currentIdx + 1, this._currentModel!.references.length);\n\n\t\tthis._currentMessage = this._notificationService.status(message);\n\t}\n}\n\nregisterSingleton(ISymbolNavigationService, SymbolNavigationService, InstantiationType.Delayed);\n\nregisterEditorCommand(new class extends EditorCommand {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.gotoNextSymbolFromResult',\n\t\t\tprecondition: ctxHasSymbols,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.F12\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor): void | Promise<void> {\n\t\treturn accessor.get(ISymbolNavigationService).revealNext(editor);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'editor.gotoNextSymbolFromResult.cancel',\n\tweight: KeybindingWeight.EditorContrib,\n\twhen: ctxHasSymbols,\n\tprimary: KeyCode.Escape,\n\thandler(accessor) {\n\t\taccessor.get(ISymbolNavigationService).reset();\n\t}\n});\n\n//\n\nclass EditorState {\n\n\tprivate readonly _listener = new Map<ICodeEditor, IDisposable>();\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _onDidChange = new Emitter<{ editor: ICodeEditor }>();\n\treadonly onDidChange: Event<{ editor: ICodeEditor }> = this._onDidChange.event;\n\n\tconstructor(@ICodeEditorService editorService: ICodeEditorService) {\n\t\tthis._disposables.add(editorService.onCodeEditorRemove(this._onDidRemoveEditor, this));\n\t\tthis._disposables.add(editorService.onCodeEditorAdd(this._onDidAddEditor, this));\n\t\teditorService.listCodeEditors().forEach(this._onDidAddEditor, this);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._onDidChange.dispose();\n\t\tdispose(this._listener.values());\n\t}\n\n\tprivate _onDidAddEditor(editor: ICodeEditor): void {\n\t\tthis._listener.set(editor, combinedDisposable(\n\t\t\teditor.onDidChangeCursorPosition(_ => this._onDidChange.fire({ editor })),\n\t\t\teditor.onDidChangeModelContent(_ => this._onDidChange.fire({ editor })),\n\t\t));\n\t}\n\n\tprivate _onDidRemoveEditor(editor: ICodeEditor): void {\n\t\tthis._listener.get(editor)?.dispose();\n\t\tthis._listener.delete(editor);\n\t}\n}\n"]}