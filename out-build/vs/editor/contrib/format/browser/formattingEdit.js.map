{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/format/browser/formattingEdit.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAShG,MAAa,GAAG;QAEP,MAAM,CAAC,CAAC,CAAe,MAAmB,EAAE,KAAiB;YACpE,IAAI,MAAM,GAAkC,SAAS,CAAC;YACtD,MAAM,WAAW,GAA2B,EAAE,CAAC;YAE/C,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;gBACzB,IAAI,OAAO,IAAI,CAAC,GAAG,KAAK,QAAQ,EAAE;oBACjC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;iBAClB;gBACD,IAAI,IAAI,CAAC,KAAK,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAChD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvB;aACD;YAED,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBAC/B,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;oBACtB,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;iBAClC;aACD;YAED,OAAO,WAAW,CAAC;QACpB,CAAC;QAEO,MAAM,CAAC,CAAC,CAAuB,MAAmB,EAAE,IAA0B;YACrF,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;gBACvB,OAAO,KAAK,CAAC;aACb;YACD,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAChC,MAAM,SAAS,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClD,MAAM,cAAc,GAAG,KAAK,CAAC,iBAAiB,EAAE,CAAC;YACjD,OAAO,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC9C,CAAC;QAED,MAAM,CAAC,OAAO,CAAC,MAAmB,EAAE,MAAkB,EAAE,YAAqB;YAC5E,IAAI,YAAY,EAAE;gBACjB,MAAM,CAAC,YAAY,EAAE,CAAC;aACtB;YACD,MAAM,WAAW,GAAG,wBAAG,CAAqB,OAAO,CAAC,MAAM,CAAC,CAAC;YAC5D,MAAM,KAAK,GAAG,GAAG,CAAY,CAAC,CAAe,MAAM,EAAE,MAAM,CAAC,CAAC;YAC7D,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAY,CAAC,CAAuB,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;gBACnF,6DAA6D;gBAC7D,MAAM,CAAC,YAAY,CAAC,oBAAoB,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,mBAAG,CAAW,OAAO,CAAC,WAAG,CAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACvH;iBAAM;gBACN,MAAM,CAAC,YAAY,CAAC,oBAAoB,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,mBAAG,CAAW,WAAW,CAAC,WAAG,CAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAC3H;YACD,IAAI,YAAY,EAAE;gBACjB,MAAM,CAAC,YAAY,EAAE,CAAC;aACtB;YACD,WAAW,CAAC,uCAAuC,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC;KACD;IAnDD,kBAmDC","file":"formattingEdit.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditOperation, ISingleEditOperation } from 'vs/editor/common/core/editOperation';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EndOfLineSequence } from 'vs/editor/common/model';\nimport { TextEdit } from 'vs/editor/common/languages';\nimport { StableEditorScrollState } from 'vs/editor/browser/stableEditorScroll';\n\nexport class FormattingEdit {\n\n\tprivate static _handleEolEdits(editor: ICodeEditor, edits: TextEdit[]): ISingleEditOperation[] {\n\t\tlet newEol: EndOfLineSequence | undefined = undefined;\n\t\tconst singleEdits: ISingleEditOperation[] = [];\n\n\t\tfor (const edit of edits) {\n\t\t\tif (typeof edit.eol === 'number') {\n\t\t\t\tnewEol = edit.eol;\n\t\t\t}\n\t\t\tif (edit.range && typeof edit.text === 'string') {\n\t\t\t\tsingleEdits.push(edit);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newEol === 'number') {\n\t\t\tif (editor.hasModel()) {\n\t\t\t\teditor.getModel().pushEOL(newEol);\n\t\t\t}\n\t\t}\n\n\t\treturn singleEdits;\n\t}\n\n\tprivate static _isFullModelReplaceEdit(editor: ICodeEditor, edit: ISingleEditOperation): boolean {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst model = editor.getModel();\n\t\tconst editRange = model.validateRange(edit.range);\n\t\tconst fullModelRange = model.getFullModelRange();\n\t\treturn fullModelRange.equalsRange(editRange);\n\t}\n\n\tstatic execute(editor: ICodeEditor, _edits: TextEdit[], addUndoStops: boolean) {\n\t\tif (addUndoStops) {\n\t\t\teditor.pushUndoStop();\n\t\t}\n\t\tconst scrollState = StableEditorScrollState.capture(editor);\n\t\tconst edits = FormattingEdit._handleEolEdits(editor, _edits);\n\t\tif (edits.length === 1 && FormattingEdit._isFullModelReplaceEdit(editor, edits[0])) {\n\t\t\t// We use replace semantics and hope that markers stay put...\n\t\t\teditor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n\t\t} else {\n\t\t\teditor.executeEdits('formatEditsCommand', edits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n\t\t}\n\t\tif (addUndoStops) {\n\t\t\teditor.pushUndoStop();\n\t\t}\n\t\tscrollState.restoreRelativeVerticalPositionOfCursor(editor);\n\t}\n}\n"]}