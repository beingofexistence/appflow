{"version":3,"sources":["vs/editor/contrib/format/browser/format.ts"],"names":[],"mappings":"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","file":"format.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { alert } from 'vs/base/browser/ui/aria/aria';\nimport { asArray, isNonEmptyArray } from 'vs/base/common/arrays';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { assertType } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { CodeEditorStateFlag, EditorStateCancellationTokenSource, TextModelCancellationTokenSource } from 'vs/editor/contrib/editorState/browser/editorState';\nimport { IActiveCodeEditor, isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ISingleEditOperation } from 'vs/editor/common/core/editOperation';\nimport { DocumentFormattingEditProvider, DocumentRangeFormattingEditProvider, FormattingOptions, TextEdit } from 'vs/editor/common/languages';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorker';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { FormattingEdit } from 'vs/editor/contrib/format/browser/formattingEdit';\nimport * as nls from 'vs/nls';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { ExtensionIdentifierSet } from 'vs/platform/extensions/common/extensions';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IProgress } from 'vs/platform/progress/common/progress';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/languageFeatureRegistry';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport function alertFormattingEdits(edits: ISingleEditOperation[]): void {\n\n\tedits = edits.filter(edit => edit.range);\n\tif (!edits.length) {\n\t\treturn;\n\t}\n\n\tlet { range } = edits[0];\n\tfor (let i = 1; i < edits.length; i++) {\n\t\trange = Range.plusRange(range, edits[i].range);\n\t}\n\tconst { startLineNumber, endLineNumber } = range;\n\tif (startLineNumber === endLineNumber) {\n\t\tif (edits.length === 1) {\n\t\t\talert(nls.localize('hint11', \"Made 1 formatting edit on line {0}\", startLineNumber));\n\t\t} else {\n\t\t\talert(nls.localize('hintn1', \"Made {0} formatting edits on line {1}\", edits.length, startLineNumber));\n\t\t}\n\t} else {\n\t\tif (edits.length === 1) {\n\t\t\talert(nls.localize('hint1n', \"Made 1 formatting edit between lines {0} and {1}\", startLineNumber, endLineNumber));\n\t\t} else {\n\t\t\talert(nls.localize('hintnn', \"Made {0} formatting edits between lines {1} and {2}\", edits.length, startLineNumber, endLineNumber));\n\t\t}\n\t}\n}\n\nexport function getRealAndSyntheticDocumentFormattersOrdered(\n\tdocumentFormattingEditProvider: LanguageFeatureRegistry<DocumentFormattingEditProvider>,\n\tdocumentRangeFormattingEditProvider: LanguageFeatureRegistry<DocumentRangeFormattingEditProvider>,\n\tmodel: ITextModel\n): DocumentFormattingEditProvider[] {\n\tconst result: DocumentFormattingEditProvider[] = [];\n\tconst seen = new ExtensionIdentifierSet();\n\n\t// (1) add all document formatter\n\tconst docFormatter = documentFormattingEditProvider.ordered(model);\n\tfor (const formatter of docFormatter) {\n\t\tresult.push(formatter);\n\t\tif (formatter.extensionId) {\n\t\t\tseen.add(formatter.extensionId);\n\t\t}\n\t}\n\n\t// (2) add all range formatter as document formatter (unless the same extension already did that)\n\tconst rangeFormatter = documentRangeFormattingEditProvider.ordered(model);\n\tfor (const formatter of rangeFormatter) {\n\t\tif (formatter.extensionId) {\n\t\t\tif (seen.has(formatter.extensionId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tseen.add(formatter.extensionId);\n\t\t}\n\t\tresult.push({\n\t\t\tdisplayName: formatter.displayName,\n\t\t\textensionId: formatter.extensionId,\n\t\t\tprovideDocumentFormattingEdits(model, options, token) {\n\t\t\t\treturn formatter.provideDocumentRangeFormattingEdits(model, model.getFullModelRange(), options, token);\n\t\t\t}\n\t\t});\n\t}\n\treturn result;\n}\n\nexport const enum FormattingMode {\n\tExplicit = 1,\n\tSilent = 2\n}\n\nexport interface IFormattingEditProviderSelector {\n\t<T extends (DocumentFormattingEditProvider | DocumentRangeFormattingEditProvider)>(formatter: T[], document: ITextModel, mode: FormattingMode): Promise<T | undefined>;\n}\n\nexport abstract class FormattingConflicts {\n\n\tprivate static readonly _selectors = new LinkedList<IFormattingEditProviderSelector>();\n\n\tstatic setFormatterSelector(selector: IFormattingEditProviderSelector): IDisposable {\n\t\tconst remove = FormattingConflicts._selectors.unshift(selector);\n\t\treturn { dispose: remove };\n\t}\n\n\tstatic async select<T extends (DocumentFormattingEditProvider | DocumentRangeFormattingEditProvider)>(formatter: T[], document: ITextModel, mode: FormattingMode): Promise<T | undefined> {\n\t\tif (formatter.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst selector = Iterable.first(FormattingConflicts._selectors);\n\t\tif (selector) {\n\t\t\treturn await selector(formatter, document, mode);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport async function formatDocumentRangesWithSelectedProvider(\n\taccessor: ServicesAccessor,\n\teditorOrModel: ITextModel | IActiveCodeEditor,\n\trangeOrRanges: Range | Range[],\n\tmode: FormattingMode,\n\tprogress: IProgress<DocumentRangeFormattingEditProvider>,\n\ttoken: CancellationToken\n): Promise<void> {\n\n\tconst instaService = accessor.get(IInstantiationService);\n\tconst { documentRangeFormattingEditProvider: documentRangeFormattingEditProviderRegistry } = accessor.get(ILanguageFeaturesService);\n\tconst model = isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel;\n\tconst provider = documentRangeFormattingEditProviderRegistry.ordered(model);\n\tconst selected = await FormattingConflicts.select(provider, model, mode);\n\tif (selected) {\n\t\tprogress.report(selected);\n\t\tawait instaService.invokeFunction(formatDocumentRangesWithProvider, selected, editorOrModel, rangeOrRanges, token);\n\t}\n}\n\nexport async function formatDocumentRangesWithProvider(\n\taccessor: ServicesAccessor,\n\tprovider: DocumentRangeFormattingEditProvider,\n\teditorOrModel: ITextModel | IActiveCodeEditor,\n\trangeOrRanges: Range | Range[],\n\ttoken: CancellationToken\n): Promise<boolean> {\n\tconst workerService = accessor.get(IEditorWorkerService);\n\tconst logService = accessor.get(ILogService);\n\n\tlet model: ITextModel;\n\tlet cts: CancellationTokenSource;\n\tif (isCodeEditor(editorOrModel)) {\n\t\tmodel = editorOrModel.getModel();\n\t\tcts = new EditorStateCancellationTokenSource(editorOrModel, CodeEditorStateFlag.Value | CodeEditorStateFlag.Position, undefined, token);\n\t} else {\n\t\tmodel = editorOrModel;\n\t\tcts = new TextModelCancellationTokenSource(editorOrModel, token);\n\t}\n\n\t// make sure that ranges don't overlap nor touch each other\n\tconst ranges: Range[] = [];\n\tlet len = 0;\n\tfor (const range of asArray(rangeOrRanges).sort(Range.compareRangesUsingStarts)) {\n\t\tif (len > 0 && Range.areIntersectingOrTouching(ranges[len - 1], range)) {\n\t\t\tranges[len - 1] = Range.fromPositions(ranges[len - 1].getStartPosition(), range.getEndPosition());\n\t\t} else {\n\t\t\tlen = ranges.push(range);\n\t\t}\n\t}\n\n\tconst computeEdits = async (range: Range) => {\n\t\tlogService.trace(`[format][provideDocumentRangeFormattingEdits] (request)`, provider.extensionId?.value, range);\n\n\t\tconst result = (await provider.provideDocumentRangeFormattingEdits(\n\t\t\tmodel,\n\t\t\trange,\n\t\t\tmodel.getFormattingOptions(),\n\t\t\tcts.token\n\t\t)) || [];\n\n\t\tlogService.trace(`[format][provideDocumentRangeFormattingEdits] (response)`, provider.extensionId?.value, result);\n\n\t\treturn result;\n\t};\n\n\tconst hasIntersectingEdit = (a: TextEdit[], b: TextEdit[]) => {\n\t\tif (!a.length || !b.length) {\n\t\t\treturn false;\n\t\t}\n\t\t// quick exit if the list of ranges are completely unrelated [O(n)]\n\t\tconst mergedA = a.reduce((acc, val) => { return Range.plusRange(acc, val.range); }, a[0].range);\n\t\tif (!b.some(x => { return Range.intersectRanges(mergedA, x.range); })) {\n\t\t\treturn false;\n\t\t}\n\t\t// fallback to a complete check [O(n^2)]\n\t\tfor (const edit of a) {\n\t\t\tfor (const otherEdit of b) {\n\t\t\t\tif (Range.intersectRanges(edit.range, otherEdit.range)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst allEdits: TextEdit[] = [];\n\tconst rawEditsList: TextEdit[][] = [];\n\ttry {\n\t\tif (typeof provider.provideDocumentRangesFormattingEdits === 'function') {\n\t\t\tlogService.trace(`[format][provideDocumentRangeFormattingEdits] (request)`, provider.extensionId?.value, ranges);\n\t\t\tconst result = (await provider.provideDocumentRangesFormattingEdits(\n\t\t\t\tmodel,\n\t\t\t\tranges,\n\t\t\t\tmodel.getFormattingOptions(),\n\t\t\t\tcts.token\n\t\t\t)) || [];\n\t\t\tlogService.trace(`[format][provideDocumentRangeFormattingEdits] (response)`, provider.extensionId?.value, result);\n\t\t\trawEditsList.push(result);\n\t\t} else {\n\n\t\t\tfor (const range of ranges) {\n\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\trawEditsList.push(await computeEdits(range));\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < ranges.length; ++i) {\n\t\t\t\tfor (let j = i + 1; j < ranges.length; ++j) {\n\t\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (hasIntersectingEdit(rawEditsList[i], rawEditsList[j])) {\n\t\t\t\t\t\t// Merge ranges i and j into a single range, recompute the associated edits\n\t\t\t\t\t\tconst mergedRange = Range.plusRange(ranges[i], ranges[j]);\n\t\t\t\t\t\tconst edits = await computeEdits(mergedRange);\n\t\t\t\t\t\tranges.splice(j, 1);\n\t\t\t\t\t\tranges.splice(i, 1);\n\t\t\t\t\t\tranges.push(mergedRange);\n\t\t\t\t\t\trawEditsList.splice(j, 1);\n\t\t\t\t\t\trawEditsList.splice(i, 1);\n\t\t\t\t\t\trawEditsList.push(edits);\n\t\t\t\t\t\t// Restart scanning\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const rawEdits of rawEditsList) {\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst minimalEdits = await workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n\t\t\tif (minimalEdits) {\n\t\t\t\tallEdits.push(...minimalEdits);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcts.dispose();\n\t}\n\n\tif (allEdits.length === 0) {\n\t\treturn false;\n\t}\n\n\tif (isCodeEditor(editorOrModel)) {\n\t\t// use editor to apply edits\n\t\tFormattingEdit.execute(editorOrModel, allEdits, true);\n\t\talertFormattingEdits(allEdits);\n\t\teditorOrModel.revealPositionInCenterIfOutsideViewport(editorOrModel.getPosition(), ScrollType.Immediate);\n\n\t} else {\n\t\t// use model to apply edits\n\t\tconst [{ range }] = allEdits;\n\t\tconst initialSelection = new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t\tmodel.pushEditOperations([initialSelection], allEdits.map(edit => {\n\t\t\treturn {\n\t\t\t\ttext: edit.text,\n\t\t\t\trange: Range.lift(edit.range),\n\t\t\t\tforceMoveMarkers: true\n\t\t\t};\n\t\t}), undoEdits => {\n\t\t\tfor (const { range } of undoEdits) {\n\t\t\t\tif (Range.areIntersectingOrTouching(range, initialSelection)) {\n\t\t\t\t\treturn [new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn)];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\treturn true;\n}\n\nexport async function formatDocumentWithSelectedProvider(\n\taccessor: ServicesAccessor,\n\teditorOrModel: ITextModel | IActiveCodeEditor,\n\tmode: FormattingMode,\n\tprogress: IProgress<DocumentFormattingEditProvider>,\n\ttoken: CancellationToken\n): Promise<void> {\n\n\tconst instaService = accessor.get(IInstantiationService);\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst model = isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel;\n\tconst provider = getRealAndSyntheticDocumentFormattersOrdered(languageFeaturesService.documentFormattingEditProvider, languageFeaturesService.documentRangeFormattingEditProvider, model);\n\tconst selected = await FormattingConflicts.select(provider, model, mode);\n\tif (selected) {\n\t\tprogress.report(selected);\n\t\tawait instaService.invokeFunction(formatDocumentWithProvider, selected, editorOrModel, mode, token);\n\t}\n}\n\nexport async function formatDocumentWithProvider(\n\taccessor: ServicesAccessor,\n\tprovider: DocumentFormattingEditProvider,\n\teditorOrModel: ITextModel | IActiveCodeEditor,\n\tmode: FormattingMode,\n\ttoken: CancellationToken\n): Promise<boolean> {\n\tconst workerService = accessor.get(IEditorWorkerService);\n\n\tlet model: ITextModel;\n\tlet cts: CancellationTokenSource;\n\tif (isCodeEditor(editorOrModel)) {\n\t\tmodel = editorOrModel.getModel();\n\t\tcts = new EditorStateCancellationTokenSource(editorOrModel, CodeEditorStateFlag.Value | CodeEditorStateFlag.Position, undefined, token);\n\t} else {\n\t\tmodel = editorOrModel;\n\t\tcts = new TextModelCancellationTokenSource(editorOrModel, token);\n\t}\n\n\tlet edits: TextEdit[] | undefined;\n\ttry {\n\t\tconst rawEdits = await provider.provideDocumentFormattingEdits(\n\t\t\tmodel,\n\t\t\tmodel.getFormattingOptions(),\n\t\t\tcts.token\n\t\t);\n\n\t\tedits = await workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n\n\t\tif (cts.token.isCancellationRequested) {\n\t\t\treturn true;\n\t\t}\n\n\t} finally {\n\t\tcts.dispose();\n\t}\n\n\tif (!edits || edits.length === 0) {\n\t\treturn false;\n\t}\n\n\tif (isCodeEditor(editorOrModel)) {\n\t\t// use editor to apply edits\n\t\tFormattingEdit.execute(editorOrModel, edits, mode !== FormattingMode.Silent);\n\n\t\tif (mode !== FormattingMode.Silent) {\n\t\t\talertFormattingEdits(edits);\n\t\t\teditorOrModel.revealPositionInCenterIfOutsideViewport(editorOrModel.getPosition(), ScrollType.Immediate);\n\t\t}\n\n\t} else {\n\t\t// use model to apply edits\n\t\tconst [{ range }] = edits;\n\t\tconst initialSelection = new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t\tmodel.pushEditOperations([initialSelection], edits.map(edit => {\n\t\t\treturn {\n\t\t\t\ttext: edit.text,\n\t\t\t\trange: Range.lift(edit.range),\n\t\t\t\tforceMoveMarkers: true\n\t\t\t};\n\t\t}), undoEdits => {\n\t\t\tfor (const { range } of undoEdits) {\n\t\t\t\tif (Range.areIntersectingOrTouching(range, initialSelection)) {\n\t\t\t\t\treturn [new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn)];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\treturn true;\n}\n\nexport async function getDocumentRangeFormattingEditsUntilResult(\n\tworkerService: IEditorWorkerService,\n\tlanguageFeaturesService: ILanguageFeaturesService,\n\tmodel: ITextModel,\n\trange: Range,\n\toptions: FormattingOptions,\n\ttoken: CancellationToken\n): Promise<TextEdit[] | undefined> {\n\n\tconst providers = languageFeaturesService.documentRangeFormattingEditProvider.ordered(model);\n\tfor (const provider of providers) {\n\t\tconst rawEdits = await Promise.resolve(provider.provideDocumentRangeFormattingEdits(model, range, options, token)).catch(onUnexpectedExternalError);\n\t\tif (isNonEmptyArray(rawEdits)) {\n\t\t\treturn await workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n\t\t}\n\t}\n\treturn undefined;\n}\n\nexport async function getDocumentFormattingEditsUntilResult(\n\tworkerService: IEditorWorkerService,\n\tlanguageFeaturesService: ILanguageFeaturesService,\n\tmodel: ITextModel,\n\toptions: FormattingOptions,\n\ttoken: CancellationToken\n): Promise<TextEdit[] | undefined> {\n\n\tconst providers = getRealAndSyntheticDocumentFormattersOrdered(languageFeaturesService.documentFormattingEditProvider, languageFeaturesService.documentRangeFormattingEditProvider, model);\n\tfor (const provider of providers) {\n\t\tconst rawEdits = await Promise.resolve(provider.provideDocumentFormattingEdits(model, options, token)).catch(onUnexpectedExternalError);\n\t\tif (isNonEmptyArray(rawEdits)) {\n\t\t\treturn await workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n\t\t}\n\t}\n\treturn undefined;\n}\n\nexport function getOnTypeFormattingEdits(\n\tworkerService: IEditorWorkerService,\n\tlanguageFeaturesService: ILanguageFeaturesService,\n\tmodel: ITextModel,\n\tposition: Position,\n\tch: string,\n\toptions: FormattingOptions,\n\ttoken: CancellationToken\n): Promise<TextEdit[] | null | undefined> {\n\n\tconst providers = languageFeaturesService.onTypeFormattingEditProvider.ordered(model);\n\n\tif (providers.length === 0) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tif (providers[0].autoFormatTriggerCharacters.indexOf(ch) < 0) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\treturn Promise.resolve(providers[0].provideOnTypeFormattingEdits(model, position, ch, options, token)).catch(onUnexpectedExternalError).then(edits => {\n\t\treturn workerService.computeMoreMinimalEdits(model.uri, edits);\n\t});\n}\n\nCommandsRegistry.registerCommand('_executeFormatRangeProvider', async function (accessor, ...args) {\n\tconst [resource, range, options] = args;\n\tassertType(URI.isUri(resource));\n\tassertType(Range.isIRange(range));\n\n\tconst resolverService = accessor.get(ITextModelService);\n\tconst workerService = accessor.get(IEditorWorkerService);\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst reference = await resolverService.createModelReference(resource);\n\ttry {\n\t\treturn getDocumentRangeFormattingEditsUntilResult(workerService, languageFeaturesService, reference.object.textEditorModel, Range.lift(range), options, CancellationToken.None);\n\t} finally {\n\t\treference.dispose();\n\t}\n});\n\nCommandsRegistry.registerCommand('_executeFormatDocumentProvider', async function (accessor, ...args) {\n\tconst [resource, options] = args;\n\tassertType(URI.isUri(resource));\n\n\tconst resolverService = accessor.get(ITextModelService);\n\tconst workerService = accessor.get(IEditorWorkerService);\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst reference = await resolverService.createModelReference(resource);\n\ttry {\n\t\treturn getDocumentFormattingEditsUntilResult(workerService, languageFeaturesService, reference.object.textEditorModel, options, CancellationToken.None);\n\t} finally {\n\t\treference.dispose();\n\t}\n});\n\nCommandsRegistry.registerCommand('_executeFormatOnTypeProvider', async function (accessor, ...args) {\n\tconst [resource, position, ch, options] = args;\n\tassertType(URI.isUri(resource));\n\tassertType(Position.isIPosition(position));\n\tassertType(typeof ch === 'string');\n\n\tconst resolverService = accessor.get(ITextModelService);\n\tconst workerService = accessor.get(IEditorWorkerService);\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\tconst reference = await resolverService.createModelReference(resource);\n\ttry {\n\t\treturn getOnTypeFormattingEdits(workerService, languageFeaturesService, reference.object.textEditorModel, Position.lift(position), ch, options, CancellationToken.None);\n\t} finally {\n\t\treference.dispose();\n\t}\n});\n"]}