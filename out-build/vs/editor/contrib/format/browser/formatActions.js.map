{"version":3,"sources":["vs/editor/contrib/format/browser/formatActions.ts"],"names":[],"mappings":"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","file":"formatActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { KeyChord, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, EditorContributionInstantiation, registerEditorAction, registerEditorContribution, ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { CharacterSet } from 'vs/editor/common/core/characterClassifier';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorker';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { alertFormattingEdits, formatDocumentRangesWithSelectedProvider, formatDocumentWithSelectedProvider, FormattingMode, getOnTypeFormattingEdits } from 'vs/editor/contrib/format/browser/format';\nimport { FormattingEdit } from 'vs/editor/contrib/format/browser/formattingEdit';\nimport * as nls from 'vs/nls';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IEditorProgressService, Progress } from 'vs/platform/progress/common/progress';\n\nexport class FormatOnType implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.autoFormat';\n\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _sessionDisposables = new DisposableStore();\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IEditorWorkerService private readonly _workerService: IEditorWorkerService\n\t) {\n\t\tthis._disposables.add(_languageFeaturesService.onTypeFormattingEditProvider.onDidChange(this._update, this));\n\t\tthis._disposables.add(_editor.onDidChangeModel(() => this._update()));\n\t\tthis._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n\t\tthis._disposables.add(_editor.onDidChangeConfiguration(e => {\n\t\t\tif (e.hasChanged(EditorOption.formatOnType)) {\n\t\t\t\tthis._update();\n\t\t\t}\n\t\t}));\n\t\tthis._update();\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._sessionDisposables.dispose();\n\t}\n\n\tprivate _update(): void {\n\n\t\t// clean up\n\t\tthis._sessionDisposables.clear();\n\n\t\t// we are disabled\n\t\tif (!this._editor.getOption(EditorOption.formatOnType)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// no model\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\n\t\t// no support\n\t\tconst [support] = this._languageFeaturesService.onTypeFormattingEditProvider.ordered(model);\n\t\tif (!support || !support.autoFormatTriggerCharacters) {\n\t\t\treturn;\n\t\t}\n\n\t\t// register typing listeners that will trigger the format\n\t\tconst triggerChars = new CharacterSet();\n\t\tfor (const ch of support.autoFormatTriggerCharacters) {\n\t\t\ttriggerChars.add(ch.charCodeAt(0));\n\t\t}\n\t\tthis._sessionDisposables.add(this._editor.onDidType((text: string) => {\n\t\t\tconst lastCharCode = text.charCodeAt(text.length - 1);\n\t\t\tif (triggerChars.has(lastCharCode)) {\n\t\t\t\tthis._trigger(String.fromCharCode(lastCharCode));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _trigger(ch: string): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._editor.getSelections().length > 1 || !this._editor.getSelection().isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst position = this._editor.getPosition();\n\t\tconst cts = new CancellationTokenSource();\n\n\t\t// install a listener that checks if edits happens before the\n\t\t// position on which we format right now. If so, we won't\n\t\t// apply the format edits\n\t\tconst unbind = this._editor.onDidChangeModelContent((e) => {\n\t\t\tif (e.isFlush) {\n\t\t\t\t// a model.setValue() was called\n\t\t\t\t// cancel only once\n\t\t\t\tcts.cancel();\n\t\t\t\tunbind.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let i = 0, len = e.changes.length; i < len; i++) {\n\t\t\t\tconst change = e.changes[i];\n\t\t\t\tif (change.range.endLineNumber <= position.lineNumber) {\n\t\t\t\t\t// cancel only once\n\t\t\t\t\tcts.cancel();\n\t\t\t\t\tunbind.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tgetOnTypeFormattingEdits(\n\t\t\tthis._workerService,\n\t\t\tthis._languageFeaturesService,\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\tch,\n\t\t\tmodel.getFormattingOptions(),\n\t\t\tcts.token\n\t\t).then(edits => {\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isNonEmptyArray(edits)) {\n\t\t\t\tFormattingEdit.execute(this._editor, edits, true);\n\t\t\t\talertFormattingEdits(edits);\n\t\t\t}\n\t\t}).finally(() => {\n\t\t\tunbind.dispose();\n\t\t});\n\t}\n}\n\nclass FormatOnPaste implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.formatOnPaste';\n\n\tprivate readonly _callOnDispose = new DisposableStore();\n\tprivate readonly _callOnModel = new DisposableStore();\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tthis._callOnDispose.add(editor.onDidChangeConfiguration(() => this._update()));\n\t\tthis._callOnDispose.add(editor.onDidChangeModel(() => this._update()));\n\t\tthis._callOnDispose.add(editor.onDidChangeModelLanguage(() => this._update()));\n\t\tthis._callOnDispose.add(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(this._update, this));\n\t}\n\n\tdispose(): void {\n\t\tthis._callOnDispose.dispose();\n\t\tthis._callOnModel.dispose();\n\t}\n\n\tprivate _update(): void {\n\n\t\t// clean up\n\t\tthis._callOnModel.clear();\n\n\t\t// we are disabled\n\t\tif (!this.editor.getOption(EditorOption.formatOnPaste)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// no model\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// no formatter\n\t\tif (!this._languageFeaturesService.documentRangeFormattingEditProvider.has(this.editor.getModel())) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._callOnModel.add(this.editor.onDidPaste(({ range }) => this._trigger(range)));\n\t}\n\n\tprivate _trigger(range: Range): void {\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.editor.getSelections().length > 1) {\n\t\t\treturn;\n\t\t}\n\t\tthis._instantiationService.invokeFunction(formatDocumentRangesWithSelectedProvider, this.editor, range, FormattingMode.Silent, Progress.None, CancellationToken.None).catch(onUnexpectedError);\n\t}\n}\n\nclass FormatDocumentAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.formatDocument',\n\t\t\tlabel: nls.localize('formatDocument.label', \"Format Document\"),\n\t\t\talias: 'Format Document',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.notInCompositeEditor, EditorContextKeys.writable, EditorContextKeys.hasDocumentFormattingProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyI },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 1.3\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tif (editor.hasModel()) {\n\t\t\tconst instaService = accessor.get(IInstantiationService);\n\t\t\tconst progressService = accessor.get(IEditorProgressService);\n\t\t\tawait progressService.showWhile(\n\t\t\t\tinstaService.invokeFunction(formatDocumentWithSelectedProvider, editor, FormattingMode.Explicit, Progress.None, CancellationToken.None),\n\t\t\t\t250\n\t\t\t);\n\t\t}\n\t}\n}\n\nclass FormatSelectionAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.formatSelection',\n\t\t\tlabel: nls.localize('formatSelection.label', \"Format Selection\"),\n\t\t\talias: 'Format Selection',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasDocumentSelectionFormattingProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyF),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\twhen: EditorContextKeys.hasNonEmptySelection,\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 1.31\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst instaService = accessor.get(IInstantiationService);\n\t\tconst model = editor.getModel();\n\n\t\tconst ranges = editor.getSelections().map(range => {\n\t\t\treturn range.isEmpty()\n\t\t\t\t? new Range(range.startLineNumber, 1, range.startLineNumber, model.getLineMaxColumn(range.startLineNumber))\n\t\t\t\t: range;\n\t\t});\n\n\t\tconst progressService = accessor.get(IEditorProgressService);\n\t\tawait progressService.showWhile(\n\t\t\tinstaService.invokeFunction(formatDocumentRangesWithSelectedProvider, editor, ranges, FormattingMode.Explicit, Progress.None, CancellationToken.None),\n\t\t\t250\n\t\t);\n\t}\n}\n\nregisterEditorContribution(FormatOnType.ID, FormatOnType, EditorContributionInstantiation.BeforeFirstInteraction);\nregisterEditorContribution(FormatOnPaste.ID, FormatOnPaste, EditorContributionInstantiation.BeforeFirstInteraction);\nregisterEditorAction(FormatDocumentAction);\nregisterEditorAction(FormatSelectionAction);\n\n// this is the old format action that does both (format document OR format selection)\n// and we keep it here such that existing keybinding configurations etc will still work\nCommandsRegistry.registerCommand('editor.action.format', async accessor => {\n\tconst editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\tif (!editor || !editor.hasModel()) {\n\t\treturn;\n\t}\n\tconst commandService = accessor.get(ICommandService);\n\tif (editor.getSelection().isEmpty()) {\n\t\tawait commandService.executeCommand('editor.action.formatDocument');\n\t} else {\n\t\tawait commandService.executeCommand('editor.action.formatSelection');\n\t}\n});\n"]}