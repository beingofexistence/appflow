{"version":3,"sources":["vs/editor/contrib/peekView/browser/peekView.ts"],"names":[],"mappings":"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","file":"peekView.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { IMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { ActionBar, ActionsOrientation, IActionBarOptions } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { Action } from 'vs/base/common/actions';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { Color } from 'vs/base/common/color';\nimport { Emitter } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport * as objects from 'vs/base/common/objects';\nimport 'vs/css!./media/peekViewWidget';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorContributionInstantiation, registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { EmbeddedCodeEditorWidget } from 'vs/editor/browser/widget/embeddedCodeEditorWidget';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { IOptions, IStyles, ZoneWidget } from 'vs/editor/contrib/zoneWidget/browser/zoneWidget';\nimport * as nls from 'vs/nls';\nimport { createActionViewItem } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { createDecorator, IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { activeContrastBorder, contrastBorder, editorForeground, editorInfoForeground, registerColor } from 'vs/platform/theme/common/colorRegistry';\n\nexport const IPeekViewService = createDecorator<IPeekViewService>('IPeekViewService');\nexport interface IPeekViewService {\n\treadonly _serviceBrand: undefined;\n\taddExclusiveWidget(editor: ICodeEditor, widget: PeekViewWidget): void;\n}\n\nregisterSingleton(IPeekViewService, class implements IPeekViewService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _widgets = new Map<ICodeEditor, { widget: PeekViewWidget; listener: IDisposable }>();\n\n\taddExclusiveWidget(editor: ICodeEditor, widget: PeekViewWidget): void {\n\t\tconst existing = this._widgets.get(editor);\n\t\tif (existing) {\n\t\t\texisting.listener.dispose();\n\t\t\texisting.widget.dispose();\n\t\t}\n\t\tconst remove = () => {\n\t\t\tconst data = this._widgets.get(editor);\n\t\t\tif (data && data.widget === widget) {\n\t\t\t\tdata.listener.dispose();\n\t\t\t\tthis._widgets.delete(editor);\n\t\t\t}\n\t\t};\n\t\tthis._widgets.set(editor, { widget, listener: widget.onDidClose(remove) });\n\t}\n}, InstantiationType.Delayed);\n\nexport namespace PeekContext {\n\texport const inPeekEditor = new RawContextKey<boolean>('inReferenceSearchEditor', true, nls.localize('inReferenceSearchEditor', \"Whether the current code editor is embedded inside peek\"));\n\texport const notInPeekEditor = inPeekEditor.toNegated();\n}\n\nclass PeekContextController implements IEditorContribution {\n\n\tstatic readonly ID = 'editor.contrib.referenceController';\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\t\tPeekContext.inPeekEditor.bindTo(contextKeyService);\n\t\t}\n\t}\n\n\tdispose(): void { }\n}\n\nregisterEditorContribution(PeekContextController.ID, PeekContextController, EditorContributionInstantiation.Eager); // eager because it needs to define a context key\n\nexport function getOuterEditor(accessor: ServicesAccessor): ICodeEditor | null {\n\tconst editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\treturn editor.getParentEditor();\n\t}\n\treturn editor;\n}\n\nexport interface IPeekViewStyles extends IStyles {\n\theaderBackgroundColor?: Color;\n\tprimaryHeadingColor?: Color;\n\tsecondaryHeadingColor?: Color;\n}\n\nexport type IPeekViewOptions = IOptions & IPeekViewStyles & {\n\tsupportOnTitleClick?: boolean;\n};\n\nconst defaultOptions: IPeekViewOptions = {\n\theaderBackgroundColor: Color.white,\n\tprimaryHeadingColor: Color.fromHex('#333333'),\n\tsecondaryHeadingColor: Color.fromHex('#6c6c6cb3')\n};\n\nexport abstract class PeekViewWidget extends ZoneWidget {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidClose = new Emitter<PeekViewWidget>();\n\treadonly onDidClose = this._onDidClose.event;\n\tprivate disposed?: true;\n\n\tprotected _headElement?: HTMLDivElement;\n\tprotected _titleElement?: HTMLDivElement;\n\tprotected _primaryHeading?: HTMLElement;\n\tprotected _secondaryHeading?: HTMLElement;\n\tprotected _metaHeading?: HTMLElement;\n\tprotected _actionbarWidget?: ActionBar;\n\tprotected _bodyElement?: HTMLDivElement;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\toptions: IPeekViewOptions,\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper(editor, options);\n\t\tobjects.mixin(this.options, defaultOptions, false);\n\t}\n\n\toverride dispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true; // prevent consumers who dispose on onDidClose from looping\n\t\t\tsuper.dispose();\n\t\t\tthis._onDidClose.fire(this);\n\t\t}\n\t}\n\n\toverride style(styles: IPeekViewStyles): void {\n\t\tconst options = <IPeekViewOptions>this.options;\n\t\tif (styles.headerBackgroundColor) {\n\t\t\toptions.headerBackgroundColor = styles.headerBackgroundColor;\n\t\t}\n\t\tif (styles.primaryHeadingColor) {\n\t\t\toptions.primaryHeadingColor = styles.primaryHeadingColor;\n\t\t}\n\t\tif (styles.secondaryHeadingColor) {\n\t\t\toptions.secondaryHeadingColor = styles.secondaryHeadingColor;\n\t\t}\n\t\tsuper.style(styles);\n\t}\n\n\tprotected override _applyStyles(): void {\n\t\tsuper._applyStyles();\n\t\tconst options = <IPeekViewOptions>this.options;\n\t\tif (this._headElement && options.headerBackgroundColor) {\n\t\t\tthis._headElement.style.backgroundColor = options.headerBackgroundColor.toString();\n\t\t}\n\t\tif (this._primaryHeading && options.primaryHeadingColor) {\n\t\t\tthis._primaryHeading.style.color = options.primaryHeadingColor.toString();\n\t\t}\n\t\tif (this._secondaryHeading && options.secondaryHeadingColor) {\n\t\t\tthis._secondaryHeading.style.color = options.secondaryHeadingColor.toString();\n\t\t}\n\t\tif (this._bodyElement && options.frameColor) {\n\t\t\tthis._bodyElement.style.borderColor = options.frameColor.toString();\n\t\t}\n\t}\n\n\tprotected _fillContainer(container: HTMLElement): void {\n\t\tthis.setCssClass('peekview-widget');\n\n\t\tthis._headElement = dom.$<HTMLDivElement>('.head');\n\t\tthis._bodyElement = dom.$<HTMLDivElement>('.body');\n\n\t\tthis._fillHead(this._headElement);\n\t\tthis._fillBody(this._bodyElement);\n\n\t\tcontainer.appendChild(this._headElement);\n\t\tcontainer.appendChild(this._bodyElement);\n\t}\n\n\tprotected _fillHead(container: HTMLElement, noCloseAction?: boolean): void {\n\t\tthis._titleElement = dom.$('.peekview-title');\n\t\tif ((this.options as IPeekViewOptions).supportOnTitleClick) {\n\t\t\tthis._titleElement.classList.add('clickable');\n\t\t\tdom.addStandardDisposableListener(this._titleElement, 'click', event => this._onTitleClick(event));\n\t\t}\n\t\tdom.append(this._headElement!, this._titleElement);\n\n\t\tthis._fillTitleIcon(this._titleElement);\n\t\tthis._primaryHeading = dom.$('span.filename');\n\t\tthis._secondaryHeading = dom.$('span.dirname');\n\t\tthis._metaHeading = dom.$('span.meta');\n\t\tdom.append(this._titleElement, this._primaryHeading, this._secondaryHeading, this._metaHeading);\n\n\t\tconst actionsContainer = dom.$('.peekview-actions');\n\t\tdom.append(this._headElement!, actionsContainer);\n\n\t\tconst actionBarOptions = this._getActionBarOptions();\n\t\tthis._actionbarWidget = new ActionBar(actionsContainer, actionBarOptions);\n\t\tthis._disposables.add(this._actionbarWidget);\n\n\t\tif (!noCloseAction) {\n\t\t\tthis._actionbarWidget.push(new Action('peekview.close', nls.localize('label.close', \"Close\"), ThemeIcon.asClassName(Codicon.close), true, () => {\n\t\t\t\tthis.dispose();\n\t\t\t\treturn Promise.resolve();\n\t\t\t}), { label: false, icon: true });\n\t\t}\n\t}\n\n\tprotected _fillTitleIcon(container: HTMLElement): void {\n\t}\n\n\tprotected _getActionBarOptions(): IActionBarOptions {\n\t\treturn {\n\t\t\tactionViewItemProvider: createActionViewItem.bind(undefined, this.instantiationService),\n\t\t\torientation: ActionsOrientation.HORIZONTAL\n\t\t};\n\t}\n\n\tprotected _onTitleClick(event: IMouseEvent): void {\n\t\t// implement me if supportOnTitleClick option is set\n\t}\n\n\tsetTitle(primaryHeading: string, secondaryHeading?: string): void {\n\t\tif (this._primaryHeading && this._secondaryHeading) {\n\t\t\tthis._primaryHeading.innerText = primaryHeading;\n\t\t\tthis._primaryHeading.setAttribute('title', primaryHeading);\n\t\t\tif (secondaryHeading) {\n\t\t\t\tthis._secondaryHeading.innerText = secondaryHeading;\n\t\t\t} else {\n\t\t\t\tdom.clearNode(this._secondaryHeading);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetMetaTitle(value: string): void {\n\t\tif (this._metaHeading) {\n\t\t\tif (value) {\n\t\t\t\tthis._metaHeading.innerText = value;\n\t\t\t\tdom.show(this._metaHeading);\n\t\t\t} else {\n\t\t\t\tdom.hide(this._metaHeading);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected abstract _fillBody(container: HTMLElement): void;\n\n\tprotected override _doLayout(heightInPixel: number, widthInPixel: number): void {\n\n\t\tif (!this._isShowing && heightInPixel < 0) {\n\t\t\t// Looks like the view zone got folded away!\n\t\t\tthis.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\tconst headHeight = Math.ceil(this.editor.getOption(EditorOption.lineHeight) * 1.2);\n\t\tconst bodyHeight = Math.round(heightInPixel - (headHeight + 2 /* the border-top/bottom width*/));\n\n\t\tthis._doLayoutHead(headHeight, widthInPixel);\n\t\tthis._doLayoutBody(bodyHeight, widthInPixel);\n\t}\n\n\tprotected _doLayoutHead(heightInPixel: number, widthInPixel: number): void {\n\t\tif (this._headElement) {\n\t\t\tthis._headElement.style.height = `${heightInPixel}px`;\n\t\t\tthis._headElement.style.lineHeight = this._headElement.style.height;\n\t\t}\n\t}\n\n\tprotected _doLayoutBody(heightInPixel: number, widthInPixel: number): void {\n\t\tif (this._bodyElement) {\n\t\t\tthis._bodyElement.style.height = `${heightInPixel}px`;\n\t\t}\n\t}\n}\n\n\nexport const peekViewTitleBackground = registerColor('peekViewTitle.background', { dark: '#252526', light: '#F3F3F3', hcDark: Color.black, hcLight: Color.white }, nls.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));\nexport const peekViewTitleForeground = registerColor('peekViewTitleLabel.foreground', { dark: Color.white, light: Color.black, hcDark: Color.white, hcLight: editorForeground }, nls.localize('peekViewTitleForeground', 'Color of the peek view title.'));\nexport const peekViewTitleInfoForeground = registerColor('peekViewTitleDescription.foreground', { dark: '#ccccccb3', light: '#616161', hcDark: '#FFFFFF99', hcLight: '#292929' }, nls.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));\nexport const peekViewBorder = registerColor('peekView.border', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));\n\nexport const peekViewResultsBackground = registerColor('peekViewResult.background', { dark: '#252526', light: '#F3F3F3', hcDark: Color.black, hcLight: Color.white }, nls.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));\nexport const peekViewResultsMatchForeground = registerColor('peekViewResult.lineForeground', { dark: '#bbbbbb', light: '#646465', hcDark: Color.white, hcLight: editorForeground }, nls.localize('peekViewResultsMatchForeground', 'Foreground color for line nodes in the peek view result list.'));\nexport const peekViewResultsFileForeground = registerColor('peekViewResult.fileForeground', { dark: Color.white, light: '#1E1E1E', hcDark: Color.white, hcLight: editorForeground }, nls.localize('peekViewResultsFileForeground', 'Foreground color for file nodes in the peek view result list.'));\nexport const peekViewResultsSelectionBackground = registerColor('peekViewResult.selectionBackground', { dark: '#3399ff33', light: '#3399ff33', hcDark: null, hcLight: null }, nls.localize('peekViewResultsSelectionBackground', 'Background color of the selected entry in the peek view result list.'));\nexport const peekViewResultsSelectionForeground = registerColor('peekViewResult.selectionForeground', { dark: Color.white, light: '#6C6C6C', hcDark: Color.white, hcLight: editorForeground }, nls.localize('peekViewResultsSelectionForeground', 'Foreground color of the selected entry in the peek view result list.'));\nexport const peekViewEditorBackground = registerColor('peekViewEditor.background', { dark: '#001F33', light: '#F2F8FC', hcDark: Color.black, hcLight: Color.white }, nls.localize('peekViewEditorBackground', 'Background color of the peek view editor.'));\nexport const peekViewEditorGutterBackground = registerColor('peekViewEditorGutter.background', { dark: peekViewEditorBackground, light: peekViewEditorBackground, hcDark: peekViewEditorBackground, hcLight: peekViewEditorBackground }, nls.localize('peekViewEditorGutterBackground', 'Background color of the gutter in the peek view editor.'));\nexport const peekViewEditorStickyScrollBackground = registerColor('peekViewEditorStickyScroll.background', { dark: peekViewEditorBackground, light: peekViewEditorBackground, hcDark: peekViewEditorBackground, hcLight: peekViewEditorBackground }, nls.localize('peekViewEditorStickScrollBackground', 'Background color of sticky scroll in the peek view editor.'));\n\nexport const peekViewResultsMatchHighlight = registerColor('peekViewResult.matchHighlightBackground', { dark: '#ea5c004d', light: '#ea5c004d', hcDark: null, hcLight: null }, nls.localize('peekViewResultsMatchHighlight', 'Match highlight color in the peek view result list.'));\nexport const peekViewEditorMatchHighlight = registerColor('peekViewEditor.matchHighlightBackground', { dark: '#ff8f0099', light: '#f5d802de', hcDark: null, hcLight: null }, nls.localize('peekViewEditorMatchHighlight', 'Match highlight color in the peek view editor.'));\nexport const peekViewEditorMatchHighlightBorder = registerColor('peekViewEditor.matchHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('peekViewEditorMatchHighlightBorder', 'Match highlight border in the peek view editor.'));\n"]}