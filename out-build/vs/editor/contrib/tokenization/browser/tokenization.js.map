{"version":3,"sources":["vs/editor/contrib/tokenization/browser/tokenization.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAOhG,MAAM,qBAAsB,SAAQ,sBAAG;QACtC;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,+BAA+B;gBACnC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAiB,EAAE,IAA6B,CAAC;gBACrE,KAAK,EAAE,6BAA6B;gBACpC,YAAY,EAAE,SAAS;aACvB,CAAC,CAAC;QACJ,CAAC;QAEM,GAAG,CAAC,QAA0B,EAAE,MAAmB;YACzD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;gBACvB,OAAO;aACP;YACD,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAChC,KAAK,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC;YACvC,MAAM,EAAE,GAAG,IAAI,eAAG,EAAQ,CAAC;YAC3B,KAAK,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;YAC3D,EAAE,CAAC,IAAI,EAAE,CAAC;YACV,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAElD,CAAC;KACD;IAED,IAAA,sBAAG,EAAkB,qBAAqB,CAAC,CAAC","file":"tokenization.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, registerEditorAction, ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport * as nls from 'vs/nls';\n\nclass ForceRetokenizeAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.forceRetokenize',\n\t\t\tlabel: nls.localize('forceRetokenize', \"Developer: Force Retokenize\"),\n\t\t\talias: 'Developer: Force Retokenize',\n\t\t\tprecondition: undefined\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = editor.getModel();\n\t\tmodel.tokenization.resetTokenization();\n\t\tconst sw = new StopWatch();\n\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t\tsw.stop();\n\t\tconsole.log(`tokenization took ${sw.elapsed()}`);\n\n\t}\n}\n\nregisterEditorAction(ForceRetokenizeAction);\n"]}