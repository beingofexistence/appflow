{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/codeAction/test/browser/codeActionModel.test.ts"],"names":[],"mappings":"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","file":"codeActionModel.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { assertType } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { runWithFakedTimers } from 'vs/base/test/common/timeTravelScheduler';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/languageFeatureRegistry';\nimport * as languages from 'vs/editor/common/languages';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { CodeActionModel, CodeActionsState } from 'vs/editor/contrib/codeAction/browser/codeActionModel';\nimport { createTestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport { createTextModel } from 'vs/editor/test/common/testTextModel';\nimport { MockContextKeyService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { MarkerService } from 'vs/platform/markers/common/markerService';\n\nconst testProvider = {\n\tprovideCodeActions(): languages.CodeActionList {\n\t\treturn {\n\t\t\tactions: [\n\t\t\t\t{ title: 'test', command: { id: 'test-command', title: 'test', arguments: [] } }\n\t\t\t],\n\t\t\tdispose() { /* noop*/ }\n\t\t};\n\t}\n};\n\nsuite('CodeActionModel', () => {\n\n\tconst languageId = 'foo-lang';\n\tconst uri = URI.parse('untitled:path');\n\tlet model: TextModel;\n\tlet markerService: MarkerService;\n\tlet editor: ICodeEditor;\n\tlet registry: LanguageFeatureRegistry<languages.CodeActionProvider>;\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tdisposables.clear();\n\t\tmarkerService = new MarkerService();\n\t\tmodel = createTextModel('foobar  foo bar\\nfarboo far boo', languageId, undefined, uri);\n\t\teditor = createTestCodeEditor(model);\n\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t\tregistry = new LanguageFeatureRegistry();\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t\teditor.dispose();\n\t\tmodel.dispose();\n\t\tmarkerService.dispose();\n\t});\n\n\ttest('Oracle -> marker added', async () => {\n\t\tlet done: () => void;\n\t\tconst donePromise = new Promise<void>(resolve => {\n\t\t\tdone = resolve;\n\t\t});\n\t\tawait runWithFakedTimers({ useFakeTimers: true }, () => {\n\t\t\tconst reg = registry.register(languageId, testProvider);\n\t\t\tdisposables.add(reg);\n\n\t\t\tconst contextKeys = new MockContextKeyService();\n\t\t\tconst model = disposables.add(new CodeActionModel(editor, registry, markerService, contextKeys, undefined));\n\t\t\tdisposables.add(model.onDidChangeState((e: CodeActionsState.State) => {\n\t\t\t\tassertType(e.type === CodeActionsState.Type.Triggered);\n\n\t\t\t\tassert.strictEqual(e.trigger.type, languages.CodeActionTriggerType.Auto);\n\t\t\t\tassert.ok(e.actions);\n\n\t\t\t\te.actions.then(fixes => {\n\t\t\t\t\tmodel.dispose();\n\t\t\t\t\tassert.strictEqual(fixes.validActions.length, 1);\n\t\t\t\t\tdone();\n\t\t\t\t}, done);\n\t\t\t}));\n\n\t\t\t// start here\n\t\t\tmarkerService.changeOne('fake', uri, [{\n\t\t\t\tstartLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 6,\n\t\t\t\tmessage: 'error',\n\t\t\t\tseverity: 1,\n\t\t\t\tcode: '',\n\t\t\t\tsource: ''\n\t\t\t}]);\n\t\t\treturn donePromise;\n\t\t});\n\t});\n\n\ttest('Oracle -> position changed', async () => {\n\t\tawait runWithFakedTimers({ useFakeTimers: true }, () => {\n\t\t\tconst reg = registry.register(languageId, testProvider);\n\t\t\tdisposables.add(reg);\n\n\t\t\tmarkerService.changeOne('fake', uri, [{\n\t\t\t\tstartLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 6,\n\t\t\t\tmessage: 'error',\n\t\t\t\tseverity: 1,\n\t\t\t\tcode: '',\n\t\t\t\tsource: ''\n\t\t\t}]);\n\n\t\t\teditor.setPosition({ lineNumber: 2, column: 1 });\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst contextKeys = new MockContextKeyService();\n\t\t\t\tconst model = disposables.add(new CodeActionModel(editor, registry, markerService, contextKeys, undefined));\n\t\t\t\tdisposables.add(model.onDidChangeState((e: CodeActionsState.State) => {\n\t\t\t\t\tassertType(e.type === CodeActionsState.Type.Triggered);\n\n\t\t\t\t\tassert.strictEqual(e.trigger.type, languages.CodeActionTriggerType.Auto);\n\t\t\t\t\tassert.ok(e.actions);\n\t\t\t\t\te.actions.then(fixes => {\n\t\t\t\t\t\tmodel.dispose();\n\t\t\t\t\t\tassert.strictEqual(fixes.validActions.length, 1);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}, reject);\n\t\t\t\t}));\n\t\t\t\t// start here\n\t\t\t\teditor.setPosition({ lineNumber: 1, column: 1 });\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Oracle -> should only auto trigger once for cursor and marker update right after each other', async () => {\n\t\tlet done: () => void;\n\t\tconst donePromise = new Promise<void>(resolve => { done = resolve; });\n\n\t\tawait runWithFakedTimers({ useFakeTimers: true }, () => {\n\t\t\tconst reg = registry.register(languageId, testProvider);\n\t\t\tdisposables.add(reg);\n\n\t\t\tlet triggerCount = 0;\n\t\t\tconst contextKeys = new MockContextKeyService();\n\t\t\tconst model = disposables.add(new CodeActionModel(editor, registry, markerService, contextKeys, undefined));\n\t\t\tdisposables.add(model.onDidChangeState((e: CodeActionsState.State) => {\n\t\t\t\tassertType(e.type === CodeActionsState.Type.Triggered);\n\n\t\t\t\tassert.strictEqual(e.trigger.type, languages.CodeActionTriggerType.Auto);\n\t\t\t\t++triggerCount;\n\n\t\t\t\t// give time for second trigger before completing test\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tmodel.dispose();\n\t\t\t\t\tassert.strictEqual(triggerCount, 1);\n\t\t\t\t\tdone();\n\t\t\t\t}, 0);\n\t\t\t}, 5 /*delay*/));\n\n\t\t\tmarkerService.changeOne('fake', uri, [{\n\t\t\t\tstartLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 6,\n\t\t\t\tmessage: 'error',\n\t\t\t\tseverity: 1,\n\t\t\t\tcode: '',\n\t\t\t\tsource: ''\n\t\t\t}]);\n\n\t\t\teditor.setSelection({ startLineNumber: 1, startColumn: 1, endLineNumber: 4, endColumn: 1 });\n\n\t\t\treturn donePromise;\n\t\t});\n\t});\n});\n"]}