{"version":3,"sources":["vs/editor/contrib/codeAction/browser/codeAction.ts"],"names":[],"mappings":"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","file":"codeAction.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { coalesce, equals, isNonEmptyArray } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { illegalArgument, isCancellationError, onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IBulkEditService } from 'vs/editor/browser/services/bulkEditService';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/languageFeatureRegistry';\nimport * as languages from 'vs/editor/common/languages';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { TextModelCancellationTokenSource } from 'vs/editor/contrib/editorState/browser/editorState';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IProgress, Progress } from 'vs/platform/progress/common/progress';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { CodeActionFilter, CodeActionItem, CodeActionKind, CodeActionSet, CodeActionTrigger, CodeActionTriggerSource, filtersAction, mayIncludeActionsOfKind } from '../common/types';\n\nexport const codeActionCommandId = 'editor.action.codeAction';\nexport const quickFixCommandId = 'editor.action.quickFix';\nexport const autoFixCommandId = 'editor.action.autoFix';\nexport const refactorCommandId = 'editor.action.refactor';\nexport const refactorPreviewCommandId = 'editor.action.refactor.preview';\nexport const sourceActionCommandId = 'editor.action.sourceAction';\nexport const organizeImportsCommandId = 'editor.action.organizeImports';\nexport const fixAllCommandId = 'editor.action.fixAll';\n\nclass ManagedCodeActionSet extends Disposable implements CodeActionSet {\n\n\tprivate static codeActionsPreferredComparator(a: languages.CodeAction, b: languages.CodeAction): number {\n\t\tif (a.isPreferred && !b.isPreferred) {\n\t\t\treturn -1;\n\t\t} else if (!a.isPreferred && b.isPreferred) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate static codeActionsComparator({ action: a }: CodeActionItem, { action: b }: CodeActionItem): number {\n\t\tif (isNonEmptyArray(a.diagnostics)) {\n\t\t\treturn isNonEmptyArray(b.diagnostics) ? ManagedCodeActionSet.codeActionsPreferredComparator(a, b) : -1;\n\t\t} else if (isNonEmptyArray(b.diagnostics)) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn ManagedCodeActionSet.codeActionsPreferredComparator(a, b); // both have no diagnostics\n\t\t}\n\t}\n\n\tpublic readonly validActions: readonly CodeActionItem[];\n\tpublic readonly allActions: readonly CodeActionItem[];\n\n\tpublic constructor(\n\t\tactions: readonly CodeActionItem[],\n\t\tpublic readonly documentation: readonly languages.Command[],\n\t\tdisposables: DisposableStore,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(disposables);\n\n\t\tthis.allActions = [...actions].sort(ManagedCodeActionSet.codeActionsComparator);\n\t\tthis.validActions = this.allActions.filter(({ action }) => !action.disabled);\n\t}\n\n\tpublic get hasAutoFix() {\n\t\treturn this.validActions.some(({ action: fix }) => !!fix.kind && CodeActionKind.QuickFix.contains(new CodeActionKind(fix.kind)) && !!fix.isPreferred);\n\t}\n}\n\nconst emptyCodeActionsResponse = { actions: [] as CodeActionItem[], documentation: undefined };\n\nexport async function getCodeActions(\n\tregistry: LanguageFeatureRegistry<languages.CodeActionProvider>,\n\tmodel: ITextModel,\n\trangeOrSelection: Range | Selection,\n\ttrigger: CodeActionTrigger,\n\tprogress: IProgress<languages.CodeActionProvider>,\n\ttoken: CancellationToken,\n): Promise<CodeActionSet> {\n\tconst filter = trigger.filter || {};\n\tconst notebookFilter: CodeActionFilter = {\n\t\t...filter,\n\t\texcludes: [...(filter.excludes || []), CodeActionKind.Notebook],\n\t};\n\n\tconst codeActionContext: languages.CodeActionContext = {\n\t\tonly: filter.include?.value,\n\t\ttrigger: trigger.type,\n\t};\n\n\tconst cts = new TextModelCancellationTokenSource(model, token);\n\t// if the trigger is auto (autosave, lightbulb, etc), we should exclude notebook codeActions\n\tconst excludeNotebookCodeActions = (trigger.type === languages.CodeActionTriggerType.Auto);\n\tconst providers = getCodeActionProviders(registry, model, (excludeNotebookCodeActions) ? notebookFilter : filter);\n\n\tconst disposables = new DisposableStore();\n\tconst promises = providers.map(async provider => {\n\t\ttry {\n\t\t\tprogress.report(provider);\n\t\t\tconst providedCodeActions = await provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token);\n\t\t\tif (providedCodeActions) {\n\t\t\t\tdisposables.add(providedCodeActions);\n\t\t\t}\n\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn emptyCodeActionsResponse;\n\t\t\t}\n\n\t\t\tconst filteredActions = (providedCodeActions?.actions || []).filter(action => action && filtersAction(filter, action));\n\t\t\tconst documentation = getDocumentationFromProvider(provider, filteredActions, filter.include);\n\t\t\treturn {\n\t\t\t\tactions: filteredActions.map(action => new CodeActionItem(action, provider)),\n\t\t\t\tdocumentation\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tif (isCancellationError(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tonUnexpectedExternalError(err);\n\t\t\treturn emptyCodeActionsResponse;\n\t\t}\n\t});\n\n\tconst listener = registry.onDidChange(() => {\n\t\tconst newProviders = registry.all(model);\n\t\tif (!equals(newProviders, providers)) {\n\t\t\tcts.cancel();\n\t\t}\n\t});\n\n\ttry {\n\t\tconst actions = await Promise.all(promises);\n\t\tconst allActions = actions.map(x => x.actions).flat();\n\t\tconst allDocumentation = [\n\t\t\t...coalesce(actions.map(x => x.documentation)),\n\t\t\t...getAdditionalDocumentationForShowingActions(registry, model, trigger, allActions)\n\t\t];\n\t\treturn new ManagedCodeActionSet(allActions, allDocumentation, disposables);\n\t} finally {\n\t\tlistener.dispose();\n\t\tcts.dispose();\n\t}\n}\n\nfunction getCodeActionProviders(\n\tregistry: LanguageFeatureRegistry<languages.CodeActionProvider>,\n\tmodel: ITextModel,\n\tfilter: CodeActionFilter\n) {\n\treturn registry.all(model)\n\t\t// Don't include providers that we know will not return code actions of interest\n\t\t.filter(provider => {\n\t\t\tif (!provider.providedCodeActionKinds) {\n\t\t\t\t// We don't know what type of actions this provider will return.\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn provider.providedCodeActionKinds.some(kind => mayIncludeActionsOfKind(filter, new CodeActionKind(kind)));\n\t\t});\n}\n\nfunction* getAdditionalDocumentationForShowingActions(\n\tregistry: LanguageFeatureRegistry<languages.CodeActionProvider>,\n\tmodel: ITextModel,\n\ttrigger: CodeActionTrigger,\n\tactionsToShow: readonly CodeActionItem[],\n): Iterable<languages.Command> {\n\tif (model && actionsToShow.length) {\n\t\tfor (const provider of registry.all(model)) {\n\t\t\tif (provider._getAdditionalMenuItems) {\n\t\t\t\tyield* provider._getAdditionalMenuItems?.({ trigger: trigger.type, only: trigger.filter?.include?.value }, actionsToShow.map(item => item.action));\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction getDocumentationFromProvider(\n\tprovider: languages.CodeActionProvider,\n\tprovidedCodeActions: readonly languages.CodeAction[],\n\tonly?: CodeActionKind\n): languages.Command | undefined {\n\tif (!provider.documentation) {\n\t\treturn undefined;\n\t}\n\n\tconst documentation = provider.documentation.map(entry => ({ kind: new CodeActionKind(entry.kind), command: entry.command }));\n\n\tif (only) {\n\t\tlet currentBest: { readonly kind: CodeActionKind; readonly command: languages.Command } | undefined;\n\t\tfor (const entry of documentation) {\n\t\t\tif (entry.kind.contains(only)) {\n\t\t\t\tif (!currentBest) {\n\t\t\t\t\tcurrentBest = entry;\n\t\t\t\t} else {\n\t\t\t\t\t// Take best match\n\t\t\t\t\tif (currentBest.kind.contains(entry.kind)) {\n\t\t\t\t\t\tcurrentBest = entry;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (currentBest) {\n\t\t\treturn currentBest?.command;\n\t\t}\n\t}\n\n\t// Otherwise, check to see if any of the provided actions match.\n\tfor (const action of providedCodeActions) {\n\t\tif (!action.kind) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const entry of documentation) {\n\t\t\tif (entry.kind.contains(new CodeActionKind(action.kind))) {\n\t\t\t\treturn entry.command;\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nexport enum ApplyCodeActionReason {\n\tOnSave = 'onSave',\n\tFromProblemsView = 'fromProblemsView',\n\tFromCodeActions = 'fromCodeActions'\n}\n\nexport async function applyCodeAction(\n\taccessor: ServicesAccessor,\n\titem: CodeActionItem,\n\tcodeActionReason: ApplyCodeActionReason,\n\toptions?: { readonly preview?: boolean; readonly editor?: ICodeEditor },\n\ttoken: CancellationToken = CancellationToken.None,\n): Promise<void> {\n\tconst bulkEditService = accessor.get(IBulkEditService);\n\tconst commandService = accessor.get(ICommandService);\n\tconst telemetryService = accessor.get(ITelemetryService);\n\tconst notificationService = accessor.get(INotificationService);\n\n\ttype ApplyCodeActionEvent = {\n\t\tcodeActionTitle: string;\n\t\tcodeActionKind: string | undefined;\n\t\tcodeActionIsPreferred: boolean;\n\t\treason: ApplyCodeActionReason;\n\t};\n\ttype ApplyCodeEventClassification = {\n\t\tcodeActionTitle: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The display label of the applied code action' };\n\t\tcodeActionKind: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The kind (refactor, quickfix) of the applied code action' };\n\t\tcodeActionIsPreferred: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Was the code action marked as being a preferred action?' };\n\t\treason: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The kind of action used to trigger apply code action.' };\n\t\towner: 'mjbvz';\n\t\tcomment: 'Event used to gain insights into which code actions are being triggered';\n\t};\n\n\ttelemetryService.publicLog2<ApplyCodeActionEvent, ApplyCodeEventClassification>('codeAction.applyCodeAction', {\n\t\tcodeActionTitle: item.action.title,\n\t\tcodeActionKind: item.action.kind,\n\t\tcodeActionIsPreferred: !!item.action.isPreferred,\n\t\treason: codeActionReason,\n\t});\n\n\tawait item.resolve(token);\n\tif (token.isCancellationRequested) {\n\t\treturn;\n\t}\n\n\tif (item.action.edit?.edits.length) {\n\t\tconst result = await bulkEditService.apply(item.action.edit, {\n\t\t\teditor: options?.editor,\n\t\t\tlabel: item.action.title,\n\t\t\tquotableLabel: item.action.title,\n\t\t\tcode: 'undoredo.codeAction',\n\t\t\trespectAutoSaveConfig: codeActionReason !== ApplyCodeActionReason.OnSave,\n\t\t\tshowPreview: options?.preview,\n\t\t});\n\n\t\tif (!result.isApplied) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (item.action.command) {\n\t\ttry {\n\t\t\tawait commandService.executeCommand(item.action.command.id, ...(item.action.command.arguments || []));\n\t\t} catch (err) {\n\t\t\tconst message = asMessage(err);\n\t\t\tnotificationService.error(\n\t\t\t\ttypeof message === 'string'\n\t\t\t\t\t? message\n\t\t\t\t\t: nls.localize('applyCodeActionFailed', \"An unknown error occurred while applying the code action\"));\n\t\t}\n\t}\n}\n\nfunction asMessage(err: any): string | undefined {\n\tif (typeof err === 'string') {\n\t\treturn err;\n\t} else if (err instanceof Error && typeof err.message === 'string') {\n\t\treturn err.message;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nCommandsRegistry.registerCommand('_executeCodeActionProvider', async function (accessor, resource: URI, rangeOrSelection: Range | Selection, kind?: string, itemResolveCount?: number): Promise<ReadonlyArray<languages.CodeAction>> {\n\tif (!(resource instanceof URI)) {\n\t\tthrow illegalArgument();\n\t}\n\n\tconst { codeActionProvider } = accessor.get(ILanguageFeaturesService);\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument();\n\t}\n\n\tconst validatedRangeOrSelection = Selection.isISelection(rangeOrSelection)\n\t\t? Selection.liftSelection(rangeOrSelection)\n\t\t: Range.isIRange(rangeOrSelection)\n\t\t\t? model.validateRange(rangeOrSelection)\n\t\t\t: undefined;\n\n\tif (!validatedRangeOrSelection) {\n\t\tthrow illegalArgument();\n\t}\n\n\tconst include = typeof kind === 'string' ? new CodeActionKind(kind) : undefined;\n\tconst codeActionSet = await getCodeActions(\n\t\tcodeActionProvider,\n\t\tmodel,\n\t\tvalidatedRangeOrSelection,\n\t\t{ type: languages.CodeActionTriggerType.Invoke, triggerAction: CodeActionTriggerSource.Default, filter: { includeSourceActions: true, include } },\n\t\tProgress.None,\n\t\tCancellationToken.None);\n\n\tconst resolving: Promise<any>[] = [];\n\tconst resolveCount = Math.min(codeActionSet.validActions.length, typeof itemResolveCount === 'number' ? itemResolveCount : 0);\n\tfor (let i = 0; i < resolveCount; i++) {\n\t\tresolving.push(codeActionSet.validActions[i].resolve(CancellationToken.None));\n\t}\n\n\ttry {\n\t\tawait Promise.all(resolving);\n\t\treturn codeActionSet.validActions.map(item => item.action);\n\t} finally {\n\t\tsetTimeout(() => codeActionSet.dispose(), 100);\n\t}\n});\n"]}