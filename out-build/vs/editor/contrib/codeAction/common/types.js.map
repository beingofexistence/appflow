{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/codeAction/common/types.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,MAAa,GAAG;iBACS,MAAC,GAAK,GAAG,CAAC;iBAEX,SAAI,GAAG,IAAI,GAAG,CAAY,UAAU,CAAC,CAAC,GAAC,4CAA4C;iBACnF,UAAK,GAAG,IAAI,GAAG,CAAY,EAAE,CAAC,CAAC;iBAC/B,aAAQ,GAAG,IAAI,GAAG,CAAY,UAAU,CAAC,CAAC;iBAC1C,aAAQ,GAAG,IAAI,GAAG,CAAY,UAAU,CAAC,CAAC;iBAC1C,oBAAe,GAAG,GAAG,CAAY,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;iBAC5D,mBAAc,GAAG,GAAG,CAAY,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBAC1D,iBAAY,GAAG,GAAG,CAAY,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBACtD,oBAAe,GAAG,GAAG,CAAY,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;iBAC5D,aAAQ,GAAG,IAAI,GAAG,CAAY,UAAU,CAAC,CAAC;iBAC1C,WAAM,GAAG,IAAI,GAAG,CAAY,QAAQ,CAAC,CAAC;iBACtC,0BAAqB,GAAG,GAAG,CAAY,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;iBACxE,iBAAY,GAAG,GAAG,CAAY,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBACtD,iBAAY,GAAG,GAAG,CAAY,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAEjF,YACiB,KAAa;YAAb,UAAK,GAAL,KAAK,CAAQ;QAC1B,CAAC;QAEE,MAAM,CAAC,KAAU;YACvB,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC;QACnC,CAAC;QAEM,QAAQ,CAAC,KAAU;YACzB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAY,CAAC,CAAG,CAAC;QAC3G,CAAC;QAEM,UAAU,CAAC,KAAU;YAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrD,CAAC;QAEM,MAAM,CAAC,IAAY;YACzB,OAAO,IAAI,GAAG,CAAY,IAAI,CAAC,KAAK,GAAG,GAAG,CAAY,CAAC,GAAK,IAAI,CAAC,CAAC;QACnE,CAAC;;IAnCF,kBAoCC;IAED,IAAkB,mBAIjB;IAJD,WAAkB,mBAAmB;QACpC,4CAAqB,CAAA;QACrB,sCAAe,CAAA;QACf,sCAAe,CAAA;IAChB,CAAC,EAJiB,mBAAmB,mCAAnB,mBAAmB,QAIpC;IAED,IAAY,uBAaX;IAbD,WAAY,uBAAuB;QAClC,gDAAqB,CAAA;QACrB,+DAAoC,CAAA;QACpC,kDAAuB,CAAA;QACvB,sDAA2B,CAAA;QAC3B,yDAA8B,CAAA;QAC9B,wDAA6B,CAAA;QAC7B,6CAAkB,CAAA;QAClB,+DAAoC,CAAA;QACpC,+CAAoB,CAAA;QACpB,mEAAwC,CAAA;QACxC,uDAA4B,CAAA;QAC5B,yDAA8B,CAAA;IAC/B,CAAC,EAbW,uBAAuB,uCAAvB,uBAAuB,QAalC;IASD,SAAgB,GAAG,CAAqB,MAAwB,EAAE,YAAiB;QAClF,oEAAoE;QACpE,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;YAC/D,OAAO,KAAK,CAAC;SACb;QAED,IAAI,MAAM,CAAC,QAAQ,EAAE;YACpB,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,cAAc,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE;gBAC3F,OAAO,KAAK,CAAC;aACb;SACD;QAED,mEAAmE;QACnE,IAAI,CAAC,MAAM,CAAC,oBAAoB,IAAI,GAAG,CAAY,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YACjF,OAAO,KAAK,CAAC;SACb;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAlBD,kBAkBC;IAED,SAAgB,GAAG,CAAW,MAAwB,EAAE,MAA4B;QACnF,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,CAAY,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAE7E,6BAA6B;QAC7B,IAAI,MAAM,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;gBACxD,OAAO,KAAK,CAAC;aACb;SACD;QAED,IAAI,MAAM,CAAC,QAAQ,EAAE;YACpB,IAAI,UAAU,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,cAAc,CAAC,UAAU,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE;gBACvG,OAAO,KAAK,CAAC;aACb;SACD;QAED,mEAAmE;QACnE,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;YACjC,IAAI,UAAU,IAAI,GAAG,CAAY,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;gBAC7D,OAAO,KAAK,CAAC;aACb;SACD;QAED,IAAI,MAAM,CAAC,2BAA2B,EAAE;YACvC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;gBACxB,OAAO,KAAK,CAAC;aACb;SACD;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IA9BD,kBA8BC;IAED,SAAS,cAAc,CAAC,YAAiB,EAAa,OAAY,EAAa,OAAmC;QACjH,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YACpC,OAAO,KAAK,CAAC;SACb;QACD,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACzC,iDAAiD;YACjD,OAAO,KAAK,CAAC;SACb;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAaD,MAAa,GAAG;QACR,MAAM,CAAC,QAAQ,CAAC,GAAQ,EAAE,QAA8D;YAC9F,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;gBACpC,OAAO,IAAI,GAAG,CAAmB,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aACvE;YACD,OAAO,IAAI,GAAG,CACb,GAAG,CAAmB,CAAC,CAAe,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,EACzD,GAAG,CAAmB,CAAC,CAAgB,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,EAC3D,GAAG,CAAmB,CAAC,CAAgB,GAAG,CAAC,CAAC,CAAC;QAC/C,CAAC;QAEO,MAAM,CAAC,CAAC,CAAgB,GAAQ,EAAE,gBAAqC;YAC9E,QAAQ,OAAO,GAAG,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE;gBACrE,KAAK,OAAO,CAAC,CAAC,+CAAiC;gBAC/C,KAAK,OAAO,CAAC,CAAC,+CAAiC;gBAC/C,KAAK,UAAU,CAAC,CAAC,qDAAoC;gBACrD,OAAO,CAAC,CAAC,OAAO,gBAAgB,CAAC;aACjC;QACF,CAAC;QAEO,MAAM,CAAC,CAAC,CAAe,GAAQ,EAAE,WAAgB;YACxD,OAAO,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ;gBAClC,CAAC,CAAC,IAAI,GAAG,CAAY,GAAG,CAAC,IAAI,CAAC;gBAC9B,CAAC,CAAC,WAAW,CAAC;QAChB,CAAC;QAEO,MAAM,CAAC,CAAC,CAAgB,GAAQ;YACvC,OAAO,OAAO,GAAG,CAAC,SAAS,KAAK,SAAS;gBACxC,CAAC,CAAC,GAAG,CAAC,SAAS;gBACf,CAAC,CAAC,KAAK,CAAC;QACV,CAAC;QAED,YACiB,IAAS,EACT,KAA0B,EAC1B,SAAkB;YAFlB,SAAI,GAAJ,IAAI,CAAK;YACT,UAAK,GAAL,KAAK,CAAqB;YAC1B,cAAS,GAAT,SAAS,CAAS;QAC/B,CAAC;KACL;IArCD,kBAqCC;IAED,MAAa,GAAG;QAEf,YACiB,MAA4B,EAC5B,QAAkD;YADlD,WAAM,GAAN,MAAM,CAAsB;YAC5B,aAAQ,GAAR,QAAQ,CAA0C;QAC/D,CAAC;QAEL,KAAK,CAAC,OAAO,CAAC,KAAwB;YACrC,IAAI,IAAI,CAAC,QAAQ,EAAE,iBAAiB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBAC1D,IAAI,MAA+C,CAAC;gBACpD,IAAI;oBACH,MAAM,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;iBACnE;gBAAC,OAAO,GAAG,EAAE;oBACb,IAAA,WAAE,EAAwB,GAAG,CAAC,CAAC;iBAC/B;gBACD,IAAI,MAAM,EAAE;oBACX,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;iBAC/B;aACD;YACD,OAAO,IAAI,CAAC;QACb,CAAC;KACD;IArBD,kBAqBC","file":"types.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { Position } from 'vs/editor/common/core/position';\nimport * as languages from 'vs/editor/common/languages';\nimport { ActionSet } from 'vs/platform/actionWidget/common/actionWidget';\n\nexport class CodeActionKind {\n\tprivate static readonly sep = '.';\n\n\tpublic static readonly None = new CodeActionKind('@@none@@'); // Special code action that contains nothing\n\tpublic static readonly Empty = new CodeActionKind('');\n\tpublic static readonly QuickFix = new CodeActionKind('quickfix');\n\tpublic static readonly Refactor = new CodeActionKind('refactor');\n\tpublic static readonly RefactorExtract = CodeActionKind.Refactor.append('extract');\n\tpublic static readonly RefactorInline = CodeActionKind.Refactor.append('inline');\n\tpublic static readonly RefactorMove = CodeActionKind.Refactor.append('move');\n\tpublic static readonly RefactorRewrite = CodeActionKind.Refactor.append('rewrite');\n\tpublic static readonly Notebook = new CodeActionKind('notebook');\n\tpublic static readonly Source = new CodeActionKind('source');\n\tpublic static readonly SourceOrganizeImports = CodeActionKind.Source.append('organizeImports');\n\tpublic static readonly SourceFixAll = CodeActionKind.Source.append('fixAll');\n\tpublic static readonly SurroundWith = CodeActionKind.Refactor.append('surround');\n\n\tconstructor(\n\t\tpublic readonly value: string\n\t) { }\n\n\tpublic equals(other: CodeActionKind): boolean {\n\t\treturn this.value === other.value;\n\t}\n\n\tpublic contains(other: CodeActionKind): boolean {\n\t\treturn this.equals(other) || this.value === '' || other.value.startsWith(this.value + CodeActionKind.sep);\n\t}\n\n\tpublic intersects(other: CodeActionKind): boolean {\n\t\treturn this.contains(other) || other.contains(this);\n\t}\n\n\tpublic append(part: string): CodeActionKind {\n\t\treturn new CodeActionKind(this.value + CodeActionKind.sep + part);\n\t}\n}\n\nexport const enum CodeActionAutoApply {\n\tIfSingle = 'ifSingle',\n\tFirst = 'first',\n\tNever = 'never',\n}\n\nexport enum CodeActionTriggerSource {\n\tRefactor = 'refactor',\n\tRefactorPreview = 'refactor preview',\n\tLightbulb = 'lightbulb',\n\tDefault = 'other (default)',\n\tSourceAction = 'source action',\n\tQuickFix = 'quick fix action',\n\tFixAll = 'fix all',\n\tOrganizeImports = 'organize imports',\n\tAutoFix = 'auto fix',\n\tQuickFixHover = 'quick fix hover window',\n\tOnSave = 'save participants',\n\tProblemsView = 'problems view'\n}\n\nexport interface CodeActionFilter {\n\treadonly include?: CodeActionKind;\n\treadonly excludes?: readonly CodeActionKind[];\n\treadonly includeSourceActions?: boolean;\n\treadonly onlyIncludePreferredActions?: boolean;\n}\n\nexport function mayIncludeActionsOfKind(filter: CodeActionFilter, providedKind: CodeActionKind): boolean {\n\t// A provided kind may be a subset or superset of our filtered kind.\n\tif (filter.include && !filter.include.intersects(providedKind)) {\n\t\treturn false;\n\t}\n\n\tif (filter.excludes) {\n\t\tif (filter.excludes.some(exclude => excludesAction(providedKind, exclude, filter.include))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Don't return source actions unless they are explicitly requested\n\tif (!filter.includeSourceActions && CodeActionKind.Source.contains(providedKind)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function filtersAction(filter: CodeActionFilter, action: languages.CodeAction): boolean {\n\tconst actionKind = action.kind ? new CodeActionKind(action.kind) : undefined;\n\n\t// Filter out actions by kind\n\tif (filter.include) {\n\t\tif (!actionKind || !filter.include.contains(actionKind)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (filter.excludes) {\n\t\tif (actionKind && filter.excludes.some(exclude => excludesAction(actionKind, exclude, filter.include))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Don't return source actions unless they are explicitly requested\n\tif (!filter.includeSourceActions) {\n\t\tif (actionKind && CodeActionKind.Source.contains(actionKind)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (filter.onlyIncludePreferredActions) {\n\t\tif (!action.isPreferred) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction excludesAction(providedKind: CodeActionKind, exclude: CodeActionKind, include: CodeActionKind | undefined): boolean {\n\tif (!exclude.contains(providedKind)) {\n\t\treturn false;\n\t}\n\tif (include && exclude.contains(include)) {\n\t\t// The include is more specific, don't filter out\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nexport interface CodeActionTrigger {\n\treadonly type: languages.CodeActionTriggerType;\n\treadonly triggerAction: CodeActionTriggerSource;\n\treadonly filter?: CodeActionFilter;\n\treadonly autoApply?: CodeActionAutoApply;\n\treadonly context?: {\n\t\treadonly notAvailableMessage: string;\n\t\treadonly position: Position;\n\t};\n}\n\nexport class CodeActionCommandArgs {\n\tpublic static fromUser(arg: any, defaults: { kind: CodeActionKind; apply: CodeActionAutoApply }): CodeActionCommandArgs {\n\t\tif (!arg || typeof arg !== 'object') {\n\t\t\treturn new CodeActionCommandArgs(defaults.kind, defaults.apply, false);\n\t\t}\n\t\treturn new CodeActionCommandArgs(\n\t\t\tCodeActionCommandArgs.getKindFromUser(arg, defaults.kind),\n\t\t\tCodeActionCommandArgs.getApplyFromUser(arg, defaults.apply),\n\t\t\tCodeActionCommandArgs.getPreferredUser(arg));\n\t}\n\n\tprivate static getApplyFromUser(arg: any, defaultAutoApply: CodeActionAutoApply) {\n\t\tswitch (typeof arg.apply === 'string' ? arg.apply.toLowerCase() : '') {\n\t\t\tcase 'first': return CodeActionAutoApply.First;\n\t\t\tcase 'never': return CodeActionAutoApply.Never;\n\t\t\tcase 'ifsingle': return CodeActionAutoApply.IfSingle;\n\t\t\tdefault: return defaultAutoApply;\n\t\t}\n\t}\n\n\tprivate static getKindFromUser(arg: any, defaultKind: CodeActionKind) {\n\t\treturn typeof arg.kind === 'string'\n\t\t\t? new CodeActionKind(arg.kind)\n\t\t\t: defaultKind;\n\t}\n\n\tprivate static getPreferredUser(arg: any): boolean {\n\t\treturn typeof arg.preferred === 'boolean'\n\t\t\t? arg.preferred\n\t\t\t: false;\n\t}\n\n\tprivate constructor(\n\t\tpublic readonly kind: CodeActionKind,\n\t\tpublic readonly apply: CodeActionAutoApply,\n\t\tpublic readonly preferred: boolean,\n\t) { }\n}\n\nexport class CodeActionItem {\n\n\tconstructor(\n\t\tpublic readonly action: languages.CodeAction,\n\t\tpublic readonly provider: languages.CodeActionProvider | undefined,\n\t) { }\n\n\tasync resolve(token: CancellationToken): Promise<this> {\n\t\tif (this.provider?.resolveCodeAction && !this.action.edit) {\n\t\t\tlet action: languages.CodeAction | undefined | null;\n\t\t\ttry {\n\t\t\t\taction = await this.provider.resolveCodeAction(this.action, token);\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedExternalError(err);\n\t\t\t}\n\t\t\tif (action) {\n\t\t\t\tthis.action.edit = action.edit;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}\n\nexport interface CodeActionSet extends ActionSet<CodeActionItem> {\n\treadonly validActions: readonly CodeActionItem[];\n\treadonly allActions: readonly CodeActionItem[];\n\n\treadonly documentation: readonly languages.Command[];\n}\n"]}