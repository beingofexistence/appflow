{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/folding/browser/hiddenRangeModel.ts"],"names":[],"mappings":"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","file":"hiddenRangeModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { findFirstIdxMonotonousOrArrLen } from 'vs/base/common/arraysFind';\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IModelContentChangedEvent } from 'vs/editor/common/textModelEvents';\nimport { countEOL } from 'vs/editor/common/core/eolCounter';\nimport { FoldingModel } from 'vs/editor/contrib/folding/browser/foldingModel';\n\nexport class HiddenRangeModel {\n\n\tprivate readonly _foldingModel: FoldingModel;\n\tprivate _hiddenRanges: IRange[];\n\tprivate _foldingModelListener: IDisposable | null;\n\tprivate readonly _updateEventEmitter = new Emitter<IRange[]>();\n\tprivate _hasLineChanges: boolean = false;\n\n\tpublic get onDidChange(): Event<IRange[]> { return this._updateEventEmitter.event; }\n\tpublic get hiddenRanges() { return this._hiddenRanges; }\n\n\tpublic constructor(model: FoldingModel) {\n\t\tthis._foldingModel = model;\n\t\tthis._foldingModelListener = model.onDidChange(_ => this.updateHiddenRanges());\n\t\tthis._hiddenRanges = [];\n\t\tif (model.regions.length) {\n\t\t\tthis.updateHiddenRanges();\n\t\t}\n\t}\n\n\tpublic notifyChangeModelContent(e: IModelContentChangedEvent) {\n\t\tif (this._hiddenRanges.length && !this._hasLineChanges) {\n\t\t\tthis._hasLineChanges = e.changes.some(change => {\n\t\t\t\treturn change.range.endLineNumber !== change.range.startLineNumber || countEOL(change.text)[0] !== 0;\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate updateHiddenRanges(): void {\n\t\tlet updateHiddenAreas = false;\n\t\tconst newHiddenAreas: IRange[] = [];\n\t\tlet i = 0; // index into hidden\n\t\tlet k = 0;\n\n\t\tlet lastCollapsedStart = Number.MAX_VALUE;\n\t\tlet lastCollapsedEnd = -1;\n\n\t\tconst ranges = this._foldingModel.regions;\n\t\tfor (; i < ranges.length; i++) {\n\t\t\tif (!ranges.isCollapsed(i)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst startLineNumber = ranges.getStartLineNumber(i) + 1; // the first line is not hidden\n\t\t\tconst endLineNumber = ranges.getEndLineNumber(i);\n\t\t\tif (lastCollapsedStart <= startLineNumber && endLineNumber <= lastCollapsedEnd) {\n\t\t\t\t// ignore ranges contained in collapsed regions\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!updateHiddenAreas && k < this._hiddenRanges.length && this._hiddenRanges[k].startLineNumber === startLineNumber && this._hiddenRanges[k].endLineNumber === endLineNumber) {\n\t\t\t\t// reuse the old ranges\n\t\t\t\tnewHiddenAreas.push(this._hiddenRanges[k]);\n\t\t\t\tk++;\n\t\t\t} else {\n\t\t\t\tupdateHiddenAreas = true;\n\t\t\t\tnewHiddenAreas.push(new Range(startLineNumber, 1, endLineNumber, 1));\n\t\t\t}\n\t\t\tlastCollapsedStart = startLineNumber;\n\t\t\tlastCollapsedEnd = endLineNumber;\n\t\t}\n\t\tif (this._hasLineChanges || updateHiddenAreas || k < this._hiddenRanges.length) {\n\t\t\tthis.applyHiddenRanges(newHiddenAreas);\n\t\t}\n\t}\n\n\tprivate applyHiddenRanges(newHiddenAreas: IRange[]) {\n\t\tthis._hiddenRanges = newHiddenAreas;\n\t\tthis._hasLineChanges = false;\n\t\tthis._updateEventEmitter.fire(newHiddenAreas);\n\t}\n\n\tpublic hasRanges() {\n\t\treturn this._hiddenRanges.length > 0;\n\t}\n\n\tpublic isHidden(line: number): boolean {\n\t\treturn findRange(this._hiddenRanges, line) !== null;\n\t}\n\n\tpublic adjustSelections(selections: Selection[]): boolean {\n\t\tlet hasChanges = false;\n\t\tconst editorModel = this._foldingModel.textModel;\n\t\tlet lastRange: IRange | null = null;\n\n\t\tconst adjustLine = (line: number) => {\n\t\t\tif (!lastRange || !isInside(line, lastRange)) {\n\t\t\t\tlastRange = findRange(this._hiddenRanges, line);\n\t\t\t}\n\t\t\tif (lastRange) {\n\t\t\t\treturn lastRange.startLineNumber - 1;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\tfor (let i = 0, len = selections.length; i < len; i++) {\n\t\t\tlet selection = selections[i];\n\t\t\tconst adjustedStartLine = adjustLine(selection.startLineNumber);\n\t\t\tif (adjustedStartLine) {\n\t\t\t\tselection = selection.setStartPosition(adjustedStartLine, editorModel.getLineMaxColumn(adjustedStartLine));\n\t\t\t\thasChanges = true;\n\t\t\t}\n\t\t\tconst adjustedEndLine = adjustLine(selection.endLineNumber);\n\t\t\tif (adjustedEndLine) {\n\t\t\t\tselection = selection.setEndPosition(adjustedEndLine, editorModel.getLineMaxColumn(adjustedEndLine));\n\t\t\t\thasChanges = true;\n\t\t\t}\n\t\t\tselections[i] = selection;\n\t\t}\n\t\treturn hasChanges;\n\t}\n\n\n\tpublic dispose() {\n\t\tif (this.hiddenRanges.length > 0) {\n\t\t\tthis._hiddenRanges = [];\n\t\t\tthis._updateEventEmitter.fire(this._hiddenRanges);\n\t\t}\n\t\tif (this._foldingModelListener) {\n\t\t\tthis._foldingModelListener.dispose();\n\t\t\tthis._foldingModelListener = null;\n\t\t}\n\t}\n}\n\nfunction isInside(line: number, range: IRange) {\n\treturn line >= range.startLineNumber && line <= range.endLineNumber;\n}\nfunction findRange(ranges: IRange[], line: number): IRange | null {\n\tconst i = findFirstIdxMonotonousOrArrLen(ranges, r => line < r.startLineNumber) - 1;\n\tif (i >= 0 && ranges[i].endLineNumber >= line) {\n\t\treturn ranges[i];\n\t}\n\treturn null;\n}\n"]}