{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/contrib/folding/test/browser/indentFold.test.ts"],"names":[],"mappings":"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","file":"indentFold.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { computeRanges } from 'vs/editor/contrib/folding/browser/indentRangeProvider';\nimport { createTextModel } from 'vs/editor/test/common/testTextModel';\n\ninterface IndentRange {\n\tstart: number;\n\tend: number;\n}\n\nsuite('Indentation Folding', () => {\n\tfunction r(start: number, end: number): IndentRange {\n\t\treturn { start, end };\n\t}\n\n\ttest('Limit by indent', () => {\n\n\n\t\tconst lines = [\n\t\t/* 1*/\t'A',\n\t\t/* 2*/\t'  A',\n\t\t/* 3*/\t'  A',\n\t\t/* 4*/\t'    A',\n\t\t/* 5*/\t'      A',\n\t\t/* 6*/\t'    A',\n\t\t/* 7*/\t'      A',\n\t\t/* 8*/\t'      A',\n\t\t/* 9*/\t'         A',\n\t\t/* 10*/\t'      A',\n\t\t/* 11*/\t'         A',\n\t\t/* 12*/\t'  A',\n\t\t/* 13*/\t'              A',\n\t\t/* 14*/\t'                 A',\n\t\t/* 15*/\t'A',\n\t\t/* 16*/\t'  A'\n\t\t];\n\t\tconst r1 = r(1, 14); //0\n\t\tconst r2 = r(3, 11); //1\n\t\tconst r3 = r(4, 5); //2\n\t\tconst r4 = r(6, 11); //2\n\t\tconst r5 = r(8, 9); //3\n\t\tconst r6 = r(10, 11); //3\n\t\tconst r7 = r(12, 14); //1\n\t\tconst r8 = r(13, 14);//4\n\t\tconst r9 = r(15, 16);//0\n\n\t\tconst model = createTextModel(lines.join('\\n'));\n\n\t\tfunction assertLimit(maxEntries: number, expectedRanges: IndentRange[], message: string) {\n\t\t\tlet reported: number | false = false;\n\t\t\tconst indentRanges = computeRanges(model, true, undefined, { limit: maxEntries, update: (computed, limited) => reported = limited });\n\t\t\tassert.ok(indentRanges.length <= maxEntries, 'max ' + message);\n\t\t\tconst actual: IndentRange[] = [];\n\t\t\tfor (let i = 0; i < indentRanges.length; i++) {\n\t\t\t\tactual.push({ start: indentRanges.getStartLineNumber(i), end: indentRanges.getEndLineNumber(i) });\n\t\t\t}\n\t\t\tassert.deepStrictEqual(actual, expectedRanges, message);\n\t\t\tassert.equal(reported, 9 <= maxEntries ? false : maxEntries, 'limited');\n\t\t}\n\n\t\tassertLimit(1000, [r1, r2, r3, r4, r5, r6, r7, r8, r9], '1000');\n\t\tassertLimit(9, [r1, r2, r3, r4, r5, r6, r7, r8, r9], '9');\n\t\tassertLimit(8, [r1, r2, r3, r4, r5, r6, r7, r9], '8');\n\t\tassertLimit(7, [r1, r2, r3, r4, r5, r7, r9], '7');\n\t\tassertLimit(6, [r1, r2, r3, r4, r7, r9], '6');\n\t\tassertLimit(5, [r1, r2, r3, r7, r9], '5');\n\t\tassertLimit(4, [r1, r2, r7, r9], '4');\n\t\tassertLimit(3, [r1, r2, r9], '3');\n\t\tassertLimit(2, [r1, r9], '2');\n\t\tassertLimit(1, [r1], '1');\n\t\tassertLimit(0, [], '0');\n\n\t\tmodel.dispose();\n\t});\n\n});\n"]}