{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/viewLayout/lineDecorations.test.ts"],"names":[],"mappings":"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","file":"lineDecorations.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { Range } from 'vs/editor/common/core/range';\nimport { DecorationSegment, LineDecoration, LineDecorationsNormalizer } from 'vs/editor/common/viewLayout/lineDecorations';\nimport { InlineDecoration, InlineDecorationType } from 'vs/editor/common/viewModel';\n\nsuite('Editor ViewLayout - ViewLineParts', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Bug 9827:Overlapping inline decorations can cause wrong inline class to be applied', () => {\n\n\t\tconst result = LineDecorationsNormalizer.normalize('abcabcabcabcabcabcabcabcabcabc', [\n\t\t\tnew LineDecoration(1, 11, 'c1', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(3, 4, 'c2', InlineDecorationType.Regular)\n\t\t]);\n\n\t\tassert.deepStrictEqual(result, [\n\t\t\tnew DecorationSegment(0, 1, 'c1', 0),\n\t\t\tnew DecorationSegment(2, 2, 'c2 c1', 0),\n\t\t\tnew DecorationSegment(3, 9, 'c1', 0),\n\t\t]);\n\t});\n\n\ttest('issue #3462: no whitespace shown at the end of a decorated line', () => {\n\n\t\tconst result = LineDecorationsNormalizer.normalize('abcabcabcabcabcabcabcabcabcabc', [\n\t\t\tnew LineDecoration(15, 21, 'mtkw', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(20, 21, 'inline-folded', InlineDecorationType.Regular),\n\t\t]);\n\n\t\tassert.deepStrictEqual(result, [\n\t\t\tnew DecorationSegment(14, 18, 'mtkw', 0),\n\t\t\tnew DecorationSegment(19, 19, 'mtkw inline-folded', 0)\n\t\t]);\n\t});\n\n\ttest('issue #3661: Link decoration bleeds to next line when wrapping', () => {\n\n\t\tconst result = LineDecoration.filter([\n\t\t\tnew InlineDecoration(new Range(2, 12, 3, 30), 'detected-link', InlineDecorationType.Regular)\n\t\t], 3, 12, 500);\n\n\t\tassert.deepStrictEqual(result, [\n\t\t\tnew LineDecoration(12, 30, 'detected-link', InlineDecorationType.Regular),\n\t\t]);\n\t});\n\n\ttest('issue #37401: Allow both before and after decorations on empty line', () => {\n\t\tconst result = LineDecoration.filter([\n\t\t\tnew InlineDecoration(new Range(4, 1, 4, 2), 'before', InlineDecorationType.Before),\n\t\t\tnew InlineDecoration(new Range(4, 0, 4, 1), 'after', InlineDecorationType.After),\n\t\t], 4, 1, 500);\n\n\t\tassert.deepStrictEqual(result, [\n\t\t\tnew LineDecoration(1, 2, 'before', InlineDecorationType.Before),\n\t\t\tnew LineDecoration(0, 1, 'after', InlineDecorationType.After),\n\t\t]);\n\t});\n\n\ttest('ViewLineParts', () => {\n\n\t\tassert.deepStrictEqual(LineDecorationsNormalizer.normalize('abcabcabcabcabcabcabcabcabcabc', [\n\t\t\tnew LineDecoration(1, 2, 'c1', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(3, 4, 'c2', InlineDecorationType.Regular)\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 0, 'c1', 0),\n\t\t\tnew DecorationSegment(2, 2, 'c2', 0)\n\t\t]);\n\n\t\tassert.deepStrictEqual(LineDecorationsNormalizer.normalize('abcabcabcabcabcabcabcabcabcabc', [\n\t\t\tnew LineDecoration(1, 3, 'c1', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(3, 4, 'c2', InlineDecorationType.Regular)\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 1, 'c1', 0),\n\t\t\tnew DecorationSegment(2, 2, 'c2', 0)\n\t\t]);\n\n\t\tassert.deepStrictEqual(LineDecorationsNormalizer.normalize('abcabcabcabcabcabcabcabcabcabc', [\n\t\t\tnew LineDecoration(1, 4, 'c1', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(3, 4, 'c2', InlineDecorationType.Regular)\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 1, 'c1', 0),\n\t\t\tnew DecorationSegment(2, 2, 'c1 c2', 0)\n\t\t]);\n\n\t\tassert.deepStrictEqual(LineDecorationsNormalizer.normalize('abcabcabcabcabcabcabcabcabcabc', [\n\t\t\tnew LineDecoration(1, 4, 'c1', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(1, 4, 'c1*', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(3, 4, 'c2', InlineDecorationType.Regular)\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 1, 'c1 c1*', 0),\n\t\t\tnew DecorationSegment(2, 2, 'c1 c1* c2', 0)\n\t\t]);\n\n\t\tassert.deepStrictEqual(LineDecorationsNormalizer.normalize('abcabcabcabcabcabcabcabcabcabc', [\n\t\t\tnew LineDecoration(1, 4, 'c1', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(1, 4, 'c1*', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(1, 4, 'c1**', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(3, 4, 'c2', InlineDecorationType.Regular)\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 1, 'c1 c1* c1**', 0),\n\t\t\tnew DecorationSegment(2, 2, 'c1 c1* c1** c2', 0)\n\t\t]);\n\n\t\tassert.deepStrictEqual(LineDecorationsNormalizer.normalize('abcabcabcabcabcabcabcabcabcabc', [\n\t\t\tnew LineDecoration(1, 4, 'c1', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(1, 4, 'c1*', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(1, 4, 'c1**', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(3, 4, 'c2', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(3, 4, 'c2*', InlineDecorationType.Regular)\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 1, 'c1 c1* c1**', 0),\n\t\t\tnew DecorationSegment(2, 2, 'c1 c1* c1** c2 c2*', 0)\n\t\t]);\n\n\t\tassert.deepStrictEqual(LineDecorationsNormalizer.normalize('abcabcabcabcabcabcabcabcabcabc', [\n\t\t\tnew LineDecoration(1, 4, 'c1', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(1, 4, 'c1*', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(1, 4, 'c1**', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(3, 4, 'c2', InlineDecorationType.Regular),\n\t\t\tnew LineDecoration(3, 5, 'c2*', InlineDecorationType.Regular)\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 1, 'c1 c1* c1**', 0),\n\t\t\tnew DecorationSegment(2, 2, 'c1 c1* c1** c2 c2*', 0),\n\t\t\tnew DecorationSegment(3, 3, 'c2*', 0)\n\t\t]);\n\t});\n});\n"]}