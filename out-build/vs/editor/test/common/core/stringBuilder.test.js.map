{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/core/stringBuilder.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAQhG,KAAK,CAAC,eAAe,EAAE,GAAG,EAAE;QAE3B,IAAA,WAAG,GAAsC,CAAC;QAE1C,IAAI,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACxD,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAA,YAAG,EAAW,IAAI,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1C,MAAM,MAAM,GAAG,IAAA,mBAAG,EAAW,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACxD,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAA,YAAG,EAAW,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,IAAA,YAAG,EAAW,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,MAAM,MAAM,GAAG,IAAA,mBAAG,EAAW,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACxD,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAA,YAAG,EAAW,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,IAAA,YAAG,EAAW,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,IAAA,YAAG,EAAW,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,MAAM,MAAM,GAAG,IAAA,mBAAG,EAAW,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IAEJ,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,eAAe,EAAE,GAAG,EAAE;QAE3B,IAAA,WAAG,GAAsC,CAAC;QAE1C,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE;YAClB,MAAM,EAAE,GAAG,IAAI,mBAAG,CAAW,GAAG,CAAC,CAAC;YAClC,EAAE,CAAC,mBAAmB,qBAAY,CAAC;YACnC,EAAE,CAAC,mBAAmB,yBAAgB,CAAC;YACvC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACtB,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","file":"stringBuilder.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { writeUInt16LE } from 'vs/base/common/buffer';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { decodeUTF16LE, StringBuilder } from 'vs/editor/common/core/stringBuilder';\n\nsuite('decodeUTF16LE', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('issue #118041: unicode character undo bug 1', () => {\n\t\tconst buff = new Uint8Array(2);\n\t\twriteUInt16LE(buff, 'ï»¿'.charCodeAt(0), 0);\n\t\tconst actual = decodeUTF16LE(buff, 0, 1);\n\t\tassert.deepStrictEqual(actual, 'ï»¿');\n\t});\n\n\ttest('issue #118041: unicode character undo bug 2', () => {\n\t\tconst buff = new Uint8Array(4);\n\t\twriteUInt16LE(buff, 'aï»¿'.charCodeAt(0), 0);\n\t\twriteUInt16LE(buff, 'aï»¿'.charCodeAt(1), 2);\n\t\tconst actual = decodeUTF16LE(buff, 0, 2);\n\t\tassert.deepStrictEqual(actual, 'aï»¿');\n\t});\n\n\ttest('issue #118041: unicode character undo bug 3', () => {\n\t\tconst buff = new Uint8Array(6);\n\t\twriteUInt16LE(buff, 'aï»¿b'.charCodeAt(0), 0);\n\t\twriteUInt16LE(buff, 'aï»¿b'.charCodeAt(1), 2);\n\t\twriteUInt16LE(buff, 'aï»¿b'.charCodeAt(2), 4);\n\t\tconst actual = decodeUTF16LE(buff, 0, 3);\n\t\tassert.deepStrictEqual(actual, 'aï»¿b');\n\t});\n\n});\n\nsuite('StringBuilder', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('basic', () => {\n\t\tconst sb = new StringBuilder(100);\n\t\tsb.appendASCIICharCode(CharCode.A);\n\t\tsb.appendASCIICharCode(CharCode.Space);\n\t\tsb.appendString('ðŸ˜Š');\n\t\tassert.strictEqual(sb.build(), 'A ðŸ˜Š');\n\t});\n});\n"]}