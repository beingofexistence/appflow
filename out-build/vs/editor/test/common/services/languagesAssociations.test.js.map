{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/services/languagesAssociations.test.ts"],"names":[],"mappings":"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","file":"languagesAssociations.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { getMimeTypes, registerPlatformLanguageAssociation, registerConfiguredLanguageAssociation } from 'vs/editor/common/services/languagesAssociations';\n\nsuite('LanguagesAssociations', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Dynamically Register Text Mime', () => {\n\t\tlet guess = getMimeTypes(URI.file('foo.monaco'));\n\t\tassert.deepStrictEqual(guess, ['application/unknown']);\n\n\t\tregisterPlatformLanguageAssociation({ id: 'monaco', extension: '.monaco', mime: 'text/monaco' });\n\t\tguess = getMimeTypes(URI.file('foo.monaco'));\n\t\tassert.deepStrictEqual(guess, ['text/monaco', 'text/plain']);\n\n\t\tguess = getMimeTypes(URI.file('.monaco'));\n\t\tassert.deepStrictEqual(guess, ['text/monaco', 'text/plain']);\n\n\t\tregisterPlatformLanguageAssociation({ id: 'codefile', filename: 'Codefile', mime: 'text/code' });\n\t\tguess = getMimeTypes(URI.file('Codefile'));\n\t\tassert.deepStrictEqual(guess, ['text/code', 'text/plain']);\n\n\t\tguess = getMimeTypes(URI.file('foo.Codefile'));\n\t\tassert.deepStrictEqual(guess, ['application/unknown']);\n\n\t\tregisterPlatformLanguageAssociation({ id: 'docker', filepattern: 'Docker*', mime: 'text/docker' });\n\t\tguess = getMimeTypes(URI.file('Docker-debug'));\n\t\tassert.deepStrictEqual(guess, ['text/docker', 'text/plain']);\n\n\t\tguess = getMimeTypes(URI.file('docker-PROD'));\n\t\tassert.deepStrictEqual(guess, ['text/docker', 'text/plain']);\n\n\t\tregisterPlatformLanguageAssociation({ id: 'niceregex', mime: 'text/nice-regex', firstline: /RegexesAreNice/ });\n\t\tguess = getMimeTypes(URI.file('Randomfile.noregistration'), 'RegexesAreNice');\n\t\tassert.deepStrictEqual(guess, ['text/nice-regex', 'text/plain']);\n\n\t\tguess = getMimeTypes(URI.file('Randomfile.noregistration'), 'RegexesAreNotNice');\n\t\tassert.deepStrictEqual(guess, ['application/unknown']);\n\n\t\tguess = getMimeTypes(URI.file('Codefile'), 'RegexesAreNice');\n\t\tassert.deepStrictEqual(guess, ['text/code', 'text/plain']);\n\t});\n\n\ttest('Mimes Priority', () => {\n\t\tregisterPlatformLanguageAssociation({ id: 'monaco', extension: '.monaco', mime: 'text/monaco' });\n\t\tregisterPlatformLanguageAssociation({ id: 'foobar', mime: 'text/foobar', firstline: /foobar/ });\n\n\t\tlet guess = getMimeTypes(URI.file('foo.monaco'));\n\t\tassert.deepStrictEqual(guess, ['text/monaco', 'text/plain']);\n\n\t\tguess = getMimeTypes(URI.file('foo.monaco'), 'foobar');\n\t\tassert.deepStrictEqual(guess, ['text/monaco', 'text/plain']);\n\n\t\tregisterPlatformLanguageAssociation({ id: 'docker', filename: 'dockerfile', mime: 'text/winner' });\n\t\tregisterPlatformLanguageAssociation({ id: 'docker', filepattern: 'dockerfile*', mime: 'text/looser' });\n\t\tguess = getMimeTypes(URI.file('dockerfile'));\n\t\tassert.deepStrictEqual(guess, ['text/winner', 'text/plain']);\n\n\t\tregisterPlatformLanguageAssociation({ id: 'azure-looser', mime: 'text/azure-looser', firstline: /azure/ });\n\t\tregisterPlatformLanguageAssociation({ id: 'azure-winner', mime: 'text/azure-winner', firstline: /azure/ });\n\t\tguess = getMimeTypes(URI.file('azure'), 'azure');\n\t\tassert.deepStrictEqual(guess, ['text/azure-winner', 'text/plain']);\n\t});\n\n\ttest('Specificity priority 1', () => {\n\t\tregisterPlatformLanguageAssociation({ id: 'monaco2', extension: '.monaco2', mime: 'text/monaco2' });\n\t\tregisterPlatformLanguageAssociation({ id: 'monaco2', filename: 'specific.monaco2', mime: 'text/specific-monaco2' });\n\n\t\tassert.deepStrictEqual(getMimeTypes(URI.file('specific.monaco2')), ['text/specific-monaco2', 'text/plain']);\n\t\tassert.deepStrictEqual(getMimeTypes(URI.file('foo.monaco2')), ['text/monaco2', 'text/plain']);\n\t});\n\n\ttest('Specificity priority 2', () => {\n\t\tregisterPlatformLanguageAssociation({ id: 'monaco3', filename: 'specific.monaco3', mime: 'text/specific-monaco3' });\n\t\tregisterPlatformLanguageAssociation({ id: 'monaco3', extension: '.monaco3', mime: 'text/monaco3' });\n\n\t\tassert.deepStrictEqual(getMimeTypes(URI.file('specific.monaco3')), ['text/specific-monaco3', 'text/plain']);\n\t\tassert.deepStrictEqual(getMimeTypes(URI.file('foo.monaco3')), ['text/monaco3', 'text/plain']);\n\t});\n\n\ttest('Mimes Priority - Longest Extension wins', () => {\n\t\tregisterPlatformLanguageAssociation({ id: 'monaco', extension: '.monaco', mime: 'text/monaco' });\n\t\tregisterPlatformLanguageAssociation({ id: 'monaco', extension: '.monaco.xml', mime: 'text/monaco-xml' });\n\t\tregisterPlatformLanguageAssociation({ id: 'monaco', extension: '.monaco.xml.build', mime: 'text/monaco-xml-build' });\n\n\t\tlet guess = getMimeTypes(URI.file('foo.monaco'));\n\t\tassert.deepStrictEqual(guess, ['text/monaco', 'text/plain']);\n\n\t\tguess = getMimeTypes(URI.file('foo.monaco.xml'));\n\t\tassert.deepStrictEqual(guess, ['text/monaco-xml', 'text/plain']);\n\n\t\tguess = getMimeTypes(URI.file('foo.monaco.xml.build'));\n\t\tassert.deepStrictEqual(guess, ['text/monaco-xml-build', 'text/plain']);\n\t});\n\n\ttest('Mimes Priority - User configured wins', () => {\n\t\tregisterConfiguredLanguageAssociation({ id: 'monaco', extension: '.monaco.xnl', mime: 'text/monaco' });\n\t\tregisterPlatformLanguageAssociation({ id: 'monaco', extension: '.monaco.xml', mime: 'text/monaco-xml' });\n\n\t\tconst guess = getMimeTypes(URI.file('foo.monaco.xnl'));\n\t\tassert.deepStrictEqual(guess, ['text/monaco', 'text/plain']);\n\t});\n\n\ttest('Mimes Priority - Pattern matches on path if specified', () => {\n\t\tregisterPlatformLanguageAssociation({ id: 'monaco', filepattern: '**/dot.monaco.xml', mime: 'text/monaco' });\n\t\tregisterPlatformLanguageAssociation({ id: 'other', filepattern: '*ot.other.xml', mime: 'text/other' });\n\n\t\tconst guess = getMimeTypes(URI.file('/some/path/dot.monaco.xml'));\n\t\tassert.deepStrictEqual(guess, ['text/monaco', 'text/plain']);\n\t});\n\n\ttest('Mimes Priority - Last registered mime wins', () => {\n\t\tregisterPlatformLanguageAssociation({ id: 'monaco', filepattern: '**/dot.monaco.xml', mime: 'text/monaco' });\n\t\tregisterPlatformLanguageAssociation({ id: 'other', filepattern: '**/dot.monaco.xml', mime: 'text/other' });\n\n\t\tconst guess = getMimeTypes(URI.file('/some/path/dot.monaco.xml'));\n\t\tassert.deepStrictEqual(guess, ['text/other', 'text/plain']);\n\t});\n\n\ttest('Data URIs', () => {\n\t\tregisterPlatformLanguageAssociation({ id: 'data', extension: '.data', mime: 'text/data' });\n\n\t\tassert.deepStrictEqual(getMimeTypes(URI.parse(`data:;label:something.data;description:data,`)), ['text/data', 'text/plain']);\n\t});\n});\n"]}