{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/services/languageService.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAOhG,KAAK,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAE7B,IAAI,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACzD,MAAM,eAAe,GAAG,IAAI,sBAAI,EAAa,CAAC;YAC9C,IAAA,WAAG,EAAyB,GAAG,EAAE;gBAChC,MAAM,iBAAiB,GAAG,eAAe,CAAC,UAAU,CAAC,mBAAG,CAAmB,CAAC;gBAC5E,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAU,EAAE,mBAAG,CAAmB,CAAC;YACzE,CAAC,CAAC,CAAC;YACH,IAAA,WAAG,EAAyB,GAAG,EAAE;gBAChC,MAAM,iBAAiB,GAAG,eAAe,CAAC,UAAU,CAAC,mBAAG,CAAmB,CAAC;gBAC5E,MAAM,QAAQ,GAAG,iBAAiB,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;gBAC1D,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAU,EAAE,mBAAG,CAAmB,CAAC;gBACxE,QAAQ,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC;YACH,eAAe,CAAC,OAAO,EAAE,CAAC;QAE3B,CAAC,CAAC,CAAC;IAEJ,CAAC,CAAC,CAAC","file":"languageService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { throwIfDisposablesAreLeaked } from 'vs/base/test/common/utils';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { LanguageService } from 'vs/editor/common/services/languageService';\n\nsuite('LanguageService', () => {\n\n\ttest('LanguageSelection does not leak a disposable', () => {\n\t\tconst languageService = new LanguageService();\n\t\tthrowIfDisposablesAreLeaked(() => {\n\t\t\tconst languageSelection = languageService.createById(PLAINTEXT_LANGUAGE_ID);\n\t\t\tassert.strictEqual(languageSelection.languageId, PLAINTEXT_LANGUAGE_ID);\n\t\t});\n\t\tthrowIfDisposablesAreLeaked(() => {\n\t\t\tconst languageSelection = languageService.createById(PLAINTEXT_LANGUAGE_ID);\n\t\t\tconst listener = languageSelection.onDidChange(() => { });\n\t\t\tassert.strictEqual(languageSelection.languageId, PLAINTEXT_LANGUAGE_ID);\n\t\t\tlistener.dispose();\n\t\t});\n\t\tlanguageService.dispose();\n\n\t});\n\n});\n"]}