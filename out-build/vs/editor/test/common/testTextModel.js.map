{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/testTextModel.ts"],"names":[],"mappings":"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","file":"testTextModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { BracketPairColorizationOptions, DefaultEndOfLine, ITextBufferFactory, ITextModelCreationOptions } from 'vs/editor/common/model';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { LanguageService } from 'vs/editor/common/services/languageService';\nimport { ITextResourcePropertiesService } from 'vs/editor/common/services/textResourceConfiguration';\nimport { TestLanguageConfigurationService } from 'vs/editor/test/common/modes/testLanguageConfigurationService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { TestDialogService } from 'vs/platform/dialogs/test/common/testDialogService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { TestNotificationService } from 'vs/platform/notification/test/common/testNotificationService';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { IUndoRedoService } from 'vs/platform/undoRedo/common/undoRedo';\nimport { UndoRedoService } from 'vs/platform/undoRedo/common/undoRedoService';\nimport { TestTextResourcePropertiesService } from 'vs/editor/test/common/services/testTextResourcePropertiesService';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ModelService } from 'vs/editor/common/services/modelService';\nimport { createServices, ServiceIdCtorPair, TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { ILanguageFeatureDebounceService, LanguageFeatureDebounceService } from 'vs/editor/common/services/languageFeatureDebounce';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { LanguageFeaturesService } from 'vs/editor/common/services/languageFeaturesService';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { mock } from 'vs/base/test/common/mock';\n\nclass TestTextModel extends TextModel {\n\tpublic registerDisposable(disposable: IDisposable): void {\n\t\tthis._register(disposable);\n\t}\n}\n\nexport function withEditorModel(text: string[], callback: (model: TextModel) => void): void {\n\tconst model = createTextModel(text.join('\\n'));\n\tcallback(model);\n\tmodel.dispose();\n}\n\nexport interface IRelaxedTextModelCreationOptions {\n\ttabSize?: number;\n\tindentSize?: number | 'tabSize';\n\tinsertSpaces?: boolean;\n\tdetectIndentation?: boolean;\n\ttrimAutoWhitespace?: boolean;\n\tdefaultEOL?: DefaultEndOfLine;\n\tisForSimpleWidget?: boolean;\n\tlargeFileOptimizations?: boolean;\n\tbracketColorizationOptions?: BracketPairColorizationOptions;\n}\n\nfunction resolveOptions(_options: IRelaxedTextModelCreationOptions): ITextModelCreationOptions {\n\tconst defaultOptions = TextModel.DEFAULT_CREATION_OPTIONS;\n\treturn {\n\t\ttabSize: (typeof _options.tabSize === 'undefined' ? defaultOptions.tabSize : _options.tabSize),\n\t\tindentSize: (typeof _options.indentSize === 'undefined' ? defaultOptions.indentSize : _options.indentSize),\n\t\tinsertSpaces: (typeof _options.insertSpaces === 'undefined' ? defaultOptions.insertSpaces : _options.insertSpaces),\n\t\tdetectIndentation: (typeof _options.detectIndentation === 'undefined' ? defaultOptions.detectIndentation : _options.detectIndentation),\n\t\ttrimAutoWhitespace: (typeof _options.trimAutoWhitespace === 'undefined' ? defaultOptions.trimAutoWhitespace : _options.trimAutoWhitespace),\n\t\tdefaultEOL: (typeof _options.defaultEOL === 'undefined' ? defaultOptions.defaultEOL : _options.defaultEOL),\n\t\tisForSimpleWidget: (typeof _options.isForSimpleWidget === 'undefined' ? defaultOptions.isForSimpleWidget : _options.isForSimpleWidget),\n\t\tlargeFileOptimizations: (typeof _options.largeFileOptimizations === 'undefined' ? defaultOptions.largeFileOptimizations : _options.largeFileOptimizations),\n\t\tbracketPairColorizationOptions: (typeof _options.bracketColorizationOptions === 'undefined' ? defaultOptions.bracketPairColorizationOptions : _options.bracketColorizationOptions),\n\t};\n}\n\nexport function createTextModel(text: string | ITextBufferFactory, languageId: string | null = null, options: IRelaxedTextModelCreationOptions = TextModel.DEFAULT_CREATION_OPTIONS, uri: URI | null = null): TextModel {\n\tconst disposables = new DisposableStore();\n\tconst instantiationService = createModelServices(disposables);\n\tconst model = instantiateTextModel(instantiationService, text, languageId, options, uri);\n\tmodel.registerDisposable(disposables);\n\treturn model;\n}\n\nexport function instantiateTextModel(instantiationService: IInstantiationService, text: string | ITextBufferFactory, languageId: string | null = null, _options: IRelaxedTextModelCreationOptions = TextModel.DEFAULT_CREATION_OPTIONS, uri: URI | null = null): TestTextModel {\n\tconst options = resolveOptions(_options);\n\treturn instantiationService.createInstance(TestTextModel, text, languageId || PLAINTEXT_LANGUAGE_ID, options, uri);\n}\n\nexport function createModelServices(disposables: DisposableStore, services: ServiceIdCtorPair<any>[] = []): TestInstantiationService {\n\treturn createServices(disposables, services.concat([\n\t\t[INotificationService, TestNotificationService],\n\t\t[IDialogService, TestDialogService],\n\t\t[IUndoRedoService, UndoRedoService],\n\t\t[ILanguageService, LanguageService],\n\t\t[ILanguageConfigurationService, TestLanguageConfigurationService],\n\t\t[IConfigurationService, TestConfigurationService],\n\t\t[ITextResourcePropertiesService, TestTextResourcePropertiesService],\n\t\t[IThemeService, TestThemeService],\n\t\t[ILogService, NullLogService],\n\t\t[IEnvironmentService, new class extends mock<IEnvironmentService>() {\n\t\t\toverride isBuilt: boolean = true;\n\t\t\toverride isExtensionDevelopment: boolean = false;\n\t\t}],\n\t\t[ILanguageFeatureDebounceService, LanguageFeatureDebounceService],\n\t\t[ILanguageFeaturesService, LanguageFeaturesService],\n\t\t[IModelService, ModelService],\n\t]));\n}\n"]}