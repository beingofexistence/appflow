{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/model/bracketPairColorizer/smallImmutableSet.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAMhG,KAAK,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAEnD,IAAA,WAAG,GAAsC,CAAC;QAE1C,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE;YAClB,MAAM,WAAW,GAAG,IAAI,uBAAG,EAAuB,CAAC;YAEnD,MAAM,KAAK,GAAG,uBAAG,CAAe,QAAQ,EAAU,CAAC;YACnD,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YAC/C,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YACjD,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YAC/C,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YAEjD,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YAE/C,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC;YAE5D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC;YAE7D,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE;YAC1B,MAAM,WAAW,GAAG,IAAI,uBAAG,EAAuB,CAAC;YAEnD,IAAI,GAAG,GAAG,uBAAG,CAAe,QAAQ,EAAU,CAAC;YAE/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC7B,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBAC/B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBAChB,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;iBACvC;aACD;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC7B,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;aAClE;QACF,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","file":"smallImmutableSet.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { DenseKeyProvider, SmallImmutableSet } from 'vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/smallImmutableSet';\n\nsuite('Bracket Pair Colorizer - ImmutableSet', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Basic', () => {\n\t\tconst keyProvider = new DenseKeyProvider<string>();\n\n\t\tconst empty = SmallImmutableSet.getEmpty<string>();\n\t\tconst items1 = empty.add('item1', keyProvider);\n\t\tconst items12 = items1.add('item2', keyProvider);\n\t\tconst items2 = empty.add('item2', keyProvider);\n\t\tconst items21 = items2.add('item1', keyProvider);\n\n\t\tconst items3 = empty.add('item3', keyProvider);\n\n\t\tassert.strictEqual(items12.intersects(items1), true);\n\t\tassert.strictEqual(items12.has('item1', keyProvider), true);\n\n\t\tassert.strictEqual(items12.intersects(items3), false);\n\t\tassert.strictEqual(items12.has('item3', keyProvider), false);\n\n\t\tassert.strictEqual(items21.equals(items12), true);\n\t\tassert.strictEqual(items21.equals(items2), false);\n\t});\n\n\ttest('Many Elements', () => {\n\t\tconst keyProvider = new DenseKeyProvider<string>();\n\n\t\tlet set = SmallImmutableSet.getEmpty<string>();\n\n\t\tfor (let i = 0; i < 100; i++) {\n\t\t\tkeyProvider.getKey(`item${i}`);\n\t\t\tif (i % 2 === 0) {\n\t\t\t\tset = set.add(`item${i}`, keyProvider);\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < 100; i++) {\n\t\t\tassert.strictEqual(set.has(`item${i}`, keyProvider), i % 2 === 0);\n\t\t}\n\t});\n});\n"]}