{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/model/bracketPairColorizer/length.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAMhG,KAAK,CAAC,iCAAiC,EAAE,GAAG,EAAE;QAE7C,IAAA,WAAG,GAAsC,CAAC;QAE1C,SAAS,KAAK,CAAC,MAAc;YAC5B,OAAO,IAAA,YAAG,EAAS,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvC,CAAC;QAED,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE;YAClB,MAAM,EAAE,GAAG,IAAA,YAAG,EAAM,GAAG,EAAE,EAAE,CAAC,CAAC;YAC7B,MAAM,CAAC,WAAW,CAAC,IAAA,YAAG,EAAS,EAAE,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,IAAA,YAAG,EAAS,EAAE,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YAEpD,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,IAAA,YAAG,EAAO,EAAE,EAAE,IAAA,YAAG,EAAM,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;YAC1E,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,IAAA,YAAG,EAAO,EAAE,EAAE,IAAA,YAAG,EAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAC7B,MAAM,CAAC,eAAe,CACrB,KAAK,CACJ,IAAA,YAAG,EACF,IAAA,YAAG,EAAM,GAAG,EAAE,EAAE,CAAC,EACjB,IAAA,YAAG,EAAM,GAAG,EAAE,EAAE,CAAC,CAAC,CACnB,EACD,MAAM,CACN,CAAC;YAEF,MAAM,CAAC,eAAe,CACrB,KAAK,CACJ,IAAA,YAAG,EACF,IAAA,YAAG,EAAM,GAAG,EAAE,EAAE,CAAC,EACjB,IAAA,YAAG,EAAM,GAAG,EAAE,EAAE,CAAC,CAAC,CACnB,EACD,MAAM,CACN,CAAC;YAEF,MAAM,CAAC,eAAe,CACrB,KAAK,CACJ,IAAA,YAAG,EACF,IAAA,YAAG,EAAM,GAAG,EAAE,EAAE,CAAC,EACjB,IAAA,YAAG,EAAM,GAAG,EAAE,EAAE,CAAC,CAAC,CACnB,EACD,KAAK,CACL,CAAC;YAEF,MAAM,CAAC,eAAe,CACrB,KAAK,CACJ,IAAA,YAAG,EACF,IAAA,YAAG,EAAM,GAAG,EAAE,EAAE,CAAC,EACjB,IAAA,YAAG,EAAM,GAAG,EAAE,EAAE,CAAC,CAAC,CACnB,EACD,KAAK,CACL,CAAC;QACH,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","file":"length.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { Length, lengthAdd, lengthDiffNonNegative, lengthToObj, toLength } from 'vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/length';\n\nsuite('Bracket Pair Colorizer - Length', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction toStr(length: Length): string {\n\t\treturn lengthToObj(length).toString();\n\t}\n\n\ttest('Basic', () => {\n\t\tconst l1 = toLength(100, 10);\n\t\tassert.strictEqual(lengthToObj(l1).lineCount, 100);\n\t\tassert.strictEqual(lengthToObj(l1).columnCount, 10);\n\n\t\tassert.deepStrictEqual(toStr(lengthAdd(l1, toLength(100, 10))), '200,10');\n\t\tassert.deepStrictEqual(toStr(lengthAdd(l1, toLength(0, 10))), '100,20');\n\t});\n\n\ttest('lengthDiffNonNeg', () => {\n\t\tassert.deepStrictEqual(\n\t\t\ttoStr(\n\t\t\t\tlengthDiffNonNegative(\n\t\t\t\t\ttoLength(100, 10),\n\t\t\t\t\ttoLength(100, 20))\n\t\t\t),\n\t\t\t'0,10'\n\t\t);\n\n\t\tassert.deepStrictEqual(\n\t\t\ttoStr(\n\t\t\t\tlengthDiffNonNegative(\n\t\t\t\t\ttoLength(100, 10),\n\t\t\t\t\ttoLength(101, 20))\n\t\t\t),\n\t\t\t'1,20'\n\t\t);\n\n\t\tassert.deepStrictEqual(\n\t\t\ttoStr(\n\t\t\t\tlengthDiffNonNegative(\n\t\t\t\t\ttoLength(101, 30),\n\t\t\t\t\ttoLength(101, 20))\n\t\t\t),\n\t\t\t'0,0'\n\t\t);\n\n\t\tassert.deepStrictEqual(\n\t\t\ttoStr(\n\t\t\t\tlengthDiffNonNegative(\n\t\t\t\t\ttoLength(102, 10),\n\t\t\t\t\ttoLength(101, 20))\n\t\t\t),\n\t\t\t'0,0'\n\t\t);\n\t});\n});\n"]}