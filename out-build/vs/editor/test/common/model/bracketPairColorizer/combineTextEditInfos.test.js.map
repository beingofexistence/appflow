{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/model/bracketPairColorizer/combineTextEditInfos.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAYhG,KAAK,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAElC,IAAA,WAAG,GAAsC,CAAC;QAE1C,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,EAAE,EAAE,IAAI,EAAE,EAAE;YACrC,IAAI,CAAC,MAAM,GAAG,IAAI,EAAE,GAAG,EAAE;gBACxB,OAAO,CAAC,IAAI,CAAC,CAAC;YACf,CAAC,CAAC,CAAC;SACH;IACF,CAAC,CAAC,CAAC;IAEH,SAAS,OAAO,CAAC,IAAY;QAC5B,MAAM,GAAG,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEtC,MAAM,GAAG,GAAG,8BAA8B,CAAC;QAC3C,MAAM,WAAW,GAAG,IAAA,oBAAI,EAAY,GAAG,CAAC,CAAC;QAEzC,MAAM,MAAM,GAAG,kBAAkB,CAAC,WAAW,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC5E,MAAM,WAAW,GAAG,IAAA,oBAAI,EAAY,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC5D,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnD,MAAM,MAAM,GAAG,kBAAkB,CAAC,WAAW,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC5E,MAAM,WAAW,GAAG,IAAA,oBAAI,EAAY,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC5D,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnD,MAAM,aAAa,GAAG,IAAA,0BAAG,EAAkB,MAAM,EAAE,MAAM,CAAC,CAAC;QAC3D,KAAK,MAAM,IAAI,IAAI,aAAa,EAAE;YACjC,MAAM,KAAK,GAAG,WAAG,CAAG,aAAa,CAAC,IAAA,YAAG,EAAc,IAAI,CAAC,WAAW,CAAC,EAAE,IAAA,YAAG,EAAc,IAAA,YAAG,EAAO,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACrI,MAAM,KAAK,GAAG,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YACjD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;gBAChC,MAAM,IAAI,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC,CAAC;aAC1C;YACD,WAAW,CAAC,UAAU,CAAC,CAAC;oBACvB,KAAK;oBACL,IAAI,EAAE,WAAW,CAAC,eAAe,CAAC,WAAG,CAAG,aAAa,CAAC,IAAA,YAAG,EAAc,IAAI,CAAC,WAAW,CAAC,EAAE,IAAA,YAAG,EAAc,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;iBAC5H,CAAC,CAAC,CAAC;SACJ;QAED,MAAM,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEvE,WAAW,CAAC,OAAO,EAAE,CAAC;QACtB,WAAW,CAAC,OAAO,EAAE,CAAC;QACtB,WAAW,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAED,SAAS,kBAAkB,CAAC,SAAc,EAAQ,KAAa,EAAE,GAAoB;QACpF,MAAM,KAAK,GAAmB,EAAE,CAAC;QACjC,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC/B,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YAC7C,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,IAAA,YAAG,EAAc,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;SAChE;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAED,SAAS,aAAa,CAAC,SAAc,EAAQ,gBAAwB,EAAE,GAAoB;QAC1F,MAAM,eAAe,GAAG,SAAS,CAAC,cAAc,EAAE,CAAC;QACnD,MAAM,WAAW,GAAG,GAAG,CAAC,YAAY,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;QACxE,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;QAEjE,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACzC,MAAM,WAAW,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3C,OAAO,IAAI,8BAAG,CAAU,IAAA,YAAG,EAAc,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,EAAE,IAAA,YAAG,EAAc,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,IAAA,YAAG,EAAM,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;IACzK,CAAC;IAED,SAAS,MAAM,CAAC,QAAa;QAC5B,MAAM,CAAC,GAAG,IAAA,YAAG,EAAS,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,IAAI,GAAG,EAAE,CAAC;QAEd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,IAAI,OAAO,CAAC;SAChB;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,IAAI,GAAG,CAAC;SACZ;QAED,OAAO;YACN,KAAK,EAAE,WAAG,CAAG,aAAa,CACzB,IAAA,YAAG,EAAc,QAAQ,CAAC,WAAW,CAAC,EACtC,IAAA,YAAG,EAAc,QAAQ,CAAC,SAAS,CAAC,CACpC;YACD,IAAI;SACJ,CAAC;IACH,CAAC;IAED,uBAAuB;IACvB,MAAM,eAAe;QAIpB,YAAY,IAAY;YAHP,MAAC,GAAI,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;YAC7B,MAAC,GAAO,CAAC,CAAC;YAGjB,IAAI,CAAC,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;YACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC7B,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAE,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;gBACnD,IAAI,CAAC,CAAC,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;aAC1G;QACF,CAAC;QAEM,OAAO;YACb,IAAI,IAAI,CAAC,CAAC,KAAS,CAAC,EAAE;gBACrB,IAAI,CAAC,CAAC,EAAgB,CAAC;aACvB;YAED,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CAAK,CAAC;YAC5B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;YACnB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;YAChC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC;YACjC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;YAEnB,IAAI,CAAC,CAAC,GAAO,CAAC,IAAI,CAAC,CAAC,GAAO,CAAC,CAAC,GAAG,GAAG,CAAC;YAEpC,OAAO,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC;QAEM,YAAY,CAAC,KAAa,EAAE,YAAoB;YACtD,MAAM,KAAK,GAAG,YAAY,GAAG,KAAK,CAAC;YACnC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;QACnE,CAAC;QAEO,CAAC;YACR,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC7B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAE,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;gBAC5E,IAAI,CAAC,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAE,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;oBAClB,IAAI,CAAC,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAE,CAAC,CAAC,GAAG,UAAU,CAAC;iBACrC;aACD;QACF,CAAC;KACD","file":"combineTextEditInfos.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { ISingleEditOperation } from 'vs/editor/common/core/editOperation';\nimport { Range } from 'vs/editor/common/core/range';\nimport { TextEditInfo } from 'vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/beforeEditPositionMapper';\nimport { combineTextEditInfos } from 'vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/combineTextEditInfos';\nimport { lengthAdd, lengthToObj, lengthToPosition, positionToLength, toLength } from 'vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/length';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { createTextModel } from 'vs/editor/test/common/testTextModel';\n\nsuite('combineTextEditInfos', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfor (let seed = 0; seed < 50; seed++) {\n\t\ttest('test' + seed, () => {\n\t\t\trunTest(seed);\n\t\t});\n\t}\n});\n\nfunction runTest(seed: number) {\n\tconst rng = new MersenneTwister(seed);\n\n\tconst str = 'abcde\\nfghij\\nklmno\\npqrst\\n';\n\tconst textModelS0 = createTextModel(str);\n\n\tconst edits1 = getRandomEditInfos(textModelS0, rng.nextIntRange(1, 4), rng);\n\tconst textModelS1 = createTextModel(textModelS0.getValue());\n\ttextModelS1.applyEdits(edits1.map(e => toEdit(e)));\n\n\tconst edits2 = getRandomEditInfos(textModelS1, rng.nextIntRange(1, 4), rng);\n\tconst textModelS2 = createTextModel(textModelS1.getValue());\n\ttextModelS2.applyEdits(edits2.map(e => toEdit(e)));\n\n\tconst combinedEdits = combineTextEditInfos(edits1, edits2);\n\tfor (const edit of combinedEdits) {\n\t\tconst range = Range.fromPositions(lengthToPosition(edit.startOffset), lengthToPosition(lengthAdd(edit.startOffset, edit.newLength)));\n\t\tconst value = textModelS2.getValueInRange(range);\n\t\tif (!value.match(/^(L|C|\\n)*$/)) {\n\t\t\tthrow new Error('Invalid edit: ' + value);\n\t\t}\n\t\ttextModelS2.applyEdits([{\n\t\t\trange,\n\t\t\ttext: textModelS0.getValueInRange(Range.fromPositions(lengthToPosition(edit.startOffset), lengthToPosition(edit.endOffset))),\n\t\t}]);\n\t}\n\n\tassert.deepStrictEqual(textModelS2.getValue(), textModelS0.getValue());\n\n\ttextModelS0.dispose();\n\ttextModelS1.dispose();\n\ttextModelS2.dispose();\n}\n\nfunction getRandomEditInfos(textModel: TextModel, count: number, rng: MersenneTwister): TextEditInfo[] {\n\tconst edits: TextEditInfo[] = [];\n\tlet i = 0;\n\tfor (let j = 0; j < count; j++) {\n\t\tedits.push(getRandomEdit(textModel, i, rng));\n\t\ti = textModel.getOffsetAt(lengthToPosition(edits[j].endOffset));\n\t}\n\treturn edits;\n}\n\nfunction getRandomEdit(textModel: TextModel, rangeOffsetStart: number, rng: MersenneTwister): TextEditInfo {\n\tconst textModelLength = textModel.getValueLength();\n\tconst offsetStart = rng.nextIntRange(rangeOffsetStart, textModelLength);\n\tconst offsetEnd = rng.nextIntRange(offsetStart, textModelLength);\n\n\tconst lineCount = rng.nextIntRange(0, 3);\n\tconst columnCount = rng.nextIntRange(0, 5);\n\n\treturn new TextEditInfo(positionToLength(textModel.getPositionAt(offsetStart)), positionToLength(textModel.getPositionAt(offsetEnd)), toLength(lineCount, columnCount));\n}\n\nfunction toEdit(editInfo: TextEditInfo): ISingleEditOperation {\n\tconst l = lengthToObj(editInfo.newLength);\n\tlet text = '';\n\n\tfor (let i = 0; i < l.lineCount; i++) {\n\t\ttext += 'LLL\\n';\n\t}\n\tfor (let i = 0; i < l.columnCount; i++) {\n\t\ttext += 'C';\n\t}\n\n\treturn {\n\t\trange: Range.fromPositions(\n\t\t\tlengthToPosition(editInfo.startOffset),\n\t\t\tlengthToPosition(editInfo.endOffset)\n\t\t),\n\t\ttext\n\t};\n}\n\n// Generated by copilot\nclass MersenneTwister {\n\tprivate readonly mt = new Array(624);\n\tprivate index = 0;\n\n\tconstructor(seed: number) {\n\t\tthis.mt[0] = seed >>> 0;\n\t\tfor (let i = 1; i < 624; i++) {\n\t\t\tconst s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n\t\t\tthis.mt[i] = (((((s & 0xffff0000) >>> 16) * 0x6c078965) << 16) + (s & 0x0000ffff) * 0x6c078965 + i) >>> 0;\n\t\t}\n\t}\n\n\tpublic nextInt() {\n\t\tif (this.index === 0) {\n\t\t\tthis.generateNumbers();\n\t\t}\n\n\t\tlet y = this.mt[this.index];\n\t\ty = y ^ (y >>> 11);\n\t\ty = y ^ ((y << 7) & 0x9d2c5680);\n\t\ty = y ^ ((y << 15) & 0xefc60000);\n\t\ty = y ^ (y >>> 18);\n\n\t\tthis.index = (this.index + 1) % 624;\n\n\t\treturn y >>> 0;\n\t}\n\n\tpublic nextIntRange(start: number, endExclusive: number) {\n\t\tconst range = endExclusive - start;\n\t\treturn Math.floor(this.nextInt() / (0x100000000 / range)) + start;\n\t}\n\n\tprivate generateNumbers() {\n\t\tfor (let i = 0; i < 624; i++) {\n\t\t\tconst y = (this.mt[i] & 0x80000000) + (this.mt[(i + 1) % 624] & 0x7fffffff);\n\t\t\tthis.mt[i] = this.mt[(i + 397) % 624] ^ (y >>> 1);\n\t\t\tif ((y % 2) !== 0) {\n\t\t\t\tthis.mt[i] = this.mt[i] ^ 0x9908b0df;\n\t\t\t}\n\t\t}\n\t}\n}\n"]}