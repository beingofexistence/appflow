{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/model/bracketPairColorizer/beforeEditPositionMapper.test.ts"],"names":[],"mappings":"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","file":"beforeEditPositionMapper.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { splitLines } from 'vs/base/common/strings';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { BeforeEditPositionMapper, TextEditInfo } from 'vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/beforeEditPositionMapper';\nimport { Length, lengthOfString, lengthToObj, lengthToPosition, toLength } from 'vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/length';\n\nsuite('Bracket Pair Colorizer - BeforeEditPositionMapper', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Single-Line 1', () => {\n\t\tassert.deepStrictEqual(\n\t\t\tcompute(\n\t\t\t\t[\n\t\t\t\t\t'0123456789',\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\tnew TextEdit(toLength(0, 4), toLength(0, 7), 'xy')\n\t\t\t\t]\n\t\t\t),\n\t\t\t[\n\t\t\t\t'0  1  2  3  x  y  7  8  9  ', // The line\n\n\t\t\t\t'0  0  0  0  0  0  0  0  0  0  ', // the old line numbers\n\t\t\t\t'0  1  2  3  4  5  7  8  9  10 ', // the old columns\n\n\t\t\t\t'0  0  0  0  0  0  ∞  ∞  ∞  ∞  ', // line count until next change\n\t\t\t\t'4  3  2  1  0  0  ∞  ∞  ∞  ∞  ', // column count until next change\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Single-Line 2', () => {\n\t\tassert.deepStrictEqual(\n\t\t\tcompute(\n\t\t\t\t[\n\t\t\t\t\t'0123456789',\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\tnew TextEdit(toLength(0, 2), toLength(0, 4), 'xxxx'),\n\t\t\t\t\tnew TextEdit(toLength(0, 6), toLength(0, 6), 'yy')\n\t\t\t\t]\n\t\t\t),\n\t\t\t[\n\t\t\t\t'0  1  x  x  x  x  4  5  y  y  6  7  8  9  ',\n\n\t\t\t\t'0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  ',\n\t\t\t\t'0  1  2  3  4  5  4  5  6  7  6  7  8  9  10 ',\n\n\t\t\t\t'0  0  0  0  0  0  0  0  0  0  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t\t'2  1  0  0  0  0  2  1  0  0  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Multi-Line Replace 1', () => {\n\t\tassert.deepStrictEqual(\n\t\t\tcompute(\n\t\t\t\t[\n\t\t\t\t\t'₀₁₂₃₄₅₆₇₈₉',\n\t\t\t\t\t'0123456789',\n\t\t\t\t\t'⁰¹²³⁴⁵⁶⁷⁸⁹',\n\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\tnew TextEdit(toLength(0, 3), toLength(1, 3), 'xy'),\n\t\t\t\t]\n\t\t\t),\n\t\t\t[\n\t\t\t\t'₀  ₁  ₂  x  y  3  4  5  6  7  8  9  ',\n\n\t\t\t\t'0  0  0  0  0  1  1  1  1  1  1  1  1  ',\n\t\t\t\t'0  1  2  3  4  3  4  5  6  7  8  9  10 ',\n\n\t\t\t\t\"0  0  0  0  0  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  \",\n\t\t\t\t'3  2  1  0  0  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t\t// ------------------\n\t\t\t\t'⁰  ¹  ²  ³  ⁴  ⁵  ⁶  ⁷  ⁸  ⁹  ',\n\n\t\t\t\t'2  2  2  2  2  2  2  2  2  2  2  ',\n\t\t\t\t'0  1  2  3  4  5  6  7  8  9  10 ',\n\n\t\t\t\t'∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t\t'∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Multi-Line Replace 2', () => {\n\t\tassert.deepStrictEqual(\n\t\t\tcompute(\n\t\t\t\t[\n\t\t\t\t\t'₀₁₂₃₄₅₆₇₈₉',\n\t\t\t\t\t'012345678',\n\t\t\t\t\t'⁰¹²³⁴⁵⁶⁷⁸⁹',\n\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\tnew TextEdit(toLength(0, 3), toLength(1, 0), 'ab'),\n\t\t\t\t\tnew TextEdit(toLength(1, 5), toLength(1, 7), 'c'),\n\t\t\t\t]\n\t\t\t),\n\t\t\t[\n\t\t\t\t'₀  ₁  ₂  a  b  0  1  2  3  4  c  7  8  ',\n\n\t\t\t\t'0  0  0  0  0  1  1  1  1  1  1  1  1  1  ',\n\t\t\t\t'0  1  2  3  4  0  1  2  3  4  5  7  8  9  ',\n\n\t\t\t\t'0  0  0  0  0  0  0  0  0  0  0  ∞  ∞  ∞  ',\n\t\t\t\t'3  2  1  0  0  5  4  3  2  1  0  ∞  ∞  ∞  ',\n\t\t\t\t// ------------------\n\t\t\t\t'⁰  ¹  ²  ³  ⁴  ⁵  ⁶  ⁷  ⁸  ⁹  ',\n\n\t\t\t\t'2  2  2  2  2  2  2  2  2  2  2  ',\n\t\t\t\t'0  1  2  3  4  5  6  7  8  9  10 ',\n\n\t\t\t\t'∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t\t'∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Multi-Line Replace 3', () => {\n\t\tassert.deepStrictEqual(\n\t\t\tcompute(\n\t\t\t\t[\n\t\t\t\t\t'₀₁₂₃₄₅₆₇₈₉',\n\t\t\t\t\t'012345678',\n\t\t\t\t\t'⁰¹²³⁴⁵⁶⁷⁸⁹',\n\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\tnew TextEdit(toLength(0, 3), toLength(1, 0), 'ab'),\n\t\t\t\t\tnew TextEdit(toLength(1, 5), toLength(1, 7), 'c'),\n\t\t\t\t\tnew TextEdit(toLength(1, 8), toLength(2, 4), 'd'),\n\t\t\t\t]\n\t\t\t),\n\t\t\t[\n\t\t\t\t'₀  ₁  ₂  a  b  0  1  2  3  4  c  7  d  ⁴  ⁵  ⁶  ⁷  ⁸  ⁹  ',\n\n\t\t\t\t'0  0  0  0  0  1  1  1  1  1  1  1  1  2  2  2  2  2  2  2  ',\n\t\t\t\t'0  1  2  3  4  0  1  2  3  4  5  7  8  4  5  6  7  8  9  10 ',\n\n\t\t\t\t'0  0  0  0  0  0  0  0  0  0  0  0  0  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t\t'3  2  1  0  0  5  4  3  2  1  0  1  0  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Multi-Line Insert 1', () => {\n\t\tassert.deepStrictEqual(\n\t\t\tcompute(\n\t\t\t\t[\n\t\t\t\t\t'012345678',\n\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\tnew TextEdit(toLength(0, 3), toLength(0, 5), 'a\\nb'),\n\t\t\t\t]\n\t\t\t),\n\t\t\t[\n\t\t\t\t'0  1  2  a  ',\n\n\t\t\t\t'0  0  0  0  0  ',\n\t\t\t\t'0  1  2  3  4  ',\n\n\t\t\t\t'0  0  0  0  0  ',\n\t\t\t\t'3  2  1  0  0  ',\n\t\t\t\t// ------------------\n\t\t\t\t'b  5  6  7  8  ',\n\n\t\t\t\t'1  0  0  0  0  0  ',\n\t\t\t\t'0  5  6  7  8  9  ',\n\n\t\t\t\t'0  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t\t'0  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Multi-Line Insert 2', () => {\n\t\tassert.deepStrictEqual(\n\t\t\tcompute(\n\t\t\t\t[\n\t\t\t\t\t'012345678',\n\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\tnew TextEdit(toLength(0, 3), toLength(0, 5), 'a\\nb'),\n\t\t\t\t\tnew TextEdit(toLength(0, 7), toLength(0, 8), 'x\\ny'),\n\t\t\t\t]\n\t\t\t),\n\t\t\t[\n\t\t\t\t'0  1  2  a  ',\n\n\t\t\t\t'0  0  0  0  0  ',\n\t\t\t\t'0  1  2  3  4  ',\n\n\t\t\t\t'0  0  0  0  0  ',\n\t\t\t\t'3  2  1  0  0  ',\n\t\t\t\t// ------------------\n\t\t\t\t'b  5  6  x  ',\n\n\t\t\t\t'1  0  0  0  0  ',\n\t\t\t\t'0  5  6  7  8  ',\n\n\t\t\t\t'0  0  0  0  0  ',\n\t\t\t\t'0  2  1  0  0  ',\n\t\t\t\t// ------------------\n\t\t\t\t'y  8  ',\n\n\t\t\t\t'1  0  0  ',\n\t\t\t\t'0  8  9  ',\n\n\t\t\t\t'0  ∞  ∞  ',\n\t\t\t\t'0  ∞  ∞  ',\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Multi-Line Replace/Insert 1', () => {\n\t\tassert.deepStrictEqual(\n\t\t\tcompute(\n\t\t\t\t[\n\t\t\t\t\t'₀₁₂₃₄₅₆₇₈₉',\n\t\t\t\t\t'012345678',\n\t\t\t\t\t'⁰¹²³⁴⁵⁶⁷⁸⁹',\n\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\tnew TextEdit(toLength(0, 3), toLength(1, 1), 'aaa\\nbbb'),\n\t\t\t\t]\n\t\t\t),\n\t\t\t[\n\t\t\t\t'₀  ₁  ₂  a  a  a  ',\n\t\t\t\t'0  0  0  0  0  0  0  ',\n\t\t\t\t'0  1  2  3  4  5  6  ',\n\n\t\t\t\t'0  0  0  0  0  0  0  ',\n\t\t\t\t'3  2  1  0  0  0  0  ',\n\t\t\t\t// ------------------\n\t\t\t\t'b  b  b  1  2  3  4  5  6  7  8  ',\n\n\t\t\t\t'1  1  1  1  1  1  1  1  1  1  1  1  ',\n\t\t\t\t'0  1  2  1  2  3  4  5  6  7  8  9  ',\n\n\t\t\t\t'0  0  0  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t\t'0  0  0  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t\t// ------------------\n\t\t\t\t'⁰  ¹  ²  ³  ⁴  ⁵  ⁶  ⁷  ⁸  ⁹  ',\n\n\t\t\t\t'2  2  2  2  2  2  2  2  2  2  2  ',\n\t\t\t\t'0  1  2  3  4  5  6  7  8  9  10 ',\n\n\t\t\t\t'∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t\t'∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Multi-Line Replace/Insert 2', () => {\n\t\tassert.deepStrictEqual(\n\t\t\tcompute(\n\t\t\t\t[\n\t\t\t\t\t'₀₁₂₃₄₅₆₇₈₉',\n\t\t\t\t\t'012345678',\n\t\t\t\t\t'⁰¹²³⁴⁵⁶⁷⁸⁹',\n\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\tnew TextEdit(toLength(0, 3), toLength(1, 1), 'aaa\\nbbb'),\n\t\t\t\t\tnew TextEdit(toLength(1, 5), toLength(1, 5), 'x\\ny'),\n\t\t\t\t\tnew TextEdit(toLength(1, 7), toLength(2, 4), 'k\\nl'),\n\t\t\t\t]\n\t\t\t),\n\t\t\t[\n\t\t\t\t'₀  ₁  ₂  a  a  a  ',\n\n\t\t\t\t'0  0  0  0  0  0  0  ',\n\t\t\t\t'0  1  2  3  4  5  6  ',\n\n\t\t\t\t'0  0  0  0  0  0  0  ',\n\t\t\t\t'3  2  1  0  0  0  0  ',\n\t\t\t\t// ------------------\n\t\t\t\t'b  b  b  1  2  3  4  x  ',\n\n\t\t\t\t'1  1  1  1  1  1  1  1  1  ',\n\t\t\t\t'0  1  2  1  2  3  4  5  6  ',\n\n\t\t\t\t'0  0  0  0  0  0  0  0  0  ',\n\t\t\t\t'0  0  0  4  3  2  1  0  0  ',\n\t\t\t\t// ------------------\n\t\t\t\t'y  5  6  k  ',\n\n\t\t\t\t'2  1  1  1  1  ',\n\t\t\t\t'0  5  6  7  8  ',\n\n\t\t\t\t'0  0  0  0  0  ',\n\t\t\t\t'0  2  1  0  0  ',\n\t\t\t\t// ------------------\n\t\t\t\t'l  ⁴  ⁵  ⁶  ⁷  ⁸  ⁹  ',\n\n\t\t\t\t'2  2  2  2  2  2  2  2  ',\n\t\t\t\t'0  4  5  6  7  8  9  10 ',\n\n\t\t\t\t'0  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t\t'0  ∞  ∞  ∞  ∞  ∞  ∞  ∞  ',\n\t\t\t]\n\t\t);\n\t});\n});\n\n/** @pure */\nfunction compute(inputArr: string[], edits: TextEdit[]): string[] {\n\tconst newLines = splitLines(applyLineColumnEdits(inputArr.join('\\n'), edits.map(e => ({\n\t\ttext: e.newText,\n\t\trange: Range.fromPositions(lengthToPosition(e.startOffset), lengthToPosition(e.endOffset))\n\t}))));\n\n\tconst mapper = new BeforeEditPositionMapper(edits);\n\n\tconst result = new Array<string>();\n\n\tlet lineIdx = 0;\n\tfor (const line of newLines) {\n\t\tlet lineLine = '';\n\t\tlet colLine = '';\n\t\tlet lineStr = '';\n\n\t\tlet colDist = '';\n\t\tlet lineDist = '';\n\n\t\tfor (let colIdx = 0; colIdx <= line.length; colIdx++) {\n\t\t\tconst before = mapper.getOffsetBeforeChange(toLength(lineIdx, colIdx));\n\t\t\tconst beforeObj = lengthToObj(before);\n\t\t\tif (colIdx < line.length) {\n\t\t\t\tlineStr += rightPad(line[colIdx], 3);\n\t\t\t}\n\t\t\tlineLine += rightPad('' + beforeObj.lineCount, 3);\n\t\t\tcolLine += rightPad('' + beforeObj.columnCount, 3);\n\n\t\t\tconst distLen = mapper.getDistanceToNextChange(toLength(lineIdx, colIdx));\n\t\t\tif (distLen === null) {\n\t\t\t\tlineDist += '∞  ';\n\t\t\t\tcolDist += '∞  ';\n\t\t\t} else {\n\t\t\t\tconst dist = lengthToObj(distLen);\n\t\t\t\tlineDist += rightPad('' + dist.lineCount, 3);\n\t\t\t\tcolDist += rightPad('' + dist.columnCount, 3);\n\t\t\t}\n\t\t}\n\t\tresult.push(lineStr);\n\n\t\tresult.push(lineLine);\n\t\tresult.push(colLine);\n\n\t\tresult.push(lineDist);\n\t\tresult.push(colDist);\n\n\t\tlineIdx++;\n\t}\n\n\treturn result;\n}\n\nexport class TextEdit extends TextEditInfo {\n\tconstructor(\n\t\tstartOffset: Length,\n\t\tendOffset: Length,\n\t\tpublic readonly newText: string\n\t) {\n\t\tsuper(\n\t\t\tstartOffset,\n\t\t\tendOffset,\n\t\t\tlengthOfString(newText)\n\t\t);\n\t}\n}\n\nclass PositionOffsetTransformer {\n\tprivate readonly lineStartOffsetByLineIdx: number[];\n\n\tconstructor(text: string) {\n\t\tthis.lineStartOffsetByLineIdx = [];\n\t\tthis.lineStartOffsetByLineIdx.push(0);\n\t\tfor (let i = 0; i < text.length; i++) {\n\t\t\tif (text.charAt(i) === '\\n') {\n\t\t\t\tthis.lineStartOffsetByLineIdx.push(i + 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetOffset(position: Position): number {\n\t\treturn this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n\t}\n}\n\nfunction applyLineColumnEdits(text: string, edits: { range: IRange; text: string }[]): string {\n\tconst transformer = new PositionOffsetTransformer(text);\n\tconst offsetEdits = edits.map(e => {\n\t\tconst range = Range.lift(e.range);\n\t\treturn ({\n\t\t\tstartOffset: transformer.getOffset(range.getStartPosition()),\n\t\t\tendOffset: transformer.getOffset(range.getEndPosition()),\n\t\t\ttext: e.text\n\t\t});\n\t});\n\n\toffsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n\n\tfor (const edit of offsetEdits) {\n\t\ttext = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n\t}\n\n\treturn text;\n}\n\nfunction rightPad(str: string, len: number): string {\n\twhile (str.length < len) {\n\t\tstr += ' ';\n\t}\n\treturn str;\n}\n"]}