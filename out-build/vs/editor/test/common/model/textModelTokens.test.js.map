{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/model/textModelTokens.test.ts"],"names":[],"mappings":"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","file":"textModelTokens.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { OffsetRange } from 'vs/editor/common/core/offsetRange';\nimport { RangePriorityQueueImpl } from 'vs/editor/common/model/textModelTokens';\n\nsuite('RangePriorityQueueImpl', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('addRange', () => {\n\t\tconst ranges: OffsetRange[] = [];\n\n\t\tOffsetRange.addRange(new OffsetRange(0, 2), ranges);\n\t\tOffsetRange.addRange(new OffsetRange(10, 13), ranges);\n\t\tOffsetRange.addRange(new OffsetRange(20, 24), ranges);\n\n\t\tassert.deepStrictEqual(\n\t\t\tranges.map(r => r.toString()),\n\t\t\t(['[0, 2)', '[10, 13)', '[20, 24)'])\n\t\t);\n\n\t\tOffsetRange.addRange(new OffsetRange(2, 10), ranges);\n\n\t\tassert.deepStrictEqual(\n\t\t\tranges.map(r => r.toString()),\n\t\t\t(['[0, 13)', '[20, 24)'])\n\t\t);\n\n\t\tOffsetRange.addRange(new OffsetRange(14, 19), ranges);\n\n\t\tassert.deepStrictEqual(\n\t\t\tranges.map(r => r.toString()),\n\t\t\t(['[0, 13)', '[14, 19)', '[20, 24)'])\n\t\t);\n\n\t\tOffsetRange.addRange(new OffsetRange(10, 22), ranges);\n\n\t\tassert.deepStrictEqual(\n\t\t\tranges.map(r => r.toString()),\n\t\t\t(['[0, 24)'])\n\t\t);\n\n\t\tOffsetRange.addRange(new OffsetRange(-1, 29), ranges);\n\n\t\tassert.deepStrictEqual(\n\t\t\tranges.map(r => r.toString()),\n\t\t\t(['[-1, 29)'])\n\t\t);\n\n\t\tOffsetRange.addRange(new OffsetRange(-10, -5), ranges);\n\n\t\tassert.deepStrictEqual(\n\t\t\tranges.map(r => r.toString()),\n\t\t\t(['[-10, -5)', '[-1, 29)'])\n\t\t);\n\t});\n\n\ttest('addRangeAndResize', () => {\n\t\tconst queue = new RangePriorityQueueImpl();\n\n\t\tqueue.addRange(new OffsetRange(0, 20));\n\t\tqueue.addRange(new OffsetRange(100, 120));\n\t\tqueue.addRange(new OffsetRange(200, 220));\n\n\t\t// disjoint\n\t\tqueue.addRangeAndResize(new OffsetRange(25, 27), 0);\n\n\t\tassert.deepStrictEqual(\n\t\t\tqueue.getRanges().map(r => r.toString()),\n\t\t\t(['[0, 20)', '[98, 118)', '[198, 218)'])\n\t\t);\n\n\t\tqueue.addRangeAndResize(new OffsetRange(19, 20), 0);\n\n\t\tassert.deepStrictEqual(\n\t\t\tqueue.getRanges().map(r => r.toString()),\n\t\t\t(['[0, 19)', '[97, 117)', '[197, 217)'])\n\t\t);\n\n\t\tqueue.addRangeAndResize(new OffsetRange(19, 97), 0);\n\n\t\tassert.deepStrictEqual(\n\t\t\tqueue.getRanges().map(r => r.toString()),\n\t\t\t(['[0, 39)', '[119, 139)'])\n\t\t);\n\n\t\tqueue.addRangeAndResize(new OffsetRange(-1000, 1000), 0);\n\n\t\tassert.deepStrictEqual(\n\t\t\tqueue.getRanges().map(r => r.toString()),\n\t\t\t([])\n\t\t);\n\t});\n});\n"]}