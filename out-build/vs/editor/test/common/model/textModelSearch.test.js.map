{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/model/textModelSearch.test.ts"],"names":[],"mappings":"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","file":"textModelSearch.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { getMapForWordSeparators } from 'vs/editor/common/core/wordCharacterClassifier';\nimport { USUAL_WORD_SEPARATORS } from 'vs/editor/common/core/wordHelper';\nimport { EndOfLineSequence, FindMatch, SearchData } from 'vs/editor/common/model';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { SearchParams, TextModelSearch, isMultilineRegexSource } from 'vs/editor/common/model/textModelSearch';\nimport { createTextModel } from 'vs/editor/test/common/testTextModel';\n\n// --------- Find\nsuite('TextModelSearch', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst usualWordSeparators = getMapForWordSeparators(USUAL_WORD_SEPARATORS);\n\n\tfunction assertFindMatch(actual: FindMatch | null, expectedRange: Range, expectedMatches: string[] | null = null): void {\n\t\tassert.deepStrictEqual(actual, new FindMatch(expectedRange, expectedMatches));\n\t}\n\n\tfunction _assertFindMatches(model: TextModel, searchParams: SearchParams, expectedMatches: FindMatch[]): void {\n\t\tconst actual = TextModelSearch.findMatches(model, searchParams, model.getFullModelRange(), false, 1000);\n\t\tassert.deepStrictEqual(actual, expectedMatches, 'findMatches OK');\n\n\t\t// test `findNextMatch`\n\t\tlet startPos = new Position(1, 1);\n\t\tlet match = TextModelSearch.findNextMatch(model, searchParams, startPos, false);\n\t\tassert.deepStrictEqual(match, expectedMatches[0], `findNextMatch ${startPos}`);\n\t\tfor (const expectedMatch of expectedMatches) {\n\t\t\tstartPos = expectedMatch.range.getStartPosition();\n\t\t\tmatch = TextModelSearch.findNextMatch(model, searchParams, startPos, false);\n\t\t\tassert.deepStrictEqual(match, expectedMatch, `findNextMatch ${startPos}`);\n\t\t}\n\n\t\t// test `findPrevMatch`\n\t\tstartPos = new Position(model.getLineCount(), model.getLineMaxColumn(model.getLineCount()));\n\t\tmatch = TextModelSearch.findPreviousMatch(model, searchParams, startPos, false);\n\t\tassert.deepStrictEqual(match, expectedMatches[expectedMatches.length - 1], `findPrevMatch ${startPos}`);\n\t\tfor (const expectedMatch of expectedMatches) {\n\t\t\tstartPos = expectedMatch.range.getEndPosition();\n\t\t\tmatch = TextModelSearch.findPreviousMatch(model, searchParams, startPos, false);\n\t\t\tassert.deepStrictEqual(match, expectedMatch, `findPrevMatch ${startPos}`);\n\t\t}\n\t}\n\n\tfunction assertFindMatches(text: string, searchString: string, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, _expected: [number, number, number, number][]): void {\n\t\tconst expectedRanges = _expected.map(entry => new Range(entry[0], entry[1], entry[2], entry[3]));\n\t\tconst expectedMatches = expectedRanges.map(entry => new FindMatch(entry, null));\n\t\tconst searchParams = new SearchParams(searchString, isRegex, matchCase, wordSeparators);\n\n\t\tconst model = createTextModel(text);\n\t\t_assertFindMatches(model, searchParams, expectedMatches);\n\t\tmodel.dispose();\n\n\n\t\tconst model2 = createTextModel(text);\n\t\tmodel2.setEOL(EndOfLineSequence.CRLF);\n\t\t_assertFindMatches(model2, searchParams, expectedMatches);\n\t\tmodel2.dispose();\n\t}\n\n\tconst regularText = [\n\t\t'This is some foo - bar text which contains foo and bar - as in Barcelona.',\n\t\t'Now it begins a word fooBar and now it is caps Foo-isn\\'t this great?',\n\t\t'And here\\'s a dull line with nothing interesting in it',\n\t\t'It is also interesting if it\\'s part of a word like amazingFooBar',\n\t\t'Again nothing interesting here'\n\t];\n\n\ttest('Simple find', () => {\n\t\tassertFindMatches(\n\t\t\tregularText.join('\\n'),\n\t\t\t'foo', false, false, null,\n\t\t\t[\n\t\t\t\t[1, 14, 1, 17],\n\t\t\t\t[1, 44, 1, 47],\n\t\t\t\t[2, 22, 2, 25],\n\t\t\t\t[2, 48, 2, 51],\n\t\t\t\t[4, 59, 4, 62]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Case sensitive find', () => {\n\t\tassertFindMatches(\n\t\t\tregularText.join('\\n'),\n\t\t\t'foo', false, true, null,\n\t\t\t[\n\t\t\t\t[1, 14, 1, 17],\n\t\t\t\t[1, 44, 1, 47],\n\t\t\t\t[2, 22, 2, 25]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Whole words find', () => {\n\t\tassertFindMatches(\n\t\t\tregularText.join('\\n'),\n\t\t\t'foo', false, false, USUAL_WORD_SEPARATORS,\n\t\t\t[\n\t\t\t\t[1, 14, 1, 17],\n\t\t\t\t[1, 44, 1, 47],\n\t\t\t\t[2, 48, 2, 51]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('/^/ find', () => {\n\t\tassertFindMatches(\n\t\t\tregularText.join('\\n'),\n\t\t\t'^', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 1, 1, 1],\n\t\t\t\t[2, 1, 2, 1],\n\t\t\t\t[3, 1, 3, 1],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 1, 5, 1]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('/$/ find', () => {\n\t\tassertFindMatches(\n\t\t\tregularText.join('\\n'),\n\t\t\t'$', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 74, 1, 74],\n\t\t\t\t[2, 69, 2, 69],\n\t\t\t\t[3, 54, 3, 54],\n\t\t\t\t[4, 65, 4, 65],\n\t\t\t\t[5, 31, 5, 31]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('/.*/ find', () => {\n\t\tassertFindMatches(\n\t\t\tregularText.join('\\n'),\n\t\t\t'.*', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 1, 1, 74],\n\t\t\t\t[2, 1, 2, 69],\n\t\t\t\t[3, 1, 3, 54],\n\t\t\t\t[4, 1, 4, 65],\n\t\t\t\t[5, 1, 5, 31]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('/^$/ find', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'This is some foo - bar text which contains foo and bar - as in Barcelona.',\n\t\t\t\t'',\n\t\t\t\t'And here\\'s a dull line with nothing interesting in it',\n\t\t\t\t'',\n\t\t\t\t'Again nothing interesting here'\n\t\t\t].join('\\n'),\n\t\t\t'^$', true, false, null,\n\t\t\t[\n\t\t\t\t[2, 1, 2, 1],\n\t\t\t\t[4, 1, 4, 1]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('multiline find 1', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'Just some text text',\n\t\t\t\t'Just some text text',\n\t\t\t\t'some text again',\n\t\t\t\t'again some text'\n\t\t\t].join('\\n'),\n\t\t\t'text\\\\n', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 16, 2, 1],\n\t\t\t\t[2, 16, 3, 1],\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('multiline find 2', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'Just some text text',\n\t\t\t\t'Just some text text',\n\t\t\t\t'some text again',\n\t\t\t\t'again some text'\n\t\t\t].join('\\n'),\n\t\t\t'text\\\\nJust', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 16, 2, 5]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('multiline find 3', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'Just some text text',\n\t\t\t\t'Just some text text',\n\t\t\t\t'some text again',\n\t\t\t\t'again some text'\n\t\t\t].join('\\n'),\n\t\t\t'\\\\nagain', true, false, null,\n\t\t\t[\n\t\t\t\t[3, 16, 4, 6]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('multiline find 4', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'Just some text text',\n\t\t\t\t'Just some text text',\n\t\t\t\t'some text again',\n\t\t\t\t'again some text'\n\t\t\t].join('\\n'),\n\t\t\t'.*\\\\nJust.*\\\\n', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 1, 3, 1]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('multiline find with line beginning regex', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'if',\n\t\t\t\t'else',\n\t\t\t\t'',\n\t\t\t\t'if',\n\t\t\t\t'else'\n\t\t\t].join('\\n'),\n\t\t\t'^if\\\\nelse', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 1, 2, 5],\n\t\t\t\t[4, 1, 5, 5]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('matching empty lines using boundary expression', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'if',\n\t\t\t\t'',\n\t\t\t\t'else',\n\t\t\t\t'  ',\n\t\t\t\t'if',\n\t\t\t\t' ',\n\t\t\t\t'else'\n\t\t\t].join('\\n'),\n\t\t\t'^\\\\s*$\\\\n', true, false, null,\n\t\t\t[\n\t\t\t\t[2, 1, 3, 1],\n\t\t\t\t[4, 1, 5, 1],\n\t\t\t\t[6, 1, 7, 1]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('matching lines starting with A and ending with B', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'a if b',\n\t\t\t\t'a',\n\t\t\t\t'ab',\n\t\t\t\t'eb'\n\t\t\t].join('\\n'),\n\t\t\t'^a.*b$', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 1, 1, 7],\n\t\t\t\t[3, 1, 3, 3]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('multiline find with line ending regex', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'if',\n\t\t\t\t'else',\n\t\t\t\t'',\n\t\t\t\t'if',\n\t\t\t\t'elseif',\n\t\t\t\t'else'\n\t\t\t].join('\\n'),\n\t\t\t'if\\\\nelse$', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 1, 2, 5],\n\t\t\t\t[5, 5, 6, 5]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('issue #4836 - ^.*$', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'Just some text text',\n\t\t\t\t'',\n\t\t\t\t'some text again',\n\t\t\t\t'',\n\t\t\t\t'again some text'\n\t\t\t].join('\\n'),\n\t\t\t'^.*$', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 1, 1, 20],\n\t\t\t\t[2, 1, 2, 1],\n\t\t\t\t[3, 1, 3, 16],\n\t\t\t\t[4, 1, 4, 1],\n\t\t\t\t[5, 1, 5, 16],\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('multiline find for non-regex string', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'Just some text text',\n\t\t\t\t'some text text',\n\t\t\t\t'some text again',\n\t\t\t\t'again some text',\n\t\t\t\t'but not some'\n\t\t\t].join('\\n'),\n\t\t\t'text\\nsome', false, false, null,\n\t\t\t[\n\t\t\t\t[1, 16, 2, 5],\n\t\t\t\t[2, 11, 3, 5],\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('issue #3623: Match whole word does not work for not latin characters', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'я',\n\t\t\t\t'компилятор',\n\t\t\t\t'обфускация',\n\t\t\t\t':я-я'\n\t\t\t].join('\\n'),\n\t\t\t'я', false, false, USUAL_WORD_SEPARATORS,\n\t\t\t[\n\t\t\t\t[1, 1, 1, 2],\n\t\t\t\t[4, 2, 4, 3],\n\t\t\t\t[4, 4, 4, 5],\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('issue #27459: Match whole words regression', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'this._register(this._textAreaInput.onKeyDown((e: IKeyboardEvent) => {',\n\t\t\t\t'\tthis._viewController.emitKeyDown(e);',\n\t\t\t\t'}));',\n\t\t\t].join('\\n'),\n\t\t\t'((e: ', false, false, USUAL_WORD_SEPARATORS,\n\t\t\t[\n\t\t\t\t[1, 45, 1, 50]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('issue #27594: Search results disappear', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'this.server.listen(0);',\n\t\t\t].join('\\n'),\n\t\t\t'listen(', false, false, USUAL_WORD_SEPARATORS,\n\t\t\t[\n\t\t\t\t[1, 13, 1, 20]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('findNextMatch without regex', () => {\n\t\tconst model = createTextModel('line line one\\nline two\\nthree');\n\n\t\tconst searchParams = new SearchParams('line', false, false, null);\n\n\t\tlet actual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 1), false);\n\t\tassertFindMatch(actual, new Range(1, 1, 1, 5));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, actual!.range.getEndPosition(), false);\n\t\tassertFindMatch(actual, new Range(1, 6, 1, 10));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 3), false);\n\t\tassertFindMatch(actual, new Range(1, 6, 1, 10));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, actual!.range.getEndPosition(), false);\n\t\tassertFindMatch(actual, new Range(2, 1, 2, 5));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, actual!.range.getEndPosition(), false);\n\t\tassertFindMatch(actual, new Range(1, 1, 1, 5));\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('findNextMatch with beginning boundary regex', () => {\n\t\tconst model = createTextModel('line one\\nline two\\nthree');\n\n\t\tconst searchParams = new SearchParams('^line', true, false, null);\n\n\t\tlet actual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 1), false);\n\t\tassertFindMatch(actual, new Range(1, 1, 1, 5));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, actual!.range.getEndPosition(), false);\n\t\tassertFindMatch(actual, new Range(2, 1, 2, 5));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 3), false);\n\t\tassertFindMatch(actual, new Range(2, 1, 2, 5));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, actual!.range.getEndPosition(), false);\n\t\tassertFindMatch(actual, new Range(1, 1, 1, 5));\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('findNextMatch with beginning boundary regex and line has repetitive beginnings', () => {\n\t\tconst model = createTextModel('line line one\\nline two\\nthree');\n\n\t\tconst searchParams = new SearchParams('^line', true, false, null);\n\n\t\tlet actual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 1), false);\n\t\tassertFindMatch(actual, new Range(1, 1, 1, 5));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, actual!.range.getEndPosition(), false);\n\t\tassertFindMatch(actual, new Range(2, 1, 2, 5));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 3), false);\n\t\tassertFindMatch(actual, new Range(2, 1, 2, 5));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, actual!.range.getEndPosition(), false);\n\t\tassertFindMatch(actual, new Range(1, 1, 1, 5));\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('findNextMatch with beginning boundary multiline regex and line has repetitive beginnings', () => {\n\t\tconst model = createTextModel('line line one\\nline two\\nline three\\nline four');\n\n\t\tconst searchParams = new SearchParams('^line.*\\\\nline', true, false, null);\n\n\t\tlet actual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 1), false);\n\t\tassertFindMatch(actual, new Range(1, 1, 2, 5));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, actual!.range.getEndPosition(), false);\n\t\tassertFindMatch(actual, new Range(3, 1, 4, 5));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, new Position(2, 1), false);\n\t\tassertFindMatch(actual, new Range(2, 1, 3, 5));\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('findNextMatch with ending boundary regex', () => {\n\t\tconst model = createTextModel('one line line\\ntwo line\\nthree');\n\n\t\tconst searchParams = new SearchParams('line$', true, false, null);\n\n\t\tlet actual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 1), false);\n\t\tassertFindMatch(actual, new Range(1, 10, 1, 14));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 4), false);\n\t\tassertFindMatch(actual, new Range(1, 10, 1, 14));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, actual!.range.getEndPosition(), false);\n\t\tassertFindMatch(actual, new Range(2, 5, 2, 9));\n\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, actual!.range.getEndPosition(), false);\n\t\tassertFindMatch(actual, new Range(1, 10, 1, 14));\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('findMatches with capturing matches', () => {\n\t\tconst model = createTextModel('one line line\\ntwo line\\nthree');\n\n\t\tconst searchParams = new SearchParams('(l(in)e)', true, false, null);\n\n\t\tconst actual = TextModelSearch.findMatches(model, searchParams, model.getFullModelRange(), true, 100);\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tnew FindMatch(new Range(1, 5, 1, 9), ['line', 'line', 'in']),\n\t\t\tnew FindMatch(new Range(1, 10, 1, 14), ['line', 'line', 'in']),\n\t\t\tnew FindMatch(new Range(2, 5, 2, 9), ['line', 'line', 'in']),\n\t\t]);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('findMatches multiline with capturing matches', () => {\n\t\tconst model = createTextModel('one line line\\ntwo line\\nthree');\n\n\t\tconst searchParams = new SearchParams('(l(in)e)\\\\n', true, false, null);\n\n\t\tconst actual = TextModelSearch.findMatches(model, searchParams, model.getFullModelRange(), true, 100);\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tnew FindMatch(new Range(1, 10, 2, 1), ['line\\n', 'line', 'in']),\n\t\t\tnew FindMatch(new Range(2, 5, 3, 1), ['line\\n', 'line', 'in']),\n\t\t]);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('findNextMatch with capturing matches', () => {\n\t\tconst model = createTextModel('one line line\\ntwo line\\nthree');\n\n\t\tconst searchParams = new SearchParams('(l(in)e)', true, false, null);\n\n\t\tconst actual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 1), true);\n\t\tassertFindMatch(actual, new Range(1, 5, 1, 9), ['line', 'line', 'in']);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('findNextMatch multiline with capturing matches', () => {\n\t\tconst model = createTextModel('one line line\\ntwo line\\nthree');\n\n\t\tconst searchParams = new SearchParams('(l(in)e)\\\\n', true, false, null);\n\n\t\tconst actual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 1), true);\n\t\tassertFindMatch(actual, new Range(1, 10, 2, 1), ['line\\n', 'line', 'in']);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('findPreviousMatch with capturing matches', () => {\n\t\tconst model = createTextModel('one line line\\ntwo line\\nthree');\n\n\t\tconst searchParams = new SearchParams('(l(in)e)', true, false, null);\n\n\t\tconst actual = TextModelSearch.findPreviousMatch(model, searchParams, new Position(1, 1), true);\n\t\tassertFindMatch(actual, new Range(2, 5, 2, 9), ['line', 'line', 'in']);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('findPreviousMatch multiline with capturing matches', () => {\n\t\tconst model = createTextModel('one line line\\ntwo line\\nthree');\n\n\t\tconst searchParams = new SearchParams('(l(in)e)\\\\n', true, false, null);\n\n\t\tconst actual = TextModelSearch.findPreviousMatch(model, searchParams, new Position(1, 1), true);\n\t\tassertFindMatch(actual, new Range(2, 5, 3, 1), ['line\\n', 'line', 'in']);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('\\\\n matches \\\\r\\\\n', () => {\n\t\tconst model = createTextModel('a\\r\\nb\\r\\nc\\r\\nd\\r\\ne\\r\\nf\\r\\ng\\r\\nh\\r\\ni');\n\n\t\tassert.strictEqual(model.getEOL(), '\\r\\n');\n\n\t\tlet searchParams = new SearchParams('h\\\\n', true, false, null);\n\t\tlet actual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 1), true);\n\t\tactual = TextModelSearch.findMatches(model, searchParams, model.getFullModelRange(), true, 1000)[0];\n\t\tassertFindMatch(actual, new Range(8, 1, 9, 1), ['h\\n']);\n\n\t\tsearchParams = new SearchParams('g\\\\nh\\\\n', true, false, null);\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 1), true);\n\t\tactual = TextModelSearch.findMatches(model, searchParams, model.getFullModelRange(), true, 1000)[0];\n\t\tassertFindMatch(actual, new Range(7, 1, 9, 1), ['g\\nh\\n']);\n\n\t\tsearchParams = new SearchParams('\\\\ni', true, false, null);\n\t\tactual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 1), true);\n\t\tactual = TextModelSearch.findMatches(model, searchParams, model.getFullModelRange(), true, 1000)[0];\n\t\tassertFindMatch(actual, new Range(8, 2, 9, 2), ['\\ni']);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('\\\\r can never be found', () => {\n\t\tconst model = createTextModel('a\\r\\nb\\r\\nc\\r\\nd\\r\\ne\\r\\nf\\r\\ng\\r\\nh\\r\\ni');\n\n\t\tassert.strictEqual(model.getEOL(), '\\r\\n');\n\n\t\tconst searchParams = new SearchParams('\\\\r\\\\n', true, false, null);\n\t\tconst actual = TextModelSearch.findNextMatch(model, searchParams, new Position(1, 1), true);\n\t\tassert.strictEqual(actual, null);\n\t\tassert.deepStrictEqual(TextModelSearch.findMatches(model, searchParams, model.getFullModelRange(), true, 1000), []);\n\n\t\tmodel.dispose();\n\t});\n\n\tfunction assertParseSearchResult(searchString: string, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, expected: SearchData | null): void {\n\t\tconst searchParams = new SearchParams(searchString, isRegex, matchCase, wordSeparators);\n\t\tconst actual = searchParams.parseSearchRequest();\n\n\t\tif (expected === null) {\n\t\t\tassert.ok(actual === null);\n\t\t} else {\n\t\t\tassert.deepStrictEqual(actual!.regex, expected.regex);\n\t\t\tassert.deepStrictEqual(actual!.simpleSearch, expected.simpleSearch);\n\t\t\tif (wordSeparators) {\n\t\t\t\tassert.ok(actual!.wordSeparators !== null);\n\t\t\t} else {\n\t\t\t\tassert.ok(actual!.wordSeparators === null);\n\t\t\t}\n\t\t}\n\t}\n\n\ttest('parseSearchRequest invalid', () => {\n\t\tassertParseSearchResult('', true, true, USUAL_WORD_SEPARATORS, null);\n\t\tassertParseSearchResult('(', true, false, null, null);\n\t});\n\n\ttest('parseSearchRequest non regex', () => {\n\t\tassertParseSearchResult('foo', false, false, null, new SearchData(/foo/giu, null, null));\n\t\tassertParseSearchResult('foo', false, false, USUAL_WORD_SEPARATORS, new SearchData(/foo/giu, usualWordSeparators, null));\n\t\tassertParseSearchResult('foo', false, true, null, new SearchData(/foo/gu, null, 'foo'));\n\t\tassertParseSearchResult('foo', false, true, USUAL_WORD_SEPARATORS, new SearchData(/foo/gu, usualWordSeparators, 'foo'));\n\t\tassertParseSearchResult('foo\\\\n', false, false, null, new SearchData(/foo\\\\n/giu, null, null));\n\t\tassertParseSearchResult('foo\\\\\\\\n', false, false, null, new SearchData(/foo\\\\\\\\n/giu, null, null));\n\t\tassertParseSearchResult('foo\\\\r', false, false, null, new SearchData(/foo\\\\r/giu, null, null));\n\t\tassertParseSearchResult('foo\\\\\\\\r', false, false, null, new SearchData(/foo\\\\\\\\r/giu, null, null));\n\t});\n\n\ttest('parseSearchRequest regex', () => {\n\t\tassertParseSearchResult('foo', true, false, null, new SearchData(/foo/giu, null, null));\n\t\tassertParseSearchResult('foo', true, false, USUAL_WORD_SEPARATORS, new SearchData(/foo/giu, usualWordSeparators, null));\n\t\tassertParseSearchResult('foo', true, true, null, new SearchData(/foo/gu, null, null));\n\t\tassertParseSearchResult('foo', true, true, USUAL_WORD_SEPARATORS, new SearchData(/foo/gu, usualWordSeparators, null));\n\t\tassertParseSearchResult('foo\\\\n', true, false, null, new SearchData(/foo\\n/gimu, null, null));\n\t\tassertParseSearchResult('foo\\\\\\\\n', true, false, null, new SearchData(/foo\\\\n/giu, null, null));\n\t\tassertParseSearchResult('foo\\\\r', true, false, null, new SearchData(/foo\\r/gimu, null, null));\n\t\tassertParseSearchResult('foo\\\\\\\\r', true, false, null, new SearchData(/foo\\\\r/giu, null, null));\n\t});\n\n\ttest('issue #53415. \\W should match line break.', () => {\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'text',\n\t\t\t\t'180702-',\n\t\t\t\t'180703-180704'\n\t\t\t].join('\\n'),\n\t\t\t'\\\\d{6}-\\\\W', true, false, null,\n\t\t\t[\n\t\t\t\t[2, 1, 3, 1]\n\t\t\t]\n\t\t);\n\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'Just some text',\n\t\t\t\t'',\n\t\t\t\t'Just'\n\t\t\t].join('\\n'),\n\t\t\t'\\\\W', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 5, 1, 6],\n\t\t\t\t[1, 10, 1, 11],\n\t\t\t\t[1, 15, 2, 1],\n\t\t\t\t[2, 1, 3, 1]\n\t\t\t]\n\t\t);\n\n\t\t// Line break doesn't affect the result as we always use \\n as line break when doing search\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'Just some text',\n\t\t\t\t'',\n\t\t\t\t'Just'\n\t\t\t].join('\\r\\n'),\n\t\t\t'\\\\W', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 5, 1, 6],\n\t\t\t\t[1, 10, 1, 11],\n\t\t\t\t[1, 15, 2, 1],\n\t\t\t\t[2, 1, 3, 1]\n\t\t\t]\n\t\t);\n\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'Just some text',\n\t\t\t\t'\\tJust',\n\t\t\t\t'Just'\n\t\t\t].join('\\n'),\n\t\t\t'\\\\W', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 5, 1, 6],\n\t\t\t\t[1, 10, 1, 11],\n\t\t\t\t[1, 15, 2, 1],\n\t\t\t\t[2, 1, 2, 2],\n\t\t\t\t[2, 6, 3, 1],\n\t\t\t]\n\t\t);\n\n\t\t// line break is seen as one non-word character\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'Just  some text',\n\t\t\t\t'',\n\t\t\t\t'Just'\n\t\t\t].join('\\n'),\n\t\t\t'\\\\W{2}', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 5, 1, 7],\n\t\t\t\t[1, 16, 3, 1]\n\t\t\t]\n\t\t);\n\n\t\t// even if it's \\r\\n\n\t\tassertFindMatches(\n\t\t\t[\n\t\t\t\t'Just  some text',\n\t\t\t\t'',\n\t\t\t\t'Just'\n\t\t\t].join('\\r\\n'),\n\t\t\t'\\\\W{2}', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 5, 1, 7],\n\t\t\t\t[1, 16, 3, 1]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('Simple find using unicode escape sequences', () => {\n\t\tassertFindMatches(\n\t\t\tregularText.join('\\n'),\n\t\t\t'\\\\u{0066}\\\\u006f\\\\u006F', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 14, 1, 17],\n\t\t\t\t[1, 44, 1, 47],\n\t\t\t\t[2, 22, 2, 25],\n\t\t\t\t[2, 48, 2, 51],\n\t\t\t\t[4, 59, 4, 62]\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('isMultilineRegexSource', () => {\n\t\tassert(!isMultilineRegexSource('foo'));\n\t\tassert(!isMultilineRegexSource(''));\n\t\tassert(!isMultilineRegexSource('foo\\\\sbar'));\n\t\tassert(!isMultilineRegexSource('\\\\\\\\notnewline'));\n\n\t\tassert(isMultilineRegexSource('foo\\\\nbar'));\n\t\tassert(isMultilineRegexSource('foo\\\\nbar\\\\s'));\n\t\tassert(isMultilineRegexSource('foo\\\\r\\\\n'));\n\t\tassert(isMultilineRegexSource('\\\\n'));\n\t\tassert(isMultilineRegexSource('foo\\\\W'));\n\t\tassert(isMultilineRegexSource('foo\\n'));\n\t\tassert(isMultilineRegexSource('foo\\r\\n'));\n\t});\n\n\ttest('issue #74715. \\\\d* finds empty string and stops searching.', () => {\n\t\tconst model = createTextModel('10.243.30.10');\n\n\t\tconst searchParams = new SearchParams('\\\\d*', true, false, null);\n\n\t\tconst actual = TextModelSearch.findMatches(model, searchParams, model.getFullModelRange(), true, 100);\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tnew FindMatch(new Range(1, 1, 1, 3), ['10']),\n\t\t\tnew FindMatch(new Range(1, 3, 1, 3), ['']),\n\t\t\tnew FindMatch(new Range(1, 4, 1, 7), ['243']),\n\t\t\tnew FindMatch(new Range(1, 7, 1, 7), ['']),\n\t\t\tnew FindMatch(new Range(1, 8, 1, 10), ['30']),\n\t\t\tnew FindMatch(new Range(1, 10, 1, 10), ['']),\n\t\t\tnew FindMatch(new Range(1, 11, 1, 13), ['10'])\n\t\t]);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('issue #100134. Zero-length matches should properly step over surrogate pairs', () => {\n\t\t// 1[Laptop]1 - there shoud be no matches inside of [Laptop] emoji\n\t\tassertFindMatches('1\\uD83D\\uDCBB1', '()', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 1, 1, 1],\n\t\t\t\t[1, 2, 1, 2],\n\t\t\t\t[1, 4, 1, 4],\n\t\t\t\t[1, 5, 1, 5],\n\n\t\t\t]\n\t\t);\n\t\t// 1[Hacker Cat]1 = 1[Cat Face][ZWJ][Laptop]1 - there shoud be matches between emoji and ZWJ\n\t\t// there shoud be no matches inside of [Cat Face] and [Laptop] emoji\n\t\tassertFindMatches('1\\uD83D\\uDC31\\u200D\\uD83D\\uDCBB1', '()', true, false, null,\n\t\t\t[\n\t\t\t\t[1, 1, 1, 1],\n\t\t\t\t[1, 2, 1, 2],\n\t\t\t\t[1, 4, 1, 4],\n\t\t\t\t[1, 5, 1, 5],\n\t\t\t\t[1, 7, 1, 7],\n\t\t\t\t[1, 8, 1, 8]\n\t\t\t]\n\t\t);\n\t});\n});\n"]}