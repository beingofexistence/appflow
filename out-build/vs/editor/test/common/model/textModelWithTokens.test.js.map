{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/model/textModelWithTokens.test.ts"],"names":[],"mappings":"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","file":"textModelWithTokens.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IFoundBracket } from 'vs/editor/common/textModelBracketPairs';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { ITokenizationSupport, TokenizationRegistry, EncodedTokenizationResult } from 'vs/editor/common/languages';\nimport { StandardTokenType, MetadataConsts } from 'vs/editor/common/encodedTokenAttributes';\nimport { CharacterPair } from 'vs/editor/common/languages/languageConfiguration';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { NullState } from 'vs/editor/common/languages/nullTokenize';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { TestLineToken } from 'vs/editor/test/common/core/testLineToken';\nimport { createModelServices, createTextModel, instantiateTextModel } from 'vs/editor/test/common/testTextModel';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nfunction createTextModelWithBrackets(disposables: DisposableStore, text: string, brackets: CharacterPair[]): TextModel {\n\tconst languageId = 'bracketMode2';\n\tconst instantiationService = createModelServices(disposables);\n\tconst languageConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\tconst languageService = instantiationService.get(ILanguageService);\n\n\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\tdisposables.add(languageConfigurationService.register(languageId, { brackets }));\n\n\treturn disposables.add(instantiateTextModel(instantiationService, text, languageId));\n}\n\nsuite('TextModelWithTokens', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction testBrackets(contents: string[], brackets: CharacterPair[]): void {\n\t\tconst languageId = 'testMode';\n\t\tconst disposables = new DisposableStore();\n\t\tconst instantiationService = createModelServices(disposables);\n\t\tconst languageConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\t\tconst languageService = instantiationService.get(ILanguageService);\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tbrackets: brackets\n\t\t}));\n\n\n\t\tfunction toRelaxedFoundBracket(a: IFoundBracket | null) {\n\t\t\tif (!a) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\trange: a.range.toString(),\n\t\t\t\tinfo: a.bracketInfo,\n\t\t\t};\n\t\t}\n\n\t\tconst charIsBracket: { [char: string]: boolean } = {};\n\t\tconst charIsOpenBracket: { [char: string]: boolean } = {};\n\t\tconst openForChar: { [char: string]: string } = {};\n\t\tconst closeForChar: { [char: string]: string } = {};\n\t\tbrackets.forEach((b) => {\n\t\t\tcharIsBracket[b[0]] = true;\n\t\t\tcharIsBracket[b[1]] = true;\n\n\t\t\tcharIsOpenBracket[b[0]] = true;\n\t\t\tcharIsOpenBracket[b[1]] = false;\n\n\t\t\topenForChar[b[0]] = b[0];\n\t\t\tcloseForChar[b[0]] = b[1];\n\n\t\t\topenForChar[b[1]] = b[0];\n\t\t\tcloseForChar[b[1]] = b[1];\n\t\t});\n\n\t\tconst expectedBrackets: IFoundBracket[] = [];\n\t\tfor (let lineIndex = 0; lineIndex < contents.length; lineIndex++) {\n\t\t\tconst lineText = contents[lineIndex];\n\n\t\t\tfor (let charIndex = 0; charIndex < lineText.length; charIndex++) {\n\t\t\t\tconst ch = lineText.charAt(charIndex);\n\t\t\t\tif (charIsBracket[ch]) {\n\t\t\t\t\texpectedBrackets.push({\n\t\t\t\t\t\tbracketInfo: languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew.getBracketInfo(ch)!,\n\t\t\t\t\t\trange: new Range(lineIndex + 1, charIndex + 1, lineIndex + 1, charIndex + 2)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, contents.join('\\n'), languageId));\n\n\t\t// findPrevBracket\n\t\t{\n\t\t\tlet expectedBracketIndex = expectedBrackets.length - 1;\n\t\t\tlet currentExpectedBracket = expectedBracketIndex >= 0 ? expectedBrackets[expectedBracketIndex] : null;\n\t\t\tfor (let lineNumber = contents.length; lineNumber >= 1; lineNumber--) {\n\t\t\t\tconst lineText = contents[lineNumber - 1];\n\n\t\t\t\tfor (let column = lineText.length + 1; column >= 1; column--) {\n\n\t\t\t\t\tif (currentExpectedBracket) {\n\t\t\t\t\t\tif (lineNumber === currentExpectedBracket.range.startLineNumber && column < currentExpectedBracket.range.endColumn) {\n\t\t\t\t\t\t\texpectedBracketIndex--;\n\t\t\t\t\t\t\tcurrentExpectedBracket = expectedBracketIndex >= 0 ? expectedBrackets[expectedBracketIndex] : null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst actual = model.bracketPairs.findPrevBracket({\n\t\t\t\t\t\tlineNumber: lineNumber,\n\t\t\t\t\t\tcolumn: column\n\t\t\t\t\t});\n\n\t\t\t\t\tassert.deepStrictEqual(toRelaxedFoundBracket(actual), toRelaxedFoundBracket(currentExpectedBracket), 'findPrevBracket of ' + lineNumber + ', ' + column);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// findNextBracket\n\t\t{\n\t\t\tlet expectedBracketIndex = 0;\n\t\t\tlet currentExpectedBracket = expectedBracketIndex < expectedBrackets.length ? expectedBrackets[expectedBracketIndex] : null;\n\t\t\tfor (let lineNumber = 1; lineNumber <= contents.length; lineNumber++) {\n\t\t\t\tconst lineText = contents[lineNumber - 1];\n\n\t\t\t\tfor (let column = 1; column <= lineText.length + 1; column++) {\n\n\t\t\t\t\tif (currentExpectedBracket) {\n\t\t\t\t\t\tif (lineNumber === currentExpectedBracket.range.startLineNumber && column > currentExpectedBracket.range.startColumn) {\n\t\t\t\t\t\t\texpectedBracketIndex++;\n\t\t\t\t\t\t\tcurrentExpectedBracket = expectedBracketIndex < expectedBrackets.length ? expectedBrackets[expectedBracketIndex] : null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst actual = model.bracketPairs.findNextBracket({\n\t\t\t\t\t\tlineNumber: lineNumber,\n\t\t\t\t\t\tcolumn: column\n\t\t\t\t\t});\n\n\t\t\t\t\tassert.deepStrictEqual(toRelaxedFoundBracket(actual), toRelaxedFoundBracket(currentExpectedBracket), 'findNextBracket of ' + lineNumber + ', ' + column);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdisposables.dispose();\n\t}\n\n\ttest('brackets1', () => {\n\t\ttestBrackets([\n\t\t\t'if (a == 3) { return (7 * (a + 5)); }'\n\t\t], [\n\t\t\t['{', '}'],\n\t\t\t['[', ']'],\n\t\t\t['(', ')']\n\t\t]);\n\t});\n});\n\nfunction assertIsNotBracket(model: TextModel, lineNumber: number, column: number) {\n\tconst match = model.bracketPairs.matchBracket(new Position(lineNumber, column));\n\tassert.strictEqual(match, null, 'is not matching brackets at ' + lineNumber + ', ' + column);\n}\n\nfunction assertIsBracket(model: TextModel, testPosition: Position, expected: [Range, Range]): void {\n\texpected.sort(Range.compareRangesUsingStarts);\n\tconst actual = model.bracketPairs.matchBracket(testPosition);\n\tactual?.sort(Range.compareRangesUsingStarts);\n\tassert.deepStrictEqual(actual, expected, 'matches brackets at ' + testPosition);\n}\n\nsuite('TextModelWithTokens - bracket matching', () => {\n\n\tconst languageId = 'bracketMode1';\n\tlet disposables: DisposableStore;\n\tlet instantiationService: TestInstantiationService;\n\tlet languageConfigurationService: ILanguageConfigurationService;\n\tlet languageService: ILanguageService;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\tinstantiationService = createModelServices(disposables);\n\t\tlanguageConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\t\tlanguageService = instantiationService.get(ILanguageService);\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\t\tdisposables.add(languageConfigurationService.register(languageId, {\n\t\t\tbrackets: [\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']'],\n\t\t\t\t['(', ')'],\n\t\t\t]\n\t\t}));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('bracket matching 1', () => {\n\t\tconst text =\n\t\t\t')]}{[(' + '\\n' +\n\t\t\t')]}{[(';\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, text, languageId));\n\n\t\tassertIsNotBracket(model, 1, 1);\n\t\tassertIsNotBracket(model, 1, 2);\n\t\tassertIsNotBracket(model, 1, 3);\n\t\tassertIsBracket(model, new Position(1, 4), [new Range(1, 4, 1, 5), new Range(2, 3, 2, 4)]);\n\t\tassertIsBracket(model, new Position(1, 5), [new Range(1, 5, 1, 6), new Range(2, 2, 2, 3)]);\n\t\tassertIsBracket(model, new Position(1, 6), [new Range(1, 6, 1, 7), new Range(2, 1, 2, 2)]);\n\t\tassertIsBracket(model, new Position(1, 7), [new Range(1, 6, 1, 7), new Range(2, 1, 2, 2)]);\n\n\t\tassertIsBracket(model, new Position(2, 1), [new Range(2, 1, 2, 2), new Range(1, 6, 1, 7)]);\n\t\tassertIsBracket(model, new Position(2, 2), [new Range(2, 2, 2, 3), new Range(1, 5, 1, 6)]);\n\t\tassertIsBracket(model, new Position(2, 3), [new Range(2, 3, 2, 4), new Range(1, 4, 1, 5)]);\n\t\tassertIsBracket(model, new Position(2, 4), [new Range(2, 3, 2, 4), new Range(1, 4, 1, 5)]);\n\t\tassertIsNotBracket(model, 2, 5);\n\t\tassertIsNotBracket(model, 2, 6);\n\t\tassertIsNotBracket(model, 2, 7);\n\t});\n\n\ttest('bracket matching 2', () => {\n\t\tconst text =\n\t\t\t'var bar = {' + '\\n' +\n\t\t\t'foo: {' + '\\n' +\n\t\t\t'}, bar: {hallo: [{' + '\\n' +\n\t\t\t'}, {' + '\\n' +\n\t\t\t'}]}}';\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, text, languageId));\n\n\t\tconst brackets: [Position, Range, Range][] = [\n\t\t\t[new Position(1, 11), new Range(1, 11, 1, 12), new Range(5, 4, 5, 5)],\n\t\t\t[new Position(1, 12), new Range(1, 11, 1, 12), new Range(5, 4, 5, 5)],\n\n\t\t\t[new Position(2, 6), new Range(2, 6, 2, 7), new Range(3, 1, 3, 2)],\n\t\t\t[new Position(2, 7), new Range(2, 6, 2, 7), new Range(3, 1, 3, 2)],\n\n\t\t\t[new Position(3, 1), new Range(3, 1, 3, 2), new Range(2, 6, 2, 7)],\n\t\t\t[new Position(3, 2), new Range(3, 1, 3, 2), new Range(2, 6, 2, 7)],\n\t\t\t[new Position(3, 9), new Range(3, 9, 3, 10), new Range(5, 3, 5, 4)],\n\t\t\t[new Position(3, 10), new Range(3, 9, 3, 10), new Range(5, 3, 5, 4)],\n\t\t\t[new Position(3, 17), new Range(3, 17, 3, 18), new Range(5, 2, 5, 3)],\n\t\t\t[new Position(3, 18), new Range(3, 18, 3, 19), new Range(4, 1, 4, 2)],\n\t\t\t[new Position(3, 19), new Range(3, 18, 3, 19), new Range(4, 1, 4, 2)],\n\n\t\t\t[new Position(4, 1), new Range(4, 1, 4, 2), new Range(3, 18, 3, 19)],\n\t\t\t[new Position(4, 2), new Range(4, 1, 4, 2), new Range(3, 18, 3, 19)],\n\t\t\t[new Position(4, 4), new Range(4, 4, 4, 5), new Range(5, 1, 5, 2)],\n\t\t\t[new Position(4, 5), new Range(4, 4, 4, 5), new Range(5, 1, 5, 2)],\n\n\t\t\t[new Position(5, 1), new Range(5, 1, 5, 2), new Range(4, 4, 4, 5)],\n\t\t\t[new Position(5, 2), new Range(5, 2, 5, 3), new Range(3, 17, 3, 18)],\n\t\t\t[new Position(5, 3), new Range(5, 3, 5, 4), new Range(3, 9, 3, 10)],\n\t\t\t[new Position(5, 4), new Range(5, 4, 5, 5), new Range(1, 11, 1, 12)],\n\t\t\t[new Position(5, 5), new Range(5, 4, 5, 5), new Range(1, 11, 1, 12)],\n\t\t];\n\n\t\tconst isABracket: { [lineNumber: number]: { [col: number]: boolean } } = { 1: {}, 2: {}, 3: {}, 4: {}, 5: {} };\n\t\tfor (let i = 0, len = brackets.length; i < len; i++) {\n\t\t\tconst [testPos, b1, b2] = brackets[i];\n\t\t\tassertIsBracket(model, testPos, [b1, b2]);\n\t\t\tisABracket[testPos.lineNumber][testPos.column] = true;\n\t\t}\n\n\t\tfor (let i = 1, len = model.getLineCount(); i <= len; i++) {\n\t\t\tconst line = model.getLineContent(i);\n\t\t\tfor (let j = 1, lenJ = line.length + 1; j <= lenJ; j++) {\n\t\t\t\tif (!isABracket[i].hasOwnProperty(<any>j)) {\n\t\t\t\t\tassertIsNotBracket(model, i, j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nsuite('TextModelWithTokens 2', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('bracket matching 3', () => {\n\t\tconst text = [\n\t\t\t'begin',\n\t\t\t'    loop',\n\t\t\t'        if then',\n\t\t\t'        end if;',\n\t\t\t'    end loop;',\n\t\t\t'end;',\n\t\t\t'',\n\t\t\t'begin',\n\t\t\t'    loop',\n\t\t\t'        if then',\n\t\t\t'        end ifa;',\n\t\t\t'    end loop;',\n\t\t\t'end;',\n\t\t].join('\\n');\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst model = createTextModelWithBrackets(disposables, text, [\n\t\t\t['if', 'end if'],\n\t\t\t['loop', 'end loop'],\n\t\t\t['begin', 'end']\n\t\t]);\n\n\t\t// <if> ... <end ifa> is not matched\n\t\tassertIsNotBracket(model, 10, 9);\n\n\t\t// <if> ... <end if> is matched\n\t\tassertIsBracket(model, new Position(3, 9), [new Range(3, 9, 3, 11), new Range(4, 9, 4, 15)]);\n\t\tassertIsBracket(model, new Position(4, 9), [new Range(4, 9, 4, 15), new Range(3, 9, 3, 11)]);\n\n\t\t// <loop> ... <end loop> is matched\n\t\tassertIsBracket(model, new Position(2, 5), [new Range(2, 5, 2, 9), new Range(5, 5, 5, 13)]);\n\t\tassertIsBracket(model, new Position(5, 5), [new Range(5, 5, 5, 13), new Range(2, 5, 2, 9)]);\n\n\t\t// <begin> ... <end> is matched\n\t\tassertIsBracket(model, new Position(1, 1), [new Range(1, 1, 1, 6), new Range(6, 1, 6, 4)]);\n\t\tassertIsBracket(model, new Position(6, 1), [new Range(6, 1, 6, 4), new Range(1, 1, 1, 6)]);\n\n\t\tdisposables.dispose();\n\t});\n\n\ttest('bracket matching 4', () => {\n\t\tconst text = [\n\t\t\t'recordbegin',\n\t\t\t'  simplerecordbegin',\n\t\t\t'  endrecord',\n\t\t\t'endrecord',\n\t\t].join('\\n');\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst model = createTextModelWithBrackets(disposables, text, [\n\t\t\t['recordbegin', 'endrecord'],\n\t\t\t['simplerecordbegin', 'endrecord'],\n\t\t]);\n\n\t\t// <recordbegin> ... <endrecord> is matched\n\t\tassertIsBracket(model, new Position(1, 1), [new Range(1, 1, 1, 12), new Range(4, 1, 4, 10)]);\n\t\tassertIsBracket(model, new Position(4, 1), [new Range(4, 1, 4, 10), new Range(1, 1, 1, 12)]);\n\n\t\t// <simplerecordbegin> ... <endrecord> is matched\n\t\tassertIsBracket(model, new Position(2, 3), [new Range(2, 3, 2, 20), new Range(3, 3, 3, 12)]);\n\t\tassertIsBracket(model, new Position(3, 3), [new Range(3, 3, 3, 12), new Range(2, 3, 2, 20)]);\n\n\t\tdisposables.dispose();\n\t});\n\n\ttest('issue #95843: Highlighting of closing braces is indicating wrong brace when cursor is behind opening brace', () => {\n\t\tconst disposables = new DisposableStore();\n\t\tconst instantiationService = createModelServices(disposables);\n\t\tconst languageConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\t\tconst languageService = instantiationService.get(ILanguageService);\n\t\tconst mode1 = 'testMode1';\n\t\tconst mode2 = 'testMode2';\n\n\t\tconst languageIdCodec = languageService.languageIdCodec;\n\n\t\tdisposables.add(languageService.registerLanguage({ id: mode1 }));\n\t\tdisposables.add(languageService.registerLanguage({ id: mode2 }));\n\t\tconst encodedMode1 = languageIdCodec!.encodeLanguageId(mode1);\n\t\tconst encodedMode2 = languageIdCodec!.encodeLanguageId(mode2);\n\n\t\tconst otherMetadata1 = (\n\t\t\t(encodedMode1 << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t\t| (StandardTokenType.Other << MetadataConsts.TOKEN_TYPE_OFFSET)\n\t\t\t| (MetadataConsts.BALANCED_BRACKETS_MASK)\n\t\t) >>> 0;\n\t\tconst otherMetadata2 = (\n\t\t\t(encodedMode2 << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t\t| (StandardTokenType.Other << MetadataConsts.TOKEN_TYPE_OFFSET)\n\t\t\t| (MetadataConsts.BALANCED_BRACKETS_MASK)\n\t\t) >>> 0;\n\n\t\tconst tokenizationSupport: ITokenizationSupport = {\n\t\t\tgetInitialState: () => NullState,\n\t\t\ttokenize: undefined!,\n\t\t\ttokenizeEncoded: (line, hasEOL, state) => {\n\t\t\t\tswitch (line) {\n\t\t\t\t\tcase 'function f() {': {\n\t\t\t\t\t\tconst tokens = new Uint32Array([\n\t\t\t\t\t\t\t0, otherMetadata1,\n\t\t\t\t\t\t\t8, otherMetadata1,\n\t\t\t\t\t\t\t9, otherMetadata1,\n\t\t\t\t\t\t\t10, otherMetadata1,\n\t\t\t\t\t\t\t11, otherMetadata1,\n\t\t\t\t\t\t\t12, otherMetadata1,\n\t\t\t\t\t\t\t13, otherMetadata1,\n\t\t\t\t\t\t]);\n\t\t\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t\t\t}\n\t\t\t\t\tcase '  return <p>{true}</p>;': {\n\t\t\t\t\t\tconst tokens = new Uint32Array([\n\t\t\t\t\t\t\t0, otherMetadata1,\n\t\t\t\t\t\t\t2, otherMetadata1,\n\t\t\t\t\t\t\t8, otherMetadata1,\n\t\t\t\t\t\t\t9, otherMetadata2,\n\t\t\t\t\t\t\t10, otherMetadata2,\n\t\t\t\t\t\t\t11, otherMetadata2,\n\t\t\t\t\t\t\t12, otherMetadata2,\n\t\t\t\t\t\t\t13, otherMetadata1,\n\t\t\t\t\t\t\t17, otherMetadata2,\n\t\t\t\t\t\t\t18, otherMetadata2,\n\t\t\t\t\t\t\t20, otherMetadata2,\n\t\t\t\t\t\t\t21, otherMetadata2,\n\t\t\t\t\t\t\t22, otherMetadata2,\n\t\t\t\t\t\t]);\n\t\t\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t\t\t}\n\t\t\t\t\tcase '}': {\n\t\t\t\t\t\tconst tokens = new Uint32Array([\n\t\t\t\t\t\t\t0, otherMetadata1\n\t\t\t\t\t\t]);\n\t\t\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new Error(`Unexpected`);\n\t\t\t}\n\t\t};\n\n\t\tdisposables.add(TokenizationRegistry.register(mode1, tokenizationSupport));\n\t\tdisposables.add(languageConfigurationService.register(mode1, {\n\t\t\tbrackets: [\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']'],\n\t\t\t\t['(', ')']\n\t\t\t],\n\t\t}));\n\t\tdisposables.add(languageConfigurationService.register(mode2, {\n\t\t\tbrackets: [\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']'],\n\t\t\t\t['(', ')']\n\t\t\t],\n\t\t}));\n\n\t\tconst model = disposables.add(instantiateTextModel(\n\t\t\tinstantiationService,\n\t\t\t[\n\t\t\t\t'function f() {',\n\t\t\t\t'  return <p>{true}</p>;',\n\t\t\t\t'}',\n\t\t\t].join('\\n'),\n\t\t\tmode1\n\t\t));\n\n\t\tmodel.tokenization.forceTokenization(1);\n\t\tmodel.tokenization.forceTokenization(2);\n\t\tmodel.tokenization.forceTokenization(3);\n\n\t\tassert.deepStrictEqual(\n\t\t\tmodel.bracketPairs.matchBracket(new Position(2, 14)),\n\t\t\t[new Range(2, 13, 2, 14), new Range(2, 18, 2, 19)]\n\t\t);\n\n\t\tdisposables.dispose();\n\t});\n\n\ttest('issue #88075: TypeScript brace matching is incorrect in `${}` strings', () => {\n\t\tconst disposables = new DisposableStore();\n\t\tconst instantiationService = createModelServices(disposables);\n\t\tconst languageConfigurationService = instantiationService.get(ILanguageConfigurationService);\n\t\tconst mode = 'testMode';\n\n\t\tconst languageIdCodec = instantiationService.get(ILanguageService).languageIdCodec;\n\n\t\tconst encodedMode = languageIdCodec!.encodeLanguageId(mode);\n\n\t\tconst otherMetadata = (\n\t\t\t(encodedMode << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t\t| (StandardTokenType.Other << MetadataConsts.TOKEN_TYPE_OFFSET)\n\t\t) >>> 0;\n\t\tconst stringMetadata = (\n\t\t\t(encodedMode << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t\t| (StandardTokenType.String << MetadataConsts.TOKEN_TYPE_OFFSET)\n\t\t) >>> 0;\n\n\t\tconst tokenizationSupport: ITokenizationSupport = {\n\t\t\tgetInitialState: () => NullState,\n\t\t\ttokenize: undefined!,\n\t\t\ttokenizeEncoded: (line, hasEOL, state) => {\n\t\t\t\tswitch (line) {\n\t\t\t\t\tcase 'function hello() {': {\n\t\t\t\t\t\tconst tokens = new Uint32Array([\n\t\t\t\t\t\t\t0, otherMetadata\n\t\t\t\t\t\t]);\n\t\t\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t\t\t}\n\t\t\t\t\tcase '    console.log(`${100}`);': {\n\t\t\t\t\t\tconst tokens = new Uint32Array([\n\t\t\t\t\t\t\t0, otherMetadata,\n\t\t\t\t\t\t\t16, stringMetadata,\n\t\t\t\t\t\t\t19, otherMetadata,\n\t\t\t\t\t\t\t22, stringMetadata,\n\t\t\t\t\t\t\t24, otherMetadata,\n\t\t\t\t\t\t]);\n\t\t\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t\t\t}\n\t\t\t\t\tcase '}': {\n\t\t\t\t\t\tconst tokens = new Uint32Array([\n\t\t\t\t\t\t\t0, otherMetadata\n\t\t\t\t\t\t]);\n\t\t\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new Error(`Unexpected`);\n\t\t\t}\n\t\t};\n\n\t\tdisposables.add(TokenizationRegistry.register(mode, tokenizationSupport));\n\t\tdisposables.add(languageConfigurationService.register(mode, {\n\t\t\tbrackets: [\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']'],\n\t\t\t\t['(', ')']\n\t\t\t],\n\t\t}));\n\n\t\tconst model = disposables.add(instantiateTextModel(\n\t\t\tinstantiationService,\n\t\t\t[\n\t\t\t\t'function hello() {',\n\t\t\t\t'    console.log(`${100}`);',\n\t\t\t\t'}'\n\t\t\t].join('\\n'),\n\t\t\tmode\n\t\t));\n\n\t\tmodel.tokenization.forceTokenization(1);\n\t\tmodel.tokenization.forceTokenization(2);\n\t\tmodel.tokenization.forceTokenization(3);\n\n\t\tassert.deepStrictEqual(model.bracketPairs.matchBracket(new Position(2, 23)), null);\n\t\tassert.deepStrictEqual(model.bracketPairs.matchBracket(new Position(2, 20)), null);\n\n\t\tdisposables.dispose();\n\t});\n});\n\n\nsuite('TextModelWithTokens regression tests', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('microsoft/monaco-editor#122: Unhandled Exception: TypeError: Unable to get property \\'replace\\' of undefined or null reference', () => {\n\t\tfunction assertViewLineTokens(model: TextModel, lineNumber: number, forceTokenization: boolean, expected: TestLineToken[]): void {\n\t\t\tif (forceTokenization) {\n\t\t\t\tmodel.tokenization.forceTokenization(lineNumber);\n\t\t\t}\n\t\t\tconst _actual = model.tokenization.getLineTokens(lineNumber).inflate();\n\t\t\tinterface ISimpleViewToken {\n\t\t\t\tendIndex: number;\n\t\t\t\tforeground: number;\n\t\t\t}\n\t\t\tconst actual: ISimpleViewToken[] = [];\n\t\t\tfor (let i = 0, len = _actual.getCount(); i < len; i++) {\n\t\t\t\tactual[i] = {\n\t\t\t\t\tendIndex: _actual.getEndOffset(i),\n\t\t\t\t\tforeground: _actual.getForeground(i)\n\t\t\t\t};\n\t\t\t}\n\t\t\tconst decode = (token: TestLineToken) => {\n\t\t\t\treturn {\n\t\t\t\t\tendIndex: token.endIndex,\n\t\t\t\t\tforeground: token.getForeground()\n\t\t\t\t};\n\t\t\t};\n\t\t\tassert.deepStrictEqual(actual, expected.map(decode));\n\t\t}\n\n\t\tlet _tokenId = 10;\n\t\tconst LANG_ID1 = 'indicisiveMode1';\n\t\tconst LANG_ID2 = 'indicisiveMode2';\n\n\t\tconst tokenizationSupport: ITokenizationSupport = {\n\t\t\tgetInitialState: () => NullState,\n\t\t\ttokenize: undefined!,\n\t\t\ttokenizeEncoded: (line, hasEOL, state) => {\n\t\t\t\tconst myId = ++_tokenId;\n\t\t\t\tconst tokens = new Uint32Array(2);\n\t\t\t\ttokens[0] = 0;\n\t\t\t\ttokens[1] = (\n\t\t\t\t\tmyId << MetadataConsts.FOREGROUND_OFFSET\n\t\t\t\t) >>> 0;\n\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t}\n\t\t};\n\n\t\tconst registration1 = TokenizationRegistry.register(LANG_ID1, tokenizationSupport);\n\t\tconst registration2 = TokenizationRegistry.register(LANG_ID2, tokenizationSupport);\n\n\t\tconst model = createTextModel('A model with\\ntwo lines');\n\n\t\tassertViewLineTokens(model, 1, true, [createViewLineToken(12, 1)]);\n\t\tassertViewLineTokens(model, 2, true, [createViewLineToken(9, 1)]);\n\n\t\tmodel.setLanguage(LANG_ID1);\n\n\t\tassertViewLineTokens(model, 1, true, [createViewLineToken(12, 11)]);\n\t\tassertViewLineTokens(model, 2, true, [createViewLineToken(9, 12)]);\n\n\t\tmodel.setLanguage(LANG_ID2);\n\n\t\tassertViewLineTokens(model, 1, false, [createViewLineToken(12, 1)]);\n\t\tassertViewLineTokens(model, 2, false, [createViewLineToken(9, 1)]);\n\n\t\tmodel.dispose();\n\t\tregistration1.dispose();\n\t\tregistration2.dispose();\n\n\t\tfunction createViewLineToken(endIndex: number, foreground: number): TestLineToken {\n\t\t\tconst metadata = (\n\t\t\t\t(foreground << MetadataConsts.FOREGROUND_OFFSET)\n\t\t\t) >>> 0;\n\t\t\treturn new TestLineToken(endIndex, metadata);\n\t\t}\n\t});\n\n\n\ttest('microsoft/monaco-editor#133: Error: Cannot read property \\'modeId\\' of undefined', () => {\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst model = createTextModelWithBrackets(\n\t\t\tdisposables,\n\t\t\t[\n\t\t\t\t'Imports System',\n\t\t\t\t'Imports System.Collections.Generic',\n\t\t\t\t'',\n\t\t\t\t'Module m1',\n\t\t\t\t'',\n\t\t\t\t'\\tSub Main()',\n\t\t\t\t'\\tEnd Sub',\n\t\t\t\t'',\n\t\t\t\t'End Module',\n\t\t\t].join('\\n'),\n\t\t\t[\n\t\t\t\t['module', 'end module'],\n\t\t\t\t['sub', 'end sub']\n\t\t\t]\n\t\t);\n\n\t\tconst actual = model.bracketPairs.matchBracket(new Position(4, 1));\n\t\tassert.deepStrictEqual(actual, [new Range(4, 1, 4, 7), new Range(9, 1, 9, 11)]);\n\n\t\tdisposables.dispose();\n\t});\n\n\ttest('issue #11856: Bracket matching does not work as expected if the opening brace symbol is contained in the closing brace symbol', () => {\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst model = createTextModelWithBrackets(\n\t\t\tdisposables,\n\t\t\t[\n\t\t\t\t'sequence \"outer\"',\n\t\t\t\t'     sequence \"inner\"',\n\t\t\t\t'     endsequence',\n\t\t\t\t'endsequence',\n\t\t\t].join('\\n'),\n\t\t\t[\n\t\t\t\t['sequence', 'endsequence'],\n\t\t\t\t['feature', 'endfeature']\n\t\t\t]\n\t\t);\n\n\t\tconst actual = model.bracketPairs.matchBracket(new Position(3, 9));\n\t\tassert.deepStrictEqual(actual, [new Range(2, 6, 2, 14), new Range(3, 6, 3, 17)]);\n\n\t\tdisposables.dispose();\n\t});\n\n\ttest('issue #63822: Wrong embedded language detected for empty lines', () => {\n\t\tconst disposables = new DisposableStore();\n\t\tconst instantiationService = createModelServices(disposables);\n\t\tconst languageService = instantiationService.get(ILanguageService);\n\n\t\tconst outerMode = 'outerMode';\n\t\tconst innerMode = 'innerMode';\n\n\t\tdisposables.add(languageService.registerLanguage({ id: outerMode }));\n\t\tdisposables.add(languageService.registerLanguage({ id: innerMode }));\n\n\t\tconst languageIdCodec = instantiationService.get(ILanguageService).languageIdCodec;\n\t\tconst encodedInnerMode = languageIdCodec.encodeLanguageId(innerMode);\n\n\t\tconst tokenizationSupport: ITokenizationSupport = {\n\t\t\tgetInitialState: () => NullState,\n\t\t\ttokenize: undefined!,\n\t\t\ttokenizeEncoded: (line, hasEOL, state) => {\n\t\t\t\tconst tokens = new Uint32Array(2);\n\t\t\t\ttokens[0] = 0;\n\t\t\t\ttokens[1] = (\n\t\t\t\t\tencodedInnerMode << MetadataConsts.LANGUAGEID_OFFSET\n\t\t\t\t) >>> 0;\n\t\t\t\treturn new EncodedTokenizationResult(tokens, state);\n\t\t\t}\n\t\t};\n\n\t\tdisposables.add(TokenizationRegistry.register(outerMode, tokenizationSupport));\n\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, 'A model with one line', outerMode));\n\n\t\tmodel.tokenization.forceTokenization(1);\n\t\tassert.strictEqual(model.getLanguageIdAtPosition(1, 1), innerMode);\n\n\t\tdisposables.dispose();\n\t});\n});\n\nsuite('TextModel.getLineIndentGuide', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction assertIndentGuides(lines: [number, number, number, number, string][], indentSize: number): void {\n\t\tconst languageId = 'testLang';\n\t\tconst disposables = new DisposableStore();\n\t\tconst instantiationService = createModelServices(disposables);\n\t\tconst languageService = instantiationService.get(ILanguageService);\n\t\tdisposables.add(languageService.registerLanguage({ id: languageId }));\n\n\t\tconst text = lines.map(l => l[4]).join('\\n');\n\t\tconst model = disposables.add(instantiateTextModel(instantiationService, text, languageId));\n\t\tmodel.updateOptions({ indentSize: indentSize });\n\n\t\tconst actualIndents = model.guides.getLinesIndentGuides(1, model.getLineCount());\n\n\t\tconst actual: [number, number, number, number, string][] = [];\n\t\tfor (let line = 1; line <= model.getLineCount(); line++) {\n\t\t\tconst activeIndentGuide = model.guides.getActiveIndentGuide(line, 1, model.getLineCount());\n\t\t\tactual[line - 1] = [actualIndents[line - 1], activeIndentGuide.startLineNumber, activeIndentGuide.endLineNumber, activeIndentGuide.indent, model.getLineContent(line)];\n\t\t}\n\n\t\tassert.deepStrictEqual(actual, lines);\n\n\t\tdisposables.dispose();\n\t}\n\n\ttest('getLineIndentGuide one level 2', () => {\n\t\tassertIndentGuides([\n\t\t\t[0, 2, 4, 1, 'A'],\n\t\t\t[1, 2, 4, 1, '  A'],\n\t\t\t[1, 2, 4, 1, '  A'],\n\t\t\t[1, 2, 4, 1, '  A'],\n\t\t], 2);\n\t});\n\n\ttest('getLineIndentGuide two levels', () => {\n\t\tassertIndentGuides([\n\t\t\t[0, 2, 5, 1, 'A'],\n\t\t\t[1, 2, 5, 1, '  A'],\n\t\t\t[1, 4, 5, 2, '  A'],\n\t\t\t[2, 4, 5, 2, '    A'],\n\t\t\t[2, 4, 5, 2, '    A'],\n\t\t], 2);\n\t});\n\n\ttest('getLineIndentGuide three levels', () => {\n\t\tassertIndentGuides([\n\t\t\t[0, 2, 4, 1, 'A'],\n\t\t\t[1, 3, 4, 2, '  A'],\n\t\t\t[2, 4, 4, 3, '    A'],\n\t\t\t[3, 4, 4, 3, '      A'],\n\t\t\t[0, 5, 5, 0, 'A'],\n\t\t], 2);\n\t});\n\n\ttest('getLineIndentGuide decreasing indent', () => {\n\t\tassertIndentGuides([\n\t\t\t[2, 1, 1, 2, '    A'],\n\t\t\t[1, 1, 1, 2, '  A'],\n\t\t\t[0, 1, 2, 1, 'A'],\n\t\t], 2);\n\t});\n\n\ttest('getLineIndentGuide Java', () => {\n\t\tassertIndentGuides([\n\t\t\t/* 1*/[0, 2, 9, 1, 'class A {'],\n\t\t\t/* 2*/[1, 3, 4, 2, '  void foo() {'],\n\t\t\t/* 3*/[2, 3, 4, 2, '    console.log(1);'],\n\t\t\t/* 4*/[2, 3, 4, 2, '    console.log(2);'],\n\t\t\t/* 5*/[1, 3, 4, 2, '  }'],\n\t\t\t/* 6*/[1, 2, 9, 1, ''],\n\t\t\t/* 7*/[1, 8, 8, 2, '  void bar() {'],\n\t\t\t/* 8*/[2, 8, 8, 2, '    console.log(3);'],\n\t\t\t/* 9*/[1, 8, 8, 2, '  }'],\n\t\t\t/*10*/[0, 2, 9, 1, '}'],\n\t\t\t/*11*/[0, 12, 12, 1, 'interface B {'],\n\t\t\t/*12*/[1, 12, 12, 1, '  void bar();'],\n\t\t\t/*13*/[0, 12, 12, 1, '}'],\n\t\t], 2);\n\t});\n\n\ttest('getLineIndentGuide Javadoc', () => {\n\t\tassertIndentGuides([\n\t\t\t[0, 2, 3, 1, '/**'],\n\t\t\t[1, 2, 3, 1, ' * Comment'],\n\t\t\t[1, 2, 3, 1, ' */'],\n\t\t\t[0, 5, 6, 1, 'class A {'],\n\t\t\t[1, 5, 6, 1, '  void foo() {'],\n\t\t\t[1, 5, 6, 1, '  }'],\n\t\t\t[0, 5, 6, 1, '}'],\n\t\t], 2);\n\t});\n\n\ttest('getLineIndentGuide Whitespace', () => {\n\t\tassertIndentGuides([\n\t\t\t[0, 2, 7, 1, 'class A {'],\n\t\t\t[1, 2, 7, 1, ''],\n\t\t\t[1, 4, 5, 2, '  void foo() {'],\n\t\t\t[2, 4, 5, 2, '    '],\n\t\t\t[2, 4, 5, 2, '    return 1;'],\n\t\t\t[1, 4, 5, 2, '  }'],\n\t\t\t[1, 2, 7, 1, '      '],\n\t\t\t[0, 2, 7, 1, '}']\n\t\t], 2);\n\t});\n\n\ttest('getLineIndentGuide Tabs', () => {\n\t\tassertIndentGuides([\n\t\t\t[0, 2, 7, 1, 'class A {'],\n\t\t\t[1, 2, 7, 1, '\\t\\t'],\n\t\t\t[1, 4, 5, 2, '\\tvoid foo() {'],\n\t\t\t[2, 4, 5, 2, '\\t \\t//hello'],\n\t\t\t[2, 4, 5, 2, '\\t    return 2;'],\n\t\t\t[1, 4, 5, 2, '  \\t}'],\n\t\t\t[1, 2, 7, 1, '      '],\n\t\t\t[0, 2, 7, 1, '}']\n\t\t], 4);\n\t});\n\n\ttest('getLineIndentGuide checker.ts', () => {\n\t\tassertIndentGuides([\n\t\t\t/* 1*/[0, 1, 1, 0, '/// <reference path=\"binder.ts\"/>'],\n\t\t\t/* 2*/[0, 2, 2, 0, ''],\n\t\t\t/* 3*/[0, 3, 3, 0, '/* @internal */'],\n\t\t\t/* 4*/[0, 5, 16, 1, 'namespace ts {'],\n\t\t\t/* 5*/[1, 5, 16, 1, '    let nextSymbolId = 1;'],\n\t\t\t/* 6*/[1, 5, 16, 1, '    let nextNodeId = 1;'],\n\t\t\t/* 7*/[1, 5, 16, 1, '    let nextMergeId = 1;'],\n\t\t\t/* 8*/[1, 5, 16, 1, '    let nextFlowId = 1;'],\n\t\t\t/* 9*/[1, 5, 16, 1, ''],\n\t\t\t/*10*/[1, 11, 15, 2, '    export function getNodeId(node: Node): number {'],\n\t\t\t/*11*/[2, 12, 13, 3, '        if (!node.id) {'],\n\t\t\t/*12*/[3, 12, 13, 3, '            node.id = nextNodeId;'],\n\t\t\t/*13*/[3, 12, 13, 3, '            nextNodeId++;'],\n\t\t\t/*14*/[2, 12, 13, 3, '        }'],\n\t\t\t/*15*/[2, 11, 15, 2, '        return node.id;'],\n\t\t\t/*16*/[1, 11, 15, 2, '    }'],\n\t\t\t/*17*/[0, 5, 16, 1, '}']\n\t\t], 4);\n\t});\n\n\ttest('issue #8425 - Missing indentation lines for first level indentation', () => {\n\t\tassertIndentGuides([\n\t\t\t[1, 2, 3, 2, '\\tindent1'],\n\t\t\t[2, 2, 3, 2, '\\t\\tindent2'],\n\t\t\t[2, 2, 3, 2, '\\t\\tindent2'],\n\t\t\t[1, 2, 3, 2, '\\tindent1']\n\t\t], 4);\n\t});\n\n\ttest('issue #8952 - Indentation guide lines going through text on .yml file', () => {\n\t\tassertIndentGuides([\n\t\t\t[0, 2, 5, 1, 'properties:'],\n\t\t\t[1, 3, 5, 2, '    emailAddress:'],\n\t\t\t[2, 3, 5, 2, '        - bla'],\n\t\t\t[2, 5, 5, 3, '        - length:'],\n\t\t\t[3, 5, 5, 3, '            max: 255'],\n\t\t\t[0, 6, 6, 0, 'getters:']\n\t\t], 4);\n\t});\n\n\ttest('issue #11892 - Indent guides look funny', () => {\n\t\tassertIndentGuides([\n\t\t\t[0, 2, 7, 1, 'function test(base) {'],\n\t\t\t[1, 3, 6, 2, '\\tswitch (base) {'],\n\t\t\t[2, 4, 4, 3, '\\t\\tcase 1:'],\n\t\t\t[3, 4, 4, 3, '\\t\\t\\treturn 1;'],\n\t\t\t[2, 6, 6, 3, '\\t\\tcase 2:'],\n\t\t\t[3, 6, 6, 3, '\\t\\t\\treturn 2;'],\n\t\t\t[1, 2, 7, 1, '\\t}'],\n\t\t\t[0, 2, 7, 1, '}']\n\t\t], 4);\n\t});\n\n\ttest('issue #12398 - Problem in indent guidelines', () => {\n\t\tassertIndentGuides([\n\t\t\t[2, 2, 2, 3, '\\t\\t.bla'],\n\t\t\t[3, 2, 2, 3, '\\t\\t\\tlabel(for)'],\n\t\t\t[0, 3, 3, 0, 'include script']\n\t\t], 4);\n\t});\n\n\ttest('issue #49173', () => {\n\t\tconst model = createTextModel([\n\t\t\t'class A {',\n\t\t\t'\tpublic m1(): void {',\n\t\t\t'\t}',\n\t\t\t'\tpublic m2(): void {',\n\t\t\t'\t}',\n\t\t\t'\tpublic m3(): void {',\n\t\t\t'\t}',\n\t\t\t'\tpublic m4(): void {',\n\t\t\t'\t}',\n\t\t\t'\tpublic m5(): void {',\n\t\t\t'\t}',\n\t\t\t'}',\n\t\t].join('\\n'));\n\n\t\tconst actual = model.guides.getActiveIndentGuide(2, 4, 9);\n\t\tassert.deepStrictEqual(actual, { startLineNumber: 2, endLineNumber: 9, indent: 1 });\n\t\tmodel.dispose();\n\t});\n\n\ttest('tweaks - no active', () => {\n\t\tassertIndentGuides([\n\t\t\t[0, 1, 1, 0, 'A'],\n\t\t\t[0, 2, 2, 0, 'A']\n\t\t], 2);\n\t});\n\n\ttest('tweaks - inside scope', () => {\n\t\tassertIndentGuides([\n\t\t\t[0, 2, 2, 1, 'A'],\n\t\t\t[1, 2, 2, 1, '  A']\n\t\t], 2);\n\t});\n\n\ttest('tweaks - scope start', () => {\n\t\tassertIndentGuides([\n\t\t\t[0, 2, 2, 1, 'A'],\n\t\t\t[1, 2, 2, 1, '  A'],\n\t\t\t[0, 2, 2, 1, 'A']\n\t\t], 2);\n\t});\n\n\ttest('tweaks - empty line', () => {\n\t\tassertIndentGuides([\n\t\t\t[0, 2, 4, 1, 'A'],\n\t\t\t[1, 2, 4, 1, '  A'],\n\t\t\t[1, 2, 4, 1, ''],\n\t\t\t[1, 2, 4, 1, '  A'],\n\t\t\t[0, 2, 4, 1, 'A']\n\t\t], 2);\n\t});\n});\n"]}