{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/common/model/modelInjectedText.test.ts"],"names":[],"mappings":"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","file":"modelInjectedText.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Range } from 'vs/editor/common/core/range';\nimport { InternalModelContentChangeEvent, LineInjectedText, ModelRawChange, RawContentChangedType } from 'vs/editor/common/textModelEvents';\nimport { createTextModel } from 'vs/editor/test/common/testTextModel';\n\nsuite('Editor Model - Injected Text Events', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Basic', () => {\n\t\tconst thisModel = store.add(createTextModel('First Line\\nSecond Line'));\n\n\t\tconst recordedChanges = new Array<unknown>();\n\n\t\tstore.add(thisModel.onDidChangeContentOrInjectedText((e) => {\n\t\t\tconst changes = (e instanceof InternalModelContentChangeEvent ? e.rawContentChangedEvent.changes : e.changes);\n\t\t\tfor (const change of changes) {\n\t\t\t\trecordedChanges.push(mapChange(change));\n\t\t\t}\n\t\t}));\n\n\t\t// Initial decoration\n\t\tlet decorations = thisModel.deltaDecorations([], [{\n\t\t\toptions: {\n\t\t\t\tafter: { content: 'injected1' },\n\t\t\t\tdescription: 'test1',\n\t\t\t\tshowIfCollapsed: true\n\t\t\t},\n\t\t\trange: new Range(1, 1, 1, 1),\n\t\t}]);\n\t\tassert.deepStrictEqual(recordedChanges.splice(0), [\n\t\t\t{\n\t\t\t\tkind: 'lineChanged',\n\t\t\t\tline: '[injected1]First Line',\n\t\t\t\tlineNumber: 1,\n\t\t\t}\n\t\t]);\n\n\t\t// Decoration change\n\t\tdecorations = thisModel.deltaDecorations(decorations, [{\n\t\t\toptions: {\n\t\t\t\tafter: { content: 'injected1' },\n\t\t\t\tdescription: 'test1',\n\t\t\t\tshowIfCollapsed: true\n\t\t\t},\n\t\t\trange: new Range(2, 1, 2, 1),\n\t\t}, {\n\t\t\toptions: {\n\t\t\t\tafter: { content: 'injected2' },\n\t\t\t\tdescription: 'test2',\n\t\t\t\tshowIfCollapsed: true\n\t\t\t},\n\t\t\trange: new Range(2, 2, 2, 2),\n\t\t}]);\n\t\tassert.deepStrictEqual(recordedChanges.splice(0), [\n\t\t\t{\n\t\t\t\tkind: 'lineChanged',\n\t\t\t\tline: 'First Line',\n\t\t\t\tlineNumber: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkind: 'lineChanged',\n\t\t\t\tline: '[injected1]S[injected2]econd Line',\n\t\t\t\tlineNumber: 2,\n\t\t\t}\n\t\t]);\n\n\t\t// Simple Insert\n\t\tthisModel.applyEdits([EditOperation.replace(new Range(2, 2, 2, 2), 'Hello')]);\n\t\tassert.deepStrictEqual(recordedChanges.splice(0), [\n\t\t\t{\n\t\t\t\tkind: 'lineChanged',\n\t\t\t\tline: '[injected1]SHello[injected2]econd Line',\n\t\t\t\tlineNumber: 2,\n\t\t\t}\n\t\t]);\n\n\t\t// Multi-Line Insert\n\t\tthisModel.pushEditOperations(null, [EditOperation.replace(new Range(2, 2, 2, 2), '\\n\\n\\n')], null);\n\t\tassert.deepStrictEqual(thisModel.getAllDecorations(undefined).map(d => ({ description: d.options.description, range: d.range.toString() })), [{\n\t\t\t'description': 'test1',\n\t\t\t'range': '[2,1 -> 2,1]'\n\t\t},\n\t\t{\n\t\t\t'description': 'test2',\n\t\t\t'range': '[2,2 -> 5,6]'\n\t\t}]);\n\t\tassert.deepStrictEqual(recordedChanges.splice(0), [\n\t\t\t{\n\t\t\t\tkind: 'lineChanged',\n\t\t\t\tline: '[injected1]S',\n\t\t\t\tlineNumber: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfromLineNumber: 3,\n\t\t\t\tkind: 'linesInserted',\n\t\t\t\tlines: [\n\t\t\t\t\t'',\n\t\t\t\t\t'',\n\t\t\t\t\t'Hello[injected2]econd Line',\n\t\t\t\t]\n\t\t\t}\n\t\t]);\n\n\n\t\t// Multi-Line Replace\n\t\tthisModel.pushEditOperations(null, [EditOperation.replace(new Range(3, 1, 5, 1), '\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n')], null);\n\t\tassert.deepStrictEqual(recordedChanges.splice(0), [\n\t\t\t{\n\t\t\t\t'kind': 'lineChanged',\n\t\t\t\t'line': '',\n\t\t\t\t'lineNumber': 5,\n\t\t\t},\n\t\t\t{\n\t\t\t\t'kind': 'lineChanged',\n\t\t\t\t'line': '',\n\t\t\t\t'lineNumber': 4,\n\t\t\t},\n\t\t\t{\n\t\t\t\t'kind': 'lineChanged',\n\t\t\t\t'line': '',\n\t\t\t\t'lineNumber': 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\t'fromLineNumber': 6,\n\t\t\t\t'kind': 'linesInserted',\n\t\t\t\t'lines': [\n\t\t\t\t\t'',\n\t\t\t\t\t'',\n\t\t\t\t\t'',\n\t\t\t\t\t'',\n\t\t\t\t\t'',\n\t\t\t\t\t'',\n\t\t\t\t\t'',\n\t\t\t\t\t'',\n\t\t\t\t\t'',\n\t\t\t\t\t'',\n\t\t\t\t\t'Hello[injected2]econd Line',\n\t\t\t\t]\n\t\t\t}\n\t\t]);\n\n\t\t// Multi-Line Replace undo\n\t\tassert.strictEqual(thisModel.undo(), undefined);\n\t\tassert.deepStrictEqual(recordedChanges.splice(0), [\n\t\t\t{\n\t\t\t\tkind: 'lineChanged',\n\t\t\t\tline: '[injected1]SHello[injected2]econd Line',\n\t\t\t\tlineNumber: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkind: 'linesDeleted',\n\t\t\t}\n\t\t]);\n\t});\n});\n\nfunction mapChange(change: ModelRawChange): unknown {\n\tif (change.changeType === RawContentChangedType.LineChanged) {\n\t\t(change.injectedText || []).every(e => {\n\t\t\tassert.deepStrictEqual(e.lineNumber, change.lineNumber);\n\t\t});\n\n\t\treturn {\n\t\t\tkind: 'lineChanged',\n\t\t\tline: getDetail(change.detail, change.injectedText),\n\t\t\tlineNumber: change.lineNumber,\n\t\t};\n\t} else if (change.changeType === RawContentChangedType.LinesInserted) {\n\t\treturn {\n\t\t\tkind: 'linesInserted',\n\t\t\tlines: change.detail.map((e, idx) => getDetail(e, change.injectedTexts[idx])),\n\t\t\tfromLineNumber: change.fromLineNumber\n\t\t};\n\t} else if (change.changeType === RawContentChangedType.LinesDeleted) {\n\t\treturn {\n\t\t\tkind: 'linesDeleted',\n\t\t};\n\t} else if (change.changeType === RawContentChangedType.EOLChanged) {\n\t\treturn {\n\t\t\tkind: 'eolChanged'\n\t\t};\n\t} else if (change.changeType === RawContentChangedType.Flush) {\n\t\treturn {\n\t\t\tkind: 'flush'\n\t\t};\n\t}\n\treturn { kind: 'unknown' };\n}\n\nfunction getDetail(line: string, injectedTexts: LineInjectedText[] | null): string {\n\treturn LineInjectedText.applyInjectedText(line, (injectedTexts || []).map(t => t.withText(`[${t.options.content}]`)));\n}\n"]}