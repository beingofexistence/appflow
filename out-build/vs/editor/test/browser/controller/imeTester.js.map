{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/browser/controller/imeTester.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAWhG,wCAAwC;IAExC,MAAM,mBAAmB;QAIxB,YAAY,IAAY;YACvB,IAAI,CAAC,CAAC,GAAO,IAAI,CAAC;QACnB,CAAC;QAED,QAAQ,CAAC,IAAY;YACpB,IAAI,CAAC,CAAC,GAAO,IAAI,CAAC;QACnB,CAAC;QAED,gBAAgB,CAAC,UAAkB;YAClC,OAAO,IAAI,CAAC,CAAC,CAAK,MAAM,GAAG,CAAC,CAAC;QAC9B,CAAC;QAED,eAAe,CAAC,KAAa,EAAE,GAAwB;YACtD,OAAO,IAAI,CAAC,CAAC,CAAK,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,EAAE,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACzE,CAAC;QAED,qBAAqB,CAAC,KAAU,EAAI,GAAwB;YAC3D,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;QAChD,CAAC;QAED,cAAc,CAAC,QAAa,EAAO,MAAc;YAChD,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;YAC3G,OAAO,IAAI,cAAG,CAAM,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAClD,CAAC;QAED,mBAAmB,CAAC,UAAkB;YACrC,OAAO,IAAI,CAAC,CAAC,CAAK;QACnB,CAAC;QAED,YAAY;YACX,OAAO,CAAC,CAAC;QACV,CAAC;KACD;IAED,MAAM,QAAQ;QAIb,YAAY,KAA0B;YACrC,IAAI,CAAC,CAAC,GAAQ,KAAK,CAAC;QACrB,CAAC;QAEM,KAAK,CAAC,MAAmB;YAC/B,GAAG,CAAC,GAAG,CAAO,MAAM,CAAC,CAAC;YACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAM,YAAY,EAAE,EAAE,CAAC,EAAE,EAAE;gBACrD,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAM,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7E,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC7B,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBACxC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;aACvB;QACF,CAAC;KACD;IAED,SAAS,YAAY,CAAC,WAAmB,EAAE,QAAgB,EAAE,WAAmB;QAC/E,IAAI,YAAY,GAAW,CAAC,CAAC;QAC7B,IAAI,YAAY,GAAW,CAAC,CAAC;QAE7B,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,SAAS,CAAC,SAAS,GAAG,WAAW,CAAC;QAElC,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5C,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC;QAE1B,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACxD,cAAc,CAAC,SAAS,GAAG,QAAQ,CAAC;QAEpC,KAAK,CAAC,SAAS,GAAG,WAAW,GAAG,SAAS,CAAC;QAC1C,KAAK,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAElC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAE7B,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAClD,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC;QAC7B,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAGhC,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACjD,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACjC,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACjC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAE7B,MAAM,KAAK,GAAG,IAAI,mBAAmB,CAAC,YAAY,CAAC,CAAC;QAEpD,MAAM,iBAAiB,GAAuB;YAC7C,aAAa,EAAE,GAAG,EAAE;gBACnB,OAAO;oBACN,oBAAoB,EAAE,KAAK;oBAC3B,eAAe,EAAE,IAAI;oBACrB,IAAI,EAAE,EAAE;oBACR,IAAI,EAAE,SAAS;oBACf,IAAI,EAAE,IAAI;iBACV,CAAC;YACH,CAAC;YACD,sBAAsB,EAAE,GAAkB,EAAE;gBAC3C,MAAM,SAAS,GAAG,IAAI,WAAG,CAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,CAAC,GAAG,YAAY,GAAG,YAAY,CAAC,CAAC;gBAErF,OAAO,mBAAG,CAAuB,mBAAmB,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YAClF,CAAC;YACD,mBAAmB,EAAE,CAAC,kBAAuB,EAAO,WAAmB,EAAE,WAAmB,EAAY,EAAE;gBACzG,OAAO,IAAK,CAAC;YACd,CAAC;SACD,CAAC;QAEF,MAAM,OAAO,GAAG,IAAI,mBAAG,CAAW,iBAAiB,EAAE,IAAI,mBAAG,CAAa,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,EAAE;YAC7F,SAAS,EAAE,OAAO,CAAC,GAAG;YACtB,SAAS,EAAE,OAAO,CAAC,GAAG;YACtB,QAAQ,EAAE,OAAO,CAAC,GAAG;YACrB,QAAQ,EAAE,OAAO,CAAC,GAAG;SACrB,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC5B,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAE9B,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5C,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC;QAC1B,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAE7B,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxC,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;QACxB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAE1B,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEjC,MAAM,cAAc,GAAG,CAAC,GAAW,EAAE,GAAW,EAAE,EAAE;YACnD,YAAY,GAAG,GAAG,CAAC;YACnB,YAAY,GAAG,GAAG,CAAC;YACnB,OAAO,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC;YACtD,OAAO,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,CAAC;QAEF,MAAM,sBAAsB,GAAG,CAAC,IAAY,EAAE,GAAW,EAAE,GAAW,EAAE,EAAE;YACzE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACrB,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAEnB,MAAM,QAAQ,GAAG,OAAO,GAAG,WAAW,GAAG,OAAO,CAAC;YACjD,IAAI,IAAI,KAAK,QAAQ,EAAE;gBACtB,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC3B,KAAK,CAAC,SAAS,GAAG,YAAY,CAAC;aAC/B;iBAAM;gBACN,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC;gBAC1B,KAAK,CAAC,SAAS,GAAG,WAAW,CAAC;aAC9B;YACD,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC;QAEF,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;YACpB,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,GAAG,oBAAoB,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC;YAClF,MAAM,IAAI,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,YAAY,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC;YACvE,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,YAAY,CAAC,CAAC;YAC7D,MAAM,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC;YAEvB,sBAAsB,CAAC,OAAO,GAAG,OAAO,GAAG,QAAQ,EAAE,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAEnB,QAAQ,CAAC,OAAO,GAAG;YAClB,sBAAsB,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,KAAK,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC;QAEF,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,MAAM,KAAK,GAAG;QACb,EAAE,WAAW,EAAE,gBAAgB,EAAE,EAAE,EAAE,iBAAiB,EAAE,GAAG,EAAE,MAAM,EAAE;QACrE,EAAE,WAAW,EAAE,gBAAgB,EAAE,EAAE,EAAE,oBAAoB,EAAE,GAAG,EAAE,OAAO,EAAE;QACzE,EAAE,WAAW,EAAE,gBAAgB,EAAE,EAAE,EAAE,gBAAgB,EAAE,GAAG,EAAE,KAAK,EAAE;QACnE,EAAE,WAAW,EAAE,cAAc,EAAE,EAAE,EAAE,gBAAgB,EAAE,GAAG,EAAE,KAAK,EAAE;QACjE,EAAE,WAAW,EAAE,eAAe,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;QACrD,EAAE,WAAW,EAAE,eAAe,EAAE,EAAE,EAAE,wBAAwB,EAAE,GAAG,EAAE,IAAI,EAAE;QACzE,EAAE,WAAW,EAAE,eAAe,EAAE,EAAE,EAAE,eAAe,EAAE,GAAG,EAAE,KAAK,EAAE;QACjE,EAAE,WAAW,EAAE,gBAAgB,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;QACtD,EAAE,WAAW,EAAE,gBAAgB,EAAE,EAAE,EAAE,oBAAoB,EAAE,GAAG,EAAE,GAAG,EAAE;KACrE,CAAC;IAEF,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;QACnB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC","file":"imeTester.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITextAreaInputHost, TextAreaInput, TextAreaWrapper } from 'vs/editor/browser/controller/textAreaInput';\nimport { ISimpleModel, PagedScreenReaderStrategy, TextAreaState } from 'vs/editor/browser/controller/textAreaState';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { EndOfLinePreference } from 'vs/editor/common/model';\nimport * as dom from 'vs/base/browser/dom';\nimport * as browser from 'vs/base/browser/browser';\nimport * as platform from 'vs/base/common/platform';\n\n// To run this test, open imeTester.html\n\nclass SingleLineTestModel implements ISimpleModel {\n\n\tprivate _line: string;\n\n\tconstructor(line: string) {\n\t\tthis._line = line;\n\t}\n\n\t_setText(text: string) {\n\t\tthis._line = text;\n\t}\n\n\tgetLineMaxColumn(lineNumber: number): number {\n\t\treturn this._line.length + 1;\n\t}\n\n\tgetValueInRange(range: IRange, eol: EndOfLinePreference): string {\n\t\treturn this._line.substring(range.startColumn - 1, range.endColumn - 1);\n\t}\n\n\tgetValueLengthInRange(range: Range, eol: EndOfLinePreference): number {\n\t\treturn this.getValueInRange(range, eol).length;\n\t}\n\n\tmodifyPosition(position: Position, offset: number): Position {\n\t\tconst column = Math.min(this.getLineMaxColumn(position.lineNumber), Math.max(1, position.column + offset));\n\t\treturn new Position(position.lineNumber, column);\n\t}\n\n\tgetModelLineContent(lineNumber: number): string {\n\t\treturn this._line;\n\t}\n\n\tgetLineCount(): number {\n\t\treturn 1;\n\t}\n}\n\nclass TestView {\n\n\tprivate readonly _model: SingleLineTestModel;\n\n\tconstructor(model: SingleLineTestModel) {\n\t\tthis._model = model;\n\t}\n\n\tpublic paint(output: HTMLElement) {\n\t\tdom.clearNode(output);\n\t\tfor (let i = 1; i <= this._model.getLineCount(); i++) {\n\t\t\tconst textNode = document.createTextNode(this._model.getModelLineContent(i));\n\t\t\toutput.appendChild(textNode);\n\t\t\tconst br = document.createElement('br');\n\t\t\toutput.appendChild(br);\n\t\t}\n\t}\n}\n\nfunction doCreateTest(description: string, inputStr: string, expectedStr: string): HTMLElement {\n\tlet cursorOffset: number = 0;\n\tlet cursorLength: number = 0;\n\n\tconst container = document.createElement('div');\n\tcontainer.className = 'container';\n\n\tconst title = document.createElement('div');\n\ttitle.className = 'title';\n\n\tconst inputStrStrong = document.createElement('strong');\n\tinputStrStrong.innerText = inputStr;\n\n\ttitle.innerText = description + '. Type ';\n\ttitle.appendChild(inputStrStrong);\n\n\tcontainer.appendChild(title);\n\n\tconst startBtn = document.createElement('button');\n\tstartBtn.innerText = 'Start';\n\tcontainer.appendChild(startBtn);\n\n\n\tconst input = document.createElement('textarea');\n\tinput.setAttribute('rows', '10');\n\tinput.setAttribute('cols', '40');\n\tcontainer.appendChild(input);\n\n\tconst model = new SingleLineTestModel('some  text');\n\n\tconst textAreaInputHost: ITextAreaInputHost = {\n\t\tgetDataToCopy: () => {\n\t\t\treturn {\n\t\t\t\tisFromEmptySelection: false,\n\t\t\t\tmulticursorText: null,\n\t\t\t\ttext: '',\n\t\t\t\thtml: undefined,\n\t\t\t\tmode: null\n\t\t\t};\n\t\t},\n\t\tgetScreenReaderContent: (): TextAreaState => {\n\t\t\tconst selection = new Range(1, 1 + cursorOffset, 1, 1 + cursorOffset + cursorLength);\n\n\t\t\treturn PagedScreenReaderStrategy.fromEditorSelection(model, selection, 10, true);\n\t\t},\n\t\tdeduceModelPosition: (viewAnchorPosition: Position, deltaOffset: number, lineFeedCnt: number): Position => {\n\t\t\treturn null!;\n\t\t}\n\t};\n\n\tconst handler = new TextAreaInput(textAreaInputHost, new TextAreaWrapper(input), platform.OS, {\n\t\tisAndroid: browser.isAndroid,\n\t\tisFirefox: browser.isFirefox,\n\t\tisChrome: browser.isChrome,\n\t\tisSafari: browser.isSafari,\n\t});\n\n\tconst output = document.createElement('pre');\n\toutput.className = 'output';\n\tcontainer.appendChild(output);\n\n\tconst check = document.createElement('pre');\n\tcheck.className = 'check';\n\tcontainer.appendChild(check);\n\n\tconst br = document.createElement('br');\n\tbr.style.clear = 'both';\n\tcontainer.appendChild(br);\n\n\tconst view = new TestView(model);\n\n\tconst updatePosition = (off: number, len: number) => {\n\t\tcursorOffset = off;\n\t\tcursorLength = len;\n\t\thandler.writeScreenReaderContent('selection changed');\n\t\thandler.focusTextArea();\n\t};\n\n\tconst updateModelAndPosition = (text: string, off: number, len: number) => {\n\t\tmodel._setText(text);\n\t\tupdatePosition(off, len);\n\t\tview.paint(output);\n\n\t\tconst expected = 'some ' + expectedStr + ' text';\n\t\tif (text === expected) {\n\t\t\tcheck.innerText = '[GOOD]';\n\t\t\tcheck.className = 'check good';\n\t\t} else {\n\t\t\tcheck.innerText = '[BAD]';\n\t\t\tcheck.className = 'check bad';\n\t\t}\n\t\tcheck.appendChild(document.createTextNode(expected));\n\t};\n\n\thandler.onType((e) => {\n\t\tconsole.log('type text: ' + e.text + ', replaceCharCnt: ' + e.replacePrevCharCnt);\n\t\tconst text = model.getModelLineContent(1);\n\t\tconst preText = text.substring(0, cursorOffset - e.replacePrevCharCnt);\n\t\tconst postText = text.substring(cursorOffset + cursorLength);\n\t\tconst midText = e.text;\n\n\t\tupdateModelAndPosition(preText + midText + postText, (preText + midText).length, 0);\n\t});\n\n\tview.paint(output);\n\n\tstartBtn.onclick = function () {\n\t\tupdateModelAndPosition('some  text', 5, 0);\n\t\tinput.focus();\n\t};\n\n\treturn container;\n}\n\nconst TESTS = [\n\t{ description: 'Japanese IME 1', in: 'sennsei [Enter]', out: 'せんせい' },\n\t{ description: 'Japanese IME 2', in: 'konnichiha [Enter]', out: 'こんいちは' },\n\t{ description: 'Japanese IME 3', in: 'mikann [Enter]', out: 'みかん' },\n\t{ description: 'Korean IME 1', in: 'gksrmf [Space]', out: '한글 ' },\n\t{ description: 'Chinese IME 1', in: '.,', out: '。，' },\n\t{ description: 'Chinese IME 2', in: 'ni [Space] hao [Space]', out: '你好' },\n\t{ description: 'Chinese IME 3', in: 'hazni [Space]', out: '哈祝你' },\n\t{ description: 'Mac dead key 1', in: '`.', out: '`.' },\n\t{ description: 'Mac hold key 1', in: 'e long press and 1', out: 'é' }\n];\n\nTESTS.forEach((t) => {\n\tdocument.body.appendChild(doCreateTest(t.description, t.in, t.out));\n});\n"]}