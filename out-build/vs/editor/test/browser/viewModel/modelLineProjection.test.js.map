{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/browser/viewModel/modelLineProjection.test.ts"],"names":[],"mappings":"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","file":"modelLineProjection.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { MetadataConsts } from 'vs/editor/common/encodedTokenAttributes';\nimport * as languages from 'vs/editor/common/languages';\nimport { NullState } from 'vs/editor/common/languages/nullTokenize';\nimport { EndOfLinePreference } from 'vs/editor/common/model';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { ModelLineProjectionData } from 'vs/editor/common/modelLineProjectionData';\nimport { IViewLineTokens } from 'vs/editor/common/tokens/lineTokens';\nimport { ViewLineData } from 'vs/editor/common/viewModel';\nimport { IModelLineProjection, ISimpleModel, createModelLineProjection } from 'vs/editor/common/viewModel/modelLineProjection';\nimport { MonospaceLineBreaksComputerFactory } from 'vs/editor/common/viewModel/monospaceLineBreaksComputer';\nimport { ViewModelLinesFromProjectedModel } from 'vs/editor/common/viewModel/viewModelLines';\nimport { TestConfiguration } from 'vs/editor/test/browser/config/testConfiguration';\nimport { createTextModel } from 'vs/editor/test/common/testTextModel';\n\nsuite('Editor ViewModel - SplitLinesCollection', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('SplitLine', () => {\n\t\tlet model1 = createModel('My First LineMy Second LineAnd another one');\n\t\tlet line1 = createSplitLine([13, 14, 15], [13, 13 + 14, 13 + 14 + 15], 0);\n\n\t\tassert.strictEqual(line1.getViewLineCount(), 3);\n\t\tassert.strictEqual(line1.getViewLineContent(model1, 1, 0), 'My First Line');\n\t\tassert.strictEqual(line1.getViewLineContent(model1, 1, 1), 'My Second Line');\n\t\tassert.strictEqual(line1.getViewLineContent(model1, 1, 2), 'And another one');\n\t\tassert.strictEqual(line1.getViewLineMaxColumn(model1, 1, 0), 14);\n\t\tassert.strictEqual(line1.getViewLineMaxColumn(model1, 1, 1), 15);\n\t\tassert.strictEqual(line1.getViewLineMaxColumn(model1, 1, 2), 16);\n\t\tfor (let col = 1; col <= 14; col++) {\n\t\t\tassert.strictEqual(line1.getModelColumnOfViewPosition(0, col), col, 'getInputColumnOfOutputPosition(0, ' + col + ')');\n\t\t}\n\t\tfor (let col = 1; col <= 15; col++) {\n\t\t\tassert.strictEqual(line1.getModelColumnOfViewPosition(1, col), 13 + col, 'getInputColumnOfOutputPosition(1, ' + col + ')');\n\t\t}\n\t\tfor (let col = 1; col <= 16; col++) {\n\t\t\tassert.strictEqual(line1.getModelColumnOfViewPosition(2, col), 13 + 14 + col, 'getInputColumnOfOutputPosition(2, ' + col + ')');\n\t\t}\n\t\tfor (let col = 1; col <= 13; col++) {\n\t\t\tassert.deepStrictEqual(line1.getViewPositionOfModelPosition(0, col), pos(0, col), 'getOutputPositionOfInputPosition(' + col + ')');\n\t\t}\n\t\tfor (let col = 1 + 13; col <= 14 + 13; col++) {\n\t\t\tassert.deepStrictEqual(line1.getViewPositionOfModelPosition(0, col), pos(1, col - 13), 'getOutputPositionOfInputPosition(' + col + ')');\n\t\t}\n\t\tfor (let col = 1 + 13 + 14; col <= 15 + 14 + 13; col++) {\n\t\t\tassert.deepStrictEqual(line1.getViewPositionOfModelPosition(0, col), pos(2, col - 13 - 14), 'getOutputPositionOfInputPosition(' + col + ')');\n\t\t}\n\n\t\tmodel1 = createModel('My First LineMy Second LineAnd another one');\n\t\tline1 = createSplitLine([13, 14, 15], [13, 13 + 14, 13 + 14 + 15], 4);\n\n\t\tassert.strictEqual(line1.getViewLineCount(), 3);\n\t\tassert.strictEqual(line1.getViewLineContent(model1, 1, 0), 'My First Line');\n\t\tassert.strictEqual(line1.getViewLineContent(model1, 1, 1), '    My Second Line');\n\t\tassert.strictEqual(line1.getViewLineContent(model1, 1, 2), '    And another one');\n\t\tassert.strictEqual(line1.getViewLineMaxColumn(model1, 1, 0), 14);\n\t\tassert.strictEqual(line1.getViewLineMaxColumn(model1, 1, 1), 19);\n\t\tassert.strictEqual(line1.getViewLineMaxColumn(model1, 1, 2), 20);\n\n\t\tconst actualViewColumnMapping: number[][] = [];\n\t\tfor (let lineIndex = 0; lineIndex < line1.getViewLineCount(); lineIndex++) {\n\t\t\tconst actualLineViewColumnMapping: number[] = [];\n\t\t\tfor (let col = 1; col <= line1.getViewLineMaxColumn(model1, 1, lineIndex); col++) {\n\t\t\t\tactualLineViewColumnMapping.push(line1.getModelColumnOfViewPosition(lineIndex, col));\n\t\t\t}\n\t\t\tactualViewColumnMapping.push(actualLineViewColumnMapping);\n\t\t}\n\t\tassert.deepStrictEqual(actualViewColumnMapping, [\n\t\t\t[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],\n\t\t\t[14, 14, 14, 14, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28],\n\t\t\t[28, 28, 28, 28, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43],\n\t\t]);\n\n\t\tfor (let col = 1; col <= 13; col++) {\n\t\t\tassert.deepStrictEqual(line1.getViewPositionOfModelPosition(0, col), pos(0, col), '6.getOutputPositionOfInputPosition(' + col + ')');\n\t\t}\n\t\tfor (let col = 1 + 13; col <= 14 + 13; col++) {\n\t\t\tassert.deepStrictEqual(line1.getViewPositionOfModelPosition(0, col), pos(1, 4 + col - 13), '7.getOutputPositionOfInputPosition(' + col + ')');\n\t\t}\n\t\tfor (let col = 1 + 13 + 14; col <= 15 + 14 + 13; col++) {\n\t\t\tassert.deepStrictEqual(line1.getViewPositionOfModelPosition(0, col), pos(2, 4 + col - 13 - 14), '8.getOutputPositionOfInputPosition(' + col + ')');\n\t\t}\n\t});\n\n\tfunction withSplitLinesCollection(text: string, callback: (model: TextModel, linesCollection: ViewModelLinesFromProjectedModel) => void): void {\n\t\tconst config = new TestConfiguration({});\n\t\tconst wrappingInfo = config.options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = config.options.get(EditorOption.fontInfo);\n\t\tconst wordWrapBreakAfterCharacters = config.options.get(EditorOption.wordWrapBreakAfterCharacters);\n\t\tconst wordWrapBreakBeforeCharacters = config.options.get(EditorOption.wordWrapBreakBeforeCharacters);\n\t\tconst wrappingIndent = config.options.get(EditorOption.wrappingIndent);\n\t\tconst wordBreak = config.options.get(EditorOption.wordBreak);\n\t\tconst lineBreaksComputerFactory = new MonospaceLineBreaksComputerFactory(wordWrapBreakBeforeCharacters, wordWrapBreakAfterCharacters);\n\n\t\tconst model = createTextModel([\n\t\t\t'int main() {',\n\t\t\t'\\tprintf(\"Hello world!\");',\n\t\t\t'}',\n\t\t\t'int main() {',\n\t\t\t'\\tprintf(\"Hello world!\");',\n\t\t\t'}',\n\t\t].join('\\n'));\n\n\t\tconst linesCollection = new ViewModelLinesFromProjectedModel(\n\t\t\t1,\n\t\t\tmodel,\n\t\t\tlineBreaksComputerFactory,\n\t\t\tlineBreaksComputerFactory,\n\t\t\tfontInfo,\n\t\t\tmodel.getOptions().tabSize,\n\t\t\t'simple',\n\t\t\twrappingInfo.wrappingColumn,\n\t\t\twrappingIndent,\n\t\t\twordBreak\n\t\t);\n\n\t\tcallback(model, linesCollection);\n\n\t\tlinesCollection.dispose();\n\t\tmodel.dispose();\n\t\tconfig.dispose();\n\t}\n\n\ttest('Invalid line numbers', () => {\n\n\t\tconst text = [\n\t\t\t'int main() {',\n\t\t\t'\\tprintf(\"Hello world!\");',\n\t\t\t'}',\n\t\t\t'int main() {',\n\t\t\t'\\tprintf(\"Hello world!\");',\n\t\t\t'}',\n\t\t].join('\\n');\n\n\t\twithSplitLinesCollection(text, (model, linesCollection) => {\n\t\t\tassert.strictEqual(linesCollection.getViewLineCount(), 6);\n\n\t\t\t// getOutputIndentGuide\n\t\t\tassert.deepStrictEqual(linesCollection.getViewLinesIndentGuides(-1, -1), [0]);\n\t\t\tassert.deepStrictEqual(linesCollection.getViewLinesIndentGuides(0, 0), [0]);\n\t\t\tassert.deepStrictEqual(linesCollection.getViewLinesIndentGuides(1, 1), [0]);\n\t\t\tassert.deepStrictEqual(linesCollection.getViewLinesIndentGuides(2, 2), [1]);\n\t\t\tassert.deepStrictEqual(linesCollection.getViewLinesIndentGuides(3, 3), [0]);\n\t\t\tassert.deepStrictEqual(linesCollection.getViewLinesIndentGuides(4, 4), [0]);\n\t\t\tassert.deepStrictEqual(linesCollection.getViewLinesIndentGuides(5, 5), [1]);\n\t\t\tassert.deepStrictEqual(linesCollection.getViewLinesIndentGuides(6, 6), [0]);\n\t\t\tassert.deepStrictEqual(linesCollection.getViewLinesIndentGuides(7, 7), [0]);\n\n\t\t\tassert.deepStrictEqual(linesCollection.getViewLinesIndentGuides(0, 7), [0, 1, 0, 0, 1, 0]);\n\n\t\t\t// getOutputLineContent\n\t\t\tassert.strictEqual(linesCollection.getViewLineContent(-1), 'int main() {');\n\t\t\tassert.strictEqual(linesCollection.getViewLineContent(0), 'int main() {');\n\t\t\tassert.strictEqual(linesCollection.getViewLineContent(1), 'int main() {');\n\t\t\tassert.strictEqual(linesCollection.getViewLineContent(2), '\\tprintf(\"Hello world!\");');\n\t\t\tassert.strictEqual(linesCollection.getViewLineContent(3), '}');\n\t\t\tassert.strictEqual(linesCollection.getViewLineContent(4), 'int main() {');\n\t\t\tassert.strictEqual(linesCollection.getViewLineContent(5), '\\tprintf(\"Hello world!\");');\n\t\t\tassert.strictEqual(linesCollection.getViewLineContent(6), '}');\n\t\t\tassert.strictEqual(linesCollection.getViewLineContent(7), '}');\n\n\t\t\t// getOutputLineMinColumn\n\t\t\tassert.strictEqual(linesCollection.getViewLineMinColumn(-1), 1);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMinColumn(0), 1);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMinColumn(1), 1);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMinColumn(2), 1);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMinColumn(3), 1);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMinColumn(4), 1);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMinColumn(5), 1);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMinColumn(6), 1);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMinColumn(7), 1);\n\n\t\t\t// getOutputLineMaxColumn\n\t\t\tassert.strictEqual(linesCollection.getViewLineMaxColumn(-1), 13);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMaxColumn(0), 13);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMaxColumn(1), 13);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMaxColumn(2), 25);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMaxColumn(3), 2);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMaxColumn(4), 13);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMaxColumn(5), 25);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMaxColumn(6), 2);\n\t\t\tassert.strictEqual(linesCollection.getViewLineMaxColumn(7), 2);\n\n\t\t\t// convertOutputPositionToInputPosition\n\t\t\tassert.deepStrictEqual(linesCollection.convertViewPositionToModelPosition(-1, 1), new Position(1, 1));\n\t\t\tassert.deepStrictEqual(linesCollection.convertViewPositionToModelPosition(0, 1), new Position(1, 1));\n\t\t\tassert.deepStrictEqual(linesCollection.convertViewPositionToModelPosition(1, 1), new Position(1, 1));\n\t\t\tassert.deepStrictEqual(linesCollection.convertViewPositionToModelPosition(2, 1), new Position(2, 1));\n\t\t\tassert.deepStrictEqual(linesCollection.convertViewPositionToModelPosition(3, 1), new Position(3, 1));\n\t\t\tassert.deepStrictEqual(linesCollection.convertViewPositionToModelPosition(4, 1), new Position(4, 1));\n\t\t\tassert.deepStrictEqual(linesCollection.convertViewPositionToModelPosition(5, 1), new Position(5, 1));\n\t\t\tassert.deepStrictEqual(linesCollection.convertViewPositionToModelPosition(6, 1), new Position(6, 1));\n\t\t\tassert.deepStrictEqual(linesCollection.convertViewPositionToModelPosition(7, 1), new Position(6, 1));\n\t\t\tassert.deepStrictEqual(linesCollection.convertViewPositionToModelPosition(8, 1), new Position(6, 1));\n\t\t});\n\t});\n\n\ttest('issue #3662', () => {\n\n\t\tconst text = [\n\t\t\t'int main() {',\n\t\t\t'\\tprintf(\"Hello world!\");',\n\t\t\t'}',\n\t\t\t'int main() {',\n\t\t\t'\\tprintf(\"Hello world!\");',\n\t\t\t'}',\n\t\t].join('\\n');\n\n\t\twithSplitLinesCollection(text, (model, linesCollection) => {\n\t\t\tlinesCollection.setHiddenAreas([\n\t\t\t\tnew Range(1, 1, 3, 1),\n\t\t\t\tnew Range(5, 1, 6, 1)\n\t\t\t]);\n\n\t\t\tconst viewLineCount = linesCollection.getViewLineCount();\n\t\t\tassert.strictEqual(viewLineCount, 1, 'getOutputLineCount()');\n\n\t\t\tconst modelLineCount = model.getLineCount();\n\t\t\tfor (let lineNumber = 0; lineNumber <= modelLineCount + 1; lineNumber++) {\n\t\t\t\tconst lineMinColumn = (lineNumber >= 1 && lineNumber <= modelLineCount) ? model.getLineMinColumn(lineNumber) : 1;\n\t\t\t\tconst lineMaxColumn = (lineNumber >= 1 && lineNumber <= modelLineCount) ? model.getLineMaxColumn(lineNumber) : 1;\n\t\t\t\tfor (let column = lineMinColumn - 1; column <= lineMaxColumn + 1; column++) {\n\t\t\t\t\tconst viewPosition = linesCollection.convertModelPositionToViewPosition(lineNumber, column);\n\n\t\t\t\t\t// validate view position\n\t\t\t\t\tlet viewLineNumber = viewPosition.lineNumber;\n\t\t\t\t\tlet viewColumn = viewPosition.column;\n\t\t\t\t\tif (viewLineNumber < 1) {\n\t\t\t\t\t\tviewLineNumber = 1;\n\t\t\t\t\t}\n\t\t\t\t\tconst lineCount = linesCollection.getViewLineCount();\n\t\t\t\t\tif (viewLineNumber > lineCount) {\n\t\t\t\t\t\tviewLineNumber = lineCount;\n\t\t\t\t\t}\n\t\t\t\t\tconst viewMinColumn = linesCollection.getViewLineMinColumn(viewLineNumber);\n\t\t\t\t\tconst viewMaxColumn = linesCollection.getViewLineMaxColumn(viewLineNumber);\n\t\t\t\t\tif (viewColumn < viewMinColumn) {\n\t\t\t\t\t\tviewColumn = viewMinColumn;\n\t\t\t\t\t}\n\t\t\t\t\tif (viewColumn > viewMaxColumn) {\n\t\t\t\t\t\tviewColumn = viewMaxColumn;\n\t\t\t\t\t}\n\t\t\t\t\tconst validViewPosition = new Position(viewLineNumber, viewColumn);\n\t\t\t\t\tassert.strictEqual(viewPosition.toString(), validViewPosition.toString(), 'model->view for ' + lineNumber + ', ' + column);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let lineNumber = 0; lineNumber <= viewLineCount + 1; lineNumber++) {\n\t\t\t\tconst lineMinColumn = linesCollection.getViewLineMinColumn(lineNumber);\n\t\t\t\tconst lineMaxColumn = linesCollection.getViewLineMaxColumn(lineNumber);\n\t\t\t\tfor (let column = lineMinColumn - 1; column <= lineMaxColumn + 1; column++) {\n\t\t\t\t\tconst modelPosition = linesCollection.convertViewPositionToModelPosition(lineNumber, column);\n\t\t\t\t\tconst validModelPosition = model.validatePosition(modelPosition);\n\t\t\t\t\tassert.strictEqual(modelPosition.toString(), validModelPosition.toString(), 'view->model for ' + lineNumber + ', ' + column);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n});\n\nsuite('SplitLinesCollection', () => {\n\n\tconst _text = [\n\t\t'class Nice {',\n\t\t'\tfunction hi() {',\n\t\t'\t\tconsole.log(\"Hello world\");',\n\t\t'\t}',\n\t\t'\tfunction hello() {',\n\t\t'\t\tconsole.log(\"Hello world, this is a somewhat longer line\");',\n\t\t'\t}',\n\t\t'}',\n\t];\n\n\tconst _tokens = [\n\t\t[\n\t\t\t{ startIndex: 0, value: 1 },\n\t\t\t{ startIndex: 5, value: 2 },\n\t\t\t{ startIndex: 6, value: 3 },\n\t\t\t{ startIndex: 10, value: 4 },\n\t\t],\n\t\t[\n\t\t\t{ startIndex: 0, value: 5 },\n\t\t\t{ startIndex: 1, value: 6 },\n\t\t\t{ startIndex: 9, value: 7 },\n\t\t\t{ startIndex: 10, value: 8 },\n\t\t\t{ startIndex: 12, value: 9 },\n\t\t],\n\t\t[\n\t\t\t{ startIndex: 0, value: 10 },\n\t\t\t{ startIndex: 2, value: 11 },\n\t\t\t{ startIndex: 9, value: 12 },\n\t\t\t{ startIndex: 10, value: 13 },\n\t\t\t{ startIndex: 13, value: 14 },\n\t\t\t{ startIndex: 14, value: 15 },\n\t\t\t{ startIndex: 27, value: 16 },\n\t\t],\n\t\t[\n\t\t\t{ startIndex: 0, value: 17 },\n\t\t],\n\t\t[\n\t\t\t{ startIndex: 0, value: 18 },\n\t\t\t{ startIndex: 1, value: 19 },\n\t\t\t{ startIndex: 9, value: 20 },\n\t\t\t{ startIndex: 10, value: 21 },\n\t\t\t{ startIndex: 15, value: 22 },\n\t\t],\n\t\t[\n\t\t\t{ startIndex: 0, value: 23 },\n\t\t\t{ startIndex: 2, value: 24 },\n\t\t\t{ startIndex: 9, value: 25 },\n\t\t\t{ startIndex: 10, value: 26 },\n\t\t\t{ startIndex: 13, value: 27 },\n\t\t\t{ startIndex: 14, value: 28 },\n\t\t\t{ startIndex: 59, value: 29 },\n\t\t],\n\t\t[\n\t\t\t{ startIndex: 0, value: 30 },\n\t\t],\n\t\t[\n\t\t\t{ startIndex: 0, value: 31 },\n\t\t]\n\t];\n\n\tlet model: TextModel;\n\tlet languageRegistration: IDisposable;\n\n\tsetup(() => {\n\t\tlet _lineIndex = 0;\n\t\tconst tokenizationSupport: languages.ITokenizationSupport = {\n\t\t\tgetInitialState: () => NullState,\n\t\t\ttokenize: undefined!,\n\t\t\ttokenizeEncoded: (line: string, hasEOL: boolean, state: languages.IState): languages.EncodedTokenizationResult => {\n\t\t\t\tconst tokens = _tokens[_lineIndex++];\n\n\t\t\t\tconst result = new Uint32Array(2 * tokens.length);\n\t\t\t\tfor (let i = 0; i < tokens.length; i++) {\n\t\t\t\t\tresult[2 * i] = tokens[i].startIndex;\n\t\t\t\t\tresult[2 * i + 1] = (\n\t\t\t\t\t\ttokens[i].value << MetadataConsts.FOREGROUND_OFFSET\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn new languages.EncodedTokenizationResult(result, state);\n\t\t\t}\n\t\t};\n\t\tconst LANGUAGE_ID = 'modelModeTest1';\n\t\tlanguageRegistration = languages.TokenizationRegistry.register(LANGUAGE_ID, tokenizationSupport);\n\t\tmodel = createTextModel(_text.join('\\n'), LANGUAGE_ID);\n\t\t// force tokenization\n\t\tmodel.tokenization.forceTokenization(model.getLineCount());\n\t});\n\n\tteardown(() => {\n\t\tmodel.dispose();\n\t\tlanguageRegistration.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tinterface ITestViewLineToken {\n\t\tendIndex: number;\n\t\tvalue: number;\n\t}\n\n\tfunction assertViewLineTokens(_actual: IViewLineTokens, expected: ITestViewLineToken[]): void {\n\t\tconst actual: ITestViewLineToken[] = [];\n\t\tfor (let i = 0, len = _actual.getCount(); i < len; i++) {\n\t\t\tactual[i] = {\n\t\t\t\tendIndex: _actual.getEndOffset(i),\n\t\t\t\tvalue: _actual.getForeground(i)\n\t\t\t};\n\t\t}\n\t\tassert.deepStrictEqual(actual, expected);\n\t}\n\n\tinterface ITestMinimapLineRenderingData {\n\t\tcontent: string;\n\t\tminColumn: number;\n\t\tmaxColumn: number;\n\t\ttokens: ITestViewLineToken[];\n\t}\n\n\tfunction assertMinimapLineRenderingData(actual: ViewLineData, expected: ITestMinimapLineRenderingData | null): void {\n\t\tif (actual === null && expected === null) {\n\t\t\tassert.ok(true);\n\t\t\treturn;\n\t\t}\n\t\tif (expected === null) {\n\t\t\tassert.ok(false);\n\t\t}\n\t\tassert.strictEqual(actual.content, expected.content);\n\t\tassert.strictEqual(actual.minColumn, expected.minColumn);\n\t\tassert.strictEqual(actual.maxColumn, expected.maxColumn);\n\t\tassertViewLineTokens(actual.tokens, expected.tokens);\n\t}\n\n\tfunction assertMinimapLinesRenderingData(actual: ViewLineData[], expected: Array<ITestMinimapLineRenderingData | null>): void {\n\t\tassert.strictEqual(actual.length, expected.length);\n\t\tfor (let i = 0; i < expected.length; i++) {\n\t\t\tassertMinimapLineRenderingData(actual[i], expected[i]);\n\t\t}\n\t}\n\n\tfunction assertAllMinimapLinesRenderingData(splitLinesCollection: ViewModelLinesFromProjectedModel, all: ITestMinimapLineRenderingData[]): void {\n\t\tconst lineCount = all.length;\n\t\tfor (let line = 1; line <= lineCount; line++) {\n\t\t\tassert.strictEqual(splitLinesCollection.getViewLineData(line).content, splitLinesCollection.getViewLineContent(line));\n\t\t}\n\n\t\tfor (let start = 1; start <= lineCount; start++) {\n\t\t\tfor (let end = start; end <= lineCount; end++) {\n\t\t\t\tconst count = end - start + 1;\n\t\t\t\tfor (let desired = Math.pow(2, count) - 1; desired >= 0; desired--) {\n\t\t\t\t\tconst needed: boolean[] = [];\n\t\t\t\t\tconst expected: Array<ITestMinimapLineRenderingData | null> = [];\n\t\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\t\tneeded[i] = (desired & (1 << i)) ? true : false;\n\t\t\t\t\t\texpected[i] = (needed[i] ? all[start - 1 + i] : null);\n\t\t\t\t\t}\n\t\t\t\t\tconst actual = splitLinesCollection.getViewLinesData(start, end, needed);\n\n\t\t\t\t\tassertMinimapLinesRenderingData(actual, expected);\n\t\t\t\t\t// Comment out next line to test all possible combinations\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\ttest('getViewLinesData - no wrapping', () => {\n\t\twithSplitLinesCollection(model, 'off', 0, (splitLinesCollection) => {\n\t\t\tassert.strictEqual(splitLinesCollection.getViewLineCount(), 8);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(1, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(2, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(3, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(4, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(5, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(6, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(7, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(8, 1), true);\n\n\t\t\tconst _expected: ITestMinimapLineRenderingData[] = [\n\t\t\t\t{\n\t\t\t\t\tcontent: 'class Nice {',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 13,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 5, value: 1 },\n\t\t\t\t\t\t{ endIndex: 6, value: 2 },\n\t\t\t\t\t\t{ endIndex: 10, value: 3 },\n\t\t\t\t\t\t{ endIndex: 12, value: 4 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\tfunction hi() {',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 17,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 1, value: 5 },\n\t\t\t\t\t\t{ endIndex: 9, value: 6 },\n\t\t\t\t\t\t{ endIndex: 10, value: 7 },\n\t\t\t\t\t\t{ endIndex: 12, value: 8 },\n\t\t\t\t\t\t{ endIndex: 16, value: 9 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\t\tconsole.log(\"Hello world\");',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 30,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 2, value: 10 },\n\t\t\t\t\t\t{ endIndex: 9, value: 11 },\n\t\t\t\t\t\t{ endIndex: 10, value: 12 },\n\t\t\t\t\t\t{ endIndex: 13, value: 13 },\n\t\t\t\t\t\t{ endIndex: 14, value: 14 },\n\t\t\t\t\t\t{ endIndex: 27, value: 15 },\n\t\t\t\t\t\t{ endIndex: 29, value: 16 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\t}',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 3,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 2, value: 17 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\tfunction hello() {',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 20,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 1, value: 18 },\n\t\t\t\t\t\t{ endIndex: 9, value: 19 },\n\t\t\t\t\t\t{ endIndex: 10, value: 20 },\n\t\t\t\t\t\t{ endIndex: 15, value: 21 },\n\t\t\t\t\t\t{ endIndex: 19, value: 22 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\t\tconsole.log(\"Hello world, this is a somewhat longer line\");',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 62,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 2, value: 23 },\n\t\t\t\t\t\t{ endIndex: 9, value: 24 },\n\t\t\t\t\t\t{ endIndex: 10, value: 25 },\n\t\t\t\t\t\t{ endIndex: 13, value: 26 },\n\t\t\t\t\t\t{ endIndex: 14, value: 27 },\n\t\t\t\t\t\t{ endIndex: 59, value: 28 },\n\t\t\t\t\t\t{ endIndex: 61, value: 29 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 3,\n\t\t\t\t\tcontent: '\t}',\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 2, value: 30 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 2,\n\t\t\t\t\tcontent: '}',\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 1, value: 31 },\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tassertAllMinimapLinesRenderingData(splitLinesCollection, [\n\t\t\t\t_expected[0],\n\t\t\t\t_expected[1],\n\t\t\t\t_expected[2],\n\t\t\t\t_expected[3],\n\t\t\t\t_expected[4],\n\t\t\t\t_expected[5],\n\t\t\t\t_expected[6],\n\t\t\t\t_expected[7],\n\t\t\t]);\n\n\t\t\tsplitLinesCollection.setHiddenAreas([new Range(2, 1, 4, 1)]);\n\t\t\tassert.strictEqual(splitLinesCollection.getViewLineCount(), 5);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(1, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(2, 1), false);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(3, 1), false);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(4, 1), false);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(5, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(6, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(7, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(8, 1), true);\n\n\t\t\tassertAllMinimapLinesRenderingData(splitLinesCollection, [\n\t\t\t\t_expected[0],\n\t\t\t\t_expected[4],\n\t\t\t\t_expected[5],\n\t\t\t\t_expected[6],\n\t\t\t\t_expected[7],\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('getViewLinesData - with wrapping', () => {\n\t\twithSplitLinesCollection(model, 'wordWrapColumn', 30, (splitLinesCollection) => {\n\t\t\tassert.strictEqual(splitLinesCollection.getViewLineCount(), 12);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(1, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(2, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(3, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(4, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(5, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(6, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(7, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(8, 1), true);\n\n\t\t\tconst _expected: ITestMinimapLineRenderingData[] = [\n\t\t\t\t{\n\t\t\t\t\tcontent: 'class Nice {',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 13,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 5, value: 1 },\n\t\t\t\t\t\t{ endIndex: 6, value: 2 },\n\t\t\t\t\t\t{ endIndex: 10, value: 3 },\n\t\t\t\t\t\t{ endIndex: 12, value: 4 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\tfunction hi() {',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 17,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 1, value: 5 },\n\t\t\t\t\t\t{ endIndex: 9, value: 6 },\n\t\t\t\t\t\t{ endIndex: 10, value: 7 },\n\t\t\t\t\t\t{ endIndex: 12, value: 8 },\n\t\t\t\t\t\t{ endIndex: 16, value: 9 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\t\tconsole.log(\"Hello ',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 22,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 2, value: 10 },\n\t\t\t\t\t\t{ endIndex: 9, value: 11 },\n\t\t\t\t\t\t{ endIndex: 10, value: 12 },\n\t\t\t\t\t\t{ endIndex: 13, value: 13 },\n\t\t\t\t\t\t{ endIndex: 14, value: 14 },\n\t\t\t\t\t\t{ endIndex: 21, value: 15 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '            world\");',\n\t\t\t\t\tminColumn: 13,\n\t\t\t\t\tmaxColumn: 21,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 18, value: 15 },\n\t\t\t\t\t\t{ endIndex: 20, value: 16 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\t}',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 3,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 2, value: 17 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\tfunction hello() {',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 20,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 1, value: 18 },\n\t\t\t\t\t\t{ endIndex: 9, value: 19 },\n\t\t\t\t\t\t{ endIndex: 10, value: 20 },\n\t\t\t\t\t\t{ endIndex: 15, value: 21 },\n\t\t\t\t\t\t{ endIndex: 19, value: 22 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\t\tconsole.log(\"Hello ',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 22,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 2, value: 23 },\n\t\t\t\t\t\t{ endIndex: 9, value: 24 },\n\t\t\t\t\t\t{ endIndex: 10, value: 25 },\n\t\t\t\t\t\t{ endIndex: 13, value: 26 },\n\t\t\t\t\t\t{ endIndex: 14, value: 27 },\n\t\t\t\t\t\t{ endIndex: 21, value: 28 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '            world, this is a ',\n\t\t\t\t\tminColumn: 13,\n\t\t\t\t\tmaxColumn: 30,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 29, value: 28 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '            somewhat longer ',\n\t\t\t\t\tminColumn: 13,\n\t\t\t\t\tmaxColumn: 29,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 28, value: 28 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '            line\");',\n\t\t\t\t\tminColumn: 13,\n\t\t\t\t\tmaxColumn: 20,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 17, value: 28 },\n\t\t\t\t\t\t{ endIndex: 19, value: 29 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\t}',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 3,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 2, value: 30 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '}',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 2,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 1, value: 31 },\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tassertAllMinimapLinesRenderingData(splitLinesCollection, [\n\t\t\t\t_expected[0],\n\t\t\t\t_expected[1],\n\t\t\t\t_expected[2],\n\t\t\t\t_expected[3],\n\t\t\t\t_expected[4],\n\t\t\t\t_expected[5],\n\t\t\t\t_expected[6],\n\t\t\t\t_expected[7],\n\t\t\t\t_expected[8],\n\t\t\t\t_expected[9],\n\t\t\t\t_expected[10],\n\t\t\t\t_expected[11],\n\t\t\t]);\n\n\t\t\tsplitLinesCollection.setHiddenAreas([new Range(2, 1, 4, 1)]);\n\t\t\tassert.strictEqual(splitLinesCollection.getViewLineCount(), 8);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(1, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(2, 1), false);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(3, 1), false);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(4, 1), false);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(5, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(6, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(7, 1), true);\n\t\t\tassert.strictEqual(splitLinesCollection.modelPositionIsVisible(8, 1), true);\n\n\t\t\tassertAllMinimapLinesRenderingData(splitLinesCollection, [\n\t\t\t\t_expected[0],\n\t\t\t\t_expected[5],\n\t\t\t\t_expected[6],\n\t\t\t\t_expected[7],\n\t\t\t\t_expected[8],\n\t\t\t\t_expected[9],\n\t\t\t\t_expected[10],\n\t\t\t\t_expected[11],\n\t\t\t]);\n\t\t});\n\t});\n\n\ttest('getViewLinesData - with wrapping and injected text', () => {\n\t\tmodel.deltaDecorations([], [{\n\t\t\trange: new Range(1, 9, 1, 9),\n\t\t\toptions: {\n\t\t\t\tdescription: 'example',\n\t\t\t\tafter: {\n\t\t\t\t\tcontent: 'very very long injected text that causes a line break',\n\t\t\t\t\tinlineClassName: 'myClassName'\n\t\t\t\t},\n\t\t\t\tshowIfCollapsed: true,\n\t\t\t}\n\t\t}]);\n\n\t\twithSplitLinesCollection(model, 'wordWrapColumn', 30, (splitLinesCollection) => {\n\t\t\tassert.strictEqual(splitLinesCollection.getViewLineCount(), 14);\n\n\t\t\tassert.strictEqual(splitLinesCollection.getViewLineMaxColumn(1), 24);\n\n\t\t\tconst _expected: ITestMinimapLineRenderingData[] = [\n\t\t\t\t{\n\t\t\t\t\tcontent: 'class Nivery very long ',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 24,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 5, value: 1 },\n\t\t\t\t\t\t{ endIndex: 6, value: 2 },\n\t\t\t\t\t\t{ endIndex: 8, value: 3 },\n\t\t\t\t\t\t{ endIndex: 23, value: 1 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '    injected text that causes ',\n\t\t\t\t\tminColumn: 5,\n\t\t\t\t\tmaxColumn: 31,\n\t\t\t\t\ttokens: [{ endIndex: 30, value: 1 }]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '    a line breakce {',\n\t\t\t\t\tminColumn: 5,\n\t\t\t\t\tmaxColumn: 21,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 16, value: 1 },\n\t\t\t\t\t\t{ endIndex: 18, value: 3 },\n\t\t\t\t\t\t{ endIndex: 20, value: 4 }\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\tfunction hi() {',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 17,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 1, value: 5 },\n\t\t\t\t\t\t{ endIndex: 9, value: 6 },\n\t\t\t\t\t\t{ endIndex: 10, value: 7 },\n\t\t\t\t\t\t{ endIndex: 12, value: 8 },\n\t\t\t\t\t\t{ endIndex: 16, value: 9 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\t\tconsole.log(\"Hello ',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 22,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 2, value: 10 },\n\t\t\t\t\t\t{ endIndex: 9, value: 11 },\n\t\t\t\t\t\t{ endIndex: 10, value: 12 },\n\t\t\t\t\t\t{ endIndex: 13, value: 13 },\n\t\t\t\t\t\t{ endIndex: 14, value: 14 },\n\t\t\t\t\t\t{ endIndex: 21, value: 15 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '            world\");',\n\t\t\t\t\tminColumn: 13,\n\t\t\t\t\tmaxColumn: 21,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 18, value: 15 },\n\t\t\t\t\t\t{ endIndex: 20, value: 16 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\t}',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 3,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 2, value: 17 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\tfunction hello() {',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 20,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 1, value: 18 },\n\t\t\t\t\t\t{ endIndex: 9, value: 19 },\n\t\t\t\t\t\t{ endIndex: 10, value: 20 },\n\t\t\t\t\t\t{ endIndex: 15, value: 21 },\n\t\t\t\t\t\t{ endIndex: 19, value: 22 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\t\tconsole.log(\"Hello ',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 22,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 2, value: 23 },\n\t\t\t\t\t\t{ endIndex: 9, value: 24 },\n\t\t\t\t\t\t{ endIndex: 10, value: 25 },\n\t\t\t\t\t\t{ endIndex: 13, value: 26 },\n\t\t\t\t\t\t{ endIndex: 14, value: 27 },\n\t\t\t\t\t\t{ endIndex: 21, value: 28 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '            world, this is a ',\n\t\t\t\t\tminColumn: 13,\n\t\t\t\t\tmaxColumn: 30,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 29, value: 28 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '            somewhat longer ',\n\t\t\t\t\tminColumn: 13,\n\t\t\t\t\tmaxColumn: 29,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 28, value: 28 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '            line\");',\n\t\t\t\t\tminColumn: 13,\n\t\t\t\t\tmaxColumn: 20,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 17, value: 28 },\n\t\t\t\t\t\t{ endIndex: 19, value: 29 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '\t}',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 3,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 2, value: 30 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontent: '}',\n\t\t\t\t\tminColumn: 1,\n\t\t\t\t\tmaxColumn: 2,\n\t\t\t\t\ttokens: [\n\t\t\t\t\t\t{ endIndex: 1, value: 31 },\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tassertAllMinimapLinesRenderingData(splitLinesCollection, [\n\t\t\t\t_expected[0],\n\t\t\t\t_expected[1],\n\t\t\t\t_expected[2],\n\t\t\t\t_expected[3],\n\t\t\t\t_expected[4],\n\t\t\t\t_expected[5],\n\t\t\t\t_expected[6],\n\t\t\t\t_expected[7],\n\t\t\t\t_expected[8],\n\t\t\t\t_expected[9],\n\t\t\t\t_expected[10],\n\t\t\t\t_expected[11],\n\t\t\t]);\n\n\t\t\tconst data = splitLinesCollection.getViewLinesData(1, 14, new Array(14).fill(true));\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tdata.map((d) => ({\n\t\t\t\t\tinlineDecorations: d.inlineDecorations?.map((d) => ({\n\t\t\t\t\t\tstartOffset: d.startOffset,\n\t\t\t\t\t\tendOffset: d.endOffset,\n\t\t\t\t\t})),\n\t\t\t\t})),\n\t\t\t\t[\n\t\t\t\t\t{ inlineDecorations: [{ startOffset: 8, endOffset: 23 }] },\n\t\t\t\t\t{ inlineDecorations: [{ startOffset: 4, endOffset: 30 }] },\n\t\t\t\t\t{ inlineDecorations: [{ startOffset: 4, endOffset: 16 }] },\n\t\t\t\t\t{ inlineDecorations: undefined },\n\t\t\t\t\t{ inlineDecorations: undefined },\n\t\t\t\t\t{ inlineDecorations: undefined },\n\t\t\t\t\t{ inlineDecorations: undefined },\n\t\t\t\t\t{ inlineDecorations: undefined },\n\t\t\t\t\t{ inlineDecorations: undefined },\n\t\t\t\t\t{ inlineDecorations: undefined },\n\t\t\t\t\t{ inlineDecorations: undefined },\n\t\t\t\t\t{ inlineDecorations: undefined },\n\t\t\t\t\t{ inlineDecorations: undefined },\n\t\t\t\t\t{ inlineDecorations: undefined },\n\t\t\t\t]\n\t\t\t);\n\t\t});\n\t});\n\n\tfunction withSplitLinesCollection(model: TextModel, wordWrap: 'on' | 'off' | 'wordWrapColumn' | 'bounded', wordWrapColumn: number, callback: (splitLinesCollection: ViewModelLinesFromProjectedModel) => void): void {\n\t\tconst configuration = new TestConfiguration({\n\t\t\twordWrap: wordWrap,\n\t\t\twordWrapColumn: wordWrapColumn,\n\t\t\twrappingIndent: 'indent'\n\t\t});\n\t\tconst wrappingInfo = configuration.options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = configuration.options.get(EditorOption.fontInfo);\n\t\tconst wordWrapBreakAfterCharacters = configuration.options.get(EditorOption.wordWrapBreakAfterCharacters);\n\t\tconst wordWrapBreakBeforeCharacters = configuration.options.get(EditorOption.wordWrapBreakBeforeCharacters);\n\t\tconst wrappingIndent = configuration.options.get(EditorOption.wrappingIndent);\n\t\tconst wordBreak = configuration.options.get(EditorOption.wordBreak);\n\n\t\tconst lineBreaksComputerFactory = new MonospaceLineBreaksComputerFactory(wordWrapBreakBeforeCharacters, wordWrapBreakAfterCharacters);\n\n\t\tconst linesCollection = new ViewModelLinesFromProjectedModel(\n\t\t\t1,\n\t\t\tmodel,\n\t\t\tlineBreaksComputerFactory,\n\t\t\tlineBreaksComputerFactory,\n\t\t\tfontInfo,\n\t\t\tmodel.getOptions().tabSize,\n\t\t\t'simple',\n\t\t\twrappingInfo.wrappingColumn,\n\t\t\twrappingIndent,\n\t\t\twordBreak\n\t\t);\n\n\t\tcallback(linesCollection);\n\n\t\tconfiguration.dispose();\n\t}\n});\n\n\nfunction pos(lineNumber: number, column: number): Position {\n\treturn new Position(lineNumber, column);\n}\n\nfunction createSplitLine(splitLengths: number[], breakingOffsetsVisibleColumn: number[], wrappedTextIndentWidth: number, isVisible: boolean = true): IModelLineProjection {\n\treturn createModelLineProjection(createLineBreakData(splitLengths, breakingOffsetsVisibleColumn, wrappedTextIndentWidth), isVisible);\n}\n\nfunction createLineBreakData(breakingLengths: number[], breakingOffsetsVisibleColumn: number[], wrappedTextIndentWidth: number): ModelLineProjectionData {\n\tconst sums: number[] = [];\n\tfor (let i = 0; i < breakingLengths.length; i++) {\n\t\tsums[i] = (i > 0 ? sums[i - 1] : 0) + breakingLengths[i];\n\t}\n\treturn new ModelLineProjectionData(null, null, sums, breakingOffsetsVisibleColumn, wrappedTextIndentWidth);\n}\n\nfunction createModel(text: string): ISimpleModel {\n\treturn {\n\t\ttokenization: {\n\t\t\tgetLineTokens: (lineNumber: number) => {\n\t\t\t\treturn null!;\n\t\t\t},\n\t\t},\n\t\tgetLineContent: (lineNumber: number) => {\n\t\t\treturn text;\n\t\t},\n\t\tgetLineLength: (lineNumber: number) => {\n\t\t\treturn text.length;\n\t\t},\n\t\tgetLineMinColumn: (lineNumber: number) => {\n\t\t\treturn 1;\n\t\t},\n\t\tgetLineMaxColumn: (lineNumber: number) => {\n\t\t\treturn text.length + 1;\n\t\t},\n\t\tgetValueInRange: (range: IRange, eol?: EndOfLinePreference) => {\n\t\t\treturn text.substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\t};\n}\n"]}