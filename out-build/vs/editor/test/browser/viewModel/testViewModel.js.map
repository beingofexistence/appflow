{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/browser/viewModel/testViewModel.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAWhG,SAAgB,IAAI,CAAU,IAAc,EAAE,OAAuB,EAAE,QAA0D;QAChI,MAAM,SAAS,GAAG,CAAC,CAAC;QAEpB,MAAM,aAAa,GAAG,IAAI,wBAAI,CAAc,OAAO,CAAC,CAAC;QACrD,MAAM,KAAK,GAAG,IAAA,oBAAI,EAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/C,MAAM,kCAAkC,GAAG,iCAAG,CAAgC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC5G,MAAM,gCAAgC,GAAG,IAAI,uCAAI,EAA8B,CAAC;QAChF,MAAM,SAAS,GAAG,IAAI,mBAAG,CAAO,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,kCAAkC,EAAE,kCAAkC,EAAE,IAAK,EAAE,gCAAgC,EAAE,IAAI,uBAAI,EAAc,EAAE;YACzM,eAAe,CAAC,YAAY,EAAE,UAAU;YACxC,CAAC;SACD,CAAC,CAAC;QAEH,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAE3B,SAAS,CAAC,OAAO,EAAE,CAAC;QACpB,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,aAAa,CAAC,OAAO,EAAE,CAAC;QACxB,gCAAgC,CAAC,OAAO,EAAE,CAAC;IAC5C,CAAC;IAlBD,oBAkBC","file":"testViewModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { ViewModel } from 'vs/editor/common/viewModel/viewModelImpl';\nimport { TestConfiguration } from 'vs/editor/test/browser/config/testConfiguration';\nimport { MonospaceLineBreaksComputerFactory } from 'vs/editor/common/viewModel/monospaceLineBreaksComputer';\nimport { createTextModel } from 'vs/editor/test/common/testTextModel';\nimport { TestLanguageConfigurationService } from 'vs/editor/test/common/modes/testLanguageConfigurationService';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\n\nexport function testViewModel(text: string[], options: IEditorOptions, callback: (viewModel: ViewModel, model: TextModel) => void): void {\n\tconst EDITOR_ID = 1;\n\n\tconst configuration = new TestConfiguration(options);\n\tconst model = createTextModel(text.join('\\n'));\n\tconst monospaceLineBreaksComputerFactory = MonospaceLineBreaksComputerFactory.create(configuration.options);\n\tconst testLanguageConfigurationService = new TestLanguageConfigurationService();\n\tconst viewModel = new ViewModel(EDITOR_ID, configuration, model, monospaceLineBreaksComputerFactory, monospaceLineBreaksComputerFactory, null!, testLanguageConfigurationService, new TestThemeService(), {\n\t\tsetVisibleLines(visibleLines, stabilized) {\n\t\t},\n\t});\n\n\tcallback(viewModel, model);\n\n\tviewModel.dispose();\n\tmodel.dispose();\n\tconfiguration.dispose();\n\ttestLanguageConfigurationService.dispose();\n}\n"]}