{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/test/browser/services/openerService.test.ts"],"names":[],"mappings":"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","file":"openerService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { OpenerService } from 'vs/editor/browser/services/openerService';\nimport { TestCodeEditorService } from 'vs/editor/test/browser/editorTestServices';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { NullCommandService } from 'vs/platform/commands/test/common/nullCommandService';\nimport { ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { matchesScheme, matchesSomeScheme } from 'vs/platform/opener/common/opener';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\n\nsuite('OpenerService', function () {\n\tconst themeService = new TestThemeService();\n\tconst editorService = new TestCodeEditorService(themeService);\n\n\tlet lastCommand: { id: string; args: any[] } | undefined;\n\n\tconst commandService = new (class implements ICommandService {\n\t\tdeclare readonly _serviceBrand: undefined;\n\t\tonWillExecuteCommand = () => Disposable.None;\n\t\tonDidExecuteCommand = () => Disposable.None;\n\t\texecuteCommand(id: string, ...args: any[]): Promise<any> {\n\t\t\tlastCommand = { id, args };\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t})();\n\n\tsetup(function () {\n\t\tlastCommand = undefined;\n\t});\n\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('delegate to editorService, scheme:///fff', async function () {\n\t\tconst openerService = new OpenerService(editorService, NullCommandService);\n\t\tawait openerService.open(URI.parse('another:///somepath'));\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection, undefined);\n\t});\n\n\ttest('delegate to editorService, scheme:///fff#L123', async function () {\n\t\tconst openerService = new OpenerService(editorService, NullCommandService);\n\n\t\tawait openerService.open(URI.parse('file:///somepath#L23'));\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startLineNumber, 23);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startColumn, 1);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endLineNumber, undefined);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endColumn, undefined);\n\t\tassert.strictEqual(editorService.lastInput!.resource.fragment, '');\n\n\t\tawait openerService.open(URI.parse('another:///somepath#L23'));\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startLineNumber, 23);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startColumn, 1);\n\n\t\tawait openerService.open(URI.parse('another:///somepath#L23,45'));\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startLineNumber, 23);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startColumn, 45);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endLineNumber, undefined);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endColumn, undefined);\n\t\tassert.strictEqual(editorService.lastInput!.resource.fragment, '');\n\t});\n\n\ttest('delegate to editorService, scheme:///fff#123,123', async function () {\n\t\tconst openerService = new OpenerService(editorService, NullCommandService);\n\n\t\tawait openerService.open(URI.parse('file:///somepath#23'));\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startLineNumber, 23);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startColumn, 1);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endLineNumber, undefined);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endColumn, undefined);\n\t\tassert.strictEqual(editorService.lastInput!.resource.fragment, '');\n\n\t\tawait openerService.open(URI.parse('file:///somepath#23,45'));\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startLineNumber, 23);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.startColumn, 45);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endLineNumber, undefined);\n\t\tassert.strictEqual((editorService.lastInput!.options as ITextEditorOptions)!.selection!.endColumn, undefined);\n\t\tassert.strictEqual(editorService.lastInput!.resource.fragment, '');\n\t});\n\n\ttest('delegate to commandsService, command:someid', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tconst id = `aCommand${Math.random()}`;\n\t\tstore.add(CommandsRegistry.registerCommand(id, function () { }));\n\n\t\tassert.strictEqual(lastCommand, undefined);\n\t\tawait openerService.open(URI.parse('command:' + id));\n\t\tassert.strictEqual(lastCommand, undefined);\n\t});\n\n\n\ttest('delegate to commandsService, command:someid, 2', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tconst id = `aCommand${Math.random()}`;\n\t\tstore.add(CommandsRegistry.registerCommand(id, function () { }));\n\n\t\tawait openerService.open(URI.parse('command:' + id).with({ query: '\\\"123\\\"' }), { allowCommands: true });\n\t\tassert.strictEqual(lastCommand!.id, id);\n\t\tassert.strictEqual(lastCommand!.args.length, 1);\n\t\tassert.strictEqual(lastCommand!.args[0], '123');\n\n\t\tawait openerService.open(URI.parse('command:' + id), { allowCommands: true });\n\t\tassert.strictEqual(lastCommand!.id, id);\n\t\tassert.strictEqual(lastCommand!.args.length, 0);\n\n\t\tawait openerService.open(URI.parse('command:' + id).with({ query: '123' }), { allowCommands: true });\n\t\tassert.strictEqual(lastCommand!.id, id);\n\t\tassert.strictEqual(lastCommand!.args.length, 1);\n\t\tassert.strictEqual(lastCommand!.args[0], 123);\n\n\t\tawait openerService.open(URI.parse('command:' + id).with({ query: JSON.stringify([12, true]) }), { allowCommands: true });\n\t\tassert.strictEqual(lastCommand!.id, id);\n\t\tassert.strictEqual(lastCommand!.args.length, 2);\n\t\tassert.strictEqual(lastCommand!.args[0], 12);\n\t\tassert.strictEqual(lastCommand!.args[1], true);\n\t});\n\n\ttest('links are protected by validators', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tstore.add(openerService.registerValidator({ shouldOpen: () => Promise.resolve(false) }));\n\n\t\tconst httpResult = await openerService.open(URI.parse('https://www.microsoft.com'));\n\t\tconst httpsResult = await openerService.open(URI.parse('https://www.microsoft.com'));\n\t\tassert.strictEqual(httpResult, false);\n\t\tassert.strictEqual(httpsResult, false);\n\t});\n\n\ttest('links validated by validators go to openers', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tstore.add(openerService.registerValidator({ shouldOpen: () => Promise.resolve(true) }));\n\n\t\tlet openCount = 0;\n\t\tstore.add(openerService.registerOpener({\n\t\t\topen: (resource: URI) => {\n\t\t\t\topenCount++;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t}));\n\n\t\tawait openerService.open(URI.parse('http://microsoft.com'));\n\t\tassert.strictEqual(openCount, 1);\n\t\tawait openerService.open(URI.parse('https://microsoft.com'));\n\t\tassert.strictEqual(openCount, 2);\n\t});\n\n\ttest('links aren\\'t manipulated before being passed to validator: PR #118226', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tstore.add(openerService.registerValidator({\n\t\t\tshouldOpen: (resource) => {\n\t\t\t\t// We don't want it to convert strings into URIs\n\t\t\t\tassert.strictEqual(resource instanceof URI, false);\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\t\t}));\n\t\tawait openerService.open('https://wwww.microsoft.com');\n\t\tawait openerService.open('https://www.microsoft.com??params=CountryCode%3DUSA%26Name%3Dvscode\"');\n\t});\n\n\ttest('links validated by multiple validators', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tlet v1 = 0;\n\t\topenerService.registerValidator({\n\t\t\tshouldOpen: () => {\n\t\t\t\tv1++;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t});\n\n\t\tlet v2 = 0;\n\t\topenerService.registerValidator({\n\t\t\tshouldOpen: () => {\n\t\t\t\tv2++;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t});\n\n\t\tlet openCount = 0;\n\t\topenerService.registerOpener({\n\t\t\topen: (resource: URI) => {\n\t\t\t\topenCount++;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t});\n\n\t\tawait openerService.open(URI.parse('http://microsoft.com'));\n\t\tassert.strictEqual(openCount, 1);\n\t\tassert.strictEqual(v1, 1);\n\t\tassert.strictEqual(v2, 1);\n\t\tawait openerService.open(URI.parse('https://microsoft.com'));\n\t\tassert.strictEqual(openCount, 2);\n\t\tassert.strictEqual(v1, 2);\n\t\tassert.strictEqual(v2, 2);\n\t});\n\n\ttest('links invalidated by first validator do not continue validating', async function () {\n\t\tconst openerService = new OpenerService(editorService, commandService);\n\n\t\tlet v1 = 0;\n\t\topenerService.registerValidator({\n\t\t\tshouldOpen: () => {\n\t\t\t\tv1++;\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\t\t});\n\n\t\tlet v2 = 0;\n\t\topenerService.registerValidator({\n\t\t\tshouldOpen: () => {\n\t\t\t\tv2++;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t});\n\n\t\tlet openCount = 0;\n\t\topenerService.registerOpener({\n\t\t\topen: (resource: URI) => {\n\t\t\t\topenCount++;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t});\n\n\t\tawait openerService.open(URI.parse('http://microsoft.com'));\n\t\tassert.strictEqual(openCount, 0);\n\t\tassert.strictEqual(v1, 1);\n\t\tassert.strictEqual(v2, 0);\n\t\tawait openerService.open(URI.parse('https://microsoft.com'));\n\t\tassert.strictEqual(openCount, 0);\n\t\tassert.strictEqual(v1, 2);\n\t\tassert.strictEqual(v2, 0);\n\t});\n\n\ttest('matchesScheme', function () {\n\t\tassert.ok(matchesScheme('https://microsoft.com', 'https'));\n\t\tassert.ok(matchesScheme('http://microsoft.com', 'http'));\n\t\tassert.ok(matchesScheme('hTTPs://microsoft.com', 'https'));\n\t\tassert.ok(matchesScheme('httP://microsoft.com', 'http'));\n\t\tassert.ok(matchesScheme(URI.parse('https://microsoft.com'), 'https'));\n\t\tassert.ok(matchesScheme(URI.parse('http://microsoft.com'), 'http'));\n\t\tassert.ok(matchesScheme(URI.parse('hTTPs://microsoft.com'), 'https'));\n\t\tassert.ok(matchesScheme(URI.parse('httP://microsoft.com'), 'http'));\n\t\tassert.ok(!matchesScheme(URI.parse('https://microsoft.com'), 'http'));\n\t\tassert.ok(!matchesScheme(URI.parse('htt://microsoft.com'), 'http'));\n\t\tassert.ok(!matchesScheme(URI.parse('z://microsoft.com'), 'http'));\n\t});\n\n\ttest('matchesSomeScheme', function () {\n\t\tassert.ok(matchesSomeScheme('https://microsoft.com', 'http', 'https'));\n\t\tassert.ok(matchesSomeScheme('http://microsoft.com', 'http', 'https'));\n\t\tassert.ok(!matchesSomeScheme('x://microsoft.com', 'http', 'https'));\n\t});\n\n\ttest('resolveExternalUri', async function () {\n\t\tconst openerService = new OpenerService(editorService, NullCommandService);\n\n\t\ttry {\n\t\t\tawait openerService.resolveExternalUri(URI.parse('file:///Users/user/folder'));\n\t\t\tassert.fail('Should not reach here');\n\t\t} catch {\n\t\t\t// OK\n\t\t}\n\n\t\tconst disposable = openerService.registerExternalUriResolver({\n\t\t\tasync resolveExternalUri(uri) {\n\t\t\t\treturn { resolved: uri, dispose() { } };\n\t\t\t}\n\t\t});\n\n\t\tconst result = await openerService.resolveExternalUri(URI.parse('file:///Users/user/folder'));\n\t\tassert.deepStrictEqual(result.resolved.toString(), 'file:///Users/user/folder');\n\t\tdisposable.dispose();\n\t});\n\n\ttest('vscode.open command can\\'t open HTTP URL with hash (#) in it [extension development] #140907', async function () {\n\t\tconst openerService = new OpenerService(editorService, NullCommandService);\n\n\t\tconst actual: string[] = [];\n\n\t\topenerService.setDefaultExternalOpener({\n\t\t\tasync openExternal(href) {\n\t\t\t\tactual.push(href);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tconst href = 'https://gitlab.com/viktomas/test-project/merge_requests/new?merge_request%5Bsource_branch%5D=test-%23-hash';\n\t\tconst uri = URI.parse(href);\n\n\t\tassert.ok(await openerService.open(uri));\n\t\tassert.ok(await openerService.open(href));\n\n\t\tassert.deepStrictEqual(actual, [\n\t\t\tencodeURI(uri.toString(true)), // BAD, the encoded # (%23) is double encoded to %2523 (% is double encoded)\n\t\t\thref // good\n\t\t]);\n\t});\n});\n"]}