{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/browser/config/fontMeasurements.ts"],"names":[],"mappings":"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","file":"fontMeasurements.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from 'vs/base/browser/browser';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { CharWidthRequest, CharWidthRequestType, readCharWidths } from 'vs/editor/browser/config/charWidthReader';\nimport { EditorFontLigatures } from 'vs/editor/common/config/editorOptions';\nimport { BareFontInfo, FontInfo, SERIALIZED_FONT_INFO_VERSION } from 'vs/editor/common/config/fontInfo';\n\n/**\n * Serializable font information.\n */\nexport interface ISerializedFontInfo {\n\treadonly version: number;\n\treadonly pixelRatio: number;\n\treadonly fontFamily: string;\n\treadonly fontWeight: string;\n\treadonly fontSize: number;\n\treadonly fontFeatureSettings: string;\n\treadonly fontVariationSettings: string;\n\treadonly lineHeight: number;\n\treadonly letterSpacing: number;\n\treadonly isMonospace: boolean;\n\treadonly typicalHalfwidthCharacterWidth: number;\n\treadonly typicalFullwidthCharacterWidth: number;\n\treadonly canUseHalfwidthRightwardsArrow: boolean;\n\treadonly spaceWidth: number;\n\treadonly middotWidth: number;\n\treadonly wsmiddotWidth: number;\n\treadonly maxDigitWidth: number;\n}\n\nexport class FontMeasurementsImpl extends Disposable {\n\n\tprivate _cache: FontMeasurementsCache;\n\tprivate _evictUntrustedReadingsTimeout: number;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\tpublic readonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._cache = new FontMeasurementsCache();\n\t\tthis._evictUntrustedReadingsTimeout = -1;\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._evictUntrustedReadingsTimeout !== -1) {\n\t\t\twindow.clearTimeout(this._evictUntrustedReadingsTimeout);\n\t\t\tthis._evictUntrustedReadingsTimeout = -1;\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * Clear all cached font information and trigger a change event.\n\t */\n\tpublic clearAllFontInfos(): void {\n\t\tthis._cache = new FontMeasurementsCache();\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate _writeToCache(item: BareFontInfo, value: FontInfo): void {\n\t\tthis._cache.put(item, value);\n\n\t\tif (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n\t\t\t// Try reading again after some time\n\t\t\tthis._evictUntrustedReadingsTimeout = window.setTimeout(() => {\n\t\t\t\tthis._evictUntrustedReadingsTimeout = -1;\n\t\t\t\tthis._evictUntrustedReadings();\n\t\t\t}, 5000);\n\t\t}\n\t}\n\n\tprivate _evictUntrustedReadings(): void {\n\t\tconst values = this._cache.getValues();\n\t\tlet somethingRemoved = false;\n\t\tfor (const item of values) {\n\t\t\tif (!item.isTrusted) {\n\t\t\t\tsomethingRemoved = true;\n\t\t\t\tthis._cache.remove(item);\n\t\t\t}\n\t\t}\n\t\tif (somethingRemoved) {\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n\n\t/**\n\t * Serialized currently cached font information.\n\t */\n\tpublic serializeFontInfo(): ISerializedFontInfo[] {\n\t\t// Only save trusted font info (that has been measured in this running instance)\n\t\treturn this._cache.getValues().filter(item => item.isTrusted);\n\t}\n\n\t/**\n\t * Restore previously serialized font informations.\n\t */\n\tpublic restoreFontInfo(savedFontInfos: ISerializedFontInfo[]): void {\n\t\t// Take all the saved font info and insert them in the cache without the trusted flag.\n\t\t// The reason for this is that a font might have been installed on the OS in the meantime.\n\t\tfor (const savedFontInfo of savedFontInfos) {\n\t\t\tif (savedFontInfo.version !== SERIALIZED_FONT_INFO_VERSION) {\n\t\t\t\t// cannot use older version\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst fontInfo = new FontInfo(savedFontInfo, false);\n\t\t\tthis._writeToCache(fontInfo, fontInfo);\n\t\t}\n\t}\n\n\t/**\n\t * Read font information.\n\t */\n\tpublic readFontInfo(bareFontInfo: BareFontInfo): FontInfo {\n\t\tif (!this._cache.has(bareFontInfo)) {\n\t\t\tlet readConfig = this._actualReadFontInfo(bareFontInfo);\n\n\t\t\tif (readConfig.typicalHalfwidthCharacterWidth <= 2 || readConfig.typicalFullwidthCharacterWidth <= 2 || readConfig.spaceWidth <= 2 || readConfig.maxDigitWidth <= 2) {\n\t\t\t\t// Hey, it's Bug 14341 ... we couldn't read\n\t\t\t\treadConfig = new FontInfo({\n\t\t\t\t\tpixelRatio: browser.PixelRatio.value,\n\t\t\t\t\tfontFamily: readConfig.fontFamily,\n\t\t\t\t\tfontWeight: readConfig.fontWeight,\n\t\t\t\t\tfontSize: readConfig.fontSize,\n\t\t\t\t\tfontFeatureSettings: readConfig.fontFeatureSettings,\n\t\t\t\t\tfontVariationSettings: readConfig.fontVariationSettings,\n\t\t\t\t\tlineHeight: readConfig.lineHeight,\n\t\t\t\t\tletterSpacing: readConfig.letterSpacing,\n\t\t\t\t\tisMonospace: readConfig.isMonospace,\n\t\t\t\t\ttypicalHalfwidthCharacterWidth: Math.max(readConfig.typicalHalfwidthCharacterWidth, 5),\n\t\t\t\t\ttypicalFullwidthCharacterWidth: Math.max(readConfig.typicalFullwidthCharacterWidth, 5),\n\t\t\t\t\tcanUseHalfwidthRightwardsArrow: readConfig.canUseHalfwidthRightwardsArrow,\n\t\t\t\t\tspaceWidth: Math.max(readConfig.spaceWidth, 5),\n\t\t\t\t\tmiddotWidth: Math.max(readConfig.middotWidth, 5),\n\t\t\t\t\twsmiddotWidth: Math.max(readConfig.wsmiddotWidth, 5),\n\t\t\t\t\tmaxDigitWidth: Math.max(readConfig.maxDigitWidth, 5),\n\t\t\t\t}, false);\n\t\t\t}\n\n\t\t\tthis._writeToCache(bareFontInfo, readConfig);\n\t\t}\n\t\treturn this._cache.get(bareFontInfo);\n\t}\n\n\tprivate _createRequest(chr: string, type: CharWidthRequestType, all: CharWidthRequest[], monospace: CharWidthRequest[] | null): CharWidthRequest {\n\t\tconst result = new CharWidthRequest(chr, type);\n\t\tall.push(result);\n\t\tmonospace?.push(result);\n\t\treturn result;\n\t}\n\n\tprivate _actualReadFontInfo(bareFontInfo: BareFontInfo): FontInfo {\n\t\tconst all: CharWidthRequest[] = [];\n\t\tconst monospace: CharWidthRequest[] = [];\n\n\t\tconst typicalHalfwidthCharacter = this._createRequest('n', CharWidthRequestType.Regular, all, monospace);\n\t\tconst typicalFullwidthCharacter = this._createRequest('\\uff4d', CharWidthRequestType.Regular, all, null);\n\t\tconst space = this._createRequest(' ', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit0 = this._createRequest('0', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit1 = this._createRequest('1', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit2 = this._createRequest('2', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit3 = this._createRequest('3', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit4 = this._createRequest('4', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit5 = this._createRequest('5', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit6 = this._createRequest('6', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit7 = this._createRequest('7', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit8 = this._createRequest('8', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit9 = this._createRequest('9', CharWidthRequestType.Regular, all, monospace);\n\n\t\t// monospace test: used for whitespace rendering\n\t\tconst rightwardsArrow = this._createRequest('→', CharWidthRequestType.Regular, all, monospace);\n\t\tconst halfwidthRightwardsArrow = this._createRequest('￫', CharWidthRequestType.Regular, all, null);\n\n\t\t// U+00B7 - MIDDLE DOT\n\t\tconst middot = this._createRequest('·', CharWidthRequestType.Regular, all, monospace);\n\n\t\t// U+2E31 - WORD SEPARATOR MIDDLE DOT\n\t\tconst wsmiddotWidth = this._createRequest(String.fromCharCode(0x2E31), CharWidthRequestType.Regular, all, null);\n\n\t\t// monospace test: some characters\n\t\tconst monospaceTestChars = '|/-_ilm%';\n\t\tfor (let i = 0, len = monospaceTestChars.length; i < len; i++) {\n\t\t\tthis._createRequest(monospaceTestChars.charAt(i), CharWidthRequestType.Regular, all, monospace);\n\t\t\tthis._createRequest(monospaceTestChars.charAt(i), CharWidthRequestType.Italic, all, monospace);\n\t\t\tthis._createRequest(monospaceTestChars.charAt(i), CharWidthRequestType.Bold, all, monospace);\n\t\t}\n\n\t\treadCharWidths(bareFontInfo, all);\n\n\t\tconst maxDigitWidth = Math.max(digit0.width, digit1.width, digit2.width, digit3.width, digit4.width, digit5.width, digit6.width, digit7.width, digit8.width, digit9.width);\n\n\t\tlet isMonospace = (bareFontInfo.fontFeatureSettings === EditorFontLigatures.OFF);\n\t\tconst referenceWidth = monospace[0].width;\n\t\tfor (let i = 1, len = monospace.length; isMonospace && i < len; i++) {\n\t\t\tconst diff = referenceWidth - monospace[i].width;\n\t\t\tif (diff < -0.001 || diff > 0.001) {\n\t\t\t\tisMonospace = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet canUseHalfwidthRightwardsArrow = true;\n\t\tif (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n\t\t\t// using a halfwidth rightwards arrow would break monospace...\n\t\t\tcanUseHalfwidthRightwardsArrow = false;\n\t\t}\n\t\tif (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n\t\t\t// using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n\t\t\tcanUseHalfwidthRightwardsArrow = false;\n\t\t}\n\n\t\treturn new FontInfo({\n\t\t\tpixelRatio: browser.PixelRatio.value,\n\t\t\tfontFamily: bareFontInfo.fontFamily,\n\t\t\tfontWeight: bareFontInfo.fontWeight,\n\t\t\tfontSize: bareFontInfo.fontSize,\n\t\t\tfontFeatureSettings: bareFontInfo.fontFeatureSettings,\n\t\t\tfontVariationSettings: bareFontInfo.fontVariationSettings,\n\t\t\tlineHeight: bareFontInfo.lineHeight,\n\t\t\tletterSpacing: bareFontInfo.letterSpacing,\n\t\t\tisMonospace: isMonospace,\n\t\t\ttypicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n\t\t\ttypicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n\t\t\tcanUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n\t\t\tspaceWidth: space.width,\n\t\t\tmiddotWidth: middot.width,\n\t\t\twsmiddotWidth: wsmiddotWidth.width,\n\t\t\tmaxDigitWidth: maxDigitWidth\n\t\t}, true);\n\t}\n}\n\nclass FontMeasurementsCache {\n\n\tprivate readonly _keys: { [key: string]: BareFontInfo };\n\tprivate readonly _values: { [key: string]: FontInfo };\n\n\tconstructor() {\n\t\tthis._keys = Object.create(null);\n\t\tthis._values = Object.create(null);\n\t}\n\n\tpublic has(item: BareFontInfo): boolean {\n\t\tconst itemId = item.getId();\n\t\treturn !!this._values[itemId];\n\t}\n\n\tpublic get(item: BareFontInfo): FontInfo {\n\t\tconst itemId = item.getId();\n\t\treturn this._values[itemId];\n\t}\n\n\tpublic put(item: BareFontInfo, value: FontInfo): void {\n\t\tconst itemId = item.getId();\n\t\tthis._keys[itemId] = item;\n\t\tthis._values[itemId] = value;\n\t}\n\n\tpublic remove(item: BareFontInfo): void {\n\t\tconst itemId = item.getId();\n\t\tdelete this._keys[itemId];\n\t\tdelete this._values[itemId];\n\t}\n\n\tpublic getValues(): FontInfo[] {\n\t\treturn Object.keys(this._keys).map(id => this._values[id]);\n\t}\n}\n\nexport const FontMeasurements = new FontMeasurementsImpl();\n"]}