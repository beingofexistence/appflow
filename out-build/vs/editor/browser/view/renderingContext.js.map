{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/browser/view/renderingContext.ts"],"names":[],"mappings":"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","file":"renderingContext.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ViewportData } from 'vs/editor/common/viewLayout/viewLinesViewportData';\nimport { IViewLayout, ViewModelDecoration } from 'vs/editor/common/viewModel';\n\nexport interface IViewLines {\n\tlinesVisibleRangesForRange(range: Range, includeNewLines: boolean): LineVisibleRanges[] | null;\n\tvisibleRangeForPosition(position: Position): HorizontalPosition | null;\n}\n\nexport abstract class RestrictedRenderingContext {\n\t_restrictedRenderingContextBrand: void = undefined;\n\n\tpublic readonly viewportData: ViewportData;\n\n\tpublic readonly scrollWidth: number;\n\tpublic readonly scrollHeight: number;\n\n\tpublic readonly visibleRange: Range;\n\tpublic readonly bigNumbersDelta: number;\n\n\tpublic readonly scrollTop: number;\n\tpublic readonly scrollLeft: number;\n\n\tpublic readonly viewportWidth: number;\n\tpublic readonly viewportHeight: number;\n\n\tprivate readonly _viewLayout: IViewLayout;\n\n\tconstructor(viewLayout: IViewLayout, viewportData: ViewportData) {\n\t\tthis._viewLayout = viewLayout;\n\t\tthis.viewportData = viewportData;\n\n\t\tthis.scrollWidth = this._viewLayout.getScrollWidth();\n\t\tthis.scrollHeight = this._viewLayout.getScrollHeight();\n\n\t\tthis.visibleRange = this.viewportData.visibleRange;\n\t\tthis.bigNumbersDelta = this.viewportData.bigNumbersDelta;\n\n\t\tconst vInfo = this._viewLayout.getCurrentViewport();\n\t\tthis.scrollTop = vInfo.top;\n\t\tthis.scrollLeft = vInfo.left;\n\t\tthis.viewportWidth = vInfo.width;\n\t\tthis.viewportHeight = vInfo.height;\n\t}\n\n\tpublic getScrolledTopFromAbsoluteTop(absoluteTop: number): number {\n\t\treturn absoluteTop - this.scrollTop;\n\t}\n\n\tpublic getVerticalOffsetForLineNumber(lineNumber: number, includeViewZones?: boolean): number {\n\t\treturn this._viewLayout.getVerticalOffsetForLineNumber(lineNumber, includeViewZones);\n\t}\n\n\tpublic getVerticalOffsetAfterLineNumber(lineNumber: number, includeViewZones?: boolean): number {\n\t\treturn this._viewLayout.getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones);\n\t}\n\n\tpublic getDecorationsInViewport(): ViewModelDecoration[] {\n\t\treturn this.viewportData.getDecorationsInViewport();\n\t}\n\n}\n\nexport class RenderingContext extends RestrictedRenderingContext {\n\t_renderingContextBrand: void = undefined;\n\n\tprivate readonly _viewLines: IViewLines;\n\n\tconstructor(viewLayout: IViewLayout, viewportData: ViewportData, viewLines: IViewLines) {\n\t\tsuper(viewLayout, viewportData);\n\t\tthis._viewLines = viewLines;\n\t}\n\n\tpublic linesVisibleRangesForRange(range: Range, includeNewLines: boolean): LineVisibleRanges[] | null {\n\t\treturn this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\n\t}\n\n\tpublic visibleRangeForPosition(position: Position): HorizontalPosition | null {\n\t\treturn this._viewLines.visibleRangeForPosition(position);\n\t}\n}\n\nexport class LineVisibleRanges {\n\t/**\n\t * Returns the element with the smallest `lineNumber`.\n\t */\n\tpublic static firstLine(ranges: LineVisibleRanges[] | null): LineVisibleRanges | null {\n\t\tif (!ranges) {\n\t\t\treturn null;\n\t\t}\n\t\tlet result: LineVisibleRanges | null = null;\n\t\tfor (const range of ranges) {\n\t\t\tif (!result || range.lineNumber < result.lineNumber) {\n\t\t\t\tresult = range;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns the element with the largest `lineNumber`.\n\t */\n\tpublic static lastLine(ranges: LineVisibleRanges[] | null): LineVisibleRanges | null {\n\t\tif (!ranges) {\n\t\t\treturn null;\n\t\t}\n\t\tlet result: LineVisibleRanges | null = null;\n\t\tfor (const range of ranges) {\n\t\t\tif (!result || range.lineNumber > result.lineNumber) {\n\t\t\t\tresult = range;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tconstructor(\n\t\tpublic readonly outsideRenderedLine: boolean,\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly ranges: HorizontalRange[],\n\t\t/**\n\t\t * Indicates if the requested range does not end in this line, but continues on the next line.\n\t\t */\n\t\tpublic readonly continuesOnNextLine: boolean,\n\t) { }\n}\n\nexport class HorizontalRange {\n\t_horizontalRangeBrand: void = undefined;\n\n\tpublic left: number;\n\tpublic width: number;\n\n\tpublic static from(ranges: FloatHorizontalRange[]): HorizontalRange[] {\n\t\tconst result = new Array(ranges.length);\n\t\tfor (let i = 0, len = ranges.length; i < len; i++) {\n\t\t\tconst range = ranges[i];\n\t\t\tresult[i] = new HorizontalRange(range.left, range.width);\n\t\t}\n\t\treturn result;\n\t}\n\n\tconstructor(left: number, width: number) {\n\t\tthis.left = Math.round(left);\n\t\tthis.width = Math.round(width);\n\t}\n\n\tpublic toString(): string {\n\t\treturn `[${this.left},${this.width}]`;\n\t}\n}\n\nexport class FloatHorizontalRange {\n\t_floatHorizontalRangeBrand: void = undefined;\n\n\tpublic left: number;\n\tpublic width: number;\n\n\tconstructor(left: number, width: number) {\n\t\tthis.left = left;\n\t\tthis.width = width;\n\t}\n\n\tpublic toString(): string {\n\t\treturn `[${this.left},${this.width}]`;\n\t}\n\n\tpublic static compare(a: FloatHorizontalRange, b: FloatHorizontalRange): number {\n\t\treturn a.left - b.left;\n\t}\n}\n\nexport class HorizontalPosition {\n\tpublic outsideRenderedLine: boolean;\n\t/**\n\t * Math.round(this.originalLeft)\n\t */\n\tpublic left: number;\n\tpublic originalLeft: number;\n\n\tconstructor(outsideRenderedLine: boolean, left: number) {\n\t\tthis.outsideRenderedLine = outsideRenderedLine;\n\t\tthis.originalLeft = left;\n\t\tthis.left = Math.round(this.originalLeft);\n\t}\n}\n\nexport class VisibleRanges {\n\tconstructor(\n\t\tpublic readonly outsideRenderedLine: boolean,\n\t\tpublic readonly ranges: FloatHorizontalRange[]\n\t) {\n\t}\n}\n"]}