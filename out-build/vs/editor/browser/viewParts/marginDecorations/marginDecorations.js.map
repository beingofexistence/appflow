{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/browser/viewParts/marginDecorations/marginDecorations.ts"],"names":[],"mappings":"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","file":"marginDecorations.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./marginDecorations';\nimport { DecorationToRender, DedupOverlay } from 'vs/editor/browser/viewParts/glyphMargin/glyphMargin';\nimport { RenderingContext } from 'vs/editor/browser/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/viewModel/viewContext';\nimport * as viewEvents from 'vs/editor/common/viewEvents';\n\nexport class MarginViewLineDecorationsOverlay extends DedupOverlay {\n\tprivate readonly _context: ViewContext;\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tprotected _getDecorations(ctx: RenderingContext): DecorationToRender[] {\n\t\tconst decorations = ctx.getDecorationsInViewport();\n\t\tconst r: DecorationToRender[] = [];\n\t\tlet rLen = 0;\n\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\tconst d = decorations[i];\n\t\t\tconst marginClassName = d.options.marginClassName;\n\t\t\tconst zIndex = d.options.zIndex;\n\t\t\tif (marginClassName) {\n\t\t\t\tr[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName, zIndex);\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst decorations = toRender[lineIndex].getDecorations();\n\t\t\tlet lineOutput = '';\n\t\t\tfor (const decoration of decorations) {\n\t\t\t\tlineOutput += '<div class=\"cmdr ' + decoration.className + '\" style=\"\"></div>';\n\t\t\t}\n\t\t\toutput[lineIndex] = lineOutput;\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineNumber - startLineNumber];\n\t}\n}\n"]}