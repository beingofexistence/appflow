{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/browser/viewParts/minimap/minimap.ts"],"names":[],"mappings":"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","file":"minimap.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./minimap';\nimport * as dom from 'vs/base/browser/dom';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { GlobalPointerMoveMonitor } from 'vs/base/browser/globalPointerMoveMonitor';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport * as strings from 'vs/base/common/strings';\nimport { ILine, RenderedLinesCollection } from 'vs/editor/browser/view/viewLayer';\nimport { PartFingerprint, PartFingerprints, ViewPart } from 'vs/editor/browser/view/viewPart';\nimport { RenderMinimap, EditorOption, MINIMAP_GUTTER_WIDTH, EditorLayoutInfoComputer } from 'vs/editor/common/config/editorOptions';\nimport { Range } from 'vs/editor/common/core/range';\nimport { RGBA8 } from 'vs/editor/common/core/rgba';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { IEditorConfiguration } from 'vs/editor/common/config/editorConfiguration';\nimport { ColorId } from 'vs/editor/common/encodedTokenAttributes';\nimport { MinimapCharRenderer } from 'vs/editor/browser/viewParts/minimap/minimapCharRenderer';\nimport { Constants } from 'vs/editor/browser/viewParts/minimap/minimapCharSheet';\nimport { MinimapTokensColorTracker } from 'vs/editor/common/viewModel/minimapTokensColorTracker';\nimport { RenderingContext, RestrictedRenderingContext } from 'vs/editor/browser/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/viewModel/viewContext';\nimport { EditorTheme } from 'vs/editor/common/editorTheme';\nimport * as viewEvents from 'vs/editor/common/viewEvents';\nimport { ViewLineData, ViewModelDecoration } from 'vs/editor/common/viewModel';\nimport { minimapSelection, minimapBackground, minimapForegroundOpacity } from 'vs/platform/theme/common/colorRegistry';\nimport { ModelDecorationMinimapOptions } from 'vs/editor/common/model/textModel';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { Color } from 'vs/base/common/color';\nimport { GestureEvent, EventType, Gesture } from 'vs/base/browser/touch';\nimport { MinimapCharRendererFactory } from 'vs/editor/browser/viewParts/minimap/minimapCharRendererFactory';\nimport { MinimapPosition, TextModelResolvedOptions } from 'vs/editor/common/model';\nimport { once } from 'vs/base/common/functional';\n\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\n\nconst GUTTER_DECORATION_WIDTH = 2;\n\nclass MinimapOptions {\n\n\tpublic readonly renderMinimap: RenderMinimap;\n\tpublic readonly size: 'proportional' | 'fill' | 'fit';\n\tpublic readonly minimapHeightIsEditorHeight: boolean;\n\tpublic readonly scrollBeyondLastLine: boolean;\n\tpublic readonly paddingTop: number;\n\tpublic readonly paddingBottom: number;\n\tpublic readonly showSlider: 'always' | 'mouseover';\n\tpublic readonly autohide: boolean;\n\tpublic readonly pixelRatio: number;\n\tpublic readonly typicalHalfwidthCharacterWidth: number;\n\tpublic readonly lineHeight: number;\n\t/**\n\t * container dom node left position (in CSS px)\n\t */\n\tpublic readonly minimapLeft: number;\n\t/**\n\t * container dom node width (in CSS px)\n\t */\n\tpublic readonly minimapWidth: number;\n\t/**\n\t * container dom node height (in CSS px)\n\t */\n\tpublic readonly minimapHeight: number;\n\t/**\n\t * canvas backing store width (in device px)\n\t */\n\tpublic readonly canvasInnerWidth: number;\n\t/**\n\t * canvas backing store height (in device px)\n\t */\n\tpublic readonly canvasInnerHeight: number;\n\t/**\n\t * canvas width (in CSS px)\n\t */\n\tpublic readonly canvasOuterWidth: number;\n\t/**\n\t * canvas height (in CSS px)\n\t */\n\tpublic readonly canvasOuterHeight: number;\n\n\tpublic readonly isSampling: boolean;\n\tpublic readonly editorHeight: number;\n\tpublic readonly fontScale: number;\n\tpublic readonly minimapLineHeight: number;\n\tpublic readonly minimapCharWidth: number;\n\n\tpublic readonly charRenderer: () => MinimapCharRenderer;\n\tpublic readonly defaultBackgroundColor: RGBA8;\n\tpublic readonly backgroundColor: RGBA8;\n\t/**\n\t * foreground alpha: integer in [0-255]\n\t */\n\tpublic readonly foregroundAlpha: number;\n\n\tconstructor(configuration: IEditorConfiguration, theme: EditorTheme, tokensColorTracker: MinimapTokensColorTracker) {\n\t\tconst options = configuration.options;\n\t\tconst pixelRatio = options.get(EditorOption.pixelRatio);\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst minimapLayout = layoutInfo.minimap;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst minimapOpts = options.get(EditorOption.minimap);\n\n\t\tthis.renderMinimap = minimapLayout.renderMinimap;\n\t\tthis.size = minimapOpts.size;\n\t\tthis.minimapHeightIsEditorHeight = minimapLayout.minimapHeightIsEditorHeight;\n\t\tthis.scrollBeyondLastLine = options.get(EditorOption.scrollBeyondLastLine);\n\t\tthis.paddingTop = options.get(EditorOption.padding).top;\n\t\tthis.paddingBottom = options.get(EditorOption.padding).bottom;\n\t\tthis.showSlider = minimapOpts.showSlider;\n\t\tthis.autohide = minimapOpts.autohide;\n\t\tthis.pixelRatio = pixelRatio;\n\t\tthis.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.minimapLeft = minimapLayout.minimapLeft;\n\t\tthis.minimapWidth = minimapLayout.minimapWidth;\n\t\tthis.minimapHeight = layoutInfo.height;\n\n\t\tthis.canvasInnerWidth = minimapLayout.minimapCanvasInnerWidth;\n\t\tthis.canvasInnerHeight = minimapLayout.minimapCanvasInnerHeight;\n\t\tthis.canvasOuterWidth = minimapLayout.minimapCanvasOuterWidth;\n\t\tthis.canvasOuterHeight = minimapLayout.minimapCanvasOuterHeight;\n\n\t\tthis.isSampling = minimapLayout.minimapIsSampling;\n\t\tthis.editorHeight = layoutInfo.height;\n\t\tthis.fontScale = minimapLayout.minimapScale;\n\t\tthis.minimapLineHeight = minimapLayout.minimapLineHeight;\n\t\tthis.minimapCharWidth = Constants.BASE_CHAR_WIDTH * this.fontScale;\n\n\t\tthis.charRenderer = once(() => MinimapCharRendererFactory.create(this.fontScale, fontInfo.fontFamily));\n\t\tthis.defaultBackgroundColor = tokensColorTracker.getColor(ColorId.DefaultBackground);\n\t\tthis.backgroundColor = MinimapOptions._getMinimapBackground(theme, this.defaultBackgroundColor);\n\t\tthis.foregroundAlpha = MinimapOptions._getMinimapForegroundOpacity(theme);\n\t}\n\n\tprivate static _getMinimapBackground(theme: EditorTheme, defaultBackgroundColor: RGBA8): RGBA8 {\n\t\tconst themeColor = theme.getColor(minimapBackground);\n\t\tif (themeColor) {\n\t\t\treturn new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n\t\t}\n\t\treturn defaultBackgroundColor;\n\t}\n\n\tprivate static _getMinimapForegroundOpacity(theme: EditorTheme): number {\n\t\tconst themeColor = theme.getColor(minimapForegroundOpacity);\n\t\tif (themeColor) {\n\t\t\treturn RGBA8._clamp(Math.round(255 * themeColor.rgba.a));\n\t\t}\n\t\treturn 255;\n\t}\n\n\tpublic equals(other: MinimapOptions): boolean {\n\t\treturn (this.renderMinimap === other.renderMinimap\n\t\t\t&& this.size === other.size\n\t\t\t&& this.minimapHeightIsEditorHeight === other.minimapHeightIsEditorHeight\n\t\t\t&& this.scrollBeyondLastLine === other.scrollBeyondLastLine\n\t\t\t&& this.paddingTop === other.paddingTop\n\t\t\t&& this.paddingBottom === other.paddingBottom\n\t\t\t&& this.showSlider === other.showSlider\n\t\t\t&& this.autohide === other.autohide\n\t\t\t&& this.pixelRatio === other.pixelRatio\n\t\t\t&& this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.minimapLeft === other.minimapLeft\n\t\t\t&& this.minimapWidth === other.minimapWidth\n\t\t\t&& this.minimapHeight === other.minimapHeight\n\t\t\t&& this.canvasInnerWidth === other.canvasInnerWidth\n\t\t\t&& this.canvasInnerHeight === other.canvasInnerHeight\n\t\t\t&& this.canvasOuterWidth === other.canvasOuterWidth\n\t\t\t&& this.canvasOuterHeight === other.canvasOuterHeight\n\t\t\t&& this.isSampling === other.isSampling\n\t\t\t&& this.editorHeight === other.editorHeight\n\t\t\t&& this.fontScale === other.fontScale\n\t\t\t&& this.minimapLineHeight === other.minimapLineHeight\n\t\t\t&& this.minimapCharWidth === other.minimapCharWidth\n\t\t\t&& this.defaultBackgroundColor && this.defaultBackgroundColor.equals(other.defaultBackgroundColor)\n\t\t\t&& this.backgroundColor && this.backgroundColor.equals(other.backgroundColor)\n\t\t\t&& this.foregroundAlpha === other.foregroundAlpha\n\t\t);\n\t}\n}\n\nclass MinimapLayout {\n\n\tconstructor(\n\t\t/**\n\t\t * The given editor scrollTop (input).\n\t\t */\n\t\tpublic readonly scrollTop: number,\n\t\t/**\n\t\t * The given editor scrollHeight (input).\n\t\t */\n\t\tpublic readonly scrollHeight: number,\n\t\tpublic readonly sliderNeeded: boolean,\n\t\tprivate readonly _computedSliderRatio: number,\n\t\t/**\n\t\t * slider dom node top (in CSS px)\n\t\t */\n\t\tpublic readonly sliderTop: number,\n\t\t/**\n\t\t * slider dom node height (in CSS px)\n\t\t */\n\t\tpublic readonly sliderHeight: number,\n\t\t/**\n\t\t * empty lines to reserve at the top of the minimap.\n\t\t */\n\t\tpublic readonly topPaddingLineCount: number,\n\t\t/**\n\t\t * minimap render start line number.\n\t\t */\n\t\tpublic readonly startLineNumber: number,\n\t\t/**\n\t\t * minimap render end line number.\n\t\t */\n\t\tpublic readonly endLineNumber: number\n\t) { }\n\n\t/**\n\t * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n\t */\n\tpublic getDesiredScrollTopFromDelta(delta: number): number {\n\t\treturn Math.round(this.scrollTop + delta / this._computedSliderRatio);\n\t}\n\n\tpublic getDesiredScrollTopFromTouchLocation(pageY: number): number {\n\t\treturn Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\n\t}\n\n\t/**\n\t * Intersect a line range with `this.startLineNumber` and `this.endLineNumber`.\n\t */\n\tpublic intersectWithViewport(range: Range): [number, number] | null {\n\t\tconst startLineNumber = Math.max(this.startLineNumber, range.startLineNumber);\n\t\tconst endLineNumber = Math.min(this.endLineNumber, range.endLineNumber);\n\t\tif (startLineNumber > endLineNumber) {\n\t\t\t// entirely outside minimap's viewport\n\t\t\treturn null;\n\t\t}\n\t\treturn [startLineNumber, endLineNumber];\n\t}\n\n\t/**\n\t * Get the inner minimap y coordinate for a line number.\n\t */\n\tpublic getYForLineNumber(lineNumber: number, minimapLineHeight: number): number {\n\t\treturn + (lineNumber - this.startLineNumber + this.topPaddingLineCount) * minimapLineHeight;\n\t}\n\n\tpublic static create(\n\t\toptions: MinimapOptions,\n\t\tviewportStartLineNumber: number,\n\t\tviewportEndLineNumber: number,\n\t\tviewportStartLineNumberVerticalOffset: number,\n\t\tviewportHeight: number,\n\t\tviewportContainsWhitespaceGaps: boolean,\n\t\tlineCount: number,\n\t\trealLineCount: number,\n\t\tscrollTop: number,\n\t\tscrollHeight: number,\n\t\tpreviousLayout: MinimapLayout | null\n\t): MinimapLayout {\n\t\tconst pixelRatio = options.pixelRatio;\n\t\tconst minimapLineHeight = options.minimapLineHeight;\n\t\tconst minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\n\t\tconst lineHeight = options.lineHeight;\n\n\t\tif (options.minimapHeightIsEditorHeight) {\n\t\t\tlet logicalScrollHeight = (\n\t\t\t\trealLineCount * options.lineHeight\n\t\t\t\t+ options.paddingTop\n\t\t\t\t+ options.paddingBottom\n\t\t\t);\n\t\t\tif (options.scrollBeyondLastLine) {\n\t\t\t\tlogicalScrollHeight += Math.max(0, viewportHeight - options.lineHeight - options.paddingBottom);\n\t\t\t}\n\t\t\tconst sliderHeight = Math.max(1, Math.floor(viewportHeight * viewportHeight / logicalScrollHeight));\n\t\t\tconst maxMinimapSliderTop = Math.max(0, options.minimapHeight - sliderHeight);\n\t\t\t// The slider can move from 0 to `maxMinimapSliderTop`\n\t\t\t// in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n\t\t\tconst computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n\t\t\tconst sliderTop = (scrollTop * computedSliderRatio);\n\t\t\tconst sliderNeeded = (maxMinimapSliderTop > 0);\n\t\t\tconst maxLinesFitting = Math.floor(options.canvasInnerHeight / options.minimapLineHeight);\n\t\t\tconst topPaddingLineCount = Math.floor(options.paddingTop / options.lineHeight);\n\t\t\treturn new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, topPaddingLineCount, 1, Math.min(lineCount, maxLinesFitting));\n\t\t}\n\n\t\t// The visible line count in a viewport can change due to a number of reasons:\n\t\t//  a) with the same viewport width, different scroll positions can result in partial lines being visible:\n\t\t//    e.g. for a line height of 20, and a viewport height of 600\n\t\t//          * scrollTop = 0  => visible lines are [1, 30]\n\t\t//          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\n\t\t//          * scrollTop = 20 => visible lines are [2, 31]\n\t\t//  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\n\t\t//  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\n\n\t\t// We must first establish a desirable slider height.\n\t\tlet sliderHeight: number;\n\t\tif (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\n\t\t\t// case b) from above: there are whitespace gaps in the viewport.\n\t\t\t// In this case, the height of the slider directly reflects the visible line count.\n\t\t\tconst viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\n\t\t\tsliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\n\t\t} else {\n\t\t\t// The slider has a stable height\n\t\t\tconst expectedViewportLineCount = viewportHeight / lineHeight;\n\t\t\tsliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\n\t\t}\n\n\t\tconst extraLinesAtTheTop = Math.floor(options.paddingTop / lineHeight);\n\t\tlet extraLinesAtTheBottom = Math.floor(options.paddingBottom / lineHeight);\n\t\tif (options.scrollBeyondLastLine) {\n\t\t\tconst expectedViewportLineCount = viewportHeight / lineHeight;\n\t\t\textraLinesAtTheBottom = Math.max(extraLinesAtTheBottom, expectedViewportLineCount - 1);\n\t\t}\n\n\t\tlet maxMinimapSliderTop: number;\n\t\tif (extraLinesAtTheBottom > 0) {\n\t\t\tconst expectedViewportLineCount = viewportHeight / lineHeight;\n\t\t\t// The minimap slider, when dragged all the way down, will contain the last line at its top\n\t\t\tmaxMinimapSliderTop = (extraLinesAtTheTop + lineCount + extraLinesAtTheBottom - expectedViewportLineCount - 1) * minimapLineHeight / pixelRatio;\n\t\t} else {\n\t\t\t// The minimap slider, when dragged all the way down, will contain the last line at its bottom\n\t\t\tmaxMinimapSliderTop = Math.max(0, (extraLinesAtTheTop + lineCount) * minimapLineHeight / pixelRatio - sliderHeight);\n\t\t}\n\t\tmaxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop);\n\n\t\t// The slider can move from 0 to `maxMinimapSliderTop`\n\t\t// in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n\t\tconst computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n\t\tconst sliderTop = (scrollTop * computedSliderRatio);\n\n\t\tif (minimapLinesFitting >= extraLinesAtTheTop + lineCount + extraLinesAtTheBottom) {\n\t\t\t// All lines fit in the minimap\n\t\t\tconst sliderNeeded = (maxMinimapSliderTop > 0);\n\t\t\treturn new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, extraLinesAtTheTop, 1, lineCount);\n\t\t} else {\n\t\t\tlet consideringStartLineNumber: number;\n\t\t\tif (viewportStartLineNumber > 1) {\n\t\t\t\tconsideringStartLineNumber = viewportStartLineNumber + extraLinesAtTheTop;\n\t\t\t} else {\n\t\t\t\tconsideringStartLineNumber = Math.max(1, scrollTop / lineHeight);\n\t\t\t}\n\n\t\t\tlet topPaddingLineCount: number;\n\t\t\tlet startLineNumber = Math.max(1, Math.floor(consideringStartLineNumber - sliderTop * pixelRatio / minimapLineHeight));\n\t\t\tif (startLineNumber < extraLinesAtTheTop) {\n\t\t\t\ttopPaddingLineCount = extraLinesAtTheTop - startLineNumber + 1;\n\t\t\t\tstartLineNumber = 1;\n\t\t\t} else {\n\t\t\t\ttopPaddingLineCount = 0;\n\t\t\t\tstartLineNumber = Math.max(1, startLineNumber - extraLinesAtTheTop);\n\t\t\t}\n\n\t\t\t// Avoid flickering caused by a partial viewport start line\n\t\t\t// by being consistent w.r.t. the previous layout decision\n\t\t\tif (previousLayout && previousLayout.scrollHeight === scrollHeight) {\n\t\t\t\tif (previousLayout.scrollTop > scrollTop) {\n\t\t\t\t\t// Scrolling up => never increase `startLineNumber`\n\t\t\t\t\tstartLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\n\t\t\t\t\ttopPaddingLineCount = Math.max(topPaddingLineCount, previousLayout.topPaddingLineCount);\n\t\t\t\t}\n\t\t\t\tif (previousLayout.scrollTop < scrollTop) {\n\t\t\t\t\t// Scrolling down => never decrease `startLineNumber`\n\t\t\t\t\tstartLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\n\t\t\t\t\ttopPaddingLineCount = Math.min(topPaddingLineCount, previousLayout.topPaddingLineCount);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst endLineNumber = Math.min(lineCount, startLineNumber - topPaddingLineCount + minimapLinesFitting - 1);\n\t\t\tconst partialLine = (scrollTop - viewportStartLineNumberVerticalOffset) / lineHeight;\n\n\t\t\tlet sliderTopAligned: number;\n\t\t\tif (scrollTop >= options.paddingTop) {\n\t\t\t\tsliderTopAligned = (viewportStartLineNumber - startLineNumber + topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n\t\t\t} else {\n\t\t\t\tsliderTopAligned = (scrollTop / options.paddingTop) * (topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n\t\t\t}\n\n\t\t\treturn new MinimapLayout(scrollTop, scrollHeight, true, computedSliderRatio, sliderTopAligned, sliderHeight, topPaddingLineCount, startLineNumber, endLineNumber);\n\t\t}\n\t}\n}\n\nclass MinimapLine implements ILine {\n\n\tpublic static readonly INVALID = new MinimapLine(-1);\n\n\tdy: number;\n\n\tconstructor(dy: number) {\n\t\tthis.dy = dy;\n\t}\n\n\tpublic onContentChanged(): void {\n\t\tthis.dy = -1;\n\t}\n\n\tpublic onTokensChanged(): void {\n\t\tthis.dy = -1;\n\t}\n}\n\nclass RenderData {\n\t/**\n\t * last rendered layout.\n\t */\n\tpublic readonly renderedLayout: MinimapLayout;\n\tprivate readonly _imageData: ImageData;\n\tprivate readonly _renderedLines: RenderedLinesCollection<MinimapLine>;\n\n\tconstructor(\n\t\trenderedLayout: MinimapLayout,\n\t\timageData: ImageData,\n\t\tlines: MinimapLine[]\n\t) {\n\t\tthis.renderedLayout = renderedLayout;\n\t\tthis._imageData = imageData;\n\t\tthis._renderedLines = new RenderedLinesCollection(\n\t\t\t() => MinimapLine.INVALID\n\t\t);\n\t\tthis._renderedLines._set(renderedLayout.startLineNumber, lines);\n\t}\n\n\t/**\n\t * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\n\t */\n\tpublic linesEquals(layout: MinimapLayout): boolean {\n\t\tif (!this.scrollEquals(layout)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst tmp = this._renderedLines._get();\n\t\tconst lines = tmp.lines;\n\t\tfor (let i = 0, len = lines.length; i < len; i++) {\n\t\t\tif (lines[i].dy === -1) {\n\t\t\t\t// This line is invalid\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Check if the current RenderData matches the new layout's scroll position\n\t */\n\tpublic scrollEquals(layout: MinimapLayout): boolean {\n\t\treturn this.renderedLayout.startLineNumber === layout.startLineNumber\n\t\t\t&& this.renderedLayout.endLineNumber === layout.endLineNumber;\n\t}\n\n\t_get(): { imageData: ImageData; rendLineNumberStart: number; lines: MinimapLine[] } {\n\t\tconst tmp = this._renderedLines._get();\n\t\treturn {\n\t\t\timageData: this._imageData,\n\t\t\trendLineNumberStart: tmp.rendLineNumberStart,\n\t\t\tlines: tmp.lines\n\t\t};\n\t}\n\n\tpublic onLinesChanged(changeFromLineNumber: number, changeCount: number): boolean {\n\t\treturn this._renderedLines.onLinesChanged(changeFromLineNumber, changeCount);\n\t}\n\tpublic onLinesDeleted(deleteFromLineNumber: number, deleteToLineNumber: number): void {\n\t\tthis._renderedLines.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n\t}\n\tpublic onLinesInserted(insertFromLineNumber: number, insertToLineNumber: number): void {\n\t\tthis._renderedLines.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n\t}\n\tpublic onTokensChanged(ranges: { fromLineNumber: number; toLineNumber: number }[]): boolean {\n\t\treturn this._renderedLines.onTokensChanged(ranges);\n\t}\n}\n\n/**\n * Some sort of double buffering.\n *\n * Keeps two buffers around that will be rotated for painting.\n * Always gives a buffer that is filled with the background color.\n */\nclass MinimapBuffers {\n\n\tprivate readonly _backgroundFillData: Uint8ClampedArray;\n\tprivate readonly _buffers: [ImageData, ImageData];\n\tprivate _lastUsedBuffer: number;\n\n\tconstructor(ctx: CanvasRenderingContext2D, WIDTH: number, HEIGHT: number, background: RGBA8) {\n\t\tthis._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\n\t\tthis._buffers = [\n\t\t\tctx.createImageData(WIDTH, HEIGHT),\n\t\t\tctx.createImageData(WIDTH, HEIGHT)\n\t\t];\n\t\tthis._lastUsedBuffer = 0;\n\t}\n\n\tpublic getBuffer(): ImageData {\n\t\t// rotate buffers\n\t\tthis._lastUsedBuffer = 1 - this._lastUsedBuffer;\n\t\tconst result = this._buffers[this._lastUsedBuffer];\n\n\t\t// fill with background color\n\t\tresult.data.set(this._backgroundFillData);\n\n\t\treturn result;\n\t}\n\n\tprivate static _createBackgroundFillData(WIDTH: number, HEIGHT: number, background: RGBA8): Uint8ClampedArray {\n\t\tconst backgroundR = background.r;\n\t\tconst backgroundG = background.g;\n\t\tconst backgroundB = background.b;\n\t\tconst backgroundA = background.a;\n\n\t\tconst result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\n\t\tlet offset = 0;\n\t\tfor (let i = 0; i < HEIGHT; i++) {\n\t\t\tfor (let j = 0; j < WIDTH; j++) {\n\t\t\t\tresult[offset] = backgroundR;\n\t\t\t\tresult[offset + 1] = backgroundG;\n\t\t\t\tresult[offset + 2] = backgroundB;\n\t\t\t\tresult[offset + 3] = backgroundA;\n\t\t\t\toffset += 4;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nexport interface IMinimapModel {\n\treadonly tokensColorTracker: MinimapTokensColorTracker;\n\treadonly options: MinimapOptions;\n\n\tgetLineCount(): number;\n\tgetRealLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineMaxColumn(lineNumber: number): number;\n\tgetMinimapLinesRenderingData(startLineNumber: number, endLineNumber: number, needed: boolean[]): (ViewLineData | null)[];\n\tgetSelections(): Selection[];\n\tgetMinimapDecorationsInViewport(startLineNumber: number, endLineNumber: number): ViewModelDecoration[];\n\tgetOptions(): TextModelResolvedOptions;\n\trevealLineNumber(lineNumber: number): void;\n\tsetScrollTop(scrollTop: number): void;\n}\n\ninterface IMinimapRenderingContext {\n\treadonly viewportContainsWhitespaceGaps: boolean;\n\n\treadonly scrollWidth: number;\n\treadonly scrollHeight: number;\n\n\treadonly viewportStartLineNumber: number;\n\treadonly viewportEndLineNumber: number;\n\treadonly viewportStartLineNumberVerticalOffset: number;\n\n\treadonly scrollTop: number;\n\treadonly scrollLeft: number;\n\n\treadonly viewportWidth: number;\n\treadonly viewportHeight: number;\n}\n\ninterface SamplingStateLinesDeletedEvent {\n\ttype: 'deleted';\n\t_oldIndex: number;\n\tdeleteFromLineNumber: number;\n\tdeleteToLineNumber: number;\n}\n\ninterface SamplingStateLinesInsertedEvent {\n\ttype: 'inserted';\n\t_i: number;\n\tinsertFromLineNumber: number;\n\tinsertToLineNumber: number;\n}\n\ninterface SamplingStateFlushEvent {\n\ttype: 'flush';\n}\n\ntype SamplingStateEvent = SamplingStateLinesInsertedEvent | SamplingStateLinesDeletedEvent | SamplingStateFlushEvent;\n\nclass MinimapSamplingState {\n\n\tpublic static compute(options: MinimapOptions, viewLineCount: number, oldSamplingState: MinimapSamplingState | null): [MinimapSamplingState | null, SamplingStateEvent[]] {\n\t\tif (options.renderMinimap === RenderMinimap.None || !options.isSampling) {\n\t\t\treturn [null, []];\n\t\t}\n\n\t\t// ratio is intentionally not part of the layout to avoid the layout changing all the time\n\t\t// so we need to recompute it again...\n\t\tconst { minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n\t\t\tviewLineCount: viewLineCount,\n\t\t\tscrollBeyondLastLine: options.scrollBeyondLastLine,\n\t\t\tpaddingTop: options.paddingTop,\n\t\t\tpaddingBottom: options.paddingBottom,\n\t\t\theight: options.editorHeight,\n\t\t\tlineHeight: options.lineHeight,\n\t\t\tpixelRatio: options.pixelRatio\n\t\t});\n\t\tconst ratio = viewLineCount / minimapLineCount;\n\t\tconst halfRatio = ratio / 2;\n\n\t\tif (!oldSamplingState || oldSamplingState.minimapLines.length === 0) {\n\t\t\tconst result: number[] = [];\n\t\t\tresult[0] = 1;\n\t\t\tif (minimapLineCount > 1) {\n\t\t\t\tfor (let i = 0, lastIndex = minimapLineCount - 1; i < lastIndex; i++) {\n\t\t\t\t\tresult[i] = Math.round(i * ratio + halfRatio);\n\t\t\t\t}\n\t\t\t\tresult[minimapLineCount - 1] = viewLineCount;\n\t\t\t}\n\t\t\treturn [new MinimapSamplingState(ratio, result), []];\n\t\t}\n\n\t\tconst oldMinimapLines = oldSamplingState.minimapLines;\n\t\tconst oldLength = oldMinimapLines.length;\n\t\tconst result: number[] = [];\n\t\tlet oldIndex = 0;\n\t\tlet oldDeltaLineCount = 0;\n\t\tlet minViewLineNumber = 1;\n\t\tconst MAX_EVENT_COUNT = 10; // generate at most 10 events, if there are more than 10 changes, just flush all previous data\n\t\tlet events: SamplingStateEvent[] = [];\n\t\tlet lastEvent: SamplingStateEvent | null = null;\n\t\tfor (let i = 0; i < minimapLineCount; i++) {\n\t\t\tconst fromViewLineNumber = Math.max(minViewLineNumber, Math.round(i * ratio));\n\t\t\tconst toViewLineNumber = Math.max(fromViewLineNumber, Math.round((i + 1) * ratio));\n\n\t\t\twhile (oldIndex < oldLength && oldMinimapLines[oldIndex] < fromViewLineNumber) {\n\t\t\t\tif (events.length < MAX_EVENT_COUNT) {\n\t\t\t\t\tconst oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n\t\t\t\t\tif (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n\t\t\t\t\t\tlastEvent.deleteToLineNumber++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n\t\t\t\t\t\tevents.push(lastEvent);\n\t\t\t\t\t}\n\t\t\t\t\toldDeltaLineCount--;\n\t\t\t\t}\n\t\t\t\toldIndex++;\n\t\t\t}\n\n\t\t\tlet selectedViewLineNumber: number;\n\t\t\tif (oldIndex < oldLength && oldMinimapLines[oldIndex] <= toViewLineNumber) {\n\t\t\t\t// reuse the old sampled line\n\t\t\t\tselectedViewLineNumber = oldMinimapLines[oldIndex];\n\t\t\t\toldIndex++;\n\t\t\t} else {\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tselectedViewLineNumber = 1;\n\t\t\t\t} else if (i + 1 === minimapLineCount) {\n\t\t\t\t\tselectedViewLineNumber = viewLineCount;\n\t\t\t\t} else {\n\t\t\t\t\tselectedViewLineNumber = Math.round(i * ratio + halfRatio);\n\t\t\t\t}\n\t\t\t\tif (events.length < MAX_EVENT_COUNT) {\n\t\t\t\t\tconst oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n\t\t\t\t\tif (lastEvent && lastEvent.type === 'inserted' && lastEvent._i === i - 1) {\n\t\t\t\t\t\tlastEvent.insertToLineNumber++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastEvent = { type: 'inserted', _i: i, insertFromLineNumber: oldMinimapLineNumber, insertToLineNumber: oldMinimapLineNumber };\n\t\t\t\t\t\tevents.push(lastEvent);\n\t\t\t\t\t}\n\t\t\t\t\toldDeltaLineCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult[i] = selectedViewLineNumber;\n\t\t\tminViewLineNumber = selectedViewLineNumber;\n\t\t}\n\n\t\tif (events.length < MAX_EVENT_COUNT) {\n\t\t\twhile (oldIndex < oldLength) {\n\t\t\t\tconst oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n\t\t\t\tif (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n\t\t\t\t\tlastEvent.deleteToLineNumber++;\n\t\t\t\t} else {\n\t\t\t\t\tlastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n\t\t\t\t\tevents.push(lastEvent);\n\t\t\t\t}\n\t\t\t\toldDeltaLineCount--;\n\t\t\t\toldIndex++;\n\t\t\t}\n\t\t} else {\n\t\t\t// too many events, just give up\n\t\t\tevents = [{ type: 'flush' }];\n\t\t}\n\n\t\treturn [new MinimapSamplingState(ratio, result), events];\n\t}\n\n\tconstructor(\n\t\tpublic readonly samplingRatio: number,\n\t\tpublic readonly minimapLines: number[]\n\t) {\n\t}\n\n\tpublic modelLineToMinimapLine(lineNumber: number): number {\n\t\treturn Math.min(this.minimapLines.length, Math.max(1, Math.round(lineNumber / this.samplingRatio)));\n\t}\n\n\t/**\n\t * Will return null if the model line ranges are not intersecting with a sampled model line.\n\t */\n\tpublic modelLineRangeToMinimapLineRange(fromLineNumber: number, toLineNumber: number): [number, number] | null {\n\t\tlet fromLineIndex = this.modelLineToMinimapLine(fromLineNumber) - 1;\n\t\twhile (fromLineIndex > 0 && this.minimapLines[fromLineIndex - 1] >= fromLineNumber) {\n\t\t\tfromLineIndex--;\n\t\t}\n\t\tlet toLineIndex = this.modelLineToMinimapLine(toLineNumber) - 1;\n\t\twhile (toLineIndex + 1 < this.minimapLines.length && this.minimapLines[toLineIndex + 1] <= toLineNumber) {\n\t\t\ttoLineIndex++;\n\t\t}\n\t\tif (fromLineIndex === toLineIndex) {\n\t\t\tconst sampledLineNumber = this.minimapLines[fromLineIndex];\n\t\t\tif (sampledLineNumber < fromLineNumber || sampledLineNumber > toLineNumber) {\n\t\t\t\t// This line is not part of the sampled lines ==> nothing to do\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn [fromLineIndex + 1, toLineIndex + 1];\n\t}\n\n\t/**\n\t * Will always return a range, even if it is not intersecting with a sampled model line.\n\t */\n\tpublic decorationLineRangeToMinimapLineRange(startLineNumber: number, endLineNumber: number): [number, number] {\n\t\tlet minimapLineStart = this.modelLineToMinimapLine(startLineNumber);\n\t\tlet minimapLineEnd = this.modelLineToMinimapLine(endLineNumber);\n\t\tif (startLineNumber !== endLineNumber && minimapLineEnd === minimapLineStart) {\n\t\t\tif (minimapLineEnd === this.minimapLines.length) {\n\t\t\t\tif (minimapLineStart > 1) {\n\t\t\t\t\tminimapLineStart--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tminimapLineEnd++;\n\t\t\t}\n\t\t}\n\t\treturn [minimapLineStart, minimapLineEnd];\n\t}\n\n\tpublic onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): [number, number] {\n\t\t// have the mapping be sticky\n\t\tconst deletedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n\t\tlet changeStartIndex = this.minimapLines.length;\n\t\tlet changeEndIndex = 0;\n\t\tfor (let i = this.minimapLines.length - 1; i >= 0; i--) {\n\t\t\tif (this.minimapLines[i] < e.fromLineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this.minimapLines[i] <= e.toLineNumber) {\n\t\t\t\t// this line got deleted => move to previous available\n\t\t\t\tthis.minimapLines[i] = Math.max(1, e.fromLineNumber - 1);\n\t\t\t\tchangeStartIndex = Math.min(changeStartIndex, i);\n\t\t\t\tchangeEndIndex = Math.max(changeEndIndex, i);\n\t\t\t} else {\n\t\t\t\tthis.minimapLines[i] -= deletedLineCount;\n\t\t\t}\n\t\t}\n\t\treturn [changeStartIndex, changeEndIndex];\n\t}\n\n\tpublic onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): void {\n\t\t// have the mapping be sticky\n\t\tconst insertedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n\t\tfor (let i = this.minimapLines.length - 1; i >= 0; i--) {\n\t\t\tif (this.minimapLines[i] < e.fromLineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.minimapLines[i] += insertedLineCount;\n\t\t}\n\t}\n}\n\nexport class Minimap extends ViewPart implements IMinimapModel {\n\n\tpublic readonly tokensColorTracker: MinimapTokensColorTracker;\n\n\tprivate _selections: Selection[];\n\tprivate _minimapSelections: Selection[] | null;\n\n\tpublic options: MinimapOptions;\n\n\tprivate _samplingState: MinimapSamplingState | null;\n\tprivate _shouldCheckSampling: boolean;\n\n\tprivate _actual: InnerMinimap;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis.tokensColorTracker = MinimapTokensColorTracker.getInstance();\n\n\t\tthis._selections = [];\n\t\tthis._minimapSelections = null;\n\n\t\tthis.options = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n\t\tconst [samplingState,] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), null);\n\t\tthis._samplingState = samplingState;\n\t\tthis._shouldCheckSampling = false;\n\n\t\tthis._actual = new InnerMinimap(context.theme, this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._actual.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._actual.getDomNode();\n\t}\n\n\tprivate _onOptionsMaybeChanged(): boolean {\n\t\tconst opts = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n\t\tif (this.options.equals(opts)) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.options = opts;\n\t\tthis._recreateLineSampling();\n\t\tthis._actual.onDidChangeOptions();\n\t\treturn true;\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn this._onOptionsMaybeChanged();\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections;\n\t\tthis._minimapSelections = null;\n\t\treturn this._actual.onSelectionChanged();\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\tif (e.affectsMinimap) {\n\t\t\treturn this._actual.onDecorationsChanged();\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tthis._shouldCheckSampling = true;\n\t\t}\n\t\treturn this._actual.onFlushed();\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tconst minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(e.fromLineNumber, e.fromLineNumber + e.count - 1);\n\t\t\tif (minimapLineRange) {\n\t\t\t\treturn this._actual.onLinesChanged(minimapLineRange[0], minimapLineRange[1] - minimapLineRange[0] + 1);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._actual.onLinesChanged(e.fromLineNumber, e.count);\n\t\t}\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tconst [changeStartIndex, changeEndIndex] = this._samplingState.onLinesDeleted(e);\n\t\t\tif (changeStartIndex <= changeEndIndex) {\n\t\t\t\tthis._actual.onLinesChanged(changeStartIndex + 1, changeEndIndex - changeStartIndex + 1);\n\t\t\t}\n\t\t\tthis._shouldCheckSampling = true;\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this._actual.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n\t\t}\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tthis._samplingState.onLinesInserted(e);\n\t\t\tthis._shouldCheckSampling = true;\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this._actual.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n\t\t}\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn this._actual.onScrollChanged();\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\tthis._actual.onThemeChanged();\n\t\tthis._onOptionsMaybeChanged();\n\t\treturn true;\n\t}\n\tpublic override onTokensChanged(e: viewEvents.ViewTokensChangedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tconst ranges: { fromLineNumber: number; toLineNumber: number }[] = [];\n\t\t\tfor (const range of e.ranges) {\n\t\t\t\tconst minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(range.fromLineNumber, range.toLineNumber);\n\t\t\t\tif (minimapLineRange) {\n\t\t\t\t\tranges.push({ fromLineNumber: minimapLineRange[0], toLineNumber: minimapLineRange[1] });\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ranges.length) {\n\t\t\t\treturn this._actual.onTokensChanged(ranges);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._actual.onTokensChanged(e.ranges);\n\t\t}\n\t}\n\tpublic override onTokensColorsChanged(e: viewEvents.ViewTokensColorsChangedEvent): boolean {\n\t\tthis._onOptionsMaybeChanged();\n\t\treturn this._actual.onTokensColorsChanged();\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn this._actual.onZonesChanged();\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (this._shouldCheckSampling) {\n\t\t\tthis._shouldCheckSampling = false;\n\t\t\tthis._recreateLineSampling();\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tlet viewportStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tlet viewportEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tif (this._samplingState) {\n\t\t\tviewportStartLineNumber = this._samplingState.modelLineToMinimapLine(viewportStartLineNumber);\n\t\t\tviewportEndLineNumber = this._samplingState.modelLineToMinimapLine(viewportEndLineNumber);\n\t\t}\n\n\t\tconst minimapCtx: IMinimapRenderingContext = {\n\t\t\tviewportContainsWhitespaceGaps: (ctx.viewportData.whitespaceViewportData.length > 0),\n\n\t\t\tscrollWidth: ctx.scrollWidth,\n\t\t\tscrollHeight: ctx.scrollHeight,\n\n\t\t\tviewportStartLineNumber: viewportStartLineNumber,\n\t\t\tviewportEndLineNumber: viewportEndLineNumber,\n\t\t\tviewportStartLineNumberVerticalOffset: ctx.getVerticalOffsetForLineNumber(viewportStartLineNumber),\n\n\t\t\tscrollTop: ctx.scrollTop,\n\t\t\tscrollLeft: ctx.scrollLeft,\n\n\t\t\tviewportWidth: ctx.viewportWidth,\n\t\t\tviewportHeight: ctx.viewportHeight,\n\t\t};\n\t\tthis._actual.render(minimapCtx);\n\t}\n\n\t//#region IMinimapModel\n\n\tprivate _recreateLineSampling(): void {\n\t\tthis._minimapSelections = null;\n\n\t\tconst wasSampling = Boolean(this._samplingState);\n\t\tconst [samplingState, events] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), this._samplingState);\n\t\tthis._samplingState = samplingState;\n\n\t\tif (wasSampling && this._samplingState) {\n\t\t\t// was sampling, is sampling\n\t\t\tfor (const event of events) {\n\t\t\t\tswitch (event.type) {\n\t\t\t\t\tcase 'deleted':\n\t\t\t\t\t\tthis._actual.onLinesDeleted(event.deleteFromLineNumber, event.deleteToLineNumber);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inserted':\n\t\t\t\t\t\tthis._actual.onLinesInserted(event.insertFromLineNumber, event.insertToLineNumber);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flush':\n\t\t\t\t\t\tthis._actual.onFlushed();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getLineCount(): number {\n\t\tif (this._samplingState) {\n\t\t\treturn this._samplingState.minimapLines.length;\n\t\t}\n\t\treturn this._context.viewModel.getLineCount();\n\t}\n\n\tpublic getRealLineCount(): number {\n\t\treturn this._context.viewModel.getLineCount();\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\tif (this._samplingState) {\n\t\t\treturn this._context.viewModel.getLineContent(this._samplingState.minimapLines[lineNumber - 1]);\n\t\t}\n\t\treturn this._context.viewModel.getLineContent(lineNumber);\n\t}\n\n\tpublic getLineMaxColumn(lineNumber: number): number {\n\t\tif (this._samplingState) {\n\t\t\treturn this._context.viewModel.getLineMaxColumn(this._samplingState.minimapLines[lineNumber - 1]);\n\t\t}\n\t\treturn this._context.viewModel.getLineMaxColumn(lineNumber);\n\t}\n\n\tpublic getMinimapLinesRenderingData(startLineNumber: number, endLineNumber: number, needed: boolean[]): (ViewLineData | null)[] {\n\t\tif (this._samplingState) {\n\t\t\tconst result: (ViewLineData | null)[] = [];\n\t\t\tfor (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n\t\t\t\tif (needed[lineIndex]) {\n\t\t\t\t\tresult[lineIndex] = this._context.viewModel.getViewLineData(this._samplingState.minimapLines[startLineNumber + lineIndex - 1]);\n\t\t\t\t} else {\n\t\t\t\t\tresult[lineIndex] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn this._context.viewModel.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed).data;\n\t}\n\n\tpublic getSelections(): Selection[] {\n\t\tif (this._minimapSelections === null) {\n\t\t\tif (this._samplingState) {\n\t\t\t\tthis._minimapSelections = [];\n\t\t\t\tfor (const selection of this._selections) {\n\t\t\t\t\tconst [minimapLineStart, minimapLineEnd] = this._samplingState.decorationLineRangeToMinimapLineRange(selection.startLineNumber, selection.endLineNumber);\n\t\t\t\t\tthis._minimapSelections.push(new Selection(minimapLineStart, selection.startColumn, minimapLineEnd, selection.endColumn));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._minimapSelections = this._selections;\n\t\t\t}\n\t\t}\n\t\treturn this._minimapSelections;\n\t}\n\n\tpublic getMinimapDecorationsInViewport(startLineNumber: number, endLineNumber: number): ViewModelDecoration[] {\n\t\tlet visibleRange: Range;\n\t\tif (this._samplingState) {\n\t\t\tconst modelStartLineNumber = this._samplingState.minimapLines[startLineNumber - 1];\n\t\t\tconst modelEndLineNumber = this._samplingState.minimapLines[endLineNumber - 1];\n\t\t\tvisibleRange = new Range(modelStartLineNumber, 1, modelEndLineNumber, this._context.viewModel.getLineMaxColumn(modelEndLineNumber));\n\t\t} else {\n\t\t\tvisibleRange = new Range(startLineNumber, 1, endLineNumber, this._context.viewModel.getLineMaxColumn(endLineNumber));\n\t\t}\n\t\tconst decorations = this._context.viewModel.getMinimapDecorationsInRange(visibleRange);\n\n\t\tif (this._samplingState) {\n\t\t\tconst result: ViewModelDecoration[] = [];\n\t\t\tfor (const decoration of decorations) {\n\t\t\t\tif (!decoration.options.minimap) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst range = decoration.range;\n\t\t\t\tconst minimapStartLineNumber = this._samplingState.modelLineToMinimapLine(range.startLineNumber);\n\t\t\t\tconst minimapEndLineNumber = this._samplingState.modelLineToMinimapLine(range.endLineNumber);\n\t\t\t\tresult.push(new ViewModelDecoration(new Range(minimapStartLineNumber, range.startColumn, minimapEndLineNumber, range.endColumn), decoration.options));\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn decorations;\n\t}\n\n\tpublic getOptions(): TextModelResolvedOptions {\n\t\treturn this._context.viewModel.model.getOptions();\n\t}\n\n\tpublic revealLineNumber(lineNumber: number): void {\n\t\tif (this._samplingState) {\n\t\t\tlineNumber = this._samplingState.minimapLines[lineNumber - 1];\n\t\t}\n\t\tthis._context.viewModel.revealRange(\n\t\t\t'mouse',\n\t\t\tfalse,\n\t\t\tnew Range(lineNumber, 1, lineNumber, 1),\n\t\t\tviewEvents.VerticalRevealType.Center,\n\t\t\tScrollType.Smooth\n\t\t);\n\t}\n\n\tpublic setScrollTop(scrollTop: number): void {\n\t\tthis._context.viewModel.viewLayout.setScrollPosition({\n\t\t\tscrollTop: scrollTop\n\t\t}, ScrollType.Immediate);\n\t}\n\n\t//#endregion\n}\n\nclass InnerMinimap extends Disposable {\n\n\tprivate readonly _theme: EditorTheme;\n\tprivate readonly _model: IMinimapModel;\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tprivate readonly _shadow: FastDomNode<HTMLElement>;\n\tprivate readonly _canvas: FastDomNode<HTMLCanvasElement>;\n\tprivate readonly _decorationsCanvas: FastDomNode<HTMLCanvasElement>;\n\tprivate readonly _slider: FastDomNode<HTMLElement>;\n\tprivate readonly _sliderHorizontal: FastDomNode<HTMLElement>;\n\tprivate readonly _pointerDownListener: IDisposable;\n\tprivate readonly _sliderPointerMoveMonitor: GlobalPointerMoveMonitor;\n\tprivate readonly _sliderPointerDownListener: IDisposable;\n\tprivate readonly _gestureDisposable: IDisposable;\n\tprivate readonly _sliderTouchStartListener: IDisposable;\n\tprivate readonly _sliderTouchMoveListener: IDisposable;\n\tprivate readonly _sliderTouchEndListener: IDisposable;\n\n\tprivate _lastRenderData: RenderData | null;\n\tprivate _selectionColor: Color | undefined;\n\tprivate _renderDecorations: boolean = false;\n\tprivate _gestureInProgress: boolean = false;\n\tprivate _buffers: MinimapBuffers | null;\n\n\tconstructor(\n\t\ttheme: EditorTheme,\n\t\tmodel: IMinimapModel\n\t) {\n\t\tsuper();\n\n\t\tthis._theme = theme;\n\t\tthis._model = model;\n\n\t\tthis._lastRenderData = null;\n\t\tthis._buffers = null;\n\t\tthis._selectionColor = this._theme.getColor(minimapSelection);\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this._domNode, PartFingerprint.Minimap);\n\t\tthis._domNode.setClassName(this._getMinimapDomNodeClassName());\n\t\tthis._domNode.setPosition('absolute');\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._shadow = createFastDomNode(document.createElement('div'));\n\t\tthis._shadow.setClassName('minimap-shadow-hidden');\n\t\tthis._domNode.appendChild(this._shadow);\n\n\t\tthis._canvas = createFastDomNode(document.createElement('canvas'));\n\t\tthis._canvas.setPosition('absolute');\n\t\tthis._canvas.setLeft(0);\n\t\tthis._domNode.appendChild(this._canvas);\n\n\t\tthis._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\n\t\tthis._decorationsCanvas.setPosition('absolute');\n\t\tthis._decorationsCanvas.setClassName('minimap-decorations-layer');\n\t\tthis._decorationsCanvas.setLeft(0);\n\t\tthis._domNode.appendChild(this._decorationsCanvas);\n\n\t\tthis._slider = createFastDomNode(document.createElement('div'));\n\t\tthis._slider.setPosition('absolute');\n\t\tthis._slider.setClassName('minimap-slider');\n\t\tthis._slider.setLayerHinting(true);\n\t\tthis._slider.setContain('strict');\n\t\tthis._domNode.appendChild(this._slider);\n\n\t\tthis._sliderHorizontal = createFastDomNode(document.createElement('div'));\n\t\tthis._sliderHorizontal.setPosition('absolute');\n\t\tthis._sliderHorizontal.setClassName('minimap-slider-horizontal');\n\t\tthis._slider.appendChild(this._sliderHorizontal);\n\n\t\tthis._applyLayout();\n\n\t\tthis._pointerDownListener = dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.POINTER_DOWN, (e) => {\n\t\t\te.preventDefault();\n\n\t\t\tconst renderMinimap = this._model.options.renderMinimap;\n\t\t\tif (renderMinimap === RenderMinimap.None) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._lastRenderData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._model.options.size !== 'proportional') {\n\t\t\t\tif (e.button === 0 && this._lastRenderData) {\n\t\t\t\t\t// pretend the click occurred in the center of the slider\n\t\t\t\t\tconst position = dom.getDomNodePagePosition(this._slider.domNode);\n\t\t\t\t\tconst initialPosY = position.top + position.height / 2;\n\t\t\t\t\tthis._startSliderDragging(e, initialPosY, this._lastRenderData.renderedLayout);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst minimapLineHeight = this._model.options.minimapLineHeight;\n\t\t\tconst internalOffsetY = (this._model.options.canvasInnerHeight / this._model.options.canvasOuterHeight) * e.offsetY;\n\t\t\tconst lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\n\n\t\t\tlet lineNumber = lineIndex + this._lastRenderData.renderedLayout.startLineNumber - this._lastRenderData.renderedLayout.topPaddingLineCount;\n\t\t\tlineNumber = Math.min(lineNumber, this._model.getLineCount());\n\n\t\t\tthis._model.revealLineNumber(lineNumber);\n\t\t});\n\n\t\tthis._sliderPointerMoveMonitor = new GlobalPointerMoveMonitor();\n\n\t\tthis._sliderPointerDownListener = dom.addStandardDisposableListener(this._slider.domNode, dom.EventType.POINTER_DOWN, (e) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tif (e.button === 0 && this._lastRenderData) {\n\t\t\t\tthis._startSliderDragging(e, e.pageY, this._lastRenderData.renderedLayout);\n\t\t\t}\n\t\t});\n\n\t\tthis._gestureDisposable = Gesture.addTarget(this._domNode.domNode);\n\t\tthis._sliderTouchStartListener = dom.addDisposableListener(this._domNode.domNode, EventType.Start, (e: GestureEvent) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tif (this._lastRenderData) {\n\t\t\t\tthis._slider.toggleClassName('active', true);\n\t\t\t\tthis._gestureInProgress = true;\n\t\t\t\tthis.scrollDueToTouchEvent(e);\n\t\t\t}\n\t\t}, { passive: false });\n\n\t\tthis._sliderTouchMoveListener = dom.addDisposableListener(this._domNode.domNode, EventType.Change, (e: GestureEvent) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tif (this._lastRenderData && this._gestureInProgress) {\n\t\t\t\tthis.scrollDueToTouchEvent(e);\n\t\t\t}\n\t\t}, { passive: false });\n\n\t\tthis._sliderTouchEndListener = dom.addStandardDisposableListener(this._domNode.domNode, EventType.End, (e: GestureEvent) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis._gestureInProgress = false;\n\t\t\tthis._slider.toggleClassName('active', false);\n\t\t});\n\t}\n\n\tprivate _startSliderDragging(e: PointerEvent, initialPosY: number, initialSliderState: MinimapLayout): void {\n\t\tif (!e.target || !(e.target instanceof Element)) {\n\t\t\treturn;\n\t\t}\n\t\tconst initialPosX = e.pageX;\n\n\t\tthis._slider.toggleClassName('active', true);\n\n\t\tconst handlePointerMove = (posy: number, posx: number) => {\n\t\t\tconst minimapPosition = dom.getDomNodePagePosition(this._domNode.domNode);\n\t\t\tconst pointerOrthogonalDelta = Math.min(\n\t\t\t\tMath.abs(posx - initialPosX),\n\t\t\t\tMath.abs(posx - minimapPosition.left),\n\t\t\t\tMath.abs(posx - minimapPosition.left - minimapPosition.width)\n\t\t\t);\n\n\t\t\tif (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n\t\t\t\t// The pointer has wondered away from the scrollbar => reset dragging\n\t\t\t\tthis._model.setScrollTop(initialSliderState.scrollTop);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst pointerDelta = posy - initialPosY;\n\t\t\tthis._model.setScrollTop(initialSliderState.getDesiredScrollTopFromDelta(pointerDelta));\n\t\t};\n\n\t\tif (e.pageY !== initialPosY) {\n\t\t\thandlePointerMove(e.pageY, initialPosX);\n\t\t}\n\n\t\tthis._sliderPointerMoveMonitor.startMonitoring(\n\t\t\te.target,\n\t\t\te.pointerId,\n\t\t\te.buttons,\n\t\t\tpointerMoveData => handlePointerMove(pointerMoveData.pageY, pointerMoveData.pageX),\n\t\t\t() => {\n\t\t\t\tthis._slider.toggleClassName('active', false);\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate scrollDueToTouchEvent(touch: GestureEvent) {\n\t\tconst startY = this._domNode.domNode.getBoundingClientRect().top;\n\t\tconst scrollTop = this._lastRenderData!.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\n\t\tthis._model.setScrollTop(scrollTop);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._pointerDownListener.dispose();\n\t\tthis._sliderPointerMoveMonitor.dispose();\n\t\tthis._sliderPointerDownListener.dispose();\n\t\tthis._gestureDisposable.dispose();\n\t\tthis._sliderTouchStartListener.dispose();\n\t\tthis._sliderTouchMoveListener.dispose();\n\t\tthis._sliderTouchEndListener.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _getMinimapDomNodeClassName(): string {\n\t\tconst class_ = ['minimap'];\n\t\tif (this._model.options.showSlider === 'always') {\n\t\t\tclass_.push('slider-always');\n\t\t} else {\n\t\t\tclass_.push('slider-mouseover');\n\t\t}\n\t\tif (this._model.options.autohide) {\n\t\t\tclass_.push('autohide');\n\t\t}\n\n\t\treturn class_.join(' ');\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\tprivate _applyLayout(): void {\n\t\tthis._domNode.setLeft(this._model.options.minimapLeft);\n\t\tthis._domNode.setWidth(this._model.options.minimapWidth);\n\t\tthis._domNode.setHeight(this._model.options.minimapHeight);\n\t\tthis._shadow.setHeight(this._model.options.minimapHeight);\n\n\t\tthis._canvas.setWidth(this._model.options.canvasOuterWidth);\n\t\tthis._canvas.setHeight(this._model.options.canvasOuterHeight);\n\t\tthis._canvas.domNode.width = this._model.options.canvasInnerWidth;\n\t\tthis._canvas.domNode.height = this._model.options.canvasInnerHeight;\n\n\t\tthis._decorationsCanvas.setWidth(this._model.options.canvasOuterWidth);\n\t\tthis._decorationsCanvas.setHeight(this._model.options.canvasOuterHeight);\n\t\tthis._decorationsCanvas.domNode.width = this._model.options.canvasInnerWidth;\n\t\tthis._decorationsCanvas.domNode.height = this._model.options.canvasInnerHeight;\n\n\t\tthis._slider.setWidth(this._model.options.minimapWidth);\n\t}\n\n\tprivate _getBuffer(): ImageData | null {\n\t\tif (!this._buffers) {\n\t\t\tif (this._model.options.canvasInnerWidth > 0 && this._model.options.canvasInnerHeight > 0) {\n\t\t\t\tthis._buffers = new MinimapBuffers(\n\t\t\t\t\tthis._canvas.domNode.getContext('2d')!,\n\t\t\t\t\tthis._model.options.canvasInnerWidth,\n\t\t\t\t\tthis._model.options.canvasInnerHeight,\n\t\t\t\t\tthis._model.options.backgroundColor\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn this._buffers ? this._buffers.getBuffer() : null;\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic onDidChangeOptions(): void {\n\t\tthis._lastRenderData = null;\n\t\tthis._buffers = null;\n\t\tthis._applyLayout();\n\t\tthis._domNode.setClassName(this._getMinimapDomNodeClassName());\n\t}\n\tpublic onSelectionChanged(): boolean {\n\t\tthis._renderDecorations = true;\n\t\treturn true;\n\t}\n\tpublic onDecorationsChanged(): boolean {\n\t\tthis._renderDecorations = true;\n\t\treturn true;\n\t}\n\tpublic onFlushed(): boolean {\n\t\tthis._lastRenderData = null;\n\t\treturn true;\n\t}\n\tpublic onLinesChanged(changeFromLineNumber: number, changeCount: number): boolean {\n\t\tif (this._lastRenderData) {\n\t\t\treturn this._lastRenderData.onLinesChanged(changeFromLineNumber, changeCount);\n\t\t}\n\t\treturn false;\n\t}\n\tpublic onLinesDeleted(deleteFromLineNumber: number, deleteToLineNumber: number): boolean {\n\t\tthis._lastRenderData?.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n\t\treturn true;\n\t}\n\tpublic onLinesInserted(insertFromLineNumber: number, insertToLineNumber: number): boolean {\n\t\tthis._lastRenderData?.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n\t\treturn true;\n\t}\n\tpublic onScrollChanged(): boolean {\n\t\tthis._renderDecorations = true;\n\t\treturn true;\n\t}\n\tpublic onThemeChanged(): boolean {\n\t\tthis._selectionColor = this._theme.getColor(minimapSelection);\n\t\tthis._renderDecorations = true;\n\t\treturn true;\n\t}\n\tpublic onTokensChanged(ranges: { fromLineNumber: number; toLineNumber: number }[]): boolean {\n\t\tif (this._lastRenderData) {\n\t\t\treturn this._lastRenderData.onTokensChanged(ranges);\n\t\t}\n\t\treturn false;\n\t}\n\tpublic onTokensColorsChanged(): boolean {\n\t\tthis._lastRenderData = null;\n\t\tthis._buffers = null;\n\t\treturn true;\n\t}\n\tpublic onZonesChanged(): boolean {\n\t\tthis._lastRenderData = null;\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic render(renderingCtx: IMinimapRenderingContext): void {\n\t\tconst renderMinimap = this._model.options.renderMinimap;\n\t\tif (renderMinimap === RenderMinimap.None) {\n\t\t\tthis._shadow.setClassName('minimap-shadow-hidden');\n\t\t\tthis._sliderHorizontal.setWidth(0);\n\t\t\tthis._sliderHorizontal.setHeight(0);\n\t\t\treturn;\n\t\t}\n\t\tif (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\n\t\t\tthis._shadow.setClassName('minimap-shadow-hidden');\n\t\t} else {\n\t\t\tthis._shadow.setClassName('minimap-shadow-visible');\n\t\t}\n\n\t\tconst layout = MinimapLayout.create(\n\t\t\tthis._model.options,\n\t\t\trenderingCtx.viewportStartLineNumber,\n\t\t\trenderingCtx.viewportEndLineNumber,\n\t\t\trenderingCtx.viewportStartLineNumberVerticalOffset,\n\t\t\trenderingCtx.viewportHeight,\n\t\t\trenderingCtx.viewportContainsWhitespaceGaps,\n\t\t\tthis._model.getLineCount(),\n\t\t\tthis._model.getRealLineCount(),\n\t\t\trenderingCtx.scrollTop,\n\t\t\trenderingCtx.scrollHeight,\n\t\t\tthis._lastRenderData ? this._lastRenderData.renderedLayout : null\n\t\t);\n\t\tthis._slider.setDisplay(layout.sliderNeeded ? 'block' : 'none');\n\t\tthis._slider.setTop(layout.sliderTop);\n\t\tthis._slider.setHeight(layout.sliderHeight);\n\n\t\t// Compute horizontal slider coordinates\n\t\tthis._sliderHorizontal.setLeft(0);\n\t\tthis._sliderHorizontal.setWidth(this._model.options.minimapWidth);\n\t\tthis._sliderHorizontal.setTop(0);\n\t\tthis._sliderHorizontal.setHeight(layout.sliderHeight);\n\n\t\tthis.renderDecorations(layout);\n\t\tthis._lastRenderData = this.renderLines(layout);\n\t}\n\n\tprivate renderDecorations(layout: MinimapLayout) {\n\t\tif (this._renderDecorations) {\n\t\t\tthis._renderDecorations = false;\n\t\t\tconst selections = this._model.getSelections();\n\t\t\tselections.sort(Range.compareRangesUsingStarts);\n\n\t\t\tconst decorations = this._model.getMinimapDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n\t\t\tdecorations.sort((a, b) => (a.options.zIndex || 0) - (b.options.zIndex || 0));\n\n\t\t\tconst { canvasInnerWidth, canvasInnerHeight } = this._model.options;\n\t\t\tconst minimapLineHeight = this._model.options.minimapLineHeight;\n\t\t\tconst minimapCharWidth = this._model.options.minimapCharWidth;\n\t\t\tconst tabSize = this._model.getOptions().tabSize;\n\t\t\tconst canvasContext = this._decorationsCanvas.domNode.getContext('2d')!;\n\n\t\t\tcanvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\n\n\t\t\t// We first need to render line highlights and then render decorations on top of those.\n\t\t\t// But we need to pick a single color for each line, and use that as a line highlight.\n\t\t\t// This needs to be the color of the decoration with the highest `zIndex`, but priority\n\t\t\t// is given to the selection.\n\n\t\t\tconst highlightedLines = new ContiguousLineMap<boolean>(layout.startLineNumber, layout.endLineNumber, false);\n\t\t\tthis._renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight);\n\t\t\tthis._renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight);\n\n\t\t\tconst lineOffsetMap = new ContiguousLineMap<number[] | null>(layout.startLineNumber, layout.endLineNumber, null);\n\t\t\tthis._renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n\t\t\tthis._renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n\t\t}\n\t}\n\n\tprivate _renderSelectionLineHighlights(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tselections: Selection[],\n\t\thighlightedLines: ContiguousLineMap<boolean>,\n\t\tlayout: MinimapLayout,\n\t\tminimapLineHeight: number\n\t): void {\n\t\tif (!this._selectionColor || this._selectionColor.isTransparent()) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvasContext.fillStyle = this._selectionColor.transparent(0.5).toString();\n\n\t\tlet y1 = 0;\n\t\tlet y2 = 0;\n\n\t\tfor (const selection of selections) {\n\t\t\tconst intersection = layout.intersectWithViewport(selection);\n\t\t\tif (!intersection) {\n\t\t\t\t// entirely outside minimap's viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst [startLineNumber, endLineNumber] = intersection;\n\n\t\t\tfor (let line = startLineNumber; line <= endLineNumber; line++) {\n\t\t\t\thighlightedLines.set(line, true);\n\t\t\t}\n\n\t\t\tconst yy1 = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n\t\t\tconst yy2 = layout.getYForLineNumber(endLineNumber, minimapLineHeight);\n\n\t\t\tif (y2 >= yy1) {\n\t\t\t\t// merge into previous\n\t\t\t\ty2 = yy2;\n\t\t\t} else {\n\t\t\t\tif (y2 > y1) {\n\t\t\t\t\t// flush\n\t\t\t\t\tcanvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n\t\t\t\t}\n\t\t\t\ty1 = yy1;\n\t\t\t\ty2 = yy2;\n\t\t\t}\n\t\t}\n\n\t\tif (y2 > y1) {\n\t\t\t// flush\n\t\t\tcanvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n\t\t}\n\t}\n\n\tprivate _renderDecorationsLineHighlights(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tdecorations: ViewModelDecoration[],\n\t\thighlightedLines: ContiguousLineMap<boolean>,\n\t\tlayout: MinimapLayout,\n\t\tminimapLineHeight: number\n\t): void {\n\n\t\tconst highlightColors = new Map<string, string>();\n\n\t\t// Loop backwards to hit first decorations with higher `zIndex`\n\t\tfor (let i = decorations.length - 1; i >= 0; i--) {\n\t\t\tconst decoration = decorations[i];\n\n\t\t\tconst minimapOptions = <ModelDecorationMinimapOptions | null | undefined>decoration.options.minimap;\n\t\t\tif (!minimapOptions || minimapOptions.position !== MinimapPosition.Inline) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst intersection = layout.intersectWithViewport(decoration.range);\n\t\t\tif (!intersection) {\n\t\t\t\t// entirely outside minimap's viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst [startLineNumber, endLineNumber] = intersection;\n\n\t\t\tconst decorationColor = minimapOptions.getColor(this._theme.value);\n\t\t\tif (!decorationColor || decorationColor.isTransparent()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet highlightColor = highlightColors.get(decorationColor.toString());\n\t\t\tif (!highlightColor) {\n\t\t\t\thighlightColor = decorationColor.transparent(0.5).toString();\n\t\t\t\thighlightColors.set(decorationColor.toString(), highlightColor);\n\t\t\t}\n\n\t\t\tcanvasContext.fillStyle = highlightColor;\n\t\t\tfor (let line = startLineNumber; line <= endLineNumber; line++) {\n\t\t\t\tif (highlightedLines.has(line)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\thighlightedLines.set(line, true);\n\t\t\t\tconst y = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n\t\t\t\tcanvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, minimapLineHeight);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _renderSelectionsHighlights(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tselections: Selection[],\n\t\tlineOffsetMap: ContiguousLineMap<number[] | null>,\n\t\tlayout: MinimapLayout,\n\t\tlineHeight: number,\n\t\ttabSize: number,\n\t\tcharacterWidth: number,\n\t\tcanvasInnerWidth: number\n\t): void {\n\t\tif (!this._selectionColor || this._selectionColor.isTransparent()) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const selection of selections) {\n\t\t\tconst intersection = layout.intersectWithViewport(selection);\n\t\t\tif (!intersection) {\n\t\t\t\t// entirely outside minimap's viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst [startLineNumber, endLineNumber] = intersection;\n\n\t\t\tfor (let line = startLineNumber; line <= endLineNumber; line++) {\n\t\t\t\tthis.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth, canvasInnerWidth);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _renderDecorationsHighlights(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tdecorations: ViewModelDecoration[],\n\t\tlineOffsetMap: ContiguousLineMap<number[] | null>,\n\t\tlayout: MinimapLayout,\n\t\tminimapLineHeight: number,\n\t\ttabSize: number,\n\t\tcharacterWidth: number,\n\t\tcanvasInnerWidth: number\n\t): void {\n\t\t// Loop forwards to hit first decorations with lower `zIndex`\n\t\tfor (const decoration of decorations) {\n\n\t\t\tconst minimapOptions = <ModelDecorationMinimapOptions | null | undefined>decoration.options.minimap;\n\t\t\tif (!minimapOptions) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst intersection = layout.intersectWithViewport(decoration.range);\n\t\t\tif (!intersection) {\n\t\t\t\t// entirely outside minimap's viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst [startLineNumber, endLineNumber] = intersection;\n\n\t\t\tconst decorationColor = minimapOptions.getColor(this._theme.value);\n\t\t\tif (!decorationColor || decorationColor.isTransparent()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (let line = startLineNumber; line <= endLineNumber; line++) {\n\t\t\t\tswitch (minimapOptions.position) {\n\n\t\t\t\t\tcase MinimapPosition.Inline:\n\t\t\t\t\t\tthis.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, minimapLineHeight, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase MinimapPosition.Gutter: {\n\t\t\t\t\t\tconst y = layout.getYForLineNumber(line, minimapLineHeight);\n\t\t\t\t\t\tconst x = 2;\n\t\t\t\t\t\tthis.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, minimapLineHeight);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderDecorationOnLine(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tlineOffsetMap: ContiguousLineMap<number[] | null>,\n\t\tdecorationRange: Range,\n\t\tdecorationColor: Color | undefined,\n\t\tlayout: MinimapLayout,\n\t\tlineNumber: number,\n\t\theight: number,\n\t\tminimapLineHeight: number,\n\t\ttabSize: number,\n\t\tcharWidth: number,\n\t\tcanvasInnerWidth: number\n\t): void {\n\t\tconst y = layout.getYForLineNumber(lineNumber, minimapLineHeight);\n\n\t\t// Skip rendering the line if it's vertically outside our viewport\n\t\tif (y + height < 0 || y > this._model.options.canvasInnerHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { startLineNumber, endLineNumber } = decorationRange;\n\t\tconst startColumn = (startLineNumber === lineNumber ? decorationRange.startColumn : 1);\n\t\tconst endColumn = (endLineNumber === lineNumber ? decorationRange.endColumn : this._model.getLineMaxColumn(lineNumber));\n\n\t\tconst x1 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, startColumn, tabSize, charWidth, canvasInnerWidth);\n\t\tconst x2 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, endColumn, tabSize, charWidth, canvasInnerWidth);\n\n\t\tthis.renderDecoration(canvasContext, decorationColor, x1, y, x2 - x1, height);\n\t}\n\n\tprivate getXOffsetForPosition(\n\t\tlineOffsetMap: ContiguousLineMap<number[] | null>,\n\t\tlineNumber: number,\n\t\tcolumn: number,\n\t\ttabSize: number,\n\t\tcharWidth: number,\n\t\tcanvasInnerWidth: number\n\t): number {\n\t\tif (column === 1) {\n\t\t\treturn MINIMAP_GUTTER_WIDTH;\n\t\t}\n\n\t\tconst minimumXOffset = (column - 1) * charWidth;\n\t\tif (minimumXOffset >= canvasInnerWidth) {\n\t\t\t// there is no need to look at actual characters,\n\t\t\t// as this column is certainly after the minimap width\n\t\t\treturn canvasInnerWidth;\n\t\t}\n\n\t\t// Cache line offset data so that it is only read once per line\n\t\tlet lineIndexToXOffset = lineOffsetMap.get(lineNumber);\n\t\tif (!lineIndexToXOffset) {\n\t\t\tconst lineData = this._model.getLineContent(lineNumber);\n\t\t\tlineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\n\t\t\tlet prevx = MINIMAP_GUTTER_WIDTH;\n\t\t\tfor (let i = 1; i < lineData.length + 1; i++) {\n\t\t\t\tconst charCode = lineData.charCodeAt(i - 1);\n\t\t\t\tconst dx = charCode === CharCode.Tab\n\t\t\t\t\t? tabSize * charWidth\n\t\t\t\t\t: strings.isFullWidthCharacter(charCode)\n\t\t\t\t\t\t? 2 * charWidth\n\t\t\t\t\t\t: charWidth;\n\n\t\t\t\tconst x = prevx + dx;\n\t\t\t\tif (x >= canvasInnerWidth) {\n\t\t\t\t\t// no need to keep on going, as we've hit the canvas width\n\t\t\t\t\tlineIndexToXOffset[i] = canvasInnerWidth;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlineIndexToXOffset[i] = x;\n\t\t\t\tprevx = x;\n\t\t\t}\n\n\t\t\tlineOffsetMap.set(lineNumber, lineIndexToXOffset);\n\t\t}\n\n\t\tif (column - 1 < lineIndexToXOffset.length) {\n\t\t\treturn lineIndexToXOffset[column - 1];\n\t\t}\n\t\t// goes over the canvas width\n\t\treturn canvasInnerWidth;\n\t}\n\n\tprivate renderDecoration(canvasContext: CanvasRenderingContext2D, decorationColor: Color | undefined, x: number, y: number, width: number, height: number) {\n\t\tcanvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\n\t\tcanvasContext.fillRect(x, y, width, height);\n\t}\n\n\tprivate renderLines(layout: MinimapLayout): RenderData | null {\n\t\tconst startLineNumber = layout.startLineNumber;\n\t\tconst endLineNumber = layout.endLineNumber;\n\t\tconst minimapLineHeight = this._model.options.minimapLineHeight;\n\n\t\t// Check if nothing changed w.r.t. lines from last frame\n\t\tif (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\n\t\t\tconst _lastData = this._lastRenderData._get();\n\t\t\t// Nice!! Nothing changed from last frame\n\t\t\treturn new RenderData(layout, _lastData.imageData, _lastData.lines);\n\t\t}\n\n\t\t// Oh well!! We need to repaint some lines...\n\n\t\tconst imageData = this._getBuffer();\n\t\tif (!imageData) {\n\t\t\t// 0 width or 0 height canvas, nothing to do\n\t\t\treturn null;\n\t\t}\n\n\t\t// Render untouched lines by using last rendered data.\n\t\tconst [_dirtyY1, _dirtyY2, needed] = InnerMinimap._renderUntouchedLines(\n\t\t\timageData,\n\t\t\tlayout.topPaddingLineCount,\n\t\t\tstartLineNumber,\n\t\t\tendLineNumber,\n\t\t\tminimapLineHeight,\n\t\t\tthis._lastRenderData\n\t\t);\n\n\t\t// Fetch rendering info from view model for rest of lines that need rendering.\n\t\tconst lineInfo = this._model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\n\t\tconst tabSize = this._model.getOptions().tabSize;\n\t\tconst defaultBackground = this._model.options.defaultBackgroundColor;\n\t\tconst background = this._model.options.backgroundColor;\n\t\tconst foregroundAlpha = this._model.options.foregroundAlpha;\n\t\tconst tokensColorTracker = this._model.tokensColorTracker;\n\t\tconst useLighterFont = tokensColorTracker.backgroundIsLight();\n\t\tconst renderMinimap = this._model.options.renderMinimap;\n\t\tconst charRenderer = this._model.options.charRenderer();\n\t\tconst fontScale = this._model.options.fontScale;\n\t\tconst minimapCharWidth = this._model.options.minimapCharWidth;\n\n\t\tconst baseCharHeight = (renderMinimap === RenderMinimap.Text ? Constants.BASE_CHAR_HEIGHT : Constants.BASE_CHAR_HEIGHT + 1);\n\t\tconst renderMinimapLineHeight = baseCharHeight * fontScale;\n\t\tconst innerLinePadding = (minimapLineHeight > renderMinimapLineHeight ? Math.floor((minimapLineHeight - renderMinimapLineHeight) / 2) : 0);\n\n\t\t// Render the rest of lines\n\t\tconst backgroundA = background.a / 255;\n\t\tconst renderBackground = new RGBA8(\n\t\t\tMath.round((background.r - defaultBackground.r) * backgroundA + defaultBackground.r),\n\t\t\tMath.round((background.g - defaultBackground.g) * backgroundA + defaultBackground.g),\n\t\t\tMath.round((background.b - defaultBackground.b) * backgroundA + defaultBackground.b),\n\t\t\t255\n\t\t);\n\t\tlet dy = layout.topPaddingLineCount * minimapLineHeight;\n\t\tconst renderedLines: MinimapLine[] = [];\n\t\tfor (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n\t\t\tif (needed[lineIndex]) {\n\t\t\t\tInnerMinimap._renderLine(\n\t\t\t\t\timageData,\n\t\t\t\t\trenderBackground,\n\t\t\t\t\tbackground.a,\n\t\t\t\t\tuseLighterFont,\n\t\t\t\t\trenderMinimap,\n\t\t\t\t\tminimapCharWidth,\n\t\t\t\t\ttokensColorTracker,\n\t\t\t\t\tforegroundAlpha,\n\t\t\t\t\tcharRenderer,\n\t\t\t\t\tdy,\n\t\t\t\t\tinnerLinePadding,\n\t\t\t\t\ttabSize,\n\t\t\t\t\tlineInfo[lineIndex]!,\n\t\t\t\t\tfontScale,\n\t\t\t\t\tminimapLineHeight\n\t\t\t\t);\n\t\t\t}\n\t\t\trenderedLines[lineIndex] = new MinimapLine(dy);\n\t\t\tdy += minimapLineHeight;\n\t\t}\n\n\t\tconst dirtyY1 = (_dirtyY1 === -1 ? 0 : _dirtyY1);\n\t\tconst dirtyY2 = (_dirtyY2 === -1 ? imageData.height : _dirtyY2);\n\t\tconst dirtyHeight = dirtyY2 - dirtyY1;\n\n\t\t// Finally, paint to the canvas\n\t\tconst ctx = this._canvas.domNode.getContext('2d')!;\n\t\tctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight);\n\n\t\t// Save rendered data for reuse on next frame if possible\n\t\treturn new RenderData(\n\t\t\tlayout,\n\t\t\timageData,\n\t\t\trenderedLines\n\t\t);\n\t}\n\n\tprivate static _renderUntouchedLines(\n\t\ttarget: ImageData,\n\t\ttopPaddingLineCount: number,\n\t\tstartLineNumber: number,\n\t\tendLineNumber: number,\n\t\tminimapLineHeight: number,\n\t\tlastRenderData: RenderData | null,\n\t): [number, number, boolean[]] {\n\n\t\tconst needed: boolean[] = [];\n\t\tif (!lastRenderData) {\n\t\t\tfor (let i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\n\t\t\t\tneeded[i] = true;\n\t\t\t}\n\t\t\treturn [-1, -1, needed];\n\t\t}\n\n\t\tconst _lastData = lastRenderData._get();\n\t\tconst lastTargetData = _lastData.imageData.data;\n\t\tconst lastStartLineNumber = _lastData.rendLineNumberStart;\n\t\tconst lastLines = _lastData.lines;\n\t\tconst lastLinesLength = lastLines.length;\n\t\tconst WIDTH = target.width;\n\t\tconst targetData = target.data;\n\n\t\tconst maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\n\t\tlet dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\n\t\tlet dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\n\n\t\tlet copySourceStart = -1;\n\t\tlet copySourceEnd = -1;\n\t\tlet copyDestStart = -1;\n\t\tlet copyDestEnd = -1;\n\n\t\tlet dest_dy = topPaddingLineCount * minimapLineHeight;\n\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\t\tconst lastLineIndex = lineNumber - lastStartLineNumber;\n\t\t\tconst source_dy = (lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1);\n\n\t\t\tif (source_dy === -1) {\n\t\t\t\tneeded[lineIndex] = true;\n\t\t\t\tdest_dy += minimapLineHeight;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst sourceStart = source_dy * WIDTH * 4;\n\t\t\tconst sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\n\t\t\tconst destStart = dest_dy * WIDTH * 4;\n\t\t\tconst destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\n\n\t\t\tif (copySourceEnd === sourceStart && copyDestEnd === destStart) {\n\t\t\t\t// contiguous zone => extend copy request\n\t\t\t\tcopySourceEnd = sourceEnd;\n\t\t\t\tcopyDestEnd = destEnd;\n\t\t\t} else {\n\t\t\t\tif (copySourceStart !== -1) {\n\t\t\t\t\t// flush existing copy request\n\t\t\t\t\ttargetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n\t\t\t\t\tif (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n\t\t\t\t\t\tdirtyPixel1 = copySourceEnd;\n\t\t\t\t\t}\n\t\t\t\t\tif (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n\t\t\t\t\t\tdirtyPixel2 = copySourceStart;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcopySourceStart = sourceStart;\n\t\t\t\tcopySourceEnd = sourceEnd;\n\t\t\t\tcopyDestStart = destStart;\n\t\t\t\tcopyDestEnd = destEnd;\n\t\t\t}\n\n\t\t\tneeded[lineIndex] = false;\n\t\t\tdest_dy += minimapLineHeight;\n\t\t}\n\n\t\tif (copySourceStart !== -1) {\n\t\t\t// flush existing copy request\n\t\t\ttargetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n\t\t\tif (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n\t\t\t\tdirtyPixel1 = copySourceEnd;\n\t\t\t}\n\t\t\tif (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n\t\t\t\tdirtyPixel2 = copySourceStart;\n\t\t\t}\n\t\t}\n\n\t\tconst dirtyY1 = (dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4));\n\t\tconst dirtyY2 = (dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4));\n\n\t\treturn [dirtyY1, dirtyY2, needed];\n\t}\n\n\tprivate static _renderLine(\n\t\ttarget: ImageData,\n\t\tbackgroundColor: RGBA8,\n\t\tbackgroundAlpha: number,\n\t\tuseLighterFont: boolean,\n\t\trenderMinimap: RenderMinimap,\n\t\tcharWidth: number,\n\t\tcolorTracker: MinimapTokensColorTracker,\n\t\tforegroundAlpha: number,\n\t\tminimapCharRenderer: MinimapCharRenderer,\n\t\tdy: number,\n\t\tinnerLinePadding: number,\n\t\ttabSize: number,\n\t\tlineData: ViewLineData,\n\t\tfontScale: number,\n\t\tminimapLineHeight: number\n\t): void {\n\t\tconst content = lineData.content;\n\t\tconst tokens = lineData.tokens;\n\t\tconst maxDx = target.width - charWidth;\n\t\tconst force1pxHeight = (minimapLineHeight === 1);\n\n\t\tlet dx = MINIMAP_GUTTER_WIDTH;\n\t\tlet charIndex = 0;\n\t\tlet tabsCharDelta = 0;\n\n\t\tfor (let tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\n\t\t\tconst tokenEndIndex = tokens.getEndOffset(tokenIndex);\n\t\t\tconst tokenColorId = tokens.getForeground(tokenIndex);\n\t\t\tconst tokenColor = colorTracker.getColor(tokenColorId);\n\n\t\t\tfor (; charIndex < tokenEndIndex; charIndex++) {\n\t\t\t\tif (dx > maxDx) {\n\t\t\t\t\t// hit edge of minimap\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst charCode = content.charCodeAt(charIndex);\n\n\t\t\t\tif (charCode === CharCode.Tab) {\n\t\t\t\t\tconst insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n\t\t\t\t\ttabsCharDelta += insertSpacesCount - 1;\n\t\t\t\t\t// No need to render anything since tab is invisible\n\t\t\t\t\tdx += insertSpacesCount * charWidth;\n\t\t\t\t} else if (charCode === CharCode.Space) {\n\t\t\t\t\t// No need to render anything since space is invisible\n\t\t\t\t\tdx += charWidth;\n\t\t\t\t} else {\n\t\t\t\t\t// Render twice for a full width character\n\t\t\t\t\tconst count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\n\n\t\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\t\tif (renderMinimap === RenderMinimap.Blocks) {\n\t\t\t\t\t\t\tminimapCharRenderer.blockRenderChar(target, dx, dy + innerLinePadding, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight);\n\t\t\t\t\t\t} else { // RenderMinimap.Text\n\t\t\t\t\t\t\tminimapCharRenderer.renderChar(target, dx, dy + innerLinePadding, charCode, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdx += charWidth;\n\n\t\t\t\t\t\tif (dx > maxDx) {\n\t\t\t\t\t\t\t// hit edge of minimap\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass ContiguousLineMap<T> {\n\n\tprivate readonly _startLineNumber: number;\n\tprivate readonly _endLineNumber: number;\n\tprivate readonly _defaultValue: T;\n\tprivate readonly _values: T[];\n\n\tconstructor(startLineNumber: number, endLineNumber: number, defaultValue: T) {\n\t\tthis._startLineNumber = startLineNumber;\n\t\tthis._endLineNumber = endLineNumber;\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._values = [];\n\t\tfor (let i = 0, count = this._endLineNumber - this._startLineNumber + 1; i < count; i++) {\n\t\t\tthis._values[i] = defaultValue;\n\t\t}\n\t}\n\n\tpublic has(lineNumber: number): boolean {\n\t\treturn (this.get(lineNumber) !== this._defaultValue);\n\t}\n\n\tpublic set(lineNumber: number, value: T): void {\n\t\tif (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n\t\t\treturn;\n\t\t}\n\t\tthis._values[lineNumber - this._startLineNumber] = value;\n\t}\n\n\tpublic get(lineNumber: number): T {\n\t\tif (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n\t\t\treturn this._defaultValue;\n\t\t}\n\t\treturn this._values[lineNumber - this._startLineNumber];\n\t}\n}\n\n"]}