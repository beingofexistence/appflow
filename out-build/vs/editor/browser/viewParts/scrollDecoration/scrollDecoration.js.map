{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAWhG,MAAa,GAAyB,SAAQ,cAAG;QAQhD,YAAY,OAAY;YACvB,KAAK,CAAC,OAAO,CAAC,CAAC;YAEf,IAAI,CAAC,CAAC,GAAY,CAAC,CAAC;YACpB,IAAI,CAAC,CAAC,GAAQ,CAAC,CAAC;YAChB,IAAI,CAAC,CAAC,EAAa,CAAC;YACpB,IAAI,CAAC,CAAC,GAAa,KAAK,CAAC;YACzB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;YACpD,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,kCAAwB,CAAC;YACtD,IAAI,CAAC,CAAC,GAAa,SAAS,CAAC,UAAU,CAAC;YACxC,IAAI,CAAC,CAAC,GAAU,IAAA,iBAAG,EAAe,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,CAAC,CAAQ,YAAY,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;YACnD,IAAI,CAAC,CAAC,CAAQ,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QACnD,CAAC;QAEe,OAAO;YACtB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;QAEO,CAAC;YACR,MAAM,aAAa,GAAG,CAAC,IAAI,CAAC,CAAC,IAAc,IAAI,CAAC,CAAC,GAAY,CAAC,CAAC,CAAC;YAChE,IAAI,IAAI,CAAC,CAAC,KAAe,aAAa,EAAE;gBACvC,IAAI,CAAC,CAAC,GAAa,aAAa,CAAC;gBACjC,OAAO,IAAI,CAAC;aACZ;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAEM,UAAU;YAChB,OAAO,IAAI,CAAC,CAAC,CAAQ;QACtB,CAAC;QAEO,CAAC;YACR,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;YACpD,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,mCAAyB,CAAC;YAExD,IAAI,UAAU,CAAC,OAAO,CAAC,aAAa,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,GAAG,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC,WAAW,KAAK,CAAC,CAAC,EAAE;gBAC5H,IAAI,CAAC,CAAC,GAAQ,UAAU,CAAC,KAAK,CAAC;aAC/B;iBAAM;gBACN,IAAI,CAAC,CAAC,GAAQ,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,sBAAsB,CAAC;aACnE;QACF,CAAC;QAED,2BAA2B;QAEX,sBAAsB,CAAC,CAAiB;YACvD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;YACpD,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,kCAAwB,CAAC;YACtD,IAAI,CAAC,CAAC,GAAa,SAAS,CAAC,UAAU,CAAC;YACxC,IAAI,CAAC,CAAC,EAAa,CAAC;YACpB,IAAI,CAAC,CAAC,EAAkB,CAAC;YACzB,OAAO,IAAI,CAAC;QACb,CAAC;QACe,eAAe,CAAC,CAAiB;YAChD,IAAI,CAAC,CAAC,GAAY,CAAC,CAAC,SAAS,CAAC;YAC9B,OAAO,IAAI,CAAC,CAAC,EAAkB,CAAC;QACjC,CAAC;QAED,yBAAyB;QAElB,aAAa,CAAC,GAAQ;YAC5B,kBAAkB;QACnB,CAAC;QAEM,MAAM,CAAC,GAAQ;YACrB,IAAI,CAAC,CAAC,CAAQ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAM,CAAC;YACpC,IAAI,CAAC,CAAC,CAAQ,YAAY,CAAC,IAAI,CAAC,CAAC,CAAW,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACzE,CAAC;KACD;IA5ED,kBA4EC","file":"scrollDecoration.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./scrollDecoration';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { ViewPart } from 'vs/editor/browser/view/viewPart';\nimport { RenderingContext, RestrictedRenderingContext } from 'vs/editor/browser/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/viewModel/viewContext';\nimport * as viewEvents from 'vs/editor/common/viewEvents';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\n\n\nexport class ScrollDecorationViewPart extends ViewPart {\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tprivate _scrollTop: number;\n\tprivate _width: number;\n\tprivate _shouldShow: boolean;\n\tprivate _useShadows: boolean;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis._scrollTop = 0;\n\t\tthis._width = 0;\n\t\tthis._updateWidth();\n\t\tthis._shouldShow = false;\n\t\tconst options = this._context.configuration.options;\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tthis._useShadows = scrollbar.useShadows;\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate _updateShouldShow(): boolean {\n\t\tconst newShouldShow = (this._useShadows && this._scrollTop > 0);\n\t\tif (this._shouldShow !== newShouldShow) {\n\t\t\tthis._shouldShow = newShouldShow;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\tprivate _updateWidth(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tif (layoutInfo.minimap.renderMinimap === 0 || (layoutInfo.minimap.minimapWidth > 0 && layoutInfo.minimap.minimapLeft === 0)) {\n\t\t\tthis._width = layoutInfo.width;\n\t\t} else {\n\t\t\tthis._width = layoutInfo.width - layoutInfo.verticalScrollbarWidth;\n\t\t}\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tthis._useShadows = scrollbar.useShadows;\n\t\tthis._updateWidth();\n\t\tthis._updateShouldShow();\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tthis._scrollTop = e.scrollTop;\n\t\treturn this._updateShouldShow();\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._domNode.setWidth(this._width);\n\t\tthis._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n\t}\n}\n"]}