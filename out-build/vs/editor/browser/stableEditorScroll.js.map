{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/browser/stableEditorScroll.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG,MAAa,GAAG;QAER,MAAM,CAAC,OAAO,CAAC,MAAmB;YACxC,IAAI,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,yBAAyB,EAAE,EAAE;gBACtE,mHAAmH;gBACnH,OAAO,IAAI,GAAG,CAAqB,MAAM,CAAC,YAAY,EAAE,EAAE,MAAM,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aACpG;YAED,IAAI,eAAe,GAAoB,IAAI,CAAC;YAC5C,IAAI,0BAA0B,GAAG,CAAC,CAAC;YACnC,MAAM,aAAa,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC;YAChD,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,eAAe,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;gBACtD,MAAM,wBAAwB,GAAG,MAAM,CAAC,iBAAiB,CAAC,eAAe,CAAC,UAAU,EAAE,eAAe,CAAC,MAAM,CAAC,CAAC;gBAC9G,0BAA0B,GAAG,MAAM,CAAC,YAAY,EAAE,GAAG,wBAAwB,CAAC;aAC9E;YACD,OAAO,IAAI,GAAG,CAAqB,MAAM,CAAC,YAAY,EAAE,EAAE,MAAM,CAAC,gBAAgB,EAAE,EAAE,eAAe,EAAE,0BAA0B,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;QACzJ,CAAC;QAED,YACkB,CAAyB,EACzB,CAA6B,EAC7B,CAAiC,EACjC,CAAmC,EACnC,CAAgC;YAJhC,MAAC,GAAD,CAAC,CAAwB;YACzB,MAAC,GAAD,CAAC,CAA4B;YAC7B,MAAC,GAAD,CAAC,CAAgC;YACjC,MAAC,GAAD,CAAC,CAAkC;YACnC,MAAC,GAAD,CAAC,CAA+B;QAElD,CAAC;QAEM,OAAO,CAAC,MAAmB;YACjC,IAAI,IAAI,CAAC,CAAC,KAAyB,MAAM,CAAC,gBAAgB,EAAE,IAAI,IAAI,CAAC,CAAC,KAAqB,MAAM,CAAC,YAAY,EAAE,EAAE;gBACjH,8FAA8F;gBAC9F,OAAO;aACP;YAED,IAAI,IAAI,CAAC,CAAC,EAAiB;gBAC1B,MAAM,wBAAwB,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAgB,UAAU,EAAE,IAAI,CAAC,CAAC,CAAgB,MAAM,CAAC,CAAC;gBAC1H,MAAM,CAAC,YAAY,CAAC,wBAAwB,GAAG,IAAI,CAAC,CAAC,CAA2B,CAAC;aACjF;QACF,CAAC;QAEM,uCAAuC,CAAC,MAAmB;YACjE,IAAI,IAAI,CAAC,CAAC,KAAyB,MAAM,CAAC,gBAAgB,EAAE,IAAI,IAAI,CAAC,CAAC,KAAqB,MAAM,CAAC,YAAY,EAAE,EAAE;gBACjH,8FAA8F;gBAC9F,OAAO;aACP;YAED,MAAM,qBAAqB,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;YAEnD,IAAI,CAAC,IAAI,CAAC,CAAC,IAAkB,CAAC,qBAAqB,EAAE;gBACpD,OAAO;aACP;YAED,MAAM,MAAM,GAAG,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAe,UAAU,CAAC,CAAC;YAC1I,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,EAAE,GAAG,MAAM,CAAC,CAAC;QACrD,CAAC;KACD;IAvDD,kBAuDC","file":"stableEditorScroll.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { Position } from 'vs/editor/common/core/position';\n\nexport class StableEditorScrollState {\n\n\tpublic static capture(editor: ICodeEditor): StableEditorScrollState {\n\t\tif (editor.getScrollTop() === 0 || editor.hasPendingScrollAnimation()) {\n\t\t\t// Never mess with the scroll top if the editor is at the top of the file or if there is a pending scroll animation\n\t\t\treturn new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), null, 0, null);\n\t\t}\n\n\t\tlet visiblePosition: Position | null = null;\n\t\tlet visiblePositionScrollDelta = 0;\n\t\tconst visibleRanges = editor.getVisibleRanges();\n\t\tif (visibleRanges.length > 0) {\n\t\t\tvisiblePosition = visibleRanges[0].getStartPosition();\n\t\t\tconst visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n\t\t\tvisiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n\t\t}\n\t\treturn new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), visiblePosition, visiblePositionScrollDelta, editor.getPosition());\n\t}\n\n\tconstructor(\n\t\tprivate readonly _initialScrollTop: number,\n\t\tprivate readonly _initialContentHeight: number,\n\t\tprivate readonly _visiblePosition: Position | null,\n\t\tprivate readonly _visiblePositionScrollDelta: number,\n\t\tprivate readonly _cursorPosition: Position | null,\n\t) {\n\t}\n\n\tpublic restore(editor: ICodeEditor): void {\n\t\tif (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n\t\t\t// The editor's content height and scroll top haven't changed, so we don't need to do anything\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._visiblePosition) {\n\t\t\tconst visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n\t\t\teditor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n\t\t}\n\t}\n\n\tpublic restoreRelativeVerticalPositionOfCursor(editor: ICodeEditor): void {\n\t\tif (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n\t\t\t// The editor's content height and scroll top haven't changed, so we don't need to do anything\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentCursorPosition = editor.getPosition();\n\n\t\tif (!this._cursorPosition || !currentCursorPosition) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst offset = editor.getTopForLineNumber(currentCursorPosition.lineNumber) - editor.getTopForLineNumber(this._cursorPosition.lineNumber);\n\t\teditor.setScrollTop(editor.getScrollTop() + offset);\n\t}\n}\n"]}