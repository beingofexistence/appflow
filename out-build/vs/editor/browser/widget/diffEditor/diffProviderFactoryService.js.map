{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/browser/widget/diffEditor/diffProviderFactoryService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAQnF,QAAA,GAAG,GAA2B,IAAA,mBAAG,EAA0C,4BAA4B,CAAC,CAAC;IAW/G,IAAM,GAAG,GAAT,MAAM,GAAG;QAGf,YACyC,CAAyB;YAAzB,MAAC,GAAD,CAAC,CAAwB;QAC9D,CAAC;QAEL,kBAAkB,CAAC,MAAmB,EAAE,OAAqC;YAC5E,OAAO,IAAI,CAAC,CAAC,CAAoB,cAAc,CAAC,qCAAG,EAA8B,OAAO,CAAC,CAAC;QAC3F,CAAC;KACD,CAAA;IAVY,kBAAG;kBAAH,GAAG;QAIb,WAAA,mBAAG,CAAA;OAJO,GAAG,CAUf;IAED,IAAA,gBAAG,EAAe,WAAG,EAA0B,GAAG,oCAAmD,CAAC","file":"diffProviderFactoryService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiffEditor } from 'vs/editor/browser/editorBrowser';\nimport { WorkerBasedDocumentDiffProvider } from 'vs/editor/browser/widget/diffEditor/workerBasedDocumentDiffProvider';\nimport { IDocumentDiffProvider } from 'vs/editor/common/diff/documentDiffProvider';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IInstantiationService, createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IDiffProviderFactoryService = createDecorator<IDiffProviderFactoryService>('diffProviderFactoryService');\n\nexport interface IDocumentDiffProviderOptions {\n\treadonly diffAlgorithm?: 'legacy' | 'advanced';\n}\n\nexport interface IDiffProviderFactoryService {\n\treadonly _serviceBrand: undefined;\n\tcreateDiffProvider(editor: IDiffEditor, options: IDocumentDiffProviderOptions): IDocumentDiffProvider;\n}\n\nexport class DiffProviderFactoryService implements IDiffProviderFactoryService {\n\treadonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) { }\n\n\tcreateDiffProvider(editor: IDiffEditor, options: IDocumentDiffProviderOptions): IDocumentDiffProvider {\n\t\treturn this.instantiationService.createInstance(WorkerBasedDocumentDiffProvider, options);\n\t}\n}\n\nregisterSingleton(IDiffProviderFactoryService, DiffProviderFactoryService, InstantiationType.Delayed);\n"]}