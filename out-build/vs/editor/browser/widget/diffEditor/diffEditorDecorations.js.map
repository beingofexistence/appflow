{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/browser/widget/diffEditor/diffEditorDecorations.ts"],"names":[],"mappings":"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","file":"diffEditorDecorations.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IObservable, derived } from 'vs/base/common/observable';\nimport { arrowRevertChange, diffAddDecoration, diffAddDecorationEmpty, diffDeleteDecoration, diffDeleteDecorationEmpty, diffLineAddDecorationBackground, diffLineAddDecorationBackgroundWithIndicator, diffLineDeleteDecorationBackground, diffLineDeleteDecorationBackgroundWithIndicator, diffWholeLineAddDecoration, diffWholeLineDeleteDecoration } from 'vs/editor/browser/widget/diffEditor/decorations';\nimport { DiffEditorEditors } from 'vs/editor/browser/widget/diffEditor/diffEditorEditors';\nimport { DiffEditorOptions } from 'vs/editor/browser/widget/diffEditor/diffEditorOptions';\nimport { DiffEditorViewModel } from 'vs/editor/browser/widget/diffEditor/diffEditorViewModel';\nimport { MovedBlocksLinesPart } from 'vs/editor/browser/widget/diffEditor/movedBlocksLines';\nimport { applyObservableDecorations } from 'vs/editor/browser/widget/diffEditor/utils';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IModelDeltaDecoration } from 'vs/editor/common/model';\n\nexport class DiffEditorDecorations extends Disposable {\n\tconstructor(\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t\tprivate readonly _diffModel: IObservable<DiffEditorViewModel | undefined>,\n\t\tprivate readonly _options: DiffEditorOptions,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(applyObservableDecorations(this._editors.original, this._decorations.map(d => d?.originalDecorations || [])));\n\t\tthis._register(applyObservableDecorations(this._editors.modified, this._decorations.map(d => d?.modifiedDecorations || [])));\n\t}\n\n\tprivate readonly _decorations = derived(this, (reader) => {\n\t\tconst diff = this._diffModel.read(reader)?.diff.read(reader);\n\t\tif (!diff) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst movedTextToCompare = this._diffModel.read(reader)!.movedTextToCompare.read(reader);\n\t\tconst renderIndicators = this._options.renderIndicators.read(reader);\n\t\tconst showEmptyDecorations = this._options.showEmptyDecorations.read(reader);\n\n\t\tconst originalDecorations: IModelDeltaDecoration[] = [];\n\t\tconst modifiedDecorations: IModelDeltaDecoration[] = [];\n\t\tif (!movedTextToCompare) {\n\t\t\tfor (const m of diff.mappings) {\n\t\t\t\tif (!m.lineRangeMapping.original.isEmpty) {\n\t\t\t\t\toriginalDecorations.push({ range: m.lineRangeMapping.original.toInclusiveRange()!, options: renderIndicators ? diffLineDeleteDecorationBackgroundWithIndicator : diffLineDeleteDecorationBackground });\n\t\t\t\t}\n\t\t\t\tif (!m.lineRangeMapping.modified.isEmpty) {\n\t\t\t\t\tmodifiedDecorations.push({ range: m.lineRangeMapping.modified.toInclusiveRange()!, options: renderIndicators ? diffLineAddDecorationBackgroundWithIndicator : diffLineAddDecorationBackground });\n\t\t\t\t}\n\n\t\t\t\tif (m.lineRangeMapping.modified.isEmpty || m.lineRangeMapping.original.isEmpty) {\n\t\t\t\t\tif (!m.lineRangeMapping.original.isEmpty) {\n\t\t\t\t\t\toriginalDecorations.push({ range: m.lineRangeMapping.original.toInclusiveRange()!, options: diffWholeLineDeleteDecoration });\n\t\t\t\t\t}\n\t\t\t\t\tif (!m.lineRangeMapping.modified.isEmpty) {\n\t\t\t\t\t\tmodifiedDecorations.push({ range: m.lineRangeMapping.modified.toInclusiveRange()!, options: diffWholeLineAddDecoration });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const i of m.lineRangeMapping.innerChanges || []) {\n\t\t\t\t\t\t// Don't show empty markers outside the line range\n\t\t\t\t\t\tif (m.lineRangeMapping.original.contains(i.originalRange.startLineNumber)) {\n\t\t\t\t\t\t\toriginalDecorations.push({ range: i.originalRange, options: (i.originalRange.isEmpty() && showEmptyDecorations) ? diffDeleteDecorationEmpty : diffDeleteDecoration });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m.lineRangeMapping.modified.contains(i.modifiedRange.startLineNumber)) {\n\t\t\t\t\t\t\tmodifiedDecorations.push({ range: i.modifiedRange, options: (i.modifiedRange.isEmpty() && showEmptyDecorations) ? diffAddDecorationEmpty : diffAddDecoration });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!m.lineRangeMapping.modified.isEmpty && this._options.shouldRenderRevertArrows.read(reader) && !movedTextToCompare) {\n\t\t\t\t\tmodifiedDecorations.push({ range: Range.fromPositions(new Position(m.lineRangeMapping.modified.startLineNumber, 1)), options: arrowRevertChange });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (movedTextToCompare) {\n\t\t\tfor (const m of movedTextToCompare.changes) {\n\t\t\t\tconst fullRangeOriginal = m.original.toInclusiveRange();\n\t\t\t\tif (fullRangeOriginal) {\n\t\t\t\t\toriginalDecorations.push({ range: fullRangeOriginal, options: renderIndicators ? diffLineDeleteDecorationBackgroundWithIndicator : diffLineDeleteDecorationBackground });\n\t\t\t\t}\n\t\t\t\tconst fullRangeModified = m.modified.toInclusiveRange();\n\t\t\t\tif (fullRangeModified) {\n\t\t\t\t\tmodifiedDecorations.push({ range: fullRangeModified, options: renderIndicators ? diffLineAddDecorationBackgroundWithIndicator : diffLineAddDecorationBackground });\n\t\t\t\t}\n\n\t\t\t\tfor (const i of m.innerChanges || []) {\n\t\t\t\t\toriginalDecorations.push({ range: i.originalRange, options: diffDeleteDecoration });\n\t\t\t\t\tmodifiedDecorations.push({ range: i.modifiedRange, options: diffAddDecoration });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst activeMovedText = this._diffModel.read(reader)!.activeMovedText.read(reader);\n\n\t\tfor (const m of diff.movedTexts) {\n\t\t\toriginalDecorations.push({\n\t\t\t\trange: m.lineRangeMapping.original.toInclusiveRange()!, options: {\n\t\t\t\t\tdescription: 'moved',\n\t\t\t\t\tblockClassName: 'movedOriginal' + (m === activeMovedText ? ' currentMove' : ''),\n\t\t\t\t\tblockPadding: [MovedBlocksLinesPart.movedCodeBlockPadding, 0, MovedBlocksLinesPart.movedCodeBlockPadding, MovedBlocksLinesPart.movedCodeBlockPadding],\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodifiedDecorations.push({\n\t\t\t\trange: m.lineRangeMapping.modified.toInclusiveRange()!, options: {\n\t\t\t\t\tdescription: 'moved',\n\t\t\t\t\tblockClassName: 'movedModified' + (m === activeMovedText ? ' currentMove' : ''),\n\t\t\t\t\tblockPadding: [4, 0, 4, 4],\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn { originalDecorations, modifiedDecorations };\n\t});\n}\n"]}