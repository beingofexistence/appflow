{"version":3,"sources":["vs/editor/browser/widget/diffEditor/diffEditor.contribution.ts"],"names":[],"mappings":"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","file":"diffEditor.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveElement } from 'vs/base/browser/dom';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { ICodeEditor, IDiffEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction2, ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { DiffEditorWidget } from 'vs/editor/browser/widget/diffEditor/diffEditorWidget';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { localize } from 'vs/nls';\nimport { ILocalizedString } from 'vs/platform/action/common/action';\nimport { Action2, MenuId, MenuRegistry, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyEqualsExpr, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\n\nexport class ToggleCollapseUnchangedRegions extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.toggleCollapseUnchangedRegions',\n\t\t\ttitle: { value: localize('toggleCollapseUnchangedRegions', \"Toggle Collapse Unchanged Regions\"), original: 'Toggle Collapse Unchanged Regions' },\n\t\t\ticon: Codicon.map,\n\t\t\ttoggled: ContextKeyExpr.has('config.diffEditor.hideUnchangedRegions.enabled'),\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tmenu: {\n\t\t\t\twhen: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\torder: 22,\n\t\t\t\tgroup: 'navigation',\n\t\t\t},\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>('diffEditor.hideUnchangedRegions.enabled');\n\t\tconfigurationService.updateValue('diffEditor.hideUnchangedRegions.enabled', newValue);\n\t}\n}\n\nregisterAction2(ToggleCollapseUnchangedRegions);\n\nexport class ToggleShowMovedCodeBlocks extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.toggleShowMovedCodeBlocks',\n\t\t\ttitle: { value: localize('toggleShowMovedCodeBlocks', \"Toggle Show Moved Code Blocks\"), original: 'Toggle Show Moved Code Blocks' },\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>('diffEditor.experimental.showMoves');\n\t\tconfigurationService.updateValue('diffEditor.experimental.showMoves', newValue);\n\t}\n}\n\nregisterAction2(ToggleShowMovedCodeBlocks);\n\nexport class ToggleUseInlineViewWhenSpaceIsLimited extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.toggleUseInlineViewWhenSpaceIsLimited',\n\t\t\ttitle: { value: localize('toggleUseInlineViewWhenSpaceIsLimited', \"Toggle Use Inline View When Space Is Limited\"), original: 'Toggle Use Inline View When Space Is Limited' },\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: unknown[]): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst newValue = !configurationService.getValue<boolean>('diffEditor.useInlineViewWhenSpaceIsLimited');\n\t\tconfigurationService.updateValue('diffEditor.useInlineViewWhenSpaceIsLimited', newValue);\n\t}\n}\n\nregisterAction2(ToggleUseInlineViewWhenSpaceIsLimited);\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: new ToggleUseInlineViewWhenSpaceIsLimited().desc.id,\n\t\ttitle: localize('useInlineViewWhenSpaceIsLimited', \"Use Inline View When Space Is Limited\"),\n\t\ttoggled: ContextKeyExpr.has('config.diffEditor.useInlineViewWhenSpaceIsLimited'),\n\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t},\n\torder: 11,\n\tgroup: '1_diff',\n\twhen: ContextKeyExpr.and(\n\t\tEditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached,\n\t\tContextKeyExpr.has('isInDiffEditor'),\n\t),\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: new ToggleShowMovedCodeBlocks().desc.id,\n\t\ttitle: localize('showMoves', \"Show Moved Code Blocks\"),\n\t\ticon: Codicon.move,\n\t\ttoggled: ContextKeyEqualsExpr.create('config.diffEditor.experimental.showMoves', true),\n\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t},\n\torder: 10,\n\tgroup: '1_diff',\n\twhen: ContextKeyExpr.has('isInDiffEditor'),\n});\n\nconst diffEditorCategory: ILocalizedString = {\n\tvalue: localize('diffEditor', 'Diff Editor'),\n\toriginal: 'Diff Editor',\n};\n\nexport class SwitchSide extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.switchSide',\n\t\t\ttitle: { value: localize('switchSide', \"Switch Side\"), original: 'Switch Side' },\n\t\t\ticon: Codicon.arrowSwap,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tf1: true,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, arg?: { dryRun: boolean }): unknown {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tif (arg && arg.dryRun) {\n\t\t\t\treturn { destinationSelection: diffEditor.mapToOtherSide().destinationSelection };\n\t\t\t} else {\n\t\t\t\tdiffEditor.switchSide();\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nregisterAction2(SwitchSide);\n\nexport class ExitCompareMove extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.exitCompareMove',\n\t\t\ttitle: { value: localize('exitCompareMove', \"Exit Compare Move\"), original: 'Exit Compare Move' },\n\t\t\ticon: Codicon.close,\n\t\t\tprecondition: EditorContextKeys.comparingMovedCode,\n\t\t\tf1: false,\n\t\t\tcategory: diffEditorCategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: 10000,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: unknown[]): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.exitCompareMove();\n\t\t}\n\t}\n}\n\nregisterAction2(ExitCompareMove);\n\nexport class CollapseAllUnchangedRegions extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.collapseAllUnchangedRegions',\n\t\t\ttitle: { value: localize('collapseAllUnchangedRegions', \"Collapse All Unchanged Regions\"), original: 'Collapse All Unchanged Regions' },\n\t\t\ticon: Codicon.fold,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tf1: true,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: unknown[]): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.collapseAllUnchangedRegions();\n\t\t}\n\t}\n}\n\nregisterAction2(CollapseAllUnchangedRegions);\n\nexport class ShowAllUnchangedRegions extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'diffEditor.showAllUnchangedRegions',\n\t\t\ttitle: { value: localize('showAllUnchangedRegions', \"Show All Unchanged Regions\"), original: 'Show All Unchanged Regions' },\n\t\t\ticon: Codicon.unfold,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tf1: true,\n\t\t\tcategory: diffEditorCategory,\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: unknown[]): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor instanceof DiffEditorWidget) {\n\t\t\tdiffEditor.showAllUnchangedRegions();\n\t\t}\n\t}\n}\n\nregisterAction2(ShowAllUnchangedRegions);\n\nconst accessibleDiffViewerCategory: ILocalizedString = {\n\tvalue: localize('accessibleDiffViewer', 'Accessible Diff Viewer'),\n\toriginal: 'Accessible Diff Viewer',\n};\n\nexport class AccessibleDiffViewerNext extends Action2 {\n\tpublic static id = 'editor.action.accessibleDiffViewer.next';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibleDiffViewerNext.id,\n\t\t\ttitle: { value: localize('editor.action.accessibleDiffViewer.next', \"Go to Next Difference\"), original: 'Go to Next Difference' },\n\t\t\tcategory: accessibleDiffViewerCategory,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tdiffEditor?.accessibleDiffViewerNext();\n\t}\n}\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: AccessibleDiffViewerNext.id,\n\t\ttitle: localize('Open Accessible Diff Viewer', \"Open Accessible Diff Viewer\"),\n\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t},\n\torder: 10,\n\tgroup: '2_diff',\n\twhen: ContextKeyExpr.and(\n\t\tEditorContextKeys.accessibleDiffViewerVisible.negate(),\n\t\tContextKeyExpr.has('isInDiffEditor'),\n\t),\n});\n\nexport class AccessibleDiffViewerPrev extends Action2 {\n\tpublic static id = 'editor.action.accessibleDiffViewer.prev';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibleDiffViewerPrev.id,\n\t\t\ttitle: { value: localize('editor.action.accessibleDiffViewer.prev', \"Go to Previous Difference\"), original: 'Go to Previous Difference' },\n\t\t\tcategory: accessibleDiffViewerCategory,\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tdiffEditor?.accessibleDiffViewerPrev();\n\t}\n}\n\nexport function findFocusedDiffEditor(accessor: ServicesAccessor): IDiffEditor | null {\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\tconst diffEditors = codeEditorService.listDiffEditors();\n\tconst activeCodeEditor = codeEditorService.getFocusedCodeEditor() ?? codeEditorService.getActiveCodeEditor();\n\tif (!activeCodeEditor) {\n\t\treturn null;\n\t}\n\n\tfor (let i = 0, len = diffEditors.length; i < len; i++) {\n\t\tconst diffEditor = <IDiffEditor>diffEditors[i];\n\t\tif (diffEditor.getModifiedEditor().getId() === activeCodeEditor.getId() || diffEditor.getOriginalEditor().getId() === activeCodeEditor.getId()) {\n\t\t\treturn diffEditor;\n\t\t}\n\t}\n\n\tconst activeElement = getActiveElement();\n\tif (activeElement) {\n\t\tfor (const d of diffEditors) {\n\t\t\tconst container = d.getContainerDomNode();\n\t\t\tif (isElementOrParentOf(container, activeElement)) {\n\t\t\t\treturn d;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction isElementOrParentOf(elementOrParent: Element, element: Element): boolean {\n\tlet e: Element | null = element;\n\twhile (e) {\n\t\tif (e === elementOrParent) {\n\t\t\treturn true;\n\t\t}\n\t\te = e.parentElement;\n\t}\n\treturn false;\n}\n\nCommandsRegistry.registerCommandAlias('editor.action.diffReview.next', AccessibleDiffViewerNext.id);\nregisterAction2(AccessibleDiffViewerNext);\n\nCommandsRegistry.registerCommandAlias('editor.action.diffReview.prev', AccessibleDiffViewerPrev.id);\nregisterAction2(AccessibleDiffViewerPrev);\n"]}