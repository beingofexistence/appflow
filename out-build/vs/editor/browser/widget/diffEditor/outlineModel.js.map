{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/browser/widget/diffEditor/outlineModel.ts"],"names":[],"mappings":"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","file":"outlineModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { binarySearch, coalesceInPlace, equals } from 'vs/base/common/arrays';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { commonPrefixLength } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/languageFeatureRegistry';\nimport { DocumentSymbol, DocumentSymbolProvider } from 'vs/editor/common/languages';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { MarkerSeverity } from 'vs/platform/markers/common/markers';\n\n// TODO@hediet: These classes are copied from outlineModel.ts because of layering issues.\n// Because these classes just depend on the DocumentSymbolProvider (which is in the core editor),\n// they should be moved to the core editor as well.\n\nexport abstract class TreeElement {\n\n\tabstract id: string;\n\tabstract children: Map<string, TreeElement>;\n\tabstract parent: TreeElement | undefined;\n\n\tremove(): void {\n\t\tthis.parent?.children.delete(this.id);\n\t}\n\n\tstatic findId(candidate: DocumentSymbol | string, container: TreeElement): string {\n\t\t// complex id-computation which contains the origin/extension,\n\t\t// the parent path, and some dedupe logic when names collide\n\t\tlet candidateId: string;\n\t\tif (typeof candidate === 'string') {\n\t\t\tcandidateId = `${container.id}/${candidate}`;\n\t\t} else {\n\t\t\tcandidateId = `${container.id}/${candidate.name}`;\n\t\t\tif (container.children.get(candidateId) !== undefined) {\n\t\t\t\tcandidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\n\t\t\t}\n\t\t}\n\n\t\tlet id = candidateId;\n\t\tfor (let i = 0; container.children.get(id) !== undefined; i++) {\n\t\t\tid = `${candidateId}_${i}`;\n\t\t}\n\n\t\treturn id;\n\t}\n\n\tstatic getElementById(id: string, element: TreeElement): TreeElement | undefined {\n\t\tif (!id) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst len = commonPrefixLength(id, element.id);\n\t\tif (len === id.length) {\n\t\t\treturn element;\n\t\t}\n\t\tif (len < element.id.length) {\n\t\t\treturn undefined;\n\t\t}\n\t\tfor (const [, child] of element.children) {\n\t\t\tconst candidate = TreeElement.getElementById(id, child);\n\t\t\tif (candidate) {\n\t\t\t\treturn candidate;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tstatic size(element: TreeElement): number {\n\t\tlet res = 1;\n\t\tfor (const [, child] of element.children) {\n\t\t\tres += TreeElement.size(child);\n\t\t}\n\t\treturn res;\n\t}\n\n\tstatic empty(element: TreeElement): boolean {\n\t\treturn element.children.size === 0;\n\t}\n}\n\nexport interface IOutlineMarker {\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n\tseverity: MarkerSeverity;\n}\n\nexport class OutlineElement extends TreeElement {\n\n\tchildren = new Map<string, OutlineElement>();\n\tmarker: { count: number; topSev: MarkerSeverity } | undefined;\n\n\tconstructor(\n\t\treadonly id: string,\n\t\tpublic parent: TreeElement | undefined,\n\t\treadonly symbol: DocumentSymbol\n\t) {\n\t\tsuper();\n\t}\n}\n\nexport class OutlineGroup extends TreeElement {\n\n\tchildren = new Map<string, OutlineElement>();\n\n\tconstructor(\n\t\treadonly id: string,\n\t\tpublic parent: TreeElement | undefined,\n\t\treadonly label: string,\n\t\treadonly order: number,\n\t) {\n\t\tsuper();\n\t}\n\n\tgetItemEnclosingPosition(position: IPosition): OutlineElement | undefined {\n\t\treturn position ? this._getItemEnclosingPosition(position, this.children) : undefined;\n\t}\n\n\tprivate _getItemEnclosingPosition(position: IPosition, children: Map<string, OutlineElement>): OutlineElement | undefined {\n\t\tfor (const [, item] of children) {\n\t\t\tif (!item.symbol.range || !Range.containsPosition(item.symbol.range, position)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn this._getItemEnclosingPosition(position, item.children) || item;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tupdateMarker(marker: IOutlineMarker[]): void {\n\t\tfor (const [, child] of this.children) {\n\t\t\tthis._updateMarker(marker, child);\n\t\t}\n\t}\n\n\tprivate _updateMarker(markers: IOutlineMarker[], item: OutlineElement): void {\n\t\titem.marker = undefined;\n\n\t\t// find the proper start index to check for item/marker overlap.\n\t\tconst idx = binarySearch<IRange>(markers, item.symbol.range, Range.compareRangesUsingStarts);\n\t\tlet start: number;\n\t\tif (idx < 0) {\n\t\t\tstart = ~idx;\n\t\t\tif (start > 0 && Range.areIntersecting(markers[start - 1], item.symbol.range)) {\n\t\t\t\tstart -= 1;\n\t\t\t}\n\t\t} else {\n\t\t\tstart = idx;\n\t\t}\n\n\t\tconst myMarkers: IOutlineMarker[] = [];\n\t\tlet myTopSev: MarkerSeverity | undefined;\n\n\t\tfor (; start < markers.length && Range.areIntersecting(item.symbol.range, markers[start]); start++) {\n\t\t\t// remove markers intersecting with this outline element\n\t\t\t// and store them in a 'private' array.\n\t\t\tconst marker = markers[start];\n\t\t\tmyMarkers.push(marker);\n\t\t\t(markers as Array<IOutlineMarker | undefined>)[start] = undefined;\n\t\t\tif (!myTopSev || marker.severity > myTopSev) {\n\t\t\t\tmyTopSev = marker.severity;\n\t\t\t}\n\t\t}\n\n\t\t// Recurse into children and let them match markers that have matched\n\t\t// this outline element. This might remove markers from this element and\n\t\t// therefore we remember that we have had markers. That allows us to render\n\t\t// the dot, saying 'this element has children with markers'\n\t\tfor (const [, child] of item.children) {\n\t\t\tthis._updateMarker(myMarkers, child);\n\t\t}\n\n\t\tif (myTopSev) {\n\t\t\titem.marker = {\n\t\t\t\tcount: myMarkers.length,\n\t\t\t\ttopSev: myTopSev\n\t\t\t};\n\t\t}\n\n\t\tcoalesceInPlace(markers);\n\t}\n}\n\nexport class OutlineModel extends TreeElement {\n\n\tstatic create(registry: LanguageFeatureRegistry<DocumentSymbolProvider>, textModel: ITextModel, token: CancellationToken): Promise<OutlineModel> {\n\n\t\tconst cts = new CancellationTokenSource(token);\n\t\tconst result = new OutlineModel(textModel.uri);\n\t\tconst provider = registry.ordered(textModel);\n\t\tconst promises = provider.map((provider, index) => {\n\n\t\t\tconst id = TreeElement.findId(`provider_${index}`, result);\n\t\t\tconst group = new OutlineGroup(id, result, provider.displayName ?? 'Unknown Outline Provider', index);\n\n\n\t\t\treturn Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\n\t\t\t\tfor (const info of result || []) {\n\t\t\t\t\tOutlineModel._makeOutlineElement(info, group);\n\t\t\t\t}\n\t\t\t\treturn group;\n\t\t\t}, err => {\n\t\t\t\tonUnexpectedExternalError(err);\n\t\t\t\treturn group;\n\t\t\t}).then(group => {\n\t\t\t\tif (!TreeElement.empty(group)) {\n\t\t\t\t\tresult._groups.set(id, group);\n\t\t\t\t} else {\n\t\t\t\t\tgroup.remove();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tconst listener = registry.onDidChange(() => {\n\t\t\tconst newProvider = registry.ordered(textModel);\n\t\t\tif (!equals(newProvider, provider)) {\n\t\t\t\tcts.cancel();\n\t\t\t}\n\t\t});\n\n\t\treturn Promise.all(promises).then(() => {\n\t\t\tif (cts.token.isCancellationRequested && !token.isCancellationRequested) {\n\t\t\t\treturn OutlineModel.create(registry, textModel, token);\n\t\t\t} else {\n\t\t\t\treturn result._compact();\n\t\t\t}\n\t\t}).finally(() => {\n\t\t\tcts.dispose();\n\t\t\tlistener.dispose();\n\t\t});\n\t}\n\n\tprivate static _makeOutlineElement(info: DocumentSymbol, container: OutlineGroup | OutlineElement): void {\n\t\tconst id = TreeElement.findId(info, container);\n\t\tconst res = new OutlineElement(id, container, info);\n\t\tif (info.children) {\n\t\t\tfor (const childInfo of info.children) {\n\t\t\t\tOutlineModel._makeOutlineElement(childInfo, res);\n\t\t\t}\n\t\t}\n\t\tcontainer.children.set(res.id, res);\n\t}\n\n\tstatic get(element: TreeElement | undefined): OutlineModel | undefined {\n\t\twhile (element) {\n\t\t\tif (element instanceof OutlineModel) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t\telement = element.parent;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\treadonly id = 'root';\n\treadonly parent = undefined;\n\n\tprotected _groups = new Map<string, OutlineGroup>();\n\tchildren = new Map<string, OutlineGroup | OutlineElement>();\n\n\tprotected constructor(readonly uri: URI) {\n\t\tsuper();\n\n\t\tthis.id = 'root';\n\t\tthis.parent = undefined;\n\t}\n\n\tprivate _compact(): this {\n\t\tlet count = 0;\n\t\tfor (const [key, group] of this._groups) {\n\t\t\tif (group.children.size === 0) { // empty\n\t\t\t\tthis._groups.delete(key);\n\t\t\t} else {\n\t\t\t\tcount += 1;\n\t\t\t}\n\t\t}\n\t\tif (count !== 1) {\n\t\t\t//\n\t\t\tthis.children = this._groups;\n\t\t} else {\n\t\t\t// adopt all elements of the first group\n\t\t\tconst group = Iterable.first(this._groups.values())!;\n\t\t\tfor (const [, child] of group.children) {\n\t\t\t\tchild.parent = this;\n\t\t\t\tthis.children.set(child.id, child);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tmerge(other: OutlineModel): boolean {\n\t\tif (this.uri.toString() !== other.uri.toString()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._groups.size !== other._groups.size) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._groups = other._groups;\n\t\tthis.children = other.children;\n\t\treturn true;\n\t}\n\n\tgetItemEnclosingPosition(position: IPosition, context?: OutlineElement): OutlineElement | undefined {\n\n\t\tlet preferredGroup: OutlineGroup | undefined;\n\t\tif (context) {\n\t\t\tlet candidate = context.parent;\n\t\t\twhile (candidate && !preferredGroup) {\n\t\t\t\tif (candidate instanceof OutlineGroup) {\n\t\t\t\t\tpreferredGroup = candidate;\n\t\t\t\t}\n\t\t\t\tcandidate = candidate.parent;\n\t\t\t}\n\t\t}\n\n\t\tlet result: OutlineElement | undefined = undefined;\n\t\tfor (const [, group] of this._groups) {\n\t\t\tresult = group.getItemEnclosingPosition(position);\n\t\t\tif (result && (!preferredGroup || preferredGroup === group)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetItemById(id: string): TreeElement | undefined {\n\t\treturn TreeElement.getElementById(id, this);\n\t}\n\n\tupdateMarker(marker: IOutlineMarker[]): void {\n\t\t// sort markers by start range so that we can use\n\t\t// outline element starts for quicker look up\n\t\tmarker.sort(Range.compareRangesUsingStarts);\n\n\t\tfor (const [, group] of this._groups) {\n\t\t\tgroup.updateMarker(marker.slice(0));\n\t\t}\n\t}\n\n\tgetTopLevelSymbols(): DocumentSymbol[] {\n\t\tconst roots: DocumentSymbol[] = [];\n\t\tfor (const child of this.children.values()) {\n\t\t\tif (child instanceof OutlineElement) {\n\t\t\t\troots.push(child.symbol);\n\t\t\t} else {\n\t\t\t\troots.push(...Iterable.map(child.children.values(), child => child.symbol));\n\t\t\t}\n\t\t}\n\t\treturn roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n\t}\n\n\tasListOfDocumentSymbols(): DocumentSymbol[] {\n\t\tconst roots = this.getTopLevelSymbols();\n\t\tconst bucket: DocumentSymbol[] = [];\n\t\tOutlineModel._flattenDocumentSymbols(bucket, roots, '');\n\t\treturn bucket.sort((a, b) =>\n\t\t\tPosition.compare(Range.getStartPosition(a.range), Range.getStartPosition(b.range)) || Position.compare(Range.getEndPosition(b.range), Range.getEndPosition(a.range))\n\t\t);\n\t}\n\n\tprivate static _flattenDocumentSymbols(bucket: DocumentSymbol[], entries: DocumentSymbol[], overrideContainerLabel: string): void {\n\t\tfor (const entry of entries) {\n\t\t\tbucket.push({\n\t\t\t\tkind: entry.kind,\n\t\t\t\ttags: entry.tags,\n\t\t\t\tname: entry.name,\n\t\t\t\tdetail: entry.detail,\n\t\t\t\tcontainerName: entry.containerName || overrideContainerLabel,\n\t\t\t\trange: entry.range,\n\t\t\t\tselectionRange: entry.selectionRange,\n\t\t\t\tchildren: undefined, // we flatten it...\n\t\t\t});\n\n\t\t\t// Recurse over children\n\t\t\tif (entry.children) {\n\t\t\t\tOutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\n\t\t\t}\n\t\t}\n\t}\n}\n"]}