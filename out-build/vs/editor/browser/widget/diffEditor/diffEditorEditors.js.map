{"version":3,"sources":["vs/editor/browser/widget/diffEditor/diffEditorEditors.ts"],"names":[],"mappings":"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","file":"diffEditorEditors.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IObservable, IReader, autorunHandleChanges, observableFromEvent } from 'vs/base/common/observable';\nimport { IEditorConstructionOptions } from 'vs/editor/browser/config/editorConfiguration';\nimport { IDiffEditorConstructionOptions } from 'vs/editor/browser/editorBrowser';\nimport { CodeEditorWidget, ICodeEditorWidgetOptions } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { OverviewRulerPart } from 'vs/editor/browser/widget/diffEditor/overviewRulerPart';\nimport { EditorOptions, IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { IContentSizeChangedEvent } from 'vs/editor/common/editorCommon';\nimport { localize } from 'vs/nls';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { DiffEditorOptions } from './diffEditorOptions';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IDiffCodeEditorWidgetOptions } from 'vs/editor/browser/widget/diffEditor/diffEditorWidget';\n\nexport class DiffEditorEditors extends Disposable {\n\tpublic readonly modified: CodeEditorWidget;\n\tpublic readonly original: CodeEditorWidget;\n\n\tprivate readonly _onDidContentSizeChange = this._register(new Emitter<IContentSizeChangedEvent>());\n\tpublic get onDidContentSizeChange() { return this._onDidContentSizeChange.event; }\n\n\tpublic readonly modifiedModel: IObservable<ITextModel | null>;\n\n\tconstructor(\n\t\tprivate readonly originalEditorElement: HTMLElement,\n\t\tprivate readonly modifiedEditorElement: HTMLElement,\n\t\tprivate readonly _options: DiffEditorOptions,\n\t\tcodeEditorWidgetOptions: IDiffCodeEditorWidgetOptions,\n\t\tprivate readonly _createInnerEditor: (instantiationService: IInstantiationService, container: HTMLElement, options: Readonly<IEditorOptions>, editorWidgetOptions: ICodeEditorWidgetOptions) => CodeEditorWidget,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tthis.original = this._register(this._createLeftHandSideEditor(_options.editorOptions.get(), codeEditorWidgetOptions.originalEditor || {}));\n\t\tthis.modified = this._register(this._createRightHandSideEditor(_options.editorOptions.get(), codeEditorWidgetOptions.modifiedEditor || {}));\n\n\t\tthis.modifiedModel = observableFromEvent(this.modified.onDidChangeModel, () => this.modified.getModel());\n\n\t\tthis._register(autorunHandleChanges({\n\t\t\tcreateEmptyChangeSummary: () => ({} as IDiffEditorConstructionOptions),\n\t\t\thandleChange: (ctx, changeSummary) => {\n\t\t\t\tif (ctx.didChange(_options.editorOptions)) {\n\t\t\t\t\tObject.assign(changeSummary, ctx.change.changedOptions);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}, (reader, changeSummary) => {\n\t\t\t/** @description update editor options */\n\t\t\t_options.editorOptions.read(reader);\n\n\t\t\tthis._options.renderSideBySide.read(reader);\n\n\t\t\tthis.modified.updateOptions(this._adjustOptionsForRightHandSide(reader, changeSummary));\n\t\t\tthis.original.updateOptions(this._adjustOptionsForLeftHandSide(reader, changeSummary));\n\t\t}));\n\t}\n\n\tprivate _createLeftHandSideEditor(options: Readonly<IDiffEditorConstructionOptions>, codeEditorWidgetOptions: ICodeEditorWidgetOptions): CodeEditorWidget {\n\t\tconst leftHandSideOptions = this._adjustOptionsForLeftHandSide(undefined, options);\n\t\tconst editor = this._constructInnerEditor(this._instantiationService, this.originalEditorElement, leftHandSideOptions, codeEditorWidgetOptions);\n\t\teditor.setContextValue('isInDiffLeftEditor', true);\n\t\treturn editor;\n\t}\n\n\tprivate _createRightHandSideEditor(options: Readonly<IDiffEditorConstructionOptions>, codeEditorWidgetOptions: ICodeEditorWidgetOptions): CodeEditorWidget {\n\t\tconst rightHandSideOptions = this._adjustOptionsForRightHandSide(undefined, options);\n\t\tconst editor = this._constructInnerEditor(this._instantiationService, this.modifiedEditorElement, rightHandSideOptions, codeEditorWidgetOptions);\n\t\teditor.setContextValue('isInDiffRightEditor', true);\n\t\treturn editor;\n\t}\n\n\tprivate _constructInnerEditor(instantiationService: IInstantiationService, container: HTMLElement, options: Readonly<IEditorConstructionOptions>, editorWidgetOptions: ICodeEditorWidgetOptions): CodeEditorWidget {\n\t\tconst editor = this._createInnerEditor(instantiationService, container, options, editorWidgetOptions);\n\n\t\tthis._register(editor.onDidContentSizeChange(e => {\n\t\t\tconst width = this.original.getContentWidth() + this.modified.getContentWidth() + OverviewRulerPart.ENTIRE_DIFF_OVERVIEW_WIDTH;\n\t\t\tconst height = Math.max(this.modified.getContentHeight(), this.original.getContentHeight());\n\n\t\t\tthis._onDidContentSizeChange.fire({\n\t\t\t\tcontentHeight: height,\n\t\t\t\tcontentWidth: width,\n\t\t\t\tcontentHeightChanged: e.contentHeightChanged,\n\t\t\t\tcontentWidthChanged: e.contentWidthChanged\n\t\t\t});\n\t\t}));\n\t\treturn editor;\n\t}\n\n\tprivate _adjustOptionsForLeftHandSide(_reader: IReader | undefined, changedOptions: Readonly<IDiffEditorConstructionOptions>): IEditorConstructionOptions {\n\t\tconst result = this._adjustOptionsForSubEditor(changedOptions);\n\t\tif (!this._options.renderSideBySide.get()) {\n\t\t\t// never wrap hidden editor\n\t\t\tresult.wordWrapOverride1 = 'off';\n\t\t\tresult.wordWrapOverride2 = 'off';\n\t\t\tresult.stickyScroll = { enabled: false };\n\n\t\t\t// Disable unicode highlighting for the original side in inline mode, as they are not shown anyway.\n\t\t\tresult.unicodeHighlight = { nonBasicASCII: false, ambiguousCharacters: false, invisibleCharacters: false };\n\t\t} else {\n\t\t\tresult.unicodeHighlight = this._options.editorOptions.get().unicodeHighlight || {};\n\t\t\tresult.wordWrapOverride1 = this._options.diffWordWrap.get();\n\t\t}\n\t\tif (changedOptions.originalAriaLabel) {\n\t\t\tresult.ariaLabel = changedOptions.originalAriaLabel;\n\t\t}\n\t\tresult.ariaLabel = this._updateAriaLabel(result.ariaLabel);\n\t\tresult.readOnly = !this._options.originalEditable.get();\n\t\tresult.dropIntoEditor = { enabled: !result.readOnly };\n\t\tresult.extraEditorClassName = 'original-in-monaco-diff-editor';\n\t\treturn result;\n\t}\n\n\tprivate _adjustOptionsForRightHandSide(reader: IReader | undefined, changedOptions: Readonly<IDiffEditorConstructionOptions>): IEditorConstructionOptions {\n\t\tconst result = this._adjustOptionsForSubEditor(changedOptions);\n\t\tif (changedOptions.modifiedAriaLabel) {\n\t\t\tresult.ariaLabel = changedOptions.modifiedAriaLabel;\n\t\t}\n\t\tresult.ariaLabel = this._updateAriaLabel(result.ariaLabel);\n\t\tresult.wordWrapOverride1 = this._options.diffWordWrap.get();\n\t\tresult.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + OverviewRulerPart.ENTIRE_DIFF_OVERVIEW_WIDTH;\n\t\tresult.scrollbar!.verticalHasArrows = false;\n\t\tresult.extraEditorClassName = 'modified-in-monaco-diff-editor';\n\t\treturn result;\n\t}\n\n\tprivate _adjustOptionsForSubEditor(options: Readonly<IDiffEditorConstructionOptions>): IEditorConstructionOptions {\n\t\tconst clonedOptions = {\n\t\t\t...options,\n\t\t\tdimension: {\n\t\t\t\theight: 0,\n\t\t\t\twidth: 0\n\t\t\t},\n\t\t};\n\t\tclonedOptions.inDiffEditor = true;\n\t\tclonedOptions.automaticLayout = false;\n\n\t\t// Clone scrollbar options before changing them\n\t\tclonedOptions.scrollbar = { ...(clonedOptions.scrollbar || {}) };\n\t\tclonedOptions.scrollbar.vertical = 'visible';\n\t\tclonedOptions.folding = false;\n\t\tclonedOptions.codeLens = this._options.diffCodeLens.get();\n\t\tclonedOptions.fixedOverflowWidgets = true;\n\n\t\t// Clone minimap options before changing them\n\t\tclonedOptions.minimap = { ...(clonedOptions.minimap || {}) };\n\t\tclonedOptions.minimap.enabled = false;\n\n\t\tif (this._options.hideUnchangedRegions.get()) {\n\t\t\tclonedOptions.stickyScroll = { enabled: false };\n\t\t} else {\n\t\t\tclonedOptions.stickyScroll = this._options.editorOptions.get().stickyScroll;\n\t\t}\n\t\treturn clonedOptions;\n\t}\n\n\tprivate _updateAriaLabel(ariaLabel: string | undefined): string | undefined {\n\t\tif (!ariaLabel) {\n\t\t\tariaLabel = '';\n\t\t}\n\t\tconst ariaNavigationTip = localize('diff-aria-navigation-tip', ' use {0} to open the accessibility help.', this._keybindingService.lookupKeybinding('editor.action.accessibilityHelp')?.getAriaLabel());\n\t\tif (this._options.accessibilityVerbose.get()) {\n\t\t\treturn ariaLabel + ariaNavigationTip;\n\t\t} else if (ariaLabel) {\n\t\t\treturn ariaLabel.replaceAll(ariaNavigationTip, '');\n\t\t}\n\t\treturn '';\n\t}\n}\n"]}