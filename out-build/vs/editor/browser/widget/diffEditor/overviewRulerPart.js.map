{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/browser/widget/diffEditor/overviewRulerPart.ts"],"names":[],"mappings":"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","file":"overviewRulerPart.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventType, addDisposableListener, addStandardDisposableListener, h } from 'vs/base/browser/dom';\nimport { createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { IMouseWheelEvent } from 'vs/base/browser/mouseEvent';\nimport { ScrollbarState } from 'vs/base/browser/ui/scrollbar/scrollbarState';\nimport { Color } from 'vs/base/common/color';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IObservable, autorun, autorunWithStore, derived, observableFromEvent, observableSignalFromEvent } from 'vs/base/common/observable';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { DiffEditorEditors } from 'vs/editor/browser/widget/diffEditor/diffEditorEditors';\nimport { DiffEditorViewModel } from 'vs/editor/browser/widget/diffEditor/diffEditorViewModel';\nimport { appendRemoveOnDispose } from 'vs/editor/browser/widget/diffEditor/utils';\nimport { EditorLayoutInfo, EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { LineRange } from 'vs/editor/common/core/lineRange';\nimport { Position } from 'vs/editor/common/core/position';\nimport { OverviewRulerZone } from 'vs/editor/common/viewModel/overviewZoneManager';\nimport { defaultInsertColor, defaultRemoveColor, diffInserted, diffOverviewRulerInserted, diffOverviewRulerRemoved, diffRemoved } from 'vs/platform/theme/common/colorRegistry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { DiffEditorOptions } from './diffEditorOptions';\n\nexport class OverviewRulerPart extends Disposable {\n\tpublic static readonly ONE_OVERVIEW_WIDTH = 15;\n\tpublic static readonly ENTIRE_DIFF_OVERVIEW_WIDTH = OverviewRulerPart.ONE_OVERVIEW_WIDTH * 2;\n\n\tconstructor(\n\t\tprivate readonly _editors: DiffEditorEditors,\n\t\tprivate readonly _rootElement: HTMLElement,\n\t\tprivate readonly _diffModel: IObservable<DiffEditorViewModel | undefined>,\n\t\tprivate readonly _rootWidth: IObservable<number>,\n\t\tprivate readonly _rootHeight: IObservable<number>,\n\t\tprivate readonly _modifiedEditorLayoutInfo: IObservable<EditorLayoutInfo | null>,\n\t\tpublic readonly _options: DiffEditorOptions,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\n\t\tconst currentColorTheme = observableFromEvent(this._themeService.onDidColorThemeChange, () => this._themeService.getColorTheme());\n\n\t\tconst currentColors = derived(reader => {\n\t\t\t/** @description colors */\n\t\t\tconst theme = currentColorTheme.read(reader);\n\t\t\tconst insertColor = theme.getColor(diffOverviewRulerInserted) || (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n\t\t\tconst removeColor = theme.getColor(diffOverviewRulerRemoved) || (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n\t\t\treturn { insertColor, removeColor };\n\t\t});\n\n\t\tconst scrollTopObservable = observableFromEvent(this._editors.modified.onDidScrollChange, () => this._editors.modified.getScrollTop());\n\t\tconst scrollHeightObservable = observableFromEvent(this._editors.modified.onDidScrollChange, () => this._editors.modified.getScrollHeight());\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\t/** @description create diff editor overview ruler if enabled */\n\t\t\tif (!this._options.renderOverviewRuler.read(reader)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewportDomElement = createFastDomNode(document.createElement('div'));\n\t\t\tviewportDomElement.setClassName('diffViewport');\n\t\t\tviewportDomElement.setPosition('absolute');\n\n\t\t\tconst diffOverviewRoot = h('div.diffOverview', {\n\t\t\t\tstyle: { position: 'absolute', top: '0px', width: OverviewRulerPart.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px' }\n\t\t\t}).root;\n\t\t\tstore.add(appendRemoveOnDispose(diffOverviewRoot, viewportDomElement.domNode));\n\t\t\tstore.add(addStandardDisposableListener(diffOverviewRoot, EventType.POINTER_DOWN, (e) => {\n\t\t\t\tthis._editors.modified.delegateVerticalScrollbarPointerDown(e);\n\t\t\t}));\n\t\t\tstore.add(addDisposableListener(diffOverviewRoot, EventType.MOUSE_WHEEL, (e: IMouseWheelEvent) => {\n\t\t\t\tthis._editors.modified.delegateScrollFromMouseWheelEvent(e);\n\t\t\t}, { passive: false }));\n\t\t\tstore.add(appendRemoveOnDispose(this._rootElement, diffOverviewRoot));\n\n\t\t\tstore.add(autorunWithStore((reader, store) => {\n\t\t\t\t/** @description recreate overview rules when model changes */\n\t\t\t\tconst m = this._diffModel.read(reader);\n\n\t\t\t\tconst originalOverviewRuler = this._editors.original.createOverviewRuler('original diffOverviewRuler');\n\t\t\t\tif (originalOverviewRuler) {\n\t\t\t\t\tstore.add(originalOverviewRuler);\n\t\t\t\t\tstore.add(appendRemoveOnDispose(diffOverviewRoot, originalOverviewRuler.getDomNode()));\n\t\t\t\t}\n\n\t\t\t\tconst modifiedOverviewRuler = this._editors.modified.createOverviewRuler('modified diffOverviewRuler');\n\t\t\t\tif (modifiedOverviewRuler) {\n\t\t\t\t\tstore.add(modifiedOverviewRuler);\n\t\t\t\t\tstore.add(appendRemoveOnDispose(diffOverviewRoot, modifiedOverviewRuler.getDomNode()));\n\t\t\t\t}\n\n\t\t\t\tif (!originalOverviewRuler || !modifiedOverviewRuler) {\n\t\t\t\t\t// probably no model\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst origViewZonesChanged = observableSignalFromEvent('viewZoneChanged', this._editors.original.onDidChangeViewZones);\n\t\t\t\tconst modViewZonesChanged = observableSignalFromEvent('viewZoneChanged', this._editors.modified.onDidChangeViewZones);\n\t\t\t\tconst origHiddenRangesChanged = observableSignalFromEvent('hiddenRangesChanged', this._editors.original.onDidChangeHiddenAreas);\n\t\t\t\tconst modHiddenRangesChanged = observableSignalFromEvent('hiddenRangesChanged', this._editors.modified.onDidChangeHiddenAreas);\n\n\t\t\t\tstore.add(autorun(reader => {\n\t\t\t\t\t/** @description set overview ruler zones */\n\t\t\t\t\torigViewZonesChanged.read(reader);\n\t\t\t\t\tmodViewZonesChanged.read(reader);\n\t\t\t\t\torigHiddenRangesChanged.read(reader);\n\t\t\t\t\tmodHiddenRangesChanged.read(reader);\n\n\t\t\t\t\tconst colors = currentColors.read(reader);\n\t\t\t\t\tconst diff = m?.diff.read(reader)?.mappings;\n\n\t\t\t\t\tfunction createZones(ranges: LineRange[], color: Color, editor: CodeEditorWidget) {\n\t\t\t\t\t\tconst vm = editor._getViewModel();\n\t\t\t\t\t\tif (!vm) {\n\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ranges\n\t\t\t\t\t\t\t.filter(d => d.length > 0)\n\t\t\t\t\t\t\t.map(r => {\n\t\t\t\t\t\t\t\tconst start = vm.coordinatesConverter.convertModelPositionToViewPosition(new Position(r.startLineNumber, 1));\n\t\t\t\t\t\t\t\tconst end = vm.coordinatesConverter.convertModelPositionToViewPosition(new Position(r.endLineNumberExclusive, 1));\n\t\t\t\t\t\t\t\t// By computing the lineCount, we won't ask the view model later for the bottom vertical position.\n\t\t\t\t\t\t\t\t// (The view model will take into account the alignment viewzones, which will give\n\t\t\t\t\t\t\t\t// modifications and deletetions always the same height.)\n\t\t\t\t\t\t\t\tconst lineCount = end.lineNumber - start.lineNumber;\n\t\t\t\t\t\t\t\treturn new OverviewRulerZone(start.lineNumber, end.lineNumber, lineCount, color.toString());\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst originalZones = createZones((diff || []).map(d => d.lineRangeMapping.original), colors.removeColor, this._editors.original);\n\t\t\t\t\tconst modifiedZones = createZones((diff || []).map(d => d.lineRangeMapping.modified), colors.insertColor, this._editors.modified);\n\t\t\t\t\toriginalOverviewRuler?.setZones(originalZones);\n\t\t\t\t\tmodifiedOverviewRuler?.setZones(modifiedZones);\n\t\t\t\t}));\n\n\t\t\t\tstore.add(autorun(reader => {\n\t\t\t\t\t/** @description layout overview ruler */\n\t\t\t\t\tconst height = this._rootHeight.read(reader);\n\t\t\t\t\tconst width = this._rootWidth.read(reader);\n\t\t\t\t\tconst layoutInfo = this._modifiedEditorLayoutInfo.read(reader);\n\t\t\t\t\tif (layoutInfo) {\n\t\t\t\t\t\tconst freeSpace = OverviewRulerPart.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * OverviewRulerPart.ONE_OVERVIEW_WIDTH;\n\t\t\t\t\t\toriginalOverviewRuler.setLayout({\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\theight: height,\n\t\t\t\t\t\t\tright: freeSpace + OverviewRulerPart.ONE_OVERVIEW_WIDTH,\n\t\t\t\t\t\t\twidth: OverviewRulerPart.ONE_OVERVIEW_WIDTH,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tmodifiedOverviewRuler.setLayout({\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\theight: height,\n\t\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t\twidth: OverviewRulerPart.ONE_OVERVIEW_WIDTH,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst scrollTop = scrollTopObservable.read(reader);\n\t\t\t\t\t\tconst scrollHeight = scrollHeightObservable.read(reader);\n\n\t\t\t\t\t\tconst scrollBarOptions = this._editors.modified.getOption(EditorOption.scrollbar);\n\t\t\t\t\t\tconst state = new ScrollbarState(\n\t\t\t\t\t\t\tscrollBarOptions.verticalHasArrows ? scrollBarOptions.arrowSize : 0,\n\t\t\t\t\t\t\tscrollBarOptions.verticalScrollbarSize,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tlayoutInfo.height,\n\t\t\t\t\t\t\tscrollHeight,\n\t\t\t\t\t\t\tscrollTop\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tviewportDomElement.setTop(state.getSliderPosition());\n\t\t\t\t\t\tviewportDomElement.setHeight(state.getSliderSize());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tviewportDomElement.setTop(0);\n\t\t\t\t\t\tviewportDomElement.setHeight(0);\n\t\t\t\t\t}\n\n\t\t\t\t\tdiffOverviewRoot.style.height = height + 'px';\n\t\t\t\t\tdiffOverviewRoot.style.left = (width - OverviewRulerPart.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\n\t\t\t\t\tviewportDomElement.setWidth(OverviewRulerPart.ENTIRE_DIFF_OVERVIEW_WIDTH);\n\t\t\t\t}));\n\t\t\t}));\n\t\t}));\n\t}\n}\n"]}