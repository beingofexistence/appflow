{"version":3,"sources":["vs/editor/browser/controller/textAreaHandler.ts"],"names":[],"mappings":"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","file":"textAreaHandler.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./textAreaHandler';\nimport * as nls from 'vs/nls';\nimport * as browser from 'vs/base/browser/browser';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport * as platform from 'vs/base/common/platform';\nimport * as strings from 'vs/base/common/strings';\nimport { applyFontInfo } from 'vs/editor/browser/config/domFontInfo';\nimport { CopyOptions, ICompositionData, IPasteData, ITextAreaInputHost, TextAreaInput, ClipboardDataToCopy, TextAreaWrapper } from 'vs/editor/browser/controller/textAreaInput';\nimport { ISimpleModel, ITypeData, PagedScreenReaderStrategy, TextAreaState, _debugComposition } from 'vs/editor/browser/controller/textAreaState';\nimport { ViewController } from 'vs/editor/browser/view/viewController';\nimport { PartFingerprint, PartFingerprints, ViewPart } from 'vs/editor/browser/view/viewPart';\nimport { LineNumbersOverlay } from 'vs/editor/browser/viewParts/lineNumbers/lineNumbers';\nimport { Margin } from 'vs/editor/browser/viewParts/margin/margin';\nimport { RenderLineNumbersType, EditorOption, IComputedEditorOptions, EditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { FontInfo } from 'vs/editor/common/config/fontInfo';\nimport { WordCharacterClass, getMapForWordSeparators } from 'vs/editor/common/core/wordCharacterClassifier';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { EndOfLinePreference } from 'vs/editor/common/model';\nimport { RenderingContext, RestrictedRenderingContext, HorizontalPosition } from 'vs/editor/browser/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/viewModel/viewContext';\nimport * as viewEvents from 'vs/editor/common/viewEvents';\nimport { AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\nimport { IEditorAriaOptions } from 'vs/editor/browser/editorBrowser';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from 'vs/base/browser/ui/mouseCursor/mouseCursor';\nimport { TokenizationRegistry } from 'vs/editor/common/languages';\nimport { ColorId, ITokenPresentation } from 'vs/editor/common/encodedTokenAttributes';\nimport { Color } from 'vs/base/common/color';\nimport { IME } from 'vs/base/common/ime';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\n\nexport interface IVisibleRangeProvider {\n\tvisibleRangeForPosition(position: Position): HorizontalPosition | null;\n}\n\nclass VisibleTextAreaData {\n\t_visibleTextAreaBrand: void = undefined;\n\n\tpublic startPosition: Position | null = null;\n\tpublic endPosition: Position | null = null;\n\n\tpublic visibleTextareaStart: HorizontalPosition | null = null;\n\tpublic visibleTextareaEnd: HorizontalPosition | null = null;\n\n\t/**\n\t * When doing composition, the currently composed text might be split up into\n\t * multiple tokens, then merged again into a single token, etc. Here we attempt\n\t * to keep the presentation of the <textarea> stable by using the previous used\n\t * style if multiple tokens come into play. This avoids flickering.\n\t */\n\tprivate _previousPresentation: ITokenPresentation | null = null;\n\n\tconstructor(\n\t\tprivate readonly _context: ViewContext,\n\t\tpublic readonly modelLineNumber: number,\n\t\tpublic readonly distanceToModelLineStart: number,\n\t\tpublic readonly widthOfHiddenLineTextBefore: number,\n\t\tpublic readonly distanceToModelLineEnd: number,\n\t) {\n\t}\n\n\tprepareRender(visibleRangeProvider: IVisibleRangeProvider): void {\n\t\tconst startModelPosition = new Position(this.modelLineNumber, this.distanceToModelLineStart + 1);\n\t\tconst endModelPosition = new Position(this.modelLineNumber, this._context.viewModel.model.getLineMaxColumn(this.modelLineNumber) - this.distanceToModelLineEnd);\n\n\t\tthis.startPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(startModelPosition);\n\t\tthis.endPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(endModelPosition);\n\n\t\tif (this.startPosition.lineNumber === this.endPosition.lineNumber) {\n\t\t\tthis.visibleTextareaStart = visibleRangeProvider.visibleRangeForPosition(this.startPosition);\n\t\t\tthis.visibleTextareaEnd = visibleRangeProvider.visibleRangeForPosition(this.endPosition);\n\t\t} else {\n\t\t\t// TODO: what if the view positions are not on the same line?\n\t\t\tthis.visibleTextareaStart = null;\n\t\t\tthis.visibleTextareaEnd = null;\n\t\t}\n\t}\n\n\tdefinePresentation(tokenPresentation: ITokenPresentation | null): ITokenPresentation {\n\t\tif (!this._previousPresentation) {\n\t\t\t// To avoid flickering, once set, always reuse a presentation throughout the entire IME session\n\t\t\tif (tokenPresentation) {\n\t\t\t\tthis._previousPresentation = tokenPresentation;\n\t\t\t} else {\n\t\t\t\tthis._previousPresentation = {\n\t\t\t\t\tforeground: ColorId.DefaultForeground,\n\t\t\t\t\titalic: false,\n\t\t\t\t\tbold: false,\n\t\t\t\t\tunderline: false,\n\t\t\t\t\tstrikethrough: false,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn this._previousPresentation;\n\t}\n}\n\nconst canUseZeroSizeTextarea = (browser.isFirefox);\n\nexport class TextAreaHandler extends ViewPart {\n\n\tprivate readonly _viewController: ViewController;\n\tprivate readonly _visibleRangeProvider: IVisibleRangeProvider;\n\tprivate _scrollLeft: number;\n\tprivate _scrollTop: number;\n\n\tprivate _accessibilitySupport!: AccessibilitySupport;\n\tprivate _accessibilityPageSize!: number;\n\tprivate _textAreaWrapping!: boolean;\n\tprivate _textAreaWidth!: number;\n\tprivate _contentLeft: number;\n\tprivate _contentWidth: number;\n\tprivate _contentHeight: number;\n\tprivate _fontInfo: FontInfo;\n\tprivate _lineHeight: number;\n\tprivate _emptySelectionClipboard: boolean;\n\tprivate _copyWithSyntaxHighlighting: boolean;\n\n\t/**\n\t * Defined only when the text area is visible (composition case).\n\t */\n\tprivate _visibleTextArea: VisibleTextAreaData | null;\n\tprivate _selections: Selection[];\n\tprivate _modelSelections: Selection[];\n\n\t/**\n\t * The position at which the textarea was rendered.\n\t * This is useful for hit-testing and determining the mouse position.\n\t */\n\tprivate _lastRenderPosition: Position | null;\n\n\tpublic readonly textArea: FastDomNode<HTMLTextAreaElement>;\n\tpublic readonly textAreaCover: FastDomNode<HTMLElement>;\n\tprivate readonly _textAreaInput: TextAreaInput;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tviewController: ViewController,\n\t\tvisibleRangeProvider: IVisibleRangeProvider,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService\n\t) {\n\t\tsuper(context);\n\n\t\tthis._viewController = viewController;\n\t\tthis._visibleRangeProvider = visibleRangeProvider;\n\t\tthis._scrollLeft = 0;\n\t\tthis._scrollTop = 0;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._setAccessibilityOptions(options);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentHeight = layoutInfo.height;\n\t\tthis._fontInfo = options.get(EditorOption.fontInfo);\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._emptySelectionClipboard = options.get(EditorOption.emptySelectionClipboard);\n\t\tthis._copyWithSyntaxHighlighting = options.get(EditorOption.copyWithSyntaxHighlighting);\n\n\t\tthis._visibleTextArea = null;\n\t\tthis._selections = [new Selection(1, 1, 1, 1)];\n\t\tthis._modelSelections = [new Selection(1, 1, 1, 1)];\n\t\tthis._lastRenderPosition = null;\n\n\t\t// Text Area (The focus will always be in the textarea when the cursor is blinking)\n\t\tthis.textArea = createFastDomNode(document.createElement('textarea'));\n\t\tPartFingerprints.write(this.textArea, PartFingerprint.TextArea);\n\t\tthis.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n\t\tthis.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n\t\tconst { tabSize } = this._context.viewModel.model.getOptions();\n\t\tthis.textArea.domNode.style.tabSize = `${tabSize * this._fontInfo.spaceWidth}px`;\n\t\tthis.textArea.setAttribute('autocorrect', 'off');\n\t\tthis.textArea.setAttribute('autocapitalize', 'off');\n\t\tthis.textArea.setAttribute('autocomplete', 'off');\n\t\tthis.textArea.setAttribute('spellcheck', 'false');\n\t\tthis.textArea.setAttribute('aria-label', this._getAriaLabel(options));\n\t\tthis.textArea.setAttribute('aria-required', options.get(EditorOption.ariaRequired) ? 'true' : 'false');\n\t\tthis.textArea.setAttribute('tabindex', String(options.get(EditorOption.tabIndex)));\n\t\tthis.textArea.setAttribute('role', 'textbox');\n\t\tthis.textArea.setAttribute('aria-roledescription', nls.localize('editor', \"editor\"));\n\t\tthis.textArea.setAttribute('aria-multiline', 'true');\n\t\tthis.textArea.setAttribute('aria-autocomplete', options.get(EditorOption.readOnly) ? 'none' : 'both');\n\n\t\tthis._ensureReadOnlyAttribute();\n\n\t\tthis.textAreaCover = createFastDomNode(document.createElement('div'));\n\t\tthis.textAreaCover.setPosition('absolute');\n\n\t\tconst simpleModel: ISimpleModel = {\n\t\t\tgetLineCount: (): number => {\n\t\t\t\treturn this._context.viewModel.getLineCount();\n\t\t\t},\n\t\t\tgetLineMaxColumn: (lineNumber: number): number => {\n\t\t\t\treturn this._context.viewModel.getLineMaxColumn(lineNumber);\n\t\t\t},\n\t\t\tgetValueInRange: (range: Range, eol: EndOfLinePreference): string => {\n\t\t\t\treturn this._context.viewModel.getValueInRange(range, eol);\n\t\t\t},\n\t\t\tgetValueLengthInRange: (range: Range, eol: EndOfLinePreference): number => {\n\t\t\t\treturn this._context.viewModel.getValueLengthInRange(range, eol);\n\t\t\t},\n\t\t\tmodifyPosition: (position: Position, offset: number): Position => {\n\t\t\t\treturn this._context.viewModel.modifyPosition(position, offset);\n\t\t\t}\n\t\t};\n\n\t\tconst textAreaInputHost: ITextAreaInputHost = {\n\t\t\tgetDataToCopy: (): ClipboardDataToCopy => {\n\t\t\t\tconst rawTextToCopy = this._context.viewModel.getPlainTextToCopy(this._modelSelections, this._emptySelectionClipboard, platform.isWindows);\n\t\t\t\tconst newLineCharacter = this._context.viewModel.model.getEOL();\n\n\t\t\t\tconst isFromEmptySelection = (this._emptySelectionClipboard && this._modelSelections.length === 1 && this._modelSelections[0].isEmpty());\n\t\t\t\tconst multicursorText = (Array.isArray(rawTextToCopy) ? rawTextToCopy : null);\n\t\t\t\tconst text = (Array.isArray(rawTextToCopy) ? rawTextToCopy.join(newLineCharacter) : rawTextToCopy);\n\n\t\t\t\tlet html: string | null | undefined = undefined;\n\t\t\t\tlet mode: string | null = null;\n\t\t\t\tif (CopyOptions.forceCopyWithSyntaxHighlighting || (this._copyWithSyntaxHighlighting && text.length < 65536)) {\n\t\t\t\t\tconst richText = this._context.viewModel.getRichTextToCopy(this._modelSelections, this._emptySelectionClipboard);\n\t\t\t\t\tif (richText) {\n\t\t\t\t\t\thtml = richText.html;\n\t\t\t\t\t\tmode = richText.mode;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tisFromEmptySelection,\n\t\t\t\t\tmulticursorText,\n\t\t\t\t\ttext,\n\t\t\t\t\thtml,\n\t\t\t\t\tmode\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetScreenReaderContent: (): TextAreaState => {\n\t\t\t\tif (this._accessibilitySupport === AccessibilitySupport.Disabled) {\n\t\t\t\t\t// We know for a fact that a screen reader is not attached\n\t\t\t\t\t// On OSX, we write the character before the cursor to allow for \"long-press\" composition\n\t\t\t\t\t// Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints\n\t\t\t\t\tconst selection = this._selections[0];\n\t\t\t\t\tif (platform.isMacintosh && selection.isEmpty()) {\n\t\t\t\t\t\tconst position = selection.getStartPosition();\n\n\t\t\t\t\t\tlet textBefore = this._getWordBeforePosition(position);\n\t\t\t\t\t\tif (textBefore.length === 0) {\n\t\t\t\t\t\t\ttextBefore = this._getCharacterBeforePosition(position);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (textBefore.length > 0) {\n\t\t\t\t\t\t\treturn new TextAreaState(textBefore, textBefore.length, textBefore.length, Range.fromPositions(position), 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// on macOS, write current selection into textarea will allow system text services pick selected text,\n\t\t\t\t\t// but we still want to limit the amount of text given Chromium handles very poorly text even of a few\n\t\t\t\t\t// thousand chars\n\t\t\t\t\t// (https://github.com/microsoft/vscode/issues/27799)\n\t\t\t\t\tconst LIMIT_CHARS = 500;\n\t\t\t\t\tif (platform.isMacintosh && !selection.isEmpty() && simpleModel.getValueLengthInRange(selection, EndOfLinePreference.TextDefined) < LIMIT_CHARS) {\n\t\t\t\t\t\tconst text = simpleModel.getValueInRange(selection, EndOfLinePreference.TextDefined);\n\t\t\t\t\t\treturn new TextAreaState(text, 0, text.length, selection, 0);\n\t\t\t\t\t}\n\n\t\t\t\t\t// on Safari, document.execCommand('cut') and document.execCommand('copy') will just not work\n\t\t\t\t\t// if the textarea has no content selected. So if there is an editor selection, ensure something\n\t\t\t\t\t// is selected in the textarea.\n\t\t\t\t\tif (browser.isSafari && !selection.isEmpty()) {\n\t\t\t\t\t\tconst placeholderText = 'vscode-placeholder';\n\t\t\t\t\t\treturn new TextAreaState(placeholderText, 0, placeholderText.length, null, undefined);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn TextAreaState.EMPTY;\n\t\t\t\t}\n\n\t\t\t\tif (browser.isAndroid) {\n\t\t\t\t\t// when tapping in the editor on a word, Android enters composition mode.\n\t\t\t\t\t// in the `compositionstart` event we cannot clear the textarea, because\n\t\t\t\t\t// it then forgets to ever send a `compositionend`.\n\t\t\t\t\t// we therefore only write the current word in the textarea\n\t\t\t\t\tconst selection = this._selections[0];\n\t\t\t\t\tif (selection.isEmpty()) {\n\t\t\t\t\t\tconst position = selection.getStartPosition();\n\t\t\t\t\t\tconst [wordAtPosition, positionOffsetInWord] = this._getAndroidWordAtPosition(position);\n\t\t\t\t\t\tif (wordAtPosition.length > 0) {\n\t\t\t\t\t\t\treturn new TextAreaState(wordAtPosition, positionOffsetInWord, positionOffsetInWord, Range.fromPositions(position), 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn TextAreaState.EMPTY;\n\t\t\t\t}\n\n\t\t\t\treturn PagedScreenReaderStrategy.fromEditorSelection(simpleModel, this._selections[0], this._accessibilityPageSize, this._accessibilitySupport === AccessibilitySupport.Unknown);\n\t\t\t},\n\n\t\t\tdeduceModelPosition: (viewAnchorPosition: Position, deltaOffset: number, lineFeedCnt: number): Position => {\n\t\t\t\treturn this._context.viewModel.deduceModelPositionRelativeToViewPosition(viewAnchorPosition, deltaOffset, lineFeedCnt);\n\t\t\t}\n\t\t};\n\n\t\tconst textAreaWrapper = this._register(new TextAreaWrapper(this.textArea.domNode));\n\t\tthis._textAreaInput = this._register(new TextAreaInput(textAreaInputHost, textAreaWrapper, platform.OS, {\n\t\t\tisAndroid: browser.isAndroid,\n\t\t\tisChrome: browser.isChrome,\n\t\t\tisFirefox: browser.isFirefox,\n\t\t\tisSafari: browser.isSafari,\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onKeyDown((e: IKeyboardEvent) => {\n\t\t\tthis._viewController.emitKeyDown(e);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onKeyUp((e: IKeyboardEvent) => {\n\t\t\tthis._viewController.emitKeyUp(e);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onPaste((e: IPasteData) => {\n\t\t\tlet pasteOnNewLine = false;\n\t\t\tlet multicursorText: string[] | null = null;\n\t\t\tlet mode: string | null = null;\n\t\t\tif (e.metadata) {\n\t\t\t\tpasteOnNewLine = (this._emptySelectionClipboard && !!e.metadata.isFromEmptySelection);\n\t\t\t\tmulticursorText = (typeof e.metadata.multicursorText !== 'undefined' ? e.metadata.multicursorText : null);\n\t\t\t\tmode = e.metadata.mode;\n\t\t\t}\n\t\t\tthis._viewController.paste(e.text, pasteOnNewLine, multicursorText, mode);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onCut(() => {\n\t\t\tthis._viewController.cut();\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onType((e: ITypeData) => {\n\t\t\tif (e.replacePrevCharCnt || e.replaceNextCharCnt || e.positionDelta) {\n\t\t\t\t// must be handled through the new command\n\t\t\t\tif (_debugComposition) {\n\t\t\t\t\tconsole.log(` => compositionType: <<${e.text}>>, ${e.replacePrevCharCnt}, ${e.replaceNextCharCnt}, ${e.positionDelta}`);\n\t\t\t\t}\n\t\t\t\tthis._viewController.compositionType(e.text, e.replacePrevCharCnt, e.replaceNextCharCnt, e.positionDelta);\n\t\t\t} else {\n\t\t\t\tif (_debugComposition) {\n\t\t\t\t\tconsole.log(` => type: <<${e.text}>>`);\n\t\t\t\t}\n\t\t\t\tthis._viewController.type(e.text);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onSelectionChangeRequest((modelSelection: Selection) => {\n\t\t\tthis._viewController.setSelection(modelSelection);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onCompositionStart((e) => {\n\n\t\t\t// The textarea might contain some content when composition starts.\n\t\t\t//\n\t\t\t// When we make the textarea visible, it always has a height of 1 line,\n\t\t\t// so we don't need to worry too much about content on lines above or below\n\t\t\t// the selection.\n\t\t\t//\n\t\t\t// However, the text on the current line needs to be made visible because\n\t\t\t// some IME methods allow to move to other glyphs on the current line\n\t\t\t// (by pressing arrow keys).\n\t\t\t//\n\t\t\t// (1) The textarea might contain only some parts of the current line,\n\t\t\t// like the word before the selection. Also, the content inside the textarea\n\t\t\t// can grow or shrink as composition occurs. We therefore anchor the textarea\n\t\t\t// in terms of distance to a certain line start and line end.\n\t\t\t//\n\t\t\t// (2) Also, we should not make \\t characters visible, because their rendering\n\t\t\t// inside the <textarea> will not align nicely with our rendering. We therefore\n\t\t\t// will hide (if necessary) some of the leading text on the current line.\n\n\t\t\tconst ta = this.textArea.domNode;\n\t\t\tconst modelSelection = this._modelSelections[0];\n\n\t\t\tconst { distanceToModelLineStart, widthOfHiddenTextBefore } = (() => {\n\t\t\t\t// Find the text that is on the current line before the selection\n\t\t\t\tconst textBeforeSelection = ta.value.substring(0, Math.min(ta.selectionStart, ta.selectionEnd));\n\t\t\t\tconst lineFeedOffset1 = textBeforeSelection.lastIndexOf('\\n');\n\t\t\t\tconst lineTextBeforeSelection = textBeforeSelection.substring(lineFeedOffset1 + 1);\n\n\t\t\t\t// We now search to see if we should hide some part of it (if it contains \\t)\n\t\t\t\tconst tabOffset1 = lineTextBeforeSelection.lastIndexOf('\\t');\n\t\t\t\tconst desiredVisibleBeforeCharCount = lineTextBeforeSelection.length - tabOffset1 - 1;\n\t\t\t\tconst startModelPosition = modelSelection.getStartPosition();\n\t\t\t\tconst visibleBeforeCharCount = Math.min(startModelPosition.column - 1, desiredVisibleBeforeCharCount);\n\t\t\t\tconst distanceToModelLineStart = startModelPosition.column - 1 - visibleBeforeCharCount;\n\t\t\t\tconst hiddenLineTextBefore = lineTextBeforeSelection.substring(0, lineTextBeforeSelection.length - visibleBeforeCharCount);\n\t\t\t\tconst { tabSize } = this._context.viewModel.model.getOptions();\n\t\t\t\tconst widthOfHiddenTextBefore = measureText(this.textArea.domNode.ownerDocument, hiddenLineTextBefore, this._fontInfo, tabSize);\n\n\t\t\t\treturn { distanceToModelLineStart, widthOfHiddenTextBefore };\n\t\t\t})();\n\n\t\t\tconst { distanceToModelLineEnd } = (() => {\n\t\t\t\t// Find the text that is on the current line after the selection\n\t\t\t\tconst textAfterSelection = ta.value.substring(Math.max(ta.selectionStart, ta.selectionEnd));\n\t\t\t\tconst lineFeedOffset2 = textAfterSelection.indexOf('\\n');\n\t\t\t\tconst lineTextAfterSelection = lineFeedOffset2 === -1 ? textAfterSelection : textAfterSelection.substring(0, lineFeedOffset2);\n\n\t\t\t\tconst tabOffset2 = lineTextAfterSelection.indexOf('\\t');\n\t\t\t\tconst desiredVisibleAfterCharCount = (tabOffset2 === -1 ? lineTextAfterSelection.length : lineTextAfterSelection.length - tabOffset2 - 1);\n\t\t\t\tconst endModelPosition = modelSelection.getEndPosition();\n\t\t\t\tconst visibleAfterCharCount = Math.min(this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column, desiredVisibleAfterCharCount);\n\t\t\t\tconst distanceToModelLineEnd = this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column - visibleAfterCharCount;\n\n\t\t\t\treturn { distanceToModelLineEnd };\n\t\t\t})();\n\n\t\t\t// Scroll to reveal the location in the editor where composition occurs\n\t\t\tthis._context.viewModel.revealRange(\n\t\t\t\t'keyboard',\n\t\t\t\ttrue,\n\t\t\t\tRange.fromPositions(this._selections[0].getStartPosition()),\n\t\t\t\tviewEvents.VerticalRevealType.Simple,\n\t\t\t\tScrollType.Immediate\n\t\t\t);\n\n\t\t\tthis._visibleTextArea = new VisibleTextAreaData(\n\t\t\t\tthis._context,\n\t\t\t\tmodelSelection.startLineNumber,\n\t\t\t\tdistanceToModelLineStart,\n\t\t\t\twidthOfHiddenTextBefore,\n\t\t\t\tdistanceToModelLineEnd,\n\t\t\t);\n\n\t\t\t// We turn off wrapping if the <textarea> becomes visible for composition\n\t\t\tthis.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n\n\t\t\tthis._visibleTextArea.prepareRender(this._visibleRangeProvider);\n\t\t\tthis._render();\n\n\t\t\t// Show the textarea\n\t\t\tthis.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ime-input`);\n\n\t\t\tthis._viewController.compositionStart();\n\t\t\tthis._context.viewModel.onCompositionStart();\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onCompositionUpdate((e: ICompositionData) => {\n\t\t\tif (!this._visibleTextArea) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._visibleTextArea.prepareRender(this._visibleRangeProvider);\n\t\t\tthis._render();\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onCompositionEnd(() => {\n\n\t\t\tthis._visibleTextArea = null;\n\n\t\t\t// We turn on wrapping as necessary if the <textarea> hides after composition\n\t\t\tthis.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n\n\t\t\tthis._render();\n\n\t\t\tthis.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n\t\t\tthis._viewController.compositionEnd();\n\t\t\tthis._context.viewModel.onCompositionEnd();\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onFocus(() => {\n\t\t\tthis._context.viewModel.setHasFocus(true);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onBlur(() => {\n\t\t\tthis._context.viewModel.setHasFocus(false);\n\t\t}));\n\n\t\tthis._register(IME.onDidChange(() => {\n\t\t\tthis._ensureReadOnlyAttribute();\n\t\t}));\n\t}\n\n\tpublic writeScreenReaderContent(reason: string): void {\n\t\tthis._textAreaInput.writeScreenReaderContent(reason);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate _getAndroidWordAtPosition(position: Position): [string, number] {\n\t\tconst ANDROID_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\",.<>/?';\n\t\tconst lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n\t\tconst wordSeparators = getMapForWordSeparators(ANDROID_WORD_SEPARATORS);\n\n\t\tlet goingLeft = true;\n\t\tlet startColumn = position.column;\n\t\tlet goingRight = true;\n\t\tlet endColumn = position.column;\n\t\tlet distance = 0;\n\t\twhile (distance < 50 && (goingLeft || goingRight)) {\n\t\t\tif (goingLeft && startColumn <= 1) {\n\t\t\t\tgoingLeft = false;\n\t\t\t}\n\t\t\tif (goingLeft) {\n\t\t\t\tconst charCode = lineContent.charCodeAt(startColumn - 2);\n\t\t\t\tconst charClass = wordSeparators.get(charCode);\n\t\t\t\tif (charClass !== WordCharacterClass.Regular) {\n\t\t\t\t\tgoingLeft = false;\n\t\t\t\t} else {\n\t\t\t\t\tstartColumn--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (goingRight && endColumn > lineContent.length) {\n\t\t\t\tgoingRight = false;\n\t\t\t}\n\t\t\tif (goingRight) {\n\t\t\t\tconst charCode = lineContent.charCodeAt(endColumn - 1);\n\t\t\t\tconst charClass = wordSeparators.get(charCode);\n\t\t\t\tif (charClass !== WordCharacterClass.Regular) {\n\t\t\t\t\tgoingRight = false;\n\t\t\t\t} else {\n\t\t\t\t\tendColumn++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdistance++;\n\t\t}\n\n\t\treturn [lineContent.substring(startColumn - 1, endColumn - 1), position.column - startColumn];\n\t}\n\n\tprivate _getWordBeforePosition(position: Position): string {\n\t\tconst lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n\t\tconst wordSeparators = getMapForWordSeparators(this._context.configuration.options.get(EditorOption.wordSeparators));\n\n\t\tlet column = position.column;\n\t\tlet distance = 0;\n\t\twhile (column > 1) {\n\t\t\tconst charCode = lineContent.charCodeAt(column - 2);\n\t\t\tconst charClass = wordSeparators.get(charCode);\n\t\t\tif (charClass !== WordCharacterClass.Regular || distance > 50) {\n\t\t\t\treturn lineContent.substring(column - 1, position.column - 1);\n\t\t\t}\n\t\t\tdistance++;\n\t\t\tcolumn--;\n\t\t}\n\t\treturn lineContent.substring(0, position.column - 1);\n\t}\n\n\tprivate _getCharacterBeforePosition(position: Position): string {\n\t\tif (position.column > 1) {\n\t\t\tconst lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n\t\t\tconst charBefore = lineContent.charAt(position.column - 2);\n\t\t\tif (!strings.isHighSurrogate(charBefore.charCodeAt(0))) {\n\t\t\t\treturn charBefore;\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t}\n\n\tprivate _getAriaLabel(options: IComputedEditorOptions): string {\n\t\tconst accessibilitySupport = options.get(EditorOption.accessibilitySupport);\n\t\tif (accessibilitySupport === AccessibilitySupport.Disabled) {\n\n\t\t\tconst toggleKeybindingLabel = this._keybindingService.lookupKeybinding('editor.action.toggleScreenReaderAccessibilityMode')?.getAriaLabel();\n\t\t\tconst runCommandKeybindingLabel = this._keybindingService.lookupKeybinding('workbench.action.showCommands')?.getAriaLabel();\n\t\t\tconst keybindingEditorKeybindingLabel = this._keybindingService.lookupKeybinding('workbench.action.openGlobalKeybindings')?.getAriaLabel();\n\t\t\tconst editorNotAccessibleMessage = nls.localize('accessibilityModeOff', \"The editor is not accessible at this time.\");\n\t\t\tif (toggleKeybindingLabel) {\n\t\t\t\treturn nls.localize('accessibilityOffAriaLabel', \"{0} To enable screen reader optimized mode, use {1}\", editorNotAccessibleMessage, toggleKeybindingLabel);\n\t\t\t} else if (runCommandKeybindingLabel) {\n\t\t\t\treturn nls.localize('accessibilityOffAriaLabelNoKb', \"{0} To enable screen reader optimized mode, open the quick pick with {1} and run the command Toggle Screen Reader Accessibility Mode, which is currently not triggerable via keyboard.\", editorNotAccessibleMessage, runCommandKeybindingLabel);\n\t\t\t} else if (keybindingEditorKeybindingLabel) {\n\t\t\t\treturn nls.localize('accessibilityOffAriaLabelNoKbs', \"{0} Please assign a keybinding for the command Toggle Screen Reader Accessibility Mode by accessing the keybindings editor with {1} and run it.\", editorNotAccessibleMessage, keybindingEditorKeybindingLabel);\n\t\t\t} else {\n\t\t\t\t// SOS\n\t\t\t\treturn editorNotAccessibleMessage;\n\t\t\t}\n\t\t}\n\t\treturn options.get(EditorOption.ariaLabel);\n\t}\n\n\tprivate _setAccessibilityOptions(options: IComputedEditorOptions): void {\n\t\tthis._accessibilitySupport = options.get(EditorOption.accessibilitySupport);\n\t\tconst accessibilityPageSize = options.get(EditorOption.accessibilityPageSize);\n\t\tif (this._accessibilitySupport === AccessibilitySupport.Enabled && accessibilityPageSize === EditorOptions.accessibilityPageSize.defaultValue) {\n\t\t\t// If a screen reader is attached and the default value is not set we should automatically increase the page size to 500 for a better experience\n\t\t\tthis._accessibilityPageSize = 500;\n\t\t} else {\n\t\t\tthis._accessibilityPageSize = accessibilityPageSize;\n\t\t}\n\n\t\t// When wrapping is enabled and a screen reader might be attached,\n\t\t// we will size the textarea to match the width used for wrapping points computation (see `domLineBreaksComputer.ts`).\n\t\t// This is because screen readers will read the text in the textarea and we'd like that the\n\t\t// wrapping points in the textarea match the wrapping points in the editor.\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst wrappingColumn = layoutInfo.wrappingColumn;\n\t\tif (wrappingColumn !== -1 && this._accessibilitySupport !== AccessibilitySupport.Disabled) {\n\t\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\t\tthis._textAreaWrapping = true;\n\t\t\tthis._textAreaWidth = Math.round(wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\t} else {\n\t\t\tthis._textAreaWrapping = false;\n\t\t\tthis._textAreaWidth = (canUseZeroSizeTextarea ? 0 : 1);\n\t\t}\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._setAccessibilityOptions(options);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentHeight = layoutInfo.height;\n\t\tthis._fontInfo = options.get(EditorOption.fontInfo);\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._emptySelectionClipboard = options.get(EditorOption.emptySelectionClipboard);\n\t\tthis._copyWithSyntaxHighlighting = options.get(EditorOption.copyWithSyntaxHighlighting);\n\t\tthis.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n\t\tconst { tabSize } = this._context.viewModel.model.getOptions();\n\t\tthis.textArea.domNode.style.tabSize = `${tabSize * this._fontInfo.spaceWidth}px`;\n\t\tthis.textArea.setAttribute('aria-label', this._getAriaLabel(options));\n\t\tthis.textArea.setAttribute('aria-required', options.get(EditorOption.ariaRequired) ? 'true' : 'false');\n\t\tthis.textArea.setAttribute('tabindex', String(options.get(EditorOption.tabIndex)));\n\n\t\tif (e.hasChanged(EditorOption.domReadOnly) || e.hasChanged(EditorOption.readOnly)) {\n\t\t\tthis._ensureReadOnlyAttribute();\n\t\t}\n\n\t\tif (e.hasChanged(EditorOption.accessibilitySupport)) {\n\t\t\tthis._textAreaInput.writeScreenReaderContent('strategy changed');\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections.slice(0);\n\t\tthis._modelSelections = e.modelSelections.slice(0);\n\t\t// We must update the <textarea> synchronously, otherwise long press IME on macos breaks.\n\t\t// See https://github.com/microsoft/vscode/issues/165821\n\t\tthis._textAreaInput.writeScreenReaderContent('selection changed');\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tthis._scrollLeft = e.scrollLeft;\n\t\tthis._scrollTop = e.scrollTop;\n\t\treturn true;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\t// --- begin view API\n\n\tpublic isFocused(): boolean {\n\t\treturn this._textAreaInput.isFocused();\n\t}\n\n\tpublic focusTextArea(): void {\n\t\tthis._textAreaInput.focusTextArea();\n\t}\n\n\tpublic refreshFocusState() {\n\t\tthis._textAreaInput.refreshFocusState();\n\t}\n\n\tpublic getLastRenderData(): Position | null {\n\t\treturn this._lastRenderPosition;\n\t}\n\n\tpublic setAriaOptions(options: IEditorAriaOptions): void {\n\t\tif (options.activeDescendant) {\n\t\t\tthis.textArea.setAttribute('aria-haspopup', 'true');\n\t\t\tthis.textArea.setAttribute('aria-autocomplete', 'list');\n\t\t\tthis.textArea.setAttribute('aria-activedescendant', options.activeDescendant);\n\t\t} else {\n\t\t\tthis.textArea.setAttribute('aria-haspopup', 'false');\n\t\t\tthis.textArea.setAttribute('aria-autocomplete', 'both');\n\t\t\tthis.textArea.removeAttribute('aria-activedescendant');\n\t\t}\n\t\tif (options.role) {\n\t\t\tthis.textArea.setAttribute('role', options.role);\n\t\t}\n\t}\n\n\t// --- end view API\n\n\tprivate _ensureReadOnlyAttribute(): void {\n\t\tconst options = this._context.configuration.options;\n\t\t// When someone requests to disable IME, we set the \"readonly\" attribute on the <textarea>.\n\t\t// This will prevent composition.\n\t\tconst useReadOnly = !IME.enabled || (options.get(EditorOption.domReadOnly) && options.get(EditorOption.readOnly));\n\t\tif (useReadOnly) {\n\t\t\tthis.textArea.setAttribute('readonly', 'true');\n\t\t} else {\n\t\t\tthis.textArea.removeAttribute('readonly');\n\t\t}\n\t}\n\n\tprivate _primaryCursorPosition: Position = new Position(1, 1);\n\tprivate _primaryCursorVisibleRange: HorizontalPosition | null = null;\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._primaryCursorPosition = new Position(this._selections[0].positionLineNumber, this._selections[0].positionColumn);\n\t\tthis._primaryCursorVisibleRange = ctx.visibleRangeForPosition(this._primaryCursorPosition);\n\t\tthis._visibleTextArea?.prepareRender(ctx);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._textAreaInput.writeScreenReaderContent('render');\n\t\tthis._render();\n\t}\n\n\tprivate _render(): void {\n\t\tif (this._visibleTextArea) {\n\t\t\t// The text area is visible for composition reasons\n\n\t\t\tconst visibleStart = this._visibleTextArea.visibleTextareaStart;\n\t\t\tconst visibleEnd = this._visibleTextArea.visibleTextareaEnd;\n\t\t\tconst startPosition = this._visibleTextArea.startPosition;\n\t\t\tconst endPosition = this._visibleTextArea.endPosition;\n\t\t\tif (startPosition && endPosition && visibleStart && visibleEnd && visibleEnd.left >= this._scrollLeft && visibleStart.left <= this._scrollLeft + this._contentWidth) {\n\t\t\t\tconst top = (this._context.viewLayout.getVerticalOffsetForLineNumber(this._primaryCursorPosition.lineNumber) - this._scrollTop);\n\t\t\t\tconst lineCount = this._newlinecount(this.textArea.domNode.value.substr(0, this.textArea.domNode.selectionStart));\n\n\t\t\t\tlet scrollLeft = this._visibleTextArea.widthOfHiddenLineTextBefore;\n\t\t\t\tlet left = (this._contentLeft + visibleStart.left - this._scrollLeft);\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/141725#issuecomment-1050670841\n\t\t\t\t// Here we are adding +1 to avoid flickering that might be caused by having a width that is too small.\n\t\t\t\t// This could be caused by rounding errors that might only show up with certain font families.\n\t\t\t\t// In other words, a pixel might be lost when doing something like\n\t\t\t\t//      `Math.round(end) - Math.round(start)`\n\t\t\t\t// vs\n\t\t\t\t//      `Math.round(end - start)`\n\t\t\t\tlet width = visibleEnd.left - visibleStart.left + 1;\n\t\t\t\tif (left < this._contentLeft) {\n\t\t\t\t\t// the textarea would be rendered on top of the margin,\n\t\t\t\t\t// so reduce its width. We use the same technique as\n\t\t\t\t\t// for hiding text before\n\t\t\t\t\tconst delta = (this._contentLeft - left);\n\t\t\t\t\tleft += delta;\n\t\t\t\t\tscrollLeft += delta;\n\t\t\t\t\twidth -= delta;\n\t\t\t\t}\n\t\t\t\tif (width > this._contentWidth) {\n\t\t\t\t\t// the textarea would be wider than the content width,\n\t\t\t\t\t// so reduce its width.\n\t\t\t\t\twidth = this._contentWidth;\n\t\t\t\t}\n\n\t\t\t\t// Try to render the textarea with the color/font style to match the text under it\n\t\t\t\tconst viewLineData = this._context.viewModel.getViewLineData(startPosition.lineNumber);\n\t\t\t\tconst startTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(startPosition.column - 1);\n\t\t\t\tconst endTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(endPosition.column - 1);\n\t\t\t\tconst textareaSpansSingleToken = (startTokenIndex === endTokenIndex);\n\t\t\t\tconst presentation = this._visibleTextArea.definePresentation(\n\t\t\t\t\t(textareaSpansSingleToken ? viewLineData.tokens.getPresentation(startTokenIndex) : null)\n\t\t\t\t);\n\n\t\t\t\tthis.textArea.domNode.scrollTop = lineCount * this._lineHeight;\n\t\t\t\tthis.textArea.domNode.scrollLeft = scrollLeft;\n\n\t\t\t\tthis._doRender({\n\t\t\t\t\tlastRenderPosition: null,\n\t\t\t\t\ttop: top,\n\t\t\t\t\tleft: left,\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: this._lineHeight,\n\t\t\t\t\tuseCover: false,\n\t\t\t\t\tcolor: (TokenizationRegistry.getColorMap() || [])[presentation.foreground],\n\t\t\t\t\titalic: presentation.italic,\n\t\t\t\t\tbold: presentation.bold,\n\t\t\t\t\tunderline: presentation.underline,\n\t\t\t\t\tstrikethrough: presentation.strikethrough\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._primaryCursorVisibleRange) {\n\t\t\t// The primary cursor is outside the viewport => place textarea to the top left\n\t\t\tthis._renderAtTopLeft();\n\t\t\treturn;\n\t\t}\n\n\t\tconst left = this._contentLeft + this._primaryCursorVisibleRange.left - this._scrollLeft;\n\t\tif (left < this._contentLeft || left > this._contentLeft + this._contentWidth) {\n\t\t\t// cursor is outside the viewport\n\t\t\tthis._renderAtTopLeft();\n\t\t\treturn;\n\t\t}\n\n\t\tconst top = this._context.viewLayout.getVerticalOffsetForLineNumber(this._selections[0].positionLineNumber) - this._scrollTop;\n\t\tif (top < 0 || top > this._contentHeight) {\n\t\t\t// cursor is outside the viewport\n\t\t\tthis._renderAtTopLeft();\n\t\t\treturn;\n\t\t}\n\n\t\t// The primary cursor is in the viewport (at least vertically) => place textarea on the cursor\n\n\t\tif (platform.isMacintosh) {\n\t\t\t// For the popup emoji input, we will make the text area as high as the line height\n\t\t\t// We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers\n\t\t\tthis._doRender({\n\t\t\t\tlastRenderPosition: this._primaryCursorPosition,\n\t\t\t\ttop,\n\t\t\t\tleft: this._textAreaWrapping ? this._contentLeft : left,\n\t\t\t\twidth: this._textAreaWidth,\n\t\t\t\theight: this._lineHeight,\n\t\t\t\tuseCover: false\n\t\t\t});\n\t\t\t// In case the textarea contains a word, we're going to try to align the textarea's cursor\n\t\t\t// with our cursor by scrolling the textarea as much as possible\n\t\t\tthis.textArea.domNode.scrollLeft = this._primaryCursorVisibleRange.left;\n\t\t\tconst lineCount = this._textAreaInput.textAreaState.newlineCountBeforeSelection ?? this._newlinecount(this.textArea.domNode.value.substr(0, this.textArea.domNode.selectionStart));\n\t\t\tthis.textArea.domNode.scrollTop = lineCount * this._lineHeight;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._doRender({\n\t\t\tlastRenderPosition: this._primaryCursorPosition,\n\t\t\ttop: top,\n\t\t\tleft: this._textAreaWrapping ? this._contentLeft : left,\n\t\t\twidth: this._textAreaWidth,\n\t\t\theight: (canUseZeroSizeTextarea ? 0 : 1),\n\t\t\tuseCover: false\n\t\t});\n\t}\n\n\tprivate _newlinecount(text: string): number {\n\t\tlet result = 0;\n\t\tlet startIndex = -1;\n\t\tdo {\n\t\t\tstartIndex = text.indexOf('\\n', startIndex + 1);\n\t\t\tif (startIndex === -1) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult++;\n\t\t} while (true);\n\t\treturn result;\n\t}\n\n\tprivate _renderAtTopLeft(): void {\n\t\t// (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)\n\t\t// specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.\n\t\tthis._doRender({\n\t\t\tlastRenderPosition: null,\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\twidth: this._textAreaWidth,\n\t\t\theight: (canUseZeroSizeTextarea ? 0 : 1),\n\t\t\tuseCover: true\n\t\t});\n\t}\n\n\tprivate _doRender(renderData: IRenderData): void {\n\t\tthis._lastRenderPosition = renderData.lastRenderPosition;\n\n\t\tconst ta = this.textArea;\n\t\tconst tac = this.textAreaCover;\n\n\t\tapplyFontInfo(ta, this._fontInfo);\n\t\tta.setTop(renderData.top);\n\t\tta.setLeft(renderData.left);\n\t\tta.setWidth(renderData.width);\n\t\tta.setHeight(renderData.height);\n\n\t\tta.setColor(renderData.color ? Color.Format.CSS.formatHex(renderData.color) : '');\n\t\tta.setFontStyle(renderData.italic ? 'italic' : '');\n\t\tif (renderData.bold) {\n\t\t\t// fontWeight is also set by `applyFontInfo`, so only overwrite it if necessary\n\t\t\tta.setFontWeight('bold');\n\t\t}\n\t\tta.setTextDecoration(`${renderData.underline ? ' underline' : ''}${renderData.strikethrough ? ' line-through' : ''}`);\n\n\t\ttac.setTop(renderData.useCover ? renderData.top : 0);\n\t\ttac.setLeft(renderData.useCover ? renderData.left : 0);\n\t\ttac.setWidth(renderData.useCover ? renderData.width : 0);\n\t\ttac.setHeight(renderData.useCover ? renderData.height : 0);\n\n\t\tconst options = this._context.configuration.options;\n\n\t\tif (options.get(EditorOption.glyphMargin)) {\n\t\t\ttac.setClassName('monaco-editor-background textAreaCover ' + Margin.OUTER_CLASS_NAME);\n\t\t} else {\n\t\t\tif (options.get(EditorOption.lineNumbers).renderType !== RenderLineNumbersType.Off) {\n\t\t\t\ttac.setClassName('monaco-editor-background textAreaCover ' + LineNumbersOverlay.CLASS_NAME);\n\t\t\t} else {\n\t\t\t\ttac.setClassName('monaco-editor-background textAreaCover');\n\t\t\t}\n\t\t}\n\t}\n}\n\ninterface IRenderData {\n\tlastRenderPosition: Position | null;\n\ttop: number;\n\tleft: number;\n\twidth: number;\n\theight: number;\n\tuseCover: boolean;\n\n\tcolor?: Color | null;\n\titalic?: boolean;\n\tbold?: boolean;\n\tunderline?: boolean;\n\tstrikethrough?: boolean;\n}\n\nfunction measureText(document: Document, text: string, fontInfo: FontInfo, tabSize: number): number {\n\tif (text.length === 0) {\n\t\treturn 0;\n\t}\n\n\tconst container = document.createElement('div');\n\tcontainer.style.position = 'absolute';\n\tcontainer.style.top = '-50000px';\n\tcontainer.style.width = '50000px';\n\n\tconst regularDomNode = document.createElement('span');\n\tapplyFontInfo(regularDomNode, fontInfo);\n\tregularDomNode.style.whiteSpace = 'pre'; // just like the textarea\n\tregularDomNode.style.tabSize = `${tabSize * fontInfo.spaceWidth}px`; // just like the textarea\n\tregularDomNode.append(text);\n\tcontainer.appendChild(regularDomNode);\n\n\tdocument.body.appendChild(container);\n\n\tconst res = regularDomNode.offsetWidth;\n\n\tdocument.body.removeChild(container);\n\n\treturn res;\n}\n"]}