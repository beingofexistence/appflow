{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/browser/controller/pointerHandler.ts"],"names":[],"mappings":"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","file":"pointerHandler.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport * as platform from 'vs/base/common/platform';\nimport { EventType, Gesture, GestureEvent } from 'vs/base/browser/touch';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IPointerHandlerHelper, MouseHandler } from 'vs/editor/browser/controller/mouseHandler';\nimport { IMouseTarget, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { EditorMouseEvent, EditorPointerEventFactory } from 'vs/editor/browser/editorDom';\nimport { ViewController } from 'vs/editor/browser/view/viewController';\nimport { ViewContext } from 'vs/editor/common/viewModel/viewContext';\nimport { BrowserFeatures } from 'vs/base/browser/canIUse';\nimport { TextAreaSyntethicEvents } from 'vs/editor/browser/controller/textAreaInput';\nimport { NavigationCommandRevealType } from 'vs/editor/browser/coreCommands';\n\n/**\n * Currently only tested on iOS 13/ iPadOS.\n */\nexport class PointerEventHandler extends MouseHandler {\n\tprivate _lastPointerType: string;\n\tconstructor(context: ViewContext, viewController: ViewController, viewHelper: IPointerHandlerHelper) {\n\t\tsuper(context, viewController, viewHelper);\n\n\t\tthis._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e: MouseEvent) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n\n\t\tthis._lastPointerType = 'mouse';\n\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, 'pointerdown', (e: any) => {\n\t\t\tconst pointerType = <any>e.pointerType;\n\t\t\tif (pointerType === 'mouse') {\n\t\t\t\tthis._lastPointerType = 'mouse';\n\t\t\t\treturn;\n\t\t\t} else if (pointerType === 'touch') {\n\t\t\t\tthis._lastPointerType = 'touch';\n\t\t\t} else {\n\t\t\t\tthis._lastPointerType = 'pen';\n\t\t\t}\n\t\t}));\n\n\t\t// PonterEvents\n\t\tconst pointerEvents = new EditorPointerEventFactory(this.viewHelper.viewDomNode);\n\n\t\tthis._register(pointerEvents.onPointerMove(this.viewHelper.viewDomNode, (e) => this._onMouseMove(e)));\n\t\tthis._register(pointerEvents.onPointerUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n\t\tthis._register(pointerEvents.onPointerLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n\t\tthis._register(pointerEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => this._onMouseDown(e, pointerId)));\n\t}\n\n\tprivate onTap(event: GestureEvent): void {\n\t\tif (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(<any>event.initialTarget)) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\t\tthis.viewHelper.focusTextArea();\n\t\tconst target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n\n\t\tif (target.position) {\n\t\t\t// this.viewController.moveTo(target.position);\n\t\t\tthis.viewController.dispatchMouse({\n\t\t\t\tposition: target.position,\n\t\t\t\tmouseColumn: target.position.column,\n\t\t\t\tstartedOnLineNumbers: false,\n\t\t\t\trevealType: NavigationCommandRevealType.Minimal,\n\t\t\t\tmouseDownCount: event.tapCount,\n\t\t\t\tinSelectionMode: false,\n\t\t\t\taltKey: false,\n\t\t\t\tctrlKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tshiftKey: false,\n\n\t\t\t\tleftButton: false,\n\t\t\t\tmiddleButton: false,\n\t\t\t\tonInjectedText: target.type === MouseTargetType.CONTENT_TEXT && target.detail.injectedText !== null\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onChange(e: GestureEvent): void {\n\t\tif (this._lastPointerType === 'touch') {\n\t\t\tthis._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n\t\t}\n\t}\n\n\tprotected override _onMouseDown(e: EditorMouseEvent, pointerId: number): void {\n\t\tif ((e.browserEvent as any).pointerType === 'touch') {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper._onMouseDown(e, pointerId);\n\t}\n}\n\nclass TouchHandler extends MouseHandler {\n\n\tconstructor(context: ViewContext, viewController: ViewController, viewHelper: IPointerHandlerHelper) {\n\t\tsuper(context, viewController, viewHelper);\n\n\t\tthis._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e: MouseEvent) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n\t}\n\n\tprivate onTap(event: GestureEvent): void {\n\t\tevent.preventDefault();\n\n\t\tthis.viewHelper.focusTextArea();\n\n\t\tconst target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n\n\t\tif (target.position) {\n\t\t\t// Send the tap event also to the <textarea> (for input purposes)\n\t\t\tconst event = document.createEvent('CustomEvent');\n\t\t\tevent.initEvent(TextAreaSyntethicEvents.Tap, false, true);\n\t\t\tthis.viewHelper.dispatchTextAreaEvent(event);\n\n\t\t\tthis.viewController.moveTo(target.position, NavigationCommandRevealType.Minimal);\n\t\t}\n\t}\n\n\tprivate onChange(e: GestureEvent): void {\n\t\tthis._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n\t}\n}\n\nexport class PointerHandler extends Disposable {\n\tprivate readonly handler: MouseHandler;\n\n\tconstructor(context: ViewContext, viewController: ViewController, viewHelper: IPointerHandlerHelper) {\n\t\tsuper();\n\t\tif ((platform.isIOS && BrowserFeatures.pointerEvents)) {\n\t\t\tthis.handler = this._register(new PointerEventHandler(context, viewController, viewHelper));\n\t\t} else if (window.TouchEvent) {\n\t\t\tthis.handler = this._register(new TouchHandler(context, viewController, viewHelper));\n\t\t} else {\n\t\t\tthis.handler = this._register(new MouseHandler(context, viewController, viewHelper));\n\t\t}\n\t}\n\n\tpublic getTargetAtClientPoint(clientX: number, clientY: number): IMouseTarget | null {\n\t\treturn this.handler.getTargetAtClientPoint(clientX, clientY);\n\t}\n}\n"]}