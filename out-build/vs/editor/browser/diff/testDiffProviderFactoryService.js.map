{"version":3,"sources":["file:///workspace/appflow/src/vs/editor/browser/diff/testDiffProviderFactoryService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG,MAAa,IAAI;QAEhB,kBAAkB;YACjB,OAAO,IAAI,IAAI,EAAsB,CAAC;QACvC,CAAC;KACD;IALD,oBAKC;IAED,MAAa,IAAI;QAAjB;YAWC,gBAAW,GAAgB,GAAG,EAAE,CAAC,IAAA,eAAG,EAAU,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QAC1D,CAAC;QAXA,WAAW,CAAC,QAAoB,EAAE,QAAoB,EAAE,OAAqC,EAAE,iBAAoC;YAClI,MAAM,MAAM,GAAG,wBAAG,CAAgB,UAAU,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,EAAE,EAAE,QAAQ,CAAC,eAAe,EAAE,EAAE,OAAO,CAAC,CAAC;YAC5H,OAAO,OAAO,CAAC,OAAO,CAAC;gBACtB,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,SAAS,EAAE,MAAM,CAAC,UAAU;gBAC5B,SAAS,EAAE,QAAQ,CAAC,QAAQ,EAAE,KAAK,QAAQ,CAAC,QAAQ,EAAE;gBACtD,KAAK,EAAE,MAAM,CAAC,KAAK;aACnB,CAAC,CAAC;QACJ,CAAC;KAGD;IAZD,oBAYC","file":"testDiffProviderFactoryService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { IDocumentDiff, IDocumentDiffProvider, IDocumentDiffProviderOptions } from 'vs/editor/common/diff/documentDiffProvider';\nimport { linesDiffComputers } from 'vs/editor/common/diff/linesDiffComputers';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { Event } from 'vs/base/common/event';\nimport { IDiffProviderFactoryService } from 'vs/editor/browser/widget/diffEditor/diffProviderFactoryService';\n\nexport class TestDiffProviderFactoryService implements IDiffProviderFactoryService {\n\tdeclare readonly _serviceBrand: undefined;\n\tcreateDiffProvider(): IDocumentDiffProvider {\n\t\treturn new SyncDocumentDiffProvider();\n\t}\n}\n\nexport class SyncDocumentDiffProvider implements IDocumentDiffProvider {\n\tcomputeDiff(original: ITextModel, modified: ITextModel, options: IDocumentDiffProviderOptions, cancellationToken: CancellationToken): Promise<IDocumentDiff> {\n\t\tconst result = linesDiffComputers.getDefault().computeDiff(original.getLinesContent(), modified.getLinesContent(), options);\n\t\treturn Promise.resolve({\n\t\t\tchanges: result.changes,\n\t\t\tquitEarly: result.hitTimeout,\n\t\t\tidentical: original.getValue() === modified.getValue(),\n\t\t\tmoves: result.moves,\n\t\t});\n\t}\n\n\tonDidChange: Event<void> = () => toDisposable(() => { });\n}\n"]}