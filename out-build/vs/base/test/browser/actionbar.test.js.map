{"version":3,"sources":["file:///workspace/appflow/src/vs/base/test/browser/actionbar.test.ts"],"names":[],"mappings":"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","file":"actionbar.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ActionBar, prepareActions } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { Action, Separator } from 'vs/base/common/actions';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nsuite('Actionbar', () => {\n\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('prepareActions()', function () {\n\t\tconst a1 = new Separator();\n\t\tconst a2 = new Separator();\n\t\tconst a3 = store.add(new Action('a3'));\n\t\tconst a4 = new Separator();\n\t\tconst a5 = new Separator();\n\t\tconst a6 = store.add(new Action('a6'));\n\t\tconst a7 = new Separator();\n\n\t\tconst actions = prepareActions([a1, a2, a3, a4, a5, a6, a7]);\n\t\tassert.strictEqual(actions.length, 3); // duplicate separators get removed\n\t\tassert(actions[0] === a3);\n\t\tassert(actions[1] === a5);\n\t\tassert(actions[2] === a6);\n\t});\n\n\ttest('hasAction()', function () {\n\t\tconst container = document.createElement('div');\n\t\tconst actionbar = store.add(new ActionBar(container));\n\n\t\tconst a1 = store.add(new Action('a1'));\n\t\tconst a2 = store.add(new Action('a2'));\n\n\t\tactionbar.push(a1);\n\t\tassert.strictEqual(actionbar.hasAction(a1), true);\n\t\tassert.strictEqual(actionbar.hasAction(a2), false);\n\n\t\tactionbar.pull(0);\n\t\tassert.strictEqual(actionbar.hasAction(a1), false);\n\n\t\tactionbar.push(a1, { index: 1 });\n\t\tactionbar.push(a2, { index: 0 });\n\t\tassert.strictEqual(actionbar.hasAction(a1), true);\n\t\tassert.strictEqual(actionbar.hasAction(a2), true);\n\n\t\tactionbar.pull(0);\n\t\tassert.strictEqual(actionbar.hasAction(a1), true);\n\t\tassert.strictEqual(actionbar.hasAction(a2), false);\n\n\t\tactionbar.pull(0);\n\t\tassert.strictEqual(actionbar.hasAction(a1), false);\n\t\tassert.strictEqual(actionbar.hasAction(a2), false);\n\n\t\tactionbar.push(a1);\n\t\tassert.strictEqual(actionbar.hasAction(a1), true);\n\t\tactionbar.clear();\n\t\tassert.strictEqual(actionbar.hasAction(a1), false);\n\t});\n});\n"]}