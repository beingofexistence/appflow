{"version":3,"sources":["file:///workspace/appflow/src/vs/base/test/node/pfs/pfs.test.ts"],"names":[],"mappings":"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","file":"pfs.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { timeout } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { randomPath } from 'vs/base/common/extpath';\nimport { FileAccess } from 'vs/base/common/network';\nimport { basename, dirname, join, sep } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { configureFlushOnWrite, Promises, RimRafMode, rimrafSync, SymlinkSupport, writeFileSync } from 'vs/base/node/pfs';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { flakySuite, getRandomTestPath } from 'vs/base/test/node/testUtils';\n\nconfigureFlushOnWrite(false); // speed up all unit tests by disabling flush on write\n\nflakySuite('PFS', function () {\n\n\tlet testDir: string;\n\n\tsetup(() => {\n\t\ttestDir = getRandomTestPath(tmpdir(), 'vsctests', 'pfs');\n\n\t\treturn Promises.mkdir(testDir, { recursive: true });\n\t});\n\n\tteardown(() => {\n\t\treturn Promises.rm(testDir);\n\t});\n\n\ttest('writeFile', async () => {\n\t\tconst testFile = join(testDir, 'writefile.txt');\n\n\t\tassert.ok(!(await Promises.exists(testFile)));\n\n\t\tawait Promises.writeFile(testFile, 'Hello World', (null!));\n\n\t\tassert.strictEqual((await Promises.readFile(testFile)).toString(), 'Hello World');\n\t});\n\n\ttest('writeFile - parallel write on different files works', async () => {\n\t\tconst testFile1 = join(testDir, 'writefile1.txt');\n\t\tconst testFile2 = join(testDir, 'writefile2.txt');\n\t\tconst testFile3 = join(testDir, 'writefile3.txt');\n\t\tconst testFile4 = join(testDir, 'writefile4.txt');\n\t\tconst testFile5 = join(testDir, 'writefile5.txt');\n\n\t\tawait Promise.all([\n\t\t\tPromises.writeFile(testFile1, 'Hello World 1', (null!)),\n\t\t\tPromises.writeFile(testFile2, 'Hello World 2', (null!)),\n\t\t\tPromises.writeFile(testFile3, 'Hello World 3', (null!)),\n\t\t\tPromises.writeFile(testFile4, 'Hello World 4', (null!)),\n\t\t\tPromises.writeFile(testFile5, 'Hello World 5', (null!))\n\t\t]);\n\t\tassert.strictEqual(fs.readFileSync(testFile1).toString(), 'Hello World 1');\n\t\tassert.strictEqual(fs.readFileSync(testFile2).toString(), 'Hello World 2');\n\t\tassert.strictEqual(fs.readFileSync(testFile3).toString(), 'Hello World 3');\n\t\tassert.strictEqual(fs.readFileSync(testFile4).toString(), 'Hello World 4');\n\t\tassert.strictEqual(fs.readFileSync(testFile5).toString(), 'Hello World 5');\n\t});\n\n\ttest('writeFile - parallel write on same files works and is sequentalized', async () => {\n\t\tconst testFile = join(testDir, 'writefile.txt');\n\n\t\tawait Promise.all([\n\t\t\tPromises.writeFile(testFile, 'Hello World 1', undefined),\n\t\t\tPromises.writeFile(testFile, 'Hello World 2', undefined),\n\t\t\ttimeout(10).then(() => Promises.writeFile(testFile, 'Hello World 3', undefined)),\n\t\t\tPromises.writeFile(testFile, 'Hello World 4', undefined),\n\t\t\ttimeout(10).then(() => Promises.writeFile(testFile, 'Hello World 5', undefined))\n\t\t]);\n\t\tassert.strictEqual(fs.readFileSync(testFile).toString(), 'Hello World 5');\n\t});\n\n\ttest('rimraf - simple - unlink', async () => {\n\t\tfs.writeFileSync(join(testDir, 'somefile.txt'), 'Contents');\n\t\tfs.writeFileSync(join(testDir, 'someOtherFile.txt'), 'Contents');\n\n\t\tawait Promises.rm(testDir);\n\t\tassert.ok(!fs.existsSync(testDir));\n\t});\n\n\ttest('rimraf - simple - move', async () => {\n\t\tfs.writeFileSync(join(testDir, 'somefile.txt'), 'Contents');\n\t\tfs.writeFileSync(join(testDir, 'someOtherFile.txt'), 'Contents');\n\n\t\tawait Promises.rm(testDir, RimRafMode.MOVE);\n\t\tassert.ok(!fs.existsSync(testDir));\n\t});\n\n\ttest('rimraf - simple - move (with moveToPath)', async () => {\n\t\tfs.writeFileSync(join(testDir, 'somefile.txt'), 'Contents');\n\t\tfs.writeFileSync(join(testDir, 'someOtherFile.txt'), 'Contents');\n\n\t\tawait Promises.rm(testDir, RimRafMode.MOVE, join(dirname(testDir), `${basename(testDir)}.vsctmp`));\n\t\tassert.ok(!fs.existsSync(testDir));\n\t});\n\n\ttest('rimraf - path does not exist - move', async () => {\n\t\tconst nonExistingDir = join(testDir, 'unknown-move');\n\t\tawait Promises.rm(nonExistingDir, RimRafMode.MOVE);\n\t});\n\n\ttest('rimraf - path does not exist - unlink', async () => {\n\t\tconst nonExistingDir = join(testDir, 'unknown-unlink');\n\t\tawait Promises.rm(nonExistingDir, RimRafMode.UNLINK);\n\t});\n\n\ttest('rimraf - recursive folder structure - unlink', async () => {\n\t\tfs.writeFileSync(join(testDir, 'somefile.txt'), 'Contents');\n\t\tfs.writeFileSync(join(testDir, 'someOtherFile.txt'), 'Contents');\n\t\tfs.mkdirSync(join(testDir, 'somefolder'));\n\t\tfs.writeFileSync(join(testDir, 'somefolder', 'somefile.txt'), 'Contents');\n\n\t\tawait Promises.rm(testDir);\n\t\tassert.ok(!fs.existsSync(testDir));\n\t});\n\n\ttest('rimraf - recursive folder structure - move', async () => {\n\t\tfs.writeFileSync(join(testDir, 'somefile.txt'), 'Contents');\n\t\tfs.writeFileSync(join(testDir, 'someOtherFile.txt'), 'Contents');\n\t\tfs.mkdirSync(join(testDir, 'somefolder'));\n\t\tfs.writeFileSync(join(testDir, 'somefolder', 'somefile.txt'), 'Contents');\n\n\t\tawait Promises.rm(testDir, RimRafMode.MOVE);\n\t\tassert.ok(!fs.existsSync(testDir));\n\t});\n\n\ttest('rimraf - simple ends with dot - move', async () => {\n\t\tfs.writeFileSync(join(testDir, 'somefile.txt'), 'Contents');\n\t\tfs.writeFileSync(join(testDir, 'someOtherFile.txt'), 'Contents');\n\n\t\tawait Promises.rm(testDir, RimRafMode.MOVE);\n\t\tassert.ok(!fs.existsSync(testDir));\n\t});\n\n\ttest('rimraf - simple ends with dot slash/backslash - move', async () => {\n\t\tfs.writeFileSync(join(testDir, 'somefile.txt'), 'Contents');\n\t\tfs.writeFileSync(join(testDir, 'someOtherFile.txt'), 'Contents');\n\n\t\tawait Promises.rm(`${testDir}${sep}`, RimRafMode.MOVE);\n\t\tassert.ok(!fs.existsSync(testDir));\n\t});\n\n\ttest('rimrafSync - swallows file not found error', function () {\n\t\tconst nonExistingDir = join(testDir, 'not-existing');\n\t\trimrafSync(nonExistingDir);\n\n\t\tassert.ok(!fs.existsSync(nonExistingDir));\n\t});\n\n\ttest('rimrafSync - simple', async () => {\n\t\tfs.writeFileSync(join(testDir, 'somefile.txt'), 'Contents');\n\t\tfs.writeFileSync(join(testDir, 'someOtherFile.txt'), 'Contents');\n\n\t\trimrafSync(testDir);\n\n\t\tassert.ok(!fs.existsSync(testDir));\n\t});\n\n\ttest('rimrafSync - recursive folder structure', async () => {\n\t\tfs.writeFileSync(join(testDir, 'somefile.txt'), 'Contents');\n\t\tfs.writeFileSync(join(testDir, 'someOtherFile.txt'), 'Contents');\n\n\t\tfs.mkdirSync(join(testDir, 'somefolder'));\n\t\tfs.writeFileSync(join(testDir, 'somefolder', 'somefile.txt'), 'Contents');\n\n\t\trimrafSync(testDir);\n\n\t\tassert.ok(!fs.existsSync(testDir));\n\t});\n\n\ttest('copy, rename and delete', async () => {\n\t\tconst sourceDir = FileAccess.asFileUri('vs/base/test/node/pfs/fixtures').fsPath;\n\t\tconst parentDir = join(tmpdir(), 'vsctests', 'pfs');\n\t\tconst targetDir = randomPath(parentDir);\n\t\tconst targetDir2 = randomPath(parentDir);\n\n\t\tawait Promises.copy(sourceDir, targetDir, { preserveSymlinks: true });\n\n\t\tassert.ok(fs.existsSync(targetDir));\n\t\tassert.ok(fs.existsSync(join(targetDir, 'index.html')));\n\t\tassert.ok(fs.existsSync(join(targetDir, 'site.css')));\n\t\tassert.ok(fs.existsSync(join(targetDir, 'examples')));\n\t\tassert.ok(fs.statSync(join(targetDir, 'examples')).isDirectory());\n\t\tassert.ok(fs.existsSync(join(targetDir, 'examples', 'small.jxs')));\n\n\t\tawait Promises.rename(targetDir, targetDir2);\n\n\t\tassert.ok(!fs.existsSync(targetDir));\n\t\tassert.ok(fs.existsSync(targetDir2));\n\t\tassert.ok(fs.existsSync(join(targetDir2, 'index.html')));\n\t\tassert.ok(fs.existsSync(join(targetDir2, 'site.css')));\n\t\tassert.ok(fs.existsSync(join(targetDir2, 'examples')));\n\t\tassert.ok(fs.statSync(join(targetDir2, 'examples')).isDirectory());\n\t\tassert.ok(fs.existsSync(join(targetDir2, 'examples', 'small.jxs')));\n\n\t\tawait Promises.rename(join(targetDir2, 'index.html'), join(targetDir2, 'index_moved.html'));\n\n\t\tassert.ok(!fs.existsSync(join(targetDir2, 'index.html')));\n\t\tassert.ok(fs.existsSync(join(targetDir2, 'index_moved.html')));\n\n\t\tawait Promises.rm(parentDir);\n\n\t\tassert.ok(!fs.existsSync(parentDir));\n\t});\n\n\ttest('rename without retry', async () => {\n\t\tconst sourceDir = FileAccess.asFileUri('vs/base/test/node/pfs/fixtures').fsPath;\n\t\tconst parentDir = join(tmpdir(), 'vsctests', 'pfs');\n\t\tconst targetDir = randomPath(parentDir);\n\t\tconst targetDir2 = randomPath(parentDir);\n\n\t\tawait Promises.copy(sourceDir, targetDir, { preserveSymlinks: true });\n\t\tawait Promises.rename(targetDir, targetDir2, false);\n\n\t\tassert.ok(!fs.existsSync(targetDir));\n\t\tassert.ok(fs.existsSync(targetDir2));\n\t\tassert.ok(fs.existsSync(join(targetDir2, 'index.html')));\n\t\tassert.ok(fs.existsSync(join(targetDir2, 'site.css')));\n\t\tassert.ok(fs.existsSync(join(targetDir2, 'examples')));\n\t\tassert.ok(fs.statSync(join(targetDir2, 'examples')).isDirectory());\n\t\tassert.ok(fs.existsSync(join(targetDir2, 'examples', 'small.jxs')));\n\n\t\tawait Promises.rename(join(targetDir2, 'index.html'), join(targetDir2, 'index_moved.html'), false);\n\n\t\tassert.ok(!fs.existsSync(join(targetDir2, 'index.html')));\n\t\tassert.ok(fs.existsSync(join(targetDir2, 'index_moved.html')));\n\n\t\tawait Promises.rm(parentDir);\n\n\t\tassert.ok(!fs.existsSync(parentDir));\n\t});\n\n\ttest('copy handles symbolic links', async () => {\n\t\tconst symbolicLinkTarget = randomPath(testDir);\n\t\tconst symLink = randomPath(testDir);\n\t\tconst copyTarget = randomPath(testDir);\n\n\t\tawait Promises.mkdir(symbolicLinkTarget, { recursive: true });\n\n\t\tfs.symlinkSync(symbolicLinkTarget, symLink, 'junction');\n\n\t\t// Copy preserves symlinks if configured as such\n\t\t//\n\t\t// Windows: this test does not work because creating symlinks\n\t\t// requires priviledged permissions (admin).\n\t\tif (!isWindows) {\n\t\t\tawait Promises.copy(symLink, copyTarget, { preserveSymlinks: true });\n\n\t\t\tassert.ok(fs.existsSync(copyTarget));\n\n\t\t\tconst { symbolicLink } = await SymlinkSupport.stat(copyTarget);\n\t\t\tassert.ok(symbolicLink);\n\t\t\tassert.ok(!symbolicLink.dangling);\n\n\t\t\tconst target = await Promises.readlink(copyTarget);\n\t\t\tassert.strictEqual(target, symbolicLinkTarget);\n\n\t\t\t// Copy does not preserve symlinks if configured as such\n\n\t\t\tawait Promises.rm(copyTarget);\n\t\t\tawait Promises.copy(symLink, copyTarget, { preserveSymlinks: false });\n\n\t\t\tassert.ok(fs.existsSync(copyTarget));\n\n\t\t\tconst { symbolicLink: symbolicLink2 } = await SymlinkSupport.stat(copyTarget);\n\t\t\tassert.ok(!symbolicLink2);\n\t\t}\n\n\t\t// Copy does not fail over dangling symlinks\n\n\t\tawait Promises.rm(copyTarget);\n\t\tawait Promises.rm(symbolicLinkTarget);\n\n\t\tawait Promises.copy(symLink, copyTarget, { preserveSymlinks: true }); // this should not throw\n\n\t\tif (!isWindows) {\n\t\t\tconst { symbolicLink } = await SymlinkSupport.stat(copyTarget);\n\t\t\tassert.ok(symbolicLink?.dangling);\n\t\t} else {\n\t\t\tassert.ok(!fs.existsSync(copyTarget));\n\t\t}\n\t});\n\n\ttest('copy handles symbolic links when the reference is inside source', async () => {\n\n\t\t// Source Folder\n\t\tconst sourceFolder = join(randomPath(testDir), 'copy-test'); \t\t// copy-test\n\t\tconst sourceLinkTestFolder = join(sourceFolder, 'link-test');\t\t// copy-test/link-test\n\t\tconst sourceLinkMD5JSFolder = join(sourceLinkTestFolder, 'md5');\t// copy-test/link-test/md5\n\t\tconst sourceLinkMD5JSFile = join(sourceLinkMD5JSFolder, 'md5.js');\t// copy-test/link-test/md5/md5.js\n\t\tawait Promises.mkdir(sourceLinkMD5JSFolder, { recursive: true });\n\t\tawait Promises.writeFile(sourceLinkMD5JSFile, 'Hello from MD5');\n\n\t\tconst sourceLinkMD5JSFolderLinked = join(sourceLinkTestFolder, 'md5-linked');\t// copy-test/link-test/md5-linked\n\t\tfs.symlinkSync(sourceLinkMD5JSFolder, sourceLinkMD5JSFolderLinked, 'junction');\n\n\t\t// Target Folder\n\t\tconst targetLinkTestFolder = join(sourceFolder, 'link-test copy');\t\t\t\t// copy-test/link-test copy\n\t\tconst targetLinkMD5JSFolder = join(targetLinkTestFolder, 'md5');\t\t\t\t// copy-test/link-test copy/md5\n\t\tconst targetLinkMD5JSFile = join(targetLinkMD5JSFolder, 'md5.js');\t\t\t\t// copy-test/link-test copy/md5/md5.js\n\t\tconst targetLinkMD5JSFolderLinked = join(targetLinkTestFolder, 'md5-linked');\t// copy-test/link-test copy/md5-linked\n\n\t\t// Copy with `preserveSymlinks: true` and verify result\n\t\t//\n\t\t// Windows: this test does not work because creating symlinks\n\t\t// requires priviledged permissions (admin).\n\t\tif (!isWindows) {\n\t\t\tawait Promises.copy(sourceLinkTestFolder, targetLinkTestFolder, { preserveSymlinks: true });\n\n\t\t\tassert.ok(fs.existsSync(targetLinkTestFolder));\n\t\t\tassert.ok(fs.existsSync(targetLinkMD5JSFolder));\n\t\t\tassert.ok(fs.existsSync(targetLinkMD5JSFile));\n\t\t\tassert.ok(fs.existsSync(targetLinkMD5JSFolderLinked));\n\t\t\tassert.ok(fs.lstatSync(targetLinkMD5JSFolderLinked).isSymbolicLink());\n\n\t\t\tconst linkTarget = await Promises.readlink(targetLinkMD5JSFolderLinked);\n\t\t\tassert.strictEqual(linkTarget, targetLinkMD5JSFolder);\n\n\t\t\tawait Promises.rm(targetLinkTestFolder);\n\t\t}\n\n\t\t// Copy with `preserveSymlinks: false` and verify result\n\t\tawait Promises.copy(sourceLinkTestFolder, targetLinkTestFolder, { preserveSymlinks: false });\n\n\t\tassert.ok(fs.existsSync(targetLinkTestFolder));\n\t\tassert.ok(fs.existsSync(targetLinkMD5JSFolder));\n\t\tassert.ok(fs.existsSync(targetLinkMD5JSFile));\n\t\tassert.ok(fs.existsSync(targetLinkMD5JSFolderLinked));\n\t\tassert.ok(fs.lstatSync(targetLinkMD5JSFolderLinked).isDirectory());\n\t});\n\n\ttest('readDirsInDir', async () => {\n\t\tfs.mkdirSync(join(testDir, 'somefolder1'));\n\t\tfs.mkdirSync(join(testDir, 'somefolder2'));\n\t\tfs.mkdirSync(join(testDir, 'somefolder3'));\n\t\tfs.writeFileSync(join(testDir, 'somefile.txt'), 'Contents');\n\t\tfs.writeFileSync(join(testDir, 'someOtherFile.txt'), 'Contents');\n\n\t\tconst result = await Promises.readDirsInDir(testDir);\n\t\tassert.strictEqual(result.length, 3);\n\t\tassert.ok(result.indexOf('somefolder1') !== -1);\n\t\tassert.ok(result.indexOf('somefolder2') !== -1);\n\t\tassert.ok(result.indexOf('somefolder3') !== -1);\n\t});\n\n\ttest('stat link', async () => {\n\t\tconst directory = randomPath(testDir);\n\t\tconst symbolicLink = randomPath(testDir);\n\n\t\tawait Promises.mkdir(directory, { recursive: true });\n\n\t\tfs.symlinkSync(directory, symbolicLink, 'junction');\n\n\t\tlet statAndIsLink = await SymlinkSupport.stat(directory);\n\t\tassert.ok(!statAndIsLink?.symbolicLink);\n\n\t\tstatAndIsLink = await SymlinkSupport.stat(symbolicLink);\n\t\tassert.ok(statAndIsLink?.symbolicLink);\n\t\tassert.ok(!statAndIsLink?.symbolicLink?.dangling);\n\t});\n\n\ttest('stat link (non existing target)', async () => {\n\t\tconst directory = randomPath(testDir);\n\t\tconst symbolicLink = randomPath(testDir);\n\n\t\tawait Promises.mkdir(directory, { recursive: true });\n\n\t\tfs.symlinkSync(directory, symbolicLink, 'junction');\n\n\t\tawait Promises.rm(directory);\n\n\t\tconst statAndIsLink = await SymlinkSupport.stat(symbolicLink);\n\t\tassert.ok(statAndIsLink?.symbolicLink);\n\t\tassert.ok(statAndIsLink?.symbolicLink?.dangling);\n\t});\n\n\ttest('readdir', async () => {\n\t\tif (typeof process.versions['electron'] !== 'undefined' /* needs electron */) {\n\t\t\tconst parent = randomPath(join(testDir, 'pfs'));\n\t\t\tconst newDir = join(parent, 'öäü');\n\n\t\t\tawait Promises.mkdir(newDir, { recursive: true });\n\n\t\t\tassert.ok(fs.existsSync(newDir));\n\n\t\t\tconst children = await Promises.readdir(parent);\n\t\t\tassert.strictEqual(children.some(n => n === 'öäü'), true); // Mac always converts to NFD, so\n\t\t}\n\t});\n\n\ttest('readdir (with file types)', async () => {\n\t\tif (typeof process.versions['electron'] !== 'undefined' /* needs electron */) {\n\t\t\tconst newDir = join(testDir, 'öäü');\n\t\t\tawait Promises.mkdir(newDir, { recursive: true });\n\n\t\t\tawait Promises.writeFile(join(testDir, 'somefile.txt'), 'contents');\n\n\t\t\tassert.ok(fs.existsSync(newDir));\n\n\t\t\tconst children = await Promises.readdir(testDir, { withFileTypes: true });\n\n\t\t\tassert.strictEqual(children.some(n => n.name === 'öäü'), true); // Mac always converts to NFD, so\n\t\t\tassert.strictEqual(children.some(n => n.isDirectory()), true);\n\n\t\t\tassert.strictEqual(children.some(n => n.name === 'somefile.txt'), true);\n\t\t\tassert.strictEqual(children.some(n => n.isFile()), true);\n\t\t}\n\t});\n\n\ttest('writeFile (string)', async () => {\n\t\tconst smallData = 'Hello World';\n\t\tconst bigData = (new Array(100 * 1024)).join('Large String\\n');\n\n\t\treturn testWriteFile(smallData, smallData, bigData, bigData);\n\t});\n\n\ttest('writeFile (string) - flush on write', async () => {\n\t\tconfigureFlushOnWrite(true);\n\t\ttry {\n\t\t\tconst smallData = 'Hello World';\n\t\t\tconst bigData = (new Array(100 * 1024)).join('Large String\\n');\n\n\t\t\treturn await testWriteFile(smallData, smallData, bigData, bigData);\n\t\t} finally {\n\t\t\tconfigureFlushOnWrite(false);\n\t\t}\n\t});\n\n\ttest('writeFile (Buffer)', async () => {\n\t\tconst smallData = 'Hello World';\n\t\tconst bigData = (new Array(100 * 1024)).join('Large String\\n');\n\n\t\treturn testWriteFile(Buffer.from(smallData), smallData, Buffer.from(bigData), bigData);\n\t});\n\n\ttest('writeFile (UInt8Array)', async () => {\n\t\tconst smallData = 'Hello World';\n\t\tconst bigData = (new Array(100 * 1024)).join('Large String\\n');\n\n\t\treturn testWriteFile(VSBuffer.fromString(smallData).buffer, smallData, VSBuffer.fromString(bigData).buffer, bigData);\n\t});\n\n\tasync function testWriteFile(\n\t\tsmallData: string | Buffer | Uint8Array,\n\t\tsmallDataValue: string,\n\t\tbigData: string | Buffer | Uint8Array,\n\t\tbigDataValue: string\n\t): Promise<void> {\n\t\tconst testFile = join(testDir, 'flushed.txt');\n\n\t\tassert.ok(fs.existsSync(testDir));\n\n\t\tawait Promises.writeFile(testFile, smallData);\n\t\tassert.strictEqual(fs.readFileSync(testFile).toString(), smallDataValue);\n\n\t\tawait Promises.writeFile(testFile, bigData);\n\t\tassert.strictEqual(fs.readFileSync(testFile).toString(), bigDataValue);\n\t}\n\n\ttest('writeFile (string, error handling)', async () => {\n\t\tconst testFile = join(testDir, 'flushed.txt');\n\n\t\tfs.mkdirSync(testFile); // this will trigger an error later because testFile is now a directory!\n\n\t\tlet expectedError: Error | undefined;\n\t\ttry {\n\t\t\tawait Promises.writeFile(testFile, 'Hello World');\n\t\t} catch (error) {\n\t\t\texpectedError = error;\n\t\t}\n\n\t\tassert.ok(expectedError);\n\t});\n\n\ttest('writeFileSync', async () => {\n\t\tconst testFile = join(testDir, 'flushed.txt');\n\n\t\twriteFileSync(testFile, 'Hello World');\n\t\tassert.strictEqual(fs.readFileSync(testFile).toString(), 'Hello World');\n\n\t\tconst largeString = (new Array(100 * 1024)).join('Large String\\n');\n\n\t\twriteFileSync(testFile, largeString);\n\t\tassert.strictEqual(fs.readFileSync(testFile).toString(), largeString);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}