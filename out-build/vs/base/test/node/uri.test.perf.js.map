{"version":3,"sources":["file:///workspace/appflow/src/vs/base/test/node/uri.test.perf.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAOhG,KAAK,CAAC,YAAY,EAAE;QAEnB,IAAI,YAAmB,CAAC;QACxB,KAAK,CAAC;YACL,YAAY,GAAG,EAAE,CAAC;YAClB,MAAM,IAAI,GAAG,IAAA,iBAAY,EAAC,aAAG,CAAQ,SAAS,CAAC,qCAAqC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;YACzG,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC/B,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;gBACzB,YAAY,CAAC,IAAI,CAAC,SAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aAClC;QACF,CAAC,CAAC,CAAC;QAEH,SAAS,QAAQ,CAAC,IAAY,EAAE,QAAkB;YACjD,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;gBAClB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACtB,QAAQ,EAAE,CAAC;gBACX,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;gBACxF,KAAK,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,QAAQ,CAAC,UAAU,EAAE;YACpB,KAAK,MAAM,GAAG,IAAI,YAAY,EAAE;gBAC/B,MAAM,IAAI,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;gBAC5B,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;aAChB;QACF,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,wBAAwB,EAAE;YAClC,KAAK,MAAM,GAAG,IAAI,YAAY,EAAE;gBAC/B,MAAM,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAChC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;aAChB;QACF,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,QAAQ,EAAE;YAClB,KAAK,MAAM,GAAG,IAAI,YAAY,EAAE;gBAC/B,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;gBACxB,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;aAChB;QACF,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,QAAQ,EAAE;YAClB,KAAK,MAAM,GAAG,IAAI,YAAY,EAAE;gBAC/B,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;gBAC1B,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;aAChB;QACF,CAAC,CAAC,CAAC;IAEJ,CAAC,CAAC,CAAC","file":"uri.test.perf.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { readFileSync } from 'fs';\nimport { FileAccess } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\n\nsuite('URI - perf', function () {\n\n\tlet manyFileUris: URI[];\n\tsetup(function () {\n\t\tmanyFileUris = [];\n\t\tconst data = readFileSync(FileAccess.asFileUri('vs/base/test/node/uri.test.data.txt').fsPath).toString();\n\t\tconst lines = data.split('\\n');\n\t\tfor (const line of lines) {\n\t\t\tmanyFileUris.push(URI.file(line));\n\t\t}\n\t});\n\n\tfunction perfTest(name: string, callback: Function) {\n\t\ttest(name, _done => {\n\t\t\tconst t1 = Date.now();\n\t\t\tcallback();\n\t\t\tconst d = Date.now() - t1;\n\t\t\tconsole.log(`${name} took ${d}ms (${(d / manyFileUris.length).toPrecision(3)} ms/uri)`);\n\t\t\t_done();\n\t\t});\n\t}\n\n\tperfTest('toString', function () {\n\t\tfor (const uri of manyFileUris) {\n\t\t\tconst data = uri.toString();\n\t\t\tassert.ok(data);\n\t\t}\n\t});\n\n\tperfTest('toString(skipEncoding)', function () {\n\t\tfor (const uri of manyFileUris) {\n\t\t\tconst data = uri.toString(true);\n\t\t\tassert.ok(data);\n\t\t}\n\t});\n\n\tperfTest('fsPath', function () {\n\t\tfor (const uri of manyFileUris) {\n\t\t\tconst data = uri.fsPath;\n\t\t\tassert.ok(data);\n\t\t}\n\t});\n\n\tperfTest('toJSON', function () {\n\t\tfor (const uri of manyFileUris) {\n\t\t\tconst data = uri.toJSON();\n\t\t\tassert.ok(data);\n\t\t}\n\t});\n\n});\n"]}