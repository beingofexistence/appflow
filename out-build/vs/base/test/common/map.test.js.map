{"version":3,"sources":["file:///workspace/appflow/src/vs/base/test/common/map.test.ts"],"names":[],"mappings":"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","file":"map.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { BidirectionalMap, LinkedMap, LRUCache, ResourceMap, Touch } from 'vs/base/common/map';\nimport { extUriIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\n\nsuite('Map', () => {\n\n\ttest('LinkedMap - Simple', () => {\n\t\tconst map = new LinkedMap<string, string>();\n\t\tmap.set('ak', 'av');\n\t\tmap.set('bk', 'bv');\n\t\tassert.deepStrictEqual([...map.keys()], ['ak', 'bk']);\n\t\tassert.deepStrictEqual([...map.values()], ['av', 'bv']);\n\t\tassert.strictEqual(map.first, 'av');\n\t\tassert.strictEqual(map.last, 'bv');\n\t});\n\n\ttest('LinkedMap - Touch Old one', () => {\n\t\tconst map = new LinkedMap<string, string>();\n\t\tmap.set('ak', 'av');\n\t\tmap.set('ak', 'av', Touch.AsOld);\n\t\tassert.deepStrictEqual([...map.keys()], ['ak']);\n\t\tassert.deepStrictEqual([...map.values()], ['av']);\n\t});\n\n\ttest('LinkedMap - Touch New one', () => {\n\t\tconst map = new LinkedMap<string, string>();\n\t\tmap.set('ak', 'av');\n\t\tmap.set('ak', 'av', Touch.AsNew);\n\t\tassert.deepStrictEqual([...map.keys()], ['ak']);\n\t\tassert.deepStrictEqual([...map.values()], ['av']);\n\t});\n\n\ttest('LinkedMap - Touch Old two', () => {\n\t\tconst map = new LinkedMap<string, string>();\n\t\tmap.set('ak', 'av');\n\t\tmap.set('bk', 'bv');\n\t\tmap.set('bk', 'bv', Touch.AsOld);\n\t\tassert.deepStrictEqual([...map.keys()], ['bk', 'ak']);\n\t\tassert.deepStrictEqual([...map.values()], ['bv', 'av']);\n\t});\n\n\ttest('LinkedMap - Touch New two', () => {\n\t\tconst map = new LinkedMap<string, string>();\n\t\tmap.set('ak', 'av');\n\t\tmap.set('bk', 'bv');\n\t\tmap.set('ak', 'av', Touch.AsNew);\n\t\tassert.deepStrictEqual([...map.keys()], ['bk', 'ak']);\n\t\tassert.deepStrictEqual([...map.values()], ['bv', 'av']);\n\t});\n\n\ttest('LinkedMap - Touch Old from middle', () => {\n\t\tconst map = new LinkedMap<string, string>();\n\t\tmap.set('ak', 'av');\n\t\tmap.set('bk', 'bv');\n\t\tmap.set('ck', 'cv');\n\t\tmap.set('bk', 'bv', Touch.AsOld);\n\t\tassert.deepStrictEqual([...map.keys()], ['bk', 'ak', 'ck']);\n\t\tassert.deepStrictEqual([...map.values()], ['bv', 'av', 'cv']);\n\t});\n\n\ttest('LinkedMap - Touch New from middle', () => {\n\t\tconst map = new LinkedMap<string, string>();\n\t\tmap.set('ak', 'av');\n\t\tmap.set('bk', 'bv');\n\t\tmap.set('ck', 'cv');\n\t\tmap.set('bk', 'bv', Touch.AsNew);\n\t\tassert.deepStrictEqual([...map.keys()], ['ak', 'ck', 'bk']);\n\t\tassert.deepStrictEqual([...map.values()], ['av', 'cv', 'bv']);\n\t});\n\n\ttest('LinkedMap - basics', function () {\n\t\tconst map = new LinkedMap<string, any>();\n\n\t\tassert.strictEqual(map.size, 0);\n\n\t\tmap.set('1', 1);\n\t\tmap.set('2', '2');\n\t\tmap.set('3', true);\n\n\t\tconst obj = Object.create(null);\n\t\tmap.set('4', obj);\n\n\t\tconst date = Date.now();\n\t\tmap.set('5', date);\n\n\t\tassert.strictEqual(map.size, 5);\n\t\tassert.strictEqual(map.get('1'), 1);\n\t\tassert.strictEqual(map.get('2'), '2');\n\t\tassert.strictEqual(map.get('3'), true);\n\t\tassert.strictEqual(map.get('4'), obj);\n\t\tassert.strictEqual(map.get('5'), date);\n\t\tassert.ok(!map.get('6'));\n\n\t\tmap.delete('6');\n\t\tassert.strictEqual(map.size, 5);\n\t\tassert.strictEqual(map.delete('1'), true);\n\t\tassert.strictEqual(map.delete('2'), true);\n\t\tassert.strictEqual(map.delete('3'), true);\n\t\tassert.strictEqual(map.delete('4'), true);\n\t\tassert.strictEqual(map.delete('5'), true);\n\n\t\tassert.strictEqual(map.size, 0);\n\t\tassert.ok(!map.get('5'));\n\t\tassert.ok(!map.get('4'));\n\t\tassert.ok(!map.get('3'));\n\t\tassert.ok(!map.get('2'));\n\t\tassert.ok(!map.get('1'));\n\n\t\tmap.set('1', 1);\n\t\tmap.set('2', '2');\n\t\tmap.set('3', true);\n\n\t\tassert.ok(map.has('1'));\n\t\tassert.strictEqual(map.get('1'), 1);\n\t\tassert.strictEqual(map.get('2'), '2');\n\t\tassert.strictEqual(map.get('3'), true);\n\n\t\tmap.clear();\n\n\t\tassert.strictEqual(map.size, 0);\n\t\tassert.ok(!map.get('1'));\n\t\tassert.ok(!map.get('2'));\n\t\tassert.ok(!map.get('3'));\n\t\tassert.ok(!map.has('1'));\n\t});\n\n\ttest('LinkedMap - Iterators', () => {\n\t\tconst map = new LinkedMap<number, any>();\n\t\tmap.set(1, 1);\n\t\tmap.set(2, 2);\n\t\tmap.set(3, 3);\n\n\t\tfor (const elem of map.keys()) {\n\t\t\tassert.ok(elem);\n\t\t}\n\n\t\tfor (const elem of map.values()) {\n\t\t\tassert.ok(elem);\n\t\t}\n\n\t\tfor (const elem of map.entries()) {\n\t\t\tassert.ok(elem);\n\t\t}\n\n\t\t{\n\t\t\tconst keys = map.keys();\n\t\t\tconst values = map.values();\n\t\t\tconst entries = map.entries();\n\t\t\tmap.get(1);\n\t\t\tkeys.next();\n\t\t\tvalues.next();\n\t\t\tentries.next();\n\t\t}\n\n\t\t{\n\t\t\tconst keys = map.keys();\n\t\t\tconst values = map.values();\n\t\t\tconst entries = map.entries();\n\t\t\tmap.get(1, Touch.AsNew);\n\n\t\t\tlet exceptions: number = 0;\n\t\t\ttry {\n\t\t\t\tkeys.next();\n\t\t\t} catch (err) {\n\t\t\t\texceptions++;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvalues.next();\n\t\t\t} catch (err) {\n\t\t\t\texceptions++;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tentries.next();\n\t\t\t} catch (err) {\n\t\t\t\texceptions++;\n\t\t\t}\n\n\t\t\tassert.strictEqual(exceptions, 3);\n\t\t}\n\t});\n\n\ttest('LinkedMap - LRU Cache simple', () => {\n\t\tconst cache = new LRUCache<number, number>(5);\n\n\t\t[1, 2, 3, 4, 5].forEach(value => cache.set(value, value));\n\t\tassert.strictEqual(cache.size, 5);\n\t\tcache.set(6, 6);\n\t\tassert.strictEqual(cache.size, 5);\n\t\tassert.deepStrictEqual([...cache.keys()], [2, 3, 4, 5, 6]);\n\t\tcache.set(7, 7);\n\t\tassert.strictEqual(cache.size, 5);\n\t\tassert.deepStrictEqual([...cache.keys()], [3, 4, 5, 6, 7]);\n\t\tconst values: number[] = [];\n\t\t[3, 4, 5, 6, 7].forEach(key => values.push(cache.get(key)!));\n\t\tassert.deepStrictEqual(values, [3, 4, 5, 6, 7]);\n\t});\n\n\ttest('LinkedMap - LRU Cache get', () => {\n\t\tconst cache = new LRUCache<number, number>(5);\n\n\t\t[1, 2, 3, 4, 5].forEach(value => cache.set(value, value));\n\t\tassert.strictEqual(cache.size, 5);\n\t\tassert.deepStrictEqual([...cache.keys()], [1, 2, 3, 4, 5]);\n\t\tcache.get(3);\n\t\tassert.deepStrictEqual([...cache.keys()], [1, 2, 4, 5, 3]);\n\t\tcache.peek(4);\n\t\tassert.deepStrictEqual([...cache.keys()], [1, 2, 4, 5, 3]);\n\t\tconst values: number[] = [];\n\t\t[1, 2, 3, 4, 5].forEach(key => values.push(cache.get(key)!));\n\t\tassert.deepStrictEqual(values, [1, 2, 3, 4, 5]);\n\t});\n\n\ttest('LinkedMap - LRU Cache limit', () => {\n\t\tconst cache = new LRUCache<number, number>(10);\n\n\t\tfor (let i = 1; i <= 10; i++) {\n\t\t\tcache.set(i, i);\n\t\t}\n\t\tassert.strictEqual(cache.size, 10);\n\t\tcache.limit = 5;\n\t\tassert.strictEqual(cache.size, 5);\n\t\tassert.deepStrictEqual([...cache.keys()], [6, 7, 8, 9, 10]);\n\t\tcache.limit = 20;\n\t\tassert.strictEqual(cache.size, 5);\n\t\tfor (let i = 11; i <= 20; i++) {\n\t\t\tcache.set(i, i);\n\t\t}\n\t\tassert.deepStrictEqual(cache.size, 15);\n\t\tconst values: number[] = [];\n\t\tfor (let i = 6; i <= 20; i++) {\n\t\t\tvalues.push(cache.get(i)!);\n\t\t\tassert.strictEqual(cache.get(i), i);\n\t\t}\n\t\tassert.deepStrictEqual([...cache.values()], values);\n\t});\n\n\ttest('LinkedMap - LRU Cache limit with ratio', () => {\n\t\tconst cache = new LRUCache<number, number>(10, 0.5);\n\n\t\tfor (let i = 1; i <= 10; i++) {\n\t\t\tcache.set(i, i);\n\t\t}\n\t\tassert.strictEqual(cache.size, 10);\n\t\tcache.set(11, 11);\n\t\tassert.strictEqual(cache.size, 5);\n\t\tassert.deepStrictEqual([...cache.keys()], [7, 8, 9, 10, 11]);\n\t\tconst values: number[] = [];\n\t\t[...cache.keys()].forEach(key => values.push(cache.get(key)!));\n\t\tassert.deepStrictEqual(values, [7, 8, 9, 10, 11]);\n\t\tassert.deepStrictEqual([...cache.values()], values);\n\t});\n\n\ttest('LinkedMap - toJSON / fromJSON', () => {\n\t\tlet map = new LinkedMap<string, string>();\n\t\tmap.set('ak', 'av');\n\t\tmap.set('bk', 'bv');\n\t\tmap.set('ck', 'cv');\n\n\t\tconst json = map.toJSON();\n\t\tmap = new LinkedMap<string, string>();\n\t\tmap.fromJSON(json);\n\n\t\tlet i = 0;\n\t\tmap.forEach((value, key) => {\n\t\t\tif (i === 0) {\n\t\t\t\tassert.strictEqual(key, 'ak');\n\t\t\t\tassert.strictEqual(value, 'av');\n\t\t\t} else if (i === 1) {\n\t\t\t\tassert.strictEqual(key, 'bk');\n\t\t\t\tassert.strictEqual(value, 'bv');\n\t\t\t} else if (i === 2) {\n\t\t\t\tassert.strictEqual(key, 'ck');\n\t\t\t\tassert.strictEqual(value, 'cv');\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\t});\n\n\ttest('LinkedMap - delete Head and Tail', function () {\n\t\tconst map = new LinkedMap<string, number>();\n\n\t\tassert.strictEqual(map.size, 0);\n\n\t\tmap.set('1', 1);\n\t\tassert.strictEqual(map.size, 1);\n\t\tmap.delete('1');\n\t\tassert.strictEqual(map.get('1'), undefined);\n\t\tassert.strictEqual(map.size, 0);\n\t\tassert.strictEqual([...map.keys()].length, 0);\n\t});\n\n\ttest('LinkedMap - delete Head', function () {\n\t\tconst map = new LinkedMap<string, number>();\n\n\t\tassert.strictEqual(map.size, 0);\n\n\t\tmap.set('1', 1);\n\t\tmap.set('2', 2);\n\t\tassert.strictEqual(map.size, 2);\n\t\tmap.delete('1');\n\t\tassert.strictEqual(map.get('2'), 2);\n\t\tassert.strictEqual(map.size, 1);\n\t\tassert.strictEqual([...map.keys()].length, 1);\n\t\tassert.strictEqual([...map.keys()][0], '2');\n\t});\n\n\ttest('LinkedMap - delete Tail', function () {\n\t\tconst map = new LinkedMap<string, number>();\n\n\t\tassert.strictEqual(map.size, 0);\n\n\t\tmap.set('1', 1);\n\t\tmap.set('2', 2);\n\t\tassert.strictEqual(map.size, 2);\n\t\tmap.delete('2');\n\t\tassert.strictEqual(map.get('1'), 1);\n\t\tassert.strictEqual(map.size, 1);\n\t\tassert.strictEqual([...map.keys()].length, 1);\n\t\tassert.strictEqual([...map.keys()][0], '1');\n\t});\n\n\ttest('ResourceMap - basics', function () {\n\t\tconst map = new ResourceMap<any>();\n\n\t\tconst resource1 = URI.parse('some://1');\n\t\tconst resource2 = URI.parse('some://2');\n\t\tconst resource3 = URI.parse('some://3');\n\t\tconst resource4 = URI.parse('some://4');\n\t\tconst resource5 = URI.parse('some://5');\n\t\tconst resource6 = URI.parse('some://6');\n\n\t\tassert.strictEqual(map.size, 0);\n\n\t\tconst res = map.set(resource1, 1);\n\t\tassert.ok(res === map);\n\t\tmap.set(resource2, '2');\n\t\tmap.set(resource3, true);\n\n\t\tconst values = [...map.values()];\n\t\tassert.strictEqual(values[0], 1);\n\t\tassert.strictEqual(values[1], '2');\n\t\tassert.strictEqual(values[2], true);\n\n\t\tlet counter = 0;\n\t\tmap.forEach((value, key, mapObj) => {\n\t\t\tassert.strictEqual(value, values[counter++]);\n\t\t\tassert.ok(URI.isUri(key));\n\t\t\tassert.ok(map === mapObj);\n\t\t});\n\n\t\tconst obj = Object.create(null);\n\t\tmap.set(resource4, obj);\n\n\t\tconst date = Date.now();\n\t\tmap.set(resource5, date);\n\n\t\tassert.strictEqual(map.size, 5);\n\t\tassert.strictEqual(map.get(resource1), 1);\n\t\tassert.strictEqual(map.get(resource2), '2');\n\t\tassert.strictEqual(map.get(resource3), true);\n\t\tassert.strictEqual(map.get(resource4), obj);\n\t\tassert.strictEqual(map.get(resource5), date);\n\t\tassert.ok(!map.get(resource6));\n\n\t\tmap.delete(resource6);\n\t\tassert.strictEqual(map.size, 5);\n\t\tassert.ok(map.delete(resource1));\n\t\tassert.ok(map.delete(resource2));\n\t\tassert.ok(map.delete(resource3));\n\t\tassert.ok(map.delete(resource4));\n\t\tassert.ok(map.delete(resource5));\n\n\t\tassert.strictEqual(map.size, 0);\n\t\tassert.ok(!map.get(resource5));\n\t\tassert.ok(!map.get(resource4));\n\t\tassert.ok(!map.get(resource3));\n\t\tassert.ok(!map.get(resource2));\n\t\tassert.ok(!map.get(resource1));\n\n\t\tmap.set(resource1, 1);\n\t\tmap.set(resource2, '2');\n\t\tmap.set(resource3, true);\n\n\t\tassert.ok(map.has(resource1));\n\t\tassert.strictEqual(map.get(resource1), 1);\n\t\tassert.strictEqual(map.get(resource2), '2');\n\t\tassert.strictEqual(map.get(resource3), true);\n\n\t\tmap.clear();\n\n\t\tassert.strictEqual(map.size, 0);\n\t\tassert.ok(!map.get(resource1));\n\t\tassert.ok(!map.get(resource2));\n\t\tassert.ok(!map.get(resource3));\n\t\tassert.ok(!map.has(resource1));\n\n\t\tmap.set(resource1, false);\n\t\tmap.set(resource2, 0);\n\n\t\tassert.ok(map.has(resource1));\n\t\tassert.ok(map.has(resource2));\n\t});\n\n\ttest('ResourceMap - files (do NOT ignorecase)', function () {\n\t\tconst map = new ResourceMap<any>();\n\n\t\tconst fileA = URI.parse('file://some/filea');\n\t\tconst fileB = URI.parse('some://some/other/fileb');\n\t\tconst fileAUpper = URI.parse('file://SOME/FILEA');\n\n\t\tmap.set(fileA, 'true');\n\t\tassert.strictEqual(map.get(fileA), 'true');\n\n\t\tassert.ok(!map.get(fileAUpper));\n\n\t\tassert.ok(!map.get(fileB));\n\n\t\tmap.set(fileAUpper, 'false');\n\t\tassert.strictEqual(map.get(fileAUpper), 'false');\n\n\t\tassert.strictEqual(map.get(fileA), 'true');\n\n\t\tconst windowsFile = URI.file('c:\\\\test with %25\\\\c#code');\n\t\tconst uncFile = URI.file('\\\\\\\\shäres\\\\path\\\\c#\\\\plugin.json');\n\n\t\tmap.set(windowsFile, 'true');\n\t\tmap.set(uncFile, 'true');\n\n\t\tassert.strictEqual(map.get(windowsFile), 'true');\n\t\tassert.strictEqual(map.get(uncFile), 'true');\n\t});\n\n\ttest('ResourceMap - files (ignorecase)', function () {\n\t\tconst map = new ResourceMap<any>(uri => extUriIgnorePathCase.getComparisonKey(uri));\n\n\t\tconst fileA = URI.parse('file://some/filea');\n\t\tconst fileB = URI.parse('some://some/other/fileb');\n\t\tconst fileAUpper = URI.parse('file://SOME/FILEA');\n\n\t\tmap.set(fileA, 'true');\n\t\tassert.strictEqual(map.get(fileA), 'true');\n\n\t\tassert.strictEqual(map.get(fileAUpper), 'true');\n\n\t\tassert.ok(!map.get(fileB));\n\n\t\tmap.set(fileAUpper, 'false');\n\t\tassert.strictEqual(map.get(fileAUpper), 'false');\n\n\t\tassert.strictEqual(map.get(fileA), 'false');\n\n\t\tconst windowsFile = URI.file('c:\\\\test with %25\\\\c#code');\n\t\tconst uncFile = URI.file('\\\\\\\\shäres\\\\path\\\\c#\\\\plugin.json');\n\n\t\tmap.set(windowsFile, 'true');\n\t\tmap.set(uncFile, 'true');\n\n\t\tassert.strictEqual(map.get(windowsFile), 'true');\n\t\tassert.strictEqual(map.get(uncFile), 'true');\n\t});\n\n\ttest('ResourceMap - files (ignorecase, BUT preservecase)', function () {\n\t\tconst map = new ResourceMap<number>(uri => extUriIgnorePathCase.getComparisonKey(uri));\n\n\t\tconst fileA = URI.parse('file://some/filea');\n\t\tconst fileAUpper = URI.parse('file://SOME/FILEA');\n\n\t\tmap.set(fileA, 1);\n\t\tassert.strictEqual(map.get(fileA), 1);\n\t\tassert.strictEqual(map.get(fileAUpper), 1);\n\t\tassert.deepStrictEqual(Array.from(map.keys()).map(String), [fileA].map(String));\n\t\tassert.deepStrictEqual(Array.from(map), [[fileA, 1]]);\n\n\t\tmap.set(fileAUpper, 1);\n\t\tassert.strictEqual(map.get(fileA), 1);\n\t\tassert.strictEqual(map.get(fileAUpper), 1);\n\t\tassert.deepStrictEqual(Array.from(map.keys()).map(String), [fileAUpper].map(String));\n\t\tassert.deepStrictEqual(Array.from(map), [[fileAUpper, 1]]);\n\t});\n});\n\nsuite('BidirectionalMap', () => {\n\ttest('should set and get values correctly', () => {\n\t\tconst map = new BidirectionalMap<string, number>();\n\t\tmap.set('one', 1);\n\t\tmap.set('two', 2);\n\t\tmap.set('three', 3);\n\n\t\tassert.strictEqual(map.get('one'), 1);\n\t\tassert.strictEqual(map.get('two'), 2);\n\t\tassert.strictEqual(map.get('three'), 3);\n\t});\n\n\ttest('should get keys by value correctly', () => {\n\t\tconst map = new BidirectionalMap<string, number>();\n\t\tmap.set('one', 1);\n\t\tmap.set('two', 2);\n\t\tmap.set('three', 3);\n\n\t\tassert.strictEqual(map.getKey(1), 'one');\n\t\tassert.strictEqual(map.getKey(2), 'two');\n\t\tassert.strictEqual(map.getKey(3), 'three');\n\t});\n\n\ttest('should delete values correctly', () => {\n\t\tconst map = new BidirectionalMap<string, number>();\n\t\tmap.set('one', 1);\n\t\tmap.set('two', 2);\n\t\tmap.set('three', 3);\n\n\t\tassert.strictEqual(map.delete('one'), true);\n\t\tassert.strictEqual(map.get('one'), undefined);\n\t\tassert.strictEqual(map.getKey(1), undefined);\n\n\t\tassert.strictEqual(map.delete('two'), true);\n\t\tassert.strictEqual(map.get('two'), undefined);\n\t\tassert.strictEqual(map.getKey(2), undefined);\n\n\t\tassert.strictEqual(map.delete('three'), true);\n\t\tassert.strictEqual(map.get('three'), undefined);\n\t\tassert.strictEqual(map.getKey(3), undefined);\n\t});\n\n\ttest('should handle non-existent keys correctly', () => {\n\t\tconst map = new BidirectionalMap<string, number>();\n\t\tmap.set('one', 1);\n\t\tmap.set('two', 2);\n\t\tmap.set('three', 3);\n\n\t\tassert.strictEqual(map.get('four'), undefined);\n\t\tassert.strictEqual(map.getKey(4), undefined);\n\t\tassert.strictEqual(map.delete('four'), false);\n\t});\n\n\ttest('should handle forEach correctly', () => {\n\t\tconst map = new BidirectionalMap<string, number>();\n\t\tmap.set('one', 1);\n\t\tmap.set('two', 2);\n\t\tmap.set('three', 3);\n\n\t\tconst keys: string[] = [];\n\t\tconst values: number[] = [];\n\t\tmap.forEach((value, key) => {\n\t\t\tkeys.push(key);\n\t\t\tvalues.push(value);\n\t\t});\n\n\t\tassert.deepStrictEqual(keys, ['one', 'two', 'three']);\n\t\tassert.deepStrictEqual(values, [1, 2, 3]);\n\t});\n\n\ttest('should handle clear correctly', () => {\n\t\tconst map = new BidirectionalMap<string, number>();\n\t\tmap.set('one', 1);\n\t\tmap.set('two', 2);\n\t\tmap.set('three', 3);\n\n\t\tmap.clear();\n\n\t\tassert.strictEqual(map.get('one'), undefined);\n\t\tassert.strictEqual(map.get('two'), undefined);\n\t\tassert.strictEqual(map.get('three'), undefined);\n\t\tassert.strictEqual(map.getKey(1), undefined);\n\t\tassert.strictEqual(map.getKey(2), undefined);\n\t\tassert.strictEqual(map.getKey(3), undefined);\n\t});\n});\n"]}