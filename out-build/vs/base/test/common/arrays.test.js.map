{"version":3,"sources":["file:///workspace/appflow/src/vs/base/test/common/arrays.test.ts"],"names":[],"mappings":"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","file":"arrays.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as arraysFind from 'vs/base/common/arraysFind';\n\nsuite('Arrays', () => {\n\n\ttest('removeFastWithoutKeepingOrder', () => {\n\t\tconst array = [1, 4, 5, 7, 55, 59, 60, 61, 64, 69];\n\t\tarrays.removeFastWithoutKeepingOrder(array, 1);\n\t\tassert.deepStrictEqual(array, [1, 69, 5, 7, 55, 59, 60, 61, 64]);\n\n\t\tarrays.removeFastWithoutKeepingOrder(array, 0);\n\t\tassert.deepStrictEqual(array, [64, 69, 5, 7, 55, 59, 60, 61]);\n\n\t\tarrays.removeFastWithoutKeepingOrder(array, 7);\n\t\tassert.deepStrictEqual(array, [64, 69, 5, 7, 55, 59, 60]);\n\t});\n\n\ttest('findFirst', () => {\n\t\tconst array = [1, 4, 5, 7, 55, 59, 60, 61, 64, 69];\n\n\t\tlet idx = arraysFind.findFirstIdxMonotonousOrArrLen(array, e => e >= 0);\n\t\tassert.strictEqual(array[idx], 1);\n\n\t\tidx = arraysFind.findFirstIdxMonotonousOrArrLen(array, e => e > 1);\n\t\tassert.strictEqual(array[idx], 4);\n\n\t\tidx = arraysFind.findFirstIdxMonotonousOrArrLen(array, e => e >= 8);\n\t\tassert.strictEqual(array[idx], 55);\n\n\t\tidx = arraysFind.findFirstIdxMonotonousOrArrLen(array, e => e >= 61);\n\t\tassert.strictEqual(array[idx], 61);\n\n\t\tidx = arraysFind.findFirstIdxMonotonousOrArrLen(array, e => e >= 69);\n\t\tassert.strictEqual(array[idx], 69);\n\n\t\tidx = arraysFind.findFirstIdxMonotonousOrArrLen(array, e => e >= 70);\n\t\tassert.strictEqual(idx, array.length);\n\n\t\tidx = arraysFind.findFirstIdxMonotonousOrArrLen([], e => e >= 0);\n\t\tassert.strictEqual(array[idx], 1);\n\t});\n\n\ttest('quickSelect', () => {\n\n\t\tfunction assertMedian(expexted: number, data: number[], nth: number = Math.floor(data.length / 2)) {\n\t\t\tconst compare = (a: number, b: number) => a - b;\n\t\t\tconst actual1 = arrays.quickSelect(nth, data, compare);\n\t\t\tassert.strictEqual(actual1, expexted);\n\n\t\t\tconst actual2 = data.slice().sort(compare)[nth];\n\t\t\tassert.strictEqual(actual2, expexted);\n\t\t}\n\n\t\tassertMedian(5, [9, 1, 0, 2, 3, 4, 6, 8, 7, 10, 5]);\n\t\tassertMedian(8, [9, 1, 0, 2, 3, 4, 6, 8, 7, 10, 5], 8);\n\t\tassertMedian(8, [13, 4, 8]);\n\t\tassertMedian(4, [13, 4, 8, 4, 4]);\n\t\tassertMedian(13, [13, 4, 8], 2);\n\t});\n\n\ttest('sortedDiff', () => {\n\t\tfunction compare(a: number, b: number): number {\n\t\t\treturn a - b;\n\t\t}\n\n\t\tlet d = arrays.sortedDiff([1, 2, 4], [], compare);\n\t\tassert.deepStrictEqual(d, [\n\t\t\t{ start: 0, deleteCount: 3, toInsert: [] }\n\t\t]);\n\n\t\td = arrays.sortedDiff([], [1, 2, 4], compare);\n\t\tassert.deepStrictEqual(d, [\n\t\t\t{ start: 0, deleteCount: 0, toInsert: [1, 2, 4] }\n\t\t]);\n\n\t\td = arrays.sortedDiff([1, 2, 4], [1, 2, 4], compare);\n\t\tassert.deepStrictEqual(d, []);\n\n\t\td = arrays.sortedDiff([1, 2, 4], [2, 3, 4, 5], compare);\n\t\tassert.deepStrictEqual(d, [\n\t\t\t{ start: 0, deleteCount: 1, toInsert: [] },\n\t\t\t{ start: 2, deleteCount: 0, toInsert: [3] },\n\t\t\t{ start: 3, deleteCount: 0, toInsert: [5] },\n\t\t]);\n\n\t\td = arrays.sortedDiff([2, 3, 4, 5], [1, 2, 4], compare);\n\t\tassert.deepStrictEqual(d, [\n\t\t\t{ start: 0, deleteCount: 0, toInsert: [1] },\n\t\t\t{ start: 1, deleteCount: 1, toInsert: [] },\n\t\t\t{ start: 3, deleteCount: 1, toInsert: [] },\n\t\t]);\n\n\t\td = arrays.sortedDiff([1, 3, 5, 7], [5, 9, 11], compare);\n\t\tassert.deepStrictEqual(d, [\n\t\t\t{ start: 0, deleteCount: 2, toInsert: [] },\n\t\t\t{ start: 3, deleteCount: 1, toInsert: [9, 11] }\n\t\t]);\n\n\t\td = arrays.sortedDiff([1, 3, 7], [5, 9, 11], compare);\n\t\tassert.deepStrictEqual(d, [\n\t\t\t{ start: 0, deleteCount: 3, toInsert: [5, 9, 11] }\n\t\t]);\n\t});\n\n\ttest('delta sorted arrays', function () {\n\t\tfunction compare(a: number, b: number): number {\n\t\t\treturn a - b;\n\t\t}\n\n\t\tlet d = arrays.delta([1, 2, 4], [], compare);\n\t\tassert.deepStrictEqual(d.removed, [1, 2, 4]);\n\t\tassert.deepStrictEqual(d.added, []);\n\n\t\td = arrays.delta([], [1, 2, 4], compare);\n\t\tassert.deepStrictEqual(d.removed, []);\n\t\tassert.deepStrictEqual(d.added, [1, 2, 4]);\n\n\t\td = arrays.delta([1, 2, 4], [1, 2, 4], compare);\n\t\tassert.deepStrictEqual(d.removed, []);\n\t\tassert.deepStrictEqual(d.added, []);\n\n\t\td = arrays.delta([1, 2, 4], [2, 3, 4, 5], compare);\n\t\tassert.deepStrictEqual(d.removed, [1]);\n\t\tassert.deepStrictEqual(d.added, [3, 5]);\n\n\t\td = arrays.delta([2, 3, 4, 5], [1, 2, 4], compare);\n\t\tassert.deepStrictEqual(d.removed, [3, 5]);\n\t\tassert.deepStrictEqual(d.added, [1]);\n\n\t\td = arrays.delta([1, 3, 5, 7], [5, 9, 11], compare);\n\t\tassert.deepStrictEqual(d.removed, [1, 3, 7]);\n\t\tassert.deepStrictEqual(d.added, [9, 11]);\n\n\t\td = arrays.delta([1, 3, 7], [5, 9, 11], compare);\n\t\tassert.deepStrictEqual(d.removed, [1, 3, 7]);\n\t\tassert.deepStrictEqual(d.added, [5, 9, 11]);\n\t});\n\n\ttest('binarySearch', () => {\n\t\tfunction compare(a: number, b: number): number {\n\t\t\treturn a - b;\n\t\t}\n\t\tconst array = [1, 4, 5, 7, 55, 59, 60, 61, 64, 69];\n\n\t\tassert.strictEqual(arrays.binarySearch(array, 1, compare), 0);\n\t\tassert.strictEqual(arrays.binarySearch(array, 5, compare), 2);\n\n\t\t// insertion point\n\t\tassert.strictEqual(arrays.binarySearch(array, 0, compare), ~0);\n\t\tassert.strictEqual(arrays.binarySearch(array, 6, compare), ~3);\n\t\tassert.strictEqual(arrays.binarySearch(array, 70, compare), ~10);\n\t});\n\n\ttest('binarySearch2', () => {\n\t\tfunction compareTo(key: number) {\n\t\t\treturn (index: number) => {\n\t\t\t\treturn array[index] - key;\n\t\t\t};\n\t\t}\n\t\tconst array = [1, 4, 5, 7, 55, 59, 60, 61, 64, 69];\n\n\t\tassert.strictEqual(arrays.binarySearch2(10, compareTo(1)), 0);\n\t\tassert.strictEqual(arrays.binarySearch2(10, compareTo(5)), 2);\n\n\t\t// insertion point\n\t\tassert.strictEqual(arrays.binarySearch2(10, compareTo(0)), ~0);\n\t\tassert.strictEqual(arrays.binarySearch2(10, compareTo(6)), ~3);\n\t\tassert.strictEqual(arrays.binarySearch2(10, compareTo(70)), ~10);\n\t\tassert.strictEqual(arrays.binarySearch2(2, compareTo(5)), ~2);\n\t});\n\n\ttest('distinct', () => {\n\t\tfunction compare(a: string): string {\n\t\t\treturn a;\n\t\t}\n\n\t\tassert.deepStrictEqual(arrays.distinct(['32', '4', '5'], compare), ['32', '4', '5']);\n\t\tassert.deepStrictEqual(arrays.distinct(['32', '4', '5', '4'], compare), ['32', '4', '5']);\n\t\tassert.deepStrictEqual(arrays.distinct(['32', 'constructor', '5', '1'], compare), ['32', 'constructor', '5', '1']);\n\t\tassert.deepStrictEqual(arrays.distinct(['32', 'constructor', 'proto', 'proto', 'constructor'], compare), ['32', 'constructor', 'proto']);\n\t\tassert.deepStrictEqual(arrays.distinct(['32', '4', '5', '32', '4', '5', '32', '4', '5', '5'], compare), ['32', '4', '5']);\n\t});\n\n\ttest('top', () => {\n\t\tconst cmp = (a: number, b: number) => {\n\t\t\tassert.strictEqual(typeof a, 'number', 'typeof a');\n\t\t\tassert.strictEqual(typeof b, 'number', 'typeof b');\n\t\t\treturn a - b;\n\t\t};\n\n\t\tassert.deepStrictEqual(arrays.top([], cmp, 1), []);\n\t\tassert.deepStrictEqual(arrays.top([1], cmp, 0), []);\n\t\tassert.deepStrictEqual(arrays.top([1, 2], cmp, 1), [1]);\n\t\tassert.deepStrictEqual(arrays.top([2, 1], cmp, 1), [1]);\n\t\tassert.deepStrictEqual(arrays.top([1, 3, 2], cmp, 2), [1, 2]);\n\t\tassert.deepStrictEqual(arrays.top([3, 2, 1], cmp, 3), [1, 2, 3]);\n\t\tassert.deepStrictEqual(arrays.top([4, 6, 2, 7, 8, 3, 5, 1], cmp, 3), [1, 2, 3]);\n\t});\n\n\ttest('topAsync', async () => {\n\t\tconst cmp = (a: number, b: number) => {\n\t\t\tassert.strictEqual(typeof a, 'number', 'typeof a');\n\t\t\tassert.strictEqual(typeof b, 'number', 'typeof b');\n\t\t\treturn a - b;\n\t\t};\n\n\t\tawait testTopAsync(cmp, 1);\n\t\treturn testTopAsync(cmp, 2);\n\t});\n\n\tasync function testTopAsync(cmp: any, m: number) {\n\t\t{\n\t\t\tconst result = await arrays.topAsync([], cmp, 1, m);\n\t\t\tassert.deepStrictEqual(result, []);\n\t\t}\n\t\t{\n\t\t\tconst result = await arrays.topAsync([1], cmp, 0, m);\n\t\t\tassert.deepStrictEqual(result, []);\n\t\t}\n\t\t{\n\t\t\tconst result = await arrays.topAsync([1, 2], cmp, 1, m);\n\t\t\tassert.deepStrictEqual(result, [1]);\n\t\t}\n\t\t{\n\t\t\tconst result = await arrays.topAsync([2, 1], cmp, 1, m);\n\t\t\tassert.deepStrictEqual(result, [1]);\n\t\t}\n\t\t{\n\t\t\tconst result = await arrays.topAsync([1, 3, 2], cmp, 2, m);\n\t\t\tassert.deepStrictEqual(result, [1, 2]);\n\t\t}\n\t\t{\n\t\t\tconst result = await arrays.topAsync([3, 2, 1], cmp, 3, m);\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3]);\n\t\t}\n\t\t{\n\t\t\tconst result = await arrays.topAsync([4, 6, 2, 7, 8, 3, 5, 1], cmp, 3, m);\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3]);\n\t\t}\n\t}\n\n\ttest('coalesce', () => {\n\t\tconst a: Array<number | null> = arrays.coalesce([null, 1, null, 2, 3]);\n\t\tassert.strictEqual(a.length, 3);\n\t\tassert.strictEqual(a[0], 1);\n\t\tassert.strictEqual(a[1], 2);\n\t\tassert.strictEqual(a[2], 3);\n\n\t\tarrays.coalesce([null, 1, null, undefined, undefined, 2, 3]);\n\t\tassert.strictEqual(a.length, 3);\n\t\tassert.strictEqual(a[0], 1);\n\t\tassert.strictEqual(a[1], 2);\n\t\tassert.strictEqual(a[2], 3);\n\n\t\tlet b: number[] = [];\n\t\tb[10] = 1;\n\t\tb[20] = 2;\n\t\tb[30] = 3;\n\t\tb = arrays.coalesce(b);\n\t\tassert.strictEqual(b.length, 3);\n\t\tassert.strictEqual(b[0], 1);\n\t\tassert.strictEqual(b[1], 2);\n\t\tassert.strictEqual(b[2], 3);\n\n\t\tlet sparse: number[] = [];\n\t\tsparse[0] = 1;\n\t\tsparse[1] = 1;\n\t\tsparse[17] = 1;\n\t\tsparse[1000] = 1;\n\t\tsparse[1001] = 1;\n\n\t\tassert.strictEqual(sparse.length, 1002);\n\n\t\tsparse = arrays.coalesce(sparse);\n\t\tassert.strictEqual(sparse.length, 5);\n\t});\n\n\ttest('coalesce - inplace', function () {\n\t\tlet a: Array<number | null> = [null, 1, null, 2, 3];\n\t\tarrays.coalesceInPlace(a);\n\t\tassert.strictEqual(a.length, 3);\n\t\tassert.strictEqual(a[0], 1);\n\t\tassert.strictEqual(a[1], 2);\n\t\tassert.strictEqual(a[2], 3);\n\n\t\ta = [null, 1, null, undefined!, undefined!, 2, 3];\n\t\tarrays.coalesceInPlace(a);\n\t\tassert.strictEqual(a.length, 3);\n\t\tassert.strictEqual(a[0], 1);\n\t\tassert.strictEqual(a[1], 2);\n\t\tassert.strictEqual(a[2], 3);\n\n\t\tconst b: number[] = [];\n\t\tb[10] = 1;\n\t\tb[20] = 2;\n\t\tb[30] = 3;\n\t\tarrays.coalesceInPlace(b);\n\t\tassert.strictEqual(b.length, 3);\n\t\tassert.strictEqual(b[0], 1);\n\t\tassert.strictEqual(b[1], 2);\n\t\tassert.strictEqual(b[2], 3);\n\n\t\tconst sparse: number[] = [];\n\t\tsparse[0] = 1;\n\t\tsparse[1] = 1;\n\t\tsparse[17] = 1;\n\t\tsparse[1000] = 1;\n\t\tsparse[1001] = 1;\n\n\t\tassert.strictEqual(sparse.length, 1002);\n\n\t\tarrays.coalesceInPlace(sparse);\n\t\tassert.strictEqual(sparse.length, 5);\n\t});\n\n\ttest('insert, remove', function () {\n\t\tconst array: string[] = [];\n\t\tconst remove = arrays.insert(array, 'foo');\n\t\tassert.strictEqual(array[0], 'foo');\n\n\t\tremove();\n\t\tassert.strictEqual(array.length, 0);\n\t});\n\n\ttest('splice', function () {\n\t\t// negative start index, absolute value greater than the length\n\t\tlet array = [1, 2, 3, 4, 5];\n\t\tarrays.splice(array, -6, 3, [6, 7]);\n\t\tassert.strictEqual(array.length, 4);\n\t\tassert.strictEqual(array[0], 6);\n\t\tassert.strictEqual(array[1], 7);\n\t\tassert.strictEqual(array[2], 4);\n\t\tassert.strictEqual(array[3], 5);\n\n\t\t// negative start index, absolute value less than the length\n\t\tarray = [1, 2, 3, 4, 5];\n\t\tarrays.splice(array, -3, 3, [6, 7]);\n\t\tassert.strictEqual(array.length, 4);\n\t\tassert.strictEqual(array[0], 1);\n\t\tassert.strictEqual(array[1], 2);\n\t\tassert.strictEqual(array[2], 6);\n\t\tassert.strictEqual(array[3], 7);\n\n\t\t// Start index less than the length\n\t\tarray = [1, 2, 3, 4, 5];\n\t\tarrays.splice(array, 3, 3, [6, 7]);\n\t\tassert.strictEqual(array.length, 5);\n\t\tassert.strictEqual(array[0], 1);\n\t\tassert.strictEqual(array[1], 2);\n\t\tassert.strictEqual(array[2], 3);\n\t\tassert.strictEqual(array[3], 6);\n\t\tassert.strictEqual(array[4], 7);\n\n\t\t// Start index greater than the length\n\t\tarray = [1, 2, 3, 4, 5];\n\t\tarrays.splice(array, 6, 3, [6, 7]);\n\t\tassert.strictEqual(array.length, 7);\n\t\tassert.strictEqual(array[0], 1);\n\t\tassert.strictEqual(array[1], 2);\n\t\tassert.strictEqual(array[2], 3);\n\t\tassert.strictEqual(array[3], 4);\n\t\tassert.strictEqual(array[4], 5);\n\t\tassert.strictEqual(array[5], 6);\n\t\tassert.strictEqual(array[6], 7);\n\t});\n\n\ttest('findMaxBy', () => {\n\t\tconst array = [{ v: 3 }, { v: 5 }, { v: 2 }, { v: 2 }, { v: 2 }, { v: 5 }];\n\n\t\tassert.strictEqual(\n\t\t\tarray.indexOf(arraysFind.findFirstMaxBy(array, arrays.compareBy(v => v.v, arrays.numberComparator))!),\n\t\t\t1\n\t\t);\n\t});\n\n\ttest('findLastMaxBy', () => {\n\t\tconst array = [{ v: 3 }, { v: 5 }, { v: 2 }, { v: 2 }, { v: 2 }, { v: 5 }];\n\n\t\tassert.strictEqual(\n\t\t\tarray.indexOf(arraysFind.findLastMaxBy(array, arrays.compareBy(v => v.v, arrays.numberComparator))!),\n\t\t\t5\n\t\t);\n\t});\n\n\ttest('findMinBy', () => {\n\t\tconst array = [{ v: 3 }, { v: 5 }, { v: 2 }, { v: 2 }, { v: 2 }, { v: 5 }];\n\n\t\tassert.strictEqual(\n\t\t\tarray.indexOf(arraysFind.findFirstMinBy(array, arrays.compareBy(v => v.v, arrays.numberComparator))!),\n\t\t\t2\n\t\t);\n\t});\n\n\tsuite('ArrayQueue', () => {\n\t\tsuite('takeWhile/takeFromEndWhile', () => {\n\t\t\ttest('TakeWhile 1', () => {\n\t\t\t\tconst queue1 = new arrays.ArrayQueue([9, 8, 1, 7, 6]);\n\t\t\t\tassert.deepStrictEqual(queue1.takeWhile(x => x > 5), [9, 8]);\n\t\t\t\tassert.deepStrictEqual(queue1.takeWhile(x => x < 7), [1]);\n\t\t\t\tassert.deepStrictEqual(queue1.takeWhile(x => true), [7, 6]);\n\t\t\t});\n\n\t\t\ttest('TakeFromEndWhile 1', () => {\n\t\t\t\tconst queue1 = new arrays.ArrayQueue([9, 8, 1, 7, 6]);\n\t\t\t\tassert.deepStrictEqual(queue1.takeFromEndWhile(x => x > 5), [7, 6]);\n\t\t\t\tassert.deepStrictEqual(queue1.takeFromEndWhile(x => x < 2), [1]);\n\t\t\t\tassert.deepStrictEqual(queue1.takeFromEndWhile(x => true), [9, 8]);\n\t\t\t});\n\t\t});\n\n\t\tsuite('takeWhile/takeFromEndWhile monotonous', () => {\n\t\t\tfunction testMonotonous(array: number[], predicate: (a: number) => boolean) {\n\t\t\t\tfunction normalize(arr: number[]): number[] | null {\n\t\t\t\t\tif (arr.length === 0) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn arr;\n\t\t\t\t}\n\n\t\t\t\tconst negatedPredicate = (a: number) => !predicate(a);\n\n\t\t\t\t{\n\t\t\t\t\tconst queue1 = new arrays.ArrayQueue(array);\n\t\t\t\t\tassert.deepStrictEqual(queue1.takeWhile(predicate), normalize(array.filter(predicate)));\n\t\t\t\t\tassert.deepStrictEqual(queue1.length, array.length - array.filter(predicate).length);\n\t\t\t\t\tassert.deepStrictEqual(queue1.takeWhile(() => true), normalize(array.filter(negatedPredicate)));\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tconst queue3 = new arrays.ArrayQueue(array);\n\t\t\t\t\tassert.deepStrictEqual(queue3.takeFromEndWhile(negatedPredicate), normalize(array.filter(negatedPredicate)));\n\t\t\t\t\tassert.deepStrictEqual(queue3.length, array.length - array.filter(negatedPredicate).length);\n\t\t\t\t\tassert.deepStrictEqual(queue3.takeFromEndWhile(() => true), normalize(array.filter(predicate)));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst array = [1, 1, 1, 2, 5, 5, 7, 8, 8];\n\n\t\t\ttest('TakeWhile 1', () => testMonotonous(array, value => value <= 1));\n\t\t\ttest('TakeWhile 2', () => testMonotonous(array, value => value < 5));\n\t\t\ttest('TakeWhile 3', () => testMonotonous(array, value => value <= 5));\n\t\t\ttest('TakeWhile 4', () => testMonotonous(array, value => true));\n\t\t\ttest('TakeWhile 5', () => testMonotonous(array, value => false));\n\n\t\t\tconst array2 = [1, 1, 1, 2, 5, 5, 7, 8, 8, 9, 9, 9, 9, 10, 10];\n\n\t\t\ttest('TakeWhile 6', () => testMonotonous(array2, value => value < 10));\n\t\t\ttest('TakeWhile 7', () => testMonotonous(array2, value => value < 7));\n\t\t\ttest('TakeWhile 8', () => testMonotonous(array2, value => value < 5));\n\n\t\t\ttest('TakeWhile Empty', () => testMonotonous([], value => value <= 5));\n\t\t});\n\t});\n});\n"]}