{"version":3,"sources":["file:///workspace/appflow/src/vs/base/test/common/keyCodes.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAOhG,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE;QAEtB,SAAS,kBAAkB,CAAC,QAA2B,EAAE,CAAS,EAAE,EAAmB;YACtF,MAAM,CAAC,eAAe,CAAC,IAAA,iBAAG,EAAc,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;QAC3D,CAAC;QAED,IAAI,CAAC,mBAAmB,EAAE,GAAG,EAAE;YAC9B,uGAAuG;YACvG,MAAM,CAAC,WAAW,CAAC,cAAG,CAAgB,GAAG,CAAC,yBAAgB,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,cAAG,CAAiC,cAAc,CAAC,yBAAgB,CAAC;YACvF,MAAM,CAAC,WAAW,CAAC,cAAG,CAAW,eAAe,CAAC,OAAO,CAAC,0BAAiB,CAAC;YAC3E,MAAM,CAAC,WAAW,CAAC,cAAG,CAAW,MAAM,CAAC,OAAO,CAAC,0BAAiB,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,cAAG,CAAW,QAAQ,yBAAgB,EAAE,OAAO,CAAC,CAAC;YACpE,MAAM,CAAC,WAAW,CAAC,cAAG,yBAAuC,qCAA4B,CAAC;YAC1F,MAAM,CAAC,WAAW,CAAC,cAAG,wBAAsC,sCAA6B,CAAC;YAC1F,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,QAAQ,wBAAe,EAAE,GAAG,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,UAAU,CAAC,GAAG,CAAC,yBAAgB,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,gBAAgB,wBAAe,EAAE,GAAG,CAAC,CAAC;YACtE,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,qBAAqB,wBAAe,EAAE,WAAW,CAAC,CAAC;YACnF,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,gBAAgB,CAAC,GAAG,CAAC,yBAAgB,CAAC;YACtE,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,gBAAgB,CAAC,WAAW,CAAC,yBAAgB,CAAC;YAC9E,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,gBAAgB,CAAC,WAAW,CAAC,yBAAgB,CAAC;QAC/E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,EAAE,GAAG,EAAE;YAC9B,8FAA8F;YAC9F,MAAM,CAAC,WAAW,CAAC,cAAG,CAAgB,EAAE,CAAC,yBAAgB,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,cAAG,CAAiC,UAAU,CAAC,yBAAgB,CAAC;YACnF,MAAM,CAAC,WAAW,CAAC,cAAG,CAAW,eAAe,CAAC,OAAO,CAAC,0BAAiB,CAAC;YAC3E,MAAM,CAAC,WAAW,CAAC,cAAG,CAAW,MAAM,CAAC,OAAO,CAAC,0BAAiB,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,cAAG,CAAW,QAAQ,yBAAgB,EAAE,OAAO,CAAC,CAAC;YACpE,MAAM,CAAC,WAAW,CAAC,cAAG,yBAAuC,yBAAgB,CAAC;YAC9E,MAAM,CAAC,WAAW,CAAC,cAAG,wBAAsC,0BAAiB,CAAC;YAC9E,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,QAAQ,wBAAe,EAAE,OAAO,CAAC,CAAC;YAClE,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,UAAU,CAAC,OAAO,CAAC,yBAAgB,CAAC;YACpE,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,gBAAgB,wBAAe,EAAE,OAAO,CAAC,CAAC;YAC1E,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,qBAAqB,wBAAe,EAAE,OAAO,CAAC,CAAC;YAC/E,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,gBAAgB,CAAC,OAAO,CAAC,yBAAgB,CAAC;YAC1E,MAAM,CAAC,WAAW,CAAC,uBAAY,CAAC,gBAAgB,CAAC,OAAO,CAAC,yBAAgB,CAAC;QAC3E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE;YAEhC,SAAS,IAAI,CAAC,QAA2B,EAAE,CAAS;gBACnD,kBAAkB,CAAC,QAAQ,EAAE,CAAC,oCAA4B,CAAC;YAC5D,CAAC;YAED,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,wBAAgB,CAAC;YAChG,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,gDAA8B,CAAC,CAAC;YAChH,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,4CAA0B,CAAC,CAAC;YAC5G,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,+CAA2B,wBAAgB,CAAC,CAAC;YAC5H,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,+CAA4B,CAAC,CAAC;YAC9G,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,kDAA6B,wBAAgB,CAAC,CAAC;YAC9H,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,8CAAyB,wBAAgB,CAAC,CAAC;YAC1H,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,8CAAyB,2BAAiB,wBAAgB,CAAC,CAAC;YAC1I,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,iDAA8B,CAAC,CAAC;YAChH,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,oDAA+B,wBAAgB,CAAC,CAAC;YAChI,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,gDAA2B,wBAAgB,CAAC,CAAC;YAC5H,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,gDAA2B,2BAAiB,wBAAgB,CAAC,CAAC;YAC5I,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,mDAA6B,wBAAgB,CAAC,CAAC;YAC9H,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,mDAA6B,2BAAiB,wBAAgB,CAAC,CAAC;YAC9I,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,mDAA6B,uBAAa,wBAAgB,CAAC,CAAC;YAC1I,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,mDAA6B,uBAAa,2BAAiB,wBAAgB,CAAC,CAAC;YAE1J,IAAI,CACH,IAAI,iBAAG,CAAQ;gBACd,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,wBAAgB;gBAC3D,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,sBAAc;aACzD,CAAC,EACF,IAAA,cAAG,6CAAiC,CACpC,CAAC;YACF,IAAI,CACH,IAAI,iBAAG,CAAQ;gBACd,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,wBAAe;gBACzD,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,wBAAe;aAC1D,CAAC,EACF,IAAA,cAAG,EAAM,iDAA6B,wBAAe,CACrD,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;YAE5C,gEAAgD,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;gBAE/D,SAAS,IAAI,CAAC,QAA2B,EAAE,CAAS;oBACnD,kBAAkB,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACrC,CAAC;gBAED,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,wBAAgB,CAAC;gBAChG,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,gDAA8B,CAAC,CAAC;gBAChH,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,4CAA0B,CAAC,CAAC;gBAC5G,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,+CAA2B,wBAAgB,CAAC,CAAC;gBAC5H,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,+CAA4B,CAAC,CAAC;gBAC9G,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,kDAA6B,wBAAgB,CAAC,CAAC;gBAC9H,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,8CAAyB,wBAAgB,CAAC,CAAC;gBAC1H,IAAI,CAAC,IAAI,iBAAG,CAAU,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,8CAAyB,2BAAiB,wBAAgB,CAAC,CAAC;gBAC1I,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,iDAA8B,CAAC,CAAC;gBAChH,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,oDAA+B,wBAAgB,CAAC,CAAC;gBAChI,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,gDAA2B,wBAAgB,CAAC,CAAC;gBAC5H,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,gDAA2B,2BAAiB,wBAAgB,CAAC,CAAC;gBAC5I,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,mDAA6B,wBAAgB,CAAC,CAAC;gBAC9H,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,mDAA6B,2BAAiB,wBAAgB,CAAC,CAAC;gBAC9I,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,wBAAgB,CAAC,YAAY,EAAE,EAAE,mDAA6B,uBAAa,wBAAgB,CAAC,CAAC;gBAC1I,IAAI,CAAC,IAAI,iBAAG,CAAU,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,wBAAgB,CAAC,YAAY,EAAE,EAAE,mDAA6B,uBAAa,2BAAiB,wBAAgB,CAAC,CAAC;gBAE1J,IAAI,CACH,IAAI,iBAAG,CAAQ;oBACd,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,wBAAgB;oBAC3D,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,sBAAc;iBACzD,CAAC,EACF,IAAA,cAAG,6CAAiC,CACpC,CAAC;gBACF,IAAI,CACH,IAAI,iBAAG,CAAQ;oBACd,IAAI,iBAAG,CAAU,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,wBAAe;oBACzD,IAAI,iBAAG,CAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,wBAAe;iBAC1D,CAAC,EACF,IAAA,cAAG,EAAM,iDAA6B,wBAAe,CACrD,CAAC;YAEH,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","file":"keyCodes.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { EVENT_KEY_CODE_MAP, IMMUTABLE_CODE_TO_KEY_CODE, IMMUTABLE_KEY_CODE_TO_CODE, KeyChord, KeyCode, KeyCodeUtils, KeyMod, NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE, ScanCode, ScanCodeUtils } from 'vs/base/common/keyCodes';\nimport { decodeKeybinding, KeyCodeChord, Keybinding } from 'vs/base/common/keybindings';\nimport { OperatingSystem } from 'vs/base/common/platform';\n\nsuite('keyCodes', () => {\n\n\tfunction testBinaryEncoding(expected: Keybinding | null, k: number, OS: OperatingSystem): void {\n\t\tassert.deepStrictEqual(decodeKeybinding(k, OS), expected);\n\t}\n\n\ttest('mapping for Minus', () => {\n\t\t// [147, 83, 0, ScanCode.Minus, 'Minus', KeyCode.US_MINUS, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n\t\tassert.strictEqual(EVENT_KEY_CODE_MAP[189], KeyCode.Minus);\n\t\tassert.strictEqual(NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE['VK_OEM_MINUS'], KeyCode.Minus);\n\t\tassert.strictEqual(ScanCodeUtils.lowerCaseToEnum('minus'), ScanCode.Minus);\n\t\tassert.strictEqual(ScanCodeUtils.toEnum('Minus'), ScanCode.Minus);\n\t\tassert.strictEqual(ScanCodeUtils.toString(ScanCode.Minus), 'Minus');\n\t\tassert.strictEqual(IMMUTABLE_CODE_TO_KEY_CODE[ScanCode.Minus], KeyCode.DependsOnKbLayout);\n\t\tassert.strictEqual(IMMUTABLE_KEY_CODE_TO_CODE[KeyCode.Minus], ScanCode.DependsOnKbLayout);\n\t\tassert.strictEqual(KeyCodeUtils.toString(KeyCode.Minus), '-');\n\t\tassert.strictEqual(KeyCodeUtils.fromString('-'), KeyCode.Minus);\n\t\tassert.strictEqual(KeyCodeUtils.toUserSettingsUS(KeyCode.Minus), '-');\n\t\tassert.strictEqual(KeyCodeUtils.toUserSettingsGeneral(KeyCode.Minus), 'OEM_MINUS');\n\t\tassert.strictEqual(KeyCodeUtils.fromUserSettings('-'), KeyCode.Minus);\n\t\tassert.strictEqual(KeyCodeUtils.fromUserSettings('OEM_MINUS'), KeyCode.Minus);\n\t\tassert.strictEqual(KeyCodeUtils.fromUserSettings('oem_minus'), KeyCode.Minus);\n\t});\n\n\ttest('mapping for Space', () => {\n\t\t// [21, 10, 1, ScanCode.Space, 'Space', KeyCode.Space, 'Space', 32, 'VK_SPACE', empty, empty],\n\t\tassert.strictEqual(EVENT_KEY_CODE_MAP[32], KeyCode.Space);\n\t\tassert.strictEqual(NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE['VK_SPACE'], KeyCode.Space);\n\t\tassert.strictEqual(ScanCodeUtils.lowerCaseToEnum('space'), ScanCode.Space);\n\t\tassert.strictEqual(ScanCodeUtils.toEnum('Space'), ScanCode.Space);\n\t\tassert.strictEqual(ScanCodeUtils.toString(ScanCode.Space), 'Space');\n\t\tassert.strictEqual(IMMUTABLE_CODE_TO_KEY_CODE[ScanCode.Space], KeyCode.Space);\n\t\tassert.strictEqual(IMMUTABLE_KEY_CODE_TO_CODE[KeyCode.Space], ScanCode.Space);\n\t\tassert.strictEqual(KeyCodeUtils.toString(KeyCode.Space), 'Space');\n\t\tassert.strictEqual(KeyCodeUtils.fromString('Space'), KeyCode.Space);\n\t\tassert.strictEqual(KeyCodeUtils.toUserSettingsUS(KeyCode.Space), 'Space');\n\t\tassert.strictEqual(KeyCodeUtils.toUserSettingsGeneral(KeyCode.Space), 'Space');\n\t\tassert.strictEqual(KeyCodeUtils.fromUserSettings('Space'), KeyCode.Space);\n\t\tassert.strictEqual(KeyCodeUtils.fromUserSettings('space'), KeyCode.Space);\n\t});\n\n\ttest('MAC binary encoding', () => {\n\n\t\tfunction test(expected: Keybinding | null, k: number): void {\n\t\t\ttestBinaryEncoding(expected, k, OperatingSystem.Macintosh);\n\t\t}\n\n\t\ttest(null, 0);\n\t\ttest(new KeyCodeChord(false, false, false, false, KeyCode.Enter).toKeybinding(), KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, false, false, false, KeyCode.Enter).toKeybinding(), KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, false, true, false, KeyCode.Enter).toKeybinding(), KeyMod.Alt | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, false, true, false, KeyCode.Enter).toKeybinding(), KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, true, false, false, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, true, false, false, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, true, true, false, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyMod.Alt | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, true, true, false, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, false, false, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, false, false, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, false, true, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, false, true, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, true, false, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, true, false, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, true, true, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, true, true, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\n\t\ttest(\n\t\t\tnew Keybinding([\n\t\t\t\tnew KeyCodeChord(false, false, false, false, KeyCode.Enter),\n\t\t\t\tnew KeyCodeChord(false, false, false, false, KeyCode.Tab)\n\t\t\t]),\n\t\t\tKeyChord(KeyCode.Enter, KeyCode.Tab)\n\t\t);\n\t\ttest(\n\t\t\tnew Keybinding([\n\t\t\t\tnew KeyCodeChord(false, false, false, true, KeyCode.KeyY),\n\t\t\t\tnew KeyCodeChord(false, false, false, false, KeyCode.KeyZ)\n\t\t\t]),\n\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyY, KeyCode.KeyZ)\n\t\t);\n\t});\n\n\ttest('WINDOWS & LINUX binary encoding', () => {\n\n\t\t[OperatingSystem.Linux, OperatingSystem.Windows].forEach((OS) => {\n\n\t\t\tfunction test(expected: Keybinding | null, k: number): void {\n\t\t\t\ttestBinaryEncoding(expected, k, OS);\n\t\t\t}\n\n\t\t\ttest(null, 0);\n\t\t\ttest(new KeyCodeChord(false, false, false, false, KeyCode.Enter).toKeybinding(), KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, false, false, true, KeyCode.Enter).toKeybinding(), KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, false, true, false, KeyCode.Enter).toKeybinding(), KeyMod.Alt | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, false, true, true, KeyCode.Enter).toKeybinding(), KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, true, false, false, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, true, false, true, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, true, true, false, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyMod.Alt | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, true, true, true, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, false, false, false, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, false, false, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, false, true, false, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, false, true, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, true, false, false, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, true, false, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, true, true, false, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, true, true, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\n\t\t\ttest(\n\t\t\t\tnew Keybinding([\n\t\t\t\t\tnew KeyCodeChord(false, false, false, false, KeyCode.Enter),\n\t\t\t\t\tnew KeyCodeChord(false, false, false, false, KeyCode.Tab)\n\t\t\t\t]),\n\t\t\t\tKeyChord(KeyCode.Enter, KeyCode.Tab)\n\t\t\t);\n\t\t\ttest(\n\t\t\t\tnew Keybinding([\n\t\t\t\t\tnew KeyCodeChord(true, false, false, false, KeyCode.KeyY),\n\t\t\t\t\tnew KeyCodeChord(false, false, false, false, KeyCode.KeyZ)\n\t\t\t\t]),\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyY, KeyCode.KeyZ)\n\t\t\t);\n\n\t\t});\n\t});\n});\n"]}