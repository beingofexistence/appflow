{"version":3,"sources":["file:///workspace/appflow/src/vs/base/test/common/arraysFind.test.ts"],"names":[],"mappings":"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","file":"arraysFind.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { MonotonousArray, findFirstMonotonous, findLastMonotonous } from 'vs/base/common/arraysFind';\n\nsuite('Arrays', () => {\n\ttest('findLastMonotonous', () => {\n\t\tconst array = [1, 4, 5, 7, 55, 59, 60, 61, 64, 69];\n\n\t\tconst result = findLastMonotonous(array, n => n <= 60);\n\t\tassert.strictEqual(result, 60);\n\n\t\tconst result2 = findLastMonotonous(array, n => n <= 62);\n\t\tassert.strictEqual(result2, 61);\n\n\t\tconst result3 = findLastMonotonous(array, n => n <= 1);\n\t\tassert.strictEqual(result3, 1);\n\n\t\tconst result4 = findLastMonotonous(array, n => n <= 70);\n\t\tassert.strictEqual(result4, 69);\n\n\t\tconst result5 = findLastMonotonous(array, n => n <= 0);\n\t\tassert.strictEqual(result5, undefined);\n\t});\n\n\ttest('findFirstMonotonous', () => {\n\t\tconst array = [1, 4, 5, 7, 55, 59, 60, 61, 64, 69];\n\n\t\tconst result = findFirstMonotonous(array, n => n >= 60);\n\t\tassert.strictEqual(result, 60);\n\n\t\tconst result2 = findFirstMonotonous(array, n => n >= 62);\n\t\tassert.strictEqual(result2, 64);\n\n\t\tconst result3 = findFirstMonotonous(array, n => n >= 1);\n\t\tassert.strictEqual(result3, 1);\n\n\t\tconst result4 = findFirstMonotonous(array, n => n >= 70);\n\t\tassert.strictEqual(result4, undefined);\n\n\t\tconst result5 = findFirstMonotonous(array, n => n >= 0);\n\t\tassert.strictEqual(result5, 1);\n\t});\n\n\ttest('MonotonousArray', () => {\n\t\tconst arr = new MonotonousArray([1, 4, 5, 7, 55, 59, 60, 61, 64, 69]);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 0), undefined);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 0), undefined);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 5), 5);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 6), 5);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 55), 55);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 60), 60);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 80), 69);\n\t});\n});\n"]}