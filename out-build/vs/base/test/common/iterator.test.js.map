{"version":3,"sources":["file:///workspace/appflow/src/vs/base/test/common/iterator.test.ts","vs/base/test/common/iterator.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAKhG,KAAK,CAAC,UAAU,EAAE;QAEjB,MAAM,cAAc,GAAG,IAAI;YAE1B,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACjB,MAAM,KAAK,CAAC;gBACZ,MAAM,KAAK,CAAC;gBACZ,MAAM,OAAO,CAAC;YACf,CAAC;SACD,CAAC;QAEF,IAAI,CAAC,OAAO,EAAE;YAEb,MAAM,CAAC,WAAW,CAAC,mBAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,mBAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,WAAW,CAAC,mBAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,KAAK,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,mBAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,QAAQ;QACpE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,EAAE;YACZ,MAAM,CAAC,eAAe,CAAC,CAAC,GAAG,mBAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,eAAe,CAAC,CAAC,GAAG,mBAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","file":"iterator.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Iterable } from 'vs/base/common/iterator';\n\nsuite('Iterable', function () {\n\n\tconst customIterable = new class {\n\n\t\t*[Symbol.iterator]() {\n\t\t\tyield 'one';\n\t\t\tyield 'two';\n\t\t\tyield 'three';\n\t\t}\n\t};\n\n\ttest('first', function () {\n\n\t\tassert.strictEqual(Iterable.first([]), undefined);\n\t\tassert.strictEqual(Iterable.first([1]), 1);\n\t\tassert.strictEqual(Iterable.first(customIterable), 'one');\n\t\tassert.strictEqual(Iterable.first(customIterable), 'one'); // fresh\n\t});\n\n\ttest('wrap', function () {\n\t\tassert.deepStrictEqual([...Iterable.wrap(1)], [1]);\n\t\tassert.deepStrictEqual([...Iterable.wrap([1, 2, 3])], [1, 2, 3]);\n\t});\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Iterable } from 'vs/base/common/iterator';\n\nsuite('Iterable', function () {\n\n\tconst customIterable = new class {\n\n\t\t*[Symbol.iterator]() {\n\t\t\tyield 'one';\n\t\t\tyield 'two';\n\t\t\tyield 'three';\n\t\t}\n\t};\n\n\ttest('first', function () {\n\n\t\tassert.strictEqual(Iterable.first([]), undefined);\n\t\tassert.strictEqual(Iterable.first([1]), 1);\n\t\tassert.strictEqual(Iterable.first(customIterable), 'one');\n\t\tassert.strictEqual(Iterable.first(customIterable), 'one'); // fresh\n\t});\n\n\ttest('wrap', function () {\n\t\tassert.deepStrictEqual([...Iterable.wrap(1)], [1]);\n\t\tassert.deepStrictEqual([...Iterable.wrap([1, 2, 3])], [1, 2, 3]);\n\t});\n});\n"]}