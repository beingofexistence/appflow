{"version":3,"sources":["file:///workspace/appflow/src/vs/base/test/common/utils.ts"],"names":[],"mappings":"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","file":"utils.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, DisposableTracker, IDisposable, setDisposableTracker } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\n\nexport type ValueCallback<T = any> = (value: T | Promise<T>) => void;\n\nexport function toResource(this: any, path: string): URI {\n\tif (isWindows) {\n\t\treturn URI.file(join('C:\\\\', btoa(this.test.fullTitle()), path));\n\t}\n\n\treturn URI.file(join('/', btoa(this.test.fullTitle()), path));\n}\n\nexport function suiteRepeat(n: number, description: string, callback: (this: any) => void): void {\n\tfor (let i = 0; i < n; i++) {\n\t\tsuite(`${description} (iteration ${i})`, callback);\n\t}\n}\n\nexport function testRepeat(n: number, description: string, callback: (this: any) => any): void {\n\tfor (let i = 0; i < n; i++) {\n\t\ttest(`${description} (iteration ${i})`, callback);\n\t}\n}\n\nexport async function assertThrowsAsync(block: () => any, message: string | Error = 'Missing expected exception'): Promise<void> {\n\ttry {\n\t\tawait block();\n\t} catch {\n\t\treturn;\n\t}\n\n\tconst err = message instanceof Error ? message : new Error(message);\n\tthrow err;\n}\n\n/**\n * Use this function to ensure that all disposables are cleaned up at the end of each test in the current suite.\n *\n * Use `markAsSingleton` if disposable singletons are created lazily that are allowed to outlive the test.\n * Make sure that the singleton properly registers all child disposables so that they are excluded too.\n *\n * @returns A {@link DisposableStore} that can optionally be used to track disposables in the test.\n * This will be automatically disposed on test teardown.\n*/\nexport function ensureNoDisposablesAreLeakedInTestSuite(): Pick<DisposableStore, 'add'> {\n\tlet tracker: DisposableTracker | undefined;\n\tlet store: DisposableStore;\n\tsetup(() => {\n\t\tstore = new DisposableStore();\n\t\ttracker = new DisposableTracker();\n\t\tsetDisposableTracker(tracker);\n\t});\n\n\tteardown(function (this: import('mocha').Context) {\n\t\tstore.dispose();\n\t\tsetDisposableTracker(null);\n\t\tif (this.currentTest?.state !== 'failed') {\n\t\t\tconst result = tracker!.computeLeakingDisposables();\n\t\t\tif (result) {\n\t\t\t\tconsole.error(result.details);\n\t\t\t\tthrow new Error(`There are ${result.leaks.length} undisposed disposables!${result.details}`);\n\t\t\t}\n\t\t}\n\t});\n\n\t// Wrap store as the suite function is called before it's initialized\n\tconst testContext = {\n\t\tadd<T extends IDisposable>(o: T): T {\n\t\t\treturn store.add(o);\n\t\t}\n\t};\n\treturn testContext;\n}\n\nexport function throwIfDisposablesAreLeaked(body: () => void, logToConsole = true): void {\n\tconst tracker = new DisposableTracker();\n\tsetDisposableTracker(tracker);\n\tbody();\n\tsetDisposableTracker(null);\n\tcomputeLeakingDisposables(tracker, logToConsole);\n}\n\nexport async function throwIfDisposablesAreLeakedAsync(body: () => Promise<void>): Promise<void> {\n\tconst tracker = new DisposableTracker();\n\tsetDisposableTracker(tracker);\n\tawait body();\n\tsetDisposableTracker(null);\n\tcomputeLeakingDisposables(tracker);\n}\n\nfunction computeLeakingDisposables(tracker: DisposableTracker, logToConsole = true) {\n\tconst result = tracker.computeLeakingDisposables();\n\tif (result) {\n\t\tif (logToConsole) {\n\t\t\tconsole.error(result.details);\n\t\t}\n\t\tthrow new Error(`There are ${result.leaks.length} undisposed disposables!${result.details}`);\n\t}\n}\n"]}