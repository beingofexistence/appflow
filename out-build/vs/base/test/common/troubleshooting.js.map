{"version":3,"sources":["file:///workspace/appflow/src/vs/base/test/common/troubleshooting.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAIhG,MAAM,iBAAiB;QAAvB;YACC,mBAAc,GAA4B,EAAE,CAAC;QAuB9C,CAAC;QAtBA,eAAe,CAAC,CAAc;YAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,EAAE,CAAC,KAAM,CAAC,CAAC,CAAC;QACnD,CAAC;QACD,SAAS,CAAC,KAAkB,EAAE,MAAmB;YAChD,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC1D,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;oBAC1C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;oBACnC,OAAO;iBACP;aACD;QACF,CAAC;QACD,cAAc,CAAC,CAAc;YAC5B,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC1D,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;oBACtC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;oBACnC,OAAO;iBACP;aACD;QACF,CAAC;QACD,eAAe,CAAC,UAAuB;YACtC,OAAO;QACR,CAAC;KACD;IAED,IAAI,cAAc,GAA6B,IAAI,CAAC;IAEpD,SAAgB,GAAG;QAClB,cAAc,GAAG,IAAI,iBAAiB,EAAE,CAAC;QACzC,IAAA,eAAG,EAAkB,cAAc,CAAC,CAAC;IACtC,CAAC;IAHD,kBAGC;IAED,SAAgB,GAAG;QAClB,IAAI,cAAc,EAAE;YACnB,IAAA,eAAG,EAAkB,IAAI,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,cAAe,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACtF,cAAc,GAAG,IAAI,CAAC;SACtB;IACF,CAAC;IAND,kBAMC;IAED,SAAgB,GAAG,CAAY,aAAsB,KAAK;QACnD,IAAK,CAAC,cAAc,EAAE,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IAFD,kBAEC;IAED,SAAgB,GAAG;QACZ,IAAK,CAAC,YAAY,EAAE,EAAE,CAAC;IAC9B,CAAC;IAFD,kBAEC","file":"troubleshooting.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable, IDisposableTracker, setDisposableTracker } from 'vs/base/common/lifecycle';\n\nclass DisposableTracker implements IDisposableTracker {\n\tallDisposables: [IDisposable, string][] = [];\n\ttrackDisposable(x: IDisposable): void {\n\t\tthis.allDisposables.push([x, new Error().stack!]);\n\t}\n\tsetParent(child: IDisposable, parent: IDisposable): void {\n\t\tfor (let idx = 0; idx < this.allDisposables.length; idx++) {\n\t\t\tif (this.allDisposables[idx][0] === child) {\n\t\t\t\tthis.allDisposables.splice(idx, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\tmarkAsDisposed(x: IDisposable): void {\n\t\tfor (let idx = 0; idx < this.allDisposables.length; idx++) {\n\t\t\tif (this.allDisposables[idx][0] === x) {\n\t\t\t\tthis.allDisposables.splice(idx, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\tmarkAsSingleton(disposable: IDisposable): void {\n\t\t// noop\n\t}\n}\n\nlet currentTracker: DisposableTracker | null = null;\n\nexport function beginTrackingDisposables(): void {\n\tcurrentTracker = new DisposableTracker();\n\tsetDisposableTracker(currentTracker);\n}\n\nexport function endTrackingDisposables(): void {\n\tif (currentTracker) {\n\t\tsetDisposableTracker(null);\n\t\tconsole.log(currentTracker!.allDisposables.map(e => `${e[0]}\\n${e[1]}`).join('\\n\\n'));\n\t\tcurrentTracker = null;\n\t}\n}\n\nexport function beginLoggingFS(withStacks: boolean = false): void {\n\t(<any>self).beginLoggingFS?.(withStacks);\n}\n\nexport function endLoggingFS(): void {\n\t(<any>self).endLoggingFS?.();\n}\n"]}