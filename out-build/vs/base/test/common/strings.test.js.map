{"version":3,"sources":["file:///workspace/appflow/src/vs/base/test/common/strings.test.ts"],"names":[],"mappings":"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","file":"strings.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport * as strings from 'vs/base/common/strings';\n\nsuite('Strings', () => {\n\ttest('equalsIgnoreCase', () => {\n\t\tassert(strings.equalsIgnoreCase('', ''));\n\t\tassert(!strings.equalsIgnoreCase('', '1'));\n\t\tassert(!strings.equalsIgnoreCase('1', ''));\n\n\t\tassert(strings.equalsIgnoreCase('a', 'a'));\n\t\tassert(strings.equalsIgnoreCase('abc', 'Abc'));\n\t\tassert(strings.equalsIgnoreCase('abc', 'ABC'));\n\t\tassert(strings.equalsIgnoreCase('Höhenmeter', 'HÖhenmeter'));\n\t\tassert(strings.equalsIgnoreCase('ÖL', 'Öl'));\n\t});\n\n\ttest('beginsWithIgnoreCase', () => {\n\t\tassert(strings.startsWithIgnoreCase('', ''));\n\t\tassert(!strings.startsWithIgnoreCase('', '1'));\n\t\tassert(strings.startsWithIgnoreCase('1', ''));\n\n\t\tassert(strings.startsWithIgnoreCase('a', 'a'));\n\t\tassert(strings.startsWithIgnoreCase('abc', 'Abc'));\n\t\tassert(strings.startsWithIgnoreCase('abc', 'ABC'));\n\t\tassert(strings.startsWithIgnoreCase('Höhenmeter', 'HÖhenmeter'));\n\t\tassert(strings.startsWithIgnoreCase('ÖL', 'Öl'));\n\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'a'));\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'A'));\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'alles k'));\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'alles K'));\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'ALLES K'));\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'alles klar'));\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'ALLES KLAR'));\n\n\t\tassert(!strings.startsWithIgnoreCase('alles klar', ' ALLES K'));\n\t\tassert(!strings.startsWithIgnoreCase('alles klar', 'ALLES K '));\n\t\tassert(!strings.startsWithIgnoreCase('alles klar', 'öALLES K '));\n\t\tassert(!strings.startsWithIgnoreCase('alles klar', ' '));\n\t\tassert(!strings.startsWithIgnoreCase('alles klar', 'ö'));\n\t});\n\n\ttest('compareIgnoreCase', () => {\n\n\t\tfunction assertCompareIgnoreCase(a: string, b: string, recurse = true): void {\n\t\t\tlet actual = strings.compareIgnoreCase(a, b);\n\t\t\tactual = actual > 0 ? 1 : actual < 0 ? -1 : actual;\n\n\t\t\tlet expected = strings.compare(a.toLowerCase(), b.toLowerCase());\n\t\t\texpected = expected > 0 ? 1 : expected < 0 ? -1 : expected;\n\t\t\tassert.strictEqual(actual, expected, `${a} <> ${b}`);\n\n\t\t\tif (recurse) {\n\t\t\t\tassertCompareIgnoreCase(b, a, false);\n\t\t\t}\n\t\t}\n\n\t\tassertCompareIgnoreCase('', '');\n\t\tassertCompareIgnoreCase('abc', 'ABC');\n\t\tassertCompareIgnoreCase('abc', 'ABc');\n\t\tassertCompareIgnoreCase('abc', 'ABcd');\n\t\tassertCompareIgnoreCase('abc', 'abcd');\n\t\tassertCompareIgnoreCase('foo', 'föo');\n\t\tassertCompareIgnoreCase('Code', 'code');\n\t\tassertCompareIgnoreCase('Code', 'cöde');\n\n\t\tassertCompareIgnoreCase('B', 'a');\n\t\tassertCompareIgnoreCase('a', 'B');\n\t\tassertCompareIgnoreCase('b', 'a');\n\t\tassertCompareIgnoreCase('a', 'b');\n\n\t\tassertCompareIgnoreCase('aa', 'ab');\n\t\tassertCompareIgnoreCase('aa', 'aB');\n\t\tassertCompareIgnoreCase('aa', 'aA');\n\t\tassertCompareIgnoreCase('a', 'aa');\n\t\tassertCompareIgnoreCase('ab', 'aA');\n\t\tassertCompareIgnoreCase('O', '/');\n\t});\n\n\ttest('compareIgnoreCase (substring)', () => {\n\n\t\tfunction assertCompareIgnoreCase(a: string, b: string, aStart: number, aEnd: number, bStart: number, bEnd: number, recurse = true): void {\n\t\t\tlet actual = strings.compareSubstringIgnoreCase(a, b, aStart, aEnd, bStart, bEnd);\n\t\t\tactual = actual > 0 ? 1 : actual < 0 ? -1 : actual;\n\n\t\t\tlet expected = strings.compare(a.toLowerCase().substring(aStart, aEnd), b.toLowerCase().substring(bStart, bEnd));\n\t\t\texpected = expected > 0 ? 1 : expected < 0 ? -1 : expected;\n\t\t\tassert.strictEqual(actual, expected, `${a} <> ${b}`);\n\n\t\t\tif (recurse) {\n\t\t\t\tassertCompareIgnoreCase(b, a, bStart, bEnd, aStart, aEnd, false);\n\t\t\t}\n\t\t}\n\n\t\tassertCompareIgnoreCase('', '', 0, 0, 0, 0);\n\t\tassertCompareIgnoreCase('abc', 'ABC', 0, 1, 0, 1);\n\t\tassertCompareIgnoreCase('abc', 'Aabc', 0, 3, 1, 4);\n\t\tassertCompareIgnoreCase('abcABc', 'ABcd', 3, 6, 0, 4);\n\t});\n\n\ttest('format', () => {\n\t\tassert.strictEqual(strings.format('Foo Bar'), 'Foo Bar');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar'), 'Foo {0} Bar');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar', 'yes'), 'Foo yes Bar');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar {0}', 'yes'), 'Foo yes Bar yes');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar {1}{2}', 'yes'), 'Foo yes Bar {1}{2}');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar {1}{2}', 'yes', undefined), 'Foo yes Bar undefined{2}');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar {1}{2}', 'yes', 5, false), 'Foo yes Bar 5false');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar. {1}', '(foo)', '.test'), 'Foo (foo) Bar. .test');\n\t});\n\n\ttest('format2', () => {\n\t\tassert.strictEqual(strings.format2('Foo Bar', {}), 'Foo Bar');\n\t\tassert.strictEqual(strings.format2('Foo {oops} Bar', {}), 'Foo {oops} Bar');\n\t\tassert.strictEqual(strings.format2('Foo {foo} Bar', { foo: 'bar' }), 'Foo bar Bar');\n\t\tassert.strictEqual(strings.format2('Foo {foo} Bar {foo}', { foo: 'bar' }), 'Foo bar Bar bar');\n\t\tassert.strictEqual(strings.format2('Foo {foo} Bar {bar}{boo}', { foo: 'bar' }), 'Foo bar Bar {bar}{boo}');\n\t\tassert.strictEqual(strings.format2('Foo {foo} Bar {bar}{boo}', { foo: 'bar', bar: 'undefined' }), 'Foo bar Bar undefined{boo}');\n\t\tassert.strictEqual(strings.format2('Foo {foo} Bar {bar}{boo}', { foo: 'bar', bar: '5', boo: false }), 'Foo bar Bar 5false');\n\t\tassert.strictEqual(strings.format2('Foo {foo} Bar. {bar}', { foo: '(foo)', bar: '.test' }), 'Foo (foo) Bar. .test');\n\t});\n\n\ttest('lcut', () => {\n\t\tassert.strictEqual(strings.lcut('foo bar', 0), '');\n\t\tassert.strictEqual(strings.lcut('foo bar', 1), 'bar');\n\t\tassert.strictEqual(strings.lcut('foo bar', 3), 'bar');\n\t\tassert.strictEqual(strings.lcut('foo bar', 4), 'bar'); // Leading whitespace trimmed\n\t\tassert.strictEqual(strings.lcut('foo bar', 5), 'foo bar');\n\t\tassert.strictEqual(strings.lcut('test string 0.1.2.3', 3), '2.3');\n\n\t\tassert.strictEqual(strings.lcut('', 10), '');\n\t\tassert.strictEqual(strings.lcut('a', 10), 'a');\n\t});\n\n\ttest('escape', () => {\n\t\tassert.strictEqual(strings.escape(''), '');\n\t\tassert.strictEqual(strings.escape('foo'), 'foo');\n\t\tassert.strictEqual(strings.escape('foo bar'), 'foo bar');\n\t\tassert.strictEqual(strings.escape('<foo bar>'), '&lt;foo bar&gt;');\n\t\tassert.strictEqual(strings.escape('<foo>Hello</foo>'), '&lt;foo&gt;Hello&lt;/foo&gt;');\n\t});\n\n\ttest('ltrim', () => {\n\t\tassert.strictEqual(strings.ltrim('foo', 'f'), 'oo');\n\t\tassert.strictEqual(strings.ltrim('foo', 'o'), 'foo');\n\t\tassert.strictEqual(strings.ltrim('http://www.test.de', 'http://'), 'www.test.de');\n\t\tassert.strictEqual(strings.ltrim('/foo/', '/'), 'foo/');\n\t\tassert.strictEqual(strings.ltrim('//foo/', '/'), 'foo/');\n\t\tassert.strictEqual(strings.ltrim('/', ''), '/');\n\t\tassert.strictEqual(strings.ltrim('/', '/'), '');\n\t\tassert.strictEqual(strings.ltrim('///', '/'), '');\n\t\tassert.strictEqual(strings.ltrim('', ''), '');\n\t\tassert.strictEqual(strings.ltrim('', '/'), '');\n\t});\n\n\ttest('rtrim', () => {\n\t\tassert.strictEqual(strings.rtrim('foo', 'o'), 'f');\n\t\tassert.strictEqual(strings.rtrim('foo', 'f'), 'foo');\n\t\tassert.strictEqual(strings.rtrim('http://www.test.de', '.de'), 'http://www.test');\n\t\tassert.strictEqual(strings.rtrim('/foo/', '/'), '/foo');\n\t\tassert.strictEqual(strings.rtrim('/foo//', '/'), '/foo');\n\t\tassert.strictEqual(strings.rtrim('/', ''), '/');\n\t\tassert.strictEqual(strings.rtrim('/', '/'), '');\n\t\tassert.strictEqual(strings.rtrim('///', '/'), '');\n\t\tassert.strictEqual(strings.rtrim('', ''), '');\n\t\tassert.strictEqual(strings.rtrim('', '/'), '');\n\t});\n\n\ttest('trim', () => {\n\t\tassert.strictEqual(strings.trim(' foo '), 'foo');\n\t\tassert.strictEqual(strings.trim('  foo'), 'foo');\n\t\tassert.strictEqual(strings.trim('bar  '), 'bar');\n\t\tassert.strictEqual(strings.trim('   '), '');\n\t\tassert.strictEqual(strings.trim('foo bar', 'bar'), 'foo ');\n\t});\n\n\ttest('trimWhitespace', () => {\n\t\tassert.strictEqual(' foo '.trim(), 'foo');\n\t\tassert.strictEqual('\t foo\t'.trim(), 'foo');\n\t\tassert.strictEqual('  foo'.trim(), 'foo');\n\t\tassert.strictEqual('bar  '.trim(), 'bar');\n\t\tassert.strictEqual('   '.trim(), '');\n\t\tassert.strictEqual(' \t  '.trim(), '');\n\t});\n\n\ttest('lastNonWhitespaceIndex', () => {\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc  \\t \\t '), 2);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc'), 2);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc\\t'), 2);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc '), 2);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc  \\t \\t '), 2);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc  \\t \\t abc \\t \\t '), 11);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc  \\t \\t abc \\t \\t ', 8), 2);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('  \\t \\t '), -1);\n\t});\n\n\ttest('containsRTL', () => {\n\t\tassert.strictEqual(strings.containsRTL('a'), false);\n\t\tassert.strictEqual(strings.containsRTL(''), false);\n\t\tassert.strictEqual(strings.containsRTL(strings.UTF8_BOM_CHARACTER + 'a'), false);\n\t\tassert.strictEqual(strings.containsRTL('hello world!'), false);\n\t\tassert.strictEqual(strings.containsRTL('a📚📚b'), false);\n\t\tassert.strictEqual(strings.containsRTL('هناك حقيقة مثبتة منذ زمن طويل'), true);\n\t\tassert.strictEqual(strings.containsRTL('זוהי עובדה מבוססת שדעתו'), true);\n\t});\n\n\ttest('issue #115221: isEmojiImprecise misses ⭐', () => {\n\t\tconst codePoint = strings.getNextCodePoint('⭐', '⭐'.length, 0);\n\t\tassert.strictEqual(strings.isEmojiImprecise(codePoint), true);\n\t});\n\n\ttest('isBasicASCII', () => {\n\t\tfunction assertIsBasicASCII(str: string, expected: boolean): void {\n\t\t\tassert.strictEqual(strings.isBasicASCII(str), expected, str + ` (${str.charCodeAt(0)})`);\n\t\t}\n\t\tassertIsBasicASCII('abcdefghijklmnopqrstuvwxyz', true);\n\t\tassertIsBasicASCII('ABCDEFGHIJKLMNOPQRSTUVWXYZ', true);\n\t\tassertIsBasicASCII('1234567890', true);\n\t\tassertIsBasicASCII('`~!@#$%^&*()-_=+[{]}\\\\|;:\\'\",<.>/?', true);\n\t\tassertIsBasicASCII(' ', true);\n\t\tassertIsBasicASCII('\\t', true);\n\t\tassertIsBasicASCII('\\n', true);\n\t\tassertIsBasicASCII('\\r', true);\n\n\t\tlet ALL = '\\r\\t\\n';\n\t\tfor (let i = 32; i < 127; i++) {\n\t\t\tALL += String.fromCharCode(i);\n\t\t}\n\t\tassertIsBasicASCII(ALL, true);\n\n\t\tassertIsBasicASCII(String.fromCharCode(31), false);\n\t\tassertIsBasicASCII(String.fromCharCode(127), false);\n\t\tassertIsBasicASCII('ü', false);\n\t\tassertIsBasicASCII('a📚📚b', false);\n\t});\n\n\ttest('createRegExp', () => {\n\t\t// Empty\n\t\tassert.throws(() => strings.createRegExp('', false));\n\n\t\t// Escapes appropriately\n\t\tassert.strictEqual(strings.createRegExp('abc', false).source, 'abc');\n\t\tassert.strictEqual(strings.createRegExp('([^ ,.]*)', false).source, '\\\\(\\\\[\\\\^ ,\\\\.\\\\]\\\\*\\\\)');\n\t\tassert.strictEqual(strings.createRegExp('([^ ,.]*)', true).source, '([^ ,.]*)');\n\n\t\t// Whole word\n\t\tassert.strictEqual(strings.createRegExp('abc', false, { wholeWord: true }).source, '\\\\babc\\\\b');\n\t\tassert.strictEqual(strings.createRegExp('abc', true, { wholeWord: true }).source, '\\\\babc\\\\b');\n\t\tassert.strictEqual(strings.createRegExp(' abc', true, { wholeWord: true }).source, ' abc\\\\b');\n\t\tassert.strictEqual(strings.createRegExp('abc ', true, { wholeWord: true }).source, '\\\\babc ');\n\t\tassert.strictEqual(strings.createRegExp(' abc ', true, { wholeWord: true }).source, ' abc ');\n\n\t\tconst regExpWithoutFlags = strings.createRegExp('abc', true);\n\t\tassert(!regExpWithoutFlags.global);\n\t\tassert(regExpWithoutFlags.ignoreCase);\n\t\tassert(!regExpWithoutFlags.multiline);\n\n\t\tconst regExpWithFlags = strings.createRegExp('abc', true, { global: true, matchCase: true, multiline: true });\n\t\tassert(regExpWithFlags.global);\n\t\tassert(!regExpWithFlags.ignoreCase);\n\t\tassert(regExpWithFlags.multiline);\n\t});\n\n\ttest('getLeadingWhitespace', () => {\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  foo'), '  ');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  foo', 2), '');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  foo', 1, 1), '');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  foo', 0, 1), ' ');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  '), '  ');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  ', 1), ' ');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  ', 0, 1), ' ');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('\\t\\tfunction foo(){', 0, 1), '\\t');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('\\t\\tfunction foo(){', 0, 2), '\\t\\t');\n\t});\n\n\ttest('fuzzyContains', () => {\n\t\tassert.ok(!strings.fuzzyContains((undefined)!, null!));\n\t\tassert.ok(strings.fuzzyContains('hello world', 'h'));\n\t\tassert.ok(!strings.fuzzyContains('hello world', 'q'));\n\t\tassert.ok(strings.fuzzyContains('hello world', 'hw'));\n\t\tassert.ok(strings.fuzzyContains('hello world', 'horl'));\n\t\tassert.ok(strings.fuzzyContains('hello world', 'd'));\n\t\tassert.ok(!strings.fuzzyContains('hello world', 'wh'));\n\t\tassert.ok(!strings.fuzzyContains('d', 'dd'));\n\t});\n\n\ttest('startsWithUTF8BOM', () => {\n\t\tassert(strings.startsWithUTF8BOM(strings.UTF8_BOM_CHARACTER));\n\t\tassert(strings.startsWithUTF8BOM(strings.UTF8_BOM_CHARACTER + 'a'));\n\t\tassert(strings.startsWithUTF8BOM(strings.UTF8_BOM_CHARACTER + 'aaaaaaaaaa'));\n\t\tassert(!strings.startsWithUTF8BOM(' ' + strings.UTF8_BOM_CHARACTER));\n\t\tassert(!strings.startsWithUTF8BOM('foo'));\n\t\tassert(!strings.startsWithUTF8BOM(''));\n\t});\n\n\ttest('stripUTF8BOM', () => {\n\t\tassert.strictEqual(strings.stripUTF8BOM(strings.UTF8_BOM_CHARACTER), '');\n\t\tassert.strictEqual(strings.stripUTF8BOM(strings.UTF8_BOM_CHARACTER + 'foobar'), 'foobar');\n\t\tassert.strictEqual(strings.stripUTF8BOM('foobar' + strings.UTF8_BOM_CHARACTER), 'foobar' + strings.UTF8_BOM_CHARACTER);\n\t\tassert.strictEqual(strings.stripUTF8BOM('abc'), 'abc');\n\t\tassert.strictEqual(strings.stripUTF8BOM(''), '');\n\t});\n\n\ttest('containsUppercaseCharacter', () => {\n\t\t[\n\t\t\t[null, false],\n\t\t\t['', false],\n\t\t\t['foo', false],\n\t\t\t['föö', false],\n\t\t\t['ناك', false],\n\t\t\t['מבוססת', false],\n\t\t\t['😀', false],\n\t\t\t['(#@()*&%()@*#&09827340982374}{:\">?></\\'\\\\~`', false],\n\n\t\t\t['Foo', true],\n\t\t\t['FOO', true],\n\t\t\t['FöÖ', true],\n\t\t\t['FöÖ', true],\n\t\t\t['\\\\Foo', true],\n\t\t].forEach(([str, result]) => {\n\t\t\tassert.strictEqual(strings.containsUppercaseCharacter(<string>str), result, `Wrong result for ${str}`);\n\t\t});\n\t});\n\n\ttest('containsUppercaseCharacter (ignoreEscapedChars)', () => {\n\t\t[\n\t\t\t['\\\\Woo', false],\n\t\t\t['f\\\\S\\\\S', false],\n\t\t\t['foo', false],\n\n\t\t\t['Foo', true],\n\t\t].forEach(([str, result]) => {\n\t\t\tassert.strictEqual(strings.containsUppercaseCharacter(<string>str, true), result, `Wrong result for ${str}`);\n\t\t});\n\t});\n\n\ttest('uppercaseFirstLetter', () => {\n\t\t[\n\t\t\t['', ''],\n\t\t\t['foo', 'Foo'],\n\t\t\t['f', 'F'],\n\t\t\t['123', '123'],\n\t\t\t['.a', '.a'],\n\t\t].forEach(([inStr, result]) => {\n\t\t\tassert.strictEqual(strings.uppercaseFirstLetter(inStr), result, `Wrong result for ${inStr}`);\n\t\t});\n\t});\n\n\ttest('getNLines', () => {\n\t\tassert.strictEqual(strings.getNLines('', 5), '');\n\t\tassert.strictEqual(strings.getNLines('foo', 5), 'foo');\n\t\tassert.strictEqual(strings.getNLines('foo\\nbar', 5), 'foo\\nbar');\n\t\tassert.strictEqual(strings.getNLines('foo\\nbar', 2), 'foo\\nbar');\n\n\t\tassert.strictEqual(strings.getNLines('foo\\nbar', 1), 'foo');\n\t\tassert.strictEqual(strings.getNLines('foo\\nbar'), 'foo');\n\t\tassert.strictEqual(strings.getNLines('foo\\nbar\\nsomething', 2), 'foo\\nbar');\n\t\tassert.strictEqual(strings.getNLines('foo', 0), '');\n\t});\n\n\ttest('getGraphemeBreakType', () => {\n\t\tassert.strictEqual(strings.getGraphemeBreakType(0xBC1), strings.GraphemeBreakType.SpacingMark);\n\t});\n\n\ttest('truncate', () => {\n\t\tassert.strictEqual('hello world', strings.truncate('hello world', 100));\n\t\tassert.strictEqual('hello…', strings.truncate('hello world', 5));\n\t});\n\n\ttest('replaceAsync', async () => {\n\t\tlet i = 0;\n\t\tassert.strictEqual(await strings.replaceAsync('abcabcabcabc', /b(.)/g, async (match, after) => {\n\t\t\tassert.strictEqual(match, 'bc');\n\t\t\tassert.strictEqual(after, 'c');\n\t\t\treturn `${i++}${after}`;\n\t\t}), 'a0ca1ca2ca3c');\n\t});\n\n\ttest('removeAnsiEscapeCodes', () => {\n\t\tconst CSI = '\\x1b\\[';\n\t\tconst sequences = [\n\t\t\t// Base cases from https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-Functions-using-CSI-_-ordered-by-the-final-character_s_\n\t\t\t`${CSI}42@`,\n\t\t\t`${CSI}42 @`,\n\t\t\t`${CSI}42A`,\n\t\t\t`${CSI}42 A`,\n\t\t\t`${CSI}42B`,\n\t\t\t`${CSI}42C`,\n\t\t\t`${CSI}42D`,\n\t\t\t`${CSI}42E`,\n\t\t\t`${CSI}42F`,\n\t\t\t`${CSI}42G`,\n\t\t\t`${CSI}42;42H`,\n\t\t\t`${CSI}42I`,\n\t\t\t`${CSI}42J`,\n\t\t\t`${CSI}?42J`,\n\t\t\t`${CSI}42K`,\n\t\t\t`${CSI}?42K`,\n\t\t\t`${CSI}42L`,\n\t\t\t`${CSI}42M`,\n\t\t\t`${CSI}42P`,\n\t\t\t`${CSI}#P`,\n\t\t\t`${CSI}3#P`,\n\t\t\t`${CSI}#Q`,\n\t\t\t`${CSI}3#Q`,\n\t\t\t`${CSI}#R`,\n\t\t\t`${CSI}42S`,\n\t\t\t`${CSI}?1;2;3S`,\n\t\t\t`${CSI}42T`,\n\t\t\t`${CSI}42;42;42;42;42T`,\n\t\t\t`${CSI}>3T`,\n\t\t\t`${CSI}42X`,\n\t\t\t`${CSI}42Z`,\n\t\t\t`${CSI}42^`,\n\t\t\t`${CSI}42\\``,\n\t\t\t`${CSI}42a`,\n\t\t\t`${CSI}42b`,\n\t\t\t`${CSI}42c`,\n\t\t\t`${CSI}=42c`,\n\t\t\t`${CSI}>42c`,\n\t\t\t`${CSI}42d`,\n\t\t\t`${CSI}42e`,\n\t\t\t`${CSI}42;42f`,\n\t\t\t`${CSI}42g`,\n\t\t\t`${CSI}3h`,\n\t\t\t`${CSI}?3h`,\n\t\t\t`${CSI}42i`,\n\t\t\t`${CSI}?42i`,\n\t\t\t`${CSI}3l`,\n\t\t\t`${CSI}?3l`,\n\t\t\t`${CSI}3m`,\n\t\t\t`${CSI}>0;0m`,\n\t\t\t`${CSI}>0m`,\n\t\t\t`${CSI}?0m`,\n\t\t\t`${CSI}42n`,\n\t\t\t`${CSI}>42n`,\n\t\t\t`${CSI}?42n`,\n\t\t\t`${CSI}>42p`,\n\t\t\t`${CSI}!p`,\n\t\t\t`${CSI}0;0\"p`,\n\t\t\t`${CSI}42$p`,\n\t\t\t`${CSI}?42$p`,\n\t\t\t`${CSI}#p`,\n\t\t\t`${CSI}3#p`,\n\t\t\t`${CSI}>42q`,\n\t\t\t`${CSI}42q`,\n\t\t\t`${CSI}42 q`,\n\t\t\t`${CSI}42\"q`,\n\t\t\t`${CSI}#q`,\n\t\t\t`${CSI}42;42r`,\n\t\t\t`${CSI}?3r`,\n\t\t\t`${CSI}0;0;0;0;3$r`,\n\t\t\t`${CSI}s`,\n\t\t\t`${CSI}0;0s`,\n\t\t\t`${CSI}>42s`,\n\t\t\t`${CSI}?3s`,\n\t\t\t`${CSI}42;42;42t`,\n\t\t\t`${CSI}>3t`,\n\t\t\t`${CSI}42 t`,\n\t\t\t`${CSI}0;0;0;0;3$t`,\n\t\t\t`${CSI}u`,\n\t\t\t`${CSI}42 u`,\n\t\t\t`${CSI}0;0;0;0;0;0;0;0$v`,\n\t\t\t`${CSI}42$w`,\n\t\t\t`${CSI}0;0;0;0'w`,\n\t\t\t`${CSI}42x`,\n\t\t\t`${CSI}42*x`,\n\t\t\t`${CSI}0;0;0;0;0$x`,\n\t\t\t`${CSI}42#y`,\n\t\t\t`${CSI}0;0;0;0;0;0*y`,\n\t\t\t`${CSI}42;0'z`,\n\t\t\t`${CSI}0;1;2;4$z`,\n\t\t\t`${CSI}3'{`,\n\t\t\t`${CSI}#{`,\n\t\t\t`${CSI}3#{`,\n\t\t\t`${CSI}0;0;0;0\\${`,\n\t\t\t`${CSI}0;0;0;0#|`,\n\t\t\t`${CSI}42$|`,\n\t\t\t`${CSI}42'|`,\n\t\t\t`${CSI}42*|`,\n\t\t\t`${CSI}#}`,\n\t\t\t`${CSI}42'}`,\n\t\t\t`${CSI}42$}`,\n\t\t\t`${CSI}42'~`,\n\t\t\t`${CSI}42$~`,\n\n\t\t\t// Common SGR cases:\n\t\t\t`${CSI}1;31m`, // multiple attrs\n\t\t\t`${CSI}105m`, // bright background\n\t\t\t`${CSI}48:5:128m`, // 256 indexed color\n\t\t\t`${CSI}48;5;128m`, // 256 indexed color alt\n\t\t\t`${CSI}38:2:0:255:255:255m`, // truecolor\n\t\t\t`${CSI}38;2;255;255;255m`, // truecolor alt\n\n\t\t\t// Custom sequences:\n\t\t\t'\\x1b]633;SetMark;\\x07',\n\t\t\t'\\x1b]633;P;Cwd=/foo\\x07',\n\t\t];\n\n\t\tfor (const sequence of sequences) {\n\t\t\tassert.strictEqual(strings.removeAnsiEscapeCodes(`hello${sequence}world`), 'helloworld', `expect to remove ${JSON.stringify(sequence)}`);\n\t\t}\n\t});\n});\n"]}