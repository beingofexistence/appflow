{"version":3,"sources":["file:///workspace/appflow/src/vs/base/test/common/timeTravelScheduler.ts"],"names":[],"mappings":"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","file":"timeTravelScheduler.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { setTimeout0, setTimeout0IsFaster } from 'vs/base/common/platform';\n\ninterface PriorityQueue<T> {\n\tlength: number;\n\tadd(value: T): void;\n\tremove(value: T): void;\n\n\tremoveMin(): T | undefined;\n\ttoSortedArray(): T[];\n}\n\nclass SimplePriorityQueue<T> implements PriorityQueue<T> {\n\tprivate isSorted = false;\n\tprivate items: T[];\n\n\tconstructor(items: T[], private readonly compare: (a: T, b: T) => number) {\n\t\tthis.items = items;\n\t}\n\n\tget length(): number {\n\t\treturn this.items.length;\n\t}\n\n\tadd(value: T): void {\n\t\tthis.items.push(value);\n\t\tthis.isSorted = false;\n\t}\n\n\tremove(value: T): void {\n\t\tthis.items.splice(this.items.indexOf(value), 1);\n\t\tthis.isSorted = false;\n\t}\n\n\tremoveMin(): T | undefined {\n\t\tthis.ensureSorted();\n\t\treturn this.items.shift();\n\t}\n\n\tgetMin(): T | undefined {\n\t\tthis.ensureSorted();\n\t\treturn this.items[0];\n\t}\n\n\ttoSortedArray(): T[] {\n\t\tthis.ensureSorted();\n\t\treturn [...this.items];\n\t}\n\n\tprivate ensureSorted() {\n\t\tif (!this.isSorted) {\n\t\t\tthis.items.sort(this.compare);\n\t\t\tthis.isSorted = true;\n\t\t}\n\t}\n}\n\nexport type TimeOffset = number;\n\nexport interface Scheduler {\n\tschedule(task: ScheduledTask): IDisposable;\n\tget now(): TimeOffset;\n}\n\nexport interface ScheduledTask {\n\treadonly time: TimeOffset;\n\treadonly source: ScheduledTaskSource;\n\n\trun(): void;\n}\n\nexport interface ScheduledTaskSource {\n\ttoString(): string;\n\treadonly stackTrace: string | undefined;\n}\n\ninterface ExtendedScheduledTask extends ScheduledTask {\n\tid: number;\n}\n\nfunction compareScheduledTasks(a: ExtendedScheduledTask, b: ExtendedScheduledTask): number {\n\tif (a.time !== b.time) {\n\t\t// Prefer lower time\n\t\treturn a.time - b.time;\n\t}\n\n\tif (a.id !== b.id) {\n\t\t// Prefer lower id\n\t\treturn a.id - b.id;\n\t}\n\n\treturn 0;\n}\n\nexport class TimeTravelScheduler implements Scheduler {\n\tprivate taskCounter = 0;\n\tprivate _now: TimeOffset = 0;\n\tprivate readonly queue: PriorityQueue<ExtendedScheduledTask> = new SimplePriorityQueue([], compareScheduledTasks);\n\n\tprivate readonly taskScheduledEmitter = new Emitter<{ task: ScheduledTask }>();\n\tpublic readonly onTaskScheduled = this.taskScheduledEmitter.event;\n\n\tschedule(task: ScheduledTask): IDisposable {\n\t\tif (task.time < this._now) {\n\t\t\tthrow new Error(`Scheduled time (${task.time}) must be equal to or greater than the current time (${this._now}).`);\n\t\t}\n\t\tconst extendedTask: ExtendedScheduledTask = { ...task, id: this.taskCounter++ };\n\t\tthis.queue.add(extendedTask);\n\t\tthis.taskScheduledEmitter.fire({ task });\n\t\treturn { dispose: () => this.queue.remove(extendedTask) };\n\t}\n\n\tget now(): TimeOffset {\n\t\treturn this._now;\n\t}\n\n\tget hasScheduledTasks(): boolean {\n\t\treturn this.queue.length > 0;\n\t}\n\n\tgetScheduledTasks(): readonly ScheduledTask[] {\n\t\treturn this.queue.toSortedArray();\n\t}\n\n\trunNext(): ScheduledTask | undefined {\n\t\tconst task = this.queue.removeMin();\n\t\tif (task) {\n\t\t\tthis._now = task.time;\n\t\t\ttask.run();\n\t\t}\n\n\t\treturn task;\n\t}\n\n\tinstallGlobally(): IDisposable {\n\t\treturn overwriteGlobals(this);\n\t}\n}\n\nexport class AsyncSchedulerProcessor extends Disposable {\n\tprivate isProcessing = false;\n\tprivate readonly _history = new Array<ScheduledTask>();\n\tpublic get history(): readonly ScheduledTask[] { return this._history; }\n\n\tprivate readonly maxTaskCount: number;\n\tprivate readonly useSetImmediate: boolean;\n\n\tprivate readonly queueEmptyEmitter = new Emitter<void>();\n\tpublic readonly onTaskQueueEmpty = this.queueEmptyEmitter.event;\n\n\tprivate lastError: Error | undefined;\n\n\tconstructor(private readonly scheduler: TimeTravelScheduler, options?: { useSetImmediate?: boolean; maxTaskCount?: number }) {\n\t\tsuper();\n\n\t\tthis.maxTaskCount = options && options.maxTaskCount ? options.maxTaskCount : 100;\n\t\tthis.useSetImmediate = options && options.useSetImmediate ? options.useSetImmediate : false;\n\n\t\tthis._register(scheduler.onTaskScheduled(() => {\n\t\t\tif (this.isProcessing) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.isProcessing = true;\n\t\t\t\tthis.schedule();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate schedule() {\n\t\t// This allows promises created by a previous task to settle and schedule tasks before the next task is run.\n\t\t// Tasks scheduled in those promises might have to run before the current next task.\n\t\tPromise.resolve().then(() => {\n\t\t\tif (this.useSetImmediate) {\n\t\t\t\toriginalGlobalValues.setImmediate(() => this.process());\n\t\t\t} else if (setTimeout0IsFaster) {\n\t\t\t\tsetTimeout0(() => this.process());\n\t\t\t} else {\n\t\t\t\toriginalGlobalValues.setTimeout(() => this.process());\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate process() {\n\t\tconst executedTask = this.scheduler.runNext();\n\t\tif (executedTask) {\n\t\t\tthis._history.push(executedTask);\n\n\t\t\tif (this.history.length >= this.maxTaskCount && this.scheduler.hasScheduledTasks) {\n\t\t\t\tconst lastTasks = this._history.slice(Math.max(0, this.history.length - 10)).map(h => `${h.source.toString()}: ${h.source.stackTrace}`);\n\t\t\t\tconst e = new Error(`Queue did not get empty after processing ${this.history.length} items. These are the last ${lastTasks.length} scheduled tasks:\\n${lastTasks.join('\\n\\n\\n')}`);\n\t\t\t\tthis.lastError = e;\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\tif (this.scheduler.hasScheduledTasks) {\n\t\t\tthis.schedule();\n\t\t} else {\n\t\t\tthis.isProcessing = false;\n\t\t\tthis.queueEmptyEmitter.fire();\n\t\t}\n\t}\n\n\twaitForEmptyQueue(): Promise<void> {\n\t\tif (this.lastError) {\n\t\t\tconst error = this.lastError;\n\t\t\tthis.lastError = undefined;\n\t\t\tthrow error;\n\t\t}\n\t\tif (!this.isProcessing) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onTaskQueueEmpty).then(() => {\n\t\t\t\tif (this.lastError) {\n\t\t\t\t\tthrow this.lastError;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n\nexport async function runWithFakedTimers<T>(options: { useFakeTimers?: boolean; useSetImmediate?: boolean; maxTaskCount?: number }, fn: () => Promise<T>): Promise<T> {\n\tconst useFakeTimers = options.useFakeTimers === undefined ? true : options.useFakeTimers;\n\tif (!useFakeTimers) {\n\t\treturn fn();\n\t}\n\n\tconst scheduler = new TimeTravelScheduler();\n\tconst schedulerProcessor = new AsyncSchedulerProcessor(scheduler, { useSetImmediate: options.useSetImmediate, maxTaskCount: options.maxTaskCount });\n\tconst globalInstallDisposable = scheduler.installGlobally();\n\n\tlet result: T;\n\ttry {\n\t\tresult = await fn();\n\t} finally {\n\t\tglobalInstallDisposable.dispose();\n\n\t\ttry {\n\t\t\t// We process the remaining scheduled tasks.\n\t\t\t// The global override is no longer active, so during this, no more tasks will be scheduled.\n\t\t\tawait schedulerProcessor.waitForEmptyQueue();\n\t\t} finally {\n\t\t\tschedulerProcessor.dispose();\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport const originalGlobalValues = {\n\tsetTimeout: globalThis.setTimeout.bind(globalThis),\n\tclearTimeout: globalThis.clearTimeout.bind(globalThis),\n\tsetInterval: globalThis.setInterval.bind(globalThis),\n\tclearInterval: globalThis.clearInterval.bind(globalThis),\n\tsetImmediate: globalThis.setImmediate?.bind(globalThis),\n\tclearImmediate: globalThis.clearImmediate?.bind(globalThis),\n\trequestAnimationFrame: globalThis.requestAnimationFrame?.bind(globalThis),\n\tcancelAnimationFrame: globalThis.cancelAnimationFrame?.bind(globalThis),\n\tDate: globalThis.Date,\n};\n\nfunction setTimeout(scheduler: Scheduler, handler: TimerHandler, timeout: number = 0): IDisposable {\n\tif (typeof handler === 'string') {\n\t\tthrow new Error('String handler args should not be used and are not supported');\n\t}\n\n\treturn scheduler.schedule({\n\t\ttime: scheduler.now + timeout,\n\t\trun: () => {\n\t\t\thandler();\n\t\t},\n\t\tsource: {\n\t\t\ttoString() { return 'setTimeout'; },\n\t\t\tstackTrace: new Error().stack,\n\t\t}\n\t});\n}\n\nfunction setInterval(scheduler: Scheduler, handler: TimerHandler, interval: number): IDisposable {\n\tif (typeof handler === 'string') {\n\t\tthrow new Error('String handler args should not be used and are not supported');\n\t}\n\tconst validatedHandler = handler;\n\n\tlet iterCount = 0;\n\tconst stackTrace = new Error().stack;\n\n\tlet disposed = false;\n\tlet lastDisposable: IDisposable;\n\n\tfunction schedule(): void {\n\t\titerCount++;\n\t\tconst curIter = iterCount;\n\t\tlastDisposable = scheduler.schedule({\n\t\t\ttime: scheduler.now + interval,\n\t\t\trun() {\n\t\t\t\tif (!disposed) {\n\t\t\t\t\tschedule();\n\t\t\t\t\tvalidatedHandler();\n\t\t\t\t}\n\t\t\t},\n\t\t\tsource: {\n\t\t\t\ttoString() { return `setInterval (iteration ${curIter})`; },\n\t\t\t\tstackTrace,\n\t\t\t}\n\t\t});\n\t}\n\n\tschedule();\n\n\treturn {\n\t\tdispose: () => {\n\t\t\tif (disposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdisposed = true;\n\t\t\tlastDisposable.dispose();\n\t\t}\n\t};\n}\n\nfunction overwriteGlobals(scheduler: Scheduler): IDisposable {\n\tglobalThis.setTimeout = ((handler: TimerHandler, timeout?: number) => setTimeout(scheduler, handler, timeout)) as any;\n\tglobalThis.clearTimeout = (timeoutId: any) => {\n\t\tif (typeof timeoutId === 'object' && timeoutId && 'dispose' in timeoutId) {\n\t\t\ttimeoutId.dispose();\n\t\t} else {\n\t\t\toriginalGlobalValues.clearTimeout(timeoutId);\n\t\t}\n\t};\n\n\tglobalThis.setInterval = ((handler: TimerHandler, timeout: number) => setInterval(scheduler, handler, timeout)) as any;\n\tglobalThis.clearInterval = (timeoutId: any) => {\n\t\tif (typeof timeoutId === 'object' && timeoutId && 'dispose' in timeoutId) {\n\t\t\ttimeoutId.dispose();\n\t\t} else {\n\t\t\toriginalGlobalValues.clearInterval(timeoutId);\n\t\t}\n\t};\n\n\tglobalThis.Date = createDateClass(scheduler);\n\n\treturn {\n\t\tdispose: () => {\n\t\t\tObject.assign(globalThis, originalGlobalValues);\n\t\t}\n\t};\n}\n\nfunction createDateClass(scheduler: Scheduler): DateConstructor {\n\tconst OriginalDate = originalGlobalValues.Date;\n\n\tfunction SchedulerDate(this: any, ...args: any): any {\n\t\t// the Date constructor called as a function, ref Ecma-262 Edition 5.1, section 15.9.2.\n\t\t// This remains so in the 10th edition of 2019 as well.\n\t\tif (!(this instanceof SchedulerDate)) {\n\t\t\treturn new OriginalDate(scheduler.now).toString();\n\t\t}\n\n\t\t// if Date is called as a constructor with 'new' keyword\n\t\tif (args.length === 0) {\n\t\t\treturn new OriginalDate(scheduler.now);\n\t\t}\n\t\treturn new (OriginalDate as any)(...args);\n\t}\n\n\tfor (const prop in OriginalDate) {\n\t\tif (OriginalDate.hasOwnProperty(prop)) {\n\t\t\t(SchedulerDate as any)[prop] = (OriginalDate as any)[prop];\n\t\t}\n\t}\n\n\tSchedulerDate.now = function now() {\n\t\treturn scheduler.now;\n\t};\n\tSchedulerDate.toString = function toString() {\n\t\treturn OriginalDate.toString();\n\t};\n\tSchedulerDate.prototype = OriginalDate.prototype;\n\tSchedulerDate.parse = OriginalDate.parse;\n\tSchedulerDate.UTC = OriginalDate.UTC;\n\tSchedulerDate.prototype.toUTCString = OriginalDate.prototype.toUTCString;\n\n\treturn SchedulerDate as any;\n}\n"]}