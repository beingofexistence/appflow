{"version":3,"sources":["file:///workspace/appflow/src/vs/base/browser/trustedTypes.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAIhG,SAAgB,GAAG,CAClB,UAAkB,EAClB,aAAuB;QASvB,MAAM,iBAAiB,GAAoC,UAAkB,CAAC,iBAAiB,CAAC;QAEhG,IAAI,iBAAiB,EAAE,wBAAwB,EAAE;YAChD,IAAI;gBACH,OAAO,iBAAiB,CAAC,wBAAwB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;aAC7E;YAAC,OAAO,GAAG,EAAE;gBACb,IAAA,WAAE,EAAgB,GAAG,CAAC,CAAC;gBACvB,OAAO,SAAS,CAAC;aACjB;SACD;QACD,IAAI;YACH,OAAO,MAAM,CAAC,YAAY,EAAE,YAAY,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;SACpE;QAAC,OAAO,GAAG,EAAE;YACb,IAAA,WAAE,EAAgB,GAAG,CAAC,CAAC;YACvB,OAAO,SAAS,CAAC;SACjB;IACF,CAAC;IA3BD,kBA2BC","file":"trustedTypes.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\n\nexport function createTrustedTypesPolicy<Options extends TrustedTypePolicyOptions>(\n\tpolicyName: string,\n\tpolicyOptions?: Options,\n): undefined | Pick<TrustedTypePolicy<Options>, 'name' | Extract<keyof Options, keyof TrustedTypePolicyOptions>> {\n\n\tinterface IMonacoEnvironment {\n\t\tcreateTrustedTypesPolicy<Options extends TrustedTypePolicyOptions>(\n\t\t\tpolicyName: string,\n\t\t\tpolicyOptions?: Options,\n\t\t): undefined | Pick<TrustedTypePolicy<Options>, 'name' | Extract<keyof Options, keyof TrustedTypePolicyOptions>>;\n\t}\n\tconst monacoEnvironment: IMonacoEnvironment | undefined = (globalThis as any).MonacoEnvironment;\n\n\tif (monacoEnvironment?.createTrustedTypesPolicy) {\n\t\ttry {\n\t\t\treturn monacoEnvironment.createTrustedTypesPolicy(policyName, policyOptions);\n\t\t} catch (err) {\n\t\t\tonUnexpectedError(err);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\ttry {\n\t\treturn window.trustedTypes?.createPolicy(policyName, policyOptions);\n\t} catch (err) {\n\t\tonUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n"]}