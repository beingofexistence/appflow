{"version":3,"sources":["vs/base/browser/ui/tree/treeDefaults.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,MAAa,GAAiD,SAAQ,aAAG;QAExE,YAAoB,CAA6C,EAAE,OAAgB;YAClF,KAAK,CAAC,kBAAkB,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAc,EAAE,IAAc,CAAC,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;YAD9E,MAAC,GAAD,CAAC,CAA4C;QAEjE,CAAC;QAEQ,KAAK,CAAC,GAAG;YACjB,IAAI,CAAC,CAAC,CAAM,WAAW,EAAE,CAAC;YAC1B,IAAI,CAAC,CAAC,CAAM,YAAY,CAAC,EAAE,CAAC,CAAC;YAC7B,IAAI,CAAC,CAAC,CAAM,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC1B,CAAC;KACD;IAXD,kBAWC","file":"treeDefaults.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AsyncDataTree } from 'vs/base/browser/ui/tree/asyncDataTree';\nimport { Action } from 'vs/base/common/actions';\nimport * as nls from 'vs/nls';\n\nexport class CollapseAllAction<TInput, T, TFilterData = void> extends Action {\n\n\tconstructor(private viewer: AsyncDataTree<TInput, T, TFilterData>, enabled: boolean) {\n\t\tsuper('vs.tree.collapse', nls.localize('collapse all', \"Collapse All\"), 'collapse-all', enabled);\n\t}\n\n\toverride async run(): Promise<any> {\n\t\tthis.viewer.collapseAll();\n\t\tthis.viewer.setSelection([]);\n\t\tthis.viewer.setFocus([]);\n\t}\n}\n"]}