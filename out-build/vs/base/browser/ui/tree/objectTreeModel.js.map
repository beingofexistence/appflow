{"version":3,"sources":["file:///workspace/appflow/src/vs/base/browser/ui/tree/objectTreeModel.ts"],"names":[],"mappings":"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","file":"objectTreeModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IIdentityProvider } from 'vs/base/browser/ui/list/list';\nimport { IIndexTreeModelOptions, IIndexTreeModelSpliceOptions, IList, IndexTreeModel } from 'vs/base/browser/ui/tree/indexTreeModel';\nimport { ICollapseStateChangeEvent, IObjectTreeElement, ITreeElement, ITreeModel, ITreeModelSpliceEvent, ITreeNode, ITreeSorter, ObjectTreeElementCollapseState, TreeError } from 'vs/base/browser/ui/tree/tree';\nimport { Event } from 'vs/base/common/event';\nimport { Iterable } from 'vs/base/common/iterator';\n\nexport type ITreeNodeCallback<T, TFilterData> = (node: ITreeNode<T, TFilterData>) => void;\n\nexport interface IObjectTreeModel<T extends NonNullable<any>, TFilterData extends NonNullable<any> = void> extends ITreeModel<T | null, TFilterData, T | null> {\n\tsetChildren(element: T | null, children: Iterable<IObjectTreeElement<T>> | undefined, options?: IObjectTreeModelSetChildrenOptions<T, TFilterData>): void;\n\tresort(element?: T | null, recursive?: boolean): void;\n\tupdateElementHeight(element: T, height: number | undefined): void;\n}\n\nexport interface IObjectTreeModelSetChildrenOptions<T, TFilterData> extends IIndexTreeModelSpliceOptions<T, TFilterData> {\n}\n\nexport interface IObjectTreeModelOptions<T, TFilterData> extends IIndexTreeModelOptions<T, TFilterData> {\n\treadonly sorter?: ITreeSorter<T>;\n\treadonly identityProvider?: IIdentityProvider<T>;\n}\n\nexport class ObjectTreeModel<T extends NonNullable<any>, TFilterData extends NonNullable<any> = void> implements IObjectTreeModel<T, TFilterData> {\n\n\treadonly rootRef = null;\n\n\tprivate model: IndexTreeModel<T | null, TFilterData>;\n\tprivate nodes = new Map<T | null, ITreeNode<T, TFilterData>>();\n\tprivate readonly nodesByIdentity = new Map<string, ITreeNode<T, TFilterData>>();\n\tprivate readonly identityProvider?: IIdentityProvider<T>;\n\tprivate sorter?: ITreeSorter<{ element: T }>;\n\n\treadonly onDidSplice: Event<ITreeModelSpliceEvent<T | null, TFilterData>>;\n\treadonly onDidChangeCollapseState: Event<ICollapseStateChangeEvent<T, TFilterData>>;\n\treadonly onDidChangeRenderNodeCount: Event<ITreeNode<T, TFilterData>>;\n\n\tget size(): number { return this.nodes.size; }\n\n\tconstructor(\n\t\tprivate user: string,\n\t\tlist: IList<ITreeNode<T, TFilterData>>,\n\t\toptions: IObjectTreeModelOptions<T, TFilterData> = {}\n\t) {\n\t\tthis.model = new IndexTreeModel(user, list, null, options);\n\t\tthis.onDidSplice = this.model.onDidSplice;\n\t\tthis.onDidChangeCollapseState = this.model.onDidChangeCollapseState as Event<ICollapseStateChangeEvent<T, TFilterData>>;\n\t\tthis.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount as Event<ITreeNode<T, TFilterData>>;\n\n\t\tif (options.sorter) {\n\t\t\tthis.sorter = {\n\t\t\t\tcompare(a, b) {\n\t\t\t\t\treturn options.sorter!.compare(a.element, b.element);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tthis.identityProvider = options.identityProvider;\n\t}\n\n\tsetChildren(\n\t\telement: T | null,\n\t\tchildren: Iterable<IObjectTreeElement<T>> = Iterable.empty(),\n\t\toptions: IObjectTreeModelSetChildrenOptions<T, TFilterData> = {},\n\t): void {\n\t\tconst location = this.getElementLocation(element);\n\t\tthis._setChildren(location, this.preserveCollapseState(children), options);\n\t}\n\n\tprivate _setChildren(\n\t\tlocation: number[],\n\t\tchildren: Iterable<ITreeElement<T>> = Iterable.empty(),\n\t\toptions: IObjectTreeModelSetChildrenOptions<T, TFilterData>,\n\t): void {\n\t\tconst insertedElements = new Set<T | null>();\n\t\tconst insertedElementIds = new Set<string>();\n\n\t\tconst onDidCreateNode = (node: ITreeNode<T | null, TFilterData>) => {\n\t\t\tif (node.element === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst tnode = node as ITreeNode<T, TFilterData>;\n\n\t\t\tinsertedElements.add(tnode.element);\n\t\t\tthis.nodes.set(tnode.element, tnode);\n\n\t\t\tif (this.identityProvider) {\n\t\t\t\tconst id = this.identityProvider.getId(tnode.element).toString();\n\t\t\t\tinsertedElementIds.add(id);\n\t\t\t\tthis.nodesByIdentity.set(id, tnode);\n\t\t\t}\n\n\t\t\toptions.onDidCreateNode?.(tnode);\n\t\t};\n\n\t\tconst onDidDeleteNode = (node: ITreeNode<T | null, TFilterData>) => {\n\t\t\tif (node.element === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst tnode = node as ITreeNode<T, TFilterData>;\n\n\t\t\tif (!insertedElements.has(tnode.element)) {\n\t\t\t\tthis.nodes.delete(tnode.element);\n\t\t\t}\n\n\t\t\tif (this.identityProvider) {\n\t\t\t\tconst id = this.identityProvider.getId(tnode.element).toString();\n\t\t\t\tif (!insertedElementIds.has(id)) {\n\t\t\t\t\tthis.nodesByIdentity.delete(id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toptions.onDidDeleteNode?.(tnode);\n\t\t};\n\n\t\tthis.model.splice(\n\t\t\t[...location, 0],\n\t\t\tNumber.MAX_VALUE,\n\t\t\tchildren,\n\t\t\t{ ...options, onDidCreateNode, onDidDeleteNode }\n\t\t);\n\t}\n\n\tprivate preserveCollapseState(elements: Iterable<IObjectTreeElement<T>> = Iterable.empty()): Iterable<ITreeElement<T>> {\n\t\tif (this.sorter) {\n\t\t\telements = [...elements].sort(this.sorter.compare.bind(this.sorter));\n\t\t}\n\n\t\treturn Iterable.map(elements, treeElement => {\n\t\t\tlet node = this.nodes.get(treeElement.element);\n\n\t\t\tif (!node && this.identityProvider) {\n\t\t\t\tconst id = this.identityProvider.getId(treeElement.element).toString();\n\t\t\t\tnode = this.nodesByIdentity.get(id);\n\t\t\t}\n\n\t\t\tif (!node) {\n\t\t\t\tlet collapsed: boolean | undefined;\n\n\t\t\t\tif (typeof treeElement.collapsed === 'undefined') {\n\t\t\t\t\tcollapsed = undefined;\n\t\t\t\t} else if (treeElement.collapsed === ObjectTreeElementCollapseState.Collapsed || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrCollapsed) {\n\t\t\t\t\tcollapsed = true;\n\t\t\t\t} else if (treeElement.collapsed === ObjectTreeElementCollapseState.Expanded || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n\t\t\t\t\tcollapsed = false;\n\t\t\t\t} else {\n\t\t\t\t\tcollapsed = Boolean(treeElement.collapsed);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...treeElement,\n\t\t\t\t\tchildren: this.preserveCollapseState(treeElement.children),\n\t\t\t\t\tcollapsed\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\n\t\t\tlet collapsed: boolean | undefined;\n\n\t\t\tif (typeof treeElement.collapsed === 'undefined' || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrCollapsed || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n\t\t\t\tcollapsed = node.collapsed;\n\t\t\t} else if (treeElement.collapsed === ObjectTreeElementCollapseState.Collapsed) {\n\t\t\t\tcollapsed = true;\n\t\t\t} else if (treeElement.collapsed === ObjectTreeElementCollapseState.Expanded) {\n\t\t\t\tcollapsed = false;\n\t\t\t} else {\n\t\t\t\tcollapsed = Boolean(treeElement.collapsed);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...treeElement,\n\t\t\t\tcollapsible,\n\t\t\t\tcollapsed,\n\t\t\t\tchildren: this.preserveCollapseState(treeElement.children)\n\t\t\t};\n\t\t});\n\t}\n\n\trerender(element: T | null): void {\n\t\tconst location = this.getElementLocation(element);\n\t\tthis.model.rerender(location);\n\t}\n\n\tupdateElementHeight(element: T, height: number | undefined): void {\n\t\tconst location = this.getElementLocation(element);\n\t\tthis.model.updateElementHeight(location, height);\n\t}\n\n\tresort(element: T | null = null, recursive = true): void {\n\t\tif (!this.sorter) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst location = this.getElementLocation(element);\n\t\tconst node = this.model.getNode(location);\n\n\t\tthis._setChildren(location, this.resortChildren(node, recursive), {});\n\t}\n\n\tprivate resortChildren(node: ITreeNode<T | null, TFilterData>, recursive: boolean, first = true): Iterable<ITreeElement<T>> {\n\t\tlet childrenNodes = [...node.children] as ITreeNode<T, TFilterData>[];\n\n\t\tif (recursive || first) {\n\t\t\tchildrenNodes = childrenNodes.sort(this.sorter!.compare.bind(this.sorter));\n\t\t}\n\n\t\treturn Iterable.map<ITreeNode<T | null, TFilterData>, ITreeElement<T>>(childrenNodes, node => ({\n\t\t\telement: node.element as T,\n\t\t\tcollapsible: node.collapsible,\n\t\t\tcollapsed: node.collapsed,\n\t\t\tchildren: this.resortChildren(node, recursive, false)\n\t\t}));\n\t}\n\n\tgetFirstElementChild(ref: T | null = null): T | null | undefined {\n\t\tconst location = this.getElementLocation(ref);\n\t\treturn this.model.getFirstElementChild(location);\n\t}\n\n\tgetLastElementAncestor(ref: T | null = null): T | null | undefined {\n\t\tconst location = this.getElementLocation(ref);\n\t\treturn this.model.getLastElementAncestor(location);\n\t}\n\n\thas(element: T | null): boolean {\n\t\treturn this.nodes.has(element);\n\t}\n\n\tgetListIndex(element: T | null): number {\n\t\tconst location = this.getElementLocation(element);\n\t\treturn this.model.getListIndex(location);\n\t}\n\n\tgetListRenderCount(element: T | null): number {\n\t\tconst location = this.getElementLocation(element);\n\t\treturn this.model.getListRenderCount(location);\n\t}\n\n\tisCollapsible(element: T | null): boolean {\n\t\tconst location = this.getElementLocation(element);\n\t\treturn this.model.isCollapsible(location);\n\t}\n\n\tsetCollapsible(element: T | null, collapsible?: boolean): boolean {\n\t\tconst location = this.getElementLocation(element);\n\t\treturn this.model.setCollapsible(location, collapsible);\n\t}\n\n\tisCollapsed(element: T | null): boolean {\n\t\tconst location = this.getElementLocation(element);\n\t\treturn this.model.isCollapsed(location);\n\t}\n\n\tsetCollapsed(element: T | null, collapsed?: boolean, recursive?: boolean): boolean {\n\t\tconst location = this.getElementLocation(element);\n\t\treturn this.model.setCollapsed(location, collapsed, recursive);\n\t}\n\n\texpandTo(element: T | null): void {\n\t\tconst location = this.getElementLocation(element);\n\t\tthis.model.expandTo(location);\n\t}\n\n\trefilter(): void {\n\t\tthis.model.refilter();\n\t}\n\n\tgetNode(element: T | null = null): ITreeNode<T | null, TFilterData> {\n\t\tif (element === null) {\n\t\t\treturn this.model.getNode(this.model.rootRef);\n\t\t}\n\n\t\tconst node = this.nodes.get(element);\n\n\t\tif (!node) {\n\t\t\tthrow new TreeError(this.user, `Tree element not found: ${element}`);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tgetNodeLocation(node: ITreeNode<T, TFilterData>): T | null {\n\t\treturn node.element;\n\t}\n\n\tgetParentNodeLocation(element: T | null): T | null {\n\t\tif (element === null) {\n\t\t\tthrow new TreeError(this.user, `Invalid getParentNodeLocation call`);\n\t\t}\n\n\t\tconst node = this.nodes.get(element);\n\n\t\tif (!node) {\n\t\t\tthrow new TreeError(this.user, `Tree element not found: ${element}`);\n\t\t}\n\n\t\tconst location = this.model.getNodeLocation(node);\n\t\tconst parentLocation = this.model.getParentNodeLocation(location);\n\t\tconst parent = this.model.getNode(parentLocation);\n\n\t\treturn parent.element;\n\t}\n\n\tprivate getElementLocation(element: T | null): number[] {\n\t\tif (element === null) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst node = this.nodes.get(element);\n\n\t\tif (!node) {\n\t\t\tthrow new TreeError(this.user, `Tree element not found: ${element}`);\n\t\t}\n\n\t\treturn this.model.getNodeLocation(node);\n\t}\n}\n"]}