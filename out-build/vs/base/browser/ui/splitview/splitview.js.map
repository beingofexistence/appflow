{"version":3,"sources":["file:///workspace/appflow/src/vs/base/browser/ui/splitview/splitview.ts"],"names":[],"mappings":"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","file":"splitview.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, addDisposableListener, append, scheduleAtNextAnimationFrame } from 'vs/base/browser/dom';\nimport { DomEmitter } from 'vs/base/browser/event';\nimport { ISashEvent as IBaseSashEvent, Orientation, Sash, SashState } from 'vs/base/browser/ui/sash/sash';\nimport { SmoothScrollableElement } from 'vs/base/browser/ui/scrollbar/scrollableElement';\nimport { pushToEnd, pushToStart, range } from 'vs/base/common/arrays';\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { combinedDisposable, Disposable, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { clamp } from 'vs/base/common/numbers';\nimport { Scrollable, ScrollbarVisibility, ScrollEvent } from 'vs/base/common/scrollable';\nimport * as types from 'vs/base/common/types';\nimport 'vs/css!./splitview';\nexport { Orientation } from 'vs/base/browser/ui/sash/sash';\n\nexport interface ISplitViewStyles {\n\treadonly separatorBorder: Color;\n}\n\nconst defaultStyles: ISplitViewStyles = {\n\tseparatorBorder: Color.transparent\n};\n\nexport const enum LayoutPriority {\n\tNormal,\n\tLow,\n\tHigh\n}\n\n/**\n * The interface to implement for views within a {@link SplitView}.\n *\n * An optional {@link TLayoutContext layout context type} may be used in order to\n * pass along layout contextual data from the {@link SplitView.layout} method down\n * to each view's {@link IView.layout} calls.\n */\nexport interface IView<TLayoutContext = undefined> {\n\n\t/**\n\t * The DOM element for this view.\n\t */\n\treadonly element: HTMLElement;\n\n\t/**\n\t * A minimum size for this view.\n\t *\n\t * @remarks If none, set it to `0`.\n\t */\n\treadonly minimumSize: number;\n\n\t/**\n\t * A maximum size for this view.\n\t *\n\t * @remarks If none, set it to `Number.POSITIVE_INFINITY`.\n\t */\n\treadonly maximumSize: number;\n\n\t/**\n\t * The priority of the view when the {@link SplitView.resize layout} algorithm\n\t * runs. Views with higher priority will be resized first.\n\t *\n\t * @remarks Only used when `proportionalLayout` is false.\n\t */\n\treadonly priority?: LayoutPriority;\n\n\t/**\n\t * If the {@link SplitView} supports {@link ISplitViewOptions.proportionalLayout proportional layout},\n\t * this property allows for finer control over the proportional layout algorithm, per view.\n\t *\n\t * @defaultValue `true`\n\t */\n\treadonly proportionalLayout?: boolean;\n\n\t/**\n\t * Whether the view will snap whenever the user reaches its minimum size or\n\t * attempts to grow it beyond the minimum size.\n\t *\n\t * @defaultValue `false`\n\t */\n\treadonly snap?: boolean;\n\n\t/**\n\t * View instances are supposed to fire the {@link IView.onDidChange} event whenever\n\t * any of the constraint properties have changed:\n\t *\n\t * - {@link IView.minimumSize}\n\t * - {@link IView.maximumSize}\n\t * - {@link IView.priority}\n\t * - {@link IView.snap}\n\t *\n\t * The SplitView will relayout whenever that happens. The event can optionally emit\n\t * the view's preferred size for that relayout.\n\t */\n\treadonly onDidChange: Event<number | undefined>;\n\n\t/**\n\t * This will be called by the {@link SplitView} during layout. A view meant to\n\t * pass along the layout information down to its descendants.\n\t *\n\t * @param size The size of this view, in pixels.\n\t * @param offset The offset of this view, relative to the start of the {@link SplitView}.\n\t * @param context The optional {@link IView layout context} passed to {@link SplitView.layout}.\n\t */\n\tlayout(size: number, offset: number, context: TLayoutContext | undefined): void;\n\n\t/**\n\t * This will be called by the {@link SplitView} whenever this view is made\n\t * visible or hidden.\n\t *\n\t * @param visible Whether the view becomes visible.\n\t */\n\tsetVisible?(visible: boolean): void;\n}\n\n/**\n * A descriptor for a {@link SplitView} instance.\n */\nexport interface ISplitViewDescriptor<TLayoutContext = undefined, TView extends IView<TLayoutContext> = IView<TLayoutContext>> {\n\n\t/**\n\t * The layout size of the {@link SplitView}.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Descriptors for each {@link IView view}.\n\t */\n\treadonly views: {\n\n\t\t/**\n\t\t * Whether the {@link IView view} is visible.\n\t\t *\n\t\t * @defaultValue `true`\n\t\t */\n\t\treadonly visible?: boolean;\n\n\t\t/**\n\t\t * The size of the {@link IView view}.\n\t\t *\n\t\t * @defaultValue `true`\n\t\t */\n\t\treadonly size: number;\n\n\t\t/**\n\t\t * The size of the {@link IView view}.\n\t\t *\n\t\t * @defaultValue `true`\n\t\t */\n\t\treadonly view: TView;\n\t}[];\n}\n\nexport interface ISplitViewOptions<TLayoutContext = undefined, TView extends IView<TLayoutContext> = IView<TLayoutContext>> {\n\n\t/**\n\t * Which axis the views align on.\n\t *\n\t * @defaultValue `Orientation.VERTICAL`\n\t */\n\treadonly orientation?: Orientation;\n\n\t/**\n\t * Styles overriding the {@link defaultStyles default ones}.\n\t */\n\treadonly styles?: ISplitViewStyles;\n\n\t/**\n\t * Make Alt-drag the default drag operation.\n\t */\n\treadonly inverseAltBehavior?: boolean;\n\n\t/**\n\t * Resize each view proportionally when resizing the SplitView.\n\t *\n\t * @defaultValue `true`\n\t */\n\treadonly proportionalLayout?: boolean;\n\n\t/**\n\t * An initial description of this {@link SplitView} instance, allowing\n\t * to initialze all views within the ctor.\n\t */\n\treadonly descriptor?: ISplitViewDescriptor<TLayoutContext, TView>;\n\n\t/**\n\t * The scrollbar visibility setting for whenever the views within\n\t * the {@link SplitView} overflow.\n\t */\n\treadonly scrollbarVisibility?: ScrollbarVisibility;\n\n\t/**\n\t * Override the orthogonal size of sashes.\n\t */\n\treadonly getSashOrthogonalSize?: () => number;\n}\n\ninterface ISashEvent {\n\treadonly sash: Sash;\n\treadonly start: number;\n\treadonly current: number;\n\treadonly alt: boolean;\n}\n\ntype ViewItemSize = number | { cachedVisibleSize: number };\n\nabstract class ViewItem<TLayoutContext, TView extends IView<TLayoutContext>> {\n\n\tprivate _size: number;\n\tset size(size: number) {\n\t\tthis._size = size;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tprivate _cachedVisibleSize: number | undefined = undefined;\n\tget cachedVisibleSize(): number | undefined { return this._cachedVisibleSize; }\n\n\tget visible(): boolean {\n\t\treturn typeof this._cachedVisibleSize === 'undefined';\n\t}\n\n\tsetVisible(visible: boolean, size?: number): void {\n\t\tif (visible === this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (visible) {\n\t\t\tthis.size = clamp(this._cachedVisibleSize!, this.viewMinimumSize, this.viewMaximumSize);\n\t\t\tthis._cachedVisibleSize = undefined;\n\t\t} else {\n\t\t\tthis._cachedVisibleSize = typeof size === 'number' ? size : this.size;\n\t\t\tthis.size = 0;\n\t\t}\n\n\t\tthis.container.classList.toggle('visible', visible);\n\n\t\tthis.view.setVisible?.(visible);\n\t}\n\n\tget minimumSize(): number { return this.visible ? this.view.minimumSize : 0; }\n\tget viewMinimumSize(): number { return this.view.minimumSize; }\n\n\tget maximumSize(): number { return this.visible ? this.view.maximumSize : 0; }\n\tget viewMaximumSize(): number { return this.view.maximumSize; }\n\n\tget priority(): LayoutPriority | undefined { return this.view.priority; }\n\tget proportionalLayout(): boolean { return this.view.proportionalLayout ?? true; }\n\tget snap(): boolean { return !!this.view.snap; }\n\n\tset enabled(enabled: boolean) {\n\t\tthis.container.style.pointerEvents = enabled ? '' : 'none';\n\t}\n\n\tconstructor(\n\t\tprotected container: HTMLElement,\n\t\treadonly view: TView,\n\t\tsize: ViewItemSize,\n\t\tprivate disposable: IDisposable\n\t) {\n\t\tif (typeof size === 'number') {\n\t\t\tthis._size = size;\n\t\t\tthis._cachedVisibleSize = undefined;\n\t\t\tcontainer.classList.add('visible');\n\t\t} else {\n\t\t\tthis._size = 0;\n\t\t\tthis._cachedVisibleSize = size.cachedVisibleSize;\n\t\t}\n\t}\n\n\tlayout(offset: number, layoutContext: TLayoutContext | undefined): void {\n\t\tthis.layoutContainer(offset);\n\t\tthis.view.layout(this.size, offset, layoutContext);\n\t}\n\n\tabstract layoutContainer(offset: number): void;\n\n\tdispose(): void {\n\t\tthis.disposable.dispose();\n\t}\n}\n\nclass VerticalViewItem<TLayoutContext, TView extends IView<TLayoutContext>> extends ViewItem<TLayoutContext, TView> {\n\n\tlayoutContainer(offset: number): void {\n\t\tthis.container.style.top = `${offset}px`;\n\t\tthis.container.style.height = `${this.size}px`;\n\t}\n}\n\nclass HorizontalViewItem<TLayoutContext, TView extends IView<TLayoutContext>> extends ViewItem<TLayoutContext, TView> {\n\n\tlayoutContainer(offset: number): void {\n\t\tthis.container.style.left = `${offset}px`;\n\t\tthis.container.style.width = `${this.size}px`;\n\t}\n}\n\ninterface ISashItem {\n\tsash: Sash;\n\tdisposable: IDisposable;\n}\n\ninterface ISashDragSnapState {\n\treadonly index: number;\n\treadonly limitDelta: number;\n\treadonly size: number;\n}\n\ninterface ISashDragState {\n\tindex: number;\n\tstart: number;\n\tcurrent: number;\n\tsizes: number[];\n\tminDelta: number;\n\tmaxDelta: number;\n\talt: boolean;\n\tsnapBefore: ISashDragSnapState | undefined;\n\tsnapAfter: ISashDragSnapState | undefined;\n\tdisposable: IDisposable;\n}\n\nenum State {\n\tIdle,\n\tBusy\n}\n\n/**\n * When adding or removing views, uniformly distribute the entire split view space among\n * all views.\n */\nexport type DistributeSizing = { type: 'distribute' };\n\n/**\n * When adding a view, make space for it by reducing the size of another view,\n * indexed by the provided `index`.\n */\nexport type SplitSizing = { type: 'split'; index: number };\n\n/**\n * When adding a view, use DistributeSizing when all pre-existing views are\n * distributed evenly, otherwise use SplitSizing.\n */\nexport type AutoSizing = { type: 'auto'; index: number };\n\n/**\n * When adding or removing views, assume the view is invisible.\n */\nexport type InvisibleSizing = { type: 'invisible'; cachedVisibleSize: number };\n\n/**\n * When adding or removing views, the sizing provides fine grained\n * control over how other views get resized.\n */\nexport type Sizing = DistributeSizing | SplitSizing | AutoSizing | InvisibleSizing;\n\nexport namespace Sizing {\n\n\t/**\n\t * When adding or removing views, distribute the delta space among\n\t * all other views.\n\t */\n\texport const Distribute: DistributeSizing = { type: 'distribute' };\n\n\t/**\n\t * When adding or removing views, split the delta space with another\n\t * specific view, indexed by the provided `index`.\n\t */\n\texport function Split(index: number): SplitSizing { return { type: 'split', index }; }\n\n\t/**\n\t * When adding a view, use DistributeSizing when all pre-existing views are\n\t * distributed evenly, otherwise use SplitSizing.\n\t */\n\texport function Auto(index: number): AutoSizing { return { type: 'auto', index }; }\n\n\t/**\n\t * When adding or removing views, assume the view is invisible.\n\t */\n\texport function Invisible(cachedVisibleSize: number): InvisibleSizing { return { type: 'invisible', cachedVisibleSize }; }\n}\n\n/**\n * The {@link SplitView} is the UI component which implements a one dimensional\n * flex-like layout algorithm for a collection of {@link IView} instances, which\n * are essentially HTMLElement instances with the following size constraints:\n *\n * - {@link IView.minimumSize}\n * - {@link IView.maximumSize}\n * - {@link IView.priority}\n * - {@link IView.snap}\n *\n * In case the SplitView doesn't have enough size to fit all views, it will overflow\n * its content with a scrollbar.\n *\n * In between each pair of views there will be a {@link Sash} allowing the user\n * to resize the views, making sure the constraints are respected.\n *\n * An optional {@link TLayoutContext layout context type} may be used in order to\n * pass along layout contextual data from the {@link SplitView.layout} method down\n * to each view's {@link IView.layout} calls.\n *\n * Features:\n * - Flex-like layout algorithm\n * - Snap support\n * - Orthogonal sash support, for corner sashes\n * - View hide/show support\n * - View swap/move support\n * - Alt key modifier behavior, macOS style\n */\nexport class SplitView<TLayoutContext = undefined, TView extends IView<TLayoutContext> = IView<TLayoutContext>> extends Disposable {\n\n\t/**\n\t * This {@link SplitView}'s orientation.\n\t */\n\treadonly orientation: Orientation;\n\n\t/**\n\t * The DOM element representing this {@link SplitView}.\n\t */\n\treadonly el: HTMLElement;\n\n\tprivate sashContainer: HTMLElement;\n\tprivate viewContainer: HTMLElement;\n\tprivate scrollable: Scrollable;\n\tprivate scrollableElement: SmoothScrollableElement;\n\tprivate size = 0;\n\tprivate layoutContext: TLayoutContext | undefined;\n\tprivate contentSize = 0;\n\tprivate proportions: (number | undefined)[] | undefined = undefined;\n\tprivate viewItems: ViewItem<TLayoutContext, TView>[] = [];\n\tsashItems: ISashItem[] = []; // used in tests\n\tprivate sashDragState: ISashDragState | undefined;\n\tprivate state: State = State.Idle;\n\tprivate inverseAltBehavior: boolean;\n\tprivate proportionalLayout: boolean;\n\tprivate readonly getSashOrthogonalSize: { (): number } | undefined;\n\n\tprivate _onDidSashChange = this._register(new Emitter<number>());\n\tprivate _onDidSashReset = this._register(new Emitter<number>());\n\tprivate _orthogonalStartSash: Sash | undefined;\n\tprivate _orthogonalEndSash: Sash | undefined;\n\tprivate _startSnappingEnabled = true;\n\tprivate _endSnappingEnabled = true;\n\n\t/**\n\t * Fires whenever the user resizes a {@link Sash sash}.\n\t */\n\treadonly onDidSashChange = this._onDidSashChange.event;\n\n\t/**\n\t * Fires whenever the user double clicks a {@link Sash sash}.\n\t */\n\treadonly onDidSashReset = this._onDidSashReset.event;\n\n\t/**\n\t * Fires whenever the split view is scrolled.\n\t */\n\treadonly onDidScroll: Event<ScrollEvent>;\n\n\t/**\n\t * The amount of views in this {@link SplitView}.\n\t */\n\tget length(): number {\n\t\treturn this.viewItems.length;\n\t}\n\n\t/**\n\t * The minimum size of this {@link SplitView}.\n\t */\n\tget minimumSize(): number {\n\t\treturn this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n\t}\n\n\t/**\n\t * The maximum size of this {@link SplitView}.\n\t */\n\tget maximumSize(): number {\n\t\treturn this.length === 0 ? Number.POSITIVE_INFINITY : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n\t}\n\n\tget orthogonalStartSash(): Sash | undefined { return this._orthogonalStartSash; }\n\tget orthogonalEndSash(): Sash | undefined { return this._orthogonalEndSash; }\n\tget startSnappingEnabled(): boolean { return this._startSnappingEnabled; }\n\tget endSnappingEnabled(): boolean { return this._endSnappingEnabled; }\n\n\t/**\n\t * A reference to a sash, perpendicular to all sashes in this {@link SplitView},\n\t * located at the left- or top-most side of the SplitView.\n\t * Corner sashes will be created automatically at the intersections.\n\t */\n\tset orthogonalStartSash(sash: Sash | undefined) {\n\t\tfor (const sashItem of this.sashItems) {\n\t\t\tsashItem.sash.orthogonalStartSash = sash;\n\t\t}\n\n\t\tthis._orthogonalStartSash = sash;\n\t}\n\n\t/**\n\t * A reference to a sash, perpendicular to all sashes in this {@link SplitView},\n\t * located at the right- or bottom-most side of the SplitView.\n\t * Corner sashes will be created automatically at the intersections.\n\t */\n\tset orthogonalEndSash(sash: Sash | undefined) {\n\t\tfor (const sashItem of this.sashItems) {\n\t\t\tsashItem.sash.orthogonalEndSash = sash;\n\t\t}\n\n\t\tthis._orthogonalEndSash = sash;\n\t}\n\n\t/**\n\t * The internal sashes within this {@link SplitView}.\n\t */\n\tget sashes(): readonly Sash[] {\n\t\treturn this.sashItems.map(s => s.sash);\n\t}\n\n\t/**\n\t * Enable/disable snapping at the beginning of this {@link SplitView}.\n\t */\n\tset startSnappingEnabled(startSnappingEnabled: boolean) {\n\t\tif (this._startSnappingEnabled === startSnappingEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._startSnappingEnabled = startSnappingEnabled;\n\t\tthis.updateSashEnablement();\n\t}\n\n\t/**\n\t * Enable/disable snapping at the end of this {@link SplitView}.\n\t */\n\tset endSnappingEnabled(endSnappingEnabled: boolean) {\n\t\tif (this._endSnappingEnabled === endSnappingEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._endSnappingEnabled = endSnappingEnabled;\n\t\tthis.updateSashEnablement();\n\t}\n\n\t/**\n\t * Create a new {@link SplitView} instance.\n\t */\n\tconstructor(container: HTMLElement, options: ISplitViewOptions<TLayoutContext, TView> = {}) {\n\t\tsuper();\n\n\t\tthis.orientation = options.orientation ?? Orientation.VERTICAL;\n\t\tthis.inverseAltBehavior = options.inverseAltBehavior ?? false;\n\t\tthis.proportionalLayout = options.proportionalLayout ?? true;\n\t\tthis.getSashOrthogonalSize = options.getSashOrthogonalSize;\n\n\t\tthis.el = document.createElement('div');\n\t\tthis.el.classList.add('monaco-split-view2');\n\t\tthis.el.classList.add(this.orientation === Orientation.VERTICAL ? 'vertical' : 'horizontal');\n\t\tcontainer.appendChild(this.el);\n\n\t\tthis.sashContainer = append(this.el, $('.sash-container'));\n\t\tthis.viewContainer = $('.split-view-container');\n\n\t\tthis.scrollable = this._register(new Scrollable({\n\t\t\tforceIntegerValues: true,\n\t\t\tsmoothScrollDuration: 125,\n\t\t\tscheduleAtNextAnimationFrame\n\t\t}));\n\t\tthis.scrollableElement = this._register(new SmoothScrollableElement(this.viewContainer, {\n\t\t\tvertical: this.orientation === Orientation.VERTICAL ? (options.scrollbarVisibility ?? ScrollbarVisibility.Auto) : ScrollbarVisibility.Hidden,\n\t\t\thorizontal: this.orientation === Orientation.HORIZONTAL ? (options.scrollbarVisibility ?? ScrollbarVisibility.Auto) : ScrollbarVisibility.Hidden\n\t\t}, this.scrollable));\n\n\t\t// https://github.com/microsoft/vscode/issues/157737\n\t\tconst onDidScrollViewContainer = this._register(new DomEmitter(this.viewContainer, 'scroll')).event;\n\t\tthis._register(onDidScrollViewContainer(_ => {\n\t\t\tconst position = this.scrollableElement.getScrollPosition();\n\t\t\tconst scrollLeft = Math.abs(this.viewContainer.scrollLeft - position.scrollLeft) <= 1 ? undefined : this.viewContainer.scrollLeft;\n\t\t\tconst scrollTop = Math.abs(this.viewContainer.scrollTop - position.scrollTop) <= 1 ? undefined : this.viewContainer.scrollTop;\n\n\t\t\tif (scrollLeft !== undefined || scrollTop !== undefined) {\n\t\t\t\tthis.scrollableElement.setScrollPosition({ scrollLeft, scrollTop });\n\t\t\t}\n\t\t}));\n\n\t\tthis.onDidScroll = this.scrollableElement.onScroll;\n\t\tthis._register(this.onDidScroll(e => {\n\t\t\tif (e.scrollTopChanged) {\n\t\t\t\tthis.viewContainer.scrollTop = e.scrollTop;\n\t\t\t}\n\n\t\t\tif (e.scrollLeftChanged) {\n\t\t\t\tthis.viewContainer.scrollLeft = e.scrollLeft;\n\t\t\t}\n\t\t}));\n\n\t\tappend(this.el, this.scrollableElement.getDomNode());\n\n\t\tthis.style(options.styles || defaultStyles);\n\n\t\t// We have an existing set of view, add them now\n\t\tif (options.descriptor) {\n\t\t\tthis.size = options.descriptor.size;\n\t\t\toptions.descriptor.views.forEach((viewDescriptor, index) => {\n\t\t\t\tconst sizing = types.isUndefined(viewDescriptor.visible) || viewDescriptor.visible ? viewDescriptor.size : { type: 'invisible', cachedVisibleSize: viewDescriptor.size } as InvisibleSizing;\n\n\t\t\t\tconst view = viewDescriptor.view;\n\t\t\t\tthis.doAddView(view, sizing, index, true);\n\t\t\t});\n\n\t\t\t// Initialize content size and proportions for first layout\n\t\t\tthis.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n\t\t\tthis.saveProportions();\n\t\t}\n\t}\n\n\tstyle(styles: ISplitViewStyles): void {\n\t\tif (styles.separatorBorder.isTransparent()) {\n\t\t\tthis.el.classList.remove('separator-border');\n\t\t\tthis.el.style.removeProperty('--separator-border');\n\t\t} else {\n\t\t\tthis.el.classList.add('separator-border');\n\t\t\tthis.el.style.setProperty('--separator-border', styles.separatorBorder.toString());\n\t\t}\n\t}\n\n\t/**\n\t * Add a {@link IView view} to this {@link SplitView}.\n\t *\n\t * @param view The view to add.\n\t * @param size Either a fixed size, or a dynamic {@link Sizing} strategy.\n\t * @param index The index to insert the view on.\n\t * @param skipLayout Whether layout should be skipped.\n\t */\n\taddView(view: TView, size: number | Sizing, index = this.viewItems.length, skipLayout?: boolean): void {\n\t\tthis.doAddView(view, size, index, skipLayout);\n\t}\n\n\t/**\n\t * Remove a {@link IView view} from this {@link SplitView}.\n\t *\n\t * @param index The index where the {@link IView view} is located.\n\t * @param sizing Whether to distribute other {@link IView view}'s sizes.\n\t */\n\tremoveView(index: number, sizing?: Sizing): TView {\n\t\tif (this.state !== State.Idle) {\n\t\t\tthrow new Error('Cant modify splitview');\n\t\t}\n\n\t\tthis.state = State.Busy;\n\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\tthrow new Error('Index out of bounds');\n\t\t}\n\n\t\tif (sizing?.type === 'auto') {\n\t\t\tif (this.areViewsDistributed()) {\n\t\t\t\tsizing = { type: 'distribute' };\n\t\t\t} else {\n\t\t\t\tsizing = { type: 'split', index: sizing.index };\n\t\t\t}\n\t\t}\n\n\t\t// Save referene view, in case of `split` sizing\n\t\tconst referenceViewItem = sizing?.type === 'split' ? this.viewItems[sizing.index] : undefined;\n\n\t\t// Remove view\n\t\tconst viewItemToRemove = this.viewItems.splice(index, 1)[0];\n\n\t\t// Resize reference view, in case of `split` sizing\n\t\tif (referenceViewItem) {\n\t\t\treferenceViewItem.size += viewItemToRemove.size;\n\t\t}\n\n\t\t// Remove sash\n\t\tif (this.viewItems.length >= 1) {\n\t\t\tconst sashIndex = Math.max(index - 1, 0);\n\t\t\tconst sashItem = this.sashItems.splice(sashIndex, 1)[0];\n\t\t\tsashItem.disposable.dispose();\n\t\t}\n\n\t\tthis.relayout();\n\t\tthis.state = State.Idle;\n\n\t\tif (sizing?.type === 'distribute') {\n\t\t\tthis.distributeViewSizes();\n\t\t}\n\n\t\tconst result = viewItemToRemove.view;\n\t\tviewItemToRemove.dispose();\n\t\treturn result;\n\t}\n\n\tremoveAllViews(): TView[] {\n\t\tif (this.state !== State.Idle) {\n\t\t\tthrow new Error('Cant modify splitview');\n\t\t}\n\n\t\tthis.state = State.Busy;\n\n\t\tconst viewItems = this.viewItems.splice(0, this.viewItems.length);\n\n\t\tfor (const viewItem of viewItems) {\n\t\t\tviewItem.dispose();\n\t\t}\n\n\t\tconst sashItems = this.sashItems.splice(0, this.sashItems.length);\n\n\t\tfor (const sashItem of sashItems) {\n\t\t\tsashItem.disposable.dispose();\n\t\t}\n\n\t\tthis.relayout();\n\t\tthis.state = State.Idle;\n\n\t\treturn viewItems.map(i => i.view);\n\t}\n\n\t/**\n\t * Move a {@link IView view} to a different index.\n\t *\n\t * @param from The source index.\n\t * @param to The target index.\n\t */\n\tmoveView(from: number, to: number): void {\n\t\tif (this.state !== State.Idle) {\n\t\t\tthrow new Error('Cant modify splitview');\n\t\t}\n\n\t\tconst cachedVisibleSize = this.getViewCachedVisibleSize(from);\n\t\tconst sizing = typeof cachedVisibleSize === 'undefined' ? this.getViewSize(from) : Sizing.Invisible(cachedVisibleSize);\n\t\tconst view = this.removeView(from);\n\t\tthis.addView(view, sizing, to);\n\t}\n\n\n\t/**\n\t * Swap two {@link IView views}.\n\t *\n\t * @param from The source index.\n\t * @param to The target index.\n\t */\n\tswapViews(from: number, to: number): void {\n\t\tif (this.state !== State.Idle) {\n\t\t\tthrow new Error('Cant modify splitview');\n\t\t}\n\n\t\tif (from > to) {\n\t\t\treturn this.swapViews(to, from);\n\t\t}\n\n\t\tconst fromSize = this.getViewSize(from);\n\t\tconst toSize = this.getViewSize(to);\n\t\tconst toView = this.removeView(to);\n\t\tconst fromView = this.removeView(from);\n\n\t\tthis.addView(toView, fromSize, from);\n\t\tthis.addView(fromView, toSize, to);\n\t}\n\n\t/**\n\t * Returns whether the {@link IView view} is visible.\n\t *\n\t * @param index The {@link IView view} index.\n\t */\n\tisViewVisible(index: number): boolean {\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\tthrow new Error('Index out of bounds');\n\t\t}\n\n\t\tconst viewItem = this.viewItems[index];\n\t\treturn viewItem.visible;\n\t}\n\n\t/**\n\t * Set a {@link IView view}'s visibility.\n\t *\n\t * @param index The {@link IView view} index.\n\t * @param visible Whether the {@link IView view} should be visible.\n\t */\n\tsetViewVisible(index: number, visible: boolean): void {\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\tthrow new Error('Index out of bounds');\n\t\t}\n\n\t\tconst viewItem = this.viewItems[index];\n\t\tviewItem.setVisible(visible);\n\n\t\tthis.distributeEmptySpace(index);\n\t\tthis.layoutViews();\n\t\tthis.saveProportions();\n\t}\n\n\t/**\n\t * Returns the {@link IView view}'s size previously to being hidden.\n\t *\n\t * @param index The {@link IView view} index.\n\t */\n\tgetViewCachedVisibleSize(index: number): number | undefined {\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\tthrow new Error('Index out of bounds');\n\t\t}\n\n\t\tconst viewItem = this.viewItems[index];\n\t\treturn viewItem.cachedVisibleSize;\n\t}\n\n\t/**\n\t * Layout the {@link SplitView}.\n\t *\n\t * @param size The entire size of the {@link SplitView}.\n\t * @param layoutContext An optional layout context to pass along to {@link IView views}.\n\t */\n\tlayout(size: number, layoutContext?: TLayoutContext): void {\n\t\tconst previousSize = Math.max(this.size, this.contentSize);\n\t\tthis.size = size;\n\t\tthis.layoutContext = layoutContext;\n\n\t\tif (!this.proportions) {\n\t\t\tconst indexes = range(this.viewItems.length);\n\t\t\tconst lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === LayoutPriority.Low);\n\t\t\tconst highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === LayoutPriority.High);\n\n\t\t\tthis.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n\t\t} else {\n\t\t\tlet total = 0;\n\n\t\t\tfor (let i = 0; i < this.viewItems.length; i++) {\n\t\t\t\tconst item = this.viewItems[i];\n\t\t\t\tconst proportion = this.proportions[i];\n\n\t\t\t\tif (typeof proportion === 'number') {\n\t\t\t\t\ttotal += proportion;\n\t\t\t\t} else {\n\t\t\t\t\tsize -= item.size;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < this.viewItems.length; i++) {\n\t\t\t\tconst item = this.viewItems[i];\n\t\t\t\tconst proportion = this.proportions[i];\n\n\t\t\t\tif (typeof proportion === 'number') {\n\t\t\t\t\titem.size = clamp(Math.round(proportion * size / total), item.minimumSize, item.maximumSize);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.distributeEmptySpace();\n\t\tthis.layoutViews();\n\t}\n\n\tprivate saveProportions(): void {\n\t\tif (this.proportionalLayout && this.contentSize > 0) {\n\t\t\tthis.proportions = this.viewItems.map(i => i.proportionalLayout ? i.size / this.contentSize : undefined);\n\t\t}\n\t}\n\n\tprivate onSashStart({ sash, start, alt }: ISashEvent): void {\n\t\tfor (const item of this.viewItems) {\n\t\t\titem.enabled = false;\n\t\t}\n\n\t\tconst index = this.sashItems.findIndex(item => item.sash === sash);\n\n\t\t// This way, we can press Alt while we resize a sash, macOS style!\n\t\tconst disposable = combinedDisposable(\n\t\t\taddDisposableListener(document.body, 'keydown', e => resetSashDragState(this.sashDragState!.current, e.altKey)),\n\t\t\taddDisposableListener(document.body, 'keyup', () => resetSashDragState(this.sashDragState!.current, false))\n\t\t);\n\n\t\tconst resetSashDragState = (start: number, alt: boolean) => {\n\t\t\tconst sizes = this.viewItems.map(i => i.size);\n\t\t\tlet minDelta = Number.NEGATIVE_INFINITY;\n\t\t\tlet maxDelta = Number.POSITIVE_INFINITY;\n\n\t\t\tif (this.inverseAltBehavior) {\n\t\t\t\talt = !alt;\n\t\t\t}\n\n\t\t\tif (alt) {\n\t\t\t\t// When we're using the last sash with Alt, we're resizing\n\t\t\t\t// the view to the left/up, instead of right/down as usual\n\t\t\t\t// Thus, we must do the inverse of the usual\n\t\t\t\tconst isLastSash = index === this.sashItems.length - 1;\n\n\t\t\t\tif (isLastSash) {\n\t\t\t\t\tconst viewItem = this.viewItems[index];\n\t\t\t\t\tminDelta = (viewItem.minimumSize - viewItem.size) / 2;\n\t\t\t\t\tmaxDelta = (viewItem.maximumSize - viewItem.size) / 2;\n\t\t\t\t} else {\n\t\t\t\t\tconst viewItem = this.viewItems[index + 1];\n\t\t\t\t\tminDelta = (viewItem.size - viewItem.maximumSize) / 2;\n\t\t\t\t\tmaxDelta = (viewItem.size - viewItem.minimumSize) / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet snapBefore: ISashDragSnapState | undefined;\n\t\t\tlet snapAfter: ISashDragSnapState | undefined;\n\n\t\t\tif (!alt) {\n\t\t\t\tconst upIndexes = range(index, -1);\n\t\t\t\tconst downIndexes = range(index + 1, this.viewItems.length);\n\t\t\t\tconst minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n\t\t\t\tconst maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n\t\t\t\tconst maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].minimumSize), 0);\n\t\t\t\tconst minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].viewMaximumSize), 0);\n\t\t\t\tconst minDelta = Math.max(minDeltaUp, minDeltaDown);\n\t\t\t\tconst maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n\t\t\t\tconst snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n\t\t\t\tconst snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n\n\t\t\t\tif (typeof snapBeforeIndex === 'number') {\n\t\t\t\t\tconst viewItem = this.viewItems[snapBeforeIndex];\n\t\t\t\t\tconst halfSize = Math.floor(viewItem.viewMinimumSize / 2);\n\n\t\t\t\t\tsnapBefore = {\n\t\t\t\t\t\tindex: snapBeforeIndex,\n\t\t\t\t\t\tlimitDelta: viewItem.visible ? minDelta - halfSize : minDelta + halfSize,\n\t\t\t\t\t\tsize: viewItem.size\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (typeof snapAfterIndex === 'number') {\n\t\t\t\t\tconst viewItem = this.viewItems[snapAfterIndex];\n\t\t\t\t\tconst halfSize = Math.floor(viewItem.viewMinimumSize / 2);\n\n\t\t\t\t\tsnapAfter = {\n\t\t\t\t\t\tindex: snapAfterIndex,\n\t\t\t\t\t\tlimitDelta: viewItem.visible ? maxDelta + halfSize : maxDelta - halfSize,\n\t\t\t\t\t\tsize: viewItem.size\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.sashDragState = { start, current: start, index, sizes, minDelta, maxDelta, alt, snapBefore, snapAfter, disposable };\n\t\t};\n\n\t\tresetSashDragState(start, alt);\n\t}\n\n\tprivate onSashChange({ current }: ISashEvent): void {\n\t\tconst { index, start, sizes, alt, minDelta, maxDelta, snapBefore, snapAfter } = this.sashDragState!;\n\t\tthis.sashDragState!.current = current;\n\n\t\tconst delta = current - start;\n\t\tconst newDelta = this.resize(index, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n\n\t\tif (alt) {\n\t\t\tconst isLastSash = index === this.sashItems.length - 1;\n\t\t\tconst newSizes = this.viewItems.map(i => i.size);\n\t\t\tconst viewItemIndex = isLastSash ? index : index + 1;\n\t\t\tconst viewItem = this.viewItems[viewItemIndex];\n\t\t\tconst newMinDelta = viewItem.size - viewItem.maximumSize;\n\t\t\tconst newMaxDelta = viewItem.size - viewItem.minimumSize;\n\t\t\tconst resizeIndex = isLastSash ? index - 1 : index + 1;\n\n\t\t\tthis.resize(resizeIndex, -newDelta, newSizes, undefined, undefined, newMinDelta, newMaxDelta);\n\t\t}\n\n\t\tthis.distributeEmptySpace();\n\t\tthis.layoutViews();\n\t}\n\n\tprivate onSashEnd(index: number): void {\n\t\tthis._onDidSashChange.fire(index);\n\t\tthis.sashDragState!.disposable.dispose();\n\t\tthis.saveProportions();\n\n\t\tfor (const item of this.viewItems) {\n\t\t\titem.enabled = true;\n\t\t}\n\t}\n\n\tprivate onViewChange(item: ViewItem<TLayoutContext, TView>, size: number | undefined): void {\n\t\tconst index = this.viewItems.indexOf(item);\n\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tsize = typeof size === 'number' ? size : item.size;\n\t\tsize = clamp(size, item.minimumSize, item.maximumSize);\n\n\t\tif (this.inverseAltBehavior && index > 0) {\n\t\t\t// In this case, we want the view to grow or shrink both sides equally\n\t\t\t// so we just resize the \"left\" side by half and let `resize` do the clamping magic\n\t\t\tthis.resize(index - 1, Math.floor((item.size - size) / 2));\n\t\t\tthis.distributeEmptySpace();\n\t\t\tthis.layoutViews();\n\t\t} else {\n\t\t\titem.size = size;\n\t\t\tthis.relayout([index], undefined);\n\t\t}\n\t}\n\n\t/**\n\t * Resize a {@link IView view} within the {@link SplitView}.\n\t *\n\t * @param index The {@link IView view} index.\n\t * @param size The {@link IView view} size.\n\t */\n\tresizeView(index: number, size: number): void {\n\t\tif (this.state !== State.Idle) {\n\t\t\tthrow new Error('Cant modify splitview');\n\t\t}\n\n\t\tthis.state = State.Busy;\n\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst indexes = range(this.viewItems.length).filter(i => i !== index);\n\t\tconst lowPriorityIndexes = [...indexes.filter(i => this.viewItems[i].priority === LayoutPriority.Low), index];\n\t\tconst highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === LayoutPriority.High);\n\n\t\tconst item = this.viewItems[index];\n\t\tsize = Math.round(size);\n\t\tsize = clamp(size, item.minimumSize, Math.min(item.maximumSize, this.size));\n\n\t\titem.size = size;\n\t\tthis.relayout(lowPriorityIndexes, highPriorityIndexes);\n\t\tthis.state = State.Idle;\n\t}\n\n\t/**\n\t * Returns whether all other {@link IView views} are at their minimum size.\n\t */\n\tisViewSizeMaximized(index: number): boolean {\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (const item of this.viewItems) {\n\t\t\tif (item !== this.viewItems[index] && item.size > item.minimumSize) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Distribute the entire {@link SplitView} size among all {@link IView views}.\n\t */\n\tdistributeViewSizes(): void {\n\t\tconst flexibleViewItems: ViewItem<TLayoutContext, TView>[] = [];\n\t\tlet flexibleSize = 0;\n\n\t\tfor (const item of this.viewItems) {\n\t\t\tif (item.maximumSize - item.minimumSize > 0) {\n\t\t\t\tflexibleViewItems.push(item);\n\t\t\t\tflexibleSize += item.size;\n\t\t\t}\n\t\t}\n\n\t\tconst size = Math.floor(flexibleSize / flexibleViewItems.length);\n\n\t\tfor (const item of flexibleViewItems) {\n\t\t\titem.size = clamp(size, item.minimumSize, item.maximumSize);\n\t\t}\n\n\t\tconst indexes = range(this.viewItems.length);\n\t\tconst lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === LayoutPriority.Low);\n\t\tconst highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === LayoutPriority.High);\n\n\t\tthis.relayout(lowPriorityIndexes, highPriorityIndexes);\n\t}\n\n\t/**\n\t * Returns the size of a {@link IView view}.\n\t */\n\tgetViewSize(index: number): number {\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn this.viewItems[index].size;\n\t}\n\n\tprivate doAddView(view: TView, size: number | Sizing, index = this.viewItems.length, skipLayout?: boolean): void {\n\t\tif (this.state !== State.Idle) {\n\t\t\tthrow new Error('Cant modify splitview');\n\t\t}\n\n\t\tthis.state = State.Busy;\n\n\t\t// Add view\n\t\tconst container = $('.split-view-view');\n\n\t\tif (index === this.viewItems.length) {\n\t\t\tthis.viewContainer.appendChild(container);\n\t\t} else {\n\t\t\tthis.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n\t\t}\n\n\t\tconst onChangeDisposable = view.onDidChange(size => this.onViewChange(item, size));\n\t\tconst containerDisposable = toDisposable(() => this.viewContainer.removeChild(container));\n\t\tconst disposable = combinedDisposable(onChangeDisposable, containerDisposable);\n\n\t\tlet viewSize: ViewItemSize;\n\n\t\tif (typeof size === 'number') {\n\t\t\tviewSize = size;\n\t\t} else {\n\t\t\tif (size.type === 'auto') {\n\t\t\t\tif (this.areViewsDistributed()) {\n\t\t\t\t\tsize = { type: 'distribute' };\n\t\t\t\t} else {\n\t\t\t\t\tsize = { type: 'split', index: size.index };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (size.type === 'split') {\n\t\t\t\tviewSize = this.getViewSize(size.index) / 2;\n\t\t\t} else if (size.type === 'invisible') {\n\t\t\t\tviewSize = { cachedVisibleSize: size.cachedVisibleSize };\n\t\t\t} else {\n\t\t\t\tviewSize = view.minimumSize;\n\t\t\t}\n\t\t}\n\n\t\tconst item = this.orientation === Orientation.VERTICAL\n\t\t\t? new VerticalViewItem(container, view, viewSize, disposable)\n\t\t\t: new HorizontalViewItem(container, view, viewSize, disposable);\n\n\t\tthis.viewItems.splice(index, 0, item);\n\n\t\t// Add sash\n\t\tif (this.viewItems.length > 1) {\n\t\t\tconst opts = { orthogonalStartSash: this.orthogonalStartSash, orthogonalEndSash: this.orthogonalEndSash };\n\n\t\t\tconst sash = this.orientation === Orientation.VERTICAL\n\t\t\t\t? new Sash(this.sashContainer, { getHorizontalSashTop: s => this.getSashPosition(s), getHorizontalSashWidth: this.getSashOrthogonalSize }, { ...opts, orientation: Orientation.HORIZONTAL })\n\t\t\t\t: new Sash(this.sashContainer, { getVerticalSashLeft: s => this.getSashPosition(s), getVerticalSashHeight: this.getSashOrthogonalSize }, { ...opts, orientation: Orientation.VERTICAL });\n\n\t\t\tconst sashEventMapper = this.orientation === Orientation.VERTICAL\n\t\t\t\t? (e: IBaseSashEvent) => ({ sash, start: e.startY, current: e.currentY, alt: e.altKey })\n\t\t\t\t: (e: IBaseSashEvent) => ({ sash, start: e.startX, current: e.currentX, alt: e.altKey });\n\n\t\t\tconst onStart = Event.map(sash.onDidStart, sashEventMapper);\n\t\t\tconst onStartDisposable = onStart(this.onSashStart, this);\n\t\t\tconst onChange = Event.map(sash.onDidChange, sashEventMapper);\n\t\t\tconst onChangeDisposable = onChange(this.onSashChange, this);\n\t\t\tconst onEnd = Event.map(sash.onDidEnd, () => this.sashItems.findIndex(item => item.sash === sash));\n\t\t\tconst onEndDisposable = onEnd(this.onSashEnd, this);\n\n\t\t\tconst onDidResetDisposable = sash.onDidReset(() => {\n\t\t\t\tconst index = this.sashItems.findIndex(item => item.sash === sash);\n\t\t\t\tconst upIndexes = range(index, -1);\n\t\t\t\tconst downIndexes = range(index + 1, this.viewItems.length);\n\t\t\t\tconst snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n\t\t\t\tconst snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n\n\t\t\t\tif (typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._onDidSashReset.fire(index);\n\t\t\t});\n\n\t\t\tconst disposable = combinedDisposable(onStartDisposable, onChangeDisposable, onEndDisposable, onDidResetDisposable, sash);\n\t\t\tconst sashItem: ISashItem = { sash, disposable };\n\n\t\t\tthis.sashItems.splice(index - 1, 0, sashItem);\n\t\t}\n\n\t\tcontainer.appendChild(view.element);\n\n\t\tlet highPriorityIndexes: number[] | undefined;\n\n\t\tif (typeof size !== 'number' && size.type === 'split') {\n\t\t\thighPriorityIndexes = [size.index];\n\t\t}\n\n\t\tif (!skipLayout) {\n\t\t\tthis.relayout([index], highPriorityIndexes);\n\t\t}\n\n\t\tthis.state = State.Idle;\n\n\t\tif (!skipLayout && typeof size !== 'number' && size.type === 'distribute') {\n\t\t\tthis.distributeViewSizes();\n\t\t}\n\t}\n\n\tprivate relayout(lowPriorityIndexes?: number[], highPriorityIndexes?: number[]): void {\n\t\tconst contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n\n\t\tthis.resize(this.viewItems.length - 1, this.size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n\t\tthis.distributeEmptySpace();\n\t\tthis.layoutViews();\n\t\tthis.saveProportions();\n\t}\n\n\tprivate resize(\n\t\tindex: number,\n\t\tdelta: number,\n\t\tsizes = this.viewItems.map(i => i.size),\n\t\tlowPriorityIndexes?: number[],\n\t\thighPriorityIndexes?: number[],\n\t\toverloadMinDelta: number = Number.NEGATIVE_INFINITY,\n\t\toverloadMaxDelta: number = Number.POSITIVE_INFINITY,\n\t\tsnapBefore?: ISashDragSnapState,\n\t\tsnapAfter?: ISashDragSnapState\n\t): number {\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst upIndexes = range(index, -1);\n\t\tconst downIndexes = range(index + 1, this.viewItems.length);\n\n\t\tif (highPriorityIndexes) {\n\t\t\tfor (const index of highPriorityIndexes) {\n\t\t\t\tpushToStart(upIndexes, index);\n\t\t\t\tpushToStart(downIndexes, index);\n\t\t\t}\n\t\t}\n\n\t\tif (lowPriorityIndexes) {\n\t\t\tfor (const index of lowPriorityIndexes) {\n\t\t\t\tpushToEnd(upIndexes, index);\n\t\t\t\tpushToEnd(downIndexes, index);\n\t\t\t}\n\t\t}\n\n\t\tconst upItems = upIndexes.map(i => this.viewItems[i]);\n\t\tconst upSizes = upIndexes.map(i => sizes[i]);\n\n\t\tconst downItems = downIndexes.map(i => this.viewItems[i]);\n\t\tconst downSizes = downIndexes.map(i => sizes[i]);\n\n\t\tconst minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n\t\tconst maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].maximumSize - sizes[i]), 0);\n\t\tconst maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].minimumSize), 0);\n\t\tconst minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].maximumSize), 0);\n\t\tconst minDelta = Math.max(minDeltaUp, minDeltaDown, overloadMinDelta);\n\t\tconst maxDelta = Math.min(maxDeltaDown, maxDeltaUp, overloadMaxDelta);\n\n\t\tlet snapped = false;\n\n\t\tif (snapBefore) {\n\t\t\tconst snapView = this.viewItems[snapBefore.index];\n\t\t\tconst visible = delta >= snapBefore.limitDelta;\n\t\t\tsnapped = visible !== snapView.visible;\n\t\t\tsnapView.setVisible(visible, snapBefore.size);\n\t\t}\n\n\t\tif (!snapped && snapAfter) {\n\t\t\tconst snapView = this.viewItems[snapAfter.index];\n\t\t\tconst visible = delta < snapAfter.limitDelta;\n\t\t\tsnapped = visible !== snapView.visible;\n\t\t\tsnapView.setVisible(visible, snapAfter.size);\n\t\t}\n\n\t\tif (snapped) {\n\t\t\treturn this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n\t\t}\n\n\t\tdelta = clamp(delta, minDelta, maxDelta);\n\n\t\tfor (let i = 0, deltaUp = delta; i < upItems.length; i++) {\n\t\t\tconst item = upItems[i];\n\t\t\tconst size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n\t\t\tconst viewDelta = size - upSizes[i];\n\n\t\t\tdeltaUp -= viewDelta;\n\t\t\titem.size = size;\n\t\t}\n\n\t\tfor (let i = 0, deltaDown = delta; i < downItems.length; i++) {\n\t\t\tconst item = downItems[i];\n\t\t\tconst size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n\t\t\tconst viewDelta = size - downSizes[i];\n\n\t\t\tdeltaDown += viewDelta;\n\t\t\titem.size = size;\n\t\t}\n\n\t\treturn delta;\n\t}\n\n\tprivate distributeEmptySpace(lowPriorityIndex?: number): void {\n\t\tconst contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n\t\tlet emptyDelta = this.size - contentSize;\n\n\t\tconst indexes = range(this.viewItems.length - 1, -1);\n\t\tconst lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === LayoutPriority.Low);\n\t\tconst highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === LayoutPriority.High);\n\n\t\tfor (const index of highPriorityIndexes) {\n\t\t\tpushToStart(indexes, index);\n\t\t}\n\n\t\tfor (const index of lowPriorityIndexes) {\n\t\t\tpushToEnd(indexes, index);\n\t\t}\n\n\t\tif (typeof lowPriorityIndex === 'number') {\n\t\t\tpushToEnd(indexes, lowPriorityIndex);\n\t\t}\n\n\t\tfor (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n\t\t\tconst item = this.viewItems[indexes[i]];\n\t\t\tconst size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n\t\t\tconst viewDelta = size - item.size;\n\n\t\t\temptyDelta -= viewDelta;\n\t\t\titem.size = size;\n\t\t}\n\t}\n\n\tprivate layoutViews(): void {\n\t\t// Save new content size\n\t\tthis.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n\n\t\t// Layout views\n\t\tlet offset = 0;\n\n\t\tfor (const viewItem of this.viewItems) {\n\t\t\tviewItem.layout(offset, this.layoutContext);\n\t\t\toffset += viewItem.size;\n\t\t}\n\n\t\t// Layout sashes\n\t\tthis.sashItems.forEach(item => item.sash.layout());\n\t\tthis.updateSashEnablement();\n\t\tthis.updateScrollableElement();\n\t}\n\n\tprivate updateScrollableElement(): void {\n\t\tif (this.orientation === Orientation.VERTICAL) {\n\t\t\tthis.scrollableElement.setScrollDimensions({\n\t\t\t\theight: this.size,\n\t\t\t\tscrollHeight: this.contentSize\n\t\t\t});\n\t\t} else {\n\t\t\tthis.scrollableElement.setScrollDimensions({\n\t\t\t\twidth: this.size,\n\t\t\t\tscrollWidth: this.contentSize\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate updateSashEnablement(): void {\n\t\tlet previous = false;\n\t\tconst collapsesDown = this.viewItems.map(i => previous = (i.size - i.minimumSize > 0) || previous);\n\n\t\tprevious = false;\n\t\tconst expandsDown = this.viewItems.map(i => previous = (i.maximumSize - i.size > 0) || previous);\n\n\t\tconst reverseViews = [...this.viewItems].reverse();\n\t\tprevious = false;\n\t\tconst collapsesUp = reverseViews.map(i => previous = (i.size - i.minimumSize > 0) || previous).reverse();\n\n\t\tprevious = false;\n\t\tconst expandsUp = reverseViews.map(i => previous = (i.maximumSize - i.size > 0) || previous).reverse();\n\n\t\tlet position = 0;\n\t\tfor (let index = 0; index < this.sashItems.length; index++) {\n\t\t\tconst { sash } = this.sashItems[index];\n\t\t\tconst viewItem = this.viewItems[index];\n\t\t\tposition += viewItem.size;\n\n\t\t\tconst min = !(collapsesDown[index] && expandsUp[index + 1]);\n\t\t\tconst max = !(expandsDown[index] && collapsesUp[index + 1]);\n\n\t\t\tif (min && max) {\n\t\t\t\tconst upIndexes = range(index, -1);\n\t\t\t\tconst downIndexes = range(index + 1, this.viewItems.length);\n\t\t\t\tconst snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n\t\t\t\tconst snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n\n\t\t\t\tconst snappedBefore = typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible;\n\t\t\t\tconst snappedAfter = typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible;\n\n\t\t\t\tif (snappedBefore && collapsesUp[index] && (position > 0 || this.startSnappingEnabled)) {\n\t\t\t\t\tsash.state = SashState.AtMinimum;\n\t\t\t\t} else if (snappedAfter && collapsesDown[index] && (position < this.contentSize || this.endSnappingEnabled)) {\n\t\t\t\t\tsash.state = SashState.AtMaximum;\n\t\t\t\t} else {\n\t\t\t\t\tsash.state = SashState.Disabled;\n\t\t\t\t}\n\t\t\t} else if (min && !max) {\n\t\t\t\tsash.state = SashState.AtMinimum;\n\t\t\t} else if (!min && max) {\n\t\t\t\tsash.state = SashState.AtMaximum;\n\t\t\t} else {\n\t\t\t\tsash.state = SashState.Enabled;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getSashPosition(sash: Sash): number {\n\t\tlet position = 0;\n\n\t\tfor (let i = 0; i < this.sashItems.length; i++) {\n\t\t\tposition += this.viewItems[i].size;\n\n\t\t\tif (this.sashItems[i].sash === sash) {\n\t\t\t\treturn position;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tprivate findFirstSnapIndex(indexes: number[]): number | undefined {\n\t\t// visible views first\n\t\tfor (const index of indexes) {\n\t\t\tconst viewItem = this.viewItems[index];\n\n\t\t\tif (!viewItem.visible) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (viewItem.snap) {\n\t\t\t\treturn index;\n\t\t\t}\n\t\t}\n\n\t\t// then, hidden views\n\t\tfor (const index of indexes) {\n\t\t\tconst viewItem = this.viewItems[index];\n\n\t\t\tif (viewItem.visible && viewItem.maximumSize - viewItem.minimumSize > 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tif (!viewItem.visible && viewItem.snap) {\n\t\t\t\treturn index;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate areViewsDistributed() {\n\t\tlet min = undefined, max = undefined;\n\n\t\tfor (const view of this.viewItems) {\n\t\t\tmin = min === undefined ? view.size : Math.min(min, view.size);\n\t\t\tmax = max === undefined ? view.size : Math.max(max, view.size);\n\n\t\t\tif (max - min > 2) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.sashDragState?.disposable.dispose();\n\n\t\tdispose(this.viewItems);\n\t\tthis.viewItems = [];\n\n\t\tthis.sashItems.forEach(i => i.disposable.dispose());\n\t\tthis.sashItems = [];\n\n\t\tsuper.dispose();\n\t}\n}\n"]}