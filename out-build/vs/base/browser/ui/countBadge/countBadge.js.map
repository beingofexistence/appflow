{"version":3,"sources":["file:///workspace/appflow/src/vs/base/browser/ui/countBadge/countBadge.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAkBnF,QAAA,GAAG,GAAsC;QACrD,eAAe,EAAE,SAAS;QAC1B,eAAe,EAAE,SAAS;QAC1B,WAAW,EAAE,SAAS;KACtB,CAAC;IAEF,MAAa,GAAG;QAOf,YAAY,SAAsB,EAAmB,CAA2B,EAAmB,CAAyB;YAAvE,MAAC,GAAD,CAAC,CAA0B;YAAmB,MAAC,GAAD,CAAC,CAAwB;YAJpH,MAAC,GAAe,CAAC,CAAC;YAMzB,IAAI,CAAC,CAAC,GAAS,IAAA,SAAG,EAAI,SAAS,EAAE,IAAA,OAAC,EAAC,qBAAqB,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,CAAC,GAAa,IAAI,CAAC,CAAC,CAAO,WAAW,IAAI,KAAK,CAAC;YACrD,IAAI,CAAC,CAAC,GAAa,IAAI,CAAC,CAAC,CAAO,WAAW,IAAI,EAAE,CAAC;YAClD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAO,KAAK,IAAI,CAAC,CAAC,CAAC;QACxC,CAAC;QAED,QAAQ,CAAC,KAAa;YACrB,IAAI,CAAC,CAAC,GAAO,KAAK,CAAC;YACnB,IAAI,CAAC,CAAC,EAAO,CAAC;QACf,CAAC;QAED,cAAc,CAAC,WAAmB;YACjC,IAAI,CAAC,CAAC,GAAa,WAAW,CAAC;YAC/B,IAAI,CAAC,CAAC,EAAO,CAAC;QACf,CAAC;QAED,cAAc,CAAC,WAAmB;YACjC,IAAI,CAAC,CAAC,GAAa,WAAW,CAAC;YAC/B,IAAI,CAAC,CAAC,EAAO,CAAC;QACf,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,CAAC,CAAO,WAAW,GAAG,IAAA,aAAG,EAAI,IAAI,CAAC,CAAC,EAAY,IAAI,CAAC,CAAC,CAAK,CAAC;YAChE,IAAI,CAAC,CAAC,CAAO,KAAK,GAAG,IAAA,aAAG,EAAI,IAAI,CAAC,CAAC,EAAY,IAAI,CAAC,CAAC,CAAK,CAAC;YAE1D,IAAI,CAAC,CAAC,CAAO,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,CAAM,eAAe,IAAI,EAAE,CAAC;YACvE,IAAI,CAAC,CAAC,CAAO,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAM,eAAe,IAAI,EAAE,CAAC;YAE7D,IAAI,IAAI,CAAC,CAAC,CAAM,WAAW,EAAE;gBAC5B,IAAI,CAAC,CAAC,CAAO,KAAK,CAAC,MAAM,GAAG,aAAa,IAAI,CAAC,CAAC,CAAM,WAAW,EAAE,CAAC;aACnE;QACF,CAAC;KACD;IAzCD,kBAyCC","file":"countBadge.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, append } from 'vs/base/browser/dom';\nimport { format } from 'vs/base/common/strings';\nimport 'vs/css!./countBadge';\n\nexport interface ICountBadgeOptions {\n\treadonly count?: number;\n\treadonly countFormat?: string;\n\treadonly titleFormat?: string;\n}\n\nexport interface ICountBadgeStyles {\n\treadonly badgeBackground: string | undefined;\n\treadonly badgeForeground: string | undefined;\n\treadonly badgeBorder: string | undefined;\n}\n\nexport const unthemedCountStyles: ICountBadgeStyles = {\n\tbadgeBackground: '#4D4D4D',\n\tbadgeForeground: '#FFFFFF',\n\tbadgeBorder: undefined\n};\n\nexport class CountBadge {\n\n\tprivate element: HTMLElement;\n\tprivate count: number = 0;\n\tprivate countFormat: string;\n\tprivate titleFormat: string;\n\n\tconstructor(container: HTMLElement, private readonly options: ICountBadgeOptions, private readonly styles: ICountBadgeStyles) {\n\n\t\tthis.element = append(container, $('.monaco-count-badge'));\n\t\tthis.countFormat = this.options.countFormat || '{0}';\n\t\tthis.titleFormat = this.options.titleFormat || '';\n\t\tthis.setCount(this.options.count || 0);\n\t}\n\n\tsetCount(count: number) {\n\t\tthis.count = count;\n\t\tthis.render();\n\t}\n\n\tsetCountFormat(countFormat: string) {\n\t\tthis.countFormat = countFormat;\n\t\tthis.render();\n\t}\n\n\tsetTitleFormat(titleFormat: string) {\n\t\tthis.titleFormat = titleFormat;\n\t\tthis.render();\n\t}\n\n\tprivate render() {\n\t\tthis.element.textContent = format(this.countFormat, this.count);\n\t\tthis.element.title = format(this.titleFormat, this.count);\n\n\t\tthis.element.style.backgroundColor = this.styles.badgeBackground ?? '';\n\t\tthis.element.style.color = this.styles.badgeForeground ?? '';\n\n\t\tif (this.styles.badgeBorder) {\n\t\t\tthis.element.style.border = `1px solid ${this.styles.badgeBorder}`;\n\t\t}\n\t}\n}\n"]}