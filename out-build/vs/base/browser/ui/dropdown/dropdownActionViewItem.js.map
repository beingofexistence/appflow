{"version":3,"sources":["vs/base/browser/ui/dropdown/dropdownActionViewItem.ts"],"names":[],"mappings":"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","file":"dropdownActionViewItem.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IContextMenuProvider } from 'vs/base/browser/contextmenu';\nimport { $, addDisposableListener, append, EventType, h } from 'vs/base/browser/dom';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { IActionViewItemProvider } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { ActionViewItem, BaseActionViewItem, IActionViewItemOptions, IBaseActionViewItemOptions } from 'vs/base/browser/ui/actionbar/actionViewItems';\nimport { AnchorAlignment } from 'vs/base/browser/ui/contextview/contextview';\nimport { DropdownMenu, IActionProvider, IDropdownMenuOptions, ILabelRenderer } from 'vs/base/browser/ui/dropdown/dropdown';\nimport { Action, IAction, IActionRunner } from 'vs/base/common/actions';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { Emitter } from 'vs/base/common/event';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { ResolvedKeybinding } from 'vs/base/common/keybindings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport 'vs/css!./dropdown';\n\nexport interface IKeybindingProvider {\n\t(action: IAction): ResolvedKeybinding | undefined;\n}\n\nexport interface IAnchorAlignmentProvider {\n\t(): AnchorAlignment;\n}\n\nexport interface IDropdownMenuActionViewItemOptions extends IBaseActionViewItemOptions {\n\treadonly actionViewItemProvider?: IActionViewItemProvider;\n\treadonly keybindingProvider?: IKeybindingProvider;\n\treadonly actionRunner?: IActionRunner;\n\treadonly classNames?: string[] | string;\n\treadonly anchorAlignmentProvider?: IAnchorAlignmentProvider;\n\treadonly menuAsChild?: boolean;\n\treadonly skipTelemetry?: boolean;\n}\n\nexport class DropdownMenuActionViewItem extends BaseActionViewItem {\n\tprivate menuActionsOrProvider: readonly IAction[] | IActionProvider;\n\tprivate dropdownMenu: DropdownMenu | undefined;\n\tprivate contextMenuProvider: IContextMenuProvider;\n\tprivate actionItem: HTMLElement | null = null;\n\n\tprivate _onDidChangeVisibility = this._register(new Emitter<boolean>());\n\treadonly onDidChangeVisibility = this._onDidChangeVisibility.event;\n\n\tprotected override readonly options: IDropdownMenuActionViewItemOptions;\n\n\tconstructor(\n\t\taction: IAction,\n\t\tmenuActionsOrProvider: readonly IAction[] | IActionProvider,\n\t\tcontextMenuProvider: IContextMenuProvider,\n\t\toptions: IDropdownMenuActionViewItemOptions = Object.create(null)\n\t) {\n\t\tsuper(null, action, options);\n\n\t\tthis.menuActionsOrProvider = menuActionsOrProvider;\n\t\tthis.contextMenuProvider = contextMenuProvider;\n\t\tthis.options = options;\n\n\t\tif (this.options.actionRunner) {\n\t\t\tthis.actionRunner = this.options.actionRunner;\n\t\t}\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tthis.actionItem = container;\n\n\t\tconst labelRenderer: ILabelRenderer = (el: HTMLElement): IDisposable | null => {\n\t\t\tthis.element = append(el, $('a.action-label'));\n\n\t\t\tlet classNames: string[] = [];\n\n\t\t\tif (typeof this.options.classNames === 'string') {\n\t\t\t\tclassNames = this.options.classNames.split(/\\s+/g).filter(s => !!s);\n\t\t\t} else if (this.options.classNames) {\n\t\t\t\tclassNames = this.options.classNames;\n\t\t\t}\n\n\t\t\t// todo@aeschli: remove codicon, should come through `this.options.classNames`\n\t\t\tif (!classNames.find(c => c === 'icon')) {\n\t\t\t\tclassNames.push('codicon');\n\t\t\t}\n\n\t\t\tthis.element.classList.add(...classNames);\n\n\t\t\tthis.element.setAttribute('role', 'button');\n\t\t\tthis.element.setAttribute('aria-haspopup', 'true');\n\t\t\tthis.element.setAttribute('aria-expanded', 'false');\n\t\t\tthis.element.title = this._action.label || '';\n\t\t\tthis.element.ariaLabel = this._action.label || '';\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst isActionsArray = Array.isArray(this.menuActionsOrProvider);\n\t\tconst options: IDropdownMenuOptions = {\n\t\t\tcontextMenuProvider: this.contextMenuProvider,\n\t\t\tlabelRenderer: labelRenderer,\n\t\t\tmenuAsChild: this.options.menuAsChild,\n\t\t\tactions: isActionsArray ? this.menuActionsOrProvider as IAction[] : undefined,\n\t\t\tactionProvider: isActionsArray ? undefined : this.menuActionsOrProvider as IActionProvider,\n\t\t\tskipTelemetry: this.options.skipTelemetry\n\t\t};\n\n\t\tthis.dropdownMenu = this._register(new DropdownMenu(container, options));\n\t\tthis._register(this.dropdownMenu.onDidChangeVisibility(visible => {\n\t\t\tthis.element?.setAttribute('aria-expanded', `${visible}`);\n\t\t\tthis._onDidChangeVisibility.fire(visible);\n\t\t}));\n\n\t\tthis.dropdownMenu.menuOptions = {\n\t\t\tactionViewItemProvider: this.options.actionViewItemProvider,\n\t\t\tactionRunner: this.actionRunner,\n\t\t\tgetKeyBinding: this.options.keybindingProvider,\n\t\t\tcontext: this._context\n\t\t};\n\n\t\tif (this.options.anchorAlignmentProvider) {\n\t\t\tconst that = this;\n\n\t\t\tthis.dropdownMenu.menuOptions = {\n\t\t\t\t...this.dropdownMenu.menuOptions,\n\t\t\t\tget anchorAlignment(): AnchorAlignment {\n\t\t\t\t\treturn that.options.anchorAlignmentProvider!();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tthis.updateTooltip();\n\t\tthis.updateEnabled();\n\t}\n\n\tprotected override getTooltip(): string | undefined {\n\t\tlet title: string | null = null;\n\n\t\tif (this.action.tooltip) {\n\t\t\ttitle = this.action.tooltip;\n\t\t} else if (this.action.label) {\n\t\t\ttitle = this.action.label;\n\t\t}\n\n\t\treturn title ?? undefined;\n\t}\n\n\toverride setActionContext(newContext: unknown): void {\n\t\tsuper.setActionContext(newContext);\n\n\t\tif (this.dropdownMenu) {\n\t\t\tif (this.dropdownMenu.menuOptions) {\n\t\t\t\tthis.dropdownMenu.menuOptions.context = newContext;\n\t\t\t} else {\n\t\t\t\tthis.dropdownMenu.menuOptions = { context: newContext };\n\t\t\t}\n\t\t}\n\t}\n\n\tshow(): void {\n\t\tthis.dropdownMenu?.show();\n\t}\n\n\tprotected override updateEnabled(): void {\n\t\tconst disabled = !this.action.enabled;\n\t\tthis.actionItem?.classList.toggle('disabled', disabled);\n\t\tthis.element?.classList.toggle('disabled', disabled);\n\t}\n}\n\nexport interface IActionWithDropdownActionViewItemOptions extends IActionViewItemOptions {\n\treadonly menuActionsOrProvider: readonly IAction[] | IActionProvider;\n\treadonly menuActionClassNames?: string[];\n}\n\nexport class ActionWithDropdownActionViewItem extends ActionViewItem {\n\n\tprotected dropdownMenuActionViewItem: DropdownMenuActionViewItem | undefined;\n\n\tconstructor(\n\t\tcontext: unknown,\n\t\taction: IAction,\n\t\toptions: IActionWithDropdownActionViewItemOptions,\n\t\tprivate readonly contextMenuProvider: IContextMenuProvider\n\t) {\n\t\tsuper(context, action, options);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tif (this.element) {\n\t\t\tthis.element.classList.add('action-dropdown-item');\n\t\t\tconst menuActionsProvider = {\n\t\t\t\tgetActions: () => {\n\t\t\t\t\tconst actionsProvider = (<IActionWithDropdownActionViewItemOptions>this.options).menuActionsOrProvider;\n\t\t\t\t\treturn Array.isArray(actionsProvider) ? actionsProvider : (actionsProvider as IActionProvider).getActions(); // TODO: microsoft/TypeScript#42768\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst menuActionClassNames = (<IActionWithDropdownActionViewItemOptions>this.options).menuActionClassNames || [];\n\t\t\tconst separator = h('div.action-dropdown-item-separator', [h('div', {})]).root;\n\t\t\tseparator.classList.toggle('prominent', menuActionClassNames.includes('prominent'));\n\t\t\tappend(this.element, separator);\n\n\t\t\tthis.dropdownMenuActionViewItem = new DropdownMenuActionViewItem(this._register(new Action('dropdownAction', nls.localize('moreActions', \"More Actions...\"))), menuActionsProvider, this.contextMenuProvider, { classNames: ['dropdown', ...ThemeIcon.asClassNameArray(Codicon.dropDownButton), ...menuActionClassNames] });\n\t\t\tthis.dropdownMenuActionViewItem.render(this.element);\n\n\t\t\tthis._register(addDisposableListener(this.element, EventType.KEY_DOWN, e => {\n\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\tlet handled: boolean = false;\n\t\t\t\tif (this.dropdownMenuActionViewItem?.isFocused() && event.equals(KeyCode.LeftArrow)) {\n\t\t\t\t\thandled = true;\n\t\t\t\t\tthis.dropdownMenuActionViewItem?.blur();\n\t\t\t\t\tthis.focus();\n\t\t\t\t} else if (this.isFocused() && event.equals(KeyCode.RightArrow)) {\n\t\t\t\t\thandled = true;\n\t\t\t\t\tthis.blur();\n\t\t\t\t\tthis.dropdownMenuActionViewItem?.focus();\n\t\t\t\t}\n\t\t\t\tif (handled) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\toverride blur(): void {\n\t\tsuper.blur();\n\t\tthis.dropdownMenuActionViewItem?.blur();\n\t}\n\n\toverride setFocusable(focusable: boolean): void {\n\t\tsuper.setFocusable(focusable);\n\t\tthis.dropdownMenuActionViewItem?.setFocusable(focusable);\n\t}\n}\n"]}