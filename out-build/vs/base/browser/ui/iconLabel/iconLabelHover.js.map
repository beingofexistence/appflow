{"version":3,"sources":["vs/base/browser/ui/iconLabel/iconLabelHover.ts"],"names":[],"mappings":"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","file":"iconLabelHover.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { HoverPosition } from 'vs/base/browser/ui/hover/hoverWidget';\nimport { IHoverDelegate, IHoverDelegateOptions, IHoverDelegateTarget, IHoverWidget } from 'vs/base/browser/ui/iconLabel/iconHoverDelegate';\nimport { TimeoutTimer } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IMarkdownString, isMarkdownString } from 'vs/base/common/htmlContent';\nimport { stripIcons } from 'vs/base/common/iconLabels';\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { isFunction, isString } from 'vs/base/common/types';\nimport { localize } from 'vs/nls';\n\nexport interface ITooltipMarkdownString {\n\tmarkdown: IMarkdownString | string | undefined | ((token: CancellationToken) => Promise<IMarkdownString | string | undefined>);\n\tmarkdownNotSupportedFallback: string | undefined;\n}\n\nexport function setupNativeHover(htmlElement: HTMLElement, tooltip: string | ITooltipMarkdownString | undefined): void {\n\tif (isString(tooltip)) {\n\t\t// Icons don't render in the native hover so we strip them out\n\t\thtmlElement.title = stripIcons(tooltip);\n\t} else if (tooltip?.markdownNotSupportedFallback) {\n\t\thtmlElement.title = tooltip.markdownNotSupportedFallback;\n\t} else {\n\t\thtmlElement.removeAttribute('title');\n\t}\n}\n\ntype IHoverContent = string | ITooltipMarkdownString | HTMLElement | undefined;\ntype IResolvedHoverContent = IMarkdownString | string | HTMLElement | undefined;\n\n/**\n * Copied from src\\vs\\workbench\\services\\hover\\browser\\hover.ts\n * @deprecated Use IHoverService\n */\ninterface IHoverAction {\n\tlabel: string;\n\tcommandId: string;\n\ticonClass?: string;\n\trun(target: HTMLElement): void;\n}\n\nexport interface IUpdatableHoverOptions {\n\tactions?: IHoverAction[];\n\tlinkHandler?(url: string): void;\n}\n\nexport interface ICustomHover extends IDisposable {\n\n\t/**\n\t * Allows to programmatically open the hover.\n\t */\n\tshow(focus?: boolean): void;\n\n\t/**\n\t * Allows to programmatically hide the hover.\n\t */\n\thide(): void;\n\n\t/**\n\t * Updates the contents of the hover.\n\t */\n\tupdate(tooltip: IHoverContent, options?: IUpdatableHoverOptions): void;\n}\n\n\nclass UpdatableHoverWidget implements IDisposable {\n\n\tprivate _hoverWidget: IHoverWidget | undefined;\n\tprivate _cancellationTokenSource: CancellationTokenSource | undefined;\n\n\tconstructor(private hoverDelegate: IHoverDelegate, private target: IHoverDelegateTarget | HTMLElement, private fadeInAnimation: boolean) {\n\t}\n\n\tasync update(content: IHoverContent, focus?: boolean, options?: IUpdatableHoverOptions): Promise<void> {\n\t\tif (this._cancellationTokenSource) {\n\t\t\t// there's an computation ongoing, cancel it\n\t\t\tthis._cancellationTokenSource.dispose(true);\n\t\t\tthis._cancellationTokenSource = undefined;\n\t\t}\n\t\tif (this.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet resolvedContent;\n\t\tif (content === undefined || isString(content) || content instanceof HTMLElement) {\n\t\t\tresolvedContent = content;\n\t\t} else if (!isFunction(content.markdown)) {\n\t\t\tresolvedContent = content.markdown ?? content.markdownNotSupportedFallback;\n\t\t} else {\n\t\t\t// compute the content, potentially long-running\n\n\t\t\t// show 'Loading' if no hover is up yet\n\t\t\tif (!this._hoverWidget) {\n\t\t\t\tthis.show(localize('iconLabel.loading', \"Loading...\"), focus);\n\t\t\t}\n\n\t\t\t// compute the content\n\t\t\tthis._cancellationTokenSource = new CancellationTokenSource();\n\t\t\tconst token = this._cancellationTokenSource.token;\n\t\t\tresolvedContent = await content.markdown(token);\n\t\t\tif (resolvedContent === undefined) {\n\t\t\t\tresolvedContent = content.markdownNotSupportedFallback;\n\t\t\t}\n\n\t\t\tif (this.isDisposed || token.isCancellationRequested) {\n\t\t\t\t// either the widget has been closed in the meantime\n\t\t\t\t// or there has been a new call to `update`\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.show(resolvedContent, focus, options);\n\t}\n\n\tprivate show(content: IResolvedHoverContent, focus?: boolean, options?: IUpdatableHoverOptions): void {\n\t\tconst oldHoverWidget = this._hoverWidget;\n\n\t\tif (this.hasContent(content)) {\n\t\t\tconst hoverOptions: IHoverDelegateOptions = {\n\t\t\t\tcontent,\n\t\t\t\ttarget: this.target,\n\t\t\t\tshowPointer: this.hoverDelegate.placement === 'element',\n\t\t\t\thoverPosition: HoverPosition.BELOW,\n\t\t\t\tskipFadeInAnimation: !this.fadeInAnimation || !!oldHoverWidget, // do not fade in if the hover is already showing\n\t\t\t\t...options\n\t\t\t};\n\n\t\t\tthis._hoverWidget = this.hoverDelegate.showHover(hoverOptions, focus);\n\t\t}\n\t\toldHoverWidget?.dispose();\n\t}\n\n\tprivate hasContent(content: IResolvedHoverContent): content is NonNullable<IResolvedHoverContent> {\n\t\tif (!content) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (isMarkdownString(content)) {\n\t\t\treturn !!content.value;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tget isDisposed() {\n\t\treturn this._hoverWidget?.isDisposed;\n\t}\n\n\tdispose(): void {\n\t\tthis._hoverWidget?.dispose();\n\t\tthis._cancellationTokenSource?.dispose(true);\n\t\tthis._cancellationTokenSource = undefined;\n\t}\n}\n\nexport function setupCustomHover(hoverDelegate: IHoverDelegate, htmlElement: HTMLElement, content: IHoverContent, options?: IUpdatableHoverOptions): ICustomHover {\n\tlet hoverPreparation: IDisposable | undefined;\n\n\tlet hoverWidget: UpdatableHoverWidget | undefined;\n\n\tconst hideHover = (disposeWidget: boolean, disposePreparation: boolean) => {\n\t\tconst hadHover = hoverWidget !== undefined;\n\t\tif (disposeWidget) {\n\t\t\thoverWidget?.dispose();\n\t\t\thoverWidget = undefined;\n\t\t}\n\t\tif (disposePreparation) {\n\t\t\thoverPreparation?.dispose();\n\t\t\thoverPreparation = undefined;\n\t\t}\n\t\tif (hadHover) {\n\t\t\thoverDelegate.onDidHideHover?.();\n\t\t}\n\t};\n\n\tconst triggerShowHover = (delay: number, focus?: boolean, target?: IHoverDelegateTarget) => {\n\t\treturn new TimeoutTimer(async () => {\n\t\t\tif (!hoverWidget || hoverWidget.isDisposed) {\n\t\t\t\thoverWidget = new UpdatableHoverWidget(hoverDelegate, target || htmlElement, delay > 0);\n\t\t\t\tawait hoverWidget.update(content, focus, options);\n\t\t\t}\n\t\t}, delay);\n\t};\n\n\tconst onMouseOver = () => {\n\t\tif (hoverPreparation) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst toDispose: DisposableStore = new DisposableStore();\n\n\t\tconst onMouseLeave = (e: MouseEvent) => hideHover(false, (<any>e).fromElement === htmlElement);\n\t\ttoDispose.add(dom.addDisposableListener(htmlElement, dom.EventType.MOUSE_LEAVE, onMouseLeave, true));\n\n\t\tconst onMouseDown = () => hideHover(true, true);\n\t\ttoDispose.add(dom.addDisposableListener(htmlElement, dom.EventType.MOUSE_DOWN, onMouseDown, true));\n\n\t\tconst target: IHoverDelegateTarget = {\n\t\t\ttargetElements: [htmlElement],\n\t\t\tdispose: () => { }\n\t\t};\n\t\tif (hoverDelegate.placement === undefined || hoverDelegate.placement === 'mouse') {\n\t\t\t// track the mouse position\n\t\t\tconst onMouseMove = (e: MouseEvent) => {\n\t\t\t\ttarget.x = e.x + 10;\n\t\t\t\tif ((e.target instanceof HTMLElement) && e.target.classList.contains('action-label')) {\n\t\t\t\t\thideHover(true, true);\n\t\t\t\t}\n\t\t\t};\n\t\t\ttoDispose.add(dom.addDisposableListener(htmlElement, dom.EventType.MOUSE_MOVE, onMouseMove, true));\n\t\t}\n\t\ttoDispose.add(triggerShowHover(hoverDelegate.delay, false, target));\n\n\t\thoverPreparation = toDispose;\n\t};\n\tconst mouseOverDomEmitter = dom.addDisposableListener(htmlElement, dom.EventType.MOUSE_OVER, onMouseOver, true);\n\tconst hover: ICustomHover = {\n\t\tshow: focus => {\n\t\t\thideHover(false, true); // terminate a ongoing mouse over preparation\n\t\t\ttriggerShowHover(0, focus); // show hover immediately\n\t\t},\n\t\thide: () => {\n\t\t\thideHover(true, true);\n\t\t},\n\t\tupdate: async (newContent, hoverOptions) => {\n\t\t\tcontent = newContent;\n\t\t\tawait hoverWidget?.update(content, undefined, hoverOptions);\n\t\t},\n\t\tdispose: () => {\n\t\t\tmouseOverDomEmitter.dispose();\n\t\t\thideHover(true, true);\n\t\t}\n\t};\n\treturn hover;\n}\n"]}