{"version":3,"sources":["vs/base/browser/ui/toolbar/toolbar.ts"],"names":[],"mappings":"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","file":"toolbar.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IContextMenuProvider } from 'vs/base/browser/contextmenu';\nimport { ActionBar, ActionsOrientation, IActionViewItemProvider } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { AnchorAlignment } from 'vs/base/browser/ui/contextview/contextview';\nimport { DropdownMenuActionViewItem } from 'vs/base/browser/ui/dropdown/dropdownActionViewItem';\nimport { Action, IAction, IActionRunner, SubmenuAction } from 'vs/base/common/actions';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { EventMultiplexer } from 'vs/base/common/event';\nimport { ResolvedKeybinding } from 'vs/base/common/keybindings';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport 'vs/css!./toolbar';\nimport * as nls from 'vs/nls';\n\n\n\nexport interface IToolBarOptions {\n\torientation?: ActionsOrientation;\n\tactionViewItemProvider?: IActionViewItemProvider;\n\tariaLabel?: string;\n\tgetKeyBinding?: (action: IAction) => ResolvedKeybinding | undefined;\n\tactionRunner?: IActionRunner;\n\ttoggleMenuTitle?: string;\n\tanchorAlignmentProvider?: () => AnchorAlignment;\n\trenderDropdownAsChildElement?: boolean;\n\tmoreIcon?: ThemeIcon;\n\tallowContextMenu?: boolean;\n\tskipTelemetry?: boolean;\n\n\t/**\n\t * If true, toggled primary items are highlighted with a background color.\n\t */\n\thighlightToggledItems?: boolean;\n}\n\n/**\n * A widget that combines an action bar for primary actions and a dropdown for secondary actions.\n */\nexport class ToolBar extends Disposable {\n\tprivate options: IToolBarOptions;\n\tprotected readonly actionBar: ActionBar;\n\tprivate toggleMenuAction: ToggleMenuAction;\n\tprivate toggleMenuActionViewItem: DropdownMenuActionViewItem | undefined;\n\tprivate submenuActionViewItems: DropdownMenuActionViewItem[] = [];\n\tprivate hasSecondaryActions: boolean = false;\n\tprivate readonly lookupKeybindings: boolean;\n\tprivate readonly element: HTMLElement;\n\n\tprivate _onDidChangeDropdownVisibility = this._register(new EventMultiplexer<boolean>());\n\treadonly onDidChangeDropdownVisibility = this._onDidChangeDropdownVisibility.event;\n\tprivate disposables = this._register(new DisposableStore());\n\n\tconstructor(container: HTMLElement, contextMenuProvider: IContextMenuProvider, options: IToolBarOptions = { orientation: ActionsOrientation.HORIZONTAL }) {\n\t\tsuper();\n\n\t\tthis.options = options;\n\t\tthis.lookupKeybindings = typeof this.options.getKeyBinding === 'function';\n\n\t\tthis.toggleMenuAction = this._register(new ToggleMenuAction(() => this.toggleMenuActionViewItem?.show(), options.toggleMenuTitle));\n\n\t\tthis.element = document.createElement('div');\n\t\tthis.element.className = 'monaco-toolbar';\n\t\tcontainer.appendChild(this.element);\n\n\t\tthis.actionBar = this._register(new ActionBar(this.element, {\n\t\t\torientation: options.orientation,\n\t\t\tariaLabel: options.ariaLabel,\n\t\t\tactionRunner: options.actionRunner,\n\t\t\tallowContextMenu: options.allowContextMenu,\n\t\t\thighlightToggledItems: options.highlightToggledItems,\n\t\t\tactionViewItemProvider: (action, viewItemOptions) => {\n\t\t\t\tif (action.id === ToggleMenuAction.ID) {\n\t\t\t\t\tthis.toggleMenuActionViewItem = new DropdownMenuActionViewItem(\n\t\t\t\t\t\taction,\n\t\t\t\t\t\t(<ToggleMenuAction>action).menuActions,\n\t\t\t\t\t\tcontextMenuProvider,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactionViewItemProvider: this.options.actionViewItemProvider,\n\t\t\t\t\t\t\tactionRunner: this.actionRunner,\n\t\t\t\t\t\t\tkeybindingProvider: this.options.getKeyBinding,\n\t\t\t\t\t\t\tclassNames: ThemeIcon.asClassNameArray(options.moreIcon ?? Codicon.toolBarMore),\n\t\t\t\t\t\t\tanchorAlignmentProvider: this.options.anchorAlignmentProvider,\n\t\t\t\t\t\t\tmenuAsChild: !!this.options.renderDropdownAsChildElement,\n\t\t\t\t\t\t\tskipTelemetry: this.options.skipTelemetry\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tthis.toggleMenuActionViewItem.setActionContext(this.actionBar.context);\n\t\t\t\t\tthis.disposables.add(this._onDidChangeDropdownVisibility.add(this.toggleMenuActionViewItem.onDidChangeVisibility));\n\n\t\t\t\t\treturn this.toggleMenuActionViewItem;\n\t\t\t\t}\n\n\t\t\t\tif (options.actionViewItemProvider) {\n\t\t\t\t\tconst result = options.actionViewItemProvider(action, viewItemOptions);\n\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (action instanceof SubmenuAction) {\n\t\t\t\t\tconst result = new DropdownMenuActionViewItem(\n\t\t\t\t\t\taction,\n\t\t\t\t\t\taction.actions,\n\t\t\t\t\t\tcontextMenuProvider,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactionViewItemProvider: this.options.actionViewItemProvider,\n\t\t\t\t\t\t\tactionRunner: this.actionRunner,\n\t\t\t\t\t\t\tkeybindingProvider: this.options.getKeyBinding,\n\t\t\t\t\t\t\tclassNames: action.class,\n\t\t\t\t\t\t\tanchorAlignmentProvider: this.options.anchorAlignmentProvider,\n\t\t\t\t\t\t\tmenuAsChild: !!this.options.renderDropdownAsChildElement,\n\t\t\t\t\t\t\tskipTelemetry: this.options.skipTelemetry\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tresult.setActionContext(this.actionBar.context);\n\t\t\t\t\tthis.submenuActionViewItems.push(result);\n\t\t\t\t\tthis.disposables.add(this._onDidChangeDropdownVisibility.add(result.onDidChangeVisibility));\n\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\t}\n\n\tset actionRunner(actionRunner: IActionRunner) {\n\t\tthis.actionBar.actionRunner = actionRunner;\n\t}\n\n\tget actionRunner(): IActionRunner {\n\t\treturn this.actionBar.actionRunner;\n\t}\n\n\tset context(context: unknown) {\n\t\tthis.actionBar.context = context;\n\t\tthis.toggleMenuActionViewItem?.setActionContext(context);\n\t\tfor (const actionViewItem of this.submenuActionViewItems) {\n\t\t\tactionViewItem.setActionContext(context);\n\t\t}\n\t}\n\n\tgetElement(): HTMLElement {\n\t\treturn this.element;\n\t}\n\n\tfocus(): void {\n\t\tthis.actionBar.focus();\n\t}\n\n\tgetItemsWidth(): number {\n\t\tlet itemsWidth = 0;\n\t\tfor (let i = 0; i < this.actionBar.length(); i++) {\n\t\t\titemsWidth += this.actionBar.getWidth(i);\n\t\t}\n\t\treturn itemsWidth;\n\t}\n\n\tgetItemAction(indexOrElement: number | HTMLElement) {\n\t\treturn this.actionBar.getAction(indexOrElement);\n\t}\n\n\tgetItemWidth(index: number): number {\n\t\treturn this.actionBar.getWidth(index);\n\t}\n\n\tgetItemsLength(): number {\n\t\treturn this.actionBar.length();\n\t}\n\n\tsetAriaLabel(label: string): void {\n\t\tthis.actionBar.setAriaLabel(label);\n\t}\n\n\tsetActions(primaryActions: ReadonlyArray<IAction>, secondaryActions?: ReadonlyArray<IAction>): void {\n\t\tthis.clear();\n\n\t\tconst primaryActionsToSet = primaryActions ? primaryActions.slice(0) : [];\n\n\t\t// Inject additional action to open secondary actions if present\n\t\tthis.hasSecondaryActions = !!(secondaryActions && secondaryActions.length > 0);\n\t\tif (this.hasSecondaryActions && secondaryActions) {\n\t\t\tthis.toggleMenuAction.menuActions = secondaryActions.slice(0);\n\t\t\tprimaryActionsToSet.push(this.toggleMenuAction);\n\t\t}\n\n\t\tprimaryActionsToSet.forEach(action => {\n\t\t\tthis.actionBar.push(action, { icon: true, label: false, keybinding: this.getKeybindingLabel(action) });\n\t\t});\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.actionBar.isEmpty();\n\t}\n\n\tprivate getKeybindingLabel(action: IAction): string | undefined {\n\t\tconst key = this.lookupKeybindings ? this.options.getKeyBinding?.(action) : undefined;\n\n\t\treturn key?.getLabel() ?? undefined;\n\t}\n\n\tprivate clear(): void {\n\t\tthis.submenuActionViewItems = [];\n\t\tthis.disposables.clear();\n\t\tthis.actionBar.clear();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.clear();\n\t\tthis.disposables.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\nexport class ToggleMenuAction extends Action {\n\n\tstatic readonly ID = 'toolbar.toggle.more';\n\n\tprivate _menuActions: ReadonlyArray<IAction>;\n\tprivate toggleDropdownMenu: () => void;\n\n\tconstructor(toggleDropdownMenu: () => void, title?: string) {\n\t\ttitle = title || nls.localize('moreActions', \"More Actions...\");\n\t\tsuper(ToggleMenuAction.ID, title, undefined, true);\n\n\t\tthis._menuActions = [];\n\t\tthis.toggleDropdownMenu = toggleDropdownMenu;\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.toggleDropdownMenu();\n\t}\n\n\tget menuActions(): ReadonlyArray<IAction> {\n\t\treturn this._menuActions;\n\t}\n\n\tset menuActions(actions: ReadonlyArray<IAction>) {\n\t\tthis._menuActions = actions;\n\t}\n}\n"]}