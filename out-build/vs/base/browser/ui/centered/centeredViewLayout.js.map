{"version":3,"sources":["file:///workspace/appflow/src/vs/base/browser/ui/centered/centeredViewLayout.ts"],"names":[],"mappings":"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","file":"centeredViewLayout.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, IDomNodePagePosition } from 'vs/base/browser/dom';\nimport { IView, IViewSize } from 'vs/base/browser/ui/grid/grid';\nimport { IBoundarySashes } from 'vs/base/browser/ui/sash/sash';\nimport { DistributeSizing, ISplitViewStyles, IView as ISplitViewView, Orientation, SplitView } from 'vs/base/browser/ui/splitview/splitview';\nimport { Color } from 'vs/base/common/color';\nimport { Event } from 'vs/base/common/event';\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CenteredViewState {\n\t// width of the fixed centered layout\n\ttargetWidth: number;\n\t// proportional size of left margin\n\tleftMarginRatio: number;\n\t// proportional size of right margin\n\trightMarginRatio: number;\n}\n\nconst defaultState: CenteredViewState = {\n\ttargetWidth: 900,\n\tleftMarginRatio: 0.1909,\n\trightMarginRatio: 0.1909,\n};\n\nconst distributeSizing: DistributeSizing = { type: 'distribute' };\n\nfunction createEmptyView(background: Color | undefined): ISplitViewView<{ top: number; left: number }> {\n\tconst element = $('.centered-layout-margin');\n\telement.style.height = '100%';\n\tif (background) {\n\t\telement.style.backgroundColor = background.toString();\n\t}\n\n\treturn {\n\t\telement,\n\t\tlayout: () => undefined,\n\t\tminimumSize: 60,\n\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\tonDidChange: Event.None\n\t};\n}\n\nfunction toSplitViewView(view: IView, getHeight: () => number): ISplitViewView<{ top: number; left: number }> {\n\treturn {\n\t\telement: view.element,\n\t\tget maximumSize() { return view.maximumWidth; },\n\t\tget minimumSize() { return view.minimumWidth; },\n\t\tonDidChange: Event.map(view.onDidChange, e => e && e.width),\n\t\tlayout: (size, offset, ctx) => view.layout(size, getHeight(), ctx?.top ?? 0, (ctx?.left ?? 0) + offset)\n\t};\n}\n\nexport interface ICenteredViewStyles extends ISplitViewStyles {\n\tbackground: Color;\n}\n\nexport class CenteredViewLayout implements IDisposable {\n\n\tprivate splitView?: SplitView<{ top: number; left: number }>;\n\tprivate lastLayoutPosition: IDomNodePagePosition = { width: 0, height: 0, left: 0, top: 0 };\n\tprivate style!: ICenteredViewStyles;\n\tprivate didLayout = false;\n\tprivate emptyViews: ISplitViewView<{ top: number; left: number }>[] | undefined;\n\tprivate readonly splitViewDisposables = new DisposableStore();\n\tprivate centeredLayoutFixedWidth = true;\n\n\tconstructor(\n\t\tprivate container: HTMLElement,\n\t\tprivate view: IView,\n\t\tpublic state: CenteredViewState = { ...defaultState }\n\t) {\n\t\tthis.container.appendChild(this.view.element);\n\t\t// Make sure to hide the split view overflow like sashes #52892\n\t\tthis.container.style.overflow = 'hidden';\n\t}\n\n\tget minimumWidth(): number { return this.splitView ? this.splitView.minimumSize : this.view.minimumWidth; }\n\tget maximumWidth(): number { return this.splitView ? this.splitView.maximumSize : this.view.maximumWidth; }\n\tget minimumHeight(): number { return this.view.minimumHeight; }\n\tget maximumHeight(): number { return this.view.maximumHeight; }\n\tget onDidChange(): Event<IViewSize | undefined> { return this.view.onDidChange; }\n\n\tprivate _boundarySashes: IBoundarySashes = {};\n\tget boundarySashes(): IBoundarySashes { return this._boundarySashes; }\n\tset boundarySashes(boundarySashes: IBoundarySashes) {\n\t\tthis._boundarySashes = boundarySashes;\n\n\t\tif (!this.splitView) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.splitView.orthogonalStartSash = boundarySashes.top;\n\t\tthis.splitView.orthogonalEndSash = boundarySashes.bottom;\n\t}\n\n\tlayout(width: number, height: number, top: number, left: number): void {\n\t\tthis.lastLayoutPosition = { width, height, top, left };\n\t\tif (this.splitView) {\n\t\t\tthis.splitView.layout(width, this.lastLayoutPosition);\n\t\t\tif (!this.didLayout || this.centeredLayoutFixedWidth) {\n\t\t\t\tthis.resizeSplitViews();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.view.layout(width, height, top, left);\n\t\t}\n\n\t\tthis.didLayout = true;\n\t}\n\n\tprivate resizeSplitViews(): void {\n\t\tif (!this.splitView) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.centeredLayoutFixedWidth) {\n\t\t\tconst centerViewWidth = Math.min(this.lastLayoutPosition.width, this.state.targetWidth);\n\t\t\tconst marginWidthFloat = (this.lastLayoutPosition.width - centerViewWidth) / 2;\n\t\t\tthis.splitView.resizeView(0, Math.floor(marginWidthFloat));\n\t\t\tthis.splitView.resizeView(1, centerViewWidth);\n\t\t\tthis.splitView.resizeView(2, Math.ceil(marginWidthFloat));\n\t\t} else {\n\t\t\tconst leftMargin = this.state.leftMarginRatio * this.lastLayoutPosition.width;\n\t\t\tconst rightMargin = this.state.rightMarginRatio * this.lastLayoutPosition.width;\n\t\t\tconst center = this.lastLayoutPosition.width - leftMargin - rightMargin;\n\t\t\tthis.splitView.resizeView(0, leftMargin);\n\t\t\tthis.splitView.resizeView(1, center);\n\t\t\tthis.splitView.resizeView(2, rightMargin);\n\t\t}\n\t}\n\n\tsetFixedWidth(option: boolean) {\n\t\tthis.centeredLayoutFixedWidth = option;\n\t\tif (!!this.splitView) {\n\t\t\tthis.updateState();\n\t\t\tthis.resizeSplitViews();\n\t\t}\n\t}\n\n\tprivate updateState() {\n\t\tif (!!this.splitView) {\n\t\t\tthis.state.targetWidth = this.splitView.getViewSize(1);\n\t\t\tthis.state.leftMarginRatio = this.splitView.getViewSize(0) / this.lastLayoutPosition.width;\n\t\t\tthis.state.rightMarginRatio = this.splitView.getViewSize(2) / this.lastLayoutPosition.width;\n\t\t}\n\t}\n\n\tisActive(): boolean {\n\t\treturn !!this.splitView;\n\t}\n\n\tstyles(style: ICenteredViewStyles): void {\n\t\tthis.style = style;\n\t\tif (this.splitView && this.emptyViews) {\n\t\t\tthis.splitView.style(this.style);\n\t\t\tthis.emptyViews[0].element.style.backgroundColor = this.style.background.toString();\n\t\t\tthis.emptyViews[1].element.style.backgroundColor = this.style.background.toString();\n\t\t}\n\t}\n\n\tactivate(active: boolean): void {\n\t\tif (active === this.isActive()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (active) {\n\t\t\tthis.container.removeChild(this.view.element);\n\t\t\tthis.splitView = new SplitView(this.container, {\n\t\t\t\tinverseAltBehavior: true,\n\t\t\t\torientation: Orientation.HORIZONTAL,\n\t\t\t\tstyles: this.style\n\t\t\t});\n\t\t\tthis.splitView.orthogonalStartSash = this.boundarySashes.top;\n\t\t\tthis.splitView.orthogonalEndSash = this.boundarySashes.bottom;\n\n\t\t\tthis.splitViewDisposables.add(this.splitView.onDidSashChange(() => {\n\t\t\t\tif (!!this.splitView) {\n\t\t\t\t\tthis.updateState();\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis.splitViewDisposables.add(this.splitView.onDidSashReset(() => {\n\t\t\t\tthis.state = { ...defaultState };\n\t\t\t\tthis.resizeSplitViews();\n\t\t\t}));\n\n\t\t\tthis.splitView.layout(this.lastLayoutPosition.width, this.lastLayoutPosition);\n\t\t\tconst backgroundColor = this.style ? this.style.background : undefined;\n\t\t\tthis.emptyViews = [createEmptyView(backgroundColor), createEmptyView(backgroundColor)];\n\n\t\t\tthis.splitView.addView(this.emptyViews[0], distributeSizing, 0);\n\t\t\tthis.splitView.addView(toSplitViewView(this.view, () => this.lastLayoutPosition.height), distributeSizing, 1);\n\t\t\tthis.splitView.addView(this.emptyViews[1], distributeSizing, 2);\n\n\t\t\tthis.resizeSplitViews();\n\t\t} else {\n\t\t\tif (this.splitView) {\n\t\t\t\tthis.container.removeChild(this.splitView.el);\n\t\t\t}\n\t\t\tthis.splitViewDisposables.clear();\n\t\t\tthis.splitView?.dispose();\n\t\t\tthis.splitView = undefined;\n\t\t\tthis.emptyViews = undefined;\n\t\t\tthis.container.appendChild(this.view.element);\n\t\t\tthis.view.layout(this.lastLayoutPosition.width, this.lastLayoutPosition.height, this.lastLayoutPosition.top, this.lastLayoutPosition.left);\n\t\t}\n\t}\n\n\tisDefault(state: CenteredViewState): boolean {\n\t\tif (this.centeredLayoutFixedWidth) {\n\t\t\treturn state.targetWidth === defaultState.targetWidth;\n\t\t} else {\n\t\t\treturn state.leftMarginRatio === defaultState.leftMarginRatio\n\t\t\t\t&& state.rightMarginRatio === defaultState.rightMarginRatio;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.splitViewDisposables.dispose();\n\n\t\tif (this.splitView) {\n\t\t\tthis.splitView.dispose();\n\t\t\tthis.splitView = undefined;\n\t\t}\n\t}\n}\n"]}