{"version":3,"sources":["file:///workspace/appflow/src/vs/base/browser/ui/scrollbar/abstractScrollbar.ts"],"names":[],"mappings":"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","file":"abstractScrollbar.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { createFastDomNode, FastDomNode } from 'vs/base/browser/fastDomNode';\nimport { GlobalPointerMoveMonitor } from 'vs/base/browser/globalPointerMoveMonitor';\nimport { StandardWheelEvent } from 'vs/base/browser/mouseEvent';\nimport { ScrollbarArrow, ScrollbarArrowOptions } from 'vs/base/browser/ui/scrollbar/scrollbarArrow';\nimport { ScrollbarState } from 'vs/base/browser/ui/scrollbar/scrollbarState';\nimport { ScrollbarVisibilityController } from 'vs/base/browser/ui/scrollbar/scrollbarVisibilityController';\nimport { Widget } from 'vs/base/browser/ui/widget';\nimport * as platform from 'vs/base/common/platform';\nimport { INewScrollPosition, Scrollable, ScrollbarVisibility } from 'vs/base/common/scrollable';\n\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\n\nexport interface ISimplifiedPointerEvent {\n\tbuttons: number;\n\tpageX: number;\n\tpageY: number;\n}\n\nexport interface ScrollbarHost {\n\tonMouseWheel(mouseWheelEvent: StandardWheelEvent): void;\n\tonDragStart(): void;\n\tonDragEnd(): void;\n}\n\nexport interface AbstractScrollbarOptions {\n\tlazyRender: boolean;\n\thost: ScrollbarHost;\n\tscrollbarState: ScrollbarState;\n\tvisibility: ScrollbarVisibility;\n\textraScrollbarClassName: string;\n\tscrollable: Scrollable;\n\tscrollByPage: boolean;\n}\n\nexport abstract class AbstractScrollbar extends Widget {\n\n\tprotected _host: ScrollbarHost;\n\tprotected _scrollable: Scrollable;\n\tprotected _scrollByPage: boolean;\n\tprivate _lazyRender: boolean;\n\tprotected _scrollbarState: ScrollbarState;\n\tprotected _visibilityController: ScrollbarVisibilityController;\n\tprivate _pointerMoveMonitor: GlobalPointerMoveMonitor;\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\tpublic slider!: FastDomNode<HTMLElement>;\n\n\tprotected _shouldRender: boolean;\n\n\tconstructor(opts: AbstractScrollbarOptions) {\n\t\tsuper();\n\t\tthis._lazyRender = opts.lazyRender;\n\t\tthis._host = opts.host;\n\t\tthis._scrollable = opts.scrollable;\n\t\tthis._scrollByPage = opts.scrollByPage;\n\t\tthis._scrollbarState = opts.scrollbarState;\n\t\tthis._visibilityController = this._register(new ScrollbarVisibilityController(opts.visibility, 'visible scrollbar ' + opts.extraScrollbarClassName, 'invisible scrollbar ' + opts.extraScrollbarClassName));\n\t\tthis._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n\t\tthis._pointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n\t\tthis._shouldRender = true;\n\t\tthis.domNode = createFastDomNode(document.createElement('div'));\n\t\tthis.domNode.setAttribute('role', 'presentation');\n\t\tthis.domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._visibilityController.setDomNode(this.domNode);\n\t\tthis.domNode.setPosition('absolute');\n\n\t\tthis._register(dom.addDisposableListener(this.domNode.domNode, dom.EventType.POINTER_DOWN, (e: PointerEvent) => this._domNodePointerDown(e)));\n\t}\n\n\t// ----------------- creation\n\n\t/**\n\t * Creates the dom node for an arrow & adds it to the container\n\t */\n\tprotected _createArrow(opts: ScrollbarArrowOptions): void {\n\t\tconst arrow = this._register(new ScrollbarArrow(opts));\n\t\tthis.domNode.domNode.appendChild(arrow.bgDomNode);\n\t\tthis.domNode.domNode.appendChild(arrow.domNode);\n\t}\n\n\t/**\n\t * Creates the slider dom node, adds it to the container & hooks up the events\n\t */\n\tprotected _createSlider(top: number, left: number, width: number | undefined, height: number | undefined): void {\n\t\tthis.slider = createFastDomNode(document.createElement('div'));\n\t\tthis.slider.setClassName('slider');\n\t\tthis.slider.setPosition('absolute');\n\t\tthis.slider.setTop(top);\n\t\tthis.slider.setLeft(left);\n\t\tif (typeof width === 'number') {\n\t\t\tthis.slider.setWidth(width);\n\t\t}\n\t\tif (typeof height === 'number') {\n\t\t\tthis.slider.setHeight(height);\n\t\t}\n\t\tthis.slider.setLayerHinting(true);\n\t\tthis.slider.setContain('strict');\n\n\t\tthis.domNode.domNode.appendChild(this.slider.domNode);\n\n\t\tthis._register(dom.addDisposableListener(\n\t\t\tthis.slider.domNode,\n\t\t\tdom.EventType.POINTER_DOWN,\n\t\t\t(e: PointerEvent) => {\n\t\t\t\tif (e.button === 0) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis._sliderPointerDown(e);\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis.onclick(this.slider.domNode, e => {\n\t\t\tif (e.leftButton) {\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\t}\n\n\t// ----------------- Update state\n\n\tprotected _onElementSize(visibleSize: number): boolean {\n\t\tif (this._scrollbarState.setVisibleSize(visibleSize)) {\n\t\t\tthis._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n\t\t\tthis._shouldRender = true;\n\t\t\tif (!this._lazyRender) {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t}\n\t\treturn this._shouldRender;\n\t}\n\n\tprotected _onElementScrollSize(elementScrollSize: number): boolean {\n\t\tif (this._scrollbarState.setScrollSize(elementScrollSize)) {\n\t\t\tthis._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n\t\t\tthis._shouldRender = true;\n\t\t\tif (!this._lazyRender) {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t}\n\t\treturn this._shouldRender;\n\t}\n\n\tprotected _onElementScrollPosition(elementScrollPosition: number): boolean {\n\t\tif (this._scrollbarState.setScrollPosition(elementScrollPosition)) {\n\t\t\tthis._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n\t\t\tthis._shouldRender = true;\n\t\t\tif (!this._lazyRender) {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t}\n\t\treturn this._shouldRender;\n\t}\n\n\t// ----------------- rendering\n\n\tpublic beginReveal(): void {\n\t\tthis._visibilityController.setShouldBeVisible(true);\n\t}\n\n\tpublic beginHide(): void {\n\t\tthis._visibilityController.setShouldBeVisible(false);\n\t}\n\n\tpublic render(): void {\n\t\tif (!this._shouldRender) {\n\t\t\treturn;\n\t\t}\n\t\tthis._shouldRender = false;\n\n\t\tthis._renderDomNode(this._scrollbarState.getRectangleLargeSize(), this._scrollbarState.getRectangleSmallSize());\n\t\tthis._updateSlider(this._scrollbarState.getSliderSize(), this._scrollbarState.getArrowSize() + this._scrollbarState.getSliderPosition());\n\t}\n\t// ----------------- DOM events\n\n\tprivate _domNodePointerDown(e: PointerEvent): void {\n\t\tif (e.target !== this.domNode.domNode) {\n\t\t\treturn;\n\t\t}\n\t\tthis._onPointerDown(e);\n\t}\n\n\tpublic delegatePointerDown(e: PointerEvent): void {\n\t\tconst domTop = this.domNode.domNode.getClientRects()[0].top;\n\t\tconst sliderStart = domTop + this._scrollbarState.getSliderPosition();\n\t\tconst sliderStop = domTop + this._scrollbarState.getSliderPosition() + this._scrollbarState.getSliderSize();\n\t\tconst pointerPos = this._sliderPointerPosition(e);\n\t\tif (sliderStart <= pointerPos && pointerPos <= sliderStop) {\n\t\t\t// Act as if it was a pointer down on the slider\n\t\t\tif (e.button === 0) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis._sliderPointerDown(e);\n\t\t\t}\n\t\t} else {\n\t\t\t// Act as if it was a pointer down on the scrollbar\n\t\t\tthis._onPointerDown(e);\n\t\t}\n\t}\n\n\tprivate _onPointerDown(e: PointerEvent): void {\n\t\tlet offsetX: number;\n\t\tlet offsetY: number;\n\t\tif (e.target === this.domNode.domNode && typeof e.offsetX === 'number' && typeof e.offsetY === 'number') {\n\t\t\toffsetX = e.offsetX;\n\t\t\toffsetY = e.offsetY;\n\t\t} else {\n\t\t\tconst domNodePosition = dom.getDomNodePagePosition(this.domNode.domNode);\n\t\t\toffsetX = e.pageX - domNodePosition.left;\n\t\t\toffsetY = e.pageY - domNodePosition.top;\n\t\t}\n\n\t\tconst offset = this._pointerDownRelativePosition(offsetX, offsetY);\n\t\tthis._setDesiredScrollPositionNow(\n\t\t\tthis._scrollByPage\n\t\t\t\t? this._scrollbarState.getDesiredScrollPositionFromOffsetPaged(offset)\n\t\t\t\t: this._scrollbarState.getDesiredScrollPositionFromOffset(offset)\n\t\t);\n\n\t\tif (e.button === 0) {\n\t\t\t// left button\n\t\t\te.preventDefault();\n\t\t\tthis._sliderPointerDown(e);\n\t\t}\n\t}\n\n\tprivate _sliderPointerDown(e: PointerEvent): void {\n\t\tif (!e.target || !(e.target instanceof Element)) {\n\t\t\treturn;\n\t\t}\n\t\tconst initialPointerPosition = this._sliderPointerPosition(e);\n\t\tconst initialPointerOrthogonalPosition = this._sliderOrthogonalPointerPosition(e);\n\t\tconst initialScrollbarState = this._scrollbarState.clone();\n\t\tthis.slider.toggleClassName('active', true);\n\n\t\tthis._pointerMoveMonitor.startMonitoring(\n\t\t\te.target,\n\t\t\te.pointerId,\n\t\t\te.buttons,\n\t\t\t(pointerMoveData: PointerEvent) => {\n\t\t\t\tconst pointerOrthogonalPosition = this._sliderOrthogonalPointerPosition(pointerMoveData);\n\t\t\t\tconst pointerOrthogonalDelta = Math.abs(pointerOrthogonalPosition - initialPointerOrthogonalPosition);\n\n\t\t\t\tif (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n\t\t\t\t\t// The pointer has wondered away from the scrollbar => reset dragging\n\t\t\t\t\tthis._setDesiredScrollPositionNow(initialScrollbarState.getScrollPosition());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst pointerPosition = this._sliderPointerPosition(pointerMoveData);\n\t\t\t\tconst pointerDelta = pointerPosition - initialPointerPosition;\n\t\t\t\tthis._setDesiredScrollPositionNow(initialScrollbarState.getDesiredScrollPositionFromDelta(pointerDelta));\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.slider.toggleClassName('active', false);\n\t\t\t\tthis._host.onDragEnd();\n\t\t\t}\n\t\t);\n\n\t\tthis._host.onDragStart();\n\t}\n\n\tprivate _setDesiredScrollPositionNow(_desiredScrollPosition: number): void {\n\n\t\tconst desiredScrollPosition: INewScrollPosition = {};\n\t\tthis.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);\n\n\t\tthis._scrollable.setScrollPositionNow(desiredScrollPosition);\n\t}\n\n\tpublic updateScrollbarSize(scrollbarSize: number): void {\n\t\tthis._updateScrollbarSize(scrollbarSize);\n\t\tthis._scrollbarState.setScrollbarSize(scrollbarSize);\n\t\tthis._shouldRender = true;\n\t\tif (!this._lazyRender) {\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\tpublic isNeeded(): boolean {\n\t\treturn this._scrollbarState.isNeeded();\n\t}\n\n\t// ----------------- Overwrite these\n\n\tprotected abstract _renderDomNode(largeSize: number, smallSize: number): void;\n\tprotected abstract _updateSlider(sliderSize: number, sliderPosition: number): void;\n\n\tprotected abstract _pointerDownRelativePosition(offsetX: number, offsetY: number): number;\n\tprotected abstract _sliderPointerPosition(e: ISimplifiedPointerEvent): number;\n\tprotected abstract _sliderOrthogonalPointerPosition(e: ISimplifiedPointerEvent): number;\n\tprotected abstract _updateScrollbarSize(size: number): void;\n\n\tpublic abstract writeScrollPosition(target: INewScrollPosition, scrollPosition: number): void;\n}\n"]}