{"version":3,"sources":["file:///workspace/appflow/src/vs/base/browser/ui/scrollbar/verticalScrollbar.ts"],"names":[],"mappings":"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","file":"verticalScrollbar.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { StandardWheelEvent } from 'vs/base/browser/mouseEvent';\nimport { AbstractScrollbar, ISimplifiedPointerEvent, ScrollbarHost } from 'vs/base/browser/ui/scrollbar/abstractScrollbar';\nimport { ScrollableElementResolvedOptions } from 'vs/base/browser/ui/scrollbar/scrollableElementOptions';\nimport { ARROW_IMG_SIZE } from 'vs/base/browser/ui/scrollbar/scrollbarArrow';\nimport { ScrollbarState } from 'vs/base/browser/ui/scrollbar/scrollbarState';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { INewScrollPosition, Scrollable, ScrollbarVisibility, ScrollEvent } from 'vs/base/common/scrollable';\n\n\n\nexport class VerticalScrollbar extends AbstractScrollbar {\n\n\tconstructor(scrollable: Scrollable, options: ScrollableElementResolvedOptions, host: ScrollbarHost) {\n\t\tconst scrollDimensions = scrollable.getScrollDimensions();\n\t\tconst scrollPosition = scrollable.getCurrentScrollPosition();\n\t\tsuper({\n\t\t\tlazyRender: options.lazyRender,\n\t\t\thost: host,\n\t\t\tscrollbarState: new ScrollbarState(\n\t\t\t\t(options.verticalHasArrows ? options.arrowSize : 0),\n\t\t\t\t(options.vertical === ScrollbarVisibility.Hidden ? 0 : options.verticalScrollbarSize),\n\t\t\t\t// give priority to vertical scroll bar over horizontal and let it scroll all the way to the bottom\n\t\t\t\t0,\n\t\t\t\tscrollDimensions.height,\n\t\t\t\tscrollDimensions.scrollHeight,\n\t\t\t\tscrollPosition.scrollTop\n\t\t\t),\n\t\t\tvisibility: options.vertical,\n\t\t\textraScrollbarClassName: 'vertical',\n\t\t\tscrollable: scrollable,\n\t\t\tscrollByPage: options.scrollByPage\n\t\t});\n\n\t\tif (options.verticalHasArrows) {\n\t\t\tconst arrowDelta = (options.arrowSize - ARROW_IMG_SIZE) / 2;\n\t\t\tconst scrollbarDelta = (options.verticalScrollbarSize - ARROW_IMG_SIZE) / 2;\n\n\t\t\tthis._createArrow({\n\t\t\t\tclassName: 'scra',\n\t\t\t\ticon: Codicon.scrollbarButtonUp,\n\t\t\t\ttop: arrowDelta,\n\t\t\t\tleft: scrollbarDelta,\n\t\t\t\tbottom: undefined,\n\t\t\t\tright: undefined,\n\t\t\t\tbgWidth: options.verticalScrollbarSize,\n\t\t\t\tbgHeight: options.arrowSize,\n\t\t\t\tonActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 0, 1)),\n\t\t\t});\n\n\t\t\tthis._createArrow({\n\t\t\t\tclassName: 'scra',\n\t\t\t\ticon: Codicon.scrollbarButtonDown,\n\t\t\t\ttop: undefined,\n\t\t\t\tleft: scrollbarDelta,\n\t\t\t\tbottom: arrowDelta,\n\t\t\t\tright: undefined,\n\t\t\t\tbgWidth: options.verticalScrollbarSize,\n\t\t\t\tbgHeight: options.arrowSize,\n\t\t\t\tonActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 0, -1)),\n\t\t\t});\n\t\t}\n\n\t\tthis._createSlider(0, Math.floor((options.verticalScrollbarSize - options.verticalSliderSize) / 2), options.verticalSliderSize, undefined);\n\t}\n\n\tprotected _updateSlider(sliderSize: number, sliderPosition: number): void {\n\t\tthis.slider.setHeight(sliderSize);\n\t\tthis.slider.setTop(sliderPosition);\n\t}\n\n\tprotected _renderDomNode(largeSize: number, smallSize: number): void {\n\t\tthis.domNode.setWidth(smallSize);\n\t\tthis.domNode.setHeight(largeSize);\n\t\tthis.domNode.setRight(0);\n\t\tthis.domNode.setTop(0);\n\t}\n\n\tpublic onDidScroll(e: ScrollEvent): boolean {\n\t\tthis._shouldRender = this._onElementScrollSize(e.scrollHeight) || this._shouldRender;\n\t\tthis._shouldRender = this._onElementScrollPosition(e.scrollTop) || this._shouldRender;\n\t\tthis._shouldRender = this._onElementSize(e.height) || this._shouldRender;\n\t\treturn this._shouldRender;\n\t}\n\n\tprotected _pointerDownRelativePosition(offsetX: number, offsetY: number): number {\n\t\treturn offsetY;\n\t}\n\n\tprotected _sliderPointerPosition(e: ISimplifiedPointerEvent): number {\n\t\treturn e.pageY;\n\t}\n\n\tprotected _sliderOrthogonalPointerPosition(e: ISimplifiedPointerEvent): number {\n\t\treturn e.pageX;\n\t}\n\n\tprotected _updateScrollbarSize(size: number): void {\n\t\tthis.slider.setWidth(size);\n\t}\n\n\tpublic writeScrollPosition(target: INewScrollPosition, scrollPosition: number): void {\n\t\ttarget.scrollTop = scrollPosition;\n\t}\n\n\tpublic updateOptions(options: ScrollableElementResolvedOptions): void {\n\t\tthis.updateScrollbarSize(options.vertical === ScrollbarVisibility.Hidden ? 0 : options.verticalScrollbarSize);\n\t\t// give priority to vertical scroll bar over horizontal and let it scroll all the way to the bottom\n\t\tthis._scrollbarState.setOppositeScrollbarSize(0);\n\t\tthis._visibilityController.setVisibility(options.vertical);\n\t\tthis._scrollByPage = options.scrollByPage;\n\t}\n\n}\n"]}