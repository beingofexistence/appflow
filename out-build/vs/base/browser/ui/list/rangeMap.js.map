{"version":3,"sources":["file:///workspace/appflow/src/vs/base/browser/ui/list/rangeMap.ts"],"names":[],"mappings":"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","file":"rangeMap.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange, Range } from 'vs/base/common/range';\n\nexport interface IItem {\n\tsize: number;\n}\n\nexport interface IRangedGroup {\n\trange: IRange;\n\tsize: number;\n}\n\n/**\n * Returns the intersection between a ranged group and a range.\n * Returns `[]` if the intersection is empty.\n */\nexport function groupIntersect(range: IRange, groups: IRangedGroup[]): IRangedGroup[] {\n\tconst result: IRangedGroup[] = [];\n\n\tfor (const r of groups) {\n\t\tif (range.start >= r.range.end) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (range.end < r.range.start) {\n\t\t\tbreak;\n\t\t}\n\n\t\tconst intersection = Range.intersect(range, r.range);\n\n\t\tif (Range.isEmpty(intersection)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tresult.push({\n\t\t\trange: intersection,\n\t\t\tsize: r.size\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/**\n * Shifts a range by that `much`.\n */\nexport function shift({ start, end }: IRange, much: number): IRange {\n\treturn { start: start + much, end: end + much };\n}\n\n/**\n * Consolidates a collection of ranged groups.\n *\n * Consolidation is the process of merging consecutive ranged groups\n * that share the same `size`.\n */\nexport function consolidate(groups: IRangedGroup[]): IRangedGroup[] {\n\tconst result: IRangedGroup[] = [];\n\tlet previousGroup: IRangedGroup | null = null;\n\n\tfor (const group of groups) {\n\t\tconst start = group.range.start;\n\t\tconst end = group.range.end;\n\t\tconst size = group.size;\n\n\t\tif (previousGroup && size === previousGroup.size) {\n\t\t\tpreviousGroup.range.end = end;\n\t\t\tcontinue;\n\t\t}\n\n\t\tpreviousGroup = { range: { start, end }, size };\n\t\tresult.push(previousGroup);\n\t}\n\n\treturn result;\n}\n\n/**\n * Concatenates several collections of ranged groups into a single\n * collection.\n */\nfunction concat(...groups: IRangedGroup[][]): IRangedGroup[] {\n\treturn consolidate(groups.reduce((r, g) => r.concat(g), []));\n}\n\nexport class RangeMap {\n\n\tprivate groups: IRangedGroup[] = [];\n\tprivate _size = 0;\n\tprivate _paddingTop = 0;\n\n\tget paddingTop() {\n\t\treturn this._paddingTop;\n\t}\n\n\tset paddingTop(paddingTop: number) {\n\t\tthis._size = this._size + paddingTop - this._paddingTop;\n\t\tthis._paddingTop = paddingTop;\n\t}\n\n\tconstructor(topPadding?: number) {\n\t\tthis._paddingTop = topPadding ?? 0;\n\t\tthis._size = this._paddingTop;\n\t}\n\n\tsplice(index: number, deleteCount: number, items: IItem[] = []): void {\n\t\tconst diff = items.length - deleteCount;\n\t\tconst before = groupIntersect({ start: 0, end: index }, this.groups);\n\t\tconst after = groupIntersect({ start: index + deleteCount, end: Number.POSITIVE_INFINITY }, this.groups)\n\t\t\t.map<IRangedGroup>(g => ({ range: shift(g.range, diff), size: g.size }));\n\n\t\tconst middle = items.map<IRangedGroup>((item, i) => ({\n\t\t\trange: { start: index + i, end: index + i + 1 },\n\t\t\tsize: item.size\n\t\t}));\n\n\t\tthis.groups = concat(before, middle, after);\n\t\tthis._size = this._paddingTop + this.groups.reduce((t, g) => t + (g.size * (g.range.end - g.range.start)), 0);\n\t}\n\n\t/**\n\t * Returns the number of items in the range map.\n\t */\n\tget count(): number {\n\t\tconst len = this.groups.length;\n\n\t\tif (!len) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn this.groups[len - 1].range.end;\n\t}\n\n\t/**\n\t * Returns the sum of the sizes of all items in the range map.\n\t */\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * Returns the index of the item at the given position.\n\t */\n\tindexAt(position: number): number {\n\t\tif (position < 0) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (position < this._paddingTop) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet size = this._paddingTop;\n\n\t\tfor (const group of this.groups) {\n\t\t\tconst count = group.range.end - group.range.start;\n\t\t\tconst newSize = size + (count * group.size);\n\n\t\t\tif (position < newSize) {\n\t\t\t\treturn index + Math.floor((position - size) / group.size);\n\t\t\t}\n\n\t\t\tindex += count;\n\t\t\tsize = newSize;\n\t\t}\n\n\t\treturn index;\n\t}\n\n\t/**\n\t * Returns the index of the item right after the item at the\n\t * index of the given position.\n\t */\n\tindexAfter(position: number): number {\n\t\treturn Math.min(this.indexAt(position) + 1, this.count);\n\t}\n\n\t/**\n\t * Returns the start position of the item at the given index.\n\t */\n\tpositionAt(index: number): number {\n\t\tif (index < 0) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tlet position = 0;\n\t\tlet count = 0;\n\n\t\tfor (const group of this.groups) {\n\t\t\tconst groupCount = group.range.end - group.range.start;\n\t\t\tconst newCount = count + groupCount;\n\n\t\t\tif (index < newCount) {\n\t\t\t\treturn this._paddingTop + position + ((index - count) * group.size);\n\t\t\t}\n\n\t\t\tposition += groupCount * group.size;\n\t\t\tcount = newCount;\n\t\t}\n\n\t\treturn -1;\n\t}\n}\n"]}