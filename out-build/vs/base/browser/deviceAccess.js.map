{"version":3,"sources":["file:///workspace/appflow/src/vs/base/browser/deviceAccess.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAqBzF,KAAK,UAAU,GAAG,CAAc,OAAiC;QACvE,MAAM,GAAG,GAAI,SAAiB,CAAC,GAAG,CAAC;QACnC,IAAI,CAAC,GAAG,EAAE;YACT,OAAO,SAAS,CAAC;SACjB;QAED,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5E,IAAI,CAAC,MAAM,EAAE;YACZ,OAAO,SAAS,CAAC;SACjB;QAED,OAAO;YACN,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,cAAc,EAAE,MAAM,CAAC,cAAc;YACrC,cAAc,EAAE,MAAM,CAAC,cAAc;YACrC,kBAAkB,EAAE,MAAM,CAAC,kBAAkB;YAC7C,kBAAkB,EAAE,MAAM,CAAC,kBAAkB;YAC7C,qBAAqB,EAAE,MAAM,CAAC,qBAAqB;YACnD,gBAAgB,EAAE,MAAM,CAAC,gBAAgB;YACzC,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,YAAY,EAAE,MAAM,CAAC,YAAY;YACjC,eAAe,EAAE,MAAM,CAAC,eAAe;YACvC,eAAe,EAAE,MAAM,CAAC,eAAe;YACvC,kBAAkB,EAAE,MAAM,CAAC,kBAAkB;YAC7C,QAAQ,EAAE,MAAM,CAAC,QAAQ;SACzB,CAAC;IACH,CAAC;IA3BD,kBA2BC;IASM,KAAK,UAAU,GAAG,CAAe,OAAiC;QACxE,MAAM,MAAM,GAAI,SAAiB,CAAC,MAAM,CAAC;QACzC,IAAI,CAAC,MAAM,EAAE;YACZ,OAAO,SAAS,CAAC;SACjB;QAED,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;QAC3E,IAAI,CAAC,IAAI,EAAE;YACV,OAAO,SAAS,CAAC;SACjB;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5B,OAAO;YACN,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,YAAY,EAAE,IAAI,CAAC,YAAY;SAC/B,CAAC;IACH,CAAC;IAhBD,kBAgBC;IAYM,KAAK,UAAU,GAAG,CAAc,OAAiC;QACvE,MAAM,GAAG,GAAI,SAAiB,CAAC,GAAG,CAAC;QACnC,IAAI,CAAC,GAAG,EAAE;YACT,OAAO,SAAS,CAAC;SACjB;QAED,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;QAC7E,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACpB,OAAO,SAAS,CAAC;SACjB;QAED,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1B,OAAO;YACN,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,WAAW,EAAE,MAAM,CAAC,WAAW;SAC/B,CAAC;IACH,CAAC;IAnBD,kBAmBC","file":"deviceAccess.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// https://wicg.github.io/webusb/\n\nexport interface UsbDeviceData {\n\treadonly deviceClass: number;\n\treadonly deviceProtocol: number;\n\treadonly deviceSubclass: number;\n\treadonly deviceVersionMajor: number;\n\treadonly deviceVersionMinor: number;\n\treadonly deviceVersionSubminor: number;\n\treadonly manufacturerName?: string;\n\treadonly productId: number;\n\treadonly productName?: string;\n\treadonly serialNumber?: string;\n\treadonly usbVersionMajor: number;\n\treadonly usbVersionMinor: number;\n\treadonly usbVersionSubminor: number;\n\treadonly vendorId: number;\n}\n\nexport async function requestUsbDevice(options?: { filters?: unknown[] }): Promise<UsbDeviceData | undefined> {\n\tconst usb = (navigator as any).usb;\n\tif (!usb) {\n\t\treturn undefined;\n\t}\n\n\tconst device = await usb.requestDevice({ filters: options?.filters ?? [] });\n\tif (!device) {\n\t\treturn undefined;\n\t}\n\n\treturn {\n\t\tdeviceClass: device.deviceClass,\n\t\tdeviceProtocol: device.deviceProtocol,\n\t\tdeviceSubclass: device.deviceSubclass,\n\t\tdeviceVersionMajor: device.deviceVersionMajor,\n\t\tdeviceVersionMinor: device.deviceVersionMinor,\n\t\tdeviceVersionSubminor: device.deviceVersionSubminor,\n\t\tmanufacturerName: device.manufacturerName,\n\t\tproductId: device.productId,\n\t\tproductName: device.productName,\n\t\tserialNumber: device.serialNumber,\n\t\tusbVersionMajor: device.usbVersionMajor,\n\t\tusbVersionMinor: device.usbVersionMinor,\n\t\tusbVersionSubminor: device.usbVersionSubminor,\n\t\tvendorId: device.vendorId,\n\t};\n}\n\n// https://wicg.github.io/serial/\n\nexport interface SerialPortData {\n\treadonly usbVendorId?: number | undefined;\n\treadonly usbProductId?: number | undefined;\n}\n\nexport async function requestSerialPort(options?: { filters?: unknown[] }): Promise<SerialPortData | undefined> {\n\tconst serial = (navigator as any).serial;\n\tif (!serial) {\n\t\treturn undefined;\n\t}\n\n\tconst port = await serial.requestPort({ filters: options?.filters ?? [] });\n\tif (!port) {\n\t\treturn undefined;\n\t}\n\n\tconst info = port.getInfo();\n\treturn {\n\t\tusbVendorId: info.usbVendorId,\n\t\tusbProductId: info.usbProductId\n\t};\n}\n\n// https://wicg.github.io/webhid/\n\nexport interface HidDeviceData {\n\treadonly opened: boolean;\n\treadonly vendorId: number;\n\treadonly productId: number;\n\treadonly productName: string;\n\treadonly collections: [];\n}\n\nexport async function requestHidDevice(options?: { filters?: unknown[] }): Promise<HidDeviceData | undefined> {\n\tconst hid = (navigator as any).hid;\n\tif (!hid) {\n\t\treturn undefined;\n\t}\n\n\tconst devices = await hid.requestDevice({ filters: options?.filters ?? [] });\n\tif (!devices.length) {\n\t\treturn undefined;\n\t}\n\n\tconst device = devices[0];\n\treturn {\n\t\topened: device.opened,\n\t\tvendorId: device.vendorId,\n\t\tproductId: device.productId,\n\t\tproductName: device.productName,\n\t\tcollections: device.collections\n\t};\n}\n"]}