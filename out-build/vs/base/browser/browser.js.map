{"version":3,"sources":["file:///workspace/appflow/src/vs/base/browser/browser.ts"],"names":[],"mappings":"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","file":"browser.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, markAsSingleton } from 'vs/base/common/lifecycle';\n\nclass WindowManager {\n\n\tpublic static readonly INSTANCE = new WindowManager();\n\n\t// --- Zoom Level\n\tprivate _zoomLevel: number = 0;\n\n\tpublic getZoomLevel(): number {\n\t\treturn this._zoomLevel;\n\t}\n\tpublic setZoomLevel(zoomLevel: number): void {\n\t\tif (this._zoomLevel === zoomLevel) {\n\t\t\treturn;\n\t\t}\n\t\tthis._zoomLevel = zoomLevel;\n\t}\n\n\t// --- Zoom Factor\n\tprivate _zoomFactor: number = 1;\n\n\tpublic getZoomFactor(): number {\n\t\treturn this._zoomFactor;\n\t}\n\tpublic setZoomFactor(zoomFactor: number): void {\n\t\tthis._zoomFactor = zoomFactor;\n\t}\n\n\t// --- Fullscreen\n\tprivate _fullscreen: boolean = false;\n\tprivate readonly _onDidChangeFullscreen = new Emitter<void>();\n\n\tpublic readonly onDidChangeFullscreen: Event<void> = this._onDidChangeFullscreen.event;\n\tpublic setFullscreen(fullscreen: boolean): void {\n\t\tif (this._fullscreen === fullscreen) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._fullscreen = fullscreen;\n\t\tthis._onDidChangeFullscreen.fire();\n\t}\n\tpublic isFullscreen(): boolean {\n\t\treturn this._fullscreen;\n\t}\n}\n\n/**\n * See https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio#monitoring_screen_resolution_or_zoom_level_changes\n */\nclass DevicePixelRatioMonitor extends Disposable {\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\tpublic readonly onDidChange = this._onDidChange.event;\n\n\tprivate readonly _listener: () => void;\n\tprivate _mediaQueryList: MediaQueryList | null;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._listener = () => this._handleChange(true);\n\t\tthis._mediaQueryList = null;\n\t\tthis._handleChange(false);\n\t}\n\n\tprivate _handleChange(fireEvent: boolean): void {\n\t\tthis._mediaQueryList?.removeEventListener('change', this._listener);\n\n\t\tthis._mediaQueryList = window.matchMedia(`(resolution: ${window.devicePixelRatio}dppx)`);\n\t\tthis._mediaQueryList.addEventListener('change', this._listener);\n\n\t\tif (fireEvent) {\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n}\n\nclass PixelRatioImpl extends Disposable {\n\n\tprivate readonly _onDidChange = this._register(new Emitter<number>());\n\tpublic readonly onDidChange = this._onDidChange.event;\n\n\tprivate _value: number;\n\n\tpublic get value(): number {\n\t\treturn this._value;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._value = this._getPixelRatio();\n\n\t\tconst dprMonitor = this._register(new DevicePixelRatioMonitor());\n\t\tthis._register(dprMonitor.onDidChange(() => {\n\t\t\tthis._value = this._getPixelRatio();\n\t\t\tthis._onDidChange.fire(this._value);\n\t\t}));\n\t}\n\n\tprivate _getPixelRatio(): number {\n\t\tconst ctx: any = document.createElement('canvas').getContext('2d');\n\t\tconst dpr = window.devicePixelRatio || 1;\n\t\tconst bsr = ctx.webkitBackingStorePixelRatio ||\n\t\t\tctx.mozBackingStorePixelRatio ||\n\t\t\tctx.msBackingStorePixelRatio ||\n\t\t\tctx.oBackingStorePixelRatio ||\n\t\t\tctx.backingStorePixelRatio || 1;\n\t\treturn dpr / bsr;\n\t}\n}\n\nclass PixelRatioFacade {\n\n\tprivate _pixelRatioMonitor: PixelRatioImpl | null = null;\n\tprivate _getOrCreatePixelRatioMonitor(): PixelRatioImpl {\n\t\tif (!this._pixelRatioMonitor) {\n\t\t\tthis._pixelRatioMonitor = markAsSingleton(new PixelRatioImpl());\n\t\t}\n\t\treturn this._pixelRatioMonitor;\n\t}\n\n\t/**\n\t * Get the current value.\n\t */\n\tpublic get value(): number {\n\t\treturn this._getOrCreatePixelRatioMonitor().value;\n\t}\n\n\t/**\n\t * Listen for changes.\n\t */\n\tpublic get onDidChange(): Event<number> {\n\t\treturn this._getOrCreatePixelRatioMonitor().onDidChange;\n\t}\n}\n\nexport function addMatchMediaChangeListener(query: string | MediaQueryList, callback: (this: MediaQueryList, ev: MediaQueryListEvent) => any): void {\n\tif (typeof query === 'string') {\n\t\tquery = window.matchMedia(query);\n\t}\n\tquery.addEventListener('change', callback);\n}\n\n/**\n * Returns the pixel ratio.\n *\n * This is useful for rendering <canvas> elements at native screen resolution or for being used as\n * a cache key when storing font measurements. Fonts might render differently depending on resolution\n * and any measurements need to be discarded for example when a window is moved from a monitor to another.\n */\nexport const PixelRatio = new PixelRatioFacade();\n\n/** A zoom index, e.g. 1, 2, 3 */\nexport function setZoomLevel(zoomLevel: number): void {\n\tWindowManager.INSTANCE.setZoomLevel(zoomLevel);\n}\nexport function getZoomLevel(): number {\n\treturn WindowManager.INSTANCE.getZoomLevel();\n}\n\n/** The zoom scale for an index, e.g. 1, 1.2, 1.4 */\nexport function getZoomFactor(): number {\n\treturn WindowManager.INSTANCE.getZoomFactor();\n}\nexport function setZoomFactor(zoomFactor: number): void {\n\tWindowManager.INSTANCE.setZoomFactor(zoomFactor);\n}\n\nexport function setFullscreen(fullscreen: boolean): void {\n\tWindowManager.INSTANCE.setFullscreen(fullscreen);\n}\nexport function isFullscreen(): boolean {\n\treturn WindowManager.INSTANCE.isFullscreen();\n}\nexport const onDidChangeFullscreen = WindowManager.INSTANCE.onDidChangeFullscreen;\n\nconst userAgent = navigator.userAgent;\n\nexport const isFirefox = (userAgent.indexOf('Firefox') >= 0);\nexport const isWebKit = (userAgent.indexOf('AppleWebKit') >= 0);\nexport const isChrome = (userAgent.indexOf('Chrome') >= 0);\nexport const isSafari = (!isChrome && (userAgent.indexOf('Safari') >= 0));\nexport const isWebkitWebView = (!isChrome && !isSafari && isWebKit);\nexport const isElectron = (userAgent.indexOf('Electron/') >= 0);\nexport const isAndroid = (userAgent.indexOf('Android') >= 0);\n\nlet standalone = false;\nif (window.matchMedia) {\n\tconst standaloneMatchMedia = window.matchMedia('(display-mode: standalone) or (display-mode: window-controls-overlay)');\n\tconst fullScreenMatchMedia = window.matchMedia('(display-mode: fullscreen)');\n\tstandalone = standaloneMatchMedia.matches;\n\taddMatchMediaChangeListener(standaloneMatchMedia, ({ matches }) => {\n\t\t// entering fullscreen would change standaloneMatchMedia.matches to false\n\t\t// if standalone is true (running as PWA) and entering fullscreen, skip this change\n\t\tif (standalone && fullScreenMatchMedia.matches) {\n\t\t\treturn;\n\t\t}\n\t\t// otherwise update standalone (browser to PWA or PWA to browser)\n\t\tstandalone = matches;\n\t});\n}\nexport function isStandalone(): boolean {\n\treturn standalone;\n}\n\n// Visible means that the feature is enabled, not necessarily being rendered\n// e.g. visible is true even in fullscreen mode where the controls are hidden\n// See docs at https://developer.mozilla.org/en-US/docs/Web/API/WindowControlsOverlay/visible\nexport function isWCOEnabled(): boolean {\n\treturn (navigator as any)?.windowControlsOverlay?.visible;\n}\n"]}