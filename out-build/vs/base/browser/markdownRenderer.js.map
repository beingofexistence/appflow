{"version":3,"sources":["file:///workspace/appflow/src/vs/base/browser/markdownRenderer.ts"],"names":[],"mappings":"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","file":"markdownRenderer.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport * as dompurify from 'vs/base/browser/dompurify/dompurify';\nimport { DomEmitter } from 'vs/base/browser/event';\nimport { createElement, FormattedTextRenderOptions } from 'vs/base/browser/formattedTextRenderer';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { renderLabelWithIcons } from 'vs/base/browser/ui/iconLabel/iconLabels';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Event } from 'vs/base/common/event';\nimport { IMarkdownString, escapeDoubleQuotes, parseHrefAndDimensions, removeMarkdownEscapes, MarkdownStringTrustedOptions } from 'vs/base/common/htmlContent';\nimport { markdownEscapeEscapedIcons } from 'vs/base/common/iconLabels';\nimport { defaultGenerator } from 'vs/base/common/idGenerator';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { Lazy } from 'vs/base/common/lazy';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { marked } from 'vs/base/common/marked/marked';\nimport { parse } from 'vs/base/common/marshalling';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { dirname, resolvePath } from 'vs/base/common/resources';\nimport { escape } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface MarkedOptions extends marked.MarkedOptions {\n\tbaseUrl?: never;\n}\n\nexport interface MarkdownRenderOptions extends FormattedTextRenderOptions {\n\treadonly codeBlockRenderer?: (languageId: string, value: string) => Promise<HTMLElement>;\n\treadonly codeBlockRendererSync?: (languageId: string, value: string) => HTMLElement;\n\treadonly asyncRenderCallback?: () => void;\n\treadonly fillInIncompleteTokens?: boolean;\n}\n\nconst defaultMarkedRenderers = Object.freeze({\n\timage: (href: string | null, title: string | null, text: string): string => {\n\t\tlet dimensions: string[] = [];\n\t\tlet attributes: string[] = [];\n\t\tif (href) {\n\t\t\t({ href, dimensions } = parseHrefAndDimensions(href));\n\t\t\tattributes.push(`src=\"${escapeDoubleQuotes(href)}\"`);\n\t\t}\n\t\tif (text) {\n\t\t\tattributes.push(`alt=\"${escapeDoubleQuotes(text)}\"`);\n\t\t}\n\t\tif (title) {\n\t\t\tattributes.push(`title=\"${escapeDoubleQuotes(title)}\"`);\n\t\t}\n\t\tif (dimensions.length) {\n\t\t\tattributes = attributes.concat(dimensions);\n\t\t}\n\t\treturn '<img ' + attributes.join(' ') + '>';\n\t},\n\n\tparagraph: (text: string): string => {\n\t\treturn `<p>${text}</p>`;\n\t},\n\n\tlink: (href: string | null, title: string | null, text: string): string => {\n\t\tif (typeof href !== 'string') {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\n\t\tif (href === text) { // raw link case\n\t\t\ttext = removeMarkdownEscapes(text);\n\t\t}\n\n\t\ttitle = typeof title === 'string' ? escapeDoubleQuotes(removeMarkdownEscapes(title)) : '';\n\t\thref = removeMarkdownEscapes(href);\n\n\t\t// HTML Encode href\n\t\thref = href.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;')\n\t\t\t.replace(/'/g, '&#39;');\n\t\treturn `<a href=\"${href}\" title=\"${title || href}\">${text}</a>`;\n\t},\n});\n\n/**\n * Low-level way create a html element from a markdown string.\n *\n * **Note** that for most cases you should be using [`MarkdownRenderer`](./src/vs/editor/contrib/markdownRenderer/browser/markdownRenderer.ts)\n * which comes with support for pretty code block rendering and which uses the default way of handling links.\n */\nexport function renderMarkdown(markdown: IMarkdownString, options: MarkdownRenderOptions = {}, markedOptions: MarkedOptions = {}): { element: HTMLElement; dispose: () => void } {\n\tconst disposables = new DisposableStore();\n\tlet isDisposed = false;\n\n\tconst element = createElement(options);\n\n\tconst _uriMassage = function (part: string): string {\n\t\tlet data: any;\n\t\ttry {\n\t\t\tdata = parse(decodeURIComponent(part));\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\t\tif (!data) {\n\t\t\treturn part;\n\t\t}\n\t\tdata = cloneAndChange(data, value => {\n\t\t\tif (markdown.uris && markdown.uris[value]) {\n\t\t\t\treturn URI.revive(markdown.uris[value]);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\t\treturn encodeURIComponent(JSON.stringify(data));\n\t};\n\n\tconst _href = function (href: string, isDomUri: boolean): string {\n\t\tconst data = markdown.uris && markdown.uris[href];\n\t\tlet uri = URI.revive(data);\n\t\tif (isDomUri) {\n\t\t\tif (href.startsWith(Schemas.data + ':')) {\n\t\t\t\treturn href;\n\t\t\t}\n\t\t\tif (!uri) {\n\t\t\t\turi = URI.parse(href);\n\t\t\t}\n\t\t\t// this URI will end up as \"src\"-attribute of a dom node\n\t\t\t// and because of that special rewriting needs to be done\n\t\t\t// so that the URI uses a protocol that's understood by\n\t\t\t// browsers (like http or https)\n\t\t\treturn FileAccess.uriToBrowserUri(uri).toString(true);\n\t\t}\n\t\tif (!uri) {\n\t\t\treturn href;\n\t\t}\n\t\tif (URI.parse(href).toString() === uri.toString()) {\n\t\t\treturn href; // no transformation performed\n\t\t}\n\t\tif (uri.query) {\n\t\t\turi = uri.with({ query: _uriMassage(uri.query) });\n\t\t}\n\t\treturn uri.toString();\n\t};\n\n\tconst renderer = new marked.Renderer();\n\trenderer.image = defaultMarkedRenderers.image;\n\trenderer.link = defaultMarkedRenderers.link;\n\trenderer.paragraph = defaultMarkedRenderers.paragraph;\n\n\t// Will collect [id, renderedElement] tuples\n\tconst codeBlocks: Promise<[string, HTMLElement]>[] = [];\n\tconst syncCodeBlocks: [string, HTMLElement][] = [];\n\n\tif (options.codeBlockRendererSync) {\n\t\trenderer.code = (code, lang) => {\n\t\t\tconst id = defaultGenerator.nextId();\n\t\t\tconst value = options.codeBlockRendererSync!(postProcessCodeBlockLanguageId(lang), code);\n\t\t\tsyncCodeBlocks.push([id, value]);\n\t\t\treturn `<div class=\"code\" data-code=\"${id}\">${escape(code)}</div>`;\n\t\t};\n\t} else if (options.codeBlockRenderer) {\n\t\trenderer.code = (code, lang) => {\n\t\t\tconst id = defaultGenerator.nextId();\n\t\t\tconst value = options.codeBlockRenderer!(postProcessCodeBlockLanguageId(lang), code);\n\t\t\tcodeBlocks.push(value.then(element => [id, element]));\n\t\t\treturn `<div class=\"code\" data-code=\"${id}\">${escape(code)}</div>`;\n\t\t};\n\t}\n\n\tif (options.actionHandler) {\n\t\tconst _activateLink = function (event: StandardMouseEvent | StandardKeyboardEvent): void {\n\t\t\tlet target: HTMLElement | null = event.target;\n\t\t\tif (target.tagName !== 'A') {\n\t\t\t\ttarget = target.parentElement;\n\t\t\t\tif (!target || target.tagName !== 'A') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tlet href = target.dataset['href'];\n\t\t\t\tif (href) {\n\t\t\t\t\tif (markdown.baseUri) {\n\t\t\t\t\t\thref = resolveWithBaseUri(URI.from(markdown.baseUri), href);\n\t\t\t\t\t}\n\t\t\t\t\toptions.actionHandler!.callback(href, event);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t} finally {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t};\n\t\tconst onClick = options.actionHandler.disposables.add(new DomEmitter(element, 'click'));\n\t\tconst onAuxClick = options.actionHandler.disposables.add(new DomEmitter(element, 'auxclick'));\n\t\toptions.actionHandler.disposables.add(Event.any(onClick.event, onAuxClick.event)(e => {\n\t\t\tconst mouseEvent = new StandardMouseEvent(e);\n\t\t\tif (!mouseEvent.leftButton && !mouseEvent.middleButton) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_activateLink(mouseEvent);\n\t\t}));\n\t\toptions.actionHandler.disposables.add(DOM.addDisposableListener(element, 'keydown', (e) => {\n\t\t\tconst keyboardEvent = new StandardKeyboardEvent(e);\n\t\t\tif (!keyboardEvent.equals(KeyCode.Space) && !keyboardEvent.equals(KeyCode.Enter)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_activateLink(keyboardEvent);\n\t\t}));\n\t}\n\n\tif (!markdown.supportHtml) {\n\t\t// TODO: Can we deprecated this in favor of 'supportHtml'?\n\n\t\t// Use our own sanitizer so that we can let through only spans.\n\t\t// Otherwise, we'd be letting all html be rendered.\n\t\t// If we want to allow markdown permitted tags, then we can delete sanitizer and sanitize.\n\t\t// We always pass the output through dompurify after this so that we don't rely on\n\t\t// marked for sanitization.\n\t\tmarkedOptions.sanitizer = (html: string): string => {\n\t\t\tconst match = markdown.isTrusted ? html.match(/^(<span[^>]+>)|(<\\/\\s*span>)$/) : undefined;\n\t\t\treturn match ? html : '';\n\t\t};\n\t\tmarkedOptions.sanitize = true;\n\t\tmarkedOptions.silent = true;\n\t}\n\n\tmarkedOptions.renderer = renderer;\n\n\t// values that are too long will freeze the UI\n\tlet value = markdown.value ?? '';\n\tif (value.length > 100_000) {\n\t\tvalue = `${value.substr(0, 100_000)}…`;\n\t}\n\t// escape theme icons\n\tif (markdown.supportThemeIcons) {\n\t\tvalue = markdownEscapeEscapedIcons(value);\n\t}\n\n\tlet renderedMarkdown: string;\n\tif (options.fillInIncompleteTokens) {\n\t\t// The defaults are applied by parse but not lexer()/parser(), and they need to be present\n\t\tconst opts = {\n\t\t\t...marked.defaults,\n\t\t\t...markedOptions\n\t\t};\n\t\tconst tokens = marked.lexer(value, opts);\n\t\tconst newTokens = fillInIncompleteTokens(tokens);\n\t\trenderedMarkdown = marked.parser(newTokens, opts);\n\t} else {\n\t\trenderedMarkdown = marked.parse(value, markedOptions);\n\t}\n\n\t// Rewrite theme icons\n\tif (markdown.supportThemeIcons) {\n\t\tconst elements = renderLabelWithIcons(renderedMarkdown);\n\t\trenderedMarkdown = elements.map(e => typeof e === 'string' ? e : e.outerHTML).join('');\n\t}\n\n\tconst htmlParser = new DOMParser();\n\tconst markdownHtmlDoc = htmlParser.parseFromString(sanitizeRenderedMarkdown(markdown, renderedMarkdown) as unknown as string, 'text/html');\n\n\tmarkdownHtmlDoc.body.querySelectorAll('img')\n\t\t.forEach(img => {\n\t\t\tconst src = img.getAttribute('src'); // Get the raw 'src' attribute value as text, not the resolved 'src'\n\t\t\tif (src) {\n\t\t\t\tlet href = src;\n\t\t\t\ttry {\n\t\t\t\t\tif (markdown.baseUri) { // absolute or relative local path, or file: uri\n\t\t\t\t\t\thref = resolveWithBaseUri(URI.from(markdown.baseUri), href);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) { }\n\n\t\t\t\timg.src = _href(href, true);\n\t\t\t}\n\t\t});\n\n\tmarkdownHtmlDoc.body.querySelectorAll('a')\n\t\t.forEach(a => {\n\t\t\tconst href = a.getAttribute('href'); // Get the raw 'href' attribute value as text, not the resolved 'href'\n\t\t\ta.setAttribute('href', ''); // Clear out href. We use the `data-href` for handling clicks instead\n\t\t\tif (\n\t\t\t\t!href\n\t\t\t\t|| /^data:|javascript:/i.test(href)\n\t\t\t\t|| (/^command:/i.test(href) && !markdown.isTrusted)\n\t\t\t\t|| /^command:(\\/\\/\\/)?_workbench\\.downloadResource/i.test(href)\n\t\t\t) {\n\t\t\t\t// drop the link\n\t\t\t\ta.replaceWith(...a.childNodes);\n\t\t\t} else {\n\t\t\t\tlet resolvedHref = _href(href, false);\n\t\t\t\tif (markdown.baseUri) {\n\t\t\t\t\tresolvedHref = resolveWithBaseUri(URI.from(markdown.baseUri), href);\n\t\t\t\t}\n\t\t\t\ta.dataset.href = resolvedHref;\n\t\t\t}\n\t\t});\n\n\telement.innerHTML = sanitizeRenderedMarkdown(markdown, markdownHtmlDoc.body.innerHTML) as unknown as string;\n\n\tif (codeBlocks.length > 0) {\n\t\tPromise.all(codeBlocks).then((tuples) => {\n\t\t\tif (isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst renderedElements = new Map(tuples);\n\t\t\tconst placeholderElements = element.querySelectorAll<HTMLDivElement>(`div[data-code]`);\n\t\t\tfor (const placeholderElement of placeholderElements) {\n\t\t\t\tconst renderedElement = renderedElements.get(placeholderElement.dataset['code'] ?? '');\n\t\t\t\tif (renderedElement) {\n\t\t\t\t\tDOM.reset(placeholderElement, renderedElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\toptions.asyncRenderCallback?.();\n\t\t});\n\t} else if (syncCodeBlocks.length > 0) {\n\t\tconst renderedElements = new Map(syncCodeBlocks);\n\t\tconst placeholderElements = element.querySelectorAll<HTMLDivElement>(`div[data-code]`);\n\t\tfor (const placeholderElement of placeholderElements) {\n\t\t\tconst renderedElement = renderedElements.get(placeholderElement.dataset['code'] ?? '');\n\t\t\tif (renderedElement) {\n\t\t\t\tDOM.reset(placeholderElement, renderedElement);\n\t\t\t}\n\t\t}\n\t}\n\n\t// signal size changes for image tags\n\tif (options.asyncRenderCallback) {\n\t\tfor (const img of element.getElementsByTagName('img')) {\n\t\t\tconst listener = disposables.add(DOM.addDisposableListener(img, 'load', () => {\n\t\t\t\tlistener.dispose();\n\t\t\t\toptions.asyncRenderCallback!();\n\t\t\t}));\n\t\t}\n\t}\n\n\treturn {\n\t\telement,\n\t\tdispose: () => {\n\t\t\tisDisposed = true;\n\t\t\tdisposables.dispose();\n\t\t}\n\t};\n}\n\nfunction postProcessCodeBlockLanguageId(lang: string | undefined): string {\n\tif (!lang) {\n\t\treturn '';\n\t}\n\n\tconst parts = lang.split(/[\\s+|:|,|\\{|\\?]/, 1);\n\tif (parts.length) {\n\t\treturn parts[0];\n\t}\n\treturn lang;\n}\n\nfunction resolveWithBaseUri(baseUri: URI, href: string): string {\n\tconst hasScheme = /^\\w[\\w\\d+.-]*:/.test(href);\n\tif (hasScheme) {\n\t\treturn href;\n\t}\n\n\tif (baseUri.path.endsWith('/')) {\n\t\treturn resolvePath(baseUri, href).toString();\n\t} else {\n\t\treturn resolvePath(dirname(baseUri), href).toString();\n\t}\n}\n\nfunction sanitizeRenderedMarkdown(\n\toptions: { isTrusted?: boolean | MarkdownStringTrustedOptions },\n\trenderedMarkdown: string,\n): TrustedHTML {\n\tconst { config, allowedSchemes } = getSanitizerOptions(options);\n\tdompurify.addHook('uponSanitizeAttribute', (element, e) => {\n\t\tif (e.attrName === 'style' || e.attrName === 'class') {\n\t\t\tif (element.tagName === 'SPAN') {\n\t\t\t\tif (e.attrName === 'style') {\n\t\t\t\t\te.keepAttr = /^(color\\:(#[0-9a-fA-F]+|var\\(--vscode(-[a-zA-Z]+)+\\));)?(background-color\\:(#[0-9a-fA-F]+|var\\(--vscode(-[a-zA-Z]+)+\\));)?$/.test(e.attrValue);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (e.attrName === 'class') {\n\t\t\t\t\te.keepAttr = /^codicon codicon-[a-z\\-]+( codicon-modifier-[a-z\\-]+)?$/.test(e.attrValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\te.keepAttr = false;\n\t\t\treturn;\n\t\t}\n\t});\n\n\tconst hook = DOM.hookDomPurifyHrefAndSrcSanitizer(allowedSchemes);\n\n\ttry {\n\t\treturn dompurify.sanitize(renderedMarkdown, { ...config, RETURN_TRUSTED_TYPE: true });\n\t} finally {\n\t\tdompurify.removeHook('uponSanitizeAttribute');\n\t\thook.dispose();\n\t}\n}\n\nexport const allowedMarkdownAttr = [\n\t'align',\n\t'autoplay',\n\t'alt',\n\t'class',\n\t'controls',\n\t'data-code',\n\t'data-href',\n\t'height',\n\t'href',\n\t'loop',\n\t'muted',\n\t'playsinline',\n\t'poster',\n\t'src',\n\t'style',\n\t'target',\n\t'title',\n\t'width',\n\t'start',\n];\n\nfunction getSanitizerOptions(options: { readonly isTrusted?: boolean | MarkdownStringTrustedOptions }): { config: dompurify.Config; allowedSchemes: string[] } {\n\tconst allowedSchemes = [\n\t\tSchemas.http,\n\t\tSchemas.https,\n\t\tSchemas.mailto,\n\t\tSchemas.data,\n\t\tSchemas.file,\n\t\tSchemas.vscodeFileResource,\n\t\tSchemas.vscodeRemote,\n\t\tSchemas.vscodeRemoteResource,\n\t];\n\n\tif (options.isTrusted) {\n\t\tallowedSchemes.push(Schemas.command);\n\t}\n\n\treturn {\n\t\tconfig: {\n\t\t\t// allowedTags should included everything that markdown renders to.\n\t\t\t// Since we have our own sanitize function for marked, it's possible we missed some tag so let dompurify make sure.\n\t\t\t// HTML tags that can result from markdown are from reading https://spec.commonmark.org/0.29/\n\t\t\t// HTML table tags that can result from markdown are from https://github.github.com/gfm/#tables-extension-\n\t\t\tALLOWED_TAGS: [...DOM.basicMarkupHtmlTags],\n\t\t\tALLOWED_ATTR: allowedMarkdownAttr,\n\t\t\tALLOW_UNKNOWN_PROTOCOLS: true,\n\t\t},\n\t\tallowedSchemes\n\t};\n}\n\n/**\n * Strips all markdown from `string`, if it's an IMarkdownString. For example\n * `# Header` would be output as `Header`. If it's not, the string is returned.\n */\nexport function renderStringAsPlaintext(string: IMarkdownString | string) {\n\treturn typeof string === 'string' ? string : renderMarkdownAsPlaintext(string);\n}\n\n/**\n * Strips all markdown from `markdown`. For example `# Header` would be output as `Header`.\n */\nexport function renderMarkdownAsPlaintext(markdown: IMarkdownString) {\n\t// values that are too long will freeze the UI\n\tlet value = markdown.value ?? '';\n\tif (value.length > 100_000) {\n\t\tvalue = `${value.substr(0, 100_000)}…`;\n\t}\n\n\tconst html = marked.parse(value, { renderer: plainTextRenderer.value }).replace(/&(#\\d+|[a-zA-Z]+);/g, m => unescapeInfo.get(m) ?? m);\n\n\treturn sanitizeRenderedMarkdown({ isTrusted: false }, html).toString();\n}\n\nconst unescapeInfo = new Map<string, string>([\n\t['&quot;', '\"'],\n\t['&nbsp;', ' '],\n\t['&amp;', '&'],\n\t['&#39;', '\\''],\n\t['&lt;', '<'],\n\t['&gt;', '>'],\n]);\n\nconst plainTextRenderer = new Lazy<marked.Renderer>(() => {\n\tconst renderer = new marked.Renderer();\n\n\trenderer.code = (code: string): string => {\n\t\treturn code;\n\t};\n\trenderer.blockquote = (quote: string): string => {\n\t\treturn quote;\n\t};\n\trenderer.html = (_html: string): string => {\n\t\treturn '';\n\t};\n\trenderer.heading = (text: string, _level: 1 | 2 | 3 | 4 | 5 | 6, _raw: string): string => {\n\t\treturn text + '\\n';\n\t};\n\trenderer.hr = (): string => {\n\t\treturn '';\n\t};\n\trenderer.list = (body: string, _ordered: boolean): string => {\n\t\treturn body;\n\t};\n\trenderer.listitem = (text: string): string => {\n\t\treturn text + '\\n';\n\t};\n\trenderer.paragraph = (text: string): string => {\n\t\treturn text + '\\n';\n\t};\n\trenderer.table = (header: string, body: string): string => {\n\t\treturn header + body + '\\n';\n\t};\n\trenderer.tablerow = (content: string): string => {\n\t\treturn content;\n\t};\n\trenderer.tablecell = (content: string, _flags: {\n\t\theader: boolean;\n\t\talign: 'center' | 'left' | 'right' | null;\n\t}): string => {\n\t\treturn content + ' ';\n\t};\n\trenderer.strong = (text: string): string => {\n\t\treturn text;\n\t};\n\trenderer.em = (text: string): string => {\n\t\treturn text;\n\t};\n\trenderer.codespan = (code: string): string => {\n\t\treturn code;\n\t};\n\trenderer.br = (): string => {\n\t\treturn '\\n';\n\t};\n\trenderer.del = (text: string): string => {\n\t\treturn text;\n\t};\n\trenderer.image = (_href: string, _title: string, _text: string): string => {\n\t\treturn '';\n\t};\n\trenderer.text = (text: string): string => {\n\t\treturn text;\n\t};\n\trenderer.link = (_href: string, _title: string, text: string): string => {\n\t\treturn text;\n\t};\n\treturn renderer;\n});\n\nfunction mergeRawTokenText(tokens: marked.Token[]): string {\n\tlet mergedTokenText = '';\n\ttokens.forEach(token => {\n\t\tmergedTokenText += token.raw;\n\t});\n\treturn mergedTokenText;\n}\n\nfunction completeSingleLinePattern(token: marked.Tokens.ListItem | marked.Tokens.Paragraph): marked.Token | undefined {\n\tfor (const subtoken of token.tokens) {\n\t\tif (subtoken.type === 'text') {\n\t\t\tconst lines = subtoken.raw.split('\\n');\n\t\t\tconst lastLine = lines[lines.length - 1];\n\t\t\tif (lastLine.includes('`')) {\n\t\t\t\treturn completeCodespan(token);\n\t\t\t} else if (lastLine.includes('**')) {\n\t\t\t\treturn completeDoublestar(token);\n\t\t\t} else if (lastLine.match(/\\*\\w/)) {\n\t\t\t\treturn completeStar(token);\n\t\t\t} else if (lastLine.match(/(^|\\s)__\\w/)) {\n\t\t\t\treturn completeDoubleUnderscore(token);\n\t\t\t} else if (lastLine.match(/(^|\\s)_\\w/)) {\n\t\t\t\treturn completeUnderscore(token);\n\t\t\t} else if (lastLine.match(/(^|\\s)\\[.*\\]\\(\\w*/)) {\n\t\t\t\treturn completeLinkTarget(token);\n\t\t\t} else if (lastLine.match(/(^|\\s)\\[\\w/)) {\n\t\t\t\treturn completeLinkText(token);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n// function completeListItemPattern(token: marked.Tokens.List): marked.Tokens.List | undefined {\n// \t// Patch up this one list item\n// \tconst lastItem = token.items[token.items.length - 1];\n\n// \tconst newList = completeSingleLinePattern(lastItem);\n// \tif (!newList || newList.type !== 'list') {\n// \t\t// Nothing to fix, or not a pattern we were expecting\n// \t\treturn;\n// \t}\n\n// \t// Re-parse the whole list with the last item replaced\n// \tconst completeList = marked.lexer(mergeRawTokenText(token.items.slice(0, token.items.length - 1)) + newList.items[0].raw);\n// \tif (completeList.length === 1 && completeList[0].type === 'list') {\n// \t\treturn completeList[0];\n// \t}\n\n// \t// Not a pattern we were expecting\n// \treturn undefined;\n// }\n\nexport function fillInIncompleteTokens(tokens: marked.TokensList): marked.TokensList {\n\tlet i: number;\n\tlet newTokens: marked.Token[] | undefined;\n\tfor (i = 0; i < tokens.length; i++) {\n\t\tconst token = tokens[i];\n\t\tif (token.type === 'paragraph' && token.raw.match(/(\\n|^)```/)) {\n\t\t\t// If the code block was complete, it would be in a type='code'\n\t\t\tnewTokens = completeCodeBlock(tokens.slice(i));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (token.type === 'paragraph' && token.raw.match(/(\\n|^)\\|/)) {\n\t\t\tnewTokens = completeTable(tokens.slice(i));\n\t\t\tbreak;\n\t\t}\n\n\t\t// if (i === tokens.length - 1 && token.type === 'list') {\n\t\t// \tconst newListToken = completeListItemPattern(token);\n\t\t// \tif (newListToken) {\n\t\t// \t\tnewTokens = [newListToken];\n\t\t// \t\tbreak;\n\t\t// \t}\n\t\t// }\n\n\t\tif (i === tokens.length - 1 && token.type === 'paragraph') {\n\t\t\t// Only operates on a single token, because any newline that follows this should break these patterns\n\t\t\tconst newToken = completeSingleLinePattern(token);\n\t\t\tif (newToken) {\n\t\t\t\tnewTokens = [newToken];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (newTokens) {\n\t\tconst newTokensList = [\n\t\t\t...tokens.slice(0, i),\n\t\t\t...newTokens\n\t\t];\n\t\t(newTokensList as marked.TokensList).links = tokens.links;\n\t\treturn newTokensList as marked.TokensList;\n\t}\n\n\treturn tokens;\n}\n\nfunction completeCodeBlock(tokens: marked.Token[]): marked.Token[] {\n\tconst mergedRawText = mergeRawTokenText(tokens);\n\treturn marked.lexer(mergedRawText + '\\n```');\n}\n\nfunction completeCodespan(token: marked.Token): marked.Token {\n\treturn completeWithString(token, '`');\n}\n\nfunction completeStar(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, '*');\n}\n\nfunction completeUnderscore(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, '_');\n}\n\nfunction completeLinkTarget(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, ')');\n}\n\nfunction completeLinkText(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, '](about:blank)');\n}\n\nfunction completeDoublestar(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, '**');\n}\n\nfunction completeDoubleUnderscore(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, '__');\n}\n\nfunction completeWithString(tokens: marked.Token[] | marked.Token, closingString: string): marked.Token {\n\tconst mergedRawText = mergeRawTokenText(Array.isArray(tokens) ? tokens : [tokens]);\n\n\t// If it was completed correctly, this should be a single token.\n\t// Expecting either a Paragraph or a List\n\treturn marked.lexer(mergedRawText + closingString)[0] as marked.Token;\n}\n\nfunction completeTable(tokens: marked.Token[]): marked.Token[] | undefined {\n\tconst mergedRawText = mergeRawTokenText(tokens);\n\tconst lines = mergedRawText.split('\\n');\n\n\tlet numCols: number | undefined; // The number of line1 col headers\n\tlet hasSeparatorRow = false;\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst line = lines[i].trim();\n\t\tif (typeof numCols === 'undefined' && line.match(/^\\s*\\|/)) {\n\t\t\tconst line1Matches = line.match(/(\\|[^\\|]+)(?=\\||$)/g);\n\t\t\tif (line1Matches) {\n\t\t\t\tnumCols = line1Matches.length;\n\t\t\t}\n\t\t} else if (typeof numCols === 'number') {\n\t\t\tif (line.match(/^\\s*\\|/)) {\n\t\t\t\tif (i !== lines.length - 1) {\n\t\t\t\t\t// We got the line1 header row, and the line2 separator row, but there are more lines, and it wasn't parsed as a table!\n\t\t\t\t\t// That's strange and means that the table is probably malformed in the source, so I won't try to patch it up.\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// Got a line2 separator row- partial or complete, doesn't matter, we'll replace it with a correct one\n\t\t\t\thasSeparatorRow = true;\n\t\t\t} else {\n\t\t\t\t// The line after the header row isn't a valid separator row, so the table is malformed, don't fix it up\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (typeof numCols === 'number' && numCols > 0) {\n\t\tconst prefixText = hasSeparatorRow ? lines.slice(0, -1).join('\\n') : mergedRawText;\n\t\tconst line1EndsInPipe = !!prefixText.match(/\\|\\s*$/);\n\t\tconst newRawText = prefixText + (line1EndsInPipe ? '' : '|') + `\\n|${' --- |'.repeat(numCols)}`;\n\t\treturn marked.lexer(newRawText);\n\t}\n\n\treturn undefined;\n}\n"]}