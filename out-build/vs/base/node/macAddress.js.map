{"version":3,"sources":["file:///workspace/appflow/src/vs/base/node/macAddress.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAIhG,MAAM,mBAAmB,GAAG,IAAI,GAAG,CAAC;QACnC,mBAAmB;QACnB,mBAAmB;QACnB,mBAAmB;KACnB,CAAC,CAAC;IAEH,SAAS,kBAAkB,CAAC,SAAiB;QAC5C,MAAM,aAAa,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QAClE,OAAO,CAAC,mBAAmB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAChD,CAAC;IAED,SAAgB,GAAG;QAClB,MAAM,MAAM,GAAG,IAAA,sBAAiB,GAAE,CAAC;QACnC,KAAK,MAAM,IAAI,IAAI,MAAM,EAAE;YAC1B,MAAM,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACtC,IAAI,gBAAgB,EAAE;gBACrB,KAAK,MAAM,EAAE,GAAG,EAAE,IAAI,gBAAgB,EAAE;oBACvC,IAAI,kBAAkB,CAAC,GAAG,CAAC,EAAE;wBAC5B,OAAO,GAAG,CAAC;qBACX;iBACD;aACD;SACD;QAED,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;IACvE,CAAC;IAdD,kBAcC","file":"macAddress.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { networkInterfaces } from 'os';\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): string {\n\tconst ifaces = networkInterfaces();\n\tfor (const name in ifaces) {\n\t\tconst networkInterface = ifaces[name];\n\t\tif (networkInterface) {\n\t\t\tfor (const { mac } of networkInterface) {\n\t\t\t\tif (validateMacAddress(mac)) {\n\t\t\t\t\treturn mac;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow new Error('Unable to retrieve mac address (unexpected format)');\n}\n"]}