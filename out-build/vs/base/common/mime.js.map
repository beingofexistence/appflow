{"version":3,"sources":["file:///workspace/appflow/src/vs/base/common/mime.ts"],"names":[],"mappings":"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","file":"mime.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { extname } from 'vs/base/common/path';\n\nexport const Mimes = Object.freeze({\n\ttext: 'text/plain',\n\tbinary: 'application/octet-stream',\n\tunknown: 'application/unknown',\n\tmarkdown: 'text/markdown',\n\tlatex: 'text/latex',\n\turiList: 'text/uri-list',\n});\n\ninterface MapExtToMediaMimes {\n\t[index: string]: string;\n}\n\nconst mapExtToTextMimes: MapExtToMediaMimes = {\n\t'.css': 'text/css',\n\t'.csv': 'text/csv',\n\t'.htm': 'text/html',\n\t'.html': 'text/html',\n\t'.ics': 'text/calendar',\n\t'.js': 'text/javascript',\n\t'.mjs': 'text/javascript',\n\t'.txt': 'text/plain',\n\t'.xml': 'text/xml'\n};\n\n// Known media mimes that we can handle\nconst mapExtToMediaMimes: MapExtToMediaMimes = {\n\t'.aac': 'audio/x-aac',\n\t'.avi': 'video/x-msvideo',\n\t'.bmp': 'image/bmp',\n\t'.flv': 'video/x-flv',\n\t'.gif': 'image/gif',\n\t'.ico': 'image/x-icon',\n\t'.jpe': 'image/jpg',\n\t'.jpeg': 'image/jpg',\n\t'.jpg': 'image/jpg',\n\t'.m1v': 'video/mpeg',\n\t'.m2a': 'audio/mpeg',\n\t'.m2v': 'video/mpeg',\n\t'.m3a': 'audio/mpeg',\n\t'.mid': 'audio/midi',\n\t'.midi': 'audio/midi',\n\t'.mk3d': 'video/x-matroska',\n\t'.mks': 'video/x-matroska',\n\t'.mkv': 'video/x-matroska',\n\t'.mov': 'video/quicktime',\n\t'.movie': 'video/x-sgi-movie',\n\t'.mp2': 'audio/mpeg',\n\t'.mp2a': 'audio/mpeg',\n\t'.mp3': 'audio/mpeg',\n\t'.mp4': 'video/mp4',\n\t'.mp4a': 'audio/mp4',\n\t'.mp4v': 'video/mp4',\n\t'.mpe': 'video/mpeg',\n\t'.mpeg': 'video/mpeg',\n\t'.mpg': 'video/mpeg',\n\t'.mpg4': 'video/mp4',\n\t'.mpga': 'audio/mpeg',\n\t'.oga': 'audio/ogg',\n\t'.ogg': 'audio/ogg',\n\t'.opus': 'audio/opus',\n\t'.ogv': 'video/ogg',\n\t'.png': 'image/png',\n\t'.psd': 'image/vnd.adobe.photoshop',\n\t'.qt': 'video/quicktime',\n\t'.spx': 'audio/ogg',\n\t'.svg': 'image/svg+xml',\n\t'.tga': 'image/x-tga',\n\t'.tif': 'image/tiff',\n\t'.tiff': 'image/tiff',\n\t'.wav': 'audio/x-wav',\n\t'.webm': 'video/webm',\n\t'.webp': 'image/webp',\n\t'.wma': 'audio/x-ms-wma',\n\t'.wmv': 'video/x-ms-wmv',\n\t'.woff': 'application/font-woff',\n};\n\nexport function getMediaOrTextMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\tconst textMime = mapExtToTextMimes[ext.toLowerCase()];\n\tif (textMime !== undefined) {\n\t\treturn textMime;\n\t} else {\n\t\treturn getMediaMime(path);\n\t}\n}\n\nexport function getMediaMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\treturn mapExtToMediaMimes[ext.toLowerCase()];\n}\n\nexport function getExtensionForMimeType(mimeType: string): string | undefined {\n\tfor (const extension in mapExtToMediaMimes) {\n\t\tif (mapExtToMediaMimes[extension] === mimeType) {\n\t\t\treturn extension;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nconst _simplePattern = /^(.+)\\/(.+?)(;.+)?$/;\n\nexport function normalizeMimeType(mimeType: string): string;\nexport function normalizeMimeType(mimeType: string, strict: true): string | undefined;\nexport function normalizeMimeType(mimeType: string, strict?: true): string | undefined {\n\n\tconst match = _simplePattern.exec(mimeType);\n\tif (!match) {\n\t\treturn strict\n\t\t\t? undefined\n\t\t\t: mimeType;\n\t}\n\t// https://datatracker.ietf.org/doc/html/rfc2045#section-5.1\n\t// media and subtype must ALWAYS be lowercase, parameter not\n\treturn `${match[1].toLowerCase()}/${match[2].toLowerCase()}${match[3] ?? ''}`;\n}\n"]}