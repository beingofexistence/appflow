{"version":3,"sources":["file:///workspace/appflow/src/vs/base/common/htmlContent.ts"],"names":[],"mappings":"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","file":"htmlContent.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalArgument } from 'vs/base/common/errors';\nimport { escapeIcons } from 'vs/base/common/iconLabels';\nimport { isEqual } from 'vs/base/common/resources';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport interface MarkdownStringTrustedOptions {\n\treadonly enabledCommands: readonly string[];\n}\n\nexport interface IMarkdownString {\n\treadonly value: string;\n\treadonly isTrusted?: boolean | MarkdownStringTrustedOptions;\n\treadonly supportThemeIcons?: boolean;\n\treadonly supportHtml?: boolean;\n\treadonly baseUri?: UriComponents;\n\turis?: { [href: string]: UriComponents };\n}\n\nexport const enum MarkdownStringTextNewlineStyle {\n\tParagraph = 0,\n\tBreak = 1,\n}\n\nexport class MarkdownString implements IMarkdownString {\n\n\tpublic value: string;\n\tpublic isTrusted?: boolean | MarkdownStringTrustedOptions;\n\tpublic supportThemeIcons?: boolean;\n\tpublic supportHtml?: boolean;\n\tpublic baseUri?: URI;\n\n\tconstructor(\n\t\tvalue: string = '',\n\t\tisTrustedOrOptions: boolean | { isTrusted?: boolean | MarkdownStringTrustedOptions; supportThemeIcons?: boolean; supportHtml?: boolean } = false,\n\t) {\n\t\tthis.value = value;\n\t\tif (typeof this.value !== 'string') {\n\t\t\tthrow illegalArgument('value');\n\t\t}\n\n\t\tif (typeof isTrustedOrOptions === 'boolean') {\n\t\t\tthis.isTrusted = isTrustedOrOptions;\n\t\t\tthis.supportThemeIcons = false;\n\t\t\tthis.supportHtml = false;\n\t\t}\n\t\telse {\n\t\t\tthis.isTrusted = isTrustedOrOptions.isTrusted ?? undefined;\n\t\t\tthis.supportThemeIcons = isTrustedOrOptions.supportThemeIcons ?? false;\n\t\t\tthis.supportHtml = isTrustedOrOptions.supportHtml ?? false;\n\t\t}\n\t}\n\n\tappendText(value: string, newlineStyle: MarkdownStringTextNewlineStyle = MarkdownStringTextNewlineStyle.Paragraph): MarkdownString {\n\t\tthis.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\n\t\t\t.replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length)) // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n\t\t\t.replace(/\\>/gm, '\\\\>') // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n\t\t\t.replace(/\\n/g, newlineStyle === MarkdownStringTextNewlineStyle.Break ? '\\\\\\n' : '\\n\\n'); // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n\n\t\treturn this;\n\t}\n\n\tappendMarkdown(value: string): MarkdownString {\n\t\tthis.value += value;\n\t\treturn this;\n\t}\n\n\tappendCodeblock(langId: string, code: string): MarkdownString {\n\t\tthis.value += '\\n```';\n\t\tthis.value += langId;\n\t\tthis.value += '\\n';\n\t\tthis.value += code;\n\t\tthis.value += '\\n```\\n';\n\t\treturn this;\n\t}\n\n\tappendLink(target: URI | string, label: string, title?: string): MarkdownString {\n\t\tthis.value += '[';\n\t\tthis.value += this._escape(label, ']');\n\t\tthis.value += '](';\n\t\tthis.value += this._escape(String(target), ')');\n\t\tif (title) {\n\t\t\tthis.value += ` \"${this._escape(this._escape(title, '\"'), ')')}\"`;\n\t\t}\n\t\tthis.value += ')';\n\t\treturn this;\n\t}\n\n\tprivate _escape(value: string, ch: string): string {\n\t\tconst r = new RegExp(escapeRegExpCharacters(ch), 'g');\n\t\treturn value.replace(r, (match, offset) => {\n\t\t\tif (value.charAt(offset - 1) !== '\\\\') {\n\t\t\t\treturn `\\\\${match}`;\n\t\t\t} else {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function isEmptyMarkdownString(oneOrMany: IMarkdownString | IMarkdownString[] | null | undefined): boolean {\n\tif (isMarkdownString(oneOrMany)) {\n\t\treturn !oneOrMany.value;\n\t} else if (Array.isArray(oneOrMany)) {\n\t\treturn oneOrMany.every(isEmptyMarkdownString);\n\t} else {\n\t\treturn true;\n\t}\n}\n\nexport function isMarkdownString(thing: any): thing is IMarkdownString {\n\tif (thing instanceof MarkdownString) {\n\t\treturn true;\n\t} else if (thing && typeof thing === 'object') {\n\t\treturn typeof (<IMarkdownString>thing).value === 'string'\n\t\t\t&& (typeof (<IMarkdownString>thing).isTrusted === 'boolean' || typeof (<IMarkdownString>thing).isTrusted === 'object' || (<IMarkdownString>thing).isTrusted === undefined)\n\t\t\t&& (typeof (<IMarkdownString>thing).supportThemeIcons === 'boolean' || (<IMarkdownString>thing).supportThemeIcons === undefined);\n\t}\n\treturn false;\n}\n\nexport function markdownStringEqual(a: IMarkdownString, b: IMarkdownString): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t} else if (!a || !b) {\n\t\treturn false;\n\t} else {\n\t\treturn a.value === b.value\n\t\t\t&& a.isTrusted === b.isTrusted\n\t\t\t&& a.supportThemeIcons === b.supportThemeIcons\n\t\t\t&& a.supportHtml === b.supportHtml\n\t\t\t&& (a.baseUri === b.baseUri || !!a.baseUri && !!b.baseUri && isEqual(URI.from(a.baseUri), URI.from(b.baseUri)));\n\t}\n}\n\nexport function escapeMarkdownSyntaxTokens(text: string): string {\n\t// escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n\treturn text.replace(/[\\\\`*_{}[\\]()#+\\-!~]/g, '\\\\$&'); // CodeQL [SM02383] Backslash is escaped in the character class\n}\n\nexport function escapeDoubleQuotes(input: string) {\n\treturn input.replace(/\"/g, '&quot;');\n}\n\nexport function removeMarkdownEscapes(text: string): string {\n\tif (!text) {\n\t\treturn text;\n\t}\n\treturn text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!~])/g, '$1');\n}\n\nexport function parseHrefAndDimensions(href: string): { href: string; dimensions: string[] } {\n\tconst dimensions: string[] = [];\n\tconst splitted = href.split('|').map(s => s.trim());\n\thref = splitted[0];\n\tconst parameters = splitted[1];\n\tif (parameters) {\n\t\tconst heightFromParams = /height=(\\d+)/.exec(parameters);\n\t\tconst widthFromParams = /width=(\\d+)/.exec(parameters);\n\t\tconst height = heightFromParams ? heightFromParams[1] : '';\n\t\tconst width = widthFromParams ? widthFromParams[1] : '';\n\t\tconst widthIsFinite = isFinite(parseInt(width));\n\t\tconst heightIsFinite = isFinite(parseInt(height));\n\t\tif (widthIsFinite) {\n\t\t\tdimensions.push(`width=\"${width}\"`);\n\t\t}\n\t\tif (heightIsFinite) {\n\t\t\tdimensions.push(`height=\"${height}\"`);\n\t\t}\n\t}\n\treturn { href, dimensions };\n}\n"]}