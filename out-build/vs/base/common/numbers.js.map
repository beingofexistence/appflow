{"version":3,"sources":["file:///workspace/appflow/src/vs/base/common/numbers.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAEhG,SAAgB,GAAG,CAAG,KAAa,EAAE,GAAW,EAAE,GAAW;QAC5D,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;IAC5C,CAAC;IAFD,kBAEC;IAED,SAAgB,GAAG,CAAC,KAAa,EAAE,MAAc;QAChD,OAAO,CAAC,MAAM,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7C,CAAC;IAFD,kBAEC;IAED,MAAa,GAAG;QAAhB;YACS,MAAC,GAAO,CAAC,CAAC;QAKnB,CAAC;QAHA,OAAO;YACN,OAAO,IAAI,CAAC,CAAC,EAAM,CAAC;QACrB,CAAC;KACD;IAND,kBAMC;IAED,MAAa,GAAG;QAAhB;YAES,MAAC,GAAI,CAAC,CAAC;YACP,MAAC,GAAM,CAAC,CAAC;QAWlB,CAAC;QATA,MAAM,CAAC,KAAa;YACnB,IAAI,CAAC,CAAC,GAAM,IAAI,CAAC,CAAC,GAAM,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAI,GAAG,IAAI,CAAC,CAAC,CAAE;YACtD,IAAI,CAAC,CAAC,IAAK,CAAC,CAAC;YACb,OAAO,IAAI,CAAC,CAAC,CAAI;QAClB,CAAC;QAED,IAAI,KAAK;YACR,OAAO,IAAI,CAAC,CAAC,CAAI;QAClB,CAAC;KACD;IAdD,kBAcC;IAED,MAAa,GAAG;QASf,YAAY,IAAY;YAPhB,MAAC,GAAY,CAAC,CAAC;YACf,MAAC,GAAM,CAAC,CAAC;YAEA,MAAC,GAAmB,EAAE,CAAC;YAChC,MAAC,GAAgB,CAAC,CAAC;YACnB,MAAC,GAAM,CAAC,CAAC;YAGhB,IAAI,CAAC,CAAC,GAAS,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,CAAO,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC/B,CAAC;QAED,MAAM,CAAC,KAAa;YACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAO,IAAI,CAAC,CAAC,CAAM,CAAC;YAC3C,IAAI,CAAC,CAAC,CAAO,IAAI,CAAC,CAAC,CAAM,GAAG,KAAK,CAAC;YAClC,IAAI,CAAC,CAAC,GAAQ,CAAC,IAAI,CAAC,CAAC,GAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAO,MAAM,CAAC;YAEtD,IAAI,CAAC,CAAC,IAAO,QAAQ,CAAC;YACtB,IAAI,CAAC,CAAC,IAAO,KAAK,CAAC;YAEnB,IAAI,IAAI,CAAC,CAAC,GAAI,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE;gBAClC,IAAI,CAAC,CAAC,IAAK,CAAC,CAAC;aACb;YAED,IAAI,CAAC,CAAC,GAAM,IAAI,CAAC,CAAC,GAAM,IAAI,CAAC,CAAC,CAAE;YAChC,OAAO,IAAI,CAAC,CAAC,CAAI;QAClB,CAAC;QAED,IAAI,KAAK;YACR,OAAO,IAAI,CAAC,CAAC,CAAI;QAClB,CAAC;KACD;IAjCD,kBAiCC","file":"numbers.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function clamp(value: number, min: number, max: number): number {\n\treturn Math.min(Math.max(value, min), max);\n}\n\nexport function rot(index: number, modulo: number): number {\n\treturn (modulo + (index % modulo)) % modulo;\n}\n\nexport class Counter {\n\tprivate _next = 0;\n\n\tgetNext(): number {\n\t\treturn this._next++;\n\t}\n}\n\nexport class MovingAverage {\n\n\tprivate _n = 1;\n\tprivate _val = 0;\n\n\tupdate(value: number): number {\n\t\tthis._val = this._val + (value - this._val) / this._n;\n\t\tthis._n += 1;\n\t\treturn this._val;\n\t}\n\n\tget value(): number {\n\t\treturn this._val;\n\t}\n}\n\nexport class SlidingWindowAverage {\n\n\tprivate _n: number = 0;\n\tprivate _val = 0;\n\n\tprivate readonly _values: number[] = [];\n\tprivate _index: number = 0;\n\tprivate _sum = 0;\n\n\tconstructor(size: number) {\n\t\tthis._values = new Array(size);\n\t\tthis._values.fill(0, 0, size);\n\t}\n\n\tupdate(value: number): number {\n\t\tconst oldValue = this._values[this._index];\n\t\tthis._values[this._index] = value;\n\t\tthis._index = (this._index + 1) % this._values.length;\n\n\t\tthis._sum -= oldValue;\n\t\tthis._sum += value;\n\n\t\tif (this._n < this._values.length) {\n\t\t\tthis._n += 1;\n\t\t}\n\n\t\tthis._val = this._sum / this._n;\n\t\treturn this._val;\n\t}\n\n\tget value(): number {\n\t\treturn this._val;\n\t}\n}\n"]}