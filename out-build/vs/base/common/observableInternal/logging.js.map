{"version":3,"sources":["file:///workspace/appflow/src/vs/base/common/observableInternal/logging.ts"],"names":[],"mappings":"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","file":"logging.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AutorunObserver } from 'vs/base/common/observableInternal/autorun';\nimport { IObservable, ObservableValue, TransactionImpl } from 'vs/base/common/observableInternal/base';\nimport { Derived } from 'vs/base/common/observableInternal/derived';\nimport { FromEventObservable } from 'vs/base/common/observableInternal/utils';\n\nlet globalObservableLogger: IObservableLogger | undefined;\n\nexport function setLogger(logger: IObservableLogger): void {\n\tglobalObservableLogger = logger;\n}\n\nexport function getLogger(): IObservableLogger | undefined {\n\treturn globalObservableLogger;\n}\n\ninterface IChangeInformation {\n\toldValue: unknown;\n\tnewValue: unknown;\n\tchange: unknown;\n\tdidChange: boolean;\n\thadValue: boolean;\n}\n\nexport interface IObservableLogger {\n\thandleObservableChanged(observable: ObservableValue<any, any>, info: IChangeInformation): void;\n\thandleFromEventObservableTriggered(observable: FromEventObservable<any, any>, info: IChangeInformation): void;\n\n\thandleAutorunCreated(autorun: AutorunObserver): void;\n\thandleAutorunTriggered(autorun: AutorunObserver): void;\n\thandleAutorunFinished(autorun: AutorunObserver): void;\n\n\thandleDerivedCreated(observable: Derived<any>): void;\n\thandleDerivedRecomputed(observable: Derived<any>, info: IChangeInformation): void;\n\n\thandleBeginTransaction(transaction: TransactionImpl): void;\n\thandleEndTransaction(): void;\n}\n\nexport class ConsoleObservableLogger implements IObservableLogger {\n\tprivate indentation = 0;\n\n\tprivate textToConsoleArgs(text: ConsoleText): unknown[] {\n\t\treturn consoleTextToArgs([\n\t\t\tnormalText(repeat('|  ', this.indentation)),\n\t\t\ttext,\n\t\t]);\n\t}\n\n\tprivate formatInfo(info: IChangeInformation): ConsoleText[] {\n\t\tif (!info.hadValue) {\n\t\t\treturn [\n\t\t\t\tnormalText(` `),\n\t\t\t\tstyled(formatValue(info.newValue, 60), {\n\t\t\t\t\tcolor: 'green',\n\t\t\t\t}),\n\t\t\t\tnormalText(` (initial)`),\n\t\t\t];\n\t\t}\n\t\treturn info.didChange\n\t\t\t? [\n\t\t\t\tnormalText(` `),\n\t\t\t\tstyled(formatValue(info.oldValue, 70), {\n\t\t\t\t\tcolor: 'red',\n\t\t\t\t\tstrikeThrough: true,\n\t\t\t\t}),\n\t\t\t\tnormalText(` `),\n\t\t\t\tstyled(formatValue(info.newValue, 60), {\n\t\t\t\t\tcolor: 'green',\n\t\t\t\t}),\n\t\t\t]\n\t\t\t: [normalText(` (unchanged)`)];\n\t}\n\n\thandleObservableChanged(observable: IObservable<unknown, unknown>, info: IChangeInformation): void {\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('observable value changed'),\n\t\t\tstyled(observable.debugName, { color: 'BlueViolet' }),\n\t\t\t...this.formatInfo(info),\n\t\t]));\n\t}\n\n\tprivate readonly changedObservablesSets = new WeakMap<object, Set<IObservable<any, any>>>();\n\n\tformatChanges(changes: Set<IObservable<any, any>>): ConsoleText | undefined {\n\t\tif (changes.size === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn styled(\n\t\t\t' (changed deps: ' +\n\t\t\t[...changes].map((o) => o.debugName).join(', ') +\n\t\t\t')',\n\t\t\t{ color: 'gray' }\n\t\t);\n\t}\n\n\thandleDerivedCreated(derived: Derived<unknown>): void {\n\t\tconst existingHandleChange = derived.handleChange;\n\t\tthis.changedObservablesSets.set(derived, new Set());\n\t\tderived.handleChange = (observable, change) => {\n\t\t\tthis.changedObservablesSets.get(derived)!.add(observable);\n\t\t\treturn existingHandleChange.apply(derived, [observable, change]);\n\t\t};\n\t}\n\n\thandleDerivedRecomputed(derived: Derived<unknown>, info: IChangeInformation): void {\n\t\tconst changedObservables = this.changedObservablesSets.get(derived)!;\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('derived recomputed'),\n\t\t\tstyled(derived.debugName, { color: 'BlueViolet' }),\n\t\t\t...this.formatInfo(info),\n\t\t\tthis.formatChanges(changedObservables),\n\t\t\t{ data: [{ fn: derived._computeFn }] }\n\t\t]));\n\t\tchangedObservables.clear();\n\t}\n\n\thandleFromEventObservableTriggered(observable: FromEventObservable<any, any>, info: IChangeInformation): void {\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('observable from event triggered'),\n\t\t\tstyled(observable.debugName, { color: 'BlueViolet' }),\n\t\t\t...this.formatInfo(info),\n\t\t\t{ data: [{ fn: observable._getValue }] }\n\t\t]));\n\t}\n\n\thandleAutorunCreated(autorun: AutorunObserver): void {\n\t\tconst existingHandleChange = autorun.handleChange;\n\t\tthis.changedObservablesSets.set(autorun, new Set());\n\t\tautorun.handleChange = (observable, change) => {\n\t\t\tthis.changedObservablesSets.get(autorun)!.add(observable);\n\t\t\treturn existingHandleChange.apply(autorun, [observable, change]);\n\t\t};\n\t}\n\n\thandleAutorunTriggered(autorun: AutorunObserver): void {\n\t\tconst changedObservables = this.changedObservablesSets.get(autorun)!;\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('autorun'),\n\t\t\tstyled(autorun.debugName, { color: 'BlueViolet' }),\n\t\t\tthis.formatChanges(changedObservables),\n\t\t\t{ data: [{ fn: autorun._runFn }] }\n\t\t]));\n\t\tchangedObservables.clear();\n\t\tthis.indentation++;\n\t}\n\n\thandleAutorunFinished(autorun: AutorunObserver): void {\n\t\tthis.indentation--;\n\t}\n\n\thandleBeginTransaction(transaction: TransactionImpl): void {\n\t\tlet transactionName = transaction.getDebugName();\n\t\tif (transactionName === undefined) {\n\t\t\ttransactionName = '';\n\t\t}\n\t\tconsole.log(...this.textToConsoleArgs([\n\t\t\tformatKind('transaction'),\n\t\t\tstyled(transactionName, { color: 'BlueViolet' }),\n\t\t\t{ data: [{ fn: transaction._fn }] }\n\t\t]));\n\t\tthis.indentation++;\n\t}\n\n\thandleEndTransaction(): void {\n\t\tthis.indentation--;\n\t}\n}\n\ntype ConsoleText =\n\t| (ConsoleText | undefined)[]\n\t| { text: string; style: string; data?: unknown[] }\n\t| { data: unknown[] };\n\nfunction consoleTextToArgs(text: ConsoleText): unknown[] {\n\tconst styles = new Array<any>();\n\tconst data: unknown[] = [];\n\tlet firstArg = '';\n\n\tfunction process(t: ConsoleText): void {\n\t\tif ('length' in t) {\n\t\t\tfor (const item of t) {\n\t\t\t\tif (item) {\n\t\t\t\t\tprocess(item);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ('text' in t) {\n\t\t\tfirstArg += `%c${t.text}`;\n\t\t\tstyles.push(t.style);\n\t\t\tif (t.data) {\n\t\t\t\tdata.push(...t.data);\n\t\t\t}\n\t\t} else if ('data' in t) {\n\t\t\tdata.push(...t.data);\n\t\t}\n\t}\n\n\tprocess(text);\n\n\tconst result = [firstArg, ...styles];\n\tresult.push(...data);\n\treturn result;\n}\n\nfunction normalText(text: string): ConsoleText {\n\treturn styled(text, { color: 'black' });\n}\n\nfunction formatKind(kind: string): ConsoleText {\n\treturn styled(padStr(`${kind}: `, 10), { color: 'black', bold: true });\n}\n\nfunction styled(\n\ttext: string,\n\toptions: { color: string; strikeThrough?: boolean; bold?: boolean } = {\n\t\tcolor: 'black',\n\t}\n): ConsoleText {\n\tfunction objToCss(styleObj: Record<string, string>): string {\n\t\treturn Object.entries(styleObj).reduce(\n\t\t\t(styleString, [propName, propValue]) => {\n\t\t\t\treturn `${styleString}${propName}:${propValue};`;\n\t\t\t},\n\t\t\t''\n\t\t);\n\t}\n\n\tconst style: Record<string, string> = {\n\t\tcolor: options.color,\n\t};\n\tif (options.strikeThrough) {\n\t\tstyle['text-decoration'] = 'line-through';\n\t}\n\tif (options.bold) {\n\t\tstyle['font-weight'] = 'bold';\n\t}\n\n\treturn {\n\t\ttext,\n\t\tstyle: objToCss(style),\n\t};\n}\n\nfunction formatValue(value: unknown, availableLen: number): string {\n\tswitch (typeof value) {\n\t\tcase 'number':\n\t\t\treturn '' + value;\n\t\tcase 'string':\n\t\t\tif (value.length + 2 <= availableLen) {\n\t\t\t\treturn `\"${value}\"`;\n\t\t\t}\n\t\t\treturn `\"${value.substr(0, availableLen - 7)}\"+...`;\n\n\t\tcase 'boolean':\n\t\t\treturn value ? 'true' : 'false';\n\t\tcase 'undefined':\n\t\t\treturn 'undefined';\n\t\tcase 'object':\n\t\t\tif (value === null) {\n\t\t\t\treturn 'null';\n\t\t\t}\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn formatArray(value, availableLen);\n\t\t\t}\n\t\t\treturn formatObject(value, availableLen);\n\t\tcase 'symbol':\n\t\t\treturn value.toString();\n\t\tcase 'function':\n\t\t\treturn `[[Function${value.name ? ' ' + value.name : ''}]]`;\n\t\tdefault:\n\t\t\treturn '' + value;\n\t}\n}\n\nfunction formatArray(value: unknown[], availableLen: number): string {\n\tlet result = '[ ';\n\tlet first = true;\n\tfor (const val of value) {\n\t\tif (!first) {\n\t\t\tresult += ', ';\n\t\t}\n\t\tif (result.length - 5 > availableLen) {\n\t\t\tresult += '...';\n\t\t\tbreak;\n\t\t}\n\t\tfirst = false;\n\t\tresult += `${formatValue(val, availableLen - result.length)}`;\n\t}\n\tresult += ' ]';\n\treturn result;\n}\n\nfunction formatObject(value: object, availableLen: number): string {\n\tlet result = '{ ';\n\tlet first = true;\n\tfor (const [key, val] of Object.entries(value)) {\n\t\tif (!first) {\n\t\t\tresult += ', ';\n\t\t}\n\t\tif (result.length - 5 > availableLen) {\n\t\t\tresult += '...';\n\t\t\tbreak;\n\t\t}\n\t\tfirst = false;\n\t\tresult += `${key}: ${formatValue(val, availableLen - result.length)}`;\n\t}\n\tresult += ' }';\n\treturn result;\n}\n\nfunction repeat(str: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 1; i <= count; i++) {\n\t\tresult += str;\n\t}\n\treturn result;\n}\n\nfunction padStr(str: string, length: number): string {\n\twhile (str.length < length) {\n\t\tstr += ' ';\n\t}\n\treturn str;\n}\n"]}