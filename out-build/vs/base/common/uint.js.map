{"version":3,"sources":["file:///workspace/appflow/src/vs/base/common/uint.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAEhG,IAAkB,SAiCjB;IAjCD,WAAkB,SAAS;QAC1B;;;;;WAKG;QACH,sFAAgC,CAAA;QAEhC;;;;;WAKG;QACH,uFAAmC,CAAA;QAEnC;;WAEG;QACH,uDAAgB,CAAA;QAEhB;;WAEG;QACH,2DAAmB,CAAA;QAEnB;;WAEG;QACH,gEAAwB,CAAA;QAExB,uGAA4C,CAAA;IAC7C,CAAC,EAjCiB,SAAS,yBAAT,SAAS,QAiC1B;IAED,SAAgB,GAAG,CAAK,CAAS;QAChC,IAAI,CAAC,GAAG,CAAC,EAAE;YACV,OAAO,CAAC,CAAC;SACT;QACD,IAAI,CAAC,iCAAuB,EAAE;YAC7B,sCAA4B;SAC5B;QACD,OAAO,CAAC,GAAG,CAAC,CAAC;IACd,CAAC;IARD,kBAQC;IAED,SAAgB,GAAG,CAAM,CAAS;QACjC,IAAI,CAAC,GAAG,CAAC,EAAE;YACV,OAAO,CAAC,CAAC;SACT;QACD,IAAI,CAAC,yCAAwB,EAAE;YAC9B,8CAA6B;SAC7B;QACD,OAAO,CAAC,GAAG,CAAC,CAAC;IACd,CAAC;IARD,kBAQC","file":"uint.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum Constants {\n\t/**\n\t * MAX SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\n\n\t/**\n\t * MIN SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\n\n\t/**\n\t * Max unsigned integer that fits on 8 bits.\n\t */\n\tMAX_UINT_8 = 255, // 2^8 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 16 bits.\n\t */\n\tMAX_UINT_16 = 65535, // 2^16 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 32 bits.\n\t */\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\n\n\tUNICODE_SUPPLEMENTARY_PLANE_BEGIN = 0x010000\n}\n\nexport function toUint8(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_8) {\n\t\treturn Constants.MAX_UINT_8;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_32) {\n\t\treturn Constants.MAX_UINT_32;\n\t}\n\treturn v | 0;\n}\n"]}