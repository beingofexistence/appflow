{"version":3,"sources":["file:///workspace/appflow/src/vs/base/parts/request/common/request.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAIhG,MAAM,WAAW,GAAG,SAAS,CAAC;IAE9B;;OAEG;IACH,SAAgB,GAAG,CAAY,KAAU;QACxC,IAAI,KAAK,YAAY,GAAG,EAAW;YAClC,OAAO,IAAI,CAAC;SACZ;QACD,OAAO,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,IAAI,KAAK,CAAC,OAAO,KAAK,WAAW,CAAC;IAC9F,CAAC;IALD,kBAKC;IAED,MAAa,GAAa,SAAQ,KAAK;QACtC;YACC,KAAK,CAAC,WAAW,CAAC,CAAC;YACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;QAC1B,CAAC;KACD;IALD,kBAKC","file":"request.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBufferReadableStream } from 'vs/base/common/buffer';\n\nconst offlineName = 'Offline';\n\n/**\n * Checks if the given error is offline error\n */\nexport function isOfflineError(error: any): boolean {\n\tif (error instanceof OfflineError) {\n\t\treturn true;\n\t}\n\treturn error instanceof Error && error.name === offlineName && error.message === offlineName;\n}\n\nexport class OfflineError extends Error {\n\tconstructor() {\n\t\tsuper(offlineName);\n\t\tthis.name = this.message;\n\t}\n}\n\nexport interface IHeaders {\n\t[header: string]: string;\n}\n\nexport interface IRequestOptions {\n\ttype?: string;\n\turl?: string;\n\tuser?: string;\n\tpassword?: string;\n\theaders?: IHeaders;\n\ttimeout?: number;\n\tdata?: string;\n\tfollowRedirects?: number;\n\tproxyAuthorization?: string;\n}\n\nexport interface IRequestContext {\n\tres: {\n\t\theaders: IHeaders;\n\t\tstatusCode?: number;\n\t};\n\tstream: VSBufferReadableStream;\n}\n"]}