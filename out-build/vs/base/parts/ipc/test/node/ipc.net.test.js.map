{"version":3,"sources":["file:///workspace/appflow/src/vs/base/parts/ipc/test/node/ipc.net.test.ts"],"names":[],"mappings":"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","file":"ipc.net.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { EventEmitter } from 'events';\nimport { AddressInfo, connect, createServer, Server, Socket } from 'net';\nimport { tmpdir } from 'os';\nimport { Barrier, timeout } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { ILoadEstimator, PersistentProtocol, Protocol, ProtocolConstants, SocketCloseEvent, SocketDiagnosticsEventType } from 'vs/base/parts/ipc/common/ipc.net';\nimport { createRandomIPCHandle, createStaticIPCHandle, NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { flakySuite } from 'vs/base/test/common/testUtils';\nimport { runWithFakedTimers } from 'vs/base/test/common/timeTravelScheduler';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nclass MessageStream extends Disposable {\n\n\tprivate _currentComplete: ((data: VSBuffer) => void) | null;\n\tprivate _messages: VSBuffer[];\n\n\tconstructor(x: Protocol | PersistentProtocol) {\n\t\tsuper();\n\t\tthis._currentComplete = null;\n\t\tthis._messages = [];\n\t\tthis._register(x.onMessage(data => {\n\t\t\tthis._messages.push(data);\n\t\t\tthis._trigger();\n\t\t}));\n\t}\n\n\tprivate _trigger(): void {\n\t\tif (!this._currentComplete) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._messages.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst complete = this._currentComplete;\n\t\tconst msg = this._messages.shift()!;\n\n\t\tthis._currentComplete = null;\n\t\tcomplete(msg);\n\t}\n\n\tpublic waitForOne(): Promise<VSBuffer> {\n\t\treturn new Promise<VSBuffer>((complete) => {\n\t\t\tthis._currentComplete = complete;\n\t\t\tthis._trigger();\n\t\t});\n\t}\n}\n\nclass EtherStream extends EventEmitter {\n\tconstructor(\n\t\tprivate readonly _ether: Ether,\n\t\tprivate readonly _name: 'a' | 'b'\n\t) {\n\t\tsuper();\n\t}\n\n\twrite(data: Buffer, cb?: Function): boolean {\n\t\tif (!Buffer.isBuffer(data)) {\n\t\t\tthrow new Error(`Invalid data`);\n\t\t}\n\t\tthis._ether.write(this._name, data);\n\t\treturn true;\n\t}\n\n\tdestroy(): void {\n\t}\n}\n\nclass Ether {\n\n\tprivate readonly _a: EtherStream;\n\tprivate readonly _b: EtherStream;\n\n\tprivate _ab: Buffer[];\n\tprivate _ba: Buffer[];\n\n\tpublic get a(): Socket {\n\t\treturn <any>this._a;\n\t}\n\n\tpublic get b(): Socket {\n\t\treturn <any>this._b;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _wireLatency = 0\n\t) {\n\t\tthis._a = new EtherStream(this, 'a');\n\t\tthis._b = new EtherStream(this, 'b');\n\t\tthis._ab = [];\n\t\tthis._ba = [];\n\t}\n\n\tpublic write(from: 'a' | 'b', data: Buffer): void {\n\t\tsetTimeout(() => {\n\t\t\tif (from === 'a') {\n\t\t\t\tthis._ab.push(data);\n\t\t\t} else {\n\t\t\t\tthis._ba.push(data);\n\t\t\t}\n\n\t\t\tsetTimeout(() => this._deliver(), 0);\n\t\t}, this._wireLatency);\n\t}\n\n\tprivate _deliver(): void {\n\n\t\tif (this._ab.length > 0) {\n\t\t\tconst data = Buffer.concat(this._ab);\n\t\t\tthis._ab.length = 0;\n\t\t\tthis._b.emit('data', data);\n\t\t\tsetTimeout(() => this._deliver(), 0);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._ba.length > 0) {\n\t\t\tconst data = Buffer.concat(this._ba);\n\t\t\tthis._ba.length = 0;\n\t\t\tthis._a.emit('data', data);\n\t\t\tsetTimeout(() => this._deliver(), 0);\n\t\t\treturn;\n\t\t}\n\n\t}\n}\n\nsuite('IPC, Socket Protocol', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet ether: Ether;\n\n\tsetup(() => {\n\t\tether = new Ether();\n\t});\n\n\ttest('read/write', async () => {\n\n\t\tconst a = new Protocol(new NodeSocket(ether.a));\n\t\tconst b = new Protocol(new NodeSocket(ether.b));\n\t\tconst bMessages = new MessageStream(b);\n\n\t\ta.send(VSBuffer.fromString('foobarfarboo'));\n\t\tconst msg1 = await bMessages.waitForOne();\n\t\tassert.strictEqual(msg1.toString(), 'foobarfarboo');\n\n\t\tconst buffer = VSBuffer.alloc(1);\n\t\tbuffer.writeUInt8(123, 0);\n\t\ta.send(buffer);\n\t\tconst msg2 = await bMessages.waitForOne();\n\t\tassert.strictEqual(msg2.readUInt8(0), 123);\n\n\t\tbMessages.dispose();\n\t\ta.dispose();\n\t\tb.dispose();\n\t});\n\n\n\ttest('read/write, object data', async () => {\n\n\t\tconst a = new Protocol(new NodeSocket(ether.a));\n\t\tconst b = new Protocol(new NodeSocket(ether.b));\n\t\tconst bMessages = new MessageStream(b);\n\n\t\tconst data = {\n\t\t\tpi: Math.PI,\n\t\t\tfoo: 'bar',\n\t\t\tmore: true,\n\t\t\tdata: 'Hello World'.split('')\n\t\t};\n\n\t\ta.send(VSBuffer.fromString(JSON.stringify(data)));\n\t\tconst msg = await bMessages.waitForOne();\n\t\tassert.deepStrictEqual(JSON.parse(msg.toString()), data);\n\n\t\tbMessages.dispose();\n\t\ta.dispose();\n\t\tb.dispose();\n\t});\n\n});\n\nsuite('PersistentProtocol reconnection', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('acks get piggybacked with messages', async () => {\n\t\tconst ether = new Ether();\n\t\tconst a = new PersistentProtocol({ socket: new NodeSocket(ether.a) });\n\t\tconst aMessages = new MessageStream(a);\n\t\tconst b = new PersistentProtocol({ socket: new NodeSocket(ether.b) });\n\t\tconst bMessages = new MessageStream(b);\n\n\t\ta.send(VSBuffer.fromString('a1'));\n\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\ta.send(VSBuffer.fromString('a2'));\n\t\tassert.strictEqual(a.unacknowledgedCount, 2);\n\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\ta.send(VSBuffer.fromString('a3'));\n\t\tassert.strictEqual(a.unacknowledgedCount, 3);\n\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\tconst a1 = await bMessages.waitForOne();\n\t\tassert.strictEqual(a1.toString(), 'a1');\n\t\tassert.strictEqual(a.unacknowledgedCount, 3);\n\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\tconst a2 = await bMessages.waitForOne();\n\t\tassert.strictEqual(a2.toString(), 'a2');\n\t\tassert.strictEqual(a.unacknowledgedCount, 3);\n\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\tconst a3 = await bMessages.waitForOne();\n\t\tassert.strictEqual(a3.toString(), 'a3');\n\t\tassert.strictEqual(a.unacknowledgedCount, 3);\n\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\tb.send(VSBuffer.fromString('b1'));\n\t\tassert.strictEqual(a.unacknowledgedCount, 3);\n\t\tassert.strictEqual(b.unacknowledgedCount, 1);\n\n\t\tconst b1 = await aMessages.waitForOne();\n\t\tassert.strictEqual(b1.toString(), 'b1');\n\t\tassert.strictEqual(a.unacknowledgedCount, 0);\n\t\tassert.strictEqual(b.unacknowledgedCount, 1);\n\n\t\ta.send(VSBuffer.fromString('a4'));\n\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\tassert.strictEqual(b.unacknowledgedCount, 1);\n\n\t\tconst b2 = await bMessages.waitForOne();\n\t\tassert.strictEqual(b2.toString(), 'a4');\n\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\taMessages.dispose();\n\t\tbMessages.dispose();\n\t\ta.dispose();\n\t\tb.dispose();\n\t});\n\n\ttest('ack gets sent after a while', async () => {\n\t\tawait runWithFakedTimers({ useFakeTimers: true, maxTaskCount: 100 }, async () => {\n\t\t\tconst loadEstimator: ILoadEstimator = {\n\t\t\t\thasHighLoad: () => false\n\t\t\t};\n\t\t\tconst ether = new Ether();\n\t\t\tconst aSocket = new NodeSocket(ether.a);\n\t\t\tconst a = new PersistentProtocol({ socket: aSocket, loadEstimator });\n\t\t\tconst aMessages = new MessageStream(a);\n\t\t\tconst bSocket = new NodeSocket(ether.b);\n\t\t\tconst b = new PersistentProtocol({ socket: bSocket, loadEstimator });\n\t\t\tconst bMessages = new MessageStream(b);\n\n\t\t\t// send one message A -> B\n\t\t\ta.send(VSBuffer.fromString('a1'));\n\t\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\t\t\tconst a1 = await bMessages.waitForOne();\n\t\t\tassert.strictEqual(a1.toString(), 'a1');\n\t\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\t\t// wait for ack to arrive B -> A\n\t\t\tawait timeout(2 * ProtocolConstants.AcknowledgeTime);\n\t\t\tassert.strictEqual(a.unacknowledgedCount, 0);\n\t\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\t\taMessages.dispose();\n\t\t\tbMessages.dispose();\n\t\t\ta.dispose();\n\t\t\tb.dispose();\n\t\t});\n\t});\n\n\ttest('messages that are never written to a socket should not cause an ack timeout', async () => {\n\t\tawait runWithFakedTimers(\n\t\t\t{\n\t\t\t\tuseFakeTimers: true,\n\t\t\t\tuseSetImmediate: true,\n\t\t\t\tmaxTaskCount: 1000\n\t\t\t},\n\t\t\tasync () => {\n\t\t\t\t// Date.now() in fake timers starts at 0, which is very inconvenient\n\t\t\t\t// since we want to test exactly that a certain field is not initialized with Date.now()\n\t\t\t\t// As a workaround we wait such that Date.now() starts producing more realistic values\n\t\t\t\tawait timeout(60 * 60 * 1000);\n\n\t\t\t\tconst loadEstimator: ILoadEstimator = {\n\t\t\t\t\thasHighLoad: () => false\n\t\t\t\t};\n\t\t\t\tconst ether = new Ether();\n\t\t\t\tconst aSocket = new NodeSocket(ether.a);\n\t\t\t\tconst a = new PersistentProtocol({ socket: aSocket, loadEstimator, sendKeepAlive: false });\n\t\t\t\tconst aMessages = new MessageStream(a);\n\t\t\t\tconst bSocket = new NodeSocket(ether.b);\n\t\t\t\tconst b = new PersistentProtocol({ socket: bSocket, loadEstimator, sendKeepAlive: false });\n\t\t\t\tconst bMessages = new MessageStream(b);\n\n\t\t\t\t// send message a1 before reconnection to get _recvAckCheck() scheduled\n\t\t\t\ta.send(VSBuffer.fromString('a1'));\n\t\t\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\t\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\t\t\t// read message a1 at B\n\t\t\t\tconst a1 = await bMessages.waitForOne();\n\t\t\t\tassert.strictEqual(a1.toString(), 'a1');\n\t\t\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\t\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\t\t\t// send message b1 to send the ack for a1\n\t\t\t\tb.send(VSBuffer.fromString('b1'));\n\t\t\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\t\t\tassert.strictEqual(b.unacknowledgedCount, 1);\n\n\t\t\t\t// read message b1 at A to receive the ack for a1\n\t\t\t\tconst b1 = await aMessages.waitForOne();\n\t\t\t\tassert.strictEqual(b1.toString(), 'b1');\n\t\t\t\tassert.strictEqual(a.unacknowledgedCount, 0);\n\t\t\t\tassert.strictEqual(b.unacknowledgedCount, 1);\n\n\t\t\t\t// begin reconnection\n\t\t\t\taSocket.dispose();\n\t\t\t\tconst aSocket2 = new NodeSocket(ether.a);\n\t\t\t\ta.beginAcceptReconnection(aSocket2, null);\n\n\t\t\t\tlet timeoutListenerCalled = false;\n\t\t\t\tconst socketTimeoutListener = a.onSocketTimeout(() => {\n\t\t\t\t\ttimeoutListenerCalled = true;\n\t\t\t\t});\n\n\t\t\t\t// send message 2 during reconnection\n\t\t\t\ta.send(VSBuffer.fromString('a2'));\n\t\t\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\t\t\tassert.strictEqual(b.unacknowledgedCount, 1);\n\n\t\t\t\t// wait for scheduled _recvAckCheck() to execute\n\t\t\t\tawait timeout(2 * ProtocolConstants.TimeoutTime);\n\n\t\t\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\t\t\tassert.strictEqual(b.unacknowledgedCount, 1);\n\t\t\t\tassert.strictEqual(timeoutListenerCalled, false);\n\n\t\t\t\ta.endAcceptReconnection();\n\t\t\t\tassert.strictEqual(timeoutListenerCalled, false);\n\n\t\t\t\tawait timeout(2 * ProtocolConstants.TimeoutTime);\n\t\t\t\tassert.strictEqual(a.unacknowledgedCount, 0);\n\t\t\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\t\t\t\tassert.strictEqual(timeoutListenerCalled, false);\n\n\t\t\t\tsocketTimeoutListener.dispose();\n\t\t\t\taMessages.dispose();\n\t\t\t\tbMessages.dispose();\n\t\t\t\ta.dispose();\n\t\t\t\tb.dispose();\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('acks are always sent after a reconnection', async () => {\n\t\tawait runWithFakedTimers(\n\t\t\t{\n\t\t\t\tuseFakeTimers: true,\n\t\t\t\tuseSetImmediate: true,\n\t\t\t\tmaxTaskCount: 1000\n\t\t\t},\n\t\t\tasync () => {\n\n\t\t\t\tconst loadEstimator: ILoadEstimator = {\n\t\t\t\t\thasHighLoad: () => false\n\t\t\t\t};\n\t\t\t\tconst wireLatency = 1000;\n\t\t\t\tconst ether = new Ether(wireLatency);\n\t\t\t\tconst aSocket = new NodeSocket(ether.a);\n\t\t\t\tconst a = new PersistentProtocol({ socket: aSocket, loadEstimator });\n\t\t\t\tconst aMessages = new MessageStream(a);\n\t\t\t\tconst bSocket = new NodeSocket(ether.b);\n\t\t\t\tconst b = new PersistentProtocol({ socket: bSocket, loadEstimator });\n\t\t\t\tconst bMessages = new MessageStream(b);\n\n\t\t\t\t// send message a1 to have something unacknowledged\n\t\t\t\ta.send(VSBuffer.fromString('a1'));\n\t\t\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\t\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\t\t\t// read message a1 at B\n\t\t\t\tconst a1 = await bMessages.waitForOne();\n\t\t\t\tassert.strictEqual(a1.toString(), 'a1');\n\t\t\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\t\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\t\t\t// wait for B to send an ACK message,\n\t\t\t\t// but resume before A receives it\n\t\t\t\tawait timeout(ProtocolConstants.AcknowledgeTime + wireLatency / 2);\n\t\t\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\t\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\t\t\t// simulate complete reconnection\n\t\t\t\taSocket.dispose();\n\t\t\t\tbSocket.dispose();\n\t\t\t\tconst ether2 = new Ether(wireLatency);\n\t\t\t\tconst aSocket2 = new NodeSocket(ether2.a);\n\t\t\t\tconst bSocket2 = new NodeSocket(ether2.b);\n\t\t\t\tb.beginAcceptReconnection(bSocket2, null);\n\t\t\t\tb.endAcceptReconnection();\n\t\t\t\ta.beginAcceptReconnection(aSocket2, null);\n\t\t\t\ta.endAcceptReconnection();\n\n\t\t\t\t// wait for quite some time\n\t\t\t\tawait timeout(2 * ProtocolConstants.AcknowledgeTime + wireLatency);\n\t\t\t\tassert.strictEqual(a.unacknowledgedCount, 0);\n\t\t\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\t\t\taMessages.dispose();\n\t\t\t\tbMessages.dispose();\n\t\t\t\ta.dispose();\n\t\t\t\tb.dispose();\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('onSocketTimeout is emitted at most once every 20s', async () => {\n\t\tawait runWithFakedTimers(\n\t\t\t{\n\t\t\t\tuseFakeTimers: true,\n\t\t\t\tuseSetImmediate: true,\n\t\t\t\tmaxTaskCount: 1000\n\t\t\t},\n\t\t\tasync () => {\n\n\t\t\t\tconst loadEstimator: ILoadEstimator = {\n\t\t\t\t\thasHighLoad: () => false\n\t\t\t\t};\n\t\t\t\tconst ether = new Ether();\n\t\t\t\tconst aSocket = new NodeSocket(ether.a);\n\t\t\t\tconst a = new PersistentProtocol({ socket: aSocket, loadEstimator });\n\t\t\t\tconst aMessages = new MessageStream(a);\n\t\t\t\tconst bSocket = new NodeSocket(ether.b);\n\t\t\t\tconst b = new PersistentProtocol({ socket: bSocket, loadEstimator });\n\t\t\t\tconst bMessages = new MessageStream(b);\n\n\t\t\t\t// never receive acks\n\t\t\t\tb.pauseSocketWriting();\n\n\t\t\t\t// send message a1 to have something unacknowledged\n\t\t\t\ta.send(VSBuffer.fromString('a1'));\n\n\t\t\t\t// wait for the first timeout to fire\n\t\t\t\tawait Event.toPromise(a.onSocketTimeout);\n\n\t\t\t\tlet timeoutFiredAgain = false;\n\t\t\t\tconst timeoutListener = a.onSocketTimeout(() => {\n\t\t\t\t\ttimeoutFiredAgain = true;\n\t\t\t\t});\n\n\t\t\t\t// send more messages\n\t\t\t\ta.send(VSBuffer.fromString('a2'));\n\t\t\t\ta.send(VSBuffer.fromString('a3'));\n\n\t\t\t\t// wait for 10s\n\t\t\t\tawait timeout(ProtocolConstants.TimeoutTime / 2);\n\n\t\t\t\tassert.strictEqual(timeoutFiredAgain, false);\n\n\t\t\t\ttimeoutListener.dispose();\n\t\t\t\taMessages.dispose();\n\t\t\t\tbMessages.dispose();\n\t\t\t\ta.dispose();\n\t\t\t\tb.dispose();\n\t\t\t}\n\t\t);\n\t});\n\n\ttest('writing can be paused', async () => {\n\t\tawait runWithFakedTimers({ useFakeTimers: true, maxTaskCount: 100 }, async () => {\n\t\t\tconst loadEstimator: ILoadEstimator = {\n\t\t\t\thasHighLoad: () => false\n\t\t\t};\n\t\t\tconst ether = new Ether();\n\t\t\tconst aSocket = new NodeSocket(ether.a);\n\t\t\tconst a = new PersistentProtocol({ socket: aSocket, loadEstimator });\n\t\t\tconst aMessages = new MessageStream(a);\n\t\t\tconst bSocket = new NodeSocket(ether.b);\n\t\t\tconst b = new PersistentProtocol({ socket: bSocket, loadEstimator });\n\t\t\tconst bMessages = new MessageStream(b);\n\n\t\t\t// send one message A -> B\n\t\t\ta.send(VSBuffer.fromString('a1'));\n\t\t\tconst a1 = await bMessages.waitForOne();\n\t\t\tassert.strictEqual(a1.toString(), 'a1');\n\n\t\t\t// ask A to pause writing\n\t\t\tb.sendPause();\n\n\t\t\t// send a message B -> A\n\t\t\tb.send(VSBuffer.fromString('b1'));\n\t\t\tconst b1 = await aMessages.waitForOne();\n\t\t\tassert.strictEqual(b1.toString(), 'b1');\n\n\t\t\t// send a message A -> B (this should be blocked at A)\n\t\t\ta.send(VSBuffer.fromString('a2'));\n\n\t\t\t// wait a long time and check that not even acks are written\n\t\t\tawait timeout(2 * ProtocolConstants.AcknowledgeTime);\n\t\t\tassert.strictEqual(a.unacknowledgedCount, 1);\n\t\t\tassert.strictEqual(b.unacknowledgedCount, 1);\n\n\t\t\t// ask A to resume writing\n\t\t\tb.sendResume();\n\n\t\t\t// check that B receives message\n\t\t\tconst a2 = await bMessages.waitForOne();\n\t\t\tassert.strictEqual(a2.toString(), 'a2');\n\n\t\t\t// wait a long time and check that acks are written\n\t\t\tawait timeout(2 * ProtocolConstants.AcknowledgeTime);\n\t\t\tassert.strictEqual(a.unacknowledgedCount, 0);\n\t\t\tassert.strictEqual(b.unacknowledgedCount, 0);\n\n\t\t\taMessages.dispose();\n\t\t\tbMessages.dispose();\n\t\t\ta.dispose();\n\t\t\tb.dispose();\n\t\t});\n\t});\n});\n\nflakySuite('IPC, create handle', () => {\n\n\ttest('createRandomIPCHandle', async () => {\n\t\treturn testIPCHandle(createRandomIPCHandle());\n\t});\n\n\ttest('createStaticIPCHandle', async () => {\n\t\treturn testIPCHandle(createStaticIPCHandle(tmpdir(), 'test', '1.64.0'));\n\t});\n\n\tfunction testIPCHandle(handle: string): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tconst pipeName = createRandomIPCHandle();\n\n\t\t\tconst server = createServer();\n\n\t\t\tserver.on('error', () => {\n\t\t\t\treturn new Promise(() => server.close(() => reject()));\n\t\t\t});\n\n\t\t\tserver.listen(pipeName, () => {\n\t\t\t\tserver.removeListener('error', reject);\n\n\t\t\t\treturn new Promise(() => {\n\t\t\t\t\tserver.close(() => resolve());\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n});\n\nsuite('WebSocketNodeSocket', () => {\n\n\tfunction toUint8Array(data: number[]): Uint8Array {\n\t\tconst result = new Uint8Array(data.length);\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tresult[i] = data[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction fromUint8Array(data: Uint8Array): number[] {\n\t\tconst result = [];\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tresult[i] = data[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction fromCharCodeArray(data: number[]): string {\n\t\tlet result = '';\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tresult += String.fromCharCode(data[i]);\n\t\t}\n\t\treturn result;\n\t}\n\n\tclass FakeNodeSocket extends Disposable {\n\n\t\tprivate readonly _onData = new Emitter<VSBuffer>();\n\t\tpublic readonly onData = this._onData.event;\n\n\t\tprivate readonly _onClose = new Emitter<SocketCloseEvent>();\n\t\tpublic readonly onClose = this._onClose.event;\n\n\t\tpublic traceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\t}\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tpublic fireData(data: number[]): void {\n\t\t\tthis._onData.fire(VSBuffer.wrap(toUint8Array(data)));\n\t\t}\n\t}\n\n\tasync function testReading(frames: number[][], permessageDeflate: boolean): Promise<string> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst socket = new FakeNodeSocket();\n\t\tconst webSocket = disposables.add(new WebSocketNodeSocket(<any>socket, permessageDeflate, null, false));\n\n\t\tconst barrier = new Barrier();\n\t\tlet remainingFrameCount = frames.length;\n\n\t\tlet receivedData: string = '';\n\t\tdisposables.add(webSocket.onData((buff) => {\n\t\t\treceivedData += fromCharCodeArray(fromUint8Array(buff.buffer));\n\t\t\tremainingFrameCount--;\n\t\t\tif (remainingFrameCount === 0) {\n\t\t\t\tbarrier.open();\n\t\t\t}\n\t\t}));\n\n\t\tfor (let i = 0; i < frames.length; i++) {\n\t\t\tsocket.fireData(frames[i]);\n\t\t}\n\n\t\tawait barrier.wait();\n\n\t\tdisposables.dispose();\n\n\t\treturn receivedData;\n\t}\n\n\ttest('A single-frame unmasked text message', async () => {\n\t\tconst frames = [\n\t\t\t[0x81, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f] // contains \"Hello\"\n\t\t];\n\t\tconst actual = await testReading(frames, false);\n\t\tassert.deepStrictEqual(actual, 'Hello');\n\t});\n\n\ttest('A single-frame masked text message', async () => {\n\t\tconst frames = [\n\t\t\t[0x81, 0x85, 0x37, 0xfa, 0x21, 0x3d, 0x7f, 0x9f, 0x4d, 0x51, 0x58] // contains \"Hello\"\n\t\t];\n\t\tconst actual = await testReading(frames, false);\n\t\tassert.deepStrictEqual(actual, 'Hello');\n\t});\n\n\ttest('A fragmented unmasked text message', async () => {\n\t\t// contains \"Hello\"\n\t\tconst frames = [\n\t\t\t[0x01, 0x03, 0x48, 0x65, 0x6c], // contains \"Hel\"\n\t\t\t[0x80, 0x02, 0x6c, 0x6f], // contains \"lo\"\n\t\t];\n\t\tconst actual = await testReading(frames, false);\n\t\tassert.deepStrictEqual(actual, 'Hello');\n\t});\n\n\tsuite('compression', () => {\n\t\ttest('A single-frame compressed text message', async () => {\n\t\t\t// contains \"Hello\"\n\t\t\tconst frames = [\n\t\t\t\t[0xc1, 0x07, 0xf2, 0x48, 0xcd, 0xc9, 0xc9, 0x07, 0x00], // contains \"Hello\"\n\t\t\t];\n\t\t\tconst actual = await testReading(frames, true);\n\t\t\tassert.deepStrictEqual(actual, 'Hello');\n\t\t});\n\n\t\ttest('A fragmented compressed text message', async () => {\n\t\t\t// contains \"Hello\"\n\t\t\tconst frames = [  // contains \"Hello\"\n\t\t\t\t[0x41, 0x03, 0xf2, 0x48, 0xcd],\n\t\t\t\t[0x80, 0x04, 0xc9, 0xc9, 0x07, 0x00]\n\t\t\t];\n\t\t\tconst actual = await testReading(frames, true);\n\t\t\tassert.deepStrictEqual(actual, 'Hello');\n\t\t});\n\n\t\ttest('A single-frame non-compressed text message', async () => {\n\t\t\tconst frames = [\n\t\t\t\t[0x81, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f] // contains \"Hello\"\n\t\t\t];\n\t\t\tconst actual = await testReading(frames, true);\n\t\t\tassert.deepStrictEqual(actual, 'Hello');\n\t\t});\n\n\t\ttest('A single-frame compressed text message followed by a single-frame non-compressed text message', async () => {\n\t\t\tconst frames = [\n\t\t\t\t[0xc1, 0x07, 0xf2, 0x48, 0xcd, 0xc9, 0xc9, 0x07, 0x00], // contains \"Hello\"\n\t\t\t\t[0x81, 0x05, 0x77, 0x6f, 0x72, 0x6c, 0x64] // contains \"world\"\n\t\t\t];\n\t\t\tconst actual = await testReading(frames, true);\n\t\t\tassert.deepStrictEqual(actual, 'Helloworld');\n\t\t});\n\t});\n\n\ttest('Large buffers are split and sent in chunks', async () => {\n\n\t\tlet receivingSideOnDataCallCount = 0;\n\t\tlet receivingSideTotalBytes = 0;\n\t\tconst receivingSideSocketClosedBarrier = new Barrier();\n\n\t\tconst server = await listenOnRandomPort((socket) => {\n\t\t\t// stop the server when the first connection is received\n\t\t\tserver.close();\n\n\t\t\tconst webSocketNodeSocket = new WebSocketNodeSocket(new NodeSocket(socket), true, null, false);\n\t\t\twebSocketNodeSocket.onData((data) => {\n\t\t\t\treceivingSideOnDataCallCount++;\n\t\t\t\treceivingSideTotalBytes += data.byteLength;\n\t\t\t});\n\n\t\t\twebSocketNodeSocket.onClose(() => {\n\t\t\t\twebSocketNodeSocket.dispose();\n\t\t\t\treceivingSideSocketClosedBarrier.open();\n\t\t\t});\n\t\t});\n\n\t\tconst socket = connect({\n\t\t\thost: '127.0.0.1',\n\t\t\tport: (<AddressInfo>server.address()).port\n\t\t});\n\n\t\tconst buff = generateRandomBuffer(1 * 1024 * 1024);\n\n\t\tconst webSocketNodeSocket = new WebSocketNodeSocket(new NodeSocket(socket), true, null, false);\n\t\twebSocketNodeSocket.write(buff);\n\t\tawait webSocketNodeSocket.drain();\n\t\twebSocketNodeSocket.dispose();\n\t\tawait receivingSideSocketClosedBarrier.wait();\n\n\t\tassert.strictEqual(receivingSideTotalBytes, buff.byteLength);\n\t\tassert.strictEqual(receivingSideOnDataCallCount, 4);\n\t});\n\n\tfunction generateRandomBuffer(size: number): VSBuffer {\n\t\tconst buff = VSBuffer.alloc(size);\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tbuff.writeUInt8(Math.floor(256 * Math.random()), i);\n\t\t}\n\t\treturn buff;\n\t}\n\n\tfunction listenOnRandomPort(handler: (socket: Socket) => void): Promise<Server> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst server = createServer(handler).listen(0);\n\t\t\tserver.on('listening', () => {\n\t\t\t\tresolve(server);\n\t\t\t});\n\t\t\tserver.on('error', (err) => {\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n});\n"]}