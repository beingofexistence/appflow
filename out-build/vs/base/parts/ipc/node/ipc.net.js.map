{"version":3,"sources":["file:///workspace/appflow/src/vs/base/parts/ipc/node/ipc.net.ts"],"names":[],"mappings":"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","file":"ipc.net.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { Server as NetServer, Socket, createServer, createConnection } from 'net';\nimport { tmpdir } from 'os';\nimport { createDeflateRaw, ZlibOptions, InflateRaw, DeflateRaw, createInflateRaw } from 'zlib';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { Platform, platform } from 'vs/base/common/platform';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { ChunkStream, Client, ISocket, Protocol, SocketCloseEvent, SocketCloseEventType, SocketDiagnostics, SocketDiagnosticsEventType } from 'vs/base/parts/ipc/common/ipc.net';\n\nexport class NodeSocket implements ISocket {\n\n\tpublic readonly debugLabel: string;\n\tpublic readonly socket: Socket;\n\tprivate readonly _errorListener: (err: any) => void;\n\tprivate readonly _closeListener: (hadError: boolean) => void;\n\tprivate readonly _endListener: () => void;\n\tprivate _canWrite = true;\n\n\tpublic traceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tSocketDiagnostics.traceSocketEvent(this.socket, this.debugLabel, type, data);\n\t}\n\n\tconstructor(socket: Socket, debugLabel: string = '') {\n\t\tthis.debugLabel = debugLabel;\n\t\tthis.socket = socket;\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Created, { type: 'NodeSocket' });\n\t\tthis._errorListener = (err: any) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Error, { code: err?.code, message: err?.message });\n\t\t\tif (err) {\n\t\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t};\n\t\tthis.socket.on('error', this._errorListener);\n\n\t\tthis._closeListener = (hadError: boolean) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Close, { hadError });\n\t\t\tthis._canWrite = false;\n\t\t};\n\t\tthis.socket.on('close', this._closeListener);\n\n\t\tthis._endListener = () => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeEndReceived);\n\t\t\tthis._canWrite = false;\n\t\t};\n\t\tthis.socket.on('end', this._endListener);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.off('error', this._errorListener);\n\t\tthis.socket.off('close', this._closeListener);\n\t\tthis.socket.off('end', this._endListener);\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Read, buff);\n\t\t\t_listener(VSBuffer.wrap(buff));\n\t\t};\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: (e: SocketCloseEvent) => void): IDisposable {\n\t\tconst adapter = (hadError: boolean) => {\n\t\t\tlistener({\n\t\t\t\ttype: SocketCloseEventType.NodeSocketCloseEvent,\n\t\t\t\thadError: hadError,\n\t\t\t\terror: undefined\n\t\t\t});\n\t\t};\n\t\tthis.socket.on('close', adapter);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', adapter)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tconst adapter = () => {\n\t\t\tlistener();\n\t\t};\n\t\tthis.socket.on('end', adapter);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', adapter)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed || !this._canWrite) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\ttry {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Write, buffer);\n\t\t\tthis.socket.write(buffer.buffer, (err: any) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tonUnexpectedError(err);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic end(): void {\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeEndSent);\n\t\tthis.socket.end();\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeDrainBegin);\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tif (this.socket.bufferSize === 0) {\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeDrainEnd);\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst finished = () => {\n\t\t\t\tthis.socket.off('close', finished);\n\t\t\t\tthis.socket.off('end', finished);\n\t\t\t\tthis.socket.off('error', finished);\n\t\t\t\tthis.socket.off('timeout', finished);\n\t\t\t\tthis.socket.off('drain', finished);\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeDrainEnd);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tthis.socket.on('close', finished);\n\t\t\tthis.socket.on('end', finished);\n\t\t\tthis.socket.on('error', finished);\n\t\t\tthis.socket.on('timeout', finished);\n\t\t\tthis.socket.on('drain', finished);\n\t\t});\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2,\n\t/**\n\t * If we need to write a large buffer, we will split it into 256KB chunks and\n\t * send each chunk as a websocket message. This is to prevent that the sending\n\t * side is stuck waiting for the entire buffer to be compressed before writing\n\t * to the underlying socket or that the receiving side is stuck waiting for the\n\t * entire message to be received before processing the bytes.\n\t */\n\tMaxWebSocketMessageLength = 256 * 1024 // 256 KB\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\ninterface ISocketTracer {\n\ttraceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void;\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket, ISocketTracer {\n\n\tpublic readonly socket: NodeSocket;\n\tprivate readonly _flowManager: WebSocketFlowManager;\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\tprivate readonly _onClose = this._register(new Emitter<SocketCloseEvent>());\n\tprivate _isEnded: boolean = false;\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tfin: 0,\n\t\tcompressed: false,\n\t\tfirstFrameOfMessage: true,\n\t\tmask: 0\n\t};\n\n\tpublic get permessageDeflate(): boolean {\n\t\treturn this._flowManager.permessageDeflate;\n\t}\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\treturn this._flowManager.recordedInflateBytes;\n\t}\n\n\tpublic traceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tthis.socket.traceSocketEvent(type, data);\n\t}\n\n\t/**\n\t * Create a socket which can communicate using WebSocket frames.\n\t *\n\t * **NOTE**: When using the permessage-deflate WebSocket extension, if parts of inflating was done\n\t *  in a different zlib instance, we need to pass all those bytes into zlib, otherwise the inflate\n\t *  might hit an inflated portion referencing a distance too far back.\n\t *\n\t * @param socket The underlying socket\n\t * @param permessageDeflate Use the permessage-deflate WebSocket extension\n\t * @param inflateBytes \"Seed\" zlib inflate with these bytes.\n\t * @param recordInflateBytes Record all bytes sent to inflate\n\t */\n\tconstructor(socket: NodeSocket, permessageDeflate: boolean, inflateBytes: VSBuffer | null, recordInflateBytes: boolean) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Created, { type: 'WebSocketNodeSocket', permessageDeflate, inflateBytesLength: inflateBytes?.byteLength || 0, recordInflateBytes });\n\t\tthis._flowManager = this._register(new WebSocketFlowManager(\n\t\t\tthis,\n\t\t\tpermessageDeflate,\n\t\t\tinflateBytes,\n\t\t\trecordInflateBytes,\n\t\t\tthis._onData,\n\t\t\t(data, compressed) => this._write(data, compressed)\n\t\t));\n\t\tthis._register(this._flowManager.onError((err) => {\n\t\t\t// zlib errors are fatal, since we have no idea how to recover\n\t\t\tconsole.error(err);\n\t\t\tonUnexpectedError(err);\n\t\t\tthis._onClose.fire({\n\t\t\t\ttype: SocketCloseEventType.NodeSocketCloseEvent,\n\t\t\t\thadError: true,\n\t\t\t\terror: err\n\t\t\t});\n\t\t}));\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t\tthis._register(this.socket.onClose(async (e) => {\n\t\t\t// Delay surfacing the close event until the async inflating is done\n\t\t\t// and all data has been emitted\n\t\t\tif (this._flowManager.isProcessingReadQueue()) {\n\t\t\t\tawait Event.toPromise(this._flowManager.onDidFinishProcessingReadQueue);\n\t\t\t}\n\t\t\tthis._onClose.fire(e);\n\t\t}));\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._flowManager.isProcessingWriteQueue()) {\n\t\t\t// Wait for any outstanding writes to finish before disposing\n\t\t\tthis._register(this._flowManager.onDidFinishProcessingWriteQueue(() => {\n\t\t\t\tthis.dispose();\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.socket.dispose();\n\t\t\tsuper.dispose();\n\t\t}\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: (e: SocketCloseEvent) => void): IDisposable {\n\t\treturn this._onClose.event(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// If we write many logical messages (let's say 1000 messages of 100KB) during a single process tick, we do\n\t\t// this thing where we install a process.nextTick timer and group all of them together and we then issue a\n\t\t// single WebSocketNodeSocket.write with a 100MB buffer.\n\t\t//\n\t\t// The first problem is that the actual writing to the underlying node socket will only happen after all of\n\t\t// the 100MB have been deflated (due to waiting on zlib flush). The second problem is on the reading side,\n\t\t// where we will get a single WebSocketNodeSocket.onData event fired when all the 100MB have arrived,\n\t\t// delaying processing the 1000 received messages until all have arrived, instead of processing them as each\n\t\t// one arrives.\n\t\t//\n\t\t// We therefore split the buffer into chunks, and issue a write for each chunk.\n\n\t\tlet start = 0;\n\t\twhile (start < buffer.byteLength) {\n\t\t\tthis._flowManager.writeMessage(buffer.slice(start, Math.min(start + Constants.MaxWebSocketMessageLength, buffer.byteLength)));\n\t\t\tstart += Constants.MaxWebSocketMessageLength;\n\t\t}\n\t}\n\n\tprivate _write(buffer: VSBuffer, compressed: boolean): void {\n\t\tif (this._isEnded) {\n\t\t\t// Avoid ERR_STREAM_WRITE_AFTER_END\n\t\t\treturn;\n\t\t}\n\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketWrite, buffer);\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\tif (compressed) {\n\t\t\t// The RSV1 bit indicates a compressed frame\n\t\t\theader.writeUInt8(0b11000010, 0);\n\t\t} else {\n\t\t\theader.writeUInt8(0b10000010, 0);\n\t\t}\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis._isEnded = true;\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\tconst firstByte = peekHeader.readUInt8(0);\n\t\t\t\tconst finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst rsv1Bit = (firstByte & 0b01000000) >>> 6;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.fin = finBit;\n\t\t\t\tif (this._state.firstFrameOfMessage) {\n\t\t\t\t\t// if the frame is compressed, the RSV1 bit is set only for the first frame of the message\n\t\t\t\t\tthis._state.compressed = Boolean(rsv1Bit);\n\t\t\t\t}\n\t\t\t\tthis._state.firstFrameOfMessage = Boolean(finBit);\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketPeekedHeader, { headerSize: this._state.readLen, compressed: this._state.compressed, fin: this._state.fin });\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketPeekedHeader, { bodySize: this._state.readLen, compressed: this._state.compressed, fin: this._state.fin, mask: this._state.mask });\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketReadData, body);\n\n\t\t\t\tunmask(body, this._state.mask);\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketUnmaskedData, body);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis._flowManager.acceptFrame(body, this._state.compressed, !!this._state.fin);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async drain(): Promise<void> {\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketDrainBegin);\n\t\tif (this._flowManager.isProcessingWriteQueue()) {\n\t\t\tawait Event.toPromise(this._flowManager.onDidFinishProcessingWriteQueue);\n\t\t}\n\t\tawait this.socket.drain();\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketDrainEnd);\n\t}\n}\n\nclass WebSocketFlowManager extends Disposable {\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _zlibInflateStream: ZlibInflateStream | null;\n\tprivate readonly _zlibDeflateStream: ZlibDeflateStream | null;\n\tprivate readonly _writeQueue: VSBuffer[] = [];\n\tprivate readonly _readQueue: { data: VSBuffer; isCompressed: boolean; isLastFrameOfMessage: boolean }[] = [];\n\n\tprivate readonly _onDidFinishProcessingReadQueue = this._register(new Emitter<void>());\n\tpublic readonly onDidFinishProcessingReadQueue = this._onDidFinishProcessingReadQueue.event;\n\n\tprivate readonly _onDidFinishProcessingWriteQueue = this._register(new Emitter<void>());\n\tpublic readonly onDidFinishProcessingWriteQueue = this._onDidFinishProcessingWriteQueue.event;\n\n\tpublic get permessageDeflate(): boolean {\n\t\treturn Boolean(this._zlibInflateStream && this._zlibDeflateStream);\n\t}\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\tif (this._zlibInflateStream) {\n\t\t\treturn this._zlibInflateStream.recordedInflateBytes;\n\t\t}\n\t\treturn VSBuffer.alloc(0);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _tracer: ISocketTracer,\n\t\tpermessageDeflate: boolean,\n\t\tinflateBytes: VSBuffer | null,\n\t\trecordInflateBytes: boolean,\n\t\tprivate readonly _onData: Emitter<VSBuffer>,\n\t\tprivate readonly _writeFn: (data: VSBuffer, compressed: boolean) => void\n\t) {\n\t\tsuper();\n\t\tif (permessageDeflate) {\n\t\t\t// See https://tools.ietf.org/html/rfc7692#page-16\n\t\t\t// To simplify our logic, we don't negotiate the window size\n\t\t\t// and simply dedicate (2^15) / 32kb per web socket\n\t\t\tthis._zlibInflateStream = this._register(new ZlibInflateStream(this._tracer, recordInflateBytes, inflateBytes, { windowBits: 15 }));\n\t\t\tthis._zlibDeflateStream = this._register(new ZlibDeflateStream(this._tracer, { windowBits: 15 }));\n\t\t\tthis._register(this._zlibInflateStream.onError((err) => this._onError.fire(err)));\n\t\t\tthis._register(this._zlibDeflateStream.onError((err) => this._onError.fire(err)));\n\t\t} else {\n\t\t\tthis._zlibInflateStream = null;\n\t\t\tthis._zlibDeflateStream = null;\n\t\t}\n\t}\n\n\tpublic writeMessage(message: VSBuffer): void {\n\t\tthis._writeQueue.push(message);\n\t\tthis._processWriteQueue();\n\t}\n\n\tprivate _isProcessingWriteQueue = false;\n\tprivate async _processWriteQueue(): Promise<void> {\n\t\tif (this._isProcessingWriteQueue) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isProcessingWriteQueue = true;\n\t\twhile (this._writeQueue.length > 0) {\n\t\t\tconst message = this._writeQueue.shift()!;\n\t\t\tif (this._zlibDeflateStream) {\n\t\t\t\tconst data = await this._deflateMessage(this._zlibDeflateStream, message);\n\t\t\t\tthis._writeFn(data, true);\n\t\t\t} else {\n\t\t\t\tthis._writeFn(message, false);\n\t\t\t}\n\t\t}\n\t\tthis._isProcessingWriteQueue = false;\n\t\tthis._onDidFinishProcessingWriteQueue.fire();\n\t}\n\n\tpublic isProcessingWriteQueue(): boolean {\n\t\treturn (this._isProcessingWriteQueue);\n\t}\n\n\t/**\n\t * Subsequent calls should wait for the previous `_deflateBuffer` call to complete.\n\t */\n\tprivate _deflateMessage(zlibDeflateStream: ZlibDeflateStream, buffer: VSBuffer): Promise<VSBuffer> {\n\t\treturn new Promise<VSBuffer>((resolve, reject) => {\n\t\t\tzlibDeflateStream.write(buffer);\n\t\t\tzlibDeflateStream.flush(data => resolve(data));\n\t\t});\n\t}\n\n\tpublic acceptFrame(data: VSBuffer, isCompressed: boolean, isLastFrameOfMessage: boolean): void {\n\t\tthis._readQueue.push({ data, isCompressed, isLastFrameOfMessage });\n\t\tthis._processReadQueue();\n\t}\n\n\tprivate _isProcessingReadQueue = false;\n\tprivate async _processReadQueue(): Promise<void> {\n\t\tif (this._isProcessingReadQueue) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isProcessingReadQueue = true;\n\t\twhile (this._readQueue.length > 0) {\n\t\t\tconst frameInfo = this._readQueue.shift()!;\n\t\t\tif (this._zlibInflateStream && frameInfo.isCompressed) {\n\t\t\t\t// See https://datatracker.ietf.org/doc/html/rfc7692#section-9.2\n\t\t\t\t// Even if permessageDeflate is negotiated, it is possible\n\t\t\t\t// that the other side might decide to send uncompressed messages\n\t\t\t\t// So only decompress messages that have the RSV 1 bit set\n\t\t\t\tconst data = await this._inflateFrame(this._zlibInflateStream, frameInfo.data, frameInfo.isLastFrameOfMessage);\n\t\t\t\tthis._onData.fire(data);\n\t\t\t} else {\n\t\t\t\tthis._onData.fire(frameInfo.data);\n\t\t\t}\n\t\t}\n\t\tthis._isProcessingReadQueue = false;\n\t\tthis._onDidFinishProcessingReadQueue.fire();\n\t}\n\n\tpublic isProcessingReadQueue(): boolean {\n\t\treturn (this._isProcessingReadQueue);\n\t}\n\n\t/**\n\t * Subsequent calls should wait for the previous `transformRead` call to complete.\n\t */\n\tprivate _inflateFrame(zlibInflateStream: ZlibInflateStream, buffer: VSBuffer, isLastFrameOfMessage: boolean): Promise<VSBuffer> {\n\t\treturn new Promise<VSBuffer>((resolve, reject) => {\n\t\t\t// See https://tools.ietf.org/html/rfc7692#section-7.2.2\n\t\t\tzlibInflateStream.write(buffer);\n\t\t\tif (isLastFrameOfMessage) {\n\t\t\t\tzlibInflateStream.write(VSBuffer.fromByteArray([0x00, 0x00, 0xff, 0xff]));\n\t\t\t}\n\t\t\tzlibInflateStream.flush(data => resolve(data));\n\t\t});\n\t}\n}\n\nclass ZlibInflateStream extends Disposable {\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _zlibInflate: InflateRaw;\n\tprivate readonly _recordedInflateBytes: VSBuffer[] = [];\n\tprivate readonly _pendingInflateData: VSBuffer[] = [];\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\tif (this._recordInflateBytes) {\n\t\t\treturn VSBuffer.concat(this._recordedInflateBytes);\n\t\t}\n\t\treturn VSBuffer.alloc(0);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _tracer: ISocketTracer,\n\t\tprivate readonly _recordInflateBytes: boolean,\n\t\tinflateBytes: VSBuffer | null,\n\t\toptions: ZlibOptions\n\t) {\n\t\tsuper();\n\t\tthis._zlibInflate = createInflateRaw(options);\n\t\tthis._zlibInflate.on('error', (err) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateError, { message: err?.message, code: (<any>err)?.code });\n\t\t\tthis._onError.fire(err);\n\t\t});\n\t\tthis._zlibInflate.on('data', (data: Buffer) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateData, data);\n\t\t\tthis._pendingInflateData.push(VSBuffer.wrap(data));\n\t\t});\n\t\tif (inflateBytes) {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateInitialWrite, inflateBytes.buffer);\n\t\t\tthis._zlibInflate.write(inflateBytes.buffer);\n\t\t\tthis._zlibInflate.flush(() => {\n\t\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateInitialFlushFired);\n\t\t\t\tthis._pendingInflateData.length = 0;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tif (this._recordInflateBytes) {\n\t\t\tthis._recordedInflateBytes.push(buffer.clone());\n\t\t}\n\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateWrite, buffer);\n\t\tthis._zlibInflate.write(buffer.buffer);\n\t}\n\n\tpublic flush(callback: (data: VSBuffer) => void): void {\n\t\tthis._zlibInflate.flush(() => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateFlushFired);\n\t\t\tconst data = VSBuffer.concat(this._pendingInflateData);\n\t\t\tthis._pendingInflateData.length = 0;\n\t\t\tcallback(data);\n\t\t});\n\t}\n}\n\nclass ZlibDeflateStream extends Disposable {\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _zlibDeflate: DeflateRaw;\n\tprivate readonly _pendingDeflateData: VSBuffer[] = [];\n\n\tconstructor(\n\t\tprivate readonly _tracer: ISocketTracer,\n\t\toptions: ZlibOptions\n\t) {\n\t\tsuper();\n\n\t\tthis._zlibDeflate = createDeflateRaw({\n\t\t\twindowBits: 15\n\t\t});\n\t\tthis._zlibDeflate.on('error', (err) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateError, { message: err?.message, code: (<any>err)?.code });\n\t\t\tthis._onError.fire(err);\n\t\t});\n\t\tthis._zlibDeflate.on('data', (data: Buffer) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateData, data);\n\t\t\tthis._pendingDeflateData.push(VSBuffer.wrap(data));\n\t\t});\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateWrite, buffer.buffer);\n\t\tthis._zlibDeflate.write(<Buffer>buffer.buffer);\n\t}\n\n\tpublic flush(callback: (data: VSBuffer) => void): void {\n\t\t// See https://zlib.net/manual.html#Constants\n\t\tthis._zlibDeflate.flush(/*Z_SYNC_FLUSH*/2, () => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateFlushFired);\n\n\t\t\tlet data = VSBuffer.concat(this._pendingDeflateData);\n\t\t\tthis._pendingDeflateData.length = 0;\n\n\t\t\t// See https://tools.ietf.org/html/rfc7692#section-7.2.1\n\t\t\tdata = data.slice(0, data.byteLength - 4);\n\n\t\t\tcallback(data);\n\t\t});\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tconst cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tconst offset = cnt * 4;\n\tconst bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/microsoft/vscode/issues/30624\nexport const XDG_RUNTIME_DIR = <string | undefined>process.env['XDG_RUNTIME_DIR'];\n\nconst safeIpcPathLengths: { [platform: number]: number } = {\n\t[Platform.Linux]: 107,\n\t[Platform.Mac]: 103\n};\n\nexport function createRandomIPCHandle(): string {\n\tconst randomSuffix = generateUuid();\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t}\n\n\t// Mac & Unix: Use socket file\n\t// Unix: Prefer XDG_RUNTIME_DIR over user data path\n\tconst basePath = process.platform !== 'darwin' && XDG_RUNTIME_DIR ? XDG_RUNTIME_DIR : tmpdir();\n\tconst result = join(basePath, `vscode-ipc-${randomSuffix}.sock`);\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nexport function createStaticIPCHandle(directoryPath: string, type: string, version: string): string {\n\tconst scope = createHash('md5').update(directoryPath).digest('hex');\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${version}-${type}-sock`;\n\t}\n\n\t// Mac & Unix: Use socket file\n\t// Unix: Prefer XDG_RUNTIME_DIR over user data path, unless portable\n\t// Trim the version and type values for the socket to prevent too large\n\t// file names causing issues: https://unix.stackexchange.com/q/367008\n\n\tconst versionForSocket = version.substr(0, 4);\n\tconst typeForSocket = type.substr(0, 6);\n\tconst scopeForSocket = scope.substr(0, 8);\n\n\tlet result: string;\n\tif (process.platform !== 'darwin' && XDG_RUNTIME_DIR && !process.env['VSCODE_PORTABLE']) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-${scopeForSocket}-${versionForSocket}-${typeForSocket}.sock`);\n\t} else {\n\t\tresult = join(directoryPath, `${versionForSocket}-${typeForSocket}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nfunction validateIPCHandleLength(handle: string): void {\n\tconst limit = safeIpcPathLengths[platform];\n\tif (typeof limit === 'number' && handle.length >= limit) {\n\t\t// https://nodejs.org/api/net.html#net_identifying_paths_for_ipc_connections\n\t\tconsole.warn(`WARNING: IPC handle \"${handle}\" is longer than ${limit} chars, try a shorter --user-data-dir`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket, 'ipc-server-connection')),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string; port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket, `ipc-client${clientId}`), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n"]}