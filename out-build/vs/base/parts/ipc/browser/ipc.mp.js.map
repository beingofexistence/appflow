{"version":3,"sources":["file:///workspace/appflow/src/vs/base/parts/ipc/browser/ipc.mp.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG;;OAEG;IACH,MAAa,GAAO,SAAQ,YAAiB;QAE5C;;;;WAIG;QACH,YAAY,IAAiB,EAAE,QAAgB;YAC9C,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACvB,CAAC;KACD;IAVD,kBAUC","file":"ipc.mp.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Client as MessagePortClient } from 'vs/base/parts/ipc/common/ipc.mp';\n\n/**\n * An implementation of a `IPCClient` on top of DOM `MessagePort`.\n */\nexport class Client extends MessagePortClient implements IDisposable {\n\n\t/**\n\t * @param clientId a way to uniquely identify this client among\n\t * other clients. this is important for routing because every\n\t * client can also be a server\n\t */\n\tconstructor(port: MessagePort, clientId: string) {\n\t\tsuper(port, clientId);\n\t}\n}\n"]}