{"version":3,"sources":["file:///workspace/appflow/src/vs/base/parts/contextmenu/electron-sandbox/contextmenu.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG,IAAI,iBAAiB,GAAG,CAAC,CAAC;IAE1B,SAAgB,GAAG,CAAG,KAAyB,EAAE,OAAuB,EAAE,MAAmB;QAC5F,MAAM,cAAc,GAAuB,EAAE,CAAC;QAE9C,MAAM,aAAa,GAAG,iBAAiB,EAAE,CAAC;QAC1C,MAAM,cAAc,GAAG,uBAAuB,aAAa,EAAE,CAAC;QAC9D,MAAM,qBAAqB,GAAG,CAAC,KAAc,EAAE,MAAc,EAAE,OAA0B,EAAE,EAAE;YAC5F,MAAM,IAAI,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;YACpC,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC;QACvB,CAAC,CAAC;QAEF,YAAE,CAAU,IAAI,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAC;QACxD,YAAE,CAAU,IAAI,CAAC,iBAAG,EAAyB,CAAC,KAAc,EAAE,mBAA2B,EAAE,EAAE;YAC5F,IAAI,mBAAmB,KAAK,aAAa,EAAE;gBAC1C,OAAO;aACP;YAED,YAAE,CAAU,cAAc,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAC;YAElE,MAAM,EAAE,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;QAEH,YAAE,CAAU,IAAI,CAAC,iBAAG,EAAmB,aAAa,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;IACrI,CAAC;IAtBD,kBAsBC;IAED,SAAS,UAAU,CAAC,IAAsB,EAAE,cAAkC;QAC7E,MAAM,gBAAgB,GAAiC;YACtD,EAAE,EAAE,cAAc,CAAC,MAAM;YACzB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,OAAO,EAAE,OAAO,IAAI,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI;YAChE,OAAO,EAAE,OAAO,IAAI,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI;SAChE,CAAC;QAEF,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1B,UAAU;QACV,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAChC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC,CAAC;SACpG;QAED,OAAO,gBAAgB,CAAC;IACzB,CAAC","file":"contextmenu.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CONTEXT_MENU_CHANNEL, CONTEXT_MENU_CLOSE_CHANNEL, IContextMenuEvent, IContextMenuItem, IPopupOptions, ISerializableContextMenuItem } from 'vs/base/parts/contextmenu/common/contextmenu';\nimport { ipcRenderer } from 'vs/base/parts/sandbox/electron-sandbox/globals';\n\nlet contextMenuIdPool = 0;\n\nexport function popup(items: IContextMenuItem[], options?: IPopupOptions, onHide?: () => void): void {\n\tconst processedItems: IContextMenuItem[] = [];\n\n\tconst contextMenuId = contextMenuIdPool++;\n\tconst onClickChannel = `vscode:onContextMenu${contextMenuId}`;\n\tconst onClickChannelHandler = (event: unknown, itemId: number, context: IContextMenuEvent) => {\n\t\tconst item = processedItems[itemId];\n\t\titem.click?.(context);\n\t};\n\n\tipcRenderer.once(onClickChannel, onClickChannelHandler);\n\tipcRenderer.once(CONTEXT_MENU_CLOSE_CHANNEL, (event: unknown, closedContextMenuId: number) => {\n\t\tif (closedContextMenuId !== contextMenuId) {\n\t\t\treturn;\n\t\t}\n\n\t\tipcRenderer.removeListener(onClickChannel, onClickChannelHandler);\n\n\t\tonHide?.();\n\t});\n\n\tipcRenderer.send(CONTEXT_MENU_CHANNEL, contextMenuId, items.map(item => createItem(item, processedItems)), onClickChannel, options);\n}\n\nfunction createItem(item: IContextMenuItem, processedItems: IContextMenuItem[]): ISerializableContextMenuItem {\n\tconst serializableItem: ISerializableContextMenuItem = {\n\t\tid: processedItems.length,\n\t\tlabel: item.label,\n\t\ttype: item.type,\n\t\taccelerator: item.accelerator,\n\t\tchecked: item.checked,\n\t\tenabled: typeof item.enabled === 'boolean' ? item.enabled : true,\n\t\tvisible: typeof item.visible === 'boolean' ? item.visible : true\n\t};\n\n\tprocessedItems.push(item);\n\n\t// Submenu\n\tif (Array.isArray(item.submenu)) {\n\t\tserializableItem.submenu = item.submenu.map(submenuItem => createItem(submenuItem, processedItems));\n\t}\n\n\treturn serializableItem;\n}\n"]}