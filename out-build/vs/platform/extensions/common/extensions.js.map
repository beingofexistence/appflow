{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/extensions/common/extensions.ts"],"names":[],"mappings":"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","file":"extensions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport Severity from 'vs/base/common/severity';\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { ILocalizedString } from 'vs/platform/action/common/action';\nimport { ExtensionKind } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { getRemoteName } from 'vs/platform/remote/common/remoteHosts';\n\nexport const USER_MANIFEST_CACHE_FILE = 'extensions.user.cache';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'extensions.builtin.cache';\nexport const UNDEFINED_PUBLISHER = 'undefined_publisher';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string | ILocalizedString;\n\tcategory?: string | ILocalizedString;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tid?: string;\n\torder?: number;\n\ttitle?: string;\n\tproperties: { [key: string]: IConfigurationProperty };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string; dark: string; highContrast: string };\n}\n\ninterface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IAuthenticationContribution {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nexport interface IWalkthroughStep {\n\treadonly id: string;\n\treadonly title: string;\n\treadonly description: string | undefined;\n\treadonly media:\n\t| { image: string | { dark: string; light: string; hc: string }; altText: string; markdown?: never; svg?: never }\n\t| { markdown: string; image?: never; svg?: never }\n\t| { svg: string; altText: string; markdown?: never; image?: never };\n\treadonly completionEvents?: string[];\n\t/** @deprecated use `completionEvents: 'onCommand:...'` */\n\treadonly doneOn?: { command: string };\n\treadonly when?: string;\n}\n\nexport interface IWalkthrough {\n\treadonly id: string;\n\treadonly title: string;\n\treadonly icon?: string;\n\treadonly description: string;\n\treadonly steps: IWalkthroughStep[];\n\treadonly featuredFor: string[] | undefined;\n\treadonly when?: string;\n}\n\nexport interface IStartEntry {\n\treadonly title: string;\n\treadonly description: string;\n\treadonly command: string;\n\treadonly when?: string;\n\treadonly category: 'file' | 'folder' | 'notebook';\n}\n\nexport interface INotebookEntry {\n\treadonly type: string;\n\treadonly displayName: string;\n}\n\nexport interface INotebookRendererContribution {\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly mimeTypes: string[];\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport interface ILocalizationContribution {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tproductIconThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalizationContribution[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n\tauthentication?: IAuthenticationContribution[];\n\twalkthroughs?: IWalkthrough[];\n\tstartEntries?: IStartEntry[];\n\treadonly notebooks?: INotebookEntry[];\n\treadonly notebookRenderer?: INotebookRendererContribution[];\n}\n\nexport interface IExtensionCapabilities {\n\treadonly virtualWorkspaces?: ExtensionVirtualWorkspaceSupport;\n\treadonly untrustedWorkspaces?: ExtensionUntrustedWorkspaceSupport;\n}\n\n\nexport const ALL_EXTENSION_KINDS: readonly ExtensionKind[] = ['ui', 'workspace', 'web'];\n\nexport type LimitedWorkspaceSupportType = 'limited';\nexport type ExtensionUntrustedWorkspaceSupportType = boolean | LimitedWorkspaceSupportType;\nexport type ExtensionUntrustedWorkspaceSupport = { supported: true } | { supported: false; description: string } | { supported: LimitedWorkspaceSupportType; description: string; restrictedConfigurations?: string[] };\n\nexport type ExtensionVirtualWorkspaceSupportType = boolean | LimitedWorkspaceSupportType;\nexport type ExtensionVirtualWorkspaceSupport = boolean | { supported: true } | { supported: false | LimitedWorkspaceSupportType; description: string };\n\nexport function getWorkspaceSupportTypeMessage(supportType: ExtensionUntrustedWorkspaceSupport | ExtensionVirtualWorkspaceSupport | undefined): string | undefined {\n\tif (typeof supportType === 'object' && supportType !== null) {\n\t\tif (supportType.supported !== true) {\n\t\t\treturn supportType.description;\n\t\t}\n\t}\n\treturn undefined;\n}\n\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport const EXTENSION_CATEGORIES = [\n\t'Azure',\n\t'Data Science',\n\t'Debuggers',\n\t'Extension Packs',\n\t'Education',\n\t'Formatters',\n\t'Keymaps',\n\t'Language Packs',\n\t'Linters',\n\t'Machine Learning',\n\t'Notebooks',\n\t'Programming Languages',\n\t'SCM Providers',\n\t'Snippets',\n\t'Testing',\n\t'Themes',\n\t'Visualization',\n\t'Other',\n];\n\nexport interface IRelaxedExtensionManifest {\n\tname: string;\n\tdisplayName?: string;\n\tpublisher: string;\n\tversion: string;\n\tengines: { readonly vscode: string };\n\tdescription?: string;\n\tmain?: string;\n\tbrowser?: string;\n\tpreview?: boolean;\n\t// For now this only supports pointing to l10n bundle files\n\t// but it will be used for package.l10n.json files in the future\n\tl10n?: string;\n\ticon?: string;\n\tcategories?: string[];\n\tkeywords?: string[];\n\tactivationEvents?: string[];\n\textensionDependencies?: string[];\n\textensionPack?: string[];\n\textensionKind?: ExtensionKind | ExtensionKind[];\n\tcontributes?: IExtensionContributions;\n\trepository?: { url: string };\n\tbugs?: { url: string };\n\tenabledApiProposals?: readonly string[];\n\tapi?: string;\n\tscripts?: { [key: string]: string };\n\tcapabilities?: IExtensionCapabilities;\n}\n\nexport type IExtensionManifest = Readonly<IRelaxedExtensionManifest>;\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport const enum TargetPlatform {\n\tWIN32_X64 = 'win32-x64',\n\tWIN32_IA32 = 'win32-ia32',\n\tWIN32_ARM64 = 'win32-arm64',\n\n\tLINUX_X64 = 'linux-x64',\n\tLINUX_ARM64 = 'linux-arm64',\n\tLINUX_ARMHF = 'linux-armhf',\n\n\tALPINE_X64 = 'alpine-x64',\n\tALPINE_ARM64 = 'alpine-arm64',\n\n\tDARWIN_X64 = 'darwin-x64',\n\tDARWIN_ARM64 = 'darwin-arm64',\n\n\tWEB = 'web',\n\n\tUNIVERSAL = 'universal',\n\tUNKNOWN = 'unknown',\n\tUNDEFINED = 'undefined',\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly isBuiltin: boolean;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n\treadonly targetPlatform: TargetPlatform;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n\treadonly isValid: boolean;\n\treadonly validations: readonly [Severity, string][];\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\n\t/**\n\t * Do not use directly. This is public to avoid mangling and thus\n\t * allow compatibility between running from source and a built version.\n\t */\n\treadonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tconst aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tconst bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport class ExtensionIdentifierSet {\n\n\tprivate readonly _set = new Set<string>();\n\n\tpublic get size(): number {\n\t\treturn this._set.size;\n\t}\n\n\tconstructor(iterable?: Iterable<ExtensionIdentifier | string>) {\n\t\tif (iterable) {\n\t\t\tfor (const value of iterable) {\n\t\t\t\tthis.add(value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic add(id: ExtensionIdentifier | string): void {\n\t\tthis._set.add(ExtensionIdentifier.toKey(id));\n\t}\n\n\tpublic delete(extensionId: ExtensionIdentifier): boolean {\n\t\treturn this._set.delete(ExtensionIdentifier.toKey(extensionId));\n\t}\n\n\tpublic has(id: ExtensionIdentifier | string): boolean {\n\t\treturn this._set.has(ExtensionIdentifier.toKey(id));\n\t}\n}\n\nexport class ExtensionIdentifierMap<T> {\n\n\tprivate readonly _map = new Map<string, T>();\n\n\tpublic clear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tpublic delete(id: ExtensionIdentifier | string): void {\n\t\tthis._map.delete(ExtensionIdentifier.toKey(id));\n\t}\n\n\tpublic get(id: ExtensionIdentifier | string): T | undefined {\n\t\treturn this._map.get(ExtensionIdentifier.toKey(id));\n\t}\n\n\tpublic has(id: ExtensionIdentifier | string): boolean {\n\t\treturn this._map.has(ExtensionIdentifier.toKey(id));\n\t}\n\n\tpublic set(id: ExtensionIdentifier | string, value: T): void {\n\t\tthis._map.set(ExtensionIdentifier.toKey(id), value);\n\t}\n\n\tpublic values(): IterableIterator<T> {\n\t\treturn this._map.values();\n\t}\n\n\tforEach(callbackfn: (value: T, key: string, map: Map<string, T>) => void): void {\n\t\tthis._map.forEach(callbackfn);\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[string, T]> {\n\t\treturn this._map[Symbol.iterator]();\n\t}\n}\n\nexport interface IRelaxedExtensionDescription extends IRelaxedExtensionManifest {\n\tid?: string;\n\tidentifier: ExtensionIdentifier;\n\tuuid?: string;\n\ttargetPlatform: TargetPlatform;\n\tisBuiltin: boolean;\n\tisUserBuiltin: boolean;\n\tisUnderDevelopment: boolean;\n\textensionLocation: URI;\n}\n\nexport type IExtensionDescription = Readonly<IRelaxedExtensionDescription>;\n\nexport function isApplicationScopedExtension(manifest: IExtensionManifest): boolean {\n\treturn isLanguagePackExtension(manifest);\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n\nexport function isAuthenticationProviderExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.authentication ? manifest.contributes.authentication.length > 0 : false;\n}\n\nexport function isResolverExtension(manifest: IExtensionManifest, remoteAuthority: string | undefined): boolean {\n\tif (remoteAuthority) {\n\t\tconst activationEvent = `onResolveRemoteAuthority:${getRemoteName(remoteAuthority)}`;\n\t\treturn !!manifest.activationEvents?.includes(activationEvent);\n\t}\n\treturn false;\n}\n\nexport const IBuiltinExtensionsScannerService = createDecorator<IBuiltinExtensionsScannerService>('IBuiltinExtensionsScannerService');\nexport interface IBuiltinExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\tscanBuiltinExtensions(): Promise<IExtension[]>;\n}\n"]}