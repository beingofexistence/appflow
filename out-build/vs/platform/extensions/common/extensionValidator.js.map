{"version":3,"sources":["vs/platform/extensions/common/extensionValidator.ts"],"names":[],"mappings":"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","file":"extensionValidator.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isEqualOrParent, joinPath } from 'vs/base/common/resources';\nimport Severity from 'vs/base/common/severity';\nimport { URI } from 'vs/base/common/uri';\nimport * as nls from 'vs/nls';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tnotBefore: number; /* milliseconds timestamp, or 0 */\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\nconst NOT_BEFORE_REGEXP = /^-(\\d{4})(\\d{2})(\\d{2})$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tconst m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tconst majorBase = version.majorBase;\n\tconst majorMustEqual = version.majorMustEqual;\n\tconst minorBase = version.minorBase;\n\tlet minorMustEqual = version.minorMustEqual;\n\tconst patchBase = version.patchBase;\n\tlet patchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\tlet notBefore = 0;\n\tif (version.preRelease) {\n\t\tconst match = NOT_BEFORE_REGEXP.exec(version.preRelease);\n\t\tif (match) {\n\t\t\tconst [, year, month, day] = match;\n\t\t\tnotBefore = Date.UTC(Number(year), Number(month) - 1, Number(day));\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals,\n\t\tnotBefore,\n\t};\n}\n\nexport function isValidVersion(_inputVersion: string | INormalizedVersion, _inputDate: ProductDate, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _inputVersion === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_inputVersion));\n\t} else {\n\t\tversion = _inputVersion;\n\t}\n\n\tlet productTs: number | undefined;\n\tif (_inputDate instanceof Date) {\n\t\tproductTs = _inputDate.getTime();\n\t} else if (typeof _inputDate === 'string') {\n\t\tproductTs = new Date(_inputDate).getTime();\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tconst majorBase = version.majorBase;\n\tconst minorBase = version.minorBase;\n\tconst patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\tconst desiredNotBefore = desiredVersion.notBefore;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (productTs && productTs < desiredNotBefore) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\n\tif (productTs && productTs < desiredNotBefore) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\ntype ProductDate = string | Date | undefined;\n\nexport function validateExtensionManifest(productVersion: string, productDate: ProductDate, extensionLocation: URI, extensionManifest: IExtensionManifest, extensionIsBuiltin: boolean): readonly [Severity, string][] {\n\tconst validations: [Severity, string][] = [];\n\tif (typeof extensionManifest.publisher !== 'undefined' && typeof extensionManifest.publisher !== 'string') {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.publisher', \"property publisher must be of type `string`.\")]);\n\t\treturn validations;\n\t}\n\tif (typeof extensionManifest.name !== 'string') {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name')]);\n\t\treturn validations;\n\t}\n\tif (typeof extensionManifest.version !== 'string') {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version')]);\n\t\treturn validations;\n\t}\n\tif (!extensionManifest.engines) {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines')]);\n\t\treturn validations;\n\t}\n\tif (typeof extensionManifest.engines.vscode !== 'string') {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode')]);\n\t\treturn validations;\n\t}\n\tif (typeof extensionManifest.extensionDependencies !== 'undefined') {\n\t\tif (!isStringArray(extensionManifest.extensionDependencies)) {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies')]);\n\t\t\treturn validations;\n\t\t}\n\t}\n\tif (typeof extensionManifest.activationEvents !== 'undefined') {\n\t\tif (!isStringArray(extensionManifest.activationEvents)) {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents')]);\n\t\t\treturn validations;\n\t\t}\n\t\tif (typeof extensionManifest.main === 'undefined' && typeof extensionManifest.browser === 'undefined') {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.activationEvents2', \"property `{0}` should be omitted if the extension doesn't have a `{1}` or `{2}` property.\", 'activationEvents', 'main', 'browser')]);\n\t\t\treturn validations;\n\t\t}\n\t}\n\tif (typeof extensionManifest.extensionKind !== 'undefined') {\n\t\tif (typeof extensionManifest.main === 'undefined') {\n\t\t\tvalidations.push([Severity.Warning, nls.localize('extensionDescription.extensionKind', \"property `{0}` can be defined only if property `main` is also defined.\", 'extensionKind')]);\n\t\t\t// not a failure case\n\t\t}\n\t}\n\tif (typeof extensionManifest.main !== 'undefined') {\n\t\tif (typeof extensionManifest.main !== 'string') {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main')]);\n\t\t\treturn validations;\n\t\t} else {\n\t\t\tconst mainLocation = joinPath(extensionLocation, extensionManifest.main);\n\t\t\tif (!isEqualOrParent(mainLocation, extensionLocation)) {\n\t\t\t\tvalidations.push([Severity.Warning, nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", mainLocation.path, extensionLocation.path)]);\n\t\t\t\t// not a failure case\n\t\t\t}\n\t\t}\n\t}\n\tif (typeof extensionManifest.browser !== 'undefined') {\n\t\tif (typeof extensionManifest.browser !== 'string') {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.browser1', \"property `{0}` can be omitted or must be of type `string`\", 'browser')]);\n\t\t\treturn validations;\n\t\t} else {\n\t\t\tconst browserLocation = joinPath(extensionLocation, extensionManifest.browser);\n\t\t\tif (!isEqualOrParent(browserLocation, extensionLocation)) {\n\t\t\t\tvalidations.push([Severity.Warning, nls.localize('extensionDescription.browser2', \"Expected `browser` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", browserLocation.path, extensionLocation.path)]);\n\t\t\t\t// not a failure case\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!semver.valid(extensionManifest.version)) {\n\t\tvalidations.push([Severity.Error, nls.localize('notSemver', \"Extension version is not semver compatible.\")]);\n\t\treturn validations;\n\t}\n\n\tconst notices: string[] = [];\n\tconst isValid = isValidExtensionVersion(productVersion, productDate, extensionManifest, extensionIsBuiltin, notices);\n\tif (!isValid) {\n\t\tfor (const notice of notices) {\n\t\t\tvalidations.push([Severity.Error, notice]);\n\t\t}\n\t}\n\treturn validations;\n}\n\nexport function isValidExtensionVersion(productVersion: string, productDate: ProductDate, extensionManifest: IExtensionManifest, extensionIsBuiltin: boolean, notices: string[]): boolean {\n\n\tif (extensionIsBuiltin || (typeof extensionManifest.main === 'undefined' && typeof extensionManifest.browser === 'undefined')) {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(productVersion, productDate, extensionManifest.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string, date: ProductDate): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, date, engine);\n}\n\nfunction isVersionValid(currentVersion: string, date: ProductDate, requestedVersion: string, notices: string[] = []): boolean {\n\n\tconst desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, date, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nfunction isStringArray(arr: string[]): boolean {\n\tif (!Array.isArray(arr)) {\n\t\treturn false;\n\t}\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tif (typeof arr[i] !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n"]}