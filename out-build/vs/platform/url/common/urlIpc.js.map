{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/url/common/urlIpc.ts"],"names":[],"mappings":"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","file":"urlIpc.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { Client, IChannel, IClientRouter, IConnectionHub, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IOpenURLOptions, IURLHandler } from 'vs/platform/url/common/url';\n\nexport class URLHandlerChannel implements IServerChannel {\n\n\tconstructor(private handler: IURLHandler) { }\n\n\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'handleURL': return this.handler.handleURL(URI.revive(arg[0]), arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class URLHandlerChannelClient implements IURLHandler {\n\n\tconstructor(private channel: IChannel) { }\n\n\thandleURL(uri: URI, options?: IOpenURLOptions): Promise<boolean> {\n\t\treturn this.channel.call('handleURL', [uri.toJSON(), options]);\n\t}\n}\n\nexport class URLHandlerRouter implements IClientRouter<string> {\n\n\tconstructor(\n\t\tprivate next: IClientRouter<string>,\n\t\tprivate readonly logService: ILogService\n\t) { }\n\n\tasync routeCall(hub: IConnectionHub<string>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<string>> {\n\t\tif (command !== 'handleURL') {\n\t\t\tthrow new Error(`Call not found: ${command}`);\n\t\t}\n\n\t\tif (Array.isArray(arg) && arg.length > 0) {\n\t\t\tconst uri = URI.revive(arg[0]);\n\n\t\t\tthis.logService.trace('URLHandlerRouter#routeCall() with URI argument', uri.toString(true));\n\n\t\t\tif (uri.query) {\n\t\t\t\tconst match = /\\bwindowId=(\\d+)/.exec(uri.query);\n\n\t\t\t\tif (match) {\n\t\t\t\t\tconst windowId = match[1];\n\n\t\t\t\t\tthis.logService.trace(`URLHandlerRouter#routeCall(): found windowId query parameter with value \"${windowId}\"`, uri.toString(true));\n\n\t\t\t\t\tconst regex = new RegExp(`window:${windowId}`);\n\t\t\t\t\tconst connection = hub.connections.find(c => {\n\t\t\t\t\t\tthis.logService.trace('URLHandlerRouter#routeCall(): testing connection', c.ctx);\n\n\t\t\t\t\t\treturn regex.test(c.ctx);\n\t\t\t\t\t});\n\t\t\t\t\tif (connection) {\n\t\t\t\t\t\tthis.logService.trace('URLHandlerRouter#routeCall(): found a connection to route', uri.toString(true));\n\n\t\t\t\t\t\treturn connection;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.trace('URLHandlerRouter#routeCall(): did not find a connection to route', uri.toString(true));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.trace('URLHandlerRouter#routeCall(): did not find windowId query parameter', uri.toString(true));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.logService.trace('URLHandlerRouter#routeCall() without URI argument');\n\t\t}\n\n\t\treturn this.next.routeCall(hub, command, arg, cancellationToken);\n\t}\n\n\trouteEvent(_: IConnectionHub<string>, event: string): Promise<Client<string>> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n}\n"]}