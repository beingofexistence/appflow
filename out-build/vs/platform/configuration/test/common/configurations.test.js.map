{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/configuration/test/common/configurations.test.ts"],"names":[],"mappings":"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","file":"configurations.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Event } from 'vs/base/common/event';\nimport { equals } from 'vs/base/common/objects';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { Extensions, IConfigurationNode, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { DefaultConfiguration } from 'vs/platform/configuration/common/configurations';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nsuite('DefaultConfiguration', () => {\n\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\n\tsetup(() => reset());\n\tteardown(() => reset());\n\n\tfunction reset() {\n\t\tconfigurationRegistry.deregisterConfigurations(configurationRegistry.getConfigurations());\n\t\tconst configurationDefaultsOverrides = configurationRegistry.getConfigurationDefaultsOverrides();\n\t\tconfigurationRegistry.deregisterDefaultConfigurations([...configurationDefaultsOverrides.keys()].map(key => ({ extensionId: configurationDefaultsOverrides.get(key)?.source, overrides: { [key]: configurationDefaultsOverrides.get(key)?.value } })));\n\t}\n\n\ttest('Test registering a property before initialize', async () => {\n\t\tconst testObject = disposables.add(new DefaultConfiguration());\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'a',\n\t\t\t'order': 1,\n\t\t\t'title': 'a',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'a': {\n\t\t\t\t\t'description': 'a',\n\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t'default': false,\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst actual = await testObject.initialize();\n\t\tassert.strictEqual(actual.getValue('a'), false);\n\t});\n\n\ttest('Test registering a property and do not initialize', async () => {\n\t\tconst testObject = disposables.add(new DefaultConfiguration());\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'a',\n\t\t\t'order': 1,\n\t\t\t'title': 'a',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'a': {\n\t\t\t\t\t'description': 'a',\n\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t'default': false,\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tassert.strictEqual(testObject.configurationModel.getValue('a'), undefined);\n\t});\n\n\ttest('Test registering a property after initialize', async () => {\n\t\tconst testObject = disposables.add(new DefaultConfiguration());\n\t\tawait testObject.initialize();\n\t\tconst promise = Event.toPromise(testObject.onDidChangeConfiguration);\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'a',\n\t\t\t'order': 1,\n\t\t\t'title': 'a',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'defaultConfiguration.testSetting1': {\n\t\t\t\t\t'description': 'a',\n\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t'default': false,\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst { defaults: actual, properties } = await promise;\n\t\tassert.strictEqual(actual.getValue('defaultConfiguration.testSetting1'), false);\n\t\tassert.deepStrictEqual(properties, ['defaultConfiguration.testSetting1']);\n\t});\n\n\ttest('Test registering nested properties', async () => {\n\t\tconst testObject = disposables.add(new DefaultConfiguration());\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'a',\n\t\t\t'order': 1,\n\t\t\t'title': 'a',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'a.b': {\n\t\t\t\t\t'description': '1',\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'default': {},\n\t\t\t\t},\n\t\t\t\t'a.b.c': {\n\t\t\t\t\t'description': '2',\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'default': '2',\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst actual = await testObject.initialize();\n\n\t\tassert.ok(equals(actual.getValue('a'), { b: { c: '2' } }));\n\t\tassert.ok(equals(actual.contents, { 'a': { b: { c: '2' } } }));\n\t\tassert.deepStrictEqual(actual.keys, ['a.b', 'a.b.c']);\n\t});\n\n\ttest('Test registering the same property again', async () => {\n\t\tconst testObject = disposables.add(new DefaultConfiguration());\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'a',\n\t\t\t'order': 1,\n\t\t\t'title': 'a',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'a': {\n\t\t\t\t\t'description': 'a',\n\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t'default': true,\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'a',\n\t\t\t'order': 1,\n\t\t\t'title': 'a',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'a': {\n\t\t\t\t\t'description': 'a',\n\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t'default': false,\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst actual = await testObject.initialize();\n\t\tassert.strictEqual(true, actual.getValue('a'));\n\t});\n\n\ttest('Test registering an override identifier', async () => {\n\t\tconst testObject = disposables.add(new DefaultConfiguration());\n\t\tconfigurationRegistry.registerDefaultConfigurations([{\n\t\t\toverrides: {\n\t\t\t\t'[a]': {\n\t\t\t\t\t'b': true\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\tconst actual = await testObject.initialize();\n\t\tassert.ok(equals(actual.getValue('[a]'), { 'b': true }));\n\t\tassert.ok(equals(actual.contents, { '[a]': { 'b': true } }));\n\t\tassert.ok(equals(actual.overrides, [{ contents: { 'b': true }, identifiers: ['a'], keys: ['b'] }]));\n\t\tassert.deepStrictEqual(actual.keys, ['[a]']);\n\t\tassert.strictEqual(actual.getOverrideValue('b', 'a'), true);\n\t});\n\n\ttest('Test registering a normal property and override identifier', async () => {\n\t\tconst testObject = disposables.add(new DefaultConfiguration());\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'a',\n\t\t\t'order': 1,\n\t\t\t'title': 'a',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'b': {\n\t\t\t\t\t'description': 'b',\n\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t'default': false,\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconfigurationRegistry.registerDefaultConfigurations([{\n\t\t\toverrides: {\n\t\t\t\t'[a]': {\n\t\t\t\t\t'b': true\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\tconst actual = await testObject.initialize();\n\t\tassert.deepStrictEqual(actual.getValue('b'), false);\n\t\tassert.ok(equals(actual.getValue('[a]'), { 'b': true }));\n\t\tassert.ok(equals(actual.contents, { 'b': false, '[a]': { 'b': true } }));\n\t\tassert.ok(equals(actual.overrides, [{ contents: { 'b': true }, identifiers: ['a'], keys: ['b'] }]));\n\t\tassert.deepStrictEqual(actual.keys, ['b', '[a]']);\n\t\tassert.strictEqual(actual.getOverrideValue('b', 'a'), true);\n\t});\n\n\ttest('Test normal property is registered after override identifier', async () => {\n\t\tconst testObject = disposables.add(new DefaultConfiguration());\n\t\tconst promise = Event.toPromise(testObject.onDidChangeConfiguration);\n\t\tconfigurationRegistry.registerDefaultConfigurations([{\n\t\t\toverrides: {\n\t\t\t\t'[a]': {\n\t\t\t\t\t'b': true\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\tawait testObject.initialize();\n\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'a',\n\t\t\t'order': 1,\n\t\t\t'title': 'a',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'b': {\n\t\t\t\t\t'description': 'b',\n\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t'default': false,\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst { defaults: actual, properties } = await promise;\n\t\tassert.deepStrictEqual(actual.getValue('b'), false);\n\t\tassert.ok(equals(actual.getValue('[a]'), { 'b': true }));\n\t\tassert.ok(equals(actual.contents, { 'b': false, '[a]': { 'b': true } }));\n\t\tassert.ok(equals(actual.overrides, [{ contents: { 'b': true }, identifiers: ['a'], keys: ['b'] }]));\n\t\tassert.deepStrictEqual(actual.keys, ['[a]', 'b']);\n\t\tassert.strictEqual(actual.getOverrideValue('b', 'a'), true);\n\t\tassert.deepStrictEqual(properties, ['b']);\n\t});\n\n\ttest('Test override identifier is registered after property', async () => {\n\t\tconst testObject = disposables.add(new DefaultConfiguration());\n\t\tconst promise = Event.toPromise(testObject.onDidChangeConfiguration);\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'a',\n\t\t\t'order': 1,\n\t\t\t'title': 'a',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'b': {\n\t\t\t\t\t'description': 'b',\n\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t'default': false,\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tawait testObject.initialize();\n\n\t\tconfigurationRegistry.registerDefaultConfigurations([{\n\t\t\toverrides: {\n\t\t\t\t'[a]': {\n\t\t\t\t\t'b': true\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\tconst { defaults: actual, properties } = await promise;\n\t\tassert.deepStrictEqual(actual.getValue('b'), false);\n\t\tassert.ok(equals(actual.getValue('[a]'), { 'b': true }));\n\t\tassert.ok(equals(actual.contents, { 'b': false, '[a]': { 'b': true } }));\n\t\tassert.ok(equals(actual.overrides, [{ contents: { 'b': true }, identifiers: ['a'], keys: ['b'] }]));\n\t\tassert.deepStrictEqual(actual.keys, ['b', '[a]']);\n\t\tassert.strictEqual(actual.getOverrideValue('b', 'a'), true);\n\t\tassert.deepStrictEqual(properties, ['[a]']);\n\t});\n\n\ttest('Test register override identifier and property after initialize', async () => {\n\t\tconst testObject = disposables.add(new DefaultConfiguration());\n\n\t\tawait testObject.initialize();\n\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'a',\n\t\t\t'order': 1,\n\t\t\t'title': 'a',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'b': {\n\t\t\t\t\t'description': 'b',\n\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t'default': false,\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconfigurationRegistry.registerDefaultConfigurations([{\n\t\t\toverrides: {\n\t\t\t\t'[a]': {\n\t\t\t\t\t'b': true\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\tconst actual = testObject.configurationModel;\n\t\tassert.deepStrictEqual(actual.getValue('b'), false);\n\t\tassert.ok(equals(actual.getValue('[a]'), { 'b': true }));\n\t\tassert.ok(equals(actual.contents, { 'b': false, '[a]': { 'b': true } }));\n\t\tassert.ok(equals(actual.overrides, [{ contents: { 'b': true }, identifiers: ['a'], keys: ['b'] }]));\n\t\tassert.deepStrictEqual(actual.keys, ['b', '[a]']);\n\t\tassert.strictEqual(actual.getOverrideValue('b', 'a'), true);\n\t});\n\n\ttest('Test deregistering a property', async () => {\n\t\tconst testObject = disposables.add(new DefaultConfiguration());\n\t\tconst promise = Event.toPromise(testObject.onDidChangeConfiguration);\n\t\tconst node: IConfigurationNode = {\n\t\t\t'id': 'a',\n\t\t\t'order': 1,\n\t\t\t'title': 'a',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'a': {\n\t\t\t\t\t'description': 'a',\n\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t'default': false,\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconfigurationRegistry.registerConfiguration(node);\n\t\tawait testObject.initialize();\n\t\tconfigurationRegistry.deregisterConfigurations([node]);\n\n\t\tconst { defaults: actual, properties } = await promise;\n\t\tassert.strictEqual(actual.getValue('a'), undefined);\n\t\tassert.ok(equals(actual.contents, {}));\n\t\tassert.deepStrictEqual(actual.keys, []);\n\t\tassert.deepStrictEqual(properties, ['a']);\n\t});\n\n\ttest('Test deregistering an override identifier', async () => {\n\t\tconst testObject = disposables.add(new DefaultConfiguration());\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'a',\n\t\t\t'order': 1,\n\t\t\t'title': 'a',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'b': {\n\t\t\t\t\t'description': 'b',\n\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t'default': false,\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst node = {\n\t\t\toverrides: {\n\t\t\t\t'[a]': {\n\t\t\t\t\t'b': true\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconfigurationRegistry.registerDefaultConfigurations([node]);\n\t\tawait testObject.initialize();\n\t\tconfigurationRegistry.deregisterDefaultConfigurations([node]);\n\t\tassert.deepStrictEqual(testObject.configurationModel.getValue('[a]'), undefined);\n\t\tassert.ok(equals(testObject.configurationModel.contents, { 'b': false }));\n\t\tassert.ok(equals(testObject.configurationModel.overrides, []));\n\t\tassert.deepStrictEqual(testObject.configurationModel.keys, ['b']);\n\t\tassert.strictEqual(testObject.configurationModel.getOverrideValue('b', 'a'), undefined);\n\t});\n});\n"]}