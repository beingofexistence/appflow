{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/configuration/test/common/configuration.test.ts"],"names":[],"mappings":"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","file":"configuration.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { merge, removeFromValueTree } from 'vs/platform/configuration/common/configuration';\nimport { mergeChanges } from 'vs/platform/configuration/common/configurationModels';\n\nsuite('Configuration', () => {\n\n\ttest('simple merge', () => {\n\t\tlet base = { 'a': 1, 'b': 2 };\n\t\tmerge(base, { 'a': 3, 'c': 4 }, true);\n\t\tassert.deepStrictEqual(base, { 'a': 3, 'b': 2, 'c': 4 });\n\t\tbase = { 'a': 1, 'b': 2 };\n\t\tmerge(base, { 'a': 3, 'c': 4 }, false);\n\t\tassert.deepStrictEqual(base, { 'a': 1, 'b': 2, 'c': 4 });\n\t});\n\n\ttest('object merge', () => {\n\t\tconst base = { 'a': { 'b': 1, 'c': true, 'd': 2 } };\n\t\tmerge(base, { 'a': { 'b': undefined, 'c': false, 'e': 'a' } }, true);\n\t\tassert.deepStrictEqual(base, { 'a': { 'b': undefined, 'c': false, 'd': 2, 'e': 'a' } });\n\t});\n\n\ttest('array merge', () => {\n\t\tconst base = { 'a': ['b', 'c'] };\n\t\tmerge(base, { 'a': ['b', 'd'] }, true);\n\t\tassert.deepStrictEqual(base, { 'a': ['b', 'd'] });\n\t});\n\n\ttest('removeFromValueTree: remove a non existing key', () => {\n\t\tconst target = { 'a': { 'b': 2 } };\n\n\t\tremoveFromValueTree(target, 'c');\n\n\t\tassert.deepStrictEqual(target, { 'a': { 'b': 2 } });\n\t});\n\n\ttest('removeFromValueTree: remove a multi segmented key from an object that has only sub sections of the key', () => {\n\t\tconst target = { 'a': { 'b': 2 } };\n\n\t\tremoveFromValueTree(target, 'a.b.c');\n\n\t\tassert.deepStrictEqual(target, { 'a': { 'b': 2 } });\n\t});\n\n\ttest('removeFromValueTree: remove a single segmented key', () => {\n\t\tconst target = { 'a': 1 };\n\n\t\tremoveFromValueTree(target, 'a');\n\n\t\tassert.deepStrictEqual(target, {});\n\t});\n\n\ttest('removeFromValueTree: remove a single segmented key when its value is undefined', () => {\n\t\tconst target = { 'a': undefined };\n\n\t\tremoveFromValueTree(target, 'a');\n\n\t\tassert.deepStrictEqual(target, {});\n\t});\n\n\ttest('removeFromValueTree: remove a multi segmented key when its value is undefined', () => {\n\t\tconst target = { 'a': { 'b': 1 } };\n\n\t\tremoveFromValueTree(target, 'a.b');\n\n\t\tassert.deepStrictEqual(target, {});\n\t});\n\n\ttest('removeFromValueTree: remove a multi segmented key when its value is array', () => {\n\t\tconst target = { 'a': { 'b': [1] } };\n\n\t\tremoveFromValueTree(target, 'a.b');\n\n\t\tassert.deepStrictEqual(target, {});\n\t});\n\n\ttest('removeFromValueTree: remove a multi segmented key first segment value is array', () => {\n\t\tconst target = { 'a': [1] };\n\n\t\tremoveFromValueTree(target, 'a.0');\n\n\t\tassert.deepStrictEqual(target, { 'a': [1] });\n\t});\n\n\ttest('removeFromValueTree: remove when key is the first segmenet', () => {\n\t\tconst target = { 'a': { 'b': 1 } };\n\n\t\tremoveFromValueTree(target, 'a');\n\n\t\tassert.deepStrictEqual(target, {});\n\t});\n\n\ttest('removeFromValueTree: remove a multi segmented key when the first node has more values', () => {\n\t\tconst target = { 'a': { 'b': { 'c': 1 }, 'd': 1 } };\n\n\t\tremoveFromValueTree(target, 'a.b.c');\n\n\t\tassert.deepStrictEqual(target, { 'a': { 'd': 1 } });\n\t});\n\n\ttest('removeFromValueTree: remove a multi segmented key when in between node has more values', () => {\n\t\tconst target = { 'a': { 'b': { 'c': { 'd': 1 }, 'd': 1 } } };\n\n\t\tremoveFromValueTree(target, 'a.b.c.d');\n\n\t\tassert.deepStrictEqual(target, { 'a': { 'b': { 'd': 1 } } });\n\t});\n\n\ttest('removeFromValueTree: remove a multi segmented key when the last but one node has more values', () => {\n\t\tconst target = { 'a': { 'b': { 'c': 1, 'd': 1 } } };\n\n\t\tremoveFromValueTree(target, 'a.b.c');\n\n\t\tassert.deepStrictEqual(target, { 'a': { 'b': { 'd': 1 } } });\n\t});\n\n});\n\nsuite('Configuration Changes: Merge', () => {\n\n\ttest('merge only keys', () => {\n\t\tconst actual = mergeChanges({ keys: ['a', 'b'], overrides: [] }, { keys: ['c', 'd'], overrides: [] });\n\t\tassert.deepStrictEqual(actual, { keys: ['a', 'b', 'c', 'd'], overrides: [] });\n\t});\n\n\ttest('merge only keys with duplicates', () => {\n\t\tconst actual = mergeChanges({ keys: ['a', 'b'], overrides: [] }, { keys: ['c', 'd'], overrides: [] }, { keys: ['a', 'd', 'e'], overrides: [] });\n\t\tassert.deepStrictEqual(actual, { keys: ['a', 'b', 'c', 'd', 'e'], overrides: [] });\n\t});\n\n\ttest('merge only overrides', () => {\n\t\tconst actual = mergeChanges({ keys: [], overrides: [['a', ['1', '2']]] }, { keys: [], overrides: [['b', ['3', '4']]] });\n\t\tassert.deepStrictEqual(actual, { keys: [], overrides: [['a', ['1', '2']], ['b', ['3', '4']]] });\n\t});\n\n\ttest('merge only overrides with duplicates', () => {\n\t\tconst actual = mergeChanges({ keys: [], overrides: [['a', ['1', '2']], ['b', ['5', '4']]] }, { keys: [], overrides: [['b', ['3', '4']]] }, { keys: [], overrides: [['c', ['1', '4']], ['a', ['2', '3']]] });\n\t\tassert.deepStrictEqual(actual, { keys: [], overrides: [['a', ['1', '2', '3']], ['b', ['5', '4', '3']], ['c', ['1', '4']]] });\n\t});\n\n\ttest('merge', () => {\n\t\tconst actual = mergeChanges({ keys: ['b', 'b'], overrides: [['a', ['1', '2']], ['b', ['5', '4']]] }, { keys: ['b'], overrides: [['b', ['3', '4']]] }, { keys: ['c', 'a'], overrides: [['c', ['1', '4']], ['a', ['2', '3']]] });\n\t\tassert.deepStrictEqual(actual, { keys: ['b', 'c', 'a'], overrides: [['a', ['1', '2', '3']], ['b', ['5', '4', '3']], ['c', ['1', '4']]] });\n\t});\n\n\ttest('merge single change', () => {\n\t\tconst actual = mergeChanges({ keys: ['b', 'b'], overrides: [['a', ['1', '2']], ['b', ['5', '4']]] });\n\t\tassert.deepStrictEqual(actual, { keys: ['b', 'b'], overrides: [['a', ['1', '2']], ['b', ['5', '4']]] });\n\t});\n\n\ttest('merge no changes', () => {\n\t\tconst actual = mergeChanges();\n\t\tassert.deepStrictEqual(actual, { keys: [], overrides: [] });\n\t});\n\n});\n"]}