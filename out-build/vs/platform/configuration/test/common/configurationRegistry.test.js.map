{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/configuration/test/common/configurationRegistry.test.ts"],"names":[],"mappings":"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","file":"configurationRegistry.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Extensions as ConfigurationExtensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nsuite('ConfigurationRegistry', () => {\n\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\n\n\ttest('configuration override', async () => {\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': '_test_default',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'config': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { 'config': { a: 1, b: 2 } } }]);\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { '[lang]': { a: 2, c: 3 } } }]);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config'].default, { a: 1, b: 2 });\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['[lang]'].default, { a: 2, c: 3 });\n\t});\n\n\ttest('configuration override defaults - merges defaults', async () => {\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { '[lang]': { a: 1, b: 2 } } }]);\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { '[lang]': { a: 2, c: 3 } } }]);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['[lang]'].default, { a: 2, b: 2, c: 3 });\n\t});\n\n\ttest('configuration defaults - overrides defaults', async () => {\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': '_test_default',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'config': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { 'config': { a: 1, b: 2 } } }]);\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { 'config': { a: 2, c: 3 } } }]);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config'].default, { a: 2, c: 3 });\n\t});\n\n\ttest('registering multiple settings with same policy', async () => {\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': '_test_default',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'policy1': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\tpolicy: {\n\t\t\t\t\t\tname: 'policy',\n\t\t\t\t\t\tminimumVersion: '1.0.0'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'policy2': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\tpolicy: {\n\t\t\t\t\t\tname: 'policy',\n\t\t\t\t\t\tminimumVersion: '1.0.0'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst actual = configurationRegistry.getConfigurationProperties();\n\t\tassert.ok(actual['policy1'] !== undefined);\n\t\tassert.ok(actual['policy2'] === undefined);\n\t});\n});\n"]}