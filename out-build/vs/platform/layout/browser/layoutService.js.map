{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/layout/browser/layoutService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMnF,QAAA,GAAG,GAAc,IAAA,mBAAG,EAA6B,eAAe,CAAC,CAAC","file":"layoutService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDimension } from 'vs/base/browser/dom';\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ILayoutService = createDecorator<ILayoutService>('layoutService');\n\nexport interface ILayoutOffsetInfo {\n\t/**\n\t * Generic top offset\n\t */\n\treadonly top: number;\n\t/**\n\t * Quick pick specific top offset.\n\t */\n\treadonly quickPickTop: number;\n}\n\nexport interface ILayoutService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * The dimensions of the container.\n\t */\n\treadonly dimension: IDimension;\n\n\t/**\n\t * Does the application have a single container?\n\t */\n\treadonly hasContainer: boolean;\n\n\t/**\n\t * Container of the application.\n\t *\n\t * **NOTE**: In the standalone editor case, multiple editors can be created on a page.\n\t * Therefore, in the standalone editor case, there are multiple containers, not just\n\t * a single one. If you ship code that needs a \"container\" for the standalone editor,\n\t * please use `ICodeEditorService` to get the current focused code editor and use its\n\t * container if necessary. You can also instantiate `EditorScopedLayoutService`\n\t * which implements `ILayoutService` but is not a part of the service collection because\n\t * it is code editor instance specific.\n\t *\n\t */\n\treadonly container: HTMLElement;\n\n\t/**\n\t * An offset to use for positioning elements inside the container.\n\t */\n\treadonly offset: ILayoutOffsetInfo;\n\n\t/**\n\t * An event that is emitted when the container is layed out. The\n\t * event carries the dimensions of the container as part of it.\n\t */\n\treadonly onDidLayout: Event<IDimension>;\n\n\t/**\n\t * Focus the primary component of the container.\n\t */\n\tfocus(): void;\n}\n"]}