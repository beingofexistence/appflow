{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/languagePacks/node/languagePacks.ts"],"names":[],"mappings":"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","file":"languagePacks.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { equals } from 'vs/base/common/arrays';\nimport { Queue } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionGalleryService, IExtensionIdentifier, IExtensionManagementService, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ILocalizationContribution } from 'vs/platform/extensions/common/extensions';\nimport { ILanguagePackItem, LanguagePackBaseService } from 'vs/platform/languagePacks/common/languagePacks';\nimport { URI } from 'vs/base/common/uri';\n\ninterface ILanguagePack {\n\thash: string;\n\tlabel: string | undefined;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nexport class NativeLanguagePackService extends LanguagePackBaseService {\n\tprivate readonly cache: LanguagePacksCache;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IExtensionGalleryService extensionGalleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper(extensionGalleryService);\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\t\tthis.extensionManagementService.registerParticipant({\n\t\t\tpostInstall: async (extension: ILocalExtension): Promise<void> => {\n\t\t\t\treturn this.postInstallExtension(extension);\n\t\t\t},\n\t\t\tpostUninstall: async (extension: ILocalExtension): Promise<void> => {\n\t\t\t\treturn this.postUninstallExtension(extension);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync getBuiltInExtensionTranslationsUri(id: string, language: string): Promise<URI | undefined> {\n\t\tconst packs = await this.cache.getLanguagePacks();\n\t\tconst pack = packs[language];\n\t\tif (!pack) {\n\t\t\tthis.logService.warn(`No language pack found for ${language}`);\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst translation = pack.translations[id];\n\t\treturn translation ? URI.file(translation) : undefined;\n\t}\n\n\tasync getInstalledLanguages(): Promise<Array<ILanguagePackItem>> {\n\t\tconst languagePacks = await this.cache.getLanguagePacks();\n\t\tconst languages: ILanguagePackItem[] = Object.keys(languagePacks).map(locale => {\n\t\t\tconst languagePack = languagePacks[locale];\n\t\t\tconst baseQuickPick = this.createQuickPickItem(locale, languagePack.label);\n\t\t\treturn {\n\t\t\t\t...baseQuickPick,\n\t\t\t\textensionId: languagePack.extensions[0].extensionIdentifier.id,\n\t\t\t};\n\t\t});\n\t\tlanguages.push(this.createQuickPickItem('en', 'English'));\n\t\tlanguages.sort((a, b) => a.label.localeCompare(b.label));\n\t\treturn languages;\n\t}\n\n\tprivate async postInstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.info('Adding language packs from the extension', extension.identifier.id);\n\t\t\tawait this.update();\n\t\t}\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tconst languagePacks = await this.cache.getLanguagePacks();\n\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, extension.identifier)))) {\n\t\t\tthis.logService.info('Removing language packs from the extension', extension.identifier.id);\n\t\t\tawait this.update();\n\t\t}\n\t}\n\n\tasync update(): Promise<boolean> {\n\t\tconst [current, installed] = await Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()]);\n\t\tconst updated = await this.cache.update(installed);\n\t\treturn !equals(Object.keys(current), Object.keys(updated));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = {\n\t\t\t\t\t\thash: '',\n\t\t\t\t\t\textensions: [],\n\t\t\t\t\t\ttranslations: {},\n\t\t\t\t\t\tlabel: localizationContribution.localizedLanguageName ?? localizationContribution.languageName\n\t\t\t\t\t};\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tconst extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version); // CodeQL [SM01510] The extension UUID is not sensitive info and is not manually created by a user\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn Promises.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn Promises.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n\nfunction isValidLocalization(localization: ILocalizationContribution): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}\n"]}