{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/keybinding/common/usLayoutResolvedKeybinding.ts"],"names":[],"mappings":"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","file":"usLayoutResolvedKeybinding.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyCodeUtils, IMMUTABLE_CODE_TO_KEY_CODE, ScanCode } from 'vs/base/common/keyCodes';\nimport { SingleModifierChord, Chord, KeyCodeChord, Keybinding } from 'vs/base/common/keybindings';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { BaseResolvedKeybinding } from 'vs/platform/keybinding/common/baseResolvedKeybinding';\nimport { toEmptyArrayIfContainsNull } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\n\n/**\n * Do not instantiate. Use KeybindingService to get a ResolvedKeybinding seeded with information about the current kb layout.\n */\nexport class USLayoutResolvedKeybinding extends BaseResolvedKeybinding<KeyCodeChord> {\n\n\tconstructor(chords: KeyCodeChord[], os: OperatingSystem) {\n\t\tsuper(os, chords);\n\t}\n\n\tprivate _keyCodeToUILabel(keyCode: KeyCode): string {\n\t\tif (this._os === OperatingSystem.Macintosh) {\n\t\t\tswitch (keyCode) {\n\t\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\t\treturn '←';\n\t\t\t\tcase KeyCode.UpArrow:\n\t\t\t\t\treturn '↑';\n\t\t\t\tcase KeyCode.RightArrow:\n\t\t\t\t\treturn '→';\n\t\t\t\tcase KeyCode.DownArrow:\n\t\t\t\t\treturn '↓';\n\t\t\t}\n\t\t}\n\t\treturn KeyCodeUtils.toString(keyCode);\n\t}\n\n\tprotected _getLabel(chord: KeyCodeChord): string | null {\n\t\tif (chord.isDuplicateModifierCase()) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._keyCodeToUILabel(chord.keyCode);\n\t}\n\n\tprotected _getAriaLabel(chord: KeyCodeChord): string | null {\n\t\tif (chord.isDuplicateModifierCase()) {\n\t\t\treturn '';\n\t\t}\n\t\treturn KeyCodeUtils.toString(chord.keyCode);\n\t}\n\n\tprotected _getElectronAccelerator(chord: KeyCodeChord): string | null {\n\t\treturn KeyCodeUtils.toElectronAccelerator(chord.keyCode);\n\t}\n\n\tprotected _getUserSettingsLabel(chord: KeyCodeChord): string | null {\n\t\tif (chord.isDuplicateModifierCase()) {\n\t\t\treturn '';\n\t\t}\n\t\tconst result = KeyCodeUtils.toUserSettingsUS(chord.keyCode);\n\t\treturn (result ? result.toLowerCase() : result);\n\t}\n\n\tprotected _isWYSIWYG(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected _getChordDispatch(chord: KeyCodeChord): string | null {\n\t\treturn USLayoutResolvedKeybinding.getDispatchStr(chord);\n\t}\n\n\tpublic static getDispatchStr(chord: KeyCodeChord): string | null {\n\t\tif (chord.isModifierKey()) {\n\t\t\treturn null;\n\t\t}\n\t\tlet result = '';\n\n\t\tif (chord.ctrlKey) {\n\t\t\tresult += 'ctrl+';\n\t\t}\n\t\tif (chord.shiftKey) {\n\t\t\tresult += 'shift+';\n\t\t}\n\t\tif (chord.altKey) {\n\t\t\tresult += 'alt+';\n\t\t}\n\t\tif (chord.metaKey) {\n\t\t\tresult += 'meta+';\n\t\t}\n\t\tresult += KeyCodeUtils.toString(chord.keyCode);\n\n\t\treturn result;\n\t}\n\n\tprotected _getSingleModifierChordDispatch(keybinding: KeyCodeChord): SingleModifierChord | null {\n\t\tif (keybinding.keyCode === KeyCode.Ctrl && !keybinding.shiftKey && !keybinding.altKey && !keybinding.metaKey) {\n\t\t\treturn 'ctrl';\n\t\t}\n\t\tif (keybinding.keyCode === KeyCode.Shift && !keybinding.ctrlKey && !keybinding.altKey && !keybinding.metaKey) {\n\t\t\treturn 'shift';\n\t\t}\n\t\tif (keybinding.keyCode === KeyCode.Alt && !keybinding.ctrlKey && !keybinding.shiftKey && !keybinding.metaKey) {\n\t\t\treturn 'alt';\n\t\t}\n\t\tif (keybinding.keyCode === KeyCode.Meta && !keybinding.ctrlKey && !keybinding.shiftKey && !keybinding.altKey) {\n\t\t\treturn 'meta';\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * *NOTE*: Check return value for `KeyCode.Unknown`.\n\t */\n\tprivate static _scanCodeToKeyCode(scanCode: ScanCode): KeyCode {\n\t\tconst immutableKeyCode = IMMUTABLE_CODE_TO_KEY_CODE[scanCode];\n\t\tif (immutableKeyCode !== KeyCode.DependsOnKbLayout) {\n\t\t\treturn immutableKeyCode;\n\t\t}\n\n\t\tswitch (scanCode) {\n\t\t\tcase ScanCode.KeyA: return KeyCode.KeyA;\n\t\t\tcase ScanCode.KeyB: return KeyCode.KeyB;\n\t\t\tcase ScanCode.KeyC: return KeyCode.KeyC;\n\t\t\tcase ScanCode.KeyD: return KeyCode.KeyD;\n\t\t\tcase ScanCode.KeyE: return KeyCode.KeyE;\n\t\t\tcase ScanCode.KeyF: return KeyCode.KeyF;\n\t\t\tcase ScanCode.KeyG: return KeyCode.KeyG;\n\t\t\tcase ScanCode.KeyH: return KeyCode.KeyH;\n\t\t\tcase ScanCode.KeyI: return KeyCode.KeyI;\n\t\t\tcase ScanCode.KeyJ: return KeyCode.KeyJ;\n\t\t\tcase ScanCode.KeyK: return KeyCode.KeyK;\n\t\t\tcase ScanCode.KeyL: return KeyCode.KeyL;\n\t\t\tcase ScanCode.KeyM: return KeyCode.KeyM;\n\t\t\tcase ScanCode.KeyN: return KeyCode.KeyN;\n\t\t\tcase ScanCode.KeyO: return KeyCode.KeyO;\n\t\t\tcase ScanCode.KeyP: return KeyCode.KeyP;\n\t\t\tcase ScanCode.KeyQ: return KeyCode.KeyQ;\n\t\t\tcase ScanCode.KeyR: return KeyCode.KeyR;\n\t\t\tcase ScanCode.KeyS: return KeyCode.KeyS;\n\t\t\tcase ScanCode.KeyT: return KeyCode.KeyT;\n\t\t\tcase ScanCode.KeyU: return KeyCode.KeyU;\n\t\t\tcase ScanCode.KeyV: return KeyCode.KeyV;\n\t\t\tcase ScanCode.KeyW: return KeyCode.KeyW;\n\t\t\tcase ScanCode.KeyX: return KeyCode.KeyX;\n\t\t\tcase ScanCode.KeyY: return KeyCode.KeyY;\n\t\t\tcase ScanCode.KeyZ: return KeyCode.KeyZ;\n\t\t\tcase ScanCode.Digit1: return KeyCode.Digit1;\n\t\t\tcase ScanCode.Digit2: return KeyCode.Digit2;\n\t\t\tcase ScanCode.Digit3: return KeyCode.Digit3;\n\t\t\tcase ScanCode.Digit4: return KeyCode.Digit4;\n\t\t\tcase ScanCode.Digit5: return KeyCode.Digit5;\n\t\t\tcase ScanCode.Digit6: return KeyCode.Digit6;\n\t\t\tcase ScanCode.Digit7: return KeyCode.Digit7;\n\t\t\tcase ScanCode.Digit8: return KeyCode.Digit8;\n\t\t\tcase ScanCode.Digit9: return KeyCode.Digit9;\n\t\t\tcase ScanCode.Digit0: return KeyCode.Digit0;\n\t\t\tcase ScanCode.Minus: return KeyCode.Minus;\n\t\t\tcase ScanCode.Equal: return KeyCode.Equal;\n\t\t\tcase ScanCode.BracketLeft: return KeyCode.BracketLeft;\n\t\t\tcase ScanCode.BracketRight: return KeyCode.BracketRight;\n\t\t\tcase ScanCode.Backslash: return KeyCode.Backslash;\n\t\t\tcase ScanCode.IntlHash: return KeyCode.Unknown; // missing\n\t\t\tcase ScanCode.Semicolon: return KeyCode.Semicolon;\n\t\t\tcase ScanCode.Quote: return KeyCode.Quote;\n\t\t\tcase ScanCode.Backquote: return KeyCode.Backquote;\n\t\t\tcase ScanCode.Comma: return KeyCode.Comma;\n\t\t\tcase ScanCode.Period: return KeyCode.Period;\n\t\t\tcase ScanCode.Slash: return KeyCode.Slash;\n\t\t\tcase ScanCode.IntlBackslash: return KeyCode.IntlBackslash;\n\t\t}\n\t\treturn KeyCode.Unknown;\n\t}\n\n\tprivate static _toKeyCodeChord(chord: Chord | null): KeyCodeChord | null {\n\t\tif (!chord) {\n\t\t\treturn null;\n\t\t}\n\t\tif (chord instanceof KeyCodeChord) {\n\t\t\treturn chord;\n\t\t}\n\t\tconst keyCode = this._scanCodeToKeyCode(chord.scanCode);\n\t\tif (keyCode === KeyCode.Unknown) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new KeyCodeChord(chord.ctrlKey, chord.shiftKey, chord.altKey, chord.metaKey, keyCode);\n\t}\n\n\tpublic static resolveKeybinding(keybinding: Keybinding, os: OperatingSystem): USLayoutResolvedKeybinding[] {\n\t\tconst chords: KeyCodeChord[] = toEmptyArrayIfContainsNull(keybinding.chords.map(chord => this._toKeyCodeChord(chord)));\n\t\tif (chords.length > 0) {\n\t\t\treturn [new USLayoutResolvedKeybinding(chords, os)];\n\t\t}\n\t\treturn [];\n\t}\n}\n"]}