{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/keybinding/test/common/keybindingResolver.test.ts"],"names":[],"mappings":"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","file":"keybindingResolver.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { decodeKeybinding, createSimpleKeybinding, KeyCodeChord } from 'vs/base/common/keybindings';\nimport { KeyChord, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { OS } from 'vs/base/common/platform';\nimport { ContextKeyExpr, ContextKeyExpression, IContext } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingResolver, ResultKind } from 'vs/platform/keybinding/common/keybindingResolver';\nimport { ResolvedKeybindingItem } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\nimport { USLayoutResolvedKeybinding } from 'vs/platform/keybinding/common/usLayoutResolvedKeybinding';\nimport { createUSLayoutResolvedKeybinding } from 'vs/platform/keybinding/test/common/keybindingsTestUtils';\n\nfunction createContext(ctx: any) {\n\treturn {\n\t\tgetValue: (key: string) => {\n\t\t\treturn ctx[key];\n\t\t}\n\t};\n}\n\nsuite('KeybindingResolver', () => {\n\n\tfunction kbItem(keybinding: number | number[], command: string, commandArgs: any, when: ContextKeyExpression | undefined, isDefault: boolean): ResolvedKeybindingItem {\n\t\tconst resolvedKeybinding = createUSLayoutResolvedKeybinding(keybinding, OS);\n\t\treturn new ResolvedKeybindingItem(\n\t\t\tresolvedKeybinding,\n\t\t\tcommand,\n\t\t\tcommandArgs,\n\t\t\twhen,\n\t\t\tisDefault,\n\t\t\tnull,\n\t\t\tfalse\n\t\t);\n\t}\n\n\tfunction getDispatchStr(chord: KeyCodeChord): string {\n\t\treturn USLayoutResolvedKeybinding.getDispatchStr(chord)!;\n\t}\n\n\ttest('resolve key', () => {\n\t\tconst keybinding = KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyZ;\n\t\tconst runtimeKeybinding = createSimpleKeybinding(keybinding, OS);\n\t\tconst contextRules = ContextKeyExpr.equals('bar', 'baz');\n\t\tconst keybindingItem = kbItem(keybinding, 'yes', null, contextRules, true);\n\n\t\tassert.strictEqual(contextRules.evaluate(createContext({ bar: 'baz' })), true);\n\t\tassert.strictEqual(contextRules.evaluate(createContext({ bar: 'bz' })), false);\n\n\t\tconst resolver = new KeybindingResolver([keybindingItem], [], () => { });\n\n\t\tconst r1 = resolver.resolve(createContext({ bar: 'baz' }), [], getDispatchStr(runtimeKeybinding));\n\t\tassert.ok(r1.kind === ResultKind.KbFound);\n\t\tassert.strictEqual(r1.commandId, 'yes');\n\n\t\tconst r2 = resolver.resolve(createContext({ bar: 'bz' }), [], getDispatchStr(runtimeKeybinding));\n\t\tassert.strictEqual(r2.kind, ResultKind.NoMatchingKb);\n\t});\n\n\ttest('resolve key with arguments', () => {\n\t\tconst commandArgs = { text: 'no' };\n\t\tconst keybinding = KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyZ;\n\t\tconst runtimeKeybinding = createSimpleKeybinding(keybinding, OS);\n\t\tconst contextRules = ContextKeyExpr.equals('bar', 'baz');\n\t\tconst keybindingItem = kbItem(keybinding, 'yes', commandArgs, contextRules, true);\n\n\t\tconst resolver = new KeybindingResolver([keybindingItem], [], () => { });\n\n\t\tconst r = resolver.resolve(createContext({ bar: 'baz' }), [], getDispatchStr(runtimeKeybinding));\n\t\tassert.ok(r.kind === ResultKind.KbFound);\n\t\tassert.strictEqual(r.commandArgs, commandArgs);\n\t});\n\n\tsuite('handle keybinding removals', () => {\n\n\t\ttest('simple 1', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), false),\n\t\t\t]);\n\t\t});\n\n\t\ttest('simple 2', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyC, 'yes3', null, ContextKeyExpr.equals('3', 'c'), false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true),\n\t\t\t\tkbItem(KeyCode.KeyC, 'yes3', null, ContextKeyExpr.equals('3', 'c'), false),\n\t\t\t]);\n\t\t});\n\n\t\ttest('removal with not matching when', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-yes1', null, ContextKeyExpr.equals('1', 'b'), false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('removal with not matching keybinding', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyB, '-yes1', null, ContextKeyExpr.equals('1', 'a'), false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('removal with matching keybinding and when', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-yes1', null, ContextKeyExpr.equals('1', 'a'), false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('removal with unspecified keybinding', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(0, '-yes1', null, ContextKeyExpr.equals('1', 'a'), false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('removal with unspecified when', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-yes1', null, undefined, false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('removal with unspecified when and unspecified keybinding', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(0, '-yes1', null, undefined, false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('issue #138997 - removal in default list', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, undefined, true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, undefined, true),\n\t\t\t\tkbItem(0, '-yes1', null, undefined, false)\n\t\t\t];\n\t\t\tconst overrides: ResolvedKeybindingItem[] = [];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, undefined, true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('issue #612#issuecomment-222109084 cannot remove keybindings for commands with ^', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, '^yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-yes1', null, undefined, false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('issue #140884 Unable to reassign F1 as keybinding for Show All Commands', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, undefined, true),\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-command1', null, undefined, false),\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, undefined, false),\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, undefined, false)\n\t\t\t]);\n\t\t});\n\n\t\ttest('issue #141638: Keyboard Shortcuts: Change When Expression might actually remove keybinding in Insiders', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, undefined, true),\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, ContextKeyExpr.equals('a', '1'), false),\n\t\t\t\tkbItem(KeyCode.KeyA, '-command1', null, undefined, false),\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, ContextKeyExpr.equals('a', '1'), false)\n\t\t\t]);\n\t\t});\n\n\t\ttest('issue #157751: Auto-quoting of context keys prevents removal of keybindings via UI', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, ContextKeyExpr.deserialize(`editorTextFocus && activeEditor != workbench.editor.notebook && editorLangId in julia.supportedLanguageIds`), true),\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-command1', null, ContextKeyExpr.deserialize(`editorTextFocus && activeEditor != 'workbench.editor.notebook' && editorLangId in 'julia.supportedLanguageIds'`), false),\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, []);\n\t\t});\n\n\t\ttest('issue #160604: Remove keybindings with when clause does not work', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, undefined, true),\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-command1', null, ContextKeyExpr.true(), false),\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, []);\n\t\t});\n\n\t\ttest('contextIsEntirelyIncluded', () => {\n\t\t\tconst toContextKeyExpression = (expr: ContextKeyExpression | string | null) => {\n\t\t\t\tif (typeof expr === 'string' || !expr) {\n\t\t\t\t\treturn ContextKeyExpr.deserialize(expr);\n\t\t\t\t}\n\t\t\t\treturn expr;\n\t\t\t};\n\t\t\tconst assertIsIncluded = (a: ContextKeyExpression | string | null, b: ContextKeyExpression | string | null) => {\n\t\t\t\tassert.strictEqual(KeybindingResolver.whenIsEntirelyIncluded(toContextKeyExpression(a), toContextKeyExpression(b)), true);\n\t\t\t};\n\t\t\tconst assertIsNotIncluded = (a: ContextKeyExpression | string | null, b: ContextKeyExpression | string | null) => {\n\t\t\t\tassert.strictEqual(KeybindingResolver.whenIsEntirelyIncluded(toContextKeyExpression(a), toContextKeyExpression(b)), false);\n\t\t\t};\n\n\t\t\tassertIsIncluded(null, null);\n\t\t\tassertIsIncluded(null, ContextKeyExpr.true());\n\t\t\tassertIsIncluded(ContextKeyExpr.true(), null);\n\t\t\tassertIsIncluded(ContextKeyExpr.true(), ContextKeyExpr.true());\n\t\t\tassertIsIncluded('key1', null);\n\t\t\tassertIsIncluded('key1', '');\n\t\t\tassertIsIncluded('key1', 'key1');\n\t\t\tassertIsIncluded('key1', ContextKeyExpr.true());\n\t\t\tassertIsIncluded('!key1', '');\n\t\t\tassertIsIncluded('!key1', '!key1');\n\t\t\tassertIsIncluded('key2', '');\n\t\t\tassertIsIncluded('key2', 'key2');\n\t\t\tassertIsIncluded('key1 && key1 && key2 && key2', 'key2');\n\t\t\tassertIsIncluded('key1 && key2', 'key2');\n\t\t\tassertIsIncluded('key1 && key2', 'key1');\n\t\t\tassertIsIncluded('key1 && key2', '');\n\t\t\tassertIsIncluded('key1', 'key1 || key2');\n\t\t\tassertIsIncluded('key1 || !key1', 'key2 || !key2');\n\t\t\tassertIsIncluded('key1', 'key1 || key2 && key3');\n\n\t\t\tassertIsNotIncluded('key1', '!key1');\n\t\t\tassertIsNotIncluded('!key1', 'key1');\n\t\t\tassertIsNotIncluded('key1 && key2', 'key3');\n\t\t\tassertIsNotIncluded('key1 && key2', 'key4');\n\t\t\tassertIsNotIncluded('key1', 'key2');\n\t\t\tassertIsNotIncluded('key1 || key2', 'key2');\n\t\t\tassertIsNotIncluded('', 'key2');\n\t\t\tassertIsNotIncluded(null, 'key2');\n\t\t});\n\t});\n\n\tsuite('resolve command', () => {\n\n\t\tfunction _kbItem(keybinding: number | number[], command: string, when: ContextKeyExpression | undefined): ResolvedKeybindingItem {\n\t\t\treturn kbItem(keybinding, command, null, when, true);\n\t\t}\n\n\t\tconst items = [\n\t\t\t// This one will never match because its \"when\" is always overwritten by another one\n\t\t\t_kbItem(\n\t\t\t\tKeyCode.KeyX,\n\t\t\t\t'first',\n\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals('key1', true),\n\t\t\t\t\tContextKeyExpr.notEquals('key2', false)\n\t\t\t\t)\n\t\t\t),\n\t\t\t// This one always overwrites first\n\t\t\t_kbItem(\n\t\t\t\tKeyCode.KeyX,\n\t\t\t\t'second',\n\t\t\t\tContextKeyExpr.equals('key2', true)\n\t\t\t),\n\t\t\t// This one is a secondary mapping for `second`\n\t\t\t_kbItem(\n\t\t\t\tKeyCode.KeyZ,\n\t\t\t\t'second',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t// This one sometimes overwrites first\n\t\t\t_kbItem(\n\t\t\t\tKeyCode.KeyX,\n\t\t\t\t'third',\n\t\t\t\tContextKeyExpr.equals('key3', true)\n\t\t\t),\n\t\t\t// This one is always overwritten by another one\n\t\t\t_kbItem(\n\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyY,\n\t\t\t\t'fourth',\n\t\t\t\tContextKeyExpr.equals('key4', true)\n\t\t\t),\n\t\t\t// This one overwrites with a chord the previous one\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyY, KeyCode.KeyZ),\n\t\t\t\t'fifth',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t// This one has no keybinding\n\t\t\t_kbItem(\n\t\t\t\t0,\n\t\t\t\t'sixth',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyU),\n\t\t\t\t'seventh',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyK),\n\t\t\t\t'seventh',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyU),\n\t\t\t\t'uncomment lines',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyC), // cmd+k cmd+c\n\t\t\t\t'comment lines',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyG, KeyMod.CtrlCmd | KeyCode.KeyC), // cmd+g cmd+c\n\t\t\t\t'unreachablechord',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyG, // cmd+g\n\t\t\t\t'eleven',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\t[KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyA, KeyCode.KeyB], // cmd+k a b\n\t\t\t\t'long multi chord',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\t[KeyMod.CtrlCmd | KeyCode.KeyB, KeyMod.CtrlCmd | KeyCode.KeyC], // cmd+b cmd+c\n\t\t\t\t'shadowed by long-multi-chord-2',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\t[KeyMod.CtrlCmd | KeyCode.KeyB, KeyMod.CtrlCmd | KeyCode.KeyC, KeyCode.KeyI], // cmd+b cmd+c i\n\t\t\t\t'long-multi-chord-2',\n\t\t\t\tundefined\n\t\t\t)\n\t\t];\n\n\t\tconst resolver = new KeybindingResolver(items, [], () => { });\n\n\t\tconst testKbLookupByCommand = (commandId: string, expectedKeys: number[] | number[][]) => {\n\t\t\t// Test lookup\n\t\t\tconst lookupResult = resolver.lookupKeybindings(commandId);\n\t\t\tassert.strictEqual(lookupResult.length, expectedKeys.length, 'Length mismatch @ commandId ' + commandId);\n\t\t\tfor (let i = 0, len = lookupResult.length; i < len; i++) {\n\t\t\t\tconst expected = createUSLayoutResolvedKeybinding(expectedKeys[i], OS)!;\n\n\t\t\t\tassert.strictEqual(lookupResult[i].resolvedKeybinding!.getUserSettingsLabel(), expected.getUserSettingsLabel(), 'value mismatch @ commandId ' + commandId);\n\t\t\t}\n\t\t};\n\n\t\tconst testResolve = (ctx: IContext, _expectedKey: number | number[], commandId: string) => {\n\t\t\tconst expectedKeybinding = decodeKeybinding(_expectedKey, OS)!;\n\n\t\t\tconst previousChord: string[] = [];\n\n\t\t\tfor (let i = 0, len = expectedKeybinding.chords.length; i < len; i++) {\n\n\t\t\t\tconst chord = getDispatchStr(<KeyCodeChord>expectedKeybinding.chords[i]);\n\n\t\t\t\tconst result = resolver.resolve(ctx, previousChord, chord);\n\n\t\t\t\tif (i === len - 1) {\n\t\t\t\t\t// if it's the final chord, then we should find a valid command,\n\t\t\t\t\t// and there should not be a chord.\n\t\t\t\t\tassert.ok(result.kind === ResultKind.KbFound, `Enters multi chord for ${commandId} at chord ${i}`);\n\t\t\t\t\tassert.strictEqual(result.commandId, commandId, `Enters multi chord for ${commandId} at chord ${i}`);\n\t\t\t\t} else if (i > 0) {\n\t\t\t\t\t// if this is an intermediate chord, we should not find a valid command,\n\t\t\t\t\t// and there should be an open chord we continue.\n\t\t\t\t\tassert.ok(result.kind === ResultKind.MoreChordsNeeded, `Continues multi chord for ${commandId} at chord ${i}`);\n\t\t\t\t} else {\n\t\t\t\t\t// if it's not the final chord and not an intermediate, then we should not\n\t\t\t\t\t// find a valid command, and we should enter a chord.\n\t\t\t\t\tassert.ok(result.kind === ResultKind.MoreChordsNeeded, `Enters multi chord for ${commandId} at chord ${i}`);\n\t\t\t\t}\n\t\t\t\tpreviousChord.push(chord);\n\t\t\t}\n\t\t};\n\n\t\ttest('resolve command - 1', () => {\n\t\t\ttestKbLookupByCommand('first', []);\n\t\t});\n\n\t\ttest('resolve command - 2', () => {\n\t\t\ttestKbLookupByCommand('second', [KeyCode.KeyZ, KeyCode.KeyX]);\n\t\t\ttestResolve(createContext({ key2: true }), KeyCode.KeyX, 'second');\n\t\t\ttestResolve(createContext({}), KeyCode.KeyZ, 'second');\n\t\t});\n\n\t\ttest('resolve command - 3', () => {\n\t\t\ttestKbLookupByCommand('third', [KeyCode.KeyX]);\n\t\t\ttestResolve(createContext({ key3: true }), KeyCode.KeyX, 'third');\n\t\t});\n\n\t\ttest('resolve command - 4', () => {\n\t\t\ttestKbLookupByCommand('fourth', []);\n\t\t});\n\n\t\ttest('resolve command - 5', () => {\n\t\t\ttestKbLookupByCommand('fifth', [KeyChord(KeyMod.CtrlCmd | KeyCode.KeyY, KeyCode.KeyZ)]);\n\t\t\ttestResolve(createContext({}), KeyChord(KeyMod.CtrlCmd | KeyCode.KeyY, KeyCode.KeyZ), 'fifth');\n\t\t});\n\n\t\ttest('resolve command - 6', () => {\n\t\t\ttestKbLookupByCommand('seventh', [KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyK)]);\n\t\t\ttestResolve(createContext({}), KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyK), 'seventh');\n\t\t});\n\n\t\ttest('resolve command - 7', () => {\n\t\t\ttestKbLookupByCommand('uncomment lines', [KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyU)]);\n\t\t\ttestResolve(createContext({}), KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyU), 'uncomment lines');\n\t\t});\n\n\t\ttest('resolve command - 8', () => {\n\t\t\ttestKbLookupByCommand('comment lines', [KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyC)]);\n\t\t\ttestResolve(createContext({}), KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyC), 'comment lines');\n\t\t});\n\n\t\ttest('resolve command - 9', () => {\n\t\t\ttestKbLookupByCommand('unreachablechord', []);\n\t\t});\n\n\t\ttest('resolve command - 10', () => {\n\t\t\ttestKbLookupByCommand('eleven', [KeyMod.CtrlCmd | KeyCode.KeyG]);\n\t\t\ttestResolve(createContext({}), KeyMod.CtrlCmd | KeyCode.KeyG, 'eleven');\n\t\t});\n\n\t\ttest('resolve command - 11', () => {\n\t\t\ttestKbLookupByCommand('sixth', []);\n\t\t});\n\n\t\ttest('resolve command - 12', () => {\n\t\t\ttestKbLookupByCommand('long multi chord', [[KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyA, KeyCode.KeyB]]);\n\t\t\ttestResolve(createContext({}), [KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyA, KeyCode.KeyB], 'long multi chord');\n\t\t});\n\n\t\tconst emptyContext = createContext({});\n\n\t\ttest('KBs having common prefix - the one defined later is returned', () => {\n\t\t\ttestResolve(emptyContext, [KeyMod.CtrlCmd | KeyCode.KeyB, KeyMod.CtrlCmd | KeyCode.KeyC, KeyCode.KeyI], 'long-multi-chord-2');\n\t\t});\n\t});\n});\n"]}