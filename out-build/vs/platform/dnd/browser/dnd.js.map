{"version":3,"sources":["vs/platform/dnd/browser/dnd.ts"],"names":[],"mappings":"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","file":"dnd.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DataTransfers } from 'vs/base/browser/dnd';\nimport { DragMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { DeferredPromise } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { parse } from 'vs/base/common/marshalling';\nimport { Schemas } from 'vs/base/common/network';\nimport { isWeb } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IBaseTextResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { HTMLFileSystemProvider } from 'vs/platform/files/browser/htmlFileSystemProvider';\nimport { WebFileSystemAccess } from 'vs/platform/files/browser/webFileSystemAccess';\nimport { ByteSize, IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { extractSelection } from 'vs/platform/opener/common/opener';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport interface FileAdditionalNativeProperties {\n\t/**\n\t * The real path to the file on the users filesystem. Only available on electron.\n\t */\n\treadonly path?: string;\n}\n\n\n//#region Editor / Resources DND\n\nexport const CodeDataTransfers = {\n\tEDITORS: 'CodeEditors',\n\tFILES: 'CodeFiles'\n};\n\nexport interface IDraggedResourceEditorInput extends IBaseTextResourceEditorInput {\n\tresource: URI | undefined;\n\n\t/**\n\t * A hint that the source of the dragged editor input\n\t * might not be the application but some external tool.\n\t */\n\tisExternal?: boolean;\n\n\t/**\n\t * Whether we probe for the dropped editor to be a workspace\n\t * (i.e. code-workspace file or even a folder), allowing to\n\t * open it as workspace instead of opening as editor.\n\t */\n\tallowWorkspaceOpen?: boolean;\n}\n\nexport function extractEditorsDropData(e: DragEvent): Array<IDraggedResourceEditorInput> {\n\tconst editors: IDraggedResourceEditorInput[] = [];\n\tif (e.dataTransfer && e.dataTransfer.types.length > 0) {\n\n\t\t// Data Transfer: Code Editors\n\t\tconst rawEditorsData = e.dataTransfer.getData(CodeDataTransfers.EDITORS);\n\t\tif (rawEditorsData) {\n\t\t\ttry {\n\t\t\t\teditors.push(...parse(rawEditorsData));\n\t\t\t} catch (error) {\n\t\t\t\t// Invalid transfer\n\t\t\t}\n\t\t}\n\n\t\t// Data Transfer: Resources\n\t\telse {\n\t\t\ttry {\n\t\t\t\tconst rawResourcesData = e.dataTransfer.getData(DataTransfers.RESOURCES);\n\t\t\t\teditors.push(...createDraggedEditorInputFromRawResourcesData(rawResourcesData));\n\t\t\t} catch (error) {\n\t\t\t\t// Invalid transfer\n\t\t\t}\n\t\t}\n\n\t\t// Check for native file transfer\n\t\tif (e.dataTransfer?.files) {\n\t\t\tfor (let i = 0; i < e.dataTransfer.files.length; i++) {\n\t\t\t\tconst file = e.dataTransfer.files[i];\n\t\t\t\tif (file && (file as FileAdditionalNativeProperties).path /* Electron only */) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\teditors.push({ resource: URI.file((file as FileAdditionalNativeProperties).path!), isExternal: true, allowWorkspaceOpen: true });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t// Invalid URI\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check for CodeFiles transfer\n\t\tconst rawCodeFiles = e.dataTransfer.getData(CodeDataTransfers.FILES);\n\t\tif (rawCodeFiles) {\n\t\t\ttry {\n\t\t\t\tconst codeFiles: string[] = JSON.parse(rawCodeFiles);\n\t\t\t\tfor (const codeFile of codeFiles) {\n\t\t\t\t\teditors.push({ resource: URI.file(codeFile), isExternal: true, allowWorkspaceOpen: true });\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// Invalid transfer\n\t\t\t}\n\t\t}\n\n\t\t// Workbench contributions\n\t\tconst contributions = Registry.as<IDragAndDropContributionRegistry>(Extensions.DragAndDropContribution).getAll();\n\t\tfor (const contribution of contributions) {\n\t\t\tconst data = e.dataTransfer.getData(contribution.dataFormatKey);\n\t\t\tif (data) {\n\t\t\t\ttry {\n\t\t\t\t\teditors.push(...contribution.getEditorInputs(data));\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Invalid transfer\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Prevent duplicates: it is possible that we end up with the same\n\t// dragged editor multiple times because multiple data transfers\n\t// are being used (https://github.com/microsoft/vscode/issues/128925)\n\n\tconst coalescedEditors: IDraggedResourceEditorInput[] = [];\n\tconst seen = new ResourceMap<boolean>();\n\tfor (const editor of editors) {\n\t\tif (!editor.resource) {\n\t\t\tcoalescedEditors.push(editor);\n\t\t} else if (!seen.has(editor.resource)) {\n\t\t\tcoalescedEditors.push(editor);\n\t\t\tseen.set(editor.resource, true);\n\t\t}\n\t}\n\n\treturn coalescedEditors;\n}\n\nexport async function extractEditorsAndFilesDropData(accessor: ServicesAccessor, e: DragEvent): Promise<Array<IDraggedResourceEditorInput>> {\n\tconst editors = extractEditorsDropData(e);\n\n\t// Web: Check for file transfer\n\tif (e.dataTransfer && isWeb && containsDragType(e, DataTransfers.FILES)) {\n\t\tconst files = e.dataTransfer.items;\n\t\tif (files) {\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst filesData = await instantiationService.invokeFunction(accessor => extractFilesDropData(accessor, e));\n\t\t\tfor (const fileData of filesData) {\n\t\t\t\teditors.push({ resource: fileData.resource, contents: fileData.contents?.toString(), isExternal: true, allowWorkspaceOpen: fileData.isDirectory });\n\t\t\t}\n\t\t}\n\t}\n\n\treturn editors;\n}\n\nexport function createDraggedEditorInputFromRawResourcesData(rawResourcesData: string | undefined): IDraggedResourceEditorInput[] {\n\tconst editors: IDraggedResourceEditorInput[] = [];\n\n\tif (rawResourcesData) {\n\t\tconst resourcesRaw: string[] = JSON.parse(rawResourcesData);\n\t\tfor (const resourceRaw of resourcesRaw) {\n\t\t\tif (resourceRaw.indexOf(':') > 0) { // mitigate https://github.com/microsoft/vscode/issues/124946\n\t\t\t\tconst { selection, uri } = extractSelection(URI.parse(resourceRaw));\n\t\t\t\teditors.push({ resource: uri, options: { selection } });\n\t\t\t}\n\t\t}\n\t}\n\n\treturn editors;\n}\n\n\ninterface IFileTransferData {\n\tresource: URI;\n\tisDirectory?: boolean;\n\tcontents?: VSBuffer;\n}\n\nasync function extractFilesDropData(accessor: ServicesAccessor, event: DragEvent): Promise<IFileTransferData[]> {\n\n\t// Try to extract via `FileSystemHandle`\n\tif (WebFileSystemAccess.supported(window)) {\n\t\tconst items = event.dataTransfer?.items;\n\t\tif (items) {\n\t\t\treturn extractFileTransferData(accessor, items);\n\t\t}\n\t}\n\n\t// Try to extract via `FileList`\n\tconst files = event.dataTransfer?.files;\n\tif (!files) {\n\t\treturn [];\n\t}\n\n\treturn extractFileListData(accessor, files);\n}\n\nasync function extractFileTransferData(accessor: ServicesAccessor, items: DataTransferItemList): Promise<IFileTransferData[]> {\n\tconst fileSystemProvider = accessor.get(IFileService).getProvider(Schemas.file);\n\tif (!(fileSystemProvider instanceof HTMLFileSystemProvider)) {\n\t\treturn []; // only supported when running in web\n\t}\n\n\tconst results: DeferredPromise<IFileTransferData | undefined>[] = [];\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst file = items[i];\n\t\tif (file) {\n\t\t\tconst result = new DeferredPromise<IFileTransferData | undefined>();\n\t\t\tresults.push(result);\n\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst handle = await file.getAsFileSystemHandle();\n\t\t\t\t\tif (!handle) {\n\t\t\t\t\t\tresult.complete(undefined);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (WebFileSystemAccess.isFileSystemFileHandle(handle)) {\n\t\t\t\t\t\tresult.complete({\n\t\t\t\t\t\t\tresource: await fileSystemProvider.registerFileHandle(handle),\n\t\t\t\t\t\t\tisDirectory: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (WebFileSystemAccess.isFileSystemDirectoryHandle(handle)) {\n\t\t\t\t\t\tresult.complete({\n\t\t\t\t\t\t\tresource: await fileSystemProvider.registerDirectoryHandle(handle),\n\t\t\t\t\t\t\tisDirectory: true\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.complete(undefined);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tresult.complete(undefined);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t}\n\n\treturn coalesce(await Promise.all(results.map(result => result.p)));\n}\n\nexport async function extractFileListData(accessor: ServicesAccessor, files: FileList): Promise<IFileTransferData[]> {\n\tconst dialogService = accessor.get(IDialogService);\n\n\tconst results: DeferredPromise<IFileTransferData | undefined>[] = [];\n\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files.item(i);\n\t\tif (file) {\n\n\t\t\t// Skip for very large files because this operation is unbuffered\n\t\t\tif (file.size > 100 * ByteSize.MB) {\n\t\t\t\tdialogService.warn(localize('fileTooLarge', \"File is too large to open as untitled editor. Please upload it first into the file explorer and then try again.\"));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst result = new DeferredPromise<IFileTransferData | undefined>();\n\t\t\tresults.push(result);\n\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.onerror = () => result.complete(undefined);\n\t\t\treader.onabort = () => result.complete(undefined);\n\n\t\t\treader.onload = async event => {\n\t\t\t\tconst name = file.name;\n\t\t\t\tconst loadResult = event.target?.result ?? undefined;\n\t\t\t\tif (typeof name !== 'string' || typeof loadResult === 'undefined') {\n\t\t\t\t\tresult.complete(undefined);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.complete({\n\t\t\t\t\tresource: URI.from({ scheme: Schemas.untitled, path: name }),\n\t\t\t\t\tcontents: typeof loadResult === 'string' ? VSBuffer.fromString(loadResult) : VSBuffer.wrap(new Uint8Array(loadResult))\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// Start reading\n\t\t\treader.readAsArrayBuffer(file);\n\t\t}\n\t}\n\n\treturn coalesce(await Promise.all(results.map(result => result.p)));\n}\n\n//#endregion\n\nexport function containsDragType(event: DragEvent, ...dragTypesToFind: string[]): boolean {\n\tif (!event.dataTransfer) {\n\t\treturn false;\n\t}\n\n\tconst dragTypes = event.dataTransfer.types;\n\tconst lowercaseDragTypes: string[] = [];\n\tfor (let i = 0; i < dragTypes.length; i++) {\n\t\tlowercaseDragTypes.push(dragTypes[i].toLowerCase()); // somehow the types are lowercase\n\t}\n\n\tfor (const dragType of dragTypesToFind) {\n\t\tif (lowercaseDragTypes.indexOf(dragType.toLowerCase()) >= 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n//#region DND contributions\n\nexport interface IResourceStat {\n\tresource: URI;\n\tisDirectory?: boolean;\n}\n\nexport interface IDragAndDropContributionRegistry {\n\t/**\n\t * Registers a drag and drop contribution.\n\t */\n\tregister(contribution: IDragAndDropContribution): void;\n\n\t/**\n\t * Returns all registered drag and drop contributions.\n\t */\n\tgetAll(): IterableIterator<IDragAndDropContribution>;\n}\n\ninterface IDragAndDropContribution {\n\treadonly dataFormatKey: string;\n\tgetEditorInputs(data: string): IDraggedResourceEditorInput[];\n\tsetData(resources: IResourceStat[], event: DragMouseEvent | DragEvent): void;\n}\n\nclass DragAndDropContributionRegistry implements IDragAndDropContributionRegistry {\n\tprivate readonly _contributions = new Map<string, IDragAndDropContribution>();\n\n\tregister(contribution: IDragAndDropContribution): void {\n\t\tif (this._contributions.has(contribution.dataFormatKey)) {\n\t\t\tthrow new Error(`A drag and drop contributiont with key '${contribution.dataFormatKey}' was already registered.`);\n\t\t}\n\t\tthis._contributions.set(contribution.dataFormatKey, contribution);\n\t}\n\n\tgetAll(): IterableIterator<IDragAndDropContribution> {\n\t\treturn this._contributions.values();\n\t}\n}\n\nexport const Extensions = {\n\tDragAndDropContribution: 'workbench.contributions.dragAndDrop'\n};\n\nRegistry.add(Extensions.DragAndDropContribution, new DragAndDropContributionRegistry());\n\n//#endregion\n\n//#region DND Utilities\n\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer<T> {\n\n\tprivate static readonly INSTANCE = new LocalSelectionTransfer();\n\n\tprivate data?: T[];\n\tprivate proto?: T;\n\n\tprivate constructor() {\n\t\t// protect against external instantiation\n\t}\n\n\tstatic getInstance<T>(): LocalSelectionTransfer<T> {\n\t\treturn LocalSelectionTransfer.INSTANCE as LocalSelectionTransfer<T>;\n\t}\n\n\thasData(proto: T): boolean {\n\t\treturn proto && proto === this.proto;\n\t}\n\n\tclearData(proto: T): void {\n\t\tif (this.hasData(proto)) {\n\t\t\tthis.proto = undefined;\n\t\t\tthis.data = undefined;\n\t\t}\n\t}\n\n\tgetData(proto: T): T[] | undefined {\n\t\tif (this.hasData(proto)) {\n\t\t\treturn this.data;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tsetData(data: T[], proto: T): void {\n\t\tif (proto) {\n\t\t\tthis.data = data;\n\t\t\tthis.proto = proto;\n\t\t}\n\t}\n}\n\n//#endregion\n"]}