{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/driver/electron-sandbox/driver.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAWhG,IAAM,kBAAkB,GAAxB,MAAM,kBAAmB,SAAQ,aAAI;QAEpC,YACkB,CAAiC,EACpC,WAAgB,EACT,kBAAuB;YAE5C,KAAK,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC;YAJtB,MAAC,GAAD,CAAC,CAAgC;QAKnD,CAAC;QAEQ,eAAe;YACvB,OAAO,IAAI,CAAC,CAAC,CAAM,eAAe,EAAE,CAAC;QACtC,CAAC;KACD,CAAA;IAbK,kBAAkB;QAIrB,WAAA,WAAG,CAAA;QACH,WAAA,iBAAG,CAAA;OALA,kBAAkB,CAavB;IAED,SAAgB,IAAI,CAAiB,oBAAyB,EAAoB,MAAiC;QAClH,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,oBAAoB,CAAC,cAAc,CAAC,kBAAkB,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;IACpG,CAAC;IAFD,oBAEC","file":"driver.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserWindowDriver } from 'vs/platform/driver/browser/driver';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\n\ninterface INativeWindowDriverHelper {\n\texitApplication(): Promise<void>;\n}\n\nclass NativeWindowDriver extends BrowserWindowDriver {\n\n\tconstructor(\n\t\tprivate readonly helper: INativeWindowDriverHelper,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService\n\t) {\n\t\tsuper(fileService, environmentService);\n\t}\n\n\toverride exitApplication(): Promise<void> {\n\t\treturn this.helper.exitApplication();\n\t}\n}\n\nexport function registerWindowDriver(instantiationService: IInstantiationService, helper: INativeWindowDriverHelper): void {\n\tObject.assign(window, { driver: instantiationService.createInstance(NativeWindowDriver, helper) });\n}\n"]}