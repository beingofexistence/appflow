{"version":3,"sources":["vs/platform/windows/electron-main/windowImpl.ts"],"names":[],"mappings":"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","file":"windowImpl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, BrowserWindow, BrowserWindowConstructorOptions, Display, Event as ElectronEvent, nativeImage, NativeImage, Rectangle, screen, SegmentedControlSegment, systemPreferences, TouchBar, TouchBarSegmentedControl } from 'electron';\nimport { DeferredPromise, RunOnceScheduler, timeout } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\nimport { getMarks, mark } from 'vs/base/common/performance';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ISerializableCommandAction } from 'vs/platform/action/common/action';\nimport { IBackupMainService } from 'vs/platform/backup/electron-main/backup';\nimport { IConfigurationChangeEvent, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { isLaunchedFromCli } from 'vs/platform/environment/node/argvHelper';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IProtocolMainService } from 'vs/platform/protocol/electron-main/protocol';\nimport { resolveMarketplaceHeaders } from 'vs/platform/externalServices/common/marketplace';\nimport { IApplicationStorageMainService, IStorageMainService } from 'vs/platform/storage/electron-main/storageMainService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { IThemeMainService } from 'vs/platform/theme/electron-main/themeMainService';\nimport { getMenuBarVisibility, getTitleBarStyle, IFolderToOpen, INativeWindowConfiguration, IWindowSettings, IWorkspaceToOpen, MenuBarVisibility, useWindowControlsOverlay, WindowMinimumSize, zoomLevelToZoomFactor } from 'vs/platform/window/common/window';\nimport { IWindowsMainService, OpenContext } from 'vs/platform/windows/electron-main/windows';\nimport { ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier, toWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\nimport { IWorkspacesManagementMainService } from 'vs/platform/workspaces/electron-main/workspacesManagementMainService';\nimport { IWindowState, ICodeWindow, ILoadEvent, WindowMode, WindowError, LoadReason, defaultWindowState } from 'vs/platform/window/electron-main/window';\nimport { Color } from 'vs/base/common/color';\nimport { IPolicyService } from 'vs/platform/policy/common/policy';\nimport { IUserDataProfile } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { IUserDataProfilesMainService } from 'vs/platform/userDataProfile/electron-main/userDataProfile';\nimport { ILoggerMainService } from 'vs/platform/log/electron-main/loggerService';\nimport { firstOrDefault } from 'vs/base/common/arrays';\n\nexport interface IWindowCreationOptions {\n\treadonly state: IWindowState;\n\treadonly extensionDevelopmentPath?: string[];\n\treadonly isExtensionTestHost?: boolean;\n}\n\ninterface ITouchBarSegment extends SegmentedControlSegment {\n\treadonly id: string;\n}\n\ninterface ILoadOptions {\n\treadonly isReload?: boolean;\n\treadonly disableExtensions?: boolean;\n}\n\nconst enum ReadyState {\n\n\t/**\n\t * This window has not loaded anything yet\n\t * and this is the initial state of every\n\t * window.\n\t */\n\tNONE,\n\n\t/**\n\t * This window is navigating, either for the\n\t * first time or subsequent times.\n\t */\n\tNAVIGATING,\n\n\t/**\n\t * This window has finished loading and is ready\n\t * to forward IPC requests to the web contents.\n\t */\n\tREADY\n}\n\nexport class CodeWindow extends Disposable implements ICodeWindow {\n\n\tprivate static readonly windowControlHeightStateStorageKey = 'windowControlHeight';\n\n\t//#region Events\n\n\tprivate readonly _onWillLoad = this._register(new Emitter<ILoadEvent>());\n\treadonly onWillLoad = this._onWillLoad.event;\n\n\tprivate readonly _onDidSignalReady = this._register(new Emitter<void>());\n\treadonly onDidSignalReady = this._onDidSignalReady.event;\n\n\tprivate readonly _onDidTriggerSystemContextMenu = this._register(new Emitter<{ x: number; y: number }>());\n\treadonly onDidTriggerSystemContextMenu = this._onDidTriggerSystemContextMenu.event;\n\n\tprivate readonly _onDidClose = this._register(new Emitter<void>());\n\treadonly onDidClose = this._onDidClose.event;\n\n\tprivate readonly _onDidDestroy = this._register(new Emitter<void>());\n\treadonly onDidDestroy = this._onDidDestroy.event;\n\n\t//#endregion\n\n\n\t//#region Properties\n\n\tprivate _id: number;\n\tget id(): number { return this._id; }\n\n\tprivate _win: BrowserWindow;\n\tget win(): BrowserWindow | null { return this._win; }\n\n\tprivate _lastFocusTime = -1;\n\tget lastFocusTime(): number { return this._lastFocusTime; }\n\n\tget backupPath(): string | undefined { return this._config?.backupPath; }\n\n\tget openedWorkspace(): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined { return this._config?.workspace; }\n\n\tget profile(): IUserDataProfile | undefined {\n\t\tif (!this.config) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst profile = this.userDataProfilesService.profiles.find(profile => profile.id === this.config?.profiles.profile.id);\n\t\tif (this.isExtensionDevelopmentHost && profile) {\n\t\t\treturn profile;\n\t\t}\n\n\t\treturn this.userDataProfilesService.getProfileForWorkspace(this.config.workspace ?? toWorkspaceIdentifier(this.backupPath, this.isExtensionDevelopmentHost)) ?? this.userDataProfilesService.defaultProfile;\n\t}\n\n\tget remoteAuthority(): string | undefined { return this._config?.remoteAuthority; }\n\n\tprivate _config: INativeWindowConfiguration | undefined;\n\tget config(): INativeWindowConfiguration | undefined { return this._config; }\n\n\tget isExtensionDevelopmentHost(): boolean { return !!(this._config?.extensionDevelopmentPath); }\n\n\tget isExtensionTestHost(): boolean { return !!(this._config?.extensionTestsPath); }\n\n\tget isExtensionDevelopmentTestFromCli(): boolean { return this.isExtensionDevelopmentHost && this.isExtensionTestHost && !this._config?.debugId; }\n\n\t//#endregion\n\n\tprivate readonly windowState: IWindowState;\n\tprivate currentMenuBarVisibility: MenuBarVisibility | undefined;\n\n\t// TODO@electron workaround for https://github.com/electron/electron/issues/35360\n\t// where on macOS the window will report a wrong state for `isFullScreen()` while\n\t// transitioning into and out of native full screen.\n\tprivate transientIsNativeFullScreen: boolean | undefined = undefined;\n\tprivate joinNativeFullScreenTransition: DeferredPromise<void> | undefined = undefined;\n\n\tprivate representedFilename: string | undefined;\n\tprivate documentEdited: boolean | undefined;\n\n\tprivate readonly hasWindowControlOverlay: boolean = false;\n\n\tprivate readonly whenReadyCallbacks: { (window: ICodeWindow): void }[] = [];\n\n\tprivate readonly touchBarGroups: TouchBarSegmentedControl[] = [];\n\n\tprivate currentHttpProxy: string | undefined = undefined;\n\tprivate currentNoProxy: string | undefined = undefined;\n\n\tprivate readonly configObjectUrl = this._register(this.protocolMainService.createIPCObjectUrl<INativeWindowConfiguration>());\n\tprivate pendingLoadConfig: INativeWindowConfiguration | undefined;\n\tprivate wasLoaded = false;\n\n\tconstructor(\n\t\tconfig: IWindowCreationOptions,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@ILoggerMainService private readonly loggerMainService: ILoggerMainService,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@IPolicyService private readonly policyService: IPolicyService,\n\t\t@IUserDataProfilesMainService private readonly userDataProfilesService: IUserDataProfilesMainService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IApplicationStorageMainService private readonly applicationStorageMainService: IApplicationStorageMainService,\n\t\t@IStorageMainService private readonly storageMainService: IStorageMainService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IThemeMainService private readonly themeMainService: IThemeMainService,\n\t\t@IWorkspacesManagementMainService private readonly workspacesManagementMainService: IWorkspacesManagementMainService,\n\t\t@IBackupMainService private readonly backupMainService: IBackupMainService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IProtocolMainService private readonly protocolMainService: IProtocolMainService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IStateService private readonly stateService: IStateService\n\t) {\n\t\tsuper();\n\n\t\t//#region create browser window\n\t\t{\n\t\t\t// Load window state\n\t\t\tconst [state, hasMultipleDisplays] = this.restoreWindowState(config.state);\n\t\t\tthis.windowState = state;\n\t\t\tthis.logService.trace('window#ctor: using window state', state);\n\n\t\t\t// In case we are maximized or fullscreen, only show later\n\t\t\t// after the call to maximize/fullscreen (see below)\n\t\t\tconst isFullscreenOrMaximized = (this.windowState.mode === WindowMode.Maximized || this.windowState.mode === WindowMode.Fullscreen);\n\n\t\t\tconst windowSettings = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\n\t\t\tconst options: BrowserWindowConstructorOptions & { experimentalDarkMode: boolean } = {\n\t\t\t\twidth: this.windowState.width,\n\t\t\t\theight: this.windowState.height,\n\t\t\t\tx: this.windowState.x,\n\t\t\t\ty: this.windowState.y,\n\t\t\t\tbackgroundColor: this.themeMainService.getBackgroundColor(),\n\t\t\t\tminWidth: WindowMinimumSize.WIDTH,\n\t\t\t\tminHeight: WindowMinimumSize.HEIGHT,\n\t\t\t\tshow: !isFullscreenOrMaximized, // reduce flicker by showing later\n\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\twebPreferences: {\n\t\t\t\t\tpreload: FileAccess.asFileUri('vs/base/parts/sandbox/electron-sandbox/preload.js').fsPath,\n\t\t\t\t\tadditionalArguments: [`--vscode-window-config=${this.configObjectUrl.resource.toString()}`],\n\t\t\t\t\tv8CacheOptions: this.environmentMainService.useCodeCache ? 'bypassHeatCheck' : 'none',\n\t\t\t\t\tenableWebSQL: false,\n\t\t\t\t\tspellcheck: false,\n\t\t\t\t\tzoomFactor: zoomLevelToZoomFactor(windowSettings?.zoomLevel),\n\t\t\t\t\tautoplayPolicy: 'user-gesture-required',\n\t\t\t\t\t// Enable experimental css highlight api https://chromestatus.com/feature/5436441440026624\n\t\t\t\t\t// Refs https://github.com/microsoft/vscode/issues/140098\n\t\t\t\t\tenableBlinkFeatures: 'HighlightAPI',\n\t\t\t\t\tsandbox: true\n\t\t\t\t},\n\t\t\t\texperimentalDarkMode: true\n\t\t\t};\n\n\t\t\t// Apply icon to window\n\t\t\t// Linux: always\n\t\t\t// Windows: only when running out of sources, otherwise an icon is set by us on the executable\n\t\t\tif (isLinux) {\n\t\t\t\toptions.icon = join(this.environmentMainService.appRoot, 'resources/linux/code.png');\n\t\t\t} else if (isWindows && !this.environmentMainService.isBuilt) {\n\t\t\t\toptions.icon = join(this.environmentMainService.appRoot, 'resources/win32/code_150x150.png');\n\t\t\t}\n\n\t\t\tif (isMacintosh && !this.useNativeFullScreen()) {\n\t\t\t\toptions.fullscreenable = false; // enables simple fullscreen mode\n\t\t\t}\n\n\t\t\tif (isMacintosh) {\n\t\t\t\toptions.acceptFirstMouse = true; // enabled by default\n\n\t\t\t\tif (windowSettings?.clickThroughInactive === false) {\n\t\t\t\t\toptions.acceptFirstMouse = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst useNativeTabs = isMacintosh && windowSettings?.nativeTabs === true;\n\t\t\tif (useNativeTabs) {\n\t\t\t\toptions.tabbingIdentifier = this.productService.nameShort; // this opts in to sierra tabs\n\t\t\t}\n\n\t\t\tconst useCustomTitleStyle = getTitleBarStyle(this.configurationService) === 'custom';\n\t\t\tif (useCustomTitleStyle) {\n\t\t\t\toptions.titleBarStyle = 'hidden';\n\t\t\t\tif (!isMacintosh) {\n\t\t\t\t\toptions.frame = false;\n\t\t\t\t}\n\n\t\t\t\tif (useWindowControlsOverlay(this.configurationService)) {\n\n\t\t\t\t\t// This logic will not perfectly guess the right colors\n\t\t\t\t\t// to use on initialization, but prefer to keep things\n\t\t\t\t\t// simple as it is temporary and not noticeable\n\n\t\t\t\t\tconst titleBarColor = this.themeMainService.getWindowSplash()?.colorInfo.titleBarBackground ?? this.themeMainService.getBackgroundColor();\n\t\t\t\t\tconst symbolColor = Color.fromHex(titleBarColor).isDarker() ? '#FFFFFF' : '#000000';\n\n\t\t\t\t\toptions.titleBarOverlay = {\n\t\t\t\t\t\theight: 29, // the smallest size of the title bar on windows accounting for the border on windows 11\n\t\t\t\t\t\tcolor: titleBarColor,\n\t\t\t\t\t\tsymbolColor\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.hasWindowControlOverlay = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create the browser window\n\t\t\tmark('code/willCreateCodeBrowserWindow');\n\t\t\tthis._win = new BrowserWindow(options);\n\t\t\tmark('code/didCreateCodeBrowserWindow');\n\n\t\t\tthis._id = this._win.id;\n\n\t\t\tif (isMacintosh && useCustomTitleStyle) {\n\t\t\t\tthis._win.setSheetOffset(22); // offset dialogs by the height of the custom title bar if we have any\n\t\t\t}\n\n\t\t\t// Update the window controls immediately based on cached values\n\t\t\tif (useCustomTitleStyle && ((isWindows && useWindowControlsOverlay(this.configurationService)) || isMacintosh)) {\n\t\t\t\tconst cachedWindowControlHeight = this.stateService.getItem<number>((CodeWindow.windowControlHeightStateStorageKey));\n\t\t\t\tif (cachedWindowControlHeight) {\n\t\t\t\t\tthis.updateWindowControls({ height: cachedWindowControlHeight });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Windows Custom System Context Menu\n\t\t\t// See https://github.com/electron/electron/issues/24893\n\t\t\t//\n\t\t\t// The purpose of this is to allow for the context menu in the Windows Title Bar\n\t\t\t//\n\t\t\t// Currently, all mouse events in the title bar are captured by the OS\n\t\t\t// thus we need to capture them here with a window hook specific to Windows\n\t\t\t// and then forward them to the correct window.\n\t\t\tif (isWindows && useCustomTitleStyle) {\n\t\t\t\tconst WM_INITMENU = 0x0116; // https://docs.microsoft.com/en-us/windows/win32/menurc/wm-initmenu\n\n\t\t\t\t// This sets up a listener for the window hook. This is a Windows-only API provided by electron.\n\t\t\t\tthis._win.hookWindowMessage(WM_INITMENU, () => {\n\t\t\t\t\tconst [x, y] = this._win.getPosition();\n\t\t\t\t\tconst cursorPos = screen.getCursorScreenPoint();\n\t\t\t\t\tconst cx = cursorPos.x - x;\n\t\t\t\t\tconst cy = cursorPos.y - y;\n\n\t\t\t\t\t// In some cases, show the default system context menu\n\t\t\t\t\t// 1) The mouse position is not within the title bar\n\t\t\t\t\t// 2) The mouse position is within the title bar, but over the app icon\n\t\t\t\t\t// We do not know the exact title bar height but we make an estimate based on window height\n\t\t\t\t\tconst shouldTriggerDefaultSystemContextMenu = () => {\n\t\t\t\t\t\t// Use the custom context menu when over the title bar, but not over the app icon\n\t\t\t\t\t\t// The app icon is estimated to be 30px wide\n\t\t\t\t\t\t// The title bar is estimated to be the max of 35px and 15% of the window height\n\t\t\t\t\t\tif (cx > 30 && cy >= 0 && cy <= Math.max(this._win.getBounds().height * 0.15, 35)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t};\n\n\t\t\t\t\tif (!shouldTriggerDefaultSystemContextMenu()) {\n\t\t\t\t\t\t// This is necessary to make sure the native system context menu does not show up.\n\t\t\t\t\t\tthis._win.setEnabled(false);\n\t\t\t\t\t\tthis._win.setEnabled(true);\n\n\t\t\t\t\t\tthis._onDidTriggerSystemContextMenu.fire({ x: cx, y: cy });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// TODO@electron (Electron 4 regression): when running on multiple displays where the target display\n\t\t\t// to open the window has a larger resolution than the primary display, the window will not size\n\t\t\t// correctly unless we set the bounds again (https://github.com/microsoft/vscode/issues/74872)\n\t\t\t//\n\t\t\t// Extended to cover Windows as well as Mac (https://github.com/microsoft/vscode/issues/146499)\n\t\t\t//\n\t\t\t// However, when running with native tabs with multiple windows we cannot use this workaround\n\t\t\t// because there is a potential that the new window will be added as native tab instead of being\n\t\t\t// a window on its own. In that case calling setBounds() would cause https://github.com/microsoft/vscode/issues/75830\n\t\t\tif ((isMacintosh || isWindows) && hasMultipleDisplays && (!useNativeTabs || BrowserWindow.getAllWindows().length === 1)) {\n\t\t\t\tif ([this.windowState.width, this.windowState.height, this.windowState.x, this.windowState.y].every(value => typeof value === 'number')) {\n\t\t\t\t\tthis._win.setBounds({\n\t\t\t\t\t\twidth: this.windowState.width,\n\t\t\t\t\t\theight: this.windowState.height,\n\t\t\t\t\t\tx: this.windowState.x,\n\t\t\t\t\t\ty: this.windowState.y\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isFullscreenOrMaximized) {\n\t\t\t\tmark('code/willMaximizeCodeWindow');\n\n\t\t\t\t// this call may or may not show the window, depends\n\t\t\t\t// on the platform: currently on Windows and Linux will\n\t\t\t\t// show the window as active. To be on the safe side,\n\t\t\t\t// we show the window at the end of this block.\n\t\t\t\tthis._win.maximize();\n\n\t\t\t\tif (this.windowState.mode === WindowMode.Fullscreen) {\n\t\t\t\t\tthis.setFullScreen(true);\n\t\t\t\t}\n\n\t\t\t\t// to reduce flicker from the default window size\n\t\t\t\t// to maximize or fullscreen, we only show after\n\t\t\t\tthis._win.show();\n\t\t\t\tmark('code/didMaximizeCodeWindow');\n\t\t\t}\n\n\t\t\tthis._lastFocusTime = Date.now(); // since we show directly, we need to set the last focus time too\n\t\t}\n\t\t//#endregion\n\n\t\t// Open devtools if instructed from command line args\n\t\tif (this.environmentMainService.args['open-devtools'] === true) {\n\t\t\tthis._win.webContents.openDevTools();\n\t\t}\n\n\t\t// respect configured menu bar visibility\n\t\tthis.onConfigurationUpdated();\n\n\t\t// macOS: touch bar support\n\t\tthis.createTouchBar();\n\n\t\t// Eventing\n\t\tthis.registerListeners();\n\t}\n\n\tsetRepresentedFilename(filename: string): void {\n\t\tif (isMacintosh) {\n\t\t\tthis._win.setRepresentedFilename(filename);\n\t\t} else {\n\t\t\tthis.representedFilename = filename;\n\t\t}\n\t}\n\n\tgetRepresentedFilename(): string | undefined {\n\t\tif (isMacintosh) {\n\t\t\treturn this._win.getRepresentedFilename();\n\t\t}\n\n\t\treturn this.representedFilename;\n\t}\n\n\tsetDocumentEdited(edited: boolean): void {\n\t\tif (isMacintosh) {\n\t\t\tthis._win.setDocumentEdited(edited);\n\t\t}\n\n\t\tthis.documentEdited = edited;\n\t}\n\n\tisDocumentEdited(): boolean {\n\t\tif (isMacintosh) {\n\t\t\treturn this._win.isDocumentEdited();\n\t\t}\n\n\t\treturn !!this.documentEdited;\n\t}\n\n\tfocus(options?: { force: boolean }): void {\n\t\t// macOS: Electron > 7.x changed its behaviour to not\n\t\t// bring the application to the foreground when a window\n\t\t// is focused programmatically. Only via `app.focus` and\n\t\t// the option `steal: true` can you get the previous\n\t\t// behaviour back. The only reason to use this option is\n\t\t// when a window is getting focused while the application\n\t\t// is not in the foreground.\n\t\tif (isMacintosh && options?.force) {\n\t\t\tapp.focus({ steal: true });\n\t\t}\n\n\t\tif (!this._win) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._win.isMinimized()) {\n\t\t\tthis._win.restore();\n\t\t}\n\n\t\tthis._win.focus();\n\t}\n\n\tprivate readyState = ReadyState.NONE;\n\n\tsetReady(): void {\n\t\tthis.logService.trace(`window#load: window reported ready (id: ${this._id})`);\n\n\t\tthis.readyState = ReadyState.READY;\n\n\t\t// inform all waiting promises that we are ready now\n\t\twhile (this.whenReadyCallbacks.length) {\n\t\t\tthis.whenReadyCallbacks.pop()!(this);\n\t\t}\n\n\t\t// Events\n\t\tthis._onDidSignalReady.fire();\n\t}\n\n\tready(): Promise<ICodeWindow> {\n\t\treturn new Promise<ICodeWindow>(resolve => {\n\t\t\tif (this.isReady) {\n\t\t\t\treturn resolve(this);\n\t\t\t}\n\n\t\t\t// otherwise keep and call later when we are ready\n\t\t\tthis.whenReadyCallbacks.push(resolve);\n\t\t});\n\t}\n\n\tget isReady(): boolean {\n\t\treturn this.readyState === ReadyState.READY;\n\t}\n\n\tget whenClosedOrLoaded(): Promise<void> {\n\t\treturn new Promise<void>(resolve => {\n\n\t\t\tfunction handle() {\n\t\t\t\tcloseListener.dispose();\n\t\t\t\tloadListener.dispose();\n\n\t\t\t\tresolve();\n\t\t\t}\n\n\t\t\tconst closeListener = this.onDidClose(() => handle());\n\t\t\tconst loadListener = this.onWillLoad(() => handle());\n\t\t});\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Window error conditions to handle\n\t\tthis._win.on('unresponsive', () => this.onWindowError(WindowError.UNRESPONSIVE));\n\t\tthis._win.webContents.on('render-process-gone', (event, details) => this.onWindowError(WindowError.PROCESS_GONE, { ...details }));\n\t\tthis._win.webContents.on('did-fail-load', (event, exitCode, reason) => this.onWindowError(WindowError.LOAD, { reason, exitCode }));\n\n\t\t// Prevent windows/iframes from blocking the unload\n\t\t// through DOM events. We have our own logic for\n\t\t// unloading a window that should not be confused\n\t\t// with the DOM way.\n\t\t// (https://github.com/microsoft/vscode/issues/122736)\n\t\tthis._win.webContents.on('will-prevent-unload', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\t// Window close\n\t\tthis._win.on('closed', () => {\n\t\t\tthis._onDidClose.fire();\n\n\t\t\tthis.dispose();\n\t\t});\n\n\t\t// Remember that we loaded\n\t\tthis._win.webContents.on('did-finish-load', () => {\n\n\t\t\t// Associate properties from the load request if provided\n\t\t\tif (this.pendingLoadConfig) {\n\t\t\t\tthis._config = this.pendingLoadConfig;\n\n\t\t\t\tthis.pendingLoadConfig = undefined;\n\t\t\t}\n\t\t});\n\n\t\t// Window Focus\n\t\tthis._win.on('focus', () => {\n\t\t\tthis._lastFocusTime = Date.now();\n\t\t});\n\n\t\t// Window (Un)Maximize\n\t\tthis._win.on('maximize', (e: ElectronEvent) => {\n\t\t\tif (this._config) {\n\t\t\t\tthis._config.maximized = true;\n\t\t\t}\n\n\t\t\tapp.emit('browser-window-maximize', e, this._win);\n\t\t});\n\n\t\tthis._win.on('unmaximize', (e: ElectronEvent) => {\n\t\t\tif (this._config) {\n\t\t\t\tthis._config.maximized = false;\n\t\t\t}\n\n\t\t\tapp.emit('browser-window-unmaximize', e, this._win);\n\t\t});\n\n\t\t// Window Fullscreen\n\t\tthis._win.on('enter-full-screen', () => {\n\t\t\tthis.sendWhenReady('vscode:enterFullScreen', CancellationToken.None);\n\n\t\t\tthis.joinNativeFullScreenTransition?.complete();\n\t\t\tthis.joinNativeFullScreenTransition = undefined;\n\t\t});\n\n\t\tthis._win.on('leave-full-screen', () => {\n\t\t\tthis.sendWhenReady('vscode:leaveFullScreen', CancellationToken.None);\n\n\t\t\tthis.joinNativeFullScreenTransition?.complete();\n\t\t\tthis.joinNativeFullScreenTransition = undefined;\n\t\t});\n\n\t\t// Handle configuration changes\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(e)));\n\n\t\t// Handle Workspace events\n\t\tthis._register(this.workspacesManagementMainService.onDidDeleteUntitledWorkspace(e => this.onDidDeleteUntitledWorkspace(e)));\n\n\t\t// Inject headers when requests are incoming\n\t\tconst urls = ['https://marketplace.visualstudio.com/*', 'https://*.vsassets.io/*'];\n\t\tthis._win.webContents.session.webRequest.onBeforeSendHeaders({ urls }, async (details, cb) => {\n\t\t\tconst headers = await this.getMarketplaceHeaders();\n\n\t\t\tcb({ cancel: false, requestHeaders: Object.assign(details.requestHeaders, headers) });\n\t\t});\n\t}\n\n\tprivate marketplaceHeadersPromise: Promise<object> | undefined;\n\tprivate getMarketplaceHeaders(): Promise<object> {\n\t\tif (!this.marketplaceHeadersPromise) {\n\t\t\tthis.marketplaceHeadersPromise = resolveMarketplaceHeaders(\n\t\t\t\tthis.productService.version,\n\t\t\t\tthis.productService,\n\t\t\t\tthis.environmentMainService,\n\t\t\t\tthis.configurationService,\n\t\t\t\tthis.fileService,\n\t\t\t\tthis.applicationStorageMainService,\n\t\t\t\tthis.telemetryService);\n\t\t}\n\n\t\treturn this.marketplaceHeadersPromise;\n\t}\n\n\tprivate async onWindowError(error: WindowError.UNRESPONSIVE): Promise<void>;\n\tprivate async onWindowError(error: WindowError.PROCESS_GONE, details: { reason: string; exitCode: number }): Promise<void>;\n\tprivate async onWindowError(error: WindowError.LOAD, details: { reason: string; exitCode: number }): Promise<void>;\n\tprivate async onWindowError(type: WindowError, details?: { reason?: string; exitCode?: number }): Promise<void> {\n\n\t\tswitch (type) {\n\t\t\tcase WindowError.PROCESS_GONE:\n\t\t\t\tthis.logService.error(`CodeWindow: renderer process gone (reason: ${details?.reason || '<unknown>'}, code: ${details?.exitCode || '<unknown>'})`);\n\t\t\t\tbreak;\n\t\t\tcase WindowError.UNRESPONSIVE:\n\t\t\t\tthis.logService.error('CodeWindow: detected unresponsive');\n\t\t\t\tbreak;\n\t\t\tcase WindowError.LOAD:\n\t\t\t\tthis.logService.error(`CodeWindow: failed to load (reason: ${details?.reason || '<unknown>'}, code: ${details?.exitCode || '<unknown>'})`);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Telemetry\n\t\ttype WindowErrorClassification = {\n\t\t\ttype: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'The type of window error to understand the nature of the error better.' };\n\t\t\treason: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The reason of the window error to understand the nature of the error better.' };\n\t\t\tcode: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'The exit code of the window process to understand the nature of the error better' };\n\t\t\towner: 'bpasero';\n\t\t\tcomment: 'Provides insight into reasons the vscode window had an error.';\n\t\t};\n\t\ttype WindowErrorEvent = {\n\t\t\ttype: WindowError;\n\t\t\treason: string | undefined;\n\t\t\tcode: number | undefined;\n\t\t};\n\t\tthis.telemetryService.publicLog2<WindowErrorEvent, WindowErrorClassification>('windowerror', {\n\t\t\ttype,\n\t\t\treason: details?.reason,\n\t\t\tcode: details?.exitCode\n\t\t});\n\n\t\t// Inform User if non-recoverable\n\t\tswitch (type) {\n\t\t\tcase WindowError.UNRESPONSIVE:\n\t\t\tcase WindowError.PROCESS_GONE:\n\n\t\t\t\t// If we run extension tests from CLI, we want to signal\n\t\t\t\t// back this state to the test runner by exiting with a\n\t\t\t\t// non-zero exit code.\n\t\t\t\tif (this.isExtensionDevelopmentTestFromCli) {\n\t\t\t\t\tthis.lifecycleMainService.kill(1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// If we run smoke tests, want to proceed with an orderly\n\t\t\t\t// shutdown as much as possible by destroying the window\n\t\t\t\t// and then calling the normal `quit` routine.\n\t\t\t\tif (this.environmentMainService.args['enable-smoke-test-driver']) {\n\t\t\t\t\tawait this.destroyWindow(false, false);\n\t\t\t\t\tthis.lifecycleMainService.quit(); // still allow for an orderly shutdown\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Unresponsive\n\t\t\t\tif (type === WindowError.UNRESPONSIVE) {\n\t\t\t\t\tif (this.isExtensionDevelopmentHost || this.isExtensionTestHost || (this._win && this._win.webContents && this._win.webContents.isDevToolsOpened())) {\n\t\t\t\t\t\t// TODO@electron Workaround for https://github.com/microsoft/vscode/issues/56994\n\t\t\t\t\t\t// In certain cases the window can report unresponsiveness because a breakpoint was hit\n\t\t\t\t\t\t// and the process is stopped executing. The most typical cases are:\n\t\t\t\t\t\t// - devtools are opened and debugging happens\n\t\t\t\t\t\t// - window is an extensions development host that is being debugged\n\t\t\t\t\t\t// - window is an extension test development host that is being debugged\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Show Dialog\n\t\t\t\t\tconst { response, checkboxChecked } = await this.dialogMainService.showMessageBox({\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\tlocalize({ key: 'reopen', comment: ['&& denotes a mnemonic'] }, \"&&Reopen\"),\n\t\t\t\t\t\t\tlocalize({ key: 'close', comment: ['&& denotes a mnemonic'] }, \"&&Close\"),\n\t\t\t\t\t\t\tlocalize({ key: 'wait', comment: ['&& denotes a mnemonic'] }, \"&&Keep Waiting\")\n\t\t\t\t\t\t],\n\t\t\t\t\t\tmessage: localize('appStalled', \"The window is not responding\"),\n\t\t\t\t\t\tdetail: localize('appStalledDetail', \"You can reopen or close the window or keep waiting.\"),\n\t\t\t\t\t\tcheckboxLabel: this._config?.workspace ? localize('doNotRestoreEditors', \"Don't restore editors\") : undefined\n\t\t\t\t\t}, this._win);\n\n\t\t\t\t\t// Handle choice\n\t\t\t\t\tif (response !== 2 /* keep waiting */) {\n\t\t\t\t\t\tconst reopen = response === 0;\n\t\t\t\t\t\tawait this.destroyWindow(reopen, checkboxChecked);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Process gone\n\t\t\t\telse if (type === WindowError.PROCESS_GONE) {\n\t\t\t\t\tlet message: string;\n\t\t\t\t\tif (!details) {\n\t\t\t\t\t\tmessage = localize('appGone', \"The window terminated unexpectedly\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage = localize('appGoneDetails', \"The window terminated unexpectedly (reason: '{0}', code: '{1}')\", details.reason, details.exitCode ?? '<unknown>');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Show Dialog\n\t\t\t\t\tconst { response, checkboxChecked } = await this.dialogMainService.showMessageBox({\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\tthis._config?.workspace ? localize({ key: 'reopen', comment: ['&& denotes a mnemonic'] }, \"&&Reopen\") : localize({ key: 'newWindow', comment: ['&& denotes a mnemonic'] }, \"&&New Window\"),\n\t\t\t\t\t\t\tlocalize({ key: 'close', comment: ['&& denotes a mnemonic'] }, \"&&Close\")\n\t\t\t\t\t\t],\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tdetail: this._config?.workspace ?\n\t\t\t\t\t\t\tlocalize('appGoneDetailWorkspace', \"We are sorry for the inconvenience. You can reopen the window to continue where you left off.\") :\n\t\t\t\t\t\t\tlocalize('appGoneDetailEmptyWindow', \"We are sorry for the inconvenience. You can open a new empty window to start again.\"),\n\t\t\t\t\t\tcheckboxLabel: this._config?.workspace ? localize('doNotRestoreEditors', \"Don't restore editors\") : undefined\n\t\t\t\t\t}, this._win);\n\n\t\t\t\t\t// Handle choice\n\t\t\t\t\tconst reopen = response === 0;\n\t\t\t\t\tawait this.destroyWindow(reopen, checkboxChecked);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate async destroyWindow(reopen: boolean, skipRestoreEditors: boolean): Promise<void> {\n\t\tconst workspace = this._config?.workspace;\n\n\t\t//  check to discard editor state first\n\t\tif (skipRestoreEditors && workspace) {\n\t\t\ttry {\n\t\t\t\tconst workspaceStorage = this.storageMainService.workspaceStorage(workspace);\n\t\t\t\tawait workspaceStorage.init();\n\t\t\t\tworkspaceStorage.delete('memento/workbench.parts.editor');\n\t\t\t\tawait workspaceStorage.close();\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\n\t\t// 'close' event will not be fired on destroy(), so signal crash via explicit event\n\t\tthis._onDidDestroy.fire();\n\n\t\t// make sure to destroy the window as its renderer process is gone\n\t\tthis._win?.destroy();\n\n\t\t// ask the windows service to open a new fresh window if specified\n\t\tif (reopen && this._config) {\n\n\t\t\t// We have to reconstruct a openable from the current workspace\n\t\t\tlet uriToOpen: IWorkspaceToOpen | IFolderToOpen | undefined = undefined;\n\t\t\tlet forceEmpty = undefined;\n\t\t\tif (isSingleFolderWorkspaceIdentifier(workspace)) {\n\t\t\t\turiToOpen = { folderUri: workspace.uri };\n\t\t\t} else if (isWorkspaceIdentifier(workspace)) {\n\t\t\t\turiToOpen = { workspaceUri: workspace.configPath };\n\t\t\t} else {\n\t\t\t\tforceEmpty = true;\n\t\t\t}\n\n\t\t\t// Delegate to windows service\n\t\t\tconst window = firstOrDefault(await this.windowsMainService.open({\n\t\t\t\tcontext: OpenContext.API,\n\t\t\t\tuserEnv: this._config.userEnv,\n\t\t\t\tcli: {\n\t\t\t\t\t...this.environmentMainService.args,\n\t\t\t\t\t_: [] // we pass in the workspace to open explicitly via `urisToOpen`\n\t\t\t\t},\n\t\t\t\turisToOpen: uriToOpen ? [uriToOpen] : undefined,\n\t\t\t\tforceEmpty,\n\t\t\t\tforceNewWindow: true,\n\t\t\t\tremoteAuthority: this.remoteAuthority\n\t\t\t}));\n\t\t\twindow?.focus();\n\t\t}\n\t}\n\n\tprivate onDidDeleteUntitledWorkspace(workspace: IWorkspaceIdentifier): void {\n\n\t\t// Make sure to update our workspace config if we detect that it\n\t\t// was deleted\n\t\tif (this._config?.workspace?.id === workspace.id) {\n\t\t\tthis._config.workspace = undefined;\n\t\t}\n\t}\n\n\tprivate onConfigurationUpdated(e?: IConfigurationChangeEvent): void {\n\n\t\t// Menubar\n\t\tif (!e || e.affectsConfiguration('window.menuBarVisibility')) {\n\t\t\tconst newMenuBarVisibility = this.getMenuBarVisibility();\n\t\t\tif (newMenuBarVisibility !== this.currentMenuBarVisibility) {\n\t\t\t\tthis.currentMenuBarVisibility = newMenuBarVisibility;\n\t\t\t\tthis.setMenuBarVisibility(newMenuBarVisibility);\n\t\t\t}\n\t\t}\n\n\t\t// Proxy\n\t\tif (!e || e.affectsConfiguration('http.proxy')) {\n\t\t\tlet newHttpProxy = (this.configurationService.getValue<string>('http.proxy') || '').trim()\n\t\t\t\t|| (process.env['https_proxy'] || process.env['HTTPS_PROXY'] || process.env['http_proxy'] || process.env['HTTP_PROXY'] || '').trim() // Not standardized.\n\t\t\t\t|| undefined;\n\n\t\t\tif (newHttpProxy?.endsWith('/')) {\n\t\t\t\tnewHttpProxy = newHttpProxy.substr(0, newHttpProxy.length - 1);\n\t\t\t}\n\n\t\t\tconst newNoProxy = (process.env['no_proxy'] || process.env['NO_PROXY'] || '').trim() || undefined; // Not standardized.\n\t\t\tif ((newHttpProxy || '').indexOf('@') === -1 && (newHttpProxy !== this.currentHttpProxy || newNoProxy !== this.currentNoProxy)) {\n\t\t\t\tthis.currentHttpProxy = newHttpProxy;\n\t\t\t\tthis.currentNoProxy = newNoProxy;\n\n\t\t\t\tconst proxyRules = newHttpProxy || '';\n\t\t\t\tconst proxyBypassRules = newNoProxy ? `${newNoProxy},<local>` : '<local>';\n\t\t\t\tthis.logService.trace(`Setting proxy to '${proxyRules}', bypassing '${proxyBypassRules}'`);\n\t\t\t\tthis._win.webContents.session.setProxy({ proxyRules, proxyBypassRules, pacScript: '' });\n\t\t\t}\n\t\t}\n\t}\n\n\taddTabbedWindow(window: ICodeWindow): void {\n\t\tif (isMacintosh && window.win) {\n\t\t\tthis._win.addTabbedWindow(window.win);\n\t\t}\n\t}\n\n\tload(configuration: INativeWindowConfiguration, options: ILoadOptions = Object.create(null)): void {\n\t\tthis.logService.trace(`window#load: attempt to load window (id: ${this._id})`);\n\n\t\t// Clear Document Edited if needed\n\t\tif (this.isDocumentEdited()) {\n\t\t\tif (!options.isReload || !this.backupMainService.isHotExitEnabled()) {\n\t\t\t\tthis.setDocumentEdited(false);\n\t\t\t}\n\t\t}\n\n\t\t// Clear Title and Filename if needed\n\t\tif (!options.isReload) {\n\t\t\tif (this.getRepresentedFilename()) {\n\t\t\t\tthis.setRepresentedFilename('');\n\t\t\t}\n\n\t\t\tthis._win.setTitle(this.productService.nameLong);\n\t\t}\n\n\t\t// Update configuration values based on our window context\n\t\t// and set it into the config object URL for usage.\n\t\tthis.updateConfiguration(configuration, options);\n\n\t\t// If this is the first time the window is loaded, we associate the paths\n\t\t// directly with the window because we assume the loading will just work\n\t\tif (this.readyState === ReadyState.NONE) {\n\t\t\tthis._config = configuration;\n\t\t}\n\n\t\t// Otherwise, the window is currently showing a folder and if there is an\n\t\t// unload handler preventing the load, we cannot just associate the paths\n\t\t// because the loading might be vetoed. Instead we associate it later when\n\t\t// the window load event has fired.\n\t\telse {\n\t\t\tthis.pendingLoadConfig = configuration;\n\t\t}\n\n\t\t// Indicate we are navigting now\n\t\tthis.readyState = ReadyState.NAVIGATING;\n\n\t\t// Load URL\n\t\tthis._win.loadURL(FileAccess.asBrowserUri(`vs/code/electron-sandbox/workbench/workbench${this.environmentMainService.isBuilt ? '' : '-dev'}.html`).toString(true));\n\n\t\t// Remember that we did load\n\t\tconst wasLoaded = this.wasLoaded;\n\t\tthis.wasLoaded = true;\n\n\t\t// Make window visible if it did not open in N seconds because this indicates an error\n\t\t// Only do this when running out of sources and not when running tests\n\t\tif (!this.environmentMainService.isBuilt && !this.environmentMainService.extensionTestsLocationURI) {\n\t\t\tthis._register(new RunOnceScheduler(() => {\n\t\t\t\tif (this._win && !this._win.isVisible() && !this._win.isMinimized()) {\n\t\t\t\t\tthis._win.show();\n\t\t\t\t\tthis.focus({ force: true });\n\t\t\t\t\tthis._win.webContents.openDevTools();\n\t\t\t\t}\n\t\t\t}, 10000)).schedule();\n\t\t}\n\n\t\t// Event\n\t\tthis._onWillLoad.fire({ workspace: configuration.workspace, reason: options.isReload ? LoadReason.RELOAD : wasLoaded ? LoadReason.LOAD : LoadReason.INITIAL });\n\t}\n\n\tprivate updateConfiguration(configuration: INativeWindowConfiguration, options: ILoadOptions): void {\n\n\t\t// If this window was loaded before from the command line\n\t\t// (as indicated by VSCODE_CLI environment), make sure to\n\t\t// preserve that user environment in subsequent loads,\n\t\t// unless the new configuration context was also a CLI\n\t\t// (for https://github.com/microsoft/vscode/issues/108571)\n\t\t// Also, preserve the environment if we're loading from an\n\t\t// extension development host that had its environment set\n\t\t// (for https://github.com/microsoft/vscode/issues/123508)\n\t\tconst currentUserEnv = (this._config ?? this.pendingLoadConfig)?.userEnv;\n\t\tif (currentUserEnv) {\n\t\t\tconst shouldPreserveLaunchCliEnvironment = isLaunchedFromCli(currentUserEnv) && !isLaunchedFromCli(configuration.userEnv);\n\t\t\tconst shouldPreserveDebugEnvironmnet = this.isExtensionDevelopmentHost;\n\t\t\tif (shouldPreserveLaunchCliEnvironment || shouldPreserveDebugEnvironmnet) {\n\t\t\t\tconfiguration.userEnv = { ...currentUserEnv, ...configuration.userEnv }; // still allow to override certain environment as passed in\n\t\t\t}\n\t\t}\n\n\t\t// If named pipe was instantiated for the crashpad_handler process, reuse the same\n\t\t// pipe for new app instances connecting to the original app instance.\n\t\t// Ref: https://github.com/microsoft/vscode/issues/115874\n\t\tif (process.env['CHROME_CRASHPAD_PIPE_NAME']) {\n\t\t\tObject.assign(configuration.userEnv, {\n\t\t\t\tCHROME_CRASHPAD_PIPE_NAME: process.env['CHROME_CRASHPAD_PIPE_NAME']\n\t\t\t});\n\t\t}\n\n\t\t// Add disable-extensions to the config, but do not preserve it on currentConfig or\n\t\t// pendingLoadConfig so that it is applied only on this load\n\t\tif (options.disableExtensions !== undefined) {\n\t\t\tconfiguration['disable-extensions'] = options.disableExtensions;\n\t\t}\n\n\t\t// Update window related properties\n\t\tconfiguration.fullscreen = this.isFullScreen;\n\t\tconfiguration.maximized = this._win.isMaximized();\n\t\tconfiguration.partsSplash = this.themeMainService.getWindowSplash();\n\n\t\t// Update with latest perf marks\n\t\tmark('code/willOpenNewWindow');\n\t\tconfiguration.perfMarks = getMarks();\n\n\t\t// Update in config object URL for usage in renderer\n\t\tthis.configObjectUrl.update(configuration);\n\t}\n\n\tasync reload(cli?: NativeParsedArgs): Promise<void> {\n\n\t\t// Copy our current config for reuse\n\t\tconst configuration = Object.assign({}, this._config);\n\n\t\t// Validate workspace\n\t\tconfiguration.workspace = await this.validateWorkspaceBeforeReload(configuration);\n\n\t\t// Delete some properties we do not want during reload\n\t\tdelete configuration.filesToOpenOrCreate;\n\t\tdelete configuration.filesToDiff;\n\t\tdelete configuration.filesToMerge;\n\t\tdelete configuration.filesToWait;\n\n\t\t// Some configuration things get inherited if the window is being reloaded and we are\n\t\t// in extension development mode. These options are all development related.\n\t\tif (this.isExtensionDevelopmentHost && cli) {\n\t\t\tconfiguration.verbose = cli.verbose;\n\t\t\tconfiguration.debugId = cli.debugId;\n\t\t\tconfiguration.extensionEnvironment = cli.extensionEnvironment;\n\t\t\tconfiguration['inspect-extensions'] = cli['inspect-extensions'];\n\t\t\tconfiguration['inspect-brk-extensions'] = cli['inspect-brk-extensions'];\n\t\t\tconfiguration['extensions-dir'] = cli['extensions-dir'];\n\t\t}\n\n\t\tconfiguration.accessibilitySupport = app.isAccessibilitySupportEnabled();\n\t\tconfiguration.isInitialStartup = false; // since this is a reload\n\t\tconfiguration.policiesData = this.policyService.serialize(); // set policies data again\n\t\tconfiguration.continueOn = this.environmentMainService.continueOn;\n\t\tconfiguration.profiles = {\n\t\t\tall: this.userDataProfilesService.profiles,\n\t\t\tprofile: this.profile || this.userDataProfilesService.defaultProfile,\n\t\t\thome: this.userDataProfilesService.profilesHome\n\t\t};\n\t\tconfiguration.logLevel = this.loggerMainService.getLogLevel();\n\t\tconfiguration.loggers = {\n\t\t\twindow: this.loggerMainService.getRegisteredLoggers(this.id),\n\t\t\tglobal: this.loggerMainService.getRegisteredLoggers()\n\t\t};\n\n\t\t// Load config\n\t\tthis.load(configuration, { isReload: true, disableExtensions: cli?.['disable-extensions'] });\n\t}\n\n\tprivate async validateWorkspaceBeforeReload(configuration: INativeWindowConfiguration): Promise<IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined> {\n\n\t\t// Multi folder\n\t\tif (isWorkspaceIdentifier(configuration.workspace)) {\n\t\t\tconst configPath = configuration.workspace.configPath;\n\t\t\tif (configPath.scheme === Schemas.file) {\n\t\t\t\tconst workspaceExists = await this.fileService.exists(configPath);\n\t\t\t\tif (!workspaceExists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Single folder\n\t\telse if (isSingleFolderWorkspaceIdentifier(configuration.workspace)) {\n\t\t\tconst uri = configuration.workspace.uri;\n\t\t\tif (uri.scheme === Schemas.file) {\n\t\t\t\tconst folderExists = await this.fileService.exists(uri);\n\t\t\t\tif (!folderExists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Workspace is valid\n\t\treturn configuration.workspace;\n\t}\n\n\tserializeWindowState(): IWindowState {\n\t\tif (!this._win) {\n\t\t\treturn defaultWindowState();\n\t\t}\n\n\t\t// fullscreen gets special treatment\n\t\tif (this.isFullScreen) {\n\t\t\tlet display: Display | undefined;\n\t\t\ttry {\n\t\t\t\tdisplay = screen.getDisplayMatching(this.getBounds());\n\t\t\t} catch (error) {\n\t\t\t\t// Electron has weird conditions under which it throws errors\n\t\t\t\t// e.g. https://github.com/microsoft/vscode/issues/100334 when\n\t\t\t\t// large numbers are passed in\n\t\t\t}\n\n\t\t\tconst defaultState = defaultWindowState();\n\n\t\t\tconst res = {\n\t\t\t\tmode: WindowMode.Fullscreen,\n\t\t\t\tdisplay: display ? display.id : undefined,\n\n\t\t\t\t// Still carry over window dimensions from previous sessions\n\t\t\t\t// if we can compute it in fullscreen state.\n\t\t\t\t// does not seem possible in all cases on Linux for example\n\t\t\t\t// (https://github.com/microsoft/vscode/issues/58218) so we\n\t\t\t\t// fallback to the defaults in that case.\n\t\t\t\twidth: this.windowState.width || defaultState.width,\n\t\t\t\theight: this.windowState.height || defaultState.height,\n\t\t\t\tx: this.windowState.x || 0,\n\t\t\t\ty: this.windowState.y || 0\n\t\t\t};\n\n\t\t\treturn res;\n\t\t}\n\n\t\tconst state: IWindowState = Object.create(null);\n\t\tlet mode: WindowMode;\n\n\t\t// get window mode\n\t\tif (!isMacintosh && this._win.isMaximized()) {\n\t\t\tmode = WindowMode.Maximized;\n\t\t} else {\n\t\t\tmode = WindowMode.Normal;\n\t\t}\n\n\t\t// we don't want to save minimized state, only maximized or normal\n\t\tif (mode === WindowMode.Maximized) {\n\t\t\tstate.mode = WindowMode.Maximized;\n\t\t} else {\n\t\t\tstate.mode = WindowMode.Normal;\n\t\t}\n\n\t\t// only consider non-minimized window states\n\t\tif (mode === WindowMode.Normal || mode === WindowMode.Maximized) {\n\t\t\tlet bounds: Rectangle;\n\t\t\tif (mode === WindowMode.Normal) {\n\t\t\t\tbounds = this.getBounds();\n\t\t\t} else {\n\t\t\t\tbounds = this._win.getNormalBounds(); // make sure to persist the normal bounds when maximized to be able to restore them\n\t\t\t}\n\n\t\t\tstate.x = bounds.x;\n\t\t\tstate.y = bounds.y;\n\t\t\tstate.width = bounds.width;\n\t\t\tstate.height = bounds.height;\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tupdateWindowControls(options: { height?: number; backgroundColor?: string; foregroundColor?: string }): void {\n\n\t\t// Cache the height for speeds lookups on startup\n\t\tif (options.height) {\n\t\t\tthis.stateService.setItem((CodeWindow.windowControlHeightStateStorageKey), options.height);\n\t\t}\n\n\t\t// Windows: window control overlay (WCO)\n\t\tif (isWindows && this.hasWindowControlOverlay) {\n\t\t\tthis._win.setTitleBarOverlay({\n\t\t\t\tcolor: options.backgroundColor?.trim() === '' ? undefined : options.backgroundColor,\n\t\t\t\tsymbolColor: options.foregroundColor?.trim() === '' ? undefined : options.foregroundColor,\n\t\t\t\theight: options.height ? options.height - 1 : undefined // account for window border\n\t\t\t});\n\t\t}\n\n\t\t// macOS: traffic lights\n\t\telse if (isMacintosh && options.height !== undefined) {\n\t\t\tconst verticalOffset = (options.height - 15) / 2; // 15px is the height of the traffic lights\n\t\t\tif (!verticalOffset) {\n\t\t\t\tthis._win.setWindowButtonPosition(null);\n\t\t\t} else {\n\t\t\t\tthis._win.setWindowButtonPosition({ x: verticalOffset, y: verticalOffset });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate restoreWindowState(state?: IWindowState): [IWindowState, boolean? /* has multiple displays */] {\n\t\tmark('code/willRestoreCodeWindowState');\n\n\t\tlet hasMultipleDisplays = false;\n\t\tif (state) {\n\t\t\ttry {\n\t\t\t\tconst displays = screen.getAllDisplays();\n\t\t\t\thasMultipleDisplays = displays.length > 1;\n\n\t\t\t\tstate = this.validateWindowState(state, displays);\n\t\t\t} catch (err) {\n\t\t\t\tthis.logService.warn(`Unexpected error validating window state: ${err}\\n${err.stack}`); // somehow display API can be picky about the state to validate\n\t\t\t}\n\t\t}\n\n\t\tmark('code/didRestoreCodeWindowState');\n\n\t\treturn [state || defaultWindowState(), hasMultipleDisplays];\n\t}\n\n\tprivate validateWindowState(state: IWindowState, displays: Display[]): IWindowState | undefined {\n\t\tthis.logService.trace(`window#validateWindowState: validating window state on ${displays.length} display(s)`, state);\n\n\t\tif (\n\t\t\ttypeof state.x !== 'number' ||\n\t\t\ttypeof state.y !== 'number' ||\n\t\t\ttypeof state.width !== 'number' ||\n\t\t\ttypeof state.height !== 'number'\n\t\t) {\n\t\t\tthis.logService.trace('window#validateWindowState: unexpected type of state values');\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (state.width <= 0 || state.height <= 0) {\n\t\t\tthis.logService.trace('window#validateWindowState: unexpected negative values');\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Single Monitor: be strict about x/y positioning\n\t\t// macOS & Linux: these OS seem to be pretty good in ensuring that a window is never outside of it's bounds.\n\t\t// Windows: it is possible to have a window with a size that makes it fall out of the window. our strategy\n\t\t//          is to try as much as possible to keep the window in the monitor bounds. we are not as strict as\n\t\t//          macOS and Linux and allow the window to exceed the monitor bounds as long as the window is still\n\t\t//          some pixels (128) visible on the screen for the user to drag it back.\n\t\tif (displays.length === 1) {\n\t\t\tconst displayWorkingArea = this.getWorkingArea(displays[0]);\n\t\t\tif (displayWorkingArea) {\n\t\t\t\tthis.logService.trace('window#validateWindowState: 1 monitor working area', displayWorkingArea);\n\n\t\t\t\tfunction ensureStateInDisplayWorkingArea(): void {\n\t\t\t\t\tif (!state || typeof state.x !== 'number' || typeof state.y !== 'number' || !displayWorkingArea) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (state.x < displayWorkingArea.x) {\n\t\t\t\t\t\t// prevent window from falling out of the screen to the left\n\t\t\t\t\t\tstate.x = displayWorkingArea.x;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (state.y < displayWorkingArea.y) {\n\t\t\t\t\t\t// prevent window from falling out of the screen to the top\n\t\t\t\t\t\tstate.y = displayWorkingArea.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ensure state is not outside display working area (top, left)\n\t\t\t\tensureStateInDisplayWorkingArea();\n\n\t\t\t\tif (state.width > displayWorkingArea.width) {\n\t\t\t\t\t// prevent window from exceeding display bounds width\n\t\t\t\t\tstate.width = displayWorkingArea.width;\n\t\t\t\t}\n\n\t\t\t\tif (state.height > displayWorkingArea.height) {\n\t\t\t\t\t// prevent window from exceeding display bounds height\n\t\t\t\t\tstate.height = displayWorkingArea.height;\n\t\t\t\t}\n\n\t\t\t\tif (state.x > (displayWorkingArea.x + displayWorkingArea.width - 128)) {\n\t\t\t\t\t// prevent window from falling out of the screen to the right with\n\t\t\t\t\t// 128px margin by positioning the window to the far right edge of\n\t\t\t\t\t// the screen\n\t\t\t\t\tstate.x = displayWorkingArea.x + displayWorkingArea.width - state.width;\n\t\t\t\t}\n\n\t\t\t\tif (state.y > (displayWorkingArea.y + displayWorkingArea.height - 128)) {\n\t\t\t\t\t// prevent window from falling out of the screen to the bottom with\n\t\t\t\t\t// 128px margin by positioning the window to the far bottom edge of\n\t\t\t\t\t// the screen\n\t\t\t\t\tstate.y = displayWorkingArea.y + displayWorkingArea.height - state.height;\n\t\t\t\t}\n\n\t\t\t\t// again ensure state is not outside display working area\n\t\t\t\t// (it may have changed from the previous validation step)\n\t\t\t\tensureStateInDisplayWorkingArea();\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\t// Multi Montior (fullscreen): try to find the previously used display\n\t\tif (state.display && state.mode === WindowMode.Fullscreen) {\n\t\t\tconst display = displays.find(d => d.id === state.display);\n\t\t\tif (display && typeof display.bounds?.x === 'number' && typeof display.bounds?.y === 'number') {\n\t\t\t\tthis.logService.trace('window#validateWindowState: restoring fullscreen to previous display');\n\n\t\t\t\tconst defaults = defaultWindowState(WindowMode.Fullscreen); // make sure we have good values when the user restores the window\n\t\t\t\tdefaults.x = display.bounds.x; // carefull to use displays x/y position so that the window ends up on the correct monitor\n\t\t\t\tdefaults.y = display.bounds.y;\n\n\t\t\t\treturn defaults;\n\t\t\t}\n\t\t}\n\n\t\t// Multi Monitor (non-fullscreen): ensure window is within display bounds\n\t\tlet display: Display | undefined;\n\t\tlet displayWorkingArea: Rectangle | undefined;\n\t\ttry {\n\t\t\tdisplay = screen.getDisplayMatching({ x: state.x, y: state.y, width: state.width, height: state.height });\n\t\t\tdisplayWorkingArea = this.getWorkingArea(display);\n\t\t} catch (error) {\n\t\t\t// Electron has weird conditions under which it throws errors\n\t\t\t// e.g. https://github.com/microsoft/vscode/issues/100334 when\n\t\t\t// large numbers are passed in\n\t\t}\n\n\t\tif (\n\t\t\tdisplay &&\t\t\t\t\t\t\t\t\t\t\t\t\t\t// we have a display matching the desired bounds\n\t\t\tdisplayWorkingArea &&\t\t\t\t\t\t\t\t\t\t\t// we have valid working area bounds\n\t\t\tstate.x + state.width > displayWorkingArea.x &&\t\t\t\t\t// prevent window from falling out of the screen to the left\n\t\t\tstate.y + state.height > displayWorkingArea.y &&\t\t\t\t// prevent window from falling out of the screen to the top\n\t\t\tstate.x < displayWorkingArea.x + displayWorkingArea.width &&\t// prevent window from falling out of the screen to the right\n\t\t\tstate.y < displayWorkingArea.y + displayWorkingArea.height\t\t// prevent window from falling out of the screen to the bottom\n\t\t) {\n\t\t\tthis.logService.trace('window#validateWindowState: multi-monitor working area', displayWorkingArea);\n\n\t\t\treturn state;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getWorkingArea(display: Display): Rectangle | undefined {\n\n\t\t// Prefer the working area of the display to account for taskbars on the\n\t\t// desktop being positioned somewhere (https://github.com/microsoft/vscode/issues/50830).\n\t\t//\n\t\t// Linux X11 sessions sometimes report wrong display bounds, so we validate\n\t\t// the reported sizes are positive.\n\t\tif (display.workArea.width > 0 && display.workArea.height > 0) {\n\t\t\treturn display.workArea;\n\t\t}\n\n\t\tif (display.bounds.width > 0 && display.bounds.height > 0) {\n\t\t\treturn display.bounds;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetBounds(): Rectangle {\n\t\tconst [x, y] = this._win.getPosition();\n\t\tconst [width, height] = this._win.getSize();\n\n\t\treturn { x, y, width, height };\n\t}\n\n\ttoggleFullScreen(): void {\n\t\tthis.setFullScreen(!this.isFullScreen);\n\t}\n\n\tprivate setFullScreen(fullscreen: boolean): void {\n\n\t\t// Set fullscreen state\n\t\tif (this.useNativeFullScreen()) {\n\t\t\tthis.setNativeFullScreen(fullscreen);\n\t\t} else {\n\t\t\tthis.setSimpleFullScreen(fullscreen);\n\t\t}\n\n\t\t// Events\n\t\tthis.sendWhenReady(fullscreen ? 'vscode:enterFullScreen' : 'vscode:leaveFullScreen', CancellationToken.None);\n\n\t\t// Respect configured menu bar visibility or default to toggle if not set\n\t\tif (this.currentMenuBarVisibility) {\n\t\t\tthis.setMenuBarVisibility(this.currentMenuBarVisibility, false);\n\t\t}\n\t}\n\n\tget isFullScreen(): boolean {\n\t\tif (isMacintosh && typeof this.transientIsNativeFullScreen === 'boolean') {\n\t\t\treturn this.transientIsNativeFullScreen;\n\t\t}\n\n\t\treturn this._win.isFullScreen() || this._win.isSimpleFullScreen();\n\t}\n\n\tprivate setNativeFullScreen(fullscreen: boolean): void {\n\t\tif (this._win.isSimpleFullScreen()) {\n\t\t\tthis._win.setSimpleFullScreen(false);\n\t\t}\n\n\t\tthis.doSetNativeFullScreen(fullscreen);\n\t}\n\n\tprivate doSetNativeFullScreen(fullscreen: boolean): void {\n\t\tif (isMacintosh) {\n\t\t\tthis.transientIsNativeFullScreen = fullscreen;\n\t\t\tthis.joinNativeFullScreenTransition = new DeferredPromise<void>();\n\t\t\tPromise.race([\n\t\t\t\tthis.joinNativeFullScreenTransition.p,\n\t\t\t\ttimeout(1000) // still timeout after some time in case we miss the event\n\t\t\t]).finally(() => this.transientIsNativeFullScreen = undefined);\n\t\t}\n\n\t\tthis._win.setFullScreen(fullscreen);\n\t}\n\n\tprivate setSimpleFullScreen(fullscreen: boolean): void {\n\t\tif (this._win.isFullScreen()) {\n\t\t\tthis.doSetNativeFullScreen(false);\n\t\t}\n\n\t\tthis._win.setSimpleFullScreen(fullscreen);\n\t\tthis._win.webContents.focus(); // workaround issue where focus is not going into window\n\t}\n\n\tprivate useNativeFullScreen(): boolean {\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\t\tif (!windowConfig || typeof windowConfig.nativeFullScreen !== 'boolean') {\n\t\t\treturn true; // default\n\t\t}\n\n\t\tif (windowConfig.nativeTabs) {\n\t\t\treturn true; // https://github.com/electron/electron/issues/16142\n\t\t}\n\n\t\treturn windowConfig.nativeFullScreen !== false;\n\t}\n\n\tisMinimized(): boolean {\n\t\treturn this._win.isMinimized();\n\t}\n\n\tprivate getMenuBarVisibility(): MenuBarVisibility {\n\t\tlet menuBarVisibility = getMenuBarVisibility(this.configurationService);\n\t\tif (['visible', 'toggle', 'hidden'].indexOf(menuBarVisibility) < 0) {\n\t\t\tmenuBarVisibility = 'classic';\n\t\t}\n\n\t\treturn menuBarVisibility;\n\t}\n\n\tprivate setMenuBarVisibility(visibility: MenuBarVisibility, notify: boolean = true): void {\n\t\tif (isMacintosh) {\n\t\t\treturn; // ignore for macOS platform\n\t\t}\n\n\t\tif (visibility === 'toggle') {\n\t\t\tif (notify) {\n\t\t\t\tthis.send('vscode:showInfoMessage', localize('hiddenMenuBar', \"You can still access the menu bar by pressing the Alt-key.\"));\n\t\t\t}\n\t\t}\n\n\t\tif (visibility === 'hidden') {\n\t\t\t// for some weird reason that I have no explanation for, the menu bar is not hiding when calling\n\t\t\t// this without timeout (see https://github.com/microsoft/vscode/issues/19777). there seems to be\n\t\t\t// a timing issue with us opening the first window and the menu bar getting created. somehow the\n\t\t\t// fact that we want to hide the menu without being able to bring it back via Alt key makes Electron\n\t\t\t// still show the menu. Unable to reproduce from a simple Hello World application though...\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.doSetMenuBarVisibility(visibility);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.doSetMenuBarVisibility(visibility);\n\t\t}\n\t}\n\n\tprivate doSetMenuBarVisibility(visibility: MenuBarVisibility): void {\n\t\tconst isFullscreen = this.isFullScreen;\n\n\t\tswitch (visibility) {\n\t\t\tcase ('classic'):\n\t\t\t\tthis._win.setMenuBarVisibility(!isFullscreen);\n\t\t\t\tthis._win.autoHideMenuBar = isFullscreen;\n\t\t\t\tbreak;\n\n\t\t\tcase ('visible'):\n\t\t\t\tthis._win.setMenuBarVisibility(true);\n\t\t\t\tthis._win.autoHideMenuBar = false;\n\t\t\t\tbreak;\n\n\t\t\tcase ('toggle'):\n\t\t\t\tthis._win.setMenuBarVisibility(false);\n\t\t\t\tthis._win.autoHideMenuBar = true;\n\t\t\t\tbreak;\n\n\t\t\tcase ('hidden'):\n\t\t\t\tthis._win.setMenuBarVisibility(false);\n\t\t\t\tthis._win.autoHideMenuBar = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\thandleTitleDoubleClick(): void {\n\n\t\t// Respect system settings on mac with regards to title click on windows title\n\t\tif (isMacintosh) {\n\t\t\tconst action = systemPreferences.getUserDefault('AppleActionOnDoubleClick', 'string');\n\t\t\tswitch (action) {\n\t\t\t\tcase 'Minimize':\n\t\t\t\t\tthis._win.minimize();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'None':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Maximize':\n\t\t\t\tdefault:\n\t\t\t\t\tif (this._win.isMaximized()) {\n\t\t\t\t\t\tthis._win.unmaximize();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._win.maximize();\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Linux/Windows: just toggle maximize/minimized state\n\t\telse {\n\t\t\tif (this._win.isMaximized()) {\n\t\t\t\tthis._win.unmaximize();\n\t\t\t} else {\n\t\t\t\tthis._win.maximize();\n\t\t\t}\n\t\t}\n\t}\n\n\tclose(): void {\n\t\tthis._win?.close();\n\t}\n\n\tsendWhenReady(channel: string, token: CancellationToken, ...args: any[]): void {\n\t\tif (this.isReady) {\n\t\t\tthis.send(channel, ...args);\n\t\t} else {\n\t\t\tthis.ready().then(() => {\n\t\t\t\tif (!token.isCancellationRequested) {\n\t\t\t\t\tthis.send(channel, ...args);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsend(channel: string, ...args: any[]): void {\n\t\tif (this._win) {\n\t\t\tif (this._win.isDestroyed() || this._win.webContents.isDestroyed()) {\n\t\t\t\tthis.logService.warn(`Sending IPC message to channel '${channel}' for window that is destroyed`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis._win.webContents.send(channel, ...args);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.warn(`Error sending IPC message to channel '${channel}' of window ${this._id}: ${toErrorMessage(error)}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateTouchBar(groups: ISerializableCommandAction[][]): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // only supported on macOS\n\t\t}\n\n\t\t// Update segments for all groups. Setting the segments property\n\t\t// of the group directly prevents ugly flickering from happening\n\t\tthis.touchBarGroups.forEach((touchBarGroup, index) => {\n\t\t\tconst commands = groups[index];\n\t\t\ttouchBarGroup.segments = this.createTouchBarGroupSegments(commands);\n\t\t});\n\t}\n\n\tprivate createTouchBar(): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // only supported on macOS\n\t\t}\n\n\t\t// To avoid flickering, we try to reuse the touch bar group\n\t\t// as much as possible by creating a large number of groups\n\t\t// for reusing later.\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tconst groupTouchBar = this.createTouchBarGroup();\n\t\t\tthis.touchBarGroups.push(groupTouchBar);\n\t\t}\n\n\t\tthis._win.setTouchBar(new TouchBar({ items: this.touchBarGroups }));\n\t}\n\n\tprivate createTouchBarGroup(items: ISerializableCommandAction[] = []): TouchBarSegmentedControl {\n\n\t\t// Group Segments\n\t\tconst segments = this.createTouchBarGroupSegments(items);\n\n\t\t// Group Control\n\t\tconst control = new TouchBar.TouchBarSegmentedControl({\n\t\t\tsegments,\n\t\t\tmode: 'buttons',\n\t\t\tsegmentStyle: 'automatic',\n\t\t\tchange: (selectedIndex) => {\n\t\t\t\tthis.sendWhenReady('vscode:runAction', CancellationToken.None, { id: (control.segments[selectedIndex] as ITouchBarSegment).id, from: 'touchbar' });\n\t\t\t}\n\t\t});\n\n\t\treturn control;\n\t}\n\n\tprivate createTouchBarGroupSegments(items: ISerializableCommandAction[] = []): ITouchBarSegment[] {\n\t\tconst segments: ITouchBarSegment[] = items.map(item => {\n\t\t\tlet icon: NativeImage | undefined;\n\t\t\tif (item.icon && !ThemeIcon.isThemeIcon(item.icon) && item.icon?.dark?.scheme === Schemas.file) {\n\t\t\t\ticon = nativeImage.createFromPath(URI.revive(item.icon.dark).fsPath);\n\t\t\t\tif (icon.isEmpty()) {\n\t\t\t\t\ticon = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet title: string;\n\t\t\tif (typeof item.title === 'string') {\n\t\t\t\ttitle = item.title;\n\t\t\t} else {\n\t\t\t\ttitle = item.title.value;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tid: item.id,\n\t\t\t\tlabel: !icon ? title : undefined,\n\t\t\t\ticon\n\t\t\t};\n\t\t});\n\n\t\treturn segments;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\t// Deregister the loggers for this window\n\t\tthis.loggerMainService.deregisterLoggers(this.id);\n\n\t\tthis._win = null!; // Important to dereference the window object to allow for GC\n\t}\n}\n"]}