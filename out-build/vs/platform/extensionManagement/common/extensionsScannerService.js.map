{"version":3,"sources":["vs/platform/extensionManagement/common/extensionsScannerService.ts"],"names":[],"mappings":"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","file":"extensionsScannerService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from 'vs/base/common/arrays';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport * as objects from 'vs/base/common/objects';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { getNodeType, parse, ParseError } from 'vs/base/common/json';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { basename, isEqual, joinPath } from 'vs/base/common/resources';\nimport * as semver from 'vs/base/common/semver/semver';\nimport Severity from 'vs/base/common/severity';\nimport { isEmptyObject } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Metadata } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, computeTargetPlatform, ExtensionKey, getExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, ExtensionIdentifier, IExtensionManifest, TargetPlatform, IExtensionIdentifier, IRelaxedExtensionManifest, UNDEFINED_PUBLISHER, IExtensionDescription, BUILTIN_MANIFEST_CACHE_FILE, USER_MANIFEST_CACHE_FILE, ExtensionIdentifierMap } from 'vs/platform/extensions/common/extensions';\nimport { validateExtensionManifest } from 'vs/platform/extensions/common/extensionValidator';\nimport { FileOperationResult, IFileService, toFileOperationResult } from 'vs/platform/files/common/files';\nimport { createDecorator, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { revive } from 'vs/base/common/marshalling';\nimport { ExtensionsProfileScanningError, ExtensionsProfileScanningErrorCode, IExtensionsProfileScannerService, IProfileExtensionsScanOptions, IScannedProfileExtension } from 'vs/platform/extensionManagement/common/extensionsProfileScannerService';\nimport { IUserDataProfile, IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { localizeManifest } from 'vs/platform/extensionManagement/common/extensionNls';\n\nexport type IScannedExtensionManifest = IRelaxedExtensionManifest & { __metadata?: Metadata };\n\ninterface IRelaxedScannedExtension {\n\ttype: ExtensionType;\n\tisBuiltin: boolean;\n\tidentifier: IExtensionIdentifier;\n\tmanifest: IRelaxedExtensionManifest;\n\tlocation: URI;\n\ttargetPlatform: TargetPlatform;\n\tmetadata: Metadata | undefined;\n\tisValid: boolean;\n\tvalidations: readonly [Severity, string][];\n}\n\nexport type IScannedExtension = Readonly<IRelaxedScannedExtension> & { manifest: IExtensionManifest };\n\nexport interface Translations {\n\t[id: string]: string;\n}\n\nexport namespace Translations {\n\texport function equals(a: Translations, b: Translations): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tconst aKeys = Object.keys(a);\n\t\tconst bKeys: Set<string> = new Set<string>();\n\t\tfor (const key of Object.keys(b)) {\n\t\t\tbKeys.add(key);\n\t\t}\n\t\tif (aKeys.length !== bKeys.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (const key of aKeys) {\n\t\t\tif (a[key] !== b[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbKeys.delete(key);\n\t\t}\n\t\treturn bKeys.size === 0;\n\t}\n}\n\ninterface MessageBag {\n\t[key: string]: string | { message: string; comment: string[] };\n}\n\ninterface TranslationBundle {\n\tcontents: {\n\t\tpackage: MessageBag;\n\t};\n}\n\ninterface LocalizedMessages {\n\tvalues: MessageBag | undefined;\n\tdefault: URI | null;\n}\n\ninterface IBuiltInExtensionControl {\n\t[name: string]: 'marketplace' | 'disabled' | string;\n}\n\nexport type ScanOptions = {\n\treadonly profileLocation?: URI;\n\treadonly includeInvalid?: boolean;\n\treadonly includeAllVersions?: boolean;\n\treadonly includeUninstalled?: boolean;\n\treadonly checkControlFile?: boolean;\n\treadonly language?: string;\n\treadonly useCache?: boolean;\n};\n\nexport const IExtensionsScannerService = createDecorator<IExtensionsScannerService>('IExtensionsScannerService');\nexport interface IExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly systemExtensionsLocation: URI;\n\treadonly userExtensionsLocation: URI;\n\treadonly onDidChangeCache: Event<ExtensionType>;\n\n\tgetTargetPlatform(): Promise<TargetPlatform>;\n\n\tscanAllExtensions(systemScanOptions: ScanOptions, userScanOptions: ScanOptions, includeExtensionsUnderDev: boolean): Promise<IScannedExtension[]>;\n\tscanSystemExtensions(scanOptions: ScanOptions): Promise<IScannedExtension[]>;\n\tscanUserExtensions(scanOptions: ScanOptions): Promise<IScannedExtension[]>;\n\tscanExtensionsUnderDevelopment(scanOptions: ScanOptions, existingExtensions: IScannedExtension[]): Promise<IScannedExtension[]>;\n\tscanExistingExtension(extensionLocation: URI, extensionType: ExtensionType, scanOptions: ScanOptions): Promise<IScannedExtension | null>;\n\tscanOneOrMultipleExtensions(extensionLocation: URI, extensionType: ExtensionType, scanOptions: ScanOptions): Promise<IScannedExtension[]>;\n\n\tscanMetadata(extensionLocation: URI): Promise<Metadata | undefined>;\n\tupdateMetadata(extensionLocation: URI, metadata: Partial<Metadata>): Promise<void>;\n\tinitializeDefaultProfileExtensions(): Promise<void>;\n}\n\nexport abstract class AbstractExtensionsScannerService extends Disposable implements IExtensionsScannerService {\n\n\treadonly _serviceBrand: undefined;\n\n\tprotected abstract getTranslations(language: string): Promise<Translations>;\n\n\tprivate readonly _onDidChangeCache = this._register(new Emitter<ExtensionType>());\n\treadonly onDidChangeCache = this._onDidChangeCache.event;\n\n\tprivate readonly obsoleteFile = joinPath(this.userExtensionsLocation, '.obsolete');\n\tprivate readonly systemExtensionsCachedScanner = this._register(this.instantiationService.createInstance(CachedExtensionsScanner, this.currentProfile, this.obsoleteFile));\n\tprivate readonly userExtensionsCachedScanner = this._register(this.instantiationService.createInstance(CachedExtensionsScanner, this.currentProfile, this.obsoleteFile));\n\tprivate readonly extensionsScanner = this._register(this.instantiationService.createInstance(ExtensionsScanner, this.obsoleteFile));\n\n\tconstructor(\n\t\treadonly systemExtensionsLocation: URI,\n\t\treadonly userExtensionsLocation: URI,\n\t\tprivate readonly extensionsControlLocation: URI,\n\t\tprivate readonly currentProfile: IUserDataProfile,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IExtensionsProfileScannerService protected readonly extensionsProfileScannerService: IExtensionsProfileScannerService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@ILogService protected readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.systemExtensionsCachedScanner.onDidChangeCache(() => this._onDidChangeCache.fire(ExtensionType.System)));\n\t\tthis._register(this.userExtensionsCachedScanner.onDidChangeCache(() => this._onDidChangeCache.fire(ExtensionType.User)));\n\t}\n\n\tprivate _targetPlatformPromise: Promise<TargetPlatform> | undefined;\n\tgetTargetPlatform(): Promise<TargetPlatform> {\n\t\tif (!this._targetPlatformPromise) {\n\t\t\tthis._targetPlatformPromise = computeTargetPlatform(this.fileService, this.logService);\n\t\t}\n\t\treturn this._targetPlatformPromise;\n\t}\n\n\tasync scanAllExtensions(systemScanOptions: ScanOptions, userScanOptions: ScanOptions, includeExtensionsUnderDev: boolean): Promise<IScannedExtension[]> {\n\t\tconst [system, user] = await Promise.all([\n\t\t\tthis.scanSystemExtensions(systemScanOptions),\n\t\t\tthis.scanUserExtensions(userScanOptions),\n\t\t]);\n\t\tconst development = includeExtensionsUnderDev ? await this.scanExtensionsUnderDevelopment(systemScanOptions, [...system, ...user]) : [];\n\t\treturn this.dedupExtensions(system, user, development, await this.getTargetPlatform(), true);\n\t}\n\n\tasync scanSystemExtensions(scanOptions: ScanOptions): Promise<IScannedExtension[]> {\n\t\tconst promises: Promise<IRelaxedScannedExtension[]>[] = [];\n\t\tpromises.push(this.scanDefaultSystemExtensions(!!scanOptions.useCache, scanOptions.language));\n\t\tpromises.push(this.scanDevSystemExtensions(scanOptions.language, !!scanOptions.checkControlFile));\n\t\tconst [defaultSystemExtensions, devSystemExtensions] = await Promise.all(promises);\n\t\treturn this.applyScanOptions([...defaultSystemExtensions, ...devSystemExtensions], ExtensionType.System, scanOptions, false);\n\t}\n\n\tasync scanUserExtensions(scanOptions: ScanOptions): Promise<IScannedExtension[]> {\n\t\tconst location = scanOptions.profileLocation ?? this.userExtensionsLocation;\n\t\tthis.logService.trace('Started scanning user extensions', location);\n\t\tconst profileScanOptions: IProfileExtensionsScanOptions | undefined = this.uriIdentityService.extUri.isEqual(scanOptions.profileLocation, this.userDataProfilesService.defaultProfile.extensionsResource) ? { bailOutWhenFileNotFound: true } : undefined;\n\t\tconst extensionsScannerInput = await this.createExtensionScannerInput(location, !!scanOptions.profileLocation, ExtensionType.User, !scanOptions.includeUninstalled, scanOptions.language, true, profileScanOptions);\n\t\tconst extensionsScanner = scanOptions.useCache && !extensionsScannerInput.devMode && extensionsScannerInput.excludeObsolete ? this.userExtensionsCachedScanner : this.extensionsScanner;\n\t\tlet extensions: IRelaxedScannedExtension[];\n\t\ttry {\n\t\t\textensions = await extensionsScanner.scanExtensions(extensionsScannerInput);\n\t\t} catch (error) {\n\t\t\tif (error instanceof ExtensionsProfileScanningError && error.code === ExtensionsProfileScanningErrorCode.ERROR_PROFILE_NOT_FOUND) {\n\t\t\t\tawait this.doInitializeDefaultProfileExtensions();\n\t\t\t\textensions = await extensionsScanner.scanExtensions(extensionsScannerInput);\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\textensions = await this.applyScanOptions(extensions, ExtensionType.User, scanOptions, true);\n\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\treturn extensions;\n\t}\n\n\tasync scanExtensionsUnderDevelopment(scanOptions: ScanOptions, existingExtensions: IScannedExtension[]): Promise<IScannedExtension[]> {\n\t\tif (this.environmentService.isExtensionDevelopment && this.environmentService.extensionDevelopmentLocationURI) {\n\t\t\tconst extensions = (await Promise.all(this.environmentService.extensionDevelopmentLocationURI.filter(extLoc => extLoc.scheme === Schemas.file)\n\t\t\t\t.map(async extensionDevelopmentLocationURI => {\n\t\t\t\t\tconst input = await this.createExtensionScannerInput(extensionDevelopmentLocationURI, false, ExtensionType.User, true, scanOptions.language, false /* do not validate */, undefined);\n\t\t\t\t\tconst extensions = await this.extensionsScanner.scanOneOrMultipleExtensions(input);\n\t\t\t\t\treturn extensions.map(extension => {\n\t\t\t\t\t\t// Override the extension type from the existing extensions\n\t\t\t\t\t\textension.type = existingExtensions.find(e => areSameExtensions(e.identifier, extension.identifier))?.type ?? extension.type;\n\t\t\t\t\t\t// Validate the extension\n\t\t\t\t\t\treturn this.extensionsScanner.validate(extension, input);\n\t\t\t\t\t});\n\t\t\t\t})))\n\t\t\t\t.flat();\n\t\t\treturn this.applyScanOptions(extensions, 'development', scanOptions, true);\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync scanExistingExtension(extensionLocation: URI, extensionType: ExtensionType, scanOptions: ScanOptions): Promise<IScannedExtension | null> {\n\t\tconst extensionsScannerInput = await this.createExtensionScannerInput(extensionLocation, false, extensionType, true, scanOptions.language, true, undefined);\n\t\tconst extension = await this.extensionsScanner.scanExtension(extensionsScannerInput);\n\t\tif (!extension) {\n\t\t\treturn null;\n\t\t}\n\t\tif (!scanOptions.includeInvalid && !extension.isValid) {\n\t\t\treturn null;\n\t\t}\n\t\treturn extension;\n\t}\n\n\tasync scanOneOrMultipleExtensions(extensionLocation: URI, extensionType: ExtensionType, scanOptions: ScanOptions): Promise<IScannedExtension[]> {\n\t\tconst extensionsScannerInput = await this.createExtensionScannerInput(extensionLocation, false, extensionType, true, scanOptions.language, true, undefined);\n\t\tconst extensions = await this.extensionsScanner.scanOneOrMultipleExtensions(extensionsScannerInput);\n\t\treturn this.applyScanOptions(extensions, extensionType, scanOptions, true);\n\t}\n\n\tasync scanMetadata(extensionLocation: URI): Promise<Metadata | undefined> {\n\t\tconst manifestLocation = joinPath(extensionLocation, 'package.json');\n\t\tconst content = (await this.fileService.readFile(manifestLocation)).value.toString();\n\t\tconst manifest: IScannedExtensionManifest = JSON.parse(content);\n\t\treturn manifest.__metadata;\n\t}\n\n\tasync updateMetadata(extensionLocation: URI, metaData: Partial<Metadata>): Promise<void> {\n\t\tconst manifestLocation = joinPath(extensionLocation, 'package.json');\n\t\tconst content = (await this.fileService.readFile(manifestLocation)).value.toString();\n\t\tconst manifest: IScannedExtensionManifest = JSON.parse(content);\n\n\t\t// unset if false\n\t\tmetaData.isMachineScoped = metaData.isMachineScoped || undefined;\n\t\tmetaData.isBuiltin = metaData.isBuiltin || undefined;\n\t\tmanifest.__metadata = { ...manifest.__metadata, ...metaData };\n\n\t\tawait this.fileService.writeFile(joinPath(extensionLocation, 'package.json'), VSBuffer.fromString(JSON.stringify(manifest, null, '\\t')));\n\t}\n\n\tasync initializeDefaultProfileExtensions(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.extensionsProfileScannerService.scanProfileExtensions(this.userDataProfilesService.defaultProfile.extensionsResource, { bailOutWhenFileNotFound: true });\n\t\t} catch (error) {\n\t\t\tif (error instanceof ExtensionsProfileScanningError && error.code === ExtensionsProfileScanningErrorCode.ERROR_PROFILE_NOT_FOUND) {\n\t\t\t\tawait this.doInitializeDefaultProfileExtensions();\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate initializeDefaultProfileExtensionsPromise: Promise<void> | undefined = undefined;\n\tprivate async doInitializeDefaultProfileExtensions(): Promise<void> {\n\t\tif (!this.initializeDefaultProfileExtensionsPromise) {\n\t\t\tthis.initializeDefaultProfileExtensionsPromise = (async () => {\n\t\t\t\ttry {\n\t\t\t\t\tthis.logService.info('Started initializing default profile extensions in extensions installation folder.', this.userExtensionsLocation.toString());\n\t\t\t\t\tconst userExtensions = await this.scanUserExtensions({ includeInvalid: true });\n\t\t\t\t\tif (userExtensions.length) {\n\t\t\t\t\t\tawait this.extensionsProfileScannerService.addExtensionsToProfile(userExtensions.map(e => [e, e.metadata]), this.userDataProfilesService.defaultProfile.extensionsResource);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.fileService.createFile(this.userDataProfilesService.defaultProfile.extensionsResource, VSBuffer.fromString(JSON.stringify([])));\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tif (toFileOperationResult(error) !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\t\t\t\t\tthis.logService.warn('Failed to create default profile extensions manifest in extensions installation folder.', this.userExtensionsLocation.toString(), getErrorMessage(error));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.logService.info('Completed initializing default profile extensions in extensions installation folder.', this.userExtensionsLocation.toString());\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t} finally {\n\t\t\t\t\tthis.initializeDefaultProfileExtensionsPromise = undefined;\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\treturn this.initializeDefaultProfileExtensionsPromise;\n\t}\n\n\tprivate async applyScanOptions(extensions: IRelaxedScannedExtension[], type: ExtensionType | 'development', scanOptions: ScanOptions, pickLatest: boolean): Promise<IRelaxedScannedExtension[]> {\n\t\tif (!scanOptions.includeAllVersions) {\n\t\t\textensions = this.dedupExtensions(type === ExtensionType.System ? extensions : undefined, type === ExtensionType.User ? extensions : undefined, type === 'development' ? extensions : undefined, await this.getTargetPlatform(), pickLatest);\n\t\t}\n\t\tif (!scanOptions.includeInvalid) {\n\t\t\textensions = extensions.filter(extension => extension.isValid);\n\t\t}\n\t\treturn extensions.sort((a, b) => {\n\t\t\tconst aLastSegment = path.basename(a.location.fsPath);\n\t\t\tconst bLastSegment = path.basename(b.location.fsPath);\n\t\t\tif (aLastSegment < bLastSegment) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (aLastSegment > bLastSegment) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t}\n\n\tprivate dedupExtensions(system: IScannedExtension[] | undefined, user: IScannedExtension[] | undefined, development: IScannedExtension[] | undefined, targetPlatform: TargetPlatform, pickLatest: boolean): IScannedExtension[] {\n\t\tconst pick = (existing: IScannedExtension, extension: IScannedExtension, isDevelopment: boolean): boolean => {\n\t\t\tif (existing.isValid && !extension.isValid) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (existing.isValid === extension.isValid) {\n\t\t\t\tif (pickLatest && semver.gt(existing.manifest.version, extension.manifest.version)) {\n\t\t\t\t\tthis.logService.debug(`Skipping extension ${extension.location.path} with lower version ${extension.manifest.version} in favour of ${existing.location.path} with version ${existing.manifest.version}`);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (semver.eq(existing.manifest.version, extension.manifest.version)) {\n\t\t\t\t\tif (existing.type === ExtensionType.System) {\n\t\t\t\t\t\tthis.logService.debug(`Skipping extension ${extension.location.path} in favour of system extension ${existing.location.path} with same version`);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (existing.targetPlatform === targetPlatform) {\n\t\t\t\t\t\tthis.logService.debug(`Skipping extension ${extension.location.path} from different target platform ${extension.targetPlatform}`);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isDevelopment) {\n\t\t\t\tthis.logService.warn(`Overwriting user extension ${existing.location.path} with ${extension.location.path}.`);\n\t\t\t} else {\n\t\t\t\tthis.logService.debug(`Overwriting user extension ${existing.location.path} with ${extension.location.path}.`);\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tconst result = new ExtensionIdentifierMap<IScannedExtension>();\n\t\tsystem?.forEach((extension) => {\n\t\t\tconst existing = result.get(extension.identifier.id);\n\t\t\tif (!existing || pick(existing, extension, false)) {\n\t\t\t\tresult.set(extension.identifier.id, extension);\n\t\t\t}\n\t\t});\n\t\tuser?.forEach((extension) => {\n\t\t\tconst existing = result.get(extension.identifier.id);\n\t\t\tif (!existing && system && extension.type === ExtensionType.System) {\n\t\t\t\tthis.logService.debug(`Skipping obsolete system extension ${extension.location.path}.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!existing || pick(existing, extension, false)) {\n\t\t\t\tresult.set(extension.identifier.id, extension);\n\t\t\t}\n\t\t});\n\t\tdevelopment?.forEach(extension => {\n\t\t\tconst existing = result.get(extension.identifier.id);\n\t\t\tif (!existing || pick(existing, extension, true)) {\n\t\t\t\tresult.set(extension.identifier.id, extension);\n\t\t\t}\n\t\t\tresult.set(extension.identifier.id, extension);\n\t\t});\n\t\treturn [...result.values()];\n\t}\n\n\tprivate async scanDefaultSystemExtensions(useCache: boolean, language: string | undefined): Promise<IRelaxedScannedExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst extensionsScannerInput = await this.createExtensionScannerInput(this.systemExtensionsLocation, false, ExtensionType.System, true, language, true, undefined);\n\t\tconst extensionsScanner = useCache && !extensionsScannerInput.devMode ? this.systemExtensionsCachedScanner : this.extensionsScanner;\n\t\tconst result = await extensionsScanner.scanExtensions(extensionsScannerInput);\n\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\treturn result;\n\t}\n\n\tprivate async scanDevSystemExtensions(language: string | undefined, checkControlFile: boolean): Promise<IRelaxedScannedExtension[]> {\n\t\tconst devSystemExtensionsList = this.environmentService.isBuilt ? [] : this.productService.builtInExtensions;\n\t\tif (!devSystemExtensionsList?.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.logService.trace('Started scanning dev system extensions');\n\t\tconst builtinExtensionControl = checkControlFile ? await this.getBuiltInExtensionControl() : {};\n\t\tconst devSystemExtensionsLocations: URI[] = [];\n\t\tconst devSystemExtensionsLocation = URI.file(path.normalize(path.join(FileAccess.asFileUri('').fsPath, '..', '.build', 'builtInExtensions')));\n\t\tfor (const extension of devSystemExtensionsList) {\n\t\t\tconst controlState = builtinExtensionControl[extension.name] || 'marketplace';\n\t\t\tswitch (controlState) {\n\t\t\t\tcase 'disabled':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'marketplace':\n\t\t\t\t\tdevSystemExtensionsLocations.push(joinPath(devSystemExtensionsLocation, extension.name));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tdevSystemExtensionsLocations.push(URI.file(controlState));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst result = await Promise.all(devSystemExtensionsLocations.map(async location => this.extensionsScanner.scanExtension((await this.createExtensionScannerInput(location, false, ExtensionType.System, true, language, true, undefined)))));\n\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\treturn coalesce(result);\n\t}\n\n\tprivate async getBuiltInExtensionControl(): Promise<IBuiltInExtensionControl> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.extensionsControlLocation);\n\t\t\treturn JSON.parse(content.value.toString());\n\t\t} catch (error) {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate async createExtensionScannerInput(location: URI, profile: boolean, type: ExtensionType, excludeObsolete: boolean, language: string | undefined, validate: boolean, profileScanOptions: IProfileExtensionsScanOptions | undefined): Promise<ExtensionScannerInput> {\n\t\tconst translations = await this.getTranslations(language ?? platform.language);\n\t\tconst mtime = await this.getMtime(location);\n\t\tconst applicationExtensionsLocation = profile && !this.uriIdentityService.extUri.isEqual(location, this.userDataProfilesService.defaultProfile.extensionsResource) ? this.userDataProfilesService.defaultProfile.extensionsResource : undefined;\n\t\tconst applicationExtensionsLocationMtime = applicationExtensionsLocation ? await this.getMtime(applicationExtensionsLocation) : undefined;\n\t\treturn new ExtensionScannerInput(\n\t\t\tlocation,\n\t\t\tmtime,\n\t\t\tapplicationExtensionsLocation,\n\t\t\tapplicationExtensionsLocationMtime,\n\t\t\tprofile,\n\t\t\tprofileScanOptions,\n\t\t\ttype,\n\t\t\texcludeObsolete,\n\t\t\tvalidate,\n\t\t\tthis.productService.version,\n\t\t\tthis.productService.date,\n\t\t\tthis.productService.commit,\n\t\t\t!this.environmentService.isBuilt,\n\t\t\tlanguage,\n\t\t\ttranslations,\n\t\t);\n\t}\n\n\tprivate async getMtime(location: URI): Promise<number | undefined> {\n\t\ttry {\n\t\t\tconst stat = await this.fileService.stat(location);\n\t\t\tif (typeof stat.mtime === 'number') {\n\t\t\t\treturn stat.mtime;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t// That's ok...\n\t\t}\n\t\treturn undefined;\n\t}\n\n}\n\nexport class ExtensionScannerInput {\n\n\tconstructor(\n\t\tpublic readonly location: URI,\n\t\tpublic readonly mtime: number | undefined,\n\t\tpublic readonly applicationExtensionslocation: URI | undefined,\n\t\tpublic readonly applicationExtensionslocationMtime: number | undefined,\n\t\tpublic readonly profile: boolean,\n\t\tpublic readonly profileScanOptions: IProfileExtensionsScanOptions | undefined,\n\t\tpublic readonly type: ExtensionType,\n\t\tpublic readonly excludeObsolete: boolean,\n\t\tpublic readonly validate: boolean,\n\t\tpublic readonly productVersion: string,\n\t\tpublic readonly productDate: string | undefined,\n\t\tpublic readonly productCommit: string | undefined,\n\t\tpublic readonly devMode: boolean,\n\t\tpublic readonly language: string | undefined,\n\t\tpublic readonly translations: Translations\n\t) {\n\t\t// Keep empty!! (JSON.parse)\n\t}\n\n\tpublic static createNlsConfiguration(input: ExtensionScannerInput): NlsConfiguration {\n\t\treturn {\n\t\t\tlanguage: input.language,\n\t\t\tpseudo: input.language === 'pseudo',\n\t\t\tdevMode: input.devMode,\n\t\t\ttranslations: input.translations\n\t\t};\n\t}\n\n\tpublic static equals(a: ExtensionScannerInput, b: ExtensionScannerInput): boolean {\n\t\treturn (\n\t\t\tisEqual(a.location, b.location)\n\t\t\t&& a.mtime === b.mtime\n\t\t\t&& isEqual(a.applicationExtensionslocation, b.applicationExtensionslocation)\n\t\t\t&& a.applicationExtensionslocationMtime === b.applicationExtensionslocationMtime\n\t\t\t&& a.profile === b.profile\n\t\t\t&& objects.equals(a.profileScanOptions, b.profileScanOptions)\n\t\t\t&& a.type === b.type\n\t\t\t&& a.excludeObsolete === b.excludeObsolete\n\t\t\t&& a.validate === b.validate\n\t\t\t&& a.productVersion === b.productVersion\n\t\t\t&& a.productDate === b.productDate\n\t\t\t&& a.productCommit === b.productCommit\n\t\t\t&& a.devMode === b.devMode\n\t\t\t&& a.language === b.language\n\t\t\t&& Translations.equals(a.translations, b.translations)\n\t\t);\n\t}\n}\n\ntype NlsConfiguration = {\n\tlanguage: string | undefined;\n\tpseudo: boolean;\n\tdevMode: boolean;\n\ttranslations: Translations;\n};\n\nclass ExtensionsScanner extends Disposable {\n\n\tconstructor(\n\t\tprivate readonly obsoleteFile: URI,\n\t\t@IExtensionsProfileScannerService protected readonly extensionsProfileScannerService: IExtensionsProfileScannerService,\n\t\t@IUriIdentityService protected readonly uriIdentityService: IUriIdentityService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@ILogService protected readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync scanExtensions(input: ExtensionScannerInput): Promise<IRelaxedScannedExtension[]> {\n\t\tconst extensions = input.profile ? await this.scanExtensionsFromProfile(input) : await this.scanExtensionsFromLocation(input);\n\t\tlet obsolete: IStringDictionary<boolean> = {};\n\t\tif (input.excludeObsolete && input.type === ExtensionType.User) {\n\t\t\ttry {\n\t\t\t\tconst raw = (await this.fileService.readFile(this.obsoleteFile)).value.toString();\n\t\t\t\tobsolete = JSON.parse(raw);\n\t\t\t} catch (error) { /* ignore */ }\n\t\t}\n\t\treturn isEmptyObject(obsolete) ? extensions : extensions.filter(e => !obsolete[ExtensionKey.create(e).toString()]);\n\t}\n\n\tprivate async scanExtensionsFromLocation(input: ExtensionScannerInput): Promise<IRelaxedScannedExtension[]> {\n\t\tconst stat = await this.fileService.resolve(input.location);\n\t\tif (!stat.children?.length) {\n\t\t\treturn [];\n\t\t}\n\t\tconst extensions = await Promise.all<IRelaxedScannedExtension | null>(\n\t\t\tstat.children.map(async c => {\n\t\t\t\tif (!c.isDirectory) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t// Do not consider user extension folder starting with `.`\n\t\t\t\tif (input.type === ExtensionType.User && basename(c.resource).indexOf('.') === 0) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst extensionScannerInput = new ExtensionScannerInput(c.resource, input.mtime, input.applicationExtensionslocation, input.applicationExtensionslocationMtime, input.profile, input.profileScanOptions, input.type, input.excludeObsolete, input.validate, input.productVersion, input.productDate, input.productCommit, input.devMode, input.language, input.translations);\n\t\t\t\treturn this.scanExtension(extensionScannerInput);\n\t\t\t}));\n\t\treturn coalesce(extensions)\n\t\t\t// Sort: Make sure extensions are in the same order always. Helps cache invalidation even if the order changes.\n\t\t\t.sort((a, b) => a.location.path < b.location.path ? -1 : 1);\n\t}\n\n\tprivate async scanExtensionsFromProfile(input: ExtensionScannerInput): Promise<IRelaxedScannedExtension[]> {\n\t\tlet profileExtensions = await this.scanExtensionsFromProfileResource(input.location, () => true, input);\n\t\tif (input.applicationExtensionslocation && !this.uriIdentityService.extUri.isEqual(input.location, input.applicationExtensionslocation)) {\n\t\t\tprofileExtensions = profileExtensions.filter(e => !e.metadata?.isApplicationScoped);\n\t\t\tconst applicationExtensions = await this.scanExtensionsFromProfileResource(input.applicationExtensionslocation, (e) => !!e.metadata?.isBuiltin || !!e.metadata?.isApplicationScoped, input);\n\t\t\tprofileExtensions.push(...applicationExtensions);\n\t\t}\n\t\treturn profileExtensions;\n\t}\n\n\tprivate async scanExtensionsFromProfileResource(profileResource: URI, filter: (extensionInfo: IScannedProfileExtension) => boolean, input: ExtensionScannerInput): Promise<IRelaxedScannedExtension[]> {\n\t\tconst scannedProfileExtensions = await this.extensionsProfileScannerService.scanProfileExtensions(profileResource, input.profileScanOptions);\n\t\tif (!scannedProfileExtensions.length) {\n\t\t\treturn [];\n\t\t}\n\t\tconst extensions = await Promise.all<IRelaxedScannedExtension | null>(\n\t\t\tscannedProfileExtensions.map(async extensionInfo => {\n\t\t\t\tif (filter(extensionInfo)) {\n\t\t\t\t\tconst extensionScannerInput = new ExtensionScannerInput(extensionInfo.location, input.mtime, input.applicationExtensionslocation, input.applicationExtensionslocationMtime, input.profile, input.profileScanOptions, input.type, input.excludeObsolete, input.validate, input.productVersion, input.productDate, input.productCommit, input.devMode, input.language, input.translations);\n\t\t\t\t\treturn this.scanExtension(extensionScannerInput, extensionInfo.metadata);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}));\n\t\treturn coalesce(extensions);\n\t}\n\n\tasync scanOneOrMultipleExtensions(input: ExtensionScannerInput): Promise<IRelaxedScannedExtension[]> {\n\t\ttry {\n\t\t\tif (await this.fileService.exists(joinPath(input.location, 'package.json'))) {\n\t\t\t\tconst extension = await this.scanExtension(input);\n\t\t\t\treturn extension ? [extension] : [];\n\t\t\t} else {\n\t\t\t\treturn await this.scanExtensions(input);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`Error scanning extensions at ${input.location.path}:`, getErrorMessage(error));\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tasync scanExtension(input: ExtensionScannerInput, metadata?: Metadata): Promise<IRelaxedScannedExtension | null> {\n\t\ttry {\n\t\t\tlet manifest = await this.scanExtensionManifest(input.location);\n\t\t\tif (manifest) {\n\t\t\t\t// allow publisher to be undefined to make the initial extension authoring experience smoother\n\t\t\t\tif (!manifest.publisher) {\n\t\t\t\t\tmanifest.publisher = UNDEFINED_PUBLISHER;\n\t\t\t\t}\n\t\t\t\tmetadata = metadata ?? manifest.__metadata;\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\tconst id = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\t\t\tconst identifier = metadata?.id ? { id, uuid: metadata.id } : { id };\n\t\t\t\tconst type = metadata?.isSystem ? ExtensionType.System : input.type;\n\t\t\t\tconst isBuiltin = type === ExtensionType.System || !!metadata?.isBuiltin;\n\t\t\t\tmanifest = await this.translateManifest(input.location, manifest, ExtensionScannerInput.createNlsConfiguration(input));\n\t\t\t\tconst extension = {\n\t\t\t\t\ttype,\n\t\t\t\t\tidentifier,\n\t\t\t\t\tmanifest,\n\t\t\t\t\tlocation: input.location,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t\ttargetPlatform: metadata?.targetPlatform ?? TargetPlatform.UNDEFINED,\n\t\t\t\t\tmetadata,\n\t\t\t\t\tisValid: true,\n\t\t\t\t\tvalidations: []\n\t\t\t\t};\n\t\t\t\treturn input.validate ? this.validate(extension, input) : extension;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (input.type !== ExtensionType.System) {\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tvalidate(extension: IRelaxedScannedExtension, input: ExtensionScannerInput): IRelaxedScannedExtension {\n\t\tlet isValid = true;\n\t\tconst validations = validateExtensionManifest(input.productVersion, input.productDate, input.location, extension.manifest, extension.isBuiltin);\n\t\tfor (const [severity, message] of validations) {\n\t\t\tif (severity === Severity.Error) {\n\t\t\t\tisValid = false;\n\t\t\t\tthis.logService.error(this.formatMessage(input.location, message));\n\t\t\t}\n\t\t}\n\t\textension.isValid = isValid;\n\t\textension.validations = validations;\n\t\treturn extension;\n\t}\n\n\tasync scanExtensionManifest(extensionLocation: URI): Promise<IScannedExtensionManifest | null> {\n\t\tconst manifestLocation = joinPath(extensionLocation, 'package.json');\n\t\tlet content;\n\t\ttry {\n\t\t\tcontent = (await this.fileService.readFile(manifestLocation)).value.toString();\n\t\t} catch (error) {\n\t\t\tif (toFileOperationResult(error) !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('fileReadFail', \"Cannot read file {0}: {1}.\", manifestLocation.path, error.message)));\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tlet manifest: IScannedExtensionManifest;\n\t\ttry {\n\t\t\tmanifest = JSON.parse(content);\n\t\t} catch (err) {\n\t\t\t// invalid JSON, let's get good errors\n\t\t\tconst errors: ParseError[] = [];\n\t\t\tparse(content, errors);\n\t\t\tfor (const e of errors) {\n\t\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('jsonParseFail', \"Failed to parse {0}: [{1}, {2}] {3}.\", manifestLocation.path, e.offset, e.length, getParseErrorMessage(e.error))));\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (getNodeType(manifest) !== 'object') {\n\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('jsonParseInvalidType', \"Invalid manifest file {0}: Not an JSON object.\", manifestLocation.path)));\n\t\t\treturn null;\n\t\t}\n\t\treturn manifest;\n\t}\n\n\tprivate async translateManifest(extensionLocation: URI, extensionManifest: IExtensionManifest, nlsConfiguration: NlsConfiguration): Promise<IExtensionManifest> {\n\t\tconst localizedMessages = await this.getLocalizedMessages(extensionLocation, extensionManifest, nlsConfiguration);\n\t\tif (localizedMessages) {\n\t\t\ttry {\n\t\t\t\tconst errors: ParseError[] = [];\n\t\t\t\t// resolveOriginalMessageBundle returns null if localizedMessages.default === undefined;\n\t\t\t\tconst defaults = await this.resolveOriginalMessageBundle(localizedMessages.default, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\terrors.forEach((error) => {\n\t\t\t\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localizedMessages.default?.path, getParseErrorMessage(error.error))));\n\t\t\t\t\t});\n\t\t\t\t\treturn extensionManifest;\n\t\t\t\t} else if (getNodeType(localizedMessages) !== 'object') {\n\t\t\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localizedMessages.default?.path)));\n\t\t\t\t\treturn extensionManifest;\n\t\t\t\t}\n\t\t\t\tconst localized = localizedMessages.values || Object.create(null);\n\t\t\t\treturn localizeManifest(this.logService, extensionManifest, localized, defaults);\n\t\t\t} catch (error) {\n\t\t\t\t/*Ignore Error*/\n\t\t\t}\n\t\t}\n\t\treturn extensionManifest;\n\t}\n\n\tprivate async getLocalizedMessages(extensionLocation: URI, extensionManifest: IExtensionManifest, nlsConfiguration: NlsConfiguration): Promise<LocalizedMessages | undefined> {\n\t\tconst defaultPackageNLS = joinPath(extensionLocation, 'package.nls.json');\n\t\tconst reportErrors = (localized: URI | null, errors: ParseError[]): void => {\n\t\t\terrors.forEach((error) => {\n\t\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localized?.path, getParseErrorMessage(error.error))));\n\t\t\t});\n\t\t};\n\t\tconst reportInvalidFormat = (localized: URI | null): void => {\n\t\t\tthis.logService.error(this.formatMessage(extensionLocation, localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localized?.path)));\n\t\t};\n\n\t\tconst translationId = `${extensionManifest.publisher}.${extensionManifest.name}`;\n\t\tconst translationPath = nlsConfiguration.translations[translationId];\n\n\t\tif (translationPath) {\n\t\t\ttry {\n\t\t\t\tconst translationResource = URI.file(translationPath);\n\t\t\t\tconst content = (await this.fileService.readFile(translationResource)).value.toString();\n\t\t\t\tconst errors: ParseError[] = [];\n\t\t\t\tconst translationBundle: TranslationBundle = parse(content, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(translationResource, errors);\n\t\t\t\t\treturn { values: undefined, default: defaultPackageNLS };\n\t\t\t\t} else if (getNodeType(translationBundle) !== 'object') {\n\t\t\t\t\treportInvalidFormat(translationResource);\n\t\t\t\t\treturn { values: undefined, default: defaultPackageNLS };\n\t\t\t\t} else {\n\t\t\t\t\tconst values = translationBundle.contents ? translationBundle.contents.package : undefined;\n\t\t\t\t\treturn { values: values, default: defaultPackageNLS };\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\treturn { values: undefined, default: defaultPackageNLS };\n\t\t\t}\n\t\t} else {\n\t\t\tconst exists = await this.fileService.exists(defaultPackageNLS);\n\t\t\tif (!exists) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet messageBundle;\n\t\t\ttry {\n\t\t\t\tmessageBundle = await this.findMessageBundles(extensionLocation, nlsConfiguration);\n\t\t\t} catch (error) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (!messageBundle.localized) {\n\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst messageBundleContent = (await this.fileService.readFile(messageBundle.localized)).value.toString();\n\t\t\t\tconst errors: ParseError[] = [];\n\t\t\t\tconst messages: MessageBag = parse(messageBundleContent, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(messageBundle.localized, errors);\n\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t} else if (getNodeType(messages) !== 'object') {\n\t\t\t\t\treportInvalidFormat(messageBundle.localized);\n\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t}\n\t\t\t\treturn { values: messages, default: messageBundle.original };\n\t\t\t} catch (error) {\n\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Parses original message bundle, returns null if the original message bundle is null.\n\t */\n\tprivate async resolveOriginalMessageBundle(originalMessageBundle: URI | null, errors: ParseError[]): Promise<{ [key: string]: string } | undefined> {\n\t\tif (originalMessageBundle) {\n\t\t\ttry {\n\t\t\t\tconst originalBundleContent = (await this.fileService.readFile(originalMessageBundle)).value.toString();\n\t\t\t\treturn parse(originalBundleContent, errors);\n\t\t\t} catch (error) {\n\t\t\t\t/* Ignore Error */\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\t/**\n\t * Finds localized message bundle and the original (unlocalized) one.\n\t * If the localized file is not present, returns null for the original and marks original as localized.\n\t */\n\tprivate findMessageBundles(extensionLocation: URI, nlsConfiguration: NlsConfiguration): Promise<{ localized: URI; original: URI | null }> {\n\t\treturn new Promise<{ localized: URI; original: URI | null }>((c, e) => {\n\t\t\tconst loop = (locale: string): void => {\n\t\t\t\tconst toCheck = joinPath(extensionLocation, `package.nls.${locale}.json`);\n\t\t\t\tthis.fileService.exists(toCheck).then(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tc({ localized: toCheck, original: joinPath(extensionLocation, 'package.nls.json') });\n\t\t\t\t\t}\n\t\t\t\t\tconst index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tc({ localized: joinPath(extensionLocation, 'package.nls.json'), original: null });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\tloop(locale);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tif (nlsConfiguration.devMode || nlsConfiguration.pseudo || !nlsConfiguration.language) {\n\t\t\t\treturn c({ localized: joinPath(extensionLocation, 'package.nls.json'), original: null });\n\t\t\t}\n\t\t\tloop(nlsConfiguration.language);\n\t\t});\n\t}\n\n\tprivate formatMessage(extensionLocation: URI, message: string): string {\n\t\treturn `[${extensionLocation.path}]: ${message}`;\n\t}\n\n}\n\ninterface IExtensionCacheData {\n\tinput: ExtensionScannerInput;\n\tresult: IRelaxedScannedExtension[];\n}\n\nclass CachedExtensionsScanner extends ExtensionsScanner {\n\n\tprivate input: ExtensionScannerInput | undefined;\n\tprivate readonly cacheValidatorThrottler: ThrottledDelayer<void> = this._register(new ThrottledDelayer(3000));\n\n\tprivate readonly _onDidChangeCache = this._register(new Emitter<void>());\n\treadonly onDidChangeCache = this._onDidChangeCache.event;\n\n\tconstructor(\n\t\tprivate readonly currentProfile: IUserDataProfile,\n\t\tobsoleteFile: URI,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IExtensionsProfileScannerService extensionsProfileScannerService: IExtensionsProfileScannerService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(obsoleteFile, extensionsProfileScannerService, uriIdentityService, fileService, logService);\n\t}\n\n\toverride async scanExtensions(input: ExtensionScannerInput): Promise<IRelaxedScannedExtension[]> {\n\t\tconst cacheFile = this.getCacheFile(input);\n\t\tconst cacheContents = await this.readExtensionCache(cacheFile);\n\t\tthis.input = input;\n\t\tif (cacheContents && cacheContents.input && ExtensionScannerInput.equals(cacheContents.input, this.input)) {\n\t\t\tthis.logService.debug('Using cached extensions scan result', input.location.toString());\n\t\t\tthis.cacheValidatorThrottler.trigger(() => this.validateCache());\n\t\t\treturn cacheContents.result.map((extension) => {\n\t\t\t\t// revive URI object\n\t\t\t\textension.location = URI.revive(extension.location);\n\t\t\t\treturn extension;\n\t\t\t});\n\t\t}\n\t\tconst result = await super.scanExtensions(input);\n\t\tawait this.writeExtensionCache(cacheFile, { input, result });\n\t\treturn result;\n\t}\n\n\tprivate async readExtensionCache(cacheFile: URI): Promise<IExtensionCacheData | null> {\n\t\ttry {\n\t\t\tconst cacheRawContents = await this.fileService.readFile(cacheFile);\n\t\t\tconst extensionCacheData: IExtensionCacheData = JSON.parse(cacheRawContents.value.toString());\n\t\t\treturn { result: extensionCacheData.result, input: revive(extensionCacheData.input) };\n\t\t} catch (error) {\n\t\t\tthis.logService.debug('Error while reading the extension cache file:', cacheFile.path, getErrorMessage(error));\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async writeExtensionCache(cacheFile: URI, cacheContents: IExtensionCacheData): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.writeFile(cacheFile, VSBuffer.fromString(JSON.stringify(cacheContents)));\n\t\t} catch (error) {\n\t\t\tthis.logService.debug('Error while writing the extension cache file:', cacheFile.path, getErrorMessage(error));\n\t\t}\n\t}\n\n\tprivate async validateCache(): Promise<void> {\n\t\tif (!this.input) {\n\t\t\t// Input has been unset by the time we get here, so skip validation\n\t\t\treturn;\n\t\t}\n\n\t\tconst cacheFile = this.getCacheFile(this.input);\n\t\tconst cacheContents = await this.readExtensionCache(cacheFile);\n\t\tif (!cacheContents) {\n\t\t\t// Cache has been deleted by someone else, which is perfectly fine...\n\t\t\treturn;\n\t\t}\n\n\t\tconst actual = cacheContents.result;\n\t\tconst expected = JSON.parse(JSON.stringify(await super.scanExtensions(this.input)));\n\t\tif (objects.equals(expected, actual)) {\n\t\t\t// Cache is valid and running with it is perfectly fine...\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.logService.info('Invalidating Cache', actual, expected);\n\t\t\t// Cache is invalid, delete it\n\t\t\tawait this.fileService.del(cacheFile);\n\t\t\tthis._onDidChangeCache.fire();\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n\tprivate getCacheFile(input: ExtensionScannerInput): URI {\n\t\tconst profile = this.getProfile(input);\n\t\treturn this.uriIdentityService.extUri.joinPath(profile.cacheHome, input.type === ExtensionType.System ? BUILTIN_MANIFEST_CACHE_FILE : USER_MANIFEST_CACHE_FILE);\n\t}\n\n\tprivate getProfile(input: ExtensionScannerInput): IUserDataProfile {\n\t\tif (input.type === ExtensionType.System) {\n\t\t\treturn this.userDataProfilesService.defaultProfile;\n\t\t}\n\t\tif (!input.profile) {\n\t\t\treturn this.userDataProfilesService.defaultProfile;\n\t\t}\n\t\tif (this.uriIdentityService.extUri.isEqual(input.location, this.currentProfile.extensionsResource)) {\n\t\t\treturn this.currentProfile;\n\t\t}\n\t\treturn this.userDataProfilesService.profiles.find(p => this.uriIdentityService.extUri.isEqual(input.location, p.extensionsResource)) ?? this.currentProfile;\n\t}\n\n}\n\nexport function toExtensionDescription(extension: IScannedExtension, isUnderDevelopment: boolean): IExtensionDescription {\n\tconst id = getExtensionId(extension.manifest.publisher, extension.manifest.name);\n\treturn {\n\t\tid,\n\t\tidentifier: new ExtensionIdentifier(id),\n\t\tisBuiltin: extension.type === ExtensionType.System,\n\t\tisUserBuiltin: extension.type === ExtensionType.User && extension.isBuiltin,\n\t\tisUnderDevelopment,\n\t\textensionLocation: extension.location,\n\t\tuuid: extension.identifier.uuid,\n\t\ttargetPlatform: extension.targetPlatform,\n\t\t...extension.manifest,\n\t};\n}\n\nexport class NativeExtensionsScannerService extends AbstractExtensionsScannerService implements IExtensionsScannerService {\n\n\tprivate readonly translationsPromise: Promise<Translations>;\n\n\tconstructor(\n\t\tsystemExtensionsLocation: URI,\n\t\tuserExtensionsLocation: URI,\n\t\tuserHome: URI,\n\t\tcurrentProfile: IUserDataProfile,\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\textensionsProfileScannerService: IExtensionsProfileScannerService,\n\t\tfileService: IFileService,\n\t\tlogService: ILogService,\n\t\tenvironmentService: IEnvironmentService,\n\t\tproductService: IProductService,\n\t\turiIdentityService: IUriIdentityService,\n\t\tinstantiationService: IInstantiationService,\n\t) {\n\t\tsuper(\n\t\t\tsystemExtensionsLocation,\n\t\t\tuserExtensionsLocation,\n\t\t\tjoinPath(userHome, '.vscode-oss-dev', 'extensions', 'control.json'),\n\t\t\tcurrentProfile,\n\t\t\tuserDataProfilesService, extensionsProfileScannerService, fileService, logService, environmentService, productService, uriIdentityService, instantiationService);\n\t\tthis.translationsPromise = (async () => {\n\t\t\tif (platform.translationsConfigFile) {\n\t\t\t\ttry {\n\t\t\t\t\tconst content = await this.fileService.readFile(URI.file(platform.translationsConfigFile));\n\t\t\t\t\treturn JSON.parse(content.value.toString());\n\t\t\t\t} catch (err) { /* Ignore Error */ }\n\t\t\t}\n\t\t\treturn Object.create(null);\n\t\t})();\n\t}\n\n\tprotected getTranslations(language: string): Promise<Translations> {\n\t\treturn this.translationsPromise;\n\t}\n\n}\n"]}