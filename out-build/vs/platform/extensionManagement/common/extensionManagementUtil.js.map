{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts"],"names":[],"mappings":"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","file":"extensionManagementUtil.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { IExtensionIdentifier, IGalleryExtension, ILocalExtension, getTargetPlatform } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionIdentifier, IExtension, TargetPlatform, UNDEFINED_PUBLISHER } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { isLinux, platform } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { arch } from 'vs/base/common/process';\nimport { TelemetryTrustedValue } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nconst ExtensionKeyRegex = /^([^.]+\\..+)-(\\d+\\.\\d+\\.\\d+)(-(.+))?$/;\n\nexport class ExtensionKey {\n\n\tstatic create(extension: IExtension | IGalleryExtension): ExtensionKey {\n\t\tconst version = (extension as IExtension).manifest ? (extension as IExtension).manifest.version : (extension as IGalleryExtension).version;\n\t\tconst targetPlatform = (extension as IExtension).manifest ? (extension as IExtension).targetPlatform : (extension as IGalleryExtension).properties.targetPlatform;\n\t\treturn new ExtensionKey(extension.identifier, version, targetPlatform);\n\t}\n\n\tstatic parse(key: string): ExtensionKey | null {\n\t\tconst matches = ExtensionKeyRegex.exec(key);\n\t\treturn matches && matches[1] && matches[2] ? new ExtensionKey({ id: matches[1] }, matches[2], matches[4] as TargetPlatform || undefined) : null;\n\t}\n\n\treadonly id: string;\n\n\tconstructor(\n\t\tidentifier: IExtensionIdentifier,\n\t\treadonly version: string,\n\t\treadonly targetPlatform: TargetPlatform = TargetPlatform.UNDEFINED,\n\t) {\n\t\tthis.id = identifier.id;\n\t}\n\n\ttoString(): string {\n\t\treturn `${this.id}-${this.version}${this.targetPlatform !== TargetPlatform.UNDEFINED ? `-${this.targetPlatform}` : ''}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionKey)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this, o) && this.version === o.version && this.targetPlatform === o.targetPlatform;\n\t}\n}\n\nconst EXTENSION_IDENTIFIER_WITH_VERSION_REGEX = /^([^.]+\\..+)@((prerelease)|(\\d+\\.\\d+\\.\\d+(-.*)?))$/;\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_IDENTIFIER_WITH_VERSION_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\nexport function getExtensionId(publisher: string, name: string): string {\n\treturn `${publisher}.${name}`;\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string | undefined, name: string): string {\n\treturn adoptToGalleryExtensionId(getExtensionId(publisher ?? UNDEFINED_PUBLISHER, name));\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"isPreReleaseVersion\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"isSigned\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: new TelemetryTrustedValue(extension.identifier.id),\n\t\tname: new TelemetryTrustedValue(extension.name),\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tisPreReleaseVersion: extension.properties.isPreReleaseVersion,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\tisSigned: extension.isSigned,\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getExtensionDependencies(installedExtensions: ReadonlyArray<IExtension>, extension: IExtension): IExtension[] {\n\tconst dependencies: IExtension[] = [];\n\tconst extensions = extension.manifest.extensionDependencies?.slice(0) ?? [];\n\n\twhile (extensions.length) {\n\t\tconst id = extensions.shift();\n\n\t\tif (id && dependencies.every(e => !areSameExtensions(e.identifier, { id }))) {\n\t\t\tconst ext = installedExtensions.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (ext.length === 1) {\n\t\t\t\tdependencies.push(ext[0]);\n\t\t\t\textensions.push(...ext[0].manifest.extensionDependencies?.slice(0) ?? []);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dependencies;\n}\n\nasync function isAlpineLinux(fileService: IFileService, logService: ILogService): Promise<boolean> {\n\tif (!isLinux) {\n\t\treturn false;\n\t}\n\tlet content: string | undefined;\n\ttry {\n\t\tconst fileContent = await fileService.readFile(URI.file('/etc/os-release'));\n\t\tcontent = fileContent.value.toString();\n\t} catch (error) {\n\t\ttry {\n\t\t\tconst fileContent = await fileService.readFile(URI.file('/usr/lib/os-release'));\n\t\t\tcontent = fileContent.value.toString();\n\t\t} catch (error) {\n\t\t\t/* Ignore */\n\t\t\tlogService.debug(`Error while getting the os-release file.`, getErrorMessage(error));\n\t\t}\n\t}\n\treturn !!content && (content.match(/^ID=([^\\u001b\\r\\n]*)/m) || [])[1] === 'alpine';\n}\n\nexport async function computeTargetPlatform(fileService: IFileService, logService: ILogService): Promise<TargetPlatform> {\n\tconst alpineLinux = await isAlpineLinux(fileService, logService);\n\tconst targetPlatform = getTargetPlatform(alpineLinux ? 'alpine' : platform, arch);\n\tlogService.debug('ComputeTargetPlatform:', targetPlatform);\n\treturn targetPlatform;\n}\n"]}