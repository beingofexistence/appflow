{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/extensionManagement/common/extensionManagementIpc.ts"],"names":[],"mappings":"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","file":"extensionManagementIpc.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { DefaultURITransformer, IURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionIdentifier, IExtensionTipsService, IGalleryExtension, ILocalExtension, IExtensionsControlManifest, isTargetPlatformCompatible, InstallOptions, InstallVSIXOptions, UninstallOptions, Metadata, IExtensionManagementService, DidUninstallExtensionEvent, InstallExtensionEvent, InstallExtensionResult, UninstallExtensionEvent, InstallOperation, InstallExtensionInfo } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionType, IExtensionManifest, TargetPlatform } from 'vs/platform/extensions/common/extensions';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI;\nfunction transformIncomingURI(uri: UriComponents | undefined, transformer: IURITransformer | null): URI | undefined;\nfunction transformIncomingURI(uri: UriComponents | undefined, transformer: IURITransformer | null): URI | undefined {\n\treturn uri ? URI.revive(transformer ? transformer.transformIncoming(uri) : uri) : undefined;\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformIncomingOptions<O extends { profileLocation?: UriComponents }>(options: O | undefined, transformer: IURITransformer | null): O | undefined {\n\treturn options?.profileLocation ? transformAndReviveIncomingURIs(options, transformer ?? DefaultURITransformer) : options;\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtensions: Event<readonly InstallExtensionResult[]>;\n\tonUninstallExtension: Event<UninstallExtensionEvent>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\tonDidUpdateExtensionMetadata: Event<ILocalExtension>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtensions = Event.buffer(service.onDidInstallExtensions, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t\tthis.onDidUpdateExtensionMetadata = Event.buffer(service.onDidUpdateExtensionMetadata, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': {\n\t\t\t\treturn Event.map<InstallExtensionEvent, InstallExtensionEvent>(this.onInstallExtension, e => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...e,\n\t\t\t\t\t\tprofileLocation: e.profileLocation ? transformOutgoingURI(e.profileLocation, uriTransformer) : e.profileLocation\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\tcase 'onDidInstallExtensions': {\n\t\t\t\treturn Event.map<readonly InstallExtensionResult[], readonly InstallExtensionResult[]>(this.onDidInstallExtensions, results =>\n\t\t\t\t\tresults.map(i => ({\n\t\t\t\t\t\t...i,\n\t\t\t\t\t\tlocal: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local,\n\t\t\t\t\t\tprofileLocation: i.profileLocation ? transformOutgoingURI(i.profileLocation, uriTransformer) : i.profileLocation\n\t\t\t\t\t})));\n\t\t\t}\n\t\t\tcase 'onUninstallExtension': {\n\t\t\t\treturn Event.map<UninstallExtensionEvent, UninstallExtensionEvent>(this.onUninstallExtension, e => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...e,\n\t\t\t\t\t\tprofileLocation: e.profileLocation ? transformOutgoingURI(e.profileLocation, uriTransformer) : e.profileLocation\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\tcase 'onDidUninstallExtension': {\n\t\t\t\treturn Event.map<DidUninstallExtensionEvent, DidUninstallExtensionEvent>(this.onDidUninstallExtension, e => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...e,\n\t\t\t\t\t\tprofileLocation: e.profileLocation ? transformOutgoingURI(e.profileLocation, uriTransformer) : e.profileLocation\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\tcase 'onDidUpdateExtensionMetadata': {\n\t\t\t\treturn Event.map<ILocalExtension, ILocalExtension>(this.onDidUpdateExtensionMetadata, e => transformOutgoingExtension(e, uriTransformer));\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tasync call(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': {\n\t\t\t\tconst extension = transformIncomingExtension(args[0], uriTransformer);\n\t\t\t\tconst uri = await this.service.zip(extension);\n\t\t\t\treturn transformOutgoingURI(uri, uriTransformer);\n\t\t\t}\n\t\t\tcase 'unzip': {\n\t\t\t\treturn this.service.unzip(transformIncomingURI(args[0], uriTransformer));\n\t\t\t}\n\t\t\tcase 'install': {\n\t\t\t\treturn this.service.install(transformIncomingURI(args[0], uriTransformer), transformIncomingOptions(args[1], uriTransformer));\n\t\t\t}\n\t\t\tcase 'installFromLocation': {\n\t\t\t\treturn this.service.installFromLocation(transformIncomingURI(args[0], uriTransformer), transformIncomingURI(args[1], uriTransformer));\n\t\t\t}\n\t\t\tcase 'installExtensionsFromProfile': {\n\t\t\t\treturn this.service.installExtensionsFromProfile(args[0], transformIncomingURI(args[1], uriTransformer), transformIncomingURI(args[2], uriTransformer));\n\t\t\t}\n\t\t\tcase 'getManifest': {\n\t\t\t\treturn this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\t}\n\t\t\tcase 'getTargetPlatform': {\n\t\t\t\treturn this.service.getTargetPlatform();\n\t\t\t}\n\t\t\tcase 'canInstall': {\n\t\t\t\treturn this.service.canInstall(args[0]);\n\t\t\t}\n\t\t\tcase 'installFromGallery': {\n\t\t\t\treturn this.service.installFromGallery(args[0], transformIncomingOptions(args[1], uriTransformer));\n\t\t\t}\n\t\t\tcase 'installGalleryExtensions': {\n\t\t\t\tconst arg: InstallExtensionInfo[] = args[0];\n\t\t\t\treturn this.service.installGalleryExtensions(arg.map(({ extension, options }) => ({ extension, options: transformIncomingOptions(options, uriTransformer) ?? {} })));\n\t\t\t}\n\t\t\tcase 'uninstall': {\n\t\t\t\treturn this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), transformIncomingOptions(args[1], uriTransformer));\n\t\t\t}\n\t\t\tcase 'reinstallFromGallery': {\n\t\t\t\treturn this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\t}\n\t\t\tcase 'getInstalled': {\n\t\t\t\tconst extensions = await this.service.getInstalled(args[0], transformIncomingURI(args[1], uriTransformer));\n\t\t\t\treturn extensions.map(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\t}\n\t\t\tcase 'toggleAppliationScope': {\n\t\t\t\tconst extension = await this.service.toggleAppliationScope(transformIncomingExtension(args[0], uriTransformer), transformIncomingURI(args[1], uriTransformer));\n\t\t\t\treturn transformOutgoingExtension(extension, uriTransformer);\n\t\t\t}\n\t\t\tcase 'copyExtensions': {\n\t\t\t\treturn this.service.copyExtensions(transformIncomingURI(args[0], uriTransformer), transformIncomingURI(args[1], uriTransformer));\n\t\t\t}\n\t\t\tcase 'updateMetadata': {\n\t\t\t\tconst e = await this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1], transformIncomingURI(args[2], uriTransformer));\n\t\t\t\treturn transformOutgoingExtension(e, uriTransformer);\n\t\t\t}\n\t\t\tcase 'getExtensionsControlManifest': {\n\t\t\t\treturn this.service.getExtensionsControlManifest();\n\t\t\t}\n\t\t\tcase 'download': {\n\t\t\t\treturn this.service.download(args[0], args[1], args[2]);\n\t\t\t}\n\t\t\tcase 'cleanUp': {\n\t\t\t\treturn this.service.cleanUp();\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport type ExtensionEventResult = InstallExtensionEvent | InstallExtensionResult | UninstallExtensionEvent | DidUninstallExtensionEvent;\n\nexport class ExtensionManagementChannelClient extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\tget onInstallExtension() { return this._onInstallExtension.event; }\n\n\tprivate readonly _onDidInstallExtensions = this._register(new Emitter<readonly InstallExtensionResult[]>());\n\tget onDidInstallExtensions() { return this._onDidInstallExtensions.event; }\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<UninstallExtensionEvent>());\n\tget onUninstallExtension() { return this._onUninstallExtension.event; }\n\n\tprivate readonly _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tget onDidUninstallExtension() { return this._onDidUninstallExtension.event; }\n\n\tprivate readonly _onDidUpdateExtensionMetadata = this._register(new Emitter<ILocalExtension>());\n\tget onDidUpdateExtensionMetadata() { return this._onDidUpdateExtensionMetadata.event; }\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tsuper();\n\t\tthis._register(this.channel.listen<InstallExtensionEvent>('onInstallExtension')(e => this.fireEvent(this._onInstallExtension, { ...e, source: this.isUriComponents(e.source) ? URI.revive(e.source) : e.source, profileLocation: URI.revive(e.profileLocation) })));\n\t\tthis._register(this.channel.listen<readonly InstallExtensionResult[]>('onDidInstallExtensions')(results => this.fireEvent(this._onDidInstallExtensions, results.map(e => ({ ...e, local: e.local ? transformIncomingExtension(e.local, null) : e.local, source: this.isUriComponents(e.source) ? URI.revive(e.source) : e.source, profileLocation: URI.revive(e.profileLocation) })))));\n\t\tthis._register(this.channel.listen<UninstallExtensionEvent>('onUninstallExtension')(e => this.fireEvent(this._onUninstallExtension, { ...e, profileLocation: URI.revive(e.profileLocation) })));\n\t\tthis._register(this.channel.listen<DidUninstallExtensionEvent>('onDidUninstallExtension')(e => this.fireEvent(this._onDidUninstallExtension, { ...e, profileLocation: URI.revive(e.profileLocation) })));\n\t\tthis._register(this.channel.listen<ILocalExtension>('onDidUpdateExtensionMetadata')(e => this._onDidUpdateExtensionMetadata.fire(transformIncomingExtension(e, null))));\n\t}\n\n\tprotected fireEvent(event: Emitter<InstallExtensionEvent>, data: InstallExtensionEvent): void;\n\tprotected fireEvent(event: Emitter<readonly InstallExtensionResult[]>, data: InstallExtensionResult[]): void;\n\tprotected fireEvent(event: Emitter<UninstallExtensionEvent>, data: UninstallExtensionEvent): void;\n\tprotected fireEvent(event: Emitter<DidUninstallExtensionEvent>, data: DidUninstallExtensionEvent): void;\n\tprotected fireEvent(event: Emitter<ExtensionEventResult>, data: ExtensionEventResult): void;\n\tprotected fireEvent(event: Emitter<ExtensionEventResult[]>, data: ExtensionEventResult[]): void;\n\tprotected fireEvent<E>(event: Emitter<E>, data: E): void {\n\t\tevent.fire(data);\n\t}\n\n\tprivate isUriComponents(thing: unknown): thing is UriComponents {\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<any>thing).path === 'string' &&\n\t\t\ttypeof (<any>thing).scheme === 'string';\n\t}\n\n\tprotected _targetPlatformPromise: Promise<TargetPlatform> | undefined;\n\tgetTargetPlatform(): Promise<TargetPlatform> {\n\t\tif (!this._targetPlatformPromise) {\n\t\t\tthis._targetPlatformPromise = this.channel.call<TargetPlatform>('getTargetPlatform');\n\t\t}\n\t\treturn this._targetPlatformPromise;\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst currentTargetPlatform = await this.getTargetPlatform();\n\t\treturn extension.allTargetPlatforms.some(targetPlatform => isTargetPlatformCompatible(targetPlatform, extension.allTargetPlatforms, currentTargetPlatform));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call<UriComponents>('zip', [extension]).then(result => URI.revive(result)));\n\t}\n\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionIdentifier>('unzip', [zipLocation]));\n\t}\n\n\tinstall(vsix: URI, options?: InstallVSIXOptions): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix, options])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tinstallFromLocation(location: URI, profileLocation: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromLocation', [location, profileLocation])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tasync installExtensionsFromProfile(extensions: IExtensionIdentifier[], fromProfileLocation: URI, toProfileLocation: URI): Promise<ILocalExtension[]> {\n\t\tconst result = await this.channel.call<ILocalExtension[]>('installExtensionsFromProfile', [extensions, fromProfileLocation, toProfileLocation]);\n\t\treturn result.map(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension, installOptions])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tasync installGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<InstallExtensionResult[]> {\n\t\tconst results = await this.channel.call<InstallExtensionResult[]>('installGalleryExtensions', [extensions]);\n\t\treturn results.map(e => ({ ...e, local: e.local ? transformIncomingExtension(e.local, null) : e.local, source: this.isUriComponents(e.source) ? URI.revive(e.source) : e.source, profileLocation: URI.revive(e.profileLocation) }));\n\t}\n\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call<void>('uninstall', [extension!, options]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('reinstallFromGallery', [extension])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null, extensionsProfileResource?: URI): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type, extensionsProfileResource]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: Partial<Metadata>, extensionsProfileResource?: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata, extensionsProfileResource]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\ttoggleAppliationScope(local: ILocalExtension, fromProfileLocation: URI): Promise<ILocalExtension> {\n\t\treturn this.channel.call<ILocalExtension>('toggleAppliationScope', [local, fromProfileLocation])\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tcopyExtensions(fromProfileLocation: URI, toProfileLocation: URI): Promise<void> {\n\t\treturn this.channel.call<void>('copyExtensions', [fromProfileLocation, toProfileLocation]);\n\t}\n\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionsControlManifest>('getExtensionsControlManifest'));\n\t}\n\n\tasync download(extension: IGalleryExtension, operation: InstallOperation, donotVerifySignature: boolean): Promise<URI> {\n\t\tconst result = await this.channel.call<UriComponents>('download', [extension, operation, donotVerifySignature]);\n\t\treturn URI.revive(result);\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\treturn this.channel.call('cleanUp');\n\t}\n\n\tregisterParticipant() { throw new Error('Not Supported'); }\n}\n\nexport class ExtensionTipsChannel implements IServerChannel {\n\n\tconstructor(private service: IExtensionTipsService) {\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getConfigBasedTips': return this.service.getConfigBasedTips(URI.revive(args[0]));\n\t\t\tcase 'getImportantExecutableBasedTips': return this.service.getImportantExecutableBasedTips();\n\t\t\tcase 'getOtherExecutableBasedTips': return this.service.getOtherExecutableBasedTips();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n"]}