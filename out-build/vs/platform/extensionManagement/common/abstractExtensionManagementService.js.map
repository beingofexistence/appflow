{"version":3,"sources":["vs/platform/extensionManagement/common/abstractExtensionManagementService.ts"],"names":[],"mappings":"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","file":"abstractExtensionManagementService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct, isNonEmptyArray } from 'vs/base/common/arrays';\nimport { Barrier, CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CancellationError, getErrorMessage } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { isDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as nls from 'vs/nls';\nimport {\n\tExtensionManagementError, IExtensionGalleryService, IExtensionIdentifier, IExtensionManagementParticipant, IGalleryExtension, ILocalExtension, InstallOperation,\n\tIExtensionsControlManifest, StatisticType, isTargetPlatformCompatible, TargetPlatformToString, ExtensionManagementErrorCode,\n\tInstallOptions, InstallVSIXOptions, UninstallOptions, Metadata, InstallExtensionEvent, DidUninstallExtensionEvent, InstallExtensionResult, UninstallExtensionEvent, IExtensionManagementService, InstallExtensionInfo, EXTENSION_INSTALL_DEP_PACK_CONTEXT\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, ExtensionKey, getGalleryExtensionId, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, IExtensionManifest, isApplicationScopedExtension, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\n\nexport type ExtensionVerificationStatus = boolean | string;\nexport type InstallableExtension = { readonly manifest: IExtensionManifest; extension: IGalleryExtension | URI; options: InstallOptions & InstallVSIXOptions };\n\nexport type InstallExtensionTaskOptions = InstallOptions & InstallVSIXOptions & { readonly profileLocation: URI };\nexport interface IInstallExtensionTask {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly source: IGalleryExtension | URI;\n\treadonly operation: InstallOperation;\n\treadonly profileLocation: URI;\n\treadonly options: InstallExtensionTaskOptions;\n\treadonly verificationStatus?: ExtensionVerificationStatus;\n\trun(): Promise<ILocalExtension>;\n\twaitUntilTaskIsFinished(): Promise<ILocalExtension>;\n\tcancel(): void;\n}\n\nexport type UninstallExtensionTaskOptions = UninstallOptions & { readonly profileLocation: URI };\nexport interface IUninstallExtensionTask {\n\treadonly extension: ILocalExtension;\n\trun(): Promise<void>;\n\twaitUntilTaskIsFinished(): Promise<void>;\n\tcancel(): void;\n}\n\nexport abstract class AbstractExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsControlManifest: Promise<IExtensionsControlManifest> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions = new Map<string, { task: IInstallExtensionTask; waitingTasks: IInstallExtensionTask[] }>();\n\tprivate readonly uninstallingExtensions = new Map<string, IUninstallExtensionTask>();\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\tget onInstallExtension() { return this._onInstallExtension.event; }\n\n\tprotected readonly _onDidInstallExtensions = this._register(new Emitter<InstallExtensionResult[]>());\n\tget onDidInstallExtensions() { return this._onDidInstallExtensions.event; }\n\n\tprotected readonly _onUninstallExtension = this._register(new Emitter<UninstallExtensionEvent>());\n\tget onUninstallExtension() { return this._onUninstallExtension.event; }\n\n\tprotected _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tget onDidUninstallExtension() { return this._onDidUninstallExtension.event; }\n\n\tprotected readonly _onDidUpdateExtensionMetadata = this._register(new Emitter<ILocalExtension>());\n\tget onDidUpdateExtensionMetadata() { return this._onDidUpdateExtensionMetadata.event; }\n\n\tprivate readonly participants: IExtensionManagementParticipant[] = [];\n\n\tconstructor(\n\t\t@IExtensionGalleryService protected readonly galleryService: IExtensionGalleryService,\n\t\t@ITelemetryService protected readonly telemetryService: ITelemetryService,\n\t\t@IUriIdentityService protected readonly uriIdentityService: IUriIdentityService,\n\t\t@ILogService protected readonly logService: ILogService,\n\t\t@IProductService protected readonly productService: IProductService,\n\t\t@IUserDataProfilesService protected readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(({ task }) => task.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst currentTargetPlatform = await this.getTargetPlatform();\n\t\treturn extension.allTargetPlatforms.some(targetPlatform => isTargetPlatformCompatible(targetPlatform, extension.allTargetPlatforms, currentTargetPlatform));\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension, options: InstallOptions = {}): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst results = await this.installGalleryExtensions([{ extension, options }]);\n\t\t\tconst result = results.find(({ identifier }) => areSameExtensions(identifier, extension.identifier));\n\t\t\tif (result?.local) {\n\t\t\t\treturn result?.local;\n\t\t\t}\n\t\t\tif (result?.error) {\n\t\t\t\tthrow result.error;\n\t\t\t}\n\t\t\tthrow toExtensionManagementError(new Error(`Unknown error while installing extension ${extension.identifier.id}`));\n\t\t} catch (error) {\n\t\t\tthrow toExtensionManagementError(error);\n\t\t}\n\t}\n\n\tasync installGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<InstallExtensionResult[]> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"), ExtensionManagementErrorCode.Internal);\n\t\t}\n\n\t\tconst results: InstallExtensionResult[] = [];\n\t\tconst installableExtensions: InstallableExtension[] = [];\n\n\t\tawait Promise.allSettled(extensions.map(async ({ extension, options }) => {\n\t\t\ttry {\n\t\t\t\tconst compatible = await this.checkAndGetCompatibleVersion(extension, !!options?.installGivenVersion, !!options?.installPreReleaseVersion);\n\t\t\t\tinstallableExtensions.push({ ...compatible, options });\n\t\t\t} catch (error) {\n\t\t\t\tresults.push({ identifier: extension.identifier, operation: InstallOperation.Install, source: extension, error });\n\t\t\t}\n\t\t}));\n\n\t\tif (installableExtensions.length) {\n\t\t\tresults.push(...await this.installExtensions(installableExtensions));\n\t\t}\n\n\t\tfor (const result of results) {\n\t\t\tif (result.error) {\n\t\t\t\tthis.logService.error(`Failed to install extension.`, result.identifier.id);\n\t\t\t\tthis.logService.error(result.error);\n\t\t\t\tif (result.source && !URI.isUri(result.source)) {\n\t\t\t\t\treportTelemetry(this.telemetryService, 'extensionGallery:install', { extensionData: getGalleryExtensionTelemetryData(result.source), error: result.error });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\tasync uninstall(extension: ILocalExtension, options: UninstallOptions = {}): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\treturn this.uninstallExtension(extension, options);\n\t}\n\n\tasync toggleAppliationScope(extension: ILocalExtension, fromProfileLocation: URI): Promise<ILocalExtension> {\n\t\tif (isApplicationScopedExtension(extension.manifest) || extension.isBuiltin) {\n\t\t\treturn extension;\n\t\t}\n\n\t\tif (extension.isApplicationScoped) {\n\t\t\tlet local = await this.updateMetadata(extension, { isApplicationScoped: false }, this.userDataProfilesService.defaultProfile.extensionsResource);\n\t\t\tif (!this.uriIdentityService.extUri.isEqual(fromProfileLocation, this.userDataProfilesService.defaultProfile.extensionsResource)) {\n\t\t\t\tlocal = await this.copyExtension(extension, this.userDataProfilesService.defaultProfile.extensionsResource, fromProfileLocation);\n\t\t\t}\n\n\t\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\t\tconst existing = (await this.getInstalled(ExtensionType.User, profile.extensionsResource))\n\t\t\t\t\t.find(e => areSameExtensions(e.identifier, extension.identifier));\n\t\t\t\tif (existing) {\n\t\t\t\t\tthis._onDidUpdateExtensionMetadata.fire(existing);\n\t\t\t\t} else {\n\t\t\t\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, profileLocation: profile.extensionsResource });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn local;\n\t\t}\n\n\t\telse {\n\t\t\tconst local = this.uriIdentityService.extUri.isEqual(fromProfileLocation, this.userDataProfilesService.defaultProfile.extensionsResource)\n\t\t\t\t? await this.updateMetadata(extension, { isApplicationScoped: true }, this.userDataProfilesService.defaultProfile.extensionsResource)\n\t\t\t\t: await this.copyExtension(extension, fromProfileLocation, this.userDataProfilesService.defaultProfile.extensionsResource, { isApplicationScoped: true });\n\n\t\t\tthis._onDidInstallExtensions.fire([{ identifier: local.identifier, operation: InstallOperation.Install, local, profileLocation: this.userDataProfilesService.defaultProfile.extensionsResource, applicationScoped: true }]);\n\t\t\treturn local;\n\t\t}\n\n\t}\n\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.extensionsControlManifest || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.extensionsControlManifest = this.updateControlCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.extensionsControlManifest;\n\t}\n\n\tregisterParticipant(participant: IExtensionManagementParticipant): void {\n\t\tthis.participants.push(participant);\n\t}\n\n\tprotected async installExtensions(extensions: InstallableExtension[]): Promise<InstallExtensionResult[]> {\n\t\tconst results: InstallExtensionResult[] = [];\n\t\tawait Promise.allSettled(extensions.map(async e => {\n\t\t\ttry {\n\t\t\t\tconst result = await this.installExtension(e);\n\t\t\t\tresults.push(...result);\n\t\t\t} catch (error) {\n\t\t\t\tresults.push({ identifier: { id: getGalleryExtensionId(e.manifest.publisher, e.manifest.name) }, operation: InstallOperation.Install, source: e.extension, error });\n\t\t\t}\n\t\t}));\n\t\tthis._onDidInstallExtensions.fire(results);\n\t\treturn results;\n\t}\n\n\tprivate async installExtension({ manifest, extension, options }: InstallableExtension): Promise<InstallExtensionResult[]> {\n\n\t\tconst isApplicationScoped = options.isApplicationScoped || options.isBuiltin || isApplicationScopedExtension(manifest);\n\t\tconst installExtensionTaskOptions: InstallExtensionTaskOptions = {\n\t\t\t...options,\n\t\t\tinstallOnlyNewlyAddedFromExtensionPack: URI.isUri(extension) ? options.installOnlyNewlyAddedFromExtensionPack : true, /* always true for gallery extensions */\n\t\t\tisApplicationScoped,\n\t\t\tprofileLocation: isApplicationScoped ? this.userDataProfilesService.defaultProfile.extensionsResource : options.profileLocation ?? this.getCurrentExtensionsManifestLocation()\n\t\t};\n\t\tconst getInstallExtensionTaskKey = (extension: IGalleryExtension) => `${ExtensionKey.create(extension).toString()}${installExtensionTaskOptions.profileLocation ? `-${installExtensionTaskOptions.profileLocation.toString()}` : ''}`;\n\n\t\t// only cache gallery extensions tasks\n\t\tif (!URI.isUri(extension)) {\n\t\t\tconst installingExtension = this.installingExtensions.get(getInstallExtensionTaskKey(extension));\n\t\t\tif (installingExtension) {\n\t\t\t\tthis.logService.info('Extensions is already requested to install', extension.identifier.id);\n\t\t\t\tawait installingExtension.task.waitUntilTaskIsFinished();\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\tconst allInstallExtensionTasks: { task: IInstallExtensionTask; manifest: IExtensionManifest }[] = [];\n\t\tconst alreadyRequestedInstallations: Promise<void>[] = [];\n\t\tconst installResults: (InstallExtensionResult & { local: ILocalExtension })[] = [];\n\t\tconst installExtensionTask = this.createInstallExtensionTask(manifest, extension, installExtensionTaskOptions);\n\t\tif (!URI.isUri(extension)) {\n\t\t\tthis.installingExtensions.set(getInstallExtensionTaskKey(extension), { task: installExtensionTask, waitingTasks: [] });\n\t\t}\n\t\tthis._onInstallExtension.fire({ identifier: installExtensionTask.identifier, source: extension, profileLocation: installExtensionTaskOptions.profileLocation });\n\t\tthis.logService.info('Installing extension:', installExtensionTask.identifier.id);\n\t\tallInstallExtensionTasks.push({ task: installExtensionTask, manifest });\n\t\tlet installExtensionHasDependents: boolean = false;\n\n\t\ttry {\n\t\t\tif (installExtensionTaskOptions.donotIncludePackAndDependencies) {\n\t\t\t\tthis.logService.info('Installing the extension without checking dependencies and pack', installExtensionTask.identifier.id);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tconst allDepsAndPackExtensionsToInstall = await this.getAllDepsAndPackExtensions(installExtensionTask.identifier, manifest, !!installExtensionTaskOptions.installOnlyNewlyAddedFromExtensionPack, !!installExtensionTaskOptions.installPreReleaseVersion, installExtensionTaskOptions.profileLocation);\n\t\t\t\t\tconst installed = await this.getInstalled(undefined, installExtensionTaskOptions.profileLocation);\n\t\t\t\t\tconst options: InstallExtensionTaskOptions = { ...installExtensionTaskOptions, donotIncludePackAndDependencies: true, context: { ...installExtensionTaskOptions.context, [EXTENSION_INSTALL_DEP_PACK_CONTEXT]: true } };\n\t\t\t\t\tfor (const { gallery, manifest } of distinct(allDepsAndPackExtensionsToInstall, ({ gallery }) => gallery.identifier.id)) {\n\t\t\t\t\t\tinstallExtensionHasDependents = installExtensionHasDependents || !!manifest.extensionDependencies?.some(id => areSameExtensions({ id }, installExtensionTask.identifier));\n\t\t\t\t\t\tconst key = getInstallExtensionTaskKey(gallery);\n\t\t\t\t\t\tconst existingInstallingExtension = this.installingExtensions.get(key);\n\t\t\t\t\t\tif (existingInstallingExtension) {\n\t\t\t\t\t\t\tif (this.canWaitForTask(installExtensionTask, existingInstallingExtension.task)) {\n\t\t\t\t\t\t\t\tconst identifier = existingInstallingExtension.task.identifier;\n\t\t\t\t\t\t\t\tthis.logService.info('Waiting for already requested installing extension', identifier.id, installExtensionTask.identifier.id);\n\t\t\t\t\t\t\t\texistingInstallingExtension.waitingTasks.push(installExtensionTask);\n\t\t\t\t\t\t\t\t// add promise that waits until the extension is completely installed, ie., onDidInstallExtensions event is triggered for this extension\n\t\t\t\t\t\t\t\talreadyRequestedInstallations.push(\n\t\t\t\t\t\t\t\t\tEvent.toPromise(\n\t\t\t\t\t\t\t\t\t\tEvent.filter(this.onDidInstallExtensions, results => results.some(result => areSameExtensions(result.identifier, identifier)))\n\t\t\t\t\t\t\t\t\t).then(results => {\n\t\t\t\t\t\t\t\t\t\tthis.logService.info('Finished waiting for already requested installing extension', identifier.id, installExtensionTask.identifier.id);\n\t\t\t\t\t\t\t\t\t\tconst result = results.find(result => areSameExtensions(result.identifier, identifier));\n\t\t\t\t\t\t\t\t\t\tif (!result?.local) {\n\t\t\t\t\t\t\t\t\t\t\t// Extension failed to install\n\t\t\t\t\t\t\t\t\t\t\tthrow new Error(`Extension ${identifier.id} is not installed`);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!installed.some(({ identifier }) => areSameExtensions(identifier, gallery.identifier))) {\n\t\t\t\t\t\t\tconst task = this.createInstallExtensionTask(manifest, gallery, options);\n\t\t\t\t\t\t\tthis.installingExtensions.set(key, { task, waitingTasks: [installExtensionTask] });\n\t\t\t\t\t\t\tthis._onInstallExtension.fire({ identifier: task.identifier, source: gallery, profileLocation: installExtensionTaskOptions.profileLocation });\n\t\t\t\t\t\t\tthis.logService.info('Installing extension:', task.identifier.id, installExtensionTask.identifier.id);\n\t\t\t\t\t\t\tallInstallExtensionTasks.push({ task, manifest });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Installing through VSIX\n\t\t\t\t\tif (URI.isUri(installExtensionTask.source)) {\n\t\t\t\t\t\t// Ignore installing dependencies and packs\n\t\t\t\t\t\tif (isNonEmptyArray(manifest.extensionDependencies)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, installExtensionTask.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isNonEmptyArray(manifest.extensionPack)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, installExtensionTask.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.error('Error while preparing to install dependencies and extension packs of the extension:', installExtensionTask.identifier.id);\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst extensionsToInstallMap = allInstallExtensionTasks.reduce((result, { task, manifest }) => {\n\t\t\t\tresult.set(task.identifier.id.toLowerCase(), { task, manifest });\n\t\t\t\treturn result;\n\t\t\t}, new Map<string, { task: IInstallExtensionTask; manifest: IExtensionManifest }>());\n\n\t\t\twhile (extensionsToInstallMap.size) {\n\t\t\t\tlet extensionsToInstall;\n\t\t\t\tconst extensionsWithoutDepsToInstall = [...extensionsToInstallMap.values()].filter(({ manifest }) => !manifest.extensionDependencies?.some(id => extensionsToInstallMap.has(id.toLowerCase())));\n\t\t\t\tif (extensionsWithoutDepsToInstall.length) {\n\t\t\t\t\textensionsToInstall = extensionsToInstallMap.size === 1 ? extensionsWithoutDepsToInstall\n\t\t\t\t\t\t/* If the main extension has no dependents remove it and install it at the end */\n\t\t\t\t\t\t: extensionsWithoutDepsToInstall.filter(({ task }) => !(task === installExtensionTask && !installExtensionHasDependents));\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info('Found extensions with circular dependencies', extensionsWithoutDepsToInstall.map(({ task }) => task.identifier.id));\n\t\t\t\t\textensionsToInstall = [...extensionsToInstallMap.values()];\n\t\t\t\t}\n\n\t\t\t\t// Install extensions in parallel and wait until all extensions are installed / failed\n\t\t\t\tawait this.joinAllSettled(extensionsToInstall.map(async ({ task }) => {\n\t\t\t\t\tconst startTime = new Date().getTime();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst local = await task.run();\n\t\t\t\t\t\tawait this.joinAllSettled(this.participants.map(participant => participant.postInstall(local, task.source, installExtensionTaskOptions, CancellationToken.None)));\n\t\t\t\t\t\tif (!URI.isUri(task.source)) {\n\t\t\t\t\t\t\tconst isUpdate = task.operation === InstallOperation.Update;\n\t\t\t\t\t\t\tconst durationSinceUpdate = isUpdate ? undefined : (new Date().getTime() - task.source.lastUpdated) / 1000;\n\t\t\t\t\t\t\treportTelemetry(this.telemetryService, isUpdate ? 'extensionGallery:update' : 'extensionGallery:install', {\n\t\t\t\t\t\t\t\textensionData: getGalleryExtensionTelemetryData(task.source),\n\t\t\t\t\t\t\t\tverificationStatus: task.verificationStatus,\n\t\t\t\t\t\t\t\tduration: new Date().getTime() - startTime,\n\t\t\t\t\t\t\t\tdurationSinceUpdate\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t// In web, report extension install statistics explicitly. In Desktop, statistics are automatically updated while downloading the VSIX.\n\t\t\t\t\t\t\tif (isWeb && task.operation !== InstallOperation.Update) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait this.galleryService.reportStatistic(local.manifest.publisher, local.manifest.name, local.manifest.version, StatisticType.Install);\n\t\t\t\t\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinstallResults.push({ local, identifier: task.identifier, operation: task.operation, source: task.source, context: task.options.context, profileLocation: task.profileLocation, applicationScoped: local.isApplicationScoped });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (!URI.isUri(task.source)) {\n\t\t\t\t\t\t\treportTelemetry(this.telemetryService, task.operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install', {\n\t\t\t\t\t\t\t\textensionData: getGalleryExtensionTelemetryData(task.source),\n\t\t\t\t\t\t\t\tverificationStatus: task.verificationStatus,\n\t\t\t\t\t\t\t\tduration: new Date().getTime() - startTime,\n\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.logService.error('Error while installing the extension:', task.identifier.id);\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t} finally { extensionsToInstallMap.delete(task.identifier.id.toLowerCase()); }\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tif (alreadyRequestedInstallations.length) {\n\t\t\t\tawait this.joinAllSettled(alreadyRequestedInstallations);\n\t\t\t}\n\n\t\t\tinstallResults.forEach(({ identifier }) => this.logService.info(`Extension installed successfully:`, identifier.id));\n\t\t\treturn installResults;\n\n\t\t} catch (error) {\n\n\t\t\t// cancel all tasks\n\t\t\tallInstallExtensionTasks.forEach(({ task }) => task.cancel());\n\n\t\t\t// rollback installed extensions\n\t\t\tif (installResults.length) {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await Promise.allSettled(installResults.map(({ local }) => this.createUninstallExtensionTask(local, { versionOnly: true, profileLocation: installExtensionTaskOptions.profileLocation }).run()));\n\t\t\t\t\tfor (let index = 0; index < result.length; index++) {\n\t\t\t\t\t\tconst r = result[index];\n\t\t\t\t\t\tconst { identifier } = installResults[index];\n\t\t\t\t\t\tif (r.status === 'fulfilled') {\n\t\t\t\t\t\t\tthis.logService.info('Rollback: Uninstalled extension', identifier.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.logService.warn('Rollback: Error while uninstalling extension', identifier.id, getErrorMessage(r.reason));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore error\n\t\t\t\t\tthis.logService.warn('Error while rolling back extensions', getErrorMessage(error), installResults.map(({ identifier }) => identifier.id));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn allInstallExtensionTasks.map(({ task }) => ({ identifier: task.identifier, operation: InstallOperation.Install, source: task.source, context: installExtensionTaskOptions.context, profileLocation: installExtensionTaskOptions.profileLocation, error }));\n\t\t} finally {\n\t\t\t// Finally, remove all the tasks from the cache\n\t\t\tfor (const { task } of allInstallExtensionTasks) {\n\t\t\t\tif (task.source && !URI.isUri(task.source)) {\n\t\t\t\t\tthis.installingExtensions.delete(getInstallExtensionTaskKey(task.source));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate canWaitForTask(taskToWait: IInstallExtensionTask, taskToWaitFor: IInstallExtensionTask): boolean {\n\t\tfor (const [, { task, waitingTasks }] of this.installingExtensions.entries()) {\n\t\t\tif (task === taskToWait) {\n\t\t\t\t// Cannot be waited, If taskToWaitFor is waiting for taskToWait\n\t\t\t\tif (waitingTasks.includes(taskToWaitFor)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Cannot be waited, If taskToWaitFor is waiting for tasks waiting for taskToWait\n\t\t\t\tif (waitingTasks.some(waitingTask => this.canWaitForTask(waitingTask, taskToWaitFor))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Cannot be waited, if the taskToWait cannot be waited for the task created the taskToWaitFor\n\t\t\t// Because, the task waits for the tasks it created\n\t\t\tif (task === taskToWaitFor && waitingTasks[0] && !this.canWaitForTask(taskToWait, waitingTasks[0])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async joinAllSettled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tconst results: T[] = [];\n\t\tconst errors: any[] = [];\n\t\tconst promiseResults = await Promise.allSettled(promises);\n\t\tfor (const r of promiseResults) {\n\t\t\tif (r.status === 'fulfilled') {\n\t\t\t\tresults.push(r.value);\n\t\t\t} else {\n\t\t\t\terrors.push(r.reason);\n\t\t\t}\n\t\t}\n\t\t// If there are errors, throw the error.\n\t\tif (errors.length) { throw joinErrors(errors); }\n\t\treturn results;\n\t}\n\n\tprivate async getAllDepsAndPackExtensions(extensionIdentifier: IExtensionIdentifier, manifest: IExtensionManifest, getOnlyNewlyAddedFromExtensionPack: boolean, installPreRelease: boolean, profile: URI | undefined): Promise<{ gallery: IGalleryExtension; manifest: IExtensionManifest }[]> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst installed = await this.getInstalled(undefined, profile);\n\t\tconst knownIdentifiers: IExtensionIdentifier[] = [];\n\n\t\tconst allDependenciesAndPacks: { gallery: IGalleryExtension; manifest: IExtensionManifest }[] = [];\n\t\tconst collectDependenciesAndPackExtensionsToInstall = async (extensionIdentifier: IExtensionIdentifier, manifest: IExtensionManifest): Promise<void> => {\n\t\t\tknownIdentifiers.push(extensionIdentifier);\n\t\t\tconst dependecies: string[] = manifest.extensionDependencies || [];\n\t\t\tconst dependenciesAndPackExtensions = [...dependecies];\n\t\t\tif (manifest.extensionPack) {\n\t\t\t\tconst existing = getOnlyNewlyAddedFromExtensionPack ? installed.find(e => areSameExtensions(e.identifier, extensionIdentifier)) : undefined;\n\t\t\t\tfor (const extension of manifest.extensionPack) {\n\t\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\t\t// filter out known extensions\n\t\t\t\tconst ids = dependenciesAndPackExtensions.filter(id => knownIdentifiers.every(galleryIdentifier => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\t\tif (ids.length) {\n\t\t\t\t\tconst galleryExtensions = await this.galleryService.getExtensions(ids.map(id => ({ id, preRelease: installPreRelease })), CancellationToken.None);\n\t\t\t\t\tfor (const galleryExtension of galleryExtensions) {\n\t\t\t\t\t\tif (knownIdentifiers.find(identifier => areSameExtensions(identifier, galleryExtension.identifier))) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst isDependency = dependecies.some(id => areSameExtensions({ id }, galleryExtension.identifier));\n\t\t\t\t\t\tlet compatible;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcompatible = await this.checkAndGetCompatibleVersion(galleryExtension, false, installPreRelease);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tif (!isDependency) {\n\t\t\t\t\t\t\t\tthis.logService.info('Skipping the packed extension as it cannot be installed', galleryExtension.identifier.id, getErrorMessage(error));\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tallDependenciesAndPacks.push({ gallery: compatible.extension, manifest: compatible.manifest });\n\t\t\t\t\t\tawait collectDependenciesAndPackExtensionsToInstall(compatible.extension.identifier, compatible.manifest);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tawait collectDependenciesAndPackExtensionsToInstall(extensionIdentifier, manifest);\n\t\treturn allDependenciesAndPacks;\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension, sameVersion: boolean, installPreRelease: boolean): Promise<{ extension: IGalleryExtension; manifest: IExtensionManifest }> {\n\t\tlet compatibleExtension: IGalleryExtension | null;\n\n\t\tconst extensionsControlManifest = await this.getExtensionsControlManifest();\n\t\tif (extensionsControlManifest.malicious.some(identifier => areSameExtensions(extension.identifier, identifier))) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('malicious extension', \"Can't install '{0}' extension since it was reported to be problematic.\", extension.identifier.id), ExtensionManagementErrorCode.Malicious);\n\t\t}\n\n\t\tconst deprecationInfo = extensionsControlManifest.deprecated[extension.identifier.id.toLowerCase()];\n\t\tif (deprecationInfo?.extension?.autoMigrate) {\n\t\t\tthis.logService.info(`The '${extension.identifier.id}' extension is deprecated, fetching the compatible '${deprecationInfo.extension.id}' extension instead.`);\n\t\t\tcompatibleExtension = (await this.galleryService.getExtensions([{ id: deprecationInfo.extension.id, preRelease: deprecationInfo.extension.preRelease }], { targetPlatform: await this.getTargetPlatform(), compatible: true }, CancellationToken.None))[0];\n\t\t\tif (!compatibleExtension) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundDeprecatedReplacementExtension', \"Can't install '{0}' extension since it was deprecated and the replacement extension '{1}' can't be found.\", extension.identifier.id, deprecationInfo.extension.id), ExtensionManagementErrorCode.Deprecated);\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif (!await this.canInstall(extension)) {\n\t\t\t\tconst targetPlatform = await this.getTargetPlatform();\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('incompatible platform', \"The '{0}' extension is not available in {1} for {2}.\", extension.identifier.id, this.productService.nameLong, TargetPlatformToString(targetPlatform)), ExtensionManagementErrorCode.IncompatibleTargetPlatform);\n\t\t\t}\n\n\t\t\tcompatibleExtension = await this.getCompatibleVersion(extension, sameVersion, installPreRelease);\n\t\t\tif (!compatibleExtension) {\n\t\t\t\t/** If no compatible release version is found, check if the extension has a release version or not and throw relevant error */\n\t\t\t\tif (!installPreRelease && extension.properties.isPreReleaseVersion && (await this.galleryService.getExtensions([extension.identifier], CancellationToken.None))[0]) {\n\t\t\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundReleaseExtension', \"Can't install release version of '{0}' extension because it has no release version.\", extension.identifier.id), ExtensionManagementErrorCode.ReleaseVersionNotFound);\n\t\t\t\t}\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Can't install '{0}' extension because it is not compatible with the current version of {1} (version {2}).\", extension.identifier.id, this.productService.nameLong, this.productService.version), ExtensionManagementErrorCode.Incompatible);\n\t\t\t}\n\t\t}\n\n\t\tthis.logService.info('Getting Manifest...', compatibleExtension.identifier.id);\n\t\tconst manifest = await this.galleryService.getManifest(compatibleExtension, CancellationToken.None);\n\t\tif (manifest === null) {\n\t\t\tthrow new ExtensionManagementError(`Missing manifest for extension ${compatibleExtension.identifier.id}`, ExtensionManagementErrorCode.Invalid);\n\t\t}\n\n\t\tif (manifest.version !== compatibleExtension.version) {\n\t\t\tthrow new ExtensionManagementError(`Cannot install '${compatibleExtension.identifier.id}' extension because of version mismatch in Marketplace`, ExtensionManagementErrorCode.Invalid);\n\t\t}\n\n\t\treturn { extension: compatibleExtension, manifest };\n\t}\n\n\tprotected async getCompatibleVersion(extension: IGalleryExtension, sameVersion: boolean, includePreRelease: boolean): Promise<IGalleryExtension | null> {\n\t\tconst targetPlatform = await this.getTargetPlatform();\n\t\tlet compatibleExtension: IGalleryExtension | null = null;\n\n\t\tif (!sameVersion && extension.hasPreReleaseVersion && extension.properties.isPreReleaseVersion !== includePreRelease) {\n\t\t\tcompatibleExtension = (await this.galleryService.getExtensions([{ ...extension.identifier, preRelease: includePreRelease }], { targetPlatform, compatible: true }, CancellationToken.None))[0] || null;\n\t\t}\n\n\t\tif (!compatibleExtension && await this.galleryService.isExtensionCompatible(extension, includePreRelease, targetPlatform)) {\n\t\t\tcompatibleExtension = extension;\n\t\t}\n\n\t\tif (!compatibleExtension) {\n\t\t\tif (sameVersion) {\n\t\t\t\tcompatibleExtension = (await this.galleryService.getExtensions([{ ...extension.identifier, version: extension.version }], { targetPlatform, compatible: true }, CancellationToken.None))[0] || null;\n\t\t\t} else {\n\t\t\t\tcompatibleExtension = await this.galleryService.getCompatibleExtension(extension, includePreRelease, targetPlatform);\n\t\t\t}\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\tprivate async uninstallExtension(extension: ILocalExtension, options: UninstallOptions): Promise<void> {\n\t\tconst uninstallOptions: UninstallExtensionTaskOptions = {\n\t\t\t...options,\n\t\t\tprofileLocation: extension.isApplicationScoped ? this.userDataProfilesService.defaultProfile.extensionsResource : options.profileLocation ?? this.getCurrentExtensionsManifestLocation()\n\t\t};\n\t\tconst getUninstallExtensionTaskKey = (identifier: IExtensionIdentifier) => `${identifier.id.toLowerCase()}${uninstallOptions.versionOnly ? `-${extension.manifest.version}` : ''}${uninstallOptions.profileLocation ? `@${uninstallOptions.profileLocation.toString()}` : ''}`;\n\t\tconst uninstallExtensionTask = this.uninstallingExtensions.get(getUninstallExtensionTaskKey(extension.identifier));\n\t\tif (uninstallExtensionTask) {\n\t\t\tthis.logService.info('Extensions is already requested to uninstall', extension.identifier.id);\n\t\t\treturn uninstallExtensionTask.waitUntilTaskIsFinished();\n\t\t}\n\n\t\tconst createUninstallExtensionTask = (extension: ILocalExtension): IUninstallExtensionTask => {\n\t\t\tconst uninstallExtensionTask = this.createUninstallExtensionTask(extension, uninstallOptions);\n\t\t\tthis.uninstallingExtensions.set(getUninstallExtensionTaskKey(uninstallExtensionTask.extension.identifier), uninstallExtensionTask);\n\t\t\tif (uninstallOptions.profileLocation) {\n\t\t\t\tthis.logService.info('Uninstalling extension from the profile:', `${extension.identifier.id}@${extension.manifest.version}`, uninstallOptions.profileLocation.toString());\n\t\t\t} else {\n\t\t\t\tthis.logService.info('Uninstalling extension:', `${extension.identifier.id}@${extension.manifest.version}`);\n\t\t\t}\n\t\t\tthis._onUninstallExtension.fire({ identifier: extension.identifier, profileLocation: uninstallOptions.profileLocation, applicationScoped: extension.isApplicationScoped });\n\t\t\treturn uninstallExtensionTask;\n\t\t};\n\n\t\tconst postUninstallExtension = (extension: ILocalExtension, error?: ExtensionManagementError): void => {\n\t\t\tif (error) {\n\t\t\t\tif (uninstallOptions.profileLocation) {\n\t\t\t\t\tthis.logService.error('Failed to uninstall extension from the profile:', `${extension.identifier.id}@${extension.manifest.version}`, uninstallOptions.profileLocation.toString(), error.message);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.error('Failed to uninstall extension:', `${extension.identifier.id}@${extension.manifest.version}`, error.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (uninstallOptions.profileLocation) {\n\t\t\t\t\tthis.logService.info('Successfully uninstalled extension from the profile', `${extension.identifier.id}@${extension.manifest.version}`, uninstallOptions.profileLocation.toString());\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info('Successfully uninstalled extension:', `${extension.identifier.id}@${extension.manifest.version}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treportTelemetry(this.telemetryService, 'extensionGallery:uninstall', { extensionData: getLocalExtensionTelemetryData(extension), error });\n\t\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: error?.code, profileLocation: uninstallOptions.profileLocation, applicationScoped: extension.isApplicationScoped });\n\t\t};\n\n\t\tconst allTasks: IUninstallExtensionTask[] = [];\n\t\tconst processedTasks: IUninstallExtensionTask[] = [];\n\n\t\ttry {\n\t\t\tallTasks.push(createUninstallExtensionTask(extension));\n\t\t\tconst installed = await this.getInstalled(ExtensionType.User, uninstallOptions.profileLocation);\n\t\t\tif (uninstallOptions.donotIncludePack) {\n\t\t\t\tthis.logService.info('Uninstalling the extension without including packed extension', `${extension.identifier.id}@${extension.manifest.version}`);\n\t\t\t} else {\n\t\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\t\tif (this.uninstallingExtensions.has(getUninstallExtensionTaskKey(packedExtension.identifier))) {\n\t\t\t\t\t\tthis.logService.info('Extensions is already requested to uninstall', packedExtension.identifier.id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tallTasks.push(createUninstallExtensionTask(packedExtension));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (uninstallOptions.donotCheckDependents) {\n\t\t\t\tthis.logService.info('Uninstalling the extension without checking dependents', `${extension.identifier.id}@${extension.manifest.version}`);\n\t\t\t} else {\n\t\t\t\tthis.checkForDependents(allTasks.map(task => task.extension), installed, extension);\n\t\t\t}\n\n\t\t\t// Uninstall extensions in parallel and wait until all extensions are uninstalled / failed\n\t\t\tawait this.joinAllSettled(allTasks.map(async task => {\n\t\t\t\ttry {\n\t\t\t\t\tawait task.run();\n\t\t\t\t\tawait this.joinAllSettled(this.participants.map(participant => participant.postUninstall(task.extension, uninstallOptions, CancellationToken.None)));\n\t\t\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\t\t\tif (task.extension.identifier.uuid) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.galleryService.reportStatistic(task.extension.manifest.publisher, task.extension.manifest.name, task.extension.manifest.version, StatisticType.Uninstall);\n\t\t\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t\t\t}\n\t\t\t\t\tpostUninstallExtension(task.extension);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconst error = e instanceof ExtensionManagementError ? e : new ExtensionManagementError(getErrorMessage(e), ExtensionManagementErrorCode.Internal);\n\t\t\t\t\tpostUninstallExtension(task.extension, error);\n\t\t\t\t\tthrow error;\n\t\t\t\t} finally {\n\t\t\t\t\tprocessedTasks.push(task);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t} catch (e) {\n\t\t\tconst error = e instanceof ExtensionManagementError ? e : new ExtensionManagementError(getErrorMessage(e), ExtensionManagementErrorCode.Internal);\n\t\t\tfor (const task of allTasks) {\n\t\t\t\t// cancel the tasks\n\t\t\t\ttry { task.cancel(); } catch (error) { /* ignore */ }\n\t\t\t\tif (!processedTasks.includes(task)) {\n\t\t\t\t\tpostUninstallExtension(task.extension, error);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\t// Remove tasks from cache\n\t\t\tfor (const task of allTasks) {\n\t\t\t\tif (!this.uninstallingExtensions.delete(getUninstallExtensionTaskKey(task.extension.identifier))) {\n\t\t\t\t\tthis.logService.warn('Uninstallation task is not found in the cache', task.extension.identifier.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate checkForDependents(extensionsToUninstall: ILocalExtension[], installed: ILocalExtension[], extensionToUninstall: ILocalExtension): void {\n\t\tfor (const extension of extensionsToUninstall) {\n\t\t\tconst dependents = this.getDependents(extension, installed);\n\t\t\tif (dependents.length) {\n\t\t\t\tconst remainingDependents = dependents.filter(dependent => !extensionsToUninstall.some(e => areSameExtensions(e.identifier, dependent.identifier)));\n\t\t\t\tif (remainingDependents.length) {\n\t\t\t\t\tthrow new Error(this.getDependentsErrorMessage(extension, remainingDependents, extensionToUninstall));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getDependentsErrorMessage(dependingExtension: ILocalExtension, dependents: ILocalExtension[], extensionToUninstall: ILocalExtension): string {\n\t\tif (extensionToUninstall === dependingExtension) {\n\t\t\tif (dependents.length === 1) {\n\t\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall '{0}' extension. '{1}' extension depends on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t\t}\n\t\t\tif (dependents.length === 2) {\n\t\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall '{0}' extension. '{1}' and '{2}' extensions depend on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t\t}\n\t\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall '{0}' extension. '{1}', '{2}' and other extension depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleIndirectDependentError', \"Cannot uninstall '{0}' extension . It includes uninstalling '{1}' extension and '{2}' extension depends on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}' and '{3}' extensions depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}', '{3}' and other extensions depend on this.\",\n\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => !i.isBuiltin && extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate async updateControlCache(): Promise<IExtensionsControlManifest> {\n\t\ttry {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\t\t\tconst manifest = await this.galleryService.getExtensionsControlManifest();\n\t\t\tthis.logService.trace(`ExtensionManagementService.refreshControlCache`, manifest);\n\t\t\treturn manifest;\n\t\t} catch (err) {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshControlCache - failed to get extension control manifest');\n\t\t\treturn { malicious: [], deprecated: {}, search: [] };\n\t\t}\n\t}\n\n\tabstract getTargetPlatform(): Promise<TargetPlatform>;\n\tabstract zip(extension: ILocalExtension): Promise<URI>;\n\tabstract unzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tabstract getManifest(vsix: URI): Promise<IExtensionManifest>;\n\tabstract install(vsix: URI, options?: InstallVSIXOptions): Promise<ILocalExtension>;\n\tabstract installFromLocation(location: URI, profileLocation: URI): Promise<ILocalExtension>;\n\tabstract installExtensionsFromProfile(extensions: IExtensionIdentifier[], fromProfileLocation: URI, toProfileLocation: URI): Promise<ILocalExtension[]>;\n\tabstract getInstalled(type?: ExtensionType, profileLocation?: URI): Promise<ILocalExtension[]>;\n\tabstract copyExtensions(fromProfileLocation: URI, toProfileLocation: URI): Promise<void>;\n\tabstract download(extension: IGalleryExtension, operation: InstallOperation, donotVerifySignature: boolean): Promise<URI>;\n\tabstract reinstallFromGallery(extension: ILocalExtension): Promise<ILocalExtension>;\n\tabstract cleanUp(): Promise<void>;\n\n\tabstract updateMetadata(local: ILocalExtension, metadata: Partial<Metadata>, profileLocation?: URI): Promise<ILocalExtension>;\n\n\tprotected abstract getCurrentExtensionsManifestLocation(): URI;\n\tprotected abstract createInstallExtensionTask(manifest: IExtensionManifest, extension: URI | IGalleryExtension, options: InstallExtensionTaskOptions): IInstallExtensionTask;\n\tprotected abstract createUninstallExtensionTask(extension: ILocalExtension, options: UninstallExtensionTaskOptions): IUninstallExtensionTask;\n\tprotected abstract copyExtension(extension: ILocalExtension, fromProfileLocation: URI, toProfileLocation: URI, metadata?: Partial<Metadata>): Promise<ILocalExtension>;\n}\n\nexport function joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\tif (errors.length === 1) {\n\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t}\n\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t}, new Error(''));\n}\n\nexport function toExtensionManagementError(error: Error): ExtensionManagementError {\n\tif (error instanceof ExtensionManagementError) {\n\t\treturn error;\n\t}\n\tconst e = new ExtensionManagementError(error.message, ExtensionManagementErrorCode.Internal);\n\te.stack = error.stack;\n\treturn e;\n}\n\nfunction reportTelemetry(telemetryService: ITelemetryService, eventName: string, { extensionData, verificationStatus, duration, error, durationSinceUpdate }: { extensionData: any; verificationStatus?: ExtensionVerificationStatus; duration?: number; durationSinceUpdate?: number; error?: Error }): void {\n\tlet errorcode: ExtensionManagementErrorCode | undefined;\n\tlet errorcodeDetail: string | undefined;\n\n\tif (isDefined(verificationStatus)) {\n\t\tif (verificationStatus === true) {\n\t\t\tverificationStatus = 'Verified';\n\t\t} else if (verificationStatus === false) {\n\t\t\tverificationStatus = 'Unverified';\n\t\t} else {\n\t\t\terrorcode = ExtensionManagementErrorCode.Signature;\n\t\t\terrorcodeDetail = verificationStatus;\n\t\t\tverificationStatus = 'Unverified';\n\t\t}\n\t}\n\n\tif (error) {\n\t\tif (error instanceof ExtensionManagementError) {\n\t\t\terrorcode = error.code;\n\t\t\tif (error.code === ExtensionManagementErrorCode.Signature) {\n\t\t\t\terrorcodeDetail = error.message;\n\t\t\t}\n\t\t} else {\n\t\t\terrorcode = ExtensionManagementErrorCode.Internal;\n\t\t}\n\t}\n\n\t/* __GDPR__\n\t\t\"extensionGallery:install\" : {\n\t\t\t\"owner\": \"sandy081\",\n\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"durationSinceUpdate\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"errorcodeDetail\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\"verificationStatus\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\"${include}\": [\n\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t]\n\t\t}\n\t*/\n\t/* __GDPR__\n\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\"owner\": \"sandy081\",\n\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"${include}\": [\n\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t]\n\t\t}\n\t*/\n\t/* __GDPR__\n\t\t\"extensionGallery:update\" : {\n\t\t\t\"owner\": \"sandy081\",\n\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"errorcodeDetail\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"verificationStatus\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\"${include}\": [\n\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t]\n\t\t}\n\t*/\n\ttelemetryService.publicLog(eventName, { ...extensionData, verificationStatus, success: !error, duration, errorcode, errorcodeDetail, durationSinceUpdate });\n}\n\nexport abstract class AbstractExtensionTask<T> {\n\n\tprivate readonly barrier = new Barrier();\n\tprivate cancellablePromise: CancelablePromise<T> | undefined;\n\n\tasync waitUntilTaskIsFinished(): Promise<T> {\n\t\tawait this.barrier.wait();\n\t\treturn this.cancellablePromise!;\n\t}\n\n\tasync run(): Promise<T> {\n\t\tif (!this.cancellablePromise) {\n\t\t\tthis.cancellablePromise = createCancelablePromise(token => this.doRun(token));\n\t\t}\n\t\tthis.barrier.open();\n\t\treturn this.cancellablePromise;\n\t}\n\n\tcancel(): void {\n\t\tif (!this.cancellablePromise) {\n\t\t\tthis.cancellablePromise = createCancelablePromise(token => {\n\t\t\t\treturn new Promise((c, e) => {\n\t\t\t\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\te(new CancellationError());\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.barrier.open();\n\t\t}\n\t\tthis.cancellablePromise.cancel();\n\t}\n\n\tprotected abstract doRun(token: CancellationToken): Promise<T>;\n}\n"]}