{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/extensionManagement/common/extensionGalleryService.ts"],"names":[],"mappings":"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","file":"extensionGalleryService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { CancellationError, getErrorMessage, isCancellationError } from 'vs/base/common/errors';\nimport { IPager } from 'vs/base/common/paging';\nimport { isWeb, platform } from 'vs/base/common/platform';\nimport { arch } from 'vs/base/common/process';\nimport { isBoolean } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IHeaders, IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { getFallbackTargetPlarforms, getTargetPlatform, IExtensionGalleryService, IExtensionIdentifier, IExtensionInfo, IGalleryExtension, IGalleryExtensionAsset, IGalleryExtensionAssets, IGalleryExtensionVersion, InstallOperation, IQueryOptions, IExtensionsControlManifest, isNotWebExtensionInWebTargetPlatform, isTargetPlatformCompatible, ITranslation, SortBy, SortOrder, StatisticType, toTargetPlatform, WEB_EXTENSION_TAG, IExtensionQueryOptions, IDeprecationInfo, ISearchPrefferedResults } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { adoptToGalleryExtensionId, areSameExtensions, getGalleryExtensionId, getGalleryExtensionTelemetryData } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IExtensionManifest, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { asJson, asTextOrError, IRequestService, isSuccess } from 'vs/platform/request/common/request';\nimport { resolveMarketplaceHeaders } from 'vs/platform/externalServices/common/marketplace';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { StopWatch } from 'vs/base/common/stopwatch';\n\nconst CURRENT_TARGET_PLATFORM = isWeb ? TargetPlatform.WEB : getTargetPlatform(platform, arch);\nconst ACTIVITY_HEADER_NAME = 'X-Market-Search-Activity-Id';\n\ninterface IRawGalleryExtensionFile {\n\treadonly assetType: string;\n\treadonly source: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\treadonly key: string;\n\treadonly value: string;\n}\n\nexport interface IRawGalleryExtensionVersion {\n\treadonly version: string;\n\treadonly lastUpdated: string;\n\treadonly assetUri: string;\n\treadonly fallbackAssetUri: string;\n\treadonly files: IRawGalleryExtensionFile[];\n\treadonly properties?: IRawGalleryExtensionProperty[];\n\treadonly targetPlatform?: string;\n}\n\ninterface IRawGalleryExtensionStatistics {\n\treadonly statisticName: string;\n\treadonly value: number;\n}\n\ninterface IRawGalleryExtensionPublisher {\n\treadonly displayName: string;\n\treadonly publisherId: string;\n\treadonly publisherName: string;\n\treadonly domain?: string | null;\n\treadonly isDomainVerified?: boolean;\n}\n\ninterface IRawGalleryExtension {\n\treadonly extensionId: string;\n\treadonly extensionName: string;\n\treadonly displayName: string;\n\treadonly shortDescription: string;\n\treadonly publisher: IRawGalleryExtensionPublisher;\n\treadonly versions: IRawGalleryExtensionVersion[];\n\treadonly statistics: IRawGalleryExtensionStatistics[];\n\treadonly tags: string[] | undefined;\n\treadonly releaseDate: string;\n\treadonly publishedDate: string;\n\treadonly lastUpdated: string;\n\treadonly categories: string[] | undefined;\n\treadonly flags: string;\n}\n\ninterface IRawGalleryExtensionsResult {\n\treadonly galleryExtensions: IRawGalleryExtension[];\n\treadonly total: number;\n\treadonly context?: IStringDictionary<string>;\n}\n\ninterface IRawGalleryQueryResult {\n\treadonly results: {\n\t\treadonly extensions: IRawGalleryExtension[];\n\t\treadonly resultMetadata: {\n\t\t\treadonly metadataType: string;\n\t\t\treadonly metadataItems: {\n\t\t\t\treadonly name: string;\n\t\t\t\treadonly count: number;\n\t\t\t}[];\n\t\t}[];\n\t}[];\n}\n\nenum Flags {\n\n\t/**\n\t * None is used to retrieve only the basic extension details.\n\t */\n\tNone = 0x0,\n\n\t/**\n\t * IncludeVersions will return version information for extensions returned\n\t */\n\tIncludeVersions = 0x1,\n\n\t/**\n\t * IncludeFiles will return information about which files were found\n\t * within the extension that were stored independent of the manifest.\n\t * When asking for files, versions will be included as well since files\n\t * are returned as a property of the versions.\n\t * These files can be retrieved using the path to the file without\n\t * requiring the entire manifest be downloaded.\n\t */\n\tIncludeFiles = 0x2,\n\n\t/**\n\t * Include the Categories and Tags that were added to the extension definition.\n\t */\n\tIncludeCategoryAndTags = 0x4,\n\n\t/**\n\t * Include the details about which accounts the extension has been shared\n\t * with if the extension is a private extension.\n\t */\n\tIncludeSharedAccounts = 0x8,\n\n\t/**\n\t * Include properties associated with versions of the extension\n\t */\n\tIncludeVersionProperties = 0x10,\n\n\t/**\n\t * Excluding non-validated extensions will remove any extension versions that\n\t * either are in the process of being validated or have failed validation.\n\t */\n\tExcludeNonValidated = 0x20,\n\n\t/**\n\t * Include the set of installation targets the extension has requested.\n\t */\n\tIncludeInstallationTargets = 0x40,\n\n\t/**\n\t * Include the base uri for assets of this extension\n\t */\n\tIncludeAssetUri = 0x80,\n\n\t/**\n\t * Include the statistics associated with this extension\n\t */\n\tIncludeStatistics = 0x100,\n\n\t/**\n\t * When retrieving versions from a query, only include the latest\n\t * version of the extensions that matched. This is useful when the\n\t * caller doesn't need all the published versions. It will save a\n\t * significant size in the returned payload.\n\t */\n\tIncludeLatestVersionOnly = 0x200,\n\n\t/**\n\t * This flag switches the asset uri to use GetAssetByName instead of CDN\n\t * When this is used, values of base asset uri and base asset uri fallback are switched\n\t * When this is used, source of asset files are pointed to Gallery service always even if CDN is available\n\t */\n\tUnpublished = 0x1000,\n\n\t/**\n\t * Include the details if an extension is in conflict list or not\n\t */\n\tIncludeNameConflictInfo = 0x8000,\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source',\n\tSignature: 'Microsoft.VisualStudio.Services.VsixSignature'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tPreRelease: 'Microsoft.VisualStudio.Code.PreRelease',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages',\n\tWebExtension: 'Microsoft.VisualStudio.Code.WebExtension',\n\tSponsorLink: 'Microsoft.VisualStudio.Code.SponsorLink'\n};\n\ninterface ICriterium {\n\treadonly filterType: FilterType;\n\treadonly value?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\treadonly pageNumber: number;\n\treadonly pageSize: number;\n\treadonly sortBy: SortBy;\n\treadonly sortOrder: SortOrder;\n\treadonly flags: Flags;\n\treadonly criteria: ICriterium[];\n\treadonly assetTypes: string[];\n\treadonly source?: string;\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\ntype GalleryServiceQueryClassification = {\n\towner: 'sandy081';\n\tcomment: 'Information about Marketplace query and its response';\n\treadonly filterTypes: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Filter types used in the query.' };\n\treadonly flags: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Flags passed in the query.' };\n\treadonly sortBy: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'sorted by option passed in the query' };\n\treadonly sortOrder: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'sort order option passed in the query' };\n\treadonly pageNumber: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'requested page number in the query' };\n\treadonly duration: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; 'isMeasurement': true; comment: 'amount of time taken by the query request' };\n\treadonly success: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'whether the query reques is success or not' };\n\treadonly requestBodySize: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'size of the request body' };\n\treadonly responseBodySize?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'size of the response body' };\n\treadonly statusCode?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'status code of the response' };\n\treadonly errorCode?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'error code of the response' };\n\treadonly count?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'total number of extensions matching the query' };\n\treadonly source?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'source that requested this query, eg., recommendations, viewlet' };\n\treadonly searchTextLength?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'length of the search text in the query' };\n};\n\ntype QueryTelemetryData = {\n\treadonly flags: number;\n\treadonly filterTypes: string[];\n\treadonly sortBy: string;\n\treadonly sortOrder: string;\n\treadonly pageNumber: string;\n\treadonly source?: string;\n\treadonly searchTextLength?: number;\n};\n\ntype GalleryServiceQueryEvent = QueryTelemetryData & {\n\treadonly duration: number;\n\treadonly success: boolean;\n\treadonly requestBodySize: string;\n\treadonly responseBodySize?: string;\n\treadonly statusCode?: string;\n\treadonly errorCode?: string;\n\treadonly count?: string;\n};\n\ntype GalleryServiceAdditionalQueryClassification = {\n\towner: 'sandy081';\n\tcomment: 'Response information about the additional query to the Marketplace for fetching all versions to get release version';\n\treadonly duration: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; 'isMeasurement': true; comment: 'Amount of time taken by the additional query' };\n\treadonly count: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Total number of extensions returned by this additional query' };\n};\n\ntype GalleryServiceAdditionalQueryEvent = {\n\treadonly duration: number;\n\treadonly count: number;\n};\n\ninterface IExtensionCriteria {\n\treadonly targetPlatform: TargetPlatform;\n\treadonly compatible: boolean;\n\treadonly includePreRelease: boolean | (IExtensionIdentifier & { includePreRelease: boolean })[];\n\treadonly versions?: (IExtensionIdentifier & { version: string })[];\n}\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\tget criteria(): ICriterium[] { return this.state.criteria; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query({ ...this.state, pageNumber, pageSize });\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.length ? values.map(value => ({ filterType, value })) : [{ filterType }]\n\t\t];\n\n\t\treturn new Query({ ...this.state, criteria });\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query({ ...this.state, sortBy });\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query({ ...this.state, sortOrder });\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query({ ...this.state, flags: flags.reduce<number>((r, f) => r | f, 0) });\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query({ ...this.state, assetTypes });\n\t}\n\n\twithSource(source: string): Query {\n\t\treturn new Query({ ...this.state, source });\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n\n\tget telemetryData(): QueryTelemetryData {\n\t\treturn {\n\t\t\tfilterTypes: this.state.criteria.map(criterium => String(criterium.filterType)),\n\t\t\tflags: this.state.flags,\n\t\t\tsortBy: String(this.sortBy),\n\t\t\tsortOrder: String(this.sortOrder),\n\t\t\tpageNumber: String(this.pageNumber),\n\t\t\tsource: this.state.source,\n\t\t\tsearchTextLength: this.searchText.length\n\t\t};\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\\\w.]+))(:(//)?)([\\\\w.@:/\\\\-~]+)(.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true${version.targetPlatform ? `&targetPlatform=${version.targetPlatform}` : ''}`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}${version.targetPlatform ? `?targetPlatform=${version.targetPlatform}` : ''}`\n\t};\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? {\n\t\turi: `${version.assetUri}/${type}${version.targetPlatform ? `?targetPlatform=${version.targetPlatform}` : ''}`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${type}${version.targetPlatform ? `?targetPlatform=${version.targetPlatform}` : ''}`\n\t} : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction isPreReleaseVersion(version: IRawGalleryExtensionVersion): boolean {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.PreRelease) : [];\n\treturn values.length > 0 && values[0].value === 'true';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getSponsorLink(version: IRawGalleryExtensionVersion): string | undefined {\n\treturn version.properties?.find(p => p.key === PropertyType.SponsorLink)?.value;\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction getTargetPlatformForExtensionVersion(version: IRawGalleryExtensionVersion): TargetPlatform {\n\treturn version.targetPlatform ? toTargetPlatform(version.targetPlatform) : TargetPlatform.UNDEFINED;\n}\n\nfunction getAllTargetPlatforms(rawGalleryExtension: IRawGalleryExtension): TargetPlatform[] {\n\tconst allTargetPlatforms = distinct(rawGalleryExtension.versions.map(getTargetPlatformForExtensionVersion));\n\n\t// Is a web extension only if it has WEB_EXTENSION_TAG\n\tconst isWebExtension = !!rawGalleryExtension.tags?.includes(WEB_EXTENSION_TAG);\n\n\t// Include Web Target Platform only if it is a web extension\n\tconst webTargetPlatformIndex = allTargetPlatforms.indexOf(TargetPlatform.WEB);\n\tif (isWebExtension) {\n\t\tif (webTargetPlatformIndex === -1) {\n\t\t\t// Web extension but does not has web target platform -> add it\n\t\t\tallTargetPlatforms.push(TargetPlatform.WEB);\n\t\t}\n\t} else {\n\t\tif (webTargetPlatformIndex !== -1) {\n\t\t\t// Not a web extension but has web target platform -> remove it\n\t\t\tallTargetPlatforms.splice(webTargetPlatformIndex, 1);\n\t\t}\n\t}\n\n\treturn allTargetPlatforms;\n}\n\nexport function sortExtensionVersions(versions: IRawGalleryExtensionVersion[], preferredTargetPlatform: TargetPlatform): IRawGalleryExtensionVersion[] {\n\t/* It is expected that versions from Marketplace are sorted by version. So we are just sorting by preferred targetPlatform */\n\tconst fallbackTargetPlatforms = getFallbackTargetPlarforms(preferredTargetPlatform);\n\tfor (let index = 0; index < versions.length; index++) {\n\t\tconst version = versions[index];\n\t\tif (version.version === versions[index - 1]?.version) {\n\t\t\tlet insertionIndex = index;\n\t\t\tconst versionTargetPlatform = getTargetPlatformForExtensionVersion(version);\n\t\t\t/* put it at the beginning */\n\t\t\tif (versionTargetPlatform === preferredTargetPlatform) {\n\t\t\t\twhile (insertionIndex > 0 && versions[insertionIndex - 1].version === version.version) { insertionIndex--; }\n\t\t\t}\n\t\t\t/* put it after version with preferred targetPlatform or at the beginning */\n\t\t\telse if (fallbackTargetPlatforms.includes(versionTargetPlatform)) {\n\t\t\t\twhile (insertionIndex > 0 && versions[insertionIndex - 1].version === version.version && getTargetPlatformForExtensionVersion(versions[insertionIndex - 1]) !== preferredTargetPlatform) { insertionIndex--; }\n\t\t\t}\n\t\t\tif (insertionIndex !== index) {\n\t\t\t\tversions.splice(index, 1);\n\t\t\t\tversions.splice(insertionIndex, 0, version);\n\t\t\t}\n\t\t}\n\t}\n\treturn versions;\n}\n\nfunction setTelemetry(extension: IGalleryExtension, index: number, querySource?: string): void {\n\t/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"queryActivityId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n\t*/\n\textension.telemetryData = { index, querySource, queryActivityId: extension.queryContext?.[ACTIVITY_HEADER_NAME] };\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, allTargetPlatforms: TargetPlatform[], queryContext?: IStringDictionary<any>): IGalleryExtension {\n\tconst latestVersion = galleryExtension.versions[0];\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getVersionAsset(version, AssetType.Icon),\n\t\tsignature: getVersionAsset(version, AssetType.Signature),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tpublisherDomain: galleryExtension.publisher.domain ? { link: galleryExtension.publisher.domain, verified: !!galleryExtension.publisher.isDomainVerified } : undefined,\n\t\tpublisherSponsorLink: getSponsorLink(latestVersion),\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tcategories: galleryExtension.categories || [],\n\t\ttags: galleryExtension.tags || [],\n\t\treleaseDate: Date.parse(galleryExtension.releaseDate),\n\t\tlastUpdated: Date.parse(galleryExtension.lastUpdated),\n\t\tallTargetPlatforms,\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version),\n\t\t\ttargetPlatform: getTargetPlatformForExtensionVersion(version),\n\t\t\tisPreReleaseVersion: isPreReleaseVersion(version)\n\t\t},\n\t\thasPreReleaseVersion: isPreReleaseVersion(latestVersion),\n\t\thasReleaseVersion: true,\n\t\tpreview: getIsPreview(galleryExtension.flags),\n\t\tisSigned: !!assets.signature,\n\t\tqueryContext\n\t};\n}\n\ninterface IRawExtensionsControlManifest {\n\tmalicious: string[];\n\tmigrateToPreRelease?: IStringDictionary<{\n\t\tid: string;\n\t\tdisplayName: string;\n\t\tmigrateStorage?: boolean;\n\t\tengine?: string;\n\t}>;\n\tdeprecated?: IStringDictionary<boolean | {\n\t\tdisallowInstall?: boolean;\n\t\textension?: {\n\t\t\tid: string;\n\t\t\tdisplayName: string;\n\t\t};\n\t\tsettings?: string[];\n\t\tadditionalInfo?: string;\n\t}>;\n\tsearch?: ISearchPrefferedResults[];\n}\n\nabstract class AbstractExtensionGalleryService implements IExtensionGalleryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly extensionsGalleryUrl: string | undefined;\n\tprivate readonly extensionsGallerySearchUrl: string | undefined;\n\tprivate readonly extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<IStringDictionary<string>>;\n\n\tconstructor(\n\t\tstorageService: IStorageService | undefined,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tconst isPPEEnabled = config?.servicePPEUrl && configurationService.getValue('_extensionsGallery.enablePPE');\n\t\tthis.extensionsGalleryUrl = isPPEEnabled ? config.servicePPEUrl : config?.serviceUrl;\n\t\tthis.extensionsGallerySearchUrl = isPPEEnabled ? undefined : config?.searchUrl;\n\t\tthis.extensionsControlUrl = config?.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(\n\t\t\tproductService.version,\n\t\t\tproductService,\n\t\t\tthis.environmentService,\n\t\t\tthis.configurationService,\n\t\t\tthis.fileService,\n\t\t\tstorageService,\n\t\t\tthis.telemetryService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetExtensions(extensionInfos: ReadonlyArray<IExtensionInfo>, token: CancellationToken): Promise<IGalleryExtension[]>;\n\tgetExtensions(extensionInfos: ReadonlyArray<IExtensionInfo>, options: IExtensionQueryOptions, token: CancellationToken): Promise<IGalleryExtension[]>;\n\tasync getExtensions(extensionInfos: ReadonlyArray<IExtensionInfo>, arg1: any, arg2?: any): Promise<IGalleryExtension[]> {\n\t\tconst options = CancellationToken.isCancellationToken(arg1) ? {} : arg1 as IExtensionQueryOptions;\n\t\tconst token = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2 as CancellationToken;\n\t\tconst names: string[] = []; const ids: string[] = [], includePreReleases: (IExtensionIdentifier & { includePreRelease: boolean })[] = [], versions: (IExtensionIdentifier & { version: string })[] = [];\n\t\tlet isQueryForReleaseVersionFromPreReleaseVersion = true;\n\t\tfor (const extensionInfo of extensionInfos) {\n\t\t\tif (extensionInfo.uuid) {\n\t\t\t\tids.push(extensionInfo.uuid);\n\t\t\t} else {\n\t\t\t\tnames.push(extensionInfo.id);\n\t\t\t}\n\t\t\t// Set includePreRelease to true if version is set, because the version can be a pre-release version\n\t\t\tconst includePreRelease = !!(extensionInfo.version || extensionInfo.preRelease);\n\t\t\tincludePreReleases.push({ id: extensionInfo.id, uuid: extensionInfo.uuid, includePreRelease });\n\t\t\tif (extensionInfo.version) {\n\t\t\t\tversions.push({ id: extensionInfo.id, uuid: extensionInfo.uuid, version: extensionInfo.version });\n\t\t\t}\n\t\t\tisQueryForReleaseVersionFromPreReleaseVersion = isQueryForReleaseVersionFromPreReleaseVersion && (!!extensionInfo.hasPreRelease && !includePreRelease);\n\t\t}\n\n\t\tif (!ids.length && !names.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet query = new Query().withPage(1, extensionInfos.length);\n\t\tif (ids.length) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...ids);\n\t\t}\n\t\tif (names.length) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...names);\n\t\t}\n\t\tif (options.queryAllVersions || isQueryForReleaseVersionFromPreReleaseVersion /* Inlcude all versions if every requested extension is for release version and has pre-release version  */) {\n\t\t\tquery = query.withFlags(query.flags, Flags.IncludeVersions);\n\t\t}\n\t\tif (options.source) {\n\t\t\tquery = query.withSource(options.source);\n\t\t}\n\n\t\tconst { extensions } = await this.queryGalleryExtensions(query, { targetPlatform: options.targetPlatform ?? CURRENT_TARGET_PLATFORM, includePreRelease: includePreReleases, versions, compatible: !!options.compatible }, token);\n\t\tif (options.source) {\n\t\t\textensions.forEach((e, index) => setTelemetry(e, index, options.source));\n\t\t}\n\t\treturn extensions;\n\t}\n\n\tasync getCompatibleExtension(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtension | null> {\n\t\tif (isNotWebExtensionInWebTargetPlatform(extension.allTargetPlatforms, targetPlatform)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (await this.isExtensionCompatible(extension, includePreRelease, targetPlatform)) {\n\t\t\treturn extension;\n\t\t}\n\t\tconst query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\tconst { extensions } = await this.queryGalleryExtensions(query, { targetPlatform, compatible: true, includePreRelease }, CancellationToken.None);\n\t\treturn extensions[0] || null;\n\t}\n\n\tasync isExtensionCompatible(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<boolean> {\n\t\tif (!isTargetPlatformCompatible(extension.properties.targetPlatform, extension.allTargetPlatforms, targetPlatform)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!includePreRelease && extension.properties.isPreReleaseVersion) {\n\t\t\t// Pre-releases are not allowed when include pre-release flag is not set\n\t\t\treturn false;\n\t\t}\n\n\t\tlet engine = extension.properties.engine;\n\t\tif (!engine) {\n\t\t\tconst manifest = await this.getManifest(extension, CancellationToken.None);\n\t\t\tif (!manifest) {\n\t\t\t\tthrow new Error('Manifest was not found');\n\t\t\t}\n\t\t\tengine = manifest.engines.vscode;\n\t\t}\n\t\treturn isEngineValid(engine, this.productService.version, this.productService.date);\n\t}\n\n\tprivate async isValidVersion(rawGalleryExtensionVersion: IRawGalleryExtensionVersion, versionType: 'release' | 'prerelease' | 'any', compatible: boolean, allTargetPlatforms: TargetPlatform[], targetPlatform: TargetPlatform): Promise<boolean> {\n\t\tif (!isTargetPlatformCompatible(getTargetPlatformForExtensionVersion(rawGalleryExtensionVersion), allTargetPlatforms, targetPlatform)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (versionType !== 'any' && isPreReleaseVersion(rawGalleryExtensionVersion) !== (versionType === 'prerelease')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (compatible) {\n\t\t\ttry {\n\t\t\t\tconst engine = await this.getEngine(rawGalleryExtensionVersion);\n\t\t\t\tif (!isEngineValid(engine, this.productService.version, this.productService.date)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(`Error while getting the engine for the version ${rawGalleryExtensionVersion.version}.`, getErrorMessage(error));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync query(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>> {\n\t\tlet text = options.text || '';\n\t\tconst pageSize = options.pageSize ?? 50;\n\n\t\tlet query = new Query()\n\t\t\t.withPage(1, pageSize);\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use featured filter\n\t\t\ttext = text.replace(/\\bfeatured(\\s+|\\b|$)/g, () => {\n\t\t\t\tquery = query.withFilter(FilterType.Featured);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\tif (options.source) {\n\t\t\tquery = query.withSource(options.source);\n\t\t}\n\n\t\tconst runQuery = async (query: Query, token: CancellationToken) => {\n\t\t\tconst { extensions, total } = await this.queryGalleryExtensions(query, { targetPlatform: CURRENT_TARGET_PLATFORM, compatible: false, includePreRelease: !!options.includePreRelease }, token);\n\t\t\textensions.forEach((e, index) => setTelemetry(e, ((query.pageNumber - 1) * query.pageSize) + index, options.source));\n\t\t\treturn { extensions, total };\n\t\t};\n\t\tconst { extensions, total } = await runQuery(query, token);\n\t\tconst getPage = async (pageIndex: number, ct: CancellationToken) => {\n\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\tthrow new CancellationError();\n\t\t\t}\n\t\t\tconst { extensions } = await runQuery(query.withPage(pageIndex + 1), ct);\n\t\t\treturn extensions;\n\t\t};\n\n\t\treturn { firstPage: extensions, total, pageSize: query.pageSize, getPage } as IPager<IGalleryExtension>;\n\t}\n\n\tprivate async queryGalleryExtensions(query: Query, criteria: IExtensionCriteria, token: CancellationToken): Promise<{ extensions: IGalleryExtension[]; total: number }> {\n\t\tconst flags = query.flags;\n\n\t\t/**\n\t\t * If both version flags (IncludeLatestVersionOnly and IncludeVersions) are included, then only include latest versions (IncludeLatestVersionOnly) flag.\n\t\t */\n\t\tif (!!(query.flags & Flags.IncludeLatestVersionOnly) && !!(query.flags & Flags.IncludeVersions)) {\n\t\t\tquery = query.withFlags(query.flags & ~Flags.IncludeVersions, Flags.IncludeLatestVersionOnly);\n\t\t}\n\n\t\t/**\n\t\t * If version flags (IncludeLatestVersionOnly and IncludeVersions) are not included, default is to query for latest versions (IncludeLatestVersionOnly).\n\t\t */\n\t\tif (!(query.flags & Flags.IncludeLatestVersionOnly) && !(query.flags & Flags.IncludeVersions)) {\n\t\t\tquery = query.withFlags(query.flags, Flags.IncludeLatestVersionOnly);\n\t\t}\n\n\t\t/**\n\t\t * If versions criteria exist, then remove IncludeLatestVersionOnly flag and add IncludeVersions flag.\n\t\t */\n\t\tif (criteria.versions?.length) {\n\t\t\tquery = query.withFlags(query.flags & ~Flags.IncludeLatestVersionOnly, Flags.IncludeVersions);\n\t\t}\n\n\t\t/**\n\t\t * Add necessary extension flags\n\t\t */\n\t\tquery = query.withFlags(query.flags, Flags.IncludeAssetUri, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeStatistics, Flags.IncludeVersionProperties);\n\t\tconst { galleryExtensions: rawGalleryExtensions, total, context } = await this.queryRawGalleryExtensions(query, token);\n\n\t\tconst hasAllVersions: boolean = !(query.flags & Flags.IncludeLatestVersionOnly);\n\t\tif (hasAllVersions) {\n\t\t\tconst extensions: IGalleryExtension[] = [];\n\t\t\tfor (const rawGalleryExtension of rawGalleryExtensions) {\n\t\t\t\tconst extension = await this.toGalleryExtensionWithCriteria(rawGalleryExtension, criteria, context);\n\t\t\t\tif (extension) {\n\t\t\t\t\textensions.push(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { extensions, total };\n\t\t}\n\n\t\tconst result: [number, IGalleryExtension][] = [];\n\t\tconst needAllVersions = new Map<string, number>();\n\t\tfor (let index = 0; index < rawGalleryExtensions.length; index++) {\n\t\t\tconst rawGalleryExtension = rawGalleryExtensions[index];\n\t\t\tconst extensionIdentifier = { id: getGalleryExtensionId(rawGalleryExtension.publisher.publisherName, rawGalleryExtension.extensionName), uuid: rawGalleryExtension.extensionId };\n\t\t\tconst includePreRelease = isBoolean(criteria.includePreRelease) ? criteria.includePreRelease : !!criteria.includePreRelease.find(extensionIdentifierWithPreRelease => areSameExtensions(extensionIdentifierWithPreRelease, extensionIdentifier))?.includePreRelease;\n\t\t\tif (criteria.compatible && isNotWebExtensionInWebTargetPlatform(getAllTargetPlatforms(rawGalleryExtension), criteria.targetPlatform)) {\n\t\t\t\t/** Skip if requested for a web-compatible extension and it is not a web extension.\n\t\t\t\t * All versions are not needed in this case\n\t\t\t\t*/\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst extension = await this.toGalleryExtensionWithCriteria(rawGalleryExtension, criteria, context);\n\t\t\tif (!extension\n\t\t\t\t/** Need all versions if the extension is a pre-release version but\n\t\t\t\t * \t\t- the query is to look for a release version or\n\t\t\t\t * \t\t- the extension has no release version\n\t\t\t\t * Get all versions to get or check the release version\n\t\t\t\t*/\n\t\t\t\t|| (extension.properties.isPreReleaseVersion && (!includePreRelease || !extension.hasReleaseVersion))\n\t\t\t\t/**\n\t\t\t\t * Need all versions if the extension is a release version with a different target platform than requested and also has a pre-release version\n\t\t\t\t * Because, this is a platform specific extension and can have a newer release version supporting this platform.\n\t\t\t\t * See https://github.com/microsoft/vscode/issues/139628\n\t\t\t\t*/\n\t\t\t\t|| (!extension.properties.isPreReleaseVersion && extension.properties.targetPlatform !== criteria.targetPlatform && extension.hasPreReleaseVersion)\n\t\t\t) {\n\t\t\t\tneedAllVersions.set(rawGalleryExtension.extensionId, index);\n\t\t\t} else {\n\t\t\t\tresult.push([index, extension]);\n\t\t\t}\n\t\t}\n\n\t\tif (needAllVersions.size) {\n\t\t\tconst stopWatch = new StopWatch();\n\t\t\tconst query = new Query()\n\t\t\t\t.withFlags(flags & ~Flags.IncludeLatestVersionOnly, Flags.IncludeVersions)\n\t\t\t\t.withPage(1, needAllVersions.size)\n\t\t\t\t.withFilter(FilterType.ExtensionId, ...needAllVersions.keys());\n\t\t\tconst { extensions } = await this.queryGalleryExtensions(query, criteria, token);\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceAdditionalQueryEvent, GalleryServiceAdditionalQueryClassification>('galleryService:additionalQuery', {\n\t\t\t\tduration: stopWatch.elapsed(),\n\t\t\t\tcount: needAllVersions.size\n\t\t\t});\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tconst index = needAllVersions.get(extension.identifier.uuid)!;\n\t\t\t\tresult.push([index, extension]);\n\t\t\t}\n\t\t}\n\n\t\treturn { extensions: result.sort((a, b) => a[0] - b[0]).map(([, extension]) => extension), total };\n\t}\n\n\tprivate async toGalleryExtensionWithCriteria(rawGalleryExtension: IRawGalleryExtension, criteria: IExtensionCriteria, queryContext?: IStringDictionary<any>): Promise<IGalleryExtension | null> {\n\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(rawGalleryExtension.publisher.publisherName, rawGalleryExtension.extensionName), uuid: rawGalleryExtension.extensionId };\n\t\tconst version = criteria.versions?.find(extensionIdentifierWithVersion => areSameExtensions(extensionIdentifierWithVersion, extensionIdentifier))?.version;\n\t\tconst includePreRelease = isBoolean(criteria.includePreRelease) ? criteria.includePreRelease : !!criteria.includePreRelease.find(extensionIdentifierWithPreRelease => areSameExtensions(extensionIdentifierWithPreRelease, extensionIdentifier))?.includePreRelease;\n\t\tconst allTargetPlatforms = getAllTargetPlatforms(rawGalleryExtension);\n\t\tconst rawGalleryExtensionVersions = sortExtensionVersions(rawGalleryExtension.versions, criteria.targetPlatform);\n\n\t\tif (criteria.compatible && isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, criteria.targetPlatform)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let index = 0; index < rawGalleryExtensionVersions.length; index++) {\n\t\t\tconst rawGalleryExtensionVersion = rawGalleryExtensionVersions[index];\n\t\t\tif (version && rawGalleryExtensionVersion.version !== version) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Allow any version if includePreRelease flag is set otherwise only release versions are allowed\n\t\t\tif (await this.isValidVersion(rawGalleryExtensionVersion, includePreRelease ? 'any' : 'release', criteria.compatible, allTargetPlatforms, criteria.targetPlatform)) {\n\t\t\t\treturn toExtension(rawGalleryExtension, rawGalleryExtensionVersion, allTargetPlatforms, queryContext);\n\t\t\t}\n\t\t\tif (version && rawGalleryExtensionVersion.version === version) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (version || criteria.compatible) {\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Fallback: Return the latest version\n\t\t * This can happen when the extension does not have a release version or does not have a version compatible with the given target platform.\n\t\t */\n\t\treturn toExtension(rawGalleryExtension, rawGalleryExtension.versions[0], allTargetPlatforms);\n\t}\n\n\tprivate async queryRawGalleryExtensions(query: Query, token: CancellationToken): Promise<IRawGalleryExtensionsResult> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tquery = query\n\t\t\t/* Always exclude non validated extensions */\n\t\t\t.withFlags(query.flags, Flags.ExcludeNonValidated)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t/* Always exclude unpublished extensions */\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst data = JSON.stringify(query.raw);\n\t\tconst headers = {\n\t\t\t...commonHeaders,\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t'Content-Length': String(data.length),\n\t\t};\n\n\t\tconst stopWatch = new StopWatch();\n\t\tlet context: IRequestContext | undefined, error: any, total: number = 0;\n\n\t\ttry {\n\t\t\tcontext = await this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.extensionsGallerySearchUrl && query.criteria.some(c => c.filterType === FilterType.SearchText) ? this.extensionsGallerySearchUrl : this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token);\n\n\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\treturn { galleryExtensions: [], total };\n\t\t\t}\n\n\t\t\tconst result = await asJson<IRawGalleryQueryResult>(context);\n\t\t\tif (result) {\n\t\t\t\tconst r = result.results[0];\n\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\ttotal = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\treturn {\n\t\t\t\t\tgalleryExtensions,\n\t\t\t\t\ttotal,\n\t\t\t\t\tcontext: {\n\t\t\t\t\t\t[ACTIVITY_HEADER_NAME]: context.res.headers['activityid']\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn { galleryExtensions: [], total };\n\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', {\n\t\t\t\t...query.telemetryData,\n\t\t\t\trequestBodySize: String(data.length),\n\t\t\t\tduration: stopWatch.elapsed(),\n\t\t\t\tsuccess: !!context && isSuccess(context),\n\t\t\t\tresponseBodySize: context?.res.headers['Content-Length'],\n\t\t\t\tstatusCode: context ? String(context.res.statusCode) : undefined,\n\t\t\t\terrorCode: error\n\t\t\t\t\t? isCancellationError(error) ? 'canceled' : getErrorMessage(error).startsWith('XHR timeout') ? 'timeout' : 'failed'\n\t\t\t\t\t: undefined,\n\t\t\t\tcount: String(total)\n\t\t\t});\n\t\t}\n\t}\n\n\tasync reportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst url = isWeb ? this.api(`/itemName/${publisher}.${name}/version/${version}/statType/${type === StatisticType.Install ? '1' : '3'}/vscodewebextension`) : this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`);\n\t\tconst Accept = isWeb ? 'api-version=6.1-preview.1' : '*/*;api-version=4.0-preview.1';\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst headers = { ...commonHeaders, Accept };\n\t\ttry {\n\t\t\tawait this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl,\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None);\n\t\t} catch (error) { /* Ignore */ }\n\t}\n\n\tasync download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"owner\": \"sandy081\",\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', { ...data, duration });\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}${URI.parse(extension.assets.download.uri).query ? '&' : '?'}${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}${URI.parse(extension.assets.download.fallbackUri).query ? '&' : '?'}${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\tconst headers: IHeaders | undefined = extension.queryContext?.[ACTIVITY_HEADER_NAME] ? { [ACTIVITY_HEADER_NAME]: extension.queryContext[ACTIVITY_HEADER_NAME] } : undefined;\n\t\tconst context = await this.getAsset(downloadAsset, headers ? { headers } : undefined);\n\t\tawait this.fileService.writeFile(location, context.stream);\n\t\tlog(new Date().getTime() - startTime);\n\t}\n\n\tasync downloadSignatureArchive(extension: IGalleryExtension, location: URI): Promise<void> {\n\t\tif (!extension.assets.signature) {\n\t\t\tthrow new Error('No signature asset found');\n\t\t}\n\n\t\tthis.logService.trace('ExtensionGalleryService#downloadSignatureArchive', extension.identifier.id);\n\n\t\tconst context = await this.getAsset(extension.assets.signature);\n\t\tawait this.fileService.writeFile(location, context.stream);\n\t}\n\n\tasync getReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\tconst context = await this.getAsset(extension.assets.readme, {}, token);\n\t\t\tconst content = await asTextOrError(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\tconst context = await this.getAsset(extension.assets.manifest, {}, token);\n\t\t\tconst text = await asTextOrError(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getManifestFromRawExtensionVersion(rawExtensionVersion: IRawGalleryExtensionVersion, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tconst manifestAsset = getVersionAsset(rawExtensionVersion, AssetType.Manifest);\n\t\tif (!manifestAsset) {\n\t\t\tthrow new Error('Manifest was not found');\n\t\t}\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\tconst context = await this.getAsset(manifestAsset, { headers });\n\t\treturn await asJson<IExtensionManifest>(context);\n\t}\n\n\tasync getCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\tconst context = await this.getAsset(asset[1]);\n\t\t\tconst text = await asTextOrError(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\tconst context = await this.getAsset(extension.assets.changelog, {}, token);\n\t\t\tconst content = await asTextOrError(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getAllCompatibleVersions(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1);\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryRawGalleryExtensions(query, CancellationToken.None);\n\t\tif (!galleryExtensions.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst allTargetPlatforms = getAllTargetPlatforms(galleryExtensions[0]);\n\t\tif (isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, targetPlatform)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst validVersions: IRawGalleryExtensionVersion[] = [];\n\t\tawait Promise.all(galleryExtensions[0].versions.map(async (version) => {\n\t\t\ttry {\n\t\t\t\tif (await this.isValidVersion(version, includePreRelease ? 'any' : 'release', true, allTargetPlatforms, targetPlatform)) {\n\t\t\t\t\tvalidVersions.push(version);\n\t\t\t\t}\n\t\t\t} catch (error) { /* Ignore error and skip version */ }\n\t\t}));\n\n\t\tconst result: IGalleryExtensionVersion[] = [];\n\t\tconst seen = new Set<string>();\n\t\tfor (const version of sortExtensionVersions(validVersions, targetPlatform)) {\n\t\t\tif (!seen.has(version.version)) {\n\t\t\t\tseen.add(version.version);\n\t\t\t\tresult.push({ version: version.version, date: version.lastUpdated, isPreReleaseVersion: isPreReleaseVersion(version) });\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst baseOptions = { type: 'GET' };\n\t\tconst headers = { ...commonHeaders, ...(options.headers || {}) };\n\t\toptions = { ...options, ...baseOptions, headers };\n\n\t\tconst url = asset.uri;\n\t\tconst fallbackUrl = asset.fallbackUri;\n\t\tconst firstOptions = { ...options, url };\n\n\t\ttry {\n\t\t\tconst context = await this.requestService.request(firstOptions, token);\n\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\treturn context;\n\t\t\t}\n\t\t\tconst message = await asTextOrError(context);\n\t\t\tthrow new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`);\n\t\t} catch (err) {\n\t\t\tif (isCancellationError(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\tconst message = getErrorMessage(err);\n\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\towner: 'sandy081';\n\t\t\t\tcomment: 'Fallback request information when the primary asset request to CDN fails';\n\t\t\t\turl: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'asset url that failed' };\n\t\t\t\tmessage: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'error message' };\n\t\t\t};\n\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\turl: string;\n\t\t\t\tmessage: string;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\tconst fallbackOptions = { ...options, url: fallbackUrl };\n\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t}\n\t}\n\n\tprivate async getEngine(rawExtensionVersion: IRawGalleryExtensionVersion): Promise<string> {\n\t\tlet engine = getEngine(rawExtensionVersion);\n\t\tif (!engine) {\n\t\t\tconst manifest = await this.getManifestFromRawExtensionVersion(rawExtensionVersion, CancellationToken.None);\n\t\t\tif (!manifest) {\n\t\t\t\tthrow new Error('Manifest was not found');\n\t\t\t}\n\t\t\tengine = manifest.engines.vscode;\n\t\t}\n\t\treturn engine;\n\t}\n\n\tasync getExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn { malicious: [], deprecated: {}, search: [] };\n\t\t}\n\n\t\tconst context = await this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None);\n\t\tif (context.res.statusCode !== 200) {\n\t\t\tthrow new Error('Could not get extensions report.');\n\t\t}\n\n\t\tconst result = await asJson<IRawExtensionsControlManifest>(context);\n\t\tconst malicious: IExtensionIdentifier[] = [];\n\t\tconst deprecated: IStringDictionary<IDeprecationInfo> = {};\n\t\tconst search: ISearchPrefferedResults[] = [];\n\t\tif (result) {\n\t\t\tfor (const id of result.malicious) {\n\t\t\t\tmalicious.push({ id });\n\t\t\t}\n\t\t\tif (result.migrateToPreRelease) {\n\t\t\t\tfor (const [unsupportedPreReleaseExtensionId, preReleaseExtensionInfo] of Object.entries(result.migrateToPreRelease)) {\n\t\t\t\t\tif (!preReleaseExtensionInfo.engine || isEngineValid(preReleaseExtensionInfo.engine, this.productService.version, this.productService.date)) {\n\t\t\t\t\t\tdeprecated[unsupportedPreReleaseExtensionId.toLowerCase()] = {\n\t\t\t\t\t\t\tdisallowInstall: true,\n\t\t\t\t\t\t\textension: {\n\t\t\t\t\t\t\t\tid: preReleaseExtensionInfo.id,\n\t\t\t\t\t\t\t\tdisplayName: preReleaseExtensionInfo.displayName,\n\t\t\t\t\t\t\t\tautoMigrate: { storage: !!preReleaseExtensionInfo.migrateStorage },\n\t\t\t\t\t\t\t\tpreRelease: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (result.deprecated) {\n\t\t\t\tfor (const [deprecatedExtensionId, deprecationInfo] of Object.entries(result.deprecated)) {\n\t\t\t\t\tif (deprecationInfo) {\n\t\t\t\t\t\tdeprecated[deprecatedExtensionId.toLowerCase()] = isBoolean(deprecationInfo) ? {} : deprecationInfo;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (result.search) {\n\t\t\t\tfor (const s of result.search) {\n\t\t\t\t\tsearch.push(s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { malicious, deprecated, search };\n\t}\n}\n\nexport class ExtensionGalleryService extends AbstractExtensionGalleryService {\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(storageService, requestService, logService, environmentService, telemetryService, fileService, productService, configurationService);\n\t}\n}\n\nexport class ExtensionGalleryServiceWithNoStorageService extends AbstractExtensionGalleryService {\n\n\tconstructor(\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(undefined, requestService, logService, environmentService, telemetryService, fileService, productService, configurationService);\n\t}\n}\n"]}