{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/extensionManagement/test/node/installGalleryExtensionTask.test.ts"],"names":[],"mappings":"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","file":"installGalleryExtensionTask.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { platform } from 'vs/base/common/platform';\nimport { arch } from 'vs/base/common/process';\nimport { joinPath } from 'vs/base/common/resources';\nimport { isBoolean } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { mock } from 'vs/base/test/common/mock';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { getTargetPlatform, IExtensionGalleryService, IGalleryExtension, IGalleryExtensionAssets, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IExtensionsProfileScannerService } from 'vs/platform/extensionManagement/common/extensionsProfileScannerService';\nimport { IExtensionsScannerService } from 'vs/platform/extensionManagement/common/extensionsScannerService';\nimport { ExtensionsDownloader } from 'vs/platform/extensionManagement/node/extensionDownloader';\nimport { ExtensionsScanner, InstallGalleryExtensionTask } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IExtensionSignatureVerificationService } from 'vs/platform/extensionManagement/node/extensionSignatureVerificationService';\nimport { ExtensionsProfileScannerService } from 'vs/platform/extensionManagement/node/extensionsProfileScannerService';\nimport { ExtensionsScannerService } from 'vs/platform/extensionManagement/node/extensionsScannerService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { IUserDataProfilesService, UserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\n\nconst ROOT = URI.file('tests').with({ scheme: 'vscode-tests' });\n\nclass TestExtensionsScanner extends mock<ExtensionsScanner>() {\n\toverride async scanExtensions(): Promise<ILocalExtension[]> { return []; }\n}\n\nclass TestExtensionSignatureVerificationService extends mock<IExtensionSignatureVerificationService>() {\n\n\tconstructor(\n\t\tprivate readonly verificationResult: string | boolean,\n\t\tprivate readonly didExecute: boolean) {\n\t\tsuper();\n\t}\n\n\toverride async verify(): Promise<boolean> {\n\t\tif (isBoolean(this.verificationResult)) {\n\t\t\treturn this.verificationResult;\n\t\t}\n\t\tconst error = Error(this.verificationResult);\n\t\t(error as any).code = this.verificationResult;\n\t\t(error as any).didExecute = this.didExecute;\n\t\tthrow error;\n\t}\n}\n\nclass TestInstallGalleryExtensionTask extends InstallGalleryExtensionTask {\n\n\tinstalled = false;\n\n\tconstructor(\n\t\textension: IGalleryExtension,\n\t\textensionDownloader: ExtensionsDownloader,\n\t\tdisposables: DisposableStore,\n\t) {\n\t\tconst instantiationService = disposables.add(new TestInstantiationService());\n\t\tconst logService = instantiationService.stub(ILogService, new NullLogService());\n\t\tconst fileService = instantiationService.stub(IFileService, disposables.add(new FileService(logService)));\n\t\tconst fileSystemProvider = disposables.add(new InMemoryFileSystemProvider());\n\t\tdisposables.add(fileService.registerProvider(ROOT.scheme, fileSystemProvider));\n\t\tconst systemExtensionsLocation = joinPath(ROOT, 'system');\n\t\tconst userExtensionsLocation = joinPath(ROOT, 'extensions');\n\t\tinstantiationService.stub(INativeEnvironmentService, {\n\t\t\tuserHome: ROOT,\n\t\t\tuserRoamingDataHome: ROOT,\n\t\t\tbuiltinExtensionsPath: systemExtensionsLocation.fsPath,\n\t\t\textensionsPath: userExtensionsLocation.fsPath,\n\t\t\tuserDataPath: userExtensionsLocation.fsPath,\n\t\t\tcacheHome: ROOT,\n\t\t});\n\t\tinstantiationService.stub(IProductService, {});\n\t\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\t\tconst uriIdentityService = instantiationService.stub(IUriIdentityService, disposables.add(instantiationService.createInstance(UriIdentityService)));\n\t\tconst userDataProfilesService = instantiationService.stub(IUserDataProfilesService, disposables.add(instantiationService.createInstance(UserDataProfilesService)));\n\t\tconst extensionsProfileScannerService = instantiationService.stub(IExtensionsProfileScannerService, disposables.add(instantiationService.createInstance(ExtensionsProfileScannerService)));\n\t\tconst extensionsScannerService = instantiationService.stub(IExtensionsScannerService, disposables.add(instantiationService.createInstance(ExtensionsScannerService)));\n\t\tsuper(\n\t\t\t{\n\t\t\t\tname: extension.name,\n\t\t\t\tpublisher: extension.publisher,\n\t\t\t\tversion: extension.version,\n\t\t\t\tengines: { vscode: '*' },\n\t\t\t},\n\t\t\textension,\n\t\t\t{ profileLocation: userDataProfilesService.defaultProfile.extensionsResource },\n\t\t\textensionDownloader,\n\t\t\tnew TestExtensionsScanner(),\n\t\t\turiIdentityService,\n\t\t\tuserDataProfilesService,\n\t\t\textensionsScannerService,\n\t\t\textensionsProfileScannerService,\n\t\t\tlogService,\n\t\t);\n\t}\n\n\tprotected override async doRun(token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst result = await this.install(token);\n\t\treturn result[0];\n\t}\n\n\tprotected override async extractExtension(): Promise<ILocalExtension> {\n\t\tthis.installed = true;\n\t\treturn new class extends mock<ILocalExtension>() { };\n\t}\n\n\tprotected override async validateManifest(): Promise<void> { }\n}\n\nsuite('InstallGalleryExtensionTask Tests', () => {\n\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('if verification is enabled by default, the task completes', async () => {\n\t\tconst testObject = new TestInstallGalleryExtensionTask(aGalleryExtension('a', { isSigned: true }), anExtensionsDownloader({ isSignatureVerificationEnabled: true, verificationResult: true, didExecute: true }), disposables.add(new DisposableStore()));\n\n\t\tawait testObject.run();\n\n\t\tassert.strictEqual(testObject.verificationStatus, true);\n\t\tassert.strictEqual(testObject.installed, true);\n\t});\n\n\ttest('if verification is enabled in stable, the task completes', async () => {\n\t\tconst testObject = new TestInstallGalleryExtensionTask(aGalleryExtension('a', { isSigned: true }), anExtensionsDownloader({ isSignatureVerificationEnabled: true, verificationResult: true, didExecute: true, quality: 'stable' }), disposables.add(new DisposableStore()));\n\n\t\tawait testObject.run();\n\n\t\tassert.strictEqual(testObject.verificationStatus, true);\n\t\tassert.strictEqual(testObject.installed, true);\n\t});\n\n\ttest('if verification is disabled by setting set to false, the task skips verification', async () => {\n\t\tconst testObject = new TestInstallGalleryExtensionTask(aGalleryExtension('a', { isSigned: true }), anExtensionsDownloader({ isSignatureVerificationEnabled: false, verificationResult: 'error', didExecute: false }), disposables.add(new DisposableStore()));\n\n\t\tawait testObject.run();\n\n\t\tassert.strictEqual(testObject.verificationStatus, false);\n\t\tassert.strictEqual(testObject.installed, true);\n\t});\n\n\ttest('if verification is disabled because the module is not loaded, the task skips verification', async () => {\n\t\tconst testObject = new TestInstallGalleryExtensionTask(aGalleryExtension('a', { isSigned: true }), anExtensionsDownloader({ isSignatureVerificationEnabled: true, verificationResult: false, didExecute: false }), disposables.add(new DisposableStore()));\n\n\t\tawait testObject.run();\n\n\t\tassert.strictEqual(testObject.verificationStatus, false);\n\t\tassert.strictEqual(testObject.installed, true);\n\t});\n\n\ttest('if verification fails to execute, the task completes', async () => {\n\t\tconst errorCode = 'ENOENT';\n\t\tconst testObject = new TestInstallGalleryExtensionTask(aGalleryExtension('a', { isSigned: true }), anExtensionsDownloader({ isSignatureVerificationEnabled: true, verificationResult: errorCode, didExecute: false }), disposables.add(new DisposableStore()));\n\n\t\tawait testObject.run();\n\n\t\tassert.strictEqual(testObject.verificationStatus, errorCode);\n\t\tassert.strictEqual(testObject.installed, true);\n\t});\n\n\ttest('if verification fails', async () => {\n\t\tconst errorCode = 'IntegrityCheckFailed';\n\n\t\tconst testObject = new TestInstallGalleryExtensionTask(aGalleryExtension('a', { isSigned: true }), anExtensionsDownloader({ isSignatureVerificationEnabled: true, verificationResult: errorCode, didExecute: true }), disposables.add(new DisposableStore()));\n\n\t\tawait testObject.run();\n\n\t\tassert.strictEqual(testObject.verificationStatus, errorCode);\n\t\tassert.strictEqual(testObject.installed, true);\n\t});\n\n\ttest('if verification succeeds, the task completes', async () => {\n\t\tconst testObject = new TestInstallGalleryExtensionTask(aGalleryExtension('a', { isSigned: true }), anExtensionsDownloader({ isSignatureVerificationEnabled: true, verificationResult: true, didExecute: true }), disposables.add(new DisposableStore()));\n\n\t\tawait testObject.run();\n\n\t\tassert.strictEqual(testObject.verificationStatus, true);\n\t\tassert.strictEqual(testObject.installed, true);\n\t});\n\n\ttest('task completes for unsigned extension', async () => {\n\t\tconst testObject = new TestInstallGalleryExtensionTask(aGalleryExtension('a', { isSigned: false }), anExtensionsDownloader({ isSignatureVerificationEnabled: true, verificationResult: true, didExecute: false }), disposables.add(new DisposableStore()));\n\n\t\tawait testObject.run();\n\n\t\tassert.strictEqual(testObject.verificationStatus, false);\n\t\tassert.strictEqual(testObject.installed, true);\n\t});\n\n\ttest('task completes for an unsigned extension even when signature verification throws error', async () => {\n\t\tconst testObject = new TestInstallGalleryExtensionTask(aGalleryExtension('a', { isSigned: false }), anExtensionsDownloader({ isSignatureVerificationEnabled: true, verificationResult: 'error', didExecute: true }), disposables.add(new DisposableStore()));\n\n\t\tawait testObject.run();\n\n\t\tassert.strictEqual(testObject.verificationStatus, false);\n\t\tassert.strictEqual(testObject.installed, true);\n\t});\n\n\tfunction anExtensionsDownloader(options: { isSignatureVerificationEnabled: boolean; verificationResult: boolean | string; didExecute: boolean; quality?: string }): ExtensionsDownloader {\n\t\tconst logService = new NullLogService();\n\t\tconst fileService = disposables.add(new FileService(logService));\n\t\tconst fileSystemProvider = disposables.add(new InMemoryFileSystemProvider());\n\t\tdisposables.add(fileService.registerProvider(ROOT.scheme, fileSystemProvider));\n\n\t\tconst instantiationService = disposables.add(new TestInstantiationService());\n\t\tinstantiationService.stub(IProductService, { quality: options.quality ?? 'insiders' });\n\t\tinstantiationService.stub(IFileService, fileService);\n\t\tinstantiationService.stub(ILogService, logService);\n\t\tinstantiationService.stub(INativeEnvironmentService, <Partial<INativeEnvironmentService>>{ extensionsDownloadLocation: joinPath(ROOT, 'CachedExtensionVSIXs') });\n\t\tinstantiationService.stub(IExtensionGalleryService, <Partial<IExtensionGalleryService>>{\n\t\t\tasync download(extension, location, operation) {\n\t\t\t\tawait fileService.writeFile(location, VSBuffer.fromString('extension vsix'));\n\t\t\t},\n\t\t\tasync downloadSignatureArchive(extension, location) {\n\t\t\t\tawait fileService.writeFile(location, VSBuffer.fromString('extension signature'));\n\t\t\t},\n\t\t});\n\t\tinstantiationService.stub(IConfigurationService, new TestConfigurationService(isBoolean(options.isSignatureVerificationEnabled) ? { extensions: { verifySignature: options.isSignatureVerificationEnabled } } : undefined));\n\t\tinstantiationService.stub(IExtensionSignatureVerificationService, new TestExtensionSignatureVerificationService(options.verificationResult, !!options.didExecute));\n\t\treturn disposables.add(instantiationService.createInstance(ExtensionsDownloader));\n\t}\n\n\tfunction aGalleryExtension(name: string, properties: Partial<IGalleryExtension> = {}, galleryExtensionProperties: any = {}, assets: Partial<IGalleryExtensionAssets> = {}): IGalleryExtension {\n\t\tconst targetPlatform = getTargetPlatform(platform, arch);\n\t\tconst galleryExtension = <IGalleryExtension>Object.create({ name, publisher: 'pub', version: '1.0.0', allTargetPlatforms: [targetPlatform], properties: {}, assets: {}, ...properties });\n\t\tgalleryExtension.properties = { ...galleryExtension.properties, dependencies: [], targetPlatform, ...galleryExtensionProperties };\n\t\tgalleryExtension.assets = { ...galleryExtension.assets, ...assets };\n\t\tgalleryExtension.identifier = { id: getGalleryExtensionId(galleryExtension.publisher, galleryExtension.name), uuid: generateUuid() };\n\t\treturn <IGalleryExtension>galleryExtension;\n\t}\n});\n"]}