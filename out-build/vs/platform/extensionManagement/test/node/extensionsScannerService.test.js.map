{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/extensionManagement/test/node/extensionsScannerService.test.ts"],"names":[],"mappings":"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","file":"extensionsScannerService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { dirname, joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionsProfileScannerService, IProfileExtensionsScanOptions } from 'vs/platform/extensionManagement/common/extensionsProfileScannerService';\nimport { AbstractExtensionsScannerService, ExtensionScannerInput, IExtensionsScannerService, IScannedExtensionManifest, Translations } from 'vs/platform/extensionManagement/common/extensionsScannerService';\nimport { ExtensionsProfileScannerService } from 'vs/platform/extensionManagement/node/extensionsProfileScannerService';\nimport { ExtensionType, IExtensionManifest, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { IUserDataProfilesService, UserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\n\nlet translations: Translations = Object.create(null);\nconst ROOT = URI.file('/ROOT');\n\nclass ExtensionsScannerService extends AbstractExtensionsScannerService implements IExtensionsScannerService {\n\n\tconstructor(\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IExtensionsProfileScannerService extensionsProfileScannerService: IExtensionsProfileScannerService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService,\n\t\t@INativeEnvironmentService nativeEnvironmentService: INativeEnvironmentService,\n\t\t@IProductService productService: IProductService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(\n\t\t\tURI.file(nativeEnvironmentService.builtinExtensionsPath),\n\t\t\tURI.file(nativeEnvironmentService.extensionsPath),\n\t\t\tjoinPath(nativeEnvironmentService.userHome, '.vscode-oss-dev', 'extensions', 'control.json'),\n\t\t\tuserDataProfilesService.defaultProfile,\n\t\t\tuserDataProfilesService, extensionsProfileScannerService, fileService, logService, nativeEnvironmentService, productService, uriIdentityService, instantiationService);\n\t}\n\n\tprotected async getTranslations(language: string): Promise<Translations> {\n\t\treturn translations;\n\t}\n\n}\n\nsuite('NativeExtensionsScanerService Test', () => {\n\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\tlet instantiationService: TestInstantiationService;\n\n\tsetup(async () => {\n\t\ttranslations = {};\n\t\tinstantiationService = disposables.add(new TestInstantiationService());\n\t\tconst logService = new NullLogService();\n\t\tconst fileService = disposables.add(new FileService(logService));\n\t\tconst fileSystemProvider = disposables.add(new InMemoryFileSystemProvider());\n\t\tdisposables.add(fileService.registerProvider(ROOT.scheme, fileSystemProvider));\n\t\tinstantiationService.stub(ILogService, logService);\n\t\tinstantiationService.stub(IFileService, fileService);\n\t\tconst systemExtensionsLocation = joinPath(ROOT, 'system');\n\t\tconst userExtensionsLocation = joinPath(ROOT, 'extensions');\n\t\tconst environmentService = instantiationService.stub(INativeEnvironmentService, {\n\t\t\tuserHome: ROOT,\n\t\t\tuserRoamingDataHome: ROOT,\n\t\t\tbuiltinExtensionsPath: systemExtensionsLocation.fsPath,\n\t\t\textensionsPath: userExtensionsLocation.fsPath,\n\t\t\tcacheHome: joinPath(ROOT, 'cache'),\n\t\t});\n\t\tinstantiationService.stub(IProductService, { version: '1.66.0' });\n\t\tconst uriIdentityService = disposables.add(new UriIdentityService(fileService));\n\t\tinstantiationService.stub(IUriIdentityService, uriIdentityService);\n\t\tconst userDataProfilesService = disposables.add(new UserDataProfilesService(environmentService, fileService, uriIdentityService, logService));\n\t\tinstantiationService.stub(IUserDataProfilesService, userDataProfilesService);\n\t\tinstantiationService.stub(IExtensionsProfileScannerService, disposables.add(new ExtensionsProfileScannerService(environmentService, fileService, userDataProfilesService, uriIdentityService, NullTelemetryService, logService)));\n\t\tawait fileService.createFolder(systemExtensionsLocation);\n\t\tawait fileService.createFolder(userExtensionsLocation);\n\t});\n\n\ttest('scan system extension', async () => {\n\t\tconst manifest: Partial<IExtensionManifest> = anExtensionManifest({ 'name': 'name', 'publisher': 'pub' });\n\t\tconst extensionLocation = await aSystemExtension(manifest);\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanSystemExtensions({});\n\n\t\tassert.deepStrictEqual(actual.length, 1);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[0].location.toString(), extensionLocation.toString());\n\t\tassert.deepStrictEqual(actual[0].isBuiltin, true);\n\t\tassert.deepStrictEqual(actual[0].type, ExtensionType.System);\n\t\tassert.deepStrictEqual(actual[0].isValid, true);\n\t\tassert.deepStrictEqual(actual[0].validations, []);\n\t\tassert.deepStrictEqual(actual[0].metadata, undefined);\n\t\tassert.deepStrictEqual(actual[0].targetPlatform, TargetPlatform.UNDEFINED);\n\t\tassert.deepStrictEqual(actual[0].manifest, manifest);\n\t});\n\n\ttest('scan user extension', async () => {\n\t\tconst manifest: Partial<IScannedExtensionManifest> = anExtensionManifest({ 'name': 'name', 'publisher': 'pub', __metadata: { id: 'uuid' } });\n\t\tconst extensionLocation = await aUserExtension(manifest);\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanUserExtensions({});\n\n\t\tassert.deepStrictEqual(actual.length, 1);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name', uuid: 'uuid' });\n\t\tassert.deepStrictEqual(actual[0].location.toString(), extensionLocation.toString());\n\t\tassert.deepStrictEqual(actual[0].isBuiltin, false);\n\t\tassert.deepStrictEqual(actual[0].type, ExtensionType.User);\n\t\tassert.deepStrictEqual(actual[0].isValid, true);\n\t\tassert.deepStrictEqual(actual[0].validations, []);\n\t\tassert.deepStrictEqual(actual[0].metadata, { id: 'uuid' });\n\t\tassert.deepStrictEqual(actual[0].targetPlatform, TargetPlatform.UNDEFINED);\n\t\tdelete manifest.__metadata;\n\t\tassert.deepStrictEqual(actual[0].manifest, manifest);\n\t});\n\n\ttest('scan existing extension', async () => {\n\t\tconst manifest: Partial<IExtensionManifest> = anExtensionManifest({ 'name': 'name', 'publisher': 'pub' });\n\t\tconst extensionLocation = await aUserExtension(manifest);\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanExistingExtension(extensionLocation, ExtensionType.User, {});\n\n\t\tassert.notEqual(actual, null);\n\t\tassert.deepStrictEqual(actual!.identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual!.location.toString(), extensionLocation.toString());\n\t\tassert.deepStrictEqual(actual!.isBuiltin, false);\n\t\tassert.deepStrictEqual(actual!.type, ExtensionType.User);\n\t\tassert.deepStrictEqual(actual!.isValid, true);\n\t\tassert.deepStrictEqual(actual!.validations, []);\n\t\tassert.deepStrictEqual(actual!.metadata, undefined);\n\t\tassert.deepStrictEqual(actual!.targetPlatform, TargetPlatform.UNDEFINED);\n\t\tassert.deepStrictEqual(actual!.manifest, manifest);\n\t});\n\n\ttest('scan single extension', async () => {\n\t\tconst manifest: Partial<IExtensionManifest> = anExtensionManifest({ 'name': 'name', 'publisher': 'pub' });\n\t\tconst extensionLocation = await aUserExtension(manifest);\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanOneOrMultipleExtensions(extensionLocation, ExtensionType.User, {});\n\n\t\tassert.deepStrictEqual(actual.length, 1);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[0].location.toString(), extensionLocation.toString());\n\t\tassert.deepStrictEqual(actual[0].isBuiltin, false);\n\t\tassert.deepStrictEqual(actual[0].type, ExtensionType.User);\n\t\tassert.deepStrictEqual(actual[0].isValid, true);\n\t\tassert.deepStrictEqual(actual[0].validations, []);\n\t\tassert.deepStrictEqual(actual[0].metadata, undefined);\n\t\tassert.deepStrictEqual(actual[0].targetPlatform, TargetPlatform.UNDEFINED);\n\t\tassert.deepStrictEqual(actual[0].manifest, manifest);\n\t});\n\n\ttest('scan multiple extensions', async () => {\n\t\tconst extensionLocation = await aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub' }));\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name2', 'publisher': 'pub' }));\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanOneOrMultipleExtensions(dirname(extensionLocation), ExtensionType.User, {});\n\n\t\tassert.deepStrictEqual(actual.length, 2);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[1].identifier, { id: 'pub.name2' });\n\t});\n\n\ttest('scan user extension with different versions', async () => {\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub', version: '1.0.1' }));\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub', version: '1.0.2' }));\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanUserExtensions({});\n\n\t\tassert.deepStrictEqual(actual.length, 1);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[0].manifest.version, '1.0.2');\n\t});\n\n\ttest('scan user extension include all versions', async () => {\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub', version: '1.0.1' }));\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub', version: '1.0.2' }));\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanUserExtensions({ includeAllVersions: true });\n\n\t\tassert.deepStrictEqual(actual.length, 2);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[0].manifest.version, '1.0.1');\n\t\tassert.deepStrictEqual(actual[1].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[1].manifest.version, '1.0.2');\n\t});\n\n\ttest('scan user extension with different versions and higher version is not compatible', async () => {\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub', version: '1.0.1' }));\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub', version: '1.0.2', engines: { vscode: '^1.67.0' } }));\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanUserExtensions({});\n\n\t\tassert.deepStrictEqual(actual.length, 1);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[0].manifest.version, '1.0.1');\n\t});\n\n\ttest('scan exclude invalid extensions', async () => {\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub' }));\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name2', 'publisher': 'pub', engines: { vscode: '^1.67.0' } }));\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanUserExtensions({});\n\n\t\tassert.deepStrictEqual(actual.length, 1);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t});\n\n\ttest('scan exclude uninstalled extensions', async () => {\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub' }));\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name2', 'publisher': 'pub' }));\n\t\tawait instantiationService.get(IFileService).writeFile(joinPath(URI.file(instantiationService.get(INativeEnvironmentService).extensionsPath), '.obsolete'), VSBuffer.fromString(JSON.stringify({ 'pub.name2-1.0.0': true })));\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanUserExtensions({});\n\n\t\tassert.deepStrictEqual(actual.length, 1);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t});\n\n\ttest('scan include uninstalled extensions', async () => {\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub' }));\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name2', 'publisher': 'pub' }));\n\t\tawait instantiationService.get(IFileService).writeFile(joinPath(URI.file(instantiationService.get(INativeEnvironmentService).extensionsPath), '.obsolete'), VSBuffer.fromString(JSON.stringify({ 'pub.name2-1.0.0': true })));\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanUserExtensions({ includeUninstalled: true });\n\n\t\tassert.deepStrictEqual(actual.length, 2);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[1].identifier, { id: 'pub.name2' });\n\t});\n\n\ttest('scan include invalid extensions', async () => {\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub' }));\n\t\tawait aUserExtension(anExtensionManifest({ 'name': 'name2', 'publisher': 'pub', engines: { vscode: '^1.67.0' } }));\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanUserExtensions({ includeInvalid: true });\n\n\t\tassert.deepStrictEqual(actual.length, 2);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[1].identifier, { id: 'pub.name2' });\n\t});\n\n\ttest('scan system extensions include additional builtin extensions', async () => {\n\t\tinstantiationService.stub(IProductService, {\n\t\t\tversion: '1.66.0',\n\t\t\tbuiltInExtensions: [\n\t\t\t\t{ name: 'pub.name2', version: '', repo: '', metadata: undefined },\n\t\t\t\t{ name: 'pub.name', version: '', repo: '', metadata: undefined }\n\t\t\t]\n\t\t});\n\t\tawait anExtension(anExtensionManifest({ 'name': 'name2', 'publisher': 'pub' }), joinPath(ROOT, 'additional'));\n\t\tconst extensionLocation = await anExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub' }), joinPath(ROOT, 'additional'));\n\t\tawait aSystemExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub', version: '1.0.1' }));\n\t\tawait instantiationService.get(IFileService).writeFile(joinPath(instantiationService.get(INativeEnvironmentService).userHome, '.vscode-oss-dev', 'extensions', 'control.json'), VSBuffer.fromString(JSON.stringify({ 'pub.name2': 'disabled', 'pub.name': extensionLocation.fsPath })));\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanSystemExtensions({ checkControlFile: true });\n\n\t\tassert.deepStrictEqual(actual.length, 1);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[0].manifest.version, '1.0.0');\n\t});\n\n\ttest('scan extension with default nls replacements', async () => {\n\t\tconst extensionLocation = await aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub', displayName: '%displayName%' }));\n\t\tawait instantiationService.get(IFileService).writeFile(joinPath(extensionLocation, 'package.nls.json'), VSBuffer.fromString(JSON.stringify({ displayName: 'Hello World' })));\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\tconst actual = await testObject.scanUserExtensions({});\n\n\t\tassert.deepStrictEqual(actual.length, 1);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[0].manifest.displayName, 'Hello World');\n\t});\n\n\ttest('scan extension with en nls replacements', async () => {\n\t\tconst extensionLocation = await aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub', displayName: '%displayName%' }));\n\t\tawait instantiationService.get(IFileService).writeFile(joinPath(extensionLocation, 'package.nls.json'), VSBuffer.fromString(JSON.stringify({ displayName: 'Hello World' })));\n\t\tconst nlsLocation = joinPath(extensionLocation, 'package.en.json');\n\t\tawait instantiationService.get(IFileService).writeFile(nlsLocation, VSBuffer.fromString(JSON.stringify({ contents: { package: { displayName: 'Hello World EN' } } })));\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\ttranslations = { 'pub.name': nlsLocation.fsPath };\n\t\tconst actual = await testObject.scanUserExtensions({ language: 'en' });\n\n\t\tassert.deepStrictEqual(actual.length, 1);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[0].manifest.displayName, 'Hello World EN');\n\t});\n\n\ttest('scan extension falls back to default nls replacements', async () => {\n\t\tconst extensionLocation = await aUserExtension(anExtensionManifest({ 'name': 'name', 'publisher': 'pub', displayName: '%displayName%' }));\n\t\tawait instantiationService.get(IFileService).writeFile(joinPath(extensionLocation, 'package.nls.json'), VSBuffer.fromString(JSON.stringify({ displayName: 'Hello World' })));\n\t\tconst nlsLocation = joinPath(extensionLocation, 'package.en.json');\n\t\tawait instantiationService.get(IFileService).writeFile(nlsLocation, VSBuffer.fromString(JSON.stringify({ contents: { package: { displayName: 'Hello World EN' } } })));\n\t\tconst testObject: IExtensionsScannerService = disposables.add(instantiationService.createInstance(ExtensionsScannerService));\n\n\t\ttranslations = { 'pub.name2': nlsLocation.fsPath };\n\t\tconst actual = await testObject.scanUserExtensions({ language: 'en' });\n\n\t\tassert.deepStrictEqual(actual.length, 1);\n\t\tassert.deepStrictEqual(actual[0].identifier, { id: 'pub.name' });\n\t\tassert.deepStrictEqual(actual[0].manifest.displayName, 'Hello World');\n\t});\n\n\tasync function aUserExtension(manifest: Partial<IScannedExtensionManifest>): Promise<URI> {\n\t\tconst environmentService = instantiationService.get(INativeEnvironmentService);\n\t\treturn anExtension(manifest, URI.file(environmentService.extensionsPath));\n\t}\n\n\tasync function aSystemExtension(manifest: Partial<IScannedExtensionManifest>): Promise<URI> {\n\t\tconst environmentService = instantiationService.get(INativeEnvironmentService);\n\t\treturn anExtension(manifest, URI.file(environmentService.builtinExtensionsPath));\n\t}\n\n\tasync function anExtension(manifest: Partial<IScannedExtensionManifest>, root: URI): Promise<URI> {\n\t\tconst fileService = instantiationService.get(IFileService);\n\t\tconst extensionLocation = joinPath(root, `${manifest.publisher}.${manifest.name}-${manifest.version}-${manifest.__metadata?.targetPlatform ?? TargetPlatform.UNDEFINED}`);\n\t\tawait fileService.writeFile(joinPath(extensionLocation, 'package.json'), VSBuffer.fromString(JSON.stringify(manifest)));\n\t\treturn extensionLocation;\n\t}\n\n\tfunction anExtensionManifest(manifest: Partial<IScannedExtensionManifest>): Partial<IExtensionManifest> {\n\t\treturn { engines: { vscode: '^1.66.0' }, version: '1.0.0', main: 'main.js', activationEvents: ['*'], ...manifest };\n\t}\n});\n\nsuite('ExtensionScannerInput', () => {\n\n\ttest('compare inputs - location', () => {\n\t\tconst anInput = (location: URI, mtime: number | undefined) => new ExtensionScannerInput(location, mtime, undefined, undefined, false, undefined, ExtensionType.User, true, true, '1.1.1', undefined, undefined, true, undefined, {});\n\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(ROOT, undefined), anInput(ROOT, undefined)), true);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(ROOT, 100), anInput(ROOT, 100)), true);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(joinPath(ROOT, 'foo'), undefined), anInput(ROOT, undefined)), false);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(ROOT, 100), anInput(ROOT, 200)), false);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(ROOT, undefined), anInput(ROOT, 200)), false);\n\t});\n\n\ttest('compare inputs - application location', () => {\n\t\tconst anInput = (location: URI, mtime: number | undefined) => new ExtensionScannerInput(ROOT, undefined, location, mtime, false, undefined, ExtensionType.User, true, true, '1.1.1', undefined, undefined, true, undefined, {});\n\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(ROOT, undefined), anInput(ROOT, undefined)), true);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(ROOT, 100), anInput(ROOT, 100)), true);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(joinPath(ROOT, 'foo'), undefined), anInput(ROOT, undefined)), false);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(ROOT, 100), anInput(ROOT, 200)), false);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(ROOT, undefined), anInput(ROOT, 200)), false);\n\t});\n\n\ttest('compare inputs - profile', () => {\n\t\tconst anInput = (profile: boolean, profileScanOptions: IProfileExtensionsScanOptions | undefined) => new ExtensionScannerInput(ROOT, undefined, undefined, undefined, profile, profileScanOptions, ExtensionType.User, true, true, '1.1.1', undefined, undefined, true, undefined, {});\n\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(true, { bailOutWhenFileNotFound: true }), anInput(true, { bailOutWhenFileNotFound: true })), true);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(false, { bailOutWhenFileNotFound: true }), anInput(false, { bailOutWhenFileNotFound: true })), true);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(true, { bailOutWhenFileNotFound: false }), anInput(true, { bailOutWhenFileNotFound: false })), true);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(true, {}), anInput(true, {})), true);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(true, { bailOutWhenFileNotFound: true }), anInput(true, { bailOutWhenFileNotFound: false })), false);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(true, {}), anInput(true, { bailOutWhenFileNotFound: true })), false);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(true, undefined), anInput(true, {})), false);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(false, { bailOutWhenFileNotFound: true }), anInput(true, { bailOutWhenFileNotFound: true })), false);\n\t});\n\n\ttest('compare inputs - extension type', () => {\n\t\tconst anInput = (type: ExtensionType) => new ExtensionScannerInput(ROOT, undefined, undefined, undefined, false, undefined, type, true, true, '1.1.1', undefined, undefined, true, undefined, {});\n\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(ExtensionType.System), anInput(ExtensionType.System)), true);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(ExtensionType.User), anInput(ExtensionType.User)), true);\n\t\tassert.strictEqual(ExtensionScannerInput.equals(anInput(ExtensionType.User), anInput(ExtensionType.System)), false);\n\t});\n\n});\n"]}