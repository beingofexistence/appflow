{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/extensionManagement/test/common/extensionsProfileScannerService.test.ts"],"names":[],"mappings":"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","file":"extensionsProfileScannerService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as sinon from 'sinon';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { AbstractExtensionsProfileScannerService, ProfileExtensionsEvent } from 'vs/platform/extensionManagement/common/extensionsProfileScannerService';\nimport { ExtensionType, IExtension, IExtensionManifest, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { IUserDataProfilesService, UserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\n\nclass TestObject extends AbstractExtensionsProfileScannerService { }\n\nsuite('ExtensionsProfileScannerService', () => {\n\n\tconst ROOT = URI.file('/ROOT');\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst extensionsLocation = joinPath(ROOT, 'extensions');\n\tlet instantiationService: TestInstantiationService;\n\n\tsetup(async () => {\n\t\tinstantiationService = disposables.add(new TestInstantiationService());\n\t\tconst logService = new NullLogService();\n\t\tconst fileService = disposables.add(new FileService(logService));\n\t\tconst fileSystemProvider = disposables.add(new InMemoryFileSystemProvider());\n\t\tdisposables.add(fileService.registerProvider(ROOT.scheme, fileSystemProvider));\n\t\tinstantiationService.stub(ILogService, logService);\n\t\tinstantiationService.stub(IFileService, fileService);\n\t\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\t\tconst uriIdentityService = instantiationService.stub(IUriIdentityService, disposables.add(new UriIdentityService(fileService)));\n\t\tconst environmentService = instantiationService.stub(IEnvironmentService, { userRoamingDataHome: ROOT, cacheHome: joinPath(ROOT, 'cache'), });\n\t\tconst userDataProfilesService = disposables.add(new UserDataProfilesService(environmentService, fileService, uriIdentityService, logService));\n\t\tinstantiationService.stub(IUserDataProfilesService, userDataProfilesService);\n\t});\n\n\tsuiteTeardown(() => sinon.restore());\n\n\ttest('write extensions located in the same extensions folder', async () => {\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension, undefined]], extensionsManifest);\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined }]);\n\t});\n\n\ttest('write extensions located in the different folder', async () => {\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(ROOT, 'pub.a-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension, undefined]], extensionsManifest);\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined }]);\n\t});\n\n\ttest('write extensions located in the same extensions folder has relative location ', async () => {\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension, undefined]], extensionsManifest);\n\n\t\tconst actual = JSON.parse((await instantiationService.get(IFileService).readFile(extensionsManifest)).value.toString());\n\t\tassert.deepStrictEqual(actual, [{ identifier: extension.identifier, location: extension.location.toJSON(), relativeLocation: 'pub.a-1.0.0', version: extension.manifest.version }]);\n\t});\n\n\ttest('write extensions located in different extensions folder does not has relative location ', async () => {\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(ROOT, 'pub.a-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension, undefined]], extensionsManifest);\n\n\t\tconst actual = JSON.parse((await instantiationService.get(IFileService).readFile(extensionsManifest)).value.toString());\n\t\tassert.deepStrictEqual(actual, [{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version }]);\n\t});\n\n\ttest('extension in old format is read and migrated', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension.identifier,\n\t\t\tlocation: extension.location.toJSON(),\n\t\t\tversion: extension.manifest.version,\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined }]);\n\n\t\tconst manifestContent = JSON.parse((await instantiationService.get(IFileService).readFile(extensionsManifest)).value.toString());\n\t\tassert.deepStrictEqual(manifestContent, [{ identifier: extension.identifier, location: extension.location.toJSON(), relativeLocation: 'pub.a-1.0.0', version: extension.manifest.version }]);\n\t});\n\n\ttest('extension in old format is not migrated if not exists in same location', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(ROOT, 'pub.a-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension.identifier,\n\t\t\tlocation: extension.location.toJSON(),\n\t\t\tversion: extension.manifest.version,\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined }]);\n\n\t\tconst manifestContent = JSON.parse((await instantiationService.get(IFileService).readFile(extensionsManifest)).value.toString());\n\t\tassert.deepStrictEqual(manifestContent, [{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version }]);\n\t});\n\n\ttest('extension in old format is read and migrated during write', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension.identifier,\n\t\t\tlocation: extension.location.toJSON(),\n\t\t\tversion: extension.manifest.version,\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\t\tconst extension2 = aExtension('pub.b', joinPath(extensionsLocation, 'pub.b-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension2, undefined]], extensionsManifest);\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [\n\t\t\t{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined },\n\t\t\t{ identifier: extension2.identifier, location: extension2.location.toJSON(), version: extension2.manifest.version, metadata: undefined }\n\t\t]);\n\n\t\tconst manifestContent = JSON.parse((await instantiationService.get(IFileService).readFile(extensionsManifest)).value.toString());\n\t\tassert.deepStrictEqual(manifestContent, [\n\t\t\t{ identifier: extension.identifier, location: extension.location.toJSON(), relativeLocation: 'pub.a-1.0.0', version: extension.manifest.version },\n\t\t\t{ identifier: extension2.identifier, location: extension2.location.toJSON(), relativeLocation: 'pub.b-1.0.0', version: extension2.manifest.version }\n\t\t]);\n\t});\n\n\ttest('extensions in old format and new format is read and migrated', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tconst extension2 = aExtension('pub.b', joinPath(extensionsLocation, 'pub.b-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension.identifier,\n\t\t\tlocation: extension.location.toJSON(),\n\t\t\tversion: extension.manifest.version,\n\t\t}, {\n\t\t\tidentifier: extension2.identifier,\n\t\t\tlocation: extension2.location.toJSON(),\n\t\t\trelativeLocation: 'pub.b-1.0.0',\n\t\t\tversion: extension2.manifest.version,\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [\n\t\t\t{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined },\n\t\t\t{ identifier: extension2.identifier, location: extension2.location.toJSON(), version: extension2.manifest.version, metadata: undefined }\n\t\t]);\n\n\t\tconst manifestContent = JSON.parse((await instantiationService.get(IFileService).readFile(extensionsManifest)).value.toString());\n\t\tassert.deepStrictEqual(manifestContent, [\n\t\t\t{ identifier: extension.identifier, location: extension.location.toJSON(), relativeLocation: 'pub.a-1.0.0', version: extension.manifest.version },\n\t\t\t{ identifier: extension2.identifier, location: extension2.location.toJSON(), relativeLocation: 'pub.b-1.0.0', version: extension2.manifest.version }\n\t\t]);\n\t});\n\n\ttest('extension in intermediate format is read and migrated', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension.identifier,\n\t\t\tlocation: 'pub.a-1.0.0',\n\t\t\tversion: extension.manifest.version,\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined }]);\n\n\t\tconst manifestContent = JSON.parse((await instantiationService.get(IFileService).readFile(extensionsManifest)).value.toString());\n\t\tassert.deepStrictEqual(manifestContent, [{ identifier: extension.identifier, location: extension.location.toJSON(), relativeLocation: 'pub.a-1.0.0', version: extension.manifest.version }]);\n\t});\n\n\ttest('extension in intermediate format is read and migrated during write', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension.identifier,\n\t\t\tlocation: 'pub.a-1.0.0',\n\t\t\tversion: extension.manifest.version,\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\t\tconst extension2 = aExtension('pub.b', joinPath(extensionsLocation, 'pub.b-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension2, undefined]], extensionsManifest);\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [\n\t\t\t{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined },\n\t\t\t{ identifier: extension2.identifier, location: extension2.location.toJSON(), version: extension2.manifest.version, metadata: undefined }\n\t\t]);\n\n\t\tconst manifestContent = JSON.parse((await instantiationService.get(IFileService).readFile(extensionsManifest)).value.toString());\n\t\tassert.deepStrictEqual(manifestContent, [\n\t\t\t{ identifier: extension.identifier, location: extension.location.toJSON(), relativeLocation: 'pub.a-1.0.0', version: extension.manifest.version },\n\t\t\t{ identifier: extension2.identifier, location: extension2.location.toJSON(), relativeLocation: 'pub.b-1.0.0', version: extension2.manifest.version }\n\t\t]);\n\t});\n\n\ttest('extensions in intermediate and new format is read and migrated', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tconst extension2 = aExtension('pub.b', joinPath(extensionsLocation, 'pub.b-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension.identifier,\n\t\t\tlocation: 'pub.a-1.0.0',\n\t\t\tversion: extension.manifest.version,\n\t\t}, {\n\t\t\tidentifier: extension2.identifier,\n\t\t\tlocation: extension2.location.toJSON(),\n\t\t\trelativeLocation: 'pub.b-1.0.0',\n\t\t\tversion: extension2.manifest.version,\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [\n\t\t\t{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined },\n\t\t\t{ identifier: extension2.identifier, location: extension2.location.toJSON(), version: extension2.manifest.version, metadata: undefined }\n\t\t]);\n\n\t\tconst manifestContent = JSON.parse((await instantiationService.get(IFileService).readFile(extensionsManifest)).value.toString());\n\t\tassert.deepStrictEqual(manifestContent, [\n\t\t\t{ identifier: extension.identifier, location: extension.location.toJSON(), relativeLocation: 'pub.a-1.0.0', version: extension.manifest.version },\n\t\t\t{ identifier: extension2.identifier, location: extension2.location.toJSON(), relativeLocation: 'pub.b-1.0.0', version: extension2.manifest.version }\n\t\t]);\n\t});\n\n\ttest('extensions in mixed format is read and migrated', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension1 = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tconst extension2 = aExtension('pub.b', joinPath(extensionsLocation, 'pub.b-1.0.0'));\n\t\tconst extension3 = aExtension('pub.c', joinPath(extensionsLocation, 'pub.c-1.0.0'));\n\t\tconst extension4 = aExtension('pub.d', joinPath(ROOT, 'pub.d-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension1.identifier,\n\t\t\tlocation: 'pub.a-1.0.0',\n\t\t\tversion: extension1.manifest.version,\n\t\t}, {\n\t\t\tidentifier: extension2.identifier,\n\t\t\tlocation: extension2.location.toJSON(),\n\t\t\tversion: extension2.manifest.version,\n\t\t}, {\n\t\t\tidentifier: extension3.identifier,\n\t\t\tlocation: extension3.location.toJSON(),\n\t\t\trelativeLocation: 'pub.c-1.0.0',\n\t\t\tversion: extension3.manifest.version,\n\t\t}, {\n\t\t\tidentifier: extension4.identifier,\n\t\t\tlocation: extension4.location.toJSON(),\n\t\t\tversion: extension4.manifest.version,\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [\n\t\t\t{ identifier: extension1.identifier, location: extension1.location.toJSON(), version: extension1.manifest.version, metadata: undefined },\n\t\t\t{ identifier: extension2.identifier, location: extension2.location.toJSON(), version: extension2.manifest.version, metadata: undefined },\n\t\t\t{ identifier: extension3.identifier, location: extension3.location.toJSON(), version: extension3.manifest.version, metadata: undefined },\n\t\t\t{ identifier: extension4.identifier, location: extension4.location.toJSON(), version: extension4.manifest.version, metadata: undefined }\n\t\t]);\n\n\t\tconst manifestContent = JSON.parse((await instantiationService.get(IFileService).readFile(extensionsManifest)).value.toString());\n\t\tassert.deepStrictEqual(manifestContent, [\n\t\t\t{ identifier: extension1.identifier, location: extension1.location.toJSON(), relativeLocation: 'pub.a-1.0.0', version: extension1.manifest.version },\n\t\t\t{ identifier: extension2.identifier, location: extension2.location.toJSON(), relativeLocation: 'pub.b-1.0.0', version: extension2.manifest.version },\n\t\t\t{ identifier: extension3.identifier, location: extension3.location.toJSON(), relativeLocation: 'pub.c-1.0.0', version: extension3.manifest.version },\n\t\t\t{ identifier: extension4.identifier, location: extension4.location.toJSON(), version: extension4.manifest.version }\n\t\t]);\n\t});\n\n\ttest('throws error if extension has invalid relativePath', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension.identifier,\n\t\t\tlocation: extension.location.toJSON(),\n\t\t\tversion: extension.manifest.version,\n\t\t\trelativePath: 2\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\ttry {\n\t\t\tawait testObject.scanProfileExtensions(extensionsManifest);\n\t\t\tassert.fail('Should throw error');\n\t\t} catch (error) { /*expected*/ }\n\t});\n\n\ttest('throws error if extension has no location', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension.identifier,\n\t\t\tversion: extension.manifest.version,\n\t\t\trelativePath: 'pub.a-1.0.0'\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\ttry {\n\t\t\tawait testObject.scanProfileExtensions(extensionsManifest);\n\t\t\tassert.fail('Should throw error');\n\t\t} catch (error) { /*expected*/ }\n\t});\n\n\ttest('throws error if extension location is invalid', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension.identifier,\n\t\t\tlocation: {},\n\t\t\tversion: extension.manifest.version,\n\t\t\trelativePath: 'pub.a-1.0.0'\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\ttry {\n\t\t\tawait testObject.scanProfileExtensions(extensionsManifest);\n\t\t\tassert.fail('Should throw error');\n\t\t} catch (error) { /*expected*/ }\n\t});\n\n\ttest('throws error if extension has no identifier', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tlocation: extension.location.toJSON(),\n\t\t\tversion: extension.manifest.version,\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\ttry {\n\t\t\tawait testObject.scanProfileExtensions(extensionsManifest);\n\t\t\tassert.fail('Should throw error');\n\t\t} catch (error) { /*expected*/ }\n\t});\n\n\ttest('throws error if extension identifier is invalid', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: 'pub.a',\n\t\t\tlocation: extension.location.toJSON(),\n\t\t\tversion: extension.manifest.version,\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\ttry {\n\t\t\tawait testObject.scanProfileExtensions(extensionsManifest);\n\t\t\tassert.fail('Should throw error');\n\t\t} catch (error) { /*expected*/ }\n\t});\n\n\ttest('throws error if extension has no version', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension.identifier,\n\t\t\tlocation: extension.location.toJSON(),\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\ttry {\n\t\t\tawait testObject.scanProfileExtensions(extensionsManifest);\n\t\t\tassert.fail('Should throw error');\n\t\t} catch (error) { /*expected*/ }\n\t});\n\n\ttest('read extension when manifest is empty', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(''));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual, []);\n\t});\n\n\ttest('read extension when manifest has empty lines and spaces', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(`\n\n\n\t\t`));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual, []);\n\t});\n\n\ttest('read extension when the relative location is empty', async () => {\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(extensionsLocation, 'pub.a-1.0.0'));\n\t\tawait instantiationService.get(IFileService).writeFile(extensionsManifest, VSBuffer.fromString(JSON.stringify([{\n\t\t\tidentifier: extension.identifier,\n\t\t\tlocation: extension.location.toJSON(),\n\t\t\trelativeLocation: '',\n\t\t\tversion: extension.manifest.version,\n\t\t}])));\n\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined }]);\n\n\t\tconst manifestContent = JSON.parse((await instantiationService.get(IFileService).readFile(extensionsManifest)).value.toString());\n\t\tassert.deepStrictEqual(manifestContent, [{ identifier: extension.identifier, location: extension.location.toJSON(), relativeLocation: 'pub.a-1.0.0', version: extension.manifest.version }]);\n\t});\n\n\ttest('add extension trigger events', async () => {\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\t\tconst target1 = sinon.stub();\n\t\tconst target2 = sinon.stub();\n\t\tdisposables.add(testObject.onAddExtensions(target1));\n\t\tdisposables.add(testObject.onDidAddExtensions(target2));\n\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(ROOT, 'foo', 'pub.a-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension, undefined]], extensionsManifest);\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined }]);\n\n\t\tassert.ok(target1.calledOnce);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).profileLocation.toString(), extensionsManifest.toString());\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions.length, 1);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].identifier, extension.identifier);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].version, extension.manifest.version);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].location.toString(), extension.location.toString());\n\n\t\tassert.ok(target2.calledOnce);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).profileLocation.toString(), extensionsManifest.toString());\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions.length, 1);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].identifier, extension.identifier);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].version, extension.manifest.version);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].location.toString(), extension.location.toString());\n\t});\n\n\ttest('remove extension trigger events', async () => {\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\t\tconst target1 = sinon.stub();\n\t\tconst target2 = sinon.stub();\n\t\tdisposables.add(testObject.onRemoveExtensions(target1));\n\t\tdisposables.add(testObject.onDidRemoveExtensions(target2));\n\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\t\tconst extension = aExtension('pub.a', joinPath(ROOT, 'foo', 'pub.a-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension, undefined]], extensionsManifest);\n\t\tawait testObject.removeExtensionFromProfile(extension, extensionsManifest);\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.length, 0);\n\n\t\tassert.ok(target1.calledOnce);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).profileLocation.toString(), extensionsManifest.toString());\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions.length, 1);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].identifier, extension.identifier);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].version, extension.manifest.version);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].location.toString(), extension.location.toString());\n\n\t\tassert.ok(target2.calledOnce);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).profileLocation.toString(), extensionsManifest.toString());\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions.length, 1);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].identifier, extension.identifier);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].version, extension.manifest.version);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].location.toString(), extension.location.toString());\n\t});\n\n\ttest('add extension with same id but different version', async () => {\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\n\t\tconst extension1 = aExtension('pub.a', joinPath(ROOT, 'pub.a-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension1, undefined]], extensionsManifest);\n\n\t\tconst target1 = sinon.stub();\n\t\tconst target2 = sinon.stub();\n\t\tconst target3 = sinon.stub();\n\t\tconst target4 = sinon.stub();\n\t\tdisposables.add(testObject.onAddExtensions(target1));\n\t\tdisposables.add(testObject.onRemoveExtensions(target2));\n\t\tdisposables.add(testObject.onDidAddExtensions(target3));\n\t\tdisposables.add(testObject.onDidRemoveExtensions(target4));\n\t\tconst extension2 = aExtension('pub.a', joinPath(ROOT, 'pub.a-2.0.0'), undefined, { version: '2.0.0' });\n\t\tawait testObject.addExtensionsToProfile([[extension2, undefined]], extensionsManifest);\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [{ identifier: extension2.identifier, location: extension2.location.toJSON(), version: extension2.manifest.version, metadata: undefined }]);\n\n\t\tassert.ok(target1.calledOnce);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).profileLocation.toString(), extensionsManifest.toString());\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions.length, 1);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].identifier, extension2.identifier);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].version, extension2.manifest.version);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].location.toString(), extension2.location.toString());\n\n\t\tassert.ok(target2.calledOnce);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).profileLocation.toString(), extensionsManifest.toString());\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions.length, 1);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].identifier, extension1.identifier);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].version, extension1.manifest.version);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].location.toString(), extension1.location.toString());\n\n\t\tassert.ok(target3.calledOnce);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).profileLocation.toString(), extensionsManifest.toString());\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions.length, 1);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].identifier, extension2.identifier);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].version, extension2.manifest.version);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].location.toString(), extension2.location.toString());\n\n\t\tassert.ok(target4.calledOnce);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).profileLocation.toString(), extensionsManifest.toString());\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions.length, 1);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].identifier, extension1.identifier);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].version, extension1.manifest.version);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].location.toString(), extension1.location.toString());\n\t});\n\n\ttest('add same extension', async () => {\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\n\t\tconst extension = aExtension('pub.a', joinPath(ROOT, 'pub.a-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension, undefined]], extensionsManifest);\n\n\t\tconst target1 = sinon.stub();\n\t\tconst target2 = sinon.stub();\n\t\tconst target3 = sinon.stub();\n\t\tconst target4 = sinon.stub();\n\t\tdisposables.add(testObject.onAddExtensions(target1));\n\t\tdisposables.add(testObject.onRemoveExtensions(target2));\n\t\tdisposables.add(testObject.onDidAddExtensions(target3));\n\t\tdisposables.add(testObject.onDidRemoveExtensions(target4));\n\t\tawait testObject.addExtensionsToProfile([[extension, undefined]], extensionsManifest);\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined }]);\n\t\tassert.ok(target1.notCalled);\n\t\tassert.ok(target2.notCalled);\n\t\tassert.ok(target3.notCalled);\n\t\tassert.ok(target4.notCalled);\n\t});\n\n\ttest('add same extension with different metadata', async () => {\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\n\t\tconst extension = aExtension('pub.a', joinPath(ROOT, 'pub.a-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension, undefined]], extensionsManifest);\n\n\t\tconst target1 = sinon.stub();\n\t\tconst target2 = sinon.stub();\n\t\tconst target3 = sinon.stub();\n\t\tconst target4 = sinon.stub();\n\t\tdisposables.add(testObject.onAddExtensions(target1));\n\t\tdisposables.add(testObject.onRemoveExtensions(target2));\n\t\tdisposables.add(testObject.onDidAddExtensions(target3));\n\t\tdisposables.add(testObject.onDidRemoveExtensions(target4));\n\t\tawait testObject.addExtensionsToProfile([[extension, { isApplicationScoped: true }]], extensionsManifest);\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON(), metadata: a.metadata })), [{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: { isApplicationScoped: true } }]);\n\t\tassert.ok(target1.notCalled);\n\t\tassert.ok(target2.notCalled);\n\t\tassert.ok(target3.notCalled);\n\t\tassert.ok(target4.notCalled);\n\t});\n\n\ttest('add extension with different version and metadata', async () => {\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\n\t\tconst extension1 = aExtension('pub.a', joinPath(ROOT, 'pub.a-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension1, undefined]], extensionsManifest);\n\t\tconst extension2 = aExtension('pub.a', joinPath(ROOT, 'pub.a-2.0.0'), undefined, { version: '2.0.0' });\n\n\t\tconst target1 = sinon.stub();\n\t\tconst target2 = sinon.stub();\n\t\tconst target3 = sinon.stub();\n\t\tconst target4 = sinon.stub();\n\t\tdisposables.add(testObject.onAddExtensions(target1));\n\t\tdisposables.add(testObject.onRemoveExtensions(target2));\n\t\tdisposables.add(testObject.onDidAddExtensions(target3));\n\t\tdisposables.add(testObject.onDidRemoveExtensions(target4));\n\t\tawait testObject.addExtensionsToProfile([[extension2, { isApplicationScoped: true }]], extensionsManifest);\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON(), metadata: a.metadata })), [{ identifier: extension2.identifier, location: extension2.location.toJSON(), version: extension2.manifest.version, metadata: { isApplicationScoped: true } }]);\n\n\t\tassert.ok(target1.calledOnce);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).profileLocation.toString(), extensionsManifest.toString());\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions.length, 1);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].identifier, extension2.identifier);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].version, extension2.manifest.version);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].location.toString(), extension2.location.toString());\n\n\t\tassert.ok(target2.calledOnce);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).profileLocation.toString(), extensionsManifest.toString());\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions.length, 1);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].identifier, extension1.identifier);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].version, extension1.manifest.version);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].location.toString(), extension1.location.toString());\n\n\t\tassert.ok(target3.calledOnce);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).profileLocation.toString(), extensionsManifest.toString());\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions.length, 1);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].identifier, extension2.identifier);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].version, extension2.manifest.version);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target1.args[0][0])).extensions[0].location.toString(), extension2.location.toString());\n\n\t\tassert.ok(target4.calledOnce);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).profileLocation.toString(), extensionsManifest.toString());\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions.length, 1);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].identifier, extension1.identifier);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].version, extension1.manifest.version);\n\t\tassert.deepStrictEqual((<ProfileExtensionsEvent>(target2.args[0][0])).extensions[0].location.toString(), extension1.location.toString());\n\t});\n\n\ttest('add extension with same id and version located in the different folder', async () => {\n\t\tconst testObject = disposables.add(instantiationService.createInstance(TestObject, extensionsLocation));\n\n\t\tconst extensionsManifest = joinPath(extensionsLocation, 'extensions.json');\n\n\t\tlet extension = aExtension('pub.a', joinPath(ROOT, 'foo', 'pub.a-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension, undefined]], extensionsManifest);\n\n\t\tconst target1 = sinon.stub();\n\t\tconst target2 = sinon.stub();\n\t\tconst target3 = sinon.stub();\n\t\tconst target4 = sinon.stub();\n\t\tdisposables.add(testObject.onAddExtensions(target1));\n\t\tdisposables.add(testObject.onRemoveExtensions(target2));\n\t\tdisposables.add(testObject.onDidAddExtensions(target3));\n\t\tdisposables.add(testObject.onDidRemoveExtensions(target4));\n\t\textension = aExtension('pub.a', joinPath(ROOT, 'pub.a-1.0.0'));\n\t\tawait testObject.addExtensionsToProfile([[extension, undefined]], extensionsManifest);\n\n\t\tconst actual = await testObject.scanProfileExtensions(extensionsManifest);\n\t\tassert.deepStrictEqual(actual.map(a => ({ ...a, location: a.location.toJSON() })), [{ identifier: extension.identifier, location: extension.location.toJSON(), version: extension.manifest.version, metadata: undefined }]);\n\t\tassert.ok(target1.notCalled);\n\t\tassert.ok(target2.notCalled);\n\t\tassert.ok(target3.notCalled);\n\t\tassert.ok(target4.notCalled);\n\t});\n\n\tfunction aExtension(id: string, location: URI, e?: Partial<IExtension>, manifest?: Partial<IExtensionManifest>): IExtension {\n\t\treturn {\n\t\t\tidentifier: { id },\n\t\t\tlocation,\n\t\t\ttype: ExtensionType.User,\n\t\t\ttargetPlatform: TargetPlatform.DARWIN_X64,\n\t\t\tisBuiltin: false,\n\t\t\tmanifest: {\n\t\t\t\tname: 'name',\n\t\t\t\tpublisher: 'publisher',\n\t\t\t\tversion: '1.0.0',\n\t\t\t\tengines: { vscode: '1.0.0' },\n\t\t\t\t...manifest,\n\t\t\t},\n\t\t\tisValid: true,\n\t\t\tvalidations: [],\n\t\t\t...e\n\t\t};\n\t}\n\n});\n"]}