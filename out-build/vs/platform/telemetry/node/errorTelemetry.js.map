{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/telemetry/node/errorTelemetry.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAKhG,MAAqB,GAAe,SAAQ,wBAAG;QAC3B,CAAC;YACnB,IAAA,kCAAyB,EAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YAErD,sFAAsF;YACtF,2EAA2E;YAC3E,yEAAyE;YACzE,MAAM,iBAAiB,GAAmB,EAAE,CAAC;YAC7C,OAAO,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC,MAAW,EAAE,OAAqB,EAAE,EAAE;gBACvE,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAChC,UAAU,CAAC,GAAG,EAAE;oBACf,MAAM,GAAG,GAAG,iBAAiB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBAC/C,IAAI,GAAG,IAAI,CAAC,EAAE;wBACb,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;4BACjB,iBAAiB,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;4BACjC,IAAI,CAAC,IAAA,WAAE,EAAkB,CAAC,CAAC,EAAE;gCAC5B,OAAO,CAAC,IAAI,CAAC,iDAAiD,CAAC,EAAE,CAAC,CAAC;gCACnE,IAAI,CAAC,CAAC,KAAK,EAAE;oCACZ,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;iCACxC;gCACD,IAAI,MAAM,EAAE;oCACX,IAAA,WAAE,EAAgB,MAAM,CAAC,CAAC;iCAC1B;6BACD;wBACF,CAAC,CAAC,CAAC;qBACH;gBACF,CAAC,EAAE,IAAI,CAAC,CAAC;YACV,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC,OAAqB,EAAE,EAAE;gBACxD,MAAM,GAAG,GAAG,iBAAiB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC/C,IAAI,GAAG,IAAI,CAAC,EAAE;oBACb,iBAAiB,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;iBACjC;YACF,CAAC,CAAC,CAAC;YAEH,2DAA2D;YAC3D,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,GAAkC,EAAE,EAAE;gBACtE,IAAI,IAAA,WAAE,EAAa,GAAG,CAAC,EAAE;oBACxB,OAAO;iBACP;gBAED,IAAA,WAAE,EAAgB,GAAG,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACJ,CAAC;KACD;IA7CD,sBA6CC","file":"errorTelemetry.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isCancellationError, isSigPipeError, onUnexpectedError, setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport BaseErrorTelemetry from 'vs/platform/telemetry/common/errorTelemetry';\n\nexport default class ErrorTelemetry extends BaseErrorTelemetry {\n\tprotected override installErrorListeners(): void {\n\t\tsetUnexpectedErrorHandler(err => console.error(err));\n\n\t\t// Print a console message when rejection isn't handled within N seconds. For details:\n\t\t// see https://nodejs.org/api/process.html#process_event_unhandledrejection\n\t\t// and https://nodejs.org/api/process.html#process_event_rejectionhandled\n\t\tconst unhandledPromises: Promise<any>[] = [];\n\t\tprocess.on('unhandledRejection', (reason: any, promise: Promise<any>) => {\n\t\t\tunhandledPromises.push(promise);\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst idx = unhandledPromises.indexOf(promise);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tpromise.catch(e => {\n\t\t\t\t\t\tunhandledPromises.splice(idx, 1);\n\t\t\t\t\t\tif (!isCancellationError(e)) {\n\t\t\t\t\t\t\tconsole.warn(`rejected promise not handled within 1 second: ${e}`);\n\t\t\t\t\t\t\tif (e.stack) {\n\t\t\t\t\t\t\t\tconsole.warn(`stack trace: ${e.stack}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (reason) {\n\t\t\t\t\t\t\t\tonUnexpectedError(reason);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t});\n\n\t\tprocess.on('rejectionHandled', (promise: Promise<any>) => {\n\t\t\tconst idx = unhandledPromises.indexOf(promise);\n\t\t\tif (idx >= 0) {\n\t\t\t\tunhandledPromises.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\t// Print a console message when an exception isn't handled.\n\t\tprocess.on('uncaughtException', (err: Error | NodeJS.ErrnoException) => {\n\t\t\tif (isSigPipeError(err)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t}\n}\n"]}