{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/telemetry/node/telemetryUtils.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IASzF,KAAK,UAAU,IAAI,CAAa,YAAiB,EAAgB,UAAe;QACtF,4CAA4C;QAC5C,kGAAkG;QAClG,IAAI,SAAS,GAAG,YAAY,CAAC,OAAO,CAAS,eAAG,CAAU,CAAC;QAC3D,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,CAAC,aAAE,IAAa,SAAS,KAAK,kEAAkE,CAAC,EAAE;YACvI,SAAS,GAAG,MAAM,IAAA,QAAG,EAAU,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;SAClE;QAED,OAAO,SAAS,CAAC;IAClB,CAAC;IATD,oBASC","file":"telemetryUtils.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { getMachineId } from 'vs/base/node/id';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStateReadService } from 'vs/platform/state/node/state';\nimport { machineIdKey } from 'vs/platform/telemetry/common/telemetry';\n\n\nexport async function resolveMachineId(stateService: IStateReadService, logService: ILogService) {\n\t// We cache the machineId for faster lookups\n\t// and resolve it only once initially if not cached or we need to replace the macOS iBridge device\n\tlet machineId = stateService.getItem<string>(machineIdKey);\n\tif (typeof machineId !== 'string' || (isMacintosh && machineId === '6c9d2bc8f91b89624add29c0abeae7fb42bf539fa1cdb2e3e57cd668fa9bcead')) {\n\t\tmachineId = await getMachineId(logService.error.bind(logService));\n\t}\n\n\treturn machineId;\n}\n"]}