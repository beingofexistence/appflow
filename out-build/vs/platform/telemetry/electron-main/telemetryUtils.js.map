{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/telemetry/electron-main/telemetryUtils.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOzF,KAAK,UAAU,IAAI,CAAa,YAAiB,EAAY,UAAe;QAClF,gEAAgE;QAChE,MAAM,SAAS,GAAG,MAAM,IAAA,qBAAoB,EAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QACvE,YAAY,CAAC,OAAO,CAAC,eAAG,EAAW,SAAS,CAAC,CAAC;QAC9C,OAAO,SAAS,CAAC;IAClB,CAAC;IALD,oBAKC","file":"telemetryUtils.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { machineIdKey } from 'vs/platform/telemetry/common/telemetry';\nimport { resolveMachineId as resolveNodeMachineId } from 'vs/platform/telemetry/node/telemetryUtils';\n\nexport async function resolveMachineId(stateService: IStateService, logService: ILogService) {\n\t// Call the node layers implementation to avoid code duplication\n\tconst machineId = await resolveNodeMachineId(stateService, logService);\n\tstateService.setItem(machineIdKey, machineId);\n\treturn machineId;\n}\n"]}