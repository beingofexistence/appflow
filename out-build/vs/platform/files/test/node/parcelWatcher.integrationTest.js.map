{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/files/test/node/parcelWatcher.integrationTest.ts"],"names":[],"mappings":"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","file":"parcelWatcher.integrationTest.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { realpathSync } from 'fs';\nimport { tmpdir } from 'os';\nimport { timeout } from 'vs/base/common/async';\nimport { join } from 'vs/base/common/path';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { Promises, RimRafMode } from 'vs/base/node/pfs';\nimport { flakySuite, getRandomTestPath } from 'vs/base/test/node/testUtils';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { ParcelWatcher } from 'vs/platform/files/node/watcher/parcel/parcelWatcher';\nimport { IDiskFileChange, IRecursiveWatchRequest } from 'vs/platform/files/common/watcher';\nimport { getDriveLetter } from 'vs/base/common/extpath';\nimport { ltrim } from 'vs/base/common/strings';\nimport { FileAccess } from 'vs/base/common/network';\n\n// this suite has shown flaky runs in Azure pipelines where\n// tasks would just hang and timeout after a while (not in\n// mocha but generally). as such they will run only on demand\n// whenever we update the watcher library.\n\n((process.env['BUILD_SOURCEVERSION'] || process.env['CI']) ? suite.skip : flakySuite)('File Watcher (parcel)', () => {\n\n\tclass TestParcelWatcher extends ParcelWatcher {\n\n\t\ttestNormalizePaths(paths: string[], excludes: string[] = []): string[] {\n\n\t\t\t// Work with strings as paths to simplify testing\n\t\t\tconst requests: IRecursiveWatchRequest[] = paths.map(path => {\n\t\t\t\treturn { path, excludes, recursive: true };\n\t\t\t});\n\n\t\t\treturn this.normalizeRequests(requests, false /* validate paths skipped for tests */).map(request => request.path);\n\t\t}\n\n\t\toverride async watch(requests: IRecursiveWatchRequest[]): Promise<void> {\n\t\t\tawait super.watch(requests);\n\t\t\tawait this.whenReady();\n\t\t}\n\n\t\tasync whenReady(): Promise<void> {\n\t\t\tfor (const [, watcher] of this.watchers) {\n\t\t\t\tawait watcher.ready;\n\t\t\t}\n\t\t}\n\t}\n\n\tlet testDir: string;\n\tlet watcher: TestParcelWatcher;\n\n\tlet loggingEnabled = false;\n\n\tfunction enableLogging(enable: boolean) {\n\t\tloggingEnabled = enable;\n\t\twatcher?.setVerboseLogging(enable);\n\t}\n\n\tenableLogging(false);\n\n\tsetup(async () => {\n\t\twatcher = new TestParcelWatcher();\n\t\twatcher.setVerboseLogging(loggingEnabled);\n\n\t\twatcher.onDidLogMessage(e => {\n\t\t\tif (loggingEnabled) {\n\t\t\t\tconsole.log(`[recursive watcher test message] ${e.message}`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.onDidError(e => {\n\t\t\tif (loggingEnabled) {\n\t\t\t\tconsole.log(`[recursive watcher test error] ${e}`);\n\t\t\t}\n\t\t});\n\n\t\ttestDir = getRandomTestPath(tmpdir(), 'vsctests', 'filewatcher');\n\n\t\tconst sourceDir = FileAccess.asFileUri('vs/platform/files/test/node/fixtures/service').fsPath;\n\n\t\tawait Promises.copy(sourceDir, testDir, { preserveSymlinks: false });\n\t});\n\n\tteardown(async () => {\n\t\tawait watcher.stop();\n\t\twatcher.dispose();\n\n\t\t// Possible that the file watcher is still holding\n\t\t// onto the folders on Windows specifically and the\n\t\t// unlink would fail. In that case, do not fail the\n\t\t// test suite.\n\t\treturn Promises.rm(testDir).catch(error => console.error(error));\n\t});\n\n\tfunction toMsg(type: FileChangeType): string {\n\t\tswitch (type) {\n\t\t\tcase FileChangeType.ADDED: return 'added';\n\t\t\tcase FileChangeType.DELETED: return 'deleted';\n\t\t\tdefault: return 'changed';\n\t\t}\n\t}\n\n\tasync function awaitEvent(service: TestParcelWatcher, path: string, type: FileChangeType, failOnEventReason?: string): Promise<IDiskFileChange[]> {\n\t\tif (loggingEnabled) {\n\t\t\tconsole.log(`Awaiting change type '${toMsg(type)}' on file '${path}'`);\n\t\t}\n\n\t\t// Await the event\n\t\tconst res = await new Promise<IDiskFileChange[]>((resolve, reject) => {\n\t\t\tconst disposable = service.onDidChangeFile(events => {\n\t\t\t\tfor (const event of events) {\n\t\t\t\t\tif (event.path === path && event.type === type) {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\tif (failOnEventReason) {\n\t\t\t\t\t\t\treject(new Error(`Unexpected file event: ${failOnEventReason}`));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetImmediate(() => resolve(events)); // copied from parcel watcher tests, seems to drop unrelated events on macOS\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Unwind from the event call stack: we have seen crashes in Parcel\n\t\t// when e.g. calling `unsubscribe` directly from the stack of a file\n\t\t// change event\n\t\t// Refs: https://github.com/microsoft/vscode/issues/137430\n\t\tawait timeout(1);\n\n\t\treturn res;\n\t}\n\n\tfunction awaitMessage(service: TestParcelWatcher, type: 'trace' | 'warn' | 'error' | 'info' | 'debug'): Promise<void> {\n\t\tif (loggingEnabled) {\n\t\t\tconsole.log(`Awaiting message of type ${type}`);\n\t\t}\n\n\t\t// Await the message\n\t\treturn new Promise<void>(resolve => {\n\t\t\tconst disposable = service.onDidLogMessage(msg => {\n\t\t\t\tif (msg.type === type) {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\ttest('basics', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], recursive: true }]);\n\n\t\t// New file\n\t\tconst newFilePath = join(testDir, 'deep', 'newFile.txt');\n\t\tlet changeFuture: Promise<unknown> = awaitEvent(watcher, newFilePath, FileChangeType.ADDED);\n\t\tawait Promises.writeFile(newFilePath, 'Hello World');\n\t\tawait changeFuture;\n\n\t\t// New folder\n\t\tconst newFolderPath = join(testDir, 'deep', 'New Folder');\n\t\tchangeFuture = awaitEvent(watcher, newFolderPath, FileChangeType.ADDED);\n\t\tawait Promises.mkdir(newFolderPath);\n\t\tawait changeFuture;\n\n\t\t// Rename file\n\t\tlet renamedFilePath = join(testDir, 'deep', 'renamedFile.txt');\n\t\tchangeFuture = Promise.all([\n\t\t\tawaitEvent(watcher, newFilePath, FileChangeType.DELETED),\n\t\t\tawaitEvent(watcher, renamedFilePath, FileChangeType.ADDED)\n\t\t]);\n\t\tawait Promises.rename(newFilePath, renamedFilePath);\n\t\tawait changeFuture;\n\n\t\t// Rename folder\n\t\tlet renamedFolderPath = join(testDir, 'deep', 'Renamed Folder');\n\t\tchangeFuture = Promise.all([\n\t\t\tawaitEvent(watcher, newFolderPath, FileChangeType.DELETED),\n\t\t\tawaitEvent(watcher, renamedFolderPath, FileChangeType.ADDED)\n\t\t]);\n\t\tawait Promises.rename(newFolderPath, renamedFolderPath);\n\t\tawait changeFuture;\n\n\t\t// Rename file (same name, different case)\n\t\tconst caseRenamedFilePath = join(testDir, 'deep', 'RenamedFile.txt');\n\t\tchangeFuture = Promise.all([\n\t\t\tawaitEvent(watcher, renamedFilePath, FileChangeType.DELETED),\n\t\t\tawaitEvent(watcher, caseRenamedFilePath, FileChangeType.ADDED)\n\t\t]);\n\t\tawait Promises.rename(renamedFilePath, caseRenamedFilePath);\n\t\tawait changeFuture;\n\t\trenamedFilePath = caseRenamedFilePath;\n\n\t\t// Rename folder (same name, different case)\n\t\tconst caseRenamedFolderPath = join(testDir, 'deep', 'REnamed Folder');\n\t\tchangeFuture = Promise.all([\n\t\t\tawaitEvent(watcher, renamedFolderPath, FileChangeType.DELETED),\n\t\t\tawaitEvent(watcher, caseRenamedFolderPath, FileChangeType.ADDED)\n\t\t]);\n\t\tawait Promises.rename(renamedFolderPath, caseRenamedFolderPath);\n\t\tawait changeFuture;\n\t\trenamedFolderPath = caseRenamedFolderPath;\n\n\t\t// Move file\n\t\tconst movedFilepath = join(testDir, 'movedFile.txt');\n\t\tchangeFuture = Promise.all([\n\t\t\tawaitEvent(watcher, renamedFilePath, FileChangeType.DELETED),\n\t\t\tawaitEvent(watcher, movedFilepath, FileChangeType.ADDED)\n\t\t]);\n\t\tawait Promises.rename(renamedFilePath, movedFilepath);\n\t\tawait changeFuture;\n\n\t\t// Move folder\n\t\tconst movedFolderpath = join(testDir, 'Moved Folder');\n\t\tchangeFuture = Promise.all([\n\t\t\tawaitEvent(watcher, renamedFolderPath, FileChangeType.DELETED),\n\t\t\tawaitEvent(watcher, movedFolderpath, FileChangeType.ADDED)\n\t\t]);\n\t\tawait Promises.rename(renamedFolderPath, movedFolderpath);\n\t\tawait changeFuture;\n\n\t\t// Copy file\n\t\tconst copiedFilepath = join(testDir, 'deep', 'copiedFile.txt');\n\t\tchangeFuture = awaitEvent(watcher, copiedFilepath, FileChangeType.ADDED);\n\t\tawait Promises.copyFile(movedFilepath, copiedFilepath);\n\t\tawait changeFuture;\n\n\t\t// Copy folder\n\t\tconst copiedFolderpath = join(testDir, 'deep', 'Copied Folder');\n\t\tchangeFuture = awaitEvent(watcher, copiedFolderpath, FileChangeType.ADDED);\n\t\tawait Promises.copy(movedFolderpath, copiedFolderpath, { preserveSymlinks: false });\n\t\tawait changeFuture;\n\n\t\t// Change file\n\t\tchangeFuture = awaitEvent(watcher, copiedFilepath, FileChangeType.UPDATED);\n\t\tawait Promises.writeFile(copiedFilepath, 'Hello Change');\n\t\tawait changeFuture;\n\n\t\t// Create new file\n\t\tconst anotherNewFilePath = join(testDir, 'deep', 'anotherNewFile.txt');\n\t\tchangeFuture = awaitEvent(watcher, anotherNewFilePath, FileChangeType.ADDED);\n\t\tawait Promises.writeFile(anotherNewFilePath, 'Hello Another World');\n\t\tawait changeFuture;\n\n\t\t// Read file does not emit event\n\t\tchangeFuture = awaitEvent(watcher, anotherNewFilePath, FileChangeType.UPDATED, 'unexpected-event-from-read-file');\n\t\tawait Promises.readFile(anotherNewFilePath);\n\t\tawait Promise.race([timeout(100), changeFuture]);\n\n\t\t// Stat file does not emit event\n\t\tchangeFuture = awaitEvent(watcher, anotherNewFilePath, FileChangeType.UPDATED, 'unexpected-event-from-stat');\n\t\tawait Promises.stat(anotherNewFilePath);\n\t\tawait Promise.race([timeout(100), changeFuture]);\n\n\t\t// Stat folder does not emit event\n\t\tchangeFuture = awaitEvent(watcher, copiedFolderpath, FileChangeType.UPDATED, 'unexpected-event-from-stat');\n\t\tawait Promises.stat(copiedFolderpath);\n\t\tawait Promise.race([timeout(100), changeFuture]);\n\n\t\t// Delete file\n\t\tchangeFuture = awaitEvent(watcher, copiedFilepath, FileChangeType.DELETED);\n\t\tawait Promises.unlink(copiedFilepath);\n\t\tawait changeFuture;\n\n\t\t// Delete folder\n\t\tchangeFuture = awaitEvent(watcher, copiedFolderpath, FileChangeType.DELETED);\n\t\tawait Promises.rmdir(copiedFolderpath);\n\t\tawait changeFuture;\n\t});\n\n\t(isMacintosh /* this test seems not possible with fsevents backend */ ? test.skip : test)('basics (atomic writes)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], recursive: true }]);\n\n\t\t// Delete + Recreate file\n\t\tconst newFilePath = join(testDir, 'deep', 'conway.js');\n\t\tconst changeFuture = awaitEvent(watcher, newFilePath, FileChangeType.UPDATED);\n\t\tawait Promises.unlink(newFilePath);\n\t\tPromises.writeFile(newFilePath, 'Hello Atomic World');\n\t\tawait changeFuture;\n\t});\n\n\t(!isLinux /* polling is only used in linux environments (WSL) */ ? test.skip : test)('basics (polling)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], pollingInterval: 100, recursive: true }]);\n\n\t\treturn basicCrudTest(join(testDir, 'deep', 'newFile.txt'));\n\t});\n\n\tasync function basicCrudTest(filePath: string): Promise<void> {\n\n\t\t// New file\n\t\tlet changeFuture = awaitEvent(watcher, filePath, FileChangeType.ADDED);\n\t\tawait Promises.writeFile(filePath, 'Hello World');\n\t\tawait changeFuture;\n\n\t\t// Change file\n\t\tchangeFuture = awaitEvent(watcher, filePath, FileChangeType.UPDATED);\n\t\tawait Promises.writeFile(filePath, 'Hello Change');\n\t\tawait changeFuture;\n\n\t\t// Delete file\n\t\tchangeFuture = awaitEvent(watcher, filePath, FileChangeType.DELETED);\n\t\tawait Promises.unlink(filePath);\n\t\tawait changeFuture;\n\t}\n\n\ttest('multiple events', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], recursive: true }]);\n\t\tawait Promises.mkdir(join(testDir, 'deep-multiple'));\n\n\t\t// multiple add\n\n\t\tconst newFilePath1 = join(testDir, 'newFile-1.txt');\n\t\tconst newFilePath2 = join(testDir, 'newFile-2.txt');\n\t\tconst newFilePath3 = join(testDir, 'newFile-3.txt');\n\t\tconst newFilePath4 = join(testDir, 'deep-multiple', 'newFile-1.txt');\n\t\tconst newFilePath5 = join(testDir, 'deep-multiple', 'newFile-2.txt');\n\t\tconst newFilePath6 = join(testDir, 'deep-multiple', 'newFile-3.txt');\n\n\t\tconst addedFuture1 = awaitEvent(watcher, newFilePath1, FileChangeType.ADDED);\n\t\tconst addedFuture2 = awaitEvent(watcher, newFilePath2, FileChangeType.ADDED);\n\t\tconst addedFuture3 = awaitEvent(watcher, newFilePath3, FileChangeType.ADDED);\n\t\tconst addedFuture4 = awaitEvent(watcher, newFilePath4, FileChangeType.ADDED);\n\t\tconst addedFuture5 = awaitEvent(watcher, newFilePath5, FileChangeType.ADDED);\n\t\tconst addedFuture6 = awaitEvent(watcher, newFilePath6, FileChangeType.ADDED);\n\n\t\tawait Promise.all([\n\t\t\tawait Promises.writeFile(newFilePath1, 'Hello World 1'),\n\t\t\tawait Promises.writeFile(newFilePath2, 'Hello World 2'),\n\t\t\tawait Promises.writeFile(newFilePath3, 'Hello World 3'),\n\t\t\tawait Promises.writeFile(newFilePath4, 'Hello World 4'),\n\t\t\tawait Promises.writeFile(newFilePath5, 'Hello World 5'),\n\t\t\tawait Promises.writeFile(newFilePath6, 'Hello World 6')\n\t\t]);\n\n\t\tawait Promise.all([addedFuture1, addedFuture2, addedFuture3, addedFuture4, addedFuture5, addedFuture6]);\n\n\t\t// multiple change\n\n\t\tconst changeFuture1 = awaitEvent(watcher, newFilePath1, FileChangeType.UPDATED);\n\t\tconst changeFuture2 = awaitEvent(watcher, newFilePath2, FileChangeType.UPDATED);\n\t\tconst changeFuture3 = awaitEvent(watcher, newFilePath3, FileChangeType.UPDATED);\n\t\tconst changeFuture4 = awaitEvent(watcher, newFilePath4, FileChangeType.UPDATED);\n\t\tconst changeFuture5 = awaitEvent(watcher, newFilePath5, FileChangeType.UPDATED);\n\t\tconst changeFuture6 = awaitEvent(watcher, newFilePath6, FileChangeType.UPDATED);\n\n\t\tawait Promise.all([\n\t\t\tawait Promises.writeFile(newFilePath1, 'Hello Update 1'),\n\t\t\tawait Promises.writeFile(newFilePath2, 'Hello Update 2'),\n\t\t\tawait Promises.writeFile(newFilePath3, 'Hello Update 3'),\n\t\t\tawait Promises.writeFile(newFilePath4, 'Hello Update 4'),\n\t\t\tawait Promises.writeFile(newFilePath5, 'Hello Update 5'),\n\t\t\tawait Promises.writeFile(newFilePath6, 'Hello Update 6')\n\t\t]);\n\n\t\tawait Promise.all([changeFuture1, changeFuture2, changeFuture3, changeFuture4, changeFuture5, changeFuture6]);\n\n\t\t// copy with multiple files\n\n\t\tconst copyFuture1 = awaitEvent(watcher, join(testDir, 'deep-multiple-copy', 'newFile-1.txt'), FileChangeType.ADDED);\n\t\tconst copyFuture2 = awaitEvent(watcher, join(testDir, 'deep-multiple-copy', 'newFile-2.txt'), FileChangeType.ADDED);\n\t\tconst copyFuture3 = awaitEvent(watcher, join(testDir, 'deep-multiple-copy', 'newFile-3.txt'), FileChangeType.ADDED);\n\t\tconst copyFuture4 = awaitEvent(watcher, join(testDir, 'deep-multiple-copy'), FileChangeType.ADDED);\n\n\t\tawait Promises.copy(join(testDir, 'deep-multiple'), join(testDir, 'deep-multiple-copy'), { preserveSymlinks: false });\n\n\t\tawait Promise.all([copyFuture1, copyFuture2, copyFuture3, copyFuture4]);\n\n\t\t// multiple delete (single files)\n\n\t\tconst deleteFuture1 = awaitEvent(watcher, newFilePath1, FileChangeType.DELETED);\n\t\tconst deleteFuture2 = awaitEvent(watcher, newFilePath2, FileChangeType.DELETED);\n\t\tconst deleteFuture3 = awaitEvent(watcher, newFilePath3, FileChangeType.DELETED);\n\t\tconst deleteFuture4 = awaitEvent(watcher, newFilePath4, FileChangeType.DELETED);\n\t\tconst deleteFuture5 = awaitEvent(watcher, newFilePath5, FileChangeType.DELETED);\n\t\tconst deleteFuture6 = awaitEvent(watcher, newFilePath6, FileChangeType.DELETED);\n\n\t\tawait Promise.all([\n\t\t\tawait Promises.unlink(newFilePath1),\n\t\t\tawait Promises.unlink(newFilePath2),\n\t\t\tawait Promises.unlink(newFilePath3),\n\t\t\tawait Promises.unlink(newFilePath4),\n\t\t\tawait Promises.unlink(newFilePath5),\n\t\t\tawait Promises.unlink(newFilePath6)\n\t\t]);\n\n\t\tawait Promise.all([deleteFuture1, deleteFuture2, deleteFuture3, deleteFuture4, deleteFuture5, deleteFuture6]);\n\n\t\t// multiple delete (folder)\n\n\t\tconst deleteFolderFuture1 = awaitEvent(watcher, join(testDir, 'deep-multiple'), FileChangeType.DELETED);\n\t\tconst deleteFolderFuture2 = awaitEvent(watcher, join(testDir, 'deep-multiple-copy'), FileChangeType.DELETED);\n\n\t\tawait Promise.all([Promises.rm(join(testDir, 'deep-multiple'), RimRafMode.UNLINK), Promises.rm(join(testDir, 'deep-multiple-copy'), RimRafMode.UNLINK)]);\n\n\t\tawait Promise.all([deleteFolderFuture1, deleteFolderFuture2]);\n\t});\n\n\ttest('subsequent watch updates watchers (path)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [join(realpathSync(testDir), 'unrelated')], recursive: true }]);\n\n\t\t// New file (*.txt)\n\t\tlet newTextFilePath = join(testDir, 'deep', 'newFile.txt');\n\t\tlet changeFuture = awaitEvent(watcher, newTextFilePath, FileChangeType.ADDED);\n\t\tawait Promises.writeFile(newTextFilePath, 'Hello World');\n\t\tawait changeFuture;\n\n\t\tawait watcher.watch([{ path: join(testDir, 'deep'), excludes: [join(realpathSync(testDir), 'unrelated')], recursive: true }]);\n\t\tnewTextFilePath = join(testDir, 'deep', 'newFile2.txt');\n\t\tchangeFuture = awaitEvent(watcher, newTextFilePath, FileChangeType.ADDED);\n\t\tawait Promises.writeFile(newTextFilePath, 'Hello World');\n\t\tawait changeFuture;\n\n\t\tawait watcher.watch([{ path: join(testDir, 'deep'), excludes: [realpathSync(testDir)], recursive: true }]);\n\t\tawait watcher.watch([{ path: join(testDir, 'deep'), excludes: [], recursive: true }]);\n\t\tnewTextFilePath = join(testDir, 'deep', 'newFile3.txt');\n\t\tchangeFuture = awaitEvent(watcher, newTextFilePath, FileChangeType.ADDED);\n\t\tawait Promises.writeFile(newTextFilePath, 'Hello World');\n\t\tawait changeFuture;\n\t});\n\n\ttest('invalid path does not crash watcher', async function () {\n\t\tawait watcher.watch([\n\t\t\t{ path: testDir, excludes: [], recursive: true },\n\t\t\t{ path: join(testDir, 'invalid-folder'), excludes: [], recursive: true },\n\t\t\t{ path: FileAccess.asFileUri('').fsPath, excludes: [], recursive: true }\n\t\t]);\n\n\t\treturn basicCrudTest(join(testDir, 'deep', 'newFile.txt'));\n\t});\n\n\ttest('subsequent watch updates watchers (excludes)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [realpathSync(testDir)], recursive: true }]);\n\t\tawait watcher.watch([{ path: testDir, excludes: [], recursive: true }]);\n\n\t\treturn basicCrudTest(join(testDir, 'deep', 'newFile.txt'));\n\t});\n\n\ttest('subsequent watch updates watchers (includes)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], includes: ['nothing'], recursive: true }]);\n\t\tawait watcher.watch([{ path: testDir, excludes: [], recursive: true }]);\n\n\t\treturn basicCrudTest(join(testDir, 'deep', 'newFile.txt'));\n\t});\n\n\ttest('includes are supported', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], includes: ['**/deep/**'], recursive: true }]);\n\n\t\treturn basicCrudTest(join(testDir, 'deep', 'newFile.txt'));\n\t});\n\n\ttest('includes are supported (relative pattern explicit)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], includes: [{ base: testDir, pattern: 'deep/newFile.txt' }], recursive: true }]);\n\n\t\treturn basicCrudTest(join(testDir, 'deep', 'newFile.txt'));\n\t});\n\n\ttest('includes are supported (relative pattern implicit)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], includes: ['deep/newFile.txt'], recursive: true }]);\n\n\t\treturn basicCrudTest(join(testDir, 'deep', 'newFile.txt'));\n\t});\n\n\ttest('excludes are supported (path)', async function () {\n\t\treturn testExcludes([join(realpathSync(testDir), 'deep')]);\n\t});\n\n\ttest('excludes are supported (glob)', function () {\n\t\treturn testExcludes(['deep/**']);\n\t});\n\n\tasync function testExcludes(excludes: string[]) {\n\t\tawait watcher.watch([{ path: testDir, excludes, recursive: true }]);\n\n\t\t// New file (*.txt)\n\t\tconst newTextFilePath = join(testDir, 'deep', 'newFile.txt');\n\t\tconst changeFuture = awaitEvent(watcher, newTextFilePath, FileChangeType.ADDED);\n\t\tawait Promises.writeFile(newTextFilePath, 'Hello World');\n\n\t\tconst res = await Promise.any([\n\t\t\ttimeout(500).then(() => true),\n\t\t\tchangeFuture.then(() => false)\n\t\t]);\n\n\t\tif (!res) {\n\t\t\tassert.fail('Unexpected change event');\n\t\t}\n\t}\n\n\t(isWindows /* windows: cannot create file symbolic link without elevated context */ ? test.skip : test)('symlink support (root)', async function () {\n\t\tconst link = join(testDir, 'deep-linked');\n\t\tconst linkTarget = join(testDir, 'deep');\n\t\tawait Promises.symlink(linkTarget, link);\n\n\t\tawait watcher.watch([{ path: link, excludes: [], recursive: true }]);\n\n\t\treturn basicCrudTest(join(link, 'newFile.txt'));\n\t});\n\n\t(isWindows /* windows: cannot create file symbolic link without elevated context */ ? test.skip : test)('symlink support (via extra watch)', async function () {\n\t\tconst link = join(testDir, 'deep-linked');\n\t\tconst linkTarget = join(testDir, 'deep');\n\t\tawait Promises.symlink(linkTarget, link);\n\n\t\tawait watcher.watch([{ path: testDir, excludes: [], recursive: true }, { path: link, excludes: [], recursive: true }]);\n\n\t\treturn basicCrudTest(join(link, 'newFile.txt'));\n\t});\n\n\t(!isWindows /* UNC is windows only */ ? test.skip : test)('unc support', async function () {\n\n\t\t// Local UNC paths are in the form of: \\\\localhost\\c$\\my_dir\n\t\tconst uncPath = `\\\\\\\\localhost\\\\${getDriveLetter(testDir)?.toLowerCase()}$\\\\${ltrim(testDir.substr(testDir.indexOf(':') + 1), '\\\\')}`;\n\n\t\tawait watcher.watch([{ path: uncPath, excludes: [], recursive: true }]);\n\n\t\treturn basicCrudTest(join(uncPath, 'deep', 'newFile.txt'));\n\t});\n\n\t(isLinux /* linux: is case sensitive */ ? test.skip : test)('wrong casing', async function () {\n\t\tconst deepWrongCasedPath = join(testDir, 'DEEP');\n\n\t\tawait watcher.watch([{ path: deepWrongCasedPath, excludes: [], recursive: true }]);\n\n\t\treturn basicCrudTest(join(deepWrongCasedPath, 'newFile.txt'));\n\t});\n\n\ttest('invalid folder does not explode', async function () {\n\t\tconst invalidPath = join(testDir, 'invalid');\n\n\t\tawait watcher.watch([{ path: invalidPath, excludes: [], recursive: true }]);\n\t});\n\n\ttest('deleting watched path is handled properly', async function () {\n\t\tconst watchedPath = join(testDir, 'deep');\n\n\t\tawait watcher.watch([{ path: watchedPath, excludes: [], recursive: true }]);\n\n\t\t// Delete watched path and await\n\t\tconst warnFuture = awaitMessage(watcher, 'warn');\n\t\tawait Promises.rm(watchedPath, RimRafMode.UNLINK);\n\t\tawait warnFuture;\n\n\t\t// Restore watched path\n\t\tawait timeout(1500); // node.js watcher used for monitoring folder restore is async\n\t\tawait Promises.mkdir(watchedPath);\n\t\tawait timeout(1500); // restart is delayed\n\t\tawait watcher.whenReady();\n\n\t\t// Verify events come in again\n\t\tconst newFilePath = join(watchedPath, 'newFile.txt');\n\t\tconst changeFuture = awaitEvent(watcher, newFilePath, FileChangeType.ADDED);\n\t\tawait Promises.writeFile(newFilePath, 'Hello World');\n\t\tawait changeFuture;\n\t});\n\n\ttest('should not exclude roots that do not overlap', () => {\n\t\tif (isWindows) {\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['C:\\\\a']), ['C:\\\\a']);\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['C:\\\\a', 'C:\\\\b']), ['C:\\\\a', 'C:\\\\b']);\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['C:\\\\a', 'C:\\\\b', 'C:\\\\c\\\\d\\\\e']), ['C:\\\\a', 'C:\\\\b', 'C:\\\\c\\\\d\\\\e']);\n\t\t} else {\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['/a']), ['/a']);\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['/a', '/b']), ['/a', '/b']);\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['/a', '/b', '/c/d/e']), ['/a', '/b', '/c/d/e']);\n\t\t}\n\t});\n\n\ttest('should remove sub-folders of other paths', () => {\n\t\tif (isWindows) {\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['C:\\\\a', 'C:\\\\a\\\\b']), ['C:\\\\a']);\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['C:\\\\a', 'C:\\\\b', 'C:\\\\a\\\\b']), ['C:\\\\a', 'C:\\\\b']);\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['C:\\\\b\\\\a', 'C:\\\\a', 'C:\\\\b', 'C:\\\\a\\\\b']), ['C:\\\\a', 'C:\\\\b']);\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['C:\\\\a', 'C:\\\\a\\\\b', 'C:\\\\a\\\\c\\\\d']), ['C:\\\\a']);\n\t\t} else {\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['/a', '/a/b']), ['/a']);\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['/a', '/b', '/a/b']), ['/a', '/b']);\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['/b/a', '/a', '/b', '/a/b']), ['/a', '/b']);\n\t\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['/a', '/a/b', '/a/c/d']), ['/a']);\n\t\t}\n\t});\n\n\ttest('should ignore when everything excluded', () => {\n\t\tassert.deepStrictEqual(watcher.testNormalizePaths(['/foo/bar', '/bar'], ['**', 'something']), []);\n\t});\n});\n"]}