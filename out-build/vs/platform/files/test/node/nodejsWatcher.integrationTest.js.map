{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/files/test/node/nodejsWatcher.integrationTest.ts"],"names":[],"mappings":"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","file":"nodejsWatcher.integrationTest.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { tmpdir } from 'os';\nimport { basename, dirname, join } from 'vs/base/common/path';\nimport { Promises, RimRafMode } from 'vs/base/node/pfs';\nimport { flakySuite, getRandomTestPath } from 'vs/base/test/node/testUtils';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { INonRecursiveWatchRequest } from 'vs/platform/files/common/watcher';\nimport { NodeJSFileWatcherLibrary, watchFileContents } from 'vs/platform/files/node/watcher/nodejs/nodejsWatcherLib';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { getDriveLetter } from 'vs/base/common/extpath';\nimport { ltrim } from 'vs/base/common/strings';\nimport { DeferredPromise } from 'vs/base/common/async';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { NodeJSWatcher } from 'vs/platform/files/node/watcher/nodejs/nodejsWatcher';\nimport { FileAccess } from 'vs/base/common/network';\n\n// this suite has shown flaky runs in Azure pipelines where\n// tasks would just hang and timeout after a while (not in\n// mocha but generally). as such they will run only on demand\n// whenever we update the watcher library.\n\n((process.env['BUILD_SOURCEVERSION'] || process.env['CI']) ? suite.skip : flakySuite)('File Watcher (node.js)', () => {\n\n\tclass TestNodeJSWatcher extends NodeJSWatcher {\n\n\t\toverride async watch(requests: INonRecursiveWatchRequest[]): Promise<void> {\n\t\t\tawait super.watch(requests);\n\t\t\tawait this.whenReady();\n\t\t}\n\n\t\tasync whenReady(): Promise<void> {\n\t\t\tfor (const [, watcher] of this.watchers) {\n\t\t\t\tawait watcher.instance.ready;\n\t\t\t}\n\t\t}\n\t}\n\n\tclass TestNodeJSFileWatcherLibrary extends NodeJSFileWatcherLibrary {\n\n\t\tprivate readonly _whenDisposed = new DeferredPromise<void>();\n\t\treadonly whenDisposed = this._whenDisposed.p;\n\n\t\toverride dispose(): void {\n\t\t\tsuper.dispose();\n\n\t\t\tthis._whenDisposed.complete();\n\t\t}\n\t}\n\n\tlet testDir: string;\n\tlet watcher: TestNodeJSWatcher;\n\n\tlet loggingEnabled = false;\n\n\tfunction enableLogging(enable: boolean) {\n\t\tloggingEnabled = enable;\n\t\twatcher?.setVerboseLogging(enable);\n\t}\n\n\tenableLogging(false);\n\n\tsetup(async () => {\n\t\twatcher = new TestNodeJSWatcher();\n\t\twatcher?.setVerboseLogging(loggingEnabled);\n\n\t\twatcher.onDidLogMessage(e => {\n\t\t\tif (loggingEnabled) {\n\t\t\t\tconsole.log(`[non-recursive watcher test message] ${e.message}`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.onDidError(e => {\n\t\t\tif (loggingEnabled) {\n\t\t\t\tconsole.log(`[non-recursive watcher test error] ${e}`);\n\t\t\t}\n\t\t});\n\n\t\ttestDir = getRandomTestPath(tmpdir(), 'vsctests', 'filewatcher');\n\n\t\tconst sourceDir = FileAccess.asFileUri('vs/platform/files/test/node/fixtures/service').fsPath;\n\n\t\tawait Promises.copy(sourceDir, testDir, { preserveSymlinks: false });\n\t});\n\n\tteardown(async () => {\n\t\tawait watcher.stop();\n\t\twatcher.dispose();\n\n\t\t// Possible that the file watcher is still holding\n\t\t// onto the folders on Windows specifically and the\n\t\t// unlink would fail. In that case, do not fail the\n\t\t// test suite.\n\t\treturn Promises.rm(testDir).catch(error => console.error(error));\n\t});\n\n\tfunction toMsg(type: FileChangeType): string {\n\t\tswitch (type) {\n\t\t\tcase FileChangeType.ADDED: return 'added';\n\t\t\tcase FileChangeType.DELETED: return 'deleted';\n\t\t\tdefault: return 'changed';\n\t\t}\n\t}\n\n\tasync function awaitEvent(service: TestNodeJSWatcher, path: string, type: FileChangeType): Promise<void> {\n\t\tif (loggingEnabled) {\n\t\t\tconsole.log(`Awaiting change type '${toMsg(type)}' on file '${path}'`);\n\t\t}\n\n\t\t// Await the event\n\t\tawait new Promise<void>(resolve => {\n\t\t\tconst disposable = service.onDidChangeFile(events => {\n\t\t\t\tfor (const event of events) {\n\t\t\t\t\tif (event.path === path && event.type === type) {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\ttest('basics (folder watch)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], recursive: false }]);\n\n\t\t// New file\n\t\tconst newFilePath = join(testDir, 'newFile.txt');\n\t\tlet changeFuture: Promise<unknown> = awaitEvent(watcher, newFilePath, FileChangeType.ADDED);\n\t\tawait Promises.writeFile(newFilePath, 'Hello World');\n\t\tawait changeFuture;\n\n\t\t// New folder\n\t\tconst newFolderPath = join(testDir, 'New Folder');\n\t\tchangeFuture = awaitEvent(watcher, newFolderPath, FileChangeType.ADDED);\n\t\tawait Promises.mkdir(newFolderPath);\n\t\tawait changeFuture;\n\n\t\t// Rename file\n\t\tlet renamedFilePath = join(testDir, 'renamedFile.txt');\n\t\tchangeFuture = Promise.all([\n\t\t\tawaitEvent(watcher, newFilePath, FileChangeType.DELETED),\n\t\t\tawaitEvent(watcher, renamedFilePath, FileChangeType.ADDED)\n\t\t]);\n\t\tawait Promises.rename(newFilePath, renamedFilePath);\n\t\tawait changeFuture;\n\n\t\t// Rename folder\n\t\tlet renamedFolderPath = join(testDir, 'Renamed Folder');\n\t\tchangeFuture = Promise.all([\n\t\t\tawaitEvent(watcher, newFolderPath, FileChangeType.DELETED),\n\t\t\tawaitEvent(watcher, renamedFolderPath, FileChangeType.ADDED)\n\t\t]);\n\t\tawait Promises.rename(newFolderPath, renamedFolderPath);\n\t\tawait changeFuture;\n\n\t\t// Rename file (same name, different case)\n\t\tconst caseRenamedFilePath = join(testDir, 'RenamedFile.txt');\n\t\tchangeFuture = Promise.all([\n\t\t\tawaitEvent(watcher, renamedFilePath, FileChangeType.DELETED),\n\t\t\tawaitEvent(watcher, caseRenamedFilePath, FileChangeType.ADDED)\n\t\t]);\n\t\tawait Promises.rename(renamedFilePath, caseRenamedFilePath);\n\t\tawait changeFuture;\n\t\trenamedFilePath = caseRenamedFilePath;\n\n\t\t// Rename folder (same name, different case)\n\t\tconst caseRenamedFolderPath = join(testDir, 'REnamed Folder');\n\t\tchangeFuture = Promise.all([\n\t\t\tawaitEvent(watcher, renamedFolderPath, FileChangeType.DELETED),\n\t\t\tawaitEvent(watcher, caseRenamedFolderPath, FileChangeType.ADDED)\n\t\t]);\n\t\tawait Promises.rename(renamedFolderPath, caseRenamedFolderPath);\n\t\tawait changeFuture;\n\t\trenamedFolderPath = caseRenamedFolderPath;\n\n\t\t// Move file\n\t\tconst movedFilepath = join(testDir, 'movedFile.txt');\n\t\tchangeFuture = Promise.all([\n\t\t\tawaitEvent(watcher, renamedFilePath, FileChangeType.DELETED),\n\t\t\tawaitEvent(watcher, movedFilepath, FileChangeType.ADDED)\n\t\t]);\n\t\tawait Promises.rename(renamedFilePath, movedFilepath);\n\t\tawait changeFuture;\n\n\t\t// Move folder\n\t\tconst movedFolderpath = join(testDir, 'Moved Folder');\n\t\tchangeFuture = Promise.all([\n\t\t\tawaitEvent(watcher, renamedFolderPath, FileChangeType.DELETED),\n\t\t\tawaitEvent(watcher, movedFolderpath, FileChangeType.ADDED)\n\t\t]);\n\t\tawait Promises.rename(renamedFolderPath, movedFolderpath);\n\t\tawait changeFuture;\n\n\t\t// Copy file\n\t\tconst copiedFilepath = join(testDir, 'copiedFile.txt');\n\t\tchangeFuture = awaitEvent(watcher, copiedFilepath, FileChangeType.ADDED);\n\t\tawait Promises.copyFile(movedFilepath, copiedFilepath);\n\t\tawait changeFuture;\n\n\t\t// Copy folder\n\t\tconst copiedFolderpath = join(testDir, 'Copied Folder');\n\t\tchangeFuture = awaitEvent(watcher, copiedFolderpath, FileChangeType.ADDED);\n\t\tawait Promises.copy(movedFolderpath, copiedFolderpath, { preserveSymlinks: false });\n\t\tawait changeFuture;\n\n\t\t// Change file\n\t\tchangeFuture = awaitEvent(watcher, copiedFilepath, FileChangeType.UPDATED);\n\t\tawait Promises.writeFile(copiedFilepath, 'Hello Change');\n\t\tawait changeFuture;\n\n\t\t// Create new file\n\t\tconst anotherNewFilePath = join(testDir, 'anotherNewFile.txt');\n\t\tchangeFuture = awaitEvent(watcher, anotherNewFilePath, FileChangeType.ADDED);\n\t\tawait Promises.writeFile(anotherNewFilePath, 'Hello Another World');\n\t\tawait changeFuture;\n\n\t\t// Delete file\n\t\tchangeFuture = awaitEvent(watcher, copiedFilepath, FileChangeType.DELETED);\n\t\tawait Promises.unlink(copiedFilepath);\n\t\tawait changeFuture;\n\n\t\t// Delete folder\n\t\tchangeFuture = awaitEvent(watcher, copiedFolderpath, FileChangeType.DELETED);\n\t\tawait Promises.rmdir(copiedFolderpath);\n\t\tawait changeFuture;\n\n\t\twatcher.dispose();\n\t});\n\n\ttest('basics (file watch)', async function () {\n\t\tconst filePath = join(testDir, 'lorem.txt');\n\t\tawait watcher.watch([{ path: filePath, excludes: [], recursive: false }]);\n\n\t\t// Change file\n\t\tlet changeFuture = awaitEvent(watcher, filePath, FileChangeType.UPDATED);\n\t\tawait Promises.writeFile(filePath, 'Hello Change');\n\t\tawait changeFuture;\n\n\t\t// Delete file\n\t\tchangeFuture = awaitEvent(watcher, filePath, FileChangeType.DELETED);\n\t\tawait Promises.unlink(filePath);\n\t\tawait changeFuture;\n\n\t\t// Recreate watcher\n\t\tawait Promises.writeFile(filePath, 'Hello Change');\n\t\tawait watcher.watch([]);\n\t\tawait watcher.watch([{ path: filePath, excludes: [], recursive: false }]);\n\n\t\t// Move file\n\t\tchangeFuture = awaitEvent(watcher, filePath, FileChangeType.DELETED);\n\t\tawait Promises.rename(filePath, `${filePath}-moved`);\n\t\tawait changeFuture;\n\t});\n\n\ttest('atomic writes (folder watch)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], recursive: false }]);\n\n\t\t// Delete + Recreate file\n\t\tconst newFilePath = join(testDir, 'lorem.txt');\n\t\tconst changeFuture: Promise<unknown> = awaitEvent(watcher, newFilePath, FileChangeType.UPDATED);\n\t\tawait Promises.unlink(newFilePath);\n\t\tPromises.writeFile(newFilePath, 'Hello Atomic World');\n\t\tawait changeFuture;\n\t});\n\n\ttest('atomic writes (file watch)', async function () {\n\t\tconst filePath = join(testDir, 'lorem.txt');\n\t\tawait watcher.watch([{ path: filePath, excludes: [], recursive: false }]);\n\n\t\t// Delete + Recreate file\n\t\tconst newFilePath = join(filePath);\n\t\tconst changeFuture: Promise<unknown> = awaitEvent(watcher, newFilePath, FileChangeType.UPDATED);\n\t\tawait Promises.unlink(newFilePath);\n\t\tPromises.writeFile(newFilePath, 'Hello Atomic World');\n\t\tawait changeFuture;\n\t});\n\n\ttest('multiple events (folder watch)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], recursive: false }]);\n\n\t\t// multiple add\n\n\t\tconst newFilePath1 = join(testDir, 'newFile-1.txt');\n\t\tconst newFilePath2 = join(testDir, 'newFile-2.txt');\n\t\tconst newFilePath3 = join(testDir, 'newFile-3.txt');\n\n\t\tconst addedFuture1: Promise<unknown> = awaitEvent(watcher, newFilePath1, FileChangeType.ADDED);\n\t\tconst addedFuture2: Promise<unknown> = awaitEvent(watcher, newFilePath2, FileChangeType.ADDED);\n\t\tconst addedFuture3: Promise<unknown> = awaitEvent(watcher, newFilePath3, FileChangeType.ADDED);\n\n\t\tawait Promise.all([\n\t\t\tawait Promises.writeFile(newFilePath1, 'Hello World 1'),\n\t\t\tawait Promises.writeFile(newFilePath2, 'Hello World 2'),\n\t\t\tawait Promises.writeFile(newFilePath3, 'Hello World 3'),\n\t\t]);\n\n\t\tawait Promise.all([addedFuture1, addedFuture2, addedFuture3]);\n\n\t\t// multiple change\n\n\t\tconst changeFuture1: Promise<unknown> = awaitEvent(watcher, newFilePath1, FileChangeType.UPDATED);\n\t\tconst changeFuture2: Promise<unknown> = awaitEvent(watcher, newFilePath2, FileChangeType.UPDATED);\n\t\tconst changeFuture3: Promise<unknown> = awaitEvent(watcher, newFilePath3, FileChangeType.UPDATED);\n\n\t\tawait Promise.all([\n\t\t\tawait Promises.writeFile(newFilePath1, 'Hello Update 1'),\n\t\t\tawait Promises.writeFile(newFilePath2, 'Hello Update 2'),\n\t\t\tawait Promises.writeFile(newFilePath3, 'Hello Update 3'),\n\t\t]);\n\n\t\tawait Promise.all([changeFuture1, changeFuture2, changeFuture3]);\n\n\t\t// copy with multiple files\n\n\t\tconst copyFuture1: Promise<unknown> = awaitEvent(watcher, join(testDir, 'newFile-1-copy.txt'), FileChangeType.ADDED);\n\t\tconst copyFuture2: Promise<unknown> = awaitEvent(watcher, join(testDir, 'newFile-2-copy.txt'), FileChangeType.ADDED);\n\t\tconst copyFuture3: Promise<unknown> = awaitEvent(watcher, join(testDir, 'newFile-3-copy.txt'), FileChangeType.ADDED);\n\n\t\tawait Promise.all([\n\t\t\tPromises.copy(join(testDir, 'newFile-1.txt'), join(testDir, 'newFile-1-copy.txt'), { preserveSymlinks: false }),\n\t\t\tPromises.copy(join(testDir, 'newFile-2.txt'), join(testDir, 'newFile-2-copy.txt'), { preserveSymlinks: false }),\n\t\t\tPromises.copy(join(testDir, 'newFile-3.txt'), join(testDir, 'newFile-3-copy.txt'), { preserveSymlinks: false })\n\t\t]);\n\n\t\tawait Promise.all([copyFuture1, copyFuture2, copyFuture3]);\n\n\t\t// multiple delete\n\n\t\tconst deleteFuture1: Promise<unknown> = awaitEvent(watcher, newFilePath1, FileChangeType.DELETED);\n\t\tconst deleteFuture2: Promise<unknown> = awaitEvent(watcher, newFilePath2, FileChangeType.DELETED);\n\t\tconst deleteFuture3: Promise<unknown> = awaitEvent(watcher, newFilePath3, FileChangeType.DELETED);\n\n\t\tawait Promise.all([\n\t\t\tawait Promises.unlink(newFilePath1),\n\t\t\tawait Promises.unlink(newFilePath2),\n\t\t\tawait Promises.unlink(newFilePath3)\n\t\t]);\n\n\t\tawait Promise.all([deleteFuture1, deleteFuture2, deleteFuture3]);\n\t});\n\n\ttest('multiple events (file watch)', async function () {\n\t\tconst filePath = join(testDir, 'lorem.txt');\n\t\tawait watcher.watch([{ path: filePath, excludes: [], recursive: false }]);\n\n\t\t// multiple change\n\n\t\tconst changeFuture1: Promise<unknown> = awaitEvent(watcher, filePath, FileChangeType.UPDATED);\n\n\t\tawait Promise.all([\n\t\t\tawait Promises.writeFile(filePath, 'Hello Update 1'),\n\t\t\tawait Promises.writeFile(filePath, 'Hello Update 2'),\n\t\t\tawait Promises.writeFile(filePath, 'Hello Update 3'),\n\t\t]);\n\n\t\tawait Promise.all([changeFuture1]);\n\t});\n\n\ttest('excludes can be updated (folder watch)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: ['**'], recursive: false }]);\n\t\tawait watcher.watch([{ path: testDir, excludes: [], recursive: false }]);\n\n\t\treturn basicCrudTest(join(testDir, 'files-excludes.txt'));\n\t});\n\n\ttest('excludes are ignored (file watch)', async function () {\n\t\tconst filePath = join(testDir, 'lorem.txt');\n\t\tawait watcher.watch([{ path: filePath, excludes: ['**'], recursive: false }]);\n\n\t\treturn basicCrudTest(filePath, true);\n\t});\n\n\ttest('includes can be updated (folder watch)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], includes: ['nothing'], recursive: false }]);\n\t\tawait watcher.watch([{ path: testDir, excludes: [], recursive: false }]);\n\n\t\treturn basicCrudTest(join(testDir, 'files-includes.txt'));\n\t});\n\n\ttest('non-includes are ignored (file watch)', async function () {\n\t\tconst filePath = join(testDir, 'lorem.txt');\n\t\tawait watcher.watch([{ path: filePath, excludes: [], includes: ['nothing'], recursive: false }]);\n\n\t\treturn basicCrudTest(filePath, true);\n\t});\n\n\ttest('includes are supported (folder watch)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], includes: ['**/files-includes.txt'], recursive: false }]);\n\n\t\treturn basicCrudTest(join(testDir, 'files-includes.txt'));\n\t});\n\n\ttest('includes are supported (folder watch, relative pattern explicit)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], includes: [{ base: testDir, pattern: 'files-includes.txt' }], recursive: false }]);\n\n\t\treturn basicCrudTest(join(testDir, 'files-includes.txt'));\n\t});\n\n\ttest('includes are supported (folder watch, relative pattern implicit)', async function () {\n\t\tawait watcher.watch([{ path: testDir, excludes: [], includes: ['files-includes.txt'], recursive: false }]);\n\n\t\treturn basicCrudTest(join(testDir, 'files-includes.txt'));\n\t});\n\n\t(isWindows /* windows: cannot create file symbolic link without elevated context */ ? test.skip : test)('symlink support (folder watch)', async function () {\n\t\tconst link = join(testDir, 'deep-linked');\n\t\tconst linkTarget = join(testDir, 'deep');\n\t\tawait Promises.symlink(linkTarget, link);\n\n\t\tawait watcher.watch([{ path: link, excludes: [], recursive: false }]);\n\n\t\treturn basicCrudTest(join(link, 'newFile.txt'));\n\t});\n\n\tasync function basicCrudTest(filePath: string, skipAdd?: boolean): Promise<void> {\n\t\tlet changeFuture: Promise<unknown>;\n\n\t\t// New file\n\t\tif (!skipAdd) {\n\t\t\tchangeFuture = awaitEvent(watcher, filePath, FileChangeType.ADDED);\n\t\t\tawait Promises.writeFile(filePath, 'Hello World');\n\t\t\tawait changeFuture;\n\t\t}\n\n\t\t// Change file\n\t\tchangeFuture = awaitEvent(watcher, filePath, FileChangeType.UPDATED);\n\t\tawait Promises.writeFile(filePath, 'Hello Change');\n\t\tawait changeFuture;\n\n\t\t// Delete file\n\t\tchangeFuture = awaitEvent(watcher, filePath, FileChangeType.DELETED);\n\t\tawait Promises.unlink(await Promises.realpath(filePath)); // support symlinks\n\t\tawait changeFuture;\n\t}\n\n\t(isWindows /* windows: cannot create file symbolic link without elevated context */ ? test.skip : test)('symlink support (file watch)', async function () {\n\t\tconst link = join(testDir, 'lorem.txt-linked');\n\t\tconst linkTarget = join(testDir, 'lorem.txt');\n\t\tawait Promises.symlink(linkTarget, link);\n\n\t\tawait watcher.watch([{ path: link, excludes: [], recursive: false }]);\n\n\t\treturn basicCrudTest(link, true);\n\t});\n\n\t(!isWindows /* UNC is windows only */ ? test.skip : test)('unc support (folder watch)', async function () {\n\n\t\t// Local UNC paths are in the form of: \\\\localhost\\c$\\my_dir\n\t\tconst uncPath = `\\\\\\\\localhost\\\\${getDriveLetter(testDir)?.toLowerCase()}$\\\\${ltrim(testDir.substr(testDir.indexOf(':') + 1), '\\\\')}`;\n\n\t\tawait watcher.watch([{ path: uncPath, excludes: [], recursive: false }]);\n\n\t\treturn basicCrudTest(join(uncPath, 'newFile.txt'));\n\t});\n\n\t(!isWindows /* UNC is windows only */ ? test.skip : test)('unc support (file watch)', async function () {\n\n\t\t// Local UNC paths are in the form of: \\\\localhost\\c$\\my_dir\n\t\tconst uncPath = `\\\\\\\\localhost\\\\${getDriveLetter(testDir)?.toLowerCase()}$\\\\${ltrim(testDir.substr(testDir.indexOf(':') + 1), '\\\\')}\\\\lorem.txt`;\n\n\t\tawait watcher.watch([{ path: uncPath, excludes: [], recursive: false }]);\n\n\t\treturn basicCrudTest(uncPath, true);\n\t});\n\n\t(isLinux /* linux: is case sensitive */ ? test.skip : test)('wrong casing (folder watch)', async function () {\n\t\tconst wrongCase = join(dirname(testDir), basename(testDir).toUpperCase());\n\n\t\tawait watcher.watch([{ path: wrongCase, excludes: [], recursive: false }]);\n\n\t\treturn basicCrudTest(join(wrongCase, 'newFile.txt'));\n\t});\n\n\t(isLinux /* linux: is case sensitive */ ? test.skip : test)('wrong casing (file watch)', async function () {\n\t\tconst filePath = join(testDir, 'LOREM.txt');\n\t\tawait watcher.watch([{ path: filePath, excludes: [], recursive: false }]);\n\n\t\treturn basicCrudTest(filePath, true);\n\t});\n\n\ttest('invalid path does not explode', async function () {\n\t\tconst invalidPath = join(testDir, 'invalid');\n\n\t\tawait watcher.watch([{ path: invalidPath, excludes: [], recursive: false }]);\n\t});\n\n\t(isMacintosh /* macOS: does not seem to report this */ ? test.skip : test)('deleting watched path is handled properly (folder watch)', async function () {\n\t\tconst watchedPath = join(testDir, 'deep');\n\n\t\tconst watcher = new TestNodeJSFileWatcherLibrary({ path: watchedPath, excludes: [], recursive: false }, changes => { });\n\t\tawait watcher.ready;\n\n\t\t// Delete watched path and ensure watcher is now disposed\n\t\tPromises.rm(watchedPath, RimRafMode.UNLINK);\n\t\tawait watcher.whenDisposed;\n\t});\n\n\ttest('deleting watched path is handled properly (file watch)', async function () {\n\t\tconst watchedPath = join(testDir, 'lorem.txt');\n\t\tconst watcher = new TestNodeJSFileWatcherLibrary({ path: watchedPath, excludes: [], recursive: false }, changes => { });\n\t\tawait watcher.ready;\n\n\t\t// Delete watched path and ensure watcher is now disposed\n\t\tPromises.unlink(watchedPath);\n\t\tawait watcher.whenDisposed;\n\t});\n\n\ttest('watchFileContents', async function () {\n\t\tconst watchedPath = join(testDir, 'lorem.txt');\n\n\t\tconst cts = new CancellationTokenSource();\n\n\t\tconst readyPromise = new DeferredPromise<void>();\n\t\tconst chunkPromise = new DeferredPromise<void>();\n\t\tconst watchPromise = watchFileContents(watchedPath, () => chunkPromise.complete(), () => readyPromise.complete(), cts.token);\n\n\t\tawait readyPromise.p;\n\n\t\tPromises.writeFile(watchedPath, 'Hello World');\n\n\t\tawait chunkPromise.p;\n\n\t\tcts.cancel(); // this will resolve `watchPromise`\n\n\t\treturn watchPromise;\n\t});\n});\n"]}