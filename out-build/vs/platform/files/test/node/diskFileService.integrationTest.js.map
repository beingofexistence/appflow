{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/files/test/node/diskFileService.integrationTest.ts"],"names":[],"mappings":"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","file":"diskFileService.integrationTest.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { createReadStream, existsSync, readdirSync, readFileSync, statSync, writeFileSync } from 'fs';\nimport { tmpdir } from 'os';\nimport { timeout } from 'vs/base/common/async';\nimport { bufferToReadable, bufferToStream, streamToBuffer, streamToBufferReadableStream, VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport { basename, dirname, join, posix } from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { Promises } from 'vs/base/node/pfs';\nimport { flakySuite, getRandomTestPath } from 'vs/base/test/node/testUtils';\nimport { etag, IFileAtomicReadOptions, FileOperation, FileOperationError, FileOperationEvent, FileOperationResult, FilePermission, FileSystemProviderCapabilities, hasFileAtomicReadCapability, hasOpenReadWriteCloseCapability, IFileStat, IFileStatWithMetadata, IReadFileOptions, IStat, NotModifiedSinceFileOperationError, TooLargeFileOperationError, IFileAtomicOptions } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { NullLogService } from 'vs/platform/log/common/log';\n\nfunction getByName(root: IFileStat, name: string): IFileStat | undefined {\n\tif (root.children === undefined) {\n\t\treturn undefined;\n\t}\n\n\treturn root.children.find(child => child.name === name);\n}\n\nfunction toLineByLineReadable(content: string): VSBufferReadable {\n\tlet chunks = content.split('\\n');\n\tchunks = chunks.map((chunk, index) => {\n\t\tif (index === 0) {\n\t\t\treturn chunk;\n\t\t}\n\n\t\treturn '\\n' + chunk;\n\t});\n\n\treturn {\n\t\tread(): VSBuffer | null {\n\t\t\tconst chunk = chunks.shift();\n\t\t\tif (typeof chunk === 'string') {\n\t\t\t\treturn VSBuffer.fromString(chunk);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\nexport class TestDiskFileSystemProvider extends DiskFileSystemProvider {\n\n\ttotalBytesRead: number = 0;\n\n\tprivate invalidStatSize: boolean = false;\n\tprivate smallStatSize: boolean = false;\n\tprivate readonly: boolean = false;\n\n\tprivate _testCapabilities!: FileSystemProviderCapabilities;\n\toverride get capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._testCapabilities) {\n\t\t\tthis._testCapabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.Trash |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy |\n\t\t\t\tFileSystemProviderCapabilities.FileWriteUnlock |\n\t\t\t\tFileSystemProviderCapabilities.FileAtomicRead |\n\t\t\t\tFileSystemProviderCapabilities.FileAtomicWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileAtomicDelete |\n\t\t\t\tFileSystemProviderCapabilities.FileClone;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._testCapabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._testCapabilities;\n\t}\n\n\toverride set capabilities(capabilities: FileSystemProviderCapabilities) {\n\t\tthis._testCapabilities = capabilities;\n\t}\n\n\tsetInvalidStatSize(enabled: boolean): void {\n\t\tthis.invalidStatSize = enabled;\n\t}\n\n\tsetSmallStatSize(enabled: boolean): void {\n\t\tthis.smallStatSize = enabled;\n\t}\n\n\tsetReadonly(readonly: boolean): void {\n\t\tthis.readonly = readonly;\n\t}\n\n\toverride async stat(resource: URI): Promise<IStat> {\n\t\tconst res = await super.stat(resource);\n\n\t\tif (this.invalidStatSize) {\n\t\t\t(res as any).size = String(res.size) as any; // for https://github.com/microsoft/vscode/issues/72909\n\t\t} else if (this.smallStatSize) {\n\t\t\t(res as any).size = 1;\n\t\t} else if (this.readonly) {\n\t\t\t(res as any).permissions = FilePermission.Readonly;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\toverride async read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst bytesRead = await super.read(fd, pos, data, offset, length);\n\n\t\tthis.totalBytesRead += bytesRead;\n\n\t\treturn bytesRead;\n\t}\n\n\toverride async readFile(resource: URI, options?: IFileAtomicReadOptions): Promise<Uint8Array> {\n\t\tconst res = await super.readFile(resource, options);\n\n\t\tthis.totalBytesRead += res.byteLength;\n\n\t\treturn res;\n\t}\n}\n\nDiskFileSystemProvider.configureFlushOnWrite(false); // speed up all unit tests by disabling flush on write\n\nflakySuite('Disk File Service', function () {\n\n\tconst testSchema = 'test';\n\n\tlet service: FileService;\n\tlet fileProvider: TestDiskFileSystemProvider;\n\tlet testProvider: TestDiskFileSystemProvider;\n\n\tlet testDir: string;\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(async () => {\n\t\tconst logService = new NullLogService();\n\n\t\tservice = new FileService(logService);\n\t\tdisposables.add(service);\n\n\t\tfileProvider = new TestDiskFileSystemProvider(logService);\n\t\tdisposables.add(service.registerProvider(Schemas.file, fileProvider));\n\t\tdisposables.add(fileProvider);\n\n\t\ttestProvider = new TestDiskFileSystemProvider(logService);\n\t\tdisposables.add(service.registerProvider(testSchema, testProvider));\n\t\tdisposables.add(testProvider);\n\n\t\ttestDir = getRandomTestPath(tmpdir(), 'vsctests', 'diskfileservice');\n\n\t\tconst sourceDir = FileAccess.asFileUri('vs/platform/files/test/node/fixtures/service').fsPath;\n\n\t\tawait Promises.copy(sourceDir, testDir, { preserveSymlinks: false });\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\n\t\treturn Promises.rm(testDir);\n\t});\n\n\ttest('createFolder', async () => {\n\t\tlet event: FileOperationEvent | undefined;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst parent = await service.resolve(URI.file(testDir));\n\n\t\tconst newFolderResource = URI.file(join(parent.resource.fsPath, 'newFolder'));\n\n\t\tconst newFolder = await service.createFolder(newFolderResource);\n\n\t\tassert.strictEqual(newFolder.name, 'newFolder');\n\t\tassert.strictEqual(existsSync(newFolder.resource.fsPath), true);\n\n\t\tassert.ok(event);\n\t\tassert.strictEqual(event!.resource.fsPath, newFolderResource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.CREATE);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, newFolderResource.fsPath);\n\t\tassert.strictEqual(event!.target!.isDirectory, true);\n\t});\n\n\ttest('createFolder: creating multiple folders at once', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst multiFolderPaths = ['a', 'couple', 'of', 'folders'];\n\t\tconst parent = await service.resolve(URI.file(testDir));\n\n\t\tconst newFolderResource = URI.file(join(parent.resource.fsPath, ...multiFolderPaths));\n\n\t\tconst newFolder = await service.createFolder(newFolderResource);\n\n\t\tconst lastFolderName = multiFolderPaths[multiFolderPaths.length - 1];\n\t\tassert.strictEqual(newFolder.name, lastFolderName);\n\t\tassert.strictEqual(existsSync(newFolder.resource.fsPath), true);\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, newFolderResource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.CREATE);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, newFolderResource.fsPath);\n\t\tassert.strictEqual(event!.target!.isDirectory, true);\n\t});\n\n\ttest('exists', async () => {\n\t\tlet exists = await service.exists(URI.file(testDir));\n\t\tassert.strictEqual(exists, true);\n\n\t\texists = await service.exists(URI.file(testDir + 'something'));\n\t\tassert.strictEqual(exists, false);\n\t});\n\n\ttest('resolve - file', async () => {\n\t\tconst resource = FileAccess.asFileUri('vs/platform/files/test/node/fixtures/resolver/index.html');\n\t\tconst resolved = await service.resolve(resource);\n\n\t\tassert.strictEqual(resolved.name, 'index.html');\n\t\tassert.strictEqual(resolved.isFile, true);\n\t\tassert.strictEqual(resolved.isDirectory, false);\n\t\tassert.strictEqual(resolved.readonly, false);\n\t\tassert.strictEqual(resolved.isSymbolicLink, false);\n\t\tassert.strictEqual(resolved.resource.toString(), resource.toString());\n\t\tassert.strictEqual(resolved.children, undefined);\n\t\tassert.ok(resolved.mtime! > 0);\n\t\tassert.ok(resolved.ctime! > 0);\n\t\tassert.ok(resolved.size! > 0);\n\t});\n\n\ttest('resolve - directory', async () => {\n\t\tconst testsElements = ['examples', 'other', 'index.html', 'site.css'];\n\n\t\tconst resource = FileAccess.asFileUri('vs/platform/files/test/node/fixtures/resolver');\n\t\tconst result = await service.resolve(resource);\n\n\t\tassert.ok(result);\n\t\tassert.strictEqual(result.resource.toString(), resource.toString());\n\t\tassert.strictEqual(result.name, 'resolver');\n\t\tassert.ok(result.children);\n\t\tassert.ok(result.children!.length > 0);\n\t\tassert.ok(result.isDirectory);\n\t\tassert.strictEqual(result.readonly, false);\n\t\tassert.ok(result.mtime! > 0);\n\t\tassert.ok(result.ctime! > 0);\n\t\tassert.strictEqual(result.children!.length, testsElements.length);\n\n\t\tassert.ok(result.children!.every(entry => {\n\t\t\treturn testsElements.some(name => {\n\t\t\t\treturn basename(entry.resource.fsPath) === name;\n\t\t\t});\n\t\t}));\n\n\t\tresult.children!.forEach(value => {\n\t\t\tassert.ok(basename(value.resource.fsPath));\n\t\t\tif (['examples', 'other'].indexOf(basename(value.resource.fsPath)) >= 0) {\n\t\t\t\tassert.ok(value.isDirectory);\n\t\t\t\tassert.strictEqual(value.mtime, undefined);\n\t\t\t\tassert.strictEqual(value.ctime, undefined);\n\t\t\t} else if (basename(value.resource.fsPath) === 'index.html') {\n\t\t\t\tassert.ok(!value.isDirectory);\n\t\t\t\tassert.ok(!value.children);\n\t\t\t\tassert.strictEqual(value.mtime, undefined);\n\t\t\t\tassert.strictEqual(value.ctime, undefined);\n\t\t\t} else if (basename(value.resource.fsPath) === 'site.css') {\n\t\t\t\tassert.ok(!value.isDirectory);\n\t\t\t\tassert.ok(!value.children);\n\t\t\t\tassert.strictEqual(value.mtime, undefined);\n\t\t\t\tassert.strictEqual(value.ctime, undefined);\n\t\t\t} else {\n\t\t\t\tassert.ok(!'Unexpected value ' + basename(value.resource.fsPath));\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('resolve - directory - with metadata', async () => {\n\t\tconst testsElements = ['examples', 'other', 'index.html', 'site.css'];\n\n\t\tconst result = await service.resolve(FileAccess.asFileUri('vs/platform/files/test/node/fixtures/resolver'), { resolveMetadata: true });\n\n\t\tassert.ok(result);\n\t\tassert.strictEqual(result.name, 'resolver');\n\t\tassert.ok(result.children);\n\t\tassert.ok(result.children!.length > 0);\n\t\tassert.ok(result.isDirectory);\n\t\tassert.ok(result.mtime! > 0);\n\t\tassert.ok(result.ctime! > 0);\n\t\tassert.strictEqual(result.children!.length, testsElements.length);\n\n\t\tassert.ok(result.children!.every(entry => {\n\t\t\treturn testsElements.some(name => {\n\t\t\t\treturn basename(entry.resource.fsPath) === name;\n\t\t\t});\n\t\t}));\n\n\t\tassert.ok(result.children!.every(entry => entry.etag.length > 0));\n\n\t\tresult.children!.forEach(value => {\n\t\t\tassert.ok(basename(value.resource.fsPath));\n\t\t\tif (['examples', 'other'].indexOf(basename(value.resource.fsPath)) >= 0) {\n\t\t\t\tassert.ok(value.isDirectory);\n\t\t\t\tassert.ok(value.mtime! > 0);\n\t\t\t\tassert.ok(value.ctime! > 0);\n\t\t\t} else if (basename(value.resource.fsPath) === 'index.html') {\n\t\t\t\tassert.ok(!value.isDirectory);\n\t\t\t\tassert.ok(!value.children);\n\t\t\t\tassert.ok(value.mtime! > 0);\n\t\t\t\tassert.ok(value.ctime! > 0);\n\t\t\t} else if (basename(value.resource.fsPath) === 'site.css') {\n\t\t\t\tassert.ok(!value.isDirectory);\n\t\t\t\tassert.ok(!value.children);\n\t\t\t\tassert.ok(value.mtime! > 0);\n\t\t\t\tassert.ok(value.ctime! > 0);\n\t\t\t} else {\n\t\t\t\tassert.ok(!'Unexpected value ' + basename(value.resource.fsPath));\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('resolve - directory with resolveTo', async () => {\n\t\tconst resolved = await service.resolve(URI.file(testDir), { resolveTo: [URI.file(join(testDir, 'deep'))] });\n\t\tassert.strictEqual(resolved.children!.length, 8);\n\n\t\tconst deep = (getByName(resolved, 'deep')!);\n\t\tassert.strictEqual(deep.children!.length, 4);\n\t});\n\n\ttest('resolve - directory - resolveTo single directory', async () => {\n\t\tconst resolverFixturesPath = FileAccess.asFileUri('vs/platform/files/test/node/fixtures/resolver').fsPath;\n\t\tconst result = await service.resolve(URI.file(resolverFixturesPath), { resolveTo: [URI.file(join(resolverFixturesPath, 'other/deep'))] });\n\n\t\tassert.ok(result);\n\t\tassert.ok(result.children);\n\t\tassert.ok(result.children!.length > 0);\n\t\tassert.ok(result.isDirectory);\n\n\t\tconst children = result.children!;\n\t\tassert.strictEqual(children.length, 4);\n\n\t\tconst other = getByName(result, 'other');\n\t\tassert.ok(other);\n\t\tassert.ok(other!.children!.length > 0);\n\n\t\tconst deep = getByName(other!, 'deep');\n\t\tassert.ok(deep);\n\t\tassert.ok(deep!.children!.length > 0);\n\t\tassert.strictEqual(deep!.children!.length, 4);\n\t});\n\n\ttest('resolve directory - resolveTo multiple directories', () => {\n\t\treturn testResolveDirectoryWithTarget(false);\n\t});\n\n\ttest('resolve directory - resolveTo with a URI that has query parameter (https://github.com/microsoft/vscode/issues/128151)', () => {\n\t\treturn testResolveDirectoryWithTarget(true);\n\t});\n\n\tasync function testResolveDirectoryWithTarget(withQueryParam: boolean): Promise<void> {\n\t\tconst resolverFixturesPath = FileAccess.asFileUri('vs/platform/files/test/node/fixtures/resolver').fsPath;\n\t\tconst result = await service.resolve(URI.file(resolverFixturesPath).with({ query: withQueryParam ? 'test' : undefined }), {\n\t\t\tresolveTo: [\n\t\t\t\tURI.file(join(resolverFixturesPath, 'other/deep')).with({ query: withQueryParam ? 'test' : undefined }),\n\t\t\t\tURI.file(join(resolverFixturesPath, 'examples')).with({ query: withQueryParam ? 'test' : undefined })\n\t\t\t]\n\t\t});\n\n\t\tassert.ok(result);\n\t\tassert.ok(result.children);\n\t\tassert.ok(result.children!.length > 0);\n\t\tassert.ok(result.isDirectory);\n\n\t\tconst children = result.children!;\n\t\tassert.strictEqual(children.length, 4);\n\n\t\tconst other = getByName(result, 'other');\n\t\tassert.ok(other);\n\t\tassert.ok(other!.children!.length > 0);\n\n\t\tconst deep = getByName(other!, 'deep');\n\t\tassert.ok(deep);\n\t\tassert.ok(deep!.children!.length > 0);\n\t\tassert.strictEqual(deep!.children!.length, 4);\n\n\t\tconst examples = getByName(result, 'examples');\n\t\tassert.ok(examples);\n\t\tassert.ok(examples!.children!.length > 0);\n\t\tassert.strictEqual(examples!.children!.length, 4);\n\t}\n\n\ttest('resolve directory - resolveSingleChildFolders', async () => {\n\t\tconst resolverFixturesPath = FileAccess.asFileUri('vs/platform/files/test/node/fixtures/resolver/other').fsPath;\n\t\tconst result = await service.resolve(URI.file(resolverFixturesPath), { resolveSingleChildDescendants: true });\n\n\t\tassert.ok(result);\n\t\tassert.ok(result.children);\n\t\tassert.ok(result.children!.length > 0);\n\t\tassert.ok(result.isDirectory);\n\n\t\tconst children = result.children!;\n\t\tassert.strictEqual(children.length, 1);\n\n\t\tconst deep = getByName(result, 'deep');\n\t\tassert.ok(deep);\n\t\tassert.ok(deep!.children!.length > 0);\n\t\tassert.strictEqual(deep!.children!.length, 4);\n\t});\n\n\ttest('resolves', async () => {\n\t\tconst res = await service.resolveAll([\n\t\t\t{ resource: URI.file(testDir), options: { resolveTo: [URI.file(join(testDir, 'deep'))] } },\n\t\t\t{ resource: URI.file(join(testDir, 'deep')) }\n\t\t]);\n\n\t\tconst r1 = (res[0].stat!);\n\t\tassert.strictEqual(r1.children!.length, 8);\n\n\t\tconst deep = (getByName(r1, 'deep')!);\n\t\tassert.strictEqual(deep.children!.length, 4);\n\n\t\tconst r2 = (res[1].stat!);\n\t\tassert.strictEqual(r2.children!.length, 4);\n\t\tassert.strictEqual(r2.name, 'deep');\n\t});\n\n\ttest('resolve - folder symbolic link', async () => {\n\t\tconst link = URI.file(join(testDir, 'deep-link'));\n\t\tawait Promises.symlink(join(testDir, 'deep'), link.fsPath, 'junction');\n\n\t\tconst resolved = await service.resolve(link);\n\t\tassert.strictEqual(resolved.children!.length, 4);\n\t\tassert.strictEqual(resolved.isDirectory, true);\n\t\tassert.strictEqual(resolved.isSymbolicLink, true);\n\t});\n\n\t(isWindows ? test.skip /* windows: cannot create file symbolic link without elevated context */ : test)('resolve - file symbolic link', async () => {\n\t\tconst link = URI.file(join(testDir, 'lorem.txt-linked'));\n\t\tawait Promises.symlink(join(testDir, 'lorem.txt'), link.fsPath);\n\n\t\tconst resolved = await service.resolve(link);\n\t\tassert.strictEqual(resolved.isDirectory, false);\n\t\tassert.strictEqual(resolved.isSymbolicLink, true);\n\t});\n\n\ttest('resolve - symbolic link pointing to nonexistent file does not break', async () => {\n\t\tawait Promises.symlink(join(testDir, 'foo'), join(testDir, 'bar'), 'junction');\n\n\t\tconst resolved = await service.resolve(URI.file(testDir));\n\t\tassert.strictEqual(resolved.isDirectory, true);\n\t\tassert.strictEqual(resolved.children!.length, 9);\n\n\t\tconst resolvedLink = resolved.children?.find(child => child.name === 'bar' && child.isSymbolicLink);\n\t\tassert.ok(resolvedLink);\n\n\t\tassert.ok(!resolvedLink?.isDirectory);\n\t\tassert.ok(!resolvedLink?.isFile);\n\t});\n\n\ttest('stat - file', async () => {\n\t\tconst resource = FileAccess.asFileUri('vs/platform/files/test/node/fixtures/resolver/index.html');\n\t\tconst resolved = await service.stat(resource);\n\n\t\tassert.strictEqual(resolved.name, 'index.html');\n\t\tassert.strictEqual(resolved.isFile, true);\n\t\tassert.strictEqual(resolved.isDirectory, false);\n\t\tassert.strictEqual(resolved.readonly, false);\n\t\tassert.strictEqual(resolved.isSymbolicLink, false);\n\t\tassert.strictEqual(resolved.resource.toString(), resource.toString());\n\t\tassert.ok(resolved.mtime! > 0);\n\t\tassert.ok(resolved.ctime! > 0);\n\t\tassert.ok(resolved.size! > 0);\n\t});\n\n\ttest('stat - directory', async () => {\n\t\tconst resource = FileAccess.asFileUri('vs/platform/files/test/node/fixtures/resolver');\n\t\tconst result = await service.stat(resource);\n\n\t\tassert.ok(result);\n\t\tassert.strictEqual(result.resource.toString(), resource.toString());\n\t\tassert.strictEqual(result.name, 'resolver');\n\t\tassert.ok(result.isDirectory);\n\t\tassert.strictEqual(result.readonly, false);\n\t\tassert.ok(result.mtime! > 0);\n\t\tassert.ok(result.ctime! > 0);\n\t});\n\n\ttest('deleteFile (non recursive)', async () => {\n\t\treturn testDeleteFile(false, false);\n\t});\n\n\ttest('deleteFile (recursive)', async () => {\n\t\treturn testDeleteFile(false, true);\n\t});\n\n\t(isLinux /* trash is unreliable on Linux */ ? test.skip : test)('deleteFile (useTrash)', async () => {\n\t\treturn testDeleteFile(true, false);\n\t});\n\n\tasync function testDeleteFile(useTrash: boolean, recursive: boolean): Promise<void> {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst resource = URI.file(join(testDir, 'deep', 'conway.js'));\n\t\tconst source = await service.resolve(resource);\n\n\t\tassert.strictEqual(await service.canDelete(source.resource, { useTrash, recursive }), true);\n\t\tawait service.del(source.resource, { useTrash, recursive });\n\n\t\tassert.strictEqual(existsSync(source.resource.fsPath), false);\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.DELETE);\n\n\t\tlet error: Error | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.del(source.resource, { useTrash, recursive });\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\n\t\tassert.ok(error);\n\t\tassert.strictEqual((<FileOperationError>error).fileOperationResult, FileOperationResult.FILE_NOT_FOUND);\n\t}\n\n\t(isWindows ? test.skip /* windows: cannot create file symbolic link without elevated context */ : test)('deleteFile - symbolic link (exists)', async () => {\n\t\tconst target = URI.file(join(testDir, 'lorem.txt'));\n\t\tconst link = URI.file(join(testDir, 'lorem.txt-linked'));\n\t\tawait Promises.symlink(target.fsPath, link.fsPath);\n\n\t\tconst source = await service.resolve(link);\n\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tassert.strictEqual(await service.canDelete(source.resource), true);\n\t\tawait service.del(source.resource);\n\n\t\tassert.strictEqual(existsSync(source.resource.fsPath), false);\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, link.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.DELETE);\n\n\t\tassert.strictEqual(existsSync(target.fsPath), true); // target the link pointed to is never deleted\n\t});\n\n\t(isWindows ? test.skip /* windows: cannot create file symbolic link without elevated context */ : test)('deleteFile - symbolic link (pointing to nonexistent file)', async () => {\n\t\tconst target = URI.file(join(testDir, 'foo'));\n\t\tconst link = URI.file(join(testDir, 'bar'));\n\t\tawait Promises.symlink(target.fsPath, link.fsPath);\n\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tassert.strictEqual(await service.canDelete(link), true);\n\t\tawait service.del(link);\n\n\t\tassert.strictEqual(existsSync(link.fsPath), false);\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, link.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.DELETE);\n\t});\n\n\ttest('deleteFolder (recursive)', async () => {\n\t\treturn testDeleteFolderRecursive(false, false);\n\t});\n\n\ttest('deleteFolder (recursive, atomic)', async () => {\n\t\treturn testDeleteFolderRecursive(false, { postfix: '.vsctmp' });\n\t});\n\n\t(isLinux /* trash is unreliable on Linux */ ? test.skip : test)('deleteFolder (recursive, useTrash)', async () => {\n\t\treturn testDeleteFolderRecursive(true, false);\n\t});\n\n\tasync function testDeleteFolderRecursive(useTrash: boolean, atomic: IFileAtomicOptions | false): Promise<void> {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst resource = URI.file(join(testDir, 'deep'));\n\t\tconst source = await service.resolve(resource);\n\n\t\tassert.strictEqual(await service.canDelete(source.resource, { recursive: true, useTrash, atomic }), true);\n\t\tawait service.del(source.resource, { recursive: true, useTrash, atomic });\n\n\t\tassert.strictEqual(existsSync(source.resource.fsPath), false);\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.DELETE);\n\t}\n\n\ttest('deleteFolder (non recursive)', async () => {\n\t\tconst resource = URI.file(join(testDir, 'deep'));\n\t\tconst source = await service.resolve(resource);\n\n\t\tassert.ok((await service.canDelete(source.resource)) instanceof Error);\n\n\t\tlet error;\n\t\ttry {\n\t\t\tawait service.del(source.resource);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\n\t\tassert.ok(error);\n\t});\n\n\ttest('deleteFolder empty folder (recursive)', () => {\n\t\treturn testDeleteEmptyFolder(true);\n\t});\n\n\ttest('deleteFolder empty folder (non recursive)', () => {\n\t\treturn testDeleteEmptyFolder(false);\n\t});\n\n\tasync function testDeleteEmptyFolder(recursive: boolean): Promise<void> {\n\t\tconst { resource } = await service.createFolder(URI.file(join(testDir, 'deep', 'empty')));\n\n\t\tawait service.del(resource, { recursive });\n\n\t\tassert.strictEqual(await service.exists(resource), false);\n\t}\n\n\ttest('move', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst source = URI.file(join(testDir, 'index.html'));\n\t\tconst sourceContents = readFileSync(source.fsPath);\n\n\t\tconst target = URI.file(join(dirname(source.fsPath), 'other.html'));\n\n\t\tassert.strictEqual(await service.canMove(source, target), true);\n\t\tconst renamed = await service.move(source, target);\n\n\t\tassert.strictEqual(existsSync(renamed.resource.fsPath), true);\n\t\tassert.strictEqual(existsSync(source.fsPath), false);\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, source.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.MOVE);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, renamed.resource.fsPath);\n\n\t\tconst targetContents = readFileSync(target.fsPath);\n\n\t\tassert.strictEqual(sourceContents.byteLength, targetContents.byteLength);\n\t\tassert.strictEqual(sourceContents.toString(), targetContents.toString());\n\t});\n\n\ttest('move - across providers (buffered => buffered)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\t\tsetCapabilities(testProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testMoveAcrossProviders();\n\t});\n\n\ttest('move - across providers (unbuffered => unbuffered)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\t\tsetCapabilities(testProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testMoveAcrossProviders();\n\t});\n\n\ttest('move - across providers (buffered => unbuffered)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\t\tsetCapabilities(testProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testMoveAcrossProviders();\n\t});\n\n\ttest('move - across providers (unbuffered => buffered)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\t\tsetCapabilities(testProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testMoveAcrossProviders();\n\t});\n\n\ttest('move - across providers - large (buffered => buffered)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\t\tsetCapabilities(testProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testMoveAcrossProviders('lorem.txt');\n\t});\n\n\ttest('move - across providers - large (unbuffered => unbuffered)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\t\tsetCapabilities(testProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testMoveAcrossProviders('lorem.txt');\n\t});\n\n\ttest('move - across providers - large (buffered => unbuffered)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\t\tsetCapabilities(testProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testMoveAcrossProviders('lorem.txt');\n\t});\n\n\ttest('move - across providers - large (unbuffered => buffered)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\t\tsetCapabilities(testProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testMoveAcrossProviders('lorem.txt');\n\t});\n\n\tasync function testMoveAcrossProviders(sourceFile = 'index.html'): Promise<void> {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst source = URI.file(join(testDir, sourceFile));\n\t\tconst sourceContents = readFileSync(source.fsPath);\n\n\t\tconst target = URI.file(join(dirname(source.fsPath), 'other.html')).with({ scheme: testSchema });\n\n\t\tassert.strictEqual(await service.canMove(source, target), true);\n\t\tconst renamed = await service.move(source, target);\n\n\t\tassert.strictEqual(existsSync(renamed.resource.fsPath), true);\n\t\tassert.strictEqual(existsSync(source.fsPath), false);\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, source.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.COPY);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, renamed.resource.fsPath);\n\n\t\tconst targetContents = readFileSync(target.fsPath);\n\n\t\tassert.strictEqual(sourceContents.byteLength, targetContents.byteLength);\n\t\tassert.strictEqual(sourceContents.toString(), targetContents.toString());\n\t}\n\n\ttest('move - multi folder', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst multiFolderPaths = ['a', 'couple', 'of', 'folders'];\n\t\tconst renameToPath = join(...multiFolderPaths, 'other.html');\n\n\t\tconst source = URI.file(join(testDir, 'index.html'));\n\n\t\tassert.strictEqual(await service.canMove(source, URI.file(join(dirname(source.fsPath), renameToPath))), true);\n\t\tconst renamed = await service.move(source, URI.file(join(dirname(source.fsPath), renameToPath)));\n\n\t\tassert.strictEqual(existsSync(renamed.resource.fsPath), true);\n\t\tassert.strictEqual(existsSync(source.fsPath), false);\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, source.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.MOVE);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, renamed.resource.fsPath);\n\t});\n\n\ttest('move - directory', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst source = URI.file(join(testDir, 'deep'));\n\n\t\tassert.strictEqual(await service.canMove(source, URI.file(join(dirname(source.fsPath), 'deeper'))), true);\n\t\tconst renamed = await service.move(source, URI.file(join(dirname(source.fsPath), 'deeper')));\n\n\t\tassert.strictEqual(existsSync(renamed.resource.fsPath), true);\n\t\tassert.strictEqual(existsSync(source.fsPath), false);\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, source.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.MOVE);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, renamed.resource.fsPath);\n\t});\n\n\ttest('move - directory - across providers (buffered => buffered)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\t\tsetCapabilities(testProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testMoveFolderAcrossProviders();\n\t});\n\n\ttest('move - directory - across providers (unbuffered => unbuffered)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\t\tsetCapabilities(testProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testMoveFolderAcrossProviders();\n\t});\n\n\ttest('move - directory - across providers (buffered => unbuffered)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\t\tsetCapabilities(testProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testMoveFolderAcrossProviders();\n\t});\n\n\ttest('move - directory - across providers (unbuffered => buffered)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\t\tsetCapabilities(testProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testMoveFolderAcrossProviders();\n\t});\n\n\tasync function testMoveFolderAcrossProviders(): Promise<void> {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst source = URI.file(join(testDir, 'deep'));\n\t\tconst sourceChildren = readdirSync(source.fsPath);\n\n\t\tconst target = URI.file(join(dirname(source.fsPath), 'deeper')).with({ scheme: testSchema });\n\n\t\tassert.strictEqual(await service.canMove(source, target), true);\n\t\tconst renamed = await service.move(source, target);\n\n\t\tassert.strictEqual(existsSync(renamed.resource.fsPath), true);\n\t\tassert.strictEqual(existsSync(source.fsPath), false);\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, source.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.COPY);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, renamed.resource.fsPath);\n\n\t\tconst targetChildren = readdirSync(target.fsPath);\n\t\tassert.strictEqual(sourceChildren.length, targetChildren.length);\n\t\tfor (let i = 0; i < sourceChildren.length; i++) {\n\t\t\tassert.strictEqual(sourceChildren[i], targetChildren[i]);\n\t\t}\n\t}\n\n\ttest('move - MIX CASE', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst source = await service.resolve(URI.file(join(testDir, 'index.html')), { resolveMetadata: true });\n\t\tassert.ok(source.size > 0);\n\n\t\tconst renamedResource = URI.file(join(dirname(source.resource.fsPath), 'INDEX.html'));\n\t\tassert.strictEqual(await service.canMove(source.resource, renamedResource), true);\n\t\tlet renamed = await service.move(source.resource, renamedResource);\n\n\t\tassert.strictEqual(existsSync(renamedResource.fsPath), true);\n\t\tassert.strictEqual(basename(renamedResource.fsPath), 'INDEX.html');\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, source.resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.MOVE);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, renamedResource.fsPath);\n\n\t\trenamed = await service.resolve(renamedResource, { resolveMetadata: true });\n\t\tassert.strictEqual(source.size, renamed.size);\n\t});\n\n\ttest('move - same file', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst source = await service.resolve(URI.file(join(testDir, 'index.html')), { resolveMetadata: true });\n\t\tassert.ok(source.size > 0);\n\n\t\tassert.strictEqual(await service.canMove(source.resource, URI.file(source.resource.fsPath)), true);\n\t\tlet renamed = await service.move(source.resource, URI.file(source.resource.fsPath));\n\n\t\tassert.strictEqual(existsSync(renamed.resource.fsPath), true);\n\t\tassert.strictEqual(basename(renamed.resource.fsPath), 'index.html');\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, source.resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.MOVE);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, renamed.resource.fsPath);\n\n\t\trenamed = await service.resolve(renamed.resource, { resolveMetadata: true });\n\t\tassert.strictEqual(source.size, renamed.size);\n\t});\n\n\ttest('move - same file #2', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst source = await service.resolve(URI.file(join(testDir, 'index.html')), { resolveMetadata: true });\n\t\tassert.ok(source.size > 0);\n\n\t\tconst targetParent = URI.file(testDir);\n\t\tconst target = targetParent.with({ path: posix.join(targetParent.path, posix.basename(source.resource.path)) });\n\n\t\tassert.strictEqual(await service.canMove(source.resource, target), true);\n\t\tlet renamed = await service.move(source.resource, target);\n\n\t\tassert.strictEqual(existsSync(renamed.resource.fsPath), true);\n\t\tassert.strictEqual(basename(renamed.resource.fsPath), 'index.html');\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, source.resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.MOVE);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, renamed.resource.fsPath);\n\n\t\trenamed = await service.resolve(renamed.resource, { resolveMetadata: true });\n\t\tassert.strictEqual(source.size, renamed.size);\n\t});\n\n\ttest('move - source parent of target', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tlet source = await service.resolve(URI.file(join(testDir, 'index.html')), { resolveMetadata: true });\n\t\tconst originalSize = source.size;\n\t\tassert.ok(originalSize > 0);\n\n\t\tassert.ok((await service.canMove(URI.file(testDir), URI.file(join(testDir, 'binary.txt'))) instanceof Error));\n\n\t\tlet error;\n\t\ttry {\n\t\t\tawait service.move(URI.file(testDir), URI.file(join(testDir, 'binary.txt')));\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\n\t\tassert.ok(error);\n\t\tassert.ok(!event!);\n\n\t\tsource = await service.resolve(source.resource, { resolveMetadata: true });\n\t\tassert.strictEqual(originalSize, source.size);\n\t});\n\n\ttest('move - FILE_MOVE_CONFLICT', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tlet source = await service.resolve(URI.file(join(testDir, 'index.html')), { resolveMetadata: true });\n\t\tconst originalSize = source.size;\n\t\tassert.ok(originalSize > 0);\n\n\t\tassert.ok((await service.canMove(source.resource, URI.file(join(testDir, 'binary.txt'))) instanceof Error));\n\n\t\tlet error;\n\t\ttry {\n\t\t\tawait service.move(source.resource, URI.file(join(testDir, 'binary.txt')));\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\n\t\tassert.strictEqual(error.fileOperationResult, FileOperationResult.FILE_MOVE_CONFLICT);\n\t\tassert.ok(!event!);\n\n\t\tsource = await service.resolve(source.resource, { resolveMetadata: true });\n\t\tassert.strictEqual(originalSize, source.size);\n\t});\n\n\ttest('move - overwrite folder with file', async () => {\n\t\tlet createEvent: FileOperationEvent;\n\t\tlet moveEvent: FileOperationEvent;\n\t\tlet deleteEvent: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => {\n\t\t\tif (e.operation === FileOperation.CREATE) {\n\t\t\t\tcreateEvent = e;\n\t\t\t} else if (e.operation === FileOperation.DELETE) {\n\t\t\t\tdeleteEvent = e;\n\t\t\t} else if (e.operation === FileOperation.MOVE) {\n\t\t\t\tmoveEvent = e;\n\t\t\t}\n\t\t}));\n\n\t\tconst parent = await service.resolve(URI.file(testDir));\n\t\tconst folderResource = URI.file(join(parent.resource.fsPath, 'conway.js'));\n\t\tconst f = await service.createFolder(folderResource);\n\t\tconst source = URI.file(join(testDir, 'deep', 'conway.js'));\n\n\t\tassert.strictEqual(await service.canMove(source, f.resource, true), true);\n\t\tconst moved = await service.move(source, f.resource, true);\n\n\t\tassert.strictEqual(existsSync(moved.resource.fsPath), true);\n\t\tassert.ok(statSync(moved.resource.fsPath).isFile);\n\t\tassert.ok(createEvent!);\n\t\tassert.ok(deleteEvent!);\n\t\tassert.ok(moveEvent!);\n\t\tassert.strictEqual(moveEvent!.resource.fsPath, source.fsPath);\n\t\tassert.strictEqual(moveEvent!.target!.resource.fsPath, moved.resource.fsPath);\n\t\tassert.strictEqual(deleteEvent!.resource.fsPath, folderResource.fsPath);\n\t});\n\n\ttest('copy', async () => {\n\t\tawait doTestCopy();\n\t});\n\n\ttest('copy - unbuffered (FileSystemProviderCapabilities.FileReadWrite)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\tawait doTestCopy();\n\t});\n\n\ttest('copy - unbuffered large (FileSystemProviderCapabilities.FileReadWrite)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\tawait doTestCopy('lorem.txt');\n\t});\n\n\ttest('copy - buffered (FileSystemProviderCapabilities.FileOpenReadWriteClose)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\tawait doTestCopy();\n\t});\n\n\ttest('copy - buffered large (FileSystemProviderCapabilities.FileOpenReadWriteClose)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\tawait doTestCopy('lorem.txt');\n\t});\n\n\tfunction setCapabilities(provider: TestDiskFileSystemProvider, capabilities: FileSystemProviderCapabilities): void {\n\t\tprovider.capabilities = capabilities;\n\t\tif (isLinux) {\n\t\t\tprovider.capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\t}\n\n\tasync function doTestCopy(sourceName: string = 'index.html') {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst source = await service.resolve(URI.file(join(testDir, sourceName)));\n\t\tconst target = URI.file(join(testDir, 'other.html'));\n\n\t\tassert.strictEqual(await service.canCopy(source.resource, target), true);\n\t\tconst copied = await service.copy(source.resource, target);\n\n\t\tassert.strictEqual(existsSync(copied.resource.fsPath), true);\n\t\tassert.strictEqual(existsSync(source.resource.fsPath), true);\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, source.resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.COPY);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, copied.resource.fsPath);\n\n\t\tconst sourceContents = readFileSync(source.resource.fsPath);\n\t\tconst targetContents = readFileSync(target.fsPath);\n\n\t\tassert.strictEqual(sourceContents.byteLength, targetContents.byteLength);\n\t\tassert.strictEqual(sourceContents.toString(), targetContents.toString());\n\t}\n\n\ttest('copy - overwrite folder with file', async () => {\n\t\tlet createEvent: FileOperationEvent;\n\t\tlet copyEvent: FileOperationEvent;\n\t\tlet deleteEvent: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => {\n\t\t\tif (e.operation === FileOperation.CREATE) {\n\t\t\t\tcreateEvent = e;\n\t\t\t} else if (e.operation === FileOperation.DELETE) {\n\t\t\t\tdeleteEvent = e;\n\t\t\t} else if (e.operation === FileOperation.COPY) {\n\t\t\t\tcopyEvent = e;\n\t\t\t}\n\t\t}));\n\n\t\tconst parent = await service.resolve(URI.file(testDir));\n\t\tconst folderResource = URI.file(join(parent.resource.fsPath, 'conway.js'));\n\t\tconst f = await service.createFolder(folderResource);\n\t\tconst source = URI.file(join(testDir, 'deep', 'conway.js'));\n\n\t\tassert.strictEqual(await service.canCopy(source, f.resource, true), true);\n\t\tconst copied = await service.copy(source, f.resource, true);\n\n\t\tassert.strictEqual(existsSync(copied.resource.fsPath), true);\n\t\tassert.ok(statSync(copied.resource.fsPath).isFile);\n\t\tassert.ok(createEvent!);\n\t\tassert.ok(deleteEvent!);\n\t\tassert.ok(copyEvent!);\n\t\tassert.strictEqual(copyEvent!.resource.fsPath, source.fsPath);\n\t\tassert.strictEqual(copyEvent!.target!.resource.fsPath, copied.resource.fsPath);\n\t\tassert.strictEqual(deleteEvent!.resource.fsPath, folderResource.fsPath);\n\t});\n\n\ttest('copy - MIX CASE same target - no overwrite', async () => {\n\t\tlet source = await service.resolve(URI.file(join(testDir, 'index.html')), { resolveMetadata: true });\n\t\tconst originalSize = source.size;\n\t\tassert.ok(originalSize > 0);\n\n\t\tconst target = URI.file(join(dirname(source.resource.fsPath), 'INDEX.html'));\n\n\t\tconst canCopy = await service.canCopy(source.resource, target);\n\n\t\tlet error;\n\t\tlet copied: IFileStatWithMetadata;\n\t\ttry {\n\t\t\tcopied = await service.copy(source.resource, target);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\n\t\tif (isLinux) {\n\t\t\tassert.ok(!error);\n\t\t\tassert.strictEqual(canCopy, true);\n\n\t\t\tassert.strictEqual(existsSync(copied!.resource.fsPath), true);\n\t\t\tassert.ok(readdirSync(testDir).some(f => f === 'INDEX.html'));\n\t\t\tassert.strictEqual(source.size, copied!.size);\n\t\t} else {\n\t\t\tassert.ok(error);\n\t\t\tassert.ok(canCopy instanceof Error);\n\n\t\t\tsource = await service.resolve(source.resource, { resolveMetadata: true });\n\t\t\tassert.strictEqual(originalSize, source.size);\n\t\t}\n\t});\n\n\ttest('copy - MIX CASE same target - overwrite', async () => {\n\t\tlet source = await service.resolve(URI.file(join(testDir, 'index.html')), { resolveMetadata: true });\n\t\tconst originalSize = source.size;\n\t\tassert.ok(originalSize > 0);\n\n\t\tconst target = URI.file(join(dirname(source.resource.fsPath), 'INDEX.html'));\n\n\t\tconst canCopy = await service.canCopy(source.resource, target, true);\n\n\t\tlet error;\n\t\tlet copied: IFileStatWithMetadata;\n\t\ttry {\n\t\t\tcopied = await service.copy(source.resource, target, true);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\n\t\tif (isLinux) {\n\t\t\tassert.ok(!error);\n\t\t\tassert.strictEqual(canCopy, true);\n\n\t\t\tassert.strictEqual(existsSync(copied!.resource.fsPath), true);\n\t\t\tassert.ok(readdirSync(testDir).some(f => f === 'INDEX.html'));\n\t\t\tassert.strictEqual(source.size, copied!.size);\n\t\t} else {\n\t\t\tassert.ok(error);\n\t\t\tassert.ok(canCopy instanceof Error);\n\n\t\t\tsource = await service.resolve(source.resource, { resolveMetadata: true });\n\t\t\tassert.strictEqual(originalSize, source.size);\n\t\t}\n\t});\n\n\ttest('copy - MIX CASE different target - overwrite', async () => {\n\t\tconst source1 = await service.resolve(URI.file(join(testDir, 'index.html')), { resolveMetadata: true });\n\t\tassert.ok(source1.size > 0);\n\n\t\tconst renamed = await service.move(source1.resource, URI.file(join(dirname(source1.resource.fsPath), 'CONWAY.js')));\n\t\tassert.strictEqual(existsSync(renamed.resource.fsPath), true);\n\t\tassert.ok(readdirSync(testDir).some(f => f === 'CONWAY.js'));\n\t\tassert.strictEqual(source1.size, renamed.size);\n\n\t\tconst source2 = await service.resolve(URI.file(join(testDir, 'deep', 'conway.js')), { resolveMetadata: true });\n\t\tconst target = URI.file(join(testDir, basename(source2.resource.path)));\n\n\t\tassert.strictEqual(await service.canCopy(source2.resource, target, true), true);\n\t\tconst res = await service.copy(source2.resource, target, true);\n\t\tassert.strictEqual(existsSync(res.resource.fsPath), true);\n\t\tassert.ok(readdirSync(testDir).some(f => f === 'conway.js'));\n\t\tassert.strictEqual(source2.size, res.size);\n\t});\n\n\ttest('copy - same file', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst source = await service.resolve(URI.file(join(testDir, 'index.html')), { resolveMetadata: true });\n\t\tassert.ok(source.size > 0);\n\n\t\tassert.strictEqual(await service.canCopy(source.resource, URI.file(source.resource.fsPath)), true);\n\t\tlet copied = await service.copy(source.resource, URI.file(source.resource.fsPath));\n\n\t\tassert.strictEqual(existsSync(copied.resource.fsPath), true);\n\t\tassert.strictEqual(basename(copied.resource.fsPath), 'index.html');\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, source.resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.COPY);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, copied.resource.fsPath);\n\n\t\tcopied = await service.resolve(source.resource, { resolveMetadata: true });\n\t\tassert.strictEqual(source.size, copied.size);\n\t});\n\n\ttest('copy - same file #2', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst source = await service.resolve(URI.file(join(testDir, 'index.html')), { resolveMetadata: true });\n\t\tassert.ok(source.size > 0);\n\n\t\tconst targetParent = URI.file(testDir);\n\t\tconst target = targetParent.with({ path: posix.join(targetParent.path, posix.basename(source.resource.path)) });\n\n\t\tassert.strictEqual(await service.canCopy(source.resource, URI.file(target.fsPath)), true);\n\t\tlet copied = await service.copy(source.resource, URI.file(target.fsPath));\n\n\t\tassert.strictEqual(existsSync(copied.resource.fsPath), true);\n\t\tassert.strictEqual(basename(copied.resource.fsPath), 'index.html');\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, source.resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.COPY);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, copied.resource.fsPath);\n\n\t\tcopied = await service.resolve(source.resource, { resolveMetadata: true });\n\t\tassert.strictEqual(source.size, copied.size);\n\t});\n\n\ttest('cloneFile - basics', () => {\n\t\treturn testCloneFile();\n\t});\n\n\ttest('cloneFile - via copy capability', () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose | FileSystemProviderCapabilities.FileFolderCopy);\n\n\t\treturn testCloneFile();\n\t});\n\n\ttest('cloneFile - via pipe', () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testCloneFile();\n\t});\n\n\tasync function testCloneFile(): Promise<void> {\n\t\tconst source1 = URI.file(join(testDir, 'index.html'));\n\t\tconst source1Size = (await service.resolve(source1, { resolveMetadata: true })).size;\n\n\t\tconst source2 = URI.file(join(testDir, 'lorem.txt'));\n\t\tconst source2Size = (await service.resolve(source2, { resolveMetadata: true })).size;\n\n\t\tconst targetParent = URI.file(testDir);\n\n\t\t// same path is a no-op\n\t\tawait service.cloneFile(source1, source1);\n\n\t\t// simple clone to existing parent folder path\n\t\tconst target1 = targetParent.with({ path: posix.join(targetParent.path, `${posix.basename(source1.path)}-clone`) });\n\n\t\tawait service.cloneFile(source1, URI.file(target1.fsPath));\n\n\t\tassert.strictEqual(existsSync(target1.fsPath), true);\n\t\tassert.strictEqual(basename(target1.fsPath), 'index.html-clone');\n\n\t\tlet target1Size = (await service.resolve(target1, { resolveMetadata: true })).size;\n\n\t\tassert.strictEqual(source1Size, target1Size);\n\n\t\t// clone to same path overwrites\n\t\tawait service.cloneFile(source2, URI.file(target1.fsPath));\n\n\t\ttarget1Size = (await service.resolve(target1, { resolveMetadata: true })).size;\n\n\t\tassert.strictEqual(source2Size, target1Size);\n\t\tassert.notStrictEqual(source1Size, target1Size);\n\n\t\t// clone creates missing folders ad-hoc\n\t\tconst target2 = targetParent.with({ path: posix.join(targetParent.path, 'foo', 'bar', `${posix.basename(source1.path)}-clone`) });\n\n\t\tawait service.cloneFile(source1, URI.file(target2.fsPath));\n\n\t\tassert.strictEqual(existsSync(target2.fsPath), true);\n\t\tassert.strictEqual(basename(target2.fsPath), 'index.html-clone');\n\n\t\tconst target2Size = (await service.resolve(target2, { resolveMetadata: true })).size;\n\n\t\tassert.strictEqual(source1Size, target2Size);\n\t}\n\n\ttest('readFile - small file - default', () => {\n\t\treturn testReadFile(URI.file(join(testDir, 'small.txt')));\n\t});\n\n\ttest('readFile - small file - buffered', () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testReadFile(URI.file(join(testDir, 'small.txt')));\n\t});\n\n\ttest('readFile - small file - buffered / readonly', () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose | FileSystemProviderCapabilities.Readonly);\n\n\t\treturn testReadFile(URI.file(join(testDir, 'small.txt')));\n\t});\n\n\ttest('readFile - small file - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testReadFile(URI.file(join(testDir, 'small.txt')));\n\t});\n\n\ttest('readFile - small file - unbuffered / readonly', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite | FileSystemProviderCapabilities.Readonly);\n\n\t\treturn testReadFile(URI.file(join(testDir, 'small.txt')));\n\t});\n\n\ttest('readFile - small file - streamed', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream);\n\n\t\treturn testReadFile(URI.file(join(testDir, 'small.txt')));\n\t});\n\n\ttest('readFile - small file - streamed / readonly', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream | FileSystemProviderCapabilities.Readonly);\n\n\t\treturn testReadFile(URI.file(join(testDir, 'small.txt')));\n\t});\n\n\ttest('readFile - large file - default', async () => {\n\t\treturn testReadFile(URI.file(join(testDir, 'lorem.txt')));\n\t});\n\n\ttest('readFile - large file - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testReadFile(URI.file(join(testDir, 'lorem.txt')));\n\t});\n\n\ttest('readFile - large file - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testReadFile(URI.file(join(testDir, 'lorem.txt')));\n\t});\n\n\ttest('readFile - large file - streamed', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream);\n\n\t\treturn testReadFile(URI.file(join(testDir, 'lorem.txt')));\n\t});\n\n\ttest('readFile - atomic (emulated on service level)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream);\n\n\t\treturn testReadFile(URI.file(join(testDir, 'lorem.txt')), { atomic: true });\n\t});\n\n\ttest('readFile - atomic (natively supported)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite & FileSystemProviderCapabilities.FileAtomicRead);\n\n\t\treturn testReadFile(URI.file(join(testDir, 'lorem.txt')), { atomic: true });\n\t});\n\n\tasync function testReadFile(resource: URI, options?: IReadFileOptions): Promise<void> {\n\t\tconst content = await service.readFile(resource, options);\n\n\t\tassert.strictEqual(content.value.toString(), readFileSync(resource.fsPath).toString());\n\t}\n\n\ttest('readFileStream - small file - default', () => {\n\t\treturn testReadFileStream(URI.file(join(testDir, 'small.txt')));\n\t});\n\n\ttest('readFileStream - small file - buffered', () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testReadFileStream(URI.file(join(testDir, 'small.txt')));\n\t});\n\n\ttest('readFileStream - small file - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testReadFileStream(URI.file(join(testDir, 'small.txt')));\n\t});\n\n\ttest('readFileStream - small file - streamed', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream);\n\n\t\treturn testReadFileStream(URI.file(join(testDir, 'small.txt')));\n\t});\n\n\tasync function testReadFileStream(resource: URI): Promise<void> {\n\t\tconst content = await service.readFileStream(resource);\n\n\t\tassert.strictEqual((await streamToBuffer(content.value)).toString(), readFileSync(resource.fsPath).toString());\n\t}\n\n\ttest('readFile - Files are intermingled #38331 - default', async () => {\n\t\treturn testFilesNotIntermingled();\n\t});\n\n\ttest('readFile - Files are intermingled #38331 - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testFilesNotIntermingled();\n\t});\n\n\ttest('readFile - Files are intermingled #38331 - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testFilesNotIntermingled();\n\t});\n\n\ttest('readFile - Files are intermingled #38331 - streamed', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream);\n\n\t\treturn testFilesNotIntermingled();\n\t});\n\n\tasync function testFilesNotIntermingled() {\n\t\tconst resource1 = URI.file(join(testDir, 'lorem.txt'));\n\t\tconst resource2 = URI.file(join(testDir, 'some_utf16le.css'));\n\n\t\t// load in sequence and keep data\n\t\tconst value1 = await service.readFile(resource1);\n\t\tconst value2 = await service.readFile(resource2);\n\n\t\t// load in parallel in expect the same result\n\t\tconst result = await Promise.all([\n\t\t\tservice.readFile(resource1),\n\t\t\tservice.readFile(resource2)\n\t\t]);\n\n\t\tassert.strictEqual(result[0].value.toString(), value1.value.toString());\n\t\tassert.strictEqual(result[1].value.toString(), value2.value.toString());\n\t}\n\n\ttest('readFile - from position (ASCII) - default', async () => {\n\t\treturn testReadFileFromPositionAscii();\n\t});\n\n\ttest('readFile - from position (ASCII) - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testReadFileFromPositionAscii();\n\t});\n\n\ttest('readFile - from position (ASCII) - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testReadFileFromPositionAscii();\n\t});\n\n\ttest('readFile - from position (ASCII) - streamed', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream);\n\n\t\treturn testReadFileFromPositionAscii();\n\t});\n\n\tasync function testReadFileFromPositionAscii() {\n\t\tconst resource = URI.file(join(testDir, 'small.txt'));\n\n\t\tconst contents = await service.readFile(resource, { position: 6 });\n\n\t\tassert.strictEqual(contents.value.toString(), 'File');\n\t}\n\n\ttest('readFile - from position (with umlaut) - default', async () => {\n\t\treturn testReadFileFromPositionUmlaut();\n\t});\n\n\ttest('readFile - from position (with umlaut) - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testReadFileFromPositionUmlaut();\n\t});\n\n\ttest('readFile - from position (with umlaut) - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testReadFileFromPositionUmlaut();\n\t});\n\n\ttest('readFile - from position (with umlaut) - streamed', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream);\n\n\t\treturn testReadFileFromPositionUmlaut();\n\t});\n\n\tasync function testReadFileFromPositionUmlaut() {\n\t\tconst resource = URI.file(join(testDir, 'small_umlaut.txt'));\n\n\t\tconst contents = await service.readFile(resource, { position: Buffer.from('Small File with Ü').length });\n\n\t\tassert.strictEqual(contents.value.toString(), 'mlaut');\n\t}\n\n\ttest('readFile - 3 bytes (ASCII) - default', async () => {\n\t\treturn testReadThreeBytesFromFile();\n\t});\n\n\ttest('readFile - 3 bytes (ASCII) - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testReadThreeBytesFromFile();\n\t});\n\n\ttest('readFile - 3 bytes (ASCII) - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testReadThreeBytesFromFile();\n\t});\n\n\ttest('readFile - 3 bytes (ASCII) - streamed', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream);\n\n\t\treturn testReadThreeBytesFromFile();\n\t});\n\n\tasync function testReadThreeBytesFromFile() {\n\t\tconst resource = URI.file(join(testDir, 'small.txt'));\n\n\t\tconst contents = await service.readFile(resource, { length: 3 });\n\n\t\tassert.strictEqual(contents.value.toString(), 'Sma');\n\t}\n\n\ttest('readFile - 20000 bytes (large) - default', async () => {\n\t\treturn readLargeFileWithLength(20000);\n\t});\n\n\ttest('readFile - 20000 bytes (large) - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn readLargeFileWithLength(20000);\n\t});\n\n\ttest('readFile - 20000 bytes (large) - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn readLargeFileWithLength(20000);\n\t});\n\n\ttest('readFile - 20000 bytes (large) - streamed', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream);\n\n\t\treturn readLargeFileWithLength(20000);\n\t});\n\n\ttest('readFile - 80000 bytes (large) - default', async () => {\n\t\treturn readLargeFileWithLength(80000);\n\t});\n\n\ttest('readFile - 80000 bytes (large) - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn readLargeFileWithLength(80000);\n\t});\n\n\ttest('readFile - 80000 bytes (large) - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn readLargeFileWithLength(80000);\n\t});\n\n\ttest('readFile - 80000 bytes (large) - streamed', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream);\n\n\t\treturn readLargeFileWithLength(80000);\n\t});\n\n\tasync function readLargeFileWithLength(length: number) {\n\t\tconst resource = URI.file(join(testDir, 'lorem.txt'));\n\n\t\tconst contents = await service.readFile(resource, { length });\n\n\t\tassert.strictEqual(contents.value.byteLength, length);\n\t}\n\n\ttest('readFile - FILE_IS_DIRECTORY', async () => {\n\t\tconst resource = URI.file(join(testDir, 'deep'));\n\n\t\tlet error: FileOperationError | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.readFile(resource);\n\t\t} catch (err) {\n\t\t\terror = err;\n\t\t}\n\n\t\tassert.ok(error);\n\t\tassert.strictEqual(error!.fileOperationResult, FileOperationResult.FILE_IS_DIRECTORY);\n\t});\n\n\t(isWindows /* error code does not seem to be supported on windows */ ? test.skip : test)('readFile - FILE_NOT_DIRECTORY', async () => {\n\t\tconst resource = URI.file(join(testDir, 'lorem.txt', 'file.txt'));\n\n\t\tlet error: FileOperationError | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.readFile(resource);\n\t\t} catch (err) {\n\t\t\terror = err;\n\t\t}\n\n\t\tassert.ok(error);\n\t\tassert.strictEqual(error!.fileOperationResult, FileOperationResult.FILE_NOT_DIRECTORY);\n\t});\n\n\ttest('readFile - FILE_NOT_FOUND', async () => {\n\t\tconst resource = URI.file(join(testDir, '404.html'));\n\n\t\tlet error: FileOperationError | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.readFile(resource);\n\t\t} catch (err) {\n\t\t\terror = err;\n\t\t}\n\n\t\tassert.ok(error);\n\t\tassert.strictEqual(error!.fileOperationResult, FileOperationResult.FILE_NOT_FOUND);\n\t});\n\n\ttest('readFile - FILE_NOT_MODIFIED_SINCE - default', async () => {\n\t\treturn testNotModifiedSince();\n\t});\n\n\ttest('readFile - FILE_NOT_MODIFIED_SINCE - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testNotModifiedSince();\n\t});\n\n\ttest('readFile - FILE_NOT_MODIFIED_SINCE - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testNotModifiedSince();\n\t});\n\n\ttest('readFile - FILE_NOT_MODIFIED_SINCE - streamed', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream);\n\n\t\treturn testNotModifiedSince();\n\t});\n\n\tasync function testNotModifiedSince() {\n\t\tconst resource = URI.file(join(testDir, 'index.html'));\n\n\t\tconst contents = await service.readFile(resource);\n\t\tfileProvider.totalBytesRead = 0;\n\n\t\tlet error: FileOperationError | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.readFile(resource, { etag: contents.etag });\n\t\t} catch (err) {\n\t\t\terror = err;\n\t\t}\n\n\t\tassert.ok(error);\n\t\tassert.strictEqual(error!.fileOperationResult, FileOperationResult.FILE_NOT_MODIFIED_SINCE);\n\t\tassert.ok(error instanceof NotModifiedSinceFileOperationError && error.stat);\n\t\tassert.strictEqual(fileProvider.totalBytesRead, 0);\n\t}\n\n\ttest('readFile - FILE_NOT_MODIFIED_SINCE does not fire wrongly - https://github.com/microsoft/vscode/issues/72909', async () => {\n\t\tfileProvider.setInvalidStatSize(true);\n\n\t\tconst resource = URI.file(join(testDir, 'index.html'));\n\n\t\tawait service.readFile(resource);\n\n\t\tlet error: FileOperationError | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.readFile(resource, { etag: undefined });\n\t\t} catch (err) {\n\t\t\terror = err;\n\t\t}\n\n\t\tassert.ok(!error);\n\t});\n\n\ttest('readFile - FILE_TOO_LARGE - default', async () => {\n\t\treturn testFileTooLarge();\n\t});\n\n\ttest('readFile - FILE_TOO_LARGE - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testFileTooLarge();\n\t});\n\n\ttest('readFile - FILE_TOO_LARGE - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testFileTooLarge();\n\t});\n\n\ttest('readFile - FILE_TOO_LARGE - streamed', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadStream);\n\n\t\treturn testFileTooLarge();\n\t});\n\n\tasync function testFileTooLarge() {\n\t\tawait doTestFileTooLarge(false);\n\n\t\t// Also test when the stat size is wrong\n\t\tfileProvider.setSmallStatSize(true);\n\t\treturn doTestFileTooLarge(true);\n\t}\n\n\tasync function doTestFileTooLarge(statSizeWrong: boolean) {\n\t\tconst resource = URI.file(join(testDir, 'index.html'));\n\n\t\tlet error: FileOperationError | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.readFile(resource, { limits: { size: 10 } });\n\t\t} catch (err) {\n\t\t\terror = err;\n\t\t}\n\n\t\tif (!statSizeWrong) {\n\t\t\tassert.ok(error instanceof TooLargeFileOperationError);\n\t\t\tassert.ok(typeof error.size === 'number');\n\t\t}\n\t\tassert.strictEqual(error!.fileOperationResult, FileOperationResult.FILE_TOO_LARGE);\n\t}\n\n\t(isWindows ? test.skip /* windows: cannot create file symbolic link without elevated context */ : test)('readFile - dangling symbolic link - https://github.com/microsoft/vscode/issues/116049', async () => {\n\t\tconst link = URI.file(join(testDir, 'small.js-link'));\n\t\tawait Promises.symlink(join(testDir, 'small.js'), link.fsPath);\n\n\t\tlet error: FileOperationError | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.readFile(link);\n\t\t} catch (err) {\n\t\t\terror = err;\n\t\t}\n\n\t\tassert.ok(error);\n\t});\n\n\ttest('createFile', async () => {\n\t\treturn assertCreateFile(contents => VSBuffer.fromString(contents));\n\t});\n\n\ttest('createFile (readable)', async () => {\n\t\treturn assertCreateFile(contents => bufferToReadable(VSBuffer.fromString(contents)));\n\t});\n\n\ttest('createFile (stream)', async () => {\n\t\treturn assertCreateFile(contents => bufferToStream(VSBuffer.fromString(contents)));\n\t});\n\n\tasync function assertCreateFile(converter: (content: string) => VSBuffer | VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst contents = 'Hello World';\n\t\tconst resource = URI.file(join(testDir, 'test.txt'));\n\n\t\tassert.strictEqual(await service.canCreateFile(resource), true);\n\t\tconst fileStat = await service.createFile(resource, converter(contents));\n\t\tassert.strictEqual(fileStat.name, 'test.txt');\n\t\tassert.strictEqual(existsSync(fileStat.resource.fsPath), true);\n\t\tassert.strictEqual(readFileSync(fileStat.resource.fsPath).toString(), contents);\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.CREATE);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, resource.fsPath);\n\t}\n\n\ttest('createFile (does not overwrite by default)', async () => {\n\t\tconst contents = 'Hello World';\n\t\tconst resource = URI.file(join(testDir, 'test.txt'));\n\n\t\twriteFileSync(resource.fsPath, ''); // create file\n\n\t\tassert.ok((await service.canCreateFile(resource)) instanceof Error);\n\n\t\tlet error;\n\t\ttry {\n\t\t\tawait service.createFile(resource, VSBuffer.fromString(contents));\n\t\t} catch (err) {\n\t\t\terror = err;\n\t\t}\n\n\t\tassert.ok(error);\n\t});\n\n\ttest('createFile (allows to overwrite existing)', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst contents = 'Hello World';\n\t\tconst resource = URI.file(join(testDir, 'test.txt'));\n\n\t\twriteFileSync(resource.fsPath, ''); // create file\n\n\t\tassert.strictEqual(await service.canCreateFile(resource, { overwrite: true }), true);\n\t\tconst fileStat = await service.createFile(resource, VSBuffer.fromString(contents), { overwrite: true });\n\t\tassert.strictEqual(fileStat.name, 'test.txt');\n\t\tassert.strictEqual(existsSync(fileStat.resource.fsPath), true);\n\t\tassert.strictEqual(readFileSync(fileStat.resource.fsPath).toString(), contents);\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.CREATE);\n\t\tassert.strictEqual(event!.target!.resource.fsPath, resource.fsPath);\n\t});\n\n\ttest('writeFile - default', async () => {\n\t\treturn testWriteFile(false);\n\t});\n\n\ttest('writeFile - flush on write', async () => {\n\t\tDiskFileSystemProvider.configureFlushOnWrite(true);\n\t\ttry {\n\t\t\treturn await testWriteFile(false);\n\t\t} finally {\n\t\t\tDiskFileSystemProvider.configureFlushOnWrite(false);\n\t\t}\n\t});\n\n\ttest('writeFile - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testWriteFile(false);\n\t});\n\n\ttest('writeFile - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testWriteFile(false);\n\t});\n\n\ttest('writeFile - default (atomic)', async () => {\n\t\treturn testWriteFile(true);\n\t});\n\n\ttest('writeFile - flush on write (atomic)', async () => {\n\t\tDiskFileSystemProvider.configureFlushOnWrite(true);\n\t\ttry {\n\t\t\treturn await testWriteFile(true);\n\t\t} finally {\n\t\t\tDiskFileSystemProvider.configureFlushOnWrite(false);\n\t\t}\n\t});\n\n\ttest('writeFile - buffered (atomic)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose | FileSystemProviderCapabilities.FileAtomicWrite);\n\n\t\treturn testWriteFile(true);\n\t});\n\n\ttest('writeFile - unbuffered (atomic)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite | FileSystemProviderCapabilities.FileAtomicWrite);\n\n\t\treturn testWriteFile(true);\n\t});\n\n\tasync function testWriteFile(atomic: boolean) {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst resource = URI.file(join(testDir, 'small.txt'));\n\n\t\tconst content = readFileSync(resource.fsPath).toString();\n\t\tassert.strictEqual(content, 'Small File');\n\n\t\tconst newContent = 'Updates to the small file';\n\t\tawait service.writeFile(resource, VSBuffer.fromString(newContent), { atomic: atomic ? { postfix: '.vsctmp' } : false });\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.WRITE);\n\n\t\tassert.strictEqual(readFileSync(resource.fsPath).toString(), newContent);\n\t}\n\n\ttest('writeFile (large file) - default', async () => {\n\t\treturn testWriteFileLarge(false);\n\t});\n\n\ttest('writeFile (large file) - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testWriteFileLarge(false);\n\t});\n\n\ttest('writeFile (large file) - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testWriteFileLarge(false);\n\t});\n\n\ttest('writeFile (large file) - default (atomic)', async () => {\n\t\treturn testWriteFileLarge(true);\n\t});\n\n\ttest('writeFile (large file) - buffered (atomic)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose | FileSystemProviderCapabilities.FileAtomicWrite);\n\n\t\treturn testWriteFileLarge(true);\n\t});\n\n\ttest('writeFile (large file) - unbuffered (atomic)', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite | FileSystemProviderCapabilities.FileAtomicWrite);\n\n\t\treturn testWriteFileLarge(true);\n\t});\n\n\tasync function testWriteFileLarge(atomic: boolean) {\n\t\tconst resource = URI.file(join(testDir, 'lorem.txt'));\n\n\t\tconst content = readFileSync(resource.fsPath);\n\t\tconst newContent = content.toString() + content.toString();\n\n\t\tconst fileStat = await service.writeFile(resource, VSBuffer.fromString(newContent), { atomic: atomic ? { postfix: '.vsctmp' } : false });\n\t\tassert.strictEqual(fileStat.name, 'lorem.txt');\n\n\t\tassert.strictEqual(readFileSync(resource.fsPath).toString(), newContent);\n\t}\n\n\ttest('writeFile - buffered - readonly throws', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose | FileSystemProviderCapabilities.Readonly);\n\n\t\treturn testWriteFileReadonlyThrows();\n\t});\n\n\ttest('writeFile - unbuffered - readonly throws', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite | FileSystemProviderCapabilities.Readonly);\n\n\t\treturn testWriteFileReadonlyThrows();\n\t});\n\n\tasync function testWriteFileReadonlyThrows() {\n\t\tconst resource = URI.file(join(testDir, 'small.txt'));\n\n\t\tconst content = readFileSync(resource.fsPath).toString();\n\t\tassert.strictEqual(content, 'Small File');\n\n\t\tconst newContent = 'Updates to the small file';\n\n\t\tlet error: Error;\n\t\ttry {\n\t\t\tawait service.writeFile(resource, VSBuffer.fromString(newContent));\n\t\t} catch (err) {\n\t\t\terror = err;\n\t\t}\n\n\t\tassert.ok(error!);\n\t}\n\n\ttest('writeFile (large file) - multiple parallel writes queue up and atomic read support (via file service)', async () => {\n\t\tconst resource = URI.file(join(testDir, 'lorem.txt'));\n\n\t\tconst content = readFileSync(resource.fsPath);\n\t\tconst newContent = content.toString() + content.toString();\n\n\t\tconst writePromises = Promise.all(['0', '00', '000', '0000', '00000'].map(async offset => {\n\t\t\tconst fileStat = await service.writeFile(resource, VSBuffer.fromString(offset + newContent));\n\t\t\tassert.strictEqual(fileStat.name, 'lorem.txt');\n\t\t}));\n\n\t\tconst readPromises = Promise.all(['0', '00', '000', '0000', '00000'].map(async () => {\n\t\t\tconst fileContent = await service.readFile(resource, { atomic: true });\n\t\t\tassert.ok(fileContent.value.byteLength > 0); // `atomic: true` ensures we never read a truncated file\n\t\t}));\n\n\t\tawait Promise.all([writePromises, readPromises]);\n\t});\n\n\ttest('provider - write barrier prevents dirty writes', async () => {\n\t\tconst resource = URI.file(join(testDir, 'lorem.txt'));\n\n\t\tconst content = readFileSync(resource.fsPath);\n\t\tconst newContent = content.toString() + content.toString();\n\n\t\tconst provider = service.getProvider(resource.scheme);\n\t\tassert.ok(provider);\n\t\tassert.ok(hasOpenReadWriteCloseCapability(provider));\n\n\t\tconst writePromises = Promise.all(['0', '00', '000', '0000', '00000'].map(async offset => {\n\t\t\tconst content = offset + newContent;\n\t\t\tconst contentBuffer = VSBuffer.fromString(content).buffer;\n\n\t\t\tconst fd = await provider.open(resource, { create: true, unlock: false });\n\t\t\ttry {\n\t\t\t\tawait provider.write(fd, 0, VSBuffer.fromString(content).buffer, 0, contentBuffer.byteLength);\n\n\t\t\t\t// Here since `close` is not called, all other writes are\n\t\t\t\t// waiting on the barrier to release, so doing a readFile\n\t\t\t\t// should give us a consistent view of the file contents\n\t\t\t\tassert.strictEqual((await Promises.readFile(resource.fsPath)).toString(), content);\n\t\t\t} finally {\n\t\t\t\tawait provider.close(fd);\n\t\t\t}\n\t\t}));\n\n\t\tawait Promise.all([writePromises]);\n\t});\n\n\ttest('provider - write barrier is partitioned per resource', async () => {\n\t\tconst resource1 = URI.file(join(testDir, 'lorem.txt'));\n\t\tconst resource2 = URI.file(join(testDir, 'test.txt'));\n\n\t\tconst provider = service.getProvider(resource1.scheme);\n\t\tassert.ok(provider);\n\t\tassert.ok(hasOpenReadWriteCloseCapability(provider));\n\n\t\tconst fd1 = await provider.open(resource1, { create: true, unlock: false });\n\t\tconst fd2 = await provider.open(resource2, { create: true, unlock: false });\n\n\t\tconst newContent = 'Hello World';\n\n\t\ttry {\n\t\t\tawait provider.write(fd1, 0, VSBuffer.fromString(newContent).buffer, 0, VSBuffer.fromString(newContent).buffer.byteLength);\n\t\t\tassert.strictEqual((await Promises.readFile(resource1.fsPath)).toString(), newContent);\n\n\t\t\tawait provider.write(fd2, 0, VSBuffer.fromString(newContent).buffer, 0, VSBuffer.fromString(newContent).buffer.byteLength);\n\t\t\tassert.strictEqual((await Promises.readFile(resource2.fsPath)).toString(), newContent);\n\t\t} finally {\n\t\t\tawait Promise.allSettled([\n\t\t\t\tawait provider.close(fd1),\n\t\t\t\tawait provider.close(fd2)\n\t\t\t]);\n\t\t}\n\t});\n\n\ttest('provider - write barrier not becoming stale', async () => {\n\t\tconst newFolder = join(testDir, 'new-folder');\n\t\tconst newResource = URI.file(join(newFolder, 'lorem.txt'));\n\n\t\tconst provider = service.getProvider(newResource.scheme);\n\t\tassert.ok(provider);\n\t\tassert.ok(hasOpenReadWriteCloseCapability(provider));\n\n\t\tlet error: Error | undefined = undefined;\n\t\ttry {\n\t\t\tawait provider.open(newResource, { create: true, unlock: false });\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\n\t\tassert.ok(error); // expected because `new-folder` does not exist\n\n\t\tawait Promises.mkdir(newFolder);\n\n\t\tconst content = readFileSync(URI.file(join(testDir, 'lorem.txt')).fsPath);\n\t\tconst newContent = content.toString() + content.toString();\n\t\tconst newContentBuffer = VSBuffer.fromString(newContent).buffer;\n\n\t\tconst fd = await provider.open(newResource, { create: true, unlock: false });\n\t\ttry {\n\t\t\tawait provider.write(fd, 0, newContentBuffer, 0, newContentBuffer.byteLength);\n\n\t\t\tassert.strictEqual((await Promises.readFile(newResource.fsPath)).toString(), newContent);\n\t\t} finally {\n\t\t\tawait provider.close(fd);\n\t\t}\n\t});\n\n\ttest('provider - atomic reads (write pending when read starts)', async () => {\n\t\tconst resource = URI.file(join(testDir, 'lorem.txt'));\n\n\t\tconst content = readFileSync(resource.fsPath);\n\t\tconst newContent = content.toString() + content.toString();\n\t\tconst newContentBuffer = VSBuffer.fromString(newContent).buffer;\n\n\t\tconst provider = service.getProvider(resource.scheme);\n\t\tassert.ok(provider);\n\t\tassert.ok(hasOpenReadWriteCloseCapability(provider));\n\t\tassert.ok(hasFileAtomicReadCapability(provider));\n\n\t\tlet atomicReadPromise: Promise<Uint8Array> | undefined = undefined;\n\t\tconst fd = await provider.open(resource, { create: true, unlock: false });\n\t\ttry {\n\n\t\t\t// Start reading while write is pending\n\t\t\tatomicReadPromise = provider.readFile(resource, { atomic: true });\n\n\t\t\t// Simulate a slow write, giving the read\n\t\t\t// a chance to succeed if it were not atomic\n\t\t\tawait timeout(20);\n\n\t\t\tawait provider.write(fd, 0, newContentBuffer, 0, newContentBuffer.byteLength);\n\t\t} finally {\n\t\t\tawait provider.close(fd);\n\t\t}\n\n\t\tassert.ok(atomicReadPromise);\n\n\t\tconst atomicReadResult = await atomicReadPromise;\n\t\tassert.strictEqual(atomicReadResult.byteLength, newContentBuffer.byteLength);\n\t});\n\n\ttest('provider - atomic reads (read pending when write starts)', async () => {\n\t\tconst resource = URI.file(join(testDir, 'lorem.txt'));\n\n\t\tconst content = readFileSync(resource.fsPath);\n\t\tconst newContent = content.toString() + content.toString();\n\t\tconst newContentBuffer = VSBuffer.fromString(newContent).buffer;\n\n\t\tconst provider = service.getProvider(resource.scheme);\n\t\tassert.ok(provider);\n\t\tassert.ok(hasOpenReadWriteCloseCapability(provider));\n\t\tassert.ok(hasFileAtomicReadCapability(provider));\n\n\t\tlet atomicReadPromise = provider.readFile(resource, { atomic: true });\n\n\t\tconst fdPromise = provider.open(resource, { create: true, unlock: false }).then(async fd => {\n\t\t\ttry {\n\t\t\t\treturn await provider.write(fd, 0, newContentBuffer, 0, newContentBuffer.byteLength);\n\t\t\t} finally {\n\t\t\t\tawait provider.close(fd);\n\t\t\t}\n\t\t});\n\n\t\tlet atomicReadResult = await atomicReadPromise;\n\t\tassert.strictEqual(atomicReadResult.byteLength, content.byteLength);\n\n\t\tawait fdPromise;\n\n\t\tatomicReadPromise = provider.readFile(resource, { atomic: true });\n\t\tatomicReadResult = await atomicReadPromise;\n\t\tassert.strictEqual(atomicReadResult.byteLength, newContentBuffer.byteLength);\n\t});\n\n\ttest('writeFile (readable) - default', async () => {\n\t\treturn testWriteFileReadable();\n\t});\n\n\ttest('writeFile (readable) - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testWriteFileReadable();\n\t});\n\n\ttest('writeFile (readable) - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testWriteFileReadable();\n\t});\n\n\tasync function testWriteFileReadable() {\n\t\tconst resource = URI.file(join(testDir, 'small.txt'));\n\n\t\tconst content = readFileSync(resource.fsPath).toString();\n\t\tassert.strictEqual(content, 'Small File');\n\n\t\tconst newContent = 'Updates to the small file';\n\t\tawait service.writeFile(resource, toLineByLineReadable(newContent));\n\n\t\tassert.strictEqual(readFileSync(resource.fsPath).toString(), newContent);\n\t}\n\n\ttest('writeFile (large file - readable) - default', async () => {\n\t\treturn testWriteFileLargeReadable();\n\t});\n\n\ttest('writeFile (large file - readable) - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testWriteFileLargeReadable();\n\t});\n\n\ttest('writeFile (large file - readable) - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testWriteFileLargeReadable();\n\t});\n\n\tasync function testWriteFileLargeReadable() {\n\t\tconst resource = URI.file(join(testDir, 'lorem.txt'));\n\n\t\tconst content = readFileSync(resource.fsPath);\n\t\tconst newContent = content.toString() + content.toString();\n\n\t\tconst fileStat = await service.writeFile(resource, toLineByLineReadable(newContent));\n\t\tassert.strictEqual(fileStat.name, 'lorem.txt');\n\n\t\tassert.strictEqual(readFileSync(resource.fsPath).toString(), newContent);\n\t}\n\n\ttest('writeFile (stream) - default', async () => {\n\t\treturn testWriteFileStream();\n\t});\n\n\ttest('writeFile (stream) - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testWriteFileStream();\n\t});\n\n\ttest('writeFile (stream) - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testWriteFileStream();\n\t});\n\n\tasync function testWriteFileStream() {\n\t\tconst source = URI.file(join(testDir, 'small.txt'));\n\t\tconst target = URI.file(join(testDir, 'small-copy.txt'));\n\n\t\tconst fileStat = await service.writeFile(target, streamToBufferReadableStream(createReadStream(source.fsPath)));\n\t\tassert.strictEqual(fileStat.name, 'small-copy.txt');\n\n\t\tconst targetContents = readFileSync(target.fsPath).toString();\n\t\tassert.strictEqual(readFileSync(source.fsPath).toString(), targetContents);\n\t}\n\n\ttest('writeFile (large file - stream) - default', async () => {\n\t\treturn testWriteFileLargeStream();\n\t});\n\n\ttest('writeFile (large file - stream) - buffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testWriteFileLargeStream();\n\t});\n\n\ttest('writeFile (large file - stream) - unbuffered', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testWriteFileLargeStream();\n\t});\n\n\tasync function testWriteFileLargeStream() {\n\t\tconst source = URI.file(join(testDir, 'lorem.txt'));\n\t\tconst target = URI.file(join(testDir, 'lorem-copy.txt'));\n\n\t\tconst fileStat = await service.writeFile(target, streamToBufferReadableStream(createReadStream(source.fsPath)));\n\t\tassert.strictEqual(fileStat.name, 'lorem-copy.txt');\n\n\t\tconst targetContents = readFileSync(target.fsPath).toString();\n\t\tassert.strictEqual(readFileSync(source.fsPath).toString(), targetContents);\n\t}\n\n\ttest('writeFile (file is created including parents)', async () => {\n\t\tconst resource = URI.file(join(testDir, 'other', 'newfile.txt'));\n\n\t\tconst content = 'File is created including parent';\n\t\tconst fileStat = await service.writeFile(resource, VSBuffer.fromString(content));\n\t\tassert.strictEqual(fileStat.name, 'newfile.txt');\n\n\t\tassert.strictEqual(readFileSync(resource.fsPath).toString(), content);\n\t});\n\n\ttest('writeFile - locked files and unlocking', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite | FileSystemProviderCapabilities.FileWriteUnlock);\n\n\t\treturn testLockedFiles(false);\n\t});\n\n\ttest('writeFile (stream) - locked files and unlocking', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose | FileSystemProviderCapabilities.FileWriteUnlock);\n\n\t\treturn testLockedFiles(false);\n\t});\n\n\ttest('writeFile - locked files and unlocking throws error when missing capability', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileReadWrite);\n\n\t\treturn testLockedFiles(true);\n\t});\n\n\ttest('writeFile (stream) - locked files and unlocking throws error when missing capability', async () => {\n\t\tsetCapabilities(fileProvider, FileSystemProviderCapabilities.FileOpenReadWriteClose);\n\n\t\treturn testLockedFiles(true);\n\t});\n\n\tasync function testLockedFiles(expectError: boolean) {\n\t\tconst lockedFile = URI.file(join(testDir, 'my-locked-file'));\n\n\t\tconst content = await service.writeFile(lockedFile, VSBuffer.fromString('Locked File'));\n\t\tassert.strictEqual(content.locked, false);\n\n\t\tconst stats = await Promises.stat(lockedFile.fsPath);\n\t\tawait Promises.chmod(lockedFile.fsPath, stats.mode & ~0o200);\n\n\t\tlet stat = await service.stat(lockedFile);\n\t\tassert.strictEqual(stat.locked, true);\n\n\t\tlet error;\n\t\tconst newContent = 'Updates to locked file';\n\t\ttry {\n\t\t\tawait service.writeFile(lockedFile, VSBuffer.fromString(newContent));\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\n\t\tassert.ok(error);\n\t\terror = undefined;\n\n\t\tif (expectError) {\n\t\t\ttry {\n\t\t\t\tawait service.writeFile(lockedFile, VSBuffer.fromString(newContent), { unlock: true });\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\n\t\t\tassert.ok(error);\n\t\t} else {\n\t\t\tawait service.writeFile(lockedFile, VSBuffer.fromString(newContent), { unlock: true });\n\t\t\tassert.strictEqual(readFileSync(lockedFile.fsPath).toString(), newContent);\n\n\t\t\tstat = await service.stat(lockedFile);\n\t\t\tassert.strictEqual(stat.locked, false);\n\t\t}\n\t}\n\n\ttest('writeFile (error when folder is encountered)', async () => {\n\t\tconst resource = URI.file(testDir);\n\n\t\tlet error: Error | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.writeFile(resource, VSBuffer.fromString('File is created including parent'));\n\t\t} catch (err) {\n\t\t\terror = err;\n\t\t}\n\n\t\tassert.ok(error);\n\t});\n\n\ttest('writeFile (no error when providing up to date etag)', async () => {\n\t\tconst resource = URI.file(join(testDir, 'small.txt'));\n\n\t\tconst stat = await service.resolve(resource);\n\n\t\tconst content = readFileSync(resource.fsPath).toString();\n\t\tassert.strictEqual(content, 'Small File');\n\n\t\tconst newContent = 'Updates to the small file';\n\t\tawait service.writeFile(resource, VSBuffer.fromString(newContent), { etag: stat.etag, mtime: stat.mtime });\n\n\t\tassert.strictEqual(readFileSync(resource.fsPath).toString(), newContent);\n\t});\n\n\ttest('writeFile - error when writing to file that has been updated meanwhile', async () => {\n\t\tconst resource = URI.file(join(testDir, 'small.txt'));\n\n\t\tconst stat = await service.resolve(resource);\n\n\t\tconst content = readFileSync(resource.fsPath).toString();\n\t\tassert.strictEqual(content, 'Small File');\n\n\t\tconst newContent = 'Updates to the small file';\n\t\tawait service.writeFile(resource, VSBuffer.fromString(newContent), { etag: stat.etag, mtime: stat.mtime });\n\n\t\tconst newContentLeadingToError = newContent + newContent;\n\n\t\tconst fakeMtime = 1000;\n\t\tconst fakeSize = 1000;\n\n\t\tlet error: FileOperationError | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.writeFile(resource, VSBuffer.fromString(newContentLeadingToError), { etag: etag({ mtime: fakeMtime, size: fakeSize }), mtime: fakeMtime });\n\t\t} catch (err) {\n\t\t\terror = err;\n\t\t}\n\n\t\tassert.ok(error);\n\t\tassert.ok(error instanceof FileOperationError);\n\t\tassert.strictEqual(error!.fileOperationResult, FileOperationResult.FILE_MODIFIED_SINCE);\n\t});\n\n\ttest('writeFile - no error when writing to file where size is the same', async () => {\n\t\tconst resource = URI.file(join(testDir, 'small.txt'));\n\n\t\tconst stat = await service.resolve(resource);\n\n\t\tconst content = readFileSync(resource.fsPath).toString();\n\t\tassert.strictEqual(content, 'Small File');\n\n\t\tconst newContent = content; // same content\n\t\tawait service.writeFile(resource, VSBuffer.fromString(newContent), { etag: stat.etag, mtime: stat.mtime });\n\n\t\tconst newContentLeadingToNoError = newContent; // writing the same content should be OK\n\n\t\tconst fakeMtime = 1000;\n\t\tconst actualSize = newContent.length;\n\n\t\tlet error: FileOperationError | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.writeFile(resource, VSBuffer.fromString(newContentLeadingToNoError), { etag: etag({ mtime: fakeMtime, size: actualSize }), mtime: fakeMtime });\n\t\t} catch (err) {\n\t\t\terror = err;\n\t\t}\n\n\t\tassert.ok(!error);\n\t});\n\n\ttest('writeFile - no error when writing to same nonexistent folder multiple times different new files', async () => {\n\t\tconst newFolder = URI.file(join(testDir, 'some', 'new', 'folder'));\n\n\t\tconst file1 = joinPath(newFolder, 'file-1');\n\t\tconst file2 = joinPath(newFolder, 'file-2');\n\t\tconst file3 = joinPath(newFolder, 'file-3');\n\n\t\t// this essentially verifies that the mkdirp logic implemented\n\t\t// in the file service is able to receive multiple requests for\n\t\t// the same folder and will not throw errors if another racing\n\t\t// call succeeded first.\n\t\tconst newContent = 'Updates to the small file';\n\t\tawait Promise.all([\n\t\t\tservice.writeFile(file1, VSBuffer.fromString(newContent)),\n\t\t\tservice.writeFile(file2, VSBuffer.fromString(newContent)),\n\t\t\tservice.writeFile(file3, VSBuffer.fromString(newContent))\n\t\t]);\n\n\t\tassert.ok(service.exists(file1));\n\t\tassert.ok(service.exists(file2));\n\t\tassert.ok(service.exists(file3));\n\t});\n\n\ttest('writeFile - error when writing to folder that is a file', async () => {\n\t\tconst existingFile = URI.file(join(testDir, 'my-file'));\n\n\t\tawait service.createFile(existingFile);\n\n\t\tconst newFile = joinPath(existingFile, 'file-1');\n\n\t\tlet error;\n\t\tconst newContent = 'Updates to the small file';\n\t\ttry {\n\t\t\tawait service.writeFile(newFile, VSBuffer.fromString(newContent));\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\n\t\tassert.ok(error);\n\t});\n\n\ttest('read - mixed positions', async () => {\n\t\tconst resource = URI.file(join(testDir, 'lorem.txt'));\n\n\t\t// read multiple times from position 0\n\t\tlet buffer = VSBuffer.alloc(1024);\n\t\tlet fd = await fileProvider.open(resource, { create: false });\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tawait fileProvider.read(fd, 0, buffer.buffer, 0, 26);\n\t\t\tassert.strictEqual(buffer.slice(0, 26).toString(), 'Lorem ipsum dolor sit amet');\n\t\t}\n\t\tawait fileProvider.close(fd);\n\n\t\t// read multiple times at various locations\n\t\tbuffer = VSBuffer.alloc(1024);\n\t\tfd = await fileProvider.open(resource, { create: false });\n\n\t\tlet posInFile = 0;\n\n\t\tawait fileProvider.read(fd, posInFile, buffer.buffer, 0, 26);\n\t\tassert.strictEqual(buffer.slice(0, 26).toString(), 'Lorem ipsum dolor sit amet');\n\t\tposInFile += 26;\n\n\t\tawait fileProvider.read(fd, posInFile, buffer.buffer, 0, 1);\n\t\tassert.strictEqual(buffer.slice(0, 1).toString(), ',');\n\t\tposInFile += 1;\n\n\t\tawait fileProvider.read(fd, posInFile, buffer.buffer, 0, 12);\n\t\tassert.strictEqual(buffer.slice(0, 12).toString(), ' consectetur');\n\t\tposInFile += 12;\n\n\t\tawait fileProvider.read(fd, 98 /* no longer in sequence of posInFile */, buffer.buffer, 0, 9);\n\t\tassert.strictEqual(buffer.slice(0, 9).toString(), 'fermentum');\n\n\t\tawait fileProvider.read(fd, 27, buffer.buffer, 0, 12);\n\t\tassert.strictEqual(buffer.slice(0, 12).toString(), ' consectetur');\n\n\t\tawait fileProvider.read(fd, 26, buffer.buffer, 0, 1);\n\t\tassert.strictEqual(buffer.slice(0, 1).toString(), ',');\n\n\t\tawait fileProvider.read(fd, 0, buffer.buffer, 0, 26);\n\t\tassert.strictEqual(buffer.slice(0, 26).toString(), 'Lorem ipsum dolor sit amet');\n\n\t\tawait fileProvider.read(fd, posInFile /* back in sequence */, buffer.buffer, 0, 11);\n\t\tassert.strictEqual(buffer.slice(0, 11).toString(), ' adipiscing');\n\n\t\tawait fileProvider.close(fd);\n\t});\n\n\ttest('write - mixed positions', async () => {\n\t\tconst resource = URI.file(join(testDir, 'lorem.txt'));\n\n\t\tconst buffer = VSBuffer.alloc(1024);\n\t\tconst fdWrite = await fileProvider.open(resource, { create: true, unlock: false });\n\t\tconst fdRead = await fileProvider.open(resource, { create: false });\n\n\t\tlet posInFileWrite = 0;\n\t\tlet posInFileRead = 0;\n\n\t\tconst initialContents = VSBuffer.fromString('Lorem ipsum dolor sit amet');\n\t\tawait fileProvider.write(fdWrite, posInFileWrite, initialContents.buffer, 0, initialContents.byteLength);\n\t\tposInFileWrite += initialContents.byteLength;\n\n\t\tawait fileProvider.read(fdRead, posInFileRead, buffer.buffer, 0, 26);\n\t\tassert.strictEqual(buffer.slice(0, 26).toString(), 'Lorem ipsum dolor sit amet');\n\t\tposInFileRead += 26;\n\n\t\tconst contents = VSBuffer.fromString('Hello World');\n\n\t\tawait fileProvider.write(fdWrite, posInFileWrite, contents.buffer, 0, contents.byteLength);\n\t\tposInFileWrite += contents.byteLength;\n\n\t\tawait fileProvider.read(fdRead, posInFileRead, buffer.buffer, 0, contents.byteLength);\n\t\tassert.strictEqual(buffer.slice(0, contents.byteLength).toString(), 'Hello World');\n\t\tposInFileRead += contents.byteLength;\n\n\t\tawait fileProvider.write(fdWrite, 6, contents.buffer, 0, contents.byteLength);\n\n\t\tawait fileProvider.read(fdRead, 0, buffer.buffer, 0, 11);\n\t\tassert.strictEqual(buffer.slice(0, 11).toString(), 'Lorem Hello');\n\n\t\tawait fileProvider.write(fdWrite, posInFileWrite, contents.buffer, 0, contents.byteLength);\n\t\tposInFileWrite += contents.byteLength;\n\n\t\tawait fileProvider.read(fdRead, posInFileWrite - contents.byteLength, buffer.buffer, 0, contents.byteLength);\n\t\tassert.strictEqual(buffer.slice(0, contents.byteLength).toString(), 'Hello World');\n\n\t\tawait fileProvider.close(fdWrite);\n\t\tawait fileProvider.close(fdRead);\n\t});\n\n\ttest('readonly - is handled properly for a single resource', async () => {\n\t\tfileProvider.setReadonly(true);\n\n\t\tconst resource = URI.file(join(testDir, 'index.html'));\n\n\t\tconst resolveResult = await service.resolve(resource);\n\t\tassert.strictEqual(resolveResult.readonly, true);\n\n\t\tconst readResult = await service.readFile(resource);\n\t\tassert.strictEqual(readResult.readonly, true);\n\n\t\tlet writeFileError: Error | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.writeFile(resource, VSBuffer.fromString('Hello Test'));\n\t\t} catch (error) {\n\t\t\twriteFileError = error;\n\t\t}\n\t\tassert.ok(writeFileError);\n\n\t\tlet deleteFileError: Error | undefined = undefined;\n\t\ttry {\n\t\t\tawait service.del(resource);\n\t\t} catch (error) {\n\t\t\tdeleteFileError = error;\n\t\t}\n\t\tassert.ok(deleteFileError);\n\t});\n});\n"]}