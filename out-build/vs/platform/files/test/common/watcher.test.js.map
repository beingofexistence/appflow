{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/files/test/common/watcher.test.ts"],"names":[],"mappings":"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","file":"watcher.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { FileChangesEvent, FileChangeType, IFileChange } from 'vs/platform/files/common/files';\nimport { IDiskFileChange, coalesceEvents, toFileChanges, parseWatcherPatterns } from 'vs/platform/files/common/watcher';\n\nclass TestFileWatcher extends Disposable {\n\tprivate readonly _onDidFilesChange: Emitter<{ raw: IFileChange[]; event: FileChangesEvent }>;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._onDidFilesChange = this._register(new Emitter<{ raw: IFileChange[]; event: FileChangesEvent }>());\n\t}\n\n\tget onDidFilesChange(): Event<{ raw: IFileChange[]; event: FileChangesEvent }> {\n\t\treturn this._onDidFilesChange.event;\n\t}\n\n\treport(changes: IDiskFileChange[]): void {\n\t\tthis.onRawFileEvents(changes);\n\t}\n\n\tprivate onRawFileEvents(events: IDiskFileChange[]): void {\n\n\t\t// Coalesce\n\t\tconst coalescedEvents = coalesceEvents(events);\n\n\t\t// Emit through event emitter\n\t\tif (coalescedEvents.length > 0) {\n\t\t\tthis._onDidFilesChange.fire({ raw: toFileChanges(coalescedEvents), event: this.toFileChangesEvent(coalescedEvents) });\n\t\t}\n\t}\n\n\tprivate toFileChangesEvent(changes: IDiskFileChange[]): FileChangesEvent {\n\t\treturn new FileChangesEvent(toFileChanges(changes), !isLinux);\n\t}\n}\n\nenum Path {\n\tUNIX,\n\tWINDOWS,\n\tUNC\n}\n\nsuite('Watcher', () => {\n\n\t(isWindows ? test.skip : test)('parseWatcherPatterns - posix', () => {\n\t\tconst path = '/users/data/src';\n\t\tlet parsedPattern = parseWatcherPatterns(path, ['*.js'])[0];\n\n\t\tassert.strictEqual(parsedPattern('/users/data/src/foo.js'), true);\n\t\tassert.strictEqual(parsedPattern('/users/data/src/foo.ts'), false);\n\t\tassert.strictEqual(parsedPattern('/users/data/src/bar/foo.js'), false);\n\n\t\tparsedPattern = parseWatcherPatterns(path, ['/users/data/src/*.js'])[0];\n\n\t\tassert.strictEqual(parsedPattern('/users/data/src/foo.js'), true);\n\t\tassert.strictEqual(parsedPattern('/users/data/src/foo.ts'), false);\n\t\tassert.strictEqual(parsedPattern('/users/data/src/bar/foo.js'), false);\n\n\t\tparsedPattern = parseWatcherPatterns(path, ['/users/data/src/bar/*.js'])[0];\n\n\t\tassert.strictEqual(parsedPattern('/users/data/src/foo.js'), false);\n\t\tassert.strictEqual(parsedPattern('/users/data/src/foo.ts'), false);\n\t\tassert.strictEqual(parsedPattern('/users/data/src/bar/foo.js'), true);\n\n\t\tparsedPattern = parseWatcherPatterns(path, ['**/*.js'])[0];\n\n\t\tassert.strictEqual(parsedPattern('/users/data/src/foo.js'), true);\n\t\tassert.strictEqual(parsedPattern('/users/data/src/foo.ts'), false);\n\t\tassert.strictEqual(parsedPattern('/users/data/src/bar/foo.js'), true);\n\t});\n\n\t(!isWindows ? test.skip : test)('parseWatcherPatterns - windows', () => {\n\t\tconst path = 'c:\\\\users\\\\data\\\\src';\n\t\tlet parsedPattern = parseWatcherPatterns(path, ['*.js'])[0];\n\n\t\tassert.strictEqual(parsedPattern('c:\\\\users\\\\data\\\\src\\\\foo.js'), true);\n\t\tassert.strictEqual(parsedPattern('c:\\\\users\\\\data\\\\src\\\\foo.ts'), false);\n\t\tassert.strictEqual(parsedPattern('c:\\\\users\\\\data\\\\src\\\\bar/foo.js'), false);\n\n\t\tparsedPattern = parseWatcherPatterns(path, ['c:\\\\users\\\\data\\\\src\\\\*.js'])[0];\n\n\t\tassert.strictEqual(parsedPattern('c:\\\\users\\\\data\\\\src\\\\foo.js'), true);\n\t\tassert.strictEqual(parsedPattern('c:\\\\users\\\\data\\\\src\\\\foo.ts'), false);\n\t\tassert.strictEqual(parsedPattern('c:\\\\users\\\\data\\\\src\\\\bar\\\\foo.js'), false);\n\n\t\tparsedPattern = parseWatcherPatterns(path, ['c:\\\\users\\\\data\\\\src\\\\bar/*.js'])[0];\n\n\t\tassert.strictEqual(parsedPattern('c:\\\\users\\\\data\\\\src\\\\foo.js'), false);\n\t\tassert.strictEqual(parsedPattern('c:\\\\users\\\\data\\\\src\\\\foo.ts'), false);\n\t\tassert.strictEqual(parsedPattern('c:\\\\users\\\\data\\\\src\\\\bar\\\\foo.js'), true);\n\n\t\tparsedPattern = parseWatcherPatterns(path, ['**/*.js'])[0];\n\n\t\tassert.strictEqual(parsedPattern('c:\\\\users\\\\data\\\\src\\\\foo.js'), true);\n\t\tassert.strictEqual(parsedPattern('c:\\\\users\\\\data\\\\src\\\\foo.ts'), false);\n\t\tassert.strictEqual(parsedPattern('c:\\\\users\\\\data\\\\src\\\\bar\\\\foo.js'), true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n\nsuite('Watcher Events Normalizer', () => {\n\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('simple add/update/delete', done => {\n\t\tconst watch = disposables.add(new TestFileWatcher());\n\n\t\tconst added = uri.file('/users/data/src/added.txt');\n\t\tconst updated = uri.file('/users/data/src/updated.txt');\n\t\tconst deleted = uri.file('/users/data/src/deleted.txt');\n\n\t\tconst raw: IDiskFileChange[] = [\n\t\t\t{ path: added.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: updated.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: deleted.fsPath, type: FileChangeType.DELETED },\n\t\t];\n\n\t\tdisposables.add(watch.onDidFilesChange(({ event, raw }) => {\n\t\t\tassert.ok(event);\n\t\t\tassert.strictEqual(raw.length, 3);\n\t\t\tassert.ok(event.contains(added, FileChangeType.ADDED));\n\t\t\tassert.ok(event.contains(updated, FileChangeType.UPDATED));\n\t\t\tassert.ok(event.contains(deleted, FileChangeType.DELETED));\n\n\t\t\tdone();\n\t\t}));\n\n\t\twatch.report(raw);\n\t});\n\n\t(isWindows ? [Path.WINDOWS, Path.UNC] : [Path.UNIX]).forEach(path => {\n\t\ttest(`delete only reported for top level folder (${path})`, done => {\n\t\t\tconst watch = disposables.add(new TestFileWatcher());\n\n\t\t\tconst deletedFolderA = uri.file(path === Path.UNIX ? '/users/data/src/todelete1' : path === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete1' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete1');\n\t\t\tconst deletedFolderB = uri.file(path === Path.UNIX ? '/users/data/src/todelete2' : path === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete2' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete2');\n\t\t\tconst deletedFolderBF1 = uri.file(path === Path.UNIX ? '/users/data/src/todelete2/file.txt' : path === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete2\\\\file.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete2\\\\file.txt');\n\t\t\tconst deletedFolderBF2 = uri.file(path === Path.UNIX ? '/users/data/src/todelete2/more/test.txt' : path === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete2\\\\more\\\\test.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete2\\\\more\\\\test.txt');\n\t\t\tconst deletedFolderBF3 = uri.file(path === Path.UNIX ? '/users/data/src/todelete2/super/bar/foo.txt' : path === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete2\\\\super\\\\bar\\\\foo.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete2\\\\super\\\\bar\\\\foo.txt');\n\t\t\tconst deletedFileA = uri.file(path === Path.UNIX ? '/users/data/src/deleteme.txt' : path === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\deleteme.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\deleteme.txt');\n\n\t\t\tconst addedFile = uri.file(path === Path.UNIX ? '/users/data/src/added.txt' : path === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\added.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\added.txt');\n\t\t\tconst updatedFile = uri.file(path === Path.UNIX ? '/users/data/src/updated.txt' : path === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\updated.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\updated.txt');\n\n\t\t\tconst raw: IDiskFileChange[] = [\n\t\t\t\t{ path: deletedFolderA.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFolderB.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFolderBF1.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFolderBF2.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFolderBF3.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFileA.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: addedFile.fsPath, type: FileChangeType.ADDED },\n\t\t\t\t{ path: updatedFile.fsPath, type: FileChangeType.UPDATED }\n\t\t\t];\n\n\t\t\tdisposables.add(watch.onDidFilesChange(({ event, raw }) => {\n\t\t\t\tassert.ok(event);\n\t\t\t\tassert.strictEqual(raw.length, 5);\n\n\t\t\t\tassert.ok(event.contains(deletedFolderA, FileChangeType.DELETED));\n\t\t\t\tassert.ok(event.contains(deletedFolderB, FileChangeType.DELETED));\n\t\t\t\tassert.ok(event.contains(deletedFileA, FileChangeType.DELETED));\n\t\t\t\tassert.ok(event.contains(addedFile, FileChangeType.ADDED));\n\t\t\t\tassert.ok(event.contains(updatedFile, FileChangeType.UPDATED));\n\n\t\t\t\tdone();\n\t\t\t}));\n\n\t\t\twatch.report(raw);\n\t\t});\n\t});\n\n\ttest('event coalescer: ignore CREATE followed by DELETE', done => {\n\t\tconst watch = disposables.add(new TestFileWatcher());\n\n\t\tconst created = uri.file('/users/data/src/related');\n\t\tconst deleted = uri.file('/users/data/src/related');\n\t\tconst unrelated = uri.file('/users/data/src/unrelated');\n\n\t\tconst raw: IDiskFileChange[] = [\n\t\t\t{ path: created.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: deleted.fsPath, type: FileChangeType.DELETED },\n\t\t\t{ path: unrelated.fsPath, type: FileChangeType.UPDATED },\n\t\t];\n\n\t\tdisposables.add(watch.onDidFilesChange(({ event, raw }) => {\n\t\t\tassert.ok(event);\n\t\t\tassert.strictEqual(raw.length, 1);\n\n\t\t\tassert.ok(event.contains(unrelated, FileChangeType.UPDATED));\n\n\t\t\tdone();\n\t\t}));\n\n\t\twatch.report(raw);\n\t});\n\n\ttest('event coalescer: flatten DELETE followed by CREATE into CHANGE', done => {\n\t\tconst watch = disposables.add(new TestFileWatcher());\n\n\t\tconst deleted = uri.file('/users/data/src/related');\n\t\tconst created = uri.file('/users/data/src/related');\n\t\tconst unrelated = uri.file('/users/data/src/unrelated');\n\n\t\tconst raw: IDiskFileChange[] = [\n\t\t\t{ path: deleted.fsPath, type: FileChangeType.DELETED },\n\t\t\t{ path: created.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: unrelated.fsPath, type: FileChangeType.UPDATED },\n\t\t];\n\n\t\tdisposables.add(watch.onDidFilesChange(({ event, raw }) => {\n\t\t\tassert.ok(event);\n\t\t\tassert.strictEqual(raw.length, 2);\n\n\t\t\tassert.ok(event.contains(deleted, FileChangeType.UPDATED));\n\t\t\tassert.ok(event.contains(unrelated, FileChangeType.UPDATED));\n\n\t\t\tdone();\n\t\t}));\n\n\t\twatch.report(raw);\n\t});\n\n\ttest('event coalescer: ignore UPDATE when CREATE received', done => {\n\t\tconst watch = disposables.add(new TestFileWatcher());\n\n\t\tconst created = uri.file('/users/data/src/related');\n\t\tconst updated = uri.file('/users/data/src/related');\n\t\tconst unrelated = uri.file('/users/data/src/unrelated');\n\n\t\tconst raw: IDiskFileChange[] = [\n\t\t\t{ path: created.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: updated.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: unrelated.fsPath, type: FileChangeType.UPDATED },\n\t\t];\n\n\t\tdisposables.add(watch.onDidFilesChange(({ event, raw }) => {\n\t\t\tassert.ok(event);\n\t\t\tassert.strictEqual(raw.length, 2);\n\n\t\t\tassert.ok(event.contains(created, FileChangeType.ADDED));\n\t\t\tassert.ok(!event.contains(created, FileChangeType.UPDATED));\n\t\t\tassert.ok(event.contains(unrelated, FileChangeType.UPDATED));\n\n\t\t\tdone();\n\t\t}));\n\n\t\twatch.report(raw);\n\t});\n\n\ttest('event coalescer: apply DELETE', done => {\n\t\tconst watch = disposables.add(new TestFileWatcher());\n\n\t\tconst updated = uri.file('/users/data/src/related');\n\t\tconst updated2 = uri.file('/users/data/src/related');\n\t\tconst deleted = uri.file('/users/data/src/related');\n\t\tconst unrelated = uri.file('/users/data/src/unrelated');\n\n\t\tconst raw: IDiskFileChange[] = [\n\t\t\t{ path: updated.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: updated2.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: unrelated.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: updated.fsPath, type: FileChangeType.DELETED }\n\t\t];\n\n\t\tdisposables.add(watch.onDidFilesChange(({ event, raw }) => {\n\t\t\tassert.ok(event);\n\t\t\tassert.strictEqual(raw.length, 2);\n\n\t\t\tassert.ok(event.contains(deleted, FileChangeType.DELETED));\n\t\t\tassert.ok(!event.contains(updated, FileChangeType.UPDATED));\n\t\t\tassert.ok(event.contains(unrelated, FileChangeType.UPDATED));\n\n\t\t\tdone();\n\t\t}));\n\n\t\twatch.report(raw);\n\t});\n\n\ttest('event coalescer: track case renames', done => {\n\t\tconst watch = disposables.add(new TestFileWatcher());\n\n\t\tconst oldPath = uri.file('/users/data/src/added');\n\t\tconst newPath = uri.file('/users/data/src/ADDED');\n\n\t\tconst raw: IDiskFileChange[] = [\n\t\t\t{ path: newPath.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: oldPath.fsPath, type: FileChangeType.DELETED }\n\t\t];\n\n\t\tdisposables.add(watch.onDidFilesChange(({ event, raw }) => {\n\t\t\tassert.ok(event);\n\t\t\tassert.strictEqual(raw.length, 2);\n\n\t\t\tfor (const r of raw) {\n\t\t\t\tif (isEqual(r.resource, oldPath)) {\n\t\t\t\t\tassert.strictEqual(r.type, FileChangeType.DELETED);\n\t\t\t\t} else if (isEqual(r.resource, newPath)) {\n\t\t\t\t\tassert.strictEqual(r.type, FileChangeType.ADDED);\n\t\t\t\t} else {\n\t\t\t\t\tassert.fail();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdone();\n\t\t}));\n\n\t\twatch.report(raw);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}