{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/files/test/browser/indexedDBFileService.integrationTest.ts"],"names":[],"mappings":"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","file":"indexedDBFileService.integrationTest.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IndexedDB } from 'vs/base/browser/indexedDB';\nimport { bufferToReadable, bufferToStream, VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename, joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { flakySuite } from 'vs/base/test/common/testUtils';\nimport { IndexedDBFileSystemProvider } from 'vs/platform/files/browser/indexedDBFileSystemProvider';\nimport { FileOperation, FileOperationError, FileOperationEvent, FileOperationResult, FileSystemProviderError, FileSystemProviderErrorCode, FileType } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { NullLogService } from 'vs/platform/log/common/log';\n\nflakySuite('IndexedDBFileSystemProvider', function () {\n\n\tlet service: FileService;\n\tlet userdataFileProvider: IndexedDBFileSystemProvider;\n\tconst testDir = '/';\n\n\tconst userdataURIFromPaths = (paths: readonly string[]) => joinPath(URI.from({ scheme: Schemas.vscodeUserData, path: testDir }), ...paths);\n\n\tconst disposables = new DisposableStore();\n\n\tconst initFixtures = async () => {\n\t\tawait Promise.all(\n\t\t\t[['fixtures', 'resolver', 'examples'],\n\t\t\t['fixtures', 'resolver', 'other', 'deep'],\n\t\t\t['fixtures', 'service', 'deep'],\n\t\t\t['batched']]\n\t\t\t\t.map(path => userdataURIFromPaths(path))\n\t\t\t\t.map(uri => service.createFolder(uri)));\n\t\tawait Promise.all(\n\t\t\t([\n\t\t\t\t[['fixtures', 'resolver', 'examples', 'company.js'], 'class company {}'],\n\t\t\t\t[['fixtures', 'resolver', 'examples', 'conway.js'], 'export function conway() {}'],\n\t\t\t\t[['fixtures', 'resolver', 'examples', 'employee.js'], 'export const employee = \"jax\"'],\n\t\t\t\t[['fixtures', 'resolver', 'examples', 'small.js'], ''],\n\t\t\t\t[['fixtures', 'resolver', 'other', 'deep', 'company.js'], 'class company {}'],\n\t\t\t\t[['fixtures', 'resolver', 'other', 'deep', 'conway.js'], 'export function conway() {}'],\n\t\t\t\t[['fixtures', 'resolver', 'other', 'deep', 'employee.js'], 'export const employee = \"jax\"'],\n\t\t\t\t[['fixtures', 'resolver', 'other', 'deep', 'small.js'], ''],\n\t\t\t\t[['fixtures', 'resolver', 'index.html'], '<p>p</p>'],\n\t\t\t\t[['fixtures', 'resolver', 'site.css'], '.p {color: red;}'],\n\t\t\t\t[['fixtures', 'service', 'deep', 'company.js'], 'class company {}'],\n\t\t\t\t[['fixtures', 'service', 'deep', 'conway.js'], 'export function conway() {}'],\n\t\t\t\t[['fixtures', 'service', 'deep', 'employee.js'], 'export const employee = \"jax\"'],\n\t\t\t\t[['fixtures', 'service', 'deep', 'small.js'], ''],\n\t\t\t\t[['fixtures', 'service', 'binary.txt'], '<p>p</p>'],\n\t\t\t] as const)\n\t\t\t\t.map(([path, contents]) => [userdataURIFromPaths(path), contents] as const)\n\t\t\t\t.map(([uri, contents]) => service.createFile(uri, VSBuffer.fromString(contents)))\n\t\t);\n\t};\n\n\tconst reload = async () => {\n\t\tconst logService = new NullLogService();\n\n\t\tservice = new FileService(logService);\n\t\tdisposables.add(service);\n\n\t\tconst indexedDB = await IndexedDB.create('vscode-web-db-test', 1, ['vscode-userdata-store', 'vscode-logs-store']);\n\n\t\tuserdataFileProvider = new IndexedDBFileSystemProvider(Schemas.vscodeUserData, indexedDB, 'vscode-userdata-store', true);\n\t\tdisposables.add(service.registerProvider(Schemas.vscodeUserData, userdataFileProvider));\n\t\tdisposables.add(userdataFileProvider);\n\t};\n\n\tsetup(async function () {\n\t\tthis.timeout(15000);\n\t\tawait reload();\n\t});\n\n\tteardown(async () => {\n\t\tawait userdataFileProvider.reset();\n\t\tdisposables.clear();\n\t});\n\n\ttest('root is always present', async () => {\n\t\tassert.strictEqual((await userdataFileProvider.stat(userdataURIFromPaths([]))).type, FileType.Directory);\n\t\tawait userdataFileProvider.delete(userdataURIFromPaths([]), { recursive: true, useTrash: false, atomic: false });\n\t\tassert.strictEqual((await userdataFileProvider.stat(userdataURIFromPaths([]))).type, FileType.Directory);\n\t});\n\n\ttest('createFolder', async () => {\n\t\tlet event: FileOperationEvent | undefined;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst newFolderResource = joinPath(parent.resource, 'newFolder');\n\n\t\tassert.strictEqual((await userdataFileProvider.readdir(parent.resource)).length, 0);\n\t\tconst newFolder = await service.createFolder(newFolderResource);\n\t\tassert.strictEqual(newFolder.name, 'newFolder');\n\t\tassert.strictEqual((await userdataFileProvider.readdir(parent.resource)).length, 1);\n\t\tassert.strictEqual((await userdataFileProvider.stat(newFolderResource)).type, FileType.Directory);\n\n\t\tassert.ok(event);\n\t\tassert.strictEqual(event!.resource.path, newFolderResource.path);\n\t\tassert.strictEqual(event!.operation, FileOperation.CREATE);\n\t\tassert.strictEqual(event!.target!.resource.path, newFolderResource.path);\n\t\tassert.strictEqual(event!.target!.isDirectory, true);\n\t});\n\n\ttest('createFolder: creating multiple folders at once', async () => {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst multiFolderPaths = ['a', 'couple', 'of', 'folders'];\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst newFolderResource = joinPath(parent.resource, ...multiFolderPaths);\n\n\t\tconst newFolder = await service.createFolder(newFolderResource);\n\n\t\tconst lastFolderName = multiFolderPaths[multiFolderPaths.length - 1];\n\t\tassert.strictEqual(newFolder.name, lastFolderName);\n\t\tassert.strictEqual((await userdataFileProvider.stat(newFolderResource)).type, FileType.Directory);\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.path, newFolderResource.path);\n\t\tassert.strictEqual(event!.operation, FileOperation.CREATE);\n\t\tassert.strictEqual(event!.target!.resource.path, newFolderResource.path);\n\t\tassert.strictEqual(event!.target!.isDirectory, true);\n\t});\n\n\ttest('exists', async () => {\n\t\tlet exists = await service.exists(userdataURIFromPaths([]));\n\t\tassert.strictEqual(exists, true);\n\n\t\texists = await service.exists(userdataURIFromPaths(['hello']));\n\t\tassert.strictEqual(exists, false);\n\t});\n\n\ttest('resolve - file', async () => {\n\t\tawait initFixtures();\n\n\t\tconst resource = userdataURIFromPaths(['fixtures', 'resolver', 'index.html']);\n\t\tconst resolved = await service.resolve(resource);\n\n\t\tassert.strictEqual(resolved.name, 'index.html');\n\t\tassert.strictEqual(resolved.isFile, true);\n\t\tassert.strictEqual(resolved.isDirectory, false);\n\t\tassert.strictEqual(resolved.isSymbolicLink, false);\n\t\tassert.strictEqual(resolved.resource.toString(), resource.toString());\n\t\tassert.strictEqual(resolved.children, undefined);\n\t\tassert.ok(resolved.size! > 0);\n\t});\n\n\ttest('resolve - directory', async () => {\n\t\tawait initFixtures();\n\n\t\tconst testsElements = ['examples', 'other', 'index.html', 'site.css'];\n\n\t\tconst resource = userdataURIFromPaths(['fixtures', 'resolver']);\n\t\tconst result = await service.resolve(resource);\n\n\t\tassert.ok(result);\n\t\tassert.strictEqual(result.resource.toString(), resource.toString());\n\t\tassert.strictEqual(result.name, 'resolver');\n\t\tassert.ok(result.children);\n\t\tassert.ok(result.children!.length > 0);\n\t\tassert.ok(result!.isDirectory);\n\t\tassert.strictEqual(result.children!.length, testsElements.length);\n\n\t\tassert.ok(result.children!.every(entry => {\n\t\t\treturn testsElements.some(name => {\n\t\t\t\treturn basename(entry.resource) === name;\n\t\t\t});\n\t\t}));\n\n\t\tresult.children!.forEach(value => {\n\t\t\tassert.ok(basename(value.resource));\n\t\t\tif (['examples', 'other'].indexOf(basename(value.resource)) >= 0) {\n\t\t\t\tassert.ok(value.isDirectory);\n\t\t\t\tassert.strictEqual(value.mtime, undefined);\n\t\t\t\tassert.strictEqual(value.ctime, undefined);\n\t\t\t} else if (basename(value.resource) === 'index.html') {\n\t\t\t\tassert.ok(!value.isDirectory);\n\t\t\t\tassert.ok(!value.children);\n\t\t\t\tassert.strictEqual(value.mtime, undefined);\n\t\t\t\tassert.strictEqual(value.ctime, undefined);\n\t\t\t} else if (basename(value.resource) === 'site.css') {\n\t\t\t\tassert.ok(!value.isDirectory);\n\t\t\t\tassert.ok(!value.children);\n\t\t\t\tassert.strictEqual(value.mtime, undefined);\n\t\t\t\tassert.strictEqual(value.ctime, undefined);\n\t\t\t} else {\n\t\t\t\tassert.ok(!'Unexpected value ' + basename(value.resource));\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('createFile', async () => {\n\t\treturn assertCreateFile(contents => VSBuffer.fromString(contents));\n\t});\n\n\ttest('createFile (readable)', async () => {\n\t\treturn assertCreateFile(contents => bufferToReadable(VSBuffer.fromString(contents)));\n\t});\n\n\ttest('createFile (stream)', async () => {\n\t\treturn assertCreateFile(contents => bufferToStream(VSBuffer.fromString(contents)));\n\t});\n\n\tasync function assertCreateFile(converter: (content: string) => VSBuffer | VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst contents = 'Hello World';\n\t\tconst resource = userdataURIFromPaths(['test.txt']);\n\n\t\tassert.strictEqual(await service.canCreateFile(resource), true);\n\t\tconst fileStat = await service.createFile(resource, converter(contents));\n\t\tassert.strictEqual(fileStat.name, 'test.txt');\n\t\tassert.strictEqual((await userdataFileProvider.stat(fileStat.resource)).type, FileType.File);\n\t\tassert.strictEqual(new TextDecoder().decode(await userdataFileProvider.readFile(fileStat.resource)), contents);\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.path, resource.path);\n\t\tassert.strictEqual(event!.operation, FileOperation.CREATE);\n\t\tassert.strictEqual(event!.target!.resource.path, resource.path);\n\t}\n\n\tconst fileCreateBatchTester = (size: number, name: string) => {\n\t\tconst batch = Array.from({ length: size }).map((_, i) => ({ contents: `Hello${i}`, resource: userdataURIFromPaths(['batched', name, `Hello${i}.txt`]) }));\n\t\tlet creationPromises: Promise<any> | undefined = undefined;\n\t\treturn {\n\t\t\tasync create() {\n\t\t\t\treturn creationPromises = Promise.all(batch.map(entry => userdataFileProvider.writeFile(entry.resource, VSBuffer.fromString(entry.contents).buffer, { create: true, overwrite: true, unlock: false, atomic: false })));\n\t\t\t},\n\t\t\tasync assertContentsCorrect() {\n\t\t\t\tif (!creationPromises) { throw Error('read called before create'); }\n\t\t\t\tawait creationPromises;\n\t\t\t\tawait Promise.all(batch.map(async (entry, i) => {\n\t\t\t\t\tassert.strictEqual((await userdataFileProvider.stat(entry.resource)).type, FileType.File);\n\t\t\t\t\tassert.strictEqual(new TextDecoder().decode(await userdataFileProvider.readFile(entry.resource)), entry.contents);\n\t\t\t\t}));\n\t\t\t}\n\t\t};\n\t};\n\n\ttest('createFile - batch', async () => {\n\t\tconst tester = fileCreateBatchTester(20, 'batch');\n\t\tawait tester.create();\n\t\tawait tester.assertContentsCorrect();\n\t});\n\n\ttest('createFile - batch (mixed parallel/sequential)', async () => {\n\t\tconst batch1 = fileCreateBatchTester(1, 'batch1');\n\t\tconst batch2 = fileCreateBatchTester(20, 'batch2');\n\t\tconst batch3 = fileCreateBatchTester(1, 'batch3');\n\t\tconst batch4 = fileCreateBatchTester(20, 'batch4');\n\n\t\tbatch1.create();\n\t\tbatch2.create();\n\t\tawait Promise.all([batch1.assertContentsCorrect(), batch2.assertContentsCorrect()]);\n\t\tbatch3.create();\n\t\tbatch4.create();\n\t\tawait Promise.all([batch3.assertContentsCorrect(), batch4.assertContentsCorrect()]);\n\t\tawait Promise.all([batch1.assertContentsCorrect(), batch2.assertContentsCorrect()]);\n\t});\n\n\ttest('rename not existing resource', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst sourceFile = joinPath(parent.resource, 'sourceFile');\n\t\tconst targetFile = joinPath(parent.resource, 'targetFile');\n\n\t\ttry {\n\t\t\tawait service.move(sourceFile, targetFile, false);\n\t\t} catch (error) {\n\t\t\tassert.deepStrictEqual((<FileSystemProviderError>error).code, FileSystemProviderErrorCode.FileNotFound);\n\t\t\treturn;\n\t\t}\n\n\t\tassert.fail('This should fail with error');\n\t});\n\n\ttest('rename to an existing file without overwrite', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst sourceFile = joinPath(parent.resource, 'sourceFile');\n\t\tawait service.writeFile(sourceFile, VSBuffer.fromString('This is source file'));\n\n\t\tconst targetFile = joinPath(parent.resource, 'targetFile');\n\t\tawait service.writeFile(targetFile, VSBuffer.fromString('This is target file'));\n\n\t\ttry {\n\t\t\tawait service.move(sourceFile, targetFile, false);\n\t\t} catch (error) {\n\t\t\tassert.deepStrictEqual((<FileOperationError>error).fileOperationResult, FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\treturn;\n\t\t}\n\n\t\tassert.fail('This should fail with error');\n\t});\n\n\ttest('rename folder to an existing folder without overwrite', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst sourceFolder = joinPath(parent.resource, 'sourceFolder');\n\t\tawait service.createFolder(sourceFolder);\n\t\tconst targetFolder = joinPath(parent.resource, 'targetFolder');\n\t\tawait service.createFolder(targetFolder);\n\n\t\ttry {\n\t\t\tawait service.move(sourceFolder, targetFolder, false);\n\t\t} catch (error) {\n\t\t\tassert.deepStrictEqual((<FileOperationError>error).fileOperationResult, FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\treturn;\n\t\t}\n\n\t\tassert.fail('This should fail with cannot overwrite error');\n\t});\n\n\ttest('rename file to a folder', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst sourceFile = joinPath(parent.resource, 'sourceFile');\n\t\tawait service.writeFile(sourceFile, VSBuffer.fromString('This is source file'));\n\n\t\tconst targetFolder = joinPath(parent.resource, 'targetFolder');\n\t\tawait service.createFolder(targetFolder);\n\n\t\ttry {\n\t\t\tawait service.move(sourceFile, targetFolder, false);\n\t\t} catch (error) {\n\t\t\tassert.deepStrictEqual((<FileOperationError>error).fileOperationResult, FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\treturn;\n\t\t}\n\n\t\tassert.fail('This should fail with error');\n\t});\n\n\ttest('rename folder to a file', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst sourceFolder = joinPath(parent.resource, 'sourceFile');\n\t\tawait service.createFolder(sourceFolder);\n\n\t\tconst targetFile = joinPath(parent.resource, 'targetFile');\n\t\tawait service.writeFile(targetFile, VSBuffer.fromString('This is target file'));\n\n\t\ttry {\n\t\t\tawait service.move(sourceFolder, targetFile, false);\n\t\t} catch (error) {\n\t\t\tassert.deepStrictEqual((<FileOperationError>error).fileOperationResult, FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\treturn;\n\t\t}\n\n\t\tassert.fail('This should fail with error');\n\t});\n\n\ttest('rename file', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst sourceFile = joinPath(parent.resource, 'sourceFile');\n\t\tawait service.writeFile(sourceFile, VSBuffer.fromString('This is source file'));\n\n\t\tconst targetFile = joinPath(parent.resource, 'targetFile');\n\t\tawait service.move(sourceFile, targetFile, false);\n\n\t\tconst content = await service.readFile(targetFile);\n\t\tassert.strictEqual(await service.exists(sourceFile), false);\n\t\tassert.strictEqual(content.value.toString(), 'This is source file');\n\t});\n\n\ttest('rename to an existing file with overwrite', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst sourceFile = joinPath(parent.resource, 'sourceFile');\n\t\tconst targetFile = joinPath(parent.resource, 'targetFile');\n\n\t\tawait Promise.all([\n\t\t\tservice.writeFile(sourceFile, VSBuffer.fromString('This is source file')),\n\t\t\tservice.writeFile(targetFile, VSBuffer.fromString('This is target file'))\n\t\t]);\n\n\t\tawait service.move(sourceFile, targetFile, true);\n\n\t\tconst content = await service.readFile(targetFile);\n\t\tassert.strictEqual(await service.exists(sourceFile), false);\n\t\tassert.strictEqual(content.value.toString(), 'This is source file');\n\t});\n\n\ttest('rename folder to a new folder', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst sourceFolder = joinPath(parent.resource, 'sourceFolder');\n\t\tawait service.createFolder(sourceFolder);\n\n\t\tconst targetFolder = joinPath(parent.resource, 'targetFolder');\n\t\tawait service.move(sourceFolder, targetFolder, false);\n\n\t\tassert.deepStrictEqual(await service.exists(sourceFolder), false);\n\t\tassert.deepStrictEqual(await service.exists(targetFolder), true);\n\t});\n\n\ttest('rename folder to an existing folder', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst sourceFolder = joinPath(parent.resource, 'sourceFolder');\n\t\tawait service.createFolder(sourceFolder);\n\t\tconst targetFolder = joinPath(parent.resource, 'targetFolder');\n\t\tawait service.createFolder(targetFolder);\n\n\t\tawait service.move(sourceFolder, targetFolder, true);\n\n\t\tassert.deepStrictEqual(await service.exists(sourceFolder), false);\n\t\tassert.deepStrictEqual(await service.exists(targetFolder), true);\n\t});\n\n\ttest('rename a folder that has multiple files and folders', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\n\t\tconst sourceFolder = joinPath(parent.resource, 'sourceFolder');\n\t\tconst sourceFile1 = joinPath(sourceFolder, 'folder1', 'file1');\n\t\tconst sourceFile2 = joinPath(sourceFolder, 'folder2', 'file1');\n\t\tconst sourceEmptyFolder = joinPath(sourceFolder, 'folder3');\n\n\t\tawait Promise.all([\n\t\t\tservice.writeFile(sourceFile1, VSBuffer.fromString('Source File 1')),\n\t\t\tservice.writeFile(sourceFile2, VSBuffer.fromString('Source File 2')),\n\t\t\tservice.createFolder(sourceEmptyFolder)\n\t\t]);\n\n\t\tconst targetFolder = joinPath(parent.resource, 'targetFolder');\n\t\tconst targetFile1 = joinPath(targetFolder, 'folder1', 'file1');\n\t\tconst targetFile2 = joinPath(targetFolder, 'folder2', 'file1');\n\t\tconst targetEmptyFolder = joinPath(targetFolder, 'folder3');\n\n\t\tawait service.move(sourceFolder, targetFolder, false);\n\n\t\tassert.deepStrictEqual(await service.exists(sourceFolder), false);\n\t\tassert.deepStrictEqual(await service.exists(targetFolder), true);\n\t\tassert.strictEqual((await service.readFile(targetFile1)).value.toString(), 'Source File 1');\n\t\tassert.strictEqual((await service.readFile(targetFile2)).value.toString(), 'Source File 2');\n\t\tassert.deepStrictEqual(await service.exists(targetEmptyFolder), true);\n\t});\n\n\ttest('rename a folder to another folder that has some files', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\n\t\tconst sourceFolder = joinPath(parent.resource, 'sourceFolder');\n\t\tconst sourceFile1 = joinPath(sourceFolder, 'folder1', 'file1');\n\n\t\tconst targetFolder = joinPath(parent.resource, 'targetFolder');\n\t\tconst targetFile1 = joinPath(targetFolder, 'folder1', 'file1');\n\t\tconst targetFile2 = joinPath(targetFolder, 'folder1', 'file2');\n\t\tconst targetFile3 = joinPath(targetFolder, 'folder2', 'file1');\n\n\t\tawait Promise.all([\n\t\t\tservice.writeFile(sourceFile1, VSBuffer.fromString('Source File 1')),\n\t\t\tservice.writeFile(targetFile2, VSBuffer.fromString('Target File 2')),\n\t\t\tservice.writeFile(targetFile3, VSBuffer.fromString('Target File 3'))\n\t\t]);\n\n\t\tawait service.move(sourceFolder, targetFolder, true);\n\n\t\tassert.deepStrictEqual(await service.exists(sourceFolder), false);\n\t\tassert.deepStrictEqual(await service.exists(targetFolder), true);\n\t\tassert.strictEqual((await service.readFile(targetFile1)).value.toString(), 'Source File 1');\n\t\tassert.strictEqual(await service.exists(targetFile2), false);\n\t\tassert.strictEqual(await service.exists(targetFile3), false);\n\t});\n\n\ttest('deleteFile', async () => {\n\t\tawait initFixtures();\n\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst anotherResource = userdataURIFromPaths(['fixtures', 'service', 'deep', 'company.js']);\n\t\tconst resource = userdataURIFromPaths(['fixtures', 'service', 'deep', 'conway.js']);\n\t\tconst source = await service.resolve(resource);\n\n\t\tassert.strictEqual(await service.canDelete(source.resource, { useTrash: false }), true);\n\t\tawait service.del(source.resource, { useTrash: false });\n\n\t\tassert.strictEqual(await service.exists(source.resource), false);\n\t\tassert.strictEqual(await service.exists(anotherResource), true);\n\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.path, resource.path);\n\t\tassert.strictEqual(event!.operation, FileOperation.DELETE);\n\n\t\t{\n\t\t\tlet error: Error | undefined = undefined;\n\t\t\ttry {\n\t\t\t\tawait service.del(source.resource, { useTrash: false });\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\n\t\t\tassert.ok(error);\n\t\t\tassert.strictEqual((<FileOperationError>error).fileOperationResult, FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\t\tawait reload();\n\t\t{\n\t\t\tlet error: Error | undefined = undefined;\n\t\t\ttry {\n\t\t\t\tawait service.del(source.resource, { useTrash: false });\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\n\t\t\tassert.ok(error);\n\t\t\tassert.strictEqual((<FileOperationError>error).fileOperationResult, FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\t});\n\n\ttest('deleteFolder (recursive)', async () => {\n\t\tawait initFixtures();\n\t\tlet event: FileOperationEvent;\n\t\tdisposables.add(service.onDidRunOperation(e => event = e));\n\n\t\tconst resource = userdataURIFromPaths(['fixtures', 'service', 'deep']);\n\t\tconst subResource1 = userdataURIFromPaths(['fixtures', 'service', 'deep', 'company.js']);\n\t\tconst subResource2 = userdataURIFromPaths(['fixtures', 'service', 'deep', 'conway.js']);\n\t\tassert.strictEqual(await service.exists(subResource1), true);\n\t\tassert.strictEqual(await service.exists(subResource2), true);\n\n\t\tconst source = await service.resolve(resource);\n\n\t\tassert.strictEqual(await service.canDelete(source.resource, { recursive: true, useTrash: false }), true);\n\t\tawait service.del(source.resource, { recursive: true, useTrash: false });\n\n\t\tassert.strictEqual(await service.exists(source.resource), false);\n\t\tassert.strictEqual(await service.exists(subResource1), false);\n\t\tassert.strictEqual(await service.exists(subResource2), false);\n\t\tassert.ok(event!);\n\t\tassert.strictEqual(event!.resource.fsPath, resource.fsPath);\n\t\tassert.strictEqual(event!.operation, FileOperation.DELETE);\n\t});\n\n\ttest('deleteFolder (non recursive)', async () => {\n\t\tawait initFixtures();\n\t\tconst resource = userdataURIFromPaths(['fixtures', 'service', 'deep']);\n\t\tconst source = await service.resolve(resource);\n\n\t\tassert.ok((await service.canDelete(source.resource)) instanceof Error);\n\n\t\tlet error;\n\t\ttry {\n\t\t\tawait service.del(source.resource);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\t\tassert.ok(error);\n\t});\n\n\ttest('delete empty folder', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst folder = joinPath(parent.resource, 'folder');\n\t\tawait service.createFolder(folder);\n\n\t\tawait service.del(folder);\n\n\t\tassert.deepStrictEqual(await service.exists(folder), false);\n\t});\n\n\ttest('delete empty folder with reccursive', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\t\tconst folder = joinPath(parent.resource, 'folder');\n\t\tawait service.createFolder(folder);\n\n\t\tawait service.del(folder, { recursive: true });\n\n\t\tassert.deepStrictEqual(await service.exists(folder), false);\n\t});\n\n\ttest('deleteFolder with folders and files (recursive)', async () => {\n\t\tconst parent = await service.resolve(userdataURIFromPaths([]));\n\n\t\tconst targetFolder = joinPath(parent.resource, 'targetFolder');\n\t\tconst file1 = joinPath(targetFolder, 'folder1', 'file1');\n\t\tawait service.createFile(file1);\n\t\tconst file2 = joinPath(targetFolder, 'folder2', 'file1');\n\t\tawait service.createFile(file2);\n\t\tconst emptyFolder = joinPath(targetFolder, 'folder3');\n\t\tawait service.createFolder(emptyFolder);\n\n\t\tawait service.del(targetFolder, { recursive: true });\n\n\t\tassert.deepStrictEqual(await service.exists(targetFolder), false);\n\t\tassert.deepStrictEqual(await service.exists(joinPath(targetFolder, 'folder1')), false);\n\t\tassert.deepStrictEqual(await service.exists(joinPath(targetFolder, 'folder2')), false);\n\t\tassert.deepStrictEqual(await service.exists(file1), false);\n\t\tassert.deepStrictEqual(await service.exists(file2), false);\n\t\tassert.deepStrictEqual(await service.exists(emptyFolder), false);\n\t});\n});\n"]}