{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/files/test/browser/fileService.test.ts"],"names":[],"mappings":"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","file":"fileService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DeferredPromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { consumeStream, newWriteableStream, ReadableStreamEvents } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IFileOpenOptions, IFileReadStreamOptions, FileSystemProviderCapabilities, FileType, IFileSystemProviderCapabilitiesChangeEvent, IFileSystemProviderRegistrationEvent, IStat } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { NullFileSystemProvider } from 'vs/platform/files/test/common/nullFileSystemProvider';\nimport { NullLogService } from 'vs/platform/log/common/log';\n\nsuite('File Service', () => {\n\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('provider registration', async () => {\n\t\tconst service = disposables.add(new FileService(new NullLogService()));\n\t\tconst resource = URI.parse('test://foo/bar');\n\t\tconst provider = new NullFileSystemProvider();\n\n\t\tassert.strictEqual(await service.canHandleResource(resource), false);\n\t\tassert.strictEqual(service.hasProvider(resource), false);\n\t\tassert.strictEqual(service.getProvider(resource.scheme), undefined);\n\n\t\tconst registrations: IFileSystemProviderRegistrationEvent[] = [];\n\t\tdisposables.add(service.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tregistrations.push(e);\n\t\t}));\n\n\t\tconst capabilityChanges: IFileSystemProviderCapabilitiesChangeEvent[] = [];\n\t\tdisposables.add(service.onDidChangeFileSystemProviderCapabilities(e => {\n\t\t\tcapabilityChanges.push(e);\n\t\t}));\n\n\t\tlet registrationDisposable: IDisposable | undefined;\n\t\tlet callCount = 0;\n\t\tdisposables.add(service.onWillActivateFileSystemProvider(e => {\n\t\t\tcallCount++;\n\n\t\t\tif (e.scheme === 'test' && callCount === 1) {\n\t\t\t\te.join(new Promise(resolve => {\n\t\t\t\t\tregistrationDisposable = service.registerProvider('test', provider);\n\n\t\t\t\t\tresolve();\n\t\t\t\t}));\n\t\t\t}\n\t\t}));\n\n\t\tassert.strictEqual(await service.canHandleResource(resource), true);\n\t\tassert.strictEqual(service.hasProvider(resource), true);\n\t\tassert.strictEqual(service.getProvider(resource.scheme), provider);\n\n\t\tassert.strictEqual(registrations.length, 1);\n\t\tassert.strictEqual(registrations[0].scheme, 'test');\n\t\tassert.strictEqual(registrations[0].added, true);\n\t\tassert.ok(registrationDisposable);\n\n\t\tassert.strictEqual(capabilityChanges.length, 0);\n\n\t\tprovider.setCapabilities(FileSystemProviderCapabilities.FileFolderCopy);\n\t\tassert.strictEqual(capabilityChanges.length, 1);\n\t\tprovider.setCapabilities(FileSystemProviderCapabilities.Readonly);\n\t\tassert.strictEqual(capabilityChanges.length, 2);\n\n\t\tawait service.activateProvider('test');\n\t\tassert.strictEqual(callCount, 2); // activation is called again\n\n\t\tassert.strictEqual(service.hasCapability(resource, FileSystemProviderCapabilities.Readonly), true);\n\t\tassert.strictEqual(service.hasCapability(resource, FileSystemProviderCapabilities.FileOpenReadWriteClose), false);\n\n\t\tregistrationDisposable!.dispose();\n\n\t\tassert.strictEqual(await service.canHandleResource(resource), false);\n\t\tassert.strictEqual(service.hasProvider(resource), false);\n\n\t\tassert.strictEqual(registrations.length, 2);\n\t\tassert.strictEqual(registrations[1].scheme, 'test');\n\t\tassert.strictEqual(registrations[1].added, false);\n\t});\n\n\ttest('watch', async () => {\n\t\tconst service = disposables.add(new FileService(new NullLogService()));\n\n\t\tlet disposeCounter = 0;\n\t\tdisposables.add(service.registerProvider('test', new NullFileSystemProvider(() => {\n\t\t\treturn toDisposable(() => {\n\t\t\t\tdisposeCounter++;\n\t\t\t});\n\t\t})));\n\t\tawait service.activateProvider('test');\n\n\t\tconst resource1 = URI.parse('test://foo/bar1');\n\t\tconst watcher1Disposable = service.watch(resource1);\n\n\t\tawait timeout(0); // service.watch() is async\n\t\tassert.strictEqual(disposeCounter, 0);\n\t\twatcher1Disposable.dispose();\n\t\tassert.strictEqual(disposeCounter, 1);\n\n\t\tdisposeCounter = 0;\n\t\tconst resource2 = URI.parse('test://foo/bar2');\n\t\tconst watcher2Disposable1 = service.watch(resource2);\n\t\tconst watcher2Disposable2 = service.watch(resource2);\n\t\tconst watcher2Disposable3 = service.watch(resource2);\n\n\t\tawait timeout(0); // service.watch() is async\n\t\tassert.strictEqual(disposeCounter, 0);\n\t\twatcher2Disposable1.dispose();\n\t\tassert.strictEqual(disposeCounter, 0);\n\t\twatcher2Disposable2.dispose();\n\t\tassert.strictEqual(disposeCounter, 0);\n\t\twatcher2Disposable3.dispose();\n\t\tassert.strictEqual(disposeCounter, 1);\n\n\t\tdisposeCounter = 0;\n\t\tconst resource3 = URI.parse('test://foo/bar3');\n\t\tconst watcher3Disposable1 = service.watch(resource3);\n\t\tconst watcher3Disposable2 = service.watch(resource3, { recursive: true, excludes: [] });\n\t\tconst watcher3Disposable3 = service.watch(resource3, { recursive: false, excludes: [], includes: [] });\n\n\t\tawait timeout(0); // service.watch() is async\n\t\tassert.strictEqual(disposeCounter, 0);\n\t\twatcher3Disposable1.dispose();\n\t\tassert.strictEqual(disposeCounter, 1);\n\t\twatcher3Disposable2.dispose();\n\t\tassert.strictEqual(disposeCounter, 2);\n\t\twatcher3Disposable3.dispose();\n\t\tassert.strictEqual(disposeCounter, 3);\n\n\t\tservice.dispose();\n\t});\n\n\ttest('error from readFile bubbles through (https://github.com/microsoft/vscode/issues/118060) - async', async () => {\n\t\ttestReadErrorBubbles(true);\n\t});\n\n\ttest('error from readFile bubbles through (https://github.com/microsoft/vscode/issues/118060)', async () => {\n\t\ttestReadErrorBubbles(false);\n\t});\n\n\tasync function testReadErrorBubbles(async: boolean) {\n\t\tconst service = disposables.add(new FileService(new NullLogService()));\n\n\t\tconst provider = new class extends NullFileSystemProvider {\n\t\t\toverride async stat(resource: URI): Promise<IStat> {\n\t\t\t\treturn {\n\t\t\t\t\tmtime: Date.now(),\n\t\t\t\t\tctime: Date.now(),\n\t\t\t\t\tsize: 100,\n\t\t\t\t\ttype: FileType.File\n\t\t\t\t};\n\t\t\t}\n\n\t\t\toverride readFile(resource: URI): Promise<Uint8Array> {\n\t\t\t\tif (async) {\n\t\t\t\t\treturn timeout(5, CancellationToken.None).then(() => { throw new Error('failed'); });\n\t\t\t\t}\n\n\t\t\t\tthrow new Error('failed');\n\t\t\t}\n\n\t\t\toverride open(resource: URI, opts: IFileOpenOptions): Promise<number> {\n\t\t\t\tif (async) {\n\t\t\t\t\treturn timeout(5, CancellationToken.None).then(() => { throw new Error('failed'); });\n\t\t\t\t}\n\n\t\t\t\tthrow new Error('failed');\n\t\t\t}\n\n\t\t\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\t\t\tif (async) {\n\t\t\t\t\tconst stream = newWriteableStream<Uint8Array>(chunk => chunk[0]);\n\t\t\t\t\ttimeout(5, CancellationToken.None).then(() => stream.error(new Error('failed')));\n\n\t\t\t\t\treturn stream;\n\n\t\t\t\t}\n\n\t\t\t\tthrow new Error('failed');\n\t\t\t}\n\t\t};\n\n\t\tdisposables.add(service.registerProvider('test', provider));\n\n\t\tfor (const capabilities of [FileSystemProviderCapabilities.FileReadWrite, FileSystemProviderCapabilities.FileReadStream, FileSystemProviderCapabilities.FileOpenReadWriteClose]) {\n\t\t\tprovider.setCapabilities(capabilities);\n\n\t\t\tlet e1;\n\t\t\ttry {\n\t\t\t\tawait service.readFile(URI.parse('test://foo/bar'));\n\t\t\t} catch (error) {\n\t\t\t\te1 = error;\n\t\t\t}\n\n\t\t\tassert.ok(e1);\n\n\t\t\tlet e2;\n\t\t\ttry {\n\t\t\t\tconst stream = await service.readFileStream(URI.parse('test://foo/bar'));\n\t\t\t\tawait consumeStream(stream.value, chunk => chunk[0]);\n\t\t\t} catch (error) {\n\t\t\t\te2 = error;\n\t\t\t}\n\n\t\t\tassert.ok(e2);\n\t\t}\n\t}\n\n\ttest('readFile/readFileStream supports cancellation (https://github.com/microsoft/vscode/issues/138805)', async () => {\n\t\tconst service = disposables.add(new FileService(new NullLogService()));\n\n\t\tlet readFileStreamReady: DeferredPromise<void> | undefined = undefined;\n\n\t\tconst provider = new class extends NullFileSystemProvider {\n\n\t\t\toverride async stat(resource: URI): Promise<IStat> {\n\t\t\t\treturn {\n\t\t\t\t\tmtime: Date.now(),\n\t\t\t\t\tctime: Date.now(),\n\t\t\t\t\tsize: 100,\n\t\t\t\t\ttype: FileType.File\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\t\t\tconst stream = newWriteableStream<Uint8Array>(chunk => chunk[0]);\n\t\t\t\tdisposables.add(token.onCancellationRequested(() => {\n\t\t\t\t\tstream.error(new Error('Expected cancellation'));\n\t\t\t\t\tstream.end();\n\t\t\t\t}));\n\n\t\t\t\treadFileStreamReady!.complete();\n\n\t\t\t\treturn stream;\n\t\t\t}\n\t\t};\n\n\t\tconst disposable = service.registerProvider('test', provider);\n\n\t\tprovider.setCapabilities(FileSystemProviderCapabilities.FileReadStream);\n\n\t\tlet e1;\n\t\ttry {\n\t\t\tconst cts = new CancellationTokenSource();\n\t\t\treadFileStreamReady = new DeferredPromise();\n\t\t\tconst promise = service.readFile(URI.parse('test://foo/bar'), undefined, cts.token);\n\t\t\tawait Promise.all([readFileStreamReady.p.then(() => cts.cancel()), promise]);\n\t\t} catch (error) {\n\t\t\te1 = error;\n\t\t}\n\n\t\tassert.ok(e1);\n\n\t\tlet e2;\n\t\ttry {\n\t\t\tconst cts = new CancellationTokenSource();\n\t\t\treadFileStreamReady = new DeferredPromise();\n\t\t\tconst stream = await service.readFileStream(URI.parse('test://foo/bar'), undefined, cts.token);\n\t\t\tawait Promise.all([readFileStreamReady.p.then(() => cts.cancel()), consumeStream(stream.value, chunk => chunk[0])]);\n\t\t} catch (error) {\n\t\t\te2 = error;\n\t\t}\n\n\t\tassert.ok(e2);\n\n\t\tdisposable.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}