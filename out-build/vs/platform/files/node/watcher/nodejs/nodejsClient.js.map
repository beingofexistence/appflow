{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/files/node/watcher/nodejs/nodejsClient.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,MAAa,GAAoB,SAAQ,aAAG;QAE3C,YACC,aAAmD,EACnD,YAAwC,EACxC,cAAuB;YAEvB,KAAK,CAAC,aAAa,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;YAEnD,IAAI,CAAC,CAAC,EAAK,CAAC;QACb,CAAC;QAEkB,CAAC,CAAa,WAAgB;YAChD,OAAO,WAAW,CAAC,GAAG,CAAC,IAAI,mBAAG,EAAY,CAAC,CAAC;QAC7C,CAAC;KACD;IAfD,kBAeC","file":"nodejsClient.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IDiskFileChange, ILogMessage, AbstractNonRecursiveWatcherClient, INonRecursiveWatcher } from 'vs/platform/files/common/watcher';\nimport { NodeJSWatcher } from 'vs/platform/files/node/watcher/nodejs/nodejsWatcher';\n\nexport class NodeJSWatcherClient extends AbstractNonRecursiveWatcherClient {\n\n\tconstructor(\n\t\tonFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t) {\n\t\tsuper(onFileChanges, onLogMessage, verboseLogging);\n\n\t\tthis.init();\n\t}\n\n\tprotected override createWatcher(disposables: DisposableStore): INonRecursiveWatcher {\n\t\treturn disposables.add(new NodeJSWatcher());\n\t}\n}\n"]}