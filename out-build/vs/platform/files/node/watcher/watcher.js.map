{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/files/node/watcher/watcher.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAShG,MAAa,IAAiB,SAAQ,eAAG;QAAzC;;YAEkB,MAAC,GAAkB,IAAI,CAAC,CAAC,CAAS,IAAI,oBAAI,EAAW,CAAC,CAAC;YACvD,MAAC,GAAqB,IAAI,CAAC,CAAC,CAAS,IAAI,mBAAG,EAAY,CAAC,CAAC;YAElE,oBAAe,GAAG,aAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAgB,eAAe,EAAE,IAAI,CAAC,CAAC,CAAmB,eAAe,CAAC,CAAC;YAC7G,oBAAe,GAAG,aAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAgB,eAAe,EAAE,IAAI,CAAC,CAAC,CAAmB,eAAe,CAAC,CAAC;YAC7G,eAAU,GAAG,aAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAgB,UAAU,EAAE,IAAI,CAAC,CAAC,CAAmB,UAAU,CAAC,CAAC;QAiCxG,CAAC;QA/BA,KAAK,CAAC,KAAK,CAAC,QAAkC;YAC7C,MAAM,sBAAsB,GAA6B,EAAE,CAAC;YAC5D,MAAM,yBAAyB,GAAgC,EAAE,CAAC;YAElE,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;gBAC/B,IAAI,OAAO,CAAC,SAAS,EAAE;oBACtB,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACrC;qBAAM;oBACN,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACxC;aACD;YAED,MAAM,gBAAQ,CAAC,OAAO,CAAC;gBACtB,IAAI,CAAC,CAAC,CAAgB,KAAK,CAAC,sBAAsB,CAAC;gBACnD,IAAI,CAAC,CAAC,CAAmB,KAAK,CAAC,yBAAyB,CAAC;aACzD,CAAC,CAAC;QACJ,CAAC;QAED,KAAK,CAAC,iBAAiB,CAAC,OAAgB;YACvC,MAAM,gBAAQ,CAAC,OAAO,CAAC;gBACtB,IAAI,CAAC,CAAC,CAAgB,iBAAiB,CAAC,OAAO,CAAC;gBAChD,IAAI,CAAC,CAAC,CAAmB,iBAAiB,CAAC,OAAO,CAAC;aACnD,CAAC,CAAC;QACJ,CAAC;QAED,KAAK,CAAC,IAAI;YACT,MAAM,gBAAQ,CAAC,OAAO,CAAC;gBACtB,IAAI,CAAC,CAAC,CAAgB,IAAI,EAAE;gBAC5B,IAAI,CAAC,CAAC,CAAmB,IAAI,EAAE;aAC/B,CAAC,CAAC;QACJ,CAAC;KACD;IAxCD,oBAwCC","file":"watcher.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { INonRecursiveWatchRequest, IRecursiveWatchRequest, IUniversalWatcher, IUniversalWatchRequest } from 'vs/platform/files/common/watcher';\nimport { Event } from 'vs/base/common/event';\nimport { ParcelWatcher } from 'vs/platform/files/node/watcher/parcel/parcelWatcher';\nimport { NodeJSWatcher } from 'vs/platform/files/node/watcher/nodejs/nodejsWatcher';\nimport { Promises } from 'vs/base/common/async';\n\nexport class UniversalWatcher extends Disposable implements IUniversalWatcher {\n\n\tprivate readonly recursiveWatcher = this._register(new ParcelWatcher());\n\tprivate readonly nonRecursiveWatcher = this._register(new NodeJSWatcher());\n\n\treadonly onDidChangeFile = Event.any(this.recursiveWatcher.onDidChangeFile, this.nonRecursiveWatcher.onDidChangeFile);\n\treadonly onDidLogMessage = Event.any(this.recursiveWatcher.onDidLogMessage, this.nonRecursiveWatcher.onDidLogMessage);\n\treadonly onDidError = Event.any(this.recursiveWatcher.onDidError, this.nonRecursiveWatcher.onDidError);\n\n\tasync watch(requests: IUniversalWatchRequest[]): Promise<void> {\n\t\tconst recursiveWatchRequests: IRecursiveWatchRequest[] = [];\n\t\tconst nonRecursiveWatchRequests: INonRecursiveWatchRequest[] = [];\n\n\t\tfor (const request of requests) {\n\t\t\tif (request.recursive) {\n\t\t\t\trecursiveWatchRequests.push(request);\n\t\t\t} else {\n\t\t\t\tnonRecursiveWatchRequests.push(request);\n\t\t\t}\n\t\t}\n\n\t\tawait Promises.settled([\n\t\t\tthis.recursiveWatcher.watch(recursiveWatchRequests),\n\t\t\tthis.nonRecursiveWatcher.watch(nonRecursiveWatchRequests)\n\t\t]);\n\t}\n\n\tasync setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tawait Promises.settled([\n\t\t\tthis.recursiveWatcher.setVerboseLogging(enabled),\n\t\t\tthis.nonRecursiveWatcher.setVerboseLogging(enabled)\n\t\t]);\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tawait Promises.settled([\n\t\t\tthis.recursiveWatcher.stop(),\n\t\t\tthis.nonRecursiveWatcher.stop()\n\t\t]);\n\t}\n}\n"]}