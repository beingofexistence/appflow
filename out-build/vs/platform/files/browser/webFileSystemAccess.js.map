{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/files/browser/webFileSystemAccess.ts","vs/platform/files/browser/webFileSystemAccess.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAEhG;;;;OAIG;IACH,IAAiB,mBAAmB,CA0BnC;IA1BD,WAAiB,mBAAmB;QAEnC,SAAgB,SAAS,CAAC,GAAiB;YAC1C,IAAI,OAAO,GAAG,EAAE,mBAAmB,KAAK,UAAU,EAAE;gBACnD,OAAO,IAAI,CAAC;aACZ;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QANe,6BAAS,YAMxB,CAAA;QAED,SAAgB,kBAAkB,CAAC,MAAe;YACjD,MAAM,SAAS,GAAG,MAAsC,CAAC;YACzD,IAAI,CAAC,SAAS,EAAE;gBACf,OAAO,KAAK,CAAC;aACb;YAED,OAAO,OAAO,SAAS,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,SAAS,CAAC,eAAe,KAAK,UAAU,IAAI,OAAO,SAAS,CAAC,iBAAiB,KAAK,UAAU,CAAC;QACnJ,CAAC;QAPe,sCAAkB,qBAOjC,CAAA;QAED,SAAgB,sBAAsB,CAAC,MAAwB;YAC9D,OAAO,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC;QAC/B,CAAC;QAFe,0CAAsB,yBAErC,CAAA;QAED,SAAgB,2BAA2B,CAAC,MAAwB;YACnE,OAAO,MAAM,CAAC,IAAI,KAAK,WAAW,CAAC;QACpC,CAAC;QAFe,+CAA2B,8BAE1C,CAAA;IACF,CAAC,EA1BgB,mBAAmB,mCAAnB,mBAAmB,QA0BnC","file":"webFileSystemAccess.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Typings for the https://wicg.github.io/file-system-access\n *\n * Use `supported(window)` to find out if the browser supports this kind of API.\n */\nexport namespace WebFileSystemAccess {\n\n\texport function supported(obj: any & Window): boolean {\n\t\tif (typeof obj?.showDirectoryPicker === 'function') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\texport function isFileSystemHandle(handle: unknown): handle is FileSystemHandle {\n\t\tconst candidate = handle as FileSystemHandle | undefined;\n\t\tif (!candidate) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn typeof candidate.kind === 'string' && typeof candidate.queryPermission === 'function' && typeof candidate.requestPermission === 'function';\n\t}\n\n\texport function isFileSystemFileHandle(handle: FileSystemHandle): handle is FileSystemFileHandle {\n\t\treturn handle.kind === 'file';\n\t}\n\n\texport function isFileSystemDirectoryHandle(handle: FileSystemHandle): handle is FileSystemDirectoryHandle {\n\t\treturn handle.kind === 'directory';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Typings for the https://wicg.github.io/file-system-access\n *\n * Use `supported(window)` to find out if the browser supports this kind of API.\n */\nexport namespace WebFileSystemAccess {\n\n\texport function supported(obj: any & Window): boolean {\n\t\tif (typeof obj?.showDirectoryPicker === 'function') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\texport function isFileSystemHandle(handle: unknown): handle is FileSystemHandle {\n\t\tconst candidate = handle as FileSystemHandle | undefined;\n\t\tif (!candidate) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn typeof candidate.kind === 'string' && typeof candidate.queryPermission === 'function' && typeof candidate.requestPermission === 'function';\n\t}\n\n\texport function isFileSystemFileHandle(handle: FileSystemHandle): handle is FileSystemFileHandle {\n\t\treturn handle.kind === 'file';\n\t}\n\n\texport function isFileSystemDirectoryHandle(handle: FileSystemHandle): handle is FileSystemDirectoryHandle {\n\t\treturn handle.kind === 'directory';\n\t}\n}\n"]}