{"version":3,"sources":["vs/platform/issue/electron-main/issueMainService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IA8BhG,MAAM,0BAA0B,GAAG,kCAAkC,CAAC;IAW/D,IAAM,IAAI,GAAV,MAAM,IAAI;;iBAIQ,MAAC,GAA0B,SAA1B,AAAmC,CAAC;QAQ7D,YACS,CAA4B,EACX,CAA6C,EACzD,CAAgC,EACxB,CAAwC,EACpC,CAA6C,EAClD,CAAwC,EACpC,CAA4C,EAC9C,CAA0C,EAC/C,CAAoC,EACtC,CAAkC,EAC5B,CAAyC;YAVtD,MAAC,GAAD,CAAC,CAA2B;YACM,MAAC,GAAD,CAAC,CAA2B;YACxC,MAAC,GAAD,CAAC,CAAc;YACP,MAAC,GAAD,CAAC,CAAsB;YACnB,MAAC,GAAD,CAAC,CAA2B;YACjC,MAAC,GAAD,CAAC,CAAsB;YACnB,MAAC,GAAD,CAAC,CAA0B;YAC7B,MAAC,GAAD,CAAC,CAAwB;YAC9B,MAAC,GAAD,CAAC,CAAkB;YACrB,MAAC,GAAD,CAAC,CAAgB;YACX,MAAC,GAAD,CAAC,CAAuB;YAjBvD,MAAC,GAA2C,IAAI,CAAC;YACjD,MAAC,GAAiD,IAAI,CAAC;YAEvD,MAAC,GAA6C,IAAI,CAAC;YACnD,MAAC,GAAmD,IAAI,CAAC;YAehE,IAAI,CAAC,CAAC,EAAkB,CAAC;QAC1B,CAAC;QAED,4BAA4B;QAEpB,CAAC;YACR,aAAG,CAAc,EAAE,CAAC,sBAAsB,EAAE,KAAK,EAAC,KAAK,EAAC,EAAE;gBACzD,MAAM,SAAS,GAAG,EAAE,CAAC;gBAErB,IAAI;oBACH,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAA,cAAQ,EAAC,CAAO,EAAE,IAAO,CAAC,EAAE,WAAW,EAAE,MAAM,IAAA,QAAG,EAAW,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;oBAEpG,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,CAAC,CAAsB,oBAAoB,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC7G,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;wBAChC,IAAI,IAAA,iBAAG,EAAqB,IAAI,CAAC,EAAE;4BAClC,SAAS,CAAC,IAAI,CAAC;gCACd,IAAI,EAAE,IAAI,CAAC,QAAQ;gCACnB,WAAW,EAAE,IAAI;6BACjB,CAAC,CAAC;yBACH;6BAAM;4BACN,IAAI,IAAI,CAAC,SAAS,EAAE;gCACnB,SAAS,CAAC,IAAI,CAAC;oCACd,IAAI,EAAE,IAAI,CAAC,QAAQ;oCACnB,WAAW,EAAE,IAAI,CAAC,SAAS;iCAC3B,CAAC,CAAC;6BACH;yBACD;oBACF,CAAC,CAAC,CAAC;iBACH;gBAAC,OAAO,CAAC,EAAE;oBACX,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,6BAA6B,CAAC,EAAE,CAAC,CAAC;iBACxD;gBAED,IAAI,CAAC,CAAC,CAAQ,KAAK,EAAE,8BAA8B,EAAE,SAAS,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;YAEH,aAAG,CAAc,EAAE,CAAC,yBAAyB,EAAE,CAAC,CAAU,EAAE,WAA8C,EAAE,EAAE;gBAC7G,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,WAAW,CAAC;gBAEvC,IAAI,YAAkC,CAAC;gBACvC,QAAQ,IAAI,EAAE;oBACb,KAAK,iBAAiB;wBACrB,YAAY,GAAG,IAAI,CAAC,CAAC,CAA2B;wBAChD,MAAM;oBACP;wBACC,gDAAgD;wBAChD,MAAM,IAAI,KAAK,CAAC,8BAA8B,IAAI,EAAE,CAAC,CAAC;iBACvD;gBAED,YAAY,EAAE,WAAW,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YACxE,CAAC,CAAC,CAAC;YAEH,aAAG,CAAc,EAAE,CAAC,6BAA6B,EAAE,KAAK,CAAC,EAAE;gBAC1D,IAAI,CAAC,CAAC,EAAsB,KAAK,EAAE,CAAC;YACrC,CAAC,CAAC,CAAC;YAEH,aAAG,CAAc,EAAE,CAAC,yBAAyB,EAAE,KAAK,EAAC,KAAK,EAAC,EAAE;gBAC5D,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,CAAC,CAAsB,kBAAkB,EAAE,CAAC;gBAE/E,MAAM,UAAU,GAAuB,EAAE,CAAC;gBAC1C,KAAK,MAAM,MAAM,IAAI,eAAe,CAAC,OAAO,EAAE;oBAC7C,UAAU,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,WAAW,MAAM,CAAC,EAAE,MAAM,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;iBACzE;gBAED,KAAK,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,qBAAI,CAAW,MAAM,EAAE,EAAE;oBACpD,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;iBAC7B;gBAED,IAAI,CAAC,CAAC,CAAQ,KAAK,EAAE,0BAA0B,EAAE,UAAU,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,YAAY;QAEZ,0BAA0B;QAE1B,KAAK,CAAC,YAAY,CAAC,IAAuB;YACzC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAoB;gBAC9B,IAAI,CAAC,CAAC,GAA2B,wBAAa,CAAC,gBAAgB,EAAE,CAAC;gBAClE,IAAI,IAAI,CAAC,CAAC,EAA0B;oBACnC,MAAM,wBAAwB,GAAG,IAAI,eAAG,EAAc,CAAC;oBAEvD,MAAM,4BAA4B,GAAG,wBAAwB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAmB,kBAAkB,EAAoC,CAAC,CAAC;oBACnJ,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAiB,IAAI,CAAC,CAAC,EAA0B,GAAG,EAAE,GAAG,CAAC,CAAC;oBAElF,IAAI,CAAC,CAAC,GAAqB,IAAI,CAAC,CAAC,CAAmB,QAAQ,EAAE,4BAA4B,EAAE;wBAC3F,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe;wBAC5C,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAe,EAAE,IAAgB,CAAC;wBAClD,SAAS,EAAE,IAAI,CAAC,SAAS;wBACzB,WAAW,EAAE,KAAK;qBAClB,EAAE,gBAAgB,CAAC,CAAC;oBAErB,+BAA+B;oBAC/B,4BAA4B,CAAC,MAAM,CAAC;wBACnC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAsB,OAAO;wBAC5C,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAmB,EAAE;wBACrC,OAAO,EAAE,IAAI,CAAC,CAAC;wBACf,IAAI;wBACJ,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAsB,iBAAiB;wBAClE,EAAE,EAAE;4BACH,IAAI,EAAE,IAAA,SAAI,GAAE;4BACZ,IAAI,EAAE,IAAA,SAAI,GAAE;4BACZ,OAAO,EAAE,IAAA,YAAO,GAAE;yBAClB;wBACD,OAAO,EAAP,iBAAO;qBACP,CAAC,CAAC;oBAEH,IAAI,CAAC,CAAC,CAAmB,OAAO,CAC/B,aAAG,CAAQ,YAAY,CAAC,+CAA+C,IAAI,CAAC,CAAC,CAAsB,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAC/I,CAAC;oBAEF,IAAI,CAAC,CAAC,CAAmB,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;wBACzC,IAAI,CAAC,CAAC,GAAqB,IAAI,CAAC;wBAEhC,wBAAwB,CAAC,OAAO,EAAE,CAAC;oBACpC,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,CAAC,CAAyB,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;wBAChD,IAAI,IAAI,CAAC,CAAC,EAAoB;4BAC7B,IAAI,CAAC,CAAC,CAAmB,KAAK,EAAE,CAAC;4BACjC,IAAI,CAAC,CAAC,GAAqB,IAAI,CAAC;4BAEhC,wBAAwB,CAAC,OAAO,EAAE,CAAC;yBACnC;oBACF,CAAC,CAAC,CAAC;iBACH;aACD;YAED,IAAI,IAAI,CAAC,CAAC,EAAoB;gBAC7B,IAAI,CAAC,CAAC,CAAW,IAAI,CAAC,CAAC,CAAmB,CAAC;aAC3C;QACF,CAAC;QAED,KAAK,CAAC,mBAAmB,CAAC,IAAyB;YAClD,IAAI,CAAC,IAAI,CAAC,CAAC,EAAsB;gBAChC,IAAI,CAAC,CAAC,GAA6B,wBAAa,CAAC,gBAAgB,EAAE,CAAC;gBACpE,IAAI,IAAI,CAAC,CAAC,EAA4B;oBACrC,MAAM,0BAA0B,GAAG,IAAI,eAAG,EAAc,CAAC;oBAEzD,MAAM,8BAA8B,GAAG,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAmB,kBAAkB,EAAsC,CAAC,CAAC;oBAEzJ,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAY,OAAO,CAAe,0BAA0B,EAAE,SAAS,CAAC,CAAC;oBACrG,MAAM,QAAQ,GAAG,mBAAmB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAiB,IAAI,CAAC,CAAC,EAA4B,GAAG,EAAE,GAAG,CAAC,CAAC;oBAEzI,IAAI,CAAC,CAAC,GAAuB,IAAI,CAAC,CAAC,CAAmB,QAAQ,EAAE,8BAA8B,EAAE;wBAC/F,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe;wBAC5C,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAiB,EAAE,IAAkB,CAAC;wBACtD,SAAS,EAAE,IAAI,CAAC,SAAS;wBACzB,WAAW,EAAE,IAAI;qBACjB,EAAE,kBAAkB,CAAC,CAAC;oBAEvB,+BAA+B;oBAC/B,8BAA8B,CAAC,MAAM,CAAC;wBACrC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAsB,OAAO;wBAC5C,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAqB,EAAE;wBACvC,OAAO,EAAE,IAAI,CAAC,CAAC;wBACf,IAAI;wBACJ,OAAO,EAAP,iBAAO;qBACP,CAAC,CAAC;oBAEH,IAAI,CAAC,CAAC,CAAqB,OAAO,CACjC,aAAG,CAAQ,YAAY,CAAC,2DAA2D,IAAI,CAAC,CAAC,CAAsB,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAC3J,CAAC;oBAEF,IAAI,CAAC,CAAC,CAAqB,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;wBAC3C,IAAI,CAAC,CAAC,GAAuB,IAAI,CAAC;wBAClC,0BAA0B,CAAC,OAAO,EAAE,CAAC;oBACtC,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,CAAC,CAA2B,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;wBACjD,IAAI,IAAI,CAAC,CAAC,EAAsB;4BAC/B,IAAI,CAAC,CAAC,CAAqB,KAAK,EAAE,CAAC;4BACnC,IAAI,CAAC,CAAC,GAAuB,IAAI,CAAC;4BAElC,0BAA0B,CAAC,OAAO,EAAE,CAAC;yBACrC;oBACF,CAAC,CAAC,CAAC;oBAEH,MAAM,UAAU,GAAG,GAAG,EAAE;wBACvB,IAAI,CAAC,IAAI,CAAC,CAAC,EAAsB;4BAChC,OAAO;yBACP;wBACD,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAqB,OAAO,EAAE,CAAC;wBAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAqB,WAAW,EAAE,CAAC;wBAC1D,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;4BACvB,OAAO;yBACP;wBACD,MAAM,KAAK,GAAiB;4BAC3B,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;4BACd,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;4BACf,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;4BACd,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;yBACd,CAAC;wBACF,IAAI,CAAC,CAAC,CAAY,OAAO,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;oBAC9D,CAAC,CAAC;oBAEF,IAAI,CAAC,CAAC,CAAqB,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;oBACnD,IAAI,CAAC,CAAC,CAAqB,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;iBACrD;aACD;YAED,IAAI,IAAI,CAAC,CAAC,EAAsB;gBAC/B,IAAI,CAAC,CAAC,CAAW,IAAI,CAAC,CAAC,CAAqB,CAAC;aAC7C;QACF,CAAC;QAED,KAAK,CAAC,WAAW;YAChB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAsB,IAAI,CAAC,KAAK,EAAE;gBAC5C,OAAO,CAAC,4BAA4B;aACpC;YAED,MAAM,IAAI,GAAG,MAAM,yBAAc,CAAC,aAAa,CAAC,GAAG,IAAA,aAAG,EAAQ,IAAI,CAAC,CAAC,CAAsB,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAc,eAAe,CAAC,YAAY,CAAC,CAAC;YAE7J,iCAAiC;YACjC,MAAM,IAAI,CAAC,CAAC,CAAiB,cAAc,CAAC;gBAC3C,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,IAAA,cAAQ,EAAC,CAAe,EAAE,IAAqC,CAAC;gBACzE,MAAM,EAAE,IAAA,cAAQ,EAAC,CAAc,EAAE,IAAqE,EAAE,IAAI,CAAC;gBAC7G,OAAO,EAAE,CAAC,IAAA,cAAQ,EAAC,CAAuD,CAArD,CAAuD,EAApD,EAAE,AAAwD,CAAC,CAAC,QAAhD,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;aACxE,EAAE,wBAAa,CAAC,gBAAgB,EAAE,IAAI,SAAS,CAAC,CAAC;YAElD,wBAAwB;YACxB,IAAI,CAAC,CAAC,CAAqB,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC9D,CAAC;QAED,KAAK,CAAC,eAAe;YACpB,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAsB,kBAAkB,EAAE,EAAE,IAAI,CAAC,CAAC,CAAsB,oBAAoB,CAAC,EAAE,gBAAgB,EAAE,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YAEjN,OAAO,IAAI,CAAC,CAAC,CAAkB,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QACjE,CAAC;QAED,YAAY;QAEZ,uCAAuC;QAEvC,KAAK,CAAC,cAAc;YACnB,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAsB,kBAAkB,EAAE,EAAE,IAAI,CAAC,CAAC,CAAsB,oBAAoB,CAAC,EAAE,gBAAgB,EAAE,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YACjN,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,CAAC,CAAkB,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;YAC1E,OAAO,GAAG,CAAC;QACZ,CAAC;QAED,KAAK,CAAC,mBAAmB;YACxB,IAAI;gBACH,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAsB,kBAAkB,EAAE,EAAE,IAAI,CAAC,CAAC,CAAsB,oBAAoB,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC/M,OAAO,MAAM,IAAI,CAAC,CAAC,CAAkB,kBAAkB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;aAC1E;YAAC,OAAO,KAAK,EAAE;gBACf,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,kCAAkC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;gBAExE,MAAM,KAAK,CAAC;aACZ;QACF,CAAC;QAED,KAAK,CAAC,6BAA6B;YAClC,IAAI,IAAI,CAAC,CAAC,EAA0B;gBACnC,IAAI;oBACH,MAAM,IAAI,CAAC,CAAC,CAAqB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAyB,EAAE,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;iBACxG;gBAAC,OAAO,KAAK,EAAE;oBACf,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACD;QACF,CAAC;QAED,KAAK,CAAC,uBAAuB;YAC5B,IAAI,IAAI,CAAC,CAAC,EAAoB;gBAC7B,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,CAAC,CAAC,CAAiB,cAAc,CAAC;oBAChE,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,IAAA,cAAQ,EAAC,CAA2B,EAAE,IAA2E,CAAC;oBAC3H,OAAO,EAAE;wBACR,IAAA,cAAQ,EAAC,CAAkD,CAAhD,CAAkD,EAA/C,EAAE,AAAoD,CAAC,IAAhD,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;wBACzD,IAAA,cAAQ,EAAC,CAAQ,EAAE,IAAQ,CAAC;qBAC5B;iBACD,EAAE,IAAI,CAAC,CAAC,CAAmB,CAAC;gBAE7B,IAAI,QAAQ,KAAK,CAAC,EAAE;oBACnB,IAAI,IAAI,CAAC,CAAC,EAAoB;wBAC7B,IAAI,CAAC,CAAC,CAAmB,OAAO,EAAE,CAAC;wBACnC,IAAI,CAAC,CAAC,GAAqB,IAAI,CAAC;qBAChC;iBACD;aACD;QACF,CAAC;QAED,KAAK,CAAC,oBAAoB;YACzB,IAAI,IAAI,CAAC,CAAC,EAAoB;gBAC7B,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,CAAC,CAAC,CAAiB,cAAc,CAAC;oBAChE,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,IAAA,cAAQ,EAAC,CAA+B,EAAE,IAAyJ,CAAC;oBAC7M,OAAO,EAAE;wBACR,IAAA,cAAQ,EAAC,EAAE,AAA+C,EAAE,CAA9C,EAAE,CAAkD,CAAC,EAA/C,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;wBACxD,IAAA,cAAQ,EAAC,EAAQ,EAAE,IAAQ,CAAC;qBAC5B;iBACD,EAAE,IAAI,CAAC,CAAC,CAAmB,CAAC;gBAE7B,OAAO,QAAQ,KAAK,CAAC,CAAC;aACtB;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QAED,KAAK,CAAC,oBAAoB,CAAC,WAAmB;YAC7C,IAAI,CAAC,IAAI,CAAC,CAAC,EAA0B;gBACpC,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;aACvD;YACD,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAkB,aAAa,CAAC,IAAI,CAAC,CAAC,CAAyB,EAAE,CAAC,CAAC;YACxF,IAAI,CAAC,MAAM,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;aACpC;YACD,MAAM,YAAY,GAAG,+CAA+C,MAAM,CAAC,EAAE,EAAE,CAAC;YAChF,OAAO,gBAAQ,CAAC,aAAa,CAAM,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;gBAE5D,MAAM,GAAG,GAAG,IAAI,kBAAG,EAAsB,CAAC;gBAC1C,MAAM,CAAC,aAAa,CAAC,sCAAsC,EAAE,GAAG,CAAC,KAAK,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE,CAAC,CAAC;gBAEvG,aAAG,CAAc,IAAI,CAAC,YAAY,EAAE,CAAC,CAAU,EAAE,IAAY,EAAE,EAAE;oBAChE,OAAO,CAAC,SAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC;gBAEH,IAAI;oBACH,MAAM,IAAA,WAAG,EAAK,IAAI,CAAC,CAAC;oBACpB,GAAG,CAAC,MAAM,EAAE,CAAC;oBACb,MAAM,CAAC,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC,CAAC;iBAC9D;wBAAS;oBACT,aAAG,CAAc,aAAa,CAAC,YAAY,CAAC,CAAC;iBAC7C;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,KAAK,CAAC,cAAc;YACnB,IAAI,CAAC,CAAC,EAAoB,KAAK,EAAE,CAAC;QACnC,CAAC;QAED,KAAK,CAAC,oBAAoB;YACzB,IAAI,CAAC,CAAC,EAAsB,KAAK,EAAE,CAAC;QACrC,CAAC;QAED,YAAY;QAEJ,CAAC,CAAW,MAAqB;YACxC,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;gBACzB,MAAM,CAAC,OAAO,EAAE,CAAC;aACjB;YAED,MAAM,CAAC,KAAK,EAAE,CAAC;QAChB,CAAC;QAEO,CAAC,CAAQ,KAAmB,EAAE,OAAe,EAAE,GAAG,IAAe;YACxE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE;gBAChC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;aACpC;QACF,CAAC;QAEO,CAAC,CAAsB,QAAsB,EAAE,YAA8B,EAAE,OAA8B,EAAE,UAAkB;YACxI,MAAM,MAAM,GAAG,IAAI,wBAAa,CAAC;gBAChC,UAAU,EAAE,KAAK;gBACjB,WAAW,EAAE,KAAK;gBAClB,SAAS,EAAE,IAAI;gBACf,KAAK,EAAE,QAAQ,CAAC,KAAK;gBACrB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,GAAG;gBACb,SAAS,EAAE,GAAG;gBACd,CAAC,EAAE,QAAQ,CAAC,CAAC;gBACb,CAAC,EAAE,QAAQ,CAAC,CAAC;gBACb,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,MAAI,CAAa,CAAC;gBAC9D,cAAc,EAAE;oBACf,OAAO,EAAE,aAAG,CAAQ,SAAS,CAAC,mDAAmD,CAAC,CAAC,MAAM;oBACzF,mBAAmB,EAAE,CAAC,0BAA0B,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC;oBACnF,cAAc,EAAE,IAAI,CAAC,CAAC,CAAsB,YAAY,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,MAAM;oBACrF,YAAY,EAAE,KAAK;oBACnB,UAAU,EAAE,KAAK;oBACjB,UAAU,EAAE,IAAA,YAAG,EAAmB,OAAO,CAAC,SAAS,CAAC;oBACpD,OAAO,EAAE,IAAI;iBACb;gBACD,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,oBAAoB,EAAE,IAAI;aAC6C,CAAC,CAAC;YAE1E,MAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAEnC,OAAO,MAAM,CAAC;QACf,CAAC;QAEO,CAAC,CAAiB,YAA2B,EAAE,YAAoB,EAAE,aAAqB;YAEjG,2EAA2E;YAC3E,IAAI,YAAiC,CAAC;YACtC,MAAM,QAAQ,GAAG,iBAAM,CAAC,cAAc,EAAE,CAAC;YAEzC,iBAAiB;YACjB,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1B,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;aAC3B;YAED,gBAAgB;iBACX;gBAEJ,gGAAgG;gBAChG,IAAI,aAAE,EAAW;oBAChB,MAAM,WAAW,GAAG,iBAAM,CAAC,oBAAoB,EAAE,CAAC;oBAClD,YAAY,GAAG,iBAAM,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;iBAC1D;gBAED,uEAAuE;gBACvE,IAAI,CAAC,YAAY,IAAI,YAAY,EAAE;oBAClC,YAAY,GAAG,iBAAM,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,CAAC;iBACnE;gBAED,+CAA+C;gBAC/C,IAAI,CAAC,YAAY,EAAE;oBAClB,YAAY,GAAG,iBAAM,CAAC,iBAAiB,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;iBACzD;aACD;YAED,MAAM,aAAa,GAAG,YAAY,CAAC,MAAM,CAAC;YAE1C,MAAM,KAAK,GAAuB;gBACjC,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,aAAa;gBACrB,CAAC,EAAE,aAAa,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC;gBACnE,CAAC,EAAE,aAAa,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC;aACrE,CAAC;YAEF,IAAI,aAAa,CAAC,KAAK,GAAG,CAAC,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,8DAA8D,EAAE;gBACvH,IAAI,KAAK,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,EAAE;oBAC9B,KAAK,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,4DAA4D;iBACvF;gBAED,IAAI,KAAK,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,EAAE;oBAC9B,KAAK,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,2DAA2D;iBACtF;gBAED,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,EAAE;oBACtD,KAAK,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,6DAA6D;iBACxF;gBAED,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,CAAC,EAAE;oBACvD,KAAK,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,8DAA8D;iBACzF;gBAED,IAAI,KAAK,CAAC,KAAM,GAAG,aAAa,CAAC,KAAK,EAAE;oBACvC,KAAK,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,qDAAqD;iBACxF;gBAED,IAAI,KAAK,CAAC,MAAO,GAAG,aAAa,CAAC,MAAM,EAAE;oBACzC,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,sDAAsD;iBAC3F;aACD;YAED,OAAO,KAAK,CAAC;QACd,CAAC;;IAzdW,oBAAI;mBAAJ,IAAI;QAcd,WAAA,6BAAI,CAAA;QACJ,WAAA,SAAG,CAAA;QACH,WAAA,iBAAG,CAAA;QACH,WAAA,6BAAI,CAAA;QACJ,WAAA,wBAAI,CAAA;QACJ,WAAA,4BAAI,CAAA;QACJ,WAAA,eAAI,CAAA;QACJ,WAAA,oBAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,YAAA,cAAI,CAAA;OAvBM,IAAI,CA0dhB;IAED,SAAS,mBAAmB,CAAC,GAAY;QACxC,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;YAC5C,OAAO,KAAK,CAAC;SACb;QACD,OAAO,CACN,GAAG,IAAI,GAAG;YACV,GAAG,IAAI,GAAG;YACV,OAAO,IAAI,GAAG;YACd,QAAQ,IAAI,GAAG,CACf,CAAC;IACH,CAAC","file":"issueMainService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserWindow, BrowserWindowConstructorOptions, contentTracing, Display, IpcMainEvent, screen } from 'electron';\nimport { validatedIpcMain } from 'vs/base/parts/ipc/electron-main/ipcMain';\nimport { arch, release, type } from 'os';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport { IProcessEnvironment, isMacintosh } from 'vs/base/common/platform';\nimport { listProcesses } from 'vs/base/node/ps';\nimport { localize } from 'vs/nls';\nimport { IDiagnosticsService, isRemoteDiagnosticError, PerformanceInfo, SystemInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { IDiagnosticsMainService } from 'vs/platform/diagnostics/electron-main/diagnosticsMainService';\nimport { IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { IIssueMainService, IssueReporterData, IssueReporterWindowConfiguration, ProcessExplorerData, ProcessExplorerWindowConfiguration } from 'vs/platform/issue/common/issue';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INativeHostMainService } from 'vs/platform/native/electron-main/nativeHostMainService';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IIPCObjectUrl, IProtocolMainService } from 'vs/platform/protocol/electron-main/protocol';\nimport { zoomLevelToZoomFactor } from 'vs/platform/window/common/window';\nimport { IWindowState } from 'vs/platform/window/electron-main/window';\nimport { randomPath } from 'vs/base/common/extpath';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { UtilityProcess } from 'vs/platform/utilityProcess/electron-main/utilityProcess';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { IWindowsMainService } from 'vs/platform/windows/electron-main/windows';\nimport { Promises, timeout } from 'vs/base/common/async';\n\nconst processExplorerWindowState = 'issue.processExplorerWindowState';\n\ninterface IBrowserWindowOptions {\n\tbackgroundColor: string | undefined;\n\ttitle: string;\n\tzoomLevel: number;\n\talwaysOnTop: boolean;\n}\n\ntype IStrictWindowState = Required<Pick<IWindowState, 'x' | 'y' | 'width' | 'height'>>;\n\nexport class IssueMainService implements IIssueMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly DEFAULT_BACKGROUND_COLOR = '#1E1E1E';\n\n\tprivate issueReporterWindow: BrowserWindow | null = null;\n\tprivate issueReporterParentWindow: BrowserWindow | null = null;\n\n\tprivate processExplorerWindow: BrowserWindow | null = null;\n\tprivate processExplorerParentWindow: BrowserWindow | null = null;\n\n\tconstructor(\n\t\tprivate userEnv: IProcessEnvironment,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IDiagnosticsService private readonly diagnosticsService: IDiagnosticsService,\n\t\t@IDiagnosticsMainService private readonly diagnosticsMainService: IDiagnosticsMainService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@INativeHostMainService private readonly nativeHostMainService: INativeHostMainService,\n\t\t@IProtocolMainService private readonly protocolMainService: IProtocolMainService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IStateService private readonly stateService: IStateService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t) {\n\t\tthis.registerListeners();\n\t}\n\n\t//#region Register Listeners\n\n\tprivate registerListeners(): void {\n\t\tvalidatedIpcMain.on('vscode:listProcesses', async event => {\n\t\t\tconst processes = [];\n\n\t\t\ttry {\n\t\t\t\tprocesses.push({ name: localize('local', \"Local\"), rootProcess: await listProcesses(process.pid) });\n\n\t\t\t\tconst remoteDiagnostics = await this.diagnosticsMainService.getRemoteDiagnostics({ includeProcesses: true });\n\t\t\t\tremoteDiagnostics.forEach(data => {\n\t\t\t\t\tif (isRemoteDiagnosticError(data)) {\n\t\t\t\t\t\tprocesses.push({\n\t\t\t\t\t\t\tname: data.hostName,\n\t\t\t\t\t\t\trootProcess: data\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (data.processes) {\n\t\t\t\t\t\t\tprocesses.push({\n\t\t\t\t\t\t\t\tname: data.hostName,\n\t\t\t\t\t\t\t\trootProcess: data.processes\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(`Listing processes failed: ${e}`);\n\t\t\t}\n\n\t\t\tthis.safeSend(event, 'vscode:listProcessesResponse', processes);\n\t\t});\n\n\t\tvalidatedIpcMain.on('vscode:workbenchCommand', (_: unknown, commandInfo: { id: any; from: any; args: any }) => {\n\t\t\tconst { id, from, args } = commandInfo;\n\n\t\t\tlet parentWindow: BrowserWindow | null;\n\t\t\tswitch (from) {\n\t\t\t\tcase 'processExplorer':\n\t\t\t\t\tparentWindow = this.processExplorerParentWindow;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// The issue reporter does not use this anymore.\n\t\t\t\t\tthrow new Error(`Unexpected command source: ${from}`);\n\t\t\t}\n\n\t\t\tparentWindow?.webContents.send('vscode:runAction', { id, from, args });\n\t\t});\n\n\t\tvalidatedIpcMain.on('vscode:closeProcessExplorer', event => {\n\t\t\tthis.processExplorerWindow?.close();\n\t\t});\n\n\t\tvalidatedIpcMain.on('vscode:pidToNameRequest', async event => {\n\t\t\tconst mainProcessInfo = await this.diagnosticsMainService.getMainDiagnostics();\n\n\t\t\tconst pidToNames: [number, string][] = [];\n\t\t\tfor (const window of mainProcessInfo.windows) {\n\t\t\t\tpidToNames.push([window.pid, `window [${window.id}] (${window.title})`]);\n\t\t\t}\n\n\t\t\tfor (const { pid, name } of UtilityProcess.getAll()) {\n\t\t\t\tpidToNames.push([pid, name]);\n\t\t\t}\n\n\t\t\tthis.safeSend(event, 'vscode:pidToNameResponse', pidToNames);\n\t\t});\n\t}\n\n\t//#endregion\n\n\t//#region Used by renderer\n\n\tasync openReporter(data: IssueReporterData): Promise<void> {\n\t\tif (!this.issueReporterWindow) {\n\t\t\tthis.issueReporterParentWindow = BrowserWindow.getFocusedWindow();\n\t\t\tif (this.issueReporterParentWindow) {\n\t\t\t\tconst issueReporterDisposables = new DisposableStore();\n\n\t\t\t\tconst issueReporterWindowConfigUrl = issueReporterDisposables.add(this.protocolMainService.createIPCObjectUrl<IssueReporterWindowConfiguration>());\n\t\t\t\tconst position = this.getWindowPosition(this.issueReporterParentWindow, 700, 800);\n\n\t\t\t\tthis.issueReporterWindow = this.createBrowserWindow(position, issueReporterWindowConfigUrl, {\n\t\t\t\t\tbackgroundColor: data.styles.backgroundColor,\n\t\t\t\t\ttitle: localize('issueReporter', \"Issue Reporter\"),\n\t\t\t\t\tzoomLevel: data.zoomLevel,\n\t\t\t\t\talwaysOnTop: false\n\t\t\t\t}, 'issue-reporter');\n\n\t\t\t\t// Store into config object URL\n\t\t\t\tissueReporterWindowConfigUrl.update({\n\t\t\t\t\tappRoot: this.environmentMainService.appRoot,\n\t\t\t\t\twindowId: this.issueReporterWindow.id,\n\t\t\t\t\tuserEnv: this.userEnv,\n\t\t\t\t\tdata,\n\t\t\t\t\tdisableExtensions: !!this.environmentMainService.disableExtensions,\n\t\t\t\t\tos: {\n\t\t\t\t\t\ttype: type(),\n\t\t\t\t\t\tarch: arch(),\n\t\t\t\t\t\trelease: release(),\n\t\t\t\t\t},\n\t\t\t\t\tproduct\n\t\t\t\t});\n\n\t\t\t\tthis.issueReporterWindow.loadURL(\n\t\t\t\t\tFileAccess.asBrowserUri(`vs/code/electron-sandbox/issue/issueReporter${this.environmentMainService.isBuilt ? '' : '-dev'}.html`).toString(true)\n\t\t\t\t);\n\n\t\t\t\tthis.issueReporterWindow.on('close', () => {\n\t\t\t\t\tthis.issueReporterWindow = null;\n\n\t\t\t\t\tissueReporterDisposables.dispose();\n\t\t\t\t});\n\n\t\t\t\tthis.issueReporterParentWindow.on('closed', () => {\n\t\t\t\t\tif (this.issueReporterWindow) {\n\t\t\t\t\t\tthis.issueReporterWindow.close();\n\t\t\t\t\t\tthis.issueReporterWindow = null;\n\n\t\t\t\t\t\tissueReporterDisposables.dispose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (this.issueReporterWindow) {\n\t\t\tthis.focusWindow(this.issueReporterWindow);\n\t\t}\n\t}\n\n\tasync openProcessExplorer(data: ProcessExplorerData): Promise<void> {\n\t\tif (!this.processExplorerWindow) {\n\t\t\tthis.processExplorerParentWindow = BrowserWindow.getFocusedWindow();\n\t\t\tif (this.processExplorerParentWindow) {\n\t\t\t\tconst processExplorerDisposables = new DisposableStore();\n\n\t\t\t\tconst processExplorerWindowConfigUrl = processExplorerDisposables.add(this.protocolMainService.createIPCObjectUrl<ProcessExplorerWindowConfiguration>());\n\n\t\t\t\tconst savedPosition = this.stateService.getItem<IWindowState>(processExplorerWindowState, undefined);\n\t\t\t\tconst position = isStrictWindowState(savedPosition) ? savedPosition : this.getWindowPosition(this.processExplorerParentWindow, 800, 500);\n\n\t\t\t\tthis.processExplorerWindow = this.createBrowserWindow(position, processExplorerWindowConfigUrl, {\n\t\t\t\t\tbackgroundColor: data.styles.backgroundColor,\n\t\t\t\t\ttitle: localize('processExplorer', \"Process Explorer\"),\n\t\t\t\t\tzoomLevel: data.zoomLevel,\n\t\t\t\t\talwaysOnTop: true\n\t\t\t\t}, 'process-explorer');\n\n\t\t\t\t// Store into config object URL\n\t\t\t\tprocessExplorerWindowConfigUrl.update({\n\t\t\t\t\tappRoot: this.environmentMainService.appRoot,\n\t\t\t\t\twindowId: this.processExplorerWindow.id,\n\t\t\t\t\tuserEnv: this.userEnv,\n\t\t\t\t\tdata,\n\t\t\t\t\tproduct\n\t\t\t\t});\n\n\t\t\t\tthis.processExplorerWindow.loadURL(\n\t\t\t\t\tFileAccess.asBrowserUri(`vs/code/electron-sandbox/processExplorer/processExplorer${this.environmentMainService.isBuilt ? '' : '-dev'}.html`).toString(true)\n\t\t\t\t);\n\n\t\t\t\tthis.processExplorerWindow.on('close', () => {\n\t\t\t\t\tthis.processExplorerWindow = null;\n\t\t\t\t\tprocessExplorerDisposables.dispose();\n\t\t\t\t});\n\n\t\t\t\tthis.processExplorerParentWindow.on('close', () => {\n\t\t\t\t\tif (this.processExplorerWindow) {\n\t\t\t\t\t\tthis.processExplorerWindow.close();\n\t\t\t\t\t\tthis.processExplorerWindow = null;\n\n\t\t\t\t\t\tprocessExplorerDisposables.dispose();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tconst storeState = () => {\n\t\t\t\t\tif (!this.processExplorerWindow) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst size = this.processExplorerWindow.getSize();\n\t\t\t\t\tconst position = this.processExplorerWindow.getPosition();\n\t\t\t\t\tif (!size || !position) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst state: IWindowState = {\n\t\t\t\t\t\twidth: size[0],\n\t\t\t\t\t\theight: size[1],\n\t\t\t\t\t\tx: position[0],\n\t\t\t\t\t\ty: position[1]\n\t\t\t\t\t};\n\t\t\t\t\tthis.stateService.setItem(processExplorerWindowState, state);\n\t\t\t\t};\n\n\t\t\t\tthis.processExplorerWindow.on('moved', storeState);\n\t\t\t\tthis.processExplorerWindow.on('resized', storeState);\n\t\t\t}\n\t\t}\n\n\t\tif (this.processExplorerWindow) {\n\t\t\tthis.focusWindow(this.processExplorerWindow);\n\t\t}\n\t}\n\n\tasync stopTracing(): Promise<void> {\n\t\tif (!this.environmentMainService.args.trace) {\n\t\t\treturn; // requires tracing to be on\n\t\t}\n\n\t\tconst path = await contentTracing.stopRecording(`${randomPath(this.environmentMainService.userHome.fsPath, this.productService.applicationName)}.trace.txt`);\n\n\t\t// Inform user to report an issue\n\t\tawait this.dialogMainService.showMessageBox({\n\t\t\ttype: 'info',\n\t\t\tmessage: localize('trace.message', \"Successfully created the trace file\"),\n\t\t\tdetail: localize('trace.detail', \"Please create an issue and manually attach the following file:\\n{0}\", path),\n\t\t\tbuttons: [localize({ key: 'trace.ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\")],\n\t\t}, BrowserWindow.getFocusedWindow() ?? undefined);\n\n\t\t// Show item in explorer\n\t\tthis.nativeHostMainService.showItemInFolder(undefined, path);\n\t}\n\n\tasync getSystemStatus(): Promise<string> {\n\t\tconst [info, remoteData] = await Promise.all([this.diagnosticsMainService.getMainDiagnostics(), this.diagnosticsMainService.getRemoteDiagnostics({ includeProcesses: false, includeWorkspaceMetadata: false })]);\n\n\t\treturn this.diagnosticsService.getDiagnostics(info, remoteData);\n\t}\n\n\t//#endregion\n\n\t//#region used by issue reporter window\n\n\tasync $getSystemInfo(): Promise<SystemInfo> {\n\t\tconst [info, remoteData] = await Promise.all([this.diagnosticsMainService.getMainDiagnostics(), this.diagnosticsMainService.getRemoteDiagnostics({ includeProcesses: false, includeWorkspaceMetadata: false })]);\n\t\tconst msg = await this.diagnosticsService.getSystemInfo(info, remoteData);\n\t\treturn msg;\n\t}\n\n\tasync $getPerformanceInfo(): Promise<PerformanceInfo> {\n\t\ttry {\n\t\t\tconst [info, remoteData] = await Promise.all([this.diagnosticsMainService.getMainDiagnostics(), this.diagnosticsMainService.getRemoteDiagnostics({ includeProcesses: true, includeWorkspaceMetadata: true })]);\n\t\t\treturn await this.diagnosticsService.getPerformanceInfo(info, remoteData);\n\t\t} catch (error) {\n\t\t\tthis.logService.warn('issueService#getPerformanceInfo ', error.message);\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync $reloadWithExtensionsDisabled(): Promise<void> {\n\t\tif (this.issueReporterParentWindow) {\n\t\t\ttry {\n\t\t\t\tawait this.nativeHostMainService.reload(this.issueReporterParentWindow.id, { disableExtensions: true });\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync $showConfirmCloseDialog(): Promise<void> {\n\t\tif (this.issueReporterWindow) {\n\t\t\tconst { response } = await this.dialogMainService.showMessageBox({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: localize('confirmCloseIssueReporter', \"Your input will not be saved. Are you sure you want to close this window?\"),\n\t\t\t\tbuttons: [\n\t\t\t\t\tlocalize({ key: 'yes', comment: ['&& denotes a mnemonic'] }, \"&&Yes\"),\n\t\t\t\t\tlocalize('cancel', \"Cancel\")\n\t\t\t\t]\n\t\t\t}, this.issueReporterWindow);\n\n\t\t\tif (response === 0) {\n\t\t\t\tif (this.issueReporterWindow) {\n\t\t\t\t\tthis.issueReporterWindow.destroy();\n\t\t\t\t\tthis.issueReporterWindow = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync $showClipboardDialog(): Promise<boolean> {\n\t\tif (this.issueReporterWindow) {\n\t\t\tconst { response } = await this.dialogMainService.showMessageBox({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: localize('issueReporterWriteToClipboard', \"There is too much data to send to GitHub directly. The data will be copied to the clipboard, please paste it into the GitHub issue page that is opened.\"),\n\t\t\t\tbuttons: [\n\t\t\t\t\tlocalize({ key: 'ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\"),\n\t\t\t\t\tlocalize('cancel', \"Cancel\")\n\t\t\t\t]\n\t\t\t}, this.issueReporterWindow);\n\n\t\t\treturn response === 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync $getIssueReporterUri(extensionId: string): Promise<URI> {\n\t\tif (!this.issueReporterParentWindow) {\n\t\t\tthrow new Error('Issue reporter window not available');\n\t\t}\n\t\tconst window = this.windowsMainService.getWindowById(this.issueReporterParentWindow.id);\n\t\tif (!window) {\n\t\t\tthrow new Error('Window not found');\n\t\t}\n\t\tconst replyChannel = `vscode:triggerIssueUriRequestHandlerResponse${window.id}`;\n\t\treturn Promises.withAsyncBody<URI>(async (resolve, reject) => {\n\n\t\t\tconst cts = new CancellationTokenSource();\n\t\t\twindow.sendWhenReady('vscode:triggerIssueUriRequestHandler', cts.token, { replyChannel, extensionId });\n\n\t\t\tvalidatedIpcMain.once(replyChannel, (_: unknown, data: string) => {\n\t\t\t\tresolve(URI.parse(data));\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\tawait timeout(5000);\n\t\t\t\tcts.cancel();\n\t\t\t\treject(new Error('Timed out waiting for issue reporter URI'));\n\t\t\t} finally {\n\t\t\t\tvalidatedIpcMain.removeHandler(replyChannel);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync $closeReporter(): Promise<void> {\n\t\tthis.issueReporterWindow?.close();\n\t}\n\n\tasync closeProcessExplorer(): Promise<void> {\n\t\tthis.processExplorerWindow?.close();\n\t}\n\n\t//#endregion\n\n\tprivate focusWindow(window: BrowserWindow): void {\n\t\tif (window.isMinimized()) {\n\t\t\twindow.restore();\n\t\t}\n\n\t\twindow.focus();\n\t}\n\n\tprivate safeSend(event: IpcMainEvent, channel: string, ...args: unknown[]): void {\n\t\tif (!event.sender.isDestroyed()) {\n\t\t\tevent.sender.send(channel, ...args);\n\t\t}\n\t}\n\n\tprivate createBrowserWindow<T>(position: IWindowState, ipcObjectUrl: IIPCObjectUrl<T>, options: IBrowserWindowOptions, windowKind: string): BrowserWindow {\n\t\tconst window = new BrowserWindow({\n\t\t\tfullscreen: false,\n\t\t\tskipTaskbar: false,\n\t\t\tresizable: true,\n\t\t\twidth: position.width,\n\t\t\theight: position.height,\n\t\t\tminWidth: 300,\n\t\t\tminHeight: 200,\n\t\t\tx: position.x,\n\t\t\ty: position.y,\n\t\t\ttitle: options.title,\n\t\t\tbackgroundColor: options.backgroundColor || IssueMainService.DEFAULT_BACKGROUND_COLOR,\n\t\t\twebPreferences: {\n\t\t\t\tpreload: FileAccess.asFileUri('vs/base/parts/sandbox/electron-sandbox/preload.js').fsPath,\n\t\t\t\tadditionalArguments: [`--vscode-window-config=${ipcObjectUrl.resource.toString()}`],\n\t\t\t\tv8CacheOptions: this.environmentMainService.useCodeCache ? 'bypassHeatCheck' : 'none',\n\t\t\t\tenableWebSQL: false,\n\t\t\t\tspellcheck: false,\n\t\t\t\tzoomFactor: zoomLevelToZoomFactor(options.zoomLevel),\n\t\t\t\tsandbox: true\n\t\t\t},\n\t\t\talwaysOnTop: options.alwaysOnTop,\n\t\t\texperimentalDarkMode: true\n\t\t} as BrowserWindowConstructorOptions & { experimentalDarkMode: boolean });\n\n\t\twindow.setMenuBarVisibility(false);\n\n\t\treturn window;\n\t}\n\n\tprivate getWindowPosition(parentWindow: BrowserWindow, defaultWidth: number, defaultHeight: number): IStrictWindowState {\n\n\t\t// We want the new window to open on the same display that the parent is in\n\t\tlet displayToUse: Display | undefined;\n\t\tconst displays = screen.getAllDisplays();\n\n\t\t// Single Display\n\t\tif (displays.length === 1) {\n\t\t\tdisplayToUse = displays[0];\n\t\t}\n\n\t\t// Multi Display\n\t\telse {\n\n\t\t\t// on mac there is 1 menu per window so we need to use the monitor where the cursor currently is\n\t\t\tif (isMacintosh) {\n\t\t\t\tconst cursorPoint = screen.getCursorScreenPoint();\n\t\t\t\tdisplayToUse = screen.getDisplayNearestPoint(cursorPoint);\n\t\t\t}\n\n\t\t\t// if we have a last active window, use that display for the new window\n\t\t\tif (!displayToUse && parentWindow) {\n\t\t\t\tdisplayToUse = screen.getDisplayMatching(parentWindow.getBounds());\n\t\t\t}\n\n\t\t\t// fallback to primary display or first display\n\t\t\tif (!displayToUse) {\n\t\t\t\tdisplayToUse = screen.getPrimaryDisplay() || displays[0];\n\t\t\t}\n\t\t}\n\n\t\tconst displayBounds = displayToUse.bounds;\n\n\t\tconst state: IStrictWindowState = {\n\t\t\twidth: defaultWidth,\n\t\t\theight: defaultHeight,\n\t\t\tx: displayBounds.x + (displayBounds.width / 2) - (defaultWidth / 2),\n\t\t\ty: displayBounds.y + (displayBounds.height / 2) - (defaultHeight / 2)\n\t\t};\n\n\t\tif (displayBounds.width > 0 && displayBounds.height > 0 /* Linux X11 sessions sometimes report wrong display bounds */) {\n\t\t\tif (state.x < displayBounds.x) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the left\n\t\t\t}\n\n\t\t\tif (state.y < displayBounds.y) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the top\n\t\t\t}\n\n\t\t\tif (state.x > (displayBounds.x + displayBounds.width)) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the right\n\t\t\t}\n\n\t\t\tif (state.y > (displayBounds.y + displayBounds.height)) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the bottom\n\t\t\t}\n\n\t\t\tif (state.width! > displayBounds.width) {\n\t\t\t\tstate.width = displayBounds.width; // prevent window from exceeding display bounds width\n\t\t\t}\n\n\t\t\tif (state.height! > displayBounds.height) {\n\t\t\t\tstate.height = displayBounds.height; // prevent window from exceeding display bounds height\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t}\n}\n\nfunction isStrictWindowState(obj: unknown): obj is IStrictWindowState {\n\tif (typeof obj !== 'object' || obj === null) {\n\t\treturn false;\n\t}\n\treturn (\n\t\t'x' in obj &&\n\t\t'y' in obj &&\n\t\t'width' in obj &&\n\t\t'height' in obj\n\t);\n}\n"]}