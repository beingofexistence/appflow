{"version":3,"sources":["vs/platform/theme/common/colorRegistry.ts"],"names":[],"mappings":"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","file":"colorRegistry.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Color, RGBA } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IJSONSchema, IJSONSchemaMap } from 'vs/base/common/jsonSchema';\nimport { assertNever } from 'vs/base/common/assert';\nimport * as nls from 'vs/nls';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { IColorTheme } from 'vs/platform/theme/common/themeService';\n\n//  ------ API types\n\nexport type ColorIdentifier = string;\n\nexport interface ColorContribution {\n\treadonly id: ColorIdentifier;\n\treadonly description: string;\n\treadonly defaults: ColorDefaults | null;\n\treadonly needsTransparency: boolean;\n\treadonly deprecationMessage: string | undefined;\n}\n\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent: ColorIdentifier): string {\n\treturn `--vscode-${colorIdent.replace(/\\./g, '-')}`;\n}\n\nexport function asCssVariable(color: ColorIdentifier): string {\n\treturn `var(${asCssVariableName(color)})`;\n}\n\nexport function asCssVariableWithDefault(color: ColorIdentifier, defaultCssValue: string): string {\n\treturn `var(${asCssVariableName(color)}, ${defaultCssValue})`;\n}\n\nexport const enum ColorTransformType {\n\tDarken,\n\tLighten,\n\tTransparent,\n\tOpaque,\n\tOneOf,\n\tLessProminent,\n\tIfDefinedThenElse\n}\n\nexport type ColorTransform =\n\t| { op: ColorTransformType.Darken; value: ColorValue; factor: number }\n\t| { op: ColorTransformType.Lighten; value: ColorValue; factor: number }\n\t| { op: ColorTransformType.Transparent; value: ColorValue; factor: number }\n\t| { op: ColorTransformType.Opaque; value: ColorValue; background: ColorValue }\n\t| { op: ColorTransformType.OneOf; values: readonly ColorValue[] }\n\t| { op: ColorTransformType.LessProminent; value: ColorValue; background: ColorValue; factor: number; transparency: number }\n\t| { op: ColorTransformType.IfDefinedThenElse; if: ColorIdentifier; then: ColorValue; else: ColorValue };\n\nexport interface ColorDefaults {\n\tlight: ColorValue | null;\n\tdark: ColorValue | null;\n\thcDark: ColorValue | null;\n\thcLight: ColorValue | null;\n}\n\n\n/**\n * A Color Value is either a color literal, a reference to an other color or a derived color\n */\nexport type ColorValue = Color | string | ColorIdentifier | ColorTransform;\n\n// color registry\nexport const Extensions = {\n\tColorContribution: 'base.contributions.colors'\n};\n\nexport interface IColorRegistry {\n\n\treadonly onDidChangeSchema: Event<void>;\n\n\t/**\n\t * Register a color to the registry.\n\t * @param id The color id as used in theme description files\n\t * @param defaults The default values\n\t * @description the description\n\t */\n\tregisterColor(id: string, defaults: ColorDefaults, description: string): ColorIdentifier;\n\n\t/**\n\t * Register a color to the registry.\n\t */\n\tderegisterColor(id: string): void;\n\n\t/**\n\t * Get all color contributions\n\t */\n\tgetColors(): ColorContribution[];\n\n\t/**\n\t * Gets the default color of the given id\n\t */\n\tresolveDefaultColor(id: ColorIdentifier, theme: IColorTheme): Color | undefined;\n\n\t/**\n\t * JSON schema for an object to assign color values to one of the color contributions.\n\t */\n\tgetColorSchema(): IJSONSchema;\n\n\t/**\n\t * JSON schema to for a reference to a color contribution.\n\t */\n\tgetColorReferenceSchema(): IJSONSchema;\n\n}\n\nclass ColorRegistry implements IColorRegistry {\n\n\tprivate readonly _onDidChangeSchema = new Emitter<void>();\n\treadonly onDidChangeSchema: Event<void> = this._onDidChangeSchema.event;\n\n\tprivate colorsById: { [key: string]: ColorContribution };\n\tprivate colorSchema: IJSONSchema & { properties: IJSONSchemaMap } = { type: 'object', properties: {} };\n\tprivate colorReferenceSchema: IJSONSchema & { enum: string[]; enumDescriptions: string[] } = { type: 'string', enum: [], enumDescriptions: [] };\n\n\tconstructor() {\n\t\tthis.colorsById = {};\n\t}\n\n\tpublic registerColor(id: string, defaults: ColorDefaults | null, description: string, needsTransparency = false, deprecationMessage?: string): ColorIdentifier {\n\t\tconst colorContribution: ColorContribution = { id, description, defaults, needsTransparency, deprecationMessage };\n\t\tthis.colorsById[id] = colorContribution;\n\t\tconst propertySchema: IJSONSchema = { type: 'string', description, format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\n\t\tif (deprecationMessage) {\n\t\t\tpropertySchema.deprecationMessage = deprecationMessage;\n\t\t}\n\t\tthis.colorSchema.properties[id] = propertySchema;\n\t\tthis.colorReferenceSchema.enum.push(id);\n\t\tthis.colorReferenceSchema.enumDescriptions.push(description);\n\n\t\tthis._onDidChangeSchema.fire();\n\t\treturn id;\n\t}\n\n\n\tpublic deregisterColor(id: string): void {\n\t\tdelete this.colorsById[id];\n\t\tdelete this.colorSchema.properties[id];\n\t\tconst index = this.colorReferenceSchema.enum.indexOf(id);\n\t\tif (index !== -1) {\n\t\t\tthis.colorReferenceSchema.enum.splice(index, 1);\n\t\t\tthis.colorReferenceSchema.enumDescriptions.splice(index, 1);\n\t\t}\n\t\tthis._onDidChangeSchema.fire();\n\t}\n\n\tpublic getColors(): ColorContribution[] {\n\t\treturn Object.keys(this.colorsById).map(id => this.colorsById[id]);\n\t}\n\n\tpublic resolveDefaultColor(id: ColorIdentifier, theme: IColorTheme): Color | undefined {\n\t\tconst colorDesc = this.colorsById[id];\n\t\tif (colorDesc && colorDesc.defaults) {\n\t\t\tconst colorValue = colorDesc.defaults[theme.type];\n\t\t\treturn resolveColorValue(colorValue, theme);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic getColorSchema(): IJSONSchema {\n\t\treturn this.colorSchema;\n\t}\n\n\tpublic getColorReferenceSchema(): IJSONSchema {\n\t\treturn this.colorReferenceSchema;\n\t}\n\n\tpublic toString() {\n\t\tconst sorter = (a: string, b: string) => {\n\t\t\tconst cat1 = a.indexOf('.') === -1 ? 0 : 1;\n\t\t\tconst cat2 = b.indexOf('.') === -1 ? 0 : 1;\n\t\t\tif (cat1 !== cat2) {\n\t\t\t\treturn cat1 - cat2;\n\t\t\t}\n\t\t\treturn a.localeCompare(b);\n\t\t};\n\n\t\treturn Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n\t}\n\n}\n\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\n\n\nexport function registerColor(id: string, defaults: ColorDefaults | null, description: string, needsTransparency?: boolean, deprecationMessage?: string): ColorIdentifier {\n\treturn colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\n}\n\nexport function getColorRegistry(): IColorRegistry {\n\treturn colorRegistry;\n}\n\n// ----- base colors\n\nexport const foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport const disabledForeground = registerColor('disabledForeground', { dark: '#CCCCCC80', light: '#61616180', hcDark: '#A5A5A5', hcLight: '#7F7F7F' }, nls.localize('disabledForeground', \"Overall foreground for disabled elements. This color is only used if not overridden by a component.\"));\nexport const errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport const descriptionForeground = registerColor('descriptionForeground', { light: '#717171', dark: transparent(foreground, 0.7), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport const iconForeground = registerColor('icon.foreground', { dark: '#C5C5C5', light: '#424242', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\n\nexport const focusBorder = registerColor('focusBorder', { dark: '#007FD4', light: '#0090F1', hcDark: '#F38518', hcLight: '#006BBD' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\n\nexport const contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hcDark: '#6FC3DF', hcLight: '#0F4A85' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport const activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\n\nexport const selectionBackground = registerColor('selection.background', { light: null, dark: null, hcDark: null, hcLight: null }, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n\n// ------ text colors\n\nexport const textSeparatorForeground = registerColor('textSeparator.foreground', { light: '#0000002e', dark: '#ffffff2e', hcDark: Color.black, hcLight: '#292929' }, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\nexport const textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hcDark: '#3794FF', hcLight: '#0F4A85' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground', { light: '#006AB1', dark: '#3794FF', hcDark: '#3794FF', hcLight: '#0F4A85' }, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport const textPreformatForeground = registerColor('textPreformat.foreground', { light: '#A31515', dark: '#D7BA7D', hcDark: '#D7BA7D', hcLight: '#292929' }, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background', { light: '#7f7f7f1a', dark: '#7f7f7f1a', hcDark: null, hcLight: '#F2F2F2' }, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border', { light: '#007acc80', dark: '#007acc80', hcDark: Color.white, hcLight: '#292929' }, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hcDark: Color.black, hcLight: '#F2F2F2' }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n\n// ----- widgets\nexport const widgetShadow = registerColor('widget.shadow', { dark: transparent(Color.black, .36), light: transparent(Color.black, .16), hcDark: null, hcLight: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport const widgetBorder = registerColor('widget.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('widgetBorder', 'Border color of widgets such as find/replace inside the editor.'));\n\nexport const inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport const inputForeground = registerColor('input.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport const inputBorder = registerColor('input.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC', light: '#007ACC', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground', { dark: Color.white, light: Color.black, hcDark: foreground, hcLight: foreground }, nls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground', { light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\n\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\n\nexport const selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport const selectListBackground = registerColor('dropdown.listBackground', { dark: null, light: null, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownListBackground', \"Dropdown list background.\"));\nexport const selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: foreground, hcDark: Color.white, hcLight: foreground }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport const selectBorder = registerColor('dropdown.border', { dark: selectBackground, light: '#CECECE', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('dropdownBorder', \"Dropdown border.\"));\n\nexport const buttonForeground = registerColor('button.foreground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: Color.white }, nls.localize('buttonForeground', \"Button foreground color.\"));\nexport const buttonSeparator = registerColor('button.separator', { dark: transparent(buttonForeground, .4), light: transparent(buttonForeground, .4), hcDark: transparent(buttonForeground, .4), hcLight: transparent(buttonForeground, .4) }, nls.localize('buttonSeparator', \"Button separator color.\"));\nexport const buttonBackground = registerColor('button.background', { dark: '#0E639C', light: '#007ACC', hcDark: null, hcLight: '#0F4A85' }, nls.localize('buttonBackground', \"Button background color.\"));\nexport const buttonHoverBackground = registerColor('button.hoverBackground', { dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hcDark: buttonBackground, hcLight: buttonBackground }, nls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\nexport const buttonBorder = registerColor('button.border', { dark: contrastBorder, light: contrastBorder, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('buttonBorder', \"Button border color.\"));\n\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: foreground }, nls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hcDark: null, hcLight: Color.white }, nls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground', { dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hcDark: null, hcLight: null }, nls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\n\nexport const badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hcDark: Color.black, hcLight: '#0F4A85' }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport const badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hcDark: Color.white, hcLight: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\n\nexport const scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hcDark: transparent(contrastBorder, 0.6), hcLight: transparent(contrastBorder, 0.4) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hcDark: transparent(contrastBorder, 0.8), hcLight: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\n\nexport const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\n\nexport const editorErrorBackground = registerColor('editorError.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorError.background', 'Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorErrorForeground = registerColor('editorError.foreground', { dark: '#F14C4C', light: '#E51400', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport const editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hcDark: Color.fromHex('#E47777').transparent(0.8), hcLight: '#B5200D' }, nls.localize('errorBorder', 'If set, color of double underlines for errors in the editor.'));\n\nexport const editorWarningBackground = registerColor('editorWarning.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorWarning.background', 'Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#BF8803', hcDark: '#FFD370', hcLight: '#895503' }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport const editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hcDark: Color.fromHex('#FFCC00').transparent(0.8), hcLight: Color.fromHex('#FFCC00').transparent(0.8) }, nls.localize('warningBorder', 'If set, color of double underlines for warnings in the editor.'));\n\nexport const editorInfoBackground = registerColor('editorInfo.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorInfo.background', 'Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#3794FF', light: '#1a85ff', hcDark: '#3794FF', hcLight: '#1a85ff' }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport const editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hcDark: Color.fromHex('#3794FF').transparent(0.8), hcLight: '#292929' }, nls.localize('infoBorder', 'If set, color of double underlines for infos in the editor.'));\n\nexport const editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hcDark: null, hcLight: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport const editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hcDark: Color.fromHex('#eeeeee').transparent(0.8), hcLight: '#292929' }, nls.localize('hintBorder', 'If set, color of double underlines for hints in the editor.'));\n\nexport const sashHoverBorder = registerColor('sash.hoverBorder', { dark: focusBorder, light: focusBorder, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n\n/**\n * Editor background color.\n */\nexport const editorBackground = registerColor('editor.background', { light: '#ffffff', dark: '#1E1E1E', hcDark: Color.black, hcLight: Color.white }, nls.localize('editorBackground', \"Editor background color.\"));\n\n/**\n * Editor foreground color.\n */\nexport const editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hcDark: Color.white, hcLight: foreground }, nls.localize('editorForeground', \"Editor default foreground color.\"));\n\n/**\n * Sticky scroll\n */\nexport const editorStickyScrollBackground = registerColor('editorStickyScroll.background', { light: editorBackground, dark: editorBackground, hcDark: editorBackground, hcLight: editorBackground }, nls.localize('editorStickyScrollBackground', \"Sticky scroll background color for the editor\"));\nexport const editorStickyScrollHoverBackground = registerColor('editorStickyScrollHover.background', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('editorStickyScrollHoverBackground', \"Sticky scroll on hover background color for the editor\"));\n\n/**\n * Editor widgets\n */\nexport const editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hcDark: '#0C141F', hcLight: Color.white }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport const editorWidgetForeground = registerColor('editorWidget.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport const editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport const editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', { light: null, dark: null, hcDark: null, hcLight: null }, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\n\n/**\n * Quick pick widget\n */\nexport const quickInputBackground = registerColor('quickInput.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputForeground = registerColor('quickInput.foreground', { dark: editorWidgetForeground, light: editorWidgetForeground, hcDark: editorWidgetForeground, hcLight: editorWidgetForeground }, nls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background', { dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: Color.white }, nls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport const pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\n\n/**\n * Keybinding label\n */\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background', { dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground', { dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hcDark: Color.white, hcLight: foreground }, nls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border', { dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: contrastBorder }, nls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder', { dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: foreground }, nls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n\n/**\n * Editor selection colors.\n */\nexport const editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hcDark: '#f3f518', hcLight: '#0F4A85' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport const editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hcDark: '#000000', hcLight: Color.white }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport const editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hcDark: transparent(editorSelectionBackground, 0.7), hcLight: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hcDark: null, hcLight: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n\n\n/**\n * Editor find match colors.\n */\nexport const editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hcDark: null, hcLight: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport const editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hcDark: null, hcLight: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hcDark: null, hcLight: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport const editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport const editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hcDark: transparent(activeContrastBorder, 0.4), hcLight: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n\n/**\n * Search Editor query match colors.\n *\n * Distinct from normal editor find match to allow for better differentiation\n */\nexport const searchEditorFindMatch = registerColor('searchEditor.findMatchBackground', { light: transparent(editorFindMatchHighlight, 0.66), dark: transparent(editorFindMatchHighlight, 0.66), hcDark: editorFindMatchHighlight, hcLight: editorFindMatchHighlight }, nls.localize('searchEditor.queryMatch', \"Color of the Search Editor query matches.\"));\nexport const searchEditorFindMatchBorder = registerColor('searchEditor.findMatchBorder', { light: transparent(editorFindMatchHighlightBorder, 0.66), dark: transparent(editorFindMatchHighlightBorder, 0.66), hcDark: editorFindMatchHighlightBorder, hcLight: editorFindMatchHighlightBorder }, nls.localize('searchEditor.editorFindMatchBorder', \"Border color of the Search Editor query matches.\"));\n\n/**\n * Search Viewlet colors.\n */\nexport const searchResultsInfoForeground = registerColor('search.resultsInfoForeground', { light: foreground, dark: transparent(foreground, 0.65), hcDark: foreground, hcLight: foreground }, nls.localize('search.resultsInfoForeground', \"Color of the text in the search viewlet's completion message.\"));\n\n/**\n * Editor hover\n */\nexport const editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hcDark: '#ADD6FF26', hcLight: null }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorHoverBackground = registerColor('editorHoverWidget.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport const editorHoverForeground = registerColor('editorHoverWidget.foreground', { light: editorWidgetForeground, dark: editorWidgetForeground, hcDark: editorWidgetForeground, hcLight: editorWidgetForeground }, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport const editorHoverBorder = registerColor('editorHoverWidget.border', { light: editorWidgetBorder, dark: editorWidgetBorder, hcDark: editorWidgetBorder, hcLight: editorWidgetBorder }, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport const editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n/**\n * Editor link colors\n */\nexport const editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hcDark: Color.cyan, hcLight: '#292929' }, nls.localize('activeLinkForeground', 'Color of active links.'));\n\n/**\n * Inline hints\n */\nexport const editorInlayHintForeground = registerColor('editorInlayHint.foreground', { dark: '#969696', light: '#969696', hcDark: Color.white, hcLight: Color.black }, nls.localize('editorInlayHintForeground', 'Foreground color of inline hints'));\nexport const editorInlayHintBackground = registerColor('editorInlayHint.background', { dark: transparent(badgeBackground, .10), light: transparent(badgeBackground, .10), hcDark: transparent(Color.white, .10), hcLight: transparent(badgeBackground, .10) }, nls.localize('editorInlayHintBackground', 'Background color of inline hints'));\nexport const editorInlayHintTypeForeground = registerColor('editorInlayHint.typeForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hcDark: editorInlayHintForeground, hcLight: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundTypes', 'Foreground color of inline hints for types'));\nexport const editorInlayHintTypeBackground = registerColor('editorInlayHint.typeBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hcDark: editorInlayHintBackground, hcLight: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundTypes', 'Background color of inline hints for types'));\nexport const editorInlayHintParameterForeground = registerColor('editorInlayHint.parameterForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hcDark: editorInlayHintForeground, hcLight: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundParameter', 'Foreground color of inline hints for parameters'));\nexport const editorInlayHintParameterBackground = registerColor('editorInlayHint.parameterBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hcDark: editorInlayHintBackground, hcLight: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundParameter', 'Background color of inline hints for parameters'));\n\n/**\n * Editor lightbulb icon colors\n */\nexport const editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hcDark: '#FFCC00', hcLight: '#007ACC' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport const editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hcDark: '#75BEFF', hcLight: '#007ACC' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\n\n/**\n * Diff Editor Colors\n */\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, .2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, .2));\n\nexport const diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: '#9ccc2c33', light: '#9ccc2c40', hcDark: null, hcLight: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: '#ff000033', light: '#ff000033', hcDark: null, hcLight: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const diffInsertedLine = registerColor('diffEditor.insertedLineBackground', { dark: defaultInsertColor, light: defaultInsertColor, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLines', 'Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemovedLine = registerColor('diffEditor.removedLineBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLines', 'Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const diffInsertedLineGutter = registerColor('diffEditorGutter.insertedLineBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLineGutter', 'Background color for the margin where lines got inserted.'));\nexport const diffRemovedLineGutter = registerColor('diffEditorGutter.removedLineBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLineGutter', 'Background color for the margin where lines got removed.'));\n\nexport const diffOverviewRulerInserted = registerColor('diffEditorOverview.insertedForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorOverviewInserted', 'Diff overview ruler foreground for inserted content.'));\nexport const diffOverviewRulerRemoved = registerColor('diffEditorOverview.removedForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorOverviewRemoved', 'Diff overview ruler foreground for removed content.'));\n\nexport const diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hcDark: '#33ff2eff', hcLight: '#374E06' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport const diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hcDark: '#FF008F', hcLight: '#AD0707' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\n\nexport const diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\nexport const diffDiagonalFill = registerColor('diffEditor.diagonalFill', { dark: '#cccccc33', light: '#22222233', hcDark: null, hcLight: null }, nls.localize('diffDiagonalFill', \"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\"));\n\nexport const diffUnchangedRegionBackground = registerColor('diffEditor.unchangedRegionBackground', { dark: '#3e3e3e', light: '#e4e4e4', hcDark: null, hcLight: null }, nls.localize('diffEditor.unchangedRegionBackground', \"The background color of unchanged blocks in the diff editor.\"));\nexport const diffUnchangedRegionForeground = registerColor('diffEditor.unchangedRegionForeground', { dark: '#a3a2a2', light: '#4d4c4c', hcDark: null, hcLight: null }, nls.localize('diffEditor.unchangedRegionForeground', \"The foreground color of unchanged blocks in the diff editor.\"));\nexport const diffUnchangedTextBackground = registerColor('diffEditor.unchangedCodeBackground', { dark: '#74747429', light: '#b8b8b829', hcDark: null, hcLight: null }, nls.localize('diffEditor.unchangedCodeBackground', \"The background color of unchanged code in the diff editor.\"));\n\n/**\n * List and tree colors\n */\nexport const listFocusBackground = registerColor('list.focusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusForeground = registerColor('list.focusForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusOutline = registerColor('list.focusOutline', { dark: focusBorder, light: focusBorder, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('listFocusOutline', \"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusAndSelectionOutline = registerColor('list.focusAndSelectionOutline', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusAndSelectionOutline', \"List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#04395E', light: '#0060C0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionIconForeground = registerColor('list.activeSelectionIconForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionIconForeground = registerColor('list.inactiveSelectionIconForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusOutline = registerColor('list.inactiveFocusOutline', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveFocusOutline', \"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: Color.white.transparent(0.1), hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport const listHoverForeground = registerColor('list.hoverForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport const listDropBackground = registerColor('list.dropBackground', { dark: '#062F4A', light: '#D6EBFF', hcDark: null, hcLight: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items around using the mouse.\"));\nexport const listHighlightForeground = registerColor('list.highlightForeground', { dark: '#2AAAFF', light: '#0066BF', hcDark: focusBorder, hcLight: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport const listFocusHighlightForeground = registerColor('list.focusHighlightForeground', { dark: listHighlightForeground, light: ifDefinedThenElse(listActiveSelectionBackground, listHighlightForeground, '#BBE7FF'), hcDark: listHighlightForeground, hcLight: listHighlightForeground }, nls.localize('listFocusHighlightForeground', 'List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.'));\nexport const listInvalidItemForeground = registerColor('list.invalidItemForeground', { dark: '#B89500', light: '#B89500', hcDark: '#B89500', hcLight: '#B5200D' }, nls.localize('invalidItemForeground', 'List/Tree foreground color for invalid items, for example an unresolved root in explorer.'));\nexport const listErrorForeground = registerColor('list.errorForeground', { dark: '#F88070', light: '#B01011', hcDark: null, hcLight: null }, nls.localize('listErrorForeground', 'Foreground color of list items containing errors.'));\nexport const listWarningForeground = registerColor('list.warningForeground', { dark: '#CCA700', light: '#855F00', hcDark: null, hcLight: null }, nls.localize('listWarningForeground', 'Foreground color of list items containing warnings.'));\nexport const listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: darken(editorWidgetBackground, 0), dark: lighten(editorWidgetBackground, 0), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hcDark: '#f38518', hcLight: '#007ACC' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport const listFilterWidgetShadow = registerColor('listFilterWidget.shadow', { dark: widgetShadow, light: widgetShadow, hcDark: widgetShadow, hcLight: widgetShadow }, nls.localize('listFilterWidgetShadow', 'Shadow color of the type filter widget in lists and trees.'));\nexport const listFilterMatchHighlight = registerColor('list.filterMatchBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('listFilterMatchHighlight', 'Background color of the filtered match.'));\nexport const listFilterMatchHighlightBorder = registerColor('list.filterMatchBorder', { dark: editorFindMatchHighlightBorder, light: editorFindMatchHighlightBorder, hcDark: contrastBorder, hcLight: activeContrastBorder }, nls.localize('listFilterMatchHighlightBorder', 'Border color of the filtered match.'));\nexport const treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hcDark: '#a9a9a9', hcLight: '#a5a5a5' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\nexport const treeInactiveIndentGuidesStroke = registerColor('tree.inactiveIndentGuidesStroke', { dark: transparent(treeIndentGuidesStroke, 0.4), light: transparent(treeIndentGuidesStroke, 0.4), hcDark: transparent(treeIndentGuidesStroke, 0.4), hcLight: transparent(treeIndentGuidesStroke, 0.4) }, nls.localize('treeInactiveIndentGuidesStroke', \"Tree stroke color for the indentation guides that are not active.\"));\nexport const tableColumnsBorder = registerColor('tree.tableColumnsBorder', { dark: '#CCCCCC20', light: '#61616120', hcDark: null, hcLight: null }, nls.localize('tableColumnsBorder', \"Table border color between columns.\"));\nexport const tableOddRowsBackgroundColor = registerColor('tree.tableOddRowsBackground', { dark: transparent(foreground, 0.04), light: transparent(foreground, 0.04), hcDark: null, hcLight: null }, nls.localize('tableOddRowsBackgroundColor', \"Background color for odd table rows.\"));\nexport const listDeemphasizedForeground = registerColor('list.deemphasizedForeground', { dark: '#8C8C8C', light: '#8E8E90', hcDark: '#A7A8A9', hcLight: '#666666' }, nls.localize('listDeemphasizedForeground', \"List/Tree foreground color for items that are deemphasized. \"));\n\n/**\n * Checkboxes\n */\nexport const checkboxBackground = registerColor('checkbox.background', { dark: selectBackground, light: selectBackground, hcDark: selectBackground, hcLight: selectBackground }, nls.localize('checkbox.background', \"Background color of checkbox widget.\"));\nexport const checkboxSelectBackground = registerColor('checkbox.selectBackground', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('checkbox.select.background', \"Background color of checkbox widget when the element it's in is selected.\"));\nexport const checkboxForeground = registerColor('checkbox.foreground', { dark: selectForeground, light: selectForeground, hcDark: selectForeground, hcLight: selectForeground }, nls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\nexport const checkboxBorder = registerColor('checkbox.border', { dark: selectBorder, light: selectBorder, hcDark: selectBorder, hcLight: selectBorder }, nls.localize('checkbox.border', \"Border color of checkbox widget.\"));\nexport const checkboxSelectBorder = registerColor('checkbox.selectBorder', { dark: iconForeground, light: iconForeground, hcDark: iconForeground, hcLight: iconForeground }, nls.localize('checkbox.select.border', \"Border color of checkbox widget when the element it's in is selected.\"));\n\n/**\n * Quick pick widget (dependent on List and tree colors)\n */\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hcDark: listActiveSelectionForeground, hcLight: listActiveSelectionForeground }, nls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground', { dark: listActiveSelectionIconForeground, light: listActiveSelectionIconForeground, hcDark: listActiveSelectionIconForeground, hcLight: listActiveSelectionIconForeground }, nls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground', { dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hcDark: null, hcLight: null }, nls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n\n/**\n * Menu colors\n */\nexport const menuBorder = registerColor('menu.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\nexport const menuForeground = registerColor('menu.foreground', { dark: selectForeground, light: selectForeground, hcDark: selectForeground, hcLight: selectForeground }, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport const menuBackground = registerColor('menu.background', { dark: selectBackground, light: selectBackground, hcDark: selectBackground, hcLight: selectBackground }, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport const menuSelectionForeground = registerColor('menu.selectionForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hcDark: listActiveSelectionForeground, hcLight: listActiveSelectionForeground }, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport const menuSelectionBackground = registerColor('menu.selectionBackground', { dark: listActiveSelectionBackground, light: listActiveSelectionBackground, hcDark: listActiveSelectionBackground, hcLight: listActiveSelectionBackground }, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport const menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport const menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#606060', light: '#D4D4D4', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n\n/**\n * Toolbar colors\n */\nexport const toolbarHoverBackground = registerColor('toolbar.hoverBackground', { dark: '#5a5d5e50', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('toolbarHoverBackground', \"Toolbar background when hovering over actions using the mouse\"));\nexport const toolbarHoverOutline = registerColor('toolbar.hoverOutline', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('toolbarHoverOutline', \"Toolbar outline when hovering over actions using the mouse\"));\nexport const toolbarActiveBackground = registerColor('toolbar.activeBackground', { dark: lighten(toolbarHoverBackground, 0.1), light: darken(toolbarHoverBackground, 0.1), hcDark: null, hcLight: null }, nls.localize('toolbarActiveBackground', \"Toolbar background when holding the mouse over actions\"));\n\n/**\n * Snippet placeholder colors\n */\nexport const snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hcDark: new Color(new RGBA(124, 124, 124, 0.3)), hcLight: new Color(new RGBA(10, 50, 100, 0.2)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport const snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport const snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport const snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hcDark: '#525252', hcLight: '#292929' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final tabstop of a snippet.\"));\n\n/**\n * Breadcrumb colors\n */\nexport const breadcrumbsForeground = registerColor('breadcrumb.foreground', { light: transparent(foreground, 0.8), dark: transparent(foreground, 0.8), hcDark: transparent(foreground, 0.8), hcLight: transparent(foreground, 0.8) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsBackground = registerColor('breadcrumb.background', { light: editorBackground, dark: editorBackground, hcDark: editorBackground, hcLight: editorBackground }, nls.localize('breadcrumbsBackground', \"Background color of breadcrumb items.\"));\nexport const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsSelectedForeground', \"Color of selected breadcrumb items.\"));\nexport const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('breadcrumbsSelectedBackground', \"Background color of breadcrumb item picker.\"));\n\n/**\n * Merge-conflict colors\n */\n\nconst headerTransparency = 0.5;\nconst currentBaseColor = Color.fromHex('#40C8AE').transparent(headerTransparency);\nconst incomingBaseColor = Color.fromHex('#40A6FF').transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex('#606060').transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\n\nexport const mergeCurrentHeaderBackground = registerColor('merge.currentHeaderBackground', { dark: currentBaseColor, light: currentBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCurrentHeaderBackground', 'Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCurrentContentBackground = registerColor('merge.currentContentBackground', { dark: transparent(mergeCurrentHeaderBackground, contentTransparency), light: transparent(mergeCurrentHeaderBackground, contentTransparency), hcDark: transparent(mergeCurrentHeaderBackground, contentTransparency), hcLight: transparent(mergeCurrentHeaderBackground, contentTransparency) }, nls.localize('mergeCurrentContentBackground', 'Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingHeaderBackground = registerColor('merge.incomingHeaderBackground', { dark: incomingBaseColor, light: incomingBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeIncomingHeaderBackground', 'Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingContentBackground = registerColor('merge.incomingContentBackground', { dark: transparent(mergeIncomingHeaderBackground, contentTransparency), light: transparent(mergeIncomingHeaderBackground, contentTransparency), hcDark: transparent(mergeIncomingHeaderBackground, contentTransparency), hcLight: transparent(mergeIncomingHeaderBackground, contentTransparency) }, nls.localize('mergeIncomingContentBackground', 'Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonHeaderBackground = registerColor('merge.commonHeaderBackground', { dark: commonBaseColor, light: commonBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCommonHeaderBackground', 'Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonContentBackground = registerColor('merge.commonContentBackground', { dark: transparent(mergeCommonHeaderBackground, contentTransparency), light: transparent(mergeCommonHeaderBackground, contentTransparency), hcDark: transparent(mergeCommonHeaderBackground, contentTransparency), hcLight: transparent(mergeCommonHeaderBackground, contentTransparency) }, nls.localize('mergeCommonContentBackground', 'Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const mergeBorder = registerColor('merge.border', { dark: null, light: null, hcDark: '#C3DF6F', hcLight: '#007ACC' }, nls.localize('mergeBorder', 'Border color on headers and the splitter in inline merge-conflicts.'));\n\nexport const overviewRulerCurrentContentForeground = registerColor('editorOverviewRuler.currentContentForeground', { dark: transparent(mergeCurrentHeaderBackground, rulerTransparency), light: transparent(mergeCurrentHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCurrentContentForeground', 'Current overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerIncomingContentForeground = registerColor('editorOverviewRuler.incomingContentForeground', { dark: transparent(mergeIncomingHeaderBackground, rulerTransparency), light: transparent(mergeIncomingHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerIncomingContentForeground', 'Incoming overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerCommonContentForeground = registerColor('editorOverviewRuler.commonContentForeground', { dark: transparent(mergeCommonHeaderBackground, rulerTransparency), light: transparent(mergeCommonHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCommonContentForeground', 'Common ancestor overview ruler foreground for inline merge-conflicts.'));\n\nexport const overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hcDark: '#AB5A00', hcLight: '' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hcDark: '#A0A0A0CC', hcLight: '#A0A0A0CC' }, nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\n\n\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hcDark: '#AB5A00', hcLight: '#0F4A85' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight', { light: '#c9c9c9', dark: '#676767', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\nexport const minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport const minimapInfo = registerColor('minimap.infoHighlight', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('minimapInfo', 'Minimap marker color for infos.'));\nexport const minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport const minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport const minimapBackground = registerColor('minimap.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('minimapBackground', \"Minimap background color.\"));\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity', { dark: Color.fromHex('#000f'), light: Color.fromHex('#000f'), hcDark: Color.fromHex('#000f'), hcLight: Color.fromHex('#000f') }, nls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\n\nexport const minimapSliderBackground = registerColor('minimapSlider.background', { light: transparent(scrollbarSliderBackground, 0.5), dark: transparent(scrollbarSliderBackground, 0.5), hcDark: transparent(scrollbarSliderBackground, 0.5), hcLight: transparent(scrollbarSliderBackground, 0.5) }, nls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground', { light: transparent(scrollbarSliderHoverBackground, 0.5), dark: transparent(scrollbarSliderHoverBackground, 0.5), hcDark: transparent(scrollbarSliderHoverBackground, 0.5), hcLight: transparent(scrollbarSliderHoverBackground, 0.5) }, nls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground', { light: transparent(scrollbarSliderActiveBackground, 0.5), dark: transparent(scrollbarSliderActiveBackground, 0.5), hcDark: transparent(scrollbarSliderActiveBackground, 0.5), hcLight: transparent(scrollbarSliderActiveBackground, 0.5) }, nls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\n\nexport const problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', { dark: editorErrorForeground, light: editorErrorForeground, hcDark: editorErrorForeground, hcLight: editorErrorForeground }, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport const problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningForeground, hcLight: editorWarningForeground }, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport const problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoForeground, hcLight: editorInfoForeground }, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n\n/**\n * Chart colors\n */\nexport const chartsForeground = registerColor('charts.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', { dark: transparent(foreground, .5), light: transparent(foreground, .5), hcDark: transparent(foreground, .5), hcLight: transparent(foreground, .5) }, nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', { dark: editorErrorForeground, light: editorErrorForeground, hcDark: editorErrorForeground, hcLight: editorErrorForeground }, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoForeground, hcLight: editorInfoForeground }, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningForeground, hcLight: editorWarningForeground }, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', { dark: minimapFindMatch, light: minimapFindMatch, hcDark: minimapFindMatch, hcLight: minimapFindMatch }, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', { dark: '#89D185', light: '#388A34', hcDark: '#89D185', hcLight: '#374e06' }, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', { dark: '#B180D7', light: '#652D90', hcDark: '#B180D7', hcLight: '#652D90' }, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));\n\n// ----- color functions\n\nexport function executeTransform(transform: ColorTransform, theme: IColorTheme): Color | undefined {\n\tswitch (transform.op) {\n\t\tcase ColorTransformType.Darken:\n\t\t\treturn resolveColorValue(transform.value, theme)?.darken(transform.factor);\n\n\t\tcase ColorTransformType.Lighten:\n\t\t\treturn resolveColorValue(transform.value, theme)?.lighten(transform.factor);\n\n\t\tcase ColorTransformType.Transparent:\n\t\t\treturn resolveColorValue(transform.value, theme)?.transparent(transform.factor);\n\n\t\tcase ColorTransformType.Opaque: {\n\t\t\tconst backgroundColor = resolveColorValue(transform.background, theme);\n\t\t\tif (!backgroundColor) {\n\t\t\t\treturn resolveColorValue(transform.value, theme);\n\t\t\t}\n\t\t\treturn resolveColorValue(transform.value, theme)?.makeOpaque(backgroundColor);\n\t\t}\n\n\t\tcase ColorTransformType.OneOf:\n\t\t\tfor (const candidate of transform.values) {\n\t\t\t\tconst color = resolveColorValue(candidate, theme);\n\t\t\t\tif (color) {\n\t\t\t\t\treturn color;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\n\t\tcase ColorTransformType.IfDefinedThenElse:\n\t\t\treturn resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n\n\t\tcase ColorTransformType.LessProminent: {\n\t\t\tconst from = resolveColorValue(transform.value, theme);\n\t\t\tif (!from) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst backgroundColor = resolveColorValue(transform.background, theme);\n\t\t\tif (!backgroundColor) {\n\t\t\t\treturn from.transparent(transform.factor * transform.transparency);\n\t\t\t}\n\n\t\t\treturn from.isDarkerThan(backgroundColor)\n\t\t\t\t? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency)\n\t\t\t\t: Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n\t\t}\n\t\tdefault:\n\t\t\tthrow assertNever(transform);\n\t}\n}\n\nexport function darken(colorValue: ColorValue, factor: number): ColorTransform {\n\treturn { op: ColorTransformType.Darken, value: colorValue, factor };\n}\n\nexport function lighten(colorValue: ColorValue, factor: number): ColorTransform {\n\treturn { op: ColorTransformType.Lighten, value: colorValue, factor };\n}\n\nexport function transparent(colorValue: ColorValue, factor: number): ColorTransform {\n\treturn { op: ColorTransformType.Transparent, value: colorValue, factor };\n}\n\nexport function opaque(colorValue: ColorValue, background: ColorValue): ColorTransform {\n\treturn { op: ColorTransformType.Opaque, value: colorValue, background };\n}\n\nexport function oneOf(...colorValues: ColorValue[]): ColorTransform {\n\treturn { op: ColorTransformType.OneOf, values: colorValues };\n}\n\nexport function ifDefinedThenElse(ifArg: ColorIdentifier, thenArg: ColorValue, elseArg: ColorValue): ColorTransform {\n\treturn { op: ColorTransformType.IfDefinedThenElse, if: ifArg, then: thenArg, else: elseArg };\n}\n\nfunction lessProminent(colorValue: ColorValue, backgroundColorValue: ColorValue, factor: number, transparency: number): ColorTransform {\n\treturn { op: ColorTransformType.LessProminent, value: colorValue, background: backgroundColorValue, factor, transparency };\n}\n\n// ----- implementation\n\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue: ColorValue | null, theme: IColorTheme): Color | undefined {\n\tif (colorValue === null) {\n\t\treturn undefined;\n\t} else if (typeof colorValue === 'string') {\n\t\tif (colorValue[0] === '#') {\n\t\t\treturn Color.fromHex(colorValue);\n\t\t}\n\t\treturn theme.getColor(colorValue);\n\t} else if (colorValue instanceof Color) {\n\t\treturn colorValue;\n\t} else if (typeof colorValue === 'object') {\n\t\treturn executeTransform(colorValue, theme);\n\t}\n\treturn undefined;\n}\n\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\n\nconst schemaRegistry = platform.Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\n\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n\tif (!delayer.isScheduled()) {\n\t\tdelayer.schedule();\n\t}\n});\n\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\n"]}