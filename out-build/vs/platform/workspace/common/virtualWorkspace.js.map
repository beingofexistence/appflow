{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/workspace/common/virtualWorkspace.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,SAAgB,GAAG,CAAe,QAAa;QAC9C,OAAO,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,IAAI,IAAI,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,YAAY,CAAC;IACrF,CAAC;IAFD,kBAEC;IAED,SAAgB,GAAG,CAAyB,SAAqB;QAChE,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE;YAC7B,OAAO,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAe,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;SACrG;aAAM,IAAI,SAAS,CAAC,aAAa,IAAI,GAAG,CAAe,SAAS,CAAC,aAAa,CAAC,EAAE;YACjF,OAAO,SAAS,CAAC,aAAa,CAAC;SAC/B;QACD,OAAO,SAAS,CAAC;IAClB,CAAC;IAPD,kBAOC;IAED,SAAgB,GAAG,CAAuB,SAAqB;QAC9D,OAAO,GAAG,CAAyB,SAAS,CAAC,EAAE,MAAM,CAAC;IACvD,CAAC;IAFD,kBAEC;IAED,SAAgB,GAAG,CAA0B,SAAqB;QACjE,OAAO,GAAG,CAAyB,SAAS,CAAC,EAAE,SAAS,CAAC;IAC1D,CAAC;IAFD,kBAEC;IAED,SAAgB,GAAG,CAAgB,SAAqB;QACvD,OAAO,GAAG,CAAyB,SAAS,CAAC,KAAK,SAAS,CAAC;IAC7D,CAAC;IAFD,kBAEC","file":"virtualWorkspace.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\n\nexport function isVirtualResource(resource: URI) {\n\treturn resource.scheme !== Schemas.file && resource.scheme !== Schemas.vscodeRemote;\n}\n\nexport function getVirtualWorkspaceLocation(workspace: IWorkspace): { scheme: string; authority: string } | undefined {\n\tif (workspace.folders.length) {\n\t\treturn workspace.folders.every(f => isVirtualResource(f.uri)) ? workspace.folders[0].uri : undefined;\n\t} else if (workspace.configuration && isVirtualResource(workspace.configuration)) {\n\t\treturn workspace.configuration;\n\t}\n\treturn undefined;\n}\n\nexport function getVirtualWorkspaceScheme(workspace: IWorkspace): string | undefined {\n\treturn getVirtualWorkspaceLocation(workspace)?.scheme;\n}\n\nexport function getVirtualWorkspaceAuthority(workspace: IWorkspace): string | undefined {\n\treturn getVirtualWorkspaceLocation(workspace)?.authority;\n}\n\nexport function isVirtualWorkspace(workspace: IWorkspace): boolean {\n\treturn getVirtualWorkspaceLocation(workspace) !== undefined;\n}\n"]}