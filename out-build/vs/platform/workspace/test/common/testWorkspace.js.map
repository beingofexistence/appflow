{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/workspace/test/common/testWorkspace.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,MAAa,IAAU,SAAQ,eAAa;QAC3C,YACC,EAAU,EACV,UAA6B,EAAE,EAC/B,gBAA4B,IAAI,EAChC,mBAA0C,GAAG,EAAE,CAAC,CAAC,aAAE;YAEnD,KAAK,CAAC,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC;QAC5D,CAAC;KACD;IATD,oBASC;IAED,MAAM,KAAK,GAAG,SAAG,CAAC,IAAI,CAAC,aAAE,CAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;IAC9D,QAAA,IAAI,GAAY,IAAI,CAAU,KAAK,CAAC,CAAC;IAElD,SAAgB,IAAI,CAAU,QAAa;QAC1C,OAAO,IAAI,IAAI,CAAM,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAA,eAAG,EAAe,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAFD,oBAEC","file":"testWorkspace.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { toWorkspaceFolder, Workspace as BaseWorkspace, WorkspaceFolder } from 'vs/platform/workspace/common/workspace';\n\nexport class Workspace extends BaseWorkspace {\n\tconstructor(\n\t\tid: string,\n\t\tfolders: WorkspaceFolder[] = [],\n\t\tconfiguration: URI | null = null,\n\t\tignorePathCasing: (key: URI) => boolean = () => !isLinux\n\t) {\n\t\tsuper(id, folders, false, configuration, ignorePathCasing);\n\t}\n}\n\nconst wsUri = URI.file(isWindows ? 'C:\\\\testWorkspace' : '/testWorkspace');\nexport const TestWorkspace = testWorkspace(wsUri);\n\nexport function testWorkspace(resource: URI): Workspace {\n\treturn new Workspace(resource.toString(), [toWorkspaceFolder(resource)]);\n}\n"]}