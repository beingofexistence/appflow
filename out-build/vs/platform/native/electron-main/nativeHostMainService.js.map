{"version":3,"sources":["vs/platform/native/electron-main/nativeHostMainService.ts"],"names":[],"mappings":"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","file":"nativeHostMainService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\nimport { app, BrowserWindow, clipboard, Display, Menu, MessageBoxOptions, MessageBoxReturnValue, OpenDevToolsOptions, OpenDialogOptions, OpenDialogReturnValue, powerMonitor, SaveDialogOptions, SaveDialogReturnValue, screen, shell } from 'electron';\nimport { arch, cpus, freemem, loadavg, platform, release, totalmem, type } from 'os';\nimport { promisify } from 'util';\nimport { memoize } from 'vs/base/common/decorators';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { dirname, join, resolve } from 'vs/base/common/path';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { AddFirstParameterToFunctions } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { realpath } from 'vs/base/node/extpath';\nimport { virtualMachineHint } from 'vs/base/node/id';\nimport { Promises, SymlinkSupport } from 'vs/base/node/pfs';\nimport { findFreePort } from 'vs/base/node/ports';\nimport { MouseInputEvent } from 'vs/base/parts/sandbox/common/electronTypes';\nimport { localize } from 'vs/nls';\nimport { ISerializableCommandAction } from 'vs/platform/action/common/action';\nimport { INativeOpenDialogOptions } from 'vs/platform/dialogs/common/dialogs';\nimport { IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILifecycleMainService, IRelaunchOptions } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ICommonNativeHostService, IOSProperties, IOSStatistics } from 'vs/platform/native/common/native';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IPartsSplash } from 'vs/platform/theme/common/themeService';\nimport { IThemeMainService } from 'vs/platform/theme/electron-main/themeMainService';\nimport { ICodeWindow } from 'vs/platform/window/electron-main/window';\nimport { IColorScheme, IOpenedWindow, IOpenEmptyWindowOptions, IOpenWindowOptions, IWindowOpenable } from 'vs/platform/window/common/window';\nimport { IWindowsMainService, OpenContext } from 'vs/platform/windows/electron-main/windows';\nimport { isWorkspaceIdentifier, toWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\nimport { IWorkspacesManagementMainService } from 'vs/platform/workspaces/electron-main/workspacesManagementMainService';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { hasWSLFeatureInstalled } from 'vs/platform/remote/node/wsl';\nimport { WindowProfiler } from 'vs/platform/profiling/electron-main/windowProfiling';\nimport { IV8Profile } from 'vs/platform/profiling/common/profiling';\n\nexport interface INativeHostMainService extends AddFirstParameterToFunctions<ICommonNativeHostService, Promise<unknown> /* only methods, not events */, number | undefined /* window ID */> { }\n\nexport const INativeHostMainService = createDecorator<INativeHostMainService>('nativeHostMainService');\n\nexport class NativeHostMainService extends Disposable implements INativeHostMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IThemeMainService private readonly themeMainService: IThemeMainService,\n\t\t@IWorkspacesManagementMainService private readonly workspacesManagementMainService: IWorkspacesManagementMainService\n\t) {\n\t\tsuper();\n\t}\n\n\n\t//#region Properties\n\n\tget windowId(): never { throw new Error('Not implemented in electron-main'); }\n\n\t//#endregion\n\n\n\t//#region Events\n\n\treadonly onDidOpenWindow = Event.map(this.windowsMainService.onDidOpenWindow, window => window.id);\n\treadonly onDidTriggerSystemContextMenu = Event.filter(Event.map(this.windowsMainService.onDidTriggerSystemContextMenu, ({ window, x, y }) => { return { windowId: window.id, x, y }; }), ({ windowId }) => !!this.windowsMainService.getWindowById(windowId));\n\n\treadonly onDidMaximizeWindow = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-maximize', (event, window: BrowserWindow) => window.id), windowId => !!this.windowsMainService.getWindowById(windowId));\n\treadonly onDidUnmaximizeWindow = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-unmaximize', (event, window: BrowserWindow) => window.id), windowId => !!this.windowsMainService.getWindowById(windowId));\n\n\treadonly onDidBlurWindow = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-blur', (event, window: BrowserWindow) => window.id), windowId => !!this.windowsMainService.getWindowById(windowId));\n\treadonly onDidFocusWindow = Event.any(\n\t\tEvent.map(Event.filter(Event.map(this.windowsMainService.onDidChangeWindowsCount, () => this.windowsMainService.getLastActiveWindow()), window => !!window), window => window!.id),\n\t\tEvent.filter(Event.fromNodeEventEmitter(app, 'browser-window-focus', (event, window: BrowserWindow) => window.id), windowId => !!this.windowsMainService.getWindowById(windowId))\n\t);\n\n\treadonly onDidResumeOS = Event.fromNodeEventEmitter(powerMonitor, 'resume');\n\n\treadonly onDidChangeColorScheme = this.themeMainService.onDidChangeColorScheme;\n\n\tprivate readonly _onDidChangePassword = this._register(new Emitter<{ account: string; service: string }>());\n\treadonly onDidChangePassword = this._onDidChangePassword.event;\n\n\treadonly onDidChangeDisplay = Event.debounce(Event.any(\n\t\tEvent.filter(Event.fromNodeEventEmitter(screen, 'display-metrics-changed', (event: Electron.Event, display: Display, changedMetrics?: string[]) => changedMetrics), changedMetrics => {\n\t\t\t// Electron will emit 'display-metrics-changed' events even when actually\n\t\t\t// going fullscreen, because the dock hides. However, we do not want to\n\t\t\t// react on this event as there is no change in display bounds.\n\t\t\treturn !(Array.isArray(changedMetrics) && changedMetrics.length === 1 && changedMetrics[0] === 'workArea');\n\t\t}),\n\t\tEvent.fromNodeEventEmitter(screen, 'display-added'),\n\t\tEvent.fromNodeEventEmitter(screen, 'display-removed')\n\t), () => { }, 100);\n\n\t//#endregion\n\n\n\t//#region Window\n\n\tasync getWindows(): Promise<IOpenedWindow[]> {\n\t\tconst windows = this.windowsMainService.getWindows();\n\n\t\treturn windows.map(window => ({\n\t\t\tid: window.id,\n\t\t\tworkspace: window.openedWorkspace ?? toWorkspaceIdentifier(window.backupPath, window.isExtensionDevelopmentHost),\n\t\t\ttitle: window.win?.getTitle() ?? '',\n\t\t\tfilename: window.getRepresentedFilename(),\n\t\t\tdirty: window.isDocumentEdited()\n\t\t}));\n\t}\n\n\tasync getWindowCount(windowId: number | undefined): Promise<number> {\n\t\treturn this.windowsMainService.getWindowCount();\n\t}\n\n\tasync getActiveWindowId(windowId: number | undefined): Promise<number | undefined> {\n\t\tconst activeWindow = BrowserWindow.getFocusedWindow() || this.windowsMainService.getLastActiveWindow();\n\t\tif (activeWindow) {\n\t\t\treturn activeWindow.id;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\topenWindow(windowId: number | undefined, options?: IOpenEmptyWindowOptions): Promise<void>;\n\topenWindow(windowId: number | undefined, toOpen: IWindowOpenable[], options?: IOpenWindowOptions): Promise<void>;\n\topenWindow(windowId: number | undefined, arg1?: IOpenEmptyWindowOptions | IWindowOpenable[], arg2?: IOpenWindowOptions): Promise<void> {\n\t\tif (Array.isArray(arg1)) {\n\t\t\treturn this.doOpenWindow(windowId, arg1, arg2);\n\t\t}\n\n\t\treturn this.doOpenEmptyWindow(windowId, arg1);\n\t}\n\n\tprivate async doOpenWindow(windowId: number | undefined, toOpen: IWindowOpenable[], options: IOpenWindowOptions = Object.create(null)): Promise<void> {\n\t\tif (toOpen.length > 0) {\n\t\t\tawait this.windowsMainService.open({\n\t\t\t\tcontext: OpenContext.API,\n\t\t\t\tcontextWindowId: windowId,\n\t\t\t\turisToOpen: toOpen,\n\t\t\t\tcli: this.environmentMainService.args,\n\t\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t\tforceReuseWindow: options.forceReuseWindow,\n\t\t\t\tpreferNewWindow: options.preferNewWindow,\n\t\t\t\tdiffMode: options.diffMode,\n\t\t\t\tmergeMode: options.mergeMode,\n\t\t\t\taddMode: options.addMode,\n\t\t\t\tgotoLineMode: options.gotoLineMode,\n\t\t\t\tnoRecentEntry: options.noRecentEntry,\n\t\t\t\twaitMarkerFileURI: options.waitMarkerFileURI,\n\t\t\t\tremoteAuthority: options.remoteAuthority || undefined,\n\t\t\t\tforceProfile: options.forceProfile,\n\t\t\t\tforceTempProfile: options.forceTempProfile,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async doOpenEmptyWindow(windowId: number | undefined, options?: IOpenEmptyWindowOptions): Promise<void> {\n\t\tawait this.windowsMainService.openEmptyWindow({\n\t\t\tcontext: OpenContext.API,\n\t\t\tcontextWindowId: windowId\n\t\t}, options);\n\t}\n\n\tasync toggleFullScreen(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\twindow?.toggleFullScreen();\n\t}\n\n\tasync handleTitleDoubleClick(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\twindow?.handleTitleDoubleClick();\n\t}\n\n\tasync isMaximized(windowId: number | undefined): Promise<boolean> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\treturn window.win.isMaximized();\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync maximizeWindow(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\twindow.win.maximize();\n\t\t}\n\t}\n\n\tasync unmaximizeWindow(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\twindow.win.unmaximize();\n\t\t}\n\t}\n\n\tasync minimizeWindow(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\twindow.win.minimize();\n\t\t}\n\t}\n\n\tasync updateWindowControls(windowId: number | undefined, options: { height?: number; backgroundColor?: string; foregroundColor?: string }): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.updateWindowControls(options);\n\t\t}\n\t}\n\n\tasync focusWindow(windowId: number | undefined, options?: { windowId?: number; force?: boolean }): Promise<void> {\n\t\tif (options && typeof options.windowId === 'number') {\n\t\t\twindowId = options.windowId;\n\t\t}\n\n\t\tconst window = this.windowById(windowId);\n\t\twindow?.focus({ force: options?.force ?? false });\n\t}\n\n\tasync setMinimumSize(windowId: number | undefined, width: number | undefined, height: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\tconst [windowWidth, windowHeight] = window.win.getSize();\n\t\t\tconst [minWindowWidth, minWindowHeight] = window.win.getMinimumSize();\n\t\t\tconst [newMinWindowWidth, newMinWindowHeight] = [width ?? minWindowWidth, height ?? minWindowHeight];\n\t\t\tconst [newWindowWidth, newWindowHeight] = [Math.max(windowWidth, newMinWindowWidth), Math.max(windowHeight, newMinWindowHeight)];\n\n\t\t\tif (minWindowWidth !== newMinWindowWidth || minWindowHeight !== newMinWindowHeight) {\n\t\t\t\twindow.win.setMinimumSize(newMinWindowWidth, newMinWindowHeight);\n\t\t\t}\n\t\t\tif (windowWidth !== newWindowWidth || windowHeight !== newWindowHeight) {\n\t\t\t\twindow.win.setSize(newWindowWidth, newWindowHeight);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync saveWindowSplash(windowId: number | undefined, splash: IPartsSplash): Promise<void> {\n\t\tthis.themeMainService.saveWindowSplash(windowId, splash);\n\t}\n\n\t//#endregion\n\n\n\t//#region macOS Shell Command\n\n\tasync installShellCommand(windowId: number | undefined): Promise<void> {\n\t\tconst { source, target } = await this.getShellCommandLink();\n\n\t\t// Only install unless already existing\n\t\ttry {\n\t\t\tconst { symbolicLink } = await SymlinkSupport.stat(source);\n\t\t\tif (symbolicLink && !symbolicLink.dangling) {\n\t\t\t\tconst linkTargetRealPath = await realpath(source);\n\t\t\t\tif (target === linkTargetRealPath) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Different source, delete it first\n\t\t\tawait Promises.unlink(source);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthrow error; // throw on any error but file not found\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tawait Promises.symlink(target, source);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'EACCES' && error.code !== 'ENOENT') {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst { response } = await this.showMessageBox(windowId, {\n\t\t\t\ttype: 'info',\n\t\t\t\tmessage: localize('warnEscalation', \"{0} will now prompt with 'osascript' for Administrator privileges to install the shell command.\", this.productService.nameShort),\n\t\t\t\tbuttons: [\n\t\t\t\t\tlocalize({ key: 'ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\"),\n\t\t\t\t\tlocalize('cancel', \"Cancel\")\n\t\t\t\t]\n\t\t\t});\n\n\t\t\tif (response === 0 /* OK */) {\n\t\t\t\ttry {\n\t\t\t\t\tconst command = `osascript -e \"do shell script \\\\\"mkdir -p /usr/local/bin && ln -sf \\'${target}\\' \\'${source}\\'\\\\\" with administrator privileges\"`;\n\t\t\t\t\tawait promisify(exec)(command);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new Error(localize('cantCreateBinFolder', \"Unable to install the shell command '{0}'.\", source));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync uninstallShellCommand(windowId: number | undefined): Promise<void> {\n\t\tconst { source } = await this.getShellCommandLink();\n\n\t\ttry {\n\t\t\tawait Promises.unlink(source);\n\t\t} catch (error) {\n\t\t\tswitch (error.code) {\n\t\t\t\tcase 'EACCES': {\n\t\t\t\t\tconst { response } = await this.showMessageBox(windowId, {\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tmessage: localize('warnEscalationUninstall', \"{0} will now prompt with 'osascript' for Administrator privileges to uninstall the shell command.\", this.productService.nameShort),\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\tlocalize({ key: 'ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\"),\n\t\t\t\t\t\t\tlocalize('cancel', \"Cancel\")\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\n\t\t\t\t\tif (response === 0 /* OK */) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst command = `osascript -e \"do shell script \\\\\"rm \\'${source}\\'\\\\\" with administrator privileges\"`;\n\t\t\t\t\t\t\tawait promisify(exec)(command);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new Error(localize('cantUninstall', \"Unable to uninstall the shell command '{0}'.\", source));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'ENOENT':\n\t\t\t\t\tbreak; // ignore file not found\n\t\t\t\tdefault:\n\t\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async getShellCommandLink(): Promise<{ readonly source: string; readonly target: string }> {\n\t\tconst target = resolve(this.environmentMainService.appRoot, 'bin', 'code');\n\t\tconst source = `/usr/local/bin/${this.productService.applicationName}`;\n\n\t\t// Ensure source exists\n\t\tconst sourceExists = await Promises.exists(target);\n\t\tif (!sourceExists) {\n\t\t\tthrow new Error(localize('sourceMissing', \"Unable to find shell script in '{0}'\", target));\n\t\t}\n\n\t\treturn { source, target };\n\t}\n\n\t//#region Dialog\n\n\tasync showMessageBox(windowId: number | undefined, options: MessageBoxOptions): Promise<MessageBoxReturnValue> {\n\t\treturn this.dialogMainService.showMessageBox(options, this.toBrowserWindow(windowId));\n\t}\n\n\tasync showSaveDialog(windowId: number | undefined, options: SaveDialogOptions): Promise<SaveDialogReturnValue> {\n\t\treturn this.dialogMainService.showSaveDialog(options, this.toBrowserWindow(windowId));\n\t}\n\n\tasync showOpenDialog(windowId: number | undefined, options: OpenDialogOptions): Promise<OpenDialogReturnValue> {\n\t\treturn this.dialogMainService.showOpenDialog(options, this.toBrowserWindow(windowId));\n\t}\n\n\tprivate toBrowserWindow(windowId: number | undefined): BrowserWindow | undefined {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\treturn window.win;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tasync pickFileFolderAndOpen(windowId: number | undefined, options: INativeOpenDialogOptions): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickFileFolder(options);\n\t\tif (paths) {\n\t\t\tawait this.doOpenPicked(await Promise.all(paths.map(async path => (await SymlinkSupport.existsDirectory(path)) ? { folderUri: URI.file(path) } : { fileUri: URI.file(path) })), options, windowId);\n\t\t}\n\t}\n\n\tasync pickFolderAndOpen(windowId: number | undefined, options: INativeOpenDialogOptions): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickFolder(options);\n\t\tif (paths) {\n\t\t\tawait this.doOpenPicked(paths.map(path => ({ folderUri: URI.file(path) })), options, windowId);\n\t\t}\n\t}\n\n\tasync pickFileAndOpen(windowId: number | undefined, options: INativeOpenDialogOptions): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickFile(options);\n\t\tif (paths) {\n\t\t\tawait this.doOpenPicked(paths.map(path => ({ fileUri: URI.file(path) })), options, windowId);\n\t\t}\n\t}\n\n\tasync pickWorkspaceAndOpen(windowId: number | undefined, options: INativeOpenDialogOptions): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickWorkspace(options);\n\t\tif (paths) {\n\t\t\tawait this.doOpenPicked(paths.map(path => ({ workspaceUri: URI.file(path) })), options, windowId);\n\t\t}\n\t}\n\n\tprivate async doOpenPicked(openable: IWindowOpenable[], options: INativeOpenDialogOptions, windowId: number | undefined): Promise<void> {\n\t\tawait this.windowsMainService.open({\n\t\t\tcontext: OpenContext.DIALOG,\n\t\t\tcontextWindowId: windowId,\n\t\t\tcli: this.environmentMainService.args,\n\t\t\turisToOpen: openable,\n\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t/* remoteAuthority will be determined based on openable */\n\t\t});\n\t}\n\n\t//#endregion\n\n\n\t//#region OS\n\n\tasync showItemInFolder(windowId: number | undefined, path: string): Promise<void> {\n\t\tshell.showItemInFolder(path);\n\t}\n\n\tasync setRepresentedFilename(windowId: number | undefined, path: string): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\twindow?.setRepresentedFilename(path);\n\t}\n\n\tasync setDocumentEdited(windowId: number | undefined, edited: boolean): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\twindow?.setDocumentEdited(edited);\n\t}\n\n\tasync openExternal(windowId: number | undefined, url: string): Promise<boolean> {\n\t\tthis.environmentMainService.unsetSnapExportedVariables();\n\t\tshell.openExternal(url);\n\t\tthis.environmentMainService.restoreSnapExportedVariables();\n\n\t\treturn true;\n\t}\n\n\tmoveItemToTrash(windowId: number | undefined, fullPath: string): Promise<void> {\n\t\treturn shell.trashItem(fullPath);\n\t}\n\n\tasync isAdmin(): Promise<boolean> {\n\t\tlet isAdmin: boolean;\n\t\tif (isWindows) {\n\t\t\tisAdmin = (await import('native-is-elevated'))();\n\t\t} else {\n\t\t\tisAdmin = process.getuid?.() === 0;\n\t\t}\n\n\t\treturn isAdmin;\n\t}\n\n\tasync writeElevated(windowId: number | undefined, source: URI, target: URI, options?: { unlock?: boolean }): Promise<void> {\n\t\tconst sudoPrompt = await import('@vscode/sudo-prompt');\n\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tconst sudoCommand: string[] = [`\"${this.cliPath}\"`];\n\t\t\tif (options?.unlock) {\n\t\t\t\tsudoCommand.push('--file-chmod');\n\t\t\t}\n\n\t\t\tsudoCommand.push('--file-write', `\"${source.fsPath}\"`, `\"${target.fsPath}\"`);\n\n\t\t\tconst promptOptions = {\n\t\t\t\tname: this.productService.nameLong.replace('-', ''),\n\t\t\t\ticns: (isMacintosh && this.environmentMainService.isBuilt) ? join(dirname(this.environmentMainService.appRoot), `${this.productService.nameShort}.icns`) : undefined\n\t\t\t};\n\n\t\t\tsudoPrompt.exec(sudoCommand.join(' '), promptOptions, (error?, stdout?, stderr?) => {\n\t\t\t\tif (stdout) {\n\t\t\t\t\tthis.logService.trace(`[sudo-prompt] received stdout: ${stdout}`);\n\t\t\t\t}\n\n\t\t\t\tif (stderr) {\n\t\t\t\t\tthis.logService.trace(`[sudo-prompt] received stderr: ${stderr}`);\n\t\t\t\t}\n\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tasync isRunningUnderARM64Translation(): Promise<boolean> {\n\t\tif (isLinux || isWindows) {\n\t\t\treturn false;\n\t\t}\n\t\treturn app.runningUnderARM64Translation;\n\t}\n\n\t@memoize\n\tprivate get cliPath(): string {\n\n\t\t// Windows\n\t\tif (isWindows) {\n\t\t\tif (this.environmentMainService.isBuilt) {\n\t\t\t\treturn join(dirname(process.execPath), 'bin', `${this.productService.applicationName}.cmd`);\n\t\t\t}\n\n\t\t\treturn join(this.environmentMainService.appRoot, 'scripts', 'code-cli.bat');\n\t\t}\n\n\t\t// Linux\n\t\tif (isLinux) {\n\t\t\tif (this.environmentMainService.isBuilt) {\n\t\t\t\treturn join(dirname(process.execPath), 'bin', `${this.productService.applicationName}`);\n\t\t\t}\n\n\t\t\treturn join(this.environmentMainService.appRoot, 'scripts', 'code-cli.sh');\n\t\t}\n\n\t\t// macOS\n\t\tif (this.environmentMainService.isBuilt) {\n\t\t\treturn join(this.environmentMainService.appRoot, 'bin', 'code');\n\t\t}\n\n\t\treturn join(this.environmentMainService.appRoot, 'scripts', 'code-cli.sh');\n\t}\n\n\tasync getOSStatistics(): Promise<IOSStatistics> {\n\t\treturn {\n\t\t\ttotalmem: totalmem(),\n\t\t\tfreemem: freemem(),\n\t\t\tloadavg: loadavg()\n\t\t};\n\t}\n\n\tasync getOSProperties(): Promise<IOSProperties> {\n\t\treturn {\n\t\t\tarch: arch(),\n\t\t\tplatform: platform(),\n\t\t\trelease: release(),\n\t\t\ttype: type(),\n\t\t\tcpus: cpus()\n\t\t};\n\t}\n\n\tasync getOSVirtualMachineHint(): Promise<number> {\n\t\treturn virtualMachineHint.value();\n\t}\n\n\tpublic async getOSColorScheme(): Promise<IColorScheme> {\n\t\treturn this.themeMainService.getColorScheme();\n\t}\n\n\n\t// WSL\n\tpublic async hasWSLFeatureInstalled(): Promise<boolean> {\n\t\treturn isWindows && hasWSLFeatureInstalled();\n\t}\n\n\n\t//#endregion\n\n\n\t//#region Process\n\n\tasync killProcess(windowId: number | undefined, pid: number, code: string): Promise<void> {\n\t\tprocess.kill(pid, code);\n\t}\n\n\t//#endregion\n\n\n\t//#region Clipboard\n\n\tasync readClipboardText(windowId: number | undefined, type?: 'selection' | 'clipboard'): Promise<string> {\n\t\treturn clipboard.readText(type);\n\t}\n\n\tasync writeClipboardText(windowId: number | undefined, text: string, type?: 'selection' | 'clipboard'): Promise<void> {\n\t\treturn clipboard.writeText(text, type);\n\t}\n\n\tasync readClipboardFindText(windowId: number | undefined,): Promise<string> {\n\t\treturn clipboard.readFindText();\n\t}\n\n\tasync writeClipboardFindText(windowId: number | undefined, text: string): Promise<void> {\n\t\treturn clipboard.writeFindText(text);\n\t}\n\n\tasync writeClipboardBuffer(windowId: number | undefined, format: string, buffer: VSBuffer, type?: 'selection' | 'clipboard'): Promise<void> {\n\t\treturn clipboard.writeBuffer(format, Buffer.from(buffer.buffer), type);\n\t}\n\n\tasync readClipboardBuffer(windowId: number | undefined, format: string): Promise<VSBuffer> {\n\t\treturn VSBuffer.wrap(clipboard.readBuffer(format));\n\t}\n\n\tasync hasClipboard(windowId: number | undefined, format: string, type?: 'selection' | 'clipboard'): Promise<boolean> {\n\t\treturn clipboard.has(format, type);\n\t}\n\n\t//#endregion\n\n\n\t//#region macOS Touchbar\n\n\tasync newWindowTab(): Promise<void> {\n\t\tawait this.windowsMainService.open({\n\t\t\tcontext: OpenContext.API,\n\t\t\tcli: this.environmentMainService.args,\n\t\t\tforceNewTabbedWindow: true,\n\t\t\tforceEmpty: true,\n\t\t\tremoteAuthority: this.environmentMainService.args.remote || undefined\n\t\t});\n\t}\n\n\tasync showPreviousWindowTab(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('selectPreviousTab:');\n\t}\n\n\tasync showNextWindowTab(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('selectNextTab:');\n\t}\n\n\tasync moveWindowTabToNewWindow(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('moveTabToNewWindow:');\n\t}\n\n\tasync mergeAllWindowTabs(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('mergeAllWindows:');\n\t}\n\n\tasync toggleWindowTabsBar(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('toggleTabBar:');\n\t}\n\n\tasync updateTouchBar(windowId: number | undefined, items: ISerializableCommandAction[][]): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\twindow?.updateTouchBar(items);\n\t}\n\n\t//#endregion\n\n\n\t//#region Lifecycle\n\n\tasync notifyReady(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\twindow?.setReady();\n\t}\n\n\tasync relaunch(windowId: number | undefined, options?: IRelaunchOptions): Promise<void> {\n\t\treturn this.lifecycleMainService.relaunch(options);\n\t}\n\n\tasync reload(windowId: number | undefined, options?: { disableExtensions?: boolean }): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\n\t\t\t// Special case: support `transient` workspaces by preventing\n\t\t\t// the reload and rather go back to an empty window. Transient\n\t\t\t// workspaces should never restore, even when the user wants\n\t\t\t// to reload.\n\t\t\t// For: https://github.com/microsoft/vscode/issues/119695\n\t\t\tif (isWorkspaceIdentifier(window.openedWorkspace)) {\n\t\t\t\tconst configPath = window.openedWorkspace.configPath;\n\t\t\t\tif (configPath.scheme === Schemas.file) {\n\t\t\t\t\tconst workspace = await this.workspacesManagementMainService.resolveLocalWorkspace(configPath);\n\t\t\t\t\tif (workspace?.transient) {\n\t\t\t\t\t\treturn this.openWindow(window.id, { forceReuseWindow: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Proceed normally to reload the window\n\t\t\treturn this.lifecycleMainService.reload(window, options?.disableExtensions !== undefined ? { _: [], 'disable-extensions': options.disableExtensions } : undefined);\n\t\t}\n\t}\n\n\tasync closeWindow(windowId: number | undefined): Promise<void> {\n\t\tthis.closeWindowById(windowId, windowId);\n\t}\n\n\tasync closeWindowById(currentWindowId: number | undefined, targetWindowId?: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(targetWindowId);\n\t\tif (window?.win) {\n\t\t\treturn window.win.close();\n\t\t}\n\t}\n\n\tasync quit(windowId: number | undefined): Promise<void> {\n\n\t\t// If the user selected to exit from an extension development host window, do not quit, but just\n\t\t// close the window unless this is the last window that is opened.\n\t\tconst window = this.windowsMainService.getLastActiveWindow();\n\t\tif (window?.isExtensionDevelopmentHost && this.windowsMainService.getWindowCount() > 1 && window.win) {\n\t\t\twindow.win.close();\n\t\t}\n\n\t\t// Otherwise: normal quit\n\t\telse {\n\t\t\tthis.lifecycleMainService.quit();\n\t\t}\n\t}\n\n\tasync exit(windowId: number | undefined, code: number): Promise<void> {\n\t\tawait this.lifecycleMainService.kill(code);\n\t}\n\n\t//#endregion\n\n\n\t//#region Connectivity\n\n\tasync resolveProxy(windowId: number | undefined, url: string): Promise<string | undefined> {\n\t\tconst window = this.windowById(windowId);\n\t\tconst session = window?.win?.webContents?.session;\n\n\t\treturn session?.resolveProxy(url);\n\t}\n\n\tfindFreePort(windowId: number | undefined, startPort: number, giveUpAfter: number, timeout: number, stride = 1): Promise<number> {\n\t\treturn findFreePort(startPort, giveUpAfter, timeout, stride);\n\t}\n\n\t//#endregion\n\n\n\t//#region Development\n\n\tasync openDevTools(windowId: number | undefined, options?: OpenDevToolsOptions): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\twindow.win.webContents.openDevTools(options);\n\t\t}\n\t}\n\n\tasync toggleDevTools(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\tconst contents = window.win.webContents;\n\t\t\tcontents.toggleDevTools();\n\t\t}\n\t}\n\n\tasync sendInputEvent(windowId: number | undefined, event: MouseInputEvent): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win && (event.type === 'mouseDown' || event.type === 'mouseUp')) {\n\t\t\twindow.win.webContents.sendInputEvent(event);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t// #region Performance\n\n\tasync profileRenderer(windowId: number | undefined, session: string, duration: number): Promise<IV8Profile> {\n\t\tconst win = this.windowById(windowId);\n\t\tif (!win || !win.win) {\n\t\t\tthrow new Error();\n\t\t}\n\t\tconst profiler = new WindowProfiler(win.win, session, this.logService);\n\t\tconst result = await profiler.inspect(duration);\n\t\treturn result;\n\t}\n\n\t// #endregion\n\n\t//#region Registry (windows)\n\n\tasync windowsGetStringRegKey(windowId: number | undefined, hive: 'HKEY_CURRENT_USER' | 'HKEY_LOCAL_MACHINE' | 'HKEY_CLASSES_ROOT' | 'HKEY_USERS' | 'HKEY_CURRENT_CONFIG', path: string, name: string): Promise<string | undefined> {\n\t\tif (!isWindows) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst Registry = await import('@vscode/windows-registry');\n\t\ttry {\n\t\t\treturn Registry.GetStringRegKey(hive, path, name);\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t//#endregion\n\n\tprivate windowById(windowId: number | undefined): ICodeWindow | undefined {\n\t\tif (typeof windowId !== 'number') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.windowsMainService.getWindowById(windowId);\n\t}\n}\n"]}