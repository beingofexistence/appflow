{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/sign/browser/signService.ts"],"names":[],"mappings":"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","file":"signService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IntervalTimer } from 'vs/base/common/async';\nimport { memoize } from 'vs/base/common/decorators';\nimport { FileAccess } from 'vs/base/common/network';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { AbstractSignService, IVsdaValidator } from 'vs/platform/sign/common/abstractSignService';\nimport { ISignService } from 'vs/platform/sign/common/sign';\n\ndeclare module vsdaWeb {\n\texport function sign(salted_message: string): string;\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\texport class validator {\n\t\tfree(): void;\n\t\tconstructor();\n\t\tcreateNewMessage(original: string): string;\n\t\tvalidate(signed_message: string): 'ok' | 'error';\n\t}\n\n\texport type InitInput = RequestInfo | URL | Response | BufferSource | WebAssembly.Module;\n\texport function init(module_or_path?: InitInput | Promise<InitInput>): Promise<unknown>;\n}\n\n// Initialized if/when vsda is loaded\ndeclare const vsda_web: {\n\tdefault: typeof vsdaWeb.init;\n\tsign: typeof vsdaWeb.sign;\n\tvalidator: typeof vsdaWeb.validator;\n};\n\nconst KEY_SIZE = 32;\nconst IV_SIZE = 16;\nconst STEP_SIZE = KEY_SIZE + IV_SIZE;\n\nexport class SignService extends AbstractSignService implements ISignService {\n\tconstructor(@IProductService private readonly productService: IProductService) {\n\t\tsuper();\n\t}\n\tprotected override getValidator(): Promise<IVsdaValidator> {\n\t\treturn this.vsda().then(vsda => {\n\t\t\tconst v = new vsda.validator();\n\t\t\treturn {\n\t\t\t\tcreateNewMessage: arg => v.createNewMessage(arg),\n\t\t\t\tvalidate: arg => v.validate(arg),\n\t\t\t\tdispose: () => v.free(),\n\t\t\t};\n\t\t});\n\t}\n\n\tprotected override signValue(arg: string): Promise<string> {\n\t\treturn this.vsda().then(vsda => vsda.sign(arg));\n\t}\n\n\t@memoize\n\tprivate async vsda(): Promise<typeof vsda_web> {\n\t\tconst checkInterval = new IntervalTimer();\n\t\tlet [wasm] = await Promise.all([\n\t\t\tthis.getWasmBytes(),\n\t\t\tnew Promise<void>((resolve, reject) => {\n\t\t\t\trequire(['vsda'], resolve, reject);\n\n\t\t\t\t// todo@connor4312: there seems to be a bug(?) in vscode-loader with\n\t\t\t\t// require() not resolving in web once the script loads, so check manually\n\t\t\t\tcheckInterval.cancelAndSet(() => {\n\t\t\t\t\tif (typeof vsda_web !== 'undefined') {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t}, 50);\n\t\t\t}).finally(() => checkInterval!.dispose()),\n\t\t]);\n\n\n\t\tconst keyBytes = new TextEncoder().encode(this.productService.serverLicense?.join('\\n') || '');\n\t\tfor (let i = 0; i + STEP_SIZE < keyBytes.length; i += STEP_SIZE) {\n\t\t\tconst key = await crypto.subtle.importKey('raw', keyBytes.slice(i + IV_SIZE, i + IV_SIZE + KEY_SIZE), { name: 'AES-CBC' }, false, ['decrypt']);\n\t\t\twasm = await crypto.subtle.decrypt({ name: 'AES-CBC', iv: keyBytes.slice(i, i + IV_SIZE) }, key, wasm);\n\t\t}\n\n\t\tawait vsda_web.default(wasm);\n\n\t\treturn vsda_web;\n\t}\n\n\tprivate async getWasmBytes(): Promise<ArrayBuffer> {\n\t\tconst response = await fetch(FileAccess.asBrowserUri('vsda/../vsda_bg.wasm').toString(true));\n\t\tif (!response.ok) {\n\t\t\tthrow new Error('error loading vsda');\n\t\t}\n\n\t\treturn response.arrayBuffer();\n\t}\n}\n"]}