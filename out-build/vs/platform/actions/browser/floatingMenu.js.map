{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/actions/browser/floatingMenu.ts"],"names":[],"mappings":"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","file":"floatingMenu.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, append, clearNode } from 'vs/base/browser/dom';\nimport { Widget } from 'vs/base/browser/ui/widget';\nimport { IAction } from 'vs/base/common/actions';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { createAndFillInActionBarActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { IMenu, IMenuService, MenuId } from 'vs/platform/actions/common/actions';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { asCssVariable, asCssVariableWithDefault, buttonBackground, buttonForeground, contrastBorder, editorBackground, editorForeground } from 'vs/platform/theme/common/colorRegistry';\n\nexport class FloatingClickWidget extends Widget {\n\n\tprivate readonly _onClick = this._register(new Emitter<void>());\n\treadonly onClick = this._onClick.event;\n\n\tprivate _domNode: HTMLElement;\n\n\tconstructor(private label: string) {\n\t\tsuper();\n\n\t\tthis._domNode = $('.floating-click-widget');\n\t\tthis._domNode.style.padding = '6px 11px';\n\t\tthis._domNode.style.borderRadius = '2px';\n\t\tthis._domNode.style.cursor = 'pointer';\n\t\tthis._domNode.style.zIndex = '1';\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\trender() {\n\t\tclearNode(this._domNode);\n\t\tthis._domNode.style.backgroundColor = asCssVariableWithDefault(buttonBackground, asCssVariable(editorBackground));\n\t\tthis._domNode.style.color = asCssVariableWithDefault(buttonForeground, asCssVariable(editorForeground));\n\t\tthis._domNode.style.border = `1px solid ${asCssVariable(contrastBorder)}`;\n\n\t\tappend(this._domNode, $('')).textContent = this.label;\n\n\t\tthis.onclick(this._domNode, () => this._onClick.fire());\n\t}\n}\n\nexport abstract class AbstractFloatingClickMenu extends Disposable {\n\tprivate readonly renderEmitter = new Emitter<FloatingClickWidget>();\n\tprotected readonly onDidRender = this.renderEmitter.event;\n\tprivate readonly menu: IMenu;\n\n\tconstructor(\n\t\tmenuId: MenuId,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tsuper();\n\t\tthis.menu = this._register(menuService.createMenu(menuId, contextKeyService));\n\t}\n\n\t/** Should be called in implementation constructors after they initialized */\n\tprotected render() {\n\t\tconst menuDisposables = this._register(new DisposableStore());\n\t\tconst renderMenuAsFloatingClickBtn = () => {\n\t\t\tmenuDisposables.clear();\n\t\t\tif (!this.isVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst actions: IAction[] = [];\n\t\t\tcreateAndFillInActionBarActions(this.menu, { renderShortTitle: true, shouldForwardArgs: true }, actions);\n\t\t\tif (actions.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// todo@jrieken find a way to handle N actions, like showing a context menu\n\t\t\tconst [first] = actions;\n\t\t\tconst widget = this.createWidget(first, menuDisposables);\n\t\t\tmenuDisposables.add(widget);\n\t\t\tmenuDisposables.add(widget.onClick(() => first.run(this.getActionArg())));\n\t\t\twidget.render();\n\t\t};\n\t\tthis._register(this.menu.onDidChange(renderMenuAsFloatingClickBtn));\n\t\trenderMenuAsFloatingClickBtn();\n\t}\n\n\tprotected abstract createWidget(action: IAction, disposables: DisposableStore): FloatingClickWidget;\n\n\tprotected getActionArg(): unknown {\n\t\treturn undefined;\n\t}\n\n\tprotected isVisible() {\n\t\treturn true;\n\t}\n}\n\nexport class FloatingClickMenu extends AbstractFloatingClickMenu {\n\n\tconstructor(\n\t\tprivate readonly options: {\n\t\t\t/** Element the menu should be rendered into. */\n\t\t\tcontainer: HTMLElement;\n\t\t\t/** Menu to show. If no actions are present, the button is hidden. */\n\t\t\tmenuId: MenuId;\n\t\t\t/** Argument provided to the menu action */\n\t\t\tgetActionArg: () => void;\n\t\t},\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tsuper(options.menuId, menuService, contextKeyService);\n\t\tthis.render();\n\t}\n\n\tprotected override createWidget(action: IAction, disposable: DisposableStore): FloatingClickWidget {\n\t\tconst w = this.instantiationService.createInstance(FloatingClickWidget, action.label);\n\t\tconst node = w.getDomNode();\n\t\tthis.options.container.appendChild(node);\n\t\tdisposable.add(toDisposable(() => this.options.container.removeChild(node)));\n\t\treturn w;\n\t}\n\n\tprotected override getActionArg(): unknown {\n\t\treturn this.options.getActionArg();\n\t}\n}\n"]}