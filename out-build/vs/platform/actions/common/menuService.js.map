{"version":3,"sources":["vs/platform/actions/common/menuService.ts"],"names":[],"mappings":"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","file":"menuService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { DebounceEmitter, Emitter, Event } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IMenu, IMenuActionOptions, IMenuChangeEvent, IMenuCreateOptions, IMenuItem, IMenuItemHide, IMenuService, isIMenuItem, isISubmenuItem, ISubmenuItem, MenuId, MenuItemAction, MenuRegistry, SubmenuItemAction } from 'vs/platform/actions/common/actions';\nimport { ICommandAction, ILocalizedString } from 'vs/platform/action/common/action';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ContextKeyExpression, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { Separator, toAction } from 'vs/base/common/actions';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { removeFastWithoutKeepingOrder } from 'vs/base/common/arrays';\nimport { localize } from 'vs/nls';\n\nexport class MenuService implements IMenuService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _hiddenStates: PersistedMenuHideState;\n\n\tconstructor(\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tthis._hiddenStates = new PersistedMenuHideState(storageService);\n\t}\n\n\tcreateMenu(id: MenuId, contextKeyService: IContextKeyService, options?: IMenuCreateOptions): IMenu {\n\t\treturn new MenuImpl(id, this._hiddenStates, { emitEventsForSubmenuChanges: false, eventDebounceDelay: 50, ...options }, this._commandService, contextKeyService);\n\t}\n\n\tresetHiddenStates(ids?: MenuId[]): void {\n\t\tthis._hiddenStates.reset(ids);\n\t}\n}\n\nclass PersistedMenuHideState {\n\n\tprivate static readonly _key = 'menu.hiddenCommands';\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate _ignoreChangeEvent: boolean = false;\n\tprivate _data: Record<string, string[] | undefined>;\n\n\tprivate _hiddenByDefaultCache = new Map<string, boolean>();\n\n\tconstructor(@IStorageService private readonly _storageService: IStorageService) {\n\t\ttry {\n\t\t\tconst raw = _storageService.get(PersistedMenuHideState._key, StorageScope.PROFILE, '{}');\n\t\t\tthis._data = JSON.parse(raw);\n\t\t} catch (err) {\n\t\t\tthis._data = Object.create(null);\n\t\t}\n\n\t\tthis._disposables.add(_storageService.onDidChangeValue(StorageScope.PROFILE, PersistedMenuHideState._key, this._disposables)(() => {\n\t\t\tif (!this._ignoreChangeEvent) {\n\t\t\t\ttry {\n\t\t\t\t\tconst raw = _storageService.get(PersistedMenuHideState._key, StorageScope.PROFILE, '{}');\n\t\t\t\t\tthis._data = JSON.parse(raw);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log('FAILED to read storage after UPDATE', err);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onDidChange.fire();\n\t\t}));\n\t}\n\n\tdispose() {\n\t\tthis._onDidChange.dispose();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprivate _isHiddenByDefault(menu: MenuId, commandId: string) {\n\t\treturn this._hiddenByDefaultCache.get(`${menu.id}/${commandId}`) ?? false;\n\t}\n\n\tsetDefaultState(menu: MenuId, commandId: string, hidden: boolean): void {\n\t\tthis._hiddenByDefaultCache.set(`${menu.id}/${commandId}`, hidden);\n\t}\n\n\tisHidden(menu: MenuId, commandId: string): boolean {\n\t\tconst hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n\t\tconst state = this._data[menu.id]?.includes(commandId) ?? false;\n\t\treturn hiddenByDefault ? !state : state;\n\t}\n\n\tupdateHidden(menu: MenuId, commandId: string, hidden: boolean): void {\n\t\tconst hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n\t\tif (hiddenByDefault) {\n\t\t\thidden = !hidden;\n\t\t}\n\t\tconst entries = this._data[menu.id];\n\t\tif (!hidden) {\n\t\t\t// remove and cleanup\n\t\t\tif (entries) {\n\t\t\t\tconst idx = entries.indexOf(commandId);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tremoveFastWithoutKeepingOrder(entries, idx);\n\t\t\t\t}\n\t\t\t\tif (entries.length === 0) {\n\t\t\t\t\tdelete this._data[menu.id];\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// add unless already added\n\t\t\tif (!entries) {\n\t\t\t\tthis._data[menu.id] = [commandId];\n\t\t\t} else {\n\t\t\t\tconst idx = entries.indexOf(commandId);\n\t\t\t\tif (idx < 0) {\n\t\t\t\t\tentries.push(commandId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._persist();\n\t}\n\n\treset(menus?: MenuId[]): void {\n\t\tif (menus === undefined) {\n\t\t\t// reset all\n\t\t\tthis._data = Object.create(null);\n\t\t\tthis._persist();\n\t\t} else {\n\t\t\t// reset only for a specific menu\n\t\t\tfor (const { id } of menus) {\n\t\t\t\tif (this._data[id]) {\n\t\t\t\t\tdelete this._data[id];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._persist();\n\t\t}\n\t}\n\n\tprivate _persist(): void {\n\t\ttry {\n\t\t\tthis._ignoreChangeEvent = true;\n\t\t\tconst raw = JSON.stringify(this._data);\n\t\t\tthis._storageService.store(PersistedMenuHideState._key, raw, StorageScope.PROFILE, StorageTarget.USER);\n\t\t} finally {\n\t\t\tthis._ignoreChangeEvent = false;\n\t\t}\n\t}\n}\n\ntype MenuItemGroup = [string, Array<IMenuItem | ISubmenuItem>];\n\nclass MenuInfo {\n\n\tprivate _menuGroups: MenuItemGroup[] = [];\n\tprivate _structureContextKeys: Set<string> = new Set();\n\tprivate _preconditionContextKeys: Set<string> = new Set();\n\tprivate _toggledContextKeys: Set<string> = new Set();\n\n\tconstructor(\n\t\tprivate readonly _id: MenuId,\n\t\tprivate readonly _hiddenStates: PersistedMenuHideState,\n\t\tprivate readonly _collectContextKeysForSubmenus: boolean,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t) {\n\t\tthis.refresh();\n\t}\n\n\tget structureContextKeys(): ReadonlySet<string> {\n\t\treturn this._structureContextKeys;\n\t}\n\n\tget preconditionContextKeys(): ReadonlySet<string> {\n\t\treturn this._preconditionContextKeys;\n\t}\n\n\tget toggledContextKeys(): ReadonlySet<string> {\n\t\treturn this._toggledContextKeys;\n\t}\n\n\trefresh(): void {\n\n\t\t// reset\n\t\tthis._menuGroups.length = 0;\n\t\tthis._structureContextKeys.clear();\n\t\tthis._preconditionContextKeys.clear();\n\t\tthis._toggledContextKeys.clear();\n\n\t\tconst menuItems = MenuRegistry.getMenuItems(this._id);\n\n\t\tlet group: MenuItemGroup | undefined;\n\t\tmenuItems.sort(MenuInfo._compareMenuItems);\n\n\t\tfor (const item of menuItems) {\n\t\t\t// group by groupId\n\t\t\tconst groupName = item.group || '';\n\t\t\tif (!group || group[0] !== groupName) {\n\t\t\t\tgroup = [groupName, []];\n\t\t\t\tthis._menuGroups.push(group);\n\t\t\t}\n\t\t\tgroup![1].push(item);\n\n\t\t\t// keep keys for eventing\n\t\t\tthis._collectContextKeys(item);\n\t\t}\n\t}\n\n\tprivate _collectContextKeys(item: IMenuItem | ISubmenuItem): void {\n\n\t\tMenuInfo._fillInKbExprKeys(item.when, this._structureContextKeys);\n\n\t\tif (isIMenuItem(item)) {\n\t\t\t// keep precondition keys for event if applicable\n\t\t\tif (item.command.precondition) {\n\t\t\t\tMenuInfo._fillInKbExprKeys(item.command.precondition, this._preconditionContextKeys);\n\t\t\t}\n\t\t\t// keep toggled keys for event if applicable\n\t\t\tif (item.command.toggled) {\n\t\t\t\tconst toggledExpression: ContextKeyExpression = (item.command.toggled as { condition: ContextKeyExpression }).condition || item.command.toggled;\n\t\t\t\tMenuInfo._fillInKbExprKeys(toggledExpression, this._toggledContextKeys);\n\t\t\t}\n\n\t\t} else if (this._collectContextKeysForSubmenus) {\n\t\t\t// recursively collect context keys from submenus so that this\n\t\t\t// menu fires events when context key changes affect submenus\n\t\t\tMenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeys, this);\n\t\t}\n\t}\n\n\tcreateActionGroups(options: IMenuActionOptions | undefined): [string, Array<MenuItemAction | SubmenuItemAction>][] {\n\t\tconst result: [string, Array<MenuItemAction | SubmenuItemAction>][] = [];\n\n\t\tfor (const group of this._menuGroups) {\n\t\t\tconst [id, items] = group;\n\n\t\t\tconst activeActions: Array<MenuItemAction | SubmenuItemAction> = [];\n\t\t\tfor (const item of items) {\n\t\t\t\tif (this._contextKeyService.contextMatchesRules(item.when)) {\n\t\t\t\t\tconst isMenuItem = isIMenuItem(item);\n\t\t\t\t\tif (isMenuItem) {\n\t\t\t\t\t\tthis._hiddenStates.setDefaultState(this._id, item.command.id, !!item.isHiddenByDefault);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst menuHide = createMenuHide(this._id, isMenuItem ? item.command : item, this._hiddenStates);\n\t\t\t\t\tif (isMenuItem) {\n\t\t\t\t\t\t// MenuItemAction\n\t\t\t\t\t\tactiveActions.push(new MenuItemAction(item.command, item.alt, options, menuHide, this._contextKeyService, this._commandService));\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// SubmenuItemAction\n\t\t\t\t\t\tconst groups = new MenuInfo(item.submenu, this._hiddenStates, this._collectContextKeysForSubmenus, this._commandService, this._contextKeyService).createActionGroups(options);\n\t\t\t\t\t\tconst submenuActions = Separator.join(...groups.map(g => g[1]));\n\t\t\t\t\t\tif (submenuActions.length > 0) {\n\t\t\t\t\t\t\tactiveActions.push(new SubmenuItemAction(item, menuHide, submenuActions));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (activeActions.length > 0) {\n\t\t\t\tresult.push([id, activeActions]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _fillInKbExprKeys(exp: ContextKeyExpression | undefined, set: Set<string>): void {\n\t\tif (exp) {\n\t\t\tfor (const key of exp.keys()) {\n\t\t\t\tset.add(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static _compareMenuItems(a: IMenuItem | ISubmenuItem, b: IMenuItem | ISubmenuItem): number {\n\n\t\tconst aGroup = a.group;\n\t\tconst bGroup = b.group;\n\n\t\tif (aGroup !== bGroup) {\n\n\t\t\t// Falsy groups come last\n\t\t\tif (!aGroup) {\n\t\t\t\treturn 1;\n\t\t\t} else if (!bGroup) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// 'navigation' group comes first\n\t\t\tif (aGroup === 'navigation') {\n\t\t\t\treturn -1;\n\t\t\t} else if (bGroup === 'navigation') {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// lexical sort for groups\n\t\t\tconst value = aGroup.localeCompare(bGroup);\n\t\t\tif (value !== 0) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\n\t\t// sort on priority - default is 0\n\t\tconst aPrio = a.order || 0;\n\t\tconst bPrio = b.order || 0;\n\t\tif (aPrio < bPrio) {\n\t\t\treturn -1;\n\t\t} else if (aPrio > bPrio) {\n\t\t\treturn 1;\n\t\t}\n\n\t\t// sort on titles\n\t\treturn MenuInfo._compareTitles(\n\t\t\tisIMenuItem(a) ? a.command.title : a.title,\n\t\t\tisIMenuItem(b) ? b.command.title : b.title\n\t\t);\n\t}\n\n\tprivate static _compareTitles(a: string | ILocalizedString, b: string | ILocalizedString) {\n\t\tconst aStr = typeof a === 'string' ? a : a.original;\n\t\tconst bStr = typeof b === 'string' ? b : b.original;\n\t\treturn aStr.localeCompare(bStr);\n\t}\n}\n\nclass MenuImpl implements IMenu {\n\n\tprivate readonly _menuInfo: MenuInfo;\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _onDidChange: Emitter<IMenuChangeEvent>;\n\treadonly onDidChange: Event<IMenuChangeEvent>;\n\n\tconstructor(\n\t\tid: MenuId,\n\t\thiddenStates: PersistedMenuHideState,\n\t\toptions: Required<IMenuCreateOptions>,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tthis._menuInfo = new MenuInfo(id, hiddenStates, options.emitEventsForSubmenuChanges, commandService, contextKeyService);\n\n\t\t// Rebuild this menu whenever the menu registry reports an event for this MenuId.\n\t\t// This usually happen while code and extensions are loaded and affects the over\n\t\t// structure of the menu\n\t\tconst rebuildMenuSoon = new RunOnceScheduler(() => {\n\t\t\tthis._menuInfo.refresh();\n\t\t\tthis._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: true, isToggleChange: true });\n\t\t}, options.eventDebounceDelay);\n\t\tthis._disposables.add(rebuildMenuSoon);\n\t\tthis._disposables.add(MenuRegistry.onDidChangeMenu(e => {\n\t\t\tif (e.has(id)) {\n\t\t\t\trebuildMenuSoon.schedule();\n\t\t\t}\n\t\t}));\n\n\t\t// When context keys or storage state changes we need to check if the menu also has changed. However,\n\t\t// we only do that when someone listens on this menu because (1) these events are\n\t\t// firing often and (2) menu are often leaked\n\t\tconst lazyListener = this._disposables.add(new DisposableStore());\n\n\t\tconst merge = (events: IMenuChangeEvent[]): IMenuChangeEvent => {\n\n\t\t\tlet isStructuralChange = false;\n\t\t\tlet isEnablementChange = false;\n\t\t\tlet isToggleChange = false;\n\n\t\t\tfor (const item of events) {\n\t\t\t\tisStructuralChange = isStructuralChange || item.isStructuralChange;\n\t\t\t\tisEnablementChange = isEnablementChange || item.isEnablementChange;\n\t\t\t\tisToggleChange = isToggleChange || item.isToggleChange;\n\t\t\t\tif (isStructuralChange && isEnablementChange && isToggleChange) {\n\t\t\t\t\t// everything is TRUE, no need to continue iterating\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { menu: this, isStructuralChange, isEnablementChange, isToggleChange };\n\t\t};\n\n\t\tconst startLazyListener = () => {\n\n\t\t\tlazyListener.add(contextKeyService.onDidChangeContext(e => {\n\t\t\t\tconst isStructuralChange = e.affectsSome(this._menuInfo.structureContextKeys);\n\t\t\t\tconst isEnablementChange = e.affectsSome(this._menuInfo.preconditionContextKeys);\n\t\t\t\tconst isToggleChange = e.affectsSome(this._menuInfo.toggledContextKeys);\n\t\t\t\tif (isStructuralChange || isEnablementChange || isToggleChange) {\n\t\t\t\t\tthis._onDidChange.fire({ menu: this, isStructuralChange, isEnablementChange, isToggleChange });\n\t\t\t\t}\n\t\t\t}));\n\t\t\tlazyListener.add(hiddenStates.onDidChange(e => {\n\t\t\t\tthis._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: false, isToggleChange: false });\n\t\t\t}));\n\t\t};\n\n\t\tthis._onDidChange = new DebounceEmitter({\n\t\t\t// start/stop context key listener\n\t\t\tonWillAddFirstListener: startLazyListener,\n\t\t\tonDidRemoveLastListener: lazyListener.clear.bind(lazyListener),\n\t\t\tdelay: options.eventDebounceDelay,\n\t\t\tmerge\n\t\t});\n\t\tthis.onDidChange = this._onDidChange.event;\n\t}\n\n\tgetActions(options?: IMenuActionOptions | undefined): [string, (MenuItemAction | SubmenuItemAction)[]][] {\n\t\treturn this._menuInfo.createActionGroups(options);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._onDidChange.dispose();\n\t}\n}\n\nfunction createMenuHide(menu: MenuId, command: ICommandAction | ISubmenuItem, states: PersistedMenuHideState): IMenuItemHide {\n\n\tconst id = isISubmenuItem(command) ? command.submenu.id : command.id;\n\tconst title = typeof command.title === 'string' ? command.title : command.title.value;\n\n\tconst hide = toAction({\n\t\tid: `hide/${menu.id}/${id}`,\n\t\tlabel: localize('hide.label', 'Hide \\'{0}\\'', title),\n\t\trun() { states.updateHidden(menu, id, true); }\n\t});\n\n\tconst toggle = toAction({\n\t\tid: `toggle/${menu.id}/${id}`,\n\t\tlabel: title,\n\t\tget checked() { return !states.isHidden(menu, id); },\n\t\trun() { states.updateHidden(menu, id, !!this.checked); }\n\t});\n\n\treturn {\n\t\thide,\n\t\ttoggle,\n\t\tget isHidden() { return !toggle.checked; },\n\t};\n}\n"]}