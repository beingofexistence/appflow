{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/actions/common/actions.ts"],"names":[],"mappings":"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","file":"actions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction, SubmenuAction } from 'vs/base/common/actions';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { Event, MicrotaskEmitter } from 'vs/base/common/event';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { ICommandAction, ICommandActionTitle, Icon, ILocalizedString } from 'vs/platform/action/common/action';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { CommandsRegistry, ICommandHandlerDescription, ICommandService } from 'vs/platform/commands/common/commands';\nimport { ContextKeyExpr, ContextKeyExpression, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { createDecorator, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingRule, KeybindingsRegistry } from 'vs/platform/keybinding/common/keybindingsRegistry';\n\nexport interface IMenuItem {\n\tcommand: ICommandAction;\n\talt?: ICommandAction;\n\twhen?: ContextKeyExpression;\n\tgroup?: 'navigation' | string;\n\torder?: number;\n\tisHiddenByDefault?: boolean;\n}\n\nexport interface ISubmenuItem {\n\ttitle: string | ICommandActionTitle;\n\tsubmenu: MenuId;\n\ticon?: Icon;\n\twhen?: ContextKeyExpression;\n\tgroup?: 'navigation' | string;\n\torder?: number;\n\tisSelection?: boolean;\n\trememberDefaultAction?: boolean;\t// for dropdown menu: if true the last executed action is remembered as the default action\n}\n\nexport function isIMenuItem(item: any): item is IMenuItem {\n\treturn (item as IMenuItem).command !== undefined;\n}\n\nexport function isISubmenuItem(item: any): item is ISubmenuItem {\n\treturn (item as ISubmenuItem).submenu !== undefined;\n}\n\nexport class MenuId {\n\n\tprivate static readonly _instances = new Map<string, MenuId>();\n\n\tstatic readonly CommandPalette = new MenuId('CommandPalette');\n\tstatic readonly DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\n\tstatic readonly DebugCallStackContext = new MenuId('DebugCallStackContext');\n\tstatic readonly DebugConsoleContext = new MenuId('DebugConsoleContext');\n\tstatic readonly DebugVariablesContext = new MenuId('DebugVariablesContext');\n\tstatic readonly DebugWatchContext = new MenuId('DebugWatchContext');\n\tstatic readonly DebugToolBar = new MenuId('DebugToolBar');\n\tstatic readonly DebugToolBarStop = new MenuId('DebugToolBarStop');\n\tstatic readonly EditorContext = new MenuId('EditorContext');\n\tstatic readonly SimpleEditorContext = new MenuId('SimpleEditorContext');\n\tstatic readonly EditorContent = new MenuId('EditorContent');\n\tstatic readonly EditorLineNumberContext = new MenuId('EditorLineNumberContext');\n\tstatic readonly EditorContextCopy = new MenuId('EditorContextCopy');\n\tstatic readonly EditorContextPeek = new MenuId('EditorContextPeek');\n\tstatic readonly EditorContextShare = new MenuId('EditorContextShare');\n\tstatic readonly EditorTitle = new MenuId('EditorTitle');\n\tstatic readonly EditorTitleRun = new MenuId('EditorTitleRun');\n\tstatic readonly EditorTitleContext = new MenuId('EditorTitleContext');\n\tstatic readonly EditorTitleContextShare = new MenuId('EditorTitleContextShare');\n\tstatic readonly EmptyEditorGroup = new MenuId('EmptyEditorGroup');\n\tstatic readonly EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\n\tstatic readonly EditorTabsBarContext = new MenuId('EditorTabsBarContext');\n\tstatic readonly ExplorerContext = new MenuId('ExplorerContext');\n\tstatic readonly ExplorerContextShare = new MenuId('ExplorerContextShare');\n\tstatic readonly ExtensionContext = new MenuId('ExtensionContext');\n\tstatic readonly GlobalActivity = new MenuId('GlobalActivity');\n\tstatic readonly CommandCenter = new MenuId('CommandCenter');\n\tstatic readonly CommandCenterCenter = new MenuId('CommandCenterCenter');\n\tstatic readonly LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\n\tstatic readonly LayoutControlMenu = new MenuId('LayoutControlMenu');\n\tstatic readonly MenubarMainMenu = new MenuId('MenubarMainMenu');\n\tstatic readonly MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\n\tstatic readonly MenubarDebugMenu = new MenuId('MenubarDebugMenu');\n\tstatic readonly MenubarEditMenu = new MenuId('MenubarEditMenu');\n\tstatic readonly MenubarCopy = new MenuId('MenubarCopy');\n\tstatic readonly MenubarFileMenu = new MenuId('MenubarFileMenu');\n\tstatic readonly MenubarGoMenu = new MenuId('MenubarGoMenu');\n\tstatic readonly MenubarHelpMenu = new MenuId('MenubarHelpMenu');\n\tstatic readonly MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\n\tstatic readonly MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\n\tstatic readonly PanelAlignmentMenu = new MenuId('PanelAlignmentMenu');\n\tstatic readonly PanelPositionMenu = new MenuId('PanelPositionMenu');\n\tstatic readonly MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\n\tstatic readonly MenubarRecentMenu = new MenuId('MenubarRecentMenu');\n\tstatic readonly MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\n\tstatic readonly MenubarShare = new MenuId('MenubarShare');\n\tstatic readonly MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\n\tstatic readonly MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\n\tstatic readonly MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\n\tstatic readonly MenubarViewMenu = new MenuId('MenubarViewMenu');\n\tstatic readonly MenubarHomeMenu = new MenuId('MenubarHomeMenu');\n\tstatic readonly OpenEditorsContext = new MenuId('OpenEditorsContext');\n\tstatic readonly OpenEditorsContextShare = new MenuId('OpenEditorsContextShare');\n\tstatic readonly ProblemsPanelContext = new MenuId('ProblemsPanelContext');\n\tstatic readonly SCMChangeContext = new MenuId('SCMChangeContext');\n\tstatic readonly SCMResourceContext = new MenuId('SCMResourceContext');\n\tstatic readonly SCMResourceContextShare = new MenuId('SCMResourceContextShare');\n\tstatic readonly SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\n\tstatic readonly SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\n\tstatic readonly SCMSourceControl = new MenuId('SCMSourceControl');\n\tstatic readonly SCMTitle = new MenuId('SCMTitle');\n\tstatic readonly SearchContext = new MenuId('SearchContext');\n\tstatic readonly SearchActionMenu = new MenuId('SearchActionContext');\n\tstatic readonly StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\n\tstatic readonly StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\n\tstatic readonly StickyScrollContext = new MenuId('StickyScrollContext');\n\tstatic readonly TestItem = new MenuId('TestItem');\n\tstatic readonly TestItemGutter = new MenuId('TestItemGutter');\n\tstatic readonly TestMessageContext = new MenuId('TestMessageContext');\n\tstatic readonly TestMessageContent = new MenuId('TestMessageContent');\n\tstatic readonly TestPeekElement = new MenuId('TestPeekElement');\n\tstatic readonly TestPeekTitle = new MenuId('TestPeekTitle');\n\tstatic readonly TouchBarContext = new MenuId('TouchBarContext');\n\tstatic readonly TitleBarContext = new MenuId('TitleBarContext');\n\tstatic readonly TitleBarTitleContext = new MenuId('TitleBarTitleContext');\n\tstatic readonly TunnelContext = new MenuId('TunnelContext');\n\tstatic readonly TunnelPrivacy = new MenuId('TunnelPrivacy');\n\tstatic readonly TunnelProtocol = new MenuId('TunnelProtocol');\n\tstatic readonly TunnelPortInline = new MenuId('TunnelInline');\n\tstatic readonly TunnelTitle = new MenuId('TunnelTitle');\n\tstatic readonly TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\n\tstatic readonly TunnelOriginInline = new MenuId('TunnelOriginInline');\n\tstatic readonly ViewItemContext = new MenuId('ViewItemContext');\n\tstatic readonly ViewContainerTitle = new MenuId('ViewContainerTitle');\n\tstatic readonly ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\n\tstatic readonly ViewTitle = new MenuId('ViewTitle');\n\tstatic readonly ViewTitleContext = new MenuId('ViewTitleContext');\n\tstatic readonly CommentEditorActions = new MenuId('CommentEditorActions');\n\tstatic readonly CommentThreadTitle = new MenuId('CommentThreadTitle');\n\tstatic readonly CommentThreadActions = new MenuId('CommentThreadActions');\n\tstatic readonly CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions');\n\tstatic readonly CommentThreadTitleContext = new MenuId('CommentThreadTitleContext');\n\tstatic readonly CommentThreadCommentContext = new MenuId('CommentThreadCommentContext');\n\tstatic readonly CommentTitle = new MenuId('CommentTitle');\n\tstatic readonly CommentActions = new MenuId('CommentActions');\n\tstatic readonly InteractiveToolbar = new MenuId('InteractiveToolbar');\n\tstatic readonly InteractiveCellTitle = new MenuId('InteractiveCellTitle');\n\tstatic readonly InteractiveCellDelete = new MenuId('InteractiveCellDelete');\n\tstatic readonly InteractiveCellExecute = new MenuId('InteractiveCellExecute');\n\tstatic readonly InteractiveInputExecute = new MenuId('InteractiveInputExecute');\n\tstatic readonly NotebookToolbar = new MenuId('NotebookToolbar');\n\tstatic readonly NotebookStickyScrollContext = new MenuId('NotebookStickyScrollContext');\n\tstatic readonly NotebookCellTitle = new MenuId('NotebookCellTitle');\n\tstatic readonly NotebookCellDelete = new MenuId('NotebookCellDelete');\n\tstatic readonly NotebookCellInsert = new MenuId('NotebookCellInsert');\n\tstatic readonly NotebookCellBetween = new MenuId('NotebookCellBetween');\n\tstatic readonly NotebookCellListTop = new MenuId('NotebookCellTop');\n\tstatic readonly NotebookCellExecute = new MenuId('NotebookCellExecute');\n\tstatic readonly NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\n\tstatic readonly NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\n\tstatic readonly NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\n\tstatic readonly NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\n\tstatic readonly NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\n\tstatic readonly NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\n\tstatic readonly NotebookKernelSource = new MenuId('NotebookKernelSource');\n\tstatic readonly BulkEditTitle = new MenuId('BulkEditTitle');\n\tstatic readonly BulkEditContext = new MenuId('BulkEditContext');\n\tstatic readonly TimelineItemContext = new MenuId('TimelineItemContext');\n\tstatic readonly TimelineTitle = new MenuId('TimelineTitle');\n\tstatic readonly TimelineTitleContext = new MenuId('TimelineTitleContext');\n\tstatic readonly TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu');\n\tstatic readonly AccountsContext = new MenuId('AccountsContext');\n\tstatic readonly PanelTitle = new MenuId('PanelTitle');\n\tstatic readonly AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\n\tstatic readonly TerminalInstanceContext = new MenuId('TerminalInstanceContext');\n\tstatic readonly TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\n\tstatic readonly TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\n\tstatic readonly TerminalTabContext = new MenuId('TerminalTabContext');\n\tstatic readonly TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\n\tstatic readonly WebviewContext = new MenuId('WebviewContext');\n\tstatic readonly InlineCompletionsActions = new MenuId('InlineCompletionsActions');\n\tstatic readonly NewFile = new MenuId('NewFile');\n\tstatic readonly MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar');\n\tstatic readonly MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar');\n\tstatic readonly MergeBaseToolbar = new MenuId('MergeBaseToolbar');\n\tstatic readonly MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar');\n\tstatic readonly InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar');\n\tstatic readonly ChatContext = new MenuId('ChatContext');\n\tstatic readonly ChatCodeBlock = new MenuId('ChatCodeblock');\n\tstatic readonly ChatMessageTitle = new MenuId('ChatMessageTitle');\n\tstatic readonly ChatExecute = new MenuId('ChatExecute');\n\tstatic readonly ChatInputSide = new MenuId('ChatInputSide');\n\tstatic readonly AccessibleView = new MenuId('AccessibleView');\n\n\t/**\n\t * Create or reuse a `MenuId` with the given identifier\n\t */\n\tstatic for(identifier: string): MenuId {\n\t\treturn MenuId._instances.get(identifier) ?? new MenuId(identifier);\n\t}\n\n\treadonly id: string;\n\n\t/**\n\t * Create a new `MenuId` with the unique identifier. Will throw if a menu\n\t * with the identifier already exists, use `MenuId.for(ident)` or a unique\n\t * identifier\n\t */\n\tconstructor(identifier: string) {\n\t\tif (MenuId._instances.has(identifier)) {\n\t\t\tthrow new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n\t\t}\n\t\tMenuId._instances.set(identifier, this);\n\t\tthis.id = identifier;\n\t}\n}\n\nexport interface IMenuActionOptions {\n\targ?: any;\n\tshouldForwardArgs?: boolean;\n\trenderShortTitle?: boolean;\n}\n\nexport interface IMenuChangeEvent {\n\treadonly menu: IMenu;\n\treadonly isStructuralChange: boolean;\n\treadonly isToggleChange: boolean;\n\treadonly isEnablementChange: boolean;\n}\n\nexport interface IMenu extends IDisposable {\n\treadonly onDidChange: Event<IMenuChangeEvent>;\n\tgetActions(options?: IMenuActionOptions): [string, Array<MenuItemAction | SubmenuItemAction>][];\n}\n\nexport const IMenuService = createDecorator<IMenuService>('menuService');\n\nexport interface IMenuCreateOptions {\n\temitEventsForSubmenuChanges?: boolean;\n\teventDebounceDelay?: number;\n}\n\nexport interface IMenuService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Create a new menu for the given menu identifier. A menu sends events when it's entries\n\t * have changed (placement, enablement, checked-state). By default it does not send events for\n\t * submenu entries. That is more expensive and must be explicitly enabled with the\n\t * `emitEventsForSubmenuChanges` flag.\n\t */\n\tcreateMenu(id: MenuId, contextKeyService: IContextKeyService, options?: IMenuCreateOptions): IMenu;\n\n\t/**\n\t * Reset **all** menu item hidden states.\n\t */\n\tresetHiddenStates(): void;\n\n\t/**\n\t * Reset the menu's hidden states.\n\t */\n\tresetHiddenStates(menuIds: readonly MenuId[] | undefined): void;\n}\n\ntype ICommandsMap = Map<string, ICommandAction>;\n\nexport interface IMenuRegistryChangeEvent {\n\thas(id: MenuId): boolean;\n}\n\nclass MenuRegistryChangeEvent {\n\n\tprivate static _all = new Map<MenuId, MenuRegistryChangeEvent>();\n\n\tstatic for(id: MenuId): MenuRegistryChangeEvent {\n\t\tlet value = this._all.get(id);\n\t\tif (!value) {\n\t\t\tvalue = new MenuRegistryChangeEvent(id);\n\t\t\tthis._all.set(id, value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tstatic merge(events: IMenuRegistryChangeEvent[]): IMenuRegistryChangeEvent {\n\t\tconst ids = new Set<MenuId>();\n\t\tfor (const item of events) {\n\t\t\tif (item instanceof MenuRegistryChangeEvent) {\n\t\t\t\tids.add(item.id);\n\t\t\t}\n\t\t}\n\t\treturn ids;\n\t}\n\n\treadonly has: (id: MenuId) => boolean;\n\n\tprivate constructor(private readonly id: MenuId) {\n\t\tthis.has = candidate => candidate === id;\n\t}\n}\n\nexport interface IMenuRegistry {\n\treadonly onDidChangeMenu: Event<IMenuRegistryChangeEvent>;\n\taddCommand(userCommand: ICommandAction): IDisposable;\n\tgetCommand(id: string): ICommandAction | undefined;\n\tgetCommands(): ICommandsMap;\n\n\t/**\n\t * @deprecated Use `appendMenuItem` or most likely use `registerAction2` instead. There should be no strong\n\t * reason to use this directly.\n\t */\n\tappendMenuItems(items: Iterable<{ id: MenuId; item: IMenuItem | ISubmenuItem }>): IDisposable;\n\tappendMenuItem(menu: MenuId, item: IMenuItem | ISubmenuItem): IDisposable;\n\tgetMenuItems(loc: MenuId): Array<IMenuItem | ISubmenuItem>;\n}\n\nexport const MenuRegistry: IMenuRegistry = new class implements IMenuRegistry {\n\n\tprivate readonly _commands = new Map<string, ICommandAction>();\n\tprivate readonly _menuItems = new Map<MenuId, LinkedList<IMenuItem | ISubmenuItem>>();\n\tprivate readonly _onDidChangeMenu = new MicrotaskEmitter<IMenuRegistryChangeEvent>({\n\t\tmerge: MenuRegistryChangeEvent.merge\n\t});\n\n\treadonly onDidChangeMenu: Event<IMenuRegistryChangeEvent> = this._onDidChangeMenu.event;\n\n\taddCommand(command: ICommandAction): IDisposable {\n\t\tthis._commands.set(command.id, command);\n\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n\n\t\treturn toDisposable(() => {\n\t\t\tif (this._commands.delete(command.id)) {\n\t\t\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCommand(id: string): ICommandAction | undefined {\n\t\treturn this._commands.get(id);\n\t}\n\n\tgetCommands(): ICommandsMap {\n\t\tconst map = new Map<string, ICommandAction>();\n\t\tthis._commands.forEach((value, key) => map.set(key, value));\n\t\treturn map;\n\t}\n\n\tappendMenuItem(id: MenuId, item: IMenuItem | ISubmenuItem): IDisposable {\n\t\tlet list = this._menuItems.get(id);\n\t\tif (!list) {\n\t\t\tlist = new LinkedList();\n\t\t\tthis._menuItems.set(id, list);\n\t\t}\n\t\tconst rm = list.push(item);\n\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n\t\treturn toDisposable(() => {\n\t\t\trm();\n\t\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n\t\t});\n\t}\n\n\tappendMenuItems(items: Iterable<{ id: MenuId; item: IMenuItem | ISubmenuItem }>): IDisposable {\n\t\tconst result = new DisposableStore();\n\t\tfor (const { id, item } of items) {\n\t\t\tresult.add(this.appendMenuItem(id, item));\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetMenuItems(id: MenuId): Array<IMenuItem | ISubmenuItem> {\n\t\tlet result: Array<IMenuItem | ISubmenuItem>;\n\t\tif (this._menuItems.has(id)) {\n\t\t\tresult = [...this._menuItems.get(id)!];\n\t\t} else {\n\t\t\tresult = [];\n\t\t}\n\t\tif (id === MenuId.CommandPalette) {\n\t\t\t// CommandPalette is special because it shows\n\t\t\t// all commands by default\n\t\t\tthis._appendImplicitItems(result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _appendImplicitItems(result: Array<IMenuItem | ISubmenuItem>) {\n\t\tconst set = new Set<string>();\n\n\t\tfor (const item of result) {\n\t\t\tif (isIMenuItem(item)) {\n\t\t\t\tset.add(item.command.id);\n\t\t\t\tif (item.alt) {\n\t\t\t\t\tset.add(item.alt.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._commands.forEach((command, id) => {\n\t\t\tif (!set.has(id)) {\n\t\t\t\tresult.push({ command });\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport class SubmenuItemAction extends SubmenuAction {\n\n\tconstructor(\n\t\treadonly item: ISubmenuItem,\n\t\treadonly hideActions: IMenuItemHide | undefined,\n\t\tactions: IAction[],\n\t) {\n\t\tsuper(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n\t}\n}\n\nexport interface IMenuItemHide {\n\treadonly isHidden: boolean;\n\treadonly hide: IAction;\n\treadonly toggle: IAction;\n}\n\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nexport class MenuItemAction implements IAction {\n\n\tstatic label(action: ICommandAction, options?: IMenuActionOptions): string {\n\t\treturn options?.renderShortTitle && action.shortTitle\n\t\t\t? (typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value)\n\t\t\t: (typeof action.title === 'string' ? action.title : action.title.value);\n\t}\n\n\treadonly item: ICommandAction;\n\treadonly alt: MenuItemAction | undefined;\n\n\tprivate readonly _options: IMenuActionOptions | undefined;\n\n\treadonly id: string;\n\treadonly label: string;\n\treadonly tooltip: string;\n\treadonly class: string | undefined;\n\treadonly enabled: boolean;\n\treadonly checked?: boolean;\n\n\tconstructor(\n\t\titem: ICommandAction,\n\t\talt: ICommandAction | undefined,\n\t\toptions: IMenuActionOptions | undefined,\n\t\treadonly hideActions: IMenuItemHide | undefined,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService private _commandService: ICommandService\n\t) {\n\t\tthis.id = item.id;\n\t\tthis.label = MenuItemAction.label(item, options);\n\t\tthis.tooltip = (typeof item.tooltip === 'string' ? item.tooltip : item.tooltip?.value) ?? '';\n\t\tthis.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n\t\tthis.checked = undefined;\n\n\t\tlet icon: ThemeIcon | undefined;\n\n\t\tif (item.toggled) {\n\t\t\tconst toggled = ((item.toggled as { condition: ContextKeyExpression }).condition ? item.toggled : { condition: item.toggled }) as {\n\t\t\t\tcondition: ContextKeyExpression; icon?: Icon; tooltip?: string | ILocalizedString; title?: string | ILocalizedString;\n\t\t\t};\n\t\t\tthis.checked = contextKeyService.contextMatchesRules(toggled.condition);\n\t\t\tif (this.checked && toggled.tooltip) {\n\t\t\t\tthis.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n\t\t\t}\n\n\t\t\tif (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n\t\t\t\ticon = toggled.icon;\n\t\t\t}\n\n\t\t\tif (this.checked && toggled.title) {\n\t\t\t\tthis.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n\t\t\t}\n\t\t}\n\n\t\tif (!icon) {\n\t\t\ticon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n\t\t}\n\n\t\tthis.item = item;\n\t\tthis.alt = alt ? new MenuItemAction(alt, undefined, options, hideActions, contextKeyService, _commandService) : undefined;\n\t\tthis._options = options;\n\t\tthis.class = icon && ThemeIcon.asClassName(icon);\n\n\t}\n\n\trun(...args: any[]): Promise<void> {\n\t\tlet runArgs: any[] = [];\n\n\t\tif (this._options?.arg) {\n\t\t\trunArgs = [...runArgs, this._options.arg];\n\t\t}\n\n\t\tif (this._options?.shouldForwardArgs) {\n\t\t\trunArgs = [...runArgs, ...args];\n\t\t}\n\n\t\treturn this._commandService.executeCommand(this.id, ...runArgs);\n\t}\n}\n\n//#region --- IAction2\n\ntype OneOrN<T> = T | T[];\n\ninterface IAction2CommonOptions extends ICommandAction {\n\t/**\n\t * One or many menu items.\n\t */\n\tmenu?: OneOrN<{ id: MenuId; precondition?: null } & Omit<IMenuItem, 'command'>>;\n\n\t/**\n\t * One keybinding.\n\t */\n\tkeybinding?: OneOrN<Omit<IKeybindingRule, 'id'>>;\n\n\t/**\n\t * Metadata about this command, used for API commands or when\n\t * showing keybindings that have no other UX.\n\t */\n\tdescription?: ICommandHandlerDescription;\n}\n\ninterface IBaseAction2Options extends IAction2CommonOptions {\n\n\t/**\n\t * This type is used when an action is not going to show up in the command palette.\n\t * In that case, it's able to use a string for the `title` and `category` properties.\n\t */\n\tf1?: false;\n}\n\ninterface ICommandPaletteOptions extends IAction2CommonOptions {\n\n\t/**\n\t * The title of the command that will be displayed in the command palette after the category.\n\t *  This overrides {@link ICommandAction.title} to ensure a string isn't used so that the title\n\t *  includes the localized value and the original value for users using language packs.\n\t */\n\ttitle: ICommandActionTitle;\n\n\t/**\n\t * The category of the command that will be displayed in the command palette before the title suffixed.\n\t * with a colon This overrides {@link ICommandAction.title} to ensure a string isn't used so that\n\t * the title includes the localized value and the original value for users using language packs.\n\t */\n\tcategory?: keyof typeof Categories | ILocalizedString;\n\n\t/**\n\t * Shorthand to add this command to the command palette. Note: this is not the only way to declare that\n\t * a command should be in the command palette... however, enforcing ILocalizedString in the other scenarios\n\t * is much more challenging and this gets us most of the way there.\n\t */\n\tf1: true;\n}\n\nexport type IAction2Options = ICommandPaletteOptions | IBaseAction2Options;\n\nexport interface IAction2F1RequiredOptions {\n\ttitle: ICommandActionTitle;\n\tcategory?: keyof typeof Categories | ILocalizedString;\n}\n\nexport abstract class Action2 {\n\tconstructor(readonly desc: Readonly<IAction2Options>) { }\n\tabstract run(accessor: ServicesAccessor, ...args: any[]): void;\n}\n\nexport function registerAction2(ctor: { new(): Action2 }): IDisposable {\n\tconst disposables = new DisposableStore();\n\tconst action = new ctor();\n\n\tconst { f1, menu, keybinding, description, ...command } = action.desc;\n\n\t// command\n\tdisposables.add(CommandsRegistry.registerCommand({\n\t\tid: command.id,\n\t\thandler: (accessor, ...args) => action.run(accessor, ...args),\n\t\tdescription: description,\n\t}));\n\n\t// menu\n\tif (Array.isArray(menu)) {\n\t\tfor (const item of menu) {\n\t\t\tdisposables.add(MenuRegistry.appendMenuItem(item.id, { command: { ...command, precondition: item.precondition === null ? undefined : command.precondition }, ...item }));\n\t\t}\n\n\t} else if (menu) {\n\t\tdisposables.add(MenuRegistry.appendMenuItem(menu.id, { command: { ...command, precondition: menu.precondition === null ? undefined : command.precondition }, ...menu }));\n\t}\n\tif (f1) {\n\t\tdisposables.add(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n\t\tdisposables.add(MenuRegistry.addCommand(command));\n\t}\n\n\t// keybinding\n\tif (Array.isArray(keybinding)) {\n\t\tfor (const item of keybinding) {\n\t\t\tdisposables.add(KeybindingsRegistry.registerKeybindingRule({\n\t\t\t\t...item,\n\t\t\t\tid: command.id,\n\t\t\t\twhen: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when\n\t\t\t}));\n\t\t}\n\t} else if (keybinding) {\n\t\tdisposables.add(KeybindingsRegistry.registerKeybindingRule({\n\t\t\t...keybinding,\n\t\t\tid: command.id,\n\t\t\twhen: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when\n\t\t}));\n\t}\n\n\treturn disposables;\n}\n//#endregion\n"]}