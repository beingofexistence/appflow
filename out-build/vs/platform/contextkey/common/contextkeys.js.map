{"version":3,"sources":["vs/platform/contextkey/common/contextkeys.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMnF,QAAA,GAAG,GAAY,IAAI,gBAAG,CAAoB,OAAO,EAAE,aAAE,EAAW,IAAA,cAAQ,EAAC,CAAO,EAAE,IAAuC,CAAC,CAAC,CAAC;IAC5H,QAAA,GAAG,GAAc,IAAI,gBAAG,CAAoB,SAAS,EAAE,aAAE,EAAO,IAAA,cAAQ,EAAC,CAAS,EAAE,IAAuC,CAAC,CAAC,CAAC;IAC9H,QAAA,GAAG,GAAgB,IAAI,gBAAG,CAAoB,WAAW,EAAE,aAAE,EAAS,IAAA,cAAQ,EAAC,CAAW,EAAE,IAAyC,CAAC,CAAC,CAAC;IAExI,QAAA,GAAG,GAAY,IAAI,gBAAG,CAAoB,OAAO,EAAE,aAAE,EAAK,IAAA,cAAQ,EAAC,CAAO,EAAE,IAAuC,CAAC,CAAC,CAAC;IACtH,QAAA,GAAG,GAAkB,IAAI,gBAAG,CAAoB,aAAa,EAAE,aAAE,IAAa,CAAC,aAAE,EAAK,IAAA,cAAQ,EAAC,CAAa,EAAE,IAAiE,CAAC,CAAC,CAAC;IAClL,QAAA,GAAG,GAAY,IAAI,gBAAG,CAAoB,OAAO,EAAE,aAAE,EAAK,IAAA,cAAQ,EAAC,CAAO,EAAE,IAAqC,CAAC,CAAC,CAAC;IACpH,QAAA,GAAG,GAAe,IAAI,gBAAG,CAAoB,UAAU,EAAE,aAAE,EAAQ,IAAA,cAAQ,EAAC,CAAU,EAAE,IAA8C,CAAC,CAAC,CAAC;IAEzI,QAAA,GAAG,GAAoB,IAAI,gBAAG,CAAoB,eAAe,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAChF,QAAA,GAAG,GAAqB,IAAI,gBAAG,CAAmB,oBAAoB,EAAE,EAAE,EAAE,IAAA,cAAQ,EAAC,CAAoB,EAAE,IAAyB,CAAC,CAAC,CAAC;IAEvI,QAAA,GAAG,GAAsB,YAAY,CAAC;IACtC,QAAA,GAAG,GAAmB,IAAI,gBAAG,CAAoB,WAAG,EAAqB,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAY,EAAE,IAA+C,CAAC,CAAC,CAAC","file":"contextkeys.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isIOS, isLinux, isMacintosh, isMobile, isWeb, isWindows } from 'vs/base/common/platform';\nimport { localize } from 'vs/nls';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\n\nexport const IsMacContext = new RawContextKey<boolean>('isMac', isMacintosh, localize('isMac', \"Whether the operating system is macOS\"));\nexport const IsLinuxContext = new RawContextKey<boolean>('isLinux', isLinux, localize('isLinux', \"Whether the operating system is Linux\"));\nexport const IsWindowsContext = new RawContextKey<boolean>('isWindows', isWindows, localize('isWindows', \"Whether the operating system is Windows\"));\n\nexport const IsWebContext = new RawContextKey<boolean>('isWeb', isWeb, localize('isWeb', \"Whether the platform is a web browser\"));\nexport const IsMacNativeContext = new RawContextKey<boolean>('isMacNative', isMacintosh && !isWeb, localize('isMacNative', \"Whether the operating system is macOS on a non-browser platform\"));\nexport const IsIOSContext = new RawContextKey<boolean>('isIOS', isIOS, localize('isIOS', \"Whether the operating system is iOS\"));\nexport const IsMobileContext = new RawContextKey<boolean>('isMobile', isMobile, localize('isMobile', \"Whether the platform is a mobile web browser\"));\n\nexport const IsDevelopmentContext = new RawContextKey<boolean>('isDevelopment', false, true);\nexport const ProductQualityContext = new RawContextKey<string>('productQualityType', '', localize('productQualityType', \"Quality type of VS Code\"));\n\nexport const InputFocusedContextKey = 'inputFocus';\nexport const InputFocusedContext = new RawContextKey<boolean>(InputFocusedContextKey, false, localize('inputFocus', \"Whether keyboard focus is inside an input box\"));\n"]}