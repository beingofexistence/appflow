{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/remote/common/remoteAgentConnection.ts"],"names":[],"mappings":"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","file":"remoteAgentConnection.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { isCancellationError, onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport * as performance from 'vs/base/common/performance';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IIPCLogger } from 'vs/base/parts/ipc/common/ipc';\nimport { Client, ISocket, PersistentProtocol, SocketCloseEventType } from 'vs/base/parts/ipc/common/ipc.net';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { RemoteAuthorityResolverError, RemoteConnection } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { getRemoteServerRootPath } from 'vs/platform/remote/common/remoteHosts';\nimport { IRemoteSocketFactoryService } from 'vs/platform/remote/common/remoteSocketFactoryService';\nimport { ISignService } from 'vs/platform/sign/common/sign';\n\nconst RECONNECT_TIMEOUT = 30 * 1000 /* 30s */;\n\nexport const enum ConnectionType {\n\tManagement = 1,\n\tExtensionHost = 2,\n\tTunnel = 3,\n}\n\nfunction connectionTypeToString(connectionType: ConnectionType): string {\n\tswitch (connectionType) {\n\t\tcase ConnectionType.Management:\n\t\t\treturn 'Management';\n\t\tcase ConnectionType.ExtensionHost:\n\t\t\treturn 'ExtensionHost';\n\t\tcase ConnectionType.Tunnel:\n\t\t\treturn 'Tunnel';\n\t}\n}\n\nexport interface AuthRequest {\n\ttype: 'auth';\n\tauth: string;\n\tdata: string;\n}\n\nexport interface SignRequest {\n\ttype: 'sign';\n\tdata: string;\n\tsignedData: string;\n}\n\nexport interface ConnectionTypeRequest {\n\ttype: 'connectionType';\n\tcommit?: string;\n\tsignedData: string;\n\tdesiredConnectionType?: ConnectionType;\n\targs?: any;\n}\n\nexport interface ErrorMessage {\n\ttype: 'error';\n\treason: string;\n}\n\nexport interface OKMessage {\n\ttype: 'ok';\n}\n\nexport type HandshakeMessage = AuthRequest | SignRequest | ConnectionTypeRequest | ErrorMessage | OKMessage;\n\n\ninterface ISimpleConnectionOptions<T extends RemoteConnection = RemoteConnection> {\n\tcommit: string | undefined;\n\tquality: string | undefined;\n\tconnectTo: T;\n\tconnectionToken: string | undefined;\n\treconnectionToken: string;\n\treconnectionProtocol: PersistentProtocol | null;\n\tremoteSocketFactoryService: IRemoteSocketFactoryService;\n\tsignService: ISignService;\n\tlogService: ILogService;\n}\n\nfunction createTimeoutCancellation(millis: number): CancellationToken {\n\tconst source = new CancellationTokenSource();\n\tsetTimeout(() => source.cancel(), millis);\n\treturn source.token;\n}\n\nfunction combineTimeoutCancellation(a: CancellationToken, b: CancellationToken): CancellationToken {\n\tif (a.isCancellationRequested || b.isCancellationRequested) {\n\t\treturn CancellationToken.Cancelled;\n\t}\n\tconst source = new CancellationTokenSource();\n\ta.onCancellationRequested(() => source.cancel());\n\tb.onCancellationRequested(() => source.cancel());\n\treturn source.token;\n}\n\nclass PromiseWithTimeout<T> {\n\n\tprivate _state: 'pending' | 'resolved' | 'rejected' | 'timedout';\n\tprivate readonly _disposables: DisposableStore;\n\tpublic readonly promise: Promise<T>;\n\tprivate _resolvePromise!: (value: T) => void;\n\tprivate _rejectPromise!: (err: any) => void;\n\n\tpublic get didTimeout(): boolean {\n\t\treturn (this._state === 'timedout');\n\t}\n\n\tconstructor(timeoutCancellationToken: CancellationToken) {\n\t\tthis._state = 'pending';\n\t\tthis._disposables = new DisposableStore();\n\t\tthis.promise = new Promise<T>((resolve, reject) => {\n\t\t\tthis._resolvePromise = resolve;\n\t\t\tthis._rejectPromise = reject;\n\t\t});\n\n\t\tif (timeoutCancellationToken.isCancellationRequested) {\n\t\t\tthis._timeout();\n\t\t} else {\n\t\t\tthis._disposables.add(timeoutCancellationToken.onCancellationRequested(() => this._timeout()));\n\t\t}\n\t}\n\n\tpublic registerDisposable(disposable: IDisposable): void {\n\t\tif (this._state === 'pending') {\n\t\t\tthis._disposables.add(disposable);\n\t\t} else {\n\t\t\tdisposable.dispose();\n\t\t}\n\t}\n\n\tprivate _timeout(): void {\n\t\tif (this._state !== 'pending') {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposables.dispose();\n\t\tthis._state = 'timedout';\n\t\tthis._rejectPromise(this._createTimeoutError());\n\t}\n\n\tprivate _createTimeoutError(): Error {\n\t\tconst err: any = new Error('Time limit reached');\n\t\terr.code = 'ETIMEDOUT';\n\t\terr.syscall = 'connect';\n\t\treturn err;\n\t}\n\n\tpublic resolve(value: T): void {\n\t\tif (this._state !== 'pending') {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposables.dispose();\n\t\tthis._state = 'resolved';\n\t\tthis._resolvePromise(value);\n\t}\n\n\tpublic reject(err: any): void {\n\t\tif (this._state !== 'pending') {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposables.dispose();\n\t\tthis._state = 'rejected';\n\t\tthis._rejectPromise(err);\n\t}\n}\n\nfunction readOneControlMessage<T>(protocol: PersistentProtocol, timeoutCancellationToken: CancellationToken): Promise<T> {\n\tconst result = new PromiseWithTimeout<T>(timeoutCancellationToken);\n\tresult.registerDisposable(protocol.onControlMessage(raw => {\n\t\tconst msg: T = JSON.parse(raw.toString());\n\t\tconst error = getErrorFromMessage(msg);\n\t\tif (error) {\n\t\t\tresult.reject(error);\n\t\t} else {\n\t\t\tresult.resolve(msg);\n\t\t}\n\t}));\n\treturn result.promise;\n}\n\nfunction createSocket<T extends RemoteConnection>(logService: ILogService, remoteSocketFactoryService: IRemoteSocketFactoryService, connectTo: T, path: string, query: string, debugConnectionType: string, debugLabel: string, timeoutCancellationToken: CancellationToken): Promise<ISocket> {\n\tconst result = new PromiseWithTimeout<ISocket>(timeoutCancellationToken);\n\tconst sw = StopWatch.create(false);\n\tlogService.info(`Creating a socket (${debugLabel})...`);\n\tperformance.mark(`code/willCreateSocket/${debugConnectionType}`);\n\n\tremoteSocketFactoryService.connect(connectTo, path, query, debugLabel).then((socket) => {\n\t\tif (result.didTimeout) {\n\t\t\tperformance.mark(`code/didCreateSocketError/${debugConnectionType}`);\n\t\t\tlogService.info(`Creating a socket (${debugLabel}) finished after ${sw.elapsed()} ms, but this is too late and has timed out already.`);\n\t\t\tsocket?.dispose();\n\t\t} else {\n\t\t\tperformance.mark(`code/didCreateSocketOK/${debugConnectionType}`);\n\t\t\tlogService.info(`Creating a socket (${debugLabel}) was successful after ${sw.elapsed()} ms.`);\n\t\t\tresult.resolve(socket);\n\t\t}\n\t}, (err) => {\n\t\tperformance.mark(`code/didCreateSocketError/${debugConnectionType}`);\n\t\tlogService.info(`Creating a socket (${debugLabel}) returned an error after ${sw.elapsed()} ms.`);\n\t\tlogService.error(err);\n\t\tresult.reject(err);\n\t});\n\n\treturn result.promise;\n}\n\nfunction raceWithTimeoutCancellation<T>(promise: Promise<T>, timeoutCancellationToken: CancellationToken): Promise<T> {\n\tconst result = new PromiseWithTimeout<T>(timeoutCancellationToken);\n\tpromise.then(\n\t\t(res) => {\n\t\t\tif (!result.didTimeout) {\n\t\t\t\tresult.resolve(res);\n\t\t\t}\n\t\t},\n\t\t(err) => {\n\t\t\tif (!result.didTimeout) {\n\t\t\t\tresult.reject(err);\n\t\t\t}\n\t\t}\n\t);\n\treturn result.promise;\n}\n\nasync function connectToRemoteExtensionHostAgent<T extends RemoteConnection>(options: ISimpleConnectionOptions<T>, connectionType: ConnectionType, args: any | undefined, timeoutCancellationToken: CancellationToken): Promise<{ protocol: PersistentProtocol; ownsProtocol: boolean }> {\n\tconst logPrefix = connectLogPrefix(options, connectionType);\n\n\toptions.logService.trace(`${logPrefix} 1/6. invoking socketFactory.connect().`);\n\n\tlet socket: ISocket;\n\ttry {\n\t\tsocket = await createSocket(options.logService, options.remoteSocketFactoryService, options.connectTo, getRemoteServerRootPath(options), `reconnectionToken=${options.reconnectionToken}&reconnection=${options.reconnectionProtocol ? 'true' : 'false'}`, connectionTypeToString(connectionType), `renderer-${connectionTypeToString(connectionType)}-${options.reconnectionToken}`, timeoutCancellationToken);\n\t} catch (error) {\n\t\toptions.logService.error(`${logPrefix} socketFactory.connect() failed or timed out. Error:`);\n\t\toptions.logService.error(error);\n\t\tthrow error;\n\t}\n\n\toptions.logService.trace(`${logPrefix} 2/6. socketFactory.connect() was successful.`);\n\n\tlet protocol: PersistentProtocol;\n\tlet ownsProtocol: boolean;\n\tif (options.reconnectionProtocol) {\n\t\toptions.reconnectionProtocol.beginAcceptReconnection(socket, null);\n\t\tprotocol = options.reconnectionProtocol;\n\t\townsProtocol = false;\n\t} else {\n\t\tprotocol = new PersistentProtocol({ socket });\n\t\townsProtocol = true;\n\t}\n\n\toptions.logService.trace(`${logPrefix} 3/6. sending AuthRequest control message.`);\n\tconst message = await raceWithTimeoutCancellation(options.signService.createNewMessage(generateUuid()), timeoutCancellationToken);\n\n\tconst authRequest: AuthRequest = {\n\t\ttype: 'auth',\n\t\tauth: options.connectionToken || '00000000000000000000',\n\t\tdata: message.data\n\t};\n\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(authRequest)));\n\n\ttry {\n\t\tconst msg = await readOneControlMessage<HandshakeMessage>(protocol, combineTimeoutCancellation(timeoutCancellationToken, createTimeoutCancellation(10000)));\n\n\t\tif (msg.type !== 'sign' || typeof msg.data !== 'string') {\n\t\t\tconst error: any = new Error('Unexpected handshake message');\n\t\t\terror.code = 'VSCODE_CONNECTION_ERROR';\n\t\t\tthrow error;\n\t\t}\n\n\t\toptions.logService.trace(`${logPrefix} 4/6. received SignRequest control message.`);\n\n\t\tconst isValid = await raceWithTimeoutCancellation(options.signService.validate(message, msg.signedData), timeoutCancellationToken);\n\t\tif (!isValid) {\n\t\t\tconst error: any = new Error('Refused to connect to unsupported server');\n\t\t\terror.code = 'VSCODE_CONNECTION_ERROR';\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst signed = await raceWithTimeoutCancellation(options.signService.sign(msg.data), timeoutCancellationToken);\n\t\tconst connTypeRequest: ConnectionTypeRequest = {\n\t\t\ttype: 'connectionType',\n\t\t\tcommit: options.commit,\n\t\t\tsignedData: signed,\n\t\t\tdesiredConnectionType: connectionType\n\t\t};\n\t\tif (args) {\n\t\t\tconnTypeRequest.args = args;\n\t\t}\n\n\t\toptions.logService.trace(`${logPrefix} 5/6. sending ConnectionTypeRequest control message.`);\n\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(connTypeRequest)));\n\n\t\treturn { protocol, ownsProtocol };\n\n\t} catch (error) {\n\t\tif (error && error.code === 'ETIMEDOUT') {\n\t\t\toptions.logService.error(`${logPrefix} the handshake timed out. Error:`);\n\t\t\toptions.logService.error(error);\n\t\t}\n\t\tif (error && error.code === 'VSCODE_CONNECTION_ERROR') {\n\t\t\toptions.logService.error(`${logPrefix} received error control message when negotiating connection. Error:`);\n\t\t\toptions.logService.error(error);\n\t\t}\n\t\tif (ownsProtocol) {\n\t\t\tsafeDisposeProtocolAndSocket(protocol);\n\t\t}\n\t\tthrow error;\n\t}\n}\n\ninterface IManagementConnectionResult {\n\tprotocol: PersistentProtocol;\n}\n\nasync function connectToRemoteExtensionHostAgentAndReadOneMessage<T>(options: ISimpleConnectionOptions, connectionType: ConnectionType, args: any | undefined, timeoutCancellationToken: CancellationToken): Promise<{ protocol: PersistentProtocol; firstMessage: T }> {\n\tconst startTime = Date.now();\n\tconst logPrefix = connectLogPrefix(options, connectionType);\n\tconst { protocol, ownsProtocol } = await connectToRemoteExtensionHostAgent(options, connectionType, args, timeoutCancellationToken);\n\tconst result = new PromiseWithTimeout<{ protocol: PersistentProtocol; firstMessage: T }>(timeoutCancellationToken);\n\tresult.registerDisposable(protocol.onControlMessage(raw => {\n\t\tconst msg: T = JSON.parse(raw.toString());\n\t\tconst error = getErrorFromMessage(msg);\n\t\tif (error) {\n\t\t\toptions.logService.error(`${logPrefix} received error control message when negotiating connection. Error:`);\n\t\t\toptions.logService.error(error);\n\t\t\tif (ownsProtocol) {\n\t\t\t\tsafeDisposeProtocolAndSocket(protocol);\n\t\t\t}\n\t\t\tresult.reject(error);\n\t\t} else {\n\t\t\toptions.reconnectionProtocol?.endAcceptReconnection();\n\t\t\toptions.logService.trace(`${logPrefix} 6/6. handshake finished, connection is up and running after ${logElapsed(startTime)}!`);\n\t\t\tresult.resolve({ protocol, firstMessage: msg });\n\t\t}\n\t}));\n\treturn result.promise;\n}\n\nasync function doConnectRemoteAgentManagement(options: ISimpleConnectionOptions, timeoutCancellationToken: CancellationToken): Promise<IManagementConnectionResult> {\n\tconst { protocol } = await connectToRemoteExtensionHostAgentAndReadOneMessage(options, ConnectionType.Management, undefined, timeoutCancellationToken);\n\treturn { protocol };\n}\n\nexport interface IRemoteExtensionHostStartParams {\n\tlanguage: string;\n\tdebugId?: string;\n\tbreak?: boolean;\n\tport?: number | null;\n\tenv?: { [key: string]: string | null };\n}\n\ninterface IExtensionHostConnectionResult {\n\tprotocol: PersistentProtocol;\n\tdebugPort?: number;\n}\n\nasync function doConnectRemoteAgentExtensionHost(options: ISimpleConnectionOptions, startArguments: IRemoteExtensionHostStartParams, timeoutCancellationToken: CancellationToken): Promise<IExtensionHostConnectionResult> {\n\tconst { protocol, firstMessage } = await connectToRemoteExtensionHostAgentAndReadOneMessage<{ debugPort?: number }>(options, ConnectionType.ExtensionHost, startArguments, timeoutCancellationToken);\n\tconst debugPort = firstMessage && firstMessage.debugPort;\n\treturn { protocol, debugPort };\n}\n\nexport interface ITunnelConnectionStartParams {\n\thost: string;\n\tport: number;\n}\n\nasync function doConnectRemoteAgentTunnel(options: ISimpleConnectionOptions, startParams: ITunnelConnectionStartParams, timeoutCancellationToken: CancellationToken): Promise<PersistentProtocol> {\n\tconst startTime = Date.now();\n\tconst logPrefix = connectLogPrefix(options, ConnectionType.Tunnel);\n\tconst { protocol } = await connectToRemoteExtensionHostAgent(options, ConnectionType.Tunnel, startParams, timeoutCancellationToken);\n\toptions.logService.trace(`${logPrefix} 6/6. handshake finished, connection is up and running after ${logElapsed(startTime)}!`);\n\treturn protocol;\n}\n\nexport interface IConnectionOptions<T extends RemoteConnection = RemoteConnection> {\n\tcommit: string | undefined;\n\tquality: string | undefined;\n\taddressProvider: IAddressProvider<T>;\n\tremoteSocketFactoryService: IRemoteSocketFactoryService;\n\tsignService: ISignService;\n\tlogService: ILogService;\n\tipcLogger: IIPCLogger | null;\n}\n\nasync function resolveConnectionOptions<T extends RemoteConnection>(options: IConnectionOptions<T>, reconnectionToken: string, reconnectionProtocol: PersistentProtocol | null): Promise<ISimpleConnectionOptions<T>> {\n\tconst { connectTo, connectionToken } = await options.addressProvider.getAddress();\n\treturn {\n\t\tcommit: options.commit,\n\t\tquality: options.quality,\n\t\tconnectTo,\n\t\tconnectionToken: connectionToken,\n\t\treconnectionToken: reconnectionToken,\n\t\treconnectionProtocol: reconnectionProtocol,\n\t\tremoteSocketFactoryService: options.remoteSocketFactoryService,\n\t\tsignService: options.signService,\n\t\tlogService: options.logService\n\t};\n}\n\nexport interface IAddress<T extends RemoteConnection = RemoteConnection> {\n\tconnectTo: T;\n\tconnectionToken: string | undefined;\n}\n\nexport interface IAddressProvider<T extends RemoteConnection = RemoteConnection> {\n\tgetAddress(): Promise<IAddress<T>>;\n}\n\nexport async function connectRemoteAgentManagement(options: IConnectionOptions, remoteAuthority: string, clientId: string): Promise<ManagementPersistentConnection> {\n\treturn createInitialConnection(\n\t\toptions,\n\t\tasync (simpleOptions) => {\n\t\t\tconst { protocol } = await doConnectRemoteAgentManagement(simpleOptions, CancellationToken.None);\n\t\t\treturn new ManagementPersistentConnection(options, remoteAuthority, clientId, simpleOptions.reconnectionToken, protocol);\n\t\t}\n\t);\n}\n\nexport async function connectRemoteAgentExtensionHost(options: IConnectionOptions, startArguments: IRemoteExtensionHostStartParams): Promise<ExtensionHostPersistentConnection> {\n\treturn createInitialConnection(\n\t\toptions,\n\t\tasync (simpleOptions) => {\n\t\t\tconst { protocol, debugPort } = await doConnectRemoteAgentExtensionHost(simpleOptions, startArguments, CancellationToken.None);\n\t\t\treturn new ExtensionHostPersistentConnection(options, startArguments, simpleOptions.reconnectionToken, protocol, debugPort);\n\t\t}\n\t);\n}\n\n/**\n * Will attempt to connect 5 times. If it fails 5 consecutive times, it will give up.\n */\nasync function createInitialConnection<T extends PersistentConnection, O extends RemoteConnection>(options: IConnectionOptions<O>, connectionFactory: (simpleOptions: ISimpleConnectionOptions<O>) => Promise<T>): Promise<T> {\n\tconst MAX_ATTEMPTS = 5;\n\n\tfor (let attempt = 1; ; attempt++) {\n\t\ttry {\n\t\t\tconst reconnectionToken = generateUuid();\n\t\t\tconst simpleOptions = await resolveConnectionOptions(options, reconnectionToken, null);\n\t\t\tconst result = await connectionFactory(simpleOptions);\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tif (attempt < MAX_ATTEMPTS) {\n\t\t\t\toptions.logService.error(`[remote-connection][attempt ${attempt}] An error occurred in initial connection! Will retry... Error:`);\n\t\t\t\toptions.logService.error(err);\n\t\t\t} else {\n\t\t\t\toptions.logService.error(`[remote-connection][attempt ${attempt}]  An error occurred in initial connection! It will be treated as a permanent error. Error:`);\n\t\t\t\toptions.logService.error(err);\n\t\t\t\tPersistentConnection.triggerPermanentFailure(0, 0, RemoteAuthorityResolverError.isHandled(err));\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport async function connectRemoteAgentTunnel(options: IConnectionOptions, tunnelRemoteHost: string, tunnelRemotePort: number): Promise<PersistentProtocol> {\n\tconst simpleOptions = await resolveConnectionOptions(options, generateUuid(), null);\n\tconst protocol = await doConnectRemoteAgentTunnel(simpleOptions, { host: tunnelRemoteHost, port: tunnelRemotePort }, CancellationToken.None);\n\treturn protocol;\n}\n\nfunction sleep(seconds: number): CancelablePromise<void> {\n\treturn createCancelablePromise(token => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst timeout = setTimeout(resolve, seconds * 1000);\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport const enum PersistentConnectionEventType {\n\tConnectionLost,\n\tReconnectionWait,\n\tReconnectionRunning,\n\tReconnectionPermanentFailure,\n\tConnectionGain\n}\nexport class ConnectionLostEvent {\n\tpublic readonly type = PersistentConnectionEventType.ConnectionLost;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number\n\t) { }\n}\nexport class ReconnectionWaitEvent {\n\tpublic readonly type = PersistentConnectionEventType.ReconnectionWait;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number,\n\t\tpublic readonly durationSeconds: number,\n\t\tprivate readonly cancellableTimer: CancelablePromise<void>\n\t) { }\n\n\tpublic skipWait(): void {\n\t\tthis.cancellableTimer.cancel();\n\t}\n}\nexport class ReconnectionRunningEvent {\n\tpublic readonly type = PersistentConnectionEventType.ReconnectionRunning;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number,\n\t\tpublic readonly attempt: number\n\t) { }\n}\nexport class ConnectionGainEvent {\n\tpublic readonly type = PersistentConnectionEventType.ConnectionGain;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number,\n\t\tpublic readonly attempt: number\n\t) { }\n}\nexport class ReconnectionPermanentFailureEvent {\n\tpublic readonly type = PersistentConnectionEventType.ReconnectionPermanentFailure;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number,\n\t\tpublic readonly attempt: number,\n\t\tpublic readonly handled: boolean\n\t) { }\n}\nexport type PersistentConnectionEvent = ConnectionGainEvent | ConnectionLostEvent | ReconnectionWaitEvent | ReconnectionRunningEvent | ReconnectionPermanentFailureEvent;\n\nexport abstract class PersistentConnection extends Disposable {\n\n\tpublic static triggerPermanentFailure(millisSinceLastIncomingData: number, attempt: number, handled: boolean): void {\n\t\tthis._permanentFailure = true;\n\t\tthis._permanentFailureMillisSinceLastIncomingData = millisSinceLastIncomingData;\n\t\tthis._permanentFailureAttempt = attempt;\n\t\tthis._permanentFailureHandled = handled;\n\t\tthis._instances.forEach(instance => instance._gotoPermanentFailure(this._permanentFailureMillisSinceLastIncomingData, this._permanentFailureAttempt, this._permanentFailureHandled));\n\t}\n\n\tpublic static debugTriggerReconnection() {\n\t\tthis._instances.forEach(instance => instance._beginReconnecting());\n\t}\n\n\tpublic static debugPauseSocketWriting() {\n\t\tthis._instances.forEach(instance => instance._pauseSocketWriting());\n\t}\n\n\tprivate static _permanentFailure: boolean = false;\n\tprivate static _permanentFailureMillisSinceLastIncomingData: number = 0;\n\tprivate static _permanentFailureAttempt: number = 0;\n\tprivate static _permanentFailureHandled: boolean = false;\n\tprivate static _instances: PersistentConnection[] = [];\n\n\tprivate readonly _onDidStateChange = this._register(new Emitter<PersistentConnectionEvent>());\n\tpublic readonly onDidStateChange = this._onDidStateChange.event;\n\n\tprivate _permanentFailure: boolean = false;\n\tprivate get _isPermanentFailure(): boolean {\n\t\treturn this._permanentFailure || PersistentConnection._permanentFailure;\n\t}\n\n\tprivate _isReconnecting: boolean = false;\n\tprivate _isDisposed: boolean = false;\n\n\tconstructor(\n\t\tprivate readonly _connectionType: ConnectionType,\n\t\tprotected readonly _options: IConnectionOptions,\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly protocol: PersistentProtocol,\n\t\tprivate readonly _reconnectionFailureIsFatal: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis._onDidStateChange.fire(new ConnectionGainEvent(this.reconnectionToken, 0, 0));\n\n\t\tthis._register(protocol.onSocketClose((e) => {\n\t\t\tconst logPrefix = commonLogPrefix(this._connectionType, this.reconnectionToken, true);\n\t\t\tif (!e) {\n\t\t\t\tthis._options.logService.info(`${logPrefix} received socket close event.`);\n\t\t\t} else if (e.type === SocketCloseEventType.NodeSocketCloseEvent) {\n\t\t\t\tthis._options.logService.info(`${logPrefix} received socket close event (hadError: ${e.hadError}).`);\n\t\t\t\tif (e.error) {\n\t\t\t\t\tthis._options.logService.error(e.error);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._options.logService.info(`${logPrefix} received socket close event (wasClean: ${e.wasClean}, code: ${e.code}, reason: ${e.reason}).`);\n\t\t\t\tif (e.event) {\n\t\t\t\t\tthis._options.logService.error(e.event);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._beginReconnecting();\n\t\t}));\n\t\tthis._register(protocol.onSocketTimeout((e) => {\n\t\t\tconst logPrefix = commonLogPrefix(this._connectionType, this.reconnectionToken, true);\n\t\t\tthis._options.logService.info(`${logPrefix} received socket timeout event (unacknowledgedMsgCount: ${e.unacknowledgedMsgCount}, timeSinceOldestUnacknowledgedMsg: ${e.timeSinceOldestUnacknowledgedMsg}, timeSinceLastReceivedSomeData: ${e.timeSinceLastReceivedSomeData}).`);\n\t\t\tthis._beginReconnecting();\n\t\t}));\n\n\t\tPersistentConnection._instances.push(this);\n\t\tthis._register(toDisposable(() => {\n\t\t\tconst myIndex = PersistentConnection._instances.indexOf(this);\n\t\t\tif (myIndex >= 0) {\n\t\t\t\tPersistentConnection._instances.splice(myIndex, 1);\n\t\t\t}\n\t\t}));\n\n\t\tif (this._isPermanentFailure) {\n\t\t\tthis._gotoPermanentFailure(PersistentConnection._permanentFailureMillisSinceLastIncomingData, PersistentConnection._permanentFailureAttempt, PersistentConnection._permanentFailureHandled);\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._isDisposed = true;\n\t}\n\n\tprivate async _beginReconnecting(): Promise<void> {\n\t\t// Only have one reconnection loop active at a time.\n\t\tif (this._isReconnecting) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tthis._isReconnecting = true;\n\t\t\tawait this._runReconnectingLoop();\n\t\t} finally {\n\t\t\tthis._isReconnecting = false;\n\t\t}\n\t}\n\n\tprivate async _runReconnectingLoop(): Promise<void> {\n\t\tif (this._isPermanentFailure || this._isDisposed) {\n\t\t\t// no more attempts!\n\t\t\treturn;\n\t\t}\n\t\tconst logPrefix = commonLogPrefix(this._connectionType, this.reconnectionToken, true);\n\t\tthis._options.logService.info(`${logPrefix} starting reconnecting loop. You can get more information with the trace log level.`);\n\t\tthis._onDidStateChange.fire(new ConnectionLostEvent(this.reconnectionToken, this.protocol.getMillisSinceLastIncomingData()));\n\t\tconst TIMES = [0, 5, 5, 10, 10, 10, 10, 10, 30];\n\t\tlet attempt = -1;\n\t\tdo {\n\t\t\tattempt++;\n\t\t\tconst waitTime = (attempt < TIMES.length ? TIMES[attempt] : TIMES[TIMES.length - 1]);\n\t\t\ttry {\n\t\t\t\tif (waitTime > 0) {\n\t\t\t\t\tconst sleepPromise = sleep(waitTime);\n\t\t\t\t\tthis._onDidStateChange.fire(new ReconnectionWaitEvent(this.reconnectionToken, this.protocol.getMillisSinceLastIncomingData(), waitTime, sleepPromise));\n\n\t\t\t\t\tthis._options.logService.info(`${logPrefix} waiting for ${waitTime} seconds before reconnecting...`);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait sleepPromise;\n\t\t\t\t\t} catch { } // User canceled timer\n\t\t\t\t}\n\n\t\t\t\tif (this._isPermanentFailure) {\n\t\t\t\t\tthis._options.logService.error(`${logPrefix} permanent failure occurred while running the reconnecting loop.`);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// connection was lost, let's try to re-establish it\n\t\t\t\tthis._onDidStateChange.fire(new ReconnectionRunningEvent(this.reconnectionToken, this.protocol.getMillisSinceLastIncomingData(), attempt + 1));\n\t\t\t\tthis._options.logService.info(`${logPrefix} resolving connection...`);\n\t\t\t\tconst simpleOptions = await resolveConnectionOptions(this._options, this.reconnectionToken, this.protocol);\n\t\t\t\tthis._options.logService.info(`${logPrefix} connecting to ${simpleOptions.connectTo}...`);\n\t\t\t\tawait this._reconnect(simpleOptions, createTimeoutCancellation(RECONNECT_TIMEOUT));\n\t\t\t\tthis._options.logService.info(`${logPrefix} reconnected!`);\n\t\t\t\tthis._onDidStateChange.fire(new ConnectionGainEvent(this.reconnectionToken, this.protocol.getMillisSinceLastIncomingData(), attempt + 1));\n\n\t\t\t\tbreak;\n\t\t\t} catch (err) {\n\t\t\t\tif (err.code === 'VSCODE_CONNECTION_ERROR') {\n\t\t\t\t\tthis._options.logService.error(`${logPrefix} A permanent error occurred in the reconnecting loop! Will give up now! Error:`);\n\t\t\t\t\tthis._options.logService.error(err);\n\t\t\t\t\tthis._onReconnectionPermanentFailure(this.protocol.getMillisSinceLastIncomingData(), attempt + 1, false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (attempt > 360) {\n\t\t\t\t\t// ReconnectionGraceTime is 3hrs, with 30s between attempts that yields a maximum of 360 attempts\n\t\t\t\t\tthis._options.logService.error(`${logPrefix} An error occurred while reconnecting, but it will be treated as a permanent error because the reconnection grace time has expired! Will give up now! Error:`);\n\t\t\t\t\tthis._options.logService.error(err);\n\t\t\t\t\tthis._onReconnectionPermanentFailure(this.protocol.getMillisSinceLastIncomingData(), attempt + 1, false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (RemoteAuthorityResolverError.isTemporarilyNotAvailable(err)) {\n\t\t\t\t\tthis._options.logService.info(`${logPrefix} A temporarily not available error occurred while trying to reconnect, will try again...`);\n\t\t\t\t\tthis._options.logService.trace(err);\n\t\t\t\t\t// try again!\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif ((err.code === 'ETIMEDOUT' || err.code === 'ENETUNREACH' || err.code === 'ECONNREFUSED' || err.code === 'ECONNRESET') && err.syscall === 'connect') {\n\t\t\t\t\tthis._options.logService.info(`${logPrefix} A network error occurred while trying to reconnect, will try again...`);\n\t\t\t\t\tthis._options.logService.trace(err);\n\t\t\t\t\t// try again!\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (isCancellationError(err)) {\n\t\t\t\t\tthis._options.logService.info(`${logPrefix} A promise cancelation error occurred while trying to reconnect, will try again...`);\n\t\t\t\t\tthis._options.logService.trace(err);\n\t\t\t\t\t// try again!\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (err instanceof RemoteAuthorityResolverError) {\n\t\t\t\t\tthis._options.logService.error(`${logPrefix} A RemoteAuthorityResolverError occurred while trying to reconnect. Will give up now! Error:`);\n\t\t\t\t\tthis._options.logService.error(err);\n\t\t\t\t\tthis._onReconnectionPermanentFailure(this.protocol.getMillisSinceLastIncomingData(), attempt + 1, RemoteAuthorityResolverError.isHandled(err));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis._options.logService.error(`${logPrefix} An unknown error occurred while trying to reconnect, since this is an unknown case, it will be treated as a permanent error! Will give up now! Error:`);\n\t\t\t\tthis._options.logService.error(err);\n\t\t\t\tthis._onReconnectionPermanentFailure(this.protocol.getMillisSinceLastIncomingData(), attempt + 1, false);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!this._isPermanentFailure && !this._isDisposed);\n\t}\n\n\tprivate _onReconnectionPermanentFailure(millisSinceLastIncomingData: number, attempt: number, handled: boolean): void {\n\t\tif (this._reconnectionFailureIsFatal) {\n\t\t\tPersistentConnection.triggerPermanentFailure(millisSinceLastIncomingData, attempt, handled);\n\t\t} else {\n\t\t\tthis._gotoPermanentFailure(millisSinceLastIncomingData, attempt, handled);\n\t\t}\n\t}\n\n\tprivate _gotoPermanentFailure(millisSinceLastIncomingData: number, attempt: number, handled: boolean): void {\n\t\tthis._onDidStateChange.fire(new ReconnectionPermanentFailureEvent(this.reconnectionToken, millisSinceLastIncomingData, attempt, handled));\n\t\tsafeDisposeProtocolAndSocket(this.protocol);\n\t}\n\n\tprivate _pauseSocketWriting(): void {\n\t\tthis.protocol.pauseSocketWriting();\n\t}\n\n\tprotected abstract _reconnect(options: ISimpleConnectionOptions, timeoutCancellationToken: CancellationToken): Promise<void>;\n}\n\nexport class ManagementPersistentConnection extends PersistentConnection {\n\n\tpublic readonly client: Client<RemoteAgentConnectionContext>;\n\n\tconstructor(options: IConnectionOptions, remoteAuthority: string, clientId: string, reconnectionToken: string, protocol: PersistentProtocol) {\n\t\tsuper(ConnectionType.Management, options, reconnectionToken, protocol, /*reconnectionFailureIsFatal*/true);\n\t\tthis.client = this._register(new Client<RemoteAgentConnectionContext>(protocol, {\n\t\t\tremoteAuthority: remoteAuthority,\n\t\t\tclientId: clientId\n\t\t}, options.ipcLogger));\n\t}\n\n\tprotected async _reconnect(options: ISimpleConnectionOptions, timeoutCancellationToken: CancellationToken): Promise<void> {\n\t\tawait doConnectRemoteAgentManagement(options, timeoutCancellationToken);\n\t}\n}\n\nexport class ExtensionHostPersistentConnection extends PersistentConnection {\n\n\tprivate readonly _startArguments: IRemoteExtensionHostStartParams;\n\tpublic readonly debugPort: number | undefined;\n\n\tconstructor(options: IConnectionOptions, startArguments: IRemoteExtensionHostStartParams, reconnectionToken: string, protocol: PersistentProtocol, debugPort: number | undefined) {\n\t\tsuper(ConnectionType.ExtensionHost, options, reconnectionToken, protocol, /*reconnectionFailureIsFatal*/false);\n\t\tthis._startArguments = startArguments;\n\t\tthis.debugPort = debugPort;\n\t}\n\n\tprotected async _reconnect(options: ISimpleConnectionOptions, timeoutCancellationToken: CancellationToken): Promise<void> {\n\t\tawait doConnectRemoteAgentExtensionHost(options, this._startArguments, timeoutCancellationToken);\n\t}\n}\n\nfunction safeDisposeProtocolAndSocket(protocol: PersistentProtocol): void {\n\ttry {\n\t\tprotocol.acceptDisconnect();\n\t\tconst socket = protocol.getSocket();\n\t\tprotocol.dispose();\n\t\tsocket.dispose();\n\t} catch (err) {\n\t\tonUnexpectedError(err);\n\t}\n}\n\nfunction getErrorFromMessage(msg: any): Error | null {\n\tif (msg && msg.type === 'error') {\n\t\tconst error = new Error(`Connection error: ${msg.reason}`);\n\t\t(<any>error).code = 'VSCODE_CONNECTION_ERROR';\n\t\treturn error;\n\t}\n\treturn null;\n}\n\nfunction stringRightPad(str: string, len: number): string {\n\twhile (str.length < len) {\n\t\tstr += ' ';\n\t}\n\treturn str;\n}\n\nfunction _commonLogPrefix(connectionType: ConnectionType, reconnectionToken: string): string {\n\treturn `[remote-connection][${stringRightPad(connectionTypeToString(connectionType), 13)}][${reconnectionToken.substr(0, 5)}…]`;\n}\n\nfunction commonLogPrefix(connectionType: ConnectionType, reconnectionToken: string, isReconnect: boolean): string {\n\treturn `${_commonLogPrefix(connectionType, reconnectionToken)}[${isReconnect ? 'reconnect' : 'initial'}]`;\n}\n\nfunction connectLogPrefix(options: ISimpleConnectionOptions, connectionType: ConnectionType): string {\n\treturn `${commonLogPrefix(connectionType, options.reconnectionToken, !!options.reconnectionProtocol)}[${options.connectTo}]`;\n}\n\nfunction logElapsed(startTime: number): string {\n\treturn `${Date.now() - startTime} ms`;\n}\n"]}