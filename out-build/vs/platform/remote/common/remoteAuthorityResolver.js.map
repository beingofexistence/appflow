{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/remote/common/remoteAuthorityResolver.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOnF,QAAA,GAAG,GAA+B,IAAA,mBAAG,EAA8C,gCAAgC,CAAC,CAAC;IAElI,IAAkB,oBAGjB;IAHD,WAAkB,oBAAoB;QACrC,yEAAS,CAAA;QACT,qEAAO,CAAA;IACR,CAAC,EAHiB,oBAAoB,oCAApB,oBAAoB,QAGrC;IAED,MAAa,GAAG;QAGf,YACiB,EAAU;YAAV,OAAE,GAAF,EAAE,CAAQ;YAHX,SAAI,wCAAgC;QAIhD,CAAC;QAEE,QAAQ;YACd,OAAO,WAAW,IAAI,CAAC,EAAE,GAAG,CAAC;QAC9B,CAAC;KACD;IAVD,kBAUC;IAED,MAAa,GAAG;QAGf,YACiB,IAAY,EACZ,IAAY;YADZ,SAAI,GAAJ,IAAI,CAAQ;YACZ,SAAI,GAAJ,IAAI,CAAQ;YAJb,SAAI,0CAAkC;QAKlD,CAAC;QAEE,QAAQ;YACd,OAAO,aAAa,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC;QAC/C,CAAC;KACD;IAXD,kBAWC;IAiDD,IAAY,gCAMX;IAND,WAAY,gCAAgC;QAC3C,uDAAmB,CAAA;QACnB,iEAA6B,CAAA;QAC7B,uFAAmD,CAAA;QACnD,uEAAmC,CAAA;QACnC,yEAAqC,CAAA;IACtC,CAAC,EANW,gCAAgC,gDAAhC,gCAAgC,QAM3C;IAED,MAAa,GAA6B,SAAQ,WAAE;QAE5C,MAAM,CAAC,cAAc,CAAC,GAAQ;YACpC,OAAO,CAAC,GAAG,YAAY,GAAG,CAA0B,IAAI,GAAG,CAAC,KAAK,KAAK,gCAAgC,CAAC,YAAY,CAAC;QACrH,CAAC;QAEM,MAAM,CAAC,yBAAyB,CAAC,GAAQ;YAC/C,OAAO,CAAC,GAAG,YAAY,GAAG,CAA0B,IAAI,GAAG,CAAC,KAAK,KAAK,gCAAgC,CAAC,uBAAuB,CAAC;QAChI,CAAC;QAEM,MAAM,CAAC,iBAAiB,CAAC,GAAQ;YACvC,OAAO,CAAC,GAAG,YAAY,GAAG,CAA0B,IAAI,GAAG,CAAC,KAAK,KAAK,gCAAgC,CAAC,eAAe,CAAC;QACxH,CAAC;QAEM,MAAM,CAAC,kBAAkB,CAAC,GAAQ;YACxC,OAAO,CAAC,GAAG,YAAY,GAAG,CAA0B,IAAI,GAAG,CAAC,KAAK,KAAK,gCAAgC,CAAC,gBAAgB,CAAC;QACzH,CAAC;QAEM,MAAM,CAAC,SAAS,CAAC,GAAQ;YAC/B,OAAO,CAAC,GAAG,YAAY,GAAG,CAA0B,IAAI,GAAG,CAAC,SAAS,CAAC;QACvE,CAAC;QAQD,YAAY,OAAgB,EAAE,OAAyC,gCAAgC,CAAC,OAAO,EAAE,MAAY;YAC5H,KAAK,CAAC,OAAO,CAAC,CAAC;YAEf,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YAEtB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,KAAK,gCAAgC,CAAC,YAAY,CAAC,IAAI,MAAM,KAAK,IAAI,CAAC;YAE7F,4EAA4E;YAC5E,+IAA+I;YAC/I,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAA0B,SAAS,CAAC,CAAC;QACrE,CAAC;KACD;IAzCD,kBAyCC;IA0BD,SAAgB,GAAG,CAAsB,eAAuB;QAC/D,MAAM,SAAS,GAAG,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;YACrB,OAAO,eAAe,CAAC;SACvB;QACD,OAAO,eAAe,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IAChD,CAAC;IAND,kBAMC","file":"remoteAuthorityResolver.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ErrorNoTelemetry } from 'vs/base/common/errors';\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IRemoteAuthorityResolverService = createDecorator<IRemoteAuthorityResolverService>('remoteAuthorityResolverService');\n\nexport const enum RemoteConnectionType {\n\tWebSocket,\n\tManaged\n}\n\nexport class ManagedRemoteConnection {\n\tpublic readonly type = RemoteConnectionType.Managed;\n\n\tconstructor(\n\t\tpublic readonly id: number\n\t) { }\n\n\tpublic toString(): string {\n\t\treturn `Managed(${this.id})`;\n\t}\n}\n\nexport class WebSocketRemoteConnection {\n\tpublic readonly type = RemoteConnectionType.WebSocket;\n\n\tconstructor(\n\t\tpublic readonly host: string,\n\t\tpublic readonly port: number,\n\t) { }\n\n\tpublic toString(): string {\n\t\treturn `WebSocket(${this.host}:${this.port})`;\n\t}\n}\n\nexport type RemoteConnection = WebSocketRemoteConnection | ManagedRemoteConnection;\n\nexport type RemoteConnectionOfType<T extends RemoteConnectionType> = RemoteConnection & { type: T };\n\nexport interface ResolvedAuthority {\n\treadonly authority: string;\n\treadonly connectTo: RemoteConnection;\n\treadonly connectionToken: string | undefined;\n}\n\nexport interface ResolvedOptions {\n\treadonly extensionHostEnv?: { [key: string]: string | null };\n\treadonly isTrusted?: boolean;\n\treadonly authenticationSession?: { id: string; providerId: string };\n}\n\nexport interface TunnelDescription {\n\tremoteAddress: { port: number; host: string };\n\tlocalAddress: { port: number; host: string } | string;\n\tprivacy?: string;\n\tprotocol?: string;\n}\nexport interface TunnelPrivacy {\n\tthemeIcon: string;\n\tid: string;\n\tlabel: string;\n}\nexport interface TunnelInformation {\n\tenvironmentTunnels?: TunnelDescription[];\n\tfeatures?: {\n\t\televation: boolean;\n\t\tpublic?: boolean;\n\t\tprivacyOptions: TunnelPrivacy[];\n\t};\n}\n\nexport interface ResolverResult {\n\tauthority: ResolvedAuthority;\n\toptions?: ResolvedOptions;\n\ttunnelInformation?: TunnelInformation;\n}\n\nexport interface IRemoteConnectionData {\n\tconnectTo: RemoteConnection;\n\tconnectionToken: string | undefined;\n}\n\nexport enum RemoteAuthorityResolverErrorCode {\n\tUnknown = 'Unknown',\n\tNotAvailable = 'NotAvailable',\n\tTemporarilyNotAvailable = 'TemporarilyNotAvailable',\n\tNoResolverFound = 'NoResolverFound',\n\tInvalidAuthority = 'InvalidAuthority'\n}\n\nexport class RemoteAuthorityResolverError extends ErrorNoTelemetry {\n\n\tpublic static isNotAvailable(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.NotAvailable;\n\t}\n\n\tpublic static isTemporarilyNotAvailable(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable;\n\t}\n\n\tpublic static isNoResolverFound(err: any): err is RemoteAuthorityResolverError {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.NoResolverFound;\n\t}\n\n\tpublic static isInvalidAuthority(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.InvalidAuthority;\n\t}\n\n\tpublic static isHandled(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err.isHandled;\n\t}\n\n\tpublic readonly _message: string | undefined;\n\tpublic readonly _code: RemoteAuthorityResolverErrorCode;\n\tpublic readonly _detail: any;\n\n\tpublic isHandled: boolean;\n\n\tconstructor(message?: string, code: RemoteAuthorityResolverErrorCode = RemoteAuthorityResolverErrorCode.Unknown, detail?: any) {\n\t\tsuper(message);\n\n\t\tthis._message = message;\n\t\tthis._code = code;\n\t\tthis._detail = detail;\n\n\t\tthis.isHandled = (code === RemoteAuthorityResolverErrorCode.NotAvailable) && detail === true;\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tObject.setPrototypeOf(this, RemoteAuthorityResolverError.prototype);\n\t}\n}\n\nexport interface IRemoteAuthorityResolverService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeConnectionData: Event<void>;\n\n\tresolveAuthority(authority: string): Promise<ResolverResult>;\n\tgetConnectionData(authority: string): IRemoteConnectionData | null;\n\t/**\n\t * Get the canonical URI for a `vscode-remote://` URI.\n\t *\n\t * **NOTE**: This can throw e.g. in cases where there is no resolver installed for the specific remote authority.\n\t *\n\t * @param uri The `vscode-remote://` URI\n\t */\n\tgetCanonicalURI(uri: URI): Promise<URI>;\n\n\t_clearResolvedAuthority(authority: string): void;\n\t_setResolvedAuthority(resolvedAuthority: ResolvedAuthority, resolvedOptions?: ResolvedOptions): void;\n\t_setResolvedAuthorityError(authority: string, err: any): void;\n\t_setAuthorityConnectionToken(authority: string, connectionToken: string): void;\n\t_setCanonicalURIProvider(provider: (uri: URI) => Promise<URI>): void;\n}\n\nexport function getRemoteAuthorityPrefix(remoteAuthority: string): string {\n\tconst plusIndex = remoteAuthority.indexOf('+');\n\tif (plusIndex === -1) {\n\t\treturn remoteAuthority;\n\t}\n\treturn remoteAuthority.substring(0, plusIndex);\n}\n"]}