{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/remote/test/common/remoteHosts.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAKhG,KAAK,CAAC,aAAa,EAAE,GAAG,EAAE;QAEzB,IAAI,CAAC,yBAAyB,EAAE,GAAG,EAAE;YACpC,MAAM,CAAC,eAAe,CAAC,IAAA,iBAAG,EAAoB,gBAAgB,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACrG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE;YAChC,MAAM,CAAC,eAAe,CAAC,IAAA,iBAAG,EAAoB,gBAAgB,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACrG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE;YAChC,MAAM,CAAC,eAAe,CAAC,IAAA,iBAAG,EAAoB,gDAAgD,CAAC,EAAE,EAAE,IAAI,EAAE,2CAA2C,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACrK,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yCAAyC,EAAE,GAAG,EAAE;YACpD,MAAM,CAAC,eAAe,CAAC,IAAA,iBAAG,EAA4B,gBAAgB,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YACjH,MAAM,CAAC,eAAe,CAAC,IAAA,iBAAG,EAA4B,WAAW,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5G,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qCAAqC,EAAE,GAAG,EAAE;YAChD,MAAM,CAAC,eAAe,CAAC,IAAA,iBAAG,EAA4B,gBAAgB,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YACjH,MAAM,CAAC,eAAe,CAAC,IAAA,iBAAG,EAA4B,WAAW,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5G,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qCAAqC,EAAE,GAAG,EAAE;YAChD,MAAM,CAAC,eAAe,CAAC,IAAA,iBAAG,EAA4B,gDAAgD,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,2CAA2C,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YACjL,MAAM,CAAC,eAAe,CAAC,IAAA,iBAAG,EAA4B,2CAA2C,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,2CAA2C,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5K,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gFAAgF,EAAE,GAAG,EAAE;YAC3F,MAAM,CAAC,eAAe,CAAC,IAAA,iBAAG,EAA4B,6CAA6C,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,6CAA6C,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;QAChL,CAAC,CAAC,CAAC;IAEJ,CAAC,CAAC,CAAC","file":"remoteHosts.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { parseAuthorityWithOptionalPort, parseAuthorityWithPort } from 'vs/platform/remote/common/remoteHosts';\n\nsuite('remoteHosts', () => {\n\n\ttest('parseAuthority hostname', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithPort('localhost:8080'), { host: 'localhost', port: 8080 });\n\t});\n\n\ttest('parseAuthority ipv4', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithPort('127.0.0.1:8080'), { host: '127.0.0.1', port: 8080 });\n\t});\n\n\ttest('parseAuthority ipv6', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithPort('[2001:0db8:85a3:0000:0000:8a2e:0370:7334]:8080'), { host: '[2001:0db8:85a3:0000:0000:8a2e:0370:7334]', port: 8080 });\n\t});\n\n\ttest('parseAuthorityWithOptionalPort hostname', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('localhost:8080', 123), { host: 'localhost', port: 8080 });\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('localhost', 123), { host: 'localhost', port: 123 });\n\t});\n\n\ttest('parseAuthorityWithOptionalPort ipv4', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('127.0.0.1:8080', 123), { host: '127.0.0.1', port: 8080 });\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('127.0.0.1', 123), { host: '127.0.0.1', port: 123 });\n\t});\n\n\ttest('parseAuthorityWithOptionalPort ipv6', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('[2001:0db8:85a3:0000:0000:8a2e:0370:7334]:8080', 123), { host: '[2001:0db8:85a3:0000:0000:8a2e:0370:7334]', port: 8080 });\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('[2001:0db8:85a3:0000:0000:8a2e:0370:7334]', 123), { host: '[2001:0db8:85a3:0000:0000:8a2e:0370:7334]', port: 123 });\n\t});\n\n\ttest('issue #151748: Error: Remote authorities containing \\'+\\' need to be resolved!', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('codespaces+aaaaa-aaaaa-aaaa-aaaaa-a111aa111', 123), { host: 'codespaces+aaaaa-aaaaa-aaaa-aaaaa-a111aa111', port: 123 });\n\t});\n\n});\n"]}