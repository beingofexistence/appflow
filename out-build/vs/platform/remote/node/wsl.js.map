{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/remote/node/wsl.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG,IAAI,oBAAkD,CAAC;IAEhD,KAAK,UAAU,IAAI,CAAmB,OAAO,GAAG,KAAK;QAC3D,IAAI,oBAAoB,KAAK,SAAS,IAAI,OAAO,EAAE;YAClD,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;SACjD;QACD,OAAO,oBAAoB,CAAC;IAC7B,CAAC;IALD,oBAKC;IAED,KAAK,UAAU,uBAAuB;QACrC,MAAM,kBAAkB,GAAG,qBAAqB,EAAE,CAAC;QACnD,IAAI,kBAAkB,KAAK,SAAS,EAAE;YACrC,OAAO,KAAK,CAAC;SACb;QACD,IAAI,kBAAkB,IAAI,KAAK,EAAE;YAChC,MAAM,UAAU,GAAG,oBAAoB,EAAE,CAAC;YAC1C,IAAI,UAAU,EAAE;gBACf,OAAO,IAAI,OAAO,CAAU,CAAC,CAAC,EAAE;oBAC/B,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC;aACH;SACD;aAAM;YACN,MAAM,OAAO,GAAG,qBAAqB,EAAE,CAAC;YACxC,IAAI,OAAO,EAAE;gBACZ,IAAI;oBACH,IAAI,CAAC,MAAM,cAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE;wBAC5C,OAAO,IAAI,CAAC;qBACZ;iBACD;gBAAC,OAAO,CAAC,EAAE;iBACX;aACD;SACD;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAED,SAAS,qBAAqB;QAC7B,MAAM,SAAS,GAAG,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QAC9D,IAAI,SAAS,EAAE;YACd,OAAO,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9B;QACD,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,SAAS,eAAe,CAAC,OAAe;QACvC,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC7C,IAAI,UAAU,EAAE;YACf,MAAM,sBAAsB,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC;YACpF,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;SACzF;QACD,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,SAAS,oBAAoB;QAC5B,OAAO,eAAe,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACH,SAAS,qBAAqB;QAC7B,OAAO,eAAe,CAAC,uBAAuB,CAAC,CAAC;IACjD,CAAC","file":"wsl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as cp from 'child_process';\nimport { Promises } from 'vs/base/node/pfs';\nimport * as path from 'path';\n\nlet hasWSLFeaturePromise: Promise<boolean> | undefined;\n\nexport async function hasWSLFeatureInstalled(refresh = false): Promise<boolean> {\n\tif (hasWSLFeaturePromise === undefined || refresh) {\n\t\thasWSLFeaturePromise = testWSLFeatureInstalled();\n\t}\n\treturn hasWSLFeaturePromise;\n}\n\nasync function testWSLFeatureInstalled(): Promise<boolean> {\n\tconst windowsBuildNumber = getWindowsBuildNumber();\n\tif (windowsBuildNumber === undefined) {\n\t\treturn false;\n\t}\n\tif (windowsBuildNumber >= 22000) {\n\t\tconst wslExePath = getWSLExecutablePath();\n\t\tif (wslExePath) {\n\t\t\treturn new Promise<boolean>(s => {\n\t\t\t\tcp.execFile(wslExePath, ['--status'], err => s(!err));\n\t\t\t});\n\t\t}\n\t} else {\n\t\tconst dllPath = getLxssManagerDllPath();\n\t\tif (dllPath) {\n\t\t\ttry {\n\t\t\t\tif ((await Promises.stat(dllPath)).isFile()) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction getWindowsBuildNumber(): number | undefined {\n\tconst osVersion = (/(\\d+)\\.(\\d+)\\.(\\d+)/g).exec(os.release());\n\tif (osVersion) {\n\t\treturn parseInt(osVersion[3]);\n\t}\n\treturn undefined;\n}\n\nfunction getSystem32Path(subPath: string): string | undefined {\n\tconst systemRoot = process.env['SystemRoot'];\n\tif (systemRoot) {\n\t\tconst is32ProcessOn64Windows = process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\t\treturn path.join(systemRoot, is32ProcessOn64Windows ? 'Sysnative' : 'System32', subPath);\n\t}\n\treturn undefined;\n}\n\nfunction getWSLExecutablePath(): string | undefined {\n\treturn getSystem32Path('wsl.exe');\n}\n\n/**\n * In builds < 22000 this dll inidcates that WSL is installed\n */\nfunction getLxssManagerDllPath(): string | undefined {\n\treturn getSystem32Path('lxss\\\\LxssManager.dll');\n}\n"]}