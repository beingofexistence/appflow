{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/remote/browser/browserSocketFactory.ts"],"names":[],"mappings":"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","file":"browserSocketFactory.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { ISocket, SocketCloseEvent, SocketCloseEventType, SocketDiagnostics, SocketDiagnosticsEventType } from 'vs/base/parts/ipc/common/ipc.net';\nimport { ISocketFactory } from 'vs/platform/remote/common/remoteSocketFactoryService';\nimport { RemoteAuthorityResolverError, RemoteAuthorityResolverErrorCode, RemoteConnectionType, WebSocketRemoteConnection } from 'vs/platform/remote/common/remoteAuthorityResolver';\n\nexport interface IWebSocketFactory {\n\tcreate(url: string, debugLabel: string): IWebSocket;\n}\n\nexport interface IWebSocketCloseEvent {\n\t/**\n\t * Returns the WebSocket connection close code provided by the server.\n\t */\n\treadonly code: number;\n\t/**\n\t * Returns the WebSocket connection close reason provided by the server.\n\t */\n\treadonly reason: string;\n\t/**\n\t * Returns true if the connection closed cleanly; false otherwise.\n\t */\n\treadonly wasClean: boolean;\n\t/**\n\t * Underlying event.\n\t */\n\treadonly event: any | undefined;\n}\n\nexport interface IWebSocket {\n\treadonly onData: Event<ArrayBuffer>;\n\treadonly onOpen: Event<void>;\n\treadonly onClose: Event<IWebSocketCloseEvent | void>;\n\treadonly onError: Event<any>;\n\n\ttraceSocketEvent?(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void;\n\tsend(data: ArrayBuffer | ArrayBufferView): void;\n\tclose(): void;\n}\n\nclass BrowserWebSocket extends Disposable implements IWebSocket {\n\n\tprivate readonly _onData = new Emitter<ArrayBuffer>();\n\tpublic readonly onData = this._onData.event;\n\n\tprivate readonly _onOpen = this._register(new Emitter<void>());\n\tpublic readonly onOpen = this._onOpen.event;\n\n\tprivate readonly _onClose = this._register(new Emitter<IWebSocketCloseEvent>());\n\tpublic readonly onClose = this._onClose.event;\n\n\tprivate readonly _onError = this._register(new Emitter<any>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _debugLabel: string;\n\tprivate readonly _socket: WebSocket;\n\tprivate readonly _fileReader: FileReader;\n\tprivate readonly _queue: Blob[];\n\tprivate _isReading: boolean;\n\tprivate _isClosed: boolean;\n\n\tprivate readonly _socketMessageListener: (ev: MessageEvent) => void;\n\n\tpublic traceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tSocketDiagnostics.traceSocketEvent(this._socket, this._debugLabel, type, data);\n\t}\n\n\tconstructor(url: string, debugLabel: string) {\n\t\tsuper();\n\t\tthis._debugLabel = debugLabel;\n\t\tthis._socket = new WebSocket(url);\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Created, { type: 'BrowserWebSocket', url });\n\t\tthis._fileReader = new FileReader();\n\t\tthis._queue = [];\n\t\tthis._isReading = false;\n\t\tthis._isClosed = false;\n\n\t\tthis._fileReader.onload = (event) => {\n\t\t\tthis._isReading = false;\n\t\t\tconst buff = <ArrayBuffer>(<any>event.target).result;\n\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Read, buff);\n\t\t\tthis._onData.fire(buff);\n\n\t\t\tif (this._queue.length > 0) {\n\t\t\t\tenqueue(this._queue.shift()!);\n\t\t\t}\n\t\t};\n\n\t\tconst enqueue = (blob: Blob) => {\n\t\t\tif (this._isReading) {\n\t\t\t\tthis._queue.push(blob);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._isReading = true;\n\t\t\tthis._fileReader.readAsArrayBuffer(blob);\n\t\t};\n\n\t\tthis._socketMessageListener = (ev: MessageEvent) => {\n\t\t\tconst blob = (<Blob>ev.data);\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.BrowserWebSocketBlobReceived, { type: blob.type, size: blob.size });\n\t\t\tenqueue(blob);\n\t\t};\n\t\tthis._socket.addEventListener('message', this._socketMessageListener);\n\n\t\tthis._register(dom.addDisposableListener(this._socket, 'open', (e) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Open);\n\t\t\tthis._onOpen.fire();\n\t\t}));\n\n\t\t// WebSockets emit error events that do not contain any real information\n\t\t// Our only chance of getting to the root cause of an error is to\n\t\t// listen to the close event which gives out some real information:\n\t\t// - https://www.w3.org/TR/websockets/#closeevent\n\t\t// - https://tools.ietf.org/html/rfc6455#section-11.7\n\t\t//\n\t\t// But the error event is emitted before the close event, so we therefore\n\t\t// delay the error event processing in the hope of receiving a close event\n\t\t// with more information\n\n\t\tlet pendingErrorEvent: any | null = null;\n\n\t\tconst sendPendingErrorNow = () => {\n\t\t\tconst err = pendingErrorEvent;\n\t\t\tpendingErrorEvent = null;\n\t\t\tthis._onError.fire(err);\n\t\t};\n\n\t\tconst errorRunner = this._register(new RunOnceScheduler(sendPendingErrorNow, 0));\n\n\t\tconst sendErrorSoon = (err: any) => {\n\t\t\terrorRunner.cancel();\n\t\t\tpendingErrorEvent = err;\n\t\t\terrorRunner.schedule();\n\t\t};\n\n\t\tconst sendErrorNow = (err: any) => {\n\t\t\terrorRunner.cancel();\n\t\t\tpendingErrorEvent = err;\n\t\t\tsendPendingErrorNow();\n\t\t};\n\n\t\tthis._register(dom.addDisposableListener(this._socket, 'close', (e: CloseEvent) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Close, { code: e.code, reason: e.reason, wasClean: e.wasClean });\n\n\t\t\tthis._isClosed = true;\n\n\t\t\tif (pendingErrorEvent) {\n\t\t\t\tif (!window.navigator.onLine) {\n\t\t\t\t\t// The browser is offline => this is a temporary error which might resolve itself\n\t\t\t\t\tsendErrorNow(new RemoteAuthorityResolverError('Browser is offline', RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable, e));\n\t\t\t\t} else {\n\t\t\t\t\t// An error event is pending\n\t\t\t\t\t// The browser appears to be online...\n\t\t\t\t\tif (!e.wasClean) {\n\t\t\t\t\t\t// Let's be optimistic and hope that perhaps the server could not be reached or something\n\t\t\t\t\t\tsendErrorNow(new RemoteAuthorityResolverError(e.reason || `WebSocket close with status code ${e.code}`, RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable, e));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// this was a clean close => send existing error\n\t\t\t\t\t\terrorRunner.cancel();\n\t\t\t\t\t\tsendPendingErrorNow();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onClose.fire({ code: e.code, reason: e.reason, wasClean: e.wasClean, event: e });\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(this._socket, 'error', (err) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Error, { message: err?.message });\n\t\t\tsendErrorSoon(err);\n\t\t}));\n\t}\n\n\tsend(data: ArrayBuffer | ArrayBufferView): void {\n\t\tif (this._isClosed) {\n\t\t\t// Refuse to write data to closed WebSocket...\n\t\t\treturn;\n\t\t}\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Write, data);\n\t\tthis._socket.send(data);\n\t}\n\n\tclose(): void {\n\t\tthis._isClosed = true;\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Close);\n\t\tthis._socket.close();\n\t\tthis._socket.removeEventListener('message', this._socketMessageListener);\n\t\tthis.dispose();\n\t}\n}\n\nconst defaultWebSocketFactory = new class implements IWebSocketFactory {\n\tcreate(url: string, debugLabel: string): IWebSocket {\n\t\treturn new BrowserWebSocket(url, debugLabel);\n\t}\n};\n\nclass BrowserSocket implements ISocket {\n\n\tpublic readonly socket: IWebSocket;\n\tpublic readonly debugLabel: string;\n\n\tpublic traceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tif (typeof this.socket.traceSocketEvent === 'function') {\n\t\t\tthis.socket.traceSocketEvent(type, data);\n\t\t} else {\n\t\t\tSocketDiagnostics.traceSocketEvent(this.socket, this.debugLabel, type, data);\n\t\t}\n\t}\n\n\tconstructor(socket: IWebSocket, debugLabel: string) {\n\t\tthis.socket = socket;\n\t\tthis.debugLabel = debugLabel;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.close();\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this.socket.onData((data) => listener(VSBuffer.wrap(new Uint8Array(data))));\n\t}\n\n\tpublic onClose(listener: (e: SocketCloseEvent) => void): IDisposable {\n\t\tconst adapter = (e: IWebSocketCloseEvent | void) => {\n\t\t\tif (typeof e === 'undefined') {\n\t\t\t\tlistener(e);\n\t\t\t} else {\n\t\t\t\tlistener({\n\t\t\t\t\ttype: SocketCloseEventType.WebSocketCloseEvent,\n\t\t\t\t\tcode: e.code,\n\t\t\t\t\treason: e.reason,\n\t\t\t\t\twasClean: e.wasClean,\n\t\t\t\t\tevent: e.event\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\treturn this.socket.onClose(adapter);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tthis.socket.send(buffer.buffer);\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.close();\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n}\n\n\nexport class BrowserSocketFactory implements ISocketFactory<RemoteConnectionType.WebSocket> {\n\n\tprivate readonly _webSocketFactory: IWebSocketFactory;\n\n\tconstructor(webSocketFactory: IWebSocketFactory | null | undefined) {\n\t\tthis._webSocketFactory = webSocketFactory || defaultWebSocketFactory;\n\t}\n\n\tsupports(connectTo: WebSocketRemoteConnection): boolean {\n\t\treturn true;\n\t}\n\n\tconnect({ host, port }: WebSocketRemoteConnection, path: string, query: string, debugLabel: string): Promise<ISocket> {\n\t\treturn new Promise<ISocket>((resolve, reject) => {\n\t\t\tconst webSocketSchema = (/^https:/.test(window.location.href) ? 'wss' : 'ws');\n\t\t\tconst socket = this._webSocketFactory.create(`${webSocketSchema}://${(/:/.test(host) && !/\\[/.test(host)) ? `[${host}]` : host}:${port}${path}?${query}&skipWebSocketFrames=false`, debugLabel);\n\t\t\tconst errorListener = socket.onError(reject);\n\t\t\tsocket.onOpen(() => {\n\t\t\t\terrorListener.dispose();\n\t\t\t\tresolve(new BrowserSocket(socket, debugLabel));\n\t\t\t});\n\t\t});\n\t}\n}\n"]}