{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/debug/common/extensionHostDebug.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKnF,QAAA,GAAG,GAA0B,IAAA,mBAAG,EAAyC,2BAA2B,CAAC,CAAC","file":"extensionHostDebug.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IExtensionHostDebugService = createDecorator<IExtensionHostDebugService>('extensionHostDebugService');\n\nexport interface IAttachSessionEvent {\n\tsessionId: string;\n\tsubId?: string;\n\tport: number;\n}\n\nexport interface ITerminateSessionEvent {\n\tsessionId: string;\n\tsubId?: string;\n}\n\nexport interface IReloadSessionEvent {\n\tsessionId: string;\n}\n\nexport interface ICloseSessionEvent {\n\tsessionId: string;\n}\n\nexport interface IOpenExtensionWindowResult {\n\trendererDebugPort?: number;\n\tsuccess: boolean;\n}\n\nexport interface IExtensionHostDebugService {\n\treadonly _serviceBrand: undefined;\n\n\treload(sessionId: string): void;\n\treadonly onReload: Event<IReloadSessionEvent>;\n\n\tclose(sessionId: string): void;\n\treadonly onClose: Event<ICloseSessionEvent>;\n\n\tattachSession(sessionId: string, port: number, subId?: string): void;\n\treadonly onAttachSession: Event<IAttachSessionEvent>;\n\n\tterminateSession(sessionId: string, subId?: string): void;\n\treadonly onTerminateSession: Event<ITerminateSessionEvent>;\n\n\topenExtensionDevelopmentHostWindow(args: string[], debugRenderer: boolean): Promise<IOpenExtensionWindowResult>;\n}\n"]}