{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/contextview/browser/contextMenuService.ts"],"names":[],"mappings":"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","file":"contextMenuService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IContextMenuDelegate } from 'vs/base/browser/contextmenu';\nimport { ModifierKeyEmitter } from 'vs/base/browser/dom';\nimport { IAction, Separator } from 'vs/base/common/actions';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { createAndFillInContextMenuActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { IMenuService, MenuId } from 'vs/platform/actions/common/actions';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ContextMenuHandler, IContextMenuHandlerOptions } from './contextMenuHandler';\nimport { IContextMenuMenuDelegate, IContextMenuService, IContextViewService } from './contextView';\n\nexport class ContextMenuService extends Disposable implements IContextMenuService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _contextMenuHandler: ContextMenuHandler | undefined = undefined;\n\tprivate get contextMenuHandler(): ContextMenuHandler {\n\t\tif (!this._contextMenuHandler) {\n\t\t\tthis._contextMenuHandler = new ContextMenuHandler(this.contextViewService, this.telemetryService, this.notificationService, this.keybindingService);\n\t\t}\n\n\t\treturn this._contextMenuHandler;\n\t}\n\n\tprivate readonly _onDidShowContextMenu = this._store.add(new Emitter<void>());\n\treadonly onDidShowContextMenu = this._onDidShowContextMenu.event;\n\n\tprivate readonly _onDidHideContextMenu = this._store.add(new Emitter<void>());\n\treadonly onDidHideContextMenu = this._onDidHideContextMenu.event;\n\n\tconstructor(\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\t}\n\n\tconfigure(options: IContextMenuHandlerOptions): void {\n\t\tthis.contextMenuHandler.configure(options);\n\t}\n\n\t// ContextMenu\n\n\tshowContextMenu(delegate: IContextMenuDelegate | IContextMenuMenuDelegate): void {\n\n\t\tdelegate = ContextMenuMenuDelegate.transform(delegate, this.menuService, this.contextKeyService);\n\n\t\tthis.contextMenuHandler.showContextMenu({\n\t\t\t...delegate,\n\t\t\tonHide: (didCancel) => {\n\t\t\t\tdelegate.onHide?.(didCancel);\n\n\t\t\t\tthis._onDidHideContextMenu.fire();\n\t\t\t}\n\t\t});\n\t\tModifierKeyEmitter.getInstance().resetKeyStatus();\n\t\tthis._onDidShowContextMenu.fire();\n\t}\n}\n\nexport namespace ContextMenuMenuDelegate {\n\n\tfunction is(thing: IContextMenuDelegate | IContextMenuMenuDelegate): thing is IContextMenuMenuDelegate {\n\t\treturn thing && (<IContextMenuMenuDelegate>thing).menuId instanceof MenuId;\n\t}\n\n\texport function transform(delegate: IContextMenuDelegate | IContextMenuMenuDelegate, menuService: IMenuService, globalContextKeyService: IContextKeyService): IContextMenuDelegate {\n\t\tif (!is(delegate)) {\n\t\t\treturn delegate;\n\t\t}\n\t\tconst { menuId, menuActionOptions, contextKeyService } = delegate;\n\t\treturn {\n\t\t\t...delegate,\n\t\t\tgetActions: () => {\n\t\t\t\tconst target: IAction[] = [];\n\t\t\t\tif (menuId) {\n\t\t\t\t\tconst menu = menuService.createMenu(menuId, contextKeyService ?? globalContextKeyService);\n\t\t\t\t\tcreateAndFillInContextMenuActions(menu, menuActionOptions, target);\n\t\t\t\t\tmenu.dispose();\n\t\t\t\t}\n\t\t\t\tif (!delegate.getActions) {\n\t\t\t\t\treturn target;\n\t\t\t\t} else {\n\t\t\t\t\treturn Separator.join(delegate.getActions(), target);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n"]}