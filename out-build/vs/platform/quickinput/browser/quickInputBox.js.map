{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/quickinput/browser/quickInputBox.ts"],"names":[],"mappings":"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","file":"quickInputBox.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { FindInput } from 'vs/base/browser/ui/findinput/findInput';\nimport { IInputBoxStyles, IRange, MessageType } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { IToggleStyles, Toggle } from 'vs/base/browser/ui/toggle/toggle';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport Severity from 'vs/base/common/severity';\nimport 'vs/css!./media/quickInput';\n\nconst $ = dom.$;\n\nexport class QuickInputBox extends Disposable {\n\n\tprivate container: HTMLElement;\n\tprivate findInput: FindInput;\n\n\tconstructor(\n\t\tprivate parent: HTMLElement,\n\t\tinputBoxStyles: IInputBoxStyles,\n\t\ttoggleStyles: IToggleStyles\n\t) {\n\t\tsuper();\n\t\tthis.container = dom.append(this.parent, $('.quick-input-box'));\n\t\tthis.findInput = this._register(new FindInput(this.container, undefined, { label: '', inputBoxStyles, toggleStyles }));\n\t\tconst input = this.findInput.inputBox.inputElement;\n\t\tinput.role = 'combobox';\n\t\tinput.ariaHasPopup = 'menu';\n\t\tinput.ariaAutoComplete = 'list';\n\t\tinput.ariaExpanded = 'true';\n\t}\n\n\tonKeyDown = (handler: (event: StandardKeyboardEvent) => void): IDisposable => {\n\t\treturn dom.addDisposableListener(this.findInput.inputBox.inputElement, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\thandler(new StandardKeyboardEvent(e));\n\t\t});\n\t};\n\n\tonMouseDown = (handler: (event: StandardMouseEvent) => void): IDisposable => {\n\t\treturn dom.addDisposableListener(this.findInput.inputBox.inputElement, dom.EventType.MOUSE_DOWN, (e: MouseEvent) => {\n\t\t\thandler(new StandardMouseEvent(e));\n\t\t});\n\t};\n\n\tonDidChange = (handler: (event: string) => void): IDisposable => {\n\t\treturn this.findInput.onDidChange(handler);\n\t};\n\n\tget value() {\n\t\treturn this.findInput.getValue();\n\t}\n\n\tset value(value: string) {\n\t\tthis.findInput.setValue(value);\n\t}\n\n\tselect(range: IRange | null = null): void {\n\t\tthis.findInput.inputBox.select(range);\n\t}\n\n\tisSelectionAtEnd(): boolean {\n\t\treturn this.findInput.inputBox.isSelectionAtEnd();\n\t}\n\n\tsetPlaceholder(placeholder: string): void {\n\t\tthis.findInput.inputBox.setPlaceHolder(placeholder);\n\t}\n\n\tget placeholder() {\n\t\treturn this.findInput.inputBox.inputElement.getAttribute('placeholder') || '';\n\t}\n\n\tset placeholder(placeholder: string) {\n\t\tthis.findInput.inputBox.setPlaceHolder(placeholder);\n\t}\n\n\tget password() {\n\t\treturn this.findInput.inputBox.inputElement.type === 'password';\n\t}\n\n\tset password(password: boolean) {\n\t\tthis.findInput.inputBox.inputElement.type = password ? 'password' : 'text';\n\t}\n\n\tset enabled(enabled: boolean) {\n\t\t// We can't disable the input box because it is still used for\n\t\t// navigating the list. Instead, we disable the list and the OK\n\t\t// so that nothing can be selected.\n\t\t// TODO: should this be what we do for all find inputs? Or maybe some _other_ API\n\t\t// on findInput to change it to readonly?\n\t\tthis.findInput.inputBox.inputElement.toggleAttribute('readonly', !enabled);\n\t\t// TODO: styles of the quick pick need to be moved to the CSS instead of being in line\n\t\t// so things like this can be done in CSS\n\t\t// this.findInput.inputBox.inputElement.classList.toggle('disabled', !enabled);\n\t}\n\n\tset toggles(toggles: Toggle[] | undefined) {\n\t\tthis.findInput.setAdditionalToggles(toggles);\n\t}\n\n\thasFocus(): boolean {\n\t\treturn this.findInput.inputBox.hasFocus();\n\t}\n\n\tsetAttribute(name: string, value: string): void {\n\t\tthis.findInput.inputBox.inputElement.setAttribute(name, value);\n\t}\n\n\tremoveAttribute(name: string): void {\n\t\tthis.findInput.inputBox.inputElement.removeAttribute(name);\n\t}\n\n\tshowDecoration(decoration: Severity): void {\n\t\tif (decoration === Severity.Ignore) {\n\t\t\tthis.findInput.clearMessage();\n\t\t} else {\n\t\t\tthis.findInput.showMessage({ type: decoration === Severity.Info ? MessageType.INFO : decoration === Severity.Warning ? MessageType.WARNING : MessageType.ERROR, content: '' });\n\t\t}\n\t}\n\n\tstylesForType(decoration: Severity) {\n\t\treturn this.findInput.inputBox.stylesForType(decoration === Severity.Info ? MessageType.INFO : decoration === Severity.Warning ? MessageType.WARNING : MessageType.ERROR);\n\t}\n\n\tsetFocus(): void {\n\t\tthis.findInput.focus();\n\t}\n\n\tlayout(): void {\n\t\tthis.findInput.inputBox.layout();\n\t}\n}\n"]}