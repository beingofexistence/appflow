{"version":3,"sources":["vs/platform/quickinput/browser/quickInputUtils.ts"],"names":[],"mappings":"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","file":"quickInputUtils.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { DomEmitter } from 'vs/base/browser/event';\nimport { Event } from 'vs/base/common/event';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { Gesture, EventType as GestureEventType } from 'vs/base/browser/touch';\nimport { renderLabelWithIcons } from 'vs/base/browser/ui/iconLabel/iconLabels';\nimport { IdGenerator } from 'vs/base/common/idGenerator';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { parseLinkedText } from 'vs/base/common/linkedText';\nimport { URI } from 'vs/base/common/uri';\nimport 'vs/css!./media/quickInput';\nimport { localize } from 'vs/nls';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nconst iconPathToClass: Record<string, string> = {};\nconst iconClassGenerator = new IdGenerator('quick-input-button-icon-');\n\nexport function getIconClass(iconPath: { dark: URI; light?: URI } | undefined): string | undefined {\n\tif (!iconPath) {\n\t\treturn undefined;\n\t}\n\tlet iconClass: string;\n\n\tconst key = iconPath.dark.toString();\n\tif (iconPathToClass[key]) {\n\t\ticonClass = iconPathToClass[key];\n\t} else {\n\t\ticonClass = iconClassGenerator.nextId();\n\t\tdom.createCSSRule(`.${iconClass}, .hc-light .${iconClass}`, `background-image: ${dom.asCSSUrl(iconPath.light || iconPath.dark)}`);\n\t\tdom.createCSSRule(`.vs-dark .${iconClass}, .hc-black .${iconClass}`, `background-image: ${dom.asCSSUrl(iconPath.dark)}`);\n\t\ticonPathToClass[key] = iconClass;\n\t}\n\n\treturn iconClass;\n}\n\nexport function renderQuickInputDescription(description: string, container: HTMLElement, actionHandler: { callback: (content: string) => void; disposables: DisposableStore }) {\n\tdom.reset(container);\n\tconst parsed = parseLinkedText(description);\n\tlet tabIndex = 0;\n\tfor (const node of parsed.nodes) {\n\t\tif (typeof node === 'string') {\n\t\t\tcontainer.append(...renderLabelWithIcons(node));\n\t\t} else {\n\t\t\tlet title = node.title;\n\n\t\t\tif (!title && node.href.startsWith('command:')) {\n\t\t\t\ttitle = localize('executeCommand', \"Click to execute command '{0}'\", node.href.substring('command:'.length));\n\t\t\t} else if (!title) {\n\t\t\t\ttitle = node.href;\n\t\t\t}\n\n\t\t\tconst anchor = dom.$('a', { href: node.href, title, tabIndex: tabIndex++ }, node.label);\n\t\t\tanchor.style.textDecoration = 'underline';\n\t\t\tconst handleOpen = (e: unknown) => {\n\t\t\t\tif (dom.isEventLike(e)) {\n\t\t\t\t\tdom.EventHelper.stop(e, true);\n\t\t\t\t}\n\n\t\t\t\tactionHandler.callback(node.href);\n\t\t\t};\n\n\t\t\tconst onClick = actionHandler.disposables.add(new DomEmitter(anchor, dom.EventType.CLICK)).event;\n\t\t\tconst onKeydown = actionHandler.disposables.add(new DomEmitter(anchor, dom.EventType.KEY_DOWN)).event;\n\t\t\tconst onSpaceOrEnter = Event.chain(onKeydown, $ => $.filter(e => {\n\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\n\t\t\t\treturn event.equals(KeyCode.Space) || event.equals(KeyCode.Enter);\n\t\t\t}));\n\n\t\t\tactionHandler.disposables.add(Gesture.addTarget(anchor));\n\t\t\tconst onTap = actionHandler.disposables.add(new DomEmitter(anchor, GestureEventType.Tap)).event;\n\n\t\t\tEvent.any(onClick, onTap, onSpaceOrEnter)(handleOpen, null, actionHandler.disposables);\n\t\t\tcontainer.appendChild(anchor);\n\t\t}\n\t}\n}\n"]}