{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/quickinput/browser/quickInputService.ts"],"names":[],"mappings":"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","file":"quickInputService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IListRenderer, IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { List } from 'vs/base/browser/ui/list/listWidget';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILayoutService } from 'vs/platform/layout/browser/layoutService';\nimport { IWorkbenchListOptions, WorkbenchList } from 'vs/platform/list/browser/listService';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { QuickAccessController } from 'vs/platform/quickinput/browser/quickAccess';\nimport { IQuickAccessController } from 'vs/platform/quickinput/common/quickAccess';\nimport { IInputBox, IInputOptions, IKeyMods, IPickOptions, IQuickInputButton, IQuickInputService, IQuickNavigateConfiguration, IQuickPick, IQuickPickItem, IQuickWidget, QuickPickInput } from 'vs/platform/quickinput/common/quickInput';\nimport { defaultButtonStyles, defaultCountBadgeStyles, defaultInputBoxStyles, defaultKeybindingLabelStyles, defaultProgressBarStyles, defaultToggleStyles, getListStyles } from 'vs/platform/theme/browser/defaultStyles';\nimport { activeContrastBorder, asCssVariable, pickerGroupBorder, pickerGroupForeground, quickInputBackground, quickInputForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, quickInputTitleBackground, widgetBorder, widgetShadow } from 'vs/platform/theme/common/colorRegistry';\nimport { IThemeService, Themable } from 'vs/platform/theme/common/themeService';\nimport { IQuickInputOptions, IQuickInputStyles } from './quickInput';\nimport { QuickInputController, IQuickInputControllerHost } from 'vs/platform/quickinput/browser/quickInputController';\n\nexport class QuickInputService extends Themable implements IQuickInputService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tget backButton(): IQuickInputButton { return this.controller.backButton; }\n\n\tprivate readonly _onShow = this._register(new Emitter<void>());\n\treadonly onShow = this._onShow.event;\n\n\tprivate readonly _onHide = this._register(new Emitter<void>());\n\treadonly onHide = this._onHide.event;\n\n\tprivate _controller: QuickInputController | undefined;\n\tprivate get controller(): QuickInputController {\n\t\tif (!this._controller) {\n\t\t\tthis._controller = this._register(this.createController());\n\t\t}\n\n\t\treturn this._controller;\n\t}\n\n\tprivate get hasController() { return !!this._controller; }\n\n\tprivate _quickAccess: IQuickAccessController | undefined;\n\tget quickAccess(): IQuickAccessController {\n\t\tif (!this._quickAccess) {\n\t\t\tthis._quickAccess = this._register(this.instantiationService.createInstance(QuickAccessController));\n\t\t}\n\n\t\treturn this._quickAccess;\n\t}\n\n\tprivate readonly contexts = new Map<string, IContextKey<boolean>>();\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService protected readonly contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILayoutService protected readonly layoutService: ILayoutService\n\t) {\n\t\tsuper(themeService);\n\t}\n\n\tprotected createController(host: IQuickInputControllerHost = this.layoutService, options?: Partial<IQuickInputOptions>): QuickInputController {\n\t\tconst defaultOptions: IQuickInputOptions = {\n\t\t\tidPrefix: 'quickInput_',\n\t\t\tcontainer: host.container,\n\t\t\tignoreFocusOut: () => false,\n\t\t\tbackKeybindingLabel: () => undefined,\n\t\t\tsetContextKey: (id?: string) => this.setContextKey(id),\n\t\t\tlinkOpenerDelegate: (content) => {\n\t\t\t\t// HACK: https://github.com/microsoft/vscode/issues/173691\n\t\t\t\tthis.instantiationService.invokeFunction(accessor => {\n\t\t\t\t\tconst openerService = accessor.get(IOpenerService);\n\t\t\t\t\topenerService.open(content, { allowCommands: true, fromUserGesture: true });\n\t\t\t\t});\n\t\t\t},\n\t\t\treturnFocus: () => host.focus(),\n\t\t\tcreateList: <T>(\n\t\t\t\tuser: string,\n\t\t\t\tcontainer: HTMLElement,\n\t\t\t\tdelegate: IListVirtualDelegate<T>,\n\t\t\t\trenderers: IListRenderer<T, any>[],\n\t\t\t\toptions: IWorkbenchListOptions<T>\n\t\t\t) => this.instantiationService.createInstance(WorkbenchList, user, container, delegate, renderers, options) as List<T>,\n\t\t\tstyles: this.computeStyles()\n\t\t};\n\n\t\tconst controller = this._register(new QuickInputController({\n\t\t\t...defaultOptions,\n\t\t\t...options\n\t\t},\n\t\t\tthis.themeService));\n\n\t\tcontroller.layout(host.dimension, host.offset.quickPickTop);\n\n\t\t// Layout changes\n\t\tthis._register(host.onDidLayout(dimension => controller.layout(dimension, host.offset.quickPickTop)));\n\n\t\t// Context keys\n\t\tthis._register(controller.onShow(() => {\n\t\t\tthis.resetContextKeys();\n\t\t\tthis._onShow.fire();\n\t\t}));\n\t\tthis._register(controller.onHide(() => {\n\t\t\tthis.resetContextKeys();\n\t\t\tthis._onHide.fire();\n\t\t}));\n\n\t\treturn controller;\n\t}\n\n\tprivate setContextKey(id?: string) {\n\t\tlet key: IContextKey<boolean> | undefined;\n\t\tif (id) {\n\t\t\tkey = this.contexts.get(id);\n\t\t\tif (!key) {\n\t\t\t\tkey = new RawContextKey<boolean>(id, false)\n\t\t\t\t\t.bindTo(this.contextKeyService);\n\t\t\t\tthis.contexts.set(id, key);\n\t\t\t}\n\t\t}\n\n\t\tif (key && key.get()) {\n\t\t\treturn; // already active context\n\t\t}\n\n\t\tthis.resetContextKeys();\n\n\t\tkey?.set(true);\n\t}\n\n\tprivate resetContextKeys() {\n\t\tthis.contexts.forEach(context => {\n\t\t\tif (context.get()) {\n\t\t\t\tcontext.reset();\n\t\t\t}\n\t\t});\n\t}\n\n\tpick<T extends IQuickPickItem, O extends IPickOptions<T>>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options: O = <O>{}, token: CancellationToken = CancellationToken.None): Promise<(O extends { canPickMany: true } ? T[] : T) | undefined> {\n\t\treturn this.controller.pick(picks, options, token);\n\t}\n\n\tinput(options: IInputOptions = {}, token: CancellationToken = CancellationToken.None): Promise<string | undefined> {\n\t\treturn this.controller.input(options, token);\n\t}\n\n\tcreateQuickPick<T extends IQuickPickItem>(): IQuickPick<T> {\n\t\treturn this.controller.createQuickPick();\n\t}\n\n\tcreateInputBox(): IInputBox {\n\t\treturn this.controller.createInputBox();\n\t}\n\n\tcreateQuickWidget(): IQuickWidget {\n\t\treturn this.controller.createQuickWidget();\n\t}\n\n\tfocus() {\n\t\tthis.controller.focus();\n\t}\n\n\ttoggle() {\n\t\tthis.controller.toggle();\n\t}\n\n\tnavigate(next: boolean, quickNavigate?: IQuickNavigateConfiguration) {\n\t\tthis.controller.navigate(next, quickNavigate);\n\t}\n\n\taccept(keyMods?: IKeyMods) {\n\t\treturn this.controller.accept(keyMods);\n\t}\n\n\tback() {\n\t\treturn this.controller.back();\n\t}\n\n\tcancel() {\n\t\treturn this.controller.cancel();\n\t}\n\n\toverride updateStyles() {\n\t\tif (this.hasController) {\n\t\t\tthis.controller.applyStyles(this.computeStyles());\n\t\t}\n\t}\n\n\tprivate computeStyles(): IQuickInputStyles {\n\t\treturn {\n\t\t\twidget: {\n\t\t\t\tquickInputBackground: asCssVariable(quickInputBackground),\n\t\t\t\tquickInputForeground: asCssVariable(quickInputForeground),\n\t\t\t\tquickInputTitleBackground: asCssVariable(quickInputTitleBackground),\n\t\t\t\twidgetBorder: asCssVariable(widgetBorder),\n\t\t\t\twidgetShadow: asCssVariable(widgetShadow),\n\t\t\t},\n\t\t\tinputBox: defaultInputBoxStyles,\n\t\t\ttoggle: defaultToggleStyles,\n\t\t\tcountBadge: defaultCountBadgeStyles,\n\t\t\tbutton: defaultButtonStyles,\n\t\t\tprogressBar: defaultProgressBarStyles,\n\t\t\tkeybindingLabel: defaultKeybindingLabelStyles,\n\t\t\tlist: getListStyles({\n\t\t\t\tlistBackground: quickInputBackground,\n\t\t\t\tlistFocusBackground: quickInputListFocusBackground,\n\t\t\t\tlistFocusForeground: quickInputListFocusForeground,\n\t\t\t\t// Look like focused when inactive.\n\t\t\t\tlistInactiveFocusForeground: quickInputListFocusForeground,\n\t\t\t\tlistInactiveSelectionIconForeground: quickInputListFocusIconForeground,\n\t\t\t\tlistInactiveFocusBackground: quickInputListFocusBackground,\n\t\t\t\tlistFocusOutline: activeContrastBorder,\n\t\t\t\tlistInactiveFocusOutline: activeContrastBorder,\n\t\t\t}),\n\t\t\tpickerGroup: {\n\t\t\t\tpickerGroupBorder: asCssVariable(pickerGroupBorder),\n\t\t\t\tpickerGroupForeground: asCssVariable(pickerGroupForeground),\n\t\t\t}\n\t\t};\n\t}\n}\n"]}