{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/quickinput/test/browser/quickinput.test.ts"],"names":[],"mappings":"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","file":"quickinput.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { unthemedInboxStyles } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { unthemedButtonStyles } from 'vs/base/browser/ui/button/button';\nimport { IListRenderer, IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { IListOptions, List, unthemedListStyles } from 'vs/base/browser/ui/list/listWidget';\nimport { unthemedToggleStyles } from 'vs/base/browser/ui/toggle/toggle';\nimport { raceTimeout } from 'vs/base/common/async';\nimport { unthemedCountStyles } from 'vs/base/browser/ui/countBadge/countBadge';\nimport { unthemedKeybindingLabelOptions } from 'vs/base/browser/ui/keybindingLabel/keybindingLabel';\nimport { unthemedProgressBarOptions } from 'vs/base/browser/ui/progressbar/progressbar';\nimport { QuickInputController } from 'vs/platform/quickinput/browser/quickInputController';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { toDisposable } from 'vs/base/common/lifecycle';\n\n// Sets up an `onShow` listener to allow us to wait until the quick pick is shown (useful when triggering an `accept()` right after launching a quick pick)\n// kick this off before you launch the picker and then await the promise returned after you launch the picker.\nasync function setupWaitTilShownListener(controller: QuickInputController): Promise<void> {\n\tconst result = await raceTimeout(new Promise<boolean>(resolve => {\n\t\tconst event = controller.onShow(_ => {\n\t\t\tevent.dispose();\n\t\t\tresolve(true);\n\t\t});\n\t}), 2000);\n\n\tif (!result) {\n\t\tthrow new Error('Cancelled');\n\t}\n}\n\nsuite('QuickInput', () => { // https://github.com/microsoft/vscode/issues/147543\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\tlet controller: QuickInputController;\n\n\tsetup(() => {\n\t\tconst fixture = document.createElement('div');\n\t\tdocument.body.appendChild(fixture);\n\t\tstore.add(toDisposable(() => document.body.removeChild(fixture)));\n\n\t\tcontroller = store.add(new QuickInputController({\n\t\t\tcontainer: fixture,\n\t\t\tidPrefix: 'testQuickInput',\n\t\t\tignoreFocusOut() { return true; },\n\t\t\treturnFocus() { },\n\t\t\tbackKeybindingLabel() { return undefined; },\n\t\t\tsetContextKey() { return undefined; },\n\t\t\tlinkOpenerDelegate(content) { },\n\t\t\tcreateList: <T>(\n\t\t\t\tuser: string,\n\t\t\t\tcontainer: HTMLElement,\n\t\t\t\tdelegate: IListVirtualDelegate<T>,\n\t\t\t\trenderers: IListRenderer<T, any>[],\n\t\t\t\toptions: IListOptions<T>,\n\t\t\t) => new List<T>(user, container, delegate, renderers, options),\n\t\t\thoverDelegate: {\n\t\t\t\tshowHover(options, focus) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tdelay: 200\n\t\t\t},\n\t\t\tstyles: {\n\t\t\t\tbutton: unthemedButtonStyles,\n\t\t\t\tcountBadge: unthemedCountStyles,\n\t\t\t\tinputBox: unthemedInboxStyles,\n\t\t\t\ttoggle: unthemedToggleStyles,\n\t\t\t\tkeybindingLabel: unthemedKeybindingLabelOptions,\n\t\t\t\tlist: unthemedListStyles,\n\t\t\t\tprogressBar: unthemedProgressBarOptions,\n\t\t\t\twidget: {\n\t\t\t\t\tquickInputBackground: undefined,\n\t\t\t\t\tquickInputForeground: undefined,\n\t\t\t\t\tquickInputTitleBackground: undefined,\n\t\t\t\t\twidgetBorder: undefined,\n\t\t\t\t\twidgetShadow: undefined,\n\t\t\t\t},\n\t\t\t\tpickerGroup: {\n\t\t\t\t\tpickerGroupBorder: undefined,\n\t\t\t\t\tpickerGroupForeground: undefined,\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\tnew TestThemeService()));\n\n\t\t// initial layout\n\t\tcontroller.layout({ height: 20, width: 40 }, 0);\n\t});\n\n\ttest('pick - basecase', async () => {\n\t\tconst item = { label: 'foo' };\n\n\t\tconst wait = setupWaitTilShownListener(controller);\n\t\tconst pickPromise = controller.pick([item, { label: 'bar' }]);\n\t\tawait wait;\n\n\t\tcontroller.accept();\n\t\tconst pick = await raceTimeout(pickPromise, 2000);\n\n\t\tassert.strictEqual(pick, item);\n\t});\n\n\ttest('pick - activeItem is honored', async () => {\n\t\tconst item = { label: 'foo' };\n\n\t\tconst wait = setupWaitTilShownListener(controller);\n\t\tconst pickPromise = controller.pick([{ label: 'bar' }, item], { activeItem: item });\n\t\tawait wait;\n\n\t\tcontroller.accept();\n\t\tconst pick = await pickPromise;\n\n\t\tassert.strictEqual(pick, item);\n\t});\n\n\ttest('input - basecase', async () => {\n\t\tconst wait = setupWaitTilShownListener(controller);\n\t\tconst inputPromise = controller.input({ value: 'foo' });\n\t\tawait wait;\n\n\t\tcontroller.accept();\n\t\tconst value = await raceTimeout(inputPromise, 2000);\n\n\t\tassert.strictEqual(value, 'foo');\n\t});\n\n\ttest('onDidChangeValue - gets triggered when .value is set', async () => {\n\t\tconst quickpick = store.add(controller.createQuickPick());\n\n\t\tlet value: string | undefined = undefined;\n\t\tstore.add(quickpick.onDidChangeValue((e) => value = e));\n\n\t\t// Trigger a change\n\t\tquickpick.value = 'changed';\n\n\t\ttry {\n\t\t\tassert.strictEqual(value, quickpick.value);\n\t\t} finally {\n\t\t\tquickpick.dispose();\n\t\t}\n\t});\n\n\ttest('keepScrollPosition - works with activeItems', async () => {\n\t\tconst quickpick = store.add(controller.createQuickPick());\n\n\t\tconst items = [];\n\t\tfor (let i = 0; i < 1000; i++) {\n\t\t\titems.push({ label: `item ${i}` });\n\t\t}\n\t\tquickpick.items = items;\n\t\t// setting the active item should cause the quick pick to scroll to the bottom\n\t\tquickpick.activeItems = [items[items.length - 1]];\n\t\tquickpick.show();\n\n\t\tconst cursorTop = quickpick.scrollTop;\n\n\t\tassert.notStrictEqual(cursorTop, 0);\n\n\t\tquickpick.keepScrollPosition = true;\n\t\tquickpick.activeItems = [items[0]];\n\t\tassert.strictEqual(cursorTop, quickpick.scrollTop);\n\n\t\tquickpick.keepScrollPosition = false;\n\t\tquickpick.activeItems = [items[0]];\n\t\tassert.strictEqual(quickpick.scrollTop, 0);\n\t});\n\n\ttest('keepScrollPosition - works with items', async () => {\n\t\tconst quickpick = store.add(controller.createQuickPick());\n\n\t\tconst items = [];\n\t\tfor (let i = 0; i < 1000; i++) {\n\t\t\titems.push({ label: `item ${i}` });\n\t\t}\n\t\tquickpick.items = items;\n\t\t// setting the active item should cause the quick pick to scroll to the bottom\n\t\tquickpick.activeItems = [items[items.length - 1]];\n\t\tquickpick.show();\n\n\t\tconst cursorTop = quickpick.scrollTop;\n\t\tassert.notStrictEqual(cursorTop, 0);\n\n\t\tquickpick.keepScrollPosition = true;\n\t\tquickpick.items = items;\n\t\tassert.strictEqual(cursorTop, quickpick.scrollTop);\n\n\t\tquickpick.keepScrollPosition = false;\n\t\tquickpick.items = items;\n\t\tassert.strictEqual(quickpick.scrollTop, 0);\n\t});\n\n\ttest('selectedItems - verify previous selectedItems does not hang over to next set of items', async () => {\n\t\tconst quickpick = store.add(controller.createQuickPick());\n\t\tquickpick.items = [{ label: 'step 1' }];\n\t\tquickpick.show();\n\n\t\tvoid (await new Promise<void>(resolve => {\n\t\t\tstore.add(quickpick.onDidAccept(() => {\n\t\t\t\tquickpick.canSelectMany = true;\n\t\t\t\tquickpick.items = [{ label: 'a' }, { label: 'b' }, { label: 'c' }];\n\t\t\t\tresolve();\n\t\t\t}));\n\n\t\t\t// accept 'step 1'\n\t\t\tcontroller.accept();\n\t\t}));\n\n\t\t// accept in multi-select\n\t\tcontroller.accept();\n\n\t\t// Since we don't select any items, the selected items should be empty\n\t\tassert.strictEqual(quickpick.selectedItems.length, 0);\n\t});\n});\n"]}