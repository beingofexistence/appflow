{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/environment/test/electron-main/environmentMainService.test.ts"],"names":[],"mappings":"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","file":"environmentMainService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { EnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport product from 'vs/platform/product/common/product';\nimport { isLinux } from 'vs/base/common/platform';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nsuite('EnvironmentMainService', () => {\n\n\ttest('can unset and restore snap env variables', () => {\n\t\tconst service = new EnvironmentMainService({ '_': [] }, { '_serviceBrand': undefined, ...product });\n\n\t\tprocess.env['TEST_ARG1_VSCODE_SNAP_ORIG'] = 'original';\n\t\tprocess.env['TEST_ARG1'] = 'modified';\n\t\tprocess.env['TEST_ARG2_SNAP'] = 'test_arg2';\n\t\tprocess.env['TEST_ARG3_VSCODE_SNAP_ORIG'] = '';\n\t\tprocess.env['TEST_ARG3'] = 'test_arg3_non_empty';\n\n\t\t// Unset snap env variables\n\t\tservice.unsetSnapExportedVariables();\n\t\tif (isLinux) {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], undefined);\n\t\t} else {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t}\n\n\t\t// Restore snap env variables\n\t\tservice.restoreSnapExportedVariables();\n\t\tif (isLinux) {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t} else {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t}\n\t});\n\n\ttest('can invoke unsetSnapExportedVariables and restoreSnapExportedVariables multiple times', () => {\n\t\tconst service = new EnvironmentMainService({ '_': [] }, { '_serviceBrand': undefined, ...product });\n\t\t// Mock snap environment\n\t\tprocess.env['SNAP'] = '1';\n\t\tprocess.env['SNAP_REVISION'] = 'test_revision';\n\n\t\tprocess.env['TEST_ARG1_VSCODE_SNAP_ORIG'] = 'original';\n\t\tprocess.env['TEST_ARG1'] = 'modified';\n\t\tprocess.env['TEST_ARG2_SNAP'] = 'test_arg2';\n\t\tprocess.env['TEST_ARG3_VSCODE_SNAP_ORIG'] = '';\n\t\tprocess.env['TEST_ARG3'] = 'test_arg3_non_empty';\n\n\t\t// Unset snap env variables\n\t\tservice.unsetSnapExportedVariables();\n\t\tservice.unsetSnapExportedVariables();\n\t\tservice.unsetSnapExportedVariables();\n\t\tif (isLinux) {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], undefined);\n\t\t} else {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t}\n\n\t\t// Restore snap env variables\n\t\tservice.restoreSnapExportedVariables();\n\t\tservice.restoreSnapExportedVariables();\n\t\tif (isLinux) {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t} else {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t}\n\n\t\t// Unset snap env variables\n\t\tservice.unsetSnapExportedVariables();\n\t\tif (isLinux) {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], undefined);\n\t\t} else {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t}\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}