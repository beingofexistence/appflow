{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/log/common/log.ts"],"names":[],"mappings":"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","file":"log.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { hash } from 'vs/base/common/hash';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { isWindows } from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport { Mutable, isNumber, isString } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ILogService = createDecorator<ILogService>('logService');\nexport const ILoggerService = createDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport function isLogLevel(thing: unknown): thing is LogLevel {\n\treturn isNumber(thing);\n}\n\nexport enum LogLevel {\n\tOff,\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport function log(logger: ILogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Off: /* do nothing */ break;\n\t\tdefault: throw new Error(`Invalid log level ${level}`);\n\t}\n}\n\nfunction format(args: any, verbose: boolean = false): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tlet a = args[i];\n\n\t\tif (a instanceof Error) {\n\t\t\ta = toErrorMessage(a, verbose);\n\t\t}\n\n\t\tif (typeof a === 'object') {\n\t\t\ttry {\n\t\t\t\ta = JSON.stringify(a);\n\t\t\t} catch (e) { }\n\t\t}\n\n\t\tresult += (i > 0 ? ' ' : '') + a;\n\t}\n\n\treturn result;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerOptions {\n\n\t/**\n\t * Id of the logger.\n\t */\n\tid?: string;\n\n\t/**\n\t * Name of the logger.\n\t */\n\tname?: string;\n\n\t/**\n\t * Do not create rotating files if max size exceeds.\n\t */\n\tdonotRotate?: boolean;\n\n\t/**\n\t * Do not use formatters.\n\t */\n\tdonotUseFormatters?: boolean;\n\n\t/**\n\t * When to log. Set to `always` to log always.\n\t */\n\tlogLevel?: 'always' | LogLevel;\n\n\t/**\n\t * Whether the log should be hidden from the user.\n\t */\n\thidden?: boolean;\n\n\t/**\n\t * Condition which must be true to show this logger\n\t */\n\twhen?: string;\n\n\t/**\n\t * Id of the extension that created this logger.\n\t */\n\textensionId?: string;\n}\n\nexport interface ILoggerResource {\n\treadonly resource: URI;\n\treadonly id: string;\n\treadonly name?: string;\n\treadonly logLevel?: LogLevel;\n\treadonly hidden?: boolean;\n\treadonly when?: string;\n\treadonly extensionId?: string;\n}\n\nexport type DidChangeLoggersEvent = {\n\treadonly added: Iterable<ILoggerResource>;\n\treadonly removed: Iterable<ILoggerResource>;\n};\n\nexport interface ILoggerService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Creates a logger for the given resource, or gets one if it already exists.\n\t *\n\t * This will also register the logger with the logger service.\n\t */\n\tcreateLogger(resource: URI, options?: ILoggerOptions): ILogger;\n\n\t/**\n\t * Creates a logger with the given id in the logs folder, or gets one if it already exists.\n\t *\n\t * This will also register the logger with the logger service.\n\t */\n\tcreateLogger(id: string, options?: Omit<ILoggerOptions, 'id'>): ILogger;\n\n\t/**\n\t * Gets an existing logger, if any.\n\t */\n\tgetLogger(resourceOrId: URI | string): ILogger | undefined;\n\n\t/**\n\t * An event which fires when the log level of a logger has changed\n\t */\n\treadonly onDidChangeLogLevel: Event<LogLevel | [URI, LogLevel]>;\n\n\t/**\n\t * Set default log level.\n\t */\n\tsetLogLevel(level: LogLevel): void;\n\n\t/**\n\t * Set log level for a logger.\n\t */\n\tsetLogLevel(resource: URI, level: LogLevel): void;\n\n\t/**\n\t * Get log level for a logger or the default log level.\n\t */\n\tgetLogLevel(resource?: URI): LogLevel;\n\n\t/**\n\t * An event which fires when the visibility of a logger has changed\n\t */\n\treadonly onDidChangeVisibility: Event<[URI, boolean]>;\n\n\t/**\n\t * Set the visibility of a logger.\n\t */\n\tsetVisibility(resourceOrId: URI | string, visible: boolean): void;\n\n\t/**\n\t * An event which fires when the logger resources are changed\n\t */\n\treadonly onDidChangeLoggers: Event<DidChangeLoggersEvent>;\n\n\t/**\n\t * Register a logger with the logger service.\n\t *\n\t * Note that this will not create a logger, but only register it.\n\t *\n\t * Use `createLogger` to create a logger and register it.\n\t *\n\t * Use it when you want to register a logger that is not created by the logger service.\n\t */\n\tregisterLogger(resource: ILoggerResource): void;\n\n\t/**\n\t * Deregister the logger for the given resource.\n\t */\n\tderegisterLogger(resource: URI): void;\n\n\t/**\n\t * Get all registered loggers\n\t */\n\tgetRegisteredLoggers(): Iterable<ILoggerResource>;\n\n\t/**\n\t * Get the registered logger for the given resource.\n\t */\n\tgetRegisteredLogger(resource: URI): ILoggerResource | undefined;\n}\n\nexport abstract class AbstractLogger extends Disposable implements ILogger {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n\tprotected checkLogLevel(level: LogLevel): boolean {\n\t\treturn this.level !== LogLevel.Off && this.level <= level;\n\t}\n\n\tabstract trace(message: string, ...args: any[]): void;\n\tabstract debug(message: string, ...args: any[]): void;\n\tabstract info(message: string, ...args: any[]): void;\n\tabstract warn(message: string, ...args: any[]): void;\n\tabstract error(message: string | Error, ...args: any[]): void;\n\tabstract flush(): void;\n}\n\nexport abstract class AbstractMessageLogger extends AbstractLogger implements ILogger {\n\n\tprotected abstract log(level: LogLevel, message: string): void;\n\n\tconstructor(private readonly logAlways?: boolean) {\n\t\tsuper();\n\t}\n\n\tprotected override checkLogLevel(level: LogLevel): boolean {\n\t\treturn this.logAlways || super.checkLogLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tthis.log(LogLevel.Trace, format([message, ...args], true));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tthis.log(LogLevel.Debug, format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tthis.log(LogLevel.Info, format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tthis.log(LogLevel.Warning, format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis.log(LogLevel.Error, format(array));\n\t\t\t} else {\n\t\t\t\tthis.log(LogLevel.Error, format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tflush(): void { }\n}\n\n\nexport class ConsoleMainLogger extends AbstractLogger implements ILogger {\n\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL, private readonly useColors: boolean = true) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class AdapterLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(private readonly adapter: { log: (logLevel: LogLevel, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tthis.adapter.log(LogLevel.Trace, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tthis.adapter.log(LogLevel.Debug, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tthis.adapter.log(LogLevel.Info, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tthis.adapter.log(LogLevel.Warning, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\t\t\tthis.adapter.log(LogLevel.Error, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.checkLogLevel(LogLevel.Trace));\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class MultiplexLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(private readonly loggers: ReadonlyArray<ILogger>) {\n\t\tsuper();\n\t\tif (loggers.length) {\n\t\t\tthis.setLevel(loggers[0].getLevel());\n\t\t}\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.error(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.flush();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tfor (const logger of this.loggers) {\n\t\t\tlogger.dispose();\n\t\t}\n\t}\n}\n\ntype LoggerEntry = { logger: ILogger | undefined; info: Mutable<ILoggerResource> };\n\nexport abstract class AbstractLoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _loggers = new ResourceMap<LoggerEntry>();\n\n\tprivate _onDidChangeLoggers = this._register(new Emitter<{ added: ILoggerResource[]; removed: ILoggerResource[] }>);\n\treadonly onDidChangeLoggers = this._onDidChangeLoggers.event;\n\n\tprivate _onDidChangeLogLevel = this._register(new Emitter<LogLevel | [URI, LogLevel]>);\n\treadonly onDidChangeLogLevel = this._onDidChangeLogLevel.event;\n\n\tprivate _onDidChangeVisibility = this._register(new Emitter<[URI, boolean]>);\n\treadonly onDidChangeVisibility = this._onDidChangeVisibility.event;\n\n\tconstructor(\n\t\tprotected logLevel: LogLevel,\n\t\tprivate readonly logsHome: URI,\n\t\tloggerResources?: Iterable<ILoggerResource>,\n\t) {\n\t\tsuper();\n\t\tif (loggerResources) {\n\t\t\tfor (const loggerResource of loggerResources) {\n\t\t\t\tthis._loggers.set(loggerResource.resource, { logger: undefined, info: loggerResource });\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getLoggerEntry(resourceOrId: URI | string): LoggerEntry | undefined {\n\t\tif (isString(resourceOrId)) {\n\t\t\treturn [...this._loggers.values()].find(logger => logger.info.id === resourceOrId);\n\t\t}\n\t\treturn this._loggers.get(resourceOrId);\n\t}\n\n\tgetLogger(resourceOrId: URI | string): ILogger | undefined {\n\t\treturn this.getLoggerEntry(resourceOrId)?.logger;\n\t}\n\n\tcreateLogger(idOrResource: URI | string, options?: ILoggerOptions): ILogger {\n\t\tconst resource = this.toResource(idOrResource);\n\t\tconst id = isString(idOrResource) ? idOrResource : (options?.id ?? hash(resource.toString()).toString(16));\n\t\tlet logger = this._loggers.get(resource)?.logger;\n\t\tconst logLevel = options?.logLevel === 'always' ? LogLevel.Trace : options?.logLevel;\n\t\tif (!logger) {\n\t\t\tlogger = this.doCreateLogger(resource, logLevel ?? this.getLogLevel(resource) ?? this.logLevel, { ...options, id });\n\t\t}\n\t\tconst loggerEntry: LoggerEntry = {\n\t\t\tlogger,\n\t\t\tinfo: { resource, id, logLevel, name: options?.name, hidden: options?.hidden, extensionId: options?.extensionId, when: options?.when }\n\t\t};\n\t\tthis.registerLogger(loggerEntry.info);\n\t\t// TODO: @sandy081 Remove this once registerLogger can take ILogger\n\t\tthis._loggers.set(resource, loggerEntry);\n\t\treturn logger;\n\t}\n\n\tprotected toResource(idOrResource: string | URI): URI {\n\t\treturn isString(idOrResource) ? joinPath(this.logsHome, `${idOrResource}.log`) : idOrResource;\n\t}\n\n\tsetLogLevel(logLevel: LogLevel): void;\n\tsetLogLevel(resource: URI, logLevel: LogLevel): void;\n\tsetLogLevel(arg1: any, arg2?: any): void {\n\t\tif (URI.isUri(arg1)) {\n\t\t\tconst resource = arg1;\n\t\t\tconst logLevel = arg2;\n\t\t\tconst logger = this._loggers.get(resource);\n\t\t\tif (logger && logLevel !== logger.info.logLevel) {\n\t\t\t\tlogger.info.logLevel = logLevel === this.logLevel ? undefined : logLevel;\n\t\t\t\tlogger.logger?.setLevel(logLevel);\n\t\t\t\tthis._loggers.set(logger.info.resource, logger);\n\t\t\t\tthis._onDidChangeLogLevel.fire([resource, logLevel]);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.logLevel = arg1;\n\t\t\tfor (const [resource, logger] of this._loggers.entries()) {\n\t\t\t\tif (this._loggers.get(resource)?.info.logLevel === undefined) {\n\t\t\t\t\tlogger.logger?.setLevel(this.logLevel);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onDidChangeLogLevel.fire(this.logLevel);\n\t\t}\n\t}\n\n\tsetVisibility(resourceOrId: URI | string, visibility: boolean): void {\n\t\tconst logger = this.getLoggerEntry(resourceOrId);\n\t\tif (logger && visibility !== !logger.info.hidden) {\n\t\t\tlogger.info.hidden = !visibility;\n\t\t\tthis._loggers.set(logger.info.resource, logger);\n\t\t\tthis._onDidChangeVisibility.fire([logger.info.resource, visibility]);\n\t\t}\n\t}\n\n\tgetLogLevel(resource?: URI): LogLevel {\n\t\tlet logLevel;\n\t\tif (resource) {\n\t\t\tlogLevel = this._loggers.get(resource)?.info.logLevel;\n\t\t}\n\t\treturn logLevel ?? this.logLevel;\n\t}\n\n\tregisterLogger(resource: ILoggerResource): void {\n\t\tconst existing = this._loggers.get(resource.resource);\n\t\tif (existing) {\n\t\t\tif (existing.info.hidden !== resource.hidden) {\n\t\t\t\tthis.setVisibility(resource.resource, !resource.hidden);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._loggers.set(resource.resource, { info: resource, logger: undefined });\n\t\t\tthis._onDidChangeLoggers.fire({ added: [resource], removed: [] });\n\t\t}\n\t}\n\n\tderegisterLogger(resource: URI): void {\n\t\tconst existing = this._loggers.get(resource);\n\t\tif (existing) {\n\t\t\tif (existing.logger) {\n\t\t\t\texisting.logger.dispose();\n\t\t\t}\n\t\t\tthis._loggers.delete(resource);\n\t\t\tthis._onDidChangeLoggers.fire({ added: [], removed: [existing.info] });\n\t\t}\n\t}\n\n\t*getRegisteredLoggers(): Iterable<ILoggerResource> {\n\t\tfor (const entry of this._loggers.values()) {\n\t\t\tyield entry.info;\n\t\t}\n\t}\n\n\tgetRegisteredLogger(resource: URI): ILoggerResource | undefined {\n\t\treturn this._loggers.get(resource)?.info;\n\t}\n\n\toverride dispose(): void {\n\t\tthis._loggers.forEach(logger => logger.logger?.dispose());\n\t\tthis._loggers.clear();\n\t\tsuper.dispose();\n\t}\n\n\tprotected abstract doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger;\n}\n\nexport class NullLogger implements ILogger {\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport class NullLogService extends NullLogger implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = parseLogLevel(environmentService.logLevel.toLowerCase());\n\t\tif (logLevel !== undefined) {\n\t\t\treturn logLevel;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n\nexport function LogLevelToString(logLevel: LogLevel): string {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace: return 'trace';\n\t\tcase LogLevel.Debug: return 'debug';\n\t\tcase LogLevel.Info: return 'info';\n\t\tcase LogLevel.Warning: return 'warn';\n\t\tcase LogLevel.Error: return 'error';\n\t\tcase LogLevel.Off: return 'off';\n\t}\n}\n\nexport function parseLogLevel(logLevel: string): LogLevel | undefined {\n\tswitch (logLevel) {\n\t\tcase 'trace':\n\t\t\treturn LogLevel.Trace;\n\t\tcase 'debug':\n\t\t\treturn LogLevel.Debug;\n\t\tcase 'info':\n\t\t\treturn LogLevel.Info;\n\t\tcase 'warn':\n\t\t\treturn LogLevel.Warning;\n\t\tcase 'error':\n\t\t\treturn LogLevel.Error;\n\t\tcase 'critical':\n\t\t\treturn LogLevel.Error;\n\t\tcase 'off':\n\t\t\treturn LogLevel.Off;\n\t}\n\treturn undefined;\n}\n\n// Contexts\nexport const CONTEXT_LOG_LEVEL = new RawContextKey<string>('logLevel', LogLevelToString(LogLevel.Info));\n"]}