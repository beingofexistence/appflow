{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userData/common/fileUserDataProvider.ts"],"names":[],"mappings":";;;;IAkBA;;;;OAIG;IACH,MAAa,IAAqB,SAAQ,eAAG;QAM5C,IAAI,YAAY,KAAK,OAAO,IAAI,CAAC,CAAC,CAAkB,YAAY,GAAG,8DAAsD,CAAC,CAAC,CAAC;QAS5H,YACkB,CAAwB,EACxB,CAA0N,EAC1N,CAAsB,EACtB,CAA4B,EAC7C,kBAAuB,EACN,CAAe;YAEhC,KAAK,EAAE,CAAC;YAPS,MAAC,GAAD,CAAC,CAAuB;YACxB,MAAC,GAAD,CAAC,CAAyN;YAC1N,MAAC,GAAD,CAAC,CAAqB;YACtB,MAAC,GAAD,CAAC,CAA2B;YAE5B,MAAC,GAAD,CAAC,CAAc;YAdxB,4BAAuB,GAAgB,IAAI,CAAC,CAAC,CAAkB,uBAAuB,CAAC;YAE/E,MAAC,GAAkB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAA8B,CAAC,CAAC;YACjF,oBAAe,GAAkC,IAAI,CAAC,CAAC,CAAgB,KAAK,CAAC;YAErE,MAAC,GAAgB,uBAAG,CAAe,OAAO,CAAM,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,8DAAmD,CAAC,CAAC,CAAC;YAY/I,IAAI,CAAC,CAAC,GAAuB,IAAI,SAAG,CAAS,CAAC,GAAG,EAAE,EAAE,CAAC,kBAAkB,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAoB,GAAG,CAAC,CAAC,CAAC,CAAC;YAClI,IAAI,CAAC,CAAC,EAA4B,CAAC;YACnC,IAAI,CAAC,CAAC,CAAS,CAAC,CAAuB,mBAAmB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAA4B,CAAC,CAAC,CAAC;YACtG,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAkB,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;QACzF,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,CAAC,CAAqB,KAAK,EAAE,CAAC;YACnC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,CAAC,CAAuB,QAAQ,EAAE;gBAC5D,IAAI,CAAC,CAAC,CAAqB,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;gBACzD,IAAI,CAAC,CAAC,CAAqB,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;gBAC5D,IAAI,CAAC,CAAC,CAAqB,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;gBACtD,IAAI,CAAC,CAAC,CAAqB,GAAG,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;aAC3D;QACF,CAAC;QAED,KAAK,CAAC,QAAa,EAAE,IAAmB;YACvC,IAAI,CAAC,CAAC,CAAc,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC5C,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAkB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;YAC5F,OAAO,IAAA,eAAG,EAAU,GAAG,EAAE;gBACxB,IAAI,CAAC,CAAC,CAAc,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACrC,UAAU,CAAC,OAAO,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,QAAa;YACjB,OAAO,IAAI,CAAC,CAAC,CAAkB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,CAAC,CAAC;QAC1E,CAAC;QAED,KAAK,CAAC,QAAa;YAClB,OAAO,IAAI,CAAC,CAAC,CAAkB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,CAAC,CAAC;QAC3E,CAAC;QAED,MAAM,CAAC,IAAS,EAAE,EAAO,EAAE,IAA2B;YACrD,OAAO,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAoB,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAoB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC7G,CAAC;QAED,QAAQ,CAAC,QAAa;YACrB,OAAO,IAAI,CAAC,CAAC,CAAkB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAChG,CAAC;QAED,cAAc,CAAC,QAAa,EAAE,IAA4B,EAAE,KAAwB;YACnF,MAAM,MAAM,GAAG,IAAA,YAAG,EAA4B,IAAI,CAAC,EAAE,CAAC,YAAG,CAAM,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,YAAG,CAAM,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YACrH,CAAC,KAAK,IAAI,EAAE;gBACX,IAAI;oBACH,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAC/C,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;iBACrB;gBAAC,OAAO,KAAK,EAAE;oBACf,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACpB,MAAM,CAAC,GAAG,EAAE,CAAC;iBACb;YACF,CAAC,CAAC,EAAE,CAAC;YACL,OAAO,MAAM,CAAC;QACf,CAAC;QAED,OAAO,CAAC,QAAa;YACpB,OAAO,IAAI,CAAC,CAAC,CAAkB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,CAAC,CAAC;QAC7E,CAAC;QAED,SAAS,CAAC,QAAa,EAAE,OAAmB,EAAE,IAAuB;YACpE,IAAI,IAAI,CAAC,CAAC,CAAqB,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAA,WAAG,EAAM,IAAI,CAAC,MAAM,CAAC,IAAI,IAAA,WAAG,EAA0B,IAAI,CAAC,CAAC,CAAkB,EAAE;gBAChI,IAAI,GAAG,EAAE,GAAG,IAAI,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,CAAC;aACnD;YACD,OAAO,IAAI,CAAC,CAAC,CAAkB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAC9F,CAAC;QAED,MAAM,CAAC,QAAa,EAAE,IAAwB;YAC7C,OAAO,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;QAClF,CAAC;QAED,IAAI,CAAC,IAAS,EAAE,EAAO,EAAE,IAA2B;YACnD,IAAI,IAAA,WAAG,EAAyB,IAAI,CAAC,CAAC,CAAkB,EAAE;gBACzD,OAAO,IAAI,CAAC,CAAC,CAAkB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAoB,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAoB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aAC1G;YACD,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACvC,CAAC;QAEO,CAAC,CAAiB,OAA+B;YACxD,MAAM,eAAe,GAAkB,EAAE,CAAC;YAC1C,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;gBAC7B,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,EAAiB;oBACrD,SAAS,CAAC,kCAAkC;iBAC5C;gBAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAClE,IAAI,IAAI,CAAC,CAAC,CAAc,UAAU,CAAC,gBAAgB,CAAC,EAAE;oBACrD,eAAe,CAAC,IAAI,CAAC;wBACpB,QAAQ,EAAE,gBAAgB;wBAC1B,IAAI,EAAE,MAAM,CAAC,IAAI;qBACjB,CAAC,CAAC;iBACH;aACD;YACD,IAAI,eAAe,CAAC,MAAM,EAAE;gBAC3B,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,mBAAmB,CAAC,CAAC;gBAC3C,IAAI,CAAC,CAAC,CAAgB,IAAI,CAAC,eAAe,CAAC,CAAC;aAC5C;QACF,CAAC;QAEO,CAAC,CAAoB,gBAAqB;YACjD,OAAO,gBAAgB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,EAAiB,CAAC,CAAC;QACjE,CAAC;QAEO,CAAC,CAAkB,kBAAuB;YACjD,OAAO,kBAAkB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,EAAe,CAAC,CAAC;QACjE,CAAC;KAED;IAlID,oBAkIC","file":"fileUserDataProvider.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IFileSystemProviderWithFileReadWriteCapability, IFileChange, IWatchOptions, IStat, IFileOverwriteOptions, FileType, IFileWriteOptions, IFileDeleteOptions, FileSystemProviderCapabilities, IFileSystemProviderWithFileReadStreamCapability, IFileReadStreamOptions, IFileSystemProviderWithFileAtomicReadCapability, IFileSystemProviderWithFileFolderCopyCapability, hasFileFolderCopyCapability, hasFileAtomicWriteCapability } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { newWriteableStream, ReadableStreamEvents } from 'vs/base/common/stream';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { TernarySearchTree } from 'vs/base/common/ternarySearchTree';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { isObject } from 'vs/base/common/types';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { ResourceSet } from 'vs/base/common/map';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\n\n/**\n * This is a wrapper on top of the local filesystem provider which will\n * \t- Convert the user data resources to file system scheme and vice-versa\n *  - Enforces atomic reads for user data\n */\nexport class FileUserDataProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileAtomicReadCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tget capabilities() { return this.fileSystemProvider.capabilities & ~FileSystemProviderCapabilities.FileOpenReadWriteClose; }\n\treadonly onDidChangeCapabilities: Event<void> = this.fileSystemProvider.onDidChangeCapabilities;\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile: Event<readonly IFileChange[]> = this._onDidChangeFile.event;\n\n\tprivate readonly watchResources = TernarySearchTree.forUris<URI>(() => !(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive));\n\tprivate readonly atomicWritesResources: ResourceSet;\n\n\tconstructor(\n\t\tprivate readonly fileSystemScheme: string,\n\t\tprivate readonly fileSystemProvider: IFileSystemProviderWithFileReadWriteCapability & (IFileSystemProviderWithFileReadStreamCapability | IFileSystemProviderWithFileAtomicReadCapability | IFileSystemProviderWithFileFolderCopyCapability),\n\t\tprivate readonly userDataScheme: string,\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\turiIdentityService: IUriIdentityService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.atomicWritesResources = new ResourceSet((uri) => uriIdentityService.extUri.getComparisonKey(this.toFileSystemResource(uri)));\n\t\tthis.updateAtomicWritesResources();\n\t\tthis._register(userDataProfilesService.onDidChangeProfiles(() => this.updateAtomicWritesResources()));\n\t\tthis._register(this.fileSystemProvider.onDidChangeFile(e => this.handleFileChanges(e)));\n\t}\n\n\tprivate updateAtomicWritesResources(): void {\n\t\tthis.atomicWritesResources.clear();\n\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\tthis.atomicWritesResources.add(profile.settingsResource);\n\t\t\tthis.atomicWritesResources.add(profile.keybindingsResource);\n\t\t\tthis.atomicWritesResources.add(profile.tasksResource);\n\t\t\tthis.atomicWritesResources.add(profile.extensionsResource);\n\t\t}\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tthis.watchResources.set(resource, resource);\n\t\tconst disposable = this.fileSystemProvider.watch(this.toFileSystemResource(resource), opts);\n\t\treturn toDisposable(() => {\n\t\t\tthis.watchResources.delete(resource);\n\t\t\tdisposable.dispose();\n\t\t});\n\t}\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this.fileSystemProvider.stat(this.toFileSystemResource(resource));\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this.fileSystemProvider.mkdir(this.toFileSystemResource(resource));\n\t}\n\n\trename(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void> {\n\t\treturn this.fileSystemProvider.rename(this.toFileSystemResource(from), this.toFileSystemResource(to), opts);\n\t}\n\n\treadFile(resource: URI): Promise<Uint8Array> {\n\t\treturn this.fileSystemProvider.readFile(this.toFileSystemResource(resource), { atomic: true });\n\t}\n\n\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst contents = await this.readFile(resource);\n\t\t\t\tstream.end(contents);\n\t\t\t} catch (error) {\n\t\t\t\tstream.error(error);\n\t\t\t\tstream.end();\n\t\t\t}\n\t\t})();\n\t\treturn stream;\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this.fileSystemProvider.readdir(this.toFileSystemResource(resource));\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void> {\n\t\tif (this.atomicWritesResources.has(resource) && !isObject(opts.atomic) && hasFileAtomicWriteCapability(this.fileSystemProvider)) {\n\t\t\topts = { ...opts, atomic: { postfix: '.vsctmp' } };\n\t\t}\n\t\treturn this.fileSystemProvider.writeFile(this.toFileSystemResource(resource), content, opts);\n\t}\n\n\tdelete(resource: URI, opts: IFileDeleteOptions): Promise<void> {\n\t\treturn this.fileSystemProvider.delete(this.toFileSystemResource(resource), opts);\n\t}\n\n\tcopy(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void> {\n\t\tif (hasFileFolderCopyCapability(this.fileSystemProvider)) {\n\t\t\treturn this.fileSystemProvider.copy(this.toFileSystemResource(from), this.toFileSystemResource(to), opts);\n\t\t}\n\t\tthrow new Error('copy not supported');\n\t}\n\n\tprivate handleFileChanges(changes: readonly IFileChange[]): void {\n\t\tconst userDataChanges: IFileChange[] = [];\n\t\tfor (const change of changes) {\n\t\t\tif (change.resource.scheme !== this.fileSystemScheme) {\n\t\t\t\tcontinue; // only interested in file schemes\n\t\t\t}\n\n\t\t\tconst userDataResource = this.toUserDataResource(change.resource);\n\t\t\tif (this.watchResources.findSubstr(userDataResource)) {\n\t\t\t\tuserDataChanges.push({\n\t\t\t\t\tresource: userDataResource,\n\t\t\t\t\ttype: change.type\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (userDataChanges.length) {\n\t\t\tthis.logService.debug('User data changed');\n\t\t\tthis._onDidChangeFile.fire(userDataChanges);\n\t\t}\n\t}\n\n\tprivate toFileSystemResource(userDataResource: URI): URI {\n\t\treturn userDataResource.with({ scheme: this.fileSystemScheme });\n\t}\n\n\tprivate toUserDataResource(fileSystemResource: URI): URI {\n\t\treturn fileSystemResource.with({ scheme: this.userDataScheme });\n\t}\n\n}\n"]}