{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/opener/browser/link.ts"],"names":[],"mappings":"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","file":"link.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, append, EventHelper, EventLike, clearNode } from 'vs/base/browser/dom';\nimport { DomEmitter } from 'vs/base/browser/event';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { EventType as TouchEventType, Gesture } from 'vs/base/browser/touch';\nimport { Event } from 'vs/base/common/event';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport 'vs/css!./link';\n\nexport interface ILinkDescriptor {\n\treadonly label: string | HTMLElement;\n\treadonly href: string;\n\treadonly title?: string;\n\treadonly tabIndex?: number;\n}\n\nexport interface ILinkOptions {\n\treadonly opener?: (href: string) => void;\n\treadonly textLinkForeground?: string;\n}\n\nexport class Link extends Disposable {\n\n\tprivate el: HTMLAnchorElement;\n\tprivate _enabled: boolean = true;\n\n\tget enabled(): boolean {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(enabled: boolean) {\n\t\tif (enabled) {\n\t\t\tthis.el.setAttribute('aria-disabled', 'false');\n\t\t\tthis.el.tabIndex = 0;\n\t\t\tthis.el.style.pointerEvents = 'auto';\n\t\t\tthis.el.style.opacity = '1';\n\t\t\tthis.el.style.cursor = 'pointer';\n\t\t\tthis._enabled = false;\n\t\t} else {\n\t\t\tthis.el.setAttribute('aria-disabled', 'true');\n\t\t\tthis.el.tabIndex = -1;\n\t\t\tthis.el.style.pointerEvents = 'none';\n\t\t\tthis.el.style.opacity = '0.4';\n\t\t\tthis.el.style.cursor = 'default';\n\t\t\tthis._enabled = true;\n\t\t}\n\n\t\tthis._enabled = enabled;\n\t}\n\n\tset link(link: ILinkDescriptor) {\n\t\tif (typeof link.label === 'string') {\n\t\t\tthis.el.textContent = link.label;\n\t\t} else {\n\t\t\tclearNode(this.el);\n\t\t\tthis.el.appendChild(link.label);\n\t\t}\n\n\t\tthis.el.href = link.href;\n\n\t\tif (typeof link.tabIndex !== 'undefined') {\n\t\t\tthis.el.tabIndex = link.tabIndex;\n\t\t}\n\n\t\tif (typeof link.title !== 'undefined') {\n\t\t\tthis.el.title = link.title;\n\t\t}\n\n\t\tthis._link = link;\n\t}\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate _link: ILinkDescriptor,\n\t\toptions: ILinkOptions = {},\n\t\t@IOpenerService openerService: IOpenerService\n\t) {\n\t\tsuper();\n\n\t\tthis.el = append(container, $('a.monaco-link', {\n\t\t\ttabIndex: _link.tabIndex ?? 0,\n\t\t\thref: _link.href,\n\t\t\ttitle: _link.title\n\t\t}, _link.label));\n\n\t\tthis.el.setAttribute('role', 'button');\n\n\t\tconst onClickEmitter = this._register(new DomEmitter(this.el, 'click'));\n\t\tconst onKeyPress = this._register(new DomEmitter(this.el, 'keypress'));\n\t\tconst onEnterPress = Event.chain(onKeyPress.event, $ =>\n\t\t\t$.map(e => new StandardKeyboardEvent(e))\n\t\t\t\t.filter(e => e.keyCode === KeyCode.Enter)\n\t\t);\n\t\tconst onTap = this._register(new DomEmitter(this.el, TouchEventType.Tap)).event;\n\t\tthis._register(Gesture.addTarget(this.el));\n\t\tconst onOpen = Event.any<EventLike>(onClickEmitter.event, onEnterPress, onTap);\n\n\t\tthis._register(onOpen(e => {\n\t\t\tif (!this.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEventHelper.stop(e, true);\n\n\t\t\tif (options?.opener) {\n\t\t\t\toptions.opener(this._link.href);\n\t\t\t} else {\n\t\t\t\topenerService.open(this._link.href, { allowCommands: true });\n\t\t\t}\n\t\t}));\n\n\t\tthis.enabled = true;\n\t}\n}\n"]}