{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/profiling/node/profilingService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,MAAa,IAAI;QAAjB;YAIkB,MAAC,GAAW,IAAI,GAAG,EAA4B,CAAC;QAmBlE,CAAC;QAjBA,KAAK,CAAC,cAAc,CAAC,OAAyB;YAC7C,MAAM,IAAI,GAAG,sDAAa,qBAAqB,2BAAC,CAAC;YACjD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;YACxF,MAAM,EAAE,GAAG,IAAA,UAAG,GAAW,CAAC;YAC1B,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;YAChC,OAAO,EAAE,CAAC;QACX,CAAC;QAED,KAAK,CAAC,aAAa,CAAC,SAAiB;YACpC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,CAAC,OAAO,EAAE;gBACb,MAAM,IAAI,KAAK,CAAC,oBAAoB,SAAS,GAAG,CAAC,CAAC;aAClD;YACD,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;YACpC,IAAI,CAAC,CAAC,CAAS,MAAM,CAAC,SAAS,CAAC,CAAC;YACjC,OAAO,MAAM,CAAC,OAAO,CAAC;QACvB,CAAC;KACD;IAvBD,oBAuBC","file":"profilingService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ProfilingSession } from 'v8-inspect-profiler';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IV8InspectProfilingService, IV8Profile } from 'vs/platform/profiling/common/profiling';\n\nexport class InspectProfilingService implements IV8InspectProfilingService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly _sessions = new Map<string, ProfilingSession>();\n\n\tasync startProfiling(options: { port: number }): Promise<string> {\n\t\tconst prof = await import('v8-inspect-profiler');\n\t\tconst session = await prof.startProfiling({ port: options.port, checkForPaused: true });\n\t\tconst id = generateUuid();\n\t\tthis._sessions.set(id, session);\n\t\treturn id;\n\t}\n\n\tasync stopProfiling(sessionId: string): Promise<IV8Profile> {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (!session) {\n\t\t\tthrow new Error(`UNKNOWN session '${sessionId}'`);\n\t\t}\n\t\tconst result = await session.stop();\n\t\tthis._sessions.delete(sessionId);\n\t\treturn result.profile;\n\t}\n}\n"]}