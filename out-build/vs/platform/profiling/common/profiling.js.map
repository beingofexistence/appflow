{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/profiling/common/profiling.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IA8BnF,QAAA,GAAG,GAA0B,IAAA,mBAAG,EAAyC,4BAA4B,CAAC,CAAC;IAYpH,IAAiB,KAAK,CAgBrB;IAhBD,WAAiB,KAAK;QAErB,SAAgB,cAAc,CAAC,OAAmB;YACjD,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC;QACvD,CAAC;QAFe,oBAAc,iBAE7B,CAAA;QAED,SAAgB,oBAAoB,CAAC,OAAmB,EAAE,UAAkB,iBAAiB;YAC5F,KAAK,MAAM,IAAI,IAAI,OAAO,CAAC,KAAK,EAAE;gBACjC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;oBACzC,IAAI,IAAA,UAAG,EAAQ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBACvF,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAA,UAAG,EAAE,OAAO,EAAE,IAAA,UAAG,EAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;qBACjE;iBACD;aACD;YACD,OAAO,OAAO,CAAC;QAChB,CAAC;QATe,0BAAoB,uBASnC,CAAA;IACF,CAAC,EAhBgB,KAAK,qBAAL,KAAK,QAgBrB","file":"profiling.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { basename, isAbsolute, join } from 'vs/base/common/path';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IV8Profile {\n\tnodes: IV8ProfileNode[];\n\tsamples?: number[];\n\ttimeDeltas?: number[];\n\tstartTime: number;\n\tendTime: number;\n}\n\nexport interface IV8ProfileNode {\n\tid: number;\n\thitCount?: number;\n\tchildren?: number[];\n\tcallFrame: IV8CallFrame;\n\tdeoptReason?: string;\n\tpositionTicks?: { line: number; ticks: number }[];\n}\n\nexport interface IV8CallFrame {\n\turl: string;\n\tscriptId: string;\n\tfunctionName: string;\n\tlineNumber: number;\n\tcolumnNumber: number;\n}\n\nexport const IV8InspectProfilingService = createDecorator<IV8InspectProfilingService>('IV8InspectProfilingService');\n\nexport interface IV8InspectProfilingService {\n\n\t_serviceBrand: undefined;\n\n\tstartProfiling(options: { port: number }): Promise<string>;\n\n\tstopProfiling(sessionId: string): Promise<IV8Profile>;\n}\n\n\nexport namespace Utils {\n\n\texport function isValidProfile(profile: IV8Profile): profile is Required<IV8Profile> {\n\t\treturn Boolean(profile.samples && profile.timeDeltas);\n\t}\n\n\texport function rewriteAbsolutePaths(profile: IV8Profile, replace: string = 'noAbsolutePaths') {\n\t\tfor (const node of profile.nodes) {\n\t\t\tif (node.callFrame && node.callFrame.url) {\n\t\t\t\tif (isAbsolute(node.callFrame.url) || /^\\w[\\w\\d+.-]*:\\/\\/\\/?/.test(node.callFrame.url)) {\n\t\t\t\t\tnode.callFrame.url = join(replace, basename(node.callFrame.url));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn profile;\n\t}\n}\n"]}