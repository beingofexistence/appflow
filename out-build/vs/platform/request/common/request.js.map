{"version":3,"sources":["vs/platform/request/common/request.ts"],"names":[],"mappings":"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","file":"request.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IHeaders, IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { localize } from 'vs/nls';\nimport { ConfigurationScope, Extensions, IConfigurationNode, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CONTEXT_LOG_LEVEL, ILogger, ILoggerService, LogLevel, LogLevelToString } from 'vs/platform/log/common/log';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\treadonly _serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nclass LoggableHeaders {\n\n\tprivate headers: IHeaders | undefined;\n\n\tconstructor(private readonly original: IHeaders) { }\n\n\ttoJSON(): any {\n\t\tif (!this.headers) {\n\t\t\tconst headers = Object.create(null);\n\t\t\tfor (const key in this.original) {\n\t\t\t\tif (key.toLowerCase() === 'authorization' || key.toLowerCase() === 'proxy-authorization') {\n\t\t\t\t\theaders[key] = '*****';\n\t\t\t\t} else {\n\t\t\t\t\theaders[key] = this.original[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.headers = headers;\n\t\t}\n\t\treturn this.headers;\n\t}\n\n}\n\nexport abstract class AbstractRequestService extends Disposable implements IRequestService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprotected readonly logger: ILogger;\n\tprivate counter = 0;\n\n\tconstructor(\n\t\tloggerService: ILoggerService\n\t) {\n\t\tsuper();\n\t\tthis.logger = loggerService.createLogger('network', {\n\t\t\tname: localize('request', \"Network Requests\"),\n\t\t\twhen: CONTEXT_LOG_LEVEL.isEqualTo(LogLevelToString(LogLevel.Trace)).serialize()\n\t\t});\n\t}\n\n\tprotected async logAndRequest(stack: string, options: IRequestOptions, request: () => Promise<IRequestContext>): Promise<IRequestContext> {\n\t\tconst prefix = `${stack} #${++this.counter}: ${options.url}`;\n\t\tthis.logger.trace(`${prefix} - begin`, options.type, new LoggableHeaders(options.headers ?? {}));\n\t\ttry {\n\t\t\tconst result = await request();\n\t\t\tthis.logger.trace(`${prefix} - end`, options.type, result.res.statusCode, result.res.headers);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthis.logger.error(`${prefix} - error`, options.type, getErrorMessage(error));\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tabstract request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\tabstract resolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nexport function hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asTextOrError(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\treturn asText(context);\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\tconst str = buffer.toString();\n\ttry {\n\t\treturn JSON.parse(str);\n\t} catch (err) {\n\t\terr.message += ':\\n' + str;\n\t\tthrow err;\n\t}\n}\n\nexport function updateProxyConfigurationsScope(scope: ConfigurationScope): void {\n\tregisterProxyConfigurations(scope);\n}\n\nlet proxyConfiguration: IConfigurationNode | undefined;\nfunction registerProxyConfigurations(scope: ConfigurationScope): void {\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\tconst oldProxyConfiguration = proxyConfiguration;\n\tproxyConfiguration = {\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tscope,\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^(https?|socks|socks4a?|socks5h?)://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyKerberosServicePrincipal': {\n\t\t\t\ttype: 'string',\n\t\t\t\tmarkdownDescription: localize('proxyKerberosServicePrincipal', \"Overrides the principal service name for Kerberos authentication with the HTTP proxy. A default based on the proxy hostname is used when this is not set.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'fallback', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportFallback', \"Enable proxy support for extensions, fall back to request options, when no proxy found.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS, a reload of the window is required after turning this off.)\"),\n\t\t\t\trestricted: true\n\t\t\t}\n\t\t}\n\t};\n\tconfigurationRegistry.updateConfigurations({ add: [proxyConfiguration], remove: oldProxyConfiguration ? [oldProxyConfiguration] : [] });\n}\n\nregisterProxyConfigurations(ConfigurationScope.APPLICATION);\n"]}