{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/checksum/test/node/checksumService.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAYhG,KAAK,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAE9B,IAAI,sBAA2B,CAAoB;QACnD,IAAI,WAAgB,CAAU;QAE9B,KAAK,CAAC,GAAG,EAAE;YACV,MAAM,UAAU,GAAG,IAAI,SAAG,EAAa,CAAC;YACxC,WAAW,GAAG,IAAI,iBAAG,CAAS,UAAU,CAAC,CAAC;YAE1C,sBAAsB,GAAG,IAAI,4BAAG,CAAoB,UAAU,CAAC,CAAC;YAChE,WAAW,CAAC,gBAAgB,CAAC,iBAAO,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,GAAG,EAAE;YACb,sBAAsB,CAAC,OAAO,EAAE,CAAC;YACjC,WAAW,CAAC,OAAO,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YAC3B,MAAM,eAAe,GAAG,IAAI,sBAAI,CAAY,WAAW,CAAC,CAAC;YAEzD,MAAM,QAAQ,GAAG,MAAM,eAAe,CAAC,QAAQ,CAAC,SAAG,CAAC,IAAI,CAAC,aAAG,CAAQ,SAAS,CAAC,mDAAmD,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5I,MAAM,CAAC,EAAE,CAAC,QAAQ,KAAK,wBAAwB,IAAI,QAAQ,KAAK,wBAAwB,CAAC,CAAC,CAAC,qCAAqC;QACjI,CAAC,CAAC,CAAC;QAEH,IAAA,WAAG,GAAsC,CAAC;IAC3C,CAAC,CAAC,CAAC","file":"checksumService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { ChecksumService } from 'vs/platform/checksum/node/checksumService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { NullLogService } from 'vs/platform/log/common/log';\n\nsuite('Checksum Service', () => {\n\n\tlet diskFileSystemProvider: DiskFileSystemProvider;\n\tlet fileService: IFileService;\n\n\tsetup(() => {\n\t\tconst logService = new NullLogService();\n\t\tfileService = new FileService(logService);\n\n\t\tdiskFileSystemProvider = new DiskFileSystemProvider(logService);\n\t\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\t});\n\n\tteardown(() => {\n\t\tdiskFileSystemProvider.dispose();\n\t\tfileService.dispose();\n\t});\n\n\ttest('checksum', async () => {\n\t\tconst checksumService = new ChecksumService(fileService);\n\n\t\tconst checksum = await checksumService.checksum(URI.file(FileAccess.asFileUri('vs/platform/checksum/test/node/fixtures/lorem.txt').fsPath));\n\t\tassert.ok(checksum === '8mi5KF8kcb817zmlal1kZA' || checksum === 'DnUKbJ1bHPPNZoHgHV25sg'); // depends on line endings git config\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}