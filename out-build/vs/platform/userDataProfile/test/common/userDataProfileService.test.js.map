{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataProfile/test/common/userDataProfileService.test.ts"],"names":[],"mappings":"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","file":"userDataProfileService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { AbstractNativeEnvironmentService } from 'vs/platform/environment/common/environmentService';\nimport product from 'vs/platform/product/common/product';\nimport { InMemoryUserDataProfilesService, UserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nconst ROOT = URI.file('tests').with({ scheme: 'vscode-tests' });\n\nclass TestEnvironmentService extends AbstractNativeEnvironmentService {\n\tconstructor(private readonly _appSettingsHome: URI) {\n\t\tsuper(Object.create(null), Object.create(null), { _serviceBrand: undefined, ...product });\n\t}\n\toverride get userRoamingDataHome() { return this._appSettingsHome.with({ scheme: Schemas.vscodeUserData }); }\n\toverride get cacheHome() { return this.userRoamingDataHome; }\n}\n\nsuite('UserDataProfileService (Common)', () => {\n\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\tlet testObject: UserDataProfilesService;\n\tlet environmentService: TestEnvironmentService;\n\n\tsetup(async () => {\n\t\tconst logService = new NullLogService();\n\t\tconst fileService = disposables.add(new FileService(logService));\n\t\tconst fileSystemProvider = disposables.add(new InMemoryFileSystemProvider());\n\t\tdisposables.add(fileService.registerProvider(ROOT.scheme, fileSystemProvider));\n\t\tdisposables.add(fileService.registerProvider(Schemas.vscodeUserData, fileSystemProvider));\n\n\t\tenvironmentService = new TestEnvironmentService(joinPath(ROOT, 'User'));\n\t\ttestObject = disposables.add(new InMemoryUserDataProfilesService(environmentService, fileService, disposables.add(new UriIdentityService(fileService)), logService));\n\t});\n\n\n\ttest('default profile', () => {\n\t\tassert.strictEqual(testObject.defaultProfile.isDefault, true);\n\t\tassert.strictEqual(testObject.defaultProfile.useDefaultFlags, undefined);\n\t\tassert.strictEqual(testObject.defaultProfile.location.toString(), environmentService.userRoamingDataHome.toString());\n\t\tassert.strictEqual(testObject.defaultProfile.globalStorageHome.toString(), joinPath(environmentService.userRoamingDataHome, 'globalStorage').toString());\n\t\tassert.strictEqual(testObject.defaultProfile.keybindingsResource.toString(), joinPath(environmentService.userRoamingDataHome, 'keybindings.json').toString());\n\t\tassert.strictEqual(testObject.defaultProfile.settingsResource.toString(), joinPath(environmentService.userRoamingDataHome, 'settings.json').toString());\n\t\tassert.strictEqual(testObject.defaultProfile.snippetsHome.toString(), joinPath(environmentService.userRoamingDataHome, 'snippets').toString());\n\t\tassert.strictEqual(testObject.defaultProfile.tasksResource.toString(), joinPath(environmentService.userRoamingDataHome, 'tasks.json').toString());\n\t\tassert.strictEqual(testObject.defaultProfile.extensionsResource.toString(), joinPath(environmentService.userRoamingDataHome, 'extensions.json').toString());\n\t});\n\n\ttest('profiles always include default profile', () => {\n\t\tassert.deepStrictEqual(testObject.profiles.length, 1);\n\t\tassert.deepStrictEqual(testObject.profiles[0].isDefault, true);\n\t});\n\n\ttest('create profile with id', async () => {\n\t\tconst profile = await testObject.createProfile('id', 'name');\n\t\tassert.deepStrictEqual(testObject.profiles.length, 2);\n\t\tassert.deepStrictEqual(profile.id, 'id');\n\t\tassert.deepStrictEqual(profile.name, 'name');\n\t\tassert.deepStrictEqual(!!profile.isTransient, false);\n\t\tassert.deepStrictEqual(testObject.profiles[1].id, profile.id);\n\t\tassert.deepStrictEqual(testObject.profiles[1].name, profile.name);\n\t});\n\n\ttest('create profile with id, name and transient', async () => {\n\t\tconst profile = await testObject.createProfile('id', 'name', { transient: true });\n\t\tassert.deepStrictEqual(testObject.profiles.length, 2);\n\t\tassert.deepStrictEqual(profile.id, 'id');\n\t\tassert.deepStrictEqual(profile.name, 'name');\n\t\tassert.deepStrictEqual(!!profile.isTransient, true);\n\t\tassert.deepStrictEqual(testObject.profiles[1].id, profile.id);\n\t});\n\n\ttest('create transient profiles', async () => {\n\t\tconst profile1 = await testObject.createTransientProfile();\n\t\tconst profile2 = await testObject.createTransientProfile();\n\t\tconst profile3 = await testObject.createTransientProfile();\n\t\tconst profile4 = await testObject.createProfile('id', 'name', { transient: true });\n\n\t\tassert.deepStrictEqual(testObject.profiles.length, 5);\n\t\tassert.deepStrictEqual(profile1.name, 'Temp 1');\n\t\tassert.deepStrictEqual(profile1.isTransient, true);\n\t\tassert.deepStrictEqual(testObject.profiles[1].id, profile1.id);\n\t\tassert.deepStrictEqual(profile2.name, 'Temp 2');\n\t\tassert.deepStrictEqual(profile2.isTransient, true);\n\t\tassert.deepStrictEqual(testObject.profiles[2].id, profile2.id);\n\t\tassert.deepStrictEqual(profile3.name, 'Temp 3');\n\t\tassert.deepStrictEqual(profile3.isTransient, true);\n\t\tassert.deepStrictEqual(testObject.profiles[3].id, profile3.id);\n\t\tassert.deepStrictEqual(profile4.name, 'name');\n\t\tassert.deepStrictEqual(profile4.isTransient, true);\n\t\tassert.deepStrictEqual(testObject.profiles[4].id, profile4.id);\n\t});\n\n\ttest('create transient profile when a normal profile with Temp is already created', async () => {\n\t\tawait testObject.createNamedProfile('Temp 1');\n\t\tconst profile1 = await testObject.createTransientProfile();\n\n\t\tassert.deepStrictEqual(profile1.name, 'Temp 2');\n\t\tassert.deepStrictEqual(profile1.isTransient, true);\n\t});\n\n\ttest('profiles include default profile with extension resource defined when transiet prrofile is created', async () => {\n\t\tawait testObject.createTransientProfile();\n\n\t\tassert.deepStrictEqual(testObject.profiles.length, 2);\n\t\tassert.deepStrictEqual(testObject.profiles[0].isDefault, true);\n\t});\n\n\ttest('profiles include default profile with extension resource undefined when transiet prrofile is removed', async () => {\n\t\tconst profile = await testObject.createTransientProfile();\n\t\tawait testObject.removeProfile(profile);\n\n\t\tassert.deepStrictEqual(testObject.profiles.length, 1);\n\t\tassert.deepStrictEqual(testObject.profiles[0].isDefault, true);\n\t});\n\n\ttest('update named profile', async () => {\n\t\tconst profile = await testObject.createNamedProfile('name');\n\t\tawait testObject.updateProfile(profile, { name: 'name changed' });\n\n\t\tassert.deepStrictEqual(testObject.profiles.length, 2);\n\t\tassert.deepStrictEqual(testObject.profiles[1].name, 'name changed');\n\t\tassert.deepStrictEqual(!!testObject.profiles[1].isTransient, false);\n\t\tassert.deepStrictEqual(testObject.profiles[1].id, profile.id);\n\t});\n\n\ttest('persist transient profile', async () => {\n\t\tconst profile = await testObject.createTransientProfile();\n\t\tawait testObject.updateProfile(profile, { name: 'saved', transient: false });\n\n\t\tassert.deepStrictEqual(testObject.profiles.length, 2);\n\t\tassert.deepStrictEqual(testObject.profiles[1].name, 'saved');\n\t\tassert.deepStrictEqual(!!testObject.profiles[1].isTransient, false);\n\t\tassert.deepStrictEqual(testObject.profiles[1].id, profile.id);\n\t});\n\n\ttest('persist transient profile (2)', async () => {\n\t\tconst profile = await testObject.createProfile('id', 'name', { transient: true });\n\t\tawait testObject.updateProfile(profile, { name: 'saved', transient: false });\n\n\t\tassert.deepStrictEqual(testObject.profiles.length, 2);\n\t\tassert.deepStrictEqual(testObject.profiles[1].name, 'saved');\n\t\tassert.deepStrictEqual(!!testObject.profiles[1].isTransient, false);\n\t\tassert.deepStrictEqual(testObject.profiles[1].id, profile.id);\n\t});\n\n\ttest('save transient profile', async () => {\n\t\tconst profile = await testObject.createTransientProfile();\n\t\tawait testObject.updateProfile(profile, { name: 'saved' });\n\n\t\tassert.deepStrictEqual(testObject.profiles.length, 2);\n\t\tassert.deepStrictEqual(testObject.profiles[1].name, 'saved');\n\t\tassert.deepStrictEqual(!!testObject.profiles[1].isTransient, true);\n\t\tassert.deepStrictEqual(testObject.profiles[1].id, profile.id);\n\t});\n\n\ttest('short name', async () => {\n\t\tconst profile = await testObject.createNamedProfile('name', { shortName: 'short' });\n\t\tassert.strictEqual(profile.shortName, 'short');\n\n\t\tawait testObject.updateProfile(profile, { shortName: 'short changed' });\n\n\t\tassert.deepStrictEqual(testObject.profiles.length, 2);\n\t\tassert.deepStrictEqual(testObject.profiles[1].name, 'name');\n\t\tassert.deepStrictEqual(testObject.profiles[1].shortName, 'short changed');\n\t\tassert.deepStrictEqual(!!testObject.profiles[1].isTransient, false);\n\t\tassert.deepStrictEqual(testObject.profiles[1].id, profile.id);\n\t});\n\n\ttest('profile using default profile for settings', async () => {\n\t\tconst profile = await testObject.createNamedProfile('name', { useDefaultFlags: { settings: true } });\n\n\t\tassert.strictEqual(profile.isDefault, false);\n\t\tassert.deepStrictEqual(profile.useDefaultFlags, { settings: true });\n\t\tassert.strictEqual(profile.settingsResource.toString(), testObject.defaultProfile.settingsResource.toString());\n\t});\n\n\ttest('profile using default profile for keybindings', async () => {\n\t\tconst profile = await testObject.createNamedProfile('name', { useDefaultFlags: { keybindings: true } });\n\n\t\tassert.strictEqual(profile.isDefault, false);\n\t\tassert.deepStrictEqual(profile.useDefaultFlags, { keybindings: true });\n\t\tassert.strictEqual(profile.keybindingsResource.toString(), testObject.defaultProfile.keybindingsResource.toString());\n\t});\n\n\ttest('profile using default profile for snippets', async () => {\n\t\tconst profile = await testObject.createNamedProfile('name', { useDefaultFlags: { snippets: true } });\n\n\t\tassert.strictEqual(profile.isDefault, false);\n\t\tassert.deepStrictEqual(profile.useDefaultFlags, { snippets: true });\n\t\tassert.strictEqual(profile.snippetsHome.toString(), testObject.defaultProfile.snippetsHome.toString());\n\t});\n\n\ttest('profile using default profile for tasks', async () => {\n\t\tconst profile = await testObject.createNamedProfile('name', { useDefaultFlags: { tasks: true } });\n\n\t\tassert.strictEqual(profile.isDefault, false);\n\t\tassert.deepStrictEqual(profile.useDefaultFlags, { tasks: true });\n\t\tassert.strictEqual(profile.tasksResource.toString(), testObject.defaultProfile.tasksResource.toString());\n\t});\n\n\ttest('profile using default profile for global state', async () => {\n\t\tconst profile = await testObject.createNamedProfile('name', { useDefaultFlags: { globalState: true } });\n\n\t\tassert.strictEqual(profile.isDefault, false);\n\t\tassert.deepStrictEqual(profile.useDefaultFlags, { globalState: true });\n\t\tassert.strictEqual(profile.globalStorageHome.toString(), testObject.defaultProfile.globalStorageHome.toString());\n\t});\n\n\ttest('profile using default profile for extensions', async () => {\n\t\tconst profile = await testObject.createNamedProfile('name', { useDefaultFlags: { extensions: true } });\n\n\t\tassert.strictEqual(profile.isDefault, false);\n\t\tassert.deepStrictEqual(profile.useDefaultFlags, { extensions: true });\n\t\tassert.strictEqual(profile.extensionsResource.toString(), testObject.defaultProfile.extensionsResource.toString());\n\t});\n\n\ttest('update profile using default profile for keybindings', async () => {\n\t\tlet profile = await testObject.createNamedProfile('name');\n\t\tprofile = await testObject.updateProfile(profile, { useDefaultFlags: { keybindings: true } });\n\n\t\tassert.strictEqual(profile.isDefault, false);\n\t\tassert.deepStrictEqual(profile.useDefaultFlags, { keybindings: true });\n\t\tassert.strictEqual(profile.keybindingsResource.toString(), testObject.defaultProfile.keybindingsResource.toString());\n\t});\n\n});\n"]}