{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataProfile/common/userDataProfileIpc.ts"],"names":[],"mappings":"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","file":"userDataProfileIpc.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { URI, UriDto } from 'vs/base/common/uri';\nimport { DidChangeProfilesEvent, IUserDataProfile, IUserDataProfileOptions, IUserDataProfilesService, IUserDataProfileUpdateOptions, reviveProfile } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IAnyWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\nimport { IURITransformer, transformIncomingURIs, transformOutgoingURIs } from 'vs/base/common/uriIpc';\n\nexport class RemoteUserDataProfilesServiceChannel implements IServerChannel {\n\n\tconstructor(\n\t\tprivate readonly service: IUserDataProfilesService,\n\t\tprivate readonly getUriTransformer: (requestContext: any) => IURITransformer\n\t) { }\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeProfiles': return Event.map<DidChangeProfilesEvent, DidChangeProfilesEvent>(this.service.onDidChangeProfiles, e => {\n\t\t\t\treturn {\n\t\t\t\t\tall: e.all.map(p => transformOutgoingURIs({ ...p }, uriTransformer)),\n\t\t\t\t\tadded: e.added.map(p => transformOutgoingURIs({ ...p }, uriTransformer)),\n\t\t\t\t\tremoved: e.removed.map(p => transformOutgoingURIs({ ...p }, uriTransformer)),\n\t\t\t\t\tupdated: e.updated.map(p => transformOutgoingURIs({ ...p }, uriTransformer))\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tasync call(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'createProfile': {\n\t\t\t\tconst profile = await this.service.createProfile(args[0], args[1], args[2]);\n\t\t\t\treturn transformOutgoingURIs({ ...profile }, uriTransformer);\n\t\t\t}\n\t\t\tcase 'updateProfile': {\n\t\t\t\tlet profile = reviveProfile(transformIncomingURIs(args[0], uriTransformer), this.service.profilesHome.scheme);\n\t\t\t\tprofile = await this.service.updateProfile(profile, args[1]);\n\t\t\t\treturn transformOutgoingURIs({ ...profile }, uriTransformer);\n\t\t\t}\n\t\t\tcase 'removeProfile': {\n\t\t\t\tconst profile = reviveProfile(transformIncomingURIs(args[0], uriTransformer), this.service.profilesHome.scheme);\n\t\t\t\treturn this.service.removeProfile(profile);\n\t\t\t}\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class UserDataProfilesService extends Disposable implements IUserDataProfilesService {\n\n\treadonly _serviceBrand: undefined;\n\n\tget defaultProfile(): IUserDataProfile { return this.profiles[0]; }\n\tprivate _profiles: IUserDataProfile[] = [];\n\tget profiles(): IUserDataProfile[] { return this._profiles; }\n\n\tprivate readonly _onDidChangeProfiles = this._register(new Emitter<DidChangeProfilesEvent>());\n\treadonly onDidChangeProfiles = this._onDidChangeProfiles.event;\n\n\treadonly onDidResetWorkspaces: Event<void>;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(\n\t\tprofiles: readonly UriDto<IUserDataProfile>[],\n\t\treadonly profilesHome: URI,\n\t\tprivate readonly channel: IChannel,\n\t) {\n\t\tsuper();\n\t\tthis._profiles = profiles.map(profile => reviveProfile(profile, this.profilesHome.scheme));\n\t\tthis._register(this.channel.listen<DidChangeProfilesEvent>('onDidChangeProfiles')(e => {\n\t\t\tconst added = e.added.map(profile => reviveProfile(profile, this.profilesHome.scheme));\n\t\t\tconst removed = e.removed.map(profile => reviveProfile(profile, this.profilesHome.scheme));\n\t\t\tconst updated = e.updated.map(profile => reviveProfile(profile, this.profilesHome.scheme));\n\t\t\tthis._profiles = e.all.map(profile => reviveProfile(profile, this.profilesHome.scheme));\n\t\t\tthis._onDidChangeProfiles.fire({ added, removed, updated, all: this.profiles });\n\t\t}));\n\t\tthis.onDidResetWorkspaces = this.channel.listen<void>('onDidResetWorkspaces');\n\t}\n\n\tsetEnablement(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tasync createNamedProfile(name: string, options?: IUserDataProfileOptions, workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile> {\n\t\tconst result = await this.channel.call<UriDto<IUserDataProfile>>('createNamedProfile', [name, options, workspaceIdentifier]);\n\t\treturn reviveProfile(result, this.profilesHome.scheme);\n\t}\n\n\tasync createProfile(id: string, name: string, options?: IUserDataProfileOptions, workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile> {\n\t\tconst result = await this.channel.call<UriDto<IUserDataProfile>>('createProfile', [id, name, options, workspaceIdentifier]);\n\t\treturn reviveProfile(result, this.profilesHome.scheme);\n\t}\n\n\tasync createTransientProfile(workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile> {\n\t\tconst result = await this.channel.call<UriDto<IUserDataProfile>>('createTransientProfile', [workspaceIdentifier]);\n\t\treturn reviveProfile(result, this.profilesHome.scheme);\n\t}\n\n\tasync setProfileForWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier, profile: IUserDataProfile): Promise<void> {\n\t\tawait this.channel.call<UriDto<IUserDataProfile>>('setProfileForWorkspace', [workspaceIdentifier, profile]);\n\t}\n\n\tremoveProfile(profile: IUserDataProfile): Promise<void> {\n\t\treturn this.channel.call('removeProfile', [profile]);\n\t}\n\n\tasync updateProfile(profile: IUserDataProfile, updateOptions: IUserDataProfileUpdateOptions): Promise<IUserDataProfile> {\n\t\tconst result = await this.channel.call<UriDto<IUserDataProfile>>('updateProfile', [profile, updateOptions]);\n\t\treturn reviveProfile(result, this.profilesHome.scheme);\n\t}\n\n\tresetWorkspaces(): Promise<void> {\n\t\treturn this.channel.call('resetWorkspaces');\n\t}\n\n\tcleanUp(): Promise<void> {\n\t\treturn this.channel.call('cleanUp');\n\t}\n\n\tcleanUpTransientProfiles(): Promise<void> {\n\t\treturn this.channel.call('cleanUpTransientProfiles');\n\t}\n\n}\n"]}