{"version":3,"sources":["vs/platform/userDataProfile/common/userDataProfile.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAqBhG,IAAkB,mBAOjB;IAPD,WAAkB,mBAAmB;QACpC,4CAAqB,CAAA;QACrB,kDAA2B,CAAA;QAC3B,4CAAqB,CAAA;QACrB,sCAAe,CAAA;QACf,gDAAyB,CAAA;QACzB,kDAA2B,CAAA;IAC5B,CAAC,EAPiB,mBAAmB,mCAAnB,mBAAmB,QAOpC;IAwBD,SAAgB,GAAG,CAAe,KAAc;QAC/C,MAAM,SAAS,GAAG,KAAqC,CAAC;QAExD,OAAO,CAAC,CAAC,CAAC,SAAS,IAAI,OAAO,SAAS,KAAK,QAAQ;eAChD,OAAO,SAAS,CAAC,EAAE,KAAK,QAAQ;eAChC,OAAO,SAAS,CAAC,SAAS,KAAK,SAAS;eACxC,OAAO,SAAS,CAAC,IAAI,KAAK,QAAQ;eAClC,SAAG,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;eAC7B,SAAG,CAAC,KAAK,CAAC,SAAS,CAAC,iBAAiB,CAAC;eACtC,SAAG,CAAC,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC;eACrC,SAAG,CAAC,KAAK,CAAC,SAAS,CAAC,mBAAmB,CAAC;eACxC,SAAG,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC;eAClC,SAAG,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC;eACjC,SAAG,CAAC,KAAK,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAC1C,CAAC;IACH,CAAC;IAfD,kBAeC;IAwBY,QAAA,GAAG,GAAwB,IAAA,mBAAG,EAAuC,0BAA0B,CAAC,CAAC;IA0B9G,SAAgB,GAAG,CAAW,OAAiC,EAAE,MAAc;QAC9E,OAAO;YACN,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,QAAQ,EAAE,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC;YACvD,iBAAiB,EAAE,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC;YACzE,gBAAgB,EAAE,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC;YACvE,mBAAmB,EAAE,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC;YAC7E,aAAa,EAAE,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC;YACjE,YAAY,EAAE,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC;YAC/D,kBAAkB,EAAE,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC;YAC3E,SAAS,EAAE,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC;YACzD,eAAe,EAAE,OAAO,CAAC,eAAe;YACxC,WAAW,EAAE,OAAO,CAAC,WAAW;SAChC,CAAC;IACH,CAAC;IAjBD,kBAiBC;IAED,SAAgB,GAAG,CAAe,EAAU,EAAE,IAAY,EAAE,QAAa,EAAE,iBAAsB,EAAE,OAAiC,EAAE,cAAiC;QACtK,OAAO;YACN,EAAE;YACF,IAAI;YACJ,QAAQ;YACR,SAAS,EAAE,KAAK;YAChB,SAAS,EAAE,OAAO,EAAE,SAAS;YAC7B,iBAAiB,EAAE,cAAc,IAAI,OAAO,EAAE,eAAe,EAAE,WAAW,CAAC,CAAC,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAA,eAAG,EAAM,QAAQ,EAAE,eAAe,CAAC;YACnJ,gBAAgB,EAAE,cAAc,IAAI,OAAO,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAA,eAAG,EAAM,QAAQ,EAAE,eAAe,CAAC;YAC9I,mBAAmB,EAAE,cAAc,IAAI,OAAO,EAAE,eAAe,EAAE,WAAW,CAAC,CAAC,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAA,eAAG,EAAM,QAAQ,EAAE,kBAAkB,CAAC;YAC1J,aAAa,EAAE,cAAc,IAAI,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,IAAA,eAAG,EAAM,QAAQ,EAAE,YAAY,CAAC;YAClI,YAAY,EAAE,cAAc,IAAI,OAAO,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,IAAA,eAAG,EAAM,QAAQ,EAAE,UAAU,CAAC;YACjI,kBAAkB,EAAE,cAAc,IAAI,OAAO,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAA,eAAG,EAAM,QAAQ,EAAE,iBAAiB,CAAC;YACtJ,SAAS,EAAE,IAAA,eAAG,EAAM,iBAAiB,EAAE,EAAE,CAAC;YAC1C,eAAe,EAAE,OAAO,EAAE,eAAe;YACzC,WAAW,EAAE,OAAO,EAAE,SAAS;SAC/B,CAAC;IACH,CAAC;IAjBD,kBAiBC;IAoBM,IAAM,GAAG,GAAT,MAAM,GAAwB,SAAQ,eAAG;iBAErB,MAAC,GAAc,kBAAd,AAAgC,CAAC;iBAClC,MAAC,GAA0B,qBAA1B,AAA+C,CAAC;QAQ3E,IAAI,cAAc,KAAuB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,QAAQ,KAAyB,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAc,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAuB,QAAQ,CAAC,CAAC,CAAC,CAAC;QAsB1H,YACsB,CAA0C,EACjD,CAAmC,EAC5B,CAA0C,EAClD,CAAkC;YAE/C,KAAK,EAAE,CAAC;YALgC,MAAC,GAAD,CAAC,CAAsB;YAC9B,MAAC,GAAD,CAAC,CAAe;YACT,MAAC,GAAD,CAAC,CAAsB;YAC/B,MAAC,GAAD,CAAC,CAAc;YA/BtC,MAAC,GAAkB,IAAI,CAAC;YAOf,MAAC,GAAsB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAA8B,CAAC,CAAC;YACvF,wBAAmB,GAAG,IAAI,CAAC,CAAC,CAAoB,KAAK,CAAC;YAE5C,MAAC,GAAsB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAA8B,CAAC,CAAC;YACvF,wBAAmB,GAAG,IAAI,CAAC,CAAC,CAAoB,KAAK,CAAC;YAE5C,MAAC,GAAsB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAA8B,CAAC,CAAC;YACvF,wBAAmB,GAAG,IAAI,CAAC,CAAC,CAAoB,KAAK,CAAC;YAE9C,MAAC,GAAuB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YACpE,yBAAoB,GAAG,IAAI,CAAC,CAAC,CAAqB,KAAK,CAAC;YAEzD,MAAC,GAAyB,IAAI,GAAG,EAAqC,CAAC;YAE5D,MAAC,GAAiD;gBACpE,QAAQ,EAAE,EAAE;gBACZ,UAAU,EAAE,IAAI,SAAG,EAAU;gBAC7B,YAAY,EAAE,IAAI,GAAG,EAAE;aACvB,CAAC;YASD,IAAI,CAAC,YAAY,GAAG,IAAA,eAAG,EAAM,IAAI,CAAC,CAAC,CAAkB,mBAAmB,EAAE,UAAU,CAAC,CAAC;YACtF,IAAI,CAAC,CAAC,GAAmB,IAAA,eAAG,EAAM,IAAI,CAAC,CAAC,CAAkB,SAAS,EAAE,oBAAoB,CAAC,CAAC;QAC5F,CAAC;QAED,IAAI;YACH,IAAI,CAAC,CAAC,GAAiB,SAAS,CAAC;QAClC,CAAC;QAED,aAAa,CAAC,OAAgB;YAC7B,IAAI,IAAI,CAAC,CAAC,KAAW,OAAO,EAAE;gBAC7B,IAAI,CAAC,CAAC,GAAiB,SAAS,CAAC;gBACjC,IAAI,CAAC,CAAC,GAAS,OAAO,CAAC;aACvB;QACF,CAAC;QAED,SAAS;YACR,OAAO,IAAI,CAAC,CAAC,CAAO;QACrB,CAAC;QAGD,IAAc,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,CAAC,EAAgB;gBAC1B,MAAM,cAAc,GAAG,IAAI,CAAC,CAAC,EAAqB,CAAC;gBACnD,MAAM,QAAQ,GAAG,CAAC,cAAc,CAAC,CAAC;gBAClC,IAAI,IAAI,CAAC,CAAC,EAAQ;oBACjB,IAAI;wBACH,KAAK,MAAM,aAAa,IAAI,IAAI,CAAC,CAAC,EAAkB,EAAE;4BACrD,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,IAAA,WAAG,EAAM,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;gCACpF,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,qCAAqC,EAAE,aAAa,CAAC,QAAQ,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;gCAC1G,SAAS;6BACT;4BACD,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAe,IAAA,eAAG,EAAM,aAAa,CAAC,QAAQ,CAAC,EAAE,aAAa,CAAC,IAAI,EAAE,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAkB,EAAE,SAAS,EAAE,aAAa,CAAC,SAAS,EAAE,eAAe,EAAE,aAAa,CAAC,eAAe,EAAE,EAAE,cAAc,CAAC,CAAC,CAAC;yBAC/O;qBACD;oBAAC,OAAO,KAAK,EAAE;wBACf,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,KAAK,CAAC,CAAC;qBAC7B;iBACD;gBACD,MAAM,UAAU,GAAG,IAAI,SAAG,EAA4B,CAAC;gBACvD,MAAM,YAAY,GAAG,IAAI,GAAG,EAA4B,CAAC;gBACzD,IAAI,QAAQ,CAAC,MAAM,EAAE;oBACpB,IAAI;wBACH,MAAM,oBAAoB,GAAG,IAAI,CAAC,CAAC,EAA6B,CAAC;wBACjE,IAAI,oBAAoB,CAAC,UAAU,EAAE;4BACpC,KAAK,MAAM,CAAC,aAAa,EAAE,SAAS,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAE;gCACzF,MAAM,SAAS,GAAG,SAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;gCAC3C,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC;gCACvD,IAAI,OAAO,EAAE;oCACZ,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;iCACnC;6BACD;yBACD;wBACD,IAAI,oBAAoB,CAAC,YAAY,EAAE;4BACtC,KAAK,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAE;gCACtF,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC;gCACvD,IAAI,OAAO,EAAE;oCACZ,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;iCACpC;6BACD;yBACD;qBACD;oBAAC,OAAO,KAAK,EAAE;wBACf,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,KAAK,CAAC,CAAC;qBAC7B;iBACD;gBACD,IAAI,CAAC,CAAC,GAAiB,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,CAAC;aAC9D;YACD,OAAO,IAAI,CAAC,CAAC,CAAe;QAC7B,CAAC;QAEO,CAAC;YACR,MAAM,cAAc,GAAG,GAAG,CAAe,sBAAsB,EAAE,IAAA,cAAQ,EAAC,CAAgB,EAAE,IAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAkB,mBAAmB,EAAE,IAAI,CAAC,CAAC,CAAiB,CAAC;YAC7K,OAAO,EAAE,GAAG,cAAc,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC,EAAoC,IAAI,cAAc,CAAC,kBAAkB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;QACpJ,CAAC;QAED,KAAK,CAAC,sBAAsB,CAAC,mBAA6C;YACzE,MAAM,UAAU,GAAG,MAAM,CAAC;YAC1B,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,GAAG,IAAA,aAAG,EAAoB,UAAU,CAAC,WAAW,CAAC,CAAC;YAC/E,IAAI,SAAS,GAAG,CAAC,CAAC;YAClB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACpC,MAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC7C,MAAM,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjD,SAAS,GAAG,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;aAClD;YACD,MAAM,IAAI,GAAG,GAAG,UAAU,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;YAC9C,OAAO,IAAI,CAAC,aAAa,CAAC,IAAA,UAAG,EAAE,IAAA,UAAG,GAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,mBAAmB,CAAC,CAAC;QAC9G,CAAC;QAED,KAAK,CAAC,kBAAkB,CAAC,IAAY,EAAE,OAAiC,EAAE,mBAA6C;YACtH,OAAO,IAAI,CAAC,aAAa,CAAC,IAAA,UAAG,EAAE,IAAA,UAAG,GAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;QAClG,CAAC;QAED,KAAK,CAAC,aAAa,CAAC,EAAU,EAAE,IAAY,EAAE,OAAiC,EAAE,mBAA6C;YAC7H,IAAI,CAAC,IAAI,CAAC,CAAC,EAAQ;gBAClB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;aACrE;YAED,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,CAAC,CAAe,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAE9D,IAAI,mBAAmB,EAAE;gBACxB,MAAM,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;aAChE;YAED,OAAO,OAAO,CAAC;QAChB,CAAC;QAEO,KAAK,CAAC,CAAC,CAAe,EAAU,EAAE,IAAY,EAAE,OAAiC;YACxF,IAAI,CAAC,IAAA,WAAG,EAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBAC7B,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;aACjF;YACD,IAAI,sBAAsB,GAAG,IAAI,CAAC,CAAC,CAAuB,GAAG,CAAC,IAAI,CAAC,CAAC;YACpE,IAAI,CAAC,sBAAsB,EAAE;gBAC5B,sBAAsB,GAAG,CAAC,KAAK,IAAI,EAAE;oBACpC,IAAI;wBACH,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;wBACzE,IAAI,QAAQ,EAAE;4BACb,OAAO,QAAQ,CAAC;yBAChB;wBAED,MAAM,OAAO,GAAG,GAAG,CAAe,EAAE,EAAE,IAAI,EAAE,IAAA,eAAG,EAAM,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAkB,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;wBACnI,MAAM,IAAI,CAAC,CAAC,CAAW,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;wBAEtD,MAAM,OAAO,GAAoB,EAAE,CAAC;wBACpC,IAAI,CAAC,CAAC,CAAoB,IAAI,CAAC;4BAC9B,OAAO;4BACP,IAAI,CAAC,OAAO;gCACX,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BACvB,CAAC;yBACD,CAAC,CAAC;wBACH,MAAM,gBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;wBAEhC,IAAI,CAAC,CAAC,CAAc,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;wBACvC,OAAO,OAAO,CAAC;qBACf;4BAAS;wBACT,IAAI,CAAC,CAAC,CAAuB,MAAM,CAAC,IAAI,CAAC,CAAC;qBAC1C;gBACF,CAAC,CAAC,EAAE,CAAC;gBACL,IAAI,CAAC,CAAC,CAAuB,GAAG,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;aAC/D;YACD,OAAO,sBAAsB,CAAC;QAC/B,CAAC;QAED,KAAK,CAAC,aAAa,CAAC,eAAiC,EAAE,OAAsC;YAC5F,IAAI,CAAC,IAAI,CAAC,CAAC,EAAQ;gBAClB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;aACrE;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,eAAe,CAAC,EAAE,CAAC,CAAC;YACnE,IAAI,CAAC,OAAO,EAAE;gBACb,MAAM,IAAI,KAAK,CAAC,YAAY,eAAe,CAAC,IAAI,kBAAkB,CAAC,CAAC;aACpE;YAED,OAAO,GAAG,GAAG,CAAe,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAkB,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,WAAW,EAAE,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,eAAe,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACtT,IAAI,CAAC,CAAC,CAAc,EAAE,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;YAEvC,OAAO,OAAO,CAAC;QAChB,CAAC;QAED,KAAK,CAAC,aAAa,CAAC,eAAiC;YACpD,IAAI,CAAC,IAAI,CAAC,CAAC,EAAQ;gBAClB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;aACrE;YACD,IAAI,eAAe,CAAC,SAAS,EAAE;gBAC9B,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;aACjD;YACD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,eAAe,CAAC,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,OAAO,EAAE;gBACb,MAAM,IAAI,KAAK,CAAC,YAAY,eAAe,CAAC,IAAI,kBAAkB,CAAC,CAAC;aACpE;YAED,MAAM,OAAO,GAAoB,EAAE,CAAC;YACpC,IAAI,CAAC,CAAC,CAAoB,IAAI,CAAC;gBAC9B,OAAO;gBACP,IAAI,CAAC,OAAO;oBACX,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACvB,CAAC;aACD,CAAC,CAAC;YAEH,IAAI;gBACH,MAAM,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aAClC;YAAC,OAAO,KAAK,EAAE;gBACf,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,KAAK,CAAC,CAAC;aAC7B;YAED,KAAK,MAAM,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAc,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE;gBACpE,IAAI,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,CAAc,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE;oBACtE,IAAI,CAAC,CAAC,CAAc,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBAClD;aACD;YACD,KAAK,MAAM,SAAS,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAc,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE;gBACnE,IAAI,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,CAAc,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE;oBACrE,IAAI,CAAC,CAAC,CAAc,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;iBACjD;aACD;YACD,IAAI,CAAC,CAAC,EAAgC,CAAC;YAEvC,IAAI,CAAC,CAAC,CAAc,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;YAEvC,IAAI;gBACH,MAAM,IAAI,CAAC,CAAC,CAAW,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;aACnE;YAAC,OAAO,KAAK,EAAE;gBACf,IAAI,IAAA,WAAG,EAAmB,KAAK,CAAC,+CAAuC,EAAE;oBACxE,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACD;QACF,CAAC;QAED,KAAK,CAAC,sBAAsB,CAAC,mBAA4C,EAAE,YAA8B;YACxG,IAAI,CAAC,IAAI,CAAC,CAAC,EAAQ;gBAClB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;aACrE;YAED,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,YAAY,CAAC,EAAE,CAAC,CAAC;YAClE,IAAI,CAAC,OAAO,EAAE;gBACb,MAAM,IAAI,KAAK,CAAC,YAAY,YAAY,CAAC,IAAI,kBAAkB,CAAC,CAAC;aACjE;YAED,IAAI,CAAC,CAAC,CAA0B,mBAAmB,EAAE,OAAO,CAAC,CAAC;QAC/D,CAAC;QAED,cAAc,CAAC,mBAA4C,EAAE,SAAmB;YAC/E,IAAI,CAAC,IAAI,CAAC,CAAC,EAAQ;gBAClB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;aACrE;YAED,IAAI,CAAC,CAAC,CAA0B,mBAAmB,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAC5E,CAAC;QAED,KAAK,CAAC,eAAe;YACpB,IAAI,CAAC,CAAC,CAAuB,UAAU,CAAC,KAAK,EAAE,CAAC;YAChD,IAAI,CAAC,CAAC,CAAuB,YAAY,CAAC,KAAK,EAAE,CAAC;YAClD,IAAI,CAAC,CAAC,CAAc,UAAU,CAAC,KAAK,EAAE,CAAC;YACvC,IAAI,CAAC,CAAC,CAAc,YAAY,CAAC,KAAK,EAAE,CAAC;YACzC,IAAI,CAAC,CAAC,EAAgC,CAAC;YACvC,IAAI,CAAC,CAAC,CAAqB,IAAI,EAAE,CAAC;QACnC,CAAC;QAED,KAAK,CAAC,OAAO;YACZ,IAAI,CAAC,IAAI,CAAC,CAAC,EAAQ;gBAClB,OAAO;aACP;YACD,IAAI,MAAM,IAAI,CAAC,CAAC,CAAW,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gBACrD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,CAAC,CAAW,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC/D,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;qBACrC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACnI,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAW,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;aAC3E;QACF,CAAC;QAED,KAAK,CAAC,wBAAwB;YAC7B,IAAI,CAAC,IAAI,CAAC,CAAC,EAAQ;gBAClB,OAAO;aACP;YACD,MAAM,6BAA6B,GAAG,IAAI,CAAC,CAAC,CAAuB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAA8B,CAAC,CAAC,CAAC,CAAC;YACjI,MAAM,OAAO,CAAC,UAAU,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzF,CAAC;QAED,sBAAsB,CAAC,mBAA4C;YAClE,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAY,mBAAmB,CAAC,CAAC;YACzD,OAAO,SAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAuB,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,CAAc,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAuB,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,CAAc,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACrP,CAAC;QAES,CAAC,CAAY,mBAA4C;YAClE,IAAI,IAAA,eAAG,EAA+B,mBAAmB,CAAC,EAAE;gBAC3D,OAAO,mBAAmB,CAAC,GAAG,CAAC;aAC/B;YACD,IAAI,IAAA,eAAG,EAAmB,mBAAmB,CAAC,EAAE;gBAC/C,OAAO,mBAAmB,CAAC,UAAU,CAAC;aACtC;YACD,OAAO,mBAAmB,CAAC,EAAE,CAAC;QAC/B,CAAC;QAEO,CAAC,CAA8B,OAAyB;YAC/D,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAuB,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE;gBACpK,OAAO,IAAI,CAAC;aACZ;YACD,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAuB,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE;gBACxK,OAAO,IAAI,CAAC;aACZ;YACD,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAc,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE;gBAC3J,OAAO,IAAI,CAAC;aACZ;YACD,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAc,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE;gBAC/J,OAAO,IAAI,CAAC;aACZ;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAEO,CAAC,CAAc,KAAyB,EAAE,OAA2B,EAAE,OAA2B;YACzG,MAAM,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC,CAAC;YACjD,MAAM,cAAc,GAA4B,EAAE,CAAC;YACnD,IAAI,CAAC,CAAC,CAAuB,QAAQ,GAAG,EAAE,CAAC;YAC3C,KAAK,IAAI,OAAO,IAAI,WAAW,EAAE;gBAChC,IAAI,OAAO,CAAC,SAAS,EAAE;oBACtB,SAAS;iBACT;gBACD,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;oBAC3C,SAAS;iBACT;gBACD,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC;gBAC5D,IAAI,OAAO,CAAC,WAAW,EAAE;oBACxB,IAAI,CAAC,CAAC,CAAuB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACpD;qBAAM;oBACN,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,EAAE,eAAe,EAAE,OAAO,CAAC,eAAe,EAAE,CAAC,CAAC;iBAChJ;aACD;YACD,IAAI,CAAC,CAAC,CAAkB,cAAc,CAAC,CAAC;YACxC,IAAI,CAAC,CAAC,GAAiB,SAAS,CAAC;YACjC,IAAI,CAAC,CAAC,CAAsB,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QACtD,CAAC;QAES,CAAC,CAAsB,KAAyB,EAAE,OAA2B,EAAE,OAA2B;YACnH,IAAI,CAAC,CAAC,CAAoB,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjF,CAAC;QAEO,CAAC,CAA0B,mBAA4C,EAAE,UAA6B,EAAE,SAAmB;YAClI,+DAA+D;YAC/D,SAAS,GAAG,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;YAEvD,IAAI,CAAC,SAAS,EAAE;gBACf,kDAAkD;gBAClD,IAAI,CAAC,CAAC,CAA0B,mBAAmB,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;aACtE;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAY,mBAAmB,CAAC,CAAC;YACzD,MAAM,cAAc,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAuB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAc;YAEtF,gCAAgC;YAChC,IAAI,SAAG,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;gBACzB,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC5C,IAAI,UAAU,EAAE;oBACf,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;iBACrD;aACD;YACD,eAAe;iBACV;gBACJ,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC9C,IAAI,UAAU,EAAE;oBACf,cAAc,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;iBACvD;aACD;YAED,IAAI,CAAC,SAAS,EAAE;gBACf,IAAI,CAAC,CAAC,EAAgC,CAAC;aACvC;QACF,CAAC;QAEO,CAAC;YACR,MAAM,UAAU,GAA8B,EAAE,CAAC;YACjD,KAAK,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,CAAc,UAAU,CAAC,OAAO,EAAE,EAAE;gBAC5E,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC;aAC9C;YACD,MAAM,YAAY,GAA8B,EAAE,CAAC;YACnD,KAAK,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,CAAc,YAAY,CAAC,OAAO,EAAE,EAAE;gBAC7E,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC;aAC/C;YACD,IAAI,CAAC,CAAC,CAA6B,EAAE,UAAU,EAAE,YAAY,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,CAAC,GAAiB,SAAS,CAAC;QAClC,CAAC;QAED,4DAA4D;QAClD,CAAC,CAAgC,yBAAoD;YAC9F,MAAM,UAAU,GAA8B,EAAE,CAAC;YACjD,MAAM,cAAc,GAAG,IAAI,CAAC,CAAC,EAAqB,CAAC;YACnD,IAAI,yBAAyB,CAAC,UAAU,EAAE;gBACzC,KAAK,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,yBAAyB,CAAC,UAAU,CAAC,EAAE;oBACzF,MAAM,GAAG,GAAG,SAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBAChC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;iBAChK;aACD;YACD,MAAM,YAAY,GAA8B,EAAE,CAAC;YACnD,IAAI,yBAAyB,CAAC,YAAY,EAAE;gBAC3C,KAAK,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,yBAAyB,CAAC,YAAY,CAAC,EAAE;oBAC3F,MAAM,GAAG,GAAG,SAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBAChC,YAAY,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;iBAClK;aACD;YACD,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,CAAC;QACrC,CAAC;QAES,CAAC,KAA8C,OAAO,EAAE,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAkB,cAAuC,IAAU,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAEzG,CAAC,KAA2D,OAAO,EAAE,CAAC,CAAC,CAAC;QACxE,CAAC,CAA6B,yBAAoD,IAAU,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACjI,CAAC,KAAwD,OAAO,SAAS,CAAC,CAAC,CAAC;;IAxa1E,kBAAG;kBAAH,GAAG;QAmCb,WAAA,iBAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,iBAAG,CAAA;QACH,WAAA,SAAG,CAAA;OAtCO,GAAG,CAyaf;IAED,MAAa,GAAgC,SAAQ,GAAG;QAAxD;;YACS,MAAC,GAAyC,EAAE,CAAC;YAI7C,MAAC,GAAsD,EAAE,CAAC;QAGnE,CAAC;QANmB,CAAC,KAA8C,OAAO,IAAI,CAAC,CAAC,CAAc,CAAC,CAAC;QAC5E,CAAC,CAAkB,cAAuC,IAAU,IAAI,CAAC,CAAC,GAAgB,cAAc,CAAC,CAAC,CAAC;QAG3G,CAAC,KAA2D,OAAO,IAAI,CAAC,CAAC,CAAyB,CAAC,CAAC;QACpG,CAAC,CAA6B,yBAAoD,IAAU,IAAI,CAAC,CAAC,GAA2B,yBAAyB,CAAC,CAAC,CAAC;KAC5K;IARD,kBAQC","file":"userDataProfile.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { hash } from 'vs/base/common/hash';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { basename, joinPath } from 'vs/base/common/resources';\nimport { URI, UriDto } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { FileOperationResult, IFileService, toFileOperationResult } from 'vs/platform/files/common/files';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IAnyWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { Promises } from 'vs/base/common/async';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { isString } from 'vs/base/common/types';\n\nexport const enum ProfileResourceType {\n\tSettings = 'settings',\n\tKeybindings = 'keybindings',\n\tSnippets = 'snippets',\n\tTasks = 'tasks',\n\tExtensions = 'extensions',\n\tGlobalState = 'globalState',\n}\n\n/**\n * Flags to indicate whether to use the default profile or not.\n */\nexport type UseDefaultProfileFlags = { [key in ProfileResourceType]?: boolean };\n\nexport interface IUserDataProfile {\n\treadonly id: string;\n\treadonly isDefault: boolean;\n\treadonly name: string;\n\treadonly shortName?: string;\n\treadonly location: URI;\n\treadonly globalStorageHome: URI;\n\treadonly settingsResource: URI;\n\treadonly keybindingsResource: URI;\n\treadonly tasksResource: URI;\n\treadonly snippetsHome: URI;\n\treadonly extensionsResource: URI;\n\treadonly cacheHome: URI;\n\treadonly useDefaultFlags?: UseDefaultProfileFlags;\n\treadonly isTransient?: boolean;\n}\n\nexport function isUserDataProfile(thing: unknown): thing is IUserDataProfile {\n\tconst candidate = thing as IUserDataProfile | undefined;\n\n\treturn !!(candidate && typeof candidate === 'object'\n\t\t&& typeof candidate.id === 'string'\n\t\t&& typeof candidate.isDefault === 'boolean'\n\t\t&& typeof candidate.name === 'string'\n\t\t&& URI.isUri(candidate.location)\n\t\t&& URI.isUri(candidate.globalStorageHome)\n\t\t&& URI.isUri(candidate.settingsResource)\n\t\t&& URI.isUri(candidate.keybindingsResource)\n\t\t&& URI.isUri(candidate.tasksResource)\n\t\t&& URI.isUri(candidate.snippetsHome)\n\t\t&& URI.isUri(candidate.extensionsResource)\n\t);\n}\n\nexport type DidChangeProfilesEvent = { readonly added: readonly IUserDataProfile[]; readonly removed: readonly IUserDataProfile[]; readonly updated: readonly IUserDataProfile[]; readonly all: readonly IUserDataProfile[] };\n\nexport type WillCreateProfileEvent = {\n\tprofile: IUserDataProfile;\n\tjoin(promise: Promise<void>): void;\n};\n\nexport type WillRemoveProfileEvent = {\n\tprofile: IUserDataProfile;\n\tjoin(promise: Promise<void>): void;\n};\n\nexport interface IUserDataProfileOptions {\n\treadonly shortName?: string;\n\treadonly useDefaultFlags?: UseDefaultProfileFlags;\n\treadonly transient?: boolean;\n}\n\nexport interface IUserDataProfileUpdateOptions extends IUserDataProfileOptions {\n\treadonly name?: string;\n}\n\nexport const IUserDataProfilesService = createDecorator<IUserDataProfilesService>('IUserDataProfilesService');\nexport interface IUserDataProfilesService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly profilesHome: URI;\n\treadonly defaultProfile: IUserDataProfile;\n\n\treadonly onDidChangeProfiles: Event<DidChangeProfilesEvent>;\n\treadonly profiles: readonly IUserDataProfile[];\n\n\treadonly onDidResetWorkspaces: Event<void>;\n\n\tisEnabled(): boolean;\n\tcreateNamedProfile(name: string, options?: IUserDataProfileOptions, workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile>;\n\tcreateTransientProfile(workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile>;\n\tcreateProfile(id: string, name: string, options?: IUserDataProfileOptions, workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile>;\n\tupdateProfile(profile: IUserDataProfile, options?: IUserDataProfileUpdateOptions,): Promise<IUserDataProfile>;\n\tremoveProfile(profile: IUserDataProfile): Promise<void>;\n\n\tsetProfileForWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier, profile: IUserDataProfile): Promise<void>;\n\tresetWorkspaces(): Promise<void>;\n\n\tcleanUp(): Promise<void>;\n\tcleanUpTransientProfiles(): Promise<void>;\n}\n\nexport function reviveProfile(profile: UriDto<IUserDataProfile>, scheme: string): IUserDataProfile {\n\treturn {\n\t\tid: profile.id,\n\t\tisDefault: profile.isDefault,\n\t\tname: profile.name,\n\t\tshortName: profile.shortName,\n\t\tlocation: URI.revive(profile.location).with({ scheme }),\n\t\tglobalStorageHome: URI.revive(profile.globalStorageHome).with({ scheme }),\n\t\tsettingsResource: URI.revive(profile.settingsResource).with({ scheme }),\n\t\tkeybindingsResource: URI.revive(profile.keybindingsResource).with({ scheme }),\n\t\ttasksResource: URI.revive(profile.tasksResource).with({ scheme }),\n\t\tsnippetsHome: URI.revive(profile.snippetsHome).with({ scheme }),\n\t\textensionsResource: URI.revive(profile.extensionsResource).with({ scheme }),\n\t\tcacheHome: URI.revive(profile.cacheHome).with({ scheme }),\n\t\tuseDefaultFlags: profile.useDefaultFlags,\n\t\tisTransient: profile.isTransient,\n\t};\n}\n\nexport function toUserDataProfile(id: string, name: string, location: URI, profilesCacheHome: URI, options?: IUserDataProfileOptions, defaultProfile?: IUserDataProfile): IUserDataProfile {\n\treturn {\n\t\tid,\n\t\tname,\n\t\tlocation,\n\t\tisDefault: false,\n\t\tshortName: options?.shortName,\n\t\tglobalStorageHome: defaultProfile && options?.useDefaultFlags?.globalState ? defaultProfile.globalStorageHome : joinPath(location, 'globalStorage'),\n\t\tsettingsResource: defaultProfile && options?.useDefaultFlags?.settings ? defaultProfile.settingsResource : joinPath(location, 'settings.json'),\n\t\tkeybindingsResource: defaultProfile && options?.useDefaultFlags?.keybindings ? defaultProfile.keybindingsResource : joinPath(location, 'keybindings.json'),\n\t\ttasksResource: defaultProfile && options?.useDefaultFlags?.tasks ? defaultProfile.tasksResource : joinPath(location, 'tasks.json'),\n\t\tsnippetsHome: defaultProfile && options?.useDefaultFlags?.snippets ? defaultProfile.snippetsHome : joinPath(location, 'snippets'),\n\t\textensionsResource: defaultProfile && options?.useDefaultFlags?.extensions ? defaultProfile.extensionsResource : joinPath(location, 'extensions.json'),\n\t\tcacheHome: joinPath(profilesCacheHome, id),\n\t\tuseDefaultFlags: options?.useDefaultFlags,\n\t\tisTransient: options?.transient\n\t};\n}\n\nexport type UserDataProfilesObject = {\n\tprofiles: IUserDataProfile[];\n\tworkspaces: ResourceMap<IUserDataProfile>;\n\temptyWindows: Map<string, IUserDataProfile>;\n};\n\nexport type StoredUserDataProfile = {\n\tname: string;\n\tlocation: URI;\n\tshortName?: string;\n\tuseDefaultFlags?: UseDefaultProfileFlags;\n};\n\nexport type StoredProfileAssociations = {\n\tworkspaces?: IStringDictionary<string>;\n\temptyWindows?: IStringDictionary<string>;\n};\n\nexport class UserDataProfilesService extends Disposable implements IUserDataProfilesService {\n\n\tprotected static readonly PROFILES_KEY = 'userDataProfiles';\n\tprotected static readonly PROFILE_ASSOCIATIONS_KEY = 'profileAssociations';\n\n\treadonly _serviceBrand: undefined;\n\n\tprotected enabled: boolean = true;\n\treadonly profilesHome: URI;\n\tprivate readonly profilesCacheHome: URI;\n\n\tget defaultProfile(): IUserDataProfile { return this.profiles[0]; }\n\tget profiles(): IUserDataProfile[] { return [...this.profilesObject.profiles, ...this.transientProfilesObject.profiles]; }\n\n\tprotected readonly _onDidChangeProfiles = this._register(new Emitter<DidChangeProfilesEvent>());\n\treadonly onDidChangeProfiles = this._onDidChangeProfiles.event;\n\n\tprotected readonly _onWillCreateProfile = this._register(new Emitter<WillCreateProfileEvent>());\n\treadonly onWillCreateProfile = this._onWillCreateProfile.event;\n\n\tprotected readonly _onWillRemoveProfile = this._register(new Emitter<WillRemoveProfileEvent>());\n\treadonly onWillRemoveProfile = this._onWillRemoveProfile.event;\n\n\tprivate readonly _onDidResetWorkspaces = this._register(new Emitter<void>());\n\treadonly onDidResetWorkspaces = this._onDidResetWorkspaces.event;\n\n\tprivate profileCreationPromises = new Map<string, Promise<IUserDataProfile>>();\n\n\tprotected readonly transientProfilesObject: UserDataProfilesObject = {\n\t\tprofiles: [],\n\t\tworkspaces: new ResourceMap(),\n\t\temptyWindows: new Map()\n\t};\n\n\tconstructor(\n\t\t@IEnvironmentService protected readonly environmentService: IEnvironmentService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IUriIdentityService protected readonly uriIdentityService: IUriIdentityService,\n\t\t@ILogService protected readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.profilesHome = joinPath(this.environmentService.userRoamingDataHome, 'profiles');\n\t\tthis.profilesCacheHome = joinPath(this.environmentService.cacheHome, 'CachedProfilesData');\n\t}\n\n\tinit(): void {\n\t\tthis._profilesObject = undefined;\n\t}\n\n\tsetEnablement(enabled: boolean): void {\n\t\tif (this.enabled !== enabled) {\n\t\t\tthis._profilesObject = undefined;\n\t\t\tthis.enabled = enabled;\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tprotected _profilesObject: UserDataProfilesObject | undefined;\n\tprotected get profilesObject(): UserDataProfilesObject {\n\t\tif (!this._profilesObject) {\n\t\t\tconst defaultProfile = this.createDefaultProfile();\n\t\t\tconst profiles = [defaultProfile];\n\t\t\tif (this.enabled) {\n\t\t\t\ttry {\n\t\t\t\t\tfor (const storedProfile of this.getStoredProfiles()) {\n\t\t\t\t\t\tif (!storedProfile.name || !isString(storedProfile.name) || !storedProfile.location) {\n\t\t\t\t\t\t\tthis.logService.warn('Skipping the invalid stored profile', storedProfile.location || storedProfile.name);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprofiles.push(toUserDataProfile(basename(storedProfile.location), storedProfile.name, storedProfile.location, this.profilesCacheHome, { shortName: storedProfile.shortName, useDefaultFlags: storedProfile.useDefaultFlags }, defaultProfile));\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst workspaces = new ResourceMap<IUserDataProfile>();\n\t\t\tconst emptyWindows = new Map<string, IUserDataProfile>();\n\t\t\tif (profiles.length) {\n\t\t\t\ttry {\n\t\t\t\t\tconst profileAssociaitions = this.getStoredProfileAssociations();\n\t\t\t\t\tif (profileAssociaitions.workspaces) {\n\t\t\t\t\t\tfor (const [workspacePath, profileId] of Object.entries(profileAssociaitions.workspaces)) {\n\t\t\t\t\t\t\tconst workspace = URI.parse(workspacePath);\n\t\t\t\t\t\t\tconst profile = profiles.find(p => p.id === profileId);\n\t\t\t\t\t\t\tif (profile) {\n\t\t\t\t\t\t\t\tworkspaces.set(workspace, profile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (profileAssociaitions.emptyWindows) {\n\t\t\t\t\t\tfor (const [windowId, profileId] of Object.entries(profileAssociaitions.emptyWindows)) {\n\t\t\t\t\t\t\tconst profile = profiles.find(p => p.id === profileId);\n\t\t\t\t\t\t\tif (profile) {\n\t\t\t\t\t\t\t\temptyWindows.set(windowId, profile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._profilesObject = { profiles, workspaces, emptyWindows };\n\t\t}\n\t\treturn this._profilesObject;\n\t}\n\n\tprivate createDefaultProfile() {\n\t\tconst defaultProfile = toUserDataProfile('__default__profile__', localize('defaultProfile', \"Default\"), this.environmentService.userRoamingDataHome, this.profilesCacheHome);\n\t\treturn { ...defaultProfile, extensionsResource: this.getDefaultProfileExtensionsLocation() ?? defaultProfile.extensionsResource, isDefault: true };\n\t}\n\n\tasync createTransientProfile(workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile> {\n\t\tconst namePrefix = `Temp`;\n\t\tconst nameRegEx = new RegExp(`${escapeRegExpCharacters(namePrefix)}\\\\s(\\\\d+)`);\n\t\tlet nameIndex = 0;\n\t\tfor (const profile of this.profiles) {\n\t\t\tconst matches = nameRegEx.exec(profile.name);\n\t\t\tconst index = matches ? parseInt(matches[1]) : 0;\n\t\t\tnameIndex = index > nameIndex ? index : nameIndex;\n\t\t}\n\t\tconst name = `${namePrefix} ${nameIndex + 1}`;\n\t\treturn this.createProfile(hash(generateUuid()).toString(16), name, { transient: true }, workspaceIdentifier);\n\t}\n\n\tasync createNamedProfile(name: string, options?: IUserDataProfileOptions, workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile> {\n\t\treturn this.createProfile(hash(generateUuid()).toString(16), name, options, workspaceIdentifier);\n\t}\n\n\tasync createProfile(id: string, name: string, options?: IUserDataProfileOptions, workspaceIdentifier?: IAnyWorkspaceIdentifier): Promise<IUserDataProfile> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Profiles are disabled in the current environment.`);\n\t\t}\n\n\t\tconst profile = await this.doCreateProfile(id, name, options);\n\n\t\tif (workspaceIdentifier) {\n\t\t\tawait this.setProfileForWorkspace(workspaceIdentifier, profile);\n\t\t}\n\n\t\treturn profile;\n\t}\n\n\tprivate async doCreateProfile(id: string, name: string, options?: IUserDataProfileOptions): Promise<IUserDataProfile> {\n\t\tif (!isString(name) || !name) {\n\t\t\tthrow new Error('Name of the profile is mandatory and must be of type `string`');\n\t\t}\n\t\tlet profileCreationPromise = this.profileCreationPromises.get(name);\n\t\tif (!profileCreationPromise) {\n\t\t\tprofileCreationPromise = (async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst existing = this.profiles.find(p => p.name === name || p.id === id);\n\t\t\t\t\tif (existing) {\n\t\t\t\t\t\treturn existing;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst profile = toUserDataProfile(id, name, joinPath(this.profilesHome, id), this.profilesCacheHome, options, this.defaultProfile);\n\t\t\t\t\tawait this.fileService.createFolder(profile.location);\n\n\t\t\t\t\tconst joiners: Promise<void>[] = [];\n\t\t\t\t\tthis._onWillCreateProfile.fire({\n\t\t\t\t\t\tprofile,\n\t\t\t\t\t\tjoin(promise) {\n\t\t\t\t\t\t\tjoiners.push(promise);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tawait Promises.settled(joiners);\n\n\t\t\t\t\tthis.updateProfiles([profile], [], []);\n\t\t\t\t\treturn profile;\n\t\t\t\t} finally {\n\t\t\t\t\tthis.profileCreationPromises.delete(name);\n\t\t\t\t}\n\t\t\t})();\n\t\t\tthis.profileCreationPromises.set(name, profileCreationPromise);\n\t\t}\n\t\treturn profileCreationPromise;\n\t}\n\n\tasync updateProfile(profileToUpdate: IUserDataProfile, options: IUserDataProfileUpdateOptions): Promise<IUserDataProfile> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Profiles are disabled in the current environment.`);\n\t\t}\n\n\t\tlet profile = this.profiles.find(p => p.id === profileToUpdate.id);\n\t\tif (!profile) {\n\t\t\tthrow new Error(`Profile '${profileToUpdate.name}' does not exist`);\n\t\t}\n\n\t\tprofile = toUserDataProfile(profile.id, options.name ?? profile.name, profile.location, this.profilesCacheHome, { shortName: options.shortName ?? profile.shortName, transient: options.transient ?? profile.isTransient, useDefaultFlags: options.useDefaultFlags ?? profile.useDefaultFlags }, this.defaultProfile);\n\t\tthis.updateProfiles([], [], [profile]);\n\n\t\treturn profile;\n\t}\n\n\tasync removeProfile(profileToRemove: IUserDataProfile): Promise<void> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Profiles are disabled in the current environment.`);\n\t\t}\n\t\tif (profileToRemove.isDefault) {\n\t\t\tthrow new Error('Cannot remove default profile');\n\t\t}\n\t\tconst profile = this.profiles.find(p => p.id === profileToRemove.id);\n\t\tif (!profile) {\n\t\t\tthrow new Error(`Profile '${profileToRemove.name}' does not exist`);\n\t\t}\n\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillRemoveProfile.fire({\n\t\t\tprofile,\n\t\t\tjoin(promise) {\n\t\t\t\tjoiners.push(promise);\n\t\t\t}\n\t\t});\n\n\t\ttry {\n\t\t\tawait Promise.allSettled(joiners);\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\n\t\tfor (const windowId of [...this.profilesObject.emptyWindows.keys()]) {\n\t\t\tif (profile.id === this.profilesObject.emptyWindows.get(windowId)?.id) {\n\t\t\t\tthis.profilesObject.emptyWindows.delete(windowId);\n\t\t\t}\n\t\t}\n\t\tfor (const workspace of [...this.profilesObject.workspaces.keys()]) {\n\t\t\tif (profile.id === this.profilesObject.workspaces.get(workspace)?.id) {\n\t\t\t\tthis.profilesObject.workspaces.delete(workspace);\n\t\t\t}\n\t\t}\n\t\tthis.updateStoredProfileAssociations();\n\n\t\tthis.updateProfiles([], [profile], []);\n\n\t\ttry {\n\t\t\tawait this.fileService.del(profile.cacheHome, { recursive: true });\n\t\t} catch (error) {\n\t\t\tif (toFileOperationResult(error) !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync setProfileForWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier, profileToSet: IUserDataProfile): Promise<void> {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Profiles are disabled in the current environment.`);\n\t\t}\n\n\t\tconst profile = this.profiles.find(p => p.id === profileToSet.id);\n\t\tif (!profile) {\n\t\t\tthrow new Error(`Profile '${profileToSet.name}' does not exist`);\n\t\t}\n\n\t\tthis.updateWorkspaceAssociation(workspaceIdentifier, profile);\n\t}\n\n\tunsetWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier, transient?: boolean): void {\n\t\tif (!this.enabled) {\n\t\t\tthrow new Error(`Profiles are disabled in the current environment.`);\n\t\t}\n\n\t\tthis.updateWorkspaceAssociation(workspaceIdentifier, undefined, transient);\n\t}\n\n\tasync resetWorkspaces(): Promise<void> {\n\t\tthis.transientProfilesObject.workspaces.clear();\n\t\tthis.transientProfilesObject.emptyWindows.clear();\n\t\tthis.profilesObject.workspaces.clear();\n\t\tthis.profilesObject.emptyWindows.clear();\n\t\tthis.updateStoredProfileAssociations();\n\t\tthis._onDidResetWorkspaces.fire();\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tif (await this.fileService.exists(this.profilesHome)) {\n\t\t\tconst stat = await this.fileService.resolve(this.profilesHome);\n\t\t\tawait Promise.all((stat.children || [])\n\t\t\t\t.filter(child => child.isDirectory && this.profiles.every(p => !this.uriIdentityService.extUri.isEqual(p.location, child.resource)))\n\t\t\t\t.map(child => this.fileService.del(child.resource, { recursive: true })));\n\t\t}\n\t}\n\n\tasync cleanUpTransientProfiles(): Promise<void> {\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tconst unAssociatedTransientProfiles = this.transientProfilesObject.profiles.filter(p => !this.isProfileAssociatedToWorkspace(p));\n\t\tawait Promise.allSettled(unAssociatedTransientProfiles.map(p => this.removeProfile(p)));\n\t}\n\n\tgetProfileForWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier): IUserDataProfile | undefined {\n\t\tconst workspace = this.getWorkspace(workspaceIdentifier);\n\t\treturn URI.isUri(workspace) ? this.transientProfilesObject.workspaces.get(workspace) ?? this.profilesObject.workspaces.get(workspace) : this.transientProfilesObject.emptyWindows.get(workspace) ?? this.profilesObject.emptyWindows.get(workspace);\n\t}\n\n\tprotected getWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier): URI | string {\n\t\tif (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n\t\t\treturn workspaceIdentifier.uri;\n\t\t}\n\t\tif (isWorkspaceIdentifier(workspaceIdentifier)) {\n\t\t\treturn workspaceIdentifier.configPath;\n\t\t}\n\t\treturn workspaceIdentifier.id;\n\t}\n\n\tprivate isProfileAssociatedToWorkspace(profile: IUserDataProfile): boolean {\n\t\tif ([...this.transientProfilesObject.emptyWindows.values()].some(windowProfile => this.uriIdentityService.extUri.isEqual(windowProfile.location, profile.location))) {\n\t\t\treturn true;\n\t\t}\n\t\tif ([...this.transientProfilesObject.workspaces.values()].some(workspaceProfile => this.uriIdentityService.extUri.isEqual(workspaceProfile.location, profile.location))) {\n\t\t\treturn true;\n\t\t}\n\t\tif ([...this.profilesObject.emptyWindows.values()].some(windowProfile => this.uriIdentityService.extUri.isEqual(windowProfile.location, profile.location))) {\n\t\t\treturn true;\n\t\t}\n\t\tif ([...this.profilesObject.workspaces.values()].some(workspaceProfile => this.uriIdentityService.extUri.isEqual(workspaceProfile.location, profile.location))) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate updateProfiles(added: IUserDataProfile[], removed: IUserDataProfile[], updated: IUserDataProfile[]): void {\n\t\tconst allProfiles = [...this.profiles, ...added];\n\t\tconst storedProfiles: StoredUserDataProfile[] = [];\n\t\tthis.transientProfilesObject.profiles = [];\n\t\tfor (let profile of allProfiles) {\n\t\t\tif (profile.isDefault) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (removed.some(p => profile.id === p.id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprofile = updated.find(p => profile.id === p.id) ?? profile;\n\t\t\tif (profile.isTransient) {\n\t\t\t\tthis.transientProfilesObject.profiles.push(profile);\n\t\t\t} else {\n\t\t\t\tstoredProfiles.push({ location: profile.location, name: profile.name, shortName: profile.shortName, useDefaultFlags: profile.useDefaultFlags });\n\t\t\t}\n\t\t}\n\t\tthis.saveStoredProfiles(storedProfiles);\n\t\tthis._profilesObject = undefined;\n\t\tthis.triggerProfilesChanges(added, removed, updated);\n\t}\n\n\tprotected triggerProfilesChanges(added: IUserDataProfile[], removed: IUserDataProfile[], updated: IUserDataProfile[]) {\n\t\tthis._onDidChangeProfiles.fire({ added, removed, updated, all: this.profiles });\n\t}\n\n\tprivate updateWorkspaceAssociation(workspaceIdentifier: IAnyWorkspaceIdentifier, newProfile?: IUserDataProfile, transient?: boolean): void {\n\t\t// Force transient if the new profile to associate is transient\n\t\ttransient = newProfile?.isTransient ? true : transient;\n\n\t\tif (!transient) {\n\t\t\t// Unset the transiet workspace association if any\n\t\t\tthis.updateWorkspaceAssociation(workspaceIdentifier, undefined, true);\n\t\t}\n\n\t\tconst workspace = this.getWorkspace(workspaceIdentifier);\n\t\tconst profilesObject = transient ? this.transientProfilesObject : this.profilesObject;\n\n\t\t// Folder or Multiroot workspace\n\t\tif (URI.isUri(workspace)) {\n\t\t\tprofilesObject.workspaces.delete(workspace);\n\t\t\tif (newProfile) {\n\t\t\t\tprofilesObject.workspaces.set(workspace, newProfile);\n\t\t\t}\n\t\t}\n\t\t// Empty Window\n\t\telse {\n\t\t\tprofilesObject.emptyWindows.delete(workspace);\n\t\t\tif (newProfile) {\n\t\t\t\tprofilesObject.emptyWindows.set(workspace, newProfile);\n\t\t\t}\n\t\t}\n\n\t\tif (!transient) {\n\t\t\tthis.updateStoredProfileAssociations();\n\t\t}\n\t}\n\n\tprivate updateStoredProfileAssociations() {\n\t\tconst workspaces: IStringDictionary<string> = {};\n\t\tfor (const [workspace, profile] of this.profilesObject.workspaces.entries()) {\n\t\t\tworkspaces[workspace.toString()] = profile.id;\n\t\t}\n\t\tconst emptyWindows: IStringDictionary<string> = {};\n\t\tfor (const [windowId, profile] of this.profilesObject.emptyWindows.entries()) {\n\t\t\temptyWindows[windowId.toString()] = profile.id;\n\t\t}\n\t\tthis.saveStoredProfileAssociations({ workspaces, emptyWindows });\n\t\tthis._profilesObject = undefined;\n\t}\n\n\t// TODO: @sandy081 Remove migration after couple of releases\n\tprotected migrateStoredProfileAssociations(storedProfileAssociations: StoredProfileAssociations): StoredProfileAssociations {\n\t\tconst workspaces: IStringDictionary<string> = {};\n\t\tconst defaultProfile = this.createDefaultProfile();\n\t\tif (storedProfileAssociations.workspaces) {\n\t\t\tfor (const [workspace, location] of Object.entries(storedProfileAssociations.workspaces)) {\n\t\t\t\tconst uri = URI.parse(location);\n\t\t\t\tworkspaces[workspace] = this.uriIdentityService.extUri.isEqual(uri, defaultProfile.location) ? defaultProfile.id : this.uriIdentityService.extUri.basename(uri);\n\t\t\t}\n\t\t}\n\t\tconst emptyWindows: IStringDictionary<string> = {};\n\t\tif (storedProfileAssociations.emptyWindows) {\n\t\t\tfor (const [workspace, location] of Object.entries(storedProfileAssociations.emptyWindows)) {\n\t\t\t\tconst uri = URI.parse(location);\n\t\t\t\temptyWindows[workspace] = this.uriIdentityService.extUri.isEqual(uri, defaultProfile.location) ? defaultProfile.id : this.uriIdentityService.extUri.basename(uri);\n\t\t\t}\n\t\t}\n\t\treturn { workspaces, emptyWindows };\n\t}\n\n\tprotected getStoredProfiles(): StoredUserDataProfile[] { return []; }\n\tprotected saveStoredProfiles(storedProfiles: StoredUserDataProfile[]): void { throw new Error('not implemented'); }\n\n\tprotected getStoredProfileAssociations(): StoredProfileAssociations { return {}; }\n\tprotected saveStoredProfileAssociations(storedProfileAssociations: StoredProfileAssociations): void { throw new Error('not implemented'); }\n\tprotected getDefaultProfileExtensionsLocation(): URI | undefined { return undefined; }\n}\n\nexport class InMemoryUserDataProfilesService extends UserDataProfilesService {\n\tprivate storedProfiles: StoredUserDataProfile[] = [];\n\tprotected override getStoredProfiles(): StoredUserDataProfile[] { return this.storedProfiles; }\n\tprotected override saveStoredProfiles(storedProfiles: StoredUserDataProfile[]): void { this.storedProfiles = storedProfiles; }\n\n\tprivate storedProfileAssociations: StoredProfileAssociations = {};\n\tprotected override getStoredProfileAssociations(): StoredProfileAssociations { return this.storedProfileAssociations; }\n\tprotected override saveStoredProfileAssociations(storedProfileAssociations: StoredProfileAssociations): void { this.storedProfileAssociations = storedProfileAssociations; }\n}\n"]}