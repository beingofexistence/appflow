{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataProfile/browser/userDataProfile.ts"],"names":[],"mappings":"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","file":"userDataProfile.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BroadcastDataChannel } from 'vs/base/browser/broadcast';\nimport { revive } from 'vs/base/common/marshalling';\nimport { UriDto } from 'vs/base/common/uri';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { DidChangeProfilesEvent, IUserDataProfile, IUserDataProfilesService, reviveProfile, StoredProfileAssociations, StoredUserDataProfile, UserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\n\ntype BroadcastedProfileChanges = UriDto<Omit<DidChangeProfilesEvent, 'all'>>;\n\nexport class BrowserUserDataProfilesService extends UserDataProfilesService implements IUserDataProfilesService {\n\n\tprivate readonly changesBroadcastChannel: BroadcastDataChannel<BroadcastedProfileChanges>;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(environmentService, fileService, uriIdentityService, logService);\n\t\tthis.changesBroadcastChannel = this._register(new BroadcastDataChannel<BroadcastedProfileChanges>(`${UserDataProfilesService.PROFILES_KEY}.changes`));\n\t\tthis._register(this.changesBroadcastChannel.onDidReceiveData(changes => {\n\t\t\ttry {\n\t\t\t\tthis._profilesObject = undefined;\n\t\t\t\tconst added = changes.added.map(p => reviveProfile(p, this.profilesHome.scheme));\n\t\t\t\tconst removed = changes.removed.map(p => reviveProfile(p, this.profilesHome.scheme));\n\t\t\t\tconst updated = changes.updated.map(p => reviveProfile(p, this.profilesHome.scheme));\n\n\t\t\t\tthis.updateTransientProfiles(\n\t\t\t\t\tadded.filter(a => a.isTransient),\n\t\t\t\t\tremoved.filter(a => a.isTransient),\n\t\t\t\t\tupdated.filter(a => a.isTransient)\n\t\t\t\t);\n\n\t\t\t\tthis._onDidChangeProfiles.fire({\n\t\t\t\t\tadded,\n\t\t\t\t\tremoved,\n\t\t\t\t\tupdated,\n\t\t\t\t\tall: this.profiles\n\t\t\t\t});\n\t\t\t} catch (error) {/* ignore */ }\n\t\t}));\n\t}\n\n\tprivate updateTransientProfiles(added: IUserDataProfile[], removed: IUserDataProfile[], updated: IUserDataProfile[]): void {\n\t\tif (added.length) {\n\t\t\tthis.transientProfilesObject.profiles.push(...added);\n\t\t}\n\t\tif (removed.length || updated.length) {\n\t\t\tconst allTransientProfiles = this.transientProfilesObject.profiles;\n\t\t\tthis.transientProfilesObject.profiles = [];\n\t\t\tfor (const profile of allTransientProfiles) {\n\t\t\t\tif (removed.some(p => profile.id === p.id)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.transientProfilesObject.profiles.push(updated.find(p => profile.id === p.id) ?? profile);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected override getStoredProfiles(): StoredUserDataProfile[] {\n\t\ttry {\n\t\t\tconst value = window.localStorage.getItem(UserDataProfilesService.PROFILES_KEY);\n\t\t\tif (value) {\n\t\t\t\treturn revive(JSON.parse(value));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore */\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\treturn [];\n\t}\n\n\tprotected override triggerProfilesChanges(added: IUserDataProfile[], removed: IUserDataProfile[], updated: IUserDataProfile[]) {\n\t\tsuper.triggerProfilesChanges(added, removed, updated);\n\t\tthis.changesBroadcastChannel.postData({ added, removed, updated });\n\t}\n\n\tprotected override saveStoredProfiles(storedProfiles: StoredUserDataProfile[]): void {\n\t\twindow.localStorage.setItem(UserDataProfilesService.PROFILES_KEY, JSON.stringify(storedProfiles));\n\t}\n\n\tprotected override getStoredProfileAssociations(): StoredProfileAssociations {\n\t\tconst migrateKey = 'profileAssociationsMigration';\n\t\ttry {\n\t\t\tconst value = window.localStorage.getItem(UserDataProfilesService.PROFILE_ASSOCIATIONS_KEY);\n\t\t\tif (value) {\n\t\t\t\tlet associations: StoredProfileAssociations = JSON.parse(value);\n\t\t\t\tif (!window.localStorage.getItem(migrateKey)) {\n\t\t\t\t\tassociations = this.migrateStoredProfileAssociations(associations);\n\t\t\t\t\tthis.saveStoredProfileAssociations(associations);\n\t\t\t\t\twindow.localStorage.setItem(migrateKey, 'true');\n\t\t\t\t}\n\t\t\t\treturn associations;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore */\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\treturn {};\n\t}\n\n\tprotected override saveStoredProfileAssociations(storedProfileAssociations: StoredProfileAssociations): void {\n\t\twindow.localStorage.setItem(UserDataProfilesService.PROFILE_ASSOCIATIONS_KEY, JSON.stringify(storedProfileAssociations));\n\t}\n\n}\n"]}