{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataSync/test/common/userDataProfilesManifestSync.test.ts"],"names":[],"mappings":"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","file":"userDataProfilesManifestSync.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { UserDataProfilesManifestSynchroniser } from 'vs/platform/userDataSync/common/userDataProfilesManifestSync';\nimport { ISyncData, ISyncUserDataProfile, IUserDataSyncStoreService, SyncResource, SyncStatus } from 'vs/platform/userDataSync/common/userDataSync';\nimport { UserDataSyncClient, UserDataSyncTestServer } from 'vs/platform/userDataSync/test/common/userDataSyncClient';\n\nsuite('UserDataProfilesManifestSync', () => {\n\n\tconst server = new UserDataSyncTestServer();\n\tlet testClient: UserDataSyncClient;\n\tlet client2: UserDataSyncClient;\n\n\tlet testObject: UserDataProfilesManifestSynchroniser;\n\n\tteardown(async () => {\n\t\tawait testClient.instantiationService.get(IUserDataSyncStoreService).clear();\n\t});\n\n\tconst disposableStore = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(async () => {\n\t\ttestClient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait testClient.setUp(true);\n\t\ttestObject = testClient.getSynchronizer(SyncResource.Profiles) as UserDataProfilesManifestSynchroniser;\n\n\t\tclient2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t});\n\n\ttest('when profiles does not exist', async () => {\n\t\tassert.deepStrictEqual(await testObject.getLastSyncUserData(), null);\n\t\tlet manifest = await testClient.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'GET', url: `${server.url}/v1/resource/${testObject.resource}/latest`, headers: {} },\n\t\t]);\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\tassert.strictEqual(lastSyncUserData!.syncData, null);\n\n\t\tmanifest = await testClient.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\t\tassert.deepStrictEqual(server.requests, []);\n\n\t\tmanifest = await testClient.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\t\tassert.deepStrictEqual(server.requests, []);\n\t});\n\n\ttest('when profile is created after first sync', async () => {\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('1', '1');\n\n\t\tlet lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst manifest = await testClient.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'POST', url: `${server.url}/v1/collection`, headers: {} },\n\t\t\t{ type: 'POST', url: `${server.url}/v1/resource/${testObject.resource}`, headers: { 'If-Match': lastSyncUserData?.ref } },\n\t\t]);\n\n\t\tlastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\tassert.deepStrictEqual(JSON.parse(lastSyncUserData!.syncData!.content), [{ 'name': '1', 'id': '1', 'collection': '1' }]);\n\t});\n\n\ttest('first time sync - outgoing to server (no state)', async () => {\n\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('1', '1');\n\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tassert.deepStrictEqual(JSON.parse(JSON.parse(content).content), [{ 'name': '1', 'id': '1', 'collection': '1' }]);\n\t});\n\n\ttest('first time sync - incoming from server (no state)', async () => {\n\t\tawait client2.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\tawait client2.sync();\n\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tconst profiles = getLocalProfiles(testClient);\n\t\tassert.deepStrictEqual(profiles, [{ id: '1', name: 'name 1', shortName: undefined, useDefaultFlags: undefined }]);\n\t});\n\n\ttest('first time sync when profiles exists', async () => {\n\t\tawait client2.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\tawait client2.sync();\n\n\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('2', 'name 2');\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tconst profiles = getLocalProfiles(testClient);\n\t\tassert.deepStrictEqual(profiles, [{ id: '1', name: 'name 1', shortName: undefined, useDefaultFlags: undefined }, { id: '2', name: 'name 2', shortName: undefined, useDefaultFlags: undefined }]);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseRemoteProfiles(content!);\n\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 1', collection: '1' }, { id: '2', name: 'name 2', collection: '2' }]);\n\t});\n\n\ttest('first time sync when storage exists - has conflicts', async () => {\n\t\tawait client2.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\tawait client2.sync();\n\n\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 2');\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tconst profiles = getLocalProfiles(testClient);\n\t\tassert.deepStrictEqual(profiles, [{ id: '1', name: 'name 1', shortName: undefined, useDefaultFlags: undefined }]);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseRemoteProfiles(content!);\n\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 1', collection: '1' }]);\n\t});\n\n\ttest('sync adding a profile', async () => {\n\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1', { shortName: 'short 1' });\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tawait client2.sync();\n\n\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('2', 'name 2');\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\t\tassert.deepStrictEqual(getLocalProfiles(testClient), [{ id: '1', name: 'name 1', shortName: 'short 1', useDefaultFlags: undefined }, { id: '2', name: 'name 2', shortName: undefined, useDefaultFlags: undefined }]);\n\n\t\tawait client2.sync();\n\t\tassert.deepStrictEqual(getLocalProfiles(client2), [{ id: '1', name: 'name 1', shortName: 'short 1', useDefaultFlags: undefined }, { id: '2', name: 'name 2', shortName: undefined, useDefaultFlags: undefined }]);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseRemoteProfiles(content!);\n\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 1', collection: '1', shortName: 'short 1' }, { id: '2', name: 'name 2', collection: '2' }]);\n\t});\n\n\ttest('sync updating a profile', async () => {\n\t\tconst profile = await testClient.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tawait client2.sync();\n\n\t\tawait testClient.instantiationService.get(IUserDataProfilesService).updateProfile(profile, { name: 'name 2', shortName: '2' });\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\t\tassert.deepStrictEqual(getLocalProfiles(testClient), [{ id: '1', name: 'name 2', shortName: '2', useDefaultFlags: undefined }]);\n\n\t\tawait client2.sync();\n\t\tassert.deepStrictEqual(getLocalProfiles(client2), [{ id: '1', name: 'name 2', shortName: '2', useDefaultFlags: undefined }]);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseRemoteProfiles(content!);\n\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 2', collection: '1', shortName: '2' }]);\n\t});\n\n\ttest('sync removing a profile', async () => {\n\t\tconst profile = await testClient.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('2', 'name 2');\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tawait client2.sync();\n\n\t\ttestClient.instantiationService.get(IUserDataProfilesService).removeProfile(profile);\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\t\tassert.deepStrictEqual(getLocalProfiles(testClient), [{ id: '2', name: 'name 2', shortName: undefined, useDefaultFlags: undefined }]);\n\n\t\tawait client2.sync();\n\t\tassert.deepStrictEqual(getLocalProfiles(client2), [{ id: '2', name: 'name 2', shortName: undefined, useDefaultFlags: undefined }]);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseRemoteProfiles(content!);\n\t\tassert.deepStrictEqual(actual, [{ id: '2', name: 'name 2', collection: '2' }]);\n\t});\n\n\ttest('sync profile that uses default profile', async () => {\n\t\tawait client2.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1', { useDefaultFlags: { keybindings: true } });\n\t\tawait client2.sync();\n\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseRemoteProfiles(content!);\n\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 1', collection: '1', useDefaultFlags: { keybindings: true } }]);\n\n\t\tassert.deepStrictEqual(getLocalProfiles(testClient), [{ id: '1', name: 'name 1', shortName: undefined, useDefaultFlags: { keybindings: true } }]);\n\t});\n\n\ttest('sync profile when the profile is updated to use default profile locally', async () => {\n\t\tawait client2.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\tawait client2.sync();\n\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\n\t\tconst profile = testClient.instantiationService.get(IUserDataProfilesService).profiles.find(p => p.id === '1')!;\n\t\ttestClient.instantiationService.get(IUserDataProfilesService).updateProfile(profile, { useDefaultFlags: { keybindings: true } });\n\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseRemoteProfiles(content!);\n\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 1', collection: '1', useDefaultFlags: { keybindings: true } }]);\n\t\tassert.deepStrictEqual(getLocalProfiles(testClient), [{ id: '1', name: 'name 1', shortName: undefined, useDefaultFlags: { keybindings: true } }]);\n\t});\n\n\ttest('sync profile when the profile is updated to use default profile remotely', async () => {\n\t\tconst profile = await client2.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\tawait client2.sync();\n\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\n\t\tclient2.instantiationService.get(IUserDataProfilesService).updateProfile(profile, { useDefaultFlags: { keybindings: true } });\n\t\tawait client2.sync();\n\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseRemoteProfiles(content!);\n\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 1', collection: '1', useDefaultFlags: { keybindings: true } }]);\n\n\t\tassert.deepStrictEqual(getLocalProfiles(testClient), [{ id: '1', name: 'name 1', shortName: undefined, useDefaultFlags: { keybindings: true } }]);\n\t});\n\n\tfunction parseRemoteProfiles(content: string): ISyncUserDataProfile[] {\n\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\treturn JSON.parse(syncData.content);\n\t}\n\n\tfunction getLocalProfiles(client: UserDataSyncClient): { id: string; name: string; shortName?: string }[] {\n\t\treturn client.instantiationService.get(IUserDataProfilesService).profiles\n\t\t\t.slice(1).sort((a, b) => a.name.localeCompare(b.name))\n\t\t\t.map(profile => ({ id: profile.id, name: profile.name, shortName: profile.shortName, useDefaultFlags: profile.useDefaultFlags }));\n\t}\n\n\n});\n"]}