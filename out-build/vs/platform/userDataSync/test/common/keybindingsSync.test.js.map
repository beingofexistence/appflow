{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataSync/test/common/keybindingsSync.test.ts"],"names":[],"mappings":"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","file":"keybindingsSync.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { getKeybindingsContentFromSyncContent, KeybindingsSynchroniser } from 'vs/platform/userDataSync/common/keybindingsSync';\nimport { IUserDataSyncStoreService, SyncResource, UserDataSyncError, UserDataSyncErrorCode } from 'vs/platform/userDataSync/common/userDataSync';\nimport { UserDataSyncClient, UserDataSyncTestServer } from 'vs/platform/userDataSync/test/common/userDataSyncClient';\n\nsuite('KeybindingsSync', () => {\n\n\tconst server = new UserDataSyncTestServer();\n\tlet client: UserDataSyncClient;\n\n\tlet testObject: KeybindingsSynchroniser;\n\n\tteardown(async () => {\n\t\tawait client.instantiationService.get(IUserDataSyncStoreService).clear();\n\t});\n\n\tconst disposableStore = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(async () => {\n\t\tclient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client.setUp(true);\n\t\ttestObject = client.getSynchronizer(SyncResource.Keybindings) as KeybindingsSynchroniser;\n\t});\n\n\n\ttest('when keybindings file does not exist', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst keybindingsResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.keybindingsResource;\n\n\t\tassert.deepStrictEqual(await testObject.getLastSyncUserData(), null);\n\t\tlet manifest = await client.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'GET', url: `${server.url}/v1/resource/${testObject.resource}/latest`, headers: {} },\n\t\t]);\n\t\tassert.ok(!await fileService.exists(keybindingsResource));\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\tassert.strictEqual(lastSyncUserData!.syncData, null);\n\n\t\tmanifest = await client.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\t\tassert.deepStrictEqual(server.requests, []);\n\n\t\tmanifest = await client.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\t\tassert.deepStrictEqual(server.requests, []);\n\t});\n\n\ttest('when keybindings file is empty and remote has no changes', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst keybindingsResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.keybindingsResource;\n\t\tawait fileService.writeFile(keybindingsResource, VSBuffer.fromString(''));\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getKeybindingsContentFromSyncContent(lastSyncUserData!.syncData!.content!, true, client.instantiationService.get(ILogService)), '[]');\n\t\tassert.strictEqual(getKeybindingsContentFromSyncContent(remoteUserData!.syncData!.content!, true, client.instantiationService.get(ILogService)), '[]');\n\t\tassert.strictEqual((await fileService.readFile(keybindingsResource)).value.toString(), '');\n\t});\n\n\ttest('when keybindings file is empty and remote has changes', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst content = JSON.stringify([\n\t\t\t{\n\t\t\t\t'key': 'shift+cmd+w',\n\t\t\t\t'command': 'workbench.action.closeAllEditors',\n\t\t\t}\n\t\t]);\n\t\tawait client2.instantiationService.get(IFileService).writeFile(client2.instantiationService.get(IUserDataProfilesService).defaultProfile.keybindingsResource, VSBuffer.fromString(content));\n\t\tawait client2.sync();\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst keybindingsResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.keybindingsResource;\n\t\tawait fileService.writeFile(keybindingsResource, VSBuffer.fromString(''));\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getKeybindingsContentFromSyncContent(lastSyncUserData!.syncData!.content!, true, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual(getKeybindingsContentFromSyncContent(remoteUserData!.syncData!.content!, true, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual((await fileService.readFile(keybindingsResource)).value.toString(), content);\n\t});\n\n\ttest('when keybindings file is empty with comment and remote has no changes', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst keybindingsResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.keybindingsResource;\n\t\tconst expectedContent = '// Empty Keybindings';\n\t\tawait fileService.writeFile(keybindingsResource, VSBuffer.fromString(expectedContent));\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getKeybindingsContentFromSyncContent(lastSyncUserData!.syncData!.content!, true, client.instantiationService.get(ILogService)), expectedContent);\n\t\tassert.strictEqual(getKeybindingsContentFromSyncContent(remoteUserData!.syncData!.content!, true, client.instantiationService.get(ILogService)), expectedContent);\n\t\tassert.strictEqual((await fileService.readFile(keybindingsResource)).value.toString(), expectedContent);\n\t});\n\n\ttest('when keybindings file is empty and remote has keybindings', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst content = JSON.stringify([\n\t\t\t{\n\t\t\t\t'key': 'shift+cmd+w',\n\t\t\t\t'command': 'workbench.action.closeAllEditors',\n\t\t\t}\n\t\t]);\n\t\tawait client2.instantiationService.get(IFileService).writeFile(client2.instantiationService.get(IUserDataProfilesService).defaultProfile.keybindingsResource, VSBuffer.fromString(content));\n\t\tawait client2.sync();\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst keybindingsResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.keybindingsResource;\n\t\tawait fileService.writeFile(keybindingsResource, VSBuffer.fromString('// Empty Keybindings'));\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getKeybindingsContentFromSyncContent(lastSyncUserData!.syncData!.content!, true, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual(getKeybindingsContentFromSyncContent(remoteUserData!.syncData!.content!, true, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual((await fileService.readFile(keybindingsResource)).value.toString(), content);\n\t});\n\n\ttest('when keybindings file is empty and remote has empty array', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst content =\n\t\t\t`// Place your key bindings in this file to override the defaults\n[\n]`;\n\t\tawait client2.instantiationService.get(IFileService).writeFile(client2.instantiationService.get(IUserDataProfilesService).defaultProfile.keybindingsResource, VSBuffer.fromString(content));\n\t\tawait client2.sync();\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst keybindingsResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.keybindingsResource;\n\t\tconst expectedLocalContent = '// Empty Keybindings';\n\t\tawait fileService.writeFile(keybindingsResource, VSBuffer.fromString(expectedLocalContent));\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getKeybindingsContentFromSyncContent(lastSyncUserData!.syncData!.content!, true, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual(getKeybindingsContentFromSyncContent(remoteUserData!.syncData!.content!, true, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual((await fileService.readFile(keybindingsResource)).value.toString(), expectedLocalContent);\n\t});\n\n\ttest('when keybindings file is created after first sync', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst keybindingsResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.keybindingsResource;\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tawait fileService.createFile(keybindingsResource, VSBuffer.fromString('[]'));\n\n\t\tlet lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst manifest = await client.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'POST', url: `${server.url}/v1/resource/${testObject.resource}`, headers: { 'If-Match': lastSyncUserData?.ref } },\n\t\t]);\n\n\t\tlastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\tassert.strictEqual(getKeybindingsContentFromSyncContent(lastSyncUserData!.syncData!.content!, true, client.instantiationService.get(ILogService)), '[]');\n\t});\n\n\ttest('test apply remote when keybindings file does not exist', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst keybindingsResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.keybindingsResource;\n\t\tif (await fileService.exists(keybindingsResource)) {\n\t\t\tawait fileService.del(keybindingsResource);\n\t\t}\n\n\t\tconst preview = (await testObject.preview(await client.getResourceManifest(), {}))!;\n\n\t\tserver.reset();\n\t\tconst content = await testObject.resolveContent(preview.resourcePreviews[0].remoteResource);\n\t\tawait testObject.accept(preview.resourcePreviews[0].remoteResource, content);\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(server.requests, []);\n\t});\n\n\ttest('sync throws invalid content error - content is an object', async () => {\n\t\tawait client.instantiationService.get(IFileService).writeFile(client.instantiationService.get(IUserDataProfilesService).defaultProfile.keybindingsResource, VSBuffer.fromString('{}'));\n\t\ttry {\n\t\t\tawait testObject.sync(await client.getResourceManifest());\n\t\t\tassert.fail('should fail with invalid content error');\n\t\t} catch (e) {\n\t\t\tassert.ok(e instanceof UserDataSyncError);\n\t\t\tassert.deepStrictEqual((<UserDataSyncError>e).code, UserDataSyncErrorCode.LocalInvalidContent);\n\t\t}\n\t});\n\n\ttest('sync profile keybindings', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst profile = await client2.instantiationService.get(IUserDataProfilesService).createNamedProfile('profile1');\n\t\tawait client2.instantiationService.get(IFileService).writeFile(profile.keybindingsResource, VSBuffer.fromString(JSON.stringify([\n\t\t\t{\n\t\t\t\t'key': 'shift+cmd+w',\n\t\t\t\t'command': 'workbench.action.closeAllEditors',\n\t\t\t}\n\t\t])));\n\t\tawait client2.sync();\n\n\t\tawait client.sync();\n\n\t\tconst syncedProfile = client.instantiationService.get(IUserDataProfilesService).profiles.find(p => p.id === profile.id)!;\n\t\tconst content = (await client.instantiationService.get(IFileService).readFile(syncedProfile.keybindingsResource)).value.toString();\n\t\tassert.deepStrictEqual(JSON.parse(content), [\n\t\t\t{\n\t\t\t\t'key': 'shift+cmd+w',\n\t\t\t\t'command': 'workbench.action.closeAllEditors',\n\t\t\t}\n\t\t]);\n\t});\n\n});\n"]}