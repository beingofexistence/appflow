{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataSync/test/common/userDataProfilesManifestMerge.test.ts"],"names":[],"mappings":"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","file":"userDataProfilesManifestMerge.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { IUserDataProfile, toUserDataProfile } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { merge } from 'vs/platform/userDataSync/common/userDataProfilesManifestMerge';\nimport { ISyncUserDataProfile } from 'vs/platform/userDataSync/common/userDataSync';\n\nsuite('UserDataProfilesManifestMerge', () => {\n\n\ttest('merge returns local profiles if remote does not exist', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', '1', URI.file('1'), URI.file('cache')),\n\t\t\ttoUserDataProfile('2', '2', URI.file('2'), URI.file('cache')),\n\t\t];\n\n\t\tconst actual = merge(localProfiles, null, null, []);\n\n\t\tassert.deepStrictEqual(actual.local.added, []);\n\t\tassert.deepStrictEqual(actual.local.removed, []);\n\t\tassert.deepStrictEqual(actual.local.updated, []);\n\t\tassert.deepStrictEqual(actual.remote?.added, localProfiles);\n\t\tassert.deepStrictEqual(actual.remote?.updated, []);\n\t\tassert.deepStrictEqual(actual.remote?.removed, []);\n\t});\n\n\ttest('merge returns local profiles if remote does not exist with ignored profiles', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', '1', URI.file('1'), URI.file('cache')),\n\t\t\ttoUserDataProfile('2', '2', URI.file('2'), URI.file('cache')),\n\t\t];\n\n\t\tconst actual = merge(localProfiles, null, null, ['2']);\n\n\t\tassert.deepStrictEqual(actual.local.added, []);\n\t\tassert.deepStrictEqual(actual.local.removed, []);\n\t\tassert.deepStrictEqual(actual.local.updated, []);\n\t\tassert.deepStrictEqual(actual.remote?.added, [localProfiles[0]]);\n\t\tassert.deepStrictEqual(actual.remote?.updated, []);\n\t\tassert.deepStrictEqual(actual.remote?.removed, []);\n\t});\n\n\ttest('merge local and remote profiles when there is no base', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', '1', URI.file('1'), URI.file('cache')),\n\t\t\ttoUserDataProfile('2', '2', URI.file('2'), URI.file('cache')),\n\t\t];\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: 'changed', collection: '1' },\n\t\t\t{ id: '3', name: '3', collection: '3' },\n\t\t];\n\n\t\tconst actual = merge(localProfiles, remoteProfiles, null, []);\n\n\t\tassert.deepStrictEqual(actual.local.added, [remoteProfiles[1]]);\n\t\tassert.deepStrictEqual(actual.local.removed, []);\n\t\tassert.deepStrictEqual(actual.local.updated, [remoteProfiles[0]]);\n\t\tassert.deepStrictEqual(actual.remote?.added, [localProfiles[1]]);\n\t\tassert.deepStrictEqual(actual.remote?.updated, []);\n\t\tassert.deepStrictEqual(actual.remote?.removed, []);\n\t});\n\n\ttest('merge local and remote profiles when there is base', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', 'changed 1', URI.file('1'), URI.file('cache')),\n\t\t\ttoUserDataProfile('3', '3', URI.file('3'), URI.file('cache')),\n\t\t\ttoUserDataProfile('4', 'changed local', URI.file('4'), URI.file('cache')),\n\t\t\ttoUserDataProfile('5', '5', URI.file('5'), URI.file('cache')),\n\t\t\ttoUserDataProfile('6', '6', URI.file('6'), URI.file('cache')),\n\t\t\ttoUserDataProfile('8', '8', URI.file('8'), URI.file('cache')),\n\t\t\ttoUserDataProfile('10', '10', URI.file('8'), URI.file('cache'), { useDefaultFlags: { tasks: true } }),\n\t\t\ttoUserDataProfile('11', '11', URI.file('1'), URI.file('cache'), { useDefaultFlags: { keybindings: true } }),\n\t\t];\n\t\tconst base: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t\t{ id: '2', name: '2', collection: '2' },\n\t\t\t{ id: '3', name: '3', collection: '3' },\n\t\t\t{ id: '4', name: '4', collection: '4' },\n\t\t\t{ id: '5', name: '5', collection: '5' },\n\t\t\t{ id: '6', name: '6', collection: '6' },\n\t\t\t{ id: '10', name: '10', collection: '10', useDefaultFlags: { tasks: true } },\n\t\t\t{ id: '11', name: '11', collection: '11' },\n\t\t];\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t\t{ id: '2', name: '2', collection: '2' },\n\t\t\t{ id: '3', name: '3', collection: '3', shortName: 'short 3' },\n\t\t\t{ id: '4', name: 'changed remote', collection: '4' },\n\t\t\t{ id: '5', name: '5', collection: '5' },\n\t\t\t{ id: '7', name: '7', collection: '7' },\n\t\t\t{ id: '9', name: '9', collection: '9', useDefaultFlags: { snippets: true } },\n\t\t\t{ id: '10', name: '10', collection: '10' },\n\t\t\t{ id: '11', name: '11', collection: '11' },\n\t\t];\n\n\t\tconst actual = merge(localProfiles, remoteProfiles, base, []);\n\n\t\tassert.deepStrictEqual(actual.local.added, [remoteProfiles[5], remoteProfiles[6]]);\n\t\tassert.deepStrictEqual(actual.local.removed, [localProfiles[4]]);\n\t\tassert.deepStrictEqual(actual.local.updated, [remoteProfiles[2], remoteProfiles[3], remoteProfiles[7]]);\n\t\tassert.deepStrictEqual(actual.remote?.added, [localProfiles[5]]);\n\t\tassert.deepStrictEqual(actual.remote?.updated, [localProfiles[0], localProfiles[7]]);\n\t\tassert.deepStrictEqual(actual.remote?.removed, [remoteProfiles[1]]);\n\t});\n\n\ttest('merge local and remote profiles when there is base with ignored profiles', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', 'changed 1', URI.file('1'), URI.file('cache')),\n\t\t\ttoUserDataProfile('3', '3', URI.file('3'), URI.file('cache')),\n\t\t\ttoUserDataProfile('4', 'changed local', URI.file('4'), URI.file('cache')),\n\t\t\ttoUserDataProfile('5', '5', URI.file('5'), URI.file('cache')),\n\t\t\ttoUserDataProfile('6', '6', URI.file('6'), URI.file('cache')),\n\t\t\ttoUserDataProfile('8', '8', URI.file('8'), URI.file('cache')),\n\t\t];\n\t\tconst base: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t\t{ id: '2', name: '2', collection: '2' },\n\t\t\t{ id: '3', name: '3', collection: '3' },\n\t\t\t{ id: '4', name: '4', collection: '4' },\n\t\t\t{ id: '5', name: '5', collection: '5' },\n\t\t\t{ id: '6', name: '6', collection: '6' },\n\t\t];\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t\t{ id: '2', name: '2', collection: '2' },\n\t\t\t{ id: '3', name: 'changed 3', collection: '3' },\n\t\t\t{ id: '4', name: 'changed remote', collection: '4' },\n\t\t\t{ id: '5', name: '5', collection: '5' },\n\t\t\t{ id: '7', name: '7', collection: '7' },\n\t\t];\n\n\t\tconst actual = merge(localProfiles, remoteProfiles, base, ['4', '8']);\n\n\t\tassert.deepStrictEqual(actual.local.added, [remoteProfiles[5]]);\n\t\tassert.deepStrictEqual(actual.local.removed, [localProfiles[4]]);\n\t\tassert.deepStrictEqual(actual.local.updated, [remoteProfiles[2]]);\n\t\tassert.deepStrictEqual(actual.remote?.added, []);\n\t\tassert.deepStrictEqual(actual.remote?.updated, [localProfiles[0]]);\n\t\tassert.deepStrictEqual(actual.remote?.removed, [remoteProfiles[1]]);\n\t});\n\n\ttest('merge when there are no remote changes', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', '1', URI.file('1'), URI.file('cache')),\n\t\t];\n\t\tconst base: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t];\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: 'name changed', collection: '1' },\n\t\t];\n\n\t\tconst actual = merge(localProfiles, remoteProfiles, base, []);\n\n\t\tassert.deepStrictEqual(actual.local.added, []);\n\t\tassert.deepStrictEqual(actual.local.removed, []);\n\t\tassert.deepStrictEqual(actual.local.updated, [remoteProfiles[0]]);\n\t\tassert.strictEqual(actual.remote, null);\n\t});\n\n\ttest('merge when there are no local and remote changes', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', '1', URI.file('1'), URI.file('cache')),\n\t\t];\n\t\tconst base: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t];\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t];\n\n\t\tconst actual = merge(localProfiles, remoteProfiles, base, []);\n\n\t\tassert.deepStrictEqual(actual.local.added, []);\n\t\tassert.deepStrictEqual(actual.local.removed, []);\n\t\tassert.deepStrictEqual(actual.local.updated, []);\n\t\tassert.strictEqual(actual.remote, null);\n\t});\n\n\ttest('merge when profile is removed locally, but not exists in remote', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', '1', URI.file('1'), URI.file('cache')),\n\t\t];\n\t\tconst base: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t\t{ id: '2', name: '2', collection: '2' },\n\t\t];\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '3', collection: '1' },\n\t\t];\n\n\t\tconst actual = merge(localProfiles, remoteProfiles, base, []);\n\n\t\tassert.deepStrictEqual(actual.local.added, []);\n\t\tassert.deepStrictEqual(actual.local.removed, []);\n\t\tassert.deepStrictEqual(actual.local.updated, remoteProfiles);\n\t\tassert.strictEqual(actual.remote, null);\n\t});\n\n});\n"]}