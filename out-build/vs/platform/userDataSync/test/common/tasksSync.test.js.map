{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataSync/test/common/tasksSync.test.ts"],"names":[],"mappings":"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","file":"tasksSync.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { getTasksContentFromSyncContent, TasksSynchroniser } from 'vs/platform/userDataSync/common/tasksSync';\nimport { Change, IUserDataSyncStoreService, MergeState, SyncResource, SyncStatus } from 'vs/platform/userDataSync/common/userDataSync';\nimport { UserDataSyncClient, UserDataSyncTestServer } from 'vs/platform/userDataSync/test/common/userDataSyncClient';\n\nsuite('TasksSync', () => {\n\n\tconst server = new UserDataSyncTestServer();\n\tlet client: UserDataSyncClient;\n\n\tlet testObject: TasksSynchroniser;\n\n\tteardown(async () => {\n\t\tawait client.instantiationService.get(IUserDataSyncStoreService).clear();\n\t});\n\n\tconst disposableStore = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(async () => {\n\t\tclient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client.setUp(true);\n\t\ttestObject = client.getSynchronizer(SyncResource.Tasks) as TasksSynchroniser;\n\t});\n\n\ttest('when tasks file does not exist', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\n\t\tassert.deepStrictEqual(await testObject.getLastSyncUserData(), null);\n\t\tlet manifest = await client.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'GET', url: `${server.url}/v1/resource/${testObject.resource}/latest`, headers: {} },\n\t\t]);\n\t\tassert.ok(!await fileService.exists(tasksResource));\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\tassert.strictEqual(lastSyncUserData!.syncData, null);\n\n\t\tmanifest = await client.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\t\tassert.deepStrictEqual(server.requests, []);\n\n\t\tmanifest = await client.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\t\tassert.deepStrictEqual(server.requests, []);\n\t});\n\n\ttest('when tasks file does not exist and remote has changes', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst content = JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch'\n\t\t\t}]\n\t\t});\n\t\tconst tasksResource2 = client2.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tawait client2.instantiationService.get(IFileService).writeFile(tasksResource2, VSBuffer.fromString(content));\n\t\tawait client2.sync();\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(lastSyncUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(remoteUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual((await fileService.readFile(tasksResource)).value.toString(), content);\n\t});\n\n\ttest('when tasks file exists locally and remote has no tasks', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tconst content = JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch'\n\t\t\t}]\n\t\t});\n\t\tfileService.writeFile(tasksResource, VSBuffer.fromString(content));\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(lastSyncUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(remoteUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t});\n\n\ttest('first time sync: when tasks file exists locally with same content as remote', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst content = JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch'\n\t\t\t}]\n\t\t});\n\t\tconst tasksResource2 = client2.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tawait client2.instantiationService.get(IFileService).writeFile(tasksResource2, VSBuffer.fromString(content));\n\t\tawait client2.sync();\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tawait fileService.writeFile(tasksResource, VSBuffer.fromString(content));\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(lastSyncUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(remoteUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual((await fileService.readFile(tasksResource)).value.toString(), content);\n\t});\n\n\ttest('when tasks file locally has moved forward', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tfileService.writeFile(tasksResource, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': []\n\t\t})));\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst content = JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch'\n\t\t\t}]\n\t\t});\n\t\tfileService.writeFile(tasksResource, VSBuffer.fromString(content));\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(lastSyncUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(remoteUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t});\n\n\ttest('when tasks file remotely has moved forward', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst tasksResource2 = client2.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tconst fileService2 = client2.instantiationService.get(IFileService);\n\t\tawait fileService2.writeFile(tasksResource2, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': []\n\t\t})));\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\n\t\tawait client2.sync();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst content = JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch'\n\t\t\t}]\n\t\t});\n\t\tfileService2.writeFile(tasksResource2, VSBuffer.fromString(content));\n\n\t\tawait client2.sync();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(lastSyncUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(remoteUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual((await fileService.readFile(tasksResource)).value.toString(), content);\n\t});\n\n\ttest('when tasks file has moved forward locally and remotely with same changes', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst tasksResource2 = client2.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tconst fileService2 = client2.instantiationService.get(IFileService);\n\t\tawait fileService2.writeFile(tasksResource2, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': []\n\t\t})));\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\n\t\tawait client2.sync();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst content = JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch'\n\t\t\t}]\n\t\t});\n\t\tfileService2.writeFile(tasksResource2, VSBuffer.fromString(content));\n\t\tawait client2.sync();\n\n\t\tfileService.writeFile(tasksResource, VSBuffer.fromString(content));\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(lastSyncUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(remoteUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual((await fileService.readFile(tasksResource)).value.toString(), content);\n\t});\n\n\ttest('when tasks file has moved forward locally and remotely - accept preview', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst tasksResource2 = client2.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tconst fileService2 = client2.instantiationService.get(IFileService);\n\t\tawait fileService2.writeFile(tasksResource2, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': []\n\t\t})));\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\n\t\tawait client2.sync();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tfileService2.writeFile(tasksResource2, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t}]\n\t\t})));\n\t\tawait client2.sync();\n\n\t\tconst content = JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch'\n\t\t\t}]\n\t\t});\n\t\tfileService.writeFile(tasksResource, VSBuffer.fromString(content));\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst previewContent = (await fileService.readFile(testObject.conflicts.conflicts[0].previewResource)).value.toString();\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts.length, 1);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts[0].mergeState, MergeState.Conflict);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts[0].localChange, Change.Modified);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts[0].remoteChange, Change.Modified);\n\n\t\tawait testObject.accept(testObject.conflicts.conflicts[0].previewResource);\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(lastSyncUserData!.syncData!.content!, client.instantiationService.get(ILogService)), previewContent);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(remoteUserData!.syncData!.content!, client.instantiationService.get(ILogService)), previewContent);\n\t\tassert.strictEqual((await fileService.readFile(tasksResource)).value.toString(), previewContent);\n\t});\n\n\ttest('when tasks file has moved forward locally and remotely - accept modified preview', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst tasksResource2 = client2.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tconst fileService2 = client2.instantiationService.get(IFileService);\n\t\tawait fileService2.writeFile(tasksResource2, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': []\n\t\t})));\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\n\t\tawait client2.sync();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tfileService2.writeFile(tasksResource2, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t}]\n\t\t})));\n\t\tawait client2.sync();\n\n\t\tfileService.writeFile(tasksResource, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch'\n\t\t\t}]\n\t\t})));\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst content = JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch 2'\n\t\t\t}]\n\t\t});\n\t\tawait testObject.accept(testObject.conflicts.conflicts[0].previewResource, content);\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(lastSyncUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(remoteUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual((await fileService.readFile(tasksResource)).value.toString(), content);\n\t});\n\n\ttest('when tasks file has moved forward locally and remotely - accept remote', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst tasksResource2 = client2.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tconst fileService2 = client2.instantiationService.get(IFileService);\n\t\tawait fileService2.writeFile(tasksResource2, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': []\n\t\t})));\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\n\t\tawait client2.sync();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst content = JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t}]\n\t\t});\n\t\tfileService2.writeFile(tasksResource2, VSBuffer.fromString(content));\n\t\tawait client2.sync();\n\n\t\tfileService.writeFile(tasksResource, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch'\n\t\t\t}]\n\t\t})));\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts.conflicts[0].remoteResource);\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(lastSyncUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(remoteUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual((await fileService.readFile(tasksResource)).value.toString(), content);\n\t});\n\n\ttest('when tasks file has moved forward locally and remotely - accept local', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst tasksResource2 = client2.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tconst fileService2 = client2.instantiationService.get(IFileService);\n\t\tawait fileService2.writeFile(tasksResource2, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': []\n\t\t})));\n\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\n\t\tawait client2.sync();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tfileService2.writeFile(tasksResource2, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t}]\n\t\t})));\n\t\tawait client2.sync();\n\n\t\tconst content = JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch'\n\t\t\t}]\n\t\t});\n\t\tfileService.writeFile(tasksResource, VSBuffer.fromString(content));\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts.conflicts[0].localResource);\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(lastSyncUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(remoteUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t\tassert.strictEqual((await fileService.readFile(tasksResource)).value.toString(), content);\n\t});\n\n\ttest('when tasks file was removed in one client', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tawait fileService.writeFile(tasksResource, VSBuffer.fromString(JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': []\n\t\t})));\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tawait client2.sync();\n\n\t\tconst tasksResource2 = client2.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tconst fileService2 = client2.instantiationService.get(IFileService);\n\t\tfileService2.del(tasksResource2);\n\t\tawait client2.sync();\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(lastSyncUserData!.syncData!.content!, client.instantiationService.get(ILogService)), null);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(remoteUserData!.syncData!.content!, client.instantiationService.get(ILogService)), null);\n\t\tassert.strictEqual(await fileService.exists(tasksResource), false);\n\t});\n\n\ttest('when tasks file is created after first sync', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst content = JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch'\n\t\t\t}]\n\t\t});\n\t\tawait fileService.createFile(tasksResource, VSBuffer.fromString(content));\n\n\t\tlet lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst manifest = await client.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'POST', url: `${server.url}/v1/resource/${testObject.resource}`, headers: { 'If-Match': lastSyncUserData?.ref } },\n\t\t]);\n\n\t\tlastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\tassert.strictEqual(getTasksContentFromSyncContent(lastSyncUserData!.syncData!.content!, client.instantiationService.get(ILogService)), content);\n\t});\n\n\ttest('apply remote when tasks file does not exist', async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst tasksResource = client.instantiationService.get(IUserDataProfilesService).defaultProfile.tasksResource;\n\t\tif (await fileService.exists(tasksResource)) {\n\t\t\tawait fileService.del(tasksResource);\n\t\t}\n\n\t\tconst preview = (await testObject.preview(await client.getResourceManifest(), {}))!;\n\n\t\tserver.reset();\n\t\tconst content = await testObject.resolveContent(preview.resourcePreviews[0].remoteResource);\n\t\tawait testObject.accept(preview.resourcePreviews[0].remoteResource, content);\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(server.requests, []);\n\t});\n\n\ttest('sync profile tasks', async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst profile = await client2.instantiationService.get(IUserDataProfilesService).createNamedProfile('profile1');\n\t\tconst expected = JSON.stringify({\n\t\t\t'version': '2.0.0',\n\t\t\t'tasks': [{\n\t\t\t\t'type': 'npm',\n\t\t\t\t'script': 'watch',\n\t\t\t\t'label': 'Watch'\n\t\t\t}]\n\t\t});\n\t\tawait client2.instantiationService.get(IFileService).createFile(profile.tasksResource, VSBuffer.fromString(expected));\n\t\tawait client2.sync();\n\n\t\tawait client.sync();\n\n\t\tconst syncedProfile = client.instantiationService.get(IUserDataProfilesService).profiles.find(p => p.id === profile.id)!;\n\t\tconst actual = (await client.instantiationService.get(IFileService).readFile(syncedProfile.tasksResource)).value.toString();\n\t\tassert.strictEqual(actual, expected);\n\t});\n\n});\n"]}