{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataSync/test/common/globalStateSync.test.ts"],"names":[],"mappings":"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","file":"globalStateSync.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { runWithFakedTimers } from 'vs/base/test/common/timeTravelScheduler';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IUserDataProfile, IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { GlobalStateSynchroniser } from 'vs/platform/userDataSync/common/globalStateSync';\nimport { IGlobalState, ISyncData, IUserDataSyncStoreService, SyncResource, SyncStatus } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IUserDataProfileStorageService } from 'vs/platform/userDataProfile/common/userDataProfileStorageService';\nimport { UserDataSyncClient, UserDataSyncTestServer } from 'vs/platform/userDataSync/test/common/userDataSyncClient';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\n\nsuite('GlobalStateSync', () => {\n\n\tconst server = new UserDataSyncTestServer();\n\tlet testClient: UserDataSyncClient;\n\tlet client2: UserDataSyncClient;\n\n\tlet testObject: GlobalStateSynchroniser;\n\n\tteardown(async () => {\n\t\tawait testClient.instantiationService.get(IUserDataSyncStoreService).clear();\n\t});\n\n\tconst disposableStore = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(async () => {\n\t\ttestClient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait testClient.setUp(true);\n\t\ttestObject = testClient.getSynchronizer(SyncResource.GlobalState) as GlobalStateSynchroniser;\n\n\t\tclient2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t});\n\n\ttest('when global state does not exist', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tassert.deepStrictEqual(await testObject.getLastSyncUserData(), null);\n\t\tlet manifest = await testClient.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'GET', url: `${server.url}/v1/resource/${testObject.resource}/latest`, headers: {} },\n\t\t]);\n\n\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\tassert.strictEqual(lastSyncUserData!.syncData, null);\n\n\t\tmanifest = await testClient.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\t\tassert.deepStrictEqual(server.requests, []);\n\n\t\tmanifest = await testClient.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\t\tassert.deepStrictEqual(server.requests, []);\n\t}));\n\n\ttest('when global state is created after first sync', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tupdateUserStorage('a', 'value1', testClient);\n\n\t\tlet lastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst manifest = await testClient.getResourceManifest();\n\t\tserver.reset();\n\t\tawait testObject.sync(manifest);\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'POST', url: `${server.url}/v1/resource/${testObject.resource}`, headers: { 'If-Match': lastSyncUserData?.ref } },\n\t\t]);\n\n\t\tlastSyncUserData = await testObject.getLastSyncUserData();\n\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\tassert.deepStrictEqual(JSON.parse(lastSyncUserData!.syncData!.content).storage, { 'a': { version: 1, value: 'value1' } });\n\t}));\n\n\ttest('first time sync - outgoing to server (no state)', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tupdateUserStorage('a', 'value1', testClient);\n\t\tupdateMachineStorage('b', 'value1', testClient);\n\t\tawait updateLocale(testClient);\n\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'globalState.argv.locale': { version: 1, value: 'en' }, 'a': { version: 1, value: 'value1' } });\n\t}));\n\n\ttest('first time sync - incoming from server (no state)', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tupdateUserStorage('a', 'value1', client2);\n\t\tawait updateLocale(client2);\n\t\tawait client2.sync();\n\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tassert.strictEqual(readStorage('a', testClient), 'value1');\n\t\tassert.strictEqual(await readLocale(testClient), 'en');\n\t}));\n\n\ttest('first time sync when storage exists', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tupdateUserStorage('a', 'value1', client2);\n\t\tawait client2.sync();\n\n\t\tupdateUserStorage('b', 'value2', testClient);\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tassert.strictEqual(readStorage('a', testClient), 'value1');\n\t\tassert.strictEqual(readStorage('b', testClient), 'value2');\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'a': { version: 1, value: 'value1' }, 'b': { version: 1, value: 'value2' } });\n\t}));\n\n\ttest('first time sync when storage exists - has conflicts', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tupdateUserStorage('a', 'value1', client2);\n\t\tawait client2.sync();\n\n\t\tupdateUserStorage('a', 'value2', client2);\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tassert.strictEqual(readStorage('a', testClient), 'value1');\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'a': { version: 1, value: 'value1' } });\n\t}));\n\n\ttest('sync adding a storage value', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tupdateUserStorage('a', 'value1', testClient);\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\n\t\tupdateUserStorage('b', 'value2', testClient);\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tassert.strictEqual(readStorage('a', testClient), 'value1');\n\t\tassert.strictEqual(readStorage('b', testClient), 'value2');\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'a': { version: 1, value: 'value1' }, 'b': { version: 1, value: 'value2' } });\n\t}));\n\n\ttest('sync updating a storage value', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tupdateUserStorage('a', 'value1', testClient);\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\n\t\tupdateUserStorage('a', 'value2', testClient);\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tassert.strictEqual(readStorage('a', testClient), 'value2');\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'a': { version: 1, value: 'value2' } });\n\t}));\n\n\ttest('sync removing a storage value', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tupdateUserStorage('a', 'value1', testClient);\n\t\tupdateUserStorage('b', 'value2', testClient);\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\n\t\tremoveStorage('b', testClient);\n\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\tassert.strictEqual(readStorage('a', testClient), 'value1');\n\t\tassert.strictEqual(readStorage('b', testClient), undefined);\n\n\t\tconst { content } = await testClient.read(testObject.resource);\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'a': { version: 1, value: 'value1' } });\n\t}));\n\n\ttest('sync profile state', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t\tconst profile = await client2.instantiationService.get(IUserDataProfilesService).createNamedProfile('profile1');\n\t\tawait updateLocale(client2);\n\t\tawait updateUserStorageForProfile('a', 'value1', profile, testClient);\n\t\tawait client2.sync();\n\n\t\tawait testClient.sync();\n\n\t\tconst syncedProfile = testClient.instantiationService.get(IUserDataProfilesService).profiles.find(p => p.id === profile.id)!;\n\t\tconst profileStorage = await testClient.instantiationService.get(IUserDataProfileStorageService).readStorageData(syncedProfile);\n\t\tassert.strictEqual(profileStorage.get('a')?.value, 'value1');\n\t\tassert.strictEqual(await readLocale(testClient), 'en');\n\n\t\tconst { content } = await testClient.read(testObject.resource, '1');\n\t\tassert.ok(content !== null);\n\t\tconst actual = parseGlobalState(content!);\n\t\tassert.deepStrictEqual(actual.storage, { 'a': { version: 1, value: 'value1' } });\n\t}));\n\n\tfunction parseGlobalState(content: string): IGlobalState {\n\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\treturn JSON.parse(syncData.content);\n\t}\n\n\tasync function updateLocale(client: UserDataSyncClient): Promise<void> {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst environmentService = client.instantiationService.get(IEnvironmentService);\n\t\tawait fileService.writeFile(environmentService.argvResource, VSBuffer.fromString(JSON.stringify({ 'locale': 'en' })));\n\t}\n\n\tfunction updateUserStorage(key: string, value: string, client: UserDataSyncClient, profile?: IUserDataProfile): void {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tstorageService.store(key, value, StorageScope.PROFILE, StorageTarget.USER);\n\t}\n\n\tasync function updateUserStorageForProfile(key: string, value: string, profile: IUserDataProfile, client: UserDataSyncClient): Promise<void> {\n\t\tconst storageService = client.instantiationService.get(IUserDataProfileStorageService);\n\t\tconst data = new Map<string, string>();\n\t\tdata.set(key, value);\n\t\tawait storageService.updateStorageData(profile, data, StorageTarget.USER);\n\t}\n\n\tfunction updateMachineStorage(key: string, value: string, client: UserDataSyncClient): void {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tstorageService.store(key, value, StorageScope.PROFILE, StorageTarget.MACHINE);\n\t}\n\n\tfunction removeStorage(key: string, client: UserDataSyncClient): void {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tstorageService.remove(key, StorageScope.PROFILE);\n\t}\n\n\tfunction readStorage(key: string, client: UserDataSyncClient): string | undefined {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\treturn storageService.get(key, StorageScope.PROFILE);\n\t}\n\n\tasync function readLocale(client: UserDataSyncClient): Promise<string | undefined> {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst environmentService = client.instantiationService.get(IEnvironmentService);\n\t\tconst content = await fileService.readFile(environmentService.argvResource);\n\t\treturn JSON.parse(content.value.toString()).locale;\n\t}\n\n});\n"]}