{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataSync/test/common/synchronizer.test.ts"],"names":[],"mappings":"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","file":"synchronizer.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Barrier } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { isEqual, joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { runWithFakedTimers } from 'vs/base/test/common/timeTravelScheduler';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { AbstractSynchroniser, IAcceptResult, IMergeResult, IResourcePreview } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { Change, IRemoteUserData, IResourcePreview as IBaseResourcePreview, IUserDataResourceManifest, IUserDataSyncConfiguration, IUserDataSyncStoreService, MergeState, SyncResource, SyncStatus, USER_DATA_SYNC_SCHEME } from 'vs/platform/userDataSync/common/userDataSync';\nimport { UserDataSyncClient, UserDataSyncTestServer } from 'vs/platform/userDataSync/test/common/userDataSyncClient';\n\ninterface ITestResourcePreview extends IResourcePreview {\n\tref: string;\n}\n\nclass TestSynchroniser extends AbstractSynchroniser {\n\n\tsyncBarrier: Barrier = new Barrier();\n\tsyncResult: { hasConflicts: boolean; hasError: boolean } = { hasConflicts: false, hasError: false };\n\tonDoSyncCall: Emitter<void> = this._register(new Emitter<void>());\n\tfailWhenGettingLatestRemoteUserData: boolean = false;\n\n\tprotected readonly version: number = 1;\n\n\tprivate cancelled: boolean = false;\n\treadonly localResource = joinPath(this.environmentService.userRoamingDataHome, 'testResource.json');\n\n\tgetMachineId(): Promise<string> { return this.currentMachineIdPromise; }\n\tgetLastSyncResource(): URI { return this.lastSyncResource; }\n\n\tprotected override getLatestRemoteUserData(manifest: IUserDataResourceManifest | null, lastSyncUserData: IRemoteUserData | null): Promise<IRemoteUserData> {\n\t\tif (this.failWhenGettingLatestRemoteUserData) {\n\t\t\tthrow new Error();\n\t\t}\n\t\treturn super.getLatestRemoteUserData(manifest, lastSyncUserData);\n\t}\n\n\tprotected override async doSync(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, apply: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration): Promise<SyncStatus> {\n\t\tthis.cancelled = false;\n\t\tthis.onDoSyncCall.fire();\n\t\tawait this.syncBarrier.wait();\n\n\t\tif (this.cancelled) {\n\t\t\treturn SyncStatus.Idle;\n\t\t}\n\n\t\treturn super.doSync(remoteUserData, lastSyncUserData, apply, userDataSyncConfiguration);\n\t}\n\n\tprotected override async generateSyncPreview(remoteUserData: IRemoteUserData): Promise<ITestResourcePreview[]> {\n\t\tif (this.syncResult.hasError) {\n\t\t\tthrow new Error('failed');\n\t\t}\n\n\t\tlet fileContent = null;\n\t\ttry {\n\t\t\tfileContent = await this.fileService.readFile(this.localResource);\n\t\t} catch (error) { }\n\n\t\treturn [{\n\t\t\tbaseResource: this.localResource.with(({ scheme: USER_DATA_SYNC_SCHEME, authority: 'base' })),\n\t\t\tbaseContent: null,\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent: fileContent ? fileContent.value.toString() : null,\n\t\t\tremoteResource: this.localResource.with(({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' })),\n\t\t\tremoteContent: remoteUserData.syncData ? remoteUserData.syncData.content : null,\n\t\t\tpreviewResource: this.localResource.with(({ scheme: USER_DATA_SYNC_SCHEME, authority: 'preview' })),\n\t\t\tref: remoteUserData.ref,\n\t\t\tlocalChange: Change.Modified,\n\t\t\tremoteChange: Change.Modified,\n\t\t\tacceptedResource: this.localResource.with(({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })),\n\t\t}];\n\t}\n\n\tprotected async hasRemoteChanged(lastSyncUserData: IRemoteUserData): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tprotected async getMergeResult(resourcePreview: ITestResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\treturn {\n\t\t\tcontent: resourcePreview.ref,\n\t\t\tlocalChange: Change.Modified,\n\t\t\tremoteChange: Change.Modified,\n\t\t\thasConflicts: this.syncResult.hasConflicts,\n\t\t};\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: ITestResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult> {\n\n\t\tif (isEqual(resource, resourcePreview.localResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.localContent,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: resourcePreview.localContent === null ? Change.Deleted : Change.Modified,\n\t\t\t};\n\t\t}\n\n\t\tif (isEqual(resource, resourcePreview.remoteResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocalChange: resourcePreview.remoteContent === null ? Change.Deleted : Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\tif (isEqual(resource, resourcePreview.previewResource)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.ref,\n\t\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\t\tremoteChange: Change.Modified,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tcontent,\n\t\t\t\t\tlocalChange: content === null ? resourcePreview.localContent !== null ? Change.Deleted : Change.None : Change.Modified,\n\t\t\t\t\tremoteChange: content === null ? resourcePreview.remoteContent !== null ? Change.Deleted : Change.None : Change.Modified,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [IResourcePreview, IAcceptResult][], force: boolean): Promise<void> {\n\t\tif (resourcePreviews[0][1].localChange === Change.Deleted) {\n\t\t\tawait this.fileService.del(this.localResource);\n\t\t}\n\n\t\tif (resourcePreviews[0][1].localChange === Change.Added || resourcePreviews[0][1].localChange === Change.Modified) {\n\t\t\tawait this.fileService.writeFile(this.localResource, VSBuffer.fromString(resourcePreviews[0][1].content!));\n\t\t}\n\n\t\tif (resourcePreviews[0][1].remoteChange === Change.Deleted) {\n\t\t\tawait this.applyRef(null, remoteUserData.ref);\n\t\t}\n\n\t\tif (resourcePreviews[0][1].remoteChange === Change.Added || resourcePreviews[0][1].remoteChange === Change.Modified) {\n\t\t\tawait this.applyRef(resourcePreviews[0][1].content, remoteUserData.ref);\n\t\t}\n\t}\n\n\tasync applyRef(content: string | null, ref: string): Promise<void> {\n\t\tconst remoteUserData = await this.updateRemoteUserData(content === null ? '' : content, ref);\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\toverride async stop(): Promise<void> {\n\t\tthis.cancelled = true;\n\t\tthis.syncBarrier.open();\n\t\tsuper.stop();\n\t}\n\n\ttestTriggerLocalChange(): void {\n\t\tthis.triggerLocalChange();\n\t}\n\n\tonDidTriggerLocalChangeCall: Emitter<void> = this._register(new Emitter<void>());\n\tprotected override async doTriggerLocalChange(): Promise<void> {\n\t\tawait super.doTriggerLocalChange();\n\t\tthis.onDidTriggerLocalChangeCall.fire();\n\t}\n\n\thasLocalData(): Promise<boolean> { throw new Error('not implemented'); }\n\tasync resolveContent(uri: URI): Promise<string | null> { return null; }\n}\n\nsuite('TestSynchronizer - Auto Sync', () => {\n\n\tconst server = new UserDataSyncTestServer();\n\tlet client: UserDataSyncClient;\n\n\tteardown(async () => {\n\t\tawait client.instantiationService.get(IUserDataSyncStoreService).clear();\n\t});\n\n\tconst disposableStore = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(async () => {\n\t\tclient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client.setUp();\n\t});\n\n\ttest('status is syncing', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\n\t\tconst actual: SyncStatus[] = [];\n\t\tdisposableStore.add(testObject.onDidChangeStatus(status => actual.push(status)));\n\n\t\tconst promise = Event.toPromise(testObject.onDoSyncCall.event);\n\n\t\ttestObject.sync(await client.getResourceManifest());\n\t\tawait promise;\n\n\t\tassert.deepStrictEqual(actual, [SyncStatus.Syncing]);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\n\t\ttestObject.stop();\n\t}));\n\n\ttest('status is set correctly when sync is finished', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\n\t\tconst actual: SyncStatus[] = [];\n\t\tdisposableStore.add(testObject.onDidChangeStatus(status => actual.push(status)));\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(actual, [SyncStatus.Syncing, SyncStatus.Idle]);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t}));\n\n\ttest('status is set correctly when sync has errors', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasError: true, hasConflicts: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tconst actual: SyncStatus[] = [];\n\t\tdisposableStore.add(testObject.onDidChangeStatus(status => actual.push(status)));\n\n\t\ttry {\n\t\t\tawait testObject.sync(await client.getResourceManifest());\n\t\t\tassert.fail('Should fail');\n\t\t} catch (e) {\n\t\t\tassert.deepStrictEqual(actual, [SyncStatus.Syncing, SyncStatus.Idle]);\n\t\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\t}\n\t}));\n\n\ttest('status is set to hasConflicts when asked to sync if there are conflicts', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\t\tassertConflicts(testObject.conflicts.conflicts, [testObject.localResource]);\n\t}));\n\n\ttest('sync should not run if syncing already', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\tconst promise = Event.toPromise(testObject.onDoSyncCall.event);\n\n\t\ttestObject.sync(await client.getResourceManifest());\n\t\tawait promise;\n\n\t\tconst actual: SyncStatus[] = [];\n\t\tdisposableStore.add(testObject.onDidChangeStatus(status => actual.push(status)));\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(actual, []);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\n\t\tawait testObject.stop();\n\t}));\n\n\ttest('sync should not run if there are conflicts', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst actual: SyncStatus[] = [];\n\t\tdisposableStore.add(testObject.onDidChangeStatus(status => actual.push(status)));\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(actual, []);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\t}));\n\n\ttest('accept preview during conflicts', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts.conflicts[0].previewResource);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, (await fileService.readFile(testObject.localResource)).value.toString());\n\t}));\n\n\ttest('accept remote during conflicts', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst currentRemoteContent = (await testObject.getRemoteUserData(null)).syncData?.content;\n\t\tconst newLocalContent = 'conflict';\n\t\tawait fileService.writeFile(testObject.localResource, VSBuffer.fromString(newLocalContent));\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts.conflicts[0].remoteResource);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, currentRemoteContent);\n\t\tassert.strictEqual((await fileService.readFile(testObject.localResource)).value.toString(), currentRemoteContent);\n\t}));\n\n\ttest('accept local during conflicts', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst newLocalContent = 'conflict';\n\t\tawait fileService.writeFile(testObject.localResource, VSBuffer.fromString(newLocalContent));\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts.conflicts[0].localResource);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, newLocalContent);\n\t\tassert.strictEqual((await fileService.readFile(testObject.localResource)).value.toString(), newLocalContent);\n\t}));\n\n\ttest('accept new content during conflicts', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst newLocalContent = 'conflict';\n\t\tawait fileService.writeFile(testObject.localResource, VSBuffer.fromString(newLocalContent));\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tconst mergeContent = 'newContent';\n\t\tawait testObject.accept(testObject.conflicts.conflicts[0].previewResource, mergeContent);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, mergeContent);\n\t\tassert.strictEqual((await fileService.readFile(testObject.localResource)).value.toString(), mergeContent);\n\t}));\n\n\ttest('accept delete during conflicts', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst newLocalContent = 'conflict';\n\t\tawait fileService.writeFile(testObject.localResource, VSBuffer.fromString(newLocalContent));\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts.conflicts[0].previewResource, null);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, '');\n\t\tassert.ok(!(await fileService.exists(testObject.localResource)));\n\t}));\n\n\ttest('accept deleted local during conflicts', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tawait fileService.del(testObject.localResource);\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts.conflicts[0].localResource);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, '');\n\t\tassert.ok(!(await fileService.exists(testObject.localResource)));\n\t}));\n\n\ttest('accept deleted remote during conflicts', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tawait fileService.writeFile(testObject.localResource, VSBuffer.fromString('some content'));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\n\t\tawait testObject.accept(testObject.conflicts.conflicts[0].remoteResource);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tawait testObject.apply(false);\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData, null);\n\t\tassert.ok(!(await fileService.exists(testObject.localResource)));\n\t}));\n\n\ttest('request latest data on precondition failure', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\t// Sync once\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\ttestObject.syncBarrier = new Barrier();\n\n\t\t// update remote data before syncing so that 412 is thrown by server\n\t\tconst disposable = testObject.onDoSyncCall.event(async () => {\n\t\t\tdisposable.dispose();\n\t\t\tawait testObject.applyRef(ref, ref);\n\t\t\tserver.reset();\n\t\t\ttestObject.syncBarrier.open();\n\t\t});\n\n\t\t// Start sycing\n\t\tconst manifest = await client.getResourceManifest();\n\t\tconst ref = manifest![testObject.resource];\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t{ type: 'POST', url: `${server.url}/v1/resource/${testObject.resource}`, headers: { 'If-Match': ref } },\n\t\t\t{ type: 'GET', url: `${server.url}/v1/resource/${testObject.resource}/latest`, headers: {} },\n\t\t\t{ type: 'POST', url: `${server.url}/v1/resource/${testObject.resource}`, headers: { 'If-Match': `${parseInt(ref) + 1}` } },\n\t\t]);\n\t}));\n\n\ttest('no requests are made to server when local change is triggered', () => runWithFakedTimers<void>({ useFakeTimers: true }, () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tserver.reset();\n\t\tconst promise = Event.toPromise(testObject.onDidTriggerLocalChangeCall.event);\n\t\ttestObject.testTriggerLocalChange();\n\n\t\tawait promise;\n\t\tassert.deepStrictEqual(server.requests, []);\n\t})));\n\n\ttest('status is reset when getting latest remote data fails', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.failWhenGettingLatestRemoteUserData = true;\n\n\t\ttry {\n\t\t\tawait testObject.sync(await client.getResourceManifest());\n\t\t\tassert.fail('Should throw an error');\n\t\t} catch (error) {\n\t\t}\n\n\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t}));\n});\n\nsuite('TestSynchronizer - Manual Sync', () => {\n\n\tconst server = new UserDataSyncTestServer();\n\tlet client: UserDataSyncClient;\n\n\tteardown(async () => {\n\t\tawait client.instantiationService.get(IUserDataSyncStoreService).clear();\n\t});\n\n\tconst disposableStore = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(async () => {\n\t\tclient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client.setUp();\n\t});\n\n\ttest('preview', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tconst preview = await testObject.preview(await client.getResourceManifest(), {});\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('preview -> merge', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('preview -> accept', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('preview -> merge -> accept', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].localResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('preview -> merge -> apply', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst manifest = await client.getResourceManifest();\n\t\tlet preview = await testObject.preview(manifest, {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tconst expectedContent = manifest![testObject.resource];\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t}));\n\n\ttest('preview -> accept -> apply', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst manifest = await client.getResourceManifest();\n\t\tconst expectedContent = manifest![testObject.resource];\n\t\tlet preview = await testObject.preview(manifest, {});\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t}));\n\n\ttest('preview -> merge -> accept -> apply', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst expectedContent = (await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString();\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].localResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t}));\n\n\ttest('preivew -> merge -> discard', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('preivew -> merge -> discard -> accept', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('preivew -> accept -> discard', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('preivew -> accept -> discard -> accept', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('preivew -> accept -> discard -> merge', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('preivew -> merge -> accept -> discard', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('preivew -> merge -> discard -> accept -> apply', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst expectedContent = (await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString();\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].localResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t}));\n\n\ttest('preivew -> accept -> discard -> accept -> apply', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst expectedContent = (await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString();\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].localResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t}));\n\n\ttest('preivew -> accept -> discard -> merge -> apply', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst manifest = await client.getResourceManifest();\n\t\tconst expectedContent = manifest![testObject.resource];\n\t\tlet preview = await testObject.preview(manifest, {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].localResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t}));\n\n\ttest('conflicts: preview', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tconst preview = await testObject.preview(await client.getResourceManifest(), {});\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('conflicts: preview -> merge', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Conflict);\n\t\tassertConflicts(testObject.conflicts.conflicts, [preview!.resourcePreviews[0].localResource]);\n\t}));\n\n\ttest('conflicts: preview -> merge -> discard', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tconst preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tawait testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tawait testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('conflicts: preview -> accept', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tawait testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tconst content = await testObject.resolveContent(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource, content);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('conflicts: preview -> merge -> accept -> apply', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tconst manifest = await client.getResourceManifest();\n\t\tconst expectedContent = manifest![testObject.resource];\n\t\tlet preview = await testObject.preview(manifest, {});\n\n\t\tawait testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t}));\n\n\ttest('conflicts: preview -> accept 2', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tconst content = await testObject.resolveContent(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource, content);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('conflicts: preview -> accept -> apply', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\tconst manifest = await client.getResourceManifest();\n\t\tconst expectedContent = manifest![testObject.resource];\n\t\tlet preview = await testObject.preview(manifest, {});\n\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t}));\n\n\ttest('conflicts: preivew -> merge -> discard', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('conflicts: preivew -> merge -> discard -> accept', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('conflicts: preivew -> accept -> discard', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('conflicts: preivew -> accept -> discard -> accept', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Accepted);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('conflicts: preivew -> accept -> discard -> merge', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Conflict);\n\t\tassertConflicts(testObject.conflicts.conflicts, [preview!.resourcePreviews[0].localResource]);\n\t}));\n\n\ttest('conflicts: preivew -> merge -> discard -> merge', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: true, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].remoteResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.HasConflicts);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Conflict);\n\t\tassertConflicts(testObject.conflicts.conflicts, [preview!.resourcePreviews[0].localResource]);\n\t}));\n\n\ttest('conflicts: preivew -> merge -> accept -> discard', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Syncing);\n\t\tassertPreviews(preview!.resourcePreviews, [testObject.localResource]);\n\t\tassert.strictEqual(preview!.resourcePreviews[0].mergeState, MergeState.Preview);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t}));\n\n\ttest('conflicts: preivew -> merge -> discard -> accept -> apply', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst expectedContent = (await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString();\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].localResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t}));\n\n\ttest('conflicts: preivew -> accept -> discard -> accept -> apply', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncResult = { hasConflicts: false, hasError: false };\n\t\ttestObject.syncBarrier.open();\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst expectedContent = (await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString();\n\t\tlet preview = await testObject.preview(await client.getResourceManifest(), {});\n\t\tpreview = await testObject.merge(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].remoteResource);\n\t\tpreview = await testObject.discard(preview!.resourcePreviews[0].previewResource);\n\t\tpreview = await testObject.accept(preview!.resourcePreviews[0].localResource);\n\t\tpreview = await testObject.apply(false);\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual(preview, null);\n\t\tassertConflicts(testObject.conflicts.conflicts, []);\n\t\tassert.strictEqual((await testObject.getRemoteUserData(null)).syncData?.content, expectedContent);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t}));\n\n\ttest('remote is accepted if last sync state does not exists in server', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tconst client2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp();\n\t\tconst synchronizer2: TestSynchroniser = disposableStore.add(client2.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client2.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\tsynchronizer2.syncBarrier.open();\n\t\tconst manifest = await client2.getResourceManifest();\n\t\tconst expectedContent = manifest![testObject.resource];\n\t\tawait synchronizer2.sync(manifest);\n\n\t\tawait fileService.del(testObject.getLastSyncResource());\n\t\tawait testObject.sync(await client.getResourceManifest());\n\n\t\tassert.deepStrictEqual(testObject.status, SyncStatus.Idle);\n\t\tassert.strictEqual((await client.instantiationService.get(IFileService).readFile(testObject.localResource)).value.toString(), expectedContent);\n\t}));\n\n});\n\nsuite('TestSynchronizer - Last Sync Data', () => {\n\tconst server = new UserDataSyncTestServer();\n\tlet client: UserDataSyncClient;\n\n\tteardown(async () => {\n\t\tawait client.instantiationService.get(IUserDataSyncStoreService).clear();\n\t});\n\n\tconst disposableStore = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(async () => {\n\t\tclient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client.setUp();\n\t});\n\n\ttest('last sync data is null when not synced before', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\n\t\tconst actual = await testObject.getLastSyncUserData();\n\n\t\tassert.strictEqual(actual, null);\n\t}));\n\n\ttest('last sync data is set after sync', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tconst machineId = await testObject.getMachineId();\n\t\tconst actual = await testObject.getLastSyncUserData();\n\n\t\tassert.deepStrictEqual(storageService.get('settings.lastSyncUserData', StorageScope.APPLICATION), JSON.stringify({ ref: '1' }));\n\t\tassert.deepStrictEqual(JSON.parse((await fileService.readFile(testObject.getLastSyncResource())).value.toString()), { ref: '1', syncData: { version: 1, machineId, content: '0' } });\n\t\tassert.deepStrictEqual(actual, {\n\t\t\tref: '1',\n\t\t\tsyncData: {\n\t\t\t\tcontent: '0',\n\t\t\t\tmachineId,\n\t\t\t\tversion: 1\n\t\t\t},\n\t\t});\n\t}));\n\n\ttest('last sync data is read from server after sync if last sync resource is deleted', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tconst machineId = await testObject.getMachineId();\n\t\tawait fileService.del(testObject.getLastSyncResource());\n\t\tconst actual = await testObject.getLastSyncUserData();\n\n\t\tassert.deepStrictEqual(storageService.get('settings.lastSyncUserData', StorageScope.APPLICATION), JSON.stringify({ ref: '1' }));\n\t\tassert.deepStrictEqual(actual, {\n\t\t\tref: '1',\n\t\t\tsyncData: {\n\t\t\t\tcontent: '0',\n\t\t\t\tmachineId,\n\t\t\t\tversion: 1\n\t\t\t},\n\t\t});\n\t}));\n\n\ttest('last sync data is read from server after sync and sync data is invalid', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tconst machineId = await testObject.getMachineId();\n\t\tawait fileService.writeFile(testObject.getLastSyncResource(), VSBuffer.fromString(JSON.stringify({\n\t\t\tref: '1',\n\t\t\tversion: 1,\n\t\t\tcontent: JSON.stringify({\n\t\t\t\tcontent: '0',\n\t\t\t\tmachineId,\n\t\t\t\tversion: 1\n\t\t\t}),\n\t\t\tadditionalData: {\n\t\t\t\tfoo: 'bar'\n\t\t\t}\n\t\t})));\n\t\tserver.reset();\n\t\tconst actual = await testObject.getLastSyncUserData();\n\n\t\tassert.deepStrictEqual(storageService.get('settings.lastSyncUserData', StorageScope.APPLICATION), JSON.stringify({ ref: '1' }));\n\t\tassert.deepStrictEqual(actual, {\n\t\t\tref: '1',\n\t\t\tsyncData: {\n\t\t\t\tcontent: '0',\n\t\t\t\tmachineId,\n\t\t\t\tversion: 1\n\t\t\t},\n\t\t});\n\t\tassert.deepStrictEqual(server.requests, [{ headers: {}, type: 'GET', url: 'http://host:3000/v1/resource/settings/1' }]);\n\t}));\n\n\ttest('last sync data is read from server after sync and stored sync data is tampered', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tconst machineId = await testObject.getMachineId();\n\t\tawait fileService.writeFile(testObject.getLastSyncResource(), VSBuffer.fromString(JSON.stringify({\n\t\t\tref: '2',\n\t\t\tsyncData: {\n\t\t\t\tcontent: '0',\n\t\t\t\tmachineId,\n\t\t\t\tversion: 1\n\t\t\t}\n\t\t})));\n\t\tserver.reset();\n\t\tconst actual = await testObject.getLastSyncUserData();\n\n\t\tassert.deepStrictEqual(storageService.get('settings.lastSyncUserData', StorageScope.APPLICATION), JSON.stringify({ ref: '1' }));\n\t\tassert.deepStrictEqual(actual, {\n\t\t\tref: '1',\n\t\t\tsyncData: {\n\t\t\t\tcontent: '0',\n\t\t\t\tmachineId,\n\t\t\t\tversion: 1\n\t\t\t}\n\t\t});\n\t\tassert.deepStrictEqual(server.requests, [{ headers: {}, type: 'GET', url: 'http://host:3000/v1/resource/settings/1' }]);\n\t}));\n\n\ttest('reading last sync data: no requests are made to server when sync data is invalid', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tconst machineId = await testObject.getMachineId();\n\t\tawait fileService.writeFile(testObject.getLastSyncResource(), VSBuffer.fromString(JSON.stringify({\n\t\t\tref: '1',\n\t\t\tversion: 1,\n\t\t\tcontent: JSON.stringify({\n\t\t\t\tcontent: '0',\n\t\t\t\tmachineId,\n\t\t\t\tversion: 1\n\t\t\t}),\n\t\t\tadditionalData: {\n\t\t\t\tfoo: 'bar'\n\t\t\t}\n\t\t})));\n\t\tawait testObject.getLastSyncUserData();\n\t\tserver.reset();\n\n\t\tawait testObject.getLastSyncUserData();\n\t\tassert.deepStrictEqual(server.requests, []);\n\t}));\n\n\ttest('reading last sync data: no requests are made to server when sync data is null', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tserver.reset();\n\t\tawait fileService.writeFile(testObject.getLastSyncResource(), VSBuffer.fromString(JSON.stringify({\n\t\t\tref: '1',\n\t\t\tsyncData: null,\n\t\t})));\n\t\tawait testObject.getLastSyncUserData();\n\n\t\tassert.deepStrictEqual(server.requests, []);\n\t}));\n\n\ttest('last sync data is null after sync if last sync state is deleted', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tstorageService.remove('settings.lastSyncUserData', StorageScope.APPLICATION);\n\t\tconst actual = await testObject.getLastSyncUserData();\n\n\t\tassert.strictEqual(actual, null);\n\t}));\n\n\ttest('last sync data is null after sync if last sync content is deleted everywhere', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst userDataSyncStoreService = client.instantiationService.get(IUserDataSyncStoreService);\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\ttestObject.syncBarrier.open();\n\n\t\tawait testObject.sync(await client.getResourceManifest());\n\t\tawait fileService.del(testObject.getLastSyncResource());\n\t\tawait userDataSyncStoreService.deleteResource(testObject.syncResource.syncResource, null);\n\t\tconst actual = await testObject.getLastSyncUserData();\n\n\t\tassert.deepStrictEqual(storageService.get('settings.lastSyncUserData', StorageScope.APPLICATION), JSON.stringify({ ref: '1' }));\n\t\tassert.strictEqual(actual, null);\n\t}));\n\n\ttest('last sync data is migrated', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst storageService = client.instantiationService.get(IStorageService);\n\t\tconst fileService = client.instantiationService.get(IFileService);\n\t\tconst testObject: TestSynchroniser = disposableStore.add(client.instantiationService.createInstance(TestSynchroniser, { syncResource: SyncResource.Settings, profile: client.instantiationService.get(IUserDataProfilesService).defaultProfile }, undefined));\n\t\tconst machineId = await testObject.getMachineId();\n\t\tawait fileService.writeFile(testObject.getLastSyncResource(), VSBuffer.fromString(JSON.stringify({\n\t\t\tref: '1',\n\t\t\tversion: 1,\n\t\t\tcontent: JSON.stringify({\n\t\t\t\tcontent: '0',\n\t\t\t\tmachineId,\n\t\t\t\tversion: 1\n\t\t\t}),\n\t\t\tadditionalData: {\n\t\t\t\tfoo: 'bar'\n\t\t\t}\n\t\t})));\n\n\t\tconst actual = await testObject.getLastSyncUserData();\n\n\t\tassert.deepStrictEqual(storageService.get('settings.lastSyncUserData', StorageScope.APPLICATION), JSON.stringify({\n\t\t\tref: '1',\n\t\t\tversion: 1,\n\t\t\tadditionalData: {\n\t\t\t\tfoo: 'bar'\n\t\t\t}\n\t\t}));\n\t\tassert.deepStrictEqual(actual, {\n\t\t\tref: '1',\n\t\t\tversion: 1,\n\t\t\tsyncData: {\n\t\t\t\tcontent: '0',\n\t\t\t\tmachineId,\n\t\t\t\tversion: 1\n\t\t\t},\n\t\t\tadditionalData: {\n\t\t\t\tfoo: 'bar'\n\t\t\t}\n\t\t});\n\t}));\n});\n\nfunction assertConflicts(actual: IBaseResourcePreview[], expected: URI[]) {\n\tassert.deepStrictEqual(actual.map(({ localResource }) => localResource.toString()), expected.map(uri => uri.toString()));\n}\n\nfunction assertPreviews(actual: IBaseResourcePreview[], expected: URI[]) {\n\tassert.deepStrictEqual(actual.map(({ localResource }) => localResource.toString()), expected.map(uri => uri.toString()));\n}\n"]}