{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataSync/common/userDataSyncLocalStoreService.ts"],"names":[],"mappings":"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","file":"userDataSyncLocalStoreService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { FileOperationResult, IFileService, IFileStat, toFileOperationResult } from 'vs/platform/files/common/files';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { ALL_SYNC_RESOURCES, IResourceRefHandle, IUserDataSyncLocalStoreService, IUserDataSyncLogService, SyncResource } from 'vs/platform/userDataSync/common/userDataSync';\n\nexport class UserDataSyncLocalStoreService extends Disposable implements IUserDataSyncLocalStoreService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\t\tthis.cleanUp();\n\t}\n\n\tprivate async cleanUp(): Promise<void> {\n\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\tfor (const resource of ALL_SYNC_RESOURCES) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.cleanUpBackup(this.getResourceBackupHome(resource, profile.isDefault ? undefined : profile.id));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet stat: IFileStat;\n\t\ttry {\n\t\t\tstat = await this.fileService.resolve(this.environmentService.userDataSyncHome);\n\t\t} catch (error) {\n\t\t\tif (toFileOperationResult(error) !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (stat.children) {\n\t\t\tfor (const child of stat.children) {\n\t\t\t\tif (child.isDirectory && !this.userDataProfilesService.profiles.some(profile => profile.id === child.name)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.logService.info('Deleting non existing profile from backup', child.resource.path);\n\t\t\t\t\t\tawait this.fileService.del(child.resource, { recursive: true });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getAllResourceRefs(resource: SyncResource, collection?: string, root?: URI): Promise<IResourceRefHandle[]> {\n\t\tconst folder = this.getResourceBackupHome(resource, collection, root);\n\t\ttry {\n\t\t\tconst stat = await this.fileService.resolve(folder);\n\t\t\tif (stat.children) {\n\t\t\t\tconst all = stat.children.filter(stat => stat.isFile && !stat.name.startsWith('lastSync')).sort().reverse();\n\t\t\t\treturn all.map(stat => ({\n\t\t\t\t\tref: stat.name,\n\t\t\t\t\tcreated: this.getCreationTime(stat)\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (toFileOperationResult(error) !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync resolveResourceContent(resourceKey: SyncResource, ref: string, collection?: string, root?: URI): Promise<string | null> {\n\t\tconst folder = this.getResourceBackupHome(resourceKey, collection, root);\n\t\tconst file = joinPath(folder, ref);\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(file);\n\t\t\treturn content.value.toString();\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tasync writeResource(resourceKey: SyncResource, content: string, cTime: Date, collection?: string, root?: URI): Promise<void> {\n\t\tconst folder = this.getResourceBackupHome(resourceKey, collection, root);\n\t\tconst resource = joinPath(folder, `${toLocalISOString(cTime).replace(/-|:|\\.\\d+Z$/g, '')}.json`);\n\t\ttry {\n\t\t\tawait this.fileService.writeFile(resource, VSBuffer.fromString(content));\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getResourceBackupHome(resource: SyncResource, collection?: string, root: URI = this.environmentService.userDataSyncHome): URI {\n\t\treturn joinPath(root, ...(collection ? [collection, resource] : [resource]));\n\t}\n\n\tprivate async cleanUpBackup(folder: URI): Promise<void> {\n\t\ttry {\n\t\t\ttry {\n\t\t\t\tif (!(await this.fileService.exists(folder))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst stat = await this.fileService.resolve(folder);\n\t\t\tif (stat.children) {\n\t\t\t\tconst all = stat.children.filter(stat => stat.isFile && /^\\d{8}T\\d{6}(\\.json)?$/.test(stat.name)).sort();\n\t\t\t\tconst backUpMaxAge = 1000 * 60 * 60 * 24 * (this.configurationService.getValue<number>('sync.localBackupDuration') || 30 /* Default 30 days */);\n\t\t\t\tlet toDelete = all.filter(stat => Date.now() - this.getCreationTime(stat) > backUpMaxAge);\n\t\t\t\tconst remaining = all.length - toDelete.length;\n\t\t\t\tif (remaining < 10) {\n\t\t\t\t\ttoDelete = toDelete.slice(10 - remaining);\n\t\t\t\t}\n\t\t\t\tawait Promises.settled(toDelete.map(async stat => {\n\t\t\t\t\tthis.logService.info('Deleting from backup', stat.resource.path);\n\t\t\t\t\tawait this.fileService.del(stat.resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getCreationTime(stat: IFileStat) {\n\t\treturn new Date(\n\t\t\tparseInt(stat.name.substring(0, 4)),\n\t\t\tparseInt(stat.name.substring(4, 6)) - 1,\n\t\t\tparseInt(stat.name.substring(6, 8)),\n\t\t\tparseInt(stat.name.substring(9, 11)),\n\t\t\tparseInt(stat.name.substring(11, 13)),\n\t\t\tparseInt(stat.name.substring(13, 15))\n\t\t).getTime();\n\t}\n}\n"]}