{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataSync/common/extensionsSync.ts"],"names":[],"mappings":"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","file":"extensionsSync.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Event } from 'vs/base/common/event';\nimport { toFormattedString } from 'vs/base/common/jsonFormatter';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { compare } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { GlobalExtensionEnablementService } from 'vs/platform/extensionManagement/common/extensionEnablementService';\nimport { IExtensionGalleryService, IExtensionManagementService, IGlobalExtensionEnablementService, ILocalExtension, ExtensionManagementError, ExtensionManagementErrorCode, IGalleryExtension, DISABLED_EXTENSIONS_STORAGE_PATH, EXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT, EXTENSION_INSTALL_SYNC_CONTEXT, InstallExtensionInfo } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionStorageService, IExtensionStorageService } from 'vs/platform/extensionManagement/common/extensionStorage';\nimport { ExtensionType, IExtensionIdentifier, isApplicationScopedExtension } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IUserDataProfile, IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { AbstractInitializer, AbstractSynchroniser, getSyncResourceLogLabel, IAcceptResult, IMergeResult, IResourcePreview } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { IMergeResult as IExtensionMergeResult, merge } from 'vs/platform/userDataSync/common/extensionsMerge';\nimport { IIgnoredExtensionsManagementService } from 'vs/platform/userDataSync/common/ignoredExtensions';\nimport { Change, IRemoteUserData, ISyncData, ISyncExtension, IUserDataSyncLocalStoreService, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncEnablementService, IUserDataSyncStoreService, SyncResource, USER_DATA_SYNC_SCHEME, ILocalSyncExtension } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IUserDataProfileStorageService } from 'vs/platform/userDataProfile/common/userDataProfileStorageService';\n\ntype IExtensionResourceMergeResult = IAcceptResult & IExtensionMergeResult;\n\ninterface IExtensionResourcePreview extends IResourcePreview {\n\treadonly localExtensions: ILocalSyncExtension[];\n\treadonly remoteExtensions: ISyncExtension[] | null;\n\treadonly skippedExtensions: ISyncExtension[];\n\treadonly builtinExtensions: IExtensionIdentifier[] | null;\n\treadonly previewResult: IExtensionResourceMergeResult;\n}\n\ninterface ILastSyncUserData extends IRemoteUserData {\n\tskippedExtensions: ISyncExtension[] | undefined;\n\tbuiltinExtensions: IExtensionIdentifier[] | undefined;\n}\n\nasync function parseAndMigrateExtensions(syncData: ISyncData, extensionManagementService: IExtensionManagementService): Promise<ISyncExtension[]> {\n\tconst extensions = JSON.parse(syncData.content);\n\tif (syncData.version === 1\n\t\t|| syncData.version === 2\n\t) {\n\t\tconst builtinExtensions = (await extensionManagementService.getInstalled(ExtensionType.System)).filter(e => e.isBuiltin);\n\t\tfor (const extension of extensions) {\n\t\t\t// #region Migration from v1 (enabled -> disabled)\n\t\t\tif (syncData.version === 1) {\n\t\t\t\tif ((<any>extension).enabled === false) {\n\t\t\t\t\textension.disabled = true;\n\t\t\t\t}\n\t\t\t\tdelete (<any>extension).enabled;\n\t\t\t}\n\t\t\t// #endregion\n\n\t\t\t// #region Migration from v2 (set installed property on extension)\n\t\t\tif (syncData.version === 2) {\n\t\t\t\tif (builtinExtensions.every(installed => !areSameExtensions(installed.identifier, extension.identifier))) {\n\t\t\t\t\textension.installed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// #endregion\n\t\t}\n\t}\n\treturn extensions;\n}\n\nexport function parseExtensions(syncData: ISyncData): ISyncExtension[] {\n\treturn JSON.parse(syncData.content);\n}\n\nexport function stringify(extensions: ISyncExtension[], format: boolean): string {\n\textensions.sort((e1, e2) => {\n\t\tif (!e1.identifier.uuid && e2.identifier.uuid) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (e1.identifier.uuid && !e2.identifier.uuid) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn compare(e1.identifier.id, e2.identifier.id);\n\t});\n\treturn format ? toFormattedString(extensions, {}) : JSON.stringify(extensions);\n}\n\nexport class ExtensionsSynchroniser extends AbstractSynchroniser implements IUserDataSynchroniser {\n\n\t/*\n\t\tVersion 3 - Introduce installed property to skip installing built in extensions\n\t\tprotected readonly version: number = 3;\n\t*/\n\t/* Version 4: Change settings from `sync.${setting}` to `settingsSync.{setting}` */\n\t/* Version 5: Introduce extension state */\n\t/* Version 6: Added isApplicationScoped property */\n\tprotected readonly version: number = 6;\n\n\tprivate readonly previewResource: URI = this.extUri.joinPath(this.syncPreviewFolder, 'extensions.json');\n\tprivate readonly baseResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'base' });\n\tprivate readonly localResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' });\n\tprivate readonly remoteResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' });\n\tprivate readonly acceptedResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\tprivate readonly localExtensionsProvider: LocalExtensionsProvider;\n\n\tconstructor(\n\t\t// profileLocation changes for default profile\n\t\tprofile: IUserDataProfile,\n\t\tcollection: string | undefined,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IIgnoredExtensionsManagementService private readonly ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncEnablementService userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IExtensionStorageService extensionStorageService: IExtensionStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IUserDataProfileStorageService userDataProfileStorageService: IUserDataProfileStorageService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper({ syncResource: SyncResource.Extensions, profile }, collection, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncLocalStoreService, userDataSyncEnablementService, telemetryService, logService, configurationService, uriIdentityService);\n\t\tthis.localExtensionsProvider = this.instantiationService.createInstance(LocalExtensionsProvider);\n\t\tthis._register(\n\t\t\tEvent.any<any>(\n\t\t\t\tEvent.filter(this.extensionManagementService.onDidInstallExtensions, (e => e.some(({ local }) => !!local))),\n\t\t\t\tEvent.filter(this.extensionManagementService.onDidUninstallExtension, (e => !e.error)),\n\t\t\t\tEvent.filter(userDataProfileStorageService.onDidChange, e => e.valueChanges.some(({ profile, changes }) => this.syncResource.profile.id === profile.id && changes.some(change => change.key === DISABLED_EXTENSIONS_STORAGE_PATH))),\n\t\t\t\textensionStorageService.onDidChangeExtensionStorageToSync)(() => this.triggerLocalChange()));\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: ILastSyncUserData | null): Promise<IExtensionResourcePreview[]> {\n\t\tconst remoteExtensions = remoteUserData.syncData ? await parseAndMigrateExtensions(remoteUserData.syncData, this.extensionManagementService) : null;\n\t\tconst skippedExtensions = lastSyncUserData?.skippedExtensions ?? [];\n\t\tconst builtinExtensions = lastSyncUserData?.builtinExtensions ?? null;\n\t\tconst lastSyncExtensions = lastSyncUserData?.syncData ? await parseAndMigrateExtensions(lastSyncUserData.syncData, this.extensionManagementService) : null;\n\n\t\tconst { localExtensions, ignoredExtensions } = await this.localExtensionsProvider.getLocalExtensions(this.syncResource.profile);\n\n\t\tif (remoteExtensions) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Merging remote extensions with local extensions...`);\n\t\t} else {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Remote extensions does not exist. Synchronizing extensions for the first time.`);\n\t\t}\n\n\t\tconst { local, remote } = merge(localExtensions, remoteExtensions, lastSyncExtensions, skippedExtensions, ignoredExtensions, builtinExtensions);\n\t\tconst previewResult: IExtensionResourceMergeResult = {\n\t\t\tlocal, remote,\n\t\t\tcontent: this.getPreviewContent(localExtensions, local.added, local.updated, local.removed),\n\t\t\tlocalChange: local.added.length > 0 || local.removed.length > 0 || local.updated.length > 0 ? Change.Modified : Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\n\t\tconst localContent = this.stringify(localExtensions, false);\n\t\treturn [{\n\t\t\tskippedExtensions,\n\t\t\tbuiltinExtensions,\n\t\t\tbaseResource: this.baseResource,\n\t\t\tbaseContent: lastSyncExtensions ? this.stringify(lastSyncExtensions, false) : localContent,\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent,\n\t\t\tlocalExtensions,\n\t\t\tremoteResource: this.remoteResource,\n\t\t\tremoteExtensions,\n\t\t\tremoteContent: remoteExtensions ? this.stringify(remoteExtensions, false) : null,\n\t\t\tpreviewResource: this.previewResource,\n\t\t\tpreviewResult,\n\t\t\tlocalChange: previewResult.localChange,\n\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\tacceptedResource: this.acceptedResource,\n\t\t}];\n\t}\n\n\tprotected async hasRemoteChanged(lastSyncUserData: ILastSyncUserData): Promise<boolean> {\n\t\tconst lastSyncExtensions: ISyncExtension[] | null = lastSyncUserData.syncData ? await parseAndMigrateExtensions(lastSyncUserData.syncData, this.extensionManagementService) : null;\n\t\tconst { localExtensions, ignoredExtensions } = await this.localExtensionsProvider.getLocalExtensions(this.syncResource.profile);\n\t\tconst { remote } = merge(localExtensions, lastSyncExtensions, lastSyncExtensions, lastSyncUserData.skippedExtensions || [], ignoredExtensions, lastSyncUserData.builtinExtensions || []);\n\t\treturn remote !== null;\n\t}\n\n\tprivate getPreviewContent(localExtensions: ISyncExtension[], added: ISyncExtension[], updated: ISyncExtension[], removed: IExtensionIdentifier[]): string {\n\t\tconst preview: ISyncExtension[] = [...added, ...updated];\n\n\t\tconst idsOrUUIDs: Set<string> = new Set<string>();\n\t\tconst addIdentifier = (identifier: IExtensionIdentifier) => {\n\t\t\tidsOrUUIDs.add(identifier.id.toLowerCase());\n\t\t\tif (identifier.uuid) {\n\t\t\t\tidsOrUUIDs.add(identifier.uuid);\n\t\t\t}\n\t\t};\n\t\tpreview.forEach(({ identifier }) => addIdentifier(identifier));\n\t\tremoved.forEach(addIdentifier);\n\n\t\tfor (const localExtension of localExtensions) {\n\t\t\tif (idsOrUUIDs.has(localExtension.identifier.id.toLowerCase()) || (localExtension.identifier.uuid && idsOrUUIDs.has(localExtension.identifier.uuid))) {\n\t\t\t\t// skip\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreview.push(localExtension);\n\t\t}\n\n\t\treturn this.stringify(preview, false);\n\t}\n\n\tprotected async getMergeResult(resourcePreview: IExtensionResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\treturn { ...resourcePreview.previewResult, hasConflicts: false };\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: IExtensionResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IExtensionResourceMergeResult> {\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn this.acceptLocal(resourcePreview);\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn this.acceptRemote(resourcePreview);\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\treturn resourcePreview.previewResult;\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprivate async acceptLocal(resourcePreview: IExtensionResourcePreview): Promise<IExtensionResourceMergeResult> {\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(undefined, this.syncResource.profile.extensionsResource);\n\t\tconst ignoredExtensions = this.ignoredExtensionsManagementService.getIgnoredExtensions(installedExtensions);\n\t\tconst mergeResult = merge(resourcePreview.localExtensions, null, null, resourcePreview.skippedExtensions, ignoredExtensions, resourcePreview.builtinExtensions);\n\t\tconst { local, remote } = mergeResult;\n\t\treturn {\n\t\t\tcontent: resourcePreview.localContent,\n\t\t\tlocal,\n\t\t\tremote,\n\t\t\tlocalChange: local.added.length > 0 || local.removed.length > 0 || local.updated.length > 0 ? Change.Modified : Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\t}\n\n\tprivate async acceptRemote(resourcePreview: IExtensionResourcePreview): Promise<IExtensionResourceMergeResult> {\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(undefined, this.syncResource.profile.extensionsResource);\n\t\tconst ignoredExtensions = this.ignoredExtensionsManagementService.getIgnoredExtensions(installedExtensions);\n\t\tconst remoteExtensions = resourcePreview.remoteContent ? JSON.parse(resourcePreview.remoteContent) : null;\n\t\tif (remoteExtensions !== null) {\n\t\t\tconst mergeResult = merge(resourcePreview.localExtensions, remoteExtensions, resourcePreview.localExtensions, [], ignoredExtensions, resourcePreview.builtinExtensions);\n\t\t\tconst { local, remote } = mergeResult;\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocal,\n\t\t\t\tremote,\n\t\t\t\tlocalChange: local.added.length > 0 || local.removed.length > 0 || local.updated.length > 0 ? Change.Modified : Change.None,\n\t\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocal: { added: [], removed: [], updated: [] },\n\t\t\t\tremote: null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [IExtensionResourcePreview, IExtensionResourceMergeResult][], force: boolean): Promise<void> {\n\t\tlet { skippedExtensions, builtinExtensions, localExtensions } = resourcePreviews[0][0];\n\t\tconst { local, remote, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing extensions.`);\n\t\t}\n\n\t\tif (localChange !== Change.None) {\n\t\t\tawait this.backupLocal(JSON.stringify(localExtensions));\n\t\t\tskippedExtensions = await this.localExtensionsProvider.updateLocalExtensions(local.added, local.removed, local.updated, skippedExtensions, this.syncResource.profile);\n\t\t}\n\n\t\tif (remote) {\n\t\t\t// update remote\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote extensions...`);\n\t\t\tconst content = JSON.stringify(remote.all);\n\t\t\tremoteUserData = await this.updateRemoteUserData(content, force ? null : remoteUserData.ref);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote extensions.${remote.added.length ? ` Added: ${JSON.stringify(remote.added.map(e => e.identifier.id))}.` : ''}${remote.updated.length ? ` Updated: ${JSON.stringify(remote.updated.map(e => e.identifier.id))}.` : ''}${remote.removed.length ? ` Removed: ${JSON.stringify(remote.removed.map(e => e.identifier.id))}.` : ''}`);\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\t// update last sync\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized extensions...`);\n\t\t\tbuiltinExtensions = this.computeBuiltinExtensions(localExtensions, builtinExtensions);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData, { skippedExtensions, builtinExtensions });\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized extensions.${skippedExtensions.length ? ` Skipped: ${JSON.stringify(skippedExtensions.map(e => e.identifier.id))}.` : ''}`);\n\t\t}\n\t}\n\n\tprivate computeBuiltinExtensions(localExtensions: ILocalSyncExtension[], previousBuiltinExtensions: IExtensionIdentifier[] | null): IExtensionIdentifier[] {\n\t\tconst localExtensionsSet = new Set<string>();\n\t\tconst builtinExtensions: IExtensionIdentifier[] = [];\n\t\tfor (const localExtension of localExtensions) {\n\t\t\tlocalExtensionsSet.add(localExtension.identifier.id.toLowerCase());\n\t\t\tif (!localExtension.installed) {\n\t\t\t\tbuiltinExtensions.push(localExtension.identifier);\n\t\t\t}\n\t\t}\n\t\tif (previousBuiltinExtensions) {\n\t\t\tfor (const builtinExtension of previousBuiltinExtensions) {\n\t\t\t\t// Add previous builtin extension if it does not exist in local extensions\n\t\t\t\tif (!localExtensionsSet.has(builtinExtension.id.toLowerCase())) {\n\t\t\t\t\tbuiltinExtensions.push(builtinExtension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn builtinExtensions;\n\t}\n\n\tasync resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqual(this.remoteResource, uri)\n\t\t\t|| this.extUri.isEqual(this.baseResource, uri)\n\t\t\t|| this.extUri.isEqual(this.localResource, uri)\n\t\t\t|| this.extUri.isEqual(this.acceptedResource, uri)\n\t\t) {\n\t\t\tconst content = await this.resolvePreviewContent(uri);\n\t\t\treturn content ? this.stringify(JSON.parse(content), true) : content;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate stringify(extensions: ISyncExtension[], format: boolean): string {\n\t\treturn stringify(extensions, format);\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { localExtensions } = await this.localExtensionsProvider.getLocalExtensions(this.syncResource.profile);\n\t\t\tif (localExtensions.some(e => e.installed || e.disabled)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore error */\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nexport class LocalExtensionsProvider {\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IUserDataProfileStorageService private readonly userDataProfileStorageService: IUserDataProfileStorageService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IIgnoredExtensionsManagementService private readonly ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) { }\n\n\tasync getLocalExtensions(profile: IUserDataProfile): Promise<{ localExtensions: ILocalSyncExtension[]; ignoredExtensions: string[] }> {\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(undefined, profile.extensionsResource);\n\t\tconst ignoredExtensions = this.ignoredExtensionsManagementService.getIgnoredExtensions(installedExtensions);\n\t\tconst localExtensions = await this.withProfileScopedServices(profile, async (extensionEnablementService, extensionStorageService) => {\n\t\t\tconst disabledExtensions = extensionEnablementService.getDisabledExtensions();\n\t\t\treturn installedExtensions\n\t\t\t\t.map(extension => {\n\t\t\t\t\tconst { identifier, isBuiltin, manifest, preRelease, pinned, isApplicationScoped } = extension;\n\t\t\t\t\tconst syncExntesion: ILocalSyncExtension = { identifier, preRelease, version: manifest.version, pinned: !!pinned };\n\t\t\t\t\tif (isApplicationScoped && !isApplicationScopedExtension(manifest)) {\n\t\t\t\t\t\tsyncExntesion.isApplicationScoped = isApplicationScoped;\n\t\t\t\t\t}\n\t\t\t\t\tif (disabledExtensions.some(disabledExtension => areSameExtensions(disabledExtension, identifier))) {\n\t\t\t\t\t\tsyncExntesion.disabled = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!isBuiltin) {\n\t\t\t\t\t\tsyncExntesion.installed = true;\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst keys = extensionStorageService.getKeysForSync({ id: identifier.id, version: manifest.version });\n\t\t\t\t\t\tif (keys) {\n\t\t\t\t\t\t\tconst extensionStorageState = extensionStorageService.getExtensionState(extension, true) || {};\n\t\t\t\t\t\t\tsyncExntesion.state = Object.keys(extensionStorageState).reduce((state: IStringDictionary<any>, key) => {\n\t\t\t\t\t\t\t\tif (keys.includes(key)) {\n\t\t\t\t\t\t\t\t\tstate[key] = extensionStorageState[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn state;\n\t\t\t\t\t\t\t}, {});\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.info(`${getSyncResourceLogLabel(SyncResource.Extensions, profile)}: Error while parsing extension state`, getErrorMessage(error));\n\t\t\t\t\t}\n\t\t\t\t\treturn syncExntesion;\n\t\t\t\t});\n\t\t});\n\t\treturn { localExtensions, ignoredExtensions };\n\t}\n\n\tasync updateLocalExtensions(added: ISyncExtension[], removed: IExtensionIdentifier[], updated: ISyncExtension[], skippedExtensions: ISyncExtension[], profile: IUserDataProfile): Promise<ISyncExtension[]> {\n\t\tconst syncResourceLogLabel = getSyncResourceLogLabel(SyncResource.Extensions, profile);\n\t\tconst extensionsToInstall: InstallExtensionInfo[] = [];\n\t\tconst syncExtensionsToInstall = new Map<string, ISyncExtension>();\n\t\tconst removeFromSkipped: IExtensionIdentifier[] = [];\n\t\tconst addToSkipped: ISyncExtension[] = [];\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(undefined, profile.extensionsResource);\n\n\t\t// 1. Sync extensions state first so that the storage is flushed and updated in all opened windows\n\t\tif (added.length || updated.length) {\n\t\t\tawait this.withProfileScopedServices(profile, async (extensionEnablementService, extensionStorageService) => {\n\t\t\t\tawait Promises.settled([...added, ...updated].map(async e => {\n\t\t\t\t\tconst installedExtension = installedExtensions.find(installed => areSameExtensions(installed.identifier, e.identifier));\n\n\t\t\t\t\t// Builtin Extension Sync: Enablement & State\n\t\t\t\t\tif (installedExtension && installedExtension.isBuiltin) {\n\t\t\t\t\t\tif (e.state && installedExtension.manifest.version === e.version) {\n\t\t\t\t\t\t\tthis.updateExtensionState(e.state, installedExtension, installedExtension.manifest.version, extensionStorageService);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst isDisabled = extensionEnablementService.getDisabledExtensions().some(disabledExtension => areSameExtensions(disabledExtension, e.identifier));\n\t\t\t\t\t\tif (isDisabled !== !!e.disabled) {\n\t\t\t\t\t\t\tif (e.disabled) {\n\t\t\t\t\t\t\t\tthis.logService.trace(`${syncResourceLogLabel}: Disabling extension...`, e.identifier.id);\n\t\t\t\t\t\t\t\tawait extensionEnablementService.disableExtension(e.identifier);\n\t\t\t\t\t\t\t\tthis.logService.info(`${syncResourceLogLabel}: Disabled extension`, e.identifier.id);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.logService.trace(`${syncResourceLogLabel}: Enabling extension...`, e.identifier.id);\n\t\t\t\t\t\t\t\tawait extensionEnablementService.enableExtension(e.identifier);\n\t\t\t\t\t\t\t\tthis.logService.info(`${syncResourceLogLabel}: Enabled extension`, e.identifier.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveFromSkipped.push(e.identifier);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// User Extension Sync: Install/Update, Enablement & State\n\t\t\t\t\tconst version = e.pinned ? e.version : undefined;\n\t\t\t\t\tconst extension = (await this.extensionGalleryService.getExtensions([{ ...e.identifier, version, preRelease: version ? undefined : e.preRelease }], CancellationToken.None))[0];\n\n\t\t\t\t\t/* Update extension state only if\n\t\t\t\t\t *\textension is installed and version is same as synced version or\n\t\t\t\t\t *\textension is not installed and installable\n\t\t\t\t\t */\n\t\t\t\t\tif (e.state &&\n\t\t\t\t\t\t(installedExtension ? installedExtension.manifest.version === e.version /* Installed and remote has same version */\n\t\t\t\t\t\t\t: !!extension /* Installable */)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.updateExtensionState(e.state, installedExtension || extension, installedExtension?.manifest.version, extensionStorageService);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst isDisabled = extensionEnablementService.getDisabledExtensions().some(disabledExtension => areSameExtensions(disabledExtension, e.identifier));\n\t\t\t\t\t\t\tif (isDisabled !== !!e.disabled) {\n\t\t\t\t\t\t\t\tif (e.disabled) {\n\t\t\t\t\t\t\t\t\tthis.logService.trace(`${syncResourceLogLabel}: Disabling extension...`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\t\t\tawait extensionEnablementService.disableExtension(extension.identifier);\n\t\t\t\t\t\t\t\t\tthis.logService.info(`${syncResourceLogLabel}: Disabled extension`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.logService.trace(`${syncResourceLogLabel}: Enabling extension...`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\t\t\tawait extensionEnablementService.enableExtension(extension.identifier);\n\t\t\t\t\t\t\t\t\tthis.logService.info(`${syncResourceLogLabel}: Enabled extension`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!installedExtension // Install if the extension does not exist\n\t\t\t\t\t\t\t\t|| installedExtension.preRelease !== e.preRelease // Install if the extension pre-release preference has changed\n\t\t\t\t\t\t\t\t|| installedExtension.pinned !== e.pinned  // Install if the extension pinned preference has changed\n\t\t\t\t\t\t\t\t|| (version && installedExtension.manifest.version !== version)  // Install if the extension version has changed\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (await this.extensionManagementService.canInstall(extension)) {\n\t\t\t\t\t\t\t\t\textensionsToInstall.push({\n\t\t\t\t\t\t\t\t\t\textension, options: {\n\t\t\t\t\t\t\t\t\t\t\tisMachineScoped: false /* set isMachineScoped value to prevent install and sync dialog in web */,\n\t\t\t\t\t\t\t\t\t\t\tdonotIncludePackAndDependencies: true,\n\t\t\t\t\t\t\t\t\t\t\tinstallGivenVersion: e.pinned && !!e.version,\n\t\t\t\t\t\t\t\t\t\t\tinstallPreReleaseVersion: e.preRelease,\n\t\t\t\t\t\t\t\t\t\t\tprofileLocation: profile.extensionsResource,\n\t\t\t\t\t\t\t\t\t\t\tisApplicationScoped: e.isApplicationScoped,\n\t\t\t\t\t\t\t\t\t\t\tcontext: { [EXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT]: true, [EXTENSION_INSTALL_SYNC_CONTEXT]: true }\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsyncExtensionsToInstall.set(extension.identifier.id.toLowerCase(), e);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.logService.info(`${syncResourceLogLabel}: Skipped synchronizing extension because it cannot be installed.`, extension.displayName || extension.identifier.id);\n\t\t\t\t\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\t\t\tthis.logService.info(`${syncResourceLogLabel}: Skipped synchronizing extension`, extension.displayName || extension.identifier.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t\t\tthis.logService.info(`${syncResourceLogLabel}: Skipped synchronizing extension because the extension is not found.`, e.identifier.id);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\n\t\t// 2. Next uninstall the removed extensions\n\t\tif (removed.length) {\n\t\t\tconst extensionsToRemove = installedExtensions.filter(({ identifier, isBuiltin }) => !isBuiltin && removed.some(r => areSameExtensions(identifier, r)));\n\t\t\tawait Promises.settled(extensionsToRemove.map(async extensionToRemove => {\n\t\t\t\tthis.logService.trace(`${syncResourceLogLabel}: Uninstalling local extension...`, extensionToRemove.identifier.id);\n\t\t\t\tawait this.extensionManagementService.uninstall(extensionToRemove, { donotIncludePack: true, donotCheckDependents: true, profileLocation: profile.extensionsResource });\n\t\t\t\tthis.logService.info(`${syncResourceLogLabel}: Uninstalled local extension.`, extensionToRemove.identifier.id);\n\t\t\t\tremoveFromSkipped.push(extensionToRemove.identifier);\n\t\t\t}));\n\t\t}\n\n\t\t// 3. Install extensions at the end\n\t\tconst results = await this.extensionManagementService.installGalleryExtensions(extensionsToInstall);\n\t\tfor (const { identifier, local, error, source } of results) {\n\t\t\tconst gallery = source as IGalleryExtension;\n\t\t\tif (local) {\n\t\t\t\tthis.logService.info(`${syncResourceLogLabel}: Installed extension.`, identifier.id, gallery.version);\n\t\t\t\tremoveFromSkipped.push(identifier);\n\t\t\t} else {\n\t\t\t\tconst e = syncExtensionsToInstall.get(identifier.id.toLowerCase());\n\t\t\t\tif (e) {\n\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t\tthis.logService.info(`${syncResourceLogLabel}: Skipped synchronizing extension`, gallery.displayName || gallery.identifier.id);\n\t\t\t\t}\n\t\t\t\tif (error instanceof ExtensionManagementError && [ExtensionManagementErrorCode.Incompatible, ExtensionManagementErrorCode.IncompatibleTargetPlatform].includes(error.code)) {\n\t\t\t\t\tthis.logService.info(`${syncResourceLogLabel}: Skipped synchronizing extension because the compatible extension is not found.`, gallery.displayName || gallery.identifier.id);\n\t\t\t\t} else if (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst newSkippedExtensions: ISyncExtension[] = [];\n\t\tfor (const skippedExtension of skippedExtensions) {\n\t\t\tif (!removeFromSkipped.some(e => areSameExtensions(e, skippedExtension.identifier))) {\n\t\t\t\tnewSkippedExtensions.push(skippedExtension);\n\t\t\t}\n\t\t}\n\t\tfor (const skippedExtension of addToSkipped) {\n\t\t\tif (!newSkippedExtensions.some(e => areSameExtensions(e.identifier, skippedExtension.identifier))) {\n\t\t\t\tnewSkippedExtensions.push(skippedExtension);\n\t\t\t}\n\t\t}\n\t\treturn newSkippedExtensions;\n\t}\n\n\tprivate updateExtensionState(state: IStringDictionary<any>, extension: ILocalExtension | IGalleryExtension, version: string | undefined, extensionStorageService: IExtensionStorageService): void {\n\t\tconst extensionState = extensionStorageService.getExtensionState(extension, true) || {};\n\t\tconst keys = version ? extensionStorageService.getKeysForSync({ id: extension.identifier.id, version }) : undefined;\n\t\tif (keys) {\n\t\t\tkeys.forEach(key => { extensionState[key] = state[key]; });\n\t\t} else {\n\t\t\tObject.keys(state).forEach(key => extensionState[key] = state[key]);\n\t\t}\n\t\textensionStorageService.setExtensionState(extension, extensionState, true);\n\t}\n\n\tprivate async withProfileScopedServices<T>(profile: IUserDataProfile, fn: (extensionEnablementService: IGlobalExtensionEnablementService, extensionStorageService: IExtensionStorageService) => Promise<T>): Promise<T> {\n\t\treturn this.userDataProfileStorageService.withProfileScopedStorageService(profile,\n\t\t\tasync storageService => {\n\t\t\t\tconst disposables = new DisposableStore();\n\t\t\t\tconst instantiationService = this.instantiationService.createChild(new ServiceCollection([IStorageService, storageService]));\n\t\t\t\tconst extensionEnablementService = disposables.add(instantiationService.createInstance(GlobalExtensionEnablementService));\n\t\t\t\tconst extensionStorageService = disposables.add(instantiationService.createInstance(ExtensionStorageService));\n\t\t\t\ttry {\n\t\t\t\t\treturn await fn(extensionEnablementService, extensionStorageService);\n\t\t\t\t} finally {\n\t\t\t\t\tdisposables.dispose();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n\nexport interface IExtensionsInitializerPreviewResult {\n\treadonly installedExtensions: ILocalExtension[];\n\treadonly disabledExtensions: IExtensionIdentifier[];\n\treadonly newExtensions: (IExtensionIdentifier & { preRelease: boolean })[];\n\treadonly remoteExtensions: ISyncExtension[];\n}\n\nexport abstract class AbstractExtensionsInitializer extends AbstractInitializer {\n\n\tconstructor(\n\t\t@IExtensionManagementService protected readonly extensionManagementService: IExtensionManagementService,\n\t\t@IIgnoredExtensionsManagementService private readonly ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService logService: ILogService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(SyncResource.Extensions, userDataProfilesService, environmentService, logService, fileService, storageService, uriIdentityService);\n\t}\n\n\tprotected async parseExtensions(remoteUserData: IRemoteUserData): Promise<ISyncExtension[] | null> {\n\t\treturn remoteUserData.syncData ? await parseAndMigrateExtensions(remoteUserData.syncData, this.extensionManagementService) : null;\n\t}\n\n\tprotected generatePreview(remoteExtensions: ISyncExtension[], localExtensions: ILocalExtension[]): IExtensionsInitializerPreviewResult {\n\t\tconst installedExtensions: ILocalExtension[] = [];\n\t\tconst newExtensions: (IExtensionIdentifier & { preRelease: boolean })[] = [];\n\t\tconst disabledExtensions: IExtensionIdentifier[] = [];\n\t\tfor (const extension of remoteExtensions) {\n\t\t\tif (this.ignoredExtensionsManagementService.hasToNeverSyncExtension(extension.identifier.id)) {\n\t\t\t\t// Skip extension ignored to sync\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst installedExtension = localExtensions.find(i => areSameExtensions(i.identifier, extension.identifier));\n\t\t\tif (installedExtension) {\n\t\t\t\tinstalledExtensions.push(installedExtension);\n\t\t\t\tif (extension.disabled) {\n\t\t\t\t\tdisabledExtensions.push(extension.identifier);\n\t\t\t\t}\n\t\t\t} else if (extension.installed) {\n\t\t\t\tnewExtensions.push({ ...extension.identifier, preRelease: !!extension.preRelease });\n\t\t\t\tif (extension.disabled) {\n\t\t\t\t\tdisabledExtensions.push(extension.identifier);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { installedExtensions, newExtensions, disabledExtensions, remoteExtensions };\n\t}\n\n}\n"]}