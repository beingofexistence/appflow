{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataSync/common/tasksSync.ts"],"names":[],"mappings":"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","file":"tasksSync.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IUserDataProfile, IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { AbstractFileSynchroniser, AbstractInitializer, IAcceptResult, IFileResourcePreview, IMergeResult } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { Change, IRemoteUserData, IUserDataSyncLocalStoreService, IUserDataSyncConfiguration, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncEnablementService, IUserDataSyncStoreService, SyncResource, USER_DATA_SYNC_SCHEME } from 'vs/platform/userDataSync/common/userDataSync';\n\ninterface ITasksSyncContent {\n\ttasks?: string;\n}\n\ninterface ITasksResourcePreview extends IFileResourcePreview {\n\tpreviewResult: IMergeResult;\n}\n\nexport function getTasksContentFromSyncContent(syncContent: string, logService: ILogService): string | null {\n\ttry {\n\t\tconst parsed = <ITasksSyncContent>JSON.parse(syncContent);\n\t\treturn parsed.tasks ?? null;\n\t} catch (e) {\n\t\tlogService.error(e);\n\t\treturn null;\n\t}\n}\n\nexport class TasksSynchroniser extends AbstractFileSynchroniser implements IUserDataSynchroniser {\n\n\tprotected readonly version: number = 1;\n\tprivate readonly previewResource: URI = this.extUri.joinPath(this.syncPreviewFolder, 'tasks.json');\n\tprivate readonly baseResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'base' });\n\tprivate readonly localResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' });\n\tprivate readonly remoteResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' });\n\tprivate readonly acceptedResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\tconstructor(\n\t\tprofile: IUserDataProfile,\n\t\tcollection: string | undefined,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncEnablementService userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(profile.tasksResource, { syncResource: SyncResource.Tasks, profile }, collection, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncLocalStoreService, userDataSyncEnablementService, telemetryService, logService, configurationService, uriIdentityService);\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, isRemoteDataFromCurrentMachine: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration): Promise<ITasksResourcePreview[]> {\n\t\tconst remoteContent = remoteUserData.syncData ? getTasksContentFromSyncContent(remoteUserData.syncData.content, this.logService) : null;\n\n\t\t// Use remote data as last sync data if last sync data does not exist and remote data is from same machine\n\t\tlastSyncUserData = lastSyncUserData === null && isRemoteDataFromCurrentMachine ? remoteUserData : lastSyncUserData;\n\t\tconst lastSyncContent: string | null = lastSyncUserData?.syncData ? getTasksContentFromSyncContent(lastSyncUserData.syncData.content, this.logService) : null;\n\n\t\t// Get file content last to get the latest\n\t\tconst fileContent = await this.getLocalFileContent();\n\n\t\tlet content: string | null = null;\n\t\tlet hasLocalChanged: boolean = false;\n\t\tlet hasRemoteChanged: boolean = false;\n\t\tlet hasConflicts: boolean = false;\n\n\t\tif (remoteUserData.syncData) {\n\t\t\tconst localContent = fileContent ? fileContent.value.toString() : null;\n\t\t\tif (!lastSyncContent // First time sync\n\t\t\t\t|| lastSyncContent !== localContent // Local has forwarded\n\t\t\t\t|| lastSyncContent !== remoteContent // Remote has forwarded\n\t\t\t) {\n\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Merging remote tasks with local tasks...`);\n\t\t\t\tconst result = merge(localContent, remoteContent, lastSyncContent);\n\t\t\t\tcontent = result.content;\n\t\t\t\thasConflicts = result.hasConflicts;\n\t\t\t\thasLocalChanged = result.hasLocalChanged;\n\t\t\t\thasRemoteChanged = result.hasRemoteChanged;\n\t\t\t}\n\t\t}\n\n\t\t// First time syncing to remote\n\t\telse if (fileContent) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Remote tasks does not exist. Synchronizing tasks for the first time.`);\n\t\t\tcontent = fileContent.value.toString();\n\t\t\thasRemoteChanged = true;\n\t\t}\n\n\t\tconst previewResult: IMergeResult = {\n\t\t\tcontent: hasConflicts ? lastSyncContent : content,\n\t\t\tlocalChange: hasLocalChanged ? fileContent ? Change.Modified : Change.Added : Change.None,\n\t\t\tremoteChange: hasRemoteChanged ? Change.Modified : Change.None,\n\t\t\thasConflicts\n\t\t};\n\n\t\tconst localContent = fileContent ? fileContent.value.toString() : null;\n\t\treturn [{\n\t\t\tfileContent,\n\n\t\t\tbaseResource: this.baseResource,\n\t\t\tbaseContent: lastSyncContent,\n\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent,\n\t\t\tlocalChange: previewResult.localChange,\n\n\t\t\tremoteResource: this.remoteResource,\n\t\t\tremoteContent,\n\t\t\tremoteChange: previewResult.remoteChange,\n\n\t\t\tpreviewResource: this.previewResource,\n\t\t\tpreviewResult,\n\t\t\tacceptedResource: this.acceptedResource,\n\t\t}];\n\n\t}\n\n\tprotected async hasRemoteChanged(lastSyncUserData: IRemoteUserData): Promise<boolean> {\n\t\tconst lastSyncContent: string | null = lastSyncUserData?.syncData ? getTasksContentFromSyncContent(lastSyncUserData.syncData.content, this.logService) : null;\n\t\tif (lastSyncContent === null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst fileContent = await this.getLocalFileContent();\n\t\tconst localContent = fileContent ? fileContent.value.toString() : null;\n\t\tconst result = merge(localContent, lastSyncContent, lastSyncContent);\n\t\treturn result.hasLocalChanged || result.hasRemoteChanged;\n\t}\n\n\tprotected async getMergeResult(resourcePreview: ITasksResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\treturn resourcePreview.previewResult;\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: ITasksResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult> {\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.fileContent ? resourcePreview.fileContent.value.toString() : null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Modified,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.previewResult.content,\n\t\t\t\t\tlocalChange: resourcePreview.previewResult.localChange,\n\t\t\t\t\tremoteChange: resourcePreview.previewResult.remoteChange,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tcontent,\n\t\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\t\tremoteChange: Change.Modified,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [ITasksResourcePreview, IAcceptResult][], force: boolean): Promise<void> {\n\t\tconst { fileContent } = resourcePreviews[0][0];\n\t\tconst { content, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing tasks.`);\n\t\t}\n\n\t\tif (localChange !== Change.None) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating local tasks...`);\n\t\t\tif (fileContent) {\n\t\t\t\tawait this.backupLocal(JSON.stringify(this.toTasksSyncContent(fileContent.value.toString())));\n\t\t\t}\n\t\t\tif (content) {\n\t\t\t\tawait this.updateLocalFileContent(content, fileContent, force);\n\t\t\t} else {\n\t\t\t\tawait this.deleteLocalFile();\n\t\t\t}\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated local tasks`);\n\t\t}\n\n\t\tif (remoteChange !== Change.None) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote tasks...`);\n\t\t\tconst remoteContents = JSON.stringify(this.toTasksSyncContent(content));\n\t\t\tremoteUserData = await this.updateRemoteUserData(remoteContents, force ? null : remoteUserData.ref);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote tasks`);\n\t\t}\n\n\t\t// Delete the preview\n\t\ttry {\n\t\t\tawait this.fileService.del(this.previewResource);\n\t\t} catch (e) { /* ignore */ }\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized tasks...`);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized tasks`);\n\t\t}\n\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\treturn this.fileService.exists(this.file);\n\t}\n\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqual(this.remoteResource, uri)\n\t\t\t|| this.extUri.isEqual(this.baseResource, uri)\n\t\t\t|| this.extUri.isEqual(this.localResource, uri)\n\t\t\t|| this.extUri.isEqual(this.acceptedResource, uri)\n\t\t) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate toTasksSyncContent(tasks: string | null): ITasksSyncContent {\n\t\treturn tasks ? { tasks } : {};\n\t}\n\n}\n\nexport class TasksInitializer extends AbstractInitializer {\n\n\tprivate tasksResource = this.userDataProfilesService.defaultProfile.tasksResource;\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(SyncResource.Tasks, userDataProfilesService, environmentService, logService, fileService, storageService, uriIdentityService);\n\t}\n\n\tprotected async doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst tasksContent = remoteUserData.syncData ? getTasksContentFromSyncContent(remoteUserData.syncData.content, this.logService) : null;\n\t\tif (!tasksContent) {\n\t\t\tthis.logService.info('Skipping initializing tasks because remote tasks does not exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmpty = await this.isEmpty();\n\t\tif (!isEmpty) {\n\t\t\tthis.logService.info('Skipping initializing tasks because local tasks exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.fileService.writeFile(this.tasksResource, VSBuffer.fromString(tasksContent));\n\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\tprivate async isEmpty(): Promise<boolean> {\n\t\treturn this.fileService.exists(this.tasksResource);\n\t}\n\n}\n\nfunction merge(originalLocalContent: string | null, originalRemoteContent: string | null, baseContent: string | null): {\n\tcontent: string | null;\n\thasLocalChanged: boolean;\n\thasRemoteChanged: boolean;\n\thasConflicts: boolean;\n} {\n\n\t/* no changes */\n\tif (originalLocalContent === null && originalRemoteContent === null && baseContent === null) {\n\t\treturn { content: null, hasLocalChanged: false, hasRemoteChanged: false, hasConflicts: false };\n\t}\n\n\t/* no changes */\n\tif (originalLocalContent === originalRemoteContent) {\n\t\treturn { content: null, hasLocalChanged: false, hasRemoteChanged: false, hasConflicts: false };\n\t}\n\n\tconst localForwarded = baseContent !== originalLocalContent;\n\tconst remoteForwarded = baseContent !== originalRemoteContent;\n\n\t/* no changes */\n\tif (!localForwarded && !remoteForwarded) {\n\t\treturn { content: null, hasLocalChanged: false, hasRemoteChanged: false, hasConflicts: false };\n\t}\n\n\t/* local has changed and remote has not */\n\tif (localForwarded && !remoteForwarded) {\n\t\treturn { content: originalLocalContent, hasRemoteChanged: true, hasLocalChanged: false, hasConflicts: false };\n\t}\n\n\t/* remote has changed and local has not */\n\tif (remoteForwarded && !localForwarded) {\n\t\treturn { content: originalRemoteContent, hasLocalChanged: true, hasRemoteChanged: false, hasConflicts: false };\n\t}\n\n\treturn { content: originalLocalContent, hasLocalChanged: true, hasRemoteChanged: true, hasConflicts: true };\n}\n"]}