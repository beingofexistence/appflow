{"version":3,"sources":["vs/platform/userDataSync/common/settingsSync.ts"],"names":[],"mappings":"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","file":"settingsSync.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationModelParser } from 'vs/platform/configuration/common/configurationModels';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { FileOperationError, FileOperationResult, IFileService } from 'vs/platform/files/common/files';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IUserDataProfile, IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { AbstractInitializer, AbstractJsonFileSynchroniser, IAcceptResult, IFileResourcePreview, IMergeResult } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { getIgnoredSettings, isEmpty, merge, updateIgnoredSettings } from 'vs/platform/userDataSync/common/settingsMerge';\nimport { Change, IRemoteUserData, IUserDataSyncLocalStoreService, IUserDataSyncConfiguration, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncEnablementService, IUserDataSyncStoreService, IUserDataSyncUtilService, SyncResource, UserDataSyncError, UserDataSyncErrorCode, USER_DATA_SYNC_CONFIGURATION_SCOPE, USER_DATA_SYNC_SCHEME, IUserDataResourceManifest } from 'vs/platform/userDataSync/common/userDataSync';\n\ninterface ISettingsResourcePreview extends IFileResourcePreview {\n\tpreviewResult: IMergeResult;\n}\n\nexport interface ISettingsSyncContent {\n\tsettings: string;\n}\n\nfunction isSettingsSyncContent(thing: any): thing is ISettingsSyncContent {\n\treturn thing\n\t\t&& (thing.settings && typeof thing.settings === 'string')\n\t\t&& Object.keys(thing).length === 1;\n}\n\nexport function parseSettingsSyncContent(syncContent: string): ISettingsSyncContent {\n\tconst parsed = <ISettingsSyncContent>JSON.parse(syncContent);\n\treturn isSettingsSyncContent(parsed) ? parsed : /* migrate */ { settings: syncContent };\n}\n\nexport class SettingsSynchroniser extends AbstractJsonFileSynchroniser implements IUserDataSynchroniser {\n\n\t/* Version 2: Change settings from `sync.${setting}` to `settingsSync.{setting}` */\n\tprotected readonly version: number = 2;\n\treadonly previewResource: URI = this.extUri.joinPath(this.syncPreviewFolder, 'settings.json');\n\treadonly baseResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'base' });\n\treadonly localResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' });\n\treadonly remoteResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' });\n\treadonly acceptedResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\tconstructor(\n\t\tprofile: IUserDataProfile,\n\t\tcollection: string | undefined,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUserDataSyncUtilService userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncEnablementService userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(profile.settingsResource, { syncResource: SyncResource.Settings, profile }, collection, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncLocalStoreService, userDataSyncEnablementService, telemetryService, logService, userDataSyncUtilService, configurationService, uriIdentityService);\n\t}\n\n\tasync getRemoteUserDataSyncConfiguration(manifest: IUserDataResourceManifest | null): Promise<IUserDataSyncConfiguration> {\n\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\tconst remoteUserData = await this.getLatestRemoteUserData(manifest, lastSyncUserData);\n\t\tconst remoteSettingsSyncContent = this.getSettingsSyncContent(remoteUserData);\n\t\tconst parser = new ConfigurationModelParser(USER_DATA_SYNC_CONFIGURATION_SCOPE);\n\t\tif (remoteSettingsSyncContent?.settings) {\n\t\t\tparser.parse(remoteSettingsSyncContent.settings);\n\t\t}\n\t\treturn parser.configurationModel.getValue(USER_DATA_SYNC_CONFIGURATION_SCOPE) || {};\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, isRemoteDataFromCurrentMachine: boolean): Promise<ISettingsResourcePreview[]> {\n\t\tconst fileContent = await this.getLocalFileContent();\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\tconst remoteSettingsSyncContent = this.getSettingsSyncContent(remoteUserData);\n\n\t\t// Use remote data as last sync data if last sync data does not exist and remote data is from same machine\n\t\tlastSyncUserData = lastSyncUserData === null && isRemoteDataFromCurrentMachine ? remoteUserData : lastSyncUserData;\n\t\tconst lastSettingsSyncContent: ISettingsSyncContent | null = lastSyncUserData ? this.getSettingsSyncContent(lastSyncUserData) : null;\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\n\t\tlet mergedContent: string | null = null;\n\t\tlet hasLocalChanged: boolean = false;\n\t\tlet hasRemoteChanged: boolean = false;\n\t\tlet hasConflicts: boolean = false;\n\n\t\tif (remoteSettingsSyncContent) {\n\t\t\tlet localContent: string = fileContent ? fileContent.value.toString().trim() : '{}';\n\t\t\tlocalContent = localContent || '{}';\n\t\t\tthis.validateContent(localContent);\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Merging remote settings with local settings...`);\n\t\t\tconst result = merge(localContent, remoteSettingsSyncContent.settings, lastSettingsSyncContent ? lastSettingsSyncContent.settings : null, ignoredSettings, [], formattingOptions);\n\t\t\tmergedContent = result.localContent || result.remoteContent;\n\t\t\thasLocalChanged = result.localContent !== null;\n\t\t\thasRemoteChanged = result.remoteContent !== null;\n\t\t\thasConflicts = result.hasConflicts;\n\t\t}\n\n\t\t// First time syncing to remote\n\t\telse if (fileContent) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Remote settings does not exist. Synchronizing settings for the first time.`);\n\t\t\tmergedContent = fileContent.value.toString().trim() || '{}';\n\t\t\tthis.validateContent(mergedContent);\n\t\t\thasRemoteChanged = true;\n\t\t}\n\n\t\tconst localContent = fileContent ? fileContent.value.toString() : null;\n\t\tconst baseContent = lastSettingsSyncContent?.settings ?? null;\n\n\t\tconst previewResult = {\n\t\t\tcontent: hasConflicts ? baseContent : mergedContent,\n\t\t\tlocalChange: hasLocalChanged ? Change.Modified : Change.None,\n\t\t\tremoteChange: hasRemoteChanged ? Change.Modified : Change.None,\n\t\t\thasConflicts\n\t\t};\n\n\t\treturn [{\n\t\t\tfileContent,\n\n\t\t\tbaseResource: this.baseResource,\n\t\t\tbaseContent,\n\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent,\n\t\t\tlocalChange: previewResult.localChange,\n\n\t\t\tremoteResource: this.remoteResource,\n\t\t\tremoteContent: remoteSettingsSyncContent ? remoteSettingsSyncContent.settings : null,\n\t\t\tremoteChange: previewResult.remoteChange,\n\n\t\t\tpreviewResource: this.previewResource,\n\t\t\tpreviewResult,\n\t\t\tacceptedResource: this.acceptedResource,\n\t\t}];\n\t}\n\n\tprotected async hasRemoteChanged(lastSyncUserData: IRemoteUserData): Promise<boolean> {\n\t\tconst lastSettingsSyncContent: ISettingsSyncContent | null = this.getSettingsSyncContent(lastSyncUserData);\n\t\tif (lastSettingsSyncContent === null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst fileContent = await this.getLocalFileContent();\n\t\tconst localContent: string = fileContent ? fileContent.value.toString().trim() : '';\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\tconst result = merge(localContent || '{}', lastSettingsSyncContent.settings, lastSettingsSyncContent.settings, ignoredSettings, [], formattingOptions);\n\t\treturn result.remoteContent !== null;\n\t}\n\n\tprotected async getMergeResult(resourcePreview: ISettingsResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\tconst formatUtils = await this.getFormattingOptions();\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\t\treturn {\n\t\t\t...resourcePreview.previewResult,\n\n\t\t\t// remove ignored settings from the preview content\n\t\t\tcontent: resourcePreview.previewResult.content ? updateIgnoredSettings(resourcePreview.previewResult.content, '{}', ignoredSettings, formatUtils) : null\n\t\t};\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: ISettingsResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult> {\n\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn {\n\t\t\t\t/* Remove ignored settings */\n\t\t\t\tcontent: resourcePreview.fileContent ? updateIgnoredSettings(resourcePreview.fileContent.value.toString(), '{}', ignoredSettings, formattingOptions) : null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Modified,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn {\n\t\t\t\t/* Update ignored settings from local file content */\n\t\t\t\tcontent: resourcePreview.remoteContent !== null ? updateIgnoredSettings(resourcePreview.remoteContent, resourcePreview.fileContent ? resourcePreview.fileContent.value.toString() : '{}', ignoredSettings, formattingOptions) : null,\n\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.previewResult.content,\n\t\t\t\t\tlocalChange: resourcePreview.previewResult.localChange,\n\t\t\t\t\tremoteChange: resourcePreview.previewResult.remoteChange,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t/* Add ignored settings from local file content */\n\t\t\t\t\tcontent: content !== null ? updateIgnoredSettings(content, resourcePreview.fileContent ? resourcePreview.fileContent.value.toString() : '{}', ignoredSettings, formattingOptions) : null,\n\t\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\t\tremoteChange: Change.Modified,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [ISettingsResourcePreview, IAcceptResult][], force: boolean): Promise<void> {\n\t\tconst { fileContent } = resourcePreviews[0][0];\n\t\tlet { content, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing settings.`);\n\t\t}\n\n\t\tcontent = content ? content.trim() : '{}';\n\t\tcontent = content || '{}';\n\t\tthis.validateContent(content);\n\n\t\tif (localChange !== Change.None) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating local settings...`);\n\t\t\tif (fileContent) {\n\t\t\t\tawait this.backupLocal(JSON.stringify(this.toSettingsSyncContent(fileContent.value.toString())));\n\t\t\t}\n\t\t\tawait this.updateLocalFileContent(content, fileContent, force);\n\t\t\tawait this.configurationService.reloadConfiguration(ConfigurationTarget.USER_LOCAL);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated local settings`);\n\t\t}\n\n\t\tif (remoteChange !== Change.None) {\n\t\t\tconst formatUtils = await this.getFormattingOptions();\n\t\t\t// Update ignored settings from remote\n\t\t\tconst remoteSettingsSyncContent = this.getSettingsSyncContent(remoteUserData);\n\t\t\tconst ignoredSettings = await this.getIgnoredSettings(content);\n\t\t\tcontent = updateIgnoredSettings(content, remoteSettingsSyncContent ? remoteSettingsSyncContent.settings : '{}', ignoredSettings, formatUtils);\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote settings...`);\n\t\t\tremoteUserData = await this.updateRemoteUserData(JSON.stringify(this.toSettingsSyncContent(content)), force ? null : remoteUserData.ref);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote settings`);\n\t\t}\n\n\t\t// Delete the preview\n\t\ttry {\n\t\t\tawait this.fileService.del(this.previewResource);\n\t\t} catch (e) { /* ignore */ }\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized settings...`);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized settings`);\n\t\t}\n\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst localFileContent = await this.getLocalFileContent();\n\t\t\tif (localFileContent) {\n\t\t\t\treturn !isEmpty(localFileContent.value.toString());\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqual(this.remoteResource, uri)\n\t\t\t|| this.extUri.isEqual(this.localResource, uri)\n\t\t\t|| this.extUri.isEqual(this.acceptedResource, uri)\n\t\t\t|| this.extUri.isEqual(this.baseResource, uri)\n\t\t) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected override async resolvePreviewContent(resource: URI): Promise<string | null> {\n\t\tlet content = await super.resolvePreviewContent(resource);\n\t\tif (content) {\n\t\t\tconst formatUtils = await this.getFormattingOptions();\n\t\t\t// remove ignored settings from the preview content\n\t\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\t\t\tcontent = updateIgnoredSettings(content, '{}', ignoredSettings, formatUtils);\n\t\t}\n\t\treturn content;\n\t}\n\n\tprivate getSettingsSyncContent(remoteUserData: IRemoteUserData): ISettingsSyncContent | null {\n\t\treturn remoteUserData.syncData ? this.parseSettingsSyncContent(remoteUserData.syncData.content) : null;\n\t}\n\n\tprivate parseSettingsSyncContent(syncContent: string): ISettingsSyncContent | null {\n\t\ttry {\n\t\t\treturn parseSettingsSyncContent(syncContent);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate toSettingsSyncContent(settings: string): ISettingsSyncContent {\n\t\treturn { settings };\n\t}\n\n\tprivate _defaultIgnoredSettings: Promise<string[]> | undefined = undefined;\n\tprivate async getIgnoredSettings(content?: string): Promise<string[]> {\n\t\tif (!this._defaultIgnoredSettings) {\n\t\t\tthis._defaultIgnoredSettings = this.userDataSyncUtilService.resolveDefaultIgnoredSettings();\n\t\t\tconst disposable = this._register(Event.any<any>(\n\t\t\t\tEvent.filter(this.extensionManagementService.onDidInstallExtensions, (e => e.some(({ local }) => !!local))),\n\t\t\t\tEvent.filter(this.extensionManagementService.onDidUninstallExtension, (e => !e.error)))(() => {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tthis._defaultIgnoredSettings = undefined;\n\t\t\t\t}));\n\t\t}\n\t\tconst defaultIgnoredSettings = await this._defaultIgnoredSettings;\n\t\treturn getIgnoredSettings(defaultIgnoredSettings, this.configurationService, content);\n\t}\n\n\tprivate validateContent(content: string): void {\n\t\tif (this.hasErrors(content, false)) {\n\t\t\tthrow new UserDataSyncError(localize('errorInvalidSettings', \"Unable to sync settings as there are errors/warning in settings file.\"), UserDataSyncErrorCode.LocalInvalidContent, this.resource);\n\t\t}\n\t}\n\n}\n\nexport class SettingsInitializer extends AbstractInitializer {\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(SyncResource.Settings, userDataProfilesService, environmentService, logService, fileService, storageService, uriIdentityService);\n\t}\n\n\tprotected async doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst settingsSyncContent = remoteUserData.syncData ? this.parseSettingsSyncContent(remoteUserData.syncData.content) : null;\n\t\tif (!settingsSyncContent) {\n\t\t\tthis.logService.info('Skipping initializing settings because remote settings does not exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmpty = await this.isEmpty();\n\t\tif (!isEmpty) {\n\t\t\tthis.logService.info('Skipping initializing settings because local settings exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.fileService.writeFile(this.userDataProfilesService.defaultProfile.settingsResource, VSBuffer.fromString(settingsSyncContent.settings));\n\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\tprivate async isEmpty(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst fileContent = await this.fileService.readFile(this.userDataProfilesService.defaultProfile.settingsResource);\n\t\t\treturn isEmpty(fileContent.value.toString().trim());\n\t\t} catch (error) {\n\t\t\treturn (<FileOperationError>error).fileOperationResult === FileOperationResult.FILE_NOT_FOUND;\n\t\t}\n\t}\n\n\tprivate parseSettingsSyncContent(syncContent: string): ISettingsSyncContent | null {\n\t\ttry {\n\t\t\treturn parseSettingsSyncContent(syncContent);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\treturn null;\n\t}\n\n}\n"]}