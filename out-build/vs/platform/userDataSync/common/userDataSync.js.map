{"version":3,"sources":["vs/platform/userDataSync/common/userDataSync.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAwBhG,SAAgB,IAAI;QACnB,MAAM,WAAW,GAAG,cAAG,CAAM,EAAE,CAAyB,2BAAuB,CAAC,aAAa,CAAC,CAAC,0BAA0B,EAAE,CAAC;QAC5H,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,kBAAkB,CAAC,CAAC;IAC9F,CAAC;IAHD,oBAGC;IAED,SAAgB,IAAI;QACnB,MAAM,WAAW,GAAG,cAAG,CAAM,EAAE,CAAyB,2BAAuB,CAAC,aAAa,CAAC,CAAC,0BAA0B,EAAE,CAAC;QAC5H,MAAM,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC;QACzG,MAAM,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK,uCAA+B,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK,mDAA2C,CAAC,CAAC;QACvM,MAAM,kBAAkB,GAAG,IAAI,EAA0B,CAAC;QAC1D,OAAO,IAAA,YAAG,EAAM,CAAC,GAAG,kBAAkB,EAAE,GAAG,eAAe,EAAE,GAAG,kBAAkB,CAAC,CAAC,CAAC;IACrF,CAAC;IAND,oBAMC;IAEY,QAAA,IAAI,GAAiC,cAAc,CAAC;IAQpD,QAAA,IAAI,GAAmC,qCAAqC,CAAC;IAE1F,SAAgB,IAAI;QACnB,MAAM,uBAAuB,GAAG,kCAAkC,CAAC;QACnE,MAAM,qBAAqB,GAAG,cAAG,CAAM,EAAE,CAAyB,2BAAuB,CAAC,aAAa,CAAC,CAAC;QACzG,qBAAqB,CAAC,qBAAqB,CAAC;YAC3C,EAAE,EAAE,cAAc;YAClB,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAe,EAAE,IAAe,CAAC;YACjD,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE;gBACX,CAAC,YAAI,CAAiC,EAAE;oBACvC,IAAI,EAAE,SAAS;oBACf,WAAW,EAAE,IAAA,cAAQ,EAAC,CAAqC,EAAE,IAA4C,CAAC;oBAC1G,OAAO,EAAE,IAAI;oBACb,KAAK,wCAAgC;oBACrC,IAAI,EAAE,CAAC,MAAM,EAAE,oBAAoB,CAAC;iBACpC;gBACD,gCAAgC,EAAE;oBACjC,MAAM,EAAE,OAAO;oBACf,mBAAmB,EAAE,IAAA,cAAQ,EAAC,CAAgC,EAAE,IAAsJ,CAAC;oBACvN,KAAK,EAAE,CAAC;4BACP,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE,yBAAG;4BACZ,YAAY,EAAE,IAAA,cAAQ,EAAC,CAAuC,EAAE,IAAmE,CAAC;yBACpI,CAAC;oBACF,SAAS,EAAE,EAAE;oBACb,OAAO,wCAAgC;oBACvC,WAAW,EAAE,IAAI;oBACjB,kBAAkB,EAAE,IAAI;oBACxB,IAAI,EAAE,CAAC,MAAM,EAAE,oBAAoB,CAAC;iBACpC;gBACD,8BAA8B,EAAE;oBAC/B,MAAM,EAAE,OAAO;oBACf,WAAW,EAAE,IAAA,cAAQ,EAAC,CAA8B,EAAE,IAAuD,CAAC;oBAC9G,SAAS,EAAE,EAAE;oBACb,OAAO,wCAAgC;oBACvC,IAAI,EAAE,uBAAuB;oBAC7B,oBAAoB,EAAE,IAAI;oBAC1B,WAAW,EAAE,IAAI;oBACjB,kBAAkB,EAAE,IAAI;oBACxB,IAAI,EAAE,CAAC,MAAM,EAAE,oBAAoB,CAAC;iBACpC;aACD;SACD,CAAC,CAAC;QACH,MAAM,YAAY,GAAG,cAAG,CAAM,EAAE,CAA4B,8BAAc,CAAC,gBAAgB,CAAC,CAAC;QAC7F,MAAM,6BAA6B,GAAG,GAAG,EAAE;YAC1C,MAAM,yBAAyB,GAAG,IAAI,EAA0B,CAAC;YACjE,MAAM,sBAAsB,GAAG,IAAI,EAAuB,CAAC;YAC3D,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,2BAAG,CAAS,UAAU,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,sBAAsB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YAClH,MAAM,eAAe,GAAG,sBAAsB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,yBAAyB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YAC/G,MAAM,qBAAqB,GAAgB;gBAC1C,KAAK,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,CAAC,GAAG,QAAQ,EAAE,GAAG,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,CAAC;iBACrE;aACD,CAAC;YACF,YAAY,CAAC,cAAc,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;QAC7E,CAAC,CAAC;QACF,OAAO,qBAAqB,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC,6BAA6B,EAAE,CAAC,CAAC;IAC9F,CAAC;IA1DD,oBA0DC;IAqBD,SAAgB,IAAI,CAAqB,KAAU;QAClD,OAAO,KAAK;eACR,IAAA,WAAG,EAAM,KAAK,CAAC;eACf,IAAA,WAAG,EAAM,KAAK,CAAC,EAAE,CAAC;eAClB,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IALD,oBAKC;IAED,IAAkB,YASjB;IATD,WAAkB,YAAY;QAC7B,qCAAqB,CAAA;QACrB,2CAA2B,CAAA;QAC3B,qCAAqB,CAAA;QACrB,+BAAe,CAAA;QACf,yCAAyB,CAAA;QACzB,2CAA2B,CAAA;QAC3B,qCAAqB,CAAA;QACrB,iDAAiC,CAAA;IAClC,CAAC,EATiB,YAAY,4BAAZ,YAAY,QAS7B;IACY,QAAA,IAAI,GAAiC,kSAAsK,CAAC;IAEzN,SAAgB,IAAI,CAAY,UAA8B,EAAE,GAAG,KAAe;QACjF,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACpD,CAAC;IAFD,oBAEC;IAED,SAAgB,IAAI,CAAmB,UAA8B,EAAE,YAA0B,EAAE,kBAAuB,EAAkB,MAAe;QAC1J,OAAO,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,GAAG,IAAI,CAAY,UAAU,EAAE,YAAY,EAAE,WAAW,YAAY,OAAO,CAAC,CAAC,CAAC;IAC3I,CAAC;IAFD,oBAEC;IAsCY,QAAA,IAAI,GAAkC,IAAA,mBAAG,EAAkD,qCAAqC,CAAC,CAAC;IASlI,QAAA,IAAI,GAAwB,IAAA,mBAAG,EAAwC,2BAA2B,CAAC,CAAC;IA0BpG,QAAA,IAAI,GAA6B,IAAA,mBAAG,EAA6C,gCAAgC,CAAC,CAAC;IAQhI,YAAY;IAEZ,iCAAiC;IAEpB,QAAA,IAAI,GAAkB,gBAAgB,CAAC;IACvC,QAAA,IAAI,GAAkB,gBAAgB,CAAC;IAEpD,SAAgB,IAAI,CAAc,WAAmB;QACpD,MAAM,OAAO,GAAa,EAAE,CAAC;QAC7B,OAAO,CAAC,YAAI,CAAgB,GAAG,WAAW,CAAC;QAC3C,OAAO,OAAO,CAAC;IAChB,CAAC;IAJD,oBAIC;IAED,YAAY;IAEZ,+BAA+B;IAE/B,IAAkB,qBAsCjB;IAtCD,WAAkB,qBAAqB;QACtC,0BAA0B;QAC1B,sDAA6B,CAAA;QAC7B,gDAAuB,CAAA;QACvB,8CAAqB,CAAA;QACrB,0DAAiC,CAAA;QACjC,8CAAqB,CAAA;QACrB,sCAAa,CAAA;QACb,kEAAyC,CAAA;QACzC,8CAAqB,CAAA;QACrB,4DAAmC,CAAA;QACnC,sEAA6C,CAAA;QAC7C,kEAAyC,CAAA;QACzC,sFAA6D,CAAA;QAE7D,eAAe;QACf,wDAA+B,CAAA;QAC/B,4DAAmC,CAAA;QACnC,0DAAiC,CAAA;QACjC,oFAA2D,CAAA;QAC3D,wEAA+C,CAAA;QAC/C,4EAAmD,CAAA;QACnD,sDAA6B,CAAA;QAC7B,wCAAe,CAAA;QACf,wDAA+B,CAAA;QAC/B,gDAAuB,CAAA;QACvB,0DAAiC,CAAA;QACjC,0DAAiC,CAAA;QACjC,wEAA+C,CAAA;QAC/C,sEAA6C,CAAA;QAC7C,sEAA6C,CAAA;QAC7C,4EAAmD,CAAA;QACnD,oEAA2C,CAAA;QAC3C,kDAAyB,CAAA;QACzB,8EAAqD,CAAA;QACrD,gFAAuD,CAAA;QAEvD,4CAAmB,CAAA;IACpB,CAAC,EAtCiB,qBAAqB,qCAArB,qBAAqB,QAsCtC;IAED,MAAa,IAAkB,SAAQ,KAAK;QAE3C,YACC,OAAe,EACN,IAA2B,EAC3B,QAAuB,EACvB,WAAoB;YAE7B,KAAK,CAAC,OAAO,CAAC,CAAC;YAJN,SAAI,GAAJ,IAAI,CAAuB;YAC3B,aAAQ,GAAR,QAAQ,CAAe;YACvB,gBAAW,GAAX,WAAW,CAAS;YAG7B,IAAI,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,qCAAqC,IAAI,CAAC,QAAQ,IAAI,SAAS,gBAAgB,IAAI,CAAC,WAAW,IAAI,SAAS,EAAE,CAAC;QACxI,CAAC;KAED;IAZD,oBAYC;IAED,MAAa,IAAuB,SAAQ,IAAI;QAC/C,YAAY,OAAe,EAAW,GAAW,EAAE,IAA2B,EAAW,UAA8B,EAAE,WAA+B;YACvJ,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;YADR,QAAG,GAAH,GAAG,CAAQ;YAAwC,eAAU,GAAV,UAAU,CAAoB;QAEvH,CAAC;KACD;IAJD,oBAIC;IAED,MAAa,IAAsB,SAAQ,IAAI;QAC9C,YAAY,OAAe,EAAE,IAA2B;YACvD,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACtB,CAAC;KACD;IAJD,oBAIC;IAED,WAAiB,IAAI;QAEpB,SAAgB,mBAAmB,CAAC,KAAY;YAC/C,IAAI,KAAK,YAAY,IAAI,EAAe;gBACvC,OAAO,KAAK,CAAC;aACb;YACD,MAAM,KAAK,GAAG,iEAAiE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACjG,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;gBACtB,MAAM,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAiB,CAAC;gBACnF,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClE,OAAO,IAAI,IAAI,CAAc,KAAK,CAAC,OAAO,EAAyB,KAAK,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;aACxG;YACD,OAAO,IAAI,IAAI,CAAc,KAAK,CAAC,OAAO,gDAAgC,CAAC;QAC5E,CAAC;QAXe,wBAAmB,sBAWlC,CAAA;IAEF,CAAC,EAfgB,IAAI,oBAAJ,IAAI,QAepB;IA0DD,IAAkB,UAKjB;IALD,WAAkB,UAAU;QAC3B,6CAA+B,CAAA;QAC/B,2BAAa,CAAA;QACb,iCAAmB,CAAA;QACnB,2CAA6B,CAAA;IAC9B,CAAC,EALiB,UAAU,0BAAV,UAAU,QAK3B;IAkBD,IAAkB,MAKjB;IALD,WAAkB,MAAM;QACvB,mCAAI,CAAA;QACJ,qCAAK,CAAA;QACL,2CAAQ,CAAA;QACR,yCAAO,CAAA;IACR,CAAC,EALiB,MAAM,sBAAN,MAAM,QAKvB;IAED,IAAkB,UAIjB;IAJD,WAAkB,UAAU;QAC3B,iCAAmB,CAAA;QACnB,mCAAqB,CAAA;QACrB,mCAAqB,CAAA;IACtB,CAAC,EAJiB,UAAU,0BAAV,UAAU,QAI3B;IA+DD,YAAY;IAEZ,kCAAkC;IAErB,QAAA,IAAI,GAAoB,qBAAqB,CAAC;IAC3D,SAAgB,IAAI,CAAa,QAAsB,IAAI,OAAO,eAAe,QAAQ,EAAE,CAAC,CAAC,CAAC;IAA9F,oBAA8F;IAE9F,aAAa;IAEb,kCAAkC;IACrB,QAAA,IAAI,GAA6B,IAAA,mBAAG,EAA6C,gCAAgC,CAAC,CAAC;IA6BnH,QAAA,IAAI,GAAmB,IAAA,mBAAG,EAAmC,sBAAsB,CAAC,CAAC;IAqCrF,QAAA,IAAI,GAAmC,IAAA,mBAAG,EAAmD,sCAAsC,CAAC,CAAC;IAcrI,QAAA,IAAI,GAAuB,IAAA,mBAAG,EAAuC,0BAA0B,CAAC,CAAC;IASjG,QAAA,IAAI,GAAuB,IAAA,mBAAG,EAAuC,0BAA0B,CAAC,CAAC;IAQjG,QAAA,IAAI,GAAsB,IAAA,mBAAG,EAAsC,yBAAyB,CAAC,CAAC;IAS3G,YAAY;IAEC,QAAA,IAAI,GAAoB,cAAc,CAAC;IACvC,QAAA,IAAI,GAAoB,sBAAsB,CAAC;IAC/C,QAAA,IAAI,GAAe,SAAS,CAAC","file":"userDataSync.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Event } from 'vs/base/common/event';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IExtUri } from 'vs/base/common/resources';\nimport { isObject, isString } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IHeaders } from 'vs/base/parts/request/common/request';\nimport { localize } from 'vs/nls';\nimport { allSettings, ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { EXTENSION_IDENTIFIER_PATTERN, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IUserDataProfile, UseDefaultProfileFlags } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IUserDataSyncMachine } from 'vs/platform/userDataSync/common/userDataSyncMachines';\n\nexport function getDisallowedIgnoredSettings(): string[] {\n\tconst allSettings = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(allSettings).filter(setting => !!allSettings[setting].disallowSyncIgnore);\n}\n\nexport function getDefaultIgnoredSettings(): string[] {\n\tconst allSettings = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\tconst ignoreSyncSettings = Object.keys(allSettings).filter(setting => !!allSettings[setting].ignoreSync);\n\tconst machineSettings = Object.keys(allSettings).filter(setting => allSettings[setting].scope === ConfigurationScope.MACHINE || allSettings[setting].scope === ConfigurationScope.MACHINE_OVERRIDABLE);\n\tconst disallowedSettings = getDisallowedIgnoredSettings();\n\treturn distinct([...ignoreSyncSettings, ...machineSettings, ...disallowedSettings]);\n}\n\nexport const USER_DATA_SYNC_CONFIGURATION_SCOPE = 'settingsSync';\n\nexport interface IUserDataSyncConfiguration {\n\tkeybindingsPerPlatform?: boolean;\n\tignoredExtensions?: string[];\n\tignoredSettings?: string[];\n}\n\nexport const CONFIG_SYNC_KEYBINDINGS_PER_PLATFORM = 'settingsSync.keybindingsPerPlatform';\n\nexport function registerConfiguration(): IDisposable {\n\tconst ignoredSettingsSchemaId = 'vscode://schemas/ignoredSettings';\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\n\tconfigurationRegistry.registerConfiguration({\n\t\tid: 'settingsSync',\n\t\torder: 30,\n\t\ttitle: localize('settings sync', \"Settings Sync\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t[CONFIG_SYNC_KEYBINDINGS_PER_PLATFORM]: {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: localize('settingsSync.keybindingsPerPlatform', \"Synchronize keybindings for each platform.\"),\n\t\t\t\tdefault: true,\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\ttags: ['sync', 'usesOnlineServices']\n\t\t\t},\n\t\t\t'settingsSync.ignoredExtensions': {\n\t\t\t\t'type': 'array',\n\t\t\t\tmarkdownDescription: localize('settingsSync.ignoredExtensions', \"List of extensions to be ignored while synchronizing. The identifier of an extension is always `${publisher}.${name}`. For example: `vscode.csharp`.\"),\n\t\t\t\titems: [{\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tpattern: EXTENSION_IDENTIFIER_PATTERN,\n\t\t\t\t\terrorMessage: localize('app.extension.identifier.errorMessage', \"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.\")\n\t\t\t\t}],\n\t\t\t\t'default': [],\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\tuniqueItems: true,\n\t\t\t\tdisallowSyncIgnore: true,\n\t\t\t\ttags: ['sync', 'usesOnlineServices']\n\t\t\t},\n\t\t\t'settingsSync.ignoredSettings': {\n\t\t\t\t'type': 'array',\n\t\t\t\tdescription: localize('settingsSync.ignoredSettings', \"Configure settings to be ignored while synchronizing.\"),\n\t\t\t\t'default': [],\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t$ref: ignoredSettingsSchemaId,\n\t\t\t\tadditionalProperties: true,\n\t\t\t\tuniqueItems: true,\n\t\t\t\tdisallowSyncIgnore: true,\n\t\t\t\ttags: ['sync', 'usesOnlineServices']\n\t\t\t}\n\t\t}\n\t});\n\tconst jsonRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\tconst registerIgnoredSettingsSchema = () => {\n\t\tconst disallowedIgnoredSettings = getDisallowedIgnoredSettings();\n\t\tconst defaultIgnoredSettings = getDefaultIgnoredSettings();\n\t\tconst settings = Object.keys(allSettings.properties).filter(setting => !defaultIgnoredSettings.includes(setting));\n\t\tconst ignoredSettings = defaultIgnoredSettings.filter(setting => !disallowedIgnoredSettings.includes(setting));\n\t\tconst ignoredSettingsSchema: IJSONSchema = {\n\t\t\titems: {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: [...settings, ...ignoredSettings.map(setting => `-${setting}`)]\n\t\t\t},\n\t\t};\n\t\tjsonRegistry.registerSchema(ignoredSettingsSchemaId, ignoredSettingsSchema);\n\t};\n\treturn configurationRegistry.onDidUpdateConfiguration(() => registerIgnoredSettingsSchema());\n}\n\n// #region User Data Sync Store\n\nexport interface IUserData {\n\tref: string;\n\tcontent: string | null;\n}\n\nexport type IAuthenticationProvider = { id: string; scopes: string[] };\n\nexport interface IUserDataSyncStore {\n\treadonly url: URI;\n\treadonly type: UserDataSyncStoreType;\n\treadonly defaultUrl: URI;\n\treadonly stableUrl: URI;\n\treadonly insidersUrl: URI;\n\treadonly canSwitch: boolean;\n\treadonly authenticationProviders: IAuthenticationProvider[];\n}\n\nexport function isAuthenticationProvider(thing: any): thing is IAuthenticationProvider {\n\treturn thing\n\t\t&& isObject(thing)\n\t\t&& isString(thing.id)\n\t\t&& Array.isArray(thing.scopes);\n}\n\nexport const enum SyncResource {\n\tSettings = 'settings',\n\tKeybindings = 'keybindings',\n\tSnippets = 'snippets',\n\tTasks = 'tasks',\n\tExtensions = 'extensions',\n\tGlobalState = 'globalState',\n\tProfiles = 'profiles',\n\tWorkspaceState = 'workspaceState',\n}\nexport const ALL_SYNC_RESOURCES: SyncResource[] = [SyncResource.Settings, SyncResource.Keybindings, SyncResource.Snippets, SyncResource.Tasks, SyncResource.Extensions, SyncResource.GlobalState, SyncResource.Profiles];\n\nexport function getPathSegments(collection: string | undefined, ...paths: string[]): string[] {\n\treturn collection ? [collection, ...paths] : paths;\n}\n\nexport function getLastSyncResourceUri(collection: string | undefined, syncResource: SyncResource, environmentService: IEnvironmentService, extUri: IExtUri): URI {\n\treturn extUri.joinPath(environmentService.userDataSyncHome, ...getPathSegments(collection, syncResource, `lastSync${syncResource}.json`));\n}\n\nexport type IUserDataResourceManifest = Record<ServerResource, string>;\n\nexport interface IUserDataCollectionManifest {\n\t[collectionId: string]: {\n\t\treadonly latest?: IUserDataResourceManifest;\n\t};\n}\n\nexport interface IUserDataManifest {\n\treadonly latest?: IUserDataResourceManifest;\n\treadonly session: string;\n\treadonly ref: string;\n\treadonly collections?: IUserDataCollectionManifest;\n}\n\nexport interface IUserDataActivityData {\n\tresources?: {\n\t\t[resourceId: string]: { created: number; content: string }[];\n\t};\n\tcollections?: {\n\t\t[collectionId: string]: {\n\t\t\tresources?: {\n\t\t\t\t[resourceId: string]: { created: number; content: string }[];\n\t\t\t} | undefined;\n\t\t};\n\t};\n}\n\nexport interface IResourceRefHandle {\n\tref: string;\n\tcreated: number;\n}\n\nexport type ServerResource = SyncResource | 'machines' | 'editSessions' | 'workspaceState';\nexport type UserDataSyncStoreType = 'insiders' | 'stable';\n\nexport const IUserDataSyncStoreManagementService = createDecorator<IUserDataSyncStoreManagementService>('IUserDataSyncStoreManagementService');\nexport interface IUserDataSyncStoreManagementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeUserDataSyncStore: Event<void>;\n\treadonly userDataSyncStore: IUserDataSyncStore | undefined;\n\tswitch(type: UserDataSyncStoreType): Promise<void>;\n\tgetPreviousUserDataSyncStore(): Promise<IUserDataSyncStore | undefined>;\n}\n\nexport const IUserDataSyncStoreService = createDecorator<IUserDataSyncStoreService>('IUserDataSyncStoreService');\nexport interface IUserDataSyncStoreService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeDonotMakeRequestsUntil: Event<void>;\n\treadonly donotMakeRequestsUntil: Date | undefined;\n\n\treadonly onTokenFailed: Event<UserDataSyncErrorCode>;\n\treadonly onTokenSucceed: Event<void>;\n\tsetAuthToken(token: string, type: string): void;\n\n\tmanifest(oldValue: IUserDataManifest | null, headers?: IHeaders): Promise<IUserDataManifest | null>;\n\treadResource(resource: ServerResource, oldValue: IUserData | null, collection?: string, headers?: IHeaders): Promise<IUserData>;\n\twriteResource(resource: ServerResource, content: string, ref: string | null, collection?: string, headers?: IHeaders): Promise<string>;\n\tdeleteResource(resource: ServerResource, ref: string | null, collection?: string): Promise<void>;\n\tgetAllResourceRefs(resource: ServerResource, collection?: string): Promise<IResourceRefHandle[]>;\n\tresolveResourceContent(resource: ServerResource, ref: string, collection?: string, headers?: IHeaders): Promise<string | null>;\n\n\tgetAllCollections(headers?: IHeaders): Promise<string[]>;\n\tcreateCollection(headers?: IHeaders): Promise<string>;\n\tdeleteCollection(collection?: string, headers?: IHeaders): Promise<void>;\n\n\tgetActivityData(): Promise<VSBufferReadableStream>;\n\n\tclear(): Promise<void>;\n}\n\nexport const IUserDataSyncLocalStoreService = createDecorator<IUserDataSyncLocalStoreService>('IUserDataSyncLocalStoreService');\nexport interface IUserDataSyncLocalStoreService {\n\treadonly _serviceBrand: undefined;\n\twriteResource(resource: ServerResource, content: string, cTime: Date, collection?: string, root?: URI): Promise<void>;\n\tgetAllResourceRefs(resource: ServerResource, collection?: string, root?: URI): Promise<IResourceRefHandle[]>;\n\tresolveResourceContent(resource: ServerResource, ref: string, collection?: string, root?: URI): Promise<string | null>;\n}\n\n//#endregion\n\n// #region User Data Sync Headers\n\nexport const HEADER_OPERATION_ID = 'x-operation-id';\nexport const HEADER_EXECUTION_ID = 'X-Execution-Id';\n\nexport function createSyncHeaders(executionId: string): IHeaders {\n\tconst headers: IHeaders = {};\n\theaders[HEADER_EXECUTION_ID] = executionId;\n\treturn headers;\n}\n\n//#endregion\n\n// #region User Data Sync Error\n\nexport const enum UserDataSyncErrorCode {\n\t// Client Errors (>= 400 )\n\tUnauthorized = 'Unauthorized', /* 401 */\n\tForbidden = 'Forbidden', /* 403 */\n\tNotFound = 'NotFound', /* 404 */\n\tMethodNotFound = 'MethodNotFound', /* 405 */\n\tConflict = 'Conflict', /* 409 */\n\tGone = 'Gone', /* 410 */\n\tPreconditionFailed = 'PreconditionFailed', /* 412 */\n\tTooLarge = 'TooLarge', /* 413 */\n\tUpgradeRequired = 'UpgradeRequired', /* 426 */\n\tPreconditionRequired = 'PreconditionRequired', /* 428 */\n\tTooManyRequests = 'RemoteTooManyRequests', /* 429 */\n\tTooManyRequestsAndRetryAfter = 'TooManyRequestsAndRetryAfter', /* 429 + Retry-After */\n\n\t// Local Errors\n\tRequestFailed = 'RequestFailed',\n\tRequestCanceled = 'RequestCanceled',\n\tRequestTimeout = 'RequestTimeout',\n\tRequestProtocolNotSupported = 'RequestProtocolNotSupported',\n\tRequestPathNotEscaped = 'RequestPathNotEscaped',\n\tRequestHeadersNotObject = 'RequestHeadersNotObject',\n\tNoCollection = 'NoCollection',\n\tNoRef = 'NoRef',\n\tEmptyResponse = 'EmptyResponse',\n\tTurnedOff = 'TurnedOff',\n\tSessionExpired = 'SessionExpired',\n\tServiceChanged = 'ServiceChanged',\n\tDefaultServiceChanged = 'DefaultServiceChanged',\n\tLocalTooManyProfiles = 'LocalTooManyProfiles',\n\tLocalTooManyRequests = 'LocalTooManyRequests',\n\tLocalPreconditionFailed = 'LocalPreconditionFailed',\n\tLocalInvalidContent = 'LocalInvalidContent',\n\tLocalError = 'LocalError',\n\tIncompatibleLocalContent = 'IncompatibleLocalContent',\n\tIncompatibleRemoteContent = 'IncompatibleRemoteContent',\n\n\tUnknown = 'Unknown',\n}\n\nexport class UserDataSyncError extends Error {\n\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly code: UserDataSyncErrorCode,\n\t\treadonly resource?: SyncResource,\n\t\treadonly operationId?: string\n\t) {\n\t\tsuper(message);\n\t\tthis.name = `${this.code} (UserDataSyncError) syncResource:${this.resource || 'unknown'} operationId:${this.operationId || 'unknown'}`;\n\t}\n\n}\n\nexport class UserDataSyncStoreError extends UserDataSyncError {\n\tconstructor(message: string, readonly url: string, code: UserDataSyncErrorCode, readonly serverCode: number | undefined, operationId: string | undefined) {\n\t\tsuper(message, code, undefined, operationId);\n\t}\n}\n\nexport class UserDataAutoSyncError extends UserDataSyncError {\n\tconstructor(message: string, code: UserDataSyncErrorCode) {\n\t\tsuper(message, code);\n\t}\n}\n\nexport namespace UserDataSyncError {\n\n\texport function toUserDataSyncError(error: Error): UserDataSyncError {\n\t\tif (error instanceof UserDataSyncError) {\n\t\t\treturn error;\n\t\t}\n\t\tconst match = /^(.+) \\(UserDataSyncError\\) syncResource:(.+) operationId:(.+)$/.exec(error.name);\n\t\tif (match && match[1]) {\n\t\t\tconst syncResource = match[2] === 'unknown' ? undefined : match[2] as SyncResource;\n\t\t\tconst operationId = match[3] === 'unknown' ? undefined : match[3];\n\t\t\treturn new UserDataSyncError(error.message, <UserDataSyncErrorCode>match[1], syncResource, operationId);\n\t\t}\n\t\treturn new UserDataSyncError(error.message, UserDataSyncErrorCode.Unknown);\n\t}\n\n}\n\n//#endregion\n\n// #region User Data Synchroniser\n\nexport interface ISyncUserDataProfile {\n\treadonly id: string;\n\treadonly collection: string;\n\treadonly name: string;\n\treadonly shortName?: string;\n\treadonly useDefaultFlags?: UseDefaultProfileFlags;\n}\n\nexport type ISyncExtension = ILocalSyncExtension | IRemoteSyncExtension;\n\nexport interface ILocalSyncExtension {\n\tidentifier: IExtensionIdentifier;\n\tpinned: boolean;\n\tversion: string;\n\tpreRelease: boolean;\n\tdisabled?: boolean;\n\tinstalled?: boolean;\n\tisApplicationScoped?: boolean;\n\tstate?: IStringDictionary<any>;\n}\n\nexport interface IRemoteSyncExtension {\n\tidentifier: IExtensionIdentifier;\n\tversion: string;\n\tpinned?: boolean;\n\tpreRelease?: boolean;\n\tdisabled?: boolean;\n\tinstalled?: boolean;\n\tisApplicationScoped?: boolean;\n\tstate?: IStringDictionary<any>;\n}\n\nexport interface IStorageValue {\n\tversion: number;\n\tvalue: string;\n}\n\nexport interface IGlobalState {\n\tstorage: IStringDictionary<IStorageValue>;\n}\n\nexport interface IWorkspaceState {\n\tfolders: IWorkspaceStateFolder[];\n\tstorage: IStringDictionary<string>;\n\tversion: number;\n}\n\nexport interface IWorkspaceStateFolder {\n\tresourceUri: string;\n\tworkspaceFolderIdentity: string;\n}\n\nexport const enum SyncStatus {\n\tUninitialized = 'uninitialized',\n\tIdle = 'idle',\n\tSyncing = 'syncing',\n\tHasConflicts = 'hasConflicts',\n}\n\nexport interface ISyncResourceHandle {\n\tcreated: number;\n\turi: URI;\n}\n\nexport interface IRemoteUserData {\n\tref: string;\n\tsyncData: ISyncData | null;\n}\n\nexport interface ISyncData {\n\tversion: number;\n\tmachineId?: string;\n\tcontent: string;\n}\n\nexport const enum Change {\n\tNone,\n\tAdded,\n\tModified,\n\tDeleted,\n}\n\nexport const enum MergeState {\n\tPreview = 'preview',\n\tConflict = 'conflict',\n\tAccepted = 'accepted',\n}\n\nexport interface IResourcePreview {\n\treadonly baseResource: URI;\n\treadonly remoteResource: URI;\n\treadonly localResource: URI;\n\treadonly previewResource: URI;\n\treadonly acceptedResource: URI;\n\treadonly localChange: Change;\n\treadonly remoteChange: Change;\n\treadonly mergeState: MergeState;\n}\n\nexport interface IUserDataSyncResource {\n\treadonly syncResource: SyncResource;\n\treadonly profile: IUserDataProfile;\n}\n\nexport interface IUserDataSyncResourceConflicts extends IUserDataSyncResource {\n\treadonly conflicts: IResourcePreview[];\n}\n\nexport interface IUserDataSyncResourcePreview extends IUserDataSyncResource {\n\treadonly isLastSyncFromCurrentMachine: boolean;\n\treadonly resourcePreviews: IResourcePreview[];\n}\n\nexport interface IUserDataSyncResourceError extends IUserDataSyncResource {\n\treadonly error: UserDataSyncError;\n}\n\nexport interface IUserDataSyncResourceInitializer {\n\tinitialize(userData: IUserData): Promise<void>;\n}\n\nexport interface IUserDataSynchroniser {\n\n\treadonly resource: SyncResource;\n\treadonly status: SyncStatus;\n\treadonly onDidChangeStatus: Event<SyncStatus>;\n\n\treadonly conflicts: IUserDataSyncResourceConflicts;\n\treadonly onDidChangeConflicts: Event<IUserDataSyncResourceConflicts>;\n\n\treadonly onDidChangeLocal: Event<void>;\n\n\tsync(manifest: IUserDataResourceManifest | null, headers: IHeaders): Promise<void>;\n\tstop(): Promise<void>;\n\n\tpreview(manifest: IUserDataResourceManifest | null, userDataSyncConfiguration: IUserDataSyncConfiguration, headers: IHeaders): Promise<IUserDataSyncResourcePreview | null>;\n\taccept(resource: URI, content?: string | null): Promise<IUserDataSyncResourcePreview | null>;\n\tmerge(resource: URI): Promise<IUserDataSyncResourcePreview | null>;\n\tdiscard(resource: URI): Promise<IUserDataSyncResourcePreview | null>;\n\tapply(force: boolean, headers: IHeaders): Promise<IUserDataSyncResourcePreview | null>;\n\n\thasPreviouslySynced(): Promise<boolean>;\n\thasLocalData(): Promise<boolean>;\n\tresetLocal(): Promise<void>;\n\n\tresolveContent(resource: URI): Promise<string | null>;\n\treplace(content: string): Promise<boolean>;\n}\n\n//#endregion\n\n// #region keys synced only in web\n\nexport const SYNC_SERVICE_URL_TYPE = 'sync.store.url.type';\nexport function getEnablementKey(resource: SyncResource) { return `sync.enable.${resource}`; }\n\n// #endregion\n\n// #region User Data Sync Services\nexport const IUserDataSyncEnablementService = createDecorator<IUserDataSyncEnablementService>('IUserDataSyncEnablementService');\nexport interface IUserDataSyncEnablementService {\n\t_serviceBrand: any;\n\n\treadonly onDidChangeEnablement: Event<boolean>;\n\tisEnabled(): boolean;\n\tcanToggleEnablement(): boolean;\n\tsetEnablement(enabled: boolean): void;\n\n\treadonly onDidChangeResourceEnablement: Event<[SyncResource, boolean]>;\n\tisResourceEnabled(resource: SyncResource): boolean;\n\tsetResourceEnablement(resource: SyncResource, enabled: boolean): void;\n\n\tgetResourceSyncStateVersion(resource: SyncResource): string | undefined;\n}\n\nexport interface IUserDataSyncTask {\n\treadonly manifest: IUserDataManifest | null;\n\trun(): Promise<void>;\n\tstop(): Promise<void>;\n}\n\nexport interface IUserDataManualSyncTask {\n\treadonly id: string;\n\tmerge(): Promise<void>;\n\tapply(): Promise<void>;\n\tstop(): Promise<void>;\n}\n\nexport const IUserDataSyncService = createDecorator<IUserDataSyncService>('IUserDataSyncService');\nexport interface IUserDataSyncService {\n\t_serviceBrand: any;\n\n\treadonly status: SyncStatus;\n\treadonly onDidChangeStatus: Event<SyncStatus>;\n\n\treadonly conflicts: IUserDataSyncResourceConflicts[];\n\treadonly onDidChangeConflicts: Event<IUserDataSyncResourceConflicts[]>;\n\n\treadonly onDidChangeLocal: Event<SyncResource>;\n\treadonly onSyncErrors: Event<IUserDataSyncResourceError[]>;\n\n\treadonly lastSyncTime: number | undefined;\n\treadonly onDidChangeLastSyncTime: Event<number>;\n\n\treadonly onDidResetRemote: Event<void>;\n\treadonly onDidResetLocal: Event<void>;\n\n\tcreateSyncTask(manifest: IUserDataManifest | null, disableCache?: boolean): Promise<IUserDataSyncTask>;\n\tcreateManualSyncTask(): Promise<IUserDataManualSyncTask>;\n\tresolveContent(resource: URI): Promise<string | null>;\n\taccept(syncResource: IUserDataSyncResource, resource: URI, content: string | null | undefined, apply: boolean | { force: boolean }): Promise<void>;\n\n\treset(): Promise<void>;\n\tresetRemote(): Promise<void>;\n\tcleanUpRemoteData(): Promise<void>;\n\tresetLocal(): Promise<void>;\n\thasLocalData(): Promise<boolean>;\n\thasPreviouslySynced(): Promise<boolean>;\n\n\treplace(syncResourceHandle: ISyncResourceHandle): Promise<void>;\n\n\tsaveRemoteActivityData(location: URI): Promise<void>;\n\textractActivityData(activityDataResource: URI, location: URI): Promise<void>;\n}\n\nexport const IUserDataSyncResourceProviderService = createDecorator<IUserDataSyncResourceProviderService>('IUserDataSyncResourceProviderService');\nexport interface IUserDataSyncResourceProviderService {\n\t_serviceBrand: any;\n\tgetRemoteSyncedProfiles(): Promise<ISyncUserDataProfile[]>;\n\tgetLocalSyncedProfiles(location?: URI): Promise<ISyncUserDataProfile[]>;\n\tgetRemoteSyncResourceHandles(syncResource: SyncResource, profile?: ISyncUserDataProfile): Promise<ISyncResourceHandle[]>;\n\tgetLocalSyncResourceHandles(syncResource: SyncResource, profile?: ISyncUserDataProfile, location?: URI): Promise<ISyncResourceHandle[]>;\n\tgetAssociatedResources(syncResourceHandle: ISyncResourceHandle): Promise<{ resource: URI; comparableResource: URI }[]>;\n\tgetMachineId(syncResourceHandle: ISyncResourceHandle): Promise<string | undefined>;\n\tgetLocalSyncedMachines(location?: URI): Promise<IUserDataSyncMachine[]>;\n\tresolveContent(resource: URI): Promise<string | null>;\n\tresolveUserDataSyncResource(syncResourceHandle: ISyncResourceHandle): IUserDataSyncResource | undefined;\n}\n\nexport const IUserDataAutoSyncService = createDecorator<IUserDataAutoSyncService>('IUserDataAutoSyncService');\nexport interface IUserDataAutoSyncService {\n\t_serviceBrand: any;\n\treadonly onError: Event<UserDataSyncError>;\n\tturnOn(): Promise<void>;\n\tturnOff(everywhere: boolean): Promise<void>;\n\ttriggerSync(sources: string[], hasToLimitSync: boolean, disableCache: boolean): Promise<void>;\n}\n\nexport const IUserDataSyncUtilService = createDecorator<IUserDataSyncUtilService>('IUserDataSyncUtilService');\nexport interface IUserDataSyncUtilService {\n\treadonly _serviceBrand: undefined;\n\tresolveUserBindings(userbindings: string[]): Promise<IStringDictionary<string>>;\n\tresolveFormattingOptions(resource: URI): Promise<FormattingOptions>;\n\tresolveDefaultIgnoredSettings(): Promise<string[]>;\n}\n\nexport const IUserDataSyncLogService = createDecorator<IUserDataSyncLogService>('IUserDataSyncLogService');\nexport interface IUserDataSyncLogService extends ILogService { }\n\nexport interface IConflictSetting {\n\tkey: string;\n\tlocalValue: any | undefined;\n\tremoteValue: any | undefined;\n}\n\n//#endregion\n\nexport const USER_DATA_SYNC_LOG_ID = 'userDataSync';\nexport const USER_DATA_SYNC_SCHEME = 'vscode-userdata-sync';\nexport const PREVIEW_DIR_NAME = 'preview';\n"]}