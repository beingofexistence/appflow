{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataSync/common/userDataSyncService.ts"],"names":[],"mappings":"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","file":"userDataSyncService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { isEqual } from 'vs/base/common/resources';\nimport { isBoolean, isUndefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUserDataProfile, IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { ExtensionsSynchroniser } from 'vs/platform/userDataSync/common/extensionsSync';\nimport { GlobalStateSynchroniser } from 'vs/platform/userDataSync/common/globalStateSync';\nimport { KeybindingsSynchroniser } from 'vs/platform/userDataSync/common/keybindingsSync';\nimport { SettingsSynchroniser } from 'vs/platform/userDataSync/common/settingsSync';\nimport { SnippetsSynchroniser } from 'vs/platform/userDataSync/common/snippetsSync';\nimport { TasksSynchroniser } from 'vs/platform/userDataSync/common/tasksSync';\nimport { UserDataProfilesManifestSynchroniser } from 'vs/platform/userDataSync/common/userDataProfilesManifestSync';\nimport {\n\tALL_SYNC_RESOURCES, Change, createSyncHeaders, IUserDataManualSyncTask, IUserDataSyncResourceConflicts, IUserDataSyncResourceError,\n\tIUserDataSyncResource, ISyncResourceHandle, IUserDataSyncTask, ISyncUserDataProfile, IUserDataManifest, IUserDataResourceManifest, IUserDataSyncConfiguration,\n\tIUserDataSyncEnablementService, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncService, IUserDataSyncStoreManagementService, IUserDataSyncStoreService,\n\tMergeState, SyncResource, SyncStatus, UserDataSyncError, UserDataSyncErrorCode, UserDataSyncStoreError, USER_DATA_SYNC_CONFIGURATION_SCOPE, IUserDataSyncResourceProviderService, IUserDataActivityData, IUserDataSyncLocalStoreService\n} from 'vs/platform/userDataSync/common/userDataSync';\n\ntype SyncErrorClassification = {\n\towner: 'sandy081';\n\tcomment: 'Information about the error that occurred while syncing';\n\tcode: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'error code' };\n\tservice: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Settings Sync service for which this error has occurred' };\n\tserverCode?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Settings Sync service error code' };\n\turl?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Settings Sync resource URL for which this error has occurred' };\n\tresource?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Settings Sync resource for which this error has occurred' };\n\texecutionId?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Settings Sync execution id for which this error has occurred' };\n};\n\nconst LAST_SYNC_TIME_KEY = 'sync.lastSyncTime';\n\nexport class UserDataSyncService extends Disposable implements IUserDataSyncService {\n\n\t_serviceBrand: any;\n\n\tprivate _status: SyncStatus = SyncStatus.Uninitialized;\n\tget status(): SyncStatus { return this._status; }\n\tprivate _onDidChangeStatus: Emitter<SyncStatus> = this._register(new Emitter<SyncStatus>());\n\treadonly onDidChangeStatus: Event<SyncStatus> = this._onDidChangeStatus.event;\n\n\tprivate _onDidChangeLocal = this._register(new Emitter<SyncResource>());\n\treadonly onDidChangeLocal = this._onDidChangeLocal.event;\n\n\tprivate _conflicts: IUserDataSyncResourceConflicts[] = [];\n\tget conflicts(): IUserDataSyncResourceConflicts[] { return this._conflicts; }\n\tprivate _onDidChangeConflicts = this._register(new Emitter<IUserDataSyncResourceConflicts[]>());\n\treadonly onDidChangeConflicts = this._onDidChangeConflicts.event;\n\n\tprivate _syncErrors: IUserDataSyncResourceError[] = [];\n\tprivate _onSyncErrors = this._register(new Emitter<IUserDataSyncResourceError[]>());\n\treadonly onSyncErrors = this._onSyncErrors.event;\n\n\tprivate _lastSyncTime: number | undefined = undefined;\n\tget lastSyncTime(): number | undefined { return this._lastSyncTime; }\n\tprivate _onDidChangeLastSyncTime: Emitter<number> = this._register(new Emitter<number>());\n\treadonly onDidChangeLastSyncTime: Event<number> = this._onDidChangeLastSyncTime.event;\n\n\tprivate _onDidResetLocal = this._register(new Emitter<void>());\n\treadonly onDidResetLocal = this._onDidResetLocal.event;\n\n\tprivate _onDidResetRemote = this._register(new Emitter<void>());\n\treadonly onDidResetRemote = this._onDidResetRemote.event;\n\n\tprivate activeProfileSynchronizers = new Map<string, [ProfileSynchronizer, IDisposable]>();\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataSyncStoreService private readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataSyncResourceProviderService private readonly userDataSyncResourceProviderService: IUserDataSyncResourceProviderService,\n\t\t@IUserDataSyncLocalStoreService private readonly userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t) {\n\t\tsuper();\n\t\tthis._status = userDataSyncStoreManagementService.userDataSyncStore ? SyncStatus.Idle : SyncStatus.Uninitialized;\n\t\tthis._lastSyncTime = this.storageService.getNumber(LAST_SYNC_TIME_KEY, StorageScope.APPLICATION, undefined);\n\t\tthis._register(toDisposable(() => this.clearActiveProfileSynchronizers()));\n\t}\n\n\tasync createSyncTask(manifest: IUserDataManifest | null, disableCache?: boolean): Promise<IUserDataSyncTask> {\n\t\tthis.checkEnablement();\n\n\t\tthis.logService.info('Sync started.');\n\t\tconst startTime = new Date().getTime();\n\t\tconst executionId = generateUuid();\n\t\ttry {\n\t\t\tconst syncHeaders = createSyncHeaders(executionId);\n\t\t\tif (disableCache) {\n\t\t\t\tsyncHeaders['Cache-Control'] = 'no-cache';\n\t\t\t}\n\t\t\tmanifest = await this.userDataSyncStoreService.manifest(manifest, syncHeaders);\n\t\t} catch (error) {\n\t\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(error);\n\t\t\treportUserDataSyncError(userDataSyncError, executionId, this.userDataSyncStoreManagementService, this.telemetryService);\n\t\t\tthrow userDataSyncError;\n\t\t}\n\n\t\tconst executed = false;\n\t\tconst that = this;\n\t\tlet cancellablePromise: CancelablePromise<void> | undefined;\n\t\treturn {\n\t\t\tmanifest,\n\t\t\tasync run(): Promise<void> {\n\t\t\t\tif (executed) {\n\t\t\t\t\tthrow new Error('Can run a task only once');\n\t\t\t\t}\n\t\t\t\tcancellablePromise = createCancelablePromise(token => that.sync(manifest, false, executionId, token));\n\t\t\t\tawait cancellablePromise.finally(() => cancellablePromise = undefined);\n\t\t\t\tthat.logService.info(`Sync done. Took ${new Date().getTime() - startTime}ms`);\n\t\t\t\tthat.updateLastSyncTime();\n\t\t\t},\n\t\t\tstop(): Promise<void> {\n\t\t\t\tcancellablePromise?.cancel();\n\t\t\t\treturn that.stop();\n\t\t\t}\n\t\t};\n\t}\n\n\tasync createManualSyncTask(): Promise<IUserDataManualSyncTask> {\n\t\tthis.checkEnablement();\n\n\t\tif (this.userDataSyncEnablementService.isEnabled()) {\n\t\t\tthrow new UserDataSyncError('Cannot start manual sync when sync is enabled', UserDataSyncErrorCode.LocalError);\n\t\t}\n\n\t\tthis.logService.info('Sync started.');\n\t\tconst startTime = new Date().getTime();\n\t\tconst executionId = generateUuid();\n\t\tconst syncHeaders = createSyncHeaders(executionId);\n\t\tlet manifest: IUserDataManifest | null;\n\t\ttry {\n\t\t\tmanifest = await this.userDataSyncStoreService.manifest(null, syncHeaders);\n\t\t} catch (error) {\n\t\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(error);\n\t\t\treportUserDataSyncError(userDataSyncError, executionId, this.userDataSyncStoreManagementService, this.telemetryService);\n\t\t\tthrow userDataSyncError;\n\t\t}\n\n\t\t/* Manual sync shall start on clean local state */\n\t\tawait this.resetLocal();\n\n\t\tconst that = this;\n\t\tconst cancellableToken = new CancellationTokenSource();\n\t\treturn {\n\t\t\tid: executionId,\n\t\t\tasync merge(): Promise<void> {\n\t\t\t\treturn that.sync(manifest, true, executionId, cancellableToken.token);\n\t\t\t},\n\t\t\tasync apply(): Promise<void> {\n\t\t\t\ttry {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait that.applyManualSync(manifest, executionId, cancellableToken.token);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (UserDataSyncError.toUserDataSyncError(error).code === UserDataSyncErrorCode.MethodNotFound) {\n\t\t\t\t\t\t\tthat.logService.info('Client is making invalid requests. Cleaning up data...');\n\t\t\t\t\t\t\tawait that.cleanUpRemoteData();\n\t\t\t\t\t\t\tthat.logService.info('Applying manual sync again...');\n\t\t\t\t\t\t\tawait that.applyManualSync(manifest, executionId, cancellableToken.token);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthat.logService.error(error);\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tthat.logService.info(`Sync done. Took ${new Date().getTime() - startTime}ms`);\n\t\t\t\tthat.updateLastSyncTime();\n\t\t\t},\n\t\t\tasync stop(): Promise<void> {\n\t\t\t\tcancellableToken.cancel();\n\t\t\t\tawait that.stop();\n\t\t\t\tawait that.resetLocal();\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate async sync(manifest: IUserDataManifest | null, merge: boolean, executionId: string, token: CancellationToken): Promise<void> {\n\t\tthis._syncErrors = [];\n\t\ttry {\n\t\t\tif (this.status !== SyncStatus.HasConflicts) {\n\t\t\t\tthis.setStatus(SyncStatus.Syncing);\n\t\t\t}\n\n\t\t\t// Sync Default Profile First\n\t\t\tconst defaultProfileSynchronizer = this.getOrCreateActiveProfileSynchronizer(this.userDataProfilesService.defaultProfile, undefined);\n\t\t\tthis._syncErrors.push(...await this.syncProfile(defaultProfileSynchronizer, manifest, merge, executionId, token));\n\n\t\t\t// Sync other profiles\n\t\t\tconst userDataProfileManifestSynchronizer = defaultProfileSynchronizer.enabled.find(s => s.resource === SyncResource.Profiles);\n\t\t\tif (userDataProfileManifestSynchronizer) {\n\t\t\t\tconst syncProfiles = (await (userDataProfileManifestSynchronizer as UserDataProfilesManifestSynchroniser).getLastSyncedProfiles()) || [];\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tawait this.syncRemoteProfiles(syncProfiles, manifest, merge, executionId, token);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._onSyncErrors.fire(this._syncErrors);\n\t\t}\n\t}\n\n\tprivate async syncRemoteProfiles(remoteProfiles: ISyncUserDataProfile[], manifest: IUserDataManifest | null, merge: boolean, executionId: string, token: CancellationToken): Promise<void> {\n\t\tfor (const syncProfile of remoteProfiles) {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst profile = this.userDataProfilesService.profiles.find(p => p.id === syncProfile.id);\n\t\t\tif (!profile) {\n\t\t\t\tthis.logService.error(`Profile with id:${syncProfile.id} and name: ${syncProfile.name} does not exist locally to sync.`);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.logService.info('Syncing profile.', syncProfile.name);\n\t\t\tconst profileSynchronizer = this.getOrCreateActiveProfileSynchronizer(profile, syncProfile);\n\t\t\tthis._syncErrors.push(...await this.syncProfile(profileSynchronizer, manifest, merge, executionId, token));\n\t\t}\n\t\t// Dispose & Delete profile synchronizers which do not exist anymore\n\t\tfor (const [key, profileSynchronizerItem] of this.activeProfileSynchronizers.entries()) {\n\t\t\tif (this.userDataProfilesService.profiles.some(p => p.id === profileSynchronizerItem[0].profile.id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprofileSynchronizerItem[1].dispose();\n\t\t\tthis.activeProfileSynchronizers.delete(key);\n\t\t}\n\t}\n\n\tprivate async applyManualSync(manifest: IUserDataManifest | null, executionId: string, token: CancellationToken): Promise<void> {\n\t\tconst profileSynchronizers = this.getActiveProfileSynchronizers();\n\t\tfor (const profileSynchronizer of profileSynchronizers) {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait profileSynchronizer.apply(executionId, token);\n\t\t}\n\n\t\tconst defaultProfileSynchronizer = profileSynchronizers.find(s => s.profile.isDefault);\n\t\tif (!defaultProfileSynchronizer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst userDataProfileManifestSynchronizer = defaultProfileSynchronizer.enabled.find(s => s.resource === SyncResource.Profiles);\n\t\tif (!userDataProfileManifestSynchronizer) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Sync remote profiles which are not synced locally\n\t\tconst remoteProfiles = (await (userDataProfileManifestSynchronizer as UserDataProfilesManifestSynchroniser).getRemoteSyncedProfiles(manifest?.latest ?? null)) || [];\n\t\tconst remoteProfilesToSync = remoteProfiles.filter(remoteProfile => profileSynchronizers.every(s => s.profile.id !== remoteProfile.id));\n\t\tif (remoteProfilesToSync.length) {\n\t\t\tawait this.syncRemoteProfiles(remoteProfilesToSync, manifest, false, executionId, token);\n\t\t}\n\t}\n\n\tprivate async syncProfile(profileSynchronizer: ProfileSynchronizer, manifest: IUserDataManifest | null, merge: boolean, executionId: string, token: CancellationToken): Promise<IUserDataSyncResourceError[]> {\n\t\tconst errors = await profileSynchronizer.sync(manifest, merge, executionId, token);\n\t\treturn errors.map(([syncResource, error]) => ({ profile: profileSynchronizer.profile, syncResource, error }));\n\t}\n\n\tprivate async stop(): Promise<void> {\n\t\tif (this.status !== SyncStatus.Idle) {\n\t\t\tawait Promise.allSettled(this.getActiveProfileSynchronizers().map(profileSynchronizer => profileSynchronizer.stop()));\n\t\t}\n\t}\n\n\tasync resolveContent(resource: URI): Promise<string | null> {\n\t\tconst content = await this.userDataSyncResourceProviderService.resolveContent(resource);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\t\tfor (const profileSynchronizer of this.getActiveProfileSynchronizers()) {\n\t\t\tfor (const synchronizer of profileSynchronizer.enabled) {\n\t\t\t\tconst content = await synchronizer.resolveContent(resource);\n\t\t\t\tif (content) {\n\t\t\t\t\treturn content;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync replace(syncResourceHandle: ISyncResourceHandle): Promise<void> {\n\t\tthis.checkEnablement();\n\n\t\tconst profileSyncResource = this.userDataSyncResourceProviderService.resolveUserDataSyncResource(syncResourceHandle);\n\t\tif (!profileSyncResource) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst content = await this.resolveContent(syncResourceHandle.uri);\n\t\tif (!content) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.performAction(profileSyncResource.profile, async synchronizer => {\n\t\t\tif (profileSyncResource.syncResource === synchronizer.resource) {\n\t\t\t\tawait synchronizer.replace(content);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\n\t\treturn;\n\t}\n\n\tasync accept(syncResource: IUserDataSyncResource, resource: URI, content: string | null | undefined, apply: boolean | { force: boolean }): Promise<void> {\n\t\tthis.checkEnablement();\n\n\t\tawait this.performAction(syncResource.profile, async synchronizer => {\n\t\t\tif (syncResource.syncResource === synchronizer.resource) {\n\t\t\t\tawait synchronizer.accept(resource, content);\n\t\t\t\tif (apply) {\n\t\t\t\t\tawait synchronizer.apply(isBoolean(apply) ? false : apply.force, createSyncHeaders(generateUuid()));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\tconst result = await this.performAction(this.userDataProfilesService.defaultProfile, async synchronizer => {\n\t\t\t// skip global state synchronizer\n\t\t\tif (synchronizer.resource !== SyncResource.GlobalState && await synchronizer.hasLocalData()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t\treturn !!result;\n\t}\n\n\tasync hasPreviouslySynced(): Promise<boolean> {\n\t\tconst result = await this.performAction(this.userDataProfilesService.defaultProfile, async synchronizer => {\n\t\t\tif (await synchronizer.hasPreviouslySynced()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t\treturn !!result;\n\t}\n\n\tasync reset(): Promise<void> {\n\t\tthis.checkEnablement();\n\t\tawait this.resetRemote();\n\t\tawait this.resetLocal();\n\t}\n\n\tasync resetRemote(): Promise<void> {\n\t\tthis.checkEnablement();\n\t\ttry {\n\t\t\tawait this.userDataSyncStoreService.clear();\n\t\t\tthis.logService.info('Cleared data on server');\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\tthis._onDidResetRemote.fire();\n\t}\n\n\tasync resetLocal(): Promise<void> {\n\t\tthis.checkEnablement();\n\t\tthis._lastSyncTime = undefined;\n\t\tthis.storageService.remove(LAST_SYNC_TIME_KEY, StorageScope.APPLICATION);\n\t\tfor (const [synchronizer] of this.activeProfileSynchronizers.values()) {\n\t\t\ttry {\n\t\t\t\tawait synchronizer.resetLocal();\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t\tthis.clearActiveProfileSynchronizers();\n\t\tthis._onDidResetLocal.fire();\n\t\tthis.logService.info('Did reset the local sync state.');\n\t}\n\n\tasync cleanUpRemoteData(): Promise<void> {\n\t\tconst remoteProfiles = await this.userDataSyncResourceProviderService.getRemoteSyncedProfiles();\n\t\tconst remoteProfileCollections = remoteProfiles.map(profile => profile.collection);\n\t\tconst allCollections = await this.userDataSyncStoreService.getAllCollections();\n\t\tconst redundantCollections = allCollections.filter(c => !remoteProfileCollections.includes(c));\n\t\tif (redundantCollections.length) {\n\t\t\tthis.logService.info(`Deleting ${redundantCollections.length} redundant collections on server`);\n\t\t\tawait Promise.allSettled(redundantCollections.map(collectionId => this.userDataSyncStoreService.deleteCollection(collectionId)));\n\t\t\tthis.logService.info(`Deleted redundant collections on server`);\n\t\t}\n\t\tconst updatedRemoteProfiles = remoteProfiles.filter(profile => allCollections.includes(profile.collection));\n\t\tif (updatedRemoteProfiles.length !== remoteProfiles.length) {\n\t\t\tconst profileManifestSynchronizer = this.instantiationService.createInstance(UserDataProfilesManifestSynchroniser, this.userDataProfilesService.defaultProfile, undefined);\n\t\t\ttry {\n\t\t\t\tthis.logService.info('Resetting the last synced state of profiles');\n\t\t\t\tawait profileManifestSynchronizer.resetLocal();\n\t\t\t\tthis.logService.info('Did reset the last synced state of profiles');\n\t\t\t\tthis.logService.info(`Updating remote profiles with invalid collections on server`);\n\t\t\t\tawait profileManifestSynchronizer.updateRemoteProfiles(updatedRemoteProfiles, null);\n\t\t\t\tthis.logService.info(`Updated remote profiles on server`);\n\t\t\t} finally {\n\t\t\t\tprofileManifestSynchronizer.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tasync saveRemoteActivityData(location: URI): Promise<void> {\n\t\tthis.checkEnablement();\n\t\tconst data = await this.userDataSyncStoreService.getActivityData();\n\t\tawait this.fileService.writeFile(location, data);\n\t}\n\n\tasync extractActivityData(activityDataResource: URI, location: URI): Promise<void> {\n\t\tconst content = (await this.fileService.readFile(activityDataResource)).value.toString();\n\t\tconst activityData: IUserDataActivityData = JSON.parse(content);\n\n\t\tif (activityData.resources) {\n\t\t\tfor (const resource in activityData.resources) {\n\t\t\t\tfor (const version of activityData.resources[resource]) {\n\t\t\t\t\tawait this.userDataSyncLocalStoreService.writeResource(resource as SyncResource, version.content, new Date(version.created * 1000), undefined, location);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (activityData.collections) {\n\t\t\tfor (const collection in activityData.collections) {\n\t\t\t\tfor (const resource in activityData.collections[collection].resources) {\n\t\t\t\t\tfor (const version of activityData.collections[collection].resources?.[resource] ?? []) {\n\t\t\t\t\t\tawait this.userDataSyncLocalStoreService.writeResource(resource as SyncResource, version.content, new Date(version.created * 1000), collection, location);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async performAction<T>(profile: IUserDataProfile, action: (synchroniser: IUserDataSynchroniser) => Promise<T | undefined>): Promise<T | null> {\n\t\tconst disposables = new DisposableStore();\n\t\ttry {\n\t\t\tconst activeProfileSyncronizer = this.activeProfileSynchronizers.get(profile.id);\n\t\t\tif (activeProfileSyncronizer) {\n\t\t\t\tconst result = await this.performActionWithProfileSynchronizer(activeProfileSyncronizer[0], action, disposables);\n\t\t\t\treturn isUndefined(result) ? null : result;\n\t\t\t}\n\n\t\t\tif (profile.isDefault) {\n\t\t\t\tconst defaultProfileSynchronizer = disposables.add(this.instantiationService.createInstance(ProfileSynchronizer, profile, undefined));\n\t\t\t\tconst result = await this.performActionWithProfileSynchronizer(defaultProfileSynchronizer, action, disposables);\n\t\t\t\treturn isUndefined(result) ? null : result;\n\t\t\t}\n\n\t\t\tif (this.userDataProfilesService.isEnabled()) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst userDataProfileManifestSynchronizer = disposables.add(this.instantiationService.createInstance(UserDataProfilesManifestSynchroniser, profile, undefined));\n\t\t\tconst manifest = await this.userDataSyncStoreService.manifest(null);\n\t\t\tconst syncProfiles = (await userDataProfileManifestSynchronizer.getRemoteSyncedProfiles(manifest?.latest ?? null)) || [];\n\t\t\tconst syncProfile = syncProfiles.find(syncProfile => syncProfile.id === profile.id);\n\t\t\tif (syncProfile) {\n\t\t\t\tconst profileSynchronizer = disposables.add(this.instantiationService.createInstance(ProfileSynchronizer, profile, syncProfile.collection));\n\t\t\t\tconst result = await this.performActionWithProfileSynchronizer(profileSynchronizer, action, disposables);\n\t\t\t\treturn isUndefined(result) ? null : result;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tprivate async performActionWithProfileSynchronizer<T>(profileSynchronizer: ProfileSynchronizer, action: (synchroniser: IUserDataSynchroniser) => Promise<T | undefined>, disposables: DisposableStore): Promise<T | undefined> {\n\t\tconst allSynchronizers = [...profileSynchronizer.enabled, ...profileSynchronizer.disabled.reduce<(IUserDataSynchroniser & IDisposable)[]>((synchronizers, syncResource) => {\n\t\t\tif (syncResource !== SyncResource.WorkspaceState) {\n\t\t\t\tsynchronizers.push(disposables.add(profileSynchronizer.createSynchronizer(syncResource)));\n\t\t\t}\n\t\t\treturn synchronizers;\n\t\t}, [])];\n\t\tfor (const synchronizer of allSynchronizers) {\n\t\t\tconst result = await action(synchronizer);\n\t\t\tif (!isUndefined(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate setStatus(status: SyncStatus): void {\n\t\tconst oldStatus = this._status;\n\t\tif (this._status !== status) {\n\t\t\tthis._status = status;\n\t\t\tthis._onDidChangeStatus.fire(status);\n\t\t\tif (oldStatus === SyncStatus.HasConflicts) {\n\t\t\t\tthis.updateLastSyncTime();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateConflicts(): void {\n\t\tconst conflicts = this.getActiveProfileSynchronizers().map(synchronizer => synchronizer.conflicts).flat();\n\t\tif (!equals(this._conflicts, conflicts, (a, b) => a.profile.id === b.profile.id && a.syncResource === b.syncResource && equals(a.conflicts, b.conflicts, (a, b) => isEqual(a.previewResource, b.previewResource)))) {\n\t\t\tthis._conflicts = conflicts;\n\t\t\tthis._onDidChangeConflicts.fire(conflicts);\n\t\t}\n\t}\n\n\tprivate updateLastSyncTime(): void {\n\t\tif (this.status === SyncStatus.Idle) {\n\t\t\tthis._lastSyncTime = new Date().getTime();\n\t\t\tthis.storageService.store(LAST_SYNC_TIME_KEY, this._lastSyncTime, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t\tthis._onDidChangeLastSyncTime.fire(this._lastSyncTime);\n\t\t}\n\t}\n\n\tgetOrCreateActiveProfileSynchronizer(profile: IUserDataProfile, syncProfile: ISyncUserDataProfile | undefined): ProfileSynchronizer {\n\t\tlet activeProfileSynchronizer = this.activeProfileSynchronizers.get(profile.id);\n\t\tif (activeProfileSynchronizer && activeProfileSynchronizer[0].collection !== syncProfile?.collection) {\n\t\t\tthis.logService.error('Profile synchronizer collection does not match with the remote sync profile collection');\n\t\t\tactiveProfileSynchronizer[1].dispose();\n\t\t\tactiveProfileSynchronizer = undefined;\n\t\t\tthis.activeProfileSynchronizers.delete(profile.id);\n\t\t}\n\t\tif (!activeProfileSynchronizer) {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst profileSynchronizer = disposables.add(this.instantiationService.createInstance(ProfileSynchronizer, profile, syncProfile?.collection));\n\t\t\tdisposables.add(profileSynchronizer.onDidChangeStatus(e => this.setStatus(e)));\n\t\t\tdisposables.add(profileSynchronizer.onDidChangeConflicts(conflicts => this.updateConflicts()));\n\t\t\tdisposables.add(profileSynchronizer.onDidChangeLocal(e => this._onDidChangeLocal.fire(e)));\n\t\t\tthis.activeProfileSynchronizers.set(profile.id, activeProfileSynchronizer = [profileSynchronizer, disposables]);\n\t\t}\n\t\treturn activeProfileSynchronizer[0];\n\t}\n\n\tprivate getActiveProfileSynchronizers(): ProfileSynchronizer[] {\n\t\tconst profileSynchronizers: ProfileSynchronizer[] = [];\n\t\tfor (const [profileSynchronizer] of this.activeProfileSynchronizers.values()) {\n\t\t\tprofileSynchronizers.push(profileSynchronizer);\n\t\t}\n\t\treturn profileSynchronizers;\n\t}\n\n\tprivate clearActiveProfileSynchronizers(): void {\n\t\tthis.activeProfileSynchronizers.forEach(([, disposable]) => disposable.dispose());\n\t\tthis.activeProfileSynchronizers.clear();\n\t}\n\n\tprivate checkEnablement(): void {\n\t\tif (!this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\tthrow new Error('Not enabled');\n\t\t}\n\t}\n\n}\n\n\nclass ProfileSynchronizer extends Disposable {\n\n\tprivate _enabled: [IUserDataSynchroniser, number, IDisposable][] = [];\n\tget enabled(): IUserDataSynchroniser[] { return this._enabled.sort((a, b) => a[1] - b[1]).map(([synchronizer]) => synchronizer); }\n\n\tget disabled(): SyncResource[] { return ALL_SYNC_RESOURCES.filter(syncResource => !this.userDataSyncEnablementService.isResourceEnabled(syncResource)); }\n\n\tprivate _status: SyncStatus = SyncStatus.Idle;\n\tget status(): SyncStatus { return this._status; }\n\tprivate _onDidChangeStatus: Emitter<SyncStatus> = this._register(new Emitter<SyncStatus>());\n\treadonly onDidChangeStatus: Event<SyncStatus> = this._onDidChangeStatus.event;\n\n\tprivate _onDidChangeLocal = this._register(new Emitter<SyncResource>());\n\treadonly onDidChangeLocal = this._onDidChangeLocal.event;\n\n\tprivate _conflicts: IUserDataSyncResourceConflicts[] = [];\n\tget conflicts(): IUserDataSyncResourceConflicts[] { return this._conflicts; }\n\tprivate _onDidChangeConflicts = this._register(new Emitter<IUserDataSyncResourceConflicts[]>());\n\treadonly onDidChangeConflicts = this._onDidChangeConflicts.event;\n\n\tconstructor(\n\t\treadonly profile: IUserDataProfile,\n\t\treadonly collection: string | undefined,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(userDataSyncEnablementService.onDidChangeResourceEnablement(([syncResource, enablement]) => this.onDidChangeResourceEnablement(syncResource, enablement)));\n\t\tthis._register(toDisposable(() => this._enabled.splice(0, this._enabled.length).forEach(([, , disposable]) => disposable.dispose())));\n\t\tfor (const syncResource of ALL_SYNC_RESOURCES) {\n\t\t\tif (userDataSyncEnablementService.isResourceEnabled(syncResource)) {\n\t\t\t\tthis.registerSynchronizer(syncResource);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidChangeResourceEnablement(syncResource: SyncResource, enabled: boolean): void {\n\t\tif (enabled) {\n\t\t\tthis.registerSynchronizer(syncResource);\n\t\t} else {\n\t\t\tthis.deRegisterSynchronizer(syncResource);\n\t\t}\n\t}\n\n\tprotected registerSynchronizer(syncResource: SyncResource): void {\n\t\tif (this._enabled.some(([synchronizer]) => synchronizer.resource === syncResource)) {\n\t\t\treturn;\n\t\t}\n\t\tif (syncResource === SyncResource.Extensions && !this.extensionGalleryService.isEnabled()) {\n\t\t\tthis.logService.info('Skipping extensions sync because gallery is not configured');\n\t\t\treturn;\n\t\t}\n\t\tif (syncResource === SyncResource.Profiles) {\n\t\t\tif (!this.profile.isDefault) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.userDataProfilesService.isEnabled()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (syncResource === SyncResource.WorkspaceState) {\n\t\t\treturn;\n\t\t}\n\t\tif (syncResource !== SyncResource.Profiles && this.profile.useDefaultFlags?.[syncResource]) {\n\t\t\tthis.logService.debug(`Skipping syncing ${syncResource} in ${this.profile.name} because it is already synced by default profile`);\n\t\t\treturn;\n\t\t}\n\t\tconst disposables = new DisposableStore();\n\t\tconst synchronizer = disposables.add(this.createSynchronizer(syncResource));\n\t\tdisposables.add(synchronizer.onDidChangeStatus(() => this.updateStatus()));\n\t\tdisposables.add(synchronizer.onDidChangeConflicts(() => this.updateConflicts()));\n\t\tdisposables.add(synchronizer.onDidChangeLocal(() => this._onDidChangeLocal.fire(syncResource)));\n\t\tconst order = this.getOrder(syncResource);\n\t\tthis._enabled.push([synchronizer, order, disposables]);\n\t}\n\n\tprivate deRegisterSynchronizer(syncResource: SyncResource): void {\n\t\tconst index = this._enabled.findIndex(([synchronizer]) => synchronizer.resource === syncResource);\n\t\tif (index !== -1) {\n\t\t\tconst [[synchronizer, , disposable]] = this._enabled.splice(index, 1);\n\t\t\tdisposable.dispose();\n\t\t\tthis.updateStatus();\n\t\t\tPromise.allSettled([synchronizer.stop(), synchronizer.resetLocal()])\n\t\t\t\t.then(null, error => this.logService.error(error));\n\t\t}\n\t}\n\n\tcreateSynchronizer(syncResource: Exclude<SyncResource, SyncResource.WorkspaceState>): IUserDataSynchroniser & IDisposable {\n\t\tswitch (syncResource) {\n\t\t\tcase SyncResource.Settings: return this.instantiationService.createInstance(SettingsSynchroniser, this.profile, this.collection);\n\t\t\tcase SyncResource.Keybindings: return this.instantiationService.createInstance(KeybindingsSynchroniser, this.profile, this.collection);\n\t\t\tcase SyncResource.Snippets: return this.instantiationService.createInstance(SnippetsSynchroniser, this.profile, this.collection);\n\t\t\tcase SyncResource.Tasks: return this.instantiationService.createInstance(TasksSynchroniser, this.profile, this.collection);\n\t\t\tcase SyncResource.GlobalState: return this.instantiationService.createInstance(GlobalStateSynchroniser, this.profile, this.collection);\n\t\t\tcase SyncResource.Extensions: return this.instantiationService.createInstance(ExtensionsSynchroniser, this.profile, this.collection);\n\t\t\tcase SyncResource.Profiles: return this.instantiationService.createInstance(UserDataProfilesManifestSynchroniser, this.profile, this.collection);\n\t\t}\n\t}\n\n\tasync sync(manifest: IUserDataManifest | null, merge: boolean, executionId: string, token: CancellationToken): Promise<[SyncResource, UserDataSyncError][]> {\n\n\t\t// Return if cancellation is requested\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst synchronizers = this.enabled;\n\t\tif (!synchronizers.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\ttry {\n\t\t\tconst syncErrors: [SyncResource, UserDataSyncError][] = [];\n\t\t\tconst syncHeaders = createSyncHeaders(executionId);\n\t\t\tconst resourceManifest: IUserDataResourceManifest | null = (this.collection ? manifest?.collections?.[this.collection]?.latest : manifest?.latest) ?? null;\n\t\t\tconst userDataSyncConfiguration = merge ? await this.getUserDataSyncConfiguration(resourceManifest) : {};\n\t\t\tfor (const synchroniser of synchronizers) {\n\t\t\t\t// Return if cancellation is requested\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\t// Return if resource is not enabled\n\t\t\t\tif (!this.userDataSyncEnablementService.isResourceEnabled(synchroniser.resource)) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (merge) {\n\t\t\t\t\t\tconst preview = await synchroniser.preview(resourceManifest, userDataSyncConfiguration, syncHeaders);\n\t\t\t\t\t\tif (preview) {\n\t\t\t\t\t\t\tfor (const resourcePreview of preview.resourcePreviews) {\n\t\t\t\t\t\t\t\tif ((resourcePreview.localChange !== Change.None || resourcePreview.remoteChange !== Change.None) && resourcePreview.mergeState === MergeState.Preview) {\n\t\t\t\t\t\t\t\t\tawait synchroniser.merge(resourcePreview.previewResource);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait synchroniser.sync(resourceManifest, syncHeaders);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(e);\n\t\t\t\t\treportUserDataSyncError(userDataSyncError, executionId, this.userDataSyncStoreManagementService, this.telemetryService);\n\t\t\t\t\tif (canBailout(e)) {\n\t\t\t\t\t\tthrow userDataSyncError;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Log and and continue\n\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t\tthis.logService.error(`${synchroniser.resource}: ${toErrorMessage(e)}`);\n\t\t\t\t\tsyncErrors.push([synchroniser.resource, userDataSyncError]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn syncErrors;\n\t\t} finally {\n\t\t\tthis.updateStatus();\n\t\t}\n\t}\n\n\tasync apply(executionId: string, token: CancellationToken): Promise<void> {\n\t\tconst syncHeaders = createSyncHeaders(executionId);\n\t\tfor (const synchroniser of this.enabled) {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait synchroniser.apply(false, syncHeaders);\n\t\t\t} catch (e) {\n\t\t\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(e);\n\t\t\t\treportUserDataSyncError(userDataSyncError, executionId, this.userDataSyncStoreManagementService, this.telemetryService);\n\t\t\t\tif (canBailout(e)) {\n\t\t\t\t\tthrow userDataSyncError;\n\t\t\t\t}\n\n\t\t\t\t// Log and and continue\n\t\t\t\tthis.logService.error(e);\n\t\t\t\tthis.logService.error(`${synchroniser.resource}: ${toErrorMessage(e)}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tfor (const synchroniser of this.enabled) {\n\t\t\ttry {\n\t\t\t\tif (synchroniser.status !== SyncStatus.Idle) {\n\t\t\t\t\tawait synchroniser.stop();\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync resetLocal(): Promise<void> {\n\t\tfor (const synchroniser of this.enabled) {\n\t\t\ttry {\n\t\t\t\tawait synchroniser.resetLocal();\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(`${synchroniser.resource}: ${toErrorMessage(e)}`);\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async getUserDataSyncConfiguration(manifest: IUserDataResourceManifest | null): Promise<IUserDataSyncConfiguration> {\n\t\tif (!this.profile.isDefault) {\n\t\t\treturn {};\n\t\t}\n\t\tconst local = this.configurationService.getValue<IUserDataSyncConfiguration>(USER_DATA_SYNC_CONFIGURATION_SCOPE);\n\t\tconst settingsSynchronizer = this.enabled.find(synchronizer => synchronizer instanceof SettingsSynchroniser);\n\t\tif (settingsSynchronizer) {\n\t\t\tconst remote = await (<SettingsSynchroniser>settingsSynchronizer).getRemoteUserDataSyncConfiguration(manifest);\n\t\t\treturn { ...local, ...remote };\n\t\t}\n\t\treturn local;\n\t}\n\n\tprivate setStatus(status: SyncStatus): void {\n\t\tif (this._status !== status) {\n\t\t\tthis._status = status;\n\t\t\tthis._onDidChangeStatus.fire(status);\n\t\t}\n\t}\n\n\tprivate updateStatus(): void {\n\t\tthis.updateConflicts();\n\t\tif (this.enabled.some(s => s.status === SyncStatus.HasConflicts)) {\n\t\t\treturn this.setStatus(SyncStatus.HasConflicts);\n\t\t}\n\t\tif (this.enabled.some(s => s.status === SyncStatus.Syncing)) {\n\t\t\treturn this.setStatus(SyncStatus.Syncing);\n\t\t}\n\t\treturn this.setStatus(SyncStatus.Idle);\n\t}\n\n\tprivate updateConflicts(): void {\n\t\tconst conflicts = this.enabled.filter(s => s.status === SyncStatus.HasConflicts)\n\t\t\t.filter(s => s.conflicts.conflicts.length > 0)\n\t\t\t.map(s => s.conflicts);\n\t\tif (!equals(this._conflicts, conflicts, (a, b) => a.syncResource === b.syncResource && equals(a.conflicts, b.conflicts, (a, b) => isEqual(a.previewResource, b.previewResource)))) {\n\t\t\tthis._conflicts = conflicts;\n\t\t\tthis._onDidChangeConflicts.fire(conflicts);\n\t\t}\n\t}\n\n\tprivate getOrder(syncResource: SyncResource): number {\n\t\tswitch (syncResource) {\n\t\t\tcase SyncResource.Settings: return 0;\n\t\t\tcase SyncResource.Keybindings: return 1;\n\t\t\tcase SyncResource.Snippets: return 2;\n\t\t\tcase SyncResource.Tasks: return 3;\n\t\t\tcase SyncResource.GlobalState: return 4;\n\t\t\tcase SyncResource.Extensions: return 5;\n\t\t\tcase SyncResource.Profiles: return 6;\n\t\t\tcase SyncResource.WorkspaceState: return 7;\n\t\t}\n\t}\n\n}\n\nfunction canBailout(e: any): boolean {\n\tif (e instanceof UserDataSyncError) {\n\t\tswitch (e.code) {\n\t\t\tcase UserDataSyncErrorCode.MethodNotFound:\n\t\t\tcase UserDataSyncErrorCode.TooLarge:\n\t\t\tcase UserDataSyncErrorCode.TooManyRequests:\n\t\t\tcase UserDataSyncErrorCode.TooManyRequestsAndRetryAfter:\n\t\t\tcase UserDataSyncErrorCode.LocalTooManyRequests:\n\t\t\tcase UserDataSyncErrorCode.LocalTooManyProfiles:\n\t\t\tcase UserDataSyncErrorCode.Gone:\n\t\t\tcase UserDataSyncErrorCode.UpgradeRequired:\n\t\t\tcase UserDataSyncErrorCode.IncompatibleRemoteContent:\n\t\t\tcase UserDataSyncErrorCode.IncompatibleLocalContent:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction reportUserDataSyncError(userDataSyncError: UserDataSyncError, executionId: string, userDataSyncStoreManagementService: IUserDataSyncStoreManagementService, telemetryService: ITelemetryService): void {\n\ttelemetryService.publicLog2<{ code: string; service: string; serverCode?: string; url?: string; resource?: string; executionId?: string }, SyncErrorClassification>('sync/error',\n\t\t{\n\t\t\tcode: userDataSyncError.code,\n\t\t\tserverCode: userDataSyncError instanceof UserDataSyncStoreError ? String(userDataSyncError.serverCode) : undefined,\n\t\t\turl: userDataSyncError instanceof UserDataSyncStoreError ? userDataSyncError.url : undefined,\n\t\t\tresource: userDataSyncError.resource,\n\t\t\texecutionId,\n\t\t\tservice: userDataSyncStoreManagementService.userDataSyncStore!.url.toString()\n\t\t});\n}\n"]}