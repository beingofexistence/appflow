{"version":3,"sources":["vs/platform/userDataSync/common/abstractSynchronizer.ts"],"names":[],"mappings":"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","file":"abstractSynchronizer.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { CancelablePromise, createCancelablePromise, ThrottledDelayer } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { parse, ParseError } from 'vs/base/common/json';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IExtUri } from 'vs/base/common/resources';\nimport { uppercaseFirstLetter } from 'vs/base/common/strings';\nimport { isUndefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IHeaders } from 'vs/base/parts/request/common/request';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { FileChangesEvent, FileOperationError, FileOperationResult, IFileContent, IFileService, toFileOperationResult } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getServiceMachineId } from 'vs/platform/externalServices/common/serviceMachineId';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { Change, getLastSyncResourceUri, IRemoteUserData, IResourcePreview as IBaseResourcePreview, ISyncData, IUserDataSyncResourcePreview as IBaseSyncResourcePreview, IUserData, IUserDataSyncResourceInitializer, IUserDataSyncLocalStoreService, IUserDataSyncConfiguration, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncEnablementService, IUserDataSyncStoreService, IUserDataSyncUtilService, MergeState, PREVIEW_DIR_NAME, SyncResource, SyncStatus, UserDataSyncError, UserDataSyncErrorCode, USER_DATA_SYNC_CONFIGURATION_SCOPE, USER_DATA_SYNC_SCHEME, IUserDataResourceManifest, getPathSegments, IUserDataSyncResourceConflicts, IUserDataSyncResource } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IUserDataProfile, IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\n\ntype IncompatibleSyncSourceClassification = {\n\towner: 'sandy081';\n\tcomment: 'Information about the sync resource that is incompatible';\n\tsource: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'settings sync resource. eg., settings, keybindings...' };\n};\n\nexport function isRemoteUserData(thing: any): thing is IRemoteUserData {\n\tif (thing\n\t\t&& (thing.ref !== undefined && typeof thing.ref === 'string' && thing.ref !== '')\n\t\t&& (thing.syncData !== undefined && (thing.syncData === null || isSyncData(thing.syncData)))) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nexport function isSyncData(thing: any): thing is ISyncData {\n\tif (thing\n\t\t&& (thing.version !== undefined && typeof thing.version === 'number')\n\t\t&& (thing.content !== undefined && typeof thing.content === 'string')) {\n\n\t\t// backward compatibility\n\t\tif (Object.keys(thing).length === 2) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (Object.keys(thing).length === 3\n\t\t\t&& (thing.machineId !== undefined && typeof thing.machineId === 'string')) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function getSyncResourceLogLabel(syncResource: SyncResource, profile: IUserDataProfile): string {\n\treturn `${uppercaseFirstLetter(syncResource)}${profile.isDefault ? '' : ` (${profile.name})`}`;\n}\n\nexport interface IResourcePreview {\n\n\treadonly baseResource: URI;\n\treadonly baseContent: string | null;\n\n\treadonly remoteResource: URI;\n\treadonly remoteContent: string | null;\n\treadonly remoteChange: Change;\n\n\treadonly localResource: URI;\n\treadonly localContent: string | null;\n\treadonly localChange: Change;\n\n\treadonly previewResource: URI;\n\treadonly acceptedResource: URI;\n}\n\nexport interface IAcceptResult {\n\treadonly content: string | null;\n\treadonly localChange: Change;\n\treadonly remoteChange: Change;\n}\n\nexport interface IMergeResult extends IAcceptResult {\n\treadonly hasConflicts: boolean;\n}\n\ninterface IEditableResourcePreview extends IBaseResourcePreview, IResourcePreview {\n\tlocalChange: Change;\n\tremoteChange: Change;\n\tmergeState: MergeState;\n\tacceptResult?: IAcceptResult;\n}\n\nexport interface ISyncResourcePreview extends IBaseSyncResourcePreview {\n\treadonly remoteUserData: IRemoteUserData;\n\treadonly lastSyncUserData: IRemoteUserData | null;\n\treadonly resourcePreviews: IEditableResourcePreview[];\n}\n\ninterface ILastSyncUserDataState {\n\treadonly ref: string;\n\treadonly version: string | undefined;\n\t[key: string]: any;\n}\n\nexport abstract class AbstractSynchroniser extends Disposable implements IUserDataSynchroniser {\n\n\tprivate syncPreviewPromise: CancelablePromise<ISyncResourcePreview> | null = null;\n\n\tprotected readonly syncFolder: URI;\n\tprotected readonly syncPreviewFolder: URI;\n\tprotected readonly extUri: IExtUri;\n\tprotected readonly currentMachineIdPromise: Promise<string>;\n\n\tprivate _status: SyncStatus = SyncStatus.Idle;\n\tget status(): SyncStatus { return this._status; }\n\tprivate _onDidChangStatus: Emitter<SyncStatus> = this._register(new Emitter<SyncStatus>());\n\treadonly onDidChangeStatus: Event<SyncStatus> = this._onDidChangStatus.event;\n\n\tprivate _conflicts: IBaseResourcePreview[] = [];\n\tget conflicts(): IUserDataSyncResourceConflicts { return { ...this.syncResource, conflicts: this._conflicts }; }\n\tprivate _onDidChangeConflicts = this._register(new Emitter<IUserDataSyncResourceConflicts>());\n\treadonly onDidChangeConflicts = this._onDidChangeConflicts.event;\n\n\tprivate readonly localChangeTriggerThrottler = this._register(new ThrottledDelayer<void>(50));\n\tprivate readonly _onDidChangeLocal: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeLocal: Event<void> = this._onDidChangeLocal.event;\n\n\tprotected readonly lastSyncResource: URI;\n\tprivate readonly lastSyncUserDataStateKey = `${this.collection ? `${this.collection}.` : ''}${this.syncResource.syncResource}.lastSyncUserData`;\n\tprivate hasSyncResourceStateVersionChanged: boolean = false;\n\tprotected readonly syncResourceLogLabel: string;\n\n\tprotected syncHeaders: IHeaders = {};\n\n\treadonly resource = this.syncResource.syncResource;\n\n\tconstructor(\n\t\treadonly syncResource: IUserDataSyncResource,\n\t\treadonly collection: string | undefined,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IEnvironmentService protected readonly environmentService: IEnvironmentService,\n\t\t@IStorageService protected readonly storageService: IStorageService,\n\t\t@IUserDataSyncStoreService protected readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService protected readonly userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncEnablementService protected readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService protected readonly telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService protected readonly logService: IUserDataSyncLogService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\t\tthis.syncResourceLogLabel = getSyncResourceLogLabel(syncResource.syncResource, syncResource.profile);\n\t\tthis.extUri = uriIdentityService.extUri;\n\t\tthis.syncFolder = this.extUri.joinPath(environmentService.userDataSyncHome, ...getPathSegments(syncResource.profile.isDefault ? undefined : syncResource.profile.id, syncResource.syncResource));\n\t\tthis.syncPreviewFolder = this.extUri.joinPath(this.syncFolder, PREVIEW_DIR_NAME);\n\t\tthis.lastSyncResource = getLastSyncResourceUri(syncResource.profile.isDefault ? undefined : syncResource.profile.id, syncResource.syncResource, environmentService, this.extUri);\n\t\tthis.currentMachineIdPromise = getServiceMachineId(environmentService, fileService, storageService);\n\t}\n\n\tprotected triggerLocalChange(): void {\n\t\tthis.localChangeTriggerThrottler.trigger(() => this.doTriggerLocalChange());\n\t}\n\n\tprotected async doTriggerLocalChange(): Promise<void> {\n\n\t\t// Sync again if current status is in conflicts\n\t\tif (this.status === SyncStatus.HasConflicts) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: In conflicts state and local change detected. Syncing again...`);\n\t\t\tconst preview = await this.syncPreviewPromise!;\n\t\t\tthis.syncPreviewPromise = null;\n\t\t\tconst status = await this.performSync(preview.remoteUserData, preview.lastSyncUserData, true, this.getUserDataSyncConfiguration());\n\t\t\tthis.setStatus(status);\n\t\t}\n\n\t\t// Check if local change causes remote change\n\t\telse {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Checking for local changes...`);\n\t\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\t\tconst hasRemoteChanged = lastSyncUserData ? await this.hasRemoteChanged(lastSyncUserData) : true;\n\t\t\tif (hasRemoteChanged) {\n\t\t\t\tthis._onDidChangeLocal.fire();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected setStatus(status: SyncStatus): void {\n\t\tif (this._status !== status) {\n\t\t\tthis._status = status;\n\t\t\tthis._onDidChangStatus.fire(status);\n\t\t}\n\t}\n\n\tasync sync(manifest: IUserDataResourceManifest | null, headers: IHeaders = {}): Promise<void> {\n\t\tawait this._sync(manifest, true, this.getUserDataSyncConfiguration(), headers);\n\t}\n\n\tasync preview(manifest: IUserDataResourceManifest | null, userDataSyncConfiguration: IUserDataSyncConfiguration, headers: IHeaders = {}): Promise<ISyncResourcePreview | null> {\n\t\treturn this._sync(manifest, false, userDataSyncConfiguration, headers);\n\t}\n\n\tasync apply(force: boolean, headers: IHeaders = {}): Promise<ISyncResourcePreview | null> {\n\t\ttry {\n\t\t\tthis.syncHeaders = { ...headers };\n\n\t\t\tconst status = await this.doApply(force);\n\t\t\tthis.setStatus(status);\n\n\t\t\treturn this.syncPreviewPromise;\n\t\t} finally {\n\t\t\tthis.syncHeaders = {};\n\t\t}\n\t}\n\n\tprivate async _sync(manifest: IUserDataResourceManifest | null, apply: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration, headers: IHeaders): Promise<ISyncResourcePreview | null> {\n\t\ttry {\n\t\t\tthis.syncHeaders = { ...headers };\n\n\t\t\tif (this.status === SyncStatus.HasConflicts) {\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing ${this.resource.toLowerCase()} as there are conflicts.`);\n\t\t\t\treturn this.syncPreviewPromise;\n\t\t\t}\n\n\t\t\tif (this.status === SyncStatus.Syncing) {\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing ${this.resource.toLowerCase()} as it is running already.`);\n\t\t\t\treturn this.syncPreviewPromise;\n\t\t\t}\n\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Started synchronizing ${this.resource.toLowerCase()}...`);\n\t\t\tthis.setStatus(SyncStatus.Syncing);\n\n\t\t\tlet status: SyncStatus = SyncStatus.Idle;\n\t\t\ttry {\n\t\t\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\t\t\tconst remoteUserData = await this.getLatestRemoteUserData(manifest, lastSyncUserData);\n\t\t\t\tstatus = await this.performSync(remoteUserData, lastSyncUserData, apply, userDataSyncConfiguration);\n\t\t\t\tif (status === SyncStatus.HasConflicts) {\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Detected conflicts while synchronizing ${this.resource.toLowerCase()}.`);\n\t\t\t\t} else if (status === SyncStatus.Idle) {\n\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Finished synchronizing ${this.resource.toLowerCase()}.`);\n\t\t\t\t}\n\t\t\t\treturn this.syncPreviewPromise || null;\n\t\t\t} finally {\n\t\t\t\tthis.setStatus(status);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.syncHeaders = {};\n\t\t}\n\t}\n\n\tasync replace(content: string): Promise<boolean> {\n\t\tconst syncData = this.parseSyncData(content);\n\t\tif (!syncData) {\n\t\t\treturn false;\n\t\t}\n\n\t\tawait this.stop();\n\n\t\ttry {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Started resetting ${this.resource.toLowerCase()}...`);\n\t\t\tthis.setStatus(SyncStatus.Syncing);\n\t\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\t\tconst remoteUserData = await this.getLatestRemoteUserData(null, lastSyncUserData);\n\t\t\tconst isRemoteDataFromCurrentMachine = await this.isRemoteDataFromCurrentMachine(remoteUserData);\n\n\t\t\t/* use replace sync data */\n\t\t\tconst resourcePreviewResults = await this.generateSyncPreview({ ref: remoteUserData.ref, syncData }, lastSyncUserData, isRemoteDataFromCurrentMachine, this.getUserDataSyncConfiguration(), CancellationToken.None);\n\n\t\t\tconst resourcePreviews: [IResourcePreview, IAcceptResult][] = [];\n\t\t\tfor (const resourcePreviewResult of resourcePreviewResults) {\n\t\t\t\t/* Accept remote resource */\n\t\t\t\tconst acceptResult: IAcceptResult = await this.getAcceptResult(resourcePreviewResult, resourcePreviewResult.remoteResource, undefined, CancellationToken.None);\n\t\t\t\t/* compute remote change */\n\t\t\t\tconst { remoteChange } = await this.getAcceptResult(resourcePreviewResult, resourcePreviewResult.previewResource, resourcePreviewResult.remoteContent, CancellationToken.None);\n\t\t\t\tresourcePreviews.push([resourcePreviewResult, { ...acceptResult, remoteChange: remoteChange !== Change.None ? remoteChange : Change.Modified }]);\n\t\t\t}\n\n\t\t\tawait this.applyResult(remoteUserData, lastSyncUserData, resourcePreviews, false);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Finished resetting ${this.resource.toLowerCase()}.`);\n\t\t} finally {\n\t\t\tthis.setStatus(SyncStatus.Idle);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async isRemoteDataFromCurrentMachine(remoteUserData: IRemoteUserData): Promise<boolean> {\n\t\tconst machineId = await this.currentMachineIdPromise;\n\t\treturn !!remoteUserData.syncData?.machineId && remoteUserData.syncData.machineId === machineId;\n\t}\n\n\tprotected async getLatestRemoteUserData(manifest: IUserDataResourceManifest | null, lastSyncUserData: IRemoteUserData | null): Promise<IRemoteUserData> {\n\t\tif (lastSyncUserData) {\n\n\t\t\tconst latestRef = manifest ? manifest[this.resource] : undefined;\n\n\t\t\t// Last time synced resource and latest resource on server are same\n\t\t\tif (lastSyncUserData.ref === latestRef) {\n\t\t\t\treturn lastSyncUserData;\n\t\t\t}\n\n\t\t\t// There is no resource on server and last time it was synced with no resource\n\t\t\tif (latestRef === undefined && lastSyncUserData.syncData === null) {\n\t\t\t\treturn lastSyncUserData;\n\t\t\t}\n\t\t}\n\t\treturn this.getRemoteUserData(lastSyncUserData);\n\t}\n\n\tprivate async performSync(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, apply: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration): Promise<SyncStatus> {\n\t\tif (remoteUserData.syncData && remoteUserData.syncData.version > this.version) {\n\t\t\t// current version is not compatible with cloud version\n\t\t\tthis.telemetryService.publicLog2<{ source: string }, IncompatibleSyncSourceClassification>('sync/incompatible', { source: this.resource });\n\t\t\tthrow new UserDataSyncError(localize({ key: 'incompatible', comment: ['This is an error while syncing a resource that its local version is not compatible with its remote version.'] }, \"Cannot sync {0} as its local version {1} is not compatible with its remote version {2}\", this.resource, this.version, remoteUserData.syncData.version), UserDataSyncErrorCode.IncompatibleLocalContent, this.resource);\n\t\t}\n\n\t\ttry {\n\t\t\treturn await this.doSync(remoteUserData, lastSyncUserData, apply, userDataSyncConfiguration);\n\t\t} catch (e) {\n\t\t\tif (e instanceof UserDataSyncError) {\n\t\t\t\tswitch (e.code) {\n\n\t\t\t\t\tcase UserDataSyncErrorCode.LocalPreconditionFailed:\n\t\t\t\t\t\t// Rejected as there is a new local version. Syncing again...\n\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Failed to synchronize ${this.syncResourceLogLabel} as there is a new local version available. Synchronizing again...`);\n\t\t\t\t\t\treturn this.performSync(remoteUserData, lastSyncUserData, apply, userDataSyncConfiguration);\n\n\t\t\t\t\tcase UserDataSyncErrorCode.Conflict:\n\t\t\t\t\tcase UserDataSyncErrorCode.PreconditionFailed:\n\t\t\t\t\t\t// Rejected as there is a new remote version. Syncing again...\n\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Failed to synchronize as there is a new remote version available. Synchronizing again...`);\n\n\t\t\t\t\t\t// Avoid cache and get latest remote user data - https://github.com/microsoft/vscode/issues/90624\n\t\t\t\t\t\tremoteUserData = await this.getRemoteUserData(null);\n\n\t\t\t\t\t\t// Get the latest last sync user data. Because multiple parallel syncs (in Web) could share same last sync data\n\t\t\t\t\t\t// and one of them successfully updated remote and last sync state.\n\t\t\t\t\t\tlastSyncUserData = await this.getLastSyncUserData();\n\n\t\t\t\t\t\treturn this.performSync(remoteUserData, lastSyncUserData, apply, userDataSyncConfiguration);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tprotected async doSync(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, apply: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration): Promise<SyncStatus> {\n\t\ttry {\n\n\t\t\tconst isRemoteDataFromCurrentMachine = await this.isRemoteDataFromCurrentMachine(remoteUserData);\n\t\t\tconst acceptRemote = !isRemoteDataFromCurrentMachine && lastSyncUserData === null && this.getStoredLastSyncUserDataStateContent() !== undefined;\n\t\t\tconst merge = apply && !acceptRemote;\n\n\t\t\t// generate or use existing preview\n\t\t\tif (!this.syncPreviewPromise) {\n\t\t\t\tthis.syncPreviewPromise = createCancelablePromise(token => this.doGenerateSyncResourcePreview(remoteUserData, lastSyncUserData, isRemoteDataFromCurrentMachine, merge, userDataSyncConfiguration, token));\n\t\t\t}\n\n\t\t\tlet preview = await this.syncPreviewPromise;\n\n\t\t\tif (apply && acceptRemote) {\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Accepting remote because it was synced before and the last sync data is not available.`);\n\t\t\t\tfor (const resourcePreview of preview.resourcePreviews) {\n\t\t\t\t\tpreview = (await this.accept(resourcePreview.remoteResource)) || preview;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.updateConflicts(preview.resourcePreviews);\n\t\t\tif (preview.resourcePreviews.some(({ mergeState }) => mergeState === MergeState.Conflict)) {\n\t\t\t\treturn SyncStatus.HasConflicts;\n\t\t\t}\n\n\t\t\tif (apply) {\n\t\t\t\treturn await this.doApply(false);\n\t\t\t}\n\n\t\t\treturn SyncStatus.Syncing;\n\n\t\t} catch (error) {\n\n\t\t\t// reset preview on error\n\t\t\tthis.syncPreviewPromise = null;\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync merge(resource: URI): Promise<ISyncResourcePreview | null> {\n\t\tawait this.updateSyncResourcePreview(resource, async (resourcePreview) => {\n\t\t\tconst mergeResult = await this.getMergeResult(resourcePreview, CancellationToken.None);\n\t\t\tawait this.fileService.writeFile(resourcePreview.previewResource, VSBuffer.fromString(mergeResult?.content || ''));\n\t\t\tconst acceptResult: IAcceptResult | undefined = mergeResult && !mergeResult.hasConflicts\n\t\t\t\t? await this.getAcceptResult(resourcePreview, resourcePreview.previewResource, undefined, CancellationToken.None)\n\t\t\t\t: undefined;\n\t\t\tresourcePreview.acceptResult = acceptResult;\n\t\t\tresourcePreview.mergeState = mergeResult.hasConflicts ? MergeState.Conflict : acceptResult ? MergeState.Accepted : MergeState.Preview;\n\t\t\tresourcePreview.localChange = acceptResult ? acceptResult.localChange : mergeResult.localChange;\n\t\t\tresourcePreview.remoteChange = acceptResult ? acceptResult.remoteChange : mergeResult.remoteChange;\n\t\t\treturn resourcePreview;\n\t\t});\n\t\treturn this.syncPreviewPromise;\n\t}\n\n\tasync accept(resource: URI, content?: string | null): Promise<ISyncResourcePreview | null> {\n\t\tawait this.updateSyncResourcePreview(resource, async (resourcePreview) => {\n\t\t\tconst acceptResult = await this.getAcceptResult(resourcePreview, resource, content, CancellationToken.None);\n\t\t\tresourcePreview.acceptResult = acceptResult;\n\t\t\tresourcePreview.mergeState = MergeState.Accepted;\n\t\t\tresourcePreview.localChange = acceptResult.localChange;\n\t\t\tresourcePreview.remoteChange = acceptResult.remoteChange;\n\t\t\treturn resourcePreview;\n\t\t});\n\t\treturn this.syncPreviewPromise;\n\t}\n\n\tasync discard(resource: URI): Promise<ISyncResourcePreview | null> {\n\t\tawait this.updateSyncResourcePreview(resource, async (resourcePreview) => {\n\t\t\tconst mergeResult = await this.getMergeResult(resourcePreview, CancellationToken.None);\n\t\t\tawait this.fileService.writeFile(resourcePreview.previewResource, VSBuffer.fromString(mergeResult.content || ''));\n\t\t\tresourcePreview.acceptResult = undefined;\n\t\t\tresourcePreview.mergeState = MergeState.Preview;\n\t\t\tresourcePreview.localChange = mergeResult.localChange;\n\t\t\tresourcePreview.remoteChange = mergeResult.remoteChange;\n\t\t\treturn resourcePreview;\n\t\t});\n\t\treturn this.syncPreviewPromise;\n\t}\n\n\tprivate async updateSyncResourcePreview(resource: URI, updateResourcePreview: (resourcePreview: IEditableResourcePreview) => Promise<IEditableResourcePreview>): Promise<void> {\n\t\tif (!this.syncPreviewPromise) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet preview = await this.syncPreviewPromise;\n\t\tconst index = preview.resourcePreviews.findIndex(({ localResource, remoteResource, previewResource }) =>\n\t\t\tthis.extUri.isEqual(localResource, resource) || this.extUri.isEqual(remoteResource, resource) || this.extUri.isEqual(previewResource, resource));\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.syncPreviewPromise = createCancelablePromise(async token => {\n\t\t\tconst resourcePreviews = [...preview.resourcePreviews];\n\t\t\tresourcePreviews[index] = await updateResourcePreview(resourcePreviews[index]);\n\t\t\treturn {\n\t\t\t\t...preview,\n\t\t\t\tresourcePreviews\n\t\t\t};\n\t\t});\n\n\t\tpreview = await this.syncPreviewPromise;\n\t\tthis.updateConflicts(preview.resourcePreviews);\n\t\tif (preview.resourcePreviews.some(({ mergeState }) => mergeState === MergeState.Conflict)) {\n\t\t\tthis.setStatus(SyncStatus.HasConflicts);\n\t\t} else {\n\t\t\tthis.setStatus(SyncStatus.Syncing);\n\t\t}\n\t}\n\n\tprivate async doApply(force: boolean): Promise<SyncStatus> {\n\t\tif (!this.syncPreviewPromise) {\n\t\t\treturn SyncStatus.Idle;\n\t\t}\n\n\t\tconst preview = await this.syncPreviewPromise;\n\n\t\t// check for conflicts\n\t\tif (preview.resourcePreviews.some(({ mergeState }) => mergeState === MergeState.Conflict)) {\n\t\t\treturn SyncStatus.HasConflicts;\n\t\t}\n\n\t\t// check if all are accepted\n\t\tif (preview.resourcePreviews.some(({ mergeState }) => mergeState !== MergeState.Accepted)) {\n\t\t\treturn SyncStatus.Syncing;\n\t\t}\n\n\t\t// apply preview\n\t\tawait this.applyResult(preview.remoteUserData, preview.lastSyncUserData, preview.resourcePreviews.map(resourcePreview => ([resourcePreview, resourcePreview.acceptResult!])), force);\n\n\t\t// reset preview\n\t\tthis.syncPreviewPromise = null;\n\n\t\t// reset preview folder\n\t\tawait this.clearPreviewFolder();\n\n\t\treturn SyncStatus.Idle;\n\t}\n\n\tprivate async clearPreviewFolder(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.del(this.syncPreviewFolder, { recursive: true });\n\t\t} catch (error) { /* Ignore */ }\n\t}\n\n\tprivate updateConflicts(resourcePreviews: IEditableResourcePreview[]): void {\n\t\tconst conflicts = resourcePreviews.filter(({ mergeState }) => mergeState === MergeState.Conflict);\n\t\tif (!equals(this._conflicts, conflicts, (a, b) => this.extUri.isEqual(a.previewResource, b.previewResource))) {\n\t\t\tthis._conflicts = conflicts;\n\t\t\tthis._onDidChangeConflicts.fire(this.conflicts);\n\t\t}\n\t}\n\n\tasync hasPreviouslySynced(): Promise<boolean> {\n\t\tconst lastSyncData = await this.getLastSyncUserData();\n\t\treturn !!lastSyncData && lastSyncData.syncData !== null /* `null` sync data implies resource is not synced */;\n\t}\n\n\tprotected async resolvePreviewContent(uri: URI): Promise<string | null> {\n\t\tconst syncPreview = this.syncPreviewPromise ? await this.syncPreviewPromise : null;\n\t\tif (syncPreview) {\n\t\t\tfor (const resourcePreview of syncPreview.resourcePreviews) {\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.acceptedResource, uri)) {\n\t\t\t\t\treturn resourcePreview.acceptResult ? resourcePreview.acceptResult.content : null;\n\t\t\t\t}\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.remoteResource, uri)) {\n\t\t\t\t\treturn resourcePreview.remoteContent;\n\t\t\t\t}\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.localResource, uri)) {\n\t\t\t\t\treturn resourcePreview.localContent;\n\t\t\t\t}\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.baseResource, uri)) {\n\t\t\t\t\treturn resourcePreview.baseContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync resetLocal(): Promise<void> {\n\t\tthis.storageService.remove(this.lastSyncUserDataStateKey, StorageScope.APPLICATION);\n\t\ttry {\n\t\t\tawait this.fileService.del(this.lastSyncResource);\n\t\t} catch (error) {\n\t\t\tif (toFileOperationResult(error) !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doGenerateSyncResourcePreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, isRemoteDataFromCurrentMachine: boolean, merge: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration, token: CancellationToken): Promise<ISyncResourcePreview> {\n\t\tconst resourcePreviewResults = await this.generateSyncPreview(remoteUserData, lastSyncUserData, isRemoteDataFromCurrentMachine, userDataSyncConfiguration, token);\n\n\t\tconst resourcePreviews: IEditableResourcePreview[] = [];\n\t\tfor (const resourcePreviewResult of resourcePreviewResults) {\n\t\t\tconst acceptedResource = resourcePreviewResult.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\t\t\t/* No change -> Accept */\n\t\t\tif (resourcePreviewResult.localChange === Change.None && resourcePreviewResult.remoteChange === Change.None) {\n\t\t\t\tresourcePreviews.push({\n\t\t\t\t\t...resourcePreviewResult,\n\t\t\t\t\tacceptedResource,\n\t\t\t\t\tacceptResult: { content: null, localChange: Change.None, remoteChange: Change.None },\n\t\t\t\t\tmergeState: MergeState.Accepted\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/* Changed -> Apply ? (Merge ? Conflict | Accept) : Preview */\n\t\t\telse {\n\t\t\t\t/* Merge */\n\t\t\t\tconst mergeResult = merge ? await this.getMergeResult(resourcePreviewResult, token) : undefined;\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tawait this.fileService.writeFile(resourcePreviewResult.previewResource, VSBuffer.fromString(mergeResult?.content || ''));\n\n\t\t\t\t/* Conflict | Accept */\n\t\t\t\tconst acceptResult = mergeResult && !mergeResult.hasConflicts\n\t\t\t\t\t/* Accept if merged and there are no conflicts */\n\t\t\t\t\t? await this.getAcceptResult(resourcePreviewResult, resourcePreviewResult.previewResource, undefined, token)\n\t\t\t\t\t: undefined;\n\n\t\t\t\tresourcePreviews.push({\n\t\t\t\t\t...resourcePreviewResult,\n\t\t\t\t\tacceptResult,\n\t\t\t\t\tmergeState: mergeResult?.hasConflicts ? MergeState.Conflict : acceptResult ? MergeState.Accepted : MergeState.Preview,\n\t\t\t\t\tlocalChange: acceptResult ? acceptResult.localChange : mergeResult ? mergeResult.localChange : resourcePreviewResult.localChange,\n\t\t\t\t\tremoteChange: acceptResult ? acceptResult.remoteChange : mergeResult ? mergeResult.remoteChange : resourcePreviewResult.remoteChange\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn { syncResource: this.resource, profile: this.syncResource.profile, remoteUserData, lastSyncUserData, resourcePreviews, isLastSyncFromCurrentMachine: isRemoteDataFromCurrentMachine };\n\t}\n\n\tasync getLastSyncUserData<T = IRemoteUserData & { [key: string]: any }>(): Promise<T | null> {\n\t\tlet storedLastSyncUserDataStateContent = this.getStoredLastSyncUserDataStateContent();\n\t\tif (!storedLastSyncUserDataStateContent) {\n\t\t\tstoredLastSyncUserDataStateContent = await this.migrateLastSyncUserData();\n\t\t}\n\n\t\t// Last Sync Data state does not exist\n\t\tif (!storedLastSyncUserDataStateContent) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Last sync data state does not exist.`);\n\t\t\treturn null;\n\t\t}\n\n\t\tconst lastSyncUserDataState: ILastSyncUserDataState = JSON.parse(storedLastSyncUserDataStateContent);\n\t\tconst resourceSyncStateVersion = this.userDataSyncEnablementService.getResourceSyncStateVersion(this.resource);\n\t\tthis.hasSyncResourceStateVersionChanged = !!lastSyncUserDataState.version && !!resourceSyncStateVersion && lastSyncUserDataState.version !== resourceSyncStateVersion;\n\t\tif (this.hasSyncResourceStateVersionChanged) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Reset last sync state because last sync state version ${lastSyncUserDataState.version} is not compatible with current sync state version ${resourceSyncStateVersion}.`);\n\t\t\tawait this.resetLocal();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet syncData: ISyncData | null | undefined = undefined;\n\n\t\t// Get Last Sync Data from Local\n\t\tlet retrial = 1;\n\t\twhile (syncData === undefined && retrial++ < 6 /* Retry 5 times */) {\n\t\t\ttry {\n\t\t\t\tconst lastSyncStoredRemoteUserData = await this.readLastSyncStoredRemoteUserData();\n\t\t\t\tif (lastSyncStoredRemoteUserData) {\n\t\t\t\t\tif (lastSyncStoredRemoteUserData.ref === lastSyncUserDataState.ref) {\n\t\t\t\t\t\tsyncData = lastSyncStoredRemoteUserData.syncData;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Last sync data stored locally is not same as the last sync state.`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof FileOperationError && error.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Last sync resource does not exist locally.`);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (error instanceof UserDataSyncError) {\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\t// log and retry\n\t\t\t\t\tthis.logService.error(error, retrial);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Get Last Sync Data from Remote\n\t\tif (syncData === undefined) {\n\t\t\ttry {\n\t\t\t\tconst content = await this.userDataSyncStoreService.resolveResourceContent(this.resource, lastSyncUserDataState.ref, this.collection, this.syncHeaders);\n\t\t\t\tsyncData = content === null ? null : this.parseSyncData(content);\n\t\t\t\tawait this.writeLastSyncStoredRemoteUserData({ ref: lastSyncUserDataState.ref, syncData });\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof UserDataSyncError && error.code === UserDataSyncErrorCode.NotFound) {\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Last sync resource does not exist remotely.`);\n\t\t\t\t} else {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Last Sync Data Not Found\n\t\tif (syncData === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\t...lastSyncUserDataState,\n\t\t\tsyncData,\n\t\t} as T;\n\t}\n\n\tprotected async updateLastSyncUserData(lastSyncRemoteUserData: IRemoteUserData, additionalProps: IStringDictionary<any> = {}): Promise<void> {\n\t\tif (additionalProps['ref'] || additionalProps['version']) {\n\t\t\tthrow new Error('Cannot have core properties as additional');\n\t\t}\n\n\t\tconst version = this.userDataSyncEnablementService.getResourceSyncStateVersion(this.resource);\n\t\tconst lastSyncUserDataState: ILastSyncUserDataState = {\n\t\t\tref: lastSyncRemoteUserData.ref,\n\t\t\tversion,\n\t\t\t...additionalProps\n\t\t};\n\n\t\tthis.storageService.store(this.lastSyncUserDataStateKey, JSON.stringify(lastSyncUserDataState), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tawait this.writeLastSyncStoredRemoteUserData(lastSyncRemoteUserData);\n\t}\n\n\tprivate getStoredLastSyncUserDataStateContent(): string | undefined {\n\t\treturn this.storageService.get(this.lastSyncUserDataStateKey, StorageScope.APPLICATION);\n\t}\n\n\tprivate async readLastSyncStoredRemoteUserData(): Promise<IRemoteUserData | undefined> {\n\t\tconst content = (await this.fileService.readFile(this.lastSyncResource)).value.toString();\n\t\ttry {\n\t\t\tconst lastSyncStoredRemoteUserData = content ? JSON.parse(content) : undefined;\n\t\t\tif (isRemoteUserData(lastSyncStoredRemoteUserData)) {\n\t\t\t\treturn lastSyncStoredRemoteUserData;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async writeLastSyncStoredRemoteUserData(lastSyncRemoteUserData: IRemoteUserData): Promise<void> {\n\t\tawait this.fileService.writeFile(this.lastSyncResource, VSBuffer.fromString(JSON.stringify(lastSyncRemoteUserData)));\n\t}\n\n\tprivate async migrateLastSyncUserData(): Promise<string | undefined> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.lastSyncResource);\n\t\t\tconst userData = JSON.parse(content.value.toString());\n\t\t\tawait this.fileService.del(this.lastSyncResource);\n\t\t\tif (userData.ref && userData.content !== undefined) {\n\t\t\t\tthis.storageService.store(this.lastSyncUserDataStateKey, JSON.stringify({\n\t\t\t\t\t...userData,\n\t\t\t\t\tcontent: undefined,\n\t\t\t\t}), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t\t\tawait this.writeLastSyncStoredRemoteUserData({ ref: userData.ref, syncData: userData.content === null ? null : JSON.parse(userData.content) });\n\t\t\t} else {\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Migrating last sync user data. Invalid data.`, userData);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error instanceof FileOperationError && error.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Migrating last sync user data. Resource does not exist.`);\n\t\t\t} else {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t\treturn this.storageService.get(this.lastSyncUserDataStateKey, StorageScope.APPLICATION);\n\t}\n\n\tasync getRemoteUserData(lastSyncData: IRemoteUserData | null): Promise<IRemoteUserData> {\n\t\tconst { ref, content } = await this.getUserData(lastSyncData);\n\t\tlet syncData: ISyncData | null = null;\n\t\tif (content !== null) {\n\t\t\tsyncData = this.parseSyncData(content);\n\t\t}\n\t\treturn { ref, syncData };\n\t}\n\n\tprotected parseSyncData(content: string): ISyncData {\n\t\ttry {\n\t\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\t\tif (isSyncData(syncData)) {\n\t\t\t\treturn syncData;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\tthrow new UserDataSyncError(localize('incompatible sync data', \"Cannot parse sync data as it is not compatible with the current version.\"), UserDataSyncErrorCode.IncompatibleRemoteContent, this.resource);\n\t}\n\n\tprivate async getUserData(lastSyncData: IRemoteUserData | null): Promise<IUserData> {\n\t\tconst lastSyncUserData: IUserData | null = lastSyncData ? { ref: lastSyncData.ref, content: lastSyncData.syncData ? JSON.stringify(lastSyncData.syncData) : null } : null;\n\t\treturn this.userDataSyncStoreService.readResource(this.resource, lastSyncUserData, this.collection, this.syncHeaders);\n\t}\n\n\tprotected async updateRemoteUserData(content: string, ref: string | null): Promise<IRemoteUserData> {\n\t\tconst machineId = await this.currentMachineIdPromise;\n\t\tconst syncData: ISyncData = { version: this.version, machineId, content };\n\t\ttry {\n\t\t\tref = await this.userDataSyncStoreService.writeResource(this.resource, JSON.stringify(syncData), ref, this.collection, this.syncHeaders);\n\t\t\treturn { ref, syncData };\n\t\t} catch (error) {\n\t\t\tif (error instanceof UserDataSyncError && error.code === UserDataSyncErrorCode.TooLarge) {\n\t\t\t\terror = new UserDataSyncError(error.message, error.code, this.resource);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprotected async backupLocal(content: string): Promise<void> {\n\t\tconst syncData: ISyncData = { version: this.version, content };\n\t\treturn this.userDataSyncLocalStoreService.writeResource(this.resource, JSON.stringify(syncData), new Date(), this.syncResource.profile.isDefault ? undefined : this.syncResource.profile.id);\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tif (this.status === SyncStatus.Idle) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Stopping synchronizing ${this.resource.toLowerCase()}.`);\n\t\tif (this.syncPreviewPromise) {\n\t\t\tthis.syncPreviewPromise.cancel();\n\t\t\tthis.syncPreviewPromise = null;\n\t\t}\n\n\t\tthis.updateConflicts([]);\n\t\tawait this.clearPreviewFolder();\n\n\t\tthis.setStatus(SyncStatus.Idle);\n\t\tthis.logService.info(`${this.syncResourceLogLabel}: Stopped synchronizing ${this.resource.toLowerCase()}.`);\n\t}\n\n\tprivate getUserDataSyncConfiguration(): IUserDataSyncConfiguration {\n\t\treturn this.configurationService.getValue(USER_DATA_SYNC_CONFIGURATION_SCOPE);\n\t}\n\n\tprotected abstract readonly version: number;\n\tprotected abstract generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, isRemoteDataFromCurrentMachine: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration, token: CancellationToken): Promise<IResourcePreview[]>;\n\tprotected abstract getMergeResult(resourcePreview: IResourcePreview, token: CancellationToken): Promise<IMergeResult>;\n\tprotected abstract getAcceptResult(resourcePreview: IResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult>;\n\tprotected abstract applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, result: [IResourcePreview, IAcceptResult][], force: boolean): Promise<void>;\n\tprotected abstract hasRemoteChanged(lastSyncUserData: IRemoteUserData): Promise<boolean>;\n\n\tabstract hasLocalData(): Promise<boolean>;\n\tabstract resolveContent(uri: URI): Promise<string | null>;\n}\n\nexport interface IFileResourcePreview extends IResourcePreview {\n\treadonly fileContent: IFileContent | null;\n}\n\nexport abstract class AbstractFileSynchroniser extends AbstractSynchroniser {\n\n\tconstructor(\n\t\tprotected readonly file: URI,\n\t\tsyncResource: IUserDataSyncResource,\n\t\tcollection: string | undefined,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncEnablementService userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(syncResource, collection, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncLocalStoreService, userDataSyncEnablementService, telemetryService, logService, configurationService, uriIdentityService);\n\t\tthis._register(this.fileService.watch(this.extUri.dirname(file)));\n\t\tthis._register(this.fileService.onDidFilesChange(e => this.onFileChanges(e)));\n\t}\n\n\tprotected async getLocalFileContent(): Promise<IFileContent | null> {\n\t\ttry {\n\t\t\treturn await this.fileService.readFile(this.file);\n\t\t} catch (error) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprotected async updateLocalFileContent(newContent: string, oldContent: IFileContent | null, force: boolean): Promise<void> {\n\t\ttry {\n\t\t\tif (oldContent) {\n\t\t\t\t// file exists already\n\t\t\t\tawait this.fileService.writeFile(this.file, VSBuffer.fromString(newContent), force ? undefined : oldContent);\n\t\t\t} else {\n\t\t\t\t// file does not exist\n\t\t\t\tawait this.fileService.createFile(this.file, VSBuffer.fromString(newContent), { overwrite: force });\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif ((e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) ||\n\t\t\t\t(e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_MODIFIED_SINCE)) {\n\t\t\t\tthrow new UserDataSyncError(e.message, UserDataSyncErrorCode.LocalPreconditionFailed);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected async deleteLocalFile(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.del(this.file);\n\t\t} catch (e) {\n\t\t\tif (!(e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onFileChanges(e: FileChangesEvent): void {\n\t\tif (!e.contains(this.file)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.triggerLocalChange();\n\t}\n\n}\n\nexport abstract class AbstractJsonFileSynchroniser extends AbstractFileSynchroniser {\n\n\tconstructor(\n\t\tfile: URI,\n\t\tsyncResource: IUserDataSyncResource,\n\t\tcollection: string | undefined,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncEnablementService userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUserDataSyncUtilService protected readonly userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(file, syncResource, collection, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncLocalStoreService, userDataSyncEnablementService, telemetryService, logService, configurationService, uriIdentityService);\n\t}\n\n\tprotected hasErrors(content: string, isArray: boolean): boolean {\n\t\tconst parseErrors: ParseError[] = [];\n\t\tconst result = parse(content, parseErrors, { allowEmptyContent: true, allowTrailingComma: true });\n\t\treturn parseErrors.length > 0 || (!isUndefined(result) && isArray !== Array.isArray(result));\n\t}\n\n\tprivate _formattingOptions: Promise<FormattingOptions> | undefined = undefined;\n\tprotected getFormattingOptions(): Promise<FormattingOptions> {\n\t\tif (!this._formattingOptions) {\n\t\t\tthis._formattingOptions = this.userDataSyncUtilService.resolveFormattingOptions(this.file);\n\t\t}\n\t\treturn this._formattingOptions;\n\t}\n\n}\n\nexport abstract class AbstractInitializer implements IUserDataSyncResourceInitializer {\n\n\tprotected readonly extUri: IExtUri;\n\tprivate readonly lastSyncResource: URI;\n\n\tconstructor(\n\t\treadonly resource: SyncResource,\n\t\t@IUserDataProfilesService protected readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService protected readonly environmentService: IEnvironmentService,\n\t\t@ILogService protected readonly logService: ILogService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IStorageService protected readonly storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tthis.extUri = uriIdentityService.extUri;\n\t\tthis.lastSyncResource = getLastSyncResourceUri(undefined, this.resource, environmentService, this.extUri);\n\t}\n\n\tasync initialize({ ref, content }: IUserData): Promise<void> {\n\t\tif (!content) {\n\t\t\tthis.logService.info('Remote content does not exist.', this.resource);\n\t\t\treturn;\n\t\t}\n\n\t\tconst syncData = this.parseSyncData(content);\n\t\tif (!syncData) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.doInitialize({ ref, syncData });\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n\tprivate parseSyncData(content: string): ISyncData | undefined {\n\t\ttry {\n\t\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\t\tif (isSyncData(syncData)) {\n\t\t\t\treturn syncData;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\tthis.logService.info('Cannot parse sync data as it is not compatible with the current version.', this.resource);\n\t\treturn undefined;\n\t}\n\n\tprotected async updateLastSyncUserData(lastSyncRemoteUserData: IRemoteUserData, additionalProps: IStringDictionary<any> = {}): Promise<void> {\n\t\tif (additionalProps['ref'] || additionalProps['version']) {\n\t\t\tthrow new Error('Cannot have core properties as additional');\n\t\t}\n\n\t\tconst lastSyncUserDataState: ILastSyncUserDataState = {\n\t\t\tref: lastSyncRemoteUserData.ref,\n\t\t\tversion: undefined,\n\t\t\t...additionalProps\n\t\t};\n\n\t\tthis.storageService.store(`${this.resource}.lastSyncUserData`, JSON.stringify(lastSyncUserDataState), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tawait this.fileService.writeFile(this.lastSyncResource, VSBuffer.fromString(JSON.stringify(lastSyncRemoteUserData)));\n\t}\n\n\tprotected abstract doInitialize(remoteUserData: IRemoteUserData): Promise<void>;\n\n}\n"]}