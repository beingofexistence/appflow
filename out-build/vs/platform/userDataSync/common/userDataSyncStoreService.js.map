{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/userDataSync/common/userDataSyncStoreService.ts"],"names":[],"mappings":"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","file":"userDataSyncStoreService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getErrorMessage, isCancellationError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { Mimes } from 'vs/base/common/mime';\nimport { isWeb } from 'vs/base/common/platform';\nimport { ConfigurationSyncStore } from 'vs/base/common/product';\nimport { joinPath, relativePath } from 'vs/base/common/resources';\nimport { isObject, isString } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IHeaders, IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { asJson, asText, asTextOrError, hasNoContent, IRequestService, isSuccess, isSuccess as isSuccessContext } from 'vs/platform/request/common/request';\nimport { getServiceMachineId } from 'vs/platform/externalServices/common/serviceMachineId';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { HEADER_EXECUTION_ID, HEADER_OPERATION_ID, IAuthenticationProvider, IResourceRefHandle, IUserData, IUserDataManifest, IUserDataSyncLogService, IUserDataSyncStore, IUserDataSyncStoreManagementService, IUserDataSyncStoreService, ServerResource, SYNC_SERVICE_URL_TYPE, UserDataSyncErrorCode, UserDataSyncStoreError, UserDataSyncStoreType } from 'vs/platform/userDataSync/common/userDataSync';\nimport { VSBufferReadableStream } from 'vs/base/common/buffer';\n\nconst CONFIGURATION_SYNC_STORE_KEY = 'configurationSync.store';\nconst SYNC_PREVIOUS_STORE = 'sync.previous.store';\nconst DONOT_MAKE_REQUESTS_UNTIL_KEY = 'sync.donot-make-requests-until';\nconst USER_SESSION_ID_KEY = 'sync.user-session-id';\nconst MACHINE_SESSION_ID_KEY = 'sync.machine-session-id';\nconst REQUEST_SESSION_LIMIT = 100;\nconst REQUEST_SESSION_INTERVAL = 1000 * 60 * 5; /* 5 minutes */\n\ntype UserDataSyncStore = IUserDataSyncStore & { defaultType: UserDataSyncStoreType };\n\nexport abstract class AbstractUserDataSyncStoreManagementService extends Disposable implements IUserDataSyncStoreManagementService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly _onDidChangeUserDataSyncStore = this._register(new Emitter<void>());\n\treadonly onDidChangeUserDataSyncStore = this._onDidChangeUserDataSyncStore.event;\n\tprivate _userDataSyncStore: UserDataSyncStore | undefined;\n\tget userDataSyncStore(): UserDataSyncStore | undefined { return this._userDataSyncStore; }\n\n\tprotected get userDataSyncStoreType(): UserDataSyncStoreType | undefined {\n\t\treturn this.storageService.get(SYNC_SERVICE_URL_TYPE, StorageScope.APPLICATION) as UserDataSyncStoreType;\n\t}\n\tprotected set userDataSyncStoreType(type: UserDataSyncStoreType | undefined) {\n\t\tthis.storageService.store(SYNC_SERVICE_URL_TYPE, type, StorageScope.APPLICATION, isWeb ? StorageTarget.USER /* sync in web */ : StorageTarget.MACHINE);\n\t}\n\n\tconstructor(\n\t\t@IProductService protected readonly productService: IProductService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IStorageService protected readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis.updateUserDataSyncStore();\n\t\tconst disposable = this._register(new DisposableStore());\n\t\tthis._register(Event.filter(storageService.onDidChangeValue(StorageScope.APPLICATION, SYNC_SERVICE_URL_TYPE, disposable), () => this.userDataSyncStoreType !== this.userDataSyncStore?.type, disposable)(() => this.updateUserDataSyncStore()));\n\t}\n\n\tprotected updateUserDataSyncStore(): void {\n\t\tthis._userDataSyncStore = this.toUserDataSyncStore(this.productService[CONFIGURATION_SYNC_STORE_KEY]);\n\t\tthis._onDidChangeUserDataSyncStore.fire();\n\t}\n\n\tprotected toUserDataSyncStore(configurationSyncStore: ConfigurationSyncStore & { web?: ConfigurationSyncStore } | undefined): UserDataSyncStore | undefined {\n\t\tif (!configurationSyncStore) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// Check for web overrides for backward compatibility while reading previous store\n\t\tconfigurationSyncStore = isWeb && configurationSyncStore.web ? { ...configurationSyncStore, ...configurationSyncStore.web } : configurationSyncStore;\n\t\tif (isString(configurationSyncStore.url)\n\t\t\t&& isObject(configurationSyncStore.authenticationProviders)\n\t\t\t&& Object.keys(configurationSyncStore.authenticationProviders).every(authenticationProviderId => Array.isArray(configurationSyncStore!.authenticationProviders![authenticationProviderId].scopes))\n\t\t) {\n\t\t\tconst syncStore = configurationSyncStore as ConfigurationSyncStore;\n\t\t\tconst canSwitch = !!syncStore.canSwitch;\n\t\t\tconst defaultType: UserDataSyncStoreType = syncStore.url === syncStore.insidersUrl ? 'insiders' : 'stable';\n\t\t\tconst type: UserDataSyncStoreType = (canSwitch ? this.userDataSyncStoreType : undefined) || defaultType;\n\t\t\tconst url = type === 'insiders' ? syncStore.insidersUrl\n\t\t\t\t: type === 'stable' ? syncStore.stableUrl\n\t\t\t\t\t: syncStore.url;\n\t\t\treturn {\n\t\t\t\turl: URI.parse(url),\n\t\t\t\ttype,\n\t\t\t\tdefaultType,\n\t\t\t\tdefaultUrl: URI.parse(syncStore.url),\n\t\t\t\tstableUrl: URI.parse(syncStore.stableUrl),\n\t\t\t\tinsidersUrl: URI.parse(syncStore.insidersUrl),\n\t\t\t\tcanSwitch,\n\t\t\t\tauthenticationProviders: Object.keys(syncStore.authenticationProviders).reduce<IAuthenticationProvider[]>((result, id) => {\n\t\t\t\t\tresult.push({ id, scopes: syncStore!.authenticationProviders[id].scopes });\n\t\t\t\t\treturn result;\n\t\t\t\t}, [])\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tabstract switch(type: UserDataSyncStoreType): Promise<void>;\n\tabstract getPreviousUserDataSyncStore(): Promise<IUserDataSyncStore | undefined>;\n\n}\n\nexport class UserDataSyncStoreManagementService extends AbstractUserDataSyncStoreManagementService implements IUserDataSyncStoreManagementService {\n\n\tprivate readonly previousConfigurationSyncStore: ConfigurationSyncStore | undefined;\n\n\tconstructor(\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper(productService, configurationService, storageService);\n\n\t\tconst previousConfigurationSyncStore = this.storageService.get(SYNC_PREVIOUS_STORE, StorageScope.APPLICATION);\n\t\tif (previousConfigurationSyncStore) {\n\t\t\tthis.previousConfigurationSyncStore = JSON.parse(previousConfigurationSyncStore);\n\t\t}\n\n\t\tconst syncStore = this.productService[CONFIGURATION_SYNC_STORE_KEY];\n\t\tif (syncStore) {\n\t\t\tthis.storageService.store(SYNC_PREVIOUS_STORE, JSON.stringify(syncStore), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(SYNC_PREVIOUS_STORE, StorageScope.APPLICATION);\n\t\t}\n\t}\n\n\tasync switch(type: UserDataSyncStoreType): Promise<void> {\n\t\tif (type !== this.userDataSyncStoreType) {\n\t\t\tthis.userDataSyncStoreType = type;\n\t\t\tthis.updateUserDataSyncStore();\n\t\t}\n\t}\n\n\tasync getPreviousUserDataSyncStore(): Promise<IUserDataSyncStore | undefined> {\n\t\treturn this.toUserDataSyncStore(this.previousConfigurationSyncStore);\n\t}\n}\n\nexport class UserDataSyncStoreClient extends Disposable {\n\n\tprivate userDataSyncStoreUrl: URI | undefined;\n\n\tprivate authToken: { token: string; type: string } | undefined;\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string }>;\n\tprivate readonly session: RequestsSession;\n\n\tprivate _onTokenFailed = this._register(new Emitter<UserDataSyncErrorCode>());\n\treadonly onTokenFailed = this._onTokenFailed.event;\n\n\tprivate _onTokenSucceed: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onTokenSucceed: Event<void> = this._onTokenSucceed.event;\n\n\tprivate _donotMakeRequestsUntil: Date | undefined = undefined;\n\tget donotMakeRequestsUntil() { return this._donotMakeRequestsUntil; }\n\tprivate _onDidChangeDonotMakeRequestsUntil = this._register(new Emitter<void>());\n\treadonly onDidChangeDonotMakeRequestsUntil = this._onDidChangeDonotMakeRequestsUntil.event;\n\n\tconstructor(\n\t\tuserDataSyncStoreUrl: URI | undefined,\n\t\t@IProductService productService: IProductService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis.updateUserDataSyncStoreUrl(userDataSyncStoreUrl);\n\t\tthis.commonHeadersPromise = getServiceMachineId(environmentService, fileService, storageService)\n\t\t\t.then(uuid => {\n\t\t\t\tconst headers: IHeaders = {\n\t\t\t\t\t'X-Client-Name': `${productService.applicationName}${isWeb ? '-web' : ''}`,\n\t\t\t\t\t'X-Client-Version': productService.version,\n\t\t\t\t};\n\t\t\t\tif (productService.commit) {\n\t\t\t\t\theaders['X-Client-Commit'] = productService.commit;\n\t\t\t\t}\n\t\t\t\treturn headers;\n\t\t\t});\n\n\t\t/* A requests session that limits requests per sessions */\n\t\tthis.session = new RequestsSession(REQUEST_SESSION_LIMIT, REQUEST_SESSION_INTERVAL, this.requestService, this.logService);\n\t\tthis.initDonotMakeRequestsUntil();\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (this.resetDonotMakeRequestsUntilPromise) {\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise.cancel();\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise = undefined;\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetAuthToken(token: string, type: string): void {\n\t\tthis.authToken = { token, type };\n\t}\n\n\tprotected updateUserDataSyncStoreUrl(userDataSyncStoreUrl: URI | undefined): void {\n\t\tthis.userDataSyncStoreUrl = userDataSyncStoreUrl ? joinPath(userDataSyncStoreUrl, 'v1') : undefined;\n\t}\n\n\tprivate initDonotMakeRequestsUntil(): void {\n\t\tconst donotMakeRequestsUntil = this.storageService.getNumber(DONOT_MAKE_REQUESTS_UNTIL_KEY, StorageScope.APPLICATION);\n\t\tif (donotMakeRequestsUntil && Date.now() < donotMakeRequestsUntil) {\n\t\t\tthis.setDonotMakeRequestsUntil(new Date(donotMakeRequestsUntil));\n\t\t}\n\t}\n\n\tprivate resetDonotMakeRequestsUntilPromise: CancelablePromise<void> | undefined = undefined;\n\tprivate setDonotMakeRequestsUntil(donotMakeRequestsUntil: Date | undefined): void {\n\t\tif (this._donotMakeRequestsUntil?.getTime() !== donotMakeRequestsUntil?.getTime()) {\n\t\t\tthis._donotMakeRequestsUntil = donotMakeRequestsUntil;\n\n\t\t\tif (this.resetDonotMakeRequestsUntilPromise) {\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise.cancel();\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise = undefined;\n\t\t\t}\n\n\t\t\tif (this._donotMakeRequestsUntil) {\n\t\t\t\tthis.storageService.store(DONOT_MAKE_REQUESTS_UNTIL_KEY, this._donotMakeRequestsUntil.getTime(), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise = createCancelablePromise(token => timeout(this._donotMakeRequestsUntil!.getTime() - Date.now(), token).then(() => this.setDonotMakeRequestsUntil(undefined)));\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise.then(null, e => null /* ignore error */);\n\t\t\t} else {\n\t\t\t\tthis.storageService.remove(DONOT_MAKE_REQUESTS_UNTIL_KEY, StorageScope.APPLICATION);\n\t\t\t}\n\n\t\t\tthis._onDidChangeDonotMakeRequestsUntil.fire();\n\t\t}\n\t}\n\n\t// #region Collection\n\n\tasync getAllCollections(headers: IHeaders = {}): Promise<string[]> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'collection').toString();\n\t\theaders = { ...headers };\n\t\theaders['Content-Type'] = 'application/json';\n\n\t\tconst context = await this.request(url, { type: 'GET', headers }, [], CancellationToken.None);\n\n\t\treturn (await asJson<{ id: string }[]>(context))?.map(({ id }) => id) || [];\n\t}\n\n\tasync createCollection(headers: IHeaders = {}): Promise<string> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'collection').toString();\n\t\theaders = { ...headers };\n\t\theaders['Content-Type'] = Mimes.text;\n\n\t\tconst context = await this.request(url, { type: 'POST', headers }, [], CancellationToken.None);\n\t\tconst collectionId = await asTextOrError(context);\n\t\tif (!collectionId) {\n\t\t\tthrow new UserDataSyncStoreError('Server did not return the collection id', url, UserDataSyncErrorCode.NoCollection, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t}\n\t\treturn collectionId;\n\t}\n\n\tasync deleteCollection(collection?: string, headers: IHeaders = {}): Promise<void> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = collection ? joinPath(this.userDataSyncStoreUrl, 'collection', collection).toString() : joinPath(this.userDataSyncStoreUrl, 'collection').toString();\n\t\theaders = { ...headers };\n\n\t\tawait this.request(url, { type: 'DELETE', headers }, [], CancellationToken.None);\n\t}\n\n\t// #endregion\n\n\t// #region Resource\n\n\tasync getAllResourceRefs(resource: ServerResource, collection?: string): Promise<IResourceRefHandle[]> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst uri = this.getResourceUrl(this.userDataSyncStoreUrl, collection, resource);\n\t\tconst headers: IHeaders = {};\n\n\t\tconst context = await this.request(uri.toString(), { type: 'GET', headers }, [], CancellationToken.None);\n\n\t\tconst result = await asJson<{ url: string; created: number }[]>(context) || [];\n\t\treturn result.map(({ url, created }) => ({ ref: relativePath(uri, uri.with({ path: url }))!, created: created * 1000 /* Server returns in seconds */ }));\n\t}\n\n\tasync resolveResourceContent(resource: ServerResource, ref: string, collection?: string, headers: IHeaders = {}): Promise<string | null> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.getResourceUrl(this.userDataSyncStoreUrl, collection, resource), ref).toString();\n\t\theaders = { ...headers };\n\t\theaders['Cache-Control'] = 'no-cache';\n\n\t\tconst context = await this.request(url, { type: 'GET', headers }, [], CancellationToken.None);\n\t\tconst content = await asTextOrError(context);\n\t\treturn content;\n\t}\n\n\tasync deleteResource(resource: ServerResource, ref: string | null, collection?: string): Promise<void> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = ref !== null ? joinPath(this.getResourceUrl(this.userDataSyncStoreUrl, collection, resource), ref).toString() : this.getResourceUrl(this.userDataSyncStoreUrl, collection, resource).toString();\n\t\tconst headers: IHeaders = {};\n\n\t\tawait this.request(url, { type: 'DELETE', headers }, [], CancellationToken.None);\n\t}\n\n\tasync deleteResources(): Promise<void> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'resource').toString();\n\t\tconst headers: IHeaders = { 'Content-Type': Mimes.text };\n\n\t\tawait this.request(url, { type: 'DELETE', headers }, [], CancellationToken.None);\n\t}\n\n\tasync readResource(resource: ServerResource, oldValue: IUserData | null, collection?: string, headers: IHeaders = {}): Promise<IUserData> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.getResourceUrl(this.userDataSyncStoreUrl, collection, resource), 'latest').toString();\n\t\theaders = { ...headers };\n\t\t// Disable caching as they are cached by synchronisers\n\t\theaders['Cache-Control'] = 'no-cache';\n\t\tif (oldValue) {\n\t\t\theaders['If-None-Match'] = oldValue.ref;\n\t\t}\n\n\t\tconst context = await this.request(url, { type: 'GET', headers }, [304], CancellationToken.None);\n\n\t\tlet userData: IUserData | null = null;\n\t\tif (context.res.statusCode === 304) {\n\t\t\tuserData = oldValue;\n\t\t}\n\n\t\tif (userData === null) {\n\t\t\tconst ref = context.res.headers['etag'];\n\t\t\tif (!ref) {\n\t\t\t\tthrow new UserDataSyncStoreError('Server did not return the ref', url, UserDataSyncErrorCode.NoRef, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t\t}\n\n\t\t\tconst content = await asTextOrError(context);\n\t\t\tif (!content && context.res.statusCode === 304) {\n\t\t\t\tthrow new UserDataSyncStoreError('Empty response', url, UserDataSyncErrorCode.EmptyResponse, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t\t}\n\n\t\t\tuserData = { ref, content };\n\t\t}\n\n\t\treturn userData;\n\t}\n\n\tasync writeResource(resource: ServerResource, data: string, ref: string | null, collection?: string, headers: IHeaders = {}): Promise<string> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = this.getResourceUrl(this.userDataSyncStoreUrl, collection, resource).toString();\n\t\theaders = { ...headers };\n\t\theaders['Content-Type'] = Mimes.text;\n\t\tif (ref) {\n\t\t\theaders['If-Match'] = ref;\n\t\t}\n\n\t\tconst context = await this.request(url, { type: 'POST', data, headers }, [], CancellationToken.None);\n\n\t\tconst newRef = context.res.headers['etag'];\n\t\tif (!newRef) {\n\t\t\tthrow new UserDataSyncStoreError('Server did not return the ref', url, UserDataSyncErrorCode.NoRef, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t}\n\t\treturn newRef;\n\t}\n\n\t// #endregion\n\n\tasync manifest(oldValue: IUserDataManifest | null, headers: IHeaders = {}): Promise<IUserDataManifest | null> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'manifest').toString();\n\t\theaders = { ...headers };\n\t\theaders['Content-Type'] = 'application/json';\n\t\tif (oldValue) {\n\t\t\theaders['If-None-Match'] = oldValue.ref;\n\t\t}\n\n\t\tconst context = await this.request(url, { type: 'GET', headers }, [304], CancellationToken.None);\n\n\t\tlet manifest: IUserDataManifest | null = null;\n\t\tif (context.res.statusCode === 304) {\n\t\t\tmanifest = oldValue;\n\t\t}\n\n\t\tif (!manifest) {\n\t\t\tconst ref = context.res.headers['etag'];\n\t\t\tif (!ref) {\n\t\t\t\tthrow new UserDataSyncStoreError('Server did not return the ref', url, UserDataSyncErrorCode.NoRef, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t\t}\n\n\t\t\tconst content = await asTextOrError(context);\n\t\t\tif (!content && context.res.statusCode === 304) {\n\t\t\t\tthrow new UserDataSyncStoreError('Empty response', url, UserDataSyncErrorCode.EmptyResponse, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t\t}\n\n\t\t\tif (content) {\n\t\t\t\tmanifest = { ...JSON.parse(content), ref };\n\t\t\t}\n\t\t}\n\n\t\tconst currentSessionId = this.storageService.get(USER_SESSION_ID_KEY, StorageScope.APPLICATION);\n\n\t\tif (currentSessionId && manifest && currentSessionId !== manifest.session) {\n\t\t\t// Server session is different from client session so clear cached session.\n\t\t\tthis.clearSession();\n\t\t}\n\n\t\tif (manifest === null && currentSessionId) {\n\t\t\t// server session is cleared so clear cached session.\n\t\t\tthis.clearSession();\n\t\t}\n\n\t\tif (manifest) {\n\t\t\t// update session\n\t\t\tthis.storageService.store(USER_SESSION_ID_KEY, manifest.session, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t}\n\n\t\treturn manifest;\n\t}\n\n\tasync clear(): Promise<void> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tawait this.deleteCollection();\n\t\tawait this.deleteResources();\n\n\t\t// clear cached session.\n\t\tthis.clearSession();\n\t}\n\n\tasync getActivityData(): Promise<VSBufferReadableStream> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'download').toString();\n\t\tconst headers: IHeaders = {};\n\n\t\tconst context = await this.request(url, { type: 'GET', headers }, [], CancellationToken.None);\n\n\t\tif (!isSuccess(context)) {\n\t\t\tthrow new UserDataSyncStoreError('Server returned ' + context.res.statusCode, url, UserDataSyncErrorCode.EmptyResponse, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t}\n\n\t\tif (hasNoContent(context)) {\n\t\t\tthrow new UserDataSyncStoreError('Empty response', url, UserDataSyncErrorCode.EmptyResponse, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t}\n\n\t\treturn context.stream;\n\t}\n\n\tprivate getResourceUrl(userDataSyncStoreUrl: URI, collection: string | undefined, resource: ServerResource): URI {\n\t\treturn collection ? joinPath(userDataSyncStoreUrl, 'collection', collection, 'resource', resource) : joinPath(userDataSyncStoreUrl, 'resource', resource);\n\t}\n\n\tprivate clearSession(): void {\n\t\tthis.storageService.remove(USER_SESSION_ID_KEY, StorageScope.APPLICATION);\n\t\tthis.storageService.remove(MACHINE_SESSION_ID_KEY, StorageScope.APPLICATION);\n\t}\n\n\tprivate async request(url: string, options: IRequestOptions, successCodes: number[], token: CancellationToken): Promise<IRequestContext> {\n\t\tif (!this.authToken) {\n\t\t\tthrow new UserDataSyncStoreError('No Auth Token Available', url, UserDataSyncErrorCode.Unauthorized, undefined, undefined);\n\t\t}\n\n\t\tif (this._donotMakeRequestsUntil && Date.now() < this._donotMakeRequestsUntil.getTime()) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of too many requests (429).`, url, UserDataSyncErrorCode.TooManyRequestsAndRetryAfter, undefined, undefined);\n\t\t}\n\t\tthis.setDonotMakeRequestsUntil(undefined);\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\toptions.headers = {\n\t\t\t...(options.headers || {}),\n\t\t\t...commonHeaders,\n\t\t\t'X-Account-Type': this.authToken.type,\n\t\t\t'authorization': `Bearer ${this.authToken.token}`,\n\t\t};\n\n\t\t// Add session headers\n\t\tthis.addSessionHeaders(options.headers);\n\n\t\tthis.logService.trace('Sending request to server', { url, type: options.type, headers: { ...options.headers, ...{ authorization: undefined } } });\n\n\t\tlet context;\n\t\ttry {\n\t\t\tcontext = await this.session.request(url, options, token);\n\t\t} catch (e) {\n\t\t\tif (!(e instanceof UserDataSyncStoreError)) {\n\t\t\t\tlet code = UserDataSyncErrorCode.RequestFailed;\n\t\t\t\tconst errorMessage = getErrorMessage(e).toLowerCase();\n\n\t\t\t\t// Request timed out\n\t\t\t\tif (errorMessage.includes('xhr timeout')) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestTimeout;\n\t\t\t\t}\n\n\t\t\t\t// Request protocol not supported\n\t\t\t\telse if (errorMessage.includes('protocol') && errorMessage.includes('not supported')) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestProtocolNotSupported;\n\t\t\t\t}\n\n\t\t\t\t// Request path not escaped\n\t\t\t\telse if (errorMessage.includes('request path contains unescaped characters')) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestPathNotEscaped;\n\t\t\t\t}\n\n\t\t\t\t// Request header not an object\n\t\t\t\telse if (errorMessage.includes('headers must be an object')) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestHeadersNotObject;\n\t\t\t\t}\n\n\t\t\t\t// Request canceled\n\t\t\t\telse if (isCancellationError(e)) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestCanceled;\n\t\t\t\t}\n\n\t\t\t\te = new UserDataSyncStoreError(`Connection refused for the request '${url}'.`, url, code, undefined, undefined);\n\t\t\t}\n\t\t\tthis.logService.info('Request failed', url);\n\t\t\tthrow e;\n\t\t}\n\n\t\tconst operationId = context.res.headers[HEADER_OPERATION_ID];\n\t\tconst requestInfo = { url, status: context.res.statusCode, 'execution-id': options.headers[HEADER_EXECUTION_ID], 'operation-id': operationId };\n\t\tconst isSuccess = isSuccessContext(context) || (context.res.statusCode && successCodes.includes(context.res.statusCode));\n\t\tlet failureMessage = '';\n\t\tif (isSuccess) {\n\t\t\tthis.logService.trace('Request succeeded', requestInfo);\n\t\t} else {\n\t\t\tfailureMessage = await asText(context) || '';\n\t\t\tthis.logService.info('Request failed', requestInfo, failureMessage);\n\t\t}\n\n\t\tif (context.res.statusCode === 401 || context.res.statusCode === 403) {\n\t\t\tthis.authToken = undefined;\n\t\t\tif (context.res.statusCode === 401) {\n\t\t\t\tthis._onTokenFailed.fire(UserDataSyncErrorCode.Unauthorized);\n\t\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of Unauthorized (401).`, url, UserDataSyncErrorCode.Unauthorized, context.res.statusCode, operationId);\n\t\t\t}\n\t\t\tif (context.res.statusCode === 403) {\n\t\t\t\tthis._onTokenFailed.fire(UserDataSyncErrorCode.Forbidden);\n\t\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because the access is forbidden (403).`, url, UserDataSyncErrorCode.Forbidden, context.res.statusCode, operationId);\n\t\t\t}\n\t\t}\n\n\t\tthis._onTokenSucceed.fire();\n\n\t\tif (context.res.statusCode === 404) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because the requested resource is not found (404).`, url, UserDataSyncErrorCode.NotFound, context.res.statusCode, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 405) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because the requested endpoint is not found (405). ${failureMessage}`, url, UserDataSyncErrorCode.MethodNotFound, context.res.statusCode, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 409) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of Conflict (409). There is new data for this resource. Make the request again with latest data.`, url, UserDataSyncErrorCode.Conflict, context.res.statusCode, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 410) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because the requested resource is not longer available (410).`, url, UserDataSyncErrorCode.Gone, context.res.statusCode, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 412) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of Precondition Failed (412). There is new data for this resource. Make the request again with latest data.`, url, UserDataSyncErrorCode.PreconditionFailed, context.res.statusCode, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 413) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of too large payload (413).`, url, UserDataSyncErrorCode.TooLarge, context.res.statusCode, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 426) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed with status Upgrade Required (426). Please upgrade the client and try again.`, url, UserDataSyncErrorCode.UpgradeRequired, context.res.statusCode, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 429) {\n\t\t\tconst retryAfter = context.res.headers['retry-after'];\n\t\t\tif (retryAfter) {\n\t\t\t\tthis.setDonotMakeRequestsUntil(new Date(Date.now() + (parseInt(retryAfter) * 1000)));\n\t\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of too many requests (429).`, url, UserDataSyncErrorCode.TooManyRequestsAndRetryAfter, context.res.statusCode, operationId);\n\t\t\t} else {\n\t\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of too many requests (429).`, url, UserDataSyncErrorCode.TooManyRequests, context.res.statusCode, operationId);\n\t\t\t}\n\t\t}\n\n\t\tif (!isSuccess) {\n\t\t\tthrow new UserDataSyncStoreError('Server returned ' + context.res.statusCode, url, UserDataSyncErrorCode.Unknown, context.res.statusCode, operationId);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tprivate addSessionHeaders(headers: IHeaders): void {\n\t\tlet machineSessionId = this.storageService.get(MACHINE_SESSION_ID_KEY, StorageScope.APPLICATION);\n\t\tif (machineSessionId === undefined) {\n\t\t\tmachineSessionId = generateUuid();\n\t\t\tthis.storageService.store(MACHINE_SESSION_ID_KEY, machineSessionId, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t}\n\t\theaders['X-Machine-Session-Id'] = machineSessionId;\n\n\t\tconst userSessionId = this.storageService.get(USER_SESSION_ID_KEY, StorageScope.APPLICATION);\n\t\tif (userSessionId !== undefined) {\n\t\t\theaders['X-User-Session-Id'] = userSessionId;\n\t\t}\n\t}\n\n}\n\nexport class UserDataSyncStoreService extends UserDataSyncStoreClient implements IUserDataSyncStoreService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IUserDataSyncStoreManagementService userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IProductService productService: IProductService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper(userDataSyncStoreManagementService.userDataSyncStore?.url, productService, requestService, logService, environmentService, fileService, storageService);\n\t\tthis._register(userDataSyncStoreManagementService.onDidChangeUserDataSyncStore(() => this.updateUserDataSyncStoreUrl(userDataSyncStoreManagementService.userDataSyncStore?.url)));\n\t}\n\n}\n\nexport class RequestsSession {\n\n\tprivate requests: string[] = [];\n\tprivate startTime: Date | undefined = undefined;\n\n\tconstructor(\n\t\tprivate readonly limit: number,\n\t\tprivate readonly interval: number, /* in ms */\n\t\tprivate readonly requestService: IRequestService,\n\t\tprivate readonly logService: IUserDataSyncLogService,\n\t) { }\n\n\trequest(url: string, options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tif (this.isExpired()) {\n\t\t\tthis.reset();\n\t\t}\n\n\t\toptions.url = url;\n\n\t\tif (this.requests.length >= this.limit) {\n\t\t\tthis.logService.info('Too many requests', ...this.requests);\n\t\t\tthrow new UserDataSyncStoreError(`Too many requests. Only ${this.limit} requests allowed in ${this.interval / (1000 * 60)} minutes.`, url, UserDataSyncErrorCode.LocalTooManyRequests, undefined, undefined);\n\t\t}\n\n\t\tthis.startTime = this.startTime || new Date();\n\t\tthis.requests.push(url);\n\n\t\treturn this.requestService.request(options, token);\n\t}\n\n\tprivate isExpired(): boolean {\n\t\treturn this.startTime !== undefined && new Date().getTime() - this.startTime.getTime() > this.interval;\n\t}\n\n\tprivate reset(): void {\n\t\tthis.requests = [];\n\t\tthis.startTime = undefined;\n\t}\n\n}\n"]}