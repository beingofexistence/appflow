{"version":3,"sources":["vs/platform/audioCues/browser/audioCueService.ts"],"names":[],"mappings":"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","file":"audioCueService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { localize } from 'vs/nls';\nimport { observableFromEvent, derived } from 'vs/base/common/observable';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport const IAudioCueService = createDecorator<IAudioCueService>('audioCue');\n\nexport interface IAudioCueService {\n\treadonly _serviceBrand: undefined;\n\tplayAudioCue(cue: AudioCue, options?: IAudioCueOptions): Promise<void>;\n\tplayAudioCues(cues: (AudioCue | { cue: AudioCue; source: string })[]): Promise<void>;\n\tisEnabled(cue: AudioCue): boolean;\n\tonEnabledChanged(cue: AudioCue): Event<void>;\n\n\tplaySound(cue: Sound, allowManyInParallel?: boolean): Promise<void>;\n\tplayAudioCueLoop(cue: AudioCue, milliseconds: number): IDisposable;\n}\n\nexport interface IAudioCueOptions {\n\tallowManyInParallel?: boolean;\n\tsource?: string;\n}\n\nexport class AudioCueService extends Disposable implements IAudioCueService {\n\treadonly _serviceBrand: undefined;\n\tprivate readonly sounds: Map<string, HTMLAudioElement> = new Map();\n\tprivate readonly screenReaderAttached = observableFromEvent(\n\t\tthis.accessibilityService.onDidChangeScreenReaderOptimized,\n\t\t() => /** @description accessibilityService.onDidChangeScreenReaderOptimized */ this.accessibilityService.isScreenReaderOptimized()\n\t);\n\tprivate readonly sentTelemetry = new Set<string>();\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic async playAudioCue(cue: AudioCue, options: IAudioCueOptions = {}): Promise<void> {\n\t\tif (this.isEnabled(cue)) {\n\t\t\tthis.sendAudioCueTelemetry(cue, options.source);\n\t\t\tawait this.playSound(cue.sound.getSound(), options.allowManyInParallel);\n\t\t}\n\t}\n\n\tpublic async playAudioCues(cues: (AudioCue | { cue: AudioCue; source: string })[]): Promise<void> {\n\t\tfor (const cue of cues) {\n\t\t\tthis.sendAudioCueTelemetry('cue' in cue ? cue.cue : cue, 'source' in cue ? cue.source : undefined);\n\t\t}\n\n\t\t// Some audio cues might reuse sounds. Don't play the same sound twice.\n\t\tconst sounds = new Set(cues.map(c => 'cue' in c ? c.cue : c).filter(cue => this.isEnabled(cue)).map(cue => cue.sound.getSound()));\n\t\tawait Promise.all(Array.from(sounds).map(sound => this.playSound(sound, true)));\n\t}\n\n\tprivate sendAudioCueTelemetry(cue: AudioCue, source: string | undefined): void {\n\t\tconst isScreenReaderOptimized = this.accessibilityService.isScreenReaderOptimized();\n\t\tconst key = cue.name + (source ? `::${source}` : '') + (isScreenReaderOptimized ? '{screenReaderOptimized}' : '');\n\t\t// Only send once per user session\n\t\tif (this.sentTelemetry.has(key) || this.getVolumeInPercent() === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis.sentTelemetry.add(key);\n\n\t\tthis.telemetryService.publicLog2<{\n\t\t\taudioCue: string;\n\t\t\tsource: string;\n\t\t\tisScreenReaderOptimized: boolean;\n\t\t}, {\n\t\t\towner: 'hediet';\n\n\t\t\taudioCue: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The audio cue that was played.' };\n\t\t\tsource: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The source that triggered the audio cue (e.g. \"diffEditorNavigation\").' };\n\t\t\tisScreenReaderOptimized: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Whether the user is using a screen reader' };\n\n\t\t\tcomment: 'This data is collected to understand how audio cues are used and if more audio cues should be added.';\n\t\t}>('audioCue.played', {\n\t\t\taudioCue: cue.name,\n\t\t\tsource: source ?? '',\n\t\t\tisScreenReaderOptimized,\n\t\t});\n\t}\n\n\tprivate getVolumeInPercent(): number {\n\t\tconst volume = this.configurationService.getValue<number>('audioCues.volume');\n\t\tif (typeof volume !== 'number') {\n\t\t\treturn 50;\n\t\t}\n\n\t\treturn Math.max(Math.min(volume, 100), 0);\n\t}\n\n\tprivate readonly playingSounds = new Set<Sound>();\n\n\tpublic async playSound(sound: Sound, allowManyInParallel = false): Promise<void> {\n\t\tif (!allowManyInParallel && this.playingSounds.has(sound)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.playingSounds.add(sound);\n\t\tconst url = FileAccess.asBrowserUri(`vs/platform/audioCues/browser/media/${sound.fileName}`).toString(true);\n\n\t\ttry {\n\t\t\tconst sound = this.sounds.get(url);\n\t\t\tif (sound) {\n\t\t\t\tsound.volume = this.getVolumeInPercent() / 100;\n\t\t\t\tsound.currentTime = 0;\n\t\t\t\tawait sound.play();\n\t\t\t} else {\n\t\t\t\tconst playedSound = await playAudio(url, this.getVolumeInPercent() / 100);\n\t\t\t\tthis.sounds.set(url, playedSound);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error('Error while playing sound', e);\n\t\t} finally {\n\t\t\tthis.playingSounds.delete(sound);\n\t\t}\n\t}\n\n\tpublic playAudioCueLoop(cue: AudioCue, milliseconds: number): IDisposable {\n\t\tlet playing = true;\n\t\tconst playSound = () => {\n\t\t\tif (playing) {\n\t\t\t\tthis.playAudioCue(cue, { allowManyInParallel: true }).finally(() => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (playing) {\n\t\t\t\t\t\t\tplaySound();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, milliseconds);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tplaySound();\n\t\treturn toDisposable(() => playing = false);\n\t}\n\n\tprivate readonly obsoleteAudioCuesEnabled = observableFromEvent(\n\t\tEvent.filter(this.configurationService.onDidChangeConfiguration, (e) =>\n\t\t\te.affectsConfiguration('audioCues.enabled')\n\t\t),\n\t\t() => /** @description config: audioCues.enabled */ this.configurationService.getValue<'on' | 'off' | 'auto'>('audioCues.enabled')\n\t);\n\n\tprivate readonly isEnabledCache = new Cache((cue: AudioCue) => {\n\t\tconst settingObservable = observableFromEvent(\n\t\t\tEvent.filter(this.configurationService.onDidChangeConfiguration, (e) =>\n\t\t\t\te.affectsConfiguration(cue.settingsKey)\n\t\t\t),\n\t\t\t() => this.configurationService.getValue<'on' | 'off' | 'auto'>(cue.settingsKey)\n\t\t);\n\t\treturn derived(reader => {\n\t\t\t/** @description audio cue enabled */\n\t\t\tconst setting = settingObservable.read(reader);\n\t\t\tif (\n\t\t\t\tsetting === 'on' ||\n\t\t\t\t(setting === 'auto' && this.screenReaderAttached.read(reader))\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst obsoleteSetting = this.obsoleteAudioCuesEnabled.read(reader);\n\t\t\tif (\n\t\t\t\tobsoleteSetting === 'on' ||\n\t\t\t\t(obsoleteSetting === 'auto' && this.screenReaderAttached.read(reader))\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t});\n\n\tpublic isEnabled(cue: AudioCue): boolean {\n\t\treturn this.isEnabledCache.get(cue).get();\n\t}\n\n\tpublic onEnabledChanged(cue: AudioCue): Event<void> {\n\t\treturn Event.fromObservableLight(this.isEnabledCache.get(cue));\n\t}\n}\n\n/**\n * Play the given audio url.\n * @volume value between 0 and 1\n */\nfunction playAudio(url: string, volume: number): Promise<HTMLAudioElement> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst audio = new Audio(url);\n\t\taudio.volume = volume;\n\t\taudio.addEventListener('ended', () => {\n\t\t\tresolve(audio);\n\t\t});\n\t\taudio.addEventListener('error', (e) => {\n\t\t\t// When the error event fires, ended might not be called\n\t\t\treject(e.error);\n\t\t});\n\t\taudio.play().catch(e => {\n\t\t\t// When play fails, the error event is not fired.\n\t\t\treject(e);\n\t\t});\n\t});\n}\n\nclass Cache<TArg, TValue> {\n\tprivate readonly map = new Map<TArg, TValue>();\n\tconstructor(private readonly getValue: (value: TArg) => TValue) {\n\t}\n\n\tpublic get(arg: TArg): TValue {\n\t\tif (this.map.has(arg)) {\n\t\t\treturn this.map.get(arg)!;\n\t\t}\n\n\t\tconst value = this.getValue(arg);\n\t\tthis.map.set(arg, value);\n\t\treturn value;\n\t}\n}\n\n/**\n * Corresponds to the audio files in ./media.\n*/\nexport class Sound {\n\tprivate static register(options: { fileName: string }): Sound {\n\t\tconst sound = new Sound(options.fileName);\n\t\treturn sound;\n\t}\n\n\tpublic static readonly error = Sound.register({ fileName: 'error.mp3' });\n\tpublic static readonly warning = Sound.register({ fileName: 'warning.mp3' });\n\tpublic static readonly foldedArea = Sound.register({ fileName: 'foldedAreas.mp3' });\n\tpublic static readonly break = Sound.register({ fileName: 'break.mp3' });\n\tpublic static readonly quickFixes = Sound.register({ fileName: 'quickFixes.mp3' });\n\tpublic static readonly taskCompleted = Sound.register({ fileName: 'taskCompleted.mp3' });\n\tpublic static readonly taskFailed = Sound.register({ fileName: 'taskFailed.mp3' });\n\tpublic static readonly terminalBell = Sound.register({ fileName: 'terminalBell.mp3' });\n\tpublic static readonly diffLineInserted = Sound.register({ fileName: 'diffLineInserted.mp3' });\n\tpublic static readonly diffLineDeleted = Sound.register({ fileName: 'diffLineDeleted.mp3' });\n\tpublic static readonly diffLineModified = Sound.register({ fileName: 'diffLineModified.mp3' });\n\tpublic static readonly chatRequestSent = Sound.register({ fileName: 'chatRequestSent.mp3' });\n\tpublic static readonly chatResponsePending = Sound.register({ fileName: 'chatResponsePending.mp3' });\n\tpublic static readonly chatResponseReceived1 = Sound.register({ fileName: 'chatResponseReceived1.mp3' });\n\tpublic static readonly chatResponseReceived2 = Sound.register({ fileName: 'chatResponseReceived2.mp3' });\n\tpublic static readonly chatResponseReceived3 = Sound.register({ fileName: 'chatResponseReceived3.mp3' });\n\tpublic static readonly chatResponseReceived4 = Sound.register({ fileName: 'chatResponseReceived4.mp3' });\n\n\tprivate constructor(public readonly fileName: string) { }\n}\n\nexport class SoundSource {\n\tconstructor(\n\t\tpublic readonly randomOneOf: Sound[]\n\t) { }\n\n\tpublic getSound(deterministic = false): Sound {\n\t\tif (deterministic || this.randomOneOf.length === 1) {\n\t\t\treturn this.randomOneOf[0];\n\t\t} else {\n\t\t\tconst index = Math.floor(Math.random() * this.randomOneOf.length);\n\t\t\treturn this.randomOneOf[index];\n\t\t}\n\t}\n}\n\nexport class AudioCue {\n\tprivate static _audioCues = new Set<AudioCue>();\n\tprivate static register(options: {\n\t\tname: string;\n\t\tsound: Sound | {\n\t\t\t/**\n\t\t\t * Gaming and other apps often play a sound variant when the same event happens again\n\t\t\t * for an improved experience. This option enables audio cues to play a random sound.\n\t\t\t */\n\t\t\trandomOneOf: Sound[];\n\t\t};\n\t\tsettingsKey: string;\n\t}): AudioCue {\n\t\tconst soundSource = new SoundSource('randomOneOf' in options.sound ? options.sound.randomOneOf : [options.sound]);\n\t\tconst audioCue = new AudioCue(soundSource, options.name, options.settingsKey);\n\t\tAudioCue._audioCues.add(audioCue);\n\t\treturn audioCue;\n\t}\n\n\tpublic static get allAudioCues() {\n\t\treturn [...this._audioCues];\n\t}\n\n\tpublic static readonly error = AudioCue.register({\n\t\tname: localize('audioCues.lineHasError.name', 'Error on Line'),\n\t\tsound: Sound.error,\n\t\tsettingsKey: 'audioCues.lineHasError',\n\t});\n\tpublic static readonly warning = AudioCue.register({\n\t\tname: localize('audioCues.lineHasWarning.name', 'Warning on Line'),\n\t\tsound: Sound.warning,\n\t\tsettingsKey: 'audioCues.lineHasWarning',\n\t});\n\tpublic static readonly foldedArea = AudioCue.register({\n\t\tname: localize('audioCues.lineHasFoldedArea.name', 'Folded Area on Line'),\n\t\tsound: Sound.foldedArea,\n\t\tsettingsKey: 'audioCues.lineHasFoldedArea',\n\t});\n\tpublic static readonly break = AudioCue.register({\n\t\tname: localize('audioCues.lineHasBreakpoint.name', 'Breakpoint on Line'),\n\t\tsound: Sound.break,\n\t\tsettingsKey: 'audioCues.lineHasBreakpoint',\n\t});\n\tpublic static readonly inlineSuggestion = AudioCue.register({\n\t\tname: localize('audioCues.lineHasInlineSuggestion.name', 'Inline Suggestion on Line'),\n\t\tsound: Sound.quickFixes,\n\t\tsettingsKey: 'audioCues.lineHasInlineSuggestion',\n\t});\n\n\tpublic static readonly terminalQuickFix = AudioCue.register({\n\t\tname: localize('audioCues.terminalQuickFix.name', 'Terminal Quick Fix'),\n\t\tsound: Sound.quickFixes,\n\t\tsettingsKey: 'audioCues.terminalQuickFix',\n\t});\n\n\tpublic static readonly onDebugBreak = AudioCue.register({\n\t\tname: localize('audioCues.onDebugBreak.name', 'Debugger Stopped on Breakpoint'),\n\t\tsound: Sound.break,\n\t\tsettingsKey: 'audioCues.onDebugBreak',\n\t});\n\n\tpublic static readonly noInlayHints = AudioCue.register({\n\t\tname: localize('audioCues.noInlayHints', 'No Inlay Hints on Line'),\n\t\tsound: Sound.error,\n\t\tsettingsKey: 'audioCues.noInlayHints'\n\t});\n\n\tpublic static readonly taskCompleted = AudioCue.register({\n\t\tname: localize('audioCues.taskCompleted', 'Task Completed'),\n\t\tsound: Sound.taskCompleted,\n\t\tsettingsKey: 'audioCues.taskCompleted'\n\t});\n\n\tpublic static readonly taskFailed = AudioCue.register({\n\t\tname: localize('audioCues.taskFailed', 'Task Failed'),\n\t\tsound: Sound.taskFailed,\n\t\tsettingsKey: 'audioCues.taskFailed'\n\t});\n\n\tpublic static readonly terminalCommandFailed = AudioCue.register({\n\t\tname: localize('audioCues.terminalCommandFailed', 'Terminal Command Failed'),\n\t\tsound: Sound.error,\n\t\tsettingsKey: 'audioCues.terminalCommandFailed'\n\t});\n\n\tpublic static readonly terminalBell = AudioCue.register({\n\t\tname: localize('audioCues.terminalBell', 'Terminal Bell'),\n\t\tsound: Sound.terminalBell,\n\t\tsettingsKey: 'audioCues.terminalBell'\n\t});\n\n\tpublic static readonly notebookCellCompleted = AudioCue.register({\n\t\tname: localize('audioCues.notebookCellCompleted', 'Notebook Cell Completed'),\n\t\tsound: Sound.taskCompleted,\n\t\tsettingsKey: 'audioCues.notebookCellCompleted'\n\t});\n\n\tpublic static readonly notebookCellFailed = AudioCue.register({\n\t\tname: localize('audioCues.notebookCellFailed', 'Notebook Cell Failed'),\n\t\tsound: Sound.taskFailed,\n\t\tsettingsKey: 'audioCues.notebookCellFailed'\n\t});\n\n\tpublic static readonly diffLineInserted = AudioCue.register({\n\t\tname: localize('audioCues.diffLineInserted', 'Diff Line Inserted'),\n\t\tsound: Sound.diffLineInserted,\n\t\tsettingsKey: 'audioCues.diffLineInserted'\n\t});\n\n\tpublic static readonly diffLineDeleted = AudioCue.register({\n\t\tname: localize('audioCues.diffLineDeleted', 'Diff Line Deleted'),\n\t\tsound: Sound.diffLineDeleted,\n\t\tsettingsKey: 'audioCues.diffLineDeleted'\n\t});\n\n\tpublic static readonly diffLineModified = AudioCue.register({\n\t\tname: localize('audioCues.diffLineModified', 'Diff Line Modified'),\n\t\tsound: Sound.diffLineModified,\n\t\tsettingsKey: 'audioCues.diffLineModified'\n\t});\n\n\tpublic static readonly chatRequestSent = AudioCue.register({\n\t\tname: localize('audioCues.chatRequestSent', 'Chat Request Sent'),\n\t\tsound: Sound.chatRequestSent,\n\t\tsettingsKey: 'audioCues.chatRequestSent'\n\t});\n\n\tpublic static readonly chatResponseReceived = AudioCue.register({\n\t\tname: localize('audioCues.chatResponseReceived', 'Chat Response Received'),\n\t\tsettingsKey: 'audioCues.chatResponseReceived',\n\t\tsound: {\n\t\t\trandomOneOf: [\n\t\t\t\tSound.chatResponseReceived1,\n\t\t\t\tSound.chatResponseReceived2,\n\t\t\t\tSound.chatResponseReceived3,\n\t\t\t\tSound.chatResponseReceived4\n\t\t\t]\n\t\t}\n\t});\n\n\tpublic static readonly chatResponsePending = AudioCue.register({\n\t\tname: localize('audioCues.chatResponsePending', 'Chat Response Pending'),\n\t\tsound: Sound.chatResponsePending,\n\t\tsettingsKey: 'audioCues.chatResponsePending'\n\t});\n\n\tprivate constructor(\n\t\tpublic readonly sound: SoundSource,\n\t\tpublic readonly name: string,\n\t\tpublic readonly settingsKey: string,\n\t) { }\n}\n"]}