{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/ipc/common/mainProcessService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMnF,QAAA,IAAI,GAAkB,IAAA,mBAAG,EAAkC,oBAAoB,CAAC,CAAC;IAI9F;;OAEG;IACH,MAAa,IAAI;QAIhB,YACS,CAAW,EACX,CAAW;YADX,MAAC,GAAD,CAAC,CAAU;YACX,MAAC,GAAD,CAAC,CAAU;QAChB,CAAC;QAEL,UAAU,CAAC,WAAmB;YAC7B,OAAO,IAAI,CAAC,CAAC,CAAM,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAM,CAAC;QACzD,CAAC;QAED,eAAe,CAAC,WAAmB,EAAE,OAA+B;YACnE,IAAI,CAAC,CAAC,CAAM,eAAe,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QACnD,CAAC;KACD;IAhBD,oBAgBC","file":"mainProcessService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IPCServer, IServerChannel, StaticRouter } from 'vs/base/parts/ipc/common/ipc';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IRemoteService } from 'vs/platform/ipc/common/services';\n\nexport const IMainProcessService = createDecorator<IMainProcessService>('mainProcessService');\n\nexport interface IMainProcessService extends IRemoteService { }\n\n/**\n * An implementation of `IMainProcessService` that leverages `IPCServer`.\n */\nexport class MainProcessService implements IMainProcessService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate server: IPCServer,\n\t\tprivate router: StaticRouter\n\t) { }\n\n\tgetChannel(channelName: string): IChannel {\n\t\treturn this.server.getChannel(channelName, this.router);\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<string>): void {\n\t\tthis.server.registerChannel(channelName, channel);\n\t}\n}\n"]}