{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/ipc/electron-sandbox/mainProcessService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG;;OAEG;IACH,MAAa,IAA8B,SAAQ,eAAG;QAMrD,YACC,QAAgB;YAEhB,KAAK,EAAE,CAAC;YAER,IAAI,CAAC,CAAC,GAAuB,IAAI,CAAC,CAAC,CAAS,IAAI,kBAAiB,CAAC,UAAU,QAAQ,EAAE,CAAC,CAAC,CAAC;QAC1F,CAAC;QAED,UAAU,CAAC,WAAmB;YAC7B,OAAO,IAAI,CAAC,CAAC,CAAqB,UAAU,CAAC,WAAW,CAAC,CAAC;QAC3D,CAAC;QAED,eAAe,CAAC,WAAmB,EAAE,OAA+B;YACnE,IAAI,CAAC,CAAC,CAAqB,eAAe,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAClE,CAAC;KACD;IArBD,oBAqBC","file":"mainProcessService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client as IPCElectronClient } from 'vs/base/parts/ipc/electron-sandbox/ipc.electron';\nimport { IMainProcessService } from 'vs/platform/ipc/common/mainProcessService';\n\n/**\n * An implementation of `IMainProcessService` that leverages Electron's IPC.\n */\nexport class ElectronIPCMainProcessService extends Disposable implements IMainProcessService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate mainProcessConnection: IPCElectronClient;\n\n\tconstructor(\n\t\twindowId: number\n\t) {\n\t\tsuper();\n\n\t\tthis.mainProcessConnection = this._register(new IPCElectronClient(`window:${windowId}`));\n\t}\n\n\tgetChannel(channelName: string): IChannel {\n\t\treturn this.mainProcessConnection.getChannel(channelName);\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<string>): void {\n\t\tthis.mainProcessConnection.registerChannel(channelName, channel);\n\t}\n}\n"]}