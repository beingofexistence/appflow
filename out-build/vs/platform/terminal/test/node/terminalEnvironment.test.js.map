{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/terminal/test/node/terminalEnvironment.test.ts"],"names":[],"mappings":"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","file":"terminalEnvironment.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual, ok, strictEqual } from 'assert';\nimport { homedir, userInfo } from 'os';\nimport { isWindows } from 'vs/base/common/platform';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITerminalProcessOptions } from 'vs/platform/terminal/common/terminal';\nimport { getShellIntegrationInjection, getWindowsBuildNumber, IShellIntegrationConfigInjection } from 'vs/platform/terminal/node/terminalEnvironment';\n\nconst enabledProcessOptions: ITerminalProcessOptions = { shellIntegration: { enabled: true, suggestEnabled: false, nonce: '' }, windowsEnableConpty: true, environmentVariableCollections: undefined, workspaceFolder: undefined };\nconst disabledProcessOptions: ITerminalProcessOptions = { shellIntegration: { enabled: false, suggestEnabled: false, nonce: '' }, windowsEnableConpty: true, environmentVariableCollections: undefined, workspaceFolder: undefined };\nconst winptyProcessOptions: ITerminalProcessOptions = { shellIntegration: { enabled: true, suggestEnabled: false, nonce: '' }, windowsEnableConpty: false, environmentVariableCollections: undefined, workspaceFolder: undefined };\nconst pwshExe = process.platform === 'win32' ? 'pwsh.exe' : 'pwsh';\nconst repoRoot = process.platform === 'win32' ? process.cwd()[0].toLowerCase() + process.cwd().substring(1) : process.cwd();\nconst logService = new NullLogService();\nconst productService = { applicationName: 'vscode' } as IProductService;\nconst defaultEnvironment = {};\n\nsuite('platform - terminalEnvironment', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\tsuite('getShellIntegrationInjection', () => {\n\t\tsuite('should not enable', () => {\n\t\t\t// This test is only expected to work on Windows 10 build 18309 and above\n\t\t\t(getWindowsBuildNumber() < 18309 ? test.skip : test)('when isFeatureTerminal or when no executable is provided', () => {\n\t\t\t\tok(!getShellIntegrationInjection({ executable: pwshExe, args: ['-l', '-NoLogo'], isFeatureTerminal: true }, enabledProcessOptions, defaultEnvironment, logService, productService));\n\t\t\t\tok(getShellIntegrationInjection({ executable: pwshExe, args: ['-l', '-NoLogo'], isFeatureTerminal: false }, enabledProcessOptions, defaultEnvironment, logService, productService));\n\t\t\t});\n\t\t\tif (isWindows) {\n\t\t\t\ttest('when on windows with conpty false', () => {\n\t\t\t\t\tok(!getShellIntegrationInjection({ executable: pwshExe, args: ['-l'], isFeatureTerminal: false }, winptyProcessOptions, defaultEnvironment, logService, productService));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// These tests are only expected to work on Windows 10 build 18309 and above\n\t\t(getWindowsBuildNumber() < 18309 ? suite.skip : suite)('pwsh', () => {\n\t\t\tconst expectedPs1 = process.platform === 'win32'\n\t\t\t\t? `try { . \"${repoRoot}\\\\out\\\\vs\\\\workbench\\\\contrib\\\\terminal\\\\browser\\\\media\\\\shellIntegration.ps1\" } catch {}`\n\t\t\t\t: `. \"${repoRoot}/out/vs/workbench/contrib/terminal/browser/media/shellIntegration.ps1\"`;\n\t\t\tsuite('should override args', () => {\n\t\t\t\tconst enabledExpectedResult = Object.freeze<IShellIntegrationConfigInjection>({\n\t\t\t\t\tnewArgs: [\n\t\t\t\t\t\t'-noexit',\n\t\t\t\t\t\t'-command',\n\t\t\t\t\t\texpectedPs1\n\t\t\t\t\t],\n\t\t\t\t\tenvMixin: {\n\t\t\t\t\t\tVSCODE_INJECTION: '1'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\ttest('when undefined, []', () => {\n\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: [] }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: undefined }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t});\n\t\t\t\tsuite('when no logo', () => {\n\t\t\t\t\ttest('array - case insensitive', () => {\n\t\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: ['-NoLogo'] }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: ['-NOLOGO'] }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: ['-nol'] }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: ['-NOL'] }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\t});\n\t\t\t\t\ttest('string - case insensitive', () => {\n\t\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: '-NoLogo' }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: '-NOLOGO' }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: '-nol' }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: '-NOL' }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tsuite('should incorporate login arg', () => {\n\t\t\t\tconst enabledExpectedResult = Object.freeze<IShellIntegrationConfigInjection>({\n\t\t\t\t\tnewArgs: [\n\t\t\t\t\t\t'-l',\n\t\t\t\t\t\t'-noexit',\n\t\t\t\t\t\t'-command',\n\t\t\t\t\t\texpectedPs1\n\t\t\t\t\t],\n\t\t\t\t\tenvMixin: {\n\t\t\t\t\t\tVSCODE_INJECTION: '1'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\ttest('when array contains no logo and login', () => {\n\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: ['-l', '-NoLogo'] }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t});\n\t\t\t\ttest('when string', () => {\n\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: '-l' }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t});\n\t\t\t});\n\t\t\tsuite('should not modify args', () => {\n\t\t\t\ttest('when shell integration is disabled', () => {\n\t\t\t\t\tstrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: ['-l'] }, disabledProcessOptions, defaultEnvironment, logService, productService), undefined);\n\t\t\t\t\tstrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: '-l' }, disabledProcessOptions, defaultEnvironment, logService, productService), undefined);\n\t\t\t\t\tstrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: undefined }, disabledProcessOptions, defaultEnvironment, logService, productService), undefined);\n\t\t\t\t});\n\t\t\t\ttest('when using unrecognized arg', () => {\n\t\t\t\t\tstrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: ['-l', '-NoLogo', '-i'] }, disabledProcessOptions, defaultEnvironment, logService, productService), undefined);\n\t\t\t\t});\n\t\t\t\ttest('when using unrecognized arg (string)', () => {\n\t\t\t\t\tstrictEqual(getShellIntegrationInjection({ executable: pwshExe, args: '-i' }, disabledProcessOptions, defaultEnvironment, logService, productService), undefined);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tif (process.platform !== 'win32') {\n\t\t\tsuite('zsh', () => {\n\t\t\t\tsuite('should override args', () => {\n\t\t\t\t\tconst username = userInfo().username;\n\t\t\t\t\tconst expectedDir = new RegExp(`.+\\/${username}-vscode-zsh`);\n\t\t\t\t\tconst customZdotdir = '/custom/zsh/dotdir';\n\t\t\t\t\tconst expectedDests = [\n\t\t\t\t\t\tnew RegExp(`.+\\\\/${username}-vscode-zsh\\\\/\\\\.zshrc`),\n\t\t\t\t\t\tnew RegExp(`.+\\\\/${username}-vscode-zsh\\\\/\\\\.zprofile`),\n\t\t\t\t\t\tnew RegExp(`.+\\\\/${username}-vscode-zsh\\\\/\\\\.zshenv`),\n\t\t\t\t\t\tnew RegExp(`.+\\\\/${username}-vscode-zsh\\\\/\\\\.zlogin`)\n\t\t\t\t\t];\n\t\t\t\t\tconst expectedSources = [\n\t\t\t\t\t\t/.+\\/out\\/vs\\/workbench\\/contrib\\/terminal\\/browser\\/media\\/shellIntegration-rc.zsh/,\n\t\t\t\t\t\t/.+\\/out\\/vs\\/workbench\\/contrib\\/terminal\\/browser\\/media\\/shellIntegration-profile.zsh/,\n\t\t\t\t\t\t/.+\\/out\\/vs\\/workbench\\/contrib\\/terminal\\/browser\\/media\\/shellIntegration-env.zsh/,\n\t\t\t\t\t\t/.+\\/out\\/vs\\/workbench\\/contrib\\/terminal\\/browser\\/media\\/shellIntegration-login.zsh/\n\t\t\t\t\t];\n\t\t\t\t\tfunction assertIsEnabled(result: IShellIntegrationConfigInjection, globalZdotdir = homedir()) {\n\t\t\t\t\t\tstrictEqual(Object.keys(result.envMixin!).length, 3);\n\t\t\t\t\t\tok(result.envMixin!['ZDOTDIR']?.match(expectedDir));\n\t\t\t\t\t\tstrictEqual(result.envMixin!['USER_ZDOTDIR'], globalZdotdir);\n\t\t\t\t\t\tok(result.envMixin!['VSCODE_INJECTION']?.match('1'));\n\t\t\t\t\t\tstrictEqual(result.filesToCopy?.length, 4);\n\t\t\t\t\t\tok(result.filesToCopy[0].dest.match(expectedDests[0]));\n\t\t\t\t\t\tok(result.filesToCopy[1].dest.match(expectedDests[1]));\n\t\t\t\t\t\tok(result.filesToCopy[2].dest.match(expectedDests[2]));\n\t\t\t\t\t\tok(result.filesToCopy[3].dest.match(expectedDests[3]));\n\t\t\t\t\t\tok(result.filesToCopy[0].source.match(expectedSources[0]));\n\t\t\t\t\t\tok(result.filesToCopy[1].source.match(expectedSources[1]));\n\t\t\t\t\t\tok(result.filesToCopy[2].source.match(expectedSources[2]));\n\t\t\t\t\t\tok(result.filesToCopy[3].source.match(expectedSources[3]));\n\t\t\t\t\t}\n\t\t\t\t\ttest('when undefined, []', () => {\n\t\t\t\t\t\tconst result1 = getShellIntegrationInjection({ executable: 'zsh', args: [] }, enabledProcessOptions, defaultEnvironment, logService, productService);\n\t\t\t\t\t\tdeepStrictEqual(result1?.newArgs, ['-i']);\n\t\t\t\t\t\tassertIsEnabled(result1);\n\t\t\t\t\t\tconst result2 = getShellIntegrationInjection({ executable: 'zsh', args: undefined }, enabledProcessOptions, defaultEnvironment, logService, productService);\n\t\t\t\t\t\tdeepStrictEqual(result2?.newArgs, ['-i']);\n\t\t\t\t\t\tassertIsEnabled(result2);\n\t\t\t\t\t});\n\t\t\t\t\tsuite('should incorporate login arg', () => {\n\t\t\t\t\t\ttest('when array', () => {\n\t\t\t\t\t\t\tconst result = getShellIntegrationInjection({ executable: 'zsh', args: ['-l'] }, enabledProcessOptions, defaultEnvironment, logService, productService);\n\t\t\t\t\t\t\tdeepStrictEqual(result?.newArgs, ['-il']);\n\t\t\t\t\t\t\tassertIsEnabled(result);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tsuite('should not modify args', () => {\n\t\t\t\t\t\ttest('when shell integration is disabled', () => {\n\t\t\t\t\t\t\tstrictEqual(getShellIntegrationInjection({ executable: 'zsh', args: ['-l'] }, disabledProcessOptions, defaultEnvironment, logService, productService), undefined);\n\t\t\t\t\t\t\tstrictEqual(getShellIntegrationInjection({ executable: 'zsh', args: undefined }, disabledProcessOptions, defaultEnvironment, logService, productService), undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttest('when using unrecognized arg', () => {\n\t\t\t\t\t\t\tstrictEqual(getShellIntegrationInjection({ executable: 'zsh', args: ['-l', '-fake'] }, disabledProcessOptions, defaultEnvironment, logService, productService), undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tsuite('should incorporate global ZDOTDIR env variable', () => {\n\t\t\t\t\t\ttest('when custom ZDOTDIR', () => {\n\t\t\t\t\t\t\tconst result1 = getShellIntegrationInjection({ executable: 'zsh', args: [] }, enabledProcessOptions, { ...defaultEnvironment, ZDOTDIR: customZdotdir }, logService, productService);\n\t\t\t\t\t\t\tdeepStrictEqual(result1?.newArgs, ['-i']);\n\t\t\t\t\t\t\tassertIsEnabled(result1, customZdotdir);\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttest('when undefined', () => {\n\t\t\t\t\t\t\tconst result1 = getShellIntegrationInjection({ executable: 'zsh', args: [] }, enabledProcessOptions, undefined, logService, productService);\n\t\t\t\t\t\t\tdeepStrictEqual(result1?.newArgs, ['-i']);\n\t\t\t\t\t\t\tassertIsEnabled(result1);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tsuite('bash', () => {\n\t\t\t\tsuite('should override args', () => {\n\t\t\t\t\ttest('when undefined, [], empty string', () => {\n\t\t\t\t\t\tconst enabledExpectedResult = Object.freeze<IShellIntegrationConfigInjection>({\n\t\t\t\t\t\t\tnewArgs: [\n\t\t\t\t\t\t\t\t'--init-file',\n\t\t\t\t\t\t\t\t`${repoRoot}/out/vs/workbench/contrib/terminal/browser/media/shellIntegration-bash.sh`\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tenvMixin: {\n\t\t\t\t\t\t\t\tVSCODE_INJECTION: '1'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: 'bash', args: [] }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: 'bash', args: '' }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: 'bash', args: undefined }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\t});\n\t\t\t\t\tsuite('should set login env variable and not modify args', () => {\n\t\t\t\t\t\tconst enabledExpectedResult = Object.freeze<IShellIntegrationConfigInjection>({\n\t\t\t\t\t\t\tnewArgs: [\n\t\t\t\t\t\t\t\t'--init-file',\n\t\t\t\t\t\t\t\t`${repoRoot}/out/vs/workbench/contrib/terminal/browser/media/shellIntegration-bash.sh`\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tenvMixin: {\n\t\t\t\t\t\t\t\tVSCODE_INJECTION: '1',\n\t\t\t\t\t\t\t\tVSCODE_SHELL_LOGIN: '1'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttest('when array', () => {\n\t\t\t\t\t\t\tdeepStrictEqual(getShellIntegrationInjection({ executable: 'bash', args: ['-l'] }, enabledProcessOptions, defaultEnvironment, logService, productService), enabledExpectedResult);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tsuite('should not modify args', () => {\n\t\t\t\t\t\ttest('when shell integration is disabled', () => {\n\t\t\t\t\t\t\tstrictEqual(getShellIntegrationInjection({ executable: 'bash', args: ['-l'] }, disabledProcessOptions, defaultEnvironment, logService, productService), undefined);\n\t\t\t\t\t\t\tstrictEqual(getShellIntegrationInjection({ executable: 'bash', args: undefined }, disabledProcessOptions, defaultEnvironment, logService, productService), undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttest('when custom array entry', () => {\n\t\t\t\t\t\t\tstrictEqual(getShellIntegrationInjection({ executable: 'bash', args: ['-l', '-i'] }, disabledProcessOptions, defaultEnvironment, logService, productService), undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n});\n"]}