{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/terminal/common/capabilities/terminalCapabilityStore.ts"],"names":[],"mappings":"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","file":"terminalCapabilityStore.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ITerminalCapabilityImplMap, ITerminalCapabilityStore, TerminalCapability, TerminalCapabilityChangeEvent } from 'vs/platform/terminal/common/capabilities/capabilities';\n\nexport class TerminalCapabilityStore extends Disposable implements ITerminalCapabilityStore {\n\tprivate _map: Map<TerminalCapability, { type: TerminalCapability }> = new Map();\n\n\tprivate readonly _onDidRemoveCapabilityType = this._register(new Emitter<TerminalCapability>());\n\treadonly onDidRemoveCapabilityType = this._onDidRemoveCapabilityType.event;\n\tprivate readonly _onDidAddCapabilityType = this._register(new Emitter<TerminalCapability>());\n\treadonly onDidAddCapabilityType = this._onDidAddCapabilityType.event;\n\n\tprivate readonly _onDidRemoveCapability = this._register(new Emitter<TerminalCapabilityChangeEvent<any>>());\n\treadonly onDidRemoveCapability = this._onDidRemoveCapability.event;\n\tprivate readonly _onDidAddCapability = this._register(new Emitter<TerminalCapabilityChangeEvent<any>>());\n\treadonly onDidAddCapability = this._onDidAddCapability.event;\n\n\tget items(): IterableIterator<TerminalCapability> {\n\t\treturn this._map.keys();\n\t}\n\n\tadd<T extends TerminalCapability>(capability: T, impl: ITerminalCapabilityImplMap[T]) {\n\t\tthis._map.set(capability, impl);\n\t\tthis._onDidAddCapabilityType.fire(capability);\n\t\tthis._onDidAddCapability.fire({ id: capability, capability: impl });\n\t}\n\n\tget<T extends TerminalCapability>(capability: T): ITerminalCapabilityImplMap[T] | undefined {\n\t\t// HACK: This isn't totally safe since the Map key and value are not connected\n\t\treturn this._map.get(capability) as ITerminalCapabilityImplMap[T] | undefined;\n\t}\n\n\tremove(capability: TerminalCapability) {\n\t\tconst impl = this._map.get(capability);\n\t\tif (!impl) {\n\t\t\treturn;\n\t\t}\n\t\tthis._map.delete(capability);\n\t\tthis._onDidRemoveCapabilityType.fire(capability);\n\t\tthis._onDidAddCapability.fire({ id: capability, capability: impl });\n\t}\n\n\thas(capability: TerminalCapability) {\n\t\treturn this._map.has(capability);\n\t}\n}\n\nexport class TerminalCapabilityStoreMultiplexer extends Disposable implements ITerminalCapabilityStore {\n\treadonly _stores: ITerminalCapabilityStore[] = [];\n\n\tprivate readonly _onDidRemoveCapabilityType = this._register(new Emitter<TerminalCapability>());\n\treadonly onDidRemoveCapabilityType = this._onDidRemoveCapabilityType.event;\n\tprivate readonly _onDidAddCapabilityType = this._register(new Emitter<TerminalCapability>());\n\treadonly onDidAddCapabilityType = this._onDidAddCapabilityType.event;\n\n\tprivate readonly _onDidRemoveCapability = this._register(new Emitter<TerminalCapabilityChangeEvent<any>>());\n\treadonly onDidRemoveCapability = this._onDidRemoveCapability.event;\n\tprivate readonly _onDidAddCapability = this._register(new Emitter<TerminalCapabilityChangeEvent<any>>());\n\treadonly onDidAddCapability = this._onDidAddCapability.event;\n\n\tget items(): IterableIterator<TerminalCapability> {\n\t\treturn this._items();\n\t}\n\n\tprivate *_items(): IterableIterator<TerminalCapability> {\n\t\tfor (const store of this._stores) {\n\t\t\tfor (const c of store.items) {\n\t\t\t\tyield c;\n\t\t\t}\n\t\t}\n\t}\n\n\thas(capability: TerminalCapability): boolean {\n\t\tfor (const store of this._stores) {\n\t\t\tfor (const c of store.items) {\n\t\t\t\tif (c === capability) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tget<T extends TerminalCapability>(capability: T): ITerminalCapabilityImplMap[T] | undefined {\n\t\tfor (const store of this._stores) {\n\t\t\tconst c = store.get(capability);\n\t\t\tif (c) {\n\t\t\t\treturn c;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tadd(store: ITerminalCapabilityStore) {\n\t\tthis._stores.push(store);\n\t\tfor (const capability of store.items) {\n\t\t\tthis._onDidAddCapabilityType.fire(capability);\n\t\t\tthis._onDidAddCapability.fire({ id: capability, capability: store.get(capability)! });\n\t\t}\n\t\tthis._register(store.onDidAddCapabilityType(e => this._onDidAddCapabilityType.fire(e)));\n\t\tthis._register(store.onDidAddCapability(e => this._onDidAddCapability.fire(e)));\n\t\tthis._register(store.onDidRemoveCapabilityType(e => this._onDidRemoveCapabilityType.fire(e)));\n\t\tthis._register(store.onDidRemoveCapability(e => this._onDidRemoveCapability.fire(e)));\n\t}\n}\n"]}