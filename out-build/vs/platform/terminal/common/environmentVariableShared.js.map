{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/terminal/common/environmentVariableShared.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAIhG,8DAA8D;IAE9D,SAAgB,GAAG,CAAoC,UAA4D;QAClH,OAAO,CAAC,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;IAClC,CAAC;IAFD,kBAEC;IAED,SAAgB,GAAG,CAAgC,cAA0F;QAC5I,OAAO,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5D,CAAC;IAFD,kBAEC;IAED,SAAgB,GAAG,CAClB,oBAAgE;QAEhE,OAAO,IAAI,GAAG,CAAsC,oBAAoB,CAAC,CAAC;IAC3E,CAAC;IAJD,kBAIC;IAED,SAAgB,GAAG,CAClB,kCAAsF;QAEtF,OAAO,IAAI,GAAG,CAAoD,kCAAkC,IAAI,EAAE,CAAC,CAAC;IAC7G,CAAC;IAJD,kBAIC;IAED,SAAgB,GAAG,CAAqC,WAAgE;QACvH,OAAO,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YAChD,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAoC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAgC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QAC1H,CAAC,CAAC,CAAC;IACJ,CAAC;IAJD,kBAIC;IAED,SAAgB,GAAG,CAClB,oBAAiE;QAEjE,OAAO,IAAI,GAAG,CAAyC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACnF,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAsC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,cAAc,EAAE,GAAG,CAAkC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACpI,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAND,kBAMC","file":"environmentVariableShared.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentVariableCollectionDescription, IEnvironmentVariableCollection, IEnvironmentVariableMutator, ISerializableEnvironmentDescriptionMap as ISerializableEnvironmentDescriptionMap, ISerializableEnvironmentVariableCollection, ISerializableEnvironmentVariableCollections } from 'vs/platform/terminal/common/environmentVariable';\n\n// This file is shared between the renderer and extension host\n\nexport function serializeEnvironmentVariableCollection(collection: ReadonlyMap<string, IEnvironmentVariableMutator>): ISerializableEnvironmentVariableCollection {\n\treturn [...collection.entries()];\n}\n\nexport function serializeEnvironmentDescriptionMap(descriptionMap: ReadonlyMap<string, IEnvironmentVariableCollectionDescription> | undefined): ISerializableEnvironmentDescriptionMap {\n\treturn descriptionMap ? [...descriptionMap.entries()] : [];\n}\n\nexport function deserializeEnvironmentVariableCollection(\n\tserializedCollection: ISerializableEnvironmentVariableCollection\n): Map<string, IEnvironmentVariableMutator> {\n\treturn new Map<string, IEnvironmentVariableMutator>(serializedCollection);\n}\n\nexport function deserializeEnvironmentDescriptionMap(\n\tserializableEnvironmentDescription: ISerializableEnvironmentDescriptionMap | undefined\n): Map<string, IEnvironmentVariableCollectionDescription> {\n\treturn new Map<string, IEnvironmentVariableCollectionDescription>(serializableEnvironmentDescription ?? []);\n}\n\nexport function serializeEnvironmentVariableCollections(collections: ReadonlyMap<string, IEnvironmentVariableCollection>): ISerializableEnvironmentVariableCollections {\n\treturn Array.from(collections.entries()).map(e => {\n\t\treturn [e[0], serializeEnvironmentVariableCollection(e[1].map), serializeEnvironmentDescriptionMap(e[1].descriptionMap)];\n\t});\n}\n\nexport function deserializeEnvironmentVariableCollections(\n\tserializedCollection: ISerializableEnvironmentVariableCollections\n): Map<string, IEnvironmentVariableCollection> {\n\treturn new Map<string, IEnvironmentVariableCollection>(serializedCollection.map(e => {\n\t\treturn [e[0], { map: deserializeEnvironmentVariableCollection(e[1]), descriptionMap: deserializeEnvironmentDescriptionMap(e[2]) }];\n\t}));\n}\n"]}