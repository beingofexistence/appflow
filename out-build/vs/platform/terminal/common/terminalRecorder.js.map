{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/terminal/common/terminalRecorder.ts"],"names":[],"mappings":"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","file":"terminalRecorder.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPtyHostProcessReplayEvent } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { ReplayEntry } from 'vs/platform/terminal/common/terminalProcess';\n\nconst enum Constants {\n\tMaxRecorderDataSize = 1024 * 1024 // 1MB\n}\n\ninterface RecorderEntry {\n\tcols: number;\n\trows: number;\n\tdata: string[];\n}\n\nexport interface IRemoteTerminalProcessReplayEvent {\n\tevents: ReplayEntry[];\n}\n\nexport class TerminalRecorder {\n\n\tprivate _entries: RecorderEntry[];\n\tprivate _totalDataLength: number = 0;\n\n\tconstructor(cols: number, rows: number) {\n\t\tthis._entries = [{ cols, rows, data: [] }];\n\t}\n\n\thandleResize(cols: number, rows: number): void {\n\t\tif (this._entries.length > 0) {\n\t\t\tconst lastEntry = this._entries[this._entries.length - 1];\n\t\t\tif (lastEntry.data.length === 0) {\n\t\t\t\t// last entry is just a resize, so just remove it\n\t\t\t\tthis._entries.pop();\n\t\t\t}\n\t\t}\n\n\t\tif (this._entries.length > 0) {\n\t\t\tconst lastEntry = this._entries[this._entries.length - 1];\n\t\t\tif (lastEntry.cols === cols && lastEntry.rows === rows) {\n\t\t\t\t// nothing changed\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (lastEntry.cols === 0 && lastEntry.rows === 0) {\n\t\t\t\t// we finally received a good size!\n\t\t\t\tlastEntry.cols = cols;\n\t\t\t\tlastEntry.rows = rows;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._entries.push({ cols, rows, data: [] });\n\t}\n\n\thandleData(data: string): void {\n\t\tconst lastEntry = this._entries[this._entries.length - 1];\n\t\tlastEntry.data.push(data);\n\n\t\tthis._totalDataLength += data.length;\n\t\twhile (this._totalDataLength > Constants.MaxRecorderDataSize) {\n\t\t\tconst firstEntry = this._entries[0];\n\t\t\tconst remainingToDelete = this._totalDataLength - Constants.MaxRecorderDataSize;\n\t\t\tif (remainingToDelete >= firstEntry.data[0].length) {\n\t\t\t\t// the first data piece must be deleted\n\t\t\t\tthis._totalDataLength -= firstEntry.data[0].length;\n\t\t\t\tfirstEntry.data.shift();\n\t\t\t\tif (firstEntry.data.length === 0) {\n\t\t\t\t\t// the first entry must be deleted\n\t\t\t\t\tthis._entries.shift();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// the first data piece must be partially deleted\n\t\t\t\tfirstEntry.data[0] = firstEntry.data[0].substr(remainingToDelete);\n\t\t\t\tthis._totalDataLength -= remainingToDelete;\n\t\t\t}\n\t\t}\n\t}\n\n\tgenerateReplayEventSync(): IPtyHostProcessReplayEvent {\n\t\t// normalize entries to one element per data array\n\t\tthis._entries.forEach((entry) => {\n\t\t\tif (entry.data.length > 0) {\n\t\t\t\tentry.data = [entry.data.join('')];\n\t\t\t}\n\t\t});\n\t\treturn {\n\t\t\tevents: this._entries.map(entry => ({ cols: entry.cols, rows: entry.rows, data: entry.data[0] ?? '' })),\n\t\t\t// No command restoration is needed when relaunching terminals\n\t\t\tcommands: {\n\t\t\t\tisWindowsPty: false,\n\t\t\t\tcommands: []\n\t\t\t}\n\t\t};\n\t}\n\n\tasync generateReplayEvent(): Promise<IPtyHostProcessReplayEvent> {\n\t\treturn this.generateReplayEventSync();\n\t}\n}\n"]}