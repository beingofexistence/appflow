{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/terminal/node/heartbeatService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,MAAa,IAAiB,SAAQ,eAAG;QAIxC;YACC,KAAK,EAAE,CAAC;YAJQ,MAAC,GAAS,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YACtD,WAAM,GAAG,IAAI,CAAC,CAAC,CAAO,KAAK,CAAC;YAKpC,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE;gBACjC,IAAI,CAAC,CAAC,CAAO,IAAI,EAAE,CAAC;YACrB,CAAC,EAAE,6BAAkB,CAAC,YAAY,CAAC,CAAC;YACpC,IAAI,CAAC,CAAC,CAAS,IAAA,eAAG,EAAU,GAAG,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC7D,CAAC;KACD;IAZD,oBAYC","file":"heartbeatService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { HeartbeatConstants, IHeartbeatService } from 'vs/platform/terminal/common/terminal';\n\nexport class HeartbeatService extends Disposable implements IHeartbeatService {\n\tprivate readonly _onBeat = this._register(new Emitter<void>());\n\treadonly onBeat = this._onBeat.event;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst interval = setInterval(() => {\n\t\t\tthis._onBeat.fire();\n\t\t}, HeartbeatConstants.BeatInterval);\n\t\tthis._register(toDisposable(() => clearInterval(interval)));\n\t}\n}\n"]}