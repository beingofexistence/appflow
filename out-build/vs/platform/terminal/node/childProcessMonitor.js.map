{"version":3,"sources":["file:///workspace/appflow/src/vs/platform/terminal/node/childProcessMonitor.ts"],"names":[],"mappings":"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","file":"childProcessMonitor.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { parse } from 'vs/base/common/path';\nimport { debounce, throttle } from 'vs/base/common/decorators';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ProcessItem } from 'vs/base/common/processes';\nimport { listProcesses } from 'vs/base/node/ps';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nconst enum Constants {\n\t/**\n\t * The amount of time to throttle checks when the process receives output.\n\t */\n\tInactiveThrottleDuration = 5000,\n\t/**\n\t * The amount of time to debounce check when the process receives input.\n\t */\n\tActiveDebounceDuration = 1000,\n}\n\nexport const ignoreProcessNames: string[] = [];\n\n/**\n * Monitors a process for child processes, checking at differing times depending on input and output\n * calls into the monitor.\n */\nexport class ChildProcessMonitor extends Disposable {\n\tprivate _hasChildProcesses: boolean = false;\n\tprivate set hasChildProcesses(value: boolean) {\n\t\tif (this._hasChildProcesses !== value) {\n\t\t\tthis._hasChildProcesses = value;\n\t\t\tthis._logService.debug('ChildProcessMonitor: Has child processes changed', value);\n\t\t\tthis._onDidChangeHasChildProcesses.fire(value);\n\t\t}\n\t}\n\t/**\n\t * Whether the process has child processes.\n\t */\n\tget hasChildProcesses(): boolean { return this._hasChildProcesses; }\n\n\tprivate readonly _onDidChangeHasChildProcesses = this._register(new Emitter<boolean>());\n\t/**\n\t * An event that fires when whether the process has child processes changes.\n\t */\n\treadonly onDidChangeHasChildProcesses = this._onDidChangeHasChildProcesses.event;\n\n\tconstructor(\n\t\tprivate readonly _pid: number,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * Input was triggered on the process.\n\t */\n\thandleInput() {\n\t\tthis._refreshActive();\n\t}\n\n\t/**\n\t * Output was triggered on the process.\n\t */\n\thandleOutput() {\n\t\tthis._refreshInactive();\n\t}\n\n\t@debounce(Constants.ActiveDebounceDuration)\n\tprivate async _refreshActive(): Promise<void> {\n\t\tif (this._store.isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tconst processItem = await listProcesses(this._pid);\n\t\t\tthis.hasChildProcesses = this._processContainsChildren(processItem);\n\t\t} catch (e) {\n\t\t\tthis._logService.debug('ChildProcessMonitor: Fetching process tree failed', e);\n\t\t}\n\t}\n\n\t@throttle(Constants.InactiveThrottleDuration)\n\tprivate _refreshInactive(): void {\n\t\tthis._refreshActive();\n\t}\n\n\tprivate _processContainsChildren(processItem: ProcessItem): boolean {\n\t\t// No child processes\n\t\tif (!processItem.children) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// A single child process, handle special cases\n\t\tif (processItem.children.length === 1) {\n\t\t\tconst item = processItem.children[0];\n\t\t\tlet cmd: string;\n\t\t\tif (item.cmd.startsWith(`\"`)) {\n\t\t\t\tcmd = item.cmd.substring(1, item.cmd.indexOf(`\"`, 1));\n\t\t\t} else {\n\t\t\t\tconst spaceIndex = item.cmd.indexOf(` `);\n\t\t\t\tif (spaceIndex === -1) {\n\t\t\t\t\tcmd = item.cmd;\n\t\t\t\t} else {\n\t\t\t\t\tcmd = item.cmd.substring(0, spaceIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ignoreProcessNames.indexOf(parse(cmd).name) === -1;\n\t\t}\n\n\t\t// Fallback, count child processes\n\t\treturn processItem.children.length > 0;\n\t}\n}\n"]}