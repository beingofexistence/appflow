{"version":3,"sources":["vs/code/electron-sandbox/processExplorer/processExplorerMain.ts"],"names":[],"mappings":"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","file":"processExplorerMain.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/processExplorer';\nimport 'vs/base/browser/ui/codicons/codiconStyles'; // make sure codicon css is loaded\nimport { localize } from 'vs/nls';\nimport { $, append, createStyleSheet } from 'vs/base/browser/dom';\nimport { IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { DataTree } from 'vs/base/browser/ui/tree/dataTree';\nimport { IDataSource, ITreeNode, ITreeRenderer } from 'vs/base/browser/ui/tree/tree';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { ProcessItem } from 'vs/base/common/processes';\nimport { IContextMenuItem } from 'vs/base/parts/contextmenu/common/contextmenu';\nimport { popup } from 'vs/base/parts/contextmenu/electron-sandbox/contextmenu';\nimport { ipcRenderer } from 'vs/base/parts/sandbox/electron-sandbox/globals';\nimport { IRemoteDiagnosticError, isRemoteDiagnosticError } from 'vs/platform/diagnostics/common/diagnostics';\nimport { ByteSize } from 'vs/platform/files/common/files';\nimport { ElectronIPCMainProcessService } from 'vs/platform/ipc/electron-sandbox/mainProcessService';\nimport { ProcessExplorerData, ProcessExplorerStyles, ProcessExplorerWindowConfiguration } from 'vs/platform/issue/common/issue';\nimport { INativeHostService } from 'vs/platform/native/common/native';\nimport { NativeHostService } from 'vs/platform/native/electron-sandbox/nativeHostService';\nimport { getIconsStyleSheet } from 'vs/platform/theme/browser/iconsStyleSheet';\nimport { applyZoom, zoomIn, zoomOut } from 'vs/platform/window/electron-sandbox/window';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { KeyCode } from 'vs/base/common/keyCodes';\n\nconst DEBUG_FLAGS_PATTERN = /\\s--inspect(?:-brk|port)?=(?<port>\\d+)?/;\nconst DEBUG_PORT_PATTERN = /\\s--inspect-port=(?<port>\\d+)/;\n\nclass ProcessListDelegate implements IListVirtualDelegate<MachineProcessInformation | ProcessItem | IRemoteDiagnosticError> {\n\tgetHeight(element: MachineProcessInformation | ProcessItem | IRemoteDiagnosticError) {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: ProcessInformation | MachineProcessInformation | ProcessItem | IRemoteDiagnosticError) {\n\t\tif (isProcessItem(element)) {\n\t\t\treturn 'process';\n\t\t}\n\n\t\tif (isMachineProcessInformation(element)) {\n\t\t\treturn 'machine';\n\t\t}\n\n\t\tif (isRemoteDiagnosticError(element)) {\n\t\t\treturn 'error';\n\t\t}\n\n\t\tif (isProcessInformation(element)) {\n\t\t\treturn 'header';\n\t\t}\n\n\t\treturn '';\n\t}\n}\n\ninterface IProcessItemTemplateData extends IProcessRowTemplateData {\n\treadonly CPU: HTMLElement;\n\treadonly memory: HTMLElement;\n\treadonly PID: HTMLElement;\n}\n\ninterface IProcessRowTemplateData {\n\treadonly name: HTMLElement;\n}\n\nclass ProcessTreeDataSource implements IDataSource<ProcessTree, ProcessInformation | MachineProcessInformation | ProcessItem | IRemoteDiagnosticError>  {\n\thasChildren(element: ProcessTree | ProcessInformation | MachineProcessInformation | ProcessItem | IRemoteDiagnosticError): boolean {\n\t\tif (isRemoteDiagnosticError(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (isProcessItem(element)) {\n\t\t\treturn !!element.children?.length;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tgetChildren(element: ProcessTree | ProcessInformation | MachineProcessInformation | ProcessItem | IRemoteDiagnosticError) {\n\t\tif (isProcessItem(element)) {\n\t\t\treturn element.children ? element.children : [];\n\t\t}\n\n\t\tif (isRemoteDiagnosticError(element)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (isProcessInformation(element)) {\n\t\t\t// If there are multiple process roots, return these, otherwise go directly to the root process\n\t\t\tif (element.processRoots.length > 1) {\n\t\t\t\treturn element.processRoots;\n\t\t\t} else {\n\t\t\t\treturn [element.processRoots[0].rootProcess];\n\t\t\t}\n\t\t}\n\n\t\tif (isMachineProcessInformation(element)) {\n\t\t\treturn [element.rootProcess];\n\t\t}\n\n\t\treturn [element.processes];\n\t}\n}\n\nclass ProcessHeaderTreeRenderer implements ITreeRenderer<ProcessInformation, void, IProcessItemTemplateData> {\n\ttemplateId: string = 'header';\n\n\trenderTemplate(container: HTMLElement): IProcessItemTemplateData {\n\t\tconst row = append(container, $('.row'));\n\t\tconst name = append(row, $('.nameLabel'));\n\t\tconst CPU = append(row, $('.cpu'));\n\t\tconst memory = append(row, $('.memory'));\n\t\tconst PID = append(row, $('.pid'));\n\t\treturn { name, CPU, memory, PID };\n\t}\n\n\trenderElement(node: ITreeNode<ProcessInformation, void>, index: number, templateData: IProcessItemTemplateData, height: number | undefined): void {\n\t\ttemplateData.name.textContent = localize('name', \"Process Name\");\n\t\ttemplateData.CPU.textContent = localize('cpu', \"CPU (%)\");\n\t\ttemplateData.PID.textContent = localize('pid', \"PID\");\n\t\ttemplateData.memory.textContent = localize('memory', \"Memory (MB)\");\n\n\t}\n\n\tdisposeTemplate(templateData: any): void {\n\t\t// Nothing to do\n\t}\n}\n\nclass MachineRenderer implements ITreeRenderer<MachineProcessInformation, void, IProcessRowTemplateData> {\n\ttemplateId: string = 'machine';\n\trenderTemplate(container: HTMLElement): IProcessRowTemplateData {\n\t\tconst data = Object.create(null);\n\t\tconst row = append(container, $('.row'));\n\t\tdata.name = append(row, $('.nameLabel'));\n\t\treturn data;\n\t}\n\trenderElement(node: ITreeNode<MachineProcessInformation, void>, index: number, templateData: IProcessRowTemplateData, height: number | undefined): void {\n\t\ttemplateData.name.textContent = node.element.name;\n\t}\n\tdisposeTemplate(templateData: IProcessRowTemplateData): void {\n\t\t// Nothing to do\n\t}\n}\n\nclass ErrorRenderer implements ITreeRenderer<IRemoteDiagnosticError, void, IProcessRowTemplateData> {\n\ttemplateId: string = 'error';\n\trenderTemplate(container: HTMLElement): IProcessRowTemplateData {\n\t\tconst data = Object.create(null);\n\t\tconst row = append(container, $('.row'));\n\t\tdata.name = append(row, $('.nameLabel'));\n\t\treturn data;\n\t}\n\trenderElement(node: ITreeNode<IRemoteDiagnosticError, void>, index: number, templateData: IProcessRowTemplateData, height: number | undefined): void {\n\t\ttemplateData.name.textContent = node.element.errorMessage;\n\t}\n\tdisposeTemplate(templateData: IProcessRowTemplateData): void {\n\t\t// Nothing to do\n\t}\n}\n\n\nclass ProcessRenderer implements ITreeRenderer<ProcessItem, void, IProcessItemTemplateData> {\n\tconstructor(private platform: string, private totalMem: number, private mapPidToName: Map<number, string>) { }\n\n\ttemplateId: string = 'process';\n\trenderTemplate(container: HTMLElement): IProcessItemTemplateData {\n\t\tconst row = append(container, $('.row'));\n\n\t\tconst name = append(row, $('.nameLabel'));\n\t\tconst CPU = append(row, $('.cpu'));\n\t\tconst memory = append(row, $('.memory'));\n\t\tconst PID = append(row, $('.pid'));\n\n\t\treturn { name, CPU, PID, memory };\n\t}\n\trenderElement(node: ITreeNode<ProcessItem, void>, index: number, templateData: IProcessItemTemplateData, height: number | undefined): void {\n\t\tconst { element } = node;\n\n\t\tconst pid = element.pid.toFixed(0);\n\n\t\tlet name = element.name;\n\t\tif (this.mapPidToName.has(element.pid)) {\n\t\t\tname = this.mapPidToName.get(element.pid)!;\n\t\t}\n\n\t\ttemplateData.name.textContent = name;\n\t\ttemplateData.name.title = element.cmd;\n\n\t\ttemplateData.CPU.textContent = element.load.toFixed(0);\n\t\ttemplateData.PID.textContent = pid;\n\t\ttemplateData.PID.parentElement!.id = `pid-${pid}`;\n\n\t\tconst memory = this.platform === 'win32' ? element.mem : (this.totalMem * (element.mem / 100));\n\t\ttemplateData.memory.textContent = (memory / ByteSize.MB).toFixed(0);\n\t}\n\n\tdisposeTemplate(templateData: IProcessItemTemplateData): void {\n\t\t// Nothing to do\n\t}\n}\n\ninterface MachineProcessInformation {\n\tname: string;\n\trootProcess: ProcessItem | IRemoteDiagnosticError;\n}\n\ninterface ProcessInformation {\n\tprocessRoots: MachineProcessInformation[];\n}\n\ninterface ProcessTree {\n\tprocesses: ProcessInformation;\n}\n\nfunction isMachineProcessInformation(item: any): item is MachineProcessInformation {\n\treturn !!item.name && !!item.rootProcess;\n}\n\nfunction isProcessInformation(item: any): item is ProcessInformation {\n\treturn !!item.processRoots;\n}\n\nfunction isProcessItem(item: any): item is ProcessItem {\n\treturn !!item.pid;\n}\n\nclass ProcessExplorer {\n\tprivate lastRequestTime: number;\n\n\tprivate mapPidToName = new Map<number, string>();\n\n\tprivate nativeHostService: INativeHostService;\n\n\tprivate tree: DataTree<any, ProcessTree | MachineProcessInformation | ProcessItem | ProcessInformation | IRemoteDiagnosticError, any> | undefined;\n\n\tconstructor(windowId: number, private data: ProcessExplorerData) {\n\t\tconst mainProcessService = new ElectronIPCMainProcessService(windowId);\n\t\tthis.nativeHostService = new NativeHostService(windowId, mainProcessService) as INativeHostService;\n\n\t\tthis.applyStyles(data.styles);\n\t\tthis.setEventHandlers(data);\n\n\t\tipcRenderer.on('vscode:pidToNameResponse', (event: unknown, pidToNames: [number, string][]) => {\n\t\t\tthis.mapPidToName = new Map<number, string>();\n\n\t\t\tfor (const [pid, name] of pidToNames) {\n\t\t\t\tthis.mapPidToName.set(pid, name);\n\t\t\t}\n\t\t});\n\n\t\tipcRenderer.on('vscode:listProcessesResponse', async (event: unknown, processRoots: MachineProcessInformation[]) => {\n\t\t\tprocessRoots.forEach((info, index) => {\n\t\t\t\tif (isProcessItem(info.rootProcess)) {\n\t\t\t\t\tinfo.rootProcess.name = index === 0 ? `${this.data.applicationName} main` : 'remote agent';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!this.tree) {\n\t\t\t\tawait this.createProcessTree(processRoots);\n\t\t\t} else {\n\t\t\t\tthis.tree.setInput({ processes: { processRoots } });\n\t\t\t\tthis.tree.layout(window.innerHeight, window.innerWidth);\n\t\t\t}\n\n\t\t\tthis.requestProcessList(0);\n\t\t});\n\n\t\tthis.lastRequestTime = Date.now();\n\t\tipcRenderer.send('vscode:pidToNameRequest');\n\t\tipcRenderer.send('vscode:listProcesses');\n\t}\n\n\tprivate setEventHandlers(data: ProcessExplorerData): void {\n\t\tdocument.onkeydown = (e: KeyboardEvent) => {\n\t\t\tconst cmdOrCtrlKey = data.platform === 'darwin' ? e.metaKey : e.ctrlKey;\n\n\t\t\t// Cmd/Ctrl + w closes issue window\n\t\t\tif (cmdOrCtrlKey && e.keyCode === 87) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\n\t\t\t\tipcRenderer.send('vscode:closeProcessExplorer');\n\t\t\t}\n\n\t\t\t// Cmd/Ctrl + zooms in\n\t\t\tif (cmdOrCtrlKey && e.keyCode === 187) {\n\t\t\t\tzoomIn();\n\t\t\t}\n\n\t\t\t// Cmd/Ctrl - zooms out\n\t\t\tif (cmdOrCtrlKey && e.keyCode === 189) {\n\t\t\t\tzoomOut();\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate async createProcessTree(processRoots: MachineProcessInformation[]): Promise<void> {\n\t\tconst container = document.getElementById('process-list');\n\t\tif (!container) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { totalmem } = await this.nativeHostService.getOSStatistics();\n\n\t\tconst renderers = [\n\t\t\tnew ProcessRenderer(this.data.platform, totalmem, this.mapPidToName),\n\t\t\tnew ProcessHeaderTreeRenderer(),\n\t\t\tnew MachineRenderer(),\n\t\t\tnew ErrorRenderer()\n\t\t];\n\n\t\tthis.tree = new DataTree('processExplorer',\n\t\t\tcontainer,\n\t\t\tnew ProcessListDelegate(),\n\t\t\trenderers,\n\t\t\tnew ProcessTreeDataSource(),\n\t\t\t{\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId: (element: ProcessTree | ProcessItem | MachineProcessInformation | ProcessInformation | IRemoteDiagnosticError) => {\n\t\t\t\t\t\tif (isProcessItem(element)) {\n\t\t\t\t\t\t\treturn element.pid.toString();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isRemoteDiagnosticError(element)) {\n\t\t\t\t\t\t\treturn element.hostName;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isProcessInformation(element)) {\n\t\t\t\t\t\t\treturn 'processes';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isMachineProcessInformation(element)) {\n\t\t\t\t\t\t\treturn element.name;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn 'header';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.tree.setInput({ processes: { processRoots } });\n\t\tthis.tree.layout(window.innerHeight, window.innerWidth);\n\t\tthis.tree.onKeyDown(e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.keyCode === KeyCode.KeyE && event.altKey) {\n\t\t\t\tconst selectionPids = this.getSelectedPids();\n\t\t\t\tvoid Promise.all(selectionPids.map((pid) => this.nativeHostService.killProcess(pid, 'SIGTERM'))).then(() => this.tree?.refresh());\n\t\t\t}\n\t\t});\n\t\tthis.tree.onContextMenu(e => {\n\t\t\tif (isProcessItem(e.element)) {\n\t\t\t\tthis.showContextMenu(e.element, true);\n\t\t\t}\n\t\t});\n\n\t\tcontainer.style.height = `${window.innerHeight}px`;\n\n\t\twindow.addEventListener('resize', () => {\n\t\t\tcontainer.style.height = `${window.innerHeight}px`;\n\t\t\tthis.tree?.layout(window.innerHeight, window.innerWidth);\n\t\t});\n\t}\n\n\tprivate isDebuggable(cmd: string): boolean {\n\t\tconst matches = DEBUG_FLAGS_PATTERN.exec(cmd);\n\t\treturn (matches && matches.groups!.port !== '0') || cmd.indexOf('node ') >= 0 || cmd.indexOf('node.exe') >= 0;\n\t}\n\n\tprivate attachTo(item: ProcessItem) {\n\t\tconst config: any = {\n\t\t\ttype: 'node',\n\t\t\trequest: 'attach',\n\t\t\tname: `process ${item.pid}`\n\t\t};\n\n\t\tlet matches = DEBUG_FLAGS_PATTERN.exec(item.cmd);\n\t\tif (matches) {\n\t\t\tconfig.port = Number(matches.groups!.port);\n\t\t} else {\n\t\t\t// no port -> try to attach via pid (send SIGUSR1)\n\t\t\tconfig.processId = String(item.pid);\n\t\t}\n\n\t\t// a debug-port=n or inspect-port=n overrides the port\n\t\tmatches = DEBUG_PORT_PATTERN.exec(item.cmd);\n\t\tif (matches) {\n\t\t\t// override port\n\t\t\tconfig.port = Number(matches.groups!.port);\n\t\t}\n\n\t\tipcRenderer.send('vscode:workbenchCommand', { id: 'debug.startFromConfig', from: 'processExplorer', args: [config] });\n\t}\n\n\tprivate applyStyles(styles: ProcessExplorerStyles): void {\n\t\tconst styleElement = createStyleSheet();\n\t\tconst content: string[] = [];\n\n\t\tif (styles.listFocusBackground) {\n\t\t\tcontent.push(`.monaco-list:focus .monaco-list-row.focused { background-color: ${styles.listFocusBackground}; }`);\n\t\t\tcontent.push(`.monaco-list:focus .monaco-list-row.focused:hover { background-color: ${styles.listFocusBackground}; }`);\n\t\t}\n\n\t\tif (styles.listFocusForeground) {\n\t\t\tcontent.push(`.monaco-list:focus .monaco-list-row.focused { color: ${styles.listFocusForeground}; }`);\n\t\t}\n\n\t\tif (styles.listActiveSelectionBackground) {\n\t\t\tcontent.push(`.monaco-list:focus .monaco-list-row.selected { background-color: ${styles.listActiveSelectionBackground}; }`);\n\t\t\tcontent.push(`.monaco-list:focus .monaco-list-row.selected:hover { background-color: ${styles.listActiveSelectionBackground}; }`);\n\t\t}\n\n\t\tif (styles.listActiveSelectionForeground) {\n\t\t\tcontent.push(`.monaco-list:focus .monaco-list-row.selected { color: ${styles.listActiveSelectionForeground}; }`);\n\t\t}\n\n\t\tif (styles.listHoverBackground) {\n\t\t\tcontent.push(`.monaco-list-row:hover:not(.selected):not(.focused) { background-color: ${styles.listHoverBackground}; }`);\n\t\t}\n\n\t\tif (styles.listHoverForeground) {\n\t\t\tcontent.push(`.monaco-list-row:hover:not(.selected):not(.focused) { color: ${styles.listHoverForeground}; }`);\n\t\t}\n\n\t\tif (styles.listFocusOutline) {\n\t\t\tcontent.push(`.monaco-list:focus .monaco-list-row.focused { outline: 1px solid ${styles.listFocusOutline}; outline-offset: -1px; }`);\n\t\t}\n\n\t\tif (styles.listHoverOutline) {\n\t\t\tcontent.push(`.monaco-list-row:hover { outline: 1px dashed ${styles.listHoverOutline}; outline-offset: -1px; }`);\n\t\t}\n\n\t\t// Scrollbars\n\t\tif (styles.scrollbarShadowColor) {\n\t\t\tcontent.push(`\n\t\t\t\t.monaco-scrollable-element > .shadow.top {\n\t\t\t\t\tbox-shadow: ${styles.scrollbarShadowColor} 0 6px 6px -6px inset;\n\t\t\t\t}\n\n\t\t\t\t.monaco-scrollable-element > .shadow.left {\n\t\t\t\t\tbox-shadow: ${styles.scrollbarShadowColor} 6px 0 6px -6px inset;\n\t\t\t\t}\n\n\t\t\t\t.monaco-scrollable-element > .shadow.top.left {\n\t\t\t\t\tbox-shadow: ${styles.scrollbarShadowColor} 6px 6px 6px -6px inset;\n\t\t\t\t}\n\t\t\t`);\n\t\t}\n\n\t\tif (styles.scrollbarSliderBackgroundColor) {\n\t\t\tcontent.push(`\n\t\t\t\t.monaco-scrollable-element > .scrollbar > .slider {\n\t\t\t\t\tbackground: ${styles.scrollbarSliderBackgroundColor};\n\t\t\t\t}\n\t\t\t`);\n\t\t}\n\n\t\tif (styles.scrollbarSliderHoverBackgroundColor) {\n\t\t\tcontent.push(`\n\t\t\t\t.monaco-scrollable-element > .scrollbar > .slider:hover {\n\t\t\t\t\tbackground: ${styles.scrollbarSliderHoverBackgroundColor};\n\t\t\t\t}\n\t\t\t`);\n\t\t}\n\n\t\tif (styles.scrollbarSliderActiveBackgroundColor) {\n\t\t\tcontent.push(`\n\t\t\t\t.monaco-scrollable-element > .scrollbar > .slider.active {\n\t\t\t\t\tbackground: ${styles.scrollbarSliderActiveBackgroundColor};\n\t\t\t\t}\n\t\t\t`);\n\t\t}\n\n\t\tstyleElement.textContent = content.join('\\n');\n\n\t\tif (styles.color) {\n\t\t\tdocument.body.style.color = styles.color;\n\t\t}\n\t}\n\n\tprivate showContextMenu(item: ProcessItem, isLocal: boolean) {\n\t\tconst items: IContextMenuItem[] = [];\n\t\tconst pid = Number(item.pid);\n\n\t\tif (isLocal) {\n\t\t\titems.push({\n\t\t\t\taccelerator: 'Alt+E',\n\t\t\t\tlabel: localize('killProcess', \"Kill Process\"),\n\t\t\t\tclick: () => {\n\t\t\t\t\tthis.nativeHostService.killProcess(pid, 'SIGTERM');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\titems.push({\n\t\t\t\tlabel: localize('forceKillProcess', \"Force Kill Process\"),\n\t\t\t\tclick: () => {\n\t\t\t\t\tthis.nativeHostService.killProcess(pid, 'SIGKILL');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\titems.push({\n\t\t\t\ttype: 'separator'\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\tlabel: localize('copy', \"Copy\"),\n\t\t\tclick: () => {\n\t\t\t\t// Collect the selected pids\n\t\t\t\tconst selectionPids = this.getSelectedPids();\n\t\t\t\t// If the selection does not contain the right clicked item, copy the right clicked\n\t\t\t\t// item only.\n\t\t\t\tif (!selectionPids?.includes(pid)) {\n\t\t\t\t\tselectionPids.length = 0;\n\t\t\t\t\tselectionPids.push(pid);\n\t\t\t\t}\n\t\t\t\tconst rows = selectionPids?.map(e => document.getElementById(`pid-${e}`)).filter(e => !!e) as HTMLElement[];\n\t\t\t\tif (rows) {\n\t\t\t\t\tconst text = rows.map(e => e.innerText).filter(e => !!e) as string[];\n\t\t\t\t\tthis.nativeHostService.writeClipboardText(text.join('\\n'));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\titems.push({\n\t\t\tlabel: localize('copyAll', \"Copy All\"),\n\t\t\tclick: () => {\n\t\t\t\tconst processList = document.getElementById('process-list');\n\t\t\t\tif (processList) {\n\t\t\t\t\tthis.nativeHostService.writeClipboardText(processList.innerText);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (item && isLocal && this.isDebuggable(item.cmd)) {\n\t\t\titems.push({\n\t\t\t\ttype: 'separator'\n\t\t\t});\n\n\t\t\titems.push({\n\t\t\t\tlabel: localize('debug', \"Debug\"),\n\t\t\t\tclick: () => {\n\t\t\t\t\tthis.attachTo(item);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tpopup(items);\n\t}\n\n\tprivate requestProcessList(totalWaitTime: number): void {\n\t\tsetTimeout(() => {\n\t\t\tconst nextRequestTime = Date.now();\n\t\t\tconst waited = totalWaitTime + nextRequestTime - this.lastRequestTime;\n\t\t\tthis.lastRequestTime = nextRequestTime;\n\n\t\t\t// Wait at least a second between requests.\n\t\t\tif (waited > 1000) {\n\t\t\t\tipcRenderer.send('vscode:pidToNameRequest');\n\t\t\t\tipcRenderer.send('vscode:listProcesses');\n\t\t\t} else {\n\t\t\t\tthis.requestProcessList(waited);\n\t\t\t}\n\t\t}, 200);\n\t}\n\n\tprivate getSelectedPids() {\n\t\treturn this.tree?.getSelection()?.map(e => {\n\t\t\tif (!e || !('pid' in e)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn e.pid;\n\t\t}).filter(e => !!e) as number[];\n\t}\n}\n\nfunction createCodiconStyleSheet() {\n\tconst codiconStyleSheet = createStyleSheet();\n\tcodiconStyleSheet.id = 'codiconStyles';\n\n\tconst iconsStyleSheet = getIconsStyleSheet(undefined);\n\tfunction updateAll() {\n\t\tcodiconStyleSheet.textContent = iconsStyleSheet.getCSS();\n\t}\n\n\tconst delayer = new RunOnceScheduler(updateAll, 0);\n\ticonsStyleSheet.onDidChange(() => delayer.schedule());\n\tdelayer.schedule();\n}\n\nexport function startup(configuration: ProcessExplorerWindowConfiguration): void {\n\tconst platformClass = configuration.data.platform === 'win32' ? 'windows' : configuration.data.platform === 'linux' ? 'linux' : 'mac';\n\tdocument.body.classList.add(platformClass); // used by our fonts\n\tcreateCodiconStyleSheet();\n\tapplyZoom(configuration.data.zoomLevel);\n\n\tnew ProcessExplorer(configuration.windowId, configuration.data);\n}\n"]}