{"version":3,"sources":["file:///workspace/appflow/src/vs/server/node/webClientServer.ts"],"names":[],"mappings":"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","file":"webClientServer.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createReadStream } from 'fs';\nimport { Promises } from 'vs/base/node/pfs';\nimport * as path from 'path';\nimport * as http from 'http';\nimport * as url from 'url';\nimport * as cookie from 'cookie';\nimport * as crypto from 'crypto';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { getMediaMime } from 'vs/base/common/mime';\nimport { isLinux } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IServerEnvironmentService } from 'vs/server/node/serverEnvironmentService';\nimport { extname, dirname, join, normalize } from 'vs/base/common/path';\nimport { FileAccess, connectionTokenCookieName, connectionTokenQueryName, Schemas, builtinExtensionsPath } from 'vs/base/common/network';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ServerConnectionToken, ServerConnectionTokenType } from 'vs/server/node/serverConnectionToken';\nimport { asTextOrError, IRequestService } from 'vs/platform/request/common/request';\nimport { IHeaders } from 'vs/base/parts/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { isString } from 'vs/base/common/types';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { getRemoteServerRootPath } from 'vs/platform/remote/common/remoteHosts';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst textMimeType = {\n\t'.html': 'text/html',\n\t'.js': 'text/javascript',\n\t'.json': 'application/json',\n\t'.css': 'text/css',\n\t'.svg': 'image/svg+xml',\n} as { [ext: string]: string | undefined };\n\n/**\n * Return an error to the client.\n */\nexport async function serveError(req: http.IncomingMessage, res: http.ServerResponse, errorCode: number, errorMessage: string): Promise<void> {\n\tres.writeHead(errorCode, { 'Content-Type': 'text/plain' });\n\tres.end(errorMessage);\n}\n\nexport const enum CacheControl {\n\tNO_CACHING, ETAG, NO_EXPIRY\n}\n\n/**\n * Serve a file at a given path or 404 if the file is missing.\n */\nexport async function serveFile(filePath: string, cacheControl: CacheControl, logService: ILogService, req: http.IncomingMessage, res: http.ServerResponse, responseHeaders: Record<string, string>): Promise<void> {\n\ttry {\n\t\tconst stat = await Promises.stat(filePath); // throws an error if file doesn't exist\n\t\tif (cacheControl === CacheControl.ETAG) {\n\n\t\t\t// Check if file modified since\n\t\t\tconst etag = `W/\"${[stat.ino, stat.size, stat.mtime.getTime()].join('-')}\"`; // weak validator (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag)\n\t\t\tif (req.headers['if-none-match'] === etag) {\n\t\t\t\tres.writeHead(304);\n\t\t\t\treturn void res.end();\n\t\t\t}\n\n\t\t\tresponseHeaders['Etag'] = etag;\n\t\t} else if (cacheControl === CacheControl.NO_EXPIRY) {\n\t\t\tresponseHeaders['Cache-Control'] = 'public, max-age=31536000';\n\t\t} else if (cacheControl === CacheControl.NO_CACHING) {\n\t\t\tresponseHeaders['Cache-Control'] = 'no-store';\n\t\t}\n\n\t\tresponseHeaders['Content-Type'] = textMimeType[extname(filePath)] || getMediaMime(filePath) || 'text/plain';\n\n\t\tres.writeHead(200, responseHeaders);\n\n\t\t// Data\n\t\tcreateReadStream(filePath).pipe(res);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tlogService.error(error);\n\t\t\tconsole.error(error.toString());\n\t\t} else {\n\t\t\tconsole.error(`File not found: ${filePath}`);\n\t\t}\n\n\t\tres.writeHead(404, { 'Content-Type': 'text/plain' });\n\t\treturn void res.end('Not found');\n\t}\n}\n\nconst APP_ROOT = dirname(FileAccess.asFileUri('').fsPath);\n\nexport class WebClientServer {\n\n\tprivate readonly _webExtensionResourceUrlTemplate: URI | undefined;\n\n\tprivate readonly _staticRoute: string;\n\tprivate readonly _callbackRoute: string;\n\tprivate readonly _webExtensionRoute: string;\n\n\tconstructor(\n\t\tprivate readonly _connectionToken: ServerConnectionToken,\n\t\t@IServerEnvironmentService private readonly _environmentService: IServerEnvironmentService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IRequestService private readonly _requestService: IRequestService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t) {\n\t\tthis._webExtensionResourceUrlTemplate = this._productService.extensionsGallery?.resourceUrlTemplate ? URI.parse(this._productService.extensionsGallery.resourceUrlTemplate) : undefined;\n\t\tconst serverRootPath = getRemoteServerRootPath(_productService);\n\t\tthis._staticRoute = `${serverRootPath}/static`;\n\t\tthis._callbackRoute = `${serverRootPath}/callback`;\n\t\tthis._webExtensionRoute = `${serverRootPath}/web-extension-resource`;\n\t}\n\n\t/**\n\t * Handle web resources (i.e. only needed by the web client).\n\t * **NOTE**: This method is only invoked when the server has web bits.\n\t * **NOTE**: This method is only invoked after the connection token has been validated.\n\t */\n\tasync handle(req: http.IncomingMessage, res: http.ServerResponse, parsedUrl: url.UrlWithParsedQuery): Promise<void> {\n\t\ttry {\n\t\t\tconst pathname = parsedUrl.pathname!;\n\n\t\t\tif (pathname.startsWith(this._staticRoute) && pathname.charCodeAt(this._staticRoute.length) === CharCode.Slash) {\n\t\t\t\treturn this._handleStatic(req, res, parsedUrl);\n\t\t\t}\n\t\t\tif (pathname === '/') {\n\t\t\t\treturn this._handleRoot(req, res, parsedUrl);\n\t\t\t}\n\t\t\tif (pathname === this._callbackRoute) {\n\t\t\t\t// callback support\n\t\t\t\treturn this._handleCallback(res);\n\t\t\t}\n\t\t\tif (pathname.startsWith(this._webExtensionRoute) && pathname.charCodeAt(this._webExtensionRoute.length) === CharCode.Slash) {\n\t\t\t\t// extension resource support\n\t\t\t\treturn this._handleWebExtensionResource(req, res, parsedUrl);\n\t\t\t}\n\n\t\t\treturn serveError(req, res, 404, 'Not found.');\n\t\t} catch (error) {\n\t\t\tthis._logService.error(error);\n\t\t\tconsole.error(error.toString());\n\n\t\t\treturn serveError(req, res, 500, 'Internal Server Error.');\n\t\t}\n\t}\n\t/**\n\t * Handle HTTP requests for /static/*\n\t */\n\tprivate async _handleStatic(req: http.IncomingMessage, res: http.ServerResponse, parsedUrl: url.UrlWithParsedQuery): Promise<void> {\n\t\tconst headers: Record<string, string> = Object.create(null);\n\n\t\t// Strip the this._staticRoute from the path\n\t\tconst normalizedPathname = decodeURIComponent(parsedUrl.pathname!); // support paths that are uri-encoded (e.g. spaces => %20)\n\t\tconst relativeFilePath = normalizedPathname.substring(this._staticRoute.length + 1);\n\n\t\tconst filePath = join(APP_ROOT, relativeFilePath); // join also normalizes the path\n\t\tif (!isEqualOrParent(filePath, APP_ROOT, !isLinux)) {\n\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t}\n\n\t\treturn serveFile(filePath, this._environmentService.isBuilt ? CacheControl.NO_EXPIRY : CacheControl.ETAG, this._logService, req, res, headers);\n\t}\n\n\tprivate _getResourceURLTemplateAuthority(uri: URI): string | undefined {\n\t\tconst index = uri.authority.indexOf('.');\n\t\treturn index !== -1 ? uri.authority.substring(index + 1) : undefined;\n\t}\n\n\t/**\n\t * Handle extension resources\n\t */\n\tprivate async _handleWebExtensionResource(req: http.IncomingMessage, res: http.ServerResponse, parsedUrl: url.UrlWithParsedQuery): Promise<void> {\n\t\tif (!this._webExtensionResourceUrlTemplate) {\n\t\t\treturn serveError(req, res, 500, 'No extension gallery service configured.');\n\t\t}\n\n\t\t// Strip `/web-extension-resource/` from the path\n\t\tconst normalizedPathname = decodeURIComponent(parsedUrl.pathname!); // support paths that are uri-encoded (e.g. spaces => %20)\n\t\tconst path = normalize(normalizedPathname.substring(this._webExtensionRoute.length + 1));\n\t\tconst uri = URI.parse(path).with({\n\t\t\tscheme: this._webExtensionResourceUrlTemplate.scheme,\n\t\t\tauthority: path.substring(0, path.indexOf('/')),\n\t\t\tpath: path.substring(path.indexOf('/') + 1)\n\t\t});\n\n\t\tif (this._getResourceURLTemplateAuthority(this._webExtensionResourceUrlTemplate) !== this._getResourceURLTemplateAuthority(uri)) {\n\t\t\treturn serveError(req, res, 403, 'Request Forbidden');\n\t\t}\n\n\t\tconst headers: IHeaders = {};\n\t\tconst setRequestHeader = (header: string) => {\n\t\t\tconst value = req.headers[header];\n\t\t\tif (value && (isString(value) || value[0])) {\n\t\t\t\theaders[header] = isString(value) ? value : value[0];\n\t\t\t} else if (header !== header.toLowerCase()) {\n\t\t\t\tsetRequestHeader(header.toLowerCase());\n\t\t\t}\n\t\t};\n\t\tsetRequestHeader('X-Client-Name');\n\t\tsetRequestHeader('X-Client-Version');\n\t\tsetRequestHeader('X-Machine-Id');\n\t\tsetRequestHeader('X-Client-Commit');\n\n\t\tconst context = await this._requestService.request({\n\t\t\ttype: 'GET',\n\t\t\turl: uri.toString(true),\n\t\t\theaders\n\t\t}, CancellationToken.None);\n\n\t\tconst status = context.res.statusCode || 500;\n\t\tif (status !== 200) {\n\t\t\tlet text: string | null = null;\n\t\t\ttry {\n\t\t\t\ttext = await asTextOrError(context);\n\t\t\t} catch (error) {/* Ignore */ }\n\t\t\treturn serveError(req, res, status, text || `Request failed with status ${status}`);\n\t\t}\n\n\t\tconst responseHeaders: Record<string, string> = Object.create(null);\n\t\tconst setResponseHeader = (header: string) => {\n\t\t\tconst value = context.res.headers[header];\n\t\t\tif (value) {\n\t\t\t\tresponseHeaders[header] = value;\n\t\t\t} else if (header !== header.toLowerCase()) {\n\t\t\t\tsetResponseHeader(header.toLowerCase());\n\t\t\t}\n\t\t};\n\t\tsetResponseHeader('Cache-Control');\n\t\tsetResponseHeader('Content-Type');\n\t\tres.writeHead(200, responseHeaders);\n\t\tconst buffer = await streamToBuffer(context.stream);\n\t\treturn void res.end(buffer.buffer);\n\t}\n\n\t/**\n\t * Handle HTTP requests for /\n\t */\n\tprivate async _handleRoot(req: http.IncomingMessage, res: http.ServerResponse, parsedUrl: url.UrlWithParsedQuery): Promise<void> {\n\n\t\tconst queryConnectionToken = parsedUrl.query[connectionTokenQueryName];\n\t\tif (typeof queryConnectionToken === 'string') {\n\t\t\t// We got a connection token as a query parameter.\n\t\t\t// We want to have a clean URL, so we strip it\n\t\t\tconst responseHeaders: Record<string, string> = Object.create(null);\n\t\t\tresponseHeaders['Set-Cookie'] = cookie.serialize(\n\t\t\t\tconnectionTokenCookieName,\n\t\t\t\tqueryConnectionToken,\n\t\t\t\t{\n\t\t\t\t\tsameSite: 'lax',\n\t\t\t\t\tmaxAge: 60 * 60 * 24 * 7 /* 1 week */\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst newQuery = Object.create(null);\n\t\t\tfor (const key in parsedUrl.query) {\n\t\t\t\tif (key !== connectionTokenQueryName) {\n\t\t\t\t\tnewQuery[key] = parsedUrl.query[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst newLocation = url.format({ pathname: '/', query: newQuery });\n\t\t\tresponseHeaders['Location'] = newLocation;\n\n\t\t\tres.writeHead(302, responseHeaders);\n\t\t\treturn void res.end();\n\t\t}\n\n\t\tconst getFirstHeader = (headerName: string) => {\n\t\t\tconst val = req.headers[headerName];\n\t\t\treturn Array.isArray(val) ? val[0] : val;\n\t\t};\n\n\t\tconst useTestResolver = (!this._environmentService.isBuilt && this._environmentService.args['use-test-resolver']);\n\t\tconst remoteAuthority = (\n\t\t\tuseTestResolver\n\t\t\t\t? 'test+test'\n\t\t\t\t: (getFirstHeader('x-original-host') || getFirstHeader('x-forwarded-host') || req.headers.host)\n\t\t);\n\t\tif (!remoteAuthority) {\n\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t}\n\n\t\tfunction asJSON(value: unknown): string {\n\t\t\treturn JSON.stringify(value).replace(/\"/g, '&quot;');\n\t\t}\n\n\t\tlet _wrapWebWorkerExtHostInIframe: undefined | false = undefined;\n\t\tif (this._environmentService.args['enable-smoke-test-driver']) {\n\t\t\t// integration tests run at a time when the built output is not yet published to the CDN\n\t\t\t// so we must disable the iframe wrapping because the iframe URL will give a 404\n\t\t\t_wrapWebWorkerExtHostInIframe = false;\n\t\t}\n\n\t\tconst resolveWorkspaceURI = (defaultLocation?: string) => defaultLocation && URI.file(path.resolve(defaultLocation)).with({ scheme: Schemas.vscodeRemote, authority: remoteAuthority });\n\n\t\tconst filePath = FileAccess.asFileUri(this._environmentService.isBuilt ? 'vs/code/browser/workbench/workbench.html' : 'vs/code/browser/workbench/workbench-dev.html').fsPath;\n\t\tconst authSessionInfo = !this._environmentService.isBuilt && this._environmentService.args['github-auth'] ? {\n\t\t\tid: generateUuid(),\n\t\t\tproviderId: 'github',\n\t\t\taccessToken: this._environmentService.args['github-auth'],\n\t\t\tscopes: [['user:email'], ['repo']]\n\t\t} : undefined;\n\n\t\tconst productConfiguration = <Partial<IProductConfiguration>>{\n\t\t\t// embedderIdentifier: 'server-distro',\n\t\t\t// extensionsGallery: this._webExtensionResourceUrlTemplate ? {\n\t\t\t// \t...this._productService.extensionsGallery,\n\t\t\t// \t'resourceUrlTemplate': this._webExtensionResourceUrlTemplate.with({\n\t\t\t// \t\tscheme: 'http',\n\t\t\t// \t\tauthority: remoteAuthority,\n\t\t\t// \t\tpath: `${this._webExtensionRoute}/${this._webExtensionResourceUrlTemplate.authority}${this._webExtensionResourceUrlTemplate.path}`\n\t\t\t// \t}).toString(true)\n\t\t\t// } : undefined\n\t\t};\n\n\t\tif (!this._environmentService.isBuilt) {\n\t\t\ttry {\n\t\t\t\tconst productOverrides = JSON.parse((await Promises.readFile(join(APP_ROOT, 'product.overrides.json'))).toString());\n\t\t\t\tObject.assign(productConfiguration, productOverrides);\n\t\t\t} catch (err) {/* Ignore Error */ }\n\t\t}\n\n\t\tconst workbenchWebConfiguration = {\n\t\t\tremoteAuthority,\n\t\t\t_wrapWebWorkerExtHostInIframe,\n\t\t\tdevelopmentOptions: { enableSmokeTestDriver: this._environmentService.args['enable-smoke-test-driver'] ? true : undefined, logLevel: this._logService.getLevel() },\n\t\t\tsettingsSyncOptions: !this._environmentService.isBuilt && this._environmentService.args['enable-sync'] ? { enabled: true } : undefined,\n\t\t\tenableWorkspaceTrust: !this._environmentService.args['disable-workspace-trust'],\n\t\t\tfolderUri: resolveWorkspaceURI(this._environmentService.args['default-folder']),\n\t\t\tworkspaceUri: resolveWorkspaceURI(this._environmentService.args['default-workspace']),\n\t\t\tproductConfiguration,\n\t\t\tcallbackRoute: this._callbackRoute\n\t\t};\n\n\t\tconst nlsBaseUrl = this._productService.extensionsGallery?.nlsBaseUrl;\n\t\tconst values: { [key: string]: string } = {\n\t\t\tWORKBENCH_WEB_CONFIGURATION: asJSON(workbenchWebConfiguration),\n\t\t\tWORKBENCH_AUTH_SESSION: authSessionInfo ? asJSON(authSessionInfo) : '',\n\t\t\tWORKBENCH_WEB_BASE_URL: this._staticRoute,\n\t\t\tWORKBENCH_NLS_BASE_URL: nlsBaseUrl ? `${nlsBaseUrl}${!nlsBaseUrl.endsWith('/') ? '/' : ''}${this._productService.commit}/${this._productService.version}/` : '',\n\t\t};\n\n\t\tif (useTestResolver) {\n\t\t\tconst bundledExtensions: { extensionPath: string; packageJSON: IExtensionManifest }[] = [];\n\t\t\tfor (const extensionPath of ['vscode-test-resolver', 'github-authentication']) {\n\t\t\t\tconst packageJSON = JSON.parse((await Promises.readFile(FileAccess.asFileUri(`${builtinExtensionsPath}/${extensionPath}/package.json`).fsPath)).toString());\n\t\t\t\tbundledExtensions.push({ extensionPath, packageJSON });\n\t\t\t}\n\t\t\tvalues['WORKBENCH_BUILTIN_EXTENSIONS'] = asJSON(bundledExtensions);\n\t\t}\n\n\t\tlet data;\n\t\ttry {\n\t\t\tconst workbenchTemplate = (await Promises.readFile(filePath)).toString();\n\t\t\tdata = workbenchTemplate.replace(/\\{\\{([^}]+)\\}\\}/g, (_, key) => values[key] ?? 'undefined');\n\t\t} catch (e) {\n\t\t\tres.writeHead(404, { 'Content-Type': 'text/plain' });\n\t\t\treturn void res.end('Not found');\n\t\t}\n\n\t\tconst cspDirectives = [\n\t\t\t'default-src \\'self\\';',\n\t\t\t'img-src \\'self\\' https: data: blob:;',\n\t\t\t'media-src \\'self\\';',\n\t\t\t`script-src 'self' 'unsafe-eval' ${this._getScriptCspHashes(data).join(' ')} 'sha256-fh3TwPMflhsEIpR8g1OYTIMVWhXTLcjQ9kh2tIpmv54=' ${useTestResolver ? '' : `http://${remoteAuthority}`};`, // the sha is the same as in src/vs/workbench/services/extensions/worker/webWorkerExtensionHostIframe.html\n\t\t\t'child-src \\'self\\';',\n\t\t\t`frame-src 'self' https://*.vscode-cdn.net data:;`,\n\t\t\t'worker-src \\'self\\' data: blob:;',\n\t\t\t'style-src \\'self\\' \\'unsafe-inline\\';',\n\t\t\t'connect-src \\'self\\' ws: wss: https:;',\n\t\t\t'font-src \\'self\\' blob:;',\n\t\t\t'manifest-src \\'self\\';'\n\t\t].join(' ');\n\n\t\tconst headers: http.OutgoingHttpHeaders = {\n\t\t\t'Content-Type': 'text/html',\n\t\t\t'Content-Security-Policy': cspDirectives\n\t\t};\n\t\tif (this._connectionToken.type !== ServerConnectionTokenType.None) {\n\t\t\t// At this point we know the client has a valid cookie\n\t\t\t// and we want to set it prolong it to ensure that this\n\t\t\t// client is valid for another 1 week at least\n\t\t\theaders['Set-Cookie'] = cookie.serialize(\n\t\t\t\tconnectionTokenCookieName,\n\t\t\t\tthis._connectionToken.value,\n\t\t\t\t{\n\t\t\t\t\tsameSite: 'lax',\n\t\t\t\t\tmaxAge: 60 * 60 * 24 * 7 /* 1 week */\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tres.writeHead(200, headers);\n\t\treturn void res.end(data);\n\t}\n\n\tprivate _getScriptCspHashes(content: string): string[] {\n\t\t// Compute the CSP hashes for line scripts. Uses regex\n\t\t// which means it isn't 100% good.\n\t\tconst regex = /<script>([\\s\\S]+?)<\\/script>/img;\n\t\tconst result: string[] = [];\n\t\tlet match: RegExpExecArray | null;\n\t\twhile (match = regex.exec(content)) {\n\t\t\tconst hasher = crypto.createHash('sha256');\n\t\t\t// This only works on Windows if we strip `\\r` from `\\r\\n`.\n\t\t\tconst script = match[1].replace(/\\r\\n/g, '\\n');\n\t\t\tconst hash = hasher\n\t\t\t\t.update(Buffer.from(script))\n\t\t\t\t.digest().toString('base64');\n\n\t\t\tresult.push(`'sha256-${hash}'`);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Handle HTTP requests for /callback\n\t */\n\tprivate async _handleCallback(res: http.ServerResponse): Promise<void> {\n\t\tconst filePath = FileAccess.asFileUri('vs/code/browser/workbench/callback.html').fsPath;\n\t\tconst data = (await Promises.readFile(filePath)).toString();\n\t\tconst cspDirectives = [\n\t\t\t'default-src \\'self\\';',\n\t\t\t'img-src \\'self\\' https: data: blob:;',\n\t\t\t'media-src \\'none\\';',\n\t\t\t`script-src 'self' ${this._getScriptCspHashes(data).join(' ')};`,\n\t\t\t'style-src \\'self\\' \\'unsafe-inline\\';',\n\t\t\t'font-src \\'self\\' blob:;'\n\t\t].join(' ');\n\n\t\tres.writeHead(200, {\n\t\t\t'Content-Type': 'text/html',\n\t\t\t'Content-Security-Policy': cspDirectives\n\t\t});\n\t\treturn void res.end(data);\n\t}\n}\n"]}