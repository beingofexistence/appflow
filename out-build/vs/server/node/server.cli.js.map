{"version":3,"sources":["file:///workspace/appflow/src/vs/server/node/server.cli.ts"],"names":[],"mappings":"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","file":"server.cli.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as _fs from 'fs';\nimport * as _url from 'url';\nimport * as _cp from 'child_process';\nimport * as _http from 'http';\nimport * as _os from 'os';\nimport { cwd } from 'vs/base/common/process';\nimport { dirname, extname, resolve, join } from 'vs/base/common/path';\nimport { parseArgs, buildHelpMessage, buildVersionMessage, OPTIONS, OptionDescriptions, ErrorReporter } from 'vs/platform/environment/node/argv';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { createWaitMarkerFileSync } from 'vs/platform/environment/node/wait';\nimport { PipeCommand } from 'vs/workbench/api/node/extHostCLIServer';\nimport { hasStdinWithoutTty, getStdinFilePath, readFromStdin } from 'vs/platform/environment/node/stdin';\n\n/*\n * Implements a standalone CLI app that opens VS Code from a remote terminal.\n *  - In integrated terminals for remote windows this connects to the remote server though a pipe.\n *    The pipe is passed in env VSCODE_IPC_HOOK_CLI.\n *  - In external terminals for WSL this calls VS Code on the Windows side.\n *    The VS Code desktop executable path is passed in env VSCODE_CLIENT_COMMAND.\n */\n\n\ninterface ProductDescription {\n\tproductName: string;\n\tversion: string;\n\tcommit: string;\n\texecutableName: string;\n}\n\ninterface RemoteParsedArgs extends NativeParsedArgs { 'gitCredential'?: string; 'openExternal'?: boolean }\n\n\nconst isSupportedForCmd = (optionId: keyof RemoteParsedArgs) => {\n\tswitch (optionId) {\n\t\tcase 'user-data-dir':\n\t\tcase 'extensions-dir':\n\t\tcase 'export-default-configuration':\n\t\tcase 'install-source':\n\t\tcase 'enable-smoke-test-driver':\n\t\tcase 'extensions-download-dir':\n\t\tcase 'builtin-extensions-dir':\n\t\tcase 'telemetry':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\treturn true;\n\t}\n};\n\nconst isSupportedForPipe = (optionId: keyof RemoteParsedArgs) => {\n\tswitch (optionId) {\n\t\tcase 'version':\n\t\tcase 'help':\n\t\tcase 'folder-uri':\n\t\tcase 'file-uri':\n\t\tcase 'add':\n\t\tcase 'diff':\n\t\tcase 'merge':\n\t\tcase 'wait':\n\t\tcase 'goto':\n\t\tcase 'reuse-window':\n\t\tcase 'new-window':\n\t\tcase 'status':\n\t\tcase 'install-extension':\n\t\tcase 'uninstall-extension':\n\t\tcase 'list-extensions':\n\t\tcase 'force':\n\t\tcase 'show-versions':\n\t\tcase 'category':\n\t\tcase 'verbose':\n\t\tcase 'remote':\n\t\tcase 'locate-shell-integration-path':\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\n\nconst cliPipe = process.env['VSCODE_IPC_HOOK_CLI'] as string;\nconst cliCommand = process.env['VSCODE_CLIENT_COMMAND'] as string;\nconst cliCommandCwd = process.env['VSCODE_CLIENT_COMMAND_CWD'] as string;\nconst cliRemoteAuthority = process.env['VSCODE_CLI_AUTHORITY'] as string;\nconst cliStdInFilePath = process.env['VSCODE_STDIN_FILE_PATH'] as string;\n\n\nexport async function main(desc: ProductDescription, args: string[]): Promise<void> {\n\tif (!cliPipe && !cliCommand) {\n\t\tconsole.log('Command is only available in WSL or inside a Visual Studio Code terminal.');\n\t\treturn;\n\t}\n\n\t// take the local options and remove the ones that don't apply\n\tconst options: OptionDescriptions<Required<RemoteParsedArgs>> = { ...OPTIONS, gitCredential: { type: 'string' }, openExternal: { type: 'boolean' } };\n\tconst isSupported = cliCommand ? isSupportedForCmd : isSupportedForPipe;\n\tfor (const optionId in OPTIONS) {\n\t\tconst optId = <keyof RemoteParsedArgs>optionId;\n\t\tif (!isSupported(optId)) {\n\t\t\tdelete options[optId];\n\t\t}\n\t}\n\n\tif (cliPipe) {\n\t\toptions['openExternal'] = { type: 'boolean' };\n\t}\n\n\tconst errorReporter: ErrorReporter = {\n\t\tonMultipleValues: (id: string, usedValue: string) => {\n\t\t\tconsole.error(`Option '${id}' can only be defined once. Using value ${usedValue}.`);\n\t\t},\n\t\tonEmptyValue: (id) => {\n\t\t\tconsole.error(`Ignoring option '${id}': Value must not be empty.`);\n\t\t},\n\t\tonUnknownOption: (id: string) => {\n\t\t\tconsole.error(`Ignoring option '${id}': not supported for ${desc.executableName}.`);\n\t\t},\n\t\tonDeprecatedOption: (deprecatedOption: string, message: string) => {\n\t\t\tconsole.warn(`Option '${deprecatedOption}' is deprecated: ${message}`);\n\t\t}\n\t};\n\n\tconst parsedArgs = parseArgs(args, options, errorReporter);\n\tconst mapFileUri = cliRemoteAuthority ? mapFileToRemoteUri : (uri: string) => uri;\n\n\tconst verbose = !!parsedArgs['verbose'];\n\n\tif (parsedArgs.help) {\n\t\tconsole.log(buildHelpMessage(desc.productName, desc.executableName, desc.version, options));\n\t\treturn;\n\t}\n\tif (parsedArgs.version) {\n\t\tconsole.log(buildVersionMessage(desc.version, desc.commit));\n\t\treturn;\n\t}\n\tif (parsedArgs['locate-shell-integration-path']) {\n\t\tlet file: string;\n\t\tswitch (parsedArgs['locate-shell-integration-path']) {\n\t\t\t// Usage: `[[ \"$TERM_PROGRAM\" == \"vscode\" ]] && . \"$(code --locate-shell-integration-path bash)\"`\n\t\t\tcase 'bash': file = 'shellIntegration-bash.sh'; break;\n\t\t\t// Usage: `if ($env:TERM_PROGRAM -eq \"vscode\") { . \"$(code --locate-shell-integration-path pwsh)\" }`\n\t\t\tcase 'pwsh': file = 'shellIntegration.ps1'; break;\n\t\t\t// Usage: `[[ \"$TERM_PROGRAM\" == \"vscode\" ]] && . \"$(code --locate-shell-integration-path zsh)\"`\n\t\t\tcase 'zsh': file = 'shellIntegration-rc.zsh'; break;\n\t\t\t// Usage: `string match -q \"$TERM_PROGRAM\" \"vscode\"; and . (code --locate-shell-integration-path fish)`\n\t\t\tcase 'fish': file = 'fish_xdg_data/fish/vendor_conf.d/shellIntegration.fish'; break;\n\t\t\tdefault: throw new Error('Error using --locate-shell-integration-path: Invalid shell type');\n\t\t}\n\t\tconsole.log(resolve(__dirname, '../..', 'workbench', 'contrib', 'terminal', 'browser', 'media', file));\n\t\treturn;\n\t}\n\tif (cliPipe) {\n\t\tif (parsedArgs['openExternal']) {\n\t\t\topenInBrowser(parsedArgs['_'], verbose);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tlet remote: string | null | undefined = parsedArgs.remote;\n\tif (remote === 'local' || remote === 'false' || remote === '') {\n\t\tremote = null; // null represent a local window\n\t}\n\n\tconst folderURIs = (parsedArgs['folder-uri'] || []).map(mapFileUri);\n\tparsedArgs['folder-uri'] = folderURIs;\n\n\tconst fileURIs = (parsedArgs['file-uri'] || []).map(mapFileUri);\n\tparsedArgs['file-uri'] = fileURIs;\n\n\tconst inputPaths = parsedArgs['_'];\n\tlet hasReadStdinArg = false;\n\tfor (const input of inputPaths) {\n\t\tif (input === '-') {\n\t\t\thasReadStdinArg = true;\n\t\t} else {\n\t\t\ttranslatePath(input, mapFileUri, folderURIs, fileURIs);\n\t\t}\n\t}\n\n\tparsedArgs['_'] = [];\n\n\tif (hasReadStdinArg && hasStdinWithoutTty()) {\n\t\ttry {\n\t\t\tlet stdinFilePath = cliStdInFilePath;\n\t\t\tif (!stdinFilePath) {\n\t\t\t\tstdinFilePath = getStdinFilePath();\n\t\t\t\tawait readFromStdin(stdinFilePath, verbose); // throws error if file can not be written\n\t\t\t}\n\n\t\t\t// Make sure to open tmp file\n\t\t\ttranslatePath(stdinFilePath, mapFileUri, folderURIs, fileURIs);\n\n\t\t\t// Enable --wait to get all data and ignore adding this to history\n\t\t\tparsedArgs.wait = true;\n\t\t\tparsedArgs['skip-add-to-recently-opened'] = true;\n\n\t\t\tconsole.log(`Reading from stdin via: ${stdinFilePath}`);\n\t\t} catch (e) {\n\t\t\tconsole.log(`Failed to create file to read via stdin: ${e.toString()}`);\n\t\t}\n\n\t}\n\n\tif (parsedArgs.extensionDevelopmentPath) {\n\t\tparsedArgs.extensionDevelopmentPath = parsedArgs.extensionDevelopmentPath.map(p => mapFileUri(pathToURI(p).href));\n\t}\n\n\tif (parsedArgs.extensionTestsPath) {\n\t\tparsedArgs.extensionTestsPath = mapFileUri(pathToURI(parsedArgs['extensionTestsPath']).href);\n\t}\n\n\tconst crashReporterDirectory = parsedArgs['crash-reporter-directory'];\n\tif (crashReporterDirectory !== undefined && !crashReporterDirectory.match(/^([a-zA-Z]:[\\\\\\/])/)) {\n\t\tconsole.log(`The crash reporter directory '${crashReporterDirectory}' must be an absolute Windows path (e.g. c:/crashes)`);\n\t\treturn;\n\t}\n\n\tif (cliCommand) {\n\t\tif (parsedArgs['install-extension'] !== undefined || parsedArgs['uninstall-extension'] !== undefined || parsedArgs['list-extensions']) {\n\t\t\tconst cmdLine: string[] = [];\n\t\t\tparsedArgs['install-extension']?.forEach(id => cmdLine.push('--install-extension', id));\n\t\t\tparsedArgs['uninstall-extension']?.forEach(id => cmdLine.push('--uninstall-extension', id));\n\t\t\t['list-extensions', 'force', 'show-versions', 'category'].forEach(opt => {\n\t\t\t\tconst value = parsedArgs[<keyof NativeParsedArgs>opt];\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\tcmdLine.push(`--${opt}=${value}`);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst cp = _cp.fork(join(__dirname, '../../../server-main.js'), cmdLine, { stdio: 'inherit' });\n\t\t\tcp.on('error', err => console.log(err));\n\t\t\treturn;\n\t\t}\n\n\t\tconst newCommandline: string[] = [];\n\t\tfor (const key in parsedArgs) {\n\t\t\tconst val = parsedArgs[key as keyof typeof parsedArgs];\n\t\t\tif (typeof val === 'boolean') {\n\t\t\t\tif (val) {\n\t\t\t\t\tnewCommandline.push('--' + key);\n\t\t\t\t}\n\t\t\t} else if (Array.isArray(val)) {\n\t\t\t\tfor (const entry of val) {\n\t\t\t\t\tnewCommandline.push(`--${key}=${entry.toString()}`);\n\t\t\t\t}\n\t\t\t} else if (val) {\n\t\t\t\tnewCommandline.push(`--${key}=${val.toString()}`);\n\t\t\t}\n\t\t}\n\t\tif (remote !== null) {\n\t\t\tnewCommandline.push(`--remote=${remote || cliRemoteAuthority}`);\n\t\t}\n\n\t\tconst ext = extname(cliCommand);\n\t\tif (ext === '.bat' || ext === '.cmd') {\n\t\t\tconst processCwd = cliCommandCwd || cwd();\n\t\t\tif (verbose) {\n\t\t\t\tconsole.log(`Invoking: cmd.exe /C ${cliCommand} ${newCommandline.join(' ')} in ${processCwd}`);\n\t\t\t}\n\t\t\t_cp.spawn('cmd.exe', ['/C', cliCommand, ...newCommandline], {\n\t\t\t\tstdio: 'inherit',\n\t\t\t\tcwd: processCwd\n\t\t\t});\n\t\t} else {\n\t\t\tconst cliCwd = dirname(cliCommand);\n\t\t\tconst env = { ...process.env, ELECTRON_RUN_AS_NODE: '1' };\n\t\t\tnewCommandline.unshift('--ms-enable-electron-run-as-node');\n\t\t\tnewCommandline.unshift('resources/app/out/cli.js');\n\t\t\tif (verbose) {\n\t\t\t\tconsole.log(`Invoking: cd \"${cliCwd}\" && ELECTRON_RUN_AS_NODE=1 \"${cliCommand}\" \"${newCommandline.join('\" \"')}\"`);\n\t\t\t}\n\t\t\t_cp.spawn(cliCommand, newCommandline, { cwd: cliCwd, env, stdio: ['inherit'] });\n\t\t}\n\t} else {\n\t\tif (parsedArgs.status) {\n\t\t\tsendToPipe({\n\t\t\t\ttype: 'status'\n\t\t\t}, verbose).then((res: string) => {\n\t\t\t\tconsole.log(res);\n\t\t\t}).catch(e => {\n\t\t\t\tconsole.error('Error when requesting status:', e);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (parsedArgs['install-extension'] !== undefined || parsedArgs['uninstall-extension'] !== undefined || parsedArgs['list-extensions']) {\n\t\t\tsendToPipe({\n\t\t\t\ttype: 'extensionManagement',\n\t\t\t\tlist: parsedArgs['list-extensions'] ? { showVersions: parsedArgs['show-versions'], category: parsedArgs['category'] } : undefined,\n\t\t\t\tinstall: asExtensionIdOrVSIX(parsedArgs['install-extension']),\n\t\t\t\tuninstall: asExtensionIdOrVSIX(parsedArgs['uninstall-extension']),\n\t\t\t\tforce: parsedArgs['force']\n\t\t\t}, verbose).then((res: string) => {\n\t\t\t\tconsole.log(res);\n\t\t\t}).catch(e => {\n\t\t\t\tconsole.error('Error when invoking the extension management command:', e);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tlet waitMarkerFilePath: string | undefined = undefined;\n\t\tif (parsedArgs['wait']) {\n\t\t\tif (!fileURIs.length) {\n\t\t\t\tconsole.log('At least one file must be provided to wait for.');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twaitMarkerFilePath = createWaitMarkerFileSync(verbose);\n\t\t}\n\n\t\tsendToPipe({\n\t\t\ttype: 'open',\n\t\t\tfileURIs,\n\t\t\tfolderURIs,\n\t\t\tdiffMode: parsedArgs.diff,\n\t\t\tmergeMode: parsedArgs.merge,\n\t\t\taddMode: parsedArgs.add,\n\t\t\tgotoLineMode: parsedArgs.goto,\n\t\t\tforceReuseWindow: parsedArgs['reuse-window'],\n\t\t\tforceNewWindow: parsedArgs['new-window'],\n\t\t\twaitMarkerFilePath,\n\t\t\tremoteAuthority: remote\n\t\t}, verbose).catch(e => {\n\t\t\tconsole.error('Error when invoking the open command:', e);\n\t\t});\n\n\t\tif (waitMarkerFilePath) {\n\t\t\twaitForFileDeleted(waitMarkerFilePath);\n\t\t}\n\t}\n}\n\nasync function waitForFileDeleted(path: string) {\n\twhile (_fs.existsSync(path)) {\n\t\tawait new Promise(res => setTimeout(res, 1000));\n\t}\n}\n\nfunction openInBrowser(args: string[], verbose: boolean) {\n\tconst uris: string[] = [];\n\tfor (const location of args) {\n\t\ttry {\n\t\t\tif (/^(http|https|file):\\/\\//.test(location)) {\n\t\t\t\turis.push(_url.parse(location).href);\n\t\t\t} else {\n\t\t\t\turis.push(pathToURI(location).href);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(`Invalid url: ${location}`);\n\t\t}\n\t}\n\tif (uris.length) {\n\t\tsendToPipe({\n\t\t\ttype: 'openExternal',\n\t\t\turis\n\t\t}, verbose).catch(e => {\n\t\t\tconsole.error('Error when invoking the open external command:', e);\n\t\t});\n\t}\n}\n\nfunction sendToPipe(args: PipeCommand, verbose: boolean): Promise<any> {\n\tif (verbose) {\n\t\tconsole.log(JSON.stringify(args, null, '  '));\n\t}\n\treturn new Promise<string>((resolve, reject) => {\n\t\tconst message = JSON.stringify(args);\n\t\tif (!cliPipe) {\n\t\t\tconsole.log('Message ' + message);\n\t\t\tresolve('');\n\t\t\treturn;\n\t\t}\n\n\t\tconst opts: _http.RequestOptions = {\n\t\t\tsocketPath: cliPipe,\n\t\t\tpath: '/',\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\t'accept': 'application/json'\n\t\t\t}\n\t\t};\n\n\t\tconst req = _http.request(opts, res => {\n\t\t\tif (res.headers['content-type'] !== 'application/json') {\n\t\t\t\treject('Error in response: Invalid content type: Expected \\'application/json\\', is: ' + res.headers['content-type']);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst chunks: string[] = [];\n\t\t\tres.setEncoding('utf8');\n\t\t\tres.on('data', chunk => {\n\t\t\t\tchunks.push(chunk);\n\t\t\t});\n\t\t\tres.on('error', (err) => fatal('Error in response.', err));\n\t\t\tres.on('end', () => {\n\t\t\t\tconst content = chunks.join('');\n\t\t\t\ttry {\n\t\t\t\t\tconst obj = JSON.parse(content);\n\t\t\t\t\tif (res.statusCode === 200) {\n\t\t\t\t\t\tresolve(obj);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(obj);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\treject('Error in response: Unable to parse response as JSON: ' + content);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treq.on('error', (err) => fatal('Error in request.', err));\n\t\treq.write(message);\n\t\treq.end();\n\t});\n}\n\nfunction asExtensionIdOrVSIX(inputs: string[] | undefined) {\n\treturn inputs?.map(input => /\\.vsix$/i.test(input) ? pathToURI(input).href : input);\n}\n\nfunction fatal(message: string, err: any): void {\n\tconsole.error('Unable to connect to VS Code server: ' + message);\n\tconsole.error(err);\n\tprocess.exit(1);\n}\n\nconst preferredCwd = process.env.PWD || cwd(); // prefer process.env.PWD as it does not follow symlinks\n\nfunction pathToURI(input: string): _url.URL {\n\tinput = input.trim();\n\tinput = resolve(preferredCwd, input);\n\n\treturn _url.pathToFileURL(input);\n}\n\nfunction translatePath(input: string, mapFileUri: (input: string) => string, folderURIS: string[], fileURIS: string[]) {\n\tconst url = pathToURI(input);\n\tconst mappedUri = mapFileUri(url.href);\n\ttry {\n\t\tconst stat = _fs.lstatSync(_fs.realpathSync(input));\n\n\t\tif (stat.isFile()) {\n\t\t\tfileURIS.push(mappedUri);\n\t\t} else if (stat.isDirectory()) {\n\t\t\tfolderURIS.push(mappedUri);\n\t\t} else if (input === '/dev/null') {\n\t\t\t// handle /dev/null passed to us by external tools such as `git difftool`\n\t\t\tfileURIS.push(mappedUri);\n\t\t}\n\t} catch (e) {\n\t\tif (e.code === 'ENOENT') {\n\t\t\tfileURIS.push(mappedUri);\n\t\t} else {\n\t\t\tconsole.log(`Problem accessing file ${input}. Ignoring file`, e);\n\t\t}\n\t}\n}\n\nfunction mapFileToRemoteUri(uri: string): string {\n\treturn uri.replace(/^file:\\/\\//, 'vscode-remote://' + cliRemoteAuthority);\n}\n\nconst [, , productName, version, commit, executableName, ...remainingArgs] = process.argv;\nmain({ productName, version, commit, executableName }, remainingArgs).then(null, err => {\n\tconsole.error(err.message || err.stack || err);\n});\n"]}