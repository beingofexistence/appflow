{"version":3,"sources":["file:///workspace/appflow/src/vs/server/node/remoteExtensionsScanner.ts"],"names":[],"mappings":"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","file":"remoteExtensionsScanner.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isAbsolute, join, resolve } from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { cwd } from 'vs/base/common/process';\nimport { URI } from 'vs/base/common/uri';\nimport * as performance from 'vs/base/common/performance';\nimport { Event } from 'vs/base/common/event';\nimport { IURITransformer, transformOutgoingURIs } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ContextKeyDefinedExpr, ContextKeyEqualsExpr, ContextKeyExpr, ContextKeyExpression, ContextKeyGreaterEqualsExpr, ContextKeyGreaterExpr, ContextKeyInExpr, ContextKeyNotEqualsExpr, ContextKeyNotExpr, ContextKeyNotInExpr, ContextKeyRegexExpr, ContextKeySmallerEqualsExpr, ContextKeySmallerExpr, IContextKeyExprMapper } from 'vs/platform/contextkey/common/contextkey';\nimport { IExtensionGalleryService, InstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementCLI } from 'vs/platform/extensionManagement/common/extensionManagementCLI';\nimport { IExtensionsScannerService, toExtensionDescription } from 'vs/platform/extensionManagement/common/extensionsScannerService';\nimport { ExtensionType, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IServerEnvironmentService } from 'vs/server/node/serverEnvironmentService';\nimport { dedupExtensions } from 'vs/workbench/services/extensions/common/extensionsUtil';\nimport { Schemas } from 'vs/base/common/network';\nimport { IRemoteExtensionsScannerService } from 'vs/platform/remote/common/remoteExtensionsScanner';\nimport { ILanguagePackService } from 'vs/platform/languagePacks/common/languagePacks';\n\nexport class RemoteExtensionsScannerService implements IRemoteExtensionsScannerService {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _whenBuiltinExtensionsReady = Promise.resolve();\n\tprivate readonly _whenExtensionsReady = Promise.resolve();\n\n\tconstructor(\n\t\tprivate readonly _extensionManagementCLI: ExtensionManagementCLI,\n\t\tenvironmentService: IServerEnvironmentService,\n\t\tprivate readonly _userDataProfilesService: IUserDataProfilesService,\n\t\tprivate readonly _extensionsScannerService: IExtensionsScannerService,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _extensionGalleryService: IExtensionGalleryService,\n\t\tprivate readonly _languagePackService: ILanguagePackService\n\t) {\n\t\tconst builtinExtensionsToInstall = environmentService.args['install-builtin-extension'];\n\t\tif (builtinExtensionsToInstall) {\n\t\t\t_logService.trace('Installing builtin extensions passed via args...');\n\t\t\tconst installOptions: InstallOptions = { isMachineScoped: !!environmentService.args['do-not-sync'], installPreReleaseVersion: !!environmentService.args['pre-release'] };\n\t\t\tperformance.mark('code/server/willInstallBuiltinExtensions');\n\t\t\tthis._whenExtensionsReady = this._whenBuiltinExtensionsReady = _extensionManagementCLI.installExtensions([], this._asExtensionIdOrVSIX(builtinExtensionsToInstall), installOptions, !!environmentService.args['force'])\n\t\t\t\t.then(() => {\n\t\t\t\t\tperformance.mark('code/server/didInstallBuiltinExtensions');\n\t\t\t\t\t_logService.trace('Finished installing builtin extensions');\n\t\t\t\t}, error => {\n\t\t\t\t\t_logService.error(error);\n\t\t\t\t});\n\t\t}\n\n\t\tconst extensionsToInstall = environmentService.args['install-extension'];\n\t\tif (extensionsToInstall) {\n\t\t\t_logService.trace('Installing extensions passed via args...');\n\t\t\tthis._whenExtensionsReady = this._whenBuiltinExtensionsReady\n\t\t\t\t.then(() => _extensionManagementCLI.installExtensions(this._asExtensionIdOrVSIX(extensionsToInstall), [], {\n\t\t\t\t\tisMachineScoped: !!environmentService.args['do-not-sync'],\n\t\t\t\t\tinstallPreReleaseVersion: !!environmentService.args['pre-release'],\n\t\t\t\t\tisApplicationScoped: true // extensions installed during server startup are available to all profiles\n\t\t\t\t}, !!environmentService.args['force']))\n\t\t\t\t.then(() => {\n\t\t\t\t\t_logService.trace('Finished installing extensions');\n\t\t\t\t}, error => {\n\t\t\t\t\t_logService.error(error);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tprivate _asExtensionIdOrVSIX(inputs: string[]): (string | URI)[] {\n\t\treturn inputs.map(input => /\\.vsix$/i.test(input) ? URI.file(isAbsolute(input) ? input : join(cwd(), input)) : input);\n\t}\n\n\twhenExtensionsReady(): Promise<void> {\n\t\treturn this._whenExtensionsReady;\n\t}\n\n\tasync scanExtensions(language?: string, profileLocation?: URI, extensionDevelopmentLocations?: URI[], languagePackId?: string): Promise<IExtensionDescription[]> {\n\t\tperformance.mark('code/server/willScanExtensions');\n\t\tthis._logService.trace(`Scanning extensions using UI language: ${language}`);\n\n\t\tawait this._whenBuiltinExtensionsReady;\n\n\t\tconst extensionDevelopmentPaths = extensionDevelopmentLocations ? extensionDevelopmentLocations.filter(url => url.scheme === Schemas.file).map(url => url.fsPath) : undefined;\n\t\tprofileLocation = profileLocation ?? this._userDataProfilesService.defaultProfile.extensionsResource;\n\n\t\tconst extensions = await this._scanExtensions(profileLocation, language ?? platform.language, extensionDevelopmentPaths, languagePackId);\n\n\t\tthis._logService.trace('Scanned Extensions', extensions);\n\t\tthis._massageWhenConditions(extensions);\n\n\t\tperformance.mark('code/server/didScanExtensions');\n\t\treturn extensions;\n\t}\n\n\tasync scanSingleExtension(extensionLocation: URI, isBuiltin: boolean, language?: string): Promise<IExtensionDescription | null> {\n\t\tawait this._whenBuiltinExtensionsReady;\n\n\t\tconst extensionPath = extensionLocation.scheme === Schemas.file ? extensionLocation.fsPath : null;\n\n\t\tif (!extensionPath) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst extension = await this._scanSingleExtension(extensionPath, isBuiltin, language ?? platform.language);\n\n\t\tif (!extension) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis._massageWhenConditions([extension]);\n\n\t\treturn extension;\n\t}\n\n\tprivate async _scanExtensions(profileLocation: URI, language: string, extensionDevelopmentPath: string[] | undefined, languagePackId: string | undefined): Promise<IExtensionDescription[]> {\n\t\tawait this._ensureLanguagePackIsInstalled(language, languagePackId);\n\n\t\tconst [builtinExtensions, installedExtensions, developedExtensions] = await Promise.all([\n\t\t\tthis._scanBuiltinExtensions(language),\n\t\t\tthis._scanInstalledExtensions(profileLocation, language),\n\t\t\tthis._scanDevelopedExtensions(language, extensionDevelopmentPath)\n\t\t]);\n\n\t\treturn dedupExtensions(builtinExtensions, installedExtensions, developedExtensions, this._logService);\n\t}\n\n\tprivate async _scanDevelopedExtensions(language: string, extensionDevelopmentPaths?: string[]): Promise<IExtensionDescription[]> {\n\t\tif (extensionDevelopmentPaths) {\n\t\t\treturn (await Promise.all(extensionDevelopmentPaths.map(extensionDevelopmentPath => this._extensionsScannerService.scanOneOrMultipleExtensions(URI.file(resolve(extensionDevelopmentPath)), ExtensionType.User, { language }))))\n\t\t\t\t.flat()\n\t\t\t\t.map(e => toExtensionDescription(e, true));\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async _scanBuiltinExtensions(language: string): Promise<IExtensionDescription[]> {\n\t\tconst scannedExtensions = await this._extensionsScannerService.scanSystemExtensions({ language, useCache: true });\n\t\treturn scannedExtensions.map(e => toExtensionDescription(e, false));\n\t}\n\n\tprivate async _scanInstalledExtensions(profileLocation: URI, language: string): Promise<IExtensionDescription[]> {\n\t\tconst scannedExtensions = await this._extensionsScannerService.scanUserExtensions({ profileLocation, language, useCache: true });\n\t\treturn scannedExtensions.map(e => toExtensionDescription(e, false));\n\t}\n\n\tprivate async _scanSingleExtension(extensionPath: string, isBuiltin: boolean, language: string): Promise<IExtensionDescription | null> {\n\t\tconst extensionLocation = URI.file(resolve(extensionPath));\n\t\tconst type = isBuiltin ? ExtensionType.System : ExtensionType.User;\n\t\tconst scannedExtension = await this._extensionsScannerService.scanExistingExtension(extensionLocation, type, { language });\n\t\treturn scannedExtension ? toExtensionDescription(scannedExtension, false) : null;\n\t}\n\n\tprivate async _ensureLanguagePackIsInstalled(language: string, languagePackId: string | undefined): Promise<void> {\n\t\tif (\n\t\t\t// No need to install language packs for the default language\n\t\t\tlanguage === platform.LANGUAGE_DEFAULT ||\n\t\t\t// The extension gallery service needs to be available\n\t\t\t!this._extensionGalleryService.isEnabled()\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst installed = await this._languagePackService.getInstalledLanguages();\n\t\t\tif (installed.find(p => p.id === language)) {\n\t\t\t\tthis._logService.trace(`Language Pack ${language} is already installed. Skipping language pack installation.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t// We tried to see what is installed but failed. We can try installing anyway.\n\t\t\tthis._logService.error(err);\n\t\t}\n\n\t\tif (!languagePackId) {\n\t\t\tthis._logService.trace(`No language pack id provided for language ${language}. Skipping language pack installation.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._logService.trace(`Language Pack ${languagePackId} for language ${language} is not installed. It will be installed now.`);\n\t\ttry {\n\t\t\tawait this._extensionManagementCLI.installExtensions([languagePackId], [], { isMachineScoped: true }, true);\n\t\t} catch (err) {\n\t\t\t// We tried to install the language pack but failed. We can continue without it thus using the default language.\n\t\t\tthis._logService.error(err);\n\t\t}\n\t}\n\n\tprivate _massageWhenConditions(extensions: IExtensionDescription[]): void {\n\t\t// Massage \"when\" conditions which mention `resourceScheme`\n\n\t\tinterface WhenUser { when?: string }\n\n\t\tinterface LocWhenUser { [loc: string]: WhenUser[] }\n\n\t\tconst _mapResourceSchemeValue = (value: string, isRegex: boolean): string => {\n\t\t\t// console.log(`_mapResourceSchemeValue: ${value}, ${isRegex}`);\n\t\t\treturn value.replace(/file/g, 'vscode-remote');\n\t\t};\n\n\t\tconst _mapResourceRegExpValue = (value: RegExp): RegExp => {\n\t\t\tlet flags = '';\n\t\t\tflags += value.global ? 'g' : '';\n\t\t\tflags += value.ignoreCase ? 'i' : '';\n\t\t\tflags += value.multiline ? 'm' : '';\n\t\t\treturn new RegExp(_mapResourceSchemeValue(value.source, true), flags);\n\t\t};\n\n\t\tconst _exprKeyMapper = new class implements IContextKeyExprMapper {\n\t\t\tmapDefined(key: string): ContextKeyExpression {\n\t\t\t\treturn ContextKeyDefinedExpr.create(key);\n\t\t\t}\n\t\t\tmapNot(key: string): ContextKeyExpression {\n\t\t\t\treturn ContextKeyNotExpr.create(key);\n\t\t\t}\n\t\t\tmapEquals(key: string, value: any): ContextKeyExpression {\n\t\t\t\tif (key === 'resourceScheme' && typeof value === 'string') {\n\t\t\t\t\treturn ContextKeyEqualsExpr.create(key, _mapResourceSchemeValue(value, false));\n\t\t\t\t} else {\n\t\t\t\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapNotEquals(key: string, value: any): ContextKeyExpression {\n\t\t\t\tif (key === 'resourceScheme' && typeof value === 'string') {\n\t\t\t\t\treturn ContextKeyNotEqualsExpr.create(key, _mapResourceSchemeValue(value, false));\n\t\t\t\t} else {\n\t\t\t\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapGreater(key: string, value: any): ContextKeyExpression {\n\t\t\t\treturn ContextKeyGreaterExpr.create(key, value);\n\t\t\t}\n\t\t\tmapGreaterEquals(key: string, value: any): ContextKeyExpression {\n\t\t\t\treturn ContextKeyGreaterEqualsExpr.create(key, value);\n\t\t\t}\n\t\t\tmapSmaller(key: string, value: any): ContextKeyExpression {\n\t\t\t\treturn ContextKeySmallerExpr.create(key, value);\n\t\t\t}\n\t\t\tmapSmallerEquals(key: string, value: any): ContextKeyExpression {\n\t\t\t\treturn ContextKeySmallerEqualsExpr.create(key, value);\n\t\t\t}\n\t\t\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\t\t\tif (key === 'resourceScheme' && regexp) {\n\t\t\t\t\treturn ContextKeyRegexExpr.create(key, _mapResourceRegExpValue(regexp));\n\t\t\t\t} else {\n\t\t\t\t\treturn ContextKeyRegexExpr.create(key, regexp);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapIn(key: string, valueKey: string): ContextKeyInExpr {\n\t\t\t\treturn ContextKeyInExpr.create(key, valueKey);\n\t\t\t}\n\t\t\tmapNotIn(key: string, valueKey: string): ContextKeyNotInExpr {\n\t\t\t\treturn ContextKeyNotInExpr.create(key, valueKey);\n\t\t\t}\n\t\t};\n\n\t\tconst _massageWhenUser = (element: WhenUser) => {\n\t\t\tif (!element || !element.when || !/resourceScheme/.test(element.when)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst expr = ContextKeyExpr.deserialize(element.when);\n\t\t\tif (!expr) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst massaged = expr.map(_exprKeyMapper);\n\t\t\telement.when = massaged.serialize();\n\t\t};\n\n\t\tconst _massageWhenUserArr = (elements: WhenUser[] | WhenUser) => {\n\t\t\tif (Array.isArray(elements)) {\n\t\t\t\tfor (const element of elements) {\n\t\t\t\t\t_massageWhenUser(element);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_massageWhenUser(elements);\n\t\t\t}\n\t\t};\n\n\t\tconst _massageLocWhenUser = (target: LocWhenUser) => {\n\t\t\tfor (const loc in target) {\n\t\t\t\t_massageWhenUserArr(target[loc]);\n\t\t\t}\n\t\t};\n\n\t\textensions.forEach((extension) => {\n\t\t\tif (extension.contributes) {\n\t\t\t\tif (extension.contributes.menus) {\n\t\t\t\t\t_massageLocWhenUser(<LocWhenUser>extension.contributes.menus);\n\t\t\t\t}\n\t\t\t\tif (extension.contributes.keybindings) {\n\t\t\t\t\t_massageWhenUserArr(<WhenUser | WhenUser[]>extension.contributes.keybindings);\n\t\t\t\t}\n\t\t\t\tif (extension.contributes.views) {\n\t\t\t\t\t_massageLocWhenUser(<LocWhenUser>extension.contributes.views);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class RemoteExtensionsScannerChannel implements IServerChannel {\n\n\tconstructor(private service: RemoteExtensionsScannerService, private getUriTransformer: (requestContext: any) => IURITransformer) { }\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tasync call(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'whenExtensionsReady': return this.service.whenExtensionsReady();\n\t\t\tcase 'scanExtensions': {\n\t\t\t\tconst language = args[0];\n\t\t\t\tconst profileLocation = args[1] ? URI.revive(uriTransformer.transformIncoming(args[1])) : undefined;\n\t\t\t\tconst extensionDevelopmentPath = Array.isArray(args[2]) ? args[2].map(u => URI.revive(uriTransformer.transformIncoming(u))) : undefined;\n\t\t\t\tconst languagePackId: string | undefined = args[3];\n\t\t\t\tconst extensions = await this.service.scanExtensions(language, profileLocation, extensionDevelopmentPath, languagePackId);\n\t\t\t\treturn extensions.map(extension => transformOutgoingURIs(extension, uriTransformer));\n\t\t\t}\n\t\t\tcase 'scanSingleExtension': {\n\t\t\t\tconst extension = await this.service.scanSingleExtension(URI.revive(uriTransformer.transformIncoming(args[0])), args[1], args[2]);\n\t\t\t\treturn extension ? transformOutgoingURIs(extension, uriTransformer) : null;\n\t\t\t}\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n"]}