{"version":3,"sources":["file:///workspace/appflow/src/vs/server/node/remoteExtensionHostAgentServer.ts"],"names":[],"mappings":"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","file":"remoteExtensionHostAgentServer.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as crypto from 'crypto';\nimport * as fs from 'fs';\nimport * as http from 'http';\nimport * as net from 'net';\nimport { performance } from 'perf_hooks';\nimport * as url from 'url';\nimport { LoaderStats } from 'vs/base/common/amd';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isSigPipeError, onUnexpectedError, setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { connectionTokenQueryName, FileAccess, Schemas } from 'vs/base/common/network';\nimport { dirname, join } from 'vs/base/common/path';\nimport * as perf from 'vs/base/common/performance';\nimport * as platform from 'vs/base/common/platform';\nimport { createRegExp, escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { getOSReleaseInfo } from 'vs/base/node/osReleaseInfo';\nimport { findFreePort } from 'vs/base/node/ports';\nimport { addUNCHostToAllowlist, disableUNCAccessRestrictions } from 'vs/base/node/unc';\nimport { PersistentProtocol } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ConnectionType, ConnectionTypeRequest, ErrorMessage, HandshakeMessage, IRemoteExtensionHostStartParams, ITunnelConnectionStartParams, SignRequest } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { getRemoteServerRootPath } from 'vs/platform/remote/common/remoteHosts';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionHostConnection } from 'vs/server/node/extensionHostConnection';\nimport { ManagementConnection } from 'vs/server/node/remoteExtensionManagement';\nimport { determineServerConnectionToken, requestHasValidConnectionToken as httpRequestHasValidConnectionToken, ServerConnectionToken, ServerConnectionTokenParseError, ServerConnectionTokenType } from 'vs/server/node/serverConnectionToken';\nimport { IServerEnvironmentService, ServerParsedArgs } from 'vs/server/node/serverEnvironmentService';\nimport { setupServerServices, SocketServer } from 'vs/server/node/serverServices';\nimport { CacheControl, serveError, serveFile, WebClientServer } from 'vs/server/node/webClientServer';\n\nconst SHUTDOWN_TIMEOUT = 5 * 60 * 1000;\n\ndeclare module vsda {\n\t// the signer is a native module that for historical reasons uses a lower case class name\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\texport class signer {\n\t\tsign(arg: string): string;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\texport class validator {\n\t\tcreateNewMessage(arg: string): string;\n\t\tvalidate(arg: string): 'ok' | 'error';\n\t}\n}\n\nclass RemoteExtensionHostAgentServer extends Disposable implements IServerAPI {\n\n\tprivate readonly _extHostConnections: { [reconnectionToken: string]: ExtensionHostConnection };\n\tprivate readonly _managementConnections: { [reconnectionToken: string]: ManagementConnection };\n\tprivate readonly _allReconnectionTokens: Set<string>;\n\tprivate readonly _webClientServer: WebClientServer | null;\n\tprivate readonly _webEndpointOriginChecker = WebEndpointOriginChecker.create(this._productService);\n\n\tprivate readonly _serverRootPath: string;\n\n\tprivate shutdownTimer: NodeJS.Timer | undefined;\n\n\tconstructor(\n\t\tprivate readonly _socketServer: SocketServer<RemoteAgentConnectionContext>,\n\t\tprivate readonly _connectionToken: ServerConnectionToken,\n\t\tprivate readonly _vsdaMod: typeof vsda | null,\n\t\thasWebClient: boolean,\n\t\t@IServerEnvironmentService private readonly _environmentService: IServerEnvironmentService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._serverRootPath = getRemoteServerRootPath(_productService);\n\t\tthis._extHostConnections = Object.create(null);\n\t\tthis._managementConnections = Object.create(null);\n\t\tthis._allReconnectionTokens = new Set<string>();\n\t\tthis._webClientServer = (\n\t\t\thasWebClient\n\t\t\t\t? this._instantiationService.createInstance(WebClientServer, this._connectionToken)\n\t\t\t\t: null\n\t\t);\n\t\tthis._logService.info(`Extension host agent started.`);\n\n\t\tthis._waitThenShutdown(true);\n\t}\n\n\tpublic async handleRequest(req: http.IncomingMessage, res: http.ServerResponse): Promise<void> {\n\t\t// Only serve GET requests\n\t\tif (req.method !== 'GET') {\n\t\t\treturn serveError(req, res, 405, `Unsupported method ${req.method}`);\n\t\t}\n\n\t\tif (!req.url) {\n\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t}\n\n\t\tconst parsedUrl = url.parse(req.url, true);\n\t\tlet pathname = parsedUrl.pathname;\n\n\t\tif (!pathname) {\n\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t}\n\n\t\t// for now accept all paths, with or without server root path\n\t\tif (pathname.startsWith(this._serverRootPath) && pathname.charCodeAt(this._serverRootPath.length) === CharCode.Slash) {\n\t\t\tpathname = pathname.substring(this._serverRootPath.length);\n\t\t}\n\n\t\t// Version\n\t\tif (pathname === '/version') {\n\t\t\tres.writeHead(200, { 'Content-Type': 'text/plain' });\n\t\t\treturn void res.end(this._productService.commit || '');\n\t\t}\n\n\t\t// Delay shutdown\n\t\tif (pathname === '/delay-shutdown') {\n\t\t\tthis._delayShutdown();\n\t\t\tres.writeHead(200);\n\t\t\treturn void res.end('OK');\n\t\t}\n\n\t\tif (!httpRequestHasValidConnectionToken(this._connectionToken, req, parsedUrl)) {\n\t\t\t// invalid connection token\n\t\t\treturn serveError(req, res, 403, `Forbidden.`);\n\t\t}\n\n\t\tif (pathname === '/vscode-remote-resource') {\n\t\t\t// Handle HTTP requests for resources rendered in the rich client (images, fonts, etc.)\n\t\t\t// These resources could be files shipped with extensions or even workspace files.\n\t\t\tconst desiredPath = parsedUrl.query['path'];\n\t\t\tif (typeof desiredPath !== 'string') {\n\t\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t\t}\n\n\t\t\tlet filePath: string;\n\t\t\ttry {\n\t\t\t\tfilePath = URI.from({ scheme: Schemas.file, path: desiredPath }).fsPath;\n\t\t\t} catch (err) {\n\t\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t\t}\n\n\t\t\tconst responseHeaders: Record<string, string> = Object.create(null);\n\t\t\tif (this._environmentService.isBuilt) {\n\t\t\t\tif (isEqualOrParent(filePath, this._environmentService.builtinExtensionsPath, !platform.isLinux)\n\t\t\t\t\t|| isEqualOrParent(filePath, this._environmentService.extensionsPath, !platform.isLinux)\n\t\t\t\t) {\n\t\t\t\t\tresponseHeaders['Cache-Control'] = 'public, max-age=31536000';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Allow cross origin requests from the web worker extension host\n\t\t\tresponseHeaders['Vary'] = 'Origin';\n\t\t\tconst requestOrigin = req.headers['origin'];\n\t\t\tif (requestOrigin && this._webEndpointOriginChecker.matches(requestOrigin)) {\n\t\t\t\tresponseHeaders['Access-Control-Allow-Origin'] = requestOrigin;\n\t\t\t}\n\t\t\treturn serveFile(filePath, CacheControl.ETAG, this._logService, req, res, responseHeaders);\n\t\t}\n\n\t\t// workbench web UI\n\t\tif (this._webClientServer) {\n\t\t\tthis._webClientServer.handle(req, res, parsedUrl);\n\t\t\treturn;\n\t\t}\n\n\t\tres.writeHead(404, { 'Content-Type': 'text/plain' });\n\t\treturn void res.end('Not found');\n\t}\n\n\tpublic handleUpgrade(req: http.IncomingMessage, socket: net.Socket) {\n\t\tlet reconnectionToken = generateUuid();\n\t\tlet isReconnection = false;\n\t\tlet skipWebSocketFrames = false;\n\n\t\tif (req.url) {\n\t\t\tconst query = url.parse(req.url, true).query;\n\t\t\tif (typeof query.reconnectionToken === 'string') {\n\t\t\t\treconnectionToken = query.reconnectionToken;\n\t\t\t}\n\t\t\tif (query.reconnection === 'true') {\n\t\t\t\tisReconnection = true;\n\t\t\t}\n\t\t\tif (query.skipWebSocketFrames === 'true') {\n\t\t\t\tskipWebSocketFrames = true;\n\t\t\t}\n\t\t}\n\n\t\tif (req.headers['upgrade'] === undefined || req.headers['upgrade'].toLowerCase() !== 'websocket') {\n\t\t\tsocket.end('HTTP/1.1 400 Bad Request');\n\t\t\treturn;\n\t\t}\n\n\t\t// https://tools.ietf.org/html/rfc6455#section-4\n\t\tconst requestNonce = req.headers['sec-websocket-key'];\n\t\tconst hash = crypto.createHash('sha1');\n\t\thash.update(requestNonce + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11');\n\t\tconst responseNonce = hash.digest('base64');\n\n\t\tconst responseHeaders = [\n\t\t\t`HTTP/1.1 101 Switching Protocols`,\n\t\t\t`Upgrade: websocket`,\n\t\t\t`Connection: Upgrade`,\n\t\t\t`Sec-WebSocket-Accept: ${responseNonce}`\n\t\t];\n\n\t\t// See https://tools.ietf.org/html/rfc7692#page-12\n\t\tlet permessageDeflate = false;\n\t\tif (!skipWebSocketFrames && !this._environmentService.args['disable-websocket-compression'] && req.headers['sec-websocket-extensions']) {\n\t\t\tconst websocketExtensionOptions = Array.isArray(req.headers['sec-websocket-extensions']) ? req.headers['sec-websocket-extensions'] : [req.headers['sec-websocket-extensions']];\n\t\t\tfor (const websocketExtensionOption of websocketExtensionOptions) {\n\t\t\t\tif (/\\b((server_max_window_bits)|(server_no_context_takeover)|(client_no_context_takeover))\\b/.test(websocketExtensionOption)) {\n\t\t\t\t\t// sorry, the server does not support zlib parameter tweaks\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (/\\b(permessage-deflate)\\b/.test(websocketExtensionOption)) {\n\t\t\t\t\tpermessageDeflate = true;\n\t\t\t\t\tresponseHeaders.push(`Sec-WebSocket-Extensions: permessage-deflate`);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (/\\b(x-webkit-deflate-frame)\\b/.test(websocketExtensionOption)) {\n\t\t\t\t\tpermessageDeflate = true;\n\t\t\t\t\tresponseHeaders.push(`Sec-WebSocket-Extensions: x-webkit-deflate-frame`);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsocket.write(responseHeaders.join('\\r\\n') + '\\r\\n\\r\\n');\n\n\t\t// Never timeout this socket due to inactivity!\n\t\tsocket.setTimeout(0);\n\t\t// Disable Nagle's algorithm\n\t\tsocket.setNoDelay(true);\n\t\t// Finally!\n\n\t\tif (skipWebSocketFrames) {\n\t\t\tthis._handleWebSocketConnection(new NodeSocket(socket, `server-connection-${reconnectionToken}`), isReconnection, reconnectionToken);\n\t\t} else {\n\t\t\tthis._handleWebSocketConnection(new WebSocketNodeSocket(new NodeSocket(socket, `server-connection-${reconnectionToken}`), permessageDeflate, null, true), isReconnection, reconnectionToken);\n\t\t}\n\t}\n\n\tpublic handleServerError(err: Error): void {\n\t\tthis._logService.error(`Error occurred in server`);\n\t\tthis._logService.error(err);\n\t}\n\n\t// Eventually cleanup\n\n\tprivate _getRemoteAddress(socket: NodeSocket | WebSocketNodeSocket): string {\n\t\tlet _socket: net.Socket;\n\t\tif (socket instanceof NodeSocket) {\n\t\t\t_socket = socket.socket;\n\t\t} else {\n\t\t\t_socket = socket.socket.socket;\n\t\t}\n\t\treturn _socket.remoteAddress || `<unknown>`;\n\t}\n\n\tprivate async _rejectWebSocketConnection(logPrefix: string, protocol: PersistentProtocol, reason: string): Promise<void> {\n\t\tconst socket = protocol.getSocket();\n\t\tthis._logService.error(`${logPrefix} ${reason}.`);\n\t\tconst errMessage: ErrorMessage = {\n\t\t\ttype: 'error',\n\t\t\treason: reason\n\t\t};\n\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(errMessage)));\n\t\tprotocol.dispose();\n\t\tawait socket.drain();\n\t\tsocket.dispose();\n\t}\n\n\t/**\n\t * NOTE: Avoid using await in this method!\n\t * The problem is that await introduces a process.nextTick due to the implicit Promise.then\n\t * This can lead to some bytes being received and interpreted and a control message being emitted before the next listener has a chance to be registered.\n\t */\n\tprivate _handleWebSocketConnection(socket: NodeSocket | WebSocketNodeSocket, isReconnection: boolean, reconnectionToken: string): void {\n\t\tconst remoteAddress = this._getRemoteAddress(socket);\n\t\tconst logPrefix = `[${remoteAddress}][${reconnectionToken.substr(0, 8)}]`;\n\t\tconst protocol = new PersistentProtocol({ socket });\n\n\t\tconst validator = this._vsdaMod ? new this._vsdaMod.validator() : null;\n\t\tconst signer = this._vsdaMod ? new this._vsdaMod.signer() : null;\n\n\t\tconst enum State {\n\t\t\tWaitingForAuth,\n\t\t\tWaitingForConnectionType,\n\t\t\tDone,\n\t\t\tError\n\t\t}\n\t\tlet state = State.WaitingForAuth;\n\n\t\tconst rejectWebSocketConnection = (msg: string) => {\n\t\t\tstate = State.Error;\n\t\t\tlistener.dispose();\n\t\t\tthis._rejectWebSocketConnection(logPrefix, protocol, msg);\n\t\t};\n\n\t\tconst listener = protocol.onControlMessage((raw) => {\n\t\t\tif (state === State.WaitingForAuth) {\n\t\t\t\tlet msg1: HandshakeMessage;\n\t\t\t\ttry {\n\t\t\t\t\tmsg1 = <HandshakeMessage>JSON.parse(raw.toString());\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn rejectWebSocketConnection(`Malformed first message`);\n\t\t\t\t}\n\t\t\t\tif (msg1.type !== 'auth') {\n\t\t\t\t\treturn rejectWebSocketConnection(`Invalid first message`);\n\t\t\t\t}\n\n\t\t\t\tif (this._connectionToken.type === ServerConnectionTokenType.Mandatory && !this._connectionToken.validate(msg1.auth)) {\n\t\t\t\t\treturn rejectWebSocketConnection(`Unauthorized client refused: auth mismatch`);\n\t\t\t\t}\n\n\t\t\t\t// Send `sign` request\n\t\t\t\tlet signedData = generateUuid();\n\t\t\t\tif (signer) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsignedData = signer.sign(msg1.data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet someText = generateUuid();\n\t\t\t\tif (validator) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsomeText = validator.createNewMessage(someText);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst signRequest: SignRequest = {\n\t\t\t\t\ttype: 'sign',\n\t\t\t\t\tdata: someText,\n\t\t\t\t\tsignedData: signedData\n\t\t\t\t};\n\t\t\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(signRequest)));\n\n\t\t\t\tstate = State.WaitingForConnectionType;\n\n\t\t\t} else if (state === State.WaitingForConnectionType) {\n\n\t\t\t\tlet msg2: HandshakeMessage;\n\t\t\t\ttry {\n\t\t\t\t\tmsg2 = <HandshakeMessage>JSON.parse(raw.toString());\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn rejectWebSocketConnection(`Malformed second message`);\n\t\t\t\t}\n\t\t\t\tif (msg2.type !== 'connectionType') {\n\t\t\t\t\treturn rejectWebSocketConnection(`Invalid second message`);\n\t\t\t\t}\n\t\t\t\tif (typeof msg2.signedData !== 'string') {\n\t\t\t\t\treturn rejectWebSocketConnection(`Invalid second message field type`);\n\t\t\t\t}\n\n\t\t\t\tconst rendererCommit = msg2.commit;\n\t\t\t\tconst myCommit = this._productService.commit;\n\t\t\t\tif (rendererCommit && myCommit) {\n\t\t\t\t\t// Running in the built version where commits are defined\n\t\t\t\t\tif (rendererCommit !== myCommit) {\n\t\t\t\t\t\treturn rejectWebSocketConnection(`Client refused: version mismatch`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet valid = false;\n\t\t\t\tif (!validator) {\n\t\t\t\t\tvalid = true;\n\t\t\t\t} else if (this._connectionToken.validate(msg2.signedData)) {\n\t\t\t\t\t// web client\n\t\t\t\t\tvalid = true;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalid = validator.validate(msg2.signedData) === 'ok';\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!valid) {\n\t\t\t\t\tif (this._environmentService.isBuilt) {\n\t\t\t\t\t\treturn rejectWebSocketConnection(`Unauthorized client refused`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._logService.error(`${logPrefix} Unauthorized client handshake failed but we proceed because of dev mode.`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// We have received a new connection.\n\t\t\t\t// This indicates that the server owner has connectivity.\n\t\t\t\t// Therefore we will shorten the reconnection grace period for disconnected connections!\n\t\t\t\tfor (const key in this._managementConnections) {\n\t\t\t\t\tconst managementConnection = this._managementConnections[key];\n\t\t\t\t\tmanagementConnection.shortenReconnectionGraceTimeIfNecessary();\n\t\t\t\t}\n\t\t\t\tfor (const key in this._extHostConnections) {\n\t\t\t\t\tconst extHostConnection = this._extHostConnections[key];\n\t\t\t\t\textHostConnection.shortenReconnectionGraceTimeIfNecessary();\n\t\t\t\t}\n\n\t\t\t\tstate = State.Done;\n\t\t\t\tlistener.dispose();\n\t\t\t\tthis._handleConnectionType(remoteAddress, logPrefix, protocol, socket, isReconnection, reconnectionToken, msg2);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async _handleConnectionType(remoteAddress: string, _logPrefix: string, protocol: PersistentProtocol, socket: NodeSocket | WebSocketNodeSocket, isReconnection: boolean, reconnectionToken: string, msg: ConnectionTypeRequest): Promise<void> {\n\t\tconst logPrefix = (\n\t\t\tmsg.desiredConnectionType === ConnectionType.Management\n\t\t\t\t? `${_logPrefix}[ManagementConnection]`\n\t\t\t\t: msg.desiredConnectionType === ConnectionType.ExtensionHost\n\t\t\t\t\t? `${_logPrefix}[ExtensionHostConnection]`\n\t\t\t\t\t: _logPrefix\n\t\t);\n\n\t\tif (msg.desiredConnectionType === ConnectionType.Management) {\n\t\t\t// This should become a management connection\n\n\t\t\tif (isReconnection) {\n\t\t\t\t// This is a reconnection\n\t\t\t\tif (!this._managementConnections[reconnectionToken]) {\n\t\t\t\t\tif (!this._allReconnectionTokens.has(reconnectionToken)) {\n\t\t\t\t\t\t// This is an unknown reconnection token\n\t\t\t\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Unknown reconnection token (never seen)`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is a connection that was seen in the past, but is no longer valid\n\t\t\t\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Unknown reconnection token (seen before)`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify({ type: 'ok' })));\n\t\t\t\tconst dataChunk = protocol.readEntireBuffer();\n\t\t\t\tprotocol.dispose();\n\t\t\t\tthis._managementConnections[reconnectionToken].acceptReconnection(remoteAddress, socket, dataChunk);\n\n\t\t\t} else {\n\t\t\t\t// This is a fresh connection\n\t\t\t\tif (this._managementConnections[reconnectionToken]) {\n\t\t\t\t\t// Cannot have two concurrent connections using the same reconnection token\n\t\t\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Duplicate reconnection token`);\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify({ type: 'ok' })));\n\t\t\t\tconst con = new ManagementConnection(this._logService, reconnectionToken, remoteAddress, protocol);\n\t\t\t\tthis._socketServer.acceptConnection(con.protocol, con.onClose);\n\t\t\t\tthis._managementConnections[reconnectionToken] = con;\n\t\t\t\tthis._allReconnectionTokens.add(reconnectionToken);\n\t\t\t\tcon.onClose(() => {\n\t\t\t\t\tdelete this._managementConnections[reconnectionToken];\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else if (msg.desiredConnectionType === ConnectionType.ExtensionHost) {\n\n\t\t\t// This should become an extension host connection\n\t\t\tconst startParams0 = <IRemoteExtensionHostStartParams>msg.args || { language: 'en' };\n\t\t\tconst startParams = await this._updateWithFreeDebugPort(startParams0);\n\n\t\t\tif (startParams.port) {\n\t\t\t\tthis._logService.trace(`${logPrefix} - startParams debug port ${startParams.port}`);\n\t\t\t}\n\t\t\tthis._logService.trace(`${logPrefix} - startParams language: ${startParams.language}`);\n\t\t\tthis._logService.trace(`${logPrefix} - startParams env: ${JSON.stringify(startParams.env)}`);\n\n\t\t\tif (isReconnection) {\n\t\t\t\t// This is a reconnection\n\t\t\t\tif (!this._extHostConnections[reconnectionToken]) {\n\t\t\t\t\tif (!this._allReconnectionTokens.has(reconnectionToken)) {\n\t\t\t\t\t\t// This is an unknown reconnection token\n\t\t\t\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Unknown reconnection token (never seen)`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is a connection that was seen in the past, but is no longer valid\n\t\t\t\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Unknown reconnection token (seen before)`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendPause();\n\t\t\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(startParams.port ? { debugPort: startParams.port } : {})));\n\t\t\t\tconst dataChunk = protocol.readEntireBuffer();\n\t\t\t\tprotocol.dispose();\n\t\t\t\tthis._extHostConnections[reconnectionToken].acceptReconnection(remoteAddress, socket, dataChunk);\n\n\t\t\t} else {\n\t\t\t\t// This is a fresh connection\n\t\t\t\tif (this._extHostConnections[reconnectionToken]) {\n\t\t\t\t\t// Cannot have two concurrent connections using the same reconnection token\n\t\t\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Duplicate reconnection token`);\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendPause();\n\t\t\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(startParams.port ? { debugPort: startParams.port } : {})));\n\t\t\t\tconst dataChunk = protocol.readEntireBuffer();\n\t\t\t\tprotocol.dispose();\n\t\t\t\tconst con = this._instantiationService.createInstance(ExtensionHostConnection, reconnectionToken, remoteAddress, socket, dataChunk);\n\t\t\t\tthis._extHostConnections[reconnectionToken] = con;\n\t\t\t\tthis._allReconnectionTokens.add(reconnectionToken);\n\t\t\t\tcon.onClose(() => {\n\t\t\t\t\tdelete this._extHostConnections[reconnectionToken];\n\t\t\t\t\tthis._onDidCloseExtHostConnection();\n\t\t\t\t});\n\t\t\t\tcon.start(startParams);\n\t\t\t}\n\n\t\t} else if (msg.desiredConnectionType === ConnectionType.Tunnel) {\n\n\t\t\tconst tunnelStartParams = <ITunnelConnectionStartParams>msg.args;\n\t\t\tthis._createTunnel(protocol, tunnelStartParams);\n\n\t\t} else {\n\n\t\t\treturn this._rejectWebSocketConnection(logPrefix, protocol, `Unknown initial data received`);\n\n\t\t}\n\t}\n\n\tprivate async _createTunnel(protocol: PersistentProtocol, tunnelStartParams: ITunnelConnectionStartParams): Promise<void> {\n\t\tconst remoteSocket = (<NodeSocket>protocol.getSocket()).socket;\n\t\tconst dataChunk = protocol.readEntireBuffer();\n\t\tprotocol.dispose();\n\n\t\tremoteSocket.pause();\n\t\tconst localSocket = await this._connectTunnelSocket(tunnelStartParams.host, tunnelStartParams.port);\n\n\t\tif (dataChunk.byteLength > 0) {\n\t\t\tlocalSocket.write(dataChunk.buffer);\n\t\t}\n\n\t\tlocalSocket.on('end', () => remoteSocket.end());\n\t\tlocalSocket.on('close', () => remoteSocket.end());\n\t\tlocalSocket.on('error', () => remoteSocket.destroy());\n\t\tremoteSocket.on('end', () => localSocket.end());\n\t\tremoteSocket.on('close', () => localSocket.end());\n\t\tremoteSocket.on('error', () => localSocket.destroy());\n\n\t\tlocalSocket.pipe(remoteSocket);\n\t\tremoteSocket.pipe(localSocket);\n\t}\n\n\tprivate _connectTunnelSocket(host: string, port: number): Promise<net.Socket> {\n\t\treturn new Promise<net.Socket>((c, e) => {\n\t\t\tconst socket = net.createConnection(\n\t\t\t\t{\n\t\t\t\t\thost: host,\n\t\t\t\t\tport: port,\n\t\t\t\t\tautoSelectFamily: true\n\t\t\t\t}, () => {\n\t\t\t\t\tsocket.removeListener('error', e);\n\t\t\t\t\tsocket.pause();\n\t\t\t\t\tc(socket);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tsocket.once('error', e);\n\t\t});\n\t}\n\n\tprivate _updateWithFreeDebugPort(startParams: IRemoteExtensionHostStartParams): Thenable<IRemoteExtensionHostStartParams> {\n\t\tif (typeof startParams.port === 'number') {\n\t\t\treturn findFreePort(startParams.port, 10 /* try 10 ports */, 5000 /* try up to 5 seconds */).then(freePort => {\n\t\t\t\tstartParams.port = freePort;\n\t\t\t\treturn startParams;\n\t\t\t});\n\t\t}\n\t\t// No port clear debug configuration.\n\t\tstartParams.debugId = undefined;\n\t\tstartParams.port = undefined;\n\t\tstartParams.break = undefined;\n\t\treturn Promise.resolve(startParams);\n\t}\n\n\tprivate async _onDidCloseExtHostConnection(): Promise<void> {\n\t\tif (!this._environmentService.args['enable-remote-auto-shutdown']) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cancelShutdown();\n\n\t\tconst hasActiveExtHosts = !!Object.keys(this._extHostConnections).length;\n\t\tif (!hasActiveExtHosts) {\n\t\t\tconsole.log('Last EH closed, waiting before shutting down');\n\t\t\tthis._logService.info('Last EH closed, waiting before shutting down');\n\t\t\tthis._waitThenShutdown();\n\t\t}\n\t}\n\n\tprivate _waitThenShutdown(initial = false): void {\n\t\tif (!this._environmentService.args['enable-remote-auto-shutdown']) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._environmentService.args['remote-auto-shutdown-without-delay'] && !initial) {\n\t\t\tthis._shutdown();\n\t\t} else {\n\t\t\tthis.shutdownTimer = setTimeout(() => {\n\t\t\t\tthis.shutdownTimer = undefined;\n\n\t\t\t\tthis._shutdown();\n\t\t\t}, SHUTDOWN_TIMEOUT);\n\t\t}\n\t}\n\n\tprivate _shutdown(): void {\n\t\tconst hasActiveExtHosts = !!Object.keys(this._extHostConnections).length;\n\t\tif (hasActiveExtHosts) {\n\t\t\tconsole.log('New EH opened, aborting shutdown');\n\t\t\tthis._logService.info('New EH opened, aborting shutdown');\n\t\t\treturn;\n\t\t} else {\n\t\t\tconsole.log('Last EH closed, shutting down');\n\t\t\tthis._logService.info('Last EH closed, shutting down');\n\t\t\tthis.dispose();\n\t\t\tprocess.exit(0);\n\t\t}\n\t}\n\n\t/**\n\t * If the server is in a shutdown timeout, cancel it and start over\n\t */\n\tprivate _delayShutdown(): void {\n\t\tif (this.shutdownTimer) {\n\t\t\tconsole.log('Got delay-shutdown request while in shutdown timeout, delaying');\n\t\t\tthis._logService.info('Got delay-shutdown request while in shutdown timeout, delaying');\n\t\t\tthis._cancelShutdown();\n\t\t\tthis._waitThenShutdown();\n\t\t}\n\t}\n\n\tprivate _cancelShutdown(): void {\n\t\tif (this.shutdownTimer) {\n\t\t\tconsole.log('Cancelling previous shutdown timeout');\n\t\t\tthis._logService.info('Cancelling previous shutdown timeout');\n\t\t\tclearTimeout(this.shutdownTimer);\n\t\t\tthis.shutdownTimer = undefined;\n\t\t}\n\t}\n}\n\nexport interface IServerAPI {\n\t/**\n\t * Do not remove!!. Called from server-main.js\n\t */\n\thandleRequest(req: http.IncomingMessage, res: http.ServerResponse): Promise<void>;\n\t/**\n\t * Do not remove!!. Called from server-main.js\n\t */\n\thandleUpgrade(req: http.IncomingMessage, socket: net.Socket): void;\n\t/**\n\t * Do not remove!!. Called from server-main.js\n\t */\n\thandleServerError(err: Error): void;\n\t/**\n\t * Do not remove!!. Called from server-main.js\n\t */\n\tdispose(): void;\n}\n\nexport async function createServer(address: string | net.AddressInfo | null, args: ServerParsedArgs, REMOTE_DATA_FOLDER: string): Promise<IServerAPI> {\n\tconst connectionToken = await determineServerConnectionToken(args);\n\tif (connectionToken instanceof ServerConnectionTokenParseError) {\n\t\tconsole.warn(connectionToken.message);\n\t\tprocess.exit(1);\n\t}\n\n\t// setting up error handlers, first with console.error, then, once available, using the log service\n\n\tfunction initUnexpectedErrorHandler(handler: (err: any) => void) {\n\t\tsetUnexpectedErrorHandler(err => {\n\t\t\t// See https://github.com/microsoft/vscode-remote-release/issues/6481\n\t\t\t// In some circumstances, console.error will throw an asynchronous error. This asynchronous error\n\t\t\t// will end up here, and then it will be logged again, thus creating an endless asynchronous loop.\n\t\t\t// Here we try to break the loop by ignoring EPIPE errors that include our own unexpected error handler in the stack.\n\t\t\tif (isSigPipeError(err) && err.stack && /unexpectedErrorHandler/.test(err.stack)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\thandler(err);\n\t\t});\n\t}\n\n\tconst unloggedErrors: any[] = [];\n\tinitUnexpectedErrorHandler((error: any) => {\n\t\tunloggedErrors.push(error);\n\t\tconsole.error(error);\n\t});\n\tlet didLogAboutSIGPIPE = false;\n\tprocess.on('SIGPIPE', () => {\n\t\t// See https://github.com/microsoft/vscode-remote-release/issues/6543\n\t\t// We would normally install a SIGPIPE listener in bootstrap.js\n\t\t// But in certain situations, the console itself can be in a broken pipe state\n\t\t// so logging SIGPIPE to the console will cause an infinite async loop\n\t\tif (!didLogAboutSIGPIPE) {\n\t\t\tdidLogAboutSIGPIPE = true;\n\t\t\tonUnexpectedError(new Error(`Unexpected SIGPIPE`));\n\t\t}\n\t});\n\n\tconst disposables = new DisposableStore();\n\tconst { socketServer, instantiationService } = await setupServerServices(connectionToken, args, REMOTE_DATA_FOLDER, disposables);\n\n\t// Set the unexpected error handler after the services have been initialized, to avoid having\n\t// the telemetry service overwrite our handler\n\tinstantiationService.invokeFunction((accessor) => {\n\t\tconst logService = accessor.get(ILogService);\n\t\tunloggedErrors.forEach(error => logService.error(error));\n\t\tunloggedErrors.length = 0;\n\n\t\tinitUnexpectedErrorHandler((error: any) => logService.error(error));\n\t});\n\n\t// On Windows, configure the UNC allow list based on settings\n\tinstantiationService.invokeFunction((accessor) => {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tif (platform.isWindows) {\n\t\t\tif (configurationService.getValue('security.restrictUNCAccess') === false) {\n\t\t\t\tdisableUNCAccessRestrictions();\n\t\t\t} else {\n\t\t\t\taddUNCHostToAllowlist(configurationService.getValue('security.allowedUNCHosts'));\n\t\t\t}\n\t\t}\n\t});\n\n\t//\n\t// On Windows, exit early with warning message to users about potential security issue\n\t// if there is node_modules folder under home drive or Users folder.\n\t//\n\tinstantiationService.invokeFunction((accessor) => {\n\t\tconst logService = accessor.get(ILogService);\n\n\t\tif (platform.isWindows && process.env.HOMEDRIVE && process.env.HOMEPATH) {\n\t\t\tconst homeDirModulesPath = join(process.env.HOMEDRIVE, 'node_modules');\n\t\t\tconst userDir = dirname(join(process.env.HOMEDRIVE, process.env.HOMEPATH));\n\t\t\tconst userDirModulesPath = join(userDir, 'node_modules');\n\t\t\tif (fs.existsSync(homeDirModulesPath) || fs.existsSync(userDirModulesPath)) {\n\t\t\t\tconst message = `\n\n*\n* !!!! Server terminated due to presence of CVE-2020-1416 !!!!\n*\n* Please remove the following directories and re-try\n* ${homeDirModulesPath}\n* ${userDirModulesPath}\n*\n* For more information on the vulnerability https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-1416\n*\n\n`;\n\t\t\t\tlogService.warn(message);\n\t\t\t\tconsole.warn(message);\n\t\t\t\tprocess.exit(0);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst vsdaMod = instantiationService.invokeFunction((accessor) => {\n\t\tconst logService = accessor.get(ILogService);\n\t\tconst hasVSDA = fs.existsSync(join(FileAccess.asFileUri('').fsPath, '../node_modules/vsda'));\n\t\tif (hasVSDA) {\n\t\t\ttry {\n\t\t\t\treturn <typeof vsda>globalThis._VSCODE_NODE_MODULES['vsda'];\n\t\t\t} catch (err) {\n\t\t\t\tlogService.error(err);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t});\n\n\tconst hasWebClient = fs.existsSync(FileAccess.asFileUri('vs/code/browser/workbench/workbench.html').fsPath);\n\n\tif (hasWebClient && address && typeof address !== 'string') {\n\t\t// ships the web ui!\n\t\tconst queryPart = (connectionToken.type !== ServerConnectionTokenType.None ? `?${connectionTokenQueryName}=${connectionToken.value}` : '');\n\t\tconsole.log(`Web UI available at http://localhost${address.port === 80 ? '' : `:${address.port}`}/${queryPart}`);\n\t}\n\n\tconst remoteExtensionHostAgentServer = instantiationService.createInstance(RemoteExtensionHostAgentServer, socketServer, connectionToken, vsdaMod, hasWebClient);\n\n\tperf.mark('code/server/ready');\n\tconst currentTime = performance.now();\n\tconst vscodeServerStartTime: number = (<any>global).vscodeServerStartTime;\n\tconst vscodeServerListenTime: number = (<any>global).vscodeServerListenTime;\n\tconst vscodeServerCodeLoadedTime: number = (<any>global).vscodeServerCodeLoadedTime;\n\n\tinstantiationService.invokeFunction(async (accessor) => {\n\t\tconst telemetryService = accessor.get(ITelemetryService);\n\n\t\ttype ServerStartClassification = {\n\t\t\towner: 'alexdima';\n\t\t\tcomment: 'The server has started up';\n\t\t\tstartTime: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The time the server started at.' };\n\t\t\tstartedTime: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The time the server began listening for connections.' };\n\t\t\tcodeLoadedTime: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The time which the code loaded on the server' };\n\t\t\treadyTime: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The time when the server was completely ready' };\n\t\t};\n\t\ttype ServerStartEvent = {\n\t\t\tstartTime: number;\n\t\t\tstartedTime: number;\n\t\t\tcodeLoadedTime: number;\n\t\t\treadyTime: number;\n\t\t};\n\t\ttelemetryService.publicLog2<ServerStartEvent, ServerStartClassification>('serverStart', {\n\t\t\tstartTime: vscodeServerStartTime,\n\t\t\tstartedTime: vscodeServerListenTime,\n\t\t\tcodeLoadedTime: vscodeServerCodeLoadedTime,\n\t\t\treadyTime: currentTime\n\t\t});\n\n\t\tif (platform.isLinux) {\n\t\t\tconst logService = accessor.get(ILogService);\n\t\t\tconst releaseInfo = await getOSReleaseInfo(logService.error.bind(logService));\n\t\t\tif (releaseInfo) {\n\t\t\t\ttype ServerPlatformInfoClassification = {\n\t\t\t\t\tplatformId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'A string identifying the operating system without any version information.' };\n\t\t\t\t\tplatformVersionId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'A string identifying the operating system version excluding any name information or release code.' };\n\t\t\t\t\tplatformIdLike: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'A string identifying the operating system the current OS derivate is closely related to.' };\n\t\t\t\t\towner: 'deepak1556';\n\t\t\t\t\tcomment: 'Provides insight into the distro information on Linux.';\n\t\t\t\t};\n\t\t\t\ttype ServerPlatformInfoEvent = {\n\t\t\t\t\tplatformId: string;\n\t\t\t\t\tplatformVersionId: string | undefined;\n\t\t\t\t\tplatformIdLike: string | undefined;\n\t\t\t\t};\n\t\t\t\ttelemetryService.publicLog2<ServerPlatformInfoEvent, ServerPlatformInfoClassification>('serverPlatformInfo', {\n\t\t\t\t\tplatformId: releaseInfo.id,\n\t\t\t\t\tplatformVersionId: releaseInfo.version_id,\n\t\t\t\t\tplatformIdLike: releaseInfo.id_like\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tif (args['print-startup-performance']) {\n\t\tconst stats = LoaderStats.get();\n\t\tlet output = '';\n\t\toutput += '\\n\\n### Load AMD-module\\n';\n\t\toutput += LoaderStats.toMarkdownTable(['Module', 'Duration'], stats.amdLoad);\n\t\toutput += '\\n\\n### Load commonjs-module\\n';\n\t\toutput += LoaderStats.toMarkdownTable(['Module', 'Duration'], stats.nodeRequire);\n\t\toutput += '\\n\\n### Invoke AMD-module factory\\n';\n\t\toutput += LoaderStats.toMarkdownTable(['Module', 'Duration'], stats.amdInvoke);\n\t\toutput += '\\n\\n### Invoke commonjs-module\\n';\n\t\toutput += LoaderStats.toMarkdownTable(['Module', 'Duration'], stats.nodeEval);\n\t\toutput += `Start-up time: ${vscodeServerListenTime - vscodeServerStartTime}\\n`;\n\t\toutput += `Code loading time: ${vscodeServerCodeLoadedTime - vscodeServerStartTime}\\n`;\n\t\toutput += `Initialized time: ${currentTime - vscodeServerStartTime}\\n`;\n\t\toutput += `\\n`;\n\t\tconsole.log(output);\n\t}\n\treturn remoteExtensionHostAgentServer;\n}\n\nclass WebEndpointOriginChecker {\n\n\tpublic static create(productService: IProductService): WebEndpointOriginChecker {\n\t\tconst webEndpointUrlTemplate = productService.webEndpointUrlTemplate;\n\t\tconst commit = productService.commit;\n\t\tconst quality = productService.quality;\n\t\tif (!webEndpointUrlTemplate || !commit || !quality) {\n\t\t\treturn new WebEndpointOriginChecker(null);\n\t\t}\n\n\t\tconst uuid = generateUuid();\n\t\tconst exampleUrl = new URL(\n\t\t\twebEndpointUrlTemplate\n\t\t\t\t.replace('{{uuid}}', uuid)\n\t\t\t\t.replace('{{commit}}', commit)\n\t\t\t\t.replace('{{quality}}', quality)\n\t\t);\n\t\tconst exampleOrigin = exampleUrl.origin;\n\t\tconst originRegExpSource = (\n\t\t\tescapeRegExpCharacters(exampleOrigin)\n\t\t\t\t.replace(uuid, '[a-zA-Z0-9\\\\-]+')\n\t\t);\n\t\ttry {\n\t\t\tconst originRegExp = createRegExp(`^${originRegExpSource}$`, true, { matchCase: false });\n\t\t\treturn new WebEndpointOriginChecker(originRegExp);\n\t\t} catch (err) {\n\t\t\treturn new WebEndpointOriginChecker(null);\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprivate readonly _originRegExp: RegExp | null\n\t) { }\n\n\tpublic matches(origin: string): boolean {\n\t\tif (!this._originRegExp) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._originRegExp.test(origin);\n\t}\n}\n"]}