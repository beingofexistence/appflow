{"version":3,"sources":["file:///workspace/appflow/src/vs/server/node/remoteTerminalChannel.ts"],"names":[],"mappings":"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","file":"remoteTerminalChannel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IURITransformer } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createRandomIPCHandle } from 'vs/base/parts/ipc/node/ipc.net';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IPtyHostService, IShellLaunchConfig, ITerminalProfile } from 'vs/platform/terminal/common/terminal';\nimport { IGetTerminalLayoutInfoArgs, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createURITransformer } from 'vs/workbench/api/node/uriTransformer';\nimport { CLIServerBase, ICommandsExecuter } from 'vs/workbench/api/node/extHostCLIServer';\nimport { IEnvironmentVariableCollection } from 'vs/platform/terminal/common/environmentVariable';\nimport { MergedEnvironmentVariableCollection } from 'vs/platform/terminal/common/environmentVariableCollection';\nimport { deserializeEnvironmentDescriptionMap, deserializeEnvironmentVariableCollection } from 'vs/platform/terminal/common/environmentVariableShared';\nimport { ICreateTerminalProcessArguments, ICreateTerminalProcessResult, IWorkspaceFolderData, RemoteTerminalChannelEvent, RemoteTerminalChannelRequest } from 'vs/workbench/contrib/terminal/common/remote/terminal';\nimport * as terminalEnvironment from 'vs/workbench/contrib/terminal/common/terminalEnvironment';\nimport { AbstractVariableResolverService } from 'vs/workbench/services/configurationResolver/common/variableResolver';\nimport { buildUserEnvironment } from 'vs/server/node/extensionHostConnection';\nimport { IServerEnvironmentService } from 'vs/server/node/serverEnvironmentService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nclass CustomVariableResolver extends AbstractVariableResolverService {\n\tconstructor(\n\t\tenv: platform.IProcessEnvironment,\n\t\tworkspaceFolders: IWorkspaceFolder[],\n\t\tactiveFileResource: URI | undefined,\n\t\tresolvedVariables: { [name: string]: string },\n\t\textensionService: IExtensionManagementService,\n\t) {\n\t\tsuper({\n\t\t\tgetFolderUri: (folderName: string): URI | undefined => {\n\t\t\t\tconst found = workspaceFolders.filter(f => f.name === folderName);\n\t\t\t\tif (found && found.length > 0) {\n\t\t\t\t\treturn found[0].uri;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\treturn workspaceFolders.length;\n\t\t\t},\n\t\t\tgetConfigurationValue: (folderUri: URI, section: string): string | undefined => {\n\t\t\t\treturn resolvedVariables[`config:${section}`];\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\treturn env['VSCODE_EXEC_PATH'];\n\t\t\t},\n\t\t\tgetAppRoot: (): string | undefined => {\n\t\t\t\treturn env['VSCODE_CWD'];\n\t\t\t},\n\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\tif (activeFileResource) {\n\t\t\t\t\treturn path.normalize(activeFileResource.fsPath);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\treturn resolvedVariables['selectedText'];\n\t\t\t},\n\t\t\tgetLineNumber: (): string | undefined => {\n\t\t\t\treturn resolvedVariables['lineNumber'];\n\t\t\t},\n\t\t\tgetExtension: async id => {\n\t\t\t\tconst installed = await extensionService.getInstalled();\n\t\t\t\tconst found = installed.find(e => e.identifier.id === id);\n\t\t\t\treturn found && { extensionLocation: found.location };\n\t\t\t},\n\t\t}, undefined, Promise.resolve(os.homedir()), Promise.resolve(env));\n\t}\n}\n\nexport class RemoteTerminalChannel extends Disposable implements IServerChannel<RemoteAgentConnectionContext> {\n\n\tprivate _lastReqId = 0;\n\tprivate readonly _pendingCommands = new Map<number, {\n\t\tresolve: (data: any) => void;\n\t\treject: (err: any) => void;\n\t\turiTransformer: IURITransformer;\n\t}>();\n\n\tprivate readonly _onExecuteCommand = this._register(new Emitter<{ reqId: number; persistentProcessId: number; commandId: string; commandArgs: any[] }>());\n\treadonly onExecuteCommand = this._onExecuteCommand.event;\n\n\tconstructor(\n\t\tprivate readonly _environmentService: IServerEnvironmentService,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _ptyHostService: IPtyHostService,\n\t\tprivate readonly _productService: IProductService,\n\t\tprivate readonly _extensionManagementService: IExtensionManagementService,\n\t\tprivate readonly _configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync call(ctx: RemoteAgentConnectionContext, command: RemoteTerminalChannelRequest, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase RemoteTerminalChannelRequest.RestartPtyHost: return this._ptyHostService.restartPtyHost.apply(this._ptyHostService, args);\n\n\t\t\tcase RemoteTerminalChannelRequest.CreateProcess: {\n\t\t\t\tconst uriTransformer = createURITransformer(ctx.remoteAuthority);\n\t\t\t\treturn this._createProcess(uriTransformer, <ICreateTerminalProcessArguments>args);\n\t\t\t}\n\t\t\tcase RemoteTerminalChannelRequest.AttachToProcess: return this._ptyHostService.attachToProcess.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.DetachFromProcess: return this._ptyHostService.detachFromProcess.apply(this._ptyHostService, args);\n\n\t\t\tcase RemoteTerminalChannelRequest.ListProcesses: return this._ptyHostService.listProcesses.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetLatency: return this._ptyHostService.getLatency.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetPerformanceMarks: return this._ptyHostService.getPerformanceMarks.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.OrphanQuestionReply: return this._ptyHostService.orphanQuestionReply.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.AcceptPtyHostResolvedVariables: return this._ptyHostService.acceptPtyHostResolvedVariables.apply(this._ptyHostService, args);\n\n\t\t\tcase RemoteTerminalChannelRequest.Start: return this._ptyHostService.start.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.Input: return this._ptyHostService.input.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.AcknowledgeDataEvent: return this._ptyHostService.acknowledgeDataEvent.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.Shutdown: return this._ptyHostService.shutdown.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.Resize: return this._ptyHostService.resize.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.ClearBuffer: return this._ptyHostService.clearBuffer.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetInitialCwd: return this._ptyHostService.getInitialCwd.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetCwd: return this._ptyHostService.getCwd.apply(this._ptyHostService, args);\n\n\t\t\tcase RemoteTerminalChannelRequest.ProcessBinary: return this._ptyHostService.processBinary.apply(this._ptyHostService, args);\n\n\t\t\tcase RemoteTerminalChannelRequest.SendCommandResult: return this._sendCommandResult(args[0], args[1], args[2]);\n\t\t\tcase RemoteTerminalChannelRequest.InstallAutoReply: return this._ptyHostService.installAutoReply.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.UninstallAllAutoReplies: return this._ptyHostService.uninstallAllAutoReplies.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetDefaultSystemShell: return this._getDefaultSystemShell.apply(this, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetProfiles: return this._getProfiles.apply(this, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetEnvironment: return this._getEnvironment();\n\t\t\tcase RemoteTerminalChannelRequest.GetWslPath: return this._getWslPath(args[0], args[1]);\n\t\t\tcase RemoteTerminalChannelRequest.GetTerminalLayoutInfo: return this._ptyHostService.getTerminalLayoutInfo(<IGetTerminalLayoutInfoArgs>args);\n\t\t\tcase RemoteTerminalChannelRequest.SetTerminalLayoutInfo: return this._ptyHostService.setTerminalLayoutInfo(<ISetTerminalLayoutInfoArgs>args);\n\t\t\tcase RemoteTerminalChannelRequest.SerializeTerminalState: return this._ptyHostService.serializeTerminalState.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.ReviveTerminalProcesses: return this._ptyHostService.reviveTerminalProcesses.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetRevivedPtyNewId: return this._ptyHostService.getRevivedPtyNewId.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.SetUnicodeVersion: return this._ptyHostService.setUnicodeVersion.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.ReduceConnectionGraceTime: return this._reduceConnectionGraceTime();\n\t\t\tcase RemoteTerminalChannelRequest.UpdateIcon: return this._ptyHostService.updateIcon.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.UpdateTitle: return this._ptyHostService.updateTitle.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.UpdateProperty: return this._ptyHostService.updateProperty.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.RefreshProperty: return this._ptyHostService.refreshProperty.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.RequestDetachInstance: return this._ptyHostService.requestDetachInstance(args[0], args[1]);\n\t\t\tcase RemoteTerminalChannelRequest.AcceptDetachedInstance: return this._ptyHostService.acceptDetachInstanceReply(args[0], args[1]);\n\t\t\tcase RemoteTerminalChannelRequest.FreePortKillProcess: return this._ptyHostService.freePortKillProcess.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.AcceptDetachInstanceReply: return this._ptyHostService.acceptDetachInstanceReply.apply(this._ptyHostService, args);\n\t\t}\n\n\t\t// @ts-expect-error Assert command is the `never` type to ensure all messages are handled\n\t\tthrow new Error(`IPC Command ${command} not found`);\n\t}\n\n\tlisten(_: any, event: RemoteTerminalChannelEvent, arg: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase RemoteTerminalChannelEvent.OnPtyHostExitEvent: return this._ptyHostService.onPtyHostExit || Event.None;\n\t\t\tcase RemoteTerminalChannelEvent.OnPtyHostStartEvent: return this._ptyHostService.onPtyHostStart || Event.None;\n\t\t\tcase RemoteTerminalChannelEvent.OnPtyHostUnresponsiveEvent: return this._ptyHostService.onPtyHostUnresponsive || Event.None;\n\t\t\tcase RemoteTerminalChannelEvent.OnPtyHostResponsiveEvent: return this._ptyHostService.onPtyHostResponsive || Event.None;\n\t\t\tcase RemoteTerminalChannelEvent.OnPtyHostRequestResolveVariablesEvent: return this._ptyHostService.onPtyHostRequestResolveVariables || Event.None;\n\t\t\tcase RemoteTerminalChannelEvent.OnProcessDataEvent: return this._ptyHostService.onProcessData;\n\t\t\tcase RemoteTerminalChannelEvent.OnProcessReadyEvent: return this._ptyHostService.onProcessReady;\n\t\t\tcase RemoteTerminalChannelEvent.OnProcessExitEvent: return this._ptyHostService.onProcessExit;\n\t\t\tcase RemoteTerminalChannelEvent.OnProcessReplayEvent: return this._ptyHostService.onProcessReplay;\n\t\t\tcase RemoteTerminalChannelEvent.OnProcessOrphanQuestion: return this._ptyHostService.onProcessOrphanQuestion;\n\t\t\tcase RemoteTerminalChannelEvent.OnExecuteCommand: return this.onExecuteCommand;\n\t\t\tcase RemoteTerminalChannelEvent.OnDidRequestDetach: return this._ptyHostService.onDidRequestDetach || Event.None;\n\t\t\tcase RemoteTerminalChannelEvent.OnDidChangeProperty: return this._ptyHostService.onDidChangeProperty;\n\t\t}\n\n\t\t// @ts-expect-error Assert event is the `never` type to ensure all messages are handled\n\t\tthrow new Error(`IPC Command ${event} not found`);\n\t}\n\n\tprivate async _createProcess(uriTransformer: IURITransformer, args: ICreateTerminalProcessArguments): Promise<ICreateTerminalProcessResult> {\n\t\tconst shellLaunchConfig: IShellLaunchConfig = {\n\t\t\tname: args.shellLaunchConfig.name,\n\t\t\texecutable: args.shellLaunchConfig.executable,\n\t\t\targs: args.shellLaunchConfig.args,\n\t\t\tcwd: (\n\t\t\t\ttypeof args.shellLaunchConfig.cwd === 'string' || typeof args.shellLaunchConfig.cwd === 'undefined'\n\t\t\t\t\t? args.shellLaunchConfig.cwd\n\t\t\t\t\t: URI.revive(uriTransformer.transformIncoming(args.shellLaunchConfig.cwd))\n\t\t\t),\n\t\t\tenv: args.shellLaunchConfig.env,\n\t\t\tuseShellEnvironment: args.shellLaunchConfig.useShellEnvironment,\n\t\t\treconnectionProperties: args.shellLaunchConfig.reconnectionProperties,\n\t\t\ttype: args.shellLaunchConfig.type,\n\t\t\tisFeatureTerminal: args.shellLaunchConfig.isFeatureTerminal\n\t\t};\n\n\n\t\tconst baseEnv = await buildUserEnvironment(args.resolverEnv, !!args.shellLaunchConfig.useShellEnvironment, platform.language, this._environmentService, this._logService, this._configurationService);\n\t\tthis._logService.trace('baseEnv', baseEnv);\n\n\t\tconst reviveWorkspaceFolder = (workspaceData: IWorkspaceFolderData): IWorkspaceFolder => {\n\t\t\treturn {\n\t\t\t\turi: URI.revive(uriTransformer.transformIncoming(workspaceData.uri)),\n\t\t\t\tname: workspaceData.name,\n\t\t\t\tindex: workspaceData.index,\n\t\t\t\ttoResource: () => {\n\t\t\t\t\tthrow new Error('Not implemented');\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tconst workspaceFolders = args.workspaceFolders.map(reviveWorkspaceFolder);\n\t\tconst activeWorkspaceFolder = args.activeWorkspaceFolder ? reviveWorkspaceFolder(args.activeWorkspaceFolder) : undefined;\n\t\tconst activeFileResource = args.activeFileResource ? URI.revive(uriTransformer.transformIncoming(args.activeFileResource)) : undefined;\n\t\tconst customVariableResolver = new CustomVariableResolver(baseEnv, workspaceFolders, activeFileResource, args.resolvedVariables, this._extensionManagementService);\n\t\tconst variableResolver = terminalEnvironment.createVariableResolver(activeWorkspaceFolder, process.env, customVariableResolver);\n\n\t\t// Get the initial cwd\n\t\tconst initialCwd = await terminalEnvironment.getCwd(shellLaunchConfig, os.homedir(), variableResolver, activeWorkspaceFolder?.uri, args.configuration['terminal.integrated.cwd'], this._logService);\n\t\tshellLaunchConfig.cwd = initialCwd;\n\n\t\tconst envPlatformKey = platform.isWindows ? 'terminal.integrated.env.windows' : (platform.isMacintosh ? 'terminal.integrated.env.osx' : 'terminal.integrated.env.linux');\n\t\tconst envFromConfig = args.configuration[envPlatformKey];\n\t\tconst env = await terminalEnvironment.createTerminalEnvironment(\n\t\t\tshellLaunchConfig,\n\t\t\tenvFromConfig,\n\t\t\tvariableResolver,\n\t\t\tthis._productService.version,\n\t\t\targs.configuration['terminal.integrated.detectLocale'],\n\t\t\tbaseEnv\n\t\t);\n\n\t\t// Apply extension environment variable collections to the environment\n\t\tif (!shellLaunchConfig.strictEnv) {\n\t\t\tconst entries: [string, IEnvironmentVariableCollection][] = [];\n\t\t\tfor (const [k, v, d] of args.envVariableCollections) {\n\t\t\t\tentries.push([k, { map: deserializeEnvironmentVariableCollection(v), descriptionMap: deserializeEnvironmentDescriptionMap(d) }]);\n\t\t\t}\n\t\t\tconst envVariableCollections = new Map<string, IEnvironmentVariableCollection>(entries);\n\t\t\tconst mergedCollection = new MergedEnvironmentVariableCollection(envVariableCollections);\n\t\t\tconst workspaceFolder = activeWorkspaceFolder ? activeWorkspaceFolder ?? undefined : undefined;\n\t\t\tawait mergedCollection.applyToProcessEnvironment(env, { workspaceFolder }, variableResolver);\n\t\t}\n\n\t\t// Fork the process and listen for messages\n\t\tthis._logService.debug(`Terminal process launching on remote agent`, { shellLaunchConfig, initialCwd, cols: args.cols, rows: args.rows, env });\n\n\t\t// Setup the CLI server to support forwarding commands run from the CLI\n\t\tconst ipcHandlePath = createRandomIPCHandle();\n\t\tenv.VSCODE_IPC_HOOK_CLI = ipcHandlePath;\n\n\t\tconst persistentProcessId = await this._ptyHostService.createProcess(shellLaunchConfig, initialCwd, args.cols, args.rows, args.unicodeVersion, env, baseEnv, args.options, args.shouldPersistTerminal, args.workspaceId, args.workspaceName);\n\t\tconst commandsExecuter: ICommandsExecuter = {\n\t\t\texecuteCommand: <T>(id: string, ...args: any[]): Promise<T> => this._executeCommand(persistentProcessId, id, args, uriTransformer)\n\t\t};\n\t\tconst cliServer = new CLIServerBase(commandsExecuter, this._logService, ipcHandlePath);\n\t\tthis._ptyHostService.onProcessExit(e => e.id === persistentProcessId && cliServer.dispose());\n\n\t\treturn {\n\t\t\tpersistentTerminalId: persistentProcessId,\n\t\t\tresolvedShellLaunchConfig: shellLaunchConfig\n\t\t};\n\t}\n\n\tprivate _executeCommand<T>(persistentProcessId: number, commandId: string, commandArgs: any[], uriTransformer: IURITransformer): Promise<T> {\n\t\tlet resolve!: (data: any) => void;\n\t\tlet reject!: (err: any) => void;\n\t\tconst result = new Promise<T>((_resolve, _reject) => {\n\t\t\tresolve = _resolve;\n\t\t\treject = _reject;\n\t\t});\n\n\t\tconst reqId = ++this._lastReqId;\n\t\tthis._pendingCommands.set(reqId, { resolve, reject, uriTransformer });\n\n\t\tconst serializedCommandArgs = cloneAndChange(commandArgs, (obj) => {\n\t\t\tif (obj && obj.$mid === 1) {\n\t\t\t\t// this is UriComponents\n\t\t\t\treturn uriTransformer.transformOutgoing(obj);\n\t\t\t}\n\t\t\tif (obj && obj instanceof URI) {\n\t\t\t\treturn uriTransformer.transformOutgoingURI(obj);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t\tthis._onExecuteCommand.fire({\n\t\t\treqId,\n\t\t\tpersistentProcessId,\n\t\t\tcommandId,\n\t\t\tcommandArgs: serializedCommandArgs\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate _sendCommandResult(reqId: number, isError: boolean, serializedPayload: any): void {\n\t\tconst data = this._pendingCommands.get(reqId);\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingCommands.delete(reqId);\n\t\tconst payload = cloneAndChange(serializedPayload, (obj) => {\n\t\t\tif (obj && obj.$mid === 1) {\n\t\t\t\t// this is UriComponents\n\t\t\t\treturn data.uriTransformer.transformIncoming(obj);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t\tif (isError) {\n\t\t\tdata.reject(payload);\n\t\t} else {\n\t\t\tdata.resolve(payload);\n\t\t}\n\t}\n\n\tprivate _getDefaultSystemShell(osOverride?: platform.OperatingSystem): Promise<string> {\n\t\treturn this._ptyHostService.getDefaultSystemShell(osOverride);\n\t}\n\n\tprivate async _getProfiles(workspaceId: string, profiles: unknown, defaultProfile: unknown, includeDetectedProfiles?: boolean): Promise<ITerminalProfile[]> {\n\t\treturn this._ptyHostService.getProfiles(workspaceId, profiles, defaultProfile, includeDetectedProfiles) || [];\n\t}\n\n\tprivate _getEnvironment(): platform.IProcessEnvironment {\n\t\treturn { ...process.env };\n\t}\n\n\tprivate _getWslPath(original: string, direction: 'unix-to-win' | 'win-to-unix'): Promise<string> {\n\t\treturn this._ptyHostService.getWslPath(original, direction);\n\t}\n\n\n\tprivate _reduceConnectionGraceTime(): Promise<void> {\n\t\treturn this._ptyHostService.reduceConnectionGraceTime();\n\t}\n}\n"]}