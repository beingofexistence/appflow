{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/worker/extHost.worker.services.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAUhG,4EAA4E;IAC5E,4EAA4E;IAC5E,4EAA4E;IAC5E,4EAA4E;IAC5E,4EAA4E;IAE5E,IAAA,gBAAG,EAAe,SAAG,EAAU,IAAI,iBAAG,CAAY,wBAAI,EAAe,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACpF,IAAA,gBAAG,EAAe,8BAAI,EAAsB,8BAAI,kCAA6C,CAAC;IAC9F,IAAA,gBAAG,EAAe,0BAAI,EAAoB,0BAAI,kCAA2C,CAAC","file":"extHost.worker.services.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtHostExtensionService } from 'vs/workbench/api/common/extHostExtensionService';\nimport { ExtHostLogService } from 'vs/workbench/api/common/extHostLogService';\nimport { ExtensionStoragePaths, IExtensionStoragePaths } from 'vs/workbench/api/common/extHostStoragePaths';\nimport { ExtHostExtensionService } from 'vs/workbench/api/worker/extHostExtensionService';\n\n// #########################################################################\n// ###                                                                   ###\n// ### !!! PLEASE ADD COMMON IMPORTS INTO extHost.common.services.ts !!! ###\n// ###                                                                   ###\n// #########################################################################\n\nregisterSingleton(ILogService, new SyncDescriptor(ExtHostLogService, [true], true));\nregisterSingleton(IExtHostExtensionService, ExtHostExtensionService, InstantiationType.Eager);\nregisterSingleton(IExtensionStoragePaths, ExtensionStoragePaths, InstantiationType.Eager);\n"]}