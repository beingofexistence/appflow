{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadInlineChat.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAYzF,IAAM,IAAI,GAAV,MAAM,IAAI;QAOhB,YACC,cAA+B,EACX,CAAwC,EACvC,CAAsC;YADtB,MAAC,GAAD,CAAC,CAAsB;YACtB,MAAC,GAAD,CAAC,CAAoB;YAR3C,MAAC,GAAgB,IAAI,eAAG,EAAoB,CAAC;YAG7C,MAAC,GAAa,IAAI,GAAG,EAA0B,CAAC;YAOhE,IAAI,CAAC,CAAC,GAAQ,cAAc,CAAC,QAAQ,CAAC,sBAAG,CAAY,iBAAiB,CAAC,CAAC;QACzE,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAc,OAAO,EAAE,CAAC;QAC/B,CAAC;QAED,KAAK,CAAC,kCAAkC,CAAC,MAAc,EAAE,KAAa,EAAE,SAAiB,EAAE,gBAAyB;YACnH,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAkB,WAAW,CAAC;gBACjD,SAAS;gBACT,KAAK;gBACL,wBAAwB,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;oBACvD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,CAAC,CAAM,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBACnF,IAAI,CAAC,OAAO,EAAE;wBACb,OAAO,SAAS,CAAC;qBACjB;oBACD,OAAO;wBACN,GAAG,OAAO;wBACV,OAAO,EAAE,GAAG,EAAE;4BACb,IAAI,CAAC,CAAC,CAAM,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;wBACjD,CAAC;qBACD,CAAC;gBACH,CAAC;gBACD,eAAe,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE;oBACzD,IAAI,CAAC,CAAC,CAAW,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;oBAClD,IAAI;wBACH,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC,CAAM,gBAAgB,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;wBAChF,IAAI,MAAM,EAAE,IAAI,KAAK,UAAU,EAAE;4BACF,MAAO,CAAC,KAAK,GAAG,IAAA,0BAAI,EAAmB,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAgB,CAAC;yBAC1G;wBACD,OAAwC,MAAM,CAAC;qBAC/C;4BAAS;wBACT,IAAI,CAAC,CAAC,CAAW,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;qBAC3C;gBACF,CAAC;gBACD,gCAAgC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;oBACnG,IAAI,CAAC,CAAC,CAAM,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;gBACpE,CAAC;aACD,CAAC,CAAC;YAEH,IAAI,CAAC,CAAC,CAAc,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACxC,CAAC;QAED,KAAK,CAAC,oBAAoB,CAAC,SAAiB,EAAE,KAAuE;YACpH,IAAI,CAAC,CAAC,CAAW,GAAG,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;QAChD,CAAC;QAED,KAAK,CAAC,oCAAoC,CAAC,MAAc;YACxD,IAAI,CAAC,CAAC,CAAc,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC9C,CAAC;KACD,CAAA;IA9DY,oBAAI;mBAAJ,IAAI;QADhB,IAAA,uBAAI,EAAiB,sBAAG,CAAS,oBAAoB,CAAC;QAUpD,WAAA,gBAAG,CAAA;QACH,WAAA,iBAAG,CAAA;OAVO,IAAI,CA8DhB","file":"mainThreadInlineChat.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableMap } from 'vs/base/common/lifecycle';\nimport { IInlineChatBulkEditResponse, IInlineChatResponse, IInlineChatService } from 'vs/workbench/contrib/inlineChat/common/inlineChat';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { reviveWorkspaceEditDto } from 'vs/workbench/api/browser/mainThreadBulkEdits';\nimport { ExtHostContext, ExtHostInlineChatShape, MainContext, MainThreadInlineChatShape as MainThreadInlineChatShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { IExtHostContext, extHostNamedCustomer } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { TextEdit } from 'vs/editor/common/languages';\nimport { IProgress } from 'vs/platform/progress/common/progress';\n\n@extHostNamedCustomer(MainContext.MainThreadInlineChat)\nexport class MainThreadInlineChat implements MainThreadInlineChatShape {\n\n\tprivate readonly _registrations = new DisposableMap<number>();\n\tprivate readonly _proxy: ExtHostInlineChatShape;\n\n\tprivate readonly _progresses = new Map<string, IProgress<any>>();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IInlineChatService private readonly _inlineChatService: IInlineChatService,\n\t\t@IUriIdentityService private readonly _uriIdentService: IUriIdentityService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostInlineChat);\n\t}\n\n\tdispose(): void {\n\t\tthis._registrations.dispose();\n\t}\n\n\tasync $registerInteractiveEditorProvider(handle: number, label: string, debugName: string, supportsFeedback: boolean): Promise<void> {\n\t\tconst unreg = this._inlineChatService.addProvider({\n\t\t\tdebugName,\n\t\t\tlabel,\n\t\t\tprepareInlineChatSession: async (model, range, token) => {\n\t\t\t\tconst session = await this._proxy.$prepareSession(handle, model.uri, range, token);\n\t\t\t\tif (!session) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...session,\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tthis._proxy.$releaseSession(handle, session.id);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tprovideResponse: async (item, request, progress, token) => {\n\t\t\t\tthis._progresses.set(request.requestId, progress);\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await this._proxy.$provideResponse(handle, item, request, token);\n\t\t\t\t\tif (result?.type === 'bulkEdit') {\n\t\t\t\t\t\t(<IInlineChatBulkEditResponse>result).edits = reviveWorkspaceEditDto(result.edits, this._uriIdentService);\n\t\t\t\t\t}\n\t\t\t\t\treturn <IInlineChatResponse | undefined>result;\n\t\t\t\t} finally {\n\t\t\t\t\tthis._progresses.delete(request.requestId);\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleInlineChatResponseFeedback: !supportsFeedback ? undefined : async (session, response, kind) => {\n\t\t\t\tthis._proxy.$handleFeedback(handle, session.id, response.id, kind);\n\t\t\t}\n\t\t});\n\n\t\tthis._registrations.set(handle, unreg);\n\t}\n\n\tasync $handleProgressChunk(requestId: string, chunk: { message?: string | undefined; edits?: TextEdit[] | undefined }): Promise<void> {\n\t\tthis._progresses.get(requestId)?.report(chunk);\n\t}\n\n\tasync $unregisterInteractiveEditorProvider(handle: number): Promise<void> {\n\t\tthis._registrations.deleteAndDispose(handle);\n\t}\n}\n"]}