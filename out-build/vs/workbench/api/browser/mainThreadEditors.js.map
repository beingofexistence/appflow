{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadEditors.ts"],"names":[],"mappings":"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","file":"mainThreadEditors.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalArgument } from 'vs/base/common/errors';\nimport { IDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { equals as objectEquals } from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { ISelection } from 'vs/editor/common/core/selection';\nimport { IDecorationOptions, IDecorationRenderOptions } from 'vs/editor/common/editorCommon';\nimport { ISingleEditOperation } from 'vs/editor/common/core/editOperation';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { ITextEditorOptions, IResourceEditorInput, EditorActivation, EditorResolution } from 'vs/platform/editor/common/editor';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { MainThreadTextEditor } from 'vs/workbench/api/browser/mainThreadEditor';\nimport { ExtHostContext, ExtHostEditorsShape, IApplyEditsOptions, ITextDocumentShowOptions, ITextEditorConfigurationUpdate, ITextEditorPositionData, IUndoStopOptions, MainThreadTextEditorsShape, TextEditorRevealType } from 'vs/workbench/api/common/extHost.protocol';\nimport { editorGroupToColumn, columnToEditorGroup, EditorGroupColumn } from 'vs/workbench/services/editor/common/editorGroupColumn';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IWorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IChange } from 'vs/editor/common/diff/legacyLinesDiffComputer';\nimport { IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { IEditorControl } from 'vs/workbench/common/editor';\nimport { getCodeEditor, ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { DirtyDiffContribution } from 'vs/workbench/contrib/scm/browser/dirtydiffDecorator';\n\nexport interface IMainThreadEditorLocator {\n\tgetEditor(id: string): MainThreadTextEditor | undefined;\n\tfindTextEditorIdFor(editorControl: IEditorControl): string | undefined;\n\tgetIdOfCodeEditor(codeEditor: ICodeEditor): string | undefined;\n}\n\nexport class MainThreadTextEditors implements MainThreadTextEditorsShape {\n\n\tprivate static INSTANCE_COUNT: number = 0;\n\n\tprivate readonly _instanceId: string;\n\tprivate readonly _proxy: ExtHostEditorsShape;\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate _textEditorsListenersMap: { [editorId: string]: IDisposable[] };\n\tprivate _editorPositionData: ITextEditorPositionData | null;\n\tprivate _registeredDecorationTypes: { [decorationType: string]: boolean };\n\n\tconstructor(\n\t\tprivate readonly _editorLocator: IMainThreadEditorLocator,\n\t\textHostContext: IExtHostContext,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService\n\t) {\n\t\tthis._instanceId = String(++MainThreadTextEditors.INSTANCE_COUNT);\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostEditors);\n\n\t\tthis._textEditorsListenersMap = Object.create(null);\n\t\tthis._editorPositionData = null;\n\n\t\tthis._toDispose.add(this._editorService.onDidVisibleEditorsChange(() => this._updateActiveAndVisibleTextEditors()));\n\t\tthis._toDispose.add(this._editorGroupService.onDidRemoveGroup(() => this._updateActiveAndVisibleTextEditors()));\n\t\tthis._toDispose.add(this._editorGroupService.onDidMoveGroup(() => this._updateActiveAndVisibleTextEditors()));\n\n\t\tthis._registeredDecorationTypes = Object.create(null);\n\t}\n\n\tdispose(): void {\n\t\tObject.keys(this._textEditorsListenersMap).forEach((editorId) => {\n\t\t\tdispose(this._textEditorsListenersMap[editorId]);\n\t\t});\n\t\tthis._textEditorsListenersMap = Object.create(null);\n\t\tthis._toDispose.dispose();\n\t\tfor (const decorationType in this._registeredDecorationTypes) {\n\t\t\tthis._codeEditorService.removeDecorationType(decorationType);\n\t\t}\n\t\tthis._registeredDecorationTypes = Object.create(null);\n\t}\n\n\thandleTextEditorAdded(textEditor: MainThreadTextEditor): void {\n\t\tconst id = textEditor.getId();\n\t\tconst toDispose: IDisposable[] = [];\n\t\ttoDispose.push(textEditor.onPropertiesChanged((data) => {\n\t\t\tthis._proxy.$acceptEditorPropertiesChanged(id, data);\n\t\t}));\n\n\t\tthis._textEditorsListenersMap[id] = toDispose;\n\t}\n\n\thandleTextEditorRemoved(id: string): void {\n\t\tdispose(this._textEditorsListenersMap[id]);\n\t\tdelete this._textEditorsListenersMap[id];\n\t}\n\n\tprivate _updateActiveAndVisibleTextEditors(): void {\n\n\t\t// editor columns\n\t\tconst editorPositionData = this._getTextEditorPositionData();\n\t\tif (!objectEquals(this._editorPositionData, editorPositionData)) {\n\t\t\tthis._editorPositionData = editorPositionData;\n\t\t\tthis._proxy.$acceptEditorPositionData(this._editorPositionData);\n\t\t}\n\t}\n\n\tprivate _getTextEditorPositionData(): ITextEditorPositionData {\n\t\tconst result: ITextEditorPositionData = Object.create(null);\n\t\tfor (const editorPane of this._editorService.visibleEditorPanes) {\n\t\t\tconst id = this._editorLocator.findTextEditorIdFor(editorPane);\n\t\t\tif (id) {\n\t\t\t\tresult[id] = editorGroupToColumn(this._editorGroupService, editorPane.group);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t// --- from extension host process\n\n\tasync $tryShowTextDocument(resource: UriComponents, options: ITextDocumentShowOptions): Promise<string | undefined> {\n\t\tconst uri = URI.revive(resource);\n\n\t\tconst editorOptions: ITextEditorOptions = {\n\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\tpinned: options.pinned,\n\t\t\tselection: options.selection,\n\t\t\t// preserve pre 1.38 behaviour to not make group active when preserveFocus: true\n\t\t\t// but make sure to restore the editor to fix https://github.com/microsoft/vscode/issues/79633\n\t\t\tactivation: options.preserveFocus ? EditorActivation.RESTORE : undefined,\n\t\t\toverride: EditorResolution.EXCLUSIVE_ONLY\n\t\t};\n\n\t\tconst input: IResourceEditorInput = {\n\t\t\tresource: uri,\n\t\t\toptions: editorOptions\n\t\t};\n\n\t\tconst editor = await this._editorService.openEditor(input, columnToEditorGroup(this._editorGroupService, this._configurationService, options.position));\n\t\tif (!editor) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// Composite editors are made up of many editors so we return the active one at the time of opening\n\t\tconst editorControl = editor.getControl();\n\t\tconst codeEditor = getCodeEditor(editorControl);\n\t\treturn codeEditor ? this._editorLocator.getIdOfCodeEditor(codeEditor) : undefined;\n\t}\n\n\tasync $tryShowEditor(id: string, position?: EditorGroupColumn): Promise<void> {\n\t\tconst mainThreadEditor = this._editorLocator.getEditor(id);\n\t\tif (mainThreadEditor) {\n\t\t\tconst model = mainThreadEditor.getModel();\n\t\t\tawait this._editorService.openEditor({\n\t\t\t\tresource: model.uri,\n\t\t\t\toptions: { preserveFocus: false }\n\t\t\t}, columnToEditorGroup(this._editorGroupService, this._configurationService, position));\n\t\t\treturn;\n\t\t}\n\t}\n\n\tasync $tryHideEditor(id: string): Promise<void> {\n\t\tconst mainThreadEditor = this._editorLocator.getEditor(id);\n\t\tif (mainThreadEditor) {\n\t\t\tconst editorPanes = this._editorService.visibleEditorPanes;\n\t\t\tfor (const editorPane of editorPanes) {\n\t\t\t\tif (mainThreadEditor.matches(editorPane)) {\n\t\t\t\t\tawait editorPane.group.closeEditor(editorPane.input);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$trySetSelections(id: string, selections: ISelection[]): Promise<void> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.setSelections(selections);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$trySetDecorations(id: string, key: string, ranges: IDecorationOptions[]): Promise<void> {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.setDecorations(key, ranges);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$trySetDecorationsFast(id: string, key: string, ranges: number[]): Promise<void> {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.setDecorationsFast(key, ranges);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$tryRevealRange(id: string, range: IRange, revealType: TextEditorRevealType): Promise<void> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.revealRange(range, revealType);\n\t\treturn Promise.resolve();\n\t}\n\n\t$trySetOptions(id: string, options: ITextEditorConfigurationUpdate): Promise<void> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.setConfiguration(options);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$tryApplyEdits(id: string, modelVersionId: number, edits: ISingleEditOperation[], opts: IApplyEditsOptions): Promise<boolean> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\treturn Promise.resolve(editor.applyEdits(modelVersionId, edits, opts));\n\t}\n\n\t$tryInsertSnippet(id: string, modelVersionId: number, template: string, ranges: readonly IRange[], opts: IUndoStopOptions): Promise<boolean> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\treturn Promise.resolve(editor.insertSnippet(modelVersionId, template, ranges, opts));\n\t}\n\n\t$registerTextEditorDecorationType(extensionId: ExtensionIdentifier, key: string, options: IDecorationRenderOptions): void {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tthis._registeredDecorationTypes[key] = true;\n\t\tthis._codeEditorService.registerDecorationType(`exthost-api-${extensionId}`, key, options);\n\t}\n\n\t$removeTextEditorDecorationType(key: string): void {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tdelete this._registeredDecorationTypes[key];\n\t\tthis._codeEditorService.removeDecorationType(key);\n\t}\n\n\t$getDiffInformation(id: string): Promise<IChange[]> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(new Error('No such TextEditor'));\n\t\t}\n\n\t\tconst codeEditor = editor.getCodeEditor();\n\t\tif (!codeEditor) {\n\t\t\treturn Promise.reject(new Error('No such CodeEditor'));\n\t\t}\n\n\t\tconst codeEditorId = codeEditor.getId();\n\t\tconst diffEditors = this._codeEditorService.listDiffEditors();\n\t\tconst [diffEditor] = diffEditors.filter(d => d.getOriginalEditor().getId() === codeEditorId || d.getModifiedEditor().getId() === codeEditorId);\n\n\t\tif (diffEditor) {\n\t\t\treturn Promise.resolve(diffEditor.getLineChanges() || []);\n\t\t}\n\n\t\tconst dirtyDiffContribution = codeEditor.getContribution('editor.contrib.dirtydiff');\n\n\t\tif (dirtyDiffContribution) {\n\t\t\treturn Promise.resolve((dirtyDiffContribution as DirtyDiffContribution).getChanges());\n\t\t}\n\n\t\treturn Promise.resolve([]);\n\t}\n}\n\n// --- commands\n\nCommandsRegistry.registerCommand('_workbench.revertAllDirty', async function (accessor: ServicesAccessor) {\n\tconst environmentService = accessor.get(IEnvironmentService);\n\tif (!environmentService.extensionTestsLocationURI) {\n\t\tthrow new Error('Command is only available when running extension tests.');\n\t}\n\n\tconst workingCopyService = accessor.get(IWorkingCopyService);\n\tfor (const workingCopy of workingCopyService.dirtyWorkingCopies) {\n\t\tawait workingCopy.revert({ soft: true });\n\t}\n});\n"]}