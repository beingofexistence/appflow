{"version":3,"sources":["vs/workbench/api/browser/mainThreadCustomEditors.ts"],"names":[],"mappings":"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","file":"mainThreadCustomEditors.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { multibyteAwareBtoa } from 'vs/base/browser/dom';\nimport { CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { isCancellationError, onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableMap, DisposableStore, IReference } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename } from 'vs/base/common/path';\nimport { isEqual, isEqualOrParent, toLocalResource } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { localize } from 'vs/nls';\nimport { IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { FileOperation, IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IUndoRedoService, UndoRedoElementType } from 'vs/platform/undoRedo/common/undoRedo';\nimport { MainThreadWebviewPanels } from 'vs/workbench/api/browser/mainThreadWebviewPanels';\nimport { MainThreadWebviews, reviveWebviewExtension } from 'vs/workbench/api/browser/mainThreadWebviews';\nimport * as extHostProtocol from 'vs/workbench/api/common/extHost.protocol';\nimport { IRevertOptions, ISaveOptions } from 'vs/workbench/common/editor';\nimport { CustomEditorInput } from 'vs/workbench/contrib/customEditor/browser/customEditorInput';\nimport { CustomDocumentBackupData } from 'vs/workbench/contrib/customEditor/browser/customEditorInputFactory';\nimport { ICustomEditorModel, ICustomEditorService } from 'vs/workbench/contrib/customEditor/common/customEditor';\nimport { CustomTextEditorModel } from 'vs/workbench/contrib/customEditor/common/customTextEditorModel';\nimport { ExtensionKeyedWebviewOriginStore, WebviewExtensionDescription } from 'vs/workbench/contrib/webview/browser/webview';\nimport { WebviewInput } from 'vs/workbench/contrib/webviewPanel/browser/webviewEditorInput';\nimport { IWebviewWorkbenchService } from 'vs/workbench/contrib/webviewPanel/browser/webviewWorkbenchService';\nimport { editorGroupToColumn } from 'vs/workbench/services/editor/common/editorGroupColumn';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { ResourceWorkingCopy } from 'vs/workbench/services/workingCopy/common/resourceWorkingCopy';\nimport { IWorkingCopy, IWorkingCopyBackup, IWorkingCopySaveEvent, NO_TYPE_ID, WorkingCopyCapabilities } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { IWorkingCopyFileService, WorkingCopyFileEvent } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';\nimport { IWorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\n\nconst enum CustomEditorModelType {\n\tCustom,\n\tText,\n}\n\nexport class MainThreadCustomEditors extends Disposable implements extHostProtocol.MainThreadCustomEditorsShape {\n\n\tprivate readonly _proxyCustomEditors: extHostProtocol.ExtHostCustomEditorsShape;\n\n\tprivate readonly _editorProviders = this._register(new DisposableMap<string>());\n\n\tprivate readonly _editorRenameBackups = new Map<string, CustomDocumentBackupData>();\n\n\tprivate readonly _webviewOriginStore: ExtensionKeyedWebviewOriginStore;\n\n\tconstructor(\n\t\tcontext: IExtHostContext,\n\t\tprivate readonly mainThreadWebview: MainThreadWebviews,\n\t\tprivate readonly mainThreadWebviewPanels: MainThreadWebviewPanels,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IWorkingCopyService workingCopyService: IWorkingCopyService,\n\t\t@IWorkingCopyFileService workingCopyFileService: IWorkingCopyFileService,\n\t\t@ICustomEditorService private readonly _customEditorService: ICustomEditorService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWebviewWorkbenchService private readonly _webviewWorkbenchService: IWebviewWorkbenchService,\n\t) {\n\t\tsuper();\n\n\t\tthis._webviewOriginStore = new ExtensionKeyedWebviewOriginStore('mainThreadCustomEditors.origins', storageService);\n\n\t\tthis._proxyCustomEditors = context.getProxy(extHostProtocol.ExtHostContext.ExtHostCustomEditors);\n\n\t\tthis._register(workingCopyFileService.registerWorkingCopyProvider((editorResource) => {\n\t\t\tconst matchedWorkingCopies: IWorkingCopy[] = [];\n\n\t\t\tfor (const workingCopy of workingCopyService.workingCopies) {\n\t\t\t\tif (workingCopy instanceof MainThreadCustomEditorModel) {\n\t\t\t\t\tif (isEqualOrParent(editorResource, workingCopy.editorResource)) {\n\t\t\t\t\t\tmatchedWorkingCopies.push(workingCopy);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn matchedWorkingCopies;\n\t\t}));\n\n\t\t// This reviver's only job is to activate custom editor extensions.\n\t\tthis._register(_webviewWorkbenchService.registerResolver({\n\t\t\tcanResolve: (webview: WebviewInput) => {\n\t\t\t\tif (webview instanceof CustomEditorInput) {\n\t\t\t\t\textensionService.activateByEvent(`onCustomEditor:${webview.viewType}`);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tresolveWebview: () => { throw new Error('not implemented'); }\n\t\t}));\n\n\t\t// Working copy operations\n\t\tthis._register(workingCopyFileService.onWillRunWorkingCopyFileOperation(async e => this.onWillRunWorkingCopyFileOperation(e)));\n\t}\n\n\tpublic $registerTextEditorProvider(extensionData: extHostProtocol.WebviewExtensionDescription, viewType: string, options: extHostProtocol.IWebviewPanelOptions, capabilities: extHostProtocol.CustomTextEditorCapabilities, serializeBuffersForPostMessage: boolean): void {\n\t\tthis.registerEditorProvider(CustomEditorModelType.Text, reviveWebviewExtension(extensionData), viewType, options, capabilities, true, serializeBuffersForPostMessage);\n\t}\n\n\tpublic $registerCustomEditorProvider(extensionData: extHostProtocol.WebviewExtensionDescription, viewType: string, options: extHostProtocol.IWebviewPanelOptions, supportsMultipleEditorsPerDocument: boolean, serializeBuffersForPostMessage: boolean): void {\n\t\tthis.registerEditorProvider(CustomEditorModelType.Custom, reviveWebviewExtension(extensionData), viewType, options, {}, supportsMultipleEditorsPerDocument, serializeBuffersForPostMessage);\n\t}\n\n\tprivate registerEditorProvider(\n\t\tmodelType: CustomEditorModelType,\n\t\textension: WebviewExtensionDescription,\n\t\tviewType: string,\n\t\toptions: extHostProtocol.IWebviewPanelOptions,\n\t\tcapabilities: extHostProtocol.CustomTextEditorCapabilities,\n\t\tsupportsMultipleEditorsPerDocument: boolean,\n\t\tserializeBuffersForPostMessage: boolean,\n\t): void {\n\t\tif (this._editorProviders.has(viewType)) {\n\t\t\tthrow new Error(`Provider for ${viewType} already registered`);\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tdisposables.add(this._customEditorService.registerCustomEditorCapabilities(viewType, {\n\t\t\tsupportsMultipleEditorsPerDocument\n\t\t}));\n\n\t\tdisposables.add(this._webviewWorkbenchService.registerResolver({\n\t\t\tcanResolve: (webviewInput) => {\n\t\t\t\treturn webviewInput instanceof CustomEditorInput && webviewInput.viewType === viewType;\n\t\t\t},\n\t\t\tresolveWebview: async (webviewInput: CustomEditorInput, cancellation: CancellationToken) => {\n\t\t\t\tconst handle = generateUuid();\n\t\t\t\tconst resource = webviewInput.resource;\n\n\t\t\t\twebviewInput.webview.origin = this._webviewOriginStore.getOrigin(viewType, extension.id);\n\n\t\t\t\tthis.mainThreadWebviewPanels.addWebviewInput(handle, webviewInput, { serializeBuffersForPostMessage });\n\t\t\t\twebviewInput.webview.options = options;\n\t\t\t\twebviewInput.webview.extension = extension;\n\n\t\t\t\t// If there's an old resource this was a move and we must resolve the backup at the same time as the webview\n\t\t\t\t// This is because the backup must be ready upon model creation, and the input resolve method comes after\n\t\t\t\tlet backupId = webviewInput.backupId;\n\t\t\t\tif (webviewInput.oldResource && !webviewInput.backupId) {\n\t\t\t\t\tconst backup = this._editorRenameBackups.get(webviewInput.oldResource.toString());\n\t\t\t\t\tbackupId = backup?.backupId;\n\t\t\t\t\tthis._editorRenameBackups.delete(webviewInput.oldResource.toString());\n\t\t\t\t}\n\n\t\t\t\tlet modelRef: IReference<ICustomEditorModel>;\n\t\t\t\ttry {\n\t\t\t\t\tmodelRef = await this.getOrCreateCustomEditorModel(modelType, resource, viewType, { backupId }, cancellation);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tonUnexpectedError(error);\n\t\t\t\t\twebviewInput.webview.setHtml(this.mainThreadWebview.getWebviewResolvedFailedContent(viewType));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (cancellation.isCancellationRequested) {\n\t\t\t\t\tmodelRef.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\twebviewInput.webview.onDidDispose(() => {\n\t\t\t\t\t// If the model is still dirty, make sure we have time to save it\n\t\t\t\t\tif (modelRef.object.isDirty()) {\n\t\t\t\t\t\tconst sub = modelRef.object.onDidChangeDirty(() => {\n\t\t\t\t\t\t\tif (!modelRef.object.isDirty()) {\n\t\t\t\t\t\t\t\tsub.dispose();\n\t\t\t\t\t\t\t\tmodelRef.dispose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmodelRef.dispose();\n\t\t\t\t});\n\n\t\t\t\tif (capabilities.supportsMove) {\n\t\t\t\t\twebviewInput.onMove(async (newResource: URI) => {\n\t\t\t\t\t\tconst oldModel = modelRef;\n\t\t\t\t\t\tmodelRef = await this.getOrCreateCustomEditorModel(modelType, newResource, viewType, {}, CancellationToken.None);\n\t\t\t\t\t\tthis._proxyCustomEditors.$onMoveCustomEditor(handle, newResource, viewType);\n\t\t\t\t\t\toldModel.dispose();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this._proxyCustomEditors.$resolveCustomEditor(resource, handle, viewType, {\n\t\t\t\t\t\ttitle: webviewInput.getTitle(),\n\t\t\t\t\t\tcontentOptions: webviewInput.webview.contentOptions,\n\t\t\t\t\t\toptions: webviewInput.webview.options,\n\t\t\t\t\t\tactive: webviewInput === this._editorService.activeEditor,\n\t\t\t\t\t}, editorGroupToColumn(this._editorGroupService, webviewInput.group || 0), cancellation);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tonUnexpectedError(error);\n\t\t\t\t\twebviewInput.webview.setHtml(this.mainThreadWebview.getWebviewResolvedFailedContent(viewType));\n\t\t\t\t\tmodelRef.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._editorProviders.set(viewType, disposables);\n\t}\n\n\tpublic $unregisterEditorProvider(viewType: string): void {\n\t\tif (!this._editorProviders.has(viewType)) {\n\t\t\tthrow new Error(`No provider for ${viewType} registered`);\n\t\t}\n\n\t\tthis._editorProviders.deleteAndDispose(viewType);\n\n\t\tthis._customEditorService.models.disposeAllModelsForView(viewType);\n\t}\n\n\tprivate async getOrCreateCustomEditorModel(\n\t\tmodelType: CustomEditorModelType,\n\t\tresource: URI,\n\t\tviewType: string,\n\t\toptions: { backupId?: string },\n\t\tcancellation: CancellationToken,\n\t): Promise<IReference<ICustomEditorModel>> {\n\t\tconst existingModel = this._customEditorService.models.tryRetain(resource, viewType);\n\t\tif (existingModel) {\n\t\t\treturn existingModel;\n\t\t}\n\n\t\tswitch (modelType) {\n\t\t\tcase CustomEditorModelType.Text:\n\t\t\t\t{\n\t\t\t\t\tconst model = CustomTextEditorModel.create(this._instantiationService, viewType, resource);\n\t\t\t\t\treturn this._customEditorService.models.add(resource, viewType, model);\n\t\t\t\t}\n\t\t\tcase CustomEditorModelType.Custom:\n\t\t\t\t{\n\t\t\t\t\tconst model = MainThreadCustomEditorModel.create(this._instantiationService, this._proxyCustomEditors, viewType, resource, options, () => {\n\t\t\t\t\t\treturn Array.from(this.mainThreadWebviewPanels.webviewInputs)\n\t\t\t\t\t\t\t.filter(editor => editor instanceof CustomEditorInput && isEqual(editor.resource, resource)) as CustomEditorInput[];\n\t\t\t\t\t}, cancellation);\n\t\t\t\t\treturn this._customEditorService.models.add(resource, viewType, model);\n\t\t\t\t}\n\t\t}\n\t}\n\n\tpublic async $onDidEdit(resourceComponents: UriComponents, viewType: string, editId: number, label: string | undefined): Promise<void> {\n\t\tconst model = await this.getCustomEditorModel(resourceComponents, viewType);\n\t\tmodel.pushEdit(editId, label);\n\t}\n\n\tpublic async $onContentChange(resourceComponents: UriComponents, viewType: string): Promise<void> {\n\t\tconst model = await this.getCustomEditorModel(resourceComponents, viewType);\n\t\tmodel.changeContent();\n\t}\n\n\tprivate async getCustomEditorModel(resourceComponents: UriComponents, viewType: string) {\n\t\tconst resource = URI.revive(resourceComponents);\n\t\tconst model = await this._customEditorService.models.get(resource, viewType);\n\t\tif (!model || !(model instanceof MainThreadCustomEditorModel)) {\n\t\t\tthrow new Error('Could not find model for webview editor');\n\t\t}\n\t\treturn model;\n\t}\n\n\t//#region Working Copy\n\tprivate async onWillRunWorkingCopyFileOperation(e: WorkingCopyFileEvent) {\n\t\tif (e.operation !== FileOperation.MOVE) {\n\t\t\treturn;\n\t\t}\n\t\te.waitUntil((async () => {\n\t\t\tconst models = [];\n\t\t\tfor (const file of e.files) {\n\t\t\t\tif (file.source) {\n\t\t\t\t\tmodels.push(...(await this._customEditorService.models.getAllModels(file.source)));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const model of models) {\n\t\t\t\tif (model instanceof MainThreadCustomEditorModel && model.isDirty()) {\n\t\t\t\t\tconst workingCopy = await model.backup(CancellationToken.None);\n\t\t\t\t\tif (workingCopy.meta) {\n\t\t\t\t\t\t// This cast is safe because we do an instanceof check above and a custom document backup data is always returned\n\t\t\t\t\t\tthis._editorRenameBackups.set(model.editorResource.toString(), workingCopy.meta as CustomDocumentBackupData);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})());\n\t}\n\t//#endregion\n}\n\nnamespace HotExitState {\n\texport const enum Type {\n\t\tAllowed,\n\t\tNotAllowed,\n\t\tPending,\n\t}\n\n\texport const Allowed = Object.freeze({ type: Type.Allowed } as const);\n\texport const NotAllowed = Object.freeze({ type: Type.NotAllowed } as const);\n\n\texport class Pending {\n\t\treadonly type = Type.Pending;\n\n\t\tconstructor(\n\t\t\tpublic readonly operation: CancelablePromise<string>,\n\t\t) { }\n\t}\n\n\texport type State = typeof Allowed | typeof NotAllowed | Pending;\n}\n\n\nclass MainThreadCustomEditorModel extends ResourceWorkingCopy implements ICustomEditorModel {\n\n\tprivate _fromBackup: boolean = false;\n\tprivate _hotExitState: HotExitState.State = HotExitState.Allowed;\n\tprivate _backupId: string | undefined;\n\n\tprivate _currentEditIndex: number = -1;\n\tprivate _savePoint: number = -1;\n\tprivate readonly _edits: Array<number> = [];\n\tprivate _isDirtyFromContentChange = false;\n\n\tprivate _ongoingSave?: CancelablePromise<void>;\n\n\t// TODO@mjbvz consider to enable a `typeId` that is specific for custom\n\t// editors. Using a distinct `typeId` allows the working copy to have\n\t// any resource (including file based resources) even if other working\n\t// copies exist with the same resource.\n\t//\n\t// IMPORTANT: changing the `typeId` has an impact on backups for this\n\t// working copy. Any value that is not the empty string will be used\n\t// as seed to the backup. Only change the `typeId` if you have implemented\n\t// a fallback solution to resolve any existing backups that do not have\n\t// this seed.\n\treadonly typeId = NO_TYPE_ID;\n\n\tpublic static async create(\n\t\tinstantiationService: IInstantiationService,\n\t\tproxy: extHostProtocol.ExtHostCustomEditorsShape,\n\t\tviewType: string,\n\t\tresource: URI,\n\t\toptions: { backupId?: string },\n\t\tgetEditors: () => CustomEditorInput[],\n\t\tcancellation: CancellationToken,\n\t): Promise<MainThreadCustomEditorModel> {\n\t\tconst editors = getEditors();\n\t\tlet untitledDocumentData: VSBuffer | undefined;\n\t\tif (editors.length !== 0) {\n\t\t\tuntitledDocumentData = editors[0].untitledDocumentData;\n\t\t}\n\t\tconst { editable } = await proxy.$createCustomDocument(resource, viewType, options.backupId, untitledDocumentData, cancellation);\n\t\treturn instantiationService.createInstance(MainThreadCustomEditorModel, proxy, viewType, resource, !!options.backupId, editable, !!untitledDocumentData, getEditors);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _proxy: extHostProtocol.ExtHostCustomEditorsShape,\n\t\tprivate readonly _viewType: string,\n\t\tprivate readonly _editorResource: URI,\n\t\tfromBackup: boolean,\n\t\tprivate readonly _editable: boolean,\n\t\tstartDirty: boolean,\n\t\tprivate readonly _getEditors: () => CustomEditorInput[],\n\t\t@IFileDialogService private readonly _fileDialogService: IFileDialogService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IUndoRedoService private readonly _undoService: IUndoRedoService,\n\t\t@IWorkbenchEnvironmentService private readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkingCopyService workingCopyService: IWorkingCopyService,\n\t\t@IPathService private readonly _pathService: IPathService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t) {\n\t\tsuper(MainThreadCustomEditorModel.toWorkingCopyResource(_viewType, _editorResource), fileService);\n\n\t\tthis._fromBackup = fromBackup;\n\n\t\tif (_editable) {\n\t\t\tthis._register(workingCopyService.registerWorkingCopy(this));\n\n\t\t\tthis._register(extensionService.onWillStop(e => {\n\t\t\t\tif (!this.isDirty()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\te.veto((async () => {\n\t\t\t\t\tconst didSave = await this.save();\n\t\t\t\t\tif (!didSave) {\n\t\t\t\t\t\t// Veto\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false; // Don't veto\n\t\t\t\t})(), localize('vetoExtHostRestart', \"Custom editor '{0}' could not be saved.\", this.name));\n\t\t\t}));\n\t\t}\n\n\t\t// Normally means we're re-opening an untitled file\n\t\tif (startDirty) {\n\t\t\tthis._isDirtyFromContentChange = true;\n\t\t}\n\t}\n\n\tget editorResource() {\n\t\treturn this._editorResource;\n\t}\n\n\toverride dispose() {\n\t\tif (this._editable) {\n\t\t\tthis._undoService.removeElements(this._editorResource);\n\t\t}\n\n\t\tthis._proxy.$disposeCustomDocument(this._editorResource, this._viewType);\n\n\t\tsuper.dispose();\n\t}\n\n\t//#region IWorkingCopy\n\n\t// Make sure each custom editor has a unique resource for backup and edits\n\tprivate static toWorkingCopyResource(viewType: string, resource: URI) {\n\t\tconst authority = viewType.replace(/[^a-z0-9\\-_]/gi, '-');\n\t\tconst path = `/${multibyteAwareBtoa(resource.with({ query: null, fragment: null }).toString(true))}`;\n\t\treturn URI.from({\n\t\t\tscheme: Schemas.vscodeCustomEditor,\n\t\t\tauthority: authority,\n\t\t\tpath: path,\n\t\t\tquery: JSON.stringify(resource.toJSON()),\n\t\t});\n\t}\n\n\tpublic get name() {\n\t\treturn basename(this._labelService.getUriLabel(this._editorResource));\n\t}\n\n\tpublic get capabilities(): WorkingCopyCapabilities {\n\t\treturn this.isUntitled() ? WorkingCopyCapabilities.Untitled : WorkingCopyCapabilities.None;\n\t}\n\n\tpublic isDirty(): boolean {\n\t\tif (this._isDirtyFromContentChange) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._edits.length > 0) {\n\t\t\treturn this._savePoint !== this._currentEditIndex;\n\t\t}\n\t\treturn this._fromBackup;\n\t}\n\n\tprivate isUntitled() {\n\t\treturn this._editorResource.scheme === Schemas.untitled;\n\t}\n\n\tprivate readonly _onDidChangeDirty: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeDirty: Event<void> = this._onDidChangeDirty.event;\n\n\tprivate readonly _onDidChangeContent: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tprivate readonly _onDidSave: Emitter<IWorkingCopySaveEvent> = this._register(new Emitter<IWorkingCopySaveEvent>());\n\treadonly onDidSave: Event<IWorkingCopySaveEvent> = this._onDidSave.event;\n\n\treadonly onDidChangeReadonly = Event.None;\n\n\t//#endregion\n\n\tpublic isReadonly(): boolean {\n\t\treturn !this._editable;\n\t}\n\n\tpublic get viewType() {\n\t\treturn this._viewType;\n\t}\n\n\tpublic get backupId() {\n\t\treturn this._backupId;\n\t}\n\n\tpublic pushEdit(editId: number, label: string | undefined) {\n\t\tif (!this._editable) {\n\t\t\tthrow new Error('Document is not editable');\n\t\t}\n\n\t\tthis.change(() => {\n\t\t\tthis.spliceEdits(editId);\n\t\t\tthis._currentEditIndex = this._edits.length - 1;\n\t\t});\n\n\t\tthis._undoService.pushElement({\n\t\t\ttype: UndoRedoElementType.Resource,\n\t\t\tresource: this._editorResource,\n\t\t\tlabel: label ?? localize('defaultEditLabel', \"Edit\"),\n\t\t\tcode: 'undoredo.customEditorEdit',\n\t\t\tundo: () => this.undo(),\n\t\t\tredo: () => this.redo(),\n\t\t});\n\t}\n\n\tpublic changeContent() {\n\t\tthis.change(() => {\n\t\t\tthis._isDirtyFromContentChange = true;\n\t\t});\n\t}\n\n\tprivate async undo(): Promise<void> {\n\t\tif (!this._editable) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentEditIndex < 0) {\n\t\t\t// nothing to undo\n\t\t\treturn;\n\t\t}\n\n\t\tconst undoneEdit = this._edits[this._currentEditIndex];\n\t\tthis.change(() => {\n\t\t\t--this._currentEditIndex;\n\t\t});\n\t\tawait this._proxy.$undo(this._editorResource, this.viewType, undoneEdit, this.isDirty());\n\t}\n\n\tprivate async redo(): Promise<void> {\n\t\tif (!this._editable) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentEditIndex >= this._edits.length - 1) {\n\t\t\t// nothing to redo\n\t\t\treturn;\n\t\t}\n\n\t\tconst redoneEdit = this._edits[this._currentEditIndex + 1];\n\t\tthis.change(() => {\n\t\t\t++this._currentEditIndex;\n\t\t});\n\t\tawait this._proxy.$redo(this._editorResource, this.viewType, redoneEdit, this.isDirty());\n\t}\n\n\tprivate spliceEdits(editToInsert?: number) {\n\t\tconst start = this._currentEditIndex + 1;\n\t\tconst toRemove = this._edits.length - this._currentEditIndex;\n\n\t\tconst removedEdits = typeof editToInsert === 'number'\n\t\t\t? this._edits.splice(start, toRemove, editToInsert)\n\t\t\t: this._edits.splice(start, toRemove);\n\n\t\tif (removedEdits.length) {\n\t\t\tthis._proxy.$disposeEdits(this._editorResource, this._viewType, removedEdits);\n\t\t}\n\t}\n\n\tprivate change(makeEdit: () => void): void {\n\t\tconst wasDirty = this.isDirty();\n\t\tmakeEdit();\n\t\tthis._onDidChangeContent.fire();\n\n\t\tif (this.isDirty() !== wasDirty) {\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\t}\n\n\tpublic async revert(options?: IRevertOptions) {\n\t\tif (!this._editable) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentEditIndex === this._savePoint && !this._isDirtyFromContentChange && !this._fromBackup) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!options?.soft) {\n\t\t\tthis._proxy.$revert(this._editorResource, this.viewType, CancellationToken.None);\n\t\t}\n\n\t\tthis.change(() => {\n\t\t\tthis._isDirtyFromContentChange = false;\n\t\t\tthis._fromBackup = false;\n\t\t\tthis._currentEditIndex = this._savePoint;\n\t\t\tthis.spliceEdits();\n\t\t});\n\t}\n\n\tpublic async save(options?: ISaveOptions): Promise<boolean> {\n\t\tconst result = !!await this.saveCustomEditor(options);\n\n\t\t// Emit Save Event\n\t\tif (result) {\n\t\t\tthis._onDidSave.fire({ reason: options?.reason, source: options?.source });\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic async saveCustomEditor(options?: ISaveOptions): Promise<URI | undefined> {\n\t\tif (!this._editable) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (this.isUntitled()) {\n\t\t\tconst targetUri = await this.suggestUntitledSavePath(options);\n\t\t\tif (!targetUri) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tawait this.saveCustomEditorAs(this._editorResource, targetUri, options);\n\t\t\treturn targetUri;\n\t\t}\n\n\t\tconst savePromise = createCancelablePromise(token => this._proxy.$onSave(this._editorResource, this.viewType, token));\n\t\tthis._ongoingSave?.cancel();\n\t\tthis._ongoingSave = savePromise;\n\n\t\ttry {\n\t\t\tawait savePromise;\n\n\t\t\tif (this._ongoingSave === savePromise) { // Make sure we are still doing the same save\n\t\t\t\tthis.change(() => {\n\t\t\t\t\tthis._isDirtyFromContentChange = false;\n\t\t\t\t\tthis._savePoint = this._currentEditIndex;\n\t\t\t\t\tthis._fromBackup = false;\n\t\t\t\t});\n\t\t\t}\n\t\t} finally {\n\t\t\tif (this._ongoingSave === savePromise) { // Make sure we are still doing the same save\n\t\t\t\tthis._ongoingSave = undefined;\n\t\t\t}\n\t\t}\n\n\t\treturn this._editorResource;\n\t}\n\n\tprivate suggestUntitledSavePath(options: ISaveOptions | undefined): Promise<URI | undefined> {\n\t\tif (!this.isUntitled()) {\n\t\t\tthrow new Error('Resource is not untitled');\n\t\t}\n\n\t\tconst remoteAuthority = this._environmentService.remoteAuthority;\n\t\tconst localResource = toLocalResource(this._editorResource, remoteAuthority, this._pathService.defaultUriScheme);\n\n\t\treturn this._fileDialogService.pickFileToSave(localResource, options?.availableFileSystems);\n\t}\n\n\tpublic async saveCustomEditorAs(resource: URI, targetResource: URI, _options?: ISaveOptions): Promise<boolean> {\n\t\tif (this._editable) {\n\t\t\t// TODO: handle cancellation\n\t\t\tawait createCancelablePromise(token => this._proxy.$onSaveAs(this._editorResource, this.viewType, targetResource, token));\n\t\t\tthis.change(() => {\n\t\t\t\tthis._savePoint = this._currentEditIndex;\n\t\t\t});\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// Since the editor is readonly, just copy the file over\n\t\t\tawait this.fileService.copy(resource, targetResource, false /* overwrite */);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic async backup(token: CancellationToken): Promise<IWorkingCopyBackup> {\n\t\tconst editors = this._getEditors();\n\t\tif (!editors.length) {\n\t\t\tthrow new Error('No editors found for resource, cannot back up');\n\t\t}\n\t\tconst primaryEditor = editors[0];\n\n\t\tconst backupMeta: CustomDocumentBackupData = {\n\t\t\tviewType: this.viewType,\n\t\t\teditorResource: this._editorResource,\n\t\t\tbackupId: '',\n\t\t\textension: primaryEditor.extension ? {\n\t\t\t\tid: primaryEditor.extension.id.value,\n\t\t\t\tlocation: primaryEditor.extension.location!,\n\t\t\t} : undefined,\n\t\t\twebview: {\n\t\t\t\torigin: primaryEditor.webview.origin,\n\t\t\t\toptions: primaryEditor.webview.options,\n\t\t\t\tstate: primaryEditor.webview.state,\n\t\t\t}\n\t\t};\n\n\t\tconst backupData: IWorkingCopyBackup = {\n\t\t\tmeta: backupMeta\n\t\t};\n\n\t\tif (!this._editable) {\n\t\t\treturn backupData;\n\t\t}\n\n\t\tif (this._hotExitState.type === HotExitState.Type.Pending) {\n\t\t\tthis._hotExitState.operation.cancel();\n\t\t}\n\n\t\tconst pendingState = new HotExitState.Pending(\n\t\t\tcreateCancelablePromise(token =>\n\t\t\t\tthis._proxy.$backup(this._editorResource.toJSON(), this.viewType, token)));\n\t\tthis._hotExitState = pendingState;\n\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tpendingState.operation.cancel();\n\t\t});\n\n\t\tlet errorMessage = '';\n\t\ttry {\n\t\t\tconst backupId = await pendingState.operation;\n\t\t\t// Make sure state has not changed in the meantime\n\t\t\tif (this._hotExitState === pendingState) {\n\t\t\t\tthis._hotExitState = HotExitState.Allowed;\n\t\t\t\tbackupData.meta!.backupId = backupId;\n\t\t\t\tthis._backupId = backupId;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (isCancellationError(e)) {\n\t\t\t\t// This is expected\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\t// Otherwise it could be a real error. Make sure state has not changed in the meantime.\n\t\t\tif (this._hotExitState === pendingState) {\n\t\t\t\tthis._hotExitState = HotExitState.NotAllowed;\n\t\t\t}\n\t\t\tif (e.message) {\n\t\t\t\terrorMessage = e.message;\n\t\t\t}\n\t\t}\n\n\t\tif (this._hotExitState === HotExitState.Allowed) {\n\t\t\treturn backupData;\n\t\t}\n\n\t\tthrow new Error(`Cannot back up in this state: ${errorMessage}`);\n\t}\n}\n"]}