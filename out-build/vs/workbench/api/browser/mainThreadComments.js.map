{"version":3,"sources":["vs/workbench/api/browser/mainThreadComments.ts"],"names":[],"mappings":"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","file":"mainThreadComments.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport * as languages from 'vs/editor/common/languages';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { extHostNamedCustomer, IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { ICommentController, ICommentInfo, ICommentService, INotebookCommentInfo } from 'vs/workbench/contrib/comments/browser/commentService';\nimport { CommentsPanel } from 'vs/workbench/contrib/comments/browser/commentsView';\nimport { CommentProviderFeatures, ExtHostCommentsShape, ExtHostContext, MainContext, MainThreadCommentsShape, CommentThreadChanges } from '../common/extHost.protocol';\nimport { COMMENTS_VIEW_ID, COMMENTS_VIEW_STORAGE_ID, COMMENTS_VIEW_TITLE, COMMENTS_VIEW_ORIGINAL_TITLE } from 'vs/workbench/contrib/comments/browser/commentsTreeViewer';\nimport { ViewContainer, IViewContainersRegistry, Extensions as ViewExtensions, ViewContainerLocation, IViewsRegistry, IViewsService, IViewDescriptorService } from 'vs/workbench/common/views';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\nimport { localize } from 'vs/nls';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { Schemas } from 'vs/base/common/network';\n\n\nexport class MainThreadCommentThread<T> implements languages.CommentThread<T> {\n\tprivate _input?: languages.CommentInput;\n\tget input(): languages.CommentInput | undefined {\n\t\treturn this._input;\n\t}\n\n\tset input(value: languages.CommentInput | undefined) {\n\t\tthis._input = value;\n\t\tthis._onDidChangeInput.fire(value);\n\t}\n\n\tprivate readonly _onDidChangeInput = new Emitter<languages.CommentInput | undefined>();\n\tget onDidChangeInput(): Event<languages.CommentInput | undefined> { return this._onDidChangeInput.event; }\n\n\tprivate _label: string | undefined;\n\n\tget label(): string | undefined {\n\t\treturn this._label;\n\t}\n\n\tset label(label: string | undefined) {\n\t\tthis._label = label;\n\t\tthis._onDidChangeLabel.fire(this._label);\n\t}\n\n\tprivate _contextValue: string | undefined;\n\n\tget contextValue(): string | undefined {\n\t\treturn this._contextValue;\n\t}\n\n\tset contextValue(context: string | undefined) {\n\t\tthis._contextValue = context;\n\t}\n\n\tprivate readonly _onDidChangeLabel = new Emitter<string | undefined>();\n\treadonly onDidChangeLabel: Event<string | undefined> = this._onDidChangeLabel.event;\n\n\tprivate _comments: languages.Comment[] | undefined;\n\n\tpublic get comments(): languages.Comment[] | undefined {\n\t\treturn this._comments;\n\t}\n\n\tpublic set comments(newComments: languages.Comment[] | undefined) {\n\t\tthis._comments = newComments;\n\t\tthis._onDidChangeComments.fire(this._comments);\n\t}\n\n\tprivate readonly _onDidChangeComments = new Emitter<readonly languages.Comment[] | undefined>();\n\tget onDidChangeComments(): Event<readonly languages.Comment[] | undefined> { return this._onDidChangeComments.event; }\n\n\tset range(range: T | undefined) {\n\t\tthis._range = range;\n\t\tthis._onDidChangeRange.fire(this._range);\n\t}\n\n\tget range(): T | undefined {\n\t\treturn this._range;\n\t}\n\n\tprivate readonly _onDidChangeCanReply = new Emitter<boolean>();\n\tget onDidChangeCanReply(): Event<boolean> { return this._onDidChangeCanReply.event; }\n\tset canReply(state: boolean) {\n\t\tthis._canReply = state;\n\t\tthis._onDidChangeCanReply.fire(this._canReply);\n\t}\n\n\tget canReply() {\n\t\treturn this._canReply;\n\t}\n\n\tprivate readonly _onDidChangeRange = new Emitter<T | undefined>();\n\tpublic onDidChangeRange = this._onDidChangeRange.event;\n\n\tprivate _collapsibleState: languages.CommentThreadCollapsibleState | undefined;\n\tget collapsibleState() {\n\t\treturn this._collapsibleState;\n\t}\n\n\tset collapsibleState(newState: languages.CommentThreadCollapsibleState | undefined) {\n\t\tthis._collapsibleState = newState;\n\t\tthis._onDidChangeCollapsibleState.fire(this._collapsibleState);\n\t}\n\n\tprivate _initialCollapsibleState: languages.CommentThreadCollapsibleState | undefined;\n\tget initialCollapsibleState() {\n\t\treturn this._initialCollapsibleState;\n\t}\n\n\tprivate set initialCollapsibleState(initialCollapsibleState: languages.CommentThreadCollapsibleState | undefined) {\n\t\tthis._initialCollapsibleState = initialCollapsibleState;\n\t\tif (this.collapsibleState === undefined) {\n\t\t\tthis.collapsibleState = this.initialCollapsibleState;\n\t\t}\n\t\tthis._onDidChangeInitialCollapsibleState.fire(initialCollapsibleState);\n\t}\n\n\tprivate readonly _onDidChangeCollapsibleState = new Emitter<languages.CommentThreadCollapsibleState | undefined>();\n\tpublic onDidChangeCollapsibleState = this._onDidChangeCollapsibleState.event;\n\tprivate readonly _onDidChangeInitialCollapsibleState = new Emitter<languages.CommentThreadCollapsibleState | undefined>();\n\tpublic onDidChangeInitialCollapsibleState = this._onDidChangeInitialCollapsibleState.event;\n\n\tprivate _isDisposed: boolean;\n\n\tget isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\tisDocumentCommentThread(): this is languages.CommentThread<IRange> {\n\t\treturn this._range === undefined || Range.isIRange(this._range);\n\t}\n\n\tprivate _state: languages.CommentThreadState | undefined;\n\tget state() {\n\t\treturn this._state;\n\t}\n\n\tset state(newState: languages.CommentThreadState | undefined) {\n\t\tthis._state = newState;\n\t\tthis._onDidChangeState.fire(this._state);\n\t}\n\n\tpublic get isTemplate(): boolean {\n\t\treturn this._isTemplate;\n\t}\n\n\tprivate readonly _onDidChangeState = new Emitter<languages.CommentThreadState | undefined>();\n\tpublic onDidChangeState = this._onDidChangeState.event;\n\n\tconstructor(\n\t\tpublic commentThreadHandle: number,\n\t\tpublic controllerHandle: number,\n\t\tpublic extensionId: string,\n\t\tpublic threadId: string,\n\t\tpublic resource: string,\n\t\tprivate _range: T | undefined,\n\t\tprivate _canReply: boolean,\n\t\tprivate _isTemplate: boolean\n\t) {\n\t\tthis._isDisposed = false;\n\t\tif (_isTemplate) {\n\t\t\tthis.comments = [];\n\t\t}\n\t}\n\n\tbatchUpdate(changes: CommentThreadChanges<T>) {\n\t\tconst modified = (value: keyof CommentThreadChanges): boolean =>\n\t\t\tObject.prototype.hasOwnProperty.call(changes, value);\n\n\t\tif (modified('range')) { this._range = changes.range!; }\n\t\tif (modified('label')) { this._label = changes.label; }\n\t\tif (modified('contextValue')) { this._contextValue = changes.contextValue === null ? undefined : changes.contextValue; }\n\t\tif (modified('comments')) { this._comments = changes.comments; }\n\t\tif (modified('collapseState')) { this.initialCollapsibleState = changes.collapseState; }\n\t\tif (modified('canReply')) { this.canReply = changes.canReply!; }\n\t\tif (modified('state')) { this.state = changes.state!; }\n\t\tif (modified('isTemplate')) { this._isTemplate = changes.isTemplate!; }\n\t}\n\n\tdispose() {\n\t\tthis._isDisposed = true;\n\t\tthis._onDidChangeCollapsibleState.dispose();\n\t\tthis._onDidChangeComments.dispose();\n\t\tthis._onDidChangeInput.dispose();\n\t\tthis._onDidChangeLabel.dispose();\n\t\tthis._onDidChangeRange.dispose();\n\t\tthis._onDidChangeState.dispose();\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: MarshalledId.CommentThread,\n\t\t\tcommentControlHandle: this.controllerHandle,\n\t\t\tcommentThreadHandle: this.commentThreadHandle,\n\t\t};\n\t}\n}\n\nexport class MainThreadCommentController implements ICommentController {\n\tget handle(): number {\n\t\treturn this._handle;\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget contextValue(): string {\n\t\treturn this._id;\n\t}\n\n\tget proxy(): ExtHostCommentsShape {\n\t\treturn this._proxy;\n\t}\n\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\n\tprivate _reactions: languages.CommentReaction[] | undefined;\n\n\tget reactions() {\n\t\treturn this._reactions;\n\t}\n\n\tset reactions(reactions: languages.CommentReaction[] | undefined) {\n\t\tthis._reactions = reactions;\n\t}\n\n\tget options() {\n\t\treturn this._features.options;\n\t}\n\n\tprivate readonly _threads: Map<number, MainThreadCommentThread<IRange | ICellRange>> = new Map<number, MainThreadCommentThread<IRange | ICellRange>>();\n\tpublic activeCommentThread?: MainThreadCommentThread<IRange | ICellRange>;\n\n\tget features(): CommentProviderFeatures {\n\t\treturn this._features;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _proxy: ExtHostCommentsShape,\n\t\tprivate readonly _commentService: ICommentService,\n\t\tprivate readonly _handle: number,\n\t\tprivate readonly _uniqueId: string,\n\t\tprivate readonly _id: string,\n\t\tprivate readonly _label: string,\n\t\tprivate _features: CommentProviderFeatures\n\t) { }\n\n\tupdateFeatures(features: CommentProviderFeatures) {\n\t\tthis._features = features;\n\t}\n\n\tcreateCommentThread(extensionId: string,\n\t\tcommentThreadHandle: number,\n\t\tthreadId: string,\n\t\tresource: UriComponents,\n\t\trange: IRange | ICellRange | undefined,\n\t\tisTemplate: boolean\n\t): languages.CommentThread<IRange | ICellRange> {\n\t\tconst thread = new MainThreadCommentThread(\n\t\t\tcommentThreadHandle,\n\t\t\tthis.handle,\n\t\t\textensionId,\n\t\t\tthreadId,\n\t\t\tURI.revive(resource).toString(),\n\t\t\trange,\n\t\t\ttrue,\n\t\t\tisTemplate\n\t\t);\n\n\t\tthis._threads.set(commentThreadHandle, thread);\n\n\t\tif (thread.isDocumentCommentThread()) {\n\t\t\tthis._commentService.updateComments(this._uniqueId, {\n\t\t\t\tadded: [thread],\n\t\t\t\tremoved: [],\n\t\t\t\tchanged: [],\n\t\t\t\tpending: []\n\t\t\t});\n\t\t} else {\n\t\t\tthis._commentService.updateNotebookComments(this._uniqueId, {\n\t\t\t\tadded: [thread as MainThreadCommentThread<ICellRange>],\n\t\t\t\tremoved: [],\n\t\t\t\tchanged: [],\n\t\t\t\tpending: []\n\t\t\t});\n\t\t}\n\n\t\treturn thread;\n\t}\n\n\tupdateCommentThread(commentThreadHandle: number,\n\t\tthreadId: string,\n\t\tresource: UriComponents,\n\t\tchanges: CommentThreadChanges): void {\n\t\tconst thread = this.getKnownThread(commentThreadHandle);\n\t\tthread.batchUpdate(changes);\n\n\t\tif (thread.isDocumentCommentThread()) {\n\t\t\tthis._commentService.updateComments(this._uniqueId, {\n\t\t\t\tadded: [],\n\t\t\t\tremoved: [],\n\t\t\t\tchanged: [thread],\n\t\t\t\tpending: []\n\t\t\t});\n\t\t} else {\n\t\t\tthis._commentService.updateNotebookComments(this._uniqueId, {\n\t\t\t\tadded: [],\n\t\t\t\tremoved: [],\n\t\t\t\tchanged: [thread as MainThreadCommentThread<ICellRange>],\n\t\t\t\tpending: []\n\t\t\t});\n\t\t}\n\n\t}\n\n\tdeleteCommentThread(commentThreadHandle: number) {\n\t\tconst thread = this.getKnownThread(commentThreadHandle);\n\t\tthis._threads.delete(commentThreadHandle);\n\t\tthread.dispose();\n\n\t\tif (thread.isDocumentCommentThread()) {\n\t\t\tthis._commentService.updateComments(this._uniqueId, {\n\t\t\t\tadded: [],\n\t\t\t\tremoved: [thread],\n\t\t\t\tchanged: [],\n\t\t\t\tpending: []\n\t\t\t});\n\t\t} else {\n\t\t\tthis._commentService.updateNotebookComments(this._uniqueId, {\n\t\t\t\tadded: [],\n\t\t\t\tremoved: [thread as MainThreadCommentThread<ICellRange>],\n\t\t\t\tchanged: [],\n\t\t\t\tpending: []\n\t\t\t});\n\t\t}\n\t}\n\n\tdeleteCommentThreadMain(commentThreadId: string) {\n\t\tthis._threads.forEach(thread => {\n\t\t\tif (thread.threadId === commentThreadId) {\n\t\t\t\tthis._proxy.$deleteCommentThread(this._handle, thread.commentThreadHandle);\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateInput(input: string) {\n\t\tconst thread = this.activeCommentThread;\n\n\t\tif (thread && thread.input) {\n\t\t\tconst commentInput = thread.input;\n\t\t\tcommentInput.value = input;\n\t\t\tthread.input = commentInput;\n\t\t}\n\t}\n\n\tupdateCommentingRanges() {\n\t\tthis._commentService.updateCommentingRanges(this._uniqueId);\n\t}\n\n\tprivate getKnownThread(commentThreadHandle: number): MainThreadCommentThread<IRange | ICellRange> {\n\t\tconst thread = this._threads.get(commentThreadHandle);\n\t\tif (!thread) {\n\t\t\tthrow new Error('unknown thread');\n\t\t}\n\t\treturn thread;\n\t}\n\n\tasync getDocumentComments(resource: URI, token: CancellationToken) {\n\t\tif (resource.scheme === Schemas.vscodeNotebookCell) {\n\t\t\treturn {\n\t\t\t\towner: this._uniqueId,\n\t\t\t\tlabel: this.label,\n\t\t\t\tthreads: [],\n\t\t\t\tcommentingRanges: {\n\t\t\t\t\tresource: resource,\n\t\t\t\t\tranges: [],\n\t\t\t\t\tfileComments: false\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconst ret: languages.CommentThread<IRange | ICellRange>[] = [];\n\t\tfor (const thread of [...this._threads.keys()]) {\n\t\t\tconst commentThread = this._threads.get(thread)!;\n\t\t\tif (commentThread.resource === resource.toString()) {\n\t\t\t\tret.push(commentThread);\n\t\t\t}\n\t\t}\n\n\t\tconst commentingRanges = await this._proxy.$provideCommentingRanges(this.handle, resource, token);\n\n\t\treturn <ICommentInfo>{\n\t\t\towner: this._uniqueId,\n\t\t\tlabel: this.label,\n\t\t\tthreads: ret,\n\t\t\tcommentingRanges: {\n\t\t\t\tresource: resource,\n\t\t\t\tranges: commentingRanges?.ranges || [],\n\t\t\t\tfileComments: commentingRanges?.fileComments\n\t\t\t}\n\t\t};\n\t}\n\n\tasync getNotebookComments(resource: URI, token: CancellationToken) {\n\t\tif (resource.scheme !== Schemas.vscodeNotebookCell) {\n\t\t\treturn <INotebookCommentInfo>{\n\t\t\t\towner: this._uniqueId,\n\t\t\t\tlabel: this.label,\n\t\t\t\tthreads: []\n\t\t\t};\n\t\t}\n\n\t\tconst ret: languages.CommentThread<IRange | ICellRange>[] = [];\n\t\tfor (const thread of [...this._threads.keys()]) {\n\t\t\tconst commentThread = this._threads.get(thread)!;\n\t\t\tif (commentThread.resource === resource.toString()) {\n\t\t\t\tret.push(commentThread);\n\t\t\t}\n\t\t}\n\n\t\treturn <INotebookCommentInfo>{\n\t\t\towner: this._uniqueId,\n\t\t\tlabel: this.label,\n\t\t\tthreads: ret\n\t\t};\n\t}\n\n\tasync toggleReaction(uri: URI, thread: languages.CommentThread, comment: languages.Comment, reaction: languages.CommentReaction, token: CancellationToken): Promise<void> {\n\t\treturn this._proxy.$toggleReaction(this._handle, thread.commentThreadHandle, uri, comment, reaction);\n\t}\n\n\tgetAllComments(): MainThreadCommentThread<IRange | ICellRange>[] {\n\t\tconst ret: MainThreadCommentThread<IRange | ICellRange>[] = [];\n\t\tfor (const thread of [...this._threads.keys()]) {\n\t\t\tret.push(this._threads.get(thread)!);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tcreateCommentThreadTemplate(resource: UriComponents, range: IRange | undefined): void {\n\t\tthis._proxy.$createCommentThreadTemplate(this.handle, resource, range);\n\t}\n\n\tasync updateCommentThreadTemplate(threadHandle: number, range: IRange) {\n\t\tawait this._proxy.$updateCommentThreadTemplate(this.handle, threadHandle, range);\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: MarshalledId.CommentController,\n\t\t\thandle: this.handle\n\t\t};\n\t}\n}\n\n\nconst commentsViewIcon = registerIcon('comments-view-icon', Codicon.commentDiscussion, localize('commentsViewIcon', 'View icon of the comments view.'));\n\n@extHostNamedCustomer(MainContext.MainThreadComments)\nexport class MainThreadComments extends Disposable implements MainThreadCommentsShape {\n\tprivate readonly _proxy: ExtHostCommentsShape;\n\n\tprivate _handlers = new Map<number, string>();\n\tprivate _commentControllers = new Map<number, MainThreadCommentController>();\n\n\tprivate _activeCommentThread?: MainThreadCommentThread<IRange | ICellRange>;\n\tprivate readonly _activeCommentThreadDisposables = this._register(new DisposableStore());\n\n\tprivate _openViewListener: IDisposable | null = null;\n\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ICommentService private readonly _commentService: ICommentService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IViewDescriptorService private readonly _viewDescriptorService: IViewDescriptorService\n\t) {\n\t\tsuper();\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostComments);\n\t\tthis._commentService.unregisterCommentController();\n\n\t\tthis._register(this._commentService.onDidChangeActiveCommentThread(async thread => {\n\t\t\tconst handle = (thread as MainThreadCommentThread<IRange | ICellRange>).controllerHandle;\n\t\t\tconst controller = this._commentControllers.get(handle);\n\n\t\t\tif (!controller) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._activeCommentThreadDisposables.clear();\n\t\t\tthis._activeCommentThread = thread as MainThreadCommentThread<IRange | ICellRange>;\n\t\t\tcontroller.activeCommentThread = this._activeCommentThread;\n\t\t}));\n\t}\n\n\t$registerCommentController(handle: number, id: string, label: string, extensionId: string): void {\n\t\tconst providerId = `${label}-${extensionId}`;\n\t\tthis._handlers.set(handle, providerId);\n\n\t\tconst provider = new MainThreadCommentController(this._proxy, this._commentService, handle, providerId, id, label, {});\n\t\tthis._commentService.registerCommentController(providerId, provider);\n\t\tthis._commentControllers.set(handle, provider);\n\n\t\tconst commentsPanelAlreadyConstructed = !!this._viewDescriptorService.getViewDescriptorById(COMMENTS_VIEW_ID);\n\t\tif (!commentsPanelAlreadyConstructed) {\n\t\t\tthis.registerView(commentsPanelAlreadyConstructed);\n\t\t}\n\t\tthis.registerViewListeners(commentsPanelAlreadyConstructed);\n\t\tthis._commentService.setWorkspaceComments(String(handle), []);\n\t}\n\n\t$unregisterCommentController(handle: number): void {\n\t\tconst providerId = this._handlers.get(handle);\n\t\tthis._handlers.delete(handle);\n\t\tthis._commentControllers.delete(handle);\n\n\t\tif (typeof providerId !== 'string') {\n\t\t\treturn;\n\t\t\t// throw new Error('unknown handler');\n\t\t} else {\n\t\t\tthis._commentService.unregisterCommentController(providerId);\n\t\t}\n\t}\n\n\t$updateCommentControllerFeatures(handle: number, features: CommentProviderFeatures): void {\n\t\tconst provider = this._commentControllers.get(handle);\n\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tprovider.updateFeatures(features);\n\t}\n\n\t$createCommentThread(handle: number,\n\t\tcommentThreadHandle: number,\n\t\tthreadId: string,\n\t\tresource: UriComponents,\n\t\trange: IRange | ICellRange | undefined,\n\t\textensionId: ExtensionIdentifier,\n\t\tisTemplate: boolean\n\t): languages.CommentThread<IRange | ICellRange> | undefined {\n\t\tconst provider = this._commentControllers.get(handle);\n\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn provider.createCommentThread(extensionId.value, commentThreadHandle, threadId, resource, range, isTemplate);\n\t}\n\n\t$updateCommentThread(handle: number,\n\t\tcommentThreadHandle: number,\n\t\tthreadId: string,\n\t\tresource: UriComponents,\n\t\tchanges: CommentThreadChanges): void {\n\t\tconst provider = this._commentControllers.get(handle);\n\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn provider.updateCommentThread(commentThreadHandle, threadId, resource, changes);\n\t}\n\n\t$deleteCommentThread(handle: number, commentThreadHandle: number) {\n\t\tconst provider = this._commentControllers.get(handle);\n\n\t\tif (!provider) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn provider.deleteCommentThread(commentThreadHandle);\n\t}\n\n\t$updateCommentingRanges(handle: number) {\n\t\tconst provider = this._commentControllers.get(handle);\n\n\t\tif (!provider) {\n\t\t\treturn;\n\t\t}\n\n\t\tprovider.updateCommentingRanges();\n\t}\n\n\tprivate registerView(commentsViewAlreadyRegistered: boolean) {\n\t\tif (!commentsViewAlreadyRegistered) {\n\t\t\tconst VIEW_CONTAINER: ViewContainer = Registry.as<IViewContainersRegistry>(ViewExtensions.ViewContainersRegistry).registerViewContainer({\n\t\t\t\tid: COMMENTS_VIEW_ID,\n\t\t\t\ttitle: { value: COMMENTS_VIEW_TITLE, original: COMMENTS_VIEW_ORIGINAL_TITLE },\n\t\t\t\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [COMMENTS_VIEW_ID, { mergeViewWithContainerWhenSingleView: true }]),\n\t\t\t\tstorageId: COMMENTS_VIEW_STORAGE_ID,\n\t\t\t\thideIfEmpty: true,\n\t\t\t\ticon: commentsViewIcon,\n\t\t\t\torder: 10,\n\t\t\t}, ViewContainerLocation.Panel);\n\n\t\t\tRegistry.as<IViewsRegistry>(ViewExtensions.ViewsRegistry).registerViews([{\n\t\t\t\tid: COMMENTS_VIEW_ID,\n\t\t\t\tname: COMMENTS_VIEW_TITLE,\n\t\t\t\tcanToggleVisibility: false,\n\t\t\t\tctorDescriptor: new SyncDescriptor(CommentsPanel),\n\t\t\t\tcanMoveView: true,\n\t\t\t\tcontainerIcon: commentsViewIcon,\n\t\t\t\tfocusCommand: {\n\t\t\t\t\tid: 'workbench.action.focusCommentsPanel'\n\t\t\t\t}\n\t\t\t}], VIEW_CONTAINER);\n\t\t}\n\t}\n\n\tprivate setComments() {\n\t\t[...this._commentControllers.keys()].forEach(handle => {\n\t\t\tconst threads = this._commentControllers.get(handle)!.getAllComments();\n\n\t\t\tif (threads.length) {\n\t\t\t\tconst providerId = this.getHandler(handle);\n\t\t\t\tthis._commentService.setWorkspaceComments(providerId, threads);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate registerViewOpenedListener() {\n\t\tif (!this._openViewListener) {\n\t\t\tthis._openViewListener = this._viewsService.onDidChangeViewVisibility(e => {\n\t\t\t\tif (e.id === COMMENTS_VIEW_ID && e.visible) {\n\t\t\t\t\tthis.setComments();\n\t\t\t\t\tif (this._openViewListener) {\n\t\t\t\t\t\tthis._openViewListener.dispose();\n\t\t\t\t\t\tthis._openViewListener = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * If the comments view has never been opened, the constructor for it has not yet run so it has\n\t * no listeners for comment threads being set or updated. Listen for the view opening for the\n\t * first time and send it comments then.\n\t */\n\tprivate registerViewListeners(commentsPanelAlreadyConstructed: boolean) {\n\t\tif (!commentsPanelAlreadyConstructed) {\n\t\t\tthis.registerViewOpenedListener();\n\t\t}\n\n\t\tthis._register(this._viewDescriptorService.onDidChangeContainer(e => {\n\t\t\tif (e.views.find(view => view.id === COMMENTS_VIEW_ID)) {\n\t\t\t\tthis.setComments();\n\t\t\t\tthis.registerViewOpenedListener();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._viewDescriptorService.onDidChangeContainerLocation(e => {\n\t\t\tconst commentsContainer = this._viewDescriptorService.getViewContainerByViewId(COMMENTS_VIEW_ID);\n\t\t\tif (e.viewContainer.id === commentsContainer?.id) {\n\t\t\t\tthis.setComments();\n\t\t\t\tthis.registerViewOpenedListener();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate getHandler(handle: number) {\n\t\tif (!this._handlers.has(handle)) {\n\t\t\tthrow new Error('Unknown handler');\n\t\t}\n\t\treturn this._handlers.get(handle)!;\n\t}\n}\n"]}