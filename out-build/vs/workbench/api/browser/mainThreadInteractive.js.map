{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadInteractive.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IASzF,IAAM,IAAI,GAAV,MAAM,IAAI;QAKhB,YACC,cAA+B,EACF,0BAAgC;YAJ7C,MAAC,GAAc,IAAI,eAAG,EAAc,CAAC;YAMrD,IAAI,CAAC,CAAC,GAAQ,cAAc,CAAC,QAAQ,CAAC,sBAAG,CAAY,kBAAkB,CAAC,CAAC;YAEzE,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,0BAA0B,CAAC,4BAA4B,CAAC,CAAC,CAAC,EAAE,EAAE;gBACnF,IAAI,CAAC,CAAC,CAAM,2BAA2B,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,mBAAG,EAAoB,CAAC,CAAC,WAAW,CAAC,CAAC;YACjG,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,0BAA0B,CAAC,+BAA+B,CAAC,CAAC,CAAC,EAAE,EAAE;gBACtF,IAAI,CAAC,CAAC,CAAM,8BAA8B,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAY,OAAO,EAAE,CAAC;QAE7B,CAAC;KACD,CAAA;IAxBY,oBAAI;mBAAJ,IAAI;QADhB,IAAA,uBAAI,EAAiB,sBAAG,CAAS,qBAAqB,CAAC;QAQrD,WAAA,iCAAI,CAAA;OAPM,IAAI,CAwBhB","file":"mainThreadInteractive.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { ExtHostContext, ExtHostInteractiveShape, MainContext, MainThreadInteractiveShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { extHostNamedCustomer, IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { IInteractiveDocumentService } from 'vs/workbench/contrib/interactive/browser/interactiveDocumentService';\n\n@extHostNamedCustomer(MainContext.MainThreadInteractive)\nexport class MainThreadInteractive implements MainThreadInteractiveShape {\n\tprivate readonly _proxy: ExtHostInteractiveShape;\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IInteractiveDocumentService interactiveDocumentService: IInteractiveDocumentService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostInteractive);\n\n\t\tthis._disposables.add(interactiveDocumentService.onWillAddInteractiveDocument((e) => {\n\t\t\tthis._proxy.$willAddInteractiveDocument(e.inputUri, '\\n', PLAINTEXT_LANGUAGE_ID, e.notebookUri);\n\t\t}));\n\n\t\tthis._disposables.add(interactiveDocumentService.onWillRemoveInteractiveDocument((e) => {\n\t\t\tthis._proxy.$willRemoveInteractiveDocument(e.inputUri, e.notebookUri);\n\t\t}));\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\n\t}\n}\n"]}