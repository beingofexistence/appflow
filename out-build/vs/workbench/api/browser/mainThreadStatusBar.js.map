{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadStatusBar.ts"],"names":[],"mappings":"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","file":"mainThreadStatusBar.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainThreadStatusBarShape, MainContext, ExtHostContext, StatusBarItemDto } from '../common/extHost.protocol';\nimport { ThemeColor } from 'vs/base/common/themables';\nimport { extHostNamedCustomer, IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { Command } from 'vs/editor/common/languages';\nimport { IAccessibilityInformation } from 'vs/platform/accessibility/common/accessibility';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IExtensionStatusBarItemService, StatusBarUpdateKind } from 'vs/workbench/api/browser/statusBarExtensionPoint';\nimport { IStatusbarEntry, StatusbarAlignment } from 'vs/workbench/services/statusbar/browser/statusbar';\n\n@extHostNamedCustomer(MainContext.MainThreadStatusBar)\nexport class MainThreadStatusBar implements MainThreadStatusBarShape {\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IExtensionStatusBarItemService private readonly statusbarService: IExtensionStatusBarItemService\n\t) {\n\t\tconst proxy = extHostContext.getProxy(ExtHostContext.ExtHostStatusBar);\n\n\t\t// once, at startup read existing items and send them over\n\t\tconst entries: StatusBarItemDto[] = [];\n\t\tfor (const [entryId, item] of statusbarService.getEntries()) {\n\t\t\tentries.push(asDto(entryId, item));\n\t\t}\n\n\t\tproxy.$acceptStaticEntries(entries);\n\n\t\tthis._store.add(statusbarService.onDidChange(e => {\n\t\t\tif (e.added) {\n\t\t\t\tproxy.$acceptStaticEntries([asDto(e.added[0], e.added[1])]);\n\t\t\t}\n\t\t}));\n\n\t\tfunction asDto(entryId: string, item: { entry: IStatusbarEntry; alignment: StatusbarAlignment; priority: number }): StatusBarItemDto {\n\t\t\treturn {\n\t\t\t\tentryId,\n\t\t\t\tname: item.entry.name,\n\t\t\t\ttext: item.entry.text,\n\t\t\t\ttooltip: item.entry.tooltip as string | undefined,\n\t\t\t\tcommand: typeof item.entry.command === 'string' ? item.entry.command : typeof item.entry.command === 'object' ? item.entry.command.id : undefined,\n\t\t\t\tpriority: item.priority,\n\t\t\t\talignLeft: item.alignment === StatusbarAlignment.LEFT,\n\t\t\t\taccessibilityInformation: item.entry.ariaLabel ? { label: item.entry.ariaLabel, role: item.entry.role } : undefined\n\t\t\t};\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._store.dispose();\n\t}\n\n\t$setEntry(entryId: string, id: string, extensionId: string | undefined, name: string, text: string, tooltip: IMarkdownString | string | undefined, command: Command | undefined, color: string | ThemeColor | undefined, backgroundColor: ThemeColor | undefined, alignLeft: boolean, priority: number | undefined, accessibilityInformation: IAccessibilityInformation | undefined): void {\n\t\tconst kind = this.statusbarService.setOrUpdateEntry(entryId, id, extensionId, name, text, tooltip, command, color, backgroundColor, alignLeft, priority, accessibilityInformation);\n\t\tif (kind === StatusBarUpdateKind.DidDefine) {\n\t\t\tthis._store.add(toDisposable(() => this.statusbarService.unsetEntry(entryId)));\n\t\t}\n\t}\n\n\t$disposeEntry(entryId: string) {\n\t\tthis.statusbarService.unsetEntry(entryId);\n\t}\n}\n"]}