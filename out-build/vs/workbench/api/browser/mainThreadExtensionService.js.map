{"version":3,"sources":["vs/workbench/api/browser/mainThreadExtensionService.ts"],"names":[],"mappings":"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","file":"mainThreadExtensionService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from 'vs/base/common/actions';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { SerializedError } from 'vs/base/common/errors';\nimport { FileAccess } from 'vs/base/common/network';\nimport Severity from 'vs/base/common/severity';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IRemoteConnectionData, ManagedRemoteConnection, RemoteConnection, RemoteConnectionType, ResolvedAuthority, WebSocketRemoteConnection } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { ExtHostContext, ExtHostExtensionServiceShape, MainContext, MainThreadExtensionServiceShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { IExtension, IExtensionsWorkbenchService } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { EnablementState, IWorkbenchExtensionEnablementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { ExtensionHostKind } from 'vs/workbench/services/extensions/common/extensionHostKind';\nimport { IExtensionDescriptionDelta } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\nimport { IExtensionHostProxy, IResolveAuthorityResult } from 'vs/workbench/services/extensions/common/extensionHostProxy';\nimport { ActivationKind, ExtensionActivationReason, IExtensionService, IInternalExtensionService, MissingExtensionDependency } from 'vs/workbench/services/extensions/common/extensions';\nimport { extHostNamedCustomer, IExtHostContext, IInternalExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { Dto } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { ITimerService } from 'vs/workbench/services/timer/browser/timerService';\n\n@extHostNamedCustomer(MainContext.MainThreadExtensionService)\nexport class MainThreadExtensionService implements MainThreadExtensionServiceShape {\n\n\tprivate readonly _extensionHostKind: ExtensionHostKind;\n\tprivate readonly _internalExtensionService: IInternalExtensionService;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IExtensionsWorkbenchService private readonly _extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IHostService private readonly _hostService: IHostService,\n\t\t@IWorkbenchExtensionEnablementService private readonly _extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@ITimerService private readonly _timerService: ITimerService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IWorkbenchEnvironmentService protected readonly _environmentService: IWorkbenchEnvironmentService,\n\t) {\n\t\tthis._extensionHostKind = extHostContext.extensionHostKind;\n\n\t\tconst internalExtHostContext = (<IInternalExtHostContext>extHostContext);\n\t\tthis._internalExtensionService = internalExtHostContext.internalExtensionService;\n\t\tinternalExtHostContext._setExtensionHostProxy(\n\t\t\tnew ExtensionHostProxy(extHostContext.getProxy(ExtHostContext.ExtHostExtensionService))\n\t\t);\n\t\tinternalExtHostContext._setAllMainProxyIdentifiers(Object.keys(MainContext).map((key) => (<any>MainContext)[key]));\n\t}\n\n\tpublic dispose(): void {\n\t}\n\n\t$getExtension(extensionId: string) {\n\t\treturn this._extensionService.getExtension(extensionId);\n\t}\n\t$activateExtension(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\treturn this._internalExtensionService._activateById(extensionId, reason);\n\t}\n\tasync $onWillActivateExtension(extensionId: ExtensionIdentifier): Promise<void> {\n\t\tthis._internalExtensionService._onWillActivateExtension(extensionId);\n\t}\n\t$onDidActivateExtension(extensionId: ExtensionIdentifier, codeLoadingTime: number, activateCallTime: number, activateResolvedTime: number, activationReason: ExtensionActivationReason): void {\n\t\tthis._internalExtensionService._onDidActivateExtension(extensionId, codeLoadingTime, activateCallTime, activateResolvedTime, activationReason);\n\t}\n\t$onExtensionRuntimeError(extensionId: ExtensionIdentifier, data: SerializedError): void {\n\t\tconst error = new Error();\n\t\terror.name = data.name;\n\t\terror.message = data.message;\n\t\terror.stack = data.stack;\n\t\tthis._internalExtensionService._onExtensionRuntimeError(extensionId, error);\n\t\tconsole.error(`[${extensionId.value}]${error.message}`);\n\t\tconsole.error(error.stack);\n\t}\n\tasync $onExtensionActivationError(extensionId: ExtensionIdentifier, data: SerializedError, missingExtensionDependency: MissingExtensionDependency | null): Promise<void> {\n\t\tconst error = new Error();\n\t\terror.name = data.name;\n\t\terror.message = data.message;\n\t\terror.stack = data.stack;\n\n\t\tthis._internalExtensionService._onDidActivateExtensionError(extensionId, error);\n\n\t\tif (missingExtensionDependency) {\n\t\t\tconst extension = await this._extensionService.getExtension(extensionId.value);\n\t\t\tif (extension) {\n\t\t\t\tconst local = await this._extensionsWorkbenchService.queryLocal();\n\t\t\t\tconst installedDependency = local.find(i => areSameExtensions(i.identifier, { id: missingExtensionDependency.dependency }));\n\t\t\t\tif (installedDependency?.local) {\n\t\t\t\t\tawait this._handleMissingInstalledDependency(extension, installedDependency.local);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tawait this._handleMissingNotInstalledDependency(extension, missingExtensionDependency.dependency);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst isDev = !this._environmentService.isBuilt || this._environmentService.isExtensionDevelopment;\n\t\tif (isDev) {\n\t\t\tthis._notificationService.error(error);\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.error(error.message);\n\t}\n\n\tprivate async _handleMissingInstalledDependency(extension: IExtensionDescription, missingInstalledDependency: ILocalExtension): Promise<void> {\n\t\tconst extName = extension.displayName || extension.name;\n\t\tif (this._extensionEnablementService.isEnabled(missingInstalledDependency)) {\n\t\t\tthis._notificationService.notify({\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tmessage: localize('reload window', \"Cannot activate the '{0}' extension because it depends on the '{1}' extension, which is not loaded. Would you like to reload the window to load the extension?\", extName, missingInstalledDependency.manifest.displayName || missingInstalledDependency.manifest.name),\n\t\t\t\tactions: {\n\t\t\t\t\tprimary: [new Action('reload', localize('reload', \"Reload Window\"), '', true, () => this._hostService.reload())]\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tconst enablementState = this._extensionEnablementService.getEnablementState(missingInstalledDependency);\n\t\t\tif (enablementState === EnablementState.DisabledByVirtualWorkspace) {\n\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize('notSupportedInWorkspace', \"Cannot activate the '{0}' extension because it depends on the '{1}' extension which is not supported in the current workspace\", extName, missingInstalledDependency.manifest.displayName || missingInstalledDependency.manifest.name),\n\t\t\t\t});\n\t\t\t} else if (enablementState === EnablementState.DisabledByTrustRequirement) {\n\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize('restrictedMode', \"Cannot activate the '{0}' extension because it depends on the '{1}' extension which is not supported in Restricted Mode\", extName, missingInstalledDependency.manifest.displayName || missingInstalledDependency.manifest.name),\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [new Action('manageWorkspaceTrust', localize('manageWorkspaceTrust', \"Manage Workspace Trust\"), '', true,\n\t\t\t\t\t\t\t() => this._commandService.executeCommand('workbench.trust.manage'))]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (this._extensionEnablementService.canChangeEnablement(missingInstalledDependency)) {\n\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize('disabledDep', \"Cannot activate the '{0}' extension because it depends on the '{1}' extension which is disabled. Would you like to enable the extension and reload the window?\", extName, missingInstalledDependency.manifest.displayName || missingInstalledDependency.manifest.name),\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [new Action('enable', localize('enable dep', \"Enable and Reload\"), '', true,\n\t\t\t\t\t\t\t() => this._extensionEnablementService.setEnablement([missingInstalledDependency], enablementState === EnablementState.DisabledGlobally ? EnablementState.EnabledGlobally : EnablementState.EnabledWorkspace)\n\t\t\t\t\t\t\t\t.then(() => this._hostService.reload(), e => this._notificationService.error(e)))]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize('disabledDepNoAction', \"Cannot activate the '{0}' extension because it depends on the '{1}' extension which is disabled.\", extName, missingInstalledDependency.manifest.displayName || missingInstalledDependency.manifest.name),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _handleMissingNotInstalledDependency(extension: IExtensionDescription, missingDependency: string): Promise<void> {\n\t\tconst extName = extension.displayName || extension.name;\n\t\tlet dependencyExtension: IExtension | null = null;\n\t\ttry {\n\t\t\tdependencyExtension = (await this._extensionsWorkbenchService.getExtensions([{ id: missingDependency }], CancellationToken.None))[0];\n\t\t} catch (err) {\n\t\t}\n\t\tif (dependencyExtension) {\n\t\t\tthis._notificationService.notify({\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tmessage: localize('uninstalledDep', \"Cannot activate the '{0}' extension because it depends on the '{1}' extension, which is not installed. Would you like to install the extension and reload the window?\", extName, dependencyExtension.displayName),\n\t\t\t\tactions: {\n\t\t\t\t\tprimary: [new Action('install', localize('install missing dep', \"Install and Reload\"), '', true,\n\t\t\t\t\t\t() => this._extensionsWorkbenchService.install(dependencyExtension!)\n\t\t\t\t\t\t\t.then(() => this._hostService.reload(), e => this._notificationService.error(e)))]\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis._notificationService.error(localize('unknownDep', \"Cannot activate the '{0}' extension because it depends on an unknown '{1}' extension.\", extName, missingDependency));\n\t\t}\n\t}\n\n\tasync $setPerformanceMarks(marks: PerformanceMark[]): Promise<void> {\n\t\tif (this._extensionHostKind === ExtensionHostKind.LocalProcess) {\n\t\t\tthis._timerService.setPerformanceMarks('localExtHost', marks);\n\t\t} else if (this._extensionHostKind === ExtensionHostKind.LocalWebWorker) {\n\t\t\tthis._timerService.setPerformanceMarks('workerExtHost', marks);\n\t\t} else {\n\t\t\tthis._timerService.setPerformanceMarks('remoteExtHost', marks);\n\t\t}\n\t}\n\n\tasync $asBrowserUri(uri: UriComponents): Promise<UriComponents> {\n\t\treturn FileAccess.uriToBrowserUri(URI.revive(uri));\n\t}\n}\n\nclass ExtensionHostProxy implements IExtensionHostProxy {\n\tconstructor(\n\t\tprivate readonly _actual: ExtHostExtensionServiceShape\n\t) { }\n\n\tasync resolveAuthority(remoteAuthority: string, resolveAttempt: number): Promise<IResolveAuthorityResult> {\n\t\tconst resolved = reviveResolveAuthorityResult(await this._actual.$resolveAuthority(remoteAuthority, resolveAttempt));\n\t\treturn resolved;\n\t}\n\tasync getCanonicalURI(remoteAuthority: string, uri: URI): Promise<URI | null> {\n\t\tconst uriComponents = await this._actual.$getCanonicalURI(remoteAuthority, uri);\n\t\treturn (uriComponents ? URI.revive(uriComponents) : uriComponents);\n\t}\n\tstartExtensionHost(extensionsDelta: IExtensionDescriptionDelta): Promise<void> {\n\t\treturn this._actual.$startExtensionHost(extensionsDelta);\n\t}\n\textensionTestsExecute(): Promise<number> {\n\t\treturn this._actual.$extensionTestsExecute();\n\t}\n\tactivateByEvent(activationEvent: string, activationKind: ActivationKind): Promise<void> {\n\t\treturn this._actual.$activateByEvent(activationEvent, activationKind);\n\t}\n\tactivate(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<boolean> {\n\t\treturn this._actual.$activate(extensionId, reason);\n\t}\n\tsetRemoteEnvironment(env: { [key: string]: string | null }): Promise<void> {\n\t\treturn this._actual.$setRemoteEnvironment(env);\n\t}\n\tupdateRemoteConnectionData(connectionData: IRemoteConnectionData): Promise<void> {\n\t\treturn this._actual.$updateRemoteConnectionData(connectionData);\n\t}\n\tdeltaExtensions(extensionsDelta: IExtensionDescriptionDelta): Promise<void> {\n\t\treturn this._actual.$deltaExtensions(extensionsDelta);\n\t}\n\ttest_latency(n: number): Promise<number> {\n\t\treturn this._actual.$test_latency(n);\n\t}\n\ttest_up(b: VSBuffer): Promise<number> {\n\t\treturn this._actual.$test_up(b);\n\t}\n\ttest_down(size: number): Promise<VSBuffer> {\n\t\treturn this._actual.$test_down(size);\n\t}\n}\n\nfunction reviveResolveAuthorityResult(result: Dto<IResolveAuthorityResult>): IResolveAuthorityResult {\n\tif (result.type === 'ok') {\n\t\treturn {\n\t\t\ttype: 'ok',\n\t\t\tvalue: {\n\t\t\t\t...result.value,\n\t\t\t\tauthority: reviveResolvedAuthority(result.value.authority),\n\t\t\t}\n\t\t};\n\t} else {\n\t\treturn result;\n\t}\n}\n\nfunction reviveResolvedAuthority(resolvedAuthority: Dto<ResolvedAuthority>): ResolvedAuthority {\n\treturn {\n\t\t...resolvedAuthority,\n\t\tconnectTo: reviveConnection(resolvedAuthority.connectTo),\n\t};\n}\n\nfunction reviveConnection(connection: Dto<RemoteConnection>): RemoteConnection {\n\tif (connection.type === RemoteConnectionType.WebSocket) {\n\t\treturn new WebSocketRemoteConnection(connection.host, connection.port);\n\t}\n\treturn new ManagedRemoteConnection(connection.id);\n}\n"]}