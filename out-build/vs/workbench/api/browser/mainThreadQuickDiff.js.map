{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadQuickDiff.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAUzF,IAAM,IAAI,GAAV,MAAM,IAAI;QAMhB,YACC,cAA+B,EACZ,CAAuC;YAAtB,MAAC,GAAD,CAAC,CAAqB;YALnD,MAAC,GAAW,IAAI,GAAG,EAA6B,CAAC;YACjD,MAAC,GAAqB,IAAI,GAAG,EAAuB,CAAC;YAM5D,IAAI,CAAC,CAAC,GAAO,cAAc,CAAC,QAAQ,CAAC,sBAAG,CAAY,gBAAgB,CAAC,CAAC;QACvE,CAAC;QAED,KAAK,CAAC,0BAA0B,CAAC,MAAc,EAAE,QAA8B,EAAE,KAAa,EAAE,OAAkC;YACjI,MAAM,QAAQ,GAAsB;gBACnC,KAAK;gBACL,OAAO,EAAE,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC;gBAC5B,QAAQ;gBACR,KAAK,EAAE,KAAK;gBACZ,mBAAmB,EAAE,KAAK,EAAE,GAAQ,EAAE,EAAE;oBACvC,OAAO,SAAG,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,CAAK,wBAAwB,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,kBAAG,EAAsB,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChH,CAAC;aACD,CAAC;YACF,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACrC,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAgB,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YACxE,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAClD,CAAC;QAED,KAAK,CAAC,4BAA4B,CAAC,MAAc;YAChD,IAAI,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,MAAM,CAAC,EAAE;gBAC/B,IAAI,CAAC,CAAC,CAAS,MAAM,CAAC,MAAM,CAAC,CAAC;aAC9B;YACD,IAAI,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,MAAM,CAAC,EAAE;gBACzC,IAAI,CAAC,CAAC,CAAmB,MAAM,CAAC,MAAM,CAAC,CAAC;aACxC;QACF,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAS,KAAK,EAAE,CAAC;YACvB,IAAA,eAAG,EAAK,IAAI,CAAC,CAAC,CAAmB,MAAM,EAAE,CAAC,CAAC;YAC3C,IAAI,CAAC,CAAC,CAAmB,KAAK,EAAE,CAAC;QAClC,CAAC;KACD,CAAA;IA1CY,oBAAI;mBAAJ,IAAI;QADhB,IAAA,uBAAI,EAAiB,sBAAG,CAAS,mBAAmB,CAAC;QASnD,WAAA,gBAAI,CAAA;OARM,IAAI,CA0ChB","file":"mainThreadQuickDiff.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ExtHostContext, ExtHostQuickDiffShape, IDocumentFilterDto, MainContext, MainThreadQuickDiffShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { IQuickDiffService, QuickDiffProvider } from 'vs/workbench/contrib/scm/common/quickDiff';\nimport { extHostNamedCustomer, IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\n\n@extHostNamedCustomer(MainContext.MainThreadQuickDiff)\nexport class MainThreadQuickDiff implements MainThreadQuickDiffShape {\n\n\tprivate readonly proxy: ExtHostQuickDiffShape;\n\tprivate providers = new Map<number, QuickDiffProvider>();\n\tprivate providerDisposables = new Map<number, IDisposable>();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IQuickDiffService private readonly quickDiffService: IQuickDiffService\n\t) {\n\t\tthis.proxy = extHostContext.getProxy(ExtHostContext.ExtHostQuickDiff);\n\t}\n\n\tasync $registerQuickDiffProvider(handle: number, selector: IDocumentFilterDto[], label: string, rootUri: UriComponents | undefined): Promise<void> {\n\t\tconst provider: QuickDiffProvider = {\n\t\t\tlabel,\n\t\t\trootUri: URI.revive(rootUri),\n\t\t\tselector,\n\t\t\tisSCM: false,\n\t\t\tgetOriginalResource: async (uri: URI) => {\n\t\t\t\treturn URI.revive(await this.proxy.$provideOriginalResource(handle, uri, new CancellationTokenSource().token));\n\t\t\t}\n\t\t};\n\t\tthis.providers.set(handle, provider);\n\t\tconst disposable = this.quickDiffService.addQuickDiffProvider(provider);\n\t\tthis.providerDisposables.set(handle, disposable);\n\t}\n\n\tasync $unregisterQuickDiffProvider(handle: number): Promise<void> {\n\t\tif (this.providers.has(handle)) {\n\t\t\tthis.providers.delete(handle);\n\t\t}\n\t\tif (this.providerDisposables.has(handle)) {\n\t\t\tthis.providerDisposables.delete(handle);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.providers.clear();\n\t\tdispose(this.providerDisposables.values());\n\t\tthis.providerDisposables.clear();\n\t}\n}\n"]}