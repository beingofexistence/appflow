{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadNotebookEditors.ts"],"names":[],"mappings":"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","file":"mainThreadNotebookEditors.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, dispose } from 'vs/base/common/lifecycle';\nimport { equals } from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { EditorActivation } from 'vs/platform/editor/common/editor';\nimport { getNotebookEditorFromEditorPane, INotebookEditor, INotebookEditorOptions } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { INotebookEditorService } from 'vs/workbench/contrib/notebook/browser/services/notebookEditorService';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { columnToEditorGroup, editorGroupToColumn } from 'vs/workbench/services/editor/common/editorGroupColumn';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { ExtHostContext, ExtHostNotebookEditorsShape, INotebookDocumentShowOptions, INotebookEditorViewColumnInfo, MainThreadNotebookEditorsShape, NotebookEditorRevealType } from '../common/extHost.protocol';\n\nclass MainThreadNotebook {\n\n\tconstructor(\n\t\treadonly editor: INotebookEditor,\n\t\treadonly disposables: DisposableStore\n\t) { }\n\n\tdispose() {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nexport class MainThreadNotebookEditors implements MainThreadNotebookEditorsShape {\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _proxy: ExtHostNotebookEditorsShape;\n\tprivate readonly _mainThreadEditors = new Map<string, MainThreadNotebook>();\n\n\tprivate _currentViewColumnInfo?: INotebookEditorViewColumnInfo;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@INotebookEditorService private readonly _notebookEditorService: INotebookEditorService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostNotebookEditors);\n\n\t\tthis._editorService.onDidActiveEditorChange(() => this._updateEditorViewColumns(), this, this._disposables);\n\t\tthis._editorGroupService.onDidRemoveGroup(() => this._updateEditorViewColumns(), this, this._disposables);\n\t\tthis._editorGroupService.onDidMoveGroup(() => this._updateEditorViewColumns(), this, this._disposables);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tdispose(this._mainThreadEditors.values());\n\t}\n\n\thandleEditorsAdded(editors: readonly INotebookEditor[]): void {\n\n\t\tfor (const editor of editors) {\n\n\t\t\tconst editorDisposables = new DisposableStore();\n\t\t\teditorDisposables.add(editor.onDidChangeVisibleRanges(() => {\n\t\t\t\tthis._proxy.$acceptEditorPropertiesChanged(editor.getId(), { visibleRanges: { ranges: editor.visibleRanges } });\n\t\t\t}));\n\n\t\t\teditorDisposables.add(editor.onDidChangeSelection(() => {\n\t\t\t\tthis._proxy.$acceptEditorPropertiesChanged(editor.getId(), { selections: { selections: editor.getSelections() } });\n\t\t\t}));\n\n\t\t\tconst wrapper = new MainThreadNotebook(editor, editorDisposables);\n\t\t\tthis._mainThreadEditors.set(editor.getId(), wrapper);\n\t\t}\n\t}\n\n\thandleEditorsRemoved(editorIds: readonly string[]): void {\n\t\tfor (const id of editorIds) {\n\t\t\tthis._mainThreadEditors.get(id)?.dispose();\n\t\t\tthis._mainThreadEditors.delete(id);\n\t\t}\n\t}\n\n\tprivate _updateEditorViewColumns(): void {\n\t\tconst result: INotebookEditorViewColumnInfo = Object.create(null);\n\t\tfor (const editorPane of this._editorService.visibleEditorPanes) {\n\t\t\tconst candidate = getNotebookEditorFromEditorPane(editorPane);\n\t\t\tif (candidate && this._mainThreadEditors.has(candidate.getId())) {\n\t\t\t\tresult[candidate.getId()] = editorGroupToColumn(this._editorGroupService, editorPane.group);\n\t\t\t}\n\t\t}\n\t\tif (!equals(result, this._currentViewColumnInfo)) {\n\t\t\tthis._currentViewColumnInfo = result;\n\t\t\tthis._proxy.$acceptEditorViewColumns(result);\n\t\t}\n\t}\n\n\tasync $tryShowNotebookDocument(resource: UriComponents, viewType: string, options: INotebookDocumentShowOptions): Promise<string> {\n\t\tconst editorOptions: INotebookEditorOptions = {\n\t\t\tcellSelections: options.selections,\n\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\tpinned: options.pinned,\n\t\t\t// selection: options.selection,\n\t\t\t// preserve pre 1.38 behaviour to not make group active when preserveFocus: true\n\t\t\t// but make sure to restore the editor to fix https://github.com/microsoft/vscode/issues/79633\n\t\t\tactivation: options.preserveFocus ? EditorActivation.RESTORE : undefined,\n\t\t\toverride: viewType\n\t\t};\n\n\t\tconst editorPane = await this._editorService.openEditor({ resource: URI.revive(resource), options: editorOptions }, columnToEditorGroup(this._editorGroupService, this._configurationService, options.position));\n\t\tconst notebookEditor = getNotebookEditorFromEditorPane(editorPane);\n\n\t\tif (notebookEditor) {\n\t\t\treturn notebookEditor.getId();\n\t\t} else {\n\t\t\tthrow new Error(`Notebook Editor creation failure for document ${JSON.stringify(resource)}`);\n\t\t}\n\t}\n\n\tasync $tryRevealRange(id: string, range: ICellRange, revealType: NotebookEditorRevealType): Promise<void> {\n\t\tconst editor = this._notebookEditorService.getNotebookEditor(id);\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\t\tconst notebookEditor = editor as INotebookEditor;\n\t\tif (!notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (range.start >= notebookEditor.getLength()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cell = notebookEditor.cellAt(range.start);\n\n\t\tswitch (revealType) {\n\t\t\tcase NotebookEditorRevealType.Default:\n\t\t\t\treturn notebookEditor.revealCellRangeInView(range);\n\t\t\tcase NotebookEditorRevealType.InCenter:\n\t\t\t\treturn notebookEditor.revealInCenter(cell);\n\t\t\tcase NotebookEditorRevealType.InCenterIfOutsideViewport:\n\t\t\t\treturn notebookEditor.revealInCenterIfOutsideViewport(cell);\n\t\t\tcase NotebookEditorRevealType.AtTop:\n\t\t\t\treturn notebookEditor.revealInViewAtTop(cell);\n\t\t}\n\t}\n\n\t$trySetSelections(id: string, ranges: ICellRange[]): void {\n\t\tconst editor = this._notebookEditorService.getNotebookEditor(id);\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\teditor.setSelections(ranges);\n\n\t\tif (ranges.length) {\n\t\t\teditor.setFocus({ start: ranges[0].start, end: ranges[0].start + 1 });\n\t\t}\n\t}\n}\n"]}