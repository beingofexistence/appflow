{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadFileSystem.ts"],"names":[],"mappings":"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","file":"mainThreadFileSystem.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, DisposableStore, DisposableMap } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IFileWriteOptions, FileSystemProviderCapabilities, IFileChange, IFileService, IStat, IWatchOptions, FileType, IFileOverwriteOptions, IFileDeleteOptions, IFileOpenOptions, FileOperationError, FileOperationResult, FileSystemProviderErrorCode, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithFileFolderCopyCapability, FilePermission, toFileSystemProviderErrorCode, IFilesConfiguration, IFileStatWithPartialMetadata, IFileStat } from 'vs/platform/files/common/files';\nimport { extHostNamedCustomer, IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { ExtHostContext, ExtHostFileSystemShape, IFileChangeDto, MainContext, MainThreadFileSystemShape } from '../common/extHost.protocol';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IWorkbenchFileService } from 'vs/workbench/services/files/common/files';\nimport { normalizeWatcherPattern } from 'vs/platform/files/common/watcher';\nimport { GLOBSTAR } from 'vs/base/common/glob';\nimport { rtrim } from 'vs/base/common/strings';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\n\n@extHostNamedCustomer(MainContext.MainThreadFileSystem)\nexport class MainThreadFileSystem implements MainThreadFileSystemShape {\n\n\tprivate readonly _proxy: ExtHostFileSystemShape;\n\tprivate readonly _fileProvider = new DisposableMap<number, RemoteFileSystemProvider>();\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _watches = new DisposableMap<number>();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IWorkbenchFileService private readonly _fileService: IWorkbenchFileService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostFileSystem);\n\n\t\tconst infoProxy = extHostContext.getProxy(ExtHostContext.ExtHostFileSystemInfo);\n\n\t\tfor (const entry of _fileService.listCapabilities()) {\n\t\t\tinfoProxy.$acceptProviderInfos(URI.from({ scheme: entry.scheme, path: '/dummy' }), entry.capabilities);\n\t\t}\n\t\tthis._disposables.add(_fileService.onDidChangeFileSystemProviderRegistrations(e => infoProxy.$acceptProviderInfos(URI.from({ scheme: e.scheme, path: '/dummy' }), e.provider?.capabilities ?? null)));\n\t\tthis._disposables.add(_fileService.onDidChangeFileSystemProviderCapabilities(e => infoProxy.$acceptProviderInfos(URI.from({ scheme: e.scheme, path: '/dummy' }), e.provider.capabilities)));\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._fileProvider.dispose();\n\t\tthis._watches.dispose();\n\t}\n\n\tasync $registerFileSystemProvider(handle: number, scheme: string, capabilities: FileSystemProviderCapabilities, readonlyMessage?: IMarkdownString): Promise<void> {\n\t\tthis._fileProvider.set(handle, new RemoteFileSystemProvider(this._fileService, scheme, capabilities, readonlyMessage, handle, this._proxy));\n\t}\n\n\t$unregisterProvider(handle: number): void {\n\t\tthis._fileProvider.deleteAndDispose(handle);\n\t}\n\n\t$onFileSystemChange(handle: number, changes: IFileChangeDto[]): void {\n\t\tconst fileProvider = this._fileProvider.get(handle);\n\t\tif (!fileProvider) {\n\t\t\tthrow new Error('Unknown file provider');\n\t\t}\n\t\tfileProvider.$onFileSystemChange(changes);\n\t}\n\n\n\t// --- consumer fs, vscode.workspace.fs\n\n\t$stat(uri: UriComponents): Promise<IStat> {\n\t\treturn this._fileService.stat(URI.revive(uri)).then(stat => {\n\t\t\treturn {\n\t\t\t\tctime: stat.ctime,\n\t\t\t\tmtime: stat.mtime,\n\t\t\t\tsize: stat.size,\n\t\t\t\tpermissions: stat.readonly ? FilePermission.Readonly : undefined,\n\t\t\t\ttype: MainThreadFileSystem._asFileType(stat)\n\t\t\t};\n\t\t}).catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$readdir(uri: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this._fileService.resolve(URI.revive(uri), { resolveMetadata: false }).then(stat => {\n\t\t\tif (!stat.isDirectory) {\n\t\t\t\tconst err = new Error(stat.name);\n\t\t\t\terr.name = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\treturn !stat.children ? [] : stat.children.map(child => [child.name, MainThreadFileSystem._asFileType(child)] as [string, FileType]);\n\t\t}).catch(MainThreadFileSystem._handleError);\n\t}\n\n\tprivate static _asFileType(stat: IFileStat | IFileStatWithPartialMetadata): FileType {\n\t\tlet res = 0;\n\t\tif (stat.isFile) {\n\t\t\tres += FileType.File;\n\n\t\t} else if (stat.isDirectory) {\n\t\t\tres += FileType.Directory;\n\t\t}\n\t\tif (stat.isSymbolicLink) {\n\t\t\tres += FileType.SymbolicLink;\n\t\t}\n\t\treturn res;\n\t}\n\n\t$readFile(uri: UriComponents): Promise<VSBuffer> {\n\t\treturn this._fileService.readFile(URI.revive(uri)).then(file => file.value).catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$writeFile(uri: UriComponents, content: VSBuffer): Promise<void> {\n\t\treturn this._fileService.writeFile(URI.revive(uri), content)\n\t\t\t.then(() => undefined).catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$rename(source: UriComponents, target: UriComponents, opts: IFileOverwriteOptions): Promise<void> {\n\t\treturn this._fileService.move(URI.revive(source), URI.revive(target), opts.overwrite)\n\t\t\t.then(() => undefined).catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$copy(source: UriComponents, target: UriComponents, opts: IFileOverwriteOptions): Promise<void> {\n\t\treturn this._fileService.copy(URI.revive(source), URI.revive(target), opts.overwrite)\n\t\t\t.then(() => undefined).catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$mkdir(uri: UriComponents): Promise<void> {\n\t\treturn this._fileService.createFolder(URI.revive(uri))\n\t\t\t.then(() => undefined).catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$delete(uri: UriComponents, opts: IFileDeleteOptions): Promise<void> {\n\t\treturn this._fileService.del(URI.revive(uri), opts).catch(MainThreadFileSystem._handleError);\n\t}\n\n\tprivate static _handleError(err: any): never {\n\t\tif (err instanceof FileOperationError) {\n\t\t\tswitch (err.fileOperationResult) {\n\t\t\t\tcase FileOperationResult.FILE_NOT_FOUND:\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileOperationResult.FILE_IS_DIRECTORY:\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileOperationResult.FILE_PERMISSION_DENIED:\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileOperationResult.FILE_MOVE_CONFLICT:\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.FileExists;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (err instanceof Error) {\n\t\t\tconst code = toFileSystemProviderErrorCode(err);\n\t\t\tif (code !== FileSystemProviderErrorCode.Unknown) {\n\t\t\t\terr.name = code;\n\t\t\t}\n\t\t}\n\n\t\tthrow err;\n\t}\n\n\t$ensureActivation(scheme: string): Promise<void> {\n\t\treturn this._fileService.activateProvider(scheme);\n\t}\n\n\tasync $watch(extensionId: string, session: number, resource: UriComponents, unvalidatedOpts: IWatchOptions): Promise<void> {\n\t\tconst uri = URI.revive(resource);\n\t\tconst workspaceFolder = this._contextService.getWorkspaceFolder(uri);\n\n\t\tconst opts = { ...unvalidatedOpts };\n\n\t\t// Convert a recursive watcher to a flat watcher if the path\n\t\t// turns out to not be a folder. Recursive watching is only\n\t\t// possible on folders, so we help all file watchers by checking\n\t\t// early.\n\t\tif (opts.recursive) {\n\t\t\ttry {\n\t\t\t\tconst stat = await this._fileService.stat(uri);\n\t\t\t\tif (!stat.isDirectory) {\n\t\t\t\t\topts.recursive = false;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis._logService.error(`MainThreadFileSystem#$watch(): failed to stat a resource for file watching (extension: ${extensionId}, path: ${uri.toString(true)}, recursive: ${opts.recursive}, session: ${session}): ${error}`);\n\t\t\t}\n\t\t}\n\n\t\t// Refuse to watch anything that is already watched via\n\t\t// our workspace watchers in case the request is a\n\t\t// recursive file watcher.\n\t\t// Still allow for non-recursive watch requests as a way\n\t\t// to bypass configured exclude rules though\n\t\t// (see https://github.com/microsoft/vscode/issues/146066)\n\t\tif (workspaceFolder && opts.recursive) {\n\t\t\tthis._logService.trace(`MainThreadFileSystem#$watch(): ignoring request to start watching because path is inside workspace (extension: ${extensionId}, path: ${uri.toString(true)}, recursive: ${opts.recursive}, session: ${session})`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._logService.trace(`MainThreadFileSystem#$watch(): request to start watching (extension: ${extensionId}, path: ${uri.toString(true)}, recursive: ${opts.recursive}, session: ${session})`);\n\n\t\t// Automatically add `files.watcherExclude` patterns when watching\n\t\t// recursively to give users a chance to configure exclude rules\n\t\t// for reducing the overhead of watching recursively\n\t\tif (opts.recursive) {\n\t\t\tconst config = this._configurationService.getValue<IFilesConfiguration>();\n\t\t\tif (config.files?.watcherExclude) {\n\t\t\t\tfor (const key in config.files.watcherExclude) {\n\t\t\t\t\tif (config.files.watcherExclude[key] === true) {\n\t\t\t\t\t\topts.excludes.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Non-recursive watching inside the workspace will overlap with\n\t\t// our standard workspace watchers. To prevent duplicate events,\n\t\t// we only want to include events for files that are otherwise\n\t\t// excluded via `files.watcherExclude`. As such, we configure\n\t\t// to include each configured exclude pattern so that only those\n\t\t// events are reported that are otherwise excluded.\n\t\t// However, we cannot just use the pattern as is, because a pattern\n\t\t// such as `bar` for a exclude, will work to exclude any of\n\t\t// `<workspace path>/bar` but will not work as include for files within\n\t\t// `bar` unless a suffix of `/**` if added.\n\t\t// (https://github.com/microsoft/vscode/issues/148245)\n\t\telse if (workspaceFolder) {\n\t\t\tconst config = this._configurationService.getValue<IFilesConfiguration>();\n\t\t\tif (config.files?.watcherExclude) {\n\t\t\t\tfor (const key in config.files.watcherExclude) {\n\t\t\t\t\tif (config.files.watcherExclude[key] === true) {\n\t\t\t\t\t\tif (!opts.includes) {\n\t\t\t\t\t\t\topts.includes = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst includePattern = `${rtrim(key, '/')}/${GLOBSTAR}`;\n\t\t\t\t\t\topts.includes.push(normalizeWatcherPattern(workspaceFolder.uri.fsPath, includePattern));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Still ignore watch request if there are actually no configured\n\t\t\t// exclude rules, because in that case our default recursive watcher\n\t\t\t// should be able to take care of all events.\n\t\t\tif (!opts.includes || opts.includes.length === 0) {\n\t\t\t\tthis._logService.trace(`MainThreadFileSystem#$watch(): ignoring request to start watching because path is inside workspace and no excludes are configured (extension: ${extensionId}, path: ${uri.toString(true)}, recursive: ${opts.recursive}, session: ${session})`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst subscription = this._fileService.watch(uri, opts);\n\t\tthis._watches.set(session, subscription);\n\t}\n\n\t$unwatch(session: number): void {\n\t\tif (this._watches.has(session)) {\n\t\t\tthis._logService.trace(`MainThreadFileSystem#$unwatch(): request to stop watching (session: ${session})`);\n\t\t\tthis._watches.deleteAndDispose(session);\n\t\t}\n\t}\n}\n\nclass RemoteFileSystemProvider implements IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly _onDidChange = new Emitter<readonly IFileChange[]>();\n\tprivate readonly _registration: IDisposable;\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]> = this._onDidChange.event;\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void> = Event.None;\n\n\tconstructor(\n\t\tfileService: IFileService,\n\t\tscheme: string,\n\t\tcapabilities: FileSystemProviderCapabilities,\n\t\tpublic readonly readOnlyMessage: IMarkdownString | undefined,\n\t\tprivate readonly _handle: number,\n\t\tprivate readonly _proxy: ExtHostFileSystemShape\n\t) {\n\t\tthis.capabilities = capabilities;\n\t\tthis._registration = fileService.registerProvider(scheme, this);\n\t}\n\n\tdispose(): void {\n\t\tthis._registration.dispose();\n\t\tthis._onDidChange.dispose();\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions) {\n\t\tconst session = Math.random();\n\t\tthis._proxy.$watch(this._handle, session, resource, opts);\n\t\treturn toDisposable(() => {\n\t\t\tthis._proxy.$unwatch(this._handle, session);\n\t\t});\n\t}\n\n\t$onFileSystemChange(changes: IFileChangeDto[]): void {\n\t\tthis._onDidChange.fire(changes.map(RemoteFileSystemProvider._createFileChange));\n\t}\n\n\tprivate static _createFileChange(dto: IFileChangeDto): IFileChange {\n\t\treturn { resource: URI.revive(dto.resource), type: dto.type };\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this._proxy.$stat(this._handle, resource).then(undefined, err => {\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\treadFile(resource: URI): Promise<Uint8Array> {\n\t\treturn this._proxy.$readFile(this._handle, resource).then(buffer => buffer.buffer);\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void> {\n\t\treturn this._proxy.$writeFile(this._handle, resource, VSBuffer.wrap(content), opts);\n\t}\n\n\tdelete(resource: URI, opts: IFileDeleteOptions): Promise<void> {\n\t\treturn this._proxy.$delete(this._handle, resource, opts);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this._proxy.$mkdir(this._handle, resource);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this._proxy.$readdir(this._handle, resource);\n\t}\n\n\trename(resource: URI, target: URI, opts: IFileOverwriteOptions): Promise<void> {\n\t\treturn this._proxy.$rename(this._handle, resource, target, opts);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: IFileOverwriteOptions): Promise<void> {\n\t\treturn this._proxy.$copy(this._handle, resource, target, opts);\n\t}\n\n\topen(resource: URI, opts: IFileOpenOptions): Promise<number> {\n\t\treturn this._proxy.$open(this._handle, resource, opts);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this._proxy.$close(this._handle, fd);\n\t}\n\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this._proxy.$read(this._handle, fd, pos, length).then(readData => {\n\t\t\tdata.set(readData.buffer, offset);\n\t\t\treturn readData.byteLength;\n\t\t});\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this._proxy.$write(this._handle, fd, pos, VSBuffer.wrap(data).slice(offset, offset + length));\n\t}\n}\n"]}