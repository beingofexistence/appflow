{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadNotebookRenderers.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAQzF,IAAM,IAAI,GAAV,MAAM,IAA4B,SAAQ,eAAG;QAGnD,YACC,cAA+B,EACqB,CAAe;YAEnE,KAAK,EAAE,CAAC;YAF4C,MAAC,GAAD,CAAC,CAAc;YAGnE,IAAI,CAAC,CAAC,GAAO,cAAc,CAAC,QAAQ,CAAC,sBAAG,CAAY,wBAAwB,CAAC,CAAC;YAC9E,IAAI,CAAC,CAAC,CAAS,CAAC,CAAS,mBAAmB,CAAC,CAAC,CAAC,EAAE;gBAChD,IAAI,CAAC,CAAC,CAAK,oBAAoB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAED,YAAY,CAAC,QAA4B,EAAE,UAAkB,EAAE,OAAgB;YAC9E,OAAO,IAAI,CAAC,CAAC,CAAS,cAAc,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QACrE,CAAC;KACD,CAAA;IAjBY,oBAAI;mBAAJ,IAAI;QADhB,IAAA,uBAAI,EAAiB,sBAAG,CAAS,2BAA2B,CAAC;QAM3D,WAAA,uCAAI,CAAA;OALM,IAAI,CAiBhB","file":"mainThreadNotebookRenderers.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ExtHostContext, ExtHostNotebookRenderersShape, MainContext, MainThreadNotebookRenderersShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { extHostNamedCustomer, IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { INotebookRendererMessagingService } from 'vs/workbench/contrib/notebook/common/notebookRendererMessagingService';\n\n@extHostNamedCustomer(MainContext.MainThreadNotebookRenderers)\nexport class MainThreadNotebookRenderers extends Disposable implements MainThreadNotebookRenderersShape {\n\tprivate readonly proxy: ExtHostNotebookRenderersShape;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@INotebookRendererMessagingService private readonly messaging: INotebookRendererMessagingService,\n\t) {\n\t\tsuper();\n\t\tthis.proxy = extHostContext.getProxy(ExtHostContext.ExtHostNotebookRenderers);\n\t\tthis._register(messaging.onShouldPostMessage(e => {\n\t\t\tthis.proxy.$postRendererMessage(e.editorId, e.rendererId, e.message);\n\t\t}));\n\t}\n\n\t$postMessage(editorId: string | undefined, rendererId: string, message: unknown): Promise<boolean> {\n\t\treturn this.messaging.receiveMessage(editorId, rendererId, message);\n\t}\n}\n"]}