{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadNotebookKernels.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAoBhG,MAAe,gBAAgB;QAiB9B,IAAW,WAAW;YACrB,OAAO,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACtC,CAAC;QAED,IAAW,eAAe;YACzB,OAAO,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;QAClD,CAAC;QAED,YAAY,IAAyB,EAAU,CAAqB;YAArB,MAAC,GAAD,CAAC,CAAoB;YAxBnD,MAAC,GAAc,IAAI,WAAG,EAAkC,CAAC;YAEjE,gBAAW,GAAsC,IAAI,CAAC,CAAC,CAAY,KAAK,CAAC;YAuBjF,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;YAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;YAElC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,IAAI,KAAK,CAAC;YAC3D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAA,YAAG,EAAa,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAgB,wBAAwB,EAAE,CAAC;YAC3I,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,sBAAsB,IAAI,KAAK,CAAC;YACrE,IAAI,CAAC,iBAAiB,GAAG,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC5D,IAAI,CAAC,CAAC,GAAU,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,SAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QACnG,CAAC;QAGD,MAAM,CAAC,IAAkC;YAExC,MAAM,KAAK,GAA+B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC9D,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;gBAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;aACnB;YACD,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;gBACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;gBACpC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;YACD,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC1B,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;aACpB;YACD,IAAI,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAE;gBAC1C,IAAI,CAAC,kBAAkB,GAAG,IAAA,YAAG,EAAa,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAgB,wBAAwB,EAAE,CAAC;gBAChJ,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC;aAChC;YACD,IAAI,IAAI,CAAC,sBAAsB,KAAK,SAAS,EAAE;gBAC9C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,sBAAsB,CAAC;gBAC5D,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAC/B;YACD,IAAI,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAE;gBACzC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBAClD,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;aACjC;YACD,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;KAID;IAED,MAAM,6BAA6B;QAClC,YAAqB,YAAoB;YAApB,iBAAY,GAAZ,YAAY,CAAQ;QAAI,CAAC;KAC9C;IAGM,IAAM,IAAI,GAAV,MAAM,IAAI;QAehB,YACC,cAA+B,EACb,CAAsC,EAChC,CAA6C,EACrC,CAAoD,EAClE,CAAuC,EACjC,qBAA2B;YAJhB,MAAC,GAAD,CAAC,CAAoB;YACf,MAAC,GAAD,CAAC,CAA2B;YACpB,MAAC,GAAD,CAAC,CAAkC;YACjD,MAAC,GAAD,CAAC,CAAqB;YAlBzC,MAAC,GAAU,IAAI,eAAG,EAA6B,CAAC;YAChD,MAAC,GAAc,IAAI,eAAG,EAAc,CAAC;YAErC,MAAC,GAAU,IAAI,GAAG,EAAgE,CAAC;YACnF,MAAC,GAAuB,IAAI,GAAG,EAA2E,CAAC;YAC3G,MAAC,GAA8B,IAAI,GAAG,EAA6E,CAAC;YACpH,MAAC,GAAgD,IAAI,GAAG,EAAuB,CAAC;YAIhF,MAAC,GAAa,IAAI,GAAG,EAAkC,CAAC;YACxD,MAAC,GAAqB,IAAI,GAAG,EAA8B,CAAC;YAU5E,IAAI,CAAC,CAAC,GAAQ,cAAc,CAAC,QAAQ,CAAC,sBAAG,CAAY,sBAAsB,CAAC,CAAC;YAE7E,qBAAqB,CAAC,mBAAmB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAa,IAAI,CAAC,CAAC;YAC7E,qBAAqB,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,EAAa,IAAI,EAAE,IAAI,CAAC,CAAC,CAAY,CAAC;YACzF,qBAAqB,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,EAAgB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAY,CAAC;YAE/F,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,IAAA,eAAG,EAAU,GAAG,EAAE;gBACvC,2DAA2D;gBAC3D,IAAI,CAAC,CAAC,CAAW,OAAO,CAAC,CAAC,CAAC,EAAE;oBAC5B,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,CAAC,CAAmB,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,IAAI,CAAC,CAAC,CAA8B,oBAAoB,CAAC,CAAC,CAAC,EAAE;gBAClF,IAAI,CAAC,CAAC,IAAI,KAAK,qDAAqB,CAAC,IAAI,EAAE;oBAC1C,IAAI,CAAC,CAAC,CAAM,qBAAqB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC9E;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAY,OAAO,EAAE,CAAC;YAC5B,KAAK,MAAM,CAAC,EAAE,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC,CAAQ,MAAM,EAAE,EAAE;gBACtD,YAAY,CAAC,OAAO,EAAE,CAAC;aACvB;YACD,KAAK,MAAM,CAAC,EAAE,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC,CAAqB,MAAM,EAAE,EAAE;gBACnE,YAAY,CAAC,OAAO,EAAE,CAAC;aACvB;YACD,KAAK,MAAM,CAAC,EAAE,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC,CAA4B,MAAM,EAAE,EAAE;gBAC1E,YAAY,CAAC,OAAO,EAAE,CAAC;aACvB;YACD,IAAI,CAAC,CAAC,CAAQ,OAAO,EAAE,CAAC;QACzB,CAAC;QAED,iBAAiB;QAET,CAAC,CAAY,MAAuB;YAE3C,MAAM,WAAW,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE;gBAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;oBACvB,OAAO;iBACP;gBACD,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAsB,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACrF,IAAI,CAAC,QAAQ,EAAE;oBACd,OAAO;iBACP;gBACD,KAAK,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,EAAS;oBAChD,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;wBAC9B,IAAI,CAAC,CAAC,CAAM,gCAAgC,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;wBAChF,MAAM;qBACN;iBACD;YACF,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACxC,CAAC;QAEO,CAAC,CAAe,MAAuB;YAC9C,IAAI,CAAC,CAAC,CAAQ,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC;QAED,KAAK,CAAC,YAAY,CAAC,MAAc,EAAE,QAA4B,EAAE,OAAY;YAC5E,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,MAAM,CAAC,CAAC;YACxC,IAAI,CAAC,KAAK,EAAE;gBACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;aAC3C;YACD,MAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;YACvB,IAAI,OAAO,GAAG,KAAK,CAAC;YACpB,KAAK,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,EAAS;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;oBACvB,SAAS;iBACT;gBACD,IAAI,IAAI,CAAC,CAAC,CAAsB,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,QAAQ,KAAK,MAAM,EAAE;oBACxF,mBAAmB;oBACnB,SAAS;iBACT;gBACD,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC3B,cAAc;oBACd,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;oBAC5B,OAAO,GAAG,IAAI,CAAC;iBACf;qBAAM,IAAI,MAAM,CAAC,KAAK,EAAE,KAAK,QAAQ,EAAE;oBACvC,mBAAmB;oBACnB,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;oBAC5B,OAAO,GAAG,IAAI,CAAC;oBACf,MAAM;iBACN;aACD;YACD,OAAO,OAAO,CAAC;QAChB,CAAC;QAED,qCAAqC;QAErC,KAAK,CAAC,UAAU,CAAC,MAAc,EAAE,IAAyB;YACzD,MAAM,IAAI,GAAG,IAAI,CAAC;YAClB,MAAM,MAAM,GAAG,IAAI,KAAM,SAAQ,gBAAgB;gBAChD,KAAK,CAAC,2BAA2B,CAAC,GAAQ,EAAE,OAAiB;oBAC5D,MAAM,IAAI,CAAC,CAAC,CAAM,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;gBACvD,CAAC;gBACD,KAAK,CAAC,2BAA2B,CAAC,GAAQ,EAAE,OAAiB;oBAC5D,MAAM,IAAI,CAAC,CAAC,CAAM,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;gBACtD,CAAC;aACD,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAgB,CAAC;YAE/B,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAsB,4BAA4B,CAAC,CAAC,CAAC,EAAE;gBAC7E,IAAI,CAAC,CAAC,SAAS,KAAK,MAAM,CAAC,EAAE,EAAE;oBAC9B,IAAI,CAAC,CAAC,CAAM,0BAA0B,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;iBAClE;qBAAM,IAAI,CAAC,CAAC,SAAS,KAAK,MAAM,CAAC,EAAE,EAAE;oBACrC,IAAI,CAAC,CAAC,CAAM,0BAA0B,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;iBACjE;YACF,CAAC,CAAC,CAAC;YAEH,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAsB,cAAc,CAAC,MAAM,CAAC,CAAC;YACxE,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,IAAA,eAAG,EAAgB,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;QACjF,CAAC;QAED,aAAa,CAAC,MAAc,EAAE,IAAkC;YAC/D,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,MAAM,CAAC,CAAC;YACxC,IAAI,KAAK,EAAE;gBACV,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACtB;QACF,CAAC;QAED,aAAa,CAAC,MAAc;YAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,MAAM,CAAC,CAAC;YACxC,IAAI,KAAK,EAAE;gBACV,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;gBACnB,IAAI,CAAC,CAAC,CAAQ,MAAM,CAAC,MAAM,CAAC,CAAC;aAC7B;QACF,CAAC;QAED,uBAAuB,CAAC,MAAc,EAAE,QAAuB,EAAE,KAAyB;YACzF,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,MAAM,CAAC,CAAC;YACxC,IAAI,KAAK,EAAE;gBACV,IAAI,CAAC,CAAC,CAAsB,4BAA4B,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,SAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;aAChG;QACF,CAAC;QAED,qBAAqB;QAErB,gBAAgB,CAAC,MAAc,EAAE,YAAoB,EAAE,MAAqB,EAAE,UAAkB;YAC/F,MAAM,GAAG,GAAG,SAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAgB,oBAAoB,CAAC,GAAG,CAAC,CAAC;YACjE,IAAI,CAAC,QAAQ,EAAE;gBACd,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;aACzD;YAED,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAsB,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACvE,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE,KAAK,YAAY,EAAE;gBAC5D,MAAM,IAAI,KAAK,CAAC,2BAA2B,MAAM,CAAC,QAAQ,EAAE,EAAE,QAAQ,YAAY,EAAE,CAAC,CAAC;aACtF;YACD,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAA8B,mBAAmB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;YAC3F,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,IAAI,CAAC,CAAC,CAAW,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACzC,CAAC;QAED,gBAAgB,CAAC,MAAc,EAAE,IAA4D;YAC5F,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3B,IAAI;gBACH,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAW,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC/C,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,mCAAW,CAAC,wBAAwB,CAAC,CAAC,CAAC;aACrE;YAAC,OAAO,CAAC,EAAE;gBACX,IAAA,WAAE,EAAgB,CAAC,CAAC,CAAC;aACrB;QACF,CAAC;QAED,kBAAkB,CAAC,MAAc,EAAE,IAA8D;YAChG,IAAI;gBACH,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAW,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC/C,SAAS,EAAE,QAAQ,CAAC,mCAAW,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aACxE;YAAC,OAAO,CAAC,EAAE;gBACX,IAAA,WAAE,EAAgB,CAAC,CAAC,CAAC;aACrB;oBAAS;gBACT,IAAI,CAAC,CAAC,CAAW,MAAM,CAAC,MAAM,CAAC,CAAC;aAChC;QACF,CAAC;QAED,yBAAyB;QAEzB,wBAAwB,CAAC,MAAc,EAAE,YAAoB,EAAE,MAAqB;YACnF,MAAM,GAAG,GAAG,SAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAgB,oBAAoB,CAAC,GAAG,CAAC,CAAC;YACjE,IAAI,CAAC,QAAQ,EAAE;gBACd,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;aACzD;YAED,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAsB,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACvE,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE,KAAK,YAAY,EAAE;gBAC5D,MAAM,IAAI,KAAK,CAAC,2BAA2B,MAAM,CAAC,QAAQ,EAAE,EAAE,QAAQ,YAAY,EAAE,CAAC,CAAC;aACtF;YACD,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAA8B,eAAe,CAAC,GAAG,CAAC,CAAC;YAC3E,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACjD,CAAC;QAED,uBAAuB,CAAC,MAAc;YACrC,IAAI;gBACH,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,MAAM,CAAC,CAAC;gBACvD,SAAS,EAAE,KAAK,EAAE,CAAC;aACnB;YAAC,OAAO,CAAC,EAAE;gBACX,IAAA,WAAE,EAAgB,CAAC,CAAC,CAAC;aACrB;QACF,CAAC;QAED,0BAA0B,CAAC,MAAc;YACxC,IAAI;gBACH,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,MAAM,CAAC,CAAC;gBACvD,SAAS,EAAE,QAAQ,EAAE,CAAC;aACtB;YAAC,OAAO,CAAC,EAAE;gBACX,IAAA,WAAE,EAAgB,CAAC,CAAC,CAAC;aACrB;oBAAS;gBACT,IAAI,CAAC,CAAC,CAAmB,MAAM,CAAC,MAAM,CAAC,CAAC;aACxC;QACF,CAAC;QAED,qCAAqC;QACrC,KAAK,CAAC,uBAAuB,CAAC,MAAc,EAAE,YAAoB;YACjE,MAAM,mBAAmB,GAAG,IAAI,6BAA6B,CAAC,YAAY,CAAC,CAAC;YAC5E,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAsB,mCAAmC,CAAC,mBAAmB,CAAC,CAAC;YAC1G,IAAI,CAAC,CAAC,CAAqB,GAAG,CAAC,MAAM,EAAE,CAAC,mBAAmB,EAAE,YAAY,CAAC,CAAC,CAAC;QAC7E,CAAC;QAED,0BAA0B,CAAC,MAAc;YACxC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAqB,GAAG,CAAC,MAAM,CAAC,CAAC;YACrD,IAAI,KAAK,EAAE;gBACV,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;gBACnB,IAAI,CAAC,CAAC,CAAqB,MAAM,CAAC,MAAM,CAAC,CAAC;aAC1C;QACF,CAAC;QAED,6CAA6C;QAE7C,KAAK,CAAC,8BAA8B,CAAC,MAAc,EAAE,WAAmB,EAAE,YAAoB;YAC7F,MAAM,0BAA0B,GAAgC;gBAC/D,QAAQ,EAAE,YAAY;gBACtB,0BAA0B,EAAE,KAAK,IAAI,EAAE;oBACtC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,CAAC,CAAM,2BAA2B,CAAC,MAAM,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;oBAE9F,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;wBAC3B,IAAI,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;wBACzC,IAAI,MAAM,CAAC,aAAa,IAAI,OAAO,MAAM,CAAC,aAAa,KAAK,QAAQ,EAAE;4BACrE,aAAa,GAAG,SAAG,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;yBACjD;wBAED,OAAO;4BACN,KAAK,EAAE,MAAM,CAAC,KAAK;4BACnB,OAAO,EAAE,MAAM,CAAC,OAAO;4BACvB,WAAW,EAAE,MAAM,CAAC,WAAW;4BAC/B,MAAM,EAAE,MAAM,CAAC,MAAM;4BACrB,aAAa;yBACb,CAAC;oBACH,CAAC,CAAC,CAAC;gBACJ,CAAC;aACD,CAAC;YAEF,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;gBACpC,MAAM,OAAO,GAAG,IAAI,WAAG,EAAY,CAAC;gBACpC,IAAI,CAAC,CAAC,CAA8C,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;gBAC9E,0BAA0B,CAAC,wBAAwB,GAAG,OAAO,CAAC,KAAK,CAAC;aACpE;YAED,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAsB,kCAAkC,CAAC,YAAY,EAAE,0BAA0B,CAAC,CAAC;YAC9H,IAAI,CAAC,CAAC,CAA4B,GAAG,CAAC,MAAM,EAAE,CAAC,0BAA0B,EAAE,YAAY,CAAC,CAAC,CAAC;QAC3F,CAAC;QAED,iCAAiC,CAAC,MAAc,EAAE,WAAmB;YACpE,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAA4B,GAAG,CAAC,MAAM,CAAC,CAAC;YAC5D,IAAI,KAAK,EAAE;gBACV,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;gBACnB,IAAI,CAAC,CAAC,CAA4B,MAAM,CAAC,MAAM,CAAC,CAAC;aACjD;YACD,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;gBACpC,IAAI,CAAC,CAAC,CAA8C,MAAM,CAAC,WAAW,CAAC,CAAC;aACxE;QACF,CAAC;QAED,2CAA2C,CAAC,WAAmB;YAC9D,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAA8C,GAAG,CAAC,WAAW,CAAC,CAAC;YACrF,IAAI,OAAO,YAAY,WAAG,EAAM;gBAC/B,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACxB;QACF,CAAC;KACD,CAAA;IAhTY,oBAAI;mBAAJ,IAAI;QADhB,IAAA,uBAAI,EAAiB,sBAAG,CAAS,yBAAyB,CAAC;QAkBzD,WAAA,cAAG,CAAA;QACH,WAAA,4BAAI,CAAA;QACJ,WAAA,mCAAG,CAAA;QACH,WAAA,sBAAI,CAAA;QACJ,WAAA,4BAAI,CAAA;OArBM,IAAI,CAgThB","file":"mainThreadNotebookKernels.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { combinedDisposable, DisposableMap, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { NotebookDto } from 'vs/workbench/api/browser/mainThreadNotebookDto';\nimport { extHostNamedCustomer, IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { INotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { INotebookEditorService } from 'vs/workbench/contrib/notebook/browser/services/notebookEditorService';\nimport { INotebookCellExecution, INotebookExecution, INotebookExecutionStateService, NotebookExecutionType } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\nimport { IKernelSourceActionProvider, INotebookKernel, INotebookKernelChangeEvent, INotebookKernelDetectionTask, INotebookKernelService } from 'vs/workbench/contrib/notebook/common/notebookKernelService';\nimport { SerializableObjectWithBuffers } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { ExtHostContext, ExtHostNotebookKernelsShape, ICellExecuteUpdateDto, ICellExecutionCompleteDto, INotebookKernelDto2, MainContext, MainThreadNotebookKernelsShape } from '../common/extHost.protocol';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\n\nabstract class MainThreadKernel implements INotebookKernel {\n\tprivate readonly _onDidChange = new Emitter<INotebookKernelChangeEvent>();\n\tprivate readonly preloads: { uri: URI; provides: readonly string[] }[];\n\treadonly onDidChange: Event<INotebookKernelChangeEvent> = this._onDidChange.event;\n\n\treadonly id: string;\n\treadonly viewType: string;\n\treadonly extension: ExtensionIdentifier;\n\n\timplementsInterrupt: boolean;\n\tlabel: string;\n\tdescription?: string;\n\tdetail?: string;\n\tsupportedLanguages: string[];\n\timplementsExecutionOrder: boolean;\n\tlocalResourceRoot: URI;\n\n\tpublic get preloadUris() {\n\t\treturn this.preloads.map(p => p.uri);\n\t}\n\n\tpublic get preloadProvides() {\n\t\treturn this.preloads.map(p => p.provides).flat();\n\t}\n\n\tconstructor(data: INotebookKernelDto2, private _languageService: ILanguageService) {\n\t\tthis.id = data.id;\n\t\tthis.viewType = data.notebookType;\n\t\tthis.extension = data.extensionId;\n\n\t\tthis.implementsInterrupt = data.supportsInterrupt ?? false;\n\t\tthis.label = data.label;\n\t\tthis.description = data.description;\n\t\tthis.detail = data.detail;\n\t\tthis.supportedLanguages = isNonEmptyArray(data.supportedLanguages) ? data.supportedLanguages : _languageService.getRegisteredLanguageIds();\n\t\tthis.implementsExecutionOrder = data.supportsExecutionOrder ?? false;\n\t\tthis.localResourceRoot = URI.revive(data.extensionLocation);\n\t\tthis.preloads = data.preloads?.map(u => ({ uri: URI.revive(u.uri), provides: u.provides })) ?? [];\n\t}\n\n\n\tupdate(data: Partial<INotebookKernelDto2>) {\n\n\t\tconst event: INotebookKernelChangeEvent = Object.create(null);\n\t\tif (data.label !== undefined) {\n\t\t\tthis.label = data.label;\n\t\t\tevent.label = true;\n\t\t}\n\t\tif (data.description !== undefined) {\n\t\t\tthis.description = data.description;\n\t\t\tevent.description = true;\n\t\t}\n\t\tif (data.detail !== undefined) {\n\t\t\tthis.detail = data.detail;\n\t\t\tevent.detail = true;\n\t\t}\n\t\tif (data.supportedLanguages !== undefined) {\n\t\t\tthis.supportedLanguages = isNonEmptyArray(data.supportedLanguages) ? data.supportedLanguages : this._languageService.getRegisteredLanguageIds();\n\t\t\tevent.supportedLanguages = true;\n\t\t}\n\t\tif (data.supportsExecutionOrder !== undefined) {\n\t\t\tthis.implementsExecutionOrder = data.supportsExecutionOrder;\n\t\t\tevent.hasExecutionOrder = true;\n\t\t}\n\t\tif (data.supportsInterrupt !== undefined) {\n\t\t\tthis.implementsInterrupt = data.supportsInterrupt;\n\t\t\tevent.hasInterruptHandler = true;\n\t\t}\n\t\tthis._onDidChange.fire(event);\n\t}\n\n\tabstract executeNotebookCellsRequest(uri: URI, cellHandles: number[]): Promise<void>;\n\tabstract cancelNotebookCellExecution(uri: URI, cellHandles: number[]): Promise<void>;\n}\n\nclass MainThreadKernelDetectionTask implements INotebookKernelDetectionTask {\n\tconstructor(readonly notebookType: string) { }\n}\n\n@extHostNamedCustomer(MainContext.MainThreadNotebookKernels)\nexport class MainThreadNotebookKernels implements MainThreadNotebookKernelsShape {\n\n\tprivate readonly _editors = new DisposableMap<INotebookEditor>();\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _kernels = new Map<number, [kernel: MainThreadKernel, registraion: IDisposable]>();\n\tprivate readonly _kernelDetectionTasks = new Map<number, [task: MainThreadKernelDetectionTask, registraion: IDisposable]>();\n\tprivate readonly _kernelSourceActionProviders = new Map<number, [provider: IKernelSourceActionProvider, registraion: IDisposable]>();\n\tprivate readonly _kernelSourceActionProvidersEventRegistrations = new Map<number, IDisposable>();\n\n\tprivate readonly _proxy: ExtHostNotebookKernelsShape;\n\n\tprivate readonly _executions = new Map<number, INotebookCellExecution>();\n\tprivate readonly _notebookExecutions = new Map<number, INotebookExecution>();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@INotebookKernelService private readonly _notebookKernelService: INotebookKernelService,\n\t\t@INotebookExecutionStateService private readonly _notebookExecutionStateService: INotebookExecutionStateService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@INotebookEditorService notebookEditorService: INotebookEditorService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostNotebookKernels);\n\n\t\tnotebookEditorService.listNotebookEditors().forEach(this._onEditorAdd, this);\n\t\tnotebookEditorService.onDidAddNotebookEditor(this._onEditorAdd, this, this._disposables);\n\t\tnotebookEditorService.onDidRemoveNotebookEditor(this._onEditorRemove, this, this._disposables);\n\n\t\tthis._disposables.add(toDisposable(() => {\n\t\t\t// EH shut down, complete all executions started by this EH\n\t\t\tthis._executions.forEach(e => {\n\t\t\t\te.complete({});\n\t\t\t});\n\t\t\tthis._notebookExecutions.forEach(e => e.complete());\n\t\t}));\n\n\t\tthis._disposables.add(this._notebookExecutionStateService.onDidChangeExecution(e => {\n\t\t\tif (e.type === NotebookExecutionType.cell) {\n\t\t\t\tthis._proxy.$cellExecutionChanged(e.notebook, e.cellHandle, e.changed?.state);\n\t\t\t}\n\t\t}));\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tfor (const [, registration] of this._kernels.values()) {\n\t\t\tregistration.dispose();\n\t\t}\n\t\tfor (const [, registration] of this._kernelDetectionTasks.values()) {\n\t\t\tregistration.dispose();\n\t\t}\n\t\tfor (const [, registration] of this._kernelSourceActionProviders.values()) {\n\t\t\tregistration.dispose();\n\t\t}\n\t\tthis._editors.dispose();\n\t}\n\n\t// --- kernel ipc\n\n\tprivate _onEditorAdd(editor: INotebookEditor) {\n\n\t\tconst ipcListener = editor.onDidReceiveMessage(e => {\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst { selected } = this._notebookKernelService.getMatchingKernel(editor.textModel);\n\t\t\tif (!selected) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (const [handle, candidate] of this._kernels) {\n\t\t\t\tif (candidate[0] === selected) {\n\t\t\t\t\tthis._proxy.$acceptKernelMessageFromRenderer(handle, editor.getId(), e.message);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._editors.set(editor, ipcListener);\n\t}\n\n\tprivate _onEditorRemove(editor: INotebookEditor) {\n\t\tthis._editors.deleteAndDispose(editor);\n\t}\n\n\tasync $postMessage(handle: number, editorId: string | undefined, message: any): Promise<boolean> {\n\t\tconst tuple = this._kernels.get(handle);\n\t\tif (!tuple) {\n\t\t\tthrow new Error('kernel already disposed');\n\t\t}\n\t\tconst [kernel] = tuple;\n\t\tlet didSend = false;\n\t\tfor (const [editor] of this._editors) {\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this._notebookKernelService.getMatchingKernel(editor.textModel).selected !== kernel) {\n\t\t\t\t// different kernel\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (editorId === undefined) {\n\t\t\t\t// all editors\n\t\t\t\teditor.postMessage(message);\n\t\t\t\tdidSend = true;\n\t\t\t} else if (editor.getId() === editorId) {\n\t\t\t\t// selected editors\n\t\t\t\teditor.postMessage(message);\n\t\t\t\tdidSend = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn didSend;\n\t}\n\n\t// --- kernel adding/updating/removal\n\n\tasync $addKernel(handle: number, data: INotebookKernelDto2): Promise<void> {\n\t\tconst that = this;\n\t\tconst kernel = new class extends MainThreadKernel {\n\t\t\tasync executeNotebookCellsRequest(uri: URI, handles: number[]): Promise<void> {\n\t\t\t\tawait that._proxy.$executeCells(handle, uri, handles);\n\t\t\t}\n\t\t\tasync cancelNotebookCellExecution(uri: URI, handles: number[]): Promise<void> {\n\t\t\t\tawait that._proxy.$cancelCells(handle, uri, handles);\n\t\t\t}\n\t\t}(data, this._languageService);\n\n\t\tconst listener = this._notebookKernelService.onDidChangeSelectedNotebooks(e => {\n\t\t\tif (e.oldKernel === kernel.id) {\n\t\t\t\tthis._proxy.$acceptNotebookAssociation(handle, e.notebook, false);\n\t\t\t} else if (e.newKernel === kernel.id) {\n\t\t\t\tthis._proxy.$acceptNotebookAssociation(handle, e.notebook, true);\n\t\t\t}\n\t\t});\n\n\t\tconst registration = this._notebookKernelService.registerKernel(kernel);\n\t\tthis._kernels.set(handle, [kernel, combinedDisposable(listener, registration)]);\n\t}\n\n\t$updateKernel(handle: number, data: Partial<INotebookKernelDto2>): void {\n\t\tconst tuple = this._kernels.get(handle);\n\t\tif (tuple) {\n\t\t\ttuple[0].update(data);\n\t\t}\n\t}\n\n\t$removeKernel(handle: number): void {\n\t\tconst tuple = this._kernels.get(handle);\n\t\tif (tuple) {\n\t\t\ttuple[1].dispose();\n\t\t\tthis._kernels.delete(handle);\n\t\t}\n\t}\n\n\t$updateNotebookPriority(handle: number, notebook: UriComponents, value: number | undefined): void {\n\t\tconst tuple = this._kernels.get(handle);\n\t\tif (tuple) {\n\t\t\tthis._notebookKernelService.updateKernelNotebookAffinity(tuple[0], URI.revive(notebook), value);\n\t\t}\n\t}\n\n\t// --- Cell execution\n\n\t$createExecution(handle: number, controllerId: string, rawUri: UriComponents, cellHandle: number): void {\n\t\tconst uri = URI.revive(rawUri);\n\t\tconst notebook = this._notebookService.getNotebookTextModel(uri);\n\t\tif (!notebook) {\n\t\t\tthrow new Error(`Notebook not found: ${uri.toString()}`);\n\t\t}\n\n\t\tconst kernel = this._notebookKernelService.getMatchingKernel(notebook);\n\t\tif (!kernel.selected || kernel.selected.id !== controllerId) {\n\t\t\tthrow new Error(`Kernel is not selected: ${kernel.selected?.id} !== ${controllerId}`);\n\t\t}\n\t\tconst execution = this._notebookExecutionStateService.createCellExecution(uri, cellHandle);\n\t\texecution.confirm();\n\t\tthis._executions.set(handle, execution);\n\t}\n\n\t$updateExecution(handle: number, data: SerializableObjectWithBuffers<ICellExecuteUpdateDto[]>): void {\n\t\tconst updates = data.value;\n\t\ttry {\n\t\t\tconst execution = this._executions.get(handle);\n\t\t\texecution?.update(updates.map(NotebookDto.fromCellExecuteUpdateDto));\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t}\n\n\t$completeExecution(handle: number, data: SerializableObjectWithBuffers<ICellExecutionCompleteDto>): void {\n\t\ttry {\n\t\t\tconst execution = this._executions.get(handle);\n\t\t\texecution?.complete(NotebookDto.fromCellExecuteCompleteDto(data.value));\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t} finally {\n\t\t\tthis._executions.delete(handle);\n\t\t}\n\t}\n\n\t// --- Notebook execution\n\n\t$createNotebookExecution(handle: number, controllerId: string, rawUri: UriComponents): void {\n\t\tconst uri = URI.revive(rawUri);\n\t\tconst notebook = this._notebookService.getNotebookTextModel(uri);\n\t\tif (!notebook) {\n\t\t\tthrow new Error(`Notebook not found: ${uri.toString()}`);\n\t\t}\n\n\t\tconst kernel = this._notebookKernelService.getMatchingKernel(notebook);\n\t\tif (!kernel.selected || kernel.selected.id !== controllerId) {\n\t\t\tthrow new Error(`Kernel is not selected: ${kernel.selected?.id} !== ${controllerId}`);\n\t\t}\n\t\tconst execution = this._notebookExecutionStateService.createExecution(uri);\n\t\texecution.confirm();\n\t\tthis._notebookExecutions.set(handle, execution);\n\t}\n\n\t$beginNotebookExecution(handle: number): void {\n\t\ttry {\n\t\t\tconst execution = this._notebookExecutions.get(handle);\n\t\t\texecution?.begin();\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t}\n\n\t$completeNotebookExecution(handle: number): void {\n\t\ttry {\n\t\t\tconst execution = this._notebookExecutions.get(handle);\n\t\t\texecution?.complete();\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t} finally {\n\t\t\tthis._notebookExecutions.delete(handle);\n\t\t}\n\t}\n\n\t// --- notebook kernel detection task\n\tasync $addKernelDetectionTask(handle: number, notebookType: string): Promise<void> {\n\t\tconst kernelDetectionTask = new MainThreadKernelDetectionTask(notebookType);\n\t\tconst registration = this._notebookKernelService.registerNotebookKernelDetectionTask(kernelDetectionTask);\n\t\tthis._kernelDetectionTasks.set(handle, [kernelDetectionTask, registration]);\n\t}\n\n\t$removeKernelDetectionTask(handle: number): void {\n\t\tconst tuple = this._kernelDetectionTasks.get(handle);\n\t\tif (tuple) {\n\t\t\ttuple[1].dispose();\n\t\t\tthis._kernelDetectionTasks.delete(handle);\n\t\t}\n\t}\n\n\t// --- notebook kernel source action provider\n\n\tasync $addKernelSourceActionProvider(handle: number, eventHandle: number, notebookType: string): Promise<void> {\n\t\tconst kernelSourceActionProvider: IKernelSourceActionProvider = {\n\t\t\tviewType: notebookType,\n\t\t\tprovideKernelSourceActions: async () => {\n\t\t\t\tconst actions = await this._proxy.$provideKernelSourceActions(handle, CancellationToken.None);\n\n\t\t\t\treturn actions.map(action => {\n\t\t\t\t\tlet documentation = action.documentation;\n\t\t\t\t\tif (action.documentation && typeof action.documentation !== 'string') {\n\t\t\t\t\t\tdocumentation = URI.revive(action.documentation);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: action.label,\n\t\t\t\t\t\tcommand: action.command,\n\t\t\t\t\t\tdescription: action.description,\n\t\t\t\t\t\tdetail: action.detail,\n\t\t\t\t\t\tdocumentation,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tif (typeof eventHandle === 'number') {\n\t\t\tconst emitter = new Emitter<void>();\n\t\t\tthis._kernelSourceActionProvidersEventRegistrations.set(eventHandle, emitter);\n\t\t\tkernelSourceActionProvider.onDidChangeSourceActions = emitter.event;\n\t\t}\n\n\t\tconst registration = this._notebookKernelService.registerKernelSourceActionProvider(notebookType, kernelSourceActionProvider);\n\t\tthis._kernelSourceActionProviders.set(handle, [kernelSourceActionProvider, registration]);\n\t}\n\n\t$removeKernelSourceActionProvider(handle: number, eventHandle: number): void {\n\t\tconst tuple = this._kernelSourceActionProviders.get(handle);\n\t\tif (tuple) {\n\t\t\ttuple[1].dispose();\n\t\t\tthis._kernelSourceActionProviders.delete(handle);\n\t\t}\n\t\tif (typeof eventHandle === 'number') {\n\t\t\tthis._kernelSourceActionProvidersEventRegistrations.delete(eventHandle);\n\t\t}\n\t}\n\n\t$emitNotebookKernelSourceActionsChangeEvent(eventHandle: number): void {\n\t\tconst emitter = this._kernelSourceActionProvidersEventRegistrations.get(eventHandle);\n\t\tif (emitter instanceof Emitter) {\n\t\t\temitter.fire(undefined);\n\t\t}\n\t}\n}\n"]}