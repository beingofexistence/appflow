{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadLanguages.ts"],"names":[],"mappings":"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","file":"mainThreadLanguages.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { MainThreadLanguagesShape, MainContext, ExtHostContext, ExtHostLanguagesShape } from '../common/extHost.protocol';\nimport { extHostNamedCustomer, IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { StandardTokenType } from 'vs/editor/common/encodedTokenAttributes';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { ILanguageStatus, ILanguageStatusService } from 'vs/workbench/services/languageStatus/common/languageStatusService';\nimport { DisposableMap, DisposableStore } from 'vs/base/common/lifecycle';\n\n@extHostNamedCustomer(MainContext.MainThreadLanguages)\nexport class MainThreadLanguages implements MainThreadLanguagesShape {\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _proxy: ExtHostLanguagesShape;\n\n\tprivate readonly _status = new DisposableMap<number>();\n\n\tconstructor(\n\t\t_extHostContext: IExtHostContext,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ITextModelService private _resolverService: ITextModelService,\n\t\t@ILanguageStatusService private readonly _languageStatusService: ILanguageStatusService,\n\t) {\n\t\tthis._proxy = _extHostContext.getProxy(ExtHostContext.ExtHostLanguages);\n\n\t\tthis._proxy.$acceptLanguageIds(_languageService.getRegisteredLanguageIds());\n\t\tthis._disposables.add(_languageService.onDidChange(_ => {\n\t\t\tthis._proxy.$acceptLanguageIds(_languageService.getRegisteredLanguageIds());\n\t\t}));\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._status.dispose();\n\t}\n\n\tasync $changeLanguage(resource: UriComponents, languageId: string): Promise<void> {\n\n\t\tif (!this._languageService.isRegisteredLanguageId(languageId)) {\n\t\t\treturn Promise.reject(new Error(`Unknown language id: ${languageId}`));\n\t\t}\n\n\t\tconst uri = URI.revive(resource);\n\t\tconst ref = await this._resolverService.createModelReference(uri);\n\t\ttry {\n\t\t\tref.object.textEditorModel.setLanguage(this._languageService.createById(languageId));\n\t\t} finally {\n\t\t\tref.dispose();\n\t\t}\n\t}\n\n\tasync $tokensAtPosition(resource: UriComponents, position: IPosition): Promise<undefined | { type: StandardTokenType; range: IRange }> {\n\t\tconst uri = URI.revive(resource);\n\t\tconst model = this._modelService.getModel(uri);\n\t\tif (!model) {\n\t\t\treturn undefined;\n\t\t}\n\t\tmodel.tokenization.tokenizeIfCheap(position.lineNumber);\n\t\tconst tokens = model.tokenization.getLineTokens(position.lineNumber);\n\t\tconst idx = tokens.findTokenIndexAtOffset(position.column - 1);\n\t\treturn {\n\t\t\ttype: tokens.getStandardTokenType(idx),\n\t\t\trange: new Range(position.lineNumber, 1 + tokens.getStartOffset(idx), position.lineNumber, 1 + tokens.getEndOffset(idx))\n\t\t};\n\t}\n\n\t// --- language status\n\n\t$setLanguageStatus(handle: number, status: ILanguageStatus): void {\n\t\tthis._status.get(handle)?.dispose();\n\t\tthis._status.set(handle, this._languageStatusService.addStatus(status));\n\t}\n\n\t$removeLanguageStatus(handle: number): void {\n\t\tthis._status.get(handle)?.dispose();\n\t}\n}\n"]}