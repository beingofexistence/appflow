{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadChatVariables.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAQzF,IAAM,IAAI,GAAV,MAAM,IAAI;QAKhB,YACC,cAA+B,EACR,CAA2C;YAA1B,MAAC,GAAD,CAAC,CAAyB;YAJlD,MAAC,GAAY,IAAI,eAAG,EAAoB,CAAC;YAMzD,IAAI,CAAC,CAAC,GAAQ,cAAc,CAAC,QAAQ,CAAC,sBAAG,CAAY,oBAAoB,CAAC,CAAC;QAC5E,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAU,kBAAkB,EAAE,CAAC;QACtC,CAAC;QAED,iBAAiB,CAAC,MAAc,EAAE,IAAuB;YACxD,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAqB,gBAAgB,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;gBAC3G,OAAO,IAAI,CAAC,CAAC,CAAM,gBAAgB,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAC3C,CAAC;QAED,mBAAmB,CAAC,MAAc;YACjC,IAAI,CAAC,CAAC,CAAU,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC1C,CAAC;KACD,CAAA;IA1BY,oBAAI;mBAAJ,IAAI;QADhB,IAAA,uBAAI,EAAiB,sBAAG,CAAS,uBAAuB,CAAC;QAQvD,WAAA,mBAAG,CAAA;OAPO,IAAI,CA0BhB","file":"mainThreadChatVariables.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableMap } from 'vs/base/common/lifecycle';\nimport { ExtHostChatVariablesShape, ExtHostContext, MainContext, MainThreadChatVariablesShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { IChatVariableData, IChatVariablesService } from 'vs/workbench/contrib/chat/common/chatVariables';\nimport { IExtHostContext, extHostNamedCustomer } from 'vs/workbench/services/extensions/common/extHostCustomers';\n\n@extHostNamedCustomer(MainContext.MainThreadChatVariables)\nexport class MainThreadChatSlashCommands implements MainThreadChatVariablesShape {\n\n\tprivate readonly _proxy: ExtHostChatVariablesShape;\n\tprivate readonly _variables = new DisposableMap<number>();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IChatVariablesService private readonly _chatVariablesService: IChatVariablesService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostChatVariables);\n\t}\n\n\tdispose(): void {\n\t\tthis._variables.clearAndDisposeAll();\n\t}\n\n\t$registerVariable(handle: number, data: IChatVariableData): void {\n\t\tconst registration = this._chatVariablesService.registerVariable(data, (messageText, _arg, _model, token) => {\n\t\t\treturn this._proxy.$resolveVariable(handle, messageText, token);\n\t\t});\n\t\tthis._variables.set(handle, registration);\n\t}\n\n\t$unregisterVariable(handle: number): void {\n\t\tthis._variables.deleteAndDispose(handle);\n\t}\n}\n"]}