{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadErrors.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;IAOzF,IAAM,IAAI,GAAV,MAAM,IAAI;QAEhB,OAAO;YACN,EAAE;QACH,CAAC;QAED,kBAAkB,CAAC,GAA0B;YAC5C,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE;gBACxB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;gBACrC,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,WAAE,EAAgB,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC;gBAC7D,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;gBACtB,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;gBAChB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;aAClB;YACD,IAAA,WAAE,EAAgB,GAAG,CAAC,CAAC;QACxB,CAAC;KACD,CAAA;IAhBY,oBAAI;mBAAJ,IAAI;QADhB,IAAA,uBAAI,EAAiB,sBAAG,CAAS,gBAAgB,CAAC;OACtC,IAAI,CAgBhB","file":"mainThreadErrors.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SerializedError, onUnexpectedError, ErrorNoTelemetry } from 'vs/base/common/errors';\nimport { extHostNamedCustomer } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { MainContext, MainThreadErrorsShape } from 'vs/workbench/api/common/extHost.protocol';\n\n@extHostNamedCustomer(MainContext.MainThreadErrors)\nexport class MainThreadErrors implements MainThreadErrorsShape {\n\n\tdispose(): void {\n\t\t//\n\t}\n\n\t$onUnexpectedError(err: any | SerializedError): void {\n\t\tif (err && err.$isError) {\n\t\t\tconst { name, message, stack } = err;\n\t\t\terr = err.noTelemetry ? new ErrorNoTelemetry() : new Error();\n\t\t\terr.message = message;\n\t\t\terr.name = name;\n\t\t\terr.stack = stack;\n\t\t}\n\t\tonUnexpectedError(err);\n\t}\n}\n"]}