{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadDownloadService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IASzF,IAAM,IAAI,GAAV,MAAM,IAA0B,SAAQ,eAAG;QAEjD,YACC,cAA+B,EACI,CAAoB;YAEvD,KAAK,EAAE,CAAC;YAF2B,MAAC,GAAD,CAAC,CAAmB;QAGxD,CAAC;QAED,SAAS,CAAC,GAAkB,EAAE,EAAiB;YAC9C,OAAO,IAAI,CAAC,CAAC,CAAe,QAAQ,CAAC,SAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,SAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QACvE,CAAC;KAED,CAAA;IAbY,oBAAI;mBAAJ,IAAI;QADhB,IAAA,uBAAI,EAAiB,sBAAG,CAAS,yBAAyB,CAAC;QAKzD,WAAA,cAAG,CAAA;OAJO,IAAI,CAahB","file":"mainThreadDownloadService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { MainContext, MainThreadDownloadServiceShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { extHostNamedCustomer, IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { UriComponents, URI } from 'vs/base/common/uri';\n\n@extHostNamedCustomer(MainContext.MainThreadDownloadService)\nexport class MainThreadDownloadService extends Disposable implements MainThreadDownloadServiceShape {\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IDownloadService private readonly downloadService: IDownloadService\n\t) {\n\t\tsuper();\n\t}\n\n\t$download(uri: UriComponents, to: UriComponents): Promise<void> {\n\t\treturn this.downloadService.download(URI.revive(uri), URI.revive(to));\n\t}\n\n}\n"]}