{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadBulkEdits.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAczF,IAAM,IAAI,GAAV,MAAM,IAAI;QAEhB,YACC,eAAgC,EACG,CAAqB,EAC1B,CAAgB,EACR,CAAqB;YAFxB,MAAC,GAAD,CAAC,CAAoB;YAC1B,MAAC,GAAD,CAAC,CAAe;YACR,MAAC,GAAD,CAAC,CAAoB;QACxD,CAAC;QAEL,OAAO,KAAW,CAAC;QAEnB,sBAAsB,CAAC,GAAsB,EAAE,eAAwB,EAAE,aAAuB;YAC/F,MAAM,KAAK,GAAG,IAAI,CAAmB,GAAG,EAAE,IAAI,CAAC,CAAC,CAAgB,CAAC;YACjE,OAAO,IAAI,CAAC,CAAC,CAAgB,KAAK,CAAC,KAAK,EAAE,EAAE,eAAe,EAAE,qBAAqB,EAAE,aAAa,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE;gBACvI,IAAI,CAAC,CAAC,CAAW,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC,CAAC;gBACzD,OAAO,KAAK,CAAC;YACd,CAAC,CAAC,CAAC;QACJ,CAAC;KACD,CAAA;IAlBY,oBAAI;mBAAJ,IAAI;QADhB,IAAA,uBAAI,EAAiB,sBAAG,CAAS,mBAAmB,CAAC;QAKnD,WAAA,qBAAG,CAAA;QACH,WAAA,SAAG,CAAA;QACH,WAAA,iBAAG,CAAA;OANO,IAAI,CAkBhB;IAID,SAAgB,IAAI,CAAmB,IAAmC,EAAE,kBAAuB,EAAkB,uBAA2D;QAC/K,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACzB,OAAsB,IAAI,CAAC;SAC3B;QACD,MAAM,MAAM,GAAG,IAAA,iBAAG,EAAmB,IAAI,CAAC,CAAC;QAC3C,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,KAAK,EAAE;YAChC,IAAI,qBAAG,CAAc,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC9B,IAAI,CAAC,QAAQ,GAAG,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACjE;YACD,IAAI,qBAAG,CAAc,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC9B,IAAI,IAAI,CAAC,OAAO,EAAE;oBACjB,MAAM,UAAU,GAAI,IAA8B,CAAC,OAAO,EAAE,QAAQ,CAAC;oBACrE,IAAI,UAAU,EAAE;wBACf,IAAI,UAAU,CAAC,IAAI,KAAK,QAAQ,EAAE;4BACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,IAAA,YAAG,EAAU,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;yBACxE;6BAAM;4BACN,IAAI,uBAAuB,EAAE;gCAC5B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,uBAAuB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;6BAC/D;iCAAM;gCACN,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;6BACvD;yBACD;qBACD;iBACD;gBACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC3F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC3F;YACD,IAAI,oBAAI,CAAqB,EAAE,CAAC,IAAI,CAAC,EAAE;gBACtC,IAAI,CAAC,QAAQ,GAAG,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACjE;SACD;QACD,OAAsB,IAAI,CAAC;IAC5B,CAAC;IAhCD,oBAgCC","file":"mainThreadBulkEdits.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer, decodeBase64 } from 'vs/base/common/buffer';\nimport { revive } from 'vs/base/common/marshalling';\nimport { IBulkEditService, ResourceFileEdit, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { WorkspaceEdit } from 'vs/editor/common/languages';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IWorkspaceEditDto, IWorkspaceFileEditDto, MainContext, MainThreadBulkEditsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { ResourceNotebookCellEdit } from 'vs/workbench/contrib/bulkEdit/browser/bulkCellEdits';\nimport { IExtHostContext, extHostNamedCustomer } from 'vs/workbench/services/extensions/common/extHostCustomers';\n\n\n@extHostNamedCustomer(MainContext.MainThreadBulkEdits)\nexport class MainThreadBulkEdits implements MainThreadBulkEditsShape {\n\n\tconstructor(\n\t\t_extHostContext: IExtHostContext,\n\t\t@IBulkEditService private readonly _bulkEditService: IBulkEditService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IUriIdentityService private readonly _uriIdentService: IUriIdentityService\n\t) { }\n\n\tdispose(): void { }\n\n\t$tryApplyWorkspaceEdit(dto: IWorkspaceEditDto, undoRedoGroupId?: number, isRefactoring?: boolean): Promise<boolean> {\n\t\tconst edits = reviveWorkspaceEditDto(dto, this._uriIdentService);\n\t\treturn this._bulkEditService.apply(edits, { undoRedoGroupId, respectAutoSaveConfig: isRefactoring }).then((res) => res.isApplied, err => {\n\t\t\tthis._logService.warn(`IGNORING workspace edit: ${err}`);\n\t\t\treturn false;\n\t\t});\n\t}\n}\n\nexport function reviveWorkspaceEditDto(data: IWorkspaceEditDto, uriIdentityService: IUriIdentityService, resolveDataTransferFile?: (id: string) => Promise<VSBuffer>): WorkspaceEdit;\nexport function reviveWorkspaceEditDto(data: IWorkspaceEditDto | undefined, uriIdentityService: IUriIdentityService, resolveDataTransferFile?: (id: string) => Promise<VSBuffer>): WorkspaceEdit | undefined;\nexport function reviveWorkspaceEditDto(data: IWorkspaceEditDto | undefined, uriIdentityService: IUriIdentityService, resolveDataTransferFile?: (id: string) => Promise<VSBuffer>): WorkspaceEdit | undefined {\n\tif (!data || !data.edits) {\n\t\treturn <WorkspaceEdit>data;\n\t}\n\tconst result = revive<WorkspaceEdit>(data);\n\tfor (const edit of result.edits) {\n\t\tif (ResourceTextEdit.is(edit)) {\n\t\t\tedit.resource = uriIdentityService.asCanonicalUri(edit.resource);\n\t\t}\n\t\tif (ResourceFileEdit.is(edit)) {\n\t\t\tif (edit.options) {\n\t\t\t\tconst inContents = (edit as IWorkspaceFileEditDto).options?.contents;\n\t\t\t\tif (inContents) {\n\t\t\t\t\tif (inContents.type === 'base64') {\n\t\t\t\t\t\tedit.options.contents = Promise.resolve(decodeBase64(inContents.value));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (resolveDataTransferFile) {\n\t\t\t\t\t\t\tedit.options.contents = resolveDataTransferFile(inContents.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('Could not revive data transfer file');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tedit.newResource = edit.newResource && uriIdentityService.asCanonicalUri(edit.newResource);\n\t\t\tedit.oldResource = edit.oldResource && uriIdentityService.asCanonicalUri(edit.oldResource);\n\t\t}\n\t\tif (ResourceNotebookCellEdit.is(edit)) {\n\t\t\tedit.resource = uriIdentityService.asCanonicalUri(edit.resource);\n\t\t}\n\t}\n\treturn <WorkspaceEdit>data;\n}\n"]}