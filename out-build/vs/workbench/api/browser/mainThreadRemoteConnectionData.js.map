{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/browser/mainThreadRemoteConnectionData.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IASzF,IAAM,IAAI,GAAV,MAAM,IAA+B,SAAQ,eAAG;QAItD,YACC,cAA+B,EACkB,CAAwB,EACxC,8BAAmC;YAEpE,KAAK,EAAE,CAAC;YAHyC,MAAC,GAAD,CAAC,CAAuB;YAIzE,IAAI,CAAC,CAAC,GAAQ,cAAc,CAAC,QAAQ,CAAC,sBAAG,CAAY,uBAAuB,CAAC,CAAC;YAE9E,MAAM,eAAe,GAAG,IAAI,CAAC,CAAC,CAAmB,eAAe,CAAC;YACjE,IAAI,eAAe,EAAE;gBACpB,IAAI,CAAC,CAAC,CAAS,8BAA8B,CAAC,yBAAyB,CAAC,GAAG,EAAE;oBAC5E,MAAM,cAAc,GAAG,8BAA8B,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;oBACzF,IAAI,cAAc,EAAE;wBACnB,IAAI,CAAC,CAAC,CAAM,2BAA2B,CAAC,cAAc,CAAC,CAAC;qBACxD;gBACF,CAAC,CAAC,CAAC,CAAC;aACJ;QACF,CAAC;KACD,CAAA;IAtBY,oBAAI;mBAAJ,IAAI;QADhB,uBAAI;QAOF,WAAA,wBAAG,CAAA;QACH,WAAA,6BAAG,CAAA;OAPO,IAAI,CAsBhB","file":"mainThreadRemoteConnectionData.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { extHostCustomer, IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';\nimport { ExtHostContext, ExtHostExtensionServiceShape } from '../common/extHost.protocol';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\n\n@extHostCustomer\nexport class MainThreadRemoteConnectionData extends Disposable {\n\n\tprivate readonly _proxy: ExtHostExtensionServiceShape;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IWorkbenchEnvironmentService protected readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@IRemoteAuthorityResolverService remoteAuthorityResolverService: IRemoteAuthorityResolverService\n\t) {\n\t\tsuper();\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostExtensionService);\n\n\t\tconst remoteAuthority = this._environmentService.remoteAuthority;\n\t\tif (remoteAuthority) {\n\t\t\tthis._register(remoteAuthorityResolverService.onDidChangeConnectionData(() => {\n\t\t\t\tconst connectionData = remoteAuthorityResolverService.getConnectionData(remoteAuthority);\n\t\t\t\tif (connectionData) {\n\t\t\t\t\tthis._proxy.$updateRemoteConnectionData(connectionData);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n}\n"]}