{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/node/extHostTerminalService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAQzF,IAAM,IAAI,GAAV,MAAM,IAAuB,SAAQ,6BAAI;QAE/C,YACmB,eAAoB,EAClB,UAAe;YAEnC,KAAK,CAAC,IAAI,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;QAC1C,CAAC;QAEM,cAAc,CAAC,IAAa,EAAE,SAAkB,EAAE,SAA6B;YACrF,OAAO,IAAI,CAAC,yBAAyB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;QACvE,CAAC;QAEM,yBAAyB,CAAC,OAA+B,EAAE,eAA0C;YAC3G,MAAM,QAAQ,GAAG,IAAI,6BAAI,CAAY,IAAI,CAAC,CAAC,EAAO,IAAA,UAAG,GAAW,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;YACzF,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC/B,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAwB,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;YAClF,OAAO,QAAQ,CAAC,KAAK,CAAC;QACvB,CAAC;KACD,CAAA;IAnBY,oBAAI;mBAAJ,IAAI;QAGd,WAAA,qBAAG,CAAA;QACH,WAAA,uBAAG,CAAA;OAJO,IAAI,CAmBhB","file":"extHostTerminalService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { BaseExtHostTerminalService, ExtHostTerminal, ITerminalInternalOptions } from 'vs/workbench/api/common/extHostTerminalService';\nimport type * as vscode from 'vscode';\nimport { IExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\n\nexport class ExtHostTerminalService extends BaseExtHostTerminalService {\n\n\tconstructor(\n\t\t@IExtHostCommands extHostCommands: IExtHostCommands,\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService\n\t) {\n\t\tsuper(true, extHostCommands, extHostRpc);\n\t}\n\n\tpublic createTerminal(name?: string, shellPath?: string, shellArgs?: string[] | string): vscode.Terminal {\n\t\treturn this.createTerminalFromOptions({ name, shellPath, shellArgs });\n\t}\n\n\tpublic createTerminalFromOptions(options: vscode.TerminalOptions, internalOptions?: ITerminalInternalOptions): vscode.Terminal {\n\t\tconst terminal = new ExtHostTerminal(this._proxy, generateUuid(), options, options.name);\n\t\tthis._terminals.push(terminal);\n\t\tterminal.create(options, this._serializeParentTerminal(options, internalOptions));\n\t\treturn terminal.value;\n\t}\n}\n"]}