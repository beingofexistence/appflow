{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/node/extHostDownloadService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAWzF,IAAM,IAAI,GAAV,MAAM,IAAuB,SAAQ,eAAG;QAE9C,YACqB,UAAe,EACjB,QAAa;YAE/B,KAAK,EAAE,CAAC;YAER,MAAM,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,sBAAG,CAAS,yBAAyB,CAAC,CAAC;YAEzE,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,6BAA6B,EAAE,KAAK,EAAE,QAAa,EAAgB,EAAE;gBACpG,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,IAAA,UAAG,EAAE,IAAA,WAAM,GAAE,EAAE,IAAA,UAAG,GAAW,CAAC,CAAC,CAAC;gBAC1D,MAAM,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;gBAC1C,OAAO,QAAQ,CAAC;YACjB,CAAC,CAAC,CAAC;QACJ,CAAC;KACD,CAAA;IAhBY,oBAAI;mBAAJ,IAAI;QAGd,WAAA,uBAAG,CAAA;QACH,WAAA,qBAAG,CAAA;OAJO,IAAI,CAgBhB","file":"extHostDownloadService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { MainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { URI } from 'vs/base/common/uri';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\n\nexport class ExtHostDownloadService extends Disposable {\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostCommands commands: IExtHostCommands\n\t) {\n\t\tsuper();\n\n\t\tconst proxy = extHostRpc.getProxy(MainContext.MainThreadDownloadService);\n\n\t\tcommands.registerCommand(false, '_workbench.downloadResource', async (resource: URI): Promise<any> => {\n\t\t\tconst location = URI.file(join(tmpdir(), generateUuid()));\n\t\t\tawait proxy.$download(resource, location);\n\t\t\treturn location;\n\t\t});\n\t}\n}\n"]}