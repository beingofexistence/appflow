{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostWebview.ts"],"names":[],"mappings":"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","file":"extHostWebview.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* eslint-disable local/code-no-native-private */\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport * as objects from 'vs/base/common/objects';\nimport { URI } from 'vs/base/common/uri';\nimport { normalizeVersion, parseVersion } from 'vs/platform/extensions/common/extensionValidator';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtHostApiDeprecationService } from 'vs/workbench/api/common/extHostApiDeprecationService';\nimport { deserializeWebviewMessage, serializeWebviewMessage } from 'vs/workbench/api/common/extHostWebviewMessaging';\nimport { IExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport { WebviewRemoteInfo, asWebviewUri, webviewGenericCspSource } from 'vs/workbench/contrib/webview/common/webview';\nimport { SerializableObjectWithBuffers } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport type * as vscode from 'vscode';\nimport * as extHostProtocol from './extHost.protocol';\n\nexport class ExtHostWebview implements vscode.Webview {\n\n\treadonly #handle: extHostProtocol.WebviewHandle;\n\treadonly #proxy: extHostProtocol.MainThreadWebviewsShape;\n\treadonly #deprecationService: IExtHostApiDeprecationService;\n\n\treadonly #remoteInfo: WebviewRemoteInfo;\n\treadonly #workspace: IExtHostWorkspace | undefined;\n\treadonly #extension: IExtensionDescription;\n\n\t#html: string = '';\n\t#options: vscode.WebviewOptions;\n\t#isDisposed: boolean = false;\n\t#hasCalledAsWebviewUri = false;\n\n\t#serializeBuffersForPostMessage: boolean;\n\t#shouldRewriteOldResourceUris: boolean;\n\n\tconstructor(\n\t\thandle: extHostProtocol.WebviewHandle,\n\t\tproxy: extHostProtocol.MainThreadWebviewsShape,\n\t\toptions: vscode.WebviewOptions,\n\t\tremoteInfo: WebviewRemoteInfo,\n\t\tworkspace: IExtHostWorkspace | undefined,\n\t\textension: IExtensionDescription,\n\t\tdeprecationService: IExtHostApiDeprecationService,\n\t) {\n\t\tthis.#handle = handle;\n\t\tthis.#proxy = proxy;\n\t\tthis.#options = options;\n\t\tthis.#remoteInfo = remoteInfo;\n\t\tthis.#workspace = workspace;\n\t\tthis.#extension = extension;\n\t\tthis.#serializeBuffersForPostMessage = shouldSerializeBuffersForPostMessage(extension);\n\t\tthis.#shouldRewriteOldResourceUris = shouldTryRewritingOldResourceUris(extension);\n\t\tthis.#deprecationService = deprecationService;\n\t}\n\n\t/* internal */ readonly _onMessageEmitter = new Emitter<any>();\n\tpublic readonly onDidReceiveMessage: Event<any> = this._onMessageEmitter.event;\n\n\treadonly #onDidDisposeEmitter = new Emitter<void>();\n\t/* internal */ readonly _onDidDispose: Event<void> = this.#onDidDisposeEmitter.event;\n\n\tpublic dispose() {\n\t\tthis.#isDisposed = true;\n\n\t\tthis.#onDidDisposeEmitter.fire();\n\n\t\tthis.#onDidDisposeEmitter.dispose();\n\t\tthis._onMessageEmitter.dispose();\n\t}\n\n\tpublic asWebviewUri(resource: vscode.Uri): vscode.Uri {\n\t\tthis.#hasCalledAsWebviewUri = true;\n\t\treturn asWebviewUri(resource, this.#remoteInfo);\n\t}\n\n\tpublic get cspSource(): string {\n\t\tconst extensionLocation = this.#extension.extensionLocation;\n\t\tif (extensionLocation.scheme === Schemas.https || extensionLocation.scheme === Schemas.http) {\n\t\t\t// The extension is being served up from a CDN.\n\t\t\t// Also include the CDN in the default csp.\n\t\t\tlet extensionCspRule = extensionLocation.toString();\n\t\t\tif (!extensionCspRule.endsWith('/')) {\n\t\t\t\t// Always treat the location as a directory so that we allow all content under it\n\t\t\t\textensionCspRule += '/';\n\t\t\t}\n\t\t\treturn extensionCspRule + ' ' + webviewGenericCspSource;\n\t\t}\n\t\treturn webviewGenericCspSource;\n\t}\n\n\tpublic get html(): string {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#html;\n\t}\n\n\tpublic set html(value: string) {\n\t\tthis.assertNotDisposed();\n\t\tif (this.#html !== value) {\n\t\t\tthis.#html = value;\n\t\t\tif (this.#shouldRewriteOldResourceUris && !this.#hasCalledAsWebviewUri && /([\"'])vscode-resource:([^\\s'\"]+?)([\"'])/i.test(value)) {\n\t\t\t\tthis.#hasCalledAsWebviewUri = true;\n\t\t\t\tthis.#deprecationService.report('Webview vscode-resource: uris', this.#extension,\n\t\t\t\t\t`Please migrate to use the 'webview.asWebviewUri' api instead: https://aka.ms/vscode-webview-use-aswebviewuri`);\n\t\t\t}\n\t\t\tthis.#proxy.$setHtml(this.#handle, this.rewriteOldResourceUrlsIfNeeded(value));\n\t\t}\n\t}\n\n\tpublic get options(): vscode.WebviewOptions {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#options;\n\t}\n\n\tpublic set options(newOptions: vscode.WebviewOptions) {\n\t\tthis.assertNotDisposed();\n\n\t\tif (!objects.equals(this.#options, newOptions)) {\n\t\t\tthis.#proxy.$setOptions(this.#handle, serializeWebviewOptions(this.#extension, this.#workspace, newOptions));\n\t\t}\n\n\t\tthis.#options = newOptions;\n\t}\n\n\tpublic async postMessage(message: any): Promise<boolean> {\n\t\tif (this.#isDisposed) {\n\t\t\treturn false;\n\t\t}\n\t\tconst serialized = serializeWebviewMessage(message, { serializeBuffersForPostMessage: this.#serializeBuffersForPostMessage });\n\t\treturn this.#proxy.$postMessage(this.#handle, serialized.message, ...serialized.buffers);\n\t}\n\n\tprivate assertNotDisposed() {\n\t\tif (this.#isDisposed) {\n\t\t\tthrow new Error('Webview is disposed');\n\t\t}\n\t}\n\n\tprivate rewriteOldResourceUrlsIfNeeded(value: string): string {\n\t\tif (!this.#shouldRewriteOldResourceUris) {\n\t\t\treturn value;\n\t\t}\n\n\t\tconst isRemote = this.#extension.extensionLocation?.scheme === Schemas.vscodeRemote;\n\t\tconst remoteAuthority = this.#extension.extensionLocation.scheme === Schemas.vscodeRemote ? this.#extension.extensionLocation.authority : undefined;\n\t\treturn value\n\t\t\t.replace(/([\"'])(?:vscode-resource):(\\/\\/([^\\s\\/'\"]+?)(?=\\/))?([^\\s'\"]+?)([\"'])/gi, (_match, startQuote, _1, scheme, path, endQuote) => {\n\t\t\t\tconst uri = URI.from({\n\t\t\t\t\tscheme: scheme || 'file',\n\t\t\t\t\tpath: decodeURIComponent(path),\n\t\t\t\t});\n\t\t\t\tconst webviewUri = asWebviewUri(uri, { isRemote, authority: remoteAuthority }).toString();\n\t\t\t\treturn `${startQuote}${webviewUri}${endQuote}`;\n\t\t\t})\n\t\t\t.replace(/([\"'])(?:vscode-webview-resource):(\\/\\/[^\\s\\/'\"]+\\/([^\\s\\/'\"]+?)(?=\\/))?([^\\s'\"]+?)([\"'])/gi, (_match, startQuote, _1, scheme, path, endQuote) => {\n\t\t\t\tconst uri = URI.from({\n\t\t\t\t\tscheme: scheme || 'file',\n\t\t\t\t\tpath: decodeURIComponent(path),\n\t\t\t\t});\n\t\t\t\tconst webviewUri = asWebviewUri(uri, { isRemote, authority: remoteAuthority }).toString();\n\t\t\t\treturn `${startQuote}${webviewUri}${endQuote}`;\n\t\t\t});\n\t}\n}\n\nexport function shouldSerializeBuffersForPostMessage(extension: IExtensionDescription): boolean {\n\ttry {\n\t\tconst version = normalizeVersion(parseVersion(extension.engines.vscode));\n\t\treturn !!version && version.majorBase >= 1 && version.minorBase >= 57;\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nfunction shouldTryRewritingOldResourceUris(extension: IExtensionDescription): boolean {\n\ttry {\n\t\tconst version = normalizeVersion(parseVersion(extension.engines.vscode));\n\t\tif (!version) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn version.majorBase < 1 || (version.majorBase === 1 && version.minorBase < 60);\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nexport class ExtHostWebviews extends Disposable implements extHostProtocol.ExtHostWebviewsShape {\n\n\tprivate readonly _webviewProxy: extHostProtocol.MainThreadWebviewsShape;\n\n\tprivate readonly _webviews = new Map<extHostProtocol.WebviewHandle, ExtHostWebview>();\n\n\tconstructor(\n\t\tmainContext: extHostProtocol.IMainContext,\n\t\tprivate readonly remoteInfo: WebviewRemoteInfo,\n\t\tprivate readonly workspace: IExtHostWorkspace | undefined,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _deprecationService: IExtHostApiDeprecationService,\n\t) {\n\t\tsuper();\n\t\tthis._webviewProxy = mainContext.getProxy(extHostProtocol.MainContext.MainThreadWebviews);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\n\t\tfor (const webview of this._webviews.values()) {\n\t\t\twebview.dispose();\n\t\t}\n\t\tthis._webviews.clear();\n\t}\n\n\tpublic $onMessage(\n\t\thandle: extHostProtocol.WebviewHandle,\n\t\tjsonMessage: string,\n\t\tbuffers: SerializableObjectWithBuffers<VSBuffer[]>\n\t): void {\n\t\tconst webview = this.getWebview(handle);\n\t\tif (webview) {\n\t\t\tconst { message } = deserializeWebviewMessage(jsonMessage, buffers.value);\n\t\t\twebview._onMessageEmitter.fire(message);\n\t\t}\n\t}\n\n\tpublic $onMissingCsp(\n\t\t_handle: extHostProtocol.WebviewHandle,\n\t\textensionId: string\n\t): void {\n\t\tthis._logService.warn(`${extensionId} created a webview without a content security policy: https://aka.ms/vscode-webview-missing-csp`);\n\t}\n\n\tpublic createNewWebview(handle: string, options: extHostProtocol.IWebviewContentOptions, extension: IExtensionDescription): ExtHostWebview {\n\t\tconst webview = new ExtHostWebview(handle, this._webviewProxy, reviveOptions(options), this.remoteInfo, this.workspace, extension, this._deprecationService);\n\t\tthis._webviews.set(handle, webview);\n\n\t\tconst sub = webview._onDidDispose(() => {\n\t\t\tsub.dispose();\n\t\t\tthis.deleteWebview(handle);\n\t\t});\n\n\t\treturn webview;\n\t}\n\n\tpublic deleteWebview(handle: string) {\n\t\tthis._webviews.delete(handle);\n\t}\n\n\tprivate getWebview(handle: extHostProtocol.WebviewHandle): ExtHostWebview | undefined {\n\t\treturn this._webviews.get(handle);\n\t}\n}\n\nexport function toExtensionData(extension: IExtensionDescription): extHostProtocol.WebviewExtensionDescription {\n\treturn { id: extension.identifier, location: extension.extensionLocation };\n}\n\nexport function serializeWebviewOptions(\n\textension: IExtensionDescription,\n\tworkspace: IExtHostWorkspace | undefined,\n\toptions: vscode.WebviewOptions,\n): extHostProtocol.IWebviewContentOptions {\n\treturn {\n\t\tenableCommandUris: options.enableCommandUris,\n\t\tenableScripts: options.enableScripts,\n\t\tenableForms: options.enableForms,\n\t\tportMapping: options.portMapping,\n\t\tlocalResourceRoots: options.localResourceRoots || getDefaultLocalResourceRoots(extension, workspace)\n\t};\n}\n\nfunction reviveOptions(options: extHostProtocol.IWebviewContentOptions): vscode.WebviewOptions {\n\treturn {\n\t\tenableCommandUris: options.enableCommandUris,\n\t\tenableScripts: options.enableScripts,\n\t\tenableForms: options.enableForms,\n\t\tportMapping: options.portMapping,\n\t\tlocalResourceRoots: options.localResourceRoots?.map(components => URI.from(components)),\n\t};\n}\n\nfunction getDefaultLocalResourceRoots(\n\textension: IExtensionDescription,\n\tworkspace: IExtHostWorkspace | undefined,\n): URI[] {\n\treturn [\n\t\t...(workspace?.getWorkspaceFolders() || []).map(x => x.uri),\n\t\textension.extensionLocation,\n\t];\n}\n"]}