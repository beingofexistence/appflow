{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostDocuments.ts"],"names":[],"mappings":"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","file":"extHostDocuments.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IModelChangedEvent } from 'vs/editor/common/model/mirrorTextModel';\nimport { ExtHostDocumentsShape, IMainContext, MainContext, MainThreadDocumentsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostDocumentData, setWordDefinitionFor } from 'vs/workbench/api/common/extHostDocumentData';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport * as TypeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport type * as vscode from 'vscode';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { deepFreeze } from 'vs/base/common/objects';\nimport { TextDocumentChangeReason } from 'vs/workbench/api/common/extHostTypes';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\n\nexport class ExtHostDocuments implements ExtHostDocumentsShape {\n\n\tprivate readonly _onDidAddDocument = new Emitter<vscode.TextDocument>({ onListenerError: onUnexpectedExternalError });\n\tprivate readonly _onDidRemoveDocument = new Emitter<vscode.TextDocument>({ onListenerError: onUnexpectedExternalError });\n\tprivate readonly _onDidChangeDocument = new Emitter<vscode.TextDocumentChangeEvent>({ onListenerError: onUnexpectedExternalError });\n\tprivate readonly _onDidSaveDocument = new Emitter<vscode.TextDocument>({ onListenerError: onUnexpectedExternalError });\n\n\treadonly onDidAddDocument: Event<vscode.TextDocument> = this._onDidAddDocument.event;\n\treadonly onDidRemoveDocument: Event<vscode.TextDocument> = this._onDidRemoveDocument.event;\n\treadonly onDidChangeDocument: Event<vscode.TextDocumentChangeEvent> = this._onDidChangeDocument.event;\n\treadonly onDidSaveDocument: Event<vscode.TextDocument> = this._onDidSaveDocument.event;\n\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate _proxy: MainThreadDocumentsShape;\n\tprivate _documentsAndEditors: ExtHostDocumentsAndEditors;\n\tprivate _documentLoader = new Map<string, Promise<ExtHostDocumentData>>();\n\n\tconstructor(mainContext: IMainContext, documentsAndEditors: ExtHostDocumentsAndEditors) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDocuments);\n\t\tthis._documentsAndEditors = documentsAndEditors;\n\n\t\tthis._documentsAndEditors.onDidRemoveDocuments(documents => {\n\t\t\tfor (const data of documents) {\n\t\t\t\tthis._onDidRemoveDocument.fire(data.document);\n\t\t\t}\n\t\t}, undefined, this._toDispose);\n\t\tthis._documentsAndEditors.onDidAddDocuments(documents => {\n\t\t\tfor (const data of documents) {\n\t\t\t\tthis._onDidAddDocument.fire(data.document);\n\t\t\t}\n\t\t}, undefined, this._toDispose);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._toDispose.dispose();\n\t}\n\n\tpublic getAllDocumentData(): ExtHostDocumentData[] {\n\t\treturn [...this._documentsAndEditors.allDocuments()];\n\t}\n\n\tpublic getDocumentData(resource: vscode.Uri): ExtHostDocumentData | undefined {\n\t\tif (!resource) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst data = this._documentsAndEditors.getDocument(resource);\n\t\tif (data) {\n\t\t\treturn data;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic getDocument(resource: vscode.Uri): vscode.TextDocument {\n\t\tconst data = this.getDocumentData(resource);\n\t\tif (!data?.document) {\n\t\t\tthrow new Error(`Unable to retrieve document from URI '${resource}'`);\n\t\t}\n\t\treturn data.document;\n\t}\n\n\tpublic ensureDocumentData(uri: URI): Promise<ExtHostDocumentData> {\n\n\t\tconst cached = this._documentsAndEditors.getDocument(uri);\n\t\tif (cached) {\n\t\t\treturn Promise.resolve(cached);\n\t\t}\n\n\t\tlet promise = this._documentLoader.get(uri.toString());\n\t\tif (!promise) {\n\t\t\tpromise = this._proxy.$tryOpenDocument(uri).then(uriData => {\n\t\t\t\tthis._documentLoader.delete(uri.toString());\n\t\t\t\tconst canonicalUri = URI.revive(uriData);\n\t\t\t\treturn assertIsDefined(this._documentsAndEditors.getDocument(canonicalUri));\n\t\t\t}, err => {\n\t\t\t\tthis._documentLoader.delete(uri.toString());\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t\tthis._documentLoader.set(uri.toString(), promise);\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\tpublic createDocumentData(options?: { language?: string; content?: string }): Promise<URI> {\n\t\treturn this._proxy.$tryCreateDocument(options).then(data => URI.revive(data));\n\t}\n\n\tpublic $acceptModelLanguageChanged(uriComponents: UriComponents, newLanguageId: string): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\t// Treat a language change as a remove + add\n\n\t\tthis._onDidRemoveDocument.fire(data.document);\n\t\tdata._acceptLanguageId(newLanguageId);\n\t\tthis._onDidAddDocument.fire(data.document);\n\t}\n\n\tpublic $acceptModelSaved(uriComponents: UriComponents): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\tthis.$acceptDirtyStateChanged(uriComponents, false);\n\t\tthis._onDidSaveDocument.fire(data.document);\n\t}\n\n\tpublic $acceptDirtyStateChanged(uriComponents: UriComponents, isDirty: boolean): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\tdata._acceptIsDirty(isDirty);\n\t\tthis._onDidChangeDocument.fire({\n\t\t\tdocument: data.document,\n\t\t\tcontentChanges: [],\n\t\t\treason: undefined\n\t\t});\n\t}\n\n\tpublic $acceptModelChanged(uriComponents: UriComponents, events: IModelChangedEvent, isDirty: boolean): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\tdata._acceptIsDirty(isDirty);\n\t\tdata.onEvents(events);\n\n\t\tlet reason: vscode.TextDocumentChangeReason | undefined = undefined;\n\t\tif (events.isUndoing) {\n\t\t\treason = TextDocumentChangeReason.Undo;\n\t\t} else if (events.isRedoing) {\n\t\t\treason = TextDocumentChangeReason.Redo;\n\t\t}\n\n\t\tthis._onDidChangeDocument.fire(deepFreeze({\n\t\t\tdocument: data.document,\n\t\t\tcontentChanges: events.changes.map((change) => {\n\t\t\t\treturn {\n\t\t\t\t\trange: TypeConverters.Range.to(change.range),\n\t\t\t\t\trangeOffset: change.rangeOffset,\n\t\t\t\t\trangeLength: change.rangeLength,\n\t\t\t\t\ttext: change.text\n\t\t\t\t};\n\t\t\t}),\n\t\t\treason\n\t\t}));\n\t}\n\n\tpublic setWordDefinitionFor(languageId: string, wordDefinition: RegExp | undefined): void {\n\t\tsetWordDefinitionFor(languageId, wordDefinition);\n\t}\n}\n"]}