{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostEditorTabs.ts"],"names":[],"mappings":"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","file":"extHostEditorTabs.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport * as typeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport { IEditorTabDto, IEditorTabGroupDto, IExtHostEditorTabsShape, MainContext, MainThreadEditorTabsShape, TabInputKind, TabModelOperationKind, TabOperation } from 'vs/workbench/api/common/extHost.protocol';\nimport { URI } from 'vs/base/common/uri';\nimport { Emitter } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CustomEditorTabInput, InteractiveWindowInput, NotebookDiffEditorTabInput, NotebookEditorTabInput, TerminalEditorTabInput, TextDiffTabInput, TextMergeTabInput, TextTabInput, WebviewEditorTabInput } from 'vs/workbench/api/common/extHostTypes';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { diffSets } from 'vs/base/common/collections';\n\nexport interface IExtHostEditorTabs extends IExtHostEditorTabsShape {\n\treadonly _serviceBrand: undefined;\n\ttabGroups: vscode.TabGroups;\n}\n\nexport const IExtHostEditorTabs = createDecorator<IExtHostEditorTabs>('IExtHostEditorTabs');\n\ntype AnyTabInput = TextTabInput | TextDiffTabInput | CustomEditorTabInput | NotebookEditorTabInput | NotebookDiffEditorTabInput | WebviewEditorTabInput | TerminalEditorTabInput | InteractiveWindowInput;\n\nclass ExtHostEditorTab {\n\tprivate _apiObject: vscode.Tab | undefined;\n\tprivate _dto!: IEditorTabDto;\n\tprivate _input: AnyTabInput | undefined;\n\tprivate _parentGroup: ExtHostEditorTabGroup;\n\tprivate readonly _activeTabIdGetter: () => string;\n\n\tconstructor(dto: IEditorTabDto, parentGroup: ExtHostEditorTabGroup, activeTabIdGetter: () => string) {\n\t\tthis._activeTabIdGetter = activeTabIdGetter;\n\t\tthis._parentGroup = parentGroup;\n\t\tthis.acceptDtoUpdate(dto);\n\t}\n\n\tget apiObject(): vscode.Tab {\n\t\tif (!this._apiObject) {\n\t\t\t// Don't want to lose reference to parent `this` in the getters\n\t\t\tconst that = this;\n\t\t\tconst obj: vscode.Tab = {\n\t\t\t\tget isActive() {\n\t\t\t\t\t// We use a getter function here to always ensure at most 1 active tab per group and prevent iteration for being required\n\t\t\t\t\treturn that._dto.id === that._activeTabIdGetter();\n\t\t\t\t},\n\t\t\t\tget label() {\n\t\t\t\t\treturn that._dto.label;\n\t\t\t\t},\n\t\t\t\tget input() {\n\t\t\t\t\treturn that._input;\n\t\t\t\t},\n\t\t\t\tget isDirty() {\n\t\t\t\t\treturn that._dto.isDirty;\n\t\t\t\t},\n\t\t\t\tget isPinned() {\n\t\t\t\t\treturn that._dto.isPinned;\n\t\t\t\t},\n\t\t\t\tget isPreview() {\n\t\t\t\t\treturn that._dto.isPreview;\n\t\t\t\t},\n\t\t\t\tget group() {\n\t\t\t\t\treturn that._parentGroup.apiObject;\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._apiObject = Object.freeze<vscode.Tab>(obj);\n\t\t}\n\t\treturn this._apiObject;\n\t}\n\n\tget tabId(): string {\n\t\treturn this._dto.id;\n\t}\n\n\tacceptDtoUpdate(dto: IEditorTabDto) {\n\t\tthis._dto = dto;\n\t\tthis._input = this._initInput();\n\t}\n\n\tprivate _initInput() {\n\t\tswitch (this._dto.input.kind) {\n\t\t\tcase TabInputKind.TextInput:\n\t\t\t\treturn new TextTabInput(URI.revive(this._dto.input.uri));\n\t\t\tcase TabInputKind.TextDiffInput:\n\t\t\t\treturn new TextDiffTabInput(URI.revive(this._dto.input.original), URI.revive(this._dto.input.modified));\n\t\t\tcase TabInputKind.TextMergeInput:\n\t\t\t\treturn new TextMergeTabInput(URI.revive(this._dto.input.base), URI.revive(this._dto.input.input1), URI.revive(this._dto.input.input2), URI.revive(this._dto.input.result));\n\t\t\tcase TabInputKind.CustomEditorInput:\n\t\t\t\treturn new CustomEditorTabInput(URI.revive(this._dto.input.uri), this._dto.input.viewType);\n\t\t\tcase TabInputKind.WebviewEditorInput:\n\t\t\t\treturn new WebviewEditorTabInput(this._dto.input.viewType);\n\t\t\tcase TabInputKind.NotebookInput:\n\t\t\t\treturn new NotebookEditorTabInput(URI.revive(this._dto.input.uri), this._dto.input.notebookType);\n\t\t\tcase TabInputKind.NotebookDiffInput:\n\t\t\t\treturn new NotebookDiffEditorTabInput(URI.revive(this._dto.input.original), URI.revive(this._dto.input.modified), this._dto.input.notebookType);\n\t\t\tcase TabInputKind.TerminalEditorInput:\n\t\t\t\treturn new TerminalEditorTabInput();\n\t\t\tcase TabInputKind.InteractiveEditorInput:\n\t\t\t\treturn new InteractiveWindowInput(URI.revive(this._dto.input.uri), URI.revive(this._dto.input.inputBoxUri));\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nclass ExtHostEditorTabGroup {\n\n\tprivate _apiObject: vscode.TabGroup | undefined;\n\tprivate _dto: IEditorTabGroupDto;\n\tprivate _tabs: ExtHostEditorTab[] = [];\n\tprivate _activeTabId: string = '';\n\tprivate _activeGroupIdGetter: () => number | undefined;\n\n\tconstructor(dto: IEditorTabGroupDto, activeGroupIdGetter: () => number | undefined) {\n\t\tthis._dto = dto;\n\t\tthis._activeGroupIdGetter = activeGroupIdGetter;\n\t\t// Construct all tabs from the given dto\n\t\tfor (const tabDto of dto.tabs) {\n\t\t\tif (tabDto.isActive) {\n\t\t\t\tthis._activeTabId = tabDto.id;\n\t\t\t}\n\t\t\tthis._tabs.push(new ExtHostEditorTab(tabDto, this, () => this.activeTabId()));\n\t\t}\n\t}\n\n\tget apiObject(): vscode.TabGroup {\n\t\tif (!this._apiObject) {\n\t\t\t// Don't want to lose reference to parent `this` in the getters\n\t\t\tconst that = this;\n\t\t\tconst obj: vscode.TabGroup = {\n\t\t\t\tget isActive() {\n\t\t\t\t\t// We use a getter function here to always ensure at most 1 active group and prevent iteration for being required\n\t\t\t\t\treturn that._dto.groupId === that._activeGroupIdGetter();\n\t\t\t\t},\n\t\t\t\tget viewColumn() {\n\t\t\t\t\treturn typeConverters.ViewColumn.to(that._dto.viewColumn);\n\t\t\t\t},\n\t\t\t\tget activeTab() {\n\t\t\t\t\treturn that._tabs.find(tab => tab.tabId === that._activeTabId)?.apiObject;\n\t\t\t\t},\n\t\t\t\tget tabs() {\n\t\t\t\t\treturn Object.freeze(that._tabs.map(tab => tab.apiObject));\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._apiObject = Object.freeze<vscode.TabGroup>(obj);\n\t\t}\n\t\treturn this._apiObject;\n\t}\n\n\tget groupId(): number {\n\t\treturn this._dto.groupId;\n\t}\n\n\tget tabs(): ExtHostEditorTab[] {\n\t\treturn this._tabs;\n\t}\n\n\tacceptGroupDtoUpdate(dto: IEditorTabGroupDto) {\n\t\tthis._dto = dto;\n\t}\n\n\tacceptTabOperation(operation: TabOperation): ExtHostEditorTab {\n\t\t// In the open case we add the tab to the group\n\t\tif (operation.kind === TabModelOperationKind.TAB_OPEN) {\n\t\t\tconst tab = new ExtHostEditorTab(operation.tabDto, this, () => this.activeTabId());\n\t\t\t// Insert tab at editor index\n\t\t\tthis._tabs.splice(operation.index, 0, tab);\n\t\t\tif (operation.tabDto.isActive) {\n\t\t\t\tthis._activeTabId = tab.tabId;\n\t\t\t}\n\t\t\treturn tab;\n\t\t} else if (operation.kind === TabModelOperationKind.TAB_CLOSE) {\n\t\t\tconst tab = this._tabs.splice(operation.index, 1)[0];\n\t\t\tif (!tab) {\n\t\t\t\tthrow new Error(`Tab close updated received for index ${operation.index} which does not exist`);\n\t\t\t}\n\t\t\tif (tab.tabId === this._activeTabId) {\n\t\t\t\tthis._activeTabId = '';\n\t\t\t}\n\t\t\treturn tab;\n\t\t} else if (operation.kind === TabModelOperationKind.TAB_MOVE) {\n\t\t\tif (operation.oldIndex === undefined) {\n\t\t\t\tthrow new Error('Invalid old index on move IPC');\n\t\t\t}\n\t\t\t// Splice to remove at old index and insert at new index === moving the tab\n\t\t\tconst tab = this._tabs.splice(operation.oldIndex, 1)[0];\n\t\t\tif (!tab) {\n\t\t\t\tthrow new Error(`Tab move updated received for index ${operation.oldIndex} which does not exist`);\n\t\t\t}\n\t\t\tthis._tabs.splice(operation.index, 0, tab);\n\t\t\treturn tab;\n\t\t}\n\t\tconst tab = this._tabs.find(extHostTab => extHostTab.tabId === operation.tabDto.id);\n\t\tif (!tab) {\n\t\t\tthrow new Error('INVALID tab');\n\t\t}\n\t\tif (operation.tabDto.isActive) {\n\t\t\tthis._activeTabId = operation.tabDto.id;\n\t\t} else if (this._activeTabId === operation.tabDto.id && !operation.tabDto.isActive) {\n\t\t\t// Events aren't guaranteed to be in order so if we receive a dto that matches the active tab id\n\t\t\t// but isn't active we mark the active tab id as empty. This prevent onDidActiveTabChange from\n\t\t\t// firing incorrectly\n\t\t\tthis._activeTabId = '';\n\t\t}\n\t\ttab.acceptDtoUpdate(operation.tabDto);\n\t\treturn tab;\n\t}\n\n\t// Not a getter since it must be a function to be used as a callback for the tabs\n\tactiveTabId(): string {\n\t\treturn this._activeTabId;\n\t}\n}\n\nexport class ExtHostEditorTabs implements IExtHostEditorTabs {\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _proxy: MainThreadEditorTabsShape;\n\tprivate readonly _onDidChangeTabs = new Emitter<vscode.TabChangeEvent>();\n\tprivate readonly _onDidChangeTabGroups = new Emitter<vscode.TabGroupChangeEvent>();\n\n\t// Have to use ! because this gets initialized via an RPC proxy\n\tprivate _activeGroupId!: number;\n\n\tprivate _extHostTabGroups: ExtHostEditorTabGroup[] = [];\n\n\tprivate _apiObject: vscode.TabGroups | undefined;\n\n\tconstructor(@IExtHostRpcService extHostRpc: IExtHostRpcService) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadEditorTabs);\n\t}\n\n\tget tabGroups(): vscode.TabGroups {\n\t\tif (!this._apiObject) {\n\t\t\tconst that = this;\n\t\t\tconst obj: vscode.TabGroups = {\n\t\t\t\t// never changes -> simple value\n\t\t\t\tonDidChangeTabGroups: that._onDidChangeTabGroups.event,\n\t\t\t\tonDidChangeTabs: that._onDidChangeTabs.event,\n\t\t\t\t// dynamic -> getters\n\t\t\t\tget all() {\n\t\t\t\t\treturn Object.freeze(that._extHostTabGroups.map(group => group.apiObject));\n\t\t\t\t},\n\t\t\t\tget activeTabGroup() {\n\t\t\t\t\tconst activeTabGroupId = that._activeGroupId;\n\t\t\t\t\tconst activeTabGroup = assertIsDefined(that._extHostTabGroups.find(candidate => candidate.groupId === activeTabGroupId)?.apiObject);\n\t\t\t\t\treturn activeTabGroup;\n\t\t\t\t},\n\t\t\t\tclose: async (tabOrTabGroup: vscode.Tab | readonly vscode.Tab[] | vscode.TabGroup | readonly vscode.TabGroup[], preserveFocus?: boolean) => {\n\t\t\t\t\tconst tabsOrTabGroups = Array.isArray(tabOrTabGroup) ? tabOrTabGroup : [tabOrTabGroup];\n\t\t\t\t\tif (!tabsOrTabGroups.length) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t// Check which type was passed in and call the appropriate close\n\t\t\t\t\t// Casting is needed as typescript doesn't seem to infer enough from this\n\t\t\t\t\tif (isTabGroup(tabsOrTabGroups[0])) {\n\t\t\t\t\t\treturn this._closeGroups(tabsOrTabGroups as vscode.TabGroup[], preserveFocus);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this._closeTabs(tabsOrTabGroups as vscode.Tab[], preserveFocus);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t// move: async (tab: vscode.Tab, viewColumn: ViewColumn, index: number, preserveFocus?: boolean) => {\n\t\t\t\t// \tconst extHostTab = this._findExtHostTabFromApi(tab);\n\t\t\t\t// \tif (!extHostTab) {\n\t\t\t\t// \t\tthrow new Error('Invalid tab');\n\t\t\t\t// \t}\n\t\t\t\t// \tthis._proxy.$moveTab(extHostTab.tabId, index, typeConverters.ViewColumn.from(viewColumn), preserveFocus);\n\t\t\t\t// \treturn;\n\t\t\t\t// }\n\t\t\t};\n\t\t\tthis._apiObject = Object.freeze(obj);\n\t\t}\n\t\treturn this._apiObject;\n\t}\n\n\t$acceptEditorTabModel(tabGroups: IEditorTabGroupDto[]): void {\n\n\t\tconst groupIdsBefore = new Set(this._extHostTabGroups.map(group => group.groupId));\n\t\tconst groupIdsAfter = new Set(tabGroups.map(dto => dto.groupId));\n\t\tconst diff = diffSets(groupIdsBefore, groupIdsAfter);\n\n\t\tconst closed: vscode.TabGroup[] = this._extHostTabGroups.filter(group => diff.removed.includes(group.groupId)).map(group => group.apiObject);\n\t\tconst opened: vscode.TabGroup[] = [];\n\t\tconst changed: vscode.TabGroup[] = [];\n\n\n\t\tthis._extHostTabGroups = tabGroups.map(tabGroup => {\n\t\t\tconst group = new ExtHostEditorTabGroup(tabGroup, () => this._activeGroupId);\n\t\t\tif (diff.added.includes(group.groupId)) {\n\t\t\t\topened.push(group.apiObject);\n\t\t\t} else {\n\t\t\t\tchanged.push(group.apiObject);\n\t\t\t}\n\t\t\treturn group;\n\t\t});\n\n\t\t// Set the active tab group id\n\t\tconst activeTabGroupId = assertIsDefined(tabGroups.find(group => group.isActive === true)?.groupId);\n\t\tif (activeTabGroupId !== undefined && this._activeGroupId !== activeTabGroupId) {\n\t\t\tthis._activeGroupId = activeTabGroupId;\n\t\t}\n\t\tthis._onDidChangeTabGroups.fire(Object.freeze({ opened, closed, changed }));\n\t}\n\n\t$acceptTabGroupUpdate(groupDto: IEditorTabGroupDto) {\n\t\tconst group = this._extHostTabGroups.find(group => group.groupId === groupDto.groupId);\n\t\tif (!group) {\n\t\t\tthrow new Error('Update Group IPC call received before group creation.');\n\t\t}\n\t\tgroup.acceptGroupDtoUpdate(groupDto);\n\t\tif (groupDto.isActive) {\n\t\t\tthis._activeGroupId = groupDto.groupId;\n\t\t}\n\t\tthis._onDidChangeTabGroups.fire(Object.freeze({ changed: [group.apiObject], opened: [], closed: [] }));\n\t}\n\n\t$acceptTabOperation(operation: TabOperation) {\n\t\tconst group = this._extHostTabGroups.find(group => group.groupId === operation.groupId);\n\t\tif (!group) {\n\t\t\tthrow new Error('Update Tabs IPC call received before group creation.');\n\t\t}\n\t\tconst tab = group.acceptTabOperation(operation);\n\n\t\t// Construct the tab change event based on the operation\n\t\tswitch (operation.kind) {\n\t\t\tcase TabModelOperationKind.TAB_OPEN:\n\t\t\t\tthis._onDidChangeTabs.fire(Object.freeze({\n\t\t\t\t\topened: [tab.apiObject],\n\t\t\t\t\tclosed: [],\n\t\t\t\t\tchanged: []\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\tcase TabModelOperationKind.TAB_CLOSE:\n\t\t\t\tthis._onDidChangeTabs.fire(Object.freeze({\n\t\t\t\t\topened: [],\n\t\t\t\t\tclosed: [tab.apiObject],\n\t\t\t\t\tchanged: []\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\tcase TabModelOperationKind.TAB_MOVE:\n\t\t\tcase TabModelOperationKind.TAB_UPDATE:\n\t\t\t\tthis._onDidChangeTabs.fire(Object.freeze({\n\t\t\t\t\topened: [],\n\t\t\t\t\tclosed: [],\n\t\t\t\t\tchanged: [tab.apiObject]\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate _findExtHostTabFromApi(apiTab: vscode.Tab): ExtHostEditorTab | undefined {\n\t\tfor (const group of this._extHostTabGroups) {\n\t\t\tfor (const tab of group.tabs) {\n\t\t\t\tif (tab.apiObject === apiTab) {\n\t\t\t\t\treturn tab;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tprivate _findExtHostTabGroupFromApi(apiTabGroup: vscode.TabGroup): ExtHostEditorTabGroup | undefined {\n\t\treturn this._extHostTabGroups.find(candidate => candidate.apiObject === apiTabGroup);\n\t}\n\n\tprivate async _closeTabs(tabs: vscode.Tab[], preserveFocus?: boolean): Promise<boolean> {\n\t\tconst extHostTabIds: string[] = [];\n\t\tfor (const tab of tabs) {\n\t\t\tconst extHostTab = this._findExtHostTabFromApi(tab);\n\t\t\tif (!extHostTab) {\n\t\t\t\tthrow new Error('Tab close: Invalid tab not found!');\n\t\t\t}\n\t\t\textHostTabIds.push(extHostTab.tabId);\n\t\t}\n\t\treturn this._proxy.$closeTab(extHostTabIds, preserveFocus);\n\t}\n\n\tprivate async _closeGroups(groups: vscode.TabGroup[], preserverFoucs?: boolean): Promise<boolean> {\n\t\tconst extHostGroupIds: number[] = [];\n\t\tfor (const group of groups) {\n\t\t\tconst extHostGroup = this._findExtHostTabGroupFromApi(group);\n\t\t\tif (!extHostGroup) {\n\t\t\t\tthrow new Error('Group close: Invalid group not found!');\n\t\t\t}\n\t\t\textHostGroupIds.push(extHostGroup.groupId);\n\t\t}\n\t\treturn this._proxy.$closeGroup(extHostGroupIds, preserverFoucs);\n\t}\n}\n\n//#region Utils\nfunction isTabGroup(obj: unknown): obj is vscode.TabGroup {\n\tconst tabGroup = obj as vscode.TabGroup;\n\tif (tabGroup.tabs !== undefined) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n//#endregion\n"]}