{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostCustomEditors.ts"],"names":[],"mappings":"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","file":"extHostCustomEditors.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { hash } from 'vs/base/common/hash';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport { IExtensionStoragePaths } from 'vs/workbench/api/common/extHostStoragePaths';\nimport * as typeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport { ExtHostWebviews, shouldSerializeBuffersForPostMessage, toExtensionData } from 'vs/workbench/api/common/extHostWebview';\nimport { ExtHostWebviewPanels } from 'vs/workbench/api/common/extHostWebviewPanels';\nimport { EditorGroupColumn } from 'vs/workbench/services/editor/common/editorGroupColumn';\nimport type * as vscode from 'vscode';\nimport { Cache } from './cache';\nimport * as extHostProtocol from './extHost.protocol';\nimport * as extHostTypes from './extHostTypes';\n\n\nclass CustomDocumentStoreEntry {\n\n\tprivate _backupCounter = 1;\n\n\tconstructor(\n\t\tpublic readonly document: vscode.CustomDocument,\n\t\tprivate readonly _storagePath: URI | undefined,\n\t) { }\n\n\tprivate readonly _edits = new Cache<vscode.CustomDocumentEditEvent>('custom documents');\n\n\tprivate _backup?: vscode.CustomDocumentBackup;\n\n\taddEdit(item: vscode.CustomDocumentEditEvent): number {\n\t\treturn this._edits.add([item]);\n\t}\n\n\tasync undo(editId: number, isDirty: boolean): Promise<void> {\n\t\tawait this.getEdit(editId).undo();\n\t\tif (!isDirty) {\n\t\t\tthis.disposeBackup();\n\t\t}\n\t}\n\n\tasync redo(editId: number, isDirty: boolean): Promise<void> {\n\t\tawait this.getEdit(editId).redo();\n\t\tif (!isDirty) {\n\t\t\tthis.disposeBackup();\n\t\t}\n\t}\n\n\tdisposeEdits(editIds: number[]): void {\n\t\tfor (const id of editIds) {\n\t\t\tthis._edits.delete(id);\n\t\t}\n\t}\n\n\tgetNewBackupUri(): URI {\n\t\tif (!this._storagePath) {\n\t\t\tthrow new Error('Backup requires a valid storage path');\n\t\t}\n\t\tconst fileName = hashPath(this.document.uri) + (this._backupCounter++);\n\t\treturn joinPath(this._storagePath, fileName);\n\t}\n\n\tupdateBackup(backup: vscode.CustomDocumentBackup): void {\n\t\tthis._backup?.delete();\n\t\tthis._backup = backup;\n\t}\n\n\tdisposeBackup(): void {\n\t\tthis._backup?.delete();\n\t\tthis._backup = undefined;\n\t}\n\n\tprivate getEdit(editId: number): vscode.CustomDocumentEditEvent {\n\t\tconst edit = this._edits.get(editId, 0);\n\t\tif (!edit) {\n\t\t\tthrow new Error('No edit found');\n\t\t}\n\t\treturn edit;\n\t}\n}\n\nclass CustomDocumentStore {\n\tprivate readonly _documents = new Map<string, CustomDocumentStoreEntry>();\n\n\tpublic get(viewType: string, resource: vscode.Uri): CustomDocumentStoreEntry | undefined {\n\t\treturn this._documents.get(this.key(viewType, resource));\n\t}\n\n\tpublic add(viewType: string, document: vscode.CustomDocument, storagePath: URI | undefined): CustomDocumentStoreEntry {\n\t\tconst key = this.key(viewType, document.uri);\n\t\tif (this._documents.has(key)) {\n\t\t\tthrow new Error(`Document already exists for viewType:${viewType} resource:${document.uri}`);\n\t\t}\n\t\tconst entry = new CustomDocumentStoreEntry(document, storagePath);\n\t\tthis._documents.set(key, entry);\n\t\treturn entry;\n\t}\n\n\tpublic delete(viewType: string, document: vscode.CustomDocument) {\n\t\tconst key = this.key(viewType, document.uri);\n\t\tthis._documents.delete(key);\n\t}\n\n\tprivate key(viewType: string, resource: vscode.Uri): string {\n\t\treturn `${viewType}@@@${resource}`;\n\t}\n}\n\nconst enum CustomEditorType {\n\tText,\n\tCustom\n}\n\ntype ProviderEntry = {\n\treadonly extension: IExtensionDescription;\n\treadonly type: CustomEditorType.Text;\n\treadonly provider: vscode.CustomTextEditorProvider;\n} | {\n\treadonly extension: IExtensionDescription;\n\treadonly type: CustomEditorType.Custom;\n\treadonly provider: vscode.CustomReadonlyEditorProvider;\n};\n\nclass EditorProviderStore {\n\tprivate readonly _providers = new Map<string, ProviderEntry>();\n\n\tpublic addTextProvider(viewType: string, extension: IExtensionDescription, provider: vscode.CustomTextEditorProvider): vscode.Disposable {\n\t\treturn this.add(CustomEditorType.Text, viewType, extension, provider);\n\t}\n\n\tpublic addCustomProvider(viewType: string, extension: IExtensionDescription, provider: vscode.CustomReadonlyEditorProvider): vscode.Disposable {\n\t\treturn this.add(CustomEditorType.Custom, viewType, extension, provider);\n\t}\n\n\tpublic get(viewType: string): ProviderEntry | undefined {\n\t\treturn this._providers.get(viewType);\n\t}\n\n\tprivate add(type: CustomEditorType, viewType: string, extension: IExtensionDescription, provider: vscode.CustomTextEditorProvider | vscode.CustomReadonlyEditorProvider): vscode.Disposable {\n\t\tif (this._providers.has(viewType)) {\n\t\t\tthrow new Error(`Provider for viewType:${viewType} already registered`);\n\t\t}\n\t\tthis._providers.set(viewType, { type, extension, provider } as ProviderEntry);\n\t\treturn new extHostTypes.Disposable(() => this._providers.delete(viewType));\n\t}\n}\n\nexport class ExtHostCustomEditors implements extHostProtocol.ExtHostCustomEditorsShape {\n\n\tprivate readonly _proxy: extHostProtocol.MainThreadCustomEditorsShape;\n\n\tprivate readonly _editorProviders = new EditorProviderStore();\n\n\tprivate readonly _documents = new CustomDocumentStore();\n\n\tconstructor(\n\t\tmainContext: extHostProtocol.IMainContext,\n\t\tprivate readonly _extHostDocuments: ExtHostDocuments,\n\t\tprivate readonly _extensionStoragePaths: IExtensionStoragePaths | undefined,\n\t\tprivate readonly _extHostWebview: ExtHostWebviews,\n\t\tprivate readonly _extHostWebviewPanels: ExtHostWebviewPanels,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(extHostProtocol.MainContext.MainThreadCustomEditors);\n\t}\n\n\tpublic registerCustomEditorProvider(\n\t\textension: IExtensionDescription,\n\t\tviewType: string,\n\t\tprovider: vscode.CustomReadonlyEditorProvider | vscode.CustomTextEditorProvider,\n\t\toptions: { webviewOptions?: vscode.WebviewPanelOptions; supportsMultipleEditorsPerDocument?: boolean },\n\t): vscode.Disposable {\n\t\tconst disposables = new DisposableStore();\n\t\tif (isCustomTextEditorProvider(provider)) {\n\t\t\tdisposables.add(this._editorProviders.addTextProvider(viewType, extension, provider));\n\t\t\tthis._proxy.$registerTextEditorProvider(toExtensionData(extension), viewType, options.webviewOptions || {}, {\n\t\t\t\tsupportsMove: !!provider.moveCustomTextEditor,\n\t\t\t}, shouldSerializeBuffersForPostMessage(extension));\n\t\t} else {\n\t\t\tdisposables.add(this._editorProviders.addCustomProvider(viewType, extension, provider));\n\n\t\t\tif (isCustomEditorProviderWithEditingCapability(provider)) {\n\t\t\t\tdisposables.add(provider.onDidChangeCustomDocument(e => {\n\t\t\t\t\tconst entry = this.getCustomDocumentEntry(viewType, e.document.uri);\n\t\t\t\t\tif (isEditEvent(e)) {\n\t\t\t\t\t\tconst editId = entry.addEdit(e);\n\t\t\t\t\t\tthis._proxy.$onDidEdit(e.document.uri, viewType, editId, e.label);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._proxy.$onContentChange(e.document.uri, viewType);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tthis._proxy.$registerCustomEditorProvider(toExtensionData(extension), viewType, options.webviewOptions || {}, !!options.supportsMultipleEditorsPerDocument, shouldSerializeBuffersForPostMessage(extension));\n\t\t}\n\n\t\treturn extHostTypes.Disposable.from(\n\t\t\tdisposables,\n\t\t\tnew extHostTypes.Disposable(() => {\n\t\t\t\tthis._proxy.$unregisterEditorProvider(viewType);\n\t\t\t}));\n\t}\n\n\tasync $createCustomDocument(resource: UriComponents, viewType: string, backupId: string | undefined, untitledDocumentData: VSBuffer | undefined, cancellation: CancellationToken) {\n\t\tconst entry = this._editorProviders.get(viewType);\n\t\tif (!entry) {\n\t\t\tthrow new Error(`No provider found for '${viewType}'`);\n\t\t}\n\n\t\tif (entry.type !== CustomEditorType.Custom) {\n\t\t\tthrow new Error(`Invalid provide type for '${viewType}'`);\n\t\t}\n\n\t\tconst revivedResource = URI.revive(resource);\n\t\tconst document = await entry.provider.openCustomDocument(revivedResource, { backupId, untitledDocumentData: untitledDocumentData?.buffer }, cancellation);\n\n\t\tlet storageRoot: URI | undefined;\n\t\tif (isCustomEditorProviderWithEditingCapability(entry.provider) && this._extensionStoragePaths) {\n\t\t\tstorageRoot = this._extensionStoragePaths.workspaceValue(entry.extension) ?? this._extensionStoragePaths.globalValue(entry.extension);\n\t\t}\n\t\tthis._documents.add(viewType, document, storageRoot);\n\n\t\treturn { editable: isCustomEditorProviderWithEditingCapability(entry.provider) };\n\t}\n\n\tasync $disposeCustomDocument(resource: UriComponents, viewType: string): Promise<void> {\n\t\tconst entry = this._editorProviders.get(viewType);\n\t\tif (!entry) {\n\t\t\tthrow new Error(`No provider found for '${viewType}'`);\n\t\t}\n\n\t\tif (entry.type !== CustomEditorType.Custom) {\n\t\t\tthrow new Error(`Invalid provider type for '${viewType}'`);\n\t\t}\n\n\t\tconst revivedResource = URI.revive(resource);\n\t\tconst { document } = this.getCustomDocumentEntry(viewType, revivedResource);\n\t\tthis._documents.delete(viewType, document);\n\t\tdocument.dispose();\n\t}\n\n\tasync $resolveCustomEditor(\n\t\tresource: UriComponents,\n\t\thandle: extHostProtocol.WebviewHandle,\n\t\tviewType: string,\n\t\tinitData: {\n\t\t\ttitle: string;\n\t\t\tcontentOptions: extHostProtocol.IWebviewContentOptions;\n\t\t\toptions: extHostProtocol.IWebviewPanelOptions;\n\t\t\tactive: boolean;\n\t\t},\n\t\tposition: EditorGroupColumn,\n\t\tcancellation: CancellationToken,\n\t): Promise<void> {\n\t\tconst entry = this._editorProviders.get(viewType);\n\t\tif (!entry) {\n\t\t\tthrow new Error(`No provider found for '${viewType}'`);\n\t\t}\n\n\t\tconst viewColumn = typeConverters.ViewColumn.to(position);\n\n\t\tconst webview = this._extHostWebview.createNewWebview(handle, initData.contentOptions, entry.extension);\n\t\tconst panel = this._extHostWebviewPanels.createNewWebviewPanel(handle, viewType, initData.title, viewColumn, initData.options, webview, initData.active);\n\n\t\tconst revivedResource = URI.revive(resource);\n\n\t\tswitch (entry.type) {\n\t\t\tcase CustomEditorType.Custom: {\n\t\t\t\tconst { document } = this.getCustomDocumentEntry(viewType, revivedResource);\n\t\t\t\treturn entry.provider.resolveCustomEditor(document, panel, cancellation);\n\t\t\t}\n\t\t\tcase CustomEditorType.Text: {\n\t\t\t\tconst document = this._extHostDocuments.getDocument(revivedResource);\n\t\t\t\treturn entry.provider.resolveCustomTextEditor(document, panel, cancellation);\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthrow new Error('Unknown webview provider type');\n\t\t\t}\n\t\t}\n\t}\n\n\t$disposeEdits(resourceComponents: UriComponents, viewType: string, editIds: number[]): void {\n\t\tconst document = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\tdocument.disposeEdits(editIds);\n\t}\n\n\tasync $onMoveCustomEditor(handle: string, newResourceComponents: UriComponents, viewType: string): Promise<void> {\n\t\tconst entry = this._editorProviders.get(viewType);\n\t\tif (!entry) {\n\t\t\tthrow new Error(`No provider found for '${viewType}'`);\n\t\t}\n\n\t\tif (!(entry.provider as vscode.CustomTextEditorProvider).moveCustomTextEditor) {\n\t\t\tthrow new Error(`Provider does not implement move '${viewType}'`);\n\t\t}\n\n\t\tconst webview = this._extHostWebviewPanels.getWebviewPanel(handle);\n\t\tif (!webview) {\n\t\t\tthrow new Error(`No webview found`);\n\t\t}\n\n\t\tconst resource = URI.revive(newResourceComponents);\n\t\tconst document = this._extHostDocuments.getDocument(resource);\n\t\tawait (entry.provider as vscode.CustomTextEditorProvider).moveCustomTextEditor!(document, webview, CancellationToken.None);\n\t}\n\n\tasync $undo(resourceComponents: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void> {\n\t\tconst entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\treturn entry.undo(editId, isDirty);\n\t}\n\n\tasync $redo(resourceComponents: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void> {\n\t\tconst entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\treturn entry.redo(editId, isDirty);\n\t}\n\n\tasync $revert(resourceComponents: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void> {\n\t\tconst entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\tconst provider = this.getCustomEditorProvider(viewType);\n\t\tawait provider.revertCustomDocument(entry.document, cancellation);\n\t\tentry.disposeBackup();\n\t}\n\n\tasync $onSave(resourceComponents: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void> {\n\t\tconst entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\tconst provider = this.getCustomEditorProvider(viewType);\n\t\tawait provider.saveCustomDocument(entry.document, cancellation);\n\t\tentry.disposeBackup();\n\t}\n\n\tasync $onSaveAs(resourceComponents: UriComponents, viewType: string, targetResource: UriComponents, cancellation: CancellationToken): Promise<void> {\n\t\tconst entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\tconst provider = this.getCustomEditorProvider(viewType);\n\t\treturn provider.saveCustomDocumentAs(entry.document, URI.revive(targetResource), cancellation);\n\t}\n\n\tasync $backup(resourceComponents: UriComponents, viewType: string, cancellation: CancellationToken): Promise<string> {\n\t\tconst entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n\t\tconst provider = this.getCustomEditorProvider(viewType);\n\n\t\tconst backup = await provider.backupCustomDocument(entry.document, {\n\t\t\tdestination: entry.getNewBackupUri(),\n\t\t}, cancellation);\n\t\tentry.updateBackup(backup);\n\t\treturn backup.id;\n\t}\n\n\tprivate getCustomDocumentEntry(viewType: string, resource: UriComponents): CustomDocumentStoreEntry {\n\t\tconst entry = this._documents.get(viewType, URI.revive(resource));\n\t\tif (!entry) {\n\t\t\tthrow new Error('No custom document found');\n\t\t}\n\t\treturn entry;\n\t}\n\n\tprivate getCustomEditorProvider(viewType: string): vscode.CustomEditorProvider {\n\t\tconst entry = this._editorProviders.get(viewType);\n\t\tconst provider = entry?.provider;\n\t\tif (!provider || !isCustomEditorProviderWithEditingCapability(provider)) {\n\t\t\tthrow new Error('Custom document is not editable');\n\t\t}\n\t\treturn provider;\n\t}\n}\n\nfunction isCustomEditorProviderWithEditingCapability(provider: vscode.CustomTextEditorProvider | vscode.CustomEditorProvider | vscode.CustomReadonlyEditorProvider): provider is vscode.CustomEditorProvider {\n\treturn !!(provider as vscode.CustomEditorProvider).onDidChangeCustomDocument;\n}\n\nfunction isCustomTextEditorProvider(provider: vscode.CustomReadonlyEditorProvider<vscode.CustomDocument> | vscode.CustomTextEditorProvider): provider is vscode.CustomTextEditorProvider {\n\treturn typeof (provider as vscode.CustomTextEditorProvider).resolveCustomTextEditor === 'function';\n}\n\nfunction isEditEvent(e: vscode.CustomDocumentContentChangeEvent | vscode.CustomDocumentEditEvent): e is vscode.CustomDocumentEditEvent {\n\treturn typeof (e as vscode.CustomDocumentEditEvent).undo === 'function'\n\t\t&& typeof (e as vscode.CustomDocumentEditEvent).redo === 'function';\n}\n\nfunction hashPath(resource: URI): string {\n\tconst str = resource.scheme === Schemas.file || resource.scheme === Schemas.untitled ? resource.fsPath : resource.toString();\n\treturn hash(str) + '';\n}\n"]}