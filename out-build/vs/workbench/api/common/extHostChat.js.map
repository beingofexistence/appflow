{"version":3,"sources":["vs/workbench/api/common/extHostChat.ts"],"names":[],"mappings":"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","file":"extHostChat.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { raceCancellation } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { localize } from 'vs/nls';\nimport { IRelaxedExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtHostChatShape, IChatRequestDto, IChatResponseDto, IChatDto, IMainContext, MainContext, MainThreadChatShape } from 'vs/workbench/api/common/extHost.protocol';\nimport * as typeConvert from 'vs/workbench/api/common/extHostTypeConverters';\nimport { IChatFollowup, IChatReplyFollowup, IChatUserActionEvent, ISlashCommand } from 'vs/workbench/contrib/chat/common/chatService';\nimport type * as vscode from 'vscode';\n\nclass ChatProviderWrapper<T> {\n\n\tprivate static _pool = 0;\n\n\treadonly handle: number = ChatProviderWrapper._pool++;\n\n\tconstructor(\n\t\treadonly extension: Readonly<IRelaxedExtensionDescription>,\n\t\treadonly provider: T,\n\t) { }\n}\n\nexport class ExtHostChat implements ExtHostChatShape {\n\tprivate static _nextId = 0;\n\n\tprivate readonly _chatProvider = new Map<number, ChatProviderWrapper<vscode.InteractiveSessionProvider>>();\n\n\tprivate readonly _chatSessions = new Map<number, vscode.InteractiveSession>();\n\t// private readonly _providerResponsesByRequestId = new Map<number, { response: vscode.ProviderResult<vscode.InteractiveResponse | vscode.InteractiveResponseForProgress>; sessionId: number }>();\n\n\tprivate readonly _onDidPerformUserAction = new Emitter<vscode.InteractiveSessionUserActionEvent>();\n\tpublic readonly onDidPerformUserAction = this._onDidPerformUserAction.event;\n\n\tprivate readonly _proxy: MainThreadChatShape;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly logService: ILogService\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadChat);\n\t}\n\n\t//#region interactive session\n\n\tregisterChatProvider(extension: Readonly<IRelaxedExtensionDescription>, id: string, provider: vscode.InteractiveSessionProvider): vscode.Disposable {\n\t\tconst wrapper = new ChatProviderWrapper(extension, provider);\n\t\tthis._chatProvider.set(wrapper.handle, wrapper);\n\t\tthis._proxy.$registerChatProvider(wrapper.handle, id);\n\t\treturn toDisposable(() => {\n\t\t\tthis._proxy.$unregisterChatProvider(wrapper.handle);\n\t\t\tthis._chatProvider.delete(wrapper.handle);\n\t\t});\n\t}\n\n\ttransferChatSession(session: vscode.InteractiveSession, newWorkspace: vscode.Uri): void {\n\t\tconst sessionId = Iterable.find(this._chatSessions.keys(), key => this._chatSessions.get(key) === session) ?? 0;\n\t\tif (typeof sessionId !== 'number') {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._proxy.$transferChatSession(sessionId, newWorkspace);\n\t}\n\n\taddChatRequest(context: vscode.InteractiveSessionRequestArgs): void {\n\t\tthis._proxy.$addRequest(context);\n\t}\n\n\tsendInteractiveRequestToProvider(providerId: string, message: vscode.InteractiveSessionDynamicRequest): void {\n\t\tthis._proxy.$sendRequestToProvider(providerId, message);\n\t}\n\n\tasync $prepareChat(handle: number, initialState: any, token: CancellationToken): Promise<IChatDto | undefined> {\n\t\tconst entry = this._chatProvider.get(handle);\n\t\tif (!entry) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst session = await entry.provider.prepareSession(initialState, token);\n\t\tif (!session) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst id = ExtHostChat._nextId++;\n\t\tthis._chatSessions.set(id, session);\n\n\t\treturn {\n\t\t\tid,\n\t\t\trequesterUsername: session.requester?.name,\n\t\t\trequesterAvatarIconUri: session.requester?.icon,\n\t\t\tresponderUsername: session.responder?.name,\n\t\t\tresponderAvatarIconUri: session.responder?.icon,\n\t\t\tinputPlaceholder: session.inputPlaceholder,\n\t\t};\n\t}\n\n\tasync $resolveRequest(handle: number, sessionId: number, context: any, token: CancellationToken): Promise<Omit<IChatRequestDto, 'id'> | undefined> {\n\t\tconst entry = this._chatProvider.get(handle);\n\t\tif (!entry) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst realSession = this._chatSessions.get(sessionId);\n\t\tif (!realSession) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!entry.provider.resolveRequest) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst request = await entry.provider.resolveRequest(realSession, context, token);\n\t\tif (request) {\n\t\t\treturn {\n\t\t\t\tmessage: typeof request.message === 'string' ? request.message : typeConvert.ChatReplyFollowup.from(request.message),\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tasync $provideWelcomeMessage(handle: number, token: CancellationToken): Promise<(string | IChatReplyFollowup[])[] | undefined> {\n\t\tconst entry = this._chatProvider.get(handle);\n\t\tif (!entry) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!entry.provider.provideWelcomeMessage) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst content = await entry.provider.provideWelcomeMessage(token);\n\t\tif (!content) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn content.map(item => {\n\t\t\tif (typeof item === 'string') {\n\t\t\t\treturn item;\n\t\t\t} else {\n\t\t\t\treturn item.map(f => typeConvert.ChatReplyFollowup.from(f));\n\t\t\t}\n\t\t});\n\t}\n\n\tasync $provideFollowups(handle: number, sessionId: number, token: CancellationToken): Promise<IChatFollowup[] | undefined> {\n\t\tconst entry = this._chatProvider.get(handle);\n\t\tif (!entry) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst realSession = this._chatSessions.get(sessionId);\n\t\tif (!realSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!entry.provider.provideFollowups) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst rawFollowups = await entry.provider.provideFollowups(realSession, token);\n\t\treturn rawFollowups?.map(f => typeConvert.ChatFollowup.from(f));\n\t}\n\n\t$removeRequest(handle: number, sessionId: number, requestId: string): void {\n\t\tconst entry = this._chatProvider.get(handle);\n\t\tif (!entry) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst realSession = this._chatSessions.get(sessionId);\n\t\tif (!realSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!entry.provider.removeRequest) {\n\t\t\treturn;\n\t\t}\n\n\t\tentry.provider.removeRequest(realSession, requestId);\n\t}\n\n\tasync $provideReply(handle: number, sessionId: number, request: IChatRequestDto, token: CancellationToken): Promise<IChatResponseDto | undefined> {\n\t\tconst entry = this._chatProvider.get(handle);\n\t\tif (!entry) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst realSession = this._chatSessions.get(sessionId);\n\t\tif (!realSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst requestObj: vscode.InteractiveRequest = {\n\t\t\tsession: realSession,\n\t\t\tmessage: typeof request.message === 'string' ? request.message : typeConvert.ChatReplyFollowup.to(request.message),\n\t\t\tvariables: {}\n\t\t};\n\n\t\tif (request.variables) {\n\t\t\tfor (const key of Object.keys(request.variables)) {\n\t\t\t\trequestObj.variables[key] = request.variables[key].map(typeConvert.ChatVariable.to);\n\t\t\t}\n\t\t}\n\n\t\tconst stopWatch = StopWatch.create(false);\n\t\tlet firstProgress: number | undefined;\n\t\tconst progressObj: vscode.Progress<vscode.InteractiveProgress> = {\n\t\t\treport: (progress: vscode.InteractiveProgress) => {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (typeof firstProgress === 'undefined') {\n\t\t\t\t\tfirstProgress = stopWatch.elapsed();\n\t\t\t\t}\n\n\t\t\t\tif ('responseId' in progress) {\n\t\t\t\t\tthis._proxy.$acceptResponseProgress(handle, sessionId, { requestId: progress.responseId });\n\t\t\t\t} else if ('placeholder' in progress && 'resolvedContent' in progress) {\n\t\t\t\t\tconst resolvedContent = Promise.all([this._proxy.$acceptResponseProgress(handle, sessionId, { placeholder: progress.placeholder }), progress.resolvedContent]);\n\t\t\t\t\traceCancellation(resolvedContent, token).then((res) => {\n\t\t\t\t\t\tif (!res) {\n\t\t\t\t\t\t\treturn; /* Cancelled */\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst [progressHandle, progressContent] = res;\n\t\t\t\t\t\tthis._proxy.$acceptResponseProgress(handle, sessionId, progressContent, progressHandle ?? undefined);\n\t\t\t\t\t});\n\t\t\t\t} else if ('content' in progress) {\n\t\t\t\t\tthis._proxy.$acceptResponseProgress(handle, sessionId, {\n\t\t\t\t\t\tcontent: typeof progress.content === 'string' ? progress.content : typeConvert.MarkdownString.from(progress.content)\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis._proxy.$acceptResponseProgress(handle, sessionId, progress);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tlet result: vscode.InteractiveResponseForProgress | undefined | null;\n\t\ttry {\n\t\t\tresult = await entry.provider.provideResponseWithProgress(requestObj, progressObj, token);\n\t\t\tif (!result) {\n\t\t\t\tresult = { errorDetails: { message: localize('emptyResponse', \"Provider returned null response\") } };\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tresult = { errorDetails: { message: localize('errorResponse', \"Error from provider: {0}\", err.message), responseIsIncomplete: true } };\n\t\t\tthis.logService.error(err);\n\t\t}\n\n\t\ttry {\n\t\t\t// Check that the session has not been released since the request started\n\t\t\tif (realSession.saveState && this._chatSessions.has(sessionId)) {\n\t\t\t\tconst newState = realSession.saveState();\n\t\t\t\tthis._proxy.$acceptChatState(sessionId, newState);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.logService.warn(err);\n\t\t}\n\n\t\tconst timings = { firstProgress: firstProgress ?? 0, totalElapsed: stopWatch.elapsed() };\n\t\treturn { errorDetails: result.errorDetails, timings };\n\t}\n\n\tasync $provideSlashCommands(handle: number, sessionId: number, token: CancellationToken): Promise<ISlashCommand[] | undefined> {\n\t\tconst entry = this._chatProvider.get(handle);\n\t\tif (!entry) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst realSession = this._chatSessions.get(sessionId);\n\t\tif (!realSession) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!entry.provider.provideSlashCommands) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst slashCommands = await entry.provider.provideSlashCommands(realSession, token);\n\t\treturn slashCommands?.map(c => (<ISlashCommand>{\n\t\t\t...c,\n\t\t\tkind: typeConvert.CompletionItemKind.from(c.kind)\n\t\t}));\n\t}\n\n\t$releaseSession(sessionId: number) {\n\t\tthis._chatSessions.delete(sessionId);\n\t}\n\n\tasync $onDidPerformUserAction(event: IChatUserActionEvent): Promise<void> {\n\t\tthis._onDidPerformUserAction.fire(event);\n\t}\n\n\t//#endregion\n}\n"]}