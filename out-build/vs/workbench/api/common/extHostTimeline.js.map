{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostTimeline.ts"],"names":[],"mappings":"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","file":"extHostTimeline.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { UriComponents, URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtHostTimelineShape, MainThreadTimelineShape, IMainContext, MainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { Timeline, TimelineItem, TimelineOptions, TimelineProvider } from 'vs/workbench/contrib/timeline/common/timeline';\nimport { IDisposable, toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CommandsConverter, ExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { ThemeIcon, MarkdownString as MarkdownStringType } from 'vs/workbench/api/common/extHostTypes';\nimport { MarkdownString } from 'vs/workbench/api/common/extHostTypeConverters';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport { isString } from 'vs/base/common/types';\n\nexport interface IExtHostTimeline extends ExtHostTimelineShape {\n\treadonly _serviceBrand: undefined;\n\t$getTimeline(id: string, uri: UriComponents, options: vscode.TimelineOptions, token: vscode.CancellationToken): Promise<Timeline | undefined>;\n}\n\nexport const IExtHostTimeline = createDecorator<IExtHostTimeline>('IExtHostTimeline');\n\nexport class ExtHostTimeline implements IExtHostTimeline {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _proxy: MainThreadTimelineShape;\n\n\tprivate _providers = new Map<string, { provider: TimelineProvider; extension: ExtensionIdentifier }>();\n\n\tprivate _itemsBySourceAndUriMap = new Map<string, Map<string | undefined, Map<string, vscode.TimelineItem>>>();\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tcommands: ExtHostCommands,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadTimeline);\n\n\t\tcommands.registerArgumentProcessor({\n\t\t\tprocessArgument: (arg, extension) => {\n\t\t\t\tif (arg && arg.$mid === MarshalledId.TimelineActionContext) {\n\t\t\t\t\tif (this._providers.get(arg.source) && ExtensionIdentifier.equals(extension, this._providers.get(arg.source)?.extension)) {\n\t\t\t\t\t\tconst uri = arg.uri === undefined ? undefined : URI.revive(arg.uri);\n\t\t\t\t\t\treturn this._itemsBySourceAndUriMap.get(arg.source)?.get(getUriKey(uri))?.get(arg.handle);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tasync $getTimeline(id: string, uri: UriComponents, options: vscode.TimelineOptions, token: vscode.CancellationToken): Promise<Timeline | undefined> {\n\t\tconst item = this._providers.get(id);\n\t\treturn item?.provider.provideTimeline(URI.revive(uri), options, token);\n\t}\n\n\tregisterTimelineProvider(scheme: string | string[], provider: vscode.TimelineProvider, extensionId: ExtensionIdentifier, commandConverter: CommandsConverter): IDisposable {\n\t\tconst timelineDisposables = new DisposableStore();\n\n\t\tconst convertTimelineItem = this.convertTimelineItem(provider.id, commandConverter, timelineDisposables).bind(this);\n\n\t\tlet disposable: IDisposable | undefined;\n\t\tif (provider.onDidChange) {\n\t\t\tdisposable = provider.onDidChange(e => this._proxy.$emitTimelineChangeEvent({ uri: undefined, reset: true, ...e, id: provider.id }), this);\n\t\t}\n\n\t\tconst itemsBySourceAndUriMap = this._itemsBySourceAndUriMap;\n\t\treturn this.registerTimelineProviderCore({\n\t\t\t...provider,\n\t\t\tscheme: scheme,\n\t\t\tonDidChange: undefined,\n\t\t\tasync provideTimeline(uri: URI, options: TimelineOptions, token: CancellationToken) {\n\t\t\t\tif (options?.resetCache) {\n\t\t\t\t\ttimelineDisposables.clear();\n\n\t\t\t\t\t// For now, only allow the caching of a single Uri\n\t\t\t\t\t// itemsBySourceAndUriMap.get(provider.id)?.get(getUriKey(uri))?.clear();\n\t\t\t\t\titemsBySourceAndUriMap.get(provider.id)?.clear();\n\t\t\t\t}\n\n\t\t\t\tconst result = await provider.provideTimeline(uri, options, token);\n\t\t\t\tif (result === undefined || result === null) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// TODO: Should we bother converting all the data if we aren't caching? Meaning it is being requested by an extension?\n\n\t\t\t\tconst convertItem = convertTimelineItem(uri, options);\n\t\t\t\treturn {\n\t\t\t\t\t...result,\n\t\t\t\t\tsource: provider.id,\n\t\t\t\t\titems: result.items.map(convertItem)\n\t\t\t\t};\n\t\t\t},\n\t\t\tdispose() {\n\t\t\t\tfor (const sourceMap of itemsBySourceAndUriMap.values()) {\n\t\t\t\t\tsourceMap.get(provider.id)?.clear();\n\t\t\t\t}\n\n\t\t\t\tdisposable?.dispose();\n\t\t\t\ttimelineDisposables.dispose();\n\t\t\t}\n\t\t}, extensionId);\n\t}\n\n\tprivate convertTimelineItem(source: string, commandConverter: CommandsConverter, disposables: DisposableStore) {\n\t\treturn (uri: URI, options?: TimelineOptions) => {\n\t\t\tlet items: Map<string, vscode.TimelineItem> | undefined;\n\t\t\tif (options?.cacheResults) {\n\t\t\t\tlet itemsByUri = this._itemsBySourceAndUriMap.get(source);\n\t\t\t\tif (itemsByUri === undefined) {\n\t\t\t\t\titemsByUri = new Map();\n\t\t\t\t\tthis._itemsBySourceAndUriMap.set(source, itemsByUri);\n\t\t\t\t}\n\n\t\t\t\tconst uriKey = getUriKey(uri);\n\t\t\t\titems = itemsByUri.get(uriKey);\n\t\t\t\tif (items === undefined) {\n\t\t\t\t\titems = new Map();\n\t\t\t\t\titemsByUri.set(uriKey, items);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (item: vscode.TimelineItem): TimelineItem => {\n\t\t\t\tconst { iconPath, ...props } = item;\n\n\t\t\t\tconst handle = `${source}|${item.id ?? item.timestamp}`;\n\t\t\t\titems?.set(handle, item);\n\n\t\t\t\tlet icon;\n\t\t\t\tlet iconDark;\n\t\t\t\tlet themeIcon;\n\t\t\t\tif (item.iconPath) {\n\t\t\t\t\tif (iconPath instanceof ThemeIcon) {\n\t\t\t\t\t\tthemeIcon = { id: iconPath.id, color: iconPath.color };\n\t\t\t\t\t}\n\t\t\t\t\telse if (URI.isUri(iconPath)) {\n\t\t\t\t\t\ticon = iconPath;\n\t\t\t\t\t\ticonDark = iconPath;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t({ light: icon, dark: iconDark } = iconPath as { light: URI; dark: URI });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet tooltip;\n\t\t\t\tif (MarkdownStringType.isMarkdownString(props.tooltip)) {\n\t\t\t\t\ttooltip = MarkdownString.from(props.tooltip);\n\t\t\t\t}\n\t\t\t\telse if (isString(props.tooltip)) {\n\t\t\t\t\ttooltip = props.tooltip;\n\t\t\t\t}\n\t\t\t\t// TODO @jkearl, remove once migration complete.\n\t\t\t\telse if (MarkdownStringType.isMarkdownString((props as any).detail)) {\n\t\t\t\t\tconsole.warn('Using deprecated TimelineItem.detail, migrate to TimelineItem.tooltip');\n\t\t\t\t\ttooltip = MarkdownString.from((props as any).detail);\n\t\t\t\t}\n\t\t\t\telse if (isString((props as any).detail)) {\n\t\t\t\t\tconsole.warn('Using deprecated TimelineItem.detail, migrate to TimelineItem.tooltip');\n\t\t\t\t\ttooltip = (props as any).detail;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...props,\n\t\t\t\t\tid: props.id ?? undefined,\n\t\t\t\t\thandle: handle,\n\t\t\t\t\tsource: source,\n\t\t\t\t\tcommand: item.command ? commandConverter.toInternal(item.command, disposables) : undefined,\n\t\t\t\t\ticon: icon,\n\t\t\t\t\ticonDark: iconDark,\n\t\t\t\t\tthemeIcon: themeIcon,\n\t\t\t\t\ttooltip,\n\t\t\t\t\taccessibilityInformation: item.accessibilityInformation\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n\n\tprivate registerTimelineProviderCore(provider: TimelineProvider, extension: ExtensionIdentifier): IDisposable {\n\t\t// console.log(`ExtHostTimeline#registerTimelineProvider: id=${provider.id}`);\n\n\t\tconst existing = this._providers.get(provider.id);\n\t\tif (existing) {\n\t\t\tthrow new Error(`Timeline Provider ${provider.id} already exists.`);\n\t\t}\n\n\t\tthis._proxy.$registerTimelineProvider({\n\t\t\tid: provider.id,\n\t\t\tlabel: provider.label,\n\t\t\tscheme: provider.scheme\n\t\t});\n\t\tthis._providers.set(provider.id, { provider, extension });\n\n\t\treturn toDisposable(() => {\n\t\t\tfor (const sourceMap of this._itemsBySourceAndUriMap.values()) {\n\t\t\t\tsourceMap.get(provider.id)?.clear();\n\t\t\t}\n\n\t\t\tthis._providers.delete(provider.id);\n\t\t\tthis._proxy.$unregisterTimelineProvider(provider.id);\n\t\t\tprovider.dispose();\n\t\t});\n\t}\n}\n\nfunction getUriKey(uri: URI | undefined): string | undefined {\n\treturn uri?.toString();\n}\n"]}