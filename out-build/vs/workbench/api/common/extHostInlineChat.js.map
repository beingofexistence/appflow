{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostInlineChat.ts"],"names":[],"mappings":"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","file":"extHostInlineChat.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ISelection } from 'vs/editor/common/core/selection';\nimport { IInlineChatSession, IInlineChatRequest, InlineChatResponseFeedbackKind, InlineChatResponseType } from 'vs/workbench/contrib/inlineChat/common/inlineChat';\nimport { IRelaxedExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtHostInlineChatShape, IInlineChatResponseDto, IMainContext, MainContext, MainThreadInlineChatShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport * as typeConvert from 'vs/workbench/api/common/extHostTypeConverters';\nimport * as extHostTypes from 'vs/workbench/api/common/extHostTypes';\nimport type * as vscode from 'vscode';\nimport { ApiCommand, ApiCommandArgument, ApiCommandResult, ExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IPosition } from 'vs/editor/common/core/position';\n\nclass ProviderWrapper {\n\n\tprivate static _pool = 0;\n\n\treadonly handle: number = ProviderWrapper._pool++;\n\n\tconstructor(\n\t\treadonly extension: Readonly<IRelaxedExtensionDescription>,\n\t\treadonly provider: vscode.InteractiveEditorSessionProvider,\n\t) { }\n}\n\nclass SessionWrapper {\n\n\treadonly responses: (vscode.InteractiveEditorResponse | vscode.InteractiveEditorMessageResponse)[] = [];\n\n\tconstructor(\n\t\treadonly session: vscode.InteractiveEditorSession\n\t) { }\n}\n\nexport class ExtHostInteractiveEditor implements ExtHostInlineChatShape {\n\n\tprivate static _nextId = 0;\n\n\tprivate readonly _inputProvider = new Map<number, ProviderWrapper>();\n\tprivate readonly _inputSessions = new Map<number, SessionWrapper>();\n\tprivate readonly _proxy: MainThreadInlineChatShape;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\textHostCommands: ExtHostCommands,\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadInlineChat);\n\n\t\ttype EditorChatApiArg = {\n\t\t\tinitialRange?: vscode.Range;\n\t\t\tinitialSelection?: vscode.Selection;\n\t\t\tmessage?: string;\n\t\t\tautoSend?: boolean;\n\t\t\tposition?: vscode.Position;\n\t\t};\n\n\t\ttype InteractiveEditorRunOptions = {\n\t\t\tinitialRange?: IRange;\n\t\t\tinitialSelection?: ISelection;\n\t\t\tmessage?: string;\n\t\t\tautoSend?: boolean;\n\t\t\tposition?: IPosition;\n\t\t};\n\n\t\textHostCommands.registerApiCommand(new ApiCommand(\n\t\t\t'vscode.editorChat.start', 'inlineChat.start', 'Invoke a new editor chat session',\n\t\t\t[new ApiCommandArgument<EditorChatApiArg | undefined, InteractiveEditorRunOptions | undefined>('Run arguments', '', _v => true, v => {\n\n\t\t\t\tif (!v) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tinitialRange: v.initialRange ? typeConvert.Range.from(v.initialRange) : undefined,\n\t\t\t\t\tinitialSelection: v.initialSelection ? typeConvert.Selection.from(v.initialSelection) : undefined,\n\t\t\t\t\tmessage: v.message,\n\t\t\t\t\tautoSend: v.autoSend,\n\t\t\t\t\tposition: v.position ? typeConvert.Position.from(v.position) : undefined,\n\t\t\t\t};\n\t\t\t})],\n\t\t\tApiCommandResult.Void\n\t\t));\n\t}\n\n\tregisterProvider(extension: Readonly<IRelaxedExtensionDescription>, provider: vscode.InteractiveEditorSessionProvider, metadata: vscode.InteractiveEditorSessionProviderMetadata): vscode.Disposable {\n\t\tconst wrapper = new ProviderWrapper(extension, provider);\n\t\tthis._inputProvider.set(wrapper.handle, wrapper);\n\t\tthis._proxy.$registerInteractiveEditorProvider(wrapper.handle, metadata.label, extension.identifier.value, typeof provider.handleInteractiveEditorResponseFeedback === 'function');\n\t\treturn toDisposable(() => {\n\t\t\tthis._proxy.$unregisterInteractiveEditorProvider(wrapper.handle);\n\t\t\tthis._inputProvider.delete(wrapper.handle);\n\t\t});\n\t}\n\n\tasync $prepareSession(handle: number, uri: UriComponents, range: ISelection, token: CancellationToken): Promise<IInlineChatSession | undefined> {\n\t\tconst entry = this._inputProvider.get(handle);\n\t\tif (!entry) {\n\t\t\tthis._logService.warn('CANNOT prepare session because the PROVIDER IS GONE');\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst document = this._documents.getDocument(URI.revive(uri));\n\t\tconst selection = typeConvert.Selection.to(range);\n\t\tconst session = await entry.provider.prepareInteractiveEditorSession({ document, selection }, token);\n\t\tif (!session) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (session.wholeRange && !session.wholeRange.contains(selection)) {\n\t\t\tthrow new Error(`InteractiveEditorSessionProvider returned a wholeRange that does not contain the selection.`);\n\t\t}\n\n\t\tconst id = ExtHostInteractiveEditor._nextId++;\n\t\tthis._inputSessions.set(id, new SessionWrapper(session));\n\n\t\treturn {\n\t\t\tid,\n\t\t\tplaceholder: session.placeholder,\n\t\t\tslashCommands: session.slashCommands?.map(c => ({ command: c.command, detail: c.detail, refer: c.refer, executeImmediately: c.executeImmediately })),\n\t\t\twholeRange: typeConvert.Range.from(session.wholeRange),\n\t\t\tmessage: session.message\n\t\t};\n\t}\n\n\tasync $provideResponse(handle: number, item: IInlineChatSession, request: IInlineChatRequest, token: CancellationToken): Promise<IInlineChatResponseDto | undefined> {\n\t\tconst entry = this._inputProvider.get(handle);\n\t\tif (!entry) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst sessionData = this._inputSessions.get(item.id);\n\t\tif (!sessionData) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst apiRequest: vscode.InteractiveEditorRequest = {\n\t\t\tprompt: request.prompt,\n\t\t\tselection: typeConvert.Selection.to(request.selection),\n\t\t\twholeRange: typeConvert.Range.to(request.wholeRange),\n\t\t\tattempt: request.attempt,\n\t\t\tlive: request.live,\n\t\t};\n\n\n\t\tlet done = false;\n\t\tconst progress: vscode.Progress<{ message?: string; edits?: vscode.TextEdit[] }> = {\n\t\t\treport: value => {\n\t\t\t\tif (!request.live) {\n\t\t\t\t\tthrow new Error('Progress reporting is only supported for live sessions');\n\t\t\t\t}\n\t\t\t\tif (done || token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!value.message && !value.edits) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._proxy.$handleProgressChunk(request.requestId, {\n\t\t\t\t\tmessage: value.message,\n\t\t\t\t\tedits: value.edits?.map(typeConvert.TextEdit.from)\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tconst task = entry.provider.provideInteractiveEditorResponse(sessionData.session, apiRequest, progress, token);\n\n\t\tPromise.resolve(task).finally(() => done = true);\n\n\t\tconst res = await task;\n\n\t\tif (res) {\n\n\t\t\tconst id = sessionData.responses.push(res) - 1;\n\n\t\t\tconst stub: Partial<IInlineChatResponseDto> = {\n\t\t\t\twholeRange: typeConvert.Range.from(res.wholeRange),\n\t\t\t\tplaceholder: res.placeholder,\n\t\t\t};\n\n\t\t\tif (ExtHostInteractiveEditor._isMessageResponse(res)) {\n\t\t\t\treturn {\n\t\t\t\t\t...stub,\n\t\t\t\t\tid,\n\t\t\t\t\ttype: InlineChatResponseType.Message,\n\t\t\t\t\tmessage: typeConvert.MarkdownString.from(res.contents),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst { edits } = res;\n\t\t\tif (edits instanceof extHostTypes.WorkspaceEdit) {\n\t\t\t\treturn {\n\t\t\t\t\t...stub,\n\t\t\t\t\tid,\n\t\t\t\t\ttype: InlineChatResponseType.BulkEdit,\n\t\t\t\t\tedits: typeConvert.WorkspaceEdit.from(edits),\n\t\t\t\t};\n\n\t\t\t} else if (Array.isArray(edits)) {\n\t\t\t\treturn {\n\t\t\t\t\t...stub,\n\t\t\t\t\tid,\n\t\t\t\t\ttype: InlineChatResponseType.EditorEdit,\n\t\t\t\t\tedits: edits.map(typeConvert.TextEdit.from),\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t$handleFeedback(handle: number, sessionId: number, responseId: number, kind: InlineChatResponseFeedbackKind): void {\n\t\tconst entry = this._inputProvider.get(handle);\n\t\tconst sessionData = this._inputSessions.get(sessionId);\n\t\tconst response = sessionData?.responses[responseId];\n\t\tif (entry && response) {\n\t\t\tconst apiKind = typeConvert.InteractiveEditorResponseFeedbackKind.to(kind);\n\t\t\tentry.provider.handleInteractiveEditorResponseFeedback?.(sessionData.session, response, apiKind);\n\t\t}\n\t}\n\n\t$releaseSession(handle: number, sessionId: number) {\n\t\t// TODO@jrieken remove this\n\t}\n\n\tprivate static _isMessageResponse(thing: any): thing is vscode.InteractiveEditorMessageResponse {\n\t\treturn typeof thing === 'object' && typeof (<vscode.InteractiveEditorMessageResponse>thing).contents === 'object';\n\t}\n}\n"]}