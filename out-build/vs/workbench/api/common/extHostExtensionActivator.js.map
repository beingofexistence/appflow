{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostExtensionActivator.ts"],"names":[],"mappings":"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","file":"extHostExtensionActivator.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport * as errors from 'vs/base/common/errors';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { ExtensionDescriptionRegistry } from 'vs/workbench/services/extensions/common/extensionDescriptionRegistry';\nimport { ExtensionIdentifier, ExtensionIdentifierMap } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionActivationReason, MissingExtensionDependency } from 'vs/workbench/services/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Barrier } from 'vs/base/common/async';\n\n/**\n * Represents the source code (module) of an extension.\n */\nexport interface IExtensionModule {\n\tactivate?(ctx: vscode.ExtensionContext): Promise<IExtensionAPI>;\n\tdeactivate?(): void;\n}\n\n/**\n * Represents the API of an extension (return value of `activate`).\n */\nexport interface IExtensionAPI {\n\t// _extensionAPIBrand: any;\n}\n\nexport type ExtensionActivationTimesFragment = {\n\tstartup?: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Activation occurred during startup' };\n\tcodeLoadingTime?: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Time it took to load the extension\\'s code' };\n\tactivateCallTime?: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Time it took to call activate' };\n\tactivateResolvedTime?: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Time it took for async-activation to finish' };\n};\n\nexport class ExtensionActivationTimes {\n\n\tpublic static readonly NONE = new ExtensionActivationTimes(false, -1, -1, -1);\n\n\tpublic readonly startup: boolean;\n\tpublic readonly codeLoadingTime: number;\n\tpublic readonly activateCallTime: number;\n\tpublic readonly activateResolvedTime: number;\n\n\tconstructor(startup: boolean, codeLoadingTime: number, activateCallTime: number, activateResolvedTime: number) {\n\t\tthis.startup = startup;\n\t\tthis.codeLoadingTime = codeLoadingTime;\n\t\tthis.activateCallTime = activateCallTime;\n\t\tthis.activateResolvedTime = activateResolvedTime;\n\t}\n}\n\nexport class ExtensionActivationTimesBuilder {\n\n\tprivate readonly _startup: boolean;\n\tprivate _codeLoadingStart: number;\n\tprivate _codeLoadingStop: number;\n\tprivate _activateCallStart: number;\n\tprivate _activateCallStop: number;\n\tprivate _activateResolveStart: number;\n\tprivate _activateResolveStop: number;\n\n\tconstructor(startup: boolean) {\n\t\tthis._startup = startup;\n\t\tthis._codeLoadingStart = -1;\n\t\tthis._codeLoadingStop = -1;\n\t\tthis._activateCallStart = -1;\n\t\tthis._activateCallStop = -1;\n\t\tthis._activateResolveStart = -1;\n\t\tthis._activateResolveStop = -1;\n\t}\n\n\tprivate _delta(start: number, stop: number): number {\n\t\tif (start === -1 || stop === -1) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn stop - start;\n\t}\n\n\tpublic build(): ExtensionActivationTimes {\n\t\treturn new ExtensionActivationTimes(\n\t\t\tthis._startup,\n\t\t\tthis._delta(this._codeLoadingStart, this._codeLoadingStop),\n\t\t\tthis._delta(this._activateCallStart, this._activateCallStop),\n\t\t\tthis._delta(this._activateResolveStart, this._activateResolveStop)\n\t\t);\n\t}\n\n\tpublic codeLoadingStart(): void {\n\t\tthis._codeLoadingStart = Date.now();\n\t}\n\n\tpublic codeLoadingStop(): void {\n\t\tthis._codeLoadingStop = Date.now();\n\t}\n\n\tpublic activateCallStart(): void {\n\t\tthis._activateCallStart = Date.now();\n\t}\n\n\tpublic activateCallStop(): void {\n\t\tthis._activateCallStop = Date.now();\n\t}\n\n\tpublic activateResolveStart(): void {\n\t\tthis._activateResolveStart = Date.now();\n\t}\n\n\tpublic activateResolveStop(): void {\n\t\tthis._activateResolveStop = Date.now();\n\t}\n}\n\nexport class ActivatedExtension {\n\n\tpublic readonly activationFailed: boolean;\n\tpublic readonly activationFailedError: Error | null;\n\tpublic readonly activationTimes: ExtensionActivationTimes;\n\tpublic readonly module: IExtensionModule;\n\tpublic readonly exports: IExtensionAPI | undefined;\n\tpublic readonly subscriptions: IDisposable[];\n\n\tconstructor(\n\t\tactivationFailed: boolean,\n\t\tactivationFailedError: Error | null,\n\t\tactivationTimes: ExtensionActivationTimes,\n\t\tmodule: IExtensionModule,\n\t\texports: IExtensionAPI | undefined,\n\t\tsubscriptions: IDisposable[]\n\t) {\n\t\tthis.activationFailed = activationFailed;\n\t\tthis.activationFailedError = activationFailedError;\n\t\tthis.activationTimes = activationTimes;\n\t\tthis.module = module;\n\t\tthis.exports = exports;\n\t\tthis.subscriptions = subscriptions;\n\t}\n}\n\nexport class EmptyExtension extends ActivatedExtension {\n\tconstructor(activationTimes: ExtensionActivationTimes) {\n\t\tsuper(false, null, activationTimes, { activate: undefined, deactivate: undefined }, undefined, []);\n\t}\n}\n\nexport class HostExtension extends ActivatedExtension {\n\tconstructor() {\n\t\tsuper(false, null, ExtensionActivationTimes.NONE, { activate: undefined, deactivate: undefined }, undefined, []);\n\t}\n}\n\nclass FailedExtension extends ActivatedExtension {\n\tconstructor(activationError: Error) {\n\t\tsuper(true, activationError, ExtensionActivationTimes.NONE, { activate: undefined, deactivate: undefined }, undefined, []);\n\t}\n}\n\nexport interface IExtensionsActivatorHost {\n\tonExtensionActivationError(extensionId: ExtensionIdentifier, error: Error | null, missingExtensionDependency: MissingExtensionDependency | null): void;\n\tactualActivateExtension(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<ActivatedExtension>;\n}\n\ntype ActivationIdAndReason = { id: ExtensionIdentifier; reason: ExtensionActivationReason };\n\nexport class ExtensionsActivator implements IDisposable {\n\n\tprivate readonly _registry: ExtensionDescriptionRegistry;\n\tprivate readonly _globalRegistry: ExtensionDescriptionRegistry;\n\tprivate readonly _host: IExtensionsActivatorHost;\n\tprivate readonly _operations: ExtensionIdentifierMap<ActivationOperation>;\n\t/**\n\t * A map of already activated events to speed things up if the same activation event is triggered multiple times.\n\t */\n\tprivate readonly _alreadyActivatedEvents: { [activationEvent: string]: boolean };\n\n\tconstructor(\n\t\tregistry: ExtensionDescriptionRegistry,\n\t\tglobalRegistry: ExtensionDescriptionRegistry,\n\t\thost: IExtensionsActivatorHost,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tthis._registry = registry;\n\t\tthis._globalRegistry = globalRegistry;\n\t\tthis._host = host;\n\t\tthis._operations = new ExtensionIdentifierMap<ActivationOperation>();\n\t\tthis._alreadyActivatedEvents = Object.create(null);\n\t}\n\n\tpublic dispose(): void {\n\t\tfor (const [_, op] of this._operations) {\n\t\t\top.dispose();\n\t\t}\n\t}\n\n\tpublic async waitForActivatingExtensions(): Promise<void> {\n\t\tconst res: Promise<boolean>[] = [];\n\t\tfor (const [_, op] of this._operations) {\n\t\t\tres.push(op.wait());\n\t\t}\n\t\tawait Promise.all(res);\n\t}\n\n\tpublic isActivated(extensionId: ExtensionIdentifier): boolean {\n\t\tconst op = this._operations.get(extensionId);\n\t\treturn Boolean(op && op.value);\n\t}\n\n\tpublic getActivatedExtension(extensionId: ExtensionIdentifier): ActivatedExtension {\n\t\tconst op = this._operations.get(extensionId);\n\t\tif (!op || !op.value) {\n\t\t\tthrow new Error(`Extension '${extensionId.value}' is not known or not activated`);\n\t\t}\n\t\treturn op.value;\n\t}\n\n\tpublic async activateByEvent(activationEvent: string, startup: boolean): Promise<void> {\n\t\tif (this._alreadyActivatedEvents[activationEvent]) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activateExtensions = this._registry.getExtensionDescriptionsForActivationEvent(activationEvent);\n\t\tawait this._activateExtensions(activateExtensions.map(e => ({\n\t\t\tid: e.identifier,\n\t\t\treason: { startup, extensionId: e.identifier, activationEvent }\n\t\t})));\n\n\t\tthis._alreadyActivatedEvents[activationEvent] = true;\n\t}\n\n\tpublic activateById(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\tconst desc = this._registry.getExtensionDescription(extensionId);\n\t\tif (!desc) {\n\t\t\tthrow new Error(`Extension '${extensionId}' is not known`);\n\t\t}\n\t\treturn this._activateExtensions([{ id: desc.identifier, reason }]);\n\t}\n\n\tprivate async _activateExtensions(extensions: ActivationIdAndReason[]): Promise<void> {\n\t\tconst operations = extensions\n\t\t\t.filter((p) => !this.isActivated(p.id))\n\t\t\t.map(ext => this._handleActivationRequest(ext));\n\t\tawait Promise.all(operations.map(op => op.wait()));\n\t}\n\n\t/**\n\t * Handle semantics related to dependencies for `currentExtension`.\n\t * We don't need to worry about dependency loops because they are handled by the registry.\n\t */\n\tprivate _handleActivationRequest(currentActivation: ActivationIdAndReason): ActivationOperation {\n\t\tif (this._operations.has(currentActivation.id)) {\n\t\t\treturn this._operations.get(currentActivation.id)!;\n\t\t}\n\n\t\tif (this._isHostExtension(currentActivation.id)) {\n\t\t\treturn this._createAndSaveOperation(currentActivation, null, [], null);\n\t\t}\n\n\t\tconst currentExtension = this._registry.getExtensionDescription(currentActivation.id);\n\t\tif (!currentExtension) {\n\t\t\t// Error condition 0: unknown extension\n\t\t\tconst error = new Error(`Cannot activate unknown extension '${currentActivation.id.value}'`);\n\t\t\tconst result = this._createAndSaveOperation(currentActivation, null, [], new FailedExtension(error));\n\t\t\tthis._host.onExtensionActivationError(\n\t\t\t\tcurrentActivation.id,\n\t\t\t\terror,\n\t\t\t\tnew MissingExtensionDependency(currentActivation.id.value)\n\t\t\t);\n\t\t\treturn result;\n\t\t}\n\n\t\tconst deps: ActivationOperation[] = [];\n\t\tconst depIds = (typeof currentExtension.extensionDependencies === 'undefined' ? [] : currentExtension.extensionDependencies);\n\t\tfor (const depId of depIds) {\n\n\t\t\tif (this._isResolvedExtension(depId)) {\n\t\t\t\t// This dependency is already resolved\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst dep = this._operations.get(depId);\n\t\t\tif (dep) {\n\t\t\t\tdeps.push(dep);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this._isHostExtension(depId)) {\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tdeps.push(this._handleActivationRequest({\n\t\t\t\t\tid: this._globalRegistry.getExtensionDescription(depId)!.identifier,\n\t\t\t\t\treason: currentActivation.reason\n\t\t\t\t}));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst depDesc = this._registry.getExtensionDescription(depId);\n\t\t\tif (depDesc) {\n\t\t\t\tif (!depDesc.main && !depDesc.browser) {\n\t\t\t\t\t// this dependency does not need to activate because it is descriptive only\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tdeps.push(this._handleActivationRequest({\n\t\t\t\t\tid: depDesc.identifier,\n\t\t\t\t\treason: currentActivation.reason\n\t\t\t\t}));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Error condition 1: unknown dependency\n\t\t\tconst currentExtensionFriendlyName = currentExtension.displayName || currentExtension.identifier.value;\n\t\t\tconst error = new Error(`Cannot activate the '${currentExtensionFriendlyName}' extension because it depends on unknown extension '${depId}'`);\n\t\t\tconst result = this._createAndSaveOperation(currentActivation, currentExtension.displayName, [], new FailedExtension(error));\n\t\t\tthis._host.onExtensionActivationError(\n\t\t\t\tcurrentExtension.identifier,\n\t\t\t\terror,\n\t\t\t\tnew MissingExtensionDependency(depId)\n\t\t\t);\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this._createAndSaveOperation(currentActivation, currentExtension.displayName, deps, null);\n\t}\n\n\tprivate _createAndSaveOperation(activation: ActivationIdAndReason, displayName: string | null | undefined, deps: ActivationOperation[], value: ActivatedExtension | null): ActivationOperation {\n\t\tconst operation = new ActivationOperation(activation.id, displayName, activation.reason, deps, value, this._host, this._logService);\n\t\tthis._operations.set(activation.id, operation);\n\t\treturn operation;\n\t}\n\n\tprivate _isHostExtension(extensionId: ExtensionIdentifier | string): boolean {\n\t\treturn ExtensionDescriptionRegistry.isHostExtension(extensionId, this._registry, this._globalRegistry);\n\t}\n\n\tprivate _isResolvedExtension(extensionId: ExtensionIdentifier | string): boolean {\n\t\tconst extensionDescription = this._globalRegistry.getExtensionDescription(extensionId);\n\t\tif (!extensionDescription) {\n\t\t\t// unknown extension\n\t\t\treturn false;\n\t\t}\n\t\treturn (!extensionDescription.main && !extensionDescription.browser);\n\t}\n}\n\nclass ActivationOperation {\n\n\tprivate readonly _barrier = new Barrier();\n\tprivate _isDisposed = false;\n\n\tpublic get value(): ActivatedExtension | null {\n\t\treturn this._value;\n\t}\n\n\tpublic get friendlyName(): string {\n\t\treturn this._displayName || this._id.value;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _id: ExtensionIdentifier,\n\t\tprivate readonly _displayName: string | null | undefined,\n\t\tprivate readonly _reason: ExtensionActivationReason,\n\t\tprivate readonly _deps: ActivationOperation[],\n\t\tprivate _value: ActivatedExtension | null,\n\t\tprivate readonly _host: IExtensionsActivatorHost,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tthis._initialize();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic wait() {\n\t\treturn this._barrier.wait();\n\t}\n\n\tprivate async _initialize(): Promise<void> {\n\t\tawait this._waitForDepsThenActivate();\n\t\tthis._barrier.open();\n\t}\n\n\tprivate async _waitForDepsThenActivate(): Promise<void> {\n\t\tif (this._value) {\n\t\t\t// this operation is already finished\n\t\t\treturn;\n\t\t}\n\n\t\twhile (this._deps.length > 0) {\n\t\t\t// remove completed deps\n\t\t\tfor (let i = 0; i < this._deps.length; i++) {\n\t\t\t\tconst dep = this._deps[i];\n\n\t\t\t\tif (dep.value && !dep.value.activationFailed) {\n\t\t\t\t\t// the dependency is already activated OK\n\t\t\t\t\tthis._deps.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (dep.value && dep.value.activationFailed) {\n\t\t\t\t\t// Error condition 2: a dependency has already failed activation\n\t\t\t\t\tconst error = new Error(`Cannot activate the '${this.friendlyName}' extension because its dependency '${dep.friendlyName}' failed to activate`);\n\t\t\t\t\t(<any>error).detail = dep.value.activationFailedError;\n\t\t\t\t\tthis._value = new FailedExtension(error);\n\t\t\t\t\tthis._host.onExtensionActivationError(this._id, error, null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._deps.length > 0) {\n\t\t\t\t// wait for one dependency\n\t\t\t\tawait Promise.race(this._deps.map(dep => dep.wait()));\n\t\t\t}\n\t\t}\n\n\t\tawait this._activate();\n\t}\n\n\tprivate async _activate(): Promise<void> {\n\t\ttry {\n\t\t\tthis._value = await this._host.actualActivateExtension(this._id, this._reason);\n\t\t} catch (err) {\n\n\t\t\tconst error = new Error();\n\t\t\tif (err && err.name) {\n\t\t\t\terror.name = err.name;\n\t\t\t}\n\t\t\tif (err && err.message) {\n\t\t\t\terror.message = `Activating extension '${this._id.value}' failed: ${err.message}.`;\n\t\t\t} else {\n\t\t\t\terror.message = `Activating extension '${this._id.value}' failed: ${err}.`;\n\t\t\t}\n\t\t\tif (err && err.stack) {\n\t\t\t\terror.stack = err.stack;\n\t\t\t}\n\n\t\t\t// Treat the extension as being empty\n\t\t\tthis._value = new FailedExtension(error);\n\n\t\t\tif (this._isDisposed && errors.isCancellationError(err)) {\n\t\t\t\t// It is expected for ongoing activations to fail if the extension host is going down\n\t\t\t\t// So simply ignore and don't log canceled errors in this case\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._host.onExtensionActivationError(this._id, error, null);\n\t\t\tthis._logService.error(`Activating extension ${this._id.value} failed due to an error:`);\n\t\t\tthis._logService.error(err);\n\t\t}\n\t}\n}\n"]}