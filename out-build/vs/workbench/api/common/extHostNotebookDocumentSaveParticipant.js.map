{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostNotebookDocumentSaveParticipant.ts"],"names":[],"mappings":"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","file":"extHostNotebookDocumentSaveParticipant.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { AsyncEmitter, Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtHostNotebookDocumentSaveParticipantShape, IWorkspaceEditDto, MainThreadBulkEditsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostNotebookController } from 'vs/workbench/api/common/extHostNotebook';\nimport { TextDocumentSaveReason, WorkspaceEdit as WorksapceEditConverter } from 'vs/workbench/api/common/extHostTypeConverters';\nimport { WorkspaceEdit } from 'vs/workbench/api/common/extHostTypes';\nimport { SaveReason } from 'vs/workbench/common/editor';\nimport { NotebookDocumentWillSaveEvent } from 'vscode';\n\ninterface IExtensionListener<E> {\n\textension: IExtensionDescription;\n\t(e: E): any;\n}\n\nexport class ExtHostNotebookDocumentSaveParticipant implements ExtHostNotebookDocumentSaveParticipantShape {\n\n\tprivate readonly _onWillSaveNotebookDocumentEvent = new AsyncEmitter<NotebookDocumentWillSaveEvent>();\n\n\tconstructor(\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _notebooksAndEditors: ExtHostNotebookController,\n\t\tprivate readonly _mainThreadBulkEdits: MainThreadBulkEditsShape,\n\t\tprivate readonly _thresholds: { timeout: number; errors: number } = { timeout: 1500, errors: 3 }) {\n\n\t}\n\n\tdispose(): void {\n\t}\n\n\tgetOnWillSaveNotebookDocumentEvent(extension: IExtensionDescription): Event<NotebookDocumentWillSaveEvent> {\n\t\treturn (listener, thisArg, disposables) => {\n\t\t\tconst wrappedListener: IExtensionListener<NotebookDocumentWillSaveEvent> = function wrapped(e) { listener.call(thisArg, e); };\n\t\t\twrappedListener.extension = extension;\n\t\t\treturn this._onWillSaveNotebookDocumentEvent.event(wrappedListener, undefined, disposables);\n\t\t};\n\t}\n\n\tasync $participateInSave(resource: UriComponents, reason: SaveReason, token: CancellationToken): Promise<boolean> {\n\t\tconst revivedUri = URI.revive(resource);\n\t\tconst document = this._notebooksAndEditors.getNotebookDocument(revivedUri);\n\n\t\tif (!document) {\n\t\t\tthrow new Error('Unable to resolve notebook document');\n\t\t}\n\n\t\tconst edits: WorkspaceEdit[] = [];\n\n\t\tawait this._onWillSaveNotebookDocumentEvent.fireAsync({ notebook: document.apiNotebook, reason: TextDocumentSaveReason.to(reason) }, token, async (thenable: Promise<unknown>, listener) => {\n\t\t\tconst now = Date.now();\n\t\t\tconst data = await await Promise.resolve(thenable);\n\t\t\tif (Date.now() - now > this._thresholds.timeout) {\n\t\t\t\tthis._logService.warn('onWillSaveNotebookDocument-listener from extension', (<IExtensionListener<NotebookDocumentWillSaveEvent>>listener).extension.identifier);\n\t\t\t}\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (data) {\n\t\t\t\tif (data instanceof WorkspaceEdit) {\n\t\t\t\t\tedits.push(data);\n\t\t\t\t} else {\n\t\t\t\t\t// ignore invalid data\n\t\t\t\t\tthis._logService.warn('onWillSaveNotebookDocument-listener from extension', (<IExtensionListener<NotebookDocumentWillSaveEvent>>listener).extension.identifier, 'ignored due to invalid data');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t});\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (edits.length === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst dto: IWorkspaceEditDto = { edits: [] };\n\t\tfor (const edit of edits) {\n\t\t\tconst { edits } = WorksapceEditConverter.from(edit);\n\t\t\tdto.edits = dto.edits.concat(edits);\n\t\t}\n\n\t\treturn this._mainThreadBulkEdits.$tryApplyWorkspaceEdit(dto);\n\t}\n}\n"]}