{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostQuickDiff.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG,MAAa,IAAI;iBACD,MAAC,GAAoB,CAApB,AAAqB,CAAC;QAKtC,YACC,WAAyB,EACR,CAA2C;YAA3C,MAAC,GAAD,CAAC,CAA0C;YAJrD,MAAC,GAAkD,IAAI,GAAG,EAAE,CAAC;YAMpE,IAAI,CAAC,CAAC,GAAO,WAAW,CAAC,QAAQ,CAAC,sBAAG,CAAS,mBAAmB,CAAC,CAAC;QACpE,CAAC;QAED,wBAAwB,CAAC,MAAc,EAAE,aAA4B,EAAE,KAAwB;YAC9F,MAAM,GAAG,GAAG,SAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,MAAM,CAAC,CAAC;YAE5C,IAAI,CAAC,QAAQ,EAAE;gBACd,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC7B;YAED,OAAO,IAAA,WAAG,EAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,uBAAwB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;iBACnE,IAAI,CAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;QAC9C,CAAC;QAED,yBAAyB,CAAC,QAAiC,EAAE,iBAA2C,EAAE,KAAa,EAAE,OAAoB;YAC5I,MAAM,MAAM,GAAG,IAAI,CAAa,CAAC,EAAW,CAAC;YAC7C,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;YAC9C,IAAI,CAAC,CAAC,CAAK,0BAA0B,CAAC,MAAM,EAAE,wCAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAc,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YACpH,OAAO;gBACN,OAAO,EAAE,GAAG,EAAE;oBACb,IAAI,CAAC,CAAC,CAAK,4BAA4B,CAAC,MAAM,CAAC,CAAC;oBAChD,IAAI,CAAC,CAAC,CAAS,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC/B,CAAC;aACD,CAAC;QACH,CAAC;;IAnCF,oBAoCC","file":"extHostQuickDiff.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ExtHostQuickDiffShape, IMainContext, MainContext, MainThreadQuickDiffShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { asPromise } from 'vs/base/common/async';\nimport { DocumentSelector } from 'vs/workbench/api/common/extHostTypeConverters';\nimport { IURITransformer } from 'vs/base/common/uriIpc';\n\nexport class ExtHostQuickDiff implements ExtHostQuickDiffShape {\n\tprivate static handlePool: number = 0;\n\n\tprivate proxy: MainThreadQuickDiffShape;\n\tprivate providers: Map<number, vscode.QuickDiffProvider> = new Map();\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly uriTransformer: IURITransformer | undefined\n\t) {\n\t\tthis.proxy = mainContext.getProxy(MainContext.MainThreadQuickDiff);\n\t}\n\n\t$provideOriginalResource(handle: number, uriComponents: UriComponents, token: CancellationToken): Promise<UriComponents | null> {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst provider = this.providers.get(handle);\n\n\t\tif (!provider) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn asPromise(() => provider.provideOriginalResource!(uri, token))\n\t\t\t.then<UriComponents | null>(r => r || null);\n\t}\n\n\tregisterQuickDiffProvider(selector: vscode.DocumentSelector, quickDiffProvider: vscode.QuickDiffProvider, label: string, rootUri?: vscode.Uri): vscode.Disposable {\n\t\tconst handle = ExtHostQuickDiff.handlePool++;\n\t\tthis.providers.set(handle, quickDiffProvider);\n\t\tthis.proxy.$registerQuickDiffProvider(handle, DocumentSelector.from(selector, this.uriTransformer), label, rootUri);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis.proxy.$unregisterQuickDiffProvider(handle);\n\t\t\t\tthis.providers.delete(handle);\n\t\t\t}\n\t\t};\n\t}\n}\n"]}