{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostFileSystemConsumer.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IAgBzF,IAAM,IAAI,YAAV,MAAM,IAAI;QAWhB,YACqB,UAAe,EACX,cAAoB;YAN5B,MAAC,GAAqB,IAAI,GAAG,EAAqF,CAAC;YAEnH,MAAC,GAAa,IAAI,WAAG,EAAY,CAAC;YAMlD,IAAI,CAAC,CAAC,GAAQ,UAAU,CAAC,QAAQ,CAAC,sBAAG,CAAS,oBAAoB,CAAC,CAAC;YACpE,MAAM,IAAI,GAAG,IAAI,CAAC;YAElB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC1B,KAAK,CAAC,IAAI,CAAC,GAAe;oBACzB,IAAI;wBACH,IAAI,IAAI,CAAC;wBAET,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBAC1D,IAAI,QAAQ,EAAE;4BACb,eAAe;4BACf,MAAM,IAAI,CAAC,CAAC,CAAM,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;4BAChD,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;yBACrC;6BAAM;4BACN,IAAI,GAAG,MAAM,IAAI,CAAC,CAAC,CAAM,KAAK,CAAC,GAAG,CAAC,CAAC;yBACpC;wBAED,OAAO;4BACN,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,KAAK,EAAE,IAAI,CAAC,KAAK;4BACjB,KAAK,EAAE,IAAI,CAAC,KAAK;4BACjB,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,WAAW,EAAE,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;yBAC/E,CAAC;qBACF;oBAAC,OAAO,GAAG,EAAE;wBACb,MAAI,CAAsB,CAAC,CAAY,GAAG,CAAC,CAAC;qBAC5C;gBACF,CAAC;gBACD,KAAK,CAAC,aAAa,CAAC,GAAe;oBAClC,IAAI;wBACH,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBAC1D,IAAI,QAAQ,EAAE;4BACb,eAAe;4BACf,MAAM,IAAI,CAAC,CAAC,CAAM,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;4BAChD,OAAO,CAAC,MAAM,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,YAAY;yBACrE;6BAAM;4BACN,OAAO,MAAM,IAAI,CAAC,CAAC,CAAM,QAAQ,CAAC,GAAG,CAAC,CAAC;yBACvC;qBACD;oBAAC,OAAO,GAAG,EAAE;wBACb,OAAO,MAAI,CAAsB,CAAC,CAAY,GAAG,CAAC,CAAC;qBACnD;gBACF,CAAC;gBACD,KAAK,CAAC,eAAe,CAAC,GAAe;oBACpC,IAAI;wBACH,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBAC1D,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;4BACrC,eAAe;4BACf,MAAM,IAAI,CAAC,CAAC,CAAM,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;4BAChD,OAAO,MAAM,IAAI,CAAC,CAAC,CAAM,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;yBAC9D;6BAAM;4BACN,OAAO,MAAM,IAAI,CAAC,CAAC,CAAM,MAAM,CAAC,GAAG,CAAC,CAAC;yBACrC;qBACD;oBAAC,OAAO,GAAG,EAAE;wBACb,OAAO,MAAI,CAAsB,CAAC,CAAY,GAAG,CAAC,CAAC;qBACnD;gBACF,CAAC;gBACD,KAAK,CAAC,QAAQ,CAAC,GAAe;oBAC7B,IAAI;wBACH,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBAC1D,IAAI,QAAQ,EAAE;4BACb,eAAe;4BACf,MAAM,IAAI,CAAC,CAAC,CAAM,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;4BAChD,OAAO,CAAC,MAAM,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,YAAY;yBAChE;6BAAM;4BACN,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,CAAC,CAAM,SAAS,CAAC,GAAG,CAAC,CAAC;4BAC9C,OAAO,IAAI,CAAC,MAAM,CAAC;yBACnB;qBACD;oBAAC,OAAO,GAAG,EAAE;wBACb,OAAO,MAAI,CAAsB,CAAC,CAAY,GAAG,CAAC,CAAC;qBACnD;gBACF,CAAC;gBACD,KAAK,CAAC,SAAS,CAAC,GAAe,EAAE,OAAmB;oBACnD,IAAI;wBACH,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBAC1D,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;4BACrC,eAAe;4BACf,MAAM,IAAI,CAAC,CAAC,CAAM,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;4BAChD,MAAM,IAAI,CAAC,CAAC,CAAM,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;4BAChF,OAAO,MAAM,IAAI,CAAC,CAAC,CAAW,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;yBACnJ;6BAAM;4BACN,OAAO,MAAM,IAAI,CAAC,CAAC,CAAM,UAAU,CAAC,GAAG,EAAE,YAAG,CAAM,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;yBACjE;qBACD;oBAAC,OAAO,GAAG,EAAE;wBACb,OAAO,MAAI,CAAsB,CAAC,CAAY,GAAG,CAAC,CAAC;qBACnD;gBACF,CAAC;gBACD,KAAK,CAAC,MAAM,CAAC,GAAe,EAAE,OAAqD;oBAClF,IAAI;wBACH,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBAC1D,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;4BACrC,eAAe;4BACf,MAAM,IAAI,CAAC,CAAC,CAAM,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;4BAChD,OAAO,MAAM,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;yBACzE;6BAAM;4BACN,OAAO,MAAM,IAAI,CAAC,CAAC,CAAM,OAAO,CAAC,GAAG,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;yBACxG;qBACD;oBAAC,OAAO,GAAG,EAAE;wBACb,OAAO,MAAI,CAAsB,CAAC,CAAY,GAAG,CAAC,CAAC;qBACnD;gBACF,CAAC;gBACD,KAAK,CAAC,MAAM,CAAC,MAAkB,EAAE,MAAkB,EAAE,OAAiC;oBACrF,IAAI;wBACH,mEAAmE;wBACnE,OAAO,MAAM,IAAI,CAAC,CAAC,CAAM,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;qBAC1F;oBAAC,OAAO,GAAG,EAAE;wBACb,OAAO,MAAI,CAAsB,CAAC,CAAY,GAAG,CAAC,CAAC;qBACnD;gBACF,CAAC;gBACD,KAAK,CAAC,IAAI,CAAC,MAAkB,EAAE,WAAuB,EAAE,OAAiC;oBACxF,IAAI;wBACH,mEAAmE;wBACnE,OAAO,MAAM,IAAI,CAAC,CAAC,CAAM,KAAK,CAAC,MAAM,EAAE,WAAW,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;qBAC7F;oBAAC,OAAO,GAAG,EAAE;wBACb,OAAO,MAAI,CAAsB,CAAC,CAAY,GAAG,CAAC,CAAC;qBACnD;gBACF,CAAC;gBACD,oBAAoB,CAAC,MAAc;oBAClC,MAAM,YAAY,GAAG,cAAc,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;oBAC5D,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;wBACrC,OAAO,CAAC,CAAC,YAAY,2DAAgD,CAAC,CAAC;qBACvE;oBACD,OAAO,SAAS,CAAC;gBAClB,CAAC;aACD,CAAC,CAAC;QACJ,CAAC;QAEO,KAAK,CAAC,CAAC,CAAM,QAAmC,EAAE,cAAuB,EAAE,SAAqB;YACvG,MAAM,mBAAmB,GAAa,EAAE,CAAC;YAEzC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE;gBAC7E,IAAI;oBACH,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;wBACjD,MAAM,kBAAG,CAAa,UAAU,CAAC,4BAA4B,SAAS,CAAC,MAAM,KAAK,iBAAO,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAC;qBAC5L;oBAED,MAAM,CAAC,8CAA8C;iBACrD;gBAAC,OAAO,KAAK,EAAE;oBACf,IAAI,KAAK,CAAC,GAAG,CAA2B,KAAK,CAAC,KAAK,KAAK,CAAC,2BAA2B,CAAC,YAAY,EAAE;wBAClG,MAAM,KAAK,CAAC;qBACZ;oBAED,sDAAsD;oBACtD,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC7D,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;iBAC9C;aACD;YAED,KAAK,IAAI,CAAC,GAAG,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBACzD,SAAS,GAAG,cAAc,CAAC,QAAQ,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEvE,IAAI;oBACH,MAAM,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;iBAC1C;gBAAC,OAAO,KAAK,EAAE;oBACf,IAAI,KAAK,CAAC,GAAG,CAA2B,KAAK,CAAC,KAAK,KAAK,CAAC,2BAA2B,CAAC,UAAU,EAAE;wBAChG,uDAAuD;wBACvD,0DAA0D;wBAC1D,0DAA0D;wBAC1D,2DAA2D;wBAC3D,mDAAmD;wBACnD,2DAA2D;wBAC3D,yCAAyC;wBACzC,8DAA8D;wBAC9D,MAAM,KAAK,CAAC;qBACZ;iBACD;aACD;QACF,CAAC;QAEO,MAAM,CAAC,CAAC,CAAY,GAAQ;YACnC,qBAAqB;YACrB,IAAI,GAAG,YAAY,kBAAG,EAAc;gBACnC,MAAM,GAAG,CAAC;aACV;YAED,6BAA6B;YAC7B,IAAI,GAAG,YAAY,KAAK,CAAC,GAAG,EAAsB;gBACjD,QAAQ,GAAG,CAAC,IAAI,EAAE;oBACjB,KAAK,KAAK,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC,MAAM,kBAAG,CAAa,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBACjG,KAAK,KAAK,CAAC,2BAA2B,CAAC,YAAY,CAAC,CAAC,MAAM,kBAAG,CAAa,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBACrG,KAAK,KAAK,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,CAAC,MAAM,kBAAG,CAAa,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBAC/G,KAAK,KAAK,CAAC,2BAA2B,CAAC,gBAAgB,CAAC,CAAC,MAAM,kBAAG,CAAa,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBAC7G,KAAK,KAAK,CAAC,2BAA2B,CAAC,aAAa,CAAC,CAAC,MAAM,kBAAG,CAAa,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBACvG,KAAK,KAAK,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC,MAAM,kBAAG,CAAa,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBAEnG,OAAO,CAAC,CAAC,MAAM,IAAI,kBAAG,CAAa,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,IAAyC,CAAC,CAAC;iBAC/F;aACD;YAED,gBAAgB;YAChB,IAAI,CAAC,CAAC,GAAG,YAAY,KAAK,CAAC,EAAE;gBAC5B,MAAM,IAAI,kBAAG,CAAa,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aACvC;YAED,qCAAqC;YACrC,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAC5D,MAAM,kBAAG,CAAa,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aAC/C;YAED,oBAAoB;YACpB,QAAQ,GAAG,CAAC,IAAI,EAAE;gBACjB,KAAK,KAAK,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC,MAAM,kBAAG,CAAa,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACjG,KAAK,KAAK,CAAC,2BAA2B,CAAC,YAAY,CAAC,CAAC,MAAM,kBAAG,CAAa,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrG,KAAK,KAAK,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,CAAC,MAAM,kBAAG,CAAa,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC/G,KAAK,KAAK,CAAC,2BAA2B,CAAC,gBAAgB,CAAC,CAAC,MAAM,kBAAG,CAAa,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC7G,KAAK,KAAK,CAAC,2BAA2B,CAAC,aAAa,CAAC,CAAC,MAAM,kBAAG,CAAa,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACvG,KAAK,KAAK,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC,MAAM,kBAAG,CAAa,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAEnG,OAAO,CAAC,CAAC,MAAM,IAAI,kBAAG,CAAa,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,IAAyC,CAAC,CAAC;aAC/F;QACF,CAAC;QAED,MAAM;QAEN,qBAAqB,CAAC,MAAc,EAAE,QAAmC,EAAE,OAA+E;YACzJ,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,eAAG,CAAI,CAAC,CAAC,eAAG,EAAmB,UAAU,EAAE,CAAC,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;YAC9J,OAAO,IAAA,eAAG,EAAU,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAmB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QACpE,CAAC;QAED,2BAA2B,CAAC,MAAc;YACzC,OAAO,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,MAAM,CAAC,EAAE,MAAM,IAAI,eAAG,CAAI;QAC/D,CAAC;KACD,CAAA;IA7OY,oBAAI;mBAAJ,IAAI;QAYd,WAAA,uBAAG,CAAA;QACH,WAAA,4BAAI,CAAA;OAbM,IAAI,CA6OhB;IAGY,QAAA,IAAI,GAAyB,IAAA,mBAAG,EAAyC,4BAA4B,CAAC,CAAC","file":"extHostFileSystemConsumer.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainContext, MainThreadFileSystemShape } from './extHost.protocol';\nimport type * as vscode from 'vscode';\nimport * as files from 'vs/platform/files/common/files';\nimport { FileSystemError } from 'vs/workbench/api/common/extHostTypes';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { IExtHostFileSystemInfo } from 'vs/workbench/api/common/extHostFileSystemInfo';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ResourceQueue } from 'vs/base/common/async';\nimport { IExtUri, extUri, extUriIgnorePathCase } from 'vs/base/common/resources';\nimport { Schemas } from 'vs/base/common/network';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\n\nexport class ExtHostConsumerFileSystem {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly value: vscode.FileSystem;\n\n\tprivate readonly _proxy: MainThreadFileSystemShape;\n\tprivate readonly _fileSystemProvider = new Map<string, { impl: vscode.FileSystemProvider; extUri: IExtUri; isReadonly: boolean }>();\n\n\tprivate readonly _writeQueue = new ResourceQueue();\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostFileSystemInfo fileSystemInfo: IExtHostFileSystemInfo,\n\t) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadFileSystem);\n\t\tconst that = this;\n\n\t\tthis.value = Object.freeze({\n\t\t\tasync stat(uri: vscode.Uri): Promise<vscode.FileStat> {\n\t\t\t\ttry {\n\t\t\t\t\tlet stat;\n\n\t\t\t\t\tconst provider = that._fileSystemProvider.get(uri.scheme);\n\t\t\t\t\tif (provider) {\n\t\t\t\t\t\t// use shortcut\n\t\t\t\t\t\tawait that._proxy.$ensureActivation(uri.scheme);\n\t\t\t\t\t\tstat = await provider.impl.stat(uri);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstat = await that._proxy.$stat(uri);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: stat.type,\n\t\t\t\t\t\tctime: stat.ctime,\n\t\t\t\t\t\tmtime: stat.mtime,\n\t\t\t\t\t\tsize: stat.size,\n\t\t\t\t\t\tpermissions: stat.permissions === files.FilePermission.Readonly ? 1 : undefined\n\t\t\t\t\t};\n\t\t\t\t} catch (err) {\n\t\t\t\t\tExtHostConsumerFileSystem._handleError(err);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync readDirectory(uri: vscode.Uri): Promise<[string, vscode.FileType][]> {\n\t\t\t\ttry {\n\t\t\t\t\tconst provider = that._fileSystemProvider.get(uri.scheme);\n\t\t\t\t\tif (provider) {\n\t\t\t\t\t\t// use shortcut\n\t\t\t\t\t\tawait that._proxy.$ensureActivation(uri.scheme);\n\t\t\t\t\t\treturn (await provider.impl.readDirectory(uri)).slice(); // safe-copy\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn await that._proxy.$readdir(uri);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn ExtHostConsumerFileSystem._handleError(err);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync createDirectory(uri: vscode.Uri): Promise<void> {\n\t\t\t\ttry {\n\t\t\t\t\tconst provider = that._fileSystemProvider.get(uri.scheme);\n\t\t\t\t\tif (provider && !provider.isReadonly) {\n\t\t\t\t\t\t// use shortcut\n\t\t\t\t\t\tawait that._proxy.$ensureActivation(uri.scheme);\n\t\t\t\t\t\treturn await that.mkdirp(provider.impl, provider.extUri, uri);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn await that._proxy.$mkdir(uri);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn ExtHostConsumerFileSystem._handleError(err);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync readFile(uri: vscode.Uri): Promise<Uint8Array> {\n\t\t\t\ttry {\n\t\t\t\t\tconst provider = that._fileSystemProvider.get(uri.scheme);\n\t\t\t\t\tif (provider) {\n\t\t\t\t\t\t// use shortcut\n\t\t\t\t\t\tawait that._proxy.$ensureActivation(uri.scheme);\n\t\t\t\t\t\treturn (await provider.impl.readFile(uri)).slice(); // safe-copy\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst buff = await that._proxy.$readFile(uri);\n\t\t\t\t\t\treturn buff.buffer;\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn ExtHostConsumerFileSystem._handleError(err);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync writeFile(uri: vscode.Uri, content: Uint8Array): Promise<void> {\n\t\t\t\ttry {\n\t\t\t\t\tconst provider = that._fileSystemProvider.get(uri.scheme);\n\t\t\t\t\tif (provider && !provider.isReadonly) {\n\t\t\t\t\t\t// use shortcut\n\t\t\t\t\t\tawait that._proxy.$ensureActivation(uri.scheme);\n\t\t\t\t\t\tawait that.mkdirp(provider.impl, provider.extUri, provider.extUri.dirname(uri));\n\t\t\t\t\t\treturn await that._writeQueue.queueFor(uri).queue(() => Promise.resolve(provider.impl.writeFile(uri, content, { create: true, overwrite: true })));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn await that._proxy.$writeFile(uri, VSBuffer.wrap(content));\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn ExtHostConsumerFileSystem._handleError(err);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync delete(uri: vscode.Uri, options?: { recursive?: boolean; useTrash?: boolean }): Promise<void> {\n\t\t\t\ttry {\n\t\t\t\t\tconst provider = that._fileSystemProvider.get(uri.scheme);\n\t\t\t\t\tif (provider && !provider.isReadonly) {\n\t\t\t\t\t\t// use shortcut\n\t\t\t\t\t\tawait that._proxy.$ensureActivation(uri.scheme);\n\t\t\t\t\t\treturn await provider.impl.delete(uri, { recursive: false, ...options });\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn await that._proxy.$delete(uri, { recursive: false, useTrash: false, atomic: false, ...options });\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn ExtHostConsumerFileSystem._handleError(err);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync rename(oldUri: vscode.Uri, newUri: vscode.Uri, options?: { overwrite?: boolean }): Promise<void> {\n\t\t\t\ttry {\n\t\t\t\t\t// no shortcut: potentially involves different schemes, does mkdirp\n\t\t\t\t\treturn await that._proxy.$rename(oldUri, newUri, { ...{ overwrite: false }, ...options });\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn ExtHostConsumerFileSystem._handleError(err);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync copy(source: vscode.Uri, destination: vscode.Uri, options?: { overwrite?: boolean }): Promise<void> {\n\t\t\t\ttry {\n\t\t\t\t\t// no shortcut: potentially involves different schemes, does mkdirp\n\t\t\t\t\treturn await that._proxy.$copy(source, destination, { ...{ overwrite: false }, ...options });\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn ExtHostConsumerFileSystem._handleError(err);\n\t\t\t\t}\n\t\t\t},\n\t\t\tisWritableFileSystem(scheme: string): boolean | undefined {\n\t\t\t\tconst capabilities = fileSystemInfo.getCapabilities(scheme);\n\t\t\t\tif (typeof capabilities === 'number') {\n\t\t\t\t\treturn !(capabilities & files.FileSystemProviderCapabilities.Readonly);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async mkdirp(provider: vscode.FileSystemProvider, providerExtUri: IExtUri, directory: vscode.Uri): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\twhile (!providerExtUri.isEqual(directory, providerExtUri.dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & files.FileType.Directory) === 0) {\n\t\t\t\t\tthrow FileSystemError.FileExists(`Unable to create folder '${directory.scheme === Schemas.file ? directory.fsPath : directory.toString(true)}' that already exists but is not a directory`);\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\t\t\t\tif (files.toFileSystemProviderErrorCode(error) !== files.FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// further go up and remember to create this directory\n\t\t\t\tdirectoriesToCreate.push(providerExtUri.basename(directory));\n\t\t\t\tdirectory = providerExtUri.dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = providerExtUri.joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.createDirectory(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (files.toFileSystemProviderErrorCode(error) !== files.FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static _handleError(err: any): never {\n\t\t// desired error type\n\t\tif (err instanceof FileSystemError) {\n\t\t\tthrow err;\n\t\t}\n\n\t\t// file system provider error\n\t\tif (err instanceof files.FileSystemProviderError) {\n\t\t\tswitch (err.code) {\n\t\t\t\tcase files.FileSystemProviderErrorCode.FileExists: throw FileSystemError.FileExists(err.message);\n\t\t\t\tcase files.FileSystemProviderErrorCode.FileNotFound: throw FileSystemError.FileNotFound(err.message);\n\t\t\t\tcase files.FileSystemProviderErrorCode.FileNotADirectory: throw FileSystemError.FileNotADirectory(err.message);\n\t\t\t\tcase files.FileSystemProviderErrorCode.FileIsADirectory: throw FileSystemError.FileIsADirectory(err.message);\n\t\t\t\tcase files.FileSystemProviderErrorCode.NoPermissions: throw FileSystemError.NoPermissions(err.message);\n\t\t\t\tcase files.FileSystemProviderErrorCode.Unavailable: throw FileSystemError.Unavailable(err.message);\n\n\t\t\t\tdefault: throw new FileSystemError(err.message, err.name as files.FileSystemProviderErrorCode);\n\t\t\t}\n\t\t}\n\n\t\t// generic error\n\t\tif (!(err instanceof Error)) {\n\t\t\tthrow new FileSystemError(String(err));\n\t\t}\n\n\t\t// no provider (unknown scheme) error\n\t\tif (err.name === 'ENOPRO' || err.message.includes('ENOPRO')) {\n\t\t\tthrow FileSystemError.Unavailable(err.message);\n\t\t}\n\n\t\t// file system error\n\t\tswitch (err.name) {\n\t\t\tcase files.FileSystemProviderErrorCode.FileExists: throw FileSystemError.FileExists(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.FileNotFound: throw FileSystemError.FileNotFound(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.FileNotADirectory: throw FileSystemError.FileNotADirectory(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.FileIsADirectory: throw FileSystemError.FileIsADirectory(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.NoPermissions: throw FileSystemError.NoPermissions(err.message);\n\t\t\tcase files.FileSystemProviderErrorCode.Unavailable: throw FileSystemError.Unavailable(err.message);\n\n\t\t\tdefault: throw new FileSystemError(err.message, err.name as files.FileSystemProviderErrorCode);\n\t\t}\n\t}\n\n\t// ---\n\n\taddFileSystemProvider(scheme: string, provider: vscode.FileSystemProvider, options?: { isCaseSensitive?: boolean; isReadonly?: boolean | IMarkdownString }): IDisposable {\n\t\tthis._fileSystemProvider.set(scheme, { impl: provider, extUri: options?.isCaseSensitive ? extUri : extUriIgnorePathCase, isReadonly: !!options?.isReadonly });\n\t\treturn toDisposable(() => this._fileSystemProvider.delete(scheme));\n\t}\n\n\tgetFileSystemProviderExtUri(scheme: string) {\n\t\treturn this._fileSystemProvider.get(scheme)?.extUri ?? extUri;\n\t}\n}\n\nexport interface IExtHostConsumerFileSystem extends ExtHostConsumerFileSystem { }\nexport const IExtHostConsumerFileSystem = createDecorator<IExtHostConsumerFileSystem>('IExtHostConsumerFileSystem');\n"]}