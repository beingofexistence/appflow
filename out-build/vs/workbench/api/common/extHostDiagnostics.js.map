{"version":3,"sources":["vs/workbench/api/common/extHostDiagnostics.ts"],"names":[],"mappings":"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","file":"extHostDiagnostics.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* eslint-disable local/code-no-native-private */\n\nimport { localize } from 'vs/nls';\nimport { IMarkerData, MarkerSeverity } from 'vs/platform/markers/common/markers';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport type * as vscode from 'vscode';\nimport { MainContext, MainThreadDiagnosticsShape, ExtHostDiagnosticsShape, IMainContext } from './extHost.protocol';\nimport { DiagnosticSeverity } from './extHostTypes';\nimport * as converter from './extHostTypeConverters';\nimport { Event, Emitter, DebounceEmitter } from 'vs/base/common/event';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IExtHostFileSystemInfo } from 'vs/workbench/api/common/extHostFileSystemInfo';\nimport { IExtUri } from 'vs/base/common/resources';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\n\nexport class DiagnosticCollection implements vscode.DiagnosticCollection {\n\n\treadonly #proxy: MainThreadDiagnosticsShape | undefined;\n\treadonly #onDidChangeDiagnostics: Emitter<readonly vscode.Uri[]>;\n\treadonly #data: ResourceMap<vscode.Diagnostic[]>;\n\n\tprivate _isDisposed = false;\n\n\tconstructor(\n\t\tprivate readonly _name: string,\n\t\tprivate readonly _owner: string,\n\t\tprivate readonly _maxDiagnosticsTotal: number,\n\t\tprivate readonly _maxDiagnosticsPerFile: number,\n\t\tprivate readonly _modelVersionIdProvider: (uri: URI) => number | undefined,\n\t\textUri: IExtUri,\n\t\tproxy: MainThreadDiagnosticsShape | undefined,\n\t\tonDidChangeDiagnostics: Emitter<readonly vscode.Uri[]>\n\t) {\n\t\tthis._maxDiagnosticsTotal = Math.max(_maxDiagnosticsPerFile, _maxDiagnosticsTotal);\n\t\tthis.#data = new ResourceMap(uri => extUri.getComparisonKey(uri));\n\t\tthis.#proxy = proxy;\n\t\tthis.#onDidChangeDiagnostics = onDidChangeDiagnostics;\n\t}\n\n\tdispose(): void {\n\t\tif (!this._isDisposed) {\n\t\t\tthis.#onDidChangeDiagnostics.fire([...this.#data.keys()]);\n\t\t\tthis.#proxy?.$clear(this._owner);\n\t\t\tthis.#data.clear();\n\t\t\tthis._isDisposed = true;\n\t\t}\n\t}\n\n\tget name(): string {\n\t\tthis._checkDisposed();\n\t\treturn this._name;\n\t}\n\n\tset(uri: vscode.Uri, diagnostics: ReadonlyArray<vscode.Diagnostic>): void;\n\tset(entries: ReadonlyArray<[vscode.Uri, ReadonlyArray<vscode.Diagnostic>]>): void;\n\tset(first: vscode.Uri | ReadonlyArray<[vscode.Uri, ReadonlyArray<vscode.Diagnostic>]>, diagnostics?: ReadonlyArray<vscode.Diagnostic>) {\n\n\t\tif (!first) {\n\t\t\t// this set-call is a clear-call\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\n\t\t// the actual implementation for #set\n\n\t\tthis._checkDisposed();\n\t\tlet toSync: vscode.Uri[] = [];\n\n\t\tif (URI.isUri(first)) {\n\n\t\t\tif (!diagnostics) {\n\t\t\t\t// remove this entry\n\t\t\t\tthis.delete(first);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// update single row\n\t\t\tthis.#data.set(first, diagnostics.slice());\n\t\t\ttoSync = [first];\n\n\t\t} else if (Array.isArray(first)) {\n\t\t\t// update many rows\n\t\t\ttoSync = [];\n\t\t\tlet lastUri: vscode.Uri | undefined;\n\n\t\t\t// ensure stable-sort\n\t\t\tfirst = [...first].sort(DiagnosticCollection._compareIndexedTuplesByUri);\n\n\t\t\tfor (const tuple of first) {\n\t\t\t\tconst [uri, diagnostics] = tuple;\n\t\t\t\tif (!lastUri || uri.toString() !== lastUri.toString()) {\n\t\t\t\t\tif (lastUri && this.#data.get(lastUri)!.length === 0) {\n\t\t\t\t\t\tthis.#data.delete(lastUri);\n\t\t\t\t\t}\n\t\t\t\t\tlastUri = uri;\n\t\t\t\t\ttoSync.push(uri);\n\t\t\t\t\tthis.#data.set(uri, []);\n\t\t\t\t}\n\n\t\t\t\tif (!diagnostics) {\n\t\t\t\t\t// [Uri, undefined] means clear this\n\t\t\t\t\tconst currentDiagnostics = this.#data.get(uri);\n\t\t\t\t\tif (currentDiagnostics) {\n\t\t\t\t\t\tcurrentDiagnostics.length = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst currentDiagnostics = this.#data.get(uri);\n\t\t\t\t\tcurrentDiagnostics?.push(...diagnostics);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// send event for extensions\n\t\tthis.#onDidChangeDiagnostics.fire(toSync);\n\n\t\t// compute change and send to main side\n\t\tif (!this.#proxy) {\n\t\t\treturn;\n\t\t}\n\t\tconst entries: [URI, IMarkerData[]][] = [];\n\t\tlet totalMarkerCount = 0;\n\t\tfor (const uri of toSync) {\n\t\t\tlet marker: IMarkerData[] = [];\n\t\t\tconst diagnostics = this.#data.get(uri);\n\t\t\tif (diagnostics) {\n\n\t\t\t\t// no more than N diagnostics per file\n\t\t\t\tif (diagnostics.length > this._maxDiagnosticsPerFile) {\n\t\t\t\t\tmarker = [];\n\t\t\t\t\tconst order = [DiagnosticSeverity.Error, DiagnosticSeverity.Warning, DiagnosticSeverity.Information, DiagnosticSeverity.Hint];\n\t\t\t\t\torderLoop: for (let i = 0; i < 4; i++) {\n\t\t\t\t\t\tfor (const diagnostic of diagnostics) {\n\t\t\t\t\t\t\tif (diagnostic.severity === order[i]) {\n\t\t\t\t\t\t\t\tconst len = marker.push({ ...converter.Diagnostic.from(diagnostic), modelVersionId: this._modelVersionIdProvider(uri) });\n\t\t\t\t\t\t\t\tif (len === this._maxDiagnosticsPerFile) {\n\t\t\t\t\t\t\t\t\tbreak orderLoop;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add 'signal' marker for showing omitted errors/warnings\n\t\t\t\t\tmarker.push({\n\t\t\t\t\t\tseverity: MarkerSeverity.Info,\n\t\t\t\t\t\tmessage: localize({ key: 'limitHit', comment: ['amount of errors/warning skipped due to limits'] }, \"Not showing {0} further errors and warnings.\", diagnostics.length - this._maxDiagnosticsPerFile),\n\t\t\t\t\t\tstartLineNumber: marker[marker.length - 1].startLineNumber,\n\t\t\t\t\t\tstartColumn: marker[marker.length - 1].startColumn,\n\t\t\t\t\t\tendLineNumber: marker[marker.length - 1].endLineNumber,\n\t\t\t\t\t\tendColumn: marker[marker.length - 1].endColumn\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tmarker = diagnostics.map(diag => ({ ...converter.Diagnostic.from(diag), modelVersionId: this._modelVersionIdProvider(uri) }));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tentries.push([uri, marker]);\n\n\t\t\ttotalMarkerCount += marker.length;\n\t\t\tif (totalMarkerCount > this._maxDiagnosticsTotal) {\n\t\t\t\t// ignore markers that are above the limit\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.#proxy.$changeMany(this._owner, entries);\n\t}\n\n\tdelete(uri: vscode.Uri): void {\n\t\tthis._checkDisposed();\n\t\tthis.#onDidChangeDiagnostics.fire([uri]);\n\t\tthis.#data.delete(uri);\n\t\tthis.#proxy?.$changeMany(this._owner, [[uri, undefined]]);\n\t}\n\n\tclear(): void {\n\t\tthis._checkDisposed();\n\t\tthis.#onDidChangeDiagnostics.fire([...this.#data.keys()]);\n\t\tthis.#data.clear();\n\t\tthis.#proxy?.$clear(this._owner);\n\t}\n\n\tforEach(callback: (uri: URI, diagnostics: ReadonlyArray<vscode.Diagnostic>, collection: DiagnosticCollection) => any, thisArg?: any): void {\n\t\tthis._checkDisposed();\n\t\tfor (const [uri, values] of this) {\n\t\t\tcallback.call(thisArg, uri, values, this);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[uri: vscode.Uri, diagnostics: readonly vscode.Diagnostic[]]> {\n\t\tthis._checkDisposed();\n\t\tfor (const uri of this.#data.keys()) {\n\t\t\tyield [uri, this.get(uri)];\n\t\t}\n\t}\n\n\tget(uri: URI): ReadonlyArray<vscode.Diagnostic> {\n\t\tthis._checkDisposed();\n\t\tconst result = this.#data.get(uri);\n\t\tif (Array.isArray(result)) {\n\t\t\treturn Object.freeze(result.slice(0));\n\t\t}\n\t\treturn [];\n\t}\n\n\thas(uri: URI): boolean {\n\t\tthis._checkDisposed();\n\t\treturn Array.isArray(this.#data.get(uri));\n\t}\n\n\tprivate _checkDisposed() {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('illegal state - object is disposed');\n\t\t}\n\t}\n\n\tprivate static _compareIndexedTuplesByUri(a: [vscode.Uri, readonly vscode.Diagnostic[]], b: [vscode.Uri, readonly vscode.Diagnostic[]]): number {\n\t\tif (a[0].toString() < b[0].toString()) {\n\t\t\treturn -1;\n\t\t} else if (a[0].toString() > b[0].toString()) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\nexport class ExtHostDiagnostics implements ExtHostDiagnosticsShape {\n\n\tprivate static _idPool: number = 0;\n\tprivate static readonly _maxDiagnosticsPerFile: number = 1000;\n\tprivate static readonly _maxDiagnosticsTotal: number = 1.1 * ExtHostDiagnostics._maxDiagnosticsPerFile;\n\n\tprivate readonly _proxy: MainThreadDiagnosticsShape;\n\tprivate readonly _collections = new Map<string, DiagnosticCollection>();\n\tprivate readonly _onDidChangeDiagnostics = new DebounceEmitter<readonly vscode.Uri[]>({ merge: all => all.flat(), delay: 50 });\n\n\tstatic _mapper(last: readonly vscode.Uri[]): { uris: readonly vscode.Uri[] } {\n\t\tconst map = new ResourceMap<vscode.Uri>();\n\t\tfor (const uri of last) {\n\t\t\tmap.set(uri, uri);\n\t\t}\n\t\treturn { uris: Object.freeze(Array.from(map.values())) };\n\t}\n\n\treadonly onDidChangeDiagnostics: Event<vscode.DiagnosticChangeEvent> = Event.map(this._onDidChangeDiagnostics.event, ExtHostDiagnostics._mapper);\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IExtHostFileSystemInfo private readonly _fileSystemInfoService: IExtHostFileSystemInfo,\n\t\tprivate readonly _extHostDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDiagnostics);\n\t}\n\n\tcreateDiagnosticCollection(extensionId: ExtensionIdentifier, name?: string): vscode.DiagnosticCollection {\n\n\t\tconst { _collections, _proxy, _onDidChangeDiagnostics, _logService, _fileSystemInfoService, _extHostDocumentsAndEditors } = this;\n\n\t\tconst loggingProxy = new class implements MainThreadDiagnosticsShape {\n\t\t\t$changeMany(owner: string, entries: [UriComponents, IMarkerData[] | undefined][]): void {\n\t\t\t\t_proxy.$changeMany(owner, entries);\n\t\t\t\t_logService.trace('[DiagnosticCollection] change many (extension, owner, uris)', extensionId.value, owner, entries.length === 0 ? 'CLEARING' : entries);\n\t\t\t}\n\t\t\t$clear(owner: string): void {\n\t\t\t\t_proxy.$clear(owner);\n\t\t\t\t_logService.trace('[DiagnosticCollection] remove all (extension, owner)', extensionId.value, owner);\n\t\t\t}\n\t\t\tdispose(): void {\n\t\t\t\t_proxy.dispose();\n\t\t\t}\n\t\t};\n\n\n\t\tlet owner: string;\n\t\tif (!name) {\n\t\t\tname = '_generated_diagnostic_collection_name_#' + ExtHostDiagnostics._idPool++;\n\t\t\towner = name;\n\t\t} else if (!_collections.has(name)) {\n\t\t\towner = name;\n\t\t} else {\n\t\t\tthis._logService.warn(`DiagnosticCollection with name '${name}' does already exist.`);\n\t\t\tdo {\n\t\t\t\towner = name + ExtHostDiagnostics._idPool++;\n\t\t\t} while (_collections.has(owner));\n\t\t}\n\n\t\tconst result = new class extends DiagnosticCollection {\n\t\t\tconstructor() {\n\t\t\t\tsuper(\n\t\t\t\t\tname!, owner,\n\t\t\t\t\tExtHostDiagnostics._maxDiagnosticsTotal,\n\t\t\t\t\tExtHostDiagnostics._maxDiagnosticsPerFile,\n\t\t\t\t\turi => _extHostDocumentsAndEditors.getDocument(uri)?.version,\n\t\t\t\t\t_fileSystemInfoService.extUri, loggingProxy, _onDidChangeDiagnostics\n\t\t\t\t);\n\t\t\t\t_collections.set(owner, this);\n\t\t\t}\n\t\t\toverride dispose() {\n\t\t\t\tsuper.dispose();\n\t\t\t\t_collections.delete(owner);\n\t\t\t}\n\t\t};\n\n\t\treturn result;\n\t}\n\n\tgetDiagnostics(resource: vscode.Uri): ReadonlyArray<vscode.Diagnostic>;\n\tgetDiagnostics(): ReadonlyArray<[vscode.Uri, ReadonlyArray<vscode.Diagnostic>]>;\n\tgetDiagnostics(resource?: vscode.Uri): ReadonlyArray<vscode.Diagnostic> | ReadonlyArray<[vscode.Uri, ReadonlyArray<vscode.Diagnostic>]>;\n\tgetDiagnostics(resource?: vscode.Uri): ReadonlyArray<vscode.Diagnostic> | ReadonlyArray<[vscode.Uri, ReadonlyArray<vscode.Diagnostic>]> {\n\t\tif (resource) {\n\t\t\treturn this._getDiagnostics(resource);\n\t\t} else {\n\t\t\tconst index = new Map<string, number>();\n\t\t\tconst res: [vscode.Uri, vscode.Diagnostic[]][] = [];\n\t\t\tfor (const collection of this._collections.values()) {\n\t\t\t\tcollection.forEach((uri, diagnostics) => {\n\t\t\t\t\tlet idx = index.get(uri.toString());\n\t\t\t\t\tif (typeof idx === 'undefined') {\n\t\t\t\t\t\tidx = res.length;\n\t\t\t\t\t\tindex.set(uri.toString(), idx);\n\t\t\t\t\t\tres.push([uri, []]);\n\t\t\t\t\t}\n\t\t\t\t\tres[idx][1] = res[idx][1].concat(...diagnostics);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _getDiagnostics(resource: vscode.Uri): ReadonlyArray<vscode.Diagnostic> {\n\t\tlet res: vscode.Diagnostic[] = [];\n\t\tfor (const collection of this._collections.values()) {\n\t\t\tif (collection.has(resource)) {\n\t\t\t\tres = res.concat(collection.get(resource));\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n\tprivate _mirrorCollection: vscode.DiagnosticCollection | undefined;\n\n\t$acceptMarkersChange(data: [UriComponents, IMarkerData[]][]): void {\n\n\t\tif (!this._mirrorCollection) {\n\t\t\tconst name = '_generated_mirror';\n\t\t\tconst collection = new DiagnosticCollection(\n\t\t\t\tname, name,\n\t\t\t\tNumber.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, // no limits because this collection is just a mirror of \"sanitized\" data\n\t\t\t\t_uri => undefined,\n\t\t\t\tthis._fileSystemInfoService.extUri, undefined, this._onDidChangeDiagnostics\n\t\t\t);\n\t\t\tthis._collections.set(name, collection);\n\t\t\tthis._mirrorCollection = collection;\n\t\t}\n\n\t\tfor (const [uri, markers] of data) {\n\t\t\tthis._mirrorCollection.set(URI.revive(uri), markers.map(converter.Diagnostic.to));\n\t\t}\n\t}\n}\n"]}