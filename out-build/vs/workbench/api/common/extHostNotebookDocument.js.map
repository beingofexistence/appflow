{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostNotebookDocument.ts"],"names":[],"mappings":"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","file":"extHostNotebookDocument.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport * as extHostProtocol from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport { ExtHostDocumentsAndEditors, IExtHostModelAddedData } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport * as extHostTypeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport { NotebookRange } from 'vs/workbench/api/common/extHostTypes';\nimport * as notebookCommon from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport * as vscode from 'vscode';\n\nclass RawContentChangeEvent {\n\n\tconstructor(\n\t\treadonly start: number,\n\t\treadonly deletedCount: number,\n\t\treadonly deletedItems: vscode.NotebookCell[],\n\t\treadonly items: ExtHostCell[]\n\t) { }\n\n\tasApiEvent(): vscode.NotebookDocumentContentChange {\n\t\treturn {\n\t\t\trange: new NotebookRange(this.start, this.start + this.deletedCount),\n\t\t\taddedCells: this.items.map(cell => cell.apiCell),\n\t\t\tremovedCells: this.deletedItems,\n\t\t};\n\t}\n}\n\nexport class ExtHostCell {\n\n\tstatic asModelAddData(notebook: vscode.NotebookDocument, cell: extHostProtocol.NotebookCellDto): IExtHostModelAddedData {\n\t\treturn {\n\t\t\tEOL: cell.eol,\n\t\t\tlines: cell.source,\n\t\t\tlanguageId: cell.language,\n\t\t\turi: cell.uri,\n\t\t\tisDirty: false,\n\t\t\tversionId: 1,\n\t\t\tnotebook\n\t\t};\n\t}\n\n\tprivate _outputs: vscode.NotebookCellOutput[];\n\tprivate _metadata: Readonly<notebookCommon.NotebookCellMetadata>;\n\tprivate _previousResult: Readonly<vscode.NotebookCellExecutionSummary | undefined>;\n\n\tprivate _internalMetadata: notebookCommon.NotebookCellInternalMetadata;\n\treadonly handle: number;\n\treadonly uri: URI;\n\treadonly cellKind: notebookCommon.CellKind;\n\n\tprivate _apiCell: vscode.NotebookCell | undefined;\n\tprivate _mime: string | undefined;\n\n\tconstructor(\n\t\treadonly notebook: ExtHostNotebookDocument,\n\t\tprivate readonly _extHostDocument: ExtHostDocumentsAndEditors,\n\t\tprivate readonly _cellData: extHostProtocol.NotebookCellDto,\n\t) {\n\t\tthis.handle = _cellData.handle;\n\t\tthis.uri = URI.revive(_cellData.uri);\n\t\tthis.cellKind = _cellData.cellKind;\n\t\tthis._outputs = _cellData.outputs.map(extHostTypeConverters.NotebookCellOutput.to);\n\t\tthis._internalMetadata = _cellData.internalMetadata ?? {};\n\t\tthis._metadata = Object.freeze(_cellData.metadata ?? {});\n\t\tthis._previousResult = Object.freeze(extHostTypeConverters.NotebookCellExecutionSummary.to(_cellData.internalMetadata ?? {}));\n\t}\n\n\tget internalMetadata(): notebookCommon.NotebookCellInternalMetadata {\n\t\treturn this._internalMetadata;\n\t}\n\n\tget apiCell(): vscode.NotebookCell {\n\t\tif (!this._apiCell) {\n\t\t\tconst that = this;\n\t\t\tconst data = this._extHostDocument.getDocument(this.uri);\n\t\t\tif (!data) {\n\t\t\t\tthrow new Error(`MISSING extHostDocument for notebook cell: ${this.uri}`);\n\t\t\t}\n\t\t\tconst apiCell: vscode.NotebookCell = {\n\t\t\t\tget index() { return that.notebook.getCellIndex(that); },\n\t\t\t\tnotebook: that.notebook.apiNotebook,\n\t\t\t\tkind: extHostTypeConverters.NotebookCellKind.to(this._cellData.cellKind),\n\t\t\t\tdocument: data.document,\n\t\t\t\tget mime() { return that._mime; },\n\t\t\t\tset mime(value: string | undefined) { that._mime = value; },\n\t\t\t\tget outputs() { return that._outputs.slice(0); },\n\t\t\t\tget metadata() { return that._metadata; },\n\t\t\t\tget executionSummary() { return that._previousResult; }\n\t\t\t};\n\t\t\tthis._apiCell = Object.freeze(apiCell);\n\t\t}\n\t\treturn this._apiCell;\n\t}\n\n\tsetOutputs(newOutputs: extHostProtocol.NotebookOutputDto[]): void {\n\t\tthis._outputs = newOutputs.map(extHostTypeConverters.NotebookCellOutput.to);\n\t}\n\n\tsetOutputItems(outputId: string, append: boolean, newOutputItems: extHostProtocol.NotebookOutputItemDto[]) {\n\t\tconst newItems = newOutputItems.map(extHostTypeConverters.NotebookCellOutputItem.to);\n\t\tconst output = this._outputs.find(op => op.id === outputId);\n\t\tif (output) {\n\t\t\tif (!append) {\n\t\t\t\toutput.items.length = 0;\n\t\t\t}\n\t\t\toutput.items.push(...newItems);\n\n\t\t\tif (output.items.length > 1 && output.items.every(item => notebookCommon.isTextStreamMime(item.mime))) {\n\t\t\t\t// Look for the mimes in the items, and keep track of their order.\n\t\t\t\t// Merge the streams into one output item, per mime type.\n\t\t\t\tconst mimeOutputs = new Map<string, Uint8Array[]>();\n\t\t\t\tconst mimeTypes: string[] = [];\n\t\t\t\toutput.items.forEach(item => {\n\t\t\t\t\tlet items: Uint8Array[];\n\t\t\t\t\tif (mimeOutputs.has(item.mime)) {\n\t\t\t\t\t\titems = mimeOutputs.get(item.mime)!;\n\t\t\t\t\t} else {\n\t\t\t\t\t\titems = [];\n\t\t\t\t\t\tmimeOutputs.set(item.mime, items);\n\t\t\t\t\t\tmimeTypes.push(item.mime);\n\t\t\t\t\t}\n\t\t\t\t\titems.push(item.data);\n\t\t\t\t});\n\t\t\t\toutput.items.length = 0;\n\t\t\t\tmimeTypes.forEach(mime => {\n\t\t\t\t\tconst compressed = notebookCommon.compressOutputItemStreams(mimeOutputs.get(mime)!);\n\t\t\t\t\toutput.items.push({\n\t\t\t\t\t\tmime,\n\t\t\t\t\t\tdata: compressed.data.buffer\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tsetMetadata(newMetadata: notebookCommon.NotebookCellMetadata): void {\n\t\tthis._metadata = Object.freeze(newMetadata);\n\t}\n\n\tsetInternalMetadata(newInternalMetadata: notebookCommon.NotebookCellInternalMetadata): void {\n\t\tthis._internalMetadata = newInternalMetadata;\n\t\tthis._previousResult = Object.freeze(extHostTypeConverters.NotebookCellExecutionSummary.to(newInternalMetadata));\n\t}\n\n\tsetMime(newMime: string | undefined) {\n\n\t}\n}\n\n\nexport class ExtHostNotebookDocument {\n\n\tprivate static _handlePool: number = 0;\n\treadonly handle = ExtHostNotebookDocument._handlePool++;\n\n\tprivate readonly _cells: ExtHostCell[] = [];\n\n\tprivate readonly _notebookType: string;\n\n\tprivate _notebook: vscode.NotebookDocument | undefined;\n\tprivate _metadata: Record<string, any>;\n\tprivate _versionId: number = 0;\n\tprivate _isDirty: boolean = false;\n\tprivate _disposed: boolean = false;\n\n\tconstructor(\n\t\tprivate readonly _proxy: extHostProtocol.MainThreadNotebookDocumentsShape,\n\t\tprivate readonly _textDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t\tprivate readonly _textDocuments: ExtHostDocuments,\n\t\treadonly uri: URI,\n\t\tdata: extHostProtocol.INotebookModelAddedData\n\t) {\n\t\tthis._notebookType = data.viewType;\n\t\tthis._metadata = Object.freeze(data.metadata ?? Object.create(null));\n\t\tthis._spliceNotebookCells([[0, 0, data.cells]], true /* init -> no event*/, undefined);\n\t\tthis._versionId = data.versionId;\n\t}\n\n\tdispose() {\n\t\tthis._disposed = true;\n\t}\n\n\tget versionId(): number {\n\t\treturn this._versionId;\n\t}\n\n\tget apiNotebook(): vscode.NotebookDocument {\n\t\tif (!this._notebook) {\n\t\t\tconst that = this;\n\t\t\tconst apiObject: vscode.NotebookDocument = {\n\t\t\t\tget uri() { return that.uri; },\n\t\t\t\tget version() { return that._versionId; },\n\t\t\t\tget notebookType() { return that._notebookType; },\n\t\t\t\tget isDirty() { return that._isDirty; },\n\t\t\t\tget isUntitled() { return that.uri.scheme === Schemas.untitled; },\n\t\t\t\tget isClosed() { return that._disposed; },\n\t\t\t\tget metadata() { return that._metadata; },\n\t\t\t\tget cellCount() { return that._cells.length; },\n\t\t\t\tcellAt(index) {\n\t\t\t\t\tindex = that._validateIndex(index);\n\t\t\t\t\treturn that._cells[index].apiCell;\n\t\t\t\t},\n\t\t\t\tgetCells(range) {\n\t\t\t\t\tconst cells = range ? that._getCells(range) : that._cells;\n\t\t\t\t\treturn cells.map(cell => cell.apiCell);\n\t\t\t\t},\n\t\t\t\tsave() {\n\t\t\t\t\treturn that._save();\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._notebook = Object.freeze(apiObject);\n\t\t}\n\t\treturn this._notebook;\n\t}\n\n\tacceptDocumentPropertiesChanged(data: extHostProtocol.INotebookDocumentPropertiesChangeData) {\n\t\tif (data.metadata) {\n\t\t\tthis._metadata = Object.freeze({ ...this._metadata, ...data.metadata });\n\t\t}\n\t}\n\n\tacceptDirty(isDirty: boolean): void {\n\t\tthis._isDirty = isDirty;\n\t}\n\n\tacceptModelChanged(event: extHostProtocol.NotebookCellsChangedEventDto, isDirty: boolean, newMetadata: notebookCommon.NotebookDocumentMetadata | undefined): vscode.NotebookDocumentChangeEvent {\n\t\tthis._versionId = event.versionId;\n\t\tthis._isDirty = isDirty;\n\t\tthis.acceptDocumentPropertiesChanged({ metadata: newMetadata });\n\n\t\tconst result = {\n\t\t\tnotebook: this.apiNotebook,\n\t\t\tmetadata: newMetadata,\n\t\t\tcellChanges: <vscode.NotebookDocumentCellChange[]>[],\n\t\t\tcontentChanges: <vscode.NotebookDocumentContentChange[]>[],\n\t\t};\n\n\t\ttype RelaxedCellChange = Partial<vscode.NotebookDocumentCellChange> & { cell: vscode.NotebookCell };\n\t\tconst relaxedCellChanges: RelaxedCellChange[] = [];\n\n\t\t// -- apply change and populate content changes\n\n\t\tfor (const rawEvent of event.rawEvents) {\n\t\t\tif (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ModelChange) {\n\t\t\t\tthis._spliceNotebookCells(rawEvent.changes, false, result.contentChanges);\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.Move) {\n\t\t\t\tthis._moveCells(rawEvent.index, rawEvent.length, rawEvent.newIdx, result.contentChanges);\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.Output) {\n\t\t\t\tthis._setCellOutputs(rawEvent.index, rawEvent.outputs);\n\t\t\t\trelaxedCellChanges.push({ cell: this._cells[rawEvent.index].apiCell, outputs: this._cells[rawEvent.index].apiCell.outputs });\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.OutputItem) {\n\t\t\t\tthis._setCellOutputItems(rawEvent.index, rawEvent.outputId, rawEvent.append, rawEvent.outputItems);\n\t\t\t\trelaxedCellChanges.push({ cell: this._cells[rawEvent.index].apiCell, outputs: this._cells[rawEvent.index].apiCell.outputs });\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellLanguage) {\n\t\t\t\tthis._changeCellLanguage(rawEvent.index, rawEvent.language);\n\t\t\t\trelaxedCellChanges.push({ cell: this._cells[rawEvent.index].apiCell, document: this._cells[rawEvent.index].apiCell.document });\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellContent) {\n\t\t\t\trelaxedCellChanges.push({ cell: this._cells[rawEvent.index].apiCell, document: this._cells[rawEvent.index].apiCell.document });\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellMime) {\n\t\t\t\tthis._changeCellMime(rawEvent.index, rawEvent.mime);\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellMetadata) {\n\t\t\t\tthis._changeCellMetadata(rawEvent.index, rawEvent.metadata);\n\t\t\t\trelaxedCellChanges.push({ cell: this._cells[rawEvent.index].apiCell, metadata: this._cells[rawEvent.index].apiCell.metadata });\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellInternalMetadata) {\n\t\t\t\tthis._changeCellInternalMetadata(rawEvent.index, rawEvent.internalMetadata);\n\t\t\t\trelaxedCellChanges.push({ cell: this._cells[rawEvent.index].apiCell, executionSummary: this._cells[rawEvent.index].apiCell.executionSummary });\n\t\t\t}\n\t\t}\n\n\t\t// -- compact cellChanges\n\n\t\tconst map = new Map<vscode.NotebookCell, number>();\n\t\tfor (let i = 0; i < relaxedCellChanges.length; i++) {\n\t\t\tconst relaxedCellChange = relaxedCellChanges[i];\n\t\t\tconst existing = map.get(relaxedCellChange.cell);\n\t\t\tif (existing === undefined) {\n\t\t\t\tconst newLen = result.cellChanges.push({\n\t\t\t\t\tdocument: undefined,\n\t\t\t\t\texecutionSummary: undefined,\n\t\t\t\t\tmetadata: undefined,\n\t\t\t\t\toutputs: undefined,\n\t\t\t\t\t...relaxedCellChange,\n\t\t\t\t});\n\t\t\t\tmap.set(relaxedCellChange.cell, newLen - 1);\n\t\t\t} else {\n\t\t\t\tresult.cellChanges[existing] = {\n\t\t\t\t\t...result.cellChanges[existing],\n\t\t\t\t\t...relaxedCellChange\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Freeze event properties so handlers cannot accidentally modify them\n\t\tObject.freeze(result);\n\t\tObject.freeze(result.cellChanges);\n\t\tObject.freeze(result.contentChanges);\n\n\t\treturn result;\n\t}\n\n\tprivate _validateIndex(index: number): number {\n\t\tindex = index | 0;\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t} else if (index >= this._cells.length) {\n\t\t\treturn this._cells.length - 1;\n\t\t} else {\n\t\t\treturn index;\n\t\t}\n\t}\n\n\tprivate _validateRange(range: vscode.NotebookRange): vscode.NotebookRange {\n\t\tlet start = range.start | 0;\n\t\tlet end = range.end | 0;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t}\n\t\tif (end > this._cells.length) {\n\t\t\tend = this._cells.length;\n\t\t}\n\t\treturn range.with({ start, end });\n\t}\n\n\tprivate _getCells(range: vscode.NotebookRange): ExtHostCell[] {\n\t\trange = this._validateRange(range);\n\t\tconst result: ExtHostCell[] = [];\n\t\tfor (let i = range.start; i < range.end; i++) {\n\t\t\tresult.push(this._cells[i]);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async _save(): Promise<boolean> {\n\t\tif (this._disposed) {\n\t\t\treturn Promise.reject(new Error('Notebook has been closed'));\n\t\t}\n\t\treturn this._proxy.$trySaveNotebook(this.uri);\n\t}\n\n\tprivate _spliceNotebookCells(splices: notebookCommon.NotebookCellTextModelSplice<extHostProtocol.NotebookCellDto>[], initialization: boolean, bucket: vscode.NotebookDocumentContentChange[] | undefined): void {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst contentChangeEvents: RawContentChangeEvent[] = [];\n\t\tconst addedCellDocuments: IExtHostModelAddedData[] = [];\n\t\tconst removedCellDocuments: URI[] = [];\n\n\t\tsplices.reverse().forEach(splice => {\n\t\t\tconst cellDtos = splice[2];\n\t\t\tconst newCells = cellDtos.map(cell => {\n\n\t\t\t\tconst extCell = new ExtHostCell(this, this._textDocumentsAndEditors, cell);\n\t\t\t\tif (!initialization) {\n\t\t\t\t\taddedCellDocuments.push(ExtHostCell.asModelAddData(this.apiNotebook, cell));\n\t\t\t\t}\n\t\t\t\treturn extCell;\n\t\t\t});\n\n\t\t\tconst changeEvent = new RawContentChangeEvent(splice[0], splice[1], [], newCells);\n\t\t\tconst deletedItems = this._cells.splice(splice[0], splice[1], ...newCells);\n\t\t\tfor (const cell of deletedItems) {\n\t\t\t\tremovedCellDocuments.push(cell.uri);\n\t\t\t\tchangeEvent.deletedItems.push(cell.apiCell);\n\t\t\t}\n\t\t\tcontentChangeEvents.push(changeEvent);\n\t\t});\n\n\t\tthis._textDocumentsAndEditors.acceptDocumentsAndEditorsDelta({\n\t\t\taddedDocuments: addedCellDocuments,\n\t\t\tremovedDocuments: removedCellDocuments\n\t\t});\n\n\t\tif (bucket) {\n\t\t\tfor (const changeEvent of contentChangeEvents) {\n\t\t\t\tbucket.push(changeEvent.asApiEvent());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _moveCells(index: number, length: number, newIdx: number, bucket: vscode.NotebookDocumentContentChange[]): void {\n\t\tconst cells = this._cells.splice(index, length);\n\t\tthis._cells.splice(newIdx, 0, ...cells);\n\t\tconst changes = [\n\t\t\tnew RawContentChangeEvent(index, length, cells.map(c => c.apiCell), []),\n\t\t\tnew RawContentChangeEvent(newIdx, 0, [], cells)\n\t\t];\n\t\tfor (const change of changes) {\n\t\t\tbucket.push(change.asApiEvent());\n\t\t}\n\t}\n\n\tprivate _setCellOutputs(index: number, outputs: extHostProtocol.NotebookOutputDto[]): void {\n\t\tconst cell = this._cells[index];\n\t\tcell.setOutputs(outputs);\n\t}\n\n\tprivate _setCellOutputItems(index: number, outputId: string, append: boolean, outputItems: extHostProtocol.NotebookOutputItemDto[]): void {\n\t\tconst cell = this._cells[index];\n\t\tcell.setOutputItems(outputId, append, outputItems);\n\t}\n\n\tprivate _changeCellLanguage(index: number, newLanguageId: string): void {\n\t\tconst cell = this._cells[index];\n\t\tif (cell.apiCell.document.languageId !== newLanguageId) {\n\t\t\tthis._textDocuments.$acceptModelLanguageChanged(cell.uri, newLanguageId);\n\t\t}\n\t}\n\n\tprivate _changeCellMime(index: number, newMime: string | undefined): void {\n\t\tconst cell = this._cells[index];\n\t\tcell.apiCell.mime = newMime;\n\t}\n\n\tprivate _changeCellMetadata(index: number, newMetadata: notebookCommon.NotebookCellMetadata): void {\n\t\tconst cell = this._cells[index];\n\t\tcell.setMetadata(newMetadata);\n\t}\n\n\tprivate _changeCellInternalMetadata(index: number, newInternalMetadata: notebookCommon.NotebookCellInternalMetadata): void {\n\t\tconst cell = this._cells[index];\n\t\tcell.setInternalMetadata(newInternalMetadata);\n\t}\n\n\tgetCellFromApiCell(apiCell: vscode.NotebookCell): ExtHostCell | undefined {\n\t\treturn this._cells.find(cell => cell.apiCell === apiCell);\n\t}\n\n\tgetCellFromIndex(index: number): ExtHostCell | undefined {\n\t\treturn this._cells[index];\n\t}\n\n\tgetCell(cellHandle: number): ExtHostCell | undefined {\n\t\treturn this._cells.find(cell => cell.handle === cellHandle);\n\t}\n\n\tgetCellIndex(cell: ExtHostCell): number {\n\t\treturn this._cells.indexOf(cell);\n\t}\n}\n"]}