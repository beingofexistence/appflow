{"version":3,"sources":["vs/workbench/api/common/extHostTreeViews.ts"],"names":[],"mappings":"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","file":"extHostTreeViews.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport type * as vscode from 'vscode';\nimport { basename } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { CheckboxUpdate, DataTransferDTO, ExtHostTreeViewsShape, MainThreadTreeViewsShape } from './extHost.protocol';\nimport { ITreeItem, TreeViewItemHandleArg, ITreeItemLabel, IRevealOptions, TreeCommand, TreeViewPaneHandleArg, ITreeItemCheckboxState, NoTreeViewError } from 'vs/workbench/common/views';\nimport { ExtHostCommands, CommandsConverter } from 'vs/workbench/api/common/extHostCommands';\nimport { asPromise } from 'vs/base/common/async';\nimport * as extHostTypes from 'vs/workbench/api/common/extHostTypes';\nimport { isUndefinedOrNull, isString } from 'vs/base/common/types';\nimport { equals, coalesce } from 'vs/base/common/arrays';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { MarkdownString, ViewBadge, DataTransfer } from 'vs/workbench/api/common/extHostTypeConverters';\nimport { IMarkdownString, isMarkdownString } from 'vs/base/common/htmlContent';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { ITreeViewsDnDService, TreeViewsDnDService } from 'vs/editor/common/services/treeViewsDnd';\nimport { IAccessibilityInformation } from 'vs/platform/accessibility/common/accessibility';\nimport { checkProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\n\ntype TreeItemHandle = string;\n\nfunction toTreeItemLabel(label: any, extension: IExtensionDescription): ITreeItemLabel | undefined {\n\tif (isString(label)) {\n\t\treturn { label };\n\t}\n\n\tif (label\n\t\t&& typeof label === 'object'\n\t\t&& typeof label.label === 'string') {\n\t\tlet highlights: [number, number][] | undefined = undefined;\n\t\tif (Array.isArray(label.highlights)) {\n\t\t\thighlights = (<[number, number][]>label.highlights).filter((highlight => highlight.length === 2 && typeof highlight[0] === 'number' && typeof highlight[1] === 'number'));\n\t\t\thighlights = highlights.length ? highlights : undefined;\n\t\t}\n\t\treturn { label: label.label, highlights };\n\t}\n\n\treturn undefined;\n}\n\n\nexport class ExtHostTreeViews extends Disposable implements ExtHostTreeViewsShape {\n\n\tprivate treeViews: Map<string, ExtHostTreeView<any>> = new Map<string, ExtHostTreeView<any>>();\n\tprivate treeDragAndDropService: ITreeViewsDnDService<vscode.DataTransfer> = new TreeViewsDnDService<vscode.DataTransfer>();\n\n\tconstructor(\n\t\tprivate _proxy: MainThreadTreeViewsShape,\n\t\tprivate commands: ExtHostCommands,\n\t\tprivate logService: ILogService\n\t) {\n\t\tsuper();\n\t\tfunction isTreeViewConvertableItem(arg: any): boolean {\n\t\t\treturn arg && arg.$treeViewId && (arg.$treeItemHandle || arg.$selectedTreeItems || arg.$focusedTreeItem);\n\t\t}\n\t\tcommands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tif (isTreeViewConvertableItem(arg)) {\n\t\t\t\t\treturn this.convertArgument(arg);\n\t\t\t\t} else if (Array.isArray(arg) && (arg.length > 0)) {\n\t\t\t\t\treturn arg.map(item => {\n\t\t\t\t\t\tif (isTreeViewConvertableItem(item)) {\n\t\t\t\t\t\t\treturn this.convertArgument(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterTreeDataProvider<T>(id: string, treeDataProvider: vscode.TreeDataProvider<T>, extension: IExtensionDescription): vscode.Disposable {\n\t\tconst treeView = this.createTreeView(id, { treeDataProvider }, extension);\n\t\treturn { dispose: () => treeView.dispose() };\n\t}\n\n\tcreateTreeView<T>(viewId: string, options: vscode.TreeViewOptions<T>, extension: IExtensionDescription): vscode.TreeView<T> {\n\t\tif (!options || !options.treeDataProvider) {\n\t\t\tthrow new Error('Options with treeDataProvider is mandatory');\n\t\t}\n\t\tconst dropMimeTypes = options.dragAndDropController?.dropMimeTypes ?? [];\n\t\tconst dragMimeTypes = options.dragAndDropController?.dragMimeTypes ?? [];\n\t\tconst hasHandleDrag = !!options.dragAndDropController?.handleDrag;\n\t\tconst hasHandleDrop = !!options.dragAndDropController?.handleDrop;\n\t\tconst treeView = this.createExtHostTreeView(viewId, options, extension);\n\t\tconst proxyOptions = { showCollapseAll: !!options.showCollapseAll, canSelectMany: !!options.canSelectMany, dropMimeTypes, dragMimeTypes, hasHandleDrag, hasHandleDrop, manuallyManageCheckboxes: !!options.manageCheckboxStateManually };\n\t\tconst registerPromise = this._proxy.$registerTreeViewDataProvider(viewId, proxyOptions);\n\t\tconst view = {\n\t\t\tget onDidCollapseElement() { return treeView.onDidCollapseElement; },\n\t\t\tget onDidExpandElement() { return treeView.onDidExpandElement; },\n\t\t\tget selection() { return treeView.selectedElements; },\n\t\t\tget onDidChangeSelection() { return treeView.onDidChangeSelection; },\n\t\t\tget activeItem() {\n\t\t\t\tcheckProposedApiEnabled(extension, 'treeViewActiveItem');\n\t\t\t\treturn treeView.focusedElement;\n\t\t\t},\n\t\t\tget onDidChangeActiveItem() {\n\t\t\t\tcheckProposedApiEnabled(extension, 'treeViewActiveItem');\n\t\t\t\treturn treeView.onDidChangeActiveItem;\n\t\t\t},\n\t\t\tget visible() { return treeView.visible; },\n\t\t\tget onDidChangeVisibility() { return treeView.onDidChangeVisibility; },\n\t\t\tget onDidChangeCheckboxState() {\n\t\t\t\treturn treeView.onDidChangeCheckboxState;\n\t\t\t},\n\t\t\tget message() { return treeView.message; },\n\t\t\tset message(message: string | vscode.MarkdownString) {\n\t\t\t\tif (isMarkdownString(message)) {\n\t\t\t\t\tcheckProposedApiEnabled(extension, 'treeViewMarkdownMessage');\n\t\t\t\t}\n\t\t\t\ttreeView.message = message;\n\t\t\t},\n\t\t\tget title() { return treeView.title; },\n\t\t\tset title(title: string) {\n\t\t\t\ttreeView.title = title;\n\t\t\t},\n\t\t\tget description() {\n\t\t\t\treturn treeView.description;\n\t\t\t},\n\t\t\tset description(description: string | undefined) {\n\t\t\t\ttreeView.description = description;\n\t\t\t},\n\t\t\tget badge() {\n\t\t\t\treturn treeView.badge;\n\t\t\t},\n\t\t\tset badge(badge: vscode.ViewBadge | undefined) {\n\t\t\t\tif ((badge !== undefined) && extHostTypes.ViewBadge.isViewBadge(badge)) {\n\t\t\t\t\ttreeView.badge = {\n\t\t\t\t\t\tvalue: Math.floor(Math.abs(badge.value)),\n\t\t\t\t\t\ttooltip: badge.tooltip\n\t\t\t\t\t};\n\t\t\t\t} else if (badge === undefined) {\n\t\t\t\t\ttreeView.badge = undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t\treveal: (element: T, options?: IRevealOptions): Promise<void> => {\n\t\t\t\treturn treeView.reveal(element, options);\n\t\t\t},\n\t\t\tdispose: async () => {\n\t\t\t\t// Wait for the registration promise to finish before doing the dispose.\n\t\t\t\tawait registerPromise;\n\t\t\t\tthis.treeViews.delete(viewId);\n\t\t\t\ttreeView.dispose();\n\t\t\t}\n\t\t};\n\t\tthis._register(view);\n\t\treturn view as vscode.TreeView<T>;\n\t}\n\n\t$getChildren(treeViewId: string, treeItemHandle?: string): Promise<ITreeItem[] | undefined> {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\treturn Promise.reject(new NoTreeViewError(treeViewId));\n\t\t}\n\t\treturn treeView.getChildren(treeItemHandle);\n\t}\n\n\tasync $handleDrop(destinationViewId: string, requestId: number, treeDataTransferDTO: DataTransferDTO, targetItemHandle: string | undefined, token: CancellationToken,\n\t\toperationUuid?: string, sourceViewId?: string, sourceTreeItemHandles?: string[]): Promise<void> {\n\t\tconst treeView = this.treeViews.get(destinationViewId);\n\t\tif (!treeView) {\n\t\t\treturn Promise.reject(new NoTreeViewError(destinationViewId));\n\t\t}\n\n\t\tconst treeDataTransfer = DataTransfer.toDataTransfer(treeDataTransferDTO, async dataItemIndex => {\n\t\t\treturn (await this._proxy.$resolveDropFileData(destinationViewId, requestId, dataItemIndex)).buffer;\n\t\t});\n\t\tif ((sourceViewId === destinationViewId) && sourceTreeItemHandles) {\n\t\t\tawait this.addAdditionalTransferItems(treeDataTransfer, treeView, sourceTreeItemHandles, token, operationUuid);\n\t\t}\n\t\treturn treeView.onDrop(treeDataTransfer, targetItemHandle, token);\n\t}\n\n\tprivate async addAdditionalTransferItems(treeDataTransfer: vscode.DataTransfer, treeView: ExtHostTreeView<any>,\n\t\tsourceTreeItemHandles: string[], token: CancellationToken, operationUuid?: string): Promise<vscode.DataTransfer | undefined> {\n\t\tconst existingTransferOperation = this.treeDragAndDropService.removeDragOperationTransfer(operationUuid);\n\t\tif (existingTransferOperation) {\n\t\t\t(await existingTransferOperation)?.forEach((value, key) => {\n\t\t\t\tif (value) {\n\t\t\t\t\ttreeDataTransfer.set(key, value);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (operationUuid && treeView.handleDrag) {\n\t\t\tconst willDropPromise = treeView.handleDrag(sourceTreeItemHandles, treeDataTransfer, token);\n\t\t\tthis.treeDragAndDropService.addDragOperationTransfer(operationUuid, willDropPromise);\n\t\t\tawait willDropPromise;\n\t\t}\n\t\treturn treeDataTransfer;\n\t}\n\n\tasync $handleDrag(sourceViewId: string, sourceTreeItemHandles: string[], operationUuid: string, token: CancellationToken): Promise<DataTransferDTO | undefined> {\n\t\tconst treeView = this.treeViews.get(sourceViewId);\n\t\tif (!treeView) {\n\t\t\treturn Promise.reject(new NoTreeViewError(sourceViewId));\n\t\t}\n\n\t\tconst treeDataTransfer = await this.addAdditionalTransferItems(new extHostTypes.DataTransfer(), treeView, sourceTreeItemHandles, token, operationUuid);\n\t\tif (!treeDataTransfer || token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn DataTransfer.from(treeDataTransfer);\n\t}\n\n\tasync $hasResolve(treeViewId: string): Promise<boolean> {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\tthrow new NoTreeViewError(treeViewId);\n\t\t}\n\t\treturn treeView.hasResolve;\n\t}\n\n\t$resolve(treeViewId: string, treeItemHandle: string, token: vscode.CancellationToken): Promise<ITreeItem | undefined> {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\tthrow new NoTreeViewError(treeViewId);\n\t\t}\n\t\treturn treeView.resolveTreeItem(treeItemHandle, token);\n\t}\n\n\t$setExpanded(treeViewId: string, treeItemHandle: string, expanded: boolean): void {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\tthrow new NoTreeViewError(treeViewId);\n\t\t}\n\t\ttreeView.setExpanded(treeItemHandle, expanded);\n\t}\n\n\t$setSelectionAndFocus(treeViewId: string, selectedHandles: string[], focusedHandle: string) {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\tthrow new NoTreeViewError(treeViewId);\n\t\t}\n\t\ttreeView.setSelectionAndFocus(selectedHandles, focusedHandle);\n\t}\n\n\t$setVisible(treeViewId: string, isVisible: boolean): void {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\tif (!isVisible) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthrow new NoTreeViewError(treeViewId);\n\t\t}\n\t\ttreeView.setVisible(isVisible);\n\t}\n\n\t$changeCheckboxState(treeViewId: string, checkboxUpdate: CheckboxUpdate[]): void {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\tthrow new NoTreeViewError(treeViewId);\n\t\t}\n\t\ttreeView.setCheckboxState(checkboxUpdate);\n\t}\n\n\tprivate createExtHostTreeView<T>(id: string, options: vscode.TreeViewOptions<T>, extension: IExtensionDescription): ExtHostTreeView<T> {\n\t\tconst treeView = this._register(new ExtHostTreeView<T>(id, options, this._proxy, this.commands.converter, this.logService, extension));\n\t\tthis.treeViews.set(id, treeView);\n\t\treturn treeView;\n\t}\n\n\tprivate convertArgument(arg: TreeViewItemHandleArg | TreeViewPaneHandleArg): any {\n\t\tconst treeView = this.treeViews.get(arg.$treeViewId);\n\t\tif (treeView && '$treeItemHandle' in arg) {\n\t\t\treturn treeView.getExtensionElement(arg.$treeItemHandle);\n\t\t}\n\t\tif (treeView && '$focusedTreeItem' in arg && arg.$focusedTreeItem) {\n\t\t\treturn treeView.focusedElement;\n\t\t}\n\t\treturn null;\n\t}\n}\n\ntype Root = null | undefined | void;\ntype TreeData<T> = { message: boolean; element: T | T[] | Root | false };\n\ninterface TreeNode extends IDisposable {\n\titem: ITreeItem;\n\textensionItem: vscode.TreeItem;\n\tparent: TreeNode | Root;\n\tchildren?: TreeNode[];\n\tdisposableStore: DisposableStore;\n}\n\nclass ExtHostTreeView<T> extends Disposable {\n\n\tprivate static readonly LABEL_HANDLE_PREFIX = '0';\n\tprivate static readonly ID_HANDLE_PREFIX = '1';\n\n\tprivate readonly dataProvider: vscode.TreeDataProvider<T>;\n\tprivate readonly dndController: vscode.TreeDragAndDropController<T> | undefined;\n\n\tprivate roots: TreeNode[] | undefined = undefined;\n\tprivate elements: Map<TreeItemHandle, T> = new Map<TreeItemHandle, T>();\n\tprivate nodes: Map<T, TreeNode> = new Map<T, TreeNode>();\n\n\tprivate _visible: boolean = false;\n\tget visible(): boolean { return this._visible; }\n\n\tprivate _selectedHandles: TreeItemHandle[] = [];\n\tget selectedElements(): T[] { return <T[]>this._selectedHandles.map(handle => this.getExtensionElement(handle)).filter(element => !isUndefinedOrNull(element)); }\n\n\tprivate _focusedHandle: TreeItemHandle | undefined = undefined;\n\tget focusedElement(): T | undefined { return <T | undefined>(this._focusedHandle ? this.getExtensionElement(this._focusedHandle) : undefined); }\n\n\tprivate _onDidExpandElement: Emitter<vscode.TreeViewExpansionEvent<T>> = this._register(new Emitter<vscode.TreeViewExpansionEvent<T>>());\n\treadonly onDidExpandElement: Event<vscode.TreeViewExpansionEvent<T>> = this._onDidExpandElement.event;\n\n\tprivate _onDidCollapseElement: Emitter<vscode.TreeViewExpansionEvent<T>> = this._register(new Emitter<vscode.TreeViewExpansionEvent<T>>());\n\treadonly onDidCollapseElement: Event<vscode.TreeViewExpansionEvent<T>> = this._onDidCollapseElement.event;\n\n\tprivate _onDidChangeSelection: Emitter<vscode.TreeViewSelectionChangeEvent<T>> = this._register(new Emitter<vscode.TreeViewSelectionChangeEvent<T>>());\n\treadonly onDidChangeSelection: Event<vscode.TreeViewSelectionChangeEvent<T>> = this._onDidChangeSelection.event;\n\n\tprivate _onDidChangeActiveItem: Emitter<vscode.TreeViewActiveItemChangeEvent<T>> = this._register(new Emitter<vscode.TreeViewActiveItemChangeEvent<T>>());\n\treadonly onDidChangeActiveItem: Event<vscode.TreeViewActiveItemChangeEvent<T>> = this._onDidChangeActiveItem.event;\n\n\tprivate _onDidChangeVisibility: Emitter<vscode.TreeViewVisibilityChangeEvent> = this._register(new Emitter<vscode.TreeViewVisibilityChangeEvent>());\n\treadonly onDidChangeVisibility: Event<vscode.TreeViewVisibilityChangeEvent> = this._onDidChangeVisibility.event;\n\n\tprivate _onDidChangeCheckboxState = this._register(new Emitter<vscode.TreeCheckboxChangeEvent<T>>());\n\treadonly onDidChangeCheckboxState: Event<vscode.TreeCheckboxChangeEvent<T>> = this._onDidChangeCheckboxState.event;\n\n\tprivate _onDidChangeData: Emitter<TreeData<T>> = this._register(new Emitter<TreeData<T>>());\n\n\tprivate refreshPromise: Promise<void> = Promise.resolve();\n\tprivate refreshQueue: Promise<void> = Promise.resolve();\n\n\tconstructor(\n\t\tprivate viewId: string, options: vscode.TreeViewOptions<T>,\n\t\tprivate proxy: MainThreadTreeViewsShape,\n\t\tprivate commands: CommandsConverter,\n\t\tprivate logService: ILogService,\n\t\tprivate extension: IExtensionDescription\n\t) {\n\t\tsuper();\n\t\tif (extension.contributes && extension.contributes.views) {\n\t\t\tfor (const location in extension.contributes.views) {\n\t\t\t\tfor (const view of extension.contributes.views[location]) {\n\t\t\t\t\tif (view.id === viewId) {\n\t\t\t\t\t\tthis._title = view.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.dataProvider = options.treeDataProvider;\n\t\tthis.dndController = options.dragAndDropController;\n\t\tif (this.dataProvider.onDidChangeTreeData) {\n\t\t\tthis._register(this.dataProvider.onDidChangeTreeData(elementOrElements => this._onDidChangeData.fire({ message: false, element: elementOrElements })));\n\t\t}\n\n\t\tlet refreshingPromise: Promise<void> | null;\n\t\tlet promiseCallback: () => void;\n\t\tconst onDidChangeData = Event.debounce<TreeData<T>, { message: boolean; elements: (T | Root)[] }>(this._onDidChangeData.event, (result, current) => {\n\t\t\tif (!result) {\n\t\t\t\tresult = { message: false, elements: [] };\n\t\t\t}\n\t\t\tif (current.element !== false) {\n\t\t\t\tif (!refreshingPromise) {\n\t\t\t\t\t// New refresh has started\n\t\t\t\t\trefreshingPromise = new Promise(c => promiseCallback = c);\n\t\t\t\t\tthis.refreshPromise = this.refreshPromise.then(() => refreshingPromise!);\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(current.element)) {\n\t\t\t\t\tresult.elements.push(...current.element);\n\t\t\t\t} else {\n\t\t\t\t\tresult.elements.push(current.element);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (current.message) {\n\t\t\t\tresult.message = true;\n\t\t\t}\n\t\t\treturn result;\n\t\t}, 200, true);\n\t\tthis._register(onDidChangeData(({ message, elements }) => {\n\t\t\tif (elements.length) {\n\t\t\t\tthis.refreshQueue = this.refreshQueue.then(() => {\n\t\t\t\t\tconst _promiseCallback = promiseCallback;\n\t\t\t\t\trefreshingPromise = null;\n\t\t\t\t\treturn this.refresh(elements).then(() => _promiseCallback());\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (message) {\n\t\t\t\tthis.proxy.$setMessage(this.viewId, MarkdownString.fromStrict(this._message) ?? '');\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync getChildren(parentHandle: TreeItemHandle | Root): Promise<ITreeItem[] | undefined> {\n\t\tconst parentElement = parentHandle ? this.getExtensionElement(parentHandle) : undefined;\n\t\tif (parentHandle && !parentElement) {\n\t\t\tthis.logService.error(`No tree item with id \\'${parentHandle}\\' found.`);\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tlet childrenNodes: TreeNode[] | undefined = this.getChildrenNodes(parentHandle); // Get it from cache\n\n\t\tif (!childrenNodes) {\n\t\t\tchildrenNodes = await this.fetchChildrenNodes(parentElement);\n\t\t}\n\n\t\treturn childrenNodes ? childrenNodes.map(n => n.item) : undefined;\n\t}\n\n\tgetExtensionElement(treeItemHandle: TreeItemHandle): T | undefined {\n\t\treturn this.elements.get(treeItemHandle);\n\t}\n\n\treveal(element: T | undefined, options?: IRevealOptions): Promise<void> {\n\t\toptions = options ? options : { select: true, focus: false };\n\t\tconst select = isUndefinedOrNull(options.select) ? true : options.select;\n\t\tconst focus = isUndefinedOrNull(options.focus) ? false : options.focus;\n\t\tconst expand = isUndefinedOrNull(options.expand) ? false : options.expand;\n\n\t\tif (typeof this.dataProvider.getParent !== 'function') {\n\t\t\treturn Promise.reject(new Error(`Required registered TreeDataProvider to implement 'getParent' method to access 'reveal' method`));\n\t\t}\n\n\t\tif (element) {\n\t\t\treturn this.refreshPromise\n\t\t\t\t.then(() => this.resolveUnknownParentChain(element))\n\t\t\t\t.then(parentChain => this.resolveTreeNode(element, parentChain[parentChain.length - 1])\n\t\t\t\t\t.then(treeNode => this.proxy.$reveal(this.viewId, { item: treeNode.item, parentChain: parentChain.map(p => p.item) }, { select, focus, expand })), error => this.logService.error(error));\n\t\t} else {\n\t\t\treturn this.proxy.$reveal(this.viewId, undefined, { select, focus, expand });\n\t\t}\n\t}\n\n\tprivate _message: string | vscode.MarkdownString = '';\n\tget message(): string | vscode.MarkdownString {\n\t\treturn this._message;\n\t}\n\n\tset message(message: string | vscode.MarkdownString) {\n\t\tthis._message = message;\n\t\tthis._onDidChangeData.fire({ message: true, element: false });\n\t}\n\n\tprivate _title: string = '';\n\tget title(): string {\n\t\treturn this._title;\n\t}\n\n\tset title(title: string) {\n\t\tthis._title = title;\n\t\tthis.proxy.$setTitle(this.viewId, title, this._description);\n\t}\n\n\tprivate _description: string | undefined;\n\tget description(): string | undefined {\n\t\treturn this._description;\n\t}\n\n\tset description(description: string | undefined) {\n\t\tthis._description = description;\n\t\tthis.proxy.$setTitle(this.viewId, this._title, description);\n\t}\n\n\tprivate _badge: vscode.ViewBadge | undefined;\n\tget badge(): vscode.ViewBadge | undefined {\n\t\treturn this._badge;\n\t}\n\n\tset badge(badge: vscode.ViewBadge | undefined) {\n\t\tif (this._badge?.value === badge?.value &&\n\t\t\tthis._badge?.tooltip === badge?.tooltip) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._badge = ViewBadge.from(badge);\n\t\tthis.proxy.$setBadge(this.viewId, badge);\n\t}\n\n\tsetExpanded(treeItemHandle: TreeItemHandle, expanded: boolean): void {\n\t\tconst element = this.getExtensionElement(treeItemHandle);\n\t\tif (element) {\n\t\t\tif (expanded) {\n\t\t\t\tthis._onDidExpandElement.fire(Object.freeze({ element }));\n\t\t\t} else {\n\t\t\t\tthis._onDidCollapseElement.fire(Object.freeze({ element }));\n\t\t\t}\n\t\t}\n\t}\n\n\tsetSelectionAndFocus(selectedHandles: TreeItemHandle[], focusedHandle: string): void {\n\t\tconst changedSelection = !equals(this._selectedHandles, selectedHandles);\n\t\tthis._selectedHandles = selectedHandles;\n\n\t\tconst changedFocus = this._focusedHandle !== focusedHandle;\n\t\tthis._focusedHandle = focusedHandle;\n\n\t\tif (changedSelection) {\n\t\t\tthis._onDidChangeSelection.fire(Object.freeze({ selection: this.selectedElements }));\n\t\t}\n\n\t\tif (changedFocus) {\n\t\t\tthis._onDidChangeActiveItem.fire(Object.freeze({ activeItem: this.focusedElement }));\n\t\t}\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tif (visible !== this._visible) {\n\t\t\tthis._visible = visible;\n\t\t\tthis._onDidChangeVisibility.fire(Object.freeze({ visible: this._visible }));\n\t\t}\n\t}\n\n\tasync setCheckboxState(checkboxUpdates: CheckboxUpdate[]) {\n\t\ttype CheckboxUpdateWithItem = { extensionItem: NonNullable<T>; treeItem: vscode.TreeItem; newState: extHostTypes.TreeItemCheckboxState };\n\t\tconst items = (await Promise.all(checkboxUpdates.map(async checkboxUpdate => {\n\t\t\tconst extensionItem = this.getExtensionElement(checkboxUpdate.treeItemHandle);\n\t\t\tif (extensionItem) {\n\t\t\t\treturn {\n\t\t\t\t\textensionItem: extensionItem,\n\t\t\t\t\ttreeItem: await this.dataProvider.getTreeItem(extensionItem),\n\t\t\t\t\tnewState: checkboxUpdate.newState ? extHostTypes.TreeItemCheckboxState.Checked : extHostTypes.TreeItemCheckboxState.Unchecked\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn Promise.resolve(undefined);\n\t\t}))).filter<CheckboxUpdateWithItem>((item): item is CheckboxUpdateWithItem => item !== undefined);\n\n\t\titems.forEach(item => {\n\t\t\titem.treeItem.checkboxState = item.newState ? extHostTypes.TreeItemCheckboxState.Checked : extHostTypes.TreeItemCheckboxState.Unchecked;\n\t\t});\n\n\t\tthis._onDidChangeCheckboxState.fire({ items: items.map(item => [item.extensionItem, item.newState]) });\n\t}\n\n\tasync handleDrag(sourceTreeItemHandles: TreeItemHandle[], treeDataTransfer: vscode.DataTransfer, token: CancellationToken): Promise<vscode.DataTransfer | undefined> {\n\t\tconst extensionTreeItems: T[] = [];\n\t\tfor (const sourceHandle of sourceTreeItemHandles) {\n\t\t\tconst extensionItem = this.getExtensionElement(sourceHandle);\n\t\t\tif (extensionItem) {\n\t\t\t\textensionTreeItems.push(extensionItem);\n\t\t\t}\n\t\t}\n\n\t\tif (!this.dndController?.handleDrag || (extensionTreeItems.length === 0)) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.dndController.handleDrag(extensionTreeItems, treeDataTransfer, token);\n\t\treturn treeDataTransfer;\n\t}\n\n\tget hasHandleDrag(): boolean {\n\t\treturn !!this.dndController?.handleDrag;\n\t}\n\n\tasync onDrop(treeDataTransfer: vscode.DataTransfer, targetHandleOrNode: TreeItemHandle | undefined, token: CancellationToken): Promise<void> {\n\t\tconst target = targetHandleOrNode ? this.getExtensionElement(targetHandleOrNode) : undefined;\n\t\tif ((!target && targetHandleOrNode) || !this.dndController?.handleDrop) {\n\t\t\treturn;\n\t\t}\n\t\treturn asPromise(() => this.dndController?.handleDrop\n\t\t\t? this.dndController.handleDrop(target, treeDataTransfer, token)\n\t\t\t: undefined);\n\t}\n\n\tget hasResolve(): boolean {\n\t\treturn !!this.dataProvider.resolveTreeItem;\n\t}\n\n\tasync resolveTreeItem(treeItemHandle: string, token: vscode.CancellationToken): Promise<ITreeItem | undefined> {\n\t\tif (!this.dataProvider.resolveTreeItem) {\n\t\t\treturn;\n\t\t}\n\t\tconst element = this.elements.get(treeItemHandle);\n\t\tif (element) {\n\t\t\tconst node = this.nodes.get(element);\n\t\t\tif (node) {\n\t\t\t\tconst resolve = await this.dataProvider.resolveTreeItem(node.extensionItem, element, token) ?? node.extensionItem;\n\t\t\t\tthis.validateTreeItem(resolve);\n\t\t\t\t// Resolvable elements. Currently only tooltip and command.\n\t\t\t\tnode.item.tooltip = this.getTooltip(resolve.tooltip);\n\t\t\t\tnode.item.command = this.getCommand(node.disposableStore, resolve.command);\n\t\t\t\treturn node.item;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tprivate resolveUnknownParentChain(element: T): Promise<TreeNode[]> {\n\t\treturn this.resolveParent(element)\n\t\t\t.then((parent) => {\n\t\t\t\tif (!parent) {\n\t\t\t\t\treturn Promise.resolve([]);\n\t\t\t\t}\n\t\t\t\treturn this.resolveUnknownParentChain(parent)\n\t\t\t\t\t.then(result => this.resolveTreeNode(parent, result[result.length - 1])\n\t\t\t\t\t\t.then(parentNode => {\n\t\t\t\t\t\t\tresult.push(parentNode);\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}));\n\t\t\t});\n\t}\n\n\tprivate resolveParent(element: T): Promise<T | Root> {\n\t\tconst node = this.nodes.get(element);\n\t\tif (node) {\n\t\t\treturn Promise.resolve(node.parent ? this.elements.get(node.parent.item.handle) : undefined);\n\t\t}\n\t\treturn asPromise(() => this.dataProvider.getParent!(element));\n\t}\n\n\tprivate resolveTreeNode(element: T, parent?: TreeNode): Promise<TreeNode> {\n\t\tconst node = this.nodes.get(element);\n\t\tif (node) {\n\t\t\treturn Promise.resolve(node);\n\t\t}\n\t\treturn asPromise(() => this.dataProvider.getTreeItem(element))\n\t\t\t.then(extTreeItem => this.createHandle(element, extTreeItem, parent, true))\n\t\t\t.then(handle => this.getChildren(parent ? parent.item.handle : undefined)\n\t\t\t\t.then(() => {\n\t\t\t\t\tconst cachedElement = this.getExtensionElement(handle);\n\t\t\t\t\tif (cachedElement) {\n\t\t\t\t\t\tconst node = this.nodes.get(cachedElement);\n\t\t\t\t\t\tif (node) {\n\t\t\t\t\t\t\treturn Promise.resolve(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Cannot resolve tree item for element ${handle} from extension ${this.extension.identifier.value}`);\n\t\t\t\t}));\n\t}\n\n\tprivate getChildrenNodes(parentNodeOrHandle: TreeNode | TreeItemHandle | Root): TreeNode[] | undefined {\n\t\tif (parentNodeOrHandle) {\n\t\t\tlet parentNode: TreeNode | undefined;\n\t\t\tif (typeof parentNodeOrHandle === 'string') {\n\t\t\t\tconst parentElement = this.getExtensionElement(parentNodeOrHandle);\n\t\t\t\tparentNode = parentElement ? this.nodes.get(parentElement) : undefined;\n\t\t\t} else {\n\t\t\t\tparentNode = parentNodeOrHandle;\n\t\t\t}\n\t\t\treturn parentNode ? parentNode.children || undefined : undefined;\n\t\t}\n\t\treturn this.roots;\n\t}\n\n\tprivate async fetchChildrenNodes(parentElement?: T): Promise<TreeNode[] | undefined> {\n\t\t// clear children cache\n\t\tthis.clearChildren(parentElement);\n\n\t\tconst cts = new CancellationTokenSource(this._refreshCancellationSource.token);\n\n\t\ttry {\n\t\t\tconst parentNode = parentElement ? this.nodes.get(parentElement) : undefined;\n\t\t\tconst elements = await this.dataProvider.getChildren(parentElement);\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst items = await Promise.all(coalesce(elements || []).map(async element => {\n\t\t\t\tconst item = await this.dataProvider.getTreeItem(element);\n\t\t\t\treturn item && !cts.token.isCancellationRequested ? this.createAndRegisterTreeNode(element, item, parentNode) : null;\n\t\t\t}));\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn coalesce(items);\n\t\t} finally {\n\t\t\tcts.dispose();\n\t\t}\n\t}\n\n\tprivate _refreshCancellationSource = new CancellationTokenSource();\n\n\tprivate refresh(elements: (T | Root)[]): Promise<void> {\n\t\tconst hasRoot = elements.some(element => !element);\n\t\tif (hasRoot) {\n\t\t\t// Cancel any pending children fetches\n\t\t\tthis._refreshCancellationSource.dispose(true);\n\t\t\tthis._refreshCancellationSource = new CancellationTokenSource();\n\n\t\t\tthis.clearAll(); // clear cache\n\t\t\treturn this.proxy.$refresh(this.viewId);\n\t\t} else {\n\t\t\tconst handlesToRefresh = this.getHandlesToRefresh(<T[]>elements);\n\t\t\tif (handlesToRefresh.length) {\n\t\t\t\treturn this.refreshHandles(handlesToRefresh);\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate getHandlesToRefresh(elements: T[]): TreeItemHandle[] {\n\t\tconst elementsToUpdate = new Set<TreeItemHandle>();\n\t\tconst elementNodes = elements.map(element => this.nodes.get(element));\n\t\tfor (const elementNode of elementNodes) {\n\t\t\tif (elementNode && !elementsToUpdate.has(elementNode.item.handle)) {\n\t\t\t\t// check if an ancestor of extElement is already in the elements list\n\t\t\t\tlet currentNode: TreeNode | undefined = elementNode;\n\t\t\t\twhile (currentNode && currentNode.parent && elementNodes.findIndex(node => currentNode && currentNode.parent && node && node.item.handle === currentNode.parent.item.handle) === -1) {\n\t\t\t\t\tconst parentElement: T | undefined = this.elements.get(currentNode.parent.item.handle);\n\t\t\t\t\tcurrentNode = parentElement ? this.nodes.get(parentElement) : undefined;\n\t\t\t\t}\n\t\t\t\tif (currentNode && !currentNode.parent) {\n\t\t\t\t\telementsToUpdate.add(elementNode.item.handle);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst handlesToUpdate: TreeItemHandle[] = [];\n\t\t// Take only top level elements\n\t\telementsToUpdate.forEach((handle) => {\n\t\t\tconst element = this.elements.get(handle);\n\t\t\tif (element) {\n\t\t\t\tconst node = this.nodes.get(element);\n\t\t\t\tif (node && (!node.parent || !elementsToUpdate.has(node.parent.item.handle))) {\n\t\t\t\t\thandlesToUpdate.push(handle);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn handlesToUpdate;\n\t}\n\n\tprivate refreshHandles(itemHandles: TreeItemHandle[]): Promise<void> {\n\t\tconst itemsToRefresh: { [treeItemHandle: string]: ITreeItem } = {};\n\t\treturn Promise.all(itemHandles.map(treeItemHandle =>\n\t\t\tthis.refreshNode(treeItemHandle)\n\t\t\t\t.then(node => {\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\titemsToRefresh[treeItemHandle] = node.item;\n\t\t\t\t\t}\n\t\t\t\t})))\n\t\t\t.then(() => Object.keys(itemsToRefresh).length ? this.proxy.$refresh(this.viewId, itemsToRefresh) : undefined);\n\t}\n\n\tprivate refreshNode(treeItemHandle: TreeItemHandle): Promise<TreeNode | null> {\n\t\tconst extElement = this.getExtensionElement(treeItemHandle);\n\t\tif (extElement) {\n\t\t\tconst existing = this.nodes.get(extElement);\n\t\t\tif (existing) {\n\t\t\t\tthis.clearChildren(extElement); // clear children cache\n\t\t\t\treturn asPromise(() => this.dataProvider.getTreeItem(extElement))\n\t\t\t\t\t.then(extTreeItem => {\n\t\t\t\t\t\tif (extTreeItem) {\n\t\t\t\t\t\t\tconst newNode = this.createTreeNode(extElement, extTreeItem, existing.parent);\n\t\t\t\t\t\t\tthis.updateNodeCache(extElement, newNode, existing, existing.parent);\n\t\t\t\t\t\t\texisting.dispose();\n\t\t\t\t\t\t\treturn newNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tprivate createAndRegisterTreeNode(element: T, extTreeItem: vscode.TreeItem, parentNode: TreeNode | Root): TreeNode {\n\t\tconst node = this.createTreeNode(element, extTreeItem, parentNode);\n\t\tif (extTreeItem.id && this.elements.has(node.item.handle)) {\n\t\t\tthrow new Error(localize('treeView.duplicateElement', 'Element with id {0} is already registered', extTreeItem.id));\n\t\t}\n\t\tthis.addNodeToCache(element, node);\n\t\tthis.addNodeToParentCache(node, parentNode);\n\t\treturn node;\n\t}\n\n\tprivate getTooltip(tooltip?: string | vscode.MarkdownString): string | IMarkdownString | undefined {\n\t\tif (extHostTypes.MarkdownString.isMarkdownString(tooltip)) {\n\t\t\treturn MarkdownString.from(tooltip);\n\t\t}\n\t\treturn tooltip;\n\t}\n\n\tprivate getCommand(disposable: DisposableStore, command?: vscode.Command): TreeCommand | undefined {\n\t\treturn command ? { ...this.commands.toInternal(command, disposable), originalId: command.command } : undefined;\n\t}\n\n\tprivate getCheckbox(extensionTreeItem: vscode.TreeItem): ITreeItemCheckboxState | undefined {\n\t\tif (extensionTreeItem.checkboxState === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet checkboxState: extHostTypes.TreeItemCheckboxState;\n\t\tlet tooltip: string | undefined = undefined;\n\t\tlet accessibilityInformation: IAccessibilityInformation | undefined = undefined;\n\t\tif (typeof extensionTreeItem.checkboxState === 'number') {\n\t\t\tcheckboxState = extensionTreeItem.checkboxState;\n\t\t} else {\n\t\t\tcheckboxState = extensionTreeItem.checkboxState.state;\n\t\t\ttooltip = extensionTreeItem.checkboxState.tooltip;\n\t\t\taccessibilityInformation = extensionTreeItem.checkboxState.accessibilityInformation;\n\t\t}\n\t\treturn { isChecked: checkboxState === extHostTypes.TreeItemCheckboxState.Checked, tooltip, accessibilityInformation };\n\t}\n\n\tprivate validateTreeItem(extensionTreeItem: vscode.TreeItem) {\n\t\tif (!extHostTypes.TreeItem.isTreeItem(extensionTreeItem, this.extension)) {\n\t\t\tthrow new Error(`Extension ${this.extension.identifier.value} has provided an invalid tree item.`);\n\t\t}\n\t}\n\n\tprivate createTreeNode(element: T, extensionTreeItem: vscode.TreeItem, parent: TreeNode | Root): TreeNode {\n\t\tthis.validateTreeItem(extensionTreeItem);\n\t\tconst disposableStore = this._register(new DisposableStore());\n\t\tconst handle = this.createHandle(element, extensionTreeItem, parent);\n\t\tconst icon = this.getLightIconPath(extensionTreeItem);\n\t\tconst item: ITreeItem = {\n\t\t\thandle,\n\t\t\tparentHandle: parent ? parent.item.handle : undefined,\n\t\t\tlabel: toTreeItemLabel(extensionTreeItem.label, this.extension),\n\t\t\tdescription: extensionTreeItem.description,\n\t\t\tresourceUri: extensionTreeItem.resourceUri,\n\t\t\ttooltip: this.getTooltip(extensionTreeItem.tooltip),\n\t\t\tcommand: this.getCommand(disposableStore, extensionTreeItem.command),\n\t\t\tcontextValue: extensionTreeItem.contextValue,\n\t\t\ticon,\n\t\t\ticonDark: this.getDarkIconPath(extensionTreeItem) || icon,\n\t\t\tthemeIcon: this.getThemeIcon(extensionTreeItem),\n\t\t\tcollapsibleState: isUndefinedOrNull(extensionTreeItem.collapsibleState) ? extHostTypes.TreeItemCollapsibleState.None : extensionTreeItem.collapsibleState,\n\t\t\taccessibilityInformation: extensionTreeItem.accessibilityInformation,\n\t\t\tcheckbox: this.getCheckbox(extensionTreeItem),\n\t\t};\n\n\t\treturn {\n\t\t\titem,\n\t\t\textensionItem: extensionTreeItem,\n\t\t\tparent,\n\t\t\tchildren: undefined,\n\t\t\tdisposableStore,\n\t\t\tdispose(): void { disposableStore.dispose(); }\n\t\t};\n\t}\n\n\tprivate getThemeIcon(extensionTreeItem: vscode.TreeItem): extHostTypes.ThemeIcon | undefined {\n\t\treturn extensionTreeItem.iconPath instanceof extHostTypes.ThemeIcon ? extensionTreeItem.iconPath : undefined;\n\t}\n\n\tprivate createHandle(element: T, { id, label, resourceUri }: vscode.TreeItem, parent: TreeNode | Root, returnFirst?: boolean): TreeItemHandle {\n\t\tif (id) {\n\t\t\treturn `${ExtHostTreeView.ID_HANDLE_PREFIX}/${id}`;\n\t\t}\n\n\t\tconst treeItemLabel = toTreeItemLabel(label, this.extension);\n\t\tconst prefix: string = parent ? parent.item.handle : ExtHostTreeView.LABEL_HANDLE_PREFIX;\n\t\tlet elementId = treeItemLabel ? treeItemLabel.label : resourceUri ? basename(resourceUri) : '';\n\t\telementId = elementId.indexOf('/') !== -1 ? elementId.replace('/', '//') : elementId;\n\t\tconst existingHandle = this.nodes.has(element) ? this.nodes.get(element)!.item.handle : undefined;\n\t\tconst childrenNodes = (this.getChildrenNodes(parent) || []);\n\n\t\tlet handle: TreeItemHandle;\n\t\tlet counter = 0;\n\t\tdo {\n\t\t\thandle = `${prefix}/${counter}:${elementId}`;\n\t\t\tif (returnFirst || !this.elements.has(handle) || existingHandle === handle) {\n\t\t\t\t// Return first if asked for or\n\t\t\t\t// Return if handle does not exist or\n\t\t\t\t// Return if handle is being reused\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcounter++;\n\t\t} while (counter <= childrenNodes.length);\n\n\t\treturn handle;\n\t}\n\n\tprivate getLightIconPath(extensionTreeItem: vscode.TreeItem): URI | undefined {\n\t\tif (extensionTreeItem.iconPath && !(extensionTreeItem.iconPath instanceof extHostTypes.ThemeIcon)) {\n\t\t\tif (typeof extensionTreeItem.iconPath === 'string'\n\t\t\t\t|| URI.isUri(extensionTreeItem.iconPath)) {\n\t\t\t\treturn this.getIconPath(extensionTreeItem.iconPath);\n\t\t\t}\n\t\t\treturn this.getIconPath((<{ light: string | URI; dark: string | URI }>extensionTreeItem.iconPath).light);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getDarkIconPath(extensionTreeItem: vscode.TreeItem): URI | undefined {\n\t\tif (extensionTreeItem.iconPath && !(extensionTreeItem.iconPath instanceof extHostTypes.ThemeIcon) && (<{ light: string | URI; dark: string | URI }>extensionTreeItem.iconPath).dark) {\n\t\t\treturn this.getIconPath((<{ light: string | URI; dark: string | URI }>extensionTreeItem.iconPath).dark);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getIconPath(iconPath: string | URI): URI {\n\t\tif (URI.isUri(iconPath)) {\n\t\t\treturn iconPath;\n\t\t}\n\t\treturn URI.file(iconPath);\n\t}\n\n\tprivate addNodeToCache(element: T, node: TreeNode): void {\n\t\tthis.elements.set(node.item.handle, element);\n\t\tthis.nodes.set(element, node);\n\t}\n\n\tprivate updateNodeCache(element: T, newNode: TreeNode, existing: TreeNode, parentNode: TreeNode | Root): void {\n\t\t// Remove from the cache\n\t\tthis.elements.delete(newNode.item.handle);\n\t\tthis.nodes.delete(element);\n\t\tif (newNode.item.handle !== existing.item.handle) {\n\t\t\tthis.elements.delete(existing.item.handle);\n\t\t}\n\n\t\t// Add the new node to the cache\n\t\tthis.addNodeToCache(element, newNode);\n\n\t\t// Replace the node in parent's children nodes\n\t\tconst childrenNodes = (this.getChildrenNodes(parentNode) || []);\n\t\tconst childNode = childrenNodes.filter(c => c.item.handle === existing.item.handle)[0];\n\t\tif (childNode) {\n\t\t\tchildrenNodes.splice(childrenNodes.indexOf(childNode), 1, newNode);\n\t\t}\n\t}\n\n\tprivate addNodeToParentCache(node: TreeNode, parentNode: TreeNode | Root): void {\n\t\tif (parentNode) {\n\t\t\tif (!parentNode.children) {\n\t\t\t\tparentNode.children = [];\n\t\t\t}\n\t\t\tparentNode.children.push(node);\n\t\t} else {\n\t\t\tif (!this.roots) {\n\t\t\t\tthis.roots = [];\n\t\t\t}\n\t\t\tthis.roots.push(node);\n\t\t}\n\t}\n\n\tprivate clearChildren(parentElement?: T): void {\n\t\tif (parentElement) {\n\t\t\tconst node = this.nodes.get(parentElement);\n\t\t\tif (node) {\n\t\t\t\tif (node.children) {\n\t\t\t\t\tfor (const child of node.children) {\n\t\t\t\t\t\tconst childElement = this.elements.get(child.item.handle);\n\t\t\t\t\t\tif (childElement) {\n\t\t\t\t\t\t\tthis.clear(childElement);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnode.children = undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.clearAll();\n\t\t}\n\t}\n\n\tprivate clear(element: T): void {\n\t\tconst node = this.nodes.get(element);\n\t\tif (node) {\n\t\t\tif (node.children) {\n\t\t\t\tfor (const child of node.children) {\n\t\t\t\t\tconst childElement = this.elements.get(child.item.handle);\n\t\t\t\t\tif (childElement) {\n\t\t\t\t\t\tthis.clear(childElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.nodes.delete(element);\n\t\t\tthis.elements.delete(node.item.handle);\n\t\t\tnode.dispose();\n\t\t}\n\t}\n\n\tprivate clearAll(): void {\n\t\tthis.roots = undefined;\n\t\tthis.elements.clear();\n\t\tthis.nodes.forEach(node => node.dispose());\n\t\tthis.nodes.clear();\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis._refreshCancellationSource.dispose();\n\n\t\tthis.clearAll();\n\t\tthis.proxy.$disposeTree(this.viewId);\n\t}\n}\n"]}