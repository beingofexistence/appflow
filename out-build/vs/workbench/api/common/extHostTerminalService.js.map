{"version":3,"sources":["vs/workbench/api/common/extHostTerminalService.ts"],"names":[],"mappings":"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","file":"extHostTerminalService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ExtHostTerminalServiceShape, MainContext, MainThreadTerminalServiceShape, ITerminalDimensionsDto, ITerminalLinkDto, ExtHostTerminalIdentifier, ICommandDto, ITerminalQuickFixOpenerDto, ITerminalQuickFixExecuteTerminalCommandDto, TerminalCommandMatchResultDto, ITerminalCommandDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { IDisposable, DisposableStore, Disposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { Disposable as VSCodeDisposable, EnvironmentVariableMutatorType, TerminalExitReason } from './extHostTypes';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { localize } from 'vs/nls';\nimport { NotSupportedError } from 'vs/base/common/errors';\nimport { serializeEnvironmentDescriptionMap, serializeEnvironmentVariableCollection } from 'vs/platform/terminal/common/environmentVariableShared';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IEnvironmentVariableCollectionDescription, IEnvironmentVariableMutator, ISerializableEnvironmentVariableCollection } from 'vs/platform/terminal/common/environmentVariable';\nimport { ICreateContributedTerminalProfileOptions, IProcessReadyEvent, IShellLaunchConfigDto, ITerminalChildProcess, ITerminalLaunchError, ITerminalProfile, TerminalIcon, TerminalLocation, IProcessProperty, ProcessPropertyType, IProcessPropertyMap } from 'vs/platform/terminal/common/terminal';\nimport { TerminalDataBufferer } from 'vs/platform/terminal/common/terminalDataBuffering';\nimport { ThemeColor } from 'vs/base/common/themables';\nimport { Promises } from 'vs/base/common/async';\nimport { EditorGroupColumn } from 'vs/workbench/services/editor/common/editorGroupColumn';\nimport { TerminalQuickFix, ViewColumn } from 'vs/workbench/api/common/extHostTypeConverters';\nimport { IExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport { ISerializedTerminalInstanceContext } from 'vs/workbench/contrib/terminal/common/terminal';\n\nexport interface IExtHostTerminalService extends ExtHostTerminalServiceShape, IDisposable {\n\n\treadonly _serviceBrand: undefined;\n\n\tactiveTerminal: vscode.Terminal | undefined;\n\tterminals: vscode.Terminal[];\n\n\treadonly onDidCloseTerminal: Event<vscode.Terminal>;\n\treadonly onDidOpenTerminal: Event<vscode.Terminal>;\n\treadonly onDidChangeActiveTerminal: Event<vscode.Terminal | undefined>;\n\treadonly onDidChangeTerminalDimensions: Event<vscode.TerminalDimensionsChangeEvent>;\n\treadonly onDidChangeTerminalState: Event<vscode.Terminal>;\n\treadonly onDidWriteTerminalData: Event<vscode.TerminalDataWriteEvent>;\n\treadonly onDidExecuteTerminalCommand: Event<vscode.TerminalExecutedCommand>;\n\treadonly onDidChangeShell: Event<string>;\n\n\tcreateTerminal(name?: string, shellPath?: string, shellArgs?: readonly string[] | string): vscode.Terminal;\n\tcreateTerminalFromOptions(options: vscode.TerminalOptions, internalOptions?: ITerminalInternalOptions): vscode.Terminal;\n\tcreateExtensionTerminal(options: vscode.ExtensionTerminalOptions): vscode.Terminal;\n\tattachPtyToTerminal(id: number, pty: vscode.Pseudoterminal): void;\n\tgetDefaultShell(useAutomationShell: boolean): string;\n\tgetDefaultShellArgs(useAutomationShell: boolean): string[] | string;\n\tregisterLinkProvider(provider: vscode.TerminalLinkProvider): vscode.Disposable;\n\tregisterProfileProvider(extension: IExtensionDescription, id: string, provider: vscode.TerminalProfileProvider): vscode.Disposable;\n\tregisterTerminalQuickFixProvider(id: string, extensionId: string, provider: vscode.TerminalQuickFixProvider): vscode.Disposable;\n\tgetEnvironmentVariableCollection(extension: IExtensionDescription): IEnvironmentVariableCollection;\n}\n\ninterface IEnvironmentVariableCollection extends vscode.EnvironmentVariableCollection {\n\tgetScoped(scope: vscode.EnvironmentVariableScope): vscode.EnvironmentVariableCollection;\n}\n\nexport interface ITerminalInternalOptions {\n\tisFeatureTerminal?: boolean;\n\tuseShellEnvironment?: boolean;\n\tresolvedExtHostIdentifier?: ExtHostTerminalIdentifier;\n\t/**\n\t * This location is different from the API location because it can include splitActiveTerminal,\n\t * a property we resolve internally\n\t */\n\tlocation?: TerminalLocation | { viewColumn: number; preserveState?: boolean } | { splitActiveTerminal: boolean };\n}\n\nexport const IExtHostTerminalService = createDecorator<IExtHostTerminalService>('IExtHostTerminalService');\n\nexport class ExtHostTerminal {\n\tprivate _disposed: boolean = false;\n\tprivate _pidPromise: Promise<number | undefined>;\n\tprivate _cols: number | undefined;\n\tprivate _pidPromiseComplete: ((value: number | undefined) => any) | undefined;\n\tprivate _rows: number | undefined;\n\tprivate _exitStatus: vscode.TerminalExitStatus | undefined;\n\tprivate _state: vscode.TerminalState = { isInteractedWith: false };\n\tprivate _selection: string | undefined;\n\n\tpublic isOpen: boolean = false;\n\n\treadonly value: vscode.Terminal;\n\n\tconstructor(\n\t\tprivate _proxy: MainThreadTerminalServiceShape,\n\t\tpublic _id: ExtHostTerminalIdentifier,\n\t\tprivate readonly _creationOptions: vscode.TerminalOptions | vscode.ExtensionTerminalOptions,\n\t\tprivate _name?: string,\n\t) {\n\t\tthis._creationOptions = Object.freeze(this._creationOptions);\n\t\tthis._pidPromise = new Promise<number | undefined>(c => this._pidPromiseComplete = c);\n\n\t\tconst that = this;\n\t\tthis.value = {\n\t\t\tget name(): string {\n\t\t\t\treturn that._name || '';\n\t\t\t},\n\t\t\tget processId(): Promise<number | undefined> {\n\t\t\t\treturn that._pidPromise;\n\t\t\t},\n\t\t\tget creationOptions(): Readonly<vscode.TerminalOptions | vscode.ExtensionTerminalOptions> {\n\t\t\t\treturn that._creationOptions;\n\t\t\t},\n\t\t\tget exitStatus(): vscode.TerminalExitStatus | undefined {\n\t\t\t\treturn that._exitStatus;\n\t\t\t},\n\t\t\tget state(): vscode.TerminalState {\n\t\t\t\treturn that._state;\n\t\t\t},\n\t\t\tget selection(): string | undefined {\n\t\t\t\treturn that._selection;\n\t\t\t},\n\t\t\tsendText(text: string, addNewLine: boolean = true): void {\n\t\t\t\tthat._checkDisposed();\n\t\t\t\tthat._proxy.$sendText(that._id, text, addNewLine);\n\t\t\t},\n\t\t\tshow(preserveFocus: boolean): void {\n\t\t\t\tthat._checkDisposed();\n\t\t\t\tthat._proxy.$show(that._id, preserveFocus);\n\t\t\t},\n\t\t\thide(): void {\n\t\t\t\tthat._checkDisposed();\n\t\t\t\tthat._proxy.$hide(that._id);\n\t\t\t},\n\t\t\tdispose(): void {\n\t\t\t\tif (!that._disposed) {\n\t\t\t\t\tthat._disposed = true;\n\t\t\t\t\tthat._proxy.$dispose(that._id);\n\t\t\t\t}\n\t\t\t},\n\t\t\tget dimensions(): vscode.TerminalDimensions | undefined {\n\t\t\t\tif (that._cols === undefined || that._rows === undefined) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tcolumns: that._cols,\n\t\t\t\t\trows: that._rows\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic async create(\n\t\toptions: vscode.TerminalOptions,\n\t\tinternalOptions?: ITerminalInternalOptions,\n\t): Promise<void> {\n\t\tif (typeof this._id !== 'string') {\n\t\t\tthrow new Error('Terminal has already been created');\n\t\t}\n\t\tawait this._proxy.$createTerminal(this._id, {\n\t\t\tname: options.name,\n\t\t\tshellPath: options.shellPath ?? undefined,\n\t\t\tshellArgs: options.shellArgs ?? undefined,\n\t\t\tcwd: options.cwd ?? undefined,\n\t\t\tenv: options.env ?? undefined,\n\t\t\ticon: asTerminalIcon(options.iconPath) ?? undefined,\n\t\t\tcolor: ThemeColor.isThemeColor(options.color) ? options.color.id : undefined,\n\t\t\tinitialText: options.message ?? undefined,\n\t\t\tstrictEnv: options.strictEnv ?? undefined,\n\t\t\thideFromUser: options.hideFromUser ?? undefined,\n\t\t\tisFeatureTerminal: internalOptions?.isFeatureTerminal ?? undefined,\n\t\t\tisExtensionOwnedTerminal: true,\n\t\t\tuseShellEnvironment: internalOptions?.useShellEnvironment ?? undefined,\n\t\t\tlocation: internalOptions?.location || this._serializeParentTerminal(options.location, internalOptions?.resolvedExtHostIdentifier),\n\t\t\tisTransient: options.isTransient ?? undefined,\n\t\t});\n\t}\n\n\n\tpublic async createExtensionTerminal(location?: TerminalLocation | vscode.TerminalEditorLocationOptions | vscode.TerminalSplitLocationOptions, parentTerminal?: ExtHostTerminalIdentifier, iconPath?: TerminalIcon, color?: ThemeColor): Promise<number> {\n\t\tif (typeof this._id !== 'string') {\n\t\t\tthrow new Error('Terminal has already been created');\n\t\t}\n\t\tawait this._proxy.$createTerminal(this._id, {\n\t\t\tname: this._name,\n\t\t\tisExtensionCustomPtyTerminal: true,\n\t\t\ticon: iconPath,\n\t\t\tcolor: ThemeColor.isThemeColor(color) ? color.id : undefined,\n\t\t\tlocation: this._serializeParentTerminal(location, parentTerminal),\n\t\t\tisTransient: true\n\t\t});\n\t\t// At this point, the id has been set via `$acceptTerminalOpened`\n\t\tif (typeof this._id === 'string') {\n\t\t\tthrow new Error('Terminal creation failed');\n\t\t}\n\t\treturn this._id;\n\t}\n\n\tprivate _serializeParentTerminal(location?: TerminalLocation | vscode.TerminalEditorLocationOptions | vscode.TerminalSplitLocationOptions, parentTerminal?: ExtHostTerminalIdentifier): TerminalLocation | { viewColumn: EditorGroupColumn; preserveFocus?: boolean } | { parentTerminal: ExtHostTerminalIdentifier } | undefined {\n\t\tif (typeof location === 'object') {\n\t\t\tif ('parentTerminal' in location && location.parentTerminal && parentTerminal) {\n\t\t\t\treturn { parentTerminal };\n\t\t\t}\n\n\t\t\tif ('viewColumn' in location) {\n\t\t\t\treturn { viewColumn: ViewColumn.from(location.viewColumn), preserveFocus: location.preserveFocus };\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn location;\n\t}\n\n\tprivate _checkDisposed() {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error('Terminal has already been disposed');\n\t\t}\n\t}\n\n\tpublic set name(name: string) {\n\t\tthis._name = name;\n\t}\n\n\tpublic setExitStatus(code: number | undefined, reason: TerminalExitReason) {\n\t\tthis._exitStatus = Object.freeze({ code, reason });\n\t}\n\n\tpublic setDimensions(cols: number, rows: number): boolean {\n\t\tif (cols === this._cols && rows === this._rows) {\n\t\t\t// Nothing changed\n\t\t\treturn false;\n\t\t}\n\t\tif (cols === 0 || rows === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._cols = cols;\n\t\tthis._rows = rows;\n\t\treturn true;\n\t}\n\n\tpublic setInteractedWith(): boolean {\n\t\tif (!this._state.isInteractedWith) {\n\t\t\tthis._state = { isInteractedWith: true };\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic setSelection(selection: string | undefined): void {\n\t\tthis._selection = selection;\n\t}\n\n\tpublic _setProcessId(processId: number | undefined): void {\n\t\t// The event may fire 2 times when the panel is restored\n\t\tif (this._pidPromiseComplete) {\n\t\t\tthis._pidPromiseComplete(processId);\n\t\t\tthis._pidPromiseComplete = undefined;\n\t\t} else {\n\t\t\t// Recreate the promise if this is the nth processId set (e.g. reused task terminals)\n\t\t\tthis._pidPromise.then(pid => {\n\t\t\t\tif (pid !== processId) {\n\t\t\t\t\tthis._pidPromise = Promise.resolve(processId);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass ExtHostPseudoterminal implements ITerminalChildProcess {\n\treadonly id = 0;\n\treadonly shouldPersist = false;\n\n\tprivate readonly _onProcessData = new Emitter<string>();\n\tpublic readonly onProcessData: Event<string> = this._onProcessData.event;\n\tprivate readonly _onProcessReady = new Emitter<IProcessReadyEvent>();\n\tpublic get onProcessReady(): Event<IProcessReadyEvent> { return this._onProcessReady.event; }\n\tprivate readonly _onDidChangeProperty = new Emitter<IProcessProperty<any>>();\n\tpublic readonly onDidChangeProperty = this._onDidChangeProperty.event;\n\tprivate readonly _onProcessExit = new Emitter<number | undefined>();\n\tpublic readonly onProcessExit: Event<number | undefined> = this._onProcessExit.event;\n\n\tconstructor(private readonly _pty: vscode.Pseudoterminal) { }\n\n\trefreshProperty<T extends ProcessPropertyType>(property: ProcessPropertyType): Promise<IProcessPropertyMap[T]> {\n\t\tthrow new Error(`refreshProperty is not suppported in extension owned terminals. property: ${property}`);\n\t}\n\n\tupdateProperty<T extends ProcessPropertyType>(property: ProcessPropertyType, value: IProcessPropertyMap[T]): Promise<void> {\n\t\tthrow new Error(`updateProperty is not suppported in extension owned terminals. property: ${property}, value: ${value}`);\n\t}\n\n\tasync start(): Promise<undefined> {\n\t\treturn undefined;\n\t}\n\n\tshutdown(): void {\n\t\tthis._pty.close();\n\t}\n\n\tinput(data: string): void {\n\t\tthis._pty.handleInput?.(data);\n\t}\n\n\tresize(cols: number, rows: number): void {\n\t\tthis._pty.setDimensions?.({ columns: cols, rows });\n\t}\n\n\tclearBuffer(): void | Promise<void> {\n\t\t// no-op\n\t}\n\n\tasync processBinary(data: string): Promise<void> {\n\t\t// No-op, processBinary is not supported in extension owned terminals.\n\t}\n\n\tacknowledgeDataEvent(charCount: number): void {\n\t\t// No-op, flow control is not supported in extension owned terminals. If this is ever\n\t\t// implemented it will need new pause and resume VS Code APIs.\n\t}\n\n\tasync setUnicodeVersion(version: '6' | '11'): Promise<void> {\n\t\t// No-op, xterm-headless isn't used for extension owned terminals.\n\t}\n\n\tgetInitialCwd(): Promise<string> {\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetCwd(): Promise<string> {\n\t\treturn Promise.resolve('');\n\t}\n\n\tstartSendingEvents(initialDimensions: ITerminalDimensionsDto | undefined): void {\n\t\t// Attach the listeners\n\t\tthis._pty.onDidWrite(e => this._onProcessData.fire(e));\n\t\tthis._pty.onDidClose?.((e: number | void = undefined) => {\n\t\t\tthis._onProcessExit.fire(e === void 0 ? undefined : e);\n\t\t});\n\t\tthis._pty.onDidOverrideDimensions?.(e => {\n\t\t\tif (e) {\n\t\t\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.OverrideDimensions, value: { cols: e.columns, rows: e.rows } });\n\t\t\t}\n\t\t});\n\t\tthis._pty.onDidChangeName?.(title => {\n\t\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.Title, value: title });\n\t\t});\n\n\t\tthis._pty.open(initialDimensions ? initialDimensions : undefined);\n\n\t\tif (initialDimensions) {\n\t\t\tthis._pty.setDimensions?.(initialDimensions);\n\t\t}\n\n\t\tthis._onProcessReady.fire({ pid: -1, cwd: '', windowsPty: undefined });\n\t}\n}\n\nlet nextLinkId = 1;\n\ninterface ICachedLinkEntry {\n\tprovider: vscode.TerminalLinkProvider;\n\tlink: vscode.TerminalLink;\n}\n\nexport abstract class BaseExtHostTerminalService extends Disposable implements IExtHostTerminalService, ExtHostTerminalServiceShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprotected _proxy: MainThreadTerminalServiceShape;\n\tprotected _activeTerminal: ExtHostTerminal | undefined;\n\tprotected _terminals: ExtHostTerminal[] = [];\n\tprotected _terminalProcesses: Map<number, ITerminalChildProcess> = new Map();\n\tprotected _terminalProcessDisposables: { [id: number]: IDisposable } = {};\n\tprotected _extensionTerminalAwaitingStart: { [id: number]: { initialDimensions: ITerminalDimensionsDto | undefined } | undefined } = {};\n\tprotected _getTerminalPromises: { [id: number]: Promise<ExtHostTerminal | undefined> } = {};\n\tprotected _environmentVariableCollections: Map<string, UnifiedEnvironmentVariableCollection> = new Map();\n\tprivate _defaultProfile: ITerminalProfile | undefined;\n\tprivate _defaultAutomationProfile: ITerminalProfile | undefined;\n\tprivate _lastQuickFixCommands: MutableDisposable<IDisposable> = this._register(new MutableDisposable());\n\n\tprivate readonly _bufferer: TerminalDataBufferer;\n\tprivate readonly _linkProviders: Set<vscode.TerminalLinkProvider> = new Set();\n\tprivate readonly _profileProviders: Map<string, vscode.TerminalProfileProvider> = new Map();\n\tprivate readonly _quickFixProviders: Map<string, vscode.TerminalQuickFixProvider> = new Map();\n\tprivate readonly _terminalLinkCache: Map<number, Map<number, ICachedLinkEntry>> = new Map();\n\tprivate readonly _terminalLinkCancellationSource: Map<number, CancellationTokenSource> = new Map();\n\n\tpublic get activeTerminal(): vscode.Terminal | undefined { return this._activeTerminal?.value; }\n\tpublic get terminals(): vscode.Terminal[] { return this._terminals.map(term => term.value); }\n\n\tprotected readonly _onDidCloseTerminal = new Emitter<vscode.Terminal>();\n\treadonly onDidCloseTerminal = this._onDidCloseTerminal.event;\n\tprotected readonly _onDidOpenTerminal = new Emitter<vscode.Terminal>();\n\treadonly onDidOpenTerminal = this._onDidOpenTerminal.event;\n\tprotected readonly _onDidChangeActiveTerminal = new Emitter<vscode.Terminal | undefined>();\n\treadonly onDidChangeActiveTerminal = this._onDidChangeActiveTerminal.event;\n\tprotected readonly _onDidChangeTerminalDimensions = new Emitter<vscode.TerminalDimensionsChangeEvent>();\n\treadonly onDidChangeTerminalDimensions = this._onDidChangeTerminalDimensions.event;\n\tprotected readonly _onDidChangeTerminalState = new Emitter<vscode.Terminal>();\n\treadonly onDidChangeTerminalState = this._onDidChangeTerminalState.event;\n\tprotected readonly _onDidChangeShell = new Emitter<string>();\n\treadonly onDidChangeShell = this._onDidChangeShell.event;\n\n\tprotected readonly _onDidWriteTerminalData = new Emitter<vscode.TerminalDataWriteEvent>({\n\t\tonWillAddFirstListener: () => this._proxy.$startSendingDataEvents(),\n\t\tonDidRemoveLastListener: () => this._proxy.$stopSendingDataEvents()\n\t});\n\treadonly onDidWriteTerminalData = this._onDidWriteTerminalData.event;\n\tprotected readonly _onDidExecuteCommand = new Emitter<vscode.TerminalExecutedCommand>({\n\t\tonWillAddFirstListener: () => this._proxy.$startSendingCommandEvents(),\n\t\tonDidRemoveLastListener: () => this._proxy.$stopSendingCommandEvents()\n\t});\n\treadonly onDidExecuteTerminalCommand = this._onDidExecuteCommand.event;\n\n\tconstructor(\n\t\tsupportsProcesses: boolean,\n\t\t@IExtHostCommands private readonly _extHostCommands: IExtHostCommands,\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService\n\t) {\n\t\tsuper();\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadTerminalService);\n\t\tthis._bufferer = new TerminalDataBufferer(this._proxy.$sendProcessData);\n\t\tthis._proxy.$registerProcessSupport(supportsProcesses);\n\t\tthis._extHostCommands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tconst deserialize = (arg: any) => {\n\t\t\t\t\tconst cast = arg as ISerializedTerminalInstanceContext;\n\t\t\t\t\treturn this._getTerminalById(cast.instanceId)?.value;\n\t\t\t\t};\n\t\t\t\tswitch (arg?.$mid) {\n\t\t\t\t\tcase MarshalledId.TerminalContext: return deserialize(arg);\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\t// Do array transformation in place as this is a hot path\n\t\t\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\t\t\tfor (let i = 0; i < arg.length; i++) {\n\t\t\t\t\t\t\t\tif (arg[i].$mid === MarshalledId.TerminalContext) {\n\t\t\t\t\t\t\t\t\targ[i] = deserialize(arg[i]);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Probably something else, so exit early\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._register({\n\t\t\tdispose: () => {\n\t\t\t\tfor (const [_, terminalProcess] of this._terminalProcesses) {\n\t\t\t\t\tterminalProcess.shutdown(true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic abstract createTerminal(name?: string, shellPath?: string, shellArgs?: string[] | string): vscode.Terminal;\n\tpublic abstract createTerminalFromOptions(options: vscode.TerminalOptions, internalOptions?: ITerminalInternalOptions): vscode.Terminal;\n\n\tpublic getDefaultShell(useAutomationShell: boolean): string {\n\t\tconst profile = useAutomationShell ? this._defaultAutomationProfile : this._defaultProfile;\n\t\treturn profile?.path || '';\n\t}\n\n\tpublic getDefaultShellArgs(useAutomationShell: boolean): string[] | string {\n\t\tconst profile = useAutomationShell ? this._defaultAutomationProfile : this._defaultProfile;\n\t\treturn profile?.args || [];\n\t}\n\n\tpublic createExtensionTerminal(options: vscode.ExtensionTerminalOptions, internalOptions?: ITerminalInternalOptions): vscode.Terminal {\n\t\tconst terminal = new ExtHostTerminal(this._proxy, generateUuid(), options, options.name);\n\t\tconst p = new ExtHostPseudoterminal(options.pty);\n\t\tterminal.createExtensionTerminal(options.location, this._serializeParentTerminal(options, internalOptions).resolvedExtHostIdentifier, asTerminalIcon(options.iconPath), asTerminalColor(options.color)).then(id => {\n\t\t\tconst disposable = this._setupExtHostProcessListeners(id, p);\n\t\t\tthis._terminalProcessDisposables[id] = disposable;\n\t\t});\n\t\tthis._terminals.push(terminal);\n\t\treturn terminal.value;\n\t}\n\n\tprotected _serializeParentTerminal(options: vscode.TerminalOptions, internalOptions?: ITerminalInternalOptions): ITerminalInternalOptions {\n\t\tinternalOptions = internalOptions ? internalOptions : {};\n\t\tif (options.location && typeof options.location === 'object' && 'parentTerminal' in options.location) {\n\t\t\tconst parentTerminal = options.location.parentTerminal;\n\t\t\tif (parentTerminal) {\n\t\t\t\tconst parentExtHostTerminal = this._terminals.find(t => t.value === parentTerminal);\n\t\t\t\tif (parentExtHostTerminal) {\n\t\t\t\t\tinternalOptions.resolvedExtHostIdentifier = parentExtHostTerminal._id;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (options.location && typeof options.location !== 'object') {\n\t\t\tinternalOptions.location = options.location;\n\t\t} else if (internalOptions.location && typeof internalOptions.location === 'object' && 'splitActiveTerminal' in internalOptions.location) {\n\t\t\tinternalOptions.location = { splitActiveTerminal: true };\n\t\t}\n\t\treturn internalOptions;\n\t}\n\n\tpublic attachPtyToTerminal(id: number, pty: vscode.Pseudoterminal): void {\n\t\tconst terminal = this._getTerminalById(id);\n\t\tif (!terminal) {\n\t\t\tthrow new Error(`Cannot resolve terminal with id ${id} for virtual process`);\n\t\t}\n\t\tconst p = new ExtHostPseudoterminal(pty);\n\t\tconst disposable = this._setupExtHostProcessListeners(id, p);\n\t\tthis._terminalProcessDisposables[id] = disposable;\n\t}\n\n\tpublic async $acceptActiveTerminalChanged(id: number | null): Promise<void> {\n\t\tconst original = this._activeTerminal;\n\t\tif (id === null) {\n\t\t\tthis._activeTerminal = undefined;\n\t\t\tif (original !== this._activeTerminal) {\n\t\t\t\tthis._onDidChangeActiveTerminal.fire(this._activeTerminal);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tconst terminal = this._getTerminalById(id);\n\t\tif (terminal) {\n\t\t\tthis._activeTerminal = terminal;\n\t\t\tif (original !== this._activeTerminal) {\n\t\t\t\tthis._onDidChangeActiveTerminal.fire(this._activeTerminal.value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async $acceptTerminalProcessData(id: number, data: string): Promise<void> {\n\t\tconst terminal = this._getTerminalById(id);\n\t\tif (terminal) {\n\t\t\tthis._onDidWriteTerminalData.fire({ terminal: terminal.value, data });\n\t\t}\n\t}\n\n\tpublic async $acceptTerminalDimensions(id: number, cols: number, rows: number): Promise<void> {\n\t\tconst terminal = this._getTerminalById(id);\n\t\tif (terminal) {\n\t\t\tif (terminal.setDimensions(cols, rows)) {\n\t\t\t\tthis._onDidChangeTerminalDimensions.fire({\n\t\t\t\t\tterminal: terminal.value,\n\t\t\t\t\tdimensions: terminal.value.dimensions as vscode.TerminalDimensions\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async $acceptDidExecuteCommand(id: number, command: ITerminalCommandDto): Promise<void> {\n\t\tconst terminal = this._getTerminalById(id);\n\t\tif (terminal) {\n\t\t\tthis._onDidExecuteCommand.fire({ terminal: terminal.value, ...command });\n\t\t}\n\t}\n\n\tpublic async $acceptTerminalMaximumDimensions(id: number, cols: number, rows: number): Promise<void> {\n\t\t// Extension pty terminal only - when virtual process resize fires it means that the\n\t\t// terminal's maximum dimensions changed\n\t\tthis._terminalProcesses.get(id)?.resize(cols, rows);\n\t}\n\n\tpublic async $acceptTerminalTitleChange(id: number, name: string): Promise<void> {\n\t\tconst terminal = this._getTerminalById(id);\n\t\tif (terminal) {\n\t\t\tterminal.name = name;\n\t\t}\n\t}\n\n\tpublic async $acceptTerminalClosed(id: number, exitCode: number | undefined, exitReason: TerminalExitReason): Promise<void> {\n\t\tconst index = this._getTerminalObjectIndexById(this._terminals, id);\n\t\tif (index !== null) {\n\t\t\tconst terminal = this._terminals.splice(index, 1)[0];\n\t\t\tterminal.setExitStatus(exitCode, exitReason);\n\t\t\tthis._onDidCloseTerminal.fire(terminal.value);\n\t\t}\n\t}\n\n\tpublic $acceptTerminalOpened(id: number, extHostTerminalId: string | undefined, name: string, shellLaunchConfigDto: IShellLaunchConfigDto): void {\n\t\tif (extHostTerminalId) {\n\t\t\t// Resolve with the renderer generated id\n\t\t\tconst index = this._getTerminalObjectIndexById(this._terminals, extHostTerminalId);\n\t\t\tif (index !== null) {\n\t\t\t\t// The terminal has already been created (via createTerminal*), only fire the event\n\t\t\t\tthis._terminals[index]._id = id;\n\t\t\t\tthis._onDidOpenTerminal.fire(this.terminals[index]);\n\t\t\t\tthis._terminals[index].isOpen = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst creationOptions: vscode.TerminalOptions = {\n\t\t\tname: shellLaunchConfigDto.name,\n\t\t\tshellPath: shellLaunchConfigDto.executable,\n\t\t\tshellArgs: shellLaunchConfigDto.args,\n\t\t\tcwd: typeof shellLaunchConfigDto.cwd === 'string' ? shellLaunchConfigDto.cwd : URI.revive(shellLaunchConfigDto.cwd),\n\t\t\tenv: shellLaunchConfigDto.env,\n\t\t\thideFromUser: shellLaunchConfigDto.hideFromUser\n\t\t};\n\t\tconst terminal = new ExtHostTerminal(this._proxy, id, creationOptions, name);\n\t\tthis._terminals.push(terminal);\n\t\tthis._onDidOpenTerminal.fire(terminal.value);\n\t\tterminal.isOpen = true;\n\t}\n\n\tpublic async $acceptTerminalProcessId(id: number, processId: number): Promise<void> {\n\t\tconst terminal = this._getTerminalById(id);\n\t\tterminal?._setProcessId(processId);\n\t}\n\n\tpublic async $startExtensionTerminal(id: number, initialDimensions: ITerminalDimensionsDto | undefined): Promise<ITerminalLaunchError | undefined> {\n\t\t// Make sure the ExtHostTerminal exists so onDidOpenTerminal has fired before we call\n\t\t// Pseudoterminal.start\n\t\tconst terminal = this._getTerminalById(id);\n\t\tif (!terminal) {\n\t\t\treturn { message: localize('launchFail.idMissingOnExtHost', \"Could not find the terminal with id {0} on the extension host\", id) };\n\t\t}\n\n\t\t// Wait for onDidOpenTerminal to fire\n\t\tif (!terminal.isOpen) {\n\t\t\tawait new Promise<void>(r => {\n\t\t\t\t// Ensure open is called after onDidOpenTerminal\n\t\t\t\tconst listener = this.onDidOpenTerminal(async e => {\n\t\t\t\t\tif (e === terminal.value) {\n\t\t\t\t\t\tlistener.dispose();\n\t\t\t\t\t\tr();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tconst terminalProcess = this._terminalProcesses.get(id);\n\t\tif (terminalProcess) {\n\t\t\t(terminalProcess as ExtHostPseudoterminal).startSendingEvents(initialDimensions);\n\t\t} else {\n\t\t\t// Defer startSendingEvents call to when _setupExtHostProcessListeners is called\n\t\t\tthis._extensionTerminalAwaitingStart[id] = { initialDimensions };\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprotected _setupExtHostProcessListeners(id: number, p: ITerminalChildProcess): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(p.onProcessReady(e => this._proxy.$sendProcessReady(id, e.pid, e.cwd, e.windowsPty)));\n\t\tdisposables.add(p.onDidChangeProperty(property => this._proxy.$sendProcessProperty(id, property)));\n\n\t\t// Buffer data events to reduce the amount of messages going to the renderer\n\t\tthis._bufferer.startBuffering(id, p.onProcessData);\n\t\tdisposables.add(p.onProcessExit(exitCode => this._onProcessExit(id, exitCode)));\n\t\tthis._terminalProcesses.set(id, p);\n\n\t\tconst awaitingStart = this._extensionTerminalAwaitingStart[id];\n\t\tif (awaitingStart && p instanceof ExtHostPseudoterminal) {\n\t\t\tp.startSendingEvents(awaitingStart.initialDimensions);\n\t\t\tdelete this._extensionTerminalAwaitingStart[id];\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tpublic $acceptProcessAckDataEvent(id: number, charCount: number): void {\n\t\tthis._terminalProcesses.get(id)?.acknowledgeDataEvent(charCount);\n\t}\n\n\tpublic $acceptProcessInput(id: number, data: string): void {\n\t\tthis._terminalProcesses.get(id)?.input(data);\n\t}\n\n\tpublic $acceptTerminalInteraction(id: number): void {\n\t\tconst terminal = this._getTerminalById(id);\n\t\tif (terminal?.setInteractedWith()) {\n\t\t\tthis._onDidChangeTerminalState.fire(terminal.value);\n\t\t}\n\t}\n\n\tpublic $acceptTerminalSelection(id: number, selection: string | undefined): void {\n\t\tthis._getTerminalById(id)?.setSelection(selection);\n\t}\n\n\tpublic $acceptProcessResize(id: number, cols: number, rows: number): void {\n\t\ttry {\n\t\t\tthis._terminalProcesses.get(id)?.resize(cols, rows);\n\t\t} catch (error) {\n\t\t\t// We tried to write to a closed pipe / channel.\n\t\t\tif (error.code !== 'EPIPE' && error.code !== 'ERR_IPC_CHANNEL_CLOSED') {\n\t\t\t\tthrow (error);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic $acceptProcessShutdown(id: number, immediate: boolean): void {\n\t\tthis._terminalProcesses.get(id)?.shutdown(immediate);\n\t}\n\n\tpublic $acceptProcessRequestInitialCwd(id: number): void {\n\t\tthis._terminalProcesses.get(id)?.getInitialCwd().then(initialCwd => this._proxy.$sendProcessProperty(id, { type: ProcessPropertyType.InitialCwd, value: initialCwd }));\n\t}\n\n\tpublic $acceptProcessRequestCwd(id: number): void {\n\t\tthis._terminalProcesses.get(id)?.getCwd().then(cwd => this._proxy.$sendProcessProperty(id, { type: ProcessPropertyType.Cwd, value: cwd }));\n\t}\n\n\tpublic $acceptProcessRequestLatency(id: number): Promise<number> {\n\t\treturn Promise.resolve(id);\n\t}\n\n\tpublic registerLinkProvider(provider: vscode.TerminalLinkProvider): vscode.Disposable {\n\t\tthis._linkProviders.add(provider);\n\t\tif (this._linkProviders.size === 1) {\n\t\t\tthis._proxy.$startLinkProvider();\n\t\t}\n\t\treturn new VSCodeDisposable(() => {\n\t\t\tthis._linkProviders.delete(provider);\n\t\t\tif (this._linkProviders.size === 0) {\n\t\t\t\tthis._proxy.$stopLinkProvider();\n\t\t\t}\n\t\t});\n\t}\n\n\n\tpublic registerProfileProvider(extension: IExtensionDescription, id: string, provider: vscode.TerminalProfileProvider): vscode.Disposable {\n\t\tif (this._profileProviders.has(id)) {\n\t\t\tthrow new Error(`Terminal profile provider \"${id}\" already registered`);\n\t\t}\n\t\tthis._profileProviders.set(id, provider);\n\t\tthis._proxy.$registerProfileProvider(id, extension.identifier.value);\n\t\treturn new VSCodeDisposable(() => {\n\t\t\tthis._profileProviders.delete(id);\n\t\t\tthis._proxy.$unregisterProfileProvider(id);\n\t\t});\n\t}\n\n\tpublic registerTerminalQuickFixProvider(id: string, extensionId: string, provider: vscode.TerminalQuickFixProvider): vscode.Disposable {\n\t\tif (this._quickFixProviders.has(id)) {\n\t\t\tthrow new Error(`Terminal quick fix provider \"${id}\" is already registered`);\n\t\t}\n\t\tthis._quickFixProviders.set(id, provider);\n\t\tthis._proxy.$registerQuickFixProvider(id, extensionId);\n\t\treturn new VSCodeDisposable(() => {\n\t\t\tthis._quickFixProviders.delete(id);\n\t\t\tthis._proxy.$unregisterQuickFixProvider(id);\n\t\t});\n\t}\n\n\tpublic async $provideTerminalQuickFixes(id: string, matchResult: TerminalCommandMatchResultDto): Promise<(ITerminalQuickFixExecuteTerminalCommandDto | ITerminalQuickFixOpenerDto | ICommandDto)[] | ITerminalQuickFixExecuteTerminalCommandDto | ITerminalQuickFixOpenerDto | ICommandDto | undefined> {\n\t\tconst token = new CancellationTokenSource().token;\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\t\tconst provider = this._quickFixProviders.get(id);\n\t\tif (!provider) {\n\t\t\treturn;\n\t\t}\n\t\tconst quickFixes = await provider.provideTerminalQuickFixes(matchResult, token);\n\t\tif (quickFixes === null || (Array.isArray(quickFixes) && quickFixes.length === 0)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst store = new DisposableStore();\n\t\tthis._lastQuickFixCommands.value = store;\n\n\t\t// Single\n\t\tif (!Array.isArray(quickFixes)) {\n\t\t\treturn quickFixes ? TerminalQuickFix.from(quickFixes, this._extHostCommands.converter, store) : undefined;\n\t\t}\n\n\t\t// Many\n\t\tconst result = [];\n\t\tfor (const fix of quickFixes) {\n\t\t\tconst converted = TerminalQuickFix.from(fix, this._extHostCommands.converter, store);\n\t\t\tif (converted) {\n\t\t\t\tresult.push(converted);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic async $createContributedProfileTerminal(id: string, options: ICreateContributedTerminalProfileOptions): Promise<void> {\n\t\tconst token = new CancellationTokenSource().token;\n\t\tlet profile = await this._profileProviders.get(id)?.provideTerminalProfile(token);\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\t\tif (profile && !('options' in profile)) {\n\t\t\tprofile = { options: profile };\n\t\t}\n\n\t\tif (!profile || !('options' in profile)) {\n\t\t\tthrow new Error(`No terminal profile options provided for id \"${id}\"`);\n\t\t}\n\n\t\tif ('pty' in profile.options) {\n\t\t\tthis.createExtensionTerminal(profile.options, options);\n\t\t\treturn;\n\t\t}\n\t\tthis.createTerminalFromOptions(profile.options, options);\n\t}\n\n\tpublic async $provideLinks(terminalId: number, line: string): Promise<ITerminalLinkDto[]> {\n\t\tconst terminal = this._getTerminalById(terminalId);\n\t\tif (!terminal) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Discard any cached links the terminal has been holding, currently all links are released\n\t\t// when new links are provided.\n\t\tthis._terminalLinkCache.delete(terminalId);\n\n\t\tconst oldToken = this._terminalLinkCancellationSource.get(terminalId);\n\t\toldToken?.dispose(true);\n\t\tconst cancellationSource = new CancellationTokenSource();\n\t\tthis._terminalLinkCancellationSource.set(terminalId, cancellationSource);\n\n\t\tconst result: ITerminalLinkDto[] = [];\n\t\tconst context: vscode.TerminalLinkContext = { terminal: terminal.value, line };\n\t\tconst promises: vscode.ProviderResult<{ provider: vscode.TerminalLinkProvider; links: vscode.TerminalLink[] }>[] = [];\n\n\t\tfor (const provider of this._linkProviders) {\n\t\t\tpromises.push(Promises.withAsyncBody(async r => {\n\t\t\t\tcancellationSource.token.onCancellationRequested(() => r({ provider, links: [] }));\n\t\t\t\tconst links = (await provider.provideTerminalLinks(context, cancellationSource.token)) || [];\n\t\t\t\tif (!cancellationSource.token.isCancellationRequested) {\n\t\t\t\t\tr({ provider, links });\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tconst provideResults = await Promise.all(promises);\n\n\t\tif (cancellationSource.token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst cacheLinkMap = new Map<number, ICachedLinkEntry>();\n\t\tfor (const provideResult of provideResults) {\n\t\t\tif (provideResult && provideResult.links.length > 0) {\n\t\t\t\tresult.push(...provideResult.links.map(providerLink => {\n\t\t\t\t\tconst link = {\n\t\t\t\t\t\tid: nextLinkId++,\n\t\t\t\t\t\tstartIndex: providerLink.startIndex,\n\t\t\t\t\t\tlength: providerLink.length,\n\t\t\t\t\t\tlabel: providerLink.tooltip\n\t\t\t\t\t};\n\t\t\t\t\tcacheLinkMap.set(link.id, {\n\t\t\t\t\t\tprovider: provideResult.provider,\n\t\t\t\t\t\tlink: providerLink\n\t\t\t\t\t});\n\t\t\t\t\treturn link;\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\tthis._terminalLinkCache.set(terminalId, cacheLinkMap);\n\n\t\treturn result;\n\t}\n\n\t$activateLink(terminalId: number, linkId: number): void {\n\t\tconst cachedLink = this._terminalLinkCache.get(terminalId)?.get(linkId);\n\t\tif (!cachedLink) {\n\t\t\treturn;\n\t\t}\n\t\tcachedLink.provider.handleTerminalLink(cachedLink.link);\n\t}\n\n\tprivate _onProcessExit(id: number, exitCode: number | undefined): void {\n\t\tthis._bufferer.stopBuffering(id);\n\n\t\t// Remove process reference\n\t\tthis._terminalProcesses.delete(id);\n\t\tdelete this._extensionTerminalAwaitingStart[id];\n\n\t\t// Clean up process disposables\n\t\tconst processDiposable = this._terminalProcessDisposables[id];\n\t\tif (processDiposable) {\n\t\t\tprocessDiposable.dispose();\n\t\t\tdelete this._terminalProcessDisposables[id];\n\t\t}\n\t\t// Send exit event to main side\n\t\tthis._proxy.$sendProcessExit(id, exitCode);\n\t}\n\n\tprivate _getTerminalById(id: number): ExtHostTerminal | null {\n\t\treturn this._getTerminalObjectById(this._terminals, id);\n\t}\n\n\tprivate _getTerminalObjectById<T extends ExtHostTerminal>(array: T[], id: number): T | null {\n\t\tconst index = this._getTerminalObjectIndexById(array, id);\n\t\treturn index !== null ? array[index] : null;\n\t}\n\n\tprivate _getTerminalObjectIndexById<T extends ExtHostTerminal>(array: T[], id: ExtHostTerminalIdentifier): number | null {\n\t\tconst index = array.findIndex(item => {\n\t\t\treturn item._id === id;\n\t\t});\n\t\tif (index === -1) {\n\t\t\treturn null;\n\t\t}\n\t\treturn index;\n\t}\n\n\tpublic getEnvironmentVariableCollection(extension: IExtensionDescription): IEnvironmentVariableCollection {\n\t\tlet collection = this._environmentVariableCollections.get(extension.identifier.value);\n\t\tif (!collection) {\n\t\t\tcollection = new UnifiedEnvironmentVariableCollection();\n\t\t\tthis._setEnvironmentVariableCollection(extension.identifier.value, collection);\n\t\t}\n\t\treturn collection.getScopedEnvironmentVariableCollection(undefined);\n\t}\n\n\tprivate _syncEnvironmentVariableCollection(extensionIdentifier: string, collection: UnifiedEnvironmentVariableCollection): void {\n\t\tconst serialized = serializeEnvironmentVariableCollection(collection.map);\n\t\tconst serializedDescription = serializeEnvironmentDescriptionMap(collection.descriptionMap);\n\t\tthis._proxy.$setEnvironmentVariableCollection(extensionIdentifier, collection.persistent, serialized.length === 0 ? undefined : serialized, serializedDescription);\n\t}\n\n\tpublic $initEnvironmentVariableCollections(collections: [string, ISerializableEnvironmentVariableCollection][]): void {\n\t\tcollections.forEach(entry => {\n\t\t\tconst extensionIdentifier = entry[0];\n\t\t\tconst collection = new UnifiedEnvironmentVariableCollection(entry[1]);\n\t\t\tthis._setEnvironmentVariableCollection(extensionIdentifier, collection);\n\t\t});\n\t}\n\n\tpublic $acceptDefaultProfile(profile: ITerminalProfile, automationProfile: ITerminalProfile): void {\n\t\tconst oldProfile = this._defaultProfile;\n\t\tthis._defaultProfile = profile;\n\t\tthis._defaultAutomationProfile = automationProfile;\n\t\tif (oldProfile?.path !== profile.path) {\n\t\t\tthis._onDidChangeShell.fire(profile.path);\n\t\t}\n\t}\n\n\tprivate _setEnvironmentVariableCollection(extensionIdentifier: string, collection: UnifiedEnvironmentVariableCollection): void {\n\t\tthis._environmentVariableCollections.set(extensionIdentifier, collection);\n\t\tcollection.onDidChangeCollection(() => {\n\t\t\t// When any collection value changes send this immediately, this is done to ensure\n\t\t\t// following calls to createTerminal will be created with the new environment. It will\n\t\t\t// result in more noise by sending multiple updates when called but collections are\n\t\t\t// expected to be small.\n\t\t\tthis._syncEnvironmentVariableCollection(extensionIdentifier, collection!);\n\t\t});\n\t}\n}\n\n/**\n * Unified environment variable collection carrying information for all scopes, for a specific extension.\n */\nclass UnifiedEnvironmentVariableCollection {\n\treadonly map: Map<string, IEnvironmentVariableMutator> = new Map();\n\tprivate readonly scopedCollections: Map<string, ScopedEnvironmentVariableCollection> = new Map();\n\treadonly descriptionMap: Map<string, IEnvironmentVariableCollectionDescription> = new Map();\n\tprivate _persistent: boolean = true;\n\n\tpublic get persistent(): boolean { return this._persistent; }\n\tpublic set persistent(value: boolean) {\n\t\tthis._persistent = value;\n\t\tthis._onDidChangeCollection.fire();\n\t}\n\n\tprotected readonly _onDidChangeCollection: Emitter<void> = new Emitter<void>();\n\tget onDidChangeCollection(): Event<void> { return this._onDidChangeCollection && this._onDidChangeCollection.event; }\n\n\tconstructor(\n\t\tserialized?: ISerializableEnvironmentVariableCollection\n\t) {\n\t\tthis.map = new Map(serialized);\n\t}\n\n\tgetScopedEnvironmentVariableCollection(scope: vscode.EnvironmentVariableScope | undefined): IEnvironmentVariableCollection {\n\t\tconst scopedCollectionKey = this.getScopeKey(scope);\n\t\tlet scopedCollection = this.scopedCollections.get(scopedCollectionKey);\n\t\tif (!scopedCollection) {\n\t\t\tscopedCollection = new ScopedEnvironmentVariableCollection(this, scope);\n\t\t\tthis.scopedCollections.set(scopedCollectionKey, scopedCollection);\n\t\t\tscopedCollection.onDidChangeCollection(() => this._onDidChangeCollection.fire());\n\t\t}\n\t\treturn scopedCollection;\n\t}\n\n\treplace(variable: string, value: string, options: vscode.EnvironmentVariableMutatorOptions | undefined, scope: vscode.EnvironmentVariableScope | undefined): void {\n\t\tthis._setIfDiffers(variable, { value, type: EnvironmentVariableMutatorType.Replace, options: options ?? { applyAtProcessCreation: true }, scope });\n\t}\n\n\tappend(variable: string, value: string, options: vscode.EnvironmentVariableMutatorOptions | undefined, scope: vscode.EnvironmentVariableScope | undefined): void {\n\t\tthis._setIfDiffers(variable, { value, type: EnvironmentVariableMutatorType.Append, options: options ?? { applyAtProcessCreation: true }, scope });\n\t}\n\n\tprepend(variable: string, value: string, options: vscode.EnvironmentVariableMutatorOptions | undefined, scope: vscode.EnvironmentVariableScope | undefined): void {\n\t\tthis._setIfDiffers(variable, { value, type: EnvironmentVariableMutatorType.Prepend, options: options ?? { applyAtProcessCreation: true }, scope });\n\t}\n\n\tprivate _setIfDiffers(variable: string, mutator: vscode.EnvironmentVariableMutator & { scope: vscode.EnvironmentVariableScope | undefined }): void {\n\t\tif (mutator.options && mutator.options.applyAtProcessCreation === false && !mutator.options.applyAtShellIntegration) {\n\t\t\tthrow new Error('EnvironmentVariableMutatorOptions must apply at either process creation or shell integration');\n\t\t}\n\t\tconst key = this.getKey(variable, mutator.scope);\n\t\tconst current = this.map.get(key);\n\t\tconst newOptions = mutator.options ? {\n\t\t\tapplyAtProcessCreation: mutator.options.applyAtProcessCreation ?? false,\n\t\t\tapplyAtShellIntegration: mutator.options.applyAtShellIntegration ?? false,\n\t\t} : {\n\t\t\tapplyAtProcessCreation: true\n\t\t};\n\t\tif (\n\t\t\t!current ||\n\t\t\tcurrent.value !== mutator.value ||\n\t\t\tcurrent.type !== mutator.type ||\n\t\t\tcurrent.options?.applyAtProcessCreation !== newOptions.applyAtProcessCreation ||\n\t\t\tcurrent.options?.applyAtShellIntegration !== newOptions.applyAtShellIntegration ||\n\t\t\tcurrent.scope?.workspaceFolder?.index !== mutator.scope?.workspaceFolder?.index\n\t\t) {\n\t\t\tconst key = this.getKey(variable, mutator.scope);\n\t\t\tconst value: IEnvironmentVariableMutator = {\n\t\t\t\tvariable,\n\t\t\t\t...mutator,\n\t\t\t\toptions: newOptions\n\t\t\t};\n\t\t\tthis.map.set(key, value);\n\t\t\tthis._onDidChangeCollection.fire();\n\t\t}\n\t}\n\n\tget(variable: string, scope: vscode.EnvironmentVariableScope | undefined): vscode.EnvironmentVariableMutator | undefined {\n\t\tconst key = this.getKey(variable, scope);\n\t\tconst value = this.map.get(key);\n\t\t// TODO: Set options to defaults if needed\n\t\treturn value ? convertMutator(value) : undefined;\n\t}\n\n\tprivate getKey(variable: string, scope: vscode.EnvironmentVariableScope | undefined) {\n\t\tconst scopeKey = this.getScopeKey(scope);\n\t\treturn scopeKey.length ? `${variable}:::${scopeKey}` : variable;\n\t}\n\n\tprivate getScopeKey(scope: vscode.EnvironmentVariableScope | undefined): string {\n\t\treturn this.getWorkspaceKey(scope?.workspaceFolder) ?? '';\n\t}\n\n\tprivate getWorkspaceKey(workspaceFolder: vscode.WorkspaceFolder | undefined): string | undefined {\n\t\treturn workspaceFolder ? workspaceFolder.uri.toString() : undefined;\n\t}\n\n\tpublic getVariableMap(scope: vscode.EnvironmentVariableScope | undefined): Map<string, vscode.EnvironmentVariableMutator> {\n\t\tconst map = new Map<string, vscode.EnvironmentVariableMutator>();\n\t\tfor (const [_, value] of this.map) {\n\t\t\tif (this.getScopeKey(value.scope) === this.getScopeKey(scope)) {\n\t\t\t\tmap.set(value.variable, convertMutator(value));\n\t\t\t}\n\t\t}\n\t\treturn map;\n\t}\n\n\tdelete(variable: string, scope: vscode.EnvironmentVariableScope | undefined): void {\n\t\tconst key = this.getKey(variable, scope);\n\t\tthis.map.delete(key);\n\t\tthis._onDidChangeCollection.fire();\n\t}\n\n\tclear(scope: vscode.EnvironmentVariableScope | undefined): void {\n\t\tif (scope?.workspaceFolder) {\n\t\t\tfor (const [key, mutator] of this.map) {\n\t\t\t\tif (mutator.scope?.workspaceFolder?.index === scope.workspaceFolder.index) {\n\t\t\t\t\tthis.map.delete(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.clearDescription(scope);\n\t\t} else {\n\t\t\tthis.map.clear();\n\t\t\tthis.descriptionMap.clear();\n\t\t}\n\t\tthis._onDidChangeCollection.fire();\n\t}\n\n\tsetDescription(description: string | vscode.MarkdownString | undefined, scope: vscode.EnvironmentVariableScope | undefined): void {\n\t\tconst key = this.getScopeKey(scope);\n\t\tconst current = this.descriptionMap.get(key);\n\t\tif (!current || current.description !== description) {\n\t\t\tlet descriptionStr: string | undefined;\n\t\t\tif (typeof description === 'string') {\n\t\t\t\tdescriptionStr = description;\n\t\t\t} else {\n\t\t\t\t// Only take the description before the first `\\n\\n`, so that the description doesn't mess up the UI\n\t\t\t\tdescriptionStr = description?.value.split('\\n\\n')[0];\n\t\t\t}\n\t\t\tconst value: IEnvironmentVariableCollectionDescription = { description: descriptionStr, scope };\n\t\t\tthis.descriptionMap.set(key, value);\n\t\t\tthis._onDidChangeCollection.fire();\n\t\t}\n\t}\n\n\tpublic getDescription(scope: vscode.EnvironmentVariableScope | undefined): string | vscode.MarkdownString | undefined {\n\t\tconst key = this.getScopeKey(scope);\n\t\treturn this.descriptionMap.get(key)?.description;\n\t}\n\n\tprivate clearDescription(scope: vscode.EnvironmentVariableScope | undefined): void {\n\t\tconst key = this.getScopeKey(scope);\n\t\tthis.descriptionMap.delete(key);\n\t}\n}\n\nclass ScopedEnvironmentVariableCollection implements IEnvironmentVariableCollection {\n\tpublic get persistent(): boolean { return this.collection.persistent; }\n\tpublic set persistent(value: boolean) {\n\t\tthis.collection.persistent = value;\n\t}\n\n\tprotected readonly _onDidChangeCollection = new Emitter<void>();\n\tget onDidChangeCollection(): Event<void> { return this._onDidChangeCollection && this._onDidChangeCollection.event; }\n\n\tconstructor(\n\t\tprivate readonly collection: UnifiedEnvironmentVariableCollection,\n\t\tprivate readonly scope: vscode.EnvironmentVariableScope | undefined\n\t) {\n\t}\n\n\tgetScoped(scope: vscode.EnvironmentVariableScope | undefined) {\n\t\treturn this.collection.getScopedEnvironmentVariableCollection(scope);\n\t}\n\n\treplace(variable: string, value: string, options?: vscode.EnvironmentVariableMutatorOptions | undefined): void {\n\t\tthis.collection.replace(variable, value, options, this.scope);\n\t}\n\n\tappend(variable: string, value: string, options?: vscode.EnvironmentVariableMutatorOptions | undefined): void {\n\t\tthis.collection.append(variable, value, options, this.scope);\n\t}\n\n\tprepend(variable: string, value: string, options?: vscode.EnvironmentVariableMutatorOptions | undefined): void {\n\t\tthis.collection.prepend(variable, value, options, this.scope);\n\t}\n\n\tget(variable: string): vscode.EnvironmentVariableMutator | undefined {\n\t\treturn this.collection.get(variable, this.scope);\n\t}\n\n\tforEach(callback: (variable: string, mutator: vscode.EnvironmentVariableMutator, collection: vscode.EnvironmentVariableCollection) => any, thisArg?: any): void {\n\t\tthis.collection.getVariableMap(this.scope).forEach((value, variable) => callback.call(thisArg, variable, value, this), this.scope);\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[variable: string, mutator: vscode.EnvironmentVariableMutator]> {\n\t\treturn this.collection.getVariableMap(this.scope).entries();\n\t}\n\n\tdelete(variable: string): void {\n\t\tthis.collection.delete(variable, this.scope);\n\t\tthis._onDidChangeCollection.fire(undefined);\n\t}\n\n\tclear(): void {\n\t\tthis.collection.clear(this.scope);\n\t}\n\n\tset description(description: string | vscode.MarkdownString | undefined) {\n\t\tthis.collection.setDescription(description, this.scope);\n\t}\n\n\tget description(): string | vscode.MarkdownString | undefined {\n\t\treturn this.collection.getDescription(this.scope);\n\t}\n}\n\nexport class WorkerExtHostTerminalService extends BaseExtHostTerminalService {\n\tconstructor(\n\t\t@IExtHostCommands extHostCommands: IExtHostCommands,\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService\n\t) {\n\t\tsuper(false, extHostCommands, extHostRpc);\n\t}\n\n\tpublic createTerminal(name?: string, shellPath?: string, shellArgs?: string[] | string): vscode.Terminal {\n\t\tthrow new NotSupportedError();\n\t}\n\n\tpublic createTerminalFromOptions(options: vscode.TerminalOptions, internalOptions?: ITerminalInternalOptions): vscode.Terminal {\n\t\tthrow new NotSupportedError();\n\t}\n}\n\nfunction asTerminalIcon(iconPath?: vscode.Uri | { light: vscode.Uri; dark: vscode.Uri } | vscode.ThemeIcon): TerminalIcon | undefined {\n\tif (!iconPath || typeof iconPath === 'string') {\n\t\treturn undefined;\n\t}\n\n\tif (!('id' in iconPath)) {\n\t\treturn iconPath;\n\t}\n\n\treturn {\n\t\tid: iconPath.id,\n\t\tcolor: iconPath.color as ThemeColor\n\t};\n}\n\nfunction asTerminalColor(color?: vscode.ThemeColor): ThemeColor | undefined {\n\treturn ThemeColor.isThemeColor(color) ? color as ThemeColor : undefined;\n}\n\nfunction convertMutator(mutator: IEnvironmentVariableMutator): vscode.EnvironmentVariableMutator {\n\tconst newMutator = { ...mutator };\n\tdelete newMutator.scope;\n\tnewMutator.options = newMutator.options ?? undefined;\n\tdelete (newMutator as any).variable;\n\treturn newMutator as vscode.EnvironmentVariableMutator;\n}\n"]}