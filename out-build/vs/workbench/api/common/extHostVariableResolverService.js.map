{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostVariableResolverService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAuBnF,QAAA,IAAI,GAA+B,IAAA,mBAAG,EAA+C,kCAAkC,CAAC,CAAC;IAMtI,MAAM,8BAA+B,SAAQ,sBAAG;QAE/C,YACC,gBAAsB,EACtB,gBAAsB,EACtB,aAAkB,EAClB,UAAgB,EAChB,cAAoB,EACpB,OAAuB,EACvB,OAA2B;YAE3B,SAAS,YAAY;gBACpB,IAAI,aAAa,EAAE;oBAClB,MAAM,YAAY,GAAG,aAAa,CAAC,YAAY,EAAE,CAAC;oBAClD,IAAI,YAAY,EAAE;wBACjB,OAAO,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC;qBACjC;oBACD,MAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC;oBACpF,IAAI,SAAS,KAAK,SAAS,EAAE;wBAC5B,kCAAkC;wBAClC,IAAI,SAAS,CAAC,KAAK,YAAY,kBAAG,IAAiB,SAAS,CAAC,KAAK,YAAY,kBAAG,EAAyB;4BACzG,OAAO,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC;yBAChC;6BAAM,IAAI,SAAS,CAAC,KAAK,YAAY,kBAAG,IAAa,SAAS,CAAC,KAAK,YAAY,kBAAG,IAAuB,SAAS,CAAC,KAAK,YAAY,kBAAG,EAAmB;4BAC3J,OAAO,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;yBAC3B;qBACD;iBACD;gBACD,OAAO,SAAS,CAAC;YAClB,CAAC;YAED,KAAK,CAAC;gBACL,YAAY,EAAE,CAAC,UAAkB,EAAmB,EAAE;oBACrD,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;oBACjE,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC9B,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;qBACpB;oBACD,OAAO,SAAS,CAAC;gBAClB,CAAC;gBACD,uBAAuB,EAAE,GAAW,EAAE;oBACrC,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC/B,CAAC;gBACD,qBAAqB,EAAE,CAAC,SAA0B,EAAE,OAAe,EAAsB,EAAE;oBAC1F,OAAO,cAAc,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,GAAG,CAAS,OAAO,CAAC,CAAC;gBACnF,CAAC;gBACD,UAAU,EAAE,GAAuB,EAAE;oBACpC,OAAO,OAAO,CAAC,GAAG,EAAE,CAAC;gBACtB,CAAC;gBACD,WAAW,EAAE,GAAuB,EAAE;oBACrC,OAAO,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBACxC,CAAC;gBACD,WAAW,EAAE,GAAuB,EAAE;oBACrC,MAAM,SAAS,GAAG,YAAY,EAAE,CAAC;oBACjC,IAAI,SAAS,EAAE;wBACd,OAAO,IAAI,CAAC,GAAG,CAAO,SAAS,CAAC,MAAM,CAAC,CAAC;qBACxC;oBACD,OAAO,SAAS,CAAC;gBAClB,CAAC;gBACD,6BAA6B,EAAE,GAAuB,EAAE;oBACvD,IAAI,gBAAgB,EAAE;wBACrB,MAAM,SAAS,GAAG,YAAY,EAAE,CAAC;wBACjC,IAAI,SAAS,EAAE;4BACd,MAAM,EAAE,GAAG,gBAAgB,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;4BAC1D,IAAI,EAAE,EAAE;gCACP,OAAO,IAAI,CAAC,GAAG,CAAO,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;6BACrC;yBACD;qBACD;oBACD,OAAO,SAAS,CAAC;gBAClB,CAAC;gBACD,eAAe,EAAE,GAAuB,EAAE;oBACzC,IAAI,aAAa,EAAE;wBAClB,MAAM,YAAY,GAAG,aAAa,CAAC,YAAY,EAAE,CAAC;wBAClD,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE;4BACpD,OAAO,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;yBAC7D;qBACD;oBACD,OAAO,SAAS,CAAC;gBAClB,CAAC;gBACD,aAAa,EAAE,GAAuB,EAAE;oBACvC,IAAI,aAAa,EAAE;wBAClB,MAAM,YAAY,GAAG,aAAa,CAAC,YAAY,EAAE,CAAC;wBAClD,IAAI,YAAY,EAAE;4BACjB,OAAO,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;yBACnD;qBACD;oBACD,OAAO,SAAS,CAAC;gBAClB,CAAC;gBACD,YAAY,EAAE,CAAC,EAAE,EAAE,EAAE;oBACpB,OAAO,gBAAgB,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;gBAC1C,CAAC;aACD,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7F,CAAC;KACD;IAEM,IAAM,IAAI,GAAV,MAAM,IAAuC,SAAQ,eAAG;QAuB9D,YAC2B,CAAuC,EAC9C,CAAuC,EAC7B,CAAmC,EACzC,CAA2C,EAC9C,CAAiC;YAErD,KAAK,EAAE,CAAC;YANmC,MAAC,GAAD,CAAC,CAAqB;YAC7B,MAAC,GAAD,CAAC,CAAqB;YACZ,MAAC,GAAD,CAAC,CAAiB;YACxB,MAAC,GAAD,CAAC,CAAyB;YAC7B,MAAC,GAAD,CAAC,CAAe;YAzB9C,MAAC,GAAW,IAAI,SAAE,CAAG,KAAK,IAAI,EAAE;gBACvC,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,CAAC,CAAoB,iBAAiB,EAAE,CAAC;gBAC3E,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,CAAC,CAAgB,oBAAoB,EAAE,IAAI,EAAE,CAAC;gBAEzE,MAAM,OAAO,GAAmB,EAAE,OAAO,EAAE,CAAC;gBAC5C,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAgB,oBAAoB,CAAC,KAAK,EAAC,CAAC,EAAC,EAAE;oBACnE,OAAO,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,CAAC,CAAgB,oBAAoB,EAAE,IAAI,EAAE,CAAC;gBAC5E,CAAC,CAAC,CAAC,CAAC;gBAEJ,OAAO,IAAI,8BAA8B,CACxC,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,cAAc,EACd,OAAO,EACP,IAAI,CAAC,CAAC,EAAQ,CACd,CAAC;YACH,CAAC,CAAC,CAAC;QAUH,CAAC;QAEM,WAAW;YACjB,OAAO,IAAI,CAAC,CAAC,CAAS,KAAK,CAAC;QAC7B,CAAC;QAES,CAAC;YACV,OAAO,SAAS,CAAC;QAClB,CAAC;KACD,CAAA;IAxCY,oBAAI;mBAAJ,IAAI;QAwBd,WAAA,8BAAI,CAAA;QACJ,WAAA,uBAAI,CAAA;QACJ,WAAA,gCAAG,CAAA;QACH,WAAA,2BAAI,CAAA;QACJ,WAAA,wBAAI,CAAA;OA5BM,IAAI,CAwChB","file":"extHostVariableResolverService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Lazy } from 'vs/base/common/lazy';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as path from 'vs/base/common/path';\nimport * as process from 'vs/base/common/process';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { IExtHostEditorTabs } from 'vs/workbench/api/common/extHostEditorTabs';\nimport { IExtHostExtensionService } from 'vs/workbench/api/common/extHostExtensionService';\nimport { CustomEditorTabInput, NotebookDiffEditorTabInput, NotebookEditorTabInput, TextDiffTabInput, TextTabInput } from 'vs/workbench/api/common/extHostTypes';\nimport { IExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { AbstractVariableResolverService } from 'vs/workbench/services/configurationResolver/common/variableResolver';\nimport * as vscode from 'vscode';\nimport { ExtHostConfigProvider, IExtHostConfiguration } from './extHostConfiguration';\n\nexport interface IExtHostVariableResolverProvider {\n\treadonly _serviceBrand: undefined;\n\tgetResolver(): Promise<IConfigurationResolverService>;\n}\n\nexport const IExtHostVariableResolverProvider = createDecorator<IExtHostVariableResolverProvider>('IExtHostVariableResolverProvider');\n\ninterface DynamicContext {\n\tfolders: vscode.WorkspaceFolder[];\n}\n\nclass ExtHostVariableResolverService extends AbstractVariableResolverService {\n\n\tconstructor(\n\t\textensionService: IExtHostExtensionService,\n\t\tworkspaceService: IExtHostWorkspace,\n\t\teditorService: IExtHostDocumentsAndEditors,\n\t\teditorTabs: IExtHostEditorTabs,\n\t\tconfigProvider: ExtHostConfigProvider,\n\t\tcontext: DynamicContext,\n\t\thomeDir: string | undefined,\n\t) {\n\t\tfunction getActiveUri(): URI | undefined {\n\t\t\tif (editorService) {\n\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\tif (activeEditor) {\n\t\t\t\t\treturn activeEditor.document.uri;\n\t\t\t\t}\n\t\t\t\tconst activeTab = editorTabs.tabGroups.all.find(group => group.isActive)?.activeTab;\n\t\t\t\tif (activeTab !== undefined) {\n\t\t\t\t\t// Resolve a resource from the tab\n\t\t\t\t\tif (activeTab.input instanceof TextDiffTabInput || activeTab.input instanceof NotebookDiffEditorTabInput) {\n\t\t\t\t\t\treturn activeTab.input.modified;\n\t\t\t\t\t} else if (activeTab.input instanceof TextTabInput || activeTab.input instanceof NotebookEditorTabInput || activeTab.input instanceof CustomEditorTabInput) {\n\t\t\t\t\t\treturn activeTab.input.uri;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\tsuper({\n\t\t\tgetFolderUri: (folderName: string): URI | undefined => {\n\t\t\t\tconst found = context.folders.filter(f => f.name === folderName);\n\t\t\t\tif (found && found.length > 0) {\n\t\t\t\t\treturn found[0].uri;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\treturn context.folders.length;\n\t\t\t},\n\t\t\tgetConfigurationValue: (folderUri: URI | undefined, section: string): string | undefined => {\n\t\t\t\treturn configProvider.getConfiguration(undefined, folderUri).get<string>(section);\n\t\t\t},\n\t\t\tgetAppRoot: (): string | undefined => {\n\t\t\t\treturn process.cwd();\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\treturn process.env['VSCODE_EXEC_PATH'];\n\t\t\t},\n\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\tconst activeUri = getActiveUri();\n\t\t\t\tif (activeUri) {\n\t\t\t\t\treturn path.normalize(activeUri.fsPath);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetWorkspaceFolderPathForFile: (): string | undefined => {\n\t\t\t\tif (workspaceService) {\n\t\t\t\t\tconst activeUri = getActiveUri();\n\t\t\t\t\tif (activeUri) {\n\t\t\t\t\t\tconst ws = workspaceService.getWorkspaceFolder(activeUri);\n\t\t\t\t\t\tif (ws) {\n\t\t\t\t\t\t\treturn path.normalize(ws.uri.fsPath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\tif (editorService) {\n\t\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\t\tif (activeEditor && !activeEditor.selection.isEmpty) {\n\t\t\t\t\t\treturn activeEditor.document.getText(activeEditor.selection);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetLineNumber: (): string | undefined => {\n\t\t\t\tif (editorService) {\n\t\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\t\tif (activeEditor) {\n\t\t\t\t\t\treturn String(activeEditor.selection.end.line + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetExtension: (id) => {\n\t\t\t\treturn extensionService.getExtension(id);\n\t\t\t},\n\t\t}, undefined, homeDir ? Promise.resolve(homeDir) : undefined, Promise.resolve(process.env));\n\t}\n}\n\nexport class ExtHostVariableResolverProviderService extends Disposable implements IExtHostVariableResolverProvider {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _resolver = new Lazy(async () => {\n\t\tconst configProvider = await this.configurationService.getConfigProvider();\n\t\tconst folders = await this.workspaceService.getWorkspaceFolders2() || [];\n\n\t\tconst dynamic: DynamicContext = { folders };\n\t\tthis._register(this.workspaceService.onDidChangeWorkspace(async e => {\n\t\t\tdynamic.folders = await this.workspaceService.getWorkspaceFolders2() || [];\n\t\t}));\n\n\t\treturn new ExtHostVariableResolverService(\n\t\t\tthis.extensionService,\n\t\t\tthis.workspaceService,\n\t\t\tthis.editorService,\n\t\t\tthis.editorTabs,\n\t\t\tconfigProvider,\n\t\t\tdynamic,\n\t\t\tthis.homeDir(),\n\t\t);\n\t});\n\n\tconstructor(\n\t\t@IExtHostExtensionService private readonly extensionService: IExtHostExtensionService,\n\t\t@IExtHostWorkspace private readonly workspaceService: IExtHostWorkspace,\n\t\t@IExtHostDocumentsAndEditors private readonly editorService: IExtHostDocumentsAndEditors,\n\t\t@IExtHostConfiguration private readonly configurationService: IExtHostConfiguration,\n\t\t@IExtHostEditorTabs private readonly editorTabs: IExtHostEditorTabs,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic getResolver(): Promise<IConfigurationResolverService> {\n\t\treturn this._resolver.value;\n\t}\n\n\tprotected homeDir(): string | undefined {\n\t\treturn undefined;\n\t}\n}\n"]}