{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostDocumentsAndEditors.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAmBhG,MAAM,SAAS;QAEd,YAAqB,KAAQ;YAAR,UAAK,GAAL,KAAK,CAAG;YADrB,MAAC,GAAQ,CAAC,CAAC;QACc,CAAC;QAClC,GAAG;YACF,IAAI,CAAC,CAAC,EAAO,CAAC;QACf,CAAC;QACD,KAAK;YACJ,OAAO,EAAE,IAAI,CAAC,CAAC,KAAU,CAAC,CAAC;QAC5B,CAAC;KACD;IAUM,IAAM,GAAG,GAAT,MAAM,GAAG;QAmBf,YACqB,CAAiC,EACxC,CAAiC;YADT,MAAC,GAAD,CAAC,CAAe;YACvB,MAAC,GAAD,CAAC,CAAe;YAjBvC,MAAC,GAAgC,IAAI,CAAC;YAE7B,MAAC,GAAU,IAAI,GAAG,EAA6B,CAAC;YAChD,MAAC,GAAY,IAAI,SAAG,EAA0C,CAAC;YAE/D,MAAC,GAAoB,IAAI,WAAG,EAAsC,CAAC;YACnE,MAAC,GAAuB,IAAI,WAAG,EAAsC,CAAC;YACtE,MAAC,GAAgC,IAAI,WAAG,EAAoC,CAAC;YAC7E,MAAC,GAA8B,IAAI,WAAG,EAAqC,CAAC;YAEpF,sBAAiB,GAA0C,IAAI,CAAC,CAAC,CAAkB,KAAK,CAAC;YACzF,yBAAoB,GAA0C,IAAI,CAAC,CAAC,CAAqB,KAAK,CAAC;YAC/F,kCAA6B,GAAwC,IAAI,CAAC,CAAC,CAA8B,KAAK,CAAC;YAC/G,gCAA2B,GAAyC,IAAI,CAAC,CAAC,CAA4B,KAAK,CAAC;QAKjH,CAAC;QAEL,+BAA+B,CAAC,KAAgC;YAC/D,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC;QAED,8BAA8B,CAAC,KAAuC;YAErE,MAAM,gBAAgB,GAA0B,EAAE,CAAC;YACnD,MAAM,cAAc,GAA0B,EAAE,CAAC;YACjD,MAAM,cAAc,GAAwB,EAAE,CAAC;YAE/C,IAAI,KAAK,CAAC,gBAAgB,EAAE;gBAC3B,KAAK,MAAM,YAAY,IAAI,KAAK,CAAC,gBAAgB,EAAE;oBAClD,MAAM,GAAG,GAAG,SAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oBACrC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,GAAG,CAAC,CAAC;oBACtC,IAAI,IAAI,EAAE,KAAK,EAAE,EAAE;wBAClB,IAAI,CAAC,CAAC,CAAU,MAAM,CAAC,GAAG,CAAC,CAAC;wBAC5B,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAClC;iBACD;aACD;YAED,IAAI,KAAK,CAAC,cAAc,EAAE;gBACzB,KAAK,MAAM,IAAI,IAAI,KAAK,CAAC,cAAc,EAAE;oBACxC,MAAM,QAAQ,GAAG,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACtC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAExC,yDAAyD;oBACzD,sCAAsC;oBACtC,IAAI,GAAG,EAAE;wBACR,IAAI,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,kBAAkB,IAAI,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,sBAAsB,EAAE;4BACzG,MAAM,IAAI,KAAK,CAAC,aAAa,QAAQ,mBAAmB,CAAC,CAAC;yBAC1D;qBACD;oBACD,IAAI,CAAC,GAAG,EAAE;wBACT,GAAG,GAAG,IAAI,SAAS,CAAC,IAAI,yBAAG,CAC1B,IAAI,CAAC,CAAC,CAAW,QAAQ,CAAC,sBAAG,CAAS,mBAAmB,CAAC,EAC1D,QAAQ,EACR,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,QAAQ,CACb,CAAC,CAAC;wBACH,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;wBACnC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBAC/B;oBAED,GAAG,CAAC,GAAG,EAAE,CAAC;iBACV;aACD;YAED,IAAI,KAAK,CAAC,cAAc,EAAE;gBACzB,KAAK,MAAM,EAAE,IAAI,KAAK,CAAC,cAAc,EAAE;oBACtC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;oBACrC,IAAI,CAAC,CAAC,CAAQ,MAAM,CAAC,EAAE,CAAC,CAAC;oBACzB,IAAI,MAAM,EAAE;wBACX,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBAC5B;iBACD;aACD;YAED,IAAI,KAAK,CAAC,YAAY,EAAE;gBACvB,KAAK,MAAM,IAAI,IAAI,KAAK,CAAC,YAAY,EAAE;oBACtC,MAAM,QAAQ,GAAG,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC9C,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,QAAQ,CAAC,EAAE,aAAa,QAAQ,kBAAkB,CAAC,CAAC;oBAClF,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,WAAW,IAAI,CAAC,EAAE,mBAAmB,CAAC,CAAC;oBAE9E,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,QAAQ,CAAE,CAAC,KAAK,CAAC;oBAC1D,MAAM,MAAM,GAAG,IAAI,uBAAG,CACrB,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,CAAC,CAAW,QAAQ,CAAC,sBAAG,CAAS,qBAAqB,CAAC,EAC5D,IAAI,CAAC,CAAC,EACN,IAAI,SAAE,CAAG,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,EACrC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC,EAChD,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAC/D,OAAO,IAAI,CAAC,cAAc,KAAK,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,CACvG,CAAC;oBACF,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;iBACnC;aACD;YAED,IAAI,KAAK,CAAC,eAAe,KAAK,SAAS,EAAE;gBACxC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE,kBAAkB,KAAK,CAAC,eAAe,kBAAkB,CAAC,CAAC;gBACjJ,IAAI,CAAC,CAAC,GAAiB,KAAK,CAAC,eAAe,CAAC;aAC7C;YAED,IAAA,eAAG,EAAK,gBAAgB,CAAC,CAAC;YAC1B,IAAA,eAAG,EAAK,cAAc,CAAC,CAAC;YAExB,uDAAuD;YACvD,IAAI,KAAK,CAAC,gBAAgB,EAAE;gBAC3B,IAAI,CAAC,CAAC,CAAqB,IAAI,CAAC,gBAAgB,CAAC,CAAC;aAClD;YACD,IAAI,KAAK,CAAC,cAAc,EAAE;gBACzB,IAAI,CAAC,CAAC,CAAkB,IAAI,CAAC,cAAc,CAAC,CAAC;aAC7C;YAED,IAAI,KAAK,CAAC,cAAc,IAAI,KAAK,CAAC,YAAY,EAAE;gBAC/C,IAAI,CAAC,CAAC,CAA8B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;aACxF;YACD,IAAI,KAAK,CAAC,eAAe,KAAK,SAAS,EAAE;gBACxC,IAAI,CAAC,CAAC,CAA4B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;aAC5D;QACF,CAAC;QAED,WAAW,CAAC,GAAQ;YACnB,OAAO,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC;QACxC,CAAC;QAED,YAAY;YACX,OAAO,mBAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAU,MAAM,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjE,CAAC;QAED,SAAS,CAAC,EAAU;YACnB,OAAO,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;QAC9B,CAAC;QAID,YAAY,CAAC,QAAe;YAC3B,IAAI,CAAC,IAAI,CAAC,CAAC,EAAgB;gBAC1B,OAAO,SAAS,CAAC;aACjB;YACD,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAe,CAAC;YACvD,IAAI,QAAQ,EAAE;gBACb,OAAO,MAAM,CAAC;aACd;iBAAM;gBACN,OAAO,MAAM,EAAE,KAAK,CAAC;aACrB;QACF,CAAC;QAED,UAAU;YACT,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAQ,MAAM,EAAE,CAAC,CAAC;QACpC,CAAC;KACD,CAAA;IAhKY,kBAAG;kBAAH,GAAG;QAoBb,WAAA,uBAAG,CAAA;QACH,WAAA,SAAG,CAAA;OArBO,GAAG,CAgKf;IAGY,QAAA,GAAG,GAA2B,IAAA,mBAAG,EAA0C,6BAA6B,CAAC,CAAC","file":"extHostDocumentsAndEditors.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'vs/base/common/assert';\nimport * as vscode from 'vscode';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtHostDocumentsAndEditorsShape, IDocumentsAndEditorsDelta, IModelAddedData, MainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostDocumentData } from 'vs/workbench/api/common/extHostDocumentData';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { ExtHostTextEditor } from 'vs/workbench/api/common/extHostTextEditor';\nimport * as typeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { Schemas } from 'vs/base/common/network';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Lazy } from 'vs/base/common/lazy';\n\nclass Reference<T> {\n\tprivate _count = 0;\n\tconstructor(readonly value: T) { }\n\tref() {\n\t\tthis._count++;\n\t}\n\tunref() {\n\t\treturn --this._count === 0;\n\t}\n}\n\nexport interface IExtHostModelAddedData extends IModelAddedData {\n\tnotebook?: vscode.NotebookDocument;\n}\n\nexport interface IExtHostDocumentsAndEditorsDelta extends IDocumentsAndEditorsDelta {\n\taddedDocuments?: IExtHostModelAddedData[];\n}\n\nexport class ExtHostDocumentsAndEditors implements ExtHostDocumentsAndEditorsShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate _activeEditorId: string | null = null;\n\n\tprivate readonly _editors = new Map<string, ExtHostTextEditor>();\n\tprivate readonly _documents = new ResourceMap<Reference<ExtHostDocumentData>>();\n\n\tprivate readonly _onDidAddDocuments = new Emitter<readonly ExtHostDocumentData[]>();\n\tprivate readonly _onDidRemoveDocuments = new Emitter<readonly ExtHostDocumentData[]>();\n\tprivate readonly _onDidChangeVisibleTextEditors = new Emitter<readonly vscode.TextEditor[]>();\n\tprivate readonly _onDidChangeActiveTextEditor = new Emitter<vscode.TextEditor | undefined>();\n\n\treadonly onDidAddDocuments: Event<readonly ExtHostDocumentData[]> = this._onDidAddDocuments.event;\n\treadonly onDidRemoveDocuments: Event<readonly ExtHostDocumentData[]> = this._onDidRemoveDocuments.event;\n\treadonly onDidChangeVisibleTextEditors: Event<readonly vscode.TextEditor[]> = this._onDidChangeVisibleTextEditors.event;\n\treadonly onDidChangeActiveTextEditor: Event<vscode.TextEditor | undefined> = this._onDidChangeActiveTextEditor.event;\n\n\tconstructor(\n\t\t@IExtHostRpcService private readonly _extHostRpc: IExtHostRpcService,\n\t\t@ILogService private readonly _logService: ILogService\n\t) { }\n\n\t$acceptDocumentsAndEditorsDelta(delta: IDocumentsAndEditorsDelta): void {\n\t\tthis.acceptDocumentsAndEditorsDelta(delta);\n\t}\n\n\tacceptDocumentsAndEditorsDelta(delta: IExtHostDocumentsAndEditorsDelta): void {\n\n\t\tconst removedDocuments: ExtHostDocumentData[] = [];\n\t\tconst addedDocuments: ExtHostDocumentData[] = [];\n\t\tconst removedEditors: ExtHostTextEditor[] = [];\n\n\t\tif (delta.removedDocuments) {\n\t\t\tfor (const uriComponent of delta.removedDocuments) {\n\t\t\t\tconst uri = URI.revive(uriComponent);\n\t\t\t\tconst data = this._documents.get(uri);\n\t\t\t\tif (data?.unref()) {\n\t\t\t\t\tthis._documents.delete(uri);\n\t\t\t\t\tremovedDocuments.push(data.value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.addedDocuments) {\n\t\t\tfor (const data of delta.addedDocuments) {\n\t\t\t\tconst resource = URI.revive(data.uri);\n\t\t\t\tlet ref = this._documents.get(resource);\n\n\t\t\t\t// double check -> only notebook cell documents should be\n\t\t\t\t// referenced/opened more than once...\n\t\t\t\tif (ref) {\n\t\t\t\t\tif (resource.scheme !== Schemas.vscodeNotebookCell && resource.scheme !== Schemas.vscodeInteractiveInput) {\n\t\t\t\t\t\tthrow new Error(`document '${resource} already exists!'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!ref) {\n\t\t\t\t\tref = new Reference(new ExtHostDocumentData(\n\t\t\t\t\t\tthis._extHostRpc.getProxy(MainContext.MainThreadDocuments),\n\t\t\t\t\t\tresource,\n\t\t\t\t\t\tdata.lines,\n\t\t\t\t\t\tdata.EOL,\n\t\t\t\t\t\tdata.versionId,\n\t\t\t\t\t\tdata.languageId,\n\t\t\t\t\t\tdata.isDirty,\n\t\t\t\t\t\tdata.notebook\n\t\t\t\t\t));\n\t\t\t\t\tthis._documents.set(resource, ref);\n\t\t\t\t\taddedDocuments.push(ref.value);\n\t\t\t\t}\n\n\t\t\t\tref.ref();\n\t\t\t}\n\t\t}\n\n\t\tif (delta.removedEditors) {\n\t\t\tfor (const id of delta.removedEditors) {\n\t\t\t\tconst editor = this._editors.get(id);\n\t\t\t\tthis._editors.delete(id);\n\t\t\t\tif (editor) {\n\t\t\t\t\tremovedEditors.push(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.addedEditors) {\n\t\t\tfor (const data of delta.addedEditors) {\n\t\t\t\tconst resource = URI.revive(data.documentUri);\n\t\t\t\tassert.ok(this._documents.has(resource), `document '${resource}' does not exist`);\n\t\t\t\tassert.ok(!this._editors.has(data.id), `editor '${data.id}' already exists!`);\n\n\t\t\t\tconst documentData = this._documents.get(resource)!.value;\n\t\t\t\tconst editor = new ExtHostTextEditor(\n\t\t\t\t\tdata.id,\n\t\t\t\t\tthis._extHostRpc.getProxy(MainContext.MainThreadTextEditors),\n\t\t\t\t\tthis._logService,\n\t\t\t\t\tnew Lazy(() => documentData.document),\n\t\t\t\t\tdata.selections.map(typeConverters.Selection.to),\n\t\t\t\t\tdata.options,\n\t\t\t\t\tdata.visibleRanges.map(range => typeConverters.Range.to(range)),\n\t\t\t\t\ttypeof data.editorPosition === 'number' ? typeConverters.ViewColumn.to(data.editorPosition) : undefined\n\t\t\t\t);\n\t\t\t\tthis._editors.set(data.id, editor);\n\t\t\t}\n\t\t}\n\n\t\tif (delta.newActiveEditor !== undefined) {\n\t\t\tassert.ok(delta.newActiveEditor === null || this._editors.has(delta.newActiveEditor), `active editor '${delta.newActiveEditor}' does not exist`);\n\t\t\tthis._activeEditorId = delta.newActiveEditor;\n\t\t}\n\n\t\tdispose(removedDocuments);\n\t\tdispose(removedEditors);\n\n\t\t// now that the internal state is complete, fire events\n\t\tif (delta.removedDocuments) {\n\t\t\tthis._onDidRemoveDocuments.fire(removedDocuments);\n\t\t}\n\t\tif (delta.addedDocuments) {\n\t\t\tthis._onDidAddDocuments.fire(addedDocuments);\n\t\t}\n\n\t\tif (delta.removedEditors || delta.addedEditors) {\n\t\t\tthis._onDidChangeVisibleTextEditors.fire(this.allEditors().map(editor => editor.value));\n\t\t}\n\t\tif (delta.newActiveEditor !== undefined) {\n\t\t\tthis._onDidChangeActiveTextEditor.fire(this.activeEditor());\n\t\t}\n\t}\n\n\tgetDocument(uri: URI): ExtHostDocumentData | undefined {\n\t\treturn this._documents.get(uri)?.value;\n\t}\n\n\tallDocuments(): Iterable<ExtHostDocumentData> {\n\t\treturn Iterable.map(this._documents.values(), ref => ref.value);\n\t}\n\n\tgetEditor(id: string): ExtHostTextEditor | undefined {\n\t\treturn this._editors.get(id);\n\t}\n\n\tactiveEditor(): vscode.TextEditor | undefined;\n\tactiveEditor(internal: true): ExtHostTextEditor | undefined;\n\tactiveEditor(internal?: true): vscode.TextEditor | ExtHostTextEditor | undefined {\n\t\tif (!this._activeEditorId) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst editor = this._editors.get(this._activeEditorId);\n\t\tif (internal) {\n\t\t\treturn editor;\n\t\t} else {\n\t\t\treturn editor?.value;\n\t\t}\n\t}\n\n\tallEditors(): ExtHostTextEditor[] {\n\t\treturn [...this._editors.values()];\n\t}\n}\n\nexport interface IExtHostDocumentsAndEditors extends ExtHostDocumentsAndEditors { }\nexport const IExtHostDocumentsAndEditors = createDecorator<IExtHostDocumentsAndEditors>('IExtHostDocumentsAndEditors');\n"]}