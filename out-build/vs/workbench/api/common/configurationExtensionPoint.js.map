{"version":3,"sources":["vs/workbench/api/common/configurationExtensionPoint.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAchG,MAAM,YAAY,GAAG,cAAG,CAAM,EAAE,CAA4B,8BAAc,CAAC,gBAAgB,CAAC,CAAC;IAC7F,MAAM,qBAAqB,GAAG,cAAG,CAAM,EAAE,CAAyB,2BAAG,CAAQ,aAAa,CAAC,CAAC;IAE5F,MAAM,wBAAwB,GAAgB;QAC7C,IAAI,EAAE,QAAQ;QACd,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,CAAC;QAC1D,UAAU,EAAE;YACX,KAAK,EAAE;gBACN,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAkD,EAAE,IAA+O,CAAC;gBAC9T,IAAI,EAAE,QAAQ;aACd;YACD,KAAK,EAAE;gBACN,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAkD,EAAE,IAA4F,CAAC;gBAC3K,IAAI,EAAE,SAAS;aACf;YACD,UAAU,EAAE;gBACX,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAuD,EAAE,IAA8C,CAAC;gBAClI,IAAI,EAAE,QAAQ;gBACd,aAAa,EAAE;oBACd,OAAO,EAAE,MAAM;oBACf,mBAAmB,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA2D,EAAE,IAA+B,CAAC;iBAC/H;gBACD,oBAAoB,EAAE;oBACrB,KAAK,EAAE;wBACN;4BACC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA8D,EAAE,IAAuC,CAAC;4BAC5H,IAAI,EAAE,yCAAyC;yBAC/C;wBACD;4BACC,IAAI,EAAE,QAAQ;4BACd,UAAU,EAAE;gCACX,KAAK,EAAE;oCACN,IAAI,EAAE,QAAQ;oCACd,IAAI,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,sBAAsB,EAAE,qBAAqB,CAAC;oCACrG,OAAO,EAAE,QAAQ;oCACjB,gBAAgB,EAAE;wCACjB,GAAG,CAAC,QAAQ,CAAC,CAA+B,EAAE,IAAiE,CAAC;wCAChH,GAAG,CAAC,QAAQ,CAAC,CAA2B,EAAE,IAAgG,CAAC;wCAC3I,GAAG,CAAC,QAAQ,CAAC,CAA0B,EAAE,IAAiF,CAAC;wCAC3H,GAAG,CAAC,QAAQ,CAAC,CAA4B,EAAE,IAAyF,CAAC;wCACrI,GAAG,CAAC,QAAQ,CAAC,CAAwC,EAAE,IAA8E,CAAC;wCACtI,GAAG,CAAC,QAAQ,CAAC,EAAuC,EAAE,IAAoF,CAAC;qCAC3I;oCACD,mBAAmB,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAmB,EAAE,IAAiJ,CAAC;iCACzM;gCACD,gBAAgB,EAAE;oCACjB,IAAI,EAAE,OAAO;oCACb,KAAK,EAAE;wCACN,IAAI,EAAE,QAAQ;qCACd;oCACD,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAwB,EAAE,IAA8B,CAAC;iCACnF;gCACD,wBAAwB,EAAE;oCACzB,IAAI,EAAE,OAAO;oCACb,KAAK,EAAE;wCACN,IAAI,EAAE,QAAQ;qCACd;oCACD,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAgC,EAAE,IAAsD,CAAC;iCACnH;gCACD,cAAc,EAAE;oCACf,IAAI,EAAE,OAAO;oCACb,KAAK,EAAE;wCACN,IAAI,EAAE,QAAQ;qCACd;oCACD,mBAAmB,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAsB,EAAE,IAAkJ,EAAE,QAAQ,CAAC;iCACvN;gCACD,mBAAmB,EAAE;oCACpB,IAAI,EAAE,QAAQ;oCACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAA2B,EAAE,IAAyC,CAAC;iCACjG;gCACD,kBAAkB,EAAE;oCACnB,IAAI,EAAE,QAAQ;oCACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAA0B,EAAE,IAAgG,CAAC;iCACvJ;gCACD,0BAA0B,EAAE;oCAC3B,IAAI,EAAE,QAAQ;oCACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAkC,EAAE,IAAuH,CAAC;iCACtL;gCACD,gBAAgB,EAAE;oCACjB,IAAI,EAAE,QAAQ;oCACd,IAAI,EAAE,CAAC,gBAAgB,EAAE,eAAe,CAAC;oCACzC,gBAAgB,EAAE;wCACjB,GAAG,CAAC,QAAQ,CAAC,EAAkC,EAAE,IAAyC,CAAC;wCAC3F,GAAG,CAAC,QAAQ,CAAC,EAAiC,EAAE,IAAwC,CAAC;qCACzF;oCACD,OAAO,EAAE,gBAAgB;oCACzB,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAwB,EAAE,IAAyE,CAAC;iCAC9H;gCACD,KAAK,EAAE;oCACN,IAAI,EAAE,SAAS;oCACf,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAa,EAAE,IAAgM,CAAC;iCAC1O;gCACD,UAAU,EAAE;oCACX,IAAI,EAAE,SAAS;oCACf,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAkB,EAAE,IAA4F,CAAC;iCAC3I;6BACD;yBACD;qBACD;iBACD;aACD;SACD;KACD,CAAC;IAEF,gEAAgE;IAChE,IAAI,YAA6C,CAAC;IAGlD,uDAAuD;IACvD,MAAM,4BAA4B,GAAG,wBAAG,CAAgB,sBAAsB,CAAqB;QAClG,cAAc,EAAE,uBAAuB;QACvC,UAAU,EAAE;YACX,IAAI,EAAE,2BAAG;SACT;KACD,CAAC,CAAC;IACH,4BAA4B,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE;QAE1E,IAAI,YAAY,EAAE;YACjB,oCAAoC;YACpC,qBAAqB,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;SACvD;QAED,MAAM,SAAS,GAAG,YAAY,GAAG,EAAE,CAAC;QACpC,4FAA4F;QAC5F,cAAc,CAAC,GAAG,EAAE;YACnB,IAAI,YAAY,KAAK,SAAS,EAAE;gBAC/B,qBAAqB,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;gBACvD,YAAY,GAAG,SAAS,CAAC;aACzB;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,OAAO,CAAC,MAAM,EAAE;YACnB,MAAM,4BAA4B,GAAG,OAAO,CAAC,GAAG,CAAyB,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,GAAG,CAAO,SAAS,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,EAAE,SAAS,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;YACnP,YAAY,CAAC,eAAe,GAAG,4BAA4B,CAAC;SAC5D;QACD,IAAI,KAAK,CAAC,MAAM,EAAE;YACjB,MAAM,oBAAoB,GAAG,qBAAqB,CAAC,0BAA0B,EAAE,CAAC;YAChF,MAAM,aAAa,GAAG,yKAAyI,CAAC;YAChK,MAAM,0BAA0B,GAAG,KAAK,CAAC,GAAG,CAAyB,SAAS,CAAC,EAAE;gBAChF,MAAM,SAAS,GAA2B,OAAO,CAAC,GAAG,CAAO,SAAS,CAAC,KAAK,CAAC,CAAC;gBAC7E,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBACzC,IAAI,CAAC,2BAAG,CAAqB,IAAI,CAAC,GAAG,CAAC,EAAE;wBACvC,MAAM,wBAAwB,GAAG,oBAAoB,CAAC,GAAG,CAAC,CAAC;wBAC3D,IAAI,wBAAwB,EAAE,KAAK,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,wBAAwB,CAAC,KAAK,CAAC,EAAE;4BAC/F,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAA8C,EAAE,IAAmK,EAAE,GAAG,CAAC,CAAC,CAAC;4BACjQ,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;yBACtB;qBACD;iBACD;gBACD,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,EAAE,SAAS,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,CAAC;YAC9H,CAAC,CAAC,CAAC;YACH,YAAY,CAAC,aAAa,GAAG,0BAA0B,CAAC;SACxD;IACF,CAAC,CAAC,CAAC;IACH,qDAAqD;IAGrD,+CAA+C;IAC/C,MAAM,qBAAqB,GAAG,wBAAG,CAAgB,sBAAsB,CAAqB;QAC3F,cAAc,EAAE,eAAe;QAC/B,IAAI,EAAE,CAAC,4BAA4B,CAAC;QACpC,UAAU,EAAE;YACX,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAA4C,EAAE,IAAqC,CAAC;YAC9G,KAAK,EAAE;gBACN,wBAAwB;gBACxB;oBACC,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,wBAAwB;iBAC/B;aACD;SACD;KACD,CAAC,CAAC;IAEH,MAAM,uBAAuB,GAAiD,IAAI,gBAAG,EAA2C,CAAC;IAEjI,qBAAqB,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE;QAEnE,sFAAsF;QACtF,YAAY,KAAK,EAAE,CAAC;QAEpB,IAAI,OAAO,CAAC,MAAM,EAAE;YACnB,MAAM,qBAAqB,GAAyB,EAAE,CAAC;YACvD,KAAK,MAAM,SAAS,IAAI,OAAO,EAAE;gBAChC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACrG,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;aACjE;YACD,YAAY,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;SAC3D;QAED,MAAM,cAAc,GAAG,IAAI,GAAG,EAAU,CAAC;QAEzC,SAAS,mBAAmB,CAAC,IAAwB,EAAE,SAAmC;YACzF,MAAM,cAAc,GAAyB,EAAE,CAAC;YAChD,MAAM,aAAa,GAAG,OAAO,CAAC,GAAG,CAAO,IAAI,CAAC,CAAC;YAE9C,IAAI,aAAa,CAAC,KAAK,IAAI,CAAC,OAAO,aAAa,CAAC,KAAK,KAAK,QAAQ,CAAC,EAAE;gBACrE,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAe,EAAE,IAAwC,CAAC,CAAC,CAAC;aACnG;YAED,kBAAkB,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;YAE7C,aAAa,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC;YACrE,aAAa,CAAC,aAAa,GAAG,EAAE,EAAE,EAAE,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,EAAE,SAAS,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;YAC7H,aAAa,CAAC,oBAAoB,GAAG,SAAS,CAAC,WAAW,CAAC,YAAY,EAAE,mBAAmB,EAAE,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,EAAE,mBAAmB,CAAC,wBAAwB,CAAC,CAAC,CAAC,SAAS,CAAC;YACrN,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,IAAI,SAAS,CAAC,WAAW,CAAC,WAAW,IAAI,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC;YACzH,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACnC,OAAO,cAAc,CAAC;QACvB,CAAC;QAED,SAAS,kBAAkB,CAAC,aAAiC,EAAE,SAAmC;YACjG,MAAM,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC;YAC5C,IAAI,UAAU,EAAE;gBACf,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;oBACnC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAoB,EAAE,IAA8C,CAAC,CAAC,CAAC;oBAC9G,aAAa,CAAC,UAAU,GAAG,EAAE,CAAC;iBAC9B;gBACD,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;oBAC7B,MAAM,qBAAqB,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;oBAC9C,MAAM,OAAO,GAAG,IAAA,2BAAG,EAAc,GAAG,EAAE,qBAAqB,CAAC,CAAC;oBAC7D,IAAI,OAAO,EAAE;wBACZ,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;wBACvB,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAClC,SAAS;qBACT;oBACD,IAAI,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;wBAC5B,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;wBACvB,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAA2B,EAAE,IAA6D,EAAE,GAAG,CAAC,CAAC,CAAC;wBACxI,SAAS;qBACT;oBACD,IAAI,CAAC,IAAA,WAAG,EAAM,qBAAqB,CAAC,EAAE;wBACrC,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;wBACvB,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAkB,EAAE,IAA2D,EAAE,GAAG,CAAC,CAAC,CAAC;wBAC9H,SAAS;qBACT;oBACD,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACxB,IAAI,qBAAqB,CAAC,KAAK,EAAE;wBAChC,IAAI,qBAAqB,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,aAAa,EAAE;4BAC7D,qBAAqB,CAAC,KAAK,yCAAiC,CAAC;yBAC7D;6BAAM,IAAI,qBAAqB,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,SAAS,EAAE;4BAChE,qBAAqB,CAAC,KAAK,qCAA6B,CAAC;yBACzD;6BAAM,IAAI,qBAAqB,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,UAAU,EAAE;4BACjE,qBAAqB,CAAC,KAAK,sCAA8B,CAAC;yBAC1D;6BAAM,IAAI,qBAAqB,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,qBAAqB,EAAE;4BAC5E,qBAAqB,CAAC,KAAK,iDAAyC,CAAC;yBACrE;6BAAM,IAAI,qBAAqB,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,sBAAsB,EAAE;4BAC7E,qBAAqB,CAAC,KAAK,kDAA0C,CAAC;yBACtE;6BAAM;4BACN,qBAAqB,CAAC,KAAK,oCAA4B,CAAC;yBACxD;qBACD;yBAAM;wBACN,qBAAqB,CAAC,KAAK,oCAA4B,CAAC;qBACxD;iBACD;aACD;YACD,MAAM,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAC;YACrC,IAAI,QAAQ,EAAE;gBACb,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAe,EAAE,IAAwK,CAAC,CAAC,CAAC;gBACnO,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;oBAC5B,kBAAkB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;iBACpC;aACD;QACF,CAAC;QAED,IAAI,KAAK,CAAC,MAAM,EAAE;YACjB,MAAM,mBAAmB,GAAyB,EAAE,CAAC;YACrD,KAAK,MAAM,SAAS,IAAI,KAAK,EAAE;gBAC9B,MAAM,cAAc,GAAyB,EAAE,CAAC;gBAChD,MAAM,KAAK,GAA8C,SAAS,CAAC,KAAK,CAAC;gBACzE,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACzB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,mBAAmB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;iBAC9E;qBAAM;oBACN,cAAc,CAAC,IAAI,CAAC,GAAG,mBAAmB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;iBAC9D;gBACD,uBAAuB,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;gBAC9E,mBAAmB,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;aAC5C;YAED,YAAY,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;SACvD;QAED,qBAAqB,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;QACvD,YAAY,GAAG,SAAS,CAAC;IAC1B,CAAC,CAAC,CAAC;IACH,6CAA6C;IAE7C,YAAY,CAAC,cAAc,CAAC,kCAAkC,EAAE;QAC/D,aAAa,EAAE,IAAI;QACnB,mBAAmB,EAAE,IAAI;QACzB,OAAO,EAAE;YACR,OAAO,EAAE;gBACR;oBACC,IAAI,EAAE,EAAE;iBACR;aACD;YACD,QAAQ,EAAE,EACT;SACD;QACD,QAAQ,EAAE,CAAC,SAAS,CAAC;QACrB,UAAU,EAAE;YACX,SAAS,EAAE;gBACV,QAAQ,EAAE,CAAC;gBACX,WAAW,EAAE,IAAI;gBACjB,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAqC,EAAE,IAAgD,CAAC;gBAClH,KAAK,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;oBAC3C,KAAK,EAAE,CAAC;4BACP,UAAU,EAAE;gCACX,IAAI,EAAE;oCACL,IAAI,EAAE,QAAQ;oCACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAkC,EAAE,IAAwI,CAAC;iCACvM;gCACD,IAAI,EAAE;oCACL,IAAI,EAAE,QAAQ;oCACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAkC,EAAE,IAAmC,CAAC;iCAClG;6BACD;4BACD,QAAQ,EAAE,CAAC,MAAM,CAAC;yBAClB,EAAE;4BACF,UAAU,EAAE;gCACX,GAAG,EAAE;oCACJ,IAAI,EAAE,QAAQ;oCACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAiC,EAAE,IAAmB,CAAC;iCACjF;gCACD,IAAI,EAAE;oCACL,IAAI,EAAE,QAAQ;oCACd,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAkC,EAAE,IAAmC,CAAC;iCAClG;6BACD;4BACD,QAAQ,EAAE,CAAC,KAAK,CAAC;yBACjB,CAAC;iBACF;aACD;YACD,UAAU,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,EAAE;gBACX,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAsC,EAAE,IAAoB,CAAC;gBACvF,IAAI,EAAE,mBAAG;aACT;YACD,QAAQ,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,EAAE,cAAc,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;gBAC9C,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAoC,EAAE,IAAiC,CAAC;gBAClG,IAAI,EAAE,mBAAG;aACT;YACD,OAAO,EAAE;gBACR,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE;gBACxC,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAmC,EAAE,IAA+B,CAAC;gBAC/F,IAAI,EAAE,mBAAG;aACT;YACD,YAAY,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,EAAE;gBACX,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAwC,EAAE,IAAsB,CAAC;gBAC3F,IAAI,EAAE,6BAA6B;aACnC;YACD,iBAAiB,EAAE;gBAClB,IAAI,EAAE,QAAQ;gBACd,YAAY,EAAE,IAAI;gBAClB,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAiC,EAAE,IAAmD,CAAC;aACjH;YACD,WAAW,EAAE;gBACZ,IAAI,EAAE,SAAS;gBACf,YAAY,EAAE,IAAI;gBAClB,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAA2B,EAAE,IAAoE,CAAC;aAC5H;SACD;QACD,YAAY,EAAE,GAAG,CAAC,QAAQ,CAAC,EAA0B,EAAE,IAA0C,CAAC;KAClG,CAAC,CAAC","file":"configurationExtensionPoint.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as objects from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { ExtensionsRegistry, IExtensionPointUser } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { IConfigurationNode, IConfigurationRegistry, Extensions, validateProperty, ConfigurationScope, OVERRIDE_PROPERTY_REGEX, IConfigurationDefaults, configurationDefaultsSchemaId, IConfigurationDelta } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { workspaceSettingsSchemaId, launchSchemaId, tasksSchemaId } from 'vs/workbench/services/configuration/common/configuration';\nimport { isObject } from 'vs/base/common/types';\nimport { ExtensionIdentifierMap } from 'vs/platform/extensions/common/extensions';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nconst jsonRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\nconst configurationEntrySchema: IJSONSchema = {\n\ttype: 'object',\n\tdefaultSnippets: [{ body: { title: '', properties: {} } }],\n\tproperties: {\n\t\ttitle: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.configuration.title', 'A title for the current category of settings. This label will be rendered in the Settings editor as a subheading. If the title is the same as the extension display name, then the category will be grouped under the main extension heading.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\torder: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.configuration.order', 'When specified, gives the order of this category of settings relative to other categories.'),\n\t\t\ttype: 'integer'\n\t\t},\n\t\tproperties: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.configuration.properties', 'Description of the configuration properties.'),\n\t\t\ttype: 'object',\n\t\t\tpropertyNames: {\n\t\t\t\tpattern: '\\\\S+',\n\t\t\t\tpatternErrorMessage: nls.localize('vscode.extension.contributes.configuration.property.empty', 'Property should not be empty.'),\n\t\t\t},\n\t\t\tadditionalProperties: {\n\t\t\t\tanyOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: nls.localize('vscode.extension.contributes.configuration.properties.schema', 'Schema of the configuration property.'),\n\t\t\t\t\t\t$ref: 'http://json-schema.org/draft-07/schema#'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tscope: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tenum: ['application', 'machine', 'window', 'resource', 'language-overridable', 'machine-overridable'],\n\t\t\t\t\t\t\t\tdefault: 'window',\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize('scope.application.description', \"Configuration that can be configured only in the user settings.\"),\n\t\t\t\t\t\t\t\t\tnls.localize('scope.machine.description', \"Configuration that can be configured only in the user settings or only in the remote settings.\"),\n\t\t\t\t\t\t\t\t\tnls.localize('scope.window.description', \"Configuration that can be configured in the user, remote or workspace settings.\"),\n\t\t\t\t\t\t\t\t\tnls.localize('scope.resource.description', \"Configuration that can be configured in the user, remote, workspace or folder settings.\"),\n\t\t\t\t\t\t\t\t\tnls.localize('scope.language-overridable.description', \"Resource configuration that can be configured in language specific settings.\"),\n\t\t\t\t\t\t\t\t\tnls.localize('scope.machine-overridable.description', \"Machine configuration that can be configured also in workspace or folder settings.\")\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tmarkdownDescription: nls.localize('scope.description', \"Scope in which the configuration is applicable. Available scopes are `application`, `machine`, `window`, `resource`, and `machine-overridable`.\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tenumDescriptions: {\n\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.enumDescriptions', 'Descriptions for enum values')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmarkdownEnumDescriptions: {\n\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.markdownEnumDescriptions', 'Descriptions for enum values in the markdown format.')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tenumItemLabels: {\n\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmarkdownDescription: nls.localize('scope.enumItemLabels', 'Labels for enum values to be displayed in the Settings editor. When specified, the {0} values still show after the labels, but less prominently.', '`enum`')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmarkdownDescription: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.markdownDescription', 'The description in the markdown format.')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdeprecationMessage: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.deprecationMessage', 'If set, the property is marked as deprecated and the given message is shown as an explanation.')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmarkdownDeprecationMessage: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.markdownDeprecationMessage', 'If set, the property is marked as deprecated and the given message is shown as an explanation in the markdown format.')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\teditPresentation: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tenum: ['singlelineText', 'multilineText'],\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize('scope.singlelineText.description', 'The value will be shown in an inputbox.'),\n\t\t\t\t\t\t\t\t\tnls.localize('scope.multilineText.description', 'The value will be shown in a textarea.')\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tdefault: 'singlelineText',\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.editPresentation', 'When specified, controls the presentation format of the string setting.')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\torder: {\n\t\t\t\t\t\t\t\ttype: 'integer',\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.order', 'When specified, gives the order of this setting relative to other settings within the same category. Settings with an order property will be placed before settings without this property set.')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tignoreSync: {\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdescription: nls.localize('scope.ignoreSync', 'When enabled, Settings Sync will not sync the user value of this configuration by default.')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t}\n};\n\n// build up a delta across two ext points and only apply it once\nlet _configDelta: IConfigurationDelta | undefined;\n\n\n// BEGIN VSCode extension point `configurationDefaults`\nconst defaultConfigurationExtPoint = ExtensionsRegistry.registerExtensionPoint<IConfigurationNode>({\n\textensionPoint: 'configurationDefaults',\n\tjsonSchema: {\n\t\t$ref: configurationDefaultsSchemaId,\n\t}\n});\ndefaultConfigurationExtPoint.setHandler((extensions, { added, removed }) => {\n\n\tif (_configDelta) {\n\t\t// HIGHLY unlikely, but just in case\n\t\tconfigurationRegistry.deltaConfiguration(_configDelta);\n\t}\n\n\tconst configNow = _configDelta = {};\n\t// schedule a HIGHLY unlikely task in case only the default configurations EXT point changes\n\tqueueMicrotask(() => {\n\t\tif (_configDelta === configNow) {\n\t\t\tconfigurationRegistry.deltaConfiguration(_configDelta);\n\t\t\t_configDelta = undefined;\n\t\t}\n\t});\n\n\tif (removed.length) {\n\t\tconst removedDefaultConfigurations = removed.map<IConfigurationDefaults>(extension => ({ overrides: objects.deepClone(extension.value), source: { id: extension.description.identifier.value, displayName: extension.description.displayName } }));\n\t\t_configDelta.removedDefaults = removedDefaultConfigurations;\n\t}\n\tif (added.length) {\n\t\tconst registeredProperties = configurationRegistry.getConfigurationProperties();\n\t\tconst allowedScopes = [ConfigurationScope.MACHINE_OVERRIDABLE, ConfigurationScope.WINDOW, ConfigurationScope.RESOURCE, ConfigurationScope.LANGUAGE_OVERRIDABLE];\n\t\tconst addedDefaultConfigurations = added.map<IConfigurationDefaults>(extension => {\n\t\t\tconst overrides: IStringDictionary<any> = objects.deepClone(extension.value);\n\t\t\tfor (const key of Object.keys(overrides)) {\n\t\t\t\tif (!OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tconst registeredPropertyScheme = registeredProperties[key];\n\t\t\t\t\tif (registeredPropertyScheme?.scope && !allowedScopes.includes(registeredPropertyScheme.scope)) {\n\t\t\t\t\t\textension.collector.warn(nls.localize('config.property.defaultConfiguration.warning', \"Cannot register configuration defaults for '{0}'. Only defaults for machine-overridable, window, resource and language overridable scoped settings are supported.\", key));\n\t\t\t\t\t\tdelete overrides[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { overrides, source: { id: extension.description.identifier.value, displayName: extension.description.displayName } };\n\t\t});\n\t\t_configDelta.addedDefaults = addedDefaultConfigurations;\n\t}\n});\n// END VSCode extension point `configurationDefaults`\n\n\n// BEGIN VSCode extension point `configuration`\nconst configurationExtPoint = ExtensionsRegistry.registerExtensionPoint<IConfigurationNode>({\n\textensionPoint: 'configuration',\n\tdeps: [defaultConfigurationExtPoint],\n\tjsonSchema: {\n\t\tdescription: nls.localize('vscode.extension.contributes.configuration', 'Contributes configuration settings.'),\n\t\toneOf: [\n\t\t\tconfigurationEntrySchema,\n\t\t\t{\n\t\t\t\ttype: 'array',\n\t\t\t\titems: configurationEntrySchema\n\t\t\t}\n\t\t]\n\t}\n});\n\nconst extensionConfigurations: ExtensionIdentifierMap<IConfigurationNode[]> = new ExtensionIdentifierMap<IConfigurationNode[]>();\n\nconfigurationExtPoint.setHandler((extensions, { added, removed }) => {\n\n\t// HIGHLY unlikely (only configuration but not defaultConfiguration EXT point changes)\n\t_configDelta ??= {};\n\n\tif (removed.length) {\n\t\tconst removedConfigurations: IConfigurationNode[] = [];\n\t\tfor (const extension of removed) {\n\t\t\tremovedConfigurations.push(...(extensionConfigurations.get(extension.description.identifier) || []));\n\t\t\textensionConfigurations.delete(extension.description.identifier);\n\t\t}\n\t\t_configDelta.removedConfigurations = removedConfigurations;\n\t}\n\n\tconst seenProperties = new Set<string>();\n\n\tfunction handleConfiguration(node: IConfigurationNode, extension: IExtensionPointUser<any>): IConfigurationNode[] {\n\t\tconst configurations: IConfigurationNode[] = [];\n\t\tconst configuration = objects.deepClone(node);\n\n\t\tif (configuration.title && (typeof configuration.title !== 'string')) {\n\t\t\textension.collector.error(nls.localize('invalid.title', \"'configuration.title' must be a string\"));\n\t\t}\n\n\t\tvalidateProperties(configuration, extension);\n\n\t\tconfiguration.id = node.id || extension.description.identifier.value;\n\t\tconfiguration.extensionInfo = { id: extension.description.identifier.value, displayName: extension.description.displayName };\n\t\tconfiguration.restrictedProperties = extension.description.capabilities?.untrustedWorkspaces?.supported === 'limited' ? extension.description.capabilities?.untrustedWorkspaces.restrictedConfigurations : undefined;\n\t\tconfiguration.title = configuration.title || extension.description.displayName || extension.description.identifier.value;\n\t\tconfigurations.push(configuration);\n\t\treturn configurations;\n\t}\n\n\tfunction validateProperties(configuration: IConfigurationNode, extension: IExtensionPointUser<any>): void {\n\t\tconst properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tif (typeof properties !== 'object') {\n\t\t\t\textension.collector.error(nls.localize('invalid.properties', \"'configuration.properties' must be an object\"));\n\t\t\t\tconfiguration.properties = {};\n\t\t\t}\n\t\t\tfor (const key in properties) {\n\t\t\t\tconst propertyConfiguration = properties[key];\n\t\t\t\tconst message = validateProperty(key, propertyConfiguration);\n\t\t\t\tif (message) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\textension.collector.warn(message);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (seenProperties.has(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\textension.collector.warn(nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", key));\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!isObject(propertyConfiguration)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\textension.collector.error(nls.localize('invalid.property', \"configuration.properties property '{0}' must be an object\", key));\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tseenProperties.add(key);\n\t\t\t\tif (propertyConfiguration.scope) {\n\t\t\t\t\tif (propertyConfiguration.scope.toString() === 'application') {\n\t\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.APPLICATION;\n\t\t\t\t\t} else if (propertyConfiguration.scope.toString() === 'machine') {\n\t\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.MACHINE;\n\t\t\t\t\t} else if (propertyConfiguration.scope.toString() === 'resource') {\n\t\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.RESOURCE;\n\t\t\t\t\t} else if (propertyConfiguration.scope.toString() === 'machine-overridable') {\n\t\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.MACHINE_OVERRIDABLE;\n\t\t\t\t\t} else if (propertyConfiguration.scope.toString() === 'language-overridable') {\n\t\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.LANGUAGE_OVERRIDABLE;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.WINDOW;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpropertyConfiguration.scope = ConfigurationScope.WINDOW;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\textension.collector.error(nls.localize('invalid.allOf', \"'configuration.allOf' is deprecated and should no longer be used. Instead, pass multiple configuration sections as an array to the 'configuration' contribution point.\"));\n\t\t\tfor (const node of subNodes) {\n\t\t\t\tvalidateProperties(node, extension);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (added.length) {\n\t\tconst addedConfigurations: IConfigurationNode[] = [];\n\t\tfor (const extension of added) {\n\t\t\tconst configurations: IConfigurationNode[] = [];\n\t\t\tconst value = <IConfigurationNode | IConfigurationNode[]>extension.value;\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalue.forEach(v => configurations.push(...handleConfiguration(v, extension)));\n\t\t\t} else {\n\t\t\t\tconfigurations.push(...handleConfiguration(value, extension));\n\t\t\t}\n\t\t\textensionConfigurations.set(extension.description.identifier, configurations);\n\t\t\taddedConfigurations.push(...configurations);\n\t\t}\n\n\t\t_configDelta.addedConfigurations = addedConfigurations;\n\t}\n\n\tconfigurationRegistry.deltaConfiguration(_configDelta);\n\t_configDelta = undefined;\n});\n// END VSCode extension point `configuration`\n\njsonRegistry.registerSchema('vscode://schemas/workspaceConfig', {\n\tallowComments: true,\n\tallowTrailingCommas: true,\n\tdefault: {\n\t\tfolders: [\n\t\t\t{\n\t\t\t\tpath: ''\n\t\t\t}\n\t\t],\n\t\tsettings: {\n\t\t}\n\t},\n\trequired: ['folders'],\n\tproperties: {\n\t\t'folders': {\n\t\t\tminItems: 0,\n\t\t\tuniqueItems: true,\n\t\t\tdescription: nls.localize('workspaceConfig.folders.description', \"List of folders to be loaded in the workspace.\"),\n\t\t\titems: {\n\t\t\t\ttype: 'object',\n\t\t\t\tdefaultSnippets: [{ body: { path: '$1' } }],\n\t\t\t\toneOf: [{\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tpath: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: nls.localize('workspaceConfig.path.description', \"A file path. e.g. `/root/folderA` or `./folderA` for a relative path that will be resolved against the location of the workspace file.\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: nls.localize('workspaceConfig.name.description', \"An optional name for the folder. \")\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trequired: ['path']\n\t\t\t\t}, {\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\turi: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: nls.localize('workspaceConfig.uri.description', \"URI of the folder\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: nls.localize('workspaceConfig.name.description', \"An optional name for the folder. \")\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trequired: ['uri']\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t'settings': {\n\t\t\ttype: 'object',\n\t\t\tdefault: {},\n\t\t\tdescription: nls.localize('workspaceConfig.settings.description', \"Workspace settings\"),\n\t\t\t$ref: workspaceSettingsSchemaId\n\t\t},\n\t\t'launch': {\n\t\t\ttype: 'object',\n\t\t\tdefault: { configurations: [], compounds: [] },\n\t\t\tdescription: nls.localize('workspaceConfig.launch.description', \"Workspace launch configurations\"),\n\t\t\t$ref: launchSchemaId\n\t\t},\n\t\t'tasks': {\n\t\t\ttype: 'object',\n\t\t\tdefault: { version: '2.0.0', tasks: [] },\n\t\t\tdescription: nls.localize('workspaceConfig.tasks.description', \"Workspace task configurations\"),\n\t\t\t$ref: tasksSchemaId\n\t\t},\n\t\t'extensions': {\n\t\t\ttype: 'object',\n\t\t\tdefault: {},\n\t\t\tdescription: nls.localize('workspaceConfig.extensions.description', \"Workspace extensions\"),\n\t\t\t$ref: 'vscode://schemas/extensions'\n\t\t},\n\t\t'remoteAuthority': {\n\t\t\ttype: 'string',\n\t\t\tdoNotSuggest: true,\n\t\t\tdescription: nls.localize('workspaceConfig.remoteAuthority', \"The remote server where the workspace is located.\"),\n\t\t},\n\t\t'transient': {\n\t\t\ttype: 'boolean',\n\t\t\tdoNotSuggest: true,\n\t\t\tdescription: nls.localize('workspaceConfig.transient', \"A transient workspace will disappear when restarting or reloading.\"),\n\t\t}\n\t},\n\terrorMessage: nls.localize('unknownWorkspaceProperty', \"Unknown workspace configuration property\")\n});\n"]}