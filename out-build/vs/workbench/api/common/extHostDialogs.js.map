{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostDialogs.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,MAAa,IAAI;QAIhB,YAAY,WAAyB;YACpC,IAAI,CAAC,CAAC,GAAQ,WAAW,CAAC,QAAQ,CAAC,sBAAG,CAAS,iBAAiB,CAAC,CAAC;QACnE,CAAC;QAED,cAAc,CAAC,SAAuC,EAAE,OAAkC;YACzF,IAAI,OAAO,EAAE,gBAAgB,EAAE;gBAC9B,IAAA,gBAAG,EAAqB,SAAS,EAAE,WAAW,CAAC,CAAC;aAChD;YACD,OAAO,IAAI,CAAC,CAAC,CAAM,eAAe,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC5D,OAAO,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,SAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAClE,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,cAAc,CAAC,OAAkC;YAChD,OAAO,IAAI,CAAC,CAAC,CAAM,eAAe,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAC3D,OAAO,QAAQ,CAAC,CAAC,CAAC,SAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACpD,CAAC,CAAC,CAAC;QACJ,CAAC;KACD;IAtBD,oBAsBC","file":"extHostDialogs.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport { MainContext, MainThreadDiaglogsShape, IMainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { checkProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\nimport { IRelaxedExtensionDescription } from 'vs/platform/extensions/common/extensions';\n\nexport class ExtHostDialogs {\n\n\tprivate readonly _proxy: MainThreadDiaglogsShape;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDialogs);\n\t}\n\n\tshowOpenDialog(extension: IRelaxedExtensionDescription, options?: vscode.OpenDialogOptions): Promise<URI[] | undefined> {\n\t\tif (options?.allowUIResources) {\n\t\t\tcheckProposedApiEnabled(extension, 'showLocal');\n\t\t}\n\t\treturn this._proxy.$showOpenDialog(options).then(filepaths => {\n\t\t\treturn filepaths ? filepaths.map(p => URI.revive(p)) : undefined;\n\t\t});\n\t}\n\n\tshowSaveDialog(options?: vscode.SaveDialogOptions): Promise<URI | undefined> {\n\t\treturn this._proxy.$showSaveDialog(options).then(filepath => {\n\t\t\treturn filepath ? URI.revive(filepath) : undefined;\n\t\t});\n\t}\n}\n"]}