{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostFileSystemInfo.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAShG,MAAa,IAAI;QAShB;YALiB,MAAC,GAAgB,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAO,CAAC,CAAC,CAAC;YAC/C,MAAC,GAAe,IAAI,GAAG,EAAkB,CAAC;YAK1D,IAAI,CAAC,MAAM,GAAG,IAAI,eAAG,CAAI,GAAG,CAAC,EAAE;gBAC9B,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAa,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACxD,IAAI,YAAY,KAAK,SAAS,EAAE;oBAC/B,sBAAsB;oBACtB,OAAO,KAAK,CAAC;iBACb;gBACD,IAAI,YAAY,8DAAmD,EAAE;oBACpE,+BAA+B;oBAC/B,OAAO,KAAK,CAAC;iBACb;gBACD,OAAO,IAAI,CAAC;YACb,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,oBAAoB,CAAC,GAAkB,EAAE,YAA2B;YACnE,IAAI,YAAY,KAAK,IAAI,EAAE;gBAC1B,IAAI,CAAC,CAAC,CAAa,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aACtC;iBAAM;gBACN,IAAI,CAAC,CAAC,CAAa,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;aACjD;QACF,CAAC;QAED,YAAY,CAAC,MAAc;YAC1B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAa,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAc,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5E,CAAC;QAED,eAAe,CAAC,MAAc;YAC7B,OAAO,IAAI,CAAC,CAAC,CAAa,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC;KACD;IAvCD,oBAuCC;IAKY,QAAA,IAAI,GAAqB,IAAA,mBAAG,EAAqC,wBAAwB,CAAC,CAAC","file":"extHostFileSystemInfo.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { ExtUri, IExtUri } from 'vs/base/common/resources';\nimport { UriComponents } from 'vs/base/common/uri';\nimport { FileSystemProviderCapabilities } from 'vs/platform/files/common/files';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtHostFileSystemInfoShape } from 'vs/workbench/api/common/extHost.protocol';\n\nexport class ExtHostFileSystemInfo implements ExtHostFileSystemInfoShape {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _systemSchemes = new Set(Object.keys(Schemas));\n\tprivate readonly _providerInfo = new Map<string, number>();\n\n\treadonly extUri: IExtUri;\n\n\tconstructor() {\n\t\tthis.extUri = new ExtUri(uri => {\n\t\t\tconst capabilities = this._providerInfo.get(uri.scheme);\n\t\t\tif (capabilities === undefined) {\n\t\t\t\t// default: not ignore\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (capabilities & FileSystemProviderCapabilities.PathCaseSensitive) {\n\t\t\t\t// configured as case sensitive\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t}\n\n\t$acceptProviderInfos(uri: UriComponents, capabilities: number | null): void {\n\t\tif (capabilities === null) {\n\t\t\tthis._providerInfo.delete(uri.scheme);\n\t\t} else {\n\t\t\tthis._providerInfo.set(uri.scheme, capabilities);\n\t\t}\n\t}\n\n\tisFreeScheme(scheme: string): boolean {\n\t\treturn !this._providerInfo.has(scheme) && !this._systemSchemes.has(scheme);\n\t}\n\n\tgetCapabilities(scheme: string): number | undefined {\n\t\treturn this._providerInfo.get(scheme);\n\t}\n}\n\nexport interface IExtHostFileSystemInfo extends ExtHostFileSystemInfo {\n\treadonly extUri: IExtUri;\n}\nexport const IExtHostFileSystemInfo = createDecorator<IExtHostFileSystemInfo>('IExtHostFileSystemInfo');\n"]}