{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostComments.ts"],"names":[],"mappings":"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","file":"extHostComments.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asPromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { debounce } from 'vs/base/common/decorators';\nimport { Emitter } from 'vs/base/common/event';\nimport { DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IRange } from 'vs/editor/common/core/range';\nimport * as languages from 'vs/editor/common/languages';\nimport { ExtensionIdentifierMap, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ExtHostDocuments } from 'vs/workbench/api/common/extHostDocuments';\nimport * as extHostTypeConverter from 'vs/workbench/api/common/extHostTypeConverters';\nimport * as types from 'vs/workbench/api/common/extHostTypes';\nimport type * as vscode from 'vscode';\nimport { ExtHostCommentsShape, IMainContext, MainContext, CommentThreadChanges, CommentChanges } from './extHost.protocol';\nimport { ExtHostCommands } from './extHostCommands';\nimport { checkProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\n\ntype ProviderHandle = number;\n\ninterface ExtHostComments {\n\tcreateCommentController(extension: IExtensionDescription, id: string, label: string): vscode.CommentController;\n}\n\nexport function createExtHostComments(mainContext: IMainContext, commands: ExtHostCommands, documents: ExtHostDocuments): ExtHostCommentsShape & ExtHostComments {\n\tconst proxy = mainContext.getProxy(MainContext.MainThreadComments);\n\n\tclass ExtHostCommentsImpl implements ExtHostCommentsShape, ExtHostComments {\n\n\t\tprivate static handlePool = 0;\n\n\n\t\tprivate _commentControllers: Map<ProviderHandle, ExtHostCommentController> = new Map<ProviderHandle, ExtHostCommentController>();\n\n\t\tprivate _commentControllersByExtension: ExtensionIdentifierMap<ExtHostCommentController[]> = new ExtensionIdentifierMap<ExtHostCommentController[]>();\n\n\n\t\tconstructor(\n\t\t) {\n\t\t\tcommands.registerArgumentProcessor({\n\t\t\t\tprocessArgument: arg => {\n\t\t\t\t\tif (arg && arg.$mid === MarshalledId.CommentController) {\n\t\t\t\t\t\tconst commentController = this._commentControllers.get(arg.handle);\n\n\t\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\t\treturn arg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn commentController.value;\n\t\t\t\t\t} else if (arg && arg.$mid === MarshalledId.CommentThread) {\n\t\t\t\t\t\tconst commentController = this._commentControllers.get(arg.commentControlHandle);\n\n\t\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\t\treturn arg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.commentThreadHandle);\n\n\t\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\t\treturn arg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn commentThread.value;\n\t\t\t\t\t} else if (arg && (arg.$mid === MarshalledId.CommentThreadReply || arg.$mid === MarshalledId.CommentThreadInstance)) {\n\t\t\t\t\t\tconst commentController = this._commentControllers.get(arg.thread.commentControlHandle);\n\n\t\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\t\treturn arg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.thread.commentThreadHandle);\n\n\t\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\t\treturn arg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (arg.$mid === MarshalledId.CommentThreadInstance) {\n\t\t\t\t\t\t\treturn commentThread.value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tthread: commentThread.value,\n\t\t\t\t\t\t\ttext: arg.text\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (arg && arg.$mid === MarshalledId.CommentNode) {\n\t\t\t\t\t\tconst commentController = this._commentControllers.get(arg.thread.commentControlHandle);\n\n\t\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\t\treturn arg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.thread.commentThreadHandle);\n\n\t\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\t\treturn arg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst commentUniqueId = arg.commentUniqueId;\n\n\t\t\t\t\t\tconst comment = commentThread.getCommentByUniqueId(commentUniqueId);\n\n\t\t\t\t\t\tif (!comment) {\n\t\t\t\t\t\t\treturn arg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn comment;\n\n\t\t\t\t\t} else if (arg && arg.$mid === MarshalledId.CommentThreadNode) {\n\t\t\t\t\t\tconst commentController = this._commentControllers.get(arg.thread.commentControlHandle);\n\n\t\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\t\treturn arg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.thread.commentThreadHandle);\n\n\t\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\t\treturn arg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body: string = arg.text;\n\t\t\t\t\t\tconst commentUniqueId = arg.commentUniqueId;\n\n\t\t\t\t\t\tconst comment = commentThread.getCommentByUniqueId(commentUniqueId);\n\n\t\t\t\t\t\tif (!comment) {\n\t\t\t\t\t\t\treturn arg;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the old comment body was a markdown string, use a markdown string here too.\n\t\t\t\t\t\tif (typeof comment.body === 'string') {\n\t\t\t\t\t\t\tcomment.body = body;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomment.body = new types.MarkdownString(body);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn comment;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn arg;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tcreateCommentController(extension: IExtensionDescription, id: string, label: string): vscode.CommentController {\n\t\t\tconst handle = ExtHostCommentsImpl.handlePool++;\n\t\t\tconst commentController = new ExtHostCommentController(extension, handle, id, label);\n\t\t\tthis._commentControllers.set(commentController.handle, commentController);\n\n\t\t\tconst commentControllers = this._commentControllersByExtension.get(extension.identifier) || [];\n\t\t\tcommentControllers.push(commentController);\n\t\t\tthis._commentControllersByExtension.set(extension.identifier, commentControllers);\n\n\t\t\treturn commentController.value;\n\t\t}\n\n\t\t$createCommentThreadTemplate(commentControllerHandle: number, uriComponents: UriComponents, range: IRange | undefined): void {\n\t\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\t\tif (!commentController) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcommentController.$createCommentThreadTemplate(uriComponents, range);\n\t\t}\n\n\t\tasync $updateCommentThreadTemplate(commentControllerHandle: number, threadHandle: number, range: IRange) {\n\t\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\t\tif (!commentController) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcommentController.$updateCommentThreadTemplate(threadHandle, range);\n\t\t}\n\n\t\t$deleteCommentThread(commentControllerHandle: number, commentThreadHandle: number) {\n\t\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\t\tcommentController?.$deleteCommentThread(commentThreadHandle);\n\t\t}\n\n\t\t$provideCommentingRanges(commentControllerHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<{ ranges: IRange[]; fileComments: boolean } | undefined> {\n\t\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\t\tif (!commentController || !commentController.commentingRangeProvider) {\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\n\t\t\tconst document = documents.getDocument(URI.revive(uriComponents));\n\t\t\treturn asPromise(async () => {\n\t\t\t\tconst rangesResult = await (commentController.commentingRangeProvider as vscode.CommentingRangeProvider2).provideCommentingRanges(document, token);\n\t\t\t\tlet ranges: { ranges: vscode.Range[]; fileComments: boolean } | undefined;\n\t\t\t\tif (Array.isArray(rangesResult)) {\n\t\t\t\t\tranges = {\n\t\t\t\t\t\tranges: rangesResult,\n\t\t\t\t\t\tfileComments: false\n\t\t\t\t\t};\n\t\t\t\t} else if (rangesResult) {\n\t\t\t\t\tranges = {\n\t\t\t\t\t\tranges: rangesResult.ranges || [],\n\t\t\t\t\t\tfileComments: rangesResult.fileComments || false\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tranges = rangesResult ?? undefined;\n\t\t\t\t}\n\t\t\t\treturn ranges;\n\t\t\t}).then(ranges => {\n\t\t\t\tlet convertedResult: { ranges: IRange[]; fileComments: boolean } | undefined = undefined;\n\t\t\t\tif (ranges) {\n\t\t\t\t\tconvertedResult = {\n\t\t\t\t\t\tranges: ranges.ranges.map(x => extHostTypeConverter.Range.from(x)),\n\t\t\t\t\t\tfileComments: ranges.fileComments\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn convertedResult;\n\t\t\t});\n\t\t}\n\n\t\t$toggleReaction(commentControllerHandle: number, threadHandle: number, uri: UriComponents, comment: languages.Comment, reaction: languages.CommentReaction): Promise<void> {\n\t\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\t\tif (!commentController || !commentController.reactionHandler) {\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\n\t\t\treturn asPromise(() => {\n\t\t\t\tconst commentThread = commentController.getCommentThread(threadHandle);\n\t\t\t\tif (commentThread) {\n\t\t\t\t\tconst vscodeComment = commentThread.getCommentByUniqueId(comment.uniqueIdInThread);\n\n\t\t\t\t\tif (commentController !== undefined && vscodeComment) {\n\t\t\t\t\t\tif (commentController.reactionHandler) {\n\t\t\t\t\t\t\treturn commentController.reactionHandler(vscodeComment, convertFromReaction(reaction));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t});\n\t\t}\n\t}\n\ttype CommentThreadModification = Partial<{\n\t\trange: vscode.Range;\n\t\tlabel: string | undefined;\n\t\tcontextValue: string | undefined;\n\t\tcomments: vscode.Comment[];\n\t\tcollapsibleState: vscode.CommentThreadCollapsibleState;\n\t\tcanReply: boolean;\n\t\tstate: vscode.CommentThreadState;\n\t\tisTemplate: boolean;\n\t}>;\n\n\tclass ExtHostCommentThread implements vscode.CommentThread2 {\n\t\tprivate static _handlePool: number = 0;\n\t\treadonly handle = ExtHostCommentThread._handlePool++;\n\t\tpublic commentHandle: number = 0;\n\n\t\tprivate modifications: CommentThreadModification = Object.create(null);\n\n\t\tset threadId(id: string) {\n\t\t\tthis._id = id;\n\t\t}\n\n\t\tget threadId(): string {\n\t\t\treturn this._id!;\n\t\t}\n\n\t\tget id(): string {\n\t\t\treturn this._id!;\n\t\t}\n\n\t\tget resource(): vscode.Uri {\n\t\t\treturn this._uri;\n\t\t}\n\n\t\tget uri(): vscode.Uri {\n\t\t\treturn this._uri;\n\t\t}\n\n\t\tprivate readonly _onDidUpdateCommentThread = new Emitter<void>();\n\t\treadonly onDidUpdateCommentThread = this._onDidUpdateCommentThread.event;\n\n\t\tset range(range: vscode.Range | undefined) {\n\t\t\tif (((range === undefined) !== (this._range === undefined)) || (!range || !this._range || !range.isEqual(this._range))) {\n\t\t\t\tthis._range = range;\n\t\t\t\tthis.modifications.range = range;\n\t\t\t\tthis._onDidUpdateCommentThread.fire();\n\t\t\t}\n\t\t}\n\n\t\tget range(): vscode.Range | undefined {\n\t\t\treturn this._range;\n\t\t}\n\n\t\tprivate _canReply: boolean = true;\n\n\t\tset canReply(state: boolean) {\n\t\t\tif (this._canReply !== state) {\n\t\t\t\tthis._canReply = state;\n\t\t\t\tthis.modifications.canReply = state;\n\t\t\t\tthis._onDidUpdateCommentThread.fire();\n\t\t\t}\n\t\t}\n\t\tget canReply() {\n\t\t\treturn this._canReply;\n\t\t}\n\n\t\tprivate _label: string | undefined;\n\n\t\tget label(): string | undefined {\n\t\t\treturn this._label;\n\t\t}\n\n\t\tset label(label: string | undefined) {\n\t\t\tthis._label = label;\n\t\t\tthis.modifications.label = label;\n\t\t\tthis._onDidUpdateCommentThread.fire();\n\t\t}\n\n\t\tprivate _contextValue: string | undefined;\n\n\t\tget contextValue(): string | undefined {\n\t\t\treturn this._contextValue;\n\t\t}\n\n\t\tset contextValue(context: string | undefined) {\n\t\t\tthis._contextValue = context;\n\t\t\tthis.modifications.contextValue = context;\n\t\t\tthis._onDidUpdateCommentThread.fire();\n\t\t}\n\n\t\tget comments(): vscode.Comment[] {\n\t\t\treturn this._comments;\n\t\t}\n\n\t\tset comments(newComments: vscode.Comment[]) {\n\t\t\tthis._comments = newComments;\n\t\t\tthis.modifications.comments = newComments;\n\t\t\tthis._onDidUpdateCommentThread.fire();\n\t\t}\n\n\t\tprivate _collapseState?: vscode.CommentThreadCollapsibleState;\n\n\t\tget collapsibleState(): vscode.CommentThreadCollapsibleState {\n\t\t\treturn this._collapseState!;\n\t\t}\n\n\t\tset collapsibleState(newState: vscode.CommentThreadCollapsibleState) {\n\t\t\tthis._collapseState = newState;\n\t\t\tthis.modifications.collapsibleState = newState;\n\t\t\tthis._onDidUpdateCommentThread.fire();\n\t\t}\n\n\t\tprivate _state?: vscode.CommentThreadState;\n\n\t\tget state(): vscode.CommentThreadState {\n\t\t\treturn this._state!;\n\t\t}\n\n\t\tset state(newState: vscode.CommentThreadState) {\n\t\t\tthis._state = newState;\n\t\t\tthis.modifications.state = newState;\n\t\t\tthis._onDidUpdateCommentThread.fire();\n\t\t}\n\n\t\tprivate _localDisposables: types.Disposable[];\n\n\t\tprivate _isDiposed: boolean;\n\n\t\tpublic get isDisposed(): boolean {\n\t\t\treturn this._isDiposed;\n\t\t}\n\n\t\tprivate _commentsMap: Map<vscode.Comment, number> = new Map<vscode.Comment, number>();\n\n\t\tprivate _acceptInputDisposables = new MutableDisposable<DisposableStore>();\n\n\t\treadonly value: vscode.CommentThread2;\n\n\t\tconstructor(\n\t\t\tcommentControllerId: string,\n\t\t\tprivate _commentControllerHandle: number,\n\t\t\tprivate _id: string | undefined,\n\t\t\tprivate _uri: vscode.Uri,\n\t\t\tprivate _range: vscode.Range | undefined,\n\t\t\tprivate _comments: vscode.Comment[],\n\t\t\tpublic readonly extensionDescription: IExtensionDescription,\n\t\t\tprivate _isTemplate: boolean\n\t\t) {\n\t\t\tthis._acceptInputDisposables.value = new DisposableStore();\n\n\t\t\tif (this._id === undefined) {\n\t\t\t\tthis._id = `${commentControllerId}.${this.handle}`;\n\t\t\t}\n\n\t\t\tproxy.$createCommentThread(\n\t\t\t\t_commentControllerHandle,\n\t\t\t\tthis.handle,\n\t\t\t\tthis._id,\n\t\t\t\tthis._uri,\n\t\t\t\textHostTypeConverter.Range.from(this._range),\n\t\t\t\textensionDescription.identifier,\n\t\t\t\tthis._isTemplate\n\t\t\t);\n\n\t\t\tthis._localDisposables = [];\n\t\t\tthis._isDiposed = false;\n\n\t\t\tthis._localDisposables.push(this.onDidUpdateCommentThread(() => {\n\t\t\t\tthis.eventuallyUpdateCommentThread();\n\t\t\t}));\n\n\t\t\t// set up comments after ctor to batch update events.\n\t\t\tthis.comments = _comments;\n\n\t\t\tthis._localDisposables.push({\n\t\t\t\tdispose: () => {\n\t\t\t\t\tproxy.$deleteCommentThread(\n\t\t\t\t\t\t_commentControllerHandle,\n\t\t\t\t\t\tthis.handle\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst that = this;\n\t\t\tthis.value = {\n\t\t\t\tget uri() { return that.uri; },\n\t\t\t\tget range() { return that.range; },\n\t\t\t\tset range(value: vscode.Range | undefined) { that.range = value; },\n\t\t\t\tget comments() { return that.comments; },\n\t\t\t\tset comments(value: vscode.Comment[]) { that.comments = value; },\n\t\t\t\tget collapsibleState() { return that.collapsibleState; },\n\t\t\t\tset collapsibleState(value: vscode.CommentThreadCollapsibleState) { that.collapsibleState = value; },\n\t\t\t\tget canReply() { return that.canReply; },\n\t\t\t\tset canReply(state: boolean) { that.canReply = state; },\n\t\t\t\tget contextValue() { return that.contextValue; },\n\t\t\t\tset contextValue(value: string | undefined) { that.contextValue = value; },\n\t\t\t\tget label() { return that.label; },\n\t\t\t\tset label(value: string | undefined) { that.label = value; },\n\t\t\t\tget state() { return that.state; },\n\t\t\t\tset state(value: vscode.CommentThreadState) { that.state = value; },\n\t\t\t\tdispose: () => {\n\t\t\t\t\tthat.dispose();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tprivate updateIsTemplate() {\n\t\t\tif (this._isTemplate) {\n\t\t\t\tthis._isTemplate = false;\n\t\t\t\tthis.modifications.isTemplate = false;\n\t\t\t}\n\t\t}\n\n\t\t@debounce(100)\n\t\teventuallyUpdateCommentThread(): void {\n\t\t\tif (this._isDiposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.updateIsTemplate();\n\n\t\t\tif (!this._acceptInputDisposables.value) {\n\t\t\t\tthis._acceptInputDisposables.value = new DisposableStore();\n\t\t\t}\n\n\t\t\tconst modified = (value: keyof CommentThreadModification): boolean =>\n\t\t\t\tObject.prototype.hasOwnProperty.call(this.modifications, value);\n\n\t\t\tconst formattedModifications: CommentThreadChanges = {};\n\t\t\tif (modified('range')) {\n\t\t\t\tformattedModifications.range = extHostTypeConverter.Range.from(this._range);\n\t\t\t}\n\t\t\tif (modified('label')) {\n\t\t\t\tformattedModifications.label = this.label;\n\t\t\t}\n\t\t\tif (modified('contextValue')) {\n\t\t\t\t/*\n\t\t\t\t * null -> cleared contextValue\n\t\t\t\t * undefined -> no change\n\t\t\t\t */\n\t\t\t\tformattedModifications.contextValue = this.contextValue ?? null;\n\t\t\t}\n\t\t\tif (modified('comments')) {\n\t\t\t\tformattedModifications.comments =\n\t\t\t\t\tthis._comments.map(cmt => convertToDTOComment(this, cmt, this._commentsMap, this.extensionDescription));\n\t\t\t}\n\t\t\tif (modified('collapsibleState')) {\n\t\t\t\tformattedModifications.collapseState = convertToCollapsibleState(this._collapseState);\n\t\t\t}\n\t\t\tif (modified('canReply')) {\n\t\t\t\tformattedModifications.canReply = this.canReply;\n\t\t\t}\n\t\t\tif (modified('state')) {\n\t\t\t\tformattedModifications.state = convertToState(this._state);\n\t\t\t}\n\t\t\tif (modified('isTemplate')) {\n\t\t\t\tformattedModifications.isTemplate = this._isTemplate;\n\t\t\t}\n\t\t\tthis.modifications = {};\n\n\t\t\tproxy.$updateCommentThread(\n\t\t\t\tthis._commentControllerHandle,\n\t\t\t\tthis.handle,\n\t\t\t\tthis._id!,\n\t\t\t\tthis._uri,\n\t\t\t\tformattedModifications\n\t\t\t);\n\t\t}\n\n\t\tgetCommentByUniqueId(uniqueId: number): vscode.Comment | undefined {\n\t\t\tfor (const key of this._commentsMap) {\n\t\t\t\tconst comment = key[0];\n\t\t\t\tconst id = key[1];\n\t\t\t\tif (uniqueId === id) {\n\t\t\t\t\treturn comment;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis._isDiposed = true;\n\t\t\tthis._acceptInputDisposables.dispose();\n\t\t\tthis._localDisposables.forEach(disposable => disposable.dispose());\n\t\t}\n\t}\n\n\ttype ReactionHandler = (comment: vscode.Comment, reaction: vscode.CommentReaction) => Promise<void>;\n\n\tclass ExtHostCommentController {\n\t\tget id(): string {\n\t\t\treturn this._id;\n\t\t}\n\n\t\tget label(): string {\n\t\t\treturn this._label;\n\t\t}\n\n\t\tpublic get handle(): number {\n\t\t\treturn this._handle;\n\t\t}\n\n\t\tprivate _threads: Map<number, ExtHostCommentThread> = new Map<number, ExtHostCommentThread>();\n\n\t\tprivate _commentingRangeProvider?: vscode.CommentingRangeProvider;\n\t\tget commentingRangeProvider(): vscode.CommentingRangeProvider | undefined {\n\t\t\treturn this._commentingRangeProvider;\n\t\t}\n\n\t\tset commentingRangeProvider(provider: vscode.CommentingRangeProvider | undefined) {\n\t\t\tthis._commentingRangeProvider = provider;\n\t\t\tproxy.$updateCommentingRanges(this.handle);\n\t\t}\n\n\t\tprivate _reactionHandler?: ReactionHandler;\n\n\t\tget reactionHandler(): ReactionHandler | undefined {\n\t\t\treturn this._reactionHandler;\n\t\t}\n\n\t\tset reactionHandler(handler: ReactionHandler | undefined) {\n\t\t\tthis._reactionHandler = handler;\n\n\t\t\tproxy.$updateCommentControllerFeatures(this.handle, { reactionHandler: !!handler });\n\t\t}\n\n\t\tprivate _options: languages.CommentOptions | undefined;\n\n\t\tget options() {\n\t\t\treturn this._options;\n\t\t}\n\n\t\tset options(options: languages.CommentOptions | undefined) {\n\t\t\tthis._options = options;\n\n\t\t\tproxy.$updateCommentControllerFeatures(this.handle, { options: this._options });\n\t\t}\n\n\n\t\tprivate _localDisposables: types.Disposable[];\n\t\treadonly value: vscode.CommentController;\n\n\t\tconstructor(\n\t\t\tprivate _extension: IExtensionDescription,\n\t\t\tprivate _handle: number,\n\t\t\tprivate _id: string,\n\t\t\tprivate _label: string\n\t\t) {\n\t\t\tproxy.$registerCommentController(this.handle, _id, _label, this._extension.identifier.value);\n\n\t\t\tconst that = this;\n\t\t\tthis.value = Object.freeze({\n\t\t\t\tid: that.id,\n\t\t\t\tlabel: that.label,\n\t\t\t\tget options() { return that.options; },\n\t\t\t\tset options(options: vscode.CommentOptions | undefined) { that.options = options; },\n\t\t\t\tget commentingRangeProvider(): vscode.CommentingRangeProvider | undefined { return that.commentingRangeProvider; },\n\t\t\t\tset commentingRangeProvider(commentingRangeProvider: vscode.CommentingRangeProvider | undefined) { that.commentingRangeProvider = commentingRangeProvider; },\n\t\t\t\tget reactionHandler(): ReactionHandler | undefined { return that.reactionHandler; },\n\t\t\t\tset reactionHandler(handler: ReactionHandler | undefined) { that.reactionHandler = handler; },\n\t\t\t\tcreateCommentThread(uri: vscode.Uri, range: vscode.Range | undefined, comments: vscode.Comment[]): vscode.CommentThread | vscode.CommentThread2 {\n\t\t\t\t\treturn that.createCommentThread(uri, range, comments).value;\n\t\t\t\t},\n\t\t\t\tdispose: () => { that.dispose(); },\n\t\t\t}) as any; // TODO @alexr00 remove this cast when the proposed API is stable\n\n\t\t\tthis._localDisposables = [];\n\t\t\tthis._localDisposables.push({\n\t\t\t\tdispose: () => {\n\t\t\t\t\tproxy.$unregisterCommentController(this.handle);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tcreateCommentThread(resource: vscode.Uri, range: vscode.Range | undefined, comments: vscode.Comment[]): ExtHostCommentThread {\n\t\t\tif (range === undefined) {\n\t\t\t\tcheckProposedApiEnabled(this._extension, 'fileComments');\n\t\t\t}\n\t\t\tconst commentThread = new ExtHostCommentThread(this.id, this.handle, undefined, resource, range, comments, this._extension, false);\n\t\t\tthis._threads.set(commentThread.handle, commentThread);\n\t\t\treturn commentThread;\n\t\t}\n\n\t\t$createCommentThreadTemplate(uriComponents: UriComponents, range: IRange | undefined): ExtHostCommentThread {\n\t\t\tconst commentThread = new ExtHostCommentThread(this.id, this.handle, undefined, URI.revive(uriComponents), extHostTypeConverter.Range.to(range), [], this._extension, true);\n\t\t\tcommentThread.collapsibleState = languages.CommentThreadCollapsibleState.Expanded;\n\t\t\tthis._threads.set(commentThread.handle, commentThread);\n\t\t\treturn commentThread;\n\t\t}\n\n\t\t$updateCommentThreadTemplate(threadHandle: number, range: IRange): void {\n\t\t\tconst thread = this._threads.get(threadHandle);\n\t\t\tif (thread) {\n\t\t\t\tthread.range = extHostTypeConverter.Range.to(range);\n\t\t\t}\n\t\t}\n\n\t\t$deleteCommentThread(threadHandle: number): void {\n\t\t\tconst thread = this._threads.get(threadHandle);\n\n\t\t\tthread?.dispose();\n\n\t\t\tthis._threads.delete(threadHandle);\n\t\t}\n\n\t\tgetCommentThread(handle: number): ExtHostCommentThread | undefined {\n\t\t\treturn this._threads.get(handle);\n\t\t}\n\n\t\tdispose(): void {\n\t\t\tthis._threads.forEach(value => {\n\t\t\t\tvalue.dispose();\n\t\t\t});\n\n\t\t\tthis._localDisposables.forEach(disposable => disposable.dispose());\n\t\t}\n\t}\n\n\tfunction convertToDTOComment(thread: ExtHostCommentThread, vscodeComment: vscode.Comment, commentsMap: Map<vscode.Comment, number>, extension: IExtensionDescription): CommentChanges {\n\t\tlet commentUniqueId = commentsMap.get(vscodeComment)!;\n\t\tif (!commentUniqueId) {\n\t\t\tcommentUniqueId = ++thread.commentHandle;\n\t\t\tcommentsMap.set(vscodeComment, commentUniqueId);\n\t\t}\n\n\t\tif (vscodeComment.state !== undefined) {\n\t\t\tcheckProposedApiEnabled(extension, 'commentsDraftState');\n\t\t}\n\n\t\treturn {\n\t\t\tmode: vscodeComment.mode,\n\t\t\tcontextValue: vscodeComment.contextValue,\n\t\t\tuniqueIdInThread: commentUniqueId,\n\t\t\tbody: (typeof vscodeComment.body === 'string') ? vscodeComment.body : extHostTypeConverter.MarkdownString.from(vscodeComment.body),\n\t\t\tuserName: vscodeComment.author.name,\n\t\t\tuserIconPath: vscodeComment.author.iconPath,\n\t\t\tlabel: vscodeComment.label,\n\t\t\tcommentReactions: vscodeComment.reactions ? vscodeComment.reactions.map(reaction => convertToReaction(reaction)) : undefined,\n\t\t\tstate: vscodeComment.state,\n\t\t\ttimestamp: vscodeComment.timestamp?.toJSON()\n\t\t};\n\t}\n\n\tfunction convertToReaction(reaction: vscode.CommentReaction): languages.CommentReaction {\n\t\treturn {\n\t\t\tlabel: reaction.label,\n\t\t\ticonPath: reaction.iconPath ? extHostTypeConverter.pathOrURIToURI(reaction.iconPath) : undefined,\n\t\t\tcount: reaction.count,\n\t\t\thasReacted: reaction.authorHasReacted,\n\t\t};\n\t}\n\n\tfunction convertFromReaction(reaction: languages.CommentReaction): vscode.CommentReaction {\n\t\treturn {\n\t\t\tlabel: reaction.label || '',\n\t\t\tcount: reaction.count || 0,\n\t\t\ticonPath: reaction.iconPath ? URI.revive(reaction.iconPath) : '',\n\t\t\tauthorHasReacted: reaction.hasReacted || false\n\t\t};\n\t}\n\n\tfunction convertToCollapsibleState(kind: vscode.CommentThreadCollapsibleState | undefined): languages.CommentThreadCollapsibleState {\n\t\tif (kind !== undefined) {\n\t\t\tswitch (kind) {\n\t\t\t\tcase types.CommentThreadCollapsibleState.Expanded:\n\t\t\t\t\treturn languages.CommentThreadCollapsibleState.Expanded;\n\t\t\t\tcase types.CommentThreadCollapsibleState.Collapsed:\n\t\t\t\t\treturn languages.CommentThreadCollapsibleState.Collapsed;\n\t\t\t}\n\t\t}\n\t\treturn languages.CommentThreadCollapsibleState.Collapsed;\n\t}\n\n\tfunction convertToState(kind: vscode.CommentThreadState | undefined): languages.CommentThreadState {\n\t\tif (kind !== undefined) {\n\t\t\tswitch (kind) {\n\t\t\t\tcase types.CommentThreadState.Unresolved:\n\t\t\t\t\treturn languages.CommentThreadState.Unresolved;\n\t\t\t\tcase types.CommentThreadState.Resolved:\n\t\t\t\t\treturn languages.CommentThreadState.Resolved;\n\t\t\t}\n\t\t}\n\t\treturn languages.CommentThreadState.Unresolved;\n\t}\n\n\treturn new ExtHostCommentsImpl();\n}\n"]}