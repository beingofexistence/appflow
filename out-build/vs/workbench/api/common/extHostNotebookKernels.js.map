{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostNotebookKernels.ts"],"names":[],"mappings":"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","file":"extHostNotebookKernels.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asArray } from 'vs/base/common/arrays';\nimport { DeferredPromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Cache } from 'vs/workbench/api/common/cache';\nimport { ExtHostNotebookKernelsShape, ICellExecuteUpdateDto, IMainContext, INotebookKernelDto2, MainContext, MainThreadNotebookKernelsShape, NotebookOutputDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { ApiCommand, ApiCommandArgument, ApiCommandResult, ExtHostCommands } from 'vs/workbench/api/common/extHostCommands';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { ExtHostNotebookController } from 'vs/workbench/api/common/extHostNotebook';\nimport { ExtHostCell, ExtHostNotebookDocument } from 'vs/workbench/api/common/extHostNotebookDocument';\nimport * as extHostTypeConverters from 'vs/workbench/api/common/extHostTypeConverters';\nimport { NotebookCellExecutionState as ExtHostNotebookCellExecutionState, NotebookCellOutput, NotebookControllerAffinity2 } from 'vs/workbench/api/common/extHostTypes';\nimport { asWebviewUri } from 'vs/workbench/contrib/webview/common/webview';\nimport { INotebookKernelSourceAction, NotebookCellExecutionState } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { CellExecutionUpdateType } from 'vs/workbench/contrib/notebook/common/notebookExecutionService';\nimport { checkProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\nimport { SerializableObjectWithBuffers } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport * as vscode from 'vscode';\n\ninterface IKernelData {\n\textensionId: ExtensionIdentifier;\n\tcontroller: vscode.NotebookController;\n\tonDidChangeSelection: Emitter<{ selected: boolean; notebook: vscode.NotebookDocument }>;\n\tonDidReceiveMessage: Emitter<{ editor: vscode.NotebookEditor; message: any }>;\n\tassociatedNotebooks: ResourceMap<boolean>;\n}\n\ntype ExtHostSelectKernelArgs = ControllerInfo | { notebookEditor: vscode.NotebookEditor } | ControllerInfo & { notebookEditor: vscode.NotebookEditor } | undefined;\ntype SelectKernelReturnArgs = ControllerInfo | { notebookEditorId: string } | ControllerInfo & { notebookEditorId: string } | undefined;\ntype ControllerInfo = { id: string; extension: string };\n\n\nexport class ExtHostNotebookKernels implements ExtHostNotebookKernelsShape {\n\n\tprivate readonly _proxy: MainThreadNotebookKernelsShape;\n\tprivate readonly _activeExecutions = new ResourceMap<NotebookCellExecutionTask>();\n\tprivate readonly _activeNotebookExecutions = new ResourceMap<[NotebookExecutionTask, IDisposable]>();\n\n\tprivate _kernelDetectionTask = new Map<number, vscode.NotebookControllerDetectionTask>();\n\tprivate _kernelDetectionTaskHandlePool: number = 0;\n\n\tprivate _kernelSourceActionProviders = new Map<number, vscode.NotebookKernelSourceActionProvider>();\n\tprivate _kernelSourceActionProviderHandlePool: number = 0;\n\tprivate _kernelSourceActionProviderCache = new Cache<IDisposable>('NotebookKernelSourceActionProviderCache');\n\n\tprivate readonly _kernelData = new Map<number, IKernelData>();\n\tprivate _handlePool: number = 0;\n\n\tprivate readonly _onDidChangeCellExecutionState = new Emitter<vscode.NotebookCellExecutionStateChangeEvent>();\n\treadonly onDidChangeNotebookCellExecutionState = this._onDidChangeCellExecutionState.event;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _initData: IExtHostInitDataService,\n\t\tprivate readonly _extHostNotebook: ExtHostNotebookController,\n\t\tprivate _commands: ExtHostCommands,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadNotebookKernels);\n\n\t\t// todo@rebornix @joyceerhl: move to APICommands once stabilized.\n\t\tconst selectKernelApiCommand = new ApiCommand(\n\t\t\t'notebook.selectKernel',\n\t\t\t'_notebook.selectKernel',\n\t\t\t'Trigger kernel picker for specified notebook editor widget',\n\t\t\t[\n\t\t\t\tnew ApiCommandArgument<ExtHostSelectKernelArgs, SelectKernelReturnArgs>('options', 'Select kernel options', v => true, (v: ExtHostSelectKernelArgs) => {\n\t\t\t\t\tif (v && 'notebookEditor' in v && 'id' in v) {\n\t\t\t\t\t\tconst notebookEditorId = this._extHostNotebook.getIdByEditor(v.notebookEditor);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: v.id, extension: v.extension, notebookEditorId\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (v && 'notebookEditor' in v) {\n\t\t\t\t\t\tconst notebookEditorId = this._extHostNotebook.getIdByEditor(v.notebookEditor);\n\t\t\t\t\t\tif (notebookEditorId === undefined) {\n\t\t\t\t\t\t\tthrow new Error(`Cannot invoke 'notebook.selectKernel' for unrecognized notebook editor ${v.notebookEditor.notebook.uri.toString()}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { notebookEditorId };\n\t\t\t\t\t}\n\t\t\t\t\treturn v;\n\t\t\t\t})\n\t\t\t],\n\t\t\tApiCommandResult.Void);\n\t\tthis._commands.registerApiCommand(selectKernelApiCommand);\n\t}\n\n\tcreateNotebookController(extension: IExtensionDescription, id: string, viewType: string, label: string, handler?: (cells: vscode.NotebookCell[], notebook: vscode.NotebookDocument, controller: vscode.NotebookController) => void | Thenable<void>, preloads?: vscode.NotebookRendererScript[]): vscode.NotebookController {\n\n\t\tfor (const data of this._kernelData.values()) {\n\t\t\tif (data.controller.id === id && ExtensionIdentifier.equals(extension.identifier, data.extensionId)) {\n\t\t\t\tthrow new Error(`notebook controller with id '${id}' ALREADY exist`);\n\t\t\t}\n\t\t}\n\n\n\t\tconst handle = this._handlePool++;\n\t\tconst that = this;\n\n\t\tthis._logService.trace(`NotebookController[${handle}], CREATED by ${extension.identifier.value}, ${id}`);\n\n\t\tconst _defaultExecutHandler = () => console.warn(`NO execute handler from notebook controller '${data.id}' of extension: '${extension.identifier}'`);\n\n\t\tlet isDisposed = false;\n\n\t\tconst onDidChangeSelection = new Emitter<{ selected: boolean; notebook: vscode.NotebookDocument }>();\n\t\tconst onDidReceiveMessage = new Emitter<{ editor: vscode.NotebookEditor; message: any }>();\n\n\t\tconst data: INotebookKernelDto2 = {\n\t\t\tid: createKernelId(extension.identifier, id),\n\t\t\tnotebookType: viewType,\n\t\t\textensionId: extension.identifier,\n\t\t\textensionLocation: extension.extensionLocation,\n\t\t\tlabel: label || extension.identifier.value,\n\t\t\tpreloads: preloads ? preloads.map(extHostTypeConverters.NotebookRendererScript.from) : []\n\t\t};\n\n\t\t//\n\t\tlet _executeHandler = handler ?? _defaultExecutHandler;\n\t\tlet _interruptHandler: ((this: vscode.NotebookController, notebook: vscode.NotebookDocument) => void | Thenable<void>) | undefined;\n\n\t\tthis._proxy.$addKernel(handle, data).catch(err => {\n\t\t\t// this can happen when a kernel with that ID is already registered\n\t\t\tconsole.log(err);\n\t\t\tisDisposed = true;\n\t\t});\n\n\t\t// update: all setters write directly into the dto object\n\t\t// and trigger an update. the actual update will only happen\n\t\t// once per event loop execution\n\t\tlet tokenPool = 0;\n\t\tconst _update = () => {\n\t\t\tif (isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst myToken = ++tokenPool;\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (myToken === tokenPool) {\n\t\t\t\t\tthis._proxy.$updateKernel(handle, data);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// notebook documents that are associated to this controller\n\t\tconst associatedNotebooks = new ResourceMap<boolean>();\n\n\t\tconst controller: vscode.NotebookController = {\n\t\t\tget id() { return id; },\n\t\t\tget notebookType() { return data.notebookType; },\n\t\t\tonDidChangeSelectedNotebooks: onDidChangeSelection.event,\n\t\t\tget label() {\n\t\t\t\treturn data.label;\n\t\t\t},\n\t\t\tset label(value) {\n\t\t\t\tdata.label = value ?? extension.displayName ?? extension.name;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget detail() {\n\t\t\t\treturn data.detail ?? '';\n\t\t\t},\n\t\t\tset detail(value) {\n\t\t\t\tdata.detail = value;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget description() {\n\t\t\t\treturn data.description ?? '';\n\t\t\t},\n\t\t\tset description(value) {\n\t\t\t\tdata.description = value;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget supportedLanguages() {\n\t\t\t\treturn data.supportedLanguages;\n\t\t\t},\n\t\t\tset supportedLanguages(value) {\n\t\t\t\tdata.supportedLanguages = value;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget supportsExecutionOrder() {\n\t\t\t\treturn data.supportsExecutionOrder ?? false;\n\t\t\t},\n\t\t\tset supportsExecutionOrder(value) {\n\t\t\t\tdata.supportsExecutionOrder = value;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget rendererScripts() {\n\t\t\t\treturn data.preloads ? data.preloads.map(extHostTypeConverters.NotebookRendererScript.to) : [];\n\t\t\t},\n\t\t\tget executeHandler() {\n\t\t\t\treturn _executeHandler;\n\t\t\t},\n\t\t\tset executeHandler(value) {\n\t\t\t\t_executeHandler = value ?? _defaultExecutHandler;\n\t\t\t},\n\t\t\tget interruptHandler() {\n\t\t\t\treturn _interruptHandler;\n\t\t\t},\n\t\t\tset interruptHandler(value) {\n\t\t\t\t_interruptHandler = value;\n\t\t\t\tdata.supportsInterrupt = Boolean(value);\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tcreateNotebookCellExecution(cell) {\n\t\t\t\tif (isDisposed) {\n\t\t\t\t\tthrow new Error('notebook controller is DISPOSED');\n\t\t\t\t}\n\t\t\t\tif (!associatedNotebooks.has(cell.notebook.uri)) {\n\t\t\t\t\tthat._logService.trace(`NotebookController[${handle}] NOT associated to notebook, associated to THESE notebooks:`, Array.from(associatedNotebooks.keys()).map(u => u.toString()));\n\t\t\t\t\tthrow new Error(`notebook controller is NOT associated to notebook: ${cell.notebook.uri.toString()}`);\n\t\t\t\t}\n\t\t\t\treturn that._createNotebookCellExecution(cell, createKernelId(extension.identifier, this.id));\n\t\t\t},\n\t\t\tcreateNotebookExecution(notebook) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'notebookExecution');\n\t\t\t\tif (isDisposed) {\n\t\t\t\t\tthrow new Error('notebook controller is DISPOSED');\n\t\t\t\t}\n\t\t\t\tif (!associatedNotebooks.has(notebook.uri)) {\n\t\t\t\t\tthat._logService.trace(`NotebookController[${handle}] NOT associated to notebook, associated to THESE notebooks:`, Array.from(associatedNotebooks.keys()).map(u => u.toString()));\n\t\t\t\t\tthrow new Error(`notebook controller is NOT associated to notebook: ${notebook.uri.toString()}`);\n\t\t\t\t}\n\t\t\t\treturn that._createNotebookExecution(notebook, createKernelId(extension.identifier, this.id));\n\t\t\t},\n\t\t\tdispose: () => {\n\t\t\t\tif (!isDisposed) {\n\t\t\t\t\tthis._logService.trace(`NotebookController[${handle}], DISPOSED`);\n\t\t\t\t\tisDisposed = true;\n\t\t\t\t\tthis._kernelData.delete(handle);\n\t\t\t\t\tonDidChangeSelection.dispose();\n\t\t\t\t\tonDidReceiveMessage.dispose();\n\t\t\t\t\tthis._proxy.$removeKernel(handle);\n\t\t\t\t}\n\t\t\t},\n\t\t\t// --- priority\n\t\t\tupdateNotebookAffinity(notebook, priority) {\n\t\t\t\tif (priority === NotebookControllerAffinity2.Hidden) {\n\t\t\t\t\t// This api only adds an extra enum value, the function is the same, so just gate on the new value being passed\n\t\t\t\t\t// for proposedAPI check.\n\t\t\t\t\tcheckProposedApiEnabled(extension, 'notebookControllerAffinityHidden');\n\t\t\t\t}\n\t\t\t\tthat._proxy.$updateNotebookPriority(handle, notebook.uri, priority);\n\t\t\t},\n\t\t\t// --- ipc\n\t\t\tonDidReceiveMessage: onDidReceiveMessage.event,\n\t\t\tpostMessage(message, editor) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'notebookMessaging');\n\t\t\t\treturn that._proxy.$postMessage(handle, editor && that._extHostNotebook.getIdByEditor(editor), message);\n\t\t\t},\n\t\t\tasWebviewUri(uri: URI) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'notebookMessaging');\n\t\t\t\treturn asWebviewUri(uri, that._initData.remote);\n\t\t\t},\n\t\t};\n\n\t\tthis._kernelData.set(handle, {\n\t\t\textensionId: extension.identifier,\n\t\t\tcontroller,\n\t\t\tonDidReceiveMessage,\n\t\t\tonDidChangeSelection,\n\t\t\tassociatedNotebooks\n\t\t});\n\t\treturn controller;\n\t}\n\n\tgetIdByController(controller: vscode.NotebookController) {\n\t\tfor (const [_, candidate] of this._kernelData) {\n\t\t\tif (candidate.controller === controller) {\n\t\t\t\treturn createKernelId(candidate.extensionId, controller.id);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tcreateNotebookControllerDetectionTask(extension: IExtensionDescription, viewType: string): vscode.NotebookControllerDetectionTask {\n\t\tconst handle = this._kernelDetectionTaskHandlePool++;\n\t\tconst that = this;\n\n\t\tthis._logService.trace(`NotebookControllerDetectionTask[${handle}], CREATED by ${extension.identifier.value}`);\n\t\tthis._proxy.$addKernelDetectionTask(handle, viewType);\n\n\t\tconst detectionTask: vscode.NotebookControllerDetectionTask = {\n\t\t\tdispose: () => {\n\t\t\t\tthis._kernelDetectionTask.delete(handle);\n\t\t\t\tthat._proxy.$removeKernelDetectionTask(handle);\n\t\t\t}\n\t\t};\n\n\t\tthis._kernelDetectionTask.set(handle, detectionTask);\n\t\treturn detectionTask;\n\t}\n\n\tregisterKernelSourceActionProvider(extension: IExtensionDescription, viewType: string, provider: vscode.NotebookKernelSourceActionProvider) {\n\t\tconst handle = this._kernelSourceActionProviderHandlePool++;\n\t\tconst eventHandle = typeof provider.onDidChangeNotebookKernelSourceActions === 'function' ? handle : undefined;\n\t\tconst that = this;\n\n\t\tthis._kernelSourceActionProviders.set(handle, provider);\n\t\tthis._logService.trace(`NotebookKernelSourceActionProvider[${handle}], CREATED by ${extension.identifier.value}`);\n\t\tthis._proxy.$addKernelSourceActionProvider(handle, handle, viewType);\n\n\t\tlet subscription: vscode.Disposable | undefined;\n\t\tif (eventHandle !== undefined) {\n\t\t\tsubscription = provider.onDidChangeNotebookKernelSourceActions!(_ => this._proxy.$emitNotebookKernelSourceActionsChangeEvent(eventHandle));\n\t\t}\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._kernelSourceActionProviders.delete(handle);\n\t\t\t\tthat._proxy.$removeKernelSourceActionProvider(handle, handle);\n\t\t\t\tsubscription?.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\tasync $provideKernelSourceActions(handle: number, token: CancellationToken): Promise<INotebookKernelSourceAction[]> {\n\t\tconst provider = this._kernelSourceActionProviders.get(handle);\n\t\tif (provider) {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tthis._kernelSourceActionProviderCache.add([disposables]);\n\t\t\tconst ret = await provider.provideNotebookKernelSourceActions(token);\n\t\t\treturn (ret ?? []).map(item => extHostTypeConverters.NotebookKernelSourceAction.from(item, this._commands.converter, disposables));\n\t\t}\n\t\treturn [];\n\t}\n\n\t$acceptNotebookAssociation(handle: number, uri: UriComponents, value: boolean): void {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (obj) {\n\t\t\t// update data structure\n\t\t\tconst notebook = this._extHostNotebook.getNotebookDocument(URI.revive(uri))!;\n\t\t\tif (value) {\n\t\t\t\tobj.associatedNotebooks.set(notebook.uri, true);\n\t\t\t} else {\n\t\t\t\tobj.associatedNotebooks.delete(notebook.uri);\n\t\t\t}\n\t\t\tthis._logService.trace(`NotebookController[${handle}] ASSOCIATE notebook`, notebook.uri.toString(), value);\n\t\t\t// send event\n\t\t\tobj.onDidChangeSelection.fire({\n\t\t\t\tselected: value,\n\t\t\t\tnotebook: notebook.apiNotebook\n\t\t\t});\n\t\t}\n\t}\n\n\tasync $executeCells(handle: number, uri: UriComponents, handles: number[]): Promise<void> {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (!obj) {\n\t\t\t// extension can dispose kernels in the meantime\n\t\t\treturn;\n\t\t}\n\t\tconst document = this._extHostNotebook.getNotebookDocument(URI.revive(uri));\n\t\tconst cells: vscode.NotebookCell[] = [];\n\t\tfor (const cellHandle of handles) {\n\t\t\tconst cell = document.getCell(cellHandle);\n\t\t\tif (cell) {\n\t\t\t\tcells.push(cell.apiCell);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis._logService.trace(`NotebookController[${handle}] EXECUTE cells`, document.uri.toString(), cells.length);\n\t\t\tawait obj.controller.executeHandler.call(obj.controller, cells, document.apiNotebook, obj.controller);\n\t\t} catch (err) {\n\t\t\t//\n\t\t\tthis._logService.error(`NotebookController[${handle}] execute cells FAILED`, err);\n\t\t\tconsole.error(err);\n\t\t}\n\t}\n\n\tasync $cancelCells(handle: number, uri: UriComponents, handles: number[]): Promise<void> {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (!obj) {\n\t\t\t// extension can dispose kernels in the meantime\n\t\t\treturn;\n\t\t}\n\n\t\t// cancel or interrupt depends on the controller. When an interrupt handler is used we\n\t\t// don't trigger the cancelation token of executions.\n\t\tconst document = this._extHostNotebook.getNotebookDocument(URI.revive(uri));\n\t\tif (obj.controller.interruptHandler) {\n\t\t\tawait obj.controller.interruptHandler.call(obj.controller, document.apiNotebook);\n\n\t\t} else {\n\t\t\tfor (const cellHandle of handles) {\n\t\t\t\tconst cell = document.getCell(cellHandle);\n\t\t\t\tif (cell) {\n\t\t\t\t\tthis._activeExecutions.get(cell.uri)?.cancel();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (obj.controller.interruptHandler) {\n\t\t\t// If we're interrupting all cells, we also need to cancel the notebook level execution.\n\t\t\tconst items = this._activeNotebookExecutions.get(document.uri);\n\t\t\tif (handles.length && Array.isArray(items) && items.length) {\n\t\t\t\titems.forEach(d => d.dispose());\n\t\t\t}\n\t\t}\n\t}\n\n\t$acceptKernelMessageFromRenderer(handle: number, editorId: string, message: any): void {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (!obj) {\n\t\t\t// extension can dispose kernels in the meantime\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this._extHostNotebook.getEditorById(editorId);\n\t\tobj.onDidReceiveMessage.fire(Object.freeze({ editor: editor.apiEditor, message }));\n\t}\n\n\t$cellExecutionChanged(uri: UriComponents, cellHandle: number, state: NotebookCellExecutionState | undefined): void {\n\t\tconst document = this._extHostNotebook.getNotebookDocument(URI.revive(uri));\n\t\tconst cell = document.getCell(cellHandle);\n\t\tif (cell) {\n\t\t\tconst newState = state ? extHostTypeConverters.NotebookCellExecutionState.to(state) : ExtHostNotebookCellExecutionState.Idle;\n\t\t\tif (newState !== undefined) {\n\t\t\t\tthis._onDidChangeCellExecutionState.fire({\n\t\t\t\t\tcell: cell.apiCell,\n\t\t\t\t\tstate: newState\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t// ---\n\n\t_createNotebookCellExecution(cell: vscode.NotebookCell, controllerId: string): vscode.NotebookCellExecution {\n\t\tif (cell.index < 0) {\n\t\t\tthrow new Error('CANNOT execute cell that has been REMOVED from notebook');\n\t\t}\n\t\tconst notebook = this._extHostNotebook.getNotebookDocument(cell.notebook.uri);\n\t\tconst cellObj = notebook.getCellFromApiCell(cell);\n\t\tif (!cellObj) {\n\t\t\tthrow new Error('invalid cell');\n\t\t}\n\t\tif (this._activeExecutions.has(cellObj.uri)) {\n\t\t\tthrow new Error(`duplicate execution for ${cellObj.uri}`);\n\t\t}\n\t\tconst execution = new NotebookCellExecutionTask(controllerId, cellObj, this._proxy);\n\t\tthis._activeExecutions.set(cellObj.uri, execution);\n\t\tconst listener = execution.onDidChangeState(() => {\n\t\t\tif (execution.state === NotebookCellExecutionTaskState.Resolved) {\n\t\t\t\texecution.dispose();\n\t\t\t\tlistener.dispose();\n\t\t\t\tthis._activeExecutions.delete(cellObj.uri);\n\t\t\t}\n\t\t});\n\t\treturn execution.asApiObject();\n\t}\n\n\t// ---\n\n\t_createNotebookExecution(nb: vscode.NotebookDocument, controllerId: string): vscode.NotebookExecution {\n\t\tconst notebook = this._extHostNotebook.getNotebookDocument(nb.uri);\n\t\tconst runningCell = nb.getCells().find(cell => {\n\t\t\tconst apiCell = notebook.getCellFromApiCell(cell);\n\t\t\treturn apiCell && this._activeExecutions.has(apiCell.uri);\n\t\t});\n\t\tif (runningCell) {\n\t\t\tthrow new Error(`duplicate cell execution for ${runningCell.document.uri}`);\n\t\t}\n\t\tif (this._activeNotebookExecutions.has(notebook.uri)) {\n\t\t\tthrow new Error(`duplicate notebook execution for ${notebook.uri}`);\n\t\t}\n\t\tconst execution = new NotebookExecutionTask(controllerId, notebook, this._proxy);\n\t\tconst listener = execution.onDidChangeState(() => {\n\t\t\tif (execution.state === NotebookExecutionTaskState.Resolved) {\n\t\t\t\texecution.dispose();\n\t\t\t\tlistener.dispose();\n\t\t\t\tthis._activeNotebookExecutions.delete(notebook.uri);\n\t\t\t}\n\t\t});\n\t\tthis._activeNotebookExecutions.set(notebook.uri, [execution, listener]);\n\t\treturn execution.asApiObject();\n\t}\n}\n\n\nenum NotebookCellExecutionTaskState {\n\tInit,\n\tStarted,\n\tResolved\n}\n\nclass NotebookCellExecutionTask extends Disposable {\n\tprivate static HANDLE = 0;\n\tprivate _handle = NotebookCellExecutionTask.HANDLE++;\n\n\tprivate _onDidChangeState = new Emitter<void>();\n\treadonly onDidChangeState = this._onDidChangeState.event;\n\n\tprivate _state = NotebookCellExecutionTaskState.Init;\n\tget state(): NotebookCellExecutionTaskState { return this._state; }\n\n\tprivate readonly _tokenSource = this._register(new CancellationTokenSource());\n\n\tprivate readonly _collector: TimeoutBasedCollector<ICellExecuteUpdateDto>;\n\n\tprivate _executionOrder: number | undefined;\n\n\tconstructor(\n\t\tcontrollerId: string,\n\t\tprivate readonly _cell: ExtHostCell,\n\t\tprivate readonly _proxy: MainThreadNotebookKernelsShape\n\t) {\n\t\tsuper();\n\n\t\tthis._collector = new TimeoutBasedCollector(10, updates => this.update(updates));\n\n\t\tthis._executionOrder = _cell.internalMetadata.executionOrder;\n\t\tthis._proxy.$createExecution(this._handle, controllerId, this._cell.notebook.uri, this._cell.handle);\n\t}\n\n\tcancel(): void {\n\t\tthis._tokenSource.cancel();\n\t}\n\n\tprivate async updateSoon(update: ICellExecuteUpdateDto): Promise<void> {\n\t\tawait this._collector.addItem(update);\n\t}\n\n\tprivate async update(update: ICellExecuteUpdateDto | ICellExecuteUpdateDto[]): Promise<void> {\n\t\tconst updates = Array.isArray(update) ? update : [update];\n\t\treturn this._proxy.$updateExecution(this._handle, new SerializableObjectWithBuffers(updates));\n\t}\n\n\tprivate verifyStateForOutput() {\n\t\tif (this._state === NotebookCellExecutionTaskState.Init) {\n\t\t\tthrow new Error('Must call start before modifying cell output');\n\t\t}\n\n\t\tif (this._state === NotebookCellExecutionTaskState.Resolved) {\n\t\t\tthrow new Error('Cannot modify cell output after calling resolve');\n\t\t}\n\t}\n\n\tprivate cellIndexToHandle(cellOrCellIndex: vscode.NotebookCell | undefined): number {\n\t\tlet cell: ExtHostCell | undefined = this._cell;\n\t\tif (cellOrCellIndex) {\n\t\t\tcell = this._cell.notebook.getCellFromApiCell(cellOrCellIndex);\n\t\t}\n\t\tif (!cell) {\n\t\t\tthrow new Error('INVALID cell');\n\t\t}\n\t\treturn cell.handle;\n\t}\n\n\tprivate validateAndConvertOutputs(items: vscode.NotebookCellOutput[]): NotebookOutputDto[] {\n\t\treturn items.map(output => {\n\t\t\tconst newOutput = NotebookCellOutput.ensureUniqueMimeTypes(output.items, true);\n\t\t\tif (newOutput === output.items) {\n\t\t\t\treturn extHostTypeConverters.NotebookCellOutput.from(output);\n\t\t\t}\n\t\t\treturn extHostTypeConverters.NotebookCellOutput.from({\n\t\t\t\titems: newOutput,\n\t\t\t\tid: output.id,\n\t\t\t\tmetadata: output.metadata\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async updateOutputs(outputs: vscode.NotebookCellOutput | vscode.NotebookCellOutput[], cell: vscode.NotebookCell | undefined, append: boolean): Promise<void> {\n\t\tconst handle = this.cellIndexToHandle(cell);\n\t\tconst outputDtos = this.validateAndConvertOutputs(asArray(outputs));\n\t\treturn this.updateSoon(\n\t\t\t{\n\t\t\t\teditType: CellExecutionUpdateType.Output,\n\t\t\t\tcellHandle: handle,\n\t\t\t\tappend,\n\t\t\t\toutputs: outputDtos\n\t\t\t});\n\t}\n\n\tprivate async updateOutputItems(items: vscode.NotebookCellOutputItem | vscode.NotebookCellOutputItem[], output: vscode.NotebookCellOutput, append: boolean): Promise<void> {\n\t\titems = NotebookCellOutput.ensureUniqueMimeTypes(asArray(items), true);\n\t\treturn this.updateSoon({\n\t\t\teditType: CellExecutionUpdateType.OutputItems,\n\t\t\titems: items.map(extHostTypeConverters.NotebookCellOutputItem.from),\n\t\t\toutputId: output.id,\n\t\t\tappend\n\t\t});\n\t}\n\n\tasApiObject(): vscode.NotebookCellExecution {\n\t\tconst that = this;\n\t\tconst result: vscode.NotebookCellExecution = {\n\t\t\tget token() { return that._tokenSource.token; },\n\t\t\tget cell() { return that._cell.apiCell; },\n\t\t\tget executionOrder() { return that._executionOrder; },\n\t\t\tset executionOrder(v: number | undefined) {\n\t\t\t\tthat._executionOrder = v;\n\t\t\t\tthat.update([{\n\t\t\t\t\teditType: CellExecutionUpdateType.ExecutionState,\n\t\t\t\t\texecutionOrder: that._executionOrder\n\t\t\t\t}]);\n\t\t\t},\n\n\t\t\tstart(startTime?: number): void {\n\t\t\t\tif (that._state === NotebookCellExecutionTaskState.Resolved || that._state === NotebookCellExecutionTaskState.Started) {\n\t\t\t\t\tthrow new Error('Cannot call start again');\n\t\t\t\t}\n\n\t\t\t\tthat._state = NotebookCellExecutionTaskState.Started;\n\t\t\t\tthat._onDidChangeState.fire();\n\n\t\t\t\tthat.update({\n\t\t\t\t\teditType: CellExecutionUpdateType.ExecutionState,\n\t\t\t\t\trunStartTime: startTime\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tend(success: boolean | undefined, endTime?: number): void {\n\t\t\t\tif (that._state === NotebookCellExecutionTaskState.Resolved) {\n\t\t\t\t\tthrow new Error('Cannot call resolve twice');\n\t\t\t\t}\n\n\t\t\t\tthat._state = NotebookCellExecutionTaskState.Resolved;\n\t\t\t\tthat._onDidChangeState.fire();\n\n\t\t\t\t// The last update needs to be ordered correctly and applied immediately,\n\t\t\t\t// so we use updateSoon and immediately flush.\n\t\t\t\tthat._collector.flush();\n\n\t\t\t\tthat._proxy.$completeExecution(that._handle, new SerializableObjectWithBuffers({\n\t\t\t\t\trunEndTime: endTime,\n\t\t\t\t\tlastRunSuccess: success\n\t\t\t\t}));\n\t\t\t},\n\n\t\t\tclearOutput(cell?: vscode.NotebookCell): Thenable<void> {\n\t\t\t\tthat.verifyStateForOutput();\n\t\t\t\treturn that.updateOutputs([], cell, false);\n\t\t\t},\n\n\t\t\tappendOutput(outputs: vscode.NotebookCellOutput | vscode.NotebookCellOutput[], cell?: vscode.NotebookCell): Promise<void> {\n\t\t\t\tthat.verifyStateForOutput();\n\t\t\t\treturn that.updateOutputs(outputs, cell, true);\n\t\t\t},\n\n\t\t\treplaceOutput(outputs: vscode.NotebookCellOutput | vscode.NotebookCellOutput[], cell?: vscode.NotebookCell): Promise<void> {\n\t\t\t\tthat.verifyStateForOutput();\n\t\t\t\treturn that.updateOutputs(outputs, cell, false);\n\t\t\t},\n\n\t\t\tappendOutputItems(items: vscode.NotebookCellOutputItem | vscode.NotebookCellOutputItem[], output: vscode.NotebookCellOutput): Promise<void> {\n\t\t\t\tthat.verifyStateForOutput();\n\t\t\t\treturn that.updateOutputItems(items, output, true);\n\t\t\t},\n\n\t\t\treplaceOutputItems(items: vscode.NotebookCellOutputItem | vscode.NotebookCellOutputItem[], output: vscode.NotebookCellOutput): Promise<void> {\n\t\t\t\tthat.verifyStateForOutput();\n\t\t\t\treturn that.updateOutputItems(items, output, false);\n\t\t\t}\n\t\t};\n\t\treturn Object.freeze(result);\n\t}\n}\n\n\nenum NotebookExecutionTaskState {\n\tInit,\n\tStarted,\n\tResolved\n}\n\n\nclass NotebookExecutionTask extends Disposable {\n\tprivate static HANDLE = 0;\n\tprivate _handle = NotebookExecutionTask.HANDLE++;\n\n\tprivate _onDidChangeState = new Emitter<void>();\n\treadonly onDidChangeState = this._onDidChangeState.event;\n\n\tprivate _state = NotebookExecutionTaskState.Init;\n\tget state(): NotebookExecutionTaskState { return this._state; }\n\n\tprivate readonly _tokenSource = this._register(new CancellationTokenSource());\n\n\tconstructor(\n\t\tcontrollerId: string,\n\t\tprivate readonly _notebook: ExtHostNotebookDocument,\n\t\tprivate readonly _proxy: MainThreadNotebookKernelsShape\n\t) {\n\t\tsuper();\n\n\t\tthis._proxy.$createNotebookExecution(this._handle, controllerId, this._notebook.uri);\n\t}\n\n\tcancel(): void {\n\t\tthis._tokenSource.cancel();\n\t}\n\tasApiObject(): vscode.NotebookExecution {\n\t\tconst result: vscode.NotebookExecution = {\n\t\t\tstart: () => {\n\t\t\t\tif (this._state === NotebookExecutionTaskState.Resolved || this._state === NotebookExecutionTaskState.Started) {\n\t\t\t\t\tthrow new Error('Cannot call start again');\n\t\t\t\t}\n\n\t\t\t\tthis._state = NotebookExecutionTaskState.Started;\n\t\t\t\tthis._onDidChangeState.fire();\n\n\t\t\t\tthis._proxy.$beginNotebookExecution(this._handle);\n\t\t\t},\n\n\t\t\tend: () => {\n\t\t\t\tif (this._state === NotebookExecutionTaskState.Resolved) {\n\t\t\t\t\tthrow new Error('Cannot call resolve twice');\n\t\t\t\t}\n\n\t\t\t\tthis._state = NotebookExecutionTaskState.Resolved;\n\t\t\t\tthis._onDidChangeState.fire();\n\n\t\t\t\tthis._proxy.$completeNotebookExecution(this._handle);\n\t\t\t},\n\n\t\t};\n\t\treturn Object.freeze(result);\n\t}\n}\n\nclass TimeoutBasedCollector<T> {\n\tprivate batch: T[] = [];\n\tprivate startedTimer = Date.now();\n\tprivate currentDeferred: DeferredPromise<void> | undefined;\n\n\tconstructor(\n\t\tprivate readonly delay: number,\n\t\tprivate readonly callback: (items: T[]) => Promise<void>) { }\n\n\taddItem(item: T): Promise<void> {\n\t\tthis.batch.push(item);\n\t\tif (!this.currentDeferred) {\n\t\t\tthis.currentDeferred = new DeferredPromise<void>();\n\t\t\tthis.startedTimer = Date.now();\n\t\t\ttimeout(this.delay).then(() => {\n\t\t\t\treturn this.flush();\n\t\t\t});\n\t\t}\n\n\t\t// This can be called by the extension repeatedly for a long time before the timeout is able to run.\n\t\t// Force a flush after the delay.\n\t\tif (Date.now() - this.startedTimer > this.delay) {\n\t\t\treturn this.flush();\n\t\t}\n\n\t\treturn this.currentDeferred.p;\n\t}\n\n\tflush(): Promise<void> {\n\t\tif (this.batch.length === 0 || !this.currentDeferred) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst deferred = this.currentDeferred;\n\t\tthis.currentDeferred = undefined;\n\t\tconst batch = this.batch;\n\t\tthis.batch = [];\n\t\treturn this.callback(batch)\n\t\t\t.finally(() => deferred.complete());\n\t}\n}\n\nexport function createKernelId(extensionIdentifier: ExtensionIdentifier, id: string): string {\n\treturn `${extensionIdentifier.value}/${id}`;\n}\n"]}