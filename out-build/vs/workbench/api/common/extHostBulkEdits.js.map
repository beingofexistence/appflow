{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostBulkEdits.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IASzF,IAAM,IAAI,GAAV,MAAM,IAAI;QAKhB,YACqB,UAAe,EACnC,0BAA+B;YAE/B,IAAI,CAAC,CAAC,GAAQ,UAAU,CAAC,QAAQ,CAAC,sBAAG,CAAS,mBAAmB,CAAC,CAAC;YAEnE,IAAI,CAAC,CAAC,GAA6B;gBAClC,sBAAsB,EAAE,GAAG,CAAC,EAAE,CAAC,0BAA0B,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,OAAO;gBACnF,0BAA0B,EAAE,GAAG,EAAE,CAAC,SAAS;aAC3C,CAAC;QACH,CAAC;QAED,kBAAkB,CAAC,IAA0B,EAAE,SAAgC,EAAE,QAAkD;YAClI,MAAM,GAAG,GAAG,qCAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAA2B,CAAC;YACvE,OAAO,IAAI,CAAC,CAAC,CAAM,sBAAsB,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,aAAa,IAAI,KAAK,CAAC,CAAC;QAC7F,CAAC;KACD,CAAA;IArBY,oBAAI;mBAAJ,IAAI;QAMd,WAAA,uBAAG,CAAA;OANO,IAAI,CAqBhB","file":"extHostBulkEdits.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { MainContext, MainThreadBulkEditsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { WorkspaceEdit } from 'vs/workbench/api/common/extHostTypeConverters';\nimport type * as vscode from 'vscode';\n\nexport class ExtHostBulkEdits {\n\n\tprivate readonly _proxy: MainThreadBulkEditsShape;\n\tprivate readonly _versionInformationProvider: WorkspaceEdit.IVersionInformationProvider;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\textHostDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadBulkEdits);\n\n\t\tthis._versionInformationProvider = {\n\t\t\tgetTextDocumentVersion: uri => extHostDocumentsAndEditors.getDocument(uri)?.version,\n\t\t\tgetNotebookDocumentVersion: () => undefined\n\t\t};\n\t}\n\n\tapplyWorkspaceEdit(edit: vscode.WorkspaceEdit, extension: IExtensionDescription, metadata: vscode.WorkspaceEditMetadata | undefined): Promise<boolean> {\n\t\tconst dto = WorkspaceEdit.from(edit, this._versionInformationProvider);\n\t\treturn this._proxy.$tryApplyWorkspaceEdit(dto, undefined, metadata?.isRefactoring ?? false);\n\t}\n}\n"]}