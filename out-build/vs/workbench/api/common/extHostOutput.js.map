{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostOutput.ts"],"names":[],"mappings":"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","file":"extHostOutput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainContext, MainThreadOutputServiceShape, ExtHostOutputServiceShape } from './extHost.protocol';\nimport type * as vscode from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { AbstractMessageLogger, ILogger, ILoggerService, ILogService, log, LogLevel, parseLogLevel } from 'vs/platform/log/common/log';\nimport { OutputChannelUpdateMode } from 'vs/workbench/services/output/common/output';\nimport { IExtHostConsumerFileSystem } from 'vs/workbench/api/common/extHostFileSystemConsumer';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { IExtHostFileSystemInfo } from 'vs/workbench/api/common/extHostFileSystemInfo';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { isString } from 'vs/base/common/types';\nimport { FileSystemProviderErrorCode, toFileSystemProviderErrorCode } from 'vs/platform/files/common/files';\nimport { Emitter } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nclass ExtHostOutputChannel extends AbstractMessageLogger implements vscode.LogOutputChannel {\n\n\tprivate offset: number = 0;\n\n\tprivate _disposed: boolean = false;\n\tget disposed(): boolean { return this._disposed; }\n\n\tpublic visible: boolean = false;\n\n\tconstructor(\n\t\treadonly id: string, readonly name: string,\n\t\tprotected readonly logger: ILogger,\n\t\tprotected readonly proxy: MainThreadOutputServiceShape,\n\t\treadonly extension: IExtensionDescription,\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(logger.getLevel());\n\t\tthis._register(logger.onDidChangeLogLevel(level => this.setLevel(level)));\n\t}\n\n\tget logLevel(): LogLevel {\n\t\treturn this.getLevel();\n\t}\n\n\tappendLine(value: string): void {\n\t\tthis.append(value + '\\n');\n\t}\n\n\tappend(value: string): void {\n\t\tthis.info(value);\n\t}\n\n\tclear(): void {\n\t\tconst till = this.offset;\n\t\tthis.logger.flush();\n\t\tthis.proxy.$update(this.id, OutputChannelUpdateMode.Clear, till);\n\t}\n\n\treplace(value: string): void {\n\t\tconst till = this.offset;\n\t\tthis.info(value);\n\t\tthis.proxy.$update(this.id, OutputChannelUpdateMode.Replace, till);\n\t\tif (this.visible) {\n\t\t\tthis.logger.flush();\n\t\t}\n\t}\n\n\tshow(columnOrPreserveFocus?: vscode.ViewColumn | boolean, preserveFocus?: boolean): void {\n\t\tthis.logger.flush();\n\t\tthis.proxy.$reveal(this.id, !!(typeof columnOrPreserveFocus === 'boolean' ? columnOrPreserveFocus : preserveFocus));\n\t}\n\n\thide(): void {\n\t\tthis.proxy.$close(this.id);\n\t}\n\n\tprotected log(level: LogLevel, message: string): void {\n\t\tthis.offset += VSBuffer.fromString(message).byteLength;\n\t\tlog(this.logger, level, message);\n\t\tif (this.visible) {\n\t\t\tthis.logger.flush();\n\t\t\tthis.proxy.$update(this.id, OutputChannelUpdateMode.Append);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (!this._disposed) {\n\t\t\tthis.proxy.$dispose(this.id);\n\t\t\tthis._disposed = true;\n\t\t}\n\t}\n\n}\n\nclass ExtHostLogOutputChannel extends ExtHostOutputChannel {\n\n\toverride appendLine(value: string): void {\n\t\tthis.append(value);\n\t}\n\n}\n\nexport class ExtHostOutputService implements ExtHostOutputServiceShape {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly proxy: MainThreadOutputServiceShape;\n\n\tprivate readonly outputsLocation: URI;\n\tprivate outputDirectoryPromise: Thenable<URI> | undefined;\n\tprivate readonly extensionLogDirectoryPromise = new Map<string, Thenable<URI>>();\n\tprivate namePool: number = 1;\n\n\tprivate readonly channels = new Map<string, ExtHostLogOutputChannel | ExtHostOutputChannel>();\n\tprivate visibleChannelId: string | null = null;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService private readonly initData: IExtHostInitDataService,\n\t\t@IExtHostConsumerFileSystem private readonly extHostFileSystem: IExtHostConsumerFileSystem,\n\t\t@IExtHostFileSystemInfo private readonly extHostFileSystemInfo: IExtHostFileSystemInfo,\n\t\t@ILoggerService private readonly loggerService: ILoggerService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tthis.proxy = extHostRpc.getProxy(MainContext.MainThreadOutputService);\n\t\tthis.outputsLocation = this.extHostFileSystemInfo.extUri.joinPath(initData.logsLocation, `output_logging_${toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '')}`);\n\t}\n\n\t$setVisibleChannel(visibleChannelId: string | null): void {\n\t\tthis.visibleChannelId = visibleChannelId;\n\t\tfor (const [id, channel] of this.channels) {\n\t\t\tchannel.visible = id === this.visibleChannelId;\n\t\t}\n\t}\n\n\tcreateOutputChannel(name: string, options: string | { log: true } | undefined, extension: IExtensionDescription): vscode.OutputChannel | vscode.LogOutputChannel {\n\t\tname = name.trim();\n\t\tif (!name) {\n\t\t\tthrow new Error('illegal argument `name`. must not be falsy');\n\t\t}\n\t\tconst log = typeof options === 'object' && options.log;\n\t\tconst languageId = isString(options) ? options : undefined;\n\t\tif (isString(languageId) && !languageId.trim()) {\n\t\t\tthrow new Error('illegal argument `languageId`. must not be empty');\n\t\t}\n\t\tlet logLevel: LogLevel | undefined;\n\t\tconst logLevelValue = this.initData.environment.extensionLogLevel?.find(([identifier]) => ExtensionIdentifier.equals(extension.identifier, identifier))?.[1];\n\t\tif (logLevelValue) {\n\t\t\tlogLevel = parseLogLevel(logLevelValue);\n\t\t}\n\t\tconst extHostOutputChannel = log ? this.doCreateLogOutputChannel(name, logLevel, extension) : this.doCreateOutputChannel(name, languageId, extension);\n\t\textHostOutputChannel.then(channel => {\n\t\t\tthis.channels.set(channel.id, channel);\n\t\t\tchannel.visible = channel.id === this.visibleChannelId;\n\t\t});\n\t\treturn log ? this.createExtHostLogOutputChannel(name, logLevel ?? this.logService.getLevel(), <Promise<ExtHostOutputChannel>>extHostOutputChannel) : this.createExtHostOutputChannel(name, <Promise<ExtHostOutputChannel>>extHostOutputChannel);\n\t}\n\n\tprivate async doCreateOutputChannel(name: string, languageId: string | undefined, extension: IExtensionDescription): Promise<ExtHostOutputChannel> {\n\t\tif (!this.outputDirectoryPromise) {\n\t\t\tthis.outputDirectoryPromise = this.extHostFileSystem.value.createDirectory(this.outputsLocation).then(() => this.outputsLocation);\n\t\t}\n\t\tconst outputDir = await this.outputDirectoryPromise;\n\t\tconst file = this.extHostFileSystemInfo.extUri.joinPath(outputDir, `${this.namePool++}-${name.replace(/[\\\\/:\\*\\?\"<>\\|]/g, '')}.log`);\n\t\tconst logger = this.loggerService.createLogger(file, { logLevel: 'always', donotRotate: true, donotUseFormatters: true, hidden: true });\n\t\tconst id = await this.proxy.$register(name, file, languageId, extension.identifier.value);\n\t\treturn new ExtHostOutputChannel(id, name, logger, this.proxy, extension);\n\t}\n\n\tprivate async doCreateLogOutputChannel(name: string, logLevel: LogLevel | undefined, extension: IExtensionDescription): Promise<ExtHostLogOutputChannel> {\n\t\tconst extensionLogDir = await this.createExtensionLogDirectory(extension);\n\t\tconst fileName = name.replace(/[\\\\/:\\*\\?\"<>\\|]/g, '');\n\t\tconst file = this.extHostFileSystemInfo.extUri.joinPath(extensionLogDir, `${fileName}.log`);\n\t\tconst id = `${extension.identifier.value}.${fileName}`;\n\t\tconst logger = this.loggerService.createLogger(file, { id, name, logLevel, extensionId: extension.identifier.value });\n\t\treturn new ExtHostLogOutputChannel(id, name, logger, this.proxy, extension);\n\t}\n\n\tprivate createExtensionLogDirectory(extension: IExtensionDescription): Thenable<URI> {\n\t\tlet extensionLogDirectoryPromise = this.extensionLogDirectoryPromise.get(extension.identifier.value);\n\t\tif (!extensionLogDirectoryPromise) {\n\t\t\tconst extensionLogDirectory = this.extHostFileSystemInfo.extUri.joinPath(this.initData.logsLocation, extension.identifier.value);\n\t\t\tthis.extensionLogDirectoryPromise.set(extension.identifier.value, extensionLogDirectoryPromise = (async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.extHostFileSystem.value.createDirectory(extensionLogDirectory);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (toFileSystemProviderErrorCode(err) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn extensionLogDirectory;\n\t\t\t})());\n\t\t}\n\t\treturn extensionLogDirectoryPromise;\n\t}\n\n\tprivate createExtHostOutputChannel(name: string, channelPromise: Promise<ExtHostOutputChannel>): vscode.OutputChannel {\n\t\tlet disposed = false;\n\t\tconst validate = () => {\n\t\t\tif (disposed) {\n\t\t\t\tthrow new Error('Channel has been closed');\n\t\t\t}\n\t\t};\n\t\treturn {\n\t\t\tget name(): string { return name; },\n\t\t\tappend(value: string): void {\n\t\t\t\tvalidate();\n\t\t\t\tchannelPromise.then(channel => channel.append(value));\n\t\t\t},\n\t\t\tappendLine(value: string): void {\n\t\t\t\tvalidate();\n\t\t\t\tchannelPromise.then(channel => channel.appendLine(value));\n\t\t\t},\n\t\t\tclear(): void {\n\t\t\t\tvalidate();\n\t\t\t\tchannelPromise.then(channel => channel.clear());\n\t\t\t},\n\t\t\treplace(value: string): void {\n\t\t\t\tvalidate();\n\t\t\t\tchannelPromise.then(channel => channel.replace(value));\n\t\t\t},\n\t\t\tshow(columnOrPreserveFocus?: vscode.ViewColumn | boolean, preserveFocus?: boolean): void {\n\t\t\t\tvalidate();\n\t\t\t\tchannelPromise.then(channel => channel.show(columnOrPreserveFocus, preserveFocus));\n\t\t\t},\n\t\t\thide(): void {\n\t\t\t\tvalidate();\n\t\t\t\tchannelPromise.then(channel => channel.hide());\n\t\t\t},\n\t\t\tdispose(): void {\n\t\t\t\tdisposed = true;\n\t\t\t\tchannelPromise.then(channel => channel.dispose());\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate createExtHostLogOutputChannel(name: string, logLevel: LogLevel, channelPromise: Promise<ExtHostOutputChannel>): vscode.LogOutputChannel {\n\t\tconst disposables = new DisposableStore();\n\t\tconst validate = () => {\n\t\t\tif (disposables.isDisposed) {\n\t\t\t\tthrow new Error('Channel has been closed');\n\t\t\t}\n\t\t};\n\t\tconst onDidChangeLogLevel = disposables.add(new Emitter<LogLevel>());\n\t\tfunction setLogLevel(newLogLevel: LogLevel): void {\n\t\t\tlogLevel = newLogLevel;\n\t\t\tonDidChangeLogLevel.fire(newLogLevel);\n\t\t}\n\t\tchannelPromise.then(channel => {\n\t\t\tdisposables.add(channel);\n\t\t\tif (channel.logLevel !== logLevel) {\n\t\t\t\tsetLogLevel(channel.logLevel);\n\t\t\t}\n\t\t\tdisposables.add(channel.onDidChangeLogLevel(e => setLogLevel(e)));\n\t\t});\n\t\treturn {\n\t\t\t...this.createExtHostOutputChannel(name, channelPromise),\n\t\t\tget logLevel() { return logLevel; },\n\t\t\tonDidChangeLogLevel: onDidChangeLogLevel.event,\n\t\t\ttrace(value: string, ...args: any[]): void {\n\t\t\t\tvalidate();\n\t\t\t\tchannelPromise.then(channel => channel.trace(value, ...args));\n\t\t\t},\n\t\t\tdebug(value: string, ...args: any[]): void {\n\t\t\t\tvalidate();\n\t\t\t\tchannelPromise.then(channel => channel.debug(value, ...args));\n\t\t\t},\n\t\t\tinfo(value: string, ...args: any[]): void {\n\t\t\t\tvalidate();\n\t\t\t\tchannelPromise.then(channel => channel.info(value, ...args));\n\t\t\t},\n\t\t\twarn(value: string, ...args: any[]): void {\n\t\t\t\tvalidate();\n\t\t\t\tchannelPromise.then(channel => channel.warn(value, ...args));\n\t\t\t},\n\t\t\terror(value: Error | string, ...args: any[]): void {\n\t\t\t\tvalidate();\n\t\t\t\tchannelPromise.then(channel => channel.error(value, ...args));\n\t\t\t},\n\t\t\tdispose(): void {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport interface IExtHostOutputService extends ExtHostOutputService { }\nexport const IExtHostOutputService = createDecorator<IExtHostOutputService>('IExtHostOutputService');\n"]}