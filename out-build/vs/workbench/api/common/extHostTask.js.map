{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/common/extHostTask.ts"],"names":[],"mappings":"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","file":"extHostTask.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* eslint-disable local/code-no-native-private */\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { asPromise } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nimport { MainContext, MainThreadTaskShape, ExtHostTaskShape } from 'vs/workbench/api/common/extHost.protocol';\nimport * as types from 'vs/workbench/api/common/extHostTypes';\nimport { IExtHostWorkspaceProvider, IExtHostWorkspace } from 'vs/workbench/api/common/extHostWorkspace';\nimport type * as vscode from 'vscode';\nimport * as tasks from '../common/shared/tasks';\nimport { IExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { IExtHostConfiguration } from 'vs/workbench/api/common/extHostConfiguration';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IExtHostTerminalService } from 'vs/workbench/api/common/extHostTerminalService';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { IExtHostInitDataService } from 'vs/workbench/api/common/extHostInitDataService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport * as Platform from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtHostApiDeprecationService } from 'vs/workbench/api/common/extHostApiDeprecationService';\nimport { USER_TASKS_GROUP_KEY } from 'vs/workbench/contrib/tasks/common/tasks';\nimport { ErrorNoTelemetry, NotSupportedError } from 'vs/base/common/errors';\n\nexport interface IExtHostTask extends ExtHostTaskShape {\n\n\treadonly _serviceBrand: undefined;\n\n\ttaskExecutions: vscode.TaskExecution[];\n\tonDidStartTask: Event<vscode.TaskStartEvent>;\n\tonDidEndTask: Event<vscode.TaskEndEvent>;\n\tonDidStartTaskProcess: Event<vscode.TaskProcessStartEvent>;\n\tonDidEndTaskProcess: Event<vscode.TaskProcessEndEvent>;\n\n\tregisterTaskProvider(extension: IExtensionDescription, type: string, provider: vscode.TaskProvider): vscode.Disposable;\n\tregisterTaskSystem(scheme: string, info: tasks.ITaskSystemInfoDTO): void;\n\tfetchTasks(filter?: vscode.TaskFilter): Promise<vscode.Task[]>;\n\texecuteTask(extension: IExtensionDescription, task: vscode.Task): Promise<vscode.TaskExecution>;\n\tterminateTask(execution: vscode.TaskExecution): Promise<void>;\n}\n\nnamespace TaskDefinitionDTO {\n\texport function from(value: vscode.TaskDefinition): tasks.ITaskDefinitionDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n\texport function to(value: tasks.ITaskDefinitionDTO): vscode.TaskDefinition | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n}\n\nnamespace TaskPresentationOptionsDTO {\n\texport function from(value: vscode.TaskPresentationOptions): tasks.ITaskPresentationOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n\texport function to(value: tasks.ITaskPresentationOptionsDTO): vscode.TaskPresentationOptions | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n}\n\nnamespace ProcessExecutionOptionsDTO {\n\texport function from(value: vscode.ProcessExecutionOptions): tasks.IProcessExecutionOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n\texport function to(value: tasks.IProcessExecutionOptionsDTO): vscode.ProcessExecutionOptions | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n}\n\nnamespace ProcessExecutionDTO {\n\texport function is(value: tasks.IShellExecutionDTO | tasks.IProcessExecutionDTO | tasks.ICustomExecutionDTO | undefined): value is tasks.IProcessExecutionDTO {\n\t\tif (value) {\n\t\t\tconst candidate = value as tasks.IProcessExecutionDTO;\n\t\t\treturn candidate && !!candidate.process;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\texport function from(value: vscode.ProcessExecution): tasks.IProcessExecutionDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: tasks.IProcessExecutionDTO = {\n\t\t\tprocess: value.process,\n\t\t\targs: value.args\n\t\t};\n\t\tif (value.options) {\n\t\t\tresult.options = ProcessExecutionOptionsDTO.from(value.options);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: tasks.IProcessExecutionDTO): types.ProcessExecution | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new types.ProcessExecution(value.process, value.args, value.options);\n\t}\n}\n\nnamespace ShellExecutionOptionsDTO {\n\texport function from(value: vscode.ShellExecutionOptions): tasks.IShellExecutionOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n\texport function to(value: tasks.IShellExecutionOptionsDTO): vscode.ShellExecutionOptions | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n}\n\nnamespace ShellExecutionDTO {\n\texport function is(value: tasks.IShellExecutionDTO | tasks.IProcessExecutionDTO | tasks.ICustomExecutionDTO | undefined): value is tasks.IShellExecutionDTO {\n\t\tif (value) {\n\t\t\tconst candidate = value as tasks.IShellExecutionDTO;\n\t\t\treturn candidate && (!!candidate.commandLine || !!candidate.command);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\texport function from(value: vscode.ShellExecution): tasks.IShellExecutionDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: tasks.IShellExecutionDTO = {\n\t\t};\n\t\tif (value.commandLine !== undefined) {\n\t\t\tresult.commandLine = value.commandLine;\n\t\t} else {\n\t\t\tresult.command = value.command;\n\t\t\tresult.args = value.args;\n\t\t}\n\t\tif (value.options) {\n\t\t\tresult.options = ShellExecutionOptionsDTO.from(value.options);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: tasks.IShellExecutionDTO): types.ShellExecution | undefined {\n\t\tif (value === undefined || value === null || (value.command === undefined && value.commandLine === undefined)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (value.commandLine) {\n\t\t\treturn new types.ShellExecution(value.commandLine, value.options);\n\t\t} else {\n\t\t\treturn new types.ShellExecution(value.command!, value.args ? value.args : [], value.options);\n\t\t}\n\t}\n}\n\nexport namespace CustomExecutionDTO {\n\texport function is(value: tasks.IShellExecutionDTO | tasks.IProcessExecutionDTO | tasks.ICustomExecutionDTO | undefined): value is tasks.ICustomExecutionDTO {\n\t\tif (value) {\n\t\t\tconst candidate = value as tasks.ICustomExecutionDTO;\n\t\t\treturn candidate && candidate.customExecution === 'customExecution';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function from(value: vscode.CustomExecution): tasks.ICustomExecutionDTO {\n\t\treturn {\n\t\t\tcustomExecution: 'customExecution'\n\t\t};\n\t}\n\n\texport function to(taskId: string, providedCustomExeutions: Map<string, types.CustomExecution>): types.CustomExecution | undefined {\n\t\treturn providedCustomExeutions.get(taskId);\n\t}\n}\n\n\nexport namespace TaskHandleDTO {\n\texport function from(value: types.Task, workspaceService?: IExtHostWorkspace): tasks.ITaskHandleDTO {\n\t\tlet folder: UriComponents | string;\n\t\tif (value.scope !== undefined && typeof value.scope !== 'number') {\n\t\t\tfolder = value.scope.uri;\n\t\t} else if (value.scope !== undefined && typeof value.scope === 'number') {\n\t\t\tif ((value.scope === types.TaskScope.Workspace) && workspaceService && workspaceService.workspaceFile) {\n\t\t\t\tfolder = workspaceService.workspaceFile;\n\t\t\t} else {\n\t\t\t\tfolder = USER_TASKS_GROUP_KEY;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tid: value._id!,\n\t\t\tworkspaceFolder: folder!\n\t\t};\n\t}\n}\nnamespace TaskGroupDTO {\n\texport function from(value: vscode.TaskGroup): tasks.ITaskGroupDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn { _id: value.id, isDefault: value.isDefault };\n\t}\n}\n\nexport namespace TaskDTO {\n\texport function fromMany(tasks: vscode.Task[], extension: IExtensionDescription): tasks.ITaskDTO[] {\n\t\tif (tasks === undefined || tasks === null) {\n\t\t\treturn [];\n\t\t}\n\t\tconst result: tasks.ITaskDTO[] = [];\n\t\tfor (const task of tasks) {\n\t\t\tconst converted = from(task, extension);\n\t\t\tif (converted) {\n\t\t\t\tresult.push(converted);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\texport function from(value: vscode.Task, extension: IExtensionDescription): tasks.ITaskDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet execution: tasks.IShellExecutionDTO | tasks.IProcessExecutionDTO | tasks.ICustomExecutionDTO | undefined;\n\t\tif (value.execution instanceof types.ProcessExecution) {\n\t\t\texecution = ProcessExecutionDTO.from(value.execution);\n\t\t} else if (value.execution instanceof types.ShellExecution) {\n\t\t\texecution = ShellExecutionDTO.from(value.execution);\n\t\t} else if (value.execution && value.execution instanceof types.CustomExecution) {\n\t\t\texecution = CustomExecutionDTO.from(<types.CustomExecution>value.execution);\n\t\t}\n\n\t\tconst definition: tasks.ITaskDefinitionDTO | undefined = TaskDefinitionDTO.from(value.definition);\n\t\tlet scope: number | UriComponents;\n\t\tif (value.scope) {\n\t\t\tif (typeof value.scope === 'number') {\n\t\t\t\tscope = value.scope;\n\t\t\t} else {\n\t\t\t\tscope = value.scope.uri;\n\t\t\t}\n\t\t} else {\n\t\t\t// To continue to support the deprecated task constructor that doesn't take a scope, we must add a scope here:\n\t\t\tscope = types.TaskScope.Workspace;\n\t\t}\n\t\tif (!definition || !scope) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: tasks.ITaskDTO = {\n\t\t\t_id: (value as types.Task)._id!,\n\t\t\tdefinition,\n\t\t\tname: value.name,\n\t\t\tsource: {\n\t\t\t\textensionId: extension.identifier.value,\n\t\t\t\tlabel: value.source,\n\t\t\t\tscope: scope\n\t\t\t},\n\t\t\texecution: execution!,\n\t\t\tisBackground: value.isBackground,\n\t\t\tgroup: TaskGroupDTO.from(value.group as vscode.TaskGroup),\n\t\t\tpresentationOptions: TaskPresentationOptionsDTO.from(value.presentationOptions),\n\t\t\tproblemMatchers: value.problemMatchers,\n\t\t\thasDefinedMatchers: (value as types.Task).hasDefinedMatchers,\n\t\t\trunOptions: value.runOptions ? value.runOptions : { reevaluateOnRerun: true },\n\t\t\tdetail: value.detail\n\t\t};\n\t\treturn result;\n\t}\n\texport async function to(value: tasks.ITaskDTO | undefined, workspace: IExtHostWorkspaceProvider, providedCustomExeutions: Map<string, types.CustomExecution>): Promise<types.Task | undefined> {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet execution: types.ShellExecution | types.ProcessExecution | types.CustomExecution | undefined;\n\t\tif (ProcessExecutionDTO.is(value.execution)) {\n\t\t\texecution = ProcessExecutionDTO.to(value.execution);\n\t\t} else if (ShellExecutionDTO.is(value.execution)) {\n\t\t\texecution = ShellExecutionDTO.to(value.execution);\n\t\t} else if (CustomExecutionDTO.is(value.execution)) {\n\t\t\texecution = CustomExecutionDTO.to(value._id, providedCustomExeutions);\n\t\t}\n\t\tconst definition: vscode.TaskDefinition | undefined = TaskDefinitionDTO.to(value.definition);\n\t\tlet scope: vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder | undefined;\n\t\tif (value.source) {\n\t\t\tif (value.source.scope !== undefined) {\n\t\t\t\tif (typeof value.source.scope === 'number') {\n\t\t\t\t\tscope = value.source.scope;\n\t\t\t\t} else {\n\t\t\t\t\tscope = await workspace.resolveWorkspaceFolder(URI.revive(value.source.scope));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscope = types.TaskScope.Workspace;\n\t\t\t}\n\t\t}\n\t\tif (!definition || !scope) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result = new types.Task(definition, scope, value.name!, value.source.label, execution, value.problemMatchers);\n\t\tif (value.isBackground !== undefined) {\n\t\t\tresult.isBackground = value.isBackground;\n\t\t}\n\t\tif (value.group !== undefined) {\n\t\t\tresult.group = types.TaskGroup.from(value.group._id);\n\t\t\tif (result.group && value.group.isDefault) {\n\t\t\t\tresult.group = new types.TaskGroup(result.group.id, result.group.label);\n\t\t\t\tif (value.group.isDefault === true) {\n\t\t\t\t\tresult.group.isDefault = value.group.isDefault;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (value.presentationOptions) {\n\t\t\tresult.presentationOptions = TaskPresentationOptionsDTO.to(value.presentationOptions)!;\n\t\t}\n\t\tif (value._id) {\n\t\t\tresult._id = value._id;\n\t\t}\n\t\tif (value.detail) {\n\t\t\tresult.detail = value.detail;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nnamespace TaskFilterDTO {\n\texport function from(value: vscode.TaskFilter | undefined): tasks.ITaskFilterDTO | undefined {\n\t\treturn value;\n\t}\n\n\texport function to(value: tasks.ITaskFilterDTO): vscode.TaskFilter | undefined {\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn Object.assign(Object.create(null), value);\n\t}\n}\n\nclass TaskExecutionImpl implements vscode.TaskExecution {\n\n\treadonly #tasks: ExtHostTaskBase;\n\n\tconstructor(tasks: ExtHostTaskBase, readonly _id: string, private readonly _task: vscode.Task) {\n\t\tthis.#tasks = tasks;\n\t}\n\n\tpublic get task(): vscode.Task {\n\t\treturn this._task;\n\t}\n\n\tpublic terminate(): void {\n\t\tthis.#tasks.terminateTask(this);\n\t}\n\n\tpublic fireDidStartProcess(value: tasks.ITaskProcessStartedDTO): void {\n\t}\n\n\tpublic fireDidEndProcess(value: tasks.ITaskProcessEndedDTO): void {\n\t}\n}\n\nexport interface HandlerData {\n\ttype: string;\n\tprovider: vscode.TaskProvider;\n\textension: IExtensionDescription;\n}\n\nexport abstract class ExtHostTaskBase implements ExtHostTaskShape, IExtHostTask {\n\treadonly _serviceBrand: undefined;\n\n\tprotected readonly _proxy: MainThreadTaskShape;\n\tprotected readonly _workspaceProvider: IExtHostWorkspaceProvider;\n\tprotected readonly _editorService: IExtHostDocumentsAndEditors;\n\tprotected readonly _configurationService: IExtHostConfiguration;\n\tprotected readonly _terminalService: IExtHostTerminalService;\n\tprotected readonly _logService: ILogService;\n\tprotected readonly _deprecationService: IExtHostApiDeprecationService;\n\tprotected _handleCounter: number;\n\tprotected _handlers: Map<number, HandlerData>;\n\tprotected _taskExecutions: Map<string, TaskExecutionImpl>;\n\tprotected _taskExecutionPromises: Map<string, Promise<TaskExecutionImpl>>;\n\tprotected _providedCustomExecutions2: Map<string, types.CustomExecution>;\n\tprivate _notProvidedCustomExecutions: Set<string>; // Used for custom executions tasks that are created and run through executeTask.\n\tprotected _activeCustomExecutions2: Map<string, types.CustomExecution>;\n\tprivate _lastStartedTask: string | undefined;\n\tprotected readonly _onDidExecuteTask: Emitter<vscode.TaskStartEvent> = new Emitter<vscode.TaskStartEvent>();\n\tprotected readonly _onDidTerminateTask: Emitter<vscode.TaskEndEvent> = new Emitter<vscode.TaskEndEvent>();\n\n\tprotected readonly _onDidTaskProcessStarted: Emitter<vscode.TaskProcessStartEvent> = new Emitter<vscode.TaskProcessStartEvent>();\n\tprotected readonly _onDidTaskProcessEnded: Emitter<vscode.TaskProcessEndEvent> = new Emitter<vscode.TaskProcessEndEvent>();\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t\t@IExtHostWorkspace workspaceService: IExtHostWorkspace,\n\t\t@IExtHostDocumentsAndEditors editorService: IExtHostDocumentsAndEditors,\n\t\t@IExtHostConfiguration configurationService: IExtHostConfiguration,\n\t\t@IExtHostTerminalService extHostTerminalService: IExtHostTerminalService,\n\t\t@ILogService logService: ILogService,\n\t\t@IExtHostApiDeprecationService deprecationService: IExtHostApiDeprecationService\n\t) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadTask);\n\t\tthis._workspaceProvider = workspaceService;\n\t\tthis._editorService = editorService;\n\t\tthis._configurationService = configurationService;\n\t\tthis._terminalService = extHostTerminalService;\n\t\tthis._handleCounter = 0;\n\t\tthis._handlers = new Map<number, HandlerData>();\n\t\tthis._taskExecutions = new Map<string, TaskExecutionImpl>();\n\t\tthis._taskExecutionPromises = new Map<string, Promise<TaskExecutionImpl>>();\n\t\tthis._providedCustomExecutions2 = new Map<string, types.CustomExecution>();\n\t\tthis._notProvidedCustomExecutions = new Set<string>();\n\t\tthis._activeCustomExecutions2 = new Map<string, types.CustomExecution>();\n\t\tthis._logService = logService;\n\t\tthis._deprecationService = deprecationService;\n\t\tthis._proxy.$registerSupportedExecutions(true);\n\t}\n\n\tpublic registerTaskProvider(extension: IExtensionDescription, type: string, provider: vscode.TaskProvider): vscode.Disposable {\n\t\tif (!provider) {\n\t\t\treturn new types.Disposable(() => { });\n\t\t}\n\t\tconst handle = this.nextHandle();\n\t\tthis._handlers.set(handle, { type, provider, extension });\n\t\tthis._proxy.$registerTaskProvider(handle, type);\n\t\treturn new types.Disposable(() => {\n\t\t\tthis._handlers.delete(handle);\n\t\t\tthis._proxy.$unregisterTaskProvider(handle);\n\t\t});\n\t}\n\n\tpublic registerTaskSystem(scheme: string, info: tasks.ITaskSystemInfoDTO): void {\n\t\tthis._proxy.$registerTaskSystem(scheme, info);\n\t}\n\n\tpublic fetchTasks(filter?: vscode.TaskFilter): Promise<vscode.Task[]> {\n\t\treturn this._proxy.$fetchTasks(TaskFilterDTO.from(filter)).then(async (values) => {\n\t\t\tconst result: vscode.Task[] = [];\n\t\t\tfor (const value of values) {\n\t\t\t\tconst task = await TaskDTO.to(value, this._workspaceProvider, this._providedCustomExecutions2);\n\t\t\t\tif (task) {\n\t\t\t\t\tresult.push(task);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tpublic abstract executeTask(extension: IExtensionDescription, task: vscode.Task): Promise<vscode.TaskExecution>;\n\n\tpublic get taskExecutions(): vscode.TaskExecution[] {\n\t\tconst result: vscode.TaskExecution[] = [];\n\t\tthis._taskExecutions.forEach(value => result.push(value));\n\t\treturn result;\n\t}\n\n\tpublic terminateTask(execution: vscode.TaskExecution): Promise<void> {\n\t\tif (!(execution instanceof TaskExecutionImpl)) {\n\t\t\tthrow new Error('No valid task execution provided');\n\t\t}\n\t\treturn this._proxy.$terminateTask((execution as TaskExecutionImpl)._id);\n\t}\n\n\tpublic get onDidStartTask(): Event<vscode.TaskStartEvent> {\n\t\treturn this._onDidExecuteTask.event;\n\t}\n\n\tpublic async $onDidStartTask(execution: tasks.ITaskExecutionDTO, terminalId: number, resolvedDefinition: tasks.ITaskDefinitionDTO): Promise<void> {\n\t\tconst customExecution: types.CustomExecution | undefined = this._providedCustomExecutions2.get(execution.id);\n\t\tif (customExecution) {\n\t\t\t// Clone the custom execution to keep the original untouched. This is important for multiple runs of the same task.\n\t\t\tthis._activeCustomExecutions2.set(execution.id, customExecution);\n\t\t\tthis._terminalService.attachPtyToTerminal(terminalId, await customExecution.callback(resolvedDefinition));\n\t\t}\n\t\tthis._lastStartedTask = execution.id;\n\n\t\tthis._onDidExecuteTask.fire({\n\t\t\texecution: await this.getTaskExecution(execution)\n\t\t});\n\t}\n\n\tpublic get onDidEndTask(): Event<vscode.TaskEndEvent> {\n\t\treturn this._onDidTerminateTask.event;\n\t}\n\n\tpublic async $OnDidEndTask(execution: tasks.ITaskExecutionDTO): Promise<void> {\n\t\tconst _execution = await this.getTaskExecution(execution);\n\t\tthis._taskExecutionPromises.delete(execution.id);\n\t\tthis._taskExecutions.delete(execution.id);\n\t\tthis.customExecutionComplete(execution);\n\t\tthis._onDidTerminateTask.fire({\n\t\t\texecution: _execution\n\t\t});\n\t}\n\n\tpublic get onDidStartTaskProcess(): Event<vscode.TaskProcessStartEvent> {\n\t\treturn this._onDidTaskProcessStarted.event;\n\t}\n\n\tpublic async $onDidStartTaskProcess(value: tasks.ITaskProcessStartedDTO): Promise<void> {\n\t\tconst execution = await this.getTaskExecution(value.id);\n\t\tthis._onDidTaskProcessStarted.fire({\n\t\t\texecution: execution,\n\t\t\tprocessId: value.processId\n\t\t});\n\t}\n\n\tpublic get onDidEndTaskProcess(): Event<vscode.TaskProcessEndEvent> {\n\t\treturn this._onDidTaskProcessEnded.event;\n\t}\n\n\tpublic async $onDidEndTaskProcess(value: tasks.ITaskProcessEndedDTO): Promise<void> {\n\t\tconst execution = await this.getTaskExecution(value.id);\n\t\tthis._onDidTaskProcessEnded.fire({\n\t\t\texecution: execution,\n\t\t\texitCode: value.exitCode\n\t\t});\n\t}\n\n\tprotected abstract provideTasksInternal(validTypes: { [key: string]: boolean }, taskIdPromises: Promise<void>[], handler: HandlerData, value: vscode.Task[] | null | undefined): { tasks: tasks.ITaskDTO[]; extension: IExtensionDescription };\n\n\tpublic $provideTasks(handle: number, validTypes: { [key: string]: boolean }): Promise<tasks.ITaskSetDTO> {\n\t\tconst handler = this._handlers.get(handle);\n\t\tif (!handler) {\n\t\t\treturn Promise.reject(new Error('no handler found'));\n\t\t}\n\n\t\t// Set up a list of task ID promises that we can wait on\n\t\t// before returning the provided tasks. The ensures that\n\t\t// our task IDs are calculated for any custom execution tasks.\n\t\t// Knowing this ID ahead of time is needed because when a task\n\t\t// start event is fired this is when the custom execution is called.\n\t\t// The task start event is also the first time we see the ID from the main\n\t\t// thread, which is too late for us because we need to save an map\n\t\t// from an ID to the custom execution function. (Kind of a cart before the horse problem).\n\t\tconst taskIdPromises: Promise<void>[] = [];\n\t\tconst fetchPromise = asPromise(() => handler.provider.provideTasks(CancellationToken.None)).then(value => {\n\t\t\treturn this.provideTasksInternal(validTypes, taskIdPromises, handler, value);\n\t\t});\n\n\t\treturn new Promise((resolve) => {\n\t\t\tfetchPromise.then((result) => {\n\t\t\t\tPromise.all(taskIdPromises).then(() => {\n\t\t\t\t\tresolve(result);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected abstract resolveTaskInternal(resolvedTaskDTO: tasks.ITaskDTO): Promise<tasks.ITaskDTO | undefined>;\n\n\tpublic async $resolveTask(handle: number, taskDTO: tasks.ITaskDTO): Promise<tasks.ITaskDTO | undefined> {\n\t\tconst handler = this._handlers.get(handle);\n\t\tif (!handler) {\n\t\t\treturn Promise.reject(new Error('no handler found'));\n\t\t}\n\n\t\tif (taskDTO.definition.type !== handler.type) {\n\t\t\tthrow new Error(`Unexpected: Task of type [${taskDTO.definition.type}] cannot be resolved by provider of type [${handler.type}].`);\n\t\t}\n\n\t\tconst task = await TaskDTO.to(taskDTO, this._workspaceProvider, this._providedCustomExecutions2);\n\t\tif (!task) {\n\t\t\tthrow new Error('Unexpected: Task cannot be resolved.');\n\t\t}\n\n\t\tconst resolvedTask = await handler.provider.resolveTask(task, CancellationToken.None);\n\t\tif (!resolvedTask) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.checkDeprecation(resolvedTask, handler);\n\n\t\tconst resolvedTaskDTO: tasks.ITaskDTO | undefined = TaskDTO.from(resolvedTask, handler.extension);\n\t\tif (!resolvedTaskDTO) {\n\t\t\tthrow new Error('Unexpected: Task cannot be resolved.');\n\t\t}\n\n\t\tif (resolvedTask.definition !== task.definition) {\n\t\t\tthrow new Error('Unexpected: The resolved task definition must be the same object as the original task definition. The task definition cannot be changed.');\n\t\t}\n\n\t\tif (CustomExecutionDTO.is(resolvedTaskDTO.execution)) {\n\t\t\tawait this.addCustomExecution(resolvedTaskDTO, resolvedTask, true);\n\t\t}\n\n\t\treturn await this.resolveTaskInternal(resolvedTaskDTO);\n\t}\n\n\tpublic abstract $resolveVariables(uriComponents: UriComponents, toResolve: { process?: { name: string; cwd?: string; path?: string }; variables: string[] }): Promise<{ process?: string; variables: { [key: string]: string } }>;\n\n\tprivate nextHandle(): number {\n\t\treturn this._handleCounter++;\n\t}\n\n\tprotected async addCustomExecution(taskDTO: tasks.ITaskDTO, task: vscode.Task, isProvided: boolean): Promise<void> {\n\t\tconst taskId = await this._proxy.$createTaskId(taskDTO);\n\t\tif (!isProvided && !this._providedCustomExecutions2.has(taskId)) {\n\t\t\tthis._notProvidedCustomExecutions.add(taskId);\n\t\t\t// Also add to active executions when not coming from a provider to prevent timing issue.\n\t\t\tthis._activeCustomExecutions2.set(taskId, <types.CustomExecution>task.execution);\n\t\t}\n\t\tthis._providedCustomExecutions2.set(taskId, <types.CustomExecution>task.execution);\n\t}\n\n\tprotected async getTaskExecution(execution: tasks.ITaskExecutionDTO | string, task?: vscode.Task): Promise<TaskExecutionImpl> {\n\t\tif (typeof execution === 'string') {\n\t\t\tconst taskExecution = this._taskExecutionPromises.get(execution);\n\t\t\tif (!taskExecution) {\n\t\t\t\tthrow new ErrorNoTelemetry('Unexpected: The specified task is missing an execution');\n\t\t\t}\n\t\t\treturn taskExecution;\n\t\t}\n\n\t\tconst result: Promise<TaskExecutionImpl> | undefined = this._taskExecutionPromises.get(execution.id);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tconst createdResult: Promise<TaskExecutionImpl> = new Promise((resolve, reject) => {\n\t\t\tfunction resolvePromiseWithCreatedTask(that: ExtHostTaskBase, execution: tasks.ITaskExecutionDTO, taskToCreate: vscode.Task | types.Task | undefined) {\n\t\t\t\tif (!taskToCreate) {\n\t\t\t\t\treject('Unexpected: Task does not exist.');\n\t\t\t\t} else {\n\t\t\t\t\tresolve(new TaskExecutionImpl(that, execution.id, taskToCreate));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (task) {\n\t\t\t\tresolvePromiseWithCreatedTask(this, execution, task);\n\t\t\t} else {\n\t\t\t\tTaskDTO.to(execution.task, this._workspaceProvider, this._providedCustomExecutions2)\n\t\t\t\t\t.then(task => resolvePromiseWithCreatedTask(this, execution, task));\n\t\t\t}\n\t\t});\n\n\t\tthis._taskExecutionPromises.set(execution.id, createdResult);\n\t\treturn createdResult.then(executionCreatedResult => {\n\t\t\tthis._taskExecutions.set(execution.id, executionCreatedResult);\n\t\t\treturn executionCreatedResult;\n\t\t}, rejected => {\n\t\t\treturn Promise.reject(rejected);\n\t\t});\n\t}\n\n\tprotected checkDeprecation(task: vscode.Task, handler: HandlerData) {\n\t\tconst tTask = (task as types.Task);\n\t\tif (tTask._deprecated) {\n\t\t\tthis._deprecationService.report('Task.constructor', handler.extension, 'Use the Task constructor that takes a `scope` instead.');\n\t\t}\n\t}\n\n\tprivate customExecutionComplete(execution: tasks.ITaskExecutionDTO): void {\n\t\tconst extensionCallback2: vscode.CustomExecution | undefined = this._activeCustomExecutions2.get(execution.id);\n\t\tif (extensionCallback2) {\n\t\t\tthis._activeCustomExecutions2.delete(execution.id);\n\t\t}\n\n\t\t// Technically we don't really need to do this, however, if an extension\n\t\t// is executing a task through \"executeTask\" over and over again\n\t\t// with different properties in the task definition, then the map of executions\n\t\t// could grow indefinitely, something we don't want.\n\t\tif (this._notProvidedCustomExecutions.has(execution.id) && (this._lastStartedTask !== execution.id)) {\n\t\t\tthis._providedCustomExecutions2.delete(execution.id);\n\t\t\tthis._notProvidedCustomExecutions.delete(execution.id);\n\t\t}\n\t\tconst iterator = this._notProvidedCustomExecutions.values();\n\t\tlet iteratorResult = iterator.next();\n\t\twhile (!iteratorResult.done) {\n\t\t\tif (!this._activeCustomExecutions2.has(iteratorResult.value) && (this._lastStartedTask !== iteratorResult.value)) {\n\t\t\t\tthis._providedCustomExecutions2.delete(iteratorResult.value);\n\t\t\t\tthis._notProvidedCustomExecutions.delete(iteratorResult.value);\n\t\t\t}\n\t\t\titeratorResult = iterator.next();\n\t\t}\n\t}\n\n\tpublic abstract $jsonTasksSupported(): Promise<boolean>;\n\n\tpublic abstract $findExecutable(command: string, cwd?: string | undefined, paths?: string[] | undefined): Promise<string | undefined>;\n}\n\nexport class WorkerExtHostTask extends ExtHostTaskBase {\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t\t@IExtHostWorkspace workspaceService: IExtHostWorkspace,\n\t\t@IExtHostDocumentsAndEditors editorService: IExtHostDocumentsAndEditors,\n\t\t@IExtHostConfiguration configurationService: IExtHostConfiguration,\n\t\t@IExtHostTerminalService extHostTerminalService: IExtHostTerminalService,\n\t\t@ILogService logService: ILogService,\n\t\t@IExtHostApiDeprecationService deprecationService: IExtHostApiDeprecationService\n\t) {\n\t\tsuper(extHostRpc, initData, workspaceService, editorService, configurationService, extHostTerminalService, logService, deprecationService);\n\t\tthis.registerTaskSystem(Schemas.vscodeRemote, {\n\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\tauthority: '',\n\t\t\tplatform: Platform.PlatformToString(Platform.Platform.Web)\n\t\t});\n\t}\n\n\tpublic async executeTask(extension: IExtensionDescription, task: vscode.Task): Promise<vscode.TaskExecution> {\n\t\tif (!task.execution) {\n\t\t\tthrow new Error('Tasks to execute must include an execution');\n\t\t}\n\n\t\tconst dto = TaskDTO.from(task, extension);\n\t\tif (dto === undefined) {\n\t\t\tthrow new Error('Task is not valid');\n\t\t}\n\n\t\t// If this task is a custom execution, then we need to save it away\n\t\t// in the provided custom execution map that is cleaned up after the\n\t\t// task is executed.\n\t\tif (CustomExecutionDTO.is(dto.execution)) {\n\t\t\tawait this.addCustomExecution(dto, task, false);\n\t\t} else {\n\t\t\tthrow new NotSupportedError();\n\t\t}\n\n\t\t// Always get the task execution first to prevent timing issues when retrieving it later\n\t\tconst execution = await this.getTaskExecution(await this._proxy.$getTaskExecution(dto), task);\n\t\tthis._proxy.$executeTask(dto).catch(error => { throw new Error(error); });\n\t\treturn execution;\n\t}\n\n\tprotected provideTasksInternal(validTypes: { [key: string]: boolean }, taskIdPromises: Promise<void>[], handler: HandlerData, value: vscode.Task[] | null | undefined): { tasks: tasks.ITaskDTO[]; extension: IExtensionDescription } {\n\t\tconst taskDTOs: tasks.ITaskDTO[] = [];\n\t\tif (value) {\n\t\t\tfor (const task of value) {\n\t\t\t\tthis.checkDeprecation(task, handler);\n\t\t\t\tif (!task.definition || !validTypes[task.definition.type]) {\n\t\t\t\t\tthis._logService.warn(`The task [${task.source}, ${task.name}] uses an undefined task type. The task will be ignored in the future.`);\n\t\t\t\t}\n\n\t\t\t\tconst taskDTO: tasks.ITaskDTO | undefined = TaskDTO.from(task, handler.extension);\n\t\t\t\tif (taskDTO && CustomExecutionDTO.is(taskDTO.execution)) {\n\t\t\t\t\ttaskDTOs.push(taskDTO);\n\t\t\t\t\t// The ID is calculated on the main thread task side, so, let's call into it here.\n\t\t\t\t\t// We need the task id's pre-computed for custom task executions because when OnDidStartTask\n\t\t\t\t\t// is invoked, we have to be able to map it back to our data.\n\t\t\t\t\ttaskIdPromises.push(this.addCustomExecution(taskDTO, task, true));\n\t\t\t\t} else {\n\t\t\t\t\tthis._logService.warn('Only custom execution tasks supported.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\ttasks: taskDTOs,\n\t\t\textension: handler.extension\n\t\t};\n\t}\n\n\tprotected async resolveTaskInternal(resolvedTaskDTO: tasks.ITaskDTO): Promise<tasks.ITaskDTO | undefined> {\n\t\tif (CustomExecutionDTO.is(resolvedTaskDTO.execution)) {\n\t\t\treturn resolvedTaskDTO;\n\t\t} else {\n\t\t\tthis._logService.warn('Only custom execution tasks supported.');\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic async $resolveVariables(uriComponents: UriComponents, toResolve: { process?: { name: string; cwd?: string; path?: string }; variables: string[] }): Promise<{ process?: string; variables: { [key: string]: string } }> {\n\t\tconst result = {\n\t\t\tprocess: <unknown>undefined as string,\n\t\t\tvariables: Object.create(null)\n\t\t};\n\t\treturn result;\n\t}\n\n\tpublic async $jsonTasksSupported(): Promise<boolean> {\n\t\treturn false;\n\t}\n\n\tpublic async $findExecutable(command: string, cwd?: string | undefined, paths?: string[] | undefined): Promise<string | undefined> {\n\t\treturn undefined;\n\t}\n}\n\nexport const IExtHostTask = createDecorator<IExtHostTask>('IExtHostTask');\n"]}