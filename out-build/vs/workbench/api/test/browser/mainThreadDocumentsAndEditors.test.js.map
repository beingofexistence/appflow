{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/test/browser/mainThreadDocumentsAndEditors.test.ts"],"names":[],"mappings":"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","file":"mainThreadDocumentsAndEditors.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { MainThreadDocumentsAndEditors } from 'vs/workbench/api/browser/mainThreadDocumentsAndEditors';\nimport { SingleProxyRPCProtocol } from 'vs/workbench/api/test/common/testRPCProtocol';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { ModelService } from 'vs/editor/common/services/modelService';\nimport { TestCodeEditorService } from 'vs/editor/test/browser/editorTestServices';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { ExtHostDocumentsAndEditorsShape, IDocumentsAndEditorsDelta } from 'vs/workbench/api/common/extHost.protocol';\nimport { createTestCodeEditor, ITestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport { mock } from 'vs/base/test/common/mock';\nimport { TestEditorService, TestEditorGroupsService, TestEnvironmentService, TestPathService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { Event } from 'vs/base/common/event';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { UndoRedoService } from 'vs/platform/undoRedo/common/undoRedoService';\nimport { TestDialogService } from 'vs/platform/dialogs/test/common/testDialogService';\nimport { TestNotificationService } from 'vs/platform/notification/test/common/testNotificationService';\nimport { TestTextResourcePropertiesService, TestWorkingCopyFileService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { TestLanguageConfigurationService } from 'vs/editor/test/common/modes/testLanguageConfigurationService';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { LanguageService } from 'vs/editor/common/services/languageService';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nsuite('MainThreadDocumentsAndEditors', () => {\n\n\tlet disposables: DisposableStore;\n\n\tlet modelService: ModelService;\n\tlet codeEditorService: TestCodeEditorService;\n\tlet textFileService: ITextFileService;\n\tconst deltas: IDocumentsAndEditorsDelta[] = [];\n\n\tfunction myCreateTestCodeEditor(model: ITextModel | undefined): ITestCodeEditor {\n\t\treturn createTestCodeEditor(model, {\n\t\t\thasTextFocus: false,\n\t\t\tserviceCollection: new ServiceCollection(\n\t\t\t\t[ICodeEditorService, codeEditorService]\n\t\t\t)\n\t\t});\n\t}\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\n\t\tdeltas.length = 0;\n\t\tconst configService = new TestConfigurationService();\n\t\tconfigService.setUserConfiguration('editor', { 'detectIndentation': false });\n\t\tconst dialogService = new TestDialogService();\n\t\tconst notificationService = new TestNotificationService();\n\t\tconst undoRedoService = new UndoRedoService(dialogService, notificationService);\n\t\tconst themeService = new TestThemeService();\n\t\tmodelService = new ModelService(\n\t\t\tconfigService,\n\t\t\tnew TestTextResourcePropertiesService(configService),\n\t\t\tundoRedoService,\n\t\t\tdisposables.add(new LanguageService()),\n\t\t\tnew TestLanguageConfigurationService(),\n\t\t);\n\t\tcodeEditorService = new TestCodeEditorService(themeService);\n\t\ttextFileService = new class extends mock<ITextFileService>() {\n\t\t\toverride isDirty() { return false; }\n\t\t\toverride files = <any>{\n\t\t\t\tonDidSave: Event.None,\n\t\t\t\tonDidRevert: Event.None,\n\t\t\t\tonDidChangeDirty: Event.None\n\t\t\t};\n\t\t};\n\t\tconst workbenchEditorService = new TestEditorService();\n\t\tconst editorGroupService = new TestEditorGroupsService();\n\n\t\tconst fileService = new class extends mock<IFileService>() {\n\t\t\toverride onDidRunOperation = Event.None;\n\t\t\toverride onDidChangeFileSystemProviderCapabilities = Event.None;\n\t\t\toverride onDidChangeFileSystemProviderRegistrations = Event.None;\n\t\t};\n\n\t\tnew MainThreadDocumentsAndEditors(\n\t\t\tSingleProxyRPCProtocol(new class extends mock<ExtHostDocumentsAndEditorsShape>() {\n\t\t\t\toverride $acceptDocumentsAndEditorsDelta(delta: IDocumentsAndEditorsDelta) { deltas.push(delta); }\n\t\t\t}),\n\t\t\tmodelService,\n\t\t\ttextFileService,\n\t\t\tworkbenchEditorService,\n\t\t\tcodeEditorService,\n\t\t\tfileService,\n\t\t\tnull!,\n\t\t\teditorGroupService,\n\t\t\tnew class extends mock<IPaneCompositePartService>() implements IPaneCompositePartService {\n\t\t\t\toverride onDidPaneCompositeOpen = Event.None;\n\t\t\t\toverride onDidPaneCompositeClose = Event.None;\n\t\t\t\toverride getActivePaneComposite() {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t\tTestEnvironmentService,\n\t\t\tnew TestWorkingCopyFileService(),\n\t\t\tnew UriIdentityService(fileService),\n\t\t\tnew class extends mock<IClipboardService>() {\n\t\t\t\toverride readText() {\n\t\t\t\t\treturn Promise.resolve('clipboard_contents');\n\t\t\t\t}\n\t\t\t},\n\t\t\tnew TestPathService(),\n\t\t\tnew TestConfigurationService(),\n\t\t);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Model#add', () => {\n\t\tdeltas.length = 0;\n\n\t\tdisposables.add(modelService.createModel('farboo', null));\n\n\t\tassert.strictEqual(deltas.length, 1);\n\t\tconst [delta] = deltas;\n\n\t\tassert.strictEqual(delta.addedDocuments!.length, 1);\n\t\tassert.strictEqual(delta.removedDocuments, undefined);\n\t\tassert.strictEqual(delta.addedEditors, undefined);\n\t\tassert.strictEqual(delta.removedEditors, undefined);\n\t\tassert.strictEqual(delta.newActiveEditor, undefined);\n\t});\n\n\ttest('ignore huge model', function () {\n\n\t\tconst oldLimit = TextModel._MODEL_SYNC_LIMIT;\n\t\ttry {\n\t\t\tconst largeModelString = 'abc'.repeat(1024);\n\t\t\tTextModel._MODEL_SYNC_LIMIT = largeModelString.length / 2;\n\n\t\t\tconst model = modelService.createModel(largeModelString, null);\n\t\t\tdisposables.add(model);\n\t\t\tassert.ok(model.isTooLargeForSyncing());\n\n\t\t\tassert.strictEqual(deltas.length, 1);\n\t\t\tconst [delta] = deltas;\n\t\t\tassert.strictEqual(delta.newActiveEditor, null);\n\t\t\tassert.strictEqual(delta.addedDocuments, undefined);\n\t\t\tassert.strictEqual(delta.removedDocuments, undefined);\n\t\t\tassert.strictEqual(delta.addedEditors, undefined);\n\t\t\tassert.strictEqual(delta.removedEditors, undefined);\n\n\t\t} finally {\n\t\t\tTextModel._MODEL_SYNC_LIMIT = oldLimit;\n\t\t}\n\t});\n\n\ttest('ignore huge model from editor', function () {\n\n\t\tconst oldLimit = TextModel._MODEL_SYNC_LIMIT;\n\t\ttry {\n\t\t\tconst largeModelString = 'abc'.repeat(1024);\n\t\t\tTextModel._MODEL_SYNC_LIMIT = largeModelString.length / 2;\n\n\t\t\tconst model = modelService.createModel(largeModelString, null);\n\t\t\tconst editor = myCreateTestCodeEditor(model);\n\n\t\t\tassert.strictEqual(deltas.length, 1);\n\t\t\tdeltas.length = 0;\n\t\t\tassert.strictEqual(deltas.length, 0);\n\t\t\teditor.dispose();\n\t\t\tmodel.dispose();\n\n\t\t} finally {\n\t\t\tTextModel._MODEL_SYNC_LIMIT = oldLimit;\n\t\t}\n\t});\n\n\ttest('ignore simple widget model', function () {\n\t\tthis.timeout(1000 * 60); // increase timeout for this one test\n\n\t\tconst model = modelService.createModel('test', null, undefined, true);\n\t\tdisposables.add(model);\n\t\tassert.ok(model.isForSimpleWidget);\n\n\t\tassert.strictEqual(deltas.length, 1);\n\t\tconst [delta] = deltas;\n\t\tassert.strictEqual(delta.newActiveEditor, null);\n\t\tassert.strictEqual(delta.addedDocuments, undefined);\n\t\tassert.strictEqual(delta.removedDocuments, undefined);\n\t\tassert.strictEqual(delta.addedEditors, undefined);\n\t\tassert.strictEqual(delta.removedEditors, undefined);\n\t});\n\n\ttest('ignore editor w/o model', () => {\n\t\tconst editor = myCreateTestCodeEditor(undefined);\n\t\tassert.strictEqual(deltas.length, 1);\n\t\tconst [delta] = deltas;\n\t\tassert.strictEqual(delta.newActiveEditor, null);\n\t\tassert.strictEqual(delta.addedDocuments, undefined);\n\t\tassert.strictEqual(delta.removedDocuments, undefined);\n\t\tassert.strictEqual(delta.addedEditors, undefined);\n\t\tassert.strictEqual(delta.removedEditors, undefined);\n\n\t\teditor.dispose();\n\t});\n\n\ttest('editor with model', () => {\n\t\tdeltas.length = 0;\n\n\t\tconst model = modelService.createModel('farboo', null);\n\t\tconst editor = myCreateTestCodeEditor(model);\n\n\t\tassert.strictEqual(deltas.length, 2);\n\t\tconst [first, second] = deltas;\n\t\tassert.strictEqual(first.addedDocuments!.length, 1);\n\t\tassert.strictEqual(first.newActiveEditor, undefined);\n\t\tassert.strictEqual(first.removedDocuments, undefined);\n\t\tassert.strictEqual(first.addedEditors, undefined);\n\t\tassert.strictEqual(first.removedEditors, undefined);\n\n\t\tassert.strictEqual(second.addedEditors!.length, 1);\n\t\tassert.strictEqual(second.addedDocuments, undefined);\n\t\tassert.strictEqual(second.removedDocuments, undefined);\n\t\tassert.strictEqual(second.removedEditors, undefined);\n\t\tassert.strictEqual(second.newActiveEditor, undefined);\n\n\t\teditor.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('editor with dispos-ed/-ing model', () => {\n\t\tconst model = modelService.createModel('farboo', null);\n\t\tconst editor = myCreateTestCodeEditor(model);\n\n\t\t// ignore things until now\n\t\tdeltas.length = 0;\n\n\t\tmodelService.destroyModel(model.uri);\n\t\tassert.strictEqual(deltas.length, 1);\n\t\tconst [first] = deltas;\n\n\t\tassert.strictEqual(first.newActiveEditor, undefined);\n\t\tassert.strictEqual(first.removedEditors!.length, 1);\n\t\tassert.strictEqual(first.removedDocuments!.length, 1);\n\t\tassert.strictEqual(first.addedDocuments, undefined);\n\t\tassert.strictEqual(first.addedEditors, undefined);\n\n\t\teditor.dispose();\n\t\tmodel.dispose();\n\t});\n});\n"]}