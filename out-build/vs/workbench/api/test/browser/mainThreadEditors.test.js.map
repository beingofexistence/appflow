{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/test/browser/mainThreadEditors.test.ts"],"names":[],"mappings":"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","file":"mainThreadEditors.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Event } from 'vs/base/common/event';\nimport { DisposableStore, IReference, ImmortalReference } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { mock } from 'vs/base/test/common/mock';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IBulkEditService } from 'vs/editor/browser/services/bulkEditService';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ITextSnapshot } from 'vs/editor/common/model';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorker';\nimport { LanguageService } from 'vs/editor/common/services/languageService';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ModelService } from 'vs/editor/common/services/modelService';\nimport { IResolvedTextEditorModel, ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { TestCodeEditorService } from 'vs/editor/test/browser/editorTestServices';\nimport { TestLanguageConfigurationService } from 'vs/editor/test/common/modes/testLanguageConfigurationService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { TestDialogService } from 'vs/platform/dialogs/test/common/testDialogService';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { TestNotificationService } from 'vs/platform/notification/test/common/testNotificationService';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { IUndoRedoService } from 'vs/platform/undoRedo/common/undoRedo';\nimport { UndoRedoService } from 'vs/platform/undoRedo/common/undoRedoService';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { MainThreadBulkEdits } from 'vs/workbench/api/browser/mainThreadBulkEdits';\nimport { IWorkspaceTextEditDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { SingleProxyRPCProtocol } from 'vs/workbench/api/test/common/testRPCProtocol';\nimport { BulkEditService } from 'vs/workbench/contrib/bulkEdit/browser/bulkEditService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { LabelService } from 'vs/workbench/services/label/common/labelService';\nimport { ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { ICopyOperation, ICreateFileOperation, ICreateOperation, IDeleteOperation, IMoveOperation, IWorkingCopyFileService } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';\nimport { IWorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { TestEditorGroupsService, TestEditorService, TestEnvironmentService, TestFileService, TestLifecycleService, TestWorkingCopyService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { TestContextService, TestTextResourcePropertiesService } from 'vs/workbench/test/common/workbenchTestServices';\n\nsuite('MainThreadEditors', () => {\n\n\tlet disposables: DisposableStore;\n\tconst resource = URI.parse('foo:bar');\n\n\tlet modelService: IModelService;\n\n\tlet bulkEdits: MainThreadBulkEdits;\n\n\tconst movedResources = new Map<URI, URI>();\n\tconst copiedResources = new Map<URI, URI>();\n\tconst createdResources = new Set<URI>();\n\tconst deletedResources = new Set<URI>();\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\n\t\tmovedResources.clear();\n\t\tcopiedResources.clear();\n\t\tcreatedResources.clear();\n\t\tdeletedResources.clear();\n\n\n\t\tconst configService = new TestConfigurationService();\n\t\tconst dialogService = new TestDialogService();\n\t\tconst notificationService = new TestNotificationService();\n\t\tconst undoRedoService = new UndoRedoService(dialogService, notificationService);\n\t\tconst themeService = new TestThemeService();\n\t\tmodelService = new ModelService(\n\t\t\tconfigService,\n\t\t\tnew TestTextResourcePropertiesService(configService),\n\t\t\tundoRedoService,\n\t\t\tdisposables.add(new LanguageService()),\n\t\t\tnew TestLanguageConfigurationService(),\n\t\t);\n\n\t\tconst services = new ServiceCollection();\n\t\tservices.set(IBulkEditService, new SyncDescriptor(BulkEditService));\n\t\tservices.set(ILabelService, new SyncDescriptor(LabelService));\n\t\tservices.set(ILogService, new NullLogService());\n\t\tservices.set(IWorkspaceContextService, new TestContextService());\n\t\tservices.set(IEnvironmentService, TestEnvironmentService);\n\t\tservices.set(IWorkbenchEnvironmentService, TestEnvironmentService);\n\t\tservices.set(IConfigurationService, configService);\n\t\tservices.set(IDialogService, dialogService);\n\t\tservices.set(INotificationService, notificationService);\n\t\tservices.set(IUndoRedoService, undoRedoService);\n\t\tservices.set(IModelService, modelService);\n\t\tservices.set(ICodeEditorService, new TestCodeEditorService(themeService));\n\t\tservices.set(IFileService, new TestFileService());\n\t\tservices.set(IUriIdentityService, new SyncDescriptor(UriIdentityService));\n\t\tservices.set(IEditorService, new TestEditorService());\n\t\tservices.set(ILifecycleService, new TestLifecycleService());\n\t\tservices.set(IWorkingCopyService, new TestWorkingCopyService());\n\t\tservices.set(IEditorGroupsService, new TestEditorGroupsService());\n\t\tservices.set(ITextFileService, new class extends mock<ITextFileService>() {\n\t\t\toverride isDirty() { return false; }\n\t\t\toverride files = <any>{\n\t\t\t\tonDidSave: Event.None,\n\t\t\t\tonDidRevert: Event.None,\n\t\t\t\tonDidChangeDirty: Event.None\n\t\t\t};\n\t\t\toverride create(operations: { resource: URI }[]) {\n\t\t\t\tfor (const o of operations) {\n\t\t\t\t\tcreatedResources.add(o.resource);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(Object.create(null));\n\t\t\t}\n\t\t\toverride async getEncodedReadable(resource: URI, value?: string | ITextSnapshot): Promise<any> {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\t\tservices.set(IWorkingCopyFileService, new class extends mock<IWorkingCopyFileService>() {\n\t\t\toverride onDidRunWorkingCopyFileOperation = Event.None;\n\t\t\toverride createFolder(operations: ICreateOperation[]): any {\n\t\t\t\tthis.create(operations);\n\t\t\t}\n\t\t\toverride create(operations: ICreateFileOperation[]) {\n\t\t\t\tfor (const operation of operations) {\n\t\t\t\t\tcreatedResources.add(operation.resource);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(Object.create(null));\n\t\t\t}\n\t\t\toverride move(operations: IMoveOperation[]) {\n\t\t\t\tconst { source, target } = operations[0].file;\n\t\t\t\tmovedResources.set(source, target);\n\t\t\t\treturn Promise.resolve(Object.create(null));\n\t\t\t}\n\t\t\toverride copy(operations: ICopyOperation[]) {\n\t\t\t\tconst { source, target } = operations[0].file;\n\t\t\t\tcopiedResources.set(source, target);\n\t\t\t\treturn Promise.resolve(Object.create(null));\n\t\t\t}\n\t\t\toverride delete(operations: IDeleteOperation[]) {\n\t\t\t\tfor (const operation of operations) {\n\t\t\t\t\tdeletedResources.add(operation.resource);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\t\t});\n\t\tservices.set(ITextModelService, new class extends mock<ITextModelService>() {\n\t\t\toverride createModelReference(resource: URI): Promise<IReference<IResolvedTextEditorModel>> {\n\t\t\t\tconst textEditorModel = new class extends mock<IResolvedTextEditorModel>() {\n\t\t\t\t\toverride textEditorModel = modelService.getModel(resource)!;\n\t\t\t\t};\n\t\t\t\ttextEditorModel.isReadonly = () => false;\n\t\t\t\treturn Promise.resolve(new ImmortalReference(textEditorModel));\n\t\t\t}\n\t\t});\n\t\tservices.set(IEditorWorkerService, new class extends mock<IEditorWorkerService>() {\n\n\t\t});\n\t\tservices.set(IPaneCompositePartService, new class extends mock<IPaneCompositePartService>() implements IPaneCompositePartService {\n\t\t\toverride onDidPaneCompositeOpen = Event.None;\n\t\t\toverride onDidPaneCompositeClose = Event.None;\n\t\t\toverride getActivePaneComposite() {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\n\t\tconst instaService = new InstantiationService(services);\n\n\t\tbulkEdits = instaService.createInstance(MainThreadBulkEdits, SingleProxyRPCProtocol(null));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest(`applyWorkspaceEdit returns false if model is changed by user`, () => {\n\n\t\tconst model = disposables.add(modelService.createModel('something', null, resource));\n\n\t\tconst workspaceResourceEdit: IWorkspaceTextEditDto = {\n\t\t\tresource: resource,\n\t\t\tversionId: model.getVersionId(),\n\t\t\ttextEdit: {\n\t\t\t\ttext: 'asdfg',\n\t\t\t\trange: new Range(1, 1, 1, 1)\n\t\t\t}\n\t\t};\n\n\t\t// Act as if the user edited the model\n\t\tmodel.applyEdits([EditOperation.insert(new Position(0, 0), 'something')]);\n\n\t\treturn bulkEdits.$tryApplyWorkspaceEdit({ edits: [workspaceResourceEdit] }).then((result) => {\n\t\t\tassert.strictEqual(result, false);\n\t\t});\n\t});\n\n\ttest(`issue #54773: applyWorkspaceEdit checks model version in race situation`, () => {\n\n\t\tconst model = disposables.add(modelService.createModel('something', null, resource));\n\n\t\tconst workspaceResourceEdit1: IWorkspaceTextEditDto = {\n\t\t\tresource: resource,\n\t\t\tversionId: model.getVersionId(),\n\t\t\ttextEdit: {\n\t\t\t\ttext: 'asdfg',\n\t\t\t\trange: new Range(1, 1, 1, 1)\n\t\t\t}\n\t\t};\n\t\tconst workspaceResourceEdit2: IWorkspaceTextEditDto = {\n\t\t\tresource: resource,\n\t\t\tversionId: model.getVersionId(),\n\t\t\ttextEdit: {\n\t\t\t\ttext: 'asdfg',\n\t\t\t\trange: new Range(1, 1, 1, 1)\n\t\t\t}\n\t\t};\n\n\t\tconst p1 = bulkEdits.$tryApplyWorkspaceEdit({ edits: [workspaceResourceEdit1] }).then((result) => {\n\t\t\t// first edit request succeeds\n\t\t\tassert.strictEqual(result, true);\n\t\t});\n\t\tconst p2 = bulkEdits.$tryApplyWorkspaceEdit({ edits: [workspaceResourceEdit2] }).then((result) => {\n\t\t\t// second edit request fails\n\t\t\tassert.strictEqual(result, false);\n\t\t});\n\t\treturn Promise.all([p1, p2]);\n\t});\n\n\ttest(`applyWorkspaceEdit with only resource edit`, () => {\n\t\treturn bulkEdits.$tryApplyWorkspaceEdit({\n\t\t\tedits: [\n\t\t\t\t{ oldResource: resource, newResource: resource, options: undefined },\n\t\t\t\t{ oldResource: undefined, newResource: resource, options: undefined },\n\t\t\t\t{ oldResource: resource, newResource: undefined, options: undefined }\n\t\t\t]\n\t\t}).then((result) => {\n\t\t\tassert.strictEqual(result, true);\n\t\t\tassert.strictEqual(movedResources.get(resource), resource);\n\t\t\tassert.strictEqual(createdResources.has(resource), true);\n\t\t\tassert.strictEqual(deletedResources.has(resource), true);\n\t\t});\n\t});\n});\n"]}