{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/test/browser/extHostDiagnostics.test.ts"],"names":[],"mappings":"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","file":"extHostDiagnostics.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { DiagnosticCollection, ExtHostDiagnostics } from 'vs/workbench/api/common/extHostDiagnostics';\nimport { Diagnostic, DiagnosticSeverity, Range, DiagnosticRelatedInformation, Location } from 'vs/workbench/api/common/extHostTypes';\nimport { MainThreadDiagnosticsShape, IMainContext } from 'vs/workbench/api/common/extHost.protocol';\nimport { IMarkerData, MarkerSeverity } from 'vs/platform/markers/common/markers';\nimport { mock } from 'vs/base/test/common/mock';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport type * as vscode from 'vscode';\nimport { nullExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { ExtUri, extUri } from 'vs/base/common/resources';\nimport { IExtHostFileSystemInfo } from 'vs/workbench/api/common/extHostFileSystemInfo';\nimport { runWithFakedTimers } from 'vs/base/test/common/timeTravelScheduler';\nimport { IExtHostDocumentsAndEditors } from 'vs/workbench/api/common/extHostDocumentsAndEditors';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nsuite('ExtHostDiagnostics', () => {\n\n\tclass DiagnosticsShape extends mock<MainThreadDiagnosticsShape>() {\n\t\toverride $changeMany(owner: string, entries: [UriComponents, IMarkerData[]][]): void {\n\t\t\t//\n\t\t}\n\t\toverride $clear(owner: string): void {\n\t\t\t//\n\t\t}\n\t}\n\n\tconst fileSystemInfoService = new class extends mock<IExtHostFileSystemInfo>() {\n\t\toverride readonly extUri = extUri;\n\t};\n\n\tconst versionProvider = (uri: URI): number | undefined => {\n\t\treturn undefined;\n\t};\n\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('disposeCheck', () => {\n\n\t\tconst collection = new DiagnosticCollection('test', 'test', 100, 100, versionProvider, extUri, new DiagnosticsShape(), new Emitter());\n\n\t\tcollection.dispose();\n\t\tcollection.dispose(); // that's OK\n\t\tassert.throws(() => collection.name);\n\t\tassert.throws(() => collection.clear());\n\t\tassert.throws(() => collection.delete(URI.parse('aa:bb')));\n\t\tassert.throws(() => collection.forEach(() => { }));\n\t\tassert.throws(() => collection.get(URI.parse('aa:bb')));\n\t\tassert.throws(() => collection.has(URI.parse('aa:bb')));\n\t\tassert.throws(() => collection.set(URI.parse('aa:bb'), []));\n\t\tassert.throws(() => collection.set(URI.parse('aa:bb'), undefined!));\n\t});\n\n\n\ttest('diagnostic collection, forEach, clear, has', function () {\n\t\tlet collection = new DiagnosticCollection('test', 'test', 100, 100, versionProvider, extUri, new DiagnosticsShape(), new Emitter());\n\t\tassert.strictEqual(collection.name, 'test');\n\t\tcollection.dispose();\n\t\tassert.throws(() => collection.name);\n\n\t\tlet c = 0;\n\t\tcollection = new DiagnosticCollection('test', 'test', 100, 100, versionProvider, extUri, new DiagnosticsShape(), new Emitter());\n\t\tcollection.forEach(() => c++);\n\t\tassert.strictEqual(c, 0);\n\n\t\tcollection.set(URI.parse('foo:bar'), [\n\t\t\tnew Diagnostic(new Range(0, 0, 1, 1), 'message-1'),\n\t\t\tnew Diagnostic(new Range(0, 0, 1, 1), 'message-2')\n\t\t]);\n\t\tcollection.forEach(() => c++);\n\t\tassert.strictEqual(c, 1);\n\n\t\tc = 0;\n\t\tcollection.clear();\n\t\tcollection.forEach(() => c++);\n\t\tassert.strictEqual(c, 0);\n\n\t\tcollection.set(URI.parse('foo:bar1'), [\n\t\t\tnew Diagnostic(new Range(0, 0, 1, 1), 'message-1'),\n\t\t\tnew Diagnostic(new Range(0, 0, 1, 1), 'message-2')\n\t\t]);\n\t\tcollection.set(URI.parse('foo:bar2'), [\n\t\t\tnew Diagnostic(new Range(0, 0, 1, 1), 'message-1'),\n\t\t\tnew Diagnostic(new Range(0, 0, 1, 1), 'message-2')\n\t\t]);\n\t\tcollection.forEach(() => c++);\n\t\tassert.strictEqual(c, 2);\n\n\t\tassert.ok(collection.has(URI.parse('foo:bar1')));\n\t\tassert.ok(collection.has(URI.parse('foo:bar2')));\n\t\tassert.ok(!collection.has(URI.parse('foo:bar3')));\n\t\tcollection.delete(URI.parse('foo:bar1'));\n\t\tassert.ok(!collection.has(URI.parse('foo:bar1')));\n\n\t\tcollection.dispose();\n\t});\n\n\ttest('diagnostic collection, immutable read', function () {\n\t\tconst collection = new DiagnosticCollection('test', 'test', 100, 100, versionProvider, extUri, new DiagnosticsShape(), new Emitter());\n\t\tcollection.set(URI.parse('foo:bar'), [\n\t\t\tnew Diagnostic(new Range(0, 0, 1, 1), 'message-1'),\n\t\t\tnew Diagnostic(new Range(0, 0, 1, 1), 'message-2')\n\t\t]);\n\n\t\tlet array = collection.get(URI.parse('foo:bar')) as Diagnostic[];\n\t\tassert.throws(() => array.length = 0);\n\t\tassert.throws(() => array.pop());\n\t\tassert.throws(() => array[0] = new Diagnostic(new Range(0, 0, 0, 0), 'evil'));\n\n\t\tcollection.forEach((uri: URI, array: readonly vscode.Diagnostic[]): any => {\n\t\t\tassert.throws(() => (array as Diagnostic[]).length = 0);\n\t\t\tassert.throws(() => (array as Diagnostic[]).pop());\n\t\t\tassert.throws(() => (array as Diagnostic[])[0] = new Diagnostic(new Range(0, 0, 0, 0), 'evil'));\n\t\t});\n\n\t\tarray = collection.get(URI.parse('foo:bar')) as Diagnostic[];\n\t\tassert.strictEqual(array.length, 2);\n\n\t\tcollection.dispose();\n\t});\n\n\n\ttest('diagnostics collection, set with dupliclated tuples', function () {\n\t\tconst collection = new DiagnosticCollection('test', 'test', 100, 100, versionProvider, extUri, new DiagnosticsShape(), new Emitter());\n\t\tconst uri = URI.parse('sc:hightower');\n\t\tcollection.set([\n\t\t\t[uri, [new Diagnostic(new Range(0, 0, 0, 1), 'message-1')]],\n\t\t\t[URI.parse('some:thing'), [new Diagnostic(new Range(0, 0, 1, 1), 'something')]],\n\t\t\t[uri, [new Diagnostic(new Range(0, 0, 0, 1), 'message-2')]],\n\t\t]);\n\n\t\tlet array = collection.get(uri);\n\t\tassert.strictEqual(array.length, 2);\n\t\tlet [first, second] = array;\n\t\tassert.strictEqual(first.message, 'message-1');\n\t\tassert.strictEqual(second.message, 'message-2');\n\n\t\t// clear\n\t\tcollection.delete(uri);\n\t\tassert.ok(!collection.has(uri));\n\n\t\t// bad tuple clears 1/2\n\t\tcollection.set([\n\t\t\t[uri, [new Diagnostic(new Range(0, 0, 0, 1), 'message-1')]],\n\t\t\t[URI.parse('some:thing'), [new Diagnostic(new Range(0, 0, 1, 1), 'something')]],\n\t\t\t[uri, undefined!]\n\t\t]);\n\t\tassert.ok(!collection.has(uri));\n\n\t\t// clear\n\t\tcollection.delete(uri);\n\t\tassert.ok(!collection.has(uri));\n\n\t\t// bad tuple clears 2/2\n\t\tcollection.set([\n\t\t\t[uri, [new Diagnostic(new Range(0, 0, 0, 1), 'message-1')]],\n\t\t\t[URI.parse('some:thing'), [new Diagnostic(new Range(0, 0, 1, 1), 'something')]],\n\t\t\t[uri, undefined!],\n\t\t\t[uri, [new Diagnostic(new Range(0, 0, 0, 1), 'message-2')]],\n\t\t\t[uri, [new Diagnostic(new Range(0, 0, 0, 1), 'message-3')]],\n\t\t]);\n\n\t\tarray = collection.get(uri);\n\t\tassert.strictEqual(array.length, 2);\n\t\t[first, second] = array;\n\t\tassert.strictEqual(first.message, 'message-2');\n\t\tassert.strictEqual(second.message, 'message-3');\n\n\t\tcollection.dispose();\n\t});\n\n\ttest('diagnostics collection, set tuple overrides, #11547', function () {\n\n\t\tlet lastEntries!: [UriComponents, IMarkerData[]][];\n\t\tconst collection = new DiagnosticCollection('test', 'test', 100, 100, versionProvider, extUri, new class extends DiagnosticsShape {\n\t\t\toverride $changeMany(owner: string, entries: [UriComponents, IMarkerData[]][]): void {\n\t\t\t\tlastEntries = entries;\n\t\t\t\treturn super.$changeMany(owner, entries);\n\t\t\t}\n\t\t}, new Emitter());\n\t\tconst uri = URI.parse('sc:hightower');\n\n\t\tcollection.set([[uri, [new Diagnostic(new Range(0, 0, 1, 1), 'error')]]]);\n\t\tassert.strictEqual(collection.get(uri).length, 1);\n\t\tassert.strictEqual(collection.get(uri)[0].message, 'error');\n\t\tassert.strictEqual(lastEntries.length, 1);\n\t\tconst [[, data1]] = lastEntries;\n\t\tassert.strictEqual(data1.length, 1);\n\t\tassert.strictEqual(data1[0].message, 'error');\n\t\tlastEntries = undefined!;\n\n\t\tcollection.set([[uri, [new Diagnostic(new Range(0, 0, 1, 1), 'warning')]]]);\n\t\tassert.strictEqual(collection.get(uri).length, 1);\n\t\tassert.strictEqual(collection.get(uri)[0].message, 'warning');\n\t\tassert.strictEqual(lastEntries.length, 1);\n\t\tconst [[, data2]] = lastEntries;\n\t\tassert.strictEqual(data2.length, 1);\n\t\tassert.strictEqual(data2[0].message, 'warning');\n\t\tlastEntries = undefined!;\n\t});\n\n\ttest('do send message when not making a change', function () {\n\n\t\tlet changeCount = 0;\n\t\tlet eventCount = 0;\n\n\t\tconst emitter = new Emitter<any>();\n\t\tstore.add(emitter.event(_ => eventCount += 1));\n\t\tconst collection = new DiagnosticCollection('test', 'test', 100, 100, versionProvider, extUri, new class extends DiagnosticsShape {\n\t\t\toverride $changeMany() {\n\t\t\t\tchangeCount += 1;\n\t\t\t}\n\t\t}, emitter);\n\n\t\tconst uri = URI.parse('sc:hightower');\n\t\tconst diag = new Diagnostic(new Range(0, 0, 0, 1), 'ffff');\n\n\t\tcollection.set(uri, [diag]);\n\t\tassert.strictEqual(changeCount, 1);\n\t\tassert.strictEqual(eventCount, 1);\n\n\t\tcollection.set(uri, [diag]);\n\t\tassert.strictEqual(changeCount, 2);\n\t\tassert.strictEqual(eventCount, 2);\n\n\t});\n\n\ttest('diagnostics collection, tuples and undefined (small array), #15585', function () {\n\n\t\tconst collection = new DiagnosticCollection('test', 'test', 100, 100, versionProvider, extUri, new DiagnosticsShape(), new Emitter());\n\t\tconst uri = URI.parse('sc:hightower');\n\t\tconst uri2 = URI.parse('sc:nomad');\n\t\tconst diag = new Diagnostic(new Range(0, 0, 0, 1), 'ffff');\n\n\t\tcollection.set([\n\t\t\t[uri, [diag, diag, diag]],\n\t\t\t[uri, undefined!],\n\t\t\t[uri, [diag]],\n\n\t\t\t[uri2, [diag, diag]],\n\t\t\t[uri2, undefined!],\n\t\t\t[uri2, [diag]],\n\t\t]);\n\n\t\tassert.strictEqual(collection.get(uri).length, 1);\n\t\tassert.strictEqual(collection.get(uri2).length, 1);\n\t});\n\n\ttest('diagnostics collection, tuples and undefined (large array), #15585', function () {\n\n\t\tconst collection = new DiagnosticCollection('test', 'test', 100, 100, versionProvider, extUri, new DiagnosticsShape(), new Emitter());\n\t\tconst tuples: [URI, Diagnostic[]][] = [];\n\n\t\tfor (let i = 0; i < 500; i++) {\n\t\t\tconst uri = URI.parse('sc:hightower#' + i);\n\t\t\tconst diag = new Diagnostic(new Range(0, 0, 0, 1), i.toString());\n\n\t\t\ttuples.push([uri, [diag, diag, diag]]);\n\t\t\ttuples.push([uri, undefined!]);\n\t\t\ttuples.push([uri, [diag]]);\n\t\t}\n\n\t\tcollection.set(tuples);\n\n\t\tfor (let i = 0; i < 500; i++) {\n\t\t\tconst uri = URI.parse('sc:hightower#' + i);\n\t\t\tassert.strictEqual(collection.has(uri), true);\n\t\t\tassert.strictEqual(collection.get(uri).length, 1);\n\t\t}\n\t});\n\n\ttest('diagnostic capping (max per file)', function () {\n\n\t\tlet lastEntries!: [UriComponents, IMarkerData[]][];\n\t\tconst collection = new DiagnosticCollection('test', 'test', 100, 250, versionProvider, extUri, new class extends DiagnosticsShape {\n\t\t\toverride $changeMany(owner: string, entries: [UriComponents, IMarkerData[]][]): void {\n\t\t\t\tlastEntries = entries;\n\t\t\t\treturn super.$changeMany(owner, entries);\n\t\t\t}\n\t\t}, new Emitter());\n\t\tconst uri = URI.parse('aa:bb');\n\n\t\tconst diagnostics: Diagnostic[] = [];\n\t\tfor (let i = 0; i < 500; i++) {\n\t\t\tdiagnostics.push(new Diagnostic(new Range(i, 0, i + 1, 0), `error#${i}`, i < 300\n\t\t\t\t? DiagnosticSeverity.Warning\n\t\t\t\t: DiagnosticSeverity.Error));\n\t\t}\n\n\t\tcollection.set(uri, diagnostics);\n\t\tassert.strictEqual(collection.get(uri).length, 500);\n\t\tassert.strictEqual(lastEntries.length, 1);\n\t\tassert.strictEqual(lastEntries[0][1].length, 251);\n\t\tassert.strictEqual(lastEntries[0][1][0].severity, MarkerSeverity.Error);\n\t\tassert.strictEqual(lastEntries[0][1][200].severity, MarkerSeverity.Warning);\n\t\tassert.strictEqual(lastEntries[0][1][250].severity, MarkerSeverity.Info);\n\t});\n\n\ttest('diagnostic capping (max files)', function () {\n\n\t\tlet lastEntries!: [UriComponents, IMarkerData[]][];\n\t\tconst collection = new DiagnosticCollection('test', 'test', 2, 1, versionProvider, extUri, new class extends DiagnosticsShape {\n\t\t\toverride $changeMany(owner: string, entries: [UriComponents, IMarkerData[]][]): void {\n\t\t\t\tlastEntries = entries;\n\t\t\t\treturn super.$changeMany(owner, entries);\n\t\t\t}\n\t\t}, new Emitter());\n\n\t\tconst diag = new Diagnostic(new Range(0, 0, 1, 1), 'Hello');\n\n\n\t\tcollection.set([\n\t\t\t[URI.parse('aa:bb1'), [diag]],\n\t\t\t[URI.parse('aa:bb2'), [diag]],\n\t\t\t[URI.parse('aa:bb3'), [diag]],\n\t\t\t[URI.parse('aa:bb4'), [diag]],\n\t\t]);\n\t\tassert.strictEqual(lastEntries.length, 3); // goes above the limit and then stops\n\t});\n\n\ttest('diagnostic eventing', async function () {\n\t\tconst emitter = new Emitter<readonly URI[]>();\n\t\tconst collection = new DiagnosticCollection('ddd', 'test', 100, 100, versionProvider, extUri, new DiagnosticsShape(), emitter);\n\n\t\tconst diag1 = new Diagnostic(new Range(1, 1, 2, 3), 'diag1');\n\t\tconst diag2 = new Diagnostic(new Range(1, 1, 2, 3), 'diag2');\n\t\tconst diag3 = new Diagnostic(new Range(1, 1, 2, 3), 'diag3');\n\n\t\tlet p = Event.toPromise(emitter.event).then(a => {\n\t\t\tassert.strictEqual(a.length, 1);\n\t\t\tassert.strictEqual(a[0].toString(), 'aa:bb');\n\t\t\tassert.ok(URI.isUri(a[0]));\n\t\t});\n\t\tcollection.set(URI.parse('aa:bb'), []);\n\t\tawait p;\n\n\t\tp = Event.toPromise(emitter.event).then(e => {\n\t\t\tassert.strictEqual(e.length, 2);\n\t\t\tassert.ok(URI.isUri(e[0]));\n\t\t\tassert.ok(URI.isUri(e[1]));\n\t\t\tassert.strictEqual(e[0].toString(), 'aa:bb');\n\t\t\tassert.strictEqual(e[1].toString(), 'aa:cc');\n\t\t});\n\t\tcollection.set([\n\t\t\t[URI.parse('aa:bb'), [diag1]],\n\t\t\t[URI.parse('aa:cc'), [diag2, diag3]],\n\t\t]);\n\t\tawait p;\n\n\t\tp = Event.toPromise(emitter.event).then(e => {\n\t\t\tassert.strictEqual(e.length, 2);\n\t\t\tassert.ok(URI.isUri(e[0]));\n\t\t\tassert.ok(URI.isUri(e[1]));\n\t\t});\n\t\tcollection.clear();\n\t\tawait p;\n\t});\n\n\ttest('vscode.languages.onDidChangeDiagnostics Does Not Provide Document URI #49582', async function () {\n\t\tconst emitter = new Emitter<readonly URI[]>();\n\t\tconst collection = new DiagnosticCollection('ddd', 'test', 100, 100, versionProvider, extUri, new DiagnosticsShape(), emitter);\n\n\t\tconst diag1 = new Diagnostic(new Range(1, 1, 2, 3), 'diag1');\n\n\t\t// delete\n\t\tcollection.set(URI.parse('aa:bb'), [diag1]);\n\t\tlet p = Event.toPromise(emitter.event).then(e => {\n\t\t\tassert.strictEqual(e[0].toString(), 'aa:bb');\n\t\t});\n\t\tcollection.delete(URI.parse('aa:bb'));\n\t\tawait p;\n\n\t\t// set->undefined (as delete)\n\t\tcollection.set(URI.parse('aa:bb'), [diag1]);\n\t\tp = Event.toPromise(emitter.event).then(e => {\n\t\t\tassert.strictEqual(e[0].toString(), 'aa:bb');\n\t\t});\n\t\tcollection.set(URI.parse('aa:bb'), undefined!);\n\t\tawait p;\n\t});\n\n\ttest('diagnostics with related information', function (done) {\n\n\t\tconst collection = new DiagnosticCollection('ddd', 'test', 100, 100, versionProvider, extUri, new class extends DiagnosticsShape {\n\t\t\toverride $changeMany(owner: string, entries: [UriComponents, IMarkerData[]][]) {\n\n\t\t\t\tconst [[, data]] = entries;\n\t\t\t\tassert.strictEqual(entries.length, 1);\n\t\t\t\tassert.strictEqual(data.length, 1);\n\n\t\t\t\tconst [diag] = data;\n\t\t\t\tassert.strictEqual(diag.relatedInformation!.length, 2);\n\t\t\t\tassert.strictEqual(diag.relatedInformation![0].message, 'more1');\n\t\t\t\tassert.strictEqual(diag.relatedInformation![1].message, 'more2');\n\t\t\t\tdone();\n\t\t\t}\n\t\t}, new Emitter<any>());\n\n\t\tconst diag = new Diagnostic(new Range(0, 0, 1, 1), 'Foo');\n\t\tdiag.relatedInformation = [\n\t\t\tnew DiagnosticRelatedInformation(new Location(URI.parse('cc:dd'), new Range(0, 0, 0, 0)), 'more1'),\n\t\t\tnew DiagnosticRelatedInformation(new Location(URI.parse('cc:ee'), new Range(0, 0, 0, 0)), 'more2')\n\t\t];\n\n\t\tcollection.set(URI.parse('aa:bb'), [diag]);\n\t});\n\n\ttest('vscode.languages.getDiagnostics appears to return old diagnostics in some circumstances #54359', function () {\n\t\tconst ownerHistory: string[] = [];\n\t\tconst diags = new ExtHostDiagnostics(new class implements IMainContext {\n\t\t\tgetProxy(id: any): any {\n\t\t\t\treturn new class DiagnosticsShape {\n\t\t\t\t\t$clear(owner: string): void {\n\t\t\t\t\t\townerHistory.push(owner);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tset(): any {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tdispose() { }\n\t\t\tassertRegistered(): void {\n\n\t\t\t}\n\t\t\tdrain() {\n\t\t\t\treturn undefined!;\n\t\t\t}\n\t\t}, new NullLogService(), fileSystemInfoService, new class extends mock<IExtHostDocumentsAndEditors>() {\n\t\t\toverride getDocument() {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\n\t\tconst collection1 = diags.createDiagnosticCollection(nullExtensionDescription.identifier, 'foo');\n\t\tconst collection2 = diags.createDiagnosticCollection(nullExtensionDescription.identifier, 'foo'); // warns, uses a different owner\n\n\t\tcollection1.clear();\n\t\tcollection2.clear();\n\n\t\tassert.strictEqual(ownerHistory.length, 2);\n\t\tassert.strictEqual(ownerHistory[0], 'foo');\n\t\tassert.strictEqual(ownerHistory[1], 'foo0');\n\t});\n\n\ttest('Error updating diagnostics from extension #60394', function () {\n\t\tlet callCount = 0;\n\t\tconst collection = new DiagnosticCollection('ddd', 'test', 100, 100, versionProvider, extUri, new class extends DiagnosticsShape {\n\t\t\toverride $changeMany(owner: string, entries: [UriComponents, IMarkerData[]][]) {\n\t\t\t\tcallCount += 1;\n\t\t\t}\n\t\t}, new Emitter<any>());\n\n\t\tconst array: Diagnostic[] = [];\n\t\tconst diag1 = new Diagnostic(new Range(0, 0, 1, 1), 'Foo');\n\t\tconst diag2 = new Diagnostic(new Range(0, 0, 1, 1), 'Bar');\n\n\t\tarray.push(diag1, diag2);\n\n\t\tcollection.set(URI.parse('test:me'), array);\n\t\tassert.strictEqual(callCount, 1);\n\n\t\tcollection.set(URI.parse('test:me'), array);\n\t\tassert.strictEqual(callCount, 2); // equal array\n\n\t\tarray.push(diag2);\n\t\tcollection.set(URI.parse('test:me'), array);\n\t\tassert.strictEqual(callCount, 3); // same but un-equal array\n\t});\n\n\ttest('Version id is set whenever possible', function () {\n\n\t\tconst all: [UriComponents, IMarkerData[]][] = [];\n\n\t\tconst collection = new DiagnosticCollection('ddd', 'test', 100, 100, uri => {\n\t\t\treturn 7;\n\t\t}, extUri, new class extends DiagnosticsShape {\n\t\t\toverride $changeMany(_owner: string, entries: [UriComponents, IMarkerData[]][]) {\n\t\t\t\tall.push(...entries);\n\t\t\t}\n\t\t}, new Emitter<any>());\n\n\t\tconst array: Diagnostic[] = [];\n\t\tconst diag1 = new Diagnostic(new Range(0, 0, 1, 1), 'Foo');\n\t\tconst diag2 = new Diagnostic(new Range(0, 0, 1, 1), 'Bar');\n\n\t\tarray.push(diag1, diag2);\n\n\t\tcollection.set(URI.parse('test:one'), array);\n\t\tcollection.set(URI.parse('test:two'), [diag1]);\n\t\tcollection.set(URI.parse('test:three'), [diag2]);\n\n\t\tconst allVersions = all.map(tuple => tuple[1].map(t => t.modelVersionId)).flat();\n\t\tassert.deepStrictEqual(allVersions, [7, 7, 7, 7]);\n\t});\n\n\ttest('Diagnostics created by tasks aren\\'t accessible to extensions #47292', async function () {\n\t\treturn runWithFakedTimers({}, async function () {\n\n\t\t\tconst diags = new ExtHostDiagnostics(new class implements IMainContext {\n\t\t\t\tgetProxy(id: any): any {\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t\tset(): any {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tdispose() { }\n\t\t\t\tassertRegistered(): void {\n\n\t\t\t\t}\n\t\t\t\tdrain() {\n\t\t\t\t\treturn undefined!;\n\t\t\t\t}\n\t\t\t}, new NullLogService(), fileSystemInfoService, new class extends mock<IExtHostDocumentsAndEditors>() {\n\t\t\t\toverride getDocument() {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t});\n\n\n\t\t\t//\n\t\t\tconst uri = URI.parse('foo:bar');\n\t\t\tconst data: IMarkerData[] = [{\n\t\t\t\tmessage: 'message',\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: 1,\n\t\t\t\tendColumn: 1,\n\t\t\t\tseverity: MarkerSeverity.Info\n\t\t\t}];\n\n\t\t\tconst p1 = Event.toPromise(diags.onDidChangeDiagnostics);\n\t\t\tdiags.$acceptMarkersChange([[uri, data]]);\n\t\t\tawait p1;\n\t\t\tassert.strictEqual(diags.getDiagnostics(uri).length, 1);\n\n\t\t\tconst p2 = Event.toPromise(diags.onDidChangeDiagnostics);\n\t\t\tdiags.$acceptMarkersChange([[uri, []]]);\n\t\t\tawait p2;\n\t\t\tassert.strictEqual(diags.getDiagnostics(uri).length, 0);\n\t\t});\n\t});\n\n\ttest('languages.getDiagnostics doesn\\'t handle case insensitivity correctly #128198', function () {\n\n\t\tconst diags = new ExtHostDiagnostics(new class implements IMainContext {\n\t\t\tgetProxy(id: any): any {\n\t\t\t\treturn new DiagnosticsShape();\n\t\t\t}\n\t\t\tset(): any {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tdispose() { }\n\t\t\tassertRegistered(): void {\n\n\t\t\t}\n\t\t\tdrain() {\n\t\t\t\treturn undefined!;\n\t\t\t}\n\t\t}, new NullLogService(), new class extends mock<IExtHostFileSystemInfo>() {\n\n\t\t\toverride readonly extUri = new ExtUri(uri => uri.scheme === 'insensitive');\n\t\t}, new class extends mock<IExtHostDocumentsAndEditors>() {\n\t\t\toverride getDocument() {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\n\t\tconst col = diags.createDiagnosticCollection(nullExtensionDescription.identifier);\n\n\t\tconst uriSensitive = URI.from({ scheme: 'foo', path: '/SOME/path' });\n\t\tconst uriSensitiveCaseB = uriSensitive.with({ path: uriSensitive.path.toUpperCase() });\n\n\t\tconst uriInSensitive = URI.from({ scheme: 'insensitive', path: '/SOME/path' });\n\t\tconst uriInSensitiveUpper = uriInSensitive.with({ path: uriInSensitive.path.toUpperCase() });\n\n\t\tcol.set(uriSensitive, [new Diagnostic(new Range(0, 0, 0, 0), 'sensitive')]);\n\t\tcol.set(uriInSensitive, [new Diagnostic(new Range(0, 0, 0, 0), 'insensitive')]);\n\n\t\t// collection itself honours casing\n\t\tassert.strictEqual(col.get(uriSensitive)?.length, 1);\n\t\tassert.strictEqual(col.get(uriSensitiveCaseB)?.length, 0);\n\n\t\tassert.strictEqual(col.get(uriInSensitive)?.length, 1);\n\t\tassert.strictEqual(col.get(uriInSensitiveUpper)?.length, 1);\n\n\t\t// languages.getDiagnostics honours casing\n\t\tassert.strictEqual(diags.getDiagnostics(uriSensitive)?.length, 1);\n\t\tassert.strictEqual(diags.getDiagnostics(uriSensitiveCaseB)?.length, 0);\n\n\t\tassert.strictEqual(diags.getDiagnostics(uriInSensitive)?.length, 1);\n\t\tassert.strictEqual(diags.getDiagnostics(uriInSensitiveUpper)?.length, 1);\n\n\n\t\tconst fromForEach: URI[] = [];\n\t\tcol.forEach(uri => fromForEach.push(uri));\n\t\tassert.strictEqual(fromForEach.length, 2);\n\t\tassert.strictEqual(fromForEach[0].toString(), uriSensitive.toString());\n\t\tassert.strictEqual(fromForEach[1].toString(), uriInSensitive.toString());\n\t});\n});\n"]}