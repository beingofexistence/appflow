{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/test/browser/extHostTypeConverter.test.ts"],"names":[],"mappings":"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","file":"extHostTypeConverter.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport * as assert from 'assert';\nimport * as extHostTypes from 'vs/workbench/api/common/extHostTypes';\nimport { MarkdownString, NotebookCellOutputItem, NotebookData, LanguageSelector, WorkspaceEdit } from 'vs/workbench/api/common/extHostTypeConverters';\nimport { isEmptyObject } from 'vs/base/common/types';\nimport { LogLevel as _MainLogLevel } from 'vs/platform/log/common/log';\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkspaceTextEditDto } from 'vs/workbench/api/common/extHost.protocol';\n\nsuite('ExtHostTypeConverter', function () {\n\tfunction size<T>(from: Record<any, any>): number {\n\t\tlet count = 0;\n\t\tfor (const key in from) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(from, key)) {\n\t\t\t\tcount += 1;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\ttest('MarkdownConvert - uris', function () {\n\n\t\tlet data = MarkdownString.from('Hello');\n\t\tassert.strictEqual(isEmptyObject(data.uris), true);\n\t\tassert.strictEqual(data.value, 'Hello');\n\n\t\tdata = MarkdownString.from('Hello [link](foo)');\n\t\tassert.strictEqual(data.value, 'Hello [link](foo)');\n\t\tassert.strictEqual(isEmptyObject(data.uris), true); // no scheme, no uri\n\n\t\tdata = MarkdownString.from('Hello [link](www.noscheme.bad)');\n\t\tassert.strictEqual(data.value, 'Hello [link](www.noscheme.bad)');\n\t\tassert.strictEqual(isEmptyObject(data.uris), true); // no scheme, no uri\n\n\t\tdata = MarkdownString.from('Hello [link](foo:path)');\n\t\tassert.strictEqual(data.value, 'Hello [link](foo:path)');\n\t\tassert.strictEqual(size(data.uris!), 1);\n\t\tassert.ok(!!data.uris!['foo:path']);\n\n\t\tdata = MarkdownString.from('hello@foo.bar');\n\t\tassert.strictEqual(data.value, 'hello@foo.bar');\n\t\tassert.strictEqual(size(data.uris!), 1);\n\t\t// assert.ok(!!data.uris!['mailto:hello@foo.bar']);\n\n\t\tdata = MarkdownString.from('*hello* [click](command:me)');\n\t\tassert.strictEqual(data.value, '*hello* [click](command:me)');\n\t\tassert.strictEqual(size(data.uris!), 1);\n\t\tassert.ok(!!data.uris!['command:me']);\n\n\t\tdata = MarkdownString.from('*hello* [click](file:///somepath/here). [click](file:///somepath/here)');\n\t\tassert.strictEqual(data.value, '*hello* [click](file:///somepath/here). [click](file:///somepath/here)');\n\t\tassert.strictEqual(size(data.uris!), 1);\n\t\tassert.ok(!!data.uris!['file:///somepath/here']);\n\n\t\tdata = MarkdownString.from('*hello* [click](file:///somepath/here). [click](file:///somepath/here)');\n\t\tassert.strictEqual(data.value, '*hello* [click](file:///somepath/here). [click](file:///somepath/here)');\n\t\tassert.strictEqual(size(data.uris!), 1);\n\t\tassert.ok(!!data.uris!['file:///somepath/here']);\n\n\t\tdata = MarkdownString.from('*hello* [click](file:///somepath/here). [click](file:///somepath/here2)');\n\t\tassert.strictEqual(data.value, '*hello* [click](file:///somepath/here). [click](file:///somepath/here2)');\n\t\tassert.strictEqual(size(data.uris!), 2);\n\t\tassert.ok(!!data.uris!['file:///somepath/here']);\n\t\tassert.ok(!!data.uris!['file:///somepath/here2']);\n\t});\n\n\ttest('NPM script explorer running a script from the hover does not work #65561', function () {\n\n\t\tconst data = MarkdownString.from('*hello* [click](command:npm.runScriptFromHover?%7B%22documentUri%22%3A%7B%22%24mid%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fc%253A%2Ffoo%2Fbaz.ex%22%2C%22path%22%3A%22%2Fc%3A%2Ffoo%2Fbaz.ex%22%2C%22scheme%22%3A%22file%22%7D%2C%22script%22%3A%22dev%22%7D)');\n\t\t// assert that both uri get extracted but that the latter is only decoded once...\n\t\tassert.strictEqual(size(data.uris!), 2);\n\t\tfor (const value of Object.values(data.uris!)) {\n\t\t\tif (value.scheme === 'file') {\n\t\t\t\tassert.ok(URI.revive(value).toString().indexOf('file:///c%3A') === 0);\n\t\t\t} else {\n\t\t\t\tassert.strictEqual(value.scheme, 'command');\n\t\t\t}\n\t\t}\n\t});\n\n\ttest('Notebook metadata is ignored when using Notebook Serializer #125716', function () {\n\n\t\tconst d = new extHostTypes.NotebookData([]);\n\t\td.cells.push(new extHostTypes.NotebookCellData(extHostTypes.NotebookCellKind.Code, 'hello', 'fooLang'));\n\t\td.metadata = { custom: { foo: 'bar', bar: 123 } };\n\n\t\tconst dto = NotebookData.from(d);\n\n\t\tassert.strictEqual(dto.cells.length, 1);\n\t\tassert.strictEqual(dto.cells[0].language, 'fooLang');\n\t\tassert.strictEqual(dto.cells[0].source, 'hello');\n\t\tassert.deepStrictEqual(dto.metadata, d.metadata);\n\t});\n\n\ttest('NotebookCellOutputItem', function () {\n\n\t\tconst item = extHostTypes.NotebookCellOutputItem.text('Hello', 'foo/bar');\n\n\t\tconst dto = NotebookCellOutputItem.from(item);\n\n\t\tassert.strictEqual(dto.mime, 'foo/bar');\n\t\tassert.deepStrictEqual(Array.from(dto.valueBytes.buffer), Array.from(new TextEncoder().encode('Hello')));\n\n\t\tconst item2 = NotebookCellOutputItem.to(dto);\n\n\t\tassert.strictEqual(item2.mime, item.mime);\n\t\tassert.deepStrictEqual(Array.from(item2.data), Array.from(item.data));\n\t});\n\n\ttest('LanguageSelector', function () {\n\t\tconst out = LanguageSelector.from({ language: 'bat', notebookType: 'xxx' });\n\t\tassert.ok(typeof out === 'object');\n\t\tassert.deepStrictEqual(out, {\n\t\t\tlanguage: 'bat',\n\t\t\tnotebookType: 'xxx',\n\t\t\tscheme: undefined,\n\t\t\tpattern: undefined,\n\t\t\texclusive: undefined,\n\t\t});\n\t});\n\n\ttest('JS/TS Surround With Code Actions provide bad Workspace Edits when obtained by VSCode Command API #178654', function () {\n\n\t\tconst uri = URI.parse('file:///foo/bar');\n\t\tconst ws = new extHostTypes.WorkspaceEdit();\n\t\tws.set(uri, [extHostTypes.SnippetTextEdit.insert(new extHostTypes.Position(1, 1), new extHostTypes.SnippetString('foo$0bar'))]);\n\n\t\tconst dto = WorkspaceEdit.from(ws);\n\t\tconst first = <IWorkspaceTextEditDto>dto.edits[0];\n\t\tassert.strictEqual(first.textEdit.insertAsSnippet, true);\n\n\t\tconst ws2 = WorkspaceEdit.to(dto);\n\t\tconst dto2 = WorkspaceEdit.from(ws2);\n\t\tconst first2 = <IWorkspaceTextEditDto>dto2.edits[0];\n\t\tassert.strictEqual(first2.textEdit.insertAsSnippet, true);\n\t});\n});\n"]}