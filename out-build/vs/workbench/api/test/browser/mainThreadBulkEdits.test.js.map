{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/test/browser/mainThreadBulkEdits.test.ts"],"names":[],"mappings":"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","file":"mainThreadBulkEdits.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IWorkspaceTextEditDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { mock } from 'vs/base/test/common/mock';\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { FileSystemProviderCapabilities, IFileService } from 'vs/platform/files/common/files';\nimport { reviveWorkspaceEditDto } from 'vs/workbench/api/browser/mainThreadBulkEdits';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { IWorkspaceTextEdit } from 'vs/editor/common/languages';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nsuite('MainThreadBulkEdits', function () {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('\"Rename failed to apply edits\" in monorepo with pnpm #158845', function () {\n\n\n\t\tconst fileService = new class extends mock<IFileService>() {\n\t\t\toverride onDidChangeFileSystemProviderCapabilities = Event.None;\n\t\t\toverride onDidChangeFileSystemProviderRegistrations = Event.None;\n\n\t\t\toverride hasProvider(uri: URI) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\toverride hasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\t\t\t// if (resource.scheme === 'case' && capability === FileSystemProviderCapabilities.PathCaseSensitive) {\n\t\t\t\t// \treturn false;\n\t\t\t\t// }\n\t\t\t\t// NO capabilities, esp not being case-sensitive\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\tconst uriIdentityService = new UriIdentityService(fileService);\n\n\t\tconst edits: IWorkspaceTextEditDto[] = [\n\t\t\t{ resource: URI.from({ scheme: 'case', path: '/hello/WORLD/foo.txt' }), textEdit: { range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }, text: 'sss' }, versionId: undefined },\n\t\t\t{ resource: URI.from({ scheme: 'case', path: '/heLLO/world/fOO.txt' }), textEdit: { range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }, text: 'sss' }, versionId: undefined },\n\t\t\t{ resource: URI.from({ scheme: 'case', path: '/other/path.txt' }), textEdit: { range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }, text: 'sss' }, versionId: undefined },\n\t\t\t{ resource: URI.from({ scheme: 'foo', path: '/other/path.txt' }), textEdit: { range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }, text: 'sss' }, versionId: undefined },\n\t\t];\n\n\n\t\tconst out = reviveWorkspaceEditDto({ edits }, uriIdentityService);\n\n\t\tassert.strictEqual((<IWorkspaceTextEdit>out.edits[0]).resource.path, '/hello/WORLD/foo.txt');\n\t\tassert.strictEqual((<IWorkspaceTextEdit>out.edits[1]).resource.path, '/hello/WORLD/foo.txt'); // the FIRST occurrence defined the shape!\n\t\tassert.strictEqual((<IWorkspaceTextEdit>out.edits[2]).resource.path, '/other/path.txt');\n\t\tassert.strictEqual((<IWorkspaceTextEdit>out.edits[3]).resource.path, '/other/path.txt');\n\n\t\turiIdentityService.dispose();\n\n\t});\n});\n"]}