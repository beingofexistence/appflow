{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/test/browser/extHostTextEditor.test.ts"],"names":[],"mappings":"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","file":"extHostTextEditor.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { TextEditorLineNumbersStyle, Range } from 'vs/workbench/api/common/extHostTypes';\nimport { TextEditorCursorStyle, RenderLineNumbersType } from 'vs/editor/common/config/editorOptions';\nimport { MainThreadTextEditorsShape, IResolvedTextEditorConfiguration, ITextEditorConfigurationUpdate } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostTextEditorOptions, ExtHostTextEditor } from 'vs/workbench/api/common/extHostTextEditor';\nimport { ExtHostDocumentData } from 'vs/workbench/api/common/extHostDocumentData';\nimport { URI } from 'vs/base/common/uri';\nimport { mock } from 'vs/base/test/common/mock';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { Lazy } from 'vs/base/common/lazy';\n\nsuite('ExtHostTextEditor', () => {\n\n\tlet editor: ExtHostTextEditor;\n\tconst doc = new ExtHostDocumentData(undefined!, URI.file(''), [\n\t\t'aaaa bbbb+cccc abc'\n\t], '\\n', 1, 'text', false);\n\n\tsetup(() => {\n\t\teditor = new ExtHostTextEditor('fake', null!, new NullLogService(), new Lazy(() => doc.document), [], { cursorStyle: TextEditorCursorStyle.Line, insertSpaces: true, lineNumbers: 1, tabSize: 4, indentSize: 4 }, [], 1);\n\t});\n\n\ttest('disposed editor', () => {\n\n\t\tassert.ok(editor.value.document);\n\t\teditor._acceptViewColumn(3);\n\t\tassert.strictEqual(3, editor.value.viewColumn);\n\n\t\teditor.dispose();\n\n\t\tassert.throws(() => editor._acceptViewColumn(2));\n\t\tassert.strictEqual(3, editor.value.viewColumn);\n\n\t\tassert.ok(editor.value.document);\n\t\tassert.throws(() => editor._acceptOptions(null!));\n\t\tassert.throws(() => editor._acceptSelections([]));\n\t});\n\n\ttest('API [bug]: registerTextEditorCommand clears redo stack even if no edits are made #55163', async function () {\n\t\tlet applyCount = 0;\n\t\tconst editor = new ExtHostTextEditor('edt1',\n\t\t\tnew class extends mock<MainThreadTextEditorsShape>() {\n\t\t\t\toverride $tryApplyEdits(): Promise<boolean> {\n\t\t\t\t\tapplyCount += 1;\n\t\t\t\t\treturn Promise.resolve(true);\n\t\t\t\t}\n\t\t\t}, new NullLogService(), new Lazy(() => doc.document), [], { cursorStyle: TextEditorCursorStyle.Line, insertSpaces: true, lineNumbers: 1, tabSize: 4, indentSize: 4 }, [], 1);\n\n\t\tawait editor.value.edit(edit => { });\n\t\tassert.strictEqual(applyCount, 0);\n\n\t\tawait editor.value.edit(edit => { edit.setEndOfLine(1); });\n\t\tassert.strictEqual(applyCount, 1);\n\n\t\tawait editor.value.edit(edit => { edit.delete(new Range(0, 0, 1, 1)); });\n\t\tassert.strictEqual(applyCount, 2);\n\t});\n});\n\nsuite('ExtHostTextEditorOptions', () => {\n\n\tlet opts: ExtHostTextEditorOptions;\n\tlet calls: ITextEditorConfigurationUpdate[] = [];\n\n\tsetup(() => {\n\t\tcalls = [];\n\t\tconst mockProxy: MainThreadTextEditorsShape = {\n\t\t\tdispose: undefined!,\n\t\t\t$trySetOptions: (id: string, options: ITextEditorConfigurationUpdate) => {\n\t\t\t\tassert.strictEqual(id, '1');\n\t\t\t\tcalls.push(options);\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t},\n\t\t\t$tryShowTextDocument: undefined!,\n\t\t\t$registerTextEditorDecorationType: undefined!,\n\t\t\t$removeTextEditorDecorationType: undefined!,\n\t\t\t$tryShowEditor: undefined!,\n\t\t\t$tryHideEditor: undefined!,\n\t\t\t$trySetDecorations: undefined!,\n\t\t\t$trySetDecorationsFast: undefined!,\n\t\t\t$tryRevealRange: undefined!,\n\t\t\t$trySetSelections: undefined!,\n\t\t\t$tryApplyEdits: undefined!,\n\t\t\t$tryInsertSnippet: undefined!,\n\t\t\t$getDiffInformation: undefined!\n\t\t};\n\t\topts = new ExtHostTextEditorOptions(mockProxy, '1', {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t}, new NullLogService());\n\t});\n\n\tteardown(() => {\n\t\topts = null!;\n\t\tcalls = null!;\n\t});\n\n\tfunction assertState(opts: ExtHostTextEditorOptions, expected: IResolvedTextEditorConfiguration): void {\n\t\tconst actual = {\n\t\t\ttabSize: opts.value.tabSize,\n\t\t\tindentSize: opts.value.indentSize,\n\t\t\tinsertSpaces: opts.value.insertSpaces,\n\t\t\tcursorStyle: opts.value.cursorStyle,\n\t\t\tlineNumbers: opts.value.lineNumbers\n\t\t};\n\t\tassert.deepStrictEqual(actual, expected);\n\t}\n\n\ttest('can set tabSize to the same value', () => {\n\t\topts.value.tabSize = 4;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('can change tabSize to positive integer', () => {\n\t\topts.value.tabSize = 1;\n\t\tassertState(opts, {\n\t\t\ttabSize: 1,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ tabSize: 1 }]);\n\t});\n\n\ttest('can change tabSize to positive float', () => {\n\t\topts.value.tabSize = 2.3;\n\t\tassertState(opts, {\n\t\t\ttabSize: 2,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ tabSize: 2 }]);\n\t});\n\n\ttest('can change tabSize to a string number', () => {\n\t\topts.value.tabSize = '2';\n\t\tassertState(opts, {\n\t\t\ttabSize: 2,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ tabSize: 2 }]);\n\t});\n\n\ttest('tabSize can request indentation detection', () => {\n\t\topts.value.tabSize = 'auto';\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ tabSize: 'auto' }]);\n\t});\n\n\ttest('ignores invalid tabSize 1', () => {\n\t\topts.value.tabSize = null!;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('ignores invalid tabSize 2', () => {\n\t\topts.value.tabSize = -5;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('ignores invalid tabSize 3', () => {\n\t\topts.value.tabSize = 'hello';\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('ignores invalid tabSize 4', () => {\n\t\topts.value.tabSize = '-17';\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('can set indentSize to the same value', () => {\n\t\topts.value.indentSize = 4;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('can change indentSize to positive integer', () => {\n\t\topts.value.indentSize = 1;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 1,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ indentSize: 1 }]);\n\t});\n\n\ttest('can change indentSize to positive float', () => {\n\t\topts.value.indentSize = 2.3;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 2,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ indentSize: 2 }]);\n\t});\n\n\ttest('can change indentSize to a string number', () => {\n\t\topts.value.indentSize = <any>'2';\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 2,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ indentSize: 2 }]);\n\t});\n\n\ttest('indentSize can request to use tabSize', () => {\n\t\topts.value.indentSize = 'tabSize';\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ indentSize: 'tabSize' }]);\n\t});\n\n\ttest('indentSize cannot request indentation detection', () => {\n\t\topts.value.indentSize = <any>'auto';\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('ignores invalid indentSize 1', () => {\n\t\topts.value.indentSize = null!;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('ignores invalid indentSize 2', () => {\n\t\topts.value.indentSize = -5;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('ignores invalid indentSize 3', () => {\n\t\topts.value.indentSize = <any>'hello';\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('ignores invalid indentSize 4', () => {\n\t\topts.value.indentSize = <any>'-17';\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('can set insertSpaces to the same value', () => {\n\t\topts.value.insertSpaces = false;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('can set insertSpaces to boolean', () => {\n\t\topts.value.insertSpaces = true;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: true,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ insertSpaces: true }]);\n\t});\n\n\ttest('can set insertSpaces to false string', () => {\n\t\topts.value.insertSpaces = 'false';\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('can set insertSpaces to truey', () => {\n\t\topts.value.insertSpaces = 'hello';\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: true,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ insertSpaces: true }]);\n\t});\n\n\ttest('insertSpaces can request indentation detection', () => {\n\t\topts.value.insertSpaces = 'auto';\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ insertSpaces: 'auto' }]);\n\t});\n\n\ttest('can set cursorStyle to same value', () => {\n\t\topts.value.cursorStyle = TextEditorCursorStyle.Line;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('can change cursorStyle', () => {\n\t\topts.value.cursorStyle = TextEditorCursorStyle.Block;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Block,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ cursorStyle: TextEditorCursorStyle.Block }]);\n\t});\n\n\ttest('can set lineNumbers to same value', () => {\n\t\topts.value.lineNumbers = TextEditorLineNumbersStyle.On;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('can change lineNumbers', () => {\n\t\topts.value.lineNumbers = TextEditorLineNumbersStyle.Off;\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.Off\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ lineNumbers: RenderLineNumbersType.Off }]);\n\t});\n\n\ttest('can do bulk updates 0', () => {\n\t\topts.assign({\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: TextEditorLineNumbersStyle.On\n\t\t});\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, []);\n\t});\n\n\ttest('can do bulk updates 1', () => {\n\t\topts.assign({\n\t\t\ttabSize: 'auto',\n\t\t\tinsertSpaces: true\n\t\t});\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: true,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ tabSize: 'auto', insertSpaces: true }]);\n\t});\n\n\ttest('can do bulk updates 2', () => {\n\t\topts.assign({\n\t\t\ttabSize: 3,\n\t\t\tinsertSpaces: 'auto'\n\t\t});\n\t\tassertState(opts, {\n\t\t\ttabSize: 3,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\t\tlineNumbers: RenderLineNumbersType.On\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ tabSize: 3, insertSpaces: 'auto' }]);\n\t});\n\n\ttest('can do bulk updates 3', () => {\n\t\topts.assign({\n\t\t\tcursorStyle: TextEditorCursorStyle.Block,\n\t\t\tlineNumbers: TextEditorLineNumbersStyle.Relative\n\t\t});\n\t\tassertState(opts, {\n\t\t\ttabSize: 4,\n\t\t\tindentSize: 4,\n\t\t\tinsertSpaces: false,\n\t\t\tcursorStyle: TextEditorCursorStyle.Block,\n\t\t\tlineNumbers: RenderLineNumbersType.Relative\n\t\t});\n\t\tassert.deepStrictEqual(calls, [{ cursorStyle: TextEditorCursorStyle.Block, lineNumbers: RenderLineNumbersType.Relative }]);\n\t});\n\n});\n"]}