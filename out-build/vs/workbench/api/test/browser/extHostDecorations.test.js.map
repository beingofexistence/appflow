{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/api/test/browser/extHostDecorations.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAchG,KAAK,CAAC,oBAAoB,EAAE;QAE3B,IAAI,eAA2C,CAAC;QAChD,IAAI,kBAAwB,CAAe;QAC3C,MAAM,SAAS,GAAG,IAAI,GAAG,EAAU,CAAC;QAEpC,IAAA,WAAG,GAAsC,CAAC;QAE1C,KAAK,CAAC;YAEL,SAAS,CAAC,KAAK,EAAE,CAAC;YAElB,eAAe,GAAG,IAAI,KAAM,SAAQ,IAAA,UAAG,GAA+B;gBAC5D,2BAA2B,CAAC,MAAc;oBAClD,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACvB,CAAC;aACD,CAAC;YAEF,kBAAkB,GAAG,IAAI,yBAAI,CAC5B,IAAI,KAAM,SAAQ,IAAA,UAAG,GAAuB;gBAClC,QAAQ;oBAChB,OAAO,eAAe,CAAC;gBACxB,CAAC;aACD,EACD,IAAI,SAAG,EAAa,CACpB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,EAAE,KAAK;YAE5C,IAAI,OAAO,GAAG,KAAK,CAAC;YACpB,IAAI,OAAO,GAAG,KAAK,CAAC;YAEpB,gBAAgB;YAChB,kBAAkB,CAAC,8BAA8B,CAAC;gBAEjD,qBAAqB;oBACpB,OAAO,GAAG,IAAI,CAAC;oBACf,OAAO,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;gBAC/B,CAAC;aACD,EAAE,gBAAG,CAAsB,CAAC;YAE7B,iBAAiB;YACjB,kBAAkB,CAAC,8BAA8B,CAAC;gBAEjD,qBAAqB;oBACpB,OAAO,GAAG,IAAI,CAAC;oBACf,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;gBAC1E,CAAC;aACD,EAAE,gBAAG,CAAsB,CAAC;YAG7B,MAAM,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC5D,OAAO,kBAAkB,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,SAAG,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;YAC9H,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAClC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAElC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,QAAQ,CAAC;YAEjC,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,IAAA,WAAG,EAAK,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/E,MAAM,CAAC,WAAW,CAAC,OAAO,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,oBAAoB;YAEvE,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,IAAA,WAAG,EAAK,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjF,MAAM,CAAC,WAAW,CAAC,OAAO,YAAY,EAAE,QAAQ,CAAC,CAAC;YAGlD,MAAM,IAAA,WAAG,EAAK,EAAE,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IAEJ,CAAC,CAAC,CAAC","file":"extHostDecorations.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { timeout } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { mock } from 'vs/base/test/common/mock';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { MainThreadDecorationsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtHostDecorations } from 'vs/workbench/api/common/extHostDecorations';\nimport { IExtHostRpcService } from 'vs/workbench/api/common/extHostRpcService';\nimport { nullExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\n\nsuite('ExtHostDecorations', function () {\n\n\tlet mainThreadShape: MainThreadDecorationsShape;\n\tlet extHostDecorations: ExtHostDecorations;\n\tconst providers = new Set<number>();\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(function () {\n\n\t\tproviders.clear();\n\n\t\tmainThreadShape = new class extends mock<MainThreadDecorationsShape>() {\n\t\t\toverride $registerDecorationProvider(handle: number) {\n\t\t\t\tproviders.add(handle);\n\t\t\t}\n\t\t};\n\n\t\textHostDecorations = new ExtHostDecorations(\n\t\t\tnew class extends mock<IExtHostRpcService>() {\n\t\t\t\toverride getProxy(): any {\n\t\t\t\t\treturn mainThreadShape;\n\t\t\t\t}\n\t\t\t},\n\t\t\tnew NullLogService()\n\t\t);\n\t});\n\n\ttest('SCM Decorations missing #100524', async function () {\n\n\t\tlet calledA = false;\n\t\tlet calledB = false;\n\n\t\t// never returns\n\t\textHostDecorations.registerFileDecorationProvider({\n\n\t\t\tprovideFileDecoration() {\n\t\t\t\tcalledA = true;\n\t\t\t\treturn new Promise(() => { });\n\t\t\t}\n\t\t}, nullExtensionDescription);\n\n\t\t// always returns\n\t\textHostDecorations.registerFileDecorationProvider({\n\n\t\t\tprovideFileDecoration() {\n\t\t\t\tcalledB = true;\n\t\t\t\treturn new Promise(resolve => resolve({ badge: 'H', tooltip: 'Hello' }));\n\t\t\t}\n\t\t}, nullExtensionDescription);\n\n\n\t\tconst requests = [...providers.values()].map((handle, idx) => {\n\t\t\treturn extHostDecorations.$provideDecorations(handle, [{ id: idx, uri: URI.parse('test:///file') }], CancellationToken.None);\n\t\t});\n\n\t\tassert.strictEqual(calledA, true);\n\t\tassert.strictEqual(calledB, true);\n\n\t\tassert.strictEqual(requests.length, 2);\n\t\tconst [first, second] = requests;\n\n\t\tconst firstResult = await Promise.race([first, timeout(30).then(() => false)]);\n\t\tassert.strictEqual(typeof firstResult, 'boolean'); // never finishes...\n\n\t\tconst secondResult = await Promise.race([second, timeout(30).then(() => false)]);\n\t\tassert.strictEqual(typeof secondResult, 'object');\n\n\n\t\tawait timeout(30);\n\t});\n\n});\n"]}