{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/aiRelatedInformation/common/aiRelatedInformationService.ts"],"names":[],"mappings":"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","file":"aiRelatedInformationService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CancelablePromise, createCancelablePromise, raceTimeout } from 'vs/base/common/async';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IAiRelatedInformationService, IAiRelatedInformationProvider, RelatedInformationType, RelatedInformationResult } from 'vs/workbench/services/aiRelatedInformation/common/aiRelatedInformation';\n\nexport class AiRelatedInformationService implements IAiRelatedInformationService {\n\treadonly _serviceBrand: undefined;\n\n\tstatic readonly DEFAULT_TIMEOUT = 1000 * 10; // 10 seconds\n\n\tprivate readonly _providers: Map<RelatedInformationType, IAiRelatedInformationProvider[]> = new Map();\n\n\tconstructor(@ILogService private readonly logService: ILogService) { }\n\n\tisEnabled(): boolean {\n\t\treturn this._providers.size > 0;\n\t}\n\n\tregisterAiRelatedInformationProvider(type: RelatedInformationType, provider: IAiRelatedInformationProvider): IDisposable {\n\t\tconst providers = this._providers.get(type) ?? [];\n\t\tproviders.push(provider);\n\t\tthis._providers.set(type, providers);\n\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tconst providers = this._providers.get(type) ?? [];\n\t\t\t\tconst index = providers.indexOf(provider);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tproviders.splice(index, 1);\n\t\t\t\t}\n\t\t\t\tif (providers.length === 0) {\n\t\t\t\t\tthis._providers.delete(type);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tasync getRelatedInformation(query: string, types: RelatedInformationType[], token: CancellationToken): Promise<RelatedInformationResult[]> {\n\t\tif (this._providers.size === 0) {\n\t\t\tthrow new Error('No related information providers registered');\n\t\t}\n\n\t\t// get providers for each type\n\t\tconst providers: IAiRelatedInformationProvider[] = [];\n\t\tfor (const type of types) {\n\t\t\tconst typeProviders = this._providers.get(type);\n\t\t\tif (typeProviders) {\n\t\t\t\tproviders.push(...typeProviders);\n\t\t\t}\n\t\t}\n\n\t\tif (providers.length === 0) {\n\t\t\tthrow new Error('No related information providers registered for the given types');\n\t\t}\n\n\t\tconst stopwatch = StopWatch.create();\n\n\t\tconst cancellablePromises: Array<CancelablePromise<RelatedInformationResult[]>> = providers.map((provider) => {\n\t\t\treturn createCancelablePromise(async t => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await provider.provideAiRelatedInformation(query, t);\n\t\t\t\t\t// double filter just in case\n\t\t\t\t\treturn result.filter(r => types.includes(r.type));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// logged in extension host\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t});\n\t\t});\n\n\t\ttry {\n\t\t\tconst results = await raceTimeout(\n\t\t\t\tPromise.allSettled(cancellablePromises),\n\t\t\t\tAiRelatedInformationService.DEFAULT_TIMEOUT,\n\t\t\t\t() => {\n\t\t\t\t\tcancellablePromises.forEach(p => p.cancel());\n\t\t\t\t\tthrow new Error('Related information provider timed out');\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (!results) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst result = results\n\t\t\t\t.filter(r => r.status === 'fulfilled')\n\t\t\t\t.map(r => (r as PromiseFulfilledResult<RelatedInformationResult[]>).value)\n\t\t\t\t.flat();\n\t\t\treturn result;\n\t\t} finally {\n\t\t\tstopwatch.stop();\n\t\t\tthis.logService.trace(`[AiRelatedInformationService]: getRelatedInformation took ${stopwatch.elapsed()}ms`);\n\t\t}\n\t}\n}\n\nregisterSingleton(IAiRelatedInformationService, AiRelatedInformationService, InstantiationType.Delayed);\n"]}