{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/aiRelatedInformation/common/aiRelatedInformation.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMnF,QAAA,GAAG,GAA4B,IAAA,mBAAG,EAA2C,8BAA8B,CAAC,CAAC;IAE1H,IAAY,sBAKX;IALD,WAAY,sBAAsB;QACjC,6FAAqB,CAAA;QACrB,+FAAsB,CAAA;QACtB,6FAAqB,CAAA;QACrB,+FAAsB,CAAA;IACvB,CAAC,EALW,sBAAsB,sCAAtB,sBAAsB,QAKjC","file":"aiRelatedInformation.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IAiRelatedInformationService = createDecorator<IAiRelatedInformationService>('IAiRelatedInformationService');\n\nexport enum RelatedInformationType {\n\tSymbolInformation = 1,\n\tCommandInformation = 2,\n\tSearchInformation = 3,\n\tSettingInformation = 4\n}\n\ninterface RelatedInformationBaseResult {\n\ttype: RelatedInformationType;\n\tweight: number;\n}\n\nexport interface CommandInformationResult extends RelatedInformationBaseResult {\n\ttype: RelatedInformationType.CommandInformation;\n\tcommand: string;\n}\n\nexport interface SettingInformationResult extends RelatedInformationBaseResult {\n\ttype: RelatedInformationType.SettingInformation;\n\tsetting: string;\n}\n\nexport type RelatedInformationResult = CommandInformationResult | SettingInformationResult;\n\nexport interface IAiRelatedInformationService {\n\treadonly _serviceBrand: undefined;\n\n\tisEnabled(): boolean;\n\tgetRelatedInformation(query: string, types: RelatedInformationType[], token: CancellationToken): Promise<RelatedInformationResult[]>;\n\tregisterAiRelatedInformationProvider(type: RelatedInformationType, provider: IAiRelatedInformationProvider): IDisposable;\n}\n\nexport interface IAiRelatedInformationProvider {\n\tprovideAiRelatedInformation(query: string, token: CancellationToken): Promise<RelatedInformationResult[]>;\n}\n"]}