{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/files/browser/elevatedFileService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,MAAa,IAAI;QAIhB,WAAW,CAAC,QAAa;YACxB,2DAA2D;YAC3D,2DAA2D;YAC3D,qDAAqD;YACrD,OAAO,KAAK,CAAC;QACd,CAAC;QAED,KAAK,CAAC,iBAAiB,CAAC,QAAa,EAAE,KAA2D,EAAE,OAA2B;YAC9H,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;QAChC,CAAC;KACD;IAdD,oBAcC;IAED,IAAA,gBAAG,EAAe,yBAAG,EAAmB,IAAI,oCAAkD,CAAC","file":"elevatedFileService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileStatWithMetadata, IWriteFileOptions } from 'vs/platform/files/common/files';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IElevatedFileService } from 'vs/workbench/services/files/common/elevatedFileService';\n\nexport class BrowserElevatedFileService implements IElevatedFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\tisSupported(resource: URI): boolean {\n\t\t// Saving elevated is currently not supported in web for as\n\t\t// long as we have no generic support from the file service\n\t\t// (https://github.com/microsoft/vscode/issues/48659)\n\t\treturn false;\n\t}\n\n\tasync writeFileElevated(resource: URI, value: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tthrow new Error('Unsupported');\n\t}\n}\n\nregisterSingleton(IElevatedFileService, BrowserElevatedFileService, InstantiationType.Delayed);\n"]}