{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/files/common/files.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOnF,QAAA,IAAI,GAAoB,IAAA,mBAAG,EAAyD,WAAG,CAAU,CAAC","file":"files.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService, IWatchOptions } from 'vs/platform/files/common/files';\nimport { refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IWorkbenchFileService = refineServiceDecorator<IFileService, IWorkbenchFileService>(IFileService);\n\nexport interface IWorkbenchFileService extends IFileService {\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively unless the provided options\n\t * explicitly opt-in to recursive watching.\n\t */\n\twatch(resource: URI, options?: IWatchOptions): IDisposable;\n}\n"]}