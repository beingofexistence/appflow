{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/dialogs/test/electron-sandbox/fileDialogService.test.ts"],"names":[],"mappings":"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","file":"fileDialogService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { IDialogService, IFileDialogService, IOpenDialogOptions, ISaveDialogOptions } from 'vs/platform/dialogs/common/dialogs';\nimport { Schemas } from 'vs/base/common/network';\nimport { BrowserWorkspaceEditingService } from 'vs/workbench/services/workspaces/browser/workspaceEditingService';\nimport { IWorkspaceEditingService } from 'vs/workbench/services/workspaces/common/workspaceEditing';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { FileDialogService } from 'vs/workbench/services/dialogs/electron-sandbox/fileDialogService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { mock } from 'vs/base/test/common/mock';\nimport { BrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { INativeHostService } from 'vs/platform/native/common/native';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { ISimpleFileDialog } from 'vs/workbench/services/dialogs/browser/simpleFileDialog';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nclass TestFileDialogService extends FileDialogService {\n\tconstructor(\n\t\tprivate simple: ISimpleFileDialog,\n\t\t@IHostService hostService: IHostService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IHistoryService historyService: IHistoryService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@INativeHostService nativeHostService: INativeHostService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IPathService pathService: IPathService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(hostService, contextService, historyService, environmentService, instantiationService, configurationService, fileService,\n\t\t\topenerService, nativeHostService, dialogService, languageService, workspacesService, labelService, pathService, commandService, editorService, codeEditorService, logService);\n\t}\n\n\tprotected override getSimpleFileDialog() {\n\t\tif (this.simple) {\n\t\t\treturn this.simple;\n\t\t} else {\n\t\t\treturn super.getSimpleFileDialog();\n\t\t}\n\t}\n}\n\nsuite('FileDialogService', function () {\n\n\tlet disposables: DisposableStore;\n\tlet instantiationService: TestInstantiationService;\n\tconst testFile: URI = URI.file('/test/file');\n\n\tsetup(async function () {\n\t\tdisposables = new DisposableStore();\n\t\tdisposables.add(instantiationService = <TestInstantiationService>workbenchInstantiationService(undefined, disposables));\n\t\tconst configurationService = new TestConfigurationService();\n\t\tawait configurationService.setUserConfiguration('files', { simpleDialog: { enable: true } });\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\ttest('Local - open/save workspaces availableFilesystems', async function () {\n\t\tclass TestSimpleFileDialog implements ISimpleFileDialog {\n\t\t\tasync showOpenDialog(options: IOpenDialogOptions): Promise<URI | undefined> {\n\t\t\t\tassert.strictEqual(options.availableFileSystems?.length, 1);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[0], Schemas.file);\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t\tasync showSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\t\t\tassert.strictEqual(options.availableFileSystems?.length, 1);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[0], Schemas.file);\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t}\n\n\t\tconst dialogService = instantiationService.createInstance(TestFileDialogService, new TestSimpleFileDialog());\n\t\tinstantiationService.set(IFileDialogService, dialogService);\n\t\tconst workspaceService: IWorkspaceEditingService = instantiationService.createInstance(BrowserWorkspaceEditingService);\n\t\tassert.strictEqual((await workspaceService.pickNewWorkspacePath())?.path.startsWith(testFile.path), true);\n\t\tassert.strictEqual(await dialogService.pickWorkspaceAndOpen({}), undefined);\n\t});\n\n\ttest('Virtual - open/save workspaces availableFilesystems', async function () {\n\t\tclass TestSimpleFileDialog {\n\t\t\tasync showOpenDialog(options: IOpenDialogOptions): Promise<URI | undefined> {\n\t\t\t\tassert.strictEqual(options.availableFileSystems?.length, 1);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[0], Schemas.file);\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t\tasync showSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\t\t\tassert.strictEqual(options.availableFileSystems?.length, 1);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[0], Schemas.file);\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t}\n\n\t\tinstantiationService.stub(IPathService, new class {\n\t\t\tdefaultUriScheme: string = 'vscode-virtual-test';\n\t\t\tuserHome = async () => URI.file('/user/home');\n\t\t} as IPathService);\n\t\tconst dialogService = instantiationService.createInstance(TestFileDialogService, new TestSimpleFileDialog());\n\t\tinstantiationService.set(IFileDialogService, dialogService);\n\t\tconst workspaceService: IWorkspaceEditingService = instantiationService.createInstance(BrowserWorkspaceEditingService);\n\t\tassert.strictEqual((await workspaceService.pickNewWorkspacePath())?.path.startsWith(testFile.path), true);\n\t\tassert.strictEqual(await dialogService.pickWorkspaceAndOpen({}), undefined);\n\t});\n\n\ttest('Remote - open/save workspaces availableFilesystems', async function () {\n\t\tclass TestSimpleFileDialog implements ISimpleFileDialog {\n\t\t\tasync showOpenDialog(options: IOpenDialogOptions): Promise<URI | undefined> {\n\t\t\t\tassert.strictEqual(options.availableFileSystems?.length, 2);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[0], Schemas.vscodeRemote);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[1], Schemas.file);\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t\tasync showSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\t\t\tassert.strictEqual(options.availableFileSystems?.length, 2);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[0], Schemas.vscodeRemote);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[1], Schemas.file);\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t}\n\n\t\tinstantiationService.set(IWorkbenchEnvironmentService, new class extends mock<BrowserWorkbenchEnvironmentService>() {\n\t\t\toverride get remoteAuthority() {\n\t\t\t\treturn 'testRemote';\n\t\t\t}\n\t\t});\n\t\tinstantiationService.stub(IPathService, new class {\n\t\t\tdefaultUriScheme: string = Schemas.vscodeRemote;\n\t\t\tuserHome = async () => URI.file('/user/home');\n\t\t} as IPathService);\n\t\tconst dialogService = instantiationService.createInstance(TestFileDialogService, new TestSimpleFileDialog());\n\t\tinstantiationService.set(IFileDialogService, dialogService);\n\t\tconst workspaceService: IWorkspaceEditingService = instantiationService.createInstance(BrowserWorkspaceEditingService);\n\t\tassert.strictEqual((await workspaceService.pickNewWorkspacePath())?.path.startsWith(testFile.path), true);\n\t\tassert.strictEqual(await dialogService.pickWorkspaceAndOpen({}), undefined);\n\t});\n});\n"]}