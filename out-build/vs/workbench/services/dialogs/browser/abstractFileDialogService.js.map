{"version":3,"sources":["vs/workbench/services/dialogs/browser/abstractFileDialogService.ts"],"names":[],"mappings":"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","file":"abstractFileDialogService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IWindowOpenable, isWorkspaceToOpen, isFileToOpen } from 'vs/platform/window/common/window';\nimport { IPickAndOpenOptions, ISaveDialogOptions, IOpenDialogOptions, FileFilter, IFileDialogService, IDialogService, ConfirmResult, getFileNamesMessage } from 'vs/platform/dialogs/common/dialogs';\nimport { isSavedWorkspace, isTemporaryWorkspace, IWorkspaceContextService, WorkbenchState, WORKSPACE_EXTENSION } from 'vs/platform/workspace/common/workspace';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { URI } from 'vs/base/common/uri';\nimport * as resources from 'vs/base/common/resources';\nimport { isAbsolute as localPathIsAbsolute, normalize as localPathNormalize } from 'vs/base/common/path';\nimport { IInstantiationService, } from 'vs/platform/instantiation/common/instantiation';\nimport { ISimpleFileDialog, SimpleFileDialog } from 'vs/workbench/services/dialogs/browser/simpleFileDialog';\nimport { IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport Severity from 'vs/base/common/severity';\nimport { coalesce, distinct } from 'vs/base/common/arrays';\nimport { trim } from 'vs/base/common/strings';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { Schemas } from 'vs/base/common/network';\nimport { PLAINTEXT_EXTENSION } from 'vs/editor/common/languages/modesRegistry';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { EditorOpenSource } from 'vs/platform/editor/common/editor';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport abstract class AbstractFileDialogService implements IFileDialogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IHostService protected readonly hostService: IHostService,\n\t\t@IWorkspaceContextService protected readonly contextService: IWorkspaceContextService,\n\t\t@IHistoryService protected readonly historyService: IHistoryService,\n\t\t@IWorkbenchEnvironmentService protected readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IOpenerService protected readonly openerService: IOpenerService,\n\t\t@IDialogService protected readonly dialogService: IDialogService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IWorkspacesService private readonly workspacesService: IWorkspacesService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@ICommandService protected readonly commandService: ICommandService,\n\t\t@IEditorService protected readonly editorService: IEditorService,\n\t\t@ICodeEditorService protected readonly codeEditorService: ICodeEditorService,\n\t\t@ILogService private readonly logService: ILogService\n\t) { }\n\n\tasync defaultFilePath(schemeFilter = this.getSchemeFilterForWindow()): Promise<URI> {\n\n\t\t// Check for last active file first...\n\t\tlet candidate = this.historyService.getLastActiveFile(schemeFilter);\n\n\t\t// ...then for last active file root\n\t\tif (!candidate) {\n\t\t\tcandidate = this.historyService.getLastActiveWorkspaceRoot(schemeFilter);\n\t\t} else {\n\t\t\tcandidate = resources.dirname(candidate);\n\t\t}\n\n\t\tif (!candidate) {\n\t\t\tcandidate = await this.preferredHome(schemeFilter);\n\t\t}\n\n\t\treturn candidate;\n\t}\n\n\tasync defaultFolderPath(schemeFilter = this.getSchemeFilterForWindow()): Promise<URI> {\n\n\t\t// Check for last active file root first...\n\t\tlet candidate = this.historyService.getLastActiveWorkspaceRoot(schemeFilter);\n\n\t\t// ...then for last active file\n\t\tif (!candidate) {\n\t\t\tcandidate = this.historyService.getLastActiveFile(schemeFilter);\n\t\t}\n\n\t\tif (!candidate) {\n\t\t\treturn this.preferredHome(schemeFilter);\n\t\t}\n\n\t\treturn resources.dirname(candidate);\n\t}\n\n\tasync preferredHome(schemeFilter = this.getSchemeFilterForWindow()): Promise<URI> {\n\t\tconst preferLocal = schemeFilter === Schemas.file;\n\t\tconst preferredHomeConfig = this.configurationService.inspect<string>('files.dialog.defaultPath');\n\t\tconst preferredHomeCandidate = preferLocal ? preferredHomeConfig.userLocalValue : preferredHomeConfig.userRemoteValue;\n\t\tif (preferredHomeCandidate) {\n\t\t\tconst isPreferredHomeCandidateAbsolute = preferLocal ? localPathIsAbsolute(preferredHomeCandidate) : (await this.pathService.path).isAbsolute(preferredHomeCandidate);\n\t\t\tif (isPreferredHomeCandidateAbsolute) {\n\t\t\t\tconst preferredHomeNormalized = preferLocal ? localPathNormalize(preferredHomeCandidate) : (await this.pathService.path).normalize(preferredHomeCandidate);\n\t\t\t\tconst preferredHome = resources.toLocalResource(await this.pathService.fileURI(preferredHomeNormalized), this.environmentService.remoteAuthority, this.pathService.defaultUriScheme);\n\t\t\t\tif (await this.fileService.exists(preferredHome)) {\n\t\t\t\t\treturn preferredHome;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pathService.userHome({ preferLocal });\n\t}\n\n\tasync defaultWorkspacePath(schemeFilter = this.getSchemeFilterForWindow()): Promise<URI> {\n\t\tlet defaultWorkspacePath: URI | undefined;\n\n\t\t// Check for current workspace config file first...\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\tconst configuration = this.contextService.getWorkspace().configuration;\n\t\t\tif (configuration?.scheme === schemeFilter && isSavedWorkspace(configuration, this.environmentService) && !isTemporaryWorkspace(configuration)) {\n\t\t\t\tdefaultWorkspacePath = resources.dirname(configuration);\n\t\t\t}\n\t\t}\n\n\t\t// ...then fallback to default file path\n\t\tif (!defaultWorkspacePath) {\n\t\t\tdefaultWorkspacePath = await this.defaultFilePath(schemeFilter);\n\t\t}\n\n\t\treturn defaultWorkspacePath;\n\t}\n\n\tasync showSaveConfirm(fileNamesOrResources: (string | URI)[]): Promise<ConfirmResult> {\n\t\tif (this.skipDialogs()) {\n\t\t\tthis.logService.trace('FileDialogService: refused to show save confirmation dialog in tests.');\n\n\t\t\t// no veto when we are in extension dev testing mode because we cannot assume we run interactive\n\t\t\treturn ConfirmResult.DONT_SAVE;\n\t\t}\n\n\t\treturn this.doShowSaveConfirm(fileNamesOrResources);\n\t}\n\n\tprivate skipDialogs(): boolean {\n\t\tif (this.environmentService.isExtensionDevelopment && this.environmentService.extensionTestsLocationURI) {\n\t\t\treturn true; // integration tests\n\t\t}\n\n\t\treturn !!this.environmentService.enableSmokeTestDriver; // smoke tests\n\t}\n\n\tprivate async doShowSaveConfirm(fileNamesOrResources: (string | URI)[]): Promise<ConfirmResult> {\n\t\tif (fileNamesOrResources.length === 0) {\n\t\t\treturn ConfirmResult.DONT_SAVE;\n\t\t}\n\n\t\tlet message: string;\n\t\tlet detail = nls.localize('saveChangesDetail', \"Your changes will be lost if you don't save them.\");\n\t\tif (fileNamesOrResources.length === 1) {\n\t\t\tmessage = nls.localize('saveChangesMessage', \"Do you want to save the changes you made to {0}?\", typeof fileNamesOrResources[0] === 'string' ? fileNamesOrResources[0] : resources.basename(fileNamesOrResources[0]));\n\t\t} else {\n\t\t\tmessage = nls.localize('saveChangesMessages', \"Do you want to save the changes to the following {0} files?\", fileNamesOrResources.length);\n\t\t\tdetail = getFileNamesMessage(fileNamesOrResources) + '\\n' + detail;\n\t\t}\n\n\t\tconst { result } = await this.dialogService.prompt<ConfirmResult>({\n\t\t\ttype: Severity.Warning,\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: fileNamesOrResources.length > 1 ?\n\t\t\t\t\t\tnls.localize({ key: 'saveAll', comment: ['&& denotes a mnemonic'] }, \"&&Save All\") :\n\t\t\t\t\t\tnls.localize({ key: 'save', comment: ['&& denotes a mnemonic'] }, \"&&Save\"),\n\t\t\t\t\trun: () => ConfirmResult.SAVE\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize({ key: 'dontSave', comment: ['&& denotes a mnemonic'] }, \"Do&&n't Save\"),\n\t\t\t\t\trun: () => ConfirmResult.DONT_SAVE\n\t\t\t\t}\n\t\t\t],\n\t\t\tcancelButton: {\n\t\t\t\trun: () => ConfirmResult.CANCEL\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected addFileSchemaIfNeeded(schema: string, _isFolder?: boolean): string[] {\n\t\treturn schema === Schemas.untitled ? [Schemas.file] : (schema !== Schemas.file ? [schema, Schemas.file] : [schema]);\n\t}\n\n\tprotected async pickFileFolderAndOpenSimplified(schema: string, options: IPickAndOpenOptions, preferNewWindow: boolean): Promise<void> {\n\t\tconst title = nls.localize('openFileOrFolder.title', 'Open File or Folder');\n\t\tconst availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\n\t\tconst uri = await this.pickResource({ canSelectFiles: true, canSelectFolders: true, canSelectMany: false, defaultUri: options.defaultUri, title, availableFileSystems });\n\n\t\tif (uri) {\n\t\t\tconst stat = await this.fileService.stat(uri);\n\n\t\t\tconst toOpen: IWindowOpenable = stat.isDirectory ? { folderUri: uri } : { fileUri: uri };\n\t\t\tif (!isWorkspaceToOpen(toOpen) && isFileToOpen(toOpen)) {\n\t\t\t\tthis.addFileToRecentlyOpened(toOpen.fileUri);\n\t\t\t}\n\n\t\t\tif (stat.isDirectory || options.forceNewWindow || preferNewWindow) {\n\t\t\t\tawait this.hostService.openWindow([toOpen], { forceNewWindow: options.forceNewWindow, remoteAuthority: options.remoteAuthority });\n\t\t\t} else {\n\t\t\t\tawait this.editorService.openEditors([{ resource: uri, options: { source: EditorOpenSource.USER, pinned: true } }], undefined, { validateTrust: true });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected async pickFileAndOpenSimplified(schema: string, options: IPickAndOpenOptions, preferNewWindow: boolean): Promise<void> {\n\t\tconst title = nls.localize('openFile.title', 'Open File');\n\t\tconst availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\n\t\tconst uri = await this.pickResource({ canSelectFiles: true, canSelectFolders: false, canSelectMany: false, defaultUri: options.defaultUri, title, availableFileSystems });\n\t\tif (uri) {\n\t\t\tthis.addFileToRecentlyOpened(uri);\n\n\t\t\tif (options.forceNewWindow || preferNewWindow) {\n\t\t\t\tawait this.hostService.openWindow([{ fileUri: uri }], { forceNewWindow: options.forceNewWindow, remoteAuthority: options.remoteAuthority });\n\t\t\t} else {\n\t\t\t\tawait this.editorService.openEditors([{ resource: uri, options: { source: EditorOpenSource.USER, pinned: true } }], undefined, { validateTrust: true });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected addFileToRecentlyOpened(uri: URI): void {\n\t\tthis.workspacesService.addRecentlyOpened([{ fileUri: uri, label: this.labelService.getUriLabel(uri) }]);\n\t}\n\n\tprotected async pickFolderAndOpenSimplified(schema: string, options: IPickAndOpenOptions): Promise<void> {\n\t\tconst title = nls.localize('openFolder.title', 'Open Folder');\n\t\tconst availableFileSystems = this.addFileSchemaIfNeeded(schema, true);\n\n\t\tconst uri = await this.pickResource({ canSelectFiles: false, canSelectFolders: true, canSelectMany: false, defaultUri: options.defaultUri, title, availableFileSystems });\n\t\tif (uri) {\n\t\t\treturn this.hostService.openWindow([{ folderUri: uri }], { forceNewWindow: options.forceNewWindow, remoteAuthority: options.remoteAuthority });\n\t\t}\n\t}\n\n\tprotected async pickWorkspaceAndOpenSimplified(schema: string, options: IPickAndOpenOptions): Promise<void> {\n\t\tconst title = nls.localize('openWorkspace.title', 'Open Workspace from File');\n\t\tconst filters: FileFilter[] = [{ name: nls.localize('filterName.workspace', 'Workspace'), extensions: [WORKSPACE_EXTENSION] }];\n\t\tconst availableFileSystems = this.addFileSchemaIfNeeded(schema, true);\n\n\t\tconst uri = await this.pickResource({ canSelectFiles: true, canSelectFolders: false, canSelectMany: false, defaultUri: options.defaultUri, title, filters, availableFileSystems });\n\t\tif (uri) {\n\t\t\treturn this.hostService.openWindow([{ workspaceUri: uri }], { forceNewWindow: options.forceNewWindow, remoteAuthority: options.remoteAuthority });\n\t\t}\n\t}\n\n\tprotected async pickFileToSaveSimplified(schema: string, options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\tif (!options.availableFileSystems) {\n\t\t\toptions.availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\t\t}\n\n\t\toptions.title = nls.localize('saveFileAs.title', 'Save As');\n\t\tconst uri = await this.saveRemoteResource(options);\n\n\t\tif (uri) {\n\t\t\tthis.addFileToRecentlyOpened(uri);\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprotected async showSaveDialogSimplified(schema: string, options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\tif (!options.availableFileSystems) {\n\t\t\toptions.availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\t\t}\n\n\t\treturn this.saveRemoteResource(options);\n\t}\n\n\tprotected async showOpenDialogSimplified(schema: string, options: IOpenDialogOptions): Promise<URI[] | undefined> {\n\t\tif (!options.availableFileSystems) {\n\t\t\toptions.availableFileSystems = this.addFileSchemaIfNeeded(schema, options.canSelectFolders);\n\t\t}\n\n\t\tconst uri = await this.pickResource(options);\n\n\t\treturn uri ? [uri] : undefined;\n\t}\n\n\tprotected getSimpleFileDialog(): ISimpleFileDialog {\n\t\treturn this.instantiationService.createInstance(SimpleFileDialog);\n\t}\n\n\tprivate pickResource(options: IOpenDialogOptions): Promise<URI | undefined> {\n\t\treturn this.getSimpleFileDialog().showOpenDialog(options);\n\t}\n\n\tprivate saveRemoteResource(options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\treturn this.getSimpleFileDialog().showSaveDialog(options);\n\t}\n\n\tprivate getSchemeFilterForWindow(defaultUriScheme?: string): string {\n\t\treturn defaultUriScheme ?? this.pathService.defaultUriScheme;\n\t}\n\n\tprotected getFileSystemSchema(options: { availableFileSystems?: readonly string[]; defaultUri?: URI }): string {\n\t\treturn options.availableFileSystems && options.availableFileSystems[0] || this.getSchemeFilterForWindow(options.defaultUri?.scheme);\n\t}\n\n\tabstract pickFileFolderAndOpen(options: IPickAndOpenOptions): Promise<void>;\n\tabstract pickFileAndOpen(options: IPickAndOpenOptions): Promise<void>;\n\tabstract pickFolderAndOpen(options: IPickAndOpenOptions): Promise<void>;\n\tabstract pickWorkspaceAndOpen(options: IPickAndOpenOptions): Promise<void>;\n\tprotected getWorkspaceAvailableFileSystems(options: IPickAndOpenOptions): string[] {\n\t\tif (options.availableFileSystems && (options.availableFileSystems.length > 0)) {\n\t\t\treturn options.availableFileSystems;\n\t\t}\n\t\tconst availableFileSystems = [Schemas.file];\n\t\tif (this.environmentService.remoteAuthority) {\n\t\t\tavailableFileSystems.unshift(Schemas.vscodeRemote);\n\t\t}\n\t\treturn availableFileSystems;\n\t}\n\tabstract showSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined>;\n\tabstract showOpenDialog(options: IOpenDialogOptions): Promise<URI[] | undefined>;\n\n\tabstract pickFileToSave(defaultUri: URI, availableFileSystems?: string[]): Promise<URI | undefined>;\n\n\tprotected getPickFileToSaveDialogOptions(defaultUri: URI, availableFileSystems?: string[]): ISaveDialogOptions {\n\t\tconst options: ISaveDialogOptions = {\n\t\t\tdefaultUri,\n\t\t\ttitle: nls.localize('saveAsTitle', \"Save As\"),\n\t\t\tavailableFileSystems\n\t\t};\n\n\t\tinterface IFilter { name: string; extensions: string[] }\n\n\t\t// Build the file filter by using our known languages\n\t\tconst ext: string | undefined = defaultUri ? resources.extname(defaultUri) : undefined;\n\t\tlet matchingFilter: IFilter | undefined;\n\n\t\tconst registeredLanguageNames = this.languageService.getSortedRegisteredLanguageNames();\n\t\tconst registeredLanguageFilters: IFilter[] = coalesce(registeredLanguageNames.map(({ languageName, languageId }) => {\n\t\t\tconst extensions = this.languageService.getExtensions(languageId);\n\t\t\tif (!extensions.length) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst filter: IFilter = { name: languageName, extensions: distinct(extensions).slice(0, 10).map(e => trim(e, '.')) };\n\n\t\t\t// https://github.com/microsoft/vscode/issues/115860\n\t\t\tconst extOrPlaintext = ext || PLAINTEXT_EXTENSION;\n\t\t\tif (!matchingFilter && extensions.includes(extOrPlaintext)) {\n\t\t\t\tmatchingFilter = filter;\n\n\t\t\t\t// The selected extension must be in the set of extensions that are in the filter list that is sent to the save dialog.\n\t\t\t\t// If it isn't, add it manually. https://github.com/microsoft/vscode/issues/147657\n\t\t\t\tconst trimmedExt = trim(extOrPlaintext, '.');\n\t\t\t\tif (!filter.extensions.includes(trimmedExt)) {\n\t\t\t\t\tfilter.extensions.unshift(trimmedExt);\n\t\t\t\t}\n\n\t\t\t\treturn null; // first matching filter will be added to the top\n\t\t\t}\n\n\t\t\treturn filter;\n\t\t}));\n\n\t\t// We have no matching filter, e.g. because the language\n\t\t// is unknown. We still add the extension to the list of\n\t\t// filters though so that it can be picked\n\t\t// (https://github.com/microsoft/vscode/issues/96283)\n\t\tif (!matchingFilter && ext) {\n\t\t\tmatchingFilter = { name: trim(ext, '.').toUpperCase(), extensions: [trim(ext, '.')] };\n\t\t}\n\n\t\t// Order of filters is\n\t\t// - All Files (we MUST do this to fix macOS issue https://github.com/microsoft/vscode/issues/102713)\n\t\t// - File Extension Match (if any)\n\t\t// - All Languages\n\t\t// - No Extension\n\t\toptions.filters = coalesce([\n\t\t\t{ name: nls.localize('allFiles', \"All Files\"), extensions: ['*'] },\n\t\t\tmatchingFilter,\n\t\t\t...registeredLanguageFilters,\n\t\t\t{ name: nls.localize('noExt', \"No Extension\"), extensions: [''] }\n\t\t]);\n\n\t\treturn options;\n\t}\n}\n"]}