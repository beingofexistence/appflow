{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/dialogs/electron-sandbox/fileDialogService.ts"],"names":[],"mappings":"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","file":"fileDialogService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SaveDialogOptions, OpenDialogOptions } from 'vs/base/parts/sandbox/common/electronTypes';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IPickAndOpenOptions, ISaveDialogOptions, IOpenDialogOptions, IFileDialogService, IDialogService, INativeOpenDialogOptions } from 'vs/platform/dialogs/common/dialogs';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { URI } from 'vs/base/common/uri';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { INativeHostService } from 'vs/platform/native/common/native';\nimport { AbstractFileDialogService } from 'vs/workbench/services/dialogs/browser/abstractFileDialogService';\nimport { Schemas } from 'vs/base/common/network';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class FileDialogService extends AbstractFileDialogService implements IFileDialogService {\n\n\tconstructor(\n\t\t@IHostService hostService: IHostService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IHistoryService historyService: IHistoryService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IPathService pathService: IPathService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(hostService, contextService, historyService, environmentService, instantiationService,\n\t\t\tconfigurationService, fileService, openerService, dialogService, languageService, workspacesService, labelService, pathService, commandService, editorService, codeEditorService, logService);\n\t}\n\n\tprivate toNativeOpenDialogOptions(options: IPickAndOpenOptions): INativeOpenDialogOptions {\n\t\treturn {\n\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\ttelemetryExtraData: options.telemetryExtraData,\n\t\t\tdefaultPath: options.defaultUri?.fsPath\n\t\t};\n\t}\n\n\tprivate shouldUseSimplified(schema: string): { useSimplified: boolean; isSetting: boolean } {\n\t\tconst setting = (this.configurationService.getValue('files.simpleDialog.enable') === true);\n\t\tconst newWindowSetting = (this.configurationService.getValue('window.openFilesInNewWindow') === 'on');\n\t\treturn {\n\t\t\tuseSimplified: ((schema !== Schemas.file) && (schema !== Schemas.vscodeUserData)) || setting,\n\t\t\tisSetting: newWindowSetting\n\t\t};\n\t}\n\n\tasync pickFileFolderAndOpen(options: IPickAndOpenOptions): Promise<void> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (!options.defaultUri) {\n\t\t\toptions.defaultUri = await this.defaultFilePath(schema);\n\t\t}\n\n\t\tconst shouldUseSimplified = this.shouldUseSimplified(schema);\n\t\tif (shouldUseSimplified.useSimplified) {\n\t\t\treturn this.pickFileFolderAndOpenSimplified(schema, options, shouldUseSimplified.isSetting);\n\t\t}\n\t\treturn this.nativeHostService.pickFileFolderAndOpen(this.toNativeOpenDialogOptions(options));\n\t}\n\n\tasync pickFileAndOpen(options: IPickAndOpenOptions): Promise<void> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (!options.defaultUri) {\n\t\t\toptions.defaultUri = await this.defaultFilePath(schema);\n\t\t}\n\n\t\tconst shouldUseSimplified = this.shouldUseSimplified(schema);\n\t\tif (shouldUseSimplified.useSimplified) {\n\t\t\treturn this.pickFileAndOpenSimplified(schema, options, shouldUseSimplified.isSetting);\n\t\t}\n\t\treturn this.nativeHostService.pickFileAndOpen(this.toNativeOpenDialogOptions(options));\n\t}\n\n\tasync pickFolderAndOpen(options: IPickAndOpenOptions): Promise<void> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (!options.defaultUri) {\n\t\t\toptions.defaultUri = await this.defaultFolderPath(schema);\n\t\t}\n\n\t\tif (this.shouldUseSimplified(schema).useSimplified) {\n\t\t\treturn this.pickFolderAndOpenSimplified(schema, options);\n\t\t}\n\t\treturn this.nativeHostService.pickFolderAndOpen(this.toNativeOpenDialogOptions(options));\n\t}\n\n\tasync pickWorkspaceAndOpen(options: IPickAndOpenOptions): Promise<void> {\n\t\toptions.availableFileSystems = this.getWorkspaceAvailableFileSystems(options);\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (!options.defaultUri) {\n\t\t\toptions.defaultUri = await this.defaultWorkspacePath(schema);\n\t\t}\n\n\t\tif (this.shouldUseSimplified(schema).useSimplified) {\n\t\t\treturn this.pickWorkspaceAndOpenSimplified(schema, options);\n\t\t}\n\t\treturn this.nativeHostService.pickWorkspaceAndOpen(this.toNativeOpenDialogOptions(options));\n\t}\n\n\tasync pickFileToSave(defaultUri: URI, availableFileSystems?: string[]): Promise<URI | undefined> {\n\t\tconst schema = this.getFileSystemSchema({ defaultUri, availableFileSystems });\n\t\tconst options = this.getPickFileToSaveDialogOptions(defaultUri, availableFileSystems);\n\t\tif (this.shouldUseSimplified(schema).useSimplified) {\n\t\t\treturn this.pickFileToSaveSimplified(schema, options);\n\t\t} else {\n\t\t\tconst result = await this.nativeHostService.showSaveDialog(this.toNativeSaveDialogOptions(options));\n\t\t\tif (result && !result.canceled && result.filePath) {\n\t\t\t\tconst uri = URI.file(result.filePath);\n\n\t\t\t\tthis.addFileToRecentlyOpened(uri);\n\n\t\t\t\treturn uri;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tprivate toNativeSaveDialogOptions(options: ISaveDialogOptions): SaveDialogOptions {\n\t\toptions.defaultUri = options.defaultUri ? URI.file(options.defaultUri.path) : undefined;\n\t\treturn {\n\t\t\tdefaultPath: options.defaultUri?.fsPath,\n\t\t\tbuttonLabel: options.saveLabel,\n\t\t\tfilters: options.filters,\n\t\t\ttitle: options.title\n\t\t};\n\t}\n\n\tasync showSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\t\tif (this.shouldUseSimplified(schema).useSimplified) {\n\t\t\treturn this.showSaveDialogSimplified(schema, options);\n\t\t}\n\n\t\tconst result = await this.nativeHostService.showSaveDialog(this.toNativeSaveDialogOptions(options));\n\t\tif (result && !result.canceled && result.filePath) {\n\t\t\treturn URI.file(result.filePath);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tasync showOpenDialog(options: IOpenDialogOptions): Promise<URI[] | undefined> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\t\tif (this.shouldUseSimplified(schema).useSimplified) {\n\t\t\treturn this.showOpenDialogSimplified(schema, options);\n\t\t}\n\n\t\tconst newOptions: OpenDialogOptions & { properties: string[] } = {\n\t\t\ttitle: options.title,\n\t\t\tdefaultPath: options.defaultUri?.fsPath,\n\t\t\tbuttonLabel: options.openLabel,\n\t\t\tfilters: options.filters,\n\t\t\tproperties: []\n\t\t};\n\n\t\tnewOptions.properties.push('createDirectory');\n\n\t\tif (options.canSelectFiles) {\n\t\t\tnewOptions.properties.push('openFile');\n\t\t}\n\n\t\tif (options.canSelectFolders) {\n\t\t\tnewOptions.properties.push('openDirectory');\n\t\t}\n\n\t\tif (options.canSelectMany) {\n\t\t\tnewOptions.properties.push('multiSelections');\n\t\t}\n\n\t\tconst result = await this.nativeHostService.showOpenDialog(newOptions);\n\t\treturn result && Array.isArray(result.filePaths) && result.filePaths.length > 0 ? result.filePaths.map(URI.file) : undefined;\n\t}\n}\n\nregisterSingleton(IFileDialogService, FileDialogService, InstantiationType.Delayed);\n"]}