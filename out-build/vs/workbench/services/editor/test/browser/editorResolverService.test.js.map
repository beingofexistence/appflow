{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/editor/test/browser/editorResolverService.test.ts"],"names":[],"mappings":"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","file":"editorResolverService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { EditorPart } from 'vs/workbench/browser/parts/editor/editorPart';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { EditorResolverService } from 'vs/workbench/services/editor/browser/editorResolverService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorResolverService, ResolvedStatus, RegisteredEditorPriority } from 'vs/workbench/services/editor/common/editorResolverService';\nimport { createEditorPart, ITestInstantiationService, TestFileEditorInput, TestServiceAccessor, workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\n\nsuite('EditorResolverService', () => {\n\n\tconst TEST_EDITOR_INPUT_ID = 'testEditorInputForEditorResolverService';\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => disposables.clear());\n\n\tasync function createEditorResolverService(instantiationService: ITestInstantiationService = workbenchInstantiationService(undefined, disposables)): Promise<[EditorPart, EditorResolverService, TestServiceAccessor]> {\n\t\tconst part = await createEditorPart(instantiationService, disposables);\n\t\tinstantiationService.stub(IEditorGroupsService, part);\n\n\t\tconst editorResolverService = instantiationService.createInstance(EditorResolverService);\n\t\tinstantiationService.stub(IEditorResolverService, editorResolverService);\n\n\t\treturn [part, editorResolverService, instantiationService.createInstance(TestServiceAccessor)];\n\t}\n\n\ttest('Simple Resolve', async () => {\n\t\tconst [part, service] = await createEditorResolverService();\n\t\tconst registeredEditor = service.registerEditor('*.test',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) }),\n\t\t\t}\n\t\t);\n\n\t\tconst resultingResolution = await service.resolveEditor({ resource: URI.file('my://resource-basics.test') }, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, TEST_EDITOR_INPUT_ID);\n\t\t\tresultingResolution.editor.dispose();\n\t\t}\n\t\tregisteredEditor.dispose();\n\t});\n\n\ttest('Untitled Resolve', async () => {\n\t\tconst UNTITLED_TEST_EDITOR_INPUT_ID = 'UNTITLED_TEST_INPUT';\n\t\tconst [part, service] = await createEditorResolverService();\n\t\tconst registeredEditor = service.registerEditor('*.test',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) }),\n\t\t\t\tcreateUntitledEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput((resource ? resource : URI.from({ scheme: Schemas.untitled })), UNTITLED_TEST_EDITOR_INPUT_ID) }),\n\t\t\t}\n\t\t);\n\n\t\t// Untyped untitled - no resource\n\t\tlet resultingResolution = await service.resolveEditor({ resource: undefined }, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\t// We don't expect untitled to match the *.test glob\n\t\tassert.strictEqual(typeof resultingResolution, 'number');\n\n\t\t// Untyped untitled - with untitled resource\n\t\tresultingResolution = await service.resolveEditor({ resource: URI.from({ scheme: Schemas.untitled, path: 'foo.test' }) }, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, UNTITLED_TEST_EDITOR_INPUT_ID);\n\t\t\tresultingResolution.editor.dispose();\n\t\t}\n\n\t\t// Untyped untitled - file resource with forceUntitled\n\t\tresultingResolution = await service.resolveEditor({ resource: URI.file('/fake.test'), forceUntitled: true }, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, UNTITLED_TEST_EDITOR_INPUT_ID);\n\t\t\tresultingResolution.editor.dispose();\n\t\t}\n\n\t\tregisteredEditor.dispose();\n\t});\n\n\ttest('Side by side Resolve', async () => {\n\t\tconst [part, service] = await createEditorResolverService();\n\t\tconst registeredEditorPrimary = service.registerEditor('*.test-primary',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR_PRIMARY',\n\t\t\t\tlabel: 'Test Editor Label Primary',\n\t\t\t\tdetail: 'Test Editor Details Primary',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) }),\n\t\t\t}\n\t\t);\n\n\t\tconst registeredEditorSecondary = service.registerEditor('*.test-secondary',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR_SECONDARY',\n\t\t\t\tlabel: 'Test Editor Label Secondary',\n\t\t\t\tdetail: 'Test Editor Details Secondary',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) }),\n\t\t\t}\n\t\t);\n\n\t\tconst resultingResolution = await service.resolveEditor({\n\t\t\tprimary: { resource: URI.file('my://resource-basics.test-primary') },\n\t\t\tsecondary: { resource: URI.file('my://resource-basics.test-secondary') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editorinputs.sidebysideEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\t\tregisteredEditorPrimary.dispose();\n\t\tregisteredEditorSecondary.dispose();\n\t});\n\n\ttest('Diff editor Resolve', async () => {\n\t\tconst [part, service, accessor] = await createEditorResolverService();\n\t\tconst registeredEditor = service.registerEditor('*.test-diff',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) }),\n\t\t\t\tcreateDiffEditorInput: ({ modified, original, options }, group) => ({\n\t\t\t\t\teditor: accessor.instantiationService.createInstance(\n\t\t\t\t\t\tDiffEditorInput,\n\t\t\t\t\t\t'name',\n\t\t\t\t\t\t'description',\n\t\t\t\t\t\tnew TestFileEditorInput(URI.parse(original.toString()), TEST_EDITOR_INPUT_ID),\n\t\t\t\t\t\tnew TestFileEditorInput(URI.parse(modified.toString()), TEST_EDITOR_INPUT_ID),\n\t\t\t\t\t\tundefined)\n\t\t\t\t})\n\t\t\t}\n\t\t);\n\n\t\tconst resultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test-diff') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test-diff') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\t\tregisteredEditor.dispose();\n\t});\n\n\ttest('Diff editor Resolve - Different Types', async () => {\n\t\tconst [part, service, accessor] = await createEditorResolverService();\n\t\tlet diffOneCounter = 0;\n\t\tlet diffTwoCounter = 0;\n\t\tlet defaultDiffCounter = 0;\n\t\tconst registeredEditor = service.registerEditor('*.test-diff',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) }),\n\t\t\t\tcreateDiffEditorInput: ({ modified, original, options }, group) => {\n\t\t\t\t\tdiffOneCounter++;\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: accessor.instantiationService.createInstance(\n\t\t\t\t\t\t\tDiffEditorInput,\n\t\t\t\t\t\t\t'name',\n\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\tnew TestFileEditorInput(URI.parse(original.toString()), TEST_EDITOR_INPUT_ID),\n\t\t\t\t\t\t\tnew TestFileEditorInput(URI.parse(modified.toString()), TEST_EDITOR_INPUT_ID),\n\t\t\t\t\t\t\tundefined)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tconst secondRegisteredEditor = service.registerEditor('*.test-secondDiff',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR_2',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) }),\n\t\t\t\tcreateDiffEditorInput: ({ modified, original, options }, group) => {\n\t\t\t\t\tdiffTwoCounter++;\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: accessor.instantiationService.createInstance(\n\t\t\t\t\t\t\tDiffEditorInput,\n\t\t\t\t\t\t\t'name',\n\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\tnew TestFileEditorInput(URI.parse(original.toString()), TEST_EDITOR_INPUT_ID),\n\t\t\t\t\t\t\tnew TestFileEditorInput(URI.parse(modified.toString()), TEST_EDITOR_INPUT_ID),\n\t\t\t\t\t\t\tundefined)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tconst defaultRegisteredEditor = service.registerEditor('*',\n\t\t\t{\n\t\t\t\tid: 'default',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.option\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) }),\n\t\t\t\tcreateDiffEditorInput: ({ modified, original, options }, group) => {\n\t\t\t\t\tdefaultDiffCounter++;\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: accessor.instantiationService.createInstance(\n\t\t\t\t\t\t\tDiffEditorInput,\n\t\t\t\t\t\t\t'name',\n\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\tnew TestFileEditorInput(URI.parse(original.toString()), TEST_EDITOR_INPUT_ID),\n\t\t\t\t\t\t\tnew TestFileEditorInput(URI.parse(modified.toString()), TEST_EDITOR_INPUT_ID),\n\t\t\t\t\t\t\tundefined)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tlet resultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test-diff') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test-diff') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(diffOneCounter, 1);\n\t\t\tassert.strictEqual(diffTwoCounter, 0);\n\t\t\tassert.strictEqual(defaultDiffCounter, 0);\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\n\t\tresultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test-secondDiff') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test-secondDiff') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(diffOneCounter, 1);\n\t\t\tassert.strictEqual(diffTwoCounter, 1);\n\t\t\tassert.strictEqual(defaultDiffCounter, 0);\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\n\t\tresultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test-secondDiff') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test-diff') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(diffOneCounter, 1);\n\t\t\tassert.strictEqual(diffTwoCounter, 1);\n\t\t\tassert.strictEqual(defaultDiffCounter, 1);\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\n\t\tresultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test-diff') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test-secondDiff') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(diffOneCounter, 1);\n\t\t\tassert.strictEqual(diffTwoCounter, 1);\n\t\t\tassert.strictEqual(defaultDiffCounter, 2);\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\n\t\tresultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test-secondDiff') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test-diff') },\n\t\t\toptions: { override: 'TEST_EDITOR' }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(diffOneCounter, 2);\n\t\t\tassert.strictEqual(diffTwoCounter, 1);\n\t\t\tassert.strictEqual(defaultDiffCounter, 2);\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\n\t\tregisteredEditor.dispose();\n\t\tsecondRegisteredEditor.dispose();\n\t\tdefaultRegisteredEditor.dispose();\n\t});\n\n\ttest('Registry & Events', async () => {\n\t\tconst [, service] = await createEditorResolverService();\n\n\t\tlet eventCounter = 0;\n\t\tservice.onDidChangeEditorRegistrations(() => {\n\t\t\teventCounter++;\n\t\t});\n\n\t\tconst editors = service.getEditors();\n\n\t\tconst registeredEditor = service.registerEditor('*.test',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) })\n\t\t\t}\n\t\t);\n\n\t\tassert.strictEqual(eventCounter, 1);\n\t\tassert.strictEqual(service.getEditors().length, editors.length + 1);\n\t\tassert.strictEqual(service.getEditors().some(editor => editor.id === 'TEST_EDITOR'), true);\n\n\t\tregisteredEditor.dispose();\n\n\t\tassert.strictEqual(eventCounter, 2);\n\t\tassert.strictEqual(service.getEditors().length, editors.length);\n\t\tassert.strictEqual(service.getEditors().some(editor => editor.id === 'TEST_EDITOR'), false);\n\t});\n\n\ttest('Multiple registrations to same glob and id #155859', async () => {\n\t\tconst [part, service, accessor] = await createEditorResolverService();\n\t\tconst testEditorInfo = {\n\t\t\tid: 'TEST_EDITOR',\n\t\t\tlabel: 'Test Editor Label',\n\t\t\tdetail: 'Test Editor Details',\n\t\t\tpriority: RegisteredEditorPriority.default\n\t\t};\n\t\tconst registeredSingleEditor = service.registerEditor('*.test',\n\t\t\ttestEditorInfo,\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) })\n\t\t\t}\n\t\t);\n\n\t\tconst registeredDiffEditor = service.registerEditor('*.test',\n\t\t\ttestEditorInfo,\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateDiffEditorInput: ({ modified, original, options }, group) => ({\n\t\t\t\t\teditor: accessor.instantiationService.createInstance(\n\t\t\t\t\t\tDiffEditorInput,\n\t\t\t\t\t\t'name',\n\t\t\t\t\t\t'description',\n\t\t\t\t\t\tnew TestFileEditorInput(URI.parse(original.toString()), TEST_EDITOR_INPUT_ID),\n\t\t\t\t\t\tnew TestFileEditorInput(URI.parse(modified.toString()), TEST_EDITOR_INPUT_ID),\n\t\t\t\t\t\tundefined)\n\t\t\t\t})\n\t\t\t}\n\t\t);\n\n\t\t// Resolve a diff\n\t\tlet resultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\n\t\t// Remove diff registration\n\t\tregisteredDiffEditor.dispose();\n\n\t\t// Resolve a diff again, expected failure\n\t\tresultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.strictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.fail();\n\t\t}\n\n\t\tregisteredSingleEditor.dispose();\n\t});\n});\n"]}