{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/editor/browser/editorService.ts"],"names":[],"mappings":"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","file":"editorService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IResourceEditorInput, IEditorOptions, EditorActivation, IResourceEditorInputIdentifier, ITextResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { SideBySideEditor, IEditorPane, GroupIdentifier, IUntitledTextResourceEditorInput, IResourceDiffEditorInput, EditorInputWithOptions, isEditorInputWithOptions, IEditorIdentifier, IEditorCloseEvent, ITextDiffEditorPane, IRevertOptions, SaveReason, EditorsOrder, IWorkbenchEditorConfiguration, EditorResourceAccessor, IVisibleEditorPane, EditorInputCapabilities, isResourceDiffEditorInput, IUntypedEditorInput, isResourceEditorInput, isEditorInput, isEditorInputWithOptionsAndGroup, IFindEditorOptions, isResourceMergeEditorInput } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { SideBySideEditorInput } from 'vs/workbench/common/editor/sideBySideEditorInput';\nimport { ResourceMap, ResourceSet } from 'vs/base/common/map';\nimport { IFileService, FileOperationEvent, FileOperation, FileChangesEvent, FileChangeType } from 'vs/platform/files/common/files';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { IEditorGroupsService, IEditorGroup, GroupsOrder, IEditorReplacement, isEditorReplacement, ICloseEditorOptions } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IUntypedEditorReplacement, IEditorService, ISaveEditorsOptions, ISaveAllEditorsOptions, IRevertAllEditorsOptions, IBaseSaveRevertAllEditorOptions, IOpenEditorsOptions, PreferredGroup, isPreferredGroup, IEditorsChangeEvent, ISaveEditorsResult } from 'vs/workbench/services/editor/common/editorService';\nimport { IConfigurationChangeEvent, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { Disposable, IDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { coalesce, distinct } from 'vs/base/common/arrays';\nimport { isCodeEditor, isDiffEditor, ICodeEditor, IDiffEditor, isCompositeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IEditorGroupView, EditorServiceImpl } from 'vs/workbench/browser/parts/editor/editor';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { isUndefined } from 'vs/base/common/types';\nimport { EditorsObserver } from 'vs/workbench/browser/parts/editor/editorsObserver';\nimport { Promises, timeout } from 'vs/base/common/async';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { indexOfPath } from 'vs/base/common/extpath';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IEditorResolverService, ResolvedStatus } from 'vs/workbench/services/editor/common/editorResolverService';\nimport { IWorkspaceTrustRequestService, WorkspaceTrustUriResponse } from 'vs/platform/workspace/common/workspaceTrust';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { findGroup } from 'vs/workbench/services/editor/common/editorGroupFinder';\nimport { ITextEditorService } from 'vs/workbench/services/textfile/common/textEditorService';\n\nexport class EditorService extends Disposable implements EditorServiceImpl {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t//#region events\n\n\tprivate readonly _onDidActiveEditorChange = this._register(new Emitter<void>());\n\treadonly onDidActiveEditorChange = this._onDidActiveEditorChange.event;\n\n\tprivate readonly _onDidVisibleEditorsChange = this._register(new Emitter<void>());\n\treadonly onDidVisibleEditorsChange = this._onDidVisibleEditorsChange.event;\n\n\tprivate readonly _onDidEditorsChange = this._register(new Emitter<IEditorsChangeEvent>());\n\treadonly onDidEditorsChange = this._onDidEditorsChange.event;\n\n\tprivate readonly _onDidCloseEditor = this._register(new Emitter<IEditorCloseEvent>());\n\treadonly onDidCloseEditor = this._onDidCloseEditor.event;\n\n\tprivate readonly _onDidOpenEditorFail = this._register(new Emitter<IEditorIdentifier>());\n\treadonly onDidOpenEditorFail = this._onDidOpenEditorFail.event;\n\n\tprivate readonly _onDidMostRecentlyActiveEditorsChange = this._register(new Emitter<void>());\n\treadonly onDidMostRecentlyActiveEditorsChange = this._onDidMostRecentlyActiveEditorsChange.event;\n\n\t//#endregion\n\n\tconstructor(\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IEditorResolverService private readonly editorResolverService: IEditorResolverService,\n\t\t@IWorkspaceTrustRequestService private readonly workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@ITextEditorService private readonly textEditorService: ITextEditorService\n\t) {\n\t\tsuper();\n\n\t\tthis.onConfigurationUpdated();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Editor & group changes\n\t\tthis.editorGroupService.whenReady.then(() => this.onEditorGroupsReady());\n\t\tthis._register(this.editorGroupService.onDidChangeActiveGroup(group => this.handleActiveEditorChange(group)));\n\t\tthis._register(this.editorGroupService.onDidAddGroup(group => this.registerGroupListeners(group as IEditorGroupView)));\n\t\tthis._register(this.editorsObserver.onDidMostRecentlyActiveEditorsChange(() => this._onDidMostRecentlyActiveEditorsChange.fire()));\n\n\t\t// Out of workspace file watchers\n\t\tthis._register(this.onDidVisibleEditorsChange(() => this.handleVisibleEditorsChange()));\n\n\t\t// File changes & operations\n\t\t// Note: there is some duplication with the two file event handlers- Since we cannot always rely on the disk events\n\t\t// carrying all necessary data in all environments, we also use the file operation events to make sure operations are handled.\n\t\t// In any case there is no guarantee if the local event is fired first or the disk one. Thus, code must handle the case\n\t\t// that the event ordering is random as well as might not carry all information needed.\n\t\tthis._register(this.fileService.onDidRunOperation(e => this.onDidRunFileOperation(e)));\n\t\tthis._register(this.fileService.onDidFilesChange(e => this.onDidFilesChange(e)));\n\n\t\t// Configuration\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(e)));\n\t}\n\n\t//#region Editor & group event handlers\n\n\tprivate lastActiveEditor: EditorInput | undefined = undefined;\n\n\tprivate onEditorGroupsReady(): void {\n\n\t\t// Register listeners to each opened group\n\t\tfor (const group of this.editorGroupService.groups) {\n\t\t\tthis.registerGroupListeners(group as IEditorGroupView);\n\t\t}\n\n\t\t// Fire initial set of editor events if there is an active editor\n\t\tif (this.activeEditor) {\n\t\t\tthis.doHandleActiveEditorChangeEvent();\n\t\t\tthis._onDidVisibleEditorsChange.fire();\n\t\t}\n\t}\n\n\tprivate handleActiveEditorChange(group: IEditorGroup): void {\n\t\tif (group !== this.editorGroupService.activeGroup) {\n\t\t\treturn; // ignore if not the active group\n\t\t}\n\n\t\tif (!this.lastActiveEditor && !group.activeEditor) {\n\t\t\treturn; // ignore if we still have no active editor\n\t\t}\n\n\t\tthis.doHandleActiveEditorChangeEvent();\n\t}\n\n\tprivate doHandleActiveEditorChangeEvent(): void {\n\n\t\t// Remember as last active\n\t\tconst activeGroup = this.editorGroupService.activeGroup;\n\t\tthis.lastActiveEditor = activeGroup.activeEditor ?? undefined;\n\n\t\t// Fire event to outside parties\n\t\tthis._onDidActiveEditorChange.fire();\n\t}\n\n\tprivate registerGroupListeners(group: IEditorGroupView): void {\n\t\tconst groupDisposables = new DisposableStore();\n\n\t\tgroupDisposables.add(group.onDidModelChange(e => {\n\t\t\tthis._onDidEditorsChange.fire({ groupId: group.id, event: e });\n\t\t}));\n\n\t\tgroupDisposables.add(group.onDidActiveEditorChange(() => {\n\t\t\tthis.handleActiveEditorChange(group);\n\t\t\tthis._onDidVisibleEditorsChange.fire();\n\t\t}));\n\n\t\tgroupDisposables.add(group.onDidCloseEditor(e => {\n\t\t\tthis._onDidCloseEditor.fire(e);\n\t\t}));\n\n\t\tgroupDisposables.add(group.onDidOpenEditorFail(editor => {\n\t\t\tthis._onDidOpenEditorFail.fire({ editor, groupId: group.id });\n\t\t}));\n\n\t\tEvent.once(group.onWillDispose)(() => {\n\t\t\tdispose(groupDisposables);\n\t\t});\n\t}\n\n\t//#endregion\n\n\t//#region Visible Editors Change: Install file watchers for out of workspace resources that became visible\n\n\tprivate readonly activeOutOfWorkspaceWatchers = new ResourceMap<IDisposable>();\n\n\tprivate handleVisibleEditorsChange(): void {\n\t\tconst visibleOutOfWorkspaceResources = new ResourceSet();\n\n\t\tfor (const editor of this.visibleEditors) {\n\t\t\tconst resources = distinct(coalesce([\n\t\t\t\tEditorResourceAccessor.getCanonicalUri(editor, { supportSideBySide: SideBySideEditor.PRIMARY }),\n\t\t\t\tEditorResourceAccessor.getCanonicalUri(editor, { supportSideBySide: SideBySideEditor.SECONDARY })\n\t\t\t]), resource => resource.toString());\n\n\t\t\tfor (const resource of resources) {\n\t\t\t\tif (this.fileService.hasProvider(resource) && !this.contextService.isInsideWorkspace(resource)) {\n\t\t\t\t\tvisibleOutOfWorkspaceResources.add(resource);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Handle no longer visible out of workspace resources\n\t\tfor (const resource of this.activeOutOfWorkspaceWatchers.keys()) {\n\t\t\tif (!visibleOutOfWorkspaceResources.has(resource)) {\n\t\t\t\tdispose(this.activeOutOfWorkspaceWatchers.get(resource));\n\t\t\t\tthis.activeOutOfWorkspaceWatchers.delete(resource);\n\t\t\t}\n\t\t}\n\n\t\t// Handle newly visible out of workspace resources\n\t\tfor (const resource of visibleOutOfWorkspaceResources.keys()) {\n\t\t\tif (!this.activeOutOfWorkspaceWatchers.get(resource)) {\n\t\t\t\tconst disposable = this.fileService.watch(resource);\n\t\t\t\tthis.activeOutOfWorkspaceWatchers.set(resource, disposable);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Changes: Move & Deletes to move or close opend editors\n\n\tprivate async onDidRunFileOperation(e: FileOperationEvent): Promise<void> {\n\n\t\t// Handle moves specially when file is opened\n\t\tif (e.isOperation(FileOperation.MOVE)) {\n\t\t\tthis.handleMovedFile(e.resource, e.target.resource);\n\t\t}\n\n\t\t// Handle deletes\n\t\tif (e.isOperation(FileOperation.DELETE) || e.isOperation(FileOperation.MOVE)) {\n\t\t\tthis.handleDeletedFile(e.resource, false, e.target ? e.target.resource : undefined);\n\t\t}\n\t}\n\n\tprivate onDidFilesChange(e: FileChangesEvent): void {\n\t\tif (e.gotDeleted()) {\n\t\t\tthis.handleDeletedFile(e, true);\n\t\t}\n\t}\n\n\tprivate async handleMovedFile(source: URI, target: URI): Promise<void> {\n\t\tfor (const group of this.editorGroupService.groups) {\n\t\t\tconst replacements: (IUntypedEditorReplacement | IEditorReplacement)[] = [];\n\n\t\t\tfor (const editor of group.editors) {\n\t\t\t\tconst resource = editor.resource;\n\t\t\t\tif (!resource || !this.uriIdentityService.extUri.isEqualOrParent(resource, source)) {\n\t\t\t\t\tcontinue; // not matching our resource\n\t\t\t\t}\n\n\t\t\t\t// Determine new resulting target resource\n\t\t\t\tlet targetResource: URI;\n\t\t\t\tif (this.uriIdentityService.extUri.isEqual(source, resource)) {\n\t\t\t\t\ttargetResource = target; // file got moved\n\t\t\t\t} else {\n\t\t\t\t\tconst index = indexOfPath(resource.path, source.path, this.uriIdentityService.extUri.ignorePathCasing(resource));\n\t\t\t\t\ttargetResource = joinPath(target, resource.path.substr(index + source.path.length + 1)); // parent folder got moved\n\t\t\t\t}\n\n\t\t\t\t// Delegate rename() to editor instance\n\t\t\t\tconst moveResult = await editor.rename(group.id, targetResource);\n\t\t\t\tif (!moveResult) {\n\t\t\t\t\treturn; // not target - ignore\n\t\t\t\t}\n\n\t\t\t\tconst optionOverrides = {\n\t\t\t\t\tpreserveFocus: true,\n\t\t\t\t\tpinned: group.isPinned(editor),\n\t\t\t\t\tsticky: group.isSticky(editor),\n\t\t\t\t\tindex: group.getIndexOfEditor(editor),\n\t\t\t\t\tinactive: !group.isActive(editor)\n\t\t\t\t};\n\n\t\t\t\t// Construct a replacement with our extra options mixed in\n\t\t\t\tif (isEditorInput(moveResult.editor)) {\n\t\t\t\t\treplacements.push({\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\treplacement: moveResult.editor,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t...moveResult.options,\n\t\t\t\t\t\t\t...optionOverrides\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treplacements.push({\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\treplacement: {\n\t\t\t\t\t\t\t...moveResult.editor,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t...moveResult.editor.options,\n\t\t\t\t\t\t\t\t...optionOverrides\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply replacements\n\t\t\tif (replacements.length) {\n\t\t\t\tthis.replaceEditors(replacements, group);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate closeOnFileDelete: boolean = false;\n\n\tprivate onConfigurationUpdated(e?: IConfigurationChangeEvent): void {\n\t\tif (e && !e.affectsConfiguration('workbench.editor.closeOnFileDelete')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst configuration = this.configurationService.getValue<IWorkbenchEditorConfiguration>();\n\t\tif (typeof configuration.workbench?.editor?.closeOnFileDelete === 'boolean') {\n\t\t\tthis.closeOnFileDelete = configuration.workbench.editor.closeOnFileDelete;\n\t\t} else {\n\t\t\tthis.closeOnFileDelete = false; // default\n\t\t}\n\t}\n\n\tprivate handleDeletedFile(arg1: URI | FileChangesEvent, isExternal: boolean, movedTo?: URI): void {\n\t\tfor (const editor of this.getAllNonDirtyEditors({ includeUntitled: false, supportSideBySide: true })) {\n\t\t\t(async () => {\n\t\t\t\tconst resource = editor.resource;\n\t\t\t\tif (!resource) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Handle deletes in opened editors depending on:\n\t\t\t\t// - we close any editor when `closeOnFileDelete: true`\n\t\t\t\t// - we close any editor when the delete occurred from within VSCode\n\t\t\t\tif (this.closeOnFileDelete || !isExternal) {\n\n\t\t\t\t\t// Do NOT close any opened editor that matches the resource path (either equal or being parent) of the\n\t\t\t\t\t// resource we move to (movedTo). Otherwise we would close a resource that has been renamed to the same\n\t\t\t\t\t// path but different casing.\n\t\t\t\t\tif (movedTo && this.uriIdentityService.extUri.isEqualOrParent(resource, movedTo)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet matches = false;\n\t\t\t\t\tif (arg1 instanceof FileChangesEvent) {\n\t\t\t\t\t\tmatches = arg1.contains(resource, FileChangeType.DELETED);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatches = this.uriIdentityService.extUri.isEqualOrParent(resource, arg1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// We have received reports of users seeing delete events even though the file still\n\t\t\t\t\t// exists (network shares issue: https://github.com/microsoft/vscode/issues/13665).\n\t\t\t\t\t// Since we do not want to close an editor without reason, we have to check if the\n\t\t\t\t\t// file is really gone and not just a faulty file event.\n\t\t\t\t\t// This only applies to external file events, so we need to check for the isExternal\n\t\t\t\t\t// flag.\n\t\t\t\t\tlet exists = false;\n\t\t\t\t\tif (isExternal && this.fileService.hasProvider(resource)) {\n\t\t\t\t\t\tawait timeout(100);\n\t\t\t\t\t\texists = await this.fileService.exists(resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!exists && !editor.isDisposed()) {\n\t\t\t\t\t\teditor.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t}\n\n\tprivate getAllNonDirtyEditors(options: { includeUntitled: boolean; supportSideBySide: boolean }): EditorInput[] {\n\t\tconst editors: EditorInput[] = [];\n\n\t\tfunction conditionallyAddEditor(editor: EditorInput): void {\n\t\t\tif (editor.hasCapability(EditorInputCapabilities.Untitled) && !options.includeUntitled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (editor.isDirty()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditors.push(editor);\n\t\t}\n\n\t\tfor (const editor of this.editors) {\n\t\t\tif (options.supportSideBySide && editor instanceof SideBySideEditorInput) {\n\t\t\t\tconditionallyAddEditor(editor.primary);\n\t\t\t\tconditionallyAddEditor(editor.secondary);\n\t\t\t} else {\n\t\t\t\tconditionallyAddEditor(editor);\n\t\t\t}\n\t\t}\n\n\t\treturn editors;\n\t}\n\n\t//#endregion\n\n\t//#region Editor accessors\n\n\tprivate readonly editorsObserver = this._register(this.instantiationService.createInstance(EditorsObserver));\n\n\tget activeEditorPane(): IVisibleEditorPane | undefined {\n\t\treturn this.editorGroupService.activeGroup?.activeEditorPane;\n\t}\n\n\tget activeTextEditorControl(): ICodeEditor | IDiffEditor | undefined {\n\t\tconst activeEditorPane = this.activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tconst activeControl = activeEditorPane.getControl();\n\t\t\tif (isCodeEditor(activeControl) || isDiffEditor(activeControl)) {\n\t\t\t\treturn activeControl;\n\t\t\t}\n\t\t\tif (isCompositeEditor(activeControl) && isCodeEditor(activeControl.activeCodeEditor)) {\n\t\t\t\treturn activeControl.activeCodeEditor;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget activeTextEditorLanguageId(): string | undefined {\n\t\tlet activeCodeEditor: ICodeEditor | undefined = undefined;\n\n\t\tconst activeTextEditorControl = this.activeTextEditorControl;\n\t\tif (isDiffEditor(activeTextEditorControl)) {\n\t\t\tactiveCodeEditor = activeTextEditorControl.getModifiedEditor();\n\t\t} else {\n\t\t\tactiveCodeEditor = activeTextEditorControl;\n\t\t}\n\n\t\treturn activeCodeEditor?.getModel()?.getLanguageId();\n\t}\n\n\tget count(): number {\n\t\treturn this.editorsObserver.count;\n\t}\n\n\tget editors(): EditorInput[] {\n\t\treturn this.getEditors(EditorsOrder.SEQUENTIAL).map(({ editor }) => editor);\n\t}\n\n\tgetEditors(order: EditorsOrder, options?: { excludeSticky?: boolean }): readonly IEditorIdentifier[] {\n\t\tswitch (order) {\n\n\t\t\t// MRU\n\t\t\tcase EditorsOrder.MOST_RECENTLY_ACTIVE:\n\t\t\t\tif (options?.excludeSticky) {\n\t\t\t\t\treturn this.editorsObserver.editors.filter(({ groupId, editor }) => !this.editorGroupService.getGroup(groupId)?.isSticky(editor));\n\t\t\t\t}\n\n\t\t\t\treturn this.editorsObserver.editors;\n\n\t\t\t// Sequential\n\t\t\tcase EditorsOrder.SEQUENTIAL: {\n\t\t\t\tconst editors: IEditorIdentifier[] = [];\n\n\t\t\t\tfor (const group of this.editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE)) {\n\t\t\t\t\teditors.push(...group.getEditors(EditorsOrder.SEQUENTIAL, options).map(editor => ({ editor, groupId: group.id })));\n\t\t\t\t}\n\n\t\t\t\treturn editors;\n\t\t\t}\n\t\t}\n\t}\n\n\tget activeEditor(): EditorInput | undefined {\n\t\tconst activeGroup = this.editorGroupService.activeGroup;\n\n\t\treturn activeGroup ? activeGroup.activeEditor ?? undefined : undefined;\n\t}\n\n\tget visibleEditorPanes(): IVisibleEditorPane[] {\n\t\treturn coalesce(this.editorGroupService.groups.map(group => group.activeEditorPane));\n\t}\n\n\tget visibleTextEditorControls(): Array<ICodeEditor | IDiffEditor> {\n\t\tconst visibleTextEditorControls: Array<ICodeEditor | IDiffEditor> = [];\n\t\tfor (const visibleEditorPane of this.visibleEditorPanes) {\n\t\t\tconst control = visibleEditorPane.getControl();\n\t\t\tif (isCodeEditor(control) || isDiffEditor(control)) {\n\t\t\t\tvisibleTextEditorControls.push(control);\n\t\t\t}\n\t\t}\n\n\t\treturn visibleTextEditorControls;\n\t}\n\n\tget visibleEditors(): EditorInput[] {\n\t\treturn coalesce(this.editorGroupService.groups.map(group => group.activeEditor));\n\t}\n\n\t//#endregion\n\n\t//#region openEditor()\n\n\topenEditor(editor: EditorInput, options?: IEditorOptions, group?: PreferredGroup): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IUntypedEditorInput, group?: PreferredGroup): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IResourceEditorInput, group?: PreferredGroup): Promise<IEditorPane | undefined>;\n\topenEditor(editor: ITextResourceEditorInput | IUntitledTextResourceEditorInput, group?: PreferredGroup): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IResourceDiffEditorInput, group?: PreferredGroup): Promise<ITextDiffEditorPane | undefined>;\n\topenEditor(editor: EditorInput | IUntypedEditorInput, optionsOrPreferredGroup?: IEditorOptions | PreferredGroup, preferredGroup?: PreferredGroup): Promise<IEditorPane | undefined>;\n\tasync openEditor(editor: EditorInput | IUntypedEditorInput, optionsOrPreferredGroup?: IEditorOptions | PreferredGroup, preferredGroup?: PreferredGroup): Promise<IEditorPane | undefined> {\n\t\tlet typedEditor: EditorInput | undefined = undefined;\n\t\tlet options = isEditorInput(editor) ? optionsOrPreferredGroup as IEditorOptions : editor.options;\n\t\tlet group: IEditorGroup | undefined = undefined;\n\n\t\tif (isPreferredGroup(optionsOrPreferredGroup)) {\n\t\t\tpreferredGroup = optionsOrPreferredGroup;\n\t\t}\n\n\t\t// Resolve override unless disabled\n\t\tif (!isEditorInput(editor)) {\n\t\t\tconst resolvedEditor = await this.editorResolverService.resolveEditor(editor, preferredGroup);\n\n\t\t\tif (resolvedEditor === ResolvedStatus.ABORT) {\n\t\t\t\treturn; // skip editor if override is aborted\n\t\t\t}\n\n\t\t\t// We resolved an editor to use\n\t\t\tif (isEditorInputWithOptionsAndGroup(resolvedEditor)) {\n\t\t\t\ttypedEditor = resolvedEditor.editor;\n\t\t\t\toptions = resolvedEditor.options;\n\t\t\t\tgroup = resolvedEditor.group;\n\t\t\t}\n\t\t}\n\n\t\t// Override is disabled or did not apply: fallback to default\n\t\tif (!typedEditor) {\n\t\t\ttypedEditor = isEditorInput(editor) ? editor : await this.textEditorService.resolveTextEditor(editor);\n\t\t}\n\n\t\t// If group still isn't defined because of a disabled override we resolve it\n\t\tif (!group) {\n\t\t\tlet activation: EditorActivation | undefined = undefined;\n\t\t\t([group, activation] = this.instantiationService.invokeFunction(findGroup, { editor: typedEditor, options }, preferredGroup));\n\n\t\t\t// Mixin editor group activation if returned\n\t\t\tif (activation) {\n\t\t\t\toptions = { ...options, activation };\n\t\t\t}\n\t\t}\n\n\t\treturn group.openEditor(typedEditor, options);\n\t}\n\n\t//#endregion\n\n\t//#region openEditors()\n\n\topenEditors(editors: EditorInputWithOptions[], group?: PreferredGroup, options?: IOpenEditorsOptions): Promise<IEditorPane[]>;\n\topenEditors(editors: IUntypedEditorInput[], group?: PreferredGroup, options?: IOpenEditorsOptions): Promise<IEditorPane[]>;\n\topenEditors(editors: Array<EditorInputWithOptions | IUntypedEditorInput>, group?: PreferredGroup, options?: IOpenEditorsOptions): Promise<IEditorPane[]>;\n\tasync openEditors(editors: Array<EditorInputWithOptions | IUntypedEditorInput>, preferredGroup?: PreferredGroup, options?: IOpenEditorsOptions): Promise<IEditorPane[]> {\n\n\t\t// Pass all editors to trust service to determine if\n\t\t// we should proceed with opening the editors if we\n\t\t// are asked to validate trust.\n\t\tif (options?.validateTrust) {\n\t\t\tconst editorsTrusted = await this.handleWorkspaceTrust(editors);\n\t\t\tif (!editorsTrusted) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// Find target groups for editors to open\n\t\tconst mapGroupToTypedEditors = new Map<IEditorGroup, Array<EditorInputWithOptions>>();\n\t\tfor (const editor of editors) {\n\t\t\tlet typedEditor: EditorInputWithOptions | undefined = undefined;\n\t\t\tlet group: IEditorGroup | undefined = undefined;\n\n\t\t\t// Resolve override unless disabled\n\t\t\tif (!isEditorInputWithOptions(editor)) {\n\t\t\t\tconst resolvedEditor = await this.editorResolverService.resolveEditor(editor, preferredGroup);\n\n\t\t\t\tif (resolvedEditor === ResolvedStatus.ABORT) {\n\t\t\t\t\tcontinue; // skip editor if override is aborted\n\t\t\t\t}\n\n\t\t\t\t// We resolved an editor to use\n\t\t\t\tif (isEditorInputWithOptionsAndGroup(resolvedEditor)) {\n\t\t\t\t\ttypedEditor = resolvedEditor;\n\t\t\t\t\tgroup = resolvedEditor.group;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override is disabled or did not apply: fallback to default\n\t\t\tif (!typedEditor) {\n\t\t\t\ttypedEditor = isEditorInputWithOptions(editor) ? editor : { editor: await this.textEditorService.resolveTextEditor(editor), options: editor.options };\n\t\t\t}\n\n\t\t\t// If group still isn't defined because of a disabled override we resolve it\n\t\t\tif (!group) {\n\t\t\t\t[group] = this.instantiationService.invokeFunction(findGroup, typedEditor, preferredGroup);\n\t\t\t}\n\n\t\t\t// Update map of groups to editors\n\t\t\tlet targetGroupEditors = mapGroupToTypedEditors.get(group);\n\t\t\tif (!targetGroupEditors) {\n\t\t\t\ttargetGroupEditors = [];\n\t\t\t\tmapGroupToTypedEditors.set(group, targetGroupEditors);\n\t\t\t}\n\n\t\t\ttargetGroupEditors.push(typedEditor);\n\t\t}\n\n\t\t// Open in target groups\n\t\tconst result: Promise<IEditorPane | undefined>[] = [];\n\t\tfor (const [group, editors] of mapGroupToTypedEditors) {\n\t\t\tresult.push(group.openEditors(editors));\n\t\t}\n\n\t\treturn coalesce(await Promises.settled(result));\n\t}\n\n\tprivate async handleWorkspaceTrust(editors: Array<EditorInputWithOptions | IUntypedEditorInput>): Promise<boolean> {\n\t\tconst { resources, diffMode, mergeMode } = this.extractEditorResources(editors);\n\n\t\tconst trustResult = await this.workspaceTrustRequestService.requestOpenFilesTrust(resources);\n\t\tswitch (trustResult) {\n\t\t\tcase WorkspaceTrustUriResponse.Open:\n\t\t\t\treturn true;\n\t\t\tcase WorkspaceTrustUriResponse.OpenInNewWindow:\n\t\t\t\tawait this.hostService.openWindow(resources.map(resource => ({ fileUri: resource })), { forceNewWindow: true, diffMode, mergeMode });\n\t\t\t\treturn false;\n\t\t\tcase WorkspaceTrustUriResponse.Cancel:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate extractEditorResources(editors: Array<EditorInputWithOptions | IUntypedEditorInput>): { resources: URI[]; diffMode?: boolean; mergeMode?: boolean } {\n\t\tconst resources = new ResourceSet();\n\t\tlet diffMode = false;\n\t\tlet mergeMode = false;\n\n\t\tfor (const editor of editors) {\n\n\t\t\t// Typed Editor\n\t\t\tif (isEditorInputWithOptions(editor)) {\n\t\t\t\tconst resource = EditorResourceAccessor.getOriginalUri(editor.editor, { supportSideBySide: SideBySideEditor.BOTH });\n\t\t\t\tif (URI.isUri(resource)) {\n\t\t\t\t\tresources.add(resource);\n\t\t\t\t} else if (resource) {\n\t\t\t\t\tif (resource.primary) {\n\t\t\t\t\t\tresources.add(resource.primary);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (resource.secondary) {\n\t\t\t\t\t\tresources.add(resource.secondary);\n\t\t\t\t\t}\n\n\t\t\t\t\tdiffMode = editor.editor instanceof DiffEditorInput;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Untyped editor\n\t\t\telse {\n\t\t\t\tif (isResourceMergeEditorInput(editor)) {\n\t\t\t\t\tif (URI.isUri(editor.input1)) {\n\t\t\t\t\t\tresources.add(editor.input1.resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (URI.isUri(editor.input2)) {\n\t\t\t\t\t\tresources.add(editor.input2.resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (URI.isUri(editor.base)) {\n\t\t\t\t\t\tresources.add(editor.base.resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (URI.isUri(editor.result)) {\n\t\t\t\t\t\tresources.add(editor.result.resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tmergeMode = true;\n\t\t\t\t} if (isResourceDiffEditorInput(editor)) {\n\t\t\t\t\tif (URI.isUri(editor.original.resource)) {\n\t\t\t\t\t\tresources.add(editor.original.resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (URI.isUri(editor.modified.resource)) {\n\t\t\t\t\t\tresources.add(editor.modified.resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tdiffMode = true;\n\t\t\t\t} else if (isResourceEditorInput(editor)) {\n\t\t\t\t\tresources.add(editor.resource);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tresources: Array.from(resources.keys()),\n\t\t\tdiffMode,\n\t\t\tmergeMode\n\t\t};\n\t}\n\n\t//#endregion\n\n\t//#region isOpened()\n\n\tisOpened(editor: IResourceEditorInputIdentifier): boolean {\n\t\treturn this.editorsObserver.hasEditor({\n\t\t\tresource: this.uriIdentityService.asCanonicalUri(editor.resource),\n\t\t\ttypeId: editor.typeId,\n\t\t\teditorId: editor.editorId\n\t\t});\n\t}\n\n\t//#endregion\n\n\t//#region isOpened()\n\n\tisVisible(editor: EditorInput): boolean {\n\t\tfor (const group of this.editorGroupService.groups) {\n\t\t\tif (group.activeEditor?.matches(editor)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t//#endregion\n\n\t//#region closeEditor()\n\n\tasync closeEditor({ editor, groupId }: IEditorIdentifier, options?: ICloseEditorOptions): Promise<void> {\n\t\tconst group = this.editorGroupService.getGroup(groupId);\n\n\t\tawait group?.closeEditor(editor, options);\n\t}\n\n\t//#endregion\n\n\t//#region closeEditors()\n\n\tasync closeEditors(editors: IEditorIdentifier[], options?: ICloseEditorOptions): Promise<void> {\n\t\tconst mapGroupToEditors = new Map<IEditorGroup, EditorInput[]>();\n\n\t\tfor (const { editor, groupId } of editors) {\n\t\t\tconst group = this.editorGroupService.getGroup(groupId);\n\t\t\tif (!group) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet editors = mapGroupToEditors.get(group);\n\t\t\tif (!editors) {\n\t\t\t\teditors = [];\n\t\t\t\tmapGroupToEditors.set(group, editors);\n\t\t\t}\n\n\t\t\teditors.push(editor);\n\t\t}\n\n\t\tfor (const [group, editors] of mapGroupToEditors) {\n\t\t\tawait group.closeEditors(editors, options);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region findEditors()\n\n\tfindEditors(resource: URI, options?: IFindEditorOptions): readonly IEditorIdentifier[];\n\tfindEditors(editor: IResourceEditorInputIdentifier, options?: IFindEditorOptions): readonly IEditorIdentifier[];\n\tfindEditors(resource: URI, options: IFindEditorOptions | undefined, group: IEditorGroup | GroupIdentifier): readonly EditorInput[];\n\tfindEditors(editor: IResourceEditorInputIdentifier, options: IFindEditorOptions | undefined, group: IEditorGroup | GroupIdentifier): EditorInput | undefined;\n\tfindEditors(arg1: URI | IResourceEditorInputIdentifier, options: IFindEditorOptions | undefined, arg2?: IEditorGroup | GroupIdentifier): readonly IEditorIdentifier[] | readonly EditorInput[] | EditorInput | undefined;\n\tfindEditors(arg1: URI | IResourceEditorInputIdentifier, options: IFindEditorOptions | undefined, arg2?: IEditorGroup | GroupIdentifier): readonly IEditorIdentifier[] | readonly EditorInput[] | EditorInput | undefined {\n\t\tconst resource = URI.isUri(arg1) ? arg1 : arg1.resource;\n\t\tconst typeId = URI.isUri(arg1) ? undefined : arg1.typeId;\n\n\t\t// Do a quick check for the resource via the editor observer\n\t\t// which is a very efficient way to find an editor by resource.\n\t\t// However, we can only do that unless we are asked to find an\n\t\t// editor on the secondary side of a side by side editor, because\n\t\t// the editor observer provides fast lookups only for primary\n\t\t// editors.\n\t\tif (options?.supportSideBySide !== SideBySideEditor.ANY && options?.supportSideBySide !== SideBySideEditor.SECONDARY) {\n\t\t\tif (!this.editorsObserver.hasEditors(resource)) {\n\t\t\t\tif (URI.isUri(arg1) || isUndefined(arg2)) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\t// Search only in specific group\n\t\tif (!isUndefined(arg2)) {\n\t\t\tconst targetGroup = typeof arg2 === 'number' ? this.editorGroupService.getGroup(arg2) : arg2;\n\n\t\t\t// Resource provided: result is an array\n\t\t\tif (URI.isUri(arg1)) {\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn targetGroup.findEditors(resource, options);\n\t\t\t}\n\n\t\t\t// Editor identifier provided, result is single\n\t\t\telse {\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst editors = targetGroup.findEditors(resource, options);\n\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\tif (editor.typeId === typeId) {\n\t\t\t\t\t\treturn editor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\t// Search across all groups in MRU order\n\t\telse {\n\t\t\tconst result: IEditorIdentifier[] = [];\n\n\t\t\tfor (const group of this.editorGroupService.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\t\tconst editors: EditorInput[] = [];\n\n\t\t\t\t// Resource provided: result is an array\n\t\t\t\tif (URI.isUri(arg1)) {\n\t\t\t\t\teditors.push(...this.findEditors(arg1, options, group));\n\t\t\t\t}\n\n\t\t\t\t// Editor identifier provided, result is single\n\t\t\t\telse {\n\t\t\t\t\tconst editor = this.findEditors(arg1, options, group);\n\t\t\t\t\tif (editor) {\n\t\t\t\t\t\teditors.push(editor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.push(...editors.map(editor => ({ editor, groupId: group.id })));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region replaceEditors()\n\n\tasync replaceEditors(replacements: IUntypedEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\tasync replaceEditors(replacements: IEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\tasync replaceEditors(replacements: Array<IEditorReplacement | IUntypedEditorReplacement>, group: IEditorGroup | GroupIdentifier): Promise<void> {\n\t\tconst targetGroup = typeof group === 'number' ? this.editorGroupService.getGroup(group) : group;\n\n\t\t// Convert all replacements to typed editors unless already\n\t\t// typed and handle overrides properly.\n\t\tconst typedReplacements: IEditorReplacement[] = [];\n\t\tfor (const replacement of replacements) {\n\t\t\tlet typedReplacement: IEditorReplacement | undefined = undefined;\n\n\t\t\t// Resolve override unless disabled\n\t\t\tif (!isEditorInput(replacement.replacement)) {\n\t\t\t\tconst resolvedEditor = await this.editorResolverService.resolveEditor(\n\t\t\t\t\treplacement.replacement,\n\t\t\t\t\ttargetGroup\n\t\t\t\t);\n\n\t\t\t\tif (resolvedEditor === ResolvedStatus.ABORT) {\n\t\t\t\t\tcontinue; // skip editor if override is aborted\n\t\t\t\t}\n\n\t\t\t\t// We resolved an editor to use\n\t\t\t\tif (isEditorInputWithOptionsAndGroup(resolvedEditor)) {\n\t\t\t\t\ttypedReplacement = {\n\t\t\t\t\t\teditor: replacement.editor,\n\t\t\t\t\t\treplacement: resolvedEditor.editor,\n\t\t\t\t\t\toptions: resolvedEditor.options,\n\t\t\t\t\t\tforceReplaceDirty: replacement.forceReplaceDirty\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override is disabled or did not apply: fallback to default\n\t\t\tif (!typedReplacement) {\n\t\t\t\ttypedReplacement = {\n\t\t\t\t\teditor: replacement.editor,\n\t\t\t\t\treplacement: isEditorReplacement(replacement) ? replacement.replacement : await this.textEditorService.resolveTextEditor(replacement.replacement),\n\t\t\t\t\toptions: isEditorReplacement(replacement) ? replacement.options : replacement.replacement.options,\n\t\t\t\t\tforceReplaceDirty: replacement.forceReplaceDirty\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ttypedReplacements.push(typedReplacement);\n\t\t}\n\n\t\treturn targetGroup?.replaceEditors(typedReplacements);\n\t}\n\n\t//#endregion\n\n\t//#region save/revert\n\n\tasync save(editors: IEditorIdentifier | IEditorIdentifier[], options?: ISaveEditorsOptions): Promise<ISaveEditorsResult> {\n\n\t\t// Convert to array\n\t\tif (!Array.isArray(editors)) {\n\t\t\teditors = [editors];\n\t\t}\n\n\t\t// Make sure to not save the same editor multiple times\n\t\t// by using the `matches()` method to find duplicates\n\t\tconst uniqueEditors = this.getUniqueEditors(editors);\n\n\t\t// Split editors up into a bucket that is saved in parallel\n\t\t// and sequentially. Unless \"Save As\", all non-untitled editors\n\t\t// can be saved in parallel to speed up the operation. Remaining\n\t\t// editors are potentially bringing up some UI and thus run\n\t\t// sequentially.\n\t\tconst editorsToSaveParallel: IEditorIdentifier[] = [];\n\t\tconst editorsToSaveSequentially: IEditorIdentifier[] = [];\n\t\tif (options?.saveAs) {\n\t\t\teditorsToSaveSequentially.push(...uniqueEditors);\n\t\t} else {\n\t\t\tfor (const { groupId, editor } of uniqueEditors) {\n\t\t\t\tif (editor.hasCapability(EditorInputCapabilities.Untitled)) {\n\t\t\t\t\teditorsToSaveSequentially.push({ groupId, editor });\n\t\t\t\t} else {\n\t\t\t\t\teditorsToSaveParallel.push({ groupId, editor });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Editors to save in parallel\n\t\tconst saveResults = await Promises.settled(editorsToSaveParallel.map(({ groupId, editor }) => {\n\n\t\t\t// Use save as a hint to pin the editor if used explicitly\n\t\t\tif (options?.reason === SaveReason.EXPLICIT) {\n\t\t\t\tthis.editorGroupService.getGroup(groupId)?.pinEditor(editor);\n\t\t\t}\n\n\t\t\t// Save\n\t\t\treturn editor.save(groupId, options);\n\t\t}));\n\n\t\t// Editors to save sequentially\n\t\tfor (const { groupId, editor } of editorsToSaveSequentially) {\n\t\t\tif (editor.isDisposed()) {\n\t\t\t\tcontinue; // might have been disposed from the save already\n\t\t\t}\n\n\t\t\t// Preserve view state by opening the editor first if the editor\n\t\t\t// is untitled or we \"Save As\". This also allows the user to review\n\t\t\t// the contents of the editor before making a decision.\n\t\t\tconst editorPane = await this.openEditor(editor, groupId);\n\t\t\tconst editorOptions: IEditorOptions = {\n\t\t\t\tpinned: true,\n\t\t\t\tviewState: editorPane?.getViewState()\n\t\t\t};\n\n\t\t\tconst result = options?.saveAs ? await editor.saveAs(groupId, options) : await editor.save(groupId, options);\n\t\t\tsaveResults.push(result);\n\n\t\t\tif (!result) {\n\t\t\t\tbreak; // failed or cancelled, abort\n\t\t\t}\n\n\t\t\t// Replace editor preserving viewstate (either across all groups or\n\t\t\t// only selected group) if the resulting editor is different from the\n\t\t\t// current one.\n\t\t\tif (!editor.matches(result)) {\n\t\t\t\tconst targetGroups = editor.hasCapability(EditorInputCapabilities.Untitled) ? this.editorGroupService.groups.map(group => group.id) /* untitled replaces across all groups */ : [groupId];\n\t\t\t\tfor (const targetGroup of targetGroups) {\n\t\t\t\t\tif (result instanceof EditorInput) {\n\t\t\t\t\t\tawait this.replaceEditors([{ editor, replacement: result, options: editorOptions }], targetGroup);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.replaceEditors([{ editor, replacement: { ...result, options: editorOptions } }], targetGroup);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsuccess: saveResults.every(result => !!result),\n\t\t\teditors: coalesce(saveResults)\n\t\t};\n\t}\n\n\tsaveAll(options?: ISaveAllEditorsOptions): Promise<ISaveEditorsResult> {\n\t\treturn this.save(this.getAllModifiedEditors(options), options);\n\t}\n\n\tasync revert(editors: IEditorIdentifier | IEditorIdentifier[], options?: IRevertOptions): Promise<boolean> {\n\n\t\t// Convert to array\n\t\tif (!Array.isArray(editors)) {\n\t\t\teditors = [editors];\n\t\t}\n\n\t\t// Make sure to not revert the same editor multiple times\n\t\t// by using the `matches()` method to find duplicates\n\t\tconst uniqueEditors = this.getUniqueEditors(editors);\n\n\t\tawait Promises.settled(uniqueEditors.map(async ({ groupId, editor }) => {\n\n\t\t\t// Use revert as a hint to pin the editor\n\t\t\tthis.editorGroupService.getGroup(groupId)?.pinEditor(editor);\n\n\t\t\treturn editor.revert(groupId, options);\n\t\t}));\n\n\t\treturn !uniqueEditors.some(({ editor }) => editor.isDirty());\n\t}\n\n\tasync revertAll(options?: IRevertAllEditorsOptions): Promise<boolean> {\n\t\treturn this.revert(this.getAllModifiedEditors(options), options);\n\t}\n\n\tprivate getAllModifiedEditors(options?: IBaseSaveRevertAllEditorOptions): IEditorIdentifier[] {\n\t\tconst editors: IEditorIdentifier[] = [];\n\n\t\tfor (const group of this.editorGroupService.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\tfor (const editor of group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\t\tif (!editor.isModified()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ((typeof options?.includeUntitled === 'boolean' || !options?.includeUntitled?.includeScratchpad)\n\t\t\t\t\t&& editor.hasCapability(EditorInputCapabilities.Scratchpad)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (!options?.includeUntitled && editor.hasCapability(EditorInputCapabilities.Untitled)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (options?.excludeSticky && group.isSticky(editor)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\teditors.push({ groupId: group.id, editor });\n\t\t\t}\n\t\t}\n\n\t\treturn editors;\n\t}\n\n\tprivate getUniqueEditors(editors: IEditorIdentifier[]): IEditorIdentifier[] {\n\t\tconst uniqueEditors: IEditorIdentifier[] = [];\n\t\tfor (const { editor, groupId } of editors) {\n\t\t\tif (uniqueEditors.some(uniqueEditor => uniqueEditor.editor.matches(editor))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tuniqueEditors.push({ editor, groupId });\n\t\t}\n\n\t\treturn uniqueEditors;\n\t}\n\n\t//#endregion\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\t// Dispose remaining watchers if any\n\t\tthis.activeOutOfWorkspaceWatchers.forEach(disposable => dispose(disposable));\n\t\tthis.activeOutOfWorkspaceWatchers.clear();\n\t}\n}\n\nregisterSingleton(IEditorService, EditorService, InstantiationType.Eager);\n"]}