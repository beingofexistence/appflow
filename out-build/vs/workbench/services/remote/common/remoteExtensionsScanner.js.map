{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/remote/common/remoteExtensionsScanner.ts"],"names":[],"mappings":"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","file":"remoteExtensionsScanner.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IRemoteExtensionsScannerService, RemoteExtensionsScannerChannelName } from 'vs/platform/remote/common/remoteExtensionsScanner';\nimport * as platform from 'vs/base/common/platform';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionDescription, IRelaxedExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { URI } from 'vs/base/common/uri';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { IRemoteUserDataProfilesService } from 'vs/workbench/services/userDataProfile/common/remoteUserDataProfiles';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IActiveLanguagePackService } from 'vs/workbench/services/localization/common/locale';\n\nclass RemoteExtensionsScannerService implements IRemoteExtensionsScannerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IRemoteUserDataProfilesService private readonly remoteUserDataProfilesService: IRemoteUserDataProfilesService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IActiveLanguagePackService private readonly activeLanguagePackService: IActiveLanguagePackService\n\t) { }\n\n\twhenExtensionsReady(): Promise<void> {\n\t\treturn this.withChannel(\n\t\t\tchannel => channel.call('whenExtensionsReady'),\n\t\t\tundefined\n\t\t);\n\t}\n\n\tasync scanExtensions(): Promise<IExtensionDescription[]> {\n\t\ttry {\n\t\t\tconst languagePack = await this.activeLanguagePackService.getExtensionIdProvidingCurrentLocale();\n\t\t\treturn await this.withChannel(\n\t\t\t\tasync (channel) => {\n\t\t\t\t\tconst profileLocation = this.userDataProfileService.currentProfile.isDefault ? undefined : (await this.remoteUserDataProfilesService.getRemoteProfile(this.userDataProfileService.currentProfile)).extensionsResource;\n\t\t\t\t\tconst scannedExtensions = await channel.call<IRelaxedExtensionDescription[]>('scanExtensions', [platform.language, profileLocation, this.environmentService.extensionDevelopmentLocationURI, languagePack]);\n\t\t\t\t\tscannedExtensions.forEach((extension) => {\n\t\t\t\t\t\textension.extensionLocation = URI.revive(extension.extensionLocation);\n\t\t\t\t\t});\n\t\t\t\t\treturn scannedExtensions;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tasync scanSingleExtension(extensionLocation: URI, isBuiltin: boolean): Promise<IExtensionDescription | null> {\n\t\ttry {\n\t\t\treturn await this.withChannel(\n\t\t\t\tasync (channel) => {\n\t\t\t\t\tconst extension = await channel.call<IRelaxedExtensionDescription>('scanSingleExtension', [extensionLocation, isBuiltin, platform.language]);\n\t\t\t\t\tif (extension !== null) {\n\t\t\t\t\t\textension.extensionLocation = URI.revive(extension.extensionLocation);\n\t\t\t\t\t\t// ImplicitActivationEvents.updateManifest(extension);\n\t\t\t\t\t}\n\t\t\t\t\treturn extension;\n\t\t\t\t},\n\t\t\t\tnull\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate withChannel<R>(callback: (channel: IChannel) => Promise<R>, fallback: R): Promise<R> {\n\t\tconst connection = this.remoteAgentService.getConnection();\n\t\tif (!connection) {\n\t\t\treturn Promise.resolve(fallback);\n\t\t}\n\t\treturn connection.withChannel(RemoteExtensionsScannerChannelName, (channel) => callback(channel));\n\t}\n}\n\nregisterSingleton(IRemoteExtensionsScannerService, RemoteExtensionsScannerService, InstantiationType.Delayed);\n"]}