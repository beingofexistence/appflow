{"version":3,"sources":["vs/workbench/services/remote/browser/remoteAgentService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAmBzF,IAAM,IAAI,GAAV,MAAM,IAAmB,SAAQ,iCAAI;QAE3C,YAC8B,0BAA+B,EACnC,sBAA2B,EACtB,kBAAuB,EACpC,cAAmB,EACH,8BAAmC,EACtD,WAAgB,EACjB,UAAe;YAE5B,KAAK,CAAC,0BAA0B,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,cAAc,EAAE,8BAA8B,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;QACxJ,CAAC;KACD,CAAA;IAbY,oBAAI;mBAAJ,IAAI;QAGd,WAAA,gCAAG,CAAA;QACH,WAAA,qBAAG,CAAA;QACH,WAAA,wBAAG,CAAA;QACH,WAAA,oBAAG,CAAA;QACH,WAAA,6BAAG,CAAA;QACH,WAAA,UAAG,CAAA;QACH,WAAA,SAAG,CAAA;OATO,IAAI,CAahB;IAED,IAAM,+CAA+C,GAArD,MAAM,+CAA+C;QAEpD,YACsB,kBAAuB,EACX,CAAmB,EACrB,CAAiB;YADf,MAAC,GAAD,CAAC,CAAkB;YACrB,MAAC,GAAD,CAAC,CAAgB;YAEhD,iFAAiF;YACjF,kBAAkB,CAAC,iBAAiB,EAAE;iBACpC,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE;gBACxB,IAAI,CAAC,6BAAG,CAA0B,SAAS,CAAC,GAAG,CAAC,EAAE;oBACjD,IAAI,CAAC,CAAC,CAAuB,GAAG,CAAC,CAAC;iBAClC;YACF,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,KAAK,CAAC,CAAC,CAAuB,GAAQ;YAC7C,MAAM,IAAI,CAAC,CAAC,CAAc,MAAM,CAAC;gBAChC,IAAI,EAAE,uBAAQ,CAAC,KAAK;gBACpB,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAiB,EAAE,IAAmE,CAAC;gBAC7G,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAuB,EAAE,IAA4D,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;gBACnI,OAAO,EAAE;oBACR;wBACC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAqD,CAAnD,CAAqD,EAAlD,EAAE,AAA0D,CAAC,OAAnD,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;wBACvE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAY,MAAM,EAAE;qBACrC;iBACD;aACD,CAAC,CAAC;QACJ,CAAC;KAED,CAAA;IA9BK,+CAA+C;QAGlD,WAAA,wBAAG,CAAA;QACH,WAAA,aAAG,CAAA;QACH,WAAA,UAAG,CAAA;OALA,+CAA+C,CA8BpD;IAED,MAAM,iBAAiB,GAAG,cAAG,CAAM,EAAE,CAAkC,0BAAU,CAAC,SAAS,CAAC,CAAC;IAC7F,iBAAiB,CAAC,6BAA6B,CAAC,+CAA+C,+BAAuB,CAAC","file":"remoteAgentService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IRemoteAuthorityResolverService, RemoteAuthorityResolverError } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { AbstractRemoteAgentService } from 'vs/workbench/services/remote/common/abstractRemoteAgentService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ISignService } from 'vs/platform/sign/common/sign';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Severity } from 'vs/platform/notification/common/notification';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions } from 'vs/workbench/common/contributions';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { IRemoteSocketFactoryService } from 'vs/platform/remote/common/remoteSocketFactoryService';\n\nexport class RemoteAgentService extends AbstractRemoteAgentService implements IRemoteAgentService {\n\n\tconstructor(\n\t\t@IRemoteSocketFactoryService remoteSocketFactoryService: IRemoteSocketFactoryService,\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService productService: IProductService,\n\t\t@IRemoteAuthorityResolverService remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ISignService signService: ISignService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(remoteSocketFactoryService, userDataProfileService, environmentService, productService, remoteAuthorityResolverService, signService, logService);\n\t}\n}\n\nclass RemoteConnectionFailureNotificationContribution implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IHostService private readonly _hostService: IHostService,\n\t) {\n\t\t// Let's cover the case where connecting to fetch the remote extension info fails\n\t\tremoteAgentService.getRawEnvironment()\n\t\t\t.then(undefined, (err) => {\n\t\t\t\tif (!RemoteAuthorityResolverError.isHandled(err)) {\n\t\t\t\t\tthis._presentConnectionError(err);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate async _presentConnectionError(err: any): Promise<void> {\n\t\tawait this._dialogService.prompt({\n\t\t\ttype: Severity.Error,\n\t\t\tmessage: nls.localize('connectionError', \"An unexpected error occurred that requires a reload of this page.\"),\n\t\t\tdetail: nls.localize('connectionErrorDetail', \"The workbench failed to connect to the server (Error: {0})\", err ? err.message : ''),\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize({ key: 'reload', comment: ['&& denotes a mnemonic'] }, \"&&Reload\"),\n\t\t\t\t\trun: () => this._hostService.reload()\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n}\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench);\nworkbenchRegistry.registerWorkbenchContribution(RemoteConnectionFailureNotificationContribution, LifecyclePhase.Ready);\n"]}