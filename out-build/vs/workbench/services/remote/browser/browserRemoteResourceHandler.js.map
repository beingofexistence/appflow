{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/remote/browser/browserRemoteResourceHandler.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IASzF,IAAM,IAAI,GAAV,MAAM,IAA4B,SAAQ,eAAG;QACnD,YACe,WAAgB,EACb,CAAiC;YAElD,KAAK,EAAE,CAAC;YAFS,MAAC,GAAD,CAAC,CAAgC;YAIlD,IAAI,CAAC,CAAC,CAAS,CAAC,CAAQ,mBAAmB,CAAC,KAAK,EAAC,OAAO,EAAC,EAAE;gBAC3D,IAAI,GAAkB,CAAC;gBACvB,IAAI;oBACH,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;iBACxD;gBAAC,MAAM;oBACP,OAAO,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC;iBACtD;gBAED,IAAI,OAAqB,CAAC;gBAC1B,IAAI;oBACH,OAAO,GAAG,MAAM,WAAW,CAAC,QAAQ,CAAC,SAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;iBAC1D;gBAAC,OAAO,CAAC,EAAE;oBACX,MAAM,GAAG,GAAG,YAAG,CAAM,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;oBAClD,IAAI,CAAC,YAAY,WAAG,IAAmB,CAAC,CAAC,mBAAmB,+CAAuC,EAAE;wBACpG,OAAO,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;qBACzC;yBAAM;wBACN,OAAO,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;qBACzC;iBACD;gBAED,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,IAAA,UAAG,EAAgB,GAAG,CAAC,IAAI,CAAC,CAAC;gBACtD,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAEM,sBAAsB;YAC5B,MAAM,OAAO,GAAG,SAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAClD,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;gBAC1B,IAAI,EAAE,IAAI,CAAC,CAAC,CAAQ,IAAI;gBACxB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;aAC1B,CAAC,CAAC;QACJ,CAAC;KACD,CAAA;IAvCY,oBAAI;mBAAJ,IAAI;QAEd,WAAA,WAAG,CAAA;OAFO,IAAI,CAuChB","file":"browserRemoteResourceHandler.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { getMediaOrTextMime } from 'vs/base/common/mime';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { FileOperationError, FileOperationResult, IFileContent, IFileService } from 'vs/platform/files/common/files';\nimport { IRemoteResourceProvider, IResourceUriProvider } from 'vs/workbench/browser/web.api';\n\nexport class BrowserRemoteResourceLoader extends Disposable {\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\tprivate readonly provider: IRemoteResourceProvider,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(provider.onDidReceiveRequest(async request => {\n\t\t\tlet uri: UriComponents;\n\t\t\ttry {\n\t\t\t\turi = JSON.parse(decodeURIComponent(request.uri.query));\n\t\t\t} catch {\n\t\t\t\treturn request.respondWith(404, new Uint8Array(), {});\n\t\t\t}\n\n\t\t\tlet content: IFileContent;\n\t\t\ttry {\n\t\t\t\tcontent = await fileService.readFile(URI.from(uri, true));\n\t\t\t} catch (e) {\n\t\t\t\tconst str = VSBuffer.fromString(e.message).buffer;\n\t\t\t\tif (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\t\treturn request.respondWith(404, str, {});\n\t\t\t\t} else {\n\t\t\t\t\treturn request.respondWith(500, str, {});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst mime = uri.path && getMediaOrTextMime(uri.path);\n\t\t\trequest.respondWith(200, content.value.buffer, mime ? { 'content-type': mime } : {});\n\t\t}));\n\t}\n\n\tpublic getResourceUriProvider(): IResourceUriProvider {\n\t\tconst baseUri = URI.parse(document.location.href);\n\t\treturn uri => baseUri.with({\n\t\t\tpath: this.provider.path,\n\t\t\tquery: JSON.stringify(uri),\n\t\t});\n\t}\n}\n"]}