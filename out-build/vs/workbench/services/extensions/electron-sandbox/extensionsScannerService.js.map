{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensions/electron-sandbox/extensionsScannerService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAezF,IAAM,IAAI,GAAV,MAAM,IAAyB,SAAQ,8BAAG;QAEhD,YAC0B,sBAA2B,EAC1B,uBAA4B,EACpB,+BAAoC,EACxD,WAAgB,EACjB,UAAe,EACD,kBAAuB,EACjC,cAAmB,EACf,kBAAuB,EACrB,oBAAyB;YAEhD,KAAK,CACJ,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,EAClD,SAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,EAC3C,kBAAkB,CAAC,QAAQ,EAC3B,sBAAsB,CAAC,cAAc,EACrC,uBAAuB,EAAE,+BAA+B,EAAE,WAAW,EAAE,UAAU,EAAE,kBAAkB,EAAE,cAAc,EAAE,kBAAkB,EAAE,oBAAoB,CAAC,CAAC;QACnK,CAAC;KAED,CAAA;IArBY,oBAAI;mBAAJ,IAAI;QAGd,WAAA,qBAAG,CAAA;QACH,WAAA,qBAAG,CAAA;QACH,WAAA,qCAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,SAAG,CAAA;QACH,WAAA,iBAAG,CAAA;QACH,WAAA,oBAAG,CAAA;QACH,WAAA,iBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;OAXO,IAAI,CAqBhB;IAED,IAAA,gBAAG,EAAe,8BAAG,EAAwB,IAAI,oCAAgD,CAAC","file":"extensionsScannerService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionsProfileScannerService } from 'vs/platform/extensionManagement/common/extensionsProfileScannerService';\nimport { IExtensionsScannerService, NativeExtensionsScannerService, } from 'vs/platform/extensionManagement/common/extensionsScannerService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\n\nexport class ExtensionsScannerService extends NativeExtensionsScannerService implements IExtensionsScannerService {\n\n\tconstructor(\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IExtensionsProfileScannerService extensionsProfileScannerService: IExtensionsProfileScannerService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IProductService productService: IProductService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(\n\t\t\tURI.file(environmentService.builtinExtensionsPath),\n\t\t\tURI.file(environmentService.extensionsPath),\n\t\t\tenvironmentService.userHome,\n\t\t\tuserDataProfileService.currentProfile,\n\t\t\tuserDataProfilesService, extensionsProfileScannerService, fileService, logService, environmentService, productService, uriIdentityService, instantiationService);\n\t}\n\n}\n\nregisterSingleton(IExtensionsScannerService, ExtensionsScannerService, InstantiationType.Delayed);\n"]}