{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensions/common/extensionManifestPropertiesService.ts"],"names":[],"mappings":"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","file":"extensionManifestPropertiesService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionManifest, ExtensionUntrustedWorkspaceSupportType, ExtensionVirtualWorkspaceSupportType, IExtensionIdentifier, ALL_EXTENSION_KINDS, ExtensionIdentifierMap } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionKind } from 'vs/platform/environment/common/environment';\nimport { ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ExtensionUntrustedWorkspaceSupport } from 'vs/base/common/product';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { WORKSPACE_TRUST_EXTENSION_SUPPORT } from 'vs/workbench/services/workspaces/common/workspaceTrust';\nimport { isBoolean } from 'vs/base/common/types';\nimport { IWorkspaceTrustEnablementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isWeb } from 'vs/base/common/platform';\n\nexport const IExtensionManifestPropertiesService = createDecorator<IExtensionManifestPropertiesService>('extensionManifestPropertiesService');\n\nexport interface IExtensionManifestPropertiesService {\n\treadonly _serviceBrand: undefined;\n\n\tprefersExecuteOnUI(manifest: IExtensionManifest): boolean;\n\tprefersExecuteOnWorkspace(manifest: IExtensionManifest): boolean;\n\tprefersExecuteOnWeb(manifest: IExtensionManifest): boolean;\n\n\tcanExecuteOnUI(manifest: IExtensionManifest): boolean;\n\tcanExecuteOnWorkspace(manifest: IExtensionManifest): boolean;\n\tcanExecuteOnWeb(manifest: IExtensionManifest): boolean;\n\n\tgetExtensionKind(manifest: IExtensionManifest): ExtensionKind[];\n\tgetUserConfiguredExtensionKind(extensionIdentifier: IExtensionIdentifier): ExtensionKind[] | undefined;\n\tgetExtensionUntrustedWorkspaceSupportType(manifest: IExtensionManifest): ExtensionUntrustedWorkspaceSupportType;\n\tgetExtensionVirtualWorkspaceSupportType(manifest: IExtensionManifest): ExtensionVirtualWorkspaceSupportType;\n}\n\nexport class ExtensionManifestPropertiesService extends Disposable implements IExtensionManifestPropertiesService {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate _extensionPointExtensionKindsMap: Map<string, ExtensionKind[]> | null = null;\n\tprivate _productExtensionKindsMap: ExtensionIdentifierMap<ExtensionKind[]> | null = null;\n\tprivate _configuredExtensionKindsMap: ExtensionIdentifierMap<ExtensionKind | ExtensionKind[]> | null = null;\n\n\tprivate _productVirtualWorkspaceSupportMap: ExtensionIdentifierMap<{ default?: boolean; override?: boolean }> | null = null;\n\tprivate _configuredVirtualWorkspaceSupportMap: ExtensionIdentifierMap<boolean> | null = null;\n\n\tprivate readonly _configuredExtensionWorkspaceTrustRequestMap: ExtensionIdentifierMap<{ supported: ExtensionUntrustedWorkspaceSupportType; version?: string }>;\n\tprivate readonly _productExtensionWorkspaceTrustRequestMap: Map<string, ExtensionUntrustedWorkspaceSupport>;\n\n\tconstructor(\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWorkspaceTrustEnablementService private readonly workspaceTrustEnablementService: IWorkspaceTrustEnablementService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\n\t\t// Workspace trust request type (settings.json)\n\t\tthis._configuredExtensionWorkspaceTrustRequestMap = new ExtensionIdentifierMap<{ supported: ExtensionUntrustedWorkspaceSupportType; version?: string }>();\n\t\tconst configuredExtensionWorkspaceTrustRequests = configurationService.inspect<{ [key: string]: { supported: ExtensionUntrustedWorkspaceSupportType; version?: string } }>(WORKSPACE_TRUST_EXTENSION_SUPPORT).userValue || {};\n\t\tfor (const id of Object.keys(configuredExtensionWorkspaceTrustRequests)) {\n\t\t\tthis._configuredExtensionWorkspaceTrustRequestMap.set(id, configuredExtensionWorkspaceTrustRequests[id]);\n\t\t}\n\n\t\t// Workspace trust request type (product.json)\n\t\tthis._productExtensionWorkspaceTrustRequestMap = new Map<string, ExtensionUntrustedWorkspaceSupport>();\n\t\tif (productService.extensionUntrustedWorkspaceSupport) {\n\t\t\tfor (const id of Object.keys(productService.extensionUntrustedWorkspaceSupport)) {\n\t\t\t\tthis._productExtensionWorkspaceTrustRequestMap.set(id, productService.extensionUntrustedWorkspaceSupport[id]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprefersExecuteOnUI(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn (extensionKind.length > 0 && extensionKind[0] === 'ui');\n\t}\n\n\tprefersExecuteOnWorkspace(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn (extensionKind.length > 0 && extensionKind[0] === 'workspace');\n\t}\n\n\tprefersExecuteOnWeb(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn (extensionKind.length > 0 && extensionKind[0] === 'web');\n\t}\n\n\tcanExecuteOnUI(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn extensionKind.some(kind => kind === 'ui');\n\t}\n\n\tcanExecuteOnWorkspace(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn extensionKind.some(kind => kind === 'workspace');\n\t}\n\n\tcanExecuteOnWeb(manifest: IExtensionManifest): boolean {\n\t\tconst extensionKind = this.getExtensionKind(manifest);\n\t\treturn extensionKind.some(kind => kind === 'web');\n\t}\n\n\tgetExtensionKind(manifest: IExtensionManifest): ExtensionKind[] {\n\t\tconst deducedExtensionKind = this.deduceExtensionKind(manifest);\n\t\tconst configuredExtensionKind = this.getConfiguredExtensionKind(manifest);\n\n\t\tif (configuredExtensionKind && configuredExtensionKind.length > 0) {\n\t\t\tconst result: ExtensionKind[] = [];\n\t\t\tfor (const extensionKind of configuredExtensionKind) {\n\t\t\t\tif (extensionKind !== '-web') {\n\t\t\t\t\tresult.push(extensionKind);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If opted out from web without specifying other extension kinds then default to ui, workspace\n\t\t\tif (configuredExtensionKind.includes('-web') && !result.length) {\n\t\t\t\tresult.push('ui');\n\t\t\t\tresult.push('workspace');\n\t\t\t}\n\n\t\t\t// Add web kind if not opted out from web and can run in web\n\t\t\tif (isWeb && !configuredExtensionKind.includes('-web') && !configuredExtensionKind.includes('web') && deducedExtensionKind.includes('web')) {\n\t\t\t\tresult.push('web');\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn deducedExtensionKind;\n\t}\n\n\tgetUserConfiguredExtensionKind(extensionIdentifier: IExtensionIdentifier): ExtensionKind[] | undefined {\n\t\tif (this._configuredExtensionKindsMap === null) {\n\t\t\tconst configuredExtensionKindsMap = new ExtensionIdentifierMap<ExtensionKind | ExtensionKind[]>();\n\t\t\tconst configuredExtensionKinds = this.configurationService.getValue<{ [key: string]: ExtensionKind | ExtensionKind[] }>('remote.extensionKind') || {};\n\t\t\tfor (const id of Object.keys(configuredExtensionKinds)) {\n\t\t\t\tconfiguredExtensionKindsMap.set(id, configuredExtensionKinds[id]);\n\t\t\t}\n\t\t\tthis._configuredExtensionKindsMap = configuredExtensionKindsMap;\n\t\t}\n\n\t\tconst userConfiguredExtensionKind = this._configuredExtensionKindsMap.get(extensionIdentifier.id);\n\t\treturn userConfiguredExtensionKind ? this.toArray(userConfiguredExtensionKind) : undefined;\n\t}\n\n\tgetExtensionUntrustedWorkspaceSupportType(manifest: IExtensionManifest): ExtensionUntrustedWorkspaceSupportType {\n\t\t// Workspace trust feature is disabled, or extension has no entry point\n\t\tif (!this.workspaceTrustEnablementService.isWorkspaceTrustEnabled() || !manifest.main) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get extension workspace trust requirements from settings.json\n\t\tconst configuredWorkspaceTrustRequest = this.getConfiguredExtensionWorkspaceTrustRequest(manifest);\n\n\t\t// Get extension workspace trust requirements from product.json\n\t\tconst productWorkspaceTrustRequest = this.getProductExtensionWorkspaceTrustRequest(manifest);\n\n\t\t// Use settings.json override value if it exists\n\t\tif (configuredWorkspaceTrustRequest !== undefined) {\n\t\t\treturn configuredWorkspaceTrustRequest;\n\t\t}\n\n\t\t// Use product.json override value if it exists\n\t\tif (productWorkspaceTrustRequest?.override !== undefined) {\n\t\t\treturn productWorkspaceTrustRequest.override;\n\t\t}\n\n\t\t// Use extension manifest value if it exists\n\t\tif (manifest.capabilities?.untrustedWorkspaces?.supported !== undefined) {\n\t\t\treturn manifest.capabilities.untrustedWorkspaces.supported;\n\t\t}\n\n\t\t// Use product.json default value if it exists\n\t\tif (productWorkspaceTrustRequest?.default !== undefined) {\n\t\t\treturn productWorkspaceTrustRequest.default;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tgetExtensionVirtualWorkspaceSupportType(manifest: IExtensionManifest): ExtensionVirtualWorkspaceSupportType {\n\t\t// check user configured\n\t\tconst userConfiguredVirtualWorkspaceSupport = this.getConfiguredVirtualWorkspaceSupport(manifest);\n\t\tif (userConfiguredVirtualWorkspaceSupport !== undefined) {\n\t\t\treturn userConfiguredVirtualWorkspaceSupport;\n\t\t}\n\n\t\tconst productConfiguredWorkspaceSchemes = this.getProductVirtualWorkspaceSupport(manifest);\n\n\t\t// check override from product\n\t\tif (productConfiguredWorkspaceSchemes?.override !== undefined) {\n\t\t\treturn productConfiguredWorkspaceSchemes.override;\n\t\t}\n\n\t\t// check the manifest\n\t\tconst virtualWorkspaces = manifest.capabilities?.virtualWorkspaces;\n\t\tif (isBoolean(virtualWorkspaces)) {\n\t\t\treturn virtualWorkspaces;\n\t\t} else if (virtualWorkspaces) {\n\t\t\tconst supported = virtualWorkspaces.supported;\n\t\t\tif (isBoolean(supported) || supported === 'limited') {\n\t\t\t\treturn supported;\n\t\t\t}\n\t\t}\n\n\t\t// check default from product\n\t\tif (productConfiguredWorkspaceSchemes?.default !== undefined) {\n\t\t\treturn productConfiguredWorkspaceSchemes.default;\n\t\t}\n\n\t\t// Default - supports virtual workspace\n\t\treturn true;\n\t}\n\n\tprivate deduceExtensionKind(manifest: IExtensionManifest): ExtensionKind[] {\n\t\t// Not an UI extension if it has main\n\t\tif (manifest.main) {\n\t\t\tif (manifest.browser) {\n\t\t\t\treturn isWeb ? ['workspace', 'web'] : ['workspace'];\n\t\t\t}\n\t\t\treturn ['workspace'];\n\t\t}\n\n\t\tif (manifest.browser) {\n\t\t\treturn ['web'];\n\t\t}\n\n\t\tlet result = [...ALL_EXTENSION_KINDS];\n\n\t\tif (isNonEmptyArray(manifest.extensionPack) || isNonEmptyArray(manifest.extensionDependencies)) {\n\t\t\t// Extension pack defaults to [workspace, web] in web and only [workspace] in desktop\n\t\t\tresult = isWeb ? ['workspace', 'web'] : ['workspace'];\n\t\t}\n\n\t\tif (manifest.contributes) {\n\t\t\tfor (const contribution of Object.keys(manifest.contributes)) {\n\t\t\t\tconst supportedExtensionKinds = this.getSupportedExtensionKindsForExtensionPoint(contribution);\n\t\t\t\tif (supportedExtensionKinds.length) {\n\t\t\t\t\tresult = result.filter(extensionKind => supportedExtensionKinds.includes(extensionKind));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!result.length) {\n\t\t\tthis.logService.warn('Cannot deduce extensionKind for extension', getGalleryExtensionId(manifest.publisher, manifest.name));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate getSupportedExtensionKindsForExtensionPoint(extensionPoint: string): ExtensionKind[] {\n\t\tif (this._extensionPointExtensionKindsMap === null) {\n\t\t\tconst extensionPointExtensionKindsMap = new Map<string, ExtensionKind[]>();\n\t\t\tExtensionsRegistry.getExtensionPoints().forEach(e => extensionPointExtensionKindsMap.set(e.name, e.defaultExtensionKind || [] /* supports all */));\n\t\t\tthis._extensionPointExtensionKindsMap = extensionPointExtensionKindsMap;\n\t\t}\n\n\t\tlet extensionPointExtensionKind = this._extensionPointExtensionKindsMap.get(extensionPoint);\n\t\tif (extensionPointExtensionKind) {\n\t\t\treturn extensionPointExtensionKind;\n\t\t}\n\n\t\textensionPointExtensionKind = this.productService.extensionPointExtensionKind ? this.productService.extensionPointExtensionKind[extensionPoint] : undefined;\n\t\tif (extensionPointExtensionKind) {\n\t\t\treturn extensionPointExtensionKind;\n\t\t}\n\n\t\t/* Unknown extension point */\n\t\treturn isWeb ? ['workspace', 'web'] : ['workspace'];\n\t}\n\n\tprivate getConfiguredExtensionKind(manifest: IExtensionManifest): (ExtensionKind | '-web')[] | null {\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\n\t\t// check in config\n\t\tlet result: ExtensionKind | ExtensionKind[] | undefined = this.getUserConfiguredExtensionKind(extensionIdentifier);\n\t\tif (typeof result !== 'undefined') {\n\t\t\treturn this.toArray(result);\n\t\t}\n\n\t\t// check product.json\n\t\tresult = this.getProductExtensionKind(manifest);\n\t\tif (typeof result !== 'undefined') {\n\t\t\treturn result;\n\t\t}\n\n\t\t// check the manifest itself\n\t\tresult = manifest.extensionKind;\n\t\tif (typeof result !== 'undefined') {\n\t\t\tresult = this.toArray(result);\n\t\t\treturn result.filter(r => ['ui', 'workspace'].includes(r));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate getProductExtensionKind(manifest: IExtensionManifest): ExtensionKind[] | undefined {\n\t\tif (this._productExtensionKindsMap === null) {\n\t\t\tconst productExtensionKindsMap = new ExtensionIdentifierMap<ExtensionKind[]>();\n\t\t\tif (this.productService.extensionKind) {\n\t\t\t\tfor (const id of Object.keys(this.productService.extensionKind)) {\n\t\t\t\t\tproductExtensionKindsMap.set(id, this.productService.extensionKind[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._productExtensionKindsMap = productExtensionKindsMap;\n\t\t}\n\n\t\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\treturn this._productExtensionKindsMap.get(extensionId);\n\t}\n\n\tprivate getProductVirtualWorkspaceSupport(manifest: IExtensionManifest): { default?: boolean; override?: boolean } | undefined {\n\t\tif (this._productVirtualWorkspaceSupportMap === null) {\n\t\t\tconst productWorkspaceSchemesMap = new ExtensionIdentifierMap<{ default?: boolean; override?: boolean }>();\n\t\t\tif (this.productService.extensionVirtualWorkspacesSupport) {\n\t\t\t\tfor (const id of Object.keys(this.productService.extensionVirtualWorkspacesSupport)) {\n\t\t\t\t\tproductWorkspaceSchemesMap.set(id, this.productService.extensionVirtualWorkspacesSupport[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._productVirtualWorkspaceSupportMap = productWorkspaceSchemesMap;\n\t\t}\n\n\t\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\treturn this._productVirtualWorkspaceSupportMap.get(extensionId);\n\t}\n\n\tprivate getConfiguredVirtualWorkspaceSupport(manifest: IExtensionManifest): boolean | undefined {\n\t\tif (this._configuredVirtualWorkspaceSupportMap === null) {\n\t\t\tconst configuredWorkspaceSchemesMap = new ExtensionIdentifierMap<boolean>();\n\t\t\tconst configuredWorkspaceSchemes = this.configurationService.getValue<{ [key: string]: boolean }>('extensions.supportVirtualWorkspaces') || {};\n\t\t\tfor (const id of Object.keys(configuredWorkspaceSchemes)) {\n\t\t\t\tif (configuredWorkspaceSchemes[id] !== undefined) {\n\t\t\t\t\tconfiguredWorkspaceSchemesMap.set(id, configuredWorkspaceSchemes[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._configuredVirtualWorkspaceSupportMap = configuredWorkspaceSchemesMap;\n\t\t}\n\n\t\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\treturn this._configuredVirtualWorkspaceSupportMap.get(extensionId);\n\t}\n\n\tprivate getConfiguredExtensionWorkspaceTrustRequest(manifest: IExtensionManifest): ExtensionUntrustedWorkspaceSupportType | undefined {\n\t\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\tconst extensionWorkspaceTrustRequest = this._configuredExtensionWorkspaceTrustRequestMap.get(extensionId);\n\n\t\tif (extensionWorkspaceTrustRequest && (extensionWorkspaceTrustRequest.version === undefined || extensionWorkspaceTrustRequest.version === manifest.version)) {\n\t\t\treturn extensionWorkspaceTrustRequest.supported;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getProductExtensionWorkspaceTrustRequest(manifest: IExtensionManifest): ExtensionUntrustedWorkspaceSupport | undefined {\n\t\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\t\treturn this._productExtensionWorkspaceTrustRequestMap.get(extensionId);\n\t}\n\n\tprivate toArray(extensionKind: ExtensionKind | ExtensionKind[]): ExtensionKind[] {\n\t\tif (Array.isArray(extensionKind)) {\n\t\t\treturn extensionKind;\n\t\t}\n\t\treturn extensionKind === 'ui' ? ['ui', 'workspace'] : [extensionKind];\n\t}\n}\n\nregisterSingleton(IExtensionManifestPropertiesService, ExtensionManifestPropertiesService, InstantiationType.Delayed);\n"]}