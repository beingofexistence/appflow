{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensions/common/extensionDevOptions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAYhG,SAAgB,IAAI,CAAqB,kBAAuB;QAC/D,6GAA6G;QAC7G,MAAM,kBAAkB,GAAG,kBAAkB,CAAC,sBAAsB,CAAC;QAErE,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,MAAM,UAAU,GAAG,kBAAkB,CAAC,+BAA+B,CAAC;QACtE,IAAI,UAAU,EAAE;YACf,KAAK,MAAM,CAAC,IAAI,UAAU,EAAE;gBAC3B,IAAI,CAAC,CAAC,MAAM,KAAK,iBAAO,CAAC,IAAI,EAAE;oBAC9B,OAAO,GAAG,KAAK,CAAC;iBAChB;aACD;SACD;QAED,MAAM,mBAAmB,GAAG,OAAO,IAAI,OAAO,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,KAAK,QAAQ,CAAC;QACtG,MAAM,sBAAsB,GAAG,OAAO,IAAI,CAAC,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,KAAK,CAAC;QACxF,MAAM,yBAAyB,GAAG,kBAAkB,IAAI,CAAC,CAAC,kBAAkB,CAAC,yBAAyB,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,OAAO,CAAC;QACzJ,OAAO;YACN,kBAAkB;YAClB,mBAAmB;YACnB,sBAAsB;YACtB,yBAAyB;SACzB,CAAC;IACH,CAAC;IAvBD,oBAuBC","file":"extensionDevOptions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport interface IExtensionDevOptions {\n\treadonly isExtensionDevHost: boolean;\n\treadonly isExtensionDevDebug: boolean;\n\treadonly isExtensionDevDebugBrk: boolean;\n\treadonly isExtensionDevTestFromCli: boolean;\n}\n\nexport function parseExtensionDevOptions(environmentService: IEnvironmentService): IExtensionDevOptions {\n\t// handle extension host lifecycle a bit special when we know we are developing an extension that runs inside\n\tconst isExtensionDevHost = environmentService.isExtensionDevelopment;\n\n\tlet debugOk = true;\n\tconst extDevLocs = environmentService.extensionDevelopmentLocationURI;\n\tif (extDevLocs) {\n\t\tfor (const x of extDevLocs) {\n\t\t\tif (x.scheme !== Schemas.file) {\n\t\t\t\tdebugOk = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst isExtensionDevDebug = debugOk && typeof environmentService.debugExtensionHost.port === 'number';\n\tconst isExtensionDevDebugBrk = debugOk && !!environmentService.debugExtensionHost.break;\n\tconst isExtensionDevTestFromCli = isExtensionDevHost && !!environmentService.extensionTestsLocationURI && !environmentService.debugExtensionHost.debugId;\n\treturn {\n\t\tisExtensionDevHost,\n\t\tisExtensionDevDebug,\n\t\tisExtensionDevDebugBrk,\n\t\tisExtensionDevTestFromCli\n\t};\n}\n"]}