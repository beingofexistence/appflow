{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensions/common/remoteConsoleUtil.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG,SAAgB,IAAI,CAAW,UAAe,EAAU,KAAwB,EAAE,QAAuB,IAAI;QAC5G,MAAM,IAAI,GAAG,IAAA,aAAG,EAAG,KAAK,CAAC,CAAC,IAAI,CAAC;QAC/B,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YACjC,OAAO;SACP;QAED,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACpB,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;SACxB;QAED,IAAI,KAAK,EAAE;YACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACvB,KAAK,GAAG,IAAI,KAAK,GAAG,CAAC;aACrB;YACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACtB,KAAK,GAAG,GAAG,KAAK,GAAG,CAAC;aACpB;YACD,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC;SAC5B;QAED,QAAQ,KAAK,CAAC,QAAQ,EAAE;YACvB,KAAK,KAAK,CAAC;YACX,KAAK,MAAM;gBACV,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;gBACnC,MAAM;YACP,KAAK,MAAM;gBACV,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;gBACnC,MAAM;YACP,KAAK,OAAO;gBACX,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;gBACpC,MAAM;SACP;IACF,CAAC;IAjCD,oBAiCC;IAED,SAAgB,IAAI,CAAkB,UAAe,EAAU,KAAwB,EAAE,KAAa;QACrG,MAAM,IAAI,GAAG,IAAA,aAAG,EAAG,KAAK,CAAC,CAAC,IAAI,CAAC;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,KAAK,CAAC,QAAQ,KAAK,OAAO,EAAE;YAC/D,OAAO;SACP;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACvB,KAAK,GAAG,IAAI,KAAK,GAAG,CAAC;SACrB;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACtB,KAAK,GAAG,GAAG,KAAK,GAAG,CAAC;SACpB;QAED,UAAU,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;IAC7C,CAAC;IAfD,oBAeC","file":"remoteConsoleUtil.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRemoteConsoleLog, parse } from 'vs/base/common/console';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport function logRemoteEntry(logService: ILogService, entry: IRemoteConsoleLog, label: string | null = null): void {\n\tconst args = parse(entry).args;\n\tlet firstArg = args.shift();\n\tif (typeof firstArg !== 'string') {\n\t\treturn;\n\t}\n\n\tif (!entry.severity) {\n\t\tentry.severity = 'info';\n\t}\n\n\tif (label) {\n\t\tif (!/^\\[/.test(label)) {\n\t\t\tlabel = `[${label}]`;\n\t\t}\n\t\tif (!/ $/.test(label)) {\n\t\t\tlabel = `${label} `;\n\t\t}\n\t\tfirstArg = label + firstArg;\n\t}\n\n\tswitch (entry.severity) {\n\t\tcase 'log':\n\t\tcase 'info':\n\t\t\tlogService.info(firstArg, ...args);\n\t\t\tbreak;\n\t\tcase 'warn':\n\t\t\tlogService.warn(firstArg, ...args);\n\t\t\tbreak;\n\t\tcase 'error':\n\t\t\tlogService.error(firstArg, ...args);\n\t\t\tbreak;\n\t}\n}\n\nexport function logRemoteEntryIfError(logService: ILogService, entry: IRemoteConsoleLog, label: string): void {\n\tconst args = parse(entry).args;\n\tconst firstArg = args.shift();\n\tif (typeof firstArg !== 'string' || entry.severity !== 'error') {\n\t\treturn;\n\t}\n\n\tif (!/^\\[/.test(label)) {\n\t\tlabel = `[${label}]`;\n\t}\n\tif (!/ $/.test(label)) {\n\t\tlabel = `${label} `;\n\t}\n\n\tlogService.error(label + firstArg, ...args);\n}\n"]}