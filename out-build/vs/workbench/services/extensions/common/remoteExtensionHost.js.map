{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensions/common/remoteExtensionHost.ts"],"names":[],"mappings":"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","file":"remoteExtensionHost.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/common/ipc';\nimport { PersistentProtocol } from 'vs/base/parts/ipc/common/ipc.net';\nimport { IExtensionHostDebugService } from 'vs/platform/debug/common/extensionHostDebug';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { ILogService, ILoggerService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IConnectionOptions, IRemoteExtensionHostStartParams, connectRemoteAgentExtensionHost } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { IRemoteAuthorityResolverService, IRemoteConnectionData } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { IRemoteSocketFactoryService } from 'vs/platform/remote/common/remoteSocketFactoryService';\nimport { ISignService } from 'vs/platform/sign/common/sign';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isLoggingOnly } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { parseExtensionDevOptions } from 'vs/workbench/services/extensions/common/extensionDevOptions';\nimport { IExtensionHostInitData, MessageType, UIKind, createMessageOfType, isMessageOfType } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\nimport { RemoteRunningLocation } from 'vs/workbench/services/extensions/common/extensionRunningLocation';\nimport { ExtensionHostExtensions, ExtensionHostStartup, IExtensionHost } from 'vs/workbench/services/extensions/common/extensions';\n\nexport interface IRemoteExtensionHostInitData {\n\treadonly connectionData: IRemoteConnectionData | null;\n\treadonly pid: number;\n\treadonly appRoot: URI;\n\treadonly extensionHostLogsPath: URI;\n\treadonly globalStorageHome: URI;\n\treadonly workspaceStorageHome: URI;\n\treadonly extensions: ExtensionHostExtensions;\n}\n\nexport interface IRemoteExtensionHostDataProvider {\n\treadonly remoteAuthority: string;\n\tgetInitData(): Promise<IRemoteExtensionHostInitData>;\n}\n\nexport class RemoteExtensionHost extends Disposable implements IExtensionHost {\n\n\tpublic readonly remoteAuthority: string;\n\tpublic readonly startup = ExtensionHostStartup.EagerAutoStart;\n\tpublic extensions: ExtensionHostExtensions | null = null;\n\n\tprivate _onExit: Emitter<[number, string | null]> = this._register(new Emitter<[number, string | null]>());\n\tpublic readonly onExit: Event<[number, string | null]> = this._onExit.event;\n\n\tprivate _protocol: PersistentProtocol | null;\n\tprivate _hasLostConnection: boolean;\n\tprivate _terminating: boolean;\n\tprivate readonly _isExtensionDevHost: boolean;\n\n\tconstructor(\n\t\tpublic readonly runningLocation: RemoteRunningLocation,\n\t\tprivate readonly _initDataProvider: IRemoteExtensionHostDataProvider,\n\t\t@IRemoteSocketFactoryService private readonly remoteSocketFactoryService: IRemoteSocketFactoryService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t\t@IWorkbenchEnvironmentService private readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ILoggerService protected readonly _loggerService: ILoggerService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IRemoteAuthorityResolverService private readonly remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IExtensionHostDebugService private readonly _extensionHostDebugService: IExtensionHostDebugService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@ISignService private readonly _signService: ISignService\n\t) {\n\t\tsuper();\n\t\tthis.remoteAuthority = this._initDataProvider.remoteAuthority;\n\t\tthis._protocol = null;\n\t\tthis._hasLostConnection = false;\n\t\tthis._terminating = false;\n\n\t\tconst devOpts = parseExtensionDevOptions(this._environmentService);\n\t\tthis._isExtensionDevHost = devOpts.isExtensionDevHost;\n\t}\n\n\tpublic start(): Promise<IMessagePassingProtocol> {\n\t\tconst options: IConnectionOptions = {\n\t\t\tcommit: this._productService.commit,\n\t\t\tquality: this._productService.quality,\n\t\t\taddressProvider: {\n\t\t\t\tgetAddress: async () => {\n\t\t\t\t\tconst { authority } = await this.remoteAuthorityResolverService.resolveAuthority(this._initDataProvider.remoteAuthority);\n\t\t\t\t\treturn { connectTo: authority.connectTo, connectionToken: authority.connectionToken };\n\t\t\t\t}\n\t\t\t},\n\t\t\tremoteSocketFactoryService: this.remoteSocketFactoryService,\n\t\t\tsignService: this._signService,\n\t\t\tlogService: this._logService,\n\t\t\tipcLogger: null\n\t\t};\n\t\treturn this.remoteAuthorityResolverService.resolveAuthority(this._initDataProvider.remoteAuthority).then((resolverResult) => {\n\n\t\t\tconst startParams: IRemoteExtensionHostStartParams = {\n\t\t\t\tlanguage: platform.language,\n\t\t\t\tdebugId: this._environmentService.debugExtensionHost.debugId,\n\t\t\t\tbreak: this._environmentService.debugExtensionHost.break,\n\t\t\t\tport: this._environmentService.debugExtensionHost.port,\n\t\t\t\tenv: { ...this._environmentService.debugExtensionHost.env, ...resolverResult.options?.extensionHostEnv },\n\t\t\t};\n\n\t\t\tconst extDevLocs = this._environmentService.extensionDevelopmentLocationURI;\n\n\t\t\tlet debugOk = true;\n\t\t\tif (extDevLocs && extDevLocs.length > 0) {\n\t\t\t\t// TODO@AW: handles only first path in array\n\t\t\t\tif (extDevLocs[0].scheme === Schemas.file) {\n\t\t\t\t\tdebugOk = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!debugOk) {\n\t\t\t\tstartParams.break = false;\n\t\t\t}\n\n\t\t\treturn connectRemoteAgentExtensionHost(options, startParams).then(result => {\n\t\t\t\tthis._register(result);\n\t\t\t\tconst { protocol, debugPort, reconnectionToken } = result;\n\t\t\t\tconst isExtensionDevelopmentDebug = typeof debugPort === 'number';\n\t\t\t\tif (debugOk && this._environmentService.isExtensionDevelopment && this._environmentService.debugExtensionHost.debugId && debugPort) {\n\t\t\t\t\tthis._extensionHostDebugService.attachSession(this._environmentService.debugExtensionHost.debugId, debugPort, this._initDataProvider.remoteAuthority);\n\t\t\t\t}\n\n\t\t\t\tprotocol.onDidDispose(() => {\n\t\t\t\t\tthis._onExtHostConnectionLost(reconnectionToken);\n\t\t\t\t});\n\n\t\t\t\tprotocol.onSocketClose(() => {\n\t\t\t\t\tif (this._isExtensionDevHost) {\n\t\t\t\t\t\tthis._onExtHostConnectionLost(reconnectionToken);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// 1) wait for the incoming `ready` event and send the initialization data.\n\t\t\t\t// 2) wait for the incoming `initialized` event.\n\t\t\t\treturn new Promise<IMessagePassingProtocol>((resolve, reject) => {\n\n\t\t\t\t\tconst handle = setTimeout(() => {\n\t\t\t\t\t\treject('The remote extension host took longer than 60s to send its ready message.');\n\t\t\t\t\t}, 60 * 1000);\n\n\t\t\t\t\tconst disposable = protocol.onMessage(msg => {\n\n\t\t\t\t\t\tif (isMessageOfType(msg, MessageType.Ready)) {\n\t\t\t\t\t\t\t// 1) Extension Host is ready to receive messages, initialize it\n\t\t\t\t\t\t\tthis._createExtHostInitData(isExtensionDevelopmentDebug).then(data => {\n\t\t\t\t\t\t\t\tprotocol.send(VSBuffer.fromString(JSON.stringify(data)));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isMessageOfType(msg, MessageType.Initialized)) {\n\t\t\t\t\t\t\t// 2) Extension Host is initialized\n\n\t\t\t\t\t\t\tclearTimeout(handle);\n\n\t\t\t\t\t\t\t// stop listening for messages here\n\t\t\t\t\t\t\tdisposable.dispose();\n\n\t\t\t\t\t\t\t// release this promise\n\t\t\t\t\t\t\tthis._protocol = protocol;\n\t\t\t\t\t\t\tresolve(protocol);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconsole.error(`received unexpected message during handshake phase from the extension host: `, msg);\n\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _onExtHostConnectionLost(reconnectionToken: string): void {\n\t\tif (this._hasLostConnection) {\n\t\t\t// avoid re-entering this method\n\t\t\treturn;\n\t\t}\n\t\tthis._hasLostConnection = true;\n\n\t\tif (this._isExtensionDevHost && this._environmentService.debugExtensionHost.debugId) {\n\t\t\tthis._extensionHostDebugService.close(this._environmentService.debugExtensionHost.debugId);\n\t\t}\n\n\t\tif (this._terminating) {\n\t\t\t// Expected termination path (we asked the process to terminate)\n\t\t\treturn;\n\t\t}\n\n\t\tthis._onExit.fire([0, reconnectionToken]);\n\t}\n\n\tprivate async _createExtHostInitData(isExtensionDevelopmentDebug: boolean): Promise<IExtensionHostInitData> {\n\t\tconst remoteInitData = await this._initDataProvider.getInitData();\n\t\tthis.extensions = remoteInitData.extensions;\n\t\tconst workspace = this._contextService.getWorkspace();\n\t\treturn {\n\t\t\tcommit: this._productService.commit,\n\t\t\tversion: this._productService.version,\n\t\t\tquality: this._productService.quality,\n\t\t\tparentPid: remoteInitData.pid,\n\t\t\tenvironment: {\n\t\t\t\tisExtensionDevelopmentDebug,\n\t\t\t\tappRoot: remoteInitData.appRoot,\n\t\t\t\tappName: this._productService.nameLong,\n\t\t\t\tappHost: this._productService.embedderIdentifier || 'desktop',\n\t\t\t\tappUriScheme: this._productService.urlProtocol,\n\t\t\t\textensionTelemetryLogResource: this._environmentService.extHostTelemetryLogFile,\n\t\t\t\tisExtensionTelemetryLoggingOnly: isLoggingOnly(this._productService, this._environmentService),\n\t\t\t\tappLanguage: platform.language,\n\t\t\t\textensionDevelopmentLocationURI: this._environmentService.extensionDevelopmentLocationURI,\n\t\t\t\textensionTestsLocationURI: this._environmentService.extensionTestsLocationURI,\n\t\t\t\tglobalStorageHome: remoteInitData.globalStorageHome,\n\t\t\t\tworkspaceStorageHome: remoteInitData.workspaceStorageHome,\n\t\t\t\textensionLogLevel: this._environmentService.extensionLogLevel\n\t\t\t},\n\t\t\tworkspace: this._contextService.getWorkbenchState() === WorkbenchState.EMPTY ? null : {\n\t\t\t\tconfiguration: workspace.configuration,\n\t\t\t\tid: workspace.id,\n\t\t\t\tname: this._labelService.getWorkspaceLabel(workspace),\n\t\t\t\ttransient: workspace.transient\n\t\t\t},\n\t\t\tremote: {\n\t\t\t\tisRemote: true,\n\t\t\t\tauthority: this._initDataProvider.remoteAuthority,\n\t\t\t\tconnectionData: remoteInitData.connectionData\n\t\t\t},\n\t\t\tconsoleForward: {\n\t\t\t\tincludeStack: false,\n\t\t\t\tlogNative: Boolean(this._environmentService.debugExtensionHost.debugId)\n\t\t\t},\n\t\t\textensions: this.extensions.toSnapshot(),\n\t\t\ttelemetryInfo: {\n\t\t\t\tsessionId: this._telemetryService.sessionId,\n\t\t\t\tmachineId: this._telemetryService.machineId,\n\t\t\t\tfirstSessionDate: this._telemetryService.firstSessionDate,\n\t\t\t\tmsftInternal: this._telemetryService.msftInternal\n\t\t\t},\n\t\t\tlogLevel: this._logService.getLevel(),\n\t\t\tloggers: [...this._loggerService.getRegisteredLoggers()],\n\t\t\tlogsLocation: remoteInitData.extensionHostLogsPath,\n\t\t\tautoStart: (this.startup === ExtensionHostStartup.EagerAutoStart),\n\t\t\tuiKind: platform.isWeb ? UIKind.Web : UIKind.Desktop\n\t\t};\n\t}\n\n\tgetInspectPort(): number | undefined {\n\t\treturn undefined;\n\t}\n\n\tenableInspectPort(): Promise<boolean> {\n\t\treturn Promise.resolve(false);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis._terminating = true;\n\n\t\tif (this._protocol) {\n\t\t\t// Send the extension host a request to terminate itself\n\t\t\t// (graceful termination)\n\t\t\t// setTimeout(() => {\n\t\t\t// console.log(`SENDING TERMINATE TO REMOTE EXT HOST!`);\n\t\t\tconst socket = this._protocol.getSocket();\n\t\t\tthis._protocol.send(createMessageOfType(MessageType.Terminate));\n\t\t\tthis._protocol.sendDisconnect();\n\t\t\tthis._protocol.dispose();\n\t\t\t// this._protocol.drain();\n\t\t\tsocket.end();\n\t\t\tthis._protocol = null;\n\t\t\t// }, 1000);\n\t\t}\n\t}\n}\n\n"]}