{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensions/common/rpcProtocol.ts"],"names":[],"mappings":"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","file":"rpcProtocol.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport { IURITransformer, transformIncomingURIs } from 'vs/base/common/uriIpc';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/common/ipc';\nimport { CanceledLazyPromise, LazyPromise } from 'vs/workbench/services/extensions/common/lazyPromise';\nimport { getStringIdentifierForProxy, IRPCProtocol, Proxied, ProxyIdentifier, SerializableObjectWithBuffers } from 'vs/workbench/services/extensions/common/proxyIdentifier';\n\nexport interface JSONStringifyReplacer {\n\t(key: string, value: any): any;\n}\n\nfunction safeStringify(obj: any, replacer: JSONStringifyReplacer | null): string {\n\ttry {\n\t\treturn JSON.stringify(obj, <(key: string, value: any) => any>replacer);\n\t} catch (err) {\n\t\treturn 'null';\n\t}\n}\n\nconst refSymbolName = '$$ref$$';\nconst undefinedRef = { [refSymbolName]: -1 } as const;\n\nclass StringifiedJsonWithBufferRefs {\n\tconstructor(\n\t\tpublic readonly jsonString: string,\n\t\tpublic readonly referencedBuffers: readonly VSBuffer[],\n\t) { }\n}\n\nexport function stringifyJsonWithBufferRefs<T>(obj: T, replacer: JSONStringifyReplacer | null = null, useSafeStringify = false): StringifiedJsonWithBufferRefs {\n\tconst foundBuffers: VSBuffer[] = [];\n\tconst serialized = (useSafeStringify ? safeStringify : JSON.stringify)(obj, (key, value) => {\n\t\tif (typeof value === 'undefined') {\n\t\t\treturn undefinedRef; // JSON.stringify normally converts 'undefined' to 'null'\n\t\t} else if (typeof value === 'object') {\n\t\t\tif (value instanceof VSBuffer) {\n\t\t\t\tconst bufferIndex = foundBuffers.push(value) - 1;\n\t\t\t\treturn { [refSymbolName]: bufferIndex };\n\t\t\t}\n\t\t\tif (replacer) {\n\t\t\t\treturn replacer(key, value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n\treturn {\n\t\tjsonString: serialized,\n\t\treferencedBuffers: foundBuffers\n\t};\n}\n\nexport function parseJsonAndRestoreBufferRefs(jsonString: string, buffers: readonly VSBuffer[], uriTransformer: IURITransformer | null): any {\n\treturn JSON.parse(jsonString, (_key, value) => {\n\t\tif (value) {\n\t\t\tconst ref = value[refSymbolName];\n\t\t\tif (typeof ref === 'number') {\n\t\t\t\treturn buffers[ref];\n\t\t\t}\n\n\t\t\tif (uriTransformer && (<MarshalledObject>value).$mid === MarshalledId.Uri) {\n\t\t\t\treturn uriTransformer.transformIncoming(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\n\nfunction stringify(obj: any, replacer: JSONStringifyReplacer | null): string {\n\treturn JSON.stringify(obj, <(key: string, value: any) => any>replacer);\n}\n\nfunction createURIReplacer(transformer: IURITransformer | null): JSONStringifyReplacer | null {\n\tif (!transformer) {\n\t\treturn null;\n\t}\n\treturn (key: string, value: any): any => {\n\t\tif (value && value.$mid === MarshalledId.Uri) {\n\t\t\treturn transformer.transformOutgoing(value);\n\t\t}\n\t\treturn value;\n\t};\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport const enum ResponsiveState {\n\tResponsive = 0,\n\tUnresponsive = 1\n}\n\nexport interface IRPCProtocolLogger {\n\tlogIncoming(msgLength: number, req: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, req: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nconst noop = () => { };\n\nconst _RPCProtocolSymbol = Symbol.for('rpcProtocol');\nconst _RPCProxySymbol = Symbol.for('rpcProxy');\n\nexport class RPCProtocol extends Disposable implements IRPCProtocol {\n\n\t[_RPCProtocolSymbol] = true;\n\n\tprivate static readonly UNRESPONSIVE_TIME = 3 * 1000; // 3s\n\n\tprivate readonly _onDidChangeResponsiveState: Emitter<ResponsiveState> = this._register(new Emitter<ResponsiveState>());\n\tpublic readonly onDidChangeResponsiveState: Event<ResponsiveState> = this._onDidChangeResponsiveState.event;\n\n\tprivate readonly _protocol: IMessagePassingProtocol;\n\tprivate readonly _logger: IRPCProtocolLogger | null;\n\tprivate readonly _uriTransformer: IURITransformer | null;\n\tprivate readonly _uriReplacer: JSONStringifyReplacer | null;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _locals: any[];\n\tprivate readonly _proxies: any[];\n\tprivate _lastMessageId: number;\n\tprivate readonly _cancelInvokedHandlers: { [req: string]: () => void };\n\tprivate readonly _pendingRPCReplies: { [msgId: string]: PendingRPCReply };\n\tprivate _responsiveState: ResponsiveState;\n\tprivate _unacknowledgedCount: number;\n\tprivate _unresponsiveTime: number;\n\tprivate _asyncCheckUresponsive: RunOnceScheduler;\n\n\tconstructor(protocol: IMessagePassingProtocol, logger: IRPCProtocolLogger | null = null, transformer: IURITransformer | null = null) {\n\t\tsuper();\n\t\tthis._protocol = protocol;\n\t\tthis._logger = logger;\n\t\tthis._uriTransformer = transformer;\n\t\tthis._uriReplacer = createURIReplacer(this._uriTransformer);\n\t\tthis._isDisposed = false;\n\t\tthis._locals = [];\n\t\tthis._proxies = [];\n\t\tfor (let i = 0, len = ProxyIdentifier.count; i < len; i++) {\n\t\t\tthis._locals[i] = null;\n\t\t\tthis._proxies[i] = null;\n\t\t}\n\t\tthis._lastMessageId = 0;\n\t\tthis._cancelInvokedHandlers = Object.create(null);\n\t\tthis._pendingRPCReplies = {};\n\t\tthis._responsiveState = ResponsiveState.Responsive;\n\t\tthis._unacknowledgedCount = 0;\n\t\tthis._unresponsiveTime = 0;\n\t\tthis._asyncCheckUresponsive = this._register(new RunOnceScheduler(() => this._checkUnresponsive(), 1000));\n\t\tthis._protocol.onMessage((msg) => this._receiveOneMessage(msg));\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\n\t\t// Release all outstanding promises with a canceled error\n\t\tObject.keys(this._pendingRPCReplies).forEach((msgId) => {\n\t\t\tconst pending = this._pendingRPCReplies[msgId];\n\t\t\tdelete this._pendingRPCReplies[msgId];\n\t\t\tpending.resolveErr(errors.canceled());\n\t\t});\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tif (typeof this._protocol.drain === 'function') {\n\t\t\treturn this._protocol.drain();\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tprivate _onWillSendRequest(req: number): void {\n\t\tif (this._unacknowledgedCount === 0) {\n\t\t\t// Since this is the first request we are sending in a while,\n\t\t\t// mark this moment as the start for the countdown to unresponsive time\n\t\t\tthis._unresponsiveTime = Date.now() + RPCProtocol.UNRESPONSIVE_TIME;\n\t\t}\n\t\tthis._unacknowledgedCount++;\n\t\tif (!this._asyncCheckUresponsive.isScheduled()) {\n\t\t\tthis._asyncCheckUresponsive.schedule();\n\t\t}\n\t}\n\n\tprivate _onDidReceiveAcknowledge(req: number): void {\n\t\t// The next possible unresponsive time is now + delta.\n\t\tthis._unresponsiveTime = Date.now() + RPCProtocol.UNRESPONSIVE_TIME;\n\t\tthis._unacknowledgedCount--;\n\t\tif (this._unacknowledgedCount === 0) {\n\t\t\t// No more need to check for unresponsive\n\t\t\tthis._asyncCheckUresponsive.cancel();\n\t\t}\n\t\t// The ext host is responsive!\n\t\tthis._setResponsiveState(ResponsiveState.Responsive);\n\t}\n\n\tprivate _checkUnresponsive(): void {\n\t\tif (this._unacknowledgedCount === 0) {\n\t\t\t// Not waiting for anything => cannot say if it is responsive or not\n\t\t\treturn;\n\t\t}\n\n\t\tif (Date.now() > this._unresponsiveTime) {\n\t\t\t// Unresponsive!!\n\t\t\tthis._setResponsiveState(ResponsiveState.Unresponsive);\n\t\t} else {\n\t\t\t// Not (yet) unresponsive, be sure to check again soon\n\t\t\tthis._asyncCheckUresponsive.schedule();\n\t\t}\n\t}\n\n\tprivate _setResponsiveState(newResponsiveState: ResponsiveState): void {\n\t\tif (this._responsiveState === newResponsiveState) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis._responsiveState = newResponsiveState;\n\t\tthis._onDidChangeResponsiveState.fire(this._responsiveState);\n\t}\n\n\tpublic get responsiveState(): ResponsiveState {\n\t\treturn this._responsiveState;\n\t}\n\n\tpublic transformIncomingURIs<T>(obj: T): T {\n\t\tif (!this._uriTransformer) {\n\t\t\treturn obj;\n\t\t}\n\t\treturn transformIncomingURIs(obj, this._uriTransformer);\n\t}\n\n\tpublic getProxy<T>(identifier: ProxyIdentifier<T>): Proxied<T> {\n\t\tconst { nid: rpcId, sid } = identifier;\n\t\tif (!this._proxies[rpcId]) {\n\t\t\tthis._proxies[rpcId] = this._createProxy(rpcId, sid);\n\t\t}\n\t\treturn this._proxies[rpcId];\n\t}\n\n\tprivate _createProxy<T>(rpcId: number, debugName: string): T {\n\t\tconst handler = {\n\t\t\tget: (target: any, name: PropertyKey) => {\n\t\t\t\tif (typeof name === 'string' && !target[name] && name.charCodeAt(0) === CharCode.DollarSign) {\n\t\t\t\t\ttarget[name] = (...myArgs: any[]) => {\n\t\t\t\t\t\treturn this._remoteCall(rpcId, name, myArgs);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (name === _RPCProxySymbol) {\n\t\t\t\t\treturn debugName;\n\t\t\t\t}\n\t\t\t\treturn target[name];\n\t\t\t}\n\t\t};\n\t\treturn new Proxy(Object.create(null), handler);\n\t}\n\n\tpublic set<T, R extends T>(identifier: ProxyIdentifier<T>, value: R): R {\n\t\tthis._locals[identifier.nid] = value;\n\t\treturn value;\n\t}\n\n\tpublic assertRegistered(identifiers: ProxyIdentifier<any>[]): void {\n\t\tfor (let i = 0, len = identifiers.length; i < len; i++) {\n\t\t\tconst identifier = identifiers[i];\n\t\t\tif (!this._locals[identifier.nid]) {\n\t\t\t\tthrow new Error(`Missing proxy instance ${identifier.sid}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _receiveOneMessage(rawmsg: VSBuffer): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst msgLength = rawmsg.byteLength;\n\t\tconst buff = MessageBuffer.read(rawmsg, 0);\n\t\tconst messageType = <MessageType>buff.readUInt8();\n\t\tconst req = buff.readUInt32();\n\n\t\tswitch (messageType) {\n\t\t\tcase MessageType.RequestJSONArgs:\n\t\t\tcase MessageType.RequestJSONArgsWithCancellation: {\n\t\t\t\tlet { rpcId, method, args } = MessageIO.deserializeRequestJSONArgs(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\targs = transformIncomingURIs(args, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveRequest(msgLength, req, rpcId, method, args, (messageType === MessageType.RequestJSONArgsWithCancellation));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.RequestMixedArgs:\n\t\t\tcase MessageType.RequestMixedArgsWithCancellation: {\n\t\t\t\tlet { rpcId, method, args } = MessageIO.deserializeRequestMixedArgs(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\targs = transformIncomingURIs(args, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveRequest(msgLength, req, rpcId, method, args, (messageType === MessageType.RequestMixedArgsWithCancellation));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.Acknowledged: {\n\t\t\t\tthis._logger?.logIncoming(msgLength, req, RequestInitiator.LocalSide, `ack`);\n\t\t\t\tthis._onDidReceiveAcknowledge(req);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.Cancel: {\n\t\t\t\tthis._receiveCancel(msgLength, req);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKEmpty: {\n\t\t\t\tthis._receiveReply(msgLength, req, undefined);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKJSON: {\n\t\t\t\tlet value = MessageIO.deserializeReplyOKJSON(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\tvalue = transformIncomingURIs(value, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveReply(msgLength, req, value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKJSONWithBuffers: {\n\t\t\t\tconst value = MessageIO.deserializeReplyOKJSONWithBuffers(buff, this._uriTransformer);\n\t\t\t\tthis._receiveReply(msgLength, req, value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKVSBuffer: {\n\t\t\t\tconst value = MessageIO.deserializeReplyOKVSBuffer(buff);\n\t\t\t\tthis._receiveReply(msgLength, req, value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyErrError: {\n\t\t\t\tlet err = MessageIO.deserializeReplyErrError(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\terr = transformIncomingURIs(err, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveReplyErr(msgLength, req, err);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyErrEmpty: {\n\t\t\t\tthis._receiveReplyErr(msgLength, req, undefined);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.error(`received unexpected message`);\n\t\t\t\tconsole.error(rawmsg);\n\t\t}\n\t}\n\n\tprivate _receiveRequest(msgLength: number, req: number, rpcId: number, method: string, args: any[], usesCancellationToken: boolean): void {\n\t\tthis._logger?.logIncoming(msgLength, req, RequestInitiator.OtherSide, `receiveRequest ${getStringIdentifierForProxy(rpcId)}.${method}(`, args);\n\t\tconst callId = String(req);\n\n\t\tlet promise: Promise<any>;\n\t\tlet cancel: () => void;\n\t\tif (usesCancellationToken) {\n\t\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\t\targs.push(cancellationTokenSource.token);\n\t\t\tpromise = this._invokeHandler(rpcId, method, args);\n\t\t\tcancel = () => cancellationTokenSource.cancel();\n\t\t} else {\n\t\t\t// cannot be cancelled\n\t\t\tpromise = this._invokeHandler(rpcId, method, args);\n\t\t\tcancel = noop;\n\t\t}\n\n\t\tthis._cancelInvokedHandlers[callId] = cancel;\n\n\t\t// Acknowledge the request\n\t\tconst msg = MessageIO.serializeAcknowledged(req);\n\t\tthis._logger?.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, `ack`);\n\t\tthis._protocol.send(msg);\n\n\t\tpromise.then((r) => {\n\t\t\tdelete this._cancelInvokedHandlers[callId];\n\t\t\tconst msg = MessageIO.serializeReplyOK(req, r, this._uriReplacer);\n\t\t\tthis._logger?.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, `reply:`, r);\n\t\t\tthis._protocol.send(msg);\n\t\t}, (err) => {\n\t\t\tdelete this._cancelInvokedHandlers[callId];\n\t\t\tconst msg = MessageIO.serializeReplyErr(req, err);\n\t\t\tthis._logger?.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, `replyErr:`, err);\n\t\t\tthis._protocol.send(msg);\n\t\t});\n\t}\n\n\tprivate _receiveCancel(msgLength: number, req: number): void {\n\t\tthis._logger?.logIncoming(msgLength, req, RequestInitiator.OtherSide, `receiveCancel`);\n\t\tconst callId = String(req);\n\t\tthis._cancelInvokedHandlers[callId]?.();\n\t}\n\n\tprivate _receiveReply(msgLength: number, req: number, value: any): void {\n\t\tthis._logger?.logIncoming(msgLength, req, RequestInitiator.LocalSide, `receiveReply:`, value);\n\t\tconst callId = String(req);\n\t\tif (!this._pendingRPCReplies.hasOwnProperty(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pendingReply = this._pendingRPCReplies[callId];\n\t\tdelete this._pendingRPCReplies[callId];\n\n\t\tpendingReply.resolveOk(value);\n\t}\n\n\tprivate _receiveReplyErr(msgLength: number, req: number, value: any): void {\n\t\tthis._logger?.logIncoming(msgLength, req, RequestInitiator.LocalSide, `receiveReplyErr:`, value);\n\n\t\tconst callId = String(req);\n\t\tif (!this._pendingRPCReplies.hasOwnProperty(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pendingReply = this._pendingRPCReplies[callId];\n\t\tdelete this._pendingRPCReplies[callId];\n\n\t\tlet err: any = undefined;\n\t\tif (value) {\n\t\t\tif (value.$isError) {\n\t\t\t\terr = new Error();\n\t\t\t\terr.name = value.name;\n\t\t\t\terr.message = value.message;\n\t\t\t\terr.stack = value.stack;\n\t\t\t} else {\n\t\t\t\terr = value;\n\t\t\t}\n\t\t}\n\t\tpendingReply.resolveErr(err);\n\t}\n\n\tprivate _invokeHandler(rpcId: number, methodName: string, args: any[]): Promise<any> {\n\t\ttry {\n\t\t\treturn Promise.resolve(this._doInvokeHandler(rpcId, methodName, args));\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n\n\tprivate _doInvokeHandler(rpcId: number, methodName: string, args: any[]): any {\n\t\tconst actor = this._locals[rpcId];\n\t\tif (!actor) {\n\t\t\tthrow new Error('Unknown actor ' + getStringIdentifierForProxy(rpcId));\n\t\t}\n\t\tconst method = actor[methodName];\n\t\tif (typeof method !== 'function') {\n\t\t\tthrow new Error('Unknown method ' + methodName + ' on actor ' + getStringIdentifierForProxy(rpcId));\n\t\t}\n\t\treturn method.apply(actor, args);\n\t}\n\n\tprivate _remoteCall(rpcId: number, methodName: string, args: any[]): Promise<any> {\n\t\tif (this._isDisposed) {\n\t\t\treturn new CanceledLazyPromise();\n\t\t}\n\t\tlet cancellationToken: CancellationToken | null = null;\n\t\tif (args.length > 0 && CancellationToken.isCancellationToken(args[args.length - 1])) {\n\t\t\tcancellationToken = args.pop();\n\t\t}\n\n\t\tif (cancellationToken && cancellationToken.isCancellationRequested) {\n\t\t\t// No need to do anything...\n\t\t\treturn Promise.reject<any>(errors.canceled());\n\t\t}\n\n\t\tconst serializedRequestArguments = MessageIO.serializeRequestArguments(args, this._uriReplacer);\n\n\t\tconst req = ++this._lastMessageId;\n\t\tconst callId = String(req);\n\t\tconst result = new LazyPromise();\n\n\t\tconst disposable = new DisposableStore();\n\t\tif (cancellationToken) {\n\t\t\tdisposable.add(cancellationToken.onCancellationRequested(() => {\n\t\t\t\tconst msg = MessageIO.serializeCancel(req);\n\t\t\t\tthis._logger?.logOutgoing(msg.byteLength, req, RequestInitiator.LocalSide, `cancel`);\n\t\t\t\tthis._protocol.send(MessageIO.serializeCancel(req));\n\t\t\t}));\n\t\t}\n\n\t\tthis._pendingRPCReplies[callId] = new PendingRPCReply(result, disposable);\n\t\tthis._onWillSendRequest(req);\n\t\tconst msg = MessageIO.serializeRequest(req, rpcId, methodName, serializedRequestArguments, !!cancellationToken);\n\t\tthis._logger?.logOutgoing(msg.byteLength, req, RequestInitiator.LocalSide, `request: ${getStringIdentifierForProxy(rpcId)}.${methodName}(`, args);\n\t\tthis._protocol.send(msg);\n\t\treturn result;\n\t}\n}\n\nclass PendingRPCReply {\n\tconstructor(\n\t\tprivate readonly _promise: LazyPromise,\n\t\tprivate readonly _disposable: IDisposable\n\t) { }\n\n\tpublic resolveOk(value: any): void {\n\t\tthis._promise.resolveOk(value);\n\t\tthis._disposable.dispose();\n\t}\n\n\tpublic resolveErr(err: any): void {\n\t\tthis._promise.resolveErr(err);\n\t\tthis._disposable.dispose();\n\t}\n}\n\nclass MessageBuffer {\n\n\tpublic static alloc(type: MessageType, req: number, messageSize: number): MessageBuffer {\n\t\tconst result = new MessageBuffer(VSBuffer.alloc(messageSize + 1 /* type */ + 4 /* req */), 0);\n\t\tresult.writeUInt8(type);\n\t\tresult.writeUInt32(req);\n\t\treturn result;\n\t}\n\n\tpublic static read(buff: VSBuffer, offset: number): MessageBuffer {\n\t\treturn new MessageBuffer(buff, offset);\n\t}\n\n\tprivate _buff: VSBuffer;\n\tprivate _offset: number;\n\n\tpublic get buffer(): VSBuffer {\n\t\treturn this._buff;\n\t}\n\n\tprivate constructor(buff: VSBuffer, offset: number) {\n\t\tthis._buff = buff;\n\t\tthis._offset = offset;\n\t}\n\n\tpublic static sizeUInt8(): number {\n\t\treturn 1;\n\t}\n\n\tpublic static readonly sizeUInt32 = 4;\n\n\tpublic writeUInt8(n: number): void {\n\t\tthis._buff.writeUInt8(n, this._offset); this._offset += 1;\n\t}\n\n\tpublic readUInt8(): number {\n\t\tconst n = this._buff.readUInt8(this._offset); this._offset += 1;\n\t\treturn n;\n\t}\n\n\tpublic writeUInt32(n: number): void {\n\t\tthis._buff.writeUInt32BE(n, this._offset); this._offset += 4;\n\t}\n\n\tpublic readUInt32(): number {\n\t\tconst n = this._buff.readUInt32BE(this._offset); this._offset += 4;\n\t\treturn n;\n\t}\n\n\tpublic static sizeShortString(str: VSBuffer): number {\n\t\treturn 1 /* string length */ + str.byteLength /* actual string */;\n\t}\n\n\tpublic writeShortString(str: VSBuffer): void {\n\t\tthis._buff.writeUInt8(str.byteLength, this._offset); this._offset += 1;\n\t\tthis._buff.set(str, this._offset); this._offset += str.byteLength;\n\t}\n\n\tpublic readShortString(): string {\n\t\tconst strByteLength = this._buff.readUInt8(this._offset); this._offset += 1;\n\t\tconst strBuff = this._buff.slice(this._offset, this._offset + strByteLength);\n\t\tconst str = strBuff.toString(); this._offset += strByteLength;\n\t\treturn str;\n\t}\n\n\tpublic static sizeLongString(str: VSBuffer): number {\n\t\treturn 4 /* string length */ + str.byteLength /* actual string */;\n\t}\n\n\tpublic writeLongString(str: VSBuffer): void {\n\t\tthis._buff.writeUInt32BE(str.byteLength, this._offset); this._offset += 4;\n\t\tthis._buff.set(str, this._offset); this._offset += str.byteLength;\n\t}\n\n\tpublic readLongString(): string {\n\t\tconst strByteLength = this._buff.readUInt32BE(this._offset); this._offset += 4;\n\t\tconst strBuff = this._buff.slice(this._offset, this._offset + strByteLength);\n\t\tconst str = strBuff.toString(); this._offset += strByteLength;\n\t\treturn str;\n\t}\n\n\tpublic writeBuffer(buff: VSBuffer): void {\n\t\tthis._buff.writeUInt32BE(buff.byteLength, this._offset); this._offset += 4;\n\t\tthis._buff.set(buff, this._offset); this._offset += buff.byteLength;\n\t}\n\n\tpublic static sizeVSBuffer(buff: VSBuffer): number {\n\t\treturn 4 /* buffer length */ + buff.byteLength /* actual buffer */;\n\t}\n\n\tpublic writeVSBuffer(buff: VSBuffer): void {\n\t\tthis._buff.writeUInt32BE(buff.byteLength, this._offset); this._offset += 4;\n\t\tthis._buff.set(buff, this._offset); this._offset += buff.byteLength;\n\t}\n\n\tpublic readVSBuffer(): VSBuffer {\n\t\tconst buffLength = this._buff.readUInt32BE(this._offset); this._offset += 4;\n\t\tconst buff = this._buff.slice(this._offset, this._offset + buffLength); this._offset += buffLength;\n\t\treturn buff;\n\t}\n\n\tpublic static sizeMixedArray(arr: readonly MixedArg[]): number {\n\t\tlet size = 0;\n\t\tsize += 1; // arr length\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tconst el = arr[i];\n\t\t\tsize += 1; // arg type\n\t\t\tswitch (el.type) {\n\t\t\t\tcase ArgType.String:\n\t\t\t\t\tsize += this.sizeLongString(el.value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.VSBuffer:\n\t\t\t\t\tsize += this.sizeVSBuffer(el.value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.SerializedObjectWithBuffers:\n\t\t\t\t\tsize += this.sizeUInt32; // buffer count\n\t\t\t\t\tsize += this.sizeLongString(el.value);\n\t\t\t\t\tfor (let i = 0; i < el.buffers.length; ++i) {\n\t\t\t\t\t\tsize += this.sizeVSBuffer(el.buffers[i]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.Undefined:\n\t\t\t\t\t// empty...\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn size;\n\t}\n\n\tpublic writeMixedArray(arr: readonly MixedArg[]): void {\n\t\tthis._buff.writeUInt8(arr.length, this._offset); this._offset += 1;\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tconst el = arr[i];\n\t\t\tswitch (el.type) {\n\t\t\t\tcase ArgType.String:\n\t\t\t\t\tthis.writeUInt8(ArgType.String);\n\t\t\t\t\tthis.writeLongString(el.value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.VSBuffer:\n\t\t\t\t\tthis.writeUInt8(ArgType.VSBuffer);\n\t\t\t\t\tthis.writeVSBuffer(el.value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.SerializedObjectWithBuffers:\n\t\t\t\t\tthis.writeUInt8(ArgType.SerializedObjectWithBuffers);\n\t\t\t\t\tthis.writeUInt32(el.buffers.length);\n\t\t\t\t\tthis.writeLongString(el.value);\n\t\t\t\t\tfor (let i = 0; i < el.buffers.length; ++i) {\n\t\t\t\t\t\tthis.writeBuffer(el.buffers[i]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.Undefined:\n\t\t\t\t\tthis.writeUInt8(ArgType.Undefined);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readMixedArray(): Array<string | VSBuffer | SerializableObjectWithBuffers<any> | undefined> {\n\t\tconst arrLen = this._buff.readUInt8(this._offset); this._offset += 1;\n\t\tconst arr: Array<string | VSBuffer | SerializableObjectWithBuffers<any> | undefined> = new Array(arrLen);\n\t\tfor (let i = 0; i < arrLen; i++) {\n\t\t\tconst argType = <ArgType>this.readUInt8();\n\t\t\tswitch (argType) {\n\t\t\t\tcase ArgType.String:\n\t\t\t\t\tarr[i] = this.readLongString();\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.VSBuffer:\n\t\t\t\t\tarr[i] = this.readVSBuffer();\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.SerializedObjectWithBuffers: {\n\t\t\t\t\tconst bufferCount = this.readUInt32();\n\t\t\t\t\tconst jsonString = this.readLongString();\n\t\t\t\t\tconst buffers: VSBuffer[] = [];\n\t\t\t\t\tfor (let i = 0; i < bufferCount; ++i) {\n\t\t\t\t\t\tbuffers.push(this.readVSBuffer());\n\t\t\t\t\t}\n\t\t\t\t\tarr[i] = new SerializableObjectWithBuffers(parseJsonAndRestoreBufferRefs(jsonString, buffers, null));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase ArgType.Undefined:\n\t\t\t\t\tarr[i] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t}\n}\n\nconst enum SerializedRequestArgumentType {\n\tSimple,\n\tMixed,\n}\n\ntype SerializedRequestArguments =\n\t| { readonly type: SerializedRequestArgumentType.Simple; args: string }\n\t| { readonly type: SerializedRequestArgumentType.Mixed; args: MixedArg[] };\n\n\nclass MessageIO {\n\n\tprivate static _useMixedArgSerialization(arr: any[]): boolean {\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (arr[i] instanceof VSBuffer) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (arr[i] instanceof SerializableObjectWithBuffers) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (typeof arr[i] === 'undefined') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static serializeRequestArguments(args: any[], replacer: JSONStringifyReplacer | null): SerializedRequestArguments {\n\t\tif (this._useMixedArgSerialization(args)) {\n\t\t\tconst massagedArgs: MixedArg[] = [];\n\t\t\tfor (let i = 0, len = args.length; i < len; i++) {\n\t\t\t\tconst arg = args[i];\n\t\t\t\tif (arg instanceof VSBuffer) {\n\t\t\t\t\tmassagedArgs[i] = { type: ArgType.VSBuffer, value: arg };\n\t\t\t\t} else if (typeof arg === 'undefined') {\n\t\t\t\t\tmassagedArgs[i] = { type: ArgType.Undefined };\n\t\t\t\t} else if (arg instanceof SerializableObjectWithBuffers) {\n\t\t\t\t\tconst { jsonString, referencedBuffers } = stringifyJsonWithBufferRefs(arg.value, replacer);\n\t\t\t\t\tmassagedArgs[i] = { type: ArgType.SerializedObjectWithBuffers, value: VSBuffer.fromString(jsonString), buffers: referencedBuffers };\n\t\t\t\t} else {\n\t\t\t\t\tmassagedArgs[i] = { type: ArgType.String, value: VSBuffer.fromString(stringify(arg, replacer)) };\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttype: SerializedRequestArgumentType.Mixed,\n\t\t\t\targs: massagedArgs,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\ttype: SerializedRequestArgumentType.Simple,\n\t\t\targs: stringify(args, replacer)\n\t\t};\n\t}\n\n\tpublic static serializeRequest(req: number, rpcId: number, method: string, serializedArgs: SerializedRequestArguments, usesCancellationToken: boolean): VSBuffer {\n\t\tswitch (serializedArgs.type) {\n\t\t\tcase SerializedRequestArgumentType.Simple:\n\t\t\t\treturn this._requestJSONArgs(req, rpcId, method, serializedArgs.args, usesCancellationToken);\n\t\t\tcase SerializedRequestArgumentType.Mixed:\n\t\t\t\treturn this._requestMixedArgs(req, rpcId, method, serializedArgs.args, usesCancellationToken);\n\t\t}\n\t}\n\n\tprivate static _requestJSONArgs(req: number, rpcId: number, method: string, args: string, usesCancellationToken: boolean): VSBuffer {\n\t\tconst methodBuff = VSBuffer.fromString(method);\n\t\tconst argsBuff = VSBuffer.fromString(args);\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeUInt8();\n\t\tlen += MessageBuffer.sizeShortString(methodBuff);\n\t\tlen += MessageBuffer.sizeLongString(argsBuff);\n\n\t\tconst result = MessageBuffer.alloc(usesCancellationToken ? MessageType.RequestJSONArgsWithCancellation : MessageType.RequestJSONArgs, req, len);\n\t\tresult.writeUInt8(rpcId);\n\t\tresult.writeShortString(methodBuff);\n\t\tresult.writeLongString(argsBuff);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeRequestJSONArgs(buff: MessageBuffer): { rpcId: number; method: string; args: any[] } {\n\t\tconst rpcId = buff.readUInt8();\n\t\tconst method = buff.readShortString();\n\t\tconst args = buff.readLongString();\n\t\treturn {\n\t\t\trpcId: rpcId,\n\t\t\tmethod: method,\n\t\t\targs: JSON.parse(args)\n\t\t};\n\t}\n\n\tprivate static _requestMixedArgs(req: number, rpcId: number, method: string, args: readonly MixedArg[], usesCancellationToken: boolean): VSBuffer {\n\t\tconst methodBuff = VSBuffer.fromString(method);\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeUInt8();\n\t\tlen += MessageBuffer.sizeShortString(methodBuff);\n\t\tlen += MessageBuffer.sizeMixedArray(args);\n\n\t\tconst result = MessageBuffer.alloc(usesCancellationToken ? MessageType.RequestMixedArgsWithCancellation : MessageType.RequestMixedArgs, req, len);\n\t\tresult.writeUInt8(rpcId);\n\t\tresult.writeShortString(methodBuff);\n\t\tresult.writeMixedArray(args);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeRequestMixedArgs(buff: MessageBuffer): { rpcId: number; method: string; args: any[] } {\n\t\tconst rpcId = buff.readUInt8();\n\t\tconst method = buff.readShortString();\n\t\tconst rawargs = buff.readMixedArray();\n\t\tconst args: any[] = new Array(rawargs.length);\n\t\tfor (let i = 0, len = rawargs.length; i < len; i++) {\n\t\t\tconst rawarg = rawargs[i];\n\t\t\tif (typeof rawarg === 'string') {\n\t\t\t\targs[i] = JSON.parse(rawarg);\n\t\t\t} else {\n\t\t\t\targs[i] = rawarg;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\trpcId: rpcId,\n\t\t\tmethod: method,\n\t\t\targs: args\n\t\t};\n\t}\n\n\tpublic static serializeAcknowledged(req: number): VSBuffer {\n\t\treturn MessageBuffer.alloc(MessageType.Acknowledged, req, 0).buffer;\n\t}\n\n\tpublic static serializeCancel(req: number): VSBuffer {\n\t\treturn MessageBuffer.alloc(MessageType.Cancel, req, 0).buffer;\n\t}\n\n\tpublic static serializeReplyOK(req: number, res: any, replacer: JSONStringifyReplacer | null): VSBuffer {\n\t\tif (typeof res === 'undefined') {\n\t\t\treturn this._serializeReplyOKEmpty(req);\n\t\t} else if (res instanceof VSBuffer) {\n\t\t\treturn this._serializeReplyOKVSBuffer(req, res);\n\t\t} else if (res instanceof SerializableObjectWithBuffers) {\n\t\t\tconst { jsonString, referencedBuffers } = stringifyJsonWithBufferRefs(res.value, replacer, true);\n\t\t\treturn this._serializeReplyOKJSONWithBuffers(req, jsonString, referencedBuffers);\n\t\t} else {\n\t\t\treturn this._serializeReplyOKJSON(req, safeStringify(res, replacer));\n\t\t}\n\t}\n\n\tprivate static _serializeReplyOKEmpty(req: number): VSBuffer {\n\t\treturn MessageBuffer.alloc(MessageType.ReplyOKEmpty, req, 0).buffer;\n\t}\n\n\tprivate static _serializeReplyOKVSBuffer(req: number, res: VSBuffer): VSBuffer {\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeVSBuffer(res);\n\n\t\tconst result = MessageBuffer.alloc(MessageType.ReplyOKVSBuffer, req, len);\n\t\tresult.writeVSBuffer(res);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeReplyOKVSBuffer(buff: MessageBuffer): VSBuffer {\n\t\treturn buff.readVSBuffer();\n\t}\n\n\tprivate static _serializeReplyOKJSON(req: number, res: string): VSBuffer {\n\t\tconst resBuff = VSBuffer.fromString(res);\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeLongString(resBuff);\n\n\t\tconst result = MessageBuffer.alloc(MessageType.ReplyOKJSON, req, len);\n\t\tresult.writeLongString(resBuff);\n\t\treturn result.buffer;\n\t}\n\n\tprivate static _serializeReplyOKJSONWithBuffers(req: number, res: string, buffers: readonly VSBuffer[]): VSBuffer {\n\t\tconst resBuff = VSBuffer.fromString(res);\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeUInt32; // buffer count\n\t\tlen += MessageBuffer.sizeLongString(resBuff);\n\t\tfor (const buffer of buffers) {\n\t\t\tlen += MessageBuffer.sizeVSBuffer(buffer);\n\t\t}\n\n\t\tconst result = MessageBuffer.alloc(MessageType.ReplyOKJSONWithBuffers, req, len);\n\t\tresult.writeUInt32(buffers.length);\n\t\tresult.writeLongString(resBuff);\n\t\tfor (const buffer of buffers) {\n\t\t\tresult.writeBuffer(buffer);\n\t\t}\n\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeReplyOKJSON(buff: MessageBuffer): any {\n\t\tconst res = buff.readLongString();\n\t\treturn JSON.parse(res);\n\t}\n\n\tpublic static deserializeReplyOKJSONWithBuffers(buff: MessageBuffer, uriTransformer: IURITransformer | null): SerializableObjectWithBuffers<any> {\n\t\tconst bufferCount = buff.readUInt32();\n\t\tconst res = buff.readLongString();\n\n\t\tconst buffers: VSBuffer[] = [];\n\t\tfor (let i = 0; i < bufferCount; ++i) {\n\t\t\tbuffers.push(buff.readVSBuffer());\n\t\t}\n\n\t\treturn new SerializableObjectWithBuffers(parseJsonAndRestoreBufferRefs(res, buffers, uriTransformer));\n\t}\n\n\tpublic static serializeReplyErr(req: number, err: any): VSBuffer {\n\t\tconst errStr: string | undefined = (err ? safeStringify(errors.transformErrorForSerialization(err), null) : undefined);\n\t\tif (typeof errStr !== 'string') {\n\t\t\treturn this._serializeReplyErrEmpty(req);\n\t\t}\n\t\tconst errBuff = VSBuffer.fromString(errStr);\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeLongString(errBuff);\n\n\t\tconst result = MessageBuffer.alloc(MessageType.ReplyErrError, req, len);\n\t\tresult.writeLongString(errBuff);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeReplyErrError(buff: MessageBuffer): Error {\n\t\tconst err = buff.readLongString();\n\t\treturn JSON.parse(err);\n\t}\n\n\tprivate static _serializeReplyErrEmpty(req: number): VSBuffer {\n\t\treturn MessageBuffer.alloc(MessageType.ReplyErrEmpty, req, 0).buffer;\n\t}\n}\n\nconst enum MessageType {\n\tRequestJSONArgs = 1,\n\tRequestJSONArgsWithCancellation = 2,\n\tRequestMixedArgs = 3,\n\tRequestMixedArgsWithCancellation = 4,\n\tAcknowledged = 5,\n\tCancel = 6,\n\tReplyOKEmpty = 7,\n\tReplyOKVSBuffer = 8,\n\tReplyOKJSON = 9,\n\tReplyOKJSONWithBuffers = 10,\n\tReplyErrError = 11,\n\tReplyErrEmpty = 12,\n}\n\nconst enum ArgType {\n\tString = 1,\n\tVSBuffer = 2,\n\tSerializedObjectWithBuffers = 3,\n\tUndefined = 4,\n}\n\n\ntype MixedArg =\n\t| { readonly type: ArgType.String; readonly value: VSBuffer }\n\t| { readonly type: ArgType.VSBuffer; readonly value: VSBuffer }\n\t| { readonly type: ArgType.SerializedObjectWithBuffers; readonly value: VSBuffer; readonly buffers: readonly VSBuffer[] }\n\t| { readonly type: ArgType.Undefined }\n\t;\n"]}