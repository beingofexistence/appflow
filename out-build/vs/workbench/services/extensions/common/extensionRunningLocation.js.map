{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensions/common/extensionRunningLocation.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAIhG,MAAa,GAAG;QAEf,YACiB,QAAgB;YAAhB,aAAQ,GAAR,QAAQ,CAAQ;YAFjB,SAAI,0CAAkC;QAGlD,CAAC;QACE,MAAM,CAAC,KAA+B;YAC5C,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,CAAC,CAAC;QACvE,CAAC;QACM,QAAQ;YACd,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;gBACxB,OAAO,cAAc,CAAC;aACtB;YACD,OAAO,eAAe,IAAI,CAAC,QAAQ,EAAE,CAAC;QACvC,CAAC;KACD;IAdD,kBAcC;IAED,MAAa,GAAG;QAEf,YACiB,QAAgB;YAAhB,aAAQ,GAAR,QAAQ,CAAQ;YAFjB,SAAI,4CAAoC;QAGpD,CAAC;QACE,MAAM,CAAC,KAA+B;YAC5C,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,CAAC,CAAC;QACvE,CAAC;QACM,QAAQ;YACd,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;gBACxB,OAAO,gBAAgB,CAAC;aACxB;YACD,OAAO,iBAAiB,IAAI,CAAC,QAAQ,EAAE,CAAC;QACzC,CAAC;KACD;IAdD,kBAcC;IAED,MAAa,GAAG;QAAhB;YACiB,SAAI,oCAA4B;YAChC,aAAQ,GAAG,CAAC,CAAC;QAO9B,CAAC;QANO,MAAM,CAAC,KAA+B;YAC5C,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC;QACM,QAAQ;YACd,OAAO,QAAQ,CAAC;QACjB,CAAC;KACD;IATD,kBASC","file":"extensionRunningLocation.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtensionHostKind } from 'vs/workbench/services/extensions/common/extensionHostKind';\n\nexport class LocalProcessRunningLocation {\n\tpublic readonly kind = ExtensionHostKind.LocalProcess;\n\tconstructor(\n\t\tpublic readonly affinity: number\n\t) { }\n\tpublic equals(other: ExtensionRunningLocation) {\n\t\treturn (this.kind === other.kind && this.affinity === other.affinity);\n\t}\n\tpublic asString(): string {\n\t\tif (this.affinity === 0) {\n\t\t\treturn 'LocalProcess';\n\t\t}\n\t\treturn `LocalProcess${this.affinity}`;\n\t}\n}\n\nexport class LocalWebWorkerRunningLocation {\n\tpublic readonly kind = ExtensionHostKind.LocalWebWorker;\n\tconstructor(\n\t\tpublic readonly affinity: number\n\t) { }\n\tpublic equals(other: ExtensionRunningLocation) {\n\t\treturn (this.kind === other.kind && this.affinity === other.affinity);\n\t}\n\tpublic asString(): string {\n\t\tif (this.affinity === 0) {\n\t\t\treturn 'LocalWebWorker';\n\t\t}\n\t\treturn `LocalWebWorker${this.affinity}`;\n\t}\n}\n\nexport class RemoteRunningLocation {\n\tpublic readonly kind = ExtensionHostKind.Remote;\n\tpublic readonly affinity = 0;\n\tpublic equals(other: ExtensionRunningLocation) {\n\t\treturn (this.kind === other.kind);\n\t}\n\tpublic asString(): string {\n\t\treturn 'Remote';\n\t}\n}\n\nexport type ExtensionRunningLocation = LocalProcessRunningLocation | LocalWebWorkerRunningLocation | RemoteRunningLocation;\n"]}