{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensions/test/common/extensionManifestPropertiesService.test.ts"],"names":[],"mappings":"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","file":"extensionManifestPropertiesService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { ExtensionUntrustedWorkspaceSupportType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IWorkspaceTrustEnablementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { ExtensionManifestPropertiesService } from 'vs/workbench/services/extensions/common/extensionManifestPropertiesService';\nimport { TestProductService, TestWorkspaceTrustEnablementService } from 'vs/workbench/test/common/workbenchTestServices';\n\nsuite('ExtensionManifestPropertiesService - ExtensionKind', () => {\n\n\tlet disposables: DisposableStore;\n\tlet testObject: ExtensionManifestPropertiesService;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\ttestObject = disposables.add(new ExtensionManifestPropertiesService(TestProductService, new TestConfigurationService(), new TestWorkspaceTrustEnablementService(), new NullLogService()));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('declarative with extension dependencies', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ extensionDependencies: ['ext1'] }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('declarative extension pack', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ extensionPack: ['ext1', 'ext2'] }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('declarative extension pack and extension dependencies', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ extensionPack: ['ext1', 'ext2'], extensionDependencies: ['ext1', 'ext2'] }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('declarative with unknown contribution point => workspace, web in web and => workspace in desktop', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ contributes: <any>{ 'unknownPoint': { something: true } } }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('declarative extension pack with unknown contribution point', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ extensionPack: ['ext1', 'ext2'], contributes: <any>{ 'unknownPoint': { something: true } } }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('simple declarative => ui, workspace, web', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{}), ['ui', 'workspace', 'web']);\n\t});\n\n\ttest('only browser => web', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ browser: 'main.browser.js' }), ['web']);\n\t});\n\n\ttest('only main => workspace', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ main: 'main.js' }), ['workspace']);\n\t});\n\n\ttest('main and browser => workspace, web in web and workspace in desktop', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ main: 'main.js', browser: 'main.browser.js' }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('browser entry point with workspace extensionKind => workspace, web in web and workspace in desktop', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ main: 'main.js', browser: 'main.browser.js', extensionKind: ['workspace'] }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('only browser entry point with out extensionKind => web', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ browser: 'main.browser.js' }), ['web']);\n\t});\n\n\ttest('simple descriptive with workspace, ui extensionKind => workspace, ui, web in web and workspace, ui in desktop', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ extensionKind: ['workspace', 'ui'] }), isWeb ? ['workspace', 'ui', 'web'] : ['workspace', 'ui']);\n\t});\n\n\ttest('opt out from web through settings even if it can run in web', () => {\n\t\ttestObject = disposables.add(new ExtensionManifestPropertiesService(TestProductService, new TestConfigurationService({ remote: { extensionKind: { 'pub.a': ['-web'] } } }), new TestWorkspaceTrustEnablementService(), new NullLogService()));\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ browser: 'main.browser.js', publisher: 'pub', name: 'a' }), ['ui', 'workspace']);\n\t});\n\n\ttest('opt out from web and include only workspace through settings even if it can run in web', () => {\n\t\ttestObject = disposables.add(new ExtensionManifestPropertiesService(TestProductService, new TestConfigurationService({ remote: { extensionKind: { 'pub.a': ['-web', 'workspace'] } } }), new TestWorkspaceTrustEnablementService(), new NullLogService()));\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ browser: 'main.browser.js', publisher: 'pub', name: 'a' }), ['workspace']);\n\t});\n\n\ttest('extension cannot opt out from web', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<any>{ browser: 'main.browser.js', extensionKind: ['-web'] }), ['web']);\n\t});\n\n\ttest('extension cannot opt into web', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<any>{ main: 'main.js', extensionKind: ['web', 'workspace', 'ui'] }), ['workspace', 'ui']);\n\t});\n\n\ttest('extension cannot opt into web only', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<any>{ main: 'main.js', extensionKind: ['web'] }), ['workspace']);\n\t});\n});\n\n\n// Workspace Trust is disabled in web at the moment\nif (!isWeb) {\n\tsuite('ExtensionManifestPropertiesService - ExtensionUntrustedWorkspaceSupportType', () => {\n\t\tlet testObject: ExtensionManifestPropertiesService;\n\t\tlet instantiationService: TestInstantiationService;\n\t\tlet testConfigurationService: TestConfigurationService;\n\n\t\tsetup(async () => {\n\t\t\tinstantiationService = new TestInstantiationService();\n\n\t\t\ttestConfigurationService = new TestConfigurationService();\n\t\t\tinstantiationService.stub(IConfigurationService, testConfigurationService);\n\t\t});\n\n\t\tteardown(() => {\n\t\t\ttestObject.dispose();\n\t\t\tinstantiationService.dispose();\n\t\t});\n\n\t\tfunction assertUntrustedWorkspaceSupport(extensionManifest: IExtensionManifest, expected: ExtensionUntrustedWorkspaceSupportType): void {\n\t\t\ttestObject = instantiationService.createInstance(ExtensionManifestPropertiesService);\n\t\t\tconst untrustedWorkspaceSupport = testObject.getExtensionUntrustedWorkspaceSupportType(extensionManifest);\n\n\t\t\tassert.strictEqual(untrustedWorkspaceSupport, expected);\n\t\t}\n\n\t\tfunction getExtensionManifest(properties: any = {}): IExtensionManifest {\n\t\t\treturn Object.create({ name: 'a', publisher: 'pub', version: '1.0.0', ...properties }) as IExtensionManifest;\n\t\t}\n\n\t\ttest('test extension workspace trust request when main entry point is missing', () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest();\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when workspace trust is disabled', async () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService(false));\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js' });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when \"true\" override exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tawait testConfigurationService.setUserConfiguration('extensions', { supportUntrustedWorkspaces: { 'pub.a': { supported: true } } });\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override (false) exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tawait testConfigurationService.setUserConfiguration('extensions', { supportUntrustedWorkspaces: { 'pub.a': { supported: false } } });\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, false);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override (true) for the version exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tawait testConfigurationService.setUserConfiguration('extensions', { supportUntrustedWorkspaces: { 'pub.a': { supported: true, version: '1.0.0' } } });\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override (false) for the version exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tawait testConfigurationService.setUserConfiguration('extensions', { supportUntrustedWorkspaces: { 'pub.a': { supported: false, version: '1.0.0' } } });\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, false);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override for a different version exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tawait testConfigurationService.setUserConfiguration('extensions', { supportUntrustedWorkspaces: { 'pub.a': { supported: true, version: '2.0.0' } } });\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, 'limited');\n\t\t});\n\n\t\ttest('test extension workspace trust request when default (true) exists in product.json', () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{ extensionUntrustedWorkspaceSupport: { 'pub.a': { default: true } } });\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js' });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when default (false) exists in product.json', () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{ extensionUntrustedWorkspaceSupport: { 'pub.a': { default: false } } });\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js' });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, false);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override (limited) exists in product.json', () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{ extensionUntrustedWorkspaceSupport: { 'pub.a': { override: 'limited' } } });\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: true } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, 'limited');\n\t\t});\n\n\t\ttest('test extension workspace trust request when override (false) exists in product.json', () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{ extensionUntrustedWorkspaceSupport: { 'pub.a': { override: false } } });\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: true } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, false);\n\t\t});\n\n\t\ttest('test extension workspace trust request when value exists in package.json', () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, 'limited');\n\t\t});\n\n\t\ttest('test extension workspace trust request when no value exists in package.json', () => {\n\t\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js' });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, false);\n\t\t});\n\t});\n}\n"]}