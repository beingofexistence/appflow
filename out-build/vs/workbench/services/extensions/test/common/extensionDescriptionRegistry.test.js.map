{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensions/test/common/extensionDescriptionRegistry.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAOhG,KAAK,CAAC,8BAA8B,EAAE,GAAG,EAAE;QAC1C,IAAI,CAAC,qEAAqE,EAAE,GAAG,EAAE;YAChF,MAAM,GAAG,GAAG,IAAI,gBAAG,CAAiB,GAAG,CAAC,CAAC;YACzC,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YACvC,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YAEvC,MAAM,QAAQ,GAAG,IAAI,mCAAI,CAAyB,mCAAI,EAAyB,CAAC,WAAW,CAAC,CAAC,CAAC;YAC9F,QAAQ,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YAE/C,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,2BAA2B,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC;QAEH,SAAS,IAAI,CAAC,EAAO,EAAkB,OAAe,EAAE,mBAA6B,CAAC,GAAG,CAAC;YACzF,OAAO;gBACN,IAAI,EAAE,EAAE,CAAC,KAAK;gBACd,SAAS,EAAE,MAAM;gBACjB,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE;gBAC7B,UAAU,EAAE,EAAE;gBACd,iBAAiB,EAAE,SAAG,CAAC,KAAK,CAAC,mBAAmB,CAAC;gBACjD,SAAS,EAAE,KAAK;gBAChB,kBAAkB,EAAE,KAAK;gBACzB,aAAa,EAAE,KAAK;gBACpB,gBAAgB;gBAChB,IAAI,EAAE,UAAU;gBAChB,cAAc,4CAA0B;gBACxC,qBAAqB,EAAE,EAAE;aACzB,CAAC;QACH,CAAC;IACF,CAAC,CAAC,CAAC","file":"extensionDescriptionRegistry.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtensionIdentifier, IExtensionDescription, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionDescriptionRegistry, basicActivationEventsReader } from 'vs/workbench/services/extensions/common/extensionDescriptionRegistry';\n\nsuite('ExtensionDescriptionRegistry', () => {\n\ttest('allow removing and adding the same extension at a different version', () => {\n\t\tconst idA = new ExtensionIdentifier('a');\n\t\tconst extensionA1 = desc(idA, '1.0.0');\n\t\tconst extensionA2 = desc(idA, '2.0.0');\n\n\t\tconst registry = new ExtensionDescriptionRegistry(basicActivationEventsReader, [extensionA1]);\n\t\tregistry.deltaExtensions([extensionA2], [idA]);\n\n\t\tassert.deepStrictEqual(registry.getAllExtensionDescriptions(), [extensionA2]);\n\t});\n\n\tfunction desc(id: ExtensionIdentifier, version: string, activationEvents: string[] = ['*']): IExtensionDescription {\n\t\treturn {\n\t\t\tname: id.value,\n\t\t\tpublisher: 'test',\n\t\t\tversion: '0.0.0',\n\t\t\tengines: { vscode: '^1.0.0' },\n\t\t\tidentifier: id,\n\t\t\textensionLocation: URI.parse(`nothing://nowhere`),\n\t\t\tisBuiltin: false,\n\t\t\tisUnderDevelopment: false,\n\t\t\tisUserBuiltin: false,\n\t\t\tactivationEvents,\n\t\t\tmain: 'index.js',\n\t\t\ttargetPlatform: TargetPlatform.UNDEFINED,\n\t\t\textensionDependencies: []\n\t\t};\n\t}\n});\n"]}