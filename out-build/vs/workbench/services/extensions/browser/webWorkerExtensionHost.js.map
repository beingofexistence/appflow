{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensions/browser/webWorkerExtensionHost.ts"],"names":[],"mappings":"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","file":"webWorkerExtensionHost.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { parentOriginHash } from 'vs/base/browser/iframe';\nimport { Barrier } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { canceled, onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { COI, FileAccess } from 'vs/base/common/network';\nimport * as platform from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/common/ipc';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { ILayoutService } from 'vs/platform/layout/browser/layoutService';\nimport { ILogService, ILoggerService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isLoggingOnly } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { ExtensionHostExitCode, IExtensionHostInitData, MessageType, UIKind, createMessageOfType, isMessageOfType } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\nimport { LocalWebWorkerRunningLocation } from 'vs/workbench/services/extensions/common/extensionRunningLocation';\nimport { ExtensionHostExtensions, ExtensionHostStartup, IExtensionHost } from 'vs/workbench/services/extensions/common/extensions';\n\nexport interface IWebWorkerExtensionHostInitData {\n\treadonly extensions: ExtensionHostExtensions;\n}\n\nexport interface IWebWorkerExtensionHostDataProvider {\n\tgetInitData(): Promise<IWebWorkerExtensionHostInitData>;\n}\n\nexport class WebWorkerExtensionHost extends Disposable implements IExtensionHost {\n\n\tpublic readonly remoteAuthority = null;\n\tpublic extensions: ExtensionHostExtensions | null = null;\n\n\tprivate readonly _onDidExit = this._register(new Emitter<[number, string | null]>());\n\tpublic readonly onExit: Event<[number, string | null]> = this._onDidExit.event;\n\n\tprivate _isTerminating: boolean;\n\tprivate _protocolPromise: Promise<IMessagePassingProtocol> | null;\n\tprivate _protocol: IMessagePassingProtocol | null;\n\n\tprivate readonly _extensionHostLogsLocation: URI;\n\n\tconstructor(\n\t\tpublic readonly runningLocation: LocalWebWorkerRunningLocation,\n\t\tpublic readonly startup: ExtensionHostStartup,\n\t\tprivate readonly _initDataProvider: IWebWorkerExtensionHostDataProvider,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ILoggerService private readonly _loggerService: ILoggerService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly _environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IUserDataProfilesService private readonly _userDataProfilesService: IUserDataProfilesService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@ILayoutService private readonly _layoutService: ILayoutService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis._isTerminating = false;\n\t\tthis._protocolPromise = null;\n\t\tthis._protocol = null;\n\t\tthis._extensionHostLogsLocation = joinPath(this._environmentService.extHostLogsPath, 'webWorker');\n\t}\n\n\tprivate async _getWebWorkerExtensionHostIframeSrc(): Promise<string> {\n\t\tconst suffixSearchParams = new URLSearchParams();\n\t\tif (this._environmentService.debugExtensionHost && this._environmentService.debugRenderer) {\n\t\t\tsuffixSearchParams.set('debugged', '1');\n\t\t}\n\t\tCOI.addSearchParam(suffixSearchParams, true, true);\n\n\t\tconst suffix = `?${suffixSearchParams.toString()}`;\n\n\t\tconst iframeModulePath = 'vs/workbench/services/extensions/worker/webWorkerExtensionHostIframe.html';\n\t\tif (platform.isWeb) {\n\t\t\tconst webEndpointUrlTemplate = this._productService.webEndpointUrlTemplate;\n\t\t\tconst commit = this._productService.commit;\n\t\t\tconst quality = this._productService.quality;\n\t\t\tif (webEndpointUrlTemplate && commit && quality) {\n\t\t\t\t// Try to keep the web worker extension host iframe origin stable by storing it in workspace storage\n\t\t\t\tconst key = 'webWorkerExtensionHostIframeStableOriginUUID';\n\t\t\t\tlet stableOriginUUID = this._storageService.get(key, StorageScope.WORKSPACE);\n\t\t\t\tif (typeof stableOriginUUID === 'undefined') {\n\t\t\t\t\tstableOriginUUID = generateUuid();\n\t\t\t\t\tthis._storageService.store(key, stableOriginUUID, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t\t\t}\n\t\t\t\tconst hash = await parentOriginHash(window.origin, stableOriginUUID);\n\t\t\t\tconst baseUrl = (\n\t\t\t\t\twebEndpointUrlTemplate\n\t\t\t\t\t\t.replace('{{uuid}}', `v--${hash}`) // using `v--` as a marker to require `parentOrigin`/`salt` verification\n\t\t\t\t\t\t.replace('{{commit}}', commit)\n\t\t\t\t\t\t.replace('{{quality}}', quality)\n\t\t\t\t);\n\n\t\t\t\tconst res = new URL(`${baseUrl}/out/${iframeModulePath}${suffix}`);\n\t\t\t\tres.searchParams.set('parentOrigin', window.origin);\n\t\t\t\tres.searchParams.set('salt', stableOriginUUID);\n\t\t\t\treturn res.toString();\n\t\t\t}\n\n\t\t\tconsole.warn(`The web worker extension host is started in a same-origin iframe!`);\n\t\t}\n\n\t\tconst relativeExtensionHostIframeSrc = FileAccess.asBrowserUri(iframeModulePath);\n\t\treturn `${relativeExtensionHostIframeSrc.toString(true)}${suffix}`;\n\t}\n\n\tpublic async start(): Promise<IMessagePassingProtocol> {\n\t\tif (!this._protocolPromise) {\n\t\t\tthis._protocolPromise = this._startInsideIframe();\n\t\t\tthis._protocolPromise.then(protocol => this._protocol = protocol);\n\t\t}\n\t\treturn this._protocolPromise;\n\t}\n\n\tprivate async _startInsideIframe(): Promise<IMessagePassingProtocol> {\n\t\tconst webWorkerExtensionHostIframeSrc = await this._getWebWorkerExtensionHostIframeSrc();\n\t\tconst emitter = this._register(new Emitter<VSBuffer>());\n\n\t\tconst iframe = document.createElement('iframe');\n\t\tiframe.setAttribute('class', 'web-worker-ext-host-iframe');\n\t\tiframe.setAttribute('sandbox', 'allow-scripts allow-same-origin');\n\t\tiframe.setAttribute('allow', 'usb; serial; hid; cross-origin-isolated;');\n\t\tiframe.setAttribute('aria-hidden', 'true');\n\t\tiframe.style.display = 'none';\n\n\t\tconst vscodeWebWorkerExtHostId = generateUuid();\n\t\tiframe.setAttribute('src', `${webWorkerExtensionHostIframeSrc}&vscodeWebWorkerExtHostId=${vscodeWebWorkerExtHostId}`);\n\n\t\tconst barrier = new Barrier();\n\t\tlet port!: MessagePort;\n\t\tlet barrierError: Error | null = null;\n\t\tlet barrierHasError = false;\n\t\tlet startTimeout: any = null;\n\n\t\tconst rejectBarrier = (exitCode: number, error: Error) => {\n\t\t\tbarrierError = error;\n\t\t\tbarrierHasError = true;\n\t\t\tonUnexpectedError(barrierError);\n\t\t\tclearTimeout(startTimeout);\n\t\t\tthis._onDidExit.fire([ExtensionHostExitCode.UnexpectedError, barrierError.message]);\n\t\t\tbarrier.open();\n\t\t};\n\n\t\tconst resolveBarrier = (messagePort: MessagePort) => {\n\t\t\tport = messagePort;\n\t\t\tclearTimeout(startTimeout);\n\t\t\tbarrier.open();\n\t\t};\n\n\t\tstartTimeout = setTimeout(() => {\n\t\t\tconsole.warn(`The Web Worker Extension Host did not start in 60s, that might be a problem.`);\n\t\t}, 60000);\n\n\t\tthis._register(dom.addDisposableListener(window, 'message', (event) => {\n\t\t\tif (event.source !== iframe.contentWindow) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.data.vscodeWebWorkerExtHostId !== vscodeWebWorkerExtHostId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.data.error) {\n\t\t\t\tconst { name, message, stack } = event.data.error;\n\t\t\t\tconst err = new Error();\n\t\t\t\terr.message = message;\n\t\t\t\terr.name = name;\n\t\t\t\terr.stack = stack;\n\t\t\t\treturn rejectBarrier(ExtensionHostExitCode.UnexpectedError, err);\n\t\t\t}\n\t\t\tconst { data } = event.data;\n\t\t\tif (barrier.isOpen() || !(data instanceof MessagePort)) {\n\t\t\t\tconsole.warn('UNEXPECTED message', event);\n\t\t\t\tconst err = new Error('UNEXPECTED message');\n\t\t\t\treturn rejectBarrier(ExtensionHostExitCode.UnexpectedError, err);\n\t\t\t}\n\t\t\tresolveBarrier(data);\n\t\t}));\n\n\t\tthis._layoutService.container.appendChild(iframe);\n\t\tthis._register(toDisposable(() => iframe.remove()));\n\n\t\t// await MessagePort and use it to directly communicate\n\t\t// with the worker extension host\n\t\tawait barrier.wait();\n\n\t\tif (barrierHasError) {\n\t\t\tthrow barrierError;\n\t\t}\n\n\t\t// Send over message ports for extension API\n\t\tconst messagePorts = this._environmentService.options?.messagePorts ?? new Map();\n\t\tiframe.contentWindow!.postMessage({ type: 'vscode.init', data: messagePorts }, '*', [...messagePorts.values()]);\n\n\t\tport.onmessage = (event) => {\n\t\t\tconst { data } = event;\n\t\t\tif (!(data instanceof ArrayBuffer)) {\n\t\t\t\tconsole.warn('UNKNOWN data received', data);\n\t\t\t\tthis._onDidExit.fire([77, 'UNKNOWN data received']);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\temitter.fire(VSBuffer.wrap(new Uint8Array(data, 0, data.byteLength)));\n\t\t};\n\n\t\tconst protocol: IMessagePassingProtocol = {\n\t\t\tonMessage: emitter.event,\n\t\t\tsend: vsbuf => {\n\t\t\t\tconst data = vsbuf.buffer.buffer.slice(vsbuf.buffer.byteOffset, vsbuf.buffer.byteOffset + vsbuf.buffer.byteLength);\n\t\t\t\tport.postMessage(data, [data]);\n\t\t\t}\n\t\t};\n\n\t\treturn this._performHandshake(protocol);\n\t}\n\n\tprivate async _performHandshake(protocol: IMessagePassingProtocol): Promise<IMessagePassingProtocol> {\n\t\t// extension host handshake happens below\n\t\t// (1) <== wait for: Ready\n\t\t// (2) ==> send: init data\n\t\t// (3) <== wait for: Initialized\n\n\t\tawait Event.toPromise(Event.filter(protocol.onMessage, msg => isMessageOfType(msg, MessageType.Ready)));\n\t\tif (this._isTerminating) {\n\t\t\tthrow canceled();\n\t\t}\n\t\tprotocol.send(VSBuffer.fromString(JSON.stringify(await this._createExtHostInitData())));\n\t\tif (this._isTerminating) {\n\t\t\tthrow canceled();\n\t\t}\n\t\tawait Event.toPromise(Event.filter(protocol.onMessage, msg => isMessageOfType(msg, MessageType.Initialized)));\n\t\tif (this._isTerminating) {\n\t\t\tthrow canceled();\n\t\t}\n\n\t\treturn protocol;\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._isTerminating) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isTerminating = true;\n\t\tthis._protocol?.send(createMessageOfType(MessageType.Terminate));\n\t\tsuper.dispose();\n\t}\n\n\tgetInspectPort(): number | undefined {\n\t\treturn undefined;\n\t}\n\n\tenableInspectPort(): Promise<boolean> {\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprivate async _createExtHostInitData(): Promise<IExtensionHostInitData> {\n\t\tconst initData = await this._initDataProvider.getInitData();\n\t\tthis.extensions = initData.extensions;\n\t\tconst workspace = this._contextService.getWorkspace();\n\t\tconst nlsBaseUrl = this._productService.extensionsGallery?.nlsBaseUrl;\n\t\tlet nlsUrlWithDetails: URI | undefined = undefined;\n\t\t// Only use the nlsBaseUrl if we are using a language other than the default, English.\n\t\tif (nlsBaseUrl && this._productService.commit && !platform.Language.isDefaultVariant()) {\n\t\t\tnlsUrlWithDetails = URI.joinPath(URI.parse(nlsBaseUrl), this._productService.commit, this._productService.version, platform.Language.value());\n\t\t}\n\t\treturn {\n\t\t\tcommit: this._productService.commit,\n\t\t\tversion: this._productService.version,\n\t\t\tquality: this._productService.quality,\n\t\t\tparentPid: 0,\n\t\t\tenvironment: {\n\t\t\t\tisExtensionDevelopmentDebug: this._environmentService.debugRenderer,\n\t\t\t\tappName: this._productService.nameLong,\n\t\t\t\tappHost: this._productService.embedderIdentifier ?? (platform.isWeb ? 'web' : 'desktop'),\n\t\t\t\tappUriScheme: this._productService.urlProtocol,\n\t\t\t\tappLanguage: platform.language,\n\t\t\t\textensionTelemetryLogResource: this._environmentService.extHostTelemetryLogFile,\n\t\t\t\tisExtensionTelemetryLoggingOnly: isLoggingOnly(this._productService, this._environmentService),\n\t\t\t\textensionDevelopmentLocationURI: this._environmentService.extensionDevelopmentLocationURI,\n\t\t\t\textensionTestsLocationURI: this._environmentService.extensionTestsLocationURI,\n\t\t\t\tglobalStorageHome: this._userDataProfilesService.defaultProfile.globalStorageHome,\n\t\t\t\tworkspaceStorageHome: this._environmentService.workspaceStorageHome,\n\t\t\t\textensionLogLevel: this._environmentService.extensionLogLevel\n\t\t\t},\n\t\t\tworkspace: this._contextService.getWorkbenchState() === WorkbenchState.EMPTY ? undefined : {\n\t\t\t\tconfiguration: workspace.configuration || undefined,\n\t\t\t\tid: workspace.id,\n\t\t\t\tname: this._labelService.getWorkspaceLabel(workspace),\n\t\t\t\ttransient: workspace.transient\n\t\t\t},\n\t\t\tconsoleForward: {\n\t\t\t\tincludeStack: false,\n\t\t\t\tlogNative: this._environmentService.debugRenderer\n\t\t\t},\n\t\t\textensions: this.extensions.toSnapshot(),\n\t\t\tnlsBaseUrl: nlsUrlWithDetails,\n\t\t\ttelemetryInfo: {\n\t\t\t\tsessionId: this._telemetryService.sessionId,\n\t\t\t\tmachineId: this._telemetryService.machineId,\n\t\t\t\tfirstSessionDate: this._telemetryService.firstSessionDate,\n\t\t\t\tmsftInternal: this._telemetryService.msftInternal\n\t\t\t},\n\t\t\tlogLevel: this._logService.getLevel(),\n\t\t\tloggers: [...this._loggerService.getRegisteredLoggers()],\n\t\t\tlogsLocation: this._extensionHostLogsLocation,\n\t\t\tautoStart: (this.startup === ExtensionHostStartup.EagerAutoStart),\n\t\t\tremote: {\n\t\t\t\tauthority: this._environmentService.remoteAuthority,\n\t\t\t\tconnectionData: null,\n\t\t\t\tisRemote: false\n\t\t\t},\n\t\t\tuiKind: platform.isWeb ? UIKind.Web : UIKind.Desktop\n\t\t};\n\t}\n}\n"]}