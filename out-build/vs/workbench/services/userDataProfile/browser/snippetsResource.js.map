{"version":3,"sources":["vs/workbench/services/userDataProfile/browser/snippetsResource.ts"],"names":[],"mappings":"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","file":"snippetsResource.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { ResourceSet } from 'vs/base/common/map';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { FileOperationError, FileOperationResult, IFileService, IFileStat } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IUserDataProfile, ProfileResourceType } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { API_OPEN_EDITOR_COMMAND_ID } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { ITreeItemCheckboxState, TreeItemCollapsibleState } from 'vs/workbench/common/views';\nimport { IProfileResource, IProfileResourceChildTreeItem, IProfileResourceInitializer, IProfileResourceTreeItem, IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\n\ninterface ISnippetsContent {\n\tsnippets: IStringDictionary<string>;\n}\n\nexport class SnippetsResourceInitializer implements IProfileResourceInitializer {\n\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t}\n\n\tasync initialize(content: string): Promise<void> {\n\t\tconst snippetsContent: ISnippetsContent = JSON.parse(content);\n\t\tfor (const key in snippetsContent.snippets) {\n\t\t\tconst resource = this.uriIdentityService.extUri.joinPath(this.userDataProfileService.currentProfile.snippetsHome, key);\n\t\t\tawait this.fileService.writeFile(resource, VSBuffer.fromString(snippetsContent.snippets[key]));\n\t\t}\n\t}\n}\n\nexport class SnippetsResource implements IProfileResource {\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t}\n\n\tasync getContent(profile: IUserDataProfile, excluded?: ResourceSet): Promise<string> {\n\t\tconst snippets = await this.getSnippets(profile, excluded);\n\t\treturn JSON.stringify({ snippets });\n\t}\n\n\tasync apply(content: string, profile: IUserDataProfile): Promise<void> {\n\t\tconst snippetsContent: ISnippetsContent = JSON.parse(content);\n\t\tfor (const key in snippetsContent.snippets) {\n\t\t\tconst resource = this.uriIdentityService.extUri.joinPath(profile.snippetsHome, key);\n\t\t\tawait this.fileService.writeFile(resource, VSBuffer.fromString(snippetsContent.snippets[key]));\n\t\t}\n\t}\n\n\tprivate async getSnippets(profile: IUserDataProfile, excluded?: ResourceSet): Promise<IStringDictionary<string>> {\n\t\tconst snippets: IStringDictionary<string> = {};\n\t\tconst snippetsResources = await this.getSnippetsResources(profile, excluded);\n\t\tfor (const resource of snippetsResources) {\n\t\t\tconst key = this.uriIdentityService.extUri.relativePath(profile.snippetsHome, resource)!;\n\t\t\tconst content = await this.fileService.readFile(resource);\n\t\t\tsnippets[key] = content.value.toString();\n\t\t}\n\t\treturn snippets;\n\t}\n\n\tasync getSnippetsResources(profile: IUserDataProfile, excluded?: ResourceSet): Promise<URI[]> {\n\t\tconst snippets: URI[] = [];\n\t\tlet stat: IFileStat;\n\t\ttry {\n\t\t\tstat = await this.fileService.resolve(profile.snippetsHome);\n\t\t} catch (e) {\n\t\t\t// No snippets\n\t\t\tif (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn snippets;\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\tfor (const { resource } of stat.children || []) {\n\t\t\tif (excluded?.has(resource)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst extension = this.uriIdentityService.extUri.extname(resource);\n\t\t\tif (extension === '.json' || extension === '.code-snippets') {\n\t\t\t\tsnippets.push(resource);\n\t\t\t}\n\t\t}\n\t\treturn snippets;\n\t}\n}\n\nexport class SnippetsResourceTreeItem implements IProfileResourceTreeItem {\n\n\treadonly type = ProfileResourceType.Snippets;\n\treadonly handle = this.profile.snippetsHome.toString();\n\treadonly label = { label: localize('snippets', \"Snippets\") };\n\treadonly collapsibleState = TreeItemCollapsibleState.Collapsed;\n\tcheckbox: ITreeItemCheckboxState | undefined;\n\n\tprivate readonly excludedSnippets = new ResourceSet();\n\n\tconstructor(\n\t\tprivate readonly profile: IUserDataProfile,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) { }\n\n\tasync getChildren(): Promise<IProfileResourceChildTreeItem[] | undefined> {\n\t\tconst snippetsResources = await this.instantiationService.createInstance(SnippetsResource).getSnippetsResources(this.profile);\n\t\tconst that = this;\n\t\treturn snippetsResources.map<IProfileResourceChildTreeItem>(resource => ({\n\t\t\thandle: resource.toString(),\n\t\t\tparent: that,\n\t\t\tresourceUri: resource,\n\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\taccessibilityInformation: {\n\t\t\t\tlabel: this.uriIdentityService.extUri.basename(resource),\n\t\t\t},\n\t\t\tcheckbox: that.checkbox ? {\n\t\t\t\tget isChecked() { return !that.excludedSnippets.has(resource); },\n\t\t\t\tset isChecked(value: boolean) {\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tthat.excludedSnippets.delete(resource);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthat.excludedSnippets.add(resource);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\taccessibilityInformation: {\n\t\t\t\t\tlabel: localize('exclude', \"Select Snippet {0}\", this.uriIdentityService.extUri.basename(resource)),\n\t\t\t\t}\n\t\t\t} : undefined,\n\t\t\tcommand: {\n\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\ttitle: '',\n\t\t\t\targuments: [resource, undefined, undefined]\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync hasContent(): Promise<boolean> {\n\t\tconst snippetsResources = await this.instantiationService.createInstance(SnippetsResource).getSnippetsResources(this.profile);\n\t\treturn snippetsResources.length > 0;\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\treturn this.instantiationService.createInstance(SnippetsResource).getContent(this.profile, this.excludedSnippets);\n\t}\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn !this.profile.isDefault && !!this.profile.useDefaultFlags?.snippets;\n\t}\n\n\n}\n\n"]}