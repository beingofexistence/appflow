{"version":3,"sources":["vs/workbench/services/userDataProfile/browser/extensionsResource.ts"],"names":[],"mappings":"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","file":"extensionsResource.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { GlobalExtensionEnablementService } from 'vs/platform/extensionManagement/common/extensionEnablementService';\nimport { EXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT, IExtensionGalleryService, IExtensionIdentifier, IExtensionManagementService, IGlobalExtensionEnablementService, ILocalExtension, InstallExtensionInfo } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IUserDataProfile, ProfileResourceType } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IUserDataProfileStorageService } from 'vs/platform/userDataProfile/common/userDataProfileStorageService';\nimport { ITreeItemCheckboxState, TreeItemCollapsibleState } from 'vs/workbench/common/views';\nimport { IProfileResource, IProfileResourceChildTreeItem, IProfileResourceInitializer, IProfileResourceTreeItem, IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\n\ninterface IProfileExtension {\n\tidentifier: IExtensionIdentifier;\n\tdisplayName?: string;\n\tpreRelease?: boolean;\n\tdisabled?: boolean;\n\tversion?: string;\n}\n\nexport class ExtensionsResourceInitializer implements IProfileResourceInitializer {\n\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IGlobalExtensionEnablementService private readonly extensionEnablementService: IGlobalExtensionEnablementService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t}\n\n\tasync initialize(content: string): Promise<void> {\n\t\tconst profileExtensions: IProfileExtension[] = JSON.parse(content);\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(undefined, this.userDataProfileService.currentProfile.extensionsResource);\n\t\tconst extensionsToEnableOrDisable: { extension: IExtensionIdentifier; enable: boolean }[] = [];\n\t\tconst extensionsToInstall: IProfileExtension[] = [];\n\t\tfor (const e of profileExtensions) {\n\t\t\tconst isDisabled = this.extensionEnablementService.getDisabledExtensions().some(disabledExtension => areSameExtensions(disabledExtension, e.identifier));\n\t\t\tconst installedExtension = installedExtensions.find(installed => areSameExtensions(installed.identifier, e.identifier));\n\t\t\tif (!installedExtension || (!installedExtension.isBuiltin && installedExtension.preRelease !== e.preRelease)) {\n\t\t\t\textensionsToInstall.push(e);\n\t\t\t}\n\t\t\tif (isDisabled !== !!e.disabled) {\n\t\t\t\textensionsToEnableOrDisable.push({ extension: e.identifier, enable: !e.disabled });\n\t\t\t}\n\t\t}\n\t\tconst extensionsToUninstall: ILocalExtension[] = installedExtensions.filter(extension => !extension.isBuiltin && !profileExtensions.some(({ identifier }) => areSameExtensions(identifier, extension.identifier)));\n\t\tfor (const { extension, enable } of extensionsToEnableOrDisable) {\n\t\t\tif (enable) {\n\t\t\t\tthis.logService.trace(`Initializing Profile: Enabling extension...`, extension.id);\n\t\t\t\tawait this.extensionEnablementService.enableExtension(extension);\n\t\t\t\tthis.logService.info(`Initializing Profile: Enabled extension...`, extension.id);\n\t\t\t} else {\n\t\t\t\tthis.logService.trace(`Initializing Profile: Disabling extension...`, extension.id);\n\t\t\t\tawait this.extensionEnablementService.disableExtension(extension);\n\t\t\t\tthis.logService.info(`Initializing Profile: Disabled extension...`, extension.id);\n\t\t\t}\n\t\t}\n\t\tif (extensionsToInstall.length) {\n\t\t\tconst galleryExtensions = await this.extensionGalleryService.getExtensions(extensionsToInstall.map(e => ({ ...e.identifier, version: e.version, hasPreRelease: e.version ? undefined : e.preRelease })), CancellationToken.None);\n\t\t\tawait Promise.all(extensionsToInstall.map(async e => {\n\t\t\t\tconst extension = galleryExtensions.find(galleryExtension => areSameExtensions(galleryExtension.identifier, e.identifier));\n\t\t\t\tif (!extension) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (await this.extensionManagementService.canInstall(extension)) {\n\t\t\t\t\tthis.logService.trace(`Initializing Profile: Installing extension...`, extension.identifier.id, extension.version);\n\t\t\t\t\tawait this.extensionManagementService.installFromGallery(extension, {\n\t\t\t\t\t\tisMachineScoped: false,/* set isMachineScoped value to prevent install and sync dialog in web */\n\t\t\t\t\t\tdonotIncludePackAndDependencies: true,\n\t\t\t\t\t\tinstallGivenVersion: !!e.version,\n\t\t\t\t\t\tinstallPreReleaseVersion: e.preRelease,\n\t\t\t\t\t\tprofileLocation: this.userDataProfileService.currentProfile.extensionsResource,\n\t\t\t\t\t\tcontext: { [EXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT]: true }\n\t\t\t\t\t});\n\t\t\t\t\tthis.logService.info(`Initializing Profile: Installed extension...`, extension.identifier.id, extension.version);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info(`Initializing Profile: Skipped installing extension because it cannot be installed.`, extension.identifier.id);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\tif (extensionsToUninstall.length) {\n\t\t\tawait Promise.all(extensionsToUninstall.map(e => this.extensionManagementService.uninstall(e)));\n\t\t}\n\t}\n}\n\nexport class ExtensionsResource implements IProfileResource {\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IUserDataProfileStorageService private readonly userDataProfileStorageService: IUserDataProfileStorageService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t}\n\n\tasync getContent(profile: IUserDataProfile, exclude?: string[]): Promise<string> {\n\t\tconst extensions = await this.getLocalExtensions(profile);\n\t\treturn this.toContent(extensions, exclude);\n\t}\n\n\ttoContent(extensions: IProfileExtension[], exclude?: string[]): string {\n\t\treturn JSON.stringify(exclude?.length ? extensions.filter(e => !exclude.includes(e.identifier.id.toLowerCase())) : extensions);\n\t}\n\n\tasync apply(content: string, profile: IUserDataProfile): Promise<void> {\n\t\treturn this.withProfileScopedServices(profile, async (extensionEnablementService) => {\n\t\t\tconst profileExtensions: IProfileExtension[] = await this.getProfileExtensions(content);\n\t\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(undefined, profile.extensionsResource);\n\t\t\tconst extensionsToEnableOrDisable: { extension: IExtensionIdentifier; enable: boolean }[] = [];\n\t\t\tconst extensionsToInstall: IProfileExtension[] = [];\n\t\t\tfor (const e of profileExtensions) {\n\t\t\t\tconst isDisabled = extensionEnablementService.getDisabledExtensions().some(disabledExtension => areSameExtensions(disabledExtension, e.identifier));\n\t\t\t\tconst installedExtension = installedExtensions.find(installed => areSameExtensions(installed.identifier, e.identifier));\n\t\t\t\tif (!installedExtension || (!installedExtension.isBuiltin && installedExtension.preRelease !== e.preRelease)) {\n\t\t\t\t\textensionsToInstall.push(e);\n\t\t\t\t}\n\t\t\t\tif (isDisabled !== !!e.disabled) {\n\t\t\t\t\textensionsToEnableOrDisable.push({ extension: e.identifier, enable: !e.disabled });\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst extensionsToUninstall: ILocalExtension[] = installedExtensions.filter(extension => !extension.isBuiltin && !profileExtensions.some(({ identifier }) => areSameExtensions(identifier, extension.identifier)) && !extension.isApplicationScoped);\n\t\t\tfor (const { extension, enable } of extensionsToEnableOrDisable) {\n\t\t\t\tif (enable) {\n\t\t\t\t\tthis.logService.trace(`Importing Profile (${profile.name}): Enabling extension...`, extension.id);\n\t\t\t\t\tawait extensionEnablementService.enableExtension(extension);\n\t\t\t\t\tthis.logService.info(`Importing Profile (${profile.name}): Enabled extension...`, extension.id);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.trace(`Importing Profile (${profile.name}): Disabling extension...`, extension.id);\n\t\t\t\t\tawait extensionEnablementService.disableExtension(extension);\n\t\t\t\t\tthis.logService.info(`Importing Profile (${profile.name}): Disabled extension...`, extension.id);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (extensionsToInstall.length) {\n\t\t\t\tthis.logService.info(`Importing Profile (${profile.name}): Started installing extensions.`);\n\t\t\t\tconst galleryExtensions = await this.extensionGalleryService.getExtensions(extensionsToInstall.map(e => ({ ...e.identifier, version: e.version, hasPreRelease: e.version ? undefined : e.preRelease })), CancellationToken.None);\n\t\t\t\tconst installExtensionInfos: InstallExtensionInfo[] = [];\n\t\t\t\tawait Promise.all(extensionsToInstall.map(async e => {\n\t\t\t\t\tconst extension = galleryExtensions.find(galleryExtension => areSameExtensions(galleryExtension.identifier, e.identifier));\n\t\t\t\t\tif (!extension) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (await this.extensionManagementService.canInstall(extension)) {\n\t\t\t\t\t\tinstallExtensionInfos.push({\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tisMachineScoped: false,/* set isMachineScoped value to prevent install and sync dialog in web */\n\t\t\t\t\t\t\t\tdonotIncludePackAndDependencies: true,\n\t\t\t\t\t\t\t\tinstallGivenVersion: !!e.version,\n\t\t\t\t\t\t\t\tinstallPreReleaseVersion: e.preRelease,\n\t\t\t\t\t\t\t\tprofileLocation: profile.extensionsResource,\n\t\t\t\t\t\t\t\tcontext: { [EXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT]: true }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.info(`Importing Profile (${profile.name}): Skipped installing extension because it cannot be installed.`, extension.identifier.id);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\tif (installExtensionInfos.length) {\n\t\t\t\t\tawait this.extensionManagementService.installGalleryExtensions(installExtensionInfos);\n\t\t\t\t}\n\t\t\t\tthis.logService.info(`Importing Profile (${profile.name}): Finished installing extensions.`);\n\t\t\t}\n\t\t\tif (extensionsToUninstall.length) {\n\t\t\t\tawait Promise.all(extensionsToUninstall.map(e => this.extensionManagementService.uninstall(e)));\n\t\t\t}\n\t\t});\n\t}\n\n\tasync copy(from: IUserDataProfile, to: IUserDataProfile, disableExtensions: boolean): Promise<void> {\n\t\tawait this.extensionManagementService.copyExtensions(from.extensionsResource, to.extensionsResource);\n\t\tconst extensionsToDisable = await this.withProfileScopedServices(from, async (extensionEnablementService) =>\n\t\t\textensionEnablementService.getDisabledExtensions());\n\t\tif (disableExtensions) {\n\t\t\tconst extensions = await this.extensionManagementService.getInstalled(ExtensionType.User, to.extensionsResource);\n\t\t\tfor (const extension of extensions) {\n\t\t\t\textensionsToDisable.push(extension.identifier);\n\t\t\t}\n\t\t}\n\t\tawait this.withProfileScopedServices(to, async (extensionEnablementService) =>\n\t\t\tPromise.all(extensionsToDisable.map(extension => extensionEnablementService.disableExtension(extension))));\n\t}\n\n\tasync getLocalExtensions(profile: IUserDataProfile): Promise<IProfileExtension[]> {\n\t\treturn this.withProfileScopedServices(profile, async (extensionEnablementService) => {\n\t\t\tconst result: Array<IProfileExtension & { displayName?: string }> = [];\n\t\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(undefined, profile.extensionsResource);\n\t\t\tconst disabledExtensions = extensionEnablementService.getDisabledExtensions();\n\t\t\tfor (const extension of installedExtensions) {\n\t\t\t\tconst { identifier, preRelease } = extension;\n\t\t\t\tconst disabled = disabledExtensions.some(disabledExtension => areSameExtensions(disabledExtension, identifier));\n\t\t\t\tif (extension.isBuiltin && !disabled) {\n\t\t\t\t\t// skip enabled builtin extensions\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!extension.isBuiltin) {\n\t\t\t\t\tif (!extension.identifier.uuid) {\n\t\t\t\t\t\t// skip user extensions without uuid\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst profileExtension: IProfileExtension = { identifier, displayName: extension.manifest.displayName };\n\t\t\t\tif (disabled) {\n\t\t\t\t\tprofileExtension.disabled = true;\n\t\t\t\t}\n\t\t\t\tif (!extension.isBuiltin && extension.pinned) {\n\t\t\t\t\tprofileExtension.version = extension.manifest.version;\n\t\t\t\t}\n\t\t\t\tif (!profileExtension.version && preRelease) {\n\t\t\t\t\tprofileExtension.preRelease = true;\n\t\t\t\t}\n\t\t\t\tresult.push(profileExtension);\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tasync getProfileExtensions(content: string): Promise<IProfileExtension[]> {\n\t\treturn JSON.parse(content);\n\t}\n\n\tprivate async withProfileScopedServices<T>(profile: IUserDataProfile, fn: (extensionEnablementService: IGlobalExtensionEnablementService) => Promise<T>): Promise<T> {\n\t\treturn this.userDataProfileStorageService.withProfileScopedStorageService(profile,\n\t\t\tasync storageService => {\n\t\t\t\tconst disposables = new DisposableStore();\n\t\t\t\tconst instantiationService = this.instantiationService.createChild(new ServiceCollection([IStorageService, storageService]));\n\t\t\t\tconst extensionEnablementService = disposables.add(instantiationService.createInstance(GlobalExtensionEnablementService));\n\t\t\t\ttry {\n\t\t\t\t\treturn await fn(extensionEnablementService);\n\t\t\t\t} finally {\n\t\t\t\t\tdisposables.dispose();\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nexport abstract class ExtensionsResourceTreeItem implements IProfileResourceTreeItem {\n\n\treadonly type = ProfileResourceType.Extensions;\n\treadonly handle = ProfileResourceType.Extensions;\n\treadonly label = { label: localize('extensions', \"Extensions\") };\n\treadonly collapsibleState = TreeItemCollapsibleState.Expanded;\n\tcontextValue = ProfileResourceType.Extensions;\n\tcheckbox: ITreeItemCheckboxState | undefined;\n\n\tprotected readonly excludedExtensions = new Set<string>();\n\n\tasync getChildren(): Promise<IProfileResourceChildTreeItem[]> {\n\t\tconst extensions = (await this.getExtensions()).sort((a, b) => (a.displayName ?? a.identifier.id).localeCompare(b.displayName ?? b.identifier.id));\n\t\tconst that = this;\n\t\treturn extensions.map<IProfileResourceChildTreeItem>(e => ({\n\t\t\thandle: e.identifier.id.toLowerCase(),\n\t\t\tparent: this,\n\t\t\tlabel: { label: e.displayName || e.identifier.id },\n\t\t\tdescription: e.disabled ? localize('disabled', \"Disabled\") : undefined,\n\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\tcheckbox: that.checkbox ? {\n\t\t\t\tget isChecked() { return !that.excludedExtensions.has(e.identifier.id.toLowerCase()); },\n\t\t\t\tset isChecked(value: boolean) {\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tthat.excludedExtensions.delete(e.identifier.id.toLowerCase());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthat.excludedExtensions.add(e.identifier.id.toLowerCase());\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttooltip: localize('exclude', \"Select {0} Extension\", e.displayName || e.identifier.id),\n\t\t\t\taccessibilityInformation: {\n\t\t\t\t\tlabel: localize('exclude', \"Select {0} Extension\", e.displayName || e.identifier.id),\n\t\t\t\t}\n\t\t\t} : undefined,\n\t\t\tcommand: {\n\t\t\t\tid: 'extension.open',\n\t\t\t\ttitle: '',\n\t\t\t\targuments: [e.identifier.id, undefined, true]\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync hasContent(): Promise<boolean> {\n\t\tconst extensions = await this.getExtensions();\n\t\treturn extensions.length > 0;\n\t}\n\n\tabstract isFromDefaultProfile(): boolean;\n\tabstract getContent(): Promise<string>;\n\tprotected abstract getExtensions(): Promise<IProfileExtension[]>;\n\n}\n\nexport class ExtensionsResourceExportTreeItem extends ExtensionsResourceTreeItem {\n\n\tconstructor(\n\t\tprivate readonly profile: IUserDataProfile,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn !this.profile.isDefault && !!this.profile.useDefaultFlags?.extensions;\n\t}\n\n\tprotected getExtensions(): Promise<IProfileExtension[]> {\n\t\treturn this.instantiationService.createInstance(ExtensionsResource).getLocalExtensions(this.profile);\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\treturn this.instantiationService.createInstance(ExtensionsResource).getContent(this.profile, [...this.excludedExtensions.values()]);\n\t}\n\n}\n\nexport class ExtensionsResourceImportTreeItem extends ExtensionsResourceTreeItem {\n\n\tconstructor(\n\t\tprivate readonly content: string,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn false;\n\t}\n\n\tprotected getExtensions(): Promise<IProfileExtension[]> {\n\t\treturn this.instantiationService.createInstance(ExtensionsResource).getProfileExtensions(this.content);\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\tconst extensionsResource = this.instantiationService.createInstance(ExtensionsResource);\n\t\tconst extensions = await extensionsResource.getProfileExtensions(this.content);\n\t\treturn extensionsResource.toContent(extensions, [...this.excludedExtensions.values()]);\n\t}\n\n}\n"]}