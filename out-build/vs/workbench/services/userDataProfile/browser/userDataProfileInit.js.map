{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/userDataProfile/browser/userDataProfileInit.ts"],"names":[],"mappings":"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","file":"userDataProfileInit.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Barrier, Promises } from 'vs/base/common/async';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IUserDataInitializer } from 'vs/workbench/services/userData/browser/userDataInit';\nimport { IProfileResourceInitializer, IUserDataProfileService, IUserDataProfileTemplate } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { SettingsResourceInitializer } from 'vs/workbench/services/userDataProfile/browser/settingsResource';\nimport { GlobalStateResourceInitializer } from 'vs/workbench/services/userDataProfile/browser/globalStateResource';\nimport { KeybindingsResourceInitializer } from 'vs/workbench/services/userDataProfile/browser/keybindingsResource';\nimport { TasksResourceInitializer } from 'vs/workbench/services/userDataProfile/browser/tasksResource';\nimport { SnippetsResourceInitializer } from 'vs/workbench/services/userDataProfile/browser/snippetsResource';\nimport { ExtensionsResourceInitializer } from 'vs/workbench/services/userDataProfile/browser/extensionsResource';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { isString } from 'vs/base/common/types';\nimport { IRequestService, asJson } from 'vs/platform/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { ProfileResourceType } from 'vs/platform/userDataProfile/common/userDataProfile';\n\nexport class UserDataProfileInitializer implements IUserDataInitializer {\n\n\t_serviceBrand: any;\n\n\tprivate readonly initialized: ProfileResourceType[] = [];\n\tprivate readonly initializationFinished = new Barrier();\n\n\tconstructor(\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t) {\n\t}\n\n\tasync whenInitializationFinished(): Promise<void> {\n\t\tawait this.initializationFinished.wait();\n\t}\n\n\tasync requiresInitialization(): Promise<boolean> {\n\t\tif (!this.environmentService.options?.profile?.contents) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.storageService.isNew(StorageScope.PROFILE)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync initializeRequiredResources(): Promise<void> {\n\t\tthis.logService.trace(`UserDataProfileInitializer#initializeRequiredResources`);\n\t\tconst promises = [];\n\t\tconst profileTemplate = await this.getProfileTemplate();\n\t\tif (profileTemplate?.settings) {\n\t\t\tpromises.push(this.initialize(new SettingsResourceInitializer(this.userDataProfileService, this.fileService, this.logService), profileTemplate.settings, ProfileResourceType.Settings));\n\t\t}\n\t\tif (profileTemplate?.globalState) {\n\t\t\tpromises.push(this.initialize(new GlobalStateResourceInitializer(this.storageService), profileTemplate.globalState, ProfileResourceType.GlobalState));\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\tasync initializeOtherResources(instantiationService: IInstantiationService): Promise<void> {\n\t\ttry {\n\t\t\tthis.logService.trace(`UserDataProfileInitializer#initializeOtherResources`);\n\t\t\tconst promises = [];\n\t\t\tconst profileTemplate = await this.getProfileTemplate();\n\t\t\tif (profileTemplate?.keybindings) {\n\t\t\t\tpromises.push(this.initialize(new KeybindingsResourceInitializer(this.userDataProfileService, this.fileService, this.logService), profileTemplate.keybindings, ProfileResourceType.Keybindings));\n\t\t\t}\n\t\t\tif (profileTemplate?.tasks) {\n\t\t\t\tpromises.push(this.initialize(new TasksResourceInitializer(this.userDataProfileService, this.fileService, this.logService), profileTemplate.tasks, ProfileResourceType.Tasks));\n\t\t\t}\n\t\t\tif (profileTemplate?.snippets) {\n\t\t\t\tpromises.push(this.initialize(new SnippetsResourceInitializer(this.userDataProfileService, this.fileService, this.uriIdentityService), profileTemplate.snippets, ProfileResourceType.Snippets));\n\t\t\t}\n\t\t\tpromises.push(this.initializeInstalledExtensions(instantiationService));\n\t\t\tawait Promises.settled(promises);\n\t\t} finally {\n\t\t\tthis.initializationFinished.open();\n\t\t}\n\t}\n\n\tprivate initializeInstalledExtensionsPromise: Promise<void> | undefined;\n\tasync initializeInstalledExtensions(instantiationService: IInstantiationService): Promise<void> {\n\t\tif (!this.initializeInstalledExtensionsPromise) {\n\t\t\tconst profileTemplate = await this.getProfileTemplate();\n\t\t\tif (profileTemplate?.extensions) {\n\t\t\t\tthis.initializeInstalledExtensionsPromise = this.initialize(instantiationService.createInstance(ExtensionsResourceInitializer), profileTemplate.extensions, ProfileResourceType.Extensions);\n\t\t\t} else {\n\t\t\t\tthis.initializeInstalledExtensionsPromise = Promise.resolve();\n\t\t\t}\n\n\t\t}\n\t\treturn this.initializeInstalledExtensionsPromise;\n\t}\n\n\tprivate profileTemplatePromise: Promise<IUserDataProfileTemplate | null> | undefined;\n\tprivate getProfileTemplate(): Promise<IUserDataProfileTemplate | null> {\n\t\tif (!this.profileTemplatePromise) {\n\t\t\tthis.profileTemplatePromise = this.doGetProfileTemplate();\n\t\t}\n\t\treturn this.profileTemplatePromise;\n\t}\n\n\tprivate async doGetProfileTemplate(): Promise<IUserDataProfileTemplate | null> {\n\t\tif (!this.environmentService.options?.profile?.contents) {\n\t\t\treturn null;\n\t\t}\n\t\tif (isString(this.environmentService.options.profile.contents)) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(this.environmentService.options.profile.contents);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tconst url = URI.revive(this.environmentService.options.profile.contents).toString(true);\n\t\t\tconst context = await this.requestService.request({ type: 'GET', url }, CancellationToken.None);\n\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\treturn await asJson(context);\n\t\t\t} else {\n\t\t\t\tthis.logService.warn(`UserDataProfileInitializer: Failed to get profile from URL: ${url}. Status code: ${context.res.statusCode}.`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async initialize(initializer: IProfileResourceInitializer, content: string, profileResource: ProfileResourceType): Promise<void> {\n\t\ttry {\n\t\t\tif (this.initialized.includes(profileResource)) {\n\t\t\t\tthis.logService.info(`UserDataProfileInitializer: ${profileResource} initialized already.`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.initialized.push(profileResource);\n\t\t\tthis.logService.trace(`UserDataProfileInitializer: Initializing ${profileResource}`);\n\t\t\tawait initializer.initialize(content);\n\t\t\tthis.logService.info(`UserDataProfileInitializer: Initialized ${profileResource}`);\n\t\t} catch (error) {\n\t\t\tthis.logService.info(`UserDataProfileInitializer: Error while initializing ${profileResource}`);\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n}\n"]}