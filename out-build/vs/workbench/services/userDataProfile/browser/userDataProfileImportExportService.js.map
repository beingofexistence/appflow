{"version":3,"sources":["vs/workbench/services/userDataProfile/browser/userDataProfileImportExportService.ts"],"names":[],"mappings":"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","file":"userDataProfileImportExportService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/userDataProfileView';\nimport { localize } from 'vs/nls';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as DOM from 'vs/base/browser/dom';\nimport { IUserDataProfileImportExportService, PROFILE_FILTER, PROFILE_EXTENSION, IUserDataProfileContentHandler, IS_PROFILE_IMPORT_IN_PROGRESS_CONTEXT, PROFILES_TITLE, defaultUserDataProfileIcon, IUserDataProfileService, IProfileResourceTreeItem, PROFILES_CATEGORY, IUserDataProfileManagementService, IS_PROFILE_EXPORT_IN_PROGRESS_CONTEXT, ISaveProfileResult, IProfileImportOptions, PROFILE_URL_AUTHORITY, toUserDataProfileUri } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IDialogService, IFileDialogService, IPromptButton } from 'vs/platform/dialogs/common/dialogs';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Extensions, ITreeItem, ITreeViewDataProvider, ITreeViewDescriptor, IViewContainersRegistry, IViewDescriptorService, IViewsRegistry, IViewsService, TreeItemCollapsibleState, ViewContainer, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { IUserDataProfile, IUserDataProfileOptions, IUserDataProfilesService, ProfileResourceType, UseDefaultProfileFlags, isUserDataProfile, toUserDataProfile } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { ContextKeyExpr, IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { TreeView, TreeViewPane } from 'vs/workbench/browser/parts/views/treeView';\nimport { SettingsResource, SettingsResourceTreeItem } from 'vs/workbench/services/userDataProfile/browser/settingsResource';\nimport { KeybindingsResource, KeybindingsResourceTreeItem } from 'vs/workbench/services/userDataProfile/browser/keybindingsResource';\nimport { SnippetsResource, SnippetsResourceTreeItem } from 'vs/workbench/services/userDataProfile/browser/snippetsResource';\nimport { TasksResource, TasksResourceTreeItem } from 'vs/workbench/services/userDataProfile/browser/tasksResource';\nimport { ExtensionsResource, ExtensionsResourceExportTreeItem, ExtensionsResourceImportTreeItem, ExtensionsResourceTreeItem } from 'vs/workbench/services/userDataProfile/browser/extensionsResource';\nimport { GlobalStateResource, GlobalStateResourceExportTreeItem, GlobalStateResourceImportTreeItem, GlobalStateResourceTreeItem } from 'vs/workbench/services/userDataProfile/browser/globalStateResource';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { Button } from 'vs/base/browser/ui/button/button';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IContextMenuService, IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { defaultButtonStyles, defaultSelectBoxStyles } from 'vs/platform/theme/browser/defaultStyles';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { EditorsOrder } from 'vs/workbench/common/editor';\nimport { getErrorMessage, onUnexpectedError } from 'vs/base/common/errors';\nimport { IProgressService, ProgressLocation } from 'vs/platform/progress/common/progress';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IQuickInputService, IQuickPickItem, QuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { joinPath } from 'vs/base/common/resources';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport Severity from 'vs/base/common/severity';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IURLHandler, IURLService } from 'vs/platform/url/common/url';\nimport { asText, IRequestService } from 'vs/platform/request/common/request';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { Mutable, isUndefined } from 'vs/base/common/types';\nimport { Action, ActionRunner, IAction, IActionRunner } from 'vs/base/common/actions';\nimport { isWeb } from 'vs/base/common/platform';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { Barrier } from 'vs/base/common/async';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { MarkdownString } from 'vs/base/common/htmlContent';\nimport { renderMarkdown } from 'vs/base/browser/markdownRenderer';\nimport { showWindowLogActionId } from 'vs/workbench/services/log/common/logConstants';\nimport { ISelectOptionItem, SelectBox } from 'vs/base/browser/ui/selectBox/selectBox';\n\ninterface IUserDataProfileTemplate {\n\treadonly name: string;\n\treadonly shortName?: string;\n\treadonly settings?: string;\n\treadonly keybindings?: string;\n\treadonly tasks?: string;\n\treadonly snippets?: string;\n\treadonly globalState?: string;\n\treadonly extensions?: string;\n}\n\nfunction isUserDataProfileTemplate(thing: unknown): thing is IUserDataProfileTemplate {\n\tconst candidate = thing as IUserDataProfileTemplate | undefined;\n\n\treturn !!(candidate && typeof candidate === 'object'\n\t\t&& (candidate.name && typeof candidate.name === 'string')\n\t\t&& (isUndefined(candidate.shortName) || typeof candidate.shortName === 'string')\n\t\t&& (isUndefined(candidate.settings) || typeof candidate.settings === 'string')\n\t\t&& (isUndefined(candidate.globalState) || typeof candidate.globalState === 'string')\n\t\t&& (isUndefined(candidate.extensions) || typeof candidate.extensions === 'string'));\n}\n\nconst EXPORT_PROFILE_PREVIEW_VIEW = 'workbench.views.profiles.export.preview';\nconst IMPORT_PROFILE_PREVIEW_VIEW = 'workbench.views.profiles.import.preview';\n\nexport class UserDataProfileImportExportService extends Disposable implements IUserDataProfileImportExportService, IURLHandler {\n\n\tprivate static readonly PROFILE_URL_AUTHORITY_PREFIX = 'profile-';\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate profileContentHandlers = new Map<string, IUserDataProfileContentHandler>();\n\tprivate readonly isProfileExportInProgressContextKey: IContextKey<boolean>;\n\tprivate readonly isProfileImportInProgressContextKey: IContextKey<boolean>;\n\n\tprivate readonly viewContainer: ViewContainer;\n\tprivate readonly fileUserDataProfileContentHandler: FileUserDataProfileContentHandler;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IUserDataProfileManagementService private readonly userDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IClipboardService private readonly clipboardService: IClipboardService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IURLService urlService: IURLService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.registerProfileContentHandler(Schemas.file, this.fileUserDataProfileContentHandler = instantiationService.createInstance(FileUserDataProfileContentHandler));\n\t\tthis.isProfileExportInProgressContextKey = IS_PROFILE_EXPORT_IN_PROGRESS_CONTEXT.bindTo(contextKeyService);\n\t\tthis.isProfileImportInProgressContextKey = IS_PROFILE_IMPORT_IN_PROGRESS_CONTEXT.bindTo(contextKeyService);\n\n\t\tthis.viewContainer = Registry.as<IViewContainersRegistry>(Extensions.ViewContainersRegistry).registerViewContainer(\n\t\t\t{\n\t\t\t\tid: 'userDataProfiles',\n\t\t\t\ttitle: PROFILES_TITLE,\n\t\t\t\tctorDescriptor: new SyncDescriptor(\n\t\t\t\t\tViewPaneContainer,\n\t\t\t\t\t['userDataProfiles', { mergeViewWithContainerWhenSingleView: true }]\n\t\t\t\t),\n\t\t\t\ticon: defaultUserDataProfileIcon,\n\t\t\t\thideIfEmpty: true,\n\t\t\t}, ViewContainerLocation.Sidebar);\n\n\t\turlService.registerHandler(this);\n\t}\n\n\tprivate isProfileURL(uri: URI): boolean {\n\t\treturn uri.authority === PROFILE_URL_AUTHORITY || new RegExp(`^${UserDataProfileImportExportService.PROFILE_URL_AUTHORITY_PREFIX}`).test(uri.authority);\n\t}\n\n\tasync handleURL(uri: URI): Promise<boolean> {\n\t\tif (this.isProfileURL(uri)) {\n\t\t\ttry {\n\t\t\t\tawait this.importProfile(uri);\n\t\t\t} catch (error) {\n\t\t\t\tthis.notificationService.error(localize('profile import error', \"Error while importing profile: {0}\", getErrorMessage(error)));\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tregisterProfileContentHandler(id: string, profileContentHandler: IUserDataProfileContentHandler): IDisposable {\n\t\tif (this.profileContentHandlers.has(id)) {\n\t\t\tthrow new Error(`Profile content handler with id '${id}' already registered.`);\n\t\t}\n\t\tthis.profileContentHandlers.set(id, profileContentHandler);\n\t\treturn toDisposable(() => this.unregisterProfileContentHandler(id));\n\t}\n\n\tunregisterProfileContentHandler(id: string): void {\n\t\tthis.profileContentHandlers.delete(id);\n\t}\n\n\tasync exportProfile(): Promise<void> {\n\t\tif (this.isProfileExportInProgressContextKey.get()) {\n\t\t\tthis.logService.warn('Profile export already in progress.');\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.showProfileContents();\n\t}\n\n\tasync importProfile(uri: URI, options?: IProfileImportOptions): Promise<void> {\n\t\tif (this.isProfileImportInProgressContextKey.get()) {\n\t\t\tthis.notificationService.warn('Profile import already in progress.');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isProfileImportInProgressContextKey.set(true);\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(toDisposable(() => this.isProfileImportInProgressContextKey.set(false)));\n\n\t\ttry {\n\t\t\tconst mode = options?.mode ?? 'preview';\n\t\t\tconst profileTemplate = await this.progressService.withProgress({\n\t\t\t\tlocation: ProgressLocation.Window,\n\t\t\t\tcommand: showWindowLogActionId,\n\t\t\t\ttitle: localize('resolving uri', \"{0}: Resolving profile content...\", options?.mode ? localize('preview profile', \"Preview Profile\") : localize('import profile', \"Create Profile\")),\n\t\t\t}, () => this.resolveProfileTemplate(uri, options));\n\t\t\tif (!profileTemplate) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (mode === 'preview') {\n\t\t\t\tawait this.previewProfile(profileTemplate, options);\n\t\t\t} else if (mode === 'apply') {\n\t\t\t\tawait this.createAndSwitch(profileTemplate, false, true, options, localize('create profile', \"Create Profile\"));\n\t\t\t} else if (mode === 'both') {\n\t\t\t\tawait this.importAndPreviewProfile(uri, profileTemplate, options);\n\t\t\t}\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tcreateProfile(from?: IUserDataProfile | URI): Promise<void> {\n\t\treturn this.saveProfile(undefined, from);\n\t}\n\n\teditProfile(profile: IUserDataProfile): Promise<void> {\n\t\treturn this.saveProfile(profile);\n\t}\n\n\tprivate saveProfile(profile: IUserDataProfile): Promise<void>;\n\tprivate saveProfile(profile?: IUserDataProfile, source?: IUserDataProfile | URI | IUserDataProfileTemplate): Promise<void>;\n\tprivate async saveProfile(profile?: IUserDataProfile, source?: IUserDataProfile | URI | Mutable<IUserDataProfileTemplate>): Promise<void> {\n\n\t\ttype SaveProfileInfoClassification = {\n\t\t\towner: 'sandy081';\n\t\t\tcomment: 'Report when profile is about to be saved';\n\t\t};\n\t\ttype CreateProfileInfoClassification = {\n\t\t\towner: 'sandy081';\n\t\t\tcomment: 'Report when profile is about to be created';\n\t\t\tsource: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Type of profile source' };\n\t\t};\n\t\ttype CreateProfileInfoEvent = {\n\t\t\tsource: string | undefined;\n\t\t};\n\t\tconst createProfileTelemetryData: CreateProfileInfoEvent = { source: source instanceof URI ? 'template' : isUserDataProfile(source) ? 'profile' : source ? 'external' : undefined };\n\n\t\tif (profile) {\n\t\t\tthis.telemetryService.publicLog2<{}, SaveProfileInfoClassification>('userDataProfile.startEdit');\n\t\t} else {\n\t\t\tthis.telemetryService.publicLog2<CreateProfileInfoEvent, CreateProfileInfoClassification>('userDataProfile.startCreate', createProfileTelemetryData);\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst title = profile ? localize('save profile', \"Edit {0} Profile...\", profile.name) : localize('create new profle', \"Create New Profile...\");\n\n\t\tconst settings: IQuickPickItem & { id: ProfileResourceType } = { id: ProfileResourceType.Settings, label: localize('settings', \"Settings\"), picked: !profile?.useDefaultFlags?.settings };\n\t\tconst keybindings: IQuickPickItem & { id: ProfileResourceType } = { id: ProfileResourceType.Keybindings, label: localize('keybindings', \"Keyboard Shortcuts\"), picked: !profile?.useDefaultFlags?.keybindings };\n\t\tconst snippets: IQuickPickItem & { id: ProfileResourceType } = { id: ProfileResourceType.Snippets, label: localize('snippets', \"User Snippets\"), picked: !profile?.useDefaultFlags?.snippets };\n\t\tconst tasks: IQuickPickItem & { id: ProfileResourceType } = { id: ProfileResourceType.Tasks, label: localize('tasks', \"User Tasks\"), picked: !profile?.useDefaultFlags?.tasks };\n\t\tconst extensions: IQuickPickItem & { id: ProfileResourceType } = { id: ProfileResourceType.Extensions, label: localize('extensions', \"Extensions\"), picked: !profile?.useDefaultFlags?.extensions };\n\t\tconst resources = [settings, keybindings, snippets, tasks, extensions];\n\n\t\tconst quickPick = this.quickInputService.createQuickPick();\n\t\tquickPick.title = title;\n\t\tquickPick.placeholder = localize('name placeholder', \"Profile name\");\n\t\tquickPick.value = profile?.name ?? (isUserDataProfileTemplate(source) ? this.generateProfileName(source.name) : '');\n\t\tquickPick.canSelectMany = true;\n\t\tquickPick.matchOnDescription = false;\n\t\tquickPick.matchOnDetail = false;\n\t\tquickPick.matchOnLabel = false;\n\t\tquickPick.sortByLabel = false;\n\t\tquickPick.hideCountBadge = true;\n\t\tquickPick.ok = false;\n\t\tquickPick.customButton = true;\n\t\tquickPick.hideCheckAll = true;\n\t\tquickPick.ignoreFocusOut = true;\n\t\tquickPick.customLabel = profile ? localize('save', \"Save\") : localize('create', \"Create\");\n\t\tquickPick.description = localize('customise the profile', \"Choose what to configure in your Profile:\");\n\t\tquickPick.items = [...resources];\n\n\t\tconst update = () => {\n\t\t\tquickPick.items = resources;\n\t\t\tquickPick.selectedItems = resources.filter(item => item.picked);\n\t\t};\n\t\tupdate();\n\n\t\tconst validate = () => {\n\t\t\tif (!profile && this.userDataProfilesService.profiles.some(p => p.name === quickPick.value)) {\n\t\t\t\tquickPick.validationMessage = localize('profileExists', \"Profile with name {0} already exists.\", quickPick.value);\n\t\t\t\tquickPick.severity = Severity.Warning;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (resources.every(resource => !resource.picked)) {\n\t\t\t\tquickPick.validationMessage = localize('invalid configurations', \"The profile should contain at least one configuration.\");\n\t\t\t\tquickPick.severity = Severity.Warning;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tquickPick.severity = Severity.Ignore;\n\t\t\tquickPick.validationMessage = undefined;\n\t\t};\n\n\t\tdisposables.add(quickPick.onDidChangeSelection(items => {\n\t\t\tlet needUpdate = false;\n\t\t\tfor (const resource of resources) {\n\t\t\t\tresource.picked = items.includes(resource);\n\t\t\t\tconst description = resource.picked ? undefined : localize('use default profile', \"Using Default Profile\");\n\t\t\t\tif (resource.description !== description) {\n\t\t\t\t\tresource.description = description;\n\t\t\t\t\tneedUpdate = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needUpdate) {\n\t\t\t\tupdate();\n\t\t\t}\n\t\t\tvalidate();\n\t\t}));\n\n\t\tdisposables.add(quickPick.onDidChangeValue(validate));\n\n\t\tlet result: { name: string; items: ReadonlyArray<IQuickPickItem> } | undefined;\n\t\tdisposables.add(Event.any(quickPick.onDidCustom, quickPick.onDidAccept)(() => {\n\t\t\tconst name = quickPick.value.trim();\n\t\t\tif (!name) {\n\t\t\t\tquickPick.validationMessage = localize('name required', \"Profile name is required and must be a non-empty value.\");\n\t\t\t\tquickPick.severity = Severity.Error;\n\t\t\t}\n\t\t\tif (quickPick.validationMessage) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = { name, items: quickPick.selectedItems };\n\t\t\tquickPick.hide();\n\t\t\tquickPick.severity = Severity.Ignore;\n\t\t\tquickPick.validationMessage = undefined;\n\t\t}));\n\n\t\tif (!profile && !isUserDataProfileTemplate(source)) {\n\t\t\tconst domNode = DOM.$('.profile-type-widget');\n\t\t\tDOM.append(domNode, DOM.$('.profile-type-create-label', undefined, localize('create from', \"Copy from:\")));\n\t\t\tconst separator = { text: '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500', isDisabled: true };\n\t\t\tconst profileOptions: (ISelectOptionItem & { id?: string; source?: IUserDataProfile | URI })[] = [];\n\t\t\tprofileOptions.push({ text: localize('empty profile', \"None\") });\n\t\t\tconst templates = await this.userDataProfileManagementService.getBuiltinProfileTemplates();\n\t\t\tif (templates.length) {\n\t\t\t\tprofileOptions.push({ ...separator, decoratorRight: localize('from templates', \"Profile Templates\") });\n\t\t\t\tfor (const template of templates) {\n\t\t\t\t\tprofileOptions.push({ text: template.name, id: template.url, source: URI.parse(template.url) });\n\t\t\t\t}\n\t\t\t}\n\t\t\tprofileOptions.push({ ...separator, decoratorRight: localize('from existing profiles', \"Existing Profiles\") });\n\t\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\t\tprofileOptions.push({ text: profile.name, id: profile.id, source: profile });\n\t\t\t}\n\n\t\t\tconst findOptionIndex = () => {\n\t\t\t\tconst index = profileOptions.findIndex(option => {\n\t\t\t\t\tif (source instanceof URI) {\n\t\t\t\t\t\treturn option.source instanceof URI && this.uriIdentityService.extUri.isEqual(option.source, source);\n\t\t\t\t\t} else if (isUserDataProfile(source)) {\n\t\t\t\t\t\treturn option.id === source.id;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\treturn index > -1 ? index : 0;\n\t\t\t};\n\n\t\t\tconst initialIndex = findOptionIndex();\n\t\t\tconst selectBox = disposables.add(this.instantiationService.createInstance(SelectBox, profileOptions, initialIndex, this.contextViewService, defaultSelectBoxStyles, { useCustomDrawn: true }));\n\t\t\tselectBox.render(DOM.append(domNode, DOM.$('.profile-type-select-container')));\n\t\t\tquickPick.widget = domNode;\n\n\t\t\tif (profileOptions[initialIndex].source) {\n\t\t\t\tquickPick.value = this.generateProfileName(profileOptions[initialIndex].text);\n\t\t\t}\n\n\t\t\tconst updateOptions = () => {\n\t\t\t\tconst option = profileOptions[findOptionIndex()];\n\t\t\t\tfor (const resource of resources) {\n\t\t\t\t\tresource.picked = option.source && !(option.source instanceof URI) ? !option.source?.useDefaultFlags?.[resource.id] : true;\n\t\t\t\t}\n\t\t\t\tupdate();\n\t\t\t};\n\n\t\t\tupdateOptions();\n\t\t\tdisposables.add(selectBox.onDidSelect(({ index }) => {\n\t\t\t\tsource = profileOptions[index].source;\n\t\t\t\tupdateOptions();\n\t\t\t}));\n\t\t}\n\n\t\tquickPick.show();\n\n\t\tawait new Promise<void>((c, e) => {\n\t\t\tdisposables.add(quickPick.onDidHide(() => {\n\t\t\t\tdisposables.dispose();\n\t\t\t\tc();\n\t\t\t}));\n\t\t});\n\n\t\tif (!result) {\n\t\t\tif (profile) {\n\t\t\t\tthis.telemetryService.publicLog2<{}, SaveProfileInfoClassification>('userDataProfile.cancelEdit');\n\t\t\t} else {\n\t\t\t\tthis.telemetryService.publicLog2<CreateProfileInfoEvent, CreateProfileInfoClassification>('userDataProfile.cancelCreate', createProfileTelemetryData);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst useDefaultFlags: UseDefaultProfileFlags | undefined = result.items.length === resources.length\n\t\t\t\t? undefined\n\t\t\t\t: {\n\t\t\t\t\tsettings: !result.items.includes(settings),\n\t\t\t\t\tkeybindings: !result.items.includes(keybindings),\n\t\t\t\t\tsnippets: !result.items.includes(snippets),\n\t\t\t\t\ttasks: !result.items.includes(tasks),\n\t\t\t\t\textensions: !result.items.includes(extensions)\n\t\t\t\t};\n\t\t\tif (profile) {\n\t\t\t\tawait this.userDataProfileManagementService.updateProfile(profile, { name: result.name, useDefaultFlags: profile.useDefaultFlags && !useDefaultFlags ? {} : useDefaultFlags });\n\t\t\t} else {\n\t\t\t\tif (source instanceof URI) {\n\t\t\t\t\tthis.telemetryService.publicLog2<CreateProfileInfoEvent, CreateProfileInfoClassification>('userDataProfile.createFromTemplate', createProfileTelemetryData);\n\t\t\t\t\tawait this.importProfile(source, { mode: 'apply', name: result.name, useDefaultFlags });\n\t\t\t\t} else if (isUserDataProfile(source)) {\n\t\t\t\t\tthis.telemetryService.publicLog2<CreateProfileInfoEvent, CreateProfileInfoClassification>('userDataProfile.createFromProfile', createProfileTelemetryData);\n\t\t\t\t\tawait this.createFromProfile(source, result.name, { useDefaultFlags });\n\t\t\t\t} else if (isUserDataProfileTemplate(source)) {\n\t\t\t\t\tsource.name = result.name;\n\t\t\t\t\tthis.telemetryService.publicLog2<CreateProfileInfoEvent, CreateProfileInfoClassification>('userDataProfile.createFromExternalTemplate', createProfileTelemetryData);\n\t\t\t\t\tawait this.createAndSwitch(source, false, true, { useDefaultFlags }, localize('create profile', \"Create Profile\"));\n\t\t\t\t} else {\n\t\t\t\t\tthis.telemetryService.publicLog2<CreateProfileInfoEvent, CreateProfileInfoClassification>('userDataProfile.createEmptyProfile', createProfileTelemetryData);\n\t\t\t\t\tawait this.userDataProfileManagementService.createAndEnterProfile(result.name, { useDefaultFlags });\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.notificationService.error(error);\n\t\t}\n\t}\n\n\tasync showProfileContents(): Promise<void> {\n\t\tconst view = this.viewsService.getViewWithId(EXPORT_PROFILE_PREVIEW_VIEW);\n\t\tif (view) {\n\t\t\tthis.viewsService.openView(view.id, true);\n\t\t\treturn;\n\t\t}\n\t\tconst disposables = new DisposableStore();\n\t\ttry {\n\t\t\tconst userDataProfilesExportState = disposables.add(this.instantiationService.createInstance(UserDataProfileExportState, this.userDataProfileService.currentProfile));\n\t\t\tconst barrier = new Barrier();\n\t\t\tconst exportAction = new BarrierAction(barrier, new Action('export', localize('export', \"Export\"), undefined, true, async () => {\n\t\t\t\texportAction.enabled = false;\n\t\t\t\ttry {\n\t\t\t\t\tawait this.doExportProfile(userDataProfilesExportState);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.notificationService.error(error);\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}), this.notificationService);\n\t\t\tconst closeAction = new BarrierAction(barrier, new Action('close', localize('close', \"Close\")), this.notificationService);\n\t\t\tawait this.showProfilePreviewView(EXPORT_PROFILE_PREVIEW_VIEW, userDataProfilesExportState.profile.name, exportAction, closeAction, true, userDataProfilesExportState);\n\t\t\tdisposables.add(this.userDataProfileService.onDidChangeCurrentProfile(e => barrier.open()));\n\t\t\tawait barrier.wait();\n\t\t\tawait this.hideProfilePreviewView(EXPORT_PROFILE_PREVIEW_VIEW);\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tprivate async createFromProfile(profile: IUserDataProfile, name: string, options?: IUserDataProfileOptions): Promise<void> {\n\t\tconst userDataProfilesExportState = this.instantiationService.createInstance(UserDataProfileExportState, profile);\n\t\ttry {\n\t\t\tconst profileTemplate = await userDataProfilesExportState.getProfileTemplate(name, undefined);\n\t\t\tawait this.progressService.withProgress({\n\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\tdelay: 500,\n\t\t\t\tsticky: true,\n\t\t\t}, async progress => {\n\t\t\t\tconst reportProgress = (message: string) => progress.report({ message: localize('create from profile', \"Create Profile: {0}\", message) });\n\t\t\t\tconst profile = await this.doCreateProfile(profileTemplate, false, false, { useDefaultFlags: options?.useDefaultFlags }, reportProgress);\n\t\t\t\tif (profile) {\n\t\t\t\t\treportProgress(localize('progress extensions', \"Applying Extensions...\"));\n\t\t\t\t\tawait this.instantiationService.createInstance(ExtensionsResource).copy(this.userDataProfileService.currentProfile, profile, false);\n\n\t\t\t\t\treportProgress(localize('switching profile', \"Switching Profile...\"));\n\t\t\t\t\tawait this.userDataProfileManagementService.switchProfile(profile);\n\t\t\t\t}\n\t\t\t});\n\t\t} finally {\n\t\t\tuserDataProfilesExportState.dispose();\n\t\t}\n\t}\n\n\tasync createTroubleshootProfile(): Promise<void> {\n\t\tconst userDataProfilesExportState = this.instantiationService.createInstance(UserDataProfileExportState, this.userDataProfileService.currentProfile);\n\t\ttry {\n\t\t\tconst profileTemplate = await userDataProfilesExportState.getProfileTemplate(localize('troubleshoot issue', \"Troubleshoot Issue\"), undefined);\n\t\t\tawait this.progressService.withProgress({\n\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\tdelay: 1000,\n\t\t\t\tsticky: true,\n\t\t\t}, async progress => {\n\t\t\t\tconst reportProgress = (message: string) => progress.report({ message: localize('troubleshoot profile progress', \"Setting up Troubleshoot Profile: {0}\", message) });\n\t\t\t\tconst profile = await this.doCreateProfile(profileTemplate, true, false, { useDefaultFlags: this.userDataProfileService.currentProfile.useDefaultFlags }, reportProgress);\n\t\t\t\tif (profile) {\n\t\t\t\t\treportProgress(localize('progress extensions', \"Applying Extensions...\"));\n\t\t\t\t\tawait this.instantiationService.createInstance(ExtensionsResource).copy(this.userDataProfileService.currentProfile, profile, true);\n\n\t\t\t\t\treportProgress(localize('switching profile', \"Switching Profile...\"));\n\t\t\t\t\tawait this.userDataProfileManagementService.switchProfile(profile);\n\t\t\t\t}\n\t\t\t});\n\t\t} finally {\n\t\t\tuserDataProfilesExportState.dispose();\n\t\t}\n\t}\n\n\tprivate async doExportProfile(userDataProfilesExportState: UserDataProfileExportState): Promise<void> {\n\t\tconst profile = await userDataProfilesExportState.getProfileToExport();\n\t\tif (!profile) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isProfileExportInProgressContextKey.set(true);\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(toDisposable(() => this.isProfileExportInProgressContextKey.set(false)));\n\n\t\ttry {\n\t\t\tawait this.progressService.withProgress({\n\t\t\t\tlocation: EXPORT_PROFILE_PREVIEW_VIEW,\n\t\t\t\ttitle: localize('profiles.exporting', \"{0}: Exporting...\", PROFILES_CATEGORY.value),\n\t\t\t}, async progress => {\n\t\t\t\tconst id = await this.pickProfileContentHandler(profile.name);\n\t\t\t\tif (!id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst profileContentHandler = this.profileContentHandlers.get(id);\n\t\t\t\tif (!profileContentHandler) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst saveResult = await profileContentHandler.saveProfile(profile.name.replace('/', '-'), JSON.stringify(profile), CancellationToken.None);\n\t\t\t\tif (!saveResult) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst message = localize('export success', \"Profile '{0}' was exported successfully.\", profile.name);\n\t\t\t\tif (profileContentHandler.extensionId) {\n\t\t\t\t\tconst buttons: IPromptButton<void>[] = [];\n\t\t\t\t\tconst link = this.productService.webUrl ? `${this.productService.webUrl}/${PROFILE_URL_AUTHORITY}/${id}/${saveResult.id}` : toUserDataProfileUri(`/${id}/${saveResult.id}`, this.productService).toString();\n\t\t\t\t\tbuttons.push({\n\t\t\t\t\t\tlabel: localize({ key: 'copy', comment: ['&& denotes a mnemonic'] }, \"&&Copy Link\"),\n\t\t\t\t\t\trun: () => this.clipboardService.writeText(link)\n\t\t\t\t\t});\n\t\t\t\t\tif (this.productService.webUrl) {\n\t\t\t\t\t\tbuttons.push({\n\t\t\t\t\t\t\tlabel: localize({ key: 'open', comment: ['&& denotes a mnemonic'] }, \"&&Open Link\"),\n\t\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\t\tawait this.openerService.open(link);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuttons.push({\n\t\t\t\t\t\t\tlabel: localize({ key: 'open in', comment: ['&& denotes a mnemonic'] }, \"&&Open in {0}\", profileContentHandler.name),\n\t\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\t\tawait this.openerService.open(saveResult.link.toString());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tawait this.dialogService.prompt({\n\t\t\t\t\t\ttype: Severity.Info,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tbuttons,\n\t\t\t\t\t\tcancelButton: localize('close', \"Close\")\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tawait this.dialogService.info(message);\n\t\t\t\t}\n\t\t\t});\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tprivate async resolveProfileTemplate(uri: URI, options?: IProfileImportOptions): Promise<IUserDataProfileTemplate | null> {\n\t\tconst profileContent = await this.resolveProfileContent(uri);\n\t\tif (profileContent === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst profileTemplate: Mutable<IUserDataProfileTemplate> = JSON.parse(profileContent);\n\t\tif (!isUserDataProfileTemplate(profileTemplate)) {\n\t\t\tthrow new Error('Invalid profile content.');\n\t\t}\n\n\t\tif (options?.name) {\n\t\t\tprofileTemplate.name = options.name;\n\t\t}\n\n\t\treturn profileTemplate;\n\t}\n\n\tprivate async importAndPreviewProfile(uri: URI, profileTemplate: IUserDataProfileTemplate, options: IUserDataProfileOptions | undefined): Promise<void> {\n\t\tconst disposables = new DisposableStore();\n\n\t\ttry {\n\t\t\tconst userDataProfileImportState = disposables.add(this.instantiationService.createInstance(UserDataProfileImportState, profileTemplate));\n\t\t\tprofileTemplate = await userDataProfileImportState.getProfileTemplateToImport();\n\n\t\t\tconst importedProfile = await this.createAndSwitch(profileTemplate, true, false, options, localize('preview profile', \"Preview Profile\"));\n\n\t\t\tif (!importedProfile) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst barrier = new Barrier();\n\t\t\tconst importAction = this.getCreateAction(barrier, userDataProfileImportState);\n\t\t\tconst primaryAction = isWeb\n\t\t\t\t? new Action('importInDesktop', localize('import in desktop', \"Create Profile in {0}\", this.productService.nameLong), undefined, true, async () => this.openerService.open(uri, { openExternal: true }))\n\t\t\t\t: importAction;\n\t\t\tconst secondaryAction = isWeb\n\t\t\t\t? importAction\n\t\t\t\t: new BarrierAction(barrier, new Action('close', localize('close', \"Close\")), this.notificationService);\n\n\t\t\tconst view = await this.showProfilePreviewView(IMPORT_PROFILE_PREVIEW_VIEW, importedProfile.name, primaryAction, secondaryAction, false, userDataProfileImportState);\n\t\t\tconst message = new MarkdownString();\n\t\t\tmessage.appendMarkdown(localize('preview profile message', \"By default, extensions aren't installed when previewing a profile on the web. You can still install them manually before importing the profile. \"));\n\t\t\tmessage.appendMarkdown(`[${localize('learn more', \"Learn more\")}](https://aka.ms/vscode-extension-marketplace#_can-i-trust-extensions-from-the-marketplace).`);\n\t\t\tview.setMessage(message);\n\n\t\t\tconst that = this;\n\t\t\tconst disposable = disposables.add(registerAction2(class extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: 'previewProfile.installExtensions',\n\t\t\t\t\t\ttitle: localize('install extensions title', \"Install Extensions\"),\n\t\t\t\t\t\ticon: Codicon.cloudDownload,\n\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\t\tgroup: 'inline',\n\t\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', IMPORT_PROFILE_PREVIEW_VIEW), ContextKeyExpr.equals('viewItem', ProfileResourceType.Extensions)),\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\toverride async run(): Promise<void> {\n\t\t\t\t\treturn that.progressService.withProgress({\n\t\t\t\t\t\tlocation: IMPORT_PROFILE_PREVIEW_VIEW,\n\t\t\t\t\t}, async progress => {\n\t\t\t\t\t\tview.setMessage(undefined);\n\t\t\t\t\t\tconst profileTemplate = await userDataProfileImportState.getProfileTemplateToImport();\n\t\t\t\t\t\tif (profileTemplate.extensions) {\n\t\t\t\t\t\t\tawait that.instantiationService.createInstance(ExtensionsResource).apply(profileTemplate.extensions, importedProfile);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}));\n\t\t\tdisposables.add(Event.debounce(this.extensionManagementService.onDidInstallExtensions, () => undefined, 100)(async () => {\n\t\t\t\tconst profileTemplate = await userDataProfileImportState.getProfileTemplateToImport();\n\t\t\t\tif (profileTemplate.extensions) {\n\t\t\t\t\tconst profileExtensions = await that.instantiationService.createInstance(ExtensionsResource).getProfileExtensions(profileTemplate.extensions!);\n\t\t\t\t\tconst installed = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t\t\t\tif (profileExtensions.every(e => installed.some(i => areSameExtensions(e.identifier, i.identifier)))) {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tawait barrier.wait();\n\t\t\tawait this.hideProfilePreviewView(IMPORT_PROFILE_PREVIEW_VIEW);\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tprivate async previewProfile(profileTemplate: IUserDataProfileTemplate, options: IUserDataProfileOptions | undefined): Promise<void> {\n\t\tconst disposables = new DisposableStore();\n\t\ttry {\n\t\t\tconst userDataProfileImportState = disposables.add(this.instantiationService.createInstance(UserDataProfileImportState, profileTemplate));\n\t\t\tif (userDataProfileImportState.isEmpty()) {\n\t\t\t\tawait this.createAndSwitch(profileTemplate, false, true, options, localize('create profile', \"Create Profile\"));\n\t\t\t} else {\n\t\t\t\tconst barrier = new Barrier();\n\t\t\t\tconst cancelAction = new BarrierAction(barrier, new Action('cancel', localize('cancel', \"Cancel\")), this.notificationService);\n\t\t\t\tconst importAction = this.getCreateAction(barrier, userDataProfileImportState, cancelAction);\n\t\t\t\tawait this.showProfilePreviewView(IMPORT_PROFILE_PREVIEW_VIEW, profileTemplate.name, importAction, cancelAction, false, userDataProfileImportState);\n\t\t\t\tawait barrier.wait();\n\t\t\t\tawait this.hideProfilePreviewView(IMPORT_PROFILE_PREVIEW_VIEW);\n\t\t\t}\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tprivate getCreateAction(barrier: Barrier, userDataProfileImportState: UserDataProfileImportState, cancelAction?: IAction): IAction {\n\t\tconst importAction = new BarrierAction(barrier, new Action('title', localize('import', \"Create Profile\"), undefined, true, async () => {\n\t\t\timportAction.enabled = false;\n\t\t\tif (cancelAction) {\n\t\t\t\tcancelAction.enabled = false;\n\t\t\t}\n\t\t\tconst profileTemplate = await userDataProfileImportState.getProfileTemplateToImport();\n\t\t\treturn this.saveProfile(undefined, profileTemplate);\n\t\t}), this.notificationService);\n\t\treturn importAction;\n\t}\n\n\tprivate async createAndSwitch(profileTemplate: IUserDataProfileTemplate, temporaryProfile: boolean, extensions: boolean, options: IUserDataProfileOptions | undefined, title: string): Promise<IUserDataProfile | undefined> {\n\t\treturn this.progressService.withProgress({\n\t\t\tlocation: ProgressLocation.Notification,\n\t\t\tdelay: 500,\n\t\t\tsticky: true,\n\t\t}, async (progress) => {\n\t\t\ttitle = `${title} (${profileTemplate.name})`;\n\t\t\tprogress.report({ message: title });\n\t\t\tconst reportProgress = (message: string) => progress.report({ message: `${title}: ${message}` });\n\t\t\tconst profile = await this.doCreateProfile(profileTemplate, temporaryProfile, extensions, options, reportProgress);\n\t\t\tif (profile) {\n\t\t\t\treportProgress(localize('switching profile', \"Switching Profile...\"));\n\t\t\t\tawait this.userDataProfileManagementService.switchProfile(profile);\n\t\t\t}\n\t\t\treturn profile;\n\t\t});\n\t}\n\n\tprivate async doCreateProfile(profileTemplate: IUserDataProfileTemplate, temporaryProfile: boolean, extensions: boolean, options: IUserDataProfileOptions | undefined, progress: (message: string) => void): Promise<IUserDataProfile | undefined> {\n\t\tconst profile = await this.getProfileToImport(profileTemplate, temporaryProfile, options);\n\t\tif (!profile) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (profileTemplate.settings && !profile.useDefaultFlags?.settings) {\n\t\t\tprogress(localize('progress settings', \"Applying Settings...\"));\n\t\t\tawait this.instantiationService.createInstance(SettingsResource).apply(profileTemplate.settings, profile);\n\t\t}\n\t\tif (profileTemplate.keybindings && !profile.useDefaultFlags?.keybindings) {\n\t\t\tprogress(localize('progress keybindings', \"Applying Keyboard Shortcuts...\"));\n\t\t\tawait this.instantiationService.createInstance(KeybindingsResource).apply(profileTemplate.keybindings, profile);\n\t\t}\n\t\tif (profileTemplate.tasks && !profile.useDefaultFlags?.tasks) {\n\t\t\tprogress(localize('progress tasks', \"Applying Tasks...\"));\n\t\t\tawait this.instantiationService.createInstance(TasksResource).apply(profileTemplate.tasks, profile);\n\t\t}\n\t\tif (profileTemplate.snippets && !profile.useDefaultFlags?.snippets) {\n\t\t\tprogress(localize('progress snippets', \"Applying Snippets...\"));\n\t\t\tawait this.instantiationService.createInstance(SnippetsResource).apply(profileTemplate.snippets, profile);\n\t\t}\n\t\tif (profileTemplate.globalState && !profile.useDefaultFlags?.globalState) {\n\t\t\tprogress(localize('progress global state', \"Applying State...\"));\n\t\t\tawait this.instantiationService.createInstance(GlobalStateResource).apply(profileTemplate.globalState, profile);\n\t\t}\n\t\tif (profileTemplate.extensions && extensions && !profile.useDefaultFlags?.extensions) {\n\t\t\tprogress(localize('progress extensions', \"Applying Extensions...\"));\n\t\t\tawait this.instantiationService.createInstance(ExtensionsResource).apply(profileTemplate.extensions, profile);\n\t\t}\n\n\t\treturn profile;\n\t}\n\n\tprivate async resolveProfileContent(resource: URI): Promise<string | null> {\n\t\tif (await this.fileUserDataProfileContentHandler.canHandle(resource)) {\n\t\t\treturn this.fileUserDataProfileContentHandler.readProfile(resource, CancellationToken.None);\n\t\t}\n\n\t\tif (this.isProfileURL(resource)) {\n\t\t\tlet handlerId: string, idOrUri: string | URI;\n\t\t\tif (resource.authority === PROFILE_URL_AUTHORITY) {\n\t\t\t\tidOrUri = this.uriIdentityService.extUri.basename(resource);\n\t\t\t\thandlerId = this.uriIdentityService.extUri.basename(this.uriIdentityService.extUri.dirname(resource));\n\t\t\t} else {\n\t\t\t\thandlerId = resource.authority.substring(UserDataProfileImportExportService.PROFILE_URL_AUTHORITY_PREFIX.length);\n\t\t\t\tidOrUri = URI.parse(resource.path.substring(1));\n\t\t\t}\n\t\t\tawait this.extensionService.activateByEvent(`onProfile:${handlerId}`);\n\t\t\tconst profileContentHandler = this.profileContentHandlers.get(handlerId);\n\t\t\tif (profileContentHandler) {\n\t\t\t\treturn profileContentHandler.readProfile(idOrUri, CancellationToken.None);\n\t\t\t}\n\t\t}\n\n\t\tawait this.extensionService.activateByEvent('onProfile');\n\t\tfor (const profileContentHandler of this.profileContentHandlers.values()) {\n\t\t\tconst content = await profileContentHandler.readProfile(resource, CancellationToken.None);\n\t\t\tif (content !== null) {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}\n\n\t\tconst context = await this.requestService.request({ type: 'GET', url: resource.toString(true) }, CancellationToken.None);\n\t\tif (context.res.statusCode === 200) {\n\t\t\treturn await asText(context);\n\t\t} else {\n\t\t\tconst message = await asText(context);\n\t\t\tthrow new Error(`Failed to get profile from URL: ${resource.toString()}. Status code: ${context.res.statusCode}. Message: ${message}`);\n\t\t}\n\t}\n\n\tprivate async pickProfileContentHandler(name: string): Promise<string | undefined> {\n\t\tawait this.extensionService.activateByEvent('onProfile');\n\t\tif (this.profileContentHandlers.size === 1) {\n\t\t\treturn this.profileContentHandlers.keys().next().value;\n\t\t}\n\t\tconst options: QuickPickItem[] = [];\n\t\tfor (const [id, profileContentHandler] of this.profileContentHandlers) {\n\t\t\toptions.push({ id, label: profileContentHandler.name, description: profileContentHandler.description });\n\t\t}\n\t\tconst result = await this.quickInputService.pick(options.reverse(),\n\t\t\t{\n\t\t\t\ttitle: localize('select profile content handler', \"Export '{0}' profile as...\", name),\n\t\t\t\thideInput: true\n\t\t\t});\n\t\treturn result?.id;\n\t}\n\n\tprivate async getProfileToImport(profileTemplate: IUserDataProfileTemplate, temp: boolean, options: IUserDataProfileOptions | undefined): Promise<IUserDataProfile | undefined> {\n\t\tconst profileName = profileTemplate.name;\n\t\tconst profile = this.userDataProfilesService.profiles.find(p => p.name === profileName);\n\t\tif (profile) {\n\t\t\tif (temp) {\n\t\t\t\treturn this.userDataProfilesService.createNamedProfile(`${profileName} ${this.getProfileNameIndex(profileName)}`, { ...options, shortName: profileTemplate.shortName, transient: temp });\n\t\t\t}\n\n\t\t\tenum ImportProfileChoice {\n\t\t\t\tOverwrite = 0,\n\t\t\t\tCreateNew = 1,\n\t\t\t\tCancel = 2\n\t\t\t}\n\t\t\tconst { result } = await this.dialogService.prompt<ImportProfileChoice>({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage: localize('profile already exists', \"Profile with name '{0}' already exists. Do you want to overwrite it?\", profileName),\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize({ key: 'overwrite', comment: ['&& denotes a mnemonic'] }, \"&&Overwrite\"),\n\t\t\t\t\t\trun: () => ImportProfileChoice.Overwrite\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize({ key: 'create new', comment: ['&& denotes a mnemonic'] }, \"&&Create New Profile\"),\n\t\t\t\t\t\trun: () => ImportProfileChoice.CreateNew\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tcancelButton: {\n\t\t\t\t\trun: () => ImportProfileChoice.Cancel\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (result === ImportProfileChoice.Overwrite) {\n\t\t\t\treturn profile;\n\t\t\t}\n\n\t\t\tif (result === ImportProfileChoice.Cancel) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Create new profile\n\t\t\tconst name = await this.quickInputService.input({\n\t\t\t\tplaceHolder: localize('name', \"Profile name\"),\n\t\t\t\ttitle: localize('create new title', \"Create New Profile\"),\n\t\t\t\tvalue: `${profileName} ${this.getProfileNameIndex(profileName)}`,\n\t\t\t\tvalidateInput: async (value: string) => {\n\t\t\t\t\tif (this.userDataProfilesService.profiles.some(p => p.name === value)) {\n\t\t\t\t\t\treturn localize('profileExists', \"Profile with name {0} already exists.\", value);\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!name) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn this.userDataProfilesService.createNamedProfile(name);\n\t\t} else {\n\t\t\treturn this.userDataProfilesService.createNamedProfile(profileName, { ...options, shortName: profileTemplate.shortName, transient: temp });\n\t\t}\n\t}\n\n\tprivate generateProfileName(profileName: string): string {\n\t\tconst existingProfile = this.userDataProfilesService.profiles.find(p => p.name === profileName);\n\t\treturn existingProfile ? `${profileName} ${this.getProfileNameIndex(profileName)}` : profileName;\n\t}\n\n\tprivate getProfileNameIndex(name: string): number {\n\t\tconst nameRegEx = new RegExp(`${escapeRegExpCharacters(name)}\\\\s(\\\\d+)`);\n\t\tlet nameIndex = 0;\n\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\tconst matches = nameRegEx.exec(profile.name);\n\t\t\tconst index = matches ? parseInt(matches[1]) : 0;\n\t\t\tnameIndex = index > nameIndex ? index : nameIndex;\n\t\t}\n\t\treturn nameIndex + 1;\n\t}\n\n\tprivate async showProfilePreviewView(id: string, name: string, primary: IAction, secondary: IAction, refreshAction: boolean, userDataProfilesData: UserDataProfileImportExportState): Promise<UserDataProfilePreviewViewPane> {\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\tconst treeView = this.instantiationService.createInstance(TreeView, id, name);\n\t\tif (refreshAction) {\n\t\t\ttreeView.showRefreshAction = true;\n\t\t}\n\t\tconst actionRunner = new ActionRunner();\n\t\tconst descriptor: ITreeViewDescriptor = {\n\t\t\tid,\n\t\t\tname,\n\t\t\tctorDescriptor: new SyncDescriptor(UserDataProfilePreviewViewPane, [userDataProfilesData, primary, secondary, actionRunner]),\n\t\t\tcanToggleVisibility: false,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView,\n\t\t\tcollapsed: false,\n\t\t};\n\n\t\tviewsRegistry.registerViews([descriptor], this.viewContainer);\n\t\treturn (await this.viewsService.openView<UserDataProfilePreviewViewPane>(id, true))!;\n\t}\n\n\tprivate async hideProfilePreviewView(id: string): Promise<void> {\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\tconst viewDescriptor = viewsRegistry.getView(id);\n\t\tif (viewDescriptor) {\n\t\t\t(viewDescriptor as ITreeViewDescriptor).treeView.dispose();\n\t\t\tviewsRegistry.deregisterViews([viewDescriptor], this.viewContainer);\n\t\t}\n\t\tawait this.closeAllImportExportPreviewEditors();\n\t}\n\n\tprivate async closeAllImportExportPreviewEditors(): Promise<void> {\n\t\tconst editorsToColse = this.editorService.getEditors(EditorsOrder.SEQUENTIAL).filter(({ editor }) => editor.resource?.scheme === USER_DATA_PROFILE_EXPORT_SCHEME || editor.resource?.scheme === USER_DATA_PROFILE_EXPORT_PREVIEW_SCHEME || editor.resource?.scheme === USER_DATA_PROFILE_IMPORT_PREVIEW_SCHEME);\n\t\tif (editorsToColse.length) {\n\t\t\tawait this.editorService.closeEditors(editorsToColse);\n\t\t}\n\t}\n\n\tasync setProfile(profile: IUserDataProfileTemplate): Promise<void> {\n\t\tawait this.progressService.withProgress({\n\t\t\tlocation: ProgressLocation.Notification,\n\t\t\ttitle: localize('profiles.applying', \"{0}: Applying...\", PROFILES_CATEGORY.value),\n\t\t}, async progress => {\n\t\t\tif (profile.settings) {\n\t\t\t\tawait this.instantiationService.createInstance(SettingsResource).apply(profile.settings, this.userDataProfileService.currentProfile);\n\t\t\t}\n\t\t\tif (profile.globalState) {\n\t\t\t\tawait this.instantiationService.createInstance(GlobalStateResource).apply(profile.globalState, this.userDataProfileService.currentProfile);\n\t\t\t}\n\t\t\tif (profile.extensions) {\n\t\t\t\tawait this.instantiationService.createInstance(ExtensionsResource).apply(profile.extensions, this.userDataProfileService.currentProfile);\n\t\t\t}\n\t\t});\n\t\tthis.notificationService.info(localize('applied profile', \"{0}: Applied successfully.\", PROFILES_CATEGORY.value));\n\t}\n\n}\n\nclass FileUserDataProfileContentHandler implements IUserDataProfileContentHandler {\n\n\treadonly name = localize('local', \"Local\");\n\treadonly description = localize('file', \"file\");\n\n\tconstructor(\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t) { }\n\n\tasync saveProfile(name: string, content: string, token: CancellationToken): Promise<ISaveProfileResult | null> {\n\t\tconst link = await this.fileDialogService.showSaveDialog({\n\t\t\ttitle: localize('export profile dialog', \"Save Profile\"),\n\t\t\tfilters: PROFILE_FILTER,\n\t\t\tdefaultUri: this.uriIdentityService.extUri.joinPath(await this.fileDialogService.defaultFilePath(), `${name}.${PROFILE_EXTENSION}`),\n\t\t});\n\t\tif (!link) {\n\t\t\treturn null;\n\t\t}\n\t\tawait this.textFileService.create([{ resource: link, value: content, options: { overwrite: true } }]);\n\t\treturn { link, id: link.toString() };\n\t}\n\n\tasync canHandle(uri: URI): Promise<boolean> {\n\t\treturn uri.scheme !== Schemas.http && uri.scheme !== Schemas.https && await this.fileService.canHandleResource(uri);\n\t}\n\n\tasync readProfile(uri: URI, token: CancellationToken): Promise<string | null> {\n\t\tif (await this.canHandle(uri)) {\n\t\t\treturn (await this.fileService.readFile(uri, undefined, token)).value.toString();\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync selectProfile(): Promise<URI | null> {\n\t\tconst profileLocation = await this.fileDialogService.showOpenDialog({\n\t\t\tcanSelectFolders: false,\n\t\t\tcanSelectFiles: true,\n\t\t\tcanSelectMany: false,\n\t\t\tfilters: PROFILE_FILTER,\n\t\t\ttitle: localize('select profile', \"Select Profile\"),\n\t\t});\n\t\treturn profileLocation ? profileLocation[0] : null;\n\t}\n\n}\n\nclass UserDataProfilePreviewViewPane extends TreeViewPane {\n\n\tprivate buttonsContainer!: HTMLElement;\n\tprivate primaryButton!: Button;\n\tprivate secondaryButton!: Button;\n\tprivate messageContainer!: HTMLElement;\n\tprivate dimension: DOM.Dimension | undefined;\n\tprivate totalTreeItemsCount: number = 0;\n\n\tconstructor(\n\t\tprivate readonly userDataProfileData: UserDataProfileImportExportState,\n\t\tprivate readonly primaryAction: Action,\n\t\tprivate readonly secondaryAction: Action,\n\t\tprivate readonly actionRunner: IActionRunner,\n\t\toptions: IViewletViewOptions,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INotificationService notificationService: INotificationService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, notificationService);\n\t}\n\n\tprotected override renderTreeView(container: HTMLElement): void {\n\t\tthis.treeView.dataProvider = this.userDataProfileData;\n\t\tsuper.renderTreeView(DOM.append(container, DOM.$('.profile-view-tree-container')));\n\t\tthis.messageContainer = DOM.append(container, DOM.$('.profile-view-message-container.hide'));\n\t\tthis.createButtons(container);\n\t\tthis._register(this.treeView.onDidChangeCheckboxState(() => this.updateConfirmButtonEnablement()));\n\t\tthis.computeAndLayout();\n\t\tthis._register(Event.any(this.userDataProfileData.onDidChangeRoots, this.treeView.onDidCollapseItem, this.treeView.onDidExpandItem)(() => this.computeAndLayout()));\n\t}\n\n\tprivate async computeAndLayout() {\n\t\tconst roots = await this.userDataProfileData.getRoots();\n\t\tconst children = await Promise.all(roots.map(async (root) => {\n\t\t\tlet expanded = root.collapsibleState === TreeItemCollapsibleState.Expanded;\n\t\t\ttry {\n\t\t\t\texpanded = !this.treeView.isCollapsed(root);\n\t\t\t} catch (error) { /* Ignore because element might not be added yet */ }\n\t\t\tif (expanded) {\n\t\t\t\tconst children = await root.getChildren();\n\t\t\t\treturn children ?? [];\n\t\t\t}\n\t\t\treturn [];\n\t\t}));\n\t\tthis.totalTreeItemsCount = roots.length + children.flat().length;\n\t\tthis.updateConfirmButtonEnablement();\n\t\tif (this.dimension) {\n\t\t\tthis.layoutTreeView(this.dimension.height, this.dimension.width);\n\t\t}\n\t}\n\n\tprivate createButtons(container: HTMLElement): void {\n\t\tthis.buttonsContainer = DOM.append(container, DOM.$('.profile-view-buttons-container'));\n\n\t\tthis.primaryButton = this._register(new Button(this.buttonsContainer, { ...defaultButtonStyles }));\n\t\tthis.primaryButton.element.classList.add('profile-view-button');\n\t\tthis.primaryButton.label = this.primaryAction.label;\n\t\tthis.primaryButton.enabled = this.primaryAction.enabled;\n\t\tthis._register(this.primaryButton.onDidClick(() => this.actionRunner.run(this.primaryAction)));\n\t\tthis._register(this.primaryAction.onDidChange(e => {\n\t\t\tif (e.enabled !== undefined) {\n\t\t\t\tthis.primaryButton.enabled = e.enabled;\n\t\t\t}\n\t\t}));\n\n\t\tthis.secondaryButton = this._register(new Button(this.buttonsContainer, { secondary: true, ...defaultButtonStyles }));\n\t\tthis.secondaryButton.label = this.secondaryAction.label;\n\t\tthis.secondaryButton.element.classList.add('profile-view-button');\n\t\tthis.secondaryButton.enabled = this.secondaryAction.enabled;\n\t\tthis._register(this.secondaryButton.onDidClick(() => this.actionRunner.run(this.secondaryAction)));\n\t\tthis._register(this.secondaryAction.onDidChange(e => {\n\t\t\tif (e.enabled !== undefined) {\n\t\t\t\tthis.secondaryButton.enabled = e.enabled;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected override layoutTreeView(height: number, width: number): void {\n\t\tthis.dimension = new DOM.Dimension(width, height);\n\n\t\tlet messageContainerHeight = 0;\n\t\tif (!this.messageContainer.classList.contains('hide')) {\n\t\t\tmessageContainerHeight = DOM.getClientArea(this.messageContainer).height;\n\t\t}\n\n\t\tconst buttonContainerHeight = 108;\n\t\tthis.buttonsContainer.style.height = `${buttonContainerHeight}px`;\n\t\tthis.buttonsContainer.style.width = `${width}px`;\n\n\t\tsuper.layoutTreeView(Math.min(height - buttonContainerHeight - messageContainerHeight, 22 * this.totalTreeItemsCount), width);\n\t}\n\n\tprivate updateConfirmButtonEnablement(): void {\n\t\tthis.primaryButton.enabled = this.primaryAction.enabled && this.userDataProfileData.isEnabled();\n\t}\n\n\tprivate readonly renderDisposables = this._register(new DisposableStore());\n\tsetMessage(message: MarkdownString | undefined): void {\n\t\tthis.messageContainer.classList.toggle('hide', !message);\n\t\tDOM.clearNode(this.messageContainer);\n\t\tif (message) {\n\t\t\tthis.renderDisposables.clear();\n\t\t\tconst rendered = this.renderDisposables.add(renderMarkdown(message, {\n\t\t\t\tactionHandler: {\n\t\t\t\t\tcallback: (content) => {\n\t\t\t\t\t\tthis.openerService.open(content, { allowCommands: true }).catch(onUnexpectedError);\n\t\t\t\t\t},\n\t\t\t\t\tdisposables: this.renderDisposables\n\t\t\t\t}\n\t\t\t}));\n\t\t\tDOM.append(this.messageContainer, rendered.element);\n\t\t}\n\t}\n\n\trefresh(): Promise<void> {\n\t\treturn this.treeView.refresh();\n\t}\n}\n\nconst USER_DATA_PROFILE_EXPORT_SCHEME = 'userdataprofileexport';\nconst USER_DATA_PROFILE_EXPORT_PREVIEW_SCHEME = 'userdataprofileexportpreview';\nconst USER_DATA_PROFILE_IMPORT_PREVIEW_SCHEME = 'userdataprofileimportpreview';\n\nabstract class UserDataProfileImportExportState extends Disposable implements ITreeViewDataProvider {\n\n\tprivate readonly _onDidChangeRoots = this._register(new Emitter<void>());\n\treadonly onDidChangeRoots = this._onDidChangeRoots.event;\n\n\tconstructor(\n\t\t@IQuickInputService protected readonly quickInputService: IQuickInputService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync getChildren(element?: ITreeItem): Promise<ITreeItem[] | undefined> {\n\t\tif (element) {\n\t\t\tconst children = await (<IProfileResourceTreeItem>element).getChildren();\n\t\t\tif (children) {\n\t\t\t\tfor (const child of children) {\n\t\t\t\t\tif (child.parent.checkbox && child.checkbox) {\n\t\t\t\t\t\tchild.checkbox.isChecked = child.parent.checkbox.isChecked && child.checkbox.isChecked;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn children;\n\t\t} else {\n\t\t\tthis.rootsPromise = undefined;\n\t\t\tthis._onDidChangeRoots.fire();\n\t\t\treturn this.getRoots();\n\t\t}\n\t}\n\n\tprivate roots: IProfileResourceTreeItem[] = [];\n\tprivate rootsPromise: Promise<IProfileResourceTreeItem[]> | undefined;\n\tgetRoots(): Promise<IProfileResourceTreeItem[]> {\n\t\tif (!this.rootsPromise) {\n\t\t\tthis.rootsPromise = (async () => {\n\t\t\t\tthis.roots = await this.fetchRoots();\n\t\t\t\tfor (const root of this.roots) {\n\t\t\t\t\troot.checkbox = {\n\t\t\t\t\t\tisChecked: !root.isFromDefaultProfile(),\n\t\t\t\t\t\ttooltip: localize('select', \"Select {0}\", root.label.label),\n\t\t\t\t\t\taccessibilityInformation: {\n\t\t\t\t\t\t\tlabel: localize('select', \"Select {0}\", root.label.label),\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tif (root.isFromDefaultProfile()) {\n\t\t\t\t\t\troot.description = localize('from default', \"From Default Profile\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.roots;\n\t\t\t})();\n\t\t}\n\t\treturn this.rootsPromise;\n\t}\n\n\tisEnabled(resourceType?: ProfileResourceType): boolean {\n\t\tif (resourceType !== undefined) {\n\t\t\treturn this.roots.some(root => root.type === resourceType && this.isSelected(root));\n\t\t}\n\t\treturn this.roots.some(root => this.isSelected(root));\n\t}\n\n\tasync getProfileTemplate(name: string, shortName: string | undefined): Promise<IUserDataProfileTemplate> {\n\t\tconst roots = await this.getRoots();\n\t\tlet settings: string | undefined;\n\t\tlet keybindings: string | undefined;\n\t\tlet tasks: string | undefined;\n\t\tlet snippets: string | undefined;\n\t\tlet extensions: string | undefined;\n\t\tlet globalState: string | undefined;\n\t\tfor (const root of roots) {\n\t\t\tif (!this.isSelected(root)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (root instanceof SettingsResourceTreeItem) {\n\t\t\t\tsettings = await root.getContent();\n\t\t\t} else if (root instanceof KeybindingsResourceTreeItem) {\n\t\t\t\tkeybindings = await root.getContent();\n\t\t\t} else if (root instanceof TasksResourceTreeItem) {\n\t\t\t\ttasks = await root.getContent();\n\t\t\t} else if (root instanceof SnippetsResourceTreeItem) {\n\t\t\t\tsnippets = await root.getContent();\n\t\t\t} else if (root instanceof ExtensionsResourceTreeItem) {\n\t\t\t\textensions = await root.getContent();\n\t\t\t} else if (root instanceof GlobalStateResourceTreeItem) {\n\t\t\t\tglobalState = await root.getContent();\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tname,\n\t\t\tshortName,\n\t\t\tsettings,\n\t\t\tkeybindings,\n\t\t\ttasks,\n\t\t\tsnippets,\n\t\t\textensions,\n\t\t\tglobalState\n\t\t};\n\t}\n\n\tprivate isSelected(treeItem: IProfileResourceTreeItem): boolean {\n\t\tif (treeItem.checkbox) {\n\t\t\treturn treeItem.checkbox.isChecked || !!treeItem.children?.some(child => child.checkbox?.isChecked);\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected abstract fetchRoots(): Promise<IProfileResourceTreeItem[]>;\n}\n\nclass UserDataProfileExportState extends UserDataProfileImportExportState {\n\n\tprivate readonly disposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\treadonly profile: IUserDataProfile,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper(quickInputService);\n\t}\n\n\tprotected async fetchRoots(): Promise<IProfileResourceTreeItem[]> {\n\t\tthis.disposables.clear();\n\t\tthis.disposables.add(this.fileService.registerProvider(USER_DATA_PROFILE_EXPORT_SCHEME, this._register(new InMemoryFileSystemProvider())));\n\t\tconst previewFileSystemProvider = this._register(new InMemoryFileSystemProvider());\n\t\tthis.disposables.add(this.fileService.registerProvider(USER_DATA_PROFILE_EXPORT_PREVIEW_SCHEME, previewFileSystemProvider));\n\t\tconst roots: IProfileResourceTreeItem[] = [];\n\t\tconst exportPreviewProfle = this.createExportPreviewProfile(this.profile);\n\n\t\tconst settingsResource = this.instantiationService.createInstance(SettingsResource);\n\t\tconst settingsContent = await settingsResource.getContent(this.profile);\n\t\tawait settingsResource.apply(settingsContent, exportPreviewProfle);\n\t\tconst settingsResourceTreeItem = this.instantiationService.createInstance(SettingsResourceTreeItem, exportPreviewProfle);\n\t\tif (await settingsResourceTreeItem.hasContent()) {\n\t\t\troots.push(settingsResourceTreeItem);\n\t\t}\n\n\t\tconst keybindingsResource = this.instantiationService.createInstance(KeybindingsResource);\n\t\tconst keybindingsContent = await keybindingsResource.getContent(this.profile);\n\t\tawait keybindingsResource.apply(keybindingsContent, exportPreviewProfle);\n\t\tconst keybindingsResourceTreeItem = this.instantiationService.createInstance(KeybindingsResourceTreeItem, exportPreviewProfle);\n\t\tif (await keybindingsResourceTreeItem.hasContent()) {\n\t\t\troots.push(keybindingsResourceTreeItem);\n\t\t}\n\n\t\tconst snippetsResource = this.instantiationService.createInstance(SnippetsResource);\n\t\tconst snippetsContent = await snippetsResource.getContent(this.profile);\n\t\tawait snippetsResource.apply(snippetsContent, exportPreviewProfle);\n\t\tconst snippetsResourceTreeItem = this.instantiationService.createInstance(SnippetsResourceTreeItem, exportPreviewProfle);\n\t\tif (await snippetsResourceTreeItem.hasContent()) {\n\t\t\troots.push(snippetsResourceTreeItem);\n\t\t}\n\n\t\tconst tasksResource = this.instantiationService.createInstance(TasksResource);\n\t\tconst tasksContent = await tasksResource.getContent(this.profile);\n\t\tawait tasksResource.apply(tasksContent, exportPreviewProfle);\n\t\tconst tasksResourceTreeItem = this.instantiationService.createInstance(TasksResourceTreeItem, exportPreviewProfle);\n\t\tif (await tasksResourceTreeItem.hasContent()) {\n\t\t\troots.push(tasksResourceTreeItem);\n\t\t}\n\n\t\tconst globalStateResource = joinPath(exportPreviewProfle.globalStorageHome, 'globalState.json').with({ scheme: USER_DATA_PROFILE_EXPORT_PREVIEW_SCHEME });\n\t\tconst globalStateResourceTreeItem = this.instantiationService.createInstance(GlobalStateResourceExportTreeItem, exportPreviewProfle, globalStateResource);\n\t\tconst content = await globalStateResourceTreeItem.getContent();\n\t\tif (content) {\n\t\t\tawait this.fileService.writeFile(globalStateResource, VSBuffer.fromString(JSON.stringify(JSON.parse(content), null, '\\t')));\n\t\t\troots.push(globalStateResourceTreeItem);\n\t\t}\n\n\t\tconst extensionsResourceTreeItem = this.instantiationService.createInstance(ExtensionsResourceExportTreeItem, exportPreviewProfle);\n\t\tif (await extensionsResourceTreeItem.hasContent()) {\n\t\t\troots.push(extensionsResourceTreeItem);\n\t\t}\n\n\t\tpreviewFileSystemProvider.setReadOnly(true);\n\n\t\treturn roots;\n\t}\n\n\tprivate createExportPreviewProfile(profile: IUserDataProfile): IUserDataProfile {\n\t\treturn {\n\t\t\tid: profile.id,\n\t\t\tname: profile.name,\n\t\t\tlocation: profile.location,\n\t\t\tisDefault: profile.isDefault,\n\t\t\tshortName: profile.shortName,\n\t\t\tglobalStorageHome: profile.globalStorageHome,\n\t\t\tsettingsResource: profile.settingsResource.with({ scheme: USER_DATA_PROFILE_EXPORT_SCHEME }),\n\t\t\tkeybindingsResource: profile.keybindingsResource.with({ scheme: USER_DATA_PROFILE_EXPORT_SCHEME }),\n\t\t\ttasksResource: profile.tasksResource.with({ scheme: USER_DATA_PROFILE_EXPORT_SCHEME }),\n\t\t\tsnippetsHome: profile.snippetsHome.with({ scheme: USER_DATA_PROFILE_EXPORT_SCHEME }),\n\t\t\textensionsResource: profile.extensionsResource,\n\t\t\tcacheHome: profile.cacheHome,\n\t\t\tuseDefaultFlags: profile.useDefaultFlags,\n\t\t\tisTransient: profile.isTransient\n\t\t};\n\t}\n\n\tasync getProfileToExport(): Promise<IUserDataProfileTemplate | null> {\n\t\tlet name: string | undefined = this.profile.name;\n\t\tif (this.profile.isDefault) {\n\t\t\tname = await this.quickInputService.input({\n\t\t\t\tplaceHolder: localize('export profile name', \"Name the profile\"),\n\t\t\t\ttitle: localize('export profile title', \"Export Profile\"),\n\t\t\t\tasync validateInput(input) {\n\t\t\t\t\tif (!input.trim()) {\n\t\t\t\t\t\treturn localize('profile name required', \"Profile name must be provided.\");\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (!name) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn super.getProfileTemplate(name, this.profile.shortName);\n\t}\n\n}\n\nclass UserDataProfileImportState extends UserDataProfileImportExportState {\n\n\tprivate readonly disposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\treadonly profile: IUserDataProfileTemplate,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper(quickInputService);\n\t}\n\n\tprotected async fetchRoots(): Promise<IProfileResourceTreeItem[]> {\n\t\tthis.disposables.clear();\n\n\t\tconst inMemoryProvider = this._register(new InMemoryFileSystemProvider());\n\t\tthis.disposables.add(this.fileService.registerProvider(USER_DATA_PROFILE_IMPORT_PREVIEW_SCHEME, inMemoryProvider));\n\t\tconst roots: IProfileResourceTreeItem[] = [];\n\t\tconst importPreviewProfle = toUserDataProfile(generateUuid(), this.profile.name, URI.file('/root').with({ scheme: USER_DATA_PROFILE_IMPORT_PREVIEW_SCHEME }), URI.file('/cache').with({ scheme: USER_DATA_PROFILE_IMPORT_PREVIEW_SCHEME }));\n\n\t\tif (this.profile.settings) {\n\t\t\tconst settingsResource = this.instantiationService.createInstance(SettingsResource);\n\t\t\tawait settingsResource.apply(this.profile.settings, importPreviewProfle);\n\t\t\tconst settingsResourceTreeItem = this.instantiationService.createInstance(SettingsResourceTreeItem, importPreviewProfle);\n\t\t\tif (await settingsResourceTreeItem.hasContent()) {\n\t\t\t\troots.push(settingsResourceTreeItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.profile.keybindings) {\n\t\t\tconst keybindingsResource = this.instantiationService.createInstance(KeybindingsResource);\n\t\t\tawait keybindingsResource.apply(this.profile.keybindings, importPreviewProfle);\n\t\t\tconst keybindingsResourceTreeItem = this.instantiationService.createInstance(KeybindingsResourceTreeItem, importPreviewProfle);\n\t\t\tif (await keybindingsResourceTreeItem.hasContent()) {\n\t\t\t\troots.push(keybindingsResourceTreeItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.profile.snippets) {\n\t\t\tconst snippetsResource = this.instantiationService.createInstance(SnippetsResource);\n\t\t\tawait snippetsResource.apply(this.profile.snippets, importPreviewProfle);\n\t\t\tconst snippetsResourceTreeItem = this.instantiationService.createInstance(SnippetsResourceTreeItem, importPreviewProfle);\n\t\t\tif (await snippetsResourceTreeItem.hasContent()) {\n\t\t\t\troots.push(snippetsResourceTreeItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.profile.tasks) {\n\t\t\tconst tasksResource = this.instantiationService.createInstance(TasksResource);\n\t\t\tawait tasksResource.apply(this.profile.tasks, importPreviewProfle);\n\t\t\tconst tasksResourceTreeItem = this.instantiationService.createInstance(TasksResourceTreeItem, importPreviewProfle);\n\t\t\tif (await tasksResourceTreeItem.hasContent()) {\n\t\t\t\troots.push(tasksResourceTreeItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.profile.globalState) {\n\t\t\tconst globalStateResource = joinPath(importPreviewProfle.globalStorageHome, 'globalState.json');\n\t\t\tconst content = VSBuffer.fromString(JSON.stringify(JSON.parse(this.profile.globalState), null, '\\t'));\n\t\t\tif (content) {\n\t\t\t\tawait this.fileService.writeFile(globalStateResource, content);\n\t\t\t\troots.push(this.instantiationService.createInstance(GlobalStateResourceImportTreeItem, this.profile.globalState, globalStateResource));\n\t\t\t}\n\t\t}\n\n\t\tif (this.profile.extensions) {\n\t\t\tconst extensionsResourceTreeItem = this.instantiationService.createInstance(ExtensionsResourceImportTreeItem, this.profile.extensions);\n\t\t\tif (await extensionsResourceTreeItem.hasContent()) {\n\t\t\t\troots.push(extensionsResourceTreeItem);\n\t\t\t}\n\t\t}\n\n\t\tinMemoryProvider.setReadOnly(true);\n\n\t\treturn roots;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !(this.profile.settings || this.profile.keybindings || this.profile.tasks || this.profile.snippets || this.profile.globalState || this.profile.extensions);\n\t}\n\n\tasync getProfileTemplateToImport(): Promise<IUserDataProfileTemplate> {\n\t\treturn this.getProfileTemplate(this.profile.name, this.profile.shortName);\n\t}\n\n}\n\nclass BarrierAction extends Action {\n\tconstructor(barrier: Barrier, action: Action,\n\t\tnotificationService: INotificationService) {\n\t\tsuper(action.id, action.label, action.class, action.enabled, async () => {\n\t\t\ttry {\n\t\t\t\tawait action.run();\n\t\t\t} catch (error) {\n\t\t\t\tnotificationService.error(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tbarrier.open();\n\t\t});\n\t}\n}\n\nregisterSingleton(IUserDataProfileImportExportService, UserDataProfileImportExportService, InstantiationType.Delayed);\n"]}