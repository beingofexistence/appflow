{"version":3,"sources":["vs/workbench/services/userDataProfile/browser/keybindingsResource.ts"],"names":[],"mappings":"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","file":"keybindingsResource.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { FileOperationError, FileOperationResult, IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProfileResource, IProfileResourceChildTreeItem, IProfileResourceInitializer, IProfileResourceTreeItem, IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { platform, Platform } from 'vs/base/common/platform';\nimport { ITreeItemCheckboxState, TreeItemCollapsibleState } from 'vs/workbench/common/views';\nimport { IUserDataProfile, ProfileResourceType } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { API_OPEN_EDITOR_COMMAND_ID } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { localize } from 'vs/nls';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\n\ninterface IKeybindingsResourceContent {\n\tplatform: Platform;\n\tkeybindings: string | null;\n}\n\nexport class KeybindingsResourceInitializer implements IProfileResourceInitializer {\n\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t}\n\n\tasync initialize(content: string): Promise<void> {\n\t\tconst keybindingsContent: IKeybindingsResourceContent = JSON.parse(content);\n\t\tif (keybindingsContent.keybindings === null) {\n\t\t\tthis.logService.info(`Initializing Profile: No keybindings to apply...`);\n\t\t\treturn;\n\t\t}\n\t\tawait this.fileService.writeFile(this.userDataProfileService.currentProfile.keybindingsResource, VSBuffer.fromString(keybindingsContent.keybindings));\n\t}\n}\n\nexport class KeybindingsResource implements IProfileResource {\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t}\n\n\tasync getContent(profile: IUserDataProfile): Promise<string> {\n\t\tconst keybindingsContent = await this.getKeybindingsResourceContent(profile);\n\t\treturn JSON.stringify(keybindingsContent);\n\t}\n\n\tasync getKeybindingsResourceContent(profile: IUserDataProfile): Promise<IKeybindingsResourceContent> {\n\t\tconst keybindings = await this.getKeybindingsContent(profile);\n\t\treturn { keybindings, platform };\n\t}\n\n\tasync apply(content: string, profile: IUserDataProfile): Promise<void> {\n\t\tconst keybindingsContent: IKeybindingsResourceContent = JSON.parse(content);\n\t\tif (keybindingsContent.keybindings === null) {\n\t\t\tthis.logService.info(`Importing Profile (${profile.name}): No keybindings to apply...`);\n\t\t\treturn;\n\t\t}\n\t\tawait this.fileService.writeFile(profile.keybindingsResource, VSBuffer.fromString(keybindingsContent.keybindings));\n\t}\n\n\tprivate async getKeybindingsContent(profile: IUserDataProfile): Promise<string | null> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(profile.keybindingsResource);\n\t\t\treturn content.value.toString();\n\t\t} catch (error) {\n\t\t\t// File not found\n\t\t\tif (error instanceof FileOperationError && error.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport class KeybindingsResourceTreeItem implements IProfileResourceTreeItem {\n\n\treadonly type = ProfileResourceType.Keybindings;\n\treadonly handle = ProfileResourceType.Keybindings;\n\treadonly label = { label: localize('keybindings', \"Keyboard Shortcuts\") };\n\treadonly collapsibleState = TreeItemCollapsibleState.Expanded;\n\tcheckbox: ITreeItemCheckboxState | undefined;\n\n\tconstructor(\n\t\tprivate readonly profile: IUserDataProfile,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) { }\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn !this.profile.isDefault && !!this.profile.useDefaultFlags?.keybindings;\n\t}\n\n\tasync getChildren(): Promise<IProfileResourceChildTreeItem[]> {\n\t\treturn [{\n\t\t\thandle: this.profile.keybindingsResource.toString(),\n\t\t\tresourceUri: this.profile.keybindingsResource,\n\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\tparent: this,\n\t\t\taccessibilityInformation: {\n\t\t\t\tlabel: this.uriIdentityService.extUri.basename(this.profile.settingsResource)\n\t\t\t},\n\t\t\tcommand: {\n\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\ttitle: '',\n\t\t\t\targuments: [this.profile.keybindingsResource, undefined, undefined]\n\t\t\t}\n\t\t}];\n\t}\n\n\tasync hasContent(): Promise<boolean> {\n\t\tconst keybindingsContent = await this.instantiationService.createInstance(KeybindingsResource).getKeybindingsResourceContent(this.profile);\n\t\treturn keybindingsContent.keybindings !== null;\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\treturn this.instantiationService.createInstance(KeybindingsResource).getContent(this.profile);\n\t}\n\n}\n"]}