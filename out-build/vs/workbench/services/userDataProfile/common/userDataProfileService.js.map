{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/userDataProfile/common/userDataProfileService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG,MAAa,IAAuB,SAAQ,eAAG;QAQ9C,IAAI,cAAc,KAAuB,OAAO,IAAI,CAAC,CAAC,CAAe,CAAC,CAAC;QAEvE,YACC,cAAgC;YAEhC,KAAK,EAAE,CAAC;YATQ,MAAC,GAA4B,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAqC,CAAC,CAAC;YAClG,8BAAyB,GAAG,IAAI,CAAC,CAAC,CAA0B,KAAK,CAAC;YAS1E,IAAI,CAAC,CAAC,GAAiB,cAAc,CAAC;QACvC,CAAC;QAED,KAAK,CAAC,oBAAoB,CAAC,eAAiC;YAC3D,IAAI,IAAA,aAAG,EAAI,IAAI,CAAC,CAAC,EAAgB,eAAe,CAAC,EAAE;gBAClD,OAAO;aACP;YACD,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAe;YACtC,IAAI,CAAC,CAAC,GAAiB,eAAe,CAAC;YACvC,MAAM,OAAO,GAAoB,EAAE,CAAC;YACpC,IAAI,CAAC,CAAC,CAA0B,IAAI,CAAC;gBACpC,QAAQ;gBACR,OAAO,EAAE,eAAe;gBACxB,IAAI,CAAC,OAAO;oBACX,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACvB,CAAC;aACD,CAAC,CAAC;YACH,MAAM,gBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC;QAED,YAAY,CAAC,OAAyB;YACrC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,IAAI,qBAAS,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gBACnF,OAAO,OAAO,CAAC,SAAS,CAAC;aACzB;YACD,OAAO,KAAK,qBAAG,CAAwB,EAAE,GAAG,CAAC;QAC9C,CAAC;KAED;IAzCD,oBAyCC","file":"userDataProfileService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from 'vs/base/common/async';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { equals } from 'vs/base/common/objects';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { IUserDataProfile } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { defaultUserDataProfileIcon, DidChangeUserDataProfileEvent, IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\n\nexport class UserDataProfileService extends Disposable implements IUserDataProfileService {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeCurrentProfile = this._register(new Emitter<DidChangeUserDataProfileEvent>());\n\treadonly onDidChangeCurrentProfile = this._onDidChangeCurrentProfile.event;\n\n\tprivate _currentProfile: IUserDataProfile;\n\tget currentProfile(): IUserDataProfile { return this._currentProfile; }\n\n\tconstructor(\n\t\tcurrentProfile: IUserDataProfile\n\t) {\n\t\tsuper();\n\t\tthis._currentProfile = currentProfile;\n\t}\n\n\tasync updateCurrentProfile(userDataProfile: IUserDataProfile): Promise<void> {\n\t\tif (equals(this._currentProfile, userDataProfile)) {\n\t\t\treturn;\n\t\t}\n\t\tconst previous = this._currentProfile;\n\t\tthis._currentProfile = userDataProfile;\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onDidChangeCurrentProfile.fire({\n\t\t\tprevious,\n\t\t\tprofile: userDataProfile,\n\t\t\tjoin(promise) {\n\t\t\t\tjoiners.push(promise);\n\t\t\t}\n\t\t});\n\t\tawait Promises.settled(joiners);\n\t}\n\n\tgetShortName(profile: IUserDataProfile): string {\n\t\tif (!profile.isDefault && profile.shortName && ThemeIcon.fromId(profile.shortName)) {\n\t\t\treturn profile.shortName;\n\t\t}\n\t\treturn `$(${defaultUserDataProfileIcon.id})`;\n\t}\n\n}\n"]}