{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensionManagement/common/remoteExtensionManagementService.ts"],"names":[],"mappings":"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","file":"remoteExtensionManagementService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { URI } from 'vs/base/common/uri';\nimport { DidChangeProfileEvent, IProfileAwareExtensionManagementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IRemoteUserDataProfilesService } from 'vs/workbench/services/userDataProfile/common/remoteUserDataProfiles';\nimport { ProfileAwareExtensionManagementChannelClient } from 'vs/workbench/services/extensionManagement/common/extensionManagementChannelClient';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { ExtensionEventResult } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport class RemoteExtensionManagementService extends ProfileAwareExtensionManagementChannelClient implements IProfileAwareExtensionManagementService {\n\n\tconstructor(\n\t\tchannel: IChannel,\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IRemoteUserDataProfilesService private readonly remoteUserDataProfilesService: IRemoteUserDataProfilesService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService\n\t) {\n\t\tsuper(channel, userDataProfileService, uriIdentityService);\n\t}\n\n\tprotected async filterEvent(e: ExtensionEventResult): Promise<boolean> {\n\t\tif (e.applicationScoped) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!e.profileLocation && this.userDataProfileService.currentProfile.isDefault) {\n\t\t\treturn true;\n\t\t}\n\t\tconst currentRemoteProfile = await this.remoteUserDataProfilesService.getRemoteProfile(this.userDataProfileService.currentProfile);\n\t\tif (this.uriIdentityService.extUri.isEqual(currentRemoteProfile.extensionsResource, e.profileLocation)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected override getProfileLocation(profileLocation: URI): Promise<URI>;\n\tprotected override getProfileLocation(profileLocation?: URI): Promise<URI | undefined>;\n\tprotected override async getProfileLocation(profileLocation?: URI): Promise<URI | undefined> {\n\t\tif (!profileLocation && this.userDataProfileService.currentProfile.isDefault) {\n\t\t\treturn undefined;\n\t\t}\n\t\tprofileLocation = await super.getProfileLocation(profileLocation);\n\t\tlet profile = this.userDataProfilesService.profiles.find(p => this.uriIdentityService.extUri.isEqual(p.extensionsResource, profileLocation));\n\t\tif (profile) {\n\t\t\tprofile = await this.remoteUserDataProfilesService.getRemoteProfile(profile);\n\t\t} else {\n\t\t\tprofile = (await this.remoteUserDataProfilesService.getRemoteProfiles()).find(p => this.uriIdentityService.extUri.isEqual(p.extensionsResource, profileLocation));\n\t\t}\n\t\treturn profile?.extensionsResource;\n\t}\n\n\tprotected override async switchExtensionsProfile(previousProfileLocation: URI, currentProfileLocation: URI, preserveExtensions?: ExtensionIdentifier[]): Promise<DidChangeProfileEvent> {\n\t\tconst remoteProfiles = await this.remoteUserDataProfilesService.getRemoteProfiles();\n\t\tconst previousProfile = remoteProfiles.find(p => this.uriIdentityService.extUri.isEqual(p.extensionsResource, previousProfileLocation));\n\t\tconst currentProfile = remoteProfiles.find(p => this.uriIdentityService.extUri.isEqual(p.extensionsResource, currentProfileLocation));\n\t\tif (previousProfile?.id === currentProfile?.id) {\n\t\t\treturn { added: [], removed: [] };\n\t\t}\n\t\treturn super.switchExtensionsProfile(previousProfileLocation, currentProfileLocation, preserveExtensions);\n\t}\n}\n"]}