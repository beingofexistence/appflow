{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensionManagement/common/extensionManagementChannelClient.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAchG,MAAsB,IAA6C,SAAQ,4BAAoC;QAK9G,YAAY,OAAiB,EACT,CAA2B,EAC3B,CAAuB;YAE1C,KAAK,CAAC,OAAO,CAAC,CAAC;YAHI,MAAC,GAAD,CAAC,CAA0B;YAC3B,MAAC,GAAD,CAAC,CAAsB;YAL1B,MAAC,GAAqB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAkF,CAAC,CAAC;YACxI,uBAAkB,GAAG,IAAI,CAAC,CAAC,CAAmB,KAAK,CAAC;YAO5D,IAAI,CAAC,CAAC,CAAS,CAAC,CAAsB,yBAAyB,CAAC,CAAC,CAAC,EAAE;gBACnE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE;oBACzG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAkB,CAAC,CAAC,CAAC,CAAC;iBACnC;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAQkB,KAAK,CAAC,CAAC,CAAS,IAAS,EAAE,IAAS;YACtD,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACxB,MAAM,KAAK,GAAG,IAAuC,CAAC;gBACtD,MAAM,IAAI,GAAG,IAA8B,CAAC;gBAC5C,MAAM,QAAQ,GAAG,EAAE,CAAC;gBACpB,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;oBACrB,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAW,CAAC,CAAC,CAAC;oBACnC,IAAI,MAAM,YAAY,OAAO,CAAC,CAAC,CAAC,MAAM,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE;wBACtD,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBACjB;iBACD;gBACD,IAAI,QAAQ,CAAC,MAAM,EAAE;oBACpB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACrB;aACD;iBAAM;gBACN,MAAM,KAAK,GAAG,IAAqC,CAAC;gBACpD,MAAM,IAAI,GAAG,IAA4B,CAAC;gBAC1C,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAW,IAAI,CAAC,CAAC;gBACtC,IAAI,MAAM,YAAY,OAAO,CAAC,CAAC,CAAC,MAAM,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE;oBACtD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjB;aACD;QACF,CAAC;QAEQ,KAAK,CAAC,OAAO,CAAC,IAAS,EAAE,cAAmC;YACpE,cAAc,GAAG,EAAE,GAAG,cAAc,EAAE,eAAe,EAAE,MAAM,IAAI,CAAC,CAAC,CAAkB,cAAc,EAAE,eAAe,CAAC,EAAE,CAAC;YACxH,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QAC5C,CAAC;QAEQ,KAAK,CAAC,mBAAmB,CAAC,QAAa,EAAE,eAAoB;YACrE,OAAO,KAAK,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,IAAI,CAAC,CAAC,CAAkB,eAAe,CAAC,CAAC,CAAC;QAC5F,CAAC;QAEQ,KAAK,CAAC,kBAAkB,CAAC,SAA4B,EAAE,cAA+B;YAC9F,cAAc,GAAG,EAAE,GAAG,cAAc,EAAE,eAAe,EAAE,MAAM,IAAI,CAAC,CAAC,CAAkB,cAAc,EAAE,eAAe,CAAC,EAAE,CAAC;YACxH,OAAO,KAAK,CAAC,kBAAkB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;QAC5D,CAAC;QAEQ,KAAK,CAAC,wBAAwB,CAAC,UAAkC;YACzE,MAAM,KAAK,GAA2B,EAAE,CAAC;YACzC,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;gBACnC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,SAAS,EAAE,OAAO,EAAE,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,eAAe,EAAE,SAAS,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAkB,SAAS,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;aACvM;YACD,OAAO,KAAK,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QAC9C,CAAC;QAEQ,KAAK,CAAC,SAAS,CAAC,SAA0B,EAAE,OAA0B;YAC9E,OAAO,GAAG,EAAE,GAAG,OAAO,EAAE,eAAe,EAAE,MAAM,IAAI,CAAC,CAAC,CAAkB,OAAO,EAAE,eAAe,CAAC,EAAE,CAAC;YACnG,OAAO,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAC5C,CAAC;QAEQ,KAAK,CAAC,YAAY,CAAC,OAA6B,IAAI,EAAE,yBAA+B;YAC7F,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,IAAI,CAAC,CAAC,CAAkB,yBAAyB,CAAC,CAAC,CAAC;QAC3F,CAAC;QAEQ,KAAK,CAAC,cAAc,CAAC,KAAsB,EAAE,QAA2B,EAAE,yBAA+B;YACjH,OAAO,KAAK,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,IAAI,CAAC,CAAC,CAAkB,yBAAyB,CAAC,CAAC,CAAC;QACxG,CAAC;QAEQ,KAAK,CAAC,qBAAqB,CAAC,KAAsB,EAAE,mBAAwB;YACpF,OAAO,KAAK,CAAC,qBAAqB,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,CAAC,CAAkB,mBAAmB,CAAC,CAAC,CAAC;QAC/F,CAAC;QAEQ,KAAK,CAAC,cAAc,CAAC,mBAAwB,EAAE,iBAAsB;YAC7E,OAAO,KAAK,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,CAAC,CAAkB,mBAAmB,CAAC,EAAE,MAAM,IAAI,CAAC,CAAC,CAAkB,iBAAiB,CAAC,CAAC,CAAC;QACnI,CAAC;QAEO,KAAK,CAAC,CAAC,CAAkB,CAAgC;YAChE,MAAM,uBAAuB,GAAG,MAAM,IAAI,CAAC,CAAC,CAAkB,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YAC7F,MAAM,sBAAsB,GAAG,MAAM,IAAI,CAAC,CAAC,CAAkB,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;YAE3F,IAAI,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,OAAO,CAAC,uBAAuB,EAAE,sBAAsB,CAAC,EAAE;gBAC5F,OAAO;aACP;YAED,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,CAAC,CAAuB,uBAAuB,EAAE,sBAAsB,CAAC,CAAC;YACtG,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1C,CAAC;QAES,KAAK,CAAC,CAAC,CAAuB,uBAA4B,EAAE,sBAA2B,EAAE,kBAA0C;YAC5I,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,YAAY,6BAAqB,uBAAuB,CAAC,CAAC;YAC3F,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,YAAY,6BAAqB,sBAAsB,CAAC,CAAC;YAC1F,IAAI,kBAAkB,EAAE,MAAM,EAAE;gBAC/B,MAAM,mBAAmB,GAA2B,EAAE,CAAC;gBACvD,KAAK,MAAM,SAAS,IAAI,aAAa,EAAE;oBACtC,IAAI,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,gBAAG,CAAiB,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;wBACzF,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,gBAAG,CAAiB,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE;wBAChG,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;qBAC/C;iBACD;gBACD,IAAI,mBAAmB,CAAC,MAAM,EAAE;oBAC/B,MAAM,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,EAAE,uBAAuB,EAAE,sBAAsB,CAAC,CAAC;iBAC9G;aACD;YACD,OAAO,IAAA,YAAG,EAAG,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAA,aAAG,EAAK,GAAG,gBAAG,CAAiB,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,GAAG,gBAAG,CAAiB,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAC7M,CAAC;QAIS,KAAK,CAAC,CAAC,CAAkB,eAAqB;YACvD,OAAO,eAAe,IAAI,IAAI,CAAC,CAAC,CAAsB,cAAc,CAAC,kBAAkB,CAAC;QACzF,CAAC;KAGD;IA/HD,oBA+HC","file":"extensionManagementChannelClient.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, InstallOptions, InstallVSIXOptions, UninstallOptions, Metadata, DidUninstallExtensionEvent, InstallExtensionEvent, InstallExtensionResult, UninstallExtensionEvent, InstallExtensionInfo } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtensionIdentifier, ExtensionType, IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionManagementChannelClient as BaseExtensionManagementChannelClient, ExtensionEventResult } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { DidChangeUserDataProfileEvent, IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { Emitter } from 'vs/base/common/event';\nimport { delta } from 'vs/base/common/arrays';\nimport { compare } from 'vs/base/common/strings';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { DidChangeProfileEvent, IProfileAwareExtensionManagementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\n\nexport abstract class ProfileAwareExtensionManagementChannelClient extends BaseExtensionManagementChannelClient implements IProfileAwareExtensionManagementService {\n\n\tprivate readonly _onDidChangeProfile = this._register(new Emitter<{ readonly added: ILocalExtension[]; readonly removed: ILocalExtension[] }>());\n\treadonly onDidChangeProfile = this._onDidChangeProfile.event;\n\n\tconstructor(channel: IChannel,\n\t\tprotected readonly userDataProfileService: IUserDataProfileService,\n\t\tprotected readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(channel);\n\t\tthis._register(userDataProfileService.onDidChangeCurrentProfile(e => {\n\t\t\tif (!this.uriIdentityService.extUri.isEqual(e.previous.extensionsResource, e.profile.extensionsResource)) {\n\t\t\t\te.join(this.whenProfileChanged(e));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected override fireEvent(event: Emitter<InstallExtensionEvent>, data: InstallExtensionEvent): Promise<void>;\n\tprotected override fireEvent(event: Emitter<readonly InstallExtensionResult[]>, data: InstallExtensionResult[]): Promise<void>;\n\tprotected override fireEvent(event: Emitter<UninstallExtensionEvent>, data: UninstallExtensionEvent): Promise<void>;\n\tprotected override fireEvent(event: Emitter<DidUninstallExtensionEvent>, data: DidUninstallExtensionEvent): Promise<void>;\n\tprotected override fireEvent(event: Emitter<ExtensionEventResult>, data: ExtensionEventResult): Promise<void>;\n\tprotected override fireEvent(event: Emitter<ExtensionEventResult[]>, data: ExtensionEventResult[]): Promise<void>;\n\tprotected override async fireEvent(arg0: any, arg1: any): Promise<void> {\n\t\tif (Array.isArray(arg1)) {\n\t\t\tconst event = arg0 as Emitter<ExtensionEventResult[]>;\n\t\t\tconst data = arg1 as ExtensionEventResult[];\n\t\t\tconst filtered = [];\n\t\t\tfor (const e of data) {\n\t\t\t\tconst result = this.filterEvent(e);\n\t\t\t\tif (result instanceof Promise ? await result : result) {\n\t\t\t\t\tfiltered.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filtered.length) {\n\t\t\t\tevent.fire(filtered);\n\t\t\t}\n\t\t} else {\n\t\t\tconst event = arg0 as Emitter<ExtensionEventResult>;\n\t\t\tconst data = arg1 as ExtensionEventResult;\n\t\t\tconst result = this.filterEvent(data);\n\t\t\tif (result instanceof Promise ? await result : result) {\n\t\t\t\tevent.fire(data);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride async install(vsix: URI, installOptions?: InstallVSIXOptions): Promise<ILocalExtension> {\n\t\tinstallOptions = { ...installOptions, profileLocation: await this.getProfileLocation(installOptions?.profileLocation) };\n\t\treturn super.install(vsix, installOptions);\n\t}\n\n\toverride async installFromLocation(location: URI, profileLocation: URI): Promise<ILocalExtension> {\n\t\treturn super.installFromLocation(location, await this.getProfileLocation(profileLocation));\n\t}\n\n\toverride async installFromGallery(extension: IGalleryExtension, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\t\tinstallOptions = { ...installOptions, profileLocation: await this.getProfileLocation(installOptions?.profileLocation) };\n\t\treturn super.installFromGallery(extension, installOptions);\n\t}\n\n\toverride async installGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<InstallExtensionResult[]> {\n\t\tconst infos: InstallExtensionInfo[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tinfos.push({ ...extension, options: { ...extension.options, profileLocation: extension.options?.profileLocation ? (await this.getProfileLocation(extension.options?.profileLocation)) : undefined } });\n\t\t}\n\t\treturn super.installGalleryExtensions(infos);\n\t}\n\n\toverride async uninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void> {\n\t\toptions = { ...options, profileLocation: await this.getProfileLocation(options?.profileLocation) };\n\t\treturn super.uninstall(extension, options);\n\t}\n\n\toverride async getInstalled(type: ExtensionType | null = null, extensionsProfileResource?: URI): Promise<ILocalExtension[]> {\n\t\treturn super.getInstalled(type, await this.getProfileLocation(extensionsProfileResource));\n\t}\n\n\toverride async updateMetadata(local: ILocalExtension, metadata: Partial<Metadata>, extensionsProfileResource?: URI): Promise<ILocalExtension> {\n\t\treturn super.updateMetadata(local, metadata, await this.getProfileLocation(extensionsProfileResource));\n\t}\n\n\toverride async toggleAppliationScope(local: ILocalExtension, fromProfileLocation: URI): Promise<ILocalExtension> {\n\t\treturn super.toggleAppliationScope(local, await this.getProfileLocation(fromProfileLocation));\n\t}\n\n\toverride async copyExtensions(fromProfileLocation: URI, toProfileLocation: URI): Promise<void> {\n\t\treturn super.copyExtensions(await this.getProfileLocation(fromProfileLocation), await this.getProfileLocation(toProfileLocation));\n\t}\n\n\tprivate async whenProfileChanged(e: DidChangeUserDataProfileEvent): Promise<void> {\n\t\tconst previousProfileLocation = await this.getProfileLocation(e.previous.extensionsResource);\n\t\tconst currentProfileLocation = await this.getProfileLocation(e.profile.extensionsResource);\n\n\t\tif (this.uriIdentityService.extUri.isEqual(previousProfileLocation, currentProfileLocation)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst eventData = await this.switchExtensionsProfile(previousProfileLocation, currentProfileLocation);\n\t\tthis._onDidChangeProfile.fire(eventData);\n\t}\n\n\tprotected async switchExtensionsProfile(previousProfileLocation: URI, currentProfileLocation: URI, preserveExtensions?: ExtensionIdentifier[]): Promise<DidChangeProfileEvent> {\n\t\tconst oldExtensions = await this.getInstalled(ExtensionType.User, previousProfileLocation);\n\t\tconst newExtensions = await this.getInstalled(ExtensionType.User, currentProfileLocation);\n\t\tif (preserveExtensions?.length) {\n\t\t\tconst extensionsToInstall: IExtensionIdentifier[] = [];\n\t\t\tfor (const extension of oldExtensions) {\n\t\t\t\tif (preserveExtensions.some(id => ExtensionIdentifier.equals(extension.identifier.id, id)) &&\n\t\t\t\t\t!newExtensions.some(e => ExtensionIdentifier.equals(e.identifier.id, extension.identifier.id))) {\n\t\t\t\t\textensionsToInstall.push(extension.identifier);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (extensionsToInstall.length) {\n\t\t\t\tawait this.installExtensionsFromProfile(extensionsToInstall, previousProfileLocation, currentProfileLocation);\n\t\t\t}\n\t\t}\n\t\treturn delta(oldExtensions, newExtensions, (a, b) => compare(`${ExtensionIdentifier.toKey(a.identifier.id)}@${a.manifest.version}`, `${ExtensionIdentifier.toKey(b.identifier.id)}@${b.manifest.version}`));\n\t}\n\n\tprotected getProfileLocation(profileLocation: URI): Promise<URI>;\n\tprotected getProfileLocation(profileLocation?: URI): Promise<URI | undefined>;\n\tprotected async getProfileLocation(profileLocation?: URI): Promise<URI | undefined> {\n\t\treturn profileLocation ?? this.userDataProfileService.currentProfile.extensionsResource;\n\t}\n\n\tprotected abstract filterEvent(e: ExtensionEventResult): boolean | Promise<boolean>;\n}\n"]}