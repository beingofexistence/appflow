{"version":3,"sources":["vs/workbench/services/extensionManagement/common/extensionManagementService.ts"],"names":[],"mappings":"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","file":"extensionManagementService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, EventMultiplexer } from 'vs/base/common/event';\nimport {\n\tILocalExtension, IGalleryExtension, IExtensionIdentifier, IExtensionsControlManifest, IExtensionGalleryService, InstallOptions, UninstallOptions, InstallVSIXOptions, InstallExtensionResult, ExtensionManagementError, ExtensionManagementErrorCode, Metadata, InstallOperation, EXTENSION_INSTALL_SYNC_CONTEXT, InstallExtensionInfo\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { DidChangeProfileForServerEvent, DidUninstallExtensionOnServerEvent, IExtensionManagementServer, IExtensionManagementServerService, InstallExtensionOnServerEvent, IWorkbenchExtensionManagementService, UninstallExtensionOnServerEvent } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { ExtensionType, isLanguagePackExtension, IExtensionManifest, getWorkspaceSupportTypeMessage, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { URI } from 'vs/base/common/uri';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { areSameExtensions, computeTargetPlatform } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { localize } from 'vs/nls';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { Schemas } from 'vs/base/common/network';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { flatten } from 'vs/base/common/arrays';\nimport { IDialogService, IPromptButton } from 'vs/platform/dialogs/common/dialogs';\nimport Severity from 'vs/base/common/severity';\nimport { IUserDataSyncEnablementService, SyncResource } from 'vs/platform/userDataSync/common/userDataSync';\nimport { Promises } from 'vs/base/common/async';\nimport { IWorkspaceTrustRequestService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { IExtensionManifestPropertiesService } from 'vs/workbench/services/extensions/common/extensionManifestPropertiesService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { isUndefined } from 'vs/base/common/types';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\n\nexport class ExtensionManagementService extends Disposable implements IWorkbenchExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly onInstallExtension: Event<InstallExtensionOnServerEvent>;\n\treadonly onDidInstallExtensions: Event<readonly InstallExtensionResult[]>;\n\treadonly onUninstallExtension: Event<UninstallExtensionOnServerEvent>;\n\treadonly onDidUninstallExtension: Event<DidUninstallExtensionOnServerEvent>;\n\treadonly onDidUpdateExtensionMetadata: Event<ILocalExtension>;\n\treadonly onDidChangeProfile: Event<DidChangeProfileForServerEvent>;\n\n\tprotected readonly servers: IExtensionManagementServer[] = [];\n\n\tconstructor(\n\t\t@IExtensionManagementServerService protected readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IProductService protected readonly productService: IProductService,\n\t\t@IDownloadService protected readonly downloadService: IDownloadService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IWorkspaceTrustRequestService private readonly workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\tthis.servers.push(this.extensionManagementServerService.localExtensionManagementServer);\n\t\t}\n\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\tthis.servers.push(this.extensionManagementServerService.remoteExtensionManagementServer);\n\t\t}\n\t\tif (this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\tthis.servers.push(this.extensionManagementServerService.webExtensionManagementServer);\n\t\t}\n\n\t\tthis.onInstallExtension = this._register(this.servers.reduce((emitter: EventMultiplexer<InstallExtensionOnServerEvent>, server) => { this._register(emitter.add(Event.map(server.extensionManagementService.onInstallExtension, e => ({ ...e, server })))); return emitter; }, this._register(new EventMultiplexer<InstallExtensionOnServerEvent>()))).event;\n\t\tthis.onDidInstallExtensions = this._register(this.servers.reduce((emitter: EventMultiplexer<readonly InstallExtensionResult[]>, server) => { this._register(emitter.add(server.extensionManagementService.onDidInstallExtensions)); return emitter; }, this._register(new EventMultiplexer<readonly InstallExtensionResult[]>()))).event;\n\t\tthis.onUninstallExtension = this._register(this.servers.reduce((emitter: EventMultiplexer<UninstallExtensionOnServerEvent>, server) => { this._register(emitter.add(Event.map(server.extensionManagementService.onUninstallExtension, e => ({ ...e, server })))); return emitter; }, this._register(new EventMultiplexer<UninstallExtensionOnServerEvent>()))).event;\n\t\tthis.onDidUninstallExtension = this._register(this.servers.reduce((emitter: EventMultiplexer<DidUninstallExtensionOnServerEvent>, server) => { this._register(emitter.add(Event.map(server.extensionManagementService.onDidUninstallExtension, e => ({ ...e, server })))); return emitter; }, this._register(new EventMultiplexer<DidUninstallExtensionOnServerEvent>()))).event;\n\t\tthis.onDidUpdateExtensionMetadata = this._register(this.servers.reduce((emitter: EventMultiplexer<ILocalExtension>, server) => { this._register(emitter.add(server.extensionManagementService.onDidUpdateExtensionMetadata)); return emitter; }, this._register(new EventMultiplexer<ILocalExtension>()))).event;\n\t\tthis.onDidChangeProfile = this._register(this.servers.reduce((emitter: EventMultiplexer<DidChangeProfileForServerEvent>, server) => { this._register(emitter.add(Event.map(server.extensionManagementService.onDidChangeProfile, e => ({ ...e, server })))); return emitter; }, this._register(new EventMultiplexer<DidChangeProfileForServerEvent>()))).event;\n\t}\n\n\tasync getInstalled(type?: ExtensionType, profileLocation?: URI): Promise<ILocalExtension[]> {\n\t\tconst result = await Promise.all(this.servers.map(({ extensionManagementService }) => extensionManagementService.getInstalled(type, profileLocation)));\n\t\treturn flatten(result);\n\t}\n\n\tasync uninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void> {\n\t\tconst server = this.getServer(extension);\n\t\tif (!server) {\n\t\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t\t}\n\t\tif (this.servers.length > 1) {\n\t\t\tif (isLanguagePackExtension(extension.manifest)) {\n\t\t\t\treturn this.uninstallEverywhere(extension, options);\n\t\t\t}\n\t\t\treturn this.uninstallInServer(extension, server, options);\n\t\t}\n\t\treturn server.extensionManagementService.uninstall(extension, options);\n\t}\n\n\tprivate async uninstallEverywhere(extension: ILocalExtension, options?: UninstallOptions): Promise<void> {\n\t\tconst server = this.getServer(extension);\n\t\tif (!server) {\n\t\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t\t}\n\t\tconst promise = server.extensionManagementService.uninstall(extension, options);\n\t\tconst otherServers: IExtensionManagementServer[] = this.servers.filter(s => s !== server);\n\t\tif (otherServers.length) {\n\t\t\tfor (const otherServer of otherServers) {\n\t\t\t\tconst installed = await otherServer.extensionManagementService.getInstalled();\n\t\t\t\textension = installed.filter(i => !i.isBuiltin && areSameExtensions(i.identifier, extension.identifier))[0];\n\t\t\t\tif (extension) {\n\t\t\t\t\tawait otherServer.extensionManagementService.uninstall(extension, options);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async uninstallInServer(extension: ILocalExtension, server: IExtensionManagementServer, options?: UninstallOptions): Promise<void> {\n\t\tif (server === this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\tconst installedExtensions = await this.extensionManagementServerService.remoteExtensionManagementServer!.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t\tconst dependentNonUIExtensions = installedExtensions.filter(i => !this.extensionManifestPropertiesService.prefersExecuteOnUI(i.manifest)\n\t\t\t\t&& i.manifest.extensionDependencies && i.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t\t\tif (dependentNonUIExtensions.length) {\n\t\t\t\treturn Promise.reject(new Error(this.getDependentsErrorMessage(extension, dependentNonUIExtensions)));\n\t\t\t}\n\t\t}\n\t\treturn server.extensionManagementService.uninstall(extension, options);\n\t}\n\n\tprivate getDependentsErrorMessage(extension: ILocalExtension, dependents: ILocalExtension[]): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn localize('singleDependentError', \"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn localize('twoDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn localize('multipleDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.\",\n\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\n\t}\n\n\tasync reinstallFromGallery(extension: ILocalExtension): Promise<ILocalExtension> {\n\t\tconst server = this.getServer(extension);\n\t\tif (server) {\n\t\t\tawait this.checkForWorkspaceTrust(extension.manifest);\n\t\t\treturn server.extensionManagementService.reinstallFromGallery(extension);\n\t\t}\n\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t}\n\n\tupdateMetadata(extension: ILocalExtension, metadata: Partial<Metadata>, profileLocation?: URI): Promise<ILocalExtension> {\n\t\tconst server = this.getServer(extension);\n\t\tif (server) {\n\t\t\treturn server.extensionManagementService.updateMetadata(extension, metadata, profileLocation);\n\t\t}\n\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tconst server = this.getServer(extension);\n\t\tif (server) {\n\t\t\treturn server.extensionManagementService.zip(extension);\n\t\t}\n\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t}\n\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\treturn Promises.settled(this.servers\n\t\t\t// Filter out web server\n\t\t\t.filter(server => server !== this.extensionManagementServerService.webExtensionManagementServer)\n\t\t\t.map(({ extensionManagementService }) => extensionManagementService.unzip(zipLocation))).then(([extensionIdentifier]) => extensionIdentifier);\n\t}\n\n\tdownload(extension: IGalleryExtension, operation: InstallOperation, donotVerifySignature: boolean): Promise<URI> {\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.download(extension, operation, donotVerifySignature);\n\t\t}\n\t\tthrow new Error('Cannot download extension');\n\t}\n\n\tasync install(vsix: URI, options?: InstallVSIXOptions): Promise<ILocalExtension> {\n\t\tconst manifest = await this.getManifest(vsix);\n\t\treturn this.installVSIX(vsix, manifest, options);\n\t}\n\n\tasync installVSIX(vsix: URI, manifest: IExtensionManifest, options?: InstallVSIXOptions): Promise<ILocalExtension> {\n\t\tconst serversToInstall = this.getServersToInstall(manifest);\n\t\tif (serversToInstall?.length) {\n\t\t\tawait this.checkForWorkspaceTrust(manifest);\n\t\t\tconst [local] = await Promises.settled(serversToInstall.map(server => this.installVSIXInServer(vsix, server, options)));\n\t\t\treturn local;\n\t\t}\n\t\treturn Promise.reject('No Servers to Install');\n\t}\n\n\tprivate getServersToInstall(manifest: IExtensionManifest): IExtensionManagementServer[] | undefined {\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer && this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\tif (isLanguagePackExtension(manifest)) {\n\t\t\t\t// Install on both servers\n\t\t\t\treturn [this.extensionManagementServerService.localExtensionManagementServer, this.extensionManagementServerService.remoteExtensionManagementServer];\n\t\t\t}\n\t\t\tif (this.extensionManifestPropertiesService.prefersExecuteOnUI(manifest)) {\n\t\t\t\t// Install only on local server\n\t\t\t\treturn [this.extensionManagementServerService.localExtensionManagementServer];\n\t\t\t}\n\t\t\t// Install only on remote server\n\t\t\treturn [this.extensionManagementServerService.remoteExtensionManagementServer];\n\t\t}\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\treturn [this.extensionManagementServerService.localExtensionManagementServer];\n\t\t}\n\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\treturn [this.extensionManagementServerService.remoteExtensionManagementServer];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tasync installFromLocation(location: URI): Promise<ILocalExtension> {\n\t\tif (location.scheme === Schemas.file) {\n\t\t\tif (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.installFromLocation(location, this.userDataProfileService.currentProfile.extensionsResource);\n\t\t\t}\n\t\t\tthrow new Error('Local extension management server is not found');\n\t\t}\n\t\tif (location.scheme === Schemas.vscodeRemote) {\n\t\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.installFromLocation(location, this.userDataProfileService.currentProfile.extensionsResource);\n\t\t\t}\n\t\t\tthrow new Error('Remote extension management server is not found');\n\t\t}\n\t\tif (!this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\tthrow new Error('Web extension management server is not found');\n\t\t}\n\t\treturn this.extensionManagementServerService.webExtensionManagementServer.extensionManagementService.installFromLocation(location, this.userDataProfileService.currentProfile.extensionsResource);\n\t}\n\n\tprotected installVSIXInServer(vsix: URI, server: IExtensionManagementServer, options: InstallVSIXOptions | undefined): Promise<ILocalExtension> {\n\t\treturn server.extensionManagementService.install(vsix, options);\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tif (vsix.scheme === Schemas.file && this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.getManifest(vsix);\n\t\t}\n\t\tif (vsix.scheme === Schemas.file && this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.getManifest(vsix);\n\t\t}\n\t\tif (vsix.scheme === Schemas.vscodeRemote && this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.getManifest(vsix);\n\t\t}\n\t\treturn Promise.reject('No Servers');\n\t}\n\n\tasync canInstall(gallery: IGalleryExtension): Promise<boolean> {\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer\n\t\t\t&& await this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.canInstall(gallery)) {\n\t\t\treturn true;\n\t\t}\n\t\tconst manifest = await this.extensionGalleryService.getManifest(gallery, CancellationToken.None);\n\t\tif (!manifest) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer\n\t\t\t&& await this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.canInstall(gallery)\n\t\t\t&& this.extensionManifestPropertiesService.canExecuteOnWorkspace(manifest)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.extensionManagementServerService.webExtensionManagementServer\n\t\t\t&& await this.extensionManagementServerService.webExtensionManagementServer.extensionManagementService.canInstall(gallery)\n\t\t\t&& this.extensionManifestPropertiesService.canExecuteOnWeb(manifest)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync updateFromGallery(gallery: IGalleryExtension, extension: ILocalExtension, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\t\tconst server = this.getServer(extension);\n\t\tif (!server) {\n\t\t\treturn Promise.reject(`Invalid location ${extension.location.toString()}`);\n\t\t}\n\n\t\tconst servers: IExtensionManagementServer[] = [];\n\n\t\t// Update Language pack on local and remote servers\n\t\tif (isLanguagePackExtension(extension.manifest)) {\n\t\t\tservers.push(...this.servers.filter(server => server !== this.extensionManagementServerService.webExtensionManagementServer));\n\t\t} else {\n\t\t\tservers.push(server);\n\t\t}\n\n\t\treturn Promises.settled(servers.map(server => server.extensionManagementService.installFromGallery(gallery, installOptions))).then(([local]) => local);\n\t}\n\n\tasync installGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<InstallExtensionResult[]> {\n\t\tconst results = new Map<string, InstallExtensionResult>();\n\n\t\tconst extensionsByServer = new Map<IExtensionManagementServer, InstallExtensionInfo[]>();\n\t\tawait Promise.all(extensions.map(async ({ extension, options }) => {\n\t\t\ttry {\n\t\t\t\tconst servers = await this.validateAndGetExtensionManagementServersToInstall(extension, options);\n\t\t\t\tif (!options.isMachineScoped && this.isExtensionsSyncEnabled()) {\n\t\t\t\t\tif (this.extensionManagementServerService.localExtensionManagementServer && !servers.includes(this.extensionManagementServerService.localExtensionManagementServer) && (await this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.canInstall(extension))) {\n\t\t\t\t\t\tservers.push(this.extensionManagementServerService.localExtensionManagementServer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const server of servers) {\n\t\t\t\t\tlet exensions = extensionsByServer.get(server);\n\t\t\t\t\tif (!exensions) {\n\t\t\t\t\t\textensionsByServer.set(server, exensions = []);\n\t\t\t\t\t}\n\t\t\t\t\texensions.push({ extension, options });\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tresults.set(extension.identifier.id.toLowerCase(), { identifier: extension.identifier, source: extension, error, operation: InstallOperation.Install });\n\t\t\t}\n\t\t}));\n\n\t\tawait Promise.all([...extensionsByServer.entries()].map(async ([server, extensions]) => {\n\t\t\tconst serverResults = await server.extensionManagementService.installGalleryExtensions(extensions);\n\t\t\tfor (const result of serverResults) {\n\t\t\t\tresults.set(result.identifier.id.toLowerCase(), result);\n\t\t\t}\n\t\t}));\n\n\t\treturn [...results.values()];\n\t}\n\n\tasync installFromGallery(gallery: IGalleryExtension, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\t\tconst servers = await this.validateAndGetExtensionManagementServersToInstall(gallery, installOptions);\n\t\tif (!installOptions || isUndefined(installOptions.isMachineScoped)) {\n\t\t\tconst isMachineScoped = await this.hasToFlagExtensionsMachineScoped([gallery]);\n\t\t\tinstallOptions = { ...(installOptions || {}), isMachineScoped };\n\t\t}\n\n\t\tif (!installOptions.isMachineScoped && this.isExtensionsSyncEnabled()) {\n\t\t\tif (this.extensionManagementServerService.localExtensionManagementServer && !servers.includes(this.extensionManagementServerService.localExtensionManagementServer) && (await this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.canInstall(gallery))) {\n\t\t\t\tservers.push(this.extensionManagementServerService.localExtensionManagementServer);\n\t\t\t}\n\t\t}\n\t\treturn Promises.settled(servers.map(server => server.extensionManagementService.installFromGallery(gallery, installOptions))).then(([local]) => local);\n\t}\n\n\tprivate async validateAndGetExtensionManagementServersToInstall(gallery: IGalleryExtension, installOptions?: InstallOptions): Promise<IExtensionManagementServer[]> {\n\n\t\tconst manifest = await this.extensionGalleryService.getManifest(gallery, CancellationToken.None);\n\t\tif (!manifest) {\n\t\t\treturn Promise.reject(localize('Manifest is not found', \"Installing Extension {0} failed: Manifest is not found.\", gallery.displayName || gallery.name));\n\t\t}\n\n\t\tconst servers: IExtensionManagementServer[] = [];\n\n\t\t// Install Language pack on local and remote servers\n\t\tif (isLanguagePackExtension(manifest)) {\n\t\t\tservers.push(...this.servers.filter(server => server !== this.extensionManagementServerService.webExtensionManagementServer));\n\t\t} else {\n\t\t\tconst server = this.getExtensionManagementServerToInstall(manifest);\n\t\t\tif (server) {\n\t\t\t\tservers.push(server);\n\t\t\t}\n\t\t}\n\n\t\tif (!servers.length) {\n\t\t\tconst error = new Error(localize('cannot be installed', \"Cannot install the '{0}' extension because it is not available in this setup.\", gallery.displayName || gallery.name));\n\t\t\terror.name = ExtensionManagementErrorCode.Unsupported;\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!installOptions?.context?.[EXTENSION_INSTALL_SYNC_CONTEXT]) {\n\t\t\tawait this.checkForWorkspaceTrust(manifest);\n\t\t}\n\n\t\tif (!installOptions?.donotIncludePackAndDependencies) {\n\t\t\tawait this.checkInstallingExtensionOnWeb(gallery, manifest);\n\t\t}\n\n\t\treturn servers;\n\t}\n\n\tprivate getExtensionManagementServerToInstall(manifest: IExtensionManifest): IExtensionManagementServer | null {\n\t\t// Only local server\n\t\tif (this.servers.length === 1 && this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer;\n\t\t}\n\n\t\tconst extensionKind = this.extensionManifestPropertiesService.getExtensionKind(manifest);\n\t\tfor (const kind of extensionKind) {\n\t\t\tif (kind === 'ui' && this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer;\n\t\t\t}\n\t\t\tif (kind === 'workspace' && this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer;\n\t\t\t}\n\t\t\tif (kind === 'web' && this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\t\treturn this.extensionManagementServerService.webExtensionManagementServer;\n\t\t\t}\n\t\t}\n\n\t\t// Local server can accept any extension. So return local server if not compatible server found.\n\t\treturn this.extensionManagementServerService.localExtensionManagementServer;\n\t}\n\n\tprivate isExtensionsSyncEnabled(): boolean {\n\t\treturn this.userDataSyncEnablementService.isEnabled() && this.userDataSyncEnablementService.isResourceEnabled(SyncResource.Extensions);\n\t}\n\n\tprivate async hasToFlagExtensionsMachineScoped(extensions: IGalleryExtension[]): Promise<boolean> {\n\t\tif (this.isExtensionsSyncEnabled()) {\n\t\t\tconst { result } = await this.dialogService.prompt<boolean>({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage: extensions.length === 1 ? localize('install extension', \"Install Extension\") : localize('install extensions', \"Install Extensions\"),\n\t\t\t\tdetail: extensions.length === 1\n\t\t\t\t\t? localize('install single extension', \"Would you like to install and synchronize '{0}' extension across your devices?\", extensions[0].displayName)\n\t\t\t\t\t: localize('install multiple extensions', \"Would you like to install and synchronize extensions across your devices?\"),\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize({ key: 'install', comment: ['&& denotes a mnemonic'] }, \"&&Install\"),\n\t\t\t\t\t\trun: () => false\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize({ key: 'install and do no sync', comment: ['&& denotes a mnemonic'] }, \"Install (Do &&not sync)\"),\n\t\t\t\t\t\trun: () => true\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tcancelButton: {\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn result;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.getExtensionsControlManifest();\n\t\t}\n\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.getExtensionsControlManifest();\n\t\t}\n\t\tif (this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.webExtensionManagementServer.extensionManagementService.getExtensionsControlManifest();\n\t\t}\n\t\treturn Promise.resolve({ malicious: [], deprecated: {}, search: [] });\n\t}\n\n\tprivate getServer(extension: ILocalExtension): IExtensionManagementServer | null {\n\t\treturn this.extensionManagementServerService.getExtensionManagementServer(extension);\n\t}\n\n\tprotected async checkForWorkspaceTrust(manifest: IExtensionManifest): Promise<void> {\n\t\tif (this.extensionManifestPropertiesService.getExtensionUntrustedWorkspaceSupportType(manifest) === false) {\n\t\t\tconst trustState = await this.workspaceTrustRequestService.requestWorkspaceTrust({\n\t\t\t\tmessage: localize('extensionInstallWorkspaceTrustMessage', \"Enabling this extension requires a trusted workspace.\"),\n\t\t\t\tbuttons: [\n\t\t\t\t\t{ label: localize('extensionInstallWorkspaceTrustButton', \"Trust Workspace & Install\"), type: 'ContinueWithTrust' },\n\t\t\t\t\t{ label: localize('extensionInstallWorkspaceTrustContinueButton', \"Install\"), type: 'ContinueWithoutTrust' },\n\t\t\t\t\t{ label: localize('extensionInstallWorkspaceTrustManageButton', \"Learn More\"), type: 'Manage' }\n\t\t\t\t]\n\t\t\t});\n\n\t\t\tif (trustState === undefined) {\n\t\t\t\tthrow new CancellationError();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async checkInstallingExtensionOnWeb(extension: IGalleryExtension, manifest: IExtensionManifest): Promise<void> {\n\t\tif (this.servers.length !== 1 || this.servers[0] !== this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nonWebExtensions = [];\n\t\tif (manifest.extensionPack?.length) {\n\t\t\tconst extensions = await this.extensionGalleryService.getExtensions(manifest.extensionPack.map(id => ({ id })), CancellationToken.None);\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tif (!(await this.servers[0].extensionManagementService.canInstall(extension))) {\n\t\t\t\t\tnonWebExtensions.push(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (nonWebExtensions.length && nonWebExtensions.length === extensions.length) {\n\t\t\t\tthrow new ExtensionManagementError('Not supported in Web', ExtensionManagementErrorCode.Unsupported);\n\t\t\t}\n\t\t}\n\n\t\tconst productName = localize('VS Code for Web', \"{0} for the Web\", this.productService.nameLong);\n\t\tconst virtualWorkspaceSupport = this.extensionManifestPropertiesService.getExtensionVirtualWorkspaceSupportType(manifest);\n\t\tconst virtualWorkspaceSupportReason = getWorkspaceSupportTypeMessage(manifest.capabilities?.virtualWorkspaces);\n\t\tconst hasLimitedSupport = virtualWorkspaceSupport === 'limited' || !!virtualWorkspaceSupportReason;\n\n\t\tif (!nonWebExtensions.length && !hasLimitedSupport) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst limitedSupportMessage = localize('limited support', \"'{0}' has limited functionality in {1}.\", extension.displayName || extension.identifier.id, productName);\n\t\tlet message: string;\n\t\tlet buttons: IPromptButton<void>[] = [];\n\t\tlet detail: string | undefined;\n\n\t\tconst installAnywayButton: IPromptButton<void> = {\n\t\t\tlabel: localize({ key: 'install anyways', comment: ['&& denotes a mnemonic'] }, \"&&Install Anyway\"),\n\t\t\trun: () => { }\n\t\t};\n\n\t\tconst showExtensionsButton: IPromptButton<void> = {\n\t\t\tlabel: localize({ key: 'showExtensions', comment: ['&& denotes a mnemonic'] }, \"&&Show Extensions\"),\n\t\t\trun: () => this.instantiationService.invokeFunction(accessor => accessor.get(ICommandService).executeCommand('extension.open', extension.identifier.id, 'extensionPack'))\n\t\t};\n\n\t\tif (nonWebExtensions.length && hasLimitedSupport) {\n\t\t\tmessage = limitedSupportMessage;\n\t\t\tdetail = `${virtualWorkspaceSupportReason ? `${virtualWorkspaceSupportReason}\\n` : ''}${localize('non web extensions detail', \"Contains extensions which are not supported.\")}`;\n\t\t\tbuttons = [\n\t\t\t\tinstallAnywayButton,\n\t\t\t\tshowExtensionsButton\n\t\t\t];\n\t\t}\n\n\t\telse if (hasLimitedSupport) {\n\t\t\tmessage = limitedSupportMessage;\n\t\t\tdetail = virtualWorkspaceSupportReason || undefined;\n\t\t\tbuttons = [installAnywayButton];\n\t\t}\n\n\t\telse {\n\t\t\tmessage = localize('non web extensions', \"'{0}' contains extensions which are not supported in {1}.\", extension.displayName || extension.identifier.id, productName);\n\t\t\tbuttons = [\n\t\t\t\tinstallAnywayButton,\n\t\t\t\tshowExtensionsButton\n\t\t\t];\n\t\t}\n\n\t\tawait this.dialogService.prompt({\n\t\t\ttype: Severity.Info,\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tbuttons,\n\t\t\tcancelButton: {\n\t\t\t\trun: () => { throw new CancellationError(); }\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _targetPlatformPromise: Promise<TargetPlatform> | undefined;\n\tgetTargetPlatform(): Promise<TargetPlatform> {\n\t\tif (!this._targetPlatformPromise) {\n\t\t\tthis._targetPlatformPromise = computeTargetPlatform(this.fileService, this.logService);\n\t\t}\n\t\treturn this._targetPlatformPromise;\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\tawait Promise.allSettled(this.servers.map(server => server.extensionManagementService.cleanUp()));\n\t}\n\n\ttoggleAppliationScope(extension: ILocalExtension, fromProfileLocation: URI): Promise<ILocalExtension> {\n\t\tconst server = this.getServer(extension);\n\t\tif (server) {\n\t\t\treturn server.extensionManagementService.toggleAppliationScope(extension, fromProfileLocation);\n\t\t}\n\t\tthrow new Error('Not Supported');\n\t}\n\n\tcopyExtensions(from: URI, to: URI): Promise<void> {\n\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\tthrow new Error('Not Supported');\n\t\t}\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.copyExtensions(from, to);\n\t\t}\n\t\tif (this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\treturn this.extensionManagementServerService.webExtensionManagementServer.extensionManagementService.copyExtensions(from, to);\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tregisterParticipant() { throw new Error('Not Supported'); }\n\tinstallExtensionsFromProfile(extensions: IExtensionIdentifier[], fromProfileLocation: URI, toProfileLocation: URI): Promise<ILocalExtension[]> { throw new Error('Not Supported'); }\n}\n"]}