{"version":3,"sources":["vs/workbench/services/extensionManagement/browser/webExtensionsScannerService.ts"],"names":[],"mappings":"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","file":"webExtensionsScannerService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IBuiltinExtensionsScannerService, ExtensionType, IExtensionIdentifier, IExtension, IExtensionManifest, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { IScannedExtension, IWebExtensionsScannerService, ScanOptions } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { isWeb, Language } from 'vs/base/common/platform';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { FileOperationError, FileOperationResult, IFileService } from 'vs/platform/files/common/files';\nimport { Queue } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionGalleryService, IExtensionInfo, IGalleryExtension, IGalleryMetadata, Metadata } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, getExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ITranslations, localizeManifest } from 'vs/platform/extensionManagement/common/extensionNls';\nimport { localize } from 'vs/nls';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { isString, isUndefined } from 'vs/base/common/types';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { IExtensionManifestPropertiesService } from 'vs/workbench/services/extensions/common/extensionManifestPropertiesService';\nimport { IExtensionResourceLoaderService, migratePlatformSpecificExtensionGalleryResourceURL } from 'vs/platform/extensionResourceLoader/common/extensionResourceLoader';\nimport { Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { IsWebContext } from 'vs/platform/contextkey/common/contextkeys';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { basename } from 'vs/base/common/path';\nimport { IExtensionStorageService } from 'vs/platform/extensionManagement/common/extensionStorage';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { ILifecycleService, LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { validateExtensionManifest } from 'vs/platform/extensions/common/extensionValidator';\nimport Severity from 'vs/base/common/severity';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\n\ntype GalleryExtensionInfo = { readonly id: string; preRelease?: boolean; migrateStorageFrom?: string };\ntype ExtensionInfo = { readonly id: string; preRelease: boolean };\n\nfunction isGalleryExtensionInfo(obj: unknown): obj is GalleryExtensionInfo {\n\tconst galleryExtensionInfo = obj as GalleryExtensionInfo | undefined;\n\treturn typeof galleryExtensionInfo?.id === 'string'\n\t\t&& (galleryExtensionInfo.preRelease === undefined || typeof galleryExtensionInfo.preRelease === 'boolean')\n\t\t&& (galleryExtensionInfo.migrateStorageFrom === undefined || typeof galleryExtensionInfo.migrateStorageFrom === 'string');\n}\n\nfunction isUriComponents(thing: unknown): thing is UriComponents {\n\tif (!thing) {\n\t\treturn false;\n\t}\n\treturn isString((<any>thing).path) &&\n\t\tisString((<any>thing).scheme);\n}\n\ninterface IStoredWebExtension {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly version: string;\n\treadonly location: UriComponents;\n\treadonly manifest?: IExtensionManifest;\n\treadonly readmeUri?: UriComponents;\n\treadonly changelogUri?: UriComponents;\n\t// deprecated in favor of packageNLSUris & fallbackPackageNLSUri\n\treadonly packageNLSUri?: UriComponents;\n\treadonly packageNLSUris?: IStringDictionary<UriComponents>;\n\treadonly fallbackPackageNLSUri?: UriComponents;\n\treadonly defaultManifestTranslations?: ITranslations | null;\n\treadonly metadata?: Metadata;\n}\n\ninterface IWebExtension {\n\tidentifier: IExtensionIdentifier;\n\tversion: string;\n\tlocation: URI;\n\tmanifest?: IExtensionManifest;\n\treadmeUri?: URI;\n\tchangelogUri?: URI;\n\t// deprecated in favor of packageNLSUris & fallbackPackageNLSUri\n\tpackageNLSUri?: URI;\n\tpackageNLSUris?: Map<string, URI>;\n\tfallbackPackageNLSUri?: URI;\n\tdefaultManifestTranslations?: ITranslations | null;\n\tmetadata?: Metadata;\n}\n\nexport class WebExtensionsScannerService extends Disposable implements IWebExtensionsScannerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly systemExtensionsCacheResource: URI | undefined = undefined;\n\tprivate readonly customBuiltinExtensionsCacheResource: URI | undefined = undefined;\n\tprivate readonly resourcesAccessQueueMap = new ResourceMap<Queue<IWebExtension[]>>();\n\n\tconstructor(\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IBuiltinExtensionsScannerService private readonly builtinExtensionsScannerService: IBuiltinExtensionsScannerService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t\t@IExtensionResourceLoaderService private readonly extensionResourceLoaderService: IExtensionResourceLoaderService,\n\t\t@IExtensionStorageService private readonly extensionStorageService: IExtensionStorageService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t) {\n\t\tsuper();\n\t\tif (isWeb) {\n\t\t\tthis.systemExtensionsCacheResource = joinPath(environmentService.userRoamingDataHome, 'systemExtensionsCache.json');\n\t\t\tthis.customBuiltinExtensionsCacheResource = joinPath(environmentService.userRoamingDataHome, 'customBuiltinExtensionsCache.json');\n\n\t\t\t// Eventually update caches\n\t\t\tlifecycleService.when(LifecyclePhase.Eventually).then(() => this.updateCaches());\n\t\t}\n\t}\n\n\tprivate _customBuiltinExtensionsInfoPromise: Promise<{ extensions: ExtensionInfo[]; extensionsToMigrate: [string, string][]; extensionLocations: URI[]; extensionGalleryResources: URI[] }> | undefined;\n\tprivate readCustomBuiltinExtensionsInfoFromEnv(): Promise<{ extensions: ExtensionInfo[]; extensionsToMigrate: [string, string][]; extensionLocations: URI[]; extensionGalleryResources: URI[] }> {\n\t\tif (!this._customBuiltinExtensionsInfoPromise) {\n\t\t\tthis._customBuiltinExtensionsInfoPromise = (async () => {\n\t\t\t\tlet extensions: ExtensionInfo[] = [];\n\t\t\t\tconst extensionLocations: URI[] = [];\n\t\t\t\tconst extensionGalleryResources: URI[] = [];\n\t\t\t\tconst extensionsToMigrate: [string, string][] = [];\n\t\t\t\tconst customBuiltinExtensionsInfo = this.environmentService.options && Array.isArray(this.environmentService.options.additionalBuiltinExtensions)\n\t\t\t\t\t? this.environmentService.options.additionalBuiltinExtensions.map(additionalBuiltinExtension => isString(additionalBuiltinExtension) ? { id: additionalBuiltinExtension } : additionalBuiltinExtension)\n\t\t\t\t\t: [];\n\t\t\t\tfor (const e of customBuiltinExtensionsInfo) {\n\t\t\t\t\tif (isGalleryExtensionInfo(e)) {\n\t\t\t\t\t\textensions.push({ id: e.id, preRelease: !!e.preRelease });\n\t\t\t\t\t\tif (e.migrateStorageFrom) {\n\t\t\t\t\t\t\textensionsToMigrate.push([e.migrateStorageFrom, e.id]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isUriComponents(e)) {\n\t\t\t\t\t\tconst extensionLocation = URI.revive(e);\n\t\t\t\t\t\tif (this.extensionResourceLoaderService.isExtensionGalleryResource(extensionLocation)) {\n\t\t\t\t\t\t\textensionGalleryResources.push(extensionLocation);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\textensionLocations.push(extensionLocation);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (extensions.length) {\n\t\t\t\t\textensions = await this.checkAdditionalBuiltinExtensions(extensions);\n\t\t\t\t}\n\t\t\t\tif (extensions.length) {\n\t\t\t\t\tthis.logService.info('Found additional builtin gallery extensions in env', extensions);\n\t\t\t\t}\n\t\t\t\tif (extensionLocations.length) {\n\t\t\t\t\tthis.logService.info('Found additional builtin location extensions in env', extensionLocations.map(e => e.toString()));\n\t\t\t\t}\n\t\t\t\tif (extensionGalleryResources.length) {\n\t\t\t\t\tthis.logService.info('Found additional builtin extension gallery resources in env', extensionGalleryResources.map(e => e.toString()));\n\t\t\t\t}\n\t\t\t\treturn { extensions, extensionsToMigrate, extensionLocations, extensionGalleryResources };\n\t\t\t})();\n\t\t}\n\t\treturn this._customBuiltinExtensionsInfoPromise;\n\t}\n\n\tprivate async checkAdditionalBuiltinExtensions(extensions: ExtensionInfo[]): Promise<ExtensionInfo[]> {\n\t\tconst extensionsControlManifest = await this.galleryService.getExtensionsControlManifest();\n\t\tconst result: ExtensionInfo[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tif (extensionsControlManifest.malicious.some(e => areSameExtensions(e, { id: extension.id }))) {\n\t\t\t\tthis.logService.info(`Checking additional builtin extensions: Ignoring '${extension.id}' because it is reported to be malicious.`);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst deprecationInfo = extensionsControlManifest.deprecated[extension.id.toLowerCase()];\n\t\t\tif (deprecationInfo?.extension?.autoMigrate) {\n\t\t\t\tconst preReleaseExtensionId = deprecationInfo.extension.id;\n\t\t\t\tthis.logService.info(`Checking additional builtin extensions: '${extension.id}' is deprecated, instead using '${preReleaseExtensionId}'`);\n\t\t\t\tresult.push({ id: preReleaseExtensionId, preRelease: !!extension.preRelease });\n\t\t\t} else {\n\t\t\t\tresult.push(extension);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * All system extensions bundled with the product\n\t */\n\tprivate async readSystemExtensions(): Promise<IExtension[]> {\n\t\tconst systemExtensions = await this.builtinExtensionsScannerService.scanBuiltinExtensions();\n\t\tconst cachedSystemExtensions = await Promise.all((await this.readSystemExtensionsCache()).map(e => this.toScannedExtension(e, true, ExtensionType.System)));\n\n\t\tconst result = new Map<string, IExtension>();\n\t\tfor (const extension of [...systemExtensions, ...cachedSystemExtensions]) {\n\t\t\tconst existing = result.get(extension.identifier.id.toLowerCase());\n\t\t\tif (existing) {\n\t\t\t\t// Incase there are duplicates always take the latest version\n\t\t\t\tif (semver.gt(existing.manifest.version, extension.manifest.version)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.set(extension.identifier.id.toLowerCase(), extension);\n\t\t}\n\t\treturn [...result.values()];\n\t}\n\n\t/**\n\t * All extensions defined via `additionalBuiltinExtensions` API\n\t */\n\tprivate async readCustomBuiltinExtensions(scanOptions?: ScanOptions): Promise<IScannedExtension[]> {\n\t\tconst [customBuiltinExtensionsFromLocations, customBuiltinExtensionsFromGallery] = await Promise.all([\n\t\t\tthis.getCustomBuiltinExtensionsFromLocations(scanOptions),\n\t\t\tthis.getCustomBuiltinExtensionsFromGallery(scanOptions),\n\t\t]);\n\t\tconst customBuiltinExtensions: IScannedExtension[] = [...customBuiltinExtensionsFromLocations, ...customBuiltinExtensionsFromGallery];\n\t\tawait this.migrateExtensionsStorage(customBuiltinExtensions);\n\t\treturn customBuiltinExtensions;\n\t}\n\n\tprivate async getCustomBuiltinExtensionsFromLocations(scanOptions?: ScanOptions): Promise<IScannedExtension[]> {\n\t\tconst { extensionLocations } = await this.readCustomBuiltinExtensionsInfoFromEnv();\n\t\tif (!extensionLocations.length) {\n\t\t\treturn [];\n\t\t}\n\t\tconst result: IScannedExtension[] = [];\n\t\tawait Promise.allSettled(extensionLocations.map(async extensionLocation => {\n\t\t\ttry {\n\t\t\t\tconst webExtension = await this.toWebExtension(extensionLocation);\n\t\t\t\tconst extension = await this.toScannedExtension(webExtension, true);\n\t\t\t\tif (extension.isValid || !scanOptions?.skipInvalidExtensions) {\n\t\t\t\t\tresult.push(extension);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info(`Skipping invalid additional builtin extension ${webExtension.identifier.id}`);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.info(`Error while fetching the additional builtin extension ${location.toString()}.`, getErrorMessage(error));\n\t\t\t}\n\t\t}));\n\t\treturn result;\n\t}\n\n\tprivate async getCustomBuiltinExtensionsFromGallery(scanOptions?: ScanOptions): Promise<IScannedExtension[]> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthis.logService.info('Ignoring fetching additional builtin extensions from gallery as it is disabled.');\n\t\t\treturn [];\n\t\t}\n\t\tconst result: IScannedExtension[] = [];\n\t\tconst { extensions, extensionGalleryResources } = await this.readCustomBuiltinExtensionsInfoFromEnv();\n\t\ttry {\n\t\t\tconst cacheValue = JSON.stringify({\n\t\t\t\textensions: extensions.sort((a, b) => a.id.localeCompare(b.id)),\n\t\t\t\textensionGalleryResources: extensionGalleryResources.map(e => e.toString()).sort()\n\t\t\t});\n\t\t\tconst useCache = this.storageService.get('additionalBuiltinExtensions', StorageScope.APPLICATION, '{}') === cacheValue;\n\t\t\tconst webExtensions = await (useCache ? this.getCustomBuiltinExtensionsFromCache() : this.updateCustomBuiltinExtensionsCache());\n\t\t\tif (webExtensions.length) {\n\t\t\t\tawait Promise.all(webExtensions.map(async webExtension => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst extension = await this.toScannedExtension(webExtension, true);\n\t\t\t\t\t\tif (extension.isValid || !scanOptions?.skipInvalidExtensions) {\n\t\t\t\t\t\t\tresult.push(extension);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.logService.info(`Skipping invalid additional builtin gallery extension ${webExtension.identifier.id}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.info(`Ignoring additional builtin extension ${webExtension.identifier.id} because there is an error while converting it into scanned extension`, getErrorMessage(error));\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t\tthis.storageService.store('additionalBuiltinExtensions', cacheValue, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t} catch (error) {\n\t\t\tthis.logService.info('Ignoring following additional builtin extensions as there is an error while fetching them from gallery', extensions.map(({ id }) => id), getErrorMessage(error));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getCustomBuiltinExtensionsFromCache(): Promise<IWebExtension[]> {\n\t\tconst cachedCustomBuiltinExtensions = await this.readCustomBuiltinExtensionsCache();\n\t\tconst webExtensionsMap = new Map<string, IWebExtension>();\n\t\tfor (const webExtension of cachedCustomBuiltinExtensions) {\n\t\t\tconst existing = webExtensionsMap.get(webExtension.identifier.id.toLowerCase());\n\t\t\tif (existing) {\n\t\t\t\t// Incase there are duplicates always take the latest version\n\t\t\t\tif (semver.gt(existing.version, webExtension.version)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* Update preRelease flag in the cache - https://github.com/microsoft/vscode/issues/142831 */\n\t\t\tif (webExtension.metadata?.isPreReleaseVersion && !webExtension.metadata?.preRelease) {\n\t\t\t\twebExtension.metadata.preRelease = true;\n\t\t\t}\n\t\t\twebExtensionsMap.set(webExtension.identifier.id.toLowerCase(), webExtension);\n\t\t}\n\t\treturn [...webExtensionsMap.values()];\n\t}\n\n\tprivate _migrateExtensionsStoragePromise: Promise<void> | undefined;\n\tprivate async migrateExtensionsStorage(customBuiltinExtensions: IExtension[]): Promise<void> {\n\t\tif (!this._migrateExtensionsStoragePromise) {\n\t\t\tthis._migrateExtensionsStoragePromise = (async () => {\n\t\t\t\tconst { extensionsToMigrate } = await this.readCustomBuiltinExtensionsInfoFromEnv();\n\t\t\t\tif (!extensionsToMigrate.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst fromExtensions = await this.galleryService.getExtensions(extensionsToMigrate.map(([id]) => ({ id })), CancellationToken.None);\n\t\t\t\ttry {\n\t\t\t\t\tawait Promise.allSettled(extensionsToMigrate.map(async ([from, to]) => {\n\t\t\t\t\t\tconst toExtension = customBuiltinExtensions.find(extension => areSameExtensions(extension.identifier, { id: to }));\n\t\t\t\t\t\tif (toExtension) {\n\t\t\t\t\t\t\tconst fromExtension = fromExtensions.find(extension => areSameExtensions(extension.identifier, { id: from }));\n\t\t\t\t\t\t\tconst fromExtensionManifest = fromExtension ? await this.galleryService.getManifest(fromExtension, CancellationToken.None) : null;\n\t\t\t\t\t\t\tconst fromExtensionId = fromExtensionManifest ? getExtensionId(fromExtensionManifest.publisher, fromExtensionManifest.name) : from;\n\t\t\t\t\t\t\tconst toExtensionId = getExtensionId(toExtension.manifest.publisher, toExtension.manifest.name);\n\t\t\t\t\t\t\tthis.extensionStorageService.addToMigrationList(fromExtensionId, toExtensionId);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.logService.info(`Skipped migrating extension storage from '${from}' to '${to}', because the '${to}' extension is not found.`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\treturn this._migrateExtensionsStoragePromise;\n\t}\n\n\tprivate async updateCaches(): Promise<void> {\n\t\tawait this.updateSystemExtensionsCache();\n\t\tawait this.updateCustomBuiltinExtensionsCache();\n\t}\n\n\tprivate async updateSystemExtensionsCache(): Promise<void> {\n\t\tconst systemExtensions = await this.builtinExtensionsScannerService.scanBuiltinExtensions();\n\t\tconst cachedSystemExtensions = (await this.readSystemExtensionsCache())\n\t\t\t.filter(cached => {\n\t\t\t\tconst systemExtension = systemExtensions.find(e => areSameExtensions(e.identifier, cached.identifier));\n\t\t\t\treturn systemExtension && semver.gt(cached.version, systemExtension.manifest.version);\n\t\t\t});\n\t\tawait this.writeSystemExtensionsCache(() => cachedSystemExtensions);\n\t}\n\n\tprivate _updateCustomBuiltinExtensionsCachePromise: Promise<IWebExtension[]> | undefined;\n\tprivate async updateCustomBuiltinExtensionsCache(): Promise<IWebExtension[]> {\n\t\tif (!this._updateCustomBuiltinExtensionsCachePromise) {\n\t\t\tthis._updateCustomBuiltinExtensionsCachePromise = (async () => {\n\t\t\t\tthis.logService.info('Updating additional builtin extensions cache');\n\t\t\t\tconst { extensions, extensionGalleryResources } = await this.readCustomBuiltinExtensionsInfoFromEnv();\n\t\t\t\tconst [galleryWebExtensions, extensionGalleryResourceWebExtensions] = await Promise.all([\n\t\t\t\t\tthis.resolveBuiltinGalleryExtensions(extensions),\n\t\t\t\t\tthis.resolveBuiltinExtensionGalleryResources(extensionGalleryResources)\n\t\t\t\t]);\n\t\t\t\tconst webExtensionsMap = new Map<string, IWebExtension>();\n\t\t\t\tfor (const webExtension of [...galleryWebExtensions, ...extensionGalleryResourceWebExtensions]) {\n\t\t\t\t\twebExtensionsMap.set(webExtension.identifier.id.toLowerCase(), webExtension);\n\t\t\t\t}\n\t\t\t\tawait this.resolveDependenciesAndPackedExtensions(extensionGalleryResourceWebExtensions, webExtensionsMap);\n\t\t\t\tconst webExtensions = [...webExtensionsMap.values()];\n\t\t\t\tawait this.writeCustomBuiltinExtensionsCache(() => webExtensions);\n\t\t\t\treturn webExtensions;\n\t\t\t})();\n\t\t}\n\t\treturn this._updateCustomBuiltinExtensionsCachePromise;\n\t}\n\n\tprivate async resolveBuiltinExtensionGalleryResources(extensionGalleryResources: URI[]): Promise<IWebExtension[]> {\n\t\tif (extensionGalleryResources.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\tconst result = new Map<string, IWebExtension>();\n\t\tconst extensionInfos: IExtensionInfo[] = [];\n\t\tawait Promise.all(extensionGalleryResources.map(async extensionGalleryResource => {\n\t\t\tconst webExtension = await this.toWebExtensionFromExtensionGalleryResource(extensionGalleryResource);\n\t\t\tresult.set(webExtension.identifier.id.toLowerCase(), webExtension);\n\t\t\textensionInfos.push({ id: webExtension.identifier.id, version: webExtension.version });\n\t\t}));\n\t\tconst galleryExtensions = await this.galleryService.getExtensions(extensionInfos, CancellationToken.None);\n\t\tfor (const galleryExtension of galleryExtensions) {\n\t\t\tconst webExtension = result.get(galleryExtension.identifier.id.toLowerCase());\n\t\t\tif (webExtension) {\n\t\t\t\tresult.set(galleryExtension.identifier.id.toLowerCase(), {\n\t\t\t\t\t...webExtension,\n\t\t\t\t\tidentifier: { id: webExtension.identifier.id, uuid: galleryExtension.identifier.uuid },\n\t\t\t\t\treadmeUri: galleryExtension.assets.readme ? URI.parse(galleryExtension.assets.readme.uri) : undefined,\n\t\t\t\t\tchangelogUri: galleryExtension.assets.changelog ? URI.parse(galleryExtension.assets.changelog.uri) : undefined,\n\t\t\t\t\tmetadata: { isPreReleaseVersion: galleryExtension.properties.isPreReleaseVersion, preRelease: galleryExtension.properties.isPreReleaseVersion, isBuiltin: true, pinned: true }\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn [...result.values()];\n\t}\n\n\tprivate async resolveBuiltinGalleryExtensions(extensions: IExtensionInfo[]): Promise<IWebExtension[]> {\n\t\tif (extensions.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\tconst webExtensions: IWebExtension[] = [];\n\t\tconst galleryExtensionsMap = await this.getExtensionsWithDependenciesAndPackedExtensions(extensions);\n\t\tconst missingExtensions = extensions.filter(({ id }) => !galleryExtensionsMap.has(id.toLowerCase()));\n\t\tif (missingExtensions.length) {\n\t\t\tthis.logService.info('Skipping the additional builtin extensions because their compatible versions are not found.', missingExtensions);\n\t\t}\n\t\tawait Promise.all([...galleryExtensionsMap.values()].map(async gallery => {\n\t\t\ttry {\n\t\t\t\tconst webExtension = await this.toWebExtensionFromGallery(gallery, { isPreReleaseVersion: gallery.properties.isPreReleaseVersion, preRelease: gallery.properties.isPreReleaseVersion, isBuiltin: true });\n\t\t\t\twebExtensions.push(webExtension);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.info(`Ignoring additional builtin extension ${gallery.identifier.id} because there is an error while converting it into web extension`, getErrorMessage(error));\n\t\t\t}\n\t\t}));\n\t\treturn webExtensions;\n\t}\n\n\tprivate async resolveDependenciesAndPackedExtensions(webExtensions: IWebExtension[], result: Map<string, IWebExtension>): Promise<void> {\n\t\tconst extensionInfos: IExtensionInfo[] = [];\n\t\tfor (const webExtension of webExtensions) {\n\t\t\tfor (const e of [...(webExtension.manifest?.extensionDependencies ?? []), ...(webExtension.manifest?.extensionPack ?? [])]) {\n\t\t\t\tif (!result.has(e.toLowerCase())) {\n\t\t\t\t\textensionInfos.push({ id: e, version: webExtension.version });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (extensionInfos.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst galleryExtensions = await this.getExtensionsWithDependenciesAndPackedExtensions(extensionInfos, new Set<string>([...result.keys()]));\n\t\tawait Promise.all([...galleryExtensions.values()].map(async gallery => {\n\t\t\ttry {\n\t\t\t\tconst webExtension = await this.toWebExtensionFromGallery(gallery, { isPreReleaseVersion: gallery.properties.isPreReleaseVersion, preRelease: gallery.properties.isPreReleaseVersion, isBuiltin: true });\n\t\t\t\tresult.set(webExtension.identifier.id.toLowerCase(), webExtension);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.info(`Ignoring additional builtin extension ${gallery.identifier.id} because there is an error while converting it into web extension`, getErrorMessage(error));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async getExtensionsWithDependenciesAndPackedExtensions(toGet: IExtensionInfo[], seen: Set<string> = new Set<string>(), result: Map<string, IGalleryExtension> = new Map<string, IGalleryExtension>()): Promise<Map<string, IGalleryExtension>> {\n\t\tif (toGet.length === 0) {\n\t\t\treturn result;\n\t\t}\n\t\tconst extensions = await this.galleryService.getExtensions(toGet, { compatible: true, targetPlatform: TargetPlatform.WEB }, CancellationToken.None);\n\t\tconst packsAndDependencies = new Map<string, IExtensionInfo>();\n\t\tfor (const extension of extensions) {\n\t\t\tresult.set(extension.identifier.id.toLowerCase(), extension);\n\t\t\tfor (const id of [...(isNonEmptyArray(extension.properties.dependencies) ? extension.properties.dependencies : []), ...(isNonEmptyArray(extension.properties.extensionPack) ? extension.properties.extensionPack : [])]) {\n\t\t\t\tif (!result.has(id.toLowerCase()) && !packsAndDependencies.has(id.toLowerCase()) && !seen.has(id.toLowerCase())) {\n\t\t\t\t\tconst extensionInfo = toGet.find(e => areSameExtensions(e, extension.identifier));\n\t\t\t\t\tpacksAndDependencies.set(id.toLowerCase(), { id, preRelease: extensionInfo?.preRelease });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.getExtensionsWithDependenciesAndPackedExtensions([...packsAndDependencies.values()].filter(({ id }) => !result.has(id.toLowerCase())), seen, result);\n\t}\n\n\tasync scanSystemExtensions(): Promise<IExtension[]> {\n\t\treturn this.readSystemExtensions();\n\t}\n\n\tasync scanUserExtensions(profileLocation: URI, scanOptions?: ScanOptions): Promise<IScannedExtension[]> {\n\t\tconst extensions = new Map<string, IScannedExtension>();\n\n\t\t// Custom builtin extensions defined through `additionalBuiltinExtensions` API\n\t\tconst customBuiltinExtensions = await this.readCustomBuiltinExtensions(scanOptions);\n\t\tfor (const extension of customBuiltinExtensions) {\n\t\t\textensions.set(extension.identifier.id.toLowerCase(), extension);\n\t\t}\n\n\t\t// User Installed extensions\n\t\tconst installedExtensions = await this.scanInstalledExtensions(profileLocation, scanOptions);\n\t\tfor (const extension of installedExtensions) {\n\t\t\textensions.set(extension.identifier.id.toLowerCase(), extension);\n\t\t}\n\n\t\treturn [...extensions.values()];\n\t}\n\n\tasync scanExtensionsUnderDevelopment(): Promise<IExtension[]> {\n\t\tconst devExtensions = this.environmentService.options?.developmentOptions?.extensions;\n\t\tconst result: IExtension[] = [];\n\t\tif (Array.isArray(devExtensions)) {\n\t\t\tawait Promise.allSettled(devExtensions.map(async devExtension => {\n\t\t\t\ttry {\n\t\t\t\t\tconst location = URI.revive(devExtension);\n\t\t\t\t\tif (URI.isUri(location)) {\n\t\t\t\t\t\tconst webExtension = await this.toWebExtension(location);\n\t\t\t\t\t\tresult.push(await this.toScannedExtension(webExtension, false));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.info(`Skipping the extension under development ${devExtension} as it is not URI type.`);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.info(`Error while fetching the extension under development ${devExtension.toString()}.`, getErrorMessage(error));\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync scanExistingExtension(extensionLocation: URI, extensionType: ExtensionType, profileLocation: URI): Promise<IScannedExtension | null> {\n\t\tif (extensionType === ExtensionType.System) {\n\t\t\tconst systemExtensions = await this.scanSystemExtensions();\n\t\t\treturn systemExtensions.find(e => e.location.toString() === extensionLocation.toString()) || null;\n\t\t}\n\t\tconst userExtensions = await this.scanUserExtensions(profileLocation);\n\t\treturn userExtensions.find(e => e.location.toString() === extensionLocation.toString()) || null;\n\t}\n\n\tasync scanExtensionManifest(extensionLocation: URI): Promise<IExtensionManifest | null> {\n\t\ttry {\n\t\t\treturn await this.getExtensionManifest(extensionLocation);\n\t\t} catch (error) {\n\t\t\tthis.logService.warn(`Error while fetching manifest from ${extensionLocation.toString()}`, getErrorMessage(error));\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tasync addExtensionFromGallery(galleryExtension: IGalleryExtension, metadata: Metadata, profileLocation: URI): Promise<IScannedExtension> {\n\t\tconst webExtension = await this.toWebExtensionFromGallery(galleryExtension, metadata);\n\t\treturn this.addWebExtension(webExtension, profileLocation);\n\t}\n\n\tasync addExtension(location: URI, metadata: Metadata, profileLocation: URI): Promise<IScannedExtension> {\n\t\tconst webExtension = await this.toWebExtension(location, undefined, undefined, undefined, undefined, undefined, undefined, metadata);\n\t\tconst extension = await this.toScannedExtension(webExtension, false);\n\t\tawait this.addToInstalledExtensions([webExtension], profileLocation);\n\t\treturn extension;\n\t}\n\n\tasync removeExtension(extension: IScannedExtension, profileLocation: URI): Promise<void> {\n\t\tawait this.writeInstalledExtensions(profileLocation, installedExtensions => installedExtensions.filter(installedExtension => !areSameExtensions(installedExtension.identifier, extension.identifier)));\n\t}\n\n\tasync updateMetadata(extension: IScannedExtension, metadata: Partial<Metadata>, profileLocation: URI): Promise<IScannedExtension> {\n\t\tlet updatedExtension: IWebExtension | undefined = undefined;\n\t\tawait this.writeInstalledExtensions(profileLocation, installedExtensions => {\n\t\t\tconst result: IWebExtension[] = [];\n\t\t\tfor (const installedExtension of installedExtensions) {\n\t\t\t\tif (areSameExtensions(extension.identifier, installedExtension.identifier)) {\n\t\t\t\t\tinstalledExtension.metadata = { ...installedExtension.metadata, ...metadata };\n\t\t\t\t\tupdatedExtension = installedExtension;\n\t\t\t\t\tresult.push(installedExtension);\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(installedExtension);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tif (!updatedExtension) {\n\t\t\tthrow new Error('Extension not found');\n\t\t}\n\t\treturn this.toScannedExtension(updatedExtension, extension.isBuiltin);\n\t}\n\n\tasync copyExtensions(fromProfileLocation: URI, toProfileLocation: URI, filter: (extension: IScannedExtension) => boolean): Promise<void> {\n\t\tconst extensionsToCopy: IWebExtension[] = [];\n\t\tconst fromWebExtensions = await this.readInstalledExtensions(fromProfileLocation);\n\t\tawait Promise.all(fromWebExtensions.map(async webExtension => {\n\t\t\tconst scannedExtension = await this.toScannedExtension(webExtension, false);\n\t\t\tif (filter(scannedExtension)) {\n\t\t\t\textensionsToCopy.push(webExtension);\n\t\t\t}\n\t\t}));\n\t\tif (extensionsToCopy.length) {\n\t\t\tawait this.addToInstalledExtensions(extensionsToCopy, toProfileLocation);\n\t\t}\n\t}\n\n\tprivate async addWebExtension(webExtension: IWebExtension, profileLocation: URI): Promise<IScannedExtension> {\n\t\tconst isSystem = !!(await this.scanSystemExtensions()).find(e => areSameExtensions(e.identifier, webExtension.identifier));\n\t\tconst isBuiltin = !!webExtension.metadata?.isBuiltin;\n\t\tconst extension = await this.toScannedExtension(webExtension, isBuiltin);\n\n\t\tif (isSystem) {\n\t\t\tawait this.writeSystemExtensionsCache(systemExtensions => {\n\t\t\t\t// Remove the existing extension to avoid duplicates\n\t\t\t\tsystemExtensions = systemExtensions.filter(extension => !areSameExtensions(extension.identifier, webExtension.identifier));\n\t\t\t\tsystemExtensions.push(webExtension);\n\t\t\t\treturn systemExtensions;\n\t\t\t});\n\t\t\treturn extension;\n\t\t}\n\n\t\t// Update custom builtin extensions to custom builtin extensions cache\n\t\tif (isBuiltin) {\n\t\t\tawait this.writeCustomBuiltinExtensionsCache(customBuiltinExtensions => {\n\t\t\t\t// Remove the existing extension to avoid duplicates\n\t\t\t\tcustomBuiltinExtensions = customBuiltinExtensions.filter(extension => !areSameExtensions(extension.identifier, webExtension.identifier));\n\t\t\t\tcustomBuiltinExtensions.push(webExtension);\n\t\t\t\treturn customBuiltinExtensions;\n\t\t\t});\n\n\t\t\tconst installedExtensions = await this.readInstalledExtensions(profileLocation);\n\t\t\t// Also add to installed extensions if it is installed to update its version\n\t\t\tif (installedExtensions.some(e => areSameExtensions(e.identifier, webExtension.identifier))) {\n\t\t\t\tawait this.addToInstalledExtensions([webExtension], profileLocation);\n\t\t\t}\n\t\t\treturn extension;\n\t\t}\n\n\t\t// Add to installed extensions\n\t\tawait this.addToInstalledExtensions([webExtension], profileLocation);\n\t\treturn extension;\n\t}\n\n\tprivate async addToInstalledExtensions(webExtensions: IWebExtension[], profileLocation: URI): Promise<void> {\n\t\tawait this.writeInstalledExtensions(profileLocation, installedExtensions => {\n\t\t\t// Remove the existing extension to avoid duplicates\n\t\t\tinstalledExtensions = installedExtensions.filter(installedExtension => webExtensions.some(extension => !areSameExtensions(installedExtension.identifier, extension.identifier)));\n\t\t\tinstalledExtensions.push(...webExtensions);\n\t\t\treturn installedExtensions;\n\t\t});\n\t}\n\n\tprivate async scanInstalledExtensions(profileLocation: URI, scanOptions?: ScanOptions): Promise<IScannedExtension[]> {\n\t\tlet installedExtensions = await this.readInstalledExtensions(profileLocation);\n\n\t\t// If current profile is not a default profile, then add the application extensions to the list\n\t\tif (!this.uriIdentityService.extUri.isEqual(profileLocation, this.userDataProfilesService.defaultProfile.extensionsResource)) {\n\t\t\t// Remove application extensions from the non default profile\n\t\t\tinstalledExtensions = installedExtensions.filter(i => !i.metadata?.isApplicationScoped);\n\t\t\t// Add application extensions from the default profile to the list\n\t\t\tconst defaultProfileExtensions = await this.readInstalledExtensions(this.userDataProfilesService.defaultProfile.extensionsResource);\n\t\t\tinstalledExtensions.push(...defaultProfileExtensions.filter(i => i.metadata?.isApplicationScoped));\n\t\t}\n\n\t\tinstalledExtensions.sort((a, b) => a.identifier.id < b.identifier.id ? -1 : a.identifier.id > b.identifier.id ? 1 : semver.rcompare(a.version, b.version));\n\t\tconst result = new Map<string, IScannedExtension>();\n\t\tfor (const webExtension of installedExtensions) {\n\t\t\tconst existing = result.get(webExtension.identifier.id.toLowerCase());\n\t\t\tif (existing && semver.gt(existing.manifest.version, webExtension.version)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst extension = await this.toScannedExtension(webExtension, false);\n\t\t\tif (extension.isValid || !scanOptions?.skipInvalidExtensions) {\n\t\t\t\tresult.set(extension.identifier.id.toLowerCase(), extension);\n\t\t\t} else {\n\t\t\t\tthis.logService.info(`Skipping invalid installed extension ${webExtension.identifier.id}`);\n\t\t\t}\n\t\t}\n\t\treturn [...result.values()];\n\t}\n\n\tprivate async toWebExtensionFromGallery(galleryExtension: IGalleryExtension, metadata?: Metadata): Promise<IWebExtension> {\n\t\tconst extensionLocation = this.extensionResourceLoaderService.getExtensionGalleryResourceURL({\n\t\t\tpublisher: galleryExtension.publisher,\n\t\t\tname: galleryExtension.name,\n\t\t\tversion: galleryExtension.version,\n\t\t\ttargetPlatform: galleryExtension.properties.targetPlatform === TargetPlatform.WEB ? TargetPlatform.WEB : undefined\n\t\t}, 'extension');\n\n\t\tif (!extensionLocation) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\treturn this.toWebExtensionFromExtensionGalleryResource(extensionLocation,\n\t\t\tgalleryExtension.identifier,\n\t\t\tgalleryExtension.assets.readme ? URI.parse(galleryExtension.assets.readme.uri) : undefined,\n\t\t\tgalleryExtension.assets.changelog ? URI.parse(galleryExtension.assets.changelog.uri) : undefined,\n\t\t\tmetadata);\n\t}\n\n\tprivate async toWebExtensionFromExtensionGalleryResource(extensionLocation: URI, identifier?: IExtensionIdentifier, readmeUri?: URI, changelogUri?: URI, metadata?: Metadata): Promise<IWebExtension> {\n\t\tconst extensionResources = await this.listExtensionResources(extensionLocation);\n\t\tconst packageNLSResources = this.getPackageNLSResourceMapFromResources(extensionResources);\n\n\t\t// The fallback, in English, will fill in any gaps missing in the localized file.\n\t\tconst fallbackPackageNLSResource = extensionResources.find(e => basename(e) === 'package.nls.json');\n\t\treturn this.toWebExtension(\n\t\t\textensionLocation,\n\t\t\tidentifier,\n\t\t\tundefined,\n\t\t\tpackageNLSResources,\n\t\t\tfallbackPackageNLSResource ? URI.parse(fallbackPackageNLSResource) : null,\n\t\t\treadmeUri,\n\t\t\tchangelogUri,\n\t\t\tmetadata);\n\t}\n\n\tprivate getPackageNLSResourceMapFromResources(extensionResources: string[]): Map<string, URI> {\n\t\tconst packageNLSResources = new Map<string, URI>();\n\t\textensionResources.forEach(e => {\n\t\t\t// Grab all package.nls.{language}.json files\n\t\t\tconst regexResult = /package\\.nls\\.([\\w-]+)\\.json/.exec(basename(e));\n\t\t\tif (regexResult?.[1]) {\n\t\t\t\tpackageNLSResources.set(regexResult[1], URI.parse(e));\n\t\t\t}\n\t\t});\n\t\treturn packageNLSResources;\n\t}\n\n\tprivate async toWebExtension(extensionLocation: URI, identifier?: IExtensionIdentifier, manifest?: IExtensionManifest, packageNLSUris?: Map<string, URI>, fallbackPackageNLSUri?: URI | ITranslations | null, readmeUri?: URI, changelogUri?: URI, metadata?: Metadata): Promise<IWebExtension> {\n\t\tif (!manifest) {\n\t\t\ttry {\n\t\t\t\tmanifest = await this.getExtensionManifest(extensionLocation);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(`Error while fetching manifest from the location '${extensionLocation.toString()}'. ${getErrorMessage(error)}`);\n\t\t\t}\n\t\t}\n\n\t\tif (!this.extensionManifestPropertiesService.canExecuteOnWeb(manifest)) {\n\t\t\tthrow new Error(localize('not a web extension', \"Cannot add '{0}' because this extension is not a web extension.\", manifest.displayName || manifest.name));\n\t\t}\n\n\t\tif (fallbackPackageNLSUri === undefined) {\n\t\t\ttry {\n\t\t\t\tfallbackPackageNLSUri = joinPath(extensionLocation, 'package.nls.json');\n\t\t\t\tawait this.extensionResourceLoaderService.readExtensionResource(fallbackPackageNLSUri);\n\t\t\t} catch (error) {\n\t\t\t\tfallbackPackageNLSUri = undefined;\n\t\t\t}\n\t\t}\n\t\tconst defaultManifestTranslations: ITranslations | null | undefined = fallbackPackageNLSUri ? URI.isUri(fallbackPackageNLSUri) ? await this.getTranslations(fallbackPackageNLSUri) : fallbackPackageNLSUri : null;\n\n\t\treturn {\n\t\t\tidentifier: { id: getGalleryExtensionId(manifest.publisher, manifest.name), uuid: identifier?.uuid },\n\t\t\tversion: manifest.version,\n\t\t\tlocation: extensionLocation,\n\t\t\tmanifest,\n\t\t\treadmeUri,\n\t\t\tchangelogUri,\n\t\t\tpackageNLSUris,\n\t\t\tfallbackPackageNLSUri: URI.isUri(fallbackPackageNLSUri) ? fallbackPackageNLSUri : undefined,\n\t\t\tdefaultManifestTranslations,\n\t\t\tmetadata,\n\t\t};\n\t}\n\n\tprivate async toScannedExtension(webExtension: IWebExtension, isBuiltin: boolean, type: ExtensionType = ExtensionType.User): Promise<IScannedExtension> {\n\t\tconst validations: [Severity, string][] = [];\n\t\tlet manifest: IExtensionManifest | undefined = webExtension.manifest;\n\n\t\tif (!manifest) {\n\t\t\ttry {\n\t\t\t\tmanifest = await this.getExtensionManifest(webExtension.location);\n\t\t\t} catch (error) {\n\t\t\t\tvalidations.push([Severity.Error, `Error while fetching manifest from the location '${webExtension.location}'. ${getErrorMessage(error)}`]);\n\t\t\t}\n\t\t}\n\n\t\tif (!manifest) {\n\t\t\tconst [publisher, name] = webExtension.identifier.id.split('.');\n\t\t\tmanifest = {\n\t\t\t\tname,\n\t\t\t\tpublisher,\n\t\t\t\tversion: webExtension.version,\n\t\t\t\tengines: { vscode: '*' },\n\t\t\t};\n\t\t}\n\n\t\tconst packageNLSUri = webExtension.packageNLSUris?.get(Language.value().toLowerCase());\n\t\tconst fallbackPackageNLS = webExtension.defaultManifestTranslations ?? webExtension.fallbackPackageNLSUri;\n\n\t\tif (packageNLSUri) {\n\t\t\tmanifest = await this.translateManifest(manifest, packageNLSUri, fallbackPackageNLS);\n\t\t} else if (fallbackPackageNLS) {\n\t\t\tmanifest = await this.translateManifest(manifest, fallbackPackageNLS);\n\t\t}\n\n\t\tconst uuid = (<IGalleryMetadata | undefined>webExtension.metadata)?.id;\n\n\t\tvalidations.push(...validateExtensionManifest(this.productService.version, this.productService.date, webExtension.location, manifest, false));\n\t\tlet isValid = true;\n\t\tfor (const [severity, message] of validations) {\n\t\t\tif (severity === Severity.Error) {\n\t\t\t\tisValid = false;\n\t\t\t\tthis.logService.error(message);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tidentifier: { id: webExtension.identifier.id, uuid: webExtension.identifier.uuid || uuid },\n\t\t\tlocation: webExtension.location,\n\t\t\tmanifest,\n\t\t\ttype,\n\t\t\tisBuiltin,\n\t\t\treadmeUrl: webExtension.readmeUri,\n\t\t\tchangelogUrl: webExtension.changelogUri,\n\t\t\tmetadata: webExtension.metadata,\n\t\t\ttargetPlatform: TargetPlatform.WEB,\n\t\t\tvalidations,\n\t\t\tisValid\n\t\t};\n\t}\n\n\tprivate async listExtensionResources(extensionLocation: URI): Promise<string[]> {\n\t\ttry {\n\t\t\tconst result = await this.extensionResourceLoaderService.readExtensionResource(extensionLocation);\n\t\t\treturn JSON.parse(result);\n\t\t} catch (error) {\n\t\t\tthis.logService.warn('Error while fetching extension resources list', getErrorMessage(error));\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async translateManifest(manifest: IExtensionManifest, nlsURL: ITranslations | URI, fallbackNLS?: ITranslations | URI): Promise<IExtensionManifest> {\n\t\ttry {\n\t\t\tconst translations = URI.isUri(nlsURL) ? await this.getTranslations(nlsURL) : nlsURL;\n\t\t\tconst fallbackTranslations = URI.isUri(fallbackNLS) ? await this.getTranslations(fallbackNLS) : fallbackNLS;\n\t\t\tif (translations) {\n\t\t\t\tmanifest = localizeManifest(this.logService, manifest, translations, fallbackTranslations);\n\t\t\t}\n\t\t} catch (error) { /* ignore */ }\n\t\treturn manifest;\n\t}\n\n\tprivate async getExtensionManifest(location: URI): Promise<IExtensionManifest> {\n\t\tconst url = joinPath(location, 'package.json');\n\t\tconst content = await this.extensionResourceLoaderService.readExtensionResource(url);\n\t\treturn JSON.parse(content);\n\t}\n\n\tprivate async getTranslations(nlsUrl: URI): Promise<ITranslations | undefined> {\n\t\ttry {\n\t\t\tconst content = await this.extensionResourceLoaderService.readExtensionResource(nlsUrl);\n\t\t\treturn JSON.parse(content);\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`Error while fetching translations of an extension`, nlsUrl.toString(), getErrorMessage(error));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async readInstalledExtensions(profileLocation: URI): Promise<IWebExtension[]> {\n\t\treturn this.withWebExtensions(profileLocation);\n\t}\n\n\tprivate writeInstalledExtensions(profileLocation: URI, updateFn: (extensions: IWebExtension[]) => IWebExtension[]): Promise<IWebExtension[]> {\n\t\treturn this.withWebExtensions(profileLocation, updateFn);\n\t}\n\n\tprivate readCustomBuiltinExtensionsCache(): Promise<IWebExtension[]> {\n\t\treturn this.withWebExtensions(this.customBuiltinExtensionsCacheResource);\n\t}\n\n\tprivate writeCustomBuiltinExtensionsCache(updateFn: (extensions: IWebExtension[]) => IWebExtension[]): Promise<IWebExtension[]> {\n\t\treturn this.withWebExtensions(this.customBuiltinExtensionsCacheResource, updateFn);\n\t}\n\n\tprivate readSystemExtensionsCache(): Promise<IWebExtension[]> {\n\t\treturn this.withWebExtensions(this.systemExtensionsCacheResource);\n\t}\n\n\tprivate writeSystemExtensionsCache(updateFn: (extensions: IWebExtension[]) => IWebExtension[]): Promise<IWebExtension[]> {\n\t\treturn this.withWebExtensions(this.systemExtensionsCacheResource, updateFn);\n\t}\n\n\tprivate async withWebExtensions(file: URI | undefined, updateFn?: (extensions: IWebExtension[]) => IWebExtension[]): Promise<IWebExtension[]> {\n\t\tif (!file) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.getResourceAccessQueue(file).queue(async () => {\n\t\t\tlet webExtensions: IWebExtension[] = [];\n\n\t\t\t// Read\n\t\t\ttry {\n\t\t\t\tconst content = await this.fileService.readFile(file);\n\t\t\t\tconst storedWebExtensions: IStoredWebExtension[] = JSON.parse(content.value.toString());\n\t\t\t\tfor (const e of storedWebExtensions) {\n\t\t\t\t\tif (!e.location || !e.identifier || !e.version) {\n\t\t\t\t\t\tthis.logService.info('Ignoring invalid extension while scanning', storedWebExtensions);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet packageNLSUris: Map<string, URI> | undefined;\n\t\t\t\t\tif (e.packageNLSUris) {\n\t\t\t\t\t\tpackageNLSUris = new Map<string, URI>();\n\t\t\t\t\t\tObject.entries(e.packageNLSUris).forEach(([key, value]) => packageNLSUris!.set(key, URI.revive(value)));\n\t\t\t\t\t}\n\n\t\t\t\t\twebExtensions.push({\n\t\t\t\t\t\tidentifier: e.identifier,\n\t\t\t\t\t\tversion: e.version,\n\t\t\t\t\t\tlocation: URI.revive(e.location),\n\t\t\t\t\t\tmanifest: e.manifest,\n\t\t\t\t\t\treadmeUri: URI.revive(e.readmeUri),\n\t\t\t\t\t\tchangelogUri: URI.revive(e.changelogUri),\n\t\t\t\t\t\tpackageNLSUris,\n\t\t\t\t\t\tfallbackPackageNLSUri: URI.revive(e.fallbackPackageNLSUri),\n\t\t\t\t\t\tdefaultManifestTranslations: e.defaultManifestTranslations,\n\t\t\t\t\t\tpackageNLSUri: URI.revive(e.packageNLSUri),\n\t\t\t\t\t\tmetadata: e.metadata,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\twebExtensions = await this.migrateWebExtensions(webExtensions, file);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(`Error while migrating scanned extensions in ${file.toString()}`, getErrorMessage(error));\n\t\t\t\t}\n\n\t\t\t} catch (error) {\n\t\t\t\t/* Ignore */\n\t\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update\n\t\t\tif (updateFn) {\n\t\t\t\tawait this.storeWebExtensions(webExtensions = updateFn(webExtensions), file);\n\t\t\t}\n\n\t\t\treturn webExtensions;\n\t\t});\n\t}\n\n\tprivate async migrateWebExtensions(webExtensions: IWebExtension[], file: URI): Promise<IWebExtension[]> {\n\t\tlet update = false;\n\t\twebExtensions = await Promise.all(webExtensions.map(async webExtension => {\n\t\t\tif (!webExtension.manifest) {\n\t\t\t\ttry {\n\t\t\t\t\twebExtension.manifest = await this.getExtensionManifest(webExtension.location);\n\t\t\t\t\tupdate = true;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(`Error while updating manifest of an extension in ${file.toString()}`, webExtension.identifier.id, getErrorMessage(error));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isUndefined(webExtension.defaultManifestTranslations)) {\n\t\t\t\tif (webExtension.fallbackPackageNLSUri) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst content = await this.extensionResourceLoaderService.readExtensionResource(webExtension.fallbackPackageNLSUri);\n\t\t\t\t\t\twebExtension.defaultManifestTranslations = JSON.parse(content);\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.error(`Error while fetching default manifest translations of an extension`, webExtension.identifier.id, getErrorMessage(error));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tupdate = true;\n\t\t\t\t\twebExtension.defaultManifestTranslations = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst migratedLocation = migratePlatformSpecificExtensionGalleryResourceURL(webExtension.location, TargetPlatform.WEB);\n\t\t\tif (migratedLocation) {\n\t\t\t\tupdate = true;\n\t\t\t\twebExtension.location = migratedLocation;\n\t\t\t}\n\t\t\treturn webExtension;\n\t\t}));\n\t\tif (update) {\n\t\t\tawait this.storeWebExtensions(webExtensions, file);\n\t\t}\n\t\treturn webExtensions;\n\t}\n\n\tprivate async storeWebExtensions(webExtensions: IWebExtension[], file: URI): Promise<void> {\n\t\tfunction toStringDictionary(dictionary: Map<string, URI> | undefined): IStringDictionary<UriComponents> | undefined {\n\t\t\tif (!dictionary) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst result: IStringDictionary<UriComponents> = Object.create(null);\n\t\t\tdictionary.forEach((value, key) => result[key] = value.toJSON());\n\t\t\treturn result;\n\t\t}\n\t\tconst storedWebExtensions: IStoredWebExtension[] = webExtensions.map(e => ({\n\t\t\tidentifier: e.identifier,\n\t\t\tversion: e.version,\n\t\t\tmanifest: e.manifest,\n\t\t\tlocation: e.location.toJSON(),\n\t\t\treadmeUri: e.readmeUri?.toJSON(),\n\t\t\tchangelogUri: e.changelogUri?.toJSON(),\n\t\t\tpackageNLSUris: toStringDictionary(e.packageNLSUris),\n\t\t\tdefaultManifestTranslations: e.defaultManifestTranslations,\n\t\t\tfallbackPackageNLSUri: e.fallbackPackageNLSUri?.toJSON(),\n\t\t\tmetadata: e.metadata\n\t\t}));\n\t\tawait this.fileService.writeFile(file, VSBuffer.fromString(JSON.stringify(storedWebExtensions)));\n\t}\n\n\tprivate getResourceAccessQueue(file: URI): Queue<IWebExtension[]> {\n\t\tlet resourceQueue = this.resourcesAccessQueueMap.get(file);\n\t\tif (!resourceQueue) {\n\t\t\tthis.resourcesAccessQueueMap.set(file, resourceQueue = new Queue<IWebExtension[]>());\n\t\t}\n\t\treturn resourceQueue;\n\t}\n\n}\n\nif (isWeb) {\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.extensions.action.openInstalledWebExtensionsResource',\n\t\t\t\ttitle: { value: localize('openInstalledWebExtensionsResource', \"Open Installed Web Extensions Resource\"), original: 'Open Installed Web Extensions Resource' },\n\t\t\t\tcategory: Categories.Developer,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: IsWebContext\n\t\t\t});\n\t\t}\n\t\trun(serviceAccessor: ServicesAccessor): void {\n\t\t\tconst editorService = serviceAccessor.get(IEditorService);\n\t\t\tconst userDataProfileService = serviceAccessor.get(IUserDataProfileService);\n\t\t\teditorService.openEditor({ resource: userDataProfileService.currentProfile.extensionsResource });\n\t\t}\n\t});\n}\n\nregisterSingleton(IWebExtensionsScannerService, WebExtensionsScannerService, InstantiationType.Delayed);\n"]}