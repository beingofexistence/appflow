{"version":3,"sources":["vs/workbench/services/extensionManagement/browser/extensionEnablementService.ts"],"names":[],"mappings":"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","file":"extensionEnablementService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IExtensionManagementService, IExtensionIdentifier, IGlobalExtensionEnablementService, ENABLED_EXTENSIONS_STORAGE_PATH, DISABLED_EXTENSIONS_STORAGE_PATH, InstallOperation } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IWorkbenchExtensionEnablementService, EnablementState, IExtensionManagementServerService, IWorkbenchExtensionManagementService, IExtensionManagementServer, ExtensionInstallLocation } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, BetterMergeId, getExtensionDependencies } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IExtension, isAuthenticationProviderExtension, isLanguagePackExtension, isResolverExtension } from 'vs/platform/extensions/common/extensions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { StorageManager } from 'vs/platform/extensionManagement/common/extensionEnablementService';\nimport { webWorkerExtHostConfig, WebWorkerExtHostConfigValue } from 'vs/workbench/services/extensions/common/extensions';\nimport { IUserDataSyncAccountService } from 'vs/platform/userDataSync/common/userDataSyncAccount';\nimport { IUserDataSyncEnablementService } from 'vs/platform/userDataSync/common/userDataSync';\nimport { ILifecycleService, LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { INotificationService, NotificationPriority, Severity } from 'vs/platform/notification/common/notification';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IExtensionBisectService } from 'vs/workbench/services/extensionManagement/browser/extensionBisect';\nimport { IWorkspaceTrustManagementService, IWorkspaceTrustRequestService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { IExtensionManifestPropertiesService } from 'vs/workbench/services/extensions/common/extensionManifestPropertiesService';\nimport { isVirtualWorkspace } from 'vs/platform/workspace/common/virtualWorkspace';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\n\nconst SOURCE = 'IWorkbenchExtensionEnablementService';\n\ntype WorkspaceType = { readonly virtual: boolean; readonly trusted: boolean };\n\nexport class ExtensionEnablementService extends Disposable implements IWorkbenchExtensionEnablementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onEnablementChanged = new Emitter<readonly IExtension[]>();\n\tpublic readonly onEnablementChanged: Event<readonly IExtension[]> = this._onEnablementChanged.event;\n\n\tprotected readonly extensionsManager: ExtensionsManager;\n\tprivate readonly storageManger: StorageManager;\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IGlobalExtensionEnablementService protected readonly globalExtensionEnablementService: IGlobalExtensionEnablementService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IUserDataSyncAccountService private readonly userDataSyncAccountService: IUserDataSyncAccountService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IExtensionBisectService private readonly extensionBisectService: IExtensionBisectService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IWorkspaceTrustRequestService private readonly workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.storageManger = this._register(new StorageManager(storageService));\n\n\t\tconst uninstallDisposable = this._register(Event.filter(extensionManagementService.onDidUninstallExtension, e => !e.error)(({ identifier }) => this._reset(identifier)));\n\t\tlet isDisposed = false;\n\t\tthis._register(toDisposable(() => isDisposed = true));\n\t\tthis.extensionsManager = this._register(instantiationService.createInstance(ExtensionsManager));\n\t\tthis.extensionsManager.whenInitialized().then(() => {\n\t\t\tif (!isDisposed) {\n\t\t\t\tthis._register(this.extensionsManager.onDidChangeExtensions(({ added, removed, isProfileSwitch }) => this._onDidChangeExtensions(added, removed, isProfileSwitch)));\n\t\t\t\tuninstallDisposable.dispose();\n\t\t\t}\n\t\t});\n\n\t\tthis._register(this.globalExtensionEnablementService.onDidChangeEnablement(({ extensions, source }) => this._onDidChangeGloballyDisabledExtensions(extensions, source)));\n\n\t\t// delay notification for extensions disabled until workbench restored\n\t\tif (this.allUserExtensionsDisabled) {\n\t\t\tthis.lifecycleService.when(LifecyclePhase.Eventually).then(() => {\n\t\t\t\tthis.notificationService.prompt(Severity.Info, localize('extensionsDisabled', \"All installed extensions are temporarily disabled.\"), [{\n\t\t\t\t\tlabel: localize('Reload', \"Reload and Enable Extensions\"),\n\t\t\t\t\trun: () => hostService.reload({ disableExtensions: false })\n\t\t\t\t}], {\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tpriority: NotificationPriority.URGENT\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate get hasWorkspace(): boolean {\n\t\treturn this.contextService.getWorkbenchState() !== WorkbenchState.EMPTY;\n\t}\n\n\tprivate get allUserExtensionsDisabled(): boolean {\n\t\treturn this.environmentService.disableExtensions === true;\n\t}\n\n\tgetEnablementState(extension: IExtension): EnablementState {\n\t\treturn this._computeEnablementState(extension, this.extensionsManager.extensions, this.getWorkspaceType());\n\t}\n\n\tgetEnablementStates(extensions: IExtension[], workspaceTypeOverrides: Partial<WorkspaceType> = {}): EnablementState[] {\n\t\tconst extensionsEnablements = new Map<IExtension, EnablementState>();\n\t\tconst workspaceType = { ...this.getWorkspaceType(), ...workspaceTypeOverrides };\n\t\treturn extensions.map(extension => this._computeEnablementState(extension, extensions, workspaceType, extensionsEnablements));\n\t}\n\n\tgetDependenciesEnablementStates(extension: IExtension): [IExtension, EnablementState][] {\n\t\treturn getExtensionDependencies(this.extensionsManager.extensions, extension).map(e => [e, this.getEnablementState(e)]);\n\t}\n\n\tcanChangeEnablement(extension: IExtension): boolean {\n\t\ttry {\n\t\t\tthis.throwErrorIfCannotChangeEnablement(extension);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tcanChangeWorkspaceEnablement(extension: IExtension): boolean {\n\t\tif (!this.canChangeEnablement(extension)) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.throwErrorIfCannotChangeWorkspaceEnablement(extension);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate throwErrorIfCannotChangeEnablement(extension: IExtension, donotCheckDependencies?: boolean): void {\n\t\tif (isLanguagePackExtension(extension.manifest)) {\n\t\t\tthrow new Error(localize('cannot disable language pack extension', \"Cannot change enablement of {0} extension because it contributes language packs.\", extension.manifest.displayName || extension.identifier.id));\n\t\t}\n\n\t\tif (this.userDataSyncEnablementService.isEnabled() && this.userDataSyncAccountService.account &&\n\t\t\tisAuthenticationProviderExtension(extension.manifest) && extension.manifest.contributes!.authentication!.some(a => a.id === this.userDataSyncAccountService.account!.authenticationProviderId)) {\n\t\t\tthrow new Error(localize('cannot disable auth extension', \"Cannot change enablement {0} extension because Settings Sync depends on it.\", extension.manifest.displayName || extension.identifier.id));\n\t\t}\n\n\t\tif (this._isEnabledInEnv(extension)) {\n\t\t\tthrow new Error(localize('cannot change enablement environment', \"Cannot change enablement of {0} extension because it is enabled in environment\", extension.manifest.displayName || extension.identifier.id));\n\t\t}\n\n\t\tthis.throwErrorIfEnablementStateCannotBeChanged(extension, this.getEnablementState(extension), donotCheckDependencies);\n\t}\n\n\tprivate throwErrorIfEnablementStateCannotBeChanged(extension: IExtension, enablementStateOfExtension: EnablementState, donotCheckDependencies?: boolean): void {\n\t\tswitch (enablementStateOfExtension) {\n\t\t\tcase EnablementState.DisabledByEnvironment:\n\t\t\t\tthrow new Error(localize('cannot change disablement environment', \"Cannot change enablement of {0} extension because it is disabled in environment\", extension.manifest.displayName || extension.identifier.id));\n\t\t\tcase EnablementState.DisabledByVirtualWorkspace:\n\t\t\t\tthrow new Error(localize('cannot change enablement virtual workspace', \"Cannot change enablement of {0} extension because it does not support virtual workspaces\", extension.manifest.displayName || extension.identifier.id));\n\t\t\tcase EnablementState.DisabledByExtensionKind:\n\t\t\t\tthrow new Error(localize('cannot change enablement extension kind', \"Cannot change enablement of {0} extension because of its extension kind\", extension.manifest.displayName || extension.identifier.id));\n\t\t\tcase EnablementState.DisabledByExtensionDependency:\n\t\t\t\tif (donotCheckDependencies) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Can be changed only when all its dependencies enablements can be changed\n\t\t\t\tfor (const dependency of getExtensionDependencies(this.extensionsManager.extensions, extension)) {\n\t\t\t\t\tif (this.isEnabled(dependency)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.throwErrorIfCannotChangeEnablement(dependency, true);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthrow new Error(localize('cannot change enablement dependency', \"Cannot enable '{0}' extension because it depends on '{1}' extension that cannot be enabled\", extension.manifest.displayName || extension.identifier.id, dependency.manifest.displayName || dependency.identifier.id));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t}\n\n\tprivate throwErrorIfCannotChangeWorkspaceEnablement(extension: IExtension): void {\n\t\tif (!this.hasWorkspace) {\n\t\t\tthrow new Error(localize('noWorkspace', \"No workspace.\"));\n\t\t}\n\t\tif (isAuthenticationProviderExtension(extension.manifest)) {\n\t\t\tthrow new Error(localize('cannot disable auth extension in workspace', \"Cannot change enablement of {0} extension in workspace because it contributes authentication providers\", extension.manifest.displayName || extension.identifier.id));\n\t\t}\n\t}\n\n\tasync setEnablement(extensions: IExtension[], newState: EnablementState): Promise<boolean[]> {\n\t\tawait this.extensionsManager.whenInitialized();\n\n\t\tif (newState === EnablementState.EnabledGlobally || newState === EnablementState.EnabledWorkspace) {\n\t\t\textensions.push(...this.getExtensionsToEnableRecursively(extensions, this.extensionsManager.extensions, newState, { dependencies: true, pack: true }));\n\t\t}\n\n\t\tconst workspace = newState === EnablementState.DisabledWorkspace || newState === EnablementState.EnabledWorkspace;\n\t\tfor (const extension of extensions) {\n\t\t\tif (workspace) {\n\t\t\t\tthis.throwErrorIfCannotChangeWorkspaceEnablement(extension);\n\t\t\t} else {\n\t\t\t\tthis.throwErrorIfCannotChangeEnablement(extension);\n\t\t\t}\n\t\t}\n\n\t\tconst result: boolean[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst enablementState = this.getEnablementState(extension);\n\t\t\tif (enablementState === EnablementState.DisabledByTrustRequirement\n\t\t\t\t/* All its disabled dependencies are disabled by Trust Requirement */\n\t\t\t\t|| (enablementState === EnablementState.DisabledByExtensionDependency && this.getDependenciesEnablementStates(extension).every(([, e]) => this.isEnabledEnablementState(e) || e === EnablementState.DisabledByTrustRequirement))\n\t\t\t) {\n\t\t\t\tconst trustState = await this.workspaceTrustRequestService.requestWorkspaceTrust();\n\t\t\t\tresult.push(trustState ?? false);\n\t\t\t} else {\n\t\t\t\tresult.push(await this._setUserEnablementState(extension, newState));\n\t\t\t}\n\t\t}\n\n\t\tconst changedExtensions = extensions.filter((e, index) => result[index]);\n\t\tif (changedExtensions.length) {\n\t\t\tthis._onEnablementChanged.fire(changedExtensions);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getExtensionsToEnableRecursively(extensions: IExtension[], allExtensions: ReadonlyArray<IExtension>, enablementState: EnablementState, options: { dependencies: boolean; pack: boolean }, checked: IExtension[] = []): IExtension[] {\n\t\tif (!options.dependencies && !options.pack) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst toCheck = extensions.filter(e => checked.indexOf(e) === -1);\n\t\tif (!toCheck.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tfor (const extension of toCheck) {\n\t\t\tchecked.push(extension);\n\t\t}\n\n\t\tconst extensionsToEnable: IExtension[] = [];\n\t\tfor (const extension of allExtensions) {\n\t\t\t// Extension is already checked\n\t\t\tif (checked.some(e => areSameExtensions(e.identifier, extension.identifier))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst enablementStateOfExtension = this.getEnablementState(extension);\n\t\t\t// Extension is enabled\n\t\t\tif (this.isEnabledEnablementState(enablementStateOfExtension)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Skip if dependency extension is disabled by extension kind\n\t\t\tif (enablementStateOfExtension === EnablementState.DisabledByExtensionKind) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check if the extension is a dependency or in extension pack\n\t\t\tif (extensions.some(e =>\n\t\t\t\t(options.dependencies && e.manifest.extensionDependencies?.some(id => areSameExtensions({ id }, extension.identifier)))\n\t\t\t\t|| (options.pack && e.manifest.extensionPack?.some(id => areSameExtensions({ id }, extension.identifier))))) {\n\n\t\t\t\tconst index = extensionsToEnable.findIndex(e => areSameExtensions(e.identifier, extension.identifier));\n\n\t\t\t\t// Extension is not added to the disablement list so add it\n\t\t\t\tif (index === -1) {\n\t\t\t\t\textensionsToEnable.push(extension);\n\t\t\t\t}\n\n\t\t\t\t// Extension is there already in the disablement list.\n\t\t\t\telse {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Replace only if the enablement state can be changed\n\t\t\t\t\t\tthis.throwErrorIfEnablementStateCannotBeChanged(extension, enablementStateOfExtension, true);\n\t\t\t\t\t\textensionsToEnable.splice(index, 1, extension);\n\t\t\t\t\t} catch (error) { /*Do not add*/ }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (extensionsToEnable.length) {\n\t\t\textensionsToEnable.push(...this.getExtensionsToEnableRecursively(extensionsToEnable, allExtensions, enablementState, options, checked));\n\t\t}\n\n\t\treturn extensionsToEnable;\n\t}\n\n\tprivate _setUserEnablementState(extension: IExtension, newState: EnablementState): Promise<boolean> {\n\n\t\tconst currentState = this._getUserEnablementState(extension.identifier);\n\n\t\tif (currentState === newState) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tswitch (newState) {\n\t\t\tcase EnablementState.EnabledGlobally:\n\t\t\t\tthis._enableExtension(extension.identifier);\n\t\t\t\tbreak;\n\t\t\tcase EnablementState.DisabledGlobally:\n\t\t\t\tthis._disableExtension(extension.identifier);\n\t\t\t\tbreak;\n\t\t\tcase EnablementState.EnabledWorkspace:\n\t\t\t\tthis._enableExtensionInWorkspace(extension.identifier);\n\t\t\t\tbreak;\n\t\t\tcase EnablementState.DisabledWorkspace:\n\t\t\t\tthis._disableExtensionInWorkspace(extension.identifier);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n\n\tisEnabled(extension: IExtension): boolean {\n\t\tconst enablementState = this.getEnablementState(extension);\n\t\treturn this.isEnabledEnablementState(enablementState);\n\t}\n\n\tisEnabledEnablementState(enablementState: EnablementState): boolean {\n\t\treturn enablementState === EnablementState.EnabledByEnvironment || enablementState === EnablementState.EnabledWorkspace || enablementState === EnablementState.EnabledGlobally;\n\t}\n\n\tisDisabledGlobally(extension: IExtension): boolean {\n\t\treturn this._isDisabledGlobally(extension.identifier);\n\t}\n\n\tprivate _computeEnablementState(extension: IExtension, extensions: ReadonlyArray<IExtension>, workspaceType: WorkspaceType, computedEnablementStates?: Map<IExtension, EnablementState>): EnablementState {\n\t\tcomputedEnablementStates = computedEnablementStates ?? new Map<IExtension, EnablementState>();\n\t\tlet enablementState = computedEnablementStates.get(extension);\n\t\tif (enablementState !== undefined) {\n\t\t\treturn enablementState;\n\t\t}\n\n\t\tenablementState = this._getUserEnablementState(extension.identifier);\n\n\t\tif (this.extensionBisectService.isDisabledByBisect(extension)) {\n\t\t\tenablementState = EnablementState.DisabledByEnvironment;\n\t\t}\n\n\t\telse if (this._isDisabledInEnv(extension)) {\n\t\t\tenablementState = EnablementState.DisabledByEnvironment;\n\t\t}\n\n\t\telse if (this._isDisabledByVirtualWorkspace(extension, workspaceType)) {\n\t\t\tenablementState = EnablementState.DisabledByVirtualWorkspace;\n\t\t}\n\n\t\telse if (this.isEnabledEnablementState(enablementState) && this._isDisabledByWorkspaceTrust(extension, workspaceType)) {\n\t\t\tenablementState = EnablementState.DisabledByTrustRequirement;\n\t\t}\n\n\t\telse if (this._isDisabledByExtensionKind(extension)) {\n\t\t\tenablementState = EnablementState.DisabledByExtensionKind;\n\t\t}\n\n\t\telse if (this.isEnabledEnablementState(enablementState) && this._isDisabledByExtensionDependency(extension, extensions, workspaceType, computedEnablementStates)) {\n\t\t\tenablementState = EnablementState.DisabledByExtensionDependency;\n\t\t}\n\n\t\telse if (!this.isEnabledEnablementState(enablementState) && this._isEnabledInEnv(extension)) {\n\t\t\tenablementState = EnablementState.EnabledByEnvironment;\n\t\t}\n\n\t\tcomputedEnablementStates.set(extension, enablementState);\n\t\treturn enablementState;\n\t}\n\n\tprivate _isDisabledInEnv(extension: IExtension): boolean {\n\t\tif (this.allUserExtensionsDisabled) {\n\t\t\treturn !extension.isBuiltin && !isResolverExtension(extension.manifest, this.environmentService.remoteAuthority);\n\t\t}\n\n\t\tconst disabledExtensions = this.environmentService.disableExtensions;\n\t\tif (Array.isArray(disabledExtensions)) {\n\t\t\treturn disabledExtensions.some(id => areSameExtensions({ id }, extension.identifier));\n\t\t}\n\n\t\t// Check if this is the better merge extension which was migrated to a built-in extension\n\t\tif (areSameExtensions({ id: BetterMergeId.value }, extension.identifier)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _isEnabledInEnv(extension: IExtension): boolean {\n\t\tconst enabledExtensions = this.environmentService.enableExtensions;\n\t\tif (Array.isArray(enabledExtensions)) {\n\t\t\treturn enabledExtensions.some(id => areSameExtensions({ id }, extension.identifier));\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _isDisabledByVirtualWorkspace(extension: IExtension, workspaceType: WorkspaceType): boolean {\n\t\t// Not a virtual workspace\n\t\tif (!workspaceType.virtual) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Supports virtual workspace\n\t\tif (this.extensionManifestPropertiesService.getExtensionVirtualWorkspaceSupportType(extension.manifest) !== false) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Web extension from web extension management server\n\t\tif (this.extensionManagementServerService.getExtensionManagementServer(extension) === this.extensionManagementServerService.webExtensionManagementServer && this.extensionManifestPropertiesService.canExecuteOnWeb(extension.manifest)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _isDisabledByExtensionKind(extension: IExtension): boolean {\n\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer || this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\tconst installLocation = this.extensionManagementServerService.getExtensionInstallLocation(extension);\n\t\t\tfor (const extensionKind of this.extensionManifestPropertiesService.getExtensionKind(extension.manifest)) {\n\t\t\t\tif (extensionKind === 'ui') {\n\t\t\t\t\tif (installLocation === ExtensionInstallLocation.Local) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (extensionKind === 'workspace') {\n\t\t\t\t\tif (installLocation === ExtensionInstallLocation.Remote) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (extensionKind === 'web') {\n\t\t\t\t\tif (this.extensionManagementServerService.webExtensionManagementServer /* web */) {\n\t\t\t\t\t\tif (installLocation === ExtensionInstallLocation.Web || installLocation === ExtensionInstallLocation.Remote) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (installLocation === ExtensionInstallLocation.Local) {\n\t\t\t\t\t\tconst enableLocalWebWorker = this.configurationService.getValue<WebWorkerExtHostConfigValue>(webWorkerExtHostConfig);\n\t\t\t\t\t\tif (enableLocalWebWorker === true || enableLocalWebWorker === 'auto') {\n\t\t\t\t\t\t\t// Web extensions are enabled on all configurations\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _isDisabledByWorkspaceTrust(extension: IExtension, workspaceType: WorkspaceType): boolean {\n\t\tif (workspaceType.trusted) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.extensionManifestPropertiesService.getExtensionUntrustedWorkspaceSupportType(extension.manifest) === false;\n\t}\n\n\tprivate _isDisabledByExtensionDependency(extension: IExtension, extensions: ReadonlyArray<IExtension>, workspaceType: WorkspaceType, computedEnablementStates: Map<IExtension, EnablementState>): boolean {\n\t\t// Find dependencies from the same server as of the extension\n\t\tconst dependencyExtensions = extension.manifest.extensionDependencies\n\t\t\t? extensions.filter(e =>\n\t\t\t\textension.manifest.extensionDependencies!.some(id => areSameExtensions(e.identifier, { id }) && this.extensionManagementServerService.getExtensionManagementServer(e) === this.extensionManagementServerService.getExtensionManagementServer(extension)))\n\t\t\t: [];\n\n\t\tif (!dependencyExtensions.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasEnablementState = computedEnablementStates.has(extension);\n\t\tif (!hasEnablementState) {\n\t\t\t// Placeholder to handle cyclic deps\n\t\t\tcomputedEnablementStates.set(extension, EnablementState.EnabledGlobally);\n\t\t}\n\t\ttry {\n\t\t\tfor (const dependencyExtension of dependencyExtensions) {\n\t\t\t\tconst enablementState = this._computeEnablementState(dependencyExtension, extensions, workspaceType, computedEnablementStates);\n\t\t\t\tif (!this.isEnabledEnablementState(enablementState) && enablementState !== EnablementState.DisabledByExtensionKind) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tif (!hasEnablementState) {\n\t\t\t\t// remove the placeholder\n\t\t\t\tcomputedEnablementStates.delete(extension);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _getUserEnablementState(identifier: IExtensionIdentifier): EnablementState {\n\t\tif (this.hasWorkspace) {\n\t\t\tif (this._getWorkspaceEnabledExtensions().filter(e => areSameExtensions(e, identifier))[0]) {\n\t\t\t\treturn EnablementState.EnabledWorkspace;\n\t\t\t}\n\n\t\t\tif (this._getWorkspaceDisabledExtensions().filter(e => areSameExtensions(e, identifier))[0]) {\n\t\t\t\treturn EnablementState.DisabledWorkspace;\n\t\t\t}\n\t\t}\n\t\tif (this._isDisabledGlobally(identifier)) {\n\t\t\treturn EnablementState.DisabledGlobally;\n\t\t}\n\t\treturn EnablementState.EnabledGlobally;\n\t}\n\n\tprivate _isDisabledGlobally(identifier: IExtensionIdentifier): boolean {\n\t\treturn this.globalExtensionEnablementService.getDisabledExtensions().some(e => areSameExtensions(e, identifier));\n\t}\n\n\tprivate _enableExtension(identifier: IExtensionIdentifier): Promise<boolean> {\n\t\tthis._removeFromWorkspaceDisabledExtensions(identifier);\n\t\tthis._removeFromWorkspaceEnabledExtensions(identifier);\n\t\treturn this.globalExtensionEnablementService.enableExtension(identifier, SOURCE);\n\t}\n\n\tprivate _disableExtension(identifier: IExtensionIdentifier): Promise<boolean> {\n\t\tthis._removeFromWorkspaceDisabledExtensions(identifier);\n\t\tthis._removeFromWorkspaceEnabledExtensions(identifier);\n\t\treturn this.globalExtensionEnablementService.disableExtension(identifier, SOURCE);\n\t}\n\n\tprivate _enableExtensionInWorkspace(identifier: IExtensionIdentifier): void {\n\t\tthis._removeFromWorkspaceDisabledExtensions(identifier);\n\t\tthis._addToWorkspaceEnabledExtensions(identifier);\n\t}\n\n\tprivate _disableExtensionInWorkspace(identifier: IExtensionIdentifier): void {\n\t\tthis._addToWorkspaceDisabledExtensions(identifier);\n\t\tthis._removeFromWorkspaceEnabledExtensions(identifier);\n\t}\n\n\tprivate _addToWorkspaceDisabledExtensions(identifier: IExtensionIdentifier): Promise<boolean> {\n\t\tif (!this.hasWorkspace) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tconst disabledExtensions = this._getWorkspaceDisabledExtensions();\n\t\tif (disabledExtensions.every(e => !areSameExtensions(e, identifier))) {\n\t\t\tdisabledExtensions.push(identifier);\n\t\t\tthis._setDisabledExtensions(disabledExtensions);\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprivate async _removeFromWorkspaceDisabledExtensions(identifier: IExtensionIdentifier): Promise<boolean> {\n\t\tif (!this.hasWorkspace) {\n\t\t\treturn false;\n\t\t}\n\t\tconst disabledExtensions = this._getWorkspaceDisabledExtensions();\n\t\tfor (let index = 0; index < disabledExtensions.length; index++) {\n\t\t\tconst disabledExtension = disabledExtensions[index];\n\t\t\tif (areSameExtensions(disabledExtension, identifier)) {\n\t\t\t\tdisabledExtensions.splice(index, 1);\n\t\t\t\tthis._setDisabledExtensions(disabledExtensions);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _addToWorkspaceEnabledExtensions(identifier: IExtensionIdentifier): boolean {\n\t\tif (!this.hasWorkspace) {\n\t\t\treturn false;\n\t\t}\n\t\tconst enabledExtensions = this._getWorkspaceEnabledExtensions();\n\t\tif (enabledExtensions.every(e => !areSameExtensions(e, identifier))) {\n\t\t\tenabledExtensions.push(identifier);\n\t\t\tthis._setEnabledExtensions(enabledExtensions);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _removeFromWorkspaceEnabledExtensions(identifier: IExtensionIdentifier): boolean {\n\t\tif (!this.hasWorkspace) {\n\t\t\treturn false;\n\t\t}\n\t\tconst enabledExtensions = this._getWorkspaceEnabledExtensions();\n\t\tfor (let index = 0; index < enabledExtensions.length; index++) {\n\t\t\tconst disabledExtension = enabledExtensions[index];\n\t\t\tif (areSameExtensions(disabledExtension, identifier)) {\n\t\t\t\tenabledExtensions.splice(index, 1);\n\t\t\t\tthis._setEnabledExtensions(enabledExtensions);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _getWorkspaceEnabledExtensions(): IExtensionIdentifier[] {\n\t\treturn this._getExtensions(ENABLED_EXTENSIONS_STORAGE_PATH);\n\t}\n\n\tprivate _setEnabledExtensions(enabledExtensions: IExtensionIdentifier[]): void {\n\t\tthis._setExtensions(ENABLED_EXTENSIONS_STORAGE_PATH, enabledExtensions);\n\t}\n\n\tprotected _getWorkspaceDisabledExtensions(): IExtensionIdentifier[] {\n\t\treturn this._getExtensions(DISABLED_EXTENSIONS_STORAGE_PATH);\n\t}\n\n\tprivate _setDisabledExtensions(disabledExtensions: IExtensionIdentifier[]): void {\n\t\tthis._setExtensions(DISABLED_EXTENSIONS_STORAGE_PATH, disabledExtensions);\n\t}\n\n\tprivate _getExtensions(storageId: string): IExtensionIdentifier[] {\n\t\tif (!this.hasWorkspace) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.storageManger.get(storageId, StorageScope.WORKSPACE);\n\t}\n\n\tprivate _setExtensions(storageId: string, extensions: IExtensionIdentifier[]): void {\n\t\tthis.storageManger.set(storageId, extensions, StorageScope.WORKSPACE);\n\t}\n\n\tprivate async _onDidChangeGloballyDisabledExtensions(extensionIdentifiers: ReadonlyArray<IExtensionIdentifier>, source?: string): Promise<void> {\n\t\tif (source !== SOURCE) {\n\t\t\tawait this.extensionsManager.whenInitialized();\n\t\t\tconst extensions = this.extensionsManager.extensions.filter(installedExtension => extensionIdentifiers.some(identifier => areSameExtensions(identifier, installedExtension.identifier)));\n\t\t\tthis._onEnablementChanged.fire(extensions);\n\t\t}\n\t}\n\n\tprivate _onDidChangeExtensions(added: ReadonlyArray<IExtension>, removed: ReadonlyArray<IExtension>, isProfileSwitch: boolean): void {\n\t\tconst disabledExtensions = added.filter(e => !this.isEnabledEnablementState(this.getEnablementState(e)));\n\t\tif (disabledExtensions.length) {\n\t\t\tthis._onEnablementChanged.fire(disabledExtensions);\n\t\t}\n\t\tif (!isProfileSwitch) {\n\t\t\tremoved.forEach(({ identifier }) => this._reset(identifier));\n\t\t}\n\t}\n\n\tpublic async updateExtensionsEnablementsWhenWorkspaceTrustChanges(): Promise<void> {\n\t\tawait this.extensionsManager.whenInitialized();\n\n\t\tconst computeEnablementStates = (workspaceType: WorkspaceType): [IExtension, EnablementState][] => {\n\t\t\tconst extensionsEnablements = new Map<IExtension, EnablementState>();\n\t\t\treturn this.extensionsManager.extensions.map(extension => [extension, this._computeEnablementState(extension, this.extensionsManager.extensions, workspaceType, extensionsEnablements)]);\n\t\t};\n\n\t\tconst workspaceType = this.getWorkspaceType();\n\t\tconst enablementStatesWithTrustedWorkspace = computeEnablementStates({ ...workspaceType, trusted: true });\n\t\tconst enablementStatesWithUntrustedWorkspace = computeEnablementStates({ ...workspaceType, trusted: false });\n\t\tconst enablementChangedExtensionsBecauseOfTrust = enablementStatesWithTrustedWorkspace.filter(([, enablementState], index) => enablementState !== enablementStatesWithUntrustedWorkspace[index][1]).map(([extension]) => extension);\n\n\t\tif (enablementChangedExtensionsBecauseOfTrust.length) {\n\t\t\tthis._onEnablementChanged.fire(enablementChangedExtensionsBecauseOfTrust);\n\t\t}\n\t}\n\n\tprivate getWorkspaceType(): WorkspaceType {\n\t\treturn { trusted: this.workspaceTrustManagementService.isWorkspaceTrusted(), virtual: isVirtualWorkspace(this.contextService.getWorkspace()) };\n\t}\n\n\tprivate _reset(extension: IExtensionIdentifier) {\n\t\tthis._removeFromWorkspaceDisabledExtensions(extension);\n\t\tthis._removeFromWorkspaceEnabledExtensions(extension);\n\t\tthis.globalExtensionEnablementService.enableExtension(extension);\n\t}\n}\n\nclass ExtensionsManager extends Disposable {\n\n\tprivate _extensions: IExtension[] = [];\n\tget extensions(): readonly IExtension[] { return this._extensions; }\n\n\tprivate _onDidChangeExtensions = this._register(new Emitter<{ added: readonly IExtension[]; removed: readonly IExtension[]; readonly isProfileSwitch: boolean }>());\n\treadonly onDidChangeExtensions = this._onDidChangeExtensions.event;\n\n\tprivate readonly initializePromise;\n\tprivate disposed: boolean = false;\n\n\tconstructor(\n\t\t@IWorkbenchExtensionManagementService private readonly extensionManagementService: IWorkbenchExtensionManagementService,\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => this.disposed = true));\n\t\tthis.initializePromise = this.initialize();\n\t}\n\n\twhenInitialized(): Promise<void> {\n\t\treturn this.initializePromise;\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\ttry {\n\t\t\tthis._extensions = await this.extensionManagementService.getInstalled();\n\t\t\tif (this.disposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._onDidChangeExtensions.fire({ added: this.extensions, removed: [], isProfileSwitch: false });\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\tthis._register(this.extensionManagementService.onDidInstallExtensions(e =>\n\t\t\tthis.updateExtensions(e.reduce<IExtension[]>((result, { local, operation }) => {\n\t\t\t\tif (local && operation !== InstallOperation.Migrate) { result.push(local); } return result;\n\t\t\t}, []), [], undefined, false)));\n\t\tthis._register(Event.filter(this.extensionManagementService.onDidUninstallExtension, (e => !e.error))(e => this.updateExtensions([], [e.identifier], e.server, false)));\n\t\tthis._register(this.extensionManagementService.onDidChangeProfile(({ added, removed, server }) => {\n\t\t\tthis.updateExtensions(added, removed.map(({ identifier }) => identifier), server, true);\n\t\t}));\n\t}\n\n\tprivate updateExtensions(added: IExtension[], identifiers: IExtensionIdentifier[], server: IExtensionManagementServer | undefined, isProfileSwitch: boolean): void {\n\t\tif (added.length) {\n\t\t\tthis._extensions.push(...added);\n\t\t}\n\t\tconst removed: IExtension[] = [];\n\t\tfor (const identifier of identifiers) {\n\t\t\tconst index = this._extensions.findIndex(e => areSameExtensions(e.identifier, identifier) && this.extensionManagementServerService.getExtensionManagementServer(e) === server);\n\t\t\tif (index !== -1) {\n\t\t\t\tremoved.push(...this._extensions.splice(index, 1));\n\t\t\t}\n\t\t}\n\t\tif (added.length || removed.length) {\n\t\t\tthis._onDidChangeExtensions.fire({ added, removed, isProfileSwitch });\n\t\t}\n\t}\n}\n\nregisterSingleton(IWorkbenchExtensionEnablementService, ExtensionEnablementService, InstantiationType.Delayed);\n"]}