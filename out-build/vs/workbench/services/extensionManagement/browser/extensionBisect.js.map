{"version":3,"sources":["vs/workbench/services/extensionManagement/browser/extensionBisect.ts"],"names":[],"mappings":"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","file":"extensionBisect.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IExtensionManagementService, IGlobalExtensionEnablementService, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ExtensionType, IExtension, isResolverExtension } from 'vs/platform/extensions/common/extensions';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { INotificationService, IPromptChoice, NotificationPriority, Severity } from 'vs/platform/notification/common/notification';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { createDecorator, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IWorkbenchIssueService } from 'vs/workbench/services/issue/common/issue';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { IWorkbenchExtensionEnablementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\n\n// --- bisect service\n\nexport const IExtensionBisectService = createDecorator<IExtensionBisectService>('IExtensionBisectService');\n\nexport interface IExtensionBisectService {\n\n\treadonly _serviceBrand: undefined;\n\n\tisDisabledByBisect(extension: IExtension): boolean;\n\tisActive: boolean;\n\tdisabledCount: number;\n\tstart(extensions: ILocalExtension[]): Promise<void>;\n\tnext(seeingBad: boolean): Promise<{ id: string; bad: boolean } | undefined>;\n\treset(): Promise<void>;\n}\n\nclass BisectState {\n\n\tstatic fromJSON(raw: string | undefined): BisectState | undefined {\n\t\tif (!raw) {\n\t\t\treturn undefined;\n\t\t}\n\t\ttry {\n\t\t\tinterface Raw extends BisectState { }\n\t\t\tconst data: Raw = JSON.parse(raw);\n\t\t\treturn new BisectState(data.extensions, data.low, data.high, data.mid);\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconstructor(\n\t\treadonly extensions: string[],\n\t\treadonly low: number,\n\t\treadonly high: number,\n\t\treadonly mid: number = ((low + high) / 2) | 0\n\t) { }\n}\n\nclass ExtensionBisectService implements IExtensionBisectService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly _storageKey = 'extensionBisectState';\n\n\tprivate readonly _state: BisectState | undefined;\n\tprivate readonly _disabled = new Map<string, boolean>();\n\n\tconstructor(\n\t\t@ILogService logService: ILogService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IWorkbenchEnvironmentService private readonly _envService: IWorkbenchEnvironmentService\n\t) {\n\t\tconst raw = _storageService.get(ExtensionBisectService._storageKey, StorageScope.APPLICATION);\n\t\tthis._state = BisectState.fromJSON(raw);\n\n\t\tif (this._state) {\n\t\t\tconst { mid, high } = this._state;\n\t\t\tfor (let i = 0; i < this._state.extensions.length; i++) {\n\t\t\t\tconst isDisabled = i >= mid && i < high;\n\t\t\t\tthis._disabled.set(this._state.extensions[i], isDisabled);\n\t\t\t}\n\t\t\tlogService.warn('extension BISECT active', [...this._disabled]);\n\t\t}\n\t}\n\n\tget isActive() {\n\t\treturn !!this._state;\n\t}\n\n\tget disabledCount() {\n\t\treturn this._state ? this._state.high - this._state.mid : -1;\n\t}\n\n\tisDisabledByBisect(extension: IExtension): boolean {\n\t\tif (!this._state) {\n\t\t\t// bisect isn't active\n\t\t\treturn false;\n\t\t}\n\t\tif (isResolverExtension(extension.manifest, this._envService.remoteAuthority)) {\n\t\t\t// the current remote resolver extension cannot be disabled\n\t\t\treturn false;\n\t\t}\n\t\tif (this._isEnabledInEnv(extension)) {\n\t\t\t// Extension enabled in env cannot be disabled\n\t\t\treturn false;\n\t\t}\n\t\tconst disabled = this._disabled.get(extension.identifier.id);\n\t\treturn disabled ?? false;\n\t}\n\n\tprivate _isEnabledInEnv(extension: IExtension): boolean {\n\t\treturn Array.isArray(this._envService.enableExtensions) && this._envService.enableExtensions.some(id => areSameExtensions({ id }, extension.identifier));\n\t}\n\n\tasync start(extensions: ILocalExtension[]): Promise<void> {\n\t\tif (this._state) {\n\t\t\tthrow new Error('invalid state');\n\t\t}\n\t\tconst extensionIds = extensions.map(ext => ext.identifier.id);\n\t\tconst newState = new BisectState(extensionIds, 0, extensionIds.length, 0);\n\t\tthis._storageService.store(ExtensionBisectService._storageKey, JSON.stringify(newState), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tawait this._storageService.flush();\n\t}\n\n\tasync next(seeingBad: boolean): Promise<{ id: string; bad: boolean } | undefined> {\n\t\tif (!this._state) {\n\t\t\tthrow new Error('invalid state');\n\t\t}\n\t\t// check if bad when all extensions are disabled\n\t\tif (seeingBad && this._state.mid === 0 && this._state.high === this._state.extensions.length) {\n\t\t\treturn { bad: true, id: '' };\n\t\t}\n\t\t// check if there is only one left\n\t\tif (this._state.low === this._state.high - 1) {\n\t\t\tawait this.reset();\n\t\t\treturn { id: this._state.extensions[this._state.low], bad: seeingBad };\n\t\t}\n\t\t// the second half is disabled so if there is still bad it must be\n\t\t// in the first half\n\t\tconst nextState = new BisectState(\n\t\t\tthis._state.extensions,\n\t\t\tseeingBad ? this._state.low : this._state.mid,\n\t\t\tseeingBad ? this._state.mid : this._state.high,\n\t\t);\n\t\tthis._storageService.store(ExtensionBisectService._storageKey, JSON.stringify(nextState), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tawait this._storageService.flush();\n\t\treturn undefined;\n\t}\n\n\tasync reset(): Promise<void> {\n\t\tthis._storageService.remove(ExtensionBisectService._storageKey, StorageScope.APPLICATION);\n\t\tawait this._storageService.flush();\n\t}\n}\n\nregisterSingleton(IExtensionBisectService, ExtensionBisectService, InstantiationType.Delayed);\n\n// --- bisect UI\n\nclass ExtensionBisectUi {\n\n\tstatic ctxIsBisectActive = new RawContextKey<boolean>('isExtensionBisectActive', false);\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionBisectService private readonly _extensionBisectService: IExtensionBisectService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t) {\n\t\tif (_extensionBisectService.isActive) {\n\t\t\tExtensionBisectUi.ctxIsBisectActive.bindTo(contextKeyService).set(true);\n\t\t\tthis._showBisectPrompt();\n\t\t}\n\t}\n\n\tprivate _showBisectPrompt(): void {\n\n\t\tconst goodPrompt: IPromptChoice = {\n\t\t\tlabel: localize('I cannot reproduce', \"I can't reproduce\"),\n\t\t\trun: () => this._commandService.executeCommand('extension.bisect.next', false)\n\t\t};\n\t\tconst badPrompt: IPromptChoice = {\n\t\t\tlabel: localize('This is Bad', \"I can reproduce\"),\n\t\t\trun: () => this._commandService.executeCommand('extension.bisect.next', true)\n\t\t};\n\t\tconst stop: IPromptChoice = {\n\t\t\tlabel: 'Stop Bisect',\n\t\t\trun: () => this._commandService.executeCommand('extension.bisect.stop')\n\t\t};\n\n\t\tconst message = this._extensionBisectService.disabledCount === 1\n\t\t\t? localize('bisect.singular', \"Extension Bisect is active and has disabled 1 extension. Check if you can still reproduce the problem and proceed by selecting from these options.\")\n\t\t\t: localize('bisect.plural', \"Extension Bisect is active and has disabled {0} extensions. Check if you can still reproduce the problem and proceed by selecting from these options.\", this._extensionBisectService.disabledCount);\n\n\t\tthis._notificationService.prompt(\n\t\t\tSeverity.Info,\n\t\t\tmessage,\n\t\t\t[goodPrompt, badPrompt, stop],\n\t\t\t{ sticky: true, priority: NotificationPriority.URGENT }\n\t\t);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(\n\tExtensionBisectUi,\n\tLifecyclePhase.Restored\n);\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'extension.bisect.start',\n\t\t\ttitle: { value: localize('title.start', \"Start Extension Bisect\"), original: 'Start Extension Bisect' },\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tprecondition: ExtensionBisectUi.ctxIsBisectActive.negate(),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\twhen: ContextKeyExpr.equals('viewContainer', 'workbench.view.extensions'),\n\t\t\t\tgroup: '2_enablement',\n\t\t\t\torder: 4\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst extensionManagement = accessor.get(IExtensionManagementService);\n\t\tconst extensionEnablementService = accessor.get(IWorkbenchExtensionEnablementService);\n\t\tconst extensionsBisect = accessor.get(IExtensionBisectService);\n\n\t\tconst extensions = (await extensionManagement.getInstalled(ExtensionType.User)).filter(ext => extensionEnablementService.isEnabled(ext));\n\n\t\tconst res = await dialogService.confirm({\n\t\t\tmessage: localize('msg.start', \"Extension Bisect\"),\n\t\t\tdetail: localize('detail.start', \"Extension Bisect will use binary search to find an extension that causes a problem. During the process the window reloads repeatedly (~{0} times). Each time you must confirm if you are still seeing problems.\", 2 + Math.log2(extensions.length) | 0),\n\t\t\tprimaryButton: localize({ key: 'msg2', comment: ['&& denotes a mnemonic'] }, \"&&Start Extension Bisect\")\n\t\t});\n\n\t\tif (res.confirmed) {\n\t\t\tawait extensionsBisect.start(extensions);\n\t\t\thostService.reload();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'extension.bisect.next',\n\t\t\ttitle: { value: localize('title.isBad', \"Continue Extension Bisect\"), original: 'Continue Extension Bisect' },\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tprecondition: ExtensionBisectUi.ctxIsBisectActive\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, seeingBad: boolean | undefined): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst bisectService = accessor.get(IExtensionBisectService);\n\t\tconst productService = accessor.get(IProductService);\n\t\tconst extensionEnablementService = accessor.get(IGlobalExtensionEnablementService);\n\t\tconst issueService = accessor.get(IWorkbenchIssueService);\n\n\t\tif (!bisectService.isActive) {\n\t\t\treturn;\n\t\t}\n\t\tif (seeingBad === undefined) {\n\t\t\tconst goodBadStopCancel = await this._checkForBad(dialogService, bisectService);\n\t\t\tif (goodBadStopCancel === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tseeingBad = goodBadStopCancel;\n\t\t}\n\t\tif (seeingBad === undefined) {\n\t\t\tawait bisectService.reset();\n\t\t\thostService.reload();\n\t\t\treturn;\n\t\t}\n\t\tconst done = await bisectService.next(seeingBad);\n\t\tif (!done) {\n\t\t\thostService.reload();\n\t\t\treturn;\n\t\t}\n\n\t\tif (done.bad) {\n\t\t\t// DONE but nothing found\n\t\t\tawait dialogService.info(\n\t\t\t\tlocalize('done.msg', \"Extension Bisect\"),\n\t\t\t\tlocalize('done.detail2', \"Extension Bisect is done but no extension has been identified. This might be a problem with {0}.\", productService.nameShort)\n\t\t\t);\n\n\t\t} else {\n\t\t\t// DONE and identified extension\n\t\t\tconst res = await dialogService.confirm({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage: localize('done.msg', \"Extension Bisect\"),\n\t\t\t\tprimaryButton: localize({ key: 'report', comment: ['&& denotes a mnemonic'] }, \"&&Report Issue & Continue\"),\n\t\t\t\tcancelButton: localize('continue', \"Continue\"),\n\t\t\t\tdetail: localize('done.detail', \"Extension Bisect is done and has identified {0} as the extension causing the problem.\", done.id),\n\t\t\t\tcheckbox: { label: localize('done.disbale', \"Keep this extension disabled\"), checked: true }\n\t\t\t});\n\t\t\tif (res.checkboxChecked) {\n\t\t\t\tawait extensionEnablementService.disableExtension({ id: done.id }, undefined);\n\t\t\t}\n\t\t\tif (res.confirmed) {\n\t\t\t\tawait issueService.openReporter({ extensionId: done.id });\n\t\t\t}\n\t\t}\n\t\tawait bisectService.reset();\n\t\thostService.reload();\n\t}\n\n\tprivate async _checkForBad(dialogService: IDialogService, bisectService: IExtensionBisectService): Promise<boolean | undefined | null> {\n\t\tconst { result } = await dialogService.prompt<boolean | undefined | null>({\n\t\t\ttype: Severity.Info,\n\t\t\tmessage: localize('msg.next', \"Extension Bisect\"),\n\t\t\tdetail: localize('bisect', \"Extension Bisect is active and has disabled {0} extensions. Check if you can still reproduce the problem and proceed by selecting from these options.\", bisectService.disabledCount),\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: localize({ key: 'next.good', comment: ['&& denotes a mnemonic'] }, \"I ca&&n't reproduce\"),\n\t\t\t\t\trun: () => false // good now\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize({ key: 'next.bad', comment: ['&& denotes a mnemonic'] }, \"I can &&reproduce\"),\n\t\t\t\t\trun: () => true // bad\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize({ key: 'next.stop', comment: ['&& denotes a mnemonic'] }, \"&&Stop Bisect\"),\n\t\t\t\t\trun: () => undefined // stop\n\t\t\t\t}\n\t\t\t],\n\t\t\tcancelButton: {\n\t\t\t\tlabel: localize({ key: 'next.cancel', comment: ['&& denotes a mnemonic'] }, \"&&Cancel Bisect\"),\n\t\t\t\trun: () => null // cancel\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'extension.bisect.stop',\n\t\t\ttitle: { value: localize('title.stop', \"Stop Extension Bisect\"), original: 'Stop Extension Bisect' },\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tprecondition: ExtensionBisectUi.ctxIsBisectActive\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst extensionsBisect = accessor.get(IExtensionBisectService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tawait extensionsBisect.reset();\n\t\thostService.reload();\n\t}\n});\n"]}