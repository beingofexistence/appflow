{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/progress/test/browser/progressIndicator.test.ts"],"names":[],"mappings":"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","file":"progressIndicator.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { AbstractProgressScope, ScopedProgressIndicator } from 'vs/workbench/services/progress/browser/progressIndicator';\n\nclass TestProgressBar {\n\tfTotal: number = 0;\n\tfWorked: number = 0;\n\tfInfinite: boolean = false;\n\tfDone: boolean = false;\n\n\tinfinite() {\n\t\tthis.fDone = null!;\n\t\tthis.fInfinite = true;\n\n\t\treturn this;\n\t}\n\n\ttotal(total: number) {\n\t\tthis.fDone = null!;\n\t\tthis.fTotal = total;\n\n\t\treturn this;\n\t}\n\n\thasTotal() {\n\t\treturn !!this.fTotal;\n\t}\n\n\tworked(worked: number) {\n\t\tthis.fDone = null!;\n\n\t\tif (this.fWorked) {\n\t\t\tthis.fWorked += worked;\n\t\t} else {\n\t\t\tthis.fWorked = worked;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tdone() {\n\t\tthis.fDone = true;\n\n\t\tthis.fInfinite = null!;\n\t\tthis.fWorked = null!;\n\t\tthis.fTotal = null!;\n\n\t\treturn this;\n\t}\n\n\tstop() {\n\t\treturn this.done();\n\t}\n\n\tshow(): void { }\n\n\thide(): void { }\n}\n\nsuite('Progress Indicator', () => {\n\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('ScopedProgressIndicator', async () => {\n\t\tconst testProgressBar = new TestProgressBar();\n\t\tconst progressScope = disposables.add(new class extends AbstractProgressScope {\n\t\t\tconstructor() { super('test.scopeId', true); }\n\t\t\ttestOnScopeOpened(scopeId: string) { super.onScopeOpened(scopeId); }\n\t\t\ttestOnScopeClosed(scopeId: string): void { super.onScopeClosed(scopeId); }\n\t\t}());\n\t\tconst testObject = disposables.add(new ScopedProgressIndicator((<any>testProgressBar), progressScope));\n\n\t\t// Active: Show (Infinite)\n\t\tlet fn = testObject.show(true);\n\t\tassert.strictEqual(true, testProgressBar.fInfinite);\n\t\tfn.done();\n\t\tassert.strictEqual(true, testProgressBar.fDone);\n\n\t\t// Active: Show (Total / Worked)\n\t\tfn = testObject.show(100);\n\t\tassert.strictEqual(false, !!testProgressBar.fInfinite);\n\t\tassert.strictEqual(100, testProgressBar.fTotal);\n\t\tfn.worked(20);\n\t\tassert.strictEqual(20, testProgressBar.fWorked);\n\t\tfn.total(80);\n\t\tassert.strictEqual(80, testProgressBar.fTotal);\n\t\tfn.done();\n\t\tassert.strictEqual(true, testProgressBar.fDone);\n\n\t\t// Inactive: Show (Infinite)\n\t\tprogressScope.testOnScopeClosed('test.scopeId');\n\t\ttestObject.show(true);\n\t\tassert.strictEqual(false, !!testProgressBar.fInfinite);\n\t\tprogressScope.testOnScopeOpened('test.scopeId');\n\t\tassert.strictEqual(true, testProgressBar.fInfinite);\n\n\t\t// Inactive: Show (Total / Worked)\n\t\tprogressScope.testOnScopeClosed('test.scopeId');\n\t\tfn = testObject.show(100);\n\t\tfn.total(80);\n\t\tfn.worked(20);\n\t\tassert.strictEqual(false, !!testProgressBar.fTotal);\n\t\tprogressScope.testOnScopeOpened('test.scopeId');\n\t\tassert.strictEqual(20, testProgressBar.fWorked);\n\t\tassert.strictEqual(80, testProgressBar.fTotal);\n\n\t\t// Acive: Show While\n\t\tlet p = Promise.resolve(null);\n\t\tawait testObject.showWhile(p);\n\t\tassert.strictEqual(true, testProgressBar.fDone);\n\t\tprogressScope.testOnScopeClosed('test.scopeId');\n\t\tp = Promise.resolve(null);\n\t\tawait testObject.showWhile(p);\n\t\tassert.strictEqual(true, testProgressBar.fDone);\n\t\tprogressScope.testOnScopeOpened('test.scopeId');\n\t\tassert.strictEqual(true, testProgressBar.fDone);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}