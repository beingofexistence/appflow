{"version":3,"sources":["vs/workbench/services/userDataSync/browser/userDataSyncWorkbenchService.ts"],"names":[],"mappings":"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","file":"userDataSyncWorkbenchService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IUserDataSyncService, IAuthenticationProvider, isAuthenticationProvider, IUserDataAutoSyncService, IUserDataSyncStoreManagementService, SyncStatus, IUserDataSyncEnablementService, IUserDataSyncResource, IResourcePreview, USER_DATA_SYNC_SCHEME, USER_DATA_SYNC_LOG_ID, } from 'vs/platform/userDataSync/common/userDataSync';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IUserDataSyncWorkbenchService, IUserDataSyncAccount, AccountStatus, CONTEXT_SYNC_ENABLEMENT, CONTEXT_SYNC_STATE, CONTEXT_ACCOUNT_STATE, SHOW_SYNC_LOG_COMMAND_ID, CONTEXT_ENABLE_ACTIVITY_VIEWS, SYNC_VIEW_CONTAINER_ID, SYNC_TITLE, SYNC_CONFLICTS_VIEW_ID, CONTEXT_ENABLE_SYNC_CONFLICTS_VIEW, CONTEXT_HAS_CONFLICTS, IUserDataSyncConflictsView } from 'vs/workbench/services/userDataSync/common/userDataSync';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { getCurrentAuthenticationSessionInfo } from 'vs/workbench/services/authentication/browser/authenticationService';\nimport { AuthenticationSession, AuthenticationSessionsChangeEvent, IAuthenticationService } from 'vs/workbench/services/authentication/common/authentication';\nimport { IUserDataSyncAccountService } from 'vs/platform/userDataSync/common/userDataSyncAccount';\nimport { IQuickInputService, IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { localize } from 'vs/nls';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IProgressService, ProgressLocation } from 'vs/platform/progress/common/progress';\nimport { URI } from 'vs/base/common/uri';\nimport { IViewsService, IViewDescriptorService } from 'vs/workbench/common/views';\nimport { ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { UserDataSyncStoreClient } from 'vs/platform/userDataSync/common/userDataSyncStoreService';\nimport { UserDataSyncStoreTypeSynchronizer } from 'vs/platform/userDataSync/common/globalStateSync';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { raceCancellationError } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { isDiffEditorInput } from 'vs/workbench/common/editor';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { IUserDataInitializationService } from 'vs/workbench/services/userData/browser/userDataInit';\nimport { ISecretStorageService } from 'vs/platform/secrets/common/secrets';\nimport { IFileService } from 'vs/platform/files/common/files';\n\ntype AccountQuickPickItem = { label: string; authenticationProvider: IAuthenticationProvider; account?: UserDataSyncAccount; description?: string };\n\nclass UserDataSyncAccount implements IUserDataSyncAccount {\n\n\tconstructor(readonly authenticationProviderId: string, private readonly session: AuthenticationSession) { }\n\n\tget sessionId(): string { return this.session.id; }\n\tget accountName(): string { return this.session.account.label; }\n\tget accountId(): string { return this.session.account.id; }\n\tget token(): string { return this.session.idToken || this.session.accessToken; }\n}\n\ntype MergeEditorInput = { base: URI; input1: { uri: URI }; input2: { uri: URI }; result: URI };\nexport function isMergeEditorInput(editor: unknown): editor is MergeEditorInput {\n\tconst candidate = editor as MergeEditorInput;\n\treturn URI.isUri(candidate?.base) && URI.isUri(candidate?.input1?.uri) && URI.isUri(candidate?.input2?.uri) && URI.isUri(candidate?.result);\n}\n\nexport class UserDataSyncWorkbenchService extends Disposable implements IUserDataSyncWorkbenchService {\n\n\t_serviceBrand: any;\n\n\tprivate static DONOT_USE_WORKBENCH_SESSION_STORAGE_KEY = 'userDataSyncAccount.donotUseWorkbenchSession';\n\tprivate static CACHED_AUTHENTICATION_PROVIDER_KEY = 'userDataSyncAccountProvider';\n\tprivate static CACHED_SESSION_STORAGE_KEY = 'userDataSyncAccountPreference';\n\n\tget enabled() { return !!this.userDataSyncStoreManagementService.userDataSyncStore; }\n\n\tprivate _authenticationProviders: IAuthenticationProvider[] = [];\n\tget authenticationProviders() { return this._authenticationProviders; }\n\n\tprivate _accountStatus: AccountStatus = AccountStatus.Unavailable;\n\tget accountStatus(): AccountStatus { return this._accountStatus; }\n\tprivate readonly _onDidChangeAccountStatus = this._register(new Emitter<AccountStatus>());\n\treadonly onDidChangeAccountStatus = this._onDidChangeAccountStatus.event;\n\n\tprivate _current: UserDataSyncAccount | undefined;\n\tget current(): UserDataSyncAccount | undefined { return this._current; }\n\n\tprivate readonly syncEnablementContext: IContextKey<boolean>;\n\tprivate readonly syncStatusContext: IContextKey<string>;\n\tprivate readonly accountStatusContext: IContextKey<string>;\n\tprivate readonly enableConflictsViewContext: IContextKey<boolean>;\n\tprivate readonly hasConflicts: IContextKey<boolean>;\n\tprivate readonly activityViewsEnablementContext: IContextKey<boolean>;\n\n\tprivate turnOnSyncCancellationToken: CancellationTokenSource | undefined = undefined;\n\n\tconstructor(\n\t\t@IUserDataSyncService private readonly userDataSyncService: IUserDataSyncService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IAuthenticationService private readonly authenticationService: IAuthenticationService,\n\t\t@IUserDataSyncAccountService private readonly userDataSyncAccountService: IUserDataSyncAccountService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IUserDataAutoSyncService private readonly userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@ISecretStorageService private readonly secretStorageService: ISecretStorageService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IUserDataInitializationService private readonly userDataInitializationService: IUserDataInitializationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tsuper();\n\t\tthis.syncEnablementContext = CONTEXT_SYNC_ENABLEMENT.bindTo(contextKeyService);\n\t\tthis.syncStatusContext = CONTEXT_SYNC_STATE.bindTo(contextKeyService);\n\t\tthis.accountStatusContext = CONTEXT_ACCOUNT_STATE.bindTo(contextKeyService);\n\t\tthis.activityViewsEnablementContext = CONTEXT_ENABLE_ACTIVITY_VIEWS.bindTo(contextKeyService);\n\t\tthis.hasConflicts = CONTEXT_HAS_CONFLICTS.bindTo(contextKeyService);\n\t\tthis.enableConflictsViewContext = CONTEXT_ENABLE_SYNC_CONFLICTS_VIEW.bindTo(contextKeyService);\n\n\t\tif (this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\tthis.syncStatusContext.set(this.userDataSyncService.status);\n\t\t\tthis._register(userDataSyncService.onDidChangeStatus(status => this.syncStatusContext.set(status)));\n\t\t\tthis.syncEnablementContext.set(userDataSyncEnablementService.isEnabled());\n\t\t\tthis._register(userDataSyncEnablementService.onDidChangeEnablement(enabled => this.syncEnablementContext.set(enabled)));\n\n\t\t\tthis.waitAndInitialize();\n\t\t}\n\t}\n\n\tprivate updateAuthenticationProviders(): void {\n\t\tthis._authenticationProviders = (this.userDataSyncStoreManagementService.userDataSyncStore?.authenticationProviders || []).filter(({ id }) => this.authenticationService.declaredProviders.some(provider => provider.id === id));\n\t}\n\n\tprivate isSupportedAuthenticationProviderId(authenticationProviderId: string): boolean {\n\t\treturn this.authenticationProviders.some(({ id }) => id === authenticationProviderId);\n\t}\n\n\tprivate async waitAndInitialize(): Promise<void> {\n\t\t/* wait */\n\t\tawait Promise.all([this.extensionService.whenInstalledExtensionsRegistered(), this.userDataInitializationService.whenInitializationFinished()]);\n\n\t\t/* initialize */\n\t\ttry {\n\t\t\tawait this.initialize();\n\t\t} catch (error) {\n\t\t\t// Do not log if the current window is running extension tests\n\t\t\tif (!this.environmentService.extensionTestsLocationURI) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\tif (isWeb) {\n\t\t\tconst authenticationSession = await getCurrentAuthenticationSessionInfo(this.secretStorageService, this.productService);\n\t\t\tif (this.currentSessionId === undefined && authenticationSession?.id) {\n\t\t\t\tif (this.environmentService.options?.settingsSyncOptions?.authenticationProvider && this.environmentService.options.settingsSyncOptions.enabled) {\n\t\t\t\t\tthis.currentSessionId = authenticationSession.id;\n\t\t\t\t}\n\n\t\t\t\t// Backward compatibility\n\t\t\t\telse if (this.useWorkbenchSessionId) {\n\t\t\t\t\tthis.currentSessionId = authenticationSession.id;\n\t\t\t\t}\n\t\t\t\tthis.useWorkbenchSessionId = false;\n\t\t\t}\n\t\t}\n\n\t\tawait this.update();\n\n\t\tthis._register(this.authenticationService.onDidChangeDeclaredProviders(() => this.updateAuthenticationProviders()));\n\n\t\tthis._register(Event.filter(\n\t\t\tEvent.any(\n\t\t\t\tthis.authenticationService.onDidRegisterAuthenticationProvider,\n\t\t\t\tthis.authenticationService.onDidUnregisterAuthenticationProvider,\n\t\t\t), info => this.isSupportedAuthenticationProviderId(info.id))(() => this.update()));\n\n\t\tthis._register(Event.filter(this.userDataSyncAccountService.onTokenFailed, isSuccessive => !isSuccessive)(() => this.update('token failure')));\n\n\t\tthis._register(Event.filter(this.authenticationService.onDidChangeSessions, e => this.isSupportedAuthenticationProviderId(e.providerId))(({ event }) => this.onDidChangeSessions(event)));\n\t\tthis._register(this.storageService.onDidChangeValue(StorageScope.APPLICATION, UserDataSyncWorkbenchService.CACHED_SESSION_STORAGE_KEY, this._register(new DisposableStore()))(() => this.onDidChangeStorage()));\n\t\tthis._register(Event.filter(this.userDataSyncAccountService.onTokenFailed, bailout => bailout)(() => this.onDidAuthFailure()));\n\t\tthis.hasConflicts.set(this.userDataSyncService.conflicts.length > 0);\n\t\tthis._register(this.userDataSyncService.onDidChangeConflicts(conflicts => {\n\t\t\tthis.hasConflicts.set(conflicts.length > 0);\n\t\t\tif (!conflicts.length) {\n\t\t\t\tthis.enableConflictsViewContext.reset();\n\t\t\t}\n\t\t\t// Close merge editors with no conflicts\n\t\t\tthis.editorService.editors.filter(input => {\n\t\t\t\tconst remoteResource = isDiffEditorInput(input) ? input.original.resource : isMergeEditorInput(input) ? input.input1.uri : undefined;\n\t\t\t\tif (remoteResource?.scheme !== USER_DATA_SYNC_SCHEME) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn !this.userDataSyncService.conflicts.some(({ conflicts }) => conflicts.some(({ previewResource }) => this.uriIdentityService.extUri.isEqual(previewResource, input.resource)));\n\t\t\t}).forEach(input => input.dispose());\n\t\t}));\n\t}\n\n\tprivate async update(reason?: string): Promise<void> {\n\n\t\tif (reason) {\n\t\t\tthis.logService.info(`Settings Sync: Updating due to ${reason}`);\n\t\t}\n\n\t\tthis.updateAuthenticationProviders();\n\t\tawait this.updateCurrentAccount();\n\n\t\tif (this._current) {\n\t\t\tthis.currentAuthenticationProviderId = this._current.authenticationProviderId;\n\t\t}\n\n\t\tawait this.updateToken(this._current);\n\t\tthis.updateAccountStatus(this._current ? AccountStatus.Available : AccountStatus.Unavailable);\n\t}\n\n\tprivate async updateCurrentAccount(): Promise<void> {\n\t\tconst currentSessionId = this.currentSessionId;\n\t\tconst currentAuthenticationProviderId = this.currentAuthenticationProviderId;\n\t\tif (currentSessionId) {\n\t\t\tconst authenticationProviders = currentAuthenticationProviderId ? this.authenticationProviders.filter(({ id }) => id === currentAuthenticationProviderId) : this.authenticationProviders;\n\t\t\tfor (const { id, scopes } of authenticationProviders) {\n\t\t\t\tconst sessions = (await this.authenticationService.getSessions(id, scopes)) || [];\n\t\t\t\tfor (const session of sessions) {\n\t\t\t\t\tif (session.id === currentSessionId) {\n\t\t\t\t\t\tthis._current = new UserDataSyncAccount(id, session);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._current = undefined;\n\t}\n\n\tprivate async updateToken(current: UserDataSyncAccount | undefined): Promise<void> {\n\t\tlet value: { token: string; authenticationProviderId: string } | undefined = undefined;\n\t\tif (current) {\n\t\t\ttry {\n\t\t\t\tthis.logService.trace('Settings Sync: Updating the token for the account', current.accountName);\n\t\t\t\tconst token = current.token;\n\t\t\t\tthis.logService.trace('Settings Sync: Token updated for the account', current.accountName);\n\t\t\t\tvalue = { token, authenticationProviderId: current.authenticationProviderId };\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t\tawait this.userDataSyncAccountService.updateAccount(value);\n\t}\n\n\tprivate updateAccountStatus(accountStatus: AccountStatus): void {\n\t\tif (this._accountStatus !== accountStatus) {\n\t\t\tconst previous = this._accountStatus;\n\t\t\tthis.logService.trace(`Settings Sync: Account status changed from ${previous} to ${accountStatus}`);\n\n\t\t\tthis._accountStatus = accountStatus;\n\t\t\tthis.accountStatusContext.set(accountStatus);\n\t\t\tthis._onDidChangeAccountStatus.fire(accountStatus);\n\t\t}\n\t}\n\n\tasync turnOn(): Promise<void> {\n\t\tif (!this.authenticationProviders.length) {\n\t\t\tthrow new Error(localize('no authentication providers', \"Settings sync cannot be turned on because there are no authentication providers available.\"));\n\t\t}\n\t\tif (this.userDataSyncEnablementService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.userDataSyncService.status !== SyncStatus.Idle) {\n\t\t\tthrow new Error('Cannot turn on sync while syncing');\n\t\t}\n\n\t\tconst picked = await this.pick();\n\t\tif (!picked) {\n\t\t\tthrow new CancellationError();\n\t\t}\n\n\t\t// User did not pick an account or login failed\n\t\tif (this.accountStatus !== AccountStatus.Available) {\n\t\t\tthrow new Error(localize('no account', \"No account available\"));\n\t\t}\n\n\t\tconst turnOnSyncCancellationToken = this.turnOnSyncCancellationToken = new CancellationTokenSource();\n\t\tconst disposable = isWeb ? Disposable.None : this.lifecycleService.onBeforeShutdown(e => e.veto((async () => {\n\t\t\tconst { confirmed } = await this.dialogService.confirm({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: localize('sync in progress', \"Settings Sync is being turned on. Would you like to cancel it?\"),\n\t\t\t\ttitle: localize('settings sync', \"Settings Sync\"),\n\t\t\t\tprimaryButton: localize({ key: 'yes', comment: ['&& denotes a mnemonic'] }, \"&&Yes\"),\n\t\t\t\tcancelButton: localize('no', \"No\")\n\t\t\t});\n\t\t\tif (confirmed) {\n\t\t\t\tturnOnSyncCancellationToken.cancel();\n\t\t\t}\n\t\t\treturn !confirmed;\n\t\t})(), 'veto.settingsSync'));\n\t\ttry {\n\t\t\tawait this.doTurnOnSync(turnOnSyncCancellationToken.token);\n\t\t} finally {\n\t\t\tdisposable.dispose();\n\t\t\tthis.turnOnSyncCancellationToken = undefined;\n\t\t}\n\t\tawait this.userDataAutoSyncService.turnOn();\n\n\t\tif (this.userDataSyncStoreManagementService.userDataSyncStore?.canSwitch) {\n\t\t\tawait this.synchroniseUserDataSyncStoreType();\n\t\t}\n\n\t\tthis.currentAuthenticationProviderId = this.current?.authenticationProviderId;\n\t\tif (this.environmentService.options?.settingsSyncOptions?.enablementHandler && this.currentAuthenticationProviderId) {\n\t\t\tthis.environmentService.options.settingsSyncOptions.enablementHandler(true, this.currentAuthenticationProviderId);\n\t\t}\n\n\t\tthis.notificationService.info(localize('sync turned on', \"{0} is turned on\", SYNC_TITLE));\n\t}\n\n\tasync turnoff(everywhere: boolean): Promise<void> {\n\t\tif (this.userDataSyncEnablementService.isEnabled()) {\n\t\t\tawait this.userDataAutoSyncService.turnOff(everywhere);\n\t\t\tif (this.environmentService.options?.settingsSyncOptions?.enablementHandler && this.currentAuthenticationProviderId) {\n\t\t\t\tthis.environmentService.options.settingsSyncOptions.enablementHandler(false, this.currentAuthenticationProviderId);\n\t\t\t}\n\t\t}\n\t\tif (this.turnOnSyncCancellationToken) {\n\t\t\tthis.turnOnSyncCancellationToken.cancel();\n\t\t}\n\t}\n\n\tasync synchroniseUserDataSyncStoreType(): Promise<void> {\n\t\tif (!this.userDataSyncAccountService.account) {\n\t\t\tthrow new Error('Cannot update because you are signed out from settings sync. Please sign in and try again.');\n\t\t}\n\t\tif (!isWeb || !this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\t// Not supported\n\t\t\treturn;\n\t\t}\n\n\t\tconst userDataSyncStoreUrl = this.userDataSyncStoreManagementService.userDataSyncStore.type === 'insiders' ? this.userDataSyncStoreManagementService.userDataSyncStore.stableUrl : this.userDataSyncStoreManagementService.userDataSyncStore.insidersUrl;\n\t\tconst userDataSyncStoreClient = this.instantiationService.createInstance(UserDataSyncStoreClient, userDataSyncStoreUrl);\n\t\tuserDataSyncStoreClient.setAuthToken(this.userDataSyncAccountService.account.token, this.userDataSyncAccountService.account.authenticationProviderId);\n\t\tawait this.instantiationService.createInstance(UserDataSyncStoreTypeSynchronizer, userDataSyncStoreClient).sync(this.userDataSyncStoreManagementService.userDataSyncStore.type);\n\t}\n\n\tsyncNow(): Promise<void> {\n\t\treturn this.userDataAutoSyncService.triggerSync(['Sync Now'], false, true);\n\t}\n\n\tprivate async doTurnOnSync(token: CancellationToken): Promise<void> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst manualSyncTask = await this.userDataSyncService.createManualSyncTask();\n\t\ttry {\n\t\t\tawait this.progressService.withProgress({\n\t\t\t\tlocation: ProgressLocation.Window,\n\t\t\t\ttitle: SYNC_TITLE,\n\t\t\t\tcommand: SHOW_SYNC_LOG_COMMAND_ID,\n\t\t\t\tdelay: 500,\n\t\t\t}, async progress => {\n\t\t\t\tprogress.report({ message: localize('turning on', \"Turning on...\") });\n\t\t\t\tdisposables.add(this.userDataSyncService.onDidChangeStatus(status => {\n\t\t\t\t\tif (status === SyncStatus.HasConflicts) {\n\t\t\t\t\t\tprogress.report({ message: localize('resolving conflicts', \"Resolving conflicts...\") });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprogress.report({ message: localize('syncing...', \"Turning on...\") });\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\tawait manualSyncTask.merge();\n\t\t\t\tif (this.userDataSyncService.status === SyncStatus.HasConflicts) {\n\t\t\t\t\tawait this.handleConflictsWhileTurningOn(token);\n\t\t\t\t}\n\t\t\t\tawait manualSyncTask.apply();\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tawait manualSyncTask.stop();\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tprivate async handleConflictsWhileTurningOn(token: CancellationToken): Promise<void> {\n\t\tawait this.dialogService.prompt({\n\t\t\ttype: Severity.Warning,\n\t\t\tmessage: localize('conflicts detected', \"Conflicts Detected\"),\n\t\t\tdetail: localize('resolve', \"Please resolve conflicts to turn on...\"),\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: localize({ key: 'show conflicts', comment: ['&& denotes a mnemonic'] }, \"&&Show Conflicts\"),\n\t\t\t\t\trun: async () => {\n\t\t\t\t\t\tconst waitUntilConflictsAreResolvedPromise = raceCancellationError(Event.toPromise(Event.filter(this.userDataSyncService.onDidChangeConflicts, conficts => conficts.length === 0)), token);\n\t\t\t\t\t\tawait this.showConflicts(this.userDataSyncService.conflicts[0]?.conflicts[0]);\n\t\t\t\t\t\tawait waitUntilConflictsAreResolvedPromise;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize({ key: 'replace local', comment: ['&& denotes a mnemonic'] }, \"Replace &&Local\"),\n\t\t\t\t\trun: async () => this.replace(true)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize({ key: 'replace remote', comment: ['&& denotes a mnemonic'] }, \"Replace &&Remote\"),\n\t\t\t\t\trun: () => this.replace(false)\n\t\t\t\t},\n\t\t\t],\n\t\t\tcancelButton: {\n\t\t\t\trun: () => {\n\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async replace(local: boolean): Promise<void> {\n\t\tfor (const conflict of this.userDataSyncService.conflicts) {\n\t\t\tfor (const preview of conflict.conflicts) {\n\t\t\t\tawait this.accept({ syncResource: conflict.syncResource, profile: conflict.profile }, local ? preview.remoteResource : preview.localResource, undefined, { force: true });\n\t\t\t}\n\t\t}\n\t}\n\n\tasync accept(resource: IUserDataSyncResource, conflictResource: URI, content: string | null | undefined, apply: boolean | { force: boolean }): Promise<void> {\n\t\treturn this.userDataSyncService.accept(resource, conflictResource, content, apply);\n\t}\n\n\tasync showConflicts(conflictToOpen?: IResourcePreview): Promise<void> {\n\t\tif (!this.userDataSyncService.conflicts.length) {\n\t\t\treturn;\n\t\t}\n\t\tthis.enableConflictsViewContext.set(true);\n\t\tconst view = await this.viewsService.openView<IUserDataSyncConflictsView>(SYNC_CONFLICTS_VIEW_ID);\n\t\tif (view && conflictToOpen) {\n\t\t\tawait view.open(conflictToOpen);\n\t\t}\n\t}\n\n\tasync resetSyncedData(): Promise<void> {\n\t\tconst { confirmed } = await this.dialogService.confirm({\n\t\t\ttype: 'info',\n\t\t\tmessage: localize('reset', \"This will clear your data in the cloud and stop sync on all your devices.\"),\n\t\t\ttitle: localize('reset title', \"Clear\"),\n\t\t\tprimaryButton: localize({ key: 'resetButton', comment: ['&& denotes a mnemonic'] }, \"&&Reset\"),\n\t\t});\n\t\tif (confirmed) {\n\t\t\tawait this.userDataSyncService.resetRemote();\n\t\t}\n\t}\n\n\tasync getAllLogResources(): Promise<URI[]> {\n\t\tconst logsFolders: URI[] = [];\n\t\tconst stat = await this.fileService.resolve(this.uriIdentityService.extUri.dirname(this.environmentService.logsHome));\n\t\tif (stat.children) {\n\t\t\tlogsFolders.push(...stat.children\n\t\t\t\t.filter(stat => stat.isDirectory && /^\\d{8}T\\d{6}$/.test(stat.name))\n\t\t\t\t.sort()\n\t\t\t\t.reverse()\n\t\t\t\t.map(d => d.resource));\n\t\t}\n\t\tconst result: URI[] = [];\n\t\tfor (const logFolder of logsFolders) {\n\t\t\tconst folderStat = await this.fileService.resolve(logFolder);\n\t\t\tconst childStat = folderStat.children?.find(stat => this.uriIdentityService.extUri.basename(stat.resource).startsWith(`${USER_DATA_SYNC_LOG_ID}.`));\n\t\t\tif (childStat) {\n\t\t\t\tresult.push(childStat.resource);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync showSyncActivity(): Promise<void> {\n\t\tthis.activityViewsEnablementContext.set(true);\n\t\tawait this.waitForActiveSyncViews();\n\t\tawait this.viewsService.openViewContainer(SYNC_VIEW_CONTAINER_ID);\n\t}\n\n\tasync downloadSyncActivity(location: URI): Promise<void> {\n\t\tawait Promise.all([\n\t\t\tthis.userDataSyncService.saveRemoteActivityData(this.uriIdentityService.extUri.joinPath(location, 'remoteActivity.json')),\n\t\t\t(async () => {\n\t\t\t\tconst logResources = await this.getAllLogResources();\n\t\t\t\tawait Promise.all(logResources.map(async logResource => this.fileService.copy(logResource, this.uriIdentityService.extUri.joinPath(location, 'logs', `${this.uriIdentityService.extUri.basename(this.uriIdentityService.extUri.dirname(logResource))}.log`))));\n\t\t\t})(),\n\t\t\tthis.fileService.copy(this.environmentService.userDataSyncHome, this.uriIdentityService.extUri.joinPath(location, 'localActivity')),\n\t\t]);\n\t}\n\n\tprivate async waitForActiveSyncViews(): Promise<void> {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(SYNC_VIEW_CONTAINER_ID);\n\t\tif (viewContainer) {\n\t\t\tconst model = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\tif (!model.activeViewDescriptors.length) {\n\t\t\t\tawait Event.toPromise(Event.filter(model.onDidChangeActiveViewDescriptors, e => model.activeViewDescriptors.length > 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tasync signIn(): Promise<void> {\n\t\tconst currentAuthenticationProviderId = this.currentAuthenticationProviderId;\n\t\tconst authenticationProvider = currentAuthenticationProviderId ? this.authenticationProviders.find(p => p.id === currentAuthenticationProviderId) : undefined;\n\t\tif (authenticationProvider) {\n\t\t\tawait this.doSignIn(authenticationProvider);\n\t\t} else {\n\t\t\tawait this.pick();\n\t\t}\n\t}\n\n\tprivate async pick(): Promise<boolean> {\n\t\tconst result = await this.doPick();\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\t\tawait this.doSignIn(result);\n\t\treturn true;\n\t}\n\n\tprivate async doPick(): Promise<UserDataSyncAccount | IAuthenticationProvider | undefined> {\n\t\tif (this.authenticationProviders.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst authenticationProviders = [...this.authenticationProviders].sort(({ id }) => id === this.currentAuthenticationProviderId ? -1 : 1);\n\t\tconst allAccounts = new Map<string, UserDataSyncAccount[]>();\n\n\t\tif (authenticationProviders.length === 1) {\n\t\t\tconst accounts = await this.getAccounts(authenticationProviders[0].id, authenticationProviders[0].scopes);\n\t\t\tif (accounts.length) {\n\t\t\t\tallAccounts.set(authenticationProviders[0].id, accounts);\n\t\t\t} else {\n\t\t\t\t// Single auth provider and no accounts\n\t\t\t\treturn authenticationProviders[0];\n\t\t\t}\n\t\t}\n\n\t\tlet result: UserDataSyncAccount | IAuthenticationProvider | undefined;\n\t\tconst disposables: DisposableStore = new DisposableStore();\n\t\tconst quickPick = disposables.add(this.quickInputService.createQuickPick<AccountQuickPickItem>());\n\n\t\tconst promise = new Promise<UserDataSyncAccount | IAuthenticationProvider | undefined>(c => {\n\t\t\tdisposables.add(quickPick.onDidHide(() => {\n\t\t\t\tdisposables.dispose();\n\t\t\t\tc(result);\n\t\t\t}));\n\t\t});\n\n\t\tquickPick.title = SYNC_TITLE;\n\t\tquickPick.ok = false;\n\t\tquickPick.ignoreFocusOut = true;\n\t\tquickPick.placeholder = localize('choose account placeholder', \"Select an account to sign in\");\n\t\tquickPick.show();\n\n\t\tif (authenticationProviders.length > 1) {\n\t\t\tquickPick.busy = true;\n\t\t\tfor (const { id, scopes } of authenticationProviders) {\n\t\t\t\tconst accounts = await this.getAccounts(id, scopes);\n\t\t\t\tif (accounts.length) {\n\t\t\t\t\tallAccounts.set(id, accounts);\n\t\t\t\t}\n\t\t\t}\n\t\t\tquickPick.busy = false;\n\t\t}\n\n\t\tquickPick.items = this.createQuickpickItems(authenticationProviders, allAccounts);\n\t\tdisposables.add(quickPick.onDidAccept(() => {\n\t\t\tresult = quickPick.selectedItems[0]?.account ? quickPick.selectedItems[0]?.account : quickPick.selectedItems[0]?.authenticationProvider;\n\t\t\tquickPick.hide();\n\t\t}));\n\n\t\treturn promise;\n\t}\n\n\tprivate async getAccounts(authenticationProviderId: string, scopes: string[]): Promise<UserDataSyncAccount[]> {\n\t\tconst accounts: Map<string, UserDataSyncAccount> = new Map<string, UserDataSyncAccount>();\n\t\tlet currentAccount: UserDataSyncAccount | null = null;\n\n\t\tconst sessions = await this.authenticationService.getSessions(authenticationProviderId, scopes) || [];\n\t\tfor (const session of sessions) {\n\t\t\tconst account: UserDataSyncAccount = new UserDataSyncAccount(authenticationProviderId, session);\n\t\t\taccounts.set(account.accountId, account);\n\t\t\tif (account.sessionId === this.currentSessionId) {\n\t\t\t\tcurrentAccount = account;\n\t\t\t}\n\t\t}\n\n\t\tif (currentAccount) {\n\t\t\t// Always use current account if available\n\t\t\taccounts.set(currentAccount.accountId, currentAccount);\n\t\t}\n\n\t\treturn currentAccount ? [...accounts.values()] : [...accounts.values()].sort(({ sessionId }) => sessionId === this.currentSessionId ? -1 : 1);\n\t}\n\n\tprivate createQuickpickItems(authenticationProviders: IAuthenticationProvider[], allAccounts: Map<string, UserDataSyncAccount[]>): (AccountQuickPickItem | IQuickPickSeparator)[] {\n\t\tconst quickPickItems: (AccountQuickPickItem | IQuickPickSeparator)[] = [];\n\n\t\t// Signed in Accounts\n\t\tif (allAccounts.size) {\n\t\t\tquickPickItems.push({ type: 'separator', label: localize('signed in', \"Signed in\") });\n\t\t\tfor (const authenticationProvider of authenticationProviders) {\n\t\t\t\tconst accounts = (allAccounts.get(authenticationProvider.id) || []).sort(({ sessionId }) => sessionId === this.currentSessionId ? -1 : 1);\n\t\t\t\tconst providerName = this.authenticationService.getLabel(authenticationProvider.id);\n\t\t\t\tfor (const account of accounts) {\n\t\t\t\t\tquickPickItems.push({\n\t\t\t\t\t\tlabel: `${account.accountName} (${providerName})`,\n\t\t\t\t\t\tdescription: account.sessionId === this.current?.sessionId ? localize('last used', \"Last Used with Sync\") : undefined,\n\t\t\t\t\t\taccount,\n\t\t\t\t\t\tauthenticationProvider,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tquickPickItems.push({ type: 'separator', label: localize('others', \"Others\") });\n\t\t}\n\n\t\t// Account Providers\n\t\tfor (const authenticationProvider of authenticationProviders) {\n\t\t\tif (!allAccounts.has(authenticationProvider.id) || this.authenticationService.supportsMultipleAccounts(authenticationProvider.id)) {\n\t\t\t\tconst providerName = this.authenticationService.getLabel(authenticationProvider.id);\n\t\t\t\tquickPickItems.push({ label: localize('sign in using account', \"Sign in with {0}\", providerName), authenticationProvider });\n\t\t\t}\n\t\t}\n\n\t\treturn quickPickItems;\n\t}\n\n\tprivate async doSignIn(accountOrAuthProvider: UserDataSyncAccount | IAuthenticationProvider): Promise<void> {\n\t\tlet sessionId: string;\n\t\tif (isAuthenticationProvider(accountOrAuthProvider)) {\n\t\t\tif (this.environmentService.options?.settingsSyncOptions?.authenticationProvider?.id === accountOrAuthProvider.id) {\n\t\t\t\tsessionId = await this.environmentService.options?.settingsSyncOptions?.authenticationProvider?.signIn();\n\t\t\t} else {\n\t\t\t\tsessionId = (await this.authenticationService.createSession(accountOrAuthProvider.id, accountOrAuthProvider.scopes)).id;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.environmentService.options?.settingsSyncOptions?.authenticationProvider?.id === accountOrAuthProvider.authenticationProviderId) {\n\t\t\t\tsessionId = await this.environmentService.options?.settingsSyncOptions?.authenticationProvider?.signIn();\n\t\t\t} else {\n\t\t\t\tsessionId = accountOrAuthProvider.sessionId;\n\t\t\t}\n\t\t}\n\t\tthis.currentSessionId = sessionId;\n\t\tawait this.update();\n\t}\n\n\tprivate async onDidAuthFailure(): Promise<void> {\n\t\tthis.telemetryService.publicLog2<{}, { owner: 'sandy081'; comment: 'Report when there are successive auth failures during settings sync' }>('sync/successiveAuthFailures');\n\t\tthis.currentSessionId = undefined;\n\t\tawait this.update('auth failure');\n\t}\n\n\tprivate onDidChangeSessions(e: AuthenticationSessionsChangeEvent): void {\n\t\tif (this.currentSessionId && e.removed.find(session => session.id === this.currentSessionId)) {\n\t\t\tthis.currentSessionId = undefined;\n\t\t}\n\t\tthis.update('change in sessions');\n\t}\n\n\tprivate onDidChangeStorage(): void {\n\t\tif (this.currentSessionId !== this.getStoredCachedSessionId() /* This checks if current window changed the value or not */) {\n\t\t\tthis._cachedCurrentSessionId = null;\n\t\t\tthis.update('change in storage');\n\t\t}\n\t}\n\n\tprivate _cachedCurrentAuthenticationProviderId: string | undefined | null = null;\n\tprivate get currentAuthenticationProviderId(): string | undefined {\n\t\tif (this._cachedCurrentAuthenticationProviderId === null) {\n\t\t\tthis._cachedCurrentAuthenticationProviderId = this.storageService.get(UserDataSyncWorkbenchService.CACHED_AUTHENTICATION_PROVIDER_KEY, StorageScope.APPLICATION);\n\t\t}\n\t\treturn this._cachedCurrentAuthenticationProviderId;\n\t}\n\n\tprivate set currentAuthenticationProviderId(currentAuthenticationProviderId: string | undefined) {\n\t\tif (this._cachedCurrentAuthenticationProviderId !== currentAuthenticationProviderId) {\n\t\t\tthis._cachedCurrentAuthenticationProviderId = currentAuthenticationProviderId;\n\t\t\tif (currentAuthenticationProviderId === undefined) {\n\t\t\t\tthis.storageService.remove(UserDataSyncWorkbenchService.CACHED_AUTHENTICATION_PROVIDER_KEY, StorageScope.APPLICATION);\n\t\t\t} else {\n\t\t\t\tthis.storageService.store(UserDataSyncWorkbenchService.CACHED_AUTHENTICATION_PROVIDER_KEY, currentAuthenticationProviderId, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _cachedCurrentSessionId: string | undefined | null = null;\n\tprivate get currentSessionId(): string | undefined {\n\t\tif (this._cachedCurrentSessionId === null) {\n\t\t\tthis._cachedCurrentSessionId = this.getStoredCachedSessionId();\n\t\t}\n\t\treturn this._cachedCurrentSessionId;\n\t}\n\n\tprivate set currentSessionId(cachedSessionId: string | undefined) {\n\t\tif (this._cachedCurrentSessionId !== cachedSessionId) {\n\t\t\tthis._cachedCurrentSessionId = cachedSessionId;\n\t\t\tif (cachedSessionId === undefined) {\n\t\t\t\tthis.logService.info('Settings Sync: Reset current session');\n\t\t\t\tthis.storageService.remove(UserDataSyncWorkbenchService.CACHED_SESSION_STORAGE_KEY, StorageScope.APPLICATION);\n\t\t\t} else {\n\t\t\t\tthis.logService.info('Settings Sync: Updated current session', cachedSessionId);\n\t\t\t\tthis.storageService.store(UserDataSyncWorkbenchService.CACHED_SESSION_STORAGE_KEY, cachedSessionId, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getStoredCachedSessionId(): string | undefined {\n\t\treturn this.storageService.get(UserDataSyncWorkbenchService.CACHED_SESSION_STORAGE_KEY, StorageScope.APPLICATION);\n\t}\n\n\tprivate get useWorkbenchSessionId(): boolean {\n\t\treturn !this.storageService.getBoolean(UserDataSyncWorkbenchService.DONOT_USE_WORKBENCH_SESSION_STORAGE_KEY, StorageScope.APPLICATION, false);\n\t}\n\n\tprivate set useWorkbenchSessionId(useWorkbenchSession: boolean) {\n\t\tthis.storageService.store(UserDataSyncWorkbenchService.DONOT_USE_WORKBENCH_SESSION_STORAGE_KEY, !useWorkbenchSession, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t}\n\n}\n\nregisterSingleton(IUserDataSyncWorkbenchService, UserDataSyncWorkbenchService, InstantiationType.Eager /* Eager because it initializes settings sync accounts */);\n"]}