{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/userDataSync/browser/userDataSyncEnablementService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG,MAAa,IAA8B,SAAQ,oCAAiC;QAEnF,IAAc,CAAC,KAAoE,OAA4C,IAAI,CAAC,CAAC,CAAkB,CAAC,CAAC;QAEhJ,2BAA2B,CAAC,QAAsB;YAC1D,OAAO,QAAQ,+CAA4B,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAA2B,OAAO,EAAE,mBAAmB,EAAE,0BAA0B,CAAC,CAAC,CAAC,SAAS,CAAC;QACrJ,CAAC;KAED;IARD,oBAQC;IAED,IAAA,gBAAG,EAAe,mBAAI,EAA4B,IAAI,oCAAqD,CAAC","file":"userDataSyncEnablementService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IUserDataSyncEnablementService, SyncResource } from 'vs/platform/userDataSync/common/userDataSync';\nimport { UserDataSyncEnablementService as BaseUserDataSyncEnablementService } from 'vs/platform/userDataSync/common/userDataSyncEnablementService';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\n\nexport class UserDataSyncEnablementService extends BaseUserDataSyncEnablementService implements IUserDataSyncEnablementService {\n\n\tprotected get workbenchEnvironmentService(): IBrowserWorkbenchEnvironmentService { return <IBrowserWorkbenchEnvironmentService>this.environmentService; }\n\n\toverride getResourceSyncStateVersion(resource: SyncResource): string | undefined {\n\t\treturn resource === SyncResource.Extensions ? this.workbenchEnvironmentService.options?.settingsSyncOptions?.extensionsSyncStateVersion : undefined;\n\t}\n\n}\n\nregisterSingleton(IUserDataSyncEnablementService, UserDataSyncEnablementService, InstantiationType.Delayed);\n"]}