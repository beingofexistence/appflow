{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/userDataSync/browser/userDataSyncInit.ts"],"names":[],"mappings":"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","file":"userDataSyncInit.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { AbstractExtensionsInitializer, IExtensionsInitializerPreviewResult } from 'vs/platform/userDataSync/common/extensionsSync';\nimport { GlobalStateInitializer, UserDataSyncStoreTypeSynchronizer } from 'vs/platform/userDataSync/common/globalStateSync';\nimport { KeybindingsInitializer } from 'vs/platform/userDataSync/common/keybindingsSync';\nimport { SettingsInitializer } from 'vs/platform/userDataSync/common/settingsSync';\nimport { SnippetsInitializer } from 'vs/platform/userDataSync/common/snippetsSync';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { UserDataSyncStoreClient } from 'vs/platform/userDataSync/common/userDataSyncStoreService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IRemoteUserData, IUserData, IUserDataSyncResourceInitializer, IUserDataSyncLogService, IUserDataSyncStoreManagementService, SyncResource } from 'vs/platform/userDataSync/common/userDataSync';\nimport { AuthenticationSessionInfo, getCurrentAuthenticationSessionInfo } from 'vs/workbench/services/authentication/browser/authenticationService';\nimport { getSyncAreaLabel } from 'vs/workbench/services/userDataSync/common/userDataSync';\nimport { isWeb } from 'vs/base/common/platform';\nimport { Barrier, Promises } from 'vs/base/common/async';\nimport { IExtensionGalleryService, IExtensionManagementService, IGlobalExtensionEnablementService, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionService, toExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IIgnoredExtensionsManagementService } from 'vs/platform/userDataSync/common/ignoredExtensions';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { isEqual } from 'vs/base/common/resources';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IExtensionStorageService } from 'vs/platform/extensionManagement/common/extensionStorage';\nimport { TasksInitializer } from 'vs/platform/userDataSync/common/tasksSync';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { IUserDataInitializer } from 'vs/workbench/services/userData/browser/userDataInit';\nimport { ISecretStorageService } from 'vs/platform/secrets/common/secrets';\n\nexport class UserDataSyncInitializer implements IUserDataInitializer {\n\n\t_serviceBrand: any;\n\n\tprivate readonly initialized: SyncResource[] = [];\n\tprivate readonly initializationFinished = new Barrier();\n\tprivate globalStateUserData: IUserData | null = null;\n\n\tconstructor(\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@ISecretStorageService private readonly secretStorageService: ISecretStorageService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tthis.createUserDataSyncStoreClient().then(userDataSyncStoreClient => {\n\t\t\tif (!userDataSyncStoreClient) {\n\t\t\t\tthis.initializationFinished.open();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _userDataSyncStoreClientPromise: Promise<UserDataSyncStoreClient | undefined> | undefined;\n\tprivate createUserDataSyncStoreClient(): Promise<UserDataSyncStoreClient | undefined> {\n\t\tif (!this._userDataSyncStoreClientPromise) {\n\t\t\tthis._userDataSyncStoreClientPromise = (async (): Promise<UserDataSyncStoreClient | undefined> => {\n\t\t\t\ttry {\n\t\t\t\t\tif (!isWeb) {\n\t\t\t\t\t\tthis.logService.trace(`Skipping initializing user data in desktop`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.storageService.isNew(StorageScope.APPLICATION)) {\n\t\t\t\t\t\tthis.logService.trace(`Skipping initializing user data as application was opened before`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.storageService.isNew(StorageScope.WORKSPACE)) {\n\t\t\t\t\t\tthis.logService.trace(`Skipping initializing user data as workspace was opened before`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.environmentService.options?.settingsSyncOptions?.authenticationProvider && !this.environmentService.options.settingsSyncOptions.enabled) {\n\t\t\t\t\t\tthis.logService.trace(`Skipping initializing user data as settings sync is disabled`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet authenticationSession;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tauthenticationSession = await getCurrentAuthenticationSessionInfo(this.secretStorageService, this.productService);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\t}\n\t\t\t\t\tif (!authenticationSession) {\n\t\t\t\t\t\tthis.logService.trace(`Skipping initializing user data as authentication session is not set`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tawait this.initializeUserDataSyncStore(authenticationSession);\n\n\t\t\t\t\tconst userDataSyncStore = this.userDataSyncStoreManagementService.userDataSyncStore;\n\t\t\t\t\tif (!userDataSyncStore) {\n\t\t\t\t\t\tthis.logService.trace(`Skipping initializing user data as sync service is not provided`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst userDataSyncStoreClient = new UserDataSyncStoreClient(userDataSyncStore.url, this.productService, this.requestService, this.logService, this.environmentService, this.fileService, this.storageService);\n\t\t\t\t\tuserDataSyncStoreClient.setAuthToken(authenticationSession.accessToken, authenticationSession.providerId);\n\n\t\t\t\t\tconst manifest = await userDataSyncStoreClient.manifest(null);\n\t\t\t\t\tif (manifest === null) {\n\t\t\t\t\t\tuserDataSyncStoreClient.dispose();\n\t\t\t\t\t\tthis.logService.trace(`Skipping initializing user data as there is no data`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.logService.info(`Using settings sync service ${userDataSyncStore.url.toString()} for initialization`);\n\t\t\t\t\treturn userDataSyncStoreClient;\n\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\treturn this._userDataSyncStoreClientPromise;\n\t}\n\n\tprivate async initializeUserDataSyncStore(authenticationSession: AuthenticationSessionInfo): Promise<void> {\n\t\tconst userDataSyncStore = this.userDataSyncStoreManagementService.userDataSyncStore;\n\t\tif (!userDataSyncStore?.canSwitch) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\ttry {\n\t\t\tconst userDataSyncStoreClient = disposables.add(new UserDataSyncStoreClient(userDataSyncStore.url, this.productService, this.requestService, this.logService, this.environmentService, this.fileService, this.storageService));\n\t\t\tuserDataSyncStoreClient.setAuthToken(authenticationSession.accessToken, authenticationSession.providerId);\n\n\t\t\t// Cache global state data for global state initialization\n\t\t\tthis.globalStateUserData = await userDataSyncStoreClient.readResource(SyncResource.GlobalState, null);\n\n\t\t\tif (this.globalStateUserData) {\n\t\t\t\tconst userDataSyncStoreType = new UserDataSyncStoreTypeSynchronizer(userDataSyncStoreClient, this.storageService, this.environmentService, this.fileService, this.logService).getSyncStoreType(this.globalStateUserData);\n\t\t\t\tif (userDataSyncStoreType) {\n\t\t\t\t\tawait this.userDataSyncStoreManagementService.switch(userDataSyncStoreType);\n\n\t\t\t\t\t// Unset cached global state data if urls are changed\n\t\t\t\t\tif (!isEqual(userDataSyncStore.url, this.userDataSyncStoreManagementService.userDataSyncStore?.url)) {\n\t\t\t\t\t\tthis.logService.info('Switched settings sync store');\n\t\t\t\t\t\tthis.globalStateUserData = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tasync whenInitializationFinished(): Promise<void> {\n\t\tawait this.initializationFinished.wait();\n\t}\n\n\tasync requiresInitialization(): Promise<boolean> {\n\t\tthis.logService.trace(`UserDataInitializationService#requiresInitialization`);\n\t\tconst userDataSyncStoreClient = await this.createUserDataSyncStoreClient();\n\t\treturn !!userDataSyncStoreClient;\n\t}\n\n\tasync initializeRequiredResources(): Promise<void> {\n\t\tthis.logService.trace(`UserDataInitializationService#initializeRequiredResources`);\n\t\treturn this.initialize([SyncResource.Settings, SyncResource.GlobalState]);\n\t}\n\n\tasync initializeOtherResources(instantiationService: IInstantiationService): Promise<void> {\n\t\ttry {\n\t\t\tthis.logService.trace(`UserDataInitializationService#initializeOtherResources`);\n\t\t\tawait Promise.allSettled([this.initialize([SyncResource.Keybindings, SyncResource.Snippets, SyncResource.Tasks]), this.initializeExtensions(instantiationService)]);\n\t\t} finally {\n\t\t\tthis.initializationFinished.open();\n\t\t}\n\t}\n\n\tprivate async initializeExtensions(instantiationService: IInstantiationService): Promise<void> {\n\t\ttry {\n\t\t\tawait Promise.all([this.initializeInstalledExtensions(instantiationService), this.initializeNewExtensions(instantiationService)]);\n\t\t} finally {\n\t\t\tthis.initialized.push(SyncResource.Extensions);\n\t\t}\n\t}\n\n\tprivate initializeInstalledExtensionsPromise: Promise<void> | undefined;\n\tasync initializeInstalledExtensions(instantiationService: IInstantiationService): Promise<void> {\n\t\tif (!this.initializeInstalledExtensionsPromise) {\n\t\t\tthis.initializeInstalledExtensionsPromise = (async () => {\n\t\t\t\tthis.logService.trace(`UserDataInitializationService#initializeInstalledExtensions`);\n\t\t\t\tconst extensionsPreviewInitializer = await this.getExtensionsPreviewInitializer(instantiationService);\n\t\t\t\tif (extensionsPreviewInitializer) {\n\t\t\t\t\tawait instantiationService.createInstance(InstalledExtensionsInitializer, extensionsPreviewInitializer).initialize();\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\treturn this.initializeInstalledExtensionsPromise;\n\t}\n\n\tprivate initializeNewExtensionsPromise: Promise<void> | undefined;\n\tprivate async initializeNewExtensions(instantiationService: IInstantiationService): Promise<void> {\n\t\tif (!this.initializeNewExtensionsPromise) {\n\t\t\tthis.initializeNewExtensionsPromise = (async () => {\n\t\t\t\tthis.logService.trace(`UserDataInitializationService#initializeNewExtensions`);\n\t\t\t\tconst extensionsPreviewInitializer = await this.getExtensionsPreviewInitializer(instantiationService);\n\t\t\t\tif (extensionsPreviewInitializer) {\n\t\t\t\t\tawait instantiationService.createInstance(NewExtensionsInitializer, extensionsPreviewInitializer).initialize();\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\treturn this.initializeNewExtensionsPromise;\n\t}\n\n\tprivate extensionsPreviewInitializerPromise: Promise<ExtensionsPreviewInitializer | null> | undefined;\n\tprivate getExtensionsPreviewInitializer(instantiationService: IInstantiationService): Promise<ExtensionsPreviewInitializer | null> {\n\t\tif (!this.extensionsPreviewInitializerPromise) {\n\t\t\tthis.extensionsPreviewInitializerPromise = (async () => {\n\t\t\t\tconst userDataSyncStoreClient = await this.createUserDataSyncStoreClient();\n\t\t\t\tif (!userDataSyncStoreClient) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst userData = await userDataSyncStoreClient.readResource(SyncResource.Extensions, null);\n\t\t\t\treturn instantiationService.createInstance(ExtensionsPreviewInitializer, userData);\n\t\t\t})();\n\t\t}\n\t\treturn this.extensionsPreviewInitializerPromise;\n\t}\n\n\tprivate async initialize(syncResources: SyncResource[]): Promise<void> {\n\t\tconst userDataSyncStoreClient = await this.createUserDataSyncStoreClient();\n\t\tif (!userDataSyncStoreClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait Promises.settled(syncResources.map(async syncResource => {\n\t\t\ttry {\n\t\t\t\tif (this.initialized.includes(syncResource)) {\n\t\t\t\t\tthis.logService.info(`${getSyncAreaLabel(syncResource)} initialized already.`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.initialized.push(syncResource);\n\t\t\t\tthis.logService.trace(`Initializing ${getSyncAreaLabel(syncResource)}`);\n\t\t\t\tconst initializer = this.createSyncResourceInitializer(syncResource);\n\t\t\t\tconst userData = await userDataSyncStoreClient.readResource(syncResource, syncResource === SyncResource.GlobalState ? this.globalStateUserData : null);\n\t\t\t\tawait initializer.initialize(userData);\n\t\t\t\tthis.logService.info(`Initialized ${getSyncAreaLabel(syncResource)}`);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.info(`Error while initializing ${getSyncAreaLabel(syncResource)}`);\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate createSyncResourceInitializer(syncResource: SyncResource): IUserDataSyncResourceInitializer {\n\t\tswitch (syncResource) {\n\t\t\tcase SyncResource.Settings: return new SettingsInitializer(this.fileService, this.userDataProfilesService, this.environmentService, this.logService, this.storageService, this.uriIdentityService);\n\t\t\tcase SyncResource.Keybindings: return new KeybindingsInitializer(this.fileService, this.userDataProfilesService, this.environmentService, this.logService, this.storageService, this.uriIdentityService);\n\t\t\tcase SyncResource.Tasks: return new TasksInitializer(this.fileService, this.userDataProfilesService, this.environmentService, this.logService, this.storageService, this.uriIdentityService);\n\t\t\tcase SyncResource.Snippets: return new SnippetsInitializer(this.fileService, this.userDataProfilesService, this.environmentService, this.logService, this.storageService, this.uriIdentityService);\n\t\t\tcase SyncResource.GlobalState: return new GlobalStateInitializer(this.storageService, this.fileService, this.userDataProfilesService, this.environmentService, this.logService, this.uriIdentityService);\n\t\t}\n\t\tthrow new Error(`Cannot create initializer for ${syncResource}`);\n\t}\n\n}\n\nclass ExtensionsPreviewInitializer extends AbstractExtensionsInitializer {\n\n\tprivate previewPromise: Promise<IExtensionsInitializerPreviewResult | null> | undefined;\n\tprivate preview: IExtensionsInitializerPreviewResult | null = null;\n\n\tconstructor(\n\t\tprivate readonly extensionsData: IUserData,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@IIgnoredExtensionsManagementService ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(extensionManagementService, ignoredExtensionsManagementService, fileService, userDataProfilesService, environmentService, logService, storageService, uriIdentityService);\n\t}\n\n\tgetPreview(): Promise<IExtensionsInitializerPreviewResult | null> {\n\t\tif (!this.previewPromise) {\n\t\t\tthis.previewPromise = super.initialize(this.extensionsData).then(() => this.preview);\n\t\t}\n\t\treturn this.previewPromise;\n\t}\n\n\toverride initialize(): Promise<void> {\n\t\tthrow new Error('should not be called directly');\n\t}\n\n\tprotected override async doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst remoteExtensions = await this.parseExtensions(remoteUserData);\n\t\tif (!remoteExtensions) {\n\t\t\tthis.logService.info('Skipping initializing extensions because remote extensions does not exist.');\n\t\t\treturn;\n\t\t}\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\tthis.preview = this.generatePreview(remoteExtensions, installedExtensions);\n\t}\n}\n\nclass InstalledExtensionsInitializer implements IUserDataSyncResourceInitializer {\n\n\tconstructor(\n\t\tprivate readonly extensionsPreviewInitializer: ExtensionsPreviewInitializer,\n\t\t@IGlobalExtensionEnablementService private readonly extensionEnablementService: IGlobalExtensionEnablementService,\n\t\t@IExtensionStorageService private readonly extensionStorageService: IExtensionStorageService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) {\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst preview = await this.extensionsPreviewInitializer.getPreview();\n\t\tif (!preview) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 1. Initialise already installed extensions state\n\t\tfor (const installedExtension of preview.installedExtensions) {\n\t\t\tconst syncExtension = preview.remoteExtensions.find(({ identifier }) => areSameExtensions(identifier, installedExtension.identifier));\n\t\t\tif (syncExtension?.state) {\n\t\t\t\tconst extensionState = this.extensionStorageService.getExtensionState(installedExtension, true) || {};\n\t\t\t\tObject.keys(syncExtension.state).forEach(key => extensionState[key] = syncExtension.state![key]);\n\t\t\t\tthis.extensionStorageService.setExtensionState(installedExtension, extensionState, true);\n\t\t\t}\n\t\t}\n\n\t\t// 2. Initialise extensions enablement\n\t\tif (preview.disabledExtensions.length) {\n\t\t\tfor (const identifier of preview.disabledExtensions) {\n\t\t\t\tthis.logService.trace(`Disabling extension...`, identifier.id);\n\t\t\t\tawait this.extensionEnablementService.disableExtension(identifier);\n\t\t\t\tthis.logService.info(`Disabling extension`, identifier.id);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass NewExtensionsInitializer implements IUserDataSyncResourceInitializer {\n\n\tconstructor(\n\t\tprivate readonly extensionsPreviewInitializer: ExtensionsPreviewInitializer,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IExtensionStorageService private readonly extensionStorageService: IExtensionStorageService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) {\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst preview = await this.extensionsPreviewInitializer.getPreview();\n\t\tif (!preview) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newlyEnabledExtensions: ILocalExtension[] = [];\n\t\tconst targetPlatform = await this.extensionManagementService.getTargetPlatform();\n\t\tconst galleryExtensions = await this.galleryService.getExtensions(preview.newExtensions, { targetPlatform, compatible: true }, CancellationToken.None);\n\t\tfor (const galleryExtension of galleryExtensions) {\n\t\t\ttry {\n\t\t\t\tconst extensionToSync = preview.remoteExtensions.find(({ identifier }) => areSameExtensions(identifier, galleryExtension.identifier));\n\t\t\t\tif (!extensionToSync) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (extensionToSync.state) {\n\t\t\t\t\tthis.extensionStorageService.setExtensionState(galleryExtension, extensionToSync.state, true);\n\t\t\t\t}\n\t\t\t\tthis.logService.trace(`Installing extension...`, galleryExtension.identifier.id);\n\t\t\t\tconst local = await this.extensionManagementService.installFromGallery(galleryExtension, {\n\t\t\t\t\tisMachineScoped: false, /* set isMachineScoped to prevent install and sync dialog in web */\n\t\t\t\t\tdonotIncludePackAndDependencies: true,\n\t\t\t\t\tinstallGivenVersion: !!extensionToSync.version,\n\t\t\t\t\tinstallPreReleaseVersion: extensionToSync.preRelease\n\t\t\t\t});\n\t\t\t\tif (!preview.disabledExtensions.some(identifier => areSameExtensions(identifier, galleryExtension.identifier))) {\n\t\t\t\t\tnewlyEnabledExtensions.push(local);\n\t\t\t\t}\n\t\t\t\tthis.logService.info(`Installed extension.`, galleryExtension.identifier.id);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\n\t\tconst canEnabledExtensions = newlyEnabledExtensions.filter(e => this.extensionService.canAddExtension(toExtensionDescription(e)));\n\t\tif (!(await this.areExtensionsRunning(canEnabledExtensions))) {\n\t\t\tawait new Promise<void>((c, e) => {\n\t\t\t\tconst disposable = this.extensionService.onDidChangeExtensions(async () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (await this.areExtensionsRunning(canEnabledExtensions)) {\n\t\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\t\tc();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\te(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async areExtensionsRunning(extensions: ILocalExtension[]): Promise<boolean> {\n\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\t\tconst runningExtensions = this.extensionService.extensions;\n\t\treturn extensions.every(e => runningExtensions.some(r => areSameExtensions({ id: r.identifier.value }, e.identifier)));\n\t}\n}\n"]}