{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/configuration/browser/configuration.ts"],"names":[],"mappings":"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","file":"configuration.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as errors from 'vs/base/common/errors';\nimport { Disposable, IDisposable, dispose, toDisposable, MutableDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { FileChangeType, FileChangesEvent, IFileService, whenProviderRegistered, FileOperationError, FileOperationResult, FileOperation, FileOperationEvent } from 'vs/platform/files/common/files';\nimport { ConfigurationModel, ConfigurationModelParser, ConfigurationParseOptions, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { WorkspaceConfigurationModelParser, StandaloneConfigurationModelParser } from 'vs/workbench/services/configuration/common/configurationModels';\nimport { TASKS_CONFIGURATION_KEY, FOLDER_SETTINGS_NAME, LAUNCH_CONFIGURATION_KEY, IConfigurationCache, ConfigurationKey, REMOTE_MACHINE_SCOPES, FOLDER_SCOPES, WORKSPACE_SCOPES, APPLY_ALL_PROFILES_SETTING } from 'vs/workbench/services/configuration/common/configuration';\nimport { IStoredWorkspaceFolder } from 'vs/platform/workspaces/common/workspaces';\nimport { WorkbenchState, IWorkspaceFolder, IWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\nimport { ConfigurationScope, Extensions, IConfigurationRegistry, OVERRIDE_PROPERTY_REGEX } from 'vs/platform/configuration/common/configurationRegistry';\nimport { equals } from 'vs/base/common/objects';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { hash } from 'vs/base/common/hash';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { joinPath } from 'vs/base/common/resources';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { isEmptyObject, isObject } from 'vs/base/common/types';\nimport { DefaultConfiguration as BaseDefaultConfiguration } from 'vs/platform/configuration/common/configurations';\nimport { IJSONEditingService } from 'vs/workbench/services/configuration/common/jsonEditing';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\n\nexport class DefaultConfiguration extends BaseDefaultConfiguration {\n\n\tstatic readonly DEFAULT_OVERRIDES_CACHE_EXISTS_KEY = 'DefaultOverridesCacheExists';\n\n\tprivate readonly configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\tprivate cachedConfigurationDefaultsOverrides: IStringDictionary<any> = {};\n\tprivate readonly cacheKey: ConfigurationKey = { type: 'defaults', key: 'configurationDefaultsOverrides' };\n\n\tprivate updateCache: boolean = false;\n\n\tconstructor(\n\t\tprivate readonly configurationCache: IConfigurationCache,\n\t\tenvironmentService: IBrowserWorkbenchEnvironmentService,\n\t) {\n\t\tsuper();\n\t\tif (environmentService.options?.configurationDefaults) {\n\t\t\tthis.configurationRegistry.registerDefaultConfigurations([{ overrides: environmentService.options.configurationDefaults }]);\n\t\t}\n\t}\n\n\tprotected override getConfigurationDefaultOverrides(): IStringDictionary<any> {\n\t\treturn this.cachedConfigurationDefaultsOverrides;\n\t}\n\n\toverride async initialize(): Promise<ConfigurationModel> {\n\t\tawait this.initializeCachedConfigurationDefaultsOverrides();\n\t\treturn super.initialize();\n\t}\n\n\toverride reload(): ConfigurationModel {\n\t\tthis.updateCache = true;\n\t\tthis.cachedConfigurationDefaultsOverrides = {};\n\t\tthis.updateCachedConfigurationDefaultsOverrides();\n\t\treturn super.reload();\n\t}\n\n\thasCachedConfigurationDefaultsOverrides(): boolean {\n\t\treturn !isEmptyObject(this.cachedConfigurationDefaultsOverrides);\n\t}\n\n\tprivate initiaizeCachedConfigurationDefaultsOverridesPromise: Promise<void> | undefined;\n\tprivate initializeCachedConfigurationDefaultsOverrides(): Promise<void> {\n\t\tif (!this.initiaizeCachedConfigurationDefaultsOverridesPromise) {\n\t\t\tthis.initiaizeCachedConfigurationDefaultsOverridesPromise = (async () => {\n\t\t\t\ttry {\n\t\t\t\t\t// Read only when the cache exists\n\t\t\t\t\tif (window.localStorage.getItem(DefaultConfiguration.DEFAULT_OVERRIDES_CACHE_EXISTS_KEY)) {\n\t\t\t\t\t\tconst content = await this.configurationCache.read(this.cacheKey);\n\t\t\t\t\t\tif (content) {\n\t\t\t\t\t\t\tthis.cachedConfigurationDefaultsOverrides = JSON.parse(content);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t\tthis.cachedConfigurationDefaultsOverrides = isObject(this.cachedConfigurationDefaultsOverrides) ? this.cachedConfigurationDefaultsOverrides : {};\n\t\t\t})();\n\t\t}\n\t\treturn this.initiaizeCachedConfigurationDefaultsOverridesPromise;\n\t}\n\n\tprotected override onDidUpdateConfiguration(properties: string[], defaultsOverrides?: boolean): void {\n\t\tsuper.onDidUpdateConfiguration(properties, defaultsOverrides);\n\t\tif (defaultsOverrides) {\n\t\t\tthis.updateCachedConfigurationDefaultsOverrides();\n\t\t}\n\t}\n\n\tprivate async updateCachedConfigurationDefaultsOverrides(): Promise<void> {\n\t\tif (!this.updateCache) {\n\t\t\treturn;\n\t\t}\n\t\tconst cachedConfigurationDefaultsOverrides: IStringDictionary<any> = {};\n\t\tconst configurationDefaultsOverrides = this.configurationRegistry.getConfigurationDefaultsOverrides();\n\t\tfor (const [key, value] of configurationDefaultsOverrides) {\n\t\t\tif (!OVERRIDE_PROPERTY_REGEX.test(key) && value.value !== undefined) {\n\t\t\t\tcachedConfigurationDefaultsOverrides[key] = value.value;\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tif (Object.keys(cachedConfigurationDefaultsOverrides).length) {\n\t\t\t\twindow.localStorage.setItem(DefaultConfiguration.DEFAULT_OVERRIDES_CACHE_EXISTS_KEY, 'yes');\n\t\t\t\tawait this.configurationCache.write(this.cacheKey, JSON.stringify(cachedConfigurationDefaultsOverrides));\n\t\t\t} else {\n\t\t\t\twindow.localStorage.removeItem(DefaultConfiguration.DEFAULT_OVERRIDES_CACHE_EXISTS_KEY);\n\t\t\t\tawait this.configurationCache.remove(this.cacheKey);\n\t\t\t}\n\t\t} catch (error) {/* Ignore error */ }\n\t}\n\n}\n\nexport class ApplicationConfiguration extends UserSettings {\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<ConfigurationModel> = this._register(new Emitter<ConfigurationModel>());\n\treadonly onDidChangeConfiguration: Event<ConfigurationModel> = this._onDidChangeConfiguration.event;\n\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tconstructor(\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\tfileService: IFileService,\n\t\turiIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(userDataProfilesService.defaultProfile.settingsResource, { scopes: [ConfigurationScope.APPLICATION] }, uriIdentityService.extUri, fileService);\n\t\tthis._register(this.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.loadConfiguration().then(configurationModel => this._onDidChangeConfiguration.fire(configurationModel)), 50));\n\t}\n\n\tasync initialize(): Promise<ConfigurationModel> {\n\t\treturn this.loadConfiguration();\n\t}\n\n\toverride async loadConfiguration(): Promise<ConfigurationModel> {\n\t\tconst model = await super.loadConfiguration();\n\t\tconst value = model.getValue<string[]>(APPLY_ALL_PROFILES_SETTING);\n\t\tconst allProfilesSettings = Array.isArray(value) ? value : [];\n\t\treturn this.parseOptions.include || allProfilesSettings.length\n\t\t\t? this.reparse({ ...this.parseOptions, include: allProfilesSettings })\n\t\t\t: model;\n\t}\n}\n\nexport class UserConfiguration extends Disposable {\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<ConfigurationModel> = this._register(new Emitter<ConfigurationModel>());\n\treadonly onDidChangeConfiguration: Event<ConfigurationModel> = this._onDidChangeConfiguration.event;\n\n\tprivate readonly userConfiguration = this._register(new MutableDisposable<UserSettings | FileServiceBasedConfiguration>());\n\tprivate readonly userConfigurationChangeDisposable = this._register(new MutableDisposable<IDisposable>());\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tget hasTasksLoaded(): boolean { return this.userConfiguration.value instanceof FileServiceBasedConfiguration; }\n\n\tconstructor(\n\t\tprivate settingsResource: URI,\n\t\tprivate tasksResource: URI | undefined,\n\t\tprivate configurationParseOptions: ConfigurationParseOptions,\n\t\tprivate readonly fileService: IFileService,\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.userConfiguration.value = new UserSettings(settingsResource, this.configurationParseOptions, uriIdentityService.extUri, this.fileService);\n\t\tthis.userConfigurationChangeDisposable.value = this.userConfiguration.value.onDidChange(() => this.reloadConfigurationScheduler.schedule());\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.userConfiguration.value!.loadConfiguration().then(configurationModel => this._onDidChangeConfiguration.fire(configurationModel)), 50));\n\t}\n\n\tasync reset(settingsResource: URI, tasksResource: URI | undefined, configurationParseOptions: ConfigurationParseOptions): Promise<ConfigurationModel> {\n\t\tthis.settingsResource = settingsResource;\n\t\tthis.tasksResource = tasksResource;\n\t\tthis.configurationParseOptions = configurationParseOptions;\n\t\tconst folder = this.uriIdentityService.extUri.dirname(this.settingsResource);\n\t\tconst standAloneConfigurationResources: [string, URI][] = this.tasksResource ? [[TASKS_CONFIGURATION_KEY, this.tasksResource]] : [];\n\t\tconst fileServiceBasedConfiguration = new FileServiceBasedConfiguration(folder.toString(), this.settingsResource, standAloneConfigurationResources, this.configurationParseOptions, this.fileService, this.uriIdentityService, this.logService);\n\t\tconst configurationModel = await fileServiceBasedConfiguration.loadConfiguration();\n\t\tthis.userConfiguration.value = fileServiceBasedConfiguration;\n\n\t\t// Check for value because userConfiguration might have been disposed.\n\t\tif (this.userConfigurationChangeDisposable.value) {\n\t\t\tthis.userConfigurationChangeDisposable.value = this.userConfiguration.value.onDidChange(() => this.reloadConfigurationScheduler.schedule());\n\t\t}\n\n\t\treturn configurationModel;\n\t}\n\n\tasync initialize(): Promise<ConfigurationModel> {\n\t\treturn this.userConfiguration.value!.loadConfiguration();\n\t}\n\n\tasync reload(): Promise<ConfigurationModel> {\n\t\tif (this.hasTasksLoaded) {\n\t\t\treturn this.userConfiguration.value!.loadConfiguration();\n\t\t}\n\t\treturn this.reset(this.settingsResource, this.tasksResource, this.configurationParseOptions);\n\t}\n\n\treparse(parseOptions?: Partial<ConfigurationParseOptions>): ConfigurationModel {\n\t\tthis.configurationParseOptions = { ...this.configurationParseOptions, ...parseOptions };\n\t\treturn this.userConfiguration.value!.reparse(this.configurationParseOptions);\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this.userConfiguration.value!.getRestrictedSettings();\n\t}\n}\n\nclass FileServiceBasedConfiguration extends Disposable {\n\n\tprivate readonly allResources: URI[];\n\tprivate _folderSettingsModelParser: ConfigurationModelParser;\n\tprivate _folderSettingsParseOptions: ConfigurationParseOptions;\n\tprivate _standAloneConfigurations: ConfigurationModel[];\n\tprivate _cache: ConfigurationModel;\n\n\tprivate readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tname: string,\n\t\tprivate readonly settingsResource: URI,\n\t\tprivate readonly standAloneConfigurationResources: [string, URI][],\n\t\tconfigurationParseOptions: ConfigurationParseOptions,\n\t\tprivate readonly fileService: IFileService,\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.allResources = [this.settingsResource, ...this.standAloneConfigurationResources.map(([, resource]) => resource)];\n\t\tthis._register(combinedDisposable(...this.allResources.map(resource => combinedDisposable(\n\t\t\tthis.fileService.watch(uriIdentityService.extUri.dirname(resource)),\n\t\t\t// Also listen to the resource incase the resource is a symlink - https://github.com/microsoft/vscode/issues/118134\n\t\t\tthis.fileService.watch(resource)\n\t\t))));\n\n\t\tthis._folderSettingsModelParser = new ConfigurationModelParser(name);\n\t\tthis._folderSettingsParseOptions = configurationParseOptions;\n\t\tthis._standAloneConfigurations = [];\n\t\tthis._cache = new ConfigurationModel();\n\n\t\tthis._register(Event.debounce(\n\t\t\tEvent.any(\n\t\t\t\tEvent.filter(this.fileService.onDidFilesChange, e => this.handleFileChangesEvent(e)),\n\t\t\t\tEvent.filter(this.fileService.onDidRunOperation, e => this.handleFileOperationEvent(e))\n\t\t\t), () => undefined, 100)(() => this._onDidChange.fire()));\n\t}\n\n\tasync resolveContents(): Promise<[string | undefined, [string, string | undefined][]]> {\n\n\t\tconst resolveContents = async (resources: URI[]): Promise<(string | undefined)[]> => {\n\t\t\treturn Promise.all(resources.map(async resource => {\n\t\t\t\ttry {\n\t\t\t\t\tconst content = await this.fileService.readFile(resource, { atomic: true });\n\t\t\t\t\treturn content.value.toString();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(`Error while resolving configuration file '${resource.toString()}': ${errors.getErrorMessage(error)}`);\n\t\t\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_NOT_FOUND\n\t\t\t\t\t\t&& (<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_NOT_DIRECTORY) {\n\t\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn '{}';\n\t\t\t}));\n\t\t};\n\n\t\tconst [[settingsContent], standAloneConfigurationContents] = await Promise.all([\n\t\t\tresolveContents([this.settingsResource]),\n\t\t\tresolveContents(this.standAloneConfigurationResources.map(([, resource]) => resource)),\n\t\t]);\n\n\t\treturn [settingsContent, standAloneConfigurationContents.map((content, index) => ([this.standAloneConfigurationResources[index][0], content]))];\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\n\t\tconst [settingsContent, standAloneConfigurationContents] = await this.resolveContents();\n\n\t\t// reset\n\t\tthis._standAloneConfigurations = [];\n\t\tthis._folderSettingsModelParser.parse('', this._folderSettingsParseOptions);\n\n\t\t// parse\n\t\tif (settingsContent !== undefined) {\n\t\t\tthis._folderSettingsModelParser.parse(settingsContent, this._folderSettingsParseOptions);\n\t\t}\n\t\tfor (let index = 0; index < standAloneConfigurationContents.length; index++) {\n\t\t\tconst contents = standAloneConfigurationContents[index][1];\n\t\t\tif (contents !== undefined) {\n\t\t\t\tconst standAloneConfigurationModelParser = new StandaloneConfigurationModelParser(this.standAloneConfigurationResources[index][1].toString(), this.standAloneConfigurationResources[index][0]);\n\t\t\t\tstandAloneConfigurationModelParser.parse(contents);\n\t\t\t\tthis._standAloneConfigurations.push(standAloneConfigurationModelParser.configurationModel);\n\t\t\t}\n\t\t}\n\n\t\t// Consolidate (support *.json files in the workspace settings folder)\n\t\tthis.consolidate();\n\n\t\treturn this._cache;\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this._folderSettingsModelParser.restrictedConfigurations;\n\t}\n\n\treparse(configurationParseOptions: ConfigurationParseOptions): ConfigurationModel {\n\t\tconst oldContents = this._folderSettingsModelParser.configurationModel.contents;\n\t\tthis._folderSettingsParseOptions = configurationParseOptions;\n\t\tthis._folderSettingsModelParser.reparse(this._folderSettingsParseOptions);\n\t\tif (!equals(oldContents, this._folderSettingsModelParser.configurationModel.contents)) {\n\t\t\tthis.consolidate();\n\t\t}\n\t\treturn this._cache;\n\t}\n\n\tprivate consolidate(): void {\n\t\tthis._cache = this._folderSettingsModelParser.configurationModel.merge(...this._standAloneConfigurations);\n\t}\n\n\tprivate handleFileChangesEvent(event: FileChangesEvent): boolean {\n\t\t// One of the resources has changed\n\t\tif (this.allResources.some(resource => event.contains(resource))) {\n\t\t\treturn true;\n\t\t}\n\t\t// One of the resource's parent got deleted\n\t\tif (this.allResources.some(resource => event.contains(this.uriIdentityService.extUri.dirname(resource), FileChangeType.DELETED))) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate handleFileOperationEvent(event: FileOperationEvent): boolean {\n\t\t// One of the resources has changed\n\t\tif ((event.isOperation(FileOperation.CREATE) || event.isOperation(FileOperation.COPY) || event.isOperation(FileOperation.DELETE) || event.isOperation(FileOperation.WRITE))\n\t\t\t&& this.allResources.some(resource => this.uriIdentityService.extUri.isEqual(event.resource, resource))) {\n\t\t\treturn true;\n\t\t}\n\t\t// One of the resource's parent got deleted\n\t\tif (event.isOperation(FileOperation.DELETE) && this.allResources.some(resource => this.uriIdentityService.extUri.isEqual(event.resource, this.uriIdentityService.extUri.dirname(resource)))) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nexport class RemoteUserConfiguration extends Disposable {\n\n\tprivate readonly _cachedConfiguration: CachedRemoteUserConfiguration;\n\tprivate readonly _fileService: IFileService;\n\tprivate _userConfiguration: FileServiceBasedRemoteUserConfiguration | CachedRemoteUserConfiguration;\n\tprivate _userConfigurationInitializationPromise: Promise<ConfigurationModel> | null = null;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<ConfigurationModel> = this._register(new Emitter<ConfigurationModel>());\n\tpublic readonly onDidChangeConfiguration: Event<ConfigurationModel> = this._onDidChangeConfiguration.event;\n\n\tprivate readonly _onDidInitialize = this._register(new Emitter<ConfigurationModel>());\n\tpublic readonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(\n\t\tremoteAuthority: string,\n\t\tconfigurationCache: IConfigurationCache,\n\t\tfileService: IFileService,\n\t\turiIdentityService: IUriIdentityService,\n\t\tremoteAgentService: IRemoteAgentService\n\t) {\n\t\tsuper();\n\t\tthis._fileService = fileService;\n\t\tthis._userConfiguration = this._cachedConfiguration = new CachedRemoteUserConfiguration(remoteAuthority, configurationCache, { scopes: REMOTE_MACHINE_SCOPES });\n\t\tremoteAgentService.getEnvironment().then(async environment => {\n\t\t\tif (environment) {\n\t\t\t\tconst userConfiguration = this._register(new FileServiceBasedRemoteUserConfiguration(environment.settingsPath, { scopes: REMOTE_MACHINE_SCOPES }, this._fileService, uriIdentityService));\n\t\t\t\tthis._register(userConfiguration.onDidChangeConfiguration(configurationModel => this.onDidUserConfigurationChange(configurationModel)));\n\t\t\t\tthis._userConfigurationInitializationPromise = userConfiguration.initialize();\n\t\t\t\tconst configurationModel = await this._userConfigurationInitializationPromise;\n\t\t\t\tthis._userConfiguration.dispose();\n\t\t\t\tthis._userConfiguration = userConfiguration;\n\t\t\t\tthis.onDidUserConfigurationChange(configurationModel);\n\t\t\t\tthis._onDidInitialize.fire(configurationModel);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync initialize(): Promise<ConfigurationModel> {\n\t\tif (this._userConfiguration instanceof FileServiceBasedRemoteUserConfiguration) {\n\t\t\treturn this._userConfiguration.initialize();\n\t\t}\n\n\t\t// Initialize cached configuration\n\t\tlet configurationModel = await this._userConfiguration.initialize();\n\t\tif (this._userConfigurationInitializationPromise) {\n\t\t\t// Use user configuration\n\t\t\tconfigurationModel = await this._userConfigurationInitializationPromise;\n\t\t\tthis._userConfigurationInitializationPromise = null;\n\t\t}\n\n\t\treturn configurationModel;\n\t}\n\n\treload(): Promise<ConfigurationModel> {\n\t\treturn this._userConfiguration.reload();\n\t}\n\n\treparse(): ConfigurationModel {\n\t\treturn this._userConfiguration.reparse({ scopes: REMOTE_MACHINE_SCOPES });\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this._userConfiguration.getRestrictedSettings();\n\t}\n\n\tprivate onDidUserConfigurationChange(configurationModel: ConfigurationModel): void {\n\t\tthis.updateCache();\n\t\tthis._onDidChangeConfiguration.fire(configurationModel);\n\t}\n\n\tprivate async updateCache(): Promise<void> {\n\t\tif (this._userConfiguration instanceof FileServiceBasedRemoteUserConfiguration) {\n\t\t\tlet content: string | undefined;\n\t\t\ttry {\n\t\t\t\tcontent = await this._userConfiguration.resolveContent();\n\t\t\t} catch (error) {\n\t\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait this._cachedConfiguration.updateConfiguration(content);\n\t\t}\n\t}\n\n}\n\nclass FileServiceBasedRemoteUserConfiguration extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprivate parseOptions: ConfigurationParseOptions;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\tprotected readonly _onDidChangeConfiguration: Emitter<ConfigurationModel> = this._register(new Emitter<ConfigurationModel>());\n\treadonly onDidChangeConfiguration: Event<ConfigurationModel> = this._onDidChangeConfiguration.event;\n\n\tprivate fileWatcherDisposable: IDisposable = Disposable.None;\n\tprivate directoryWatcherDisposable: IDisposable = Disposable.None;\n\n\tconstructor(\n\t\tprivate readonly configurationResource: URI,\n\t\tconfigurationParseOptions: ConfigurationParseOptions,\n\t\tprivate readonly fileService: IFileService,\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\n\t\tthis.parser = new ConfigurationModelParser(this.configurationResource.toString());\n\t\tthis.parseOptions = configurationParseOptions;\n\t\tthis._register(fileService.onDidFilesChange(e => this.handleFileChangesEvent(e)));\n\t\tthis._register(fileService.onDidRunOperation(e => this.handleFileOperationEvent(e)));\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reload().then(configurationModel => this._onDidChangeConfiguration.fire(configurationModel)), 50));\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.stopWatchingResource();\n\t\t\tthis.stopWatchingDirectory();\n\t\t}));\n\t}\n\n\tprivate watchResource(): void {\n\t\tthis.fileWatcherDisposable = this.fileService.watch(this.configurationResource);\n\t}\n\n\tprivate stopWatchingResource(): void {\n\t\tthis.fileWatcherDisposable.dispose();\n\t\tthis.fileWatcherDisposable = Disposable.None;\n\t}\n\n\tprivate watchDirectory(): void {\n\t\tconst directory = this.uriIdentityService.extUri.dirname(this.configurationResource);\n\t\tthis.directoryWatcherDisposable = this.fileService.watch(directory);\n\t}\n\n\tprivate stopWatchingDirectory(): void {\n\t\tthis.directoryWatcherDisposable.dispose();\n\t\tthis.directoryWatcherDisposable = Disposable.None;\n\t}\n\n\tasync initialize(): Promise<ConfigurationModel> {\n\t\tconst exists = await this.fileService.exists(this.configurationResource);\n\t\tthis.onResourceExists(exists);\n\t\treturn this.reload();\n\t}\n\n\tasync resolveContent(): Promise<string> {\n\t\tconst content = await this.fileService.readFile(this.configurationResource, { atomic: true });\n\t\treturn content.value.toString();\n\t}\n\n\tasync reload(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.resolveContent();\n\t\t\tthis.parser.parse(content, this.parseOptions);\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treparse(configurationParseOptions: ConfigurationParseOptions): ConfigurationModel {\n\t\tthis.parseOptions = configurationParseOptions;\n\t\tthis.parser.reparse(this.parseOptions);\n\t\treturn this.parser.configurationModel;\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this.parser.restrictedConfigurations;\n\t}\n\n\tprivate handleFileChangesEvent(event: FileChangesEvent): void {\n\n\t\t// Find changes that affect the resource\n\t\tlet affectedByChanges = event.contains(this.configurationResource, FileChangeType.UPDATED);\n\t\tif (event.contains(this.configurationResource, FileChangeType.ADDED)) {\n\t\t\taffectedByChanges = true;\n\t\t\tthis.onResourceExists(true);\n\t\t} else if (event.contains(this.configurationResource, FileChangeType.DELETED)) {\n\t\t\taffectedByChanges = true;\n\t\t\tthis.onResourceExists(false);\n\t\t}\n\n\t\tif (affectedByChanges) {\n\t\t\tthis.reloadConfigurationScheduler.schedule();\n\t\t}\n\t}\n\n\tprivate handleFileOperationEvent(event: FileOperationEvent): void {\n\t\tif ((event.isOperation(FileOperation.CREATE) || event.isOperation(FileOperation.COPY) || event.isOperation(FileOperation.DELETE) || event.isOperation(FileOperation.WRITE))\n\t\t\t&& this.uriIdentityService.extUri.isEqual(event.resource, this.configurationResource)) {\n\t\t\tthis.reloadConfigurationScheduler.schedule();\n\t\t}\n\t}\n\n\tprivate onResourceExists(exists: boolean): void {\n\t\tif (exists) {\n\t\t\tthis.stopWatchingDirectory();\n\t\t\tthis.watchResource();\n\t\t} else {\n\t\t\tthis.stopWatchingResource();\n\t\t\tthis.watchDirectory();\n\t\t}\n\t}\n}\n\nclass CachedRemoteUserConfiguration extends Disposable {\n\n\tprivate readonly _onDidChange: Emitter<ConfigurationModel> = this._register(new Emitter<ConfigurationModel>());\n\treadonly onDidChange: Event<ConfigurationModel> = this._onDidChange.event;\n\n\tprivate readonly key: ConfigurationKey;\n\tprivate readonly parser: ConfigurationModelParser;\n\tprivate parseOptions: ConfigurationParseOptions;\n\tprivate configurationModel: ConfigurationModel;\n\n\tconstructor(\n\t\tremoteAuthority: string,\n\t\tprivate readonly configurationCache: IConfigurationCache,\n\t\tconfigurationParseOptions: ConfigurationParseOptions,\n\t) {\n\t\tsuper();\n\t\tthis.key = { type: 'user', key: remoteAuthority };\n\t\tthis.parser = new ConfigurationModelParser('CachedRemoteUserConfiguration');\n\t\tthis.parseOptions = configurationParseOptions;\n\t\tthis.configurationModel = new ConfigurationModel();\n\t}\n\n\tgetConfigurationModel(): ConfigurationModel {\n\t\treturn this.configurationModel;\n\t}\n\n\tinitialize(): Promise<ConfigurationModel> {\n\t\treturn this.reload();\n\t}\n\n\treparse(configurationParseOptions: ConfigurationParseOptions): ConfigurationModel {\n\t\tthis.parseOptions = configurationParseOptions;\n\t\tthis.parser.reparse(this.parseOptions);\n\t\tthis.configurationModel = this.parser.configurationModel;\n\t\treturn this.configurationModel;\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this.parser.restrictedConfigurations;\n\t}\n\n\tasync reload(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.configurationCache.read(this.key);\n\t\t\tconst parsed: { content: string } = JSON.parse(content);\n\t\t\tif (parsed.content) {\n\t\t\t\tthis.parser.parse(parsed.content, this.parseOptions);\n\t\t\t\tthis.configurationModel = this.parser.configurationModel;\n\t\t\t}\n\t\t} catch (e) { /* Ignore error */ }\n\t\treturn this.configurationModel;\n\t}\n\n\tasync updateConfiguration(content: string | undefined): Promise<void> {\n\t\tif (content) {\n\t\t\treturn this.configurationCache.write(this.key, JSON.stringify({ content }));\n\t\t} else {\n\t\t\treturn this.configurationCache.remove(this.key);\n\t\t}\n\t}\n}\n\nexport class WorkspaceConfiguration extends Disposable {\n\n\tprivate readonly _cachedConfiguration: CachedWorkspaceConfiguration;\n\tprivate _workspaceConfiguration: CachedWorkspaceConfiguration | FileServiceBasedWorkspaceConfiguration;\n\tprivate _workspaceConfigurationDisposables = this._register(new DisposableStore());\n\tprivate _workspaceIdentifier: IWorkspaceIdentifier | null = null;\n\tprivate _isWorkspaceTrusted: boolean = false;\n\n\tprivate readonly _onDidUpdateConfiguration = this._register(new Emitter<boolean>());\n\tpublic readonly onDidUpdateConfiguration = this._onDidUpdateConfiguration.event;\n\n\tprivate _initialized: boolean = false;\n\tget initialized(): boolean { return this._initialized; }\n\tconstructor(\n\t\tprivate readonly configurationCache: IConfigurationCache,\n\t\tprivate readonly fileService: IFileService,\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.fileService = fileService;\n\t\tthis._workspaceConfiguration = this._cachedConfiguration = new CachedWorkspaceConfiguration(configurationCache);\n\t}\n\n\tasync initialize(workspaceIdentifier: IWorkspaceIdentifier, workspaceTrusted: boolean): Promise<void> {\n\t\tthis._workspaceIdentifier = workspaceIdentifier;\n\t\tthis._isWorkspaceTrusted = workspaceTrusted;\n\t\tif (!this._initialized) {\n\t\t\tif (this.configurationCache.needsCaching(this._workspaceIdentifier.configPath)) {\n\t\t\t\tthis._workspaceConfiguration = this._cachedConfiguration;\n\t\t\t\tthis.waitAndInitialize(this._workspaceIdentifier);\n\t\t\t} else {\n\t\t\t\tthis.doInitialize(new FileServiceBasedWorkspaceConfiguration(this.fileService, this.uriIdentityService, this.logService));\n\t\t\t}\n\t\t}\n\t\tawait this.reload();\n\t}\n\n\tasync reload(): Promise<void> {\n\t\tif (this._workspaceIdentifier) {\n\t\t\tawait this._workspaceConfiguration.load(this._workspaceIdentifier, { scopes: WORKSPACE_SCOPES, skipRestricted: this.isUntrusted() });\n\t\t}\n\t}\n\n\tgetFolders(): IStoredWorkspaceFolder[] {\n\t\treturn this._workspaceConfiguration.getFolders();\n\t}\n\n\tsetFolders(folders: IStoredWorkspaceFolder[], jsonEditingService: IJSONEditingService): Promise<void> {\n\t\tif (this._workspaceIdentifier) {\n\t\t\treturn jsonEditingService.write(this._workspaceIdentifier.configPath, [{ path: ['folders'], value: folders }], true)\n\t\t\t\t.then(() => this.reload());\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tisTransient(): boolean {\n\t\treturn this._workspaceConfiguration.isTransient();\n\t}\n\n\tgetConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration.getWorkspaceSettings();\n\t}\n\n\tupdateWorkspaceTrust(trusted: boolean): ConfigurationModel {\n\t\tthis._isWorkspaceTrusted = trusted;\n\t\treturn this.reparseWorkspaceSettings();\n\t}\n\n\treparseWorkspaceSettings(): ConfigurationModel {\n\t\tthis._workspaceConfiguration.reparseWorkspaceSettings({ scopes: WORKSPACE_SCOPES, skipRestricted: this.isUntrusted() });\n\t\treturn this.getConfiguration();\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this._workspaceConfiguration.getRestrictedSettings();\n\t}\n\n\tprivate async waitAndInitialize(workspaceIdentifier: IWorkspaceIdentifier): Promise<void> {\n\t\tawait whenProviderRegistered(workspaceIdentifier.configPath, this.fileService);\n\t\tif (!(this._workspaceConfiguration instanceof FileServiceBasedWorkspaceConfiguration)) {\n\t\t\tconst fileServiceBasedWorkspaceConfiguration = this._register(new FileServiceBasedWorkspaceConfiguration(this.fileService, this.uriIdentityService, this.logService));\n\t\t\tawait fileServiceBasedWorkspaceConfiguration.load(workspaceIdentifier, { scopes: WORKSPACE_SCOPES, skipRestricted: this.isUntrusted() });\n\t\t\tthis.doInitialize(fileServiceBasedWorkspaceConfiguration);\n\t\t\tthis.onDidWorkspaceConfigurationChange(false, true);\n\t\t}\n\t}\n\n\tprivate doInitialize(fileServiceBasedWorkspaceConfiguration: FileServiceBasedWorkspaceConfiguration): void {\n\t\tthis._workspaceConfigurationDisposables.clear();\n\t\tthis._workspaceConfiguration = this._workspaceConfigurationDisposables.add(fileServiceBasedWorkspaceConfiguration);\n\t\tthis._workspaceConfigurationDisposables.add(this._workspaceConfiguration.onDidChange(e => this.onDidWorkspaceConfigurationChange(true, false)));\n\t\tthis._initialized = true;\n\t}\n\n\tprivate isUntrusted(): boolean {\n\t\treturn !this._isWorkspaceTrusted;\n\t}\n\n\tprivate async onDidWorkspaceConfigurationChange(reload: boolean, fromCache: boolean): Promise<void> {\n\t\tif (reload) {\n\t\t\tawait this.reload();\n\t\t}\n\t\tthis.updateCache();\n\t\tthis._onDidUpdateConfiguration.fire(fromCache);\n\t}\n\n\tprivate async updateCache(): Promise<void> {\n\t\tif (this._workspaceIdentifier && this.configurationCache.needsCaching(this._workspaceIdentifier.configPath) && this._workspaceConfiguration instanceof FileServiceBasedWorkspaceConfiguration) {\n\t\t\tconst content = await this._workspaceConfiguration.resolveContent(this._workspaceIdentifier);\n\t\t\tawait this._cachedConfiguration.updateWorkspace(this._workspaceIdentifier, content);\n\t\t}\n\t}\n}\n\nclass FileServiceBasedWorkspaceConfiguration extends Disposable {\n\n\tworkspaceConfigurationModelParser: WorkspaceConfigurationModelParser;\n\tworkspaceSettings: ConfigurationModel;\n\tprivate _workspaceIdentifier: IWorkspaceIdentifier | null = null;\n\tprivate workspaceConfigWatcher: IDisposable;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly fileService: IFileService,\n\t\turiIdentityService: IUriIdentityService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\n\t\tthis.workspaceConfigurationModelParser = new WorkspaceConfigurationModelParser('');\n\t\tthis.workspaceSettings = new ConfigurationModel();\n\n\t\tthis._register(Event.any(\n\t\t\tEvent.filter(this.fileService.onDidFilesChange, e => !!this._workspaceIdentifier && e.contains(this._workspaceIdentifier.configPath)),\n\t\t\tEvent.filter(this.fileService.onDidRunOperation, e => !!this._workspaceIdentifier && (e.isOperation(FileOperation.CREATE) || e.isOperation(FileOperation.COPY) || e.isOperation(FileOperation.DELETE) || e.isOperation(FileOperation.WRITE)) && uriIdentityService.extUri.isEqual(e.resource, this._workspaceIdentifier.configPath))\n\t\t)(() => this.reloadConfigurationScheduler.schedule()));\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this._onDidChange.fire(), 50));\n\t\tthis.workspaceConfigWatcher = this._register(this.watchWorkspaceConfigurationFile());\n\t}\n\n\tget workspaceIdentifier(): IWorkspaceIdentifier | null {\n\t\treturn this._workspaceIdentifier;\n\t}\n\n\tasync resolveContent(workspaceIdentifier: IWorkspaceIdentifier): Promise<string> {\n\t\tconst content = await this.fileService.readFile(workspaceIdentifier.configPath, { atomic: true });\n\t\treturn content.value.toString();\n\t}\n\n\tasync load(workspaceIdentifier: IWorkspaceIdentifier, configurationParseOptions: ConfigurationParseOptions): Promise<void> {\n\t\tif (!this._workspaceIdentifier || this._workspaceIdentifier.id !== workspaceIdentifier.id) {\n\t\t\tthis._workspaceIdentifier = workspaceIdentifier;\n\t\t\tthis.workspaceConfigurationModelParser = new WorkspaceConfigurationModelParser(this._workspaceIdentifier.id);\n\t\t\tdispose(this.workspaceConfigWatcher);\n\t\t\tthis.workspaceConfigWatcher = this._register(this.watchWorkspaceConfigurationFile());\n\t\t}\n\t\tlet contents = '';\n\t\ttry {\n\t\t\tcontents = await this.resolveContent(this._workspaceIdentifier);\n\t\t} catch (error) {\n\t\t\tconst exists = await this.fileService.exists(this._workspaceIdentifier.configPath);\n\t\t\tif (exists) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t\tthis.workspaceConfigurationModelParser.parse(contents, configurationParseOptions);\n\t\tthis.consolidate();\n\t}\n\n\tgetConfigurationModel(): ConfigurationModel {\n\t\treturn this.workspaceConfigurationModelParser.configurationModel;\n\t}\n\n\tgetFolders(): IStoredWorkspaceFolder[] {\n\t\treturn this.workspaceConfigurationModelParser.folders;\n\t}\n\n\tisTransient(): boolean {\n\t\treturn this.workspaceConfigurationModelParser.transient;\n\t}\n\n\tgetWorkspaceSettings(): ConfigurationModel {\n\t\treturn this.workspaceSettings;\n\t}\n\n\treparseWorkspaceSettings(configurationParseOptions: ConfigurationParseOptions): ConfigurationModel {\n\t\tthis.workspaceConfigurationModelParser.reparseWorkspaceSettings(configurationParseOptions);\n\t\tthis.consolidate();\n\t\treturn this.getWorkspaceSettings();\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this.workspaceConfigurationModelParser.getRestrictedWorkspaceSettings();\n\t}\n\n\tprivate consolidate(): void {\n\t\tthis.workspaceSettings = this.workspaceConfigurationModelParser.settingsModel.merge(this.workspaceConfigurationModelParser.launchModel, this.workspaceConfigurationModelParser.tasksModel);\n\t}\n\n\tprivate watchWorkspaceConfigurationFile(): IDisposable {\n\t\treturn this._workspaceIdentifier ? this.fileService.watch(this._workspaceIdentifier.configPath) : Disposable.None;\n\t}\n\n}\n\nclass CachedWorkspaceConfiguration {\n\n\treadonly onDidChange: Event<void> = Event.None;\n\n\tworkspaceConfigurationModelParser: WorkspaceConfigurationModelParser;\n\tworkspaceSettings: ConfigurationModel;\n\n\tconstructor(private readonly configurationCache: IConfigurationCache) {\n\t\tthis.workspaceConfigurationModelParser = new WorkspaceConfigurationModelParser('');\n\t\tthis.workspaceSettings = new ConfigurationModel();\n\t}\n\n\tasync load(workspaceIdentifier: IWorkspaceIdentifier, configurationParseOptions: ConfigurationParseOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst key = this.getKey(workspaceIdentifier);\n\t\t\tconst contents = await this.configurationCache.read(key);\n\t\t\tconst parsed: { content: string } = JSON.parse(contents);\n\t\t\tif (parsed.content) {\n\t\t\t\tthis.workspaceConfigurationModelParser = new WorkspaceConfigurationModelParser(key.key);\n\t\t\t\tthis.workspaceConfigurationModelParser.parse(parsed.content, configurationParseOptions);\n\t\t\t\tthis.consolidate();\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\t}\n\n\tget workspaceIdentifier(): IWorkspaceIdentifier | null {\n\t\treturn null;\n\t}\n\n\tgetConfigurationModel(): ConfigurationModel {\n\t\treturn this.workspaceConfigurationModelParser.configurationModel;\n\t}\n\n\tgetFolders(): IStoredWorkspaceFolder[] {\n\t\treturn this.workspaceConfigurationModelParser.folders;\n\t}\n\n\tisTransient(): boolean {\n\t\treturn this.workspaceConfigurationModelParser.transient;\n\t}\n\n\tgetWorkspaceSettings(): ConfigurationModel {\n\t\treturn this.workspaceSettings;\n\t}\n\n\treparseWorkspaceSettings(configurationParseOptions: ConfigurationParseOptions): ConfigurationModel {\n\t\tthis.workspaceConfigurationModelParser.reparseWorkspaceSettings(configurationParseOptions);\n\t\tthis.consolidate();\n\t\treturn this.getWorkspaceSettings();\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this.workspaceConfigurationModelParser.getRestrictedWorkspaceSettings();\n\t}\n\n\tprivate consolidate(): void {\n\t\tthis.workspaceSettings = this.workspaceConfigurationModelParser.settingsModel.merge(this.workspaceConfigurationModelParser.launchModel, this.workspaceConfigurationModelParser.tasksModel);\n\t}\n\n\tasync updateWorkspace(workspaceIdentifier: IWorkspaceIdentifier, content: string | undefined): Promise<void> {\n\t\ttry {\n\t\t\tconst key = this.getKey(workspaceIdentifier);\n\t\t\tif (content) {\n\t\t\t\tawait this.configurationCache.write(key, JSON.stringify({ content }));\n\t\t\t} else {\n\t\t\t\tawait this.configurationCache.remove(key);\n\t\t\t}\n\t\t} catch (error) {\n\t\t}\n\t}\n\n\tprivate getKey(workspaceIdentifier: IWorkspaceIdentifier): ConfigurationKey {\n\t\treturn {\n\t\t\ttype: 'workspaces',\n\t\t\tkey: workspaceIdentifier.id\n\t\t};\n\t}\n}\n\nclass CachedFolderConfiguration {\n\n\treadonly onDidChange = Event.None;\n\n\tprivate _folderSettingsModelParser: ConfigurationModelParser;\n\tprivate _folderSettingsParseOptions: ConfigurationParseOptions;\n\tprivate _standAloneConfigurations: ConfigurationModel[];\n\tprivate configurationModel: ConfigurationModel;\n\tprivate readonly key: ConfigurationKey;\n\n\tconstructor(\n\t\tfolder: URI,\n\t\tconfigFolderRelativePath: string,\n\t\tconfigurationParseOptions: ConfigurationParseOptions,\n\t\tprivate readonly configurationCache: IConfigurationCache,\n\t) {\n\t\tthis.key = { type: 'folder', key: hash(joinPath(folder, configFolderRelativePath).toString()).toString(16) };\n\t\tthis._folderSettingsModelParser = new ConfigurationModelParser('CachedFolderConfiguration');\n\t\tthis._folderSettingsParseOptions = configurationParseOptions;\n\t\tthis._standAloneConfigurations = [];\n\t\tthis.configurationModel = new ConfigurationModel();\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst contents = await this.configurationCache.read(this.key);\n\t\t\tconst { content: configurationContents }: { content: IStringDictionary<string> } = JSON.parse(contents.toString());\n\t\t\tif (configurationContents) {\n\t\t\t\tfor (const key of Object.keys(configurationContents)) {\n\t\t\t\t\tif (key === FOLDER_SETTINGS_NAME) {\n\t\t\t\t\t\tthis._folderSettingsModelParser.parse(configurationContents[key], this._folderSettingsParseOptions);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst standAloneConfigurationModelParser = new StandaloneConfigurationModelParser(key, key);\n\t\t\t\t\t\tstandAloneConfigurationModelParser.parse(configurationContents[key]);\n\t\t\t\t\t\tthis._standAloneConfigurations.push(standAloneConfigurationModelParser.configurationModel);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.consolidate();\n\t\t} catch (e) {\n\t\t}\n\t\treturn this.configurationModel;\n\t}\n\n\tasync updateConfiguration(settingsContent: string | undefined, standAloneConfigurationContents: [string, string | undefined][]): Promise<void> {\n\t\tconst content: any = {};\n\t\tif (settingsContent) {\n\t\t\tcontent[FOLDER_SETTINGS_NAME] = settingsContent;\n\t\t}\n\t\tstandAloneConfigurationContents.forEach(([key, contents]) => {\n\t\t\tif (contents) {\n\t\t\t\tcontent[key] = contents;\n\t\t\t}\n\t\t});\n\t\tif (Object.keys(content).length) {\n\t\t\tawait this.configurationCache.write(this.key, JSON.stringify({ content }));\n\t\t} else {\n\t\t\tawait this.configurationCache.remove(this.key);\n\t\t}\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this._folderSettingsModelParser.restrictedConfigurations;\n\t}\n\n\treparse(configurationParseOptions: ConfigurationParseOptions): ConfigurationModel {\n\t\tthis._folderSettingsParseOptions = configurationParseOptions;\n\t\tthis._folderSettingsModelParser.reparse(this._folderSettingsParseOptions);\n\t\tthis.consolidate();\n\t\treturn this.configurationModel;\n\t}\n\n\tprivate consolidate(): void {\n\t\tthis.configurationModel = this._folderSettingsModelParser.configurationModel.merge(...this._standAloneConfigurations);\n\t}\n\n\tgetUnsupportedKeys(): string[] {\n\t\treturn [];\n\t}\n}\n\nexport class FolderConfiguration extends Disposable {\n\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate folderConfiguration: CachedFolderConfiguration | FileServiceBasedConfiguration;\n\tprivate readonly scopes: ConfigurationScope[];\n\tprivate readonly configurationFolder: URI;\n\tprivate cachedFolderConfiguration: CachedFolderConfiguration;\n\n\tconstructor(\n\t\tuseCache: boolean,\n\t\treadonly workspaceFolder: IWorkspaceFolder,\n\t\tconfigFolderRelativePath: string,\n\t\tprivate readonly workbenchState: WorkbenchState,\n\t\tprivate workspaceTrusted: boolean,\n\t\tfileService: IFileService,\n\t\turiIdentityService: IUriIdentityService,\n\t\tlogService: ILogService,\n\t\tprivate readonly configurationCache: IConfigurationCache\n\t) {\n\t\tsuper();\n\n\t\tthis.scopes = WorkbenchState.WORKSPACE === this.workbenchState ? FOLDER_SCOPES : WORKSPACE_SCOPES;\n\t\tthis.configurationFolder = uriIdentityService.extUri.joinPath(workspaceFolder.uri, configFolderRelativePath);\n\t\tthis.cachedFolderConfiguration = new CachedFolderConfiguration(workspaceFolder.uri, configFolderRelativePath, { scopes: this.scopes, skipRestricted: this.isUntrusted() }, configurationCache);\n\t\tif (useCache && this.configurationCache.needsCaching(workspaceFolder.uri)) {\n\t\t\tthis.folderConfiguration = this.cachedFolderConfiguration;\n\t\t\twhenProviderRegistered(workspaceFolder.uri, fileService)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.folderConfiguration = this._register(this.createFileServiceBasedConfiguration(fileService, uriIdentityService, logService));\n\t\t\t\t\tthis._register(this.folderConfiguration.onDidChange(e => this.onDidFolderConfigurationChange()));\n\t\t\t\t\tthis.onDidFolderConfigurationChange();\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.folderConfiguration = this._register(this.createFileServiceBasedConfiguration(fileService, uriIdentityService, logService));\n\t\t\tthis._register(this.folderConfiguration.onDidChange(e => this.onDidFolderConfigurationChange()));\n\t\t}\n\t}\n\n\tloadConfiguration(): Promise<ConfigurationModel> {\n\t\treturn this.folderConfiguration.loadConfiguration();\n\t}\n\n\tupdateWorkspaceTrust(trusted: boolean): ConfigurationModel {\n\t\tthis.workspaceTrusted = trusted;\n\t\treturn this.reparse();\n\t}\n\n\treparse(): ConfigurationModel {\n\t\tconst configurationModel = this.folderConfiguration.reparse({ scopes: this.scopes, skipRestricted: this.isUntrusted() });\n\t\tthis.updateCache();\n\t\treturn configurationModel;\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this.folderConfiguration.getRestrictedSettings();\n\t}\n\n\tprivate isUntrusted(): boolean {\n\t\treturn !this.workspaceTrusted;\n\t}\n\n\tprivate onDidFolderConfigurationChange(): void {\n\t\tthis.updateCache();\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate createFileServiceBasedConfiguration(fileService: IFileService, uriIdentityService: IUriIdentityService, logService: ILogService) {\n\t\tconst settingsResource = uriIdentityService.extUri.joinPath(this.configurationFolder, `${FOLDER_SETTINGS_NAME}.json`);\n\t\tconst standAloneConfigurationResources: [string, URI][] = [TASKS_CONFIGURATION_KEY, LAUNCH_CONFIGURATION_KEY].map(name => ([name, uriIdentityService.extUri.joinPath(this.configurationFolder, `${name}.json`)]));\n\t\treturn new FileServiceBasedConfiguration(this.configurationFolder.toString(), settingsResource, standAloneConfigurationResources, { scopes: this.scopes, skipRestricted: this.isUntrusted() }, fileService, uriIdentityService, logService);\n\t}\n\n\tprivate async updateCache(): Promise<void> {\n\t\tif (this.configurationCache.needsCaching(this.configurationFolder) && this.folderConfiguration instanceof FileServiceBasedConfiguration) {\n\t\t\tconst [settingsContent, standAloneConfigurationContents] = await this.folderConfiguration.resolveContents();\n\t\t\tthis.cachedFolderConfiguration.updateConfiguration(settingsContent, standAloneConfigurationContents);\n\t\t}\n\t}\n}\n"]}