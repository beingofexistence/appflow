{"version":3,"sources":["vs/workbench/services/configuration/common/configurationEditing.ts"],"names":[],"mappings":"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","file":"configurationEditing.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport * as json from 'vs/base/common/json';\nimport { setProperty } from 'vs/base/common/jsonEdit';\nimport { Queue } from 'vs/base/common/async';\nimport { Edit, FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IConfigurationUpdateOptions, IConfigurationUpdateOverrides } from 'vs/platform/configuration/common/configuration';\nimport { FOLDER_SETTINGS_PATH, WORKSPACE_STANDALONE_CONFIGURATIONS, TASKS_CONFIGURATION_KEY, LAUNCH_CONFIGURATION_KEY, USER_STANDALONE_CONFIGURATIONS, TASKS_DEFAULT, FOLDER_SCOPES, IWorkbenchConfigurationService } from 'vs/workbench/services/configuration/common/configuration';\nimport { FileOperationError, FileOperationResult, IFileService } from 'vs/platform/files/common/files';\nimport { IResolvedTextEditorModel, ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope, keyFromOverrideIdentifiers, OVERRIDE_PROPERTY_REGEX } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { IOpenSettingsOptions, IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IReference } from 'vs/base/common/lifecycle';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { ErrorNoTelemetry } from 'vs/base/common/errors';\n\nexport const enum ConfigurationEditingErrorCode {\n\n\t/**\n\t * Error when trying to write a configuration key that is not registered.\n\t */\n\tERROR_UNKNOWN_KEY,\n\n\t/**\n\t * Error when trying to write an application setting into workspace settings.\n\t */\n\tERROR_INVALID_WORKSPACE_CONFIGURATION_APPLICATION,\n\n\t/**\n\t * Error when trying to write a machne setting into workspace settings.\n\t */\n\tERROR_INVALID_WORKSPACE_CONFIGURATION_MACHINE,\n\n\t/**\n\t * Error when trying to write an invalid folder configuration key to folder settings.\n\t */\n\tERROR_INVALID_FOLDER_CONFIGURATION,\n\n\t/**\n\t * Error when trying to write to user target but not supported for provided key.\n\t */\n\tERROR_INVALID_USER_TARGET,\n\n\t/**\n\t * Error when trying to write to user target but not supported for provided key.\n\t */\n\tERROR_INVALID_WORKSPACE_TARGET,\n\n\t/**\n\t * Error when trying to write a configuration key to folder target\n\t */\n\tERROR_INVALID_FOLDER_TARGET,\n\n\t/**\n\t * Error when trying to write to language specific setting but not supported for preovided key\n\t */\n\tERROR_INVALID_RESOURCE_LANGUAGE_CONFIGURATION,\n\n\t/**\n\t * Error when trying to write to the workspace configuration without having a workspace opened.\n\t */\n\tERROR_NO_WORKSPACE_OPENED,\n\n\t/**\n\t * Error when trying to write and save to the configuration file while it is dirty in the editor.\n\t */\n\tERROR_CONFIGURATION_FILE_DIRTY,\n\n\t/**\n\t * Error when trying to write and save to the configuration file while it is not the latest in the disk.\n\t */\n\tERROR_CONFIGURATION_FILE_MODIFIED_SINCE,\n\n\t/**\n\t * Error when trying to write to a configuration file that contains JSON errors.\n\t */\n\tERROR_INVALID_CONFIGURATION,\n\n\t/**\n\t * Error when trying to write a policy configuration\n\t */\n\tERROR_POLICY_CONFIGURATION,\n\n\t/**\n\t * Internal Error.\n\t */\n\tERROR_INTERNAL\n}\n\nexport class ConfigurationEditingError extends ErrorNoTelemetry {\n\tconstructor(message: string, public code: ConfigurationEditingErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport interface IConfigurationValue {\n\tkey: string;\n\tvalue: any;\n}\n\nexport interface IConfigurationEditingOptions extends IConfigurationUpdateOptions {\n\t/**\n\t * Scope of configuration to be written into.\n\t */\n\tscopes?: IConfigurationUpdateOverrides;\n}\n\nexport const enum EditableConfigurationTarget {\n\tUSER_LOCAL = 1,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER\n}\n\ninterface IConfigurationEditOperation extends IConfigurationValue {\n\ttarget: EditableConfigurationTarget;\n\tjsonPath: json.JSONPath;\n\tresource?: URI;\n\tworkspaceStandAloneConfigurationKey?: string;\n}\n\nexport class ConfigurationEditing {\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate queue: Queue<void>;\n\n\tconstructor(\n\t\tprivate readonly remoteSettingsResource: URI | null,\n\t\t@IWorkbenchConfigurationService private readonly configurationService: IWorkbenchConfigurationService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tthis.queue = new Queue<void>();\n\t}\n\n\tasync writeConfiguration(target: EditableConfigurationTarget, value: IConfigurationValue, options: IConfigurationEditingOptions = {}): Promise<void> {\n\t\tconst operation = this.getConfigurationEditOperation(target, value, options.scopes || {});\n\t\t// queue up writes to prevent race conditions\n\t\treturn this.queue.queue(async () => {\n\t\t\ttry {\n\t\t\t\tawait this.doWriteConfiguration(operation, options);\n\t\t\t} catch (error) {\n\t\t\t\tif (options.donotNotifyError) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tawait this.onError(error, operation, options.scopes);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doWriteConfiguration(operation: IConfigurationEditOperation, options: IConfigurationEditingOptions): Promise<void> {\n\t\tawait this.validate(operation.target, operation, !options.handleDirtyFile, options.scopes || {});\n\t\tconst resource: URI = operation.resource!;\n\t\tconst reference = await this.resolveModelReference(resource);\n\t\ttry {\n\t\t\tconst formattingOptions = this.getFormattingOptions(reference.object.textEditorModel);\n\t\t\tawait this.updateConfiguration(operation, reference.object.textEditorModel, formattingOptions, options);\n\t\t} finally {\n\t\t\treference.dispose();\n\t\t}\n\t}\n\n\tprivate async updateConfiguration(operation: IConfigurationEditOperation, model: ITextModel, formattingOptions: FormattingOptions, options: IConfigurationEditingOptions): Promise<void> {\n\t\tif (this.hasParseErrors(model.getValue(), operation)) {\n\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_INVALID_CONFIGURATION, operation.target, operation);\n\t\t}\n\n\t\tif (this.textFileService.isDirty(model.uri) && options.handleDirtyFile) {\n\t\t\tswitch (options.handleDirtyFile) {\n\t\t\t\tcase 'save': await this.save(model, operation); break;\n\t\t\t\tcase 'revert': await this.textFileService.revert(model.uri); break;\n\t\t\t}\n\t\t}\n\n\t\tconst edit = this.getEdits(operation, model.getValue(), formattingOptions)[0];\n\t\tif (edit && this.applyEditsToBuffer(edit, model)) {\n\t\t\tawait this.save(model, operation);\n\t\t}\n\t}\n\n\tprivate async save(model: ITextModel, operation: IConfigurationEditOperation): Promise<void> {\n\t\ttry {\n\t\t\tawait this.textFileService.save(model.uri, { ignoreErrorHandler: true });\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult === FileOperationResult.FILE_MODIFIED_SINCE) {\n\t\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_MODIFIED_SINCE, operation.target, operation);\n\t\t\t}\n\t\t\tthrow new ConfigurationEditingError(nls.localize('fsError', \"Error while writing to {0}. {1}\", this.stringifyTarget(operation.target), error.message), ConfigurationEditingErrorCode.ERROR_INTERNAL);\n\t\t}\n\t}\n\n\tprivate applyEditsToBuffer(edit: Edit, model: ITextModel): boolean {\n\t\tconst startPosition = model.getPositionAt(edit.offset);\n\t\tconst endPosition = model.getPositionAt(edit.offset + edit.length);\n\t\tconst range = new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t\tconst currentText = model.getValueInRange(range);\n\t\tif (edit.content !== currentText) {\n\t\t\tconst editOperation = currentText ? EditOperation.replace(range, edit.content) : EditOperation.insert(startPosition, edit.content);\n\t\t\tmodel.pushEditOperations([new Selection(startPosition.lineNumber, startPosition.column, startPosition.lineNumber, startPosition.column)], [editOperation], () => []);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate getEdits({ value, jsonPath }: IConfigurationEditOperation, modelContent: string, formattingOptions: FormattingOptions): Edit[] {\n\t\tif (jsonPath.length) {\n\t\t\treturn setProperty(modelContent, jsonPath, value, formattingOptions);\n\t\t}\n\n\t\t// Without jsonPath, the entire configuration file is being replaced, so we just use JSON.stringify\n\t\tconst content = JSON.stringify(value, null, formattingOptions.insertSpaces && formattingOptions.tabSize ? ' '.repeat(formattingOptions.tabSize) : '\\t');\n\t\treturn [{\n\t\t\tcontent,\n\t\t\tlength: modelContent.length,\n\t\t\toffset: 0\n\t\t}];\n\t}\n\n\tprivate getFormattingOptions(model: ITextModel): FormattingOptions {\n\t\tconst { insertSpaces, tabSize } = model.getOptions();\n\t\tconst eol = model.getEOL();\n\t\treturn { insertSpaces, tabSize, eol };\n\t}\n\n\tprivate async onError(error: ConfigurationEditingError, operation: IConfigurationEditOperation, scopes: IConfigurationUpdateOverrides | undefined): Promise<void> {\n\t\tswitch (error.code) {\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_CONFIGURATION:\n\t\t\t\tthis.onInvalidConfigurationError(error, operation);\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_DIRTY:\n\t\t\t\tthis.onConfigurationFileDirtyError(error, operation, scopes);\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_MODIFIED_SINCE:\n\t\t\t\treturn this.doWriteConfiguration(operation, { scopes, handleDirtyFile: 'revert' });\n\t\t\tdefault:\n\t\t\t\tthis.notificationService.error(error.message);\n\t\t}\n\t}\n\n\tprivate onInvalidConfigurationError(error: ConfigurationEditingError, operation: IConfigurationEditOperation,): void {\n\t\tconst openStandAloneConfigurationActionLabel = operation.workspaceStandAloneConfigurationKey === TASKS_CONFIGURATION_KEY ? nls.localize('openTasksConfiguration', \"Open Tasks Configuration\")\n\t\t\t: operation.workspaceStandAloneConfigurationKey === LAUNCH_CONFIGURATION_KEY ? nls.localize('openLaunchConfiguration', \"Open Launch Configuration\")\n\t\t\t\t: null;\n\t\tif (openStandAloneConfigurationActionLabel) {\n\t\t\tthis.notificationService.prompt(Severity.Error, error.message,\n\t\t\t\t[{\n\t\t\t\t\tlabel: openStandAloneConfigurationActionLabel,\n\t\t\t\t\trun: () => this.openFile(operation.resource!)\n\t\t\t\t}]\n\t\t\t);\n\t\t} else {\n\t\t\tthis.notificationService.prompt(Severity.Error, error.message,\n\t\t\t\t[{\n\t\t\t\t\tlabel: nls.localize('open', \"Open Settings\"),\n\t\t\t\t\trun: () => this.openSettings(operation)\n\t\t\t\t}]\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate onConfigurationFileDirtyError(error: ConfigurationEditingError, operation: IConfigurationEditOperation, scopes: IConfigurationUpdateOverrides | undefined): void {\n\t\tconst openStandAloneConfigurationActionLabel = operation.workspaceStandAloneConfigurationKey === TASKS_CONFIGURATION_KEY ? nls.localize('openTasksConfiguration', \"Open Tasks Configuration\")\n\t\t\t: operation.workspaceStandAloneConfigurationKey === LAUNCH_CONFIGURATION_KEY ? nls.localize('openLaunchConfiguration', \"Open Launch Configuration\")\n\t\t\t\t: null;\n\t\tif (openStandAloneConfigurationActionLabel) {\n\t\t\tthis.notificationService.prompt(Severity.Error, error.message,\n\t\t\t\t[{\n\t\t\t\t\tlabel: nls.localize('saveAndRetry', \"Save and Retry\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tconst key = operation.key ? `${operation.workspaceStandAloneConfigurationKey}.${operation.key}` : operation.workspaceStandAloneConfigurationKey!;\n\t\t\t\t\t\tthis.writeConfiguration(operation.target, { key, value: operation.value }, <IConfigurationEditingOptions>{ handleDirtyFile: 'save', scopes });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: openStandAloneConfigurationActionLabel,\n\t\t\t\t\trun: () => this.openFile(operation.resource!)\n\t\t\t\t}]\n\t\t\t);\n\t\t} else {\n\t\t\tthis.notificationService.prompt(Severity.Error, error.message,\n\t\t\t\t[{\n\t\t\t\t\tlabel: nls.localize('saveAndRetry', \"Save and Retry\"),\n\t\t\t\t\trun: () => this.writeConfiguration(operation.target, { key: operation.key, value: operation.value }, <IConfigurationEditingOptions>{ handleDirtyFile: 'save', scopes })\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize('open', \"Open Settings\"),\n\t\t\t\t\trun: () => this.openSettings(operation)\n\t\t\t\t}]\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate openSettings(operation: IConfigurationEditOperation): void {\n\t\tconst options: IOpenSettingsOptions = { jsonEditor: true };\n\t\tswitch (operation.target) {\n\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\tthis.preferencesService.openUserSettings(options);\n\t\t\t\tbreak;\n\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\tthis.preferencesService.openRemoteSettings(options);\n\t\t\t\tbreak;\n\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\tthis.preferencesService.openWorkspaceSettings(options);\n\t\t\t\tbreak;\n\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\tif (operation.resource) {\n\t\t\t\t\tconst workspaceFolder = this.contextService.getWorkspaceFolder(operation.resource);\n\t\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\t\tthis.preferencesService.openFolderSettings({ folderUri: workspaceFolder.uri, jsonEditor: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate openFile(resource: URI): void {\n\t\tthis.editorService.openEditor({ resource, options: { pinned: true } });\n\t}\n\n\tprivate toConfigurationEditingError(code: ConfigurationEditingErrorCode, target: EditableConfigurationTarget, operation: IConfigurationEditOperation): ConfigurationEditingError {\n\t\tconst message = this.toErrorMessage(code, target, operation);\n\t\treturn new ConfigurationEditingError(message, code);\n\t}\n\n\tprivate toErrorMessage(error: ConfigurationEditingErrorCode, target: EditableConfigurationTarget, operation: IConfigurationEditOperation): string {\n\t\tswitch (error) {\n\n\t\t\t// API constraints\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_POLICY_CONFIGURATION: return nls.localize('errorPolicyConfiguration', \"Unable to write {0} because it is configured in system policy.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_UNKNOWN_KEY: return nls.localize('errorUnknownKey', \"Unable to write to {0} because {1} is not a registered configuration.\", this.stringifyTarget(target), operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_CONFIGURATION_APPLICATION: return nls.localize('errorInvalidWorkspaceConfigurationApplication', \"Unable to write {0} to Workspace Settings. This setting can be written only into User settings.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_CONFIGURATION_MACHINE: return nls.localize('errorInvalidWorkspaceConfigurationMachine', \"Unable to write {0} to Workspace Settings. This setting can be written only into User settings.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_CONFIGURATION: return nls.localize('errorInvalidFolderConfiguration', \"Unable to write to Folder Settings because {0} does not support the folder resource scope.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_USER_TARGET: return nls.localize('errorInvalidUserTarget', \"Unable to write to User Settings because {0} does not support for global scope.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_TARGET: return nls.localize('errorInvalidWorkspaceTarget', \"Unable to write to Workspace Settings because {0} does not support for workspace scope in a multi folder workspace.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_TARGET: return nls.localize('errorInvalidFolderTarget', \"Unable to write to Folder Settings because no resource is provided.\");\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_RESOURCE_LANGUAGE_CONFIGURATION: return nls.localize('errorInvalidResourceLanguageConfiguration', \"Unable to write to Language Settings because {0} is not a resource language setting.\", operation.key);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_NO_WORKSPACE_OPENED: return nls.localize('errorNoWorkspaceOpened', \"Unable to write to {0} because no workspace is opened. Please open a workspace first and try again.\", this.stringifyTarget(target));\n\n\t\t\t// User issues\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_CONFIGURATION: {\n\t\t\t\tif (operation.workspaceStandAloneConfigurationKey === TASKS_CONFIGURATION_KEY) {\n\t\t\t\t\treturn nls.localize('errorInvalidTaskConfiguration', \"Unable to write into the tasks configuration file. Please open it to correct errors/warnings in it and try again.\");\n\t\t\t\t}\n\t\t\t\tif (operation.workspaceStandAloneConfigurationKey === LAUNCH_CONFIGURATION_KEY) {\n\t\t\t\t\treturn nls.localize('errorInvalidLaunchConfiguration', \"Unable to write into the launch configuration file. Please open it to correct errors/warnings in it and try again.\");\n\t\t\t\t}\n\t\t\t\tswitch (target) {\n\t\t\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\t\t\treturn nls.localize('errorInvalidConfiguration', \"Unable to write into user settings. Please open the user settings to correct errors/warnings in it and try again.\");\n\t\t\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\t\t\treturn nls.localize('errorInvalidRemoteConfiguration', \"Unable to write into remote user settings. Please open the remote user settings to correct errors/warnings in it and try again.\");\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\treturn nls.localize('errorInvalidConfigurationWorkspace', \"Unable to write into workspace settings. Please open the workspace settings to correct errors/warnings in the file and try again.\");\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER: {\n\t\t\t\t\t\tlet workspaceFolderName: string = '<<unknown>>';\n\t\t\t\t\t\tif (operation.resource) {\n\t\t\t\t\t\t\tconst folder = this.contextService.getWorkspaceFolder(operation.resource);\n\t\t\t\t\t\t\tif (folder) {\n\t\t\t\t\t\t\t\tworkspaceFolderName = folder.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn nls.localize('errorInvalidConfigurationFolder', \"Unable to write into folder settings. Please open the '{0}' folder settings to correct errors/warnings in it and try again.\", workspaceFolderName);\n\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_DIRTY: {\n\t\t\t\tif (operation.workspaceStandAloneConfigurationKey === TASKS_CONFIGURATION_KEY) {\n\t\t\t\t\treturn nls.localize('errorTasksConfigurationFileDirty', \"Unable to write into tasks configuration file because the file has unsaved changes. Please save it first and then try again.\");\n\t\t\t\t}\n\t\t\t\tif (operation.workspaceStandAloneConfigurationKey === LAUNCH_CONFIGURATION_KEY) {\n\t\t\t\t\treturn nls.localize('errorLaunchConfigurationFileDirty', \"Unable to write into launch configuration file because the file has unsaved changes. Please save it first and then try again.\");\n\t\t\t\t}\n\t\t\t\tswitch (target) {\n\t\t\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\t\t\treturn nls.localize('errorConfigurationFileDirty', \"Unable to write into user settings because the file has unsaved changes. Please save the user settings file first and then try again.\");\n\t\t\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\t\t\treturn nls.localize('errorRemoteConfigurationFileDirty', \"Unable to write into remote user settings because the file has unsaved changes. Please save the remote user settings file first and then try again.\");\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\treturn nls.localize('errorConfigurationFileDirtyWorkspace', \"Unable to write into workspace settings because the file has unsaved changes. Please save the workspace settings file first and then try again.\");\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER: {\n\t\t\t\t\t\tlet workspaceFolderName: string = '<<unknown>>';\n\t\t\t\t\t\tif (operation.resource) {\n\t\t\t\t\t\t\tconst folder = this.contextService.getWorkspaceFolder(operation.resource);\n\t\t\t\t\t\t\tif (folder) {\n\t\t\t\t\t\t\t\tworkspaceFolderName = folder.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn nls.localize('errorConfigurationFileDirtyFolder', \"Unable to write into folder settings because the file has unsaved changes. Please save the '{0}' folder settings file first and then try again.\", workspaceFolderName);\n\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_MODIFIED_SINCE:\n\t\t\t\tif (operation.workspaceStandAloneConfigurationKey === TASKS_CONFIGURATION_KEY) {\n\t\t\t\t\treturn nls.localize('errorTasksConfigurationFileModifiedSince', \"Unable to write into tasks configuration file because the content of the file is newer.\");\n\t\t\t\t}\n\t\t\t\tif (operation.workspaceStandAloneConfigurationKey === LAUNCH_CONFIGURATION_KEY) {\n\t\t\t\t\treturn nls.localize('errorLaunchConfigurationFileModifiedSince', \"Unable to write into launch configuration file because the content of the file is newer.\");\n\t\t\t\t}\n\t\t\t\tswitch (target) {\n\t\t\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\t\t\treturn nls.localize('errorConfigurationFileModifiedSince', \"Unable to write into user settings because the content of the file is newer.\");\n\t\t\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\t\t\treturn nls.localize('errorRemoteConfigurationFileModifiedSince', \"Unable to write into remote user settings because the content of the file is newer.\");\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\treturn nls.localize('errorConfigurationFileModifiedSinceWorkspace', \"Unable to write into workspace settings because the content of the file is newer.\");\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\t\t\treturn nls.localize('errorConfigurationFileModifiedSinceFolder', \"Unable to write into folder settings because the content of the file is newer.\");\n\t\t\t\t}\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INTERNAL: return nls.localize('errorUnknown', \"Unable to write to {0} because of an internal error.\", this.stringifyTarget(target));\n\t\t}\n\t}\n\n\tprivate stringifyTarget(target: EditableConfigurationTarget): string {\n\t\tswitch (target) {\n\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\treturn nls.localize('userTarget', \"User Settings\");\n\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\treturn nls.localize('remoteUserTarget', \"Remote User Settings\");\n\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\treturn nls.localize('workspaceTarget', \"Workspace Settings\");\n\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\treturn nls.localize('folderTarget', \"Folder Settings\");\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate defaultResourceValue(resource: URI): string {\n\t\tconst basename: string = this.uriIdentityService.extUri.basename(resource);\n\t\tconst configurationValue: string = basename.substr(0, basename.length - this.uriIdentityService.extUri.extname(resource).length);\n\t\tswitch (configurationValue) {\n\t\t\tcase TASKS_CONFIGURATION_KEY: return TASKS_DEFAULT;\n\t\t\tdefault: return '{}';\n\t\t}\n\t}\n\n\tprivate async resolveModelReference(resource: URI): Promise<IReference<IResolvedTextEditorModel>> {\n\t\tconst exists = await this.fileService.exists(resource);\n\t\tif (!exists) {\n\t\t\tawait this.textFileService.write(resource, this.defaultResourceValue(resource), { encoding: 'utf8' });\n\t\t}\n\t\treturn this.textModelResolverService.createModelReference(resource);\n\t}\n\n\tprivate hasParseErrors(content: string, operation: IConfigurationEditOperation): boolean {\n\t\t// If we write to a workspace standalone file and replace the entire contents (no key provided)\n\t\t// we can return here because any parse errors can safely be ignored since all contents are replaced\n\t\tif (operation.workspaceStandAloneConfigurationKey && !operation.key) {\n\t\t\treturn false;\n\t\t}\n\t\tconst parseErrors: json.ParseError[] = [];\n\t\tjson.parse(content, parseErrors, { allowTrailingComma: true, allowEmptyContent: true });\n\t\treturn parseErrors.length > 0;\n\t}\n\n\tprivate async validate(target: EditableConfigurationTarget, operation: IConfigurationEditOperation, checkDirty: boolean, overrides: IConfigurationUpdateOverrides): Promise<void> {\n\n\t\tif (this.configurationService.inspect(operation.key).policyValue !== undefined) {\n\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_POLICY_CONFIGURATION, target, operation);\n\t\t}\n\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\t\tconst configurationScope = configurationProperties[operation.key]?.scope;\n\n\t\t/**\n\t\t * Key to update must be a known setting from the registry unless\n\t\t * \t- the key is standalone configuration (eg: tasks, debug)\n\t\t * \t- the key is an override identifier\n\t\t * \t- the operation is to delete the key\n\t\t */\n\t\tif (!operation.workspaceStandAloneConfigurationKey) {\n\t\t\tconst validKeys = this.configurationService.keys().default;\n\t\t\tif (validKeys.indexOf(operation.key) < 0 && !OVERRIDE_PROPERTY_REGEX.test(operation.key) && operation.value !== undefined) {\n\t\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_UNKNOWN_KEY, target, operation);\n\t\t\t}\n\t\t}\n\n\t\tif (operation.workspaceStandAloneConfigurationKey) {\n\t\t\t// Global launches are not supported\n\t\t\tif ((operation.workspaceStandAloneConfigurationKey !== TASKS_CONFIGURATION_KEY) && (target === EditableConfigurationTarget.USER_LOCAL || target === EditableConfigurationTarget.USER_REMOTE)) {\n\t\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_INVALID_USER_TARGET, target, operation);\n\t\t\t}\n\t\t}\n\n\t\t// Target cannot be workspace or folder if no workspace opened\n\t\tif ((target === EditableConfigurationTarget.WORKSPACE || target === EditableConfigurationTarget.WORKSPACE_FOLDER) && this.contextService.getWorkbenchState() === WorkbenchState.EMPTY) {\n\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_NO_WORKSPACE_OPENED, target, operation);\n\t\t}\n\n\t\tif (target === EditableConfigurationTarget.WORKSPACE) {\n\t\t\tif (!operation.workspaceStandAloneConfigurationKey && !OVERRIDE_PROPERTY_REGEX.test(operation.key)) {\n\t\t\t\tif (configurationScope === ConfigurationScope.APPLICATION) {\n\t\t\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_CONFIGURATION_APPLICATION, target, operation);\n\t\t\t\t}\n\t\t\t\tif (configurationScope === ConfigurationScope.MACHINE) {\n\t\t\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_CONFIGURATION_MACHINE, target, operation);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (target === EditableConfigurationTarget.WORKSPACE_FOLDER) {\n\t\t\tif (!operation.resource) {\n\t\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_TARGET, target, operation);\n\t\t\t}\n\n\t\t\tif (!operation.workspaceStandAloneConfigurationKey && !OVERRIDE_PROPERTY_REGEX.test(operation.key)) {\n\t\t\t\tif (configurationScope !== undefined && !FOLDER_SCOPES.includes(configurationScope)) {\n\t\t\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_CONFIGURATION, target, operation);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (overrides.overrideIdentifiers?.length) {\n\t\t\tif (configurationScope !== ConfigurationScope.LANGUAGE_OVERRIDABLE) {\n\t\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_INVALID_RESOURCE_LANGUAGE_CONFIGURATION, target, operation);\n\t\t\t}\n\t\t}\n\n\t\tif (!operation.resource) {\n\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_TARGET, target, operation);\n\t\t}\n\n\t\tif (checkDirty && this.textFileService.isDirty(operation.resource)) {\n\t\t\tthrow this.toConfigurationEditingError(ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_DIRTY, target, operation);\n\t\t}\n\n\t}\n\n\tprivate getConfigurationEditOperation(target: EditableConfigurationTarget, config: IConfigurationValue, overrides: IConfigurationUpdateOverrides): IConfigurationEditOperation {\n\n\t\t// Check for standalone workspace configurations\n\t\tif (config.key) {\n\t\t\tconst standaloneConfigurationMap = target === EditableConfigurationTarget.USER_LOCAL ? USER_STANDALONE_CONFIGURATIONS : WORKSPACE_STANDALONE_CONFIGURATIONS;\n\t\t\tconst standaloneConfigurationKeys = Object.keys(standaloneConfigurationMap);\n\t\t\tfor (const key of standaloneConfigurationKeys) {\n\t\t\t\tconst resource = this.getConfigurationFileResource(target, key, standaloneConfigurationMap[key], overrides.resource, undefined);\n\n\t\t\t\t// Check for prefix\n\t\t\t\tif (config.key === key) {\n\t\t\t\t\tconst jsonPath = this.isWorkspaceConfigurationResource(resource) ? [key] : [];\n\t\t\t\t\treturn { key: jsonPath[jsonPath.length - 1], jsonPath, value: config.value, resource: resource ?? undefined, workspaceStandAloneConfigurationKey: key, target };\n\t\t\t\t}\n\n\t\t\t\t// Check for prefix.<setting>\n\t\t\t\tconst keyPrefix = `${key}.`;\n\t\t\t\tif (config.key.indexOf(keyPrefix) === 0) {\n\t\t\t\t\tconst jsonPath = this.isWorkspaceConfigurationResource(resource) ? [key, config.key.substr(keyPrefix.length)] : [config.key.substr(keyPrefix.length)];\n\t\t\t\t\treturn { key: jsonPath[jsonPath.length - 1], jsonPath, value: config.value, resource: resource ?? undefined, workspaceStandAloneConfigurationKey: key, target };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst key = config.key;\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\t\tconst configurationScope = configurationProperties[key]?.scope;\n\t\tlet jsonPath = overrides.overrideIdentifiers?.length ? [keyFromOverrideIdentifiers(overrides.overrideIdentifiers), key] : [key];\n\t\tif (target === EditableConfigurationTarget.USER_LOCAL || target === EditableConfigurationTarget.USER_REMOTE) {\n\t\t\treturn { key, jsonPath, value: config.value, resource: this.getConfigurationFileResource(target, key, '', null, configurationScope) ?? undefined, target };\n\t\t}\n\n\t\tconst resource = this.getConfigurationFileResource(target, key, FOLDER_SETTINGS_PATH, overrides.resource, configurationScope);\n\t\tif (this.isWorkspaceConfigurationResource(resource)) {\n\t\t\tjsonPath = ['settings', ...jsonPath];\n\t\t}\n\t\treturn { key, jsonPath, value: config.value, resource: resource ?? undefined, target };\n\t}\n\n\tprivate isWorkspaceConfigurationResource(resource: URI | null): boolean {\n\t\tconst workspace = this.contextService.getWorkspace();\n\t\treturn !!(workspace.configuration && resource && workspace.configuration.fsPath === resource.fsPath);\n\t}\n\n\tprivate getConfigurationFileResource(target: EditableConfigurationTarget, key: string, relativePath: string, resource: URI | null | undefined, scope: ConfigurationScope | undefined): URI | null {\n\t\tif (target === EditableConfigurationTarget.USER_LOCAL) {\n\t\t\tif (key === TASKS_CONFIGURATION_KEY) {\n\t\t\t\treturn this.userDataProfileService.currentProfile.tasksResource;\n\t\t\t} else {\n\t\t\t\tif (!this.userDataProfileService.currentProfile.isDefault && this.configurationService.isSettingAppliedForAllProfiles(key)) {\n\t\t\t\t\treturn this.userDataProfilesService.defaultProfile.settingsResource;\n\t\t\t\t}\n\t\t\t\treturn this.userDataProfileService.currentProfile.settingsResource;\n\t\t\t}\n\t\t}\n\t\tif (target === EditableConfigurationTarget.USER_REMOTE) {\n\t\t\treturn this.remoteSettingsResource;\n\t\t}\n\t\tconst workbenchState = this.contextService.getWorkbenchState();\n\t\tif (workbenchState !== WorkbenchState.EMPTY) {\n\n\t\t\tconst workspace = this.contextService.getWorkspace();\n\n\t\t\tif (target === EditableConfigurationTarget.WORKSPACE) {\n\t\t\t\tif (workbenchState === WorkbenchState.WORKSPACE) {\n\t\t\t\t\treturn workspace.configuration ?? null;\n\t\t\t\t}\n\t\t\t\tif (workbenchState === WorkbenchState.FOLDER) {\n\t\t\t\t\treturn workspace.folders[0].toResource(relativePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (target === EditableConfigurationTarget.WORKSPACE_FOLDER) {\n\t\t\t\tif (resource) {\n\t\t\t\t\tconst folder = this.contextService.getWorkspaceFolder(resource);\n\t\t\t\t\tif (folder) {\n\t\t\t\t\t\treturn folder.toResource(relativePath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n"]}