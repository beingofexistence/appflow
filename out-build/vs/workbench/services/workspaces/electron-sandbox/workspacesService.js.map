{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/workspaces/electron-sandbox/workspacesService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAQhG,iDAAiD;IAC1C,IAAM,IAAI,GAAV,MAAM,IAAI;QAIhB,YACsB,kBAAwB,EACzB,iBAAuB;YAE3C,OAAO,kBAAY,CAAC,SAAS,CAAqB,kBAAkB,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,EAAE,OAAO,EAAE,iBAAiB,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzI,CAAC;KACD,CAAA;IAVY,oBAAI;mBAAJ,IAAI;QAKd,WAAA,yBAAI,CAAA;QACJ,WAAA,aAAI,CAAA;OANM,IAAI,CAUhB;IAED,IAAA,gBAAG,EAAe,gBAAG,EAAiB,IAAI,oCAA+C,CAAC","file":"workspacesService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { IMainProcessService } from 'vs/platform/ipc/common/mainProcessService';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { INativeHostService } from 'vs/platform/native/common/native';\n\n// @ts-ignore: interface is implemented via proxy\nexport class NativeWorkspacesService implements IWorkspacesService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IMainProcessService mainProcessService: IMainProcessService,\n\t\t@INativeHostService nativeHostService: INativeHostService\n\t) {\n\t\treturn ProxyChannel.toService<IWorkspacesService>(mainProcessService.getChannel('workspaces'), { context: nativeHostService.windowId });\n\t}\n}\n\nregisterSingleton(IWorkspacesService, NativeWorkspacesService, InstantiationType.Delayed);\n"]}