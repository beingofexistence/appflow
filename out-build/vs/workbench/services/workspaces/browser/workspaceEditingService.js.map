{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/workspaces/browser/workspaceEditingService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAuBzF,IAAM,IAAI,GAAV,MAAM,IAA+B,SAAQ,sCAAI;QAEvD,YACsB,kBAAwB,EACnB,cAAoB,EACd,oBAAyB,EACnC,mBAAwB,EAC7B,cAAmB,EACtB,WAAgB,EACZ,eAAoB,EAClB,iBAAsB,EACZ,kBAAuB,EACjC,iBAAsB,EAC1B,aAAkB,EACpB,WAAgB,EACT,kBAAuB,EACV,+BAAoC,EAC5C,uBAA4B,EAC7B,sBAA2B;YAEpD,KAAK,CAAC,kBAAkB,EAAE,cAAc,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,cAAc,EAAE,WAAW,EAAE,eAAe,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,aAAa,EAAE,WAAW,EAAE,kBAAkB,EAAE,+BAA+B,EAAE,uBAAuB,EAAE,sBAAsB,CAAC,CAAC;QAChU,CAAC;QAED,KAAK,CAAC,cAAc,CAAC,YAAiB;YACrC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC,CAAgB,YAAY,CAAC,CAAC;YACzD,IAAI,MAAM,EAAE;gBAEX,gCAAgC;gBAChC,MAAM,IAAI,CAAC,CAAC,CAAW,UAAU,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;aAClF;QACF,CAAC;KACD,CAAA;IA/BY,oBAAI;mBAAJ,IAAI;QAGd,WAAA,kBAAI,CAAA;QACJ,WAAA,eAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,kBAAG,CAAA;QACH,WAAA,cAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,eAAG,CAAA;QACH,WAAA,gBAAG,CAAA;QACH,WAAA,wBAAG,CAAA;QACH,WAAA,aAAG,CAAA;QACH,YAAA,aAAG,CAAA;QACH,YAAA,UAAG,CAAA;QACH,YAAA,iBAAG,CAAA;QACH,YAAA,oBAAG,CAAA;QACH,YAAA,qBAAG,CAAA;QACH,YAAA,qBAAG,CAAA;OAlBO,IAAI,CA+BhB;IAED,IAAA,gBAAG,EAAe,sBAAG,EAAuB,IAAI,oCAAsD,CAAC","file":"workspaceEditingService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IJSONEditingService } from 'vs/workbench/services/configuration/common/jsonEditing';\nimport { IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { WorkspaceService } from 'vs/workbench/services/configuration/browser/configurationService';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IFileDialogService, IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { AbstractWorkspaceEditingService } from 'vs/workbench/services/workspaces/browser/abstractWorkspaceEditingService';\nimport { IWorkspaceEditingService } from 'vs/workbench/services/workspaces/common/workspaceEditing';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { URI } from 'vs/base/common/uri';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { IWorkbenchConfigurationService } from 'vs/workbench/services/configuration/common/configuration';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\n\nexport class BrowserWorkspaceEditingService extends AbstractWorkspaceEditingService {\n\n\tconstructor(\n\t\t@IJSONEditingService jsonEditingService: IJSONEditingService,\n\t\t@IWorkspaceContextService contextService: WorkspaceService,\n\t\t@IWorkbenchConfigurationService configurationService: IWorkbenchConfigurationService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IFileDialogService fileDialogService: IFileDialogService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IWorkspaceTrustManagementService workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t) {\n\t\tsuper(jsonEditingService, contextService, configurationService, notificationService, commandService, fileService, textFileService, workspacesService, environmentService, fileDialogService, dialogService, hostService, uriIdentityService, workspaceTrustManagementService, userDataProfilesService, userDataProfileService);\n\t}\n\n\tasync enterWorkspace(workspaceUri: URI): Promise<void> {\n\t\tconst result = await this.doEnterWorkspace(workspaceUri);\n\t\tif (result) {\n\n\t\t\t// Open workspace in same window\n\t\t\tawait this.hostService.openWindow([{ workspaceUri }], { forceReuseWindow: true });\n\t\t}\n\t}\n}\n\nregisterSingleton(IWorkspaceEditingService, BrowserWorkspaceEditingService, InstantiationType.Delayed);\n"]}