{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/activity/browser/activityService.ts"],"names":[],"mappings":"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","file":"activityService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IActivityService, IActivity } from 'vs/workbench/services/activity/common/activity';\nimport { IDisposable, Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IViewDescriptorService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { GLOBAL_ACTIVITY_ID, ACCOUNTS_ACTIVITY_ID } from 'vs/workbench/common/activity';\nimport { Event } from 'vs/base/common/event';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\n\nclass ViewContainerActivityByView extends Disposable {\n\n\tprivate activity: IActivity | undefined = undefined;\n\tprivate activityDisposable: IDisposable = Disposable.None;\n\n\tconstructor(\n\t\tprivate readonly viewId: string,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t) {\n\t\tsuper();\n\t\tthis._register(Event.filter(this.viewDescriptorService.onDidChangeContainer, e => e.views.some(view => view.id === viewId))(() => this.update()));\n\t\tthis._register(Event.filter(this.viewDescriptorService.onDidChangeLocation, e => e.views.some(view => view.id === viewId))(() => this.update()));\n\t}\n\n\tsetActivity(activity: IActivity): void {\n\t\tthis.activity = activity;\n\t\tthis.update();\n\t}\n\n\tclearActivity(): void {\n\t\tthis.activity = undefined;\n\t\tthis.update();\n\t}\n\n\tprivate update(): void {\n\t\tthis.activityDisposable.dispose();\n\t\tconst container = this.viewDescriptorService.getViewContainerByViewId(this.viewId);\n\t\tif (container && this.activity) {\n\t\t\tthis.activityDisposable = this.activityService.showViewContainerActivity(container.id, this.activity);\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\tthis.activityDisposable.dispose();\n\t}\n}\n\ninterface IViewActivity {\n\tid: number;\n\treadonly activity: ViewContainerActivityByView;\n}\n\nexport class ActivityService implements IActivityService {\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate viewActivities = new Map<string, IViewActivity>();\n\n\tconstructor(\n\t\t@IPaneCompositePartService private readonly paneCompositeService: IPaneCompositePartService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) { }\n\n\tshowViewContainerActivity(viewContainerId: string, { badge, clazz, priority }: IActivity): IDisposable {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(viewContainerId);\n\t\tif (viewContainer) {\n\t\t\tconst location = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\tif (location !== null) {\n\t\t\t\treturn this.paneCompositeService.showActivity(viewContainer.id, location, badge, clazz, priority);\n\t\t\t}\n\t\t}\n\t\treturn Disposable.None;\n\t}\n\n\tshowViewActivity(viewId: string, activity: IActivity): IDisposable {\n\t\tlet maybeItem = this.viewActivities.get(viewId);\n\n\t\tif (maybeItem) {\n\t\t\tmaybeItem.id++;\n\t\t} else {\n\t\t\tmaybeItem = {\n\t\t\t\tid: 1,\n\t\t\t\tactivity: this.instantiationService.createInstance(ViewContainerActivityByView, viewId)\n\t\t\t};\n\n\t\t\tthis.viewActivities.set(viewId, maybeItem);\n\t\t}\n\n\t\tconst id = maybeItem.id;\n\t\tmaybeItem.activity.setActivity(activity);\n\n\t\tconst item = maybeItem;\n\t\treturn toDisposable(() => {\n\t\t\tif (item.id === id) {\n\t\t\t\titem.activity.dispose();\n\t\t\t\tthis.viewActivities.delete(viewId);\n\t\t\t}\n\t\t});\n\t}\n\n\tshowAccountsActivity({ badge, clazz, priority }: IActivity): IDisposable {\n\t\treturn this.paneCompositeService.showActivity(ACCOUNTS_ACTIVITY_ID, ViewContainerLocation.Sidebar, badge, clazz, priority);\n\t}\n\n\tshowGlobalActivity({ badge, clazz, priority }: IActivity): IDisposable {\n\t\treturn this.paneCompositeService.showActivity(GLOBAL_ACTIVITY_ID, ViewContainerLocation.Sidebar, badge, clazz, priority);\n\t}\n}\n\nregisterSingleton(IActivityService, ActivityService, InstantiationType.Delayed);\n"]}