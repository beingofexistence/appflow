{"version":3,"sources":["vs/workbench/services/history/browser/historyService.ts"],"names":[],"mappings":"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","file":"historyService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { IResourceEditorInput, IEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IEditorPane, IEditorCloseEvent, EditorResourceAccessor, IEditorIdentifier, GroupIdentifier, EditorsOrder, SideBySideEditor, IUntypedEditorInput, isResourceEditorInput, isEditorInput, isSideBySideEditorInput, EditorCloseContext, IEditorPaneSelection, EditorPaneSelectionCompareResult, EditorPaneSelectionChangeReason, isEditorPaneWithSelection, IEditorPaneSelectionChangeEvent, IEditorPaneWithSelection, IEditorWillMoveEvent } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { GoFilter, GoScope, IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { FileChangesEvent, IFileService, FileChangeType, FILES_EXCLUDE_CONFIG, FileOperationEvent, FileOperation } from 'vs/platform/files/common/files';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { dispose, Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEditorGroup, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { getExcludes, ISearchConfiguration, SEARCH_EXCLUDE_CONFIG } from 'vs/workbench/services/search/common/search';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { EditorServiceImpl } from 'vs/workbench/browser/parts/editor/editor';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { coalesce, remove } from 'vs/base/common/arrays';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { addDisposableListener, EventType, EventHelper } from 'vs/base/browser/dom';\nimport { IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { Schemas } from 'vs/base/common/network';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { IdleValue } from 'vs/base/common/async';\nimport { ResourceGlobMatcher } from 'vs/workbench/common/resources';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { ILifecycleService, LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\n\nexport class HistoryService extends Disposable implements IHistoryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly MOUSE_NAVIGATION_SETTING = 'workbench.editor.mouseBackForwardToNavigate';\n\tprivate static readonly NAVIGATION_SCOPE_SETTING = 'workbench.editor.navigationScope';\n\n\tprivate readonly activeEditorListeners = this._register(new DisposableStore());\n\tprivate lastActiveEditor: IEditorIdentifier | undefined = undefined;\n\n\tprivate readonly editorHelper = this.instantiationService.createInstance(EditorHelper);\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: EditorServiceImpl,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IWorkspacesService private readonly workspacesService: IWorkspacesService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\n\t\t// if the service is created late enough that an editor is already opened\n\t\t// make sure to trigger the onActiveEditorChanged() to track the editor\n\t\t// properly (fixes https://github.com/microsoft/vscode/issues/59908)\n\t\tif (this.editorService.activeEditorPane) {\n\t\t\tthis.onDidActiveEditorChange();\n\t\t}\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Mouse back/forward support\n\t\tthis.registerMouseNavigationListener();\n\n\t\t// Editor changes\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.onDidActiveEditorChange()));\n\t\tthis._register(this.editorService.onDidOpenEditorFail(event => this.remove(event.editor)));\n\t\tthis._register(this.editorService.onDidCloseEditor(event => this.onDidCloseEditor(event)));\n\t\tthis._register(this.editorService.onDidMostRecentlyActiveEditorsChange(() => this.handleEditorEventInRecentEditorsStack()));\n\n\t\t// Editor group changes\n\t\tthis._register(this.editorGroupService.onDidRemoveGroup(e => this.onDidRemoveGroup(e)));\n\n\t\t// File changes\n\t\tthis._register(this.fileService.onDidFilesChange(event => this.onDidFilesChange(event)));\n\t\tthis._register(this.fileService.onDidRunOperation(event => this.onDidFilesChange(event)));\n\n\t\t// Storage\n\t\tthis._register(this.storageService.onWillSaveState(() => this.saveState()));\n\n\t\t// Configuration\n\t\tthis.registerEditorNavigationScopeChangeListener();\n\n\t\t// Context keys\n\t\tthis._register(this.onDidChangeEditorNavigationStack(() => this.updateContextKeys()));\n\t\tthis._register(this.editorGroupService.onDidChangeActiveGroup(() => this.updateContextKeys()));\n\t}\n\n\tprivate onDidCloseEditor(e: IEditorCloseEvent): void {\n\t\tthis.handleEditorCloseEventInHistory(e);\n\t\tthis.handleEditorCloseEventInReopen(e);\n\t}\n\n\tprivate registerMouseNavigationListener(): void {\n\t\tconst mouseBackForwardSupportListener = this._register(new DisposableStore());\n\t\tconst handleMouseBackForwardSupport = () => {\n\t\t\tmouseBackForwardSupportListener.clear();\n\n\t\t\tif (this.configurationService.getValue(HistoryService.MOUSE_NAVIGATION_SETTING)) {\n\t\t\t\tmouseBackForwardSupportListener.add(addDisposableListener(this.layoutService.container, EventType.MOUSE_DOWN, e => this.onMouseDownOrUp(e, true)));\n\t\t\t\tmouseBackForwardSupportListener.add(addDisposableListener(this.layoutService.container, EventType.MOUSE_UP, e => this.onMouseDownOrUp(e, false)));\n\t\t\t}\n\t\t};\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(event => {\n\t\t\tif (event.affectsConfiguration(HistoryService.MOUSE_NAVIGATION_SETTING)) {\n\t\t\t\thandleMouseBackForwardSupport();\n\t\t\t}\n\t\t}));\n\n\t\thandleMouseBackForwardSupport();\n\t}\n\n\tprivate onMouseDownOrUp(event: MouseEvent, isMouseDown: boolean): void {\n\n\t\t// Support to navigate in history when mouse buttons 4/5 are pressed\n\t\t// We want to trigger this on mouse down for a faster experience\n\t\t// but we also need to prevent mouse up from triggering the default\n\t\t// which is to navigate in the browser history.\n\n\t\tswitch (event.button) {\n\t\t\tcase 3:\n\t\t\t\tEventHelper.stop(event);\n\t\t\t\tif (isMouseDown) {\n\t\t\t\t\tthis.goBack();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tEventHelper.stop(event);\n\t\t\t\tif (isMouseDown) {\n\t\t\t\t\tthis.goForward();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate onDidRemoveGroup(group: IEditorGroup): void {\n\t\tthis.handleEditorGroupRemoveInNavigationStacks(group);\n\t}\n\n\tprivate onDidActiveEditorChange(): void {\n\t\tconst activeEditorGroup = this.editorGroupService.activeGroup;\n\t\tconst activeEditorPane = activeEditorGroup.activeEditorPane;\n\t\tif (this.lastActiveEditor && this.editorHelper.matchesEditorIdentifier(this.lastActiveEditor, activeEditorPane)) {\n\t\t\treturn; // return if the active editor is still the same\n\t\t}\n\n\t\t// Remember as last active editor (can be undefined if none opened)\n\t\tthis.lastActiveEditor = activeEditorPane?.input && activeEditorPane.group ? { editor: activeEditorPane.input, groupId: activeEditorPane.group.id } : undefined;\n\n\t\t// Dispose old listeners\n\t\tthis.activeEditorListeners.clear();\n\n\t\t// Handle editor change\n\t\tthis.handleActiveEditorChange(activeEditorGroup, activeEditorPane);\n\n\t\t// Listen to selection changes if the editor pane\n\t\t// is having a selection concept.\n\t\tif (isEditorPaneWithSelection(activeEditorPane)) {\n\t\t\tthis.activeEditorListeners.add(activeEditorPane.onDidChangeSelection(e => this.handleActiveEditorSelectionChangeEvent(activeEditorGroup, activeEditorPane, e)));\n\t\t}\n\n\t\t// Context keys\n\t\tthis.updateContextKeys();\n\t}\n\n\tprivate onDidFilesChange(event: FileChangesEvent | FileOperationEvent): void {\n\n\t\t// External file changes (watcher)\n\t\tif (event instanceof FileChangesEvent) {\n\t\t\tif (event.gotDeleted()) {\n\t\t\t\tthis.remove(event);\n\t\t\t}\n\t\t}\n\n\t\t// Internal file changes (e.g. explorer)\n\t\telse {\n\n\t\t\t// Delete\n\t\t\tif (event.isOperation(FileOperation.DELETE)) {\n\t\t\t\tthis.remove(event);\n\t\t\t}\n\n\t\t\t// Move\n\t\t\telse if (event.isOperation(FileOperation.MOVE) && event.target.isFile) {\n\t\t\t\tthis.move(event);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleActiveEditorChange(group: IEditorGroup, editorPane?: IEditorPane): void {\n\t\tthis.handleActiveEditorChangeInHistory(editorPane);\n\t\tthis.handleActiveEditorChangeInNavigationStacks(group, editorPane);\n\t}\n\n\tprivate handleActiveEditorSelectionChangeEvent(group: IEditorGroup, editorPane: IEditorPaneWithSelection, event: IEditorPaneSelectionChangeEvent): void {\n\t\tthis.handleActiveEditorSelectionChangeInNavigationStacks(group, editorPane, event);\n\t}\n\n\tprivate move(event: FileOperationEvent): void {\n\t\tthis.moveInHistory(event);\n\t\tthis.moveInEditorNavigationStacks(event);\n\t}\n\n\tprivate remove(editor: EditorInput): void;\n\tprivate remove(event: FileChangesEvent): void;\n\tprivate remove(event: FileOperationEvent): void;\n\tprivate remove(arg1: EditorInput | FileChangesEvent | FileOperationEvent): void {\n\t\tthis.removeFromHistory(arg1);\n\t\tthis.removeFromEditorNavigationStacks(arg1);\n\t\tthis.removeFromRecentlyClosedEditors(arg1);\n\t\tthis.removeFromRecentlyOpened(arg1);\n\t}\n\n\tprivate removeFromRecentlyOpened(arg1: EditorInput | FileChangesEvent | FileOperationEvent): void {\n\t\tlet resource: URI | undefined = undefined;\n\t\tif (isEditorInput(arg1)) {\n\t\t\tresource = EditorResourceAccessor.getOriginalUri(arg1);\n\t\t} else if (arg1 instanceof FileChangesEvent) {\n\t\t\t// Ignore for now (recently opened are most often out of workspace files anyway for which there are no file events)\n\t\t} else {\n\t\t\tresource = arg1.resource;\n\t\t}\n\n\t\tif (resource) {\n\t\t\tthis.workspacesService.removeRecentlyOpened([resource]);\n\t\t}\n\t}\n\n\tclear(): void {\n\n\t\t// History\n\t\tthis.clearRecentlyOpened();\n\n\t\t// Navigation (next, previous)\n\t\tthis.clearEditorNavigationStacks();\n\n\t\t// Recently closed editors\n\t\tthis.recentlyClosedEditors = [];\n\n\t\t// Context Keys\n\t\tthis.updateContextKeys();\n\t}\n\n\t//#region History Context Keys\n\n\tprivate readonly canNavigateBackContextKey = (new RawContextKey<boolean>('canNavigateBack', false, localize('canNavigateBack', \"Whether it is possible to navigate back in editor history\"))).bindTo(this.contextKeyService);\n\tprivate readonly canNavigateForwardContextKey = (new RawContextKey<boolean>('canNavigateForward', false, localize('canNavigateForward', \"Whether it is possible to navigate forward in editor history\"))).bindTo(this.contextKeyService);\n\n\tprivate readonly canNavigateBackInNavigationsContextKey = (new RawContextKey<boolean>('canNavigateBackInNavigationLocations', false, localize('canNavigateBackInNavigationLocations', \"Whether it is possible to navigate back in editor navigation locations history\"))).bindTo(this.contextKeyService);\n\tprivate readonly canNavigateForwardInNavigationsContextKey = (new RawContextKey<boolean>('canNavigateForwardInNavigationLocations', false, localize('canNavigateForwardInNavigationLocations', \"Whether it is possible to navigate forward in editor navigation locations history\"))).bindTo(this.contextKeyService);\n\tprivate readonly canNavigateToLastNavigationLocationContextKey = (new RawContextKey<boolean>('canNavigateToLastNavigationLocation', false, localize('canNavigateToLastNavigationLocation', \"Whether it is possible to navigate to the last editor navigation location\"))).bindTo(this.contextKeyService);\n\n\tprivate readonly canNavigateBackInEditsContextKey = (new RawContextKey<boolean>('canNavigateBackInEditLocations', false, localize('canNavigateBackInEditLocations', \"Whether it is possible to navigate back in editor edit locations history\"))).bindTo(this.contextKeyService);\n\tprivate readonly canNavigateForwardInEditsContextKey = (new RawContextKey<boolean>('canNavigateForwardInEditLocations', false, localize('canNavigateForwardInEditLocations', \"Whether it is possible to navigate forward in editor edit locations history\"))).bindTo(this.contextKeyService);\n\tprivate readonly canNavigateToLastEditLocationContextKey = (new RawContextKey<boolean>('canNavigateToLastEditLocation', false, localize('canNavigateToLastEditLocation', \"Whether it is possible to navigate to the last editor edit location\"))).bindTo(this.contextKeyService);\n\n\tprivate readonly canReopenClosedEditorContextKey = (new RawContextKey<boolean>('canReopenClosedEditor', false, localize('canReopenClosedEditor', \"Whether it is possible to reopen the last closed editor\"))).bindTo(this.contextKeyService);\n\n\tupdateContextKeys(): void {\n\t\tthis.contextKeyService.bufferChangeEvents(() => {\n\t\t\tconst activeStack = this.getStack();\n\n\t\t\tthis.canNavigateBackContextKey.set(activeStack.canGoBack(GoFilter.NONE));\n\t\t\tthis.canNavigateForwardContextKey.set(activeStack.canGoForward(GoFilter.NONE));\n\n\t\t\tthis.canNavigateBackInNavigationsContextKey.set(activeStack.canGoBack(GoFilter.NAVIGATION));\n\t\t\tthis.canNavigateForwardInNavigationsContextKey.set(activeStack.canGoForward(GoFilter.NAVIGATION));\n\t\t\tthis.canNavigateToLastNavigationLocationContextKey.set(activeStack.canGoLast(GoFilter.NAVIGATION));\n\n\t\t\tthis.canNavigateBackInEditsContextKey.set(activeStack.canGoBack(GoFilter.EDITS));\n\t\t\tthis.canNavigateForwardInEditsContextKey.set(activeStack.canGoForward(GoFilter.EDITS));\n\t\t\tthis.canNavigateToLastEditLocationContextKey.set(activeStack.canGoLast(GoFilter.EDITS));\n\n\t\t\tthis.canReopenClosedEditorContextKey.set(this.recentlyClosedEditors.length > 0);\n\t\t});\n\t}\n\n\t//#endregion\n\n\t//#region Editor History Navigation (limit: 50)\n\n\tprivate readonly _onDidChangeEditorNavigationStack = this._register(new Emitter<void>());\n\treadonly onDidChangeEditorNavigationStack = this._onDidChangeEditorNavigationStack.event;\n\n\tprivate defaultScopedEditorNavigationStack: IEditorNavigationStacks | undefined = undefined;\n\tprivate readonly editorGroupScopedNavigationStacks = new Map<GroupIdentifier, { stack: IEditorNavigationStacks; disposable: IDisposable }>();\n\tprivate readonly editorScopedNavigationStacks = new Map<GroupIdentifier, Map<EditorInput, { stack: IEditorNavigationStacks; disposable: IDisposable }>>();\n\n\tprivate editorNavigationScope = GoScope.DEFAULT;\n\n\tprivate registerEditorNavigationScopeChangeListener(): void {\n\t\tconst handleEditorNavigationScopeChange = () => {\n\n\t\t\t// Ensure to start fresh when setting changes\n\t\t\tthis.disposeEditorNavigationStacks();\n\n\t\t\t// Update scope\n\t\t\tconst configuredScope = this.configurationService.getValue(HistoryService.NAVIGATION_SCOPE_SETTING);\n\t\t\tif (configuredScope === 'editorGroup') {\n\t\t\t\tthis.editorNavigationScope = GoScope.EDITOR_GROUP;\n\t\t\t} else if (configuredScope === 'editor') {\n\t\t\t\tthis.editorNavigationScope = GoScope.EDITOR;\n\t\t\t} else {\n\t\t\t\tthis.editorNavigationScope = GoScope.DEFAULT;\n\t\t\t}\n\t\t};\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(event => {\n\t\t\tif (event.affectsConfiguration(HistoryService.NAVIGATION_SCOPE_SETTING)) {\n\t\t\t\thandleEditorNavigationScopeChange();\n\t\t\t}\n\t\t}));\n\n\t\thandleEditorNavigationScopeChange();\n\t}\n\n\tprivate getStack(group = this.editorGroupService.activeGroup, editor = group.activeEditor): IEditorNavigationStacks {\n\t\tswitch (this.editorNavigationScope) {\n\n\t\t\t// Per Editor\n\t\t\tcase GoScope.EDITOR: {\n\t\t\t\tif (!editor) {\n\t\t\t\t\treturn new NoOpEditorNavigationStacks();\n\t\t\t\t}\n\n\t\t\t\tlet stacksForGroup = this.editorScopedNavigationStacks.get(group.id);\n\t\t\t\tif (!stacksForGroup) {\n\t\t\t\t\tstacksForGroup = new Map<EditorInput, { stack: IEditorNavigationStacks; disposable: IDisposable }>();\n\t\t\t\t\tthis.editorScopedNavigationStacks.set(group.id, stacksForGroup);\n\t\t\t\t}\n\n\t\t\t\tlet stack = stacksForGroup.get(editor)?.stack;\n\t\t\t\tif (!stack) {\n\t\t\t\t\tconst disposable = new DisposableStore();\n\n\t\t\t\t\tstack = disposable.add(this.instantiationService.createInstance(EditorNavigationStacks, GoScope.EDITOR));\n\t\t\t\t\tdisposable.add(stack.onDidChange(() => this._onDidChangeEditorNavigationStack.fire()));\n\n\t\t\t\t\tstacksForGroup.set(editor, { stack, disposable });\n\t\t\t\t}\n\n\t\t\t\treturn stack;\n\t\t\t}\n\n\t\t\t// Per Editor Group\n\t\t\tcase GoScope.EDITOR_GROUP: {\n\t\t\t\tlet stack = this.editorGroupScopedNavigationStacks.get(group.id)?.stack;\n\t\t\t\tif (!stack) {\n\t\t\t\t\tconst disposable = new DisposableStore();\n\n\t\t\t\t\tstack = disposable.add(this.instantiationService.createInstance(EditorNavigationStacks, GoScope.EDITOR_GROUP));\n\t\t\t\t\tdisposable.add(stack.onDidChange(() => this._onDidChangeEditorNavigationStack.fire()));\n\n\t\t\t\t\tthis.editorGroupScopedNavigationStacks.set(group.id, { stack, disposable });\n\t\t\t\t}\n\n\t\t\t\treturn stack;\n\t\t\t}\n\n\t\t\t// Global\n\t\t\tcase GoScope.DEFAULT: {\n\t\t\t\tif (!this.defaultScopedEditorNavigationStack) {\n\t\t\t\t\tthis.defaultScopedEditorNavigationStack = this._register(this.instantiationService.createInstance(EditorNavigationStacks, GoScope.DEFAULT));\n\n\t\t\t\t\tthis._register(this.defaultScopedEditorNavigationStack.onDidChange(() => this._onDidChangeEditorNavigationStack.fire()));\n\t\t\t\t}\n\n\t\t\t\treturn this.defaultScopedEditorNavigationStack;\n\t\t\t}\n\t\t}\n\t}\n\n\tgoForward(filter?: GoFilter): Promise<void> {\n\t\treturn this.getStack().goForward(filter);\n\t}\n\n\tgoBack(filter?: GoFilter): Promise<void> {\n\t\treturn this.getStack().goBack(filter);\n\t}\n\n\tgoPrevious(filter?: GoFilter): Promise<void> {\n\t\treturn this.getStack().goPrevious(filter);\n\t}\n\n\tgoLast(filter?: GoFilter): Promise<void> {\n\t\treturn this.getStack().goLast(filter);\n\t}\n\n\tprivate handleActiveEditorChangeInNavigationStacks(group: IEditorGroup, editorPane?: IEditorPane): void {\n\t\tthis.getStack(group, editorPane?.input).handleActiveEditorChange(editorPane);\n\t}\n\n\tprivate handleActiveEditorSelectionChangeInNavigationStacks(group: IEditorGroup, editorPane: IEditorPaneWithSelection, event: IEditorPaneSelectionChangeEvent): void {\n\t\tthis.getStack(group, editorPane.input).handleActiveEditorSelectionChange(editorPane, event);\n\t}\n\n\tprivate handleEditorCloseEventInHistory(e: IEditorCloseEvent): void {\n\t\tconst editors = this.editorScopedNavigationStacks.get(e.groupId);\n\t\tif (editors) {\n\t\t\tconst editorStack = editors.get(e.editor);\n\t\t\tif (editorStack) {\n\t\t\t\teditorStack.disposable.dispose();\n\t\t\t\teditors.delete(e.editor);\n\t\t\t}\n\n\t\t\tif (editors.size === 0) {\n\t\t\t\tthis.editorScopedNavigationStacks.delete(e.groupId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleEditorGroupRemoveInNavigationStacks(group: IEditorGroup): void {\n\n\t\t// Global\n\t\tthis.defaultScopedEditorNavigationStack?.remove(group.id);\n\n\t\t// Editor groups\n\t\tconst editorGroupStack = this.editorGroupScopedNavigationStacks.get(group.id);\n\t\tif (editorGroupStack) {\n\t\t\teditorGroupStack.disposable.dispose();\n\t\t\tthis.editorGroupScopedNavigationStacks.delete(group.id);\n\t\t}\n\t}\n\n\tprivate clearEditorNavigationStacks(): void {\n\t\tthis.withEachEditorNavigationStack(stack => stack.clear());\n\t}\n\n\tprivate removeFromEditorNavigationStacks(arg1: EditorInput | FileChangesEvent | FileOperationEvent): void {\n\t\tthis.withEachEditorNavigationStack(stack => stack.remove(arg1));\n\t}\n\n\tprivate moveInEditorNavigationStacks(event: FileOperationEvent): void {\n\t\tthis.withEachEditorNavigationStack(stack => stack.move(event));\n\t}\n\n\tprivate withEachEditorNavigationStack(fn: (stack: IEditorNavigationStacks) => void): void {\n\n\t\t// Global\n\t\tif (this.defaultScopedEditorNavigationStack) {\n\t\t\tfn(this.defaultScopedEditorNavigationStack);\n\t\t}\n\n\t\t// Per editor group\n\t\tfor (const [, entry] of this.editorGroupScopedNavigationStacks) {\n\t\t\tfn(entry.stack);\n\t\t}\n\n\t\t// Per editor\n\t\tfor (const [, entries] of this.editorScopedNavigationStacks) {\n\t\t\tfor (const [, entry] of entries) {\n\t\t\t\tfn(entry.stack);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate disposeEditorNavigationStacks(): void {\n\n\t\t// Global\n\t\tthis.defaultScopedEditorNavigationStack?.dispose();\n\t\tthis.defaultScopedEditorNavigationStack = undefined;\n\n\t\t// Per Editor group\n\t\tfor (const [, stack] of this.editorGroupScopedNavigationStacks) {\n\t\t\tstack.disposable.dispose();\n\t\t}\n\t\tthis.editorGroupScopedNavigationStacks.clear();\n\n\t\t// Per Editor\n\t\tfor (const [, stacks] of this.editorScopedNavigationStacks) {\n\t\t\tfor (const [, stack] of stacks) {\n\t\t\t\tstack.disposable.dispose();\n\t\t\t}\n\t\t}\n\t\tthis.editorScopedNavigationStacks.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Navigation: Next/Previous Used Editor\n\n\tprivate recentlyUsedEditorsStack: readonly IEditorIdentifier[] | undefined = undefined;\n\tprivate recentlyUsedEditorsStackIndex = 0;\n\n\tprivate recentlyUsedEditorsInGroupStack: readonly IEditorIdentifier[] | undefined = undefined;\n\tprivate recentlyUsedEditorsInGroupStackIndex = 0;\n\n\tprivate navigatingInRecentlyUsedEditorsStack = false;\n\tprivate navigatingInRecentlyUsedEditorsInGroupStack = false;\n\n\topenNextRecentlyUsedEditor(groupId?: GroupIdentifier): Promise<void> {\n\t\tconst [stack, index] = this.ensureRecentlyUsedStack(index => index - 1, groupId);\n\n\t\treturn this.doNavigateInRecentlyUsedEditorsStack(stack[index], groupId);\n\t}\n\n\topenPreviouslyUsedEditor(groupId?: GroupIdentifier): Promise<void> {\n\t\tconst [stack, index] = this.ensureRecentlyUsedStack(index => index + 1, groupId);\n\n\t\treturn this.doNavigateInRecentlyUsedEditorsStack(stack[index], groupId);\n\t}\n\n\tprivate async doNavigateInRecentlyUsedEditorsStack(editorIdentifier: IEditorIdentifier | undefined, groupId?: GroupIdentifier): Promise<void> {\n\t\tif (editorIdentifier) {\n\t\t\tconst acrossGroups = typeof groupId !== 'number' || !this.editorGroupService.getGroup(groupId);\n\n\t\t\tif (acrossGroups) {\n\t\t\t\tthis.navigatingInRecentlyUsedEditorsStack = true;\n\t\t\t} else {\n\t\t\t\tthis.navigatingInRecentlyUsedEditorsInGroupStack = true;\n\t\t\t}\n\n\t\t\tconst group = this.editorGroupService.getGroup(editorIdentifier.groupId) ?? this.editorGroupService.activeGroup;\n\t\t\ttry {\n\t\t\t\tawait group.openEditor(editorIdentifier.editor);\n\t\t\t} finally {\n\t\t\t\tif (acrossGroups) {\n\t\t\t\t\tthis.navigatingInRecentlyUsedEditorsStack = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.navigatingInRecentlyUsedEditorsInGroupStack = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate ensureRecentlyUsedStack(indexModifier: (index: number) => number, groupId?: GroupIdentifier): [readonly IEditorIdentifier[], number] {\n\t\tlet editors: readonly IEditorIdentifier[];\n\t\tlet index: number;\n\n\t\tconst group = typeof groupId === 'number' ? this.editorGroupService.getGroup(groupId) : undefined;\n\n\t\t// Across groups\n\t\tif (!group) {\n\t\t\teditors = this.recentlyUsedEditorsStack || this.editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\t\tindex = this.recentlyUsedEditorsStackIndex;\n\t\t}\n\n\t\t// Within group\n\t\telse {\n\t\t\teditors = this.recentlyUsedEditorsInGroupStack || group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).map(editor => ({ groupId: group.id, editor }));\n\t\t\tindex = this.recentlyUsedEditorsInGroupStackIndex;\n\t\t}\n\n\t\t// Adjust index\n\t\tlet newIndex = indexModifier(index);\n\t\tif (newIndex < 0) {\n\t\t\tnewIndex = 0;\n\t\t} else if (newIndex > editors.length - 1) {\n\t\t\tnewIndex = editors.length - 1;\n\t\t}\n\n\t\t// Remember index and editors\n\t\tif (!group) {\n\t\t\tthis.recentlyUsedEditorsStack = editors;\n\t\t\tthis.recentlyUsedEditorsStackIndex = newIndex;\n\t\t} else {\n\t\t\tthis.recentlyUsedEditorsInGroupStack = editors;\n\t\t\tthis.recentlyUsedEditorsInGroupStackIndex = newIndex;\n\t\t}\n\n\t\treturn [editors, newIndex];\n\t}\n\n\tprivate handleEditorEventInRecentEditorsStack(): void {\n\n\t\t// Drop all-editors stack unless navigating in all editors\n\t\tif (!this.navigatingInRecentlyUsedEditorsStack) {\n\t\t\tthis.recentlyUsedEditorsStack = undefined;\n\t\t\tthis.recentlyUsedEditorsStackIndex = 0;\n\t\t}\n\n\t\t// Drop in-group-editors stack unless navigating in group\n\t\tif (!this.navigatingInRecentlyUsedEditorsInGroupStack) {\n\t\t\tthis.recentlyUsedEditorsInGroupStack = undefined;\n\t\t\tthis.recentlyUsedEditorsInGroupStackIndex = 0;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File: Reopen Closed Editor (limit: 20)\n\n\tprivate static readonly MAX_RECENTLY_CLOSED_EDITORS = 20;\n\n\tprivate recentlyClosedEditors: IRecentlyClosedEditor[] = [];\n\tprivate ignoreEditorCloseEvent = false;\n\n\tprivate handleEditorCloseEventInReopen(event: IEditorCloseEvent): void {\n\t\tif (this.ignoreEditorCloseEvent) {\n\t\t\treturn; // blocked\n\t\t}\n\n\t\tconst { editor, context } = event;\n\t\tif (context === EditorCloseContext.REPLACE || context === EditorCloseContext.MOVE) {\n\t\t\treturn; // ignore if editor was replaced or moved\n\t\t}\n\n\t\tconst untypedEditor = editor.toUntyped();\n\t\tif (!untypedEditor) {\n\t\t\treturn; // we need a untyped editor to restore from going forward\n\t\t}\n\n\t\tconst associatedResources: URI[] = [];\n\t\tconst editorResource = EditorResourceAccessor.getOriginalUri(editor, { supportSideBySide: SideBySideEditor.BOTH });\n\t\tif (URI.isUri(editorResource)) {\n\t\t\tassociatedResources.push(editorResource);\n\t\t} else if (editorResource) {\n\t\t\tassociatedResources.push(...coalesce([editorResource.primary, editorResource.secondary]));\n\t\t}\n\n\t\t// Remove from list of recently closed before...\n\t\tthis.removeFromRecentlyClosedEditors(editor);\n\n\t\t// ...adding it as last recently closed\n\t\tthis.recentlyClosedEditors.push({\n\t\t\teditorId: editor.editorId,\n\t\t\teditor: untypedEditor,\n\t\t\tresource: EditorResourceAccessor.getOriginalUri(editor),\n\t\t\tassociatedResources,\n\t\t\tindex: event.index,\n\t\t\tsticky: event.sticky\n\t\t});\n\n\t\t// Bounding\n\t\tif (this.recentlyClosedEditors.length > HistoryService.MAX_RECENTLY_CLOSED_EDITORS) {\n\t\t\tthis.recentlyClosedEditors.shift();\n\t\t}\n\n\t\t// Context\n\t\tthis.canReopenClosedEditorContextKey.set(true);\n\t}\n\n\tasync reopenLastClosedEditor(): Promise<void> {\n\n\t\t// Open editor if we have one\n\t\tconst lastClosedEditor = this.recentlyClosedEditors.pop();\n\t\tlet reopenClosedEditorPromise: Promise<void> | undefined = undefined;\n\t\tif (lastClosedEditor) {\n\t\t\treopenClosedEditorPromise = this.doReopenLastClosedEditor(lastClosedEditor);\n\t\t}\n\n\t\t// Update context\n\t\tthis.canReopenClosedEditorContextKey.set(this.recentlyClosedEditors.length > 0);\n\n\t\treturn reopenClosedEditorPromise;\n\t}\n\n\tprivate async doReopenLastClosedEditor(lastClosedEditor: IRecentlyClosedEditor): Promise<void> {\n\t\tconst options: IEditorOptions = { pinned: true, sticky: lastClosedEditor.sticky, index: lastClosedEditor.index, ignoreError: true };\n\n\t\t// Special sticky handling: remove the index property from options\n\t\t// if that would result in sticky state to not preserve or apply\n\t\t// wrongly.\n\t\tif (\n\t\t\t(lastClosedEditor.sticky && !this.editorGroupService.activeGroup.isSticky(lastClosedEditor.index)) ||\n\t\t\t(!lastClosedEditor.sticky && this.editorGroupService.activeGroup.isSticky(lastClosedEditor.index))\n\t\t) {\n\t\t\toptions.index = undefined;\n\t\t}\n\n\t\t// Re-open editor unless already opened\n\t\tlet editorPane: IEditorPane | undefined = undefined;\n\t\tif (!this.editorGroupService.activeGroup.contains(lastClosedEditor.editor)) {\n\n\t\t\t// Fix for https://github.com/microsoft/vscode/issues/107850\n\t\t\t// If opening an editor fails, it is possible that we get\n\t\t\t// another editor-close event as a result. But we really do\n\t\t\t// want to ignore that in our list of recently closed editors\n\t\t\t//  to prevent endless loops.\n\n\t\t\tthis.ignoreEditorCloseEvent = true;\n\t\t\ttry {\n\t\t\t\teditorPane = await this.editorService.openEditor({\n\t\t\t\t\t...lastClosedEditor.editor,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t...lastClosedEditor.editor.options,\n\t\t\t\t\t\t...options\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} finally {\n\t\t\t\tthis.ignoreEditorCloseEvent = false;\n\t\t\t}\n\t\t}\n\n\t\t// If no editor was opened, try with the next one\n\t\tif (!editorPane) {\n\n\t\t\t// Fix for https://github.com/microsoft/vscode/issues/67882\n\t\t\t// If opening of the editor fails, make sure to try the next one\n\t\t\t// but make sure to remove this one from the list to prevent\n\t\t\t// endless loops.\n\t\t\tremove(this.recentlyClosedEditors, lastClosedEditor);\n\n\t\t\t// Try with next one\n\t\t\tthis.reopenLastClosedEditor();\n\t\t}\n\t}\n\n\tprivate removeFromRecentlyClosedEditors(arg1: EditorInput | FileChangesEvent | FileOperationEvent): void {\n\t\tthis.recentlyClosedEditors = this.recentlyClosedEditors.filter(recentlyClosedEditor => {\n\t\t\tif (isEditorInput(arg1) && recentlyClosedEditor.editorId !== arg1.editorId) {\n\t\t\t\treturn true; // keep: different editor identifiers\n\t\t\t}\n\n\t\t\tif (recentlyClosedEditor.resource && this.editorHelper.matchesFile(recentlyClosedEditor.resource, arg1)) {\n\t\t\t\treturn false; // remove: editor matches directly\n\t\t\t}\n\n\t\t\tif (recentlyClosedEditor.associatedResources.some(associatedResource => this.editorHelper.matchesFile(associatedResource, arg1))) {\n\t\t\t\treturn false; // remove: an associated resource matches\n\t\t\t}\n\n\t\t\treturn true; // keep\n\t\t});\n\n\t\t// Update context\n\t\tthis.canReopenClosedEditorContextKey.set(this.recentlyClosedEditors.length > 0);\n\t}\n\n\t//#endregion\n\n\t//#region Go to: Recently Opened Editor (limit: 200, persisted)\n\n\tprivate static readonly MAX_HISTORY_ITEMS = 200;\n\tprivate static readonly HISTORY_STORAGE_KEY = 'history.entries';\n\n\tprivate history: Array<EditorInput | IResourceEditorInput> | undefined = undefined;\n\n\tprivate readonly editorHistoryListeners = new Map<EditorInput, DisposableStore>();\n\n\tprivate readonly resourceExcludeMatcher = this._register(new IdleValue(() => {\n\t\tconst matcher = this._register(this.instantiationService.createInstance(\n\t\t\tResourceGlobMatcher,\n\t\t\troot => getExcludes(root ? this.configurationService.getValue<ISearchConfiguration>({ resource: root }) : this.configurationService.getValue<ISearchConfiguration>()) || Object.create(null),\n\t\t\tevent => event.affectsConfiguration(FILES_EXCLUDE_CONFIG) || event.affectsConfiguration(SEARCH_EXCLUDE_CONFIG)\n\t\t));\n\n\t\tthis._register(matcher.onExpressionChange(() => this.removeExcludedFromHistory()));\n\n\t\treturn matcher;\n\t}));\n\n\tprivate handleActiveEditorChangeInHistory(editorPane?: IEditorPane): void {\n\n\t\t// Ensure we have not configured to exclude input and don't track invalid inputs\n\t\tconst editor = editorPane?.input;\n\t\tif (!editor || editor.isDisposed() || !this.includeInHistory(editor)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove any existing entry and add to the beginning\n\t\tthis.removeFromHistory(editor);\n\t\tthis.addToHistory(editor);\n\t}\n\n\tprivate addToHistory(editor: EditorInput | IResourceEditorInput, insertFirst = true): void {\n\t\tthis.ensureHistoryLoaded(this.history);\n\n\t\tconst historyInput = this.editorHelper.preferResourceEditorInput(editor);\n\t\tif (!historyInput) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Insert based on preference\n\t\tif (insertFirst) {\n\t\t\tthis.history.unshift(historyInput);\n\t\t} else {\n\t\t\tthis.history.push(historyInput);\n\t\t}\n\n\t\t// Respect max entries setting\n\t\tif (this.history.length > HistoryService.MAX_HISTORY_ITEMS) {\n\t\t\tthis.editorHelper.clearOnEditorDispose(this.history.pop()!, this.editorHistoryListeners);\n\t\t}\n\n\t\t// React to editor input disposing if this is a typed editor\n\t\tif (isEditorInput(historyInput)) {\n\t\t\tthis.editorHelper.onEditorDispose(historyInput, () => this.updateHistoryOnEditorDispose(historyInput), this.editorHistoryListeners);\n\t\t}\n\t}\n\n\tprivate updateHistoryOnEditorDispose(editor: EditorInput): void {\n\n\t\t// Any non side-by-side editor input gets removed directly on dispose\n\t\tif (!isSideBySideEditorInput(editor)) {\n\t\t\tthis.removeFromHistory(editor);\n\t\t}\n\n\t\t// Side-by-side editors get special treatment: we try to distill the\n\t\t// possibly untyped resource inputs from both sides to be able to\n\t\t// offer these entries from the history to the user still.\n\t\telse {\n\t\t\tconst resourceInputs: IResourceEditorInput[] = [];\n\t\t\tconst sideInputs = editor.primary.matches(editor.secondary) ? [editor.primary] : [editor.primary, editor.secondary];\n\t\t\tfor (const sideInput of sideInputs) {\n\t\t\t\tconst candidateResourceInput = this.editorHelper.preferResourceEditorInput(sideInput);\n\t\t\t\tif (isResourceEditorInput(candidateResourceInput)) {\n\t\t\t\t\tresourceInputs.push(candidateResourceInput);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Insert the untyped resource inputs where our disposed\n\t\t\t// side-by-side editor input is in the history stack\n\t\t\tthis.replaceInHistory(editor, ...resourceInputs);\n\t\t}\n\t}\n\n\tprivate includeInHistory(editor: EditorInput | IResourceEditorInput): boolean {\n\t\tif (isEditorInput(editor)) {\n\t\t\treturn true; // include any non files\n\t\t}\n\n\t\treturn !this.resourceExcludeMatcher.value.matches(editor.resource);\n\t}\n\n\tprivate removeExcludedFromHistory(): void {\n\t\tthis.ensureHistoryLoaded(this.history);\n\n\t\tthis.history = this.history.filter(entry => {\n\t\t\tconst include = this.includeInHistory(entry);\n\n\t\t\t// Cleanup any listeners associated with the input when removing from history\n\t\t\tif (!include) {\n\t\t\t\tthis.editorHelper.clearOnEditorDispose(entry, this.editorHistoryListeners);\n\t\t\t}\n\n\t\t\treturn include;\n\t\t});\n\t}\n\n\tprivate moveInHistory(event: FileOperationEvent): void {\n\t\tif (event.isOperation(FileOperation.MOVE)) {\n\t\t\tconst removed = this.removeFromHistory(event);\n\t\t\tif (removed) {\n\t\t\t\tthis.addToHistory({ resource: event.target.resource });\n\t\t\t}\n\t\t}\n\t}\n\n\tremoveFromHistory(arg1: EditorInput | IResourceEditorInput | FileChangesEvent | FileOperationEvent): boolean {\n\t\tlet removed = false;\n\n\t\tthis.ensureHistoryLoaded(this.history);\n\n\t\tthis.history = this.history.filter(entry => {\n\t\t\tconst matches = this.editorHelper.matchesEditor(arg1, entry);\n\n\t\t\t// Cleanup any listeners associated with the input when removing from history\n\t\t\tif (matches) {\n\t\t\t\tthis.editorHelper.clearOnEditorDispose(arg1, this.editorHistoryListeners);\n\t\t\t\tremoved = true;\n\t\t\t}\n\n\t\t\treturn !matches;\n\t\t});\n\n\t\treturn removed;\n\t}\n\n\tprivate replaceInHistory(editor: EditorInput | IResourceEditorInput, ...replacements: ReadonlyArray<EditorInput | IResourceEditorInput>): void {\n\t\tthis.ensureHistoryLoaded(this.history);\n\n\t\tlet replaced = false;\n\n\t\tconst newHistory: Array<EditorInput | IResourceEditorInput> = [];\n\t\tfor (const entry of this.history) {\n\n\t\t\t// Entry matches and is going to be disposed + replaced\n\t\t\tif (this.editorHelper.matchesEditor(editor, entry)) {\n\n\t\t\t\t// Cleanup any listeners associated with the input when replacing from history\n\t\t\t\tthis.editorHelper.clearOnEditorDispose(editor, this.editorHistoryListeners);\n\n\t\t\t\t// Insert replacements but only once\n\t\t\t\tif (!replaced) {\n\t\t\t\t\tnewHistory.push(...replacements);\n\t\t\t\t\treplaced = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Entry does not match, but only add it if it didn't match\n\t\t\t// our replacements already\n\t\t\telse if (!replacements.some(replacement => this.editorHelper.matchesEditor(replacement, entry))) {\n\t\t\t\tnewHistory.push(entry);\n\t\t\t}\n\t\t}\n\n\t\t// If the target editor to replace was not found, make sure to\n\t\t// insert the replacements to the end to ensure we got them\n\t\tif (!replaced) {\n\t\t\tnewHistory.push(...replacements);\n\t\t}\n\n\t\tthis.history = newHistory;\n\t}\n\n\tclearRecentlyOpened(): void {\n\t\tthis.history = [];\n\n\t\tfor (const [, disposable] of this.editorHistoryListeners) {\n\t\t\tdispose(disposable);\n\t\t}\n\t\tthis.editorHistoryListeners.clear();\n\t}\n\n\tgetHistory(): readonly (EditorInput | IResourceEditorInput)[] {\n\t\tthis.ensureHistoryLoaded(this.history);\n\n\t\treturn this.history;\n\t}\n\n\tprivate ensureHistoryLoaded(history: Array<EditorInput | IResourceEditorInput> | undefined): asserts history {\n\t\tif (!this.history) {\n\n\t\t\t// Until history is loaded, it is just empty\n\t\t\tthis.history = [];\n\n\t\t\t// We want to seed history from opened editors\n\t\t\t// too as well as previous stored state, so we\n\t\t\t// need to wait for the editor groups being ready\n\t\t\tif (this.editorGroupService.isReady) {\n\t\t\t\tthis.loadHistory();\n\t\t\t} else {\n\t\t\t\t(async () => {\n\t\t\t\t\tawait this.editorGroupService.whenReady;\n\n\t\t\t\t\tthis.loadHistory();\n\t\t\t\t})();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate loadHistory(): void {\n\n\t\t// Init as empty before adding - since we are about to\n\t\t// populate the history from opened editors, we capture\n\t\t// the right order here.\n\t\tthis.history = [];\n\n\t\t// All stored editors from previous session\n\t\tconst storedEditorHistory = this.loadHistoryFromStorage();\n\n\t\t// All restored editors from previous session\n\t\t// in reverse editor from least to most recently\n\t\t// used.\n\t\tconst openedEditorsLru = [...this.editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)].reverse();\n\n\t\t// We want to merge the opened editors from the last\n\t\t// session with the stored editors from the last\n\t\t// session. Because not all editors can be serialised\n\t\t// we want to make sure to include all opened editors\n\t\t// too.\n\t\t// Opened editors should always be first in the history\n\n\t\tconst handledEditors = new Set<string /* resource + editorId */>();\n\n\t\t// Add all opened editors first\n\t\tfor (const { editor } of openedEditorsLru) {\n\t\t\tif (!this.includeInHistory(editor)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Add into history\n\t\t\tthis.addToHistory(editor);\n\n\t\t\t// Remember as added\n\t\t\tif (editor.resource) {\n\t\t\t\thandledEditors.add(`${editor.resource.toString()}/${editor.editorId}`);\n\t\t\t}\n\t\t}\n\n\t\t// Add remaining from storage if not there already\n\t\t// We check on resource and `editorId` (from `override`)\n\t\t// to figure out if the editor has been already added.\n\t\tfor (const editor of storedEditorHistory) {\n\t\t\tif (!handledEditors.has(`${editor.resource.toString()}/${editor.options?.override}`)) {\n\t\t\t\tthis.addToHistory(editor, false /* at the end */);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate loadHistoryFromStorage(): Array<IResourceEditorInput> {\n\t\tconst entries: IResourceEditorInput[] = [];\n\n\t\tconst entriesRaw = this.storageService.get(HistoryService.HISTORY_STORAGE_KEY, StorageScope.WORKSPACE);\n\t\tif (entriesRaw) {\n\t\t\ttry {\n\t\t\t\tconst entriesParsed: ISerializedEditorHistoryEntry[] = JSON.parse(entriesRaw);\n\t\t\t\tfor (const entryParsed of entriesParsed) {\n\t\t\t\t\tif (!entryParsed.editor || !entryParsed.editor.resource) {\n\t\t\t\t\t\tcontinue; // unexpected data format\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tentries.push({\n\t\t\t\t\t\t\t...entryParsed.editor,\n\t\t\t\t\t\t\tresource: typeof entryParsed.editor.resource === 'string' ?\n\t\t\t\t\t\t\t\tURI.parse(entryParsed.editor.resource) :  \t//  from 1.67.x: URI is stored efficiently as URI.toString()\n\t\t\t\t\t\t\t\tURI.from(entryParsed.editor.resource)\t\t// until 1.66.x: URI was stored very verbose as URI.toJSON()\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tonUnexpectedError(error); // do not fail entire history when one entry fails\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tonUnexpectedError(error); // https://github.com/microsoft/vscode/issues/99075\n\t\t\t}\n\t\t}\n\n\t\treturn entries;\n\t}\n\n\tprivate saveState(): void {\n\t\tif (!this.history) {\n\t\t\treturn; // nothing to save because history was not used\n\t\t}\n\n\t\tconst entries: ISerializedEditorHistoryEntry[] = [];\n\t\tfor (const editor of this.history) {\n\t\t\tif (isEditorInput(editor) || !isResourceEditorInput(editor)) {\n\t\t\t\tcontinue; // only save resource editor inputs\n\t\t\t}\n\n\t\t\tentries.push({\n\t\t\t\teditor: {\n\t\t\t\t\t...editor,\n\t\t\t\t\tresource: editor.resource.toString()\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.storageService.store(HistoryService.HISTORY_STORAGE_KEY, JSON.stringify(entries), StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t}\n\n\t//#endregion\n\n\t//#region Last Active Workspace/File\n\n\tgetLastActiveWorkspaceRoot(schemeFilter?: string): URI | undefined {\n\n\t\t// No Folder: return early\n\t\tconst folders = this.contextService.getWorkspace().folders;\n\t\tif (folders.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Single Folder: return early\n\t\tif (folders.length === 1) {\n\t\t\tconst resource = folders[0].uri;\n\t\t\tif (!schemeFilter || resource.scheme === schemeFilter) {\n\t\t\t\treturn resource;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Multiple folders: find the last active one\n\t\tfor (const input of this.getHistory()) {\n\t\t\tif (isEditorInput(input)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (schemeFilter && input.resource.scheme !== schemeFilter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst resourceWorkspace = this.contextService.getWorkspaceFolder(input.resource);\n\t\t\tif (resourceWorkspace) {\n\t\t\t\treturn resourceWorkspace.uri;\n\t\t\t}\n\t\t}\n\n\t\t// Fallback to first workspace matching scheme filter if any\n\t\tfor (const folder of folders) {\n\t\t\tconst resource = folder.uri;\n\t\t\tif (!schemeFilter || resource.scheme === schemeFilter) {\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetLastActiveFile(filterByScheme: string): URI | undefined {\n\t\tfor (const input of this.getHistory()) {\n\t\t\tlet resource: URI | undefined;\n\t\t\tif (isEditorInput(input)) {\n\t\t\t\tresource = EditorResourceAccessor.getOriginalUri(input, { filterByScheme });\n\t\t\t} else {\n\t\t\t\tresource = input.resource;\n\t\t\t}\n\n\t\t\tif (resource?.scheme === filterByScheme) {\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t//#endregion\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tfor (const [, stack] of this.editorGroupScopedNavigationStacks) {\n\t\t\tstack.disposable.dispose();\n\t\t}\n\n\t\tfor (const [, editors] of this.editorScopedNavigationStacks) {\n\t\t\tfor (const [, stack] of editors) {\n\t\t\t\tstack.disposable.dispose();\n\t\t\t}\n\t\t}\n\t}\n}\n\nregisterSingleton(IHistoryService, HistoryService, InstantiationType.Eager);\n\nclass EditorSelectionState {\n\n\tconstructor(\n\t\tprivate readonly editorIdentifier: IEditorIdentifier,\n\t\treadonly selection: IEditorPaneSelection | undefined,\n\t\tprivate readonly reason: EditorPaneSelectionChangeReason | undefined\n\t) { }\n\n\tjustifiesNewNavigationEntry(other: EditorSelectionState): boolean {\n\t\tif (this.editorIdentifier.groupId !== other.editorIdentifier.groupId) {\n\t\t\treturn true; // different group\n\t\t}\n\n\t\tif (!this.editorIdentifier.editor.matches(other.editorIdentifier.editor)) {\n\t\t\treturn true; // different editor\n\t\t}\n\n\t\tif (!this.selection || !other.selection) {\n\t\t\treturn true; // unknown selections\n\t\t}\n\n\t\tconst result = this.selection.compare(other.selection);\n\n\t\tif (result === EditorPaneSelectionCompareResult.SIMILAR && (other.reason === EditorPaneSelectionChangeReason.NAVIGATION || other.reason === EditorPaneSelectionChangeReason.JUMP)) {\n\t\t\t// let navigation sources win even if the selection is `SIMILAR`\n\t\t\t// (e.g. \"Go to definition\" should add a history entry)\n\t\t\treturn true;\n\t\t}\n\n\t\treturn result === EditorPaneSelectionCompareResult.DIFFERENT;\n\t}\n}\n\ninterface IEditorNavigationStacks extends IDisposable {\n\treadonly onDidChange: Event<void>;\n\n\tcanGoForward(filter?: GoFilter): boolean;\n\tgoForward(filter?: GoFilter): Promise<void>;\n\tcanGoBack(filter?: GoFilter): boolean;\n\tgoBack(filter?: GoFilter): Promise<void>;\n\tgoPrevious(filter?: GoFilter): Promise<void>;\n\tcanGoLast(filter?: GoFilter): boolean;\n\tgoLast(filter?: GoFilter): Promise<void>;\n\n\thandleActiveEditorChange(editorPane?: IEditorPane): void;\n\thandleActiveEditorSelectionChange(editorPane: IEditorPaneWithSelection, event: IEditorPaneSelectionChangeEvent): void;\n\n\tclear(): void;\n\tremove(arg1: EditorInput | FileChangesEvent | FileOperationEvent | GroupIdentifier): void;\n\tmove(event: FileOperationEvent): void;\n}\n\nclass EditorNavigationStacks extends Disposable implements IEditorNavigationStacks {\n\n\tprivate readonly selectionsStack = this._register(this.instantiationService.createInstance(EditorNavigationStack, GoFilter.NONE, this.scope));\n\tprivate readonly editsStack = this._register(this.instantiationService.createInstance(EditorNavigationStack, GoFilter.EDITS, this.scope));\n\tprivate readonly navigationsStack = this._register(this.instantiationService.createInstance(EditorNavigationStack, GoFilter.NAVIGATION, this.scope));\n\n\tprivate readonly stacks: EditorNavigationStack[] = [\n\t\tthis.selectionsStack,\n\t\tthis.editsStack,\n\t\tthis.navigationsStack\n\t];\n\n\treadonly onDidChange = Event.any(\n\t\tthis.selectionsStack.onDidChange,\n\t\tthis.editsStack.onDidChange,\n\t\tthis.navigationsStack.onDidChange\n\t);\n\n\tconstructor(\n\t\tprivate readonly scope: GoScope,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t}\n\n\tcanGoForward(filter?: GoFilter): boolean {\n\t\treturn this.getStack(filter).canGoForward();\n\t}\n\n\tgoForward(filter?: GoFilter): Promise<void> {\n\t\treturn this.getStack(filter).goForward();\n\t}\n\n\tcanGoBack(filter?: GoFilter): boolean {\n\t\treturn this.getStack(filter).canGoBack();\n\t}\n\n\tgoBack(filter?: GoFilter): Promise<void> {\n\t\treturn this.getStack(filter).goBack();\n\t}\n\n\tgoPrevious(filter?: GoFilter): Promise<void> {\n\t\treturn this.getStack(filter).goPrevious();\n\t}\n\n\tcanGoLast(filter?: GoFilter): boolean {\n\t\treturn this.getStack(filter).canGoLast();\n\t}\n\n\tgoLast(filter?: GoFilter): Promise<void> {\n\t\treturn this.getStack(filter).goLast();\n\t}\n\n\tprivate getStack(filter = GoFilter.NONE): EditorNavigationStack {\n\t\tswitch (filter) {\n\t\t\tcase GoFilter.NONE: return this.selectionsStack;\n\t\t\tcase GoFilter.EDITS: return this.editsStack;\n\t\t\tcase GoFilter.NAVIGATION: return this.navigationsStack;\n\t\t}\n\t}\n\n\thandleActiveEditorChange(editorPane?: IEditorPane): void {\n\n\t\t// Always send to selections navigation stack\n\t\tthis.selectionsStack.notifyNavigation(editorPane);\n\t}\n\n\thandleActiveEditorSelectionChange(editorPane: IEditorPaneWithSelection, event: IEditorPaneSelectionChangeEvent): void {\n\t\tconst previous = this.selectionsStack.current;\n\n\t\t// Always send to selections navigation stack\n\t\tthis.selectionsStack.notifyNavigation(editorPane, event);\n\n\t\t// Check for edits\n\t\tif (event.reason === EditorPaneSelectionChangeReason.EDIT) {\n\t\t\tthis.editsStack.notifyNavigation(editorPane, event);\n\t\t}\n\n\t\t// Check for navigations\n\t\t//\n\t\t// Note: ignore if selections navigation stack is navigating because\n\t\t// in that case we do not want to receive repeated entries in\n\t\t// the navigation stack.\n\t\telse if (\n\t\t\t(event.reason === EditorPaneSelectionChangeReason.NAVIGATION || event.reason === EditorPaneSelectionChangeReason.JUMP) &&\n\t\t\t!this.selectionsStack.isNavigating()\n\t\t) {\n\n\t\t\t// A \"JUMP\" navigation selection change always has a source and\n\t\t\t// target. As such, we add the previous entry of the selections\n\t\t\t// navigation stack so that our navigation stack receives both\n\t\t\t// entries unless the user is currently navigating.\n\n\t\t\tif (event.reason === EditorPaneSelectionChangeReason.JUMP && !this.navigationsStack.isNavigating()) {\n\t\t\t\tif (previous) {\n\t\t\t\t\tthis.navigationsStack.addOrReplace(previous.groupId, previous.editor, previous.selection);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.navigationsStack.notifyNavigation(editorPane, event);\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tfor (const stack of this.stacks) {\n\t\t\tstack.clear();\n\t\t}\n\t}\n\n\tremove(arg1: EditorInput | FileChangesEvent | FileOperationEvent | GroupIdentifier): void {\n\t\tfor (const stack of this.stacks) {\n\t\t\tstack.remove(arg1);\n\t\t}\n\t}\n\n\tmove(event: FileOperationEvent): void {\n\t\tfor (const stack of this.stacks) {\n\t\t\tstack.move(event);\n\t\t}\n\t}\n}\n\nclass NoOpEditorNavigationStacks implements IEditorNavigationStacks {\n\tonDidChange = Event.None;\n\n\tcanGoForward(): boolean { return false; }\n\tasync goForward(): Promise<void> { }\n\tcanGoBack(): boolean { return false; }\n\tasync goBack(): Promise<void> { }\n\tasync goPrevious(): Promise<void> { }\n\tcanGoLast(): boolean { return false; }\n\tasync goLast(): Promise<void> { }\n\n\thandleActiveEditorChange(): void { }\n\thandleActiveEditorSelectionChange(): void { }\n\n\tclear(): void { }\n\tremove(): void { }\n\tmove(): void { }\n\n\tdispose(): void { }\n}\n\ninterface IEditorNavigationStackEntry {\n\tgroupId: GroupIdentifier;\n\teditor: EditorInput | IResourceEditorInput;\n\tselection?: IEditorPaneSelection;\n}\n\nexport class EditorNavigationStack extends Disposable {\n\n\tprivate static readonly MAX_STACK_SIZE = 50;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate readonly mapEditorToDisposable = new Map<EditorInput, DisposableStore>();\n\tprivate readonly mapGroupToDisposable = new Map<GroupIdentifier, IDisposable>();\n\n\tprivate readonly editorHelper = this.instantiationService.createInstance(EditorHelper);\n\n\tprivate stack: IEditorNavigationStackEntry[] = [];\n\n\tprivate index = -1;\n\tprivate previousIndex = -1;\n\n\tprivate navigating: boolean = false;\n\n\tprivate currentSelectionState: EditorSelectionState | undefined = undefined;\n\n\tget current(): IEditorNavigationStackEntry | undefined {\n\t\treturn this.stack[this.index];\n\t}\n\n\tprivate set current(entry: IEditorNavigationStackEntry | undefined) {\n\t\tif (entry) {\n\t\t\tthis.stack[this.index] = entry;\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprivate readonly filter: GoFilter,\n\t\tprivate readonly scope: GoScope,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.onDidChange(() => this.traceStack()));\n\t\tthis._register(this.logService.onDidChangeLogLevel(() => this.traceStack()));\n\t}\n\n\tprivate traceStack(): void {\n\t\tif (this.logService.getLevel() !== LogLevel.Trace) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst entryLabels: string[] = [];\n\t\tfor (const entry of this.stack) {\n\t\t\tif (typeof entry.selection?.log === 'function') {\n\t\t\t\tentryLabels.push(`- group: ${entry.groupId}, editor: ${entry.editor.resource?.toString()}, selection: ${entry.selection.log()}`);\n\t\t\t} else {\n\t\t\t\tentryLabels.push(`- group: ${entry.groupId}, editor: ${entry.editor.resource?.toString()}, selection: <none>`);\n\t\t\t}\n\t\t}\n\n\t\tif (entryLabels.length === 0) {\n\t\t\tthis.trace(`index: ${this.index}, navigating: ${this.isNavigating()}: <empty>`);\n\t\t} else {\n\t\t\tthis.trace(`index: ${this.index}, navigating: ${this.isNavigating()}\n${entryLabels.join('\\n')}\n\t\t\t`);\n\t\t}\n\t}\n\n\tprivate trace(msg: string, editor: EditorInput | IResourceEditorInput | undefined | null = null, event?: IEditorPaneSelectionChangeEvent): void {\n\t\tif (this.logService.getLevel() !== LogLevel.Trace) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet filterLabel: string;\n\t\tswitch (this.filter) {\n\t\t\tcase GoFilter.NONE: filterLabel = 'global';\n\t\t\t\tbreak;\n\t\t\tcase GoFilter.EDITS: filterLabel = 'edits';\n\t\t\t\tbreak;\n\t\t\tcase GoFilter.NAVIGATION: filterLabel = 'navigation';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tlet scopeLabel: string;\n\t\tswitch (this.scope) {\n\t\t\tcase GoScope.DEFAULT: scopeLabel = 'default';\n\t\t\t\tbreak;\n\t\t\tcase GoScope.EDITOR_GROUP: scopeLabel = 'editorGroup';\n\t\t\t\tbreak;\n\t\t\tcase GoScope.EDITOR: scopeLabel = 'editor';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (editor !== null) {\n\t\t\tthis.logService.trace(`[History stack ${filterLabel}-${scopeLabel}]: ${msg} (editor: ${editor?.resource?.toString()}, event: ${this.traceEvent(event)})`);\n\t\t} else {\n\t\t\tthis.logService.trace(`[History stack ${filterLabel}-${scopeLabel}]: ${msg}`);\n\t\t}\n\t}\n\n\tprivate traceEvent(event?: IEditorPaneSelectionChangeEvent): string {\n\t\tif (!event) {\n\t\t\treturn '<none>';\n\t\t}\n\n\t\tswitch (event.reason) {\n\t\t\tcase EditorPaneSelectionChangeReason.EDIT: return 'edit';\n\t\t\tcase EditorPaneSelectionChangeReason.NAVIGATION: return 'navigation';\n\t\t\tcase EditorPaneSelectionChangeReason.JUMP: return 'jump';\n\t\t\tcase EditorPaneSelectionChangeReason.PROGRAMMATIC: return 'programmatic';\n\t\t\tcase EditorPaneSelectionChangeReason.USER: return 'user';\n\t\t}\n\t}\n\n\tprivate registerGroupListeners(groupId: GroupIdentifier): void {\n\t\tif (!this.mapGroupToDisposable.has(groupId)) {\n\t\t\tconst group = this.editorGroupService.getGroup(groupId);\n\t\t\tif (group) {\n\t\t\t\tthis.mapGroupToDisposable.set(groupId, group.onWillMoveEditor(e => this.onWillMoveEditor(e)));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onWillMoveEditor(e: IEditorWillMoveEvent): void {\n\t\tthis.trace('onWillMoveEditor()', e.editor);\n\n\t\tif (this.scope === GoScope.EDITOR_GROUP) {\n\t\t\treturn; // ignore move events if our scope is group based\n\t\t}\n\n\t\tfor (const entry of this.stack) {\n\t\t\tif (entry.groupId !== e.groupId) {\n\t\t\t\tcontinue; // not in the group that reported the event\n\t\t\t}\n\n\t\t\tif (!this.editorHelper.matchesEditor(e.editor, entry.editor)) {\n\t\t\t\tcontinue; // not the editor this event is about\n\t\t\t}\n\n\t\t\t// Update to target group\n\t\t\tentry.groupId = e.target;\n\t\t}\n\t}\n\n\t//#region Stack Mutation\n\n\tnotifyNavigation(editorPane: IEditorPane | undefined, event?: IEditorPaneSelectionChangeEvent): void {\n\t\tthis.trace('notifyNavigation()', editorPane?.input, event);\n\n\t\tconst isSelectionAwareEditorPane = isEditorPaneWithSelection(editorPane);\n\t\tconst hasValidEditor = editorPane?.group && editorPane.input && !editorPane.input.isDisposed();\n\n\t\t// Treat editor changes that happen as part of stack navigation specially\n\t\t// we do not want to add a new stack entry as a matter of navigating the\n\t\t// stack but we need to keep our currentEditorSelectionState up to date\n\t\t// with the navigtion that occurs.\n\t\tif (this.navigating) {\n\t\t\tthis.trace(`notifyNavigation() ignoring (navigating)`, editorPane?.input, event);\n\n\t\t\tif (isSelectionAwareEditorPane && hasValidEditor) {\n\t\t\t\tthis.trace('notifyNavigation() updating current selection state', editorPane?.input, event);\n\n\t\t\t\tthis.currentSelectionState = new EditorSelectionState({ groupId: editorPane.group.id, editor: editorPane.input }, editorPane.getSelection(), event?.reason);\n\t\t\t} else {\n\t\t\t\tthis.trace('notifyNavigation() dropping current selection state', editorPane?.input, event);\n\n\t\t\t\tthis.currentSelectionState = undefined; // we navigated to a non-selection aware or disposed editor\n\t\t\t}\n\t\t}\n\n\t\t// Normal navigation not part of stack navigation\n\t\telse {\n\t\t\tthis.trace(`notifyNavigation() not ignoring`, editorPane?.input, event);\n\n\t\t\t// Navigation inside selection aware editor\n\t\t\tif (isSelectionAwareEditorPane && hasValidEditor) {\n\t\t\t\tthis.onSelectionAwareEditorNavigation(editorPane.group.id, editorPane.input, editorPane.getSelection(), event);\n\t\t\t}\n\n\t\t\t// Navigation to non-selection aware or disposed editor\n\t\t\telse {\n\t\t\t\tthis.currentSelectionState = undefined; // at this time we have no active selection aware editor\n\n\t\t\t\tif (hasValidEditor) {\n\t\t\t\t\tthis.onNonSelectionAwareEditorNavigation(editorPane.group.id, editorPane.input);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onSelectionAwareEditorNavigation(groupId: GroupIdentifier, editor: EditorInput, selection: IEditorPaneSelection | undefined, event?: IEditorPaneSelectionChangeEvent): void {\n\t\tif (this.current?.groupId === groupId && !selection && this.editorHelper.matchesEditor(this.current.editor, editor)) {\n\t\t\treturn; // do not push same editor input again of same group if we have no valid selection\n\t\t}\n\n\t\tthis.trace('onSelectionAwareEditorNavigation()', editor, event);\n\n\t\tconst stateCandidate = new EditorSelectionState({ groupId, editor }, selection, event?.reason);\n\n\t\t// Add to stack if we dont have a current state or this new state justifies a push\n\t\tif (!this.currentSelectionState || this.currentSelectionState.justifiesNewNavigationEntry(stateCandidate)) {\n\t\t\tthis.doAdd(groupId, editor, stateCandidate.selection);\n\t\t}\n\n\t\t// Otherwise we replace the current stack entry with this one\n\t\telse {\n\t\t\tthis.doReplace(groupId, editor, stateCandidate.selection);\n\t\t}\n\n\t\t// Update our current navigation editor state\n\t\tthis.currentSelectionState = stateCandidate;\n\t}\n\n\tprivate onNonSelectionAwareEditorNavigation(groupId: GroupIdentifier, editor: EditorInput): void {\n\t\tif (this.current?.groupId === groupId && this.editorHelper.matchesEditor(this.current.editor, editor)) {\n\t\t\treturn; // do not push same editor input again of same group\n\t\t}\n\n\t\tthis.trace('onNonSelectionAwareEditorNavigation()', editor);\n\n\t\tthis.doAdd(groupId, editor);\n\t}\n\n\tprivate doAdd(groupId: GroupIdentifier, editor: EditorInput | IResourceEditorInput, selection?: IEditorPaneSelection): void {\n\t\tif (!this.navigating) {\n\t\t\tthis.addOrReplace(groupId, editor, selection);\n\t\t}\n\t}\n\n\tprivate doReplace(groupId: GroupIdentifier, editor: EditorInput | IResourceEditorInput, selection?: IEditorPaneSelection): void {\n\t\tif (!this.navigating) {\n\t\t\tthis.addOrReplace(groupId, editor, selection, true /* force replace */);\n\t\t}\n\t}\n\n\taddOrReplace(groupId: GroupIdentifier, editorCandidate: EditorInput | IResourceEditorInput, selection?: IEditorPaneSelection, forceReplace?: boolean): void {\n\n\t\t// Ensure we listen to changes in group\n\t\tthis.registerGroupListeners(groupId);\n\n\t\t// Check whether to replace an existing entry or not\n\t\tlet replace = false;\n\t\tif (this.current) {\n\t\t\tif (forceReplace) {\n\t\t\t\treplace = true; // replace if we are forced to\n\t\t\t} else if (this.shouldReplaceStackEntry(this.current, { groupId, editor: editorCandidate, selection })) {\n\t\t\t\treplace = true; // replace if the group & input is the same and selection indicates as such\n\t\t\t}\n\t\t}\n\n\t\tconst editor = this.editorHelper.preferResourceEditorInput(editorCandidate);\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (replace) {\n\t\t\tthis.trace('replace()', editor);\n\t\t} else {\n\t\t\tthis.trace('add()', editor);\n\t\t}\n\n\t\tconst newStackEntry: IEditorNavigationStackEntry = { groupId, editor, selection };\n\n\t\t// Replace at current position\n\t\tconst removedEntries: IEditorNavigationStackEntry[] = [];\n\t\tif (replace) {\n\t\t\tif (this.current) {\n\t\t\t\tremovedEntries.push(this.current);\n\t\t\t}\n\t\t\tthis.current = newStackEntry;\n\t\t}\n\n\t\t// Add to stack at current position\n\t\telse {\n\n\t\t\t// If we are not at the end of history, we remove anything after\n\t\t\tif (this.stack.length > this.index + 1) {\n\t\t\t\tfor (let i = this.index + 1; i < this.stack.length; i++) {\n\t\t\t\t\tremovedEntries.push(this.stack[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.stack = this.stack.slice(0, this.index + 1);\n\t\t\t}\n\n\t\t\t// Insert entry at index\n\t\t\tthis.stack.splice(this.index + 1, 0, newStackEntry);\n\n\t\t\t// Check for limit\n\t\t\tif (this.stack.length > EditorNavigationStack.MAX_STACK_SIZE) {\n\t\t\t\tremovedEntries.push(this.stack.shift()!); // remove first\n\t\t\t\tif (this.previousIndex >= 0) {\n\t\t\t\t\tthis.previousIndex--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setIndex(this.index + 1, true /* skip event, we fire it later */);\n\t\t\t}\n\t\t}\n\n\t\t// Clear editor listeners from removed entries\n\t\tfor (const removedEntry of removedEntries) {\n\t\t\tthis.editorHelper.clearOnEditorDispose(removedEntry.editor, this.mapEditorToDisposable);\n\t\t}\n\n\t\t// Remove this from the stack unless the stack input is a resource\n\t\t// that can easily be restored even when the input gets disposed\n\t\tif (isEditorInput(editor)) {\n\t\t\tthis.editorHelper.onEditorDispose(editor, () => this.remove(editor), this.mapEditorToDisposable);\n\t\t}\n\n\t\t// Event\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate shouldReplaceStackEntry(entry: IEditorNavigationStackEntry, candidate: IEditorNavigationStackEntry): boolean {\n\t\tif (entry.groupId !== candidate.groupId) {\n\t\t\treturn false; // different group\n\t\t}\n\n\t\tif (!this.editorHelper.matchesEditor(entry.editor, candidate.editor)) {\n\t\t\treturn false; // different editor\n\t\t}\n\n\t\tif (!entry.selection) {\n\t\t\treturn true; // always replace when we have no specific selection yet\n\t\t}\n\n\t\tif (!candidate.selection) {\n\t\t\treturn false; // otherwise, prefer to keep existing specific selection over new unspecific one\n\t\t}\n\n\t\t// Finally, replace when selections are considered identical\n\t\treturn entry.selection.compare(candidate.selection) === EditorPaneSelectionCompareResult.IDENTICAL;\n\t}\n\n\tmove(event: FileOperationEvent): void {\n\t\tif (event.isOperation(FileOperation.MOVE)) {\n\t\t\tfor (const entry of this.stack) {\n\t\t\t\tif (this.editorHelper.matchesEditor(event, entry.editor)) {\n\t\t\t\t\tentry.editor = { resource: event.target.resource };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tremove(arg1: EditorInput | FileChangesEvent | FileOperationEvent | GroupIdentifier): void {\n\n\t\t// Remove all stack entries that match `arg1`\n\t\tthis.stack = this.stack.filter(entry => {\n\t\t\tconst matches = typeof arg1 === 'number' ? entry.groupId === arg1 : this.editorHelper.matchesEditor(arg1, entry.editor);\n\n\t\t\t// Cleanup any listeners associated with the input when removing\n\t\t\tif (matches) {\n\t\t\t\tthis.editorHelper.clearOnEditorDispose(entry.editor, this.mapEditorToDisposable);\n\t\t\t}\n\n\t\t\treturn !matches;\n\t\t});\n\n\t\t// Given we just removed entries, we need to make sure\n\t\t// to remove entries that are now identical and next\n\t\t// to each other to prevent no-op navigations.\n\t\tthis.flatten();\n\n\t\t// Reset indeces\n\t\tthis.index = this.stack.length - 1;\n\t\tthis.previousIndex = -1;\n\n\t\t// Clear group listener\n\t\tif (typeof arg1 === 'number') {\n\t\t\tthis.mapGroupToDisposable.get(arg1)?.dispose();\n\t\t\tthis.mapGroupToDisposable.delete(arg1);\n\t\t}\n\n\t\t// Event\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate flatten(): void {\n\t\tconst flattenedStack: IEditorNavigationStackEntry[] = [];\n\n\t\tlet previousEntry: IEditorNavigationStackEntry | undefined = undefined;\n\t\tfor (const entry of this.stack) {\n\t\t\tif (previousEntry && this.shouldReplaceStackEntry(entry, previousEntry)) {\n\t\t\t\tcontinue; // skip over entry when it is considered the same\n\t\t\t}\n\n\t\t\tpreviousEntry = entry;\n\t\t\tflattenedStack.push(entry);\n\t\t}\n\n\t\tthis.stack = flattenedStack;\n\t}\n\n\tclear(): void {\n\t\tthis.index = -1;\n\t\tthis.previousIndex = -1;\n\t\tthis.stack.splice(0);\n\n\t\tfor (const [, disposable] of this.mapEditorToDisposable) {\n\t\t\tdispose(disposable);\n\t\t}\n\t\tthis.mapEditorToDisposable.clear();\n\n\t\tfor (const [, disposable] of this.mapGroupToDisposable) {\n\t\t\tdispose(disposable);\n\t\t}\n\t\tthis.mapGroupToDisposable.clear();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Navigation\n\n\tcanGoForward(): boolean {\n\t\treturn this.stack.length > this.index + 1;\n\t}\n\n\tasync goForward(): Promise<void> {\n\t\tconst navigated = await this.maybeGoCurrent();\n\t\tif (navigated) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.canGoForward()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setIndex(this.index + 1);\n\t\treturn this.navigate();\n\t}\n\n\tcanGoBack(): boolean {\n\t\treturn this.index > 0;\n\t}\n\n\tasync goBack(): Promise<void> {\n\t\tconst navigated = await this.maybeGoCurrent();\n\t\tif (navigated) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.canGoBack()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setIndex(this.index - 1);\n\t\treturn this.navigate();\n\t}\n\n\tasync goPrevious(): Promise<void> {\n\t\tconst navigated = await this.maybeGoCurrent();\n\t\tif (navigated) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If we never navigated, just go back\n\t\tif (this.previousIndex === -1) {\n\t\t\treturn this.goBack();\n\t\t}\n\n\t\t// Otherwise jump to previous stack entry\n\t\tthis.setIndex(this.previousIndex);\n\t\treturn this.navigate();\n\t}\n\n\tcanGoLast(): boolean {\n\t\treturn this.stack.length > 0;\n\t}\n\n\tasync goLast(): Promise<void> {\n\t\tif (!this.canGoLast()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setIndex(this.stack.length - 1);\n\t\treturn this.navigate();\n\t}\n\n\tprivate async maybeGoCurrent(): Promise<boolean> {\n\n\t\t// When this navigation stack works with a specific\n\t\t// filter where not every selection change is added\n\t\t// to the stack, we want to first reveal the current\n\t\t// selection before attempting to navigate in the\n\t\t// stack.\n\n\t\tif (this.filter === GoFilter.NONE) {\n\t\t\treturn false; // only applies when  we are a filterd stack\n\t\t}\n\n\t\tif (this.isCurrentSelectionActive()) {\n\t\t\treturn false; // we are at the current navigation stop\n\t\t}\n\n\t\t// Go to current selection\n\t\tawait this.navigate();\n\n\t\treturn true;\n\t}\n\n\tprivate isCurrentSelectionActive(): boolean {\n\t\tif (!this.current?.selection) {\n\t\t\treturn false; // we need a current selection\n\t\t}\n\n\t\tconst pane = this.editorService.activeEditorPane;\n\t\tif (!isEditorPaneWithSelection(pane)) {\n\t\t\treturn false; // we need an active editor pane with selection support\n\t\t}\n\n\t\tif (pane.group?.id !== this.current.groupId) {\n\t\t\treturn false; // we need matching groups\n\t\t}\n\n\t\tif (!pane.input || !this.editorHelper.matchesEditor(pane.input, this.current.editor)) {\n\t\t\treturn false; // we need matching editors\n\t\t}\n\n\t\tconst paneSelection = pane.getSelection();\n\t\tif (!paneSelection) {\n\t\t\treturn false; // we need a selection to compare with\n\t\t}\n\n\t\treturn paneSelection.compare(this.current.selection) === EditorPaneSelectionCompareResult.IDENTICAL;\n\t}\n\n\tprivate setIndex(newIndex: number, skipEvent?: boolean): void {\n\t\tthis.previousIndex = this.index;\n\t\tthis.index = newIndex;\n\n\t\t// Event\n\t\tif (!skipEvent) {\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n\n\tprivate async navigate(): Promise<void> {\n\t\tthis.navigating = true;\n\n\t\ttry {\n\t\t\tif (this.current) {\n\t\t\t\tawait this.doNavigate(this.current);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.navigating = false;\n\t\t}\n\t}\n\n\tprivate doNavigate(location: IEditorNavigationStackEntry): Promise<IEditorPane | undefined> {\n\t\tlet options: IEditorOptions = Object.create(null);\n\n\t\t// Apply selection if any\n\t\tif (location.selection) {\n\t\t\toptions = location.selection.restore(options);\n\t\t}\n\n\t\tif (isEditorInput(location.editor)) {\n\t\t\treturn this.editorService.openEditor(location.editor, options, location.groupId);\n\t\t}\n\n\t\treturn this.editorService.openEditor({\n\t\t\t...location.editor,\n\t\t\toptions: {\n\t\t\t\t...location.editor.options,\n\t\t\t\t...options\n\t\t\t}\n\t\t}, location.groupId);\n\t}\n\n\tisNavigating(): boolean {\n\t\treturn this.navigating;\n\t}\n\n\t//#endregion\n}\n\nclass EditorHelper {\n\n\tconstructor(\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IPathService private readonly pathService: IPathService\n\t) { }\n\n\tpreferResourceEditorInput(editor: EditorInput): EditorInput | IResourceEditorInput;\n\tpreferResourceEditorInput(editor: IResourceEditorInput): IResourceEditorInput | undefined;\n\tpreferResourceEditorInput(editor: EditorInput | IResourceEditorInput): EditorInput | IResourceEditorInput | undefined;\n\tpreferResourceEditorInput(editor: EditorInput | IResourceEditorInput): EditorInput | IResourceEditorInput | undefined {\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(editor);\n\n\t\t// For now, only prefer well known schemes that we control to prevent\n\t\t// issues such as https://github.com/microsoft/vscode/issues/85204\n\t\t// from being used as resource inputs\n\t\t// resource inputs survive editor disposal and as such are a lot more\n\t\t// durable across editor changes and restarts\n\t\tconst hasValidResourceEditorInputScheme =\n\t\t\tresource?.scheme === Schemas.file ||\n\t\t\tresource?.scheme === Schemas.vscodeRemote ||\n\t\t\tresource?.scheme === Schemas.vscodeUserData ||\n\t\t\tresource?.scheme === this.pathService.defaultUriScheme;\n\n\t\t// Scheme is valid: prefer the untyped input\n\t\t// over the typed input if possible to keep\n\t\t// the entry across restarts\n\t\tif (hasValidResourceEditorInputScheme) {\n\t\t\tif (isEditorInput(editor)) {\n\t\t\t\tconst untypedInput = editor.toUntyped();\n\t\t\t\tif (isResourceEditorInput(untypedInput)) {\n\t\t\t\t\treturn untypedInput;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn editor;\n\t\t}\n\n\t\t// Scheme is invalid: allow the editor input\n\t\t// for as long as it is not disposed\n\t\telse {\n\t\t\treturn isEditorInput(editor) ? editor : undefined;\n\t\t}\n\t}\n\n\tmatchesEditor(arg1: EditorInput | IResourceEditorInput | FileChangesEvent | FileOperationEvent, inputB: EditorInput | IResourceEditorInput): boolean {\n\t\tif (arg1 instanceof FileChangesEvent || arg1 instanceof FileOperationEvent) {\n\t\t\tif (isEditorInput(inputB)) {\n\t\t\t\treturn false; // we only support this for `IResourceEditorInputs` that are file based\n\t\t\t}\n\n\t\t\tif (arg1 instanceof FileChangesEvent) {\n\t\t\t\treturn arg1.contains(inputB.resource, FileChangeType.DELETED);\n\t\t\t}\n\n\t\t\treturn this.matchesFile(inputB.resource, arg1);\n\t\t}\n\n\t\tif (isEditorInput(arg1)) {\n\t\t\tif (isEditorInput(inputB)) {\n\t\t\t\treturn arg1.matches(inputB);\n\t\t\t}\n\n\t\t\treturn this.matchesFile(inputB.resource, arg1);\n\t\t}\n\n\t\tif (isEditorInput(inputB)) {\n\t\t\treturn this.matchesFile(arg1.resource, inputB);\n\t\t}\n\n\t\treturn arg1 && inputB && this.uriIdentityService.extUri.isEqual(arg1.resource, inputB.resource);\n\t}\n\n\tmatchesFile(resource: URI, arg2: EditorInput | IResourceEditorInput | FileChangesEvent | FileOperationEvent): boolean {\n\t\tif (arg2 instanceof FileChangesEvent) {\n\t\t\treturn arg2.contains(resource, FileChangeType.DELETED);\n\t\t}\n\n\t\tif (arg2 instanceof FileOperationEvent) {\n\t\t\treturn this.uriIdentityService.extUri.isEqualOrParent(resource, arg2.resource);\n\t\t}\n\n\t\tif (isEditorInput(arg2)) {\n\t\t\tconst inputResource = arg2.resource;\n\t\t\tif (!inputResource) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.lifecycleService.phase >= LifecyclePhase.Restored && !this.fileService.hasProvider(inputResource)) {\n\t\t\t\treturn false; // make sure to only check this when workbench has restored (for https://github.com/microsoft/vscode/issues/48275)\n\t\t\t}\n\n\t\t\treturn this.uriIdentityService.extUri.isEqual(inputResource, resource);\n\t\t}\n\n\t\treturn this.uriIdentityService.extUri.isEqual(arg2?.resource, resource);\n\t}\n\n\tmatchesEditorIdentifier(identifier: IEditorIdentifier, editorPane?: IEditorPane): boolean {\n\t\tif (!editorPane?.group) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (identifier.groupId !== editorPane.group.id) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn editorPane.input ? identifier.editor.matches(editorPane.input) : false;\n\t}\n\n\tonEditorDispose(editor: EditorInput, listener: Function, mapEditorToDispose: Map<EditorInput, DisposableStore>): void {\n\t\tconst toDispose = Event.once(editor.onWillDispose)(() => listener());\n\n\t\tlet disposables = mapEditorToDispose.get(editor);\n\t\tif (!disposables) {\n\t\t\tdisposables = new DisposableStore();\n\t\t\tmapEditorToDispose.set(editor, disposables);\n\t\t}\n\n\t\tdisposables.add(toDispose);\n\t}\n\n\tclearOnEditorDispose(editor: EditorInput | IResourceEditorInput | FileChangesEvent | FileOperationEvent, mapEditorToDispose: Map<EditorInput, DisposableStore>): void {\n\t\tif (!isEditorInput(editor)) {\n\t\t\treturn; // only supported when passing in an actual editor input\n\t\t}\n\n\t\tconst disposables = mapEditorToDispose.get(editor);\n\t\tif (disposables) {\n\t\t\tdispose(disposables);\n\t\t\tmapEditorToDispose.delete(editor);\n\t\t}\n\t}\n}\n\ninterface ISerializedEditorHistoryEntry {\n\teditor: Omit<IResourceEditorInput, 'resource'> & { resource: string };\n}\n\ninterface IRecentlyClosedEditor {\n\teditorId: string | undefined;\n\teditor: IUntypedEditorInput;\n\n\tresource: URI | undefined;\n\tassociatedResources: URI[];\n\n\tindex: number;\n\tsticky: boolean;\n}\n"]}