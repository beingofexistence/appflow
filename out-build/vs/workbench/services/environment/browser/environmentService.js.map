{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/environment/browser/environmentService.ts"],"names":[],"mappings":"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","file":"environmentService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtensionKind, IEnvironmentService, IExtensionHostDebugParams } from 'vs/platform/environment/common/environment';\nimport { IPath } from 'vs/platform/window/common/window';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IWorkbenchConstructionOptions } from 'vs/workbench/browser/web.api';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { memoize } from 'vs/base/common/decorators';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { parseLineAndColumnAware } from 'vs/base/common/extpath';\nimport { LogLevelToString } from 'vs/platform/log/common/log';\nimport { isUndefined } from 'vs/base/common/types';\nimport { refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { EXTENSION_IDENTIFIER_WITH_LOG_REGEX } from 'vs/platform/environment/common/environmentService';\n\nexport const IBrowserWorkbenchEnvironmentService = refineServiceDecorator<IEnvironmentService, IBrowserWorkbenchEnvironmentService>(IEnvironmentService);\n\n/**\n * A subclass of the `IWorkbenchEnvironmentService` to be used only environments\n * where the web API is available (browsers, Electron).\n */\nexport interface IBrowserWorkbenchEnvironmentService extends IWorkbenchEnvironmentService {\n\n\t/**\n\t * Options used to configure the workbench.\n\t */\n\treadonly options?: IWorkbenchConstructionOptions;\n\n\t/**\n\t * Gets whether a resolver extension is expected for the environment.\n\t */\n\treadonly expectsResolverExtension: boolean;\n}\n\nexport class BrowserWorkbenchEnvironmentService implements IBrowserWorkbenchEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t@memoize\n\tget remoteAuthority(): string | undefined { return this.options.remoteAuthority; }\n\n\t@memoize\n\tget expectsResolverExtension(): boolean {\n\t\treturn !!this.options.remoteAuthority?.includes('+') && !this.options.webSocketFactory;\n\t}\n\n\t@memoize\n\tget isBuilt(): boolean { return !!this.productService.commit; }\n\n\t@memoize\n\tget logLevel(): string | undefined {\n\t\tconst logLevelFromPayload = this.payload?.get('logLevel');\n\t\tif (logLevelFromPayload) {\n\t\t\treturn logLevelFromPayload.split(',').find(entry => !EXTENSION_IDENTIFIER_WITH_LOG_REGEX.test(entry));\n\t\t}\n\n\t\treturn this.options.developmentOptions?.logLevel !== undefined ? LogLevelToString(this.options.developmentOptions?.logLevel) : undefined;\n\t}\n\n\tget extensionLogLevel(): [string, string][] | undefined {\n\t\tconst logLevelFromPayload = this.payload?.get('logLevel');\n\t\tif (logLevelFromPayload) {\n\t\t\tconst result: [string, string][] = [];\n\t\t\tfor (const entry of logLevelFromPayload.split(',')) {\n\t\t\t\tconst matches = EXTENSION_IDENTIFIER_WITH_LOG_REGEX.exec(entry);\n\t\t\t\tif (matches && matches[1] && matches[2]) {\n\t\t\t\t\tresult.push([matches[1], matches[2]]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result.length ? result : undefined;\n\t\t}\n\n\t\treturn this.options.developmentOptions?.extensionLogLevel !== undefined ? this.options.developmentOptions?.extensionLogLevel.map(([extension, logLevel]) => ([extension, LogLevelToString(logLevel)])) : undefined;\n\t}\n\n\tget profDurationMarkers(): string[] | undefined {\n\t\tconst profDurationMarkersFromPayload = this.payload?.get('profDurationMarkers');\n\t\tif (profDurationMarkersFromPayload) {\n\t\t\tconst result: string[] = [];\n\t\t\tfor (const entry of profDurationMarkersFromPayload.split(',')) {\n\t\t\t\tresult.push(entry);\n\t\t\t}\n\n\t\t\treturn result.length === 2 ? result : undefined;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget windowLogsPath(): URI { return this.logsHome; }\n\n\t@memoize\n\tget logFile(): URI { return joinPath(this.windowLogsPath, 'window.log'); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return URI.file('/User').with({ scheme: Schemas.vscodeUserData }); }\n\n\t@memoize\n\tget argvResource(): URI { return joinPath(this.userRoamingDataHome, 'argv.json'); }\n\n\t@memoize\n\tget cacheHome(): URI { return joinPath(this.userRoamingDataHome, 'caches'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return joinPath(this.userRoamingDataHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget localHistoryHome(): URI { return joinPath(this.userRoamingDataHome, 'History'); }\n\n\t@memoize\n\tget stateResource(): URI { return joinPath(this.userRoamingDataHome, 'State', 'storage.json'); }\n\n\t/**\n\t * In Web every workspace can potentially have scoped user-data\n\t * and/or extensions and if Sync state is shared then it can make\n\t * Sync error prone - say removing extensions from another workspace.\n\t * Hence scope Sync state per workspace. Sync scoped to a workspace\n\t * is capable of handling opening same workspace in multiple windows.\n\t */\n\t@memoize\n\tget userDataSyncHome(): URI { return joinPath(this.userRoamingDataHome, 'sync', this.workspaceId); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return undefined; }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return joinPath(this.userRoamingDataHome, 'Workspaces'); }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return joinPath(this.userRoamingDataHome, 'machineid'); }\n\n\t@memoize\n\tget extHostLogsPath(): URI { return joinPath(this.logsHome, 'exthost'); }\n\n\t@memoize\n\tget extHostTelemetryLogFile(): URI {\n\t\treturn joinPath(this.extHostLogsPath, 'extensionTelemetry.log');\n\t}\n\n\tprivate extensionHostDebugEnvironment: IExtensionHostDebugEnvironment | undefined = undefined;\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.params;\n\t}\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.isExtensionDevelopment;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.extensionDevelopmentLocationURI;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationKind(): ExtensionKind[] | undefined {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.extensionDevelopmentKind;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.extensionTestsLocationURI;\n\t}\n\n\t@memoize\n\tget extensionEnabledProposedApi(): string[] | undefined {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.extensionEnabledProposedApi;\n\t}\n\n\t@memoize\n\tget debugRenderer(): boolean {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.debugRenderer;\n\t}\n\n\t@memoize\n\tget enableSmokeTestDriver() { return this.options.developmentOptions?.enableSmokeTestDriver; }\n\n\t@memoize\n\tget disableExtensions() { return this.payload?.get('disableExtensions') === 'true'; }\n\n\t@memoize\n\tget enableExtensions() { return this.options.enabledExtensions; }\n\n\t@memoize\n\tget webviewExternalEndpoint(): string {\n\t\tconst endpoint = this.options.webviewEndpoint\n\t\t\t|| this.productService.webviewContentExternalBaseUrlTemplate\n\t\t\t|| 'https://{{uuid}}.vscode-cdn.net/{{quality}}/{{commit}}/out/vs/workbench/contrib/webview/browser/pre/';\n\n\t\tconst webviewExternalEndpointCommit = this.payload?.get('webviewExternalEndpointCommit');\n\t\treturn endpoint\n\t\t\t.replace('{{commit}}', webviewExternalEndpointCommit ?? this.productService.commit ?? 'ef65ac1ba57f57f2a3961bfe94aa20481caca4c6')\n\t\t\t.replace('{{quality}}', (webviewExternalEndpointCommit ? 'insider' : this.productService.quality) ?? 'insider');\n\t}\n\n\t@memoize\n\tget extensionTelemetryLogResource(): URI { return joinPath(this.logsHome, 'extensionTelemetry.log'); }\n\n\t@memoize\n\tget disableTelemetry(): boolean { return false; }\n\n\t@memoize\n\tget verbose(): boolean { return this.payload?.get('verbose') === 'true'; }\n\n\t@memoize\n\tget logExtensionHostCommunication(): boolean { return this.payload?.get('logExtensionHostCommunication') === 'true'; }\n\n\t@memoize\n\tget skipReleaseNotes(): boolean { return this.payload?.get('skipReleaseNotes') === 'true'; }\n\n\t@memoize\n\tget skipWelcome(): boolean { return this.payload?.get('skipWelcome') === 'true'; }\n\n\t@memoize\n\tget disableWorkspaceTrust(): boolean { return !this.options.enableWorkspaceTrust; }\n\n\t@memoize\n\tget lastActiveProfile(): string | undefined { return this.payload?.get('lastActiveProfile'); }\n\n\teditSessionId: string | undefined = this.options.editSessionId;\n\n\tprivate payload: Map<string, string> | undefined;\n\n\tconstructor(\n\t\tprivate readonly workspaceId: string,\n\t\treadonly logsHome: URI,\n\t\treadonly options: IWorkbenchConstructionOptions,\n\t\tprivate readonly productService: IProductService\n\t) {\n\t\tif (options.workspaceProvider && Array.isArray(options.workspaceProvider.payload)) {\n\t\t\ttry {\n\t\t\t\tthis.payload = new Map(options.workspaceProvider.payload);\n\t\t\t} catch (error) {\n\t\t\t\tonUnexpectedError(error); // possible invalid payload for map\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate resolveExtensionHostDebugEnvironment(): IExtensionHostDebugEnvironment {\n\t\tconst extensionHostDebugEnvironment: IExtensionHostDebugEnvironment = {\n\t\t\tparams: {\n\t\t\t\tport: null,\n\t\t\t\tbreak: false\n\t\t\t},\n\t\t\tdebugRenderer: false,\n\t\t\tisExtensionDevelopment: false,\n\t\t\textensionDevelopmentLocationURI: undefined,\n\t\t\textensionDevelopmentKind: undefined\n\t\t};\n\n\t\t// Fill in selected extra environmental properties\n\t\tif (this.payload) {\n\t\t\tfor (const [key, value] of this.payload) {\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase 'extensionDevelopmentPath':\n\t\t\t\t\t\tif (!extensionHostDebugEnvironment.extensionDevelopmentLocationURI) {\n\t\t\t\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentLocationURI = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentLocationURI.push(URI.parse(value));\n\t\t\t\t\t\textensionHostDebugEnvironment.isExtensionDevelopment = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'extensionDevelopmentKind':\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentKind = [<ExtensionKind>value];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'extensionTestsPath':\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionTestsLocationURI = URI.parse(value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'debugRenderer':\n\t\t\t\t\t\textensionHostDebugEnvironment.debugRenderer = value === 'true';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'debugId':\n\t\t\t\t\t\textensionHostDebugEnvironment.params.debugId = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inspect-brk-extensions':\n\t\t\t\t\t\textensionHostDebugEnvironment.params.port = parseInt(value);\n\t\t\t\t\t\textensionHostDebugEnvironment.params.break = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inspect-extensions':\n\t\t\t\t\t\textensionHostDebugEnvironment.params.port = parseInt(value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'enableProposedApi':\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionEnabledProposedApi = [];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst developmentOptions = this.options.developmentOptions;\n\t\tif (developmentOptions && !extensionHostDebugEnvironment.isExtensionDevelopment) {\n\t\t\tif (developmentOptions.extensions?.length) {\n\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentLocationURI = developmentOptions.extensions.map(e => URI.revive(e));\n\t\t\t\textensionHostDebugEnvironment.isExtensionDevelopment = true;\n\t\t\t}\n\n\t\t\tif (developmentOptions.extensionTestsPath) {\n\t\t\t\textensionHostDebugEnvironment.extensionTestsLocationURI = URI.revive(developmentOptions.extensionTestsPath);\n\t\t\t}\n\t\t}\n\n\t\treturn extensionHostDebugEnvironment;\n\t}\n\n\t@memoize\n\tget filesToOpenOrCreate(): IPath<ITextEditorOptions>[] | undefined {\n\t\tif (this.payload) {\n\t\t\tconst fileToOpen = this.payload.get('openFile');\n\t\t\tif (fileToOpen) {\n\t\t\t\tconst fileUri = URI.parse(fileToOpen);\n\n\t\t\t\t// Support: --goto parameter to open on line/col\n\t\t\t\tif (this.payload.has('gotoLineMode')) {\n\t\t\t\t\tconst pathColumnAware = parseLineAndColumnAware(fileUri.path);\n\n\t\t\t\t\treturn [{\n\t\t\t\t\t\tfileUri: fileUri.with({ path: pathColumnAware.path }),\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tselection: !isUndefined(pathColumnAware.line) ? { startLineNumber: pathColumnAware.line, startColumn: pathColumnAware.column || 1 } : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t}];\n\t\t\t\t}\n\n\t\t\t\treturn [{ fileUri }];\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget filesToDiff(): IPath[] | undefined {\n\t\tif (this.payload) {\n\t\t\tconst fileToDiffPrimary = this.payload.get('diffFilePrimary');\n\t\t\tconst fileToDiffSecondary = this.payload.get('diffFileSecondary');\n\t\t\tif (fileToDiffPrimary && fileToDiffSecondary) {\n\t\t\t\treturn [\n\t\t\t\t\t{ fileUri: URI.parse(fileToDiffSecondary) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToDiffPrimary) }\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget filesToMerge(): IPath[] | undefined {\n\t\tif (this.payload) {\n\t\t\tconst fileToMerge1 = this.payload.get('mergeFile1');\n\t\t\tconst fileToMerge2 = this.payload.get('mergeFile2');\n\t\t\tconst fileToMergeBase = this.payload.get('mergeFileBase');\n\t\t\tconst fileToMergeResult = this.payload.get('mergeFileResult');\n\t\t\tif (fileToMerge1 && fileToMerge2 && fileToMergeBase && fileToMergeResult) {\n\t\t\t\treturn [\n\t\t\t\t\t{ fileUri: URI.parse(fileToMerge1) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToMerge2) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToMergeBase) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToMergeResult) }\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\ninterface IExtensionHostDebugEnvironment {\n\tparams: IExtensionHostDebugParams;\n\tdebugRenderer: boolean;\n\tisExtensionDevelopment: boolean;\n\textensionDevelopmentLocationURI?: URI[];\n\textensionDevelopmentKind?: ExtensionKind[];\n\textensionTestsLocationURI?: URI;\n\textensionEnabledProposedApi?: string[];\n}\n"]}