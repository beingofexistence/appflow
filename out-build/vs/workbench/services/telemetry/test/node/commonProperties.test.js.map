{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/telemetry/test/node/commonProperties.test.ts"],"names":[],"mappings":"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","file":"commonProperties.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { release, hostname } from 'os';\nimport { resolveWorkbenchCommonProperties } from 'vs/workbench/services/telemetry/common/workbenchCommonProperties';\nimport { IStorageService, StorageScope, InMemoryStorageService, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { timeout } from 'vs/base/common/async';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nsuite('Telemetry - common properties', function () {\n\tconst commit: string = (undefined)!;\n\tconst version: string = (undefined)!;\n\tlet testStorageService: IStorageService;\n\n\tsetup(() => {\n\t\ttestStorageService = new InMemoryStorageService();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('default', function () {\n\t\tconst props = resolveWorkbenchCommonProperties(testStorageService, release(), hostname(), commit, version, 'someMachineId', false, process);\n\t\tassert.ok('commitHash' in props);\n\t\tassert.ok('sessionID' in props);\n\t\tassert.ok('timestamp' in props);\n\t\tassert.ok('common.platform' in props);\n\t\tassert.ok('common.nodePlatform' in props);\n\t\tassert.ok('common.nodeArch' in props);\n\t\tassert.ok('common.timesincesessionstart' in props);\n\t\tassert.ok('common.sequence' in props);\n\t\t// assert.ok('common.version.shell' in first.data); // only when running on electron\n\t\t// assert.ok('common.version.renderer' in first.data);\n\t\tassert.ok('common.platformVersion' in props, 'platformVersion');\n\t\tassert.ok('version' in props);\n\t\tassert.ok('common.firstSessionDate' in props, 'firstSessionDate');\n\t\tassert.ok('common.lastSessionDate' in props, 'lastSessionDate'); // conditional, see below, 'lastSessionDate'ow\n\t\tassert.ok('common.isNewSession' in props, 'isNewSession');\n\t\t// machine id et al\n\t\tassert.ok('common.machineId' in props, 'machineId');\n\t});\n\n\ttest('lastSessionDate when available', function () {\n\n\t\ttestStorageService.store('telemetry.lastSessionDate', new Date().toUTCString(), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\n\t\tconst props = resolveWorkbenchCommonProperties(testStorageService, release(), hostname(), commit, version, 'someMachineId', false, process);\n\t\tassert.ok('common.lastSessionDate' in props); // conditional, see below\n\t\tassert.ok('common.isNewSession' in props);\n\t\tassert.strictEqual(props['common.isNewSession'], '0');\n\t});\n\n\ttest('values chance on ask', async function () {\n\t\tconst props = resolveWorkbenchCommonProperties(testStorageService, release(), hostname(), commit, version, 'someMachineId', false, process);\n\t\tlet value1 = props['common.sequence'];\n\t\tlet value2 = props['common.sequence'];\n\t\tassert.ok(value1 !== value2, 'seq');\n\n\t\tvalue1 = props['timestamp'];\n\t\tvalue2 = props['timestamp'];\n\t\tassert.ok(value1 !== value2, 'timestamp');\n\n\t\tvalue1 = props['common.timesincesessionstart'];\n\t\tawait timeout(10);\n\t\tvalue2 = props['common.timesincesessionstart'];\n\t\tassert.ok(value1 !== value2, 'timesincesessionstart');\n\t});\n});\n"]}