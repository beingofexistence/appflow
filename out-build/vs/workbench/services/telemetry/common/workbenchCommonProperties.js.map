{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/telemetry/common/workbenchCommonProperties.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,SAAgB,IAAI,CACnB,cAAmB,EACnB,OAAe,EACf,QAAgB,EAChB,MAA0B,EAC1B,OAA2B,EAC3B,SAAiB,EACjB,mBAA4B,EAC5B,OAAqB,EACrB,eAAwB;QAExB,MAAM,MAAM,GAAG,IAAA,sBAAG,EAAqB,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,mBAAmB,CAAC,CAAC;QACzH,MAAM,gBAAgB,GAAG,cAAc,CAAC,GAAG,CAAC,eAAG,oCAAmD,CAAC;QACnG,MAAM,eAAe,GAAG,cAAc,CAAC,GAAG,CAAC,eAAG,oCAAkD,CAAC;QAEjG,sHAAsH;QACtH,MAAM,CAAC,sBAAsB,CAAC,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,CAAC;QAChE,yHAAyH;QACzH,MAAM,CAAC,yBAAyB,CAAC,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;QACjE,mHAAmH;QACnH,MAAM,CAAC,yBAAyB,CAAC,GAAG,gBAAgB,CAAC;QACrD,kHAAkH;QAClH,MAAM,CAAC,wBAAwB,CAAC,GAAG,eAAe,IAAI,EAAE,CAAC;QACzD,+GAA+G;QAC/G,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAC7D,wHAAwH;QACxH,MAAM,CAAC,wBAAwB,CAAC,GAAG,IAAA,oBAAG,EAAkB,eAAe,CAAC,CAAC;QACzE,sGAAsG;QACtG,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAEnD,OAAO,MAAM,CAAC;IACf,CAAC;IA/BD,oBA+BC","file":"workbenchCommonProperties.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/common/commonProperties';\nimport { ICommonProperties, firstSessionDateStorageKey, lastSessionDateStorageKey } from 'vs/platform/telemetry/common/telemetry';\nimport { cleanRemoteAuthority } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { INodeProcess } from 'vs/base/common/platform';\n\nexport function resolveWorkbenchCommonProperties(\n\tstorageService: IStorageService,\n\trelease: string,\n\thostname: string,\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string,\n\tisInternalTelemetry: boolean,\n\tprocess: INodeProcess,\n\tremoteAuthority?: string\n): ICommonProperties {\n\tconst result = resolveCommonProperties(release, hostname, process.arch, commit, version, machineId, isInternalTelemetry);\n\tconst firstSessionDate = storageService.get(firstSessionDateStorageKey, StorageScope.APPLICATION)!;\n\tconst lastSessionDate = storageService.get(lastSessionDateStorageKey, StorageScope.APPLICATION)!;\n\n\t// __GDPR__COMMON__ \"common.version.shell\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.version.shell'] = process.versions?.['electron'];\n\t// __GDPR__COMMON__ \"common.version.renderer\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.version.renderer'] = process.versions?.['chrome'];\n\t// __GDPR__COMMON__ \"common.firstSessionDate\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.firstSessionDate'] = firstSessionDate;\n\t// __GDPR__COMMON__ \"common.lastSessionDate\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.lastSessionDate'] = lastSessionDate || '';\n\t// __GDPR__COMMON__ \"common.isNewSession\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.isNewSession'] = !lastSessionDate ? '1' : '0';\n\t// __GDPR__COMMON__ \"common.remoteAuthority\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.remoteAuthority'] = cleanRemoteAuthority(remoteAuthority);\n\t// __GDPR__COMMON__ \"common.cli\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.cli'] = !!process.env['VSCODE_CLI'];\n\n\treturn result;\n}\n"]}