{"version":3,"sources":["vs/workbench/services/log/electron-sandbox/logService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG,MAAa,IAAiB,SAAQ,gBAAG;QAExC,YAAY,aAAkB,EAAkB,kBAAwB;YAEvE,MAAM,WAAW,GAAG,IAAI,eAAG,EAAc,CAAC;YAE1C,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,kBAAkB,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,mBAAI,EAAS,IAAI,EAAE,IAAA,cAAQ,EAAC,CAAa,EAAE,IAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;YAEzJ,IAAI,aAAsB,CAAC;YAC3B,IAAI,kBAAkB,CAAC,sBAAsB,IAAI,CAAC,CAAC,kBAAkB,CAAC,yBAAyB,EAAE;gBAChG,kEAAkE;gBAClE,aAAa,GAAG,aAAa,CAAC,uBAAuB,EAAE,CAAC;aACxD;iBAAM;gBACN,8BAA8B;gBAC9B,aAAa,GAAG,IAAI,SAAG,CAAW,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;aACzD;YAED,KAAK,CAAC,UAAU,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;YAEnC,IAAI,CAAC,CAAC,CAAS,WAAW,CAAC,CAAC;QAC7B,CAAC;KACD;IArBD,oBAqBC","file":"logService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ConsoleLogger, ILogger } from 'vs/platform/log/common/log';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { LoggerChannelClient } from 'vs/platform/log/common/logIpc';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { windowLogId } from 'vs/workbench/services/log/common/logConstants';\nimport { LogService } from 'vs/platform/log/common/logService';\n\nexport class NativeLogService extends LogService {\n\n\tconstructor(loggerService: LoggerChannelClient, environmentService: INativeWorkbenchEnvironmentService) {\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst fileLogger = disposables.add(loggerService.createLogger(environmentService.logFile, { id: windowLogId, name: localize('rendererLog', \"Window\") }));\n\n\t\tlet consoleLogger: ILogger;\n\t\tif (environmentService.isExtensionDevelopment && !!environmentService.extensionTestsLocationURI) {\n\t\t\t// Extension development test CLI: forward everything to main side\n\t\t\tconsoleLogger = loggerService.createConsoleMainLogger();\n\t\t} else {\n\t\t\t// Normal mode: Log to console\n\t\t\tconsoleLogger = new ConsoleLogger(fileLogger.getLevel());\n\t\t}\n\n\t\tsuper(fileLogger, [consoleLogger]);\n\n\t\tthis._register(disposables);\n\t}\n}\n"]}