{"version":3,"sources":["vs/workbench/services/themes/common/colorThemeData.ts"],"names":[],"mappings":"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","file":"colorThemeData.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { basename } from 'vs/base/common/path';\nimport * as Json from 'vs/base/common/json';\nimport { Color } from 'vs/base/common/color';\nimport { ExtensionData, ITokenColorCustomizations, ITextMateThemingRule, IWorkbenchColorTheme, IColorMap, IThemeExtensionPoint, VS_LIGHT_THEME, VS_HC_THEME, IColorCustomizations, ISemanticTokenRules, ISemanticTokenColorizationSetting, ISemanticTokenColorCustomizations, IThemeScopableCustomizations, IThemeScopedCustomizations, THEME_SCOPE_CLOSE_PAREN, THEME_SCOPE_OPEN_PAREN, themeScopeRegex, THEME_SCOPE_WILDCARD, VS_HC_LIGHT_THEME } from 'vs/workbench/services/themes/common/workbenchThemeService';\nimport { convertSettings } from 'vs/workbench/services/themes/common/themeCompatibility';\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as resources from 'vs/base/common/resources';\nimport { Extensions as ColorRegistryExtensions, IColorRegistry, ColorIdentifier, editorBackground, editorForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { ITokenStyle, getThemeTypeSelector } from 'vs/platform/theme/common/themeService';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport { URI } from 'vs/base/common/uri';\nimport { parse as parsePList } from 'vs/workbench/services/themes/common/plistParser';\nimport { TokenStyle, SemanticTokenRule, ProbeScope, getTokenClassificationRegistry, TokenStyleValue, TokenStyleData, parseClassifierString } from 'vs/platform/theme/common/tokenClassificationRegistry';\nimport { MatcherWithPriority, Matcher, createMatchers } from 'vs/workbench/services/themes/common/textMateScopeMatcher';\nimport { IExtensionResourceLoaderService } from 'vs/platform/extensionResourceLoader/common/extensionResourceLoader';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { StorageScope, IStorageService, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ThemeConfiguration } from 'vs/workbench/services/themes/common/themeConfiguration';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\n\nconst colorRegistry = Registry.as<IColorRegistry>(ColorRegistryExtensions.ColorContribution);\n\nconst tokenClassificationRegistry = getTokenClassificationRegistry();\n\nconst tokenGroupToScopesMap = {\n\tcomments: ['comment', 'punctuation.definition.comment'],\n\tstrings: ['string', 'meta.embedded.assembly'],\n\tkeywords: ['keyword - keyword.operator', 'keyword.control', 'storage', 'storage.type'],\n\tnumbers: ['constant.numeric'],\n\ttypes: ['entity.name.type', 'entity.name.class', 'support.type', 'support.class'],\n\tfunctions: ['entity.name.function', 'support.function'],\n\tvariables: ['variable', 'entity.name.variable']\n};\n\n\nexport type TokenStyleDefinition = SemanticTokenRule | ProbeScope[] | TokenStyleValue;\nexport type TokenStyleDefinitions = { [P in keyof TokenStyleData]?: TokenStyleDefinition | undefined };\n\nexport type TextMateThemingRuleDefinitions = { [P in keyof TokenStyleData]?: ITextMateThemingRule | undefined; } & { scope?: ProbeScope };\n\nexport class ColorThemeData implements IWorkbenchColorTheme {\n\n\tstatic readonly STORAGE_KEY = 'colorThemeData';\n\n\tid: string;\n\tlabel: string;\n\tsettingsId: string;\n\tdescription?: string;\n\tisLoaded: boolean;\n\tlocation?: URI; // only set for extension from the registry, not for themes restored from the storage\n\twatch?: boolean;\n\textensionData?: ExtensionData;\n\n\tprivate themeSemanticHighlighting: boolean | undefined;\n\tprivate customSemanticHighlighting: boolean | undefined;\n\tprivate customSemanticHighlightingDeprecated: boolean | undefined;\n\n\tprivate themeTokenColors: ITextMateThemingRule[] = [];\n\tprivate customTokenColors: ITextMateThemingRule[] = [];\n\tprivate colorMap: IColorMap = {};\n\tprivate customColorMap: IColorMap = {};\n\n\tprivate semanticTokenRules: SemanticTokenRule[] = [];\n\tprivate customSemanticTokenRules: SemanticTokenRule[] = [];\n\n\tprivate themeTokenScopeMatchers: Matcher<ProbeScope>[] | undefined;\n\tprivate customTokenScopeMatchers: Matcher<ProbeScope>[] | undefined;\n\n\tprivate textMateThemingRules: ITextMateThemingRule[] | undefined = undefined; // created on demand\n\tprivate tokenColorIndex: TokenColorIndex | undefined = undefined; // created on demand\n\n\tprivate constructor(id: string, label: string, settingsId: string) {\n\t\tthis.id = id;\n\t\tthis.label = label;\n\t\tthis.settingsId = settingsId;\n\t\tthis.isLoaded = false;\n\t}\n\n\tget semanticHighlighting(): boolean {\n\t\tif (this.customSemanticHighlighting !== undefined) {\n\t\t\treturn this.customSemanticHighlighting;\n\t\t}\n\t\tif (this.customSemanticHighlightingDeprecated !== undefined) {\n\t\t\treturn this.customSemanticHighlightingDeprecated;\n\t\t}\n\t\treturn !!this.themeSemanticHighlighting;\n\t}\n\n\tget tokenColors(): ITextMateThemingRule[] {\n\t\tif (!this.textMateThemingRules) {\n\t\t\tconst result: ITextMateThemingRule[] = [];\n\n\t\t\t// the default rule (scope empty) is always the first rule. Ignore all other default rules.\n\t\t\tconst foreground = this.getColor(editorForeground) || this.getDefault(editorForeground)!;\n\t\t\tconst background = this.getColor(editorBackground) || this.getDefault(editorBackground)!;\n\t\t\tresult.push({\n\t\t\t\tsettings: {\n\t\t\t\t\tforeground: normalizeColor(foreground),\n\t\t\t\t\tbackground: normalizeColor(background)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlet hasDefaultTokens = false;\n\n\t\t\tfunction addRule(rule: ITextMateThemingRule) {\n\t\t\t\tif (rule.scope && rule.settings) {\n\t\t\t\t\tif (rule.scope === 'token.info-token') {\n\t\t\t\t\t\thasDefaultTokens = true;\n\t\t\t\t\t}\n\t\t\t\t\tresult.push({ scope: rule.scope, settings: { foreground: normalizeColor(rule.settings.foreground), background: normalizeColor(rule.settings.background), fontStyle: rule.settings.fontStyle } });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.themeTokenColors.forEach(addRule);\n\t\t\t// Add the custom colors after the theme colors\n\t\t\t// so that they will override them\n\t\t\tthis.customTokenColors.forEach(addRule);\n\n\t\t\tif (!hasDefaultTokens) {\n\t\t\t\tdefaultThemeColors[this.type].forEach(addRule);\n\t\t\t}\n\t\t\tthis.textMateThemingRules = result;\n\t\t}\n\t\treturn this.textMateThemingRules;\n\t}\n\n\tpublic getColor(colorId: ColorIdentifier, useDefault?: boolean): Color | undefined {\n\t\tlet color: Color | undefined = this.customColorMap[colorId];\n\t\tif (color) {\n\t\t\treturn color;\n\t\t}\n\t\tcolor = this.colorMap[colorId];\n\t\tif (useDefault !== false && types.isUndefined(color)) {\n\t\t\tcolor = this.getDefault(colorId);\n\t\t}\n\t\treturn color;\n\t}\n\n\tprivate getTokenStyle(type: string, modifiers: string[], language: string, useDefault = true, definitions: TokenStyleDefinitions = {}): TokenStyle | undefined {\n\t\tconst result: any = {\n\t\t\tforeground: undefined,\n\t\t\tbold: undefined,\n\t\t\tunderline: undefined,\n\t\t\tstrikethrough: undefined,\n\t\t\titalic: undefined\n\t\t};\n\t\tconst score = {\n\t\t\tforeground: -1,\n\t\t\tbold: -1,\n\t\t\tunderline: -1,\n\t\t\tstrikethrough: -1,\n\t\t\titalic: -1\n\t\t};\n\n\t\tfunction _processStyle(matchScore: number, style: TokenStyle, definition: TokenStyleDefinition) {\n\t\t\tif (style.foreground && score.foreground <= matchScore) {\n\t\t\t\tscore.foreground = matchScore;\n\t\t\t\tresult.foreground = style.foreground;\n\t\t\t\tdefinitions.foreground = definition;\n\t\t\t}\n\t\t\tfor (const p of ['bold', 'underline', 'strikethrough', 'italic']) {\n\t\t\t\tconst property = p as keyof TokenStyle;\n\t\t\t\tconst info = style[property];\n\t\t\t\tif (info !== undefined) {\n\t\t\t\t\tif (score[property] <= matchScore) {\n\t\t\t\t\t\tscore[property] = matchScore;\n\t\t\t\t\t\tresult[property] = info;\n\t\t\t\t\t\tdefinitions[property] = definition;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfunction _processSemanticTokenRule(rule: SemanticTokenRule) {\n\t\t\tconst matchScore = rule.selector.match(type, modifiers, language);\n\t\t\tif (matchScore >= 0) {\n\t\t\t\t_processStyle(matchScore, rule.style, rule);\n\t\t\t}\n\t\t}\n\n\t\tthis.semanticTokenRules.forEach(_processSemanticTokenRule);\n\t\tthis.customSemanticTokenRules.forEach(_processSemanticTokenRule);\n\n\t\tlet hasUndefinedStyleProperty = false;\n\t\tfor (const k in score) {\n\t\t\tconst key = k as keyof TokenStyle;\n\t\t\tif (score[key] === -1) {\n\t\t\t\thasUndefinedStyleProperty = true;\n\t\t\t} else {\n\t\t\t\tscore[key] = Number.MAX_VALUE; // set it to the max, so it won't be replaced by a default\n\t\t\t}\n\t\t}\n\t\tif (hasUndefinedStyleProperty) {\n\t\t\tfor (const rule of tokenClassificationRegistry.getTokenStylingDefaultRules()) {\n\t\t\t\tconst matchScore = rule.selector.match(type, modifiers, language);\n\t\t\t\tif (matchScore >= 0) {\n\t\t\t\t\tlet style: TokenStyle | undefined;\n\t\t\t\t\tif (rule.defaults.scopesToProbe) {\n\t\t\t\t\t\tstyle = this.resolveScopes(rule.defaults.scopesToProbe);\n\t\t\t\t\t\tif (style) {\n\t\t\t\t\t\t\t_processStyle(matchScore, style, rule.defaults.scopesToProbe);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!style && useDefault !== false) {\n\t\t\t\t\t\tconst tokenStyleValue = rule.defaults[this.type];\n\t\t\t\t\t\tstyle = this.resolveTokenStyleValue(tokenStyleValue);\n\t\t\t\t\t\tif (style) {\n\t\t\t\t\t\t\t_processStyle(matchScore, style, tokenStyleValue!);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn TokenStyle.fromData(result);\n\n\t}\n\n\t/**\n\t * @param tokenStyleValue Resolve a tokenStyleValue in the context of a theme\n\t */\n\tpublic resolveTokenStyleValue(tokenStyleValue: TokenStyleValue | undefined): TokenStyle | undefined {\n\t\tif (tokenStyleValue === undefined) {\n\t\t\treturn undefined;\n\t\t} else if (typeof tokenStyleValue === 'string') {\n\t\t\tconst { type, modifiers, language } = parseClassifierString(tokenStyleValue, '');\n\t\t\treturn this.getTokenStyle(type, modifiers, language);\n\t\t} else if (typeof tokenStyleValue === 'object') {\n\t\t\treturn tokenStyleValue;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getTokenColorIndex(): TokenColorIndex {\n\t\t// collect all colors that tokens can have\n\t\tif (!this.tokenColorIndex) {\n\t\t\tconst index = new TokenColorIndex();\n\t\t\tthis.tokenColors.forEach(rule => {\n\t\t\t\tindex.add(rule.settings.foreground);\n\t\t\t\tindex.add(rule.settings.background);\n\t\t\t});\n\n\t\t\tthis.semanticTokenRules.forEach(r => index.add(r.style.foreground));\n\t\t\ttokenClassificationRegistry.getTokenStylingDefaultRules().forEach(r => {\n\t\t\t\tconst defaultColor = r.defaults[this.type];\n\t\t\t\tif (defaultColor && typeof defaultColor === 'object') {\n\t\t\t\t\tindex.add(defaultColor.foreground);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.customSemanticTokenRules.forEach(r => index.add(r.style.foreground));\n\n\t\t\tthis.tokenColorIndex = index;\n\t\t}\n\t\treturn this.tokenColorIndex;\n\t}\n\n\tpublic get tokenColorMap(): string[] {\n\t\treturn this.getTokenColorIndex().asArray();\n\t}\n\n\tpublic getTokenStyleMetadata(typeWithLanguage: string, modifiers: string[], defaultLanguage: string, useDefault = true, definitions: TokenStyleDefinitions = {}): ITokenStyle | undefined {\n\t\tconst { type, language } = parseClassifierString(typeWithLanguage, defaultLanguage);\n\t\tconst style = this.getTokenStyle(type, modifiers, language, useDefault, definitions);\n\t\tif (!style) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tforeground: this.getTokenColorIndex().get(style.foreground),\n\t\t\tbold: style.bold,\n\t\t\tunderline: style.underline,\n\t\t\tstrikethrough: style.strikethrough,\n\t\t\titalic: style.italic,\n\t\t};\n\t}\n\n\tpublic getTokenStylingRuleScope(rule: SemanticTokenRule): 'setting' | 'theme' | undefined {\n\t\tif (this.customSemanticTokenRules.indexOf(rule) !== -1) {\n\t\t\treturn 'setting';\n\t\t}\n\t\tif (this.semanticTokenRules.indexOf(rule) !== -1) {\n\t\t\treturn 'theme';\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic getDefault(colorId: ColorIdentifier): Color | undefined {\n\t\treturn colorRegistry.resolveDefaultColor(colorId, this);\n\t}\n\n\n\tpublic resolveScopes(scopes: ProbeScope[], definitions?: TextMateThemingRuleDefinitions): TokenStyle | undefined {\n\n\t\tif (!this.themeTokenScopeMatchers) {\n\t\t\tthis.themeTokenScopeMatchers = this.themeTokenColors.map(getScopeMatcher);\n\t\t}\n\t\tif (!this.customTokenScopeMatchers) {\n\t\t\tthis.customTokenScopeMatchers = this.customTokenColors.map(getScopeMatcher);\n\t\t}\n\n\t\tfor (const scope of scopes) {\n\t\t\tlet foreground: string | undefined = undefined;\n\t\t\tlet fontStyle: string | undefined = undefined;\n\t\t\tlet foregroundScore = -1;\n\t\t\tlet fontStyleScore = -1;\n\t\t\tlet fontStyleThemingRule: ITextMateThemingRule | undefined = undefined;\n\t\t\tlet foregroundThemingRule: ITextMateThemingRule | undefined = undefined;\n\n\t\t\tfunction findTokenStyleForScopeInScopes(scopeMatchers: Matcher<ProbeScope>[], themingRules: ITextMateThemingRule[]) {\n\t\t\t\tfor (let i = 0; i < scopeMatchers.length; i++) {\n\t\t\t\t\tconst score = scopeMatchers[i](scope);\n\t\t\t\t\tif (score >= 0) {\n\t\t\t\t\t\tconst themingRule = themingRules[i];\n\t\t\t\t\t\tconst settings = themingRules[i].settings;\n\t\t\t\t\t\tif (score >= foregroundScore && settings.foreground) {\n\t\t\t\t\t\t\tforeground = settings.foreground;\n\t\t\t\t\t\t\tforegroundScore = score;\n\t\t\t\t\t\t\tforegroundThemingRule = themingRule;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (score >= fontStyleScore && types.isString(settings.fontStyle)) {\n\t\t\t\t\t\t\tfontStyle = settings.fontStyle;\n\t\t\t\t\t\t\tfontStyleScore = score;\n\t\t\t\t\t\t\tfontStyleThemingRule = themingRule;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfindTokenStyleForScopeInScopes(this.themeTokenScopeMatchers, this.themeTokenColors);\n\t\t\tfindTokenStyleForScopeInScopes(this.customTokenScopeMatchers, this.customTokenColors);\n\t\t\tif (foreground !== undefined || fontStyle !== undefined) {\n\t\t\t\tif (definitions) {\n\t\t\t\t\tdefinitions.foreground = foregroundThemingRule;\n\t\t\t\t\tdefinitions.bold = definitions.italic = definitions.underline = definitions.strikethrough = fontStyleThemingRule;\n\t\t\t\t\tdefinitions.scope = scope;\n\t\t\t\t}\n\n\t\t\t\treturn TokenStyle.fromSettings(foreground, fontStyle);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic defines(colorId: ColorIdentifier): boolean {\n\t\treturn this.customColorMap.hasOwnProperty(colorId) || this.colorMap.hasOwnProperty(colorId);\n\t}\n\n\tpublic setCustomizations(settings: ThemeConfiguration) {\n\t\tthis.setCustomColors(settings.colorCustomizations);\n\t\tthis.setCustomTokenColors(settings.tokenColorCustomizations);\n\t\tthis.setCustomSemanticTokenColors(settings.semanticTokenColorCustomizations);\n\t}\n\n\tpublic setCustomColors(colors: IColorCustomizations) {\n\t\tthis.customColorMap = {};\n\t\tthis.overwriteCustomColors(colors);\n\n\t\tconst themeSpecificColors = this.getThemeSpecificColors(colors) as IColorCustomizations;\n\t\tif (types.isObject(themeSpecificColors)) {\n\t\t\tthis.overwriteCustomColors(themeSpecificColors);\n\t\t}\n\n\t\tthis.tokenColorIndex = undefined;\n\t\tthis.textMateThemingRules = undefined;\n\t\tthis.customTokenScopeMatchers = undefined;\n\t}\n\n\tprivate overwriteCustomColors(colors: IColorCustomizations) {\n\t\tfor (const id in colors) {\n\t\t\tconst colorVal = colors[id];\n\t\t\tif (typeof colorVal === 'string') {\n\t\t\t\tthis.customColorMap[id] = Color.fromHex(colorVal);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setCustomTokenColors(customTokenColors: ITokenColorCustomizations) {\n\t\tthis.customTokenColors = [];\n\t\tthis.customSemanticHighlightingDeprecated = undefined;\n\n\t\t// first add the non-theme specific settings\n\t\tthis.addCustomTokenColors(customTokenColors);\n\n\t\t// append theme specific settings. Last rules will win.\n\t\tconst themeSpecificTokenColors = this.getThemeSpecificColors(customTokenColors) as ITokenColorCustomizations;\n\t\tif (types.isObject(themeSpecificTokenColors)) {\n\t\t\tthis.addCustomTokenColors(themeSpecificTokenColors);\n\t\t}\n\n\t\tthis.tokenColorIndex = undefined;\n\t\tthis.textMateThemingRules = undefined;\n\t\tthis.customTokenScopeMatchers = undefined;\n\t}\n\n\tpublic setCustomSemanticTokenColors(semanticTokenColors: ISemanticTokenColorCustomizations | undefined) {\n\t\tthis.customSemanticTokenRules = [];\n\t\tthis.customSemanticHighlighting = undefined;\n\n\t\tif (semanticTokenColors) {\n\t\t\tthis.customSemanticHighlighting = semanticTokenColors.enabled;\n\t\t\tif (semanticTokenColors.rules) {\n\t\t\t\tthis.readSemanticTokenRules(semanticTokenColors.rules);\n\t\t\t}\n\t\t\tconst themeSpecificColors = this.getThemeSpecificColors(semanticTokenColors) as ISemanticTokenColorCustomizations;\n\t\t\tif (types.isObject(themeSpecificColors)) {\n\t\t\t\tif (themeSpecificColors.enabled !== undefined) {\n\t\t\t\t\tthis.customSemanticHighlighting = themeSpecificColors.enabled;\n\t\t\t\t}\n\t\t\t\tif (themeSpecificColors.rules) {\n\t\t\t\t\tthis.readSemanticTokenRules(themeSpecificColors.rules);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.tokenColorIndex = undefined;\n\t\tthis.textMateThemingRules = undefined;\n\t}\n\n\tpublic isThemeScope(key: string): boolean {\n\t\treturn key.charAt(0) === THEME_SCOPE_OPEN_PAREN && key.charAt(key.length - 1) === THEME_SCOPE_CLOSE_PAREN;\n\t}\n\n\tpublic isThemeScopeMatch(themeId: string): boolean {\n\t\tconst themeIdFirstChar = themeId.charAt(0);\n\t\tconst themeIdLastChar = themeId.charAt(themeId.length - 1);\n\t\tconst themeIdPrefix = themeId.slice(0, -1);\n\t\tconst themeIdInfix = themeId.slice(1, -1);\n\t\tconst themeIdSuffix = themeId.slice(1);\n\t\treturn themeId === this.settingsId\n\t\t\t|| (this.settingsId.includes(themeIdInfix) && themeIdFirstChar === THEME_SCOPE_WILDCARD && themeIdLastChar === THEME_SCOPE_WILDCARD)\n\t\t\t|| (this.settingsId.startsWith(themeIdPrefix) && themeIdLastChar === THEME_SCOPE_WILDCARD)\n\t\t\t|| (this.settingsId.endsWith(themeIdSuffix) && themeIdFirstChar === THEME_SCOPE_WILDCARD);\n\t}\n\n\tpublic getThemeSpecificColors(colors: IThemeScopableCustomizations): IThemeScopedCustomizations | undefined {\n\t\tlet themeSpecificColors;\n\t\tfor (const key in colors) {\n\t\t\tconst scopedColors = colors[key];\n\t\t\tif (this.isThemeScope(key) && scopedColors instanceof Object && !Array.isArray(scopedColors)) {\n\t\t\t\tconst themeScopeList = key.match(themeScopeRegex) || [];\n\t\t\t\tfor (const themeScope of themeScopeList) {\n\t\t\t\t\tconst themeId = themeScope.substring(1, themeScope.length - 1);\n\t\t\t\t\tif (this.isThemeScopeMatch(themeId)) {\n\t\t\t\t\t\tif (!themeSpecificColors) {\n\t\t\t\t\t\t\tthemeSpecificColors = {} as IThemeScopedCustomizations;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst scopedThemeSpecificColors = scopedColors as IThemeScopedCustomizations;\n\t\t\t\t\t\tfor (const subkey in scopedThemeSpecificColors) {\n\t\t\t\t\t\t\tconst originalColors = themeSpecificColors[subkey];\n\t\t\t\t\t\t\tconst overrideColors = scopedThemeSpecificColors[subkey];\n\t\t\t\t\t\t\tif (Array.isArray(originalColors) && Array.isArray(overrideColors)) {\n\t\t\t\t\t\t\t\tthemeSpecificColors[subkey] = originalColors.concat(overrideColors);\n\t\t\t\t\t\t\t} else if (overrideColors) {\n\t\t\t\t\t\t\t\tthemeSpecificColors[subkey] = overrideColors;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn themeSpecificColors;\n\t}\n\n\tprivate readSemanticTokenRules(tokenStylingRuleSection: ISemanticTokenRules) {\n\t\tfor (const key in tokenStylingRuleSection) {\n\t\t\tif (!this.isThemeScope(key)) { // still do this test until experimental settings are gone\n\t\t\t\ttry {\n\t\t\t\t\tconst rule = readSemanticTokenRule(key, tokenStylingRuleSection[key]);\n\t\t\t\t\tif (rule) {\n\t\t\t\t\t\tthis.customSemanticTokenRules.push(rule);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// invalid selector, ignore\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate addCustomTokenColors(customTokenColors: ITokenColorCustomizations) {\n\t\t// Put the general customizations such as comments, strings, etc. first so that\n\t\t// they can be overridden by specific customizations like \"string.interpolated\"\n\t\tfor (const tokenGroup in tokenGroupToScopesMap) {\n\t\t\tconst group = <keyof typeof tokenGroupToScopesMap>tokenGroup; // TS doesn't type 'tokenGroup' properly\n\t\t\tconst value = customTokenColors[group];\n\t\t\tif (value) {\n\t\t\t\tconst settings = typeof value === 'string' ? { foreground: value } : value;\n\t\t\t\tconst scopes = tokenGroupToScopesMap[group];\n\t\t\t\tfor (const scope of scopes) {\n\t\t\t\t\tthis.customTokenColors.push({ scope, settings });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// specific customizations\n\t\tif (Array.isArray(customTokenColors.textMateRules)) {\n\t\t\tfor (const rule of customTokenColors.textMateRules) {\n\t\t\t\tif (rule.scope && rule.settings) {\n\t\t\t\t\tthis.customTokenColors.push(rule);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (customTokenColors.semanticHighlighting !== undefined) {\n\t\t\tthis.customSemanticHighlightingDeprecated = customTokenColors.semanticHighlighting;\n\t\t}\n\t}\n\n\tpublic ensureLoaded(extensionResourceLoaderService: IExtensionResourceLoaderService): Promise<void> {\n\t\treturn !this.isLoaded ? this.load(extensionResourceLoaderService) : Promise.resolve(undefined);\n\t}\n\n\tpublic reload(extensionResourceLoaderService: IExtensionResourceLoaderService): Promise<void> {\n\t\treturn this.load(extensionResourceLoaderService);\n\t}\n\n\tprivate load(extensionResourceLoaderService: IExtensionResourceLoaderService): Promise<void> {\n\t\tif (!this.location) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\tthis.themeTokenColors = [];\n\t\tthis.clearCaches();\n\n\t\tconst result = {\n\t\t\tcolors: {},\n\t\t\ttextMateRules: [],\n\t\t\tsemanticTokenRules: [],\n\t\t\tsemanticHighlighting: false\n\t\t};\n\t\treturn _loadColorTheme(extensionResourceLoaderService, this.location, result).then(_ => {\n\t\t\tthis.isLoaded = true;\n\t\t\tthis.semanticTokenRules = result.semanticTokenRules;\n\t\t\tthis.colorMap = result.colors;\n\t\t\tthis.themeTokenColors = result.textMateRules;\n\t\t\tthis.themeSemanticHighlighting = result.semanticHighlighting;\n\t\t});\n\t}\n\n\tpublic clearCaches() {\n\t\tthis.tokenColorIndex = undefined;\n\t\tthis.textMateThemingRules = undefined;\n\t\tthis.themeTokenScopeMatchers = undefined;\n\t\tthis.customTokenScopeMatchers = undefined;\n\t}\n\n\ttoStorage(storageService: IStorageService) {\n\t\tconst colorMapData: { [key: string]: string } = {};\n\t\tfor (const key in this.colorMap) {\n\t\t\tcolorMapData[key] = Color.Format.CSS.formatHexA(this.colorMap[key], true);\n\t\t}\n\t\t// no need to persist custom colors, they will be taken from the settings\n\t\tconst value = JSON.stringify({\n\t\t\tid: this.id,\n\t\t\tlabel: this.label,\n\t\t\tsettingsId: this.settingsId,\n\t\t\tthemeTokenColors: this.themeTokenColors.map(tc => ({ settings: tc.settings, scope: tc.scope })), // don't persist names\n\t\t\tsemanticTokenRules: this.semanticTokenRules.map(SemanticTokenRule.toJSONObject),\n\t\t\textensionData: ExtensionData.toJSONObject(this.extensionData),\n\t\t\tthemeSemanticHighlighting: this.themeSemanticHighlighting,\n\t\t\tcolorMap: colorMapData,\n\t\t\twatch: this.watch\n\t\t});\n\n\t\t// roam persisted color theme colors. Don't enable for icons as they contain references to fonts and images.\n\t\tstorageService.store(ColorThemeData.STORAGE_KEY, value, StorageScope.PROFILE, StorageTarget.USER);\n\t}\n\n\tget baseTheme(): string {\n\t\treturn this.classNames[0];\n\t}\n\n\tget classNames(): string[] {\n\t\treturn this.id.split(' ');\n\t}\n\n\tget type(): ColorScheme {\n\t\tswitch (this.baseTheme) {\n\t\t\tcase VS_LIGHT_THEME: return ColorScheme.LIGHT;\n\t\t\tcase VS_HC_THEME: return ColorScheme.HIGH_CONTRAST_DARK;\n\t\t\tcase VS_HC_LIGHT_THEME: return ColorScheme.HIGH_CONTRAST_LIGHT;\n\t\t\tdefault: return ColorScheme.DARK;\n\t\t}\n\t}\n\n\t// constructors\n\n\tstatic createUnloadedThemeForThemeType(themeType: ColorScheme, colorMap?: { [id: string]: string }): ColorThemeData {\n\t\treturn ColorThemeData.createUnloadedTheme(getThemeTypeSelector(themeType), colorMap);\n\t}\n\n\tstatic createUnloadedTheme(id: string, colorMap?: { [id: string]: string }): ColorThemeData {\n\t\tconst themeData = new ColorThemeData(id, '', '__' + id);\n\t\tthemeData.isLoaded = false;\n\t\tthemeData.themeTokenColors = [];\n\t\tthemeData.watch = false;\n\t\tif (colorMap) {\n\t\t\tfor (const id in colorMap) {\n\t\t\t\tthemeData.colorMap[id] = Color.fromHex(colorMap[id]);\n\t\t\t}\n\t\t}\n\t\treturn themeData;\n\t}\n\n\tstatic createLoadedEmptyTheme(id: string, settingsId: string): ColorThemeData {\n\t\tconst themeData = new ColorThemeData(id, '', settingsId);\n\t\tthemeData.isLoaded = true;\n\t\tthemeData.themeTokenColors = [];\n\t\tthemeData.watch = false;\n\t\treturn themeData;\n\t}\n\n\tstatic fromStorageData(storageService: IStorageService): ColorThemeData | undefined {\n\t\tconst input = storageService.get(ColorThemeData.STORAGE_KEY, StorageScope.PROFILE);\n\t\tif (!input) {\n\t\t\treturn undefined;\n\t\t}\n\t\ttry {\n\t\t\tconst data = JSON.parse(input);\n\t\t\tconst theme = new ColorThemeData('', '', '');\n\t\t\tfor (const key in data) {\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase 'colorMap': {\n\t\t\t\t\t\tconst colorMapData = data[key];\n\t\t\t\t\t\tfor (const id in colorMapData) {\n\t\t\t\t\t\t\ttheme.colorMap[id] = Color.fromHex(colorMapData[id]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'themeTokenColors':\n\t\t\t\t\tcase 'id': case 'label': case 'settingsId': case 'watch': case 'themeSemanticHighlighting':\n\t\t\t\t\t\t(theme as any)[key] = data[key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'semanticTokenRules': {\n\t\t\t\t\t\tconst rulesData = data[key];\n\t\t\t\t\t\tif (Array.isArray(rulesData)) {\n\t\t\t\t\t\t\tfor (const d of rulesData) {\n\t\t\t\t\t\t\t\tconst rule = SemanticTokenRule.fromJSONObject(tokenClassificationRegistry, d);\n\t\t\t\t\t\t\t\tif (rule) {\n\t\t\t\t\t\t\t\t\ttheme.semanticTokenRules.push(rule);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'location':\n\t\t\t\t\t\t// ignore, no longer restore\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'extensionData':\n\t\t\t\t\t\ttheme.extensionData = ExtensionData.fromJSONObject(data.extensionData);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!theme.id || !theme.settingsId) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn theme;\n\t\t} catch (e) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tstatic fromExtensionTheme(theme: IThemeExtensionPoint, colorThemeLocation: URI, extensionData: ExtensionData): ColorThemeData {\n\t\tconst baseTheme: string = theme['uiTheme'] || 'vs-dark';\n\t\tconst themeSelector = toCSSSelector(extensionData.extensionId, theme.path);\n\t\tconst id = `${baseTheme} ${themeSelector}`;\n\t\tconst label = theme.label || basename(theme.path);\n\t\tconst settingsId = theme.id || label;\n\t\tconst themeData = new ColorThemeData(id, label, settingsId);\n\t\tthemeData.description = theme.description;\n\t\tthemeData.watch = theme._watch === true;\n\t\tthemeData.location = colorThemeLocation;\n\t\tthemeData.extensionData = extensionData;\n\t\tthemeData.isLoaded = false;\n\t\treturn themeData;\n\t}\n}\n\nfunction toCSSSelector(extensionId: string, path: string) {\n\tif (path.startsWith('./')) {\n\t\tpath = path.substr(2);\n\t}\n\tlet str = `${extensionId}-${path}`;\n\n\t//remove all characters that are not allowed in css\n\tstr = str.replace(/[^_a-zA-Z0-9-]/g, '-');\n\tif (str.charAt(0).match(/[0-9-]/)) {\n\t\tstr = '_' + str;\n\t}\n\treturn str;\n}\n\nasync function _loadColorTheme(extensionResourceLoaderService: IExtensionResourceLoaderService, themeLocation: URI, result: { textMateRules: ITextMateThemingRule[]; colors: IColorMap; semanticTokenRules: SemanticTokenRule[]; semanticHighlighting: boolean }): Promise<any> {\n\tif (resources.extname(themeLocation) === '.json') {\n\t\tconst content = await extensionResourceLoaderService.readExtensionResource(themeLocation);\n\t\tconst errors: Json.ParseError[] = [];\n\t\tconst contentValue = Json.parse(content, errors);\n\t\tif (errors.length > 0) {\n\t\t\treturn Promise.reject(new Error(nls.localize('error.cannotparsejson', \"Problems parsing JSON theme file: {0}\", errors.map(e => getParseErrorMessage(e.error)).join(', '))));\n\t\t} else if (Json.getNodeType(contentValue) !== 'object') {\n\t\t\treturn Promise.reject(new Error(nls.localize('error.invalidformat', \"Invalid format for JSON theme file: Object expected.\")));\n\t\t}\n\t\tif (contentValue.include) {\n\t\t\tawait _loadColorTheme(extensionResourceLoaderService, resources.joinPath(resources.dirname(themeLocation), contentValue.include), result);\n\t\t}\n\t\tif (Array.isArray(contentValue.settings)) {\n\t\t\tconvertSettings(contentValue.settings, result);\n\t\t\treturn null;\n\t\t}\n\t\tresult.semanticHighlighting = result.semanticHighlighting || contentValue.semanticHighlighting;\n\t\tconst colors = contentValue.colors;\n\t\tif (colors) {\n\t\t\tif (typeof colors !== 'object') {\n\t\t\t\treturn Promise.reject(new Error(nls.localize({ key: 'error.invalidformat.colors', comment: ['{0} will be replaced by a path. Values in quotes should not be translated.'] }, \"Problem parsing color theme file: {0}. Property 'colors' is not of type 'object'.\", themeLocation.toString())));\n\t\t\t}\n\t\t\t// new JSON color themes format\n\t\t\tfor (const colorId in colors) {\n\t\t\t\tconst colorHex = colors[colorId];\n\t\t\t\tif (typeof colorHex === 'string') { // ignore colors tht are null\n\t\t\t\t\tresult.colors[colorId] = Color.fromHex(colors[colorId]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst tokenColors = contentValue.tokenColors;\n\t\tif (tokenColors) {\n\t\t\tif (Array.isArray(tokenColors)) {\n\t\t\t\tresult.textMateRules.push(...tokenColors);\n\t\t\t} else if (typeof tokenColors === 'string') {\n\t\t\t\tawait _loadSyntaxTokens(extensionResourceLoaderService, resources.joinPath(resources.dirname(themeLocation), tokenColors), result);\n\t\t\t} else {\n\t\t\t\treturn Promise.reject(new Error(nls.localize({ key: 'error.invalidformat.tokenColors', comment: ['{0} will be replaced by a path. Values in quotes should not be translated.'] }, \"Problem parsing color theme file: {0}. Property 'tokenColors' should be either an array specifying colors or a path to a TextMate theme file\", themeLocation.toString())));\n\t\t\t}\n\t\t}\n\t\tconst semanticTokenColors = contentValue.semanticTokenColors;\n\t\tif (semanticTokenColors && typeof semanticTokenColors === 'object') {\n\t\t\tfor (const key in semanticTokenColors) {\n\t\t\t\ttry {\n\t\t\t\t\tconst rule = readSemanticTokenRule(key, semanticTokenColors[key]);\n\t\t\t\t\tif (rule) {\n\t\t\t\t\t\tresult.semanticTokenRules.push(rule);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn Promise.reject(new Error(nls.localize({ key: 'error.invalidformat.semanticTokenColors', comment: ['{0} will be replaced by a path. Values in quotes should not be translated.'] }, \"Problem parsing color theme file: {0}. Property 'semanticTokenColors' contains a invalid selector\", themeLocation.toString())));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn _loadSyntaxTokens(extensionResourceLoaderService, themeLocation, result);\n\t}\n}\n\nfunction _loadSyntaxTokens(extensionResourceLoaderService: IExtensionResourceLoaderService, themeLocation: URI, result: { textMateRules: ITextMateThemingRule[]; colors: IColorMap }): Promise<any> {\n\treturn extensionResourceLoaderService.readExtensionResource(themeLocation).then(content => {\n\t\ttry {\n\t\t\tconst contentValue = parsePList(content);\n\t\t\tconst settings: ITextMateThemingRule[] = contentValue.settings;\n\t\t\tif (!Array.isArray(settings)) {\n\t\t\t\treturn Promise.reject(new Error(nls.localize('error.plist.invalidformat', \"Problem parsing tmTheme file: {0}. 'settings' is not array.\")));\n\t\t\t}\n\t\t\tconvertSettings(settings, result);\n\t\t\treturn Promise.resolve(null);\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(new Error(nls.localize('error.cannotparse', \"Problems parsing tmTheme file: {0}\", e.message)));\n\t\t}\n\t}, error => {\n\t\treturn Promise.reject(new Error(nls.localize('error.cannotload', \"Problems loading tmTheme file {0}: {1}\", themeLocation.toString(), error.message)));\n\t});\n}\n\nconst defaultThemeColors: { [baseTheme: string]: ITextMateThemingRule[] } = {\n\t'light': [\n\t\t{ scope: 'token.info-token', settings: { foreground: '#316bcd' } },\n\t\t{ scope: 'token.warn-token', settings: { foreground: '#cd9731' } },\n\t\t{ scope: 'token.error-token', settings: { foreground: '#cd3131' } },\n\t\t{ scope: 'token.debug-token', settings: { foreground: '#800080' } }\n\t],\n\t'dark': [\n\t\t{ scope: 'token.info-token', settings: { foreground: '#6796e6' } },\n\t\t{ scope: 'token.warn-token', settings: { foreground: '#cd9731' } },\n\t\t{ scope: 'token.error-token', settings: { foreground: '#f44747' } },\n\t\t{ scope: 'token.debug-token', settings: { foreground: '#b267e6' } }\n\t],\n\t'hcLight': [\n\t\t{ scope: 'token.info-token', settings: { foreground: '#316bcd' } },\n\t\t{ scope: 'token.warn-token', settings: { foreground: '#cd9731' } },\n\t\t{ scope: 'token.error-token', settings: { foreground: '#cd3131' } },\n\t\t{ scope: 'token.debug-token', settings: { foreground: '#800080' } }\n\t],\n\t'hcDark': [\n\t\t{ scope: 'token.info-token', settings: { foreground: '#6796e6' } },\n\t\t{ scope: 'token.warn-token', settings: { foreground: '#008000' } },\n\t\t{ scope: 'token.error-token', settings: { foreground: '#FF0000' } },\n\t\t{ scope: 'token.debug-token', settings: { foreground: '#b267e6' } }\n\t]\n};\n\nconst noMatch = (_scope: ProbeScope) => -1;\n\nfunction nameMatcher(identifers: string[], scope: ProbeScope): number {\n\tfunction findInIdents(s: string, lastIndent: number): number {\n\t\tfor (let i = lastIndent - 1; i >= 0; i--) {\n\t\t\tif (scopesAreMatching(s, identifers[i])) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tif (scope.length < identifers.length) {\n\t\treturn -1;\n\t}\n\tlet lastScopeIndex = scope.length - 1;\n\tlet lastIdentifierIndex = findInIdents(scope[lastScopeIndex--], identifers.length);\n\tif (lastIdentifierIndex >= 0) {\n\t\tconst score = (lastIdentifierIndex + 1) * 0x10000 + identifers[lastIdentifierIndex].length;\n\t\twhile (lastScopeIndex >= 0) {\n\t\t\tlastIdentifierIndex = findInIdents(scope[lastScopeIndex--], lastIdentifierIndex);\n\t\t\tif (lastIdentifierIndex === -1) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t\treturn score;\n\t}\n\treturn -1;\n}\n\n\nfunction scopesAreMatching(thisScopeName: string, scopeName: string): boolean {\n\tif (!thisScopeName) {\n\t\treturn false;\n\t}\n\tif (thisScopeName === scopeName) {\n\t\treturn true;\n\t}\n\tconst len = scopeName.length;\n\treturn thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === '.';\n}\n\nfunction getScopeMatcher(rule: ITextMateThemingRule): Matcher<ProbeScope> {\n\tconst ruleScope = rule.scope;\n\tif (!ruleScope || !rule.settings) {\n\t\treturn noMatch;\n\t}\n\tconst matchers: MatcherWithPriority<ProbeScope>[] = [];\n\tif (Array.isArray(ruleScope)) {\n\t\tfor (const rs of ruleScope) {\n\t\t\tcreateMatchers(rs, nameMatcher, matchers);\n\t\t}\n\t} else {\n\t\tcreateMatchers(ruleScope, nameMatcher, matchers);\n\t}\n\n\tif (matchers.length === 0) {\n\t\treturn noMatch;\n\t}\n\treturn (scope: ProbeScope) => {\n\t\tlet max = matchers[0].matcher(scope);\n\t\tfor (let i = 1; i < matchers.length; i++) {\n\t\t\tmax = Math.max(max, matchers[i].matcher(scope));\n\t\t}\n\t\treturn max;\n\t};\n}\n\nfunction readSemanticTokenRule(selectorString: string, settings: ISemanticTokenColorizationSetting | string | boolean | undefined): SemanticTokenRule | undefined {\n\tconst selector = tokenClassificationRegistry.parseTokenSelector(selectorString);\n\tlet style: TokenStyle | undefined;\n\tif (typeof settings === 'string') {\n\t\tstyle = TokenStyle.fromSettings(settings, undefined);\n\t} else if (isSemanticTokenColorizationSetting(settings)) {\n\t\tstyle = TokenStyle.fromSettings(settings.foreground, settings.fontStyle, settings.bold, settings.underline, settings.strikethrough, settings.italic);\n\t}\n\tif (style) {\n\t\treturn { selector, style };\n\t}\n\treturn undefined;\n}\n\nfunction isSemanticTokenColorizationSetting(style: any): style is ISemanticTokenColorizationSetting {\n\treturn style && (types.isString(style.foreground) || types.isString(style.fontStyle) || types.isBoolean(style.italic)\n\t\t|| types.isBoolean(style.underline) || types.isBoolean(style.strikethrough) || types.isBoolean(style.bold));\n}\n\n\nclass TokenColorIndex {\n\n\tprivate _lastColorId: number;\n\tprivate _id2color: string[];\n\tprivate _color2id: { [color: string]: number };\n\n\tconstructor() {\n\t\tthis._lastColorId = 0;\n\t\tthis._id2color = [];\n\t\tthis._color2id = Object.create(null);\n\t}\n\n\tpublic add(color: string | Color | undefined): number {\n\t\tcolor = normalizeColor(color);\n\t\tif (color === undefined) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet value = this._color2id[color];\n\t\tif (value) {\n\t\t\treturn value;\n\t\t}\n\t\tvalue = ++this._lastColorId;\n\t\tthis._color2id[color] = value;\n\t\tthis._id2color[value] = color;\n\t\treturn value;\n\t}\n\n\tpublic get(color: string | Color | undefined): number {\n\t\tcolor = normalizeColor(color);\n\t\tif (color === undefined) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst value = this._color2id[color];\n\t\tif (value) {\n\t\t\treturn value;\n\t\t}\n\t\tconsole.log(`Color ${color} not in index.`);\n\t\treturn 0;\n\t}\n\n\tpublic asArray(): string[] {\n\t\treturn this._id2color.slice(0);\n\t}\n\n}\n\nfunction normalizeColor(color: string | Color | undefined | null): string | undefined {\n\tif (!color) {\n\t\treturn undefined;\n\t}\n\tif (typeof color !== 'string') {\n\t\tcolor = Color.Format.CSS.formatHexA(color, true);\n\t}\n\tconst len = color.length;\n\tif (color.charCodeAt(0) !== CharCode.Hash || (len !== 4 && len !== 5 && len !== 7 && len !== 9)) {\n\t\treturn undefined;\n\t}\n\tconst result = [CharCode.Hash];\n\n\tfor (let i = 1; i < len; i++) {\n\t\tconst upper = hexUpper(color.charCodeAt(i));\n\t\tif (!upper) {\n\t\t\treturn undefined;\n\t\t}\n\t\tresult.push(upper);\n\t\tif (len === 4 || len === 5) {\n\t\t\tresult.push(upper);\n\t\t}\n\t}\n\n\tif (result.length === 9 && result[7] === CharCode.F && result[8] === CharCode.F) {\n\t\tresult.length = 7;\n\t}\n\treturn String.fromCharCode(...result);\n}\n\nfunction hexUpper(charCode: CharCode): number {\n\tif (charCode >= CharCode.Digit0 && charCode <= CharCode.Digit9 || charCode >= CharCode.A && charCode <= CharCode.F) {\n\t\treturn charCode;\n\t} else if (charCode >= CharCode.a && charCode <= CharCode.f) {\n\t\treturn charCode - CharCode.a + CharCode.A;\n\t}\n\treturn 0;\n}\n"]}