{"version":3,"sources":["vs/workbench/services/themes/browser/workbenchThemeService.ts"],"names":[],"mappings":"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","file":"workbenchThemeService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkbenchThemeService, IWorkbenchColorTheme, IWorkbenchFileIconTheme, ExtensionData, VS_LIGHT_THEME, VS_DARK_THEME, VS_HC_THEME, VS_HC_LIGHT_THEME, ThemeSettings, IWorkbenchProductIconTheme, ThemeSettingTarget, ThemeSettingDefaults, COLOR_THEME_DARK_INITIAL_COLORS, COLOR_THEME_LIGHT_INITIAL_COLORS } from 'vs/workbench/services/themes/common/workbenchThemeService';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as errors from 'vs/base/common/errors';\nimport { IConfigurationService, ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { ColorThemeData } from 'vs/workbench/services/themes/common/colorThemeData';\nimport { IColorTheme, Extensions as ThemingExtensions, IThemingRegistry } from 'vs/platform/theme/common/themeService';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { registerFileIconThemeSchemas } from 'vs/workbench/services/themes/common/fileIconThemeSchema';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { FileIconThemeData, FileIconThemeLoader } from 'vs/workbench/services/themes/browser/fileIconThemeData';\nimport { createStyleSheet } from 'vs/base/browser/dom';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { IFileService, FileChangeType } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport * as resources from 'vs/base/common/resources';\nimport { registerColorThemeSchemas } from 'vs/workbench/services/themes/common/colorThemeSchema';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { getRemoteAuthority } from 'vs/platform/remote/common/remoteHosts';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IExtensionResourceLoaderService } from 'vs/platform/extensionResourceLoader/common/extensionResourceLoader';\nimport { ThemeRegistry, registerColorThemeExtensionPoint, registerFileIconThemeExtensionPoint, registerProductIconThemeExtensionPoint } from 'vs/workbench/services/themes/common/themeExtensionPoints';\nimport { updateColorThemeConfigurationSchemas, updateFileIconThemeConfigurationSchemas, ThemeConfiguration, updateProductIconThemeConfigurationSchemas } from 'vs/workbench/services/themes/common/themeConfiguration';\nimport { ProductIconThemeData, DEFAULT_PRODUCT_ICON_THEME_ID } from 'vs/workbench/services/themes/browser/productIconThemeData';\nimport { registerProductIconThemeSchemas } from 'vs/workbench/services/themes/common/productIconThemeSchema';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isWeb } from 'vs/base/common/platform';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\nimport { IHostColorSchemeService } from 'vs/workbench/services/themes/common/hostColorSchemeService';\nimport { RunOnceScheduler, Sequencer } from 'vs/base/common/async';\nimport { IUserDataInitializationService } from 'vs/workbench/services/userData/browser/userDataInit';\nimport { getIconsStyleSheet } from 'vs/platform/theme/browser/iconsStyleSheet';\nimport { asCssVariableName, getColorRegistry } from 'vs/platform/theme/common/colorRegistry';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\n\n// implementation\n\nconst PERSISTED_OS_COLOR_SCHEME = 'osColorScheme';\nconst PERSISTED_OS_COLOR_SCHEME_SCOPE = StorageScope.APPLICATION; // the OS scheme depends on settings in the OS\n\nconst defaultThemeExtensionId = 'vscode-theme-defaults';\n\nconst DEFAULT_FILE_ICON_THEME_ID = 'vscode.vscode-theme-seti-vs-seti';\nconst fileIconsEnabledClass = 'file-icons-enabled';\n\nconst colorThemeRulesClassName = 'contributedColorTheme';\nconst fileIconThemeRulesClassName = 'contributedFileIconTheme';\nconst productIconThemeRulesClassName = 'contributedProductIconTheme';\n\nconst themingRegistry = Registry.as<IThemingRegistry>(ThemingExtensions.ThemingContribution);\n\nfunction validateThemeId(theme: string): string {\n\t// migrations\n\tswitch (theme) {\n\t\tcase VS_LIGHT_THEME: return `vs ${defaultThemeExtensionId}-themes-light_vs-json`;\n\t\tcase VS_DARK_THEME: return `vs-dark ${defaultThemeExtensionId}-themes-dark_vs-json`;\n\t\tcase VS_HC_THEME: return `hc-black ${defaultThemeExtensionId}-themes-hc_black-json`;\n\t\tcase VS_HC_LIGHT_THEME: return `hc-light ${defaultThemeExtensionId}-themes-hc_light-json`;\n\t}\n\treturn theme;\n}\n\nconst colorThemesExtPoint = registerColorThemeExtensionPoint();\nconst fileIconThemesExtPoint = registerFileIconThemeExtensionPoint();\nconst productIconThemesExtPoint = registerProductIconThemeExtensionPoint();\n\nexport class WorkbenchThemeService implements IWorkbenchThemeService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly container: HTMLElement;\n\tprivate settings: ThemeConfiguration;\n\n\tprivate readonly colorThemeRegistry: ThemeRegistry<ColorThemeData>;\n\tprivate currentColorTheme: ColorThemeData;\n\tprivate readonly onColorThemeChange: Emitter<IWorkbenchColorTheme>;\n\tprivate readonly colorThemeWatcher: ThemeFileWatcher;\n\tprivate colorThemingParticipantChangeListener: IDisposable | undefined;\n\tprivate readonly colorThemeSequencer: Sequencer;\n\n\tprivate readonly fileIconThemeRegistry: ThemeRegistry<FileIconThemeData>;\n\tprivate currentFileIconTheme: FileIconThemeData;\n\tprivate readonly onFileIconThemeChange: Emitter<IWorkbenchFileIconTheme>;\n\tprivate readonly fileIconThemeLoader: FileIconThemeLoader;\n\tprivate readonly fileIconThemeWatcher: ThemeFileWatcher;\n\tprivate readonly fileIconThemeSequencer: Sequencer;\n\n\tprivate readonly productIconThemeRegistry: ThemeRegistry<ProductIconThemeData>;\n\tprivate currentProductIconTheme: ProductIconThemeData;\n\tprivate readonly onProductIconThemeChange: Emitter<IWorkbenchProductIconTheme>;\n\tprivate readonly productIconThemeWatcher: ThemeFileWatcher;\n\tprivate readonly productIconThemeSequencer: Sequencer;\n\n\tprivate themeSettingIdBeforeSchemeSwitch: string | undefined;\n\n\tprivate hasDefaultUpdated: boolean = false;\n\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IExtensionResourceLoaderService private readonly extensionResourceLoaderService: IExtensionResourceLoaderService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IHostColorSchemeService private readonly hostColorService: IHostColorSchemeService,\n\t\t@IUserDataInitializationService private readonly userDataInitializationService: IUserDataInitializationService,\n\t\t@ILanguageService languageService: ILanguageService\n\t) {\n\t\tthis.container = layoutService.container;\n\t\tthis.settings = new ThemeConfiguration(configurationService);\n\n\t\tthis.colorThemeRegistry = new ThemeRegistry(colorThemesExtPoint, ColorThemeData.fromExtensionTheme);\n\t\tthis.colorThemeWatcher = new ThemeFileWatcher(fileService, environmentService, this.reloadCurrentColorTheme.bind(this));\n\t\tthis.onColorThemeChange = new Emitter<IWorkbenchColorTheme>({ leakWarningThreshold: 400 });\n\t\tthis.currentColorTheme = ColorThemeData.createUnloadedTheme('');\n\t\tthis.colorThemeSequencer = new Sequencer();\n\n\t\tthis.fileIconThemeWatcher = new ThemeFileWatcher(fileService, environmentService, this.reloadCurrentFileIconTheme.bind(this));\n\t\tthis.fileIconThemeRegistry = new ThemeRegistry(fileIconThemesExtPoint, FileIconThemeData.fromExtensionTheme, true, FileIconThemeData.noIconTheme);\n\t\tthis.fileIconThemeLoader = new FileIconThemeLoader(extensionResourceLoaderService, languageService);\n\t\tthis.onFileIconThemeChange = new Emitter<IWorkbenchFileIconTheme>({ leakWarningThreshold: 400 });\n\t\tthis.currentFileIconTheme = FileIconThemeData.createUnloadedTheme('');\n\t\tthis.fileIconThemeSequencer = new Sequencer();\n\n\t\tthis.productIconThemeWatcher = new ThemeFileWatcher(fileService, environmentService, this.reloadCurrentProductIconTheme.bind(this));\n\t\tthis.productIconThemeRegistry = new ThemeRegistry(productIconThemesExtPoint, ProductIconThemeData.fromExtensionTheme, true, ProductIconThemeData.defaultTheme);\n\t\tthis.onProductIconThemeChange = new Emitter<IWorkbenchProductIconTheme>();\n\t\tthis.currentProductIconTheme = ProductIconThemeData.createUnloadedTheme('');\n\t\tthis.productIconThemeSequencer = new Sequencer();\n\n\t\t// In order to avoid paint flashing for tokens, because\n\t\t// themes are loaded asynchronously, we need to initialize\n\t\t// a color theme document with good defaults until the theme is loaded\n\t\tlet themeData: ColorThemeData | undefined = ColorThemeData.fromStorageData(this.storageService);\n\t\tconst colorThemeSetting = this.settings.colorTheme;\n\t\tif (themeData && colorThemeSetting !== themeData.settingsId && this.settings.isDefaultColorTheme()) {\n\t\t\tthis.hasDefaultUpdated = themeData.settingsId === ThemeSettingDefaults.COLOR_THEME_DARK_OLD || themeData.settingsId === ThemeSettingDefaults.COLOR_THEME_LIGHT_OLD;\n\n\t\t\t// the web has different defaults than the desktop, therefore do not restore when the setting is the default theme and the storage doesn't match that.\n\t\t\tthemeData = undefined;\n\t\t}\n\n\t\t// the preferred color scheme (high contrast, light, dark) has changed since the last start\n\t\tconst preferredColorScheme = this.getPreferredColorScheme();\n\t\tconst defaultColorMap = colorThemeSetting === ThemeSettingDefaults.COLOR_THEME_LIGHT ? COLOR_THEME_LIGHT_INITIAL_COLORS : colorThemeSetting === ThemeSettingDefaults.COLOR_THEME_DARK ? COLOR_THEME_DARK_INITIAL_COLORS : undefined;\n\n\t\tif (preferredColorScheme && themeData?.type !== preferredColorScheme && this.storageService.get(PERSISTED_OS_COLOR_SCHEME, PERSISTED_OS_COLOR_SCHEME_SCOPE) !== preferredColorScheme) {\n\t\t\tthemeData = ColorThemeData.createUnloadedThemeForThemeType(preferredColorScheme, undefined);\n\t\t}\n\t\tif (!themeData) {\n\t\t\tconst initialColorTheme = environmentService.options?.initialColorTheme;\n\t\t\tif (initialColorTheme) {\n\t\t\t\tthemeData = ColorThemeData.createUnloadedThemeForThemeType(initialColorTheme.themeType, initialColorTheme.colors ?? defaultColorMap);\n\t\t\t}\n\t\t}\n\t\tif (!themeData) {\n\t\t\tthemeData = ColorThemeData.createUnloadedThemeForThemeType(isWeb ? ColorScheme.LIGHT : ColorScheme.DARK, defaultColorMap);\n\t\t}\n\t\tthemeData.setCustomizations(this.settings);\n\t\tthis.applyTheme(themeData, undefined, true);\n\n\t\tconst fileIconData = FileIconThemeData.fromStorageData(this.storageService);\n\t\tif (fileIconData) {\n\t\t\tthis.applyAndSetFileIconTheme(fileIconData, true);\n\t\t}\n\n\t\tconst productIconData = ProductIconThemeData.fromStorageData(this.storageService);\n\t\tif (productIconData) {\n\t\t\tthis.applyAndSetProductIconTheme(productIconData, true);\n\t\t}\n\n\t\textensionService.whenInstalledExtensionsRegistered().then(_ => {\n\t\t\tthis.installConfigurationListener();\n\t\t\tthis.installPreferredSchemeListener();\n\t\t\tthis.installRegistryListeners();\n\t\t\tthis.initialize().catch(errors.onUnexpectedError);\n\t\t});\n\n\t\tconst codiconStyleSheet = createStyleSheet();\n\t\tcodiconStyleSheet.id = 'codiconStyles';\n\n\t\tconst iconsStyleSheet = getIconsStyleSheet(this);\n\t\tfunction updateAll() {\n\t\t\tcodiconStyleSheet.textContent = iconsStyleSheet.getCSS();\n\t\t}\n\n\t\tconst delayer = new RunOnceScheduler(updateAll, 0);\n\t\ticonsStyleSheet.onDidChange(() => delayer.schedule());\n\t\tdelayer.schedule();\n\t}\n\n\tprivate initialize(): Promise<[IWorkbenchColorTheme | null, IWorkbenchFileIconTheme | null, IWorkbenchProductIconTheme | null]> {\n\t\tconst extDevLocs = this.environmentService.extensionDevelopmentLocationURI;\n\t\tconst extDevLoc = extDevLocs && extDevLocs.length === 1 ? extDevLocs[0] : undefined; // in dev mode, switch to a theme provided by the extension under dev.\n\n\t\tconst initializeColorTheme = async () => {\n\t\t\tconst devThemes = this.colorThemeRegistry.findThemeByExtensionLocation(extDevLoc);\n\t\t\tif (devThemes.length) {\n\t\t\t\treturn this.setColorTheme(devThemes[0].id, ConfigurationTarget.MEMORY);\n\t\t\t}\n\n\t\t\tconst preferredColorScheme = this.getPreferredColorScheme();\n\t\t\tconst prevScheme = this.storageService.get(PERSISTED_OS_COLOR_SCHEME, PERSISTED_OS_COLOR_SCHEME_SCOPE);\n\t\t\tif (preferredColorScheme !== prevScheme) {\n\t\t\t\tthis.storageService.store(PERSISTED_OS_COLOR_SCHEME, preferredColorScheme, PERSISTED_OS_COLOR_SCHEME_SCOPE, StorageTarget.USER);\n\t\t\t\tif (preferredColorScheme && this.currentColorTheme.type !== preferredColorScheme) {\n\t\t\t\t\treturn this.applyPreferredColorTheme(preferredColorScheme);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet theme = this.colorThemeRegistry.findThemeBySettingsId(this.settings.colorTheme, undefined);\n\t\t\tif (!theme) {\n\t\t\t\t// If the current theme is not available, first make sure setting sync is complete\n\t\t\t\tawait this.userDataInitializationService.whenInitializationFinished();\n\t\t\t\t// try to get the theme again, now with a fallback to the default themes\n\t\t\t\tconst fallbackTheme = this.currentColorTheme.type === ColorScheme.LIGHT ? ThemeSettingDefaults.COLOR_THEME_LIGHT : ThemeSettingDefaults.COLOR_THEME_DARK;\n\t\t\t\ttheme = this.colorThemeRegistry.findThemeBySettingsId(this.settings.colorTheme, fallbackTheme);\n\t\t\t}\n\t\t\treturn this.setColorTheme(theme && theme.id, undefined);\n\t\t};\n\n\t\tconst initializeFileIconTheme = async () => {\n\t\t\tconst devThemes = this.fileIconThemeRegistry.findThemeByExtensionLocation(extDevLoc);\n\t\t\tif (devThemes.length) {\n\t\t\t\treturn this.setFileIconTheme(devThemes[0].id, ConfigurationTarget.MEMORY);\n\t\t\t}\n\t\t\tlet theme = this.fileIconThemeRegistry.findThemeBySettingsId(this.settings.fileIconTheme);\n\t\t\tif (!theme) {\n\t\t\t\t// If the current theme is not available, first make sure setting sync is complete\n\t\t\t\tawait this.userDataInitializationService.whenInitializationFinished();\n\t\t\t\ttheme = this.fileIconThemeRegistry.findThemeBySettingsId(this.settings.fileIconTheme);\n\t\t\t}\n\t\t\treturn this.setFileIconTheme(theme ? theme.id : DEFAULT_FILE_ICON_THEME_ID, undefined);\n\t\t};\n\n\t\tconst initializeProductIconTheme = async () => {\n\t\t\tconst devThemes = this.productIconThemeRegistry.findThemeByExtensionLocation(extDevLoc);\n\t\t\tif (devThemes.length) {\n\t\t\t\treturn this.setProductIconTheme(devThemes[0].id, ConfigurationTarget.MEMORY);\n\t\t\t}\n\t\t\tlet theme = this.productIconThemeRegistry.findThemeBySettingsId(this.settings.productIconTheme);\n\t\t\tif (!theme) {\n\t\t\t\t// If the current theme is not available, first make sure setting sync is complete\n\t\t\t\tawait this.userDataInitializationService.whenInitializationFinished();\n\t\t\t\ttheme = this.productIconThemeRegistry.findThemeBySettingsId(this.settings.productIconTheme);\n\t\t\t}\n\t\t\treturn this.setProductIconTheme(theme ? theme.id : DEFAULT_PRODUCT_ICON_THEME_ID, undefined);\n\t\t};\n\n\n\t\treturn Promise.all([initializeColorTheme(), initializeFileIconTheme(), initializeProductIconTheme()]);\n\t}\n\n\tprivate installConfigurationListener() {\n\t\tthis.configurationService.onDidChangeConfiguration(e => {\n\t\t\tlet lazyPreferredColorScheme: ColorScheme | undefined | null = null;\n\t\t\tconst getPreferredColorScheme = () => {\n\t\t\t\tif (lazyPreferredColorScheme === null) {\n\t\t\t\t\tlazyPreferredColorScheme = this.getPreferredColorScheme();\n\t\t\t\t}\n\t\t\t\treturn lazyPreferredColorScheme;\n\t\t\t};\n\n\t\t\tif (e.affectsConfiguration(ThemeSettings.COLOR_THEME)) {\n\t\t\t\tthis.restoreColorTheme();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.DETECT_COLOR_SCHEME) || e.affectsConfiguration(ThemeSettings.DETECT_HC)) {\n\t\t\t\tthis.handlePreferredSchemeUpdated();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.PREFERRED_DARK_THEME) && getPreferredColorScheme() === ColorScheme.DARK) {\n\t\t\t\tthis.applyPreferredColorTheme(ColorScheme.DARK);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.PREFERRED_LIGHT_THEME) && getPreferredColorScheme() === ColorScheme.LIGHT) {\n\t\t\t\tthis.applyPreferredColorTheme(ColorScheme.LIGHT);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.PREFERRED_HC_DARK_THEME) && getPreferredColorScheme() === ColorScheme.HIGH_CONTRAST_DARK) {\n\t\t\t\tthis.applyPreferredColorTheme(ColorScheme.HIGH_CONTRAST_DARK);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.PREFERRED_HC_LIGHT_THEME) && getPreferredColorScheme() === ColorScheme.HIGH_CONTRAST_LIGHT) {\n\t\t\t\tthis.applyPreferredColorTheme(ColorScheme.HIGH_CONTRAST_LIGHT);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.FILE_ICON_THEME)) {\n\t\t\t\tthis.restoreFileIconTheme();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.PRODUCT_ICON_THEME)) {\n\t\t\t\tthis.restoreProductIconTheme();\n\t\t\t}\n\t\t\tif (this.currentColorTheme) {\n\t\t\t\tlet hasColorChanges = false;\n\t\t\t\tif (e.affectsConfiguration(ThemeSettings.COLOR_CUSTOMIZATIONS)) {\n\t\t\t\t\tthis.currentColorTheme.setCustomColors(this.settings.colorCustomizations);\n\t\t\t\t\thasColorChanges = true;\n\t\t\t\t}\n\t\t\t\tif (e.affectsConfiguration(ThemeSettings.TOKEN_COLOR_CUSTOMIZATIONS)) {\n\t\t\t\t\tthis.currentColorTheme.setCustomTokenColors(this.settings.tokenColorCustomizations);\n\t\t\t\t\thasColorChanges = true;\n\t\t\t\t}\n\t\t\t\tif (e.affectsConfiguration(ThemeSettings.SEMANTIC_TOKEN_COLOR_CUSTOMIZATIONS)) {\n\t\t\t\t\tthis.currentColorTheme.setCustomSemanticTokenColors(this.settings.semanticTokenColorCustomizations);\n\t\t\t\t\thasColorChanges = true;\n\t\t\t\t}\n\t\t\t\tif (hasColorChanges) {\n\t\t\t\t\tthis.updateDynamicCSSRules(this.currentColorTheme);\n\t\t\t\t\tthis.onColorThemeChange.fire(this.currentColorTheme);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate installRegistryListeners(): Promise<any> {\n\n\t\tlet prevColorId: string | undefined = undefined;\n\n\t\t// update settings schema setting for theme specific settings\n\t\tthis.colorThemeRegistry.onDidChange(async event => {\n\t\t\tupdateColorThemeConfigurationSchemas(event.themes);\n\t\t\tif (await this.restoreColorTheme()) { // checks if theme from settings exists and is set\n\t\t\t\t// restore theme\n\t\t\t\tif (this.currentColorTheme.settingsId === ThemeSettingDefaults.COLOR_THEME_DARK && !types.isUndefined(prevColorId) && await this.colorThemeRegistry.findThemeById(prevColorId)) {\n\t\t\t\t\tawait this.setColorTheme(prevColorId, 'auto');\n\t\t\t\t\tprevColorId = undefined;\n\t\t\t\t} else if (event.added.some(t => t.settingsId === this.currentColorTheme.settingsId)) {\n\t\t\t\t\tawait this.reloadCurrentColorTheme();\n\t\t\t\t}\n\t\t\t} else if (event.removed.some(t => t.settingsId === this.currentColorTheme.settingsId)) {\n\t\t\t\t// current theme is no longer available\n\t\t\t\tprevColorId = this.currentColorTheme.id;\n\t\t\t\tconst defaultTheme = this.colorThemeRegistry.findThemeBySettingsId(ThemeSettingDefaults.COLOR_THEME_DARK);\n\t\t\t\tawait this.setColorTheme(defaultTheme, 'auto');\n\t\t\t}\n\t\t});\n\n\t\tlet prevFileIconId: string | undefined = undefined;\n\t\tthis.fileIconThemeRegistry.onDidChange(async event => {\n\t\t\tupdateFileIconThemeConfigurationSchemas(event.themes);\n\t\t\tif (await this.restoreFileIconTheme()) { // checks if theme from settings exists and is set\n\t\t\t\t// restore theme\n\t\t\t\tif (this.currentFileIconTheme.id === DEFAULT_FILE_ICON_THEME_ID && !types.isUndefined(prevFileIconId) && this.fileIconThemeRegistry.findThemeById(prevFileIconId)) {\n\t\t\t\t\tawait this.setFileIconTheme(prevFileIconId, 'auto');\n\t\t\t\t\tprevFileIconId = undefined;\n\t\t\t\t} else if (event.added.some(t => t.settingsId === this.currentFileIconTheme.settingsId)) {\n\t\t\t\t\tawait this.reloadCurrentFileIconTheme();\n\t\t\t\t}\n\t\t\t} else if (event.removed.some(t => t.settingsId === this.currentFileIconTheme.settingsId)) {\n\t\t\t\t// current theme is no longer available\n\t\t\t\tprevFileIconId = this.currentFileIconTheme.id;\n\t\t\t\tawait this.setFileIconTheme(DEFAULT_FILE_ICON_THEME_ID, 'auto');\n\t\t\t}\n\n\t\t});\n\n\t\tlet prevProductIconId: string | undefined = undefined;\n\t\tthis.productIconThemeRegistry.onDidChange(async event => {\n\t\t\tupdateProductIconThemeConfigurationSchemas(event.themes);\n\t\t\tif (await this.restoreProductIconTheme()) { // checks if theme from settings exists and is set\n\t\t\t\t// restore theme\n\t\t\t\tif (this.currentProductIconTheme.id === DEFAULT_PRODUCT_ICON_THEME_ID && !types.isUndefined(prevProductIconId) && this.productIconThemeRegistry.findThemeById(prevProductIconId)) {\n\t\t\t\t\tawait this.setProductIconTheme(prevProductIconId, 'auto');\n\t\t\t\t\tprevProductIconId = undefined;\n\t\t\t\t} else if (event.added.some(t => t.settingsId === this.currentProductIconTheme.settingsId)) {\n\t\t\t\t\tawait this.reloadCurrentProductIconTheme();\n\t\t\t\t}\n\t\t\t} else if (event.removed.some(t => t.settingsId === this.currentProductIconTheme.settingsId)) {\n\t\t\t\t// current theme is no longer available\n\t\t\t\tprevProductIconId = this.currentProductIconTheme.id;\n\t\t\t\tawait this.setProductIconTheme(DEFAULT_PRODUCT_ICON_THEME_ID, 'auto');\n\t\t\t}\n\t\t});\n\n\t\treturn Promise.all([this.getColorThemes(), this.getFileIconThemes(), this.getProductIconThemes()]).then(([ct, fit, pit]) => {\n\t\t\tupdateColorThemeConfigurationSchemas(ct);\n\t\t\tupdateFileIconThemeConfigurationSchemas(fit);\n\t\t\tupdateProductIconThemeConfigurationSchemas(pit);\n\t\t});\n\t}\n\n\n\t// preferred scheme handling\n\n\tprivate installPreferredSchemeListener() {\n\t\tthis.hostColorService.onDidChangeColorScheme(() => this.handlePreferredSchemeUpdated());\n\t}\n\n\tprivate async handlePreferredSchemeUpdated() {\n\t\tconst scheme = this.getPreferredColorScheme();\n\t\tconst prevScheme = this.storageService.get(PERSISTED_OS_COLOR_SCHEME, PERSISTED_OS_COLOR_SCHEME_SCOPE);\n\t\tif (scheme !== prevScheme) {\n\t\t\tthis.storageService.store(PERSISTED_OS_COLOR_SCHEME, scheme, PERSISTED_OS_COLOR_SCHEME_SCOPE, StorageTarget.MACHINE);\n\t\t\tif (scheme) {\n\t\t\t\tif (!prevScheme) {\n\t\t\t\t\t// remember the theme before scheme switching\n\t\t\t\t\tthis.themeSettingIdBeforeSchemeSwitch = this.settings.colorTheme;\n\t\t\t\t}\n\t\t\t\treturn this.applyPreferredColorTheme(scheme);\n\t\t\t} else if (prevScheme && this.themeSettingIdBeforeSchemeSwitch) {\n\t\t\t\t// reapply the theme before scheme switching\n\t\t\t\tconst theme = this.colorThemeRegistry.findThemeBySettingsId(this.themeSettingIdBeforeSchemeSwitch, undefined);\n\t\t\t\tif (theme) {\n\t\t\t\t\tthis.setColorTheme(theme.id, 'auto');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getPreferredColorScheme(): ColorScheme | undefined {\n\t\tif (this.configurationService.getValue(ThemeSettings.DETECT_HC) && this.hostColorService.highContrast) {\n\t\t\treturn this.hostColorService.dark ? ColorScheme.HIGH_CONTRAST_DARK : ColorScheme.HIGH_CONTRAST_LIGHT;\n\t\t}\n\t\tif (this.configurationService.getValue(ThemeSettings.DETECT_COLOR_SCHEME)) {\n\t\t\treturn this.hostColorService.dark ? ColorScheme.DARK : ColorScheme.LIGHT;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async applyPreferredColorTheme(type: ColorScheme): Promise<IWorkbenchColorTheme | null> {\n\t\tlet settingId: ThemeSettings;\n\t\tswitch (type) {\n\t\t\tcase ColorScheme.LIGHT: settingId = ThemeSettings.PREFERRED_LIGHT_THEME; break;\n\t\t\tcase ColorScheme.HIGH_CONTRAST_DARK: settingId = ThemeSettings.PREFERRED_HC_DARK_THEME; break;\n\t\t\tcase ColorScheme.HIGH_CONTRAST_LIGHT: settingId = ThemeSettings.PREFERRED_HC_LIGHT_THEME; break;\n\t\t\tdefault:\n\t\t\t\tsettingId = ThemeSettings.PREFERRED_DARK_THEME;\n\t\t}\n\t\tconst themeSettingId = this.configurationService.getValue(settingId);\n\t\tif (themeSettingId && typeof themeSettingId === 'string') {\n\t\t\tconst theme = this.colorThemeRegistry.findThemeBySettingsId(themeSettingId, undefined);\n\t\t\tif (theme) {\n\t\t\t\tconst configurationTarget = this.settings.findAutoConfigurationTarget(settingId);\n\t\t\t\treturn this.setColorTheme(theme.id, configurationTarget);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic hasUpdatedDefaultThemes(): boolean {\n\t\treturn this.hasDefaultUpdated;\n\t}\n\n\tpublic getColorTheme(): IWorkbenchColorTheme {\n\t\treturn this.currentColorTheme;\n\t}\n\n\tpublic async getColorThemes(): Promise<IWorkbenchColorTheme[]> {\n\t\treturn this.colorThemeRegistry.getThemes();\n\t}\n\n\tpublic async getMarketplaceColorThemes(publisher: string, name: string, version: string): Promise<IWorkbenchColorTheme[]> {\n\t\tconst extensionLocation = this.extensionResourceLoaderService.getExtensionGalleryResourceURL({ publisher, name, version }, 'extension');\n\t\tif (extensionLocation) {\n\t\t\ttry {\n\t\t\t\tconst manifestContent = await this.extensionResourceLoaderService.readExtensionResource(resources.joinPath(extensionLocation, 'package.json'));\n\t\t\t\treturn this.colorThemeRegistry.getMarketplaceThemes(JSON.parse(manifestContent), extensionLocation, ExtensionData.fromName(publisher, name));\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error('Problem loading themes from marketplace', e);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic get onDidColorThemeChange(): Event<IWorkbenchColorTheme> {\n\t\treturn this.onColorThemeChange.event;\n\t}\n\n\tpublic setColorTheme(themeIdOrTheme: string | undefined | IWorkbenchColorTheme, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchColorTheme | null> {\n\t\treturn this.colorThemeSequencer.queue(async () => {\n\t\t\treturn this.internalSetColorTheme(themeIdOrTheme, settingsTarget);\n\t\t});\n\t}\n\n\tprivate async internalSetColorTheme(themeIdOrTheme: string | undefined | IWorkbenchColorTheme, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchColorTheme | null> {\n\t\tif (!themeIdOrTheme) {\n\t\t\treturn null;\n\t\t}\n\t\tconst themeId = types.isString(themeIdOrTheme) ? validateThemeId(themeIdOrTheme) : themeIdOrTheme.id;\n\t\tif (this.currentColorTheme.isLoaded && themeId === this.currentColorTheme.id) {\n\t\t\tif (settingsTarget !== 'preview') {\n\t\t\t\tthis.currentColorTheme.toStorage(this.storageService);\n\t\t\t}\n\t\t\treturn this.settings.setColorTheme(this.currentColorTheme, settingsTarget);\n\t\t}\n\n\t\tlet themeData = this.colorThemeRegistry.findThemeById(themeId);\n\t\tif (!themeData) {\n\t\t\tif (themeIdOrTheme instanceof ColorThemeData) {\n\t\t\t\tthemeData = themeIdOrTheme;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tawait themeData.ensureLoaded(this.extensionResourceLoaderService);\n\t\t\tthemeData.setCustomizations(this.settings);\n\t\t\treturn this.applyTheme(themeData, settingsTarget);\n\t\t} catch (error) {\n\t\t\tthrow new Error(nls.localize('error.cannotloadtheme', \"Unable to load {0}: {1}\", themeData.location?.toString(), error.message));\n\t\t}\n\n\t}\n\n\tprivate reloadCurrentColorTheme() {\n\t\treturn this.colorThemeSequencer.queue(async () => {\n\t\t\ttry {\n\t\t\t\tconst theme = this.colorThemeRegistry.findThemeBySettingsId(this.currentColorTheme.settingsId) || this.currentColorTheme;\n\t\t\t\tawait theme.reload(this.extensionResourceLoaderService);\n\t\t\t\ttheme.setCustomizations(this.settings);\n\t\t\t\tawait this.applyTheme(theme, undefined, false);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.info('Unable to reload {0}: {1}', this.currentColorTheme.location?.toString());\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async restoreColorTheme(): Promise<boolean> {\n\t\treturn this.colorThemeSequencer.queue(async () => {\n\t\t\tconst settingId = this.settings.colorTheme;\n\t\t\tconst theme = this.colorThemeRegistry.findThemeBySettingsId(settingId);\n\t\t\tif (theme) {\n\t\t\t\tif (settingId !== this.currentColorTheme.settingsId) {\n\t\t\t\t\tawait this.internalSetColorTheme(theme.id, undefined);\n\t\t\t\t} else if (theme !== this.currentColorTheme) {\n\t\t\t\t\tawait theme.ensureLoaded(this.extensionResourceLoaderService);\n\t\t\t\t\ttheme.setCustomizations(this.settings);\n\t\t\t\t\tawait this.applyTheme(theme, undefined, true);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate updateDynamicCSSRules(themeData: IColorTheme) {\n\t\tconst cssRules = new Set<string>();\n\t\tconst ruleCollector = {\n\t\t\taddRule: (rule: string) => {\n\t\t\t\tif (!cssRules.has(rule)) {\n\t\t\t\t\tcssRules.add(rule);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\truleCollector.addRule(`.monaco-workbench { forced-color-adjust: none; }`);\n\t\tthemingRegistry.getThemingParticipants().forEach(p => p(themeData, ruleCollector, this.environmentService));\n\n\t\tconst colorVariables: string[] = [];\n\t\tfor (const item of getColorRegistry().getColors()) {\n\t\t\tconst color = themeData.getColor(item.id, true);\n\t\t\tif (color) {\n\t\t\t\tcolorVariables.push(`${asCssVariableName(item.id)}: ${color.toString()};`);\n\t\t\t}\n\t\t}\n\t\truleCollector.addRule(`.monaco-workbench { ${colorVariables.join('\\n')} }`);\n\n\t\t_applyRules([...cssRules].join('\\n'), colorThemeRulesClassName);\n\t}\n\n\tprivate applyTheme(newTheme: ColorThemeData, settingsTarget: ThemeSettingTarget, silent = false): Promise<IWorkbenchColorTheme | null> {\n\t\tthis.updateDynamicCSSRules(newTheme);\n\n\t\tif (this.currentColorTheme.id) {\n\t\t\tthis.container.classList.remove(...this.currentColorTheme.classNames);\n\t\t} else {\n\t\t\tthis.container.classList.remove(VS_DARK_THEME, VS_LIGHT_THEME, VS_HC_THEME, VS_HC_LIGHT_THEME);\n\t\t}\n\t\tthis.container.classList.add(...newTheme.classNames);\n\n\t\tthis.currentColorTheme.clearCaches();\n\t\tthis.currentColorTheme = newTheme;\n\t\tif (!this.colorThemingParticipantChangeListener) {\n\t\t\tthis.colorThemingParticipantChangeListener = themingRegistry.onThemingParticipantAdded(_ => this.updateDynamicCSSRules(this.currentColorTheme));\n\t\t}\n\n\t\tthis.colorThemeWatcher.update(newTheme);\n\n\t\tthis.sendTelemetry(newTheme.id, newTheme.extensionData, 'color');\n\n\t\tif (silent) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tthis.onColorThemeChange.fire(this.currentColorTheme);\n\n\t\t// remember theme data for a quick restore\n\t\tif (newTheme.isLoaded && settingsTarget !== 'preview') {\n\t\t\tnewTheme.toStorage(this.storageService);\n\t\t}\n\n\t\treturn this.settings.setColorTheme(this.currentColorTheme, settingsTarget);\n\t}\n\n\n\tprivate themeExtensionsActivated = new Map<string, boolean>();\n\tprivate sendTelemetry(themeId: string, themeData: ExtensionData | undefined, themeType: string) {\n\t\tif (themeData) {\n\t\t\tconst key = themeType + themeData.extensionId;\n\t\t\tif (!this.themeExtensionsActivated.get(key)) {\n\t\t\t\ttype ActivatePluginClassification = {\n\t\t\t\t\towner: 'aeschli';\n\t\t\t\t\tcomment: 'An event is fired when an color theme extension is first used as it provides the currently shown color theme.';\n\t\t\t\t\tid: { classification: 'PublicNonPersonalData'; purpose: 'FeatureInsight'; comment: 'The extension id.' };\n\t\t\t\t\tname: { classification: 'PublicNonPersonalData'; purpose: 'FeatureInsight'; comment: 'The extension name.' };\n\t\t\t\t\tisBuiltin: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Whether the extension is a built-in extension.' };\n\t\t\t\t\tpublisherDisplayName: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The extension publisher id.' };\n\t\t\t\t\tthemeId: { classification: 'PublicNonPersonalData'; purpose: 'FeatureInsight'; comment: 'The id of the theme that triggered the first extension use.' };\n\t\t\t\t};\n\t\t\t\ttype ActivatePluginEvent = {\n\t\t\t\t\tid: string;\n\t\t\t\t\tname: string;\n\t\t\t\t\tisBuiltin: boolean;\n\t\t\t\t\tpublisherDisplayName: string;\n\t\t\t\t\tthemeId: string;\n\t\t\t\t};\n\t\t\t\tthis.telemetryService.publicLog2<ActivatePluginEvent, ActivatePluginClassification>('activatePlugin', {\n\t\t\t\t\tid: themeData.extensionId,\n\t\t\t\t\tname: themeData.extensionName,\n\t\t\t\t\tisBuiltin: themeData.extensionIsBuiltin,\n\t\t\t\t\tpublisherDisplayName: themeData.extensionPublisher,\n\t\t\t\t\tthemeId: themeId\n\t\t\t\t});\n\t\t\t\tthis.themeExtensionsActivated.set(key, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async getFileIconThemes(): Promise<IWorkbenchFileIconTheme[]> {\n\t\treturn this.fileIconThemeRegistry.getThemes();\n\t}\n\n\tpublic getFileIconTheme() {\n\t\treturn this.currentFileIconTheme;\n\t}\n\n\tpublic get onDidFileIconThemeChange(): Event<IWorkbenchFileIconTheme> {\n\t\treturn this.onFileIconThemeChange.event;\n\t}\n\n\tpublic async setFileIconTheme(iconThemeOrId: string | undefined | IWorkbenchFileIconTheme, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchFileIconTheme> {\n\t\treturn this.fileIconThemeSequencer.queue(async () => {\n\t\t\treturn this.internalSetFileIconTheme(iconThemeOrId, settingsTarget);\n\t\t});\n\t}\n\n\tprivate async internalSetFileIconTheme(iconThemeOrId: string | undefined | IWorkbenchFileIconTheme, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchFileIconTheme> {\n\t\tif (iconThemeOrId === undefined) {\n\t\t\ticonThemeOrId = '';\n\t\t}\n\t\tconst themeId = types.isString(iconThemeOrId) ? iconThemeOrId : iconThemeOrId.id;\n\t\tif (themeId !== this.currentFileIconTheme.id || !this.currentFileIconTheme.isLoaded) {\n\n\t\t\tlet newThemeData = this.fileIconThemeRegistry.findThemeById(themeId);\n\t\t\tif (!newThemeData && iconThemeOrId instanceof FileIconThemeData) {\n\t\t\t\tnewThemeData = iconThemeOrId;\n\t\t\t}\n\t\t\tif (!newThemeData) {\n\t\t\t\tnewThemeData = FileIconThemeData.noIconTheme;\n\t\t\t}\n\t\t\tawait newThemeData.ensureLoaded(this.fileIconThemeLoader);\n\n\t\t\tthis.applyAndSetFileIconTheme(newThemeData); // updates this.currentFileIconTheme\n\t\t}\n\n\t\tconst themeData = this.currentFileIconTheme;\n\n\t\t// remember theme data for a quick restore\n\t\tif (themeData.isLoaded && settingsTarget !== 'preview' && (!themeData.location || !getRemoteAuthority(themeData.location))) {\n\t\t\tthemeData.toStorage(this.storageService);\n\t\t}\n\t\tawait this.settings.setFileIconTheme(this.currentFileIconTheme, settingsTarget);\n\n\t\treturn themeData;\n\t}\n\n\tpublic async getMarketplaceFileIconThemes(publisher: string, name: string, version: string): Promise<IWorkbenchFileIconTheme[]> {\n\t\tconst extensionLocation = this.extensionResourceLoaderService.getExtensionGalleryResourceURL({ publisher, name, version }, 'extension');\n\t\tif (extensionLocation) {\n\t\t\ttry {\n\t\t\t\tconst manifestContent = await this.extensionResourceLoaderService.readExtensionResource(resources.joinPath(extensionLocation, 'package.json'));\n\t\t\t\treturn this.fileIconThemeRegistry.getMarketplaceThemes(JSON.parse(manifestContent), extensionLocation, ExtensionData.fromName(publisher, name));\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error('Problem loading themes from marketplace', e);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async reloadCurrentFileIconTheme() {\n\t\treturn this.fileIconThemeSequencer.queue(async () => {\n\t\t\tawait this.currentFileIconTheme.reload(this.fileIconThemeLoader);\n\t\t\tthis.applyAndSetFileIconTheme(this.currentFileIconTheme);\n\t\t});\n\t}\n\n\tpublic async restoreFileIconTheme(): Promise<boolean> {\n\t\treturn this.fileIconThemeSequencer.queue(async () => {\n\t\t\tconst settingId = this.settings.fileIconTheme;\n\t\t\tconst theme = this.fileIconThemeRegistry.findThemeBySettingsId(settingId);\n\t\t\tif (theme) {\n\t\t\t\tif (settingId !== this.currentFileIconTheme.settingsId) {\n\t\t\t\t\tawait this.internalSetFileIconTheme(theme.id, undefined);\n\t\t\t\t} else if (theme !== this.currentFileIconTheme) {\n\t\t\t\t\tawait theme.ensureLoaded(this.fileIconThemeLoader);\n\t\t\t\t\tthis.applyAndSetFileIconTheme(theme, true);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate applyAndSetFileIconTheme(iconThemeData: FileIconThemeData, silent = false): void {\n\t\tthis.currentFileIconTheme = iconThemeData;\n\n\t\t_applyRules(iconThemeData.styleSheetContent!, fileIconThemeRulesClassName);\n\n\t\tif (iconThemeData.id) {\n\t\t\tthis.container.classList.add(fileIconsEnabledClass);\n\t\t} else {\n\t\t\tthis.container.classList.remove(fileIconsEnabledClass);\n\t\t}\n\n\t\tthis.fileIconThemeWatcher.update(iconThemeData);\n\n\t\tif (iconThemeData.id) {\n\t\t\tthis.sendTelemetry(iconThemeData.id, iconThemeData.extensionData, 'fileIcon');\n\t\t}\n\n\t\tif (!silent) {\n\t\t\tthis.onFileIconThemeChange.fire(this.currentFileIconTheme);\n\t\t}\n\t}\n\n\tpublic async getProductIconThemes(): Promise<IWorkbenchProductIconTheme[]> {\n\t\treturn this.productIconThemeRegistry.getThemes();\n\t}\n\n\tpublic getProductIconTheme() {\n\t\treturn this.currentProductIconTheme;\n\t}\n\n\tpublic get onDidProductIconThemeChange(): Event<IWorkbenchProductIconTheme> {\n\t\treturn this.onProductIconThemeChange.event;\n\t}\n\n\tpublic async setProductIconTheme(iconThemeOrId: string | undefined | IWorkbenchProductIconTheme, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchProductIconTheme> {\n\t\treturn this.productIconThemeSequencer.queue(async () => {\n\t\t\treturn this.internalSetProductIconTheme(iconThemeOrId, settingsTarget);\n\t\t});\n\t}\n\n\tprivate async internalSetProductIconTheme(iconThemeOrId: string | undefined | IWorkbenchProductIconTheme, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchProductIconTheme> {\n\t\tif (iconThemeOrId === undefined) {\n\t\t\ticonThemeOrId = '';\n\t\t}\n\t\tconst themeId = types.isString(iconThemeOrId) ? iconThemeOrId : iconThemeOrId.id;\n\t\tif (themeId !== this.currentProductIconTheme.id || !this.currentProductIconTheme.isLoaded) {\n\t\t\tlet newThemeData = this.productIconThemeRegistry.findThemeById(themeId);\n\t\t\tif (!newThemeData && iconThemeOrId instanceof ProductIconThemeData) {\n\t\t\t\tnewThemeData = iconThemeOrId;\n\t\t\t}\n\t\t\tif (!newThemeData) {\n\t\t\t\tnewThemeData = ProductIconThemeData.defaultTheme;\n\t\t\t}\n\t\t\tawait newThemeData.ensureLoaded(this.extensionResourceLoaderService, this.logService);\n\n\t\t\tthis.applyAndSetProductIconTheme(newThemeData); // updates this.currentProductIconTheme\n\t\t}\n\t\tconst themeData = this.currentProductIconTheme;\n\n\t\t// remember theme data for a quick restore\n\t\tif (themeData.isLoaded && settingsTarget !== 'preview' && (!themeData.location || !getRemoteAuthority(themeData.location))) {\n\t\t\tthemeData.toStorage(this.storageService);\n\t\t}\n\t\tawait this.settings.setProductIconTheme(this.currentProductIconTheme, settingsTarget);\n\n\t\treturn themeData;\n\n\t}\n\n\tpublic async getMarketplaceProductIconThemes(publisher: string, name: string, version: string): Promise<IWorkbenchProductIconTheme[]> {\n\t\tconst extensionLocation = this.extensionResourceLoaderService.getExtensionGalleryResourceURL({ publisher, name, version }, 'extension');\n\t\tif (extensionLocation) {\n\t\t\ttry {\n\t\t\t\tconst manifestContent = await this.extensionResourceLoaderService.readExtensionResource(resources.joinPath(extensionLocation, 'package.json'));\n\t\t\t\treturn this.productIconThemeRegistry.getMarketplaceThemes(JSON.parse(manifestContent), extensionLocation, ExtensionData.fromName(publisher, name));\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error('Problem loading themes from marketplace', e);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async reloadCurrentProductIconTheme() {\n\t\treturn this.productIconThemeSequencer.queue(async () => {\n\t\t\tawait this.currentProductIconTheme.reload(this.extensionResourceLoaderService, this.logService);\n\t\t\tthis.applyAndSetProductIconTheme(this.currentProductIconTheme);\n\t\t});\n\t}\n\n\tpublic async restoreProductIconTheme(): Promise<boolean> {\n\t\treturn this.productIconThemeSequencer.queue(async () => {\n\t\t\tconst settingId = this.settings.productIconTheme;\n\t\t\tconst theme = this.productIconThemeRegistry.findThemeBySettingsId(settingId);\n\t\t\tif (theme) {\n\t\t\t\tif (settingId !== this.currentProductIconTheme.settingsId) {\n\t\t\t\t\tawait this.internalSetProductIconTheme(theme.id, undefined);\n\t\t\t\t} else if (theme !== this.currentProductIconTheme) {\n\t\t\t\t\tawait theme.ensureLoaded(this.extensionResourceLoaderService, this.logService);\n\t\t\t\t\tthis.applyAndSetProductIconTheme(theme, true);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate applyAndSetProductIconTheme(iconThemeData: ProductIconThemeData, silent = false): void {\n\n\t\tthis.currentProductIconTheme = iconThemeData;\n\n\t\t_applyRules(iconThemeData.styleSheetContent!, productIconThemeRulesClassName);\n\n\t\tthis.productIconThemeWatcher.update(iconThemeData);\n\n\t\tif (iconThemeData.id) {\n\t\t\tthis.sendTelemetry(iconThemeData.id, iconThemeData.extensionData, 'productIcon');\n\t\t}\n\t\tif (!silent) {\n\t\t\tthis.onProductIconThemeChange.fire(this.currentProductIconTheme);\n\t\t}\n\t}\n}\n\nclass ThemeFileWatcher {\n\n\tprivate watchedLocation: URI | undefined;\n\tprivate watcherDisposable: IDisposable | undefined;\n\tprivate fileChangeListener: IDisposable | undefined;\n\n\tconstructor(private fileService: IFileService, private environmentService: IBrowserWorkbenchEnvironmentService, private onUpdate: () => void) {\n\t}\n\n\tupdate(theme: { location?: URI; watch?: boolean }) {\n\t\tif (!resources.isEqual(theme.location, this.watchedLocation)) {\n\t\t\tthis.dispose();\n\t\t\tif (theme.location && (theme.watch || this.environmentService.isExtensionDevelopment)) {\n\t\t\t\tthis.watchedLocation = theme.location;\n\t\t\t\tthis.watcherDisposable = this.fileService.watch(theme.location);\n\t\t\t\tthis.fileService.onDidFilesChange(e => {\n\t\t\t\t\tif (this.watchedLocation && e.contains(this.watchedLocation, FileChangeType.UPDATED)) {\n\t\t\t\t\t\tthis.onUpdate();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.watcherDisposable = dispose(this.watcherDisposable);\n\t\tthis.fileChangeListener = dispose(this.fileChangeListener);\n\t\tthis.watchedLocation = undefined;\n\t}\n}\n\nfunction _applyRules(styleSheetContent: string, rulesClassName: string) {\n\tconst themeStyles = document.head.getElementsByClassName(rulesClassName);\n\tif (themeStyles.length === 0) {\n\t\tconst elStyle = document.createElement('style');\n\t\telStyle.type = 'text/css';\n\t\telStyle.className = rulesClassName;\n\t\telStyle.textContent = styleSheetContent;\n\t\tdocument.head.appendChild(elStyle);\n\t} else {\n\t\t(<HTMLStyleElement>themeStyles[0]).textContent = styleSheetContent;\n\t}\n}\n\nregisterColorThemeSchemas();\nregisterFileIconThemeSchemas();\nregisterProductIconThemeSchemas();\n\n// The WorkbenchThemeService should stay eager as the constructor restores the\n// last used colors / icons from storage. This needs to happen as quickly as possible\n// for a flicker-free startup experience.\nregisterSingleton(IWorkbenchThemeService, WorkbenchThemeService, InstantiationType.Eager);\n"]}