{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/lifecycle/test/electron-sandbox/lifecycleService.test.ts"],"names":[],"mappings":"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","file":"lifecycleService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { ShutdownReason } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { NativeLifecycleService } from 'vs/workbench/services/lifecycle/electron-sandbox/lifecycleService';\nimport { workbenchInstantiationService } from 'vs/workbench/test/electron-sandbox/workbenchTestServices';\n\nsuite('Lifecycleservice', function () {\n\n\tlet lifecycleService: TestLifecycleService;\n\tconst disposables = new DisposableStore();\n\n\tclass TestLifecycleService extends NativeLifecycleService {\n\n\t\ttestHandleBeforeShutdown(reason: ShutdownReason): Promise<boolean> {\n\t\t\treturn super.handleBeforeShutdown(reason);\n\t\t}\n\n\t\ttestHandleWillShutdown(reason: ShutdownReason): Promise<void> {\n\t\t\treturn super.handleWillShutdown(reason);\n\t\t}\n\t}\n\n\tsetup(async () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tlifecycleService = disposables.add(instantiationService.createInstance(TestLifecycleService));\n\t});\n\n\tteardown(async () => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('onBeforeShutdown - final veto called after other vetos', async function () {\n\t\tlet vetoCalled = false;\n\t\tlet finalVetoCalled = false;\n\n\t\tconst order: number[] = [];\n\n\t\tdisposables.add(lifecycleService.onBeforeShutdown(e => {\n\t\t\te.veto(new Promise<boolean>(resolve => {\n\t\t\t\tvetoCalled = true;\n\t\t\t\torder.push(1);\n\n\t\t\t\tresolve(false);\n\t\t\t}), 'test');\n\t\t}));\n\n\t\tdisposables.add(lifecycleService.onBeforeShutdown(e => {\n\t\t\te.finalVeto(() => {\n\t\t\t\treturn new Promise<boolean>(resolve => {\n\t\t\t\t\tfinalVetoCalled = true;\n\t\t\t\t\torder.push(2);\n\n\t\t\t\t\tresolve(true);\n\t\t\t\t});\n\t\t\t}, 'test');\n\t\t}));\n\n\t\tconst veto = await lifecycleService.testHandleBeforeShutdown(ShutdownReason.QUIT);\n\n\t\tassert.strictEqual(veto, true);\n\t\tassert.strictEqual(vetoCalled, true);\n\t\tassert.strictEqual(finalVetoCalled, true);\n\t\tassert.strictEqual(order[0], 1);\n\t\tassert.strictEqual(order[1], 2);\n\t});\n\n\ttest('onBeforeShutdown - final veto not called when veto happened before', async function () {\n\t\tlet vetoCalled = false;\n\t\tlet finalVetoCalled = false;\n\n\t\tdisposables.add(lifecycleService.onBeforeShutdown(e => {\n\t\t\te.veto(new Promise<boolean>(resolve => {\n\t\t\t\tvetoCalled = true;\n\n\t\t\t\tresolve(true);\n\t\t\t}), 'test');\n\t\t}));\n\n\t\tdisposables.add(lifecycleService.onBeforeShutdown(e => {\n\t\t\te.finalVeto(() => {\n\t\t\t\treturn new Promise<boolean>(resolve => {\n\t\t\t\t\tfinalVetoCalled = true;\n\n\t\t\t\t\tresolve(true);\n\t\t\t\t});\n\t\t\t}, 'test');\n\t\t}));\n\n\t\tconst veto = await lifecycleService.testHandleBeforeShutdown(ShutdownReason.QUIT);\n\n\t\tassert.strictEqual(veto, true);\n\t\tassert.strictEqual(vetoCalled, true);\n\t\tassert.strictEqual(finalVetoCalled, false);\n\t});\n\n\ttest('onBeforeShutdown - veto with error is treated as veto', async function () {\n\t\tdisposables.add(lifecycleService.onBeforeShutdown(e => {\n\t\t\te.veto(new Promise<boolean>((resolve, reject) => {\n\t\t\t\treject(new Error('Fail'));\n\t\t\t}), 'test');\n\t\t}));\n\n\t\tconst veto = await lifecycleService.testHandleBeforeShutdown(ShutdownReason.QUIT);\n\n\t\tassert.strictEqual(veto, true);\n\t});\n\n\ttest('onBeforeShutdown - final veto with error is treated as veto', async function () {\n\t\tdisposables.add(lifecycleService.onBeforeShutdown(e => {\n\t\t\te.finalVeto(() => new Promise<boolean>((resolve, reject) => {\n\t\t\t\treject(new Error('Fail'));\n\t\t\t}), 'test');\n\t\t}));\n\n\t\tconst veto = await lifecycleService.testHandleBeforeShutdown(ShutdownReason.QUIT);\n\n\t\tassert.strictEqual(veto, true);\n\t});\n\n\ttest('onWillShutdown - join', async function () {\n\t\tlet joinCalled = false;\n\n\t\tdisposables.add(lifecycleService.onWillShutdown(e => {\n\t\t\te.join(new Promise(resolve => {\n\t\t\t\tjoinCalled = true;\n\n\t\t\t\tresolve();\n\t\t\t}), { id: 'test', label: 'test' });\n\t\t}));\n\n\t\tawait lifecycleService.testHandleWillShutdown(ShutdownReason.QUIT);\n\n\t\tassert.strictEqual(joinCalled, true);\n\t});\n\n\ttest('onWillShutdown - join with error is handled', async function () {\n\t\tlet joinCalled = false;\n\n\t\tdisposables.add(lifecycleService.onWillShutdown(e => {\n\t\t\te.join(new Promise((resolve, reject) => {\n\t\t\t\tjoinCalled = true;\n\n\t\t\t\treject(new Error('Fail'));\n\t\t\t}), { id: 'test', label: 'test' });\n\t\t}));\n\n\t\tawait lifecycleService.testHandleWillShutdown(ShutdownReason.QUIT);\n\n\t\tassert.strictEqual(joinCalled, true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}