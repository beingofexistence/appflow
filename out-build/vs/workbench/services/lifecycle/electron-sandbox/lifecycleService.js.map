{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/lifecycle/electron-sandbox/lifecycleService.ts"],"names":[],"mappings":"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","file":"lifecycleService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { handleVetos } from 'vs/platform/lifecycle/common/lifecycle';\nimport { ShutdownReason, ILifecycleService, IWillShutdownEventJoiner } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ipcRenderer } from 'vs/base/parts/sandbox/electron-sandbox/globals';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { AbstractLifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycleService';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { INativeHostService } from 'vs/platform/native/common/native';\nimport { Promises, disposableTimeout, raceCancellation } from 'vs/base/common/async';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\n\nexport class NativeLifecycleService extends AbstractLifecycleService {\n\n\tprivate static readonly BEFORE_SHUTDOWN_WARNING_DELAY = 5000;\n\tprivate static readonly WILL_SHUTDOWN_WARNING_DELAY = 800;\n\n\tconstructor(\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(logService, storageService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tconst windowId = this.nativeHostService.windowId;\n\n\t\t// Main side indicates that window is about to unload, check for vetos\n\t\tipcRenderer.on('vscode:onBeforeUnload', async (event: unknown, reply: { okChannel: string; cancelChannel: string; reason: ShutdownReason }) => {\n\t\t\tthis.logService.trace(`[lifecycle] onBeforeUnload (reason: ${reply.reason})`);\n\n\t\t\t// trigger onBeforeShutdown events and veto collecting\n\t\t\tconst veto = await this.handleBeforeShutdown(reply.reason);\n\n\t\t\t// veto: cancel unload\n\t\t\tif (veto) {\n\t\t\t\tthis.logService.trace('[lifecycle] onBeforeUnload prevented via veto');\n\n\t\t\t\t// Indicate as event\n\t\t\t\tthis._onShutdownVeto.fire();\n\n\t\t\t\tipcRenderer.send(reply.cancelChannel, windowId);\n\t\t\t}\n\n\t\t\t// no veto: allow unload\n\t\t\telse {\n\t\t\t\tthis.logService.trace('[lifecycle] onBeforeUnload continues without veto');\n\n\t\t\t\tthis.shutdownReason = reply.reason;\n\t\t\t\tipcRenderer.send(reply.okChannel, windowId);\n\t\t\t}\n\t\t});\n\n\t\t// Main side indicates that we will indeed shutdown\n\t\tipcRenderer.on('vscode:onWillUnload', async (event: unknown, reply: { replyChannel: string; reason: ShutdownReason }) => {\n\t\t\tthis.logService.trace(`[lifecycle] onWillUnload (reason: ${reply.reason})`);\n\n\t\t\t// trigger onWillShutdown events and joining\n\t\t\tawait this.handleWillShutdown(reply.reason);\n\n\t\t\t// trigger onDidShutdown event now that we know we will quit\n\t\t\tthis._onDidShutdown.fire();\n\n\t\t\t// acknowledge to main side\n\t\t\tipcRenderer.send(reply.replyChannel, windowId);\n\t\t});\n\t}\n\n\tprotected async handleBeforeShutdown(reason: ShutdownReason): Promise<boolean> {\n\t\tconst logService = this.logService;\n\n\t\tconst vetos: (boolean | Promise<boolean>)[] = [];\n\t\tconst pendingVetos = new Set<string>();\n\n\t\tlet finalVeto: (() => boolean | Promise<boolean>) | undefined = undefined;\n\t\tlet finalVetoId: string | undefined = undefined;\n\n\t\t// before-shutdown event with veto support\n\t\tthis._onBeforeShutdown.fire({\n\t\t\treason,\n\t\t\tveto(value, id) {\n\t\t\t\tvetos.push(value);\n\n\t\t\t\t// Log any veto instantly\n\t\t\t\tif (value === true) {\n\t\t\t\t\tlogService.info(`[lifecycle]: Shutdown was prevented (id: ${id})`);\n\t\t\t\t}\n\n\t\t\t\t// Track promise completion\n\t\t\t\telse if (value instanceof Promise) {\n\t\t\t\t\tpendingVetos.add(id);\n\t\t\t\t\tvalue.then(veto => {\n\t\t\t\t\t\tif (veto === true) {\n\t\t\t\t\t\t\tlogService.info(`[lifecycle]: Shutdown was prevented (id: ${id})`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}).finally(() => pendingVetos.delete(id));\n\t\t\t\t}\n\t\t\t},\n\t\t\tfinalVeto(value, id) {\n\t\t\t\tif (!finalVeto) {\n\t\t\t\t\tfinalVeto = value;\n\t\t\t\t\tfinalVetoId = id;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`[lifecycle]: Final veto is already defined (id: ${id})`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst longRunningBeforeShutdownWarning = disposableTimeout(() => {\n\t\t\tlogService.warn(`[lifecycle] onBeforeShutdown is taking a long time, pending operations: ${Array.from(pendingVetos).join(', ')}`);\n\t\t}, NativeLifecycleService.BEFORE_SHUTDOWN_WARNING_DELAY);\n\n\t\ttry {\n\n\t\t\t// First: run list of vetos in parallel\n\t\t\tlet veto = await handleVetos(vetos, error => this.handleBeforeShutdownError(error, reason));\n\t\t\tif (veto) {\n\t\t\t\treturn veto;\n\t\t\t}\n\n\t\t\t// Second: run the final veto if defined\n\t\t\tif (finalVeto) {\n\t\t\t\ttry {\n\t\t\t\t\tpendingVetos.add(finalVetoId as unknown as string);\n\t\t\t\t\tveto = await (finalVeto as () => Promise<boolean>)();\n\t\t\t\t\tif (veto) {\n\t\t\t\t\t\tlogService.info(`[lifecycle]: Shutdown was prevented by final veto (id: ${finalVetoId})`);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tveto = true; // treat error as veto\n\n\t\t\t\t\tthis.handleBeforeShutdownError(error, reason);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn veto;\n\t\t} finally {\n\t\t\tlongRunningBeforeShutdownWarning.dispose();\n\t\t}\n\t}\n\n\tprivate handleBeforeShutdownError(error: Error, reason: ShutdownReason): void {\n\t\tthis.logService.error(`[lifecycle]: Error during before-shutdown phase (error: ${toErrorMessage(error)})`);\n\n\t\tthis._onBeforeShutdownError.fire({ reason, error });\n\t}\n\n\tprotected async handleWillShutdown(reason: ShutdownReason): Promise<void> {\n\t\tconst joiners: Promise<void>[] = [];\n\t\tconst pendingJoiners = new Set<IWillShutdownEventJoiner>();\n\t\tconst cts = new CancellationTokenSource();\n\n\t\tthis._onWillShutdown.fire({\n\t\t\treason,\n\t\t\ttoken: cts.token,\n\t\t\tjoiners: () => Array.from(pendingJoiners.values()),\n\t\t\tjoin(promise, joiner) {\n\t\t\t\tjoiners.push(promise);\n\n\t\t\t\t// Track promise completion\n\t\t\t\tpendingJoiners.add(joiner);\n\t\t\t\tpromise.finally(() => pendingJoiners.delete(joiner));\n\t\t\t},\n\t\t\tforce: () => {\n\t\t\t\tcts.dispose(true);\n\t\t\t}\n\t\t});\n\n\t\tconst longRunningWillShutdownWarning = disposableTimeout(() => {\n\t\t\tthis.logService.warn(`[lifecycle] onWillShutdown is taking a long time, pending operations: ${Array.from(pendingJoiners).map(joiner => joiner.id).join(', ')}`);\n\t\t}, NativeLifecycleService.WILL_SHUTDOWN_WARNING_DELAY);\n\n\t\ttry {\n\t\t\tawait raceCancellation(Promises.settled(joiners), cts.token);\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`[lifecycle]: Error during will-shutdown phase (error: ${toErrorMessage(error)})`); // this error will not prevent the shutdown\n\t\t} finally {\n\t\t\tlongRunningWillShutdownWarning.dispose();\n\t\t}\n\t}\n\n\tshutdown(): Promise<void> {\n\t\treturn this.nativeHostService.closeWindow();\n\t}\n}\n\nregisterSingleton(ILifecycleService, NativeLifecycleService, InstantiationType.Eager);\n"]}