{"version":3,"sources":["vs/workbench/services/localization/browser/localeService.ts"],"names":[],"mappings":"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","file":"localeService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Language, LANGUAGE_DEFAULT } from 'vs/base/common/platform';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { ILanguagePackItem } from 'vs/platform/languagePacks/common/languagePacks';\nimport { IActiveLanguagePackService, ILocaleService } from 'vs/workbench/services/localization/common/locale';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class WebLocaleService implements ILocaleService {\n\tdeclare readonly _serviceBrand: undefined;\n\tstatic readonly _LOCAL_STORAGE_EXTENSION_ID_KEY = 'vscode.nls.languagePackExtensionId';\n\tstatic readonly _LOCAL_STORAGE_LOCALE_KEY = 'vscode.nls.locale';\n\n\tconstructor(\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IProductService private readonly productService: IProductService\n\t) { }\n\n\tasync setLocale(languagePackItem: ILanguagePackItem, _skipDialog = false): Promise<void> {\n\t\tconst locale = languagePackItem.id;\n\t\tif (locale === Language.value() || (!locale && Language.value() === navigator.language.toLowerCase())) {\n\t\t\treturn;\n\t\t}\n\t\tif (locale) {\n\t\t\twindow.localStorage.setItem(WebLocaleService._LOCAL_STORAGE_LOCALE_KEY, locale);\n\t\t\tif (languagePackItem.extensionId) {\n\t\t\t\twindow.localStorage.setItem(WebLocaleService._LOCAL_STORAGE_EXTENSION_ID_KEY, languagePackItem.extensionId);\n\t\t\t}\n\t\t} else {\n\t\t\twindow.localStorage.removeItem(WebLocaleService._LOCAL_STORAGE_LOCALE_KEY);\n\t\t\twindow.localStorage.removeItem(WebLocaleService._LOCAL_STORAGE_EXTENSION_ID_KEY);\n\t\t}\n\n\t\tconst restartDialog = await this.dialogService.confirm({\n\t\t\ttype: 'info',\n\t\t\tmessage: localize('relaunchDisplayLanguageMessage', \"To change the display language, {0} needs to reload\", this.productService.nameLong),\n\t\t\tdetail: localize('relaunchDisplayLanguageDetail', \"Press the reload button to refresh the page and set the display language to {0}.\", languagePackItem.label),\n\t\t\tprimaryButton: localize({ key: 'reload', comment: ['&& denotes a mnemonic character'] }, \"&&Reload\"),\n\t\t});\n\n\t\tif (restartDialog.confirmed) {\n\t\t\tthis.hostService.restart();\n\t\t}\n\t}\n\n\tasync clearLocalePreference(): Promise<void> {\n\t\twindow.localStorage.removeItem(WebLocaleService._LOCAL_STORAGE_LOCALE_KEY);\n\t\twindow.localStorage.removeItem(WebLocaleService._LOCAL_STORAGE_EXTENSION_ID_KEY);\n\n\t\tif (Language.value() === navigator.language.toLowerCase()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst restartDialog = await this.dialogService.confirm({\n\t\t\ttype: 'info',\n\t\t\tmessage: localize('clearDisplayLanguageMessage', \"To change the display language, {0} needs to reload\", this.productService.nameLong),\n\t\t\tdetail: localize('clearDisplayLanguageDetail', \"Press the reload button to refresh the page and use your browser's language.\"),\n\t\t\tprimaryButton: localize({ key: 'reload', comment: ['&& denotes a mnemonic character'] }, \"&&Reload\"),\n\t\t});\n\n\t\tif (restartDialog.confirmed) {\n\t\t\tthis.hostService.restart();\n\t\t}\n\t}\n}\n\nclass WebActiveLanguagePackService implements IActiveLanguagePackService {\n\t_serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService\n\t) { }\n\n\tasync getExtensionIdProvidingCurrentLocale(): Promise<string | undefined> {\n\t\tconst language = Language.value();\n\t\tif (language === LANGUAGE_DEFAULT) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst extensionId = window.localStorage.getItem(WebLocaleService._LOCAL_STORAGE_EXTENSION_ID_KEY);\n\t\tif (extensionId) {\n\t\t\treturn extensionId;\n\t\t}\n\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\ttry {\n\t\t\tconst tagResult = await this.galleryService.query({ text: `tag:lp-${language}` }, CancellationToken.None);\n\n\t\t\t// Only install extensions that are published by Microsoft and start with vscode-language-pack for extra certainty\n\t\t\tconst extensionToInstall = tagResult.firstPage.find(e => e.publisher === 'MS-CEINTL' && e.name.startsWith('vscode-language-pack'));\n\t\t\tif (extensionToInstall) {\n\t\t\t\twindow.localStorage.setItem(WebLocaleService._LOCAL_STORAGE_EXTENSION_ID_KEY, extensionToInstall.identifier.id);\n\t\t\t\treturn extensionToInstall.identifier.id;\n\t\t\t}\n\n\t\t\t// TODO: If a non-Microsoft language pack is installed, we should prompt the user asking if they want to install that.\n\t\t\t// Since no such language packs exist yet, we can wait until that happens to implement this.\n\t\t} catch (e) {\n\t\t\t// Best effort\n\t\t\tthis.logService.error(e);\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nregisterSingleton(ILocaleService, WebLocaleService, InstantiationType.Delayed);\nregisterSingleton(IActiveLanguagePackService, WebActiveLanguagePackService, InstantiationType.Delayed);\n"]}