{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/search/node/textSearchManager.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,MAAa,IAAwB,SAAQ,wBAAI;QAEhD,YAAY,KAAiB,EAAE,QAA4B,EAAE,OAAmB,GAAG,EAAE,cAAwC,eAAe;YAC3I,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE;gBACtB,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC3D,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC,IAAA,cAAG,EAAa,IAAI,CAAC;aAC9C,EAAE,WAAW,CAAC,CAAC;QACjB,CAAC;KACD;IARD,oBAQC","file":"textSearchManager.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toCanonicalName } from 'vs/workbench/services/textfile/common/encoding';\nimport * as pfs from 'vs/base/node/pfs';\nimport { ITextQuery, ITextSearchStats } from 'vs/workbench/services/search/common/search';\nimport { TextSearchProvider } from 'vs/workbench/services/search/common/searchExtTypes';\nimport { TextSearchManager } from 'vs/workbench/services/search/common/textSearchManager';\n\nexport class NativeTextSearchManager extends TextSearchManager {\n\n\tconstructor(query: ITextQuery, provider: TextSearchProvider, _pfs: typeof pfs = pfs, processType: ITextSearchStats['type'] = 'searchProcess') {\n\t\tsuper(query, provider, {\n\t\t\treaddir: resource => _pfs.Promises.readdir(resource.fsPath),\n\t\t\ttoCanonicalName: name => toCanonicalName(name)\n\t\t}, processType);\n\t}\n}\n"]}