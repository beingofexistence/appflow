{"version":3,"sources":["vs/workbench/services/issue/browser/issueTroubleshoot.ts"],"names":[],"mappings":"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","file":"issueTroubleshoot.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IWorkbenchIssueService } from 'vs/workbench/services/issue/common/issue';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IUserDataProfileImportExportService, IUserDataProfileManagementService, IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IExtensionBisectService } from 'vs/workbench/services/extensionManagement/browser/extensionBisect';\nimport { INotificationHandle, INotificationService, IPromptChoice, NotificationPriority, Severity } from 'vs/platform/notification/common/notification';\nimport { IWorkbenchExtensionEnablementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IUserDataProfile, IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { ServicesAccessor, createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { URI } from 'vs/base/common/uri';\nimport { RemoteNameContext } from 'vs/workbench/common/contextkeys';\nimport { IsWebContext } from 'vs/platform/contextkey/common/contextkeys';\n\nconst ITroubleshootIssueService = createDecorator<ITroubleshootIssueService>('ITroubleshootIssueService');\n\ninterface ITroubleshootIssueService {\n\t_serviceBrand: undefined;\n\tisActive(): boolean;\n\tstart(): Promise<void>;\n\tresume(): Promise<void>;\n\tstop(): Promise<void>;\n}\n\nenum TroubleshootStage {\n\tEXTENSIONS = 1,\n\tWORKBENCH,\n}\n\ntype TroubleShootResult = 'good' | 'bad' | 'stop';\n\nclass TroubleShootState {\n\n\tstatic fromJSON(raw: string | undefined): TroubleShootState | undefined {\n\t\tif (!raw) {\n\t\t\treturn undefined;\n\t\t}\n\t\ttry {\n\t\t\tinterface Raw extends TroubleShootState { }\n\t\t\tconst data: Raw = JSON.parse(raw);\n\t\t\tif (\n\t\t\t\t(data.stage === TroubleshootStage.EXTENSIONS || data.stage === TroubleshootStage.WORKBENCH)\n\t\t\t\t&& typeof data.profile === 'string'\n\t\t\t) {\n\t\t\t\treturn new TroubleShootState(data.stage, data.profile);\n\t\t\t}\n\t\t} catch { /* ignore */ }\n\t\treturn undefined;\n\t}\n\n\tconstructor(\n\t\treadonly stage: TroubleshootStage,\n\t\treadonly profile: string,\n\t) { }\n}\n\nclass TroubleshootIssueService extends Disposable implements ITroubleshootIssueService {\n\n\treadonly _serviceBrand: undefined;\n\n\tstatic readonly storageKey = 'issueTroubleshootState';\n\n\tprivate notificationHandle: INotificationHandle | undefined;\n\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataProfileManagementService private readonly userDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@IUserDataProfileImportExportService private readonly userDataProfileImportExportService: IUserDataProfileImportExportService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IExtensionBisectService private readonly extensionBisectService: IExtensionBisectService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IWorkbenchExtensionEnablementService private readonly extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IWorkbenchIssueService private readonly issueService: IWorkbenchIssueService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t) {\n\t\tsuper();\n\t}\n\n\tisActive(): boolean {\n\t\treturn this.state !== undefined;\n\t}\n\n\tasync start(): Promise<void> {\n\t\tif (this.isActive()) {\n\t\t\tthrow new Error('invalid state');\n\t\t}\n\n\t\tconst res = await this.dialogService.confirm({\n\t\t\tmessage: localize('troubleshoot issue', \"Troubleshoot Issue\"),\n\t\t\tdetail: localize('detail.start', \"Issue troubleshooting is a process to help you identify the cause for an issue. The cause for an issue can be a misconfiguration, due to an extension, or be {0} itself.\\n\\nDuring the process the window reloads repeatedly. Each time you must confirm if you are still seeing the issue.\", this.productService.nameLong),\n\t\t\tprimaryButton: localize({ key: 'msg', comment: ['&& denotes a mnemonic'] }, \"&&Troubleshoot Issue\"),\n\t\t\tcustom: true\n\t\t});\n\n\t\tif (!res.confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst originalProfile = this.userDataProfileService.currentProfile;\n\t\tawait this.userDataProfileImportExportService.createTroubleshootProfile();\n\t\tthis.state = new TroubleShootState(TroubleshootStage.EXTENSIONS, originalProfile.id);\n\t\tawait this.resume();\n\t}\n\n\tasync resume(): Promise<void> {\n\t\tif (!this.isActive()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.state?.stage === TroubleshootStage.EXTENSIONS && !this.extensionBisectService.isActive) {\n\t\t\tawait this.reproduceIssueWithExtensionsDisabled();\n\t\t}\n\n\t\tif (this.state?.stage === TroubleshootStage.WORKBENCH) {\n\t\t\tawait this.reproduceIssueWithEmptyProfile();\n\t\t}\n\n\t\tawait this.stop();\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tif (!this.isActive()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.notificationHandle) {\n\t\t\tthis.notificationHandle.close();\n\t\t\tthis.notificationHandle = undefined;\n\t\t}\n\n\t\tif (this.extensionBisectService.isActive) {\n\t\t\tawait this.extensionBisectService.reset();\n\t\t}\n\n\t\tconst profile = this.userDataProfilesService.profiles.find(p => p.id === this.state?.profile) ?? this.userDataProfilesService.defaultProfile;\n\t\tthis.state = undefined;\n\t\tawait this.userDataProfileManagementService.switchProfile(profile);\n\t}\n\n\tprivate async reproduceIssueWithExtensionsDisabled(): Promise<void> {\n\t\tif (!(await this.extensionManagementService.getInstalled(ExtensionType.User)).length) {\n\t\t\tthis.state = new TroubleShootState(TroubleshootStage.WORKBENCH, this.state!.profile);\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await this.askToReproduceIssue(localize('profile.extensions.disabled', \"Issue troubleshooting is active and has temporarily disabled all installed extensions. Check if you can still reproduce the problem and proceed by selecting from these options.\"));\n\t\tif (result === 'good') {\n\t\t\tconst profile = this.userDataProfilesService.profiles.find(p => p.id === this.state!.profile) ?? this.userDataProfilesService.defaultProfile;\n\t\t\tawait this.reproduceIssueWithExtensionsBisect(profile);\n\t\t}\n\t\tif (result === 'bad') {\n\t\t\tthis.state = new TroubleShootState(TroubleshootStage.WORKBENCH, this.state!.profile);\n\t\t}\n\t\tif (result === 'stop') {\n\t\t\tawait this.stop();\n\t\t}\n\t}\n\n\tprivate async reproduceIssueWithEmptyProfile(): Promise<void> {\n\t\tawait this.userDataProfileManagementService.createAndEnterTransientProfile();\n\t\tthis.updateState(this.state);\n\t\tconst result = await this.askToReproduceIssue(localize('empty.profile', \"Issue troubleshooting is active and has temporarily reset your configurations to defaults. Check if you can still reproduce the problem and proceed by selecting from these options.\"));\n\t\tif (result === 'stop') {\n\t\t\tawait this.stop();\n\t\t}\n\t\tif (result === 'good') {\n\t\t\tawait this.askToReportIssue(localize('issue is with configuration', \"Issue troubleshooting has identified that the issue is caused by your configurations. Please report the issue by exporting your configurations using \\\"Export Profile\\\" command and share the file in the issue report.\"));\n\t\t}\n\t\tif (result === 'bad') {\n\t\t\tawait this.askToReportIssue(localize('issue is in core', \"Issue troubleshooting has identified that the issue is with {0}.\", this.productService.nameLong));\n\t\t}\n\t}\n\n\tprivate async reproduceIssueWithExtensionsBisect(profile: IUserDataProfile): Promise<void> {\n\t\tawait this.userDataProfileManagementService.switchProfile(profile);\n\t\tconst extensions = (await this.extensionManagementService.getInstalled(ExtensionType.User)).filter(ext => this.extensionEnablementService.isEnabled(ext));\n\t\tawait this.extensionBisectService.start(extensions);\n\t\tawait this.hostService.reload();\n\t}\n\n\tprivate askToReproduceIssue(message: string): Promise<TroubleShootResult> {\n\t\treturn new Promise((c, e) => {\n\t\t\tconst goodPrompt: IPromptChoice = {\n\t\t\t\tlabel: localize('I cannot reproduce', \"I Can't Reproduce\"),\n\t\t\t\trun: () => c('good')\n\t\t\t};\n\t\t\tconst badPrompt: IPromptChoice = {\n\t\t\t\tlabel: localize('This is Bad', \"I Can Reproduce\"),\n\t\t\t\trun: () => c('bad')\n\t\t\t};\n\t\t\tconst stop: IPromptChoice = {\n\t\t\t\tlabel: localize('Stop', \"Stop\"),\n\t\t\t\trun: () => c('stop')\n\t\t\t};\n\t\t\tthis.notificationHandle = this.notificationService.prompt(\n\t\t\t\tSeverity.Info,\n\t\t\t\tmessage,\n\t\t\t\t[goodPrompt, badPrompt, stop],\n\t\t\t\t{ sticky: true, priority: NotificationPriority.URGENT }\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate async askToReportIssue(message: string): Promise<void> {\n\t\tlet isCheckedInInsiders = false;\n\t\tif (this.productService.quality === 'stable') {\n\t\t\tconst res = await this.askToReproduceIssueWithInsiders();\n\t\t\tif (res === 'good') {\n\t\t\t\tawait this.dialogService.prompt({\n\t\t\t\t\ttype: Severity.Info,\n\t\t\t\t\tmessage: localize('troubleshoot issue', \"Troubleshoot Issue\"),\n\t\t\t\t\tdetail: localize('use insiders', \"This likely means that the issue has been addressed already and will be available in an upcoming release. You can safely use {0} insiders until the new stable version is available.\", this.productService.nameLong),\n\t\t\t\t\tcustom: true\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (res === 'stop') {\n\t\t\t\tawait this.stop();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (res === 'bad') {\n\t\t\t\tisCheckedInInsiders = true;\n\t\t\t}\n\t\t}\n\n\t\tawait this.issueService.openReporter({\n\t\t\tissueBody: `> ${message} ${isCheckedInInsiders ? `It is confirmed that the issue exists in ${this.productService.nameLong} Insiders` : ''}`,\n\t\t});\n\t}\n\n\tprivate async askToReproduceIssueWithInsiders(): Promise<TroubleShootResult | undefined> {\n\t\tconst confirmRes = await this.dialogService.confirm({\n\t\t\ttype: 'info',\n\t\t\tmessage: localize('troubleshoot issue', \"Troubleshoot Issue\"),\n\t\t\tprimaryButton: localize('download insiders', \"Download {0} Insiders\", this.productService.nameLong),\n\t\t\tcancelButton: localize('report anyway', \"Report Issue Anyway\"),\n\t\t\tdetail: localize('ask to download insiders', \"Please try to download and reproduce the issue in {0} insiders.\", this.productService.nameLong),\n\t\t\tcustom: {\n\t\t\t\tdisableCloseAction: true,\n\t\t\t}\n\t\t});\n\n\t\tif (!confirmRes.confirmed) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst opened = await this.openerService.open(URI.parse('https://aka.ms/vscode-insiders'));\n\t\tif (!opened) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst res = await this.dialogService.prompt<TroubleShootResult>({\n\t\t\ttype: 'info',\n\t\t\tmessage: localize('troubleshoot issue', \"Troubleshoot Issue\"),\n\t\t\tbuttons: [{\n\t\t\t\tlabel: localize('good', \"I can't reproduce\"),\n\t\t\t\trun: () => 'good'\n\t\t\t}, {\n\t\t\t\tlabel: localize('bad', \"I can reproduce\"),\n\t\t\t\trun: () => 'bad'\n\t\t\t}],\n\t\t\tcancelButton: {\n\t\t\t\tlabel: localize('stop', \"Stop\"),\n\t\t\t\trun: () => 'stop'\n\t\t\t},\n\t\t\tdetail: localize('ask to reproduce issue', \"Please try to reproduce the issue in {0} insiders and confirm if the issue exists there.\", this.productService.nameLong),\n\t\t\tcustom: {\n\t\t\t\tdisableCloseAction: true,\n\t\t\t}\n\t\t});\n\n\t\treturn res.result;\n\t}\n\n\tprivate _state: TroubleShootState | undefined | null;\n\tget state(): TroubleShootState | undefined {\n\t\tif (this._state === undefined) {\n\t\t\tconst raw = this.storageService.get(TroubleshootIssueService.storageKey, StorageScope.PROFILE);\n\t\t\tthis._state = TroubleShootState.fromJSON(raw);\n\t\t}\n\t\treturn this._state || undefined;\n\t}\n\n\tset state(state: TroubleShootState | undefined) {\n\t\tthis._state = state ?? null;\n\t\tthis.updateState(state);\n\t}\n\n\tprivate updateState(state: TroubleShootState | undefined) {\n\t\tif (state) {\n\t\t\tthis.storageService.store(TroubleshootIssueService.storageKey, JSON.stringify(state), StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(TroubleshootIssueService.storageKey, StorageScope.PROFILE);\n\t\t}\n\t}\n}\n\nclass IssueTroubleshootUi extends Disposable {\n\n\tstatic ctxIsTroubleshootActive = new RawContextKey<boolean>('isIssueTroubleshootActive', false);\n\n\tconstructor(\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@ITroubleshootIssueService private readonly troubleshootIssueService: ITroubleshootIssueService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis.updateContext();\n\t\tif (troubleshootIssueService.isActive()) {\n\t\t\ttroubleshootIssueService.resume();\n\t\t}\n\t\tthis._register(storageService.onDidChangeValue(StorageScope.PROFILE, TroubleshootIssueService.storageKey, this._register(new DisposableStore()))(() => {\n\t\t\tthis.updateContext();\n\t\t}));\n\t}\n\n\tprivate updateContext(): void {\n\t\tIssueTroubleshootUi.ctxIsTroubleshootActive.bindTo(this.contextKeyService).set(this.troubleshootIssueService.isActive());\n\t}\n\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(IssueTroubleshootUi, LifecyclePhase.Restored);\n\nregisterAction2(class TroubleshootIssueAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.troubleshootIssue.start',\n\t\t\ttitle: { value: localize('troubleshootIssue', \"Troubleshoot Issue...\"), original: 'Troubleshoot Issue...' },\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(IssueTroubleshootUi.ctxIsTroubleshootActive.negate(), RemoteNameContext.isEqualTo(''), IsWebContext.negate()),\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\treturn accessor.get(ITroubleshootIssueService).start();\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.troubleshootIssue.stop',\n\t\t\ttitle: { value: localize('title.stop', \"Stop Troubleshoot Issue\"), original: 'Stop Troubleshoot Issue' },\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tprecondition: IssueTroubleshootUi.ctxIsTroubleshootActive\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn accessor.get(ITroubleshootIssueService).stop();\n\t}\n});\n\n\nregisterSingleton(ITroubleshootIssueService, TroubleshootIssueService, InstantiationType.Delayed);\n"]}