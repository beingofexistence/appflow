{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/issue/common/issue.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAYnF,QAAA,IAAI,GAAqB,IAAA,mBAAG,EAAqC,uBAAuB,CAAC,CAAC","file":"issue.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IssueReporterData } from 'vs/platform/issue/common/issue';\n\nexport interface IIssueUriRequestHandler {\n\tprovideIssueUrl(token: CancellationToken): Promise<URI>;\n}\n\nexport const IWorkbenchIssueService = createDecorator<IWorkbenchIssueService>('workbenchIssueService');\n\nexport interface IWorkbenchIssueService {\n\treadonly _serviceBrand: undefined;\n\topenReporter(dataOverrides?: Partial<IssueReporterData>): Promise<void>;\n\topenProcessExplorer(): Promise<void>;\n\tregisterIssueUriRequestHandler(extensionId: string, handler: IIssueUriRequestHandler): IDisposable;\n}\n"]}