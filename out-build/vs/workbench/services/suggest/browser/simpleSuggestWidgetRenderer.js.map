{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/suggest/browser/simpleSuggestWidgetRenderer.ts"],"names":[],"mappings":"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","file":"simpleSuggestWidgetRenderer.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, append, show } from 'vs/base/browser/dom';\nimport { IconLabel, IIconLabelValueOptions } from 'vs/base/browser/ui/iconLabel/iconLabel';\nimport { IListRenderer } from 'vs/base/browser/ui/list/list';\nimport { SimpleCompletionItem } from 'vs/workbench/services/suggest/browser/simpleCompletionItem';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createMatches } from 'vs/base/common/filters';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ThemeIcon } from 'vs/base/common/themables';\n\nexport function getAriaId(index: number): string {\n\treturn `simple-suggest-aria-id:${index}`;\n}\n\nexport interface ISimpleSuggestionTemplateData {\n\treadonly root: HTMLElement;\n\n\t/**\n\t * Flexbox\n\t * < ------------- left ------------ >     < --- right -- >\n\t * <icon><label><signature><qualifier>     <type><readmore>\n\t */\n\treadonly left: HTMLElement;\n\treadonly right: HTMLElement;\n\n\treadonly icon: HTMLElement;\n\treadonly colorspan: HTMLElement;\n\treadonly iconLabel: IconLabel;\n\treadonly iconContainer: HTMLElement;\n\treadonly parametersLabel: HTMLElement;\n\treadonly qualifierLabel: HTMLElement;\n\t/**\n\t * Showing either `CompletionItem#details` or `CompletionItemLabel#type`\n\t */\n\treadonly detailsLabel: HTMLElement;\n\t// readonly readMore: HTMLElement;\n\treadonly disposables: DisposableStore;\n}\n\nexport class SimpleSuggestWidgetItemRenderer implements IListRenderer<SimpleCompletionItem, ISimpleSuggestionTemplateData> {\n\n\tprivate readonly _onDidToggleDetails = new Emitter<void>();\n\treadonly onDidToggleDetails: Event<void> = this._onDidToggleDetails.event;\n\n\treadonly templateId = 'suggestion';\n\n\tdispose(): void {\n\t\tthis._onDidToggleDetails.dispose();\n\t}\n\n\trenderTemplate(container: HTMLElement): ISimpleSuggestionTemplateData {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst root = container;\n\t\troot.classList.add('show-file-icons');\n\n\t\tconst icon = append(container, $('.icon'));\n\t\tconst colorspan = append(icon, $('span.colorspan'));\n\n\t\tconst text = append(container, $('.contents'));\n\t\tconst main = append(text, $('.main'));\n\n\t\tconst iconContainer = append(main, $('.icon-label.codicon'));\n\t\tconst left = append(main, $('span.left'));\n\t\tconst right = append(main, $('span.right'));\n\n\t\tconst iconLabel = new IconLabel(left, { supportHighlights: true, supportIcons: true });\n\t\tdisposables.add(iconLabel);\n\n\t\tconst parametersLabel = append(left, $('span.signature-label'));\n\t\tconst qualifierLabel = append(left, $('span.qualifier-label'));\n\t\tconst detailsLabel = append(right, $('span.details-label'));\n\n\t\t// const readMore = append(right, $('span.readMore' + ThemeIcon.asCSSSelector(suggestMoreInfoIcon)));\n\t\t// readMore.title = nls.localize('readMore', \"Read More\");\n\n\t\tconst configureFont = () => {\n\t\t\t// TODO: Implement\n\t\t\t// const options = this._editor.getOptions();\n\t\t\t// const fontInfo = options.get(EditorOption.fontInfo);\n\t\t\tconst fontFamily = 'Hack'; //fontInfo.getMassagedFontFamily();\n\t\t\tconst fontFeatureSettings = ''; //fontInfo.fontFeatureSettings;\n\t\t\tconst fontSize = '12'; // = options.get(EditorOption.suggestFontSize) || fontInfo.fontSize;\n\t\t\tconst lineHeight = '20'; // options.get(EditorOption.suggestLineHeight) || fontInfo.lineHeight;\n\t\t\tconst fontWeight = 'normal'; //fontInfo.fontWeight;\n\t\t\tconst letterSpacing = '0'; // fontInfo.letterSpacing;\n\t\t\tconst fontSizePx = `${fontSize}px`;\n\t\t\tconst lineHeightPx = `${lineHeight}px`;\n\t\t\tconst letterSpacingPx = `${letterSpacing}px`;\n\n\t\t\troot.style.fontSize = fontSizePx;\n\t\t\troot.style.fontWeight = fontWeight;\n\t\t\troot.style.letterSpacing = letterSpacingPx;\n\t\t\tmain.style.fontFamily = fontFamily;\n\t\t\tmain.style.fontFeatureSettings = fontFeatureSettings;\n\t\t\tmain.style.lineHeight = lineHeightPx;\n\t\t\ticon.style.height = lineHeightPx;\n\t\t\ticon.style.width = lineHeightPx;\n\t\t\t// readMore.style.height = lineHeightPx;\n\t\t\t// readMore.style.width = lineHeightPx;\n\t\t};\n\n\t\tconfigureFont();\n\n\t\t// data.disposables.add(this._editor.onDidChangeConfiguration(e => {\n\t\t// \tif (e.hasChanged(EditorOption.fontInfo) || e.hasChanged(EditorOption.suggestFontSize) || e.hasChanged(EditorOption.suggestLineHeight)) {\n\t\t// \t\tconfigureFont();\n\t\t// \t}\n\t\t// }));\n\n\t\treturn { root, left, right, icon, colorspan, iconLabel, iconContainer, parametersLabel, qualifierLabel, detailsLabel, disposables };\n\t}\n\n\trenderElement(element: SimpleCompletionItem, index: number, data: ISimpleSuggestionTemplateData): void {\n\t\tconst { completion } = element;\n\t\tdata.root.id = getAriaId(index);\n\t\tdata.colorspan.style.backgroundColor = '';\n\n\t\tconst labelOptions: IIconLabelValueOptions = {\n\t\t\tlabelEscapeNewLines: true,\n\t\t\tmatches: createMatches(element.score)\n\t\t};\n\n\t\t// const color: string[] = [];\n\t\t// if (completion.kind === CompletionItemKind.Color && _completionItemColor.extract(element, color)) {\n\t\t// \t// special logic for 'color' completion items\n\t\t// \tdata.icon.className = 'icon customcolor';\n\t\t// \tdata.iconContainer.className = 'icon hide';\n\t\t// \tdata.colorspan.style.backgroundColor = color[0];\n\n\t\t// } else if (completion.kind === CompletionItemKind.File && this._themeService.getFileIconTheme().hasFileIcons) {\n\t\t// \t// special logic for 'file' completion items\n\t\t// \tdata.icon.className = 'icon hide';\n\t\t// \tdata.iconContainer.className = 'icon hide';\n\t\t// \tconst labelClasses = getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FILE);\n\t\t// \tconst detailClasses = getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FILE);\n\t\t// \tlabelOptions.extraClasses = labelClasses.length > detailClasses.length ? labelClasses : detailClasses;\n\n\t\t// } else if (completion.kind === CompletionItemKind.Folder && this._themeService.getFileIconTheme().hasFolderIcons) {\n\t\t// \t// special logic for 'folder' completion items\n\t\t// \tdata.icon.className = 'icon hide';\n\t\t// \tdata.iconContainer.className = 'icon hide';\n\t\t// \tlabelOptions.extraClasses = [\n\t\t// \t\tgetIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FOLDER),\n\t\t// \t\tgetIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FOLDER)\n\t\t// \t].flat();\n\t\t// } else {\n\t\t// normal icon\n\t\tdata.icon.className = 'icon hide';\n\t\tdata.iconContainer.className = '';\n\t\tdata.iconContainer.classList.add('suggest-icon', ...ThemeIcon.asClassNameArray(completion.icon || Codicon.symbolText));\n\t\t// }\n\n\t\t// if (completion.tags && completion.tags.indexOf(CompletionItemTag.Deprecated) >= 0) {\n\t\t// \tlabelOptions.extraClasses = (labelOptions.extraClasses || []).concat(['deprecated']);\n\t\t// \tlabelOptions.matches = [];\n\t\t// }\n\n\t\tdata.iconLabel.setLabel(completion.label, undefined, labelOptions);\n\t\t// if (typeof completion.label === 'string') {\n\t\tdata.parametersLabel.textContent = '';\n\t\tdata.detailsLabel.textContent = stripNewLines(completion.detail || '');\n\t\tdata.root.classList.add('string-label');\n\t\t// } else {\n\t\t// \tdata.parametersLabel.textContent = stripNewLines(completion.label.detail || '');\n\t\t// \tdata.detailsLabel.textContent = stripNewLines(completion.label.description || '');\n\t\t// \tdata.root.classList.remove('string-label');\n\t\t// }\n\n\t\t// if (this._editor.getOption(EditorOption.suggest).showInlineDetails) {\n\t\tshow(data.detailsLabel);\n\t\t// } else {\n\t\t// \thide(data.detailsLabel);\n\t\t// }\n\n\t\t// if (canExpandCompletionItem(element)) {\n\t\t// \tdata.right.classList.add('can-expand-details');\n\t\t// \tshow(data.readMore);\n\t\t// \tdata.readMore.onmousedown = e => {\n\t\t// \t\te.stopPropagation();\n\t\t// \t\te.preventDefault();\n\t\t// \t};\n\t\t// \tdata.readMore.onclick = e => {\n\t\t// \t\te.stopPropagation();\n\t\t// \t\te.preventDefault();\n\t\t// \t\tthis._onDidToggleDetails.fire();\n\t\t// \t};\n\t\t// } else {\n\t\tdata.right.classList.remove('can-expand-details');\n\t\t// hide(data.readMore);\n\t\t// data.readMore.onmousedown = null;\n\t\t// data.readMore.onclick = null;\n\t\t// }\n\t}\n\n\tdisposeTemplate(templateData: ISimpleSuggestionTemplateData): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n}\n\nfunction stripNewLines(str: string): string {\n\treturn str.replace(/\\r\\n|\\r|\\n/g, '');\n}\n"]}