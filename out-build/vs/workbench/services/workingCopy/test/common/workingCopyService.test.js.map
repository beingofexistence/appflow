{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/workingCopy/test/common/workingCopyService.test.ts"],"names":[],"mappings":"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","file":"workingCopyService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IWorkingCopy } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { URI } from 'vs/base/common/uri';\nimport { TestWorkingCopy } from 'vs/workbench/test/common/workbenchTestServices';\nimport { IWorkingCopySaveEvent, WorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nsuite('WorkingCopyService', () => {\n\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('registry - basics', () => {\n\t\tconst service = disposables.add(new WorkingCopyService());\n\n\t\tconst onDidChangeDirty: IWorkingCopy[] = [];\n\t\tdisposables.add(service.onDidChangeDirty(copy => onDidChangeDirty.push(copy)));\n\n\t\tconst onDidChangeContent: IWorkingCopy[] = [];\n\t\tdisposables.add(service.onDidChangeContent(copy => onDidChangeContent.push(copy)));\n\n\t\tconst onDidSave: IWorkingCopySaveEvent[] = [];\n\t\tdisposables.add(service.onDidSave(copy => onDidSave.push(copy)));\n\n\t\tconst onDidRegister: IWorkingCopy[] = [];\n\t\tdisposables.add(service.onDidRegister(copy => onDidRegister.push(copy)));\n\n\t\tconst onDidUnregister: IWorkingCopy[] = [];\n\t\tdisposables.add(service.onDidUnregister(copy => onDidUnregister.push(copy)));\n\n\t\tassert.strictEqual(service.hasDirty, false);\n\t\tassert.strictEqual(service.dirtyCount, 0);\n\t\tassert.strictEqual(service.workingCopies.length, 0);\n\t\tassert.strictEqual(service.isDirty(URI.file('/')), false);\n\n\t\t// resource 1\n\t\tconst resource1 = URI.file('/some/folder/file.txt');\n\t\tassert.strictEqual(service.has(resource1), false);\n\t\tassert.strictEqual(service.has({ resource: resource1, typeId: 'testWorkingCopyType' }), false);\n\t\tassert.strictEqual(service.get({ resource: resource1, typeId: 'testWorkingCopyType' }), undefined);\n\t\tassert.strictEqual(service.getAll(resource1), undefined);\n\t\tconst copy1 = disposables.add(new TestWorkingCopy(resource1));\n\t\tconst unregister1 = service.registerWorkingCopy(copy1);\n\n\t\tassert.strictEqual(service.workingCopies.length, 1);\n\t\tassert.strictEqual(service.workingCopies[0], copy1);\n\t\tassert.strictEqual(onDidRegister.length, 1);\n\t\tassert.strictEqual(onDidRegister[0], copy1);\n\t\tassert.strictEqual(service.dirtyCount, 0);\n\t\tassert.strictEqual(service.modifiedCount, 0);\n\t\tassert.strictEqual(service.isDirty(resource1), false);\n\t\tassert.strictEqual(service.has(resource1), true);\n\t\tassert.strictEqual(service.has(copy1), true);\n\t\tassert.strictEqual(service.get(copy1), copy1);\n\t\tassert.strictEqual(service.hasDirty, false);\n\n\t\tconst copies = service.getAll(copy1.resource);\n\t\tassert.strictEqual(copies?.length, 1);\n\t\tassert.strictEqual(copies[0], copy1);\n\n\t\tcopy1.setDirty(true);\n\t\tcopy1.save();\n\n\t\tassert.strictEqual(copy1.isDirty(), true);\n\t\tassert.strictEqual(service.dirtyCount, 1);\n\t\tassert.strictEqual(service.dirtyWorkingCopies.length, 1);\n\t\tassert.strictEqual(service.dirtyWorkingCopies[0], copy1);\n\t\tassert.strictEqual(service.modifiedCount, 1);\n\t\tassert.strictEqual(service.modifiedWorkingCopies.length, 1);\n\t\tassert.strictEqual(service.modifiedWorkingCopies[0], copy1);\n\t\tassert.strictEqual(service.workingCopies.length, 1);\n\t\tassert.strictEqual(service.workingCopies[0], copy1);\n\t\tassert.strictEqual(service.isDirty(resource1), true);\n\t\tassert.strictEqual(service.hasDirty, true);\n\t\tassert.strictEqual(onDidChangeDirty.length, 1);\n\t\tassert.strictEqual(onDidChangeDirty[0], copy1);\n\t\tassert.strictEqual(onDidSave.length, 1);\n\t\tassert.strictEqual(onDidSave[0].workingCopy, copy1);\n\n\t\tcopy1.setContent('foo');\n\n\t\tassert.strictEqual(onDidChangeContent.length, 1);\n\t\tassert.strictEqual(onDidChangeContent[0], copy1);\n\n\t\tcopy1.setDirty(false);\n\n\t\tassert.strictEqual(service.dirtyCount, 0);\n\t\tassert.strictEqual(service.isDirty(resource1), false);\n\t\tassert.strictEqual(service.hasDirty, false);\n\t\tassert.strictEqual(onDidChangeDirty.length, 2);\n\t\tassert.strictEqual(onDidChangeDirty[1], copy1);\n\n\t\tunregister1.dispose();\n\n\t\tassert.strictEqual(onDidUnregister.length, 1);\n\t\tassert.strictEqual(onDidUnregister[0], copy1);\n\t\tassert.strictEqual(service.workingCopies.length, 0);\n\t\tassert.strictEqual(service.has(resource1), false);\n\n\t\t// resource 2\n\t\tconst resource2 = URI.file('/some/folder/file-dirty.txt');\n\t\tconst copy2 = disposables.add(new TestWorkingCopy(resource2, true));\n\t\tconst unregister2 = service.registerWorkingCopy(copy2);\n\n\t\tassert.strictEqual(onDidRegister.length, 2);\n\t\tassert.strictEqual(onDidRegister[1], copy2);\n\t\tassert.strictEqual(service.dirtyCount, 1);\n\t\tassert.strictEqual(service.isDirty(resource2), true);\n\t\tassert.strictEqual(service.hasDirty, true);\n\n\t\tassert.strictEqual(onDidChangeDirty.length, 3);\n\t\tassert.strictEqual(onDidChangeDirty[2], copy2);\n\n\t\tcopy2.setContent('foo');\n\n\t\tassert.strictEqual(onDidChangeContent.length, 2);\n\t\tassert.strictEqual(onDidChangeContent[1], copy2);\n\n\t\tunregister2.dispose();\n\n\t\tassert.strictEqual(onDidUnregister.length, 2);\n\t\tassert.strictEqual(onDidUnregister[1], copy2);\n\t\tassert.strictEqual(service.dirtyCount, 0);\n\t\tassert.strictEqual(service.hasDirty, false);\n\t\tassert.strictEqual(onDidChangeDirty.length, 4);\n\t\tassert.strictEqual(onDidChangeDirty[3], copy2);\n\t});\n\n\ttest('registry - multiple copies on same resource throws (same type ID)', () => {\n\t\tconst service = disposables.add(new WorkingCopyService());\n\n\t\tconst resource = URI.parse('custom://some/folder/custom.txt');\n\n\t\tconst copy1 = disposables.add(new TestWorkingCopy(resource));\n\t\tdisposables.add(service.registerWorkingCopy(copy1));\n\n\t\tconst copy2 = disposables.add(new TestWorkingCopy(resource));\n\n\t\tassert.throws(() => service.registerWorkingCopy(copy2));\n\t});\n\n\ttest('registry - multiple copies on same resource is supported (different type ID)', () => {\n\t\tconst service = disposables.add(new WorkingCopyService());\n\n\t\tconst resource = URI.parse('custom://some/folder/custom.txt');\n\n\t\tconst typeId1 = 'testWorkingCopyTypeId1';\n\t\tlet copy1 = disposables.add(new TestWorkingCopy(resource, false, typeId1));\n\t\tlet dispose1 = service.registerWorkingCopy(copy1);\n\n\t\tconst typeId2 = 'testWorkingCopyTypeId2';\n\t\tconst copy2 = disposables.add(new TestWorkingCopy(resource, false, typeId2));\n\t\tconst dispose2 = service.registerWorkingCopy(copy2);\n\n\t\tconst typeId3 = 'testWorkingCopyTypeId3';\n\t\tconst copy3 = disposables.add(new TestWorkingCopy(resource, false, typeId3));\n\t\tconst dispose3 = service.registerWorkingCopy(copy3);\n\n\t\tconst copies = service.getAll(resource);\n\t\tassert.strictEqual(copies?.length, 3);\n\t\tassert.strictEqual(copies[0], copy1);\n\t\tassert.strictEqual(copies[1], copy2);\n\t\tassert.strictEqual(copies[2], copy3);\n\n\t\tassert.strictEqual(service.dirtyCount, 0);\n\t\tassert.strictEqual(service.isDirty(resource), false);\n\t\tassert.strictEqual(service.isDirty(resource, typeId1), false);\n\n\t\tcopy1.setDirty(true);\n\t\tassert.strictEqual(service.dirtyCount, 1);\n\t\tassert.strictEqual(service.isDirty(resource), true);\n\t\tassert.strictEqual(service.isDirty(resource, typeId1), true);\n\t\tassert.strictEqual(service.isDirty(resource, typeId2), false);\n\n\t\tcopy2.setDirty(true);\n\t\tassert.strictEqual(service.dirtyCount, 2);\n\t\tassert.strictEqual(service.isDirty(resource), true);\n\t\tassert.strictEqual(service.isDirty(resource, typeId1), true);\n\t\tassert.strictEqual(service.isDirty(resource, typeId2), true);\n\n\t\tcopy3.setDirty(true);\n\t\tassert.strictEqual(service.dirtyCount, 3);\n\t\tassert.strictEqual(service.isDirty(resource), true);\n\t\tassert.strictEqual(service.isDirty(resource, typeId1), true);\n\t\tassert.strictEqual(service.isDirty(resource, typeId2), true);\n\t\tassert.strictEqual(service.isDirty(resource, typeId3), true);\n\n\t\tcopy1.setDirty(false);\n\t\tcopy2.setDirty(false);\n\t\tcopy3.setDirty(false);\n\t\tassert.strictEqual(service.dirtyCount, 0);\n\t\tassert.strictEqual(service.isDirty(resource), false);\n\t\tassert.strictEqual(service.isDirty(resource, typeId1), false);\n\t\tassert.strictEqual(service.isDirty(resource, typeId2), false);\n\t\tassert.strictEqual(service.isDirty(resource, typeId3), false);\n\n\t\tdispose1.dispose();\n\t\tcopy1 = disposables.add(new TestWorkingCopy(resource, false, typeId1));\n\t\tdispose1 = service.registerWorkingCopy(copy1);\n\n\t\tdispose1.dispose();\n\t\tdispose2.dispose();\n\t\tdispose3.dispose();\n\n\t\tassert.strictEqual(service.workingCopies.length, 0);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}