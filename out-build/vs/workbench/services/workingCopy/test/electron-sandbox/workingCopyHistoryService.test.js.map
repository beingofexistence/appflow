{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/workingCopy/test/electron-sandbox/workingCopyHistoryService.test.ts"],"names":[],"mappings":"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","file":"workingCopyHistoryService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { TestContextService, TestStorageService, TestWorkingCopy } from 'vs/workbench/test/common/workbenchTestServices';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IWorkingCopyHistoryEntry, IWorkingCopyHistoryEntryDescriptor, IWorkingCopyHistoryEvent } from 'vs/workbench/services/workingCopy/common/workingCopyHistory';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { LabelService } from 'vs/workbench/services/label/common/labelService';\nimport { TestEnvironmentService, TestLifecycleService, TestPathService, TestRemoteAgentService, TestWillShutdownEvent } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { NativeWorkingCopyHistoryService } from 'vs/workbench/services/workingCopy/common/workingCopyHistoryService';\nimport { joinPath, dirname, basename } from 'vs/base/common/resources';\nimport { firstOrDefault } from 'vs/base/common/arrays';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { join } from 'vs/base/common/path';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nexport class TestWorkingCopyHistoryService extends NativeWorkingCopyHistoryService {\n\n\treadonly _fileService: IFileService;\n\treadonly _configurationService: TestConfigurationService;\n\treadonly _lifecycleService: TestLifecycleService;\n\n\tconstructor(disposables: DisposableStore, fileService?: IFileService) {\n\t\tconst environmentService = TestEnvironmentService;\n\t\tconst logService = new NullLogService();\n\n\t\tif (!fileService) {\n\t\t\tfileService = disposables.add(new FileService(logService));\n\t\t\tdisposables.add(fileService.registerProvider(Schemas.inMemory, disposables.add(new InMemoryFileSystemProvider())));\n\t\t\tdisposables.add(fileService.registerProvider(Schemas.vscodeUserData, disposables.add(new InMemoryFileSystemProvider())));\n\t\t}\n\n\t\tconst remoteAgentService = new TestRemoteAgentService();\n\t\tconst uriIdentityService = disposables.add(new UriIdentityService(fileService));\n\t\tconst lifecycleService = disposables.add(new TestLifecycleService());\n\t\tconst labelService = disposables.add(new LabelService(environmentService, new TestContextService(), new TestPathService(), new TestRemoteAgentService(), disposables.add(new TestStorageService()), lifecycleService));\n\t\tconst configurationService = new TestConfigurationService();\n\n\t\tsuper(fileService, remoteAgentService, environmentService, uriIdentityService, labelService, lifecycleService, logService, configurationService);\n\n\t\tthis._fileService = fileService;\n\t\tthis._configurationService = configurationService;\n\t\tthis._lifecycleService = lifecycleService;\n\t}\n}\n\nsuite('WorkingCopyHistoryService', () => {\n\n\tconst disposables = new DisposableStore();\n\n\tlet testDir: URI;\n\tlet historyHome: URI;\n\tlet workHome: URI;\n\tlet service: TestWorkingCopyHistoryService;\n\tlet fileService: IFileService;\n\n\tlet testFile1Path: URI;\n\tlet testFile2Path: URI;\n\tlet testFile3Path: URI;\n\n\tconst testFile1PathContents = 'Hello Foo';\n\tconst testFile2PathContents = [\n\t\t'Lorem ipsum ',\n\t\t'dolor öäü sit amet ',\n\t\t'adipiscing ßß elit',\n\t\t'consectetur '\n\t].join('');\n\tconst testFile3PathContents = 'Hello Bar';\n\n\tsetup(async () => {\n\t\ttestDir = URI.file(join(generateUuid(), 'vsctests', 'workingcopyhistoryservice')).with({ scheme: Schemas.inMemory });\n\t\thistoryHome = joinPath(testDir, 'User', 'History');\n\t\tworkHome = joinPath(testDir, 'work');\n\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables));\n\t\tfileService = service._fileService;\n\n\t\tawait fileService.createFolder(historyHome);\n\t\tawait fileService.createFolder(workHome);\n\n\t\ttestFile1Path = joinPath(workHome, 'foo.txt');\n\t\ttestFile2Path = joinPath(workHome, 'bar.txt');\n\t\ttestFile3Path = joinPath(workHome, 'foo-bar.txt');\n\n\t\tawait fileService.writeFile(testFile1Path, VSBuffer.fromString(testFile1PathContents));\n\t\tawait fileService.writeFile(testFile2Path, VSBuffer.fromString(testFile2PathContents));\n\t\tawait fileService.writeFile(testFile3Path, VSBuffer.fromString(testFile3PathContents));\n\t});\n\n\tlet increasingTimestampCounter = 1;\n\n\tasync function addEntry(descriptor: IWorkingCopyHistoryEntryDescriptor, token: CancellationToken, expectEntryAdded?: boolean): Promise<IWorkingCopyHistoryEntry>;\n\tasync function addEntry(descriptor: IWorkingCopyHistoryEntryDescriptor, token: CancellationToken, expectEntryAdded: false): Promise<IWorkingCopyHistoryEntry | undefined>;\n\tasync function addEntry(descriptor: IWorkingCopyHistoryEntryDescriptor, token: CancellationToken, expectEntryAdded = true): Promise<IWorkingCopyHistoryEntry | undefined> {\n\t\tconst entry = await service.addEntry({\n\t\t\t...descriptor,\n\t\t\ttimestamp: increasingTimestampCounter++ // very important to get tests to not be flaky with stable sort order\n\t\t}, token);\n\n\t\tif (expectEntryAdded) {\n\t\t\tassert.ok(entry, 'Unexpected undefined local history entry');\n\t\t\tassert.strictEqual((await fileService.exists(entry.location)), true, 'Unexpected local history not stored');\n\t\t}\n\n\t\treturn entry;\n\t}\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('addEntry', async () => {\n\t\tconst addEvents: IWorkingCopyHistoryEvent[] = [];\n\t\tdisposables.add(service.onDidAddEntry(e => addEvents.push(e)));\n\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\t\tconst workingCopy2 = disposables.add(new TestWorkingCopy(testFile2Path));\n\n\t\t// Add Entry works\n\n\t\tconst entry1A = await addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\t\tconst entry2A = await addEntry({ resource: workingCopy2.resource, source: 'My Source' }, CancellationToken.None);\n\n\t\tassert.strictEqual((await fileService.readFile(entry1A.location)).value.toString(), testFile1PathContents);\n\t\tassert.strictEqual((await fileService.readFile(entry2A.location)).value.toString(), testFile2PathContents);\n\n\t\tassert.strictEqual(addEvents.length, 2);\n\t\tassert.strictEqual(addEvents[0].entry.workingCopy.resource.toString(), workingCopy1.resource.toString());\n\t\tassert.strictEqual(addEvents[1].entry.workingCopy.resource.toString(), workingCopy2.resource.toString());\n\t\tassert.strictEqual(addEvents[1].entry.source, 'My Source');\n\n\t\tconst entry1B = await addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\t\tconst entry2B = await addEntry({ resource: workingCopy2.resource }, CancellationToken.None);\n\n\t\tassert.strictEqual((await fileService.readFile(entry1B.location)).value.toString(), testFile1PathContents);\n\t\tassert.strictEqual((await fileService.readFile(entry2B.location)).value.toString(), testFile2PathContents);\n\n\t\tassert.strictEqual(addEvents.length, 4);\n\t\tassert.strictEqual(addEvents[2].entry.workingCopy.resource.toString(), workingCopy1.resource.toString());\n\t\tassert.strictEqual(addEvents[3].entry.workingCopy.resource.toString(), workingCopy2.resource.toString());\n\n\t\t// Cancellation works\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst entry1CPromise = addEntry({ resource: workingCopy1.resource }, cts.token, false);\n\t\tcts.dispose(true);\n\n\t\tconst entry1C = await entry1CPromise;\n\t\tassert.ok(!entry1C);\n\n\t\tassert.strictEqual(addEvents.length, 4);\n\n\t\t// Invalid working copies are ignored\n\n\t\tconst workingCopy3 = disposables.add(new TestWorkingCopy(testFile2Path.with({ scheme: 'unsupported' })));\n\t\tconst entry3A = await addEntry({ resource: workingCopy3.resource }, CancellationToken.None, false);\n\t\tassert.ok(!entry3A);\n\n\t\tassert.strictEqual(addEvents.length, 4);\n\t});\n\n\ttest('renameEntry', async () => {\n\t\tconst changeEvents: IWorkingCopyHistoryEvent[] = [];\n\t\tdisposables.add(service.onDidChangeEntry(e => changeEvents.push(e)));\n\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\n\t\tconst entry = await addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\t\tawait addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\t\tawait addEntry({ resource: workingCopy1.resource, source: 'My Source' }, CancellationToken.None);\n\n\t\tlet entries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 3);\n\n\t\tawait service.updateEntry(entry, { source: 'Hello Rename' }, CancellationToken.None);\n\n\t\tassert.strictEqual(changeEvents.length, 1);\n\t\tassert.strictEqual(changeEvents[0].entry, entry);\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries[0].source, 'Hello Rename');\n\n\t\t// Simulate shutdown\n\t\tconst event = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 3);\n\t\tassert.strictEqual(entries[0].source, 'Hello Rename');\n\t});\n\n\ttest('removeEntry', async () => {\n\t\tconst removeEvents: IWorkingCopyHistoryEvent[] = [];\n\t\tdisposables.add(service.onDidRemoveEntry(e => removeEvents.push(e)));\n\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\n\t\tawait addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\t\tconst entry2 = await addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\t\tawait addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\t\tawait addEntry({ resource: workingCopy1.resource, source: 'My Source' }, CancellationToken.None);\n\n\t\tlet entries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 4);\n\n\t\tlet removed = await service.removeEntry(entry2, CancellationToken.None);\n\t\tassert.strictEqual(removed, true);\n\n\t\tassert.strictEqual(removeEvents.length, 1);\n\t\tassert.strictEqual(removeEvents[0].entry, entry2);\n\n\t\t// Cannot remove same entry again\n\t\tremoved = await service.removeEntry(entry2, CancellationToken.None);\n\t\tassert.strictEqual(removed, false);\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 3);\n\n\t\t// Simulate shutdown\n\t\tconst event = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 3);\n\t});\n\n\ttest('removeEntry - deletes history entries folder when last entry removed', async () => {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\n\t\tlet entry = await addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\n\t\t// Simulate shutdown\n\t\tlet event = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tassert.strictEqual((await fileService.exists(dirname(entry.location))), true);\n\n\t\tentry = firstOrDefault(await service.getEntries(workingCopy1.resource, CancellationToken.None))!;\n\t\tassert.ok(entry);\n\n\t\tawait service.removeEntry(entry, CancellationToken.None);\n\n\t\t// Simulate shutdown\n\t\tevent = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tassert.strictEqual((await fileService.exists(dirname(entry.location))), false);\n\t});\n\n\ttest('removeAll', async () => {\n\t\tlet removed = false;\n\t\tdisposables.add(service.onDidRemoveEntries(() => removed = true));\n\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\t\tconst workingCopy2 = disposables.add(new TestWorkingCopy(testFile2Path));\n\n\t\tawait addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\t\tawait addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\t\tawait addEntry({ resource: workingCopy2.resource }, CancellationToken.None);\n\t\tawait addEntry({ resource: workingCopy2.resource, source: 'My Source' }, CancellationToken.None);\n\n\t\tlet entries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 2);\n\t\tentries = await service.getEntries(workingCopy2.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 2);\n\n\t\tawait service.removeAll(CancellationToken.None);\n\n\t\tassert.strictEqual(removed, true);\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 0);\n\t\tentries = await service.getEntries(workingCopy2.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 0);\n\n\t\t// Simulate shutdown\n\t\tconst event = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 0);\n\t\tentries = await service.getEntries(workingCopy2.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 0);\n\t});\n\n\ttest('getEntries - simple', async () => {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\t\tconst workingCopy2 = disposables.add(new TestWorkingCopy(testFile2Path));\n\n\t\tlet entries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 0);\n\n\t\tconst entry1 = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 1);\n\t\tassertEntryEqual(entries[0], entry1);\n\n\t\tconst entry2 = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 2);\n\t\tassertEntryEqual(entries[1], entry2);\n\n\t\tentries = await service.getEntries(workingCopy2.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 0);\n\n\t\tconst entry3 = await addEntry({ resource: workingCopy2.resource, source: 'other-test-source' }, CancellationToken.None);\n\n\t\tentries = await service.getEntries(workingCopy2.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 1);\n\t\tassertEntryEqual(entries[0], entry3);\n\t});\n\n\ttest('getEntries - metadata preserved when stored', async () => {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\t\tconst workingCopy2 = disposables.add(new TestWorkingCopy(testFile2Path));\n\n\t\tconst entry1 = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry2 = await addEntry({ resource: workingCopy2.resource }, CancellationToken.None);\n\t\tconst entry3 = await addEntry({ resource: workingCopy2.resource, source: 'other-source' }, CancellationToken.None);\n\n\t\t// Simulate shutdown\n\t\tconst event = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tlet entries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 1);\n\t\tassertEntryEqual(entries[0], entry1);\n\n\t\tentries = await service.getEntries(workingCopy2.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 2);\n\t\tassertEntryEqual(entries[0], entry2);\n\t\tassertEntryEqual(entries[1], entry3);\n\t});\n\n\ttest('getEntries - corrupt meta.json is no problem', async () => {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\n\t\tconst entry1 = await addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\n\t\t// Simulate shutdown\n\t\tconst event = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tconst metaFile = joinPath(dirname(entry1.location), 'entries.json');\n\t\tassert.ok((await fileService.exists(metaFile)));\n\t\tawait fileService.del(metaFile);\n\n\t\tconst entries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 1);\n\t\tassertEntryEqual(entries[0], entry1, false /* skip timestamp that is unreliable when entries.json is gone */);\n\t});\n\n\ttest('getEntries - missing entries from meta.json is no problem', async () => {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\n\t\tconst entry1 = await addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\t\tconst entry2 = await addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\n\t\t// Simulate shutdown\n\t\tconst event = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tawait fileService.del(entry1.location);\n\n\t\tconst entries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 1);\n\t\tassertEntryEqual(entries[0], entry2);\n\t});\n\n\ttest('getEntries - in-memory and on-disk entries are merged', async () => {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\n\t\tconst entry1 = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry2 = await addEntry({ resource: workingCopy1.resource, source: 'other-source' }, CancellationToken.None);\n\n\t\t// Simulate shutdown\n\t\tconst event = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tconst entry3 = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry4 = await addEntry({ resource: workingCopy1.resource, source: 'other-source' }, CancellationToken.None);\n\n\t\tconst entries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 4);\n\t\tassertEntryEqual(entries[0], entry1);\n\t\tassertEntryEqual(entries[1], entry2);\n\t\tassertEntryEqual(entries[2], entry3);\n\t\tassertEntryEqual(entries[3], entry4);\n\t});\n\n\ttest('getEntries - configured max entries respected', async () => {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\n\t\tawait addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\t\tawait addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\t\tconst entry3 = await addEntry({ resource: workingCopy1.resource, source: 'Test source' }, CancellationToken.None);\n\t\tconst entry4 = await addEntry({ resource: workingCopy1.resource }, CancellationToken.None);\n\n\t\tservice._configurationService.setUserConfiguration('workbench.localHistory.maxFileEntries', 2);\n\n\t\tlet entries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 2);\n\t\tassertEntryEqual(entries[0], entry3);\n\t\tassertEntryEqual(entries[1], entry4);\n\n\t\tservice._configurationService.setUserConfiguration('workbench.localHistory.maxFileEntries', 4);\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 4);\n\n\t\tservice._configurationService.setUserConfiguration('workbench.localHistory.maxFileEntries', 5);\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 4);\n\t});\n\n\ttest('getAll', async () => {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\t\tconst workingCopy2 = disposables.add(new TestWorkingCopy(testFile2Path));\n\n\t\tlet resources = await service.getAll(CancellationToken.None);\n\t\tassert.strictEqual(resources.length, 0);\n\n\t\tawait addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tawait addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tawait addEntry({ resource: workingCopy2.resource, source: 'test-source' }, CancellationToken.None);\n\t\tawait addEntry({ resource: workingCopy2.resource, source: 'test-source' }, CancellationToken.None);\n\n\t\tresources = await service.getAll(CancellationToken.None);\n\t\tassert.strictEqual(resources.length, 2);\n\t\tfor (const resource of resources) {\n\t\t\tif (resource.toString() !== workingCopy1.resource.toString() && resource.toString() !== workingCopy2.resource.toString()) {\n\t\t\t\tassert.fail(`Unexpected history resource: ${resource.toString()}`);\n\t\t\t}\n\t\t}\n\n\t\t// Simulate shutdown\n\t\tconst event = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tconst workingCopy3 = disposables.add(new TestWorkingCopy(testFile3Path));\n\t\tawait addEntry({ resource: workingCopy3.resource, source: 'test-source' }, CancellationToken.None);\n\n\t\tresources = await service.getAll(CancellationToken.None);\n\t\tassert.strictEqual(resources.length, 3);\n\t\tfor (const resource of resources) {\n\t\t\tif (resource.toString() !== workingCopy1.resource.toString() && resource.toString() !== workingCopy2.resource.toString() && resource.toString() !== workingCopy3.resource.toString()) {\n\t\t\t\tassert.fail(`Unexpected history resource: ${resource.toString()}`);\n\t\t\t}\n\t\t}\n\t});\n\n\ttest('getAll - ignores resource when no entries exist', async () => {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\n\t\tconst entry = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\n\t\tlet resources = await service.getAll(CancellationToken.None);\n\t\tassert.strictEqual(resources.length, 1);\n\n\t\tawait service.removeEntry(entry, CancellationToken.None);\n\n\t\tresources = await service.getAll(CancellationToken.None);\n\t\tassert.strictEqual(resources.length, 0);\n\n\t\t// Simulate shutdown\n\t\tconst event = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tresources = await service.getAll(CancellationToken.None);\n\t\tassert.strictEqual(resources.length, 0);\n\t});\n\n\tfunction assertEntryEqual(entryA: IWorkingCopyHistoryEntry, entryB: IWorkingCopyHistoryEntry, assertTimestamp = true): void {\n\t\tassert.strictEqual(entryA.id, entryB.id);\n\t\tassert.strictEqual(entryA.location.toString(), entryB.location.toString());\n\t\tif (assertTimestamp) {\n\t\t\tassert.strictEqual(entryA.timestamp, entryB.timestamp);\n\t\t}\n\t\tassert.strictEqual(entryA.source, entryB.source);\n\t\tassert.strictEqual(entryA.workingCopy.name, entryB.workingCopy.name);\n\t\tassert.strictEqual(entryA.workingCopy.resource.toString(), entryB.workingCopy.resource.toString());\n\t}\n\n\ttest('entries cleaned up on shutdown', async () => {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\n\t\tconst entry1 = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry2 = await addEntry({ resource: workingCopy1.resource, source: 'other-source' }, CancellationToken.None);\n\t\tconst entry3 = await addEntry({ resource: workingCopy1.resource, source: 'other-source' }, CancellationToken.None);\n\t\tconst entry4 = await addEntry({ resource: workingCopy1.resource, source: 'other-source' }, CancellationToken.None);\n\n\t\tservice._configurationService.setUserConfiguration('workbench.localHistory.maxFileEntries', 2);\n\n\t\t// Simulate shutdown\n\t\tlet event = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\tassert.ok(!(await fileService.exists(entry1.location)));\n\t\tassert.ok(!(await fileService.exists(entry2.location)));\n\t\tassert.ok((await fileService.exists(entry3.location)));\n\t\tassert.ok((await fileService.exists(entry4.location)));\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tlet entries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 2);\n\t\tassertEntryEqual(entries[0], entry3);\n\t\tassertEntryEqual(entries[1], entry4);\n\n\t\tservice._configurationService.setUserConfiguration('workbench.localHistory.maxFileEntries', 3);\n\n\t\tconst entry5 = await addEntry({ resource: workingCopy1.resource, source: 'other-source' }, CancellationToken.None);\n\n\t\t// Simulate shutdown\n\t\tevent = new TestWillShutdownEvent();\n\t\tservice._lifecycleService.fireWillShutdown(event);\n\t\tawait Promise.allSettled(event.value);\n\n\t\tassert.ok((await fileService.exists(entry3.location)));\n\t\tassert.ok((await fileService.exists(entry4.location)));\n\t\tassert.ok((await fileService.exists(entry5.location)));\n\n\t\t// Resolve from file service fresh and verify again\n\n\t\tservice.dispose();\n\t\tservice = disposables.add(new TestWorkingCopyHistoryService(disposables, fileService));\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 3);\n\t\tassertEntryEqual(entries[0], entry3);\n\t\tassertEntryEqual(entries[1], entry4);\n\t\tassertEntryEqual(entries[2], entry5);\n\t});\n\n\ttest('entries are merged when source is same', async () => {\n\t\tlet replaced: IWorkingCopyHistoryEntry | undefined = undefined;\n\t\tdisposables.add(service.onDidReplaceEntry(e => replaced = e.entry));\n\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\n\t\tservice._configurationService.setUserConfiguration('workbench.localHistory.mergeWindow', 1);\n\n\t\tconst entry1 = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tassert.strictEqual(replaced, undefined);\n\n\t\tconst entry2 = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tassert.strictEqual(replaced, entry1);\n\n\t\tconst entry3 = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tassert.strictEqual(replaced, entry2);\n\n\t\tlet entries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 1);\n\t\tassertEntryEqual(entries[0], entry3);\n\n\t\tservice._configurationService.setUserConfiguration('workbench.localHistory.mergeWindow', undefined);\n\n\t\tawait addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tawait addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 3);\n\t});\n\n\ttest('move entries (file rename)', async () => {\n\t\tconst workingCopy = disposables.add(new TestWorkingCopy(testFile1Path));\n\n\t\tconst entry1 = await addEntry({ resource: workingCopy.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry2 = await addEntry({ resource: workingCopy.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry3 = await addEntry({ resource: workingCopy.resource, source: 'test-source' }, CancellationToken.None);\n\n\t\tlet entries = await service.getEntries(workingCopy.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 3);\n\n\t\tconst renamedWorkingCopyResource = joinPath(dirname(workingCopy.resource), 'renamed.txt');\n\t\tawait fileService.move(workingCopy.resource, renamedWorkingCopyResource);\n\n\t\tconst result = await service.moveEntries(workingCopy.resource, renamedWorkingCopyResource);\n\n\t\tassert.strictEqual(result.length, 1);\n\t\tassert.strictEqual(result[0].toString(), renamedWorkingCopyResource.toString());\n\n\t\tentries = await service.getEntries(workingCopy.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 0);\n\n\t\tentries = await service.getEntries(renamedWorkingCopyResource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 4);\n\n\t\tassert.strictEqual(entries[0].id, entry1.id);\n\t\tassert.strictEqual(entries[0].timestamp, entry1.timestamp);\n\t\tassert.strictEqual(entries[0].source, entry1.source);\n\t\tassert.notStrictEqual(entries[0].location, entry1.location);\n\t\tassert.strictEqual(entries[0].workingCopy.resource.toString(), renamedWorkingCopyResource.toString());\n\n\t\tassert.strictEqual(entries[1].id, entry2.id);\n\t\tassert.strictEqual(entries[1].timestamp, entry2.timestamp);\n\t\tassert.strictEqual(entries[1].source, entry2.source);\n\t\tassert.notStrictEqual(entries[1].location, entry2.location);\n\t\tassert.strictEqual(entries[1].workingCopy.resource.toString(), renamedWorkingCopyResource.toString());\n\n\t\tassert.strictEqual(entries[2].id, entry3.id);\n\t\tassert.strictEqual(entries[2].timestamp, entry3.timestamp);\n\t\tassert.strictEqual(entries[2].source, entry3.source);\n\t\tassert.notStrictEqual(entries[2].location, entry3.location);\n\t\tassert.strictEqual(entries[2].workingCopy.resource.toString(), renamedWorkingCopyResource.toString());\n\n\t\tconst all = await service.getAll(CancellationToken.None);\n\t\tassert.strictEqual(all.length, 1);\n\t\tassert.strictEqual(all[0].toString(), renamedWorkingCopyResource.toString());\n\t});\n\n\ttest('entries moved (folder rename)', async () => {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\t\tconst workingCopy2 = disposables.add(new TestWorkingCopy(testFile2Path));\n\n\t\tconst entry1A = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry2A = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry3A = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\n\t\tconst entry1B = await addEntry({ resource: workingCopy2.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry2B = await addEntry({ resource: workingCopy2.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry3B = await addEntry({ resource: workingCopy2.resource, source: 'test-source' }, CancellationToken.None);\n\n\t\tlet entries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 3);\n\n\t\tentries = await service.getEntries(workingCopy2.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 3);\n\n\t\tconst renamedWorkHome = joinPath(dirname(workHome), 'renamed');\n\t\tawait fileService.move(workHome, renamedWorkHome);\n\n\t\tconst resources = await service.moveEntries(workHome, renamedWorkHome);\n\n\t\tconst renamedWorkingCopy1Resource = joinPath(renamedWorkHome, basename(workingCopy1.resource));\n\t\tconst renamedWorkingCopy2Resource = joinPath(renamedWorkHome, basename(workingCopy2.resource));\n\n\t\tassert.strictEqual(resources.length, 2);\n\t\tfor (const resource of resources) {\n\t\t\tif (resource.toString() !== renamedWorkingCopy1Resource.toString() && resource.toString() !== renamedWorkingCopy2Resource.toString()) {\n\t\t\t\tassert.fail(`Unexpected history resource: ${resource.toString()}`);\n\t\t\t}\n\t\t}\n\n\t\tentries = await service.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 0);\n\t\tentries = await service.getEntries(workingCopy2.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 0);\n\n\t\tentries = await service.getEntries(renamedWorkingCopy1Resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 4);\n\n\t\tassert.strictEqual(entries[0].id, entry1A.id);\n\t\tassert.strictEqual(entries[0].timestamp, entry1A.timestamp);\n\t\tassert.strictEqual(entries[0].source, entry1A.source);\n\t\tassert.notStrictEqual(entries[0].location, entry1A.location);\n\t\tassert.strictEqual(entries[0].workingCopy.resource.toString(), renamedWorkingCopy1Resource.toString());\n\n\t\tassert.strictEqual(entries[1].id, entry2A.id);\n\t\tassert.strictEqual(entries[1].timestamp, entry2A.timestamp);\n\t\tassert.strictEqual(entries[1].source, entry2A.source);\n\t\tassert.notStrictEqual(entries[1].location, entry2A.location);\n\t\tassert.strictEqual(entries[1].workingCopy.resource.toString(), renamedWorkingCopy1Resource.toString());\n\n\t\tassert.strictEqual(entries[2].id, entry3A.id);\n\t\tassert.strictEqual(entries[2].timestamp, entry3A.timestamp);\n\t\tassert.strictEqual(entries[2].source, entry3A.source);\n\t\tassert.notStrictEqual(entries[2].location, entry3A.location);\n\t\tassert.strictEqual(entries[2].workingCopy.resource.toString(), renamedWorkingCopy1Resource.toString());\n\n\t\tentries = await service.getEntries(renamedWorkingCopy2Resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 4);\n\n\t\tassert.strictEqual(entries[0].id, entry1B.id);\n\t\tassert.strictEqual(entries[0].timestamp, entry1B.timestamp);\n\t\tassert.strictEqual(entries[0].source, entry1B.source);\n\t\tassert.notStrictEqual(entries[0].location, entry1B.location);\n\t\tassert.strictEqual(entries[0].workingCopy.resource.toString(), renamedWorkingCopy2Resource.toString());\n\n\t\tassert.strictEqual(entries[1].id, entry2B.id);\n\t\tassert.strictEqual(entries[1].timestamp, entry2B.timestamp);\n\t\tassert.strictEqual(entries[1].source, entry2B.source);\n\t\tassert.notStrictEqual(entries[1].location, entry2B.location);\n\t\tassert.strictEqual(entries[1].workingCopy.resource.toString(), renamedWorkingCopy2Resource.toString());\n\n\t\tassert.strictEqual(entries[2].id, entry3B.id);\n\t\tassert.strictEqual(entries[2].timestamp, entry3B.timestamp);\n\t\tassert.strictEqual(entries[2].source, entry3B.source);\n\t\tassert.notStrictEqual(entries[2].location, entry3B.location);\n\t\tassert.strictEqual(entries[2].workingCopy.resource.toString(), renamedWorkingCopy2Resource.toString());\n\n\t\tconst all = await service.getAll(CancellationToken.None);\n\t\tassert.strictEqual(all.length, 2);\n\t\tfor (const resource of all) {\n\t\t\tif (resource.toString() !== renamedWorkingCopy1Resource.toString() && resource.toString() !== renamedWorkingCopy2Resource.toString()) {\n\t\t\t\tassert.fail(`Unexpected history resource: ${resource.toString()}`);\n\t\t\t}\n\t\t}\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}