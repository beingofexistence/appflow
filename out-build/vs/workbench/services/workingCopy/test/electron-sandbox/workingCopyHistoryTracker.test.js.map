{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/workingCopy/test/electron-sandbox/workingCopyHistoryTracker.test.ts"],"names":[],"mappings":"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","file":"workingCopyHistoryTracker.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Event } from 'vs/base/common/event';\nimport { TestContextService, TestWorkingCopy } from 'vs/workbench/test/common/workbenchTestServices';\nimport { randomPath } from 'vs/base/common/extpath';\nimport { join } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { WorkingCopyHistoryTracker } from 'vs/workbench/services/workingCopy/common/workingCopyHistoryTracker';\nimport { WorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { TestFileService, TestPathService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { DeferredPromise } from 'vs/base/common/async';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename, dirname, isEqual, joinPath } from 'vs/base/common/resources';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { UndoRedoService } from 'vs/platform/undoRedo/common/undoRedoService';\nimport { TestDialogService } from 'vs/platform/dialogs/test/common/testDialogService';\nimport { TestNotificationService } from 'vs/platform/notification/test/common/testNotificationService';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IWorkingCopyHistoryEntry, IWorkingCopyHistoryEntryDescriptor } from 'vs/workbench/services/workingCopy/common/workingCopyHistory';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { TestWorkingCopyHistoryService } from 'vs/workbench/services/workingCopy/test/electron-sandbox/workingCopyHistoryService.test';\n\nsuite('WorkingCopyHistoryTracker', () => {\n\n\tlet testDir: URI;\n\tlet historyHome: URI;\n\tlet workHome: URI;\n\n\tlet workingCopyHistoryService: TestWorkingCopyHistoryService;\n\tlet workingCopyService: WorkingCopyService;\n\tlet fileService: IFileService;\n\tlet configurationService: TestConfigurationService;\n\n\tlet tracker: WorkingCopyHistoryTracker;\n\n\tlet testFile1Path: URI;\n\tlet testFile2Path: URI;\n\n\tconst disposables = new DisposableStore();\n\n\tconst testFile1PathContents = 'Hello Foo';\n\tconst testFile2PathContents = [\n\t\t'Lorem ipsum ',\n\t\t'dolor öäü sit amet ',\n\t\t'adipiscing ßß elit',\n\t\t'consectetur '\n\t].join('').repeat(1000);\n\n\tlet increasingTimestampCounter = 1;\n\n\tasync function addEntry(descriptor: IWorkingCopyHistoryEntryDescriptor, token: CancellationToken): Promise<IWorkingCopyHistoryEntry> {\n\t\tconst entry = await workingCopyHistoryService.addEntry({\n\t\t\t...descriptor,\n\t\t\ttimestamp: increasingTimestampCounter++ // very important to get tests to not be flaky with stable sort order\n\t\t}, token);\n\n\t\treturn assertIsDefined(entry);\n\t}\n\n\tsetup(async () => {\n\t\ttestDir = URI.file(randomPath(join('vsctests', 'workingcopyhistorytracker'))).with({ scheme: Schemas.inMemory });\n\t\thistoryHome = joinPath(testDir, 'User', 'History');\n\t\tworkHome = joinPath(testDir, 'work');\n\n\t\tworkingCopyHistoryService = disposables.add(new TestWorkingCopyHistoryService(disposables));\n\t\tworkingCopyService = disposables.add(new WorkingCopyService());\n\t\tfileService = workingCopyHistoryService._fileService;\n\t\tconfigurationService = workingCopyHistoryService._configurationService;\n\n\t\ttracker = disposables.add(createTracker());\n\n\t\tawait fileService.createFolder(historyHome);\n\t\tawait fileService.createFolder(workHome);\n\n\t\ttestFile1Path = joinPath(workHome, 'foo.txt');\n\t\ttestFile2Path = joinPath(workHome, 'bar.txt');\n\n\t\tawait fileService.writeFile(testFile1Path, VSBuffer.fromString(testFile1PathContents));\n\t\tawait fileService.writeFile(testFile2Path, VSBuffer.fromString(testFile2PathContents));\n\t});\n\n\tfunction createTracker() {\n\t\treturn new WorkingCopyHistoryTracker(\n\t\t\tworkingCopyService,\n\t\t\tworkingCopyHistoryService,\n\t\t\tdisposables.add(new UriIdentityService(disposables.add(new TestFileService()))),\n\t\t\tnew TestPathService(undefined, Schemas.file),\n\t\t\tconfigurationService,\n\t\t\tnew UndoRedoService(new TestDialogService(), new TestNotificationService()),\n\t\t\tnew TestContextService(),\n\t\t\tworkingCopyHistoryService._fileService\n\t\t);\n\t}\n\n\tteardown(async () => {\n\t\tawait fileService.del(testDir, { recursive: true });\n\t\tdisposables.clear();\n\t});\n\n\ttest('history entry added on save', async () => {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\t\tconst workingCopy2 = disposables.add(new TestWorkingCopy(testFile2Path));\n\n\t\tconst stat1 = await fileService.resolve(workingCopy1.resource, { resolveMetadata: true });\n\t\tconst stat2 = await fileService.resolve(workingCopy2.resource, { resolveMetadata: true });\n\n\t\tdisposables.add(workingCopyService.registerWorkingCopy(workingCopy1));\n\t\tdisposables.add(workingCopyService.registerWorkingCopy(workingCopy2));\n\n\t\tconst saveResult = new DeferredPromise<void>();\n\t\tlet addedCounter = 0;\n\t\tdisposables.add(workingCopyHistoryService.onDidAddEntry(e => {\n\t\t\tif (isEqual(e.entry.workingCopy.resource, workingCopy1.resource) || isEqual(e.entry.workingCopy.resource, workingCopy2.resource)) {\n\t\t\t\taddedCounter++;\n\n\t\t\t\tif (addedCounter === 2) {\n\t\t\t\t\tsaveResult.complete();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tawait workingCopy1.save(undefined, stat1);\n\t\tawait workingCopy2.save(undefined, stat2);\n\n\t\tawait saveResult.p;\n\t});\n\n\ttest('history entry skipped when setting disabled (globally)', async () => {\n\t\tconfigurationService.setUserConfiguration('workbench.localHistory.enabled', false, testFile1Path);\n\n\t\treturn assertNoLocalHistoryEntryAddedWithSettingsConfigured();\n\t});\n\n\ttest('history entry skipped when setting disabled (exclude)', () => {\n\t\tconfigurationService.setUserConfiguration('workbench.localHistory.exclude', { '**/foo.txt': true });\n\n\t\t// Recreate to apply settings\n\t\ttracker.dispose();\n\t\ttracker = disposables.add(createTracker());\n\n\t\treturn assertNoLocalHistoryEntryAddedWithSettingsConfigured();\n\t});\n\n\ttest('history entry skipped when too large', async () => {\n\t\tconfigurationService.setUserConfiguration('workbench.localHistory.maxFileSize', 0, testFile1Path);\n\n\t\treturn assertNoLocalHistoryEntryAddedWithSettingsConfigured();\n\t});\n\n\tasync function assertNoLocalHistoryEntryAddedWithSettingsConfigured(): Promise<void> {\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\t\tconst workingCopy2 = disposables.add(new TestWorkingCopy(testFile2Path));\n\n\t\tconst stat1 = await fileService.resolve(workingCopy1.resource, { resolveMetadata: true });\n\t\tconst stat2 = await fileService.resolve(workingCopy2.resource, { resolveMetadata: true });\n\n\t\tdisposables.add(workingCopyService.registerWorkingCopy(workingCopy1));\n\t\tdisposables.add(workingCopyService.registerWorkingCopy(workingCopy2));\n\n\t\tconst saveResult = new DeferredPromise<void>();\n\t\tdisposables.add(workingCopyHistoryService.onDidAddEntry(e => {\n\t\t\tif (isEqual(e.entry.workingCopy.resource, workingCopy1.resource)) {\n\t\t\t\tassert.fail('Unexpected working copy history entry: ' + e.entry.workingCopy.resource.toString());\n\t\t\t}\n\n\t\t\tif (isEqual(e.entry.workingCopy.resource, workingCopy2.resource)) {\n\t\t\t\tsaveResult.complete();\n\t\t\t}\n\t\t}));\n\n\t\tawait workingCopy1.save(undefined, stat1);\n\t\tawait workingCopy2.save(undefined, stat2);\n\n\t\tawait saveResult.p;\n\t}\n\n\ttest('entries moved (file rename)', async () => {\n\t\tconst entriesMoved = Event.toPromise(workingCopyHistoryService.onDidMoveEntries);\n\n\t\tconst workingCopy = disposables.add(new TestWorkingCopy(testFile1Path));\n\n\t\tconst entry1 = await addEntry({ resource: workingCopy.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry2 = await addEntry({ resource: workingCopy.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry3 = await addEntry({ resource: workingCopy.resource, source: 'test-source' }, CancellationToken.None);\n\n\t\tlet entries = await workingCopyHistoryService.getEntries(workingCopy.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 3);\n\n\t\tconst renamedWorkingCopyResource = joinPath(dirname(workingCopy.resource), 'renamed.txt');\n\t\tawait workingCopyHistoryService._fileService.move(workingCopy.resource, renamedWorkingCopyResource);\n\n\t\tawait entriesMoved;\n\n\t\tentries = await workingCopyHistoryService.getEntries(workingCopy.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 0);\n\n\t\tentries = await workingCopyHistoryService.getEntries(renamedWorkingCopyResource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 4);\n\n\t\tassert.strictEqual(entries[0].id, entry1.id);\n\t\tassert.strictEqual(entries[0].timestamp, entry1.timestamp);\n\t\tassert.strictEqual(entries[0].source, entry1.source);\n\t\tassert.notStrictEqual(entries[0].location, entry1.location);\n\t\tassert.strictEqual(entries[0].workingCopy.resource.toString(), renamedWorkingCopyResource.toString());\n\n\t\tassert.strictEqual(entries[1].id, entry2.id);\n\t\tassert.strictEqual(entries[1].timestamp, entry2.timestamp);\n\t\tassert.strictEqual(entries[1].source, entry2.source);\n\t\tassert.notStrictEqual(entries[1].location, entry2.location);\n\t\tassert.strictEqual(entries[1].workingCopy.resource.toString(), renamedWorkingCopyResource.toString());\n\n\t\tassert.strictEqual(entries[2].id, entry3.id);\n\t\tassert.strictEqual(entries[2].timestamp, entry3.timestamp);\n\t\tassert.strictEqual(entries[2].source, entry3.source);\n\t\tassert.notStrictEqual(entries[2].location, entry3.location);\n\t\tassert.strictEqual(entries[2].workingCopy.resource.toString(), renamedWorkingCopyResource.toString());\n\n\t\tconst all = await workingCopyHistoryService.getAll(CancellationToken.None);\n\t\tassert.strictEqual(all.length, 1);\n\t\tassert.strictEqual(all[0].toString(), renamedWorkingCopyResource.toString());\n\t});\n\n\ttest('entries moved (folder rename)', async () => {\n\t\tconst entriesMoved = Event.toPromise(workingCopyHistoryService.onDidMoveEntries);\n\n\t\tconst workingCopy1 = disposables.add(new TestWorkingCopy(testFile1Path));\n\t\tconst workingCopy2 = disposables.add(new TestWorkingCopy(testFile2Path));\n\n\t\tconst entry1A = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry2A = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry3A = await addEntry({ resource: workingCopy1.resource, source: 'test-source' }, CancellationToken.None);\n\n\t\tconst entry1B = await addEntry({ resource: workingCopy2.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry2B = await addEntry({ resource: workingCopy2.resource, source: 'test-source' }, CancellationToken.None);\n\t\tconst entry3B = await addEntry({ resource: workingCopy2.resource, source: 'test-source' }, CancellationToken.None);\n\n\t\tlet entries = await workingCopyHistoryService.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 3);\n\n\t\tentries = await workingCopyHistoryService.getEntries(workingCopy2.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 3);\n\n\t\tconst renamedWorkHome = joinPath(dirname(testDir), 'renamed');\n\t\tawait workingCopyHistoryService._fileService.move(workHome, renamedWorkHome);\n\n\t\tconst renamedWorkingCopy1Resource = joinPath(renamedWorkHome, basename(workingCopy1.resource));\n\t\tconst renamedWorkingCopy2Resource = joinPath(renamedWorkHome, basename(workingCopy2.resource));\n\n\t\tawait entriesMoved;\n\n\t\tentries = await workingCopyHistoryService.getEntries(workingCopy1.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 0);\n\t\tentries = await workingCopyHistoryService.getEntries(workingCopy2.resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 0);\n\n\t\tentries = await workingCopyHistoryService.getEntries(renamedWorkingCopy1Resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 4);\n\n\t\tassert.strictEqual(entries[0].id, entry1A.id);\n\t\tassert.strictEqual(entries[0].timestamp, entry1A.timestamp);\n\t\tassert.strictEqual(entries[0].source, entry1A.source);\n\t\tassert.notStrictEqual(entries[0].location, entry1A.location);\n\t\tassert.strictEqual(entries[0].workingCopy.resource.toString(), renamedWorkingCopy1Resource.toString());\n\n\t\tassert.strictEqual(entries[1].id, entry2A.id);\n\t\tassert.strictEqual(entries[1].timestamp, entry2A.timestamp);\n\t\tassert.strictEqual(entries[1].source, entry2A.source);\n\t\tassert.notStrictEqual(entries[1].location, entry2A.location);\n\t\tassert.strictEqual(entries[1].workingCopy.resource.toString(), renamedWorkingCopy1Resource.toString());\n\n\t\tassert.strictEqual(entries[2].id, entry3A.id);\n\t\tassert.strictEqual(entries[2].timestamp, entry3A.timestamp);\n\t\tassert.strictEqual(entries[2].source, entry3A.source);\n\t\tassert.notStrictEqual(entries[2].location, entry3A.location);\n\t\tassert.strictEqual(entries[2].workingCopy.resource.toString(), renamedWorkingCopy1Resource.toString());\n\n\t\tentries = await workingCopyHistoryService.getEntries(renamedWorkingCopy2Resource, CancellationToken.None);\n\t\tassert.strictEqual(entries.length, 4);\n\n\t\tassert.strictEqual(entries[0].id, entry1B.id);\n\t\tassert.strictEqual(entries[0].timestamp, entry1B.timestamp);\n\t\tassert.strictEqual(entries[0].source, entry1B.source);\n\t\tassert.notStrictEqual(entries[0].location, entry1B.location);\n\t\tassert.strictEqual(entries[0].workingCopy.resource.toString(), renamedWorkingCopy2Resource.toString());\n\n\t\tassert.strictEqual(entries[1].id, entry2B.id);\n\t\tassert.strictEqual(entries[1].timestamp, entry2B.timestamp);\n\t\tassert.strictEqual(entries[1].source, entry2B.source);\n\t\tassert.notStrictEqual(entries[1].location, entry2B.location);\n\t\tassert.strictEqual(entries[1].workingCopy.resource.toString(), renamedWorkingCopy2Resource.toString());\n\n\t\tassert.strictEqual(entries[2].id, entry3B.id);\n\t\tassert.strictEqual(entries[2].timestamp, entry3B.timestamp);\n\t\tassert.strictEqual(entries[2].source, entry3B.source);\n\t\tassert.notStrictEqual(entries[2].location, entry3B.location);\n\t\tassert.strictEqual(entries[2].workingCopy.resource.toString(), renamedWorkingCopy2Resource.toString());\n\n\t\tconst all = await workingCopyHistoryService.getAll(CancellationToken.None);\n\t\tassert.strictEqual(all.length, 2);\n\t\tfor (const resource of all) {\n\t\t\tif (resource.toString() !== renamedWorkingCopy1Resource.toString() && resource.toString() !== renamedWorkingCopy2Resource.toString()) {\n\t\t\t\tassert.fail(`Unexpected history resource: ${resource.toString()}`);\n\t\t\t}\n\t\t}\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}