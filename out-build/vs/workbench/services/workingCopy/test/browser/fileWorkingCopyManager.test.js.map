{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/workingCopy/test/browser/fileWorkingCopyManager.test.ts"],"names":[],"mappings":"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","file":"fileWorkingCopyManager.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { workbenchInstantiationService, TestServiceAccessor, TestInMemoryFileSystemProvider } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { StoredFileWorkingCopy, IStoredFileWorkingCopy } from 'vs/workbench/services/workingCopy/common/storedFileWorkingCopy';\nimport { bufferToStream, VSBuffer } from 'vs/base/common/buffer';\nimport { TestStoredFileWorkingCopyModel, TestStoredFileWorkingCopyModelFactory } from 'vs/workbench/services/workingCopy/test/browser/storedFileWorkingCopy.test';\nimport { Schemas } from 'vs/base/common/network';\nimport { IFileWorkingCopyManager, FileWorkingCopyManager } from 'vs/workbench/services/workingCopy/common/fileWorkingCopyManager';\nimport { TestUntitledFileWorkingCopyModel, TestUntitledFileWorkingCopyModelFactory } from 'vs/workbench/services/workingCopy/test/browser/untitledFileWorkingCopy.test';\nimport { UntitledFileWorkingCopy } from 'vs/workbench/services/workingCopy/common/untitledFileWorkingCopy';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nsuite('FileWorkingCopyManager', () => {\n\n\tconst disposables = new DisposableStore();\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tlet manager: IFileWorkingCopyManager<TestStoredFileWorkingCopyModel, TestUntitledFileWorkingCopyModel>;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\taccessor.fileService.registerProvider(Schemas.file, new TestInMemoryFileSystemProvider());\n\t\taccessor.fileService.registerProvider(Schemas.vscodeRemote, new TestInMemoryFileSystemProvider());\n\n\t\tmanager = disposables.add(new FileWorkingCopyManager(\n\t\t\t'testFileWorkingCopyType',\n\t\t\tnew TestStoredFileWorkingCopyModelFactory(),\n\t\t\tnew TestUntitledFileWorkingCopyModelFactory(),\n\t\t\taccessor.fileService, accessor.lifecycleService, accessor.labelService, accessor.logService,\n\t\t\taccessor.workingCopyFileService, accessor.workingCopyBackupService, accessor.uriIdentityService, accessor.fileDialogService,\n\t\t\taccessor.filesConfigurationService, accessor.workingCopyService, accessor.notificationService,\n\t\t\taccessor.workingCopyEditorService, accessor.editorService, accessor.elevatedFileService, accessor.pathService,\n\t\t\taccessor.environmentService, accessor.dialogService, accessor.decorationsService\n\t\t));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('onDidCreate, get, workingCopies', async () => {\n\t\tlet createCounter = 0;\n\t\tdisposables.add(manager.onDidCreate(e => {\n\t\t\tcreateCounter++;\n\t\t}));\n\n\t\tconst fileUri = URI.file('/test.html');\n\n\t\tassert.strictEqual(manager.workingCopies.length, 0);\n\t\tassert.strictEqual(manager.get(fileUri), undefined);\n\n\t\tconst fileWorkingCopy = await manager.resolve(fileUri);\n\t\tconst untitledFileWorkingCopy = await manager.resolve();\n\n\t\tassert.strictEqual(manager.workingCopies.length, 2);\n\t\tassert.strictEqual(createCounter, 2);\n\t\tassert.strictEqual(manager.get(fileWorkingCopy.resource), fileWorkingCopy);\n\t\tassert.strictEqual(manager.get(untitledFileWorkingCopy.resource), untitledFileWorkingCopy);\n\n\t\tconst sameFileWorkingCopy = disposables.add(await manager.resolve(fileUri));\n\t\tconst sameUntitledFileWorkingCopy = disposables.add(await manager.resolve({ untitledResource: untitledFileWorkingCopy.resource }));\n\t\tassert.strictEqual(sameFileWorkingCopy, fileWorkingCopy);\n\t\tassert.strictEqual(sameUntitledFileWorkingCopy, untitledFileWorkingCopy);\n\t\tassert.strictEqual(manager.workingCopies.length, 2);\n\t\tassert.strictEqual(createCounter, 2);\n\t});\n\n\ttest('resolve', async () => {\n\t\tconst fileWorkingCopy = disposables.add(await manager.resolve(URI.file('/test.html')));\n\t\tassert.ok(fileWorkingCopy instanceof StoredFileWorkingCopy);\n\t\tassert.strictEqual(await manager.stored.resolve(fileWorkingCopy.resource), fileWorkingCopy);\n\n\t\tconst untitledFileWorkingCopy = disposables.add(await manager.resolve());\n\t\tassert.ok(untitledFileWorkingCopy instanceof UntitledFileWorkingCopy);\n\t\tassert.strictEqual(await manager.untitled.resolve({ untitledResource: untitledFileWorkingCopy.resource }), untitledFileWorkingCopy);\n\t\tassert.strictEqual(await manager.resolve(untitledFileWorkingCopy.resource), untitledFileWorkingCopy);\n\t});\n\n\ttest('destroy', async () => {\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\n\t\tawait manager.resolve(URI.file('/test.html'));\n\t\tawait manager.resolve({ contents: { value: bufferToStream(VSBuffer.fromString('Hello Untitled')) } });\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 2);\n\t\tassert.strictEqual(manager.stored.workingCopies.length, 1);\n\t\tassert.strictEqual(manager.untitled.workingCopies.length, 1);\n\n\t\tawait manager.destroy();\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\t\tassert.strictEqual(manager.stored.workingCopies.length, 0);\n\t\tassert.strictEqual(manager.untitled.workingCopies.length, 0);\n\t});\n\n\ttest('saveAs - file (same target, unresolved source, unresolved target)', () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\treturn testSaveAsFile(source, source, false, false);\n\t});\n\n\ttest('saveAs - file (same target, different case, unresolved source, unresolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/SOURCE.txt');\n\n\t\treturn testSaveAsFile(source, target, false, false);\n\t});\n\n\ttest('saveAs - file (different target, unresolved source, unresolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/target.txt');\n\n\t\treturn testSaveAsFile(source, target, false, false);\n\t});\n\n\ttest('saveAs - file (same target, resolved source, unresolved target)', () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\treturn testSaveAsFile(source, source, true, false);\n\t});\n\n\ttest('saveAs - file (same target, different case, resolved source, unresolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/SOURCE.txt');\n\n\t\treturn testSaveAsFile(source, target, true, false);\n\t});\n\n\ttest('saveAs - file (different target, resolved source, unresolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/target.txt');\n\n\t\treturn testSaveAsFile(source, target, true, false);\n\t});\n\n\ttest('saveAs - file (same target, unresolved source, resolved target)', () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\treturn testSaveAsFile(source, source, false, true);\n\t});\n\n\ttest('saveAs - file (same target, different case, unresolved source, resolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/SOURCE.txt');\n\n\t\treturn testSaveAsFile(source, target, false, true);\n\t});\n\n\ttest('saveAs - file (different target, unresolved source, resolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/target.txt');\n\n\t\treturn testSaveAsFile(source, target, false, true);\n\t});\n\n\ttest('saveAs - file (same target, resolved source, resolved target)', () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\treturn testSaveAsFile(source, source, true, true);\n\t});\n\n\ttest('saveAs - file (different target, resolved source, resolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/target.txt');\n\n\t\treturn testSaveAsFile(source, target, true, true);\n\t});\n\n\tasync function testSaveAsFile(source: URI, target: URI, resolveSource: boolean, resolveTarget: boolean) {\n\t\tlet sourceWorkingCopy: IStoredFileWorkingCopy<TestStoredFileWorkingCopyModel> | undefined = undefined;\n\t\tif (resolveSource) {\n\t\t\tsourceWorkingCopy = disposables.add(await manager.resolve(source));\n\t\t\tsourceWorkingCopy.model?.updateContents('hello world');\n\t\t\tassert.ok(sourceWorkingCopy.isDirty());\n\t\t}\n\n\t\tlet targetWorkingCopy: IStoredFileWorkingCopy<TestStoredFileWorkingCopyModel> | undefined = undefined;\n\t\tif (resolveTarget) {\n\t\t\ttargetWorkingCopy = disposables.add(await manager.resolve(target));\n\t\t\ttargetWorkingCopy.model?.updateContents('hello world');\n\t\t\tassert.ok(targetWorkingCopy.isDirty());\n\t\t}\n\n\t\tconst result = await manager.saveAs(source, target);\n\t\tif (accessor.uriIdentityService.extUri.isEqual(source, target) && resolveSource) {\n\t\t\t// if the uris are considered equal (different case on macOS/Windows)\n\t\t\t// and the source is to be resolved, the resulting working copy resource\n\t\t\t// will be the source resource because we consider file working copies\n\t\t\t// the same in that case\n\t\t\tassert.strictEqual(source.toString(), result?.resource.toString());\n\t\t} else {\n\t\t\tif (resolveSource || resolveTarget) {\n\t\t\t\tassert.strictEqual(target.toString(), result?.resource.toString());\n\t\t\t} else {\n\t\t\t\tif (accessor.uriIdentityService.extUri.isEqual(source, target)) {\n\t\t\t\t\tassert.strictEqual(undefined, result);\n\t\t\t\t} else {\n\t\t\t\t\tassert.strictEqual(target.toString(), result?.resource.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (resolveSource) {\n\t\t\tassert.strictEqual(sourceWorkingCopy?.isDirty(), false);\n\t\t}\n\n\t\tif (resolveTarget) {\n\t\t\tassert.strictEqual(targetWorkingCopy?.isDirty(), false);\n\t\t}\n\n\t\tresult?.dispose();\n\t}\n\n\ttest('saveAs - untitled (without associated resource)', async () => {\n\t\tconst workingCopy = disposables.add(await manager.resolve());\n\t\tworkingCopy.model?.updateContents('Simple Save As');\n\n\t\tconst target = URI.file('simple/file.txt');\n\t\taccessor.fileDialogService.setPickFileToSave(target);\n\n\t\tconst result = await manager.saveAs(workingCopy.resource, undefined);\n\t\tassert.strictEqual(result?.resource.toString(), target.toString());\n\n\t\tassert.strictEqual((result?.model as TestStoredFileWorkingCopyModel).contents, 'Simple Save As');\n\n\t\tassert.strictEqual(manager.untitled.get(workingCopy.resource), undefined);\n\n\t\tresult?.dispose();\n\t});\n\n\ttest('saveAs - untitled (with associated resource)', async () => {\n\t\tconst workingCopy = disposables.add(await manager.resolve({ associatedResource: { path: '/some/associated.txt' } }));\n\t\tworkingCopy.model?.updateContents('Simple Save As with associated resource');\n\n\t\tconst target = URI.from({ scheme: Schemas.file, path: '/some/associated.txt' });\n\n\t\taccessor.fileService.notExistsSet.set(target, true);\n\n\t\tconst result = await manager.saveAs(workingCopy.resource, undefined);\n\t\tassert.strictEqual(result?.resource.toString(), target.toString());\n\n\t\tassert.strictEqual((result?.model as TestStoredFileWorkingCopyModel).contents, 'Simple Save As with associated resource');\n\n\t\tassert.strictEqual(manager.untitled.get(workingCopy.resource), undefined);\n\n\t\tresult?.dispose();\n\t});\n\n\ttest('saveAs - untitled (target exists and is resolved)', async () => {\n\t\tconst workingCopy = disposables.add(await manager.resolve());\n\t\tworkingCopy.model?.updateContents('Simple Save As');\n\n\t\tconst target = URI.file('simple/file.txt');\n\t\tconst targetFileWorkingCopy = await manager.resolve(target);\n\t\taccessor.fileDialogService.setPickFileToSave(target);\n\n\t\tconst result = await manager.saveAs(workingCopy.resource, undefined);\n\t\tassert.strictEqual(result, targetFileWorkingCopy);\n\n\t\tassert.strictEqual((result?.model as TestStoredFileWorkingCopyModel).contents, 'Simple Save As');\n\n\t\tassert.strictEqual(manager.untitled.get(workingCopy.resource), undefined);\n\n\t\tresult?.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}