{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/workingCopy/test/browser/storedFileWorkingCopyManager.test.ts"],"names":[],"mappings":"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","file":"storedFileWorkingCopyManager.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { workbenchInstantiationService, TestServiceAccessor, TestWillShutdownEvent } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { StoredFileWorkingCopyManager, IStoredFileWorkingCopyManager, IStoredFileWorkingCopySaveEvent } from 'vs/workbench/services/workingCopy/common/storedFileWorkingCopyManager';\nimport { IStoredFileWorkingCopy, IStoredFileWorkingCopyModel } from 'vs/workbench/services/workingCopy/common/storedFileWorkingCopy';\nimport { bufferToStream, VSBuffer } from 'vs/base/common/buffer';\nimport { FileChangesEvent, FileChangeType, FileOperationError, FileOperationResult } from 'vs/platform/files/common/files';\nimport { timeout } from 'vs/base/common/async';\nimport { TestStoredFileWorkingCopyModel, TestStoredFileWorkingCopyModelFactory } from 'vs/workbench/services/workingCopy/test/browser/storedFileWorkingCopy.test';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nsuite('StoredFileWorkingCopyManager', () => {\n\n\tconst disposables = new DisposableStore();\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tlet manager: IStoredFileWorkingCopyManager<TestStoredFileWorkingCopyModel>;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tmanager = disposables.add(new StoredFileWorkingCopyManager<TestStoredFileWorkingCopyModel>(\n\t\t\t'testStoredFileWorkingCopyType',\n\t\t\tnew TestStoredFileWorkingCopyModelFactory(),\n\t\t\taccessor.fileService, accessor.lifecycleService, accessor.labelService, accessor.logService,\n\t\t\taccessor.workingCopyFileService, accessor.workingCopyBackupService, accessor.uriIdentityService,\n\t\t\taccessor.filesConfigurationService, accessor.workingCopyService, accessor.notificationService,\n\t\t\taccessor.workingCopyEditorService, accessor.editorService, accessor.elevatedFileService\n\t\t));\n\t});\n\n\tteardown(() => {\n\t\tfor (const workingCopy of manager.workingCopies) {\n\t\t\tworkingCopy.dispose();\n\t\t}\n\n\t\tdisposables.clear();\n\t});\n\n\ttest('resolve', async () => {\n\t\tconst resource = URI.file('/test.html');\n\n\t\tconst events: IStoredFileWorkingCopy<IStoredFileWorkingCopyModel>[] = [];\n\t\tconst listener = manager.onDidCreate(workingCopy => {\n\t\t\tevents.push(workingCopy);\n\t\t});\n\n\t\tconst resolvePromise = manager.resolve(resource);\n\t\tassert.ok(manager.get(resource)); // working copy known even before resolved()\n\t\tassert.strictEqual(manager.workingCopies.length, 1);\n\n\t\tconst workingCopy1 = await resolvePromise;\n\t\tassert.ok(workingCopy1);\n\t\tassert.ok(workingCopy1.model);\n\t\tassert.strictEqual(workingCopy1.typeId, 'testStoredFileWorkingCopyType');\n\t\tassert.strictEqual(workingCopy1.resource.toString(), resource.toString());\n\t\tassert.strictEqual(manager.get(resource), workingCopy1);\n\n\t\tconst workingCopy2 = await manager.resolve(resource);\n\t\tassert.strictEqual(workingCopy2, workingCopy1);\n\t\tassert.strictEqual(manager.workingCopies.length, 1);\n\t\tworkingCopy1.dispose();\n\n\t\tconst workingCopy3 = await manager.resolve(resource);\n\t\tassert.notStrictEqual(workingCopy3, workingCopy2);\n\t\tassert.strictEqual(manager.workingCopies.length, 1);\n\t\tassert.strictEqual(manager.get(resource), workingCopy3);\n\t\tworkingCopy3.dispose();\n\n\t\tassert.strictEqual(manager.workingCopies.length, 0);\n\n\t\tassert.strictEqual(events.length, 2);\n\t\tassert.strictEqual(events[0].resource.toString(), workingCopy1.resource.toString());\n\t\tassert.strictEqual(events[1].resource.toString(), workingCopy2.resource.toString());\n\n\t\tlistener.dispose();\n\n\t\tworkingCopy1.dispose();\n\t\tworkingCopy2.dispose();\n\t\tworkingCopy3.dispose();\n\t});\n\n\ttest('resolve (async)', async () => {\n\t\tconst resource = URI.file('/path/index.txt');\n\n\t\tdisposables.add(await manager.resolve(resource));\n\n\t\tlet didResolve = false;\n\t\tlet onDidResolve = new Promise<void>(resolve => {\n\t\t\tdisposables.add(manager.onDidResolve(({ model }) => {\n\t\t\t\tif (model?.resource.toString() === resource.toString()) {\n\t\t\t\t\tdidResolve = true;\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\n\t\tconst resolve = manager.resolve(resource, { reload: { async: true } });\n\n\t\tawait onDidResolve;\n\n\t\tassert.strictEqual(didResolve, true);\n\n\t\tdidResolve = false;\n\n\t\tonDidResolve = new Promise<void>(resolve => {\n\t\t\tdisposables.add(manager.onDidResolve(({ model }) => {\n\t\t\t\tif (model?.resource.toString() === resource.toString()) {\n\t\t\t\t\tdidResolve = true;\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\n\t\tmanager.resolve(resource, { reload: { async: true, force: true } });\n\n\t\tawait onDidResolve;\n\n\t\tassert.strictEqual(didResolve, true);\n\n\t\tdisposables.add(await resolve);\n\t});\n\n\ttest('resolve (sync)', async () => {\n\t\tconst resource = URI.file('/path/index.txt');\n\n\t\tawait manager.resolve(resource);\n\n\t\tlet didResolve = false;\n\t\tdisposables.add(manager.onDidResolve(({ model }) => {\n\t\t\tif (model?.resource.toString() === resource.toString()) {\n\t\t\t\tdidResolve = true;\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(await manager.resolve(resource, { reload: { async: false } }));\n\t\tassert.strictEqual(didResolve, true);\n\n\t\tdidResolve = false;\n\n\t\tdisposables.add(await manager.resolve(resource, { reload: { async: false, force: true } }));\n\t\tassert.strictEqual(didResolve, true);\n\t});\n\n\ttest('resolve (sync) - model disposed when error and first call to resolve', async () => {\n\t\tconst resource = URI.file('/path/index.txt');\n\n\t\taccessor.fileService.readShouldThrowError = new FileOperationError('fail', FileOperationResult.FILE_OTHER_ERROR);\n\n\t\ttry {\n\t\t\tlet error: Error | undefined = undefined;\n\t\t\ttry {\n\t\t\t\tawait manager.resolve(resource);\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\n\t\t\tassert.ok(error);\n\t\t\tassert.strictEqual(manager.workingCopies.length, 0);\n\t\t} finally {\n\t\t\taccessor.fileService.readShouldThrowError = undefined;\n\t\t}\n\t});\n\n\ttest('resolve (sync) - model not disposed when error and model existed before', async () => {\n\t\tconst resource = URI.file('/path/index.txt');\n\n\t\tdisposables.add(await manager.resolve(resource));\n\n\t\taccessor.fileService.readShouldThrowError = new FileOperationError('fail', FileOperationResult.FILE_OTHER_ERROR);\n\n\t\ttry {\n\t\t\tlet error: Error | undefined = undefined;\n\t\t\ttry {\n\t\t\t\tawait manager.resolve(resource, { reload: { async: false } });\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\n\t\t\tassert.ok(error);\n\t\t\tassert.strictEqual(manager.workingCopies.length, 1);\n\t\t} finally {\n\t\t\taccessor.fileService.readShouldThrowError = undefined;\n\t\t}\n\t});\n\n\ttest('resolve with initial contents', async () => {\n\t\tconst resource = URI.file('/test.html');\n\n\t\tconst workingCopy = await manager.resolve(resource, { contents: bufferToStream(VSBuffer.fromString('Hello World')) });\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello World');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\tawait manager.resolve(resource, { contents: bufferToStream(VSBuffer.fromString('More Changes')) });\n\t\tassert.strictEqual(workingCopy.model?.contents, 'More Changes');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\tworkingCopy.dispose();\n\t});\n\n\ttest('multiple resolves execute in sequence (same resources)', async () => {\n\t\tconst resource = URI.file('/test.html');\n\n\t\tconst firstPromise = manager.resolve(resource);\n\t\tconst secondPromise = manager.resolve(resource, { contents: bufferToStream(VSBuffer.fromString('Hello World')) });\n\t\tconst thirdPromise = manager.resolve(resource, { contents: bufferToStream(VSBuffer.fromString('More Changes')) });\n\n\t\tawait firstPromise;\n\t\tawait secondPromise;\n\t\tconst workingCopy = await thirdPromise;\n\n\t\tassert.strictEqual(workingCopy.model?.contents, 'More Changes');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\tworkingCopy.dispose();\n\t});\n\n\ttest('multiple resolves execute in parallel (different resources)', async () => {\n\t\tconst resource1 = URI.file('/test1.html');\n\t\tconst resource2 = URI.file('/test2.html');\n\t\tconst resource3 = URI.file('/test3.html');\n\n\t\tconst firstPromise = manager.resolve(resource1);\n\t\tconst secondPromise = manager.resolve(resource2);\n\t\tconst thirdPromise = manager.resolve(resource3);\n\n\t\tconst [workingCopy1, workingCopy2, workingCopy3] = await Promise.all([firstPromise, secondPromise, thirdPromise]);\n\n\t\tassert.strictEqual(manager.workingCopies.length, 3);\n\t\tassert.strictEqual(workingCopy1.resource.toString(), resource1.toString());\n\t\tassert.strictEqual(workingCopy2.resource.toString(), resource2.toString());\n\t\tassert.strictEqual(workingCopy3.resource.toString(), resource3.toString());\n\n\t\tworkingCopy1.dispose();\n\t\tworkingCopy2.dispose();\n\t\tworkingCopy3.dispose();\n\t});\n\n\ttest('removed from cache when working copy or model gets disposed', async () => {\n\t\tconst resource = URI.file('/test.html');\n\n\t\tlet workingCopy = await manager.resolve(resource, { contents: bufferToStream(VSBuffer.fromString('Hello World')) });\n\n\t\tassert.strictEqual(manager.get(URI.file('/test.html')), workingCopy);\n\n\t\tworkingCopy.dispose();\n\t\tassert(!manager.get(URI.file('/test.html')));\n\n\t\tworkingCopy = await manager.resolve(resource, { contents: bufferToStream(VSBuffer.fromString('Hello World')) });\n\n\t\tassert.strictEqual(manager.get(URI.file('/test.html')), workingCopy);\n\n\t\tworkingCopy.model?.dispose();\n\t\tassert(!manager.get(URI.file('/test.html')));\n\t});\n\n\ttest('events', async () => {\n\t\tconst resource1 = URI.file('/path/index.txt');\n\t\tconst resource2 = URI.file('/path/other.txt');\n\n\t\tlet createdCounter = 0;\n\t\tlet resolvedCounter = 0;\n\t\tlet removedCounter = 0;\n\t\tlet gotDirtyCounter = 0;\n\t\tlet gotNonDirtyCounter = 0;\n\t\tlet revertedCounter = 0;\n\t\tlet savedCounter = 0;\n\t\tlet saveErrorCounter = 0;\n\n\t\tdisposables.add(manager.onDidCreate(() => {\n\t\t\tcreatedCounter++;\n\t\t}));\n\n\t\tdisposables.add(manager.onDidRemove(resource => {\n\t\t\tif (resource.toString() === resource1.toString() || resource.toString() === resource2.toString()) {\n\t\t\t\tremovedCounter++;\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(manager.onDidResolve(workingCopy => {\n\t\t\tif (workingCopy.resource.toString() === resource1.toString()) {\n\t\t\t\tresolvedCounter++;\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(manager.onDidChangeDirty(workingCopy => {\n\t\t\tif (workingCopy.resource.toString() === resource1.toString()) {\n\t\t\t\tif (workingCopy.isDirty()) {\n\t\t\t\t\tgotDirtyCounter++;\n\t\t\t\t} else {\n\t\t\t\t\tgotNonDirtyCounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(manager.onDidRevert(workingCopy => {\n\t\t\tif (workingCopy.resource.toString() === resource1.toString()) {\n\t\t\t\trevertedCounter++;\n\t\t\t}\n\t\t}));\n\n\t\tlet lastSaveEvent: IStoredFileWorkingCopySaveEvent<TestStoredFileWorkingCopyModel> | undefined = undefined;\n\t\tdisposables.add(manager.onDidSave((e) => {\n\t\t\tif (e.workingCopy.resource.toString() === resource1.toString()) {\n\t\t\t\tlastSaveEvent = e;\n\t\t\t\tsavedCounter++;\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(manager.onDidSaveError(workingCopy => {\n\t\t\tif (workingCopy.resource.toString() === resource1.toString()) {\n\t\t\t\tsaveErrorCounter++;\n\t\t\t}\n\t\t}));\n\n\t\tconst workingCopy1 = disposables.add(await manager.resolve(resource1));\n\t\tassert.strictEqual(resolvedCounter, 1);\n\t\tassert.strictEqual(createdCounter, 1);\n\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource: resource1, type: FileChangeType.DELETED }], false));\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource: resource1, type: FileChangeType.ADDED }], false));\n\n\t\tconst workingCopy2 = disposables.add(await manager.resolve(resource2));\n\t\tassert.strictEqual(resolvedCounter, 2);\n\t\tassert.strictEqual(createdCounter, 2);\n\n\t\tworkingCopy1.model?.updateContents('changed');\n\n\t\tawait workingCopy1.revert();\n\t\tworkingCopy1.model?.updateContents('changed again');\n\n\t\tawait workingCopy1.save();\n\n\t\ttry {\n\t\t\taccessor.fileService.writeShouldThrowError = new FileOperationError('write error', FileOperationResult.FILE_PERMISSION_DENIED);\n\n\t\t\tawait workingCopy1.save({ force: true });\n\t\t} finally {\n\t\t\taccessor.fileService.writeShouldThrowError = undefined;\n\t\t}\n\n\t\tworkingCopy1.dispose();\n\t\tworkingCopy2.dispose();\n\n\t\tawait workingCopy1.revert();\n\t\tassert.strictEqual(removedCounter, 2);\n\t\tassert.strictEqual(gotDirtyCounter, 3);\n\t\tassert.strictEqual(gotNonDirtyCounter, 2);\n\t\tassert.strictEqual(revertedCounter, 1);\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(lastSaveEvent!.workingCopy, workingCopy1);\n\t\tassert.ok(lastSaveEvent!.stat);\n\t\tassert.strictEqual(saveErrorCounter, 1);\n\t\tassert.strictEqual(createdCounter, 2);\n\n\t\tworkingCopy1.dispose();\n\t\tworkingCopy2.dispose();\n\t});\n\n\ttest('resolve registers as working copy and dispose clears', async () => {\n\t\tconst resource1 = URI.file('/test1.html');\n\t\tconst resource2 = URI.file('/test2.html');\n\t\tconst resource3 = URI.file('/test3.html');\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\n\t\tconst firstPromise = manager.resolve(resource1);\n\t\tconst secondPromise = manager.resolve(resource2);\n\t\tconst thirdPromise = manager.resolve(resource3);\n\n\t\tawait Promise.all([firstPromise, secondPromise, thirdPromise]);\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 3);\n\t\tassert.strictEqual(manager.workingCopies.length, 3);\n\n\t\tmanager.dispose();\n\n\t\tassert.strictEqual(manager.workingCopies.length, 0);\n\n\t\t// dispose does not remove from working copy service, only `destroy` should\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 3);\n\n\t\tdisposables.add(await firstPromise);\n\t\tdisposables.add(await secondPromise);\n\t\tdisposables.add(await thirdPromise);\n\t});\n\n\ttest('destroy', async () => {\n\t\tconst resource1 = URI.file('/test1.html');\n\t\tconst resource2 = URI.file('/test2.html');\n\t\tconst resource3 = URI.file('/test3.html');\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\n\t\tconst firstPromise = manager.resolve(resource1);\n\t\tconst secondPromise = manager.resolve(resource2);\n\t\tconst thirdPromise = manager.resolve(resource3);\n\n\t\tawait Promise.all([firstPromise, secondPromise, thirdPromise]);\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 3);\n\t\tassert.strictEqual(manager.workingCopies.length, 3);\n\n\t\tawait manager.destroy();\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\t\tassert.strictEqual(manager.workingCopies.length, 0);\n\t});\n\n\ttest('destroy saves dirty working copies', async () => {\n\t\tconst resource = URI.file('/path/source.txt');\n\n\t\tconst workingCopy = await manager.resolve(resource);\n\n\t\tlet saved = false;\n\t\tdisposables.add(workingCopy.onDidSave(() => {\n\t\t\tsaved = true;\n\t\t}));\n\n\t\tworkingCopy.model?.updateContents('hello create');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 1);\n\t\tassert.strictEqual(manager.workingCopies.length, 1);\n\n\t\tawait manager.destroy();\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\t\tassert.strictEqual(manager.workingCopies.length, 0);\n\n\t\tassert.strictEqual(saved, true);\n\t});\n\n\ttest('destroy falls back to using backup when save fails', async () => {\n\t\tconst resource = URI.file('/path/source.txt');\n\n\t\tconst workingCopy = await manager.resolve(resource);\n\t\tworkingCopy.model?.setThrowOnSnapshot();\n\n\t\tlet unexpectedSave = false;\n\t\tdisposables.add(workingCopy.onDidSave(() => {\n\t\t\tunexpectedSave = true;\n\t\t}));\n\n\t\tworkingCopy.model?.updateContents('hello create');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 1);\n\t\tassert.strictEqual(manager.workingCopies.length, 1);\n\n\t\tassert.strictEqual(accessor.workingCopyBackupService.resolved.has(workingCopy), true);\n\n\t\tawait manager.destroy();\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\t\tassert.strictEqual(manager.workingCopies.length, 0);\n\n\t\tassert.strictEqual(unexpectedSave, false);\n\t});\n\n\ttest('file change event triggers working copy resolve', async () => {\n\t\tconst resource = URI.file('/path/index.txt');\n\n\t\tawait manager.resolve(resource);\n\n\t\tlet didResolve = false;\n\t\tconst onDidResolve = new Promise<void>(resolve => {\n\t\t\tdisposables.add(manager.onDidResolve(({ model }) => {\n\t\t\t\tif (model?.resource.toString() === resource.toString()) {\n\t\t\t\t\tdidResolve = true;\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.UPDATED }], false));\n\n\t\tawait onDidResolve;\n\n\t\tassert.strictEqual(didResolve, true);\n\t});\n\n\ttest('file change event triggers working copy resolve (when working copy is pending to resolve)', async () => {\n\t\tconst resource = URI.file('/path/index.txt');\n\n\t\tmanager.resolve(resource);\n\n\t\tlet didResolve = false;\n\t\tlet resolvedCounter = 0;\n\t\tconst onDidResolve = new Promise<void>(resolve => {\n\t\t\tdisposables.add(manager.onDidResolve(({ model }) => {\n\t\t\t\tif (model?.resource.toString() === resource.toString()) {\n\t\t\t\t\tresolvedCounter++;\n\t\t\t\t\tif (resolvedCounter === 2) {\n\t\t\t\t\t\tdidResolve = true;\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\n\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.UPDATED }], false));\n\n\t\tawait onDidResolve;\n\n\t\tassert.strictEqual(didResolve, true);\n\t});\n\n\ttest('file system provider change triggers working copy resolve', async () => {\n\t\tconst resource = URI.file('/path/index.txt');\n\n\t\tdisposables.add(await manager.resolve(resource));\n\n\t\tlet didResolve = false;\n\t\tconst onDidResolve = new Promise<void>(resolve => {\n\t\t\tdisposables.add(manager.onDidResolve(({ model }) => {\n\t\t\t\tif (model?.resource.toString() === resource.toString()) {\n\t\t\t\t\tdidResolve = true;\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\n\t\taccessor.fileService.fireFileSystemProviderCapabilitiesChangeEvent({ provider: disposables.add(new InMemoryFileSystemProvider()), scheme: resource.scheme });\n\n\t\tawait onDidResolve;\n\n\t\tassert.strictEqual(didResolve, true);\n\t});\n\n\ttest('working copy file event handling: create', async () => {\n\t\tconst resource = URI.file('/path/source.txt');\n\n\t\tconst workingCopy = await manager.resolve(resource);\n\t\tworkingCopy.model?.updateContents('hello create');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\tawait accessor.workingCopyFileService.create([{ resource }], CancellationToken.None);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('working copy file event handling: move', () => {\n\t\treturn testMoveCopyFileWorkingCopy(true);\n\t});\n\n\ttest('working copy file event handling: copy', () => {\n\t\treturn testMoveCopyFileWorkingCopy(false);\n\t});\n\n\tasync function testMoveCopyFileWorkingCopy(move: boolean) {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/other.txt');\n\n\t\tconst sourceWorkingCopy = await manager.resolve(source);\n\t\tsourceWorkingCopy.model?.updateContents('hello move or copy');\n\t\tassert.strictEqual(sourceWorkingCopy.isDirty(), true);\n\n\t\tif (move) {\n\t\t\tawait accessor.workingCopyFileService.move([{ file: { source, target } }], CancellationToken.None);\n\t\t} else {\n\t\t\tawait accessor.workingCopyFileService.copy([{ file: { source, target } }], CancellationToken.None);\n\t\t}\n\n\t\tconst targetWorkingCopy = await manager.resolve(target);\n\t\tassert.strictEqual(targetWorkingCopy.isDirty(), true);\n\t\tassert.strictEqual(targetWorkingCopy.model?.contents, 'hello move or copy');\n\t}\n\n\ttest('working copy file event handling: delete', async () => {\n\t\tconst resource = URI.file('/path/source.txt');\n\n\t\tconst workingCopy = await manager.resolve(resource);\n\t\tworkingCopy.model?.updateContents('hello delete');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\tawait accessor.workingCopyFileService.delete([{ resource }], CancellationToken.None);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('working copy file event handling: move to same resource', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\tconst sourceWorkingCopy = await manager.resolve(source);\n\t\tsourceWorkingCopy.model?.updateContents('hello move');\n\t\tassert.strictEqual(sourceWorkingCopy.isDirty(), true);\n\n\t\tawait accessor.workingCopyFileService.move([{ file: { source, target: source } }], CancellationToken.None);\n\n\t\tassert.strictEqual(sourceWorkingCopy.isDirty(), true);\n\t\tassert.strictEqual(sourceWorkingCopy.model?.contents, 'hello move');\n\t});\n\n\ttest('canDispose with dirty working copy', async () => {\n\t\tconst resource = URI.file('/path/index_something.txt');\n\n\t\tconst workingCopy = await manager.resolve(resource);\n\t\tworkingCopy.model?.updateContents('make dirty');\n\n\t\tconst canDisposePromise = manager.canDispose(workingCopy);\n\t\tassert.ok(canDisposePromise instanceof Promise);\n\n\t\tlet canDispose = false;\n\t\t(async () => {\n\t\t\tcanDispose = await canDisposePromise;\n\t\t})();\n\n\t\tassert.strictEqual(canDispose, false);\n\t\tworkingCopy.revert({ soft: true });\n\n\t\tawait timeout(0);\n\n\t\tassert.strictEqual(canDispose, true);\n\n\t\tconst canDispose2 = manager.canDispose(workingCopy);\n\t\tassert.strictEqual(canDispose2, true);\n\t});\n\n\t(isWeb ? test.skip : test)('pending saves join on shutdown', async () => {\n\t\tconst resource1 = URI.file('/path/index_something1.txt');\n\t\tconst resource2 = URI.file('/path/index_something2.txt');\n\n\t\tconst workingCopy1 = disposables.add(await manager.resolve(resource1));\n\t\tworkingCopy1.model?.updateContents('make dirty');\n\n\t\tconst workingCopy2 = disposables.add(await manager.resolve(resource2));\n\t\tworkingCopy2.model?.updateContents('make dirty');\n\n\t\tlet saved1 = false;\n\t\tworkingCopy1.save().then(() => {\n\t\t\tsaved1 = true;\n\t\t});\n\n\t\tlet saved2 = false;\n\t\tworkingCopy2.save().then(() => {\n\t\t\tsaved2 = true;\n\t\t});\n\n\t\tconst event = new TestWillShutdownEvent();\n\t\taccessor.lifecycleService.fireWillShutdown(event);\n\n\t\tassert.ok(event.value.length > 0);\n\t\tawait Promise.all(event.value);\n\n\t\tassert.strictEqual(saved1, true);\n\t\tassert.strictEqual(saved2, true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}