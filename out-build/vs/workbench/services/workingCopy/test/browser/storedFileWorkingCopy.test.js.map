{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/workingCopy/test/browser/storedFileWorkingCopy.test.ts"],"names":[],"mappings":"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","file":"storedFileWorkingCopy.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { StoredFileWorkingCopy, StoredFileWorkingCopyState, IStoredFileWorkingCopyModel, IStoredFileWorkingCopyModelContentChangedEvent, IStoredFileWorkingCopyModelFactory, isStoredFileWorkingCopySaveEvent, IStoredFileWorkingCopySaveEvent } from 'vs/workbench/services/workingCopy/common/storedFileWorkingCopy';\nimport { bufferToStream, newWriteableBufferStream, streamToBuffer, VSBuffer, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { TestServiceAccessor, workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { basename } from 'vs/base/common/resources';\nimport { FileChangesEvent, FileChangeType, FileOperationError, FileOperationResult, IFileStatWithMetadata, IWriteFileOptions, NotModifiedSinceFileOperationError } from 'vs/platform/files/common/files';\nimport { SaveReason, SaveSourceRegistry } from 'vs/workbench/common/editor';\nimport { Promises, timeout } from 'vs/base/common/async';\nimport { consumeReadable, consumeStream, isReadableStream } from 'vs/base/common/stream';\nimport { runWithFakedTimers } from 'vs/base/test/common/timeTravelScheduler';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nexport class TestStoredFileWorkingCopyModel extends Disposable implements IStoredFileWorkingCopyModel {\n\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<IStoredFileWorkingCopyModelContentChangedEvent>());\n\treadonly onDidChangeContent = this._onDidChangeContent.event;\n\n\tprivate readonly _onWillDispose = this._register(new Emitter<void>());\n\treadonly onWillDispose = this._onWillDispose.event;\n\n\tconstructor(readonly resource: URI, public contents: string) {\n\t\tsuper();\n\t}\n\n\tfireContentChangeEvent(event: IStoredFileWorkingCopyModelContentChangedEvent): void {\n\t\tthis._onDidChangeContent.fire(event);\n\t}\n\n\tupdateContents(newContents: string): void {\n\t\tthis.doUpdate(newContents);\n\t}\n\n\tprivate throwOnSnapshot = false;\n\tsetThrowOnSnapshot(): void {\n\t\tthis.throwOnSnapshot = true;\n\t}\n\n\tasync snapshot(token: CancellationToken): Promise<VSBufferReadableStream> {\n\t\tif (this.throwOnSnapshot) {\n\t\t\tthrow new Error('Fail');\n\t\t}\n\n\t\tconst stream = newWriteableBufferStream();\n\t\tstream.end(VSBuffer.fromString(this.contents));\n\n\t\treturn stream;\n\t}\n\n\tasync update(contents: VSBufferReadableStream, token: CancellationToken): Promise<void> {\n\t\tthis.doUpdate((await streamToBuffer(contents)).toString());\n\t}\n\n\tprivate doUpdate(newContents: string): void {\n\t\tthis.contents = newContents;\n\n\t\tthis.versionId++;\n\n\t\tthis._onDidChangeContent.fire({ isRedoing: false, isUndoing: false });\n\t}\n\n\tversionId = 0;\n\n\tpushedStackElement = false;\n\n\tpushStackElement(): void {\n\t\tthis.pushedStackElement = true;\n\t}\n\n\toverride dispose(): void {\n\t\tthis._onWillDispose.fire();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class TestStoredFileWorkingCopyModelWithCustomSave extends TestStoredFileWorkingCopyModel {\n\n\tsaveCounter = 0;\n\tthrowOnSave = false;\n\n\tasync save(options: IWriteFileOptions, token: CancellationToken): Promise<IFileStatWithMetadata> {\n\t\tif (this.throwOnSave) {\n\t\t\tthrow new Error('Fail');\n\t\t}\n\n\t\tthis.saveCounter++;\n\n\t\treturn {\n\t\t\tresource: this.resource,\n\t\t\tctime: 0,\n\t\t\tetag: '',\n\t\t\tisDirectory: false,\n\t\t\tisFile: true,\n\t\t\tmtime: 0,\n\t\t\tname: 'resource2',\n\t\t\tsize: 0,\n\t\t\tisSymbolicLink: false,\n\t\t\treadonly: false,\n\t\t\tlocked: false,\n\t\t\tchildren: undefined\n\t\t};\n\t}\n}\n\nexport class TestStoredFileWorkingCopyModelFactory implements IStoredFileWorkingCopyModelFactory<TestStoredFileWorkingCopyModel> {\n\n\tasync createModel(resource: URI, contents: VSBufferReadableStream, token: CancellationToken): Promise<TestStoredFileWorkingCopyModel> {\n\t\treturn new TestStoredFileWorkingCopyModel(resource, (await streamToBuffer(contents)).toString());\n\t}\n}\n\nexport class TestStoredFileWorkingCopyModelWithCustomSaveFactory implements IStoredFileWorkingCopyModelFactory<TestStoredFileWorkingCopyModelWithCustomSave> {\n\n\tasync createModel(resource: URI, contents: VSBufferReadableStream, token: CancellationToken): Promise<TestStoredFileWorkingCopyModelWithCustomSave> {\n\t\treturn new TestStoredFileWorkingCopyModelWithCustomSave(resource, (await streamToBuffer(contents)).toString());\n\t}\n}\n\nsuite('StoredFileWorkingCopy (with custom save)', function () {\n\n\tconst factory = new TestStoredFileWorkingCopyModelWithCustomSaveFactory();\n\n\tconst disposables = new DisposableStore();\n\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\tlet workingCopy: StoredFileWorkingCopy<TestStoredFileWorkingCopyModelWithCustomSave>;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tconst resource = URI.file('test/resource');\n\t\tworkingCopy = disposables.add(new StoredFileWorkingCopy<TestStoredFileWorkingCopyModelWithCustomSave>('testStoredFileWorkingCopyType', resource, basename(resource), factory, options => workingCopy.resolve(options), accessor.fileService, accessor.logService, accessor.workingCopyFileService, accessor.filesConfigurationService, accessor.workingCopyBackupService, accessor.workingCopyService, accessor.notificationService, accessor.workingCopyEditorService, accessor.editorService, accessor.elevatedFileService));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('save (custom implemented)', async () => {\n\t\tlet savedCounter = 0;\n\t\tlet lastSaveEvent: IStoredFileWorkingCopySaveEvent | undefined = undefined;\n\t\tdisposables.add(workingCopy.onDidSave(e => {\n\t\t\tsavedCounter++;\n\t\t\tlastSaveEvent = e;\n\t\t}));\n\n\t\tlet saveErrorCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSaveError(() => {\n\t\t\tsaveErrorCounter++;\n\t\t}));\n\n\t\t// unresolved\n\t\tawait workingCopy.save();\n\t\tassert.strictEqual(savedCounter, 0);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\n\t\t// simple\n\t\tawait workingCopy.resolve();\n\t\tworkingCopy.model?.updateContents('hello save');\n\t\tawait workingCopy.save();\n\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(lastSaveEvent!.reason, SaveReason.EXPLICIT);\n\t\tassert.ok(lastSaveEvent!.stat);\n\t\tassert.ok(isStoredFileWorkingCopySaveEvent(lastSaveEvent!));\n\t\tassert.strictEqual(workingCopy.model?.pushedStackElement, true);\n\t\tassert.strictEqual((workingCopy.model as TestStoredFileWorkingCopyModelWithCustomSave).saveCounter, 1);\n\n\t\t// error\n\t\tworkingCopy.model?.updateContents('hello save error');\n\t\t(workingCopy.model as TestStoredFileWorkingCopyModelWithCustomSave).throwOnSave = true;\n\t\tawait workingCopy.save();\n\n\t\tassert.strictEqual(saveErrorCounter, 1);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ERROR), true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n\nsuite('StoredFileWorkingCopy', function () {\n\n\tconst factory = new TestStoredFileWorkingCopyModelFactory();\n\n\tconst disposables = new DisposableStore();\n\tconst resource = URI.file('test/resource');\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\tlet workingCopy: StoredFileWorkingCopy<TestStoredFileWorkingCopyModel>;\n\n\tfunction createWorkingCopy(uri: URI = resource) {\n\t\tconst workingCopy: StoredFileWorkingCopy<TestStoredFileWorkingCopyModel> = new StoredFileWorkingCopy<TestStoredFileWorkingCopyModel>('testStoredFileWorkingCopyType', uri, basename(uri), factory, options => workingCopy.resolve(options), accessor.fileService, accessor.logService, accessor.workingCopyFileService, accessor.filesConfigurationService, accessor.workingCopyBackupService, accessor.workingCopyService, accessor.notificationService, accessor.workingCopyEditorService, accessor.editorService, accessor.elevatedFileService);\n\n\t\treturn workingCopy;\n\t}\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tworkingCopy = disposables.add(createWorkingCopy());\n\t});\n\n\tteardown(() => {\n\t\tworkingCopy.dispose();\n\n\t\tfor (const workingCopy of accessor.workingCopyService.workingCopies) {\n\t\t\t(workingCopy as StoredFileWorkingCopy<TestStoredFileWorkingCopyModel>).dispose();\n\t\t}\n\n\t\tdisposables.clear();\n\t});\n\n\ttest('registers with working copy service', async () => {\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 1);\n\n\t\tworkingCopy.dispose();\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\t});\n\n\ttest('orphaned tracking', async () => {\n\t\treturn runWithFakedTimers({}, async () => {\n\t\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ORPHAN), false);\n\n\t\t\tlet onDidChangeOrphanedPromise = Event.toPromise(workingCopy.onDidChangeOrphaned);\n\t\t\taccessor.fileService.notExistsSet.set(resource, true);\n\t\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.DELETED }], false));\n\n\t\t\tawait onDidChangeOrphanedPromise;\n\t\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ORPHAN), true);\n\n\t\t\tonDidChangeOrphanedPromise = Event.toPromise(workingCopy.onDidChangeOrphaned);\n\t\t\taccessor.fileService.notExistsSet.delete(resource);\n\t\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.ADDED }], false));\n\n\t\t\tawait onDidChangeOrphanedPromise;\n\t\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ORPHAN), false);\n\t\t});\n\t});\n\n\ttest('dirty / modified', async () => {\n\t\tassert.strictEqual(workingCopy.isModified(), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.DIRTY), false);\n\n\t\tawait workingCopy.resolve();\n\t\tassert.strictEqual(workingCopy.isResolved(), true);\n\n\t\tlet changeDirtyCounter = 0;\n\t\tdisposables.add(workingCopy.onDidChangeDirty(() => {\n\t\t\tchangeDirtyCounter++;\n\t\t}));\n\n\t\tlet contentChangeCounter = 0;\n\t\tdisposables.add(workingCopy.onDidChangeContent(() => {\n\t\t\tcontentChangeCounter++;\n\t\t}));\n\n\t\tlet savedCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSave(() => {\n\t\t\tsavedCounter++;\n\t\t}));\n\n\t\t// Dirty from: Model content change\n\t\tworkingCopy.model?.updateContents('hello dirty');\n\t\tassert.strictEqual(contentChangeCounter, 1);\n\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.DIRTY), true);\n\t\tassert.strictEqual(changeDirtyCounter, 1);\n\n\t\tawait workingCopy.save();\n\n\t\tassert.strictEqual(workingCopy.isModified(), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.DIRTY), false);\n\t\tassert.strictEqual(changeDirtyCounter, 2);\n\t\tassert.strictEqual(savedCounter, 1);\n\n\t\t// Dirty from: Initial contents\n\t\tawait workingCopy.resolve({ contents: bufferToStream(VSBuffer.fromString('hello dirty stream')) });\n\n\t\tassert.strictEqual(contentChangeCounter, 2); // content of model did not change\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.DIRTY), true);\n\t\tassert.strictEqual(changeDirtyCounter, 3);\n\n\t\tawait workingCopy.revert({ soft: true });\n\n\t\tassert.strictEqual(workingCopy.isModified(), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.DIRTY), false);\n\t\tassert.strictEqual(changeDirtyCounter, 4);\n\n\t\t// Modified from: API\n\t\tworkingCopy.markModified();\n\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.DIRTY), true);\n\t\tassert.strictEqual(changeDirtyCounter, 5);\n\n\t\tawait workingCopy.revert();\n\n\t\tassert.strictEqual(workingCopy.isModified(), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.DIRTY), false);\n\t\tassert.strictEqual(changeDirtyCounter, 6);\n\t});\n\n\ttest('dirty - working copy marks non-dirty when undo reaches saved version ID', async () => {\n\t\tawait workingCopy.resolve();\n\n\t\tworkingCopy.model?.updateContents('hello saved state');\n\t\tawait workingCopy.save();\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\n\t\tworkingCopy.model?.updateContents('changing content once');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\t// Simulate an undo that goes back to the last (saved) version ID\n\t\tworkingCopy.model!.versionId--;\n\n\t\tworkingCopy.model?.fireContentChangeEvent({ isRedoing: false, isUndoing: true });\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('resolve (without backup)', async () => {\n\t\tlet onDidResolveCounter = 0;\n\t\tdisposables.add(workingCopy.onDidResolve(() => {\n\t\t\tonDidResolveCounter++;\n\t\t}));\n\n\t\t// resolve from file\n\t\tawait workingCopy.resolve();\n\t\tassert.strictEqual(workingCopy.isResolved(), true);\n\t\tassert.strictEqual(onDidResolveCounter, 1);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello Html');\n\n\t\t// dirty resolve returns early\n\t\tworkingCopy.model?.updateContents('hello resolve');\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tawait workingCopy.resolve();\n\t\tassert.strictEqual(onDidResolveCounter, 1);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'hello resolve');\n\n\t\t// dirty resolve with contents updates contents\n\t\tawait workingCopy.resolve({ contents: bufferToStream(VSBuffer.fromString('hello initial contents')) });\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'hello initial contents');\n\t\tassert.strictEqual(onDidResolveCounter, 2);\n\n\t\t// resolve with pending save returns directly\n\t\tconst pendingSave = workingCopy.save();\n\t\tawait workingCopy.resolve();\n\t\tawait pendingSave;\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'hello initial contents');\n\t\tassert.strictEqual(onDidResolveCounter, 2);\n\n\t\t// disposed resolve is not throwing an error\n\t\tworkingCopy.dispose();\n\t\tawait workingCopy.resolve();\n\t\tassert.strictEqual(workingCopy.isDisposed(), true);\n\t\tassert.strictEqual(onDidResolveCounter, 2);\n\t});\n\n\ttest('resolve (with backup)', async () => {\n\t\tawait workingCopy.resolve({ contents: bufferToStream(VSBuffer.fromString('hello backup')) });\n\n\t\tconst backup = await workingCopy.backup(CancellationToken.None);\n\t\tawait accessor.workingCopyBackupService.backup(workingCopy, backup.content, undefined, backup.meta);\n\n\t\tassert.strictEqual(accessor.workingCopyBackupService.hasBackupSync(workingCopy), true);\n\n\t\tworkingCopy.dispose();\n\n\t\t// first resolve loads from backup\n\t\tworkingCopy = createWorkingCopy();\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tassert.strictEqual(workingCopy.isReadonly(), false);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'hello backup');\n\n\t\tworkingCopy.model.updateContents('hello updated');\n\t\tawait workingCopy.save();\n\n\t\t// subsequent resolve ignores any backups\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello Html');\n\t});\n\n\ttest('resolve (with backup, preserves metadata and orphaned state)', async () => {\n\t\treturn runWithFakedTimers({}, async () => {\n\t\t\tawait workingCopy.resolve({ contents: bufferToStream(VSBuffer.fromString('hello backup')) });\n\n\t\t\tconst orphanedPromise = Event.toPromise(workingCopy.onDidChangeOrphaned);\n\n\t\t\taccessor.fileService.notExistsSet.set(resource, true);\n\t\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.DELETED }], false));\n\n\t\t\tawait orphanedPromise;\n\t\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ORPHAN), true);\n\n\t\t\tconst backup = await workingCopy.backup(CancellationToken.None);\n\t\t\tawait accessor.workingCopyBackupService.backup(workingCopy, backup.content, undefined, backup.meta);\n\n\t\t\tassert.strictEqual(accessor.workingCopyBackupService.hasBackupSync(workingCopy), true);\n\n\t\t\tworkingCopy.dispose();\n\n\t\t\tworkingCopy = createWorkingCopy();\n\t\t\tawait workingCopy.resolve();\n\n\t\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ORPHAN), true);\n\n\t\t\tconst backup2 = await workingCopy.backup(CancellationToken.None);\n\t\t\tassert.deepStrictEqual(backup.meta, backup2.meta);\n\t\t});\n\t});\n\n\ttest('resolve (updates orphaned state accordingly)', async () => {\n\t\treturn runWithFakedTimers({}, async () => {\n\t\t\tawait workingCopy.resolve();\n\n\t\t\tconst orphanedPromise = Event.toPromise(workingCopy.onDidChangeOrphaned);\n\n\t\t\taccessor.fileService.notExistsSet.set(resource, true);\n\t\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.DELETED }], false));\n\n\t\t\tawait orphanedPromise;\n\t\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ORPHAN), true);\n\n\t\t\t// resolving clears orphaned state when successful\n\t\t\taccessor.fileService.notExistsSet.delete(resource);\n\t\t\tawait workingCopy.resolve({ forceReadFromFile: true });\n\t\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ORPHAN), false);\n\n\t\t\t// resolving adds orphaned state when fail to read\n\t\t\ttry {\n\t\t\t\taccessor.fileService.readShouldThrowError = new FileOperationError('file not found', FileOperationResult.FILE_NOT_FOUND);\n\t\t\t\tawait workingCopy.resolve();\n\t\t\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ORPHAN), true);\n\t\t\t} finally {\n\t\t\t\taccessor.fileService.readShouldThrowError = undefined;\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('resolve (FILE_NOT_MODIFIED_SINCE can be handled for resolved working copies)', async () => {\n\t\tawait workingCopy.resolve();\n\n\t\ttry {\n\t\t\taccessor.fileService.readShouldThrowError = new FileOperationError('file not modified since', FileOperationResult.FILE_NOT_MODIFIED_SINCE);\n\t\t\tawait workingCopy.resolve();\n\t\t} finally {\n\t\t\taccessor.fileService.readShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello Html');\n\t});\n\n\ttest('resolve (FILE_NOT_MODIFIED_SINCE still updates readonly state)', async () => {\n\t\tlet readonlyChangeCounter = 0;\n\t\tdisposables.add(workingCopy.onDidChangeReadonly(() => readonlyChangeCounter++));\n\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(workingCopy.isReadonly(), false);\n\n\t\tconst stat = await accessor.fileService.resolve(workingCopy.resource, { resolveMetadata: true });\n\n\t\ttry {\n\t\t\taccessor.fileService.readShouldThrowError = new NotModifiedSinceFileOperationError('file not modified since', { ...stat, readonly: true });\n\t\t\tawait workingCopy.resolve();\n\t\t} finally {\n\t\t\taccessor.fileService.readShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.strictEqual(!!workingCopy.isReadonly(), true);\n\t\tassert.strictEqual(readonlyChangeCounter, 1);\n\n\t\ttry {\n\t\t\taccessor.fileService.readShouldThrowError = new NotModifiedSinceFileOperationError('file not modified since', { ...stat, readonly: false });\n\t\t\tawait workingCopy.resolve();\n\t\t} finally {\n\t\t\taccessor.fileService.readShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.strictEqual(workingCopy.isReadonly(), false);\n\t\tassert.strictEqual(readonlyChangeCounter, 2);\n\t});\n\n\ttest('resolve does not alter content when model content changed in parallel', async () => {\n\t\tawait workingCopy.resolve();\n\n\t\tconst resolvePromise = workingCopy.resolve();\n\n\t\tworkingCopy.model?.updateContents('changed content');\n\n\t\tawait resolvePromise;\n\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'changed content');\n\t});\n\n\ttest('backup', async () => {\n\t\tawait workingCopy.resolve();\n\t\tworkingCopy.model?.updateContents('hello backup');\n\n\t\tconst backup = await workingCopy.backup(CancellationToken.None);\n\n\t\tassert.ok(backup.meta);\n\n\t\tlet backupContents: string | undefined = undefined;\n\t\tif (backup.content instanceof VSBuffer) {\n\t\t\tbackupContents = backup.content.toString();\n\t\t} else if (isReadableStream(backup.content)) {\n\t\t\tbackupContents = (await consumeStream(backup.content, chunks => VSBuffer.concat(chunks))).toString();\n\t\t} else if (backup.content) {\n\t\t\tbackupContents = consumeReadable(backup.content, chunks => VSBuffer.concat(chunks)).toString();\n\t\t}\n\n\t\tassert.strictEqual(backupContents, 'hello backup');\n\t});\n\n\ttest('save (no errors) - simple', async () => {\n\t\tlet savedCounter = 0;\n\t\tlet lastSaveEvent: IStoredFileWorkingCopySaveEvent | undefined = undefined;\n\t\tdisposables.add(workingCopy.onDidSave(e => {\n\t\t\tsavedCounter++;\n\t\t\tlastSaveEvent = e;\n\t\t}));\n\n\t\tlet saveErrorCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSaveError(() => {\n\t\t\tsaveErrorCounter++;\n\t\t}));\n\n\t\t// unresolved\n\t\tawait workingCopy.save();\n\t\tassert.strictEqual(savedCounter, 0);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\n\t\t// simple\n\t\tawait workingCopy.resolve();\n\t\tworkingCopy.model?.updateContents('hello save');\n\t\tawait workingCopy.save();\n\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(lastSaveEvent!.reason, SaveReason.EXPLICIT);\n\t\tassert.ok(lastSaveEvent!.stat);\n\t\tassert.ok(isStoredFileWorkingCopySaveEvent(lastSaveEvent!));\n\t\tassert.strictEqual(workingCopy.model?.pushedStackElement, true);\n\t});\n\n\ttest('save (no errors) - save reason', async () => {\n\t\tlet savedCounter = 0;\n\t\tlet lastSaveEvent: IStoredFileWorkingCopySaveEvent | undefined = undefined;\n\t\tdisposables.add(workingCopy.onDidSave(e => {\n\t\t\tsavedCounter++;\n\t\t\tlastSaveEvent = e;\n\t\t}));\n\n\t\tlet saveErrorCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSaveError(() => {\n\t\t\tsaveErrorCounter++;\n\t\t}));\n\n\t\t// save reason\n\t\tawait workingCopy.resolve();\n\t\tworkingCopy.model?.updateContents('hello save');\n\n\t\tconst source = SaveSourceRegistry.registerSource('testSource', 'Hello Save');\n\t\tawait workingCopy.save({ reason: SaveReason.AUTO, source });\n\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual((lastSaveEvent! as IStoredFileWorkingCopySaveEvent).reason, SaveReason.AUTO);\n\t\tassert.strictEqual((lastSaveEvent! as IStoredFileWorkingCopySaveEvent).source, source);\n\t});\n\n\ttest('save (no errors) - multiple', async () => {\n\t\tlet savedCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSave(e => {\n\t\t\tsavedCounter++;\n\t\t}));\n\n\t\tlet saveErrorCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSaveError(() => {\n\t\t\tsaveErrorCounter++;\n\t\t}));\n\n\t\t// multiple saves in parallel are fine and result\n\t\t// in a single save when content does not change\n\t\tawait workingCopy.resolve();\n\t\tworkingCopy.model?.updateContents('hello save');\n\t\tawait Promises.settled([\n\t\t\tworkingCopy.save({ reason: SaveReason.AUTO }),\n\t\t\tworkingCopy.save({ reason: SaveReason.EXPLICIT }),\n\t\t\tworkingCopy.save({ reason: SaveReason.WINDOW_CHANGE })\n\t\t]);\n\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('save (no errors) - multiple, cancellation', async () => {\n\t\tlet savedCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSave(e => {\n\t\t\tsavedCounter++;\n\t\t}));\n\n\t\tlet saveErrorCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSaveError(() => {\n\t\t\tsaveErrorCounter++;\n\t\t}));\n\n\t\t// multiple saves in parallel are fine and result\n\t\t// in just one save operation (the second one\n\t\t// cancels the first)\n\t\tawait workingCopy.resolve();\n\t\tworkingCopy.model?.updateContents('hello save');\n\t\tconst firstSave = workingCopy.save();\n\t\tworkingCopy.model?.updateContents('hello save more');\n\t\tconst secondSave = workingCopy.save();\n\n\t\tawait Promises.settled([firstSave, secondSave]);\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('save (no errors) - not forced but not dirty', async () => {\n\t\tlet savedCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSave(e => {\n\t\t\tsavedCounter++;\n\t\t}));\n\n\t\tlet saveErrorCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSaveError(() => {\n\t\t\tsaveErrorCounter++;\n\t\t}));\n\n\t\t// no save when not forced and not dirty\n\t\tawait workingCopy.resolve();\n\t\tawait workingCopy.save();\n\t\tassert.strictEqual(savedCounter, 0);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('save (no errors) - forced but not dirty', async () => {\n\t\tlet savedCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSave(e => {\n\t\t\tsavedCounter++;\n\t\t}));\n\n\t\tlet saveErrorCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSaveError(() => {\n\t\t\tsaveErrorCounter++;\n\t\t}));\n\n\t\t// save when forced even when not dirty\n\t\tawait workingCopy.resolve();\n\t\tawait workingCopy.save({ force: true });\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('save (no errors) - save clears orphaned', async () => {\n\t\treturn runWithFakedTimers({}, async () => {\n\t\t\tlet savedCounter = 0;\n\t\t\tdisposables.add(workingCopy.onDidSave(e => {\n\t\t\t\tsavedCounter++;\n\t\t\t}));\n\n\t\t\tlet saveErrorCounter = 0;\n\t\t\tdisposables.add(workingCopy.onDidSaveError(() => {\n\t\t\t\tsaveErrorCounter++;\n\t\t\t}));\n\n\t\t\tawait workingCopy.resolve();\n\n\t\t\t// save clears orphaned\n\t\t\tconst orphanedPromise = Event.toPromise(workingCopy.onDidChangeOrphaned);\n\n\t\t\taccessor.fileService.notExistsSet.set(resource, true);\n\t\t\taccessor.fileService.fireFileChanges(new FileChangesEvent([{ resource, type: FileChangeType.DELETED }], false));\n\n\t\t\tawait orphanedPromise;\n\t\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ORPHAN), true);\n\n\t\t\tawait workingCopy.save({ force: true });\n\t\t\tassert.strictEqual(savedCounter, 1);\n\t\t\tassert.strictEqual(saveErrorCounter, 0);\n\t\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ORPHAN), false);\n\t\t});\n\t});\n\n\ttest('save (errors)', async () => {\n\t\tlet savedCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSave(reason => {\n\t\t\tsavedCounter++;\n\t\t}));\n\n\t\tlet saveErrorCounter = 0;\n\t\tdisposables.add(workingCopy.onDidSaveError(() => {\n\t\t\tsaveErrorCounter++;\n\t\t}));\n\n\t\tawait workingCopy.resolve();\n\n\t\t// save error: any error marks working copy dirty\n\t\ttry {\n\t\t\taccessor.fileService.writeShouldThrowError = new FileOperationError('write error', FileOperationResult.FILE_PERMISSION_DENIED);\n\n\t\t\tawait workingCopy.save({ force: true });\n\t\t} finally {\n\t\t\taccessor.fileService.writeShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.strictEqual(savedCounter, 0);\n\t\tassert.strictEqual(saveErrorCounter, 1);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ERROR), true);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.SAVED), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.PENDING_SAVE), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.CONFLICT), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\t// save is a no-op unless forced when in error case\n\t\tawait workingCopy.save({ reason: SaveReason.AUTO });\n\t\tassert.strictEqual(savedCounter, 0);\n\t\tassert.strictEqual(saveErrorCounter, 1);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ERROR), true);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.SAVED), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.PENDING_SAVE), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.CONFLICT), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\t// save clears error flags when successful\n\t\tawait workingCopy.save({ reason: SaveReason.EXPLICIT });\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(saveErrorCounter, 1);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ERROR), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.SAVED), true);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.PENDING_SAVE), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.CONFLICT), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\n\t\t// save error: conflict\n\t\ttry {\n\t\t\taccessor.fileService.writeShouldThrowError = new FileOperationError('write error conflict', FileOperationResult.FILE_MODIFIED_SINCE);\n\n\t\t\tawait workingCopy.save({ force: true });\n\t\t} catch (error) {\n\t\t\t// error is expected\n\t\t} finally {\n\t\t\taccessor.fileService.writeShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.strictEqual(savedCounter, 1);\n\t\tassert.strictEqual(saveErrorCounter, 2);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ERROR), true);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.SAVED), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.PENDING_SAVE), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.CONFLICT), true);\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\t// save clears error flags when successful\n\t\tawait workingCopy.save({ reason: SaveReason.EXPLICIT });\n\t\tassert.strictEqual(savedCounter, 2);\n\t\tassert.strictEqual(saveErrorCounter, 2);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.ERROR), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.SAVED), true);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.PENDING_SAVE), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.CONFLICT), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('save (errors, bubbles up with `ignoreErrorHandler`)', async () => {\n\t\tawait workingCopy.resolve();\n\n\t\tlet error: Error | undefined = undefined;\n\t\ttry {\n\t\t\taccessor.fileService.writeShouldThrowError = new FileOperationError('write error', FileOperationResult.FILE_PERMISSION_DENIED);\n\n\t\t\tawait workingCopy.save({ force: true, ignoreErrorHandler: true });\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t} finally {\n\t\t\taccessor.fileService.writeShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.ok(error);\n\t});\n\n\ttest('save - returns false when save fails', async function () {\n\t\tawait workingCopy.resolve();\n\n\t\ttry {\n\t\t\taccessor.fileService.writeShouldThrowError = new FileOperationError('write error', FileOperationResult.FILE_PERMISSION_DENIED);\n\n\t\t\tconst res = await workingCopy.save({ force: true });\n\t\t\tassert.strictEqual(res, false);\n\t\t} finally {\n\t\t\taccessor.fileService.writeShouldThrowError = undefined;\n\t\t}\n\n\t\tconst res = await workingCopy.save({ force: true });\n\t\tassert.strictEqual(res, true);\n\t});\n\n\ttest('save participant', async () => {\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(accessor.workingCopyFileService.hasSaveParticipants, false);\n\n\t\tlet participationCounter = 0;\n\t\tconst disposable = accessor.workingCopyFileService.addSaveParticipant({\n\t\t\tparticipate: async (wc) => {\n\t\t\t\tif (workingCopy === wc) {\n\t\t\t\t\tparticipationCounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tassert.strictEqual(accessor.workingCopyFileService.hasSaveParticipants, true);\n\n\t\tawait workingCopy.save({ force: true });\n\t\tassert.strictEqual(participationCounter, 1);\n\n\t\tawait workingCopy.save({ force: true, skipSaveParticipants: true });\n\t\tassert.strictEqual(participationCounter, 1);\n\n\t\tdisposable.dispose();\n\t\tassert.strictEqual(accessor.workingCopyFileService.hasSaveParticipants, false);\n\n\t\tawait workingCopy.save({ force: true });\n\t\tassert.strictEqual(participationCounter, 1);\n\t});\n\n\ttest('Save Participant, calling save from within is unsupported but does not explode (sync save)', async function () {\n\t\tawait workingCopy.resolve();\n\n\t\tawait testSaveFromSaveParticipant(workingCopy, false);\n\t});\n\n\ttest('Save Participant, calling save from within is unsupported but does not explode (async save)', async function () {\n\t\tawait workingCopy.resolve();\n\n\t\tawait testSaveFromSaveParticipant(workingCopy, true);\n\t});\n\n\tasync function testSaveFromSaveParticipant(workingCopy: StoredFileWorkingCopy<TestStoredFileWorkingCopyModel>, async: boolean): Promise<void> {\n\n\t\tassert.strictEqual(accessor.workingCopyFileService.hasSaveParticipants, false);\n\n\t\tconst disposable = accessor.workingCopyFileService.addSaveParticipant({\n\t\t\tparticipate: async () => {\n\t\t\t\tif (async) {\n\t\t\t\t\tawait timeout(10);\n\t\t\t\t}\n\n\t\t\t\tawait workingCopy.save({ force: true });\n\t\t\t}\n\t\t});\n\n\t\tassert.strictEqual(accessor.workingCopyFileService.hasSaveParticipants, true);\n\n\t\tawait workingCopy.save({ force: true });\n\n\t\tdisposable.dispose();\n\t}\n\n\ttest('revert', async () => {\n\t\tawait workingCopy.resolve();\n\t\tworkingCopy.model?.updateContents('hello revert');\n\n\t\tlet revertedCounter = 0;\n\t\tdisposables.add(workingCopy.onDidRevert(() => {\n\t\t\trevertedCounter++;\n\t\t}));\n\n\t\t// revert: soft\n\t\tawait workingCopy.revert({ soft: true });\n\n\t\tassert.strictEqual(revertedCounter, 1);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'hello revert');\n\n\t\t// revert: not forced\n\t\tawait workingCopy.revert();\n\t\tassert.strictEqual(revertedCounter, 1);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'hello revert');\n\n\t\t// revert: forced\n\t\tawait workingCopy.revert({ force: true });\n\t\tassert.strictEqual(revertedCounter, 2);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello Html');\n\n\t\t// revert: forced, error\n\t\ttry {\n\t\t\tworkingCopy.model?.updateContents('hello revert');\n\t\t\taccessor.fileService.readShouldThrowError = new FileOperationError('error', FileOperationResult.FILE_PERMISSION_DENIED);\n\n\t\t\tawait workingCopy.revert({ force: true });\n\t\t} catch (error) {\n\t\t\t// expected (our error)\n\t\t} finally {\n\t\t\taccessor.fileService.readShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.strictEqual(revertedCounter, 2);\n\t\tassert.strictEqual(workingCopy.isDirty(), true);\n\n\t\t// revert: forced, file not found error is ignored\n\t\ttry {\n\t\t\tworkingCopy.model?.updateContents('hello revert');\n\t\t\taccessor.fileService.readShouldThrowError = new FileOperationError('error', FileOperationResult.FILE_NOT_FOUND);\n\n\t\t\tawait workingCopy.revert({ force: true });\n\t\t} catch (error) {\n\t\t\t// expected (our error)\n\t\t} finally {\n\t\t\taccessor.fileService.readShouldThrowError = undefined;\n\t\t}\n\n\t\tassert.strictEqual(revertedCounter, 3);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t});\n\n\ttest('state', async () => {\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.SAVED), true);\n\n\t\tawait workingCopy.resolve({ contents: bufferToStream(VSBuffer.fromString('hello state')) });\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.DIRTY), true);\n\n\t\tconst savePromise = workingCopy.save();\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.DIRTY), true);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.SAVED), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.PENDING_SAVE), true);\n\n\t\tawait savePromise;\n\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.DIRTY), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.SAVED), true);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.PENDING_SAVE), false);\n\t});\n\n\ttest('joinState', async () => {\n\t\tawait workingCopy.resolve({ contents: bufferToStream(VSBuffer.fromString('hello state')) });\n\n\t\tworkingCopy.save();\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.PENDING_SAVE), true);\n\n\t\tawait workingCopy.joinState(StoredFileWorkingCopyState.PENDING_SAVE);\n\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.DIRTY), false);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.SAVED), true);\n\t\tassert.strictEqual(workingCopy.hasState(StoredFileWorkingCopyState.PENDING_SAVE), false);\n\t});\n\n\ttest('isReadonly, isResolved, dispose, isDisposed', async () => {\n\t\tassert.strictEqual(workingCopy.isResolved(), false);\n\t\tassert.strictEqual(workingCopy.isReadonly(), false);\n\t\tassert.strictEqual(workingCopy.isDisposed(), false);\n\n\t\tawait workingCopy.resolve();\n\n\t\tassert.ok(workingCopy.model);\n\t\tassert.strictEqual(workingCopy.isResolved(), true);\n\t\tassert.strictEqual(workingCopy.isReadonly(), false);\n\t\tassert.strictEqual(workingCopy.isDisposed(), false);\n\n\t\tlet disposedEvent = false;\n\t\tdisposables.add(workingCopy.onWillDispose(() => {\n\t\t\tdisposedEvent = true;\n\t\t}));\n\n\t\tlet disposedModelEvent = false;\n\t\tdisposables.add(workingCopy.model.onWillDispose(() => {\n\t\t\tdisposedModelEvent = true;\n\t\t}));\n\n\t\tworkingCopy.dispose();\n\n\t\tassert.strictEqual(workingCopy.isDisposed(), true);\n\t\tassert.strictEqual(disposedEvent, true);\n\t\tassert.strictEqual(disposedModelEvent, true);\n\t});\n\n\ttest('readonly change event', async () => {\n\t\taccessor.fileService.readonly = true;\n\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(!!workingCopy.isReadonly(), true);\n\n\t\taccessor.fileService.readonly = false;\n\n\t\tlet readonlyEvent = false;\n\t\tdisposables.add(workingCopy.onDidChangeReadonly(() => {\n\t\t\treadonlyEvent = true;\n\t\t}));\n\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(workingCopy.isReadonly(), false);\n\t\tassert.strictEqual(readonlyEvent, true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}