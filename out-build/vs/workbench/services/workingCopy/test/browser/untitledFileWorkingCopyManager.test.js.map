{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/workingCopy/test/browser/untitledFileWorkingCopyManager.test.ts"],"names":[],"mappings":"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","file":"untitledFileWorkingCopyManager.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { bufferToStream, VSBuffer } from 'vs/base/common/buffer';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { FileWorkingCopyManager, IFileWorkingCopyManager } from 'vs/workbench/services/workingCopy/common/fileWorkingCopyManager';\nimport { NO_TYPE_ID, WorkingCopyCapabilities } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { TestStoredFileWorkingCopyModel, TestStoredFileWorkingCopyModelFactory } from 'vs/workbench/services/workingCopy/test/browser/storedFileWorkingCopy.test';\nimport { TestUntitledFileWorkingCopyModel, TestUntitledFileWorkingCopyModelFactory } from 'vs/workbench/services/workingCopy/test/browser/untitledFileWorkingCopy.test';\nimport { TestInMemoryFileSystemProvider, TestServiceAccessor, workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\n\nsuite('UntitledFileWorkingCopyManager', () => {\n\n\tconst disposables = new DisposableStore();\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tlet manager: IFileWorkingCopyManager<TestStoredFileWorkingCopyModel, TestUntitledFileWorkingCopyModel>;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tdisposables.add(accessor.fileService.registerProvider(Schemas.file, disposables.add(new TestInMemoryFileSystemProvider())));\n\t\tdisposables.add(accessor.fileService.registerProvider(Schemas.vscodeRemote, disposables.add(new TestInMemoryFileSystemProvider())));\n\n\t\tmanager = disposables.add(new FileWorkingCopyManager(\n\t\t\t'testUntitledFileWorkingCopyType',\n\t\t\tnew TestStoredFileWorkingCopyModelFactory(),\n\t\t\tnew TestUntitledFileWorkingCopyModelFactory(),\n\t\t\taccessor.fileService, accessor.lifecycleService, accessor.labelService, accessor.logService,\n\t\t\taccessor.workingCopyFileService, accessor.workingCopyBackupService, accessor.uriIdentityService, accessor.fileDialogService,\n\t\t\taccessor.filesConfigurationService, accessor.workingCopyService, accessor.notificationService,\n\t\t\taccessor.workingCopyEditorService, accessor.editorService, accessor.elevatedFileService, accessor.pathService,\n\t\t\taccessor.environmentService, accessor.dialogService, accessor.decorationsService\n\t\t));\n\t});\n\n\tteardown(() => {\n\t\tfor (const workingCopy of [...manager.untitled.workingCopies, ...manager.stored.workingCopies]) {\n\t\t\tworkingCopy.dispose();\n\t\t}\n\n\t\tdisposables.clear();\n\t});\n\n\ttest('basics', async () => {\n\t\tlet createCounter = 0;\n\t\tdisposables.add(manager.untitled.onDidCreate(e => {\n\t\t\tcreateCounter++;\n\t\t}));\n\n\t\tlet disposeCounter = 0;\n\t\tdisposables.add(manager.untitled.onWillDispose(e => {\n\t\t\tdisposeCounter++;\n\t\t}));\n\n\t\tlet dirtyCounter = 0;\n\t\tdisposables.add(manager.untitled.onDidChangeDirty(e => {\n\t\t\tdirtyCounter++;\n\t\t}));\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\t\tassert.strictEqual(manager.untitled.workingCopies.length, 0);\n\n\t\tassert.strictEqual(manager.untitled.get(URI.file('/some/invalidPath')), undefined);\n\t\tassert.strictEqual(manager.untitled.get(URI.file('/some/invalidPath').with({ scheme: Schemas.untitled })), undefined);\n\n\t\tconst workingCopy1 = await manager.untitled.resolve();\n\t\tconst workingCopy2 = await manager.untitled.resolve();\n\n\t\tassert.strictEqual(workingCopy1.typeId, 'testUntitledFileWorkingCopyType');\n\t\tassert.strictEqual(workingCopy1.resource.scheme, Schemas.untitled);\n\n\t\tassert.strictEqual(createCounter, 2);\n\n\t\tassert.strictEqual(manager.untitled.get(workingCopy1.resource), workingCopy1);\n\t\tassert.strictEqual(manager.untitled.get(workingCopy2.resource), workingCopy2);\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 2);\n\t\tassert.strictEqual(manager.untitled.workingCopies.length, 2);\n\n\t\tassert.notStrictEqual(workingCopy1.resource.toString(), workingCopy2.resource.toString());\n\n\t\tfor (const workingCopy of [workingCopy1, workingCopy2]) {\n\t\t\tassert.strictEqual(workingCopy.capabilities, WorkingCopyCapabilities.Untitled);\n\t\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\t\tassert.strictEqual(workingCopy.isModified(), false);\n\t\t\tassert.ok(workingCopy.model);\n\t\t}\n\n\t\tworkingCopy1.model?.updateContents('Hello World');\n\n\t\tassert.strictEqual(workingCopy1.isDirty(), true);\n\t\tassert.strictEqual(workingCopy1.isModified(), true);\n\t\tassert.strictEqual(dirtyCounter, 1);\n\n\t\tworkingCopy1.model?.updateContents(''); // change to empty clears dirty/modified flags\n\t\tassert.strictEqual(workingCopy1.isDirty(), false);\n\t\tassert.strictEqual(workingCopy1.isModified(), false);\n\t\tassert.strictEqual(dirtyCounter, 2);\n\n\t\tworkingCopy2.model?.fireContentChangeEvent({ isInitial: false });\n\t\tassert.strictEqual(workingCopy2.isDirty(), true);\n\t\tassert.strictEqual(workingCopy2.isModified(), true);\n\t\tassert.strictEqual(dirtyCounter, 3);\n\n\t\tworkingCopy1.dispose();\n\n\t\tassert.strictEqual(manager.untitled.workingCopies.length, 1);\n\t\tassert.strictEqual(manager.untitled.get(workingCopy1.resource), undefined);\n\n\t\tworkingCopy2.dispose();\n\n\t\tassert.strictEqual(manager.untitled.workingCopies.length, 0);\n\t\tassert.strictEqual(manager.untitled.get(workingCopy2.resource), undefined);\n\n\t\tassert.strictEqual(disposeCounter, 2);\n\t});\n\n\ttest('dirty - scratchpads are never dirty', async () => {\n\t\tlet dirtyCounter = 0;\n\t\tdisposables.add(manager.untitled.onDidChangeDirty(e => {\n\t\t\tdirtyCounter++;\n\t\t}));\n\n\t\tconst workingCopy1 = await manager.resolve({\n\t\t\tuntitledResource: URI.from({ scheme: Schemas.untitled, path: `/myscratchpad` }),\n\t\t\tisScratchpad: true\n\t\t});\n\n\t\tassert.strictEqual(workingCopy1.resource.scheme, Schemas.untitled);\n\t\tassert.strictEqual(manager.untitled.workingCopies.length, 1);\n\n\t\tworkingCopy1.model?.updateContents('contents');\n\t\tassert.strictEqual(workingCopy1.isDirty(), false);\n\t\tassert.strictEqual(workingCopy1.isModified(), true);\n\n\t\tworkingCopy1.model?.fireContentChangeEvent({ isInitial: true });\n\t\tassert.strictEqual(workingCopy1.isDirty(), false);\n\t\tassert.strictEqual(workingCopy1.isModified(), false);\n\n\t\tassert.strictEqual(dirtyCounter, 0);\n\n\t\tworkingCopy1.dispose();\n\t});\n\n\ttest('resolve - with initial value', async () => {\n\t\tlet dirtyCounter = 0;\n\t\tdisposables.add(manager.untitled.onDidChangeDirty(e => {\n\t\t\tdirtyCounter++;\n\t\t}));\n\n\t\tconst workingCopy1 = await manager.untitled.resolve({ contents: { value: bufferToStream(VSBuffer.fromString('Hello World')) } });\n\n\t\tassert.strictEqual(workingCopy1.isModified(), true);\n\t\tassert.strictEqual(workingCopy1.isDirty(), true);\n\t\tassert.strictEqual(dirtyCounter, 1);\n\t\tassert.strictEqual(workingCopy1.model?.contents, 'Hello World');\n\n\t\tworkingCopy1.dispose();\n\n\t\tconst workingCopy2 = await manager.untitled.resolve({ contents: { value: bufferToStream(VSBuffer.fromString('Hello World')), markModified: true } });\n\n\t\tassert.strictEqual(workingCopy2.isModified(), true);\n\t\tassert.strictEqual(workingCopy2.isDirty(), true);\n\t\tassert.strictEqual(dirtyCounter, 2);\n\t\tassert.strictEqual(workingCopy2.model?.contents, 'Hello World');\n\n\t\tworkingCopy2.dispose();\n\t});\n\n\ttest('resolve - with initial value but markDirty: false', async () => {\n\t\tlet dirtyCounter = 0;\n\t\tdisposables.add(manager.untitled.onDidChangeDirty(e => {\n\t\t\tdirtyCounter++;\n\t\t}));\n\n\t\tconst workingCopy = await manager.untitled.resolve({ contents: { value: bufferToStream(VSBuffer.fromString('Hello World')), markModified: false } });\n\n\t\tassert.strictEqual(workingCopy.isModified(), false);\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(dirtyCounter, 0);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello World');\n\n\t\tworkingCopy.dispose();\n\t});\n\n\ttest('resolve begins counter from 1 for disposed untitled', async () => {\n\t\tconst untitled1 = await manager.untitled.resolve();\n\t\tuntitled1.dispose();\n\n\t\tconst untitled1Again = disposables.add(await manager.untitled.resolve());\n\t\tassert.strictEqual(untitled1.resource.toString(), untitled1Again.resource.toString());\n\t});\n\n\ttest('resolve - existing', async () => {\n\t\tlet createCounter = 0;\n\t\tdisposables.add(manager.untitled.onDidCreate(e => {\n\t\t\tcreateCounter++;\n\t\t}));\n\n\t\tconst workingCopy1 = await manager.untitled.resolve();\n\t\tassert.strictEqual(createCounter, 1);\n\n\t\tconst workingCopy2 = await manager.untitled.resolve({ untitledResource: workingCopy1.resource });\n\t\tassert.strictEqual(workingCopy1, workingCopy2);\n\t\tassert.strictEqual(createCounter, 1);\n\n\t\tconst workingCopy3 = await manager.untitled.resolve({ untitledResource: URI.file('/invalid/untitled') });\n\t\tassert.strictEqual(workingCopy3.resource.scheme, Schemas.untitled);\n\n\t\tworkingCopy1.dispose();\n\t\tworkingCopy2.dispose();\n\t\tworkingCopy3.dispose();\n\t});\n\n\ttest('resolve - untitled resource used for new working copy', async () => {\n\t\tconst invalidUntitledResource = URI.file('my/untitled.txt');\n\t\tconst validUntitledResource = invalidUntitledResource.with({ scheme: Schemas.untitled });\n\n\t\tconst workingCopy1 = await manager.untitled.resolve({ untitledResource: invalidUntitledResource });\n\t\tassert.notStrictEqual(workingCopy1.resource.toString(), invalidUntitledResource.toString());\n\n\t\tconst workingCopy2 = await manager.untitled.resolve({ untitledResource: validUntitledResource });\n\t\tassert.strictEqual(workingCopy2.resource.toString(), validUntitledResource.toString());\n\n\t\tworkingCopy1.dispose();\n\t\tworkingCopy2.dispose();\n\t});\n\n\ttest('resolve - with associated resource', async () => {\n\t\tconst workingCopy = await manager.untitled.resolve({ associatedResource: { path: '/some/associated.txt' } });\n\n\t\tassert.strictEqual(workingCopy.hasAssociatedFilePath, true);\n\t\tassert.strictEqual(workingCopy.resource.path, '/some/associated.txt');\n\n\t\tworkingCopy.dispose();\n\t});\n\n\ttest('save - without associated resource', async () => {\n\t\tconst workingCopy = await manager.untitled.resolve();\n\t\tworkingCopy.model?.updateContents('Simple Save');\n\n\t\taccessor.fileDialogService.setPickFileToSave(URI.file('simple/file.txt'));\n\n\t\tconst result = await workingCopy.save();\n\t\tassert.ok(result);\n\n\t\tassert.strictEqual(manager.untitled.get(workingCopy.resource), undefined);\n\n\t\tworkingCopy.dispose();\n\t});\n\n\ttest('save - with associated resource', async () => {\n\t\tconst workingCopy = await manager.untitled.resolve({ associatedResource: { path: '/some/associated.txt' } });\n\t\tworkingCopy.model?.updateContents('Simple Save with associated resource');\n\n\t\taccessor.fileService.notExistsSet.set(URI.from({ scheme: Schemas.file, path: '/some/associated.txt' }), true);\n\n\t\tconst result = await workingCopy.save();\n\t\tassert.ok(result);\n\n\t\tassert.strictEqual(manager.untitled.get(workingCopy.resource), undefined);\n\n\t\tworkingCopy.dispose();\n\t});\n\n\ttest('save - with associated resource (asks to overwrite)', async () => {\n\t\tconst workingCopy = await manager.untitled.resolve({ associatedResource: { path: '/some/associated.txt' } });\n\t\tworkingCopy.model?.updateContents('Simple Save with associated resource');\n\n\t\tlet result = await workingCopy.save();\n\t\tassert.ok(!result); // not confirmed\n\n\t\tassert.strictEqual(manager.untitled.get(workingCopy.resource), workingCopy);\n\n\t\taccessor.dialogService.setConfirmResult({ confirmed: true });\n\n\t\tresult = await workingCopy.save();\n\t\tassert.ok(result); // confirmed\n\n\t\tassert.strictEqual(manager.untitled.get(workingCopy.resource), undefined);\n\n\t\tworkingCopy.dispose();\n\t});\n\n\ttest('destroy', async () => {\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\n\t\tawait manager.untitled.resolve();\n\t\tawait manager.untitled.resolve();\n\t\tawait manager.untitled.resolve();\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 3);\n\t\tassert.strictEqual(manager.untitled.workingCopies.length, 3);\n\n\t\tawait manager.untitled.destroy();\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\t\tassert.strictEqual(manager.untitled.workingCopies.length, 0);\n\t});\n\n\ttest('manager with different types produce different URIs', async () => {\n\t\ttry {\n\t\t\tmanager = disposables.add(new FileWorkingCopyManager(\n\t\t\t\t'someOtherUntitledTypeId',\n\t\t\t\tnew TestStoredFileWorkingCopyModelFactory(),\n\t\t\t\tnew TestUntitledFileWorkingCopyModelFactory(),\n\t\t\t\taccessor.fileService, accessor.lifecycleService, accessor.labelService, accessor.logService,\n\t\t\t\taccessor.workingCopyFileService, accessor.workingCopyBackupService, accessor.uriIdentityService, accessor.fileDialogService,\n\t\t\t\taccessor.filesConfigurationService, accessor.workingCopyService, accessor.notificationService,\n\t\t\t\taccessor.workingCopyEditorService, accessor.editorService, accessor.elevatedFileService, accessor.pathService,\n\t\t\t\taccessor.environmentService, accessor.dialogService, accessor.decorationsService\n\t\t\t));\n\n\t\t\tconst untitled1OriginalType = disposables.add(await manager.untitled.resolve());\n\t\t\tconst untitled1OtherType = disposables.add(await manager.untitled.resolve());\n\n\t\t\tassert.notStrictEqual(untitled1OriginalType.resource.toString(), untitled1OtherType.resource.toString());\n\t\t} finally {\n\t\t\tmanager.destroy();\n\t\t}\n\t});\n\n\ttest('manager without typeId produces backwards compatible URIs', async () => {\n\t\ttry {\n\t\t\tmanager = disposables.add(new FileWorkingCopyManager(\n\t\t\t\tNO_TYPE_ID,\n\t\t\t\tnew TestStoredFileWorkingCopyModelFactory(),\n\t\t\t\tnew TestUntitledFileWorkingCopyModelFactory(),\n\t\t\t\taccessor.fileService, accessor.lifecycleService, accessor.labelService, accessor.logService,\n\t\t\t\taccessor.workingCopyFileService, accessor.workingCopyBackupService, accessor.uriIdentityService, accessor.fileDialogService,\n\t\t\t\taccessor.filesConfigurationService, accessor.workingCopyService, accessor.notificationService,\n\t\t\t\taccessor.workingCopyEditorService, accessor.editorService, accessor.elevatedFileService, accessor.pathService,\n\t\t\t\taccessor.environmentService, accessor.dialogService, accessor.decorationsService\n\t\t\t));\n\n\t\t\tconst result = disposables.add(await manager.untitled.resolve());\n\t\t\tassert.strictEqual(result.resource.scheme, Schemas.untitled);\n\t\t\tassert.ok(result.resource.path.length > 0);\n\t\t\tassert.strictEqual(result.resource.query, '');\n\t\t\tassert.strictEqual(result.resource.authority, '');\n\t\t\tassert.strictEqual(result.resource.fragment, '');\n\t\t} finally {\n\t\t\tmanager.destroy();\n\t\t}\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}