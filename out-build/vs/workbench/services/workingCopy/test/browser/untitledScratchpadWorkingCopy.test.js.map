{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/workingCopy/test/browser/untitledScratchpadWorkingCopy.test.ts"],"names":[],"mappings":"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","file":"untitledScratchpadWorkingCopy.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { VSBufferReadableStream, VSBuffer, streamToBuffer, bufferToStream, readableToBuffer, VSBufferReadable } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename } from 'vs/base/common/resources';\nimport { consumeReadable, consumeStream, isReadable, isReadableStream } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IUntitledFileWorkingCopyModelFactory, UntitledFileWorkingCopy } from 'vs/workbench/services/workingCopy/common/untitledFileWorkingCopy';\nimport { TestUntitledFileWorkingCopyModel } from 'vs/workbench/services/workingCopy/test/browser/untitledFileWorkingCopy.test';\nimport { TestServiceAccessor, workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\n\nexport class TestUntitledFileWorkingCopyModelFactory implements IUntitledFileWorkingCopyModelFactory<TestUntitledFileWorkingCopyModel> {\n\n\tasync createModel(resource: URI, contents: VSBufferReadableStream, token: CancellationToken): Promise<TestUntitledFileWorkingCopyModel> {\n\t\treturn new TestUntitledFileWorkingCopyModel(resource, (await streamToBuffer(contents)).toString());\n\t}\n}\n\nsuite('UntitledScratchpadWorkingCopy', () => {\n\n\tconst factory = new TestUntitledFileWorkingCopyModelFactory();\n\n\tconst disposables = new DisposableStore();\n\tconst resource = URI.from({ scheme: Schemas.untitled, path: 'Untitled-1' });\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\tlet workingCopy: UntitledFileWorkingCopy<TestUntitledFileWorkingCopyModel>;\n\n\tfunction createWorkingCopy(uri: URI = resource, hasAssociatedFilePath = false, initialValue = '') {\n\t\treturn disposables.add(new UntitledFileWorkingCopy<TestUntitledFileWorkingCopyModel>(\n\t\t\t'testUntitledWorkingCopyType',\n\t\t\turi,\n\t\t\tbasename(uri),\n\t\t\thasAssociatedFilePath,\n\t\t\ttrue,\n\t\t\tinitialValue.length > 0 ? { value: bufferToStream(VSBuffer.fromString(initialValue)) } : undefined,\n\t\t\tfactory,\n\t\t\tasync workingCopy => { await workingCopy.revert(); return true; },\n\t\t\taccessor.workingCopyService,\n\t\t\taccessor.workingCopyBackupService,\n\t\t\taccessor.logService\n\t\t));\n\t}\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tworkingCopy = disposables.add(createWorkingCopy());\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('registers with working copy service', async () => {\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 1);\n\n\t\tworkingCopy.dispose();\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\t});\n\n\ttest('modified - not dirty', async () => {\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\n\t\tlet changeDirtyCounter = 0;\n\t\tdisposables.add(workingCopy.onDidChangeDirty(() => {\n\t\t\tchangeDirtyCounter++;\n\t\t}));\n\n\t\tlet contentChangeCounter = 0;\n\t\tdisposables.add(workingCopy.onDidChangeContent(() => {\n\t\t\tcontentChangeCounter++;\n\t\t}));\n\n\t\tawait workingCopy.resolve();\n\t\tassert.strictEqual(workingCopy.isResolved(), true);\n\n\t\t// Modified from: Model content change\n\t\tworkingCopy.model?.updateContents('hello modified');\n\t\tassert.strictEqual(contentChangeCounter, 1);\n\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\t\tassert.strictEqual(changeDirtyCounter, 0);\n\n\t\tawait workingCopy.save();\n\n\t\tassert.strictEqual(workingCopy.isDirty(), false);\n\t\tassert.strictEqual(changeDirtyCounter, 0);\n\t});\n\n\ttest('modified - cleared when content event signals isEmpty', async () => {\n\t\tassert.strictEqual(workingCopy.isModified(), false);\n\n\t\tawait workingCopy.resolve();\n\n\t\tworkingCopy.model?.updateContents('hello modified');\n\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\n\t\tworkingCopy.model?.fireContentChangeEvent({ isInitial: true });\n\n\t\tassert.strictEqual(workingCopy.isModified(), false);\n\t});\n\n\ttest('modified - not cleared when content event signals isEmpty when associated resource', async () => {\n\t\tworkingCopy.dispose();\n\t\tworkingCopy = createWorkingCopy(resource, true);\n\n\t\tawait workingCopy.resolve();\n\n\t\tworkingCopy.model?.updateContents('hello modified');\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\n\t\tworkingCopy.model?.fireContentChangeEvent({ isInitial: true });\n\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\t});\n\n\ttest('revert', async () => {\n\t\tlet revertCounter = 0;\n\t\tdisposables.add(workingCopy.onDidRevert(() => {\n\t\t\trevertCounter++;\n\t\t}));\n\n\t\tlet disposeCounter = 0;\n\t\tdisposables.add(workingCopy.onWillDispose(() => {\n\t\t\tdisposeCounter++;\n\t\t}));\n\n\t\tawait workingCopy.resolve();\n\n\t\tworkingCopy.model?.updateContents('hello modified');\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\n\t\tawait workingCopy.revert();\n\n\t\tassert.strictEqual(revertCounter, 1);\n\t\tassert.strictEqual(disposeCounter, 1);\n\t\tassert.strictEqual(workingCopy.isModified(), false);\n\t});\n\n\ttest('dispose', async () => {\n\t\tlet disposeCounter = 0;\n\t\tdisposables.add(workingCopy.onWillDispose(() => {\n\t\t\tdisposeCounter++;\n\t\t}));\n\n\t\tawait workingCopy.resolve();\n\t\tworkingCopy.dispose();\n\n\t\tassert.strictEqual(disposeCounter, 1);\n\t});\n\n\ttest('backup', async () => {\n\t\tassert.strictEqual((await workingCopy.backup(CancellationToken.None)).content, undefined);\n\n\t\tawait workingCopy.resolve();\n\n\t\tworkingCopy.model?.updateContents('Hello Backup');\n\t\tconst backup = await workingCopy.backup(CancellationToken.None);\n\n\t\tlet backupContents: string | undefined = undefined;\n\t\tif (isReadableStream(backup.content)) {\n\t\t\tbackupContents = (await consumeStream(backup.content, chunks => VSBuffer.concat(chunks))).toString();\n\t\t} else if (backup.content) {\n\t\t\tbackupContents = consumeReadable(backup.content, chunks => VSBuffer.concat(chunks)).toString();\n\t\t}\n\n\t\tassert.strictEqual(backupContents, 'Hello Backup');\n\t});\n\n\ttest('resolve - without contents', async () => {\n\t\tassert.strictEqual(workingCopy.isResolved(), false);\n\t\tassert.strictEqual(workingCopy.hasAssociatedFilePath, false);\n\t\tassert.strictEqual(workingCopy.model, undefined);\n\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(workingCopy.isResolved(), true);\n\t\tassert.ok(workingCopy.model);\n\t});\n\n\ttest('resolve - with initial contents', async () => {\n\t\tworkingCopy.dispose();\n\n\t\tworkingCopy = createWorkingCopy(resource, false, 'Hello Initial');\n\n\t\tlet contentChangeCounter = 0;\n\t\tdisposables.add(workingCopy.onDidChangeContent(() => {\n\t\t\tcontentChangeCounter++;\n\t\t}));\n\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello Initial');\n\t\tassert.strictEqual(contentChangeCounter, 1);\n\n\t\tworkingCopy.model.updateContents('Changed contents');\n\n\t\tawait workingCopy.resolve(); // second resolve should be ignored\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Changed contents');\n\t});\n\n\ttest('backup - with initial contents uses those even if unresolved', async () => {\n\t\tworkingCopy.dispose();\n\n\t\tworkingCopy = createWorkingCopy(resource, false, 'Hello Initial');\n\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\n\t\tconst backup = (await workingCopy.backup(CancellationToken.None)).content;\n\t\tif (isReadableStream(backup)) {\n\t\t\tconst value = await streamToBuffer(backup as VSBufferReadableStream);\n\t\t\tassert.strictEqual(value.toString(), 'Hello Initial');\n\t\t} else if (isReadable(backup)) {\n\t\t\tconst value = readableToBuffer(backup as VSBufferReadable);\n\t\t\tassert.strictEqual(value.toString(), 'Hello Initial');\n\t\t} else {\n\t\t\tassert.fail('Missing untitled backup');\n\t\t}\n\t});\n\n\n\ttest('resolve - with associated resource', async () => {\n\t\tworkingCopy.dispose();\n\t\tworkingCopy = createWorkingCopy(resource, true);\n\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\t\tassert.strictEqual(workingCopy.hasAssociatedFilePath, true);\n\t});\n\n\ttest('resolve - with backup', async () => {\n\t\tawait workingCopy.resolve();\n\t\tworkingCopy.model?.updateContents('Hello Backup');\n\n\t\tconst backup = await workingCopy.backup(CancellationToken.None);\n\t\tawait accessor.workingCopyBackupService.backup(workingCopy, backup.content, undefined, backup.meta);\n\n\t\tassert.strictEqual(accessor.workingCopyBackupService.hasBackupSync(workingCopy), true);\n\n\t\tworkingCopy.dispose();\n\n\t\tworkingCopy = createWorkingCopy();\n\n\t\tlet contentChangeCounter = 0;\n\t\tdisposables.add(workingCopy.onDidChangeContent(() => {\n\t\t\tcontentChangeCounter++;\n\t\t}));\n\n\t\tawait workingCopy.resolve();\n\n\t\tassert.strictEqual(workingCopy.isModified(), true);\n\t\tassert.strictEqual(workingCopy.model?.contents, 'Hello Backup');\n\t\tassert.strictEqual(contentChangeCounter, 1);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}