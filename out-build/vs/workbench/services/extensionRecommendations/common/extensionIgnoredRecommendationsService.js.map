{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/extensionRecommendations/common/extensionIgnoredRecommendationsService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAUhG,MAAM,gCAAgC,GAAG,6CAA6C,CAAC;IAEhF,IAAM,IAAI,GAAV,MAAM,IAAuC,SAAQ,eAAG;QAS9D,IAAI,4BAA4B,KAAe,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAA6B,CAAC,CAAC,CAAC;QAOhG,IAAI,sBAAsB,KAAe,OAAO,IAAA,YAAG,EAAM,CAAC,GAAG,IAAI,CAAC,4BAA4B,EAAE,GAAG,IAAI,CAAC,CAAC,CAA+B,CAAC,CAAC,CAAC,CAAC;QAE5I,YACoC,CAAuD,EACzE,CAAoC;YAErD,KAAK,EAAE,CAAC;YAH4C,MAAC,GAAD,CAAC,CAAqC;YACxD,MAAC,GAAD,CAAC,CAAkB;YAhB9C,MAAC,GAAoC,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YACxE,sCAAiC,GAAG,IAAI,CAAC,CAAC,CAAkC,KAAK,CAAC;YAE3F,iCAAiC;YACzB,MAAC,GAAyC,EAAE,CAAC;YAE7C,MAAC,GAAyC,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAA+C,CAAC,CAAC;YAChH,2CAAsC,GAAG,IAAI,CAAC,CAAC,CAAuC,KAAK,CAAC;YAErG,oCAAoC;YAC5B,MAAC,GAA2C,EAAE,CAAC;YAStD,IAAI,CAAC,CAAC,GAA+B,IAAI,CAAC,CAAC,EAAgC,CAAC;YAC5E,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAc,gBAAgB,+BAAuB,gCAAgC,EAAE,IAAI,CAAC,CAAC,CAAS,IAAI,eAAG,EAAc,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAmB,CAAC,CAAC,CAAC;YAEpL,IAAI,CAAC,CAAC,EAAoC,CAAC;QAC5C,CAAC;QAEO,KAAK,CAAC,CAAC;YACd,IAAI,CAAC,CAAC,GAAiC,MAAM,IAAI,CAAC,CAAC,CAAgC,0BAA0B,EAAE,CAAC;YAChH,IAAI,CAAC,CAAC,CAAkC,IAAI,EAAE,CAAC;YAC/C,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAgC,4BAA4B,CAAC,KAAK,IAAI,EAAE;gBAC5F,IAAI,CAAC,CAAC,GAAiC,MAAM,IAAI,CAAC,CAAC,CAAgC,0BAA0B,EAAE,CAAC;gBAChH,IAAI,CAAC,CAAC,CAAkC,IAAI,EAAE,CAAC;YAChD,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAED,iCAAiC,CAAC,WAAmB,EAAE,YAAqB;YAC3E,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;YACxC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAA6B,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YAC/E,IAAI,OAAO,KAAK,YAAY,EAAE;gBAC7B,OAAO;aACP;YAED,IAAI,CAAC,CAAC,GAA+B,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAA8B,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAA6B,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,WAAW,CAAC,CAAC;YAC/K,IAAI,CAAC,CAAC,CAAiC,IAAI,CAAC,CAAC,CAA6B,CAAC;YAC3E,IAAI,CAAC,CAAC,CAAuC,IAAI,CAAC,EAAE,WAAW,EAAE,aAAa,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC;YACjG,IAAI,CAAC,CAAC,CAAkC,IAAI,EAAE,CAAC;QAChD,CAAC;QAEO,CAAC;YACR,MAAM,sBAAsB,GAAa,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAA2B,CAAC;YACtF,OAAO,sBAAsB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QACzD,CAAC;QAEO,CAAC;YACR,IAAI,IAAI,CAAC,CAAC,KAA+B,IAAI,CAAC,CAAC,EAAqC,CAAC,4DAA4D,EAAE;gBAClJ,IAAI,CAAC,CAAC,GAA8B,SAAS,CAAC;gBAC9C,IAAI,CAAC,CAAC,GAA+B,IAAI,CAAC,CAAC,EAAgC,CAAC;gBAC5E,IAAI,CAAC,CAAC,CAAkC,IAAI,EAAE,CAAC;aAC/C;QACF,CAAC;QAEO,CAAC,CAAiC,sBAAgC;YACzE,IAAI,CAAC,CAAC,GAA6B,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;QAC3E,CAAC;QAGD,IAAY,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,CAAC,EAA6B;gBACvC,IAAI,CAAC,CAAC,GAA8B,IAAI,CAAC,CAAC,EAAqC,CAAC;aAChF;YAED,OAAO,IAAI,CAAC,CAAC,CAA4B;QAC1C,CAAC;QAED,IAAY,CAAC,CAA2B,2BAAmC;YAC1E,IAAI,IAAI,CAAC,CAAC,KAA+B,2BAA2B,EAAE;gBACrE,IAAI,CAAC,CAAC,GAA8B,2BAA2B,CAAC;gBAChE,IAAI,CAAC,CAAC,CAAoC,2BAA2B,CAAC,CAAC;aACvE;QACF,CAAC;QAEO,CAAC;YACR,OAAO,IAAI,CAAC,CAAC,CAAc,GAAG,CAAC,gCAAgC,gCAAwB,IAAI,CAAC,CAAC;QAC9F,CAAC;QAEO,CAAC,CAAoC,KAAa;YACzD,IAAI,CAAC,CAAC,CAAc,KAAK,CAAC,gCAAgC,EAAE,KAAK,2DAA2C,CAAC;QAC9G,CAAC;KAED,CAAA;IA5FY,oBAAI;mBAAJ,IAAI;QAmBd,WAAA,gCAAI,CAAA;QACJ,WAAA,aAAG,CAAA;OApBO,IAAI,CA4FhB;IAED,IAAA,gBAAG,EAAe,+BAAI,EAAqC,IAAI,oCAA8D,CAAC","file":"extensionIgnoredRecommendationsService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IExtensionIgnoredRecommendationsService, IgnoredRecommendationChangeNotification } from 'vs/workbench/services/extensionRecommendations/common/extensionRecommendations';\nimport { IWorkspaceExtensionsConfigService } from 'vs/workbench/services/extensionRecommendations/common/workspaceExtensionsConfig';\n\nconst ignoredRecommendationsStorageKey = 'extensionsAssistant/ignored_recommendations';\n\nexport class ExtensionIgnoredRecommendationsService extends Disposable implements IExtensionIgnoredRecommendationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _onDidChangeIgnoredRecommendations = this._register(new Emitter<void>());\n\treadonly onDidChangeIgnoredRecommendations = this._onDidChangeIgnoredRecommendations.event;\n\n\t// Global Ignored Recommendations\n\tprivate _globalIgnoredRecommendations: string[] = [];\n\tget globalIgnoredRecommendations(): string[] { return [...this._globalIgnoredRecommendations]; }\n\tprivate _onDidChangeGlobalIgnoredRecommendation = this._register(new Emitter<IgnoredRecommendationChangeNotification>());\n\treadonly onDidChangeGlobalIgnoredRecommendation = this._onDidChangeGlobalIgnoredRecommendation.event;\n\n\t// Ignored Workspace Recommendations\n\tprivate ignoredWorkspaceRecommendations: string[] = [];\n\n\tget ignoredRecommendations(): string[] { return distinct([...this.globalIgnoredRecommendations, ...this.ignoredWorkspaceRecommendations]); }\n\n\tconstructor(\n\t\t@IWorkspaceExtensionsConfigService private readonly workspaceExtensionsConfigService: IWorkspaceExtensionsConfigService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis._globalIgnoredRecommendations = this.getCachedIgnoredRecommendations();\n\t\tthis._register(this.storageService.onDidChangeValue(StorageScope.PROFILE, ignoredRecommendationsStorageKey, this._register(new DisposableStore()))(e => this.onDidStorageChange()));\n\n\t\tthis.initIgnoredWorkspaceRecommendations();\n\t}\n\n\tprivate async initIgnoredWorkspaceRecommendations(): Promise<void> {\n\t\tthis.ignoredWorkspaceRecommendations = await this.workspaceExtensionsConfigService.getUnwantedRecommendations();\n\t\tthis._onDidChangeIgnoredRecommendations.fire();\n\t\tthis._register(this.workspaceExtensionsConfigService.onDidChangeExtensionsConfigs(async () => {\n\t\t\tthis.ignoredWorkspaceRecommendations = await this.workspaceExtensionsConfigService.getUnwantedRecommendations();\n\t\t\tthis._onDidChangeIgnoredRecommendations.fire();\n\t\t}));\n\t}\n\n\ttoggleGlobalIgnoredRecommendation(extensionId: string, shouldIgnore: boolean): void {\n\t\textensionId = extensionId.toLowerCase();\n\t\tconst ignored = this._globalIgnoredRecommendations.indexOf(extensionId) !== -1;\n\t\tif (ignored === shouldIgnore) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._globalIgnoredRecommendations = shouldIgnore ? [...this._globalIgnoredRecommendations, extensionId] : this._globalIgnoredRecommendations.filter(id => id !== extensionId);\n\t\tthis.storeCachedIgnoredRecommendations(this._globalIgnoredRecommendations);\n\t\tthis._onDidChangeGlobalIgnoredRecommendation.fire({ extensionId, isRecommended: !shouldIgnore });\n\t\tthis._onDidChangeIgnoredRecommendations.fire();\n\t}\n\n\tprivate getCachedIgnoredRecommendations(): string[] {\n\t\tconst ignoredRecommendations: string[] = JSON.parse(this.ignoredRecommendationsValue);\n\t\treturn ignoredRecommendations.map(e => e.toLowerCase());\n\t}\n\n\tprivate onDidStorageChange(): void {\n\t\tif (this.ignoredRecommendationsValue !== this.getStoredIgnoredRecommendationsValue() /* This checks if current window changed the value or not */) {\n\t\t\tthis._ignoredRecommendationsValue = undefined;\n\t\t\tthis._globalIgnoredRecommendations = this.getCachedIgnoredRecommendations();\n\t\t\tthis._onDidChangeIgnoredRecommendations.fire();\n\t\t}\n\t}\n\n\tprivate storeCachedIgnoredRecommendations(ignoredRecommendations: string[]): void {\n\t\tthis.ignoredRecommendationsValue = JSON.stringify(ignoredRecommendations);\n\t}\n\n\tprivate _ignoredRecommendationsValue: string | undefined;\n\tprivate get ignoredRecommendationsValue(): string {\n\t\tif (!this._ignoredRecommendationsValue) {\n\t\t\tthis._ignoredRecommendationsValue = this.getStoredIgnoredRecommendationsValue();\n\t\t}\n\n\t\treturn this._ignoredRecommendationsValue;\n\t}\n\n\tprivate set ignoredRecommendationsValue(ignoredRecommendationsValue: string) {\n\t\tif (this.ignoredRecommendationsValue !== ignoredRecommendationsValue) {\n\t\t\tthis._ignoredRecommendationsValue = ignoredRecommendationsValue;\n\t\t\tthis.setStoredIgnoredRecommendationsValue(ignoredRecommendationsValue);\n\t\t}\n\t}\n\n\tprivate getStoredIgnoredRecommendationsValue(): string {\n\t\treturn this.storageService.get(ignoredRecommendationsStorageKey, StorageScope.PROFILE, '[]');\n\t}\n\n\tprivate setStoredIgnoredRecommendationsValue(value: string): void {\n\t\tthis.storageService.store(ignoredRecommendationsStorageKey, value, StorageScope.PROFILE, StorageTarget.USER);\n\t}\n\n}\n\nregisterSingleton(IExtensionIgnoredRecommendationsService, ExtensionIgnoredRecommendationsService, InstantiationType.Delayed);\n"]}