{"version":3,"sources":["vs/workbench/services/textMate/browser/textMateTokenizationFeatureImpl.ts"],"names":[],"mappings":"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","file":"textMateTokenizationFeatureImpl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { importAMDNodeModule } from 'vs/amdX';\nimport * as dom from 'vs/base/browser/dom';\nimport { equals as equalArray } from 'vs/base/common/arrays';\nimport { Color } from 'vs/base/common/color';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { FileAccess, nodeModulesAsarUnpackedPath, nodeModulesPath } from 'vs/base/common/network';\nimport { IObservable, observableFromEvent } from 'vs/base/common/observable';\nimport { isWeb } from 'vs/base/common/platform';\nimport * as resources from 'vs/base/common/resources';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { StandardTokenType } from 'vs/editor/common/encodedTokenAttributes';\nimport { ITokenizationSupport, LazyTokenizationSupport, TokenizationRegistry } from 'vs/editor/common/languages';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { generateTokensCSSForColorMap } from 'vs/editor/common/languages/supports/tokenization';\nimport * as nls from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionResourceLoaderService } from 'vs/platform/extensionResourceLoader/common/extensionResourceLoader';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IProgressService, ProgressLocation } from 'vs/platform/progress/common/progress';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { ExtensionMessageCollector, IExtensionPointUser } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { ITextMateTokenizationService } from 'vs/workbench/services/textMate/browser/textMateTokenizationFeature';\nimport { TextMateTokenizationSupport } from 'vs/workbench/services/textMate/browser/tokenizationSupport/textMateTokenizationSupport';\nimport { TokenizationSupportWithLineLimit } from 'vs/workbench/services/textMate/browser/tokenizationSupport/tokenizationSupportWithLineLimit';\nimport { ThreadedBackgroundTokenizerFactory } from 'vs/workbench/services/textMate/browser/backgroundTokenization/threadedBackgroundTokenizerFactory';\nimport { TMGrammarFactory, missingTMGrammarErrorMessage } from 'vs/workbench/services/textMate/common/TMGrammarFactory';\nimport { ITMSyntaxExtensionPoint, grammarsExtPoint } from 'vs/workbench/services/textMate/common/TMGrammars';\nimport { IValidEmbeddedLanguagesMap, IValidGrammarDefinition, IValidTokenTypeMap } from 'vs/workbench/services/textMate/common/TMScopeRegistry';\nimport { ITextMateThemingRule, IWorkbenchColorTheme, IWorkbenchThemeService } from 'vs/workbench/services/themes/common/workbenchThemeService';\nimport type { IGrammar, IOnigLib, IRawTheme } from 'vscode-textmate';\n\nexport class TextMateTokenizationFeature extends Disposable implements ITextMateTokenizationService {\n\tprivate static reportTokenizationTimeCounter = { sync: 0, async: 0 };\n\tpublic _serviceBrand: undefined;\n\n\tprivate readonly _styleElement: HTMLStyleElement;\n\tprivate readonly _createdModes: string[] = [];\n\tprivate readonly _encounteredLanguages: boolean[] = [];\n\n\tprivate _debugMode: boolean = false;\n\tprivate _debugModePrintFunc: (str: string) => void = () => { };\n\n\tprivate _grammarDefinitions: IValidGrammarDefinition[] | null = null;\n\tprivate _grammarFactory: TMGrammarFactory | null = null;\n\tprivate readonly _tokenizersRegistrations = new DisposableStore();\n\tprivate _currentTheme: IRawTheme | null = null;\n\tprivate _currentTokenColorMap: string[] | null = null;\n\tprivate readonly _threadedBackgroundTokenizerFactory = this._instantiationService.createInstance(\n\t\tThreadedBackgroundTokenizerFactory,\n\t\t(timeMs, languageId, sourceExtensionId, lineLength, isRandomSample) => this._reportTokenizationTime(timeMs, languageId, sourceExtensionId, lineLength, true, isRandomSample),\n\t\t() => this.getAsyncTokenizationEnabled(),\n\t);\n\n\tconstructor(\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IWorkbenchThemeService private readonly _themeService: IWorkbenchThemeService,\n\t\t@IExtensionResourceLoaderService private readonly _extensionResourceLoaderService: IExtensionResourceLoaderService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IProgressService private readonly _progressService: IProgressService,\n\t\t@IWorkbenchEnvironmentService private readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\n\t\tthis._styleElement = dom.createStyleSheet();\n\t\tthis._styleElement.className = 'vscode-tokens-styles';\n\n\t\tgrammarsExtPoint.setHandler((extensions) => this._handleGrammarsExtPoint(extensions));\n\n\t\tthis._updateTheme(this._themeService.getColorTheme(), true);\n\t\tthis._register(this._themeService.onDidColorThemeChange(() => {\n\t\t\tthis._updateTheme(this._themeService.getColorTheme(), false);\n\t\t}));\n\n\t\tthis._languageService.onDidRequestRichLanguageFeatures((languageId) => {\n\t\t\tthis._createdModes.push(languageId);\n\t\t});\n\t}\n\n\tprivate getAsyncTokenizationEnabled(): boolean {\n\t\treturn !!this._configurationService.getValue<boolean>('editor.experimental.asyncTokenization');\n\t}\n\n\tprivate getAsyncTokenizationVerification(): boolean {\n\t\treturn !!this._configurationService.getValue<boolean>('editor.experimental.asyncTokenizationVerification');\n\t}\n\n\tprivate _handleGrammarsExtPoint(extensions: readonly IExtensionPointUser<ITMSyntaxExtensionPoint[]>[]): void {\n\t\tthis._grammarDefinitions = null;\n\t\tif (this._grammarFactory) {\n\t\t\tthis._grammarFactory.dispose();\n\t\t\tthis._grammarFactory = null;\n\t\t}\n\t\tthis._tokenizersRegistrations.clear();\n\n\t\tthis._grammarDefinitions = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst grammars = extension.value;\n\t\t\tfor (const grammar of grammars) {\n\t\t\t\tconst validatedGrammar = this._validateGrammarDefinition(extension, grammar);\n\t\t\t\tif (validatedGrammar) {\n\t\t\t\t\tthis._grammarDefinitions.push(validatedGrammar);\n\t\t\t\t\tif (validatedGrammar.language) {\n\t\t\t\t\t\tconst lazyTokenizationSupport = new LazyTokenizationSupport(() => this._createTokenizationSupport(validatedGrammar.language!));\n\t\t\t\t\t\tthis._tokenizersRegistrations.add(lazyTokenizationSupport);\n\t\t\t\t\t\tthis._tokenizersRegistrations.add(TokenizationRegistry.registerFactory(validatedGrammar.language, lazyTokenizationSupport));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._threadedBackgroundTokenizerFactory.setGrammarDefinitions(this._grammarDefinitions);\n\n\t\tfor (const createdMode of this._createdModes) {\n\t\t\tTokenizationRegistry.getOrCreate(createdMode);\n\t\t}\n\t}\n\n\tprivate _validateGrammarDefinition(extension: IExtensionPointUser<ITMSyntaxExtensionPoint[]>, grammar: ITMSyntaxExtensionPoint): IValidGrammarDefinition | null {\n\t\tif (!validateGrammarExtensionPoint(extension.description.extensionLocation, grammar, extension.collector, this._languageService)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst grammarLocation = resources.joinPath(extension.description.extensionLocation, grammar.path);\n\n\t\tconst embeddedLanguages: IValidEmbeddedLanguagesMap = Object.create(null);\n\t\tif (grammar.embeddedLanguages) {\n\t\t\tconst scopes = Object.keys(grammar.embeddedLanguages);\n\t\t\tfor (let i = 0, len = scopes.length; i < len; i++) {\n\t\t\t\tconst scope = scopes[i];\n\t\t\t\tconst language = grammar.embeddedLanguages[scope];\n\t\t\t\tif (typeof language !== 'string') {\n\t\t\t\t\t// never hurts to be too careful\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (this._languageService.isRegisteredLanguageId(language)) {\n\t\t\t\t\tembeddedLanguages[scope] = this._languageService.languageIdCodec.encodeLanguageId(language);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst tokenTypes: IValidTokenTypeMap = Object.create(null);\n\t\tif (grammar.tokenTypes) {\n\t\t\tconst scopes = Object.keys(grammar.tokenTypes);\n\t\t\tfor (const scope of scopes) {\n\t\t\t\tconst tokenType = grammar.tokenTypes[scope];\n\t\t\t\tswitch (tokenType) {\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\ttokenTypes[scope] = StandardTokenType.String;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'other':\n\t\t\t\t\t\ttokenTypes[scope] = StandardTokenType.Other;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'comment':\n\t\t\t\t\t\ttokenTypes[scope] = StandardTokenType.Comment;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst validLanguageId = grammar.language && this._languageService.isRegisteredLanguageId(grammar.language) ? grammar.language : null;\n\n\t\tfunction asStringArray(array: unknown, defaultValue: string[]): string[] {\n\t\t\tif (!Array.isArray(array)) {\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t\tif (!array.every(e => typeof e === 'string')) {\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\t\treturn array;\n\t\t}\n\n\t\treturn {\n\t\t\tlocation: grammarLocation,\n\t\t\tlanguage: validLanguageId || undefined,\n\t\t\tscopeName: grammar.scopeName,\n\t\t\tembeddedLanguages: embeddedLanguages,\n\t\t\ttokenTypes: tokenTypes,\n\t\t\tinjectTo: grammar.injectTo,\n\t\t\tbalancedBracketSelectors: asStringArray(grammar.balancedBracketScopes, ['*']),\n\t\t\tunbalancedBracketSelectors: asStringArray(grammar.unbalancedBracketScopes, []),\n\t\t\tsourceExtensionId: extension.description.id,\n\t\t};\n\t}\n\n\tpublic startDebugMode(printFn: (str: string) => void, onStop: () => void): void {\n\t\tif (this._debugMode) {\n\t\t\tthis._notificationService.error(nls.localize('alreadyDebugging', \"Already Logging.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tthis._debugModePrintFunc = printFn;\n\t\tthis._debugMode = true;\n\n\t\tif (this._debugMode) {\n\t\t\tthis._progressService.withProgress(\n\t\t\t\t{\n\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\tbuttons: [nls.localize('stop', \"Stop\")]\n\t\t\t\t},\n\t\t\t\t(progress) => {\n\t\t\t\t\tprogress.report({\n\t\t\t\t\t\tmessage: nls.localize('progress1', \"Preparing to log TM Grammar parsing. Press Stop when finished.\")\n\t\t\t\t\t});\n\n\t\t\t\t\treturn this._getVSCodeOniguruma().then((vscodeOniguruma) => {\n\t\t\t\t\t\tvscodeOniguruma.setDefaultDebugCall(true);\n\t\t\t\t\t\tprogress.report({\n\t\t\t\t\t\t\tmessage: nls.localize('progress2', \"Now logging TM Grammar parsing. Press Stop when finished.\")\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn new Promise<void>((resolve, reject) => { });\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t(choice) => {\n\t\t\t\t\tthis._getVSCodeOniguruma().then((vscodeOniguruma) => {\n\t\t\t\t\t\tthis._debugModePrintFunc = () => { };\n\t\t\t\t\t\tthis._debugMode = false;\n\t\t\t\t\t\tvscodeOniguruma.setDefaultDebugCall(false);\n\t\t\t\t\t\tonStop();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _canCreateGrammarFactory(): boolean {\n\t\t// Check if extension point is ready\n\t\treturn !!this._grammarDefinitions;\n\t}\n\tprivate async _getOrCreateGrammarFactory(): Promise<TMGrammarFactory> {\n\t\tif (this._grammarFactory) {\n\t\t\treturn this._grammarFactory;\n\t\t}\n\n\t\tconst [vscodeTextmate, vscodeOniguruma] = await Promise.all([importAMDNodeModule<typeof import('vscode-textmate')>('vscode-textmate', 'release/main.js'), this._getVSCodeOniguruma()]);\n\t\tconst onigLib: Promise<IOnigLib> = Promise.resolve({\n\t\t\tcreateOnigScanner: (sources: string[]) => vscodeOniguruma.createOnigScanner(sources),\n\t\t\tcreateOnigString: (str: string) => vscodeOniguruma.createOnigString(str)\n\t\t});\n\n\t\t// Avoid duplicate instantiations\n\t\tif (this._grammarFactory) {\n\t\t\treturn this._grammarFactory;\n\t\t}\n\n\t\tthis._grammarFactory = new TMGrammarFactory({\n\t\t\tlogTrace: (msg: string) => this._logService.trace(msg),\n\t\t\tlogError: (msg: string, err: any) => this._logService.error(msg, err),\n\t\t\treadFile: (resource: URI) => this._extensionResourceLoaderService.readExtensionResource(resource)\n\t\t}, this._grammarDefinitions || [], vscodeTextmate, onigLib);\n\n\t\tthis._updateTheme(this._themeService.getColorTheme(), true);\n\n\t\treturn this._grammarFactory;\n\t}\n\n\tprivate async _createTokenizationSupport(languageId: string): Promise<ITokenizationSupport & IDisposable | null> {\n\t\tif (!this._languageService.isRegisteredLanguageId(languageId)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (!this._canCreateGrammarFactory()) {\n\t\t\treturn null;\n\t\t}\n\n\t\ttry {\n\t\t\tconst grammarFactory = await this._getOrCreateGrammarFactory();\n\t\t\tif (!grammarFactory.has(languageId)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst encodedLanguageId = this._languageService.languageIdCodec.encodeLanguageId(languageId);\n\t\t\tconst r = await grammarFactory.createGrammar(languageId, encodedLanguageId);\n\t\t\tif (!r.grammar) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst maxTokenizationLineLength = observableConfigValue<number>(\n\t\t\t\t'editor.maxTokenizationLineLength',\n\t\t\t\tlanguageId,\n\t\t\t\t-1,\n\t\t\t\tthis._configurationService\n\t\t\t);\n\t\t\tconst tokenization = new TextMateTokenizationSupport(\n\t\t\t\tr.grammar,\n\t\t\t\tr.initialState,\n\t\t\t\tr.containsEmbeddedLanguages,\n\t\t\t\t(textModel, tokenStore) => this._threadedBackgroundTokenizerFactory.createBackgroundTokenizer(textModel, tokenStore, maxTokenizationLineLength),\n\t\t\t\t() => this.getAsyncTokenizationVerification(),\n\t\t\t\t(timeMs, lineLength, isRandomSample) => {\n\t\t\t\t\tthis._reportTokenizationTime(timeMs, languageId, r.sourceExtensionId, lineLength, false, isRandomSample);\n\t\t\t\t},\n\t\t\t\ttrue,\n\t\t\t);\n\t\t\ttokenization.onDidEncounterLanguage((encodedLanguageId) => {\n\t\t\t\tif (!this._encounteredLanguages[encodedLanguageId]) {\n\t\t\t\t\tconst languageId = this._languageService.languageIdCodec.decodeLanguageId(encodedLanguageId);\n\t\t\t\t\tthis._encounteredLanguages[encodedLanguageId] = true;\n\t\t\t\t\tthis._languageService.requestBasicLanguageFeatures(languageId);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn new TokenizationSupportWithLineLimit(encodedLanguageId, tokenization, maxTokenizationLineLength);\n\t\t} catch (err) {\n\t\t\tif (err.message && err.message === missingTMGrammarErrorMessage) {\n\t\t\t\t// Don't log this error message\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tonUnexpectedError(err);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate _updateTheme(colorTheme: IWorkbenchColorTheme, forceUpdate: boolean): void {\n\t\tif (!forceUpdate && this._currentTheme && this._currentTokenColorMap && equalsTokenRules(this._currentTheme.settings, colorTheme.tokenColors)\n\t\t\t&& equalArray(this._currentTokenColorMap, colorTheme.tokenColorMap)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._currentTheme = { name: colorTheme.label, settings: colorTheme.tokenColors };\n\t\tthis._currentTokenColorMap = colorTheme.tokenColorMap;\n\n\t\tthis._grammarFactory?.setTheme(this._currentTheme, this._currentTokenColorMap);\n\t\tconst colorMap = toColorMap(this._currentTokenColorMap);\n\t\tconst cssRules = generateTokensCSSForColorMap(colorMap);\n\t\tthis._styleElement.textContent = cssRules;\n\t\tTokenizationRegistry.setColorMap(colorMap);\n\n\t\tif (this._currentTheme && this._currentTokenColorMap) {\n\t\t\tthis._threadedBackgroundTokenizerFactory.acceptTheme(this._currentTheme, this._currentTokenColorMap);\n\t\t}\n\t}\n\n\tpublic async createTokenizer(languageId: string): Promise<IGrammar | null> {\n\t\tif (!this._languageService.isRegisteredLanguageId(languageId)) {\n\t\t\treturn null;\n\t\t}\n\t\tconst grammarFactory = await this._getOrCreateGrammarFactory();\n\t\tif (!grammarFactory.has(languageId)) {\n\t\t\treturn null;\n\t\t}\n\t\tconst encodedLanguageId = this._languageService.languageIdCodec.encodeLanguageId(languageId);\n\t\tconst { grammar } = await grammarFactory.createGrammar(languageId, encodedLanguageId);\n\t\treturn grammar;\n\t}\n\n\tprivate _vscodeOniguruma: Promise<typeof import('vscode-oniguruma')> | null = null;\n\tprivate _getVSCodeOniguruma(): Promise<typeof import('vscode-oniguruma')> {\n\t\tif (!this._vscodeOniguruma) {\n\t\t\tthis._vscodeOniguruma = (async () => {\n\t\t\t\tconst [vscodeOniguruma, wasm] = await Promise.all([importAMDNodeModule<typeof import('vscode-oniguruma')>('vscode-oniguruma', 'release/main.js'), this._loadVSCodeOnigurumaWASM()]);\n\t\t\t\tawait vscodeOniguruma.loadWASM({\n\t\t\t\t\tdata: wasm,\n\t\t\t\t\tprint: (str: string) => {\n\t\t\t\t\t\tthis._debugModePrintFunc(str);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn vscodeOniguruma;\n\t\t\t})();\n\t\t}\n\t\treturn this._vscodeOniguruma;\n\t}\n\n\tprivate async _loadVSCodeOnigurumaWASM(): Promise<Response | ArrayBuffer> {\n\t\tif (isWeb) {\n\t\t\tconst response = await fetch(FileAccess.asBrowserUri('vscode-oniguruma/../onig.wasm').toString(true));\n\t\t\t// Using the response directly only works if the server sets the MIME type 'application/wasm'.\n\t\t\t// Otherwise, a TypeError is thrown when using the streaming compiler.\n\t\t\t// We therefore use the non-streaming compiler :(.\n\t\t\treturn await response.arrayBuffer();\n\t\t} else {\n\t\t\tconst response = await fetch(this._environmentService.isBuilt\n\t\t\t\t? FileAccess.asBrowserUri(`${nodeModulesAsarUnpackedPath}/vscode-oniguruma/release/onig.wasm`).toString(true)\n\t\t\t\t: FileAccess.asBrowserUri(`${nodeModulesPath}/vscode-oniguruma/release/onig.wasm`).toString(true));\n\t\t\treturn response;\n\t\t}\n\t}\n\n\tprivate _reportTokenizationTime(timeMs: number, languageId: string, sourceExtensionId: string | undefined, lineLength: number, fromWorker: boolean, isRandomSample: boolean): void {\n\t\tconst key = fromWorker ? 'async' : 'sync';\n\n\t\t// 50 events per hour (one event has a low probability)\n\t\tif (TextMateTokenizationFeature.reportTokenizationTimeCounter[key] > 50) {\n\t\t\t// Don't flood telemetry with too many events\n\t\t\treturn;\n\t\t}\n\t\tif (TextMateTokenizationFeature.reportTokenizationTimeCounter[key] === 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tTextMateTokenizationFeature.reportTokenizationTimeCounter[key] = 0;\n\t\t\t}, 1000 * 60 * 60);\n\t\t}\n\t\tTextMateTokenizationFeature.reportTokenizationTimeCounter[key]++;\n\n\t\tthis._telemetryService.publicLog2<{\n\t\t\ttimeMs: number;\n\t\t\tlanguageId: string;\n\t\t\tlineLength: number;\n\t\t\tfromWorker: boolean;\n\t\t\tsourceExtensionId: string | undefined;\n\t\t\tisRandomSample: boolean;\n\t\t\ttokenizationSetting: number;\n\t\t}, {\n\t\t\towner: 'hediet';\n\n\t\t\ttimeMs: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'To understand how long it took to tokenize a random line' };\n\t\t\tlanguageId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'To relate the performance to the language' };\n\t\t\tlineLength: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'To relate the performance to the line length' };\n\t\t\tfromWorker: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'To figure out if this line was tokenized sync or async' };\n\t\t\tsourceExtensionId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'To figure out which extension contributed the grammar' };\n\t\t\tisRandomSample: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'To figure out if this is a random sample or measured because of some other condition.' };\n\t\t\ttokenizationSetting: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'To understand if the user has async tokenization enabled. 0=sync, 1=async, 2=verification' };\n\n\t\t\tcomment: 'This event gives insight about the performance certain grammars.';\n\t\t}>('editor.tokenizedLine', {\n\t\t\ttimeMs,\n\t\t\tlanguageId,\n\t\t\tlineLength,\n\t\t\tfromWorker,\n\t\t\tsourceExtensionId,\n\t\t\tisRandomSample,\n\t\t\ttokenizationSetting: this.getAsyncTokenizationEnabled() ? (this.getAsyncTokenizationVerification() ? 2 : 1) : 0,\n\t\t});\n\t}\n}\n\nfunction toColorMap(colorMap: string[]): Color[] {\n\tconst result: Color[] = [null!];\n\tfor (let i = 1, len = colorMap.length; i < len; i++) {\n\t\tresult[i] = Color.fromHex(colorMap[i]);\n\t}\n\treturn result;\n}\n\nfunction equalsTokenRules(a: ITextMateThemingRule[] | null, b: ITextMateThemingRule[] | null): boolean {\n\tif (!b || !a || b.length !== a.length) {\n\t\treturn false;\n\t}\n\tfor (let i = b.length - 1; i >= 0; i--) {\n\t\tconst r1 = b[i];\n\t\tconst r2 = a[i];\n\t\tif (r1.scope !== r2.scope) {\n\t\t\treturn false;\n\t\t}\n\t\tconst s1 = r1.settings;\n\t\tconst s2 = r2.settings;\n\t\tif (s1 && s2) {\n\t\t\tif (s1.fontStyle !== s2.fontStyle || s1.foreground !== s2.foreground || s1.background !== s2.background) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (!s1 || !s2) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction validateGrammarExtensionPoint(extensionLocation: URI, syntax: ITMSyntaxExtensionPoint, collector: ExtensionMessageCollector, _languageService: ILanguageService): boolean {\n\tif (syntax.language && ((typeof syntax.language !== 'string') || !_languageService.isRegisteredLanguageId(syntax.language))) {\n\t\tcollector.error(nls.localize('invalid.language', \"Unknown language in `contributes.{0}.language`. Provided value: {1}\", grammarsExtPoint.name, String(syntax.language)));\n\t\treturn false;\n\t}\n\tif (!syntax.scopeName || (typeof syntax.scopeName !== 'string')) {\n\t\tcollector.error(nls.localize('invalid.scopeName', \"Expected string in `contributes.{0}.scopeName`. Provided value: {1}\", grammarsExtPoint.name, String(syntax.scopeName)));\n\t\treturn false;\n\t}\n\tif (!syntax.path || (typeof syntax.path !== 'string')) {\n\t\tcollector.error(nls.localize('invalid.path.0', \"Expected string in `contributes.{0}.path`. Provided value: {1}\", grammarsExtPoint.name, String(syntax.path)));\n\t\treturn false;\n\t}\n\tif (syntax.injectTo && (!Array.isArray(syntax.injectTo) || syntax.injectTo.some(scope => typeof scope !== 'string'))) {\n\t\tcollector.error(nls.localize('invalid.injectTo', \"Invalid value in `contributes.{0}.injectTo`. Must be an array of language scope names. Provided value: {1}\", grammarsExtPoint.name, JSON.stringify(syntax.injectTo)));\n\t\treturn false;\n\t}\n\tif (syntax.embeddedLanguages && !types.isObject(syntax.embeddedLanguages)) {\n\t\tcollector.error(nls.localize('invalid.embeddedLanguages', \"Invalid value in `contributes.{0}.embeddedLanguages`. Must be an object map from scope name to language. Provided value: {1}\", grammarsExtPoint.name, JSON.stringify(syntax.embeddedLanguages)));\n\t\treturn false;\n\t}\n\n\tif (syntax.tokenTypes && !types.isObject(syntax.tokenTypes)) {\n\t\tcollector.error(nls.localize('invalid.tokenTypes', \"Invalid value in `contributes.{0}.tokenTypes`. Must be an object map from scope name to token type. Provided value: {1}\", grammarsExtPoint.name, JSON.stringify(syntax.tokenTypes)));\n\t\treturn false;\n\t}\n\n\tconst grammarLocation = resources.joinPath(extensionLocation, syntax.path);\n\tif (!resources.isEqualOrParent(grammarLocation, extensionLocation)) {\n\t\tcollector.warn(nls.localize('invalid.path.1', \"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.\", grammarsExtPoint.name, grammarLocation.path, extensionLocation.path));\n\t}\n\treturn true;\n}\n\nfunction observableConfigValue<T>(key: string, languageId: string, defaultValue: T, configurationService: IConfigurationService): IObservable<T> {\n\treturn observableFromEvent(\n\t\t(handleChange) => configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(key, { overrideIdentifier: languageId })) {\n\t\t\t\thandleChange(e);\n\t\t\t}\n\t\t}),\n\t\t() => configurationService.getValue<T>(key, { overrideIdentifier: languageId }) ?? defaultValue,\n\t);\n}\n"]}