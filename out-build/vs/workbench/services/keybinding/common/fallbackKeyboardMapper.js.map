{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/keybinding/common/fallbackKeyboardMapper.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG;;OAEG;IACH,MAAa,IAAI;QAEhB,YACkB,CAA2B,EAC3B,CAAoB;YADpB,MAAC,GAAD,CAAC,CAA0B;YAC3B,MAAC,GAAD,CAAC,CAAmB;QAClC,CAAC;QAEE,aAAa;YACnB,OAAO,+CAA+C,CAAC;QACxD,CAAC;QAEM,oBAAoB,CAAC,aAA6B;YACxD,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,IAAqB,aAAa,CAAC,WAAW,CAAC,CAAC;YAChG,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,IAAqB,aAAa,CAAC,WAAW,CAAC,CAAC;YAC9F,MAAM,KAAK,GAAG,IAAI,iBAAG,CACpB,OAAO,EACP,aAAa,CAAC,QAAQ,EACtB,MAAM,EACN,aAAa,CAAC,OAAO,EACrB,aAAa,CAAC,OAAO,CACrB,CAAC;YACF,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,iBAAG,CAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/D,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;QAEM,iBAAiB,CAAC,UAAe;YACvC,OAAO,iCAAI,CAAuB,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAG,CAAC;QAC3E,CAAC;KACD;IA5BD,oBA4BC","file":"fallbackKeyboardMapper.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ResolvedKeybinding, KeyCodeChord, Keybinding } from 'vs/base/common/keybindings';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { IKeyboardEvent } from 'vs/platform/keybinding/common/keybinding';\nimport { USLayoutResolvedKeybinding } from 'vs/platform/keybinding/common/usLayoutResolvedKeybinding';\nimport { IKeyboardMapper } from 'vs/platform/keyboardLayout/common/keyboardMapper';\n\n/**\n * A keyboard mapper to be used when reading the keymap from the OS fails.\n */\nexport class FallbackKeyboardMapper implements IKeyboardMapper {\n\n\tconstructor(\n\t\tprivate readonly _mapAltGrToCtrlAlt: boolean,\n\t\tprivate readonly _OS: OperatingSystem,\n\t) { }\n\n\tpublic dumpDebugInfo(): string {\n\t\treturn 'FallbackKeyboardMapper dispatching on keyCode';\n\t}\n\n\tpublic resolveKeyboardEvent(keyboardEvent: IKeyboardEvent): ResolvedKeybinding {\n\t\tconst ctrlKey = keyboardEvent.ctrlKey || (this._mapAltGrToCtrlAlt && keyboardEvent.altGraphKey);\n\t\tconst altKey = keyboardEvent.altKey || (this._mapAltGrToCtrlAlt && keyboardEvent.altGraphKey);\n\t\tconst chord = new KeyCodeChord(\n\t\t\tctrlKey,\n\t\t\tkeyboardEvent.shiftKey,\n\t\t\taltKey,\n\t\t\tkeyboardEvent.metaKey,\n\t\t\tkeyboardEvent.keyCode\n\t\t);\n\t\tconst result = this.resolveKeybinding(new Keybinding([chord]));\n\t\treturn result[0];\n\t}\n\n\tpublic resolveKeybinding(keybinding: Keybinding): ResolvedKeybinding[] {\n\t\treturn USLayoutResolvedKeybinding.resolveKeybinding(keybinding, this._OS);\n\t}\n}\n"]}