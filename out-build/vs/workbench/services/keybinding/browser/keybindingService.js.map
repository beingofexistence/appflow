{"version":3,"sources":["vs/workbench/services/keybinding/browser/keybindingService.ts"],"names":[],"mappings":"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","file":"keybindingService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\n// base\nimport * as browser from 'vs/base/browser/browser';\nimport { BrowserFeatures, KeyboardSupport } from 'vs/base/browser/canIUse';\nimport * as dom from 'vs/base/browser/dom';\nimport { printKeyboardEvent, printStandardKeyboardEvent, StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { parse } from 'vs/base/common/json';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { UserSettingsLabelProvider } from 'vs/base/common/keybindingLabels';\nimport { KeybindingParser } from 'vs/base/common/keybindingParser';\nimport { Keybinding, KeyCodeChord, ResolvedKeybinding, ScanCodeChord } from 'vs/base/common/keybindings';\nimport { IMMUTABLE_CODE_TO_KEY_CODE, KeyCode, KeyCodeUtils, KeyMod, ScanCode, ScanCodeUtils } from 'vs/base/common/keyCodes';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport * as objects from 'vs/base/common/objects';\nimport { isMacintosh, OperatingSystem, OS } from 'vs/base/common/platform';\nimport { dirname } from 'vs/base/common/resources';\n\n// platform\nimport { MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { ContextKeyExpr, ContextKeyExpression, IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { FileOperation, IFileService } from 'vs/platform/files/common/files';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { Extensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { AbstractKeybindingService } from 'vs/platform/keybinding/common/abstractKeybindingService';\nimport { IKeybindingService, IKeyboardEvent, KeybindingsSchemaContribution } from 'vs/platform/keybinding/common/keybinding';\nimport { KeybindingResolver } from 'vs/platform/keybinding/common/keybindingResolver';\nimport { IExtensionKeybindingRule, IKeybindingItem, KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ResolvedKeybindingItem } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\nimport { IKeyboardLayoutService } from 'vs/platform/keyboardLayout/common/keyboardLayout';\nimport { IKeyboardMapper } from 'vs/platform/keyboardLayout/common/keyboardMapper';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\n// workbench\nimport { commandsExtensionPoint } from 'vs/workbench/services/actions/common/menusExtensionPoint';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { ExtensionMessageCollector, ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IKeyboard, INavigatorWithKeyboard } from 'vs/workbench/services/keybinding/browser/navigatorKeyboard';\nimport { getAllUnboundCommands } from 'vs/workbench/services/keybinding/browser/unboundCommands';\nimport { IUserKeybindingItem, KeybindingIO, OutputBuilder } from 'vs/workbench/services/keybinding/common/keybindingIO';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\n\ninterface ContributedKeyBinding {\n\tcommand: string;\n\targs?: any;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nfunction isValidContributedKeyBinding(keyBinding: ContributedKeyBinding, rejects: string[]): boolean {\n\tif (!keyBinding) {\n\t\trejects.push(nls.localize('nonempty', \"expected non-empty value.\"));\n\t\treturn false;\n\t}\n\tif (typeof keyBinding.command !== 'string') {\n\t\trejects.push(nls.localize('requirestring', \"property `{0}` is mandatory and must be of type `string`\", 'command'));\n\t\treturn false;\n\t}\n\tif (keyBinding.key && typeof keyBinding.key !== 'string') {\n\t\trejects.push(nls.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'key'));\n\t\treturn false;\n\t}\n\tif (keyBinding.when && typeof keyBinding.when !== 'string') {\n\t\trejects.push(nls.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'when'));\n\t\treturn false;\n\t}\n\tif (keyBinding.mac && typeof keyBinding.mac !== 'string') {\n\t\trejects.push(nls.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'mac'));\n\t\treturn false;\n\t}\n\tif (keyBinding.linux && typeof keyBinding.linux !== 'string') {\n\t\trejects.push(nls.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'linux'));\n\t\treturn false;\n\t}\n\tif (keyBinding.win && typeof keyBinding.win !== 'string') {\n\t\trejects.push(nls.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'win'));\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nconst keybindingType: IJSONSchema = {\n\ttype: 'object',\n\tdefault: { command: '', key: '' },\n\tproperties: {\n\t\tcommand: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.command', 'Identifier of the command to run when keybinding is triggered.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\targs: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.args', \"Arguments to pass to the command to execute.\")\n\t\t},\n\t\tkey: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.key', 'Key or key sequence (separate keys with plus-sign and sequences with space, e.g. Ctrl+O and Ctrl+L L for a chord).'),\n\t\t\ttype: 'string'\n\t\t},\n\t\tmac: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.mac', 'Mac specific key or key sequence.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\tlinux: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.linux', 'Linux specific key or key sequence.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\twin: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.win', 'Windows specific key or key sequence.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\twhen: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes.keybindings.when', 'Condition when the key is active.'),\n\t\t\ttype: 'string'\n\t\t},\n\t}\n};\n\nconst keybindingsExtPoint = ExtensionsRegistry.registerExtensionPoint<ContributedKeyBinding | ContributedKeyBinding[]>({\n\textensionPoint: 'keybindings',\n\tdeps: [commandsExtensionPoint],\n\tjsonSchema: {\n\t\tdescription: nls.localize('vscode.extension.contributes.keybindings', \"Contributes keybindings.\"),\n\t\toneOf: [\n\t\t\tkeybindingType,\n\t\t\t{\n\t\t\t\ttype: 'array',\n\t\t\t\titems: keybindingType\n\t\t\t}\n\t\t]\n\t}\n});\n\nconst NUMPAD_PRINTABLE_SCANCODES = [\n\tScanCode.NumpadDivide,\n\tScanCode.NumpadMultiply,\n\tScanCode.NumpadSubtract,\n\tScanCode.NumpadAdd,\n\tScanCode.Numpad1,\n\tScanCode.Numpad2,\n\tScanCode.Numpad3,\n\tScanCode.Numpad4,\n\tScanCode.Numpad5,\n\tScanCode.Numpad6,\n\tScanCode.Numpad7,\n\tScanCode.Numpad8,\n\tScanCode.Numpad9,\n\tScanCode.Numpad0,\n\tScanCode.NumpadDecimal\n];\n\nconst otherMacNumpadMapping = new Map<ScanCode, KeyCode>();\notherMacNumpadMapping.set(ScanCode.Numpad1, KeyCode.Digit1);\notherMacNumpadMapping.set(ScanCode.Numpad2, KeyCode.Digit2);\notherMacNumpadMapping.set(ScanCode.Numpad3, KeyCode.Digit3);\notherMacNumpadMapping.set(ScanCode.Numpad4, KeyCode.Digit4);\notherMacNumpadMapping.set(ScanCode.Numpad5, KeyCode.Digit5);\notherMacNumpadMapping.set(ScanCode.Numpad6, KeyCode.Digit6);\notherMacNumpadMapping.set(ScanCode.Numpad7, KeyCode.Digit7);\notherMacNumpadMapping.set(ScanCode.Numpad8, KeyCode.Digit8);\notherMacNumpadMapping.set(ScanCode.Numpad9, KeyCode.Digit9);\notherMacNumpadMapping.set(ScanCode.Numpad0, KeyCode.Digit0);\n\nexport class WorkbenchKeybindingService extends AbstractKeybindingService {\n\n\tprivate _keyboardMapper: IKeyboardMapper;\n\tprivate _cachedResolver: KeybindingResolver | null;\n\tprivate userKeybindings: UserKeybindings;\n\tprivate isComposingGlobalContextKey: IContextKey<boolean>;\n\tprivate readonly _contributions: KeybindingsSchemaContribution[] = [];\n\tprivate readonly kbsJsonSchema: KeybindingsJsonSchema;\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@ILogService logService: ILogService,\n\t\t@IKeyboardLayoutService private readonly keyboardLayoutService: IKeyboardLayoutService\n\t) {\n\t\tsuper(contextKeyService, commandService, telemetryService, notificationService, logService);\n\n\t\tthis.isComposingGlobalContextKey = contextKeyService.createKey('isComposing', false);\n\n\t\tthis.kbsJsonSchema = new KeybindingsJsonSchema();\n\t\tthis.updateKeybindingsJsonSchema();\n\n\t\tthis._keyboardMapper = this.keyboardLayoutService.getKeyboardMapper();\n\t\tthis.keyboardLayoutService.onDidChangeKeyboardLayout(() => {\n\t\t\tthis._keyboardMapper = this.keyboardLayoutService.getKeyboardMapper();\n\t\t\tthis.updateResolver();\n\t\t});\n\n\t\tthis._cachedResolver = null;\n\n\t\tthis.userKeybindings = this._register(new UserKeybindings(userDataProfileService, uriIdentityService, fileService, logService));\n\t\tthis.userKeybindings.initialize().then(() => {\n\t\t\tif (this.userKeybindings.keybindings.length) {\n\t\t\t\tthis.updateResolver();\n\t\t\t}\n\t\t});\n\t\tthis._register(this.userKeybindings.onDidChange(() => {\n\t\t\tlogService.debug('User keybindings changed');\n\t\t\tthis.updateResolver();\n\t\t}));\n\n\t\tkeybindingsExtPoint.setHandler((extensions) => {\n\n\t\t\tconst keybindings: IExtensionKeybindingRule[] = [];\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tthis._handleKeybindingsExtensionPointUser(extension.description.identifier, extension.description.isBuiltin, extension.value, extension.collector, keybindings);\n\t\t\t}\n\n\t\t\tKeybindingsRegistry.setExtensionKeybindings(keybindings);\n\t\t\tthis.updateResolver();\n\t\t});\n\n\t\tthis.updateKeybindingsJsonSchema();\n\t\tthis._register(extensionService.onDidRegisterExtensions(() => this.updateKeybindingsJsonSchema()));\n\n\t\tthis._register(this._registerKeyListeners(window));\n\t\tthis._register(dom.onDidCreateWindow(({ window, disposableStore }) => {\n\t\t\tdisposableStore.add(this._registerKeyListeners(window));\n\t\t}));\n\n\t\tthis._register(browser.onDidChangeFullscreen(() => {\n\t\t\tconst keyboard: IKeyboard | null = (<INavigatorWithKeyboard>navigator).keyboard;\n\n\t\t\tif (BrowserFeatures.keyboard === KeyboardSupport.None) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (browser.isFullscreen()) {\n\t\t\t\tkeyboard?.lock(['Escape']);\n\t\t\t} else {\n\t\t\t\tkeyboard?.unlock();\n\t\t\t}\n\n\t\t\t// update resolver which will bring back all unbound keyboard shortcuts\n\t\t\tthis._cachedResolver = null;\n\t\t\tthis._onDidUpdateKeybindings.fire();\n\t\t}));\n\t}\n\n\tprivate _registerKeyListeners(window: Window): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// for standard keybindings\n\t\tdisposables.add(dom.addDisposableListener(window, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tthis.isComposingGlobalContextKey.set(e.isComposing);\n\t\t\tconst keyEvent = new StandardKeyboardEvent(e);\n\t\t\tthis._log(`/ Received  keydown event - ${printKeyboardEvent(e)}`);\n\t\t\tthis._log(`| Converted keydown event - ${printStandardKeyboardEvent(keyEvent)}`);\n\t\t\tconst shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n\t\t\tif (shouldPreventDefault) {\n\t\t\t\tkeyEvent.preventDefault();\n\t\t\t}\n\t\t\tthis.isComposingGlobalContextKey.set(false);\n\t\t}));\n\n\t\t// for single modifier chord keybindings (e.g. shift shift)\n\t\tdisposables.add(dom.addDisposableListener(window, dom.EventType.KEY_UP, (e: KeyboardEvent) => {\n\t\t\tthis.isComposingGlobalContextKey.set(e.isComposing);\n\t\t\tconst keyEvent = new StandardKeyboardEvent(e);\n\t\t\tconst shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n\t\t\tif (shouldPreventDefault) {\n\t\t\t\tkeyEvent.preventDefault();\n\t\t\t}\n\t\t\tthis.isComposingGlobalContextKey.set(false);\n\t\t}));\n\n\t\treturn disposables;\n\t}\n\n\tpublic registerSchemaContribution(contribution: KeybindingsSchemaContribution): void {\n\t\tthis._contributions.push(contribution);\n\t\tif (contribution.onDidChange) {\n\t\t\tthis._register(contribution.onDidChange(() => this.updateKeybindingsJsonSchema()));\n\t\t}\n\t\tthis.updateKeybindingsJsonSchema();\n\t}\n\n\tprivate updateKeybindingsJsonSchema() {\n\t\tthis.kbsJsonSchema.updateSchema(this._contributions.flatMap(x => x.getSchemaAdditions()));\n\t}\n\n\tprivate _printKeybinding(keybinding: Keybinding): string {\n\t\treturn UserSettingsLabelProvider.toLabel(OS, keybinding.chords, (chord) => {\n\t\t\tif (chord instanceof KeyCodeChord) {\n\t\t\t\treturn KeyCodeUtils.toString(chord.keyCode);\n\t\t\t}\n\t\t\treturn ScanCodeUtils.toString(chord.scanCode);\n\t\t}) || '[null]';\n\t}\n\n\tprivate _printResolvedKeybinding(resolvedKeybinding: ResolvedKeybinding): string {\n\t\treturn resolvedKeybinding.getDispatchChords().map(x => x || '[null]').join(' ');\n\t}\n\n\tprivate _printResolvedKeybindings(output: string[], input: string, resolvedKeybindings: ResolvedKeybinding[]): void {\n\t\tconst padLength = 35;\n\t\tconst firstRow = `${input.padStart(padLength, ' ')} => `;\n\t\tif (resolvedKeybindings.length === 0) {\n\t\t\t// no binding found\n\t\t\toutput.push(`${firstRow}${'[NO BINDING]'.padStart(padLength, ' ')}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstRowIndentation = firstRow.length;\n\t\tconst isFirst = true;\n\t\tfor (const resolvedKeybinding of resolvedKeybindings) {\n\t\t\tif (isFirst) {\n\t\t\t\toutput.push(`${firstRow}${this._printResolvedKeybinding(resolvedKeybinding).padStart(padLength, ' ')}`);\n\t\t\t} else {\n\t\t\t\toutput.push(`${' '.repeat(firstRowIndentation)}${this._printResolvedKeybinding(resolvedKeybinding).padStart(padLength, ' ')}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _dumpResolveKeybindingDebugInfo(): string {\n\n\t\tconst seenBindings = new Set<string>();\n\t\tconst result: string[] = [];\n\n\t\tresult.push(`Default Resolved Keybindings (unique only):`);\n\t\tfor (const item of KeybindingsRegistry.getDefaultKeybindings()) {\n\t\t\tif (!item.keybinding) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst input = this._printKeybinding(item.keybinding);\n\t\t\tif (seenBindings.has(input)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tseenBindings.add(input);\n\t\t\tconst resolvedKeybindings = this._keyboardMapper.resolveKeybinding(item.keybinding);\n\t\t\tthis._printResolvedKeybindings(result, input, resolvedKeybindings);\n\t\t}\n\n\t\tresult.push(`User Resolved Keybindings (unique only):`);\n\t\tfor (const item of this.userKeybindings.keybindings) {\n\t\t\tif (!item.keybinding) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst input = item._sourceKey ?? 'Impossible: missing source key, but has keybinding';\n\t\t\tif (seenBindings.has(input)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tseenBindings.add(input);\n\t\t\tconst resolvedKeybindings = this._keyboardMapper.resolveKeybinding(item.keybinding);\n\t\t\tthis._printResolvedKeybindings(result, input, resolvedKeybindings);\n\t\t}\n\n\t\treturn result.join('\\n');\n\t}\n\n\tpublic _dumpDebugInfo(): string {\n\t\tconst layoutInfo = JSON.stringify(this.keyboardLayoutService.getCurrentKeyboardLayout(), null, '\\t');\n\t\tconst mapperInfo = this._keyboardMapper.dumpDebugInfo();\n\t\tconst resolvedKeybindings = this._dumpResolveKeybindingDebugInfo();\n\t\tconst rawMapping = JSON.stringify(this.keyboardLayoutService.getRawKeyboardMapping(), null, '\\t');\n\t\treturn `Layout info:\\n${layoutInfo}\\n\\n${resolvedKeybindings}\\n\\n${mapperInfo}\\n\\nRaw mapping:\\n${rawMapping}`;\n\t}\n\n\tpublic _dumpDebugInfoJSON(): string {\n\t\tconst info = {\n\t\t\tlayout: this.keyboardLayoutService.getCurrentKeyboardLayout(),\n\t\t\trawMapping: this.keyboardLayoutService.getRawKeyboardMapping()\n\t\t};\n\t\treturn JSON.stringify(info, null, '\\t');\n\t}\n\n\tpublic override customKeybindingsCount(): number {\n\t\treturn this.userKeybindings.keybindings.length;\n\t}\n\n\tprivate updateResolver(): void {\n\t\tthis._cachedResolver = null;\n\t\tthis._onDidUpdateKeybindings.fire();\n\t}\n\n\tprotected _getResolver(): KeybindingResolver {\n\t\tif (!this._cachedResolver) {\n\t\t\tconst defaults = this._resolveKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n\t\t\tconst overrides = this._resolveUserKeybindingItems(this.userKeybindings.keybindings, false);\n\t\t\tthis._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\n\t\t}\n\t\treturn this._cachedResolver;\n\t}\n\n\tprotected _documentHasFocus(): boolean {\n\t\t// it is possible that the document has lost focus, but the\n\t\t// window is still focused, e.g. when a <webview> element\n\t\t// has focus\n\t\treturn this.hostService.hasFocus;\n\t}\n\n\tprivate _resolveKeybindingItems(items: IKeybindingItem[], isDefault: boolean): ResolvedKeybindingItem[] {\n\t\tconst result: ResolvedKeybindingItem[] = [];\n\t\tlet resultLen = 0;\n\t\tfor (const item of items) {\n\t\t\tconst when = item.when || undefined;\n\t\t\tconst keybinding = item.keybinding;\n\t\t\tif (!keybinding) {\n\t\t\t\t// This might be a removal keybinding item in user settings => accept it\n\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, item.extensionId, item.isBuiltinExtension);\n\t\t\t} else {\n\t\t\t\tif (this._assertBrowserConflicts(keybinding)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst resolvedKeybindings = this._keyboardMapper.resolveKeybinding(keybinding);\n\t\t\t\tfor (let i = resolvedKeybindings.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst resolvedKeybinding = resolvedKeybindings[i];\n\t\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, item.extensionId, item.isBuiltinExtension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _resolveUserKeybindingItems(items: IUserKeybindingItem[], isDefault: boolean): ResolvedKeybindingItem[] {\n\t\tconst result: ResolvedKeybindingItem[] = [];\n\t\tlet resultLen = 0;\n\t\tfor (const item of items) {\n\t\t\tconst when = item.when || undefined;\n\t\t\tif (!item.keybinding) {\n\t\t\t\t// This might be a removal keybinding item in user settings => accept it\n\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n\t\t\t} else {\n\t\t\t\tconst resolvedKeybindings = this._keyboardMapper.resolveKeybinding(item.keybinding);\n\t\t\t\tfor (const resolvedKeybinding of resolvedKeybindings) {\n\t\t\t\t\tresult[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _assertBrowserConflicts(keybinding: Keybinding): boolean {\n\t\tif (BrowserFeatures.keyboard === KeyboardSupport.Always) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (BrowserFeatures.keyboard === KeyboardSupport.FullScreen && browser.isFullscreen()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (const chord of keybinding.chords) {\n\t\t\tif (!chord.metaKey && !chord.altKey && !chord.ctrlKey && !chord.shiftKey) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst modifiersMask = KeyMod.CtrlCmd | KeyMod.Alt | KeyMod.Shift;\n\n\t\t\tlet partModifiersMask = 0;\n\t\t\tif (chord.metaKey) {\n\t\t\t\tpartModifiersMask |= KeyMod.CtrlCmd;\n\t\t\t}\n\n\t\t\tif (chord.shiftKey) {\n\t\t\t\tpartModifiersMask |= KeyMod.Shift;\n\t\t\t}\n\n\t\t\tif (chord.altKey) {\n\t\t\t\tpartModifiersMask |= KeyMod.Alt;\n\t\t\t}\n\n\t\t\tif (chord.ctrlKey && OS === OperatingSystem.Macintosh) {\n\t\t\t\tpartModifiersMask |= KeyMod.WinCtrl;\n\t\t\t}\n\n\t\t\tif ((partModifiersMask & modifiersMask) === (KeyMod.CtrlCmd | KeyMod.Alt)) {\n\t\t\t\tif (chord instanceof ScanCodeChord && (chord.scanCode === ScanCode.ArrowLeft || chord.scanCode === ScanCode.ArrowRight)) {\n\t\t\t\t\t// console.warn('Ctrl/Cmd+Arrow keybindings should not be used by default in web. Offender: ', kb.getHashCode(), ' for ', commandId);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (chord instanceof KeyCodeChord && (chord.keyCode === KeyCode.LeftArrow || chord.keyCode === KeyCode.RightArrow)) {\n\t\t\t\t\t// console.warn('Ctrl/Cmd+Arrow keybindings should not be used by default in web. Offender: ', kb.getHashCode(), ' for ', commandId);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((partModifiersMask & modifiersMask) === KeyMod.CtrlCmd) {\n\t\t\t\tif (chord instanceof ScanCodeChord && (chord.scanCode >= ScanCode.Digit1 && chord.scanCode <= ScanCode.Digit0)) {\n\t\t\t\t\t// console.warn('Ctrl/Cmd+Num keybindings should not be used by default in web. Offender: ', kb.getHashCode(), ' for ', commandId);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (chord instanceof KeyCodeChord && (chord.keyCode >= KeyCode.Digit0 && chord.keyCode <= KeyCode.Digit9)) {\n\t\t\t\t\t// console.warn('Ctrl/Cmd+Num keybindings should not be used by default in web. Offender: ', kb.getHashCode(), ' for ', commandId);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic resolveKeybinding(kb: Keybinding): ResolvedKeybinding[] {\n\t\treturn this._keyboardMapper.resolveKeybinding(kb);\n\t}\n\n\tpublic resolveKeyboardEvent(keyboardEvent: IKeyboardEvent): ResolvedKeybinding {\n\t\tthis.keyboardLayoutService.validateCurrentKeyboardMapping(keyboardEvent);\n\t\treturn this._keyboardMapper.resolveKeyboardEvent(keyboardEvent);\n\t}\n\n\tpublic resolveUserBinding(userBinding: string): ResolvedKeybinding[] {\n\t\tconst keybinding = KeybindingParser.parseKeybinding(userBinding);\n\t\treturn (keybinding ? this._keyboardMapper.resolveKeybinding(keybinding) : []);\n\t}\n\n\tprivate _handleKeybindingsExtensionPointUser(extensionId: ExtensionIdentifier, isBuiltin: boolean, keybindings: ContributedKeyBinding | ContributedKeyBinding[], collector: ExtensionMessageCollector, result: IExtensionKeybindingRule[]): void {\n\t\tif (Array.isArray(keybindings)) {\n\t\t\tfor (let i = 0, len = keybindings.length; i < len; i++) {\n\t\t\t\tthis._handleKeybinding(extensionId, isBuiltin, i + 1, keybindings[i], collector, result);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._handleKeybinding(extensionId, isBuiltin, 1, keybindings, collector, result);\n\t\t}\n\t}\n\n\tprivate _handleKeybinding(extensionId: ExtensionIdentifier, isBuiltin: boolean, idx: number, keybindings: ContributedKeyBinding, collector: ExtensionMessageCollector, result: IExtensionKeybindingRule[]): void {\n\n\t\tconst rejects: string[] = [];\n\n\t\tif (isValidContributedKeyBinding(keybindings, rejects)) {\n\t\t\tconst rule = this._asCommandRule(extensionId, isBuiltin, idx++, keybindings);\n\t\t\tif (rule) {\n\t\t\t\tresult.push(rule);\n\t\t\t}\n\t\t}\n\n\t\tif (rejects.length > 0) {\n\t\t\tcollector.error(nls.localize(\n\t\t\t\t'invalid.keybindings',\n\t\t\t\t\"Invalid `contributes.{0}`: {1}\",\n\t\t\t\tkeybindingsExtPoint.name,\n\t\t\t\trejects.join('\\n')\n\t\t\t));\n\t\t}\n\t}\n\n\tprivate static bindToCurrentPlatform(key: string | undefined, mac: string | undefined, linux: string | undefined, win: string | undefined): string | undefined {\n\t\tif (OS === OperatingSystem.Windows && win) {\n\t\t\tif (win) {\n\t\t\t\treturn win;\n\t\t\t}\n\t\t} else if (OS === OperatingSystem.Macintosh) {\n\t\t\tif (mac) {\n\t\t\t\treturn mac;\n\t\t\t}\n\t\t} else {\n\t\t\tif (linux) {\n\t\t\t\treturn linux;\n\t\t\t}\n\t\t}\n\t\treturn key;\n\t}\n\n\tprivate _asCommandRule(extensionId: ExtensionIdentifier, isBuiltin: boolean, idx: number, binding: ContributedKeyBinding): IExtensionKeybindingRule | undefined {\n\n\t\tconst { command, args, when, key, mac, linux, win } = binding;\n\t\tconst keybinding = WorkbenchKeybindingService.bindToCurrentPlatform(key, mac, linux, win);\n\t\tif (!keybinding) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet weight: number;\n\t\tif (isBuiltin) {\n\t\t\tweight = KeybindingWeight.BuiltinExtension + idx;\n\t\t} else {\n\t\t\tweight = KeybindingWeight.ExternalExtension + idx;\n\t\t}\n\n\t\tconst commandAction = MenuRegistry.getCommand(command);\n\t\tconst precondition = commandAction && commandAction.precondition;\n\t\tlet fullWhen: ContextKeyExpression | undefined;\n\t\tif (when && precondition) {\n\t\t\tfullWhen = ContextKeyExpr.and(precondition, ContextKeyExpr.deserialize(when));\n\t\t} else if (when) {\n\t\t\tfullWhen = ContextKeyExpr.deserialize(when);\n\t\t} else if (precondition) {\n\t\t\tfullWhen = precondition;\n\t\t}\n\n\t\tconst desc: IExtensionKeybindingRule = {\n\t\t\tid: command,\n\t\t\targs,\n\t\t\twhen: fullWhen,\n\t\t\tweight: weight,\n\t\t\tkeybinding: KeybindingParser.parseKeybinding(keybinding),\n\t\t\textensionId: extensionId.value,\n\t\t\tisBuiltinExtension: isBuiltin\n\t\t};\n\t\treturn desc;\n\t}\n\n\tpublic override getDefaultKeybindingsContent(): string {\n\t\tconst resolver = this._getResolver();\n\t\tconst defaultKeybindings = resolver.getDefaultKeybindings();\n\t\tconst boundCommands = resolver.getDefaultBoundCommands();\n\t\treturn (\n\t\t\tWorkbenchKeybindingService._getDefaultKeybindings(defaultKeybindings)\n\t\t\t+ '\\n\\n'\n\t\t\t+ WorkbenchKeybindingService._getAllCommandsAsComment(boundCommands)\n\t\t);\n\t}\n\n\tprivate static _getDefaultKeybindings(defaultKeybindings: readonly ResolvedKeybindingItem[]): string {\n\t\tconst out = new OutputBuilder();\n\t\tout.writeLine('[');\n\n\t\tconst lastIndex = defaultKeybindings.length - 1;\n\t\tdefaultKeybindings.forEach((k, index) => {\n\t\t\tKeybindingIO.writeKeybindingItem(out, k);\n\t\t\tif (index !== lastIndex) {\n\t\t\t\tout.writeLine(',');\n\t\t\t} else {\n\t\t\t\tout.writeLine();\n\t\t\t}\n\t\t});\n\t\tout.writeLine(']');\n\t\treturn out.toString();\n\t}\n\n\tprivate static _getAllCommandsAsComment(boundCommands: Map<string, boolean>): string {\n\t\tconst unboundCommands = getAllUnboundCommands(boundCommands);\n\t\tconst pretty = unboundCommands.sort().join('\\n// - ');\n\t\treturn '// ' + nls.localize('unboundCommands', \"Here are other available commands: \") + '\\n// - ' + pretty;\n\t}\n\n\toverride mightProducePrintableCharacter(event: IKeyboardEvent): boolean {\n\t\tif (event.ctrlKey || event.metaKey || event.altKey) {\n\t\t\t// ignore ctrl/cmd/alt-combination but not shift-combinatios\n\t\t\treturn false;\n\t\t}\n\t\tconst code = ScanCodeUtils.toEnum(event.code);\n\n\t\tif (NUMPAD_PRINTABLE_SCANCODES.indexOf(code) !== -1) {\n\t\t\t// This is a numpad key that might produce a printable character based on NumLock.\n\t\t\t// Let's check if NumLock is on or off based on the event's keyCode.\n\t\t\t// e.g.\n\t\t\t// - when NumLock is off, ScanCode.Numpad4 produces KeyCode.LeftArrow\n\t\t\t// - when NumLock is on, ScanCode.Numpad4 produces KeyCode.NUMPAD_4\n\t\t\t// However, ScanCode.NumpadAdd always produces KeyCode.NUMPAD_ADD\n\t\t\tif (event.keyCode === IMMUTABLE_CODE_TO_KEY_CODE[code]) {\n\t\t\t\t// NumLock is on or this is /, *, -, + on the numpad\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (isMacintosh && event.keyCode === otherMacNumpadMapping.get(code)) {\n\t\t\t\t// on macOS, the numpad keys can also map to keys 1 - 0.\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tconst keycode = IMMUTABLE_CODE_TO_KEY_CODE[code];\n\t\tif (keycode !== -1) {\n\t\t\t// https://github.com/microsoft/vscode/issues/74934\n\t\t\treturn false;\n\t\t}\n\t\t// consult the KeyboardMapperFactory to check the given event for\n\t\t// a printable value.\n\t\tconst mapping = this.keyboardLayoutService.getRawKeyboardMapping();\n\t\tif (!mapping) {\n\t\t\treturn false;\n\t\t}\n\t\tconst keyInfo = mapping[event.code];\n\t\tif (!keyInfo) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!keyInfo.value || /\\s/.test(keyInfo.value)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n\nclass UserKeybindings extends Disposable {\n\n\tprivate _rawKeybindings: Object[] = [];\n\tprivate _keybindings: IUserKeybindingItem[] = [];\n\tget keybindings(): IUserKeybindingItem[] { return this._keybindings; }\n\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly watchDisposables = this._register(new DisposableStore());\n\n\tprivate readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userDataProfileService: IUserDataProfileService,\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\tprivate readonly fileService: IFileService,\n\t\tlogService: ILogService,\n\t) {\n\t\tsuper();\n\n\t\tthis.watch();\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reload().then(changed => {\n\t\t\tif (changed) {\n\t\t\t\tthis._onDidChange.fire();\n\t\t\t}\n\t\t}), 50));\n\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userDataProfileService.currentProfile.keybindingsResource))(() => {\n\t\t\tlogService.debug('Keybindings file changed');\n\t\t\tthis.reloadConfigurationScheduler.schedule();\n\t\t}));\n\n\t\tthis._register(this.fileService.onDidRunOperation((e) => {\n\t\t\tif (e.operation === FileOperation.WRITE && e.resource.toString() === this.userDataProfileService.currentProfile.keybindingsResource.toString()) {\n\t\t\t\tlogService.debug('Keybindings file written');\n\t\t\t\tthis.reloadConfigurationScheduler.schedule();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(userDataProfileService.onDidChangeCurrentProfile(e => {\n\t\t\tif (!this.uriIdentityService.extUri.isEqual(e.previous.keybindingsResource, e.profile.keybindingsResource)) {\n\t\t\t\te.join(this.whenCurrentProfileChanged());\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async whenCurrentProfileChanged(): Promise<void> {\n\t\tthis.watch();\n\t\tthis.reloadConfigurationScheduler.schedule();\n\t}\n\n\tprivate watch(): void {\n\t\tthis.watchDisposables.clear();\n\t\tthis.watchDisposables.add(this.fileService.watch(dirname(this.userDataProfileService.currentProfile.keybindingsResource)));\n\t\t// Also listen to the resource incase the resource is a symlink - https://github.com/microsoft/vscode/issues/118134\n\t\tthis.watchDisposables.add(this.fileService.watch(this.userDataProfileService.currentProfile.keybindingsResource));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tawait this.reload();\n\t}\n\n\tprivate async reload(): Promise<boolean> {\n\t\tconst newKeybindings = await this.readUserKeybindings();\n\t\tif (objects.equals(this._rawKeybindings, newKeybindings)) {\n\t\t\t// no change\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._rawKeybindings = newKeybindings;\n\t\tthis._keybindings = this._rawKeybindings.map((k) => KeybindingIO.readUserKeybindingItem(k));\n\t\treturn true;\n\t}\n\n\tprivate async readUserKeybindings(): Promise<Object[]> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userDataProfileService.currentProfile.keybindingsResource);\n\t\t\tconst value = parse(content.value.toString());\n\t\t\treturn Array.isArray(value)\n\t\t\t\t? value.filter(v => v && typeof v === 'object' /* just typeof === object doesn't catch `null` */)\n\t\t\t\t: [];\n\t\t} catch (e) {\n\t\t\treturn [];\n\t\t}\n\t}\n}\n\n/**\n * Registers the `keybindings.json`'s schema with the JSON schema registry. Allows updating the schema, e.g., when new commands are registered (e.g., by extensions).\n *\n * Lifecycle owned by `WorkbenchKeybindingService`. Must be instantiated only once.\n */\nclass KeybindingsJsonSchema {\n\n\tprivate static readonly schemaId = 'vscode://schemas/keybindings';\n\n\tprivate readonly commandsSchemas: IJSONSchema[] = [];\n\tprivate readonly commandsEnum: string[] = [];\n\tprivate readonly removalCommandsEnum: string[] = [];\n\tprivate readonly commandsEnumDescriptions: (string | undefined)[] = [];\n\tprivate readonly schema: IJSONSchema = {\n\t\tid: KeybindingsJsonSchema.schemaId,\n\t\ttype: 'array',\n\t\ttitle: nls.localize('keybindings.json.title', \"Keybindings configuration\"),\n\t\tallowTrailingCommas: true,\n\t\tallowComments: true,\n\t\tdefinitions: {\n\t\t\t'editorGroupsSchema': {\n\t\t\t\t'type': 'array',\n\t\t\t\t'items': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'groups': {\n\t\t\t\t\t\t\t'$ref': '#/definitions/editorGroupsSchema',\n\t\t\t\t\t\t\t'default': [{}, {}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'size': {\n\t\t\t\t\t\t\t'type': 'number',\n\t\t\t\t\t\t\t'default': 0.5\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'commandNames': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': this.commandsEnum,\n\t\t\t\t'enumDescriptions': <any>this.commandsEnumDescriptions,\n\t\t\t\t'description': nls.localize('keybindings.json.command', \"Name of the command to execute\"),\n\t\t\t},\n\t\t\t'commandType': {\n\t\t\t\t'anyOf': [ // repetition of this clause here and below is intentional: one is for nice diagnostics & one is for code completion\n\t\t\t\t\t{\n\t\t\t\t\t\t$ref: '#/definitions/commandNames'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t'enum': this.removalCommandsEnum,\n\t\t\t\t\t\t'enumDescriptions': <any>this.commandsEnumDescriptions,\n\t\t\t\t\t\t'description': nls.localize('keybindings.json.removalCommand', \"Name of the command to remove keyboard shortcut for\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t\t'commandsSchemas': {\n\t\t\t\t'allOf': this.commandsSchemas\n\t\t\t}\n\t\t},\n\t\titems: {\n\t\t\t'required': ['key'],\n\t\t\t'type': 'object',\n\t\t\t'defaultSnippets': [{ 'body': { 'key': '$1', 'command': '$2', 'when': '$3' } }],\n\t\t\t'properties': {\n\t\t\t\t'key': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'description': nls.localize('keybindings.json.key', \"Key or key sequence (separated by space)\"),\n\t\t\t\t},\n\t\t\t\t'command': {\n\t\t\t\t\t'anyOf': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'if': {\n\t\t\t\t\t\t\t\t'type': 'array'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'then': {\n\t\t\t\t\t\t\t\t'not': {\n\t\t\t\t\t\t\t\t\t'type': 'array'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'errorMessage': nls.localize('keybindings.commandsIsArray', \"Incorrect type. Expected \\\"{0}\\\". The field 'command' does not support running multiple commands. Use command 'runCommands' to pass it multiple commands to run.\", 'string')\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'else': {\n\t\t\t\t\t\t\t\t'$ref': '#/definitions/commandType'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'$ref': '#/definitions/commandType'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t'when': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'description': nls.localize('keybindings.json.when', \"Condition when the key is active.\")\n\t\t\t\t},\n\t\t\t\t'args': {\n\t\t\t\t\t'description': nls.localize('keybindings.json.args', \"Arguments to pass to the command to execute.\")\n\t\t\t\t}\n\t\t\t},\n\t\t\t'$ref': '#/definitions/commandsSchemas'\n\t\t}\n\t};\n\n\tprivate readonly schemaRegistry = Registry.as<IJSONContributionRegistry>(Extensions.JSONContribution);\n\n\tconstructor() {\n\t\tthis.schemaRegistry.registerSchema(KeybindingsJsonSchema.schemaId, this.schema);\n\t}\n\n\t// TODO@ulugbekna: can updates happen incrementally rather than rebuilding; concerns:\n\t// - is just appending additional schemas enough for the registry to pick them up?\n\t// - can `CommandsRegistry.getCommands` and `MenuRegistry.getCommands` return different values at different times? ie would just pushing new schemas from `additionalContributions` not be enough?\n\tupdateSchema(additionalContributions: readonly IJSONSchema[]) {\n\t\tthis.commandsSchemas.length = 0;\n\t\tthis.commandsEnum.length = 0;\n\t\tthis.removalCommandsEnum.length = 0;\n\t\tthis.commandsEnumDescriptions.length = 0;\n\n\t\tconst knownCommands = new Set<string>();\n\t\tconst addKnownCommand = (commandId: string, description?: string | undefined) => {\n\t\t\tif (!/^_/.test(commandId)) {\n\t\t\t\tif (!knownCommands.has(commandId)) {\n\t\t\t\t\tknownCommands.add(commandId);\n\n\t\t\t\t\tthis.commandsEnum.push(commandId);\n\t\t\t\t\tthis.commandsEnumDescriptions.push(description);\n\n\t\t\t\t\t// Also add the negative form for keybinding removal\n\t\t\t\t\tthis.removalCommandsEnum.push(`-${commandId}`);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst allCommands = CommandsRegistry.getCommands();\n\t\tfor (const [commandId, command] of allCommands) {\n\t\t\tconst commandDescription = command.description;\n\n\t\t\taddKnownCommand(commandId, commandDescription ? commandDescription.description : undefined);\n\n\t\t\tif (!commandDescription || !commandDescription.args || commandDescription.args.length !== 1 || !commandDescription.args[0].schema) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst argsSchema = commandDescription.args[0].schema;\n\t\t\tconst argsRequired = (\n\t\t\t\t(typeof commandDescription.args[0].isOptional !== 'undefined')\n\t\t\t\t\t? (!commandDescription.args[0].isOptional)\n\t\t\t\t\t: (Array.isArray(argsSchema.required) && argsSchema.required.length > 0)\n\t\t\t);\n\t\t\tconst addition = {\n\t\t\t\t'if': {\n\t\t\t\t\t'required': ['command'],\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'command': { 'const': commandId }\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'then': {\n\t\t\t\t\t'required': (<string[]>[]).concat(argsRequired ? ['args'] : []),\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'args': argsSchema\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.commandsSchemas.push(addition);\n\t\t}\n\n\t\tconst menuCommands = MenuRegistry.getCommands();\n\t\tfor (const commandId of menuCommands.keys()) {\n\t\t\taddKnownCommand(commandId);\n\t\t}\n\n\t\tthis.commandsSchemas.push(...additionalContributions);\n\t\tthis.schemaRegistry.notifySchemaChanged(KeybindingsJsonSchema.schemaId);\n\t}\n}\n\nregisterSingleton(IKeybindingService, WorkbenchKeybindingService, InstantiationType.Eager);\n"]}