{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/request/electron-sandbox/requestService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IASzF,IAAM,IAAI,GAAV,MAAM,IAAqB,SAAQ,qBAAI;QAE7C,YACwB,oBAAyB,EAChC,aAAkB,EACN,CAAuB;YAEnD,KAAK,CAAC,oBAAoB,EAAE,aAAa,CAAC,CAAC;YAFf,MAAC,GAAD,CAAC,CAAsB;QAGpD,CAAC;QAEQ,KAAK,CAAC,YAAY,CAAC,GAAW;YACtC,OAAO,IAAI,CAAC,CAAC,CAAiB,YAAY,CAAC,GAAG,CAAC,CAAC;QACjD,CAAC;KACD,CAAA;IAbY,oBAAI;mBAAJ,IAAI;QAGd,WAAA,mBAAG,CAAA;QACH,WAAA,SAAG,CAAA;QACH,WAAA,aAAI,CAAA;OALM,IAAI,CAahB;IAED,IAAA,gBAAG,EAAe,aAAG,EAAc,IAAI,oCAA4C,CAAC","file":"requestService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILoggerService } from 'vs/platform/log/common/log';\nimport { RequestService } from 'vs/platform/request/browser/requestService';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { INativeHostService } from 'vs/platform/native/common/native';\n\nexport class NativeRequestService extends RequestService {\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILoggerService loggerService: ILoggerService,\n\t\t@INativeHostService private nativeHostService: INativeHostService\n\t) {\n\t\tsuper(configurationService, loggerService);\n\t}\n\n\toverride async resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn this.nativeHostService.resolveProxy(url);\n\t}\n}\n\nregisterSingleton(IRequestService, NativeRequestService, InstantiationType.Delayed);\n"]}