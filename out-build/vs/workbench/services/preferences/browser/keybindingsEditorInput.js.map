{"version":3,"sources":["vs/workbench/services/preferences/browser/keybindingsEditorInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IAezF,IAAM,IAAI,GAAV,MAAM,IAAuB,SAAQ,iBAAG;;iBAE9B,OAAE,GAAW,6BAAX,AAAwC,CAAC;QAO3D,YAAmC,oBAAyB;YAC3D,KAAK,EAAE,CAAC;YALT,kBAAa,GAA2C,IAAI,CAAC;YAEpD,aAAQ,GAAG,SAAS,CAAC;YAK7B,IAAI,CAAC,gBAAgB,GAAG,oBAAoB,CAAC,cAAc,CAAC,6BAAI,EAAoB,aAAE,CAAC,CAAC;QACzF,CAAC;QAED,IAAa,MAAM;YAClB,OAAO,MAAI,CAAmB,EAAE,CAAC;QAClC,CAAC;QAEQ,OAAO;YACf,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAsB,EAAE,IAAoB,CAAC,CAAC;QACnE,CAAC;QAEQ,KAAK,CAAC,OAAO;YACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC;QAC9B,CAAC;QAEQ,OAAO,CAAC,UAA6C;YAC7D,OAAO,UAAU,YAAY,MAAI,CAAmB;QACrD,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;YAEhC,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;;IAnCW,oBAAI;mBAAJ,IAAI;QASH,WAAA,mBAAG,CAAA;OATJ,IAAI,CAoChB","file":"keybindingsEditorInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OS } from 'vs/base/common/platform';\nimport * as nls from 'vs/nls';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { KeybindingsEditorModel } from 'vs/workbench/services/preferences/browser/keybindingsEditorModel';\n\nexport interface IKeybindingsEditorSearchOptions {\n\tsearchValue: string;\n\trecordKeybindings: boolean;\n\tsortByPrecedence: boolean;\n}\n\nexport class KeybindingsEditorInput extends EditorInput {\n\n\tstatic readonly ID: string = 'workbench.input.keybindings';\n\treadonly keybindingsModel: KeybindingsEditorModel;\n\n\tsearchOptions: IKeybindingsEditorSearchOptions | null = null;\n\n\treadonly resource = undefined;\n\n\tconstructor(@IInstantiationService instantiationService: IInstantiationService) {\n\t\tsuper();\n\n\t\tthis.keybindingsModel = instantiationService.createInstance(KeybindingsEditorModel, OS);\n\t}\n\n\toverride get typeId(): string {\n\t\treturn KeybindingsEditorInput.ID;\n\t}\n\n\toverride getName(): string {\n\t\treturn nls.localize('keybindingsInputName', \"Keyboard Shortcuts\");\n\t}\n\n\toverride async resolve(): Promise<KeybindingsEditorModel> {\n\t\treturn this.keybindingsModel;\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\treturn otherInput instanceof KeybindingsEditorInput;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.keybindingsModel.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n"]}