{"version":3,"sources":["vs/workbench/services/label/common/labelService.ts"],"names":[],"mappings":"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","file":"labelService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable, Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { posix, sep, win32 } from 'vs/base/common/path';\nimport { Emitter } from 'vs/base/common/event';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IWorkspaceContextService, IWorkspace, isWorkspace, ISingleFolderWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier, IWorkspaceIdentifier, toWorkspaceIdentifier, WORKSPACE_EXTENSION, isUntitledWorkspace, isTemporaryWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { basenameOrAuthority, basename, joinPath, dirname } from 'vs/base/common/resources';\nimport { tildify, getPathLabel } from 'vs/base/common/labels';\nimport { ILabelService, ResourceLabelFormatter, ResourceLabelFormatting, IFormatterChangeEvent, Verbosity } from 'vs/platform/label/common/label';\nimport { ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { match } from 'vs/base/common/glob';\nimport { ILifecycleService, LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { isProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\nimport { OperatingSystem, OS } from 'vs/base/common/platform';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { Schemas } from 'vs/base/common/network';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { Memento } from 'vs/workbench/common/memento';\nimport { firstOrDefault } from 'vs/base/common/arrays';\n\nconst resourceLabelFormattersExtPoint = ExtensionsRegistry.registerExtensionPoint<ResourceLabelFormatter[]>({\n\textensionPoint: 'resourceLabelFormatters',\n\tjsonSchema: {\n\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters', 'Contributes resource label formatting rules.'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\trequired: ['scheme', 'formatting'],\n\t\t\tproperties: {\n\t\t\t\tscheme: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.scheme', 'URI scheme on which to match the formatter on. For example \"file\". Simple glob patterns are supported.'),\n\t\t\t\t},\n\t\t\t\tauthority: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.authority', 'URI authority on which to match the formatter on. Simple glob patterns are supported.'),\n\t\t\t\t},\n\t\t\t\tformatting: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.formatting', \"Rules for formatting uri resource labels.\"),\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.label', \"Label rules to display. For example: myLabel:/${path}. ${path}, ${scheme}, ${authority} and ${authoritySuffix} are supported as variables.\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\tseparator: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.separator', \"Separator to be used in the uri label display. '/' or '\\' as an example.\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstripPathStartingSeparator: {\n\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.stripPathStartingSeparator', \"Controls whether `${path}` substitutions should have starting separator characters stripped.\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttildify: {\n\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.tildify', \"Controls if the start of the uri label should be tildified when possible.\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\tworkspaceSuffix: {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.resourceLabelFormatters.formatting.workspaceSuffix', \"Suffix appended to the workspace label.\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nconst sepRegexp = /\\//g;\nconst labelMatchingRegexp = /\\$\\{(scheme|authoritySuffix|authority|path|(query)\\.(.+?))\\}/g;\n\nfunction hasDriveLetterIgnorePlatform(path: string): boolean {\n\treturn !!(path && path[2] === ':');\n}\n\nclass ResourceLabelFormattersHandler implements IWorkbenchContribution {\n\n\tprivate readonly formattersDisposables = new Map<ResourceLabelFormatter, IDisposable>();\n\n\tconstructor(@ILabelService labelService: ILabelService) {\n\t\tresourceLabelFormattersExtPoint.setHandler((extensions, delta) => {\n\t\t\tfor (const added of delta.added) {\n\t\t\t\tfor (const untrustedFormatter of added.value) {\n\n\t\t\t\t\t// We cannot trust that the formatter as it comes from an extension\n\t\t\t\t\t// adheres to our interface, so for the required properties we fill\n\t\t\t\t\t// in some defaults if missing.\n\n\t\t\t\t\tconst formatter = { ...untrustedFormatter };\n\t\t\t\t\tif (typeof formatter.formatting.label !== 'string') {\n\t\t\t\t\t\tformatter.formatting.label = '${authority}${path}';\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof formatter.formatting.separator !== `string`) {\n\t\t\t\t\t\tformatter.formatting.separator = sep;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isProposedApiEnabled(added.description, 'contribLabelFormatterWorkspaceTooltip') && formatter.formatting.workspaceTooltip) {\n\t\t\t\t\t\tformatter.formatting.workspaceTooltip = undefined; // workspaceTooltip is only proposed\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.formattersDisposables.set(formatter, labelService.registerFormatter(formatter));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const removed of delta.removed) {\n\t\t\t\tfor (const formatter of removed.value) {\n\t\t\t\t\tdispose(this.formattersDisposables.get(formatter));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(ResourceLabelFormattersHandler, LifecyclePhase.Restored);\n\nconst FORMATTER_CACHE_SIZE = 50;\n\ninterface IStoredFormatters {\n\tformatters?: ResourceLabelFormatter[];\n\ti?: number;\n}\n\nexport class LabelService extends Disposable implements ILabelService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate formatters: ResourceLabelFormatter[];\n\n\tprivate readonly _onDidChangeFormatters = this._register(new Emitter<IFormatterChangeEvent>({ leakWarningThreshold: 400 }));\n\treadonly onDidChangeFormatters = this._onDidChangeFormatters.event;\n\n\tprivate readonly storedFormattersMemento: Memento;\n\tprivate readonly storedFormatters: IStoredFormatters;\n\tprivate os: OperatingSystem;\n\tprivate userHome: URI | undefined;\n\n\tconstructor(\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t) {\n\t\tsuper();\n\n\t\t// Find some meaningful defaults until the remote environment\n\t\t// is resolved, by taking the current OS we are running in\n\t\t// and by taking the local `userHome` if we run on a local\n\t\t// file scheme.\n\t\tthis.os = OS;\n\t\tthis.userHome = pathService.defaultUriScheme === Schemas.file ? this.pathService.userHome({ preferLocal: true }) : undefined;\n\n\t\tconst memento = this.storedFormattersMemento = new Memento('cachedResourceLabelFormatters2', storageService);\n\t\tthis.storedFormatters = memento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tthis.formatters = this.storedFormatters?.formatters?.slice() || [];\n\n\t\t// Remote environment is potentially long running\n\t\tthis.resolveRemoteEnvironment();\n\t}\n\n\tprivate async resolveRemoteEnvironment(): Promise<void> {\n\n\t\t// OS\n\t\tconst env = await this.remoteAgentService.getEnvironment();\n\t\tthis.os = env?.os ?? OS;\n\n\t\t// User home\n\t\tthis.userHome = await this.pathService.userHome();\n\t}\n\n\tfindFormatting(resource: URI): ResourceLabelFormatting | undefined {\n\t\tlet bestResult: ResourceLabelFormatter | undefined;\n\n\t\tfor (const formatter of this.formatters) {\n\t\t\tif (formatter.scheme === resource.scheme) {\n\t\t\t\tif (!formatter.authority && (!bestResult || formatter.priority)) {\n\t\t\t\t\tbestResult = formatter;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (!formatter.authority) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tmatch(formatter.authority.toLowerCase(), resource.authority.toLowerCase()) &&\n\t\t\t\t\t(\n\t\t\t\t\t\t!bestResult ||\n\t\t\t\t\t\t!bestResult.authority ||\n\t\t\t\t\t\tformatter.authority.length > bestResult.authority.length ||\n\t\t\t\t\t\t((formatter.authority.length === bestResult.authority.length) && formatter.priority)\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tbestResult = formatter;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestResult ? bestResult.formatting : undefined;\n\t}\n\n\tgetUriLabel(resource: URI, options: { relative?: boolean; noPrefix?: boolean; separator?: '/' | '\\\\' } = {}): string {\n\t\tlet formatting = this.findFormatting(resource);\n\t\tif (formatting && options.separator) {\n\t\t\t// mixin separator if defined from the outside\n\t\t\tformatting = { ...formatting, separator: options.separator };\n\t\t}\n\n\t\tconst label = this.doGetUriLabel(resource, formatting, options);\n\n\t\t// Without formatting we still need to support the separator\n\t\t// as provided in options (https://github.com/microsoft/vscode/issues/130019)\n\t\tif (!formatting && options.separator) {\n\t\t\treturn label.replace(sepRegexp, options.separator);\n\t\t}\n\n\t\treturn label;\n\t}\n\n\tprivate doGetUriLabel(resource: URI, formatting?: ResourceLabelFormatting, options: { relative?: boolean; noPrefix?: boolean } = {}): string {\n\t\tif (!formatting) {\n\t\t\treturn getPathLabel(resource, {\n\t\t\t\tos: this.os,\n\t\t\t\ttildify: this.userHome ? { userHome: this.userHome } : undefined,\n\t\t\t\trelative: options.relative ? {\n\t\t\t\t\tnoPrefix: options.noPrefix,\n\t\t\t\t\tgetWorkspace: () => this.contextService.getWorkspace(),\n\t\t\t\t\tgetWorkspaceFolder: resource => this.contextService.getWorkspaceFolder(resource)\n\t\t\t\t} : undefined\n\t\t\t});\n\t\t}\n\n\t\t// Relative label\n\t\tif (options.relative && this.contextService) {\n\t\t\tlet folder = this.contextService.getWorkspaceFolder(resource);\n\t\t\tif (!folder) {\n\n\t\t\t\t// It is possible that the resource we want to resolve the\n\t\t\t\t// workspace folder for is not using the same scheme as\n\t\t\t\t// the folders in the workspace, so we help by trying again\n\t\t\t\t// to resolve a workspace folder by trying again with a\n\t\t\t\t// scheme that is workspace contained.\n\n\t\t\t\tconst workspace = this.contextService.getWorkspace();\n\t\t\t\tconst firstFolder = firstOrDefault(workspace.folders);\n\t\t\t\tif (firstFolder && resource.scheme !== firstFolder.uri.scheme && resource.path.startsWith(posix.sep)) {\n\t\t\t\t\tfolder = this.contextService.getWorkspaceFolder(firstFolder.uri.with({ path: resource.path }));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (folder) {\n\t\t\t\tconst folderLabel = this.formatUri(folder.uri, formatting, options.noPrefix);\n\n\t\t\t\tlet relativeLabel = this.formatUri(resource, formatting, options.noPrefix);\n\t\t\t\tlet overlap = 0;\n\t\t\t\twhile (relativeLabel[overlap] && relativeLabel[overlap] === folderLabel[overlap]) {\n\t\t\t\t\toverlap++;\n\t\t\t\t}\n\n\t\t\t\tif (!relativeLabel[overlap] || relativeLabel[overlap] === formatting.separator) {\n\t\t\t\t\trelativeLabel = relativeLabel.substring(1 + overlap);\n\t\t\t\t} else if (overlap === folderLabel.length && folder.uri.path === posix.sep) {\n\t\t\t\t\trelativeLabel = relativeLabel.substring(overlap);\n\t\t\t\t}\n\n\t\t\t\t// always show root basename if there are multiple folders\n\t\t\t\tconst hasMultipleRoots = this.contextService.getWorkspace().folders.length > 1;\n\t\t\t\tif (hasMultipleRoots && !options.noPrefix) {\n\t\t\t\t\tconst rootName = folder?.name ?? basenameOrAuthority(folder.uri);\n\t\t\t\t\trelativeLabel = relativeLabel ? `${rootName} • ${relativeLabel}` : rootName;\n\t\t\t\t}\n\n\t\t\t\treturn relativeLabel;\n\t\t\t}\n\t\t}\n\n\t\t// Absolute label\n\t\treturn this.formatUri(resource, formatting, options.noPrefix);\n\t}\n\n\tgetUriBasenameLabel(resource: URI): string {\n\t\tconst formatting = this.findFormatting(resource);\n\t\tconst label = this.doGetUriLabel(resource, formatting);\n\n\t\tlet pathLib: typeof win32 | typeof posix;\n\t\tif (formatting?.separator === win32.sep) {\n\t\t\tpathLib = win32;\n\t\t} else if (formatting?.separator === posix.sep) {\n\t\t\tpathLib = posix;\n\t\t} else {\n\t\t\tpathLib = (this.os === OperatingSystem.Windows) ? win32 : posix;\n\t\t}\n\n\t\treturn pathLib.basename(label);\n\t}\n\n\tgetWorkspaceLabel(workspace: IWorkspace | IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI, options?: { verbose: Verbosity }): string {\n\t\tif (isWorkspace(workspace)) {\n\t\t\tconst identifier = toWorkspaceIdentifier(workspace);\n\t\t\tif (isSingleFolderWorkspaceIdentifier(identifier) || isWorkspaceIdentifier(identifier)) {\n\t\t\t\treturn this.getWorkspaceLabel(identifier, options);\n\t\t\t}\n\n\t\t\treturn '';\n\t\t}\n\n\t\t// Workspace: Single Folder (as URI)\n\t\tif (URI.isUri(workspace)) {\n\t\t\treturn this.doGetSingleFolderWorkspaceLabel(workspace, options);\n\t\t}\n\n\t\t// Workspace: Single Folder (as workspace identifier)\n\t\tif (isSingleFolderWorkspaceIdentifier(workspace)) {\n\t\t\treturn this.doGetSingleFolderWorkspaceLabel(workspace.uri, options);\n\t\t}\n\n\t\t// Workspace: Multi Root\n\t\tif (isWorkspaceIdentifier(workspace)) {\n\t\t\treturn this.doGetWorkspaceLabel(workspace.configPath, options);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tprivate doGetWorkspaceLabel(workspaceUri: URI, options?: { verbose: Verbosity }): string {\n\n\t\t// Workspace: Untitled\n\t\tif (isUntitledWorkspace(workspaceUri, this.environmentService)) {\n\t\t\treturn localize('untitledWorkspace', \"Untitled (Workspace)\");\n\t\t}\n\n\t\t// Workspace: Temporary\n\t\tif (isTemporaryWorkspace(workspaceUri)) {\n\t\t\treturn localize('temporaryWorkspace', \"Workspace\");\n\t\t}\n\n\t\t// Workspace: Saved\n\t\tlet filename = basename(workspaceUri);\n\t\tif (filename.endsWith(WORKSPACE_EXTENSION)) {\n\t\t\tfilename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\n\t\t}\n\n\t\tlet label: string;\n\t\tswitch (options?.verbose) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\tlabel = filename; // skip suffix for short label\n\t\t\t\tbreak;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\tlabel = localize('workspaceNameVerbose', \"{0} (Workspace)\", this.getUriLabel(joinPath(dirname(workspaceUri), filename)));\n\t\t\t\tbreak;\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\tdefault:\n\t\t\t\tlabel = localize('workspaceName', \"{0} (Workspace)\", filename);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (options?.verbose === Verbosity.SHORT) {\n\t\t\treturn label; // skip suffix for short label\n\t\t}\n\n\t\treturn this.appendWorkspaceSuffix(label, workspaceUri);\n\t}\n\n\tprivate doGetSingleFolderWorkspaceLabel(folderUri: URI, options?: { verbose: Verbosity }): string {\n\t\tlet label: string;\n\t\tswitch (options?.verbose) {\n\t\t\tcase Verbosity.LONG:\n\t\t\t\tlabel = this.getUriLabel(folderUri);\n\t\t\t\tbreak;\n\t\t\tcase Verbosity.SHORT:\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\tdefault:\n\t\t\t\tlabel = basename(folderUri) || posix.sep;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (options?.verbose === Verbosity.SHORT) {\n\t\t\treturn label; // skip suffix for short label\n\t\t}\n\n\t\treturn this.appendWorkspaceSuffix(label, folderUri);\n\t}\n\n\tgetSeparator(scheme: string, authority?: string): '/' | '\\\\' {\n\t\tconst formatter = this.findFormatting(URI.from({ scheme, authority }));\n\n\t\treturn formatter?.separator || posix.sep;\n\t}\n\n\tgetHostLabel(scheme: string, authority?: string): string {\n\t\tconst formatter = this.findFormatting(URI.from({ scheme, authority }));\n\n\t\treturn formatter?.workspaceSuffix || authority || '';\n\t}\n\n\tgetHostTooltip(scheme: string, authority?: string): string | undefined {\n\t\tconst formatter = this.findFormatting(URI.from({ scheme, authority }));\n\n\t\treturn formatter?.workspaceTooltip;\n\t}\n\n\tregisterCachedFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\tconst list = this.storedFormatters.formatters ??= [];\n\n\t\tlet replace = list.findIndex(f => f.scheme === formatter.scheme && f.authority === formatter.authority);\n\t\tif (replace === -1 && list.length >= FORMATTER_CACHE_SIZE) {\n\t\t\treplace = FORMATTER_CACHE_SIZE - 1; // at max capacity, replace the last element\n\t\t}\n\n\t\tif (replace === -1) {\n\t\t\tlist.unshift(formatter);\n\t\t} else {\n\t\t\tfor (let i = replace; i > 0; i--) {\n\t\t\t\tlist[i] = list[i - 1];\n\t\t\t}\n\t\t\tlist[0] = formatter;\n\t\t}\n\n\t\tthis.storedFormattersMemento.saveMemento();\n\n\t\treturn this.registerFormatter(formatter);\n\t}\n\n\tregisterFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\tthis.formatters.push(formatter);\n\t\tthis._onDidChangeFormatters.fire({ scheme: formatter.scheme });\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis.formatters = this.formatters.filter(f => f !== formatter);\n\t\t\t\tthis._onDidChangeFormatters.fire({ scheme: formatter.scheme });\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate formatUri(resource: URI, formatting: ResourceLabelFormatting, forceNoTildify?: boolean): string {\n\t\tlet label = formatting.label.replace(labelMatchingRegexp, (match, token, qsToken, qsValue) => {\n\t\t\tswitch (token) {\n\t\t\t\tcase 'scheme': return resource.scheme;\n\t\t\t\tcase 'authority': return resource.authority;\n\t\t\t\tcase 'authoritySuffix': {\n\t\t\t\t\tconst i = resource.authority.indexOf('+');\n\t\t\t\t\treturn i === -1 ? resource.authority : resource.authority.slice(i + 1);\n\t\t\t\t}\n\t\t\t\tcase 'path':\n\t\t\t\t\treturn formatting.stripPathStartingSeparator\n\t\t\t\t\t\t? resource.path.slice(resource.path[0] === formatting.separator ? 1 : 0)\n\t\t\t\t\t\t: resource.path;\n\t\t\t\tdefault: {\n\t\t\t\t\tif (qsToken === 'query') {\n\t\t\t\t\t\tconst { query } = resource;\n\t\t\t\t\t\tif (query && query[0] === '{' && query[query.length - 1] === '}') {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\treturn JSON.parse(query)[qsValue] || '';\n\t\t\t\t\t\t\t} catch { }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// convert \\c:\\something => C:\\something\n\t\tif (formatting.normalizeDriveLetter && hasDriveLetterIgnorePlatform(label)) {\n\t\t\tlabel = label.charAt(1).toUpperCase() + label.substr(2);\n\t\t}\n\n\t\tif (formatting.tildify && !forceNoTildify) {\n\t\t\tif (this.userHome) {\n\t\t\t\tlabel = tildify(label, this.userHome.fsPath, this.os);\n\t\t\t}\n\t\t}\n\n\t\tif (formatting.authorityPrefix && resource.authority) {\n\t\t\tlabel = formatting.authorityPrefix + label;\n\t\t}\n\n\t\treturn label.replace(sepRegexp, formatting.separator);\n\t}\n\n\tprivate appendWorkspaceSuffix(label: string, uri: URI): string {\n\t\tconst formatting = this.findFormatting(uri);\n\t\tconst suffix = formatting && (typeof formatting.workspaceSuffix === 'string') ? formatting.workspaceSuffix : undefined;\n\n\t\treturn suffix ? `${label} [${suffix}]` : label;\n\t}\n}\n\nregisterSingleton(ILabelService, LabelService, InstantiationType.Delayed);\n"]}