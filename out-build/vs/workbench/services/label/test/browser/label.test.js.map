{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/label/test/browser/label.test.ts"],"names":[],"mappings":"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","file":"label.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as resources from 'vs/base/common/resources';\nimport * as assert from 'assert';\nimport { TestEnvironmentService, TestLifecycleService, TestPathService, TestRemoteAgentService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { URI } from 'vs/base/common/uri';\nimport { LabelService } from 'vs/workbench/services/label/common/labelService';\nimport { TestContextService, TestStorageService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { WorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { TestWorkspace, Workspace } from 'vs/platform/workspace/test/common/testWorkspace';\nimport { isWindows } from 'vs/base/common/platform';\nimport { StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { Memento } from 'vs/workbench/common/memento';\nimport { ResourceLabelFormatter } from 'vs/platform/label/common/label';\nimport { sep } from 'vs/base/common/path';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nsuite('URI Label', () => {\n\tlet labelService: LabelService;\n\tlet storageService: TestStorageService;\n\n\tsetup(() => {\n\t\tstorageService = new TestStorageService();\n\t\tlabelService = new LabelService(TestEnvironmentService, new TestContextService(), new TestPathService(URI.file('/foobar')), new TestRemoteAgentService(), storageService, new TestLifecycleService());\n\t});\n\n\ttest('custom scheme', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL/${path}/${authority}/END',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: true,\n\t\t\t\tnormalizeDriveLetter: true\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse('vscode://microsoft.com/1/2/3/4/5');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABEL//1/2/3/4/5/microsoft.com/END');\n\t\tassert.strictEqual(labelService.getUriBasenameLabel(uri1), 'END');\n\t});\n\n\ttest('file scheme', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'file',\n\t\t\tformatting: {\n\t\t\t\tlabel: '${path}',\n\t\t\t\tseparator: sep,\n\t\t\t\ttildify: !isWindows,\n\t\t\t\tnormalizeDriveLetter: isWindows\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = TestWorkspace.folders[0].uri.with({ path: TestWorkspace.folders[0].uri.path.concat('/a/b/c/d') });\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: true }), isWindows ? 'a\\\\b\\\\c\\\\d' : 'a/b/c/d');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), isWindows ? 'C:\\\\testWorkspace\\\\a\\\\b\\\\c\\\\d' : '/testWorkspace/a/b/c/d');\n\t\tassert.strictEqual(labelService.getUriBasenameLabel(uri1), 'd');\n\n\t\tconst uri2 = URI.file('c:\\\\1/2/3');\n\t\tassert.strictEqual(labelService.getUriLabel(uri2, { relative: false }), isWindows ? 'C:\\\\1\\\\2\\\\3' : '/c:\\\\1/2/3');\n\t\tassert.strictEqual(labelService.getUriBasenameLabel(uri2), '3');\n\t});\n\n\ttest('separator', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL\\\\${path}\\\\${authority}\\\\END',\n\t\t\t\tseparator: '\\\\',\n\t\t\t\ttildify: true,\n\t\t\t\tnormalizeDriveLetter: true\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse('vscode://microsoft.com/1/2/3/4/5');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABEL\\\\\\\\1\\\\2\\\\3\\\\4\\\\5\\\\microsoft.com\\\\END');\n\t\tassert.strictEqual(labelService.getUriBasenameLabel(uri1), 'END');\n\t});\n\n\ttest('custom authority', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tauthority: 'micro*',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL/${path}/${authority}/END',\n\t\t\t\tseparator: '/'\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse('vscode://microsoft.com/1/2/3/4/5');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABEL//1/2/3/4/5/microsoft.com/END');\n\t\tassert.strictEqual(labelService.getUriBasenameLabel(uri1), 'END');\n\t});\n\n\ttest('mulitple authority', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tauthority: 'not_matching_but_long',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'first',\n\t\t\t\tseparator: '/'\n\t\t\t}\n\t\t});\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tauthority: 'microsof*',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'second',\n\t\t\t\tseparator: '/'\n\t\t\t}\n\t\t});\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tauthority: 'mi*',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'third',\n\t\t\t\tseparator: '/'\n\t\t\t}\n\t\t});\n\n\t\t// Make sure the most specific authority is picked\n\t\tconst uri1 = URI.parse('vscode://microsoft.com/1/2/3/4/5');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'second');\n\t\tassert.strictEqual(labelService.getUriBasenameLabel(uri1), 'second');\n\t});\n\n\ttest('custom query', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL${query.prefix}: ${query.path}/END',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: true,\n\t\t\t\tnormalizeDriveLetter: true\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse(`vscode://microsoft.com/1/2/3/4/5?${encodeURIComponent(JSON.stringify({ prefix: 'prefix', path: 'path' }))}`);\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABELprefix: path/END');\n\t});\n\n\ttest('custom query without value', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL${query.prefix}: ${query.path}/END',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: true,\n\t\t\t\tnormalizeDriveLetter: true\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse(`vscode://microsoft.com/1/2/3/4/5?${encodeURIComponent(JSON.stringify({ path: 'path' }))}`);\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABEL: path/END');\n\t});\n\n\ttest('custom query without query json', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL${query.prefix}: ${query.path}/END',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: true,\n\t\t\t\tnormalizeDriveLetter: true\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse('vscode://microsoft.com/1/2/3/4/5?path=foo');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABEL: /END');\n\t});\n\n\ttest('custom query without query', function () {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'vscode',\n\t\t\tformatting: {\n\t\t\t\tlabel: 'LABEL${query.prefix}: ${query.path}/END',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: true,\n\t\t\t\tnormalizeDriveLetter: true\n\t\t\t}\n\t\t});\n\n\t\tconst uri1 = URI.parse('vscode://microsoft.com/1/2/3/4/5');\n\t\tassert.strictEqual(labelService.getUriLabel(uri1, { relative: false }), 'LABEL: /END');\n\t});\n\n\n\ttest('label caching', () => {\n\t\tconst m = new Memento('cachedResourceLabelFormatters2', storageService).getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tconst makeFormatter = (scheme: string): ResourceLabelFormatter => ({ formatting: { label: `\\${path} (${scheme})`, separator: '/' }, scheme });\n\t\tassert.deepStrictEqual(m, {});\n\n\t\t// registers a new formatter:\n\t\tlabelService.registerCachedFormatter(makeFormatter('a'));\n\t\tassert.deepStrictEqual(m, { formatters: [makeFormatter('a')] });\n\n\t\t// registers a 2nd formatter:\n\t\tlabelService.registerCachedFormatter(makeFormatter('b'));\n\t\tassert.deepStrictEqual(m, { formatters: [makeFormatter('b'), makeFormatter('a')] });\n\n\t\t// promotes a formatter on re-register:\n\t\tlabelService.registerCachedFormatter(makeFormatter('a'));\n\t\tassert.deepStrictEqual(m, { formatters: [makeFormatter('a'), makeFormatter('b')] });\n\n\t\t// no-ops if already in first place:\n\t\tlabelService.registerCachedFormatter(makeFormatter('a'));\n\t\tassert.deepStrictEqual(m, { formatters: [makeFormatter('a'), makeFormatter('b')] });\n\n\t\t// limits the cache:\n\t\tfor (let i = 0; i < 100; i++) {\n\t\t\tlabelService.registerCachedFormatter(makeFormatter(`i${i}`));\n\t\t}\n\t\tconst expected: ResourceLabelFormatter[] = [];\n\t\tfor (let i = 50; i < 100; i++) {\n\t\t\texpected.unshift(makeFormatter(`i${i}`));\n\t\t}\n\t\tassert.deepStrictEqual(m, { formatters: expected });\n\n\t\tdelete (m as any).formatters;\n\t});\n});\n\n\nsuite('multi-root workspace', () => {\n\tlet labelService: LabelService;\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tconst sources = URI.file('folder1/src');\n\t\tconst tests = URI.file('folder1/test');\n\t\tconst other = URI.file('folder2');\n\n\t\tlabelService = disposables.add(new LabelService(\n\t\t\tTestEnvironmentService,\n\t\t\tnew TestContextService(\n\t\t\t\tnew Workspace('test-workspace', [\n\t\t\t\t\tnew WorkspaceFolder({ uri: sources, index: 0, name: 'Sources' }),\n\t\t\t\t\tnew WorkspaceFolder({ uri: tests, index: 1, name: 'Tests' }),\n\t\t\t\t\tnew WorkspaceFolder({ uri: other, index: 2, name: resources.basename(other) }),\n\t\t\t\t])),\n\t\t\tnew TestPathService(),\n\t\t\tnew TestRemoteAgentService(),\n\t\t\tdisposables.add(new TestStorageService()),\n\t\t\tdisposables.add(new TestLifecycleService())\n\t\t));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('labels of files in multiroot workspaces are the foldername followed by offset from the folder', () => {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'file',\n\t\t\tformatting: {\n\t\t\t\tlabel: '${authority}${path}',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: false,\n\t\t\t\tnormalizeDriveLetter: false,\n\t\t\t\tauthorityPrefix: '//',\n\t\t\t\tworkspaceSuffix: ''\n\t\t\t}\n\t\t});\n\n\t\tconst tests = {\n\t\t\t'folder1/src/file': 'Sources • file',\n\t\t\t'folder1/src/folder/file': 'Sources • folder/file',\n\t\t\t'folder1/src': 'Sources',\n\t\t\t'folder1/other': '/folder1/other',\n\t\t\t'folder2/other': 'folder2 • other',\n\t\t};\n\n\t\tObject.entries(tests).forEach(([path, label]) => {\n\t\t\tconst generated = labelService.getUriLabel(URI.file(path), { relative: true });\n\t\t\tassert.strictEqual(generated, label);\n\t\t});\n\t});\n\n\ttest('labels with context after path', () => {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'file',\n\t\t\tformatting: {\n\t\t\t\tlabel: '${path} (${scheme})',\n\t\t\t\tseparator: '/',\n\t\t\t}\n\t\t});\n\n\t\tconst tests = {\n\t\t\t'folder1/src/file': 'Sources • file (file)',\n\t\t\t'folder1/src/folder/file': 'Sources • folder/file (file)',\n\t\t\t'folder1/src': 'Sources',\n\t\t\t'folder1/other': '/folder1/other (file)',\n\t\t\t'folder2/other': 'folder2 • other (file)',\n\t\t};\n\n\t\tObject.entries(tests).forEach(([path, label]) => {\n\t\t\tconst generated = labelService.getUriLabel(URI.file(path), { relative: true });\n\t\t\tassert.strictEqual(generated, label, path);\n\t\t});\n\t});\n\n\ttest('stripPathStartingSeparator', () => {\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'file',\n\t\t\tformatting: {\n\t\t\t\tlabel: '${path}',\n\t\t\t\tseparator: '/',\n\t\t\t\tstripPathStartingSeparator: true\n\t\t\t}\n\t\t});\n\n\t\tconst tests = {\n\t\t\t'folder1/src/file': 'Sources • file',\n\t\t\t'other/blah': 'other/blah',\n\t\t};\n\n\t\tObject.entries(tests).forEach(([path, label]) => {\n\t\t\tconst generated = labelService.getUriLabel(URI.file(path), { relative: true });\n\t\t\tassert.strictEqual(generated, label, path);\n\t\t});\n\t});\n\n\ttest('relative label without formatter', () => {\n\t\tconst rootFolder = URI.parse('myscheme://myauthority/');\n\n\t\tlabelService = disposables.add(new LabelService(\n\t\t\tTestEnvironmentService,\n\t\t\tnew TestContextService(\n\t\t\t\tnew Workspace('test-workspace', [\n\t\t\t\t\tnew WorkspaceFolder({ uri: rootFolder, index: 0, name: 'FSProotFolder' }),\n\t\t\t\t])),\n\t\t\tnew TestPathService(undefined, rootFolder.scheme),\n\t\t\tnew TestRemoteAgentService(),\n\t\t\tdisposables.add(new TestStorageService()),\n\t\t\tdisposables.add(new TestLifecycleService())\n\t\t));\n\n\t\tconst generated = labelService.getUriLabel(URI.parse('myscheme://myauthority/some/folder/test.txt'), { relative: true });\n\t\tif (isWindows) {\n\t\t\tassert.strictEqual(generated, 'some\\\\folder\\\\test.txt');\n\t\t} else {\n\t\t\tassert.strictEqual(generated, 'some/folder/test.txt');\n\t\t}\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n\nsuite('workspace at FSP root', () => {\n\tlet labelService: LabelService;\n\n\tsetup(() => {\n\t\tconst rootFolder = URI.parse('myscheme://myauthority/');\n\n\t\tlabelService = new LabelService(\n\t\t\tTestEnvironmentService,\n\t\t\tnew TestContextService(\n\t\t\t\tnew Workspace('test-workspace', [\n\t\t\t\t\tnew WorkspaceFolder({ uri: rootFolder, index: 0, name: 'FSProotFolder' }),\n\t\t\t\t])),\n\t\t\tnew TestPathService(),\n\t\t\tnew TestRemoteAgentService(),\n\t\t\tnew TestStorageService(),\n\t\t\tnew TestLifecycleService()\n\t\t);\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: 'myscheme',\n\t\t\tformatting: {\n\t\t\t\tlabel: '${scheme}://${authority}${path}',\n\t\t\t\tseparator: '/',\n\t\t\t\ttildify: false,\n\t\t\t\tnormalizeDriveLetter: false,\n\t\t\t\tworkspaceSuffix: '',\n\t\t\t\tauthorityPrefix: '',\n\t\t\t\tstripPathStartingSeparator: false\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('non-relative label', () => {\n\n\t\tconst tests = {\n\t\t\t'myscheme://myauthority/myFile1.txt': 'myscheme://myauthority/myFile1.txt',\n\t\t\t'myscheme://myauthority/folder/myFile2.txt': 'myscheme://myauthority/folder/myFile2.txt',\n\t\t};\n\n\t\tObject.entries(tests).forEach(([uriString, label]) => {\n\t\t\tconst generated = labelService.getUriLabel(URI.parse(uriString), { relative: false });\n\t\t\tassert.strictEqual(generated, label);\n\t\t});\n\t});\n\n\ttest('relative label', () => {\n\n\t\tconst tests = {\n\t\t\t'myscheme://myauthority/myFile1.txt': 'myFile1.txt',\n\t\t\t'myscheme://myauthority/folder/myFile2.txt': 'folder/myFile2.txt',\n\t\t};\n\n\t\tObject.entries(tests).forEach(([uriString, label]) => {\n\t\t\tconst generated = labelService.getUriLabel(URI.parse(uriString), { relative: true });\n\t\t\tassert.strictEqual(generated, label);\n\t\t});\n\t});\n\n\ttest('relative label with explicit path separator', () => {\n\t\tlet generated = labelService.getUriLabel(URI.parse('myscheme://myauthority/some/folder/test.txt'), { relative: true, separator: '/' });\n\t\tassert.strictEqual(generated, 'some/folder/test.txt');\n\n\t\tgenerated = labelService.getUriLabel(URI.parse('myscheme://myauthority/some/folder/test.txt'), { relative: true, separator: '\\\\' });\n\t\tassert.strictEqual(generated, 'some\\\\folder\\\\test.txt');\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}