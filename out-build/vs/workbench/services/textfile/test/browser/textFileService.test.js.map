{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/textfile/test/browser/textFileService.test.ts"],"names":[],"mappings":"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","file":"textFileService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { workbenchInstantiationService, TestServiceAccessor, ITestTextFileEditorModelManager } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { ensureNoDisposablesAreLeakedInTestSuite, toResource } from 'vs/base/test/common/utils';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { TextFileEditorModel } from 'vs/workbench/services/textfile/common/textFileEditorModel';\nimport { FileOperation } from 'vs/platform/files/common/files';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nsuite('Files - TextFileService', () => {\n\n\tconst disposables = new DisposableStore();\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\t\tdisposables.add(<ITestTextFileEditorModelManager>accessor.textFileService.files);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('isDirty/getDirty - files and untitled', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file.txt'), 'utf8', undefined));\n\t\t(<ITestTextFileEditorModelManager>accessor.textFileService.files).add(model.resource, model);\n\n\t\tawait model.resolve();\n\n\t\tassert.ok(!accessor.textFileService.isDirty(model.resource));\n\t\tmodel.textEditorModel!.setValue('foo');\n\n\t\tassert.ok(accessor.textFileService.isDirty(model.resource));\n\n\t\tconst untitled = disposables.add(await accessor.textFileService.untitled.resolve());\n\n\t\tassert.ok(!accessor.textFileService.isDirty(untitled.resource));\n\t\tuntitled.textEditorModel?.setValue('changed');\n\n\t\tassert.ok(accessor.textFileService.isDirty(untitled.resource));\n\t});\n\n\ttest('save - file', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file.txt'), 'utf8', undefined));\n\t\t(<ITestTextFileEditorModelManager>accessor.textFileService.files).add(model.resource, model);\n\n\t\tawait model.resolve();\n\t\tmodel.textEditorModel!.setValue('foo');\n\t\tassert.ok(accessor.textFileService.isDirty(model.resource));\n\n\t\tconst res = await accessor.textFileService.save(model.resource);\n\t\tassert.strictEqual(res?.toString(), model.resource.toString());\n\t\tassert.ok(!accessor.textFileService.isDirty(model.resource));\n\t});\n\n\ttest('saveAll - file', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file.txt'), 'utf8', undefined));\n\t\t(<ITestTextFileEditorModelManager>accessor.textFileService.files).add(model.resource, model);\n\n\t\tawait model.resolve();\n\t\tmodel.textEditorModel!.setValue('foo');\n\t\tassert.ok(accessor.textFileService.isDirty(model.resource));\n\n\t\tconst res = await accessor.textFileService.save(model.resource);\n\t\tassert.strictEqual(res?.toString(), model.resource.toString());\n\t\tassert.ok(!accessor.textFileService.isDirty(model.resource));\n\t});\n\n\ttest('saveAs - file', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file.txt'), 'utf8', undefined));\n\t\t(<ITestTextFileEditorModelManager>accessor.textFileService.files).add(model.resource, model);\n\t\taccessor.fileDialogService.setPickFileToSave(model.resource);\n\n\t\tawait model.resolve();\n\t\tmodel.textEditorModel!.setValue('foo');\n\t\tassert.ok(accessor.textFileService.isDirty(model.resource));\n\n\t\tconst res = await accessor.textFileService.saveAs(model.resource);\n\t\tassert.strictEqual(res!.toString(), model.resource.toString());\n\t\tassert.ok(!accessor.textFileService.isDirty(model.resource));\n\t});\n\n\ttest('revert - file', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file.txt'), 'utf8', undefined));\n\t\t(<ITestTextFileEditorModelManager>accessor.textFileService.files).add(model.resource, model);\n\t\taccessor.fileDialogService.setPickFileToSave(model.resource);\n\n\t\tawait model.resolve();\n\t\tmodel!.textEditorModel!.setValue('foo');\n\t\tassert.ok(accessor.textFileService.isDirty(model.resource));\n\n\t\tawait accessor.textFileService.revert(model.resource);\n\t\tassert.ok(!accessor.textFileService.isDirty(model.resource));\n\t});\n\n\ttest('create does not overwrite existing model', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/file.txt'), 'utf8', undefined));\n\t\t(<ITestTextFileEditorModelManager>accessor.textFileService.files).add(model.resource, model);\n\n\t\tawait model.resolve();\n\t\tmodel!.textEditorModel!.setValue('foo');\n\t\tassert.ok(accessor.textFileService.isDirty(model.resource));\n\n\t\tlet eventCounter = 0;\n\n\t\tdisposables.add(accessor.workingCopyFileService.addFileOperationParticipant({\n\t\t\tparticipate: async files => {\n\t\t\t\tassert.strictEqual(files[0].target.toString(), model.resource.toString());\n\t\t\t\teventCounter++;\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(accessor.workingCopyFileService.onDidRunWorkingCopyFileOperation(e => {\n\t\t\tassert.strictEqual(e.operation, FileOperation.CREATE);\n\t\t\tassert.strictEqual(e.files[0].target.toString(), model.resource.toString());\n\t\t\teventCounter++;\n\t\t}));\n\n\t\tawait accessor.textFileService.create([{ resource: model.resource, value: 'Foo' }]);\n\t\tassert.ok(!accessor.textFileService.isDirty(model.resource));\n\n\t\tassert.strictEqual(eventCounter, 2);\n\t});\n\n\ttest('Filename Suggestion - Suggest prefix only when there are no relevant extensions', () => {\n\t\tdisposables.add(accessor.languageService.registerLanguage({\n\t\t\tid: 'plumbus0',\n\t\t\textensions: ['.one', '.two']\n\t\t}));\n\n\t\tconst suggested = accessor.textFileService.suggestFilename('shleem', 'Untitled-1');\n\t\tassert.strictEqual(suggested, 'Untitled-1');\n\t});\n\n\ttest('Filename Suggestion - Suggest prefix with first extension', () => {\n\t\tdisposables.add(accessor.languageService.registerLanguage({\n\t\t\tid: 'plumbus1',\n\t\t\textensions: ['.shleem', '.gazorpazorp'],\n\t\t\tfilenames: ['plumbus']\n\t\t}));\n\n\t\tconst suggested = accessor.textFileService.suggestFilename('plumbus1', 'Untitled-1');\n\t\tassert.strictEqual(suggested, 'Untitled-1.shleem');\n\t});\n\n\ttest('Filename Suggestion - Preserve extension if it matchers', () => {\n\t\tdisposables.add(accessor.languageService.registerLanguage({\n\t\t\tid: 'plumbus2',\n\t\t\textensions: ['.shleem', '.gazorpazorp'],\n\t\t}));\n\n\t\tconst suggested = accessor.textFileService.suggestFilename('plumbus2', 'Untitled-1.gazorpazorp');\n\t\tassert.strictEqual(suggested, 'Untitled-1.gazorpazorp');\n\t});\n\n\ttest('Filename Suggestion - Rewrite extension according to language', () => {\n\t\tdisposables.add(accessor.languageService.registerLanguage({\n\t\t\tid: 'plumbus2',\n\t\t\textensions: ['.shleem', '.gazorpazorp'],\n\t\t}));\n\n\t\tconst suggested = accessor.textFileService.suggestFilename('plumbus2', 'Untitled-1.foobar');\n\t\tassert.strictEqual(suggested, 'Untitled-1.shleem');\n\t});\n\n\ttest('Filename Suggestion - Suggest filename if there are no extensions', () => {\n\t\tdisposables.add(accessor.languageService.registerLanguage({\n\t\t\tid: 'plumbus2',\n\t\t\tfilenames: ['plumbus', 'shleem', 'gazorpazorp']\n\t\t}));\n\n\t\tconst suggested = accessor.textFileService.suggestFilename('plumbus2', 'Untitled-1');\n\t\tassert.strictEqual(suggested, 'plumbus');\n\t});\n\n\ttest('Filename Suggestion - Preserve filename if it matches', () => {\n\t\tdisposables.add(accessor.languageService.registerLanguage({\n\t\t\tid: 'plumbus2',\n\t\t\tfilenames: ['plumbus', 'shleem', 'gazorpazorp']\n\t\t}));\n\n\t\tconst suggested = accessor.textFileService.suggestFilename('plumbus2', 'gazorpazorp');\n\t\tassert.strictEqual(suggested, 'gazorpazorp');\n\t});\n\n\ttest('Filename Suggestion - Rewrites filename according to language', () => {\n\t\tdisposables.add(accessor.languageService.registerLanguage({\n\t\t\tid: 'plumbus2',\n\t\t\tfilenames: ['plumbus', 'shleem', 'gazorpazorp']\n\t\t}));\n\n\t\tconst suggested = accessor.textFileService.suggestFilename('plumbus2', 'foobar');\n\t\tassert.strictEqual(suggested, 'plumbus');\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}