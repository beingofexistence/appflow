{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/textfile/test/browser/textFileEditorModel.test.ts"],"names":[],"mappings":"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","file":"textFileEditorModel.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { TextFileEditorModel } from 'vs/workbench/services/textfile/common/textFileEditorModel';\nimport { EncodingMode, TextFileEditorModelState, snapshotToString, isTextFileEditorModel, ITextFileEditorModelSaveEvent } from 'vs/workbench/services/textfile/common/textfiles';\nimport { createFileEditorInput, workbenchInstantiationService, TestServiceAccessor, TestReadonlyTextFileEditorModel, getLastResolvedFileStat } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { ensureNoDisposablesAreLeakedInTestSuite, toResource } from 'vs/base/test/common/utils';\nimport { TextFileEditorModelManager } from 'vs/workbench/services/textfile/common/textFileEditorModelManager';\nimport { FileOperationResult, FileOperationError } from 'vs/platform/files/common/files';\nimport { DeferredPromise, timeout } from 'vs/base/common/async';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { createTextBufferFactory } from 'vs/editor/common/model/textModel';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { SaveReason, SaveSourceRegistry } from 'vs/workbench/common/editor';\nimport { isEqual } from 'vs/base/common/resources';\nimport { UTF16be } from 'vs/workbench/services/textfile/common/encoding';\nimport { isWeb } from 'vs/base/common/platform';\n\nsuite('Files - TextFileEditorModel', () => {\n\n\tfunction getLastModifiedTime(model: TextFileEditorModel): number {\n\t\tconst stat = getLastResolvedFileStat(model);\n\n\t\treturn stat ? stat.mtime : -1;\n\t}\n\n\tconst disposables = new DisposableStore();\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\tlet content: string;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\t\tcontent = accessor.fileService.getContent();\n\t\tdisposables.add(<TextFileEditorModelManager>accessor.textFileService.files);\n\t\tdisposables.add(toDisposable(() => accessor.fileService.setContent(content)));\n\t});\n\n\tteardown(async () => {\n\t\tfor (const textFileEditorModel of accessor.textFileService.files.models) {\n\t\t\ttextFileEditorModel.dispose();\n\t\t}\n\n\t\tdisposables.clear();\n\t});\n\n\ttest('basic events', async function () {\n\t\tconst model = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\t\taccessor.workingCopyService.testUnregisterWorkingCopy(model); // causes issues with subsequent resolves otherwise\n\n\t\tlet onDidResolveCounter = 0;\n\t\tdisposables.add(model.onDidResolve(() => onDidResolveCounter++));\n\n\t\tawait model.resolve();\n\n\t\tassert.strictEqual(onDidResolveCounter, 1);\n\n\t\tlet onDidChangeContentCounter = 0;\n\t\tdisposables.add(model.onDidChangeContent(() => onDidChangeContentCounter++));\n\n\t\tlet onDidChangeDirtyCounter = 0;\n\t\tdisposables.add(model.onDidChangeDirty(() => onDidChangeDirtyCounter++));\n\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('bar'));\n\n\t\tassert.strictEqual(onDidChangeContentCounter, 1);\n\t\tassert.strictEqual(onDidChangeDirtyCounter, 1);\n\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo'));\n\n\t\tassert.strictEqual(onDidChangeContentCounter, 2);\n\t\tassert.strictEqual(onDidChangeDirtyCounter, 1);\n\n\t\tawait model.revert();\n\n\t\tassert.strictEqual(onDidChangeDirtyCounter, 2);\n\t});\n\n\ttest('isTextFileEditorModel', async function () {\n\t\tconst model: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined);\n\n\t\tassert.strictEqual(isTextFileEditorModel(model), true);\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('save', async function () {\n\t\tconst model: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined);\n\n\t\tawait model.resolve();\n\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 0);\n\n\t\tlet savedEvent: ITextFileEditorModelSaveEvent | undefined = undefined;\n\t\tdisposables.add(model.onDidSave(e => savedEvent = e));\n\n\t\tawait model.save();\n\t\tassert.ok(!savedEvent);\n\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('bar'));\n\t\tassert.ok(getLastModifiedTime(model) <= Date.now());\n\t\tassert.ok(model.hasState(TextFileEditorModelState.DIRTY));\n\t\tassert.ok(model.isModified());\n\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\t\tassert.strictEqual(accessor.workingCopyService.isDirty(model.resource, model.typeId), true);\n\n\t\tlet workingCopyEvent = false;\n\t\tdisposables.add(accessor.workingCopyService.onDidChangeDirty(e => {\n\t\t\tif (e.resource.toString() === model.resource.toString()) {\n\t\t\t\tworkingCopyEvent = true;\n\t\t\t}\n\t\t}));\n\n\t\tconst source = SaveSourceRegistry.registerSource('testSource', 'Hello Save');\n\t\tconst pendingSave = model.save({ reason: SaveReason.AUTO, source });\n\t\tassert.ok(model.hasState(TextFileEditorModelState.PENDING_SAVE));\n\n\t\tawait Promise.all([pendingSave, model.joinState(TextFileEditorModelState.PENDING_SAVE)]);\n\n\t\tassert.ok(model.hasState(TextFileEditorModelState.SAVED));\n\t\tassert.ok(!model.isDirty());\n\t\tassert.ok(!model.isModified());\n\t\tassert.ok(savedEvent);\n\t\tassert.ok((savedEvent as ITextFileEditorModelSaveEvent).stat);\n\t\tassert.strictEqual((savedEvent as ITextFileEditorModelSaveEvent).reason, SaveReason.AUTO);\n\t\tassert.strictEqual((savedEvent as ITextFileEditorModelSaveEvent).source, source);\n\t\tassert.ok(workingCopyEvent);\n\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 0);\n\t\tassert.strictEqual(accessor.workingCopyService.isDirty(model.resource, model.typeId), false);\n\n\t\tsavedEvent = undefined;\n\n\t\tawait model.save({ force: true });\n\t\tassert.ok(savedEvent);\n\n\t\tmodel.dispose();\n\t\tassert.ok(!accessor.modelService.getModel(model.resource));\n\t});\n\n\ttest('save - touching also emits saved event', async function () {\n\t\tconst model: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined);\n\n\t\tawait model.resolve();\n\n\t\tlet savedEvent = false;\n\t\tdisposables.add(model.onDidSave(() => savedEvent = true));\n\n\t\tlet workingCopyEvent = false;\n\t\tdisposables.add(accessor.workingCopyService.onDidChangeDirty(e => {\n\t\t\tif (e.resource.toString() === model.resource.toString()) {\n\t\t\t\tworkingCopyEvent = true;\n\t\t\t}\n\t\t}));\n\n\t\tawait model.save({ force: true });\n\n\t\tassert.ok(savedEvent);\n\t\tassert.ok(!workingCopyEvent);\n\n\t\tmodel.dispose();\n\t\tassert.ok(!accessor.modelService.getModel(model.resource));\n\t});\n\n\ttest('save - touching with error turns model dirty', async function () {\n\t\tconst model: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined);\n\n\t\tawait model.resolve();\n\n\t\tlet saveErrorEvent = false;\n\t\tdisposables.add(model.onDidSaveError(() => saveErrorEvent = true));\n\n\t\tlet savedEvent = false;\n\t\tdisposables.add(model.onDidSave(() => savedEvent = true));\n\n\t\taccessor.fileService.writeShouldThrowError = new Error('failed to write');\n\t\ttry {\n\t\t\tawait model.save({ force: true });\n\n\t\t\tassert.ok(model.hasState(TextFileEditorModelState.ERROR));\n\t\t\tassert.ok(model.isDirty());\n\t\t\tassert.ok(model.isModified());\n\t\t\tassert.ok(saveErrorEvent);\n\n\t\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\t\t\tassert.strictEqual(accessor.workingCopyService.isDirty(model.resource, model.typeId), true);\n\t\t} finally {\n\t\t\taccessor.fileService.writeShouldThrowError = undefined;\n\t\t}\n\n\t\tawait model.save({ force: true });\n\n\t\tassert.ok(savedEvent);\n\t\tassert.strictEqual(model.isDirty(), false);\n\n\t\tmodel.dispose();\n\t\tassert.ok(!accessor.modelService.getModel(model.resource));\n\t});\n\n\ttest('save - returns false when save fails', async function () {\n\t\tconst model: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined);\n\n\t\tawait model.resolve();\n\n\t\taccessor.fileService.writeShouldThrowError = new Error('failed to write');\n\t\ttry {\n\t\t\tconst res = await model.save({ force: true });\n\t\t\tassert.strictEqual(res, false);\n\t\t} finally {\n\t\t\taccessor.fileService.writeShouldThrowError = undefined;\n\t\t}\n\n\t\tconst res = await model.save({ force: true });\n\t\tassert.strictEqual(res, true);\n\n\t\tmodel.dispose();\n\t\tassert.ok(!accessor.modelService.getModel(model.resource));\n\t});\n\n\ttest('save error (generic)', async function () {\n\t\tconst model: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined);\n\n\t\tawait model.resolve();\n\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('bar'));\n\n\t\tlet saveErrorEvent = false;\n\t\tdisposables.add(model.onDidSaveError(() => saveErrorEvent = true));\n\n\t\taccessor.fileService.writeShouldThrowError = new Error('failed to write');\n\t\ttry {\n\t\t\tconst pendingSave = model.save();\n\t\t\tassert.ok(model.hasState(TextFileEditorModelState.PENDING_SAVE));\n\n\t\t\tawait pendingSave;\n\n\t\t\tassert.ok(model.hasState(TextFileEditorModelState.ERROR));\n\t\t\tassert.ok(model.isDirty());\n\t\t\tassert.ok(model.isModified());\n\t\t\tassert.ok(saveErrorEvent);\n\n\t\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\t\t\tassert.strictEqual(accessor.workingCopyService.isDirty(model.resource, model.typeId), true);\n\n\t\t\tmodel.dispose();\n\t\t} finally {\n\t\t\taccessor.fileService.writeShouldThrowError = undefined;\n\t\t}\n\t});\n\n\ttest('save error (conflict)', async function () {\n\t\tconst model: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined);\n\n\t\tawait model.resolve();\n\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('bar'));\n\n\t\tlet saveErrorEvent = false;\n\t\tdisposables.add(model.onDidSaveError(() => saveErrorEvent = true));\n\n\t\taccessor.fileService.writeShouldThrowError = new FileOperationError('save conflict', FileOperationResult.FILE_MODIFIED_SINCE);\n\t\ttry {\n\t\t\tconst pendingSave = model.save();\n\t\t\tassert.ok(model.hasState(TextFileEditorModelState.PENDING_SAVE));\n\n\t\t\tawait pendingSave;\n\n\t\t\tassert.ok(model.hasState(TextFileEditorModelState.CONFLICT));\n\t\t\tassert.ok(model.isDirty());\n\t\t\tassert.ok(model.isModified());\n\t\t\tassert.ok(saveErrorEvent);\n\n\t\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\t\t\tassert.strictEqual(accessor.workingCopyService.isDirty(model.resource, model.typeId), true);\n\n\t\t\tmodel.dispose();\n\t\t} finally {\n\t\t\taccessor.fileService.writeShouldThrowError = undefined;\n\t\t}\n\t});\n\n\ttest('setEncoding - encode', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tlet encodingEvent = false;\n\t\tdisposables.add(model.onDidChangeEncoding(() => encodingEvent = true));\n\n\t\tawait model.setEncoding('utf8', EncodingMode.Encode); // no-op\n\t\tassert.strictEqual(getLastModifiedTime(model), -1);\n\n\t\tassert.ok(!encodingEvent);\n\n\t\tawait model.setEncoding('utf16', EncodingMode.Encode);\n\n\t\tassert.ok(encodingEvent);\n\n\t\tassert.ok(getLastModifiedTime(model) <= Date.now()); // indicates model was saved due to encoding change\n\t});\n\n\ttest('setEncoding - decode', async function () {\n\t\tlet model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\t\taccessor.workingCopyService.testUnregisterWorkingCopy(model); // causes issues with subsequent resolves otherwise\n\n\t\tawait model.setEncoding('utf16', EncodingMode.Decode);\n\n\t\t// we have to get the model again from working copy service\n\t\t// because `setEncoding` will resolve it again through the\n\t\t// text file service which is outside our scope\n\t\tmodel = accessor.workingCopyService.get(model) as TextFileEditorModel;\n\n\t\tassert.ok(model.isResolved()); // model got resolved due to decoding\n\t});\n\n\ttest('setEncoding - decode dirty file saves first', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\t\taccessor.workingCopyService.testUnregisterWorkingCopy(model); // causes issues with subsequent resolves otherwise\n\n\t\tawait model.resolve();\n\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('bar'));\n\t\tassert.strictEqual(model.isDirty(), true);\n\n\t\tawait model.setEncoding('utf16', EncodingMode.Decode);\n\n\t\tassert.strictEqual(model.isDirty(), false);\n\t});\n\n\ttest('encoding updates with language based configuration', async function () {\n\t\tconst languageId = 'text-file-model-test';\n\t\tdisposables.add(accessor.languageService.registerLanguage({\n\t\t\tid: languageId,\n\t\t}));\n\n\t\taccessor.testConfigurationService.setOverrideIdentifiers('files.encoding', [languageId]);\n\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\t\taccessor.workingCopyService.testUnregisterWorkingCopy(model); // causes issues with subsequent resolves otherwise\n\n\t\tawait model.resolve();\n\n\t\tconst deferredPromise = new DeferredPromise<TextFileEditorModel>();\n\n\t\t// We use this listener as a way to figure out that the working\n\t\t// copy was resolved again as part of the language change\n\t\tdisposables.add(accessor.workingCopyService.onDidRegister(e => {\n\t\t\tif (isEqual(e.resource, model.resource)) {\n\t\t\t\tdeferredPromise.complete(model as TextFileEditorModel);\n\t\t\t}\n\t\t}));\n\n\t\taccessor.testConfigurationService.setUserConfiguration('files.encoding', UTF16be);\n\n\t\tmodel.setLanguageId(languageId);\n\n\t\tawait deferredPromise.p;\n\n\t\tassert.strictEqual(model.getEncoding(), UTF16be);\n\t});\n\n\ttest('create with language', async function () {\n\t\tconst languageId = 'text-file-model-test';\n\t\tdisposables.add(accessor.languageService.registerLanguage({\n\t\t\tid: languageId,\n\t\t}));\n\n\t\tconst model: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', languageId);\n\n\t\tawait model.resolve();\n\n\t\tassert.strictEqual(model.textEditorModel!.getLanguageId(), languageId);\n\n\t\tmodel.dispose();\n\t\tassert.ok(!accessor.modelService.getModel(model.resource));\n\t});\n\n\ttest('disposes when underlying model is destroyed', async function () {\n\t\tconst model: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined);\n\n\t\tawait model.resolve();\n\n\t\tmodel.textEditorModel!.dispose();\n\t\tassert.ok(model.isDisposed());\n\t});\n\n\ttest('Resolve does not trigger save', async function () {\n\t\tconst model = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index.txt'), 'utf8', undefined);\n\t\tassert.ok(model.hasState(TextFileEditorModelState.SAVED));\n\n\t\tdisposables.add(model.onDidSave(() => assert.fail()));\n\t\tdisposables.add(model.onDidChangeDirty(() => assert.fail()));\n\n\t\tawait model.resolve();\n\t\tassert.ok(model.isResolved());\n\t\tmodel.dispose();\n\t\tassert.ok(!accessor.modelService.getModel(model.resource));\n\t});\n\n\ttest('Resolve returns dirty model as long as model is dirty', async function () {\n\t\tconst model = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tawait model.resolve();\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo'));\n\t\tassert.ok(model.isDirty());\n\t\tassert.ok(model.hasState(TextFileEditorModelState.DIRTY));\n\n\t\tawait model.resolve();\n\t\tassert.ok(model.isDirty());\n\t});\n\n\ttest('Resolve with contents', async function () {\n\t\tconst model: TextFileEditorModel = instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined);\n\n\t\tawait model.resolve({ contents: createTextBufferFactory('Hello World') });\n\n\t\tassert.strictEqual(model.textEditorModel?.getValue(), 'Hello World');\n\t\tassert.strictEqual(model.isDirty(), true);\n\n\t\tawait model.resolve({ contents: createTextBufferFactory('Hello Changes') });\n\n\t\tassert.strictEqual(model.textEditorModel?.getValue(), 'Hello Changes');\n\t\tassert.strictEqual(model.isDirty(), true);\n\n\t\t// verify that we do not mark the model as saved when undoing once because\n\t\t// we never really had a saved state\n\t\tawait model.textEditorModel!.undo();\n\t\tassert.ok(model.isDirty());\n\n\t\tmodel.dispose();\n\t\tassert.ok(!accessor.modelService.getModel(model.resource));\n\t});\n\n\ttest('Revert', async function () {\n\t\tlet eventCounter = 0;\n\n\t\tlet model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tdisposables.add(model.onDidRevert(() => eventCounter++));\n\n\t\tlet workingCopyEvent = false;\n\t\tdisposables.add(accessor.workingCopyService.onDidChangeDirty(e => {\n\t\t\tif (e.resource.toString() === model.resource.toString()) {\n\t\t\t\tworkingCopyEvent = true;\n\t\t\t}\n\t\t}));\n\n\t\tawait model.resolve();\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo'));\n\t\tassert.ok(model.isDirty());\n\t\tassert.ok(model.isModified());\n\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\t\tassert.strictEqual(accessor.workingCopyService.isDirty(model.resource, model.typeId), true);\n\n\t\taccessor.workingCopyService.testUnregisterWorkingCopy(model); // causes issues with subsequent resolves otherwise\n\n\t\tawait model.revert();\n\n\t\t// we have to get the model again from working copy service\n\t\t// because `setEncoding` will resolve it again through the\n\t\t// text file service which is outside our scope\n\t\tmodel = accessor.workingCopyService.get(model) as TextFileEditorModel;\n\n\t\tassert.strictEqual(model.isDirty(), false);\n\t\tassert.strictEqual(model.isModified(), false);\n\t\tassert.strictEqual(eventCounter, 1);\n\n\t\tassert.ok(workingCopyEvent);\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 0);\n\t\tassert.strictEqual(accessor.workingCopyService.isDirty(model.resource, model.typeId), false);\n\t});\n\n\ttest('Revert (soft)', async function () {\n\t\tlet eventCounter = 0;\n\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tdisposables.add(model.onDidRevert(() => eventCounter++));\n\n\t\tlet workingCopyEvent = false;\n\t\tdisposables.add(accessor.workingCopyService.onDidChangeDirty(e => {\n\t\t\tif (e.resource.toString() === model.resource.toString()) {\n\t\t\t\tworkingCopyEvent = true;\n\t\t\t}\n\t\t}));\n\n\t\tawait model.resolve();\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo'));\n\t\tassert.ok(model.isDirty());\n\t\tassert.ok(model.isModified());\n\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\t\tassert.strictEqual(accessor.workingCopyService.isDirty(model.resource, model.typeId), true);\n\n\t\tawait model.revert({ soft: true });\n\t\tassert.strictEqual(model.isDirty(), false);\n\t\tassert.strictEqual(model.isModified(), false);\n\t\tassert.strictEqual(model.textEditorModel!.getValue(), 'foo');\n\t\tassert.strictEqual(eventCounter, 1);\n\n\t\tassert.ok(workingCopyEvent);\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 0);\n\t\tassert.strictEqual(accessor.workingCopyService.isDirty(model.resource, model.typeId), false);\n\t});\n\n\ttest('Undo to saved state turns model non-dirty', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\t\tawait model.resolve();\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('Hello Text'));\n\t\tassert.ok(model.isDirty());\n\n\t\tawait model.textEditorModel!.undo();\n\t\tassert.ok(!model.isDirty());\n\t});\n\n\ttest('Resolve and undo turns model dirty', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\t\tawait model.resolve();\n\t\taccessor.fileService.setContent('Hello Change');\n\n\t\tawait model.resolve();\n\t\tawait model.textEditorModel!.undo();\n\t\tassert.ok(model.isDirty());\n\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\t\tassert.strictEqual(accessor.workingCopyService.isDirty(model.resource, model.typeId), true);\n\t});\n\n\ttest('Update Dirty', async function () {\n\t\tlet eventCounter = 0;\n\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tmodel.setDirty(true);\n\t\tassert.ok(!model.isDirty()); // needs to be resolved\n\n\t\tawait model.resolve();\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo'));\n\t\tassert.ok(model.isDirty());\n\n\t\tawait model.revert({ soft: true });\n\t\tassert.strictEqual(model.isDirty(), false);\n\n\t\tdisposables.add(model.onDidChangeDirty(() => eventCounter++));\n\n\t\tlet workingCopyEvent = false;\n\t\tdisposables.add(accessor.workingCopyService.onDidChangeDirty(e => {\n\t\t\tif (e.resource.toString() === model.resource.toString()) {\n\t\t\t\tworkingCopyEvent = true;\n\t\t\t}\n\t\t}));\n\n\t\tmodel.setDirty(true);\n\t\tassert.ok(model.isDirty());\n\t\tassert.strictEqual(eventCounter, 1);\n\t\tassert.ok(workingCopyEvent);\n\n\t\tmodel.setDirty(false);\n\t\tassert.strictEqual(model.isDirty(), false);\n\t\tassert.strictEqual(eventCounter, 2);\n\t});\n\n\ttest('No Dirty or saving for readonly models', async function () {\n\t\tlet workingCopyEvent = false;\n\t\tdisposables.add(accessor.workingCopyService.onDidChangeDirty(e => {\n\t\t\tif (e.resource.toString() === model.resource.toString()) {\n\t\t\t\tworkingCopyEvent = true;\n\t\t\t}\n\t\t}));\n\n\t\tconst model = disposables.add(instantiationService.createInstance(TestReadonlyTextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tlet saveEvent = false;\n\t\tdisposables.add(model.onDidSave(() => {\n\t\t\tsaveEvent = true;\n\t\t}));\n\n\t\tawait model.resolve();\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo'));\n\t\tassert.ok(!model.isDirty());\n\n\t\tawait model.save({ force: true });\n\t\tassert.strictEqual(saveEvent, false);\n\n\t\tawait model.revert({ soft: true });\n\t\tassert.ok(!model.isDirty());\n\n\t\tassert.ok(!workingCopyEvent);\n\t});\n\n\ttest('File not modified error is handled gracefully', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tawait model.resolve();\n\n\t\tconst mtime = getLastModifiedTime(model);\n\t\taccessor.textFileService.setReadStreamErrorOnce(new FileOperationError('error', FileOperationResult.FILE_NOT_MODIFIED_SINCE));\n\n\t\tawait model.resolve();\n\n\t\tassert.ok(model);\n\t\tassert.strictEqual(getLastModifiedTime(model), mtime);\n\t});\n\n\ttest('Resolve error is handled gracefully if model already exists', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tawait model.resolve();\n\t\taccessor.textFileService.setReadStreamErrorOnce(new FileOperationError('error', FileOperationResult.FILE_NOT_FOUND));\n\n\t\tawait model.resolve();\n\t\tassert.ok(model);\n\t});\n\n\ttest('save() and isDirty() - proper with check for mtimes', async function () {\n\t\tconst input1 = disposables.add(createFileEditorInput(instantiationService, toResource.call(this, '/path/index_async2.txt')));\n\t\tconst input2 = disposables.add(createFileEditorInput(instantiationService, toResource.call(this, '/path/index_async.txt')));\n\n\t\tconst model1 = disposables.add(await input1.resolve() as TextFileEditorModel);\n\t\tconst model2 = disposables.add(await input2.resolve() as TextFileEditorModel);\n\n\t\tmodel1.updateTextEditorModel(createTextBufferFactory('foo'));\n\n\t\tconst m1Mtime = assertIsDefined(getLastResolvedFileStat(model1)).mtime;\n\t\tconst m2Mtime = assertIsDefined(getLastResolvedFileStat(model2)).mtime;\n\t\tassert.ok(m1Mtime > 0);\n\t\tassert.ok(m2Mtime > 0);\n\n\t\tassert.ok(accessor.textFileService.isDirty(toResource.call(this, '/path/index_async2.txt')));\n\t\tassert.ok(!accessor.textFileService.isDirty(toResource.call(this, '/path/index_async.txt')));\n\n\t\tmodel2.updateTextEditorModel(createTextBufferFactory('foo'));\n\t\tassert.ok(accessor.textFileService.isDirty(toResource.call(this, '/path/index_async.txt')));\n\n\t\tawait timeout(10);\n\t\tawait accessor.textFileService.save(toResource.call(this, '/path/index_async.txt'));\n\t\tawait accessor.textFileService.save(toResource.call(this, '/path/index_async2.txt'));\n\t\tassert.ok(!accessor.textFileService.isDirty(toResource.call(this, '/path/index_async.txt')));\n\t\tassert.ok(!accessor.textFileService.isDirty(toResource.call(this, '/path/index_async2.txt')));\n\n\t\tif (isWeb) {\n\t\t\t// web tests does not ensure timeouts are respected at all, so we cannot\n\t\t\t// really assert the mtime to be different, only that it is equal or greater.\n\t\t\t// https://github.com/microsoft/vscode/issues/161886\n\t\t\tassert.ok(assertIsDefined(getLastResolvedFileStat(model1)).mtime >= m1Mtime);\n\t\t\tassert.ok(assertIsDefined(getLastResolvedFileStat(model2)).mtime >= m2Mtime);\n\t\t} else {\n\t\t\t// on desktop we want to assert this condition more strictly though\n\t\t\tassert.ok(assertIsDefined(getLastResolvedFileStat(model1)).mtime > m1Mtime);\n\t\t\tassert.ok(assertIsDefined(getLastResolvedFileStat(model2)).mtime > m2Mtime);\n\t\t}\n\t});\n\n\ttest('Save Participant', async function () {\n\t\tlet eventCounter = 0;\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tdisposables.add(model.onDidSave(() => {\n\t\t\tassert.strictEqual(snapshotToString(model.createSnapshot()!), eventCounter === 1 ? 'bar' : 'foobar');\n\t\t\tassert.ok(!model.isDirty());\n\t\t\teventCounter++;\n\t\t}));\n\n\t\tconst participant = accessor.textFileService.files.addSaveParticipant({\n\t\t\tparticipate: async model => {\n\t\t\t\tassert.ok(model.isDirty());\n\t\t\t\t(model as TextFileEditorModel).updateTextEditorModel(createTextBufferFactory('bar'));\n\t\t\t\tassert.ok(model.isDirty());\n\t\t\t\teventCounter++;\n\t\t\t}\n\t\t});\n\n\t\tawait model.resolve();\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo'));\n\t\tassert.ok(model.isDirty());\n\n\t\tawait model.save();\n\t\tassert.strictEqual(eventCounter, 2);\n\n\t\tparticipant.dispose();\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foobar'));\n\t\tassert.ok(model.isDirty());\n\n\t\tawait model.save();\n\t\tassert.strictEqual(eventCounter, 3);\n\t});\n\n\ttest('Save Participant - skip', async function () {\n\t\tlet eventCounter = 0;\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tdisposables.add(accessor.textFileService.files.addSaveParticipant({\n\t\t\tparticipate: async () => {\n\t\t\t\teventCounter++;\n\t\t\t}\n\t\t}));\n\n\t\tawait model.resolve();\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo'));\n\n\t\tawait model.save({ skipSaveParticipants: true });\n\t\tassert.strictEqual(eventCounter, 0);\n\t});\n\n\ttest('Save Participant, async participant', async function () {\n\t\tlet eventCounter = 0;\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tdisposables.add(model.onDidSave(() => {\n\t\t\tassert.ok(!model.isDirty());\n\t\t\teventCounter++;\n\t\t}));\n\n\t\tdisposables.add(accessor.textFileService.files.addSaveParticipant({\n\t\t\tparticipate: model => {\n\t\t\t\tassert.ok(model.isDirty());\n\t\t\t\t(model as TextFileEditorModel).updateTextEditorModel(createTextBufferFactory('bar'));\n\t\t\t\tassert.ok(model.isDirty());\n\t\t\t\teventCounter++;\n\n\t\t\t\treturn timeout(10);\n\t\t\t}\n\t\t}));\n\n\t\tawait model.resolve();\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo'));\n\n\t\tconst now = Date.now();\n\t\tawait model.save();\n\t\tassert.strictEqual(eventCounter, 2);\n\t\tassert.ok(Date.now() - now >= 10);\n\t});\n\n\ttest('Save Participant, bad participant', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tdisposables.add(accessor.textFileService.files.addSaveParticipant({\n\t\t\tparticipate: async () => {\n\t\t\t\tnew Error('boom');\n\t\t\t}\n\t\t}));\n\n\t\tawait model.resolve();\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo'));\n\n\t\tawait model.save();\n\t});\n\n\ttest('Save Participant, participant cancelled when saved again', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tconst participations: boolean[] = [];\n\n\t\tdisposables.add(accessor.textFileService.files.addSaveParticipant({\n\t\t\tparticipate: async (model, context, progress, token) => {\n\t\t\t\tawait timeout(10);\n\n\t\t\t\tif (!token.isCancellationRequested) {\n\t\t\t\t\tparticipations.push(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tawait model.resolve();\n\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo'));\n\t\tconst p1 = model.save();\n\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo 1'));\n\t\tconst p2 = model.save();\n\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo 2'));\n\t\tconst p3 = model.save();\n\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo 3'));\n\t\tconst p4 = model.save();\n\n\t\tawait Promise.all([p1, p2, p3, p4]);\n\t\tassert.strictEqual(participations.length, 1);\n\t});\n\n\ttest('Save Participant, calling save from within is unsupported but does not explode (sync save, no model change)', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tawait testSaveFromSaveParticipant(model, false, false, false);\n\t});\n\n\ttest('Save Participant, calling save from within is unsupported but does not explode (async save, no model change)', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tawait testSaveFromSaveParticipant(model, true, false, false);\n\t});\n\n\ttest('Save Participant, calling save from within is unsupported but does not explode (sync save, model change)', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tawait testSaveFromSaveParticipant(model, false, true, false);\n\t});\n\n\ttest('Save Participant, calling save from within is unsupported but does not explode (async save, model change)', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tawait testSaveFromSaveParticipant(model, true, true, false);\n\t});\n\n\ttest('Save Participant, calling save from within is unsupported but does not explode (force)', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tawait testSaveFromSaveParticipant(model, false, false, true);\n\t});\n\n\tasync function testSaveFromSaveParticipant(model: TextFileEditorModel, async: boolean, modelChange: boolean, force: boolean): Promise<void> {\n\n\t\tdisposables.add(accessor.textFileService.files.addSaveParticipant({\n\t\t\tparticipate: async () => {\n\t\t\t\tif (async) {\n\t\t\t\t\tawait timeout(10);\n\t\t\t\t}\n\n\t\t\t\tif (modelChange) {\n\t\t\t\t\tmodel.updateTextEditorModel(createTextBufferFactory('bar'));\n\n\t\t\t\t\tconst newSavePromise = model.save(force ? { force } : undefined);\n\n\t\t\t\t\t// assert that this is not the same promise as the outer one\n\t\t\t\t\tassert.notStrictEqual(savePromise, newSavePromise);\n\n\t\t\t\t\tawait newSavePromise;\n\t\t\t\t} else {\n\t\t\t\t\tconst newSavePromise = model.save(force ? { force } : undefined);\n\n\t\t\t\t\t// assert that this is the same promise as the outer one\n\t\t\t\t\tassert.strictEqual(savePromise, newSavePromise);\n\n\t\t\t\t\tawait savePromise;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tawait model.resolve();\n\t\tmodel.updateTextEditorModel(createTextBufferFactory('foo'));\n\n\t\tconst savePromise = model.save(force ? { force } : undefined);\n\t\tawait savePromise;\n\t}\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}