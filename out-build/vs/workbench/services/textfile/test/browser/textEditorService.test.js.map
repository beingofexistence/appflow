{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/services/textfile/test/browser/textEditorService.test.ts"],"names":[],"mappings":"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","file":"textEditorService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { IResourceDiffEditorInput, IResourceSideBySideEditorInput, isResourceDiffEditorInput, isResourceSideBySideEditorInput, isUntitledResourceEditorInput } from 'vs/workbench/common/editor';\nimport { workbenchInstantiationService, registerTestEditor, TestFileEditorInput, registerTestResourceEditor, registerTestSideBySideEditor } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { TextResourceEditorInput } from 'vs/workbench/common/editor/textResourceEditorInput';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { FileEditorInput } from 'vs/workbench/contrib/files/browser/editors/fileEditorInput';\nimport { UntitledTextEditorInput } from 'vs/workbench/services/untitled/common/untitledTextEditorInput';\nimport { ensureNoDisposablesAreLeakedInTestSuite, toResource } from 'vs/base/test/common/utils';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { UntitledTextEditorModel } from 'vs/workbench/services/untitled/common/untitledTextEditorModel';\nimport { NullFileSystemProvider } from 'vs/platform/files/test/common/nullFileSystemProvider';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { isLinux } from 'vs/base/common/platform';\nimport { SideBySideEditorInput } from 'vs/workbench/common/editor/sideBySideEditorInput';\nimport { ITextFileEditorModel } from 'vs/workbench/services/textfile/common/textfiles';\nimport { TextEditorService } from 'vs/workbench/services/textfile/common/textEditorService';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\n\nsuite('TextEditorService', () => {\n\n\tconst TEST_EDITOR_ID = 'MyTestEditorForEditorService';\n\tconst TEST_EDITOR_INPUT_ID = 'testEditorInputForEditorService';\n\n\tclass FileServiceProvider extends Disposable {\n\t\tconstructor(scheme: string, @IFileService fileService: IFileService) {\n\t\t\tsuper();\n\n\t\t\tthis._register(fileService.registerProvider(scheme, new NullFileSystemProvider()));\n\t\t}\n\t}\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tdisposables.add(registerTestEditor(TEST_EDITOR_ID, [new SyncDescriptor(TestFileEditorInput)], TEST_EDITOR_INPUT_ID));\n\t\tdisposables.add(registerTestResourceEditor());\n\t\tdisposables.add(registerTestSideBySideEditor());\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('createTextEditor - basics', async function () {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst languageService = instantiationService.get(ILanguageService);\n\t\tconst service = disposables.add(instantiationService.createInstance(TextEditorService));\n\n\t\tconst languageId = 'create-input-test';\n\t\tdisposables.add(languageService.registerLanguage({\n\t\t\tid: languageId,\n\t\t}));\n\n\t\t// Untyped Input (file)\n\t\tlet input: EditorInput = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/index.html'), options: { selection: { startLineNumber: 1, startColumn: 1 } } }));\n\t\tassert(input instanceof FileEditorInput);\n\t\tlet contentInput = <FileEditorInput>input;\n\t\tassert.strictEqual(contentInput.resource.fsPath, toResource.call(this, '/index.html').fsPath);\n\n\t\t// Untyped Input (file casing)\n\t\tinput = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/index.html') }));\n\t\tconst inputDifferentCase = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/INDEX.html') }));\n\n\t\tif (!isLinux) {\n\t\t\tassert.strictEqual(input, inputDifferentCase);\n\t\t\tassert.strictEqual(input.resource?.toString(), inputDifferentCase.resource?.toString());\n\t\t} else {\n\t\t\tassert.notStrictEqual(input, inputDifferentCase);\n\t\t\tassert.notStrictEqual(input.resource?.toString(), inputDifferentCase.resource?.toString());\n\t\t}\n\n\t\t// Typed Input\n\t\tassert.strictEqual(disposables.add(service.createTextEditor(input)), input);\n\n\t\t// Untyped Input (file, encoding)\n\t\tinput = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/index.html'), encoding: 'utf16le', options: { selection: { startLineNumber: 1, startColumn: 1 } } }));\n\t\tassert(input instanceof FileEditorInput);\n\t\tcontentInput = <FileEditorInput>input;\n\t\tassert.strictEqual(contentInput.getPreferredEncoding(), 'utf16le');\n\n\t\t// Untyped Input (file, language)\n\t\tinput = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/index.html'), languageId: languageId }));\n\t\tassert(input instanceof FileEditorInput);\n\t\tcontentInput = <FileEditorInput>input;\n\t\tassert.strictEqual(contentInput.getPreferredLanguageId(), languageId);\n\t\tlet fileModel = disposables.add((await contentInput.resolve() as ITextFileEditorModel));\n\t\tassert.strictEqual(fileModel.textEditorModel?.getLanguageId(), languageId);\n\n\t\t// Untyped Input (file, contents)\n\t\tinput = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/index.html'), contents: 'My contents' }));\n\t\tassert(input instanceof FileEditorInput);\n\t\tcontentInput = <FileEditorInput>input;\n\t\tfileModel = disposables.add((await contentInput.resolve() as ITextFileEditorModel));\n\t\tassert.strictEqual(fileModel.textEditorModel?.getValue(), 'My contents');\n\t\tassert.strictEqual(fileModel.isDirty(), true);\n\n\t\t// Untyped Input (file, different language)\n\t\tinput = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/index.html'), languageId: 'text' }));\n\t\tassert(input instanceof FileEditorInput);\n\t\tcontentInput = <FileEditorInput>input;\n\t\tassert.strictEqual(contentInput.getPreferredLanguageId(), 'text');\n\n\t\t// Untyped Input (untitled)\n\t\tinput = disposables.add(service.createTextEditor({ resource: undefined, options: { selection: { startLineNumber: 1, startColumn: 1 } } }));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\n\t\t// Untyped Input (untitled with contents)\n\t\tlet untypedInput: any = { contents: 'Hello Untitled', options: { selection: { startLineNumber: 1, startColumn: 1 } } };\n\t\tinput = disposables.add(service.createTextEditor(untypedInput));\n\t\tassert.ok(isUntitledResourceEditorInput(untypedInput));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\t\tlet model = disposables.add(await input.resolve() as UntitledTextEditorModel);\n\t\tassert.strictEqual(model.textEditorModel?.getValue(), 'Hello Untitled');\n\n\t\t// Untyped Input (untitled with language id)\n\t\tinput = disposables.add(service.createTextEditor({ resource: undefined, languageId: languageId, options: { selection: { startLineNumber: 1, startColumn: 1 } } }));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\t\tmodel = disposables.add(await input.resolve() as UntitledTextEditorModel);\n\t\tassert.strictEqual(model.getLanguageId(), languageId);\n\n\t\t// Untyped Input (untitled with file path)\n\t\tinput = disposables.add(service.createTextEditor({ resource: URI.file('/some/path.txt'), forceUntitled: true, options: { selection: { startLineNumber: 1, startColumn: 1 } } }));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\t\tassert.ok((input as UntitledTextEditorInput).model.hasAssociatedFilePath);\n\n\t\t// Untyped Input (untitled with untitled resource)\n\t\tuntypedInput = { resource: URI.parse('untitled://Untitled-1'), forceUntitled: true, options: { selection: { startLineNumber: 1, startColumn: 1 } } };\n\t\tassert.ok(isUntitledResourceEditorInput(untypedInput));\n\t\tinput = disposables.add(service.createTextEditor(untypedInput));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\t\tassert.ok(!(input as UntitledTextEditorInput).model.hasAssociatedFilePath);\n\n\t\t// Untyped input (untitled with custom resource, but forceUntitled)\n\t\tuntypedInput = { resource: URI.file('/fake'), forceUntitled: true };\n\t\tassert.ok(isUntitledResourceEditorInput(untypedInput));\n\t\tinput = disposables.add(service.createTextEditor(untypedInput));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\n\t\t// Untyped Input (untitled with custom resource)\n\t\tconst provider = disposables.add(instantiationService.createInstance(FileServiceProvider, 'untitled-custom'));\n\n\t\tinput = disposables.add(service.createTextEditor({ resource: URI.parse('untitled-custom://some/path'), forceUntitled: true, options: { selection: { startLineNumber: 1, startColumn: 1 } } }));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\t\tassert.ok((input as UntitledTextEditorInput).model.hasAssociatedFilePath);\n\n\t\tprovider.dispose();\n\n\t\t// Untyped Input (resource)\n\t\tinput = disposables.add(service.createTextEditor({ resource: URI.parse('custom:resource') }));\n\t\tassert(input instanceof TextResourceEditorInput);\n\n\t\t// Untyped Input (diff)\n\t\tconst resourceDiffInput = {\n\t\t\tmodified: { resource: toResource.call(this, '/modified.html') },\n\t\t\toriginal: { resource: toResource.call(this, '/original.html') }\n\t\t};\n\t\tassert.strictEqual(isResourceDiffEditorInput(resourceDiffInput), true);\n\t\tinput = disposables.add(service.createTextEditor(resourceDiffInput));\n\t\tassert(input instanceof DiffEditorInput);\n\t\tdisposables.add(input.modified);\n\t\tdisposables.add(input.original);\n\t\tassert.strictEqual(input.original.resource?.toString(), resourceDiffInput.original.resource.toString());\n\t\tassert.strictEqual(input.modified.resource?.toString(), resourceDiffInput.modified.resource.toString());\n\t\tconst untypedDiffInput = input.toUntyped() as IResourceDiffEditorInput;\n\t\tassert.strictEqual(untypedDiffInput.original.resource?.toString(), resourceDiffInput.original.resource.toString());\n\t\tassert.strictEqual(untypedDiffInput.modified.resource?.toString(), resourceDiffInput.modified.resource.toString());\n\n\t\t// Untyped Input (side by side)\n\t\tconst sideBySideResourceInput = {\n\t\t\tprimary: { resource: toResource.call(this, '/primary.html') },\n\t\t\tsecondary: { resource: toResource.call(this, '/secondary.html') }\n\t\t};\n\t\tassert.strictEqual(isResourceSideBySideEditorInput(sideBySideResourceInput), true);\n\t\tinput = disposables.add(service.createTextEditor(sideBySideResourceInput));\n\t\tassert(input instanceof SideBySideEditorInput);\n\t\tdisposables.add(input.primary);\n\t\tdisposables.add(input.secondary);\n\t\tassert.strictEqual(input.primary.resource?.toString(), sideBySideResourceInput.primary.resource.toString());\n\t\tassert.strictEqual(input.secondary.resource?.toString(), sideBySideResourceInput.secondary.resource.toString());\n\t\tconst untypedSideBySideInput = input.toUntyped() as IResourceSideBySideEditorInput;\n\t\tassert.strictEqual(untypedSideBySideInput.primary.resource?.toString(), sideBySideResourceInput.primary.resource.toString());\n\t\tassert.strictEqual(untypedSideBySideInput.secondary.resource?.toString(), sideBySideResourceInput.secondary.resource.toString());\n\t});\n\n\ttest('createTextEditor- caching', function () {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst service = disposables.add(instantiationService.createInstance(TextEditorService));\n\n\t\t// Cached Input (Files)\n\t\tconst fileResource1: URI = toResource.call(this, '/foo/bar/cache1.js');\n\t\tconst fileEditorInput1 = disposables.add(service.createTextEditor({ resource: fileResource1 }));\n\t\tassert.ok(fileEditorInput1);\n\n\t\tconst fileResource2 = toResource.call(this, '/foo/bar/cache2.js');\n\t\tconst fileEditorInput2 = disposables.add(service.createTextEditor({ resource: fileResource2 }));\n\t\tassert.ok(fileEditorInput2);\n\n\t\tassert.notStrictEqual(fileEditorInput1, fileEditorInput2);\n\n\t\tconst fileEditorInput1Again = disposables.add(service.createTextEditor({ resource: fileResource1 }));\n\t\tassert.strictEqual(fileEditorInput1Again, fileEditorInput1);\n\n\t\tfileEditorInput1Again.dispose();\n\n\t\tassert.ok(fileEditorInput1.isDisposed());\n\n\t\tconst fileEditorInput1AgainAndAgain = disposables.add(service.createTextEditor({ resource: fileResource1 }));\n\t\tassert.notStrictEqual(fileEditorInput1AgainAndAgain, fileEditorInput1);\n\t\tassert.ok(!fileEditorInput1AgainAndAgain.isDisposed());\n\n\t\t// Cached Input (Resource)\n\t\tconst resource1 = URI.from({ scheme: 'custom', path: '/foo/bar/cache1.js' });\n\t\tconst input1 = disposables.add(service.createTextEditor({ resource: resource1 }));\n\t\tassert.ok(input1);\n\n\t\tconst resource2 = URI.from({ scheme: 'custom', path: '/foo/bar/cache2.js' });\n\t\tconst input2 = disposables.add(service.createTextEditor({ resource: resource2 }));\n\t\tassert.ok(input2);\n\n\t\tassert.notStrictEqual(input1, input2);\n\n\t\tconst input1Again = disposables.add(service.createTextEditor({ resource: resource1 }));\n\t\tassert.strictEqual(input1Again, input1);\n\n\t\tinput1Again.dispose();\n\n\t\tassert.ok(input1.isDisposed());\n\n\t\tconst input1AgainAndAgain = disposables.add(service.createTextEditor({ resource: resource1 }));\n\t\tassert.notStrictEqual(input1AgainAndAgain, input1);\n\t\tassert.ok(!input1AgainAndAgain.isDisposed());\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}