{"version":3,"sources":["vs/workbench/services/host/browser/browserHostService.ts"],"names":[],"mappings":"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","file":"browserHostService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ILayoutService } from 'vs/platform/layout/browser/layoutService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IWindowSettings, IWindowOpenable, IOpenWindowOptions, isFolderToOpen, isWorkspaceToOpen, isFileToOpen, IOpenEmptyWindowOptions, IPathData, IFileToOpen, IWorkspaceToOpen, IFolderToOpen } from 'vs/platform/window/common/window';\nimport { isResourceEditorInput, pathsToEditors } from 'vs/workbench/common/editor';\nimport { whenEditorClosed } from 'vs/workbench/browser/editor';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILabelService, Verbosity } from 'vs/platform/label/common/label';\nimport { ModifierKeyEmitter, trackFocus } from 'vs/base/browser/dom';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { memoize } from 'vs/base/common/decorators';\nimport { parseLineAndColumnAware } from 'vs/base/common/extpath';\nimport { IWorkspaceFolderCreationData } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspaceEditingService } from 'vs/workbench/services/workspaces/common/workspaceEditing';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILifecycleService, BeforeShutdownEvent, ShutdownReason } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { BrowserLifecycleService } from 'vs/workbench/services/lifecycle/browser/lifecycleService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getWorkspaceIdentifier } from 'vs/workbench/services/workspaces/browser/workspaces';\nimport { localize } from 'vs/nls';\nimport Severity from 'vs/base/common/severity';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { DomEmitter } from 'vs/base/browser/event';\nimport { isUndefined } from 'vs/base/common/types';\nimport { isTemporaryWorkspace, IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { Schemas } from 'vs/base/common/network';\nimport { ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { coalesce } from 'vs/base/common/arrays';\n\n/**\n * A workspace to open in the workbench can either be:\n * - a workspace file with 0-N folders (via `workspaceUri`)\n * - a single folder (via `folderUri`)\n * - empty (via `undefined`)\n */\nexport type IWorkspace = IWorkspaceToOpen | IFolderToOpen | undefined;\n\nexport interface IWorkspaceProvider {\n\n\t/**\n\t * The initial workspace to open.\n\t */\n\treadonly workspace: IWorkspace;\n\n\t/**\n\t * Arbitrary payload from the `IWorkspaceProvider.open` call.\n\t */\n\treadonly payload?: object;\n\n\t/**\n\t * Return `true` if the provided [workspace](#IWorkspaceProvider.workspace) is trusted, `false` if not trusted, `undefined` if unknown.\n\t */\n\treadonly trusted: boolean | undefined;\n\n\t/**\n\t * Asks to open a workspace in the current or a new window.\n\t *\n\t * @param workspace the workspace to open.\n\t * @param options optional options for the workspace to open.\n\t * - `reuse`: whether to open inside the current window or a new window\n\t * - `payload`: arbitrary payload that should be made available\n\t * to the opening window via the `IWorkspaceProvider.payload` property.\n\t * @param payload optional payload to send to the workspace to open.\n\t *\n\t * @returns true if successfully opened, false otherwise.\n\t */\n\topen(workspace: IWorkspace, options?: { reuse?: boolean; payload?: object }): Promise<boolean>;\n}\n\nenum HostShutdownReason {\n\n\t/**\n\t * An unknown shutdown reason.\n\t */\n\tUnknown = 1,\n\n\t/**\n\t * A shutdown that was potentially triggered by keyboard use.\n\t */\n\tKeyboard = 2,\n\n\t/**\n\t * An explicit shutdown via code.\n\t */\n\tApi = 3\n}\n\nexport class BrowserHostService extends Disposable implements IHostService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate workspaceProvider: IWorkspaceProvider;\n\n\tprivate shutdownReason = HostShutdownReason.Unknown;\n\n\tconstructor(\n\t\t@ILayoutService private readonly layoutService: ILayoutService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILifecycleService private readonly lifecycleService: BrowserLifecycleService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t) {\n\t\tsuper();\n\n\t\tif (environmentService.options?.workspaceProvider) {\n\t\t\tthis.workspaceProvider = environmentService.options.workspaceProvider;\n\t\t} else {\n\t\t\tthis.workspaceProvider = new class implements IWorkspaceProvider {\n\t\t\t\treadonly workspace = undefined;\n\t\t\t\treadonly trusted = undefined;\n\t\t\t\tasync open() { return true; }\n\t\t\t};\n\t\t}\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Veto shutdown depending on `window.confirmBeforeClose` setting\n\t\tthis._register(this.lifecycleService.onBeforeShutdown(e => this.onBeforeShutdown(e)));\n\n\t\t// Track modifier keys to detect keybinding usage\n\t\tthis._register(ModifierKeyEmitter.getInstance().event(() => this.updateShutdownReasonFromEvent()));\n\t}\n\n\tprivate onBeforeShutdown(e: BeforeShutdownEvent): void {\n\n\t\tswitch (this.shutdownReason) {\n\n\t\t\t// Unknown / Keyboard shows veto depending on setting\n\t\t\tcase HostShutdownReason.Unknown:\n\t\t\tcase HostShutdownReason.Keyboard: {\n\t\t\t\tconst confirmBeforeClose = this.configurationService.getValue('window.confirmBeforeClose');\n\t\t\t\tif (confirmBeforeClose === 'always' || (confirmBeforeClose === 'keyboardOnly' && this.shutdownReason === HostShutdownReason.Keyboard)) {\n\t\t\t\t\te.veto(true, 'veto.confirmBeforeClose');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Api never shows veto\n\t\t\tcase HostShutdownReason.Api:\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Unset for next shutdown\n\t\tthis.shutdownReason = HostShutdownReason.Unknown;\n\t}\n\n\tprivate updateShutdownReasonFromEvent(): void {\n\t\tif (this.shutdownReason === HostShutdownReason.Api) {\n\t\t\treturn; // do not overwrite any explicitly set shutdown reason\n\t\t}\n\n\t\tif (ModifierKeyEmitter.getInstance().isModifierPressed) {\n\t\t\tthis.shutdownReason = HostShutdownReason.Keyboard;\n\t\t} else {\n\t\t\tthis.shutdownReason = HostShutdownReason.Unknown;\n\t\t}\n\t}\n\n\t//#region Focus\n\n\t@memoize\n\tget onDidChangeFocus(): Event<boolean> {\n\t\tconst focusTracker = this._register(trackFocus(window));\n\t\tconst onVisibilityChange = this._register(new DomEmitter(window.document, 'visibilitychange'));\n\n\t\treturn Event.latch(Event.any(\n\t\t\tEvent.map(focusTracker.onDidFocus, () => this.hasFocus),\n\t\t\tEvent.map(focusTracker.onDidBlur, () => this.hasFocus),\n\t\t\tEvent.map(onVisibilityChange.event, () => this.hasFocus)\n\t\t));\n\t}\n\n\tget hasFocus(): boolean {\n\t\treturn document.hasFocus();\n\t}\n\n\tasync hadLastFocus(): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tasync focus(): Promise<void> {\n\t\twindow.focus();\n\t}\n\n\t//#endregion\n\n\n\t//#region Window\n\n\topenWindow(options?: IOpenEmptyWindowOptions): Promise<void>;\n\topenWindow(toOpen: IWindowOpenable[], options?: IOpenWindowOptions): Promise<void>;\n\topenWindow(arg1?: IOpenEmptyWindowOptions | IWindowOpenable[], arg2?: IOpenWindowOptions): Promise<void> {\n\t\tif (Array.isArray(arg1)) {\n\t\t\treturn this.doOpenWindow(arg1, arg2);\n\t\t}\n\n\t\treturn this.doOpenEmptyWindow(arg1);\n\t}\n\n\tprivate async doOpenWindow(toOpen: IWindowOpenable[], options?: IOpenWindowOptions): Promise<void> {\n\t\tconst payload = this.preservePayload(false /* not an empty window */);\n\t\tconst fileOpenables: IFileToOpen[] = [];\n\t\tconst foldersToAdd: IWorkspaceFolderCreationData[] = [];\n\n\t\tfor (const openable of toOpen) {\n\t\t\topenable.label = openable.label || this.getRecentLabel(openable);\n\n\t\t\t// Folder\n\t\t\tif (isFolderToOpen(openable)) {\n\t\t\t\tif (options?.addMode) {\n\t\t\t\t\tfoldersToAdd.push(({ uri: openable.folderUri }));\n\t\t\t\t} else {\n\t\t\t\t\tthis.doOpen({ folderUri: openable.folderUri }, { reuse: this.shouldReuse(options, false /* no file */), payload });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Workspace\n\t\t\telse if (isWorkspaceToOpen(openable)) {\n\t\t\t\tthis.doOpen({ workspaceUri: openable.workspaceUri }, { reuse: this.shouldReuse(options, false /* no file */), payload });\n\t\t\t}\n\n\t\t\t// File (handled later in bulk)\n\t\t\telse if (isFileToOpen(openable)) {\n\t\t\t\tfileOpenables.push(openable);\n\t\t\t}\n\t\t}\n\n\t\t// Handle Folders to Add\n\t\tif (foldersToAdd.length > 0) {\n\t\t\tthis.withServices(accessor => {\n\t\t\t\tconst workspaceEditingService: IWorkspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\t\t\tworkspaceEditingService.addFolders(foldersToAdd);\n\t\t\t});\n\t\t}\n\n\t\t// Handle Files\n\t\tif (fileOpenables.length > 0) {\n\t\t\tthis.withServices(async accessor => {\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\n\t\t\t\t// Support mergeMode\n\t\t\t\tif (options?.mergeMode && fileOpenables.length === 4) {\n\t\t\t\t\tconst editors = coalesce(await pathsToEditors(fileOpenables, this.fileService, this.logService));\n\t\t\t\t\tif (editors.length !== 4 || !isResourceEditorInput(editors[0]) || !isResourceEditorInput(editors[1]) || !isResourceEditorInput(editors[2]) || !isResourceEditorInput(editors[3])) {\n\t\t\t\t\t\treturn; // invalid resources\n\t\t\t\t\t}\n\n\t\t\t\t\t// Same Window: open via editor service in current window\n\t\t\t\t\tif (this.shouldReuse(options, true /* file */)) {\n\t\t\t\t\t\teditorService.openEditor({\n\t\t\t\t\t\t\tinput1: { resource: editors[0].resource },\n\t\t\t\t\t\t\tinput2: { resource: editors[1].resource },\n\t\t\t\t\t\t\tbase: { resource: editors[2].resource },\n\t\t\t\t\t\t\tresult: { resource: editors[3].resource },\n\t\t\t\t\t\t\toptions: { pinned: true }\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// New Window: open into empty window\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst environment = new Map<string, string>();\n\t\t\t\t\t\tenvironment.set('mergeFile1', editors[0].resource.toString());\n\t\t\t\t\t\tenvironment.set('mergeFile2', editors[1].resource.toString());\n\t\t\t\t\t\tenvironment.set('mergeFileBase', editors[2].resource.toString());\n\t\t\t\t\t\tenvironment.set('mergeFileResult', editors[3].resource.toString());\n\n\t\t\t\t\t\tthis.doOpen(undefined, { payload: Array.from(environment.entries()) });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support diffMode\n\t\t\t\tif (options?.diffMode && fileOpenables.length === 2) {\n\t\t\t\t\tconst editors = coalesce(await pathsToEditors(fileOpenables, this.fileService, this.logService));\n\t\t\t\t\tif (editors.length !== 2 || !isResourceEditorInput(editors[0]) || !isResourceEditorInput(editors[1])) {\n\t\t\t\t\t\treturn; // invalid resources\n\t\t\t\t\t}\n\n\t\t\t\t\t// Same Window: open via editor service in current window\n\t\t\t\t\tif (this.shouldReuse(options, true /* file */)) {\n\t\t\t\t\t\teditorService.openEditor({\n\t\t\t\t\t\t\toriginal: { resource: editors[0].resource },\n\t\t\t\t\t\t\tmodified: { resource: editors[1].resource },\n\t\t\t\t\t\t\toptions: { pinned: true }\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// New Window: open into empty window\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst environment = new Map<string, string>();\n\t\t\t\t\t\tenvironment.set('diffFileSecondary', editors[0].resource.toString());\n\t\t\t\t\t\tenvironment.set('diffFilePrimary', editors[1].resource.toString());\n\n\t\t\t\t\t\tthis.doOpen(undefined, { payload: Array.from(environment.entries()) });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Just open normally\n\t\t\t\telse {\n\t\t\t\t\tfor (const openable of fileOpenables) {\n\n\t\t\t\t\t\t// Same Window: open via editor service in current window\n\t\t\t\t\t\tif (this.shouldReuse(options, true /* file */)) {\n\t\t\t\t\t\t\tlet openables: IPathData<ITextEditorOptions>[] = [];\n\n\t\t\t\t\t\t\t// Support: --goto parameter to open on line/col\n\t\t\t\t\t\t\tif (options?.gotoLineMode) {\n\t\t\t\t\t\t\t\tconst pathColumnAware = parseLineAndColumnAware(openable.fileUri.path);\n\t\t\t\t\t\t\t\topenables = [{\n\t\t\t\t\t\t\t\t\tfileUri: openable.fileUri.with({ path: pathColumnAware.path }),\n\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\tselection: !isUndefined(pathColumnAware.line) ? { startLineNumber: pathColumnAware.line, startColumn: pathColumnAware.column || 1 } : undefined\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\topenables = [openable];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\teditorService.openEditors(coalesce(await pathsToEditors(openables, this.fileService, this.logService)), undefined, { validateTrust: true });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// New Window: open into empty window\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst environment = new Map<string, string>();\n\t\t\t\t\t\t\tenvironment.set('openFile', openable.fileUri.toString());\n\n\t\t\t\t\t\t\tif (options?.gotoLineMode) {\n\t\t\t\t\t\t\t\tenvironment.set('gotoLineMode', 'true');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.doOpen(undefined, { payload: Array.from(environment.entries()) });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support wait mode\n\t\t\t\tconst waitMarkerFileURI = options?.waitMarkerFileURI;\n\t\t\t\tif (waitMarkerFileURI) {\n\t\t\t\t\t(async () => {\n\n\t\t\t\t\t\t// Wait for the resources to be closed in the text editor...\n\t\t\t\t\t\tawait this.instantiationService.invokeFunction(accessor => whenEditorClosed(accessor, fileOpenables.map(fileOpenable => fileOpenable.fileUri)));\n\n\t\t\t\t\t\t// ...before deleting the wait marker file\n\t\t\t\t\t\tawait this.fileService.del(waitMarkerFileURI);\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate withServices(fn: (accessor: ServicesAccessor) => unknown): void {\n\t\t// Host service is used in a lot of contexts and some services\n\t\t// need to be resolved dynamically to avoid cyclic dependencies\n\t\t// (https://github.com/microsoft/vscode/issues/108522)\n\t\tthis.instantiationService.invokeFunction(accessor => fn(accessor));\n\t}\n\n\tprivate preservePayload(isEmptyWindow: boolean): Array<unknown> | undefined {\n\n\t\t// Selectively copy payload: for now only extension debugging properties are considered\n\t\tconst newPayload: Array<unknown> = new Array();\n\t\tif (!isEmptyWindow && this.environmentService.extensionDevelopmentLocationURI) {\n\t\t\tnewPayload.push(['extensionDevelopmentPath', this.environmentService.extensionDevelopmentLocationURI.toString()]);\n\n\t\t\tif (this.environmentService.debugExtensionHost.debugId) {\n\t\t\t\tnewPayload.push(['debugId', this.environmentService.debugExtensionHost.debugId]);\n\t\t\t}\n\n\t\t\tif (this.environmentService.debugExtensionHost.port) {\n\t\t\t\tnewPayload.push(['inspect-brk-extensions', String(this.environmentService.debugExtensionHost.port)]);\n\t\t\t}\n\t\t}\n\n\t\tif (!this.userDataProfileService.currentProfile.isDefault) {\n\t\t\tnewPayload.push(['lastActiveProfile', this.userDataProfileService.currentProfile.id]);\n\t\t}\n\n\t\treturn newPayload.length ? newPayload : undefined;\n\t}\n\n\tprivate getRecentLabel(openable: IWindowOpenable): string {\n\t\tif (isFolderToOpen(openable)) {\n\t\t\treturn this.labelService.getWorkspaceLabel(openable.folderUri, { verbose: Verbosity.LONG });\n\t\t}\n\n\t\tif (isWorkspaceToOpen(openable)) {\n\t\t\treturn this.labelService.getWorkspaceLabel(getWorkspaceIdentifier(openable.workspaceUri), { verbose: Verbosity.LONG });\n\t\t}\n\n\t\treturn this.labelService.getUriLabel(openable.fileUri);\n\t}\n\n\tprivate shouldReuse(options: IOpenWindowOptions = Object.create(null), isFile: boolean): boolean {\n\t\tif (options.waitMarkerFileURI) {\n\t\t\treturn true; // always handle --wait in same window\n\t\t}\n\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\t\tconst openInNewWindowConfig = isFile ? (windowConfig?.openFilesInNewWindow || 'off' /* default */) : (windowConfig?.openFoldersInNewWindow || 'default' /* default */);\n\n\t\tlet openInNewWindow = (options.preferNewWindow || !!options.forceNewWindow) && !options.forceReuseWindow;\n\t\tif (!options.forceNewWindow && !options.forceReuseWindow && (openInNewWindowConfig === 'on' || openInNewWindowConfig === 'off')) {\n\t\t\topenInNewWindow = (openInNewWindowConfig === 'on');\n\t\t}\n\n\t\treturn !openInNewWindow;\n\t}\n\n\tprivate async doOpenEmptyWindow(options?: IOpenEmptyWindowOptions): Promise<void> {\n\t\treturn this.doOpen(undefined, {\n\t\t\treuse: options?.forceReuseWindow,\n\t\t\tpayload: this.preservePayload(true /* empty window */)\n\t\t});\n\t}\n\n\tprivate async doOpen(workspace: IWorkspace, options?: { reuse?: boolean; payload?: object }): Promise<void> {\n\n\t\t// When we are in a temporary workspace and are asked to open a local folder\n\t\t// we swap that folder into the workspace to avoid a window reload. Access\n\t\t// to local resources is only possible without a window reload because it\n\t\t// needs user activation.\n\t\tif (workspace && isFolderToOpen(workspace) && workspace.folderUri.scheme === Schemas.file && isTemporaryWorkspace(this.contextService.getWorkspace())) {\n\t\t\tthis.withServices(async accessor => {\n\t\t\t\tconst workspaceEditingService: IWorkspaceEditingService = accessor.get(IWorkspaceEditingService);\n\n\t\t\t\tawait workspaceEditingService.updateFolders(0, this.contextService.getWorkspace().folders.length, [{ uri: workspace.folderUri }]);\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We know that `workspaceProvider.open` will trigger a shutdown\n\t\t// with `options.reuse` so we handle this expected shutdown\n\t\tif (options?.reuse) {\n\t\t\tawait this.handleExpectedShutdown(ShutdownReason.LOAD);\n\t\t}\n\n\t\tconst opened = await this.workspaceProvider.open(workspace, options);\n\t\tif (!opened) {\n\t\t\tconst { confirmed } = await this.dialogService.confirm({\n\t\t\t\ttype: Severity.Warning,\n\t\t\t\tmessage: localize('unableToOpenExternal', \"The browser interrupted the opening of a new tab or window. Press 'Open' to open it anyway.\"),\n\t\t\t\tprimaryButton: localize({ key: 'open', comment: ['&& denotes a mnemonic'] }, \"&&Open\")\n\t\t\t});\n\t\t\tif (confirmed) {\n\t\t\t\tawait this.workspaceProvider.open(workspace, options);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync toggleFullScreen(): Promise<void> {\n\t\tconst target = this.layoutService.container;\n\n\t\t// Chromium\n\t\tif (document.fullscreen !== undefined) {\n\t\t\tif (!document.fullscreen) {\n\t\t\t\ttry {\n\t\t\t\t\treturn await target.requestFullscreen();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.warn('toggleFullScreen(): requestFullscreen failed'); // https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\treturn await document.exitFullscreen();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.warn('toggleFullScreen(): exitFullscreen failed');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Safari and Edge 14 are all using webkit prefix\n\t\tif ((<any>document).webkitIsFullScreen !== undefined) {\n\t\t\ttry {\n\t\t\t\tif (!(<any>document).webkitIsFullScreen) {\n\t\t\t\t\t(<any>target).webkitRequestFullscreen(); // it's async, but doesn't return a real promise.\n\t\t\t\t} else {\n\t\t\t\t\t(<any>document).webkitExitFullscreen(); // it's async, but doesn't return a real promise.\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tthis.logService.warn('toggleFullScreen(): requestFullscreen/exitFullscreen failed');\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Lifecycle\n\n\tasync restart(): Promise<void> {\n\t\tthis.reload();\n\t}\n\n\tasync reload(): Promise<void> {\n\t\tawait this.handleExpectedShutdown(ShutdownReason.RELOAD);\n\n\t\twindow.location.reload();\n\t}\n\n\tasync close(): Promise<void> {\n\t\tawait this.handleExpectedShutdown(ShutdownReason.CLOSE);\n\n\t\twindow.close();\n\t}\n\n\tasync withExpectedShutdown<T>(expectedShutdownTask: () => Promise<T>): Promise<T> {\n\t\tconst previousShutdownReason = this.shutdownReason;\n\t\ttry {\n\t\t\tthis.shutdownReason = HostShutdownReason.Api;\n\t\t\treturn await expectedShutdownTask();\n\t\t} finally {\n\t\t\tthis.shutdownReason = previousShutdownReason;\n\t\t}\n\t}\n\n\tprivate async handleExpectedShutdown(reason: ShutdownReason): Promise<void> {\n\n\t\t// Update shutdown reason in a way that we do\n\t\t// not show a dialog because this is a expected\n\t\t// shutdown.\n\t\tthis.shutdownReason = HostShutdownReason.Api;\n\n\t\t// Signal shutdown reason to lifecycle\n\t\treturn this.lifecycleService.withExpectedShutdown(reason);\n\t}\n\n\t//#endregion\n}\n\nregisterSingleton(IHostService, BrowserHostService, InstantiationType.Delayed);\n"]}