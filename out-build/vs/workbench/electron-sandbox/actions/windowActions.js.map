{"version":3,"sources":["vs/workbench/electron-sandbox/actions/windowActions.ts"],"names":[],"mappings":"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","file":"windowActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/actions';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { applyZoom } from 'vs/platform/window/electron-sandbox/window';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { getZoomLevel } from 'vs/base/browser/browser';\nimport { FileKind } from 'vs/platform/files/common/files';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { IQuickInputService, IQuickInputButton } from 'vs/platform/quickinput/common/quickInput';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { ICommandHandler } from 'vs/platform/commands/common/commands';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { INativeHostService } from 'vs/platform/native/common/native';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\nimport { Action2, IAction2Options, MenuId } from 'vs/platform/actions/common/actions';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { isMacintosh } from 'vs/base/common/platform';\n\nexport class CloseWindowAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.closeWindow';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CloseWindowAction.ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('closeWindow', \"Close Window\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miCloseWindow', comment: ['&& denotes a mnemonic'] }, \"Clos&&e Window\"),\n\t\t\t\toriginal: 'Close Window'\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyW },\n\t\t\t\tlinux: { primary: KeyMod.Alt | KeyCode.F4, secondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyW] },\n\t\t\t\twin: { primary: KeyMod.Alt | KeyCode.F4, secondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyW] }\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarFileMenu,\n\t\t\t\tgroup: '6_close',\n\t\t\t\torder: 4\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst nativeHostService = accessor.get(INativeHostService);\n\n\t\treturn nativeHostService.closeWindow();\n\t}\n}\n\nabstract class BaseZoomAction extends Action2 {\n\n\tprivate static readonly SETTING_KEY = 'window.zoomLevel';\n\n\tprivate static readonly MAX_ZOOM_LEVEL = 8;\n\tprivate static readonly MIN_ZOOM_LEVEL = -8;\n\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\tprotected async setConfiguredZoomLevel(accessor: ServicesAccessor, level: number): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tlevel = Math.round(level); // when reaching smallest zoom, prevent fractional zoom levels\n\n\t\tif (level > BaseZoomAction.MAX_ZOOM_LEVEL || level < BaseZoomAction.MIN_ZOOM_LEVEL) {\n\t\t\treturn; // https://github.com/microsoft/vscode/issues/48357\n\t\t}\n\n\t\tawait configurationService.updateValue(BaseZoomAction.SETTING_KEY, level);\n\n\t\tapplyZoom(level);\n\t}\n}\n\nexport class ZoomInAction extends BaseZoomAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.zoomIn',\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('zoomIn', \"Zoom In\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miZoomIn', comment: ['&& denotes a mnemonic'] }, \"&&Zoom In\"),\n\t\t\t\toriginal: 'Zoom In'\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Equal,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Equal, KeyMod.CtrlCmd | KeyCode.NumpadAdd]\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '5_zoom',\n\t\t\t\torder: 1\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn super.setConfiguredZoomLevel(accessor, getZoomLevel() + 1);\n\t}\n}\n\nexport class ZoomOutAction extends BaseZoomAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.zoomOut',\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('zoomOut', \"Zoom Out\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miZoomOut', comment: ['&& denotes a mnemonic'] }, \"&&Zoom Out\"),\n\t\t\t\toriginal: 'Zoom Out'\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Minus,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Minus, KeyMod.CtrlCmd | KeyCode.NumpadSubtract],\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Minus,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.NumpadSubtract]\n\t\t\t\t}\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '5_zoom',\n\t\t\t\torder: 2\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn super.setConfiguredZoomLevel(accessor, getZoomLevel() - 1);\n\t}\n}\n\nexport class ZoomResetAction extends BaseZoomAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.zoomReset',\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('zoomReset', \"Reset Zoom\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miZoomReset', comment: ['&& denotes a mnemonic'] }, \"&&Reset Zoom\"),\n\t\t\t\toriginal: 'Reset Zoom'\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Numpad0\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '5_zoom',\n\t\t\t\torder: 3\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn super.setConfiguredZoomLevel(accessor, 0);\n\t}\n}\n\nabstract class BaseSwitchWindow extends Action2 {\n\n\tprivate readonly closeWindowAction: IQuickInputButton = {\n\t\ticonClass: ThemeIcon.asClassName(Codicon.removeClose),\n\t\ttooltip: localize('close', \"Close Window\")\n\t};\n\n\tprivate readonly closeDirtyWindowAction: IQuickInputButton = {\n\t\ticonClass: 'dirty-window ' + Codicon.closeDirty,\n\t\ttooltip: localize('close', \"Close Window\"),\n\t\talwaysVisible: true\n\t};\n\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\tprotected abstract isQuickNavigate(): boolean;\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst modelService = accessor.get(IModelService);\n\t\tconst languageService = accessor.get(ILanguageService);\n\t\tconst nativeHostService = accessor.get(INativeHostService);\n\n\t\tconst currentWindowId = nativeHostService.windowId;\n\n\t\tconst windows = await nativeHostService.getWindows();\n\t\tconst placeHolder = localize('switchWindowPlaceHolder', \"Select a window to switch to\");\n\t\tconst picks = windows.map(window => {\n\t\t\tconst resource = window.filename ? URI.file(window.filename) : isSingleFolderWorkspaceIdentifier(window.workspace) ? window.workspace.uri : isWorkspaceIdentifier(window.workspace) ? window.workspace.configPath : undefined;\n\t\t\tconst fileKind = window.filename ? FileKind.FILE : isSingleFolderWorkspaceIdentifier(window.workspace) ? FileKind.FOLDER : isWorkspaceIdentifier(window.workspace) ? FileKind.ROOT_FOLDER : FileKind.FILE;\n\t\t\treturn {\n\t\t\t\tpayload: window.id,\n\t\t\t\tlabel: window.title,\n\t\t\t\tariaLabel: window.dirty ? localize('windowDirtyAriaLabel', \"{0}, window with unsaved changes\", window.title) : window.title,\n\t\t\t\ticonClasses: getIconClasses(modelService, languageService, resource, fileKind),\n\t\t\t\tdescription: (currentWindowId === window.id) ? localize('current', \"Current Window\") : undefined,\n\t\t\t\tbuttons: currentWindowId !== window.id ? window.dirty ? [this.closeDirtyWindowAction] : [this.closeWindowAction] : undefined\n\t\t\t};\n\t\t});\n\t\tconst autoFocusIndex = (picks.indexOf(picks.filter(pick => pick.payload === currentWindowId)[0]) + 1) % picks.length;\n\n\t\tconst pick = await quickInputService.pick(picks, {\n\t\t\tcontextKey: 'inWindowsPicker',\n\t\t\tactiveItem: picks[autoFocusIndex],\n\t\t\tplaceHolder,\n\t\t\tquickNavigate: this.isQuickNavigate() ? { keybindings: keybindingService.lookupKeybindings(this.desc.id) } : undefined,\n\t\t\thideInput: this.isQuickNavigate(),\n\t\t\tonDidTriggerItemButton: async context => {\n\t\t\t\tawait nativeHostService.closeWindowById(context.item.payload);\n\t\t\t\tcontext.removeItem();\n\t\t\t}\n\t\t});\n\n\t\tif (pick) {\n\t\t\tnativeHostService.focusWindow({ windowId: pick.payload });\n\t\t}\n\t}\n}\n\nexport class SwitchWindowAction extends BaseSwitchWindow {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.switchWindow',\n\t\t\ttitle: { value: localize('switchWindow', \"Switch Window...\"), original: 'Switch Window...' },\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyW }\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn false;\n\t}\n}\n\nexport class QuickSwitchWindowAction extends BaseSwitchWindow {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.quickSwitchWindow',\n\t\t\ttitle: { value: localize('quickSwitchWindow', \"Quick Switch Window...\"), original: 'Quick Switch Window...' },\n\t\t\tf1: false // hide quick pickers from command palette to not confuse with the other entry that shows a input field\n\t\t});\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn true;\n\t}\n}\n\nfunction canRunNativeTabsHandler(accessor: ServicesAccessor): boolean {\n\tif (!isMacintosh) {\n\t\treturn false;\n\t}\n\n\tconst configurationService = accessor.get(IConfigurationService);\n\treturn configurationService.getValue<unknown>('window.nativeTabs') === true;\n}\n\nexport const NewWindowTabHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).newWindowTab();\n};\n\nexport const ShowPreviousWindowTabHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).showPreviousWindowTab();\n};\n\nexport const ShowNextWindowTabHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).showNextWindowTab();\n};\n\nexport const MoveWindowTabToNewWindowHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).moveWindowTabToNewWindow();\n};\n\nexport const MergeWindowTabsHandlerHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).mergeAllWindowTabs();\n};\n\nexport const ToggleWindowTabsBarHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).toggleWindowTabsBar();\n};\n"]}