{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/common/panecomposite.ts","vs/workbench/common/panecomposite.ts"],"names":[],"mappings":"AAAA;;;gGAGgG","file":"panecomposite.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IView, IViewPaneContainer } from 'vs/workbench/common/views';\nimport { IComposite } from 'vs/workbench/common/composite';\n\nexport interface IPaneComposite extends IComposite {\n\n\t/**\n\t * Returns the minimal width needed to avoid any content horizontal truncation\n\t */\n\tgetOptimalWidth(): number | undefined;\n\n\topenView<T extends IView>(id: string, focus?: boolean): T | undefined;\n\tgetViewPaneContainer(): IViewPaneContainer | undefined;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IView, IViewPaneContainer } from 'vs/workbench/common/views';\nimport { IComposite } from 'vs/workbench/common/composite';\n\nexport interface IPaneComposite extends IComposite {\n\n\t/**\n\t * Returns the minimal width needed to avoid any content horizontal truncation\n\t */\n\tgetOptimalWidth(): number | undefined;\n\n\topenView<T extends IView>(id: string, focus?: boolean): T | undefined;\n\tgetViewPaneContainer(): IViewPaneContainer | undefined;\n}\n\n"]}