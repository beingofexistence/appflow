{"version":3,"sources":["vs/workbench/common/editor/sideBySideEditorInput.ts"],"names":[],"mappings":"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","file":"sideBySideEditorInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { EditorInputCapabilities, GroupIdentifier, ISaveOptions, IRevertOptions, EditorExtensions, IEditorFactoryRegistry, IEditorSerializer, ISideBySideEditorInput, IUntypedEditorInput, isResourceSideBySideEditorInput, isDiffEditorInput, isResourceDiffEditorInput, IResourceSideBySideEditorInput, findViewStateForEditor, IMoveResult, isEditorInput, isResourceEditorInput, Verbosity, isResourceMergeEditorInput } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\n\n/**\n * Side by side editor inputs that have a primary and secondary side.\n */\nexport class SideBySideEditorInput extends EditorInput implements ISideBySideEditorInput {\n\n\tstatic readonly ID: string = 'workbench.editorinputs.sidebysideEditorInput';\n\n\toverride get typeId(): string {\n\t\treturn SideBySideEditorInput.ID;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\n\t\t// Use primary capabilities as main capabilities...\n\t\tlet capabilities = this.primary.capabilities;\n\n\t\t// ...with the exception of `CanSplitInGroup` which\n\t\t// is only relevant to single editors.\n\t\tcapabilities &= ~EditorInputCapabilities.CanSplitInGroup;\n\n\t\t// Trust: should be considered for both sides\n\t\tif (this.secondary.hasCapability(EditorInputCapabilities.RequiresTrust)) {\n\t\t\tcapabilities |= EditorInputCapabilities.RequiresTrust;\n\t\t}\n\n\t\t// Singleton: should be considered for both sides\n\t\tif (this.secondary.hasCapability(EditorInputCapabilities.Singleton)) {\n\t\t\tcapabilities |= EditorInputCapabilities.Singleton;\n\t\t}\n\n\t\t// Indicate we show more than one editor\n\t\tcapabilities |= EditorInputCapabilities.MultipleEditors;\n\n\t\treturn capabilities;\n\t}\n\n\tget resource(): URI | undefined {\n\t\tif (this.hasIdenticalSides) {\n\t\t\t// pretend to be just primary side when being asked for a resource\n\t\t\t// in case both sides are the same. this can help when components\n\t\t\t// want to identify this input among others (e.g. in history).\n\t\t\treturn this.primary.resource;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate hasIdenticalSides = this.primary.matches(this.secondary);\n\n\tconstructor(\n\t\tprotected readonly preferredName: string | undefined,\n\t\tprotected readonly preferredDescription: string | undefined,\n\t\treadonly secondary: EditorInput,\n\t\treadonly primary: EditorInput,\n\t\t@IEditorService private readonly editorService: IEditorService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// When the primary or secondary input gets disposed, dispose this diff editor input\n\t\tthis._register(Event.once(Event.any(this.primary.onWillDispose, this.secondary.onWillDispose))(() => {\n\t\t\tif (!this.isDisposed()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\t// Re-emit some events from the primary side to the outside\n\t\tthis._register(this.primary.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n\n\t\t// Re-emit some events from both sides to the outside\n\t\tthis._register(this.primary.onDidChangeCapabilities(() => this._onDidChangeCapabilities.fire()));\n\t\tthis._register(this.secondary.onDidChangeCapabilities(() => this._onDidChangeCapabilities.fire()));\n\t\tthis._register(this.primary.onDidChangeLabel(() => this._onDidChangeLabel.fire()));\n\t\tthis._register(this.secondary.onDidChangeLabel(() => this._onDidChangeLabel.fire()));\n\t}\n\n\toverride getName(): string {\n\t\tconst preferredName = this.getPreferredName();\n\t\tif (preferredName) {\n\t\t\treturn preferredName;\n\t\t}\n\n\t\tif (this.hasIdenticalSides) {\n\t\t\treturn this.primary.getName(); // keep name concise when same editor is opened side by side\n\t\t}\n\n\t\treturn localize('sideBySideLabels', \"{0} - {1}\", this.secondary.getName(), this.primary.getName());\n\t}\n\n\tgetPreferredName(): string | undefined {\n\t\treturn this.preferredName;\n\t}\n\n\toverride getDescription(verbosity?: Verbosity): string | undefined {\n\t\tconst preferredDescription = this.getPreferredDescription();\n\t\tif (preferredDescription) {\n\t\t\treturn preferredDescription;\n\t\t}\n\n\t\tif (this.hasIdenticalSides) {\n\t\t\treturn this.primary.getDescription(verbosity);\n\t\t}\n\n\t\treturn super.getDescription(verbosity);\n\t}\n\n\tgetPreferredDescription(): string | undefined {\n\t\treturn this.preferredDescription;\n\t}\n\n\toverride getTitle(verbosity?: Verbosity): string {\n\t\tif (this.hasIdenticalSides) {\n\t\t\treturn this.primary.getTitle(verbosity) ?? this.getName();\n\t\t}\n\n\t\treturn super.getTitle(verbosity);\n\t}\n\n\toverride getLabelExtraClasses(): string[] {\n\t\tif (this.hasIdenticalSides) {\n\t\t\treturn this.primary.getLabelExtraClasses();\n\t\t}\n\n\t\treturn super.getLabelExtraClasses();\n\t}\n\n\toverride getAriaLabel(): string {\n\t\tif (this.hasIdenticalSides) {\n\t\t\treturn this.primary.getAriaLabel();\n\t\t}\n\n\t\treturn super.getAriaLabel();\n\t}\n\n\toverride getTelemetryDescriptor(): { [key: string]: unknown } {\n\t\tconst descriptor = this.primary.getTelemetryDescriptor();\n\n\t\treturn { ...descriptor, ...super.getTelemetryDescriptor() };\n\t}\n\n\toverride isDirty(): boolean {\n\t\treturn this.primary.isDirty();\n\t}\n\n\toverride isSaving(): boolean {\n\t\treturn this.primary.isSaving();\n\t}\n\n\toverride async save(group: GroupIdentifier, options?: ISaveOptions): Promise<EditorInput | IUntypedEditorInput | undefined> {\n\t\tconst primarySaveResult = await this.primary.save(group, options);\n\n\t\treturn this.saveResultToEditor(primarySaveResult);\n\t}\n\n\toverride async saveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<EditorInput | IUntypedEditorInput | undefined> {\n\t\tconst primarySaveResult = await this.primary.saveAs(group, options);\n\n\t\treturn this.saveResultToEditor(primarySaveResult);\n\t}\n\n\tprivate saveResultToEditor(primarySaveResult: EditorInput | IUntypedEditorInput | undefined): EditorInput | IUntypedEditorInput | undefined {\n\t\tif (!primarySaveResult || !this.hasIdenticalSides) {\n\t\t\treturn primarySaveResult;\n\t\t}\n\n\t\tif (this.primary.matches(primarySaveResult)) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (primarySaveResult instanceof EditorInput) {\n\t\t\treturn new SideBySideEditorInput(this.preferredName, this.preferredDescription, primarySaveResult, primarySaveResult, this.editorService);\n\t\t}\n\n\t\tif (!isResourceDiffEditorInput(primarySaveResult) && !isResourceSideBySideEditorInput(primarySaveResult) && !isResourceMergeEditorInput(primarySaveResult)) {\n\t\t\treturn {\n\t\t\t\tprimary: primarySaveResult,\n\t\t\t\tsecondary: primarySaveResult,\n\t\t\t\tlabel: this.preferredName,\n\t\t\t\tdescription: this.preferredDescription\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\treturn this.primary.revert(group, options);\n\t}\n\n\toverride async rename(group: GroupIdentifier, target: URI): Promise<IMoveResult | undefined> {\n\t\tif (!this.hasIdenticalSides) {\n\t\t\treturn; // currently only enabled when both sides are identical\n\t\t}\n\n\t\t// Forward rename to primary side\n\t\tconst renameResult = await this.primary.rename(group, target);\n\t\tif (!renameResult) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Build a side-by-side result from the rename result\n\n\t\tif (isEditorInput(renameResult.editor)) {\n\t\t\treturn {\n\t\t\t\teditor: new SideBySideEditorInput(this.preferredName, this.preferredDescription, renameResult.editor, renameResult.editor, this.editorService),\n\t\t\t\toptions: {\n\t\t\t\t\t...renameResult.options,\n\t\t\t\t\tviewState: findViewStateForEditor(this, group, this.editorService)\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (isResourceEditorInput(renameResult.editor)) {\n\t\t\treturn {\n\t\t\t\teditor: {\n\t\t\t\t\tlabel: this.preferredName,\n\t\t\t\t\tdescription: this.preferredDescription,\n\t\t\t\t\tprimary: renameResult.editor,\n\t\t\t\t\tsecondary: renameResult.editor,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t...renameResult.options,\n\t\t\t\t\t\tviewState: findViewStateForEditor(this, group, this.editorService)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride isReadonly(): boolean | IMarkdownString {\n\t\treturn this.primary.isReadonly();\n\t}\n\n\toverride toUntyped(options?: { preserveViewState: GroupIdentifier }): IResourceSideBySideEditorInput | undefined {\n\t\tconst primaryResourceEditorInput = this.primary.toUntyped(options);\n\t\tconst secondaryResourceEditorInput = this.secondary.toUntyped(options);\n\n\t\t// Prevent nested side by side editors which are unsupported\n\t\tif (\n\t\t\tprimaryResourceEditorInput && secondaryResourceEditorInput &&\n\t\t\t!isResourceDiffEditorInput(primaryResourceEditorInput) && !isResourceDiffEditorInput(secondaryResourceEditorInput) &&\n\t\t\t!isResourceSideBySideEditorInput(primaryResourceEditorInput) && !isResourceSideBySideEditorInput(secondaryResourceEditorInput) &&\n\t\t\t!isResourceMergeEditorInput(primaryResourceEditorInput) && !isResourceMergeEditorInput(secondaryResourceEditorInput)\n\t\t) {\n\t\t\tconst untypedInput: IResourceSideBySideEditorInput = {\n\t\t\t\tlabel: this.preferredName,\n\t\t\t\tdescription: this.preferredDescription,\n\t\t\t\tprimary: primaryResourceEditorInput,\n\t\t\t\tsecondary: secondaryResourceEditorInput\n\t\t\t};\n\n\t\t\tif (typeof options?.preserveViewState === 'number') {\n\t\t\t\tuntypedInput.options = {\n\t\t\t\t\tviewState: findViewStateForEditor(this, options.preserveViewState, this.editorService)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn untypedInput;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (this === otherInput) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (isDiffEditorInput(otherInput) || isResourceDiffEditorInput(otherInput)) {\n\t\t\treturn false; // prevent subclass from matching\n\t\t}\n\n\t\tif (otherInput instanceof SideBySideEditorInput) {\n\t\t\treturn this.primary.matches(otherInput.primary) && this.secondary.matches(otherInput.secondary);\n\t\t}\n\n\t\tif (isResourceSideBySideEditorInput(otherInput)) {\n\t\t\treturn this.primary.matches(otherInput.primary) && this.secondary.matches(otherInput.secondary);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n// Register SideBySide/DiffEditor Input Serializer\ninterface ISerializedSideBySideEditorInput {\n\tname: string | undefined;\n\tdescription: string | undefined;\n\n\tprimarySerialized: string;\n\tsecondarySerialized: string;\n\n\tprimaryTypeId: string;\n\tsecondaryTypeId: string;\n}\n\nexport abstract class AbstractSideBySideEditorInputSerializer implements IEditorSerializer {\n\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\tconst input = editorInput as SideBySideEditorInput;\n\n\t\tif (input.primary && input.secondary) {\n\t\t\tconst [secondaryInputSerializer, primaryInputSerializer] = this.getSerializers(input.secondary.typeId, input.primary.typeId);\n\n\t\t\treturn !!(secondaryInputSerializer?.canSerialize(input.secondary) && primaryInputSerializer?.canSerialize(input.primary));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tserialize(editorInput: EditorInput): string | undefined {\n\t\tconst input = editorInput as SideBySideEditorInput;\n\n\t\tif (input.primary && input.secondary) {\n\t\t\tconst [secondaryInputSerializer, primaryInputSerializer] = this.getSerializers(input.secondary.typeId, input.primary.typeId);\n\t\t\tif (primaryInputSerializer && secondaryInputSerializer) {\n\t\t\t\tconst primarySerialized = primaryInputSerializer.serialize(input.primary);\n\t\t\t\tconst secondarySerialized = secondaryInputSerializer.serialize(input.secondary);\n\n\t\t\t\tif (primarySerialized && secondarySerialized) {\n\t\t\t\t\tconst serializedEditorInput: ISerializedSideBySideEditorInput = {\n\t\t\t\t\t\tname: input.getPreferredName(),\n\t\t\t\t\t\tdescription: input.getPreferredDescription(),\n\t\t\t\t\t\tprimarySerialized: primarySerialized,\n\t\t\t\t\t\tsecondarySerialized: secondarySerialized,\n\t\t\t\t\t\tprimaryTypeId: input.primary.typeId,\n\t\t\t\t\t\tsecondaryTypeId: input.secondary.typeId\n\t\t\t\t\t};\n\n\t\t\t\t\treturn JSON.stringify(serializedEditorInput);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): EditorInput | undefined {\n\t\tconst deserialized: ISerializedSideBySideEditorInput = JSON.parse(serializedEditorInput);\n\n\t\tconst [secondaryInputSerializer, primaryInputSerializer] = this.getSerializers(deserialized.secondaryTypeId, deserialized.primaryTypeId);\n\t\tif (primaryInputSerializer && secondaryInputSerializer) {\n\t\t\tconst primaryInput = primaryInputSerializer.deserialize(instantiationService, deserialized.primarySerialized);\n\t\t\tconst secondaryInput = secondaryInputSerializer.deserialize(instantiationService, deserialized.secondarySerialized);\n\n\t\t\tif (primaryInput instanceof EditorInput && secondaryInput instanceof EditorInput) {\n\t\t\t\treturn this.createEditorInput(instantiationService, deserialized.name, deserialized.description, secondaryInput, primaryInput);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getSerializers(secondaryEditorInputTypeId: string, primaryEditorInputTypeId: string): [IEditorSerializer | undefined, IEditorSerializer | undefined] {\n\t\tconst registry = Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory);\n\n\t\treturn [registry.getEditorSerializer(secondaryEditorInputTypeId), registry.getEditorSerializer(primaryEditorInputTypeId)];\n\t}\n\n\tprotected abstract createEditorInput(instantiationService: IInstantiationService, name: string | undefined, description: string | undefined, secondaryInput: EditorInput, primaryInput: EditorInput): EditorInput;\n}\n\nexport class SideBySideEditorInputSerializer extends AbstractSideBySideEditorInputSerializer {\n\n\tprotected createEditorInput(instantiationService: IInstantiationService, name: string | undefined, description: string | undefined, secondaryInput: EditorInput, primaryInput: EditorInput): EditorInput {\n\t\treturn instantiationService.createInstance(SideBySideEditorInput, name, description, secondaryInput, primaryInput);\n\t}\n}\n"]}