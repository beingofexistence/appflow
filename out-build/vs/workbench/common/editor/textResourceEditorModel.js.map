{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/common/editor/textResourceEditorModel.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAShG;;;OAGG;IACI,IAAM,IAAI,GAAV,MAAM,IAAwB,SAAQ,qBAAG;QAE/C,YACC,QAAa,EACK,eAAoB,EACvB,YAAiB,EACL,wBAA6B,EACjC,oBAAyB;YAEhD,KAAK,CAAC,YAAY,EAAE,eAAe,EAAE,wBAAwB,EAAE,oBAAoB,EAAE,QAAQ,CAAC,CAAC;QAChG,CAAC;QAEQ,OAAO;YAEf,mDAAmD;YACnD,IAAI,IAAI,CAAC,CAAC,EAAsB;gBAC/B,IAAI,CAAC,CAAC,CAAY,YAAY,CAAC,IAAI,CAAC,CAAC,CAAqB,CAAC;aAC3D;YAED,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KACD,CAAA;IArBY,oBAAI;mBAAJ,IAAI;QAId,WAAA,cAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,oCAAG,CAAA;QACH,WAAA,mBAAG,CAAA;OAPO,IAAI,CAqBhB","file":"textResourceEditorModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BaseTextEditorModel } from 'vs/workbench/common/editor/textEditorModel';\nimport { URI } from 'vs/base/common/uri';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ILanguageDetectionService } from 'vs/workbench/services/languageDetection/common/languageDetectionWorkerService';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\n\n/**\n * An editor model for in-memory, readonly text content that\n * is backed by an existing editor model.\n */\nexport class TextResourceEditorModel extends BaseTextEditorModel {\n\n\tconstructor(\n\t\tresource: URI,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@IModelService modelService: IModelService,\n\t\t@ILanguageDetectionService languageDetectionService: ILanguageDetectionService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t) {\n\t\tsuper(modelService, languageService, languageDetectionService, accessibilityService, resource);\n\t}\n\n\toverride dispose(): void {\n\n\t\t// force this class to dispose the underlying model\n\t\tif (this.textEditorModelHandle) {\n\t\t\tthis.modelService.destroyModel(this.textEditorModelHandle);\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n"]}