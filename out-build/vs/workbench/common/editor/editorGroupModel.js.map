{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/common/editor/editorGroupModel.ts"],"names":[],"mappings":"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","file":"editorGroupModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEditorFactoryRegistry, GroupIdentifier, EditorsOrder, EditorExtensions, IUntypedEditorInput, SideBySideEditor, EditorCloseContext, IMatchEditorOptions, GroupModelChangeKind } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { SideBySideEditorInput } from 'vs/workbench/common/editor/sideBySideEditorInput';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationChangeEvent, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { dispose, Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { coalesce } from 'vs/base/common/arrays';\n\nconst EditorOpenPositioning = {\n\tLEFT: 'left',\n\tRIGHT: 'right',\n\tFIRST: 'first',\n\tLAST: 'last'\n};\n\nexport interface IEditorOpenOptions {\n\treadonly pinned?: boolean;\n\tsticky?: boolean;\n\tactive?: boolean;\n\treadonly index?: number;\n\treadonly supportSideBySide?: SideBySideEditor.ANY | SideBySideEditor.BOTH;\n}\n\nexport interface IEditorOpenResult {\n\treadonly editor: EditorInput;\n\treadonly isNew: boolean;\n}\n\nexport interface ISerializedEditorInput {\n\treadonly id: string;\n\treadonly value: string;\n}\n\nexport interface ISerializedEditorGroupModel {\n\treadonly id: number;\n\treadonly locked?: boolean;\n\treadonly editors: ISerializedEditorInput[];\n\treadonly mru: number[];\n\treadonly preview?: number;\n\tsticky?: number;\n}\n\nexport function isSerializedEditorGroupModel(group?: unknown): group is ISerializedEditorGroupModel {\n\tconst candidate = group as ISerializedEditorGroupModel | undefined;\n\n\treturn !!(candidate && typeof candidate === 'object' && Array.isArray(candidate.editors) && Array.isArray(candidate.mru));\n}\n\nexport interface IMatchOptions {\n\n\t/**\n\t * Whether to consider a side by side editor as matching.\n\t * By default, side by side editors will not be considered\n\t * as matching, even if the editor is opened in one of the sides.\n\t */\n\treadonly supportSideBySide?: SideBySideEditor.ANY | SideBySideEditor.BOTH;\n\n\t/**\n\t * Only consider an editor to match when the\n\t * `candidate === editor` but not when\n\t * `candidate.matches(editor)`.\n\t */\n\treadonly strictEquals?: boolean;\n}\n\nexport interface IGroupModelChangeEvent {\n\n\t/**\n\t * The kind of change that occurred in the group model.\n\t */\n\treadonly kind: GroupModelChangeKind;\n\n\t/**\n\t * Only applies when editors change providing\n\t * access to the editor the event is about.\n\t */\n\treadonly editor?: EditorInput;\n\n\t/**\n\t * Only applies when editors change providing\n\t * access to the index of the editor the event\n\t * is about.\n\t */\n\treadonly editorIndex?: number;\n}\n\nexport interface IGroupEditorChangeEvent extends IGroupModelChangeEvent {\n\treadonly editor: EditorInput;\n\treadonly editorIndex: number;\n}\n\nexport function isGroupEditorChangeEvent(e: IGroupModelChangeEvent): e is IGroupEditorChangeEvent {\n\tconst candidate = e as IGroupEditorOpenEvent;\n\n\treturn candidate.editor && candidate.editorIndex !== undefined;\n}\n\nexport interface IGroupEditorOpenEvent extends IGroupEditorChangeEvent {\n\n\treadonly kind: GroupModelChangeKind.EDITOR_OPEN;\n}\n\nexport function isGroupEditorOpenEvent(e: IGroupModelChangeEvent): e is IGroupEditorOpenEvent {\n\tconst candidate = e as IGroupEditorOpenEvent;\n\n\treturn candidate.kind === GroupModelChangeKind.EDITOR_OPEN && candidate.editorIndex !== undefined;\n}\n\nexport interface IGroupEditorMoveEvent extends IGroupEditorChangeEvent {\n\n\treadonly kind: GroupModelChangeKind.EDITOR_MOVE;\n\n\t/**\n\t * Signifies the index the editor is moving from.\n\t * `editorIndex` will contain the index the editor\n\t * is moving to.\n\t */\n\treadonly oldEditorIndex: number;\n}\n\nexport function isGroupEditorMoveEvent(e: IGroupModelChangeEvent): e is IGroupEditorMoveEvent {\n\tconst candidate = e as IGroupEditorMoveEvent;\n\n\treturn candidate.kind === GroupModelChangeKind.EDITOR_MOVE && candidate.editorIndex !== undefined && candidate.oldEditorIndex !== undefined;\n}\n\nexport interface IGroupEditorCloseEvent extends IGroupEditorChangeEvent {\n\n\treadonly kind: GroupModelChangeKind.EDITOR_CLOSE;\n\n\t/**\n\t * Signifies the context in which the editor\n\t * is being closed. This allows for understanding\n\t * if a replace or reopen is occurring\n\t */\n\treadonly context: EditorCloseContext;\n\n\t/**\n\t * Signifies whether or not the closed editor was\n\t * sticky. This is necessary becasue state is lost\n\t * after closing.\n\t */\n\treadonly sticky: boolean;\n}\n\nexport function isGroupEditorCloseEvent(e: IGroupModelChangeEvent): e is IGroupEditorCloseEvent {\n\tconst candidate = e as IGroupEditorCloseEvent;\n\n\treturn candidate.kind === GroupModelChangeKind.EDITOR_CLOSE && candidate.editorIndex !== undefined && candidate.context !== undefined && candidate.sticky !== undefined;\n}\n\ninterface IEditorCloseResult {\n\treadonly editor: EditorInput;\n\treadonly context: EditorCloseContext;\n\treadonly editorIndex: number;\n\treadonly sticky: boolean;\n}\n\nexport class EditorGroupModel extends Disposable {\n\n\tprivate static IDS = 0;\n\n\t//#region events\n\n\tprivate readonly _onDidModelChange = this._register(new Emitter<IGroupModelChangeEvent>());\n\treadonly onDidModelChange = this._onDidModelChange.event;\n\n\t//#endregion\n\n\tprivate _id: GroupIdentifier;\n\tget id(): GroupIdentifier { return this._id; }\n\n\tprivate editors: EditorInput[] = [];\n\tprivate mru: EditorInput[] = [];\n\n\tprivate readonly editorListeners = new Set<DisposableStore>();\n\n\tprivate locked = false;\n\n\tprivate preview: EditorInput | null = null; // editor in preview state\n\tprivate active: EditorInput | null = null;  // editor in active state\n\tprivate sticky = -1; \t\t\t\t\t\t// index of first editor in sticky state\n\n\tprivate editorOpenPositioning: ('left' | 'right' | 'first' | 'last') | undefined;\n\tprivate focusRecentEditorAfterClose: boolean | undefined;\n\n\tconstructor(\n\t\tlabelOrSerializedGroup: ISerializedEditorGroupModel | undefined,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tif (isSerializedEditorGroupModel(labelOrSerializedGroup)) {\n\t\t\tthis._id = this.deserialize(labelOrSerializedGroup);\n\t\t} else {\n\t\t\tthis._id = EditorGroupModel.IDS++;\n\t\t}\n\n\t\tthis.onConfigurationUpdated();\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(e)));\n\t}\n\n\tprivate onConfigurationUpdated(e?: IConfigurationChangeEvent): void {\n\t\tif (e && !e.affectsConfiguration('workbench.editor.openPositioning') && !e.affectsConfiguration('workbench.editor.focusRecentEditorAfterClose')) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editorOpenPositioning = this.configurationService.getValue('workbench.editor.openPositioning');\n\t\tthis.focusRecentEditorAfterClose = this.configurationService.getValue('workbench.editor.focusRecentEditorAfterClose');\n\t}\n\n\tget count(): number {\n\t\treturn this.editors.length;\n\t}\n\n\tget stickyCount(): number {\n\t\treturn this.sticky + 1;\n\t}\n\n\tgetEditors(order: EditorsOrder, options?: { excludeSticky?: boolean }): EditorInput[] {\n\t\tconst editors = order === EditorsOrder.MOST_RECENTLY_ACTIVE ? this.mru.slice(0) : this.editors.slice(0);\n\n\t\tif (options?.excludeSticky) {\n\n\t\t\t// MRU: need to check for index on each\n\t\t\tif (order === EditorsOrder.MOST_RECENTLY_ACTIVE) {\n\t\t\t\treturn editors.filter(editor => !this.isSticky(editor));\n\t\t\t}\n\n\t\t\t// Sequential: simply start after sticky index\n\t\t\treturn editors.slice(this.sticky + 1);\n\t\t}\n\n\t\treturn editors;\n\t}\n\n\tgetEditorByIndex(index: number): EditorInput | undefined {\n\t\treturn this.editors[index];\n\t}\n\n\tget activeEditor(): EditorInput | null {\n\t\treturn this.active;\n\t}\n\n\tisActive(editor: EditorInput | IUntypedEditorInput): boolean {\n\t\treturn this.matches(this.active, editor);\n\t}\n\n\tget previewEditor(): EditorInput | null {\n\t\treturn this.preview;\n\t}\n\n\topenEditor(candidate: EditorInput, options?: IEditorOpenOptions): IEditorOpenResult {\n\t\tconst makeSticky = options?.sticky || (typeof options?.index === 'number' && this.isSticky(options.index));\n\t\tconst makePinned = options?.pinned || options?.sticky;\n\t\tconst makeActive = options?.active || !this.activeEditor || (!makePinned && this.matches(this.preview, this.activeEditor));\n\n\t\tconst existingEditorAndIndex = this.findEditor(candidate, options);\n\n\t\t// New editor\n\t\tif (!existingEditorAndIndex) {\n\t\t\tconst newEditor = candidate;\n\t\t\tconst indexOfActive = this.indexOf(this.active);\n\n\t\t\t// Insert into specific position\n\t\t\tlet targetIndex: number;\n\t\t\tif (options && typeof options.index === 'number') {\n\t\t\t\ttargetIndex = options.index;\n\t\t\t}\n\n\t\t\t// Insert to the BEGINNING\n\t\t\telse if (this.editorOpenPositioning === EditorOpenPositioning.FIRST) {\n\t\t\t\ttargetIndex = 0;\n\n\t\t\t\t// Always make sure targetIndex is after sticky editors\n\t\t\t\t// unless we are explicitly told to make the editor sticky\n\t\t\t\tif (!makeSticky && this.isSticky(targetIndex)) {\n\t\t\t\t\ttargetIndex = this.sticky + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Insert to the END\n\t\t\telse if (this.editorOpenPositioning === EditorOpenPositioning.LAST) {\n\t\t\t\ttargetIndex = this.editors.length;\n\t\t\t}\n\n\t\t\t// Insert to LEFT or RIGHT of active editor\n\t\t\telse {\n\n\t\t\t\t// Insert to the LEFT of active editor\n\t\t\t\tif (this.editorOpenPositioning === EditorOpenPositioning.LEFT) {\n\t\t\t\t\tif (indexOfActive === 0 || !this.editors.length) {\n\t\t\t\t\t\ttargetIndex = 0; // to the left becoming first editor in list\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttargetIndex = indexOfActive; // to the left of active editor\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Insert to the RIGHT of active editor\n\t\t\t\telse {\n\t\t\t\t\ttargetIndex = indexOfActive + 1;\n\t\t\t\t}\n\n\t\t\t\t// Always make sure targetIndex is after sticky editors\n\t\t\t\t// unless we are explicitly told to make the editor sticky\n\t\t\t\tif (!makeSticky && this.isSticky(targetIndex)) {\n\t\t\t\t\ttargetIndex = this.sticky + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the editor becomes sticky, increment the sticky index and adjust\n\t\t\t// the targetIndex to be at the end of sticky editors unless already.\n\t\t\tif (makeSticky) {\n\t\t\t\tthis.sticky++;\n\n\t\t\t\tif (!this.isSticky(targetIndex)) {\n\t\t\t\t\ttargetIndex = this.sticky;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Insert into our list of editors if pinned or we have no preview editor\n\t\t\tif (makePinned || !this.preview) {\n\t\t\t\tthis.splice(targetIndex, false, newEditor);\n\t\t\t}\n\n\t\t\t// Handle preview\n\t\t\tif (!makePinned) {\n\n\t\t\t\t// Replace existing preview with this editor if we have a preview\n\t\t\t\tif (this.preview) {\n\t\t\t\t\tconst indexOfPreview = this.indexOf(this.preview);\n\t\t\t\t\tif (targetIndex > indexOfPreview) {\n\t\t\t\t\t\ttargetIndex--; // accomodate for the fact that the preview editor closes\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.replaceEditor(this.preview, newEditor, targetIndex, !makeActive);\n\t\t\t\t}\n\n\t\t\t\tthis.preview = newEditor;\n\t\t\t}\n\n\t\t\t// Listeners\n\t\t\tthis.registerEditorListeners(newEditor);\n\n\t\t\t// Event\n\t\t\tconst event: IGroupEditorOpenEvent = {\n\t\t\t\tkind: GroupModelChangeKind.EDITOR_OPEN,\n\t\t\t\teditor: newEditor,\n\t\t\t\teditorIndex: targetIndex\n\t\t\t};\n\t\t\tthis._onDidModelChange.fire(event);\n\n\t\t\t// Handle active\n\t\t\tif (makeActive) {\n\t\t\t\tthis.doSetActive(newEditor, targetIndex);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\teditor: newEditor,\n\t\t\t\tisNew: true\n\t\t\t};\n\t\t}\n\n\t\t// Existing editor\n\t\telse {\n\t\t\tconst [existingEditor, existingEditorIndex] = existingEditorAndIndex;\n\n\t\t\t// Pin it\n\t\t\tif (makePinned) {\n\t\t\t\tthis.doPin(existingEditor, existingEditorIndex);\n\t\t\t}\n\n\t\t\t// Activate it\n\t\t\tif (makeActive) {\n\t\t\t\tthis.doSetActive(existingEditor, existingEditorIndex);\n\t\t\t}\n\n\t\t\t// Respect index\n\t\t\tif (options && typeof options.index === 'number') {\n\t\t\t\tthis.moveEditor(existingEditor, options.index);\n\t\t\t}\n\n\t\t\t// Stick it (intentionally after the moveEditor call in case\n\t\t\t// the editor was already moved into the sticky range)\n\t\t\tif (makeSticky) {\n\t\t\t\tthis.doStick(existingEditor, this.indexOf(existingEditor));\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\teditor: existingEditor,\n\t\t\t\tisNew: false\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate registerEditorListeners(editor: EditorInput): void {\n\t\tconst listeners = new DisposableStore();\n\t\tthis.editorListeners.add(listeners);\n\n\t\t// Re-emit disposal of editor input as our own event\n\t\tlisteners.add(Event.once(editor.onWillDispose)(() => {\n\t\t\tconst editorIndex = this.editors.indexOf(editor);\n\t\t\tif (editorIndex >= 0) {\n\t\t\t\tconst event: IGroupEditorChangeEvent = {\n\t\t\t\t\tkind: GroupModelChangeKind.EDITOR_WILL_DISPOSE,\n\t\t\t\t\teditor,\n\t\t\t\t\teditorIndex\n\t\t\t\t};\n\t\t\t\tthis._onDidModelChange.fire(event);\n\t\t\t}\n\t\t}));\n\n\t\t// Re-Emit dirty state changes\n\t\tlisteners.add(editor.onDidChangeDirty(() => {\n\t\t\tconst event: IGroupEditorChangeEvent = {\n\t\t\t\tkind: GroupModelChangeKind.EDITOR_DIRTY,\n\t\t\t\teditor,\n\t\t\t\teditorIndex: this.editors.indexOf(editor)\n\t\t\t};\n\t\t\tthis._onDidModelChange.fire(event);\n\t\t}));\n\n\t\t// Re-Emit label changes\n\t\tlisteners.add(editor.onDidChangeLabel(() => {\n\t\t\tconst event: IGroupEditorChangeEvent = {\n\t\t\t\tkind: GroupModelChangeKind.EDITOR_LABEL,\n\t\t\t\teditor,\n\t\t\t\teditorIndex: this.editors.indexOf(editor)\n\t\t\t};\n\t\t\tthis._onDidModelChange.fire(event);\n\t\t}));\n\n\t\t// Re-Emit capability changes\n\t\tlisteners.add(editor.onDidChangeCapabilities(() => {\n\t\t\tconst event: IGroupEditorChangeEvent = {\n\t\t\t\tkind: GroupModelChangeKind.EDITOR_CAPABILITIES,\n\t\t\t\teditor,\n\t\t\t\teditorIndex: this.editors.indexOf(editor)\n\t\t\t};\n\t\t\tthis._onDidModelChange.fire(event);\n\t\t}));\n\n\t\t// Clean up dispose listeners once the editor gets closed\n\t\tlisteners.add(this.onDidModelChange(event => {\n\t\t\tif (event.kind === GroupModelChangeKind.EDITOR_CLOSE && event.editor?.matches(editor)) {\n\t\t\t\tdispose(listeners);\n\t\t\t\tthis.editorListeners.delete(listeners);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate replaceEditor(toReplace: EditorInput, replaceWith: EditorInput, replaceIndex: number, openNext = true): void {\n\t\tconst closeResult = this.doCloseEditor(toReplace, EditorCloseContext.REPLACE, openNext); // optimization to prevent multiple setActive() in one call\n\n\t\t// We want to first add the new editor into our model before emitting the close event because\n\t\t// firing the close event can trigger a dispose on the same editor that is now being added.\n\t\t// This can lead into opening a disposed editor which is not what we want.\n\t\tthis.splice(replaceIndex, false, replaceWith);\n\n\t\tif (closeResult) {\n\t\t\tconst event: IGroupEditorCloseEvent = {\n\t\t\t\tkind: GroupModelChangeKind.EDITOR_CLOSE,\n\t\t\t\t...closeResult\n\t\t\t};\n\t\t\tthis._onDidModelChange.fire(event);\n\t\t}\n\t}\n\n\tcloseEditor(candidate: EditorInput, context = EditorCloseContext.UNKNOWN, openNext = true): IEditorCloseResult | undefined {\n\t\tconst closeResult = this.doCloseEditor(candidate, context, openNext);\n\n\t\tif (closeResult) {\n\t\t\tconst event: IGroupEditorCloseEvent = {\n\t\t\t\tkind: GroupModelChangeKind.EDITOR_CLOSE,\n\t\t\t\t...closeResult\n\t\t\t};\n\t\t\tthis._onDidModelChange.fire(event);\n\n\t\t\treturn closeResult;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate doCloseEditor(candidate: EditorInput, context: EditorCloseContext, openNext: boolean): IEditorCloseResult | undefined {\n\t\tconst index = this.indexOf(candidate);\n\t\tif (index === -1) {\n\t\t\treturn undefined; // not found\n\t\t}\n\n\t\tconst editor = this.editors[index];\n\t\tconst sticky = this.isSticky(index);\n\n\t\t// Active Editor closed\n\t\tif (openNext && this.matches(this.active, editor)) {\n\n\t\t\t// More than one editor\n\t\t\tif (this.mru.length > 1) {\n\t\t\t\tlet newActive: EditorInput;\n\t\t\t\tif (this.focusRecentEditorAfterClose) {\n\t\t\t\t\tnewActive = this.mru[1]; // active editor is always first in MRU, so pick second editor after as new active\n\t\t\t\t} else {\n\t\t\t\t\tif (index === this.editors.length - 1) {\n\t\t\t\t\t\tnewActive = this.editors[index - 1]; // last editor is closed, pick previous as new active\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewActive = this.editors[index + 1]; // pick next editor as new active\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.doSetActive(newActive, this.editors.indexOf(newActive));\n\t\t\t}\n\n\t\t\t// One Editor\n\t\t\telse {\n\t\t\t\tthis.active = null;\n\t\t\t}\n\t\t}\n\n\t\t// Preview Editor closed\n\t\tif (this.matches(this.preview, editor)) {\n\t\t\tthis.preview = null;\n\t\t}\n\n\t\t// Remove from arrays\n\t\tthis.splice(index, true);\n\n\t\t// Event\n\t\treturn { editor, sticky, editorIndex: index, context };\n\t}\n\n\tmoveEditor(candidate: EditorInput, toIndex: number): EditorInput | undefined {\n\n\t\t// Ensure toIndex is in bounds of our model\n\t\tif (toIndex >= this.editors.length) {\n\t\t\ttoIndex = this.editors.length - 1;\n\t\t} else if (toIndex < 0) {\n\t\t\ttoIndex = 0;\n\t\t}\n\n\t\tconst index = this.indexOf(candidate);\n\t\tif (index < 0 || toIndex === index) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editors[index];\n\t\tconst sticky = this.sticky;\n\n\t\t// Adjust sticky index: editor moved out of sticky state into unsticky state\n\t\tif (this.isSticky(index) && toIndex > this.sticky) {\n\t\t\tthis.sticky--;\n\t\t}\n\n\t\t// ...or editor moved into sticky state from unsticky state\n\t\telse if (!this.isSticky(index) && toIndex <= this.sticky) {\n\t\t\tthis.sticky++;\n\t\t}\n\n\t\t// Move\n\t\tthis.editors.splice(index, 1);\n\t\tthis.editors.splice(toIndex, 0, editor);\n\n\t\t// Move Event\n\t\tconst event: IGroupEditorMoveEvent = {\n\t\t\tkind: GroupModelChangeKind.EDITOR_MOVE,\n\t\t\teditor,\n\t\t\toldEditorIndex: index,\n\t\t\teditorIndex: toIndex\n\t\t};\n\t\tthis._onDidModelChange.fire(event);\n\n\t\t// Sticky Event (if sticky changed as part of the move)\n\t\tif (sticky !== this.sticky) {\n\t\t\tconst event: IGroupEditorChangeEvent = {\n\t\t\t\tkind: GroupModelChangeKind.EDITOR_STICKY,\n\t\t\t\teditor,\n\t\t\t\teditorIndex: toIndex\n\t\t\t};\n\t\t\tthis._onDidModelChange.fire(event);\n\t\t}\n\n\t\treturn editor;\n\t}\n\n\tsetActive(candidate: EditorInput | undefined): EditorInput | undefined {\n\t\tlet result: EditorInput | undefined = undefined;\n\n\t\tif (!candidate) {\n\t\t\tthis.setGroupActive();\n\t\t} else {\n\t\t\tresult = this.setEditorActive(candidate);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate setGroupActive(): void {\n\t\t// We do not really keep the `active` state in our model because\n\t\t// it has no special meaning to us here. But for consistency\n\t\t// we emit a `onDidModelChange` event so that components can\n\t\t// react.\n\t\tthis._onDidModelChange.fire({ kind: GroupModelChangeKind.GROUP_ACTIVE });\n\t}\n\n\tprivate setEditorActive(candidate: EditorInput): EditorInput | undefined {\n\t\tconst res = this.findEditor(candidate);\n\t\tif (!res) {\n\t\t\treturn; // not found\n\t\t}\n\n\t\tconst [editor, editorIndex] = res;\n\n\t\tthis.doSetActive(editor, editorIndex);\n\n\t\treturn editor;\n\t}\n\n\tprivate doSetActive(editor: EditorInput, editorIndex: number): void {\n\t\tif (this.matches(this.active, editor)) {\n\t\t\treturn; // already active\n\t\t}\n\n\t\tthis.active = editor;\n\n\t\t// Bring to front in MRU list\n\t\tconst mruIndex = this.indexOf(editor, this.mru);\n\t\tthis.mru.splice(mruIndex, 1);\n\t\tthis.mru.unshift(editor);\n\n\t\t// Event\n\t\tconst event: IGroupEditorChangeEvent = {\n\t\t\tkind: GroupModelChangeKind.EDITOR_ACTIVE,\n\t\t\teditor,\n\t\t\teditorIndex\n\t\t};\n\t\tthis._onDidModelChange.fire(event);\n\t}\n\n\tsetIndex(index: number) {\n\t\t// We do not really keep the `index` in our model because\n\t\t// it has no special meaning to us here. But for consistency\n\t\t// we emit a `onDidModelChange` event so that components can\n\t\t// react.\n\t\tthis._onDidModelChange.fire({ kind: GroupModelChangeKind.GROUP_INDEX });\n\t}\n\n\tpin(candidate: EditorInput): EditorInput | undefined {\n\t\tconst res = this.findEditor(candidate);\n\t\tif (!res) {\n\t\t\treturn; // not found\n\t\t}\n\n\t\tconst [editor, editorIndex] = res;\n\n\t\tthis.doPin(editor, editorIndex);\n\n\t\treturn editor;\n\t}\n\n\tprivate doPin(editor: EditorInput, editorIndex: number): void {\n\t\tif (this.isPinned(editor)) {\n\t\t\treturn; // can only pin a preview editor\n\t\t}\n\n\t\t// Convert the preview editor to be a pinned editor\n\t\tthis.preview = null;\n\n\t\t// Event\n\t\tconst event: IGroupEditorChangeEvent = {\n\t\t\tkind: GroupModelChangeKind.EDITOR_PIN,\n\t\t\teditor,\n\t\t\teditorIndex\n\t\t};\n\t\tthis._onDidModelChange.fire(event);\n\t}\n\n\tunpin(candidate: EditorInput): EditorInput | undefined {\n\t\tconst res = this.findEditor(candidate);\n\t\tif (!res) {\n\t\t\treturn; // not found\n\t\t}\n\n\t\tconst [editor, editorIndex] = res;\n\n\t\tthis.doUnpin(editor, editorIndex);\n\n\t\treturn editor;\n\t}\n\n\tprivate doUnpin(editor: EditorInput, editorIndex: number): void {\n\t\tif (!this.isPinned(editor)) {\n\t\t\treturn; // can only unpin a pinned editor\n\t\t}\n\n\t\t// Set new\n\t\tconst oldPreview = this.preview;\n\t\tthis.preview = editor;\n\n\t\t// Event\n\t\tconst event: IGroupEditorChangeEvent = {\n\t\t\tkind: GroupModelChangeKind.EDITOR_PIN,\n\t\t\teditor,\n\t\t\teditorIndex\n\t\t};\n\t\tthis._onDidModelChange.fire(event);\n\n\t\t// Close old preview editor if any\n\t\tif (oldPreview) {\n\t\t\tthis.closeEditor(oldPreview, EditorCloseContext.UNPIN);\n\t\t}\n\t}\n\n\tisPinned(editorOrIndex: EditorInput | number): boolean {\n\t\tlet editor: EditorInput;\n\t\tif (typeof editorOrIndex === 'number') {\n\t\t\teditor = this.editors[editorOrIndex];\n\t\t} else {\n\t\t\teditor = editorOrIndex;\n\t\t}\n\n\t\treturn !this.matches(this.preview, editor);\n\t}\n\n\tstick(candidate: EditorInput): EditorInput | undefined {\n\t\tconst res = this.findEditor(candidate);\n\t\tif (!res) {\n\t\t\treturn; // not found\n\t\t}\n\n\t\tconst [editor, editorIndex] = res;\n\n\t\tthis.doStick(editor, editorIndex);\n\n\t\treturn editor;\n\t}\n\n\tprivate doStick(editor: EditorInput, editorIndex: number): void {\n\t\tif (this.isSticky(editorIndex)) {\n\t\t\treturn; // can only stick a non-sticky editor\n\t\t}\n\n\t\t// Pin editor\n\t\tthis.pin(editor);\n\n\t\t// Move editor to be the last sticky editor\n\t\tconst newEditorIndex = this.sticky + 1;\n\t\tthis.moveEditor(editor, newEditorIndex);\n\n\t\t// Adjust sticky index\n\t\tthis.sticky++;\n\n\t\t// Event\n\t\tconst event: IGroupEditorChangeEvent = {\n\t\t\tkind: GroupModelChangeKind.EDITOR_STICKY,\n\t\t\teditor,\n\t\t\teditorIndex: newEditorIndex\n\t\t};\n\t\tthis._onDidModelChange.fire(event);\n\t}\n\n\tunstick(candidate: EditorInput): EditorInput | undefined {\n\t\tconst res = this.findEditor(candidate);\n\t\tif (!res) {\n\t\t\treturn; // not found\n\t\t}\n\n\t\tconst [editor, editorIndex] = res;\n\n\t\tthis.doUnstick(editor, editorIndex);\n\n\t\treturn editor;\n\t}\n\n\tprivate doUnstick(editor: EditorInput, editorIndex: number): void {\n\t\tif (!this.isSticky(editorIndex)) {\n\t\t\treturn; // can only unstick a sticky editor\n\t\t}\n\n\t\t// Move editor to be the first non-sticky editor\n\t\tconst newEditorIndex = this.sticky;\n\t\tthis.moveEditor(editor, newEditorIndex);\n\n\t\t// Adjust sticky index\n\t\tthis.sticky--;\n\n\t\t// Event\n\t\tconst event: IGroupEditorChangeEvent = {\n\t\t\tkind: GroupModelChangeKind.EDITOR_STICKY,\n\t\t\teditor,\n\t\t\teditorIndex: newEditorIndex\n\t\t};\n\t\tthis._onDidModelChange.fire(event);\n\t}\n\n\tisSticky(candidateOrIndex: EditorInput | number): boolean {\n\t\tif (this.sticky < 0) {\n\t\t\treturn false; // no sticky editor\n\t\t}\n\n\t\tlet index: number;\n\t\tif (typeof candidateOrIndex === 'number') {\n\t\t\tindex = candidateOrIndex;\n\t\t} else {\n\t\t\tindex = this.indexOf(candidateOrIndex);\n\t\t}\n\n\t\tif (index < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn index <= this.sticky;\n\t}\n\n\tprivate splice(index: number, del: boolean, editor?: EditorInput): void {\n\t\tconst editorToDeleteOrReplace = this.editors[index];\n\n\t\t// Perform on sticky index\n\t\tif (del && this.isSticky(index)) {\n\t\t\tthis.sticky--;\n\t\t}\n\n\t\t// Perform on editors array\n\t\tif (editor) {\n\t\t\tthis.editors.splice(index, del ? 1 : 0, editor);\n\t\t} else {\n\t\t\tthis.editors.splice(index, del ? 1 : 0);\n\t\t}\n\n\t\t// Perform on MRU\n\t\t{\n\t\t\t// Add\n\t\t\tif (!del && editor) {\n\t\t\t\tif (this.mru.length === 0) {\n\t\t\t\t\t// the list of most recent editors is empty\n\t\t\t\t\t// so this editor can only be the most recent\n\t\t\t\t\tthis.mru.push(editor);\n\t\t\t\t} else {\n\t\t\t\t\t// we have most recent editors. as such we\n\t\t\t\t\t// put this newly opened editor right after\n\t\t\t\t\t// the current most recent one because it cannot\n\t\t\t\t\t// be the most recently active one unless\n\t\t\t\t\t// it becomes active. but it is still more\n\t\t\t\t\t// active then any other editor in the list.\n\t\t\t\t\tthis.mru.splice(1, 0, editor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove / Replace\n\t\t\telse {\n\t\t\t\tconst indexInMRU = this.indexOf(editorToDeleteOrReplace, this.mru);\n\n\t\t\t\t// Remove\n\t\t\t\tif (del && !editor) {\n\t\t\t\t\tthis.mru.splice(indexInMRU, 1); // remove from MRU\n\t\t\t\t}\n\n\t\t\t\t// Replace\n\t\t\t\telse if (del && editor) {\n\t\t\t\t\tthis.mru.splice(indexInMRU, 1, editor); // replace MRU at location\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tindexOf(candidate: EditorInput | IUntypedEditorInput | null, editors = this.editors, options?: IMatchEditorOptions): number {\n\t\tlet index = -1;\n\t\tif (!candidate) {\n\t\t\treturn index;\n\t\t}\n\n\t\tfor (let i = 0; i < editors.length; i++) {\n\t\t\tconst editor = editors[i];\n\n\t\t\tif (this.matches(editor, candidate, options)) {\n\t\t\t\t// If we are to support side by side matching, it is possible that\n\t\t\t\t// a better direct match is found later. As such, we continue finding\n\t\t\t\t// a matching editor and prefer that match over the side by side one.\n\t\t\t\tif (options?.supportSideBySide && editor instanceof SideBySideEditorInput && !(candidate instanceof SideBySideEditorInput)) {\n\t\t\t\t\tindex = i;\n\t\t\t\t} else {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfindEditor(candidate: EditorInput | null, options?: IMatchEditorOptions): [EditorInput, number /* index */] | undefined {\n\t\tconst index = this.indexOf(candidate, this.editors, options);\n\t\tif (index === -1) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn [this.editors[index], index];\n\t}\n\n\tisFirst(candidate: EditorInput | null): boolean {\n\t\treturn this.matches(this.editors[0], candidate);\n\t}\n\n\tisLast(candidate: EditorInput | null): boolean {\n\t\treturn this.matches(this.editors[this.editors.length - 1], candidate);\n\t}\n\n\tcontains(candidate: EditorInput | IUntypedEditorInput, options?: IMatchEditorOptions): boolean {\n\t\treturn this.indexOf(candidate, this.editors, options) !== -1;\n\t}\n\n\tprivate matches(editor: EditorInput | null, candidate: EditorInput | IUntypedEditorInput | null, options?: IMatchEditorOptions): boolean {\n\t\tif (!editor || !candidate) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (options?.supportSideBySide && editor instanceof SideBySideEditorInput && !(candidate instanceof SideBySideEditorInput)) {\n\t\t\tswitch (options.supportSideBySide) {\n\t\t\t\tcase SideBySideEditor.ANY:\n\t\t\t\t\tif (this.matches(editor.primary, candidate, options) || this.matches(editor.secondary, candidate, options)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SideBySideEditor.BOTH:\n\t\t\t\t\tif (this.matches(editor.primary, candidate, options) && this.matches(editor.secondary, candidate, options)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst strictEquals = editor === candidate;\n\n\t\tif (options?.strictEquals) {\n\t\t\treturn strictEquals;\n\t\t}\n\n\t\treturn strictEquals || editor.matches(candidate);\n\t}\n\n\tget isLocked(): boolean {\n\t\treturn this.locked;\n\t}\n\n\tlock(locked: boolean): void {\n\t\tif (this.isLocked !== locked) {\n\t\t\tthis.locked = locked;\n\n\t\t\tthis._onDidModelChange.fire({ kind: GroupModelChangeKind.GROUP_LOCKED });\n\t\t}\n\t}\n\n\tclone(): EditorGroupModel {\n\t\tconst clone = this.instantiationService.createInstance(EditorGroupModel, undefined);\n\n\t\t// Copy over group properties\n\t\tclone.editors = this.editors.slice(0);\n\t\tclone.mru = this.mru.slice(0);\n\t\tclone.preview = this.preview;\n\t\tclone.active = this.active;\n\t\tclone.sticky = this.sticky;\n\n\t\t// Ensure to register listeners for each editor\n\t\tfor (const editor of clone.editors) {\n\t\t\tclone.registerEditorListeners(editor);\n\t\t}\n\n\t\treturn clone;\n\t}\n\n\tserialize(): ISerializedEditorGroupModel {\n\t\tconst registry = Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory);\n\n\t\t// Serialize all editor inputs so that we can store them.\n\t\t// Editors that cannot be serialized need to be ignored\n\t\t// from mru, active, preview and sticky if any.\n\t\tconst serializableEditors: EditorInput[] = [];\n\t\tconst serializedEditors: ISerializedEditorInput[] = [];\n\t\tlet serializablePreviewIndex: number | undefined;\n\t\tlet serializableSticky = this.sticky;\n\n\t\tfor (let i = 0; i < this.editors.length; i++) {\n\t\t\tconst editor = this.editors[i];\n\t\t\tlet canSerializeEditor = false;\n\n\t\t\tconst editorSerializer = registry.getEditorSerializer(editor);\n\t\t\tif (editorSerializer) {\n\t\t\t\tconst value = editorSerializer.serialize(editor);\n\n\t\t\t\t// Editor can be serialized\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\tcanSerializeEditor = true;\n\n\t\t\t\t\tserializedEditors.push({ id: editor.typeId, value });\n\t\t\t\t\tserializableEditors.push(editor);\n\n\t\t\t\t\tif (this.preview === editor) {\n\t\t\t\t\t\tserializablePreviewIndex = serializableEditors.length - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Editor cannot be serialized\n\t\t\t\telse {\n\t\t\t\t\tcanSerializeEditor = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Adjust index of sticky editors if the editor cannot be serialized and is pinned\n\t\t\tif (!canSerializeEditor && this.isSticky(i)) {\n\t\t\t\tserializableSticky--;\n\t\t\t}\n\t\t}\n\n\t\tconst serializableMru = this.mru.map(editor => this.indexOf(editor, serializableEditors)).filter(i => i >= 0);\n\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tlocked: this.locked ? true : undefined,\n\t\t\teditors: serializedEditors,\n\t\t\tmru: serializableMru,\n\t\t\tpreview: serializablePreviewIndex,\n\t\t\tsticky: serializableSticky >= 0 ? serializableSticky : undefined\n\t\t};\n\t}\n\n\tprivate deserialize(data: ISerializedEditorGroupModel): number {\n\t\tconst registry = Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory);\n\n\t\tif (typeof data.id === 'number') {\n\t\t\tthis._id = data.id;\n\n\t\t\tEditorGroupModel.IDS = Math.max(data.id + 1, EditorGroupModel.IDS); // make sure our ID generator is always larger\n\t\t} else {\n\t\t\tthis._id = EditorGroupModel.IDS++; // backwards compatibility\n\t\t}\n\n\t\tif (data.locked) {\n\t\t\tthis.locked = true;\n\t\t}\n\n\t\tthis.editors = coalesce(data.editors.map((e, index) => {\n\t\t\tlet editor: EditorInput | undefined = undefined;\n\n\t\t\tconst editorSerializer = registry.getEditorSerializer(e.id);\n\t\t\tif (editorSerializer) {\n\t\t\t\tconst deserializedEditor = editorSerializer.deserialize(this.instantiationService, e.value);\n\t\t\t\tif (deserializedEditor instanceof EditorInput) {\n\t\t\t\t\teditor = deserializedEditor;\n\t\t\t\t\tthis.registerEditorListeners(editor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!editor && typeof data.sticky === 'number' && index <= data.sticky) {\n\t\t\t\tdata.sticky--; // if editor cannot be deserialized but was sticky, we need to decrease sticky index\n\t\t\t}\n\n\t\t\treturn editor;\n\t\t}));\n\n\t\tthis.mru = coalesce(data.mru.map(i => this.editors[i]));\n\n\t\tthis.active = this.mru[0];\n\n\t\tif (typeof data.preview === 'number') {\n\t\t\tthis.preview = this.editors[data.preview];\n\t\t}\n\n\t\tif (typeof data.sticky === 'number') {\n\t\t\tthis.sticky = data.sticky;\n\t\t}\n\n\t\treturn this._id;\n\t}\n\n\toverride dispose(): void {\n\t\tdispose(Array.from(this.editorListeners));\n\t\tthis.editorListeners.clear();\n\n\t\tsuper.dispose();\n\t}\n}\n"]}