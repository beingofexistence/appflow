{"version":3,"sources":["vs/workbench/common/editor/diffEditorInput.ts"],"names":[],"mappings":"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","file":"diffEditorInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { AbstractSideBySideEditorInputSerializer, SideBySideEditorInput } from 'vs/workbench/common/editor/sideBySideEditorInput';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { EditorModel } from 'vs/workbench/common/editor/editorModel';\nimport { TEXT_DIFF_EDITOR_ID, BINARY_DIFF_EDITOR_ID, Verbosity, IEditorDescriptor, IEditorPane, GroupIdentifier, IResourceDiffEditorInput, IUntypedEditorInput, isResourceDiffEditorInput, IDiffEditorInput, IResourceSideBySideEditorInput, EditorInputCapabilities } from 'vs/workbench/common/editor';\nimport { BaseTextEditorModel } from 'vs/workbench/common/editor/textEditorModel';\nimport { DiffEditorModel } from 'vs/workbench/common/editor/diffEditorModel';\nimport { TextDiffEditorModel } from 'vs/workbench/common/editor/textDiffEditorModel';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { shorten } from 'vs/base/common/labels';\nimport { IEditorOptions } from 'vs/platform/editor/common/editor';\n\ninterface IDiffEditorInputLabels {\n\tname: string;\n\n\tshortDescription: string | undefined;\n\tmediumDescription: string | undefined;\n\tlongDescription: string | undefined;\n\n\tforceDescription: boolean;\n\n\tshortTitle: string;\n\tmediumTitle: string;\n\tlongTitle: string;\n}\n\n/**\n * The base editor input for the diff editor. It is made up of two editor inputs, the original version\n * and the modified version.\n */\nexport class DiffEditorInput extends SideBySideEditorInput implements IDiffEditorInput {\n\n\tstatic override readonly ID: string = 'workbench.editors.diffEditorInput';\n\n\toverride get typeId(): string {\n\t\treturn DiffEditorInput.ID;\n\t}\n\n\toverride get editorId(): string | undefined {\n\t\treturn this.modified.editorId === this.original.editorId ? this.modified.editorId : undefined;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\tlet capabilities = super.capabilities;\n\n\t\t// Force description capability depends on labels\n\t\tif (this.labels.forceDescription) {\n\t\t\tcapabilities |= EditorInputCapabilities.ForceDescription;\n\t\t}\n\n\t\treturn capabilities;\n\t}\n\n\tprivate cachedModel: DiffEditorModel | undefined = undefined;\n\n\tprivate readonly labels = this.computeLabels();\n\n\tconstructor(\n\t\tpreferredName: string | undefined,\n\t\tpreferredDescription: string | undefined,\n\t\treadonly original: EditorInput,\n\t\treadonly modified: EditorInput,\n\t\tprivate readonly forceOpenAsBinary: boolean | undefined,\n\t\t@IEditorService editorService: IEditorService\n\t) {\n\t\tsuper(preferredName, preferredDescription, original, modified, editorService);\n\t}\n\n\tprivate computeLabels(): IDiffEditorInputLabels {\n\n\t\t// Name\n\t\tlet name: string;\n\t\tlet forceDescription = false;\n\t\tif (this.preferredName) {\n\t\t\tname = this.preferredName;\n\t\t} else {\n\t\t\tconst originalName = this.original.getName();\n\t\t\tconst modifiedName = this.modified.getName();\n\n\t\t\tname = localize('sideBySideLabels', \"{0} â†” {1}\", originalName, modifiedName);\n\n\t\t\t// Enforce description when the names are identical\n\t\t\tforceDescription = originalName === modifiedName;\n\t\t}\n\n\t\t// Description\n\t\tlet shortDescription: string | undefined;\n\t\tlet mediumDescription: string | undefined;\n\t\tlet longDescription: string | undefined;\n\t\tif (this.preferredDescription) {\n\t\t\tshortDescription = this.preferredDescription;\n\t\t\tmediumDescription = this.preferredDescription;\n\t\t\tlongDescription = this.preferredDescription;\n\t\t} else {\n\t\t\tshortDescription = this.computeLabel(this.original.getDescription(Verbosity.SHORT), this.modified.getDescription(Verbosity.SHORT));\n\t\t\tlongDescription = this.computeLabel(this.original.getDescription(Verbosity.LONG), this.modified.getDescription(Verbosity.LONG));\n\n\t\t\t// Medium Description: try to be verbose by computing\n\t\t\t// a label that resembles the difference between the two\n\t\t\tconst originalMediumDescription = this.original.getDescription(Verbosity.MEDIUM);\n\t\t\tconst modifiedMediumDescription = this.modified.getDescription(Verbosity.MEDIUM);\n\t\t\tif (\n\t\t\t\t(typeof originalMediumDescription === 'string' && typeof modifiedMediumDescription === 'string') && // we can only `shorten` when both sides are strings...\n\t\t\t\t(originalMediumDescription || modifiedMediumDescription) \t\t\t\t\t\t\t\t\t\t\t// ...however never when both sides are empty strings\n\t\t\t) {\n\t\t\t\tconst [shortenedOriginalMediumDescription, shortenedModifiedMediumDescription] = shorten([originalMediumDescription, modifiedMediumDescription]);\n\t\t\t\tmediumDescription = this.computeLabel(shortenedOriginalMediumDescription, shortenedModifiedMediumDescription);\n\t\t\t}\n\t\t}\n\n\t\t// Title\n\t\tconst shortTitle = this.computeLabel(this.original.getTitle(Verbosity.SHORT) ?? this.original.getName(), this.modified.getTitle(Verbosity.SHORT) ?? this.modified.getName(), ' â†” ');\n\t\tconst mediumTitle = this.computeLabel(this.original.getTitle(Verbosity.MEDIUM) ?? this.original.getName(), this.modified.getTitle(Verbosity.MEDIUM) ?? this.modified.getName(), ' â†” ');\n\t\tconst longTitle = this.computeLabel(this.original.getTitle(Verbosity.LONG) ?? this.original.getName(), this.modified.getTitle(Verbosity.LONG) ?? this.modified.getName(), ' â†” ');\n\n\t\treturn { name, shortDescription, mediumDescription, longDescription, forceDescription, shortTitle, mediumTitle, longTitle };\n\t}\n\n\tprivate computeLabel(originalLabel: string, modifiedLabel: string, separator?: string): string;\n\tprivate computeLabel(originalLabel: string | undefined, modifiedLabel: string | undefined, separator?: string): string | undefined;\n\tprivate computeLabel(originalLabel: string | undefined, modifiedLabel: string | undefined, separator = ' - '): string | undefined {\n\t\tif (!originalLabel || !modifiedLabel) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (originalLabel === modifiedLabel) {\n\t\t\treturn modifiedLabel;\n\t\t}\n\n\t\treturn `${originalLabel}${separator}${modifiedLabel}`;\n\t}\n\n\toverride getName(): string {\n\t\treturn this.labels.name;\n\t}\n\n\toverride getDescription(verbosity = Verbosity.MEDIUM): string | undefined {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.labels.shortDescription;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.labels.longDescription;\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\tdefault:\n\t\t\t\treturn this.labels.mediumDescription;\n\t\t}\n\t}\n\n\toverride getTitle(verbosity?: Verbosity): string {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.labels.shortTitle;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.labels.longTitle;\n\t\t\tdefault:\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\t\treturn this.labels.mediumTitle;\n\t\t}\n\t}\n\n\toverride async resolve(options?: IEditorOptions): Promise<EditorModel> {\n\n\t\t// Create Model - we never reuse our cached model if refresh is true because we cannot\n\t\t// decide for the inputs within if the cached model can be reused or not. There may be\n\t\t// inputs that need to be loaded again and thus we always recreate the model and dispose\n\t\t// the previous one - if any.\n\t\tconst resolvedModel = await this.createModel(options);\n\t\tthis.cachedModel?.dispose();\n\n\t\tthis.cachedModel = resolvedModel;\n\n\t\treturn this.cachedModel;\n\t}\n\n\toverride prefersEditorPane<T extends IEditorDescriptor<IEditorPane>>(editorPanes: T[]): T | undefined {\n\t\tif (this.forceOpenAsBinary) {\n\t\t\treturn editorPanes.find(editorPane => editorPane.typeId === BINARY_DIFF_EDITOR_ID);\n\t\t}\n\n\t\treturn editorPanes.find(editorPane => editorPane.typeId === TEXT_DIFF_EDITOR_ID);\n\t}\n\n\tprivate async createModel(options?: IEditorOptions): Promise<DiffEditorModel> {\n\n\t\t// Join resolve call over two inputs and build diff editor model\n\t\tconst [originalEditorModel, modifiedEditorModel] = await Promise.all([\n\t\t\tthis.original.resolve(options),\n\t\t\tthis.modified.resolve(options)\n\t\t]);\n\n\t\t// If both are text models, return textdiffeditor model\n\t\tif (modifiedEditorModel instanceof BaseTextEditorModel && originalEditorModel instanceof BaseTextEditorModel) {\n\t\t\treturn new TextDiffEditorModel(originalEditorModel, modifiedEditorModel);\n\t\t}\n\n\t\t// Otherwise return normal diff model\n\t\treturn new DiffEditorModel(originalEditorModel ?? undefined, modifiedEditorModel ?? undefined);\n\t}\n\n\toverride toUntyped(options?: { preserveViewState: GroupIdentifier }): (IResourceDiffEditorInput & IResourceSideBySideEditorInput) | undefined {\n\t\tconst untyped = super.toUntyped(options);\n\t\tif (untyped) {\n\t\t\treturn {\n\t\t\t\t...untyped,\n\t\t\t\tmodified: untyped.primary,\n\t\t\t\toriginal: untyped.secondary\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (this === otherInput) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof DiffEditorInput) {\n\t\t\treturn this.modified.matches(otherInput.modified) && this.original.matches(otherInput.original) && otherInput.forceOpenAsBinary === this.forceOpenAsBinary;\n\t\t}\n\n\t\tif (isResourceDiffEditorInput(otherInput)) {\n\t\t\treturn this.modified.matches(otherInput.modified) && this.original.matches(otherInput.original);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride dispose(): void {\n\n\t\t// Free the diff editor model but do not propagate the dispose() call to the two inputs\n\t\t// We never created the two inputs (original and modified) so we can not dispose\n\t\t// them without sideeffects.\n\t\tif (this.cachedModel) {\n\t\t\tthis.cachedModel.dispose();\n\t\t\tthis.cachedModel = undefined;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class DiffEditorInputSerializer extends AbstractSideBySideEditorInputSerializer {\n\n\tprotected createEditorInput(instantiationService: IInstantiationService, name: string | undefined, description: string | undefined, secondaryInput: EditorInput, primaryInput: EditorInput): EditorInput {\n\t\treturn instantiationService.createInstance(DiffEditorInput, name, description, secondaryInput, primaryInput, undefined);\n\t}\n}\n"]}