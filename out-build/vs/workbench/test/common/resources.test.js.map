{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/test/common/resources.test.ts"],"names":[],"mappings":"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","file":"resources.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ResourceGlobMatcher } from 'vs/workbench/common/resources';\nimport { TestContextService } from 'vs/workbench/test/common/workbenchTestServices';\n\nsuite('ResourceGlobMatcher', () => {\n\n\tconst SETTING = 'test.matcher';\n\n\tlet contextService: IWorkspaceContextService;\n\tlet configurationService: TestConfigurationService;\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tcontextService = new TestContextService();\n\t\tconfigurationService = new TestConfigurationService({\n\t\t\t[SETTING]: {\n\t\t\t\t'**/*.md': true,\n\t\t\t\t'**/*.txt': false\n\t\t\t}\n\t\t});\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('Basics', async () => {\n\t\tconst matcher = disposables.add(new ResourceGlobMatcher(() => configurationService.getValue(SETTING), e => e.affectsConfiguration(SETTING), contextService, configurationService));\n\n\t\t// Matching\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar')), false);\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar.md')), true);\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar.txt')), false);\n\n\t\t// Events\n\t\tlet eventCounter = 0;\n\t\tdisposables.add(matcher.onExpressionChange(() => eventCounter++));\n\n\t\tawait configurationService.setUserConfiguration(SETTING, { '**/*.foo': true });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: (key: string) => key === SETTING } as any);\n\t\tassert.equal(eventCounter, 1);\n\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar.md')), false);\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar.foo')), true);\n\n\t\tawait configurationService.setUserConfiguration(SETTING, undefined);\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: (key: string) => key === SETTING } as any);\n\t\tassert.equal(eventCounter, 2);\n\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar.md')), false);\n\t\tassert.equal(matcher.matches(URI.file('/foo/bar.foo')), false);\n\n\t\tawait configurationService.setUserConfiguration(SETTING, {\n\t\t\t'**/*.md': true,\n\t\t\t'**/*.txt': false,\n\t\t\t'C:/bar/**': true,\n\t\t\t'/bar/**': true\n\t\t});\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: (key: string) => key === SETTING } as any);\n\n\t\tassert.equal(matcher.matches(URI.file('/bar/foo.1')), true);\n\t\tassert.equal(matcher.matches(URI.file('C:/bar/foo.1')), true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}