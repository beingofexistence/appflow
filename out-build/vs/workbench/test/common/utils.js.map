{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/test/common/utils.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG;;;;;;;OAOG;IACH,SAAgB,gBAAgB;QAC/B,oDAAoD;QACpD,wEAAwE;QACxE,uFAAuF;QACvF,MAAM,CAAC,WAAW,CAAC,wBAAI,CAAc,aAAa,EAAE,CAAC,EAAE,uDAAuD,CAAC,CAAC;IACjH,CAAC;IALD,4CAKC","file":"utils.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { LanguagesRegistry } from 'vs/editor/common/services/languagesRegistry';\n\n/**\n * This function is called before test running and also again at the end of test running\n * and can be used to add assertions. e.g. that registries are empty, etc.\n *\n * !! This is called directly by the testing framework.\n *\n * @skipMangle\n */\nexport function assertCleanState(): void {\n\t// If this test fails, it is a clear indication that\n\t// your test or suite is leaking services (e.g. via leaking text models)\n\t// assert.strictEqual(LanguageService.instanceCount, 0, 'No leaking ILanguageService');\n\tassert.strictEqual(LanguagesRegistry.instanceCount, 0, 'Error: Test run should not leak in LanguagesRegistry.');\n}\n"]}