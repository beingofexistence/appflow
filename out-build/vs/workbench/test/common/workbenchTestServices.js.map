{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/test/common/workbenchTestServices.ts"],"names":[],"mappings":"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","file":"workbenchTestServices.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { basename, isEqual, isEqualOrParent } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IWorkspaceContextService, IWorkspace, WorkbenchState, IWorkspaceFolder, IWorkspaceFoldersChangeEvent, Workspace, IWorkspaceFoldersWillChangeEvent, ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\nimport { TestWorkspace } from 'vs/platform/workspace/test/common/testWorkspace';\nimport { ITextResourcePropertiesService } from 'vs/editor/common/services/textResourceConfiguration';\nimport { isLinux, isMacintosh } from 'vs/base/common/platform';\nimport { InMemoryStorageService, WillSaveStateReason } from 'vs/platform/storage/common/storage';\nimport { IWorkingCopy, IWorkingCopyBackup, WorkingCopyCapabilities } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { NullExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkingCopyFileService, IWorkingCopyFileOperationParticipant, WorkingCopyFileEvent, IDeleteOperation, ICopyOperation, IMoveOperation, IFileOperationUndoRedoInfo, ICreateFileOperation, ICreateOperation, IStoredFileWorkingCopySaveParticipant } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IBaseFileStat, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { ISaveOptions, IRevertOptions, SaveReason, GroupIdentifier } from 'vs/workbench/common/editor';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport product from 'vs/platform/product/common/product';\nimport { IActivity, IActivityService } from 'vs/workbench/services/activity/common/activity';\nimport { IStoredFileWorkingCopySaveEvent } from 'vs/workbench/services/workingCopy/common/storedFileWorkingCopy';\nimport { AbstractLoggerService, ILogger, LogLevel, NullLogger } from 'vs/platform/log/common/log';\nimport { IResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { AutoSaveMode, IAutoSaveConfiguration, IFilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { IWorkspaceTrustEnablementService, IWorkspaceTrustManagementService, IWorkspaceTrustRequestService, IWorkspaceTrustTransitionParticipant, IWorkspaceTrustUriInfo, WorkspaceTrustRequestOptions, WorkspaceTrustUriResponse } from 'vs/platform/workspace/common/workspaceTrust';\n\nexport class TestLoggerService extends AbstractLoggerService {\n\tconstructor(logsHome?: URI) {\n\t\tsuper(LogLevel.Info, logsHome ?? URI.file('tests').with({ scheme: 'vscode-tests' }));\n\t}\n\tprotected doCreateLogger(): ILogger { return new NullLogger(); }\n}\n\nexport class TestTextResourcePropertiesService implements ITextResourcePropertiesService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t}\n\n\tgetEOL(resource: URI, language?: string): string {\n\t\tconst eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\n\t\tif (eol && typeof eol === 'string' && eol !== 'auto') {\n\t\t\treturn eol;\n\t\t}\n\t\treturn (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\n\t}\n}\n\nexport class TestContextService implements IWorkspaceContextService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate workspace: Workspace;\n\tprivate options: object;\n\n\tprivate readonly _onDidChangeWorkspaceName: Emitter<void>;\n\tget onDidChangeWorkspaceName(): Event<void> { return this._onDidChangeWorkspaceName.event; }\n\n\tprivate readonly _onWillChangeWorkspaceFolders: Emitter<IWorkspaceFoldersWillChangeEvent>;\n\tget onWillChangeWorkspaceFolders(): Event<IWorkspaceFoldersWillChangeEvent> { return this._onWillChangeWorkspaceFolders.event; }\n\n\tprivate readonly _onDidChangeWorkspaceFolders: Emitter<IWorkspaceFoldersChangeEvent>;\n\tget onDidChangeWorkspaceFolders(): Event<IWorkspaceFoldersChangeEvent> { return this._onDidChangeWorkspaceFolders.event; }\n\n\tprivate readonly _onDidChangeWorkbenchState: Emitter<WorkbenchState>;\n\tget onDidChangeWorkbenchState(): Event<WorkbenchState> { return this._onDidChangeWorkbenchState.event; }\n\n\tconstructor(workspace = TestWorkspace, options = null) {\n\t\tthis.workspace = workspace;\n\t\tthis.options = options || Object.create(null);\n\t\tthis._onDidChangeWorkspaceName = new Emitter<void>();\n\t\tthis._onWillChangeWorkspaceFolders = new Emitter<IWorkspaceFoldersWillChangeEvent>();\n\t\tthis._onDidChangeWorkspaceFolders = new Emitter<IWorkspaceFoldersChangeEvent>();\n\t\tthis._onDidChangeWorkbenchState = new Emitter<WorkbenchState>();\n\t}\n\n\tgetFolders(): IWorkspaceFolder[] {\n\t\treturn this.workspace ? this.workspace.folders : [];\n\t}\n\n\tgetWorkbenchState(): WorkbenchState {\n\t\tif (this.workspace.configuration) {\n\t\t\treturn WorkbenchState.WORKSPACE;\n\t\t}\n\n\t\tif (this.workspace.folders.length) {\n\t\t\treturn WorkbenchState.FOLDER;\n\t\t}\n\n\t\treturn WorkbenchState.EMPTY;\n\t}\n\n\tgetCompleteWorkspace(): Promise<IWorkspace> {\n\t\treturn Promise.resolve(this.getWorkspace());\n\t}\n\n\tgetWorkspace(): IWorkspace {\n\t\treturn this.workspace;\n\t}\n\n\tgetWorkspaceFolder(resource: URI): IWorkspaceFolder | null {\n\t\treturn this.workspace.getFolder(resource);\n\t}\n\n\tsetWorkspace(workspace: any): void {\n\t\tthis.workspace = workspace;\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\tupdateOptions() { }\n\n\tisInsideWorkspace(resource: URI): boolean {\n\t\tif (resource && this.workspace) {\n\t\t\treturn isEqualOrParent(resource, this.workspace.folders[0].uri);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\ttoResource(workspaceRelativePath: string): URI {\n\t\treturn URI.file(join('C:\\\\', workspaceRelativePath));\n\t}\n\n\tisCurrentWorkspace(workspaceIdOrFolder: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI): boolean {\n\t\treturn URI.isUri(workspaceIdOrFolder) && isEqual(this.workspace.folders[0].uri, workspaceIdOrFolder);\n\t}\n}\n\nexport class TestStorageService extends InMemoryStorageService {\n\n\ttestEmitWillSaveState(reason: WillSaveStateReason): void {\n\t\tsuper.emitWillSaveState(reason);\n\t}\n}\n\nexport class TestHistoryService implements IHistoryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private root?: URI) { }\n\n\tasync reopenLastClosedEditor(): Promise<void> { }\n\tasync goForward(): Promise<void> { }\n\tasync goBack(): Promise<void> { }\n\tasync goPrevious(): Promise<void> { }\n\tasync goLast(): Promise<void> { }\n\tremoveFromHistory(_input: EditorInput | IResourceEditorInput): void { }\n\tclear(): void { }\n\tclearRecentlyOpened(): void { }\n\tgetHistory(): readonly (EditorInput | IResourceEditorInput)[] { return []; }\n\tasync openNextRecentlyUsedEditor(group?: GroupIdentifier): Promise<void> { }\n\tasync openPreviouslyUsedEditor(group?: GroupIdentifier): Promise<void> { }\n\tgetLastActiveWorkspaceRoot(_schemeFilter: string): URI | undefined { return this.root; }\n\tgetLastActiveFile(_schemeFilter: string): URI | undefined { return undefined; }\n}\n\nexport class TestWorkingCopy extends Disposable implements IWorkingCopy {\n\n\tprivate readonly _onDidChangeDirty = this._register(new Emitter<void>());\n\treadonly onDidChangeDirty = this._onDidChangeDirty.event;\n\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<void>());\n\treadonly onDidChangeContent = this._onDidChangeContent.event;\n\n\tprivate readonly _onDidSave = this._register(new Emitter<IStoredFileWorkingCopySaveEvent>());\n\treadonly onDidSave = this._onDidSave.event;\n\n\treadonly capabilities = WorkingCopyCapabilities.None;\n\n\treadonly name = basename(this.resource);\n\n\tprivate dirty = false;\n\n\tconstructor(readonly resource: URI, isDirty = false, readonly typeId = 'testWorkingCopyType') {\n\t\tsuper();\n\n\t\tthis.dirty = isDirty;\n\t}\n\n\tsetDirty(dirty: boolean): void {\n\t\tif (this.dirty !== dirty) {\n\t\t\tthis.dirty = dirty;\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\t}\n\n\tsetContent(content: string): void {\n\t\tthis._onDidChangeContent.fire();\n\t}\n\n\tisDirty(): boolean {\n\t\treturn this.dirty;\n\t}\n\n\tisModified(): boolean {\n\t\treturn this.isDirty();\n\t}\n\n\tasync save(options?: ISaveOptions, stat?: IFileStatWithMetadata): Promise<boolean> {\n\t\tthis._onDidSave.fire({ reason: options?.reason ?? SaveReason.EXPLICIT, stat: stat ?? createFileStat(this.resource), source: options?.source });\n\n\t\treturn true;\n\t}\n\n\tasync revert(options?: IRevertOptions): Promise<void> {\n\t\tthis.setDirty(false);\n\t}\n\n\tasync backup(token: CancellationToken): Promise<IWorkingCopyBackup> {\n\t\treturn {};\n\t}\n}\n\nexport function createFileStat(resource: URI, readonly = false): IFileStatWithMetadata {\n\treturn {\n\t\tresource,\n\t\tetag: Date.now().toString(),\n\t\tmtime: Date.now(),\n\t\tctime: Date.now(),\n\t\tsize: 42,\n\t\tisFile: true,\n\t\tisDirectory: false,\n\t\tisSymbolicLink: false,\n\t\treadonly,\n\t\tlocked: false,\n\t\tname: basename(resource),\n\t\tchildren: undefined\n\t};\n}\n\nexport class TestWorkingCopyFileService implements IWorkingCopyFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonWillRunWorkingCopyFileOperation: Event<WorkingCopyFileEvent> = Event.None;\n\tonDidFailWorkingCopyFileOperation: Event<WorkingCopyFileEvent> = Event.None;\n\tonDidRunWorkingCopyFileOperation: Event<WorkingCopyFileEvent> = Event.None;\n\n\taddFileOperationParticipant(participant: IWorkingCopyFileOperationParticipant): IDisposable { return Disposable.None; }\n\n\treadonly hasSaveParticipants = false;\n\taddSaveParticipant(participant: IStoredFileWorkingCopySaveParticipant): IDisposable { return Disposable.None; }\n\tasync runSaveParticipants(workingCopy: IWorkingCopy, context: { reason: SaveReason }, token: CancellationToken): Promise<void> { }\n\n\tasync delete(operations: IDeleteOperation[], token: CancellationToken, undoInfo?: IFileOperationUndoRedoInfo): Promise<void> { }\n\n\tregisterWorkingCopyProvider(provider: (resourceOrFolder: URI) => IWorkingCopy[]): IDisposable { return Disposable.None; }\n\n\tgetDirty(resource: URI): IWorkingCopy[] { return []; }\n\n\tcreate(operations: ICreateFileOperation[], token: CancellationToken, undoInfo?: IFileOperationUndoRedoInfo): Promise<IFileStatWithMetadata[]> { throw new Error('Method not implemented.'); }\n\tcreateFolder(operations: ICreateOperation[], token: CancellationToken, undoInfo?: IFileOperationUndoRedoInfo): Promise<IFileStatWithMetadata[]> { throw new Error('Method not implemented.'); }\n\n\tmove(operations: IMoveOperation[], token: CancellationToken, undoInfo?: IFileOperationUndoRedoInfo): Promise<IFileStatWithMetadata[]> { throw new Error('Method not implemented.'); }\n\n\tcopy(operations: ICopyOperation[], token: CancellationToken, undoInfo?: IFileOperationUndoRedoInfo): Promise<IFileStatWithMetadata[]> { throw new Error('Method not implemented.'); }\n}\n\nexport function mock<T>(): Ctor<T> {\n\treturn function () { } as any;\n}\n\nexport interface Ctor<T> {\n\tnew(): T;\n}\n\nexport class TestExtensionService extends NullExtensionService { }\n\nexport const TestProductService = { _serviceBrand: undefined, ...product };\n\nexport class TestActivityService implements IActivityService {\n\t_serviceBrand: undefined;\n\tshowViewContainerActivity(viewContainerId: string, badge: IActivity): IDisposable {\n\t\treturn this;\n\t}\n\tshowViewActivity(viewId: string, badge: IActivity): IDisposable {\n\t\treturn this;\n\t}\n\tshowAccountsActivity(activity: IActivity): IDisposable {\n\t\treturn this;\n\t}\n\tshowGlobalActivity(activity: IActivity): IDisposable {\n\t\treturn this;\n\t}\n\n\tdispose() { }\n}\n\nexport const NullFilesConfigurationService = new class implements IFilesConfigurationService {\n\n\t_serviceBrand: undefined;\n\n\treadonly onAutoSaveConfigurationChange = Event.None;\n\treadonly onReadonlyChange = Event.None;\n\treadonly onFilesAssociationChange = Event.None;\n\n\treadonly isHotExitEnabled = false;\n\treadonly hotExitConfiguration = undefined;\n\n\tgetAutoSaveConfiguration(): IAutoSaveConfiguration { throw new Error('Method not implemented.'); }\n\tgetAutoSaveMode(): AutoSaveMode { throw new Error('Method not implemented.'); }\n\ttoggleAutoSave(): Promise<void> { throw new Error('Method not implemented.'); }\n\tisReadonly(resource: URI, stat?: IBaseFileStat | undefined): boolean { return false; }\n\tasync updateReadonly(resource: URI, readonly: boolean | 'toggle' | 'reset'): Promise<void> { }\n\tpreventSaveConflicts(resource: URI, language?: string | undefined): boolean { throw new Error('Method not implemented.'); }\n};\n\nexport class TestWorkspaceTrustEnablementService implements IWorkspaceTrustEnablementService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private isEnabled: boolean = true) { }\n\n\tisWorkspaceTrustEnabled(): boolean {\n\t\treturn this.isEnabled;\n\t}\n}\n\nexport class TestWorkspaceTrustManagementService extends Disposable implements IWorkspaceTrustManagementService {\n\t_serviceBrand: undefined;\n\n\tprivate _onDidChangeTrust = this._register(new Emitter<boolean>());\n\tonDidChangeTrust = this._onDidChangeTrust.event;\n\n\tprivate _onDidChangeTrustedFolders = this._register(new Emitter<void>());\n\tonDidChangeTrustedFolders = this._onDidChangeTrustedFolders.event;\n\n\tprivate _onDidInitiateWorkspaceTrustRequestOnStartup = this._register(new Emitter<void>());\n\tonDidInitiateWorkspaceTrustRequestOnStartup = this._onDidInitiateWorkspaceTrustRequestOnStartup.event;\n\n\n\tconstructor(\n\t\tprivate trusted: boolean = true\n\t) {\n\t\tsuper();\n\t}\n\n\tget acceptsOutOfWorkspaceFiles(): boolean {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tset acceptsOutOfWorkspaceFiles(value: boolean) {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\taddWorkspaceTrustTransitionParticipant(participant: IWorkspaceTrustTransitionParticipant): IDisposable {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tgetTrustedUris(): URI[] {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tsetParentFolderTrust(trusted: boolean): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tgetUriTrustInfo(uri: URI): Promise<IWorkspaceTrustUriInfo> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tasync setTrustedUris(folders: URI[]): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tasync setUrisTrust(uris: URI[], trusted: boolean): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tcanSetParentFolderTrust(): boolean {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tcanSetWorkspaceTrust(): boolean {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tisWorkspaceTrusted(): boolean {\n\t\treturn this.trusted;\n\t}\n\n\tisWorkspaceTrustForced(): boolean {\n\t\treturn false;\n\t}\n\n\tget workspaceTrustInitialized(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tget workspaceResolved(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync setWorkspaceTrust(trusted: boolean): Promise<void> {\n\t\tif (this.trusted !== trusted) {\n\t\t\tthis.trusted = trusted;\n\t\t\tthis._onDidChangeTrust.fire(this.trusted);\n\t\t}\n\t}\n}\n\nexport class TestWorkspaceTrustRequestService extends Disposable implements IWorkspaceTrustRequestService {\n\t_serviceBrand: any;\n\n\tprivate readonly _onDidInitiateOpenFilesTrustRequest = this._register(new Emitter<void>());\n\treadonly onDidInitiateOpenFilesTrustRequest = this._onDidInitiateOpenFilesTrustRequest.event;\n\n\tprivate readonly _onDidInitiateWorkspaceTrustRequest = this._register(new Emitter<WorkspaceTrustRequestOptions>());\n\treadonly onDidInitiateWorkspaceTrustRequest = this._onDidInitiateWorkspaceTrustRequest.event;\n\n\tprivate readonly _onDidInitiateWorkspaceTrustRequestOnStartup = this._register(new Emitter<void>());\n\treadonly onDidInitiateWorkspaceTrustRequestOnStartup = this._onDidInitiateWorkspaceTrustRequestOnStartup.event;\n\n\tconstructor(private readonly _trusted: boolean) {\n\t\tsuper();\n\t}\n\n\trequestOpenUrisHandler = async (uris: URI[]) => {\n\t\treturn WorkspaceTrustUriResponse.Open;\n\t};\n\n\trequestOpenFilesTrust(uris: URI[]): Promise<WorkspaceTrustUriResponse> {\n\t\treturn this.requestOpenUrisHandler(uris);\n\t}\n\n\tasync completeOpenFilesTrustRequest(result: WorkspaceTrustUriResponse, saveResponse: boolean): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tcancelWorkspaceTrustRequest(): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tasync completeWorkspaceTrustRequest(trusted?: boolean): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tasync requestWorkspaceTrust(options?: WorkspaceTrustRequestOptions): Promise<boolean> {\n\t\treturn this._trusted;\n\t}\n\n\trequestWorkspaceTrustOnStartup(): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n"]}