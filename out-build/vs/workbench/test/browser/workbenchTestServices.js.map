{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/test/browser/workbenchTestServices.ts"],"names":[],"mappings":"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","file":"workbenchTestServices.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileEditorInput } from 'vs/workbench/contrib/files/browser/editors/fileEditorInput';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { basename, isEqual } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ITelemetryData, ITelemetryService, TelemetryLevel } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { EditorInputWithOptions, IEditorIdentifier, IUntitledTextResourceEditorInput, IResourceDiffEditorInput, IEditorPane, IEditorCloseEvent, IEditorPartOptions, IRevertOptions, GroupIdentifier, EditorsOrder, IFileEditorInput, IEditorFactoryRegistry, IEditorSerializer, EditorExtensions, ISaveOptions, IMoveResult, ITextDiffEditorPane, IVisibleEditorPane, IEditorOpenContext, EditorExtensions as Extensions, EditorInputCapabilities, IUntypedEditorInput, IEditorWillMoveEvent, IEditorWillOpenEvent, IActiveEditorChangeEvent, EditorPaneSelectionChangeReason, IEditorPaneSelection } from 'vs/workbench/common/editor';\nimport { EditorServiceImpl, IEditorGroupView, IEditorGroupsAccessor, IEditorGroupTitleHeight } from 'vs/workbench/browser/parts/editor/editor';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IResolvedWorkingCopyBackup, IWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/common/workingCopyBackup';\nimport { IConfigurationService, ConfigurationTarget, IConfigurationValue } from 'vs/platform/configuration/common/configuration';\nimport { IWorkbenchLayoutService, PanelAlignment, Parts, Position as PartPosition } from 'vs/workbench/services/layout/browser/layoutService';\nimport { TextModelResolverService } from 'vs/workbench/services/textmodelResolver/common/textModelResolverService';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { IEditorOptions, IResourceEditorInput, IEditorModel, IResourceEditorInputIdentifier, ITextResourceEditorInput, ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IUntitledTextEditorService, UntitledTextEditorService } from 'vs/workbench/services/untitled/common/untitledTextEditorService';\nimport { IWorkspaceContextService, IWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\nimport { ILifecycleService, ShutdownReason, StartupKind, LifecyclePhase, WillShutdownEvent, BeforeShutdownErrorEvent, InternalBeforeShutdownEvent, IWillShutdownEventJoiner } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { FileOperationEvent, IFileService, IFileStat, IFileStatResult, FileChangesEvent, IResolveFileOptions, ICreateFileOptions, IFileSystemProvider, FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileType, IFileDeleteOptions, IFileOverwriteOptions, IFileWriteOptions, IFileOpenOptions, IFileStatWithMetadata, IResolveMetadataFileOptions, IWriteFileOptions, IReadFileOptions, IFileContent, IFileStreamContent, FileOperationError, IFileSystemProviderWithFileReadStreamCapability, IFileReadStreamOptions, IReadFileStreamOptions, IFileSystemProviderCapabilitiesChangeEvent, IFileStatWithPartialMetadata } from 'vs/platform/files/common/files';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { LanguageService } from 'vs/editor/common/services/languageService';\nimport { ModelService } from 'vs/editor/common/services/modelService';\nimport { IResourceEncoding, ITextFileService, IReadTextFileOptions, ITextFileStreamContent, IWriteTextFileOptions, ITextFileEditorModel, ITextFileEditorModelManager } from 'vs/workbench/services/textfile/common/textfiles';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { IInstantiationService, ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { MenuBarVisibility, IWindowOpenable, IOpenWindowOptions, IOpenEmptyWindowOptions } from 'vs/platform/window/common/window';\nimport { TestWorkspace } from 'vs/platform/workspace/test/common/testWorkspace';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from 'vs/editor/common/services/textResourceConfiguration';\nimport { IPosition, Position as EditorPosition } from 'vs/editor/common/core/position';\nimport { IMenuService, MenuId, IMenu } from 'vs/platform/actions/common/actions';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { MockContextKeyService, MockKeybindingService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { ITextBufferFactory, DefaultEndOfLine, EndOfLinePreference, ITextSnapshot } from 'vs/editor/common/model';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IDialogService, IPickAndOpenOptions, ISaveDialogOptions, IOpenDialogOptions, IFileDialogService, ConfirmResult } from 'vs/platform/dialogs/common/dialogs';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { TestNotificationService } from 'vs/platform/notification/test/common/testNotificationService';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IDecorationsService, IResourceDecorationChangeEvent, IDecoration, IDecorationData, IDecorationsProvider } from 'vs/workbench/services/decorations/common/decorations';\nimport { IDisposable, toDisposable, Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IEditorGroupsService, IEditorGroup, GroupsOrder, GroupsArrangement, GroupDirection, IMergeGroupOptions, IEditorReplacement, IFindGroupScope, EditorGroupLayout, ICloseEditorOptions, GroupOrientation, ICloseAllEditorsOptions, ICloseEditorsFilter } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorService, ISaveEditorsOptions, IRevertAllEditorsOptions, PreferredGroup, IEditorsChangeEvent, ISaveEditorsResult } from 'vs/workbench/services/editor/common/editorService';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IEditorPaneRegistry, EditorPaneDescriptor } from 'vs/workbench/browser/editor';\nimport { Dimension, IDimension } from 'vs/base/browser/dom';\nimport { ILoggerService, ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { timeout } from 'vs/base/common/async';\nimport { PaneComposite, PaneCompositeDescriptor } from 'vs/workbench/browser/panecomposite';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IProcessEnvironment, isLinux, isWindows, OperatingSystem } from 'vs/base/common/platform';\nimport { LabelService } from 'vs/workbench/services/label/common/labelService';\nimport { Part } from 'vs/workbench/browser/part';\nimport { IBadge } from 'vs/workbench/services/activity/common/activity';\nimport { bufferToStream, VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { Schemas } from 'vs/base/common/network';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport product from 'vs/platform/product/common/product';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IWorkingCopyService, WorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { IWorkingCopy, IWorkingCopyBackupMeta, IWorkingCopyIdentifier } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { IFilesConfigurationService, FilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { BrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { BrowserTextFileService } from 'vs/workbench/services/textfile/browser/browserTextFileService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { createTextBufferFactoryFromStream } from 'vs/editor/common/model/textModel';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { Direction } from 'vs/base/browser/ui/grid/grid';\nimport { IProgressService, IProgressOptions, IProgressWindowOptions, IProgressNotificationOptions, IProgressCompositeOptions, IProgress, IProgressStep, Progress, IProgressDialogOptions, IProgressIndicator } from 'vs/platform/progress/common/progress';\nimport { IWorkingCopyFileService, WorkingCopyFileService } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';\nimport { UndoRedoService } from 'vs/platform/undoRedo/common/undoRedoService';\nimport { IUndoRedoService } from 'vs/platform/undoRedo/common/undoRedo';\nimport { TextFileEditorModel } from 'vs/workbench/services/textfile/common/textFileEditorModel';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { EditorPane } from 'vs/workbench/browser/parts/editor/editorPane';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { TestDialogService } from 'vs/platform/dialogs/test/common/testDialogService';\nimport { CodeEditorService } from 'vs/workbench/services/editor/browser/codeEditorService';\nimport { EditorPart } from 'vs/workbench/browser/parts/editor/editorPart';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IDiffEditor } from 'vs/editor/common/editorCommon';\nimport { IInputBox, IInputOptions, IPickOptions, IQuickInputButton, IQuickInputService, IQuickNavigateConfiguration, IQuickPick, IQuickPickItem, IQuickWidget, QuickPickInput } from 'vs/platform/quickinput/common/quickInput';\nimport { QuickInputService } from 'vs/workbench/services/quickinput/browser/quickInputService';\nimport { IListService } from 'vs/platform/list/browser/listService';\nimport { win32, posix } from 'vs/base/common/path';\nimport { TestContextService, TestStorageService, TestTextResourcePropertiesService, TestExtensionService, TestProductService, createFileStat, TestLoggerService, TestWorkspaceTrustManagementService, TestWorkspaceTrustRequestService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { IViewsService, IView, ViewContainer, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { IPaneComposite } from 'vs/workbench/common/panecomposite';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { newWriteableStream, ReadableStreamEvents } from 'vs/base/common/stream';\nimport { EncodingOracle, IEncodingOverride } from 'vs/workbench/services/textfile/browser/textFileService';\nimport { UTF16le, UTF16be, UTF8_with_bom } from 'vs/workbench/services/textfile/common/encoding';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { InMemoryWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/common/workingCopyBackupService';\nimport { BrowserWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/browser/workingCopyBackupService';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { TextResourceEditor } from 'vs/workbench/browser/parts/editor/textResourceEditor';\nimport { TestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport { TextFileEditor } from 'vs/workbench/contrib/files/browser/editors/textFileEditor';\nimport { TextResourceEditorInput } from 'vs/workbench/common/editor/textResourceEditorInput';\nimport { UntitledTextEditorInput } from 'vs/workbench/services/untitled/common/untitledTextEditorInput';\nimport { SideBySideEditor } from 'vs/workbench/browser/parts/editor/sideBySideEditor';\nimport { IEnterWorkspaceResult, IRecent, IRecentlyOpened, IWorkspaceFolderCreationData, IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspaceTrustManagementService, IWorkspaceTrustRequestService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { IExtensionTerminalProfile, IShellLaunchConfig, ITerminalBackend, ITerminalProfile, TerminalIcon, TerminalLocation, TerminalShellType } from 'vs/platform/terminal/common/terminal';\nimport { ICreateTerminalOptions, IDeserializedTerminalEditorInput, ITerminalEditorService, ITerminalGroup, ITerminalGroupService, ITerminalInstance, ITerminalInstanceService, TerminalEditorLocation } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { IRegisterContributedProfileArgs, IShellLaunchConfigResolveOptions, ITerminalProfileProvider, ITerminalProfileResolverService, ITerminalProfileService } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { EditorResolverService } from 'vs/workbench/services/editor/browser/editorResolverService';\nimport { FILE_EDITOR_INPUT_ID } from 'vs/workbench/contrib/files/common/files';\nimport { IEditorResolverService } from 'vs/workbench/services/editor/common/editorResolverService';\nimport { IWorkingCopyEditorService, WorkingCopyEditorService } from 'vs/workbench/services/workingCopy/common/workingCopyEditorService';\nimport { IElevatedFileService } from 'vs/workbench/services/files/common/elevatedFileService';\nimport { BrowserElevatedFileService } from 'vs/workbench/services/files/browser/elevatedFileService';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorker';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { SideBySideEditorInput } from 'vs/workbench/common/editor/sideBySideEditorInput';\nimport { ITextEditorService, TextEditorService } from 'vs/workbench/services/textfile/common/textEditorService';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { IPaneCompositePart, IPaneCompositeSelectorPart } from 'vs/workbench/browser/parts/paneCompositePart';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { TestLanguageConfigurationService } from 'vs/editor/test/common/modes/testLanguageConfigurationService';\nimport { TerminalEditorInput } from 'vs/workbench/contrib/terminal/browser/terminalEditorInput';\nimport { IGroupModelChangeEvent } from 'vs/workbench/common/editor/editorGroupModel';\nimport { env } from 'vs/base/common/process';\nimport { isValidBasename } from 'vs/base/common/extpath';\nimport { TestAccessibilityService } from 'vs/platform/accessibility/test/common/testAccessibilityService';\nimport { ILanguageFeatureDebounceService, LanguageFeatureDebounceService } from 'vs/editor/common/services/languageFeatureDebounce';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { LanguageFeaturesService } from 'vs/editor/common/services/languageFeaturesService';\nimport { TextEditorPaneSelection } from 'vs/workbench/browser/parts/editor/textEditor';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IFolderBackupInfo, IWorkspaceBackupInfo } from 'vs/platform/backup/common/backup';\nimport { TestEditorWorkerService } from 'vs/editor/test/common/services/testEditorWorkerService';\nimport { IExtensionHostExitInfo, IRemoteAgentConnection, IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { ILanguageDetectionService } from 'vs/workbench/services/languageDetection/common/languageDetectionWorkerService';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { ExtensionType, IExtension, IExtensionDescription, IRelaxedExtensionManifest, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { ILayoutOffsetInfo } from 'vs/platform/layout/browser/layoutService';\nimport { IUserDataProfile, IUserDataProfilesService, toUserDataProfile, UserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { UserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfileService';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { EnablementState, IScannedExtension, IWebExtensionsScannerService, IWorkbenchExtensionEnablementService, IWorkbenchExtensionManagementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { InstallVSIXOptions, ILocalExtension, IGalleryExtension, InstallOptions, IExtensionIdentifier, UninstallOptions, IExtensionsControlManifest, IGalleryMetadata, IExtensionManagementParticipant, Metadata, InstallExtensionResult, InstallExtensionInfo } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { IHoverOptions, IHoverService, IHoverWidget } from 'vs/workbench/services/hover/browser/hover';\nimport { IRemoteExtensionsScannerService } from 'vs/platform/remote/common/remoteExtensionsScanner';\nimport { IRemoteSocketFactoryService, RemoteSocketFactoryService } from 'vs/platform/remote/common/remoteSocketFactoryService';\n\nexport function createFileEditorInput(instantiationService: IInstantiationService, resource: URI): FileEditorInput {\n\treturn instantiationService.createInstance(FileEditorInput, resource, undefined, undefined, undefined, undefined, undefined, undefined);\n}\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerFileEditorFactory({\n\n\ttypeId: FILE_EDITOR_INPUT_ID,\n\n\tcreateFileEditor: (resource, preferredResource, preferredName, preferredDescription, preferredEncoding, preferredLanguageId, preferredContents, instantiationService): IFileEditorInput => {\n\t\treturn instantiationService.createInstance(FileEditorInput, resource, preferredResource, preferredName, preferredDescription, preferredEncoding, preferredLanguageId, preferredContents);\n\t},\n\n\tisFileEditor: (obj): obj is IFileEditorInput => {\n\t\treturn obj instanceof FileEditorInput;\n\t}\n});\n\nexport class TestTextResourceEditor extends TextResourceEditor {\n\n\tprotected override createEditorControl(parent: HTMLElement, configuration: any): void {\n\t\tthis.editorControl = this._register(this.instantiationService.createInstance(TestCodeEditor, parent, configuration, {}));\n\t}\n}\n\nexport class TestTextFileEditor extends TextFileEditor {\n\n\tprotected override createEditorControl(parent: HTMLElement, configuration: any): void {\n\t\tthis.editorControl = this._register(this.instantiationService.createInstance(TestCodeEditor, parent, configuration, { contributions: [] }));\n\t}\n\n\tsetSelection(selection: Selection | undefined, reason: EditorPaneSelectionChangeReason): void {\n\t\tthis._options = selection ? { selection } as IEditorOptions : undefined;\n\n\t\tthis._onDidChangeSelection.fire({ reason });\n\t}\n\n\toverride getSelection(): IEditorPaneSelection | undefined {\n\t\tconst options = this.options;\n\t\tif (!options) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst textSelection = (options as ITextEditorOptions).selection;\n\t\tif (!textSelection) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn new TextEditorPaneSelection(new Selection(textSelection.startLineNumber, textSelection.startColumn, textSelection.endLineNumber ?? textSelection.startLineNumber, textSelection.endColumn ?? textSelection.startColumn));\n\t}\n}\n\nexport interface ITestInstantiationService extends IInstantiationService {\n\tstub<T>(service: ServiceIdentifier<T>, ctor: any): T;\n}\n\nexport class TestWorkingCopyService extends WorkingCopyService {\n\ttestUnregisterWorkingCopy(workingCopy: IWorkingCopy): void {\n\t\treturn super.unregisterWorkingCopy(workingCopy);\n\t}\n}\n\nexport function workbenchInstantiationService(\n\toverrides?: {\n\t\tenvironmentService?: (instantiationService: IInstantiationService) => IEnvironmentService;\n\t\tfileService?: (instantiationService: IInstantiationService) => IFileService;\n\t\tworkingCopyBackupService?: (instantiationService: IInstantiationService) => IWorkingCopyBackupService;\n\t\tconfigurationService?: (instantiationService: IInstantiationService) => TestConfigurationService;\n\t\ttextFileService?: (instantiationService: IInstantiationService) => ITextFileService;\n\t\tpathService?: (instantiationService: IInstantiationService) => IPathService;\n\t\teditorService?: (instantiationService: IInstantiationService) => IEditorService;\n\t\tcontextKeyService?: (instantiationService: IInstantiationService) => IContextKeyService;\n\t\ttextEditorService?: (instantiationService: IInstantiationService) => ITextEditorService;\n\t},\n\tdisposables: Pick<DisposableStore, 'add'> = new DisposableStore()\n): TestInstantiationService {\n\tconst instantiationService = disposables.add(new TestInstantiationService(new ServiceCollection([ILifecycleService, disposables.add(new TestLifecycleService())])));\n\n\tinstantiationService.stub(IEditorWorkerService, new TestEditorWorkerService());\n\tinstantiationService.stub(IWorkingCopyService, disposables.add(new TestWorkingCopyService()));\n\tconst environmentService = overrides?.environmentService ? overrides.environmentService(instantiationService) : TestEnvironmentService;\n\tinstantiationService.stub(IEnvironmentService, environmentService);\n\tinstantiationService.stub(IWorkbenchEnvironmentService, environmentService);\n\tconst contextKeyService = overrides?.contextKeyService ? overrides.contextKeyService(instantiationService) : instantiationService.createInstance(MockContextKeyService);\n\tinstantiationService.stub(IContextKeyService, contextKeyService);\n\tinstantiationService.stub(IProgressService, new TestProgressService());\n\tconst workspaceContextService = new TestContextService(TestWorkspace);\n\tinstantiationService.stub(IWorkspaceContextService, workspaceContextService);\n\tconst configService = overrides?.configurationService ? overrides.configurationService(instantiationService) : new TestConfigurationService({\n\t\tfiles: {\n\t\t\tparticipants: {\n\t\t\t\ttimeout: 60000\n\t\t\t}\n\t\t}\n\t});\n\tinstantiationService.stub(IConfigurationService, configService);\n\tinstantiationService.stub(ITextResourceConfigurationService, new TestTextResourceConfigurationService(configService));\n\tinstantiationService.stub(IUntitledTextEditorService, disposables.add(instantiationService.createInstance(UntitledTextEditorService)));\n\tinstantiationService.stub(IStorageService, disposables.add(new TestStorageService()));\n\tinstantiationService.stub(IRemoteAgentService, new TestRemoteAgentService());\n\tinstantiationService.stub(ILanguageDetectionService, new TestLanguageDetectionService());\n\tinstantiationService.stub(IPathService, overrides?.pathService ? overrides.pathService(instantiationService) : new TestPathService());\n\tconst layoutService = new TestLayoutService();\n\tinstantiationService.stub(IWorkbenchLayoutService, layoutService);\n\tinstantiationService.stub(IDialogService, new TestDialogService());\n\tconst accessibilityService = new TestAccessibilityService();\n\tinstantiationService.stub(IAccessibilityService, accessibilityService);\n\tinstantiationService.stub(IFileDialogService, instantiationService.createInstance(TestFileDialogService));\n\tinstantiationService.stub(ILanguageService, disposables.add(instantiationService.createInstance(LanguageService)));\n\tinstantiationService.stub(ILanguageFeaturesService, new LanguageFeaturesService());\n\tinstantiationService.stub(ILanguageFeatureDebounceService, instantiationService.createInstance(LanguageFeatureDebounceService));\n\tinstantiationService.stub(IHistoryService, new TestHistoryService());\n\tinstantiationService.stub(ITextResourcePropertiesService, new TestTextResourcePropertiesService(configService));\n\tinstantiationService.stub(IUndoRedoService, instantiationService.createInstance(UndoRedoService));\n\tconst themeService = new TestThemeService();\n\tinstantiationService.stub(IThemeService, themeService);\n\tinstantiationService.stub(ILanguageConfigurationService, disposables.add(new TestLanguageConfigurationService()));\n\tinstantiationService.stub(IModelService, disposables.add(instantiationService.createInstance(ModelService)));\n\tconst fileService = overrides?.fileService ? overrides.fileService(instantiationService) : disposables.add(new TestFileService());\n\tinstantiationService.stub(IFileService, fileService);\n\tconst uriIdentityService = new UriIdentityService(fileService);\n\tdisposables.add(uriIdentityService);\n\tinstantiationService.stub(IFilesConfigurationService, disposables.add(new TestFilesConfigurationService(contextKeyService, configService, workspaceContextService, environmentService, uriIdentityService, fileService)));\n\tinstantiationService.stub(IUriIdentityService, disposables.add(uriIdentityService));\n\tconst userDataProfilesService = instantiationService.stub(IUserDataProfilesService, disposables.add(new UserDataProfilesService(environmentService, fileService, uriIdentityService, new NullLogService())));\n\tinstantiationService.stub(IUserDataProfileService, disposables.add(new UserDataProfileService(userDataProfilesService.defaultProfile)));\n\tinstantiationService.stub(IWorkingCopyBackupService, overrides?.workingCopyBackupService ? overrides?.workingCopyBackupService(instantiationService) : disposables.add(new TestWorkingCopyBackupService()));\n\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\tinstantiationService.stub(INotificationService, new TestNotificationService());\n\tinstantiationService.stub(IUntitledTextEditorService, disposables.add(instantiationService.createInstance(UntitledTextEditorService)));\n\tinstantiationService.stub(IMenuService, new TestMenuService());\n\tconst keybindingService = new MockKeybindingService();\n\tinstantiationService.stub(IKeybindingService, keybindingService);\n\tinstantiationService.stub(IDecorationsService, new TestDecorationsService());\n\tinstantiationService.stub(IExtensionService, new TestExtensionService());\n\tinstantiationService.stub(IWorkingCopyFileService, disposables.add(instantiationService.createInstance(WorkingCopyFileService)));\n\tinstantiationService.stub(ITextFileService, overrides?.textFileService ? overrides.textFileService(instantiationService) : disposables.add(<ITextFileService>instantiationService.createInstance(TestTextFileService)));\n\tinstantiationService.stub(IHostService, <IHostService>instantiationService.createInstance(TestHostService));\n\tinstantiationService.stub(ITextModelService, <ITextModelService>disposables.add(instantiationService.createInstance(TextModelResolverService)));\n\tinstantiationService.stub(ILoggerService, disposables.add(new TestLoggerService(TestEnvironmentService.logsHome)));\n\tinstantiationService.stub(ILogService, new NullLogService());\n\tconst editorGroupService = new TestEditorGroupsService([new TestEditorGroupView(0)]);\n\tinstantiationService.stub(IEditorGroupsService, editorGroupService);\n\tinstantiationService.stub(ILabelService, <ILabelService>disposables.add(instantiationService.createInstance(LabelService)));\n\tconst editorService = overrides?.editorService ? overrides.editorService(instantiationService) : new TestEditorService(editorGroupService);\n\tinstantiationService.stub(IEditorService, editorService);\n\tinstantiationService.stub(IWorkingCopyEditorService, disposables.add(instantiationService.createInstance(WorkingCopyEditorService)));\n\tinstantiationService.stub(IEditorResolverService, disposables.add(instantiationService.createInstance(EditorResolverService)));\n\tconst textEditorService = overrides?.textEditorService ? overrides.textEditorService(instantiationService) : disposables.add(instantiationService.createInstance(TextEditorService));\n\tinstantiationService.stub(ITextEditorService, textEditorService);\n\tinstantiationService.stub(ICodeEditorService, disposables.add(new CodeEditorService(editorService, themeService, configService)));\n\tinstantiationService.stub(IPaneCompositePartService, disposables.add(new TestPaneCompositeService()));\n\tinstantiationService.stub(IListService, new TestListService());\n\tconst hoverService = instantiationService.stub(IHoverService, instantiationService.createInstance(TestHoverService));\n\tinstantiationService.stub(IQuickInputService, disposables.add(new QuickInputService(configService, instantiationService, keybindingService, contextKeyService, themeService, layoutService, hoverService)));\n\tinstantiationService.stub(IWorkspacesService, new TestWorkspacesService());\n\tinstantiationService.stub(IWorkspaceTrustManagementService, disposables.add(new TestWorkspaceTrustManagementService()));\n\tinstantiationService.stub(IWorkspaceTrustRequestService, disposables.add(new TestWorkspaceTrustRequestService(false)));\n\tinstantiationService.stub(ITerminalInstanceService, new TestTerminalInstanceService());\n\tinstantiationService.stub(IElevatedFileService, new BrowserElevatedFileService());\n\tinstantiationService.stub(IRemoteSocketFactoryService, new RemoteSocketFactoryService());\n\n\treturn instantiationService;\n}\n\nexport class TestServiceAccessor {\n\tconstructor(\n\t\t@ILifecycleService public lifecycleService: TestLifecycleService,\n\t\t@ITextFileService public textFileService: TestTextFileService,\n\t\t@ITextEditorService public textEditorService: ITextEditorService,\n\t\t@IWorkingCopyFileService public workingCopyFileService: IWorkingCopyFileService,\n\t\t@IFilesConfigurationService public filesConfigurationService: TestFilesConfigurationService,\n\t\t@IWorkspaceContextService public contextService: TestContextService,\n\t\t@IModelService public modelService: ModelService,\n\t\t@IFileService public fileService: TestFileService,\n\t\t@IFileDialogService public fileDialogService: TestFileDialogService,\n\t\t@IDialogService public dialogService: TestDialogService,\n\t\t@IWorkingCopyService public workingCopyService: TestWorkingCopyService,\n\t\t@IEditorService public editorService: TestEditorService,\n\t\t@IWorkbenchEnvironmentService public environmentService: IWorkbenchEnvironmentService,\n\t\t@IPathService public pathService: IPathService,\n\t\t@IEditorGroupsService public editorGroupService: IEditorGroupsService,\n\t\t@IEditorResolverService public editorResolverService: IEditorResolverService,\n\t\t@ILanguageService public languageService: ILanguageService,\n\t\t@ITextModelService public textModelResolverService: ITextModelService,\n\t\t@IUntitledTextEditorService public untitledTextEditorService: UntitledTextEditorService,\n\t\t@IConfigurationService public testConfigurationService: TestConfigurationService,\n\t\t@IWorkingCopyBackupService public workingCopyBackupService: TestWorkingCopyBackupService,\n\t\t@IHostService public hostService: TestHostService,\n\t\t@IQuickInputService public quickInputService: IQuickInputService,\n\t\t@ILabelService public labelService: ILabelService,\n\t\t@ILogService public logService: ILogService,\n\t\t@IUriIdentityService public uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService public instantitionService: IInstantiationService,\n\t\t@INotificationService public notificationService: INotificationService,\n\t\t@IWorkingCopyEditorService public workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IInstantiationService public instantiationService: IInstantiationService,\n\t\t@IElevatedFileService public elevatedFileService: IElevatedFileService,\n\t\t@IWorkspaceTrustRequestService public workspaceTrustRequestService: TestWorkspaceTrustRequestService,\n\t\t@IDecorationsService public decorationsService: IDecorationsService\n\t) { }\n}\n\nexport class TestTextFileService extends BrowserTextFileService {\n\tprivate readStreamError: FileOperationError | undefined = undefined;\n\tprivate writeError: FileOperationError | undefined = undefined;\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IUntitledTextEditorService untitledTextEditorService: IUntitledTextEditorService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@IFileDialogService fileDialogService: IFileDialogService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IPathService pathService: IPathService,\n\t\t@IWorkingCopyFileService workingCopyFileService: IWorkingCopyFileService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@ILogService logService: ILogService,\n\t\t@IElevatedFileService elevatedFileService: IElevatedFileService,\n\t\t@IDecorationsService decorationsService: IDecorationsService\n\t) {\n\t\tsuper(\n\t\t\tfileService,\n\t\t\tuntitledTextEditorService,\n\t\t\tlifecycleService,\n\t\t\tinstantiationService,\n\t\t\tmodelService,\n\t\t\tenvironmentService,\n\t\t\tdialogService,\n\t\t\tfileDialogService,\n\t\t\ttextResourceConfigurationService,\n\t\t\tfilesConfigurationService,\n\t\t\tcodeEditorService,\n\t\t\tpathService,\n\t\t\tworkingCopyFileService,\n\t\t\turiIdentityService,\n\t\t\tlanguageService,\n\t\t\televatedFileService,\n\t\t\tlogService,\n\t\t\tdecorationsService\n\t\t);\n\t}\n\n\tsetReadStreamErrorOnce(error: FileOperationError): void {\n\t\tthis.readStreamError = error;\n\t}\n\n\toverride async readStream(resource: URI, options?: IReadTextFileOptions): Promise<ITextFileStreamContent> {\n\t\tif (this.readStreamError) {\n\t\t\tconst error = this.readStreamError;\n\t\t\tthis.readStreamError = undefined;\n\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst content = await this.fileService.readFileStream(resource, options);\n\t\treturn {\n\t\t\tresource: content.resource,\n\t\t\tname: content.name,\n\t\t\tmtime: content.mtime,\n\t\t\tctime: content.ctime,\n\t\t\tetag: content.etag,\n\t\t\tencoding: 'utf8',\n\t\t\tvalue: await createTextBufferFactoryFromStream(content.value),\n\t\t\tsize: 10,\n\t\t\treadonly: false,\n\t\t\tlocked: false\n\t\t};\n\t}\n\n\tsetWriteErrorOnce(error: FileOperationError): void {\n\t\tthis.writeError = error;\n\t}\n\n\toverride async write(resource: URI, value: string | ITextSnapshot, options?: IWriteTextFileOptions): Promise<IFileStatWithMetadata> {\n\t\tif (this.writeError) {\n\t\t\tconst error = this.writeError;\n\t\t\tthis.writeError = undefined;\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn super.write(resource, value, options);\n\t}\n}\n\nexport class TestBrowserTextFileServiceWithEncodingOverrides extends BrowserTextFileService {\n\n\tprivate _testEncoding: TestEncodingOracle | undefined;\n\toverride get encoding(): TestEncodingOracle {\n\t\tif (!this._testEncoding) {\n\t\t\tthis._testEncoding = this._register(this.instantiationService.createInstance(TestEncodingOracle));\n\t\t}\n\n\t\treturn this._testEncoding;\n\t}\n}\n\nexport class TestEncodingOracle extends EncodingOracle {\n\n\tprotected override get encodingOverrides(): IEncodingOverride[] {\n\t\treturn [\n\t\t\t{ extension: 'utf16le', encoding: UTF16le },\n\t\t\t{ extension: 'utf16be', encoding: UTF16be },\n\t\t\t{ extension: 'utf8bom', encoding: UTF8_with_bom }\n\t\t];\n\t}\n\n\tprotected override set encodingOverrides(overrides: IEncodingOverride[]) { }\n}\n\nclass TestEnvironmentServiceWithArgs extends BrowserWorkbenchEnvironmentService {\n\targs = [];\n}\n\nexport const TestEnvironmentService = new TestEnvironmentServiceWithArgs('', URI.file('tests').with({ scheme: 'vscode-tests' }), Object.create(null), TestProductService);\n\nexport class TestProgressService implements IProgressService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\twithProgress(\n\t\toptions: IProgressOptions | IProgressDialogOptions | IProgressWindowOptions | IProgressNotificationOptions | IProgressCompositeOptions,\n\t\ttask: (progress: IProgress<IProgressStep>) => Promise<any>,\n\t\tonDidCancel?: ((choice?: number | undefined) => void) | undefined\n\t): Promise<any> {\n\t\treturn task(Progress.None);\n\t}\n}\n\nexport class TestDecorationsService implements IDecorationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidChangeDecorations: Event<IResourceDecorationChangeEvent> = Event.None;\n\n\tregisterDecorationsProvider(_provider: IDecorationsProvider): IDisposable { return Disposable.None; }\n\tgetDecoration(_uri: URI, _includeChildren: boolean, _overwrite?: IDecorationData): IDecoration | undefined { return undefined; }\n}\n\nexport class TestMenuService implements IMenuService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tcreateMenu(_id: MenuId, _scopedKeybindingService: IContextKeyService): IMenu {\n\t\treturn {\n\t\t\tonDidChange: Event.None,\n\t\t\tdispose: () => undefined,\n\t\t\tgetActions: () => []\n\t\t};\n\t}\n\n\tresetHiddenStates(): void {\n\t\t// nothing\n\t}\n}\n\nexport class TestHistoryService implements IHistoryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private root?: URI) { }\n\n\tasync reopenLastClosedEditor(): Promise<void> { }\n\tasync goForward(): Promise<void> { }\n\tasync goBack(): Promise<void> { }\n\tasync goPrevious(): Promise<void> { }\n\tasync goLast(): Promise<void> { }\n\tremoveFromHistory(_input: EditorInput | IResourceEditorInput): void { }\n\tclear(): void { }\n\tclearRecentlyOpened(): void { }\n\tgetHistory(): readonly (EditorInput | IResourceEditorInput)[] { return []; }\n\tasync openNextRecentlyUsedEditor(group?: GroupIdentifier): Promise<void> { }\n\tasync openPreviouslyUsedEditor(group?: GroupIdentifier): Promise<void> { }\n\tgetLastActiveWorkspaceRoot(_schemeFilter: string): URI | undefined { return this.root; }\n\tgetLastActiveFile(_schemeFilter: string): URI | undefined { return undefined; }\n}\n\nexport class TestFileDialogService implements IFileDialogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate confirmResult!: ConfirmResult;\n\n\tconstructor(\n\t\t@IPathService private readonly pathService: IPathService\n\t) { }\n\tasync defaultFilePath(_schemeFilter?: string): Promise<URI> { return this.pathService.userHome(); }\n\tasync defaultFolderPath(_schemeFilter?: string): Promise<URI> { return this.pathService.userHome(); }\n\tasync defaultWorkspacePath(_schemeFilter?: string): Promise<URI> { return this.pathService.userHome(); }\n\tasync preferredHome(_schemeFilter?: string): Promise<URI> { return this.pathService.userHome(); }\n\tpickFileFolderAndOpen(_options: IPickAndOpenOptions): Promise<any> { return Promise.resolve(0); }\n\tpickFileAndOpen(_options: IPickAndOpenOptions): Promise<any> { return Promise.resolve(0); }\n\tpickFolderAndOpen(_options: IPickAndOpenOptions): Promise<any> { return Promise.resolve(0); }\n\tpickWorkspaceAndOpen(_options: IPickAndOpenOptions): Promise<any> { return Promise.resolve(0); }\n\n\tprivate fileToSave!: URI;\n\tsetPickFileToSave(path: URI): void { this.fileToSave = path; }\n\tpickFileToSave(defaultUri: URI, availableFileSystems?: string[]): Promise<URI | undefined> { return Promise.resolve(this.fileToSave); }\n\n\tshowSaveDialog(_options: ISaveDialogOptions): Promise<URI | undefined> { return Promise.resolve(undefined); }\n\tshowOpenDialog(_options: IOpenDialogOptions): Promise<URI[] | undefined> { return Promise.resolve(undefined); }\n\n\tsetConfirmResult(result: ConfirmResult): void { this.confirmResult = result; }\n\tshowSaveConfirm(fileNamesOrResources: (string | URI)[]): Promise<ConfirmResult> { return Promise.resolve(this.confirmResult); }\n}\n\nexport class TestLayoutService implements IWorkbenchLayoutService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\topenedDefaultEditors = false;\n\n\tdimension: IDimension = { width: 800, height: 600 };\n\toffset: ILayoutOffsetInfo = { top: 0, quickPickTop: 0 };\n\n\thasContainer = true;\n\tcontainer: HTMLElement = window.document.body;\n\n\tonDidChangeZenMode: Event<boolean> = Event.None;\n\tonDidChangeCenteredLayout: Event<boolean> = Event.None;\n\tonDidChangeFullscreen: Event<boolean> = Event.None;\n\tonDidChangeWindowMaximized: Event<boolean> = Event.None;\n\tonDidChangePanelPosition: Event<string> = Event.None;\n\tonDidChangePanelAlignment: Event<PanelAlignment> = Event.None;\n\tonDidChangePartVisibility: Event<void> = Event.None;\n\tonDidLayout = Event.None;\n\tonDidChangeNotificationsVisibility = Event.None;\n\n\tlayout(): void { }\n\tisRestored(): boolean { return true; }\n\twhenReady: Promise<void> = Promise.resolve(undefined);\n\twhenRestored: Promise<void> = Promise.resolve(undefined);\n\thasFocus(_part: Parts): boolean { return false; }\n\tfocusPart(_part: Parts): void { }\n\thasWindowBorder(): boolean { return false; }\n\tgetWindowBorderWidth(): number { return 0; }\n\tgetWindowBorderRadius(): string | undefined { return undefined; }\n\tisVisible(_part: Parts): boolean { return true; }\n\tgetDimension(_part: Parts): Dimension { return new Dimension(0, 0); }\n\tgetContainer(_part: Parts): HTMLElement { return null!; }\n\tisTitleBarHidden(): boolean { return false; }\n\tisStatusBarHidden(): boolean { return false; }\n\tisActivityBarHidden(): boolean { return false; }\n\tsetActivityBarHidden(_hidden: boolean): void { }\n\tsetBannerHidden(_hidden: boolean): void { }\n\tisSideBarHidden(): boolean { return false; }\n\tasync setEditorHidden(_hidden: boolean): Promise<void> { }\n\tasync setSideBarHidden(_hidden: boolean): Promise<void> { }\n\tasync setAuxiliaryBarHidden(_hidden: boolean): Promise<void> { }\n\tasync setPartHidden(_hidden: boolean, part: Parts): Promise<void> { }\n\tisPanelHidden(): boolean { return false; }\n\tasync setPanelHidden(_hidden: boolean): Promise<void> { }\n\ttoggleMaximizedPanel(): void { }\n\tisPanelMaximized(): boolean { return false; }\n\tgetMenubarVisibility(): MenuBarVisibility { throw new Error('not implemented'); }\n\ttoggleMenuBar(): void { }\n\tgetSideBarPosition() { return 0; }\n\tgetPanelPosition() { return 0; }\n\tgetPanelAlignment(): PanelAlignment { return 'center'; }\n\tasync setPanelPosition(_position: PartPosition): Promise<void> { }\n\tasync setPanelAlignment(_alignment: PanelAlignment): Promise<void> { }\n\taddClass(_clazz: string): void { }\n\tremoveClass(_clazz: string): void { }\n\tgetMaximumEditorDimensions(): Dimension { throw new Error('not implemented'); }\n\ttoggleZenMode(): void { }\n\tisEditorLayoutCentered(): boolean { return false; }\n\tcenterEditorLayout(_active: boolean): void { }\n\tresizePart(_part: Parts, _sizeChangeWidth: number, _sizeChangeHeight: number): void { }\n\tregisterPart(part: Part): void { }\n\tisWindowMaximized() { return false; }\n\tupdateWindowMaximizedState(maximized: boolean): void { }\n\tgetVisibleNeighborPart(part: Parts, direction: Direction): Parts | undefined { return undefined; }\n\tfocus() { }\n}\n\nconst activeViewlet: PaneComposite = {} as any;\n\nexport class TestPaneCompositeService extends Disposable implements IPaneCompositePartService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidPaneCompositeOpen: Event<{ composite: IPaneComposite; viewContainerLocation: ViewContainerLocation }>;\n\tonDidPaneCompositeClose: Event<{ composite: IPaneComposite; viewContainerLocation: ViewContainerLocation }>;\n\n\tprivate parts = new Map<ViewContainerLocation, IPaneCompositePart>();\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.parts.set(ViewContainerLocation.Panel, new TestPanelPart());\n\t\tthis.parts.set(ViewContainerLocation.Sidebar, new TestSideBarPart());\n\n\t\tthis.onDidPaneCompositeOpen = Event.any(...([ViewContainerLocation.Panel, ViewContainerLocation.Sidebar].map(loc => Event.map(this.parts.get(loc)!.onDidPaneCompositeOpen, composite => { return { composite, viewContainerLocation: loc }; }))));\n\t\tthis.onDidPaneCompositeClose = Event.any(...([ViewContainerLocation.Panel, ViewContainerLocation.Sidebar].map(loc => Event.map(this.parts.get(loc)!.onDidPaneCompositeClose, composite => { return { composite, viewContainerLocation: loc }; }))));\n\t}\n\n\topenPaneComposite(id: string | undefined, viewContainerLocation: ViewContainerLocation, focus?: boolean): Promise<IPaneComposite | undefined> {\n\t\treturn this.getPartByLocation(viewContainerLocation).openPaneComposite(id, focus);\n\t}\n\tgetActivePaneComposite(viewContainerLocation: ViewContainerLocation): IPaneComposite | undefined {\n\t\treturn this.getPartByLocation(viewContainerLocation).getActivePaneComposite();\n\t}\n\tgetPaneComposite(id: string, viewContainerLocation: ViewContainerLocation): PaneCompositeDescriptor | undefined {\n\t\treturn this.getPartByLocation(viewContainerLocation).getPaneComposite(id);\n\t}\n\tgetPaneComposites(viewContainerLocation: ViewContainerLocation): PaneCompositeDescriptor[] {\n\t\treturn this.getPartByLocation(viewContainerLocation).getPaneComposites();\n\t}\n\tgetProgressIndicator(id: string, viewContainerLocation: ViewContainerLocation): IProgressIndicator | undefined {\n\t\treturn this.getPartByLocation(viewContainerLocation).getProgressIndicator(id);\n\t}\n\thideActivePaneComposite(viewContainerLocation: ViewContainerLocation): void {\n\t\tthis.getPartByLocation(viewContainerLocation).hideActivePaneComposite();\n\t}\n\tgetLastActivePaneCompositeId(viewContainerLocation: ViewContainerLocation): string {\n\t\treturn this.getPartByLocation(viewContainerLocation).getLastActivePaneCompositeId();\n\t}\n\n\tgetPinnedPaneCompositeIds(viewContainerLocation: ViewContainerLocation): string[] {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tgetVisiblePaneCompositeIds(viewContainerLocation: ViewContainerLocation): string[] {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tshowActivity(id: string, viewContainerLocation: ViewContainerLocation, badge: IBadge, clazz?: string, priority?: number): IDisposable {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tgetPartByLocation(viewContainerLocation: ViewContainerLocation): IPaneCompositePart {\n\t\treturn assertIsDefined(this.parts.get(viewContainerLocation));\n\t}\n}\n\nexport class TestSideBarPart implements IPaneCompositePart {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidViewletRegisterEmitter = new Emitter<PaneCompositeDescriptor>();\n\tonDidViewletDeregisterEmitter = new Emitter<PaneCompositeDescriptor>();\n\tonDidViewletOpenEmitter = new Emitter<IPaneComposite>();\n\tonDidViewletCloseEmitter = new Emitter<IPaneComposite>();\n\n\telement: HTMLElement = undefined!;\n\tminimumWidth = 0;\n\tmaximumWidth = 0;\n\tminimumHeight = 0;\n\tmaximumHeight = 0;\n\tonDidChange = Event.None;\n\tonDidPaneCompositeOpen = this.onDidViewletOpenEmitter.event;\n\tonDidPaneCompositeClose = this.onDidViewletCloseEmitter.event;\n\n\topenPaneComposite(id: string, focus?: boolean): Promise<IPaneComposite | undefined> { return Promise.resolve(undefined); }\n\tgetPaneComposites(): PaneCompositeDescriptor[] { return []; }\n\tgetAllViewlets(): PaneCompositeDescriptor[] { return []; }\n\tgetActivePaneComposite(): IPaneComposite { return activeViewlet; }\n\tgetDefaultViewletId(): string { return 'workbench.view.explorer'; }\n\tgetPaneComposite(id: string): PaneCompositeDescriptor | undefined { return undefined; }\n\tgetProgressIndicator(id: string) { return undefined; }\n\thideActivePaneComposite(): void { }\n\tgetLastActivePaneCompositeId(): string { return undefined!; }\n\tdispose() { }\n\tlayout(width: number, height: number, top: number, left: number): void { }\n}\n\nclass TestHoverService implements IHoverService {\n\tprivate currentHover: IHoverWidget | undefined;\n\t_serviceBrand: undefined;\n\tshowHover(options: IHoverOptions, focus?: boolean | undefined): IHoverWidget | undefined {\n\t\tthis.currentHover = new class implements IHoverWidget {\n\t\t\tprivate _isDisposed = false;\n\t\t\tget isDisposed(): boolean { return this._isDisposed; }\n\t\t\tdispose(): void {\n\t\t\t\tthis._isDisposed = true;\n\t\t\t}\n\t\t};\n\t\treturn this.currentHover;\n\t}\n\tshowAndFocusLastHover(): void { }\n\thideHover(): void {\n\t\tthis.currentHover?.dispose();\n\t}\n}\n\nexport class TestPanelPart implements IPaneCompositePart, IPaneCompositeSelectorPart {\n\tdeclare readonly _serviceBrand: undefined;\n\n\telement: HTMLElement = undefined!;\n\tminimumWidth = 0;\n\tmaximumWidth = 0;\n\tminimumHeight = 0;\n\tmaximumHeight = 0;\n\tonDidChange = Event.None;\n\tonDidPaneCompositeOpen = new Emitter<IPaneComposite>().event;\n\tonDidPaneCompositeClose = new Emitter<IPaneComposite>().event;\n\n\tasync openPaneComposite(id?: string, focus?: boolean): Promise<undefined> { return undefined; }\n\tgetPaneComposite(id: string): any { return activeViewlet; }\n\tgetPaneComposites() { return []; }\n\tgetPinnedPaneCompositeIds() { return []; }\n\tgetVisiblePaneCompositeIds() { return []; }\n\tgetActivePaneComposite(): IPaneComposite { return activeViewlet; }\n\tsetPanelEnablement(id: string, enabled: boolean): void { }\n\tdispose() { }\n\tshowActivity(panelId: string, badge: IBadge, clazz?: string): IDisposable { throw new Error('Method not implemented.'); }\n\tgetProgressIndicator(id: string) { return null!; }\n\thideActivePaneComposite(): void { }\n\tgetLastActivePaneCompositeId(): string { return undefined!; }\n\tlayout(width: number, height: number, top: number, left: number): void { }\n}\n\nexport class TestViewsService implements IViewsService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\n\tonDidChangeViewContainerVisibility = new Emitter<{ id: string; visible: boolean; location: ViewContainerLocation }>().event;\n\tisViewContainerVisible(id: string): boolean { return true; }\n\tgetVisibleViewContainer(): ViewContainer | null { return null; }\n\topenViewContainer(id: string, focus?: boolean): Promise<IPaneComposite | null> { return Promise.resolve(null); }\n\tcloseViewContainer(id: string): void { }\n\n\tonDidChangeViewVisibilityEmitter = new Emitter<{ id: string; visible: boolean }>();\n\tonDidChangeViewVisibility = this.onDidChangeViewVisibilityEmitter.event;\n\tonDidChangeFocusedViewEmitter = new Emitter<void>();\n\tonDidChangeFocusedView = this.onDidChangeFocusedViewEmitter.event;\n\tisViewVisible(id: string): boolean { return true; }\n\tgetActiveViewWithId<T extends IView>(id: string): T | null { return null; }\n\tgetViewWithId<T extends IView>(id: string): T | null { return null; }\n\topenView<T extends IView>(id: string, focus?: boolean | undefined): Promise<T | null> { return Promise.resolve(null); }\n\tcloseView(id: string): void { }\n\tgetViewProgressIndicator(id: string) { return null!; }\n\tgetActiveViewPaneContainerWithId(id: string) { return null; }\n\tgetFocusedViewName(): string { return ''; }\n}\n\nexport class TestEditorGroupsService implements IEditorGroupsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(public groups: TestEditorGroupView[] = []) { }\n\n\tonDidChangeActiveGroup: Event<IEditorGroup> = Event.None;\n\tonDidActivateGroup: Event<IEditorGroup> = Event.None;\n\tonDidAddGroup: Event<IEditorGroup> = Event.None;\n\tonDidRemoveGroup: Event<IEditorGroup> = Event.None;\n\tonDidMoveGroup: Event<IEditorGroup> = Event.None;\n\tonDidChangeGroupIndex: Event<IEditorGroup> = Event.None;\n\tonDidChangeGroupLocked: Event<IEditorGroup> = Event.None;\n\tonDidLayout: Event<IDimension> = Event.None;\n\tonDidChangeEditorPartOptions = Event.None;\n\tonDidScroll = Event.None;\n\n\torientation = GroupOrientation.HORIZONTAL;\n\tisReady = true;\n\twhenReady: Promise<void> = Promise.resolve(undefined);\n\twhenRestored: Promise<void> = Promise.resolve(undefined);\n\thasRestorableState = false;\n\n\tcontentDimension = { width: 800, height: 600 };\n\n\tget activeGroup(): IEditorGroup { return this.groups[0]; }\n\tget sideGroup(): IEditorGroup { return this.groups[0]; }\n\tget count(): number { return this.groups.length; }\n\n\tgetGroups(_order?: GroupsOrder): readonly IEditorGroup[] { return this.groups; }\n\tgetGroup(identifier: number): IEditorGroup | undefined { return this.groups.find(group => group.id === identifier); }\n\tgetLabel(_identifier: number): string { return 'Group 1'; }\n\tfindGroup(_scope: IFindGroupScope, _source?: number | IEditorGroup, _wrap?: boolean): IEditorGroup { throw new Error('not implemented'); }\n\tactivateGroup(_group: number | IEditorGroup): IEditorGroup { throw new Error('not implemented'); }\n\trestoreGroup(_group: number | IEditorGroup): IEditorGroup { throw new Error('not implemented'); }\n\tgetSize(_group: number | IEditorGroup): { width: number; height: number } { return { width: 100, height: 100 }; }\n\tsetSize(_group: number | IEditorGroup, _size: { width: number; height: number }): void { }\n\tarrangeGroups(_arrangement: GroupsArrangement): void { }\n\tapplyLayout(_layout: EditorGroupLayout): void { }\n\tgetLayout(): EditorGroupLayout { throw new Error('not implemented'); }\n\tsetGroupOrientation(_orientation: GroupOrientation): void { }\n\taddGroup(_location: number | IEditorGroup, _direction: GroupDirection): IEditorGroup { throw new Error('not implemented'); }\n\tremoveGroup(_group: number | IEditorGroup): void { }\n\tmoveGroup(_group: number | IEditorGroup, _location: number | IEditorGroup, _direction: GroupDirection): IEditorGroup { throw new Error('not implemented'); }\n\tmergeGroup(_group: number | IEditorGroup, _target: number | IEditorGroup, _options?: IMergeGroupOptions): IEditorGroup { throw new Error('not implemented'); }\n\tmergeAllGroups(): IEditorGroup { throw new Error('not implemented'); }\n\tcopyGroup(_group: number | IEditorGroup, _location: number | IEditorGroup, _direction: GroupDirection): IEditorGroup { throw new Error('not implemented'); }\n\tcenterLayout(active: boolean): void { }\n\tisLayoutCentered(): boolean { return false; }\n\n\tpartOptions!: IEditorPartOptions;\n\tenforcePartOptions(options: IEditorPartOptions): IDisposable { return Disposable.None; }\n}\n\nexport class TestEditorGroupView implements IEditorGroupView {\n\n\tconstructor(public id: number) { }\n\n\tactiveEditorPane!: IVisibleEditorPane;\n\tactiveEditor!: EditorInput;\n\tpreviewEditor!: EditorInput;\n\tcount!: number;\n\tstickyCount!: number;\n\tdisposed!: boolean;\n\teditors: readonly EditorInput[] = [];\n\tlabel!: string;\n\tisLocked!: boolean;\n\tariaLabel!: string;\n\tindex!: number;\n\twhenRestored: Promise<void> = Promise.resolve(undefined);\n\telement!: HTMLElement;\n\tminimumWidth!: number;\n\tmaximumWidth!: number;\n\tminimumHeight!: number;\n\tmaximumHeight!: number;\n\n\ttitleHeight!: IEditorGroupTitleHeight;\n\n\tisEmpty = true;\n\n\tonWillDispose: Event<void> = Event.None;\n\tonDidModelChange: Event<IGroupModelChangeEvent> = Event.None;\n\tonWillCloseEditor: Event<IEditorCloseEvent> = Event.None;\n\tonDidCloseEditor: Event<IEditorCloseEvent> = Event.None;\n\tonDidOpenEditorFail: Event<EditorInput> = Event.None;\n\tonDidFocus: Event<void> = Event.None;\n\tonDidChange: Event<{ width: number; height: number }> = Event.None;\n\tonWillMoveEditor: Event<IEditorWillMoveEvent> = Event.None;\n\tonWillOpenEditor: Event<IEditorWillOpenEvent> = Event.None;\n\tonDidActiveEditorChange: Event<IActiveEditorChangeEvent> = Event.None;\n\n\tgetEditors(_order?: EditorsOrder): readonly EditorInput[] { return []; }\n\tfindEditors(_resource: URI): readonly EditorInput[] { return []; }\n\tgetEditorByIndex(_index: number): EditorInput { throw new Error('not implemented'); }\n\tgetIndexOfEditor(_editor: EditorInput): number { return -1; }\n\tisFirst(editor: EditorInput): boolean { return false; }\n\tisLast(editor: EditorInput): boolean { return false; }\n\topenEditor(_editor: EditorInput, _options?: IEditorOptions): Promise<IEditorPane> { throw new Error('not implemented'); }\n\topenEditors(_editors: EditorInputWithOptions[]): Promise<IEditorPane> { throw new Error('not implemented'); }\n\tisPinned(_editor: EditorInput): boolean { return false; }\n\tisSticky(_editor: EditorInput): boolean { return false; }\n\tisActive(_editor: EditorInput | IUntypedEditorInput): boolean { return false; }\n\tcontains(candidate: EditorInput | IUntypedEditorInput): boolean { return false; }\n\tmoveEditor(_editor: EditorInput, _target: IEditorGroup, _options?: IEditorOptions): void { }\n\tmoveEditors(_editors: EditorInputWithOptions[], _target: IEditorGroup): void { }\n\tcopyEditor(_editor: EditorInput, _target: IEditorGroup, _options?: IEditorOptions): void { }\n\tcopyEditors(_editors: EditorInputWithOptions[], _target: IEditorGroup): void { }\n\tasync closeEditor(_editor?: EditorInput, options?: ICloseEditorOptions): Promise<boolean> { return true; }\n\tasync closeEditors(_editors: EditorInput[] | ICloseEditorsFilter, options?: ICloseEditorOptions): Promise<boolean> { return true; }\n\tasync closeAllEditors(options?: ICloseAllEditorsOptions): Promise<boolean> { return true; }\n\tasync replaceEditors(_editors: IEditorReplacement[]): Promise<void> { }\n\tpinEditor(_editor?: EditorInput): void { }\n\tstickEditor(editor?: EditorInput | undefined): void { }\n\tunstickEditor(editor?: EditorInput | undefined): void { }\n\tlock(locked: boolean): void { }\n\tfocus(): void { }\n\tget scopedContextKeyService(): IContextKeyService { throw new Error('not implemented'); }\n\tsetActive(_isActive: boolean): void { }\n\tnotifyIndexChanged(_index: number): void { }\n\tdispose(): void { }\n\ttoJSON(): object { return Object.create(null); }\n\tlayout(_width: number, _height: number): void { }\n\trelayout() { }\n}\n\nexport class TestEditorGroupAccessor implements IEditorGroupsAccessor {\n\n\tgroups: IEditorGroupView[] = [];\n\tactiveGroup!: IEditorGroupView;\n\n\tpartOptions: IEditorPartOptions = {};\n\n\tonDidChangeEditorPartOptions = Event.None;\n\tonDidVisibilityChange = Event.None;\n\n\tgetGroup(identifier: number): IEditorGroupView | undefined { throw new Error('Method not implemented.'); }\n\tgetGroups(order: GroupsOrder): IEditorGroupView[] { throw new Error('Method not implemented.'); }\n\tactivateGroup(identifier: number | IEditorGroupView): IEditorGroupView { throw new Error('Method not implemented.'); }\n\trestoreGroup(identifier: number | IEditorGroupView): IEditorGroupView { throw new Error('Method not implemented.'); }\n\taddGroup(location: number | IEditorGroupView, direction: GroupDirection): IEditorGroupView { throw new Error('Method not implemented.'); }\n\tmergeGroup(group: number | IEditorGroupView, target: number | IEditorGroupView, options?: IMergeGroupOptions | undefined): IEditorGroupView { throw new Error('Method not implemented.'); }\n\tmoveGroup(group: number | IEditorGroupView, location: number | IEditorGroupView, direction: GroupDirection): IEditorGroupView { throw new Error('Method not implemented.'); }\n\tcopyGroup(group: number | IEditorGroupView, location: number | IEditorGroupView, direction: GroupDirection): IEditorGroupView { throw new Error('Method not implemented.'); }\n\tremoveGroup(group: number | IEditorGroupView): void { throw new Error('Method not implemented.'); }\n\tarrangeGroups(arrangement: GroupsArrangement, target?: number | IEditorGroupView | undefined): void { throw new Error('Method not implemented.'); }\n}\n\nexport class TestEditorService implements EditorServiceImpl {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tonDidActiveEditorChange: Event<void> = Event.None;\n\tonDidVisibleEditorsChange: Event<void> = Event.None;\n\tonDidEditorsChange: Event<IEditorsChangeEvent> = Event.None;\n\tonDidCloseEditor: Event<IEditorCloseEvent> = Event.None;\n\tonDidOpenEditorFail: Event<IEditorIdentifier> = Event.None;\n\tonDidMostRecentlyActiveEditorsChange: Event<void> = Event.None;\n\n\tprivate _activeTextEditorControl: ICodeEditor | IDiffEditor | undefined;\n\tpublic get activeTextEditorControl(): ICodeEditor | IDiffEditor | undefined { return this._activeTextEditorControl; }\n\tpublic set activeTextEditorControl(value: ICodeEditor | IDiffEditor | undefined) { this._activeTextEditorControl = value; }\n\n\tactiveEditorPane: IVisibleEditorPane | undefined;\n\tactiveTextEditorLanguageId: string | undefined;\n\n\tprivate _activeEditor: EditorInput | undefined;\n\tpublic get activeEditor(): EditorInput | undefined { return this._activeEditor; }\n\tpublic set activeEditor(value: EditorInput | undefined) { this._activeEditor = value; }\n\n\teditors: readonly EditorInput[] = [];\n\tmostRecentlyActiveEditors: readonly IEditorIdentifier[] = [];\n\tvisibleEditorPanes: readonly IVisibleEditorPane[] = [];\n\tvisibleTextEditorControls = [];\n\tvisibleEditors: readonly EditorInput[] = [];\n\tcount = this.editors.length;\n\n\tconstructor(private editorGroupService?: IEditorGroupsService) { }\n\tgetEditors() { return []; }\n\tfindEditors() { return [] as any; }\n\topenEditor(editor: EditorInput, options?: IEditorOptions, group?: PreferredGroup): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IResourceEditorInput | IUntitledTextResourceEditorInput, group?: PreferredGroup): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IResourceDiffEditorInput, group?: PreferredGroup): Promise<ITextDiffEditorPane | undefined>;\n\tasync openEditor(editor: EditorInput | IUntypedEditorInput, optionsOrGroup?: IEditorOptions | PreferredGroup, group?: PreferredGroup): Promise<IEditorPane | undefined> {\n\t\treturn undefined;\n\t}\n\tasync closeEditor(editor: IEditorIdentifier, options?: ICloseEditorOptions): Promise<void> { }\n\tasync closeEditors(editors: IEditorIdentifier[], options?: ICloseEditorOptions): Promise<void> { }\n\tdoResolveEditorOpenRequest(editor: EditorInput | IUntypedEditorInput): [IEditorGroup, EditorInput, IEditorOptions | undefined] | undefined {\n\t\tif (!this.editorGroupService) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn [this.editorGroupService.activeGroup, editor as EditorInput, undefined];\n\t}\n\topenEditors(_editors: any, _group?: any): Promise<IEditorPane[]> { throw new Error('not implemented'); }\n\tisOpened(_editor: IResourceEditorInputIdentifier): boolean { return false; }\n\tisVisible(_editor: EditorInput): boolean { return false; }\n\treplaceEditors(_editors: any, _group: any) { return Promise.resolve(undefined); }\n\tsave(editors: IEditorIdentifier[], options?: ISaveEditorsOptions): Promise<ISaveEditorsResult> { throw new Error('Method not implemented.'); }\n\tsaveAll(options?: ISaveEditorsOptions): Promise<ISaveEditorsResult> { throw new Error('Method not implemented.'); }\n\trevert(editors: IEditorIdentifier[], options?: IRevertOptions): Promise<boolean> { throw new Error('Method not implemented.'); }\n\trevertAll(options?: IRevertAllEditorsOptions): Promise<boolean> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestFileService implements IFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidFilesChange = new Emitter<FileChangesEvent>();\n\tget onDidFilesChange(): Event<FileChangesEvent> { return this._onDidFilesChange.event; }\n\tfireFileChanges(event: FileChangesEvent): void { this._onDidFilesChange.fire(event); }\n\n\tprivate readonly _onDidRunOperation = new Emitter<FileOperationEvent>();\n\tget onDidRunOperation(): Event<FileOperationEvent> { return this._onDidRunOperation.event; }\n\tfireAfterOperation(event: FileOperationEvent): void { this._onDidRunOperation.fire(event); }\n\n\tprivate readonly _onDidChangeFileSystemProviderCapabilities = new Emitter<IFileSystemProviderCapabilitiesChangeEvent>();\n\tget onDidChangeFileSystemProviderCapabilities(): Event<IFileSystemProviderCapabilitiesChangeEvent> { return this._onDidChangeFileSystemProviderCapabilities.event; }\n\tfireFileSystemProviderCapabilitiesChangeEvent(event: IFileSystemProviderCapabilitiesChangeEvent): void { this._onDidChangeFileSystemProviderCapabilities.fire(event); }\n\n\treadonly onWillActivateFileSystemProvider = Event.None;\n\treadonly onDidWatchError = Event.None;\n\n\tprivate content = 'Hello Html';\n\tprivate lastReadFileUri!: URI;\n\n\treadonly = false;\n\n\tsetContent(content: string): void { this.content = content; }\n\tgetContent(): string { return this.content; }\n\tgetLastReadFileUri(): URI { return this.lastReadFileUri; }\n\n\tresolve(resource: URI, _options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, _options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, _options?: IResolveFileOptions): Promise<IFileStat> {\n\t\treturn createFileStat(resource, this.readonly);\n\t}\n\n\tstat(resource: URI): Promise<IFileStatWithPartialMetadata> {\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions }[]): Promise<IFileStatResult[]> {\n\t\tconst stats = await Promise.all(toResolve.map(resourceAndOption => this.resolve(resourceAndOption.resource, resourceAndOption.options)));\n\n\t\treturn stats.map(stat => ({ stat, success: true }));\n\t}\n\n\treadonly notExistsSet = new ResourceMap<boolean>();\n\n\tasync exists(_resource: URI): Promise<boolean> { return !this.notExistsSet.has(_resource); }\n\n\treadShouldThrowError: Error | undefined = undefined;\n\n\tasync readFile(resource: URI, options?: IReadFileOptions | undefined): Promise<IFileContent> {\n\t\tif (this.readShouldThrowError) {\n\t\t\tthrow this.readShouldThrowError;\n\t\t}\n\n\t\tthis.lastReadFileUri = resource;\n\n\t\treturn {\n\t\t\t...createFileStat(resource, this.readonly),\n\t\t\tvalue: VSBuffer.fromString(this.content)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileStreamOptions | undefined): Promise<IFileStreamContent> {\n\t\tif (this.readShouldThrowError) {\n\t\t\tthrow this.readShouldThrowError;\n\t\t}\n\n\t\tthis.lastReadFileUri = resource;\n\n\t\treturn {\n\t\t\t...createFileStat(resource, this.readonly),\n\t\t\tvalue: bufferToStream(VSBuffer.fromString(this.content))\n\t\t};\n\t}\n\n\twriteShouldThrowError: Error | undefined = undefined;\n\n\tasync writeFile(resource: URI, bufferOrReadable: VSBuffer | VSBufferReadable, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tawait timeout(0);\n\n\t\tif (this.writeShouldThrowError) {\n\t\t\tthrow this.writeShouldThrowError;\n\t\t}\n\n\t\treturn createFileStat(resource, this.readonly);\n\t}\n\n\tmove(_source: URI, _target: URI, _overwrite?: boolean): Promise<IFileStatWithMetadata> { return Promise.resolve(null!); }\n\tcopy(_source: URI, _target: URI, _overwrite?: boolean): Promise<IFileStatWithMetadata> { return Promise.resolve(null!); }\n\tasync cloneFile(_source: URI, _target: URI): Promise<void> { }\n\tcreateFile(_resource: URI, _content?: VSBuffer | VSBufferReadable, _options?: ICreateFileOptions): Promise<IFileStatWithMetadata> { return Promise.resolve(null!); }\n\tcreateFolder(_resource: URI): Promise<IFileStatWithMetadata> { return Promise.resolve(null!); }\n\n\tonDidChangeFileSystemProviderRegistrations = Event.None;\n\n\tprivate providers = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider) {\n\t\tthis.providers.set(scheme, provider);\n\n\t\treturn toDisposable(() => this.providers.delete(scheme));\n\t}\n\n\tgetProvider(scheme: string) {\n\t\treturn this.providers.get(scheme);\n\t}\n\n\tasync activateProvider(_scheme: string): Promise<void> { return; }\n\tasync canHandleResource(resource: URI): Promise<boolean> { return this.hasProvider(resource); }\n\thasProvider(resource: URI): boolean { return resource.scheme === Schemas.file || this.providers.has(resource.scheme); }\n\tlistCapabilities() {\n\t\treturn [\n\t\t\t{ scheme: Schemas.file, capabilities: FileSystemProviderCapabilities.FileOpenReadWriteClose },\n\t\t\t...Iterable.map(this.providers, ([scheme, p]) => { return { scheme, capabilities: p.capabilities }; })\n\t\t];\n\t}\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tif (capability === FileSystemProviderCapabilities.PathCaseSensitive && isLinux) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst provider = this.getProvider(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tasync del(_resource: URI, _options?: { useTrash?: boolean; recursive?: boolean }): Promise<void> { }\n\n\treadonly watches: URI[] = [];\n\twatch(_resource: URI): IDisposable {\n\t\tthis.watches.push(_resource);\n\n\t\treturn toDisposable(() => this.watches.splice(this.watches.indexOf(_resource), 1));\n\t}\n\n\tgetWriteEncoding(_resource: URI): IResourceEncoding { return { encoding: 'utf8', hasBOM: false }; }\n\tdispose(): void { }\n\n\tasync canCreateFile(source: URI, options?: ICreateFileOptions): Promise<Error | true> { return true; }\n\tasync canMove(source: URI, target: URI, overwrite?: boolean | undefined): Promise<Error | true> { return true; }\n\tasync canCopy(source: URI, target: URI, overwrite?: boolean | undefined): Promise<Error | true> { return true; }\n\tasync canDelete(resource: URI, options?: { useTrash?: boolean | undefined; recursive?: boolean | undefined } | undefined): Promise<Error | true> { return true; }\n}\n\nexport class TestWorkingCopyBackupService extends InMemoryWorkingCopyBackupService {\n\n\treadonly resolved: Set<IWorkingCopyIdentifier> = new Set();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tparseBackupContent(textBufferFactory: ITextBufferFactory): string {\n\t\tconst textBuffer = textBufferFactory.create(DefaultEndOfLine.LF).textBuffer;\n\t\tconst lineCount = textBuffer.getLineCount();\n\t\tconst range = new Range(1, 1, lineCount, textBuffer.getLineLength(lineCount) + 1);\n\n\t\treturn textBuffer.getValueInRange(range, EndOfLinePreference.TextDefined);\n\t}\n\n\toverride async resolve<T extends IWorkingCopyBackupMeta>(identifier: IWorkingCopyIdentifier): Promise<IResolvedWorkingCopyBackup<T> | undefined> {\n\t\tthis.resolved.add(identifier);\n\n\t\treturn super.resolve(identifier);\n\t}\n}\n\nexport function toUntypedWorkingCopyId(resource: URI): IWorkingCopyIdentifier {\n\treturn toTypedWorkingCopyId(resource, '');\n}\n\nexport function toTypedWorkingCopyId(resource: URI, typeId = 'testBackupTypeId'): IWorkingCopyIdentifier {\n\treturn { typeId, resource };\n}\n\nexport class InMemoryTestWorkingCopyBackupService extends BrowserWorkingCopyBackupService {\n\n\tprivate backupResourceJoiners: Function[];\n\tprivate discardBackupJoiners: Function[];\n\n\tdiscardedBackups: IWorkingCopyIdentifier[];\n\n\tconstructor() {\n\t\tconst disposables = new DisposableStore();\n\t\tconst environmentService = TestEnvironmentService;\n\t\tconst logService = new NullLogService();\n\t\tconst fileService = disposables.add(new FileService(logService));\n\t\tdisposables.add(fileService.registerProvider(Schemas.file, disposables.add(new InMemoryFileSystemProvider())));\n\t\tdisposables.add(fileService.registerProvider(Schemas.vscodeUserData, disposables.add(new InMemoryFileSystemProvider())));\n\n\t\tsuper(new TestContextService(TestWorkspace), environmentService, fileService, logService);\n\n\t\tthis.backupResourceJoiners = [];\n\t\tthis.discardBackupJoiners = [];\n\t\tthis.discardedBackups = [];\n\n\t\tthis._register(disposables);\n\t}\n\n\ttestGetFileService(): IFileService {\n\t\treturn this.fileService;\n\t}\n\n\tjoinBackupResource(): Promise<void> {\n\t\treturn new Promise(resolve => this.backupResourceJoiners.push(resolve));\n\t}\n\n\tjoinDiscardBackup(): Promise<void> {\n\t\treturn new Promise(resolve => this.discardBackupJoiners.push(resolve));\n\t}\n\n\toverride async backup(identifier: IWorkingCopyIdentifier, content?: VSBufferReadableStream | VSBufferReadable, versionId?: number, meta?: any, token?: CancellationToken): Promise<void> {\n\t\tawait super.backup(identifier, content, versionId, meta, token);\n\n\t\twhile (this.backupResourceJoiners.length) {\n\t\t\tthis.backupResourceJoiners.pop()!();\n\t\t}\n\t}\n\n\toverride async discardBackup(identifier: IWorkingCopyIdentifier): Promise<void> {\n\t\tawait super.discardBackup(identifier);\n\t\tthis.discardedBackups.push(identifier);\n\n\t\twhile (this.discardBackupJoiners.length) {\n\t\t\tthis.discardBackupJoiners.pop()!();\n\t\t}\n\t}\n\n\tasync getBackupContents(identifier: IWorkingCopyIdentifier): Promise<string> {\n\t\tconst backupResource = this.toBackupResource(identifier);\n\n\t\tconst fileContents = await this.fileService.readFile(backupResource);\n\n\t\treturn fileContents.value.toString();\n\t}\n}\n\nexport class TestLifecycleService extends Disposable implements ILifecycleService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tphase!: LifecyclePhase;\n\tstartupKind!: StartupKind;\n\n\tprivate readonly _onBeforeShutdown = this._register(new Emitter<InternalBeforeShutdownEvent>());\n\tget onBeforeShutdown(): Event<InternalBeforeShutdownEvent> { return this._onBeforeShutdown.event; }\n\n\tprivate readonly _onBeforeShutdownError = this._register(new Emitter<BeforeShutdownErrorEvent>());\n\tget onBeforeShutdownError(): Event<BeforeShutdownErrorEvent> { return this._onBeforeShutdownError.event; }\n\n\tprivate readonly _onShutdownVeto = this._register(new Emitter<void>());\n\tget onShutdownVeto(): Event<void> { return this._onShutdownVeto.event; }\n\n\tprivate readonly _onWillShutdown = this._register(new Emitter<WillShutdownEvent>());\n\tget onWillShutdown(): Event<WillShutdownEvent> { return this._onWillShutdown.event; }\n\n\tprivate readonly _onDidShutdown = this._register(new Emitter<void>());\n\tget onDidShutdown(): Event<void> { return this._onDidShutdown.event; }\n\n\tasync when(): Promise<void> { }\n\n\tshutdownJoiners: Promise<void>[] = [];\n\n\tfireShutdown(reason = ShutdownReason.QUIT): void {\n\t\tthis.shutdownJoiners = [];\n\n\t\tthis._onWillShutdown.fire({\n\t\t\tjoin: p => {\n\t\t\t\tthis.shutdownJoiners.push(p);\n\t\t\t},\n\t\t\tjoiners: () => [],\n\t\t\tforce: () => { /* No-Op in tests */ },\n\t\t\ttoken: CancellationToken.None,\n\t\t\treason\n\t\t});\n\t}\n\n\tfireBeforeShutdown(event: InternalBeforeShutdownEvent): void { this._onBeforeShutdown.fire(event); }\n\n\tfireWillShutdown(event: WillShutdownEvent): void { this._onWillShutdown.fire(event); }\n\n\tasync shutdown(): Promise<void> {\n\t\tthis.fireShutdown();\n\t}\n}\n\nexport class TestBeforeShutdownEvent implements InternalBeforeShutdownEvent {\n\n\tvalue: boolean | Promise<boolean> | undefined;\n\tfinalValue: (() => boolean | Promise<boolean>) | undefined;\n\treason = ShutdownReason.CLOSE;\n\n\tveto(value: boolean | Promise<boolean>): void {\n\t\tthis.value = value;\n\t}\n\n\tfinalVeto(vetoFn: () => boolean | Promise<boolean>): void {\n\t\tthis.value = vetoFn();\n\t\tthis.finalValue = vetoFn;\n\t}\n}\n\nexport class TestWillShutdownEvent implements WillShutdownEvent {\n\n\tvalue: Promise<void>[] = [];\n\tjoiners = () => [];\n\treason = ShutdownReason.CLOSE;\n\ttoken = CancellationToken.None;\n\n\tjoin(promise: Promise<void>, joiner: IWillShutdownEventJoiner): void {\n\t\tthis.value.push(promise);\n\t}\n\n\tforce() { /* No-Op in tests */ }\n}\n\nexport class TestTextResourceConfigurationService implements ITextResourceConfigurationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private configurationService = new TestConfigurationService()) { }\n\n\tonDidChangeConfiguration() {\n\t\treturn { dispose() { } };\n\t}\n\n\tgetValue<T>(resource: URI, arg2?: any, arg3?: any): T {\n\t\tconst position: IPosition | null = EditorPosition.isIPosition(arg2) ? arg2 : null;\n\t\tconst section: string | undefined = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n\t\treturn this.configurationService.getValue(section, { resource });\n\t}\n\n\tinspect<T>(resource: URI | undefined, position: IPosition | null, section: string): IConfigurationValue<Readonly<T>> {\n\t\treturn this.configurationService.inspect<T>(section, { resource });\n\t}\n\n\tupdateValue(resource: URI, key: string, value: any, configurationTarget?: ConfigurationTarget): Promise<void> {\n\t\treturn this.configurationService.updateValue(key, value);\n\t}\n}\n\nexport class RemoteFileSystemProvider implements IFileSystemProvider {\n\n\tconstructor(private readonly wrappedFsp: IFileSystemProvider, private readonly remoteAuthority: string) { }\n\n\treadonly capabilities: FileSystemProviderCapabilities = this.wrappedFsp.capabilities;\n\treadonly onDidChangeCapabilities: Event<void> = this.wrappedFsp.onDidChangeCapabilities;\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]> = Event.map(this.wrappedFsp.onDidChangeFile, changes => changes.map((c): IFileChange => {\n\t\treturn {\n\t\t\ttype: c.type,\n\t\t\tresource: c.resource.with({ scheme: Schemas.vscodeRemote, authority: this.remoteAuthority }),\n\t\t};\n\t}));\n\twatch(resource: URI, opts: IWatchOptions): IDisposable { return this.wrappedFsp.watch(this.toFileResource(resource), opts); }\n\n\tstat(resource: URI): Promise<IStat> { return this.wrappedFsp.stat(this.toFileResource(resource)); }\n\tmkdir(resource: URI): Promise<void> { return this.wrappedFsp.mkdir(this.toFileResource(resource)); }\n\treaddir(resource: URI): Promise<[string, FileType][]> { return this.wrappedFsp.readdir(this.toFileResource(resource)); }\n\tdelete(resource: URI, opts: IFileDeleteOptions): Promise<void> { return this.wrappedFsp.delete(this.toFileResource(resource), opts); }\n\n\trename(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void> { return this.wrappedFsp.rename(this.toFileResource(from), this.toFileResource(to), opts); }\n\tcopy(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void> { return this.wrappedFsp.copy!(this.toFileResource(from), this.toFileResource(to), opts); }\n\n\treadFile(resource: URI): Promise<Uint8Array> { return this.wrappedFsp.readFile!(this.toFileResource(resource)); }\n\twriteFile(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void> { return this.wrappedFsp.writeFile!(this.toFileResource(resource), content, opts); }\n\n\topen(resource: URI, opts: IFileOpenOptions): Promise<number> { return this.wrappedFsp.open!(this.toFileResource(resource), opts); }\n\tclose(fd: number): Promise<void> { return this.wrappedFsp.close!(fd); }\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> { return this.wrappedFsp.read!(fd, pos, data, offset, length); }\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> { return this.wrappedFsp.write!(fd, pos, data, offset, length); }\n\n\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> { return this.wrappedFsp.readFileStream!(this.toFileResource(resource), opts, token); }\n\n\tprivate toFileResource(resource: URI): URI { return resource.with({ scheme: Schemas.file, authority: '' }); }\n}\n\nexport class TestInMemoryFileSystemProvider extends InMemoryFileSystemProvider implements IFileSystemProviderWithFileReadStreamCapability {\n\toverride get capabilities(): FileSystemProviderCapabilities {\n\t\treturn FileSystemProviderCapabilities.FileReadWrite\n\t\t\t| FileSystemProviderCapabilities.PathCaseSensitive\n\t\t\t| FileSystemProviderCapabilities.FileReadStream;\n\t}\n\n\treadFileStream(resource: URI): ReadableStreamEvents<Uint8Array> {\n\t\tconst BUFFER_SIZE = 64 * 1024;\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst data = await this.readFile(resource);\n\n\t\t\t\tlet offset = 0;\n\t\t\t\twhile (offset < data.length) {\n\t\t\t\t\tawait timeout(0);\n\t\t\t\t\tawait stream.write(data.subarray(offset, offset + BUFFER_SIZE));\n\t\t\t\t\toffset += BUFFER_SIZE;\n\t\t\t\t}\n\n\t\t\t\tawait timeout(0);\n\t\t\t\tstream.end();\n\t\t\t} catch (error) {\n\t\t\t\tstream.end(error);\n\t\t\t}\n\t\t})();\n\n\t\treturn stream;\n\t}\n}\n\nexport const productService: IProductService = { _serviceBrand: undefined, ...product };\n\nexport class TestHostService implements IHostService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _hasFocus = true;\n\tget hasFocus() { return this._hasFocus; }\n\tasync hadLastFocus(): Promise<boolean> { return this._hasFocus; }\n\n\tprivate _onDidChangeFocus = new Emitter<boolean>();\n\treadonly onDidChangeFocus = this._onDidChangeFocus.event;\n\n\tsetFocus(focus: boolean) {\n\t\tthis._hasFocus = focus;\n\t\tthis._onDidChangeFocus.fire(this._hasFocus);\n\t}\n\n\tasync restart(): Promise<void> { }\n\tasync reload(): Promise<void> { }\n\tasync close(): Promise<void> { }\n\tasync withExpectedShutdown<T>(expectedShutdownTask: () => Promise<T>): Promise<T> {\n\t\treturn await expectedShutdownTask();\n\t}\n\n\tasync focus(options?: { force: boolean }): Promise<void> { }\n\n\tasync openWindow(arg1?: IOpenEmptyWindowOptions | IWindowOpenable[], arg2?: IOpenWindowOptions): Promise<void> { }\n\n\tasync toggleFullScreen(): Promise<void> { }\n\n\treadonly colorScheme = ColorScheme.DARK;\n\tonDidChangeColorScheme = Event.None;\n}\n\nexport class TestFilesConfigurationService extends FilesConfigurationService {\n\n\ttestOnFilesConfigurationChange(configuration: any): void {\n\t\tsuper.onFilesConfigurationChange(configuration);\n\t}\n}\n\nexport class TestReadonlyTextFileEditorModel extends TextFileEditorModel {\n\n\toverride isReadonly(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport class TestEditorInput extends EditorInput {\n\n\tconstructor(public resource: URI, private readonly _typeId: string) {\n\t\tsuper();\n\t}\n\n\toverride get typeId(): string {\n\t\treturn this._typeId;\n\t}\n\n\toverride get editorId(): string {\n\t\treturn this._typeId;\n\t}\n\n\toverride resolve(): Promise<IEditorModel | null> {\n\t\treturn Promise.resolve(null);\n\t}\n}\n\nexport function registerTestEditor(id: string, inputs: SyncDescriptor<EditorInput>[], serializerInputId?: string): IDisposable {\n\tconst disposables = new DisposableStore();\n\n\tclass TestEditor extends EditorPane {\n\n\t\tprivate _scopedContextKeyService: IContextKeyService;\n\n\t\tconstructor() {\n\t\t\tsuper(id, NullTelemetryService, new TestThemeService(), disposables.add(new TestStorageService()));\n\t\t\tthis._scopedContextKeyService = new MockContextKeyService();\n\t\t}\n\n\t\toverride async setInput(input: EditorInput, options: IEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\t\tsuper.setInput(input, options, context, token);\n\n\t\t\tawait input.resolve();\n\t\t}\n\n\t\toverride getId(): string { return id; }\n\t\tlayout(): void { }\n\t\tprotected createEditor(): void { }\n\n\t\toverride get scopedContextKeyService() {\n\t\t\treturn this._scopedContextKeyService;\n\t\t}\n\t}\n\n\tdisposables.add(Registry.as<IEditorPaneRegistry>(Extensions.EditorPane).registerEditorPane(EditorPaneDescriptor.create(TestEditor, id, 'Test Editor Control'), inputs));\n\n\tif (serializerInputId) {\n\n\t\tinterface ISerializedTestInput {\n\t\t\tresource: string;\n\t\t}\n\n\t\tclass EditorsObserverTestEditorInputSerializer implements IEditorSerializer {\n\n\t\t\tcanSerialize(editorInput: EditorInput): boolean {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tserialize(editorInput: EditorInput): string {\n\t\t\t\tconst testEditorInput = <TestFileEditorInput>editorInput;\n\t\t\t\tconst testInput: ISerializedTestInput = {\n\t\t\t\t\tresource: testEditorInput.resource.toString()\n\t\t\t\t};\n\n\t\t\t\treturn JSON.stringify(testInput);\n\t\t\t}\n\n\t\t\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): EditorInput {\n\t\t\t\tconst testInput: ISerializedTestInput = JSON.parse(serializedEditorInput);\n\n\t\t\t\treturn new TestFileEditorInput(URI.parse(testInput.resource), serializerInputId!);\n\t\t\t}\n\t\t}\n\n\t\tdisposables.add(Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer(serializerInputId, EditorsObserverTestEditorInputSerializer));\n\t}\n\n\treturn disposables;\n}\n\nexport function registerTestFileEditor(): IDisposable {\n\tconst disposables = new DisposableStore();\n\n\tdisposables.add(Registry.as<IEditorPaneRegistry>(Extensions.EditorPane).registerEditorPane(\n\t\tEditorPaneDescriptor.create(\n\t\t\tTestTextFileEditor,\n\t\t\tTestTextFileEditor.ID,\n\t\t\t'Text File Editor'\n\t\t),\n\t\t[new SyncDescriptor(FileEditorInput)]\n\t));\n\n\treturn disposables;\n}\n\nexport function registerTestResourceEditor(): IDisposable {\n\tconst disposables = new DisposableStore();\n\n\tdisposables.add(Registry.as<IEditorPaneRegistry>(Extensions.EditorPane).registerEditorPane(\n\t\tEditorPaneDescriptor.create(\n\t\t\tTestTextResourceEditor,\n\t\t\tTestTextResourceEditor.ID,\n\t\t\t'Text Editor'\n\t\t),\n\t\t[\n\t\t\tnew SyncDescriptor(UntitledTextEditorInput),\n\t\t\tnew SyncDescriptor(TextResourceEditorInput)\n\t\t]\n\t));\n\n\treturn disposables;\n}\n\nexport function registerTestSideBySideEditor(): IDisposable {\n\tconst disposables = new DisposableStore();\n\n\tdisposables.add(Registry.as<IEditorPaneRegistry>(Extensions.EditorPane).registerEditorPane(\n\t\tEditorPaneDescriptor.create(\n\t\t\tSideBySideEditor,\n\t\t\tSideBySideEditor.ID,\n\t\t\t'Text Editor'\n\t\t),\n\t\t[\n\t\t\tnew SyncDescriptor(SideBySideEditorInput)\n\t\t]\n\t));\n\n\treturn disposables;\n}\n\nexport class TestFileEditorInput extends EditorInput implements IFileEditorInput {\n\n\treadonly preferredResource = this.resource;\n\n\tgotDisposed = false;\n\tgotSaved = false;\n\tgotSavedAs = false;\n\tgotReverted = false;\n\tdirty = false;\n\tmodified: boolean | undefined;\n\tprivate fails = false;\n\n\tdisableToUntyped = false;\n\n\tconstructor(\n\t\tpublic resource: URI,\n\t\tprivate _typeId: string\n\t) {\n\t\tsuper();\n\t}\n\n\toverride get typeId() { return this._typeId; }\n\toverride get editorId() { return this._typeId; }\n\n\tprivate _capabilities: EditorInputCapabilities = EditorInputCapabilities.None;\n\toverride get capabilities(): EditorInputCapabilities { return this._capabilities; }\n\toverride set capabilities(capabilities: EditorInputCapabilities) {\n\t\tif (this._capabilities !== capabilities) {\n\t\t\tthis._capabilities = capabilities;\n\t\t\tthis._onDidChangeCapabilities.fire();\n\t\t}\n\t}\n\n\toverride resolve(): Promise<IEditorModel | null> { return !this.fails ? Promise.resolve(null) : Promise.reject(new Error('fails')); }\n\toverride matches(other: EditorInput | IResourceEditorInput | ITextResourceEditorInput | IUntitledTextResourceEditorInput): boolean {\n\t\tif (super.matches(other)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (other instanceof EditorInput) {\n\t\t\treturn !!(other?.resource && this.resource.toString() === other.resource.toString() && other instanceof TestFileEditorInput && other.typeId === this.typeId);\n\t\t}\n\t\treturn isEqual(this.resource, other.resource) && (this.editorId === other.options?.override || other.options?.override === undefined);\n\t}\n\tsetPreferredResource(resource: URI): void { }\n\tasync setEncoding(encoding: string) { }\n\tgetEncoding() { return undefined; }\n\tsetPreferredName(name: string): void { }\n\tsetPreferredDescription(description: string): void { }\n\tsetPreferredEncoding(encoding: string) { }\n\tsetPreferredContents(contents: string): void { }\n\tsetLanguageId(languageId: string, source?: string) { }\n\tsetPreferredLanguageId(languageId: string) { }\n\tsetForceOpenAsBinary(): void { }\n\tsetFailToOpen(): void {\n\t\tthis.fails = true;\n\t}\n\toverride async save(groupId: GroupIdentifier, options?: ISaveOptions): Promise<EditorInput | undefined> {\n\t\tthis.gotSaved = true;\n\t\tthis.dirty = false;\n\t\treturn this;\n\t}\n\toverride async saveAs(groupId: GroupIdentifier, options?: ISaveOptions): Promise<EditorInput | undefined> {\n\t\tthis.gotSavedAs = true;\n\t\treturn this;\n\t}\n\toverride async revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\tthis.gotReverted = true;\n\t\tthis.gotSaved = false;\n\t\tthis.gotSavedAs = false;\n\t\tthis.dirty = false;\n\t}\n\toverride toUntyped(): IUntypedEditorInput | undefined {\n\t\tif (this.disableToUntyped) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn { resource: this.resource };\n\t}\n\tsetModified(): void { this.modified = true; }\n\toverride isModified(): boolean {\n\t\treturn this.modified === undefined ? this.dirty : this.modified;\n\t}\n\tsetDirty(): void { this.dirty = true; }\n\toverride isDirty(): boolean {\n\t\treturn this.dirty;\n\t}\n\tisResolved(): boolean { return false; }\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.gotDisposed = true;\n\t}\n\tmovedEditor: IMoveResult | undefined = undefined;\n\toverride async rename(): Promise<IMoveResult | undefined> { return this.movedEditor; }\n}\n\nexport class TestSingletonFileEditorInput extends TestFileEditorInput {\n\n\toverride get capabilities(): EditorInputCapabilities { return EditorInputCapabilities.Singleton; }\n}\n\nexport class TestEditorPart extends EditorPart {\n\n\ttestSaveState(): void {\n\t\treturn super.saveState();\n\t}\n\n\tclearState(): void {\n\t\tconst workspaceMemento = this.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tfor (const key of Object.keys(workspaceMemento)) {\n\t\t\tdelete workspaceMemento[key];\n\t\t}\n\n\t\tconst profileMemento = this.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tfor (const key of Object.keys(profileMemento)) {\n\t\t\tdelete profileMemento[key];\n\t\t}\n\t}\n}\n\nexport async function createEditorPart(instantiationService: IInstantiationService, disposables: DisposableStore): Promise<TestEditorPart> {\n\tconst part = disposables.add(instantiationService.createInstance(TestEditorPart));\n\tpart.create(document.createElement('div'));\n\tpart.layout(1080, 800, 0, 0);\n\n\tawait part.whenReady;\n\n\treturn part;\n}\n\nexport class TestListService implements IListService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tlastFocusedList: any | undefined = undefined;\n\n\tregister(): IDisposable {\n\t\treturn Disposable.None;\n\t}\n}\n\nexport class TestPathService implements IPathService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly fallbackUserHome: URI = URI.from({ scheme: Schemas.file, path: '/' }), public defaultUriScheme = Schemas.file) { }\n\n\thasValidBasename(resource: URI, basename?: string): Promise<boolean>;\n\thasValidBasename(resource: URI, os: OperatingSystem, basename?: string): boolean;\n\thasValidBasename(resource: URI, arg2?: string | OperatingSystem, name?: string): boolean | Promise<boolean> {\n\t\tif (typeof arg2 === 'string' || typeof arg2 === 'undefined') {\n\t\t\treturn isValidBasename(arg2 ?? basename(resource));\n\t\t}\n\n\t\treturn isValidBasename(name ?? basename(resource));\n\t}\n\n\tget path() { return Promise.resolve(isWindows ? win32 : posix); }\n\n\tuserHome(options?: { preferLocal: boolean }): Promise<URI>;\n\tuserHome(options: { preferLocal: true }): URI;\n\tuserHome(options?: { preferLocal: boolean }): Promise<URI> | URI {\n\t\treturn options?.preferLocal ? this.fallbackUserHome : Promise.resolve(this.fallbackUserHome);\n\t}\n\n\tget resolvedUserHome() { return this.fallbackUserHome; }\n\n\tasync fileURI(path: string): Promise<URI> {\n\t\treturn URI.file(path);\n\t}\n}\n\nexport interface ITestTextFileEditorModelManager extends ITextFileEditorModelManager, IDisposable {\n\tadd(resource: URI, model: TextFileEditorModel): void;\n\tremove(resource: URI): void;\n}\n\ninterface ITestTextFileEditorModel extends ITextFileEditorModel {\n\treadonly lastResolvedFileStat: IFileStatWithMetadata | undefined;\n}\n\nexport function getLastResolvedFileStat(model: unknown): IFileStatWithMetadata | undefined {\n\tconst candidate = model as ITestTextFileEditorModel | undefined;\n\n\treturn candidate?.lastResolvedFileStat;\n}\n\nexport class TestWorkspacesService implements IWorkspacesService {\n\t_serviceBrand: undefined;\n\n\tonDidChangeRecentlyOpened = Event.None;\n\n\tasync createUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier> { throw new Error('Method not implemented.'); }\n\tasync deleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void> { }\n\tasync addRecentlyOpened(recents: IRecent[]): Promise<void> { }\n\tasync removeRecentlyOpened(workspaces: URI[]): Promise<void> { }\n\tasync clearRecentlyOpened(): Promise<void> { }\n\tasync getRecentlyOpened(): Promise<IRecentlyOpened> { return { files: [], workspaces: [] }; }\n\tasync getDirtyWorkspaces(): Promise<(IFolderBackupInfo | IWorkspaceBackupInfo)[]> { return []; }\n\tasync enterWorkspace(path: URI): Promise<IEnterWorkspaceResult | undefined> { throw new Error('Method not implemented.'); }\n\tasync getWorkspaceIdentifier(workspacePath: URI): Promise<IWorkspaceIdentifier> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalInstanceService implements ITerminalInstanceService {\n\tonDidCreateInstance = Event.None;\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconvertProfileToShellLaunchConfig(shellLaunchConfigOrProfile?: IShellLaunchConfig | ITerminalProfile, cwd?: string | URI): IShellLaunchConfig { throw new Error('Method not implemented.'); }\n\tpreparePathForTerminalAsync(path: string, executable: string | undefined, title: string, shellType: TerminalShellType, remoteAuthority: string | undefined): Promise<string> { throw new Error('Method not implemented.'); }\n\tcreateInstance(options: ICreateTerminalOptions, target: TerminalLocation): ITerminalInstance { throw new Error('Method not implemented.'); }\n\tasync getBackend(remoteAuthority?: string): Promise<ITerminalBackend | undefined> { throw new Error('Method not implemented.'); }\n\tdidRegisterBackend(remoteAuthority?: string): void { throw new Error('Method not implemented.'); }\n\tgetRegisteredBackends(): IterableIterator<ITerminalBackend> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalEditorService implements ITerminalEditorService {\n\t_serviceBrand: undefined;\n\tactiveInstance: ITerminalInstance | undefined;\n\tinstances: readonly ITerminalInstance[] = [];\n\tonDidDisposeInstance = Event.None;\n\tonDidFocusInstance = Event.None;\n\tonDidChangeInstanceCapability = Event.None;\n\tonDidChangeActiveInstance = Event.None;\n\tonDidChangeInstances = Event.None;\n\topenEditor(instance: ITerminalInstance, editorOptions?: TerminalEditorLocation): Promise<void> { throw new Error('Method not implemented.'); }\n\tdetachInstance(instance: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tsplitInstance(instanceToSplit: ITerminalInstance, shellLaunchConfig?: IShellLaunchConfig): ITerminalInstance { throw new Error('Method not implemented.'); }\n\trevealActiveEditor(preserveFocus?: boolean): Promise<void> { throw new Error('Method not implemented.'); }\n\tresolveResource(instance: ITerminalInstance): URI { throw new Error('Method not implemented.'); }\n\treviveInput(deserializedInput: IDeserializedTerminalEditorInput): TerminalEditorInput { throw new Error('Method not implemented.'); }\n\tgetInputFromResource(resource: URI): TerminalEditorInput { throw new Error('Method not implemented.'); }\n\tsetActiveInstance(instance: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tfocusActiveInstance(): Promise<void> { throw new Error('Method not implemented.'); }\n\tgetInstanceFromResource(resource: URI | undefined): ITerminalInstance | undefined { throw new Error('Method not implemented.'); }\n\tfocusFindWidget(): void { throw new Error('Method not implemented.'); }\n\thideFindWidget(): void { throw new Error('Method not implemented.'); }\n\tfindNext(): void { throw new Error('Method not implemented.'); }\n\tfindPrevious(): void { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalGroupService implements ITerminalGroupService {\n\t_serviceBrand: undefined;\n\tactiveInstance: ITerminalInstance | undefined;\n\tinstances: readonly ITerminalInstance[] = [];\n\tgroups: readonly ITerminalGroup[] = [];\n\tactiveGroup: ITerminalGroup | undefined;\n\tactiveGroupIndex: number = 0;\n\tlastAccessedMenu: 'inline-tab' | 'tab-list' = 'inline-tab';\n\tonDidChangeActiveGroup = Event.None;\n\tonDidDisposeGroup = Event.None;\n\tonDidShow = Event.None;\n\tonDidChangeGroups = Event.None;\n\tonDidChangePanelOrientation = Event.None;\n\tonDidDisposeInstance = Event.None;\n\tonDidFocusInstance = Event.None;\n\tonDidChangeInstanceCapability = Event.None;\n\tonDidChangeActiveInstance = Event.None;\n\tonDidChangeInstances = Event.None;\n\tcreateGroup(instance?: any): ITerminalGroup { throw new Error('Method not implemented.'); }\n\tgetGroupForInstance(instance: ITerminalInstance): ITerminalGroup | undefined { throw new Error('Method not implemented.'); }\n\tmoveGroup(source: ITerminalInstance, target: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tmoveGroupToEnd(source: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tmoveInstance(source: ITerminalInstance, target: ITerminalInstance, side: 'before' | 'after'): void { throw new Error('Method not implemented.'); }\n\tunsplitInstance(instance: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tjoinInstances(instances: ITerminalInstance[]): void { throw new Error('Method not implemented.'); }\n\tinstanceIsSplit(instance: ITerminalInstance): boolean { throw new Error('Method not implemented.'); }\n\tgetGroupLabels(): string[] { throw new Error('Method not implemented.'); }\n\tsetActiveGroupByIndex(index: number): void { throw new Error('Method not implemented.'); }\n\tsetActiveGroupToNext(): void { throw new Error('Method not implemented.'); }\n\tsetActiveGroupToPrevious(): void { throw new Error('Method not implemented.'); }\n\tsetActiveInstanceByIndex(terminalIndex: number): void { throw new Error('Method not implemented.'); }\n\tsetContainer(container: HTMLElement): void { throw new Error('Method not implemented.'); }\n\tshowPanel(focus?: boolean): Promise<void> { throw new Error('Method not implemented.'); }\n\thidePanel(): void { throw new Error('Method not implemented.'); }\n\tfocusTabs(): void { throw new Error('Method not implemented.'); }\n\tfocusHover(): void { throw new Error('Method not implemented.'); }\n\tsetActiveInstance(instance: ITerminalInstance): void { throw new Error('Method not implemented.'); }\n\tfocusActiveInstance(): Promise<void> { throw new Error('Method not implemented.'); }\n\tgetInstanceFromResource(resource: URI | undefined): ITerminalInstance | undefined { throw new Error('Method not implemented.'); }\n\tfocusFindWidget(): void { throw new Error('Method not implemented.'); }\n\thideFindWidget(): void { throw new Error('Method not implemented.'); }\n\tfindNext(): void { throw new Error('Method not implemented.'); }\n\tfindPrevious(): void { throw new Error('Method not implemented.'); }\n\tupdateVisibility(): void { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalProfileService implements ITerminalProfileService {\n\t_serviceBrand: undefined;\n\tavailableProfiles: ITerminalProfile[] = [];\n\tcontributedProfiles: IExtensionTerminalProfile[] = [];\n\tprofilesReady: Promise<void> = Promise.resolve();\n\tonDidChangeAvailableProfiles = Event.None;\n\tgetPlatformKey(): Promise<string> { throw new Error('Method not implemented.'); }\n\trefreshAvailableProfiles(): void { throw new Error('Method not implemented.'); }\n\tgetDefaultProfileName(): string | undefined { throw new Error('Method not implemented.'); }\n\tgetDefaultProfile(): ITerminalProfile | undefined { throw new Error('Method not implemented.'); }\n\tgetContributedDefaultProfile(shellLaunchConfig: IShellLaunchConfig): Promise<IExtensionTerminalProfile | undefined> { throw new Error('Method not implemented.'); }\n\tregisterContributedProfile(args: IRegisterContributedProfileArgs): Promise<void> { throw new Error('Method not implemented.'); }\n\tgetContributedProfileProvider(extensionIdentifier: string, id: string): ITerminalProfileProvider | undefined { throw new Error('Method not implemented.'); }\n\tregisterTerminalProfileProvider(extensionIdentifier: string, id: string, profileProvider: ITerminalProfileProvider): IDisposable { throw new Error('Method not implemented.'); }\n}\n\nexport class TestTerminalProfileResolverService implements ITerminalProfileResolverService {\n\t_serviceBrand: undefined;\n\tdefaultProfileName = '';\n\tresolveIcon(shellLaunchConfig: IShellLaunchConfig): void { }\n\tasync resolveShellLaunchConfig(shellLaunchConfig: IShellLaunchConfig, options: IShellLaunchConfigResolveOptions): Promise<void> { }\n\tasync getDefaultProfile(options: IShellLaunchConfigResolveOptions): Promise<ITerminalProfile> { return { path: '/default', profileName: 'Default', isDefault: true }; }\n\tasync getDefaultShell(options: IShellLaunchConfigResolveOptions): Promise<string> { return '/default'; }\n\tasync getDefaultShellArgs(options: IShellLaunchConfigResolveOptions): Promise<string | string[]> { return []; }\n\tgetDefaultIcon(): TerminalIcon & ThemeIcon { return Codicon.terminal; }\n\tasync getEnvironment(): Promise<IProcessEnvironment> { return env; }\n\tgetSafeConfigValue(key: string, os: OperatingSystem): unknown | undefined { return undefined; }\n\tgetSafeConfigValueFullKey(key: string): unknown | undefined { return undefined; }\n\tcreateProfileFromShellAndShellArgs(shell?: unknown, shellArgs?: unknown): Promise<string | ITerminalProfile> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestQuickInputService implements IQuickInputService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly onShow = Event.None;\n\treadonly onHide = Event.None;\n\n\treadonly quickAccess = undefined!;\n\tbackButton!: IQuickInputButton;\n\n\tpick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: IPickOptions<T> & { canPickMany: true }, token?: CancellationToken): Promise<T[]>;\n\tpick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: IPickOptions<T> & { canPickMany: false }, token?: CancellationToken): Promise<T>;\n\tasync pick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: Omit<IPickOptions<T>, 'canPickMany'>, token?: CancellationToken): Promise<T | undefined> {\n\t\tif (Array.isArray(picks)) {\n\t\t\treturn <any>{ label: 'selectedPick', description: 'pick description', value: 'selectedPick' };\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tasync input(options?: IInputOptions, token?: CancellationToken): Promise<string> { return options ? 'resolved' + options.prompt : 'resolved'; }\n\n\tcreateQuickPick<T extends IQuickPickItem>(): IQuickPick<T> { throw new Error('not implemented.'); }\n\tcreateInputBox(): IInputBox { throw new Error('not implemented.'); }\n\tcreateQuickWidget(): IQuickWidget { throw new Error('Method not implemented.'); }\n\tfocus(): void { throw new Error('not implemented.'); }\n\ttoggle(): void { throw new Error('not implemented.'); }\n\tnavigate(next: boolean, quickNavigate?: IQuickNavigateConfiguration): void { throw new Error('not implemented.'); }\n\taccept(): Promise<void> { throw new Error('not implemented.'); }\n\tback(): Promise<void> { throw new Error('not implemented.'); }\n\tcancel(): Promise<void> { throw new Error('not implemented.'); }\n}\n\nclass TestLanguageDetectionService implements ILanguageDetectionService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tisEnabledForLanguage(languageId: string): boolean { return false; }\n\tasync detectLanguage(resource: URI, supportedLangs?: string[] | undefined): Promise<string | undefined> { return undefined; }\n}\n\nexport class TestRemoteAgentService implements IRemoteAgentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tgetConnection(): IRemoteAgentConnection | null { return null; }\n\tasync getEnvironment(): Promise<IRemoteAgentEnvironment | null> { return null; }\n\tasync getRawEnvironment(): Promise<IRemoteAgentEnvironment | null> { return null; }\n\tasync getExtensionHostExitInfo(reconnectionToken: string): Promise<IExtensionHostExitInfo | null> { return null; }\n\tasync getDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined> { return undefined; }\n\tasync updateTelemetryLevel(telemetryLevel: TelemetryLevel): Promise<void> { }\n\tasync logTelemetry(eventName: string, data?: ITelemetryData): Promise<void> { }\n\tasync flushTelemetry(): Promise<void> { }\n\tasync getRoundTripTime(): Promise<number | undefined> { return undefined; }\n}\n\nexport class TestRemoteExtensionsScannerService implements IRemoteExtensionsScannerService {\n\tdeclare readonly _serviceBrand: undefined;\n\tasync whenExtensionsReady(): Promise<void> { }\n\tscanExtensions(): Promise<IExtensionDescription[]> { throw new Error('Method not implemented.'); }\n\tscanSingleExtension(): Promise<IExtensionDescription | null> { throw new Error('Method not implemented.'); }\n}\n\nexport class TestWorkbenchExtensionEnablementService implements IWorkbenchExtensionEnablementService {\n\t_serviceBrand: undefined;\n\tonEnablementChanged = Event.None;\n\tgetEnablementState(extension: IExtension): EnablementState { return EnablementState.EnabledGlobally; }\n\tgetEnablementStates(extensions: IExtension[], workspaceTypeOverrides?: { trusted?: boolean | undefined } | undefined): EnablementState[] { return []; }\n\tgetDependenciesEnablementStates(extension: IExtension): [IExtension, EnablementState][] { return []; }\n\tcanChangeEnablement(extension: IExtension): boolean { return true; }\n\tcanChangeWorkspaceEnablement(extension: IExtension): boolean { return true; }\n\tisEnabled(extension: IExtension): boolean { return true; }\n\tisEnabledEnablementState(enablementState: EnablementState): boolean { return true; }\n\tisDisabledGlobally(extension: IExtension): boolean { return false; }\n\tasync setEnablement(extensions: IExtension[], state: EnablementState): Promise<boolean[]> { return []; }\n\tasync updateExtensionsEnablementsWhenWorkspaceTrustChanges(): Promise<void> { }\n}\n\nexport class TestWorkbenchExtensionManagementService implements IWorkbenchExtensionManagementService {\n\t_serviceBrand: undefined;\n\tonInstallExtension = Event.None;\n\tonDidInstallExtensions = Event.None;\n\tonUninstallExtension = Event.None;\n\tonDidUninstallExtension = Event.None;\n\tonDidUpdateExtensionMetadata = Event.None;\n\tonProfileAwareInstallExtension = Event.None;\n\tonProfileAwareDidInstallExtensions = Event.None;\n\tonProfileAwareUninstallExtension = Event.None;\n\tonProfileAwareDidUninstallExtension = Event.None;\n\tonDidChangeProfile = Event.None;\n\tinstallVSIX(location: URI, manifest: Readonly<IRelaxedExtensionManifest>, installOptions?: InstallVSIXOptions | undefined): Promise<ILocalExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tinstallFromLocation(location: URI): Promise<ILocalExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tinstallGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<InstallExtensionResult[]> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tasync updateFromGallery(gallery: IGalleryExtension, extension: ILocalExtension, installOptions?: InstallOptions | undefined): Promise<ILocalExtension> { return extension; }\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tgetManifest(vsix: URI): Promise<Readonly<IRelaxedExtensionManifest>> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tinstall(vsix: URI, options?: InstallVSIXOptions | undefined): Promise<ILocalExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> { return false; }\n\tinstallFromGallery(extension: IGalleryExtension, options?: InstallOptions | undefined): Promise<ILocalExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions | undefined): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tasync reinstallFromGallery(extension: ILocalExtension): Promise<ILocalExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tasync getInstalled(type?: ExtensionType | undefined): Promise<ILocalExtension[]> { return []; }\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tasync updateMetadata(local: ILocalExtension, metadata: Partial<Metadata>): Promise<ILocalExtension> { return local; }\n\tregisterParticipant(pariticipant: IExtensionManagementParticipant): void { }\n\tasync getTargetPlatform(): Promise<TargetPlatform> { return TargetPlatform.UNDEFINED; }\n\tasync cleanUp(): Promise<void> { }\n\tdownload(): Promise<URI> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tcopyExtensions(): Promise<void> { throw new Error('Not Supported'); }\n\ttoggleAppliationScope(): Promise<ILocalExtension> { throw new Error('Not Supported'); }\n\tinstallExtensionsFromProfile(): Promise<ILocalExtension[]> { throw new Error('Not Supported'); }\n\twhenProfileChanged(from: IUserDataProfile, to: IUserDataProfile): Promise<void> { throw new Error('Not Supported'); }\n}\n\nexport class TestUserDataProfileService implements IUserDataProfileService {\n\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeCurrentProfile = Event.None;\n\treadonly currentProfile = toUserDataProfile('test', 'test', URI.file('tests').with({ scheme: 'vscode-tests' }), URI.file('tests').with({ scheme: 'vscode-tests' }));\n\tasync updateCurrentProfile(): Promise<void> { }\n\tgetShortName(profile: IUserDataProfile): string { return profile.shortName ?? profile.name; }\n}\n\nexport class TestWebExtensionsScannerService implements IWebExtensionsScannerService {\n\t_serviceBrand: undefined;\n\tonDidChangeProfile = Event.None;\n\tasync scanSystemExtensions(): Promise<IExtension[]> { return []; }\n\tasync scanUserExtensions(): Promise<IScannedExtension[]> { return []; }\n\tasync scanExtensionsUnderDevelopment(): Promise<IExtension[]> { return []; }\n\tasync copyExtensions(): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tscanExistingExtension(extensionLocation: URI, extensionType: ExtensionType): Promise<IScannedExtension | null> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\taddExtension(location: URI, metadata?: Partial<IGalleryMetadata & { isApplicationScoped: boolean; isMachineScoped: boolean; isBuiltin: boolean; isSystem: boolean; updated: boolean; preRelease: boolean; installedTimestamp: number }> | undefined): Promise<IExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\taddExtensionFromGallery(galleryExtension: IGalleryExtension, metadata?: Partial<IGalleryMetadata & { isApplicationScoped: boolean; isMachineScoped: boolean; isBuiltin: boolean; isSystem: boolean; updated: boolean; preRelease: boolean; installedTimestamp: number }> | undefined): Promise<IExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tremoveExtension(): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tupdateMetadata(extension: IScannedExtension, metaData: Partial<Metadata>, profileLocation: URI): Promise<IScannedExtension> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tscanExtensionManifest(extensionLocation: URI): Promise<Readonly<IRelaxedExtensionManifest> | null> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport async function workbenchTeardown(instantiationService: IInstantiationService): Promise<void> {\n\treturn instantiationService.invokeFunction(async accessor => {\n\t\tconst workingCopyService = accessor.get(IWorkingCopyService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tfor (const workingCopy of workingCopyService.workingCopies) {\n\t\t\tawait workingCopy.revert();\n\t\t}\n\n\t\tfor (const group of editorGroupService.groups) {\n\t\t\tawait group.closeAllEditors();\n\t\t}\n\n\t\tfor (const group of editorGroupService.groups) {\n\t\t\teditorGroupService.removeGroup(group);\n\t\t}\n\t});\n}\n"]}