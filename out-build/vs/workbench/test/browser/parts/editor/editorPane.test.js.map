{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/test/browser/parts/editor/editorPane.test.ts"],"names":[],"mappings":"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","file":"editorPane.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { EditorPane, EditorMemento } from 'vs/workbench/browser/parts/editor/editorPane';\nimport { WorkspaceTrustRequiredPlaceholderEditor } from 'vs/workbench/browser/parts/editor/editorPlaceholder';\nimport { IEditorSerializer, IEditorFactoryRegistry, EditorExtensions, EditorInputCapabilities, IEditorDescriptor, IEditorPane } from 'vs/workbench/common/editor';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { workbenchInstantiationService, TestEditorGroupView, TestEditorGroupsService, registerTestResourceEditor, TestEditorInput, createEditorPart, TestTextResourceConfigurationService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { TextResourceEditorInput } from 'vs/workbench/common/editor/textResourceEditorInput';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { URI } from 'vs/base/common/uri';\nimport { EditorPaneDescriptor, EditorPaneRegistry } from 'vs/workbench/browser/editor';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IEditorModel } from 'vs/platform/editor/common/editor';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { TestStorageService, TestWorkspaceTrustManagementService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { extUri } from 'vs/base/common/resources';\nimport { EditorService } from 'vs/workbench/services/editor/browser/editorService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nconst NullThemeService = new TestThemeService();\n\nconst editorRegistry: EditorPaneRegistry = Registry.as(EditorExtensions.EditorPane);\nconst editorInputRegistry: IEditorFactoryRegistry = Registry.as(EditorExtensions.EditorFactory);\n\nclass TestEditor extends EditorPane {\n\n\tconstructor() {\n\t\tconst disposables = new DisposableStore();\n\t\tsuper('TestEditor', NullTelemetryService, NullThemeService, disposables.add(new TestStorageService()));\n\n\t\tthis._register(disposables);\n\t}\n\n\toverride getId(): string { return 'testEditor'; }\n\tlayout(): void { }\n\tprotected createEditor(): any { }\n}\n\nclass OtherTestEditor extends EditorPane {\n\n\tconstructor() {\n\t\tconst disposables = new DisposableStore();\n\t\tsuper('testOtherEditor', NullTelemetryService, NullThemeService, disposables.add(new TestStorageService()));\n\n\t\tthis._register(disposables);\n\t}\n\n\toverride getId(): string { return 'testOtherEditor'; }\n\n\tlayout(): void { }\n\tprotected createEditor(): any { }\n}\n\nclass TestInputSerializer implements IEditorSerializer {\n\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\treturn true;\n\t}\n\n\tserialize(input: EditorInput): string {\n\t\treturn input.toString();\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService, raw: string): EditorInput {\n\t\treturn {} as EditorInput;\n\t}\n}\n\nclass TestInput extends EditorInput {\n\n\treadonly resource = undefined;\n\n\toverride prefersEditorPane<T extends IEditorDescriptor<IEditorPane>>(editors: T[]): T | undefined {\n\t\treturn editors[1];\n\t}\n\n\toverride get typeId(): string {\n\t\treturn 'testInput';\n\t}\n\n\toverride resolve(): any {\n\t\treturn null;\n\t}\n}\n\nclass OtherTestInput extends EditorInput {\n\n\treadonly resource = undefined;\n\n\toverride get typeId(): string {\n\t\treturn 'otherTestInput';\n\t}\n\n\toverride resolve(): any {\n\t\treturn null;\n\t}\n}\nclass TestResourceEditorInput extends TextResourceEditorInput { }\n\nsuite('EditorPane', () => {\n\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('EditorPane API', async () => {\n\t\tconst editor = new TestEditor();\n\t\tconst input = disposables.add(new OtherTestInput());\n\t\tconst options = {};\n\n\t\tassert(!editor.isVisible());\n\t\tassert(!editor.input);\n\n\t\tawait editor.setInput(input, options, Object.create(null), CancellationToken.None);\n\t\tassert.strictEqual(<any>input, editor.input);\n\t\tconst group = new TestEditorGroupView(1);\n\t\teditor.setVisible(true, group);\n\t\tassert(editor.isVisible());\n\t\tassert.strictEqual(editor.group, group);\n\t\teditor.dispose();\n\t\teditor.clearInput();\n\t\teditor.setVisible(false, group);\n\t\tassert(!editor.isVisible());\n\t\tassert(!editor.input);\n\t\tassert(!editor.getControl());\n\t});\n\n\ttest('EditorPaneDescriptor', () => {\n\t\tconst editorDescriptor = EditorPaneDescriptor.create(TestEditor, 'id', 'name');\n\t\tassert.strictEqual(editorDescriptor.typeId, 'id');\n\t\tassert.strictEqual(editorDescriptor.name, 'name');\n\t});\n\n\ttest('Editor Pane Registration', function () {\n\t\tconst editorDescriptor1 = EditorPaneDescriptor.create(TestEditor, 'id1', 'name');\n\t\tconst editorDescriptor2 = EditorPaneDescriptor.create(OtherTestEditor, 'id2', 'name');\n\n\t\tconst oldEditorsCnt = editorRegistry.getEditorPanes().length;\n\t\tconst oldInputCnt = editorRegistry.getEditors().length;\n\n\t\tdisposables.add(editorRegistry.registerEditorPane(editorDescriptor1, [new SyncDescriptor(TestInput)]));\n\t\tdisposables.add(editorRegistry.registerEditorPane(editorDescriptor2, [new SyncDescriptor(TestInput), new SyncDescriptor(OtherTestInput)]));\n\n\t\tassert.strictEqual(editorRegistry.getEditorPanes().length, oldEditorsCnt + 2);\n\t\tassert.strictEqual(editorRegistry.getEditors().length, oldInputCnt + 3);\n\n\t\tassert.strictEqual(editorRegistry.getEditorPane(disposables.add(new TestInput())), editorDescriptor2);\n\t\tassert.strictEqual(editorRegistry.getEditorPane(disposables.add(new OtherTestInput())), editorDescriptor2);\n\n\t\tassert.strictEqual(editorRegistry.getEditorPaneByType('id1'), editorDescriptor1);\n\t\tassert.strictEqual(editorRegistry.getEditorPaneByType('id2'), editorDescriptor2);\n\t\tassert(!editorRegistry.getEditorPaneByType('id3'));\n\t});\n\n\ttest('Editor Pane Lookup favors specific class over superclass (match on specific class)', function () {\n\t\tconst d1 = EditorPaneDescriptor.create(TestEditor, 'id1', 'name');\n\n\t\tdisposables.add(registerTestResourceEditor());\n\t\tdisposables.add(editorRegistry.registerEditorPane(d1, [new SyncDescriptor(TestResourceEditorInput)]));\n\n\t\tconst inst = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst editor = disposables.add(editorRegistry.getEditorPane(disposables.add(inst.createInstance(TestResourceEditorInput, URI.file('/fake'), 'fake', '', undefined, undefined)))!.instantiate(inst));\n\t\tassert.strictEqual(editor.getId(), 'testEditor');\n\n\t\tconst otherEditor = disposables.add(editorRegistry.getEditorPane(disposables.add(inst.createInstance(TextResourceEditorInput, URI.file('/fake'), 'fake', '', undefined, undefined)))!.instantiate(inst));\n\t\tassert.strictEqual(otherEditor.getId(), 'workbench.editors.textResourceEditor');\n\t});\n\n\ttest('Editor Pane Lookup favors specific class over superclass (match on super class)', function () {\n\t\tconst inst = workbenchInstantiationService(undefined, disposables);\n\n\t\tdisposables.add(registerTestResourceEditor());\n\t\tconst editor = disposables.add(editorRegistry.getEditorPane(disposables.add(inst.createInstance(TestResourceEditorInput, URI.file('/fake'), 'fake', '', undefined, undefined)))!.instantiate(inst));\n\n\t\tassert.strictEqual('workbench.editors.textResourceEditor', editor.getId());\n\t});\n\n\ttest('Editor Input Serializer', function () {\n\t\tconst testInput = disposables.add(new TestEditorInput(URI.file('/fake'), 'testTypeId'));\n\t\tworkbenchInstantiationService(undefined, disposables).invokeFunction(accessor => editorInputRegistry.start(accessor));\n\t\tdisposables.add(editorInputRegistry.registerEditorSerializer(testInput.typeId, TestInputSerializer));\n\n\t\tlet factory = editorInputRegistry.getEditorSerializer('testTypeId');\n\t\tassert(factory);\n\n\t\tfactory = editorInputRegistry.getEditorSerializer(testInput);\n\t\tassert(factory);\n\n\t\t// throws when registering serializer for same type\n\t\tassert.throws(() => editorInputRegistry.registerEditorSerializer(testInput.typeId, TestInputSerializer));\n\t});\n\n\ttest('EditorMemento - basics', function () {\n\t\tconst testGroup0 = new TestEditorGroupView(0);\n\t\tconst testGroup1 = new TestEditorGroupView(1);\n\t\tconst testGroup4 = new TestEditorGroupView(4);\n\n\t\tconst configurationService = new TestTextResourceConfigurationService();\n\n\t\tconst editorGroupService = new TestEditorGroupsService([\n\t\t\ttestGroup0,\n\t\t\ttestGroup1,\n\t\t\tnew TestEditorGroupView(2)\n\t\t]);\n\n\t\tinterface TestViewState {\n\t\t\tline: number;\n\t\t}\n\n\t\tconst rawMemento = Object.create(null);\n\t\tlet memento = disposables.add(new EditorMemento<TestViewState>('id', 'key', rawMemento, 3, editorGroupService, configurationService));\n\n\t\tlet res = memento.loadEditorState(testGroup0, URI.file('/A'));\n\t\tassert.ok(!res);\n\n\t\tmemento.saveEditorState(testGroup0, URI.file('/A'), { line: 3 });\n\t\tres = memento.loadEditorState(testGroup0, URI.file('/A'));\n\t\tassert.ok(res);\n\t\tassert.strictEqual(res!.line, 3);\n\n\t\tmemento.saveEditorState(testGroup1, URI.file('/A'), { line: 5 });\n\t\tres = memento.loadEditorState(testGroup1, URI.file('/A'));\n\t\tassert.ok(res);\n\t\tassert.strictEqual(res!.line, 5);\n\n\t\t// Ensure capped at 3 elements\n\t\tmemento.saveEditorState(testGroup0, URI.file('/B'), { line: 1 });\n\t\tmemento.saveEditorState(testGroup0, URI.file('/C'), { line: 1 });\n\t\tmemento.saveEditorState(testGroup0, URI.file('/D'), { line: 1 });\n\t\tmemento.saveEditorState(testGroup0, URI.file('/E'), { line: 1 });\n\n\t\tassert.ok(!memento.loadEditorState(testGroup0, URI.file('/A')));\n\t\tassert.ok(!memento.loadEditorState(testGroup0, URI.file('/B')));\n\t\tassert.ok(memento.loadEditorState(testGroup0, URI.file('/C')));\n\t\tassert.ok(memento.loadEditorState(testGroup0, URI.file('/D')));\n\t\tassert.ok(memento.loadEditorState(testGroup0, URI.file('/E')));\n\n\t\t// Save at an unknown group\n\t\tmemento.saveEditorState(testGroup4, URI.file('/E'), { line: 1 });\n\t\tassert.ok(memento.loadEditorState(testGroup4, URI.file('/E'))); // only gets removed when memento is saved\n\t\tmemento.saveEditorState(testGroup4, URI.file('/C'), { line: 1 });\n\t\tassert.ok(memento.loadEditorState(testGroup4, URI.file('/C'))); // only gets removed when memento is saved\n\n\t\tmemento.saveState();\n\n\t\tmemento = disposables.add(new EditorMemento('id', 'key', rawMemento, 3, editorGroupService, configurationService));\n\t\tassert.ok(memento.loadEditorState(testGroup0, URI.file('/C')));\n\t\tassert.ok(memento.loadEditorState(testGroup0, URI.file('/D')));\n\t\tassert.ok(memento.loadEditorState(testGroup0, URI.file('/E')));\n\n\t\t// Check on entries no longer there from invalid groups\n\t\tassert.ok(!memento.loadEditorState(testGroup4, URI.file('/E')));\n\t\tassert.ok(!memento.loadEditorState(testGroup4, URI.file('/C')));\n\n\t\tmemento.clearEditorState(URI.file('/C'), testGroup4);\n\t\tmemento.clearEditorState(URI.file('/E'));\n\n\t\tassert.ok(!memento.loadEditorState(testGroup4, URI.file('/C')));\n\t\tassert.ok(memento.loadEditorState(testGroup0, URI.file('/D')));\n\t\tassert.ok(!memento.loadEditorState(testGroup0, URI.file('/E')));\n\t});\n\n\ttest('EditorMemento - move', function () {\n\t\tconst testGroup0 = new TestEditorGroupView(0);\n\n\t\tconst configurationService = new TestTextResourceConfigurationService();\n\t\tconst editorGroupService = new TestEditorGroupsService([testGroup0]);\n\n\t\tinterface TestViewState { line: number }\n\n\t\tconst rawMemento = Object.create(null);\n\t\tconst memento = disposables.add(new EditorMemento<TestViewState>('id', 'key', rawMemento, 3, editorGroupService, configurationService));\n\n\t\tmemento.saveEditorState(testGroup0, URI.file('/some/folder/file-1.txt'), { line: 1 });\n\t\tmemento.saveEditorState(testGroup0, URI.file('/some/folder/file-2.txt'), { line: 2 });\n\t\tmemento.saveEditorState(testGroup0, URI.file('/some/other/file.txt'), { line: 3 });\n\n\t\tmemento.moveEditorState(URI.file('/some/folder/file-1.txt'), URI.file('/some/folder/file-moved.txt'), extUri);\n\n\t\tlet res = memento.loadEditorState(testGroup0, URI.file('/some/folder/file-1.txt'));\n\t\tassert.ok(!res);\n\n\t\tres = memento.loadEditorState(testGroup0, URI.file('/some/folder/file-moved.txt'));\n\t\tassert.strictEqual(res?.line, 1);\n\n\t\tmemento.moveEditorState(URI.file('/some/folder'), URI.file('/some/folder-moved'), extUri);\n\n\t\tres = memento.loadEditorState(testGroup0, URI.file('/some/folder-moved/file-moved.txt'));\n\t\tassert.strictEqual(res?.line, 1);\n\n\t\tres = memento.loadEditorState(testGroup0, URI.file('/some/folder-moved/file-2.txt'));\n\t\tassert.strictEqual(res?.line, 2);\n\t});\n\n\ttest('EditoMemento - use with editor input', function () {\n\t\tconst testGroup0 = new TestEditorGroupView(0);\n\n\t\tinterface TestViewState {\n\t\t\tline: number;\n\t\t}\n\n\t\tclass TestEditorInput extends EditorInput {\n\t\t\tconstructor(public resource: URI, private id = 'testEditorInputForMementoTest') {\n\t\t\t\tsuper();\n\t\t\t}\n\t\t\toverride get typeId() { return 'testEditorInputForMementoTest'; }\n\t\t\toverride async resolve(): Promise<IEditorModel | null> { return null; }\n\n\t\t\toverride matches(other: TestEditorInput): boolean {\n\t\t\t\treturn other && this.id === other.id && other instanceof TestEditorInput;\n\t\t\t}\n\t\t}\n\n\t\tconst rawMemento = Object.create(null);\n\t\tconst memento = disposables.add(new EditorMemento<TestViewState>('id', 'key', rawMemento, 3, new TestEditorGroupsService(), new TestTextResourceConfigurationService()));\n\n\t\tconst testInputA = disposables.add(new TestEditorInput(URI.file('/A')));\n\n\t\tlet res = memento.loadEditorState(testGroup0, testInputA);\n\t\tassert.ok(!res);\n\n\t\tmemento.saveEditorState(testGroup0, testInputA, { line: 3 });\n\t\tres = memento.loadEditorState(testGroup0, testInputA);\n\t\tassert.ok(res);\n\t\tassert.strictEqual(res!.line, 3);\n\n\t\t// State removed when input gets disposed\n\t\ttestInputA.dispose();\n\t\tres = memento.loadEditorState(testGroup0, testInputA);\n\t\tassert.ok(!res);\n\t});\n\n\ttest('EditoMemento - clear on editor dispose', function () {\n\t\tconst testGroup0 = new TestEditorGroupView(0);\n\n\t\tinterface TestViewState {\n\t\t\tline: number;\n\t\t}\n\n\t\tclass TestEditorInput extends EditorInput {\n\t\t\tconstructor(public resource: URI, private id = 'testEditorInputForMementoTest') {\n\t\t\t\tsuper();\n\t\t\t}\n\t\t\toverride get typeId() { return 'testEditorInputForMementoTest'; }\n\t\t\toverride async resolve(): Promise<IEditorModel | null> { return null; }\n\n\t\t\toverride matches(other: TestEditorInput): boolean {\n\t\t\t\treturn other && this.id === other.id && other instanceof TestEditorInput;\n\t\t\t}\n\t\t}\n\n\t\tconst rawMemento = Object.create(null);\n\t\tconst memento = disposables.add(new EditorMemento<TestViewState>('id', 'key', rawMemento, 3, new TestEditorGroupsService(), new TestTextResourceConfigurationService()));\n\n\t\tconst testInputA = disposables.add(new TestEditorInput(URI.file('/A')));\n\n\t\tlet res = memento.loadEditorState(testGroup0, testInputA);\n\t\tassert.ok(!res);\n\n\t\tmemento.saveEditorState(testGroup0, testInputA.resource, { line: 3 });\n\t\tres = memento.loadEditorState(testGroup0, testInputA);\n\t\tassert.ok(res);\n\t\tassert.strictEqual(res!.line, 3);\n\n\t\t// State not yet removed when input gets disposed\n\t\t// because we used resource\n\t\ttestInputA.dispose();\n\t\tres = memento.loadEditorState(testGroup0, testInputA);\n\t\tassert.ok(res);\n\n\t\tconst testInputB = disposables.add(new TestEditorInput(URI.file('/B')));\n\n\t\tres = memento.loadEditorState(testGroup0, testInputB);\n\t\tassert.ok(!res);\n\n\t\tmemento.saveEditorState(testGroup0, testInputB.resource, { line: 3 });\n\t\tres = memento.loadEditorState(testGroup0, testInputB);\n\t\tassert.ok(res);\n\t\tassert.strictEqual(res!.line, 3);\n\n\t\tmemento.clearEditorStateOnDispose(testInputB.resource, testInputB);\n\n\t\t// State removed when input gets disposed\n\t\ttestInputB.dispose();\n\t\tres = memento.loadEditorState(testGroup0, testInputB);\n\t\tassert.ok(!res);\n\t});\n\n\ttest('EditorMemento - workbench.editor.sharedViewState', function () {\n\t\tconst testGroup0 = new TestEditorGroupView(0);\n\t\tconst testGroup1 = new TestEditorGroupView(1);\n\n\t\tconst configurationService = new TestTextResourceConfigurationService(new TestConfigurationService({\n\t\t\tworkbench: {\n\t\t\t\teditor: {\n\t\t\t\t\tsharedViewState: true\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tconst editorGroupService = new TestEditorGroupsService([testGroup0]);\n\n\t\tinterface TestViewState { line: number }\n\n\t\tconst rawMemento = Object.create(null);\n\t\tconst memento = disposables.add(new EditorMemento<TestViewState>('id', 'key', rawMemento, 3, editorGroupService, configurationService));\n\n\t\tconst resource = URI.file('/some/folder/file-1.txt');\n\t\tmemento.saveEditorState(testGroup0, resource, { line: 1 });\n\n\t\tlet res = memento.loadEditorState(testGroup0, resource);\n\t\tassert.strictEqual(res!.line, 1);\n\n\t\tres = memento.loadEditorState(testGroup1, resource);\n\t\tassert.strictEqual(res!.line, 1);\n\n\t\tmemento.saveEditorState(testGroup0, resource, { line: 3 });\n\n\t\tres = memento.loadEditorState(testGroup1, resource);\n\t\tassert.strictEqual(res!.line, 3);\n\n\t\tmemento.saveEditorState(testGroup1, resource, { line: 1 });\n\n\t\tres = memento.loadEditorState(testGroup1, resource);\n\t\tassert.strictEqual(res!.line, 1);\n\n\t\tmemento.clearEditorState(resource, testGroup0);\n\t\tmemento.clearEditorState(resource, testGroup1);\n\n\t\tres = memento.loadEditorState(testGroup1, resource);\n\t\tassert.strictEqual(res!.line, 1);\n\n\t\tmemento.clearEditorState(resource);\n\n\t\tres = memento.loadEditorState(testGroup1, resource);\n\t\tassert.ok(!res);\n\t});\n\n\ttest('WorkspaceTrustRequiredEditor', async function () {\n\n\t\tclass TrustRequiredTestEditor extends EditorPane {\n\t\t\tconstructor(@ITelemetryService telemetryService: ITelemetryService) {\n\t\t\t\tsuper('TestEditor', NullTelemetryService, NullThemeService, disposables.add(new TestStorageService()));\n\t\t\t}\n\n\t\t\toverride getId(): string { return 'trustRequiredTestEditor'; }\n\t\t\tlayout(): void { }\n\t\t\tprotected createEditor(): any { }\n\t\t}\n\n\t\tclass TrustRequiredTestInput extends EditorInput {\n\n\t\t\treadonly resource = undefined;\n\n\t\t\toverride get typeId(): string {\n\t\t\t\treturn 'trustRequiredTestInput';\n\t\t\t}\n\n\t\t\toverride get capabilities(): EditorInputCapabilities {\n\t\t\t\treturn EditorInputCapabilities.RequiresTrust;\n\t\t\t}\n\n\t\t\toverride resolve(): any {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst workspaceTrustService = disposables.add(instantiationService.createInstance(TestWorkspaceTrustManagementService));\n\t\tinstantiationService.stub(IWorkspaceTrustManagementService, workspaceTrustService);\n\t\tworkspaceTrustService.setWorkspaceTrust(false);\n\n\t\tconst editorPart = await createEditorPart(instantiationService, disposables);\n\t\tinstantiationService.stub(IEditorGroupsService, editorPart);\n\n\t\tconst editorService = disposables.add(instantiationService.createInstance(EditorService));\n\t\tinstantiationService.stub(IEditorService, editorService);\n\n\t\tconst group = editorPart.activeGroup;\n\n\t\tconst editorDescriptor = EditorPaneDescriptor.create(TrustRequiredTestEditor, 'id1', 'name');\n\t\tdisposables.add(editorRegistry.registerEditorPane(editorDescriptor, [new SyncDescriptor(TrustRequiredTestInput)]));\n\n\t\tconst testInput = disposables.add(new TrustRequiredTestInput());\n\n\t\tawait group.openEditor(testInput);\n\t\tassert.strictEqual(group.activeEditorPane?.getId(), WorkspaceTrustRequiredPlaceholderEditor.ID);\n\n\t\tconst getEditorPaneIdAsync = () => new Promise(resolve => {\n\t\t\tdisposables.add(editorService.onDidActiveEditorChange(() => {\n\t\t\t\tresolve(group.activeEditorPane?.getId());\n\t\t\t}));\n\t\t});\n\n\t\tworkspaceTrustService.setWorkspaceTrust(true);\n\n\t\tassert.strictEqual(await getEditorPaneIdAsync(), 'trustRequiredTestEditor');\n\n\t\tworkspaceTrustService.setWorkspaceTrust(false);\n\t\tassert.strictEqual(await getEditorPaneIdAsync(), WorkspaceTrustRequiredPlaceholderEditor.ID);\n\n\t\tawait group.closeAllEditors();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}