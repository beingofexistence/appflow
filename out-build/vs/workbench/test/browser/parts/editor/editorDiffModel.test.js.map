{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/test/browser/parts/editor/editorDiffModel.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAahG,KAAK,CAAC,qBAAqB,EAAE,GAAG,EAAE;QAEjC,MAAM,WAAW,GAAG,IAAI,eAAG,EAAc,CAAC;QAC1C,IAAI,oBAAyB,CAAmB;QAChD,IAAI,QAAc,CAAgB;QAElC,KAAK,CAAC,GAAG,EAAE;YACV,oBAAoB,GAAG,IAAA,4BAAI,EAA0B,SAAS,EAAE,WAAW,CAAC,CAAC;YAC7E,QAAQ,GAAG,oBAAoB,CAAC,cAAc,CAAC,4BAAI,CAAgB,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,GAAG,EAAE;YACb,WAAW,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE;YACzB,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,wBAAwB,CAAC,gCAAgC,CAAC,MAAM,EAAE;gBAC1F,kBAAkB,EAAE,KAAK,WAAW,QAAa;oBAChD,IAAI,QAAQ,CAAC,MAAM,KAAK,MAAM,EAAE;wBAC/B,MAAM,YAAY,GAAG,YAAY,CAAC;wBAClC,MAAM,iBAAiB,GAAG,QAAQ,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;wBAEtE,OAAO,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,YAAY,EAAE,iBAAiB,EAAE,QAAQ,CAAC,CAAC,CAAC;qBACrG;oBAED,OAAO,IAAI,CAAC;gBACb,CAAC;aACD,CAAC,CAAC,CAAC;YAEJ,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,8BAAI,EAAqB,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,IAAK,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;YAC1M,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,8BAAI,EAAqB,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,IAAK,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;YAChN,MAAM,SAAS,GAAG,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,sBAAI,EAAa,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;YAE7I,IAAI,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,SAAS,CAAC,OAAO,EAAU,CAAgB,CAAC;YAE9E,MAAM,CAAC,KAAK,CAAC,CAAC;YACd,MAAM,CAAC,KAAK,YAAY,0BAAI,CAAgB,CAAC;YAE7C,MAAM,eAAe,GAAG,KAAK,CAAC,mBAAoB,CAAC;YACnD,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YACjC,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAEjC,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,SAAS,CAAC,OAAO,EAAU,CAAgB,CAAC;YAC1E,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;YAE3B,MAAM,CAAC,eAAe,KAAK,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACtD,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,MAAM,CAAC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAA,WAAG,GAAsC,CAAC;IAC3C,CAAC,CAAC,CAAC","file":"editorDiffModel.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { TextDiffEditorModel } from 'vs/workbench/common/editor/textDiffEditorModel';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { TextResourceEditorInput } from 'vs/workbench/common/editor/textResourceEditorInput';\nimport { URI } from 'vs/base/common/uri';\nimport { workbenchInstantiationService, TestServiceAccessor } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nsuite('TextDiffEditorModel', () => {\n\n\tconst disposables = new DisposableStore();\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('basics', async () => {\n\t\tdisposables.add(accessor.textModelResolverService.registerTextModelContentProvider('test', {\n\t\t\tprovideTextContent: async function (resource: URI): Promise<ITextModel | null> {\n\t\t\t\tif (resource.scheme === 'test') {\n\t\t\t\t\tconst modelContent = 'Hello Test';\n\t\t\t\t\tconst languageSelection = accessor.languageService.createById('json');\n\n\t\t\t\t\treturn disposables.add(accessor.modelService.createModel(modelContent, languageSelection, resource));\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}));\n\n\t\tconst input = disposables.add(instantiationService.createInstance(TextResourceEditorInput, URI.from({ scheme: 'test', authority: null!, path: 'thePath' }), 'name', 'description', undefined, undefined));\n\t\tconst otherInput = disposables.add(instantiationService.createInstance(TextResourceEditorInput, URI.from({ scheme: 'test', authority: null!, path: 'thePath' }), 'name2', 'description', undefined, undefined));\n\t\tconst diffInput = disposables.add(instantiationService.createInstance(DiffEditorInput, 'name', 'description', input, otherInput, undefined));\n\n\t\tlet model = disposables.add(await diffInput.resolve() as TextDiffEditorModel);\n\n\t\tassert(model);\n\t\tassert(model instanceof TextDiffEditorModel);\n\n\t\tconst diffEditorModel = model.textDiffEditorModel!;\n\t\tassert(diffEditorModel.original);\n\t\tassert(diffEditorModel.modified);\n\n\t\tmodel = disposables.add(await diffInput.resolve() as TextDiffEditorModel);\n\t\tassert(model.isResolved());\n\n\t\tassert(diffEditorModel !== model.textDiffEditorModel);\n\t\tdiffInput.dispose();\n\t\tassert(!model.textDiffEditorModel);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}