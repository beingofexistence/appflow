{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/test/browser/parts/editor/sideBySideEditorInput.test.ts"],"names":[],"mappings":"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","file":"sideBySideEditorInput.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { EditorResourceAccessor, IResourceSideBySideEditorInput, isResourceSideBySideEditorInput, isSideBySideEditorInput, IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { SideBySideEditorInput } from 'vs/workbench/common/editor/sideBySideEditorInput';\nimport { TestFileEditorInput, workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\n\nsuite('SideBySideEditorInput', () => {\n\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\tclass MyEditorInput extends EditorInput {\n\n\t\tconstructor(public resource: URI | undefined = undefined) {\n\t\t\tsuper();\n\t\t}\n\n\t\tfireCapabilitiesChangeEvent(): void {\n\t\t\tthis._onDidChangeCapabilities.fire();\n\t\t}\n\n\t\tfireDirtyChangeEvent(): void {\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\n\t\tfireLabelChangeEvent(): void {\n\t\t\tthis._onDidChangeLabel.fire();\n\t\t}\n\n\t\toverride get typeId(): string { return 'myEditorInput'; }\n\t\toverride resolve(): any { return null; }\n\n\t\toverride toUntyped() {\n\t\t\treturn { resource: this.resource, options: { override: this.typeId } };\n\t\t}\n\n\t\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\t\tif (super.matches(otherInput)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst resource = EditorResourceAccessor.getCanonicalUri(otherInput);\n\t\t\treturn resource?.toString() === this.resource?.toString();\n\t\t}\n\t}\n\n\ttest('basics', () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tlet counter = 0;\n\t\tconst input = disposables.add(new MyEditorInput(URI.file('/fake')));\n\t\tdisposables.add(input.onWillDispose(() => {\n\t\t\tassert(true);\n\t\t\tcounter++;\n\t\t}));\n\n\t\tconst otherInput = disposables.add(new MyEditorInput(URI.file('/fake2')));\n\t\tdisposables.add(otherInput.onWillDispose(() => {\n\t\t\tassert(true);\n\t\t\tcounter++;\n\t\t}));\n\n\t\tconst sideBySideInput = disposables.add(instantiationService.createInstance(SideBySideEditorInput, 'name', 'description', input, otherInput));\n\t\tassert.strictEqual(sideBySideInput.getName(), 'name');\n\t\tassert.strictEqual(sideBySideInput.getDescription(), 'description');\n\n\t\tassert.ok(isSideBySideEditorInput(sideBySideInput));\n\t\tassert.ok(!isSideBySideEditorInput(input));\n\n\t\tassert.strictEqual(sideBySideInput.secondary, input);\n\t\tassert.strictEqual(sideBySideInput.primary, otherInput);\n\t\tassert(sideBySideInput.matches(sideBySideInput));\n\t\tassert(!sideBySideInput.matches(otherInput));\n\n\t\tsideBySideInput.dispose();\n\t\tassert.strictEqual(counter, 0);\n\n\t\tconst sideBySideInputSame = disposables.add(instantiationService.createInstance(SideBySideEditorInput, undefined, undefined, input, input));\n\t\tassert.strictEqual(sideBySideInputSame.getName(), input.getName());\n\t\tassert.strictEqual(sideBySideInputSame.getDescription(), input.getDescription());\n\t\tassert.strictEqual(sideBySideInputSame.getTitle(), input.getTitle());\n\t\tassert.strictEqual(sideBySideInputSame.resource?.toString(), input.resource?.toString());\n\t});\n\n\ttest('events dispatching', () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst input = disposables.add(new MyEditorInput());\n\t\tconst otherInput = disposables.add(new MyEditorInput());\n\n\t\tconst sideBySideInut = disposables.add(instantiationService.createInstance(SideBySideEditorInput, 'name', 'description', otherInput, input));\n\n\t\tassert.ok(isSideBySideEditorInput(sideBySideInut));\n\n\t\tlet capabilitiesChangeCounter = 0;\n\t\tdisposables.add(sideBySideInut.onDidChangeCapabilities(() => capabilitiesChangeCounter++));\n\n\t\tlet dirtyChangeCounter = 0;\n\t\tdisposables.add(sideBySideInut.onDidChangeDirty(() => dirtyChangeCounter++));\n\n\t\tlet labelChangeCounter = 0;\n\t\tdisposables.add(sideBySideInut.onDidChangeLabel(() => labelChangeCounter++));\n\n\t\tinput.fireCapabilitiesChangeEvent();\n\t\tassert.strictEqual(capabilitiesChangeCounter, 1);\n\n\t\totherInput.fireCapabilitiesChangeEvent();\n\t\tassert.strictEqual(capabilitiesChangeCounter, 2);\n\n\t\tinput.fireDirtyChangeEvent();\n\t\totherInput.fireDirtyChangeEvent();\n\t\tassert.strictEqual(dirtyChangeCounter, 1);\n\n\t\tinput.fireLabelChangeEvent();\n\t\totherInput.fireLabelChangeEvent();\n\t\tassert.strictEqual(labelChangeCounter, 2);\n\t});\n\n\ttest('toUntyped', () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst primaryInput = disposables.add(new MyEditorInput(URI.file('/fake')));\n\t\tconst secondaryInput = disposables.add(new MyEditorInput(URI.file('/fake2')));\n\n\t\tconst sideBySideInput = disposables.add(instantiationService.createInstance(SideBySideEditorInput, 'Side By Side Test', undefined, secondaryInput, primaryInput));\n\n\t\tconst untypedSideBySideInput = sideBySideInput.toUntyped();\n\t\tassert.ok(isResourceSideBySideEditorInput(untypedSideBySideInput));\n\t});\n\n\ttest('untyped matches', () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst primaryInput = disposables.add(new TestFileEditorInput(URI.file('/fake'), 'primaryId'));\n\t\tconst secondaryInput = disposables.add(new TestFileEditorInput(URI.file('/fake2'), 'secondaryId'));\n\t\tconst sideBySideInput = disposables.add(instantiationService.createInstance(SideBySideEditorInput, 'Side By Side Test', undefined, secondaryInput, primaryInput));\n\n\t\tconst primaryUntypedInput = { resource: URI.file('/fake'), options: { override: 'primaryId' } };\n\t\tconst secondaryUntypedInput = { resource: URI.file('/fake2'), options: { override: 'secondaryId' } };\n\t\tconst sideBySideUntyped: IResourceSideBySideEditorInput = { primary: primaryUntypedInput, secondary: secondaryUntypedInput };\n\n\t\tassert.ok(sideBySideInput.matches(sideBySideUntyped));\n\n\t\tconst primaryUntypedInput2 = { resource: URI.file('/fake'), options: { override: 'primaryIdWrong' } };\n\t\tconst secondaryUntypedInput2 = { resource: URI.file('/fake2'), options: { override: 'secondaryId' } };\n\t\tconst sideBySideUntyped2: IResourceSideBySideEditorInput = { primary: primaryUntypedInput2, secondary: secondaryUntypedInput2 };\n\n\t\tassert.ok(!sideBySideInput.matches(sideBySideUntyped2));\n\n\t\tconst primaryUntypedInput3 = { resource: URI.file('/fake'), options: { override: 'primaryId' } };\n\t\tconst secondaryUntypedInput3 = { resource: URI.file('/fake2Wrong'), options: { override: 'secondaryId' } };\n\t\tconst sideBySideUntyped3: IResourceSideBySideEditorInput = { primary: primaryUntypedInput3, secondary: secondaryUntypedInput3 };\n\n\t\tassert.ok(!sideBySideInput.matches(sideBySideUntyped3));\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}