{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/test/browser/parts/editor/resourceEditorInput.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;IAchG,KAAK,CAAC,qBAAqB,EAAE,GAAG,EAAE;QAEjC,MAAM,WAAW,GAAG,IAAI,eAAG,EAAc,CAAC;QAC1C,IAAI,oBAAyB,CAAmB;QAEhD,IAAM,uBAAuB,GAA7B,MAAM,uBAAwB,SAAQ,0BAAI;YAIzC,YACC,QAAa,EACE,YAAiB,EAClB,WAAgB,EACF,yBAA8B;gBAE1D,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE,yBAAyB,CAAC,CAAC;gBARxE,WAAM,GAAG,aAAa,CAAC;YAShC,CAAC;SACD,CAAA;QAZK,uBAAuB;YAM1B,WAAA,WAAG,CAAA;YACH,WAAA,WAAG,CAAA;YACH,WAAA,+BAAG,CAAA;WARA,uBAAuB,CAY5B;QAED,KAAK,CAAC,GAAG,EAAE;YACV,oBAAoB,GAAG,IAAA,4BAAI,EAA0B,SAAS,EAAE,WAAW,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,GAAG,EAAE;YACb,WAAW,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE;YACzB,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE,6BAA6B,EAAE,CAAC,CAAC;YAE3F,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,oBAAoB,CAAC,cAAc,CAAC,uBAAuB,EAAE,QAAQ,CAAC,CAAC,CAAC;YAEtG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAEtC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,cAAc,yBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,cAAc,0BAAmB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9D,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,cAAc,wBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAE5D,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,yBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,0BAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,wBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAErD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,0CAAkC,EAAE,KAAK,CAAC,CAAC;YACjF,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,KAAK,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,0CAAkC,EAAE,IAAI,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;QAEH,IAAA,WAAG,GAAsC,CAAC;IAC3C,CAAC,CAAC,CAAC","file":"resourceEditorInput.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { AbstractResourceEditorInput } from 'vs/workbench/common/editor/resourceEditorInput';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { EditorInputCapabilities, Verbosity } from 'vs/workbench/common/editor';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nsuite('ResourceEditorInput', () => {\n\n\tconst disposables = new DisposableStore();\n\tlet instantiationService: IInstantiationService;\n\n\tclass TestResourceEditorInput extends AbstractResourceEditorInput {\n\n\t\treadonly typeId = 'test.typeId';\n\n\t\tconstructor(\n\t\t\tresource: URI,\n\t\t\t@ILabelService labelService: ILabelService,\n\t\t\t@IFileService fileService: IFileService,\n\t\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService\n\t\t) {\n\t\t\tsuper(resource, resource, labelService, fileService, filesConfigurationService);\n\t\t}\n\t}\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('basics', async () => {\n\t\tconst resource = URI.from({ scheme: 'testResource', path: 'thePath/of/the/resource.txt' });\n\n\t\tconst input = disposables.add(instantiationService.createInstance(TestResourceEditorInput, resource));\n\n\t\tassert.ok(input.getName().length > 0);\n\n\t\tassert.ok(input.getDescription(Verbosity.SHORT)!.length > 0);\n\t\tassert.ok(input.getDescription(Verbosity.MEDIUM)!.length > 0);\n\t\tassert.ok(input.getDescription(Verbosity.LONG)!.length > 0);\n\n\t\tassert.ok(input.getTitle(Verbosity.SHORT).length > 0);\n\t\tassert.ok(input.getTitle(Verbosity.MEDIUM).length > 0);\n\t\tassert.ok(input.getTitle(Verbosity.LONG).length > 0);\n\n\t\tassert.strictEqual(input.hasCapability(EditorInputCapabilities.Readonly), false);\n\t\tassert.strictEqual(input.isReadonly(), false);\n\t\tassert.strictEqual(input.hasCapability(EditorInputCapabilities.Untitled), true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}