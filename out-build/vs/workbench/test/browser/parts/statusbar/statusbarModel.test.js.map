{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/test/browser/parts/statusbar/statusbarModel.test.ts"],"names":[],"mappings":"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","file":"statusbarModel.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { StatusbarViewModel } from 'vs/workbench/browser/parts/statusbar/statusbarModel';\nimport { TestStorageService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { StatusbarAlignment } from 'vs/workbench/services/statusbar/browser/statusbar';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nsuite('Workbench status bar model', () => {\n\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('basics', () => {\n\t\tconst container = document.createElement('div');\n\t\tconst model = disposables.add(new StatusbarViewModel(disposables.add(new TestStorageService())));\n\n\t\tassert.strictEqual(model.entries.length, 0);\n\n\t\tconst entry1 = { id: '3', alignment: StatusbarAlignment.LEFT, name: '3', priority: { primary: 3, secondary: 1 }, container, labelContainer: container, hasCommand: false };\n\t\tmodel.add(entry1);\n\t\tconst entry2 = { id: '2', alignment: StatusbarAlignment.LEFT, name: '2', priority: { primary: 2, secondary: 1 }, container, labelContainer: container, hasCommand: false };\n\t\tmodel.add(entry2);\n\t\tconst entry3 = { id: '1', alignment: StatusbarAlignment.LEFT, name: '1', priority: { primary: 1, secondary: 1 }, container, labelContainer: container, hasCommand: false };\n\t\tmodel.add(entry3);\n\t\tconst entry4 = { id: '1-right', alignment: StatusbarAlignment.RIGHT, name: '1-right', priority: { primary: 1, secondary: 1 }, container, labelContainer: container, hasCommand: false };\n\t\tmodel.add(entry4);\n\n\t\tassert.strictEqual(model.entries.length, 4);\n\n\t\tconst leftEntries = model.getEntries(StatusbarAlignment.LEFT);\n\t\tassert.strictEqual(leftEntries.length, 3);\n\t\tassert.strictEqual(model.getEntries(StatusbarAlignment.RIGHT).length, 1);\n\n\t\tassert.strictEqual(leftEntries[0].id, '3');\n\t\tassert.strictEqual(leftEntries[1].id, '2');\n\t\tassert.strictEqual(leftEntries[2].id, '1');\n\n\t\tconst entries = model.entries;\n\t\tassert.strictEqual(entries[0].id, '3');\n\t\tassert.strictEqual(entries[1].id, '2');\n\t\tassert.strictEqual(entries[2].id, '1');\n\t\tassert.strictEqual(entries[3].id, '1-right');\n\n\t\tassert.ok(model.findEntry(container));\n\n\t\tlet didChangeEntryVisibility: { id: string; visible: boolean } = { id: '', visible: false };\n\t\tdisposables.add(model.onDidChangeEntryVisibility(e => {\n\t\t\tdidChangeEntryVisibility = e;\n\t\t}));\n\n\t\tassert.strictEqual(model.isHidden('1'), false);\n\t\tmodel.hide('1');\n\t\tassert.strictEqual(didChangeEntryVisibility.id, '1');\n\t\tassert.strictEqual(didChangeEntryVisibility.visible, false);\n\t\tassert.strictEqual(model.isHidden('1'), true);\n\n\t\tdidChangeEntryVisibility = { id: '', visible: false };\n\n\t\tmodel.show('1');\n\t\tassert.strictEqual(didChangeEntryVisibility.id, '1');\n\t\tassert.strictEqual(didChangeEntryVisibility.visible, true);\n\t\tassert.strictEqual(model.isHidden('1'), false);\n\n\t\tmodel.remove(entry1);\n\t\tmodel.remove(entry4);\n\t\tassert.strictEqual(model.entries.length, 2);\n\n\t\tmodel.remove(entry2);\n\t\tmodel.remove(entry3);\n\t\tassert.strictEqual(model.entries.length, 0);\n\t});\n\n\ttest('secondary priority used when primary is same', () => {\n\t\tconst container = document.createElement('div');\n\t\tconst model = disposables.add(new StatusbarViewModel(disposables.add(new TestStorageService())));\n\n\t\tassert.strictEqual(model.entries.length, 0);\n\n\t\tmodel.add({ id: '1', alignment: StatusbarAlignment.LEFT, name: '1', priority: { primary: 1, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\t\tmodel.add({ id: '2', alignment: StatusbarAlignment.LEFT, name: '2', priority: { primary: 1, secondary: 2 }, container, labelContainer: container, hasCommand: false });\n\t\tmodel.add({ id: '3', alignment: StatusbarAlignment.LEFT, name: '3', priority: { primary: 1, secondary: 3 }, container, labelContainer: container, hasCommand: false });\n\n\t\tconst entries = model.entries;\n\t\tassert.strictEqual(entries[0].id, '3');\n\t\tassert.strictEqual(entries[1].id, '2');\n\t\tassert.strictEqual(entries[2].id, '1');\n\t});\n\n\ttest('insertion order preserved when priorites are the same', () => {\n\t\tconst container = document.createElement('div');\n\t\tconst model = disposables.add(new StatusbarViewModel(disposables.add(new TestStorageService())));\n\n\t\tassert.strictEqual(model.entries.length, 0);\n\n\t\tmodel.add({ id: '1', alignment: StatusbarAlignment.LEFT, name: '1', priority: { primary: 1, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\t\tmodel.add({ id: '2', alignment: StatusbarAlignment.LEFT, name: '2', priority: { primary: 1, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\t\tmodel.add({ id: '3', alignment: StatusbarAlignment.LEFT, name: '3', priority: { primary: 1, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\n\t\tconst entries = model.entries;\n\t\tassert.strictEqual(entries[0].id, '1');\n\t\tassert.strictEqual(entries[1].id, '2');\n\t\tassert.strictEqual(entries[2].id, '3');\n\t});\n\n\ttest('entry with reference to other entry (existing)', () => {\n\t\tconst container = document.createElement('div');\n\t\tconst model = disposables.add(new StatusbarViewModel(disposables.add(new TestStorageService())));\n\n\t\t// Existing reference, Alignment: left\n\t\tmodel.add({ id: 'a', alignment: StatusbarAlignment.LEFT, name: '1', priority: { primary: 2, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\t\tmodel.add({ id: 'b', alignment: StatusbarAlignment.LEFT, name: '2', priority: { primary: 1, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\n\t\tlet entry = { id: 'c', alignment: StatusbarAlignment.LEFT, name: '3', priority: { primary: { id: 'a', alignment: StatusbarAlignment.LEFT }, secondary: 1 }, container, labelContainer: container, hasCommand: false };\n\t\tmodel.add(entry);\n\n\t\tlet entries = model.entries;\n\t\tassert.strictEqual(entries.length, 3);\n\t\tassert.strictEqual(entries[0].id, 'c');\n\t\tassert.strictEqual(entries[1].id, 'a');\n\t\tassert.strictEqual(entries[2].id, 'b');\n\n\t\tmodel.remove(entry);\n\n\t\t// Existing reference, Alignment: right\n\t\tentry = { id: 'c', alignment: StatusbarAlignment.RIGHT, name: '3', priority: { primary: { id: 'a', alignment: StatusbarAlignment.RIGHT }, secondary: 1 }, container, labelContainer: container, hasCommand: false };\n\t\tmodel.add(entry);\n\n\t\tentries = model.entries;\n\t\tassert.strictEqual(entries.length, 3);\n\t\tassert.strictEqual(entries[0].id, 'a');\n\t\tassert.strictEqual(entries[1].id, 'c');\n\t\tassert.strictEqual(entries[2].id, 'b');\n\t});\n\n\ttest('entry with reference to other entry (nonexistent)', () => {\n\t\tconst container = document.createElement('div');\n\t\tconst model = disposables.add(new StatusbarViewModel(disposables.add(new TestStorageService())));\n\n\t\t// Nonexistent reference, Alignment: left\n\t\tmodel.add({ id: 'a', alignment: StatusbarAlignment.LEFT, name: '1', priority: { primary: 2, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\t\tmodel.add({ id: 'b', alignment: StatusbarAlignment.LEFT, name: '2', priority: { primary: 1, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\n\t\tlet entry = { id: 'c', alignment: StatusbarAlignment.LEFT, name: '3', priority: { primary: { id: 'not-existing', alignment: StatusbarAlignment.LEFT }, secondary: 1 }, container, labelContainer: container, hasCommand: false };\n\t\tmodel.add(entry);\n\n\t\tlet entries = model.entries;\n\t\tassert.strictEqual(entries.length, 3);\n\t\tassert.strictEqual(entries[0].id, 'a');\n\t\tassert.strictEqual(entries[1].id, 'b');\n\t\tassert.strictEqual(entries[2].id, 'c');\n\n\t\tmodel.remove(entry);\n\n\t\t// Nonexistent reference, Alignment: right\n\t\tentry = { id: 'c', alignment: StatusbarAlignment.RIGHT, name: '3', priority: { primary: { id: 'not-existing', alignment: StatusbarAlignment.RIGHT }, secondary: 1 }, container, labelContainer: container, hasCommand: false };\n\t\tmodel.add(entry);\n\n\t\tentries = model.entries;\n\t\tassert.strictEqual(entries.length, 3);\n\t\tassert.strictEqual(entries[0].id, 'a');\n\t\tassert.strictEqual(entries[1].id, 'b');\n\t\tassert.strictEqual(entries[2].id, 'c');\n\t});\n\n\ttest('entry with reference to other entry resorts based on other entry being there or not', () => {\n\t\tconst container = document.createElement('div');\n\t\tconst model = disposables.add(new StatusbarViewModel(disposables.add(new TestStorageService())));\n\n\t\tmodel.add({ id: 'a', alignment: StatusbarAlignment.LEFT, name: '1', priority: { primary: 2, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\t\tmodel.add({ id: 'b', alignment: StatusbarAlignment.LEFT, name: '2', priority: { primary: 1, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\t\tmodel.add({ id: 'c', alignment: StatusbarAlignment.LEFT, name: '3', priority: { primary: { id: 'not-existing', alignment: StatusbarAlignment.LEFT }, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\n\t\tlet entries = model.entries;\n\t\tassert.strictEqual(entries.length, 3);\n\t\tassert.strictEqual(entries[0].id, 'a');\n\t\tassert.strictEqual(entries[1].id, 'b');\n\t\tassert.strictEqual(entries[2].id, 'c');\n\n\t\tconst entry = { id: 'not-existing', alignment: StatusbarAlignment.LEFT, name: 'not-existing', priority: { primary: 3, secondary: 1 }, container, labelContainer: container, hasCommand: false };\n\t\tmodel.add(entry);\n\n\t\tentries = model.entries;\n\t\tassert.strictEqual(entries.length, 4);\n\t\tassert.strictEqual(entries[0].id, 'c');\n\t\tassert.strictEqual(entries[1].id, 'not-existing');\n\t\tassert.strictEqual(entries[2].id, 'a');\n\t\tassert.strictEqual(entries[3].id, 'b');\n\n\t\tmodel.remove(entry);\n\n\t\tentries = model.entries;\n\t\tassert.strictEqual(entries.length, 3);\n\t\tassert.strictEqual(entries[0].id, 'a');\n\t\tassert.strictEqual(entries[1].id, 'b');\n\t\tassert.strictEqual(entries[2].id, 'c');\n\t});\n\n\ttest('entry with reference to other entry but different alignment does not explode', () => {\n\t\tconst container = document.createElement('div');\n\t\tconst model = disposables.add(new StatusbarViewModel(disposables.add(new TestStorageService())));\n\n\t\tmodel.add({ id: '1-left', alignment: StatusbarAlignment.LEFT, name: '1-left', priority: { primary: 2, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\t\tmodel.add({ id: '2-left', alignment: StatusbarAlignment.LEFT, name: '2-left', priority: { primary: 1, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\n\t\tmodel.add({ id: '1-right', alignment: StatusbarAlignment.RIGHT, name: '1-right', priority: { primary: 2, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\t\tmodel.add({ id: '2-right', alignment: StatusbarAlignment.RIGHT, name: '2-right', priority: { primary: 1, secondary: 1 }, container, labelContainer: container, hasCommand: false });\n\n\t\tassert.strictEqual(model.getEntries(StatusbarAlignment.LEFT).length, 2);\n\t\tassert.strictEqual(model.getEntries(StatusbarAlignment.RIGHT).length, 2);\n\n\t\tconst relativeEntryLeft = { id: 'relative', alignment: StatusbarAlignment.LEFT, name: 'relative', priority: { primary: { id: '1-right', alignment: StatusbarAlignment.LEFT }, secondary: 1 }, container, labelContainer: container, hasCommand: false };\n\t\tmodel.add(relativeEntryLeft);\n\n\t\tassert.strictEqual(model.getEntries(StatusbarAlignment.LEFT).length, 3);\n\t\tassert.strictEqual(model.getEntries(StatusbarAlignment.LEFT)[2], relativeEntryLeft);\n\t\tassert.strictEqual(model.getEntries(StatusbarAlignment.RIGHT).length, 2);\n\n\t\tmodel.remove(relativeEntryLeft);\n\n\t\tconst relativeEntryRight = { id: 'relative', alignment: StatusbarAlignment.RIGHT, name: 'relative', priority: { primary: { id: '1-right', alignment: StatusbarAlignment.LEFT }, secondary: 1 }, container, labelContainer: container, hasCommand: false };\n\t\tmodel.add(relativeEntryRight);\n\n\t\tassert.strictEqual(model.getEntries(StatusbarAlignment.LEFT).length, 2);\n\t\tassert.strictEqual(model.getEntries(StatusbarAlignment.RIGHT).length, 3);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}