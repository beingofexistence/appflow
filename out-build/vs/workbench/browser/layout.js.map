{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/browser/layout.ts"],"names":[],"mappings":"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","file":"layout.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { EventType, addDisposableListener, getClientArea, Dimension, position, size, IDimension, isAncestorUsingFlowTo, computeScreenAwareSize } from 'vs/base/browser/dom';\nimport { onDidChangeFullscreen, isFullscreen, isWCOEnabled } from 'vs/base/browser/browser';\nimport { IWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/common/workingCopyBackup';\nimport { isWindows, isLinux, isMacintosh, isWeb, isNative, isIOS } from 'vs/base/common/platform';\nimport { EditorInputCapabilities, GroupIdentifier, isResourceEditorInput, IUntypedEditorInput, pathsToEditors } from 'vs/workbench/common/editor';\nimport { SidebarPart } from 'vs/workbench/browser/parts/sidebar/sidebarPart';\nimport { PanelPart } from 'vs/workbench/browser/parts/panel/panelPart';\nimport { Position, Parts, PanelOpensMaximizedOptions, IWorkbenchLayoutService, positionFromString, positionToString, panelOpensMaximizedFromString, PanelAlignment } from 'vs/workbench/services/layout/browser/layoutService';\nimport { isTemporaryWorkspace, IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IStorageService, StorageScope, StorageTarget, WillSaveStateReason } from 'vs/platform/storage/common/storage';\nimport { IConfigurationChangeEvent, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITitleService } from 'vs/workbench/services/title/common/titleService';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { StartupKind, ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { getTitleBarStyle, getMenuBarVisibility, IPath } from 'vs/platform/window/common/window';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IEditor } from 'vs/editor/common/editorCommon';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { EditorGroupLayout, GroupsOrder, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { SerializableGrid, ISerializableView, ISerializedGrid, Orientation, ISerializedNode, ISerializedLeafNode, Direction, IViewSize, Sizing } from 'vs/base/browser/ui/grid/grid';\nimport { Part } from 'vs/workbench/browser/part';\nimport { IStatusbarService } from 'vs/workbench/services/statusbar/browser/statusbar';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { WINDOW_ACTIVE_BORDER, WINDOW_INACTIVE_BORDER } from 'vs/workbench/common/theme';\nimport { LineNumbersType } from 'vs/editor/common/config/editorOptions';\nimport { URI } from 'vs/base/common/uri';\nimport { IViewDescriptorService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { mark } from 'vs/base/common/performance';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { DeferredPromise, Promises } from 'vs/base/common/async';\nimport { IBannerService } from 'vs/workbench/services/banner/browser/bannerService';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { ActivitybarPart } from 'vs/workbench/browser/parts/activitybar/activitybarPart';\nimport { AuxiliaryBarPart } from 'vs/workbench/browser/parts/auxiliarybar/auxiliaryBarPart';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\n//#region Layout Implementation\n\ninterface ILayoutRuntimeState {\n\tfullscreen: boolean;\n\tmaximized: boolean;\n\thasFocus: boolean;\n\twindowBorder: boolean;\n\treadonly menuBar: {\n\t\ttoggled: boolean;\n\t};\n\treadonly zenMode: {\n\t\treadonly transitionDisposables: DisposableStore;\n\t};\n}\n\ninterface IEditorToOpen {\n\treadonly editor: IUntypedEditorInput;\n\treadonly viewColumn?: number;\n}\n\ninterface ILayoutInitializationState {\n\treadonly views: {\n\t\treadonly defaults: string[] | undefined;\n\t\treadonly containerToRestore: {\n\t\t\tsideBar?: string;\n\t\t\tpanel?: string;\n\t\t\tauxiliaryBar?: string;\n\t\t};\n\t};\n\treadonly editor: {\n\t\treadonly restoreEditors: boolean;\n\t\treadonly editorsToOpen: Promise<IEditorToOpen[]>;\n\t};\n\treadonly layout?: {\n\t\treadonly editors?: EditorGroupLayout;\n\t};\n}\n\ninterface ILayoutState {\n\treadonly runtime: ILayoutRuntimeState;\n\treadonly initialization: ILayoutInitializationState;\n}\n\nenum LayoutClasses {\n\tSIDEBAR_HIDDEN = 'nosidebar',\n\tEDITOR_HIDDEN = 'noeditorarea',\n\tPANEL_HIDDEN = 'nopanel',\n\tAUXILIARYBAR_HIDDEN = 'noauxiliarybar',\n\tSTATUSBAR_HIDDEN = 'nostatusbar',\n\tFULLSCREEN = 'fullscreen',\n\tMAXIMIZED = 'maximized',\n\tWINDOW_BORDER = 'border'\n}\n\ninterface IPathToOpen extends IPath {\n\treadonly viewColumn?: number;\n}\n\ninterface IInitialEditorsState {\n\treadonly filesToOpenOrCreate?: IPathToOpen[];\n\treadonly filesToDiff?: IPathToOpen[];\n\treadonly filesToMerge?: IPathToOpen[];\n\n\treadonly layout?: EditorGroupLayout;\n}\n\nexport abstract class Layout extends Disposable implements IWorkbenchLayoutService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t//#region Events\n\n\tprivate readonly _onDidChangeZenMode = this._register(new Emitter<boolean>());\n\treadonly onDidChangeZenMode = this._onDidChangeZenMode.event;\n\n\tprivate readonly _onDidChangeFullscreen = this._register(new Emitter<boolean>());\n\treadonly onDidChangeFullscreen = this._onDidChangeFullscreen.event;\n\n\tprivate readonly _onDidChangeCenteredLayout = this._register(new Emitter<boolean>());\n\treadonly onDidChangeCenteredLayout = this._onDidChangeCenteredLayout.event;\n\n\tprivate readonly _onDidChangePanelAlignment = this._register(new Emitter<PanelAlignment>());\n\treadonly onDidChangePanelAlignment = this._onDidChangePanelAlignment.event;\n\n\tprivate readonly _onDidChangeWindowMaximized = this._register(new Emitter<boolean>());\n\treadonly onDidChangeWindowMaximized = this._onDidChangeWindowMaximized.event;\n\n\tprivate readonly _onDidChangePanelPosition = this._register(new Emitter<string>());\n\treadonly onDidChangePanelPosition = this._onDidChangePanelPosition.event;\n\n\tprivate readonly _onDidChangePartVisibility = this._register(new Emitter<void>());\n\treadonly onDidChangePartVisibility = this._onDidChangePartVisibility.event;\n\n\tprivate readonly _onDidChangeNotificationsVisibility = this._register(new Emitter<boolean>());\n\treadonly onDidChangeNotificationsVisibility = this._onDidChangeNotificationsVisibility.event;\n\n\tprivate readonly _onDidLayout = this._register(new Emitter<IDimension>());\n\treadonly onDidLayout = this._onDidLayout.event;\n\n\t//#endregion\n\n\t//#region Properties\n\n\treadonly hasContainer = true;\n\treadonly container = document.createElement('div');\n\n\tprivate _dimension!: IDimension;\n\tget dimension(): IDimension { return this._dimension; }\n\n\tget offset() {\n\t\tlet top = 0;\n\t\tlet quickPickTop = 0;\n\t\tif (this.isVisible(Parts.BANNER_PART)) {\n\t\t\ttop = this.getPart(Parts.BANNER_PART).maximumHeight;\n\t\t\tquickPickTop = top;\n\t\t}\n\t\tif (this.isVisible(Parts.TITLEBAR_PART)) {\n\t\t\ttop += this.getPart(Parts.TITLEBAR_PART).maximumHeight;\n\t\t\tquickPickTop = top;\n\t\t}\n\t\t// If the command center is visible then the quickinput should go over the title bar and the banner\n\t\tif (this.titleService.isCommandCenterVisible) {\n\t\t\tquickPickTop = 6;\n\t\t}\n\t\treturn { top, quickPickTop };\n\t}\n\n\t//#endregion\n\n\tprivate readonly parts = new Map<string, Part>();\n\n\tprivate initialized = false;\n\tprivate workbenchGrid!: SerializableGrid<ISerializableView>;\n\n\tprivate titleBarPartView!: ISerializableView;\n\tprivate bannerPartView!: ISerializableView;\n\tprivate activityBarPartView!: ISerializableView;\n\tprivate sideBarPartView!: ISerializableView;\n\tprivate panelPartView!: ISerializableView;\n\tprivate auxiliaryBarPartView!: ISerializableView;\n\tprivate editorPartView!: ISerializableView;\n\tprivate statusBarPartView!: ISerializableView;\n\n\tprivate environmentService!: IBrowserWorkbenchEnvironmentService;\n\tprivate extensionService!: IExtensionService;\n\tprivate configurationService!: IConfigurationService;\n\tprivate storageService!: IStorageService;\n\tprivate hostService!: IHostService;\n\tprivate editorService!: IEditorService;\n\tprivate editorGroupService!: IEditorGroupsService;\n\tprivate paneCompositeService!: IPaneCompositePartService;\n\tprivate titleService!: ITitleService;\n\tprivate viewDescriptorService!: IViewDescriptorService;\n\tprivate contextService!: IWorkspaceContextService;\n\tprivate workingCopyBackupService!: IWorkingCopyBackupService;\n\tprivate notificationService!: INotificationService;\n\tprivate themeService!: IThemeService;\n\tprivate statusBarService!: IStatusbarService;\n\tprivate logService!: ILogService;\n\tprivate telemetryService!: ITelemetryService;\n\n\tprivate state!: ILayoutState;\n\tprivate stateModel!: LayoutStateModel;\n\n\tprivate disposed = false;\n\n\tconstructor(\n\t\tprotected readonly parent: HTMLElement\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected initLayout(accessor: ServicesAccessor): void {\n\n\t\t// Services\n\t\tthis.environmentService = accessor.get(IBrowserWorkbenchEnvironmentService);\n\t\tthis.configurationService = accessor.get(IConfigurationService);\n\t\tthis.hostService = accessor.get(IHostService);\n\t\tthis.contextService = accessor.get(IWorkspaceContextService);\n\t\tthis.storageService = accessor.get(IStorageService);\n\t\tthis.workingCopyBackupService = accessor.get(IWorkingCopyBackupService);\n\t\tthis.themeService = accessor.get(IThemeService);\n\t\tthis.extensionService = accessor.get(IExtensionService);\n\t\tthis.logService = accessor.get(ILogService);\n\t\tthis.telemetryService = accessor.get(ITelemetryService);\n\n\t\t// Parts\n\t\tthis.editorService = accessor.get(IEditorService);\n\t\tthis.editorGroupService = accessor.get(IEditorGroupsService);\n\t\tthis.paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tthis.viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\tthis.titleService = accessor.get(ITitleService);\n\t\tthis.notificationService = accessor.get(INotificationService);\n\t\tthis.statusBarService = accessor.get(IStatusbarService);\n\t\taccessor.get(IBannerService);\n\n\t\t// Listeners\n\t\tthis.registerLayoutListeners();\n\n\t\t// State\n\t\tthis.initLayoutState(accessor.get(ILifecycleService), accessor.get(IFileService));\n\t}\n\n\tprivate registerLayoutListeners(): void {\n\n\t\t// Restore editor if hidden\n\t\tconst showEditorIfHidden = () => {\n\t\t\tif (!this.isVisible(Parts.EDITOR_PART)) {\n\t\t\t\tthis.toggleMaximizedPanel();\n\t\t\t}\n\t\t};\n\n\t\t// Wait to register these listeners after the editor group service\n\t\t// is ready to avoid conflicts on startup\n\t\tthis.editorGroupService.whenRestored.then(() => {\n\n\t\t\t// Restore editor part on any editor change\n\t\t\tthis._register(this.editorService.onDidVisibleEditorsChange(showEditorIfHidden));\n\t\t\tthis._register(this.editorGroupService.onDidActivateGroup(showEditorIfHidden));\n\n\t\t\t// Revalidate center layout when active editor changes: diff editor quits centered mode.\n\t\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.centerEditorLayout(this.stateModel.getRuntimeValue(LayoutStateKeys.EDITOR_CENTERED))));\n\t\t});\n\n\t\t// Configuration changes\n\t\tthis._register(this.configurationService.onDidChangeConfiguration((e) => {\n\t\t\tif ([\n\t\t\t\tLegacyWorkbenchLayoutSettings.ACTIVITYBAR_VISIBLE,\n\t\t\t\tLegacyWorkbenchLayoutSettings.SIDEBAR_POSITION,\n\t\t\t\tLegacyWorkbenchLayoutSettings.STATUSBAR_VISIBLE,\n\t\t\t\t'window.menuBarVisibility',\n\t\t\t\t'window.titleBarStyle',\n\t\t\t].some(setting => e.affectsConfiguration(setting))) {\n\t\t\t\tthis.doUpdateLayoutConfiguration();\n\t\t\t}\n\t\t}));\n\n\t\t// Title Menu changes\n\t\tthis._register(this.titleService.onDidChangeCommandCenterVisibility(() => this.doUpdateLayoutConfiguration()));\n\n\t\t// Fullscreen changes\n\t\tthis._register(onDidChangeFullscreen(() => this.onFullscreenChanged()));\n\n\t\t// Group changes\n\t\tthis._register(this.editorGroupService.onDidAddGroup(() => this.centerEditorLayout(this.stateModel.getRuntimeValue(LayoutStateKeys.EDITOR_CENTERED))));\n\t\tthis._register(this.editorGroupService.onDidRemoveGroup(() => this.centerEditorLayout(this.stateModel.getRuntimeValue(LayoutStateKeys.EDITOR_CENTERED))));\n\n\t\t// Prevent workbench from scrolling #55456\n\t\tthis._register(addDisposableListener(this.container, EventType.SCROLL, () => this.container.scrollTop = 0));\n\n\t\t// Menubar visibility changes\n\t\tif ((isWindows || isLinux || isWeb) && getTitleBarStyle(this.configurationService) === 'custom') {\n\t\t\tthis._register(this.titleService.onMenubarVisibilityChange(visible => this.onMenubarToggled(visible)));\n\t\t}\n\n\t\t// Theme changes\n\t\tthis._register(this.themeService.onDidColorThemeChange(() => this.updateStyles()));\n\n\t\t// Window focus changes\n\t\tthis._register(this.hostService.onDidChangeFocus(e => this.onWindowFocusChanged(e)));\n\n\t\t// WCO changes\n\t\tif (isWeb && typeof (navigator as any).windowControlsOverlay === 'object') {\n\t\t\tthis._register(addDisposableListener((navigator as any).windowControlsOverlay, 'geometrychange', () => this.onDidChangeWCO()));\n\t\t}\n\t}\n\n\tprivate onMenubarToggled(visible: boolean): void {\n\t\tif (visible !== this.state.runtime.menuBar.toggled) {\n\t\t\tthis.state.runtime.menuBar.toggled = visible;\n\n\t\t\tconst menuBarVisibility = getMenuBarVisibility(this.configurationService);\n\n\t\t\t// The menu bar toggles the title bar in web because it does not need to be shown for window controls only\n\t\t\tif (isWeb && menuBarVisibility === 'toggle') {\n\t\t\t\tthis.workbenchGrid.setViewVisible(this.titleBarPartView, this.shouldShowTitleBar());\n\t\t\t}\n\n\t\t\t// The menu bar toggles the title bar in full screen for toggle and classic settings\n\t\t\telse if (this.state.runtime.fullscreen && (menuBarVisibility === 'toggle' || menuBarVisibility === 'classic')) {\n\t\t\t\tthis.workbenchGrid.setViewVisible(this.titleBarPartView, this.shouldShowTitleBar());\n\t\t\t}\n\n\t\t\t// Move layout call to any time the menubar\n\t\t\t// is toggled to update consumers of offset\n\t\t\t// see issue #115267\n\t\t\tthis._onDidLayout.fire(this._dimension);\n\t\t}\n\t}\n\n\tprivate onFullscreenChanged(): void {\n\t\tthis.state.runtime.fullscreen = isFullscreen();\n\n\t\t// Apply as CSS class\n\t\tif (this.state.runtime.fullscreen) {\n\t\t\tthis.container.classList.add(LayoutClasses.FULLSCREEN);\n\t\t} else {\n\t\t\tthis.container.classList.remove(LayoutClasses.FULLSCREEN);\n\n\t\t\tconst zenModeExitInfo = this.stateModel.getRuntimeValue(LayoutStateKeys.ZEN_MODE_EXIT_INFO);\n\t\t\tconst zenModeActive = this.stateModel.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE);\n\t\t\tif (zenModeExitInfo.transitionedToFullScreen && zenModeActive) {\n\t\t\t\tthis.toggleZenMode();\n\t\t\t}\n\t\t}\n\n\t\t// Change edge snapping accordingly\n\t\tthis.workbenchGrid.edgeSnapping = this.state.runtime.fullscreen;\n\n\t\t// Changing fullscreen state of the window has an impact\n\t\t// on custom title bar visibility, so we need to update\n\t\tif (getTitleBarStyle(this.configurationService) === 'custom') {\n\n\t\t\t// Propagate to grid\n\t\t\tthis.workbenchGrid.setViewVisible(this.titleBarPartView, this.shouldShowTitleBar());\n\n\t\t\tthis.updateWindowBorder(true);\n\t\t}\n\n\t\tthis._onDidChangeFullscreen.fire(this.state.runtime.fullscreen);\n\t}\n\n\tprivate onWindowFocusChanged(hasFocus: boolean): void {\n\t\tif (this.state.runtime.hasFocus === hasFocus) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.runtime.hasFocus = hasFocus;\n\t\tthis.updateWindowBorder();\n\t}\n\n\tprivate doUpdateLayoutConfiguration(skipLayout?: boolean): void {\n\n\t\t// Menubar visibility\n\t\tthis.updateMenubarVisibility(!!skipLayout);\n\n\t\t// Centered Layout\n\t\tthis.editorGroupService.whenRestored.then(() => {\n\t\t\tthis.centerEditorLayout(this.stateModel.getRuntimeValue(LayoutStateKeys.EDITOR_CENTERED), skipLayout);\n\t\t});\n\t}\n\n\tprivate setSideBarPosition(position: Position): void {\n\t\tconst activityBar = this.getPart(Parts.ACTIVITYBAR_PART);\n\t\tconst sideBar = this.getPart(Parts.SIDEBAR_PART);\n\t\tconst auxiliaryBar = this.getPart(Parts.AUXILIARYBAR_PART);\n\t\tconst newPositionValue = (position === Position.LEFT) ? 'left' : 'right';\n\t\tconst oldPositionValue = (position === Position.RIGHT) ? 'left' : 'right';\n\t\tconst panelAlignment = this.getPanelAlignment();\n\t\tconst panelPosition = this.getPanelPosition();\n\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.SIDEBAR_POSITON, position);\n\n\t\t// Adjust CSS\n\t\tconst activityBarContainer = assertIsDefined(activityBar.getContainer());\n\t\tconst sideBarContainer = assertIsDefined(sideBar.getContainer());\n\t\tconst auxiliaryBarContainer = assertIsDefined(auxiliaryBar.getContainer());\n\t\tactivityBarContainer.classList.remove(oldPositionValue);\n\t\tsideBarContainer.classList.remove(oldPositionValue);\n\t\tactivityBarContainer.classList.add(newPositionValue);\n\t\tsideBarContainer.classList.add(newPositionValue);\n\n\t\t// Auxiliary Bar has opposite values\n\t\tauxiliaryBarContainer.classList.remove(newPositionValue);\n\t\tauxiliaryBarContainer.classList.add(oldPositionValue);\n\n\t\t// Update Styles\n\t\tactivityBar.updateStyles();\n\t\tsideBar.updateStyles();\n\t\tauxiliaryBar.updateStyles();\n\n\t\t// Move activity bar and side bars\n\t\tthis.adjustPartPositions(position, panelAlignment, panelPosition);\n\t}\n\n\tprivate updateWindowBorder(skipLayout: boolean = false) {\n\t\tif (\n\t\t\tisWeb ||\n\t\t\tisWindows || // not working well with zooming and window control overlays\n\t\t\tgetTitleBarStyle(this.configurationService) !== 'custom'\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst theme = this.themeService.getColorTheme();\n\n\t\tconst activeBorder = theme.getColor(WINDOW_ACTIVE_BORDER);\n\t\tconst inactiveBorder = theme.getColor(WINDOW_INACTIVE_BORDER);\n\n\t\tlet windowBorder = false;\n\t\tif (!this.state.runtime.fullscreen && !this.state.runtime.maximized && (activeBorder || inactiveBorder)) {\n\t\t\twindowBorder = true;\n\n\t\t\t// If the inactive color is missing, fallback to the active one\n\t\t\tconst borderColor = this.state.runtime.hasFocus ? activeBorder : inactiveBorder ?? activeBorder;\n\t\t\tthis.container.style.setProperty('--window-border-color', borderColor?.toString() ?? 'transparent');\n\t\t}\n\n\t\tif (windowBorder === this.state.runtime.windowBorder) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.runtime.windowBorder = windowBorder;\n\n\t\tthis.container.classList.toggle(LayoutClasses.WINDOW_BORDER, windowBorder);\n\n\t\tif (!skipLayout) {\n\t\t\tthis.layout();\n\t\t}\n\t}\n\n\tprivate updateStyles() {\n\t\tthis.updateWindowBorder();\n\t}\n\n\tprivate initLayoutState(lifecycleService: ILifecycleService, fileService: IFileService): void {\n\t\tthis.stateModel = new LayoutStateModel(this.storageService, this.configurationService, this.contextService, this.parent);\n\t\tthis.stateModel.load();\n\n\t\t// Both editor and panel should not be hidden on startup\n\t\tif (this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_HIDDEN) && this.stateModel.getRuntimeValue(LayoutStateKeys.EDITOR_HIDDEN)) {\n\t\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.EDITOR_HIDDEN, false);\n\t\t}\n\n\t\tthis.stateModel.onDidChangeState(change => {\n\t\t\tif (change.key === LayoutStateKeys.ACTIVITYBAR_HIDDEN) {\n\t\t\t\tthis.setActivityBarHidden(change.value as boolean);\n\t\t\t}\n\n\t\t\tif (change.key === LayoutStateKeys.STATUSBAR_HIDDEN) {\n\t\t\t\tthis.setStatusBarHidden(change.value as boolean);\n\t\t\t}\n\n\t\t\tif (change.key === LayoutStateKeys.SIDEBAR_POSITON) {\n\t\t\t\tthis.setSideBarPosition(change.value as Position);\n\t\t\t}\n\n\t\t\tif (change.key === LayoutStateKeys.PANEL_POSITION) {\n\t\t\t\tthis.setPanelPosition(change.value as Position);\n\t\t\t}\n\n\t\t\tif (change.key === LayoutStateKeys.PANEL_ALIGNMENT) {\n\t\t\t\tthis.setPanelAlignment(change.value as PanelAlignment);\n\t\t\t}\n\n\t\t\tthis.doUpdateLayoutConfiguration();\n\t\t});\n\n\t\t// Layout Initialization State\n\t\tconst initialEditorsState = this.getInitialEditorsState();\n\t\tif (initialEditorsState) {\n\t\t\tthis.logService.info('Initial editor state', initialEditorsState);\n\t\t}\n\t\tconst initialLayoutState: ILayoutInitializationState = {\n\t\t\tlayout: {\n\t\t\t\teditors: initialEditorsState?.layout\n\t\t\t},\n\t\t\teditor: {\n\t\t\t\trestoreEditors: this.shouldRestoreEditors(this.contextService, initialEditorsState),\n\t\t\t\teditorsToOpen: this.resolveEditorsToOpen(fileService, initialEditorsState),\n\t\t\t},\n\t\t\tviews: {\n\t\t\t\tdefaults: this.getDefaultLayoutViews(this.environmentService, this.storageService),\n\t\t\t\tcontainerToRestore: {}\n\t\t\t}\n\t\t};\n\n\t\t// Layout Runtime State\n\t\tconst layoutRuntimeState: ILayoutRuntimeState = {\n\t\t\tfullscreen: isFullscreen(),\n\t\t\thasFocus: this.hostService.hasFocus,\n\t\t\tmaximized: false,\n\t\t\twindowBorder: false,\n\t\t\tmenuBar: {\n\t\t\t\ttoggled: false,\n\t\t\t},\n\t\t\tzenMode: {\n\t\t\t\ttransitionDisposables: new DisposableStore(),\n\t\t\t}\n\t\t};\n\n\t\tthis.state = {\n\t\t\tinitialization: initialLayoutState,\n\t\t\truntime: layoutRuntimeState,\n\t\t};\n\n\t\t// Sidebar View Container To Restore\n\t\tif (this.isVisible(Parts.SIDEBAR_PART)) {\n\n\t\t\t// Only restore last viewlet if window was reloaded or we are in development mode\n\t\t\tlet viewContainerToRestore: string | undefined;\n\t\t\tif (!this.environmentService.isBuilt || lifecycleService.startupKind === StartupKind.ReloadedWindow || isWeb) {\n\t\t\t\tviewContainerToRestore = this.storageService.get(SidebarPart.activeViewletSettingsKey, StorageScope.WORKSPACE, this.viewDescriptorService.getDefaultViewContainer(ViewContainerLocation.Sidebar)?.id);\n\t\t\t} else {\n\t\t\t\tviewContainerToRestore = this.viewDescriptorService.getDefaultViewContainer(ViewContainerLocation.Sidebar)?.id;\n\t\t\t}\n\n\t\t\tif (viewContainerToRestore) {\n\t\t\t\tthis.state.initialization.views.containerToRestore.sideBar = viewContainerToRestore;\n\t\t\t} else {\n\t\t\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.SIDEBAR_HIDDEN, true);\n\t\t\t}\n\t\t}\n\n\t\t// Panel View Container To Restore\n\t\tif (this.isVisible(Parts.PANEL_PART)) {\n\t\t\tconst viewContainerToRestore = this.storageService.get(PanelPart.activePanelSettingsKey, StorageScope.WORKSPACE, this.viewDescriptorService.getDefaultViewContainer(ViewContainerLocation.Panel)?.id);\n\n\t\t\tif (viewContainerToRestore) {\n\t\t\t\tthis.state.initialization.views.containerToRestore.panel = viewContainerToRestore;\n\t\t\t} else {\n\t\t\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.PANEL_HIDDEN, true);\n\t\t\t}\n\t\t}\n\n\t\t// Auxiliary Panel to restore\n\t\tif (this.isVisible(Parts.AUXILIARYBAR_PART)) {\n\t\t\tconst viewContainerToRestore = this.storageService.get(AuxiliaryBarPart.activePanelSettingsKey, StorageScope.WORKSPACE, this.viewDescriptorService.getDefaultViewContainer(ViewContainerLocation.AuxiliaryBar)?.id);\n\n\t\t\tif (viewContainerToRestore) {\n\t\t\t\tthis.state.initialization.views.containerToRestore.auxiliaryBar = viewContainerToRestore;\n\t\t\t} else {\n\t\t\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.AUXILIARYBAR_HIDDEN, true);\n\t\t\t}\n\t\t}\n\n\t\t// Window border\n\t\tthis.updateWindowBorder(true);\n\t}\n\n\tprivate getDefaultLayoutViews(environmentService: IBrowserWorkbenchEnvironmentService, storageService: IStorageService): string[] | undefined {\n\t\tconst defaultLayout = environmentService.options?.defaultLayout;\n\t\tif (!defaultLayout) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!defaultLayout.force && !storageService.isNew(StorageScope.WORKSPACE)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst { views } = defaultLayout;\n\t\tif (views?.length) {\n\t\t\treturn views.map(view => view.id);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate shouldRestoreEditors(contextService: IWorkspaceContextService, initialEditorsState: IInitialEditorsState | undefined): boolean {\n\n\t\t// Restore editors based on a set of rules:\n\t\t// - never when running on temporary workspace\n\t\t// - not when we have files to open, unless:\n\t\t// - always when `window.restoreWindows: preserve`\n\n\t\tif (isTemporaryWorkspace(contextService.getWorkspace())) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst forceRestoreEditors = this.configurationService.getValue<string>('window.restoreWindows') === 'preserve';\n\t\treturn !!forceRestoreEditors || initialEditorsState === undefined;\n\t}\n\n\tprotected willRestoreEditors(): boolean {\n\t\treturn this.state.initialization.editor.restoreEditors;\n\t}\n\n\tprivate async resolveEditorsToOpen(fileService: IFileService, initialEditorsState: IInitialEditorsState | undefined): Promise<IEditorToOpen[]> {\n\t\tif (initialEditorsState) {\n\n\t\t\t// Merge editor (single)\n\t\t\tconst filesToMerge = coalesce(await pathsToEditors(initialEditorsState.filesToMerge, fileService, this.logService));\n\t\t\tif (filesToMerge.length === 4 && isResourceEditorInput(filesToMerge[0]) && isResourceEditorInput(filesToMerge[1]) && isResourceEditorInput(filesToMerge[2]) && isResourceEditorInput(filesToMerge[3])) {\n\t\t\t\treturn [{\n\t\t\t\t\teditor: {\n\t\t\t\t\t\tinput1: { resource: filesToMerge[0].resource },\n\t\t\t\t\t\tinput2: { resource: filesToMerge[1].resource },\n\t\t\t\t\t\tbase: { resource: filesToMerge[2].resource },\n\t\t\t\t\t\tresult: { resource: filesToMerge[3].resource },\n\t\t\t\t\t\toptions: { pinned: true }\n\t\t\t\t\t}\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\t// Diff editor (single)\n\t\t\tconst filesToDiff = coalesce(await pathsToEditors(initialEditorsState.filesToDiff, fileService, this.logService));\n\t\t\tif (filesToDiff.length === 2) {\n\t\t\t\treturn [{\n\t\t\t\t\teditor: {\n\t\t\t\t\t\toriginal: { resource: filesToDiff[0].resource },\n\t\t\t\t\t\tmodified: { resource: filesToDiff[1].resource },\n\t\t\t\t\t\toptions: { pinned: true }\n\t\t\t\t\t}\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\t// Normal editor (multiple)\n\t\t\tconst filesToOpenOrCreate: IEditorToOpen[] = [];\n\t\t\tconst resolvedFilesToOpenOrCreate = await pathsToEditors(initialEditorsState.filesToOpenOrCreate, fileService, this.logService);\n\t\t\tfor (let i = 0; i < resolvedFilesToOpenOrCreate.length; i++) {\n\t\t\t\tconst resolvedFileToOpenOrCreate = resolvedFilesToOpenOrCreate[i];\n\t\t\t\tif (resolvedFileToOpenOrCreate) {\n\t\t\t\t\tfilesToOpenOrCreate.push({\n\t\t\t\t\t\teditor: resolvedFileToOpenOrCreate,\n\t\t\t\t\t\tviewColumn: initialEditorsState.filesToOpenOrCreate?.[i].viewColumn // take over `viewColumn` from initial state\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn filesToOpenOrCreate;\n\t\t}\n\n\t\t// Empty workbench configured to open untitled file if empty\n\t\telse if (this.contextService.getWorkbenchState() === WorkbenchState.EMPTY && this.configurationService.getValue('workbench.startupEditor') === 'newUntitledFile') {\n\t\t\tif (this.editorGroupService.hasRestorableState) {\n\t\t\t\treturn []; // do not open any empty untitled file if we restored groups/editors from previous session\n\t\t\t}\n\n\t\t\tconst hasBackups = await this.workingCopyBackupService.hasBackups();\n\t\t\tif (hasBackups) {\n\t\t\t\treturn []; // do not open any empty untitled file if we have backups to restore\n\t\t\t}\n\n\t\t\treturn [{\n\t\t\t\teditor: { resource: undefined } // open empty untitled file\n\t\t\t}];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate _openedDefaultEditors: boolean = false;\n\tget openedDefaultEditors() { return this._openedDefaultEditors; }\n\n\tprivate getInitialEditorsState(): IInitialEditorsState | undefined {\n\n\t\t// Check for editors / editor layout from `defaultLayout` options first\n\t\tconst defaultLayout = this.environmentService.options?.defaultLayout;\n\t\tif ((defaultLayout?.editors?.length || defaultLayout?.layout?.editors) && (defaultLayout.force || this.storageService.isNew(StorageScope.WORKSPACE))) {\n\t\t\tthis._openedDefaultEditors = true;\n\n\t\t\treturn {\n\t\t\t\tlayout: defaultLayout.layout?.editors,\n\t\t\t\tfilesToOpenOrCreate: defaultLayout?.editors?.map(editor => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tviewColumn: editor.viewColumn,\n\t\t\t\t\t\tfileUri: URI.revive(editor.uri),\n\t\t\t\t\t\topenOnlyIfExists: editor.openOnlyIfExists,\n\t\t\t\t\t\toptions: editor.options\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t};\n\t\t}\n\n\t\t// Then check for files to open, create or diff/merge from main side\n\t\tconst { filesToOpenOrCreate, filesToDiff, filesToMerge } = this.environmentService;\n\t\tif (filesToOpenOrCreate || filesToDiff || filesToMerge) {\n\t\t\treturn { filesToOpenOrCreate, filesToDiff, filesToMerge };\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate readonly whenReadyPromise = new DeferredPromise<void>();\n\tprotected readonly whenReady = this.whenReadyPromise.p;\n\n\tprivate readonly whenRestoredPromise = new DeferredPromise<void>();\n\treadonly whenRestored = this.whenRestoredPromise.p;\n\tprivate restored = false;\n\n\tisRestored(): boolean {\n\t\treturn this.restored;\n\t}\n\n\tprotected restoreParts(): void {\n\n\t\t// distinguish long running restore operations that\n\t\t// are required for the layout to be ready from those\n\t\t// that are needed to signal restoring is done\n\t\tconst layoutReadyPromises: Promise<unknown>[] = [];\n\t\tconst layoutRestoredPromises: Promise<unknown>[] = [];\n\n\t\t// Restore editors\n\t\tlayoutReadyPromises.push((async () => {\n\t\t\tmark('code/willRestoreEditors');\n\n\t\t\t// first ensure the editor part is ready\n\t\t\tawait this.editorGroupService.whenReady;\n\t\t\tmark('code/restoreEditors/editorGroupsReady');\n\n\t\t\t// apply editor layout if any\n\t\t\tif (this.state.initialization.layout?.editors) {\n\t\t\t\tthis.editorGroupService.applyLayout(this.state.initialization.layout.editors);\n\t\t\t}\n\n\t\t\t// then see for editors to open as instructed\n\t\t\t// it is important that we trigger this from\n\t\t\t// the overall restore flow to reduce possible\n\t\t\t// flicker on startup: we want any editor to\n\t\t\t// open to get a chance to open first before\n\t\t\t// signaling that layout is restored, but we do\n\t\t\t// not need to await the editors from having\n\t\t\t// fully loaded.\n\n\t\t\tconst editors = await this.state.initialization.editor.editorsToOpen;\n\t\t\tmark('code/restoreEditors/editorsToOpenResolved');\n\n\t\t\tlet openEditorsPromise: Promise<unknown> | undefined = undefined;\n\t\t\tif (editors.length) {\n\n\t\t\t\t// we have to map editors to their groups as instructed\n\t\t\t\t// by the input. this is important to ensure that we open\n\t\t\t\t// the editors in the groups they belong to.\n\n\t\t\t\tconst editorGroupsInVisualOrder = this.editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE);\n\t\t\t\tconst mapEditorsToGroup = new Map<GroupIdentifier, Set<IUntypedEditorInput>>();\n\n\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\tconst group = editorGroupsInVisualOrder[(editor.viewColumn ?? 1) - 1]; // viewColumn is index+1 based\n\n\t\t\t\t\tlet editorsByGroup = mapEditorsToGroup.get(group.id);\n\t\t\t\t\tif (!editorsByGroup) {\n\t\t\t\t\t\teditorsByGroup = new Set<IUntypedEditorInput>();\n\t\t\t\t\t\tmapEditorsToGroup.set(group.id, editorsByGroup);\n\t\t\t\t\t}\n\n\t\t\t\t\teditorsByGroup.add(editor.editor);\n\t\t\t\t}\n\n\t\t\t\topenEditorsPromise = Promise.all(Array.from(mapEditorsToGroup).map(async ([groupId, editors]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.editorService.openEditors(Array.from(editors), groupId, { validateTrust: true });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\t// do not block the overall layout ready flow from potentially\n\t\t\t// slow editors to resolve on startup\n\t\t\tlayoutRestoredPromises.push(\n\t\t\t\tPromise.all([\n\t\t\t\t\topenEditorsPromise?.finally(() => mark('code/restoreEditors/editorsOpened')),\n\t\t\t\t\tthis.editorGroupService.whenRestored.finally(() => mark('code/restoreEditors/editorGroupsRestored'))\n\t\t\t\t]).finally(() => {\n\t\t\t\t\t// the `code/didRestoreEditors` perf mark is specifically\n\t\t\t\t\t// for when visible editors have resolved, so we only mark\n\t\t\t\t\t// if when editor group service has restored.\n\t\t\t\t\tmark('code/didRestoreEditors');\n\t\t\t\t})\n\t\t\t);\n\t\t})());\n\n\t\t// Restore default views (only when `IDefaultLayout` is provided)\n\t\tconst restoreDefaultViewsPromise = (async () => {\n\t\t\tif (this.state.initialization.views.defaults?.length) {\n\t\t\t\tmark('code/willOpenDefaultViews');\n\n\t\t\t\tconst locationsRestored: { id: string; order: number }[] = [];\n\n\t\t\t\tconst tryOpenView = (view: { id: string; order: number }): boolean => {\n\t\t\t\t\tconst location = this.viewDescriptorService.getViewLocationById(view.id);\n\t\t\t\t\tif (location !== null) {\n\t\t\t\t\t\tconst container = this.viewDescriptorService.getViewContainerByViewId(view.id);\n\t\t\t\t\t\tif (container) {\n\t\t\t\t\t\t\tif (view.order >= (locationsRestored?.[location]?.order ?? 0)) {\n\t\t\t\t\t\t\t\tlocationsRestored[location] = { id: container.id, order: view.order };\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst containerModel = this.viewDescriptorService.getViewContainerModel(container);\n\t\t\t\t\t\t\tcontainerModel.setCollapsed(view.id, false);\n\t\t\t\t\t\t\tcontainerModel.setVisible(view.id, true);\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\n\t\t\t\tconst defaultViews = [...this.state.initialization.views.defaults].reverse().map((v, index) => ({ id: v, order: index }));\n\n\t\t\t\tlet i = defaultViews.length;\n\t\t\t\twhile (i) {\n\t\t\t\t\ti--;\n\t\t\t\t\tif (tryOpenView(defaultViews[i])) {\n\t\t\t\t\t\tdefaultViews.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we still have views left over, wait until all extensions have been registered and try again\n\t\t\t\tif (defaultViews.length) {\n\t\t\t\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\n\t\t\t\t\tlet i = defaultViews.length;\n\t\t\t\t\twhile (i) {\n\t\t\t\t\t\ti--;\n\t\t\t\t\t\tif (tryOpenView(defaultViews[i])) {\n\t\t\t\t\t\t\tdefaultViews.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we opened a view in the sidebar, stop any restore there\n\t\t\t\tif (locationsRestored[ViewContainerLocation.Sidebar]) {\n\t\t\t\t\tthis.state.initialization.views.containerToRestore.sideBar = locationsRestored[ViewContainerLocation.Sidebar].id;\n\t\t\t\t}\n\n\t\t\t\t// If we opened a view in the panel, stop any restore there\n\t\t\t\tif (locationsRestored[ViewContainerLocation.Panel]) {\n\t\t\t\t\tthis.state.initialization.views.containerToRestore.panel = locationsRestored[ViewContainerLocation.Panel].id;\n\t\t\t\t}\n\n\t\t\t\t// If we opened a view in the auxiliary bar, stop any restore there\n\t\t\t\tif (locationsRestored[ViewContainerLocation.AuxiliaryBar]) {\n\t\t\t\t\tthis.state.initialization.views.containerToRestore.auxiliaryBar = locationsRestored[ViewContainerLocation.AuxiliaryBar].id;\n\t\t\t\t}\n\n\t\t\t\tmark('code/didOpenDefaultViews');\n\t\t\t}\n\t\t})();\n\t\tlayoutReadyPromises.push(restoreDefaultViewsPromise);\n\n\t\t// Restore Sidebar\n\t\tlayoutReadyPromises.push((async () => {\n\n\t\t\t// Restoring views could mean that sidebar already\n\t\t\t// restored, as such we need to test again\n\t\t\tawait restoreDefaultViewsPromise;\n\t\t\tif (!this.state.initialization.views.containerToRestore.sideBar) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmark('code/willRestoreViewlet');\n\n\t\t\tconst viewlet = await this.paneCompositeService.openPaneComposite(this.state.initialization.views.containerToRestore.sideBar, ViewContainerLocation.Sidebar);\n\t\t\tif (!viewlet) {\n\t\t\t\tawait this.paneCompositeService.openPaneComposite(this.viewDescriptorService.getDefaultViewContainer(ViewContainerLocation.Sidebar)?.id, ViewContainerLocation.Sidebar); // fallback to default viewlet as needed\n\t\t\t}\n\n\t\t\tmark('code/didRestoreViewlet');\n\t\t})());\n\n\t\t// Restore Panel\n\t\tlayoutReadyPromises.push((async () => {\n\n\t\t\t// Restoring views could mean that panel already\n\t\t\t// restored, as such we need to test again\n\t\t\tawait restoreDefaultViewsPromise;\n\t\t\tif (!this.state.initialization.views.containerToRestore.panel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmark('code/willRestorePanel');\n\n\t\t\tconst panel = await this.paneCompositeService.openPaneComposite(this.state.initialization.views.containerToRestore.panel, ViewContainerLocation.Panel);\n\t\t\tif (!panel) {\n\t\t\t\tawait this.paneCompositeService.openPaneComposite(this.viewDescriptorService.getDefaultViewContainer(ViewContainerLocation.Panel)?.id, ViewContainerLocation.Panel); // fallback to default panel as needed\n\t\t\t}\n\n\t\t\tmark('code/didRestorePanel');\n\t\t})());\n\n\t\t// Restore Auxiliary Bar\n\t\tlayoutReadyPromises.push((async () => {\n\n\t\t\t// Restoring views could mean that panel already\n\t\t\t// restored, as such we need to test again\n\t\t\tawait restoreDefaultViewsPromise;\n\t\t\tif (!this.state.initialization.views.containerToRestore.auxiliaryBar) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmark('code/willRestoreAuxiliaryBar');\n\n\t\t\tconst panel = await this.paneCompositeService.openPaneComposite(this.state.initialization.views.containerToRestore.auxiliaryBar, ViewContainerLocation.AuxiliaryBar);\n\t\t\tif (!panel) {\n\t\t\t\tawait this.paneCompositeService.openPaneComposite(this.viewDescriptorService.getDefaultViewContainer(ViewContainerLocation.AuxiliaryBar)?.id, ViewContainerLocation.AuxiliaryBar); // fallback to default panel as needed\n\t\t\t}\n\n\t\t\tmark('code/didRestoreAuxiliaryBar');\n\t\t})());\n\n\t\t// Restore Zen Mode\n\t\tconst zenModeWasActive = this.stateModel.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE);\n\t\tconst restoreZenMode = getZenModeConfiguration(this.configurationService).restore;\n\n\t\tif (zenModeWasActive) {\n\t\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE, !restoreZenMode);\n\t\t\tthis.toggleZenMode(false, true);\n\t\t}\n\n\t\t// Restore Editor Center Mode\n\t\tif (this.stateModel.getRuntimeValue(LayoutStateKeys.EDITOR_CENTERED)) {\n\t\t\tthis.centerEditorLayout(true, true);\n\t\t}\n\n\t\t// Await for promises that we recorded to update\n\t\t// our ready and restored states properly.\n\t\tPromises.settled(layoutReadyPromises).finally(() => {\n\t\t\tthis.whenReadyPromise.complete();\n\n\t\t\tPromises.settled(layoutRestoredPromises).finally(() => {\n\t\t\t\tthis.restored = true;\n\t\t\t\tthis.whenRestoredPromise.complete();\n\t\t\t});\n\t\t});\n\t}\n\n\tregisterPart(part: Part): void {\n\t\tthis.parts.set(part.getId(), part);\n\t}\n\n\tprotected getPart(key: Parts): Part {\n\t\tconst part = this.parts.get(key);\n\t\tif (!part) {\n\t\t\tthrow new Error(`Unknown part ${key}`);\n\t\t}\n\n\t\treturn part;\n\t}\n\n\tregisterNotifications(delegate: { onDidChangeNotificationsVisibility: Event<boolean> }): void {\n\t\tthis._register(delegate.onDidChangeNotificationsVisibility(visible => this._onDidChangeNotificationsVisibility.fire(visible)));\n\t}\n\n\thasFocus(part: Parts): boolean {\n\t\tconst activeElement = document.activeElement;\n\t\tif (!activeElement) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst container = this.getContainer(part);\n\n\t\treturn !!container && isAncestorUsingFlowTo(activeElement, container);\n\t}\n\n\tfocusPart(part: Parts): void {\n\t\tswitch (part) {\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\tthis.editorGroupService.activeGroup.focus();\n\t\t\t\tbreak;\n\t\t\tcase Parts.PANEL_PART: {\n\t\t\t\tconst activePanel = this.paneCompositeService.getActivePaneComposite(ViewContainerLocation.Panel);\n\t\t\t\tactivePanel?.focus();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Parts.SIDEBAR_PART: {\n\t\t\t\tconst activeViewlet = this.paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar);\n\t\t\t\tactiveViewlet?.focus();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Parts.ACTIVITYBAR_PART:\n\t\t\t\t(this.getPart(Parts.ACTIVITYBAR_PART) as ActivitybarPart).focus();\n\t\t\t\tbreak;\n\t\t\tcase Parts.STATUSBAR_PART:\n\t\t\t\tthis.statusBarService.focus();\n\t\t\tdefault: {\n\t\t\t\t// Title Bar & Banner simply pass focus to container\n\t\t\t\tconst container = this.getContainer(part);\n\t\t\t\tcontainer?.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\tgetContainer(part: Parts): HTMLElement | undefined {\n\t\tif (!this.parts.get(part)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.getPart(part).getContainer();\n\t}\n\n\tisVisible(part: Parts): boolean {\n\t\tif (this.initialized) {\n\t\t\tswitch (part) {\n\t\t\t\tcase Parts.TITLEBAR_PART:\n\t\t\t\t\treturn this.workbenchGrid.isViewVisible(this.titleBarPartView);\n\t\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\t\treturn !this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_HIDDEN);\n\t\t\t\tcase Parts.PANEL_PART:\n\t\t\t\t\treturn !this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_HIDDEN);\n\t\t\t\tcase Parts.AUXILIARYBAR_PART:\n\t\t\t\t\treturn !this.stateModel.getRuntimeValue(LayoutStateKeys.AUXILIARYBAR_HIDDEN);\n\t\t\t\tcase Parts.STATUSBAR_PART:\n\t\t\t\t\treturn !this.stateModel.getRuntimeValue(LayoutStateKeys.STATUSBAR_HIDDEN);\n\t\t\t\tcase Parts.ACTIVITYBAR_PART:\n\t\t\t\t\treturn !this.stateModel.getRuntimeValue(LayoutStateKeys.ACTIVITYBAR_HIDDEN);\n\t\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\t\treturn !this.stateModel.getRuntimeValue(LayoutStateKeys.EDITOR_HIDDEN);\n\t\t\t\tcase Parts.BANNER_PART:\n\t\t\t\t\treturn this.workbenchGrid.isViewVisible(this.bannerPartView);\n\t\t\t\tdefault:\n\t\t\t\t\treturn false; // any other part cannot be hidden\n\t\t\t}\n\t\t}\n\n\t\tswitch (part) {\n\t\t\tcase Parts.TITLEBAR_PART:\n\t\t\t\treturn this.shouldShowTitleBar();\n\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\treturn !this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_HIDDEN);\n\t\t\tcase Parts.PANEL_PART:\n\t\t\t\treturn !this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_HIDDEN);\n\t\t\tcase Parts.AUXILIARYBAR_PART:\n\t\t\t\treturn !this.stateModel.getRuntimeValue(LayoutStateKeys.AUXILIARYBAR_HIDDEN);\n\t\t\tcase Parts.STATUSBAR_PART:\n\t\t\t\treturn !this.stateModel.getRuntimeValue(LayoutStateKeys.STATUSBAR_HIDDEN);\n\t\t\tcase Parts.ACTIVITYBAR_PART:\n\t\t\t\treturn !this.stateModel.getRuntimeValue(LayoutStateKeys.ACTIVITYBAR_HIDDEN);\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\treturn !this.stateModel.getRuntimeValue(LayoutStateKeys.EDITOR_HIDDEN);\n\t\t\tdefault:\n\t\t\t\treturn false; // any other part cannot be hidden\n\t\t}\n\t}\n\n\tprivate shouldShowTitleBar(): boolean {\n\n\t\t// Using the native title bar, don't ever show the custom one\n\t\tif (getTitleBarStyle(this.configurationService) === 'native') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// with the command center enabled, we should always show\n\t\tif (this.configurationService.getValue<boolean>('window.commandCenter')) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// macOS desktop does not need a title bar when full screen\n\t\tif (isMacintosh && isNative) {\n\t\t\treturn !this.state.runtime.fullscreen;\n\t\t}\n\n\t\t// non-fullscreen native must show the title bar\n\t\tif (isNative && !this.state.runtime.fullscreen) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// if WCO is visible, we have to show the title bar\n\t\tif (isWCOEnabled() && !this.state.runtime.fullscreen) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// remaining behavior is based on menubar visibility\n\t\tswitch (getMenuBarVisibility(this.configurationService)) {\n\t\t\tcase 'classic':\n\t\t\t\treturn !this.state.runtime.fullscreen || this.state.runtime.menuBar.toggled;\n\t\t\tcase 'compact':\n\t\t\tcase 'hidden':\n\t\t\t\treturn false;\n\t\t\tcase 'toggle':\n\t\t\t\treturn this.state.runtime.menuBar.toggled;\n\t\t\tcase 'visible':\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn isWeb ? false : !this.state.runtime.fullscreen || this.state.runtime.menuBar.toggled;\n\t\t}\n\t}\n\n\tprivate shouldShowBannerFirst(): boolean {\n\t\treturn isWeb && !isWCOEnabled();\n\t}\n\n\tfocus(): void {\n\t\tthis.focusPart(Parts.EDITOR_PART);\n\t}\n\n\tgetDimension(part: Parts): Dimension | undefined {\n\t\treturn this.getPart(part).dimension;\n\t}\n\n\tgetMaximumEditorDimensions(): Dimension {\n\t\tconst panelPosition = this.getPanelPosition();\n\t\tconst isColumn = panelPosition === Position.RIGHT || panelPosition === Position.LEFT;\n\t\tconst takenWidth =\n\t\t\t(this.isVisible(Parts.ACTIVITYBAR_PART) ? this.activityBarPartView.minimumWidth : 0) +\n\t\t\t(this.isVisible(Parts.SIDEBAR_PART) ? this.sideBarPartView.minimumWidth : 0) +\n\t\t\t(this.isVisible(Parts.PANEL_PART) && isColumn ? this.panelPartView.minimumWidth : 0) +\n\t\t\t(this.isVisible(Parts.AUXILIARYBAR_PART) ? this.auxiliaryBarPartView.minimumWidth : 0);\n\n\t\tconst takenHeight =\n\t\t\t(this.isVisible(Parts.TITLEBAR_PART) ? this.titleBarPartView.minimumHeight : 0) +\n\t\t\t(this.isVisible(Parts.STATUSBAR_PART) ? this.statusBarPartView.minimumHeight : 0) +\n\t\t\t(this.isVisible(Parts.PANEL_PART) && !isColumn ? this.panelPartView.minimumHeight : 0);\n\n\t\tconst availableWidth = this.dimension.width - takenWidth;\n\t\tconst availableHeight = this.dimension.height - takenHeight;\n\n\t\treturn new Dimension(availableWidth, availableHeight);\n\t}\n\n\ttoggleZenMode(skipLayout?: boolean, restoring = false): void {\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE, !this.stateModel.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE));\n\t\tthis.state.runtime.zenMode.transitionDisposables.clear();\n\n\t\tconst setLineNumbers = (lineNumbers?: LineNumbersType) => {\n\t\t\tconst setEditorLineNumbers = (editor: IEditor) => {\n\n\t\t\t\t// To properly reset line numbers we need to read the configuration for each editor respecting it's uri.\n\t\t\t\tif (!lineNumbers && isCodeEditor(editor) && editor.hasModel()) {\n\t\t\t\t\tconst model = editor.getModel();\n\t\t\t\t\tlineNumbers = this.configurationService.getValue('editor.lineNumbers', { resource: model.uri, overrideIdentifier: model.getLanguageId() });\n\t\t\t\t}\n\t\t\t\tif (!lineNumbers) {\n\t\t\t\t\tlineNumbers = this.configurationService.getValue('editor.lineNumbers');\n\t\t\t\t}\n\n\t\t\t\teditor.updateOptions({ lineNumbers });\n\t\t\t};\n\n\t\t\tif (!lineNumbers) {\n\t\t\t\t// Reset line numbers on all editors visible and non-visible\n\t\t\t\tfor (const editorControl of this.editorService.visibleTextEditorControls) {\n\t\t\t\t\tsetEditorLineNumbers(editorControl);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const editorControl of this.editorService.visibleTextEditorControls) {\n\t\t\t\t\tsetEditorLineNumbers(editorControl);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Check if zen mode transitioned to full screen and if now we are out of zen mode\n\t\t// -> we need to go out of full screen (same goes for the centered editor layout)\n\t\tlet toggleFullScreen = false;\n\t\tconst config = getZenModeConfiguration(this.configurationService);\n\t\tconst zenModeExitInfo = this.stateModel.getRuntimeValue(LayoutStateKeys.ZEN_MODE_EXIT_INFO);\n\n\t\t// Zen Mode Active\n\t\tif (this.stateModel.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE)) {\n\n\t\t\ttoggleFullScreen = !this.state.runtime.fullscreen && config.fullScreen && !isIOS;\n\n\t\t\tif (!restoring) {\n\t\t\t\tzenModeExitInfo.transitionedToFullScreen = toggleFullScreen;\n\t\t\t\tzenModeExitInfo.transitionedToCenteredEditorLayout = !this.isEditorLayoutCentered() && config.centerLayout;\n\t\t\t\tzenModeExitInfo.handleNotificationsDoNotDisturbMode = !this.notificationService.doNotDisturbMode;\n\t\t\t\tzenModeExitInfo.wasVisible.sideBar = this.isVisible(Parts.SIDEBAR_PART);\n\t\t\t\tzenModeExitInfo.wasVisible.panel = this.isVisible(Parts.PANEL_PART);\n\t\t\t\tzenModeExitInfo.wasVisible.auxiliaryBar = this.isVisible(Parts.AUXILIARYBAR_PART);\n\t\t\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.ZEN_MODE_EXIT_INFO, zenModeExitInfo);\n\t\t\t}\n\n\t\t\tthis.setPanelHidden(true, true);\n\t\t\tthis.setAuxiliaryBarHidden(true, true);\n\t\t\tthis.setSideBarHidden(true, true);\n\n\t\t\tif (config.hideActivityBar) {\n\t\t\t\tthis.setActivityBarHidden(true, true);\n\t\t\t}\n\n\t\t\tif (config.hideStatusBar) {\n\t\t\t\tthis.setStatusBarHidden(true, true);\n\t\t\t}\n\n\t\t\tif (config.hideLineNumbers) {\n\t\t\t\tsetLineNumbers('off');\n\t\t\t\tthis.state.runtime.zenMode.transitionDisposables.add(this.editorService.onDidVisibleEditorsChange(() => setLineNumbers('off')));\n\t\t\t}\n\n\t\t\tif (config.hideTabs && this.editorGroupService.partOptions.showTabs) {\n\t\t\t\tthis.state.runtime.zenMode.transitionDisposables.add(this.editorGroupService.enforcePartOptions({ showTabs: false }));\n\t\t\t}\n\n\t\t\tif (config.silentNotifications && zenModeExitInfo.handleNotificationsDoNotDisturbMode) {\n\t\t\t\tthis.notificationService.doNotDisturbMode = true;\n\t\t\t}\n\t\t\tthis.state.runtime.zenMode.transitionDisposables.add(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\t\tif (e.affectsConfiguration(WorkbenchLayoutSettings.ZEN_MODE_SILENT_NOTIFICATIONS)) {\n\t\t\t\t\tconst zenModeSilentNotifications = !!this.configurationService.getValue(WorkbenchLayoutSettings.ZEN_MODE_SILENT_NOTIFICATIONS);\n\t\t\t\t\tif (zenModeExitInfo.handleNotificationsDoNotDisturbMode) {\n\t\t\t\t\t\tthis.notificationService.doNotDisturbMode = zenModeSilentNotifications;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tif (config.centerLayout) {\n\t\t\t\tthis.centerEditorLayout(true, true);\n\t\t\t}\n\t\t}\n\n\t\t// Zen Mode Inactive\n\t\telse {\n\t\t\tif (zenModeExitInfo.wasVisible.panel) {\n\t\t\t\tthis.setPanelHidden(false, true);\n\t\t\t}\n\n\t\t\tif (zenModeExitInfo.wasVisible.auxiliaryBar) {\n\t\t\t\tthis.setAuxiliaryBarHidden(false, true);\n\t\t\t}\n\n\t\t\tif (zenModeExitInfo.wasVisible.sideBar) {\n\t\t\t\tthis.setSideBarHidden(false, true);\n\t\t\t}\n\n\t\t\tif (!this.stateModel.getRuntimeValue(LayoutStateKeys.ACTIVITYBAR_HIDDEN, true)) {\n\t\t\t\tthis.setActivityBarHidden(false, true);\n\t\t\t}\n\n\t\t\tif (!this.stateModel.getRuntimeValue(LayoutStateKeys.STATUSBAR_HIDDEN, true)) {\n\t\t\t\tthis.setStatusBarHidden(false, true);\n\t\t\t}\n\n\t\t\tif (zenModeExitInfo.transitionedToCenteredEditorLayout) {\n\t\t\t\tthis.centerEditorLayout(false, true);\n\t\t\t}\n\n\t\t\tif (zenModeExitInfo.handleNotificationsDoNotDisturbMode) {\n\t\t\t\tthis.notificationService.doNotDisturbMode = false;\n\t\t\t}\n\n\t\t\tsetLineNumbers();\n\n\t\t\tthis.focus();\n\n\t\t\ttoggleFullScreen = zenModeExitInfo.transitionedToFullScreen && this.state.runtime.fullscreen;\n\t\t}\n\n\t\tif (!skipLayout) {\n\t\t\tthis.layout();\n\t\t}\n\n\t\tif (toggleFullScreen) {\n\t\t\tthis.hostService.toggleFullScreen();\n\t\t}\n\n\t\t// Event\n\t\tthis._onDidChangeZenMode.fire(this.stateModel.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE));\n\t}\n\n\tprivate setStatusBarHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.STATUSBAR_HIDDEN, hidden);\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.container.classList.add(LayoutClasses.STATUSBAR_HIDDEN);\n\t\t} else {\n\t\t\tthis.container.classList.remove(LayoutClasses.STATUSBAR_HIDDEN);\n\t\t}\n\n\t\t// Propagate to grid\n\t\tthis.workbenchGrid.setViewVisible(this.statusBarPartView, !hidden);\n\t}\n\n\tprotected createWorkbenchLayout(): void {\n\t\tconst titleBar = this.getPart(Parts.TITLEBAR_PART);\n\t\tconst bannerPart = this.getPart(Parts.BANNER_PART);\n\t\tconst editorPart = this.getPart(Parts.EDITOR_PART);\n\t\tconst activityBar = this.getPart(Parts.ACTIVITYBAR_PART);\n\t\tconst panelPart = this.getPart(Parts.PANEL_PART);\n\t\tconst auxiliaryBarPart = this.getPart(Parts.AUXILIARYBAR_PART);\n\t\tconst sideBar = this.getPart(Parts.SIDEBAR_PART);\n\t\tconst statusBar = this.getPart(Parts.STATUSBAR_PART);\n\n\t\t// View references for all parts\n\t\tthis.titleBarPartView = titleBar;\n\t\tthis.bannerPartView = bannerPart;\n\t\tthis.sideBarPartView = sideBar;\n\t\tthis.activityBarPartView = activityBar;\n\t\tthis.editorPartView = editorPart;\n\t\tthis.panelPartView = panelPart;\n\t\tthis.auxiliaryBarPartView = auxiliaryBarPart;\n\t\tthis.statusBarPartView = statusBar;\n\n\t\tconst viewMap = {\n\t\t\t[Parts.ACTIVITYBAR_PART]: this.activityBarPartView,\n\t\t\t[Parts.BANNER_PART]: this.bannerPartView,\n\t\t\t[Parts.TITLEBAR_PART]: this.titleBarPartView,\n\t\t\t[Parts.EDITOR_PART]: this.editorPartView,\n\t\t\t[Parts.PANEL_PART]: this.panelPartView,\n\t\t\t[Parts.SIDEBAR_PART]: this.sideBarPartView,\n\t\t\t[Parts.STATUSBAR_PART]: this.statusBarPartView,\n\t\t\t[Parts.AUXILIARYBAR_PART]: this.auxiliaryBarPartView\n\t\t};\n\n\t\tconst fromJSON = ({ type }: { type: Parts }) => viewMap[type];\n\t\tconst workbenchGrid = SerializableGrid.deserialize(\n\t\t\tthis.createGridDescriptor(),\n\t\t\t{ fromJSON },\n\t\t\t{ proportionalLayout: false }\n\t\t);\n\n\t\tthis.container.prepend(workbenchGrid.element);\n\t\tthis.container.setAttribute('role', 'application');\n\t\tthis.workbenchGrid = workbenchGrid;\n\t\tthis.workbenchGrid.edgeSnapping = this.state.runtime.fullscreen;\n\n\t\tfor (const part of [titleBar, editorPart, activityBar, panelPart, sideBar, statusBar, auxiliaryBarPart, bannerPart]) {\n\t\t\tthis._register(part.onDidVisibilityChange((visible) => {\n\t\t\t\tif (part === sideBar) {\n\t\t\t\t\tthis.setSideBarHidden(!visible, true);\n\t\t\t\t} else if (part === panelPart) {\n\t\t\t\t\tthis.setPanelHidden(!visible, true);\n\t\t\t\t} else if (part === auxiliaryBarPart) {\n\t\t\t\t\tthis.setAuxiliaryBarHidden(!visible, true);\n\t\t\t\t} else if (part === editorPart) {\n\t\t\t\t\tthis.setEditorHidden(!visible, true);\n\t\t\t\t}\n\t\t\t\tthis._onDidChangePartVisibility.fire();\n\t\t\t\tthis._onDidLayout.fire(this._dimension);\n\t\t\t}));\n\t\t}\n\n\t\tthis._register(this.storageService.onWillSaveState(willSaveState => {\n\t\t\tif (willSaveState.reason === WillSaveStateReason.SHUTDOWN) {\n\t\t\t\t// Side Bar Size\n\t\t\t\tconst sideBarSize = this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_HIDDEN)\n\t\t\t\t\t? this.workbenchGrid.getViewCachedVisibleSize(this.sideBarPartView)\n\t\t\t\t\t: this.workbenchGrid.getViewSize(this.sideBarPartView).width;\n\t\t\t\tthis.stateModel.setInitializationValue(LayoutStateKeys.SIDEBAR_SIZE, sideBarSize as number);\n\n\t\t\t\t// Panel Size\n\t\t\t\tconst panelSize = this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_HIDDEN)\n\t\t\t\t\t? this.workbenchGrid.getViewCachedVisibleSize(this.panelPartView)\n\t\t\t\t\t: (this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_POSITION) === Position.BOTTOM ? this.workbenchGrid.getViewSize(this.panelPartView).height : this.workbenchGrid.getViewSize(this.panelPartView).width);\n\t\t\t\tthis.stateModel.setInitializationValue(LayoutStateKeys.PANEL_SIZE, panelSize as number);\n\n\t\t\t\t// Auxiliary Bar Size\n\t\t\t\tconst auxiliaryBarSize = this.stateModel.getRuntimeValue(LayoutStateKeys.AUXILIARYBAR_HIDDEN)\n\t\t\t\t\t? this.workbenchGrid.getViewCachedVisibleSize(this.auxiliaryBarPartView)\n\t\t\t\t\t: this.workbenchGrid.getViewSize(this.auxiliaryBarPartView).width;\n\t\t\t\tthis.stateModel.setInitializationValue(LayoutStateKeys.AUXILIARYBAR_SIZE, auxiliaryBarSize as number);\n\n\t\t\t\tthis.stateModel.save(true, true);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate getClientArea(): Dimension {\n\t\treturn getClientArea(this.parent);\n\t}\n\n\tlayout(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis._dimension = this.getClientArea();\n\t\t\tthis.logService.trace(`Layout#layout, height: ${this._dimension.height}, width: ${this._dimension.width}`);\n\n\t\t\tposition(this.container, 0, 0, 0, 0, 'relative');\n\t\t\tsize(this.container, this._dimension.width, this._dimension.height);\n\n\t\t\t// Layout the grid widget\n\t\t\tthis.workbenchGrid.layout(this._dimension.width, this._dimension.height);\n\t\t\tthis.initialized = true;\n\n\t\t\t// Emit as event\n\t\t\tthis._onDidLayout.fire(this._dimension);\n\t\t}\n\t}\n\n\tisEditorLayoutCentered(): boolean {\n\t\treturn this.stateModel.getRuntimeValue(LayoutStateKeys.EDITOR_CENTERED);\n\t}\n\n\tcenterEditorLayout(active: boolean, skipLayout?: boolean): void {\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.EDITOR_CENTERED, active);\n\n\t\tconst activeEditor = this.editorService.activeEditor;\n\n\t\tlet isEditorComplex = false;\n\t\tif (activeEditor instanceof DiffEditorInput) {\n\t\t\tisEditorComplex = this.configurationService.getValue('diffEditor.renderSideBySide');\n\t\t} else if (activeEditor?.hasCapability(EditorInputCapabilities.MultipleEditors)) {\n\t\t\tisEditorComplex = true;\n\t\t}\n\n\t\tconst isCenteredLayoutAutoResizing = this.configurationService.getValue('workbench.editor.centeredLayoutAutoResize');\n\t\tif (\n\t\t\tisCenteredLayoutAutoResizing &&\n\t\t\t(this.editorGroupService.groups.length > 1 || isEditorComplex)\n\t\t) {\n\t\t\tactive = false; // disable centered layout for complex editors or when there is more than one group\n\t\t}\n\n\t\tif (this.editorGroupService.isLayoutCentered() !== active) {\n\t\t\tthis.editorGroupService.centerLayout(active);\n\n\t\t\tif (!skipLayout) {\n\t\t\t\tthis.layout();\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeCenteredLayout.fire(this.stateModel.getRuntimeValue(LayoutStateKeys.EDITOR_CENTERED));\n\t}\n\n\tresizePart(part: Parts, sizeChangeWidth: number, sizeChangeHeight: number): void {\n\t\tconst sizeChangePxWidth = Math.sign(sizeChangeWidth) * computeScreenAwareSize(Math.abs(sizeChangeWidth));\n\t\tconst sizeChangePxHeight = Math.sign(sizeChangeHeight) * computeScreenAwareSize(Math.abs(sizeChangeHeight));\n\n\t\tlet viewSize: IViewSize;\n\n\t\tswitch (part) {\n\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\tviewSize = this.workbenchGrid.getViewSize(this.sideBarPartView);\n\t\t\t\tthis.workbenchGrid.resizeView(this.sideBarPartView,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: viewSize.width + sizeChangePxWidth,\n\t\t\t\t\t\theight: viewSize.height\n\t\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase Parts.PANEL_PART:\n\t\t\t\tviewSize = this.workbenchGrid.getViewSize(this.panelPartView);\n\n\t\t\t\tthis.workbenchGrid.resizeView(this.panelPartView,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: viewSize.width + (this.getPanelPosition() !== Position.BOTTOM ? sizeChangePxWidth : 0),\n\t\t\t\t\t\theight: viewSize.height + (this.getPanelPosition() !== Position.BOTTOM ? 0 : sizeChangePxHeight)\n\t\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase Parts.AUXILIARYBAR_PART:\n\t\t\t\tviewSize = this.workbenchGrid.getViewSize(this.auxiliaryBarPartView);\n\t\t\t\tthis.workbenchGrid.resizeView(this.auxiliaryBarPartView,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: viewSize.width + sizeChangePxWidth,\n\t\t\t\t\t\theight: viewSize.height\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\tviewSize = this.workbenchGrid.getViewSize(this.editorPartView);\n\n\t\t\t\t// Single Editor Group\n\t\t\t\tif (this.editorGroupService.count === 1) {\n\t\t\t\t\tthis.workbenchGrid.resizeView(this.editorPartView,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twidth: viewSize.width + sizeChangePxWidth,\n\t\t\t\t\t\t\theight: viewSize.height + sizeChangePxHeight\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst activeGroup = this.editorGroupService.activeGroup;\n\n\t\t\t\t\tconst { width, height } = this.editorGroupService.getSize(activeGroup);\n\t\t\t\t\tthis.editorGroupService.setSize(activeGroup, { width: width + sizeChangePxWidth, height: height + sizeChangePxHeight });\n\n\t\t\t\t\t// After resizing the editor group\n\t\t\t\t\t// if it does not change in either direction\n\t\t\t\t\t// try resizing the full editor part\n\t\t\t\t\tconst { width: newWidth, height: newHeight } = this.editorGroupService.getSize(activeGroup);\n\t\t\t\t\tif ((sizeChangePxHeight && height === newHeight) || (sizeChangePxWidth && width === newWidth)) {\n\t\t\t\t\t\tthis.workbenchGrid.resizeView(this.editorPartView,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twidth: viewSize.width + (sizeChangePxWidth && width === newWidth ? sizeChangePxWidth : 0),\n\t\t\t\t\t\t\t\theight: viewSize.height + (sizeChangePxHeight && height === newHeight ? sizeChangePxHeight : 0)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn; // Cannot resize other parts\n\t\t}\n\t}\n\n\tprivate setActivityBarHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\t// Propagate to grid\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.ACTIVITYBAR_HIDDEN, hidden);\n\t\tthis.workbenchGrid.setViewVisible(this.activityBarPartView, !hidden);\n\t}\n\n\tprivate setBannerHidden(hidden: boolean): void {\n\t\tthis.workbenchGrid.setViewVisible(this.bannerPartView, !hidden);\n\t}\n\n\tprivate setEditorHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.EDITOR_HIDDEN, hidden);\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.container.classList.add(LayoutClasses.EDITOR_HIDDEN);\n\t\t} else {\n\t\t\tthis.container.classList.remove(LayoutClasses.EDITOR_HIDDEN);\n\t\t}\n\n\t\t// Propagate to grid\n\t\tthis.workbenchGrid.setViewVisible(this.editorPartView, !hidden);\n\n\t\t// The editor and panel cannot be hidden at the same time\n\t\tif (hidden && !this.isVisible(Parts.PANEL_PART)) {\n\t\t\tthis.setPanelHidden(false, true);\n\t\t}\n\t}\n\n\tgetLayoutClasses(): string[] {\n\t\treturn coalesce([\n\t\t\t!this.isVisible(Parts.SIDEBAR_PART) ? LayoutClasses.SIDEBAR_HIDDEN : undefined,\n\t\t\t!this.isVisible(Parts.EDITOR_PART) ? LayoutClasses.EDITOR_HIDDEN : undefined,\n\t\t\t!this.isVisible(Parts.PANEL_PART) ? LayoutClasses.PANEL_HIDDEN : undefined,\n\t\t\t!this.isVisible(Parts.AUXILIARYBAR_PART) ? LayoutClasses.AUXILIARYBAR_HIDDEN : undefined,\n\t\t\t!this.isVisible(Parts.STATUSBAR_PART) ? LayoutClasses.STATUSBAR_HIDDEN : undefined,\n\t\t\tthis.state.runtime.fullscreen ? LayoutClasses.FULLSCREEN : undefined\n\t\t]);\n\t}\n\n\tprivate setSideBarHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.SIDEBAR_HIDDEN, hidden);\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.container.classList.add(LayoutClasses.SIDEBAR_HIDDEN);\n\t\t} else {\n\t\t\tthis.container.classList.remove(LayoutClasses.SIDEBAR_HIDDEN);\n\t\t}\n\n\t\t// If sidebar becomes hidden, also hide the current active Viewlet if any\n\t\tif (hidden && this.paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar)) {\n\t\t\tthis.paneCompositeService.hideActivePaneComposite(ViewContainerLocation.Sidebar);\n\n\t\t\t// Pass Focus to Editor or Panel if Sidebar is now hidden\n\t\t\tconst activePanel = this.paneCompositeService.getActivePaneComposite(ViewContainerLocation.Panel);\n\t\t\tif (this.hasFocus(Parts.PANEL_PART) && activePanel) {\n\t\t\t\tactivePanel.focus();\n\t\t\t} else {\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t}\n\n\t\t// If sidebar becomes visible, show last active Viewlet or default viewlet\n\t\telse if (!hidden && !this.paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar)) {\n\t\t\tconst viewletToOpen = this.paneCompositeService.getLastActivePaneCompositeId(ViewContainerLocation.Sidebar);\n\t\t\tif (viewletToOpen) {\n\t\t\t\tconst viewlet = this.paneCompositeService.openPaneComposite(viewletToOpen, ViewContainerLocation.Sidebar, true);\n\t\t\t\tif (!viewlet) {\n\t\t\t\t\tthis.paneCompositeService.openPaneComposite(this.viewDescriptorService.getDefaultViewContainer(ViewContainerLocation.Sidebar)?.id, ViewContainerLocation.Sidebar, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Propagate to grid\n\t\tthis.workbenchGrid.setViewVisible(this.sideBarPartView, !hidden);\n\t}\n\n\tprivate hasViews(id: string): boolean {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(id);\n\t\tif (!viewContainer) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\tif (!viewContainerModel) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn viewContainerModel.activeViewDescriptors.length >= 1;\n\t}\n\n\tprivate adjustPartPositions(sideBarPosition: Position, panelAlignment: PanelAlignment, panelPosition: Position): void {\n\n\t\t// Move activity bar and side bars\n\t\tconst sideBarSiblingToEditor = panelPosition !== Position.BOTTOM || !(panelAlignment === 'center' || (sideBarPosition === Position.LEFT && panelAlignment === 'right') || (sideBarPosition === Position.RIGHT && panelAlignment === 'left'));\n\t\tconst auxiliaryBarSiblingToEditor = panelPosition !== Position.BOTTOM || !(panelAlignment === 'center' || (sideBarPosition === Position.RIGHT && panelAlignment === 'right') || (sideBarPosition === Position.LEFT && panelAlignment === 'left'));\n\t\tconst preMovePanelWidth = !this.isVisible(Parts.PANEL_PART) ? Sizing.Invisible(this.workbenchGrid.getViewCachedVisibleSize(this.panelPartView) ?? this.panelPartView.minimumWidth) : this.workbenchGrid.getViewSize(this.panelPartView).width;\n\t\tconst preMovePanelHeight = !this.isVisible(Parts.PANEL_PART) ? Sizing.Invisible(this.workbenchGrid.getViewCachedVisibleSize(this.panelPartView) ?? this.panelPartView.minimumHeight) : this.workbenchGrid.getViewSize(this.panelPartView).height;\n\t\tconst preMoveSideBarSize = !this.isVisible(Parts.SIDEBAR_PART) ? Sizing.Invisible(this.workbenchGrid.getViewCachedVisibleSize(this.sideBarPartView) ?? this.sideBarPartView.minimumWidth) : this.workbenchGrid.getViewSize(this.sideBarPartView).width;\n\t\tconst preMoveAuxiliaryBarSize = !this.isVisible(Parts.AUXILIARYBAR_PART) ? Sizing.Invisible(this.workbenchGrid.getViewCachedVisibleSize(this.auxiliaryBarPartView) ?? this.auxiliaryBarPartView.minimumWidth) : this.workbenchGrid.getViewSize(this.auxiliaryBarPartView).width;\n\n\t\tif (sideBarPosition === Position.LEFT) {\n\t\t\tthis.workbenchGrid.moveViewTo(this.activityBarPartView, [2, 0]);\n\t\t\tthis.workbenchGrid.moveView(this.sideBarPartView, preMoveSideBarSize, sideBarSiblingToEditor ? this.editorPartView : this.activityBarPartView, sideBarSiblingToEditor ? Direction.Left : Direction.Right);\n\t\t\tif (auxiliaryBarSiblingToEditor) {\n\t\t\t\tthis.workbenchGrid.moveView(this.auxiliaryBarPartView, preMoveAuxiliaryBarSize, this.editorPartView, Direction.Right);\n\t\t\t} else {\n\t\t\t\tthis.workbenchGrid.moveViewTo(this.auxiliaryBarPartView, [2, -1]);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.workbenchGrid.moveViewTo(this.activityBarPartView, [2, -1]);\n\t\t\tthis.workbenchGrid.moveView(this.sideBarPartView, preMoveSideBarSize, sideBarSiblingToEditor ? this.editorPartView : this.activityBarPartView, sideBarSiblingToEditor ? Direction.Right : Direction.Left);\n\t\t\tif (auxiliaryBarSiblingToEditor) {\n\t\t\t\tthis.workbenchGrid.moveView(this.auxiliaryBarPartView, preMoveAuxiliaryBarSize, this.editorPartView, Direction.Left);\n\t\t\t} else {\n\t\t\t\tthis.workbenchGrid.moveViewTo(this.auxiliaryBarPartView, [2, 0]);\n\t\t\t}\n\t\t}\n\n\t\t// We moved all the side parts based on the editor and ignored the panel\n\t\t// Now, we need to put the panel back in the right position when it is next to the editor\n\t\tif (panelPosition !== Position.BOTTOM) {\n\t\t\tthis.workbenchGrid.moveView(this.panelPartView, preMovePanelWidth, this.editorPartView, panelPosition === Position.LEFT ? Direction.Left : Direction.Right);\n\t\t\tthis.workbenchGrid.resizeView(this.panelPartView, {\n\t\t\t\theight: preMovePanelHeight as number,\n\t\t\t\twidth: preMovePanelWidth as number\n\t\t\t});\n\t\t}\n\n\t\t// Moving views in the grid can cause them to re-distribute sizing unnecessarily\n\t\t// Resize visible parts to the width they were before the operation\n\t\tif (this.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\tthis.workbenchGrid.resizeView(this.sideBarPartView, {\n\t\t\t\theight: this.workbenchGrid.getViewSize(this.sideBarPartView).height,\n\t\t\t\twidth: preMoveSideBarSize as number\n\t\t\t});\n\t\t}\n\n\t\tif (this.isVisible(Parts.AUXILIARYBAR_PART)) {\n\t\t\tthis.workbenchGrid.resizeView(this.auxiliaryBarPartView, {\n\t\t\t\theight: this.workbenchGrid.getViewSize(this.auxiliaryBarPartView).height,\n\t\t\t\twidth: preMoveAuxiliaryBarSize as number\n\t\t\t});\n\t\t}\n\t}\n\n\tsetPanelAlignment(alignment: PanelAlignment, skipLayout?: boolean): void {\n\n\t\t// Panel alignment only applies to a panel in the bottom position\n\t\tif (this.getPanelPosition() !== Position.BOTTOM) {\n\t\t\tthis.setPanelPosition(Position.BOTTOM);\n\t\t}\n\n\t\t// the workbench grid currently prevents us from supporting panel maximization with non-center panel alignment\n\t\tif (alignment !== 'center' && this.isPanelMaximized()) {\n\t\t\tthis.toggleMaximizedPanel();\n\t\t}\n\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.PANEL_ALIGNMENT, alignment);\n\n\t\tthis.adjustPartPositions(this.getSideBarPosition(), alignment, this.getPanelPosition());\n\n\t\tthis._onDidChangePanelAlignment.fire(alignment);\n\t}\n\n\tprivate setPanelHidden(hidden: boolean, skipLayout?: boolean): void {\n\n\t\t// Return if not initialized fully #105480\n\t\tif (!this.workbenchGrid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst wasHidden = !this.isVisible(Parts.PANEL_PART);\n\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.PANEL_HIDDEN, hidden);\n\n\t\tconst isPanelMaximized = this.isPanelMaximized();\n\t\tconst panelOpensMaximized = this.panelOpensMaximized();\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.container.classList.add(LayoutClasses.PANEL_HIDDEN);\n\t\t} else {\n\t\t\tthis.container.classList.remove(LayoutClasses.PANEL_HIDDEN);\n\t\t}\n\n\t\t// If panel part becomes hidden, also hide the current active panel if any\n\t\tlet focusEditor = false;\n\t\tif (hidden && this.paneCompositeService.getActivePaneComposite(ViewContainerLocation.Panel)) {\n\t\t\tthis.paneCompositeService.hideActivePaneComposite(ViewContainerLocation.Panel);\n\t\t\tfocusEditor = isIOS ? false : true; // Do not auto focus on ios #127832\n\t\t}\n\n\t\t// If panel part becomes visible, show last active panel or default panel\n\t\telse if (!hidden && !this.paneCompositeService.getActivePaneComposite(ViewContainerLocation.Panel)) {\n\t\t\tlet panelToOpen: string | undefined = this.paneCompositeService.getLastActivePaneCompositeId(ViewContainerLocation.Panel);\n\n\t\t\t// verify that the panel we try to open has views before we default to it\n\t\t\t// otherwise fall back to any view that has views still refs #111463\n\t\t\tif (!panelToOpen || !this.hasViews(panelToOpen)) {\n\t\t\t\tpanelToOpen = this.viewDescriptorService\n\t\t\t\t\t.getViewContainersByLocation(ViewContainerLocation.Panel)\n\t\t\t\t\t.find(viewContainer => this.hasViews(viewContainer.id))?.id;\n\t\t\t}\n\n\t\t\tif (panelToOpen) {\n\t\t\t\tconst focus = !skipLayout;\n\t\t\t\tthis.paneCompositeService.openPaneComposite(panelToOpen, ViewContainerLocation.Panel, focus);\n\t\t\t}\n\t\t}\n\n\t\t// If maximized and in process of hiding, unmaximize before hiding to allow caching of non-maximized size\n\t\tif (hidden && isPanelMaximized) {\n\t\t\tthis.toggleMaximizedPanel();\n\t\t}\n\n\t\t// Don't proceed if we have already done this before\n\t\tif (wasHidden === hidden) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Propagate layout changes to grid\n\t\tthis.workbenchGrid.setViewVisible(this.panelPartView, !hidden);\n\n\t\t// If in process of showing, toggle whether or not panel is maximized\n\t\tif (!hidden) {\n\t\t\tif (!skipLayout && isPanelMaximized !== panelOpensMaximized) {\n\t\t\t\tthis.toggleMaximizedPanel();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// If in process of hiding, remember whether the panel is maximized or not\n\t\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.PANEL_WAS_LAST_MAXIMIZED, isPanelMaximized);\n\t\t}\n\n\t\tif (focusEditor) {\n\t\t\tthis.editorGroupService.activeGroup.focus(); // Pass focus to editor group if panel part is now hidden\n\t\t}\n\t}\n\n\ttoggleMaximizedPanel(): void {\n\t\tconst size = this.workbenchGrid.getViewSize(this.panelPartView);\n\t\tconst panelPosition = this.getPanelPosition();\n\t\tconst isMaximized = this.isPanelMaximized();\n\t\tif (!isMaximized) {\n\t\t\tif (this.isVisible(Parts.PANEL_PART)) {\n\t\t\t\tif (panelPosition === Position.BOTTOM) {\n\t\t\t\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_HEIGHT, size.height);\n\t\t\t\t} else {\n\t\t\t\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_WIDTH, size.width);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setEditorHidden(true);\n\t\t} else {\n\t\t\tthis.setEditorHidden(false);\n\t\t\tthis.workbenchGrid.resizeView(this.panelPartView, {\n\t\t\t\twidth: panelPosition === Position.BOTTOM ? size.width : this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_WIDTH),\n\t\t\t\theight: panelPosition === Position.BOTTOM ? this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_HEIGHT) : size.height\n\t\t\t});\n\t\t}\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.PANEL_WAS_LAST_MAXIMIZED, !isMaximized);\n\t}\n\n\t/**\n\t * Returns whether or not the panel opens maximized\n\t */\n\tprivate panelOpensMaximized(): boolean {\n\n\t\t// The workbench grid currently prevents us from supporting panel maximization with non-center panel alignment\n\t\tif (this.getPanelAlignment() !== 'center' && this.getPanelPosition() === Position.BOTTOM) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst panelOpensMaximized = panelOpensMaximizedFromString(this.configurationService.getValue<string>(WorkbenchLayoutSettings.PANEL_OPENS_MAXIMIZED));\n\t\tconst panelLastIsMaximized = this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_WAS_LAST_MAXIMIZED);\n\n\t\treturn panelOpensMaximized === PanelOpensMaximizedOptions.ALWAYS || (panelOpensMaximized === PanelOpensMaximizedOptions.REMEMBER_LAST && panelLastIsMaximized);\n\t}\n\n\tprivate setAuxiliaryBarHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.AUXILIARYBAR_HIDDEN, hidden);\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.container.classList.add(LayoutClasses.AUXILIARYBAR_HIDDEN);\n\t\t} else {\n\t\t\tthis.container.classList.remove(LayoutClasses.AUXILIARYBAR_HIDDEN);\n\t\t}\n\n\t\t// If auxiliary bar becomes hidden, also hide the current active pane composite if any\n\t\tif (hidden && this.paneCompositeService.getActivePaneComposite(ViewContainerLocation.AuxiliaryBar)) {\n\t\t\tthis.paneCompositeService.hideActivePaneComposite(ViewContainerLocation.AuxiliaryBar);\n\n\t\t\t// Pass Focus to Editor or Panel if Auxiliary Bar is now hidden\n\t\t\tconst activePanel = this.paneCompositeService.getActivePaneComposite(ViewContainerLocation.Panel);\n\t\t\tif (this.hasFocus(Parts.PANEL_PART) && activePanel) {\n\t\t\t\tactivePanel.focus();\n\t\t\t} else {\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t}\n\n\t\t// If auxiliary bar becomes visible, show last active pane composite or default pane composite\n\t\telse if (!hidden && !this.paneCompositeService.getActivePaneComposite(ViewContainerLocation.AuxiliaryBar)) {\n\t\t\tlet panelToOpen: string | undefined = this.paneCompositeService.getLastActivePaneCompositeId(ViewContainerLocation.AuxiliaryBar);\n\n\t\t\t// verify that the panel we try to open has views before we default to it\n\t\t\t// otherwise fall back to any view that has views still refs #111463\n\t\t\tif (!panelToOpen || !this.hasViews(panelToOpen)) {\n\t\t\t\tpanelToOpen = this.viewDescriptorService\n\t\t\t\t\t.getViewContainersByLocation(ViewContainerLocation.AuxiliaryBar)\n\t\t\t\t\t.find(viewContainer => this.hasViews(viewContainer.id))?.id;\n\t\t\t}\n\n\t\t\tif (panelToOpen) {\n\t\t\t\tconst focus = !skipLayout;\n\t\t\t\tthis.paneCompositeService.openPaneComposite(panelToOpen, ViewContainerLocation.AuxiliaryBar, focus);\n\t\t\t}\n\t\t}\n\n\t\t// Propagate to grid\n\t\tthis.workbenchGrid.setViewVisible(this.auxiliaryBarPartView, !hidden);\n\t}\n\n\tsetPartHidden(hidden: boolean, part: Parts): void {\n\t\tswitch (part) {\n\t\t\tcase Parts.ACTIVITYBAR_PART:\n\t\t\t\treturn this.setActivityBarHidden(hidden);\n\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\treturn this.setSideBarHidden(hidden);\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\treturn this.setEditorHidden(hidden);\n\t\t\tcase Parts.BANNER_PART:\n\t\t\t\treturn this.setBannerHidden(hidden);\n\t\t\tcase Parts.AUXILIARYBAR_PART:\n\t\t\t\treturn this.setAuxiliaryBarHidden(hidden);\n\t\t\tcase Parts.PANEL_PART:\n\t\t\t\treturn this.setPanelHidden(hidden);\n\t\t}\n\t}\n\n\thasWindowBorder(): boolean {\n\t\treturn this.state.runtime.windowBorder;\n\t}\n\n\tgetWindowBorderWidth(): number {\n\t\treturn this.state.runtime.windowBorder ? 2 : 0;\n\t}\n\n\tgetWindowBorderRadius(): string | undefined {\n\t\treturn this.state.runtime.windowBorder && isMacintosh ? '5px' : undefined;\n\t}\n\n\tisPanelMaximized(): boolean {\n\n\t\t// the workbench grid currently prevents us from supporting panel maximization with non-center panel alignment\n\t\treturn (this.getPanelAlignment() === 'center' || this.getPanelPosition() !== Position.BOTTOM) && !this.isVisible(Parts.EDITOR_PART);\n\t}\n\n\tgetSideBarPosition(): Position {\n\t\treturn this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_POSITON);\n\t}\n\n\tgetPanelAlignment(): PanelAlignment {\n\t\treturn this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_ALIGNMENT);\n\t}\n\n\tupdateMenubarVisibility(skipLayout: boolean): void {\n\t\tconst shouldShowTitleBar = this.shouldShowTitleBar();\n\t\tif (!skipLayout && this.workbenchGrid && shouldShowTitleBar !== this.isVisible(Parts.TITLEBAR_PART)) {\n\t\t\tthis.workbenchGrid.setViewVisible(this.titleBarPartView, shouldShowTitleBar);\n\t\t}\n\t}\n\n\ttoggleMenuBar(): void {\n\t\tlet currentVisibilityValue = getMenuBarVisibility(this.configurationService);\n\t\tif (typeof currentVisibilityValue !== 'string') {\n\t\t\tcurrentVisibilityValue = 'classic';\n\t\t}\n\n\t\tlet newVisibilityValue: string;\n\t\tif (currentVisibilityValue === 'visible' || currentVisibilityValue === 'classic') {\n\t\t\tnewVisibilityValue = getTitleBarStyle(this.configurationService) === 'native' ? 'toggle' : 'compact';\n\t\t} else {\n\t\t\tnewVisibilityValue = 'classic';\n\t\t}\n\n\t\tthis.configurationService.updateValue('window.menuBarVisibility', newVisibilityValue);\n\t}\n\n\tgetPanelPosition(): Position {\n\t\treturn this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_POSITION);\n\t}\n\n\tsetPanelPosition(position: Position): void {\n\t\tif (!this.isVisible(Parts.PANEL_PART)) {\n\t\t\tthis.setPanelHidden(false);\n\t\t}\n\n\t\tconst panelPart = this.getPart(Parts.PANEL_PART);\n\t\tconst oldPositionValue = positionToString(this.getPanelPosition());\n\t\tconst newPositionValue = positionToString(position);\n\n\t\t// Adjust CSS\n\t\tconst panelContainer = assertIsDefined(panelPart.getContainer());\n\t\tpanelContainer.classList.remove(oldPositionValue);\n\t\tpanelContainer.classList.add(newPositionValue);\n\n\t\t// Update Styles\n\t\tpanelPart.updateStyles();\n\n\t\t// Layout\n\t\tconst size = this.workbenchGrid.getViewSize(this.panelPartView);\n\t\tconst sideBarSize = this.workbenchGrid.getViewSize(this.sideBarPartView);\n\t\tconst auxiliaryBarSize = this.workbenchGrid.getViewSize(this.auxiliaryBarPartView);\n\n\t\tlet editorHidden = !this.isVisible(Parts.EDITOR_PART);\n\n\t\t// Save last non-maximized size for panel before move\n\t\tif (newPositionValue !== oldPositionValue && !editorHidden) {\n\n\t\t\t// Save the current size of the panel for the new orthogonal direction\n\t\t\t// If moving down, save the width of the panel\n\t\t\t// Otherwise, save the height of the panel\n\t\t\tif (position === Position.BOTTOM) {\n\t\t\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_WIDTH, size.width);\n\t\t\t} else if (positionFromString(oldPositionValue) === Position.BOTTOM) {\n\t\t\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_HEIGHT, size.height);\n\t\t\t}\n\t\t}\n\n\t\tif (position === Position.BOTTOM && this.getPanelAlignment() !== 'center' && editorHidden) {\n\t\t\tthis.toggleMaximizedPanel();\n\t\t\teditorHidden = false;\n\t\t}\n\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.PANEL_POSITION, position);\n\n\t\tconst sideBarVisible = this.isVisible(Parts.SIDEBAR_PART);\n\t\tconst auxiliaryBarVisible = this.isVisible(Parts.AUXILIARYBAR_PART);\n\n\t\tif (position === Position.BOTTOM) {\n\t\t\tthis.workbenchGrid.moveView(this.panelPartView, editorHidden ? size.height : this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_HEIGHT), this.editorPartView, Direction.Down);\n\t\t} else if (position === Position.RIGHT) {\n\t\t\tthis.workbenchGrid.moveView(this.panelPartView, editorHidden ? size.width : this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_WIDTH), this.editorPartView, Direction.Right);\n\t\t} else {\n\t\t\tthis.workbenchGrid.moveView(this.panelPartView, editorHidden ? size.width : this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_WIDTH), this.editorPartView, Direction.Left);\n\t\t}\n\n\t\t// Reset sidebar to original size before shifting the panel\n\t\tthis.workbenchGrid.resizeView(this.sideBarPartView, sideBarSize);\n\t\tif (!sideBarVisible) {\n\t\t\tthis.setSideBarHidden(true);\n\t\t}\n\n\t\tthis.workbenchGrid.resizeView(this.auxiliaryBarPartView, auxiliaryBarSize);\n\t\tif (!auxiliaryBarVisible) {\n\t\t\tthis.setAuxiliaryBarHidden(true);\n\t\t}\n\n\t\tif (position === Position.BOTTOM) {\n\t\t\tthis.adjustPartPositions(this.getSideBarPosition(), this.getPanelAlignment(), position);\n\t\t}\n\n\t\tthis._onDidChangePanelPosition.fire(newPositionValue);\n\t}\n\n\tisWindowMaximized() {\n\t\treturn this.state.runtime.maximized;\n\t}\n\n\tupdateWindowMaximizedState(maximized: boolean) {\n\t\tthis.container.classList.toggle(LayoutClasses.MAXIMIZED, maximized);\n\n\t\tif (this.state.runtime.maximized === maximized) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.runtime.maximized = maximized;\n\n\t\tthis.updateWindowBorder();\n\t\tthis._onDidChangeWindowMaximized.fire(maximized);\n\t}\n\n\tgetVisibleNeighborPart(part: Parts, direction: Direction): Parts | undefined {\n\t\tif (!this.workbenchGrid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this.isVisible(part)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst neighborViews = this.workbenchGrid.getNeighborViews(this.getPart(part), direction, false);\n\n\t\tif (!neighborViews) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tfor (const neighborView of neighborViews) {\n\t\t\tconst neighborPart =\n\t\t\t\t[Parts.ACTIVITYBAR_PART, Parts.EDITOR_PART, Parts.PANEL_PART, Parts.AUXILIARYBAR_PART, Parts.SIDEBAR_PART, Parts.STATUSBAR_PART, Parts.TITLEBAR_PART]\n\t\t\t\t\t.find(partId => this.getPart(partId) === neighborView && this.isVisible(partId));\n\n\t\t\tif (neighborPart !== undefined) {\n\t\t\t\treturn neighborPart;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate onDidChangeWCO(): void {\n\t\tconst bannerFirst = this.workbenchGrid.getNeighborViews(this.titleBarPartView, Direction.Up, false).length > 0;\n\t\tconst shouldBannerBeFirst = this.shouldShowBannerFirst();\n\n\t\tif (bannerFirst !== shouldBannerBeFirst) {\n\t\t\tthis.workbenchGrid.moveView(this.bannerPartView, Sizing.Distribute, this.titleBarPartView, shouldBannerBeFirst ? Direction.Up : Direction.Down);\n\t\t}\n\n\t\tthis.workbenchGrid.setViewVisible(this.titleBarPartView, this.shouldShowTitleBar());\n\t}\n\n\tprivate arrangeEditorNodes(nodes: { editor: ISerializedNode; sideBar?: ISerializedNode; auxiliaryBar?: ISerializedNode }, availableHeight: number, availableWidth: number): ISerializedNode {\n\t\tif (!nodes.sideBar && !nodes.auxiliaryBar) {\n\t\t\tnodes.editor.size = availableHeight;\n\t\t\treturn nodes.editor;\n\t\t}\n\n\t\tconst result = [nodes.editor];\n\t\tnodes.editor.size = availableWidth;\n\t\tif (nodes.sideBar) {\n\t\t\tif (this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_POSITON) === Position.LEFT) {\n\t\t\t\tresult.splice(0, 0, nodes.sideBar);\n\t\t\t} else {\n\t\t\t\tresult.push(nodes.sideBar);\n\t\t\t}\n\n\t\t\tnodes.editor.size -= this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_HIDDEN) ? 0 : nodes.sideBar.size;\n\t\t}\n\n\t\tif (nodes.auxiliaryBar) {\n\t\t\tif (this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_POSITON) === Position.RIGHT) {\n\t\t\t\tresult.splice(0, 0, nodes.auxiliaryBar);\n\t\t\t} else {\n\t\t\t\tresult.push(nodes.auxiliaryBar);\n\t\t\t}\n\n\t\t\tnodes.editor.size -= this.stateModel.getRuntimeValue(LayoutStateKeys.AUXILIARYBAR_HIDDEN) ? 0 : nodes.auxiliaryBar.size;\n\t\t}\n\n\t\treturn {\n\t\t\ttype: 'branch',\n\t\t\tdata: result,\n\t\t\tsize: availableHeight\n\t\t};\n\t}\n\n\tprivate arrangeMiddleSectionNodes(nodes: { editor: ISerializedNode; panel: ISerializedNode; activityBar: ISerializedNode; sideBar: ISerializedNode; auxiliaryBar: ISerializedNode }, availableWidth: number, availableHeight: number): ISerializedNode[] {\n\t\tconst activityBarSize = this.stateModel.getRuntimeValue(LayoutStateKeys.ACTIVITYBAR_HIDDEN) ? 0 : nodes.activityBar.size;\n\t\tconst sideBarSize = this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_HIDDEN) ? 0 : nodes.sideBar.size;\n\t\tconst auxiliaryBarSize = this.stateModel.getRuntimeValue(LayoutStateKeys.AUXILIARYBAR_HIDDEN) ? 0 : nodes.auxiliaryBar.size;\n\t\tconst panelSize = this.stateModel.getInitializationValue(LayoutStateKeys.PANEL_SIZE) ? 0 : nodes.panel.size;\n\n\t\tconst result = [] as ISerializedNode[];\n\t\tif (this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_POSITION) !== Position.BOTTOM) {\n\t\t\tresult.push(nodes.editor);\n\t\t\tnodes.editor.size = availableWidth - activityBarSize - sideBarSize - panelSize - auxiliaryBarSize;\n\t\t\tif (this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_POSITION) === Position.RIGHT) {\n\t\t\t\tresult.push(nodes.panel);\n\t\t\t} else {\n\t\t\t\tresult.splice(0, 0, nodes.panel);\n\t\t\t}\n\n\t\t\tif (this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_POSITON) === Position.LEFT) {\n\t\t\t\tresult.push(nodes.auxiliaryBar);\n\t\t\t\tresult.splice(0, 0, nodes.sideBar);\n\t\t\t\tresult.splice(0, 0, nodes.activityBar);\n\t\t\t} else {\n\t\t\t\tresult.splice(0, 0, nodes.auxiliaryBar);\n\t\t\t\tresult.push(nodes.sideBar);\n\t\t\t\tresult.push(nodes.activityBar);\n\t\t\t}\n\t\t} else {\n\t\t\tconst panelAlignment = this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_ALIGNMENT);\n\t\t\tconst sideBarPosition = this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_POSITON);\n\t\t\tconst sideBarNextToEditor = !(panelAlignment === 'center' || (sideBarPosition === Position.LEFT && panelAlignment === 'right') || (sideBarPosition === Position.RIGHT && panelAlignment === 'left'));\n\t\t\tconst auxiliaryBarNextToEditor = !(panelAlignment === 'center' || (sideBarPosition === Position.RIGHT && panelAlignment === 'right') || (sideBarPosition === Position.LEFT && panelAlignment === 'left'));\n\n\t\t\tconst editorSectionWidth = availableWidth - activityBarSize - (sideBarNextToEditor ? 0 : sideBarSize) - (auxiliaryBarNextToEditor ? 0 : auxiliaryBarSize);\n\t\t\tresult.push({\n\t\t\t\ttype: 'branch',\n\t\t\t\tdata: [this.arrangeEditorNodes({\n\t\t\t\t\teditor: nodes.editor,\n\t\t\t\t\tsideBar: sideBarNextToEditor ? nodes.sideBar : undefined,\n\t\t\t\t\tauxiliaryBar: auxiliaryBarNextToEditor ? nodes.auxiliaryBar : undefined\n\t\t\t\t}, availableHeight - panelSize, editorSectionWidth), nodes.panel],\n\t\t\t\tsize: editorSectionWidth\n\t\t\t});\n\n\t\t\tif (!sideBarNextToEditor) {\n\t\t\t\tif (sideBarPosition === Position.LEFT) {\n\t\t\t\t\tresult.splice(0, 0, nodes.sideBar);\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(nodes.sideBar);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!auxiliaryBarNextToEditor) {\n\t\t\t\tif (sideBarPosition === Position.RIGHT) {\n\t\t\t\t\tresult.splice(0, 0, nodes.auxiliaryBar);\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(nodes.auxiliaryBar);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (sideBarPosition === Position.LEFT) {\n\t\t\t\tresult.splice(0, 0, nodes.activityBar);\n\t\t\t} else {\n\t\t\t\tresult.push(nodes.activityBar);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate createGridDescriptor(): ISerializedGrid {\n\t\tconst { width, height } = this.stateModel.getInitializationValue(LayoutStateKeys.GRID_SIZE);\n\t\tconst sideBarSize = this.stateModel.getInitializationValue(LayoutStateKeys.SIDEBAR_SIZE);\n\t\tconst auxiliaryBarPartSize = this.stateModel.getInitializationValue(LayoutStateKeys.AUXILIARYBAR_SIZE);\n\t\tconst panelSize = this.stateModel.getInitializationValue(LayoutStateKeys.PANEL_SIZE);\n\n\t\tconst titleBarHeight = this.titleBarPartView.minimumHeight;\n\t\tconst bannerHeight = this.bannerPartView.minimumHeight;\n\t\tconst statusBarHeight = this.statusBarPartView.minimumHeight;\n\t\tconst activityBarWidth = this.activityBarPartView.minimumWidth;\n\t\tconst middleSectionHeight = height - titleBarHeight - statusBarHeight;\n\n\t\tconst titleAndBanner: ISerializedNode[] = [\n\t\t\t{\n\t\t\t\ttype: 'leaf',\n\t\t\t\tdata: { type: Parts.TITLEBAR_PART },\n\t\t\t\tsize: titleBarHeight,\n\t\t\t\tvisible: this.isVisible(Parts.TITLEBAR_PART)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'leaf',\n\t\t\t\tdata: { type: Parts.BANNER_PART },\n\t\t\t\tsize: bannerHeight,\n\t\t\t\tvisible: false\n\t\t\t}\n\t\t];\n\n\t\tconst activityBarNode: ISerializedLeafNode = {\n\t\t\ttype: 'leaf',\n\t\t\tdata: { type: Parts.ACTIVITYBAR_PART },\n\t\t\tsize: activityBarWidth,\n\t\t\tvisible: !this.stateModel.getRuntimeValue(LayoutStateKeys.ACTIVITYBAR_HIDDEN)\n\t\t};\n\n\t\tconst sideBarNode: ISerializedLeafNode = {\n\t\t\ttype: 'leaf',\n\t\t\tdata: { type: Parts.SIDEBAR_PART },\n\t\t\tsize: sideBarSize,\n\t\t\tvisible: !this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_HIDDEN)\n\t\t};\n\n\t\tconst auxiliaryBarNode: ISerializedLeafNode = {\n\t\t\ttype: 'leaf',\n\t\t\tdata: { type: Parts.AUXILIARYBAR_PART },\n\t\t\tsize: auxiliaryBarPartSize,\n\t\t\tvisible: this.isVisible(Parts.AUXILIARYBAR_PART)\n\t\t};\n\n\t\tconst editorNode: ISerializedLeafNode = {\n\t\t\ttype: 'leaf',\n\t\t\tdata: { type: Parts.EDITOR_PART },\n\t\t\tsize: 0, // Update based on sibling sizes\n\t\t\tvisible: !this.stateModel.getRuntimeValue(LayoutStateKeys.EDITOR_HIDDEN)\n\t\t};\n\n\t\tconst panelNode: ISerializedLeafNode = {\n\t\t\ttype: 'leaf',\n\t\t\tdata: { type: Parts.PANEL_PART },\n\t\t\tsize: panelSize,\n\t\t\tvisible: !this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_HIDDEN)\n\t\t};\n\n\n\t\tconst middleSection: ISerializedNode[] = this.arrangeMiddleSectionNodes({\n\t\t\tactivityBar: activityBarNode,\n\t\t\tauxiliaryBar: auxiliaryBarNode,\n\t\t\teditor: editorNode,\n\t\t\tpanel: panelNode,\n\t\t\tsideBar: sideBarNode\n\t\t}, width, middleSectionHeight);\n\n\t\tconst result: ISerializedGrid = {\n\t\t\troot: {\n\t\t\t\ttype: 'branch',\n\t\t\t\tsize: width,\n\t\t\t\tdata: [\n\t\t\t\t\t...(this.shouldShowBannerFirst() ? titleAndBanner.reverse() : titleAndBanner),\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'branch',\n\t\t\t\t\t\tdata: middleSection,\n\t\t\t\t\t\tsize: middleSectionHeight\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'leaf',\n\t\t\t\t\t\tdata: { type: Parts.STATUSBAR_PART },\n\t\t\t\t\t\tsize: statusBarHeight,\n\t\t\t\t\t\tvisible: !this.stateModel.getRuntimeValue(LayoutStateKeys.STATUSBAR_HIDDEN)\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\torientation: Orientation.VERTICAL,\n\t\t\twidth,\n\t\t\theight\n\t\t};\n\n\t\ttype StartupLayoutEvent = {\n\t\t\tactivityBarVisible: boolean;\n\t\t\tsideBarVisible: boolean;\n\t\t\tauxiliaryBarVisible: boolean;\n\t\t\tpanelVisible: boolean;\n\t\t\tstatusbarVisible: boolean;\n\t\t\tsideBarPosition: string;\n\t\t\tpanelPosition: string;\n\t\t};\n\n\t\ttype StartupLayoutEventClassification = {\n\t\t\towner: 'sbatten';\n\t\t\tcomment: 'Information about the layout of the workbench during statup';\n\t\t\tactivityBarVisible: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Whether or the not the activity bar is visible' };\n\t\t\tsideBarVisible: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Whether or the not the primary side bar is visible' };\n\t\t\tauxiliaryBarVisible: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Whether or the not the secondary side bar is visible' };\n\t\t\tpanelVisible: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Whether or the not the panel is visible' };\n\t\t\tstatusbarVisible: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Whether or the not the status bar is visible' };\n\t\t\tsideBarPosition: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Whether the primary side bar is on the left or right' };\n\t\t\tpanelPosition: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Whether the panel is on the bottom, left, or right' };\n\t\t};\n\n\t\tconst layoutDescriptor: StartupLayoutEvent = {\n\t\t\tactivityBarVisible: !this.stateModel.getRuntimeValue(LayoutStateKeys.ACTIVITYBAR_HIDDEN),\n\t\t\tsideBarVisible: !this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_HIDDEN),\n\t\t\tauxiliaryBarVisible: !this.stateModel.getRuntimeValue(LayoutStateKeys.AUXILIARYBAR_HIDDEN),\n\t\t\tpanelVisible: !this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_HIDDEN),\n\t\t\tstatusbarVisible: !this.stateModel.getRuntimeValue(LayoutStateKeys.STATUSBAR_HIDDEN),\n\t\t\tsideBarPosition: positionToString(this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_POSITON)),\n\t\t\tpanelPosition: positionToString(this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_POSITION)),\n\t\t};\n\n\t\tthis.telemetryService.publicLog2<StartupLayoutEvent, StartupLayoutEventClassification>('startupLayout', layoutDescriptor);\n\n\t\treturn result;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\ntype ZenModeConfiguration = {\n\tcenterLayout: boolean;\n\tfullScreen: boolean;\n\thideActivityBar: boolean;\n\thideLineNumbers: boolean;\n\thideStatusBar: boolean;\n\thideTabs: boolean;\n\trestore: boolean;\n\tsilentNotifications: boolean;\n};\n\nfunction getZenModeConfiguration(configurationService: IConfigurationService): ZenModeConfiguration {\n\treturn configurationService.getValue<ZenModeConfiguration>(WorkbenchLayoutSettings.ZEN_MODE_CONFIG);\n}\n\n//#endregion\n\n//#region Layout State Model\n\ninterface IWorkbenchLayoutStateKey {\n\treadonly name: string;\n\treadonly runtime: boolean;\n\treadonly defaultValue: unknown;\n\treadonly scope: StorageScope;\n\treadonly target: StorageTarget;\n\treadonly zenModeIgnore?: boolean;\n}\n\ntype StorageKeyType = string | boolean | number | object;\n\nabstract class WorkbenchLayoutStateKey<T extends StorageKeyType> implements IWorkbenchLayoutStateKey {\n\n\tabstract readonly runtime: boolean;\n\n\tconstructor(readonly name: string, readonly scope: StorageScope, readonly target: StorageTarget, public defaultValue: T) { }\n}\n\nclass RuntimeStateKey<T extends StorageKeyType> extends WorkbenchLayoutStateKey<T> {\n\n\treadonly runtime = true;\n\n\tconstructor(name: string, scope: StorageScope, target: StorageTarget, defaultValue: T, readonly zenModeIgnore?: boolean) {\n\t\tsuper(name, scope, target, defaultValue);\n\t}\n}\n\nclass InitializationStateKey<T extends StorageKeyType> extends WorkbenchLayoutStateKey<T> {\n\treadonly runtime = false;\n}\n\nconst LayoutStateKeys = {\n\n\t// Editor\n\tEDITOR_CENTERED: new RuntimeStateKey<boolean>('editor.centered', StorageScope.WORKSPACE, StorageTarget.MACHINE, false),\n\n\t// Zen Mode\n\tZEN_MODE_ACTIVE: new RuntimeStateKey<boolean>('zenMode.active', StorageScope.WORKSPACE, StorageTarget.MACHINE, false),\n\tZEN_MODE_EXIT_INFO: new RuntimeStateKey('zenMode.exitInfo', StorageScope.WORKSPACE, StorageTarget.MACHINE, {\n\t\ttransitionedToCenteredEditorLayout: false,\n\t\ttransitionedToFullScreen: false,\n\t\thandleNotificationsDoNotDisturbMode: false,\n\t\twasVisible: {\n\t\t\tauxiliaryBar: false,\n\t\t\tpanel: false,\n\t\t\tsideBar: false,\n\t\t},\n\t}),\n\n\t// Part Sizing\n\tGRID_SIZE: new InitializationStateKey('grid.size', StorageScope.PROFILE, StorageTarget.MACHINE, { width: 800, height: 600 }),\n\tSIDEBAR_SIZE: new InitializationStateKey<number>('sideBar.size', StorageScope.PROFILE, StorageTarget.MACHINE, 200),\n\tAUXILIARYBAR_SIZE: new InitializationStateKey<number>('auxiliaryBar.size', StorageScope.PROFILE, StorageTarget.MACHINE, 200),\n\tPANEL_SIZE: new InitializationStateKey<number>('panel.size', StorageScope.PROFILE, StorageTarget.MACHINE, 300),\n\n\tPANEL_LAST_NON_MAXIMIZED_HEIGHT: new RuntimeStateKey<number>('panel.lastNonMaximizedHeight', StorageScope.PROFILE, StorageTarget.MACHINE, 300),\n\tPANEL_LAST_NON_MAXIMIZED_WIDTH: new RuntimeStateKey<number>('panel.lastNonMaximizedWidth', StorageScope.PROFILE, StorageTarget.MACHINE, 300),\n\tPANEL_WAS_LAST_MAXIMIZED: new RuntimeStateKey<boolean>('panel.wasLastMaximized', StorageScope.WORKSPACE, StorageTarget.MACHINE, false),\n\n\t// Part Positions\n\tSIDEBAR_POSITON: new RuntimeStateKey<Position>('sideBar.position', StorageScope.WORKSPACE, StorageTarget.MACHINE, Position.LEFT),\n\tPANEL_POSITION: new RuntimeStateKey<Position>('panel.position', StorageScope.WORKSPACE, StorageTarget.MACHINE, Position.BOTTOM),\n\tPANEL_ALIGNMENT: new RuntimeStateKey<PanelAlignment>('panel.alignment', StorageScope.PROFILE, StorageTarget.USER, 'center'),\n\n\t// Part Visibility\n\tACTIVITYBAR_HIDDEN: new RuntimeStateKey<boolean>('activityBar.hidden', StorageScope.WORKSPACE, StorageTarget.MACHINE, false, true),\n\tSIDEBAR_HIDDEN: new RuntimeStateKey<boolean>('sideBar.hidden', StorageScope.WORKSPACE, StorageTarget.MACHINE, false),\n\tEDITOR_HIDDEN: new RuntimeStateKey<boolean>('editor.hidden', StorageScope.WORKSPACE, StorageTarget.MACHINE, false),\n\tPANEL_HIDDEN: new RuntimeStateKey<boolean>('panel.hidden', StorageScope.WORKSPACE, StorageTarget.MACHINE, true),\n\tAUXILIARYBAR_HIDDEN: new RuntimeStateKey<boolean>('auxiliaryBar.hidden', StorageScope.WORKSPACE, StorageTarget.MACHINE, true),\n\tSTATUSBAR_HIDDEN: new RuntimeStateKey<boolean>('statusBar.hidden', StorageScope.WORKSPACE, StorageTarget.MACHINE, false, true)\n\n} as const;\n\ninterface ILayoutStateChangeEvent<T extends StorageKeyType> {\n\treadonly key: RuntimeStateKey<T>;\n\treadonly value: T;\n}\n\nenum WorkbenchLayoutSettings {\n\tPANEL_POSITION = 'workbench.panel.defaultLocation',\n\tPANEL_OPENS_MAXIMIZED = 'workbench.panel.opensMaximized',\n\tZEN_MODE_CONFIG = 'zenMode',\n\tZEN_MODE_SILENT_NOTIFICATIONS = 'zenMode.silentNotifications',\n\tEDITOR_CENTERED_LAYOUT_AUTO_RESIZE = 'workbench.editor.centeredLayoutAutoResize',\n}\n\nenum LegacyWorkbenchLayoutSettings {\n\tACTIVITYBAR_VISIBLE = 'workbench.activityBar.visible', // Deprecated to UI State\n\tSTATUSBAR_VISIBLE = 'workbench.statusBar.visible', // Deprecated to UI State\n\tSIDEBAR_POSITION = 'workbench.sideBar.location', // Deprecated to UI State\n}\n\nclass LayoutStateModel extends Disposable {\n\n\tstatic readonly STORAGE_PREFIX = 'workbench.';\n\n\tprivate readonly _onDidChangeState = this._register(new Emitter<ILayoutStateChangeEvent<StorageKeyType>>());\n\treadonly onDidChangeState = this._onDidChangeState.event;\n\n\tprivate readonly stateCache = new Map<string, unknown>();\n\n\tconstructor(\n\t\tprivate readonly storageService: IStorageService,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\tprivate readonly container: HTMLElement\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(configurationChange => this.updateStateFromLegacySettings(configurationChange)));\n\t}\n\n\tprivate updateStateFromLegacySettings(configurationChangeEvent: IConfigurationChangeEvent): void {\n\t\tconst isZenMode = this.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE);\n\n\t\tif (configurationChangeEvent.affectsConfiguration(LegacyWorkbenchLayoutSettings.ACTIVITYBAR_VISIBLE) && !isZenMode) {\n\t\t\tthis.setRuntimeValueAndFire(LayoutStateKeys.ACTIVITYBAR_HIDDEN, !this.configurationService.getValue(LegacyWorkbenchLayoutSettings.ACTIVITYBAR_VISIBLE));\n\t\t}\n\n\t\tif (configurationChangeEvent.affectsConfiguration(LegacyWorkbenchLayoutSettings.STATUSBAR_VISIBLE) && !isZenMode) {\n\t\t\tthis.setRuntimeValueAndFire(LayoutStateKeys.STATUSBAR_HIDDEN, !this.configurationService.getValue(LegacyWorkbenchLayoutSettings.STATUSBAR_VISIBLE));\n\t\t}\n\n\t\tif (configurationChangeEvent.affectsConfiguration(LegacyWorkbenchLayoutSettings.SIDEBAR_POSITION)) {\n\t\t\tthis.setRuntimeValueAndFire(LayoutStateKeys.SIDEBAR_POSITON, positionFromString(this.configurationService.getValue(LegacyWorkbenchLayoutSettings.SIDEBAR_POSITION) ?? 'left'));\n\t\t}\n\t}\n\n\tprivate updateLegacySettingsFromState<T extends StorageKeyType>(key: RuntimeStateKey<T>, value: T): void {\n\t\tconst isZenMode = this.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE);\n\t\tif (key.zenModeIgnore && isZenMode) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (key === LayoutStateKeys.ACTIVITYBAR_HIDDEN) {\n\t\t\tthis.configurationService.updateValue(LegacyWorkbenchLayoutSettings.ACTIVITYBAR_VISIBLE, !value);\n\t\t} else if (key === LayoutStateKeys.STATUSBAR_HIDDEN) {\n\t\t\tthis.configurationService.updateValue(LegacyWorkbenchLayoutSettings.STATUSBAR_VISIBLE, !value);\n\t\t} else if (key === LayoutStateKeys.SIDEBAR_POSITON) {\n\t\t\tthis.configurationService.updateValue(LegacyWorkbenchLayoutSettings.SIDEBAR_POSITION, positionToString(value as Position));\n\t\t}\n\t}\n\n\tload(): void {\n\t\tlet key: keyof typeof LayoutStateKeys;\n\n\t\t// Load stored values for all keys\n\t\tfor (key in LayoutStateKeys) {\n\t\t\tconst stateKey = LayoutStateKeys[key] as WorkbenchLayoutStateKey<StorageKeyType>;\n\t\t\tconst value = this.loadKeyFromStorage(stateKey);\n\n\t\t\tif (value !== undefined) {\n\t\t\t\tthis.stateCache.set(stateKey.name, value);\n\t\t\t}\n\t\t}\n\n\t\t// Apply legacy settings\n\t\tthis.stateCache.set(LayoutStateKeys.ACTIVITYBAR_HIDDEN.name, !this.configurationService.getValue(LegacyWorkbenchLayoutSettings.ACTIVITYBAR_VISIBLE));\n\t\tthis.stateCache.set(LayoutStateKeys.STATUSBAR_HIDDEN.name, !this.configurationService.getValue(LegacyWorkbenchLayoutSettings.STATUSBAR_VISIBLE));\n\t\tthis.stateCache.set(LayoutStateKeys.SIDEBAR_POSITON.name, positionFromString(this.configurationService.getValue(LegacyWorkbenchLayoutSettings.SIDEBAR_POSITION) ?? 'left'));\n\n\t\t// Set dynamic defaults: part sizing and side bar visibility\n\t\tconst workbenchDimensions = getClientArea(this.container);\n\t\tLayoutStateKeys.PANEL_POSITION.defaultValue = positionFromString(this.configurationService.getValue(WorkbenchLayoutSettings.PANEL_POSITION) ?? 'bottom');\n\t\tLayoutStateKeys.GRID_SIZE.defaultValue = { height: workbenchDimensions.height, width: workbenchDimensions.width };\n\t\tLayoutStateKeys.SIDEBAR_SIZE.defaultValue = Math.min(300, workbenchDimensions.width / 4);\n\t\tLayoutStateKeys.AUXILIARYBAR_SIZE.defaultValue = Math.min(300, workbenchDimensions.width / 4);\n\t\tLayoutStateKeys.PANEL_SIZE.defaultValue = (this.stateCache.get(LayoutStateKeys.PANEL_POSITION.name) ?? LayoutStateKeys.PANEL_POSITION.defaultValue) === 'bottom' ? workbenchDimensions.height / 3 : workbenchDimensions.width / 4;\n\t\tLayoutStateKeys.SIDEBAR_HIDDEN.defaultValue = this.contextService.getWorkbenchState() === WorkbenchState.EMPTY;\n\n\t\t// Apply all defaults\n\t\tfor (key in LayoutStateKeys) {\n\t\t\tconst stateKey = LayoutStateKeys[key];\n\t\t\tif (this.stateCache.get(stateKey.name) === undefined) {\n\t\t\t\tthis.stateCache.set(stateKey.name, stateKey.defaultValue);\n\t\t\t}\n\t\t}\n\n\t\t// Register for runtime key changes\n\t\tthis._register(this.storageService.onDidChangeValue(StorageScope.PROFILE, undefined, this._register(new DisposableStore()))(storageChangeEvent => {\n\t\t\tlet key: keyof typeof LayoutStateKeys;\n\t\t\tfor (key in LayoutStateKeys) {\n\t\t\t\tconst stateKey = LayoutStateKeys[key] as WorkbenchLayoutStateKey<StorageKeyType>;\n\t\t\t\tif (stateKey instanceof RuntimeStateKey && stateKey.scope === StorageScope.PROFILE && stateKey.target === StorageTarget.USER) {\n\t\t\t\t\tif (`${LayoutStateModel.STORAGE_PREFIX}${stateKey.name}` === storageChangeEvent.key) {\n\t\t\t\t\t\tconst value = this.loadKeyFromStorage(stateKey) ?? stateKey.defaultValue;\n\t\t\t\t\t\tif (this.stateCache.get(stateKey.name) !== value) {\n\t\t\t\t\t\t\tthis.stateCache.set(stateKey.name, value);\n\t\t\t\t\t\t\tthis._onDidChangeState.fire({ key: stateKey, value });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tsave(workspace: boolean, global: boolean): void {\n\t\tlet key: keyof typeof LayoutStateKeys;\n\n\t\tconst isZenMode = this.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE);\n\n\t\tfor (key in LayoutStateKeys) {\n\t\t\tconst stateKey = LayoutStateKeys[key] as WorkbenchLayoutStateKey<StorageKeyType>;\n\t\t\tif ((workspace && stateKey.scope === StorageScope.WORKSPACE) ||\n\t\t\t\t(global && stateKey.scope === StorageScope.PROFILE)) {\n\t\t\t\tif (isZenMode && stateKey instanceof RuntimeStateKey && stateKey.zenModeIgnore) {\n\t\t\t\t\tcontinue; // Don't write out specific keys while in zen mode\n\t\t\t\t}\n\n\t\t\t\tthis.saveKeyToStorage(stateKey);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetInitializationValue<T extends StorageKeyType>(key: InitializationStateKey<T>): T {\n\t\treturn this.stateCache.get(key.name) as T;\n\t}\n\n\tsetInitializationValue<T extends StorageKeyType>(key: InitializationStateKey<T>, value: T): void {\n\t\tthis.stateCache.set(key.name, value);\n\t}\n\n\tgetRuntimeValue<T extends StorageKeyType>(key: RuntimeStateKey<T>, fallbackToSetting?: boolean): T {\n\t\tif (fallbackToSetting) {\n\t\t\tswitch (key) {\n\t\t\t\tcase LayoutStateKeys.ACTIVITYBAR_HIDDEN:\n\t\t\t\t\tthis.stateCache.set(key.name, !this.configurationService.getValue(LegacyWorkbenchLayoutSettings.ACTIVITYBAR_VISIBLE));\n\t\t\t\t\tbreak;\n\t\t\t\tcase LayoutStateKeys.STATUSBAR_HIDDEN:\n\t\t\t\t\tthis.stateCache.set(key.name, !this.configurationService.getValue(LegacyWorkbenchLayoutSettings.STATUSBAR_VISIBLE));\n\t\t\t\t\tbreak;\n\t\t\t\tcase LayoutStateKeys.SIDEBAR_POSITON:\n\t\t\t\t\tthis.stateCache.set(key.name, this.configurationService.getValue(LegacyWorkbenchLayoutSettings.SIDEBAR_POSITION) ?? 'left');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.stateCache.get(key.name) as T;\n\t}\n\n\tsetRuntimeValue<T extends StorageKeyType>(key: RuntimeStateKey<T>, value: T): void {\n\t\tthis.stateCache.set(key.name, value);\n\t\tconst isZenMode = this.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE);\n\n\t\tif (key.scope === StorageScope.PROFILE) {\n\t\t\tif (!isZenMode || !key.zenModeIgnore) {\n\t\t\t\tthis.saveKeyToStorage<T>(key);\n\t\t\t\tthis.updateLegacySettingsFromState(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setRuntimeValueAndFire<T extends StorageKeyType>(key: RuntimeStateKey<T>, value: T): void {\n\t\tconst previousValue = this.stateCache.get(key.name);\n\t\tif (previousValue === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setRuntimeValue(key, value);\n\t\tthis._onDidChangeState.fire({ key, value });\n\t}\n\n\tprivate saveKeyToStorage<T extends StorageKeyType>(key: WorkbenchLayoutStateKey<T>): void {\n\t\tconst value = this.stateCache.get(key.name) as T;\n\t\tthis.storageService.store(`${LayoutStateModel.STORAGE_PREFIX}${key.name}`, typeof value === 'object' ? JSON.stringify(value) : value, key.scope, key.target);\n\t}\n\n\tprivate loadKeyFromStorage<T extends StorageKeyType>(key: WorkbenchLayoutStateKey<T>): T | undefined {\n\t\tlet value: any = this.storageService.get(`${LayoutStateModel.STORAGE_PREFIX}${key.name}`, key.scope);\n\n\t\tif (value !== undefined) {\n\t\t\tswitch (typeof key.defaultValue) {\n\t\t\t\tcase 'boolean': value = value === 'true'; break;\n\t\t\t\tcase 'number': value = parseInt(value); break;\n\t\t\t\tcase 'object': value = JSON.parse(value); break;\n\t\t\t}\n\t\t}\n\n\t\treturn value as T | undefined;\n\t}\n}\n\n//#endregion\n"]}