{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/browser/composite.ts"],"names":[],"mappings":"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","file":"composite.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction, IActionRunner, ActionRunner } from 'vs/base/common/actions';\nimport { Component } from 'vs/workbench/common/component';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IComposite, ICompositeControl } from 'vs/workbench/common/composite';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IConstructorSignature, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { trackFocus, Dimension, IDomPosition } from 'vs/base/browser/dom';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { IActionViewItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { MenuId } from 'vs/platform/actions/common/actions';\nimport { IBoundarySashes } from 'vs/base/browser/ui/sash/sash';\n\n/**\n * Composites are layed out in the sidebar and panel part of the workbench. At a time only one composite\n * can be open in the sidebar, and only one composite can be open in the panel.\n *\n * Each composite has a minimized representation that is good enough to provide some\n * information about the state of the composite data.\n *\n * The workbench will keep a composite alive after it has been created and show/hide it based on\n * user interaction. The lifecycle of a composite goes in the order create(), setVisible(true|false),\n * layout(), focus(), dispose(). During use of the workbench, a composite will often receive a setVisible,\n * layout and focus call, but only one create and dispose call.\n */\nexport abstract class Composite extends Component implements IComposite {\n\n\tprivate readonly _onTitleAreaUpdate = this._register(new Emitter<void>());\n\treadonly onTitleAreaUpdate = this._onTitleAreaUpdate.event;\n\n\tprivate _onDidFocus: Emitter<void> | undefined;\n\tget onDidFocus(): Event<void> {\n\t\tif (!this._onDidFocus) {\n\t\t\tthis._onDidFocus = this.registerFocusTrackEvents().onDidFocus;\n\t\t}\n\n\t\treturn this._onDidFocus.event;\n\t}\n\n\tprotected fireOnDidFocus(): void {\n\t\tthis._onDidFocus?.fire();\n\t}\n\n\tprivate _onDidBlur: Emitter<void> | undefined;\n\tget onDidBlur(): Event<void> {\n\t\tif (!this._onDidBlur) {\n\t\t\tthis._onDidBlur = this.registerFocusTrackEvents().onDidBlur;\n\t\t}\n\n\t\treturn this._onDidBlur.event;\n\t}\n\n\tprivate _hasFocus = false;\n\thasFocus(): boolean {\n\t\treturn this._hasFocus;\n\t}\n\n\tprivate registerFocusTrackEvents(): { onDidFocus: Emitter<void>; onDidBlur: Emitter<void> } {\n\t\tconst container = assertIsDefined(this.getContainer());\n\t\tconst focusTracker = this._register(trackFocus(container));\n\n\t\tconst onDidFocus = this._onDidFocus = this._register(new Emitter<void>());\n\t\tthis._register(focusTracker.onDidFocus(() => {\n\t\t\tthis._hasFocus = true;\n\n\t\t\tonDidFocus.fire();\n\t\t}));\n\n\t\tconst onDidBlur = this._onDidBlur = this._register(new Emitter<void>());\n\t\tthis._register(focusTracker.onDidBlur(() => {\n\t\t\tthis._hasFocus = false;\n\n\t\t\tonDidBlur.fire();\n\t\t}));\n\n\t\treturn { onDidFocus, onDidBlur };\n\t}\n\n\tprotected actionRunner: IActionRunner | undefined;\n\n\tprivate _telemetryService: ITelemetryService;\n\tprotected get telemetryService(): ITelemetryService { return this._telemetryService; }\n\n\tprivate visible: boolean;\n\tprivate parent: HTMLElement | undefined;\n\n\tconstructor(\n\t\tid: string,\n\t\ttelemetryService: ITelemetryService,\n\t\tthemeService: IThemeService,\n\t\tstorageService: IStorageService\n\t) {\n\t\tsuper(id, themeService, storageService);\n\n\t\tthis._telemetryService = telemetryService;\n\t\tthis.visible = false;\n\t}\n\n\tgetTitle(): string | undefined {\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Note: Clients should not call this method, the workbench calls this\n\t * method. Calling it otherwise may result in unexpected behavior.\n\t *\n\t * Called to create this composite on the provided parent. This method is only\n\t * called once during the lifetime of the workbench.\n\t * Note that DOM-dependent calculations should be performed from the setVisible()\n\t * call. Only then the composite will be part of the DOM.\n\t */\n\tcreate(parent: HTMLElement): void {\n\t\tthis.parent = parent;\n\t}\n\n\t/**\n\t * Returns the container this composite is being build in.\n\t */\n\tgetContainer(): HTMLElement | undefined {\n\t\treturn this.parent;\n\t}\n\n\t/**\n\t * Note: Clients should not call this method, the workbench calls this\n\t * method. Calling it otherwise may result in unexpected behavior.\n\t *\n\t * Called to indicate that the composite has become visible or hidden. This method\n\t * is called more than once during workbench lifecycle depending on the user interaction.\n\t * The composite will be on-DOM if visible is set to true and off-DOM otherwise.\n\t *\n\t * Typically this operation should be fast though because setVisible might be called many times during a session.\n\t * If there is a long running operation it is fine to have it running in the background asyncly and return before.\n\t */\n\tsetVisible(visible: boolean): void {\n\t\tif (this.visible !== !!visible) {\n\t\t\tthis.visible = visible;\n\t\t}\n\t}\n\n\t/**\n\t * Called when this composite should receive keyboard focus.\n\t */\n\tfocus(): void {\n\t\t// Subclasses can implement\n\t}\n\n\t/**\n\t * Layout the contents of this composite using the provided dimensions.\n\t */\n\tabstract layout(dimension: Dimension, position?: IDomPosition): void;\n\n\t/**\n\t * Set boundary sashes for this composite. These are used to create\n\t * draggable corner areas with inner sashes.\n\t */\n\tabstract setBoundarySashes(sashes: IBoundarySashes): void;\n\n\t/**\n\t * Update the styles of the contents of this composite.\n\t */\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\t}\n\n\t/**\n\t *\n\t * @returns the action runner for this composite\n\t */\n\tgetMenuIds(): readonly MenuId[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Returns an array of actions to show in the action bar of the composite.\n\t */\n\tgetActions(): readonly IAction[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Returns an array of actions to show in the action bar of the composite\n\t * in a less prominent way then action from getActions.\n\t */\n\tgetSecondaryActions(): readonly IAction[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Returns an array of actions to show in the context menu of the composite\n\t */\n\tgetContextMenuActions(): readonly IAction[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * For any of the actions returned by this composite, provide an IActionViewItem in\n\t * cases where the implementor of the composite wants to override the presentation\n\t * of an action. Returns undefined to indicate that the action is not rendered through\n\t * an action item.\n\t */\n\tgetActionViewItem(action: IAction): IActionViewItem | undefined {\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Provide a context to be passed to the toolbar.\n\t */\n\tgetActionsContext(): unknown {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the instance of IActionRunner to use with this composite for the\n\t * composite tool bar.\n\t */\n\tgetActionRunner(): IActionRunner {\n\t\tif (!this.actionRunner) {\n\t\t\tthis.actionRunner = this._register(new ActionRunner());\n\t\t}\n\n\t\treturn this.actionRunner;\n\t}\n\n\t/**\n\t * Method for composite implementors to indicate to the composite container that the title or the actions\n\t * of the composite have changed. Calling this method will cause the container to ask for title (getTitle())\n\t * and actions (getActions(), getSecondaryActions()) if the composite is visible or the next time the composite\n\t * gets visible.\n\t */\n\tprotected updateTitleArea(): void {\n\t\tthis._onTitleAreaUpdate.fire();\n\t}\n\n\t/**\n\t * Returns true if this composite is currently visible and false otherwise.\n\t */\n\tisVisible(): boolean {\n\t\treturn this.visible;\n\t}\n\n\t/**\n\t * Returns the underlying composite control or `undefined` if it is not accessible.\n\t */\n\tgetControl(): ICompositeControl | undefined {\n\t\treturn undefined;\n\t}\n}\n\n/**\n * A composite descriptor is a lightweight descriptor of a composite in the workbench.\n */\nexport abstract class CompositeDescriptor<T extends Composite> {\n\n\tconstructor(\n\t\tprivate readonly ctor: IConstructorSignature<T>,\n\t\treadonly id: string,\n\t\treadonly name: string,\n\t\treadonly cssClass?: string,\n\t\treadonly order?: number,\n\t\treadonly requestedIndex?: number,\n\t) { }\n\n\tinstantiate(instantiationService: IInstantiationService): T {\n\t\treturn instantiationService.createInstance(this.ctor);\n\t}\n}\n\nexport abstract class CompositeRegistry<T extends Composite> extends Disposable {\n\n\tprivate readonly _onDidRegister = this._register(new Emitter<CompositeDescriptor<T>>());\n\treadonly onDidRegister = this._onDidRegister.event;\n\n\tprivate readonly _onDidDeregister = this._register(new Emitter<CompositeDescriptor<T>>());\n\treadonly onDidDeregister = this._onDidDeregister.event;\n\n\tprivate readonly composites: CompositeDescriptor<T>[] = [];\n\n\tprotected registerComposite(descriptor: CompositeDescriptor<T>): void {\n\t\tif (this.compositeById(descriptor.id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.composites.push(descriptor);\n\t\tthis._onDidRegister.fire(descriptor);\n\t}\n\n\tprotected deregisterComposite(id: string): void {\n\t\tconst descriptor = this.compositeById(id);\n\t\tif (!descriptor) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.composites.splice(this.composites.indexOf(descriptor), 1);\n\t\tthis._onDidDeregister.fire(descriptor);\n\t}\n\n\tgetComposite(id: string): CompositeDescriptor<T> | undefined {\n\t\treturn this.compositeById(id);\n\t}\n\n\tprotected getComposites(): CompositeDescriptor<T>[] {\n\t\treturn this.composites.slice(0);\n\t}\n\n\tprivate compositeById(id: string): CompositeDescriptor<T> | undefined {\n\t\treturn this.composites.find(composite => composite.id === id);\n\t}\n}\n"]}