{"version":3,"sources":["vs/workbench/browser/actions/workspaceActions.ts"],"names":[],"mappings":"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","file":"workspaceActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { IWorkspaceContextService, WorkbenchState, IWorkspaceFolder, hasWorkspaceFileExtension } from 'vs/platform/workspace/common/workspace';\nimport { IWorkspaceEditingService } from 'vs/workbench/services/workspaces/common/workspaceEditing';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ADD_ROOT_FOLDER_COMMAND_ID, ADD_ROOT_FOLDER_LABEL, PICK_WORKSPACE_FOLDER_COMMAND_ID, SET_ROOT_FOLDER_COMMAND_ID } from 'vs/workbench/browser/actions/workspaceCommands';\nimport { IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { MenuRegistry, MenuId, Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { EmptyWorkspaceSupportContext, EnterMultiRootWorkspaceSupportContext, OpenFolderWorkspaceSupportContext, WorkbenchStateContext, WorkspaceFolderCountContext } from 'vs/workbench/common/contextkeys';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { KeyChord, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IsMacNativeContext } from 'vs/platform/contextkey/common/contextkeys';\nimport { ILocalizedString } from 'vs/platform/action/common/action';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\n\nconst workspacesCategory: ILocalizedString = { value: localize('workspaces', \"Workspaces\"), original: 'Workspaces' };\n\nexport class OpenFileAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.files.openFile';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenFileAction.ID,\n\t\t\ttitle: { value: localize('openFile', \"Open File...\"), original: 'Open File...' },\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: IsMacNativeContext.toNegated(),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, data?: ITelemetryData): Promise<void> {\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\treturn fileDialogService.pickFileAndOpen({ forceNewWindow: false, telemetryExtraData: data });\n\t}\n}\n\nexport class OpenFolderAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.files.openFolder';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenFolderAction.ID,\n\t\t\ttitle: { value: localize('openFolder', \"Open Folder...\"), original: 'Open Folder...' },\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: OpenFolderWorkspaceSupportContext,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: undefined,\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyO)\n\t\t\t\t},\n\t\t\t\twin: {\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyO)\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, data?: ITelemetryData): Promise<void> {\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\treturn fileDialogService.pickFolderAndOpen({ forceNewWindow: false, telemetryExtraData: data });\n\t}\n}\n\nexport class OpenFolderViaWorkspaceAction extends Action2 {\n\n\t// This action swaps the folders of a workspace with\n\t// the selected folder and is a workaround for providing\n\t// \"Open Folder...\" in environments that do not support\n\t// this without having a workspace open (e.g. web serverless)\n\n\tstatic readonly ID = 'workbench.action.files.openFolderViaWorkspace';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenFolderViaWorkspaceAction.ID,\n\t\t\ttitle: { value: localize('openFolder', \"Open Folder...\"), original: 'Open Folder...' },\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(OpenFolderWorkspaceSupportContext.toNegated(), WorkbenchStateContext.isEqualTo('workspace')),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\treturn commandService.executeCommand(SET_ROOT_FOLDER_COMMAND_ID);\n\t}\n}\n\nexport class OpenFileFolderAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.files.openFileFolder';\n\tstatic readonly LABEL: ILocalizedString = { value: localize('openFileFolder', \"Open...\"), original: 'Open...' };\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenFileFolderAction.ID,\n\t\t\ttitle: OpenFileFolderAction.LABEL,\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(IsMacNativeContext, OpenFolderWorkspaceSupportContext),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, data?: ITelemetryData): Promise<void> {\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\treturn fileDialogService.pickFileFolderAndOpen({ forceNewWindow: false, telemetryExtraData: data });\n\t}\n}\n\nclass OpenWorkspaceAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.openWorkspace';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenWorkspaceAction.ID,\n\t\t\ttitle: { value: localize('openWorkspaceAction', \"Open Workspace from File...\"), original: 'Open Workspace from File...' },\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: EnterMultiRootWorkspaceSupportContext\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, data?: ITelemetryData): Promise<void> {\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\treturn fileDialogService.pickWorkspaceAndOpen({ telemetryExtraData: data });\n\t}\n}\n\nclass CloseWorkspaceAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.closeFolder';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CloseWorkspaceAction.ID,\n\t\t\ttitle: { value: localize('closeWorkspace', \"Close Workspace\"), original: 'Close Workspace' },\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(WorkbenchStateContext.notEqualsTo('empty'), EmptyWorkspaceSupportContext),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyF)\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst environmentService = accessor.get(IWorkbenchEnvironmentService);\n\n\t\treturn hostService.openWindow({ forceReuseWindow: true, remoteAuthority: environmentService.remoteAuthority });\n\t}\n}\n\nclass OpenWorkspaceConfigFileAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.openWorkspaceConfigFile';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenWorkspaceConfigFileAction.ID,\n\t\t\ttitle: { value: localize('openWorkspaceConfigFile', \"Open Workspace Configuration File\"), original: 'Open Workspace Configuration File' },\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: WorkbenchStateContext.isEqualTo('workspace')\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst configuration = contextService.getWorkspace().configuration;\n\t\tif (configuration) {\n\t\t\tawait editorService.openEditor({ resource: configuration, options: { pinned: true } });\n\t\t}\n\t}\n}\n\nexport class AddRootFolderAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.addRootFolder';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AddRootFolderAction.ID,\n\t\t\ttitle: ADD_ROOT_FOLDER_LABEL,\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.or(EnterMultiRootWorkspaceSupportContext, WorkbenchStateContext.isEqualTo('workspace'))\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\treturn commandService.executeCommand(ADD_ROOT_FOLDER_COMMAND_ID);\n\t}\n}\n\nexport class RemoveRootFolderAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.removeRootFolder';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: RemoveRootFolderAction.ID,\n\t\t\ttitle: { value: localize('globalRemoveFolderFromWorkspace', \"Remove Folder from Workspace...\"), original: 'Remove Folder from Workspace...' },\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(WorkspaceFolderCountContext.notEqualsTo('0'), ContextKeyExpr.or(EnterMultiRootWorkspaceSupportContext, WorkbenchStateContext.isEqualTo('workspace')))\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\n\t\tconst folder = await commandService.executeCommand<IWorkspaceFolder>(PICK_WORKSPACE_FOLDER_COMMAND_ID);\n\t\tif (folder) {\n\t\t\tawait workspaceEditingService.removeFolders([folder.uri]);\n\t\t}\n\t}\n}\n\nclass SaveWorkspaceAsAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.saveWorkspaceAs';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SaveWorkspaceAsAction.ID,\n\t\t\ttitle: { value: localize('saveWorkspaceAsAction', \"Save Workspace As...\"), original: 'Save Workspace As...' },\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: EnterMultiRootWorkspaceSupportContext\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\n\t\tconst configPathUri = await workspaceEditingService.pickNewWorkspacePath();\n\t\tif (configPathUri && hasWorkspaceFileExtension(configPathUri)) {\n\t\t\tswitch (contextService.getWorkbenchState()) {\n\t\t\t\tcase WorkbenchState.EMPTY:\n\t\t\t\tcase WorkbenchState.FOLDER: {\n\t\t\t\t\tconst folders = contextService.getWorkspace().folders.map(folder => ({ uri: folder.uri }));\n\t\t\t\t\treturn workspaceEditingService.createAndEnterWorkspace(folders, configPathUri);\n\t\t\t\t}\n\t\t\t\tcase WorkbenchState.WORKSPACE:\n\t\t\t\t\treturn workspaceEditingService.saveAndEnterWorkspace(configPathUri);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass DuplicateWorkspaceInNewWindowAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.duplicateWorkspaceInNewWindow';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: DuplicateWorkspaceInNewWindowAction.ID,\n\t\t\ttitle: { value: localize('duplicateWorkspaceInNewWindow', \"Duplicate As Workspace in New Window\"), original: 'Duplicate As Workspace in New Window' },\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: EnterMultiRootWorkspaceSupportContext\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst workspaceContextService = accessor.get(IWorkspaceContextService);\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst workspacesService = accessor.get(IWorkspacesService);\n\t\tconst environmentService = accessor.get(IWorkbenchEnvironmentService);\n\n\t\tconst folders = workspaceContextService.getWorkspace().folders;\n\t\tconst remoteAuthority = environmentService.remoteAuthority;\n\n\t\tconst newWorkspace = await workspacesService.createUntitledWorkspace(folders, remoteAuthority);\n\t\tawait workspaceEditingService.copyWorkspaceSettings(newWorkspace);\n\n\t\treturn hostService.openWindow([{ workspaceUri: newWorkspace.configPath }], { forceNewWindow: true, remoteAuthority });\n\t}\n}\n\n// --- Actions Registration\n\nregisterAction2(AddRootFolderAction);\nregisterAction2(RemoveRootFolderAction);\nregisterAction2(OpenFileAction);\nregisterAction2(OpenFolderAction);\nregisterAction2(OpenFolderViaWorkspaceAction);\nregisterAction2(OpenFileFolderAction);\nregisterAction2(OpenWorkspaceAction);\nregisterAction2(OpenWorkspaceConfigFileAction);\nregisterAction2(CloseWorkspaceAction);\nregisterAction2(SaveWorkspaceAsAction);\nregisterAction2(DuplicateWorkspaceInNewWindowAction);\n\n// --- Menu Registration\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '2_open',\n\tcommand: {\n\t\tid: OpenFileAction.ID,\n\t\ttitle: localize({ key: 'miOpenFile', comment: ['&& denotes a mnemonic'] }, \"&&Open File...\")\n\t},\n\torder: 1,\n\twhen: IsMacNativeContext.toNegated()\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '2_open',\n\tcommand: {\n\t\tid: OpenFolderAction.ID,\n\t\ttitle: localize({ key: 'miOpenFolder', comment: ['&& denotes a mnemonic'] }, \"Open &&Folder...\")\n\t},\n\torder: 2,\n\twhen: OpenFolderWorkspaceSupportContext\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '2_open',\n\tcommand: {\n\t\tid: OpenFolderViaWorkspaceAction.ID,\n\t\ttitle: localize({ key: 'miOpenFolder', comment: ['&& denotes a mnemonic'] }, \"Open &&Folder...\")\n\t},\n\torder: 2,\n\twhen: ContextKeyExpr.and(OpenFolderWorkspaceSupportContext.toNegated(), WorkbenchStateContext.isEqualTo('workspace'))\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '2_open',\n\tcommand: {\n\t\tid: OpenFileFolderAction.ID,\n\t\ttitle: localize({ key: 'miOpen', comment: ['&& denotes a mnemonic'] }, \"&&Open...\")\n\t},\n\torder: 1,\n\twhen: ContextKeyExpr.and(IsMacNativeContext, OpenFolderWorkspaceSupportContext)\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '2_open',\n\tcommand: {\n\t\tid: OpenWorkspaceAction.ID,\n\t\ttitle: localize({ key: 'miOpenWorkspace', comment: ['&& denotes a mnemonic'] }, \"Open Wor&&kspace from File...\")\n\t},\n\torder: 3,\n\twhen: EnterMultiRootWorkspaceSupportContext\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '3_workspace',\n\tcommand: {\n\t\tid: ADD_ROOT_FOLDER_COMMAND_ID,\n\t\ttitle: localize({ key: 'miAddFolderToWorkspace', comment: ['&& denotes a mnemonic'] }, \"A&&dd Folder to Workspace...\")\n\t},\n\twhen: ContextKeyExpr.or(EnterMultiRootWorkspaceSupportContext, WorkbenchStateContext.isEqualTo('workspace')),\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '3_workspace',\n\tcommand: {\n\t\tid: SaveWorkspaceAsAction.ID,\n\t\ttitle: localize('miSaveWorkspaceAs', \"Save Workspace As...\")\n\t},\n\torder: 2,\n\twhen: EnterMultiRootWorkspaceSupportContext\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '3_workspace',\n\tcommand: {\n\t\tid: DuplicateWorkspaceInNewWindowAction.ID,\n\t\ttitle: localize('duplicateWorkspace', \"Duplicate Workspace\")\n\t},\n\torder: 3,\n\twhen: EnterMultiRootWorkspaceSupportContext\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '6_close',\n\tcommand: {\n\t\tid: CloseWorkspaceAction.ID,\n\t\ttitle: localize({ key: 'miCloseFolder', comment: ['&& denotes a mnemonic'] }, \"Close &&Folder\")\n\t},\n\torder: 3,\n\twhen: ContextKeyExpr.and(WorkbenchStateContext.isEqualTo('folder'), EmptyWorkspaceSupportContext)\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '6_close',\n\tcommand: {\n\t\tid: CloseWorkspaceAction.ID,\n\t\ttitle: localize({ key: 'miCloseWorkspace', comment: ['&& denotes a mnemonic'] }, \"Close &&Workspace\")\n\t},\n\torder: 3,\n\twhen: ContextKeyExpr.and(WorkbenchStateContext.isEqualTo('workspace'), EmptyWorkspaceSupportContext)\n});\n"]}