{"version":3,"sources":["vs/workbench/browser/actions/windowActions.ts"],"names":[],"mappings":"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","file":"windowActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IWindowOpenable } from 'vs/platform/window/common/window';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { MenuRegistry, MenuId, Action2, registerAction2, IAction2Options } from 'vs/platform/actions/common/actions';\nimport { KeyChord, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { IsFullscreenContext } from 'vs/workbench/common/contextkeys';\nimport { IsMacNativeContext, IsDevelopmentContext, IsWebContext, IsIOSContext } from 'vs/platform/contextkey/common/contextkeys';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IQuickInputButton, IQuickInputService, IQuickPickSeparator, IKeyMods, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { IWorkspaceContextService, IWorkspaceIdentifier } from 'vs/platform/workspace/common/workspace';\nimport { ILabelService, Verbosity } from 'vs/platform/label/common/label';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { IRecent, isRecentFolder, isRecentWorkspace, IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { URI } from 'vs/base/common/uri';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { FileKind } from 'vs/platform/files/common/files';\nimport { splitRecentLabel } from 'vs/base/common/labels';\nimport { isMacintosh, isWeb, isWindows } from 'vs/base/common/platform';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { inQuickPickContext, getQuickNavigateHandler } from 'vs/workbench/browser/quickaccess';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { isHTMLElement } from 'vs/base/browser/dom';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { isFolderBackupInfo, isWorkspaceBackupInfo } from 'vs/platform/backup/common/backup';\n\nexport const inRecentFilesPickerContextKey = 'inRecentFilesPicker';\n\ninterface IRecentlyOpenedPick extends IQuickPickItem {\n\tresource: URI;\n\topenable: IWindowOpenable;\n\tremoteAuthority: string | undefined;\n}\n\nabstract class BaseOpenRecentAction extends Action2 {\n\n\tprivate readonly removeFromRecentlyOpened: IQuickInputButton = {\n\t\ticonClass: ThemeIcon.asClassName(Codicon.removeClose),\n\t\ttooltip: localize('remove', \"Remove from Recently Opened\")\n\t};\n\n\tprivate readonly dirtyRecentlyOpenedFolder: IQuickInputButton = {\n\t\ticonClass: 'dirty-workspace ' + ThemeIcon.asClassName(Codicon.closeDirty),\n\t\ttooltip: localize('dirtyRecentlyOpenedFolder', \"Folder With Unsaved Files\"),\n\t\talwaysVisible: true\n\t};\n\n\tprivate readonly dirtyRecentlyOpenedWorkspace: IQuickInputButton = {\n\t\t...this.dirtyRecentlyOpenedFolder,\n\t\ttooltip: localize('dirtyRecentlyOpenedWorkspace', \"Workspace With Unsaved Files\"),\n\t};\n\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\tprotected abstract isQuickNavigate(): boolean;\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst workspacesService = accessor.get(IWorkspacesService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst labelService = accessor.get(ILabelService);\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst modelService = accessor.get(IModelService);\n\t\tconst languageService = accessor.get(ILanguageService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\n\t\tconst recentlyOpened = await workspacesService.getRecentlyOpened();\n\t\tconst dirtyWorkspacesAndFolders = await workspacesService.getDirtyWorkspaces();\n\n\t\tlet hasWorkspaces = false;\n\n\t\t// Identify all folders and workspaces with unsaved files\n\t\tconst dirtyFolders = new ResourceMap<boolean>();\n\t\tconst dirtyWorkspaces = new ResourceMap<IWorkspaceIdentifier>();\n\t\tfor (const dirtyWorkspace of dirtyWorkspacesAndFolders) {\n\t\t\tif (isFolderBackupInfo(dirtyWorkspace)) {\n\t\t\t\tdirtyFolders.set(dirtyWorkspace.folderUri, true);\n\t\t\t} else {\n\t\t\t\tdirtyWorkspaces.set(dirtyWorkspace.workspace.configPath, dirtyWorkspace.workspace);\n\t\t\t\thasWorkspaces = true;\n\t\t\t}\n\t\t}\n\n\t\t// Identify all recently opened folders and workspaces\n\t\tconst recentFolders = new ResourceMap<boolean>();\n\t\tconst recentWorkspaces = new ResourceMap<IWorkspaceIdentifier>();\n\t\tfor (const recent of recentlyOpened.workspaces) {\n\t\t\tif (isRecentFolder(recent)) {\n\t\t\t\trecentFolders.set(recent.folderUri, true);\n\t\t\t} else {\n\t\t\t\trecentWorkspaces.set(recent.workspace.configPath, recent.workspace);\n\t\t\t\thasWorkspaces = true;\n\t\t\t}\n\t\t}\n\n\t\t// Fill in all known recently opened workspaces\n\t\tconst workspacePicks: IRecentlyOpenedPick[] = [];\n\t\tfor (const recent of recentlyOpened.workspaces) {\n\t\t\tconst isDirty = isRecentFolder(recent) ? dirtyFolders.has(recent.folderUri) : dirtyWorkspaces.has(recent.workspace.configPath);\n\n\t\t\tworkspacePicks.push(this.toQuickPick(modelService, languageService, labelService, recent, isDirty));\n\t\t}\n\n\t\t// Fill any backup workspace that is not yet shown at the end\n\t\tfor (const dirtyWorkspaceOrFolder of dirtyWorkspacesAndFolders) {\n\t\t\tif (isFolderBackupInfo(dirtyWorkspaceOrFolder) && !recentFolders.has(dirtyWorkspaceOrFolder.folderUri)) {\n\t\t\t\tworkspacePicks.push(this.toQuickPick(modelService, languageService, labelService, dirtyWorkspaceOrFolder, true));\n\t\t\t} else if (isWorkspaceBackupInfo(dirtyWorkspaceOrFolder) && !recentWorkspaces.has(dirtyWorkspaceOrFolder.workspace.configPath)) {\n\t\t\t\tworkspacePicks.push(this.toQuickPick(modelService, languageService, labelService, dirtyWorkspaceOrFolder, true));\n\t\t\t}\n\t\t}\n\n\t\tconst filePicks = recentlyOpened.files.map(p => this.toQuickPick(modelService, languageService, labelService, p, false));\n\n\t\t// focus second entry if the first recent workspace is the current workspace\n\t\tconst firstEntry = recentlyOpened.workspaces[0];\n\t\tconst autoFocusSecondEntry: boolean = firstEntry && contextService.isCurrentWorkspace(isRecentWorkspace(firstEntry) ? firstEntry.workspace : firstEntry.folderUri);\n\n\t\tlet keyMods: IKeyMods | undefined;\n\n\t\tconst workspaceSeparator: IQuickPickSeparator = { type: 'separator', label: hasWorkspaces ? localize('workspacesAndFolders', \"folders & workspaces\") : localize('folders', \"folders\") };\n\t\tconst fileSeparator: IQuickPickSeparator = { type: 'separator', label: localize('files', \"files\") };\n\t\tconst picks = [workspaceSeparator, ...workspacePicks, fileSeparator, ...filePicks];\n\n\t\tconst pick = await quickInputService.pick(picks, {\n\t\t\tcontextKey: inRecentFilesPickerContextKey,\n\t\t\tactiveItem: [...workspacePicks, ...filePicks][autoFocusSecondEntry ? 1 : 0],\n\t\t\tplaceHolder: isMacintosh ? localize('openRecentPlaceholderMac', \"Select to open (hold Cmd-key to force new window or Option-key for same window)\") : localize('openRecentPlaceholder', \"Select to open (hold Ctrl-key to force new window or Alt-key for same window)\"),\n\t\t\tmatchOnDescription: true,\n\t\t\tonKeyMods: mods => keyMods = mods,\n\t\t\tquickNavigate: this.isQuickNavigate() ? { keybindings: keybindingService.lookupKeybindings(this.desc.id) } : undefined,\n\t\t\thideInput: this.isQuickNavigate(),\n\t\t\tonDidTriggerItemButton: async context => {\n\n\t\t\t\t// Remove\n\t\t\t\tif (context.button === this.removeFromRecentlyOpened) {\n\t\t\t\t\tawait workspacesService.removeRecentlyOpened([context.item.resource]);\n\t\t\t\t\tcontext.removeItem();\n\t\t\t\t}\n\n\t\t\t\t// Dirty Folder/Workspace\n\t\t\t\telse if (context.button === this.dirtyRecentlyOpenedFolder || context.button === this.dirtyRecentlyOpenedWorkspace) {\n\t\t\t\t\tconst isDirtyWorkspace = context.button === this.dirtyRecentlyOpenedWorkspace;\n\t\t\t\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\t\t\t\ttitle: isDirtyWorkspace ? localize('dirtyWorkspace', \"Workspace with Unsaved Files\") : localize('dirtyFolder', \"Folder with Unsaved Files\"),\n\t\t\t\t\t\tmessage: isDirtyWorkspace ? localize('dirtyWorkspaceConfirm', \"Do you want to open the workspace to review the unsaved files?\") : localize('dirtyFolderConfirm', \"Do you want to open the folder to review the unsaved files?\"),\n\t\t\t\t\t\tdetail: isDirtyWorkspace ? localize('dirtyWorkspaceConfirmDetail', \"Workspaces with unsaved files cannot be removed until all unsaved files have been saved or reverted.\") : localize('dirtyFolderConfirmDetail', \"Folders with unsaved files cannot be removed until all unsaved files have been saved or reverted.\")\n\t\t\t\t\t});\n\n\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\thostService.openWindow(\n\t\t\t\t\t\t\t[context.item.openable], {\n\t\t\t\t\t\t\tremoteAuthority: context.item.remoteAuthority || null // local window if remoteAuthority is not set or can not be deducted from the openable\n\t\t\t\t\t\t});\n\t\t\t\t\t\tquickInputService.cancel();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (pick) {\n\t\t\treturn hostService.openWindow([pick.openable], {\n\t\t\t\tforceNewWindow: keyMods?.ctrlCmd,\n\t\t\t\tforceReuseWindow: keyMods?.alt,\n\t\t\t\tremoteAuthority: pick.remoteAuthority || null // local window if remoteAuthority is not set or can not be deducted from the openable\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate toQuickPick(modelService: IModelService, languageService: ILanguageService, labelService: ILabelService, recent: IRecent, isDirty: boolean): IRecentlyOpenedPick {\n\t\tlet openable: IWindowOpenable | undefined;\n\t\tlet iconClasses: string[];\n\t\tlet fullLabel: string | undefined;\n\t\tlet resource: URI | undefined;\n\t\tlet isWorkspace = false;\n\n\t\t// Folder\n\t\tif (isRecentFolder(recent)) {\n\t\t\tresource = recent.folderUri;\n\t\t\ticonClasses = getIconClasses(modelService, languageService, resource, FileKind.FOLDER);\n\t\t\topenable = { folderUri: resource };\n\t\t\tfullLabel = recent.label || labelService.getWorkspaceLabel(resource, { verbose: Verbosity.LONG });\n\t\t}\n\n\t\t// Workspace\n\t\telse if (isRecentWorkspace(recent)) {\n\t\t\tresource = recent.workspace.configPath;\n\t\t\ticonClasses = getIconClasses(modelService, languageService, resource, FileKind.ROOT_FOLDER);\n\t\t\topenable = { workspaceUri: resource };\n\t\t\tfullLabel = recent.label || labelService.getWorkspaceLabel(recent.workspace, { verbose: Verbosity.LONG });\n\t\t\tisWorkspace = true;\n\t\t}\n\n\t\t// File\n\t\telse {\n\t\t\tresource = recent.fileUri;\n\t\t\ticonClasses = getIconClasses(modelService, languageService, resource, FileKind.FILE);\n\t\t\topenable = { fileUri: resource };\n\t\t\tfullLabel = recent.label || labelService.getUriLabel(resource);\n\t\t}\n\n\t\tconst { name, parentPath } = splitRecentLabel(fullLabel);\n\n\t\treturn {\n\t\t\ticonClasses,\n\t\t\tlabel: name,\n\t\t\tariaLabel: isDirty ? isWorkspace ? localize('recentDirtyWorkspaceAriaLabel', \"{0}, workspace with unsaved changes\", name) : localize('recentDirtyFolderAriaLabel', \"{0}, folder with unsaved changes\", name) : name,\n\t\t\tdescription: parentPath,\n\t\t\tbuttons: isDirty ? [isWorkspace ? this.dirtyRecentlyOpenedWorkspace : this.dirtyRecentlyOpenedFolder] : [this.removeFromRecentlyOpened],\n\t\t\topenable,\n\t\t\tresource,\n\t\t\tremoteAuthority: recent.remoteAuthority\n\t\t};\n\t}\n}\n\nexport class OpenRecentAction extends BaseOpenRecentAction {\n\n\tstatic ID = 'workbench.action.openRecent';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenRecentAction.ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('openRecent', \"Open Recent...\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miMore', comment: ['&& denotes a mnemonic'] }, \"&&More...\"),\n\t\t\t\toriginal: 'Open Recent...'\n\t\t\t},\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyR,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyR }\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarRecentMenu,\n\t\t\t\tgroup: 'y_more',\n\t\t\t\torder: 1\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn false;\n\t}\n}\n\nclass QuickPickRecentAction extends BaseOpenRecentAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.quickOpenRecent',\n\t\t\ttitle: { value: localize('quickOpenRecent', \"Quick Open Recent...\"), original: 'Quick Open Recent...' },\n\t\t\tcategory: Categories.File,\n\t\t\tf1: false // hide quick pickers from command palette to not confuse with the other entry that shows a input field\n\t\t});\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn true;\n\t}\n}\n\nclass ToggleFullScreenAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.toggleFullScreen',\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('toggleFullScreen', \"Toggle Full Screen\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miToggleFullScreen', comment: ['&& denotes a mnemonic'] }, \"&&Full Screen\"),\n\t\t\t\toriginal: 'Toggle Full Screen'\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyCode.F11,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.KeyF\n\t\t\t\t}\n\t\t\t},\n\t\t\tprecondition: IsIOSContext.toNegated(),\n\t\t\ttoggled: IsFullscreenContext,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '1_toggle_view',\n\t\t\t\torder: 1\n\t\t\t}]\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst hostService = accessor.get(IHostService);\n\n\t\treturn hostService.toggleFullScreen();\n\t}\n}\n\nexport class ReloadWindowAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.reloadWindow';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ReloadWindowAction.ID,\n\t\t\ttitle: { value: localize('reloadWindow', \"Reload Window\"), original: 'Reload Window' },\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\t\twhen: IsDevelopmentContext,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyR\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst hostService = accessor.get(IHostService);\n\n\t\treturn hostService.reload();\n\t}\n}\n\nclass ShowAboutDialogAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.showAboutDialog',\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('about', \"About\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miAbout', comment: ['&& denotes a mnemonic'] }, \"&&About\"),\n\t\t\t\toriginal: 'About'\n\t\t\t},\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarHelpMenu,\n\t\t\t\tgroup: 'z_about',\n\t\t\t\torder: 1,\n\t\t\t\twhen: IsMacNativeContext.toNegated()\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\n\t\treturn dialogService.about();\n\t}\n}\n\nclass NewWindowAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.newWindow',\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('newWindow', \"New Window\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miNewWindow', comment: ['&& denotes a mnemonic'] }, \"New &&Window\"),\n\t\t\t\toriginal: 'New Window'\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: isWeb ? (isWindows ? KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.Shift | KeyCode.KeyN) : KeyMod.CtrlCmd | KeyMod.Alt | KeyMod.Shift | KeyCode.KeyN) : KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyN,\n\t\t\t\tsecondary: isWeb ? [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyN] : undefined\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarFileMenu,\n\t\t\t\tgroup: '1_new',\n\t\t\t\torder: 3\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst hostService = accessor.get(IHostService);\n\n\t\treturn hostService.openWindow({ remoteAuthority: null });\n\t}\n}\n\nclass BlurAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.blur',\n\t\t\ttitle: { value: localize('blur', \"Remove keyboard focus from focused element\"), original: 'Remove keyboard focus from focused element' }\n\t\t});\n\t}\n\n\trun(): void {\n\t\tconst el = document.activeElement;\n\n\t\tif (isHTMLElement(el)) {\n\t\t\tel.blur();\n\t\t}\n\t}\n}\n\n// --- Actions Registration\n\nregisterAction2(NewWindowAction);\nregisterAction2(ToggleFullScreenAction);\nregisterAction2(QuickPickRecentAction);\nregisterAction2(OpenRecentAction);\nregisterAction2(ReloadWindowAction);\nregisterAction2(ShowAboutDialogAction);\nregisterAction2(BlurAction);\n\n// --- Commands/Keybindings Registration\n\nconst recentFilesPickerContext = ContextKeyExpr.and(inQuickPickContext, ContextKeyExpr.has(inRecentFilesPickerContextKey));\n\nconst quickPickNavigateNextInRecentFilesPickerId = 'workbench.action.quickOpenNavigateNextInRecentFilesPicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickPickNavigateNextInRecentFilesPickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickPickNavigateNextInRecentFilesPickerId, true),\n\twhen: recentFilesPickerContext,\n\tprimary: KeyMod.CtrlCmd | KeyCode.KeyR,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyR }\n});\n\nconst quickPickNavigatePreviousInRecentFilesPicker = 'workbench.action.quickOpenNavigatePreviousInRecentFilesPicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickPickNavigatePreviousInRecentFilesPicker,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickPickNavigatePreviousInRecentFilesPicker, false),\n\twhen: recentFilesPickerContext,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyR,\n\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KeyR }\n});\n\nCommandsRegistry.registerCommand('workbench.action.toggleConfirmBeforeClose', accessor => {\n\tconst configurationService = accessor.get(IConfigurationService);\n\tconst setting = configurationService.inspect<'always' | 'keyboardOnly' | 'never'>('window.confirmBeforeClose').userValue;\n\n\treturn configurationService.updateValue('window.confirmBeforeClose', setting === 'never' ? 'keyboardOnly' : 'never');\n});\n\n// --- Menu Registration\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: 'z_ConfirmClose',\n\tcommand: {\n\t\tid: 'workbench.action.toggleConfirmBeforeClose',\n\t\ttitle: localize('miConfirmClose', \"Confirm Before Close\"),\n\t\ttoggled: ContextKeyExpr.notEquals('config.window.confirmBeforeClose', 'never')\n\t},\n\torder: 1,\n\twhen: IsWebContext\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\ttitle: localize({ key: 'miOpenRecent', comment: ['&& denotes a mnemonic'] }, \"Open &&Recent\"),\n\tsubmenu: MenuId.MenubarRecentMenu,\n\tgroup: '2_open',\n\torder: 4\n});\n"]}