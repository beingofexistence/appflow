{"version":3,"sources":["vs/workbench/browser/actions/quickAccessActions.ts"],"names":[],"mappings":"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","file":"quickAccessActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { MenuId, Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { KeybindingsRegistry, KeybindingWeight, IKeybindingRule } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IQuickInputService, ItemActivation } from 'vs/platform/quickinput/common/quickInput';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { inQuickPickContext, defaultQuickAccessContext, getQuickNavigateHandler } from 'vs/workbench/browser/quickaccess';\nimport { ILocalizedString } from 'vs/platform/action/common/action';\nimport { AnythingQuickAccessProviderRunOptions } from 'vs/platform/quickinput/common/quickAccess';\nimport { Codicon } from 'vs/base/common/codicons';\n\n//#region Quick access management commands and keys\n\nconst globalQuickAccessKeybinding = {\n\tprimary: KeyMod.CtrlCmd | KeyCode.KeyP,\n\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyE],\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.KeyP, secondary: undefined }\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.closeQuickOpen',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: KeyCode.Escape, secondary: [KeyMod.Shift | KeyCode.Escape],\n\thandler: accessor => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\treturn quickInputService.cancel();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.acceptSelectedQuickOpenItem',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\thandler: accessor => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\treturn quickInputService.accept();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.alternativeAcceptSelectedQuickOpenItem',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\thandler: accessor => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\treturn quickInputService.accept({ ctrlCmd: true, alt: false });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.focusQuickOpen',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\thandler: accessor => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.focus();\n\t}\n});\n\nconst quickAccessNavigateNextInFilePickerId = 'workbench.action.quickOpenNavigateNextInFilePicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickAccessNavigateNextInFilePickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickAccessNavigateNextInFilePickerId, true),\n\twhen: defaultQuickAccessContext,\n\tprimary: globalQuickAccessKeybinding.primary,\n\tsecondary: globalQuickAccessKeybinding.secondary,\n\tmac: globalQuickAccessKeybinding.mac\n});\n\nconst quickAccessNavigatePreviousInFilePickerId = 'workbench.action.quickOpenNavigatePreviousInFilePicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickAccessNavigatePreviousInFilePickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickAccessNavigatePreviousInFilePickerId, false),\n\twhen: defaultQuickAccessContext,\n\tprimary: globalQuickAccessKeybinding.primary | KeyMod.Shift,\n\tsecondary: [globalQuickAccessKeybinding.secondary[0] | KeyMod.Shift],\n\tmac: {\n\t\tprimary: globalQuickAccessKeybinding.mac.primary | KeyMod.Shift,\n\t\tsecondary: undefined\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.quickPickManyToggle',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\thandler: accessor => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.toggle();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.quickInputBack',\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\twin: { primary: KeyMod.Alt | KeyCode.LeftArrow },\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.Minus },\n\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Minus },\n\thandler: accessor => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.back();\n\t}\n});\n\nregisterAction2(class QuickAccessAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.quickOpen',\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('quickOpen', \"Go to File...\"),\n\t\t\t\toriginal: 'Go to File...'\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\tdescription: `Quick access`,\n\t\t\t\targs: [{\n\t\t\t\t\tname: 'prefix',\n\t\t\t\t\tschema: {\n\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: globalQuickAccessKeybinding.primary,\n\t\t\t\tsecondary: globalQuickAccessKeybinding.secondary,\n\t\t\t\tmac: globalQuickAccessKeybinding.mac\n\t\t\t},\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, prefix: undefined): void {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.quickAccess.show(typeof prefix === 'string' ? prefix : undefined, { preserveValue: typeof prefix === 'string' /* preserve as is if provided */ });\n\t}\n});\n\nregisterAction2(class QuickAccessAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.quickOpenWithModes',\n\t\t\ttitle: localize('quickOpenWithModes', \"Quick Open\"),\n\t\t\ticon: Codicon.search,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandCenterCenter,\n\t\t\t\torder: 100\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.quickAccess.show(undefined, {\n\t\t\tpreserveValue: true,\n\t\t\tproviderOptions: {\n\t\t\t\tincludeHelp: true,\n\t\t\t\tfrom: 'commandCenter',\n\t\t\t} as AnythingQuickAccessProviderRunOptions\n\t\t});\n\t}\n});\n\nCommandsRegistry.registerCommand('workbench.action.quickOpenPreviousEditor', async accessor => {\n\tconst quickInputService = accessor.get(IQuickInputService);\n\n\tquickInputService.quickAccess.show('', { itemActivation: ItemActivation.SECOND });\n});\n\n//#endregion\n\n//#region Workbench actions\n\nclass BaseQuickAccessNavigateAction extends Action2 {\n\n\tconstructor(\n\t\tprivate id: string,\n\t\ttitle: ILocalizedString,\n\t\tprivate next: boolean,\n\t\tprivate quickNavigate: boolean,\n\t\tkeybinding?: Omit<IKeybindingRule, 'id'>\n\t) {\n\t\tsuper({ id, title, f1: true, keybinding });\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tconst keys = keybindingService.lookupKeybindings(this.id);\n\t\tconst quickNavigate = this.quickNavigate ? { keybindings: keys } : undefined;\n\n\t\tquickInputService.navigate(this.next, quickNavigate);\n\t}\n}\n\nclass QuickAccessNavigateNextAction extends BaseQuickAccessNavigateAction {\n\n\tconstructor() {\n\t\tsuper('workbench.action.quickOpenNavigateNext', { value: localize('quickNavigateNext', \"Navigate Next in Quick Open\"), original: 'Navigate Next in Quick Open' }, true, true);\n\t}\n}\n\nclass QuickAccessNavigatePreviousAction extends BaseQuickAccessNavigateAction {\n\n\tconstructor() {\n\t\tsuper('workbench.action.quickOpenNavigatePrevious', { value: localize('quickNavigatePrevious', \"Navigate Previous in Quick Open\"), original: 'Navigate Previous in Quick Open' }, false, true);\n\t}\n}\n\nclass QuickAccessSelectNextAction extends BaseQuickAccessNavigateAction {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t'workbench.action.quickOpenSelectNext',\n\t\t\t{ value: localize('quickSelectNext', \"Select Next in Quick Open\"), original: 'Select Next in Quick Open' },\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\t\twhen: inQuickPickContext,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyN }\n\t\t\t}\n\t\t);\n\t}\n}\n\nclass QuickAccessSelectPreviousAction extends BaseQuickAccessNavigateAction {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t'workbench.action.quickOpenSelectPrevious',\n\t\t\t{ value: localize('quickSelectPrevious', \"Select Previous in Quick Open\"), original: 'Select Previous in Quick Open' },\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\t\twhen: inQuickPickContext,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyP }\n\t\t\t}\n\t\t);\n\t}\n}\n\nregisterAction2(QuickAccessSelectNextAction);\nregisterAction2(QuickAccessSelectPreviousAction);\nregisterAction2(QuickAccessNavigateNextAction);\nregisterAction2(QuickAccessNavigatePreviousAction);\n\n//#endregion\n"]}