{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/browser/web.factory.ts"],"names":[],"mappings":"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","file":"web.factory.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITunnel, ITunnelOptions, IWorkbench, IWorkbenchConstructionOptions, Menu } from 'vs/workbench/browser/web.api';\nimport { BrowserMain } from 'vs/workbench/browser/web.main';\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { mark, PerformanceMark } from 'vs/base/common/performance';\nimport { MenuId, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { DeferredPromise } from 'vs/base/common/async';\nimport { asArray } from 'vs/base/common/arrays';\nimport { IProgress, IProgressCompositeOptions, IProgressDialogOptions, IProgressNotificationOptions, IProgressOptions, IProgressStep, IProgressWindowOptions } from 'vs/platform/progress/common/progress';\nimport { LogLevel } from 'vs/platform/log/common/log';\nimport { IEmbedderTerminalOptions } from 'vs/workbench/services/terminal/common/embedderTerminalService';\n\nlet created = false;\nconst workbenchPromise = new DeferredPromise<IWorkbench>();\n\n/**\n * Creates the workbench with the provided options in the provided container.\n *\n * @param domElement the container to create the workbench in\n * @param options for setting up the workbench\n */\nexport function create(domElement: HTMLElement, options: IWorkbenchConstructionOptions): IDisposable {\n\n\t// Mark start of workbench\n\tmark('code/didLoadWorkbenchMain');\n\n\t// Assert that the workbench is not created more than once. We currently\n\t// do not support this and require a full context switch to clean-up.\n\tif (created) {\n\t\tthrow new Error('Unable to create the VSCode workbench more than once.');\n\t} else {\n\t\tcreated = true;\n\t}\n\n\t// Register commands if any\n\tif (Array.isArray(options.commands)) {\n\t\tfor (const command of options.commands) {\n\n\t\t\tCommandsRegistry.registerCommand(command.id, (accessor, ...args) => {\n\t\t\t\t// we currently only pass on the arguments but not the accessor\n\t\t\t\t// to the command to reduce our exposure of internal API.\n\t\t\t\treturn command.handler(...args);\n\t\t\t});\n\n\t\t\t// Commands with labels appear in the command palette\n\t\t\tif (command.label) {\n\t\t\t\tfor (const menu of asArray(command.menu ?? Menu.CommandPalette)) {\n\t\t\t\t\tMenuRegistry.appendMenuItem(asMenuId(menu), { command: { id: command.id, title: command.label } });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Startup workbench and resolve waiters\n\tlet instantiatedWorkbench: IWorkbench | undefined = undefined;\n\tnew BrowserMain(domElement, options).open().then(workbench => {\n\t\tinstantiatedWorkbench = workbench;\n\t\tworkbenchPromise.complete(workbench);\n\t});\n\n\treturn toDisposable(() => {\n\t\tif (instantiatedWorkbench) {\n\t\t\tinstantiatedWorkbench.shutdown();\n\t\t} else {\n\t\t\tworkbenchPromise.p.then(instantiatedWorkbench => instantiatedWorkbench.shutdown());\n\t\t}\n\t});\n}\n\nfunction asMenuId(menu: Menu): MenuId {\n\tswitch (menu) {\n\t\tcase Menu.CommandPalette: return MenuId.CommandPalette;\n\t\tcase Menu.StatusBarWindowIndicatorMenu: return MenuId.StatusBarWindowIndicatorMenu;\n\t}\n}\n\nexport namespace commands {\n\n\t/**\n\t * {@linkcode IWorkbench.commands IWorkbench.commands.executeCommand}\n\t */\n\texport async function executeCommand(command: string, ...args: any[]): Promise<unknown> {\n\t\tconst workbench = await workbenchPromise.p;\n\n\t\treturn workbench.commands.executeCommand(command, ...args);\n\t}\n}\n\nexport namespace logger {\n\n\t/**\n\t * {@linkcode IWorkbench.logger IWorkbench.logger.log}\n\t */\n\texport function log(level: LogLevel, message: string) {\n\t\tworkbenchPromise.p.then(workbench => workbench.logger.log(level, message));\n\t}\n}\n\nexport namespace env {\n\n\t/**\n\t * {@linkcode IWorkbench.env IWorkbench.env.retrievePerformanceMarks}\n\t */\n\texport async function retrievePerformanceMarks(): Promise<[string, readonly PerformanceMark[]][]> {\n\t\tconst workbench = await workbenchPromise.p;\n\n\t\treturn workbench.env.retrievePerformanceMarks();\n\t}\n\n\t/**\n\t * {@linkcode IWorkbench.env IWorkbench.env.getUriScheme}\n\t */\n\texport async function getUriScheme(): Promise<string> {\n\t\tconst workbench = await workbenchPromise.p;\n\n\t\treturn workbench.env.getUriScheme();\n\t}\n\n\t/**\n\t * {@linkcode IWorkbench.env IWorkbench.env.openUri}\n\t */\n\texport async function openUri(target: URI): Promise<boolean> {\n\t\tconst workbench = await workbenchPromise.p;\n\n\t\treturn workbench.env.openUri(target);\n\t}\n}\n\nexport namespace window {\n\n\t/**\n\t * {@linkcode IWorkbench.window IWorkbench.window.withProgress}\n\t */\n\texport async function withProgress<R>(\n\t\toptions: IProgressOptions | IProgressDialogOptions | IProgressNotificationOptions | IProgressWindowOptions | IProgressCompositeOptions,\n\t\ttask: (progress: IProgress<IProgressStep>) => Promise<R>\n\t): Promise<R> {\n\t\tconst workbench = await workbenchPromise.p;\n\n\t\treturn workbench.window.withProgress(options, task);\n\t}\n\n\texport async function createTerminal(options: IEmbedderTerminalOptions): Promise<void> {\n\t\tconst workbench = await workbenchPromise.p;\n\t\tworkbench.window.createTerminal(options);\n\t}\n}\n\nexport namespace workspace {\n\n\t/**\n\t * {@linkcode IWorkbench.workspace IWorkbench.workspace.openTunnel}\n\t */\n\texport async function openTunnel(tunnelOptions: ITunnelOptions): Promise<ITunnel> {\n\t\tconst workbench = await workbenchPromise.p;\n\n\t\treturn workbench.workspace.openTunnel(tunnelOptions);\n\t}\n}\n"]}