{"version":3,"sources":["vs/workbench/browser/parts/panel/panelPart.ts"],"names":[],"mappings":"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","file":"panelPart.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/basepanelpart';\nimport 'vs/css!./media/panelpart';\nimport { localize } from 'vs/nls';\nimport { IAction, Separator, SubmenuAction, toAction } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ActionsOrientation, prepareActions } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { ActivePanelContext, PanelFocusContext, getEnabledViewContainerContextKey } from 'vs/workbench/common/contextkeys';\nimport { CompositePart, ICompositeTitleLabel } from 'vs/workbench/browser/parts/compositePart';\nimport { IWorkbenchLayoutService, Parts, Position } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { PanelActivityAction, TogglePanelAction, PlaceHolderPanelActivityAction, PlaceHolderToggleCompositePinnedAction } from 'vs/workbench/browser/parts/panel/panelActions';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { PANEL_BACKGROUND, PANEL_BORDER, PANEL_ACTIVE_TITLE_FOREGROUND, PANEL_INACTIVE_TITLE_FOREGROUND, PANEL_ACTIVE_TITLE_BORDER, EDITOR_DRAG_AND_DROP_BACKGROUND, PANEL_DRAG_AND_DROP_BORDER } from 'vs/workbench/common/theme';\nimport { contrastBorder, badgeBackground, badgeForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { CompositeBar, ICompositeBarItem, CompositeDragAndDrop } from 'vs/workbench/browser/parts/compositeBar';\nimport { IActivityHoverOptions, ToggleCompositeBadgeAction, ToggleCompositePinnedAction } from 'vs/workbench/browser/parts/compositeBarActions';\nimport { IBadge } from 'vs/workbench/services/activity/common/activity';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { Dimension, trackFocus, EventHelper, $, asCSSUrl, createCSSRule } from 'vs/base/browser/dom';\nimport { IDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IContextKey, IContextKeyService, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { isUndefinedOrNull, assertIsDefined } from 'vs/base/common/types';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { ViewContainer, IViewDescriptorService, IViewContainerModel, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { IPaneComposite } from 'vs/workbench/common/panecomposite';\nimport { Before2D, CompositeDragAndDropObserver, ICompositeDragAndDrop, toggleDropEffect } from 'vs/workbench/browser/dnd';\nimport { IActivity } from 'vs/workbench/common/activity';\nimport { HoverPosition } from 'vs/base/browser/ui/hover/hoverWidget';\nimport { Extensions as PaneCompositeExtensions, PaneComposite, PaneCompositeDescriptor, PaneCompositeRegistry } from 'vs/workbench/browser/panecomposite';\nimport { CompositeMenuActions } from 'vs/workbench/browser/actions';\nimport { IMenuService, MenuId } from 'vs/platform/actions/common/actions';\nimport { IComposite } from 'vs/workbench/common/composite';\nimport { IPaneCompositePart, IPaneCompositeSelectorPart } from 'vs/workbench/browser/parts/paneCompositePart';\nimport { IPartOptions } from 'vs/workbench/browser/part';\nimport { StringSHA1 } from 'vs/base/common/hash';\nimport { URI } from 'vs/base/common/uri';\nimport { ToolBar } from 'vs/base/browser/ui/toolbar/toolbar';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { PlaceHolderToggleCompositeBadgeAction } from 'vs/workbench/browser/parts/activitybar/activitybarActions';\nimport { createAndFillInContextMenuActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\n\ninterface ICachedPanel {\n\tid: string;\n\tname?: string;\n\tpinned: boolean;\n\torder?: number;\n\tvisible: boolean;\n\tviews?: { when?: string }[];\n}\n\ninterface IPlaceholderViewContainer {\n\tid: string;\n\tname?: string;\n}\n\ninterface IPanelPartOptions extends IPartOptions {\n\thasTitle: true;\n\tborderWidth?: (() => number);\n\tuseIcons?: boolean;\n}\n\nexport abstract class BasePanelPart extends CompositePart<PaneComposite> implements IPaneCompositePart, IPaneCompositeSelectorPart {\n\tprivate static readonly MIN_COMPOSITE_BAR_WIDTH = 50;\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t//#region IView\n\n\treadonly minimumWidth: number = 300;\n\treadonly maximumWidth: number = Number.POSITIVE_INFINITY;\n\treadonly minimumHeight: number = 77;\n\treadonly maximumHeight: number = Number.POSITIVE_INFINITY;\n\n\tget snap(): boolean {\n\t\t// Always allow snapping closed\n\t\t// Only allow dragging open if the panel contains view containers\n\t\treturn this.layoutService.isVisible(this.partId) || this.compositeBar.getVisibleComposites().length > 0;\n\t}\n\n\tget preferredHeight(): number | undefined {\n\t\t// Don't worry about titlebar or statusbar visibility\n\t\t// The difference is minimal and keeps this function clean\n\t\treturn this.layoutService.dimension.height * 0.4;\n\t}\n\n\tget preferredWidth(): number | undefined {\n\t\tconst activeComposite = this.getActivePaneComposite();\n\n\t\tif (!activeComposite) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = activeComposite.getOptimalWidth();\n\t\tif (typeof width !== 'number') {\n\t\t\treturn;\n\t\t}\n\n\t\treturn Math.max(width, 300);\n\t}\n\n\t//#endregion\n\n\tget onDidPaneCompositeOpen(): Event<IPaneComposite> { return Event.map(this.onDidCompositeOpen.event, compositeEvent => <IPaneComposite>compositeEvent.composite); }\n\treadonly onDidPaneCompositeClose = this.onDidCompositeClose.event as Event<IPaneComposite>;\n\n\tprivate compositeBar: CompositeBar;\n\tprivate readonly compositeActions = new Map<string, { activityAction: PanelActivityAction; pinnedAction: ToggleCompositePinnedAction; badgeAction: ToggleCompositeBadgeAction }>();\n\n\tprivate globalToolBar: ToolBar | undefined;\n\tprivate globalActions: CompositeMenuActions;\n\n\tprivate readonly panelDisposables: Map<string, IDisposable> = new Map<string, IDisposable>();\n\n\tprivate blockOpeningPanel = false;\n\tprotected contentDimension: Dimension | undefined;\n\n\tprivate extensionsRegistered = false;\n\n\tprivate panelRegistry: PaneCompositeRegistry;\n\n\tprivate dndHandler: ICompositeDragAndDrop;\n\n\tprivate readonly enabledViewContainersContextKeys: Map<string, IContextKey<boolean>> = new Map<string, IContextKey<boolean>>();\n\n\tconstructor(\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService protected readonly contextKeyService: IContextKeyService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\tprivate readonly partId: Parts.PANEL_PART | Parts.AUXILIARYBAR_PART,\n\t\tactivePanelSettingsKey: string,\n\t\tprivate readonly pinnedPanelsKey: string,\n\t\tprivate readonly placeholdeViewContainersKey: string,\n\t\tpanelRegistryId: string,\n\t\tprivate readonly backgroundColor: string,\n\t\tprivate readonly viewContainerLocation: ViewContainerLocation,\n\t\tprivate readonly activePanelContextKey: IContextKey<string>,\n\t\tprivate panelFocusContextKey: IContextKey<boolean>,\n\t\tprivate readonly panelOptions: IPanelPartOptions,\n\t) {\n\t\tsuper(\n\t\t\tnotificationService,\n\t\t\tstorageService,\n\t\t\tcontextMenuService,\n\t\t\tlayoutService,\n\t\t\tkeybindingService,\n\t\t\tinstantiationService,\n\t\t\tthemeService,\n\t\t\tRegistry.as<PaneCompositeRegistry>(panelRegistryId),\n\t\t\tactivePanelSettingsKey,\n\t\t\tviewDescriptorService.getDefaultViewContainer(viewContainerLocation)?.id || '',\n\t\t\t'panel',\n\t\t\t'panel',\n\t\t\tundefined,\n\t\t\tpartId,\n\t\t\tpanelOptions\n\t\t);\n\n\t\tthis.panelRegistry = Registry.as<PaneCompositeRegistry>(panelRegistryId);\n\n\t\tthis.dndHandler = new CompositeDragAndDrop(this.viewDescriptorService, this.viewContainerLocation,\n\t\t\t(id: string, focus?: boolean) => (this.openPaneComposite(id, focus) as Promise<IPaneComposite | undefined>).then(panel => panel || null),\n\t\t\t(from: string, to: string, before?: Before2D) => this.compositeBar.move(from, to, before?.horizontallyBefore),\n\t\t\t() => this.compositeBar.getCompositeBarItems()\n\t\t);\n\n\t\tthis.compositeBar = this._register(this.instantiationService.createInstance(CompositeBar, this.getCachedPanels(), {\n\t\t\ticon: !!this.panelOptions.useIcons,\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tactivityHoverOptions: this.getActivityHoverOptions(),\n\t\t\topenComposite: (compositeId, preserveFocus) => this.openPaneComposite(compositeId, !preserveFocus).then(panel => panel || null),\n\t\t\tgetActivityAction: compositeId => this.getCompositeActions(compositeId).activityAction,\n\t\t\tgetCompositePinnedAction: compositeId => this.getCompositeActions(compositeId).pinnedAction,\n\t\t\tgetCompositeBadgeAction: compositeId => this.getCompositeActions(compositeId).badgeAction,\n\t\t\tgetOnCompositeClickAction: compositeId => this.instantiationService.createInstance(PanelActivityAction, assertIsDefined(this.getPaneComposite(compositeId)), this.viewContainerLocation),\n\t\t\tfillExtraContextMenuActions: actions => this.fillExtraContextMenuActions(actions),\n\t\t\tgetContextMenuActionsForComposite: compositeId => this.getContextMenuActionsForComposite(compositeId),\n\t\t\tgetDefaultCompositeId: () => viewDescriptorService.getDefaultViewContainer(this.viewContainerLocation)?.id,\n\t\t\thidePart: () => this.layoutService.setPartHidden(true, this.partId),\n\t\t\tdndHandler: this.dndHandler,\n\t\t\tcompositeSize: 0,\n\t\t\toverflowActionSize: 44,\n\t\t\tcolors: theme => ({\n\t\t\t\tactiveBackgroundColor: theme.getColor(this.backgroundColor), // Background color for overflow action\n\t\t\t\tinactiveBackgroundColor: theme.getColor(this.backgroundColor), // Background color for overflow action\n\t\t\t\tactiveBorderBottomColor: theme.getColor(PANEL_ACTIVE_TITLE_BORDER),\n\t\t\t\tactiveForegroundColor: theme.getColor(PANEL_ACTIVE_TITLE_FOREGROUND),\n\t\t\t\tinactiveForegroundColor: theme.getColor(PANEL_INACTIVE_TITLE_FOREGROUND),\n\t\t\t\tbadgeBackground: theme.getColor(badgeBackground),\n\t\t\t\tbadgeForeground: theme.getColor(badgeForeground),\n\t\t\t\tdragAndDropBorder: theme.getColor(PANEL_DRAG_AND_DROP_BORDER)\n\t\t\t})\n\t\t}));\n\n\t\tthis.registerListeners();\n\t\tthis.onDidRegisterPanels([...this.getPaneComposites()]);\n\n\t\t// Global Panel Actions\n\t\tthis.globalActions = this._register(this.instantiationService.createInstance(CompositeMenuActions, partId === Parts.PANEL_PART ? MenuId.PanelTitle : MenuId.AuxiliaryBarTitle, undefined, undefined));\n\t\tthis._register(this.globalActions.onDidChange(() => this.updateGlobalToolbarActions()));\n\t}\n\n\tprotected abstract getActivityHoverOptions(): IActivityHoverOptions;\n\tprotected abstract fillExtraContextMenuActions(actions: IAction[]): void;\n\n\tprivate getContextMenuActionsForComposite(compositeId: string): IAction[] {\n\t\tconst result: IAction[] = [];\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(compositeId)!;\n\t\tconst defaultLocation = this.viewDescriptorService.getDefaultViewContainerLocation(viewContainer)!;\n\t\tif (defaultLocation !== this.viewDescriptorService.getViewContainerLocation(viewContainer)) {\n\t\t\tresult.push(toAction({ id: 'resetLocationAction', label: localize('resetLocation', \"Reset Location\"), run: () => this.viewDescriptorService.moveViewContainerToLocation(viewContainer, defaultLocation) }));\n\t\t} else {\n\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\tif (viewContainerModel.allViewDescriptors.length === 1) {\n\t\t\t\tconst viewToReset = viewContainerModel.allViewDescriptors[0];\n\t\t\t\tconst defaultContainer = this.viewDescriptorService.getDefaultContainerById(viewToReset.id)!;\n\t\t\t\tif (defaultContainer !== viewContainer) {\n\t\t\t\t\tresult.push(toAction({ id: 'resetLocationAction', label: localize('resetLocation', \"Reset Location\"), run: () => this.viewDescriptorService.moveViewsToContainer([viewToReset], defaultContainer) }));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate onDidRegisterPanels(panels: PaneCompositeDescriptor[]): void {\n\t\tconst cachedPanels = this.getCachedPanels();\n\t\tfor (const panel of panels) {\n\t\t\tconst cachedPanel = cachedPanels.filter(({ id }) => id === panel.id)[0];\n\t\t\tconst activePanel = this.getActivePaneComposite();\n\t\t\tconst isActive =\n\t\t\t\tactivePanel?.getId() === panel.id ||\n\t\t\t\t(this.extensionsRegistered && this.compositeBar.getVisibleComposites().length === 0);\n\n\t\t\tif (isActive || !this.shouldBeHidden(panel.id, cachedPanel)) {\n\n\t\t\t\t// Override order\n\t\t\t\tconst newPanel = {\n\t\t\t\t\tid: panel.id,\n\t\t\t\t\tname: panel.name,\n\t\t\t\t\torder: panel.order,\n\t\t\t\t\trequestedIndex: panel.requestedIndex\n\t\t\t\t};\n\n\t\t\t\tthis.compositeBar.addComposite(newPanel);\n\n\t\t\t\t// Pin it by default if it is new\n\t\t\t\tif (!cachedPanel) {\n\t\t\t\t\tthis.compositeBar.pin(panel.id);\n\t\t\t\t}\n\n\t\t\t\tif (isActive) {\n\t\t\t\t\tthis.compositeBar.activateComposite(panel.id);\n\n\t\t\t\t\t// Only try to open the panel if it has been created and visible\n\t\t\t\t\tif (!activePanel && this.element && this.layoutService.isVisible(this.partId)) {\n\t\t\t\t\t\tthis.doOpenPanel(panel.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const panel of panels) {\n\t\t\tconst viewContainer = this.getViewContainer(panel.id)!;\n\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\tthis.updateActivity(viewContainer, viewContainerModel);\n\t\t\tthis.showOrHideViewContainer(viewContainer, viewContainerModel);\n\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tdisposables.add(viewContainerModel.onDidChangeActiveViewDescriptors(() => this.showOrHideViewContainer(viewContainer, viewContainerModel)));\n\t\t\tdisposables.add(viewContainerModel.onDidChangeContainerInfo(() => this.updateActivity(viewContainer, viewContainerModel)));\n\n\t\t\tthis.panelDisposables.set(panel.id, disposables);\n\t\t}\n\t}\n\n\tprivate async onDidDeregisterPanel(panelId: string): Promise<void> {\n\t\tconst disposable = this.panelDisposables.get(panelId);\n\t\tdisposable?.dispose();\n\t\tthis.panelDisposables.delete(panelId);\n\n\t\tconst activeContainers = this.viewDescriptorService.getViewContainersByLocation(this.viewContainerLocation)\n\t\t\t.filter(container => this.viewDescriptorService.getViewContainerModel(container).activeViewDescriptors.length > 0);\n\n\t\tif (activeContainers.length) {\n\t\t\tif (this.getActivePaneComposite()?.getId() === panelId) {\n\t\t\t\tconst defaultPanelId = this.viewDescriptorService.getDefaultViewContainer(this.viewContainerLocation)?.id;\n\t\t\t\tconst containerToOpen = activeContainers.filter(c => c.id === defaultPanelId)[0] || activeContainers[0];\n\t\t\t\tawait this.openPaneComposite(containerToOpen.id);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.layoutService.setPartHidden(true, this.partId);\n\t\t}\n\n\t\tthis.removeComposite(panelId);\n\t}\n\n\tprivate updateActivity(viewContainer: ViewContainer, viewContainerModel: IViewContainerModel): void {\n\t\tconst cachedTitle = this.getPlaceholderViewContainers().filter(panel => panel.id === viewContainer.id)[0]?.name;\n\n\t\tconst activity: IActivity = {\n\t\t\tid: viewContainer.id,\n\t\t\tname: this.extensionsRegistered || cachedTitle === undefined ? viewContainerModel.title : cachedTitle,\n\t\t\tkeybindingId: viewContainerModel.keybindingId\n\t\t};\n\n\t\tconst { activityAction, pinnedAction } = this.getCompositeActions(viewContainer.id);\n\t\tactivityAction.setActivity(this.toActivity(viewContainerModel));\n\n\t\tif (pinnedAction instanceof PlaceHolderToggleCompositePinnedAction) {\n\t\t\tpinnedAction.setActivity(activity);\n\t\t}\n\n\t\t// Composite Bar Swither needs to refresh tabs sizes and overflow action\n\t\tthis.compositeBar.recomputeSizes();\n\t\tthis.layoutCompositeBar();\n\n\t\t// only update our cached panel info after extensions are done registering\n\t\tif (this.extensionsRegistered) {\n\t\t\tthis.saveCachedPanels();\n\t\t}\n\t}\n\n\tprivate toActivity(viewContainerModel: IViewContainerModel): IActivity {\n\t\treturn BasePanelPart.toActivity(viewContainerModel.viewContainer.id, viewContainerModel.title, this.panelOptions.useIcons ? viewContainerModel.icon : undefined, viewContainerModel.keybindingId);\n\t}\n\n\tprivate static toActivity(id: string, name: string, icon: URI | ThemeIcon | undefined, keybindingId: string | undefined): IActivity {\n\t\tlet classNames: string[] | undefined = undefined;\n\t\tlet iconUrl: URI | undefined = undefined;\n\t\tif (URI.isUri(icon)) {\n\t\t\ticonUrl = icon;\n\t\t\tconst cssUrl = asCSSUrl(icon);\n\t\t\tconst hash = new StringSHA1();\n\t\t\thash.update(cssUrl);\n\t\t\tconst iconId = `activity-${id.replace(/\\./g, '-')}-${hash.digest()}`;\n\t\t\tclassNames = [iconId, 'uri-icon'];\n\t\t\tconst iconClass = `.monaco-workbench .basepanel .monaco-action-bar .action-label.${iconId}`;\n\t\t\tcreateCSSRule(iconClass, `\n\t\t\t\tmask: ${cssUrl} no-repeat 50% 50%;\n\t\t\t\tmask-size: 16px;\n\t\t\t\t-webkit-mask: ${cssUrl} no-repeat 50% 50%;\n\t\t\t\t-webkit-mask-size: 16px;\n\t\t\t\tmask-origin: padding;\n\t\t\t\t-webkit-mask-origin: padding;\n\t\t\t`);\n\t\t} else if (ThemeIcon.isThemeIcon(icon)) {\n\t\t\tclassNames = ThemeIcon.asClassNameArray(icon);\n\t\t}\n\n\t\treturn { id, name, classNames, iconUrl, keybindingId };\n\t}\n\n\tprivate showOrHideViewContainer(viewContainer: ViewContainer, viewContainerModel: IViewContainerModel): void {\n\t\tlet contextKey = this.enabledViewContainersContextKeys.get(viewContainer.id);\n\t\tif (!contextKey) {\n\t\t\tcontextKey = this.contextKeyService.createKey(getEnabledViewContainerContextKey(viewContainer.id), false);\n\t\t\tthis.enabledViewContainersContextKeys.set(viewContainer.id, contextKey);\n\t\t}\n\t\tif (viewContainerModel.activeViewDescriptors.length) {\n\t\t\tcontextKey.set(true);\n\t\t\tthis.compositeBar.addComposite({ id: viewContainer.id, name: typeof viewContainer.title === 'string' ? viewContainer.title : viewContainer.title.value, order: viewContainer.order, requestedIndex: viewContainer.requestedIndex });\n\n\t\t\tif (this.layoutService.isRestored() && this.layoutService.isVisible(this.partId)) {\n\t\t\t\tconst activeComposite = this.getActiveComposite();\n\t\t\t\tif (activeComposite === undefined || activeComposite.getId() === viewContainer.id) {\n\t\t\t\t\tthis.compositeBar.activateComposite(viewContainer.id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.layoutCompositeBar();\n\t\t\tthis.layoutEmptyMessage();\n\t\t} else if (viewContainer.hideIfEmpty) {\n\t\t\tcontextKey.set(false);\n\t\t\tthis.hideComposite(viewContainer.id);\n\t\t}\n\t}\n\n\tprivate shouldBeHidden(panelId: string, cachedPanel?: ICachedPanel): boolean {\n\t\tconst viewContainer = this.getViewContainer(panelId);\n\t\tif (!viewContainer || !viewContainer.hideIfEmpty) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn cachedPanel?.views && cachedPanel.views.length\n\t\t\t? cachedPanel.views.every(({ when }) => !!when && !this.contextKeyService.contextMatchesRules(ContextKeyExpr.deserialize(when)))\n\t\t\t: false;\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Panel registration\n\t\tthis._register(this.registry.onDidRegister(panel => this.onDidRegisterPanels([panel])));\n\t\tthis._register(this.registry.onDidDeregister(panel => this.onDidDeregisterPanel(panel.id)));\n\n\t\t// Activate on panel open\n\t\tthis._register(this.onDidPaneCompositeOpen(panel => this.onPanelOpen(panel)));\n\n\t\t// Deactivate on panel close\n\t\tthis._register(this.onDidPaneCompositeClose(this.onPanelClose, this));\n\n\t\t// Extension registration\n\t\tconst disposables = this._register(new DisposableStore());\n\t\tthis._register(this.extensionService.onDidRegisterExtensions(() => {\n\t\t\tdisposables.clear();\n\t\t\tthis.onDidRegisterExtensions();\n\t\t\tthis.compositeBar.onDidChange(() => this.saveCachedPanels(), this, disposables);\n\t\t\tthis.storageService.onDidChangeValue(StorageScope.PROFILE, this.pinnedPanelsKey, disposables)(() => this.onDidStorageValueChange(), this, disposables);\n\t\t}));\n\n\t}\n\n\tprivate onDidRegisterExtensions(): void {\n\t\tthis.extensionsRegistered = true;\n\n\t\t// hide/remove composites\n\t\tconst panels = this.getPaneComposites();\n\t\tfor (const { id } of this.getCachedPanels()) {\n\t\t\tif (panels.every(panel => panel.id !== id)) {\n\t\t\t\tif (this.viewDescriptorService.isViewContainerRemovedPermanently(id)) {\n\t\t\t\t\tthis.removeComposite(id);\n\t\t\t\t} else {\n\t\t\t\t\tthis.hideComposite(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.saveCachedPanels();\n\t}\n\n\tprivate hideComposite(compositeId: string): void {\n\t\tthis.compositeBar.hideComposite(compositeId);\n\n\t\tconst compositeActions = this.compositeActions.get(compositeId);\n\t\tif (compositeActions) {\n\t\t\tcompositeActions.activityAction.dispose();\n\t\t\tcompositeActions.pinnedAction.dispose();\n\t\t\tthis.compositeActions.delete(compositeId);\n\t\t}\n\t}\n\n\tprivate onPanelOpen(panel: IComposite): void {\n\t\tthis.activePanelContextKey.set(panel.getId());\n\n\t\tconst foundPanel = this.panelRegistry.getPaneComposite(panel.getId());\n\t\tif (foundPanel) {\n\t\t\tthis.compositeBar.addComposite(foundPanel);\n\t\t}\n\n\t\t// Activate composite when opened\n\t\tthis.compositeBar.activateComposite(panel.getId());\n\n\t\tconst panelDescriptor = this.panelRegistry.getPaneComposite(panel.getId());\n\t\tif (panelDescriptor) {\n\t\t\tconst viewContainer = this.getViewContainer(panelDescriptor.id);\n\t\t\tif (viewContainer?.hideIfEmpty) {\n\t\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\t\tif (viewContainerModel.activeViewDescriptors.length === 0) {\n\t\t\t\t\tthis.hideComposite(panelDescriptor.id); // Update the composite bar by hiding\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.layoutCompositeBar(); // Need to relayout composite bar since different panels have different action bar width\n\t\tthis.layoutEmptyMessage();\n\t}\n\n\tprivate onPanelClose(panel: IComposite): void {\n\t\tconst id = panel.getId();\n\n\t\tif (this.activePanelContextKey.get() === id) {\n\t\t\tthis.activePanelContextKey.reset();\n\t\t}\n\n\t\tthis.compositeBar.deactivateComposite(panel.getId());\n\t\tthis.layoutEmptyMessage();\n\t}\n\n\toverride create(parent: HTMLElement): void {\n\t\tthis.element = parent;\n\n\t\tsuper.create(parent);\n\n\t\tthis.createEmptyPanelMessage();\n\n\t\tconst focusTracker = this._register(trackFocus(parent));\n\t\tthis._register(focusTracker.onDidFocus(() => this.panelFocusContextKey.set(true)));\n\t\tthis._register(focusTracker.onDidBlur(() => this.panelFocusContextKey.set(false)));\n\t}\n\n\tprivate createEmptyPanelMessage(): void {\n\t\tconst contentArea = this.getContentArea()!;\n\t\tthis.emptyPanelMessageElement = document.createElement('div');\n\t\tthis.emptyPanelMessageElement.classList.add('empty-panel-message-area');\n\n\t\tconst messageElement = document.createElement('div');\n\t\tmessageElement.classList.add('empty-panel-message');\n\t\tmessageElement.innerText = localize('panel.emptyMessage', \"Drag a view here to display.\");\n\n\t\tthis.emptyPanelMessageElement.appendChild(messageElement);\n\t\tcontentArea.appendChild(this.emptyPanelMessageElement);\n\n\t\tthis._register(CompositeDragAndDropObserver.INSTANCE.registerTarget(this.emptyPanelMessageElement, {\n\t\t\tonDragOver: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tconst validDropTarget = this.dndHandler.onDragEnter(e.dragAndDropData, undefined, e.eventData);\n\t\t\t\ttoggleDropEffect(e.eventData.dataTransfer, 'move', validDropTarget);\n\t\t\t},\n\t\t\tonDragEnter: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\n\t\t\t\tconst validDropTarget = this.dndHandler.onDragEnter(e.dragAndDropData, undefined, e.eventData);\n\t\t\t\tthis.emptyPanelMessageElement!.style.backgroundColor = validDropTarget ? this.theme.getColor(EDITOR_DRAG_AND_DROP_BACKGROUND)?.toString() || '' : '';\n\t\t\t},\n\t\t\tonDragLeave: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tthis.emptyPanelMessageElement!.style.backgroundColor = '';\n\t\t\t},\n\t\t\tonDragEnd: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tthis.emptyPanelMessageElement!.style.backgroundColor = '';\n\t\t\t},\n\t\t\tonDrop: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tthis.emptyPanelMessageElement!.style.backgroundColor = '';\n\n\t\t\t\tthis.dndHandler.drop(e.dragAndDropData, undefined, e.eventData);\n\t\t\t},\n\t\t}));\n\t}\n\n\tprotected override  createTitleArea(parent: HTMLElement): HTMLElement {\n\t\tconst element = super.createTitleArea(parent);\n\t\tconst globalTitleActionsContainer = element.appendChild($('.global-actions'));\n\n\t\t// Global Actions Toolbar\n\t\tthis.globalToolBar = this._register(new ToolBar(globalTitleActionsContainer, this.contextMenuService, {\n\t\t\tactionViewItemProvider: action => this.actionViewItemProvider(action),\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tgetKeyBinding: action => this.keybindingService.lookupKeybinding(action.id),\n\t\t\tanchorAlignmentProvider: () => this.getTitleAreaDropDownAnchorAlignment(),\n\t\t\ttoggleMenuTitle: localize('moreActions', \"More Actions...\")\n\t\t}));\n\n\t\tthis.updateGlobalToolbarActions();\n\n\t\treturn element;\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tconst container = assertIsDefined(this.getContainer());\n\t\tcontainer.style.backgroundColor = this.getColor(this.backgroundColor) || '';\n\t\tconst borderColor = this.getColor(contrastBorder) || '';\n\t\tcontainer.style.borderLeftColor = borderColor;\n\t\tcontainer.style.borderRightColor = borderColor;\n\n\t\tconst title = this.getTitleArea();\n\t\tif (title) {\n\t\t\ttitle.style.borderTopColor = this.getColor(contrastBorder) || '';\n\t\t}\n\t}\n\n\tdoOpenPanel(id: string, focus?: boolean): PaneComposite | undefined {\n\t\tif (this.blockOpeningPanel) {\n\t\t\treturn undefined; // Workaround against a potential race condition\n\t\t}\n\n\t\t// First check if panel is hidden and show if so\n\t\tif (!this.layoutService.isVisible(this.partId)) {\n\t\t\ttry {\n\t\t\t\tthis.blockOpeningPanel = true;\n\t\t\t\tthis.layoutService.setPartHidden(false, this.partId);\n\t\t\t} finally {\n\t\t\t\tthis.blockOpeningPanel = false;\n\t\t\t}\n\t\t}\n\n\t\treturn this.openComposite(id, focus) as PaneComposite;\n\t}\n\n\tasync openPaneComposite(id?: string, focus?: boolean): Promise<PaneComposite | undefined> {\n\t\tif (typeof id === 'string' && this.getPaneComposite(id)) {\n\t\t\treturn this.doOpenPanel(id, focus);\n\t\t}\n\n\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\n\t\tif (typeof id === 'string' && this.getPaneComposite(id)) {\n\t\t\treturn this.doOpenPanel(id, focus);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tshowActivity(panelId: string, badge: IBadge, clazz?: string): IDisposable {\n\t\treturn this.compositeBar.showActivity(panelId, badge, clazz);\n\t}\n\n\tgetPaneComposite(panelId: string): PaneCompositeDescriptor | undefined {\n\t\treturn this.panelRegistry.getPaneComposite(panelId);\n\t}\n\n\tgetPaneComposites(): PaneCompositeDescriptor[] {\n\t\treturn this.panelRegistry.getPaneComposites()\n\t\t\t.sort((v1, v2) => {\n\t\t\t\tif (typeof v1.order !== 'number') {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tif (typeof v2.order !== 'number') {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\treturn v1.order - v2.order;\n\t\t\t});\n\t}\n\n\tgetPinnedPaneCompositeIds(): string[] {\n\t\tconst pinnedCompositeIds = this.compositeBar.getPinnedComposites().map(c => c.id);\n\t\treturn this.getPaneComposites()\n\t\t\t.filter(p => pinnedCompositeIds.includes(p.id))\n\t\t\t.sort((p1, p2) => pinnedCompositeIds.indexOf(p1.id) - pinnedCompositeIds.indexOf(p2.id))\n\t\t\t.map(p => p.id);\n\t}\n\n\tgetVisiblePaneCompositeIds(): string[] {\n\t\treturn this.compositeBar.getVisibleComposites()\n\t\t\t.filter(v => this.getActivePaneComposite()?.getId() === v.id || this.compositeBar.isPinned(v.id))\n\t\t\t.map(v => v.id);\n\t}\n\n\tgetActivePaneComposite(): IPaneComposite | undefined {\n\t\treturn <IPaneComposite>this.getActiveComposite();\n\t}\n\n\tgetLastActivePaneCompositeId(): string {\n\t\treturn this.getLastActiveCompositeId();\n\t}\n\n\thideActivePaneComposite(): void {\n\t\t// First check if panel is visible and hide if so\n\t\tif (this.layoutService.isVisible(this.partId)) {\n\t\t\tthis.layoutService.setPartHidden(true, this.partId);\n\t\t}\n\n\t\tthis.hideActiveComposite();\n\t}\n\n\tprotected override createTitleLabel(parent: HTMLElement): ICompositeTitleLabel {\n\t\tconst titleArea = this.compositeBar.create(parent);\n\t\ttitleArea.classList.add('panel-switcher-container');\n\n\t\treturn {\n\t\t\tupdateTitle: (id, title, keybinding) => {\n\t\t\t\tconst action = this.compositeBar.getAction(id);\n\t\t\t\tif (action) {\n\t\t\t\t\taction.label = title;\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdateStyles: () => {\n\t\t\t\t// Handled via theming participant\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected override onTitleAreaUpdate(compositeId: string): void {\n\t\tsuper.onTitleAreaUpdate(compositeId);\n\n\t\t// If title actions change, relayout the composite bar\n\t\tthis.layoutCompositeBar();\n\t}\n\n\toverride layout(width: number, height: number, top: number, left: number): void {\n\t\tif (!this.layoutService.isVisible(this.partId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.contentDimension = new Dimension(width, height);\n\n\t\t// Layout contents\n\t\tsuper.layout(this.contentDimension.width, this.contentDimension.height, top, left);\n\n\t\t// Layout composite bar\n\t\tthis.layoutCompositeBar();\n\n\t\t// Add empty panel message\n\t\tthis.layoutEmptyMessage();\n\t}\n\n\tprivate layoutCompositeBar(): void {\n\t\tif (this.contentDimension && this.dimension) {\n\t\t\tlet availableWidth = this.contentDimension.width - 40; // take padding into account\n\t\t\tif (this.toolBar) {\n\t\t\t\tavailableWidth = Math.max(BasePanelPart.MIN_COMPOSITE_BAR_WIDTH, availableWidth - this.getToolbarWidth()); // adjust height for global actions showing\n\t\t\t}\n\n\t\t\tthis.compositeBar.layout(new Dimension(availableWidth, this.dimension.height));\n\t\t}\n\t}\n\n\tprivate emptyPanelMessageElement: HTMLElement | undefined;\n\tprivate layoutEmptyMessage(): void {\n\t\tthis.emptyPanelMessageElement?.classList.toggle('visible', this.compositeBar.getVisibleComposites().length === 0);\n\t}\n\n\tprivate getViewContainer(id: string): ViewContainer | undefined {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(id);\n\t\treturn viewContainer && this.viewDescriptorService.getViewContainerLocation(viewContainer) === this.viewContainerLocation ? viewContainer : undefined;\n\t}\n\n\tprivate updateGlobalToolbarActions(): void {\n\t\tconst primaryActions = this.globalActions.getPrimaryActions();\n\t\tconst secondaryActions = this.globalActions.getSecondaryActions();\n\n\t\tthis.globalToolBar?.setActions(prepareActions(primaryActions), prepareActions(secondaryActions));\n\t}\n\n\tprivate getCompositeActions(compositeId: string): { activityAction: PanelActivityAction; pinnedAction: ToggleCompositePinnedAction; badgeAction: ToggleCompositeBadgeAction } {\n\t\tlet compositeActions = this.compositeActions.get(compositeId);\n\t\tif (!compositeActions) {\n\t\t\t// const panel = this.getPaneComposite(compositeId);\n\t\t\tconst viewContainer = this.getViewContainer(compositeId);\n\n\t\t\tif (viewContainer) {\n\t\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\t\tcompositeActions = {\n\t\t\t\t\tactivityAction: this.instantiationService.createInstance(PanelActivityAction, this.toActivity(viewContainerModel), this.viewContainerLocation),\n\t\t\t\t\tpinnedAction: new ToggleCompositePinnedAction(this.toActivity(viewContainerModel), this.compositeBar),\n\t\t\t\t\tbadgeAction: new ToggleCompositeBadgeAction(this.toActivity(viewContainerModel), this.compositeBar)\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcompositeActions = {\n\t\t\t\t\tactivityAction: this.instantiationService.createInstance(PlaceHolderPanelActivityAction, compositeId, this.viewContainerLocation),\n\t\t\t\t\tpinnedAction: new PlaceHolderToggleCompositePinnedAction(compositeId, this.compositeBar),\n\t\t\t\t\tbadgeAction: new PlaceHolderToggleCompositeBadgeAction(compositeId, this.compositeBar)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.compositeActions.set(compositeId, compositeActions);\n\t\t}\n\n\t\treturn compositeActions;\n\t}\n\n\tprotected override removeComposite(compositeId: string): boolean {\n\t\tif (super.removeComposite(compositeId)) {\n\t\t\tthis.compositeBar.removeComposite(compositeId);\n\t\t\tconst compositeActions = this.compositeActions.get(compositeId);\n\t\t\tif (compositeActions) {\n\t\t\t\tcompositeActions.activityAction.dispose();\n\t\t\t\tcompositeActions.pinnedAction.dispose();\n\t\t\t\tthis.compositeActions.delete(compositeId);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprotected getToolbarWidth(): number {\n\t\tconst activePanel = this.getActivePaneComposite();\n\t\tif (!activePanel || !this.toolBar) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn this.toolBar.getItemsWidth() + (this.globalToolBar?.getItemsWidth() ?? 0);\n\t}\n\n\tprivate onDidStorageValueChange(): void {\n\t\tif (this.cachedPanelsValue !== this.getStoredCachedPanelsValue() /* This checks if current window changed the value or not */) {\n\t\t\tthis._cachedPanelsValue = undefined;\n\t\t\tconst newCompositeItems: ICompositeBarItem[] = [];\n\t\t\tconst compositeItems = this.compositeBar.getCompositeBarItems();\n\t\t\tconst cachedPanels = this.getCachedPanels();\n\n\t\t\tfor (const cachedPanel of cachedPanels) {\n\t\t\t\t// copy behavior from activity bar\n\t\t\t\tnewCompositeItems.push({\n\t\t\t\t\tid: cachedPanel.id,\n\t\t\t\t\tname: cachedPanel.name,\n\t\t\t\t\torder: cachedPanel.order,\n\t\t\t\t\tpinned: cachedPanel.pinned,\n\t\t\t\t\tvisible: !!compositeItems.find(({ id }) => id === cachedPanel.id)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (let index = 0; index < compositeItems.length; index++) {\n\t\t\t\t// Add items currently exists but does not exist in new.\n\t\t\t\tif (!newCompositeItems.some(({ id }) => id === compositeItems[index].id)) {\n\t\t\t\t\tnewCompositeItems.splice(index, 0, compositeItems[index]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.compositeBar.setCompositeBarItems(newCompositeItems);\n\t\t}\n\t}\n\n\tprivate saveCachedPanels(): void {\n\t\tconst state: ICachedPanel[] = [];\n\t\tconst placeholders: IPlaceholderViewContainer[] = [];\n\n\t\tconst compositeItems = this.compositeBar.getCompositeBarItems();\n\t\tfor (const compositeItem of compositeItems) {\n\t\t\tconst viewContainer = this.getViewContainer(compositeItem.id);\n\t\t\tif (viewContainer) {\n\t\t\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\t\tstate.push({ id: compositeItem.id, name: viewContainerModel.title, pinned: compositeItem.pinned, order: compositeItem.order, visible: compositeItem.visible });\n\t\t\t\tplaceholders.push({ id: compositeItem.id, name: this.getCompositeActions(compositeItem.id).activityAction.label });\n\t\t\t} else {\n\t\t\t\tstate.push({ id: compositeItem.id, name: compositeItem.name, pinned: compositeItem.pinned, order: compositeItem.order, visible: compositeItem.visible });\n\t\t\t}\n\t\t}\n\n\t\tthis.cachedPanelsValue = JSON.stringify(state);\n\t\tthis.setPlaceholderViewContainers(placeholders);\n\t}\n\n\tprivate getCachedPanels(): ICachedPanel[] {\n\t\tconst registeredPanels = this.getPaneComposites();\n\n\t\tconst storedStates: Array<string | ICachedPanel> = JSON.parse(this.cachedPanelsValue);\n\t\tconst cachedPanels = storedStates.map(c => {\n\t\t\tconst serialized: ICachedPanel = typeof c === 'string' /* migration from pinned states to composites states */ ? { id: c, pinned: true, order: undefined, visible: true } : c;\n\t\t\tconst registered = registeredPanels.some(p => p.id === serialized.id);\n\t\t\tserialized.visible = registered ? isUndefinedOrNull(serialized.visible) ? true : serialized.visible : false;\n\t\t\treturn serialized;\n\t\t});\n\n\t\tfor (const placeholderViewContainer of this.getPlaceholderViewContainers()) {\n\t\t\tconst cachedViewContainer = cachedPanels.filter(cached => cached.id === placeholderViewContainer.id)[0];\n\t\t\tif (cachedViewContainer) {\n\t\t\t\tcachedViewContainer.name = placeholderViewContainer.name;\n\t\t\t}\n\t\t}\n\n\t\treturn cachedPanels;\n\t}\n\n\tprivate _cachedPanelsValue: string | undefined;\n\tprivate get cachedPanelsValue(): string {\n\t\tif (!this._cachedPanelsValue) {\n\t\t\tthis._cachedPanelsValue = this.getStoredCachedPanelsValue();\n\t\t}\n\n\t\treturn this._cachedPanelsValue;\n\t}\n\n\tprivate set cachedPanelsValue(cachedViewletsValue: string) {\n\t\tif (this.cachedPanelsValue !== cachedViewletsValue) {\n\t\t\tthis._cachedPanelsValue = cachedViewletsValue;\n\t\t\tthis.setStoredCachedViewletsValue(cachedViewletsValue);\n\t\t}\n\t}\n\n\tprivate getStoredCachedPanelsValue(): string {\n\t\treturn this.storageService.get(this.pinnedPanelsKey, StorageScope.PROFILE, '[]');\n\t}\n\n\tprivate setStoredCachedViewletsValue(value: string): void {\n\t\tthis.storageService.store(this.pinnedPanelsKey, value, StorageScope.PROFILE, StorageTarget.USER);\n\t}\n\n\tprivate getPlaceholderViewContainers(): IPlaceholderViewContainer[] {\n\t\treturn JSON.parse(this.placeholderViewContainersValue);\n\t}\n\n\tprivate setPlaceholderViewContainers(placeholderViewContainers: IPlaceholderViewContainer[]): void {\n\t\tthis.placeholderViewContainersValue = JSON.stringify(placeholderViewContainers);\n\t}\n\n\tprivate _placeholderViewContainersValue: string | undefined;\n\tprivate get placeholderViewContainersValue(): string {\n\t\tif (!this._placeholderViewContainersValue) {\n\t\t\tthis._placeholderViewContainersValue = this.getStoredPlaceholderViewContainersValue();\n\t\t}\n\n\t\treturn this._placeholderViewContainersValue;\n\t}\n\n\tprivate set placeholderViewContainersValue(placeholderViewContainesValue: string) {\n\t\tif (this.placeholderViewContainersValue !== placeholderViewContainesValue) {\n\t\t\tthis._placeholderViewContainersValue = placeholderViewContainesValue;\n\t\t\tthis.setStoredPlaceholderViewContainersValue(placeholderViewContainesValue);\n\t\t}\n\t}\n\n\tprivate getStoredPlaceholderViewContainersValue(): string {\n\t\treturn this.storageService.get(this.placeholdeViewContainersKey, StorageScope.WORKSPACE, '[]');\n\t}\n\n\tprivate setStoredPlaceholderViewContainersValue(value: string): void {\n\t\tthis.storageService.store(this.placeholdeViewContainersKey, value, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t}\n}\n\nexport class PanelPart extends BasePanelPart {\n\tstatic readonly activePanelSettingsKey = 'workbench.panelpart.activepanelid';\n\n\tconstructor(\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@ICommandService private commandService: ICommandService,\n\t\t@IMenuService private menuService: IMenuService,\n\t) {\n\t\tsuper(\n\t\t\tnotificationService,\n\t\t\tstorageService,\n\t\t\tcontextMenuService,\n\t\t\tlayoutService,\n\t\t\tkeybindingService,\n\t\t\tinstantiationService,\n\t\t\tthemeService,\n\t\t\tviewDescriptorService,\n\t\t\tcontextKeyService,\n\t\t\textensionService,\n\t\t\tParts.PANEL_PART,\n\t\t\tPanelPart.activePanelSettingsKey,\n\t\t\t'workbench.panel.pinnedPanels',\n\t\t\t'workbench.panel.placeholderPanels',\n\t\t\tPaneCompositeExtensions.Panels,\n\t\t\tPANEL_BACKGROUND,\n\t\t\tViewContainerLocation.Panel,\n\t\t\tActivePanelContext.bindTo(contextKeyService),\n\t\t\tPanelFocusContext.bindTo(contextKeyService),\n\t\t\t{\n\t\t\t\tuseIcons: false,\n\t\t\t\thasTitle: true\n\t\t\t},\n\t\t);\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tconst container = assertIsDefined(this.getContainer());\n\t\tconst borderColor = this.getColor(PANEL_BORDER) || this.getColor(contrastBorder) || '';\n\t\tcontainer.style.borderLeftColor = borderColor;\n\t\tcontainer.style.borderRightColor = borderColor;\n\n\t\tconst title = this.getTitleArea();\n\t\tif (title) {\n\t\t\ttitle.style.borderTopColor = this.getColor(PANEL_BORDER) || this.getColor(contrastBorder) || '';\n\t\t}\n\t}\n\n\tprotected getActivityHoverOptions(): IActivityHoverOptions {\n\t\treturn {\n\t\t\tposition: () => this.layoutService.getPanelPosition() === Position.BOTTOM && !this.layoutService.isPanelMaximized() ? HoverPosition.ABOVE : HoverPosition.BELOW,\n\t\t};\n\t}\n\n\tprotected fillExtraContextMenuActions(actions: IAction[]): void {\n\n\t\tconst panelPositionMenu = this.menuService.createMenu(MenuId.PanelPositionMenu, this.contextKeyService);\n\t\tconst panelAlignMenu = this.menuService.createMenu(MenuId.PanelAlignmentMenu, this.contextKeyService);\n\t\tconst positionActions: IAction[] = [];\n\t\tconst alignActions: IAction[] = [];\n\t\tcreateAndFillInContextMenuActions(panelPositionMenu, { shouldForwardArgs: true }, { primary: [], secondary: positionActions });\n\t\tcreateAndFillInContextMenuActions(panelAlignMenu, { shouldForwardArgs: true }, { primary: [], secondary: alignActions });\n\t\tpanelAlignMenu.dispose();\n\t\tpanelPositionMenu.dispose();\n\n\t\tactions.push(...[\n\t\t\tnew Separator(),\n\t\t\tnew SubmenuAction('workbench.action.panel.position', localize('panel position', \"Panel Position\"), positionActions),\n\t\t\tnew SubmenuAction('workbench.action.panel.align', localize('align panel', \"Align Panel\"), alignActions),\n\t\t\ttoAction({ id: TogglePanelAction.ID, label: localize('hidePanel', \"Hide Panel\"), run: () => this.commandService.executeCommand(TogglePanelAction.ID) })\n\t\t]);\n\t}\n\n\toverride layout(width: number, height: number, top: number, left: number): void {\n\t\tlet dimensions: Dimension;\n\t\tif (this.layoutService.getPanelPosition() === Position.RIGHT) {\n\t\t\tdimensions = new Dimension(width - 1, height); // Take into account the 1px border when layouting\n\t\t} else {\n\t\t\tdimensions = new Dimension(width, height);\n\t\t}\n\n\t\t// Layout contents\n\t\tsuper.layout(dimensions.width, dimensions.height, top, left);\n\t}\n\n\ttoJSON(): object {\n\t\treturn {\n\t\t\ttype: Parts.PANEL_PART\n\t\t};\n\t}\n}\n"]}