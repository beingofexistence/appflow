{"version":3,"sources":["vs/workbench/browser/parts/panel/panelActions.ts"],"names":[],"mappings":"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","file":"panelActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/panelpart';\nimport { localize } from 'vs/nls';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { MenuId, MenuRegistry, registerAction2, Action2, IAction2Options } from 'vs/platform/actions/common/actions';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { IWorkbenchLayoutService, PanelAlignment, Parts, Position, positionToString } from 'vs/workbench/services/layout/browser/layoutService';\nimport { ActivityAction, ToggleCompositePinnedAction, ICompositeBar } from 'vs/workbench/browser/parts/compositeBarActions';\nimport { IActivity } from 'vs/workbench/common/activity';\nimport { AuxiliaryBarVisibleContext, PanelAlignmentContext, PanelMaximizedContext, PanelPositionContext, PanelVisibleContext } from 'vs/workbench/common/contextkeys';\nimport { ContextKeyExpr, ContextKeyExpression } from 'vs/platform/contextkey/common/contextkey';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\nimport { ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { ViewContainerLocationToString, ViewContainerLocation, IViewDescriptorService, IViewsService } from 'vs/workbench/common/views';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { ICommandActionTitle } from 'vs/platform/action/common/action';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\n\nconst maximizeIcon = registerIcon('panel-maximize', Codicon.chevronUp, localize('maximizeIcon', 'Icon to maximize a panel.'));\nconst restoreIcon = registerIcon('panel-restore', Codicon.chevronDown, localize('restoreIcon', 'Icon to restore a panel.'));\nconst closeIcon = registerIcon('panel-close', Codicon.close, localize('closeIcon', 'Icon to close a panel.'));\nconst panelIcon = registerIcon('panel-layout-icon', Codicon.layoutPanel, localize('togglePanelOffIcon', 'Icon to toggle the panel off when it is on.'));\nconst panelOffIcon = registerIcon('panel-layout-icon-off', Codicon.layoutPanelOff, localize('togglePanelOnIcon', 'Icon to toggle the panel on when it is off.'));\n\nexport class TogglePanelAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.togglePanel';\n\tstatic readonly LABEL = localize('togglePanelVisibility', \"Toggle Panel Visibility\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TogglePanelAction.ID,\n\t\t\ttitle: { value: TogglePanelAction.LABEL, original: 'Toggle Panel Visibility' },\n\t\t\ttoggled: {\n\t\t\t\tcondition: PanelVisibleContext,\n\t\t\t\ttitle: localize('toggle panel', \"Panel\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'toggle panel mnemonic', comment: ['&& denotes a mnemonic'] }, \"&&Panel\"),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tcategory: Categories.View,\n\t\t\tkeybinding: { primary: KeyMod.CtrlCmd | KeyCode.KeyJ, weight: KeybindingWeight.WorkbenchContrib },\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\t\tgroup: '2_workbench_layout',\n\t\t\t\t\torder: 5\n\t\t\t\t}, {\n\t\t\t\t\tid: MenuId.LayoutControlMenuSubmenu,\n\t\t\t\t\tgroup: '0_workbench_layout',\n\t\t\t\t\torder: 4\n\t\t\t\t},\n\t\t\t]\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tlayoutService.setPartHidden(layoutService.isVisible(Parts.PANEL_PART), Parts.PANEL_PART);\n\t}\n}\n\nregisterAction2(TogglePanelAction);\n\nregisterAction2(class extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.focusPanel';\n\tstatic readonly LABEL = localize('focusPanel', \"Focus into Panel\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.focusPanel',\n\t\t\ttitle: { value: localize('focusPanel', \"Focus into Panel\"), original: 'Focus into Panel' },\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\n\t\t// Show panel\n\t\tif (!layoutService.isVisible(Parts.PANEL_PART)) {\n\t\t\tlayoutService.setPartHidden(false, Parts.PANEL_PART);\n\t\t}\n\n\t\t// Focus into active panel\n\t\tconst panel = paneCompositeService.getActivePaneComposite(ViewContainerLocation.Panel);\n\t\tpanel?.focus();\n\t}\n});\n\nconst PositionPanelActionId = {\n\tLEFT: 'workbench.action.positionPanelLeft',\n\tRIGHT: 'workbench.action.positionPanelRight',\n\tBOTTOM: 'workbench.action.positionPanelBottom',\n};\n\nconst AlignPanelActionId = {\n\tLEFT: 'workbench.action.alignPanelLeft',\n\tRIGHT: 'workbench.action.alignPanelRight',\n\tCENTER: 'workbench.action.alignPanelCenter',\n\tJUSTIFY: 'workbench.action.alignPanelJustify',\n};\n\ninterface PanelActionConfig<T> {\n\tid: string;\n\twhen: ContextKeyExpression;\n\ttitle: ICommandActionTitle;\n\tshortLabel: string;\n\tvalue: T;\n}\n\nfunction createPanelActionConfig<T>(id: string, title: ICommandActionTitle, shortLabel: string, value: T, when: ContextKeyExpression): PanelActionConfig<T> {\n\treturn {\n\t\tid,\n\t\ttitle,\n\t\tshortLabel,\n\t\tvalue,\n\t\twhen,\n\t};\n}\n\nfunction createPositionPanelActionConfig(id: string, title: ICommandActionTitle, shortLabel: string, position: Position): PanelActionConfig<Position> {\n\treturn createPanelActionConfig<Position>(id, title, shortLabel, position, PanelPositionContext.notEqualsTo(positionToString(position)));\n}\n\nfunction createAlignmentPanelActionConfig(id: string, title: ICommandActionTitle, shortLabel: string, alignment: PanelAlignment): PanelActionConfig<PanelAlignment> {\n\treturn createPanelActionConfig<PanelAlignment>(id, title, shortLabel, alignment, PanelAlignmentContext.notEqualsTo(alignment));\n}\n\n\nconst PositionPanelActionConfigs: PanelActionConfig<Position>[] = [\n\tcreatePositionPanelActionConfig(PositionPanelActionId.LEFT, { value: localize('positionPanelLeft', 'Move Panel Left'), original: 'Move Panel Left' }, localize('positionPanelLeftShort', \"Left\"), Position.LEFT),\n\tcreatePositionPanelActionConfig(PositionPanelActionId.RIGHT, { value: localize('positionPanelRight', 'Move Panel Right'), original: 'Move Panel Right' }, localize('positionPanelRightShort', \"Right\"), Position.RIGHT),\n\tcreatePositionPanelActionConfig(PositionPanelActionId.BOTTOM, { value: localize('positionPanelBottom', 'Move Panel To Bottom'), original: 'Move Panel To Bottom' }, localize('positionPanelBottomShort', \"Bottom\"), Position.BOTTOM),\n];\n\n\nconst AlignPanelActionConfigs: PanelActionConfig<PanelAlignment>[] = [\n\tcreateAlignmentPanelActionConfig(AlignPanelActionId.LEFT, { value: localize('alignPanelLeft', 'Set Panel Alignment to Left'), original: 'Set Panel Alignment to Left' }, localize('alignPanelLeftShort', \"Left\"), 'left'),\n\tcreateAlignmentPanelActionConfig(AlignPanelActionId.RIGHT, { value: localize('alignPanelRight', 'Set Panel Alignment to Right'), original: 'Set Panel Alignment to Right' }, localize('alignPanelRightShort', \"Right\"), 'right'),\n\tcreateAlignmentPanelActionConfig(AlignPanelActionId.CENTER, { value: localize('alignPanelCenter', 'Set Panel Alignment to Center'), original: 'Set Panel Alignment to Center' }, localize('alignPanelCenterShort', \"Center\"), 'center'),\n\tcreateAlignmentPanelActionConfig(AlignPanelActionId.JUSTIFY, { value: localize('alignPanelJustify', 'Set Panel Alignment to Justify'), original: 'Set Panel Alignment to Justify' }, localize('alignPanelJustifyShort', \"Justify\"), 'justify'),\n];\n\n\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tsubmenu: MenuId.PanelPositionMenu,\n\ttitle: localize('positionPanel', \"Panel Position\"),\n\tgroup: '3_workbench_layout_move',\n\torder: 4\n});\n\nPositionPanelActionConfigs.forEach(positionPanelAction => {\n\tconst { id, title, shortLabel, value, when } = positionPanelAction;\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid,\n\t\t\t\ttitle,\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\t\tlayoutService.setPanelPosition(value === undefined ? Position.BOTTOM : value);\n\t\t}\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.PanelPositionMenu, {\n\t\tcommand: {\n\t\t\tid,\n\t\t\ttitle: shortLabel,\n\t\t\ttoggled: when.negate()\n\t\t},\n\t\torder: 5\n\t});\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tsubmenu: MenuId.PanelAlignmentMenu,\n\ttitle: localize('alignPanel', \"Align Panel\"),\n\tgroup: '3_workbench_layout_move',\n\torder: 5\n});\n\nAlignPanelActionConfigs.forEach(alignPanelAction => {\n\tconst { id, title, shortLabel, value, when } = alignPanelAction;\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid,\n\t\t\t\ttitle: title,\n\t\t\t\tcategory: Categories.View,\n\t\t\t\ttoggled: when.negate(),\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\t\tlayoutService.setPanelAlignment(value === undefined ? 'center' : value);\n\t\t}\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.PanelAlignmentMenu, {\n\t\tcommand: {\n\t\t\tid,\n\t\t\ttitle: shortLabel,\n\t\t\ttoggled: when.negate()\n\t\t},\n\t\torder: 5\n\t});\n});\n\nexport class PanelActivityAction extends ActivityAction {\n\n\tconstructor(\n\t\tactivity: IActivity,\n\t\tprivate readonly viewContainerLocation: ViewContainerLocation,\n\t\t@IPaneCompositePartService private readonly paneCompositeService: IPaneCompositePartService\n\t) {\n\t\tsuper(activity);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tawait this.paneCompositeService.openPaneComposite(this.activity.id, this.viewContainerLocation, true);\n\t\tthis.activate();\n\t}\n\n\tsetActivity(activity: IActivity): void {\n\t\tthis.activity = activity;\n\t}\n}\n\nexport class PlaceHolderPanelActivityAction extends PanelActivityAction {\n\n\tconstructor(\n\t\tid: string,\n\t\tviewContainerLocation: ViewContainerLocation,\n\t\t@IPaneCompositePartService paneCompositeService: IPaneCompositePartService\n\t) {\n\t\tsuper({ id, name: id }, viewContainerLocation, paneCompositeService);\n\t}\n}\n\nexport class PlaceHolderToggleCompositePinnedAction extends ToggleCompositePinnedAction {\n\n\tconstructor(id: string, compositeBar: ICompositeBar) {\n\t\tsuper({ id, name: id, classNames: undefined }, compositeBar);\n\t}\n\n\tsetActivity(activity: IActivity): void {\n\t\tthis.label = activity.name;\n\t}\n}\n\nclass SwitchPanelViewAction extends Action2 {\n\n\tconstructor(id: string, title: ICommandActionTitle) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, offset: number): Promise<void> {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst pinnedPanels = paneCompositeService.getPinnedPaneCompositeIds(ViewContainerLocation.Panel);\n\t\tconst activePanel = paneCompositeService.getActivePaneComposite(ViewContainerLocation.Panel);\n\t\tif (!activePanel) {\n\t\t\treturn;\n\t\t}\n\t\tlet targetPanelId: string | undefined;\n\t\tfor (let i = 0; i < pinnedPanels.length; i++) {\n\t\t\tif (pinnedPanels[i] === activePanel.getId()) {\n\t\t\t\ttargetPanelId = pinnedPanels[(i + pinnedPanels.length + offset) % pinnedPanels.length];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (typeof targetPanelId === 'string') {\n\t\t\tawait paneCompositeService.openPaneComposite(targetPanelId, ViewContainerLocation.Panel, true);\n\t\t}\n\t}\n}\n\nregisterAction2(class extends SwitchPanelViewAction {\n\tconstructor() {\n\t\tsuper('workbench.action.previousPanelView', {\n\t\t\tvalue: localize('previousPanelView', 'Previous Panel View'),\n\t\t\toriginal: 'Previous Panel View'\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn super.run(accessor, -1);\n\t}\n});\n\nregisterAction2(class extends SwitchPanelViewAction {\n\tconstructor() {\n\t\tsuper('workbench.action.nextPanelView', {\n\t\t\tvalue: localize('nextPanelView', 'Next Panel View'),\n\t\t\toriginal: 'Next Panel View'\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn super.run(accessor, 1);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.toggleMaximizedPanel',\n\t\t\ttitle: { value: localize('toggleMaximizedPanel', \"Toggle Maximized Panel\"), original: 'Toggle Maximized Panel' },\n\t\t\ttooltip: localize('maximizePanel', \"Maximize Panel Size\"),\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ticon: maximizeIcon,\n\t\t\t// the workbench grid currently prevents us from supporting panel maximization with non-center panel alignment\n\t\t\tprecondition: ContextKeyExpr.or(PanelAlignmentContext.isEqualTo('center'), PanelPositionContext.notEqualsTo('bottom')),\n\t\t\ttoggled: { condition: PanelMaximizedContext, icon: restoreIcon, tooltip: localize('minimizePanel', \"Restore Panel Size\") },\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.PanelTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1,\n\t\t\t\t// the workbench grid currently prevents us from supporting panel maximization with non-center panel alignment\n\t\t\t\twhen: ContextKeyExpr.or(PanelAlignmentContext.isEqualTo('center'), PanelPositionContext.notEqualsTo('bottom'))\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tif (layoutService.getPanelAlignment() !== 'center' && layoutService.getPanelPosition() === Position.BOTTOM) {\n\t\t\tnotificationService.warn(localize('panelMaxNotSupported', \"Maximizing the panel is only supported when it is center aligned.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (!layoutService.isVisible(Parts.PANEL_PART)) {\n\t\t\tlayoutService.setPartHidden(false, Parts.PANEL_PART);\n\t\t\t// If the panel is not already maximized, maximize it\n\t\t\tif (!layoutService.isPanelMaximized()) {\n\t\t\t\tlayoutService.toggleMaximizedPanel();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlayoutService.toggleMaximizedPanel();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.closePanel',\n\t\t\ttitle: { value: localize('closePanel', \"Close Panel\"), original: 'Close Panel' },\n\t\t\tcategory: Categories.View,\n\t\t\ticon: closeIcon,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: PanelVisibleContext,\n\t\t\t}, {\n\t\t\t\tid: MenuId.PanelTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 2\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\taccessor.get(IWorkbenchLayoutService).setPartHidden(true, Parts.PANEL_PART);\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.closeAuxiliaryBar',\n\t\t\ttitle: { value: localize('closeSecondarySideBar', \"Close Secondary Side Bar\"), original: 'Close Secondary Side Bar' },\n\t\t\tcategory: Categories.View,\n\t\t\ticon: closeIcon,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: AuxiliaryBarVisibleContext,\n\t\t\t}, {\n\t\t\t\tid: MenuId.AuxiliaryBarTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 2\n\t\t\t}]\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor) {\n\t\taccessor.get(IWorkbenchLayoutService).setPartHidden(true, Parts.AUXILIARYBAR_PART);\n\t}\n});\n\nMenuRegistry.appendMenuItems([\n\t{\n\t\tid: MenuId.LayoutControlMenu,\n\t\titem: {\n\t\t\tgroup: '0_workbench_toggles',\n\t\t\tcommand: {\n\t\t\t\tid: TogglePanelAction.ID,\n\t\t\t\ttitle: localize('togglePanel', \"Toggle Panel\"),\n\t\t\t\ticon: panelOffIcon,\n\t\t\t\ttoggled: { condition: PanelVisibleContext, icon: panelIcon }\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.or(ContextKeyExpr.equals('config.workbench.layoutControl.type', 'toggles'), ContextKeyExpr.equals('config.workbench.layoutControl.type', 'both')),\n\t\t\torder: 1\n\t\t}\n\t}, {\n\t\tid: MenuId.ViewTitleContext,\n\t\titem: {\n\t\t\tgroup: '3_workbench_layout_move',\n\t\t\tcommand: {\n\t\t\t\tid: TogglePanelAction.ID,\n\t\t\t\ttitle: { value: localize('hidePanel', \"Hide Panel\"), original: 'Hide Panel' },\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(PanelVisibleContext, ContextKeyExpr.equals('viewLocation', ViewContainerLocationToString(ViewContainerLocation.Panel))),\n\t\t\torder: 2\n\t\t}\n\t}\n]);\n\nclass MoveViewsBetweenPanelsAction extends Action2 {\n\tconstructor(private readonly source: ViewContainerLocation, private readonly destination: ViewContainerLocation, desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]): void {\n\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst viewsService = accessor.get(IViewsService);\n\n\t\tconst srcContainers = viewDescriptorService.getViewContainersByLocation(this.source);\n\t\tconst destContainers = viewDescriptorService.getViewContainersByLocation(this.destination);\n\n\t\tif (srcContainers.length) {\n\t\t\tconst activeViewContainer = viewsService.getVisibleViewContainer(this.source);\n\n\t\t\tsrcContainers.forEach(viewContainer => viewDescriptorService.moveViewContainerToLocation(viewContainer, this.destination));\n\t\t\tlayoutService.setPartHidden(false, this.destination === ViewContainerLocation.Panel ? Parts.PANEL_PART : Parts.AUXILIARYBAR_PART);\n\n\t\t\tif (activeViewContainer && destContainers.length === 0) {\n\t\t\t\tviewsService.openViewContainer(activeViewContainer.id, true);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// --- Move Panel Views To Secondary Side Bar\n\nclass MovePanelToSidePanelAction extends MoveViewsBetweenPanelsAction {\n\tstatic readonly ID = 'workbench.action.movePanelToSidePanel';\n\tconstructor() {\n\t\tsuper(ViewContainerLocation.Panel, ViewContainerLocation.AuxiliaryBar, {\n\t\t\tid: MovePanelToSidePanelAction.ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('movePanelToSecondarySideBar', \"Move Panel Views To Secondary Side Bar\"),\n\t\t\t\toriginal: 'Move Panel Views To Secondary Side Bar'\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: false\n\t\t});\n\t}\n}\n\nexport class MovePanelToSecondarySideBarAction extends MoveViewsBetweenPanelsAction {\n\tstatic readonly ID = 'workbench.action.movePanelToSecondarySideBar';\n\tconstructor() {\n\t\tsuper(ViewContainerLocation.Panel, ViewContainerLocation.AuxiliaryBar, {\n\t\t\tid: MovePanelToSecondarySideBarAction.ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('movePanelToSecondarySideBar', \"Move Panel Views To Secondary Side Bar\"),\n\t\t\t\toriginal: 'Move Panel Views To Secondary Side Bar'\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true\n\t\t});\n\t}\n}\n\nregisterAction2(MovePanelToSidePanelAction);\nregisterAction2(MovePanelToSecondarySideBarAction);\n\n// --- Move Secondary Side Bar Views To Panel\n\nclass MoveSidePanelToPanelAction extends MoveViewsBetweenPanelsAction {\n\tstatic readonly ID = 'workbench.action.moveSidePanelToPanel';\n\n\tconstructor() {\n\t\tsuper(ViewContainerLocation.AuxiliaryBar, ViewContainerLocation.Panel, {\n\t\t\tid: MoveSidePanelToPanelAction.ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('moveSidePanelToPanel', \"Move Secondary Side Bar Views To Panel\"),\n\t\t\t\toriginal: 'Move Secondary Side Bar Views To Panel'\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: false\n\t\t});\n\t}\n}\n\nexport class MoveSecondarySideBarToPanelAction extends MoveViewsBetweenPanelsAction {\n\tstatic readonly ID = 'workbench.action.moveSecondarySideBarToPanel';\n\n\tconstructor() {\n\t\tsuper(ViewContainerLocation.AuxiliaryBar, ViewContainerLocation.Panel, {\n\t\t\tid: MoveSecondarySideBarToPanelAction.ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('moveSidePanelToPanel', \"Move Secondary Side Bar Views To Panel\"),\n\t\t\t\toriginal: 'Move Secondary Side Bar Views To Panel'\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true\n\t\t});\n\t}\n}\nregisterAction2(MoveSidePanelToPanelAction);\nregisterAction2(MoveSecondarySideBarToPanelAction);\n"]}