{"version":3,"sources":["vs/workbench/browser/parts/sidebar/sidebarActions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAahG,MAAa,IAAmB,SAAQ,aAAG;QAE1C;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,+BAA+B;gBACnC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAc,EAAE,IAA6B,CAAC,EAAE,QAAQ,EAAE,6BAA6B,EAAE;gBAClH,QAAQ,EAAE,4BAAG,CAAQ,IAAI;gBACzB,EAAE,EAAE,IAAI;gBACR,UAAU,EAAE;oBACX,MAAM,6CAAmC;oBACzC,IAAI,EAAE,IAAI;oBACV,OAAO,EAAE,mDAA+B;iBACxC;aACD,CAAC,CAAC;QACJ,CAAC;QAED,KAAK,CAAC,GAAG,CAAC,QAA0B;YACnC,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,oBAAI,CAAoB,CAAC;YAC5D,MAAM,oBAAoB,GAAG,QAAQ,CAAC,GAAG,CAAC,oBAAI,CAAsB,CAAC;YAErE,gBAAgB;YAChB,IAAI,CAAC,aAAa,CAAC,SAAS,oDAAoB,EAAE;gBACjD,aAAa,CAAC,aAAa,CAAC,KAAK,qDAAqB,CAAC;gBACvD,OAAO;aACP;YAED,4BAA4B;YAC5B,MAAM,OAAO,GAAG,oBAAoB,CAAC,sBAAsB,uCAA+B,CAAC;YAC3F,OAAO,EAAE,KAAK,EAAE,CAAC;QAClB,CAAC;KACD;IA9BD,oBA8BC;IAED,IAAA,aAAG,EAAa,IAAI,CAAe,CAAC","file":"sidebarActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/sidebarpart';\nimport { localize } from 'vs/nls';\nimport { Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IWorkbenchLayoutService, Parts } from 'vs/workbench/services/layout/browser/layoutService';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { ViewContainerLocation } from 'vs/workbench/common/views';\n\nexport class FocusSideBarAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.focusSideBar',\n\t\t\ttitle: { value: localize('focusSideBar', \"Focus into Primary Side Bar\"), original: 'Focus into Primary Side Bar' },\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: null,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Digit0\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\n\t\t// Show side bar\n\t\tif (!layoutService.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\tlayoutService.setPartHidden(false, Parts.SIDEBAR_PART);\n\t\t\treturn;\n\t\t}\n\n\t\t// Focus into active viewlet\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar);\n\t\tviewlet?.focus();\n\t}\n}\n\nregisterAction2(FocusSideBarAction);\n"]}