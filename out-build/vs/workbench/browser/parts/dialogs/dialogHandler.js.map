{"version":3,"sources":["vs/workbench/browser/parts/dialogs/dialogHandler.ts"],"names":[],"mappings":"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","file":"dialogHandler.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IConfirmation, IConfirmationResult, IInputResult, ICheckbox, IInputElement, ICustomDialogOptions, IInput, AbstractDialogHandler, DialogType, IPrompt, IPromptResult } from 'vs/platform/dialogs/common/dialogs';\nimport { ILayoutService } from 'vs/platform/layout/browser/layoutService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport Severity from 'vs/base/common/severity';\nimport { Dialog, IDialogResult } from 'vs/base/browser/ui/dialog/dialog';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { EventHelper } from 'vs/base/browser/dom';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { fromNow } from 'vs/base/common/date';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { MarkdownRenderer } from 'vs/editor/contrib/markdownRenderer/browser/markdownRenderer';\nimport { defaultButtonStyles, defaultCheckboxStyles, defaultDialogStyles, defaultInputBoxStyles } from 'vs/platform/theme/browser/defaultStyles';\nimport { ResultKind } from 'vs/platform/keybinding/common/keybindingResolver';\n\nexport class BrowserDialogHandler extends AbstractDialogHandler {\n\n\tprivate static readonly ALLOWABLE_COMMANDS = [\n\t\t'copy',\n\t\t'cut',\n\t\t'editor.action.selectAll',\n\t\t'editor.action.clipboardCopyAction',\n\t\t'editor.action.clipboardCutAction',\n\t\t'editor.action.clipboardPasteAction'\n\t];\n\n\tprivate readonly markdownRenderer = this.instantiationService.createInstance(MarkdownRenderer, {});\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@ILayoutService private readonly layoutService: ILayoutService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IClipboardService private readonly clipboardService: IClipboardService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync prompt<T>(prompt: IPrompt<T>): Promise<IPromptResult<T>> {\n\t\tthis.logService.trace('DialogService#prompt', prompt.message);\n\n\t\tconst buttons = this.getPromptButtons(prompt);\n\n\t\tconst { button, checkboxChecked } = await this.doShow(prompt.type, prompt.message, buttons, prompt.detail, prompt.cancelButton ? buttons.length - 1 : -1 /* Disabled */, prompt.checkbox, undefined, typeof prompt?.custom === 'object' ? prompt.custom : undefined);\n\n\t\treturn this.getPromptResult(prompt, button, checkboxChecked);\n\t}\n\n\tasync confirm(confirmation: IConfirmation): Promise<IConfirmationResult> {\n\t\tthis.logService.trace('DialogService#confirm', confirmation.message);\n\n\t\tconst buttons = this.getConfirmationButtons(confirmation);\n\n\t\tconst { button, checkboxChecked } = await this.doShow(confirmation.type ?? 'question', confirmation.message, buttons, confirmation.detail, buttons.length - 1, confirmation.checkbox, undefined, typeof confirmation?.custom === 'object' ? confirmation.custom : undefined);\n\n\t\treturn { confirmed: button === 0, checkboxChecked };\n\t}\n\n\tasync input(input: IInput): Promise<IInputResult> {\n\t\tthis.logService.trace('DialogService#input', input.message);\n\n\t\tconst buttons = this.getInputButtons(input);\n\n\t\tconst { button, checkboxChecked, values } = await this.doShow(input.type ?? 'question', input.message, buttons, input.detail, buttons.length - 1, input?.checkbox, input.inputs, typeof input.custom === 'object' ? input.custom : undefined);\n\n\t\treturn { confirmed: button === 0, checkboxChecked, values };\n\t}\n\n\tasync about(): Promise<void> {\n\t\tconst detailString = (useAgo: boolean): string => {\n\t\t\treturn localize('aboutDetail',\n\t\t\t\t\"Version: {0}\\nCommit: {1}\\nDate: {2}\\nBrowser: {3}\",\n\t\t\t\tthis.productService.version || 'Unknown',\n\t\t\t\tthis.productService.commit || 'Unknown',\n\t\t\t\tthis.productService.date ? `${this.productService.date}${useAgo ? ' (' + fromNow(new Date(this.productService.date), true) + ')' : ''}` : 'Unknown',\n\t\t\t\tnavigator.userAgent\n\t\t\t);\n\t\t};\n\n\t\tconst detail = detailString(true);\n\t\tconst detailToCopy = detailString(false);\n\n\t\tconst { button } = await this.doShow(\n\t\t\tSeverity.Info,\n\t\t\tthis.productService.nameLong,\n\t\t\t[\n\t\t\t\tlocalize({ key: 'copy', comment: ['&& denotes a mnemonic'] }, \"&&Copy\"),\n\t\t\t\tlocalize('ok', \"OK\")\n\t\t\t],\n\t\t\tdetail,\n\t\t\t1\n\t\t);\n\n\t\tif (button === 0) {\n\t\t\tthis.clipboardService.writeText(detailToCopy);\n\t\t}\n\t}\n\n\tprivate async doShow(type: Severity | DialogType | undefined, message: string, buttons?: string[], detail?: string, cancelId?: number, checkbox?: ICheckbox, inputs?: IInputElement[], customOptions?: ICustomDialogOptions): Promise<IDialogResult> {\n\t\tconst dialogDisposables = new DisposableStore();\n\n\t\tconst renderBody = customOptions ? (parent: HTMLElement) => {\n\t\t\tparent.classList.add(...(customOptions.classes || []));\n\t\t\tcustomOptions.markdownDetails?.forEach(markdownDetail => {\n\t\t\t\tconst result = this.markdownRenderer.render(markdownDetail.markdown);\n\t\t\t\tparent.appendChild(result.element);\n\t\t\t\tresult.element.classList.add(...(markdownDetail.classes || []));\n\t\t\t\tdialogDisposables.add(result);\n\t\t\t});\n\t\t} : undefined;\n\n\t\tconst dialog = new Dialog(\n\t\t\tthis.layoutService.container,\n\t\t\tmessage,\n\t\t\tbuttons,\n\t\t\t{\n\t\t\t\tdetail,\n\t\t\t\tcancelId,\n\t\t\t\ttype: this.getDialogType(type),\n\t\t\t\tkeyEventProcessor: (event: StandardKeyboardEvent) => {\n\t\t\t\t\tconst resolved = this.keybindingService.softDispatch(event, this.layoutService.container);\n\t\t\t\t\tif (resolved.kind === ResultKind.KbFound && resolved.commandId) {\n\t\t\t\t\t\tif (BrowserDialogHandler.ALLOWABLE_COMMANDS.indexOf(resolved.commandId) === -1) {\n\t\t\t\t\t\t\tEventHelper.stop(event, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trenderBody,\n\t\t\t\ticon: customOptions?.icon,\n\t\t\t\tdisableCloseAction: customOptions?.disableCloseAction,\n\t\t\t\tbuttonDetails: customOptions?.buttonDetails,\n\t\t\t\tcheckboxLabel: checkbox?.label,\n\t\t\t\tcheckboxChecked: checkbox?.checked,\n\t\t\t\tinputs,\n\t\t\t\tbuttonStyles: defaultButtonStyles,\n\t\t\t\tcheckboxStyles: defaultCheckboxStyles,\n\t\t\t\tinputBoxStyles: defaultInputBoxStyles,\n\t\t\t\tdialogStyles: defaultDialogStyles\n\t\t\t}\n\t\t);\n\n\t\tdialogDisposables.add(dialog);\n\n\t\tconst result = await dialog.show();\n\t\tdialogDisposables.dispose();\n\n\t\treturn result;\n\t}\n}\n"]}