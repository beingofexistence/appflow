{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/browser/parts/statusbar/statusbarItem.ts"],"names":[],"mappings":"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","file":"statusbarItem.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Disposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { SimpleIconLabel } from 'vs/base/browser/ui/iconLabel/simpleIconLabel';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IStatusbarEntry, ShowTooltipCommand, StatusbarEntryKinds } from 'vs/workbench/services/statusbar/browser/statusbar';\nimport { WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification } from 'vs/base/common/actions';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ThemeColor } from 'vs/base/common/themables';\nimport { isThemeColor } from 'vs/editor/common/editorCommon';\nimport { addDisposableListener, EventType, hide, show, append, EventHelper } from 'vs/base/browser/dom';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { Command } from 'vs/editor/common/languages';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { renderIcon, renderLabelWithIcons } from 'vs/base/browser/ui/iconLabel/iconLabels';\nimport { spinningLoading, syncing } from 'vs/platform/theme/common/iconRegistry';\nimport { ICustomHover, setupCustomHover } from 'vs/base/browser/ui/iconLabel/iconLabelHover';\nimport { isMarkdownString, markdownStringEqual } from 'vs/base/common/htmlContent';\nimport { IHoverDelegate } from 'vs/base/browser/ui/iconLabel/iconHoverDelegate';\nimport { Gesture, EventType as TouchEventType } from 'vs/base/browser/touch';\n\nexport class StatusbarEntryItem extends Disposable {\n\n\tprivate readonly label: StatusBarCodiconLabel;\n\n\tprivate entry: IStatusbarEntry | undefined = undefined;\n\n\tprivate readonly foregroundListener = this._register(new MutableDisposable());\n\tprivate readonly backgroundListener = this._register(new MutableDisposable());\n\n\tprivate readonly commandMouseListener = this._register(new MutableDisposable());\n\tprivate readonly commandTouchListener = this._register(new MutableDisposable());\n\tprivate readonly commandKeyboardListener = this._register(new MutableDisposable());\n\n\tprivate hover: ICustomHover | undefined = undefined;\n\n\treadonly labelContainer: HTMLElement;\n\treadonly beakContainer: HTMLElement;\n\n\tget name(): string {\n\t\treturn assertIsDefined(this.entry).name;\n\t}\n\n\tget hasCommand(): boolean {\n\t\treturn typeof this.entry?.command !== 'undefined';\n\t}\n\n\tconstructor(\n\t\tprivate container: HTMLElement,\n\t\tentry: IStatusbarEntry,\n\t\tprivate readonly hoverDelegate: IHoverDelegate,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IThemeService private readonly themeService: IThemeService\n\t) {\n\t\tsuper();\n\n\t\t// Label Container\n\t\tthis.labelContainer = document.createElement('a');\n\t\tthis.labelContainer.tabIndex = -1; // allows screen readers to read title, but still prevents tab focus.\n\t\tthis.labelContainer.setAttribute('role', 'button');\n\t\tthis.labelContainer.className = 'statusbar-item-label';\n\t\tthis._register(Gesture.addTarget(this.labelContainer)); // enable touch\n\n\t\t// Label (with support for progress)\n\t\tthis.label = new StatusBarCodiconLabel(this.labelContainer);\n\t\tthis.container.appendChild(this.labelContainer);\n\n\t\t// Beak Container\n\t\tthis.beakContainer = document.createElement('div');\n\t\tthis.beakContainer.className = 'status-bar-item-beak-container';\n\t\tthis.container.appendChild(this.beakContainer);\n\n\t\tthis.update(entry);\n\t}\n\n\tupdate(entry: IStatusbarEntry): void {\n\n\t\t// Update: Progress\n\t\tthis.label.showProgress = entry.showProgress ?? false;\n\n\t\t// Update: Text\n\t\tif (!this.entry || entry.text !== this.entry.text) {\n\t\t\tthis.label.text = entry.text;\n\n\t\t\tif (entry.text) {\n\t\t\t\tshow(this.labelContainer);\n\t\t\t} else {\n\t\t\t\thide(this.labelContainer);\n\t\t\t}\n\t\t}\n\n\t\t// Update: ARIA label\n\t\t//\n\t\t// Set the aria label on both elements so screen readers would read\n\t\t// the correct thing without duplication #96210\n\n\t\tif (!this.entry || entry.ariaLabel !== this.entry.ariaLabel) {\n\t\t\tthis.container.setAttribute('aria-label', entry.ariaLabel);\n\t\t\tthis.labelContainer.setAttribute('aria-label', entry.ariaLabel);\n\t\t}\n\n\t\tif (!this.entry || entry.role !== this.entry.role) {\n\t\t\tthis.labelContainer.setAttribute('role', entry.role || 'button');\n\t\t}\n\n\t\t// Update: Hover\n\t\tif (!this.entry || !this.isEqualTooltip(this.entry, entry)) {\n\t\t\tconst hoverContents = isMarkdownString(entry.tooltip) ? { markdown: entry.tooltip, markdownNotSupportedFallback: undefined } : entry.tooltip;\n\t\t\tif (this.hover) {\n\t\t\t\tthis.hover.update(hoverContents);\n\t\t\t} else {\n\t\t\t\tthis.hover = this._register(setupCustomHover(this.hoverDelegate, this.container, hoverContents));\n\t\t\t}\n\t\t}\n\n\t\t// Update: Command\n\t\tif (!this.entry || entry.command !== this.entry.command) {\n\t\t\tthis.commandMouseListener.clear();\n\t\t\tthis.commandTouchListener.clear();\n\t\t\tthis.commandKeyboardListener.clear();\n\n\t\t\tconst command = entry.command;\n\t\t\tif (command && (command !== ShowTooltipCommand || this.hover) /* \"Show Hover\" is only valid when we have a hover */) {\n\t\t\t\tthis.commandMouseListener.value = addDisposableListener(this.labelContainer, EventType.CLICK, () => this.executeCommand(command));\n\t\t\t\tthis.commandTouchListener.value = addDisposableListener(this.labelContainer, TouchEventType.Tap, () => this.executeCommand(command));\n\t\t\t\tthis.commandKeyboardListener.value = addDisposableListener(this.labelContainer, EventType.KEY_DOWN, e => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\t\tif (event.equals(KeyCode.Space) || event.equals(KeyCode.Enter)) {\n\t\t\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\t\t\tthis.executeCommand(command);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis.labelContainer.classList.remove('disabled');\n\t\t\t} else {\n\t\t\t\tthis.labelContainer.classList.add('disabled');\n\t\t\t}\n\t\t}\n\n\t\t// Update: Beak\n\t\tif (!this.entry || entry.showBeak !== this.entry.showBeak) {\n\t\t\tif (entry.showBeak) {\n\t\t\t\tthis.container.classList.add('has-beak');\n\t\t\t} else {\n\t\t\t\tthis.container.classList.remove('has-beak');\n\t\t\t}\n\t\t}\n\n\t\tconst hasBackgroundColor = !!entry.backgroundColor || (entry.kind && entry.kind !== 'standard');\n\n\t\t// Update: Kind\n\t\tif (!this.entry || entry.kind !== this.entry.kind) {\n\t\t\tfor (const kind of StatusbarEntryKinds) {\n\t\t\t\tthis.container.classList.remove(`${kind}-kind`);\n\t\t\t}\n\n\t\t\tif (entry.kind && entry.kind !== 'standard') {\n\t\t\t\tthis.container.classList.add(`${entry.kind}-kind`);\n\t\t\t}\n\n\t\t\tthis.container.classList.toggle('has-background-color', hasBackgroundColor);\n\t\t}\n\n\t\t// Update: Foreground\n\t\tif (!this.entry || entry.color !== this.entry.color) {\n\t\t\tthis.applyColor(this.labelContainer, entry.color);\n\t\t}\n\n\t\t// Update: Background\n\t\tif (!this.entry || entry.backgroundColor !== this.entry.backgroundColor) {\n\t\t\tthis.container.classList.toggle('has-background-color', hasBackgroundColor);\n\t\t\tthis.applyColor(this.container, entry.backgroundColor, true);\n\t\t}\n\n\t\t// Remember for next round\n\t\tthis.entry = entry;\n\t}\n\n\tprivate isEqualTooltip({ tooltip }: IStatusbarEntry, { tooltip: otherTooltip }: IStatusbarEntry) {\n\t\tif (tooltip === undefined) {\n\t\t\treturn otherTooltip === undefined;\n\t\t}\n\n\t\tif (isMarkdownString(tooltip)) {\n\t\t\treturn isMarkdownString(otherTooltip) && markdownStringEqual(tooltip, otherTooltip);\n\t\t}\n\n\t\treturn tooltip === otherTooltip;\n\t}\n\n\tprivate async executeCommand(command: string | Command): Promise<void> {\n\n\t\t// Custom command from us: Show tooltip\n\t\tif (command === ShowTooltipCommand) {\n\t\t\tthis.hover?.show(true /* focus */);\n\t\t}\n\n\t\t// Any other command is going through command service\n\t\telse {\n\t\t\tconst id = typeof command === 'string' ? command : command.id;\n\t\t\tconst args = typeof command === 'string' ? [] : command.arguments ?? [];\n\n\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id, from: 'status bar' });\n\t\t\ttry {\n\t\t\t\tawait this.commandService.executeCommand(id, ...args);\n\t\t\t} catch (error) {\n\t\t\t\tthis.notificationService.error(toErrorMessage(error));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate applyColor(container: HTMLElement, color: string | ThemeColor | undefined, isBackground?: boolean): void {\n\t\tlet colorResult: string | undefined = undefined;\n\n\t\tif (isBackground) {\n\t\t\tthis.backgroundListener.clear();\n\t\t} else {\n\t\t\tthis.foregroundListener.clear();\n\t\t}\n\n\t\tif (color) {\n\t\t\tif (isThemeColor(color)) {\n\t\t\t\tcolorResult = this.themeService.getColorTheme().getColor(color.id)?.toString();\n\n\t\t\t\tconst listener = this.themeService.onDidColorThemeChange(theme => {\n\t\t\t\t\tconst colorValue = theme.getColor(color.id)?.toString();\n\n\t\t\t\t\tif (isBackground) {\n\t\t\t\t\t\tcontainer.style.backgroundColor = colorValue ?? '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontainer.style.color = colorValue ?? '';\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (isBackground) {\n\t\t\t\t\tthis.backgroundListener.value = listener;\n\t\t\t\t} else {\n\t\t\t\t\tthis.foregroundListener.value = listener;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcolorResult = color;\n\t\t\t}\n\t\t}\n\n\t\tif (isBackground) {\n\t\t\tcontainer.style.backgroundColor = colorResult ?? '';\n\t\t} else {\n\t\t\tcontainer.style.color = colorResult ?? '';\n\t\t}\n\t}\n}\n\nclass StatusBarCodiconLabel extends SimpleIconLabel {\n\n\tprivate progressCodicon = renderIcon(syncing);\n\n\tprivate currentText = '';\n\tprivate currentShowProgress: boolean | 'syncing' | 'loading' = false;\n\n\tconstructor(\n\t\tprivate readonly container: HTMLElement\n\t) {\n\t\tsuper(container);\n\t}\n\n\tset showProgress(showProgress: boolean | 'syncing' | 'loading') {\n\t\tif (this.currentShowProgress !== showProgress) {\n\t\t\tthis.currentShowProgress = showProgress;\n\t\t\tthis.progressCodicon = renderIcon(showProgress === 'loading' ? spinningLoading : syncing);\n\t\t\tthis.text = this.currentText;\n\t\t}\n\t}\n\n\toverride set text(text: string) {\n\n\t\t// Progress: insert progress codicon as first element as needed\n\t\t// but keep it stable so that the animation does not reset\n\t\tif (this.currentShowProgress) {\n\n\t\t\t// Append as needed\n\t\t\tif (this.container.firstChild !== this.progressCodicon) {\n\t\t\t\tthis.container.appendChild(this.progressCodicon);\n\t\t\t}\n\n\t\t\t// Remove others\n\t\t\tfor (const node of Array.from(this.container.childNodes)) {\n\t\t\t\tif (node !== this.progressCodicon) {\n\t\t\t\t\tnode.remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we have text to show, add a space to separate from progress\n\t\t\tlet textContent = text ?? '';\n\t\t\tif (textContent) {\n\t\t\t\ttextContent = ` ${textContent}`;\n\t\t\t}\n\n\t\t\t// Append new elements\n\t\t\tappend(this.container, ...renderLabelWithIcons(textContent));\n\t\t}\n\n\t\t// No Progress: no special handling\n\t\telse {\n\t\t\tsuper.text = text;\n\t\t}\n\t}\n}\n"]}