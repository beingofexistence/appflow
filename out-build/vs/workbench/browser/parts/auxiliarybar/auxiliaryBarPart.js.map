{"version":3,"sources":["vs/workbench/browser/parts/auxiliarybar/auxiliaryBarPart.ts"],"names":[],"mappings":"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","file":"auxiliaryBarPart.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/auxiliaryBarPart';\nimport { localize } from 'vs/nls';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { contrastBorder } from 'vs/platform/theme/common/colorRegistry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { Extensions as PaneCompositeExtensions } from 'vs/workbench/browser/panecomposite';\nimport { BasePanelPart } from 'vs/workbench/browser/parts/panel/panelPart';\nimport { ActiveAuxiliaryContext, AuxiliaryBarFocusContext } from 'vs/workbench/common/contextkeys';\nimport { SIDE_BAR_BACKGROUND, SIDE_BAR_BORDER, SIDE_BAR_FOREGROUND } from 'vs/workbench/common/theme';\nimport { IViewDescriptorService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkbenchLayoutService, Parts, Position } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IActivityHoverOptions } from 'vs/workbench/browser/parts/compositeBarActions';\nimport { HoverPosition } from 'vs/base/browser/ui/hover/hoverWidget';\nimport { IAction, Separator, toAction } from 'vs/base/common/actions';\nimport { ToggleAuxiliaryBarAction } from 'vs/workbench/browser/parts/auxiliarybar/auxiliaryBarActions';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { LayoutPriority } from 'vs/base/browser/ui/splitview/splitview';\nimport { ToggleSidebarPositionAction } from 'vs/workbench/browser/actions/layoutActions';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\n\nexport class AuxiliaryBarPart extends BasePanelPart {\n\tstatic readonly activePanelSettingsKey = 'workbench.auxiliarybar.activepanelid';\n\tstatic readonly pinnedPanelsKey = 'workbench.auxiliarybar.pinnedPanels';\n\tstatic readonly placeholdeViewContainersKey = 'workbench.auxiliarybar.placeholderPanels';\n\n\t// Use the side bar dimensions\n\toverride readonly minimumWidth: number = 170;\n\toverride readonly maximumWidth: number = Number.POSITIVE_INFINITY;\n\toverride readonly minimumHeight: number = 0;\n\toverride readonly maximumHeight: number = Number.POSITIVE_INFINITY;\n\n\treadonly priority: LayoutPriority = LayoutPriority.Low;\n\n\tconstructor(\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@ICommandService private commandService: ICommandService,\n\t) {\n\t\tsuper(\n\t\t\tnotificationService,\n\t\t\tstorageService,\n\t\t\tcontextMenuService,\n\t\t\tlayoutService,\n\t\t\tkeybindingService,\n\t\t\tinstantiationService,\n\t\t\tthemeService,\n\t\t\tviewDescriptorService,\n\t\t\tcontextKeyService,\n\t\t\textensionService,\n\t\t\tParts.AUXILIARYBAR_PART,\n\t\t\tAuxiliaryBarPart.activePanelSettingsKey,\n\t\t\tAuxiliaryBarPart.pinnedPanelsKey,\n\t\t\tAuxiliaryBarPart.placeholdeViewContainersKey,\n\t\t\tPaneCompositeExtensions.Auxiliary,\n\t\t\tSIDE_BAR_BACKGROUND,\n\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\tActiveAuxiliaryContext.bindTo(contextKeyService),\n\t\t\tAuxiliaryBarFocusContext.bindTo(contextKeyService),\n\t\t\t{\n\t\t\t\tuseIcons: true,\n\t\t\t\thasTitle: true,\n\t\t\t\tborderWidth: () => (this.getColor(SIDE_BAR_BORDER) || this.getColor(contrastBorder)) ? 1 : 0,\n\t\t\t}\n\t\t);\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tconst container = assertIsDefined(this.getContainer());\n\t\tconst borderColor = this.getColor(SIDE_BAR_BORDER) || this.getColor(contrastBorder);\n\t\tconst isPositionLeft = this.layoutService.getSideBarPosition() === Position.RIGHT;\n\n\t\tcontainer.style.color = this.getColor(SIDE_BAR_FOREGROUND) || '';\n\n\t\tcontainer.style.borderLeftColor = borderColor ?? '';\n\t\tcontainer.style.borderRightColor = borderColor ?? '';\n\n\t\tcontainer.style.borderLeftStyle = borderColor && !isPositionLeft ? 'solid' : 'none';\n\t\tcontainer.style.borderRightStyle = borderColor && isPositionLeft ? 'solid' : 'none';\n\n\t\tcontainer.style.borderLeftWidth = borderColor && !isPositionLeft ? '1px' : '0px';\n\t\tcontainer.style.borderRightWidth = borderColor && isPositionLeft ? '1px' : '0px';\n\t}\n\n\tprotected getActivityHoverOptions(): IActivityHoverOptions {\n\t\treturn {\n\t\t\tposition: () => HoverPosition.BELOW\n\t\t};\n\t}\n\n\tprotected fillExtraContextMenuActions(actions: IAction[]): void {\n\t\tconst currentPositionRight = this.layoutService.getSideBarPosition() === Position.LEFT;\n\t\tactions.push(...[\n\t\t\tnew Separator(),\n\t\t\ttoAction({ id: ToggleSidebarPositionAction.ID, label: currentPositionRight ? localize('move second side bar left', \"Move Secondary Side Bar Left\") : localize('move second side bar right', \"Move Secondary Side Bar Right\"), run: () => this.commandService.executeCommand(ToggleSidebarPositionAction.ID) }),\n\t\t\ttoAction({ id: ToggleAuxiliaryBarAction.ID, label: localize('hide second side bar', \"Hide Secondary Side Bar\"), run: () => this.commandService.executeCommand(ToggleAuxiliaryBarAction.ID) })\n\t\t]);\n\t}\n\n\toverride toJSON(): object {\n\t\treturn {\n\t\t\ttype: Parts.AUXILIARYBAR_PART\n\t\t};\n\t}\n}\n"]}