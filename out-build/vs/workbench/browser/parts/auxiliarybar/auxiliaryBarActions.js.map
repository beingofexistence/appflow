{"version":3,"sources":["vs/workbench/browser/parts/auxiliarybar/auxiliaryBarActions.ts"],"names":[],"mappings":"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","file":"auxiliaryBarActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from 'vs/base/common/codicons';\nimport { localize } from 'vs/nls';\nimport { Action2, MenuId, MenuRegistry, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { AuxiliaryBarVisibleContext } from 'vs/workbench/common/contextkeys';\nimport { ViewContainerLocation, ViewContainerLocationToString } from 'vs/workbench/common/views';\nimport { IWorkbenchLayoutService, Parts } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\n\n\nconst auxiliaryBarRightIcon = registerIcon('auxiliarybar-right-layout-icon', Codicon.layoutSidebarRight, localize('toggleAuxiliaryIconRight', 'Icon to toggle the auxiliary bar off in its right position.'));\nconst auxiliaryBarRightOffIcon = registerIcon('auxiliarybar-right-off-layout-icon', Codicon.layoutSidebarRightOff, localize('toggleAuxiliaryIconRightOn', 'Icon to toggle the auxiliary bar on in its right position.'));\nconst auxiliaryBarLeftIcon = registerIcon('auxiliarybar-left-layout-icon', Codicon.layoutSidebarLeft, localize('toggleAuxiliaryIconLeft', 'Icon to toggle the auxiliary bar in its left position.'));\nconst auxiliaryBarLeftOffIcon = registerIcon('auxiliarybar-left-off-layout-icon', Codicon.layoutSidebarLeftOff, localize('toggleAuxiliaryIconLeftOn', 'Icon to toggle the auxiliary bar on in its left position.'));\n\nexport class ToggleAuxiliaryBarAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.toggleAuxiliaryBar';\n\tstatic readonly LABEL = localize('toggleAuxiliaryBar', \"Toggle Secondary Side Bar Visibility\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleAuxiliaryBarAction.ID,\n\t\t\ttitle: { value: ToggleAuxiliaryBarAction.LABEL, original: 'Toggle Secondary Side Bar Visibility' },\n\t\t\ttoggled: {\n\t\t\t\tcondition: AuxiliaryBarVisibleContext,\n\t\t\t\ttitle: localize('secondary sidebar', \"Secondary Side Bar\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'secondary sidebar mnemonic', comment: ['&& denotes a mnemonic'] }, \"Secondary Si&&de Bar\"),\n\t\t\t},\n\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyB\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.LayoutControlMenuSubmenu,\n\t\t\t\t\tgroup: '0_workbench_layout',\n\t\t\t\t\torder: 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\t\tgroup: '2_workbench_layout',\n\t\t\t\t\torder: 2\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tlayoutService.setPartHidden(layoutService.isVisible(Parts.AUXILIARYBAR_PART), Parts.AUXILIARYBAR_PART);\n\t}\n}\n\nregisterAction2(ToggleAuxiliaryBarAction);\n\nregisterAction2(class FocusAuxiliaryBarAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.focusAuxiliaryBar';\n\tstatic readonly LABEL = localize('focusAuxiliaryBar', \"Focus into Secondary Side Bar\");\n\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: FocusAuxiliaryBarAction.ID,\n\t\t\ttitle: { value: FocusAuxiliaryBarAction.LABEL, original: 'Focus into Secondary Side Bar' },\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\n\t\t// Show auxiliary bar\n\t\tif (!layoutService.isVisible(Parts.AUXILIARYBAR_PART)) {\n\t\t\tlayoutService.setPartHidden(false, Parts.AUXILIARYBAR_PART);\n\t\t}\n\n\t\t// Focus into active composite\n\t\tconst composite = paneCompositeService.getActivePaneComposite(ViewContainerLocation.AuxiliaryBar);\n\t\tcomposite?.focus();\n\t}\n});\n\nMenuRegistry.appendMenuItems([\n\t{\n\t\tid: MenuId.LayoutControlMenu,\n\t\titem: {\n\t\t\tgroup: '0_workbench_toggles',\n\t\t\tcommand: {\n\t\t\t\tid: ToggleAuxiliaryBarAction.ID,\n\t\t\t\ttitle: localize('toggleSecondarySideBar', \"Toggle Secondary Side Bar\"),\n\t\t\t\ttoggled: { condition: AuxiliaryBarVisibleContext, icon: auxiliaryBarLeftIcon },\n\t\t\t\ticon: auxiliaryBarLeftOffIcon,\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.or(ContextKeyExpr.equals('config.workbench.layoutControl.type', 'toggles'), ContextKeyExpr.equals('config.workbench.layoutControl.type', 'both')), ContextKeyExpr.equals('config.workbench.sideBar.location', 'right')),\n\t\t\torder: 0\n\t\t}\n\t}, {\n\t\tid: MenuId.LayoutControlMenu,\n\t\titem: {\n\t\t\tgroup: '0_workbench_toggles',\n\t\t\tcommand: {\n\t\t\t\tid: ToggleAuxiliaryBarAction.ID,\n\t\t\t\ttitle: localize('toggleSecondarySideBar', \"Toggle Secondary Side Bar\"),\n\t\t\t\ttoggled: { condition: AuxiliaryBarVisibleContext, icon: auxiliaryBarRightIcon },\n\t\t\t\ticon: auxiliaryBarRightOffIcon,\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.or(ContextKeyExpr.equals('config.workbench.layoutControl.type', 'toggles'), ContextKeyExpr.equals('config.workbench.layoutControl.type', 'both')), ContextKeyExpr.equals('config.workbench.sideBar.location', 'left')),\n\t\t\torder: 2\n\t\t}\n\t}, {\n\t\tid: MenuId.ViewTitleContext,\n\t\titem: {\n\t\t\tgroup: '3_workbench_layout_move',\n\t\t\tcommand: {\n\t\t\t\tid: ToggleAuxiliaryBarAction.ID,\n\t\t\t\ttitle: { value: localize('hideAuxiliaryBar', \"Hide Secondary Side Bar\"), original: 'Hide Secondary Side Bar' },\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(AuxiliaryBarVisibleContext, ContextKeyExpr.equals('viewLocation', ViewContainerLocationToString(ViewContainerLocation.AuxiliaryBar))),\n\t\t\torder: 2\n\t\t}\n\t}\n]);\n"]}