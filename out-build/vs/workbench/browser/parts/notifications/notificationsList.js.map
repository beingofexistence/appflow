{"version":3,"sources":["vs/workbench/browser/parts/notifications/notificationsList.ts"],"names":[],"mappings":"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","file":"notificationsList.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/notificationsList';\nimport { localize } from 'vs/nls';\nimport { isAncestor, trackFocus } from 'vs/base/browser/dom';\nimport { WorkbenchList } from 'vs/platform/list/browser/listService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IListAccessibilityProvider, IListOptions } from 'vs/base/browser/ui/list/listWidget';\nimport { NOTIFICATIONS_BACKGROUND } from 'vs/workbench/common/theme';\nimport { INotificationViewItem } from 'vs/workbench/common/notifications';\nimport { NotificationsListDelegate, NotificationRenderer } from 'vs/workbench/browser/parts/notifications/notificationsViewer';\nimport { CopyNotificationMessageAction } from 'vs/workbench/browser/parts/notifications/notificationsActions';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { assertAllDefined } from 'vs/base/common/types';\nimport { NotificationFocusedContext } from 'vs/workbench/common/contextkeys';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { AriaRole } from 'vs/base/browser/ui/aria/aria';\nimport { NotificationActionRunner } from 'vs/workbench/browser/parts/notifications/notificationsCommands';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\n\nexport interface INotificationsListOptions extends IListOptions<INotificationViewItem> {\n\treadonly widgetAriaLabel?: string;\n}\n\nexport class NotificationsList extends Disposable {\n\n\tprivate listContainer: HTMLElement | undefined;\n\tprivate list: WorkbenchList<INotificationViewItem> | undefined;\n\tprivate listDelegate: NotificationsListDelegate | undefined;\n\tprivate viewModel: INotificationViewItem[] = [];\n\tprivate isVisible: boolean | undefined;\n\n\tconstructor(\n\t\tprivate readonly container: HTMLElement,\n\t\tprivate readonly options: INotificationsListOptions,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tsuper();\n\t}\n\n\tshow(): void {\n\t\tif (this.isVisible) {\n\t\t\treturn; // already visible\n\t\t}\n\n\t\t// Lazily create if showing for the first time\n\t\tif (!this.list) {\n\t\t\tthis.createNotificationsList();\n\t\t}\n\n\t\t// Make visible\n\t\tthis.isVisible = true;\n\t}\n\n\tprivate createNotificationsList(): void {\n\n\t\t// List Container\n\t\tthis.listContainer = document.createElement('div');\n\t\tthis.listContainer.classList.add('notifications-list-container');\n\n\t\tconst actionRunner = this._register(this.instantiationService.createInstance(NotificationActionRunner));\n\n\t\t// Notification Renderer\n\t\tconst renderer = this.instantiationService.createInstance(NotificationRenderer, actionRunner);\n\n\t\t// List\n\t\tconst listDelegate = this.listDelegate = new NotificationsListDelegate(this.listContainer);\n\t\tconst options = this.options;\n\t\tconst list = this.list = <WorkbenchList<INotificationViewItem>>this._register(this.instantiationService.createInstance(\n\t\t\tWorkbenchList,\n\t\t\t'NotificationsList',\n\t\t\tthis.listContainer,\n\t\t\tlistDelegate,\n\t\t\t[renderer],\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tsetRowLineHeight: false,\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\toverrideStyles: {\n\t\t\t\t\tlistBackground: NOTIFICATIONS_BACKGROUND\n\t\t\t\t},\n\t\t\t\taccessibilityProvider: this.instantiationService.createInstance(NotificationAccessibilityProvider, options)\n\t\t\t}\n\t\t));\n\n\t\t// Context menu to copy message\n\t\tconst copyAction = this._register(this.instantiationService.createInstance(CopyNotificationMessageAction, CopyNotificationMessageAction.ID, CopyNotificationMessageAction.LABEL));\n\t\tthis._register((list.onContextMenu(e => {\n\t\t\tif (!e.element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => e.anchor,\n\t\t\t\tgetActions: () => [copyAction],\n\t\t\t\tgetActionsContext: () => e.element,\n\t\t\t\tactionRunner\n\t\t\t});\n\t\t})));\n\n\t\t// Toggle on double click\n\t\tthis._register((list.onMouseDblClick(event => (event.element as INotificationViewItem).toggle())));\n\n\t\t// Clear focus when DOM focus moves out\n\t\t// Use document.hasFocus() to not clear the focus when the entire window lost focus\n\t\t// This ensures that when the focus comes back, the notification is still focused\n\t\tconst listFocusTracker = this._register(trackFocus(list.getHTMLElement()));\n\t\tthis._register(listFocusTracker.onDidBlur(() => {\n\t\t\tif (document.hasFocus()) {\n\t\t\t\tlist.setFocus([]);\n\t\t\t}\n\t\t}));\n\n\t\t// Context key\n\t\tNotificationFocusedContext.bindTo(list.contextKeyService);\n\n\t\t// Only allow for focus in notifications, as the\n\t\t// selection is too strong over the contents of\n\t\t// the notification\n\t\tthis._register(list.onDidChangeSelection(e => {\n\t\t\tif (e.indexes.length > 0) {\n\t\t\t\tlist.setSelection([]);\n\t\t\t}\n\t\t}));\n\n\t\tthis.container.appendChild(this.listContainer);\n\t}\n\n\tupdateNotificationsList(start: number, deleteCount: number, items: INotificationViewItem[] = []) {\n\t\tconst [list, listContainer] = assertAllDefined(this.list, this.listContainer);\n\t\tconst listHasDOMFocus = isAncestor(document.activeElement, listContainer);\n\n\t\t// Remember focus and relative top of that item\n\t\tconst focusedIndex = list.getFocus()[0];\n\t\tconst focusedItem = this.viewModel[focusedIndex];\n\n\t\tlet focusRelativeTop: number | null = null;\n\t\tif (typeof focusedIndex === 'number') {\n\t\t\tfocusRelativeTop = list.getRelativeTop(focusedIndex);\n\t\t}\n\n\t\t// Update view model\n\t\tthis.viewModel.splice(start, deleteCount, ...items);\n\n\t\t// Update list\n\t\tlist.splice(start, deleteCount, items);\n\t\tlist.layout();\n\n\t\t// Hide if no more notifications to show\n\t\tif (this.viewModel.length === 0) {\n\t\t\tthis.hide();\n\t\t}\n\n\t\t// Otherwise restore focus if we had\n\t\telse if (typeof focusedIndex === 'number') {\n\t\t\tlet indexToFocus = 0;\n\t\t\tif (focusedItem) {\n\t\t\t\tlet indexToFocusCandidate = this.viewModel.indexOf(focusedItem);\n\t\t\t\tif (indexToFocusCandidate === -1) {\n\t\t\t\t\tindexToFocusCandidate = focusedIndex - 1; // item could have been removed\n\t\t\t\t}\n\n\t\t\t\tif (indexToFocusCandidate < this.viewModel.length && indexToFocusCandidate >= 0) {\n\t\t\t\t\tindexToFocus = indexToFocusCandidate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof focusRelativeTop === 'number') {\n\t\t\t\tlist.reveal(indexToFocus, focusRelativeTop);\n\t\t\t}\n\n\t\t\tlist.setFocus([indexToFocus]);\n\t\t}\n\n\t\t// Restore DOM focus if we had focus before\n\t\tif (this.isVisible && listHasDOMFocus) {\n\t\t\tlist.domFocus();\n\t\t}\n\t}\n\n\tupdateNotificationHeight(item: INotificationViewItem): void {\n\t\tconst index = this.viewModel.indexOf(item);\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [list, listDelegate] = assertAllDefined(this.list, this.listDelegate);\n\t\tlist.updateElementHeight(index, listDelegate.getHeight(item));\n\t\tlist.layout();\n\t}\n\n\thide(): void {\n\t\tif (!this.isVisible || !this.list) {\n\t\t\treturn; // already hidden\n\t\t}\n\n\t\t// Hide\n\t\tthis.isVisible = false;\n\n\t\t// Clear list\n\t\tthis.list.splice(0, this.viewModel.length);\n\n\t\t// Clear view model\n\t\tthis.viewModel = [];\n\t}\n\n\tfocusFirst(): void {\n\t\tif (!this.list) {\n\t\t\treturn; // not created yet\n\t\t}\n\n\t\tthis.list.focusFirst();\n\t\tthis.list.domFocus();\n\t}\n\n\thasFocus(): boolean {\n\t\tif (!this.listContainer) {\n\t\t\treturn false; // not created yet\n\t\t}\n\n\t\treturn isAncestor(document.activeElement, this.listContainer);\n\t}\n\n\tlayout(width: number, maxHeight?: number): void {\n\t\tif (this.listContainer && this.list) {\n\t\t\tthis.listContainer.style.width = `${width}px`;\n\n\t\t\tif (typeof maxHeight === 'number') {\n\t\t\t\tthis.list.getHTMLElement().style.maxHeight = `${maxHeight}px`;\n\t\t\t}\n\n\t\t\tthis.list.layout();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.hide();\n\n\t\tsuper.dispose();\n\t}\n}\n\nclass NotificationAccessibilityProvider implements IListAccessibilityProvider<INotificationViewItem> {\n\tconstructor(\n\t\tprivate readonly _options: INotificationsListOptions,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService\n\t) { }\n\tgetAriaLabel(element: INotificationViewItem): string {\n\t\tlet accessibleViewHint: string | undefined;\n\t\tconst keybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView')?.getAriaLabel();\n\t\tif (this._configurationService.getValue('accessibility.verbosity.notification')) {\n\t\t\taccessibleViewHint = keybinding ? localize('notificationAccessibleViewHint', \"Inspect the response in the accessible view with {0}\", keybinding) : localize('notificationAccessibleViewHintNoKb', \"Inspect the response in the accessible view via the command Open Accessible View which is currently not triggerable via keybinding\");\n\t\t}\n\t\tif (!element.source) {\n\t\t\treturn accessibleViewHint ? localize('notificationAriaLabelHint', \"{0}, notification, {1}\", element.message.raw, accessibleViewHint) : localize('notificationAriaLabel', \"{0}, notification\", element.message.raw);\n\t\t}\n\n\t\treturn accessibleViewHint ? localize('notificationWithSourceAriaLabelHint', \"{0}, source: {1}, notification, {2}\", element.message.raw, element.source, accessibleViewHint) : localize('notificationWithSourceAriaLabel', \"{0}, source: {1}, notification\", element.message.raw, element.source);\n\t}\n\tgetWidgetAriaLabel(): string {\n\t\treturn this._options.widgetAriaLabel ?? localize('notificationsList', \"Notifications List\");\n\t}\n\tgetRole(): AriaRole {\n\t\treturn 'dialog'; // https://github.com/microsoft/vscode/issues/82728\n\t}\n}\n"]}