{"version":3,"sources":["vs/workbench/browser/parts/notifications/notificationsActions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAahG,MAAM,SAAS,GAAG,IAAA,kBAAG,EAAU,qBAAqB,EAAE,cAAG,CAAK,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAW,EAAE,IAA6C,CAAC,CAAC,CAAC;IAC3I,MAAM,YAAY,GAAG,IAAA,kBAAG,EAAU,yBAAyB,EAAE,cAAG,CAAK,QAAQ,EAAE,IAAA,cAAQ,EAAC,CAAc,EAAE,IAAiD,CAAC,CAAC,CAAC;IAC5J,MAAM,QAAQ,GAAG,IAAA,kBAAG,EAAU,oBAAoB,EAAE,cAAG,CAAK,WAAW,EAAE,IAAA,cAAQ,EAAC,CAAU,EAAE,IAA4C,CAAC,CAAC,CAAC;IAC7I,MAAM,UAAU,GAAG,IAAA,kBAAG,EAAU,sBAAsB,EAAE,cAAG,CAAK,SAAS,EAAE,IAAA,cAAQ,EAAC,CAAY,EAAE,IAA8C,CAAC,CAAC,CAAC;IACnJ,MAAM,YAAY,GAAG,IAAA,kBAAG,EAAU,wBAAwB,EAAE,cAAG,CAAK,WAAW,EAAE,IAAA,cAAQ,EAAC,CAAc,EAAE,IAAgD,CAAC,CAAC,CAAC;IAC7J,MAAM,aAAa,GAAG,IAAA,kBAAG,EAAU,yBAAyB,EAAE,cAAG,CAAK,IAAI,EAAE,IAAA,cAAQ,EAAC,CAAe,EAAE,IAAiD,CAAC,CAAC,CAAC;IAC1J,MAAM,gBAAgB,GAAG,IAAA,kBAAG,EAAU,8BAA8B,EAAE,cAAG,CAAK,SAAS,EAAE,IAAA,cAAQ,EAAC,CAAkB,EAAE,IAAgD,CAAC,CAAC,CAAC;IAElK,IAAM,IAAI,GAAV,MAAM,IAAwB,SAAQ,aAAG;iBAE/B,OAAE,GAAG,4BAAH,AAAO,CAAe;iBACxB,UAAK,GAAG,IAAA,cAAQ,EAAC,CAAmB,EAAE,IAAoB,CAArD,AAAsD,CAAC;QAE5E,YACC,EAAU,EACV,KAAa,EACqB,CAAmB;YAErD,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,qBAAS,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;YAFjB,MAAC,GAAD,CAAC,CAAkB;QAGtD,CAAC;QAEQ,KAAK,CAAC,GAAG,CAAC,YAAmC;YACrD,IAAI,CAAC,CAAC,CAAc,cAAc,CAAC,4BAAI,EAAgB,YAAY,CAAC,CAAC;QACtE,CAAC;;IAfW,oBAAI;mBAAJ,IAAI;QAQd,WAAA,cAAG,CAAA;OARO,IAAI,CAgBhB;IAEM,IAAM,IAAI,GAAV,MAAM,IAA4B,SAAQ,aAAG;iBAEnC,OAAE,GAAG,4BAAH,AAAO,CAAoB;iBAC7B,UAAK,GAAG,IAAA,cAAQ,EAAC,CAAoB,EAAE,IAAyB,CAA3D,AAA4D,CAAC;QAElF,YACC,EAAU,EACV,KAAa,EACqB,CAAmB;YAErD,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,qBAAS,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;YAFpB,MAAC,GAAD,CAAC,CAAkB;QAGtD,CAAC;QAEQ,KAAK,CAAC,GAAG;YACjB,IAAI,CAAC,CAAC,CAAc,cAAc,CAAC,4BAAI,CAAoB,CAAC;QAC7D,CAAC;;IAfW,oBAAI;mBAAJ,IAAI;QAQd,WAAA,cAAG,CAAA;OARO,IAAI,CAgBhB;IAEM,IAAM,IAAI,GAAV,MAAM,IAAyB,SAAQ,aAAG;iBAEhC,OAAE,GAAG,4BAAH,AAAO,CAAuB;iBAChC,UAAK,GAAG,IAAA,cAAQ,EAAC,CAAwB,EAAE,IAA4B,CAAlE,AAAmE,CAAC;QAEzF,YACC,EAAU,EACV,KAAa,EACqB,CAAmB;YAErD,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,qBAAS,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAFxB,MAAC,GAAD,CAAC,CAAkB;QAGtD,CAAC;QAEQ,KAAK,CAAC,GAAG;YACjB,IAAI,CAAC,CAAC,CAAc,cAAc,CAAC,4BAAI,CAAuB,CAAC;QAChE,CAAC;;IAfW,oBAAI;mBAAJ,IAAI;QAQd,WAAA,cAAG,CAAA;OARO,IAAI,CAgBhB;IAEM,IAAM,IAAI,GAAV,MAAM,IAA8B,SAAQ,aAAG;iBAErC,OAAE,GAAG,4BAAH,AAAO,CAAsB;iBAC/B,UAAK,GAAG,IAAA,cAAQ,EAAC,EAAyB,EAAE,IAAoB,CAA3D,AAA4D,CAAC;QAElF,YACC,EAAU,EACV,KAAa,EACqB,CAAmB;YAErD,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,qBAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;YAFhB,MAAC,GAAD,CAAC,CAAkB;QAGtD,CAAC;QAEQ,KAAK,CAAC,GAAG;YACjB,IAAI,CAAC,CAAC,CAAc,cAAc,CAAC,4BAAI,CAAsB,CAAC;QAC/D,CAAC;;IAfW,oBAAI;mBAAJ,IAAI;QAQd,WAAA,cAAG,CAAA;OARO,IAAI,CAgBhB;IAEM,IAAM,IAAI,GAAV,MAAM,IAAyB,SAAQ,aAAG;iBAEhC,OAAE,GAAG,4BAAH,AAAO,CAAgB;iBACzB,UAAK,GAAG,IAAA,cAAQ,EAAC,EAAoB,EAAE,IAAqB,CAAvD,AAAwD,CAAC;QAE9E,YACC,EAAU,EACV,KAAa,EACqB,CAAmB;YAErD,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,qBAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YAFlB,MAAC,GAAD,CAAC,CAAkB;QAGtD,CAAC;QAEQ,KAAK,CAAC,GAAG,CAAC,YAAmC;YACrD,IAAI,CAAC,CAAC,CAAc,cAAc,CAAC,4BAAI,EAAiB,YAAY,CAAC,CAAC;QACvE,CAAC;;IAfW,oBAAI;mBAAJ,IAAI;QAQd,WAAA,cAAG,CAAA;OARO,IAAI,CAgBhB;IAEM,IAAM,IAAI,GAAV,MAAM,IAA2B,SAAQ,aAAG;iBAElC,OAAE,GAAG,4BAAH,AAAO,CAAkB;iBAC3B,UAAK,GAAG,IAAA,cAAQ,EAAC,EAAsB,EAAE,IAAuB,CAA3D,AAA4D,CAAC;QAElF,YACC,EAAU,EACV,KAAa,EACqB,CAAmB;YAErD,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,qBAAS,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;YAFpB,MAAC,GAAD,CAAC,CAAkB;QAGtD,CAAC;QAEQ,KAAK,CAAC,GAAG,CAAC,YAAmC;YACrD,IAAI,CAAC,CAAC,CAAc,cAAc,CAAC,4BAAI,EAAmB,YAAY,CAAC,CAAC;QACzE,CAAC;;IAfW,oBAAI;mBAAJ,IAAI;QAQd,WAAA,cAAG,CAAA;OARO,IAAI,CAgBhB;IAED,MAAa,IAA4B,SAAQ,aAAG;iBAEnC,OAAE,GAAG,wCAAwC,CAAC;iBAC9C,UAAK,GAAG,IAAA,cAAQ,EAAC,EAAuB,EAAE,IAAiB,CAAC,CAAC;QAE7E,YACC,EAAU,EACV,KAAa,EACJ,oBAAwC;YAEjD,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,qBAAS,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;YAF9C,yBAAoB,GAApB,oBAAoB,CAAoB;QAGlD,CAAC;;IAXF,oBAYC;IAEM,IAAM,IAAI,GAAV,MAAM,IAA8B,SAAQ,aAAG;iBAErC,OAAE,GAAG,0CAAH,AAA6C,CAAC;iBAChD,UAAK,GAAG,IAAA,cAAQ,EAAC,EAAkB,EAAE,IAAW,CAA3C,AAA4C,CAAC;QAElE,YACC,EAAU,EACV,KAAa,EACuB,CAAqB;YAEzD,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAFmB,MAAC,GAAD,CAAC,CAAoB;QAG1D,CAAC;QAEQ,GAAG,CAAC,YAAmC;YAC/C,OAAO,IAAI,CAAC,CAAC,CAAgB,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAClE,CAAC;;IAfW,oBAAI;mBAAJ,IAAI;QAQd,WAAA,sBAAG,CAAA;OARO,IAAI,CAgBhB","file":"notificationsActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/notificationsActions';\nimport { INotificationViewItem } from 'vs/workbench/common/notifications';\nimport { localize } from 'vs/nls';\nimport { Action, IAction } from 'vs/base/common/actions';\nimport { CLEAR_NOTIFICATION, EXPAND_NOTIFICATION, COLLAPSE_NOTIFICATION, CLEAR_ALL_NOTIFICATIONS, HIDE_NOTIFICATIONS_CENTER, TOGGLE_DO_NOT_DISTURB_MODE } from 'vs/workbench/browser/parts/notifications/notificationsCommands';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\nimport { ThemeIcon } from 'vs/base/common/themables';\n\nconst clearIcon = registerIcon('notifications-clear', Codicon.close, localize('clearIcon', 'Icon for the clear action in notifications.'));\nconst clearAllIcon = registerIcon('notifications-clear-all', Codicon.clearAll, localize('clearAllIcon', 'Icon for the clear all action in notifications.'));\nconst hideIcon = registerIcon('notifications-hide', Codicon.chevronDown, localize('hideIcon', 'Icon for the hide action in notifications.'));\nconst expandIcon = registerIcon('notifications-expand', Codicon.chevronUp, localize('expandIcon', 'Icon for the expand action in notifications.'));\nconst collapseIcon = registerIcon('notifications-collapse', Codicon.chevronDown, localize('collapseIcon', 'Icon for the collapse action in notifications.'));\nconst configureIcon = registerIcon('notifications-configure', Codicon.gear, localize('configureIcon', 'Icon for the configure action in notifications.'));\nconst doNotDisturbIcon = registerIcon('notifications-do-not-disturb', Codicon.bellSlash, localize('doNotDisturbIcon', 'Icon for the mute all action in notifications.'));\n\nexport class ClearNotificationAction extends Action {\n\n\tstatic readonly ID = CLEAR_NOTIFICATION;\n\tstatic readonly LABEL = localize('clearNotification', \"Clear Notification\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(clearIcon));\n\t}\n\n\toverride async run(notification: INotificationViewItem): Promise<void> {\n\t\tthis.commandService.executeCommand(CLEAR_NOTIFICATION, notification);\n\t}\n}\n\nexport class ClearAllNotificationsAction extends Action {\n\n\tstatic readonly ID = CLEAR_ALL_NOTIFICATIONS;\n\tstatic readonly LABEL = localize('clearNotifications', \"Clear All Notifications\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(clearAllIcon));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.commandService.executeCommand(CLEAR_ALL_NOTIFICATIONS);\n\t}\n}\n\nexport class ToggleDoNotDisturbAction extends Action {\n\n\tstatic readonly ID = TOGGLE_DO_NOT_DISTURB_MODE;\n\tstatic readonly LABEL = localize('toggleDoNotDisturbMode', \"Toggle Do Not Disturb Mode\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(doNotDisturbIcon));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.commandService.executeCommand(TOGGLE_DO_NOT_DISTURB_MODE);\n\t}\n}\n\nexport class HideNotificationsCenterAction extends Action {\n\n\tstatic readonly ID = HIDE_NOTIFICATIONS_CENTER;\n\tstatic readonly LABEL = localize('hideNotificationsCenter', \"Hide Notifications\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(hideIcon));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis.commandService.executeCommand(HIDE_NOTIFICATIONS_CENTER);\n\t}\n}\n\nexport class ExpandNotificationAction extends Action {\n\n\tstatic readonly ID = EXPAND_NOTIFICATION;\n\tstatic readonly LABEL = localize('expandNotification', \"Expand Notification\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(expandIcon));\n\t}\n\n\toverride async run(notification: INotificationViewItem): Promise<void> {\n\t\tthis.commandService.executeCommand(EXPAND_NOTIFICATION, notification);\n\t}\n}\n\nexport class CollapseNotificationAction extends Action {\n\n\tstatic readonly ID = COLLAPSE_NOTIFICATION;\n\tstatic readonly LABEL = localize('collapseNotification', \"Collapse Notification\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(collapseIcon));\n\t}\n\n\toverride async run(notification: INotificationViewItem): Promise<void> {\n\t\tthis.commandService.executeCommand(COLLAPSE_NOTIFICATION, notification);\n\t}\n}\n\nexport class ConfigureNotificationAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.configureNotification';\n\tstatic readonly LABEL = localize('configureNotification', \"More Actions...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\treadonly configurationActions: readonly IAction[]\n\t) {\n\t\tsuper(id, label, ThemeIcon.asClassName(configureIcon));\n\t}\n}\n\nexport class CopyNotificationMessageAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.copyNotificationMessage';\n\tstatic readonly LABEL = localize('copyNotification', \"Copy Text\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IClipboardService private readonly clipboardService: IClipboardService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(notification: INotificationViewItem): Promise<void> {\n\t\treturn this.clipboardService.writeText(notification.message.raw);\n\t}\n}\n"]}