{"version":3,"sources":["vs/workbench/browser/parts/editor/editorCommands.ts"],"names":[],"mappings":"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","file":"editorCommands.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { isObject, isString, isUndefined, isNumber } from 'vs/base/common/types';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IEditorIdentifier, IEditorCommandsContext, CloseDirection, IVisibleEditorPane, EditorsOrder, EditorInputCapabilities, isEditorIdentifier, isEditorInputWithOptionsAndGroup, IUntitledTextResourceEditorInput } from 'vs/workbench/common/editor';\nimport { TextCompareEditorVisibleContext, ActiveEditorGroupEmptyContext, MultipleEditorGroupsContext, ActiveEditorStickyContext, ActiveEditorGroupLockedContext, ActiveEditorCanSplitInGroupContext, TextCompareEditorActiveContext, SideBySideEditorActiveContext } from 'vs/workbench/common/contextkeys';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { EditorGroupColumn, columnToEditorGroup } from 'vs/workbench/services/editor/common/editorGroupColumn';\nimport { IEditorService, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { TextDiffEditor } from 'vs/workbench/browser/parts/editor/textDiffEditor';\nimport { KeyMod, KeyCode, KeyChord } from 'vs/base/common/keyCodes';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { IListService, IOpenEvent } from 'vs/platform/list/browser/listService';\nimport { List } from 'vs/base/browser/ui/list/listWidget';\nimport { distinct, coalesce } from 'vs/base/common/arrays';\nimport { IEditorGroupsService, IEditorGroup, GroupDirection, GroupLocation, GroupsOrder, preferredSideBySideGroupDirection, EditorGroupLayout, isEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { CommandsRegistry, ICommandHandler, ICommandService } from 'vs/platform/commands/common/commands';\nimport { MenuRegistry, MenuId, registerAction2, Action2 } from 'vs/platform/actions/common/actions';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { ActiveGroupEditorsByMostRecentlyUsedQuickAccess } from 'vs/workbench/browser/parts/editor/editorQuickAccess';\nimport { IOpenerService, matchesScheme } from 'vs/platform/opener/common/opener';\nimport { EditorResolution, IEditorOptions, IResourceEditorInput, ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { Schemas } from 'vs/base/common/network';\nimport { SideBySideEditorInput } from 'vs/workbench/common/editor/sideBySideEditorInput';\nimport { SideBySideEditor } from 'vs/workbench/browser/parts/editor/sideBySideEditor';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { IEditorResolverService } from 'vs/workbench/services/editor/common/editorResolverService';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { extname } from 'vs/base/common/resources';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { isDiffEditor } from 'vs/editor/browser/editorBrowser';\nimport { IUntitledTextEditorService } from 'vs/workbench/services/untitled/common/untitledTextEditorService';\n\nexport const CLOSE_SAVED_EDITORS_COMMAND_ID = 'workbench.action.closeUnmodifiedEditors';\nexport const CLOSE_EDITORS_IN_GROUP_COMMAND_ID = 'workbench.action.closeEditorsInGroup';\nexport const CLOSE_EDITORS_AND_GROUP_COMMAND_ID = 'workbench.action.closeEditorsAndGroup';\nexport const CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID = 'workbench.action.closeEditorsToTheRight';\nexport const CLOSE_EDITOR_COMMAND_ID = 'workbench.action.closeActiveEditor';\nexport const CLOSE_PINNED_EDITOR_COMMAND_ID = 'workbench.action.closeActivePinnedEditor';\nexport const CLOSE_EDITOR_GROUP_COMMAND_ID = 'workbench.action.closeGroup';\nexport const CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID = 'workbench.action.closeOtherEditors';\n\nexport const MOVE_ACTIVE_EDITOR_COMMAND_ID = 'moveActiveEditor';\nexport const COPY_ACTIVE_EDITOR_COMMAND_ID = 'copyActiveEditor';\nexport const LAYOUT_EDITOR_GROUPS_COMMAND_ID = 'layoutEditorGroups';\nexport const KEEP_EDITOR_COMMAND_ID = 'workbench.action.keepEditor';\nexport const TOGGLE_KEEP_EDITORS_COMMAND_ID = 'workbench.action.toggleKeepEditors';\nexport const TOGGLE_LOCK_GROUP_COMMAND_ID = 'workbench.action.toggleEditorGroupLock';\nexport const LOCK_GROUP_COMMAND_ID = 'workbench.action.lockEditorGroup';\nexport const UNLOCK_GROUP_COMMAND_ID = 'workbench.action.unlockEditorGroup';\nexport const SHOW_EDITORS_IN_GROUP = 'workbench.action.showEditorsInGroup';\nexport const REOPEN_WITH_COMMAND_ID = 'workbench.action.reopenWithEditor';\n\nexport const PIN_EDITOR_COMMAND_ID = 'workbench.action.pinEditor';\nexport const UNPIN_EDITOR_COMMAND_ID = 'workbench.action.unpinEditor';\n\nexport const TOGGLE_DIFF_SIDE_BY_SIDE = 'toggle.diff.renderSideBySide';\nexport const GOTO_NEXT_CHANGE = 'workbench.action.compareEditor.nextChange';\nexport const GOTO_PREVIOUS_CHANGE = 'workbench.action.compareEditor.previousChange';\nexport const DIFF_FOCUS_PRIMARY_SIDE = 'workbench.action.compareEditor.focusPrimarySide';\nexport const DIFF_FOCUS_SECONDARY_SIDE = 'workbench.action.compareEditor.focusSecondarySide';\nexport const DIFF_FOCUS_OTHER_SIDE = 'workbench.action.compareEditor.focusOtherSide';\nexport const DIFF_OPEN_SIDE = 'workbench.action.compareEditor.openSide';\nexport const TOGGLE_DIFF_IGNORE_TRIM_WHITESPACE = 'toggle.diff.ignoreTrimWhitespace';\n\nexport const SPLIT_EDITOR_UP = 'workbench.action.splitEditorUp';\nexport const SPLIT_EDITOR_DOWN = 'workbench.action.splitEditorDown';\nexport const SPLIT_EDITOR_LEFT = 'workbench.action.splitEditorLeft';\nexport const SPLIT_EDITOR_RIGHT = 'workbench.action.splitEditorRight';\n\nexport const SPLIT_EDITOR_IN_GROUP = 'workbench.action.splitEditorInGroup';\nexport const TOGGLE_SPLIT_EDITOR_IN_GROUP = 'workbench.action.toggleSplitEditorInGroup';\nexport const JOIN_EDITOR_IN_GROUP = 'workbench.action.joinEditorInGroup';\nexport const TOGGLE_SPLIT_EDITOR_IN_GROUP_LAYOUT = 'workbench.action.toggleSplitEditorInGroupLayout';\n\nexport const FOCUS_FIRST_SIDE_EDITOR = 'workbench.action.focusFirstSideEditor';\nexport const FOCUS_SECOND_SIDE_EDITOR = 'workbench.action.focusSecondSideEditor';\nexport const FOCUS_OTHER_SIDE_EDITOR = 'workbench.action.focusOtherSideEditor';\n\nexport const FOCUS_LEFT_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusLeftGroupWithoutWrap';\nexport const FOCUS_RIGHT_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusRightGroupWithoutWrap';\nexport const FOCUS_ABOVE_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusAboveGroupWithoutWrap';\nexport const FOCUS_BELOW_GROUP_WITHOUT_WRAP_COMMAND_ID = 'workbench.action.focusBelowGroupWithoutWrap';\n\nexport const OPEN_EDITOR_AT_INDEX_COMMAND_ID = 'workbench.action.openEditorAtIndex';\n\nexport const API_OPEN_EDITOR_COMMAND_ID = '_workbench.open';\nexport const API_OPEN_DIFF_EDITOR_COMMAND_ID = '_workbench.diff';\nexport const API_OPEN_WITH_EDITOR_COMMAND_ID = '_workbench.openWith';\n\nexport interface ActiveEditorMoveCopyArguments {\n\tto: 'first' | 'last' | 'left' | 'right' | 'up' | 'down' | 'center' | 'position' | 'previous' | 'next';\n\tby: 'tab' | 'group';\n\tvalue: number;\n}\n\nconst isActiveEditorMoveCopyArg = function (arg: ActiveEditorMoveCopyArguments): boolean {\n\tif (!isObject(arg)) {\n\t\treturn false;\n\t}\n\n\tif (!isString(arg.to)) {\n\t\treturn false;\n\t}\n\n\tif (!isUndefined(arg.by) && !isString(arg.by)) {\n\t\treturn false;\n\t}\n\n\tif (!isUndefined(arg.value) && !isNumber(arg.value)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nfunction registerActiveEditorMoveCopyCommand(): void {\n\n\tconst moveCopyJSONSchema: IJSONSchema = {\n\t\t'type': 'object',\n\t\t'required': ['to'],\n\t\t'properties': {\n\t\t\t'to': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': ['left', 'right']\n\t\t\t},\n\t\t\t'by': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': ['tab', 'group']\n\t\t\t},\n\t\t\t'value': {\n\t\t\t\t'type': 'number'\n\t\t\t}\n\t\t}\n\t};\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: MOVE_ACTIVE_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: EditorContextKeys.editorTextFocus,\n\t\tprimary: 0,\n\t\thandler: (accessor, args) => moveCopyActiveEditor(true, args, accessor),\n\t\tdescription: {\n\t\t\tdescription: localize('editorCommand.activeEditorMove.description', \"Move the active editor by tabs or groups\"),\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tname: localize('editorCommand.activeEditorMove.arg.name', \"Active editor move argument\"),\n\t\t\t\t\tdescription: localize('editorCommand.activeEditorMove.arg.description', \"Argument Properties:\\n\\t* 'to': String value providing where to move.\\n\\t* 'by': String value providing the unit for move (by tab or by group).\\n\\t* 'value': Number value providing how many positions or an absolute position to move.\"),\n\t\t\t\t\tconstraint: isActiveEditorMoveCopyArg,\n\t\t\t\t\tschema: moveCopyJSONSchema\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: COPY_ACTIVE_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: EditorContextKeys.editorTextFocus,\n\t\tprimary: 0,\n\t\thandler: (accessor, args) => moveCopyActiveEditor(false, args, accessor),\n\t\tdescription: {\n\t\t\tdescription: localize('editorCommand.activeEditorCopy.description', \"Copy the active editor by groups\"),\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tname: localize('editorCommand.activeEditorCopy.arg.name', \"Active editor copy argument\"),\n\t\t\t\t\tdescription: localize('editorCommand.activeEditorCopy.arg.description', \"Argument Properties:\\n\\t* 'to': String value providing where to copy.\\n\\t* 'value': Number value providing how many positions or an absolute position to copy.\"),\n\t\t\t\t\tconstraint: isActiveEditorMoveCopyArg,\n\t\t\t\t\tschema: moveCopyJSONSchema\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t});\n\n\tfunction moveCopyActiveEditor(isMove: boolean, args: ActiveEditorMoveCopyArguments = Object.create(null), accessor: ServicesAccessor): void {\n\t\targs.to = args.to || 'right';\n\t\targs.by = args.by || 'tab';\n\t\targs.value = typeof args.value === 'number' ? args.value : 1;\n\n\t\tconst activeEditorPane = accessor.get(IEditorService).activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tswitch (args.by) {\n\t\t\t\tcase 'tab':\n\t\t\t\t\tif (isMove) {\n\t\t\t\t\t\treturn moveActiveTab(args, activeEditorPane);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'group':\n\t\t\t\t\treturn moveCopyActiveEditorToGroup(isMove, args, activeEditorPane, accessor);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction moveActiveTab(args: ActiveEditorMoveCopyArguments, control: IVisibleEditorPane): void {\n\t\tconst group = control.group;\n\t\tlet index = group.getIndexOfEditor(control.input);\n\t\tswitch (args.to) {\n\t\t\tcase 'first':\n\t\t\t\tindex = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'last':\n\t\t\t\tindex = group.count - 1;\n\t\t\t\tbreak;\n\t\t\tcase 'left':\n\t\t\t\tindex = index - args.value;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\tindex = index + args.value;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\tindex = Math.round(group.count / 2) - 1;\n\t\t\t\tbreak;\n\t\t\tcase 'position':\n\t\t\t\tindex = args.value - 1;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tindex = index < 0 ? 0 : index >= group.count ? group.count - 1 : index;\n\t\tgroup.moveEditor(control.input, group, { index });\n\t}\n\n\tfunction moveCopyActiveEditorToGroup(isMove: boolean, args: ActiveEditorMoveCopyArguments, control: IVisibleEditorPane, accessor: ServicesAccessor): void {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst sourceGroup = control.group;\n\t\tlet targetGroup: IEditorGroup | undefined;\n\n\t\tswitch (args.to) {\n\t\t\tcase 'left':\n\t\t\t\ttargetGroup = editorGroupService.findGroup({ direction: GroupDirection.LEFT }, sourceGroup);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupService.addGroup(sourceGroup, GroupDirection.LEFT);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\ttargetGroup = editorGroupService.findGroup({ direction: GroupDirection.RIGHT }, sourceGroup);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupService.addGroup(sourceGroup, GroupDirection.RIGHT);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'up':\n\t\t\t\ttargetGroup = editorGroupService.findGroup({ direction: GroupDirection.UP }, sourceGroup);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupService.addGroup(sourceGroup, GroupDirection.UP);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'down':\n\t\t\t\ttargetGroup = editorGroupService.findGroup({ direction: GroupDirection.DOWN }, sourceGroup);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupService.addGroup(sourceGroup, GroupDirection.DOWN);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'first':\n\t\t\t\ttargetGroup = editorGroupService.findGroup({ location: GroupLocation.FIRST }, sourceGroup);\n\t\t\t\tbreak;\n\t\t\tcase 'last':\n\t\t\t\ttargetGroup = editorGroupService.findGroup({ location: GroupLocation.LAST }, sourceGroup);\n\t\t\t\tbreak;\n\t\t\tcase 'previous':\n\t\t\t\ttargetGroup = editorGroupService.findGroup({ location: GroupLocation.PREVIOUS }, sourceGroup);\n\t\t\t\tbreak;\n\t\t\tcase 'next':\n\t\t\t\ttargetGroup = editorGroupService.findGroup({ location: GroupLocation.NEXT }, sourceGroup);\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\ttargetGroup = editorGroupService.addGroup(sourceGroup, preferredSideBySideGroupDirection(configurationService));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\ttargetGroup = editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE)[(editorGroupService.count / 2) - 1];\n\t\t\t\tbreak;\n\t\t\tcase 'position':\n\t\t\t\ttargetGroup = editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE)[args.value - 1];\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (targetGroup) {\n\t\t\tif (isMove) {\n\t\t\t\tsourceGroup.moveEditor(control.input, targetGroup);\n\t\t\t} else if (sourceGroup.id !== targetGroup.id) {\n\t\t\t\tsourceGroup.copyEditor(control.input, targetGroup);\n\t\t\t}\n\t\t\ttargetGroup.focus();\n\t\t}\n\t}\n}\n\nfunction registerEditorGroupsLayoutCommands(): void {\n\n\tfunction applyEditorLayout(accessor: ServicesAccessor, layout: EditorGroupLayout): void {\n\t\tif (!layout || typeof layout !== 'object') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\teditorGroupService.applyLayout(layout);\n\t}\n\n\tCommandsRegistry.registerCommand(LAYOUT_EDITOR_GROUPS_COMMAND_ID, (accessor: ServicesAccessor, args: EditorGroupLayout) => {\n\t\tapplyEditorLayout(accessor, args);\n\t});\n\n\t// API Commands\n\tCommandsRegistry.registerCommand({\n\t\tid: 'vscode.setEditorLayout',\n\t\thandler: (accessor: ServicesAccessor, args: EditorGroupLayout) => applyEditorLayout(accessor, args),\n\t\tdescription: {\n\t\t\tdescription: 'Set Editor Layout',\n\t\t\targs: [{\n\t\t\t\tname: 'args',\n\t\t\t\tschema: {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'required': ['groups'],\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'orientation': {\n\t\t\t\t\t\t\t'type': 'number',\n\t\t\t\t\t\t\t'default': 0,\n\t\t\t\t\t\t\t'enum': [0, 1]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'groups': {\n\t\t\t\t\t\t\t'$ref': '#/definitions/editorGroupsSchema',\n\t\t\t\t\t\t\t'default': [{}, {}]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}]\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand({\n\t\tid: 'vscode.getEditorLayout',\n\t\thandler: (accessor: ServicesAccessor) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\treturn editorGroupService.getLayout();\n\t\t},\n\t\tdescription: {\n\t\t\tdescription: 'Get Editor Layout',\n\t\t\targs: [],\n\t\t\treturns: 'An editor layout object, in the same format as vscode.setEditorLayout'\n\t\t}\n\t});\n}\n\nfunction registerDiffEditorCommands(): void {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: GOTO_NEXT_CHANGE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: TextCompareEditorVisibleContext,\n\t\tprimary: KeyMod.Alt | KeyCode.F5,\n\t\thandler: accessor => navigateInDiffEditor(accessor, true)\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\tcommand: {\n\t\t\tid: GOTO_NEXT_CHANGE,\n\t\t\ttitle: { value: localize('compare.nextChange', \"Go to Next Change\"), original: 'Go to Next Change' },\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: GOTO_PREVIOUS_CHANGE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: TextCompareEditorVisibleContext,\n\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.F5,\n\t\thandler: accessor => navigateInDiffEditor(accessor, false)\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\tcommand: {\n\t\t\tid: GOTO_PREVIOUS_CHANGE,\n\t\t\ttitle: { value: localize('compare.previousChange', \"Go to Previous Change\"), original: 'Go to Previous Change' },\n\t\t}\n\t});\n\n\tfunction getActiveTextDiffEditor(accessor: ServicesAccessor): TextDiffEditor | undefined {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tfor (const editor of [editorService.activeEditorPane, ...editorService.visibleEditorPanes]) {\n\t\t\tif (editor instanceof TextDiffEditor) {\n\t\t\t\treturn editor;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tfunction navigateInDiffEditor(accessor: ServicesAccessor, next: boolean): void {\n\t\tconst activeTextDiffEditor = getActiveTextDiffEditor(accessor);\n\n\t\tif (activeTextDiffEditor) {\n\t\t\tactiveTextDiffEditor.getControl()?.goToDiff(next ? 'next' : 'previous');\n\t\t}\n\t}\n\n\tenum FocusTextDiffEditorMode {\n\t\tOriginal,\n\t\tModified,\n\t\tToggle\n\t}\n\n\tfunction focusInDiffEditor(accessor: ServicesAccessor, mode: FocusTextDiffEditorMode): void {\n\t\tconst activeTextDiffEditor = getActiveTextDiffEditor(accessor);\n\n\t\tif (activeTextDiffEditor) {\n\t\t\tswitch (mode) {\n\t\t\t\tcase FocusTextDiffEditorMode.Original:\n\t\t\t\t\tactiveTextDiffEditor.getControl()?.getOriginalEditor().focus();\n\t\t\t\t\tbreak;\n\t\t\t\tcase FocusTextDiffEditorMode.Modified:\n\t\t\t\t\tactiveTextDiffEditor.getControl()?.getModifiedEditor().focus();\n\t\t\t\t\tbreak;\n\t\t\t\tcase FocusTextDiffEditorMode.Toggle:\n\t\t\t\t\tif (activeTextDiffEditor.getControl()?.getModifiedEditor().hasWidgetFocus()) {\n\t\t\t\t\t\treturn focusInDiffEditor(accessor, FocusTextDiffEditorMode.Original);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn focusInDiffEditor(accessor, FocusTextDiffEditorMode.Modified);\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction toggleDiffSideBySide(accessor: ServicesAccessor): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst newValue = !configurationService.getValue('diffEditor.renderSideBySide');\n\t\tconfigurationService.updateValue('diffEditor.renderSideBySide', newValue);\n\t}\n\n\tfunction toggleDiffIgnoreTrimWhitespace(accessor: ServicesAccessor): void {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst newValue = !configurationService.getValue('diffEditor.ignoreTrimWhitespace');\n\t\tconfigurationService.updateValue('diffEditor.ignoreTrimWhitespace', newValue);\n\t}\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: TOGGLE_DIFF_SIDE_BY_SIDE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: accessor => toggleDiffSideBySide(accessor)\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: DIFF_FOCUS_PRIMARY_SIDE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: accessor => focusInDiffEditor(accessor, FocusTextDiffEditorMode.Modified)\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: DIFF_FOCUS_SECONDARY_SIDE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: accessor => focusInDiffEditor(accessor, FocusTextDiffEditorMode.Original)\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: DIFF_FOCUS_OTHER_SIDE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: accessor => focusInDiffEditor(accessor, FocusTextDiffEditorMode.Toggle)\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\tcommand: {\n\t\t\tid: TOGGLE_DIFF_SIDE_BY_SIDE,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('toggleInlineView', \"Toggle Inline View\"),\n\t\t\t\toriginal: 'Compare: Toggle Inline View'\n\t\t\t},\n\t\t\tcategory: localize('compare', \"Compare\")\n\t\t},\n\t\twhen: TextCompareEditorActiveContext\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: TOGGLE_DIFF_IGNORE_TRIM_WHITESPACE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: accessor => toggleDiffIgnoreTrimWhitespace(accessor)\n\t});\n}\n\nfunction registerOpenEditorAPICommands(): void {\n\n\tfunction mixinContext(context: IOpenEvent<unknown> | undefined, options: ITextEditorOptions | undefined, column: EditorGroupColumn | undefined): [ITextEditorOptions | undefined, EditorGroupColumn | undefined] {\n\t\tif (!context) {\n\t\t\treturn [options, column];\n\t\t}\n\n\t\treturn [\n\t\t\t{ ...context.editorOptions, ...(options ?? Object.create(null)) },\n\t\t\tcontext.sideBySide ? SIDE_GROUP : column\n\t\t];\n\t}\n\n\t// partial, renderer-side API command to open editor\n\t// complements https://github.com/microsoft/vscode/blob/2b164efb0e6a5de3826bff62683eaeafe032284f/src/vs/workbench/api/common/extHostApiCommands.ts#L373\n\tCommandsRegistry.registerCommand({\n\t\tid: 'vscode.open',\n\t\thandler: (accessor, arg) => {\n\t\t\taccessor.get(ICommandService).executeCommand(API_OPEN_EDITOR_COMMAND_ID, arg);\n\t\t},\n\t\tdescription: {\n\t\t\tdescription: 'Opens the provided resource in the editor.',\n\t\t\targs: [{ name: 'Uri' }]\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand(API_OPEN_EDITOR_COMMAND_ID, async function (accessor: ServicesAccessor, resourceArg: UriComponents | string, columnAndOptions?: [EditorGroupColumn?, ITextEditorOptions?], label?: string, context?: IOpenEvent<unknown>) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst openerService = accessor.get(IOpenerService);\n\t\tconst pathService = accessor.get(IPathService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst untitledTextEditorService = accessor.get(IUntitledTextEditorService);\n\n\t\tconst resourceOrString = typeof resourceArg === 'string' ? resourceArg : URI.from(resourceArg, true);\n\t\tconst [columnArg, optionsArg] = columnAndOptions ?? [];\n\n\t\t// use editor options or editor view column or resource scheme\n\t\t// as a hint to use the editor service for opening directly\n\t\tif (optionsArg || typeof columnArg === 'number' || matchesScheme(resourceOrString, Schemas.untitled)) {\n\t\t\tconst [options, column] = mixinContext(context, optionsArg, columnArg);\n\t\t\tconst resource = URI.isUri(resourceOrString) ? resourceOrString : URI.parse(resourceOrString);\n\n\t\t\tlet input: IResourceEditorInput | IUntitledTextResourceEditorInput;\n\t\t\tif (untitledTextEditorService.isUntitledWithAssociatedResource(resource)) {\n\t\t\t\t// special case for untitled: we are getting a resource with meaningful\n\t\t\t\t// path from an extension to use for the untitled editor. as such, we\n\t\t\t\t// have to assume it as an associated resource to use when saving. we\n\t\t\t\t// do so by setting the `forceUntitled: true` and changing the scheme\n\t\t\t\t// to a file based one. the untitled editor service takes care to\n\t\t\t\t// associate the path properly then.\n\t\t\t\tinput = { resource: resource.with({ scheme: pathService.defaultUriScheme }), forceUntitled: true, options, label };\n\t\t\t} else {\n\t\t\t\t// use any other resource as is\n\t\t\t\tinput = { resource, options, label };\n\t\t\t}\n\n\t\t\tawait editorService.openEditor(input, columnToEditorGroup(editorGroupService, configurationService, column));\n\t\t}\n\n\t\t// do not allow to execute commands from here\n\t\telse if (matchesScheme(resourceOrString, Schemas.command)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// finally, delegate to opener service\n\t\telse {\n\t\t\tawait openerService.open(resourceOrString, { openToSide: context?.sideBySide, editorOptions: context?.editorOptions });\n\t\t}\n\t});\n\n\t// partial, renderer-side API command to open diff editor\n\t// complements https://github.com/microsoft/vscode/blob/2b164efb0e6a5de3826bff62683eaeafe032284f/src/vs/workbench/api/common/extHostApiCommands.ts#L397\n\tCommandsRegistry.registerCommand({\n\t\tid: 'vscode.diff',\n\t\thandler: (accessor, left, right, label) => {\n\t\t\taccessor.get(ICommandService).executeCommand(API_OPEN_DIFF_EDITOR_COMMAND_ID, left, right, label);\n\t\t},\n\t\tdescription: {\n\t\t\tdescription: 'Opens the provided resources in the diff editor to compare their contents.',\n\t\t\targs: [\n\t\t\t\t{ name: 'left', description: 'Left-hand side resource of the diff editor' },\n\t\t\t\t{ name: 'right', description: 'Right-hand side resource of the diff editor' },\n\t\t\t\t{ name: 'title', description: 'Human readable title for the diff editor' },\n\t\t\t]\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand(API_OPEN_DIFF_EDITOR_COMMAND_ID, async function (accessor: ServicesAccessor, originalResource: UriComponents, modifiedResource: UriComponents, labelAndOrDescription?: string | { label: string; description: string }, columnAndOptions?: [EditorGroupColumn?, ITextEditorOptions?], context?: IOpenEvent<unknown>) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst [columnArg, optionsArg] = columnAndOptions ?? [];\n\t\tconst [options, column] = mixinContext(context, optionsArg, columnArg);\n\n\t\tlet label: string | undefined = undefined;\n\t\tlet description: string | undefined = undefined;\n\t\tif (typeof labelAndOrDescription === 'string') {\n\t\t\tlabel = labelAndOrDescription;\n\t\t} else if (labelAndOrDescription) {\n\t\t\tlabel = labelAndOrDescription.label;\n\t\t\tdescription = labelAndOrDescription.description;\n\t\t}\n\n\t\tawait editorService.openEditor({\n\t\t\toriginal: { resource: URI.from(originalResource, true) },\n\t\t\tmodified: { resource: URI.from(modifiedResource, true) },\n\t\t\tlabel,\n\t\t\tdescription,\n\t\t\toptions\n\t\t}, columnToEditorGroup(editorGroupService, configurationService, column));\n\t});\n\n\tCommandsRegistry.registerCommand(API_OPEN_WITH_EDITOR_COMMAND_ID, async (accessor: ServicesAccessor, resource: UriComponents, id: string, columnAndOptions?: [EditorGroupColumn?, ITextEditorOptions?]) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst [columnArg, optionsArg] = columnAndOptions ?? [];\n\n\t\tawait editorService.openEditor({ resource: URI.from(resource, true), options: { ...optionsArg, pinned: true, override: id } }, columnToEditorGroup(editorGroupsService, configurationService, columnArg));\n\t});\n}\n\nfunction registerOpenEditorAtIndexCommands(): void {\n\tconst openEditorAtIndex: ICommandHandler = (accessor: ServicesAccessor, editorIndex: number): void => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tconst editor = activeEditorPane.group.getEditorByIndex(editorIndex);\n\t\t\tif (editor) {\n\t\t\t\teditorService.openEditor(editor);\n\t\t\t}\n\t\t}\n\t};\n\n\t// This command takes in the editor index number to open as an argument\n\tCommandsRegistry.registerCommand({\n\t\tid: OPEN_EDITOR_AT_INDEX_COMMAND_ID,\n\t\thandler: openEditorAtIndex\n\t});\n\n\t// Keybindings to focus a specific index in the tab folder if tabs are enabled\n\tfor (let i = 0; i < 9; i++) {\n\t\tconst editorIndex = i;\n\t\tconst visibleIndex = i + 1;\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: OPEN_EDITOR_AT_INDEX_COMMAND_ID + visibleIndex,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: undefined,\n\t\t\tprimary: KeyMod.Alt | toKeyCode(visibleIndex),\n\t\t\tmac: { primary: KeyMod.WinCtrl | toKeyCode(visibleIndex) },\n\t\t\thandler: accessor => openEditorAtIndex(accessor, editorIndex)\n\t\t});\n\t}\n\n\tfunction toKeyCode(index: number): KeyCode {\n\t\tswitch (index) {\n\t\t\tcase 0: return KeyCode.Digit0;\n\t\t\tcase 1: return KeyCode.Digit1;\n\t\t\tcase 2: return KeyCode.Digit2;\n\t\t\tcase 3: return KeyCode.Digit3;\n\t\t\tcase 4: return KeyCode.Digit4;\n\t\t\tcase 5: return KeyCode.Digit5;\n\t\t\tcase 6: return KeyCode.Digit6;\n\t\t\tcase 7: return KeyCode.Digit7;\n\t\t\tcase 8: return KeyCode.Digit8;\n\t\t\tcase 9: return KeyCode.Digit9;\n\t\t}\n\n\t\tthrow new Error('invalid index');\n\t}\n}\n\nfunction registerFocusEditorGroupAtIndexCommands(): void {\n\n\t// Keybindings to focus a specific group (2-8) in the editor area\n\tfor (let groupIndex = 1; groupIndex < 8; groupIndex++) {\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: toCommandId(groupIndex),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: undefined,\n\t\t\tprimary: KeyMod.CtrlCmd | toKeyCode(groupIndex),\n\t\t\thandler: accessor => {\n\t\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\t\t\t// To keep backwards compatibility (pre-grid), allow to focus a group\n\t\t\t\t// that does not exist as long as it is the next group after the last\n\t\t\t\t// opened group. Otherwise we return.\n\t\t\t\tif (groupIndex > editorGroupService.count) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Group exists: just focus\n\t\t\t\tconst groups = editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE);\n\t\t\t\tif (groups[groupIndex]) {\n\t\t\t\t\treturn groups[groupIndex].focus();\n\t\t\t\t}\n\n\t\t\t\t// Group does not exist: create new by splitting the active one of the last group\n\t\t\t\tconst direction = preferredSideBySideGroupDirection(configurationService);\n\t\t\t\tconst lastGroup = editorGroupService.findGroup({ location: GroupLocation.LAST });\n\t\t\t\tif (!lastGroup) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst newGroup = editorGroupService.addGroup(lastGroup, direction);\n\n\t\t\t\t// Focus\n\t\t\t\tnewGroup.focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction toCommandId(index: number): string {\n\t\tswitch (index) {\n\t\t\tcase 1: return 'workbench.action.focusSecondEditorGroup';\n\t\t\tcase 2: return 'workbench.action.focusThirdEditorGroup';\n\t\t\tcase 3: return 'workbench.action.focusFourthEditorGroup';\n\t\t\tcase 4: return 'workbench.action.focusFifthEditorGroup';\n\t\t\tcase 5: return 'workbench.action.focusSixthEditorGroup';\n\t\t\tcase 6: return 'workbench.action.focusSeventhEditorGroup';\n\t\t\tcase 7: return 'workbench.action.focusEighthEditorGroup';\n\t\t}\n\n\t\tthrow new Error('Invalid index');\n\t}\n\n\tfunction toKeyCode(index: number): KeyCode {\n\t\tswitch (index) {\n\t\t\tcase 1: return KeyCode.Digit2;\n\t\t\tcase 2: return KeyCode.Digit3;\n\t\t\tcase 3: return KeyCode.Digit4;\n\t\t\tcase 4: return KeyCode.Digit5;\n\t\t\tcase 5: return KeyCode.Digit6;\n\t\t\tcase 6: return KeyCode.Digit7;\n\t\t\tcase 7: return KeyCode.Digit8;\n\t\t}\n\n\t\tthrow new Error('Invalid index');\n\t}\n}\n\nexport function splitEditor(editorGroupService: IEditorGroupsService, direction: GroupDirection, context?: IEditorCommandsContext): void {\n\tlet sourceGroup: IEditorGroup | undefined;\n\tif (context && typeof context.groupId === 'number') {\n\t\tsourceGroup = editorGroupService.getGroup(context.groupId);\n\t} else {\n\t\tsourceGroup = editorGroupService.activeGroup;\n\t}\n\n\tif (!sourceGroup) {\n\t\treturn;\n\t}\n\n\t// Add group\n\tconst newGroup = editorGroupService.addGroup(sourceGroup, direction);\n\n\t// Split editor (if it can be split)\n\tlet editorToCopy: EditorInput | undefined;\n\tif (context && typeof context.editorIndex === 'number') {\n\t\teditorToCopy = sourceGroup.getEditorByIndex(context.editorIndex);\n\t} else {\n\t\teditorToCopy = sourceGroup.activeEditor ?? undefined;\n\t}\n\n\t// Copy the editor to the new group, else create an empty group\n\tif (editorToCopy && !editorToCopy.hasCapability(EditorInputCapabilities.Singleton)) {\n\t\tsourceGroup.copyEditor(editorToCopy, newGroup, { preserveFocus: context?.preserveFocus });\n\t}\n\n\t// Focus\n\tnewGroup.focus();\n}\n\nfunction registerSplitEditorCommands() {\n\t[\n\t\t{ id: SPLIT_EDITOR_UP, direction: GroupDirection.UP },\n\t\t{ id: SPLIT_EDITOR_DOWN, direction: GroupDirection.DOWN },\n\t\t{ id: SPLIT_EDITOR_LEFT, direction: GroupDirection.LEFT },\n\t\t{ id: SPLIT_EDITOR_RIGHT, direction: GroupDirection.RIGHT }\n\t].forEach(({ id, direction }) => {\n\t\tCommandsRegistry.registerCommand(id, function (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) {\n\t\t\tsplitEditor(accessor.get(IEditorGroupsService), direction, getCommandsContext(resourceOrContext, context));\n\t\t});\n\t});\n}\n\nfunction registerCloseEditorCommands() {\n\n\t// A special handler for \"Close Editor\" depending on context\n\t// - keybindining: do not close sticky editors, rather open the next non-sticky editor\n\t// - menu: always close editor, even sticky ones\n\tfunction closeEditorHandler(accessor: ServicesAccessor, forceCloseStickyEditors: boolean, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): Promise<unknown> {\n\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tlet keepStickyEditors: boolean | undefined = undefined;\n\t\tif (forceCloseStickyEditors) {\n\t\t\tkeepStickyEditors = false; // explicitly close sticky editors\n\t\t} else if (resourceOrContext || context) {\n\t\t\tkeepStickyEditors = false; // we have a context, as such this command was used e.g. from the tab context menu\n\t\t} else {\n\t\t\tkeepStickyEditors = editorGroupsService.partOptions.preventPinnedEditorClose === 'keyboard' || editorGroupsService.partOptions.preventPinnedEditorClose === 'keyboardAndMouse'; // respect setting otherwise\n\t\t}\n\n\t\t// Skip over sticky editor and select next if we are configured to do so\n\t\tif (keepStickyEditors) {\n\t\t\tconst activeGroup = editorGroupsService.activeGroup;\n\t\t\tconst activeEditor = activeGroup.activeEditor;\n\n\t\t\tif (activeEditor && activeGroup.isSticky(activeEditor)) {\n\n\t\t\t\t// Open next recently active in same group\n\t\t\t\tconst nextNonStickyEditorInGroup = activeGroup.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true })[0];\n\t\t\t\tif (nextNonStickyEditorInGroup) {\n\t\t\t\t\treturn activeGroup.openEditor(nextNonStickyEditorInGroup);\n\t\t\t\t}\n\n\t\t\t\t// Open next recently active across all groups\n\t\t\t\tconst nextNonStickyEditorInAllGroups = editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true })[0];\n\t\t\t\tif (nextNonStickyEditorInAllGroups) {\n\t\t\t\t\treturn Promise.resolve(editorGroupsService.getGroup(nextNonStickyEditorInAllGroups.groupId)?.openEditor(nextNonStickyEditorInAllGroups.editor));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// With context: proceed to close editors as instructed\n\t\tconst { editors, groups } = getEditorsContext(accessor, resourceOrContext, context);\n\n\t\treturn Promise.all(groups.map(async group => {\n\t\t\tif (group) {\n\t\t\t\tconst editorsToClose = coalesce(editors\n\t\t\t\t\t.filter(editor => editor.groupId === group.id)\n\t\t\t\t\t.map(editor => typeof editor.editorIndex === 'number' ? group.getEditorByIndex(editor.editorIndex) : group.activeEditor))\n\t\t\t\t\t.filter(editor => !keepStickyEditors || !group.isSticky(editor));\n\n\t\t\t\tawait group.closeEditors(editorsToClose, { preserveFocus: context?.preserveFocus });\n\t\t\t}\n\t\t}));\n\t}\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyW,\n\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.F4, secondary: [KeyMod.CtrlCmd | KeyCode.KeyW] },\n\t\thandler: (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\treturn closeEditorHandler(accessor, false, resourceOrContext, context);\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand(CLOSE_PINNED_EDITOR_COMMAND_ID, (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\treturn closeEditorHandler(accessor, true /* force close pinned editors */, resourceOrContext, context);\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITORS_IN_GROUP_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyW),\n\t\thandler: (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\treturn Promise.all(getEditorsContext(accessor, resourceOrContext, context).groups.map(async group => {\n\t\t\t\tif (group) {\n\t\t\t\t\tawait group.closeAllEditors({ excludeSticky: true });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITOR_GROUP_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ContextKeyExpr.and(ActiveEditorGroupEmptyContext, MultipleEditorGroupsContext),\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyW,\n\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.F4, secondary: [KeyMod.CtrlCmd | KeyCode.KeyW] },\n\t\thandler: (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\t\tconst commandsContext = getCommandsContext(resourceOrContext, context);\n\n\t\t\tlet group: IEditorGroup | undefined;\n\t\t\tif (commandsContext && typeof commandsContext.groupId === 'number') {\n\t\t\t\tgroup = editorGroupService.getGroup(commandsContext.groupId);\n\t\t\t} else {\n\t\t\t\tgroup = editorGroupService.activeGroup;\n\t\t\t}\n\n\t\t\tif (group) {\n\t\t\t\teditorGroupService.removeGroup(group);\n\t\t\t}\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_SAVED_EDITORS_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyU),\n\t\thandler: (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\treturn Promise.all(getEditorsContext(accessor, resourceOrContext, context).groups.map(async group => {\n\t\t\t\tif (group) {\n\t\t\t\t\tawait group.closeEditors({ savedOnly: true, excludeSticky: true }, { preserveFocus: context?.preserveFocus });\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_OTHER_EDITORS_IN_GROUP_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyT },\n\t\thandler: (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst { editors, groups } = getEditorsContext(accessor, resourceOrContext, context);\n\t\t\treturn Promise.all(groups.map(async group => {\n\t\t\t\tif (group) {\n\t\t\t\t\tconst editorsToKeep = editors\n\t\t\t\t\t\t.filter(editor => editor.groupId === group.id)\n\t\t\t\t\t\t.map(editor => typeof editor.editorIndex === 'number' ? group.getEditorByIndex(editor.editorIndex) : group.activeEditor);\n\n\t\t\t\t\tconst editorsToClose = group.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true }).filter(editor => !editorsToKeep.includes(editor));\n\n\t\t\t\t\tfor (const editorToKeep of editorsToKeep) {\n\t\t\t\t\t\tif (editorToKeep) {\n\t\t\t\t\t\t\tgroup.pinEditor(editorToKeep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tawait group.closeEditors(editorsToClose, { preserveFocus: context?.preserveFocus });\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: CLOSE_EDITORS_TO_THE_RIGHT_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: async (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\t\tif (group && editor) {\n\t\t\t\tif (group.activeEditor) {\n\t\t\t\t\tgroup.pinEditor(group.activeEditor);\n\t\t\t\t}\n\n\t\t\t\tawait group.closeEditors({ direction: CloseDirection.RIGHT, except: editor, excludeSticky: true }, { preserveFocus: context?.preserveFocus });\n\t\t\t}\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: REOPEN_WITH_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: async (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorResolverService = accessor.get(IEditorResolverService);\n\t\t\tconst telemetryService = accessor.get(ITelemetryService);\n\n\t\t\tconst { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\n\t\t\tif (!editor) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst untypedEditor = editor.toUntyped();\n\n\t\t\t// Resolver can only resolve untyped editors\n\t\t\tif (!untypedEditor) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tuntypedEditor.options = { ...editorService.activeEditorPane?.options, override: EditorResolution.PICK };\n\t\t\tconst resolvedEditor = await editorResolverService.resolveEditor(untypedEditor, group);\n\t\t\tif (!isEditorInputWithOptionsAndGroup(resolvedEditor)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Replace editor with resolved one\n\t\t\tawait resolvedEditor.group.replaceEditors([\n\t\t\t\t{\n\t\t\t\t\teditor: editor,\n\t\t\t\t\treplacement: resolvedEditor.editor,\n\t\t\t\t\tforceReplaceDirty: editor.resource?.scheme === Schemas.untitled,\n\t\t\t\t\toptions: resolvedEditor.options\n\t\t\t\t}\n\t\t\t]);\n\n\t\t\ttype WorkbenchEditorReopenClassification = {\n\t\t\t\towner: 'rebornix';\n\t\t\t\tcomment: 'Identify how a document is reopened';\n\t\t\t\tscheme: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'File system provider scheme for the resource' };\n\t\t\t\text: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'File extension for the resource' };\n\t\t\t\tfrom: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The editor view type the resource is switched from' };\n\t\t\t\tto: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The editor view type the resource is switched to' };\n\t\t\t};\n\n\t\t\ttype WorkbenchEditorReopenEvent = {\n\t\t\t\tscheme: string;\n\t\t\t\text: string;\n\t\t\t\tfrom: string;\n\t\t\t\tto: string;\n\t\t\t};\n\n\t\t\ttelemetryService.publicLog2<WorkbenchEditorReopenEvent, WorkbenchEditorReopenClassification>('workbenchEditorReopen', {\n\t\t\t\tscheme: editor.resource?.scheme ?? '',\n\t\t\t\text: editor.resource ? extname(editor.resource) : '',\n\t\t\t\tfrom: editor.editorId ?? '',\n\t\t\t\tto: resolvedEditor.editor.editorId ?? ''\n\t\t\t});\n\n\t\t\t// Make sure it becomes active too\n\t\t\tawait resolvedEditor.group.openEditor(resolvedEditor.editor);\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand(CLOSE_EDITORS_AND_GROUP_COMMAND_ID, async (accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst { group } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\tif (group) {\n\t\t\tawait group.closeAllEditors();\n\n\t\t\tif (group.count === 0 && editorGroupService.getGroup(group.id) /* could be gone by now */) {\n\t\t\t\teditorGroupService.removeGroup(group); // only remove group if it is now empty\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction registerFocusEditorGroupWihoutWrapCommands(): void {\n\n\tconst commands = [\n\t\t{\n\t\t\tid: FOCUS_LEFT_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.LEFT\n\t\t},\n\t\t{\n\t\t\tid: FOCUS_RIGHT_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.RIGHT\n\t\t},\n\t\t{\n\t\t\tid: FOCUS_ABOVE_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.UP,\n\t\t},\n\t\t{\n\t\t\tid: FOCUS_BELOW_GROUP_WITHOUT_WRAP_COMMAND_ID,\n\t\t\tdirection: GroupDirection.DOWN\n\t\t}\n\t];\n\n\tfor (const command of commands) {\n\t\tCommandsRegistry.registerCommand(command.id, async (accessor: ServicesAccessor) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst group = editorGroupService.findGroup({ direction: command.direction }, editorGroupService.activeGroup, false);\n\t\t\tgroup?.focus();\n\t\t});\n\t}\n}\n\nfunction registerSplitEditorInGroupCommands(): void {\n\n\tasync function splitEditorInGroup(accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\n\t\tconst { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait group.replaceEditors([{\n\t\t\teditor,\n\t\t\treplacement: instantiationService.createInstance(SideBySideEditorInput, undefined, undefined, editor, editor),\n\t\t\tforceReplaceDirty: true\n\t\t}]);\n\t}\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: SPLIT_EDITOR_IN_GROUP,\n\t\t\t\ttitle: { value: localize('splitEditorInGroup', \"Split Editor in Group\"), original: 'Split Editor in Group' },\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ActiveEditorCanSplitInGroupContext,\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: ActiveEditorCanSplitInGroupContext,\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backslash)\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): Promise<void> {\n\t\t\treturn splitEditorInGroup(accessor, resourceOrContext, context);\n\t\t}\n\t});\n\n\tasync function joinEditorInGroup(accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): Promise<void> {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\tif (!(editor instanceof SideBySideEditorInput)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet options: IEditorOptions | undefined = undefined;\n\t\tconst activeEditorPane = group.activeEditorPane;\n\t\tif (activeEditorPane instanceof SideBySideEditor && group.activeEditor === editor) {\n\t\t\tfor (const pane of [activeEditorPane.getPrimaryEditorPane(), activeEditorPane.getSecondaryEditorPane()]) {\n\t\t\t\tif (pane?.hasFocus()) {\n\t\t\t\t\toptions = { viewState: pane.getViewState() };\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tawait group.replaceEditors([{\n\t\t\teditor,\n\t\t\treplacement: editor.primary,\n\t\t\toptions\n\t\t}]);\n\t}\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: JOIN_EDITOR_IN_GROUP,\n\t\t\t\ttitle: { value: localize('joinEditorInGroup', \"Join Editor in Group\"), original: 'Join Editor in Group' },\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: SideBySideEditorActiveContext,\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\twhen: SideBySideEditorActiveContext,\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backslash)\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\trun(accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): Promise<void> {\n\t\t\treturn joinEditorInGroup(accessor, resourceOrContext, context);\n\t\t}\n\t});\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: TOGGLE_SPLIT_EDITOR_IN_GROUP,\n\t\t\t\ttitle: { value: localize('toggleJoinEditorInGroup', \"Toggle Split Editor in Group\"), original: 'Toggle Split Editor in Group' },\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ContextKeyExpr.or(ActiveEditorCanSplitInGroupContext, SideBySideEditorActiveContext),\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): Promise<void> {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst { editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\t\tif (editor instanceof SideBySideEditorInput) {\n\t\t\t\tawait joinEditorInGroup(accessor, resourceOrContext, context);\n\t\t\t} else if (editor) {\n\t\t\t\tawait splitEditorInGroup(accessor, resourceOrContext, context);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: TOGGLE_SPLIT_EDITOR_IN_GROUP_LAYOUT,\n\t\t\t\ttitle: { value: localize('toggleSplitEditorInGroupLayout', \"Toggle Layout of Split Editor in Group\"), original: 'Toggle Layout of Split Editor in Group' },\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: SideBySideEditorActiveContext,\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst currentSetting = configurationService.getValue<unknown>(SideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING);\n\n\t\t\tlet newSetting: 'vertical' | 'horizontal';\n\t\t\tif (currentSetting !== 'horizontal') {\n\t\t\t\tnewSetting = 'horizontal';\n\t\t\t} else {\n\t\t\t\tnewSetting = 'vertical';\n\t\t\t}\n\n\t\t\treturn configurationService.updateValue(SideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING, newSetting);\n\t\t}\n\t});\n}\n\nfunction registerFocusSideEditorsCommands(): void {\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: FOCUS_FIRST_SIDE_EDITOR,\n\t\t\t\ttitle: { value: localize('focusLeftSideEditor', \"Focus First Side in Active Editor\"), original: 'Focus First Side in Active Editor' },\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ContextKeyExpr.or(SideBySideEditorActiveContext, TextCompareEditorActiveContext),\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\t\tif (activeEditorPane instanceof SideBySideEditor) {\n\t\t\t\tactiveEditorPane.getSecondaryEditorPane()?.focus();\n\t\t\t} else if (activeEditorPane instanceof TextDiffEditor) {\n\t\t\t\tawait commandService.executeCommand(DIFF_FOCUS_SECONDARY_SIDE);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: FOCUS_SECOND_SIDE_EDITOR,\n\t\t\t\ttitle: { value: localize('focusRightSideEditor', \"Focus Second Side in Active Editor\"), original: 'Focus Second Side in Active Editor' },\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ContextKeyExpr.or(SideBySideEditorActiveContext, TextCompareEditorActiveContext),\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\t\tif (activeEditorPane instanceof SideBySideEditor) {\n\t\t\t\tactiveEditorPane.getPrimaryEditorPane()?.focus();\n\t\t\t} else if (activeEditorPane instanceof TextDiffEditor) {\n\t\t\t\tawait commandService.executeCommand(DIFF_FOCUS_PRIMARY_SIDE);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: FOCUS_OTHER_SIDE_EDITOR,\n\t\t\t\ttitle: { value: localize('focusOtherSideEditor', \"Focus Other Side in Active Editor\"), original: 'Focus Other Side in Active Editor' },\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ContextKeyExpr.or(SideBySideEditorActiveContext, TextCompareEditorActiveContext),\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\t\tif (activeEditorPane instanceof SideBySideEditor) {\n\t\t\t\tif (activeEditorPane.getPrimaryEditorPane()?.hasFocus()) {\n\t\t\t\t\tactiveEditorPane.getSecondaryEditorPane()?.focus();\n\t\t\t\t} else {\n\t\t\t\t\tactiveEditorPane.getPrimaryEditorPane()?.focus();\n\t\t\t\t}\n\t\t\t} else if (activeEditorPane instanceof TextDiffEditor) {\n\t\t\t\tawait commandService.executeCommand(DIFF_FOCUS_OTHER_SIDE);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction registerOtherEditorCommands(): void {\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: KEEP_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.Enter),\n\t\thandler: async (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\t\tif (group && editor) {\n\t\t\t\treturn group.pinEditor(editor);\n\t\t\t}\n\t\t}\n\t});\n\n\tCommandsRegistry.registerCommand({\n\t\tid: TOGGLE_KEEP_EDITORS_COMMAND_ID,\n\t\thandler: accessor => {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\t\tconst currentSetting = configurationService.getValue('workbench.editor.enablePreview');\n\t\t\tconst newSetting = currentSetting === true ? false : true;\n\t\t\tconfigurationService.updateValue('workbench.editor.enablePreview', newSetting);\n\t\t}\n\t});\n\n\tfunction setEditorGroupLock(accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext, locked?: boolean): void {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst { group } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\tgroup?.lock(locked ?? !group.isLocked);\n\t}\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: TOGGLE_LOCK_GROUP_COMMAND_ID,\n\t\t\t\ttitle: { value: localize('toggleEditorGroupLock', \"Toggle Editor Group Lock\"), original: 'Toggle Editor Group Lock' },\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: MultipleEditorGroupsContext,\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): Promise<void> {\n\t\t\tsetEditorGroupLock(accessor, resourceOrContext, context);\n\t\t}\n\t});\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: LOCK_GROUP_COMMAND_ID,\n\t\t\t\ttitle: { value: localize('lockEditorGroup', \"Lock Editor Group\"), original: 'Lock Editor Group' },\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ContextKeyExpr.and(MultipleEditorGroupsContext, ActiveEditorGroupLockedContext.toNegated()),\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): Promise<void> {\n\t\t\tsetEditorGroupLock(accessor, resourceOrContext, context, true);\n\t\t}\n\t});\n\n\tregisterAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: UNLOCK_GROUP_COMMAND_ID,\n\t\t\t\ttitle: { value: localize('unlockEditorGroup', \"Unlock Editor Group\"), original: 'Unlock Editor Group' },\n\t\t\t\tprecondition: ContextKeyExpr.and(MultipleEditorGroupsContext, ActiveEditorGroupLockedContext),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): Promise<void> {\n\t\t\tsetEditorGroupLock(accessor, resourceOrContext, context, false);\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: PIN_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ActiveEditorStickyContext.toNegated(),\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.Shift | KeyCode.Enter),\n\t\thandler: async (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\t\tif (group && editor) {\n\t\t\t\treturn group.stickEditor(editor);\n\t\t\t}\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: DIFF_OPEN_SIDE,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: EditorContextKeys.inDiffEditor,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.Shift | KeyCode.KeyO),\n\t\thandler: async accessor => {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst activeEditor = editorService.activeEditor;\n\t\t\tconst activeTextEditorControl = editorService.activeTextEditorControl;\n\t\t\tif (!isDiffEditor(activeTextEditorControl) || !(activeEditor instanceof DiffEditorInput)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet editor: EditorInput | undefined;\n\t\t\tconst originalEditor = activeTextEditorControl.getOriginalEditor();\n\t\t\tif (originalEditor.hasTextFocus()) {\n\t\t\t\teditor = activeEditor.original;\n\t\t\t} else {\n\t\t\t\teditor = activeEditor.modified;\n\t\t\t}\n\n\t\t\treturn editorGroupService.activeGroup.openEditor(editor);\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: UNPIN_EDITOR_COMMAND_ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ActiveEditorStickyContext,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.Shift | KeyCode.Enter),\n\t\thandler: async (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\t\tconst { group, editor } = resolveCommandsContext(editorGroupService, getCommandsContext(resourceOrContext, context));\n\t\t\tif (group && editor) {\n\t\t\t\treturn group.unstickEditor(editor);\n\t\t\t}\n\t\t}\n\t});\n\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: SHOW_EDITORS_IN_GROUP,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: undefined,\n\t\tprimary: undefined,\n\t\thandler: (accessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext) => {\n\t\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\t\tconst commandsContext = getCommandsContext(resourceOrContext, context);\n\t\t\tif (commandsContext && typeof commandsContext.groupId === 'number') {\n\t\t\t\tconst group = editorGroupService.getGroup(commandsContext.groupId);\n\t\t\t\tif (group) {\n\t\t\t\t\teditorGroupService.activateGroup(group); // we need the group to be active\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn quickInputService.quickAccess.show(ActiveGroupEditorsByMostRecentlyUsedQuickAccess.PREFIX);\n\t\t}\n\t});\n}\n\nfunction getEditorsContext(accessor: ServicesAccessor, resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): { editors: IEditorCommandsContext[]; groups: Array<IEditorGroup | undefined> } {\n\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\tconst listService = accessor.get(IListService);\n\n\tconst editorContext = getMultiSelectedEditorContexts(getCommandsContext(resourceOrContext, context), listService, editorGroupService);\n\n\tconst activeGroup = editorGroupService.activeGroup;\n\tif (editorContext.length === 0 && activeGroup.activeEditor) {\n\t\t// add the active editor as fallback\n\t\teditorContext.push({\n\t\t\tgroupId: activeGroup.id,\n\t\t\teditorIndex: activeGroup.getIndexOfEditor(activeGroup.activeEditor)\n\t\t});\n\t}\n\n\treturn {\n\t\teditors: editorContext,\n\t\tgroups: distinct(editorContext.map(context => context.groupId)).map(groupId => editorGroupService.getGroup(groupId))\n\t};\n}\n\nfunction getCommandsContext(resourceOrContext?: URI | IEditorCommandsContext, context?: IEditorCommandsContext): IEditorCommandsContext | undefined {\n\tif (URI.isUri(resourceOrContext)) {\n\t\treturn context;\n\t}\n\n\tif (resourceOrContext && typeof resourceOrContext.groupId === 'number') {\n\t\treturn resourceOrContext;\n\t}\n\n\tif (context && typeof context.groupId === 'number') {\n\t\treturn context;\n\t}\n\n\treturn undefined;\n}\n\nfunction resolveCommandsContext(editorGroupService: IEditorGroupsService, context?: IEditorCommandsContext): { group: IEditorGroup; editor?: EditorInput } {\n\n\t// Resolve from context\n\tlet group = context && typeof context.groupId === 'number' ? editorGroupService.getGroup(context.groupId) : undefined;\n\tlet editor = group && context && typeof context.editorIndex === 'number' ? group.getEditorByIndex(context.editorIndex) ?? undefined : undefined;\n\n\t// Fallback to active group as needed\n\tif (!group) {\n\t\tgroup = editorGroupService.activeGroup;\n\t}\n\n\t// Fallback to active editor as needed\n\tif (!editor) {\n\t\teditor = group.activeEditor ?? undefined;\n\t}\n\n\treturn { group, editor };\n}\n\nexport function getMultiSelectedEditorContexts(editorContext: IEditorCommandsContext | undefined, listService: IListService, editorGroupService: IEditorGroupsService): IEditorCommandsContext[] {\n\n\t// First check for a focused list to return the selected items from\n\tconst list = listService.lastFocusedList;\n\tif (list instanceof List && list.getHTMLElement() === document.activeElement) {\n\t\tconst elementToContext = (element: IEditorIdentifier | IEditorGroup) => {\n\t\t\tif (isEditorGroup(element)) {\n\t\t\t\treturn { groupId: element.id, editorIndex: undefined };\n\t\t\t}\n\n\t\t\tconst group = editorGroupService.getGroup(element.groupId);\n\n\t\t\treturn { groupId: element.groupId, editorIndex: group ? group.getIndexOfEditor(element.editor) : -1 };\n\t\t};\n\n\t\tconst onlyEditorGroupAndEditor = (e: IEditorIdentifier | IEditorGroup) => isEditorGroup(e) || isEditorIdentifier(e);\n\n\t\tconst focusedElements: Array<IEditorIdentifier | IEditorGroup> = list.getFocusedElements().filter(onlyEditorGroupAndEditor);\n\t\tconst focus = editorContext ? editorContext : focusedElements.length ? focusedElements.map(elementToContext)[0] : undefined; // need to take into account when editor context is { group: group }\n\n\t\tif (focus) {\n\t\t\tconst selection: Array<IEditorIdentifier | IEditorGroup> = list.getSelectedElements().filter(onlyEditorGroupAndEditor);\n\n\t\t\tif (selection.length > 0) {\n\t\t\t\treturn selection.map(elementToContext);\n\t\t\t}\n\n\t\t\treturn [focus];\n\t\t}\n\t}\n\n\t// Otherwise go with passed in context\n\treturn !!editorContext ? [editorContext] : [];\n}\n\nexport function setup(): void {\n\tregisterActiveEditorMoveCopyCommand();\n\tregisterEditorGroupsLayoutCommands();\n\tregisterDiffEditorCommands();\n\tregisterOpenEditorAPICommands();\n\tregisterOpenEditorAtIndexCommands();\n\tregisterCloseEditorCommands();\n\tregisterOtherEditorCommands();\n\tregisterSplitEditorInGroupCommands();\n\tregisterFocusSideEditorsCommands();\n\tregisterFocusEditorGroupAtIndexCommands();\n\tregisterSplitEditorCommands();\n\tregisterFocusEditorGroupWihoutWrapCommands();\n}\n"]}