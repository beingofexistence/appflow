{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/browser/parts/editor/singleEditorTabsControl.ts"],"names":[],"mappings":"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","file":"singleEditorTabsControl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/singleeditortabscontrol';\nimport { EditorResourceAccessor, Verbosity, IEditorPartOptions, SideBySideEditor, preventEditorClose, EditorCloseMethod } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { EditorTabsControl, IToolbarActions } from 'vs/workbench/browser/parts/editor/editorTabsControl';\nimport { ResourceLabel, IResourceLabel } from 'vs/workbench/browser/labels';\nimport { TAB_ACTIVE_FOREGROUND, TAB_UNFOCUSED_ACTIVE_FOREGROUND } from 'vs/workbench/common/theme';\nimport { EventType as TouchEventType, GestureEvent, Gesture } from 'vs/base/browser/touch';\nimport { addDisposableListener, EventType, EventHelper, Dimension, isAncestor } from 'vs/base/browser/dom';\nimport { CLOSE_EDITOR_COMMAND_ID, UNLOCK_GROUP_COMMAND_ID } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { Color } from 'vs/base/common/color';\nimport { assertIsDefined, assertAllDefined } from 'vs/base/common/types';\nimport { equals } from 'vs/base/common/objects';\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { defaultBreadcrumbsWidgetStyles } from 'vs/platform/theme/browser/defaultStyles';\nimport { IEditorTitleControlDimensions } from 'vs/workbench/browser/parts/editor/editorTitleControl';\nimport { BreadcrumbsControlFactory } from 'vs/workbench/browser/parts/editor/breadcrumbsControl';\n\ninterface IRenderedEditorLabel {\n\treadonly editor?: EditorInput;\n\treadonly pinned: boolean;\n}\n\nexport class SingleEditorTabsControl extends EditorTabsControl {\n\n\tprivate titleContainer: HTMLElement | undefined;\n\tprivate editorLabel: IResourceLabel | undefined;\n\tprivate activeLabel: IRenderedEditorLabel = Object.create(null);\n\n\tprivate breadcrumbsControlFactory: BreadcrumbsControlFactory | undefined;\n\tprivate get breadcrumbsControl() { return this.breadcrumbsControlFactory?.control; }\n\n\tprotected override create(parent: HTMLElement): void {\n\t\tsuper.create(parent);\n\n\t\tconst titleContainer = this.titleContainer = parent;\n\t\ttitleContainer.draggable = true;\n\n\t\t// Container listeners\n\t\tthis.registerContainerListeners(titleContainer);\n\n\t\t// Gesture Support\n\t\tthis._register(Gesture.addTarget(titleContainer));\n\n\t\tconst labelContainer = document.createElement('div');\n\t\tlabelContainer.classList.add('label-container');\n\t\ttitleContainer.appendChild(labelContainer);\n\n\t\t// Editor Label\n\t\tthis.editorLabel = this._register(this.instantiationService.createInstance(ResourceLabel, labelContainer, undefined)).element;\n\t\tthis._register(addDisposableListener(this.editorLabel.element, EventType.CLICK, e => this.onTitleLabelClick(e)));\n\n\t\t// Breadcrumbs\n\t\tthis.breadcrumbsControlFactory = this._register(this.instantiationService.createInstance(BreadcrumbsControlFactory, labelContainer, this.group, {\n\t\t\tshowFileIcons: false,\n\t\t\tshowSymbolIcons: true,\n\t\t\tshowDecorationColors: false,\n\t\t\twidgetStyles: { ...defaultBreadcrumbsWidgetStyles, breadcrumbsBackground: Color.transparent.toString() },\n\t\t\tshowPlaceholder: false\n\t\t}));\n\t\tthis._register(this.breadcrumbsControlFactory.onDidEnablementChange(() => this.handleBreadcrumbsEnablementChange()));\n\t\ttitleContainer.classList.toggle('breadcrumbs', Boolean(this.breadcrumbsControl));\n\t\tthis._register(toDisposable(() => titleContainer.classList.remove('breadcrumbs'))); // important to remove because the container is a shared dom node\n\n\t\t// Right Actions Container\n\t\tconst actionsContainer = document.createElement('div');\n\t\tactionsContainer.classList.add('title-actions');\n\t\ttitleContainer.appendChild(actionsContainer);\n\n\t\t// Editor actions toolbar\n\t\tthis.createEditorActionsToolBar(actionsContainer);\n\t}\n\n\tprivate registerContainerListeners(titleContainer: HTMLElement): void {\n\n\t\t// Group dragging\n\t\tthis.enableGroupDragging(titleContainer);\n\n\t\t// Pin on double click\n\t\tthis._register(addDisposableListener(titleContainer, EventType.DBLCLICK, e => this.onTitleDoubleClick(e)));\n\n\t\t// Detect mouse click\n\t\tthis._register(addDisposableListener(titleContainer, EventType.AUXCLICK, e => this.onTitleAuxClick(e)));\n\n\t\t// Detect touch\n\t\tthis._register(addDisposableListener(titleContainer, TouchEventType.Tap, (e: GestureEvent) => this.onTitleTap(e)));\n\n\t\t// Context Menu\n\t\tfor (const event of [EventType.CONTEXT_MENU, TouchEventType.Contextmenu]) {\n\t\t\tthis._register(addDisposableListener(titleContainer, event, e => {\n\t\t\t\tif (this.group.activeEditor) {\n\t\t\t\t\tthis.onContextMenu(this.group.activeEditor, e, titleContainer);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate onTitleLabelClick(e: MouseEvent): void {\n\t\tEventHelper.stop(e, false);\n\n\t\t// delayed to let the onTitleClick() come first which can cause a focus change which can close quick access\n\t\tsetTimeout(() => this.quickInputService.quickAccess.show());\n\t}\n\n\tprivate onTitleDoubleClick(e: MouseEvent): void {\n\t\tEventHelper.stop(e);\n\n\t\tthis.group.pinEditor();\n\t}\n\n\tprivate onTitleAuxClick(e: MouseEvent): void {\n\t\tif (e.button === 1 /* Middle Button */ && this.group.activeEditor) {\n\t\t\tEventHelper.stop(e, true /* for https://github.com/microsoft/vscode/issues/56715 */);\n\n\t\t\tif (!preventEditorClose(this.group, this.group.activeEditor, EditorCloseMethod.MOUSE, this.accessor.partOptions)) {\n\t\t\t\tthis.group.closeEditor(this.group.activeEditor);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTitleTap(e: GestureEvent): void {\n\n\t\t// We only want to open the quick access picker when\n\t\t// the tap occurred over the editor label, so we need\n\t\t// to check on the target\n\t\t// (https://github.com/microsoft/vscode/issues/107543)\n\t\tconst target = e.initialTarget;\n\t\tif (!(target instanceof HTMLElement) || !this.editorLabel || !isAncestor(target, this.editorLabel.element)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO@rebornix gesture tap should open the quick access\n\t\t// editorGroupView will focus on the editor again when there\n\t\t// are mouse/pointer/touch down events we need to wait a bit as\n\t\t// `GesureEvent.Tap` is generated from `touchstart` and then\n\t\t// `touchend` events, which are not an atom event.\n\t\tsetTimeout(() => this.quickInputService.quickAccess.show(), 50);\n\t}\n\n\topenEditor(editor: EditorInput): boolean {\n\t\treturn this.doHandleOpenEditor();\n\t}\n\n\topenEditors(editors: EditorInput[]): boolean {\n\t\treturn this.doHandleOpenEditor();\n\t}\n\n\tprivate doHandleOpenEditor(): boolean {\n\t\tconst activeEditorChanged = this.ifActiveEditorChanged(() => this.redraw());\n\t\tif (!activeEditorChanged) {\n\t\t\tthis.ifActiveEditorPropertiesChanged(() => this.redraw());\n\t\t}\n\n\t\treturn activeEditorChanged;\n\t}\n\n\tbeforeCloseEditor(editor: EditorInput): void {\n\t\t// Nothing to do before closing an editor\n\t}\n\n\tcloseEditor(editor: EditorInput): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tcloseEditors(editors: EditorInput[]): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tmoveEditor(editor: EditorInput, fromIndex: number, targetIndex: number): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tpinEditor(editor: EditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => this.redraw());\n\t}\n\n\tstickEditor(editor: EditorInput): void {\n\t\t// Sticky editors are not presented any different with tabs disabled\n\t}\n\n\tunstickEditor(editor: EditorInput): void {\n\t\t// Sticky editors are not presented any different with tabs disabled\n\t}\n\n\tsetActive(isActive: boolean): void {\n\t\tthis.redraw();\n\t}\n\n\tupdateEditorLabel(editor: EditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => this.redraw());\n\t}\n\n\tupdateEditorDirty(editor: EditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => {\n\t\t\tconst titleContainer = assertIsDefined(this.titleContainer);\n\n\t\t\t// Signal dirty (unless saving)\n\t\t\tif (editor.isDirty() && !editor.isSaving()) {\n\t\t\t\ttitleContainer.classList.add('dirty');\n\t\t\t}\n\n\t\t\t// Otherwise, clear dirty\n\t\t\telse {\n\t\t\t\ttitleContainer.classList.remove('dirty');\n\t\t\t}\n\t\t});\n\t}\n\n\toverride updateOptions(oldOptions: IEditorPartOptions, newOptions: IEditorPartOptions): void {\n\t\tsuper.updateOptions(oldOptions, newOptions);\n\n\t\tif (oldOptions.labelFormat !== newOptions.labelFormat || !equals(oldOptions.decorations, newOptions.decorations)) {\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\toverride updateStyles(): void {\n\t\tthis.redraw();\n\t}\n\n\tprotected handleBreadcrumbsEnablementChange(): void {\n\t\tconst titleContainer = assertIsDefined(this.titleContainer);\n\t\ttitleContainer.classList.toggle('breadcrumbs', Boolean(this.breadcrumbsControl));\n\n\t\tthis.redraw();\n\t}\n\n\tprivate ifActiveEditorChanged(fn: () => void): boolean {\n\t\tif (\n\t\t\t!this.activeLabel.editor && this.group.activeEditor || \t\t\t\t\t\t// active editor changed from null => editor\n\t\t\tthis.activeLabel.editor && !this.group.activeEditor || \t\t\t\t\t\t// active editor changed from editor => null\n\t\t\t(!this.activeLabel.editor || !this.group.isActive(this.activeLabel.editor))\t// active editor changed from editorA => editorB\n\t\t) {\n\t\t\tfn();\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate ifActiveEditorPropertiesChanged(fn: () => void): void {\n\t\tif (!this.activeLabel.editor || !this.group.activeEditor) {\n\t\t\treturn; // need an active editor to check for properties changed\n\t\t}\n\n\t\tif (this.activeLabel.pinned !== this.group.isPinned(this.group.activeEditor)) {\n\t\t\tfn(); // only run if pinned state has changed\n\t\t}\n\t}\n\n\tprivate ifEditorIsActive(editor: EditorInput, fn: () => void): void {\n\t\tif (this.group.isActive(editor)) {\n\t\t\tfn();  // only run if editor is current active\n\t\t}\n\t}\n\n\tprivate redraw(): void {\n\t\tconst editor = this.group.activeEditor ?? undefined;\n\t\tconst options = this.accessor.partOptions;\n\n\t\tconst isEditorPinned = editor ? this.group.isPinned(editor) : false;\n\t\tconst isGroupActive = this.accessor.activeGroup === this.group;\n\n\t\tthis.activeLabel = { editor, pinned: isEditorPinned };\n\n\t\t// Update Breadcrumbs\n\t\tif (this.breadcrumbsControl) {\n\t\t\tif (isGroupActive) {\n\t\t\t\tthis.breadcrumbsControl.update();\n\t\t\t\tthis.breadcrumbsControl.domNode.classList.toggle('preview', !isEditorPinned);\n\t\t\t} else {\n\t\t\t\tthis.breadcrumbsControl.hide();\n\t\t\t}\n\t\t}\n\n\t\t// Clear if there is no editor\n\t\tconst [titleContainer, editorLabel] = assertAllDefined(this.titleContainer, this.editorLabel);\n\t\tif (!editor) {\n\t\t\ttitleContainer.classList.remove('dirty');\n\t\t\teditorLabel.clear();\n\t\t\tthis.clearEditorActionsToolbar();\n\t\t}\n\n\t\t// Otherwise render it\n\t\telse {\n\n\t\t\t// Dirty state\n\t\t\tthis.updateEditorDirty(editor);\n\n\t\t\t// Editor Label\n\t\t\tconst { labelFormat } = this.accessor.partOptions;\n\t\t\tlet description: string;\n\t\t\tif (this.breadcrumbsControl && !this.breadcrumbsControl.isHidden()) {\n\t\t\t\tdescription = ''; // hide description when showing breadcrumbs\n\t\t\t} else if (labelFormat === 'default' && !isGroupActive) {\n\t\t\t\tdescription = ''; // hide description when group is not active and style is 'default'\n\t\t\t} else {\n\t\t\t\tdescription = editor.getDescription(this.getVerbosity(labelFormat)) || '';\n\t\t\t}\n\n\t\t\tlet title = editor.getTitle(Verbosity.LONG);\n\t\t\tif (description === title) {\n\t\t\t\ttitle = ''; // dont repeat what is already shown\n\t\t\t}\n\n\t\t\teditorLabel.setResource(\n\t\t\t\t{\n\t\t\t\t\tresource: EditorResourceAccessor.getOriginalUri(editor, { supportSideBySide: SideBySideEditor.BOTH }),\n\t\t\t\t\tname: editor.getName(),\n\t\t\t\t\tdescription\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle,\n\t\t\t\t\titalic: !isEditorPinned,\n\t\t\t\t\textraClasses: ['no-tabs', 'title-label'].concat(editor.getLabelExtraClasses()),\n\t\t\t\t\tfileDecorations: {\n\t\t\t\t\t\tcolors: Boolean(options.decorations?.colors),\n\t\t\t\t\t\tbadges: Boolean(options.decorations?.badges)\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (isGroupActive) {\n\t\t\t\ttitleContainer.style.color = this.getColor(TAB_ACTIVE_FOREGROUND) || '';\n\t\t\t} else {\n\t\t\t\ttitleContainer.style.color = this.getColor(TAB_UNFOCUSED_ACTIVE_FOREGROUND) || '';\n\t\t\t}\n\n\t\t\t// Update Editor Actions Toolbar\n\t\t\tthis.updateEditorActionsToolbar();\n\t\t}\n\t}\n\n\tprivate getVerbosity(style: string | undefined): Verbosity {\n\t\tswitch (style) {\n\t\t\tcase 'short': return Verbosity.SHORT;\n\t\t\tcase 'long': return Verbosity.LONG;\n\t\t\tdefault: return Verbosity.MEDIUM;\n\t\t}\n\t}\n\n\tprotected override prepareEditorActions(editorActions: IToolbarActions): IToolbarActions {\n\t\tconst isGroupActive = this.accessor.activeGroup === this.group;\n\n\t\t// Active: allow all actions\n\t\tif (isGroupActive) {\n\t\t\treturn editorActions;\n\t\t}\n\n\t\t// Inactive: only show \"Close, \"Unlock\" and secondary actions\n\t\telse {\n\t\t\treturn {\n\t\t\t\tprimary: editorActions.primary.filter(action => action.id === CLOSE_EDITOR_COMMAND_ID || action.id === UNLOCK_GROUP_COMMAND_ID),\n\t\t\t\tsecondary: editorActions.secondary\n\t\t\t};\n\t\t}\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.tabHeight;\n\t}\n\n\tlayout(dimensions: IEditorTitleControlDimensions): Dimension {\n\t\tthis.breadcrumbsControl?.layout(undefined);\n\n\t\treturn new Dimension(dimensions.container.width, this.getHeight());\n\t}\n}\n"]}