{"version":3,"sources":["vs/workbench/browser/parts/editor/editorStatus.ts"],"names":[],"mappings":"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","file":"editorStatus.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/editorstatus';\nimport { localize } from 'vs/nls';\nimport { runAtThisOrScheduleAtNextAnimationFrame } from 'vs/base/browser/dom';\nimport { format, compare, splitLines } from 'vs/base/common/strings';\nimport { extname, basename, isEqual } from 'vs/base/common/resources';\nimport { areFunctions, assertIsDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { Action } from 'vs/base/common/actions';\nimport { Language } from 'vs/base/common/platform';\nimport { UntitledTextEditorInput } from 'vs/workbench/services/untitled/common/untitledTextEditorInput';\nimport { IFileEditorInput, EditorResourceAccessor, IEditorPane, SideBySideEditor } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { Disposable, MutableDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IEditorAction } from 'vs/editor/common/editorCommon';\nimport { EndOfLineSequence } from 'vs/editor/common/model';\nimport { TrimTrailingWhitespaceAction } from 'vs/editor/contrib/linesOperations/browser/linesOperations';\nimport { IndentUsingSpaces, IndentUsingTabs, ChangeTabDisplaySize, DetectIndentation, IndentationToSpacesAction, IndentationToTabsAction } from 'vs/editor/contrib/indentation/browser/indentation';\nimport { BaseBinaryResourceEditor } from 'vs/workbench/browser/parts/editor/binaryEditor';\nimport { BinaryResourceDiffEditor } from 'vs/workbench/browser/parts/editor/binaryDiffEditor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IFileService, FILES_ASSOCIATIONS_CONFIG } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILanguageService, ILanguageSelection } from 'vs/editor/common/languages/language';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ICommandService, CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { EncodingMode, IEncodingSupport, ILanguageSupport, ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { SUPPORTED_ENCODINGS } from 'vs/workbench/services/textfile/common/encoding';\nimport { ConfigurationChangedEvent, EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { ITextResourceConfigurationService } from 'vs/editor/common/services/textResourceConfiguration';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { deepClone } from 'vs/base/common/objects';\nimport { ICodeEditor, getCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { Schemas } from 'vs/base/common/network';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { IQuickInputService, IQuickPickItem, QuickPickInput } from 'vs/platform/quickinput/common/quickInput';\nimport { getIconClassesForLanguageId } from 'vs/editor/common/services/getIconClasses';\nimport { Promises, timeout } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IStatusbarEntryAccessor, IStatusbarService, StatusbarAlignment, IStatusbarEntry } from 'vs/workbench/services/statusbar/browser/statusbar';\nimport { IMarker, IMarkerService, MarkerSeverity, IMarkerData } from 'vs/platform/markers/common/markers';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { SideBySideEditorInput } from 'vs/workbench/common/editor/sideBySideEditorInput';\nimport { AutomaticLanguageDetectionLikelyWrongClassification, AutomaticLanguageDetectionLikelyWrongId, IAutomaticLanguageDetectionLikelyWrongData, ILanguageDetectionService } from 'vs/workbench/services/languageDetection/common/languageDetectionWorkerService';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { Action2 } from 'vs/platform/actions/common/actions';\nimport { ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { KeyChord, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { TabFocus } from 'vs/editor/browser/config/tabFocus';\n\nclass SideBySideEditorEncodingSupport implements IEncodingSupport {\n\tconstructor(private primary: IEncodingSupport, private secondary: IEncodingSupport) { }\n\n\tgetEncoding(): string | undefined {\n\t\treturn this.primary.getEncoding(); // always report from modified (right hand) side\n\t}\n\n\tasync setEncoding(encoding: string, mode: EncodingMode): Promise<void> {\n\t\tawait Promises.settled([this.primary, this.secondary].map(editor => editor.setEncoding(encoding, mode)));\n\t}\n}\n\nclass SideBySideEditorLanguageSupport implements ILanguageSupport {\n\n\tconstructor(private primary: ILanguageSupport, private secondary: ILanguageSupport) { }\n\n\tsetLanguageId(languageId: string, source?: string): void {\n\t\t[this.primary, this.secondary].forEach(editor => editor.setLanguageId(languageId, source));\n\t}\n}\n\nfunction toEditorWithEncodingSupport(input: EditorInput): IEncodingSupport | null {\n\n\t// Untitled Text Editor\n\tif (input instanceof UntitledTextEditorInput) {\n\t\treturn input;\n\t}\n\n\t// Side by Side (diff) Editor\n\tif (input instanceof SideBySideEditorInput) {\n\t\tconst primaryEncodingSupport = toEditorWithEncodingSupport(input.primary);\n\t\tconst secondaryEncodingSupport = toEditorWithEncodingSupport(input.secondary);\n\n\t\tif (primaryEncodingSupport && secondaryEncodingSupport) {\n\t\t\treturn new SideBySideEditorEncodingSupport(primaryEncodingSupport, secondaryEncodingSupport);\n\t\t}\n\n\t\treturn primaryEncodingSupport;\n\t}\n\n\t// File or Resource Editor\n\tconst encodingSupport = input as IFileEditorInput;\n\tif (areFunctions(encodingSupport.setEncoding, encodingSupport.getEncoding)) {\n\t\treturn encodingSupport;\n\t}\n\n\t// Unsupported for any other editor\n\treturn null;\n}\n\nfunction toEditorWithLanguageSupport(input: EditorInput): ILanguageSupport | null {\n\n\t// Untitled Text Editor\n\tif (input instanceof UntitledTextEditorInput) {\n\t\treturn input;\n\t}\n\n\t// Side by Side (diff) Editor\n\tif (input instanceof SideBySideEditorInput) {\n\t\tconst primaryLanguageSupport = toEditorWithLanguageSupport(input.primary);\n\t\tconst secondaryLanguageSupport = toEditorWithLanguageSupport(input.secondary);\n\n\t\tif (primaryLanguageSupport && secondaryLanguageSupport) {\n\t\t\treturn new SideBySideEditorLanguageSupport(primaryLanguageSupport, secondaryLanguageSupport);\n\t\t}\n\n\t\treturn primaryLanguageSupport;\n\t}\n\n\t// File or Resource Editor\n\tconst languageSupport = input as IFileEditorInput;\n\tif (typeof languageSupport.setLanguageId === 'function') {\n\t\treturn languageSupport;\n\t}\n\n\t// Unsupported for any other editor\n\treturn null;\n}\n\ninterface IEditorSelectionStatus {\n\tselections?: Selection[];\n\tcharactersSelected?: number;\n}\n\nclass StateChange {\n\tindentation: boolean = false;\n\tselectionStatus: boolean = false;\n\tlanguageId: boolean = false;\n\tlanguageStatus: boolean = false;\n\tencoding: boolean = false;\n\tEOL: boolean = false;\n\ttabFocusMode: boolean = false;\n\tcolumnSelectionMode: boolean = false;\n\tmetadata: boolean = false;\n\n\tcombine(other: StateChange) {\n\t\tthis.indentation = this.indentation || other.indentation;\n\t\tthis.selectionStatus = this.selectionStatus || other.selectionStatus;\n\t\tthis.languageId = this.languageId || other.languageId;\n\t\tthis.languageStatus = this.languageStatus || other.languageStatus;\n\t\tthis.encoding = this.encoding || other.encoding;\n\t\tthis.EOL = this.EOL || other.EOL;\n\t\tthis.tabFocusMode = this.tabFocusMode || other.tabFocusMode;\n\t\tthis.columnSelectionMode = this.columnSelectionMode || other.columnSelectionMode;\n\t\tthis.metadata = this.metadata || other.metadata;\n\t}\n\n\thasChanges(): boolean {\n\t\treturn this.indentation\n\t\t\t|| this.selectionStatus\n\t\t\t|| this.languageId\n\t\t\t|| this.languageStatus\n\t\t\t|| this.encoding\n\t\t\t|| this.EOL\n\t\t\t|| this.tabFocusMode\n\t\t\t|| this.columnSelectionMode\n\t\t\t|| this.metadata;\n\t}\n}\n\ntype StateDelta = (\n\t{ type: 'selectionStatus'; selectionStatus: string | undefined }\n\t| { type: 'languageId'; languageId: string | undefined }\n\t| { type: 'encoding'; encoding: string | undefined }\n\t| { type: 'EOL'; EOL: string | undefined }\n\t| { type: 'indentation'; indentation: string | undefined }\n\t| { type: 'tabFocusMode'; tabFocusMode: boolean }\n\t| { type: 'columnSelectionMode'; columnSelectionMode: boolean }\n\t| { type: 'metadata'; metadata: string | undefined }\n);\n\nclass State {\n\n\tprivate _selectionStatus: string | undefined;\n\tget selectionStatus(): string | undefined { return this._selectionStatus; }\n\n\tprivate _languageId: string | undefined;\n\tget languageId(): string | undefined { return this._languageId; }\n\n\tprivate _encoding: string | undefined;\n\tget encoding(): string | undefined { return this._encoding; }\n\n\tprivate _EOL: string | undefined;\n\tget EOL(): string | undefined { return this._EOL; }\n\n\tprivate _indentation: string | undefined;\n\tget indentation(): string | undefined { return this._indentation; }\n\n\tprivate _tabFocusMode: boolean | undefined;\n\tget tabFocusMode(): boolean | undefined { return this._tabFocusMode; }\n\n\tprivate _columnSelectionMode: boolean | undefined;\n\tget columnSelectionMode(): boolean | undefined { return this._columnSelectionMode; }\n\n\tprivate _metadata: string | undefined;\n\tget metadata(): string | undefined { return this._metadata; }\n\n\tupdate(update: StateDelta): StateChange {\n\t\tconst change = new StateChange();\n\n\t\tswitch (update.type) {\n\t\t\tcase 'selectionStatus':\n\t\t\t\tif (this._selectionStatus !== update.selectionStatus) {\n\t\t\t\t\tthis._selectionStatus = update.selectionStatus;\n\t\t\t\t\tchange.selectionStatus = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'indentation':\n\t\t\t\tif (this._indentation !== update.indentation) {\n\t\t\t\t\tthis._indentation = update.indentation;\n\t\t\t\t\tchange.indentation = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'languageId':\n\t\t\t\tif (this._languageId !== update.languageId) {\n\t\t\t\t\tthis._languageId = update.languageId;\n\t\t\t\t\tchange.languageId = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'encoding':\n\t\t\t\tif (this._encoding !== update.encoding) {\n\t\t\t\t\tthis._encoding = update.encoding;\n\t\t\t\t\tchange.encoding = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'EOL':\n\t\t\t\tif (this._EOL !== update.EOL) {\n\t\t\t\t\tthis._EOL = update.EOL;\n\t\t\t\t\tchange.EOL = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'tabFocusMode':\n\t\t\t\tif (this._tabFocusMode !== update.tabFocusMode) {\n\t\t\t\t\tthis._tabFocusMode = update.tabFocusMode;\n\t\t\t\t\tchange.tabFocusMode = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'columnSelectionMode':\n\t\t\t\tif (this._columnSelectionMode !== update.columnSelectionMode) {\n\t\t\t\t\tthis._columnSelectionMode = update.columnSelectionMode;\n\t\t\t\t\tchange.columnSelectionMode = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'metadata':\n\t\t\t\tif (this._metadata !== update.metadata) {\n\t\t\t\t\tthis._metadata = update.metadata;\n\t\t\t\t\tchange.metadata = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn change;\n\t}\n}\n\nclass TabFocusMode extends Disposable {\n\n\tprivate readonly _onDidChange = this._register(new Emitter<boolean>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(@IConfigurationService private readonly configurationService: IConfigurationService) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\n\t\tconst tabFocusModeConfig = configurationService.getValue<boolean>('editor.tabFocusMode') === true ? true : false;\n\t\tTabFocus.setTabFocusMode(tabFocusModeConfig);\n\n\t\tthis._onDidChange.fire(tabFocusModeConfig);\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(TabFocus.onDidChangeTabFocus(tabFocusMode => this._onDidChange.fire(tabFocusMode)));\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('editor.tabFocusMode')) {\n\t\t\t\tconst tabFocusModeConfig = this.configurationService.getValue<boolean>('editor.tabFocusMode') === true ? true : false;\n\t\t\t\tTabFocus.setTabFocusMode(tabFocusModeConfig);\n\n\t\t\t\tthis._onDidChange.fire(tabFocusModeConfig);\n\t\t\t}\n\t\t}));\n\t}\n}\n\nconst nlsSingleSelectionRange = localize('singleSelectionRange', \"Ln {0}, Col {1} ({2} selected)\");\nconst nlsSingleSelection = localize('singleSelection', \"Ln {0}, Col {1}\");\nconst nlsMultiSelectionRange = localize('multiSelectionRange', \"{0} selections ({1} characters selected)\");\nconst nlsMultiSelection = localize('multiSelection', \"{0} selections\");\nconst nlsEOLLF = localize('endOfLineLineFeed', \"LF\");\nconst nlsEOLCRLF = localize('endOfLineCarriageReturnLineFeed', \"CRLF\");\n\n\nexport class EditorStatus extends Disposable implements IWorkbenchContribution {\n\n\tprivate readonly tabFocusModeElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly columnSelectionModeElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly indentationElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly selectionElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly encodingElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly eolElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly languageElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly metadataElement = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\tprivate readonly currentProblemStatus: ShowCurrentMarkerInStatusbarContribution = this._register(this.instantiationService.createInstance(ShowCurrentMarkerInStatusbarContribution));\n\tprivate readonly state = new State();\n\tprivate readonly activeEditorListeners = this._register(new DisposableStore());\n\tprivate readonly delayedRender = this._register(new MutableDisposable());\n\tprivate toRender: StateChange | null = null;\n\tprivate tabFocusMode: TabFocusMode;\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t\tthis.tabFocusMode = instantiationService.createInstance(TabFocusMode);\n\t\tthis.registerCommands();\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.updateStatusBar()));\n\t\tthis._register(this.textFileService.untitled.onDidChangeEncoding(model => this.onResourceEncodingChange(model.resource)));\n\t\tthis._register(this.textFileService.files.onDidChangeEncoding(model => this.onResourceEncodingChange((model.resource))));\n\t\tthis._register(Event.runAndSubscribe(this.tabFocusMode.onDidChange, (tabFocusMode) => {\n\t\t\tif (tabFocusMode !== undefined) {\n\t\t\t\tthis.onTabFocusModeChange(tabFocusMode);\n\t\t\t} else {\n\t\t\t\tthis.onTabFocusModeChange(this.configurationService.getValue('editor.tabFocusMode'));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerCommands(): void {\n\t\tCommandsRegistry.registerCommand({ id: 'changeEditorIndentation', handler: () => this.showIndentationPicker() });\n\t}\n\n\n\tprivate async showIndentationPicker(): Promise<unknown> {\n\t\tconst activeTextEditorControl = getCodeEditor(this.editorService.activeTextEditorControl);\n\t\tif (!activeTextEditorControl) {\n\t\t\treturn this.quickInputService.pick([{ label: localize('noEditor', \"No text editor active at this time\") }]);\n\t\t}\n\n\t\tif (this.editorService.activeEditor?.isReadonly()) {\n\t\t\treturn this.quickInputService.pick([{ label: localize('noWritableCodeEditor', \"The active code editor is read-only.\") }]);\n\t\t}\n\n\t\tconst picks: QuickPickInput<IQuickPickItem & { run(): void }>[] = [\n\t\t\tassertIsDefined(activeTextEditorControl.getAction(IndentUsingSpaces.ID)),\n\t\t\tassertIsDefined(activeTextEditorControl.getAction(IndentUsingTabs.ID)),\n\t\t\tassertIsDefined(activeTextEditorControl.getAction(ChangeTabDisplaySize.ID)),\n\t\t\tassertIsDefined(activeTextEditorControl.getAction(DetectIndentation.ID)),\n\t\t\tassertIsDefined(activeTextEditorControl.getAction(IndentationToSpacesAction.ID)),\n\t\t\tassertIsDefined(activeTextEditorControl.getAction(IndentationToTabsAction.ID)),\n\t\t\tassertIsDefined(activeTextEditorControl.getAction(TrimTrailingWhitespaceAction.ID))\n\t\t].map((a: IEditorAction) => {\n\t\t\treturn {\n\t\t\t\tid: a.id,\n\t\t\t\tlabel: a.label,\n\t\t\t\tdetail: (Language.isDefaultVariant() || a.label === a.alias) ? undefined : a.alias,\n\t\t\t\trun: () => {\n\t\t\t\t\tactiveTextEditorControl.focus();\n\t\t\t\t\ta.run();\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\tpicks.splice(3, 0, { type: 'separator', label: localize('indentConvert', \"convert file\") });\n\t\tpicks.unshift({ type: 'separator', label: localize('indentView', \"change view\") });\n\n\t\tconst action = await this.quickInputService.pick(picks, { placeHolder: localize('pickAction', \"Select Action\"), matchOnDetail: true });\n\t\treturn action?.run();\n\t}\n\n\tprivate updateTabFocusModeElement(visible: boolean): void {\n\t\tif (visible) {\n\t\t\tif (!this.tabFocusModeElement.value) {\n\t\t\t\tconst text = localize('tabFocusModeEnabled', \"Tab Moves Focus\");\n\t\t\t\tthis.tabFocusModeElement.value = this.statusbarService.addEntry({\n\t\t\t\t\tname: localize('status.editor.tabFocusMode', \"Accessibility Mode\"),\n\t\t\t\t\ttext,\n\t\t\t\t\tariaLabel: text,\n\t\t\t\t\ttooltip: localize('disableTabMode', \"Disable Accessibility Mode\"),\n\t\t\t\t\tcommand: 'editor.action.toggleTabFocusMode',\n\t\t\t\t\tkind: 'prominent'\n\t\t\t\t}, 'status.editor.tabFocusMode', StatusbarAlignment.RIGHT, 100.7);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.tabFocusModeElement.clear();\n\t\t}\n\t}\n\n\tprivate updateColumnSelectionModeElement(visible: boolean): void {\n\t\tif (visible) {\n\t\t\tif (!this.columnSelectionModeElement.value) {\n\t\t\t\tconst text = localize('columnSelectionModeEnabled', \"Column Selection\");\n\t\t\t\tthis.columnSelectionModeElement.value = this.statusbarService.addEntry({\n\t\t\t\t\tname: localize('status.editor.columnSelectionMode', \"Column Selection Mode\"),\n\t\t\t\t\ttext,\n\t\t\t\t\tariaLabel: text,\n\t\t\t\t\ttooltip: localize('disableColumnSelectionMode', \"Disable Column Selection Mode\"),\n\t\t\t\t\tcommand: 'editor.action.toggleColumnSelection',\n\t\t\t\t\tkind: 'prominent'\n\t\t\t\t}, 'status.editor.columnSelectionMode', StatusbarAlignment.RIGHT, 100.8);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.columnSelectionModeElement.clear();\n\t\t}\n\t}\n\n\tprivate updateSelectionElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.selectionElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\tname: localize('status.editor.selection', \"Editor Selection\"),\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize('gotoLine', \"Go to Line/Column\"),\n\t\t\tcommand: 'workbench.action.gotoLine'\n\t\t};\n\n\t\tthis.updateElement(this.selectionElement, props, 'status.editor.selection', StatusbarAlignment.RIGHT, 100.5);\n\t}\n\n\tprivate updateIndentationElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.indentationElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\tname: localize('status.editor.indentation', \"Editor Indentation\"),\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize('selectIndentation', \"Select Indentation\"),\n\t\t\tcommand: 'changeEditorIndentation'\n\t\t};\n\n\t\tthis.updateElement(this.indentationElement, props, 'status.editor.indentation', StatusbarAlignment.RIGHT, 100.4);\n\t}\n\n\tprivate updateEncodingElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.encodingElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\tname: localize('status.editor.encoding', \"Editor Encoding\"),\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize('selectEncoding', \"Select Encoding\"),\n\t\t\tcommand: 'workbench.action.editor.changeEncoding'\n\t\t};\n\n\t\tthis.updateElement(this.encodingElement, props, 'status.editor.encoding', StatusbarAlignment.RIGHT, 100.3);\n\t}\n\n\tprivate updateEOLElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.eolElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\tname: localize('status.editor.eol', \"Editor End of Line\"),\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize('selectEOL', \"Select End of Line Sequence\"),\n\t\t\tcommand: 'workbench.action.editor.changeEOL'\n\t\t};\n\n\t\tthis.updateElement(this.eolElement, props, 'status.editor.eol', StatusbarAlignment.RIGHT, 100.2);\n\t}\n\n\tprivate updateLanguageIdElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.languageElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\tname: localize('status.editor.mode', \"Editor Language\"),\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize('selectLanguageMode', \"Select Language Mode\"),\n\t\t\tcommand: 'workbench.action.editor.changeLanguageMode'\n\t\t};\n\n\t\tthis.updateElement(this.languageElement, props, 'status.editor.mode', StatusbarAlignment.RIGHT, 100.1);\n\t}\n\n\tprivate updateMetadataElement(text: string | undefined): void {\n\t\tif (!text) {\n\t\t\tthis.metadataElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst props: IStatusbarEntry = {\n\t\t\tname: localize('status.editor.info', \"File Information\"),\n\t\t\ttext,\n\t\t\tariaLabel: text,\n\t\t\ttooltip: localize('fileInfo', \"File Information\")\n\t\t};\n\n\t\tthis.updateElement(this.metadataElement, props, 'status.editor.info', StatusbarAlignment.RIGHT, 100);\n\t}\n\n\tprivate updateElement(element: MutableDisposable<IStatusbarEntryAccessor>, props: IStatusbarEntry, id: string, alignment: StatusbarAlignment, priority: number) {\n\t\tif (!element.value) {\n\t\t\telement.value = this.statusbarService.addEntry(props, id, alignment, priority);\n\t\t} else {\n\t\t\telement.value.update(props);\n\t\t}\n\t}\n\n\tprivate updateState(update: StateDelta): void {\n\t\tconst changed = this.state.update(update);\n\t\tif (!changed.hasChanges()) {\n\t\t\treturn; // Nothing really changed\n\t\t}\n\n\t\tif (!this.toRender) {\n\t\t\tthis.toRender = changed;\n\n\t\t\tthis.delayedRender.value = runAtThisOrScheduleAtNextAnimationFrame(() => {\n\t\t\t\tthis.delayedRender.clear();\n\n\t\t\t\tconst toRender = this.toRender;\n\t\t\t\tthis.toRender = null;\n\t\t\t\tif (toRender) {\n\t\t\t\t\tthis.doRenderNow(toRender);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.toRender.combine(changed);\n\t\t}\n\t}\n\n\tprivate doRenderNow(changed: StateChange): void {\n\t\tthis.updateTabFocusModeElement(!!this.state.tabFocusMode);\n\t\tthis.updateColumnSelectionModeElement(!!this.state.columnSelectionMode);\n\t\tthis.updateIndentationElement(this.state.indentation);\n\t\tthis.updateSelectionElement(this.state.selectionStatus);\n\t\tthis.updateEncodingElement(this.state.encoding);\n\t\tthis.updateEOLElement(this.state.EOL ? this.state.EOL === '\\r\\n' ? nlsEOLCRLF : nlsEOLLF : undefined);\n\t\tthis.updateLanguageIdElement(this.state.languageId);\n\t\tthis.updateMetadataElement(this.state.metadata);\n\t}\n\n\tprivate getSelectionLabel(info: IEditorSelectionStatus): string | undefined {\n\t\tif (!info || !info.selections) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (info.selections.length === 1) {\n\t\t\tif (info.charactersSelected) {\n\t\t\t\treturn format(nlsSingleSelectionRange, info.selections[0].positionLineNumber, info.selections[0].positionColumn, info.charactersSelected);\n\t\t\t}\n\n\t\t\treturn format(nlsSingleSelection, info.selections[0].positionLineNumber, info.selections[0].positionColumn);\n\t\t}\n\n\t\tif (info.charactersSelected) {\n\t\t\treturn format(nlsMultiSelectionRange, info.selections.length, info.charactersSelected);\n\t\t}\n\n\t\tif (info.selections.length > 0) {\n\t\t\treturn format(nlsMultiSelection, info.selections.length);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate updateStatusBar(): void {\n\t\tconst activeInput = this.editorService.activeEditor;\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\t\tconst activeCodeEditor = activeEditorPane ? getCodeEditor(activeEditorPane.getControl()) ?? undefined : undefined;\n\n\t\t// Update all states\n\t\tthis.onColumnSelectionModeChange(activeCodeEditor);\n\t\tthis.onSelectionChange(activeCodeEditor);\n\t\tthis.onLanguageChange(activeCodeEditor, activeInput);\n\t\tthis.onEOLChange(activeCodeEditor);\n\t\tthis.onEncodingChange(activeEditorPane, activeCodeEditor);\n\t\tthis.onIndentationChange(activeCodeEditor);\n\t\tthis.onMetadataChange(activeEditorPane);\n\t\tthis.currentProblemStatus.update(activeCodeEditor);\n\n\t\t// Dispose old active editor listeners\n\t\tthis.activeEditorListeners.clear();\n\n\t\t// Attach new listeners to active editor\n\t\tif (activeEditorPane) {\n\t\t\tthis.activeEditorListeners.add(activeEditorPane.onDidChangeControl(() => {\n\t\t\t\t// Since our editor status is mainly observing the\n\t\t\t\t// active editor control, do a full update whenever\n\t\t\t\t// the control changes.\n\t\t\t\tthis.updateStatusBar();\n\t\t\t}));\n\t\t}\n\n\t\t// Attach new listeners to active code editor\n\t\tif (activeCodeEditor) {\n\n\t\t\t// Hook Listener for Configuration changes\n\t\t\tthis.activeEditorListeners.add(activeCodeEditor.onDidChangeConfiguration((event: ConfigurationChangedEvent) => {\n\t\t\t\tif (event.hasChanged(EditorOption.columnSelection)) {\n\t\t\t\t\tthis.onColumnSelectionModeChange(activeCodeEditor);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\t// Hook Listener for Selection changes\n\t\t\tthis.activeEditorListeners.add(Event.defer(activeCodeEditor.onDidChangeCursorPosition)(() => {\n\t\t\t\tthis.onSelectionChange(activeCodeEditor);\n\t\t\t\tthis.currentProblemStatus.update(activeCodeEditor);\n\t\t\t}));\n\n\t\t\t// Hook Listener for language changes\n\t\t\tthis.activeEditorListeners.add(activeCodeEditor.onDidChangeModelLanguage(() => {\n\t\t\t\tthis.onLanguageChange(activeCodeEditor, activeInput);\n\t\t\t}));\n\n\t\t\t// Hook Listener for content changes\n\t\t\tthis.activeEditorListeners.add(Event.accumulate(activeCodeEditor.onDidChangeModelContent)(e => {\n\t\t\t\tthis.onEOLChange(activeCodeEditor);\n\t\t\t\tthis.currentProblemStatus.update(activeCodeEditor);\n\n\t\t\t\tconst selections = activeCodeEditor.getSelections();\n\t\t\t\tif (selections) {\n\t\t\t\t\tfor (const inner of e) {\n\t\t\t\t\t\tfor (const change of inner.changes) {\n\t\t\t\t\t\t\tif (selections.some(selection => Range.areIntersecting(selection, change.range))) {\n\t\t\t\t\t\t\t\tthis.onSelectionChange(activeCodeEditor);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\t// Hook Listener for content options changes\n\t\t\tthis.activeEditorListeners.add(activeCodeEditor.onDidChangeModelOptions(() => {\n\t\t\t\tthis.onIndentationChange(activeCodeEditor);\n\t\t\t}));\n\t\t}\n\n\t\t// Handle binary editors\n\t\telse if (activeEditorPane instanceof BaseBinaryResourceEditor || activeEditorPane instanceof BinaryResourceDiffEditor) {\n\t\t\tconst binaryEditors: BaseBinaryResourceEditor[] = [];\n\t\t\tif (activeEditorPane instanceof BinaryResourceDiffEditor) {\n\t\t\t\tconst primary = activeEditorPane.getPrimaryEditorPane();\n\t\t\t\tif (primary instanceof BaseBinaryResourceEditor) {\n\t\t\t\t\tbinaryEditors.push(primary);\n\t\t\t\t}\n\n\t\t\t\tconst secondary = activeEditorPane.getSecondaryEditorPane();\n\t\t\t\tif (secondary instanceof BaseBinaryResourceEditor) {\n\t\t\t\t\tbinaryEditors.push(secondary);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbinaryEditors.push(activeEditorPane);\n\t\t\t}\n\n\t\t\tfor (const editor of binaryEditors) {\n\t\t\t\tthis.activeEditorListeners.add(editor.onDidChangeMetadata(() => {\n\t\t\t\t\tthis.onMetadataChange(activeEditorPane);\n\t\t\t\t}));\n\n\t\t\t\tthis.activeEditorListeners.add(editor.onDidOpenInPlace(() => {\n\t\t\t\t\tthis.updateStatusBar();\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onLanguageChange(editorWidget: ICodeEditor | undefined, editorInput: EditorInput | undefined): void {\n\t\tconst info: StateDelta = { type: 'languageId', languageId: undefined };\n\n\t\t// We only support text based editors\n\t\tif (editorWidget && editorInput && toEditorWithLanguageSupport(editorInput)) {\n\t\t\tconst textModel = editorWidget.getModel();\n\t\t\tif (textModel) {\n\t\t\t\tconst languageId = textModel.getLanguageId();\n\t\t\t\tinfo.languageId = this.languageService.getLanguageName(languageId) ?? undefined;\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate onIndentationChange(editorWidget: ICodeEditor | undefined): void {\n\t\tconst update: StateDelta = { type: 'indentation', indentation: undefined };\n\n\t\tif (editorWidget) {\n\t\t\tconst model = editorWidget.getModel();\n\t\t\tif (model) {\n\t\t\t\tconst modelOpts = model.getOptions();\n\t\t\t\tupdate.indentation = (\n\t\t\t\t\tmodelOpts.insertSpaces\n\t\t\t\t\t\t? modelOpts.tabSize === modelOpts.indentSize\n\t\t\t\t\t\t\t? localize('spacesSize', \"Spaces: {0}\", modelOpts.indentSize)\n\t\t\t\t\t\t\t: localize('spacesAndTabsSize', \"Spaces: {0} (Tab Size: {1})\", modelOpts.indentSize, modelOpts.tabSize)\n\t\t\t\t\t\t: localize({ key: 'tabSize', comment: ['Tab corresponds to the tab key'] }, \"Tab Size: {0}\", modelOpts.tabSize)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState(update);\n\t}\n\n\tprivate onMetadataChange(editor: IEditorPane | undefined): void {\n\t\tconst update: StateDelta = { type: 'metadata', metadata: undefined };\n\n\t\tif (editor instanceof BaseBinaryResourceEditor || editor instanceof BinaryResourceDiffEditor) {\n\t\t\tupdate.metadata = editor.getMetadata();\n\t\t}\n\n\t\tthis.updateState(update);\n\t}\n\n\tprivate onColumnSelectionModeChange(editorWidget: ICodeEditor | undefined): void {\n\t\tconst info: StateDelta = { type: 'columnSelectionMode', columnSelectionMode: false };\n\n\t\tif (editorWidget?.getOption(EditorOption.columnSelection)) {\n\t\t\tinfo.columnSelectionMode = true;\n\t\t}\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate onSelectionChange(editorWidget: ICodeEditor | undefined): void {\n\t\tconst info: IEditorSelectionStatus = Object.create(null);\n\n\t\t// We only support text based editors\n\t\tif (editorWidget) {\n\n\t\t\t// Compute selection(s)\n\t\t\tinfo.selections = editorWidget.getSelections() || [];\n\n\t\t\t// Compute selection length\n\t\t\tinfo.charactersSelected = 0;\n\t\t\tconst textModel = editorWidget.getModel();\n\t\t\tif (textModel) {\n\t\t\t\tfor (const selection of info.selections) {\n\t\t\t\t\tif (typeof info.charactersSelected !== 'number') {\n\t\t\t\t\t\tinfo.charactersSelected = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tinfo.charactersSelected += textModel.getCharacterCountInRange(selection);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Compute the visible column for one selection. This will properly handle tabs and their configured widths\n\t\t\tif (info.selections.length === 1) {\n\t\t\t\tconst editorPosition = editorWidget.getPosition();\n\n\t\t\t\tconst selectionClone = new Selection(\n\t\t\t\t\tinfo.selections[0].selectionStartLineNumber,\n\t\t\t\t\tinfo.selections[0].selectionStartColumn,\n\t\t\t\t\tinfo.selections[0].positionLineNumber,\n\t\t\t\t\teditorPosition ? editorWidget.getStatusbarColumn(editorPosition) : info.selections[0].positionColumn\n\t\t\t\t);\n\n\t\t\t\tinfo.selections[0] = selectionClone;\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState({ type: 'selectionStatus', selectionStatus: this.getSelectionLabel(info) });\n\t}\n\n\tprivate onEOLChange(editorWidget: ICodeEditor | undefined): void {\n\t\tconst info: StateDelta = { type: 'EOL', EOL: undefined };\n\n\t\tif (editorWidget && !editorWidget.getOption(EditorOption.readOnly)) {\n\t\t\tconst codeEditorModel = editorWidget.getModel();\n\t\t\tif (codeEditorModel) {\n\t\t\t\tinfo.EOL = codeEditorModel.getEOL();\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate onEncodingChange(editor: IEditorPane | undefined, editorWidget: ICodeEditor | undefined): void {\n\t\tif (editor && !this.isActiveEditor(editor)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst info: StateDelta = { type: 'encoding', encoding: undefined };\n\n\t\t// We only support text based editors that have a model associated\n\t\t// This ensures we do not show the encoding picker while an editor\n\t\t// is still loading.\n\t\tif (editor && editorWidget?.hasModel()) {\n\t\t\tconst encodingSupport: IEncodingSupport | null = editor.input ? toEditorWithEncodingSupport(editor.input) : null;\n\t\t\tif (encodingSupport) {\n\t\t\t\tconst rawEncoding = encodingSupport.getEncoding();\n\t\t\t\tconst encodingInfo = typeof rawEncoding === 'string' ? SUPPORTED_ENCODINGS[rawEncoding] : undefined;\n\t\t\t\tif (encodingInfo) {\n\t\t\t\t\tinfo.encoding = encodingInfo.labelShort; // if we have a label, take it from there\n\t\t\t\t} else {\n\t\t\t\t\tinfo.encoding = rawEncoding; // otherwise use it raw\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.updateState(info);\n\t}\n\n\tprivate onResourceEncodingChange(resource: URI): void {\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tconst activeResource = EditorResourceAccessor.getCanonicalUri(activeEditorPane.input, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\t\tif (activeResource && isEqual(activeResource, resource)) {\n\t\t\t\tconst activeCodeEditor = getCodeEditor(activeEditorPane.getControl()) ?? undefined;\n\n\t\t\t\treturn this.onEncodingChange(activeEditorPane, activeCodeEditor); // only update if the encoding changed for the active resource\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTabFocusModeChange(tabFocusMode: boolean): void {\n\t\tconst info: StateDelta = { type: 'tabFocusMode', tabFocusMode };\n\t\tthis.updateState(info);\n\t}\n\n\tprivate isActiveEditor(control: IEditorPane): boolean {\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\n\t\treturn !!activeEditorPane && activeEditorPane === control;\n\t}\n}\n\nclass ShowCurrentMarkerInStatusbarContribution extends Disposable {\n\n\tprivate readonly statusBarEntryAccessor: MutableDisposable<IStatusbarEntryAccessor>;\n\tprivate editor: ICodeEditor | undefined = undefined;\n\tprivate markers: IMarker[] = [];\n\tprivate currentMarker: IMarker | null = null;\n\n\tconstructor(\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IMarkerService private readonly markerService: IMarkerService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis.statusBarEntryAccessor = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\t\tthis._register(markerService.onMarkerChanged(changedResources => this.onMarkerChanged(changedResources)));\n\t\tthis._register(Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('problems.showCurrentInStatus'))(() => this.updateStatus()));\n\t}\n\n\tupdate(editor: ICodeEditor | undefined): void {\n\t\tthis.editor = editor;\n\t\tthis.updateMarkers();\n\t\tthis.updateStatus();\n\t}\n\n\tprivate updateStatus(): void {\n\t\tconst previousMarker = this.currentMarker;\n\t\tthis.currentMarker = this.getMarker();\n\t\tif (this.hasToUpdateStatus(previousMarker, this.currentMarker)) {\n\t\t\tif (this.currentMarker) {\n\t\t\t\tconst line = splitLines(this.currentMarker.message)[0];\n\t\t\t\tconst text = `${this.getType(this.currentMarker)} ${line}`;\n\t\t\t\tif (!this.statusBarEntryAccessor.value) {\n\t\t\t\t\tthis.statusBarEntryAccessor.value = this.statusbarService.addEntry({ name: localize('currentProblem', \"Current Problem\"), text: '', ariaLabel: '' }, 'statusbar.currentProblem', StatusbarAlignment.LEFT);\n\t\t\t\t}\n\t\t\t\tthis.statusBarEntryAccessor.value.update({ name: localize('currentProblem', \"Current Problem\"), text, ariaLabel: text });\n\t\t\t} else {\n\t\t\t\tthis.statusBarEntryAccessor.clear();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate hasToUpdateStatus(previousMarker: IMarker | null, currentMarker: IMarker | null): boolean {\n\t\tif (!currentMarker) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!previousMarker) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn IMarkerData.makeKey(previousMarker) !== IMarkerData.makeKey(currentMarker);\n\t}\n\n\tprivate getType(marker: IMarker): string {\n\t\tswitch (marker.severity) {\n\t\t\tcase MarkerSeverity.Error: return '$(error)';\n\t\t\tcase MarkerSeverity.Warning: return '$(warning)';\n\t\t\tcase MarkerSeverity.Info: return '$(info)';\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tprivate getMarker(): IMarker | null {\n\t\tif (!this.configurationService.getValue<boolean>('problems.showCurrentInStatus')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.editor) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst position = this.editor.getPosition();\n\t\tif (!position) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.markers.find(marker => Range.containsPosition(marker, position)) || null;\n\t}\n\n\tprivate onMarkerChanged(changedResources: readonly URI[]): void {\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (model && !changedResources.some(r => isEqual(model.uri, r))) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateMarkers();\n\t}\n\n\tprivate updateMarkers(): void {\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (model) {\n\t\t\tthis.markers = this.markerService.read({\n\t\t\t\tresource: model.uri,\n\t\t\t\tseverities: MarkerSeverity.Error | MarkerSeverity.Warning | MarkerSeverity.Info\n\t\t\t});\n\t\t\tthis.markers.sort(compareMarker);\n\t\t} else {\n\t\t\tthis.markers = [];\n\t\t}\n\n\t\tthis.updateStatus();\n\t}\n}\n\nfunction compareMarker(a: IMarker, b: IMarker): number {\n\tlet res = compare(a.resource.toString(), b.resource.toString());\n\tif (res === 0) {\n\t\tres = MarkerSeverity.compare(a.severity, b.severity);\n\t}\n\n\tif (res === 0) {\n\t\tres = Range.compareRangesUsingStarts(a, b);\n\t}\n\n\treturn res;\n}\n\nexport class ShowLanguageExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.showLanguageExtensions';\n\n\tconstructor(\n\t\tprivate fileExtension: string,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IExtensionGalleryService galleryService: IExtensionGalleryService\n\t) {\n\t\tsuper(ShowLanguageExtensionsAction.ID, localize('showLanguageExtensions', \"Search Marketplace Extensions for '{0}'...\", fileExtension));\n\n\t\tthis.enabled = galleryService.isEnabled();\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tawait this.commandService.executeCommand('workbench.extensions.action.showExtensionsForLanguage', this.fileExtension);\n\t}\n}\n\nexport class ChangeLanguageAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.editor.changeLanguageMode';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ChangeLanguageAction.ID,\n\t\t\ttitle: { value: localize('changeMode', \"Change Language Mode\"), original: 'Change Language Mode' },\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyM)\n\t\t\t},\n\t\t\tprecondition: ContextKeyExpr.not('notebookEditorFocused')\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst languageService = accessor.get(ILanguageService);\n\t\tconst languageDetectionService = accessor.get(ILanguageDetectionService);\n\t\tconst textFileService = accessor.get(ITextFileService);\n\t\tconst preferencesService = accessor.get(IPreferencesService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst telemetryService = accessor.get(ITelemetryService);\n\n\t\tconst activeTextEditorControl = getCodeEditor(editorService.activeTextEditorControl);\n\t\tif (!activeTextEditorControl) {\n\t\t\tawait quickInputService.pick([{ label: localize('noEditor', \"No text editor active at this time\") }]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst textModel = activeTextEditorControl.getModel();\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\n\t\t// Compute language\n\t\tlet currentLanguageName: string | undefined;\n\t\tlet currentLanguageId: string | undefined;\n\t\tif (textModel) {\n\t\t\tcurrentLanguageId = textModel.getLanguageId();\n\t\t\tcurrentLanguageName = languageService.getLanguageName(currentLanguageId) ?? undefined;\n\t\t}\n\n\t\tlet hasLanguageSupport = !!resource;\n\t\tif (resource?.scheme === Schemas.untitled && !textFileService.untitled.get(resource)?.hasAssociatedFilePath) {\n\t\t\thasLanguageSupport = false; // no configuration for untitled resources (e.g. \"Untitled-1\")\n\t\t}\n\n\t\t// All languages are valid picks\n\t\tconst languages = languageService.getSortedRegisteredLanguageNames();\n\t\tconst picks: QuickPickInput[] = languages\n\t\t\t.map(({ languageName, languageId }) => {\n\t\t\t\tconst extensions = languageService.getExtensions(languageId).join(' ');\n\t\t\t\tlet description: string;\n\t\t\t\tif (currentLanguageName === languageName) {\n\t\t\t\t\tdescription = localize('languageDescription', \"({0}) - Configured Language\", languageId);\n\t\t\t\t} else {\n\t\t\t\t\tdescription = localize('languageDescriptionConfigured', \"({0})\", languageId);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tlabel: languageName,\n\t\t\t\t\tmeta: extensions,\n\t\t\t\t\ticonClasses: getIconClassesForLanguageId(languageId),\n\t\t\t\t\tdescription\n\t\t\t\t};\n\t\t\t});\n\n\t\tpicks.unshift({ type: 'separator', label: localize('languagesPicks', \"languages (identifier)\") });\n\n\t\t// Offer action to configure via settings\n\t\tlet configureLanguageAssociations: IQuickPickItem | undefined;\n\t\tlet configureLanguageSettings: IQuickPickItem | undefined;\n\t\tlet galleryAction: Action | undefined;\n\t\tif (hasLanguageSupport && resource) {\n\t\t\tconst ext = extname(resource) || basename(resource);\n\n\t\t\tgalleryAction = instantiationService.createInstance(ShowLanguageExtensionsAction, ext);\n\t\t\tif (galleryAction.enabled) {\n\t\t\t\tpicks.unshift(galleryAction);\n\t\t\t}\n\n\t\t\tconfigureLanguageSettings = { label: localize('configureModeSettings', \"Configure '{0}' language based settings...\", currentLanguageName) };\n\t\t\tpicks.unshift(configureLanguageSettings);\n\t\t\tconfigureLanguageAssociations = { label: localize('configureAssociationsExt', \"Configure File Association for '{0}'...\", ext) };\n\t\t\tpicks.unshift(configureLanguageAssociations);\n\t\t}\n\n\t\t// Offer to \"Auto Detect\"\n\t\tconst autoDetectLanguage: IQuickPickItem = {\n\t\t\tlabel: localize('autoDetect', \"Auto Detect\")\n\t\t};\n\t\tpicks.unshift(autoDetectLanguage);\n\n\t\tconst pick = await quickInputService.pick(picks, { placeHolder: localize('pickLanguage', \"Select Language Mode\"), matchOnDescription: true });\n\t\tif (!pick) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (pick === galleryAction) {\n\t\t\tgalleryAction.run();\n\t\t\treturn;\n\t\t}\n\n\t\t// User decided to permanently configure associations, return right after\n\t\tif (pick === configureLanguageAssociations) {\n\t\t\tif (resource) {\n\t\t\t\tthis.configureFileAssociation(resource, languageService, quickInputService, configurationService);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// User decided to configure settings for current language\n\t\tif (pick === configureLanguageSettings) {\n\t\t\tpreferencesService.openUserSettings({ jsonEditor: true, revealSetting: { key: `[${currentLanguageId ?? null}]`, edit: true } });\n\t\t\treturn;\n\t\t}\n\n\t\t// Change language for active editor\n\t\tconst activeEditor = editorService.activeEditor;\n\t\tif (activeEditor) {\n\t\t\tconst languageSupport = toEditorWithLanguageSupport(activeEditor);\n\t\t\tif (languageSupport) {\n\n\t\t\t\t// Find language\n\t\t\t\tlet languageSelection: ILanguageSelection | undefined;\n\t\t\t\tlet detectedLanguage: string | undefined;\n\t\t\t\tif (pick === autoDetectLanguage) {\n\t\t\t\t\tif (textModel) {\n\t\t\t\t\t\tconst resource = EditorResourceAccessor.getOriginalUri(activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\t\t\t\t\tif (resource) {\n\t\t\t\t\t\t\t// Detect languages since we are in an untitled file\n\t\t\t\t\t\t\tlet languageId: string | undefined = languageService.guessLanguageIdByFilepathOrFirstLine(resource, textModel.getLineContent(1)) ?? undefined;\n\t\t\t\t\t\t\tif (!languageId || languageId === 'unknown') {\n\t\t\t\t\t\t\t\tdetectedLanguage = await languageDetectionService.detectLanguage(resource);\n\t\t\t\t\t\t\t\tlanguageId = detectedLanguage;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (languageId) {\n\t\t\t\t\t\t\t\tlanguageSelection = languageService.createById(languageId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst languageId = languageService.getLanguageIdByLanguageName(pick.label);\n\t\t\t\t\tlanguageSelection = languageService.createById(languageId);\n\n\t\t\t\t\tif (resource) {\n\t\t\t\t\t\t// fire and forget to not slow things down\n\t\t\t\t\t\tlanguageDetectionService.detectLanguage(resource).then(detectedLanguageId => {\n\t\t\t\t\t\t\tconst chosenLanguageId = languageService.getLanguageIdByLanguageName(pick.label) || 'unknown';\n\t\t\t\t\t\t\tif (detectedLanguageId === currentLanguageId && currentLanguageId !== chosenLanguageId) {\n\t\t\t\t\t\t\t\t// If they didn't choose the detected language (which should also be the active language if automatic detection is enabled)\n\t\t\t\t\t\t\t\t// then the automatic language detection was likely wrong and the user is correcting it. In this case, we want telemetry.\n\t\t\t\t\t\t\t\t// Keep track of what model was preferred and length of input to help track down potential differences between the result quality across models and content size.\n\t\t\t\t\t\t\t\tconst modelPreference = configurationService.getValue<boolean>('workbench.editor.preferHistoryBasedLanguageDetection') ? 'history' : 'classic';\n\t\t\t\t\t\t\t\ttelemetryService.publicLog2<IAutomaticLanguageDetectionLikelyWrongData, AutomaticLanguageDetectionLikelyWrongClassification>(AutomaticLanguageDetectionLikelyWrongId, {\n\t\t\t\t\t\t\t\t\tcurrentLanguageId: currentLanguageName ?? 'unknown',\n\t\t\t\t\t\t\t\t\tnextLanguageId: pick.label,\n\t\t\t\t\t\t\t\t\tlineCount: textModel?.getLineCount() ?? -1,\n\t\t\t\t\t\t\t\t\tmodelPreference,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Change language\n\t\t\t\tif (typeof languageSelection !== 'undefined') {\n\t\t\t\t\tlanguageSupport.setLanguageId(languageSelection.languageId, ChangeLanguageAction.ID);\n\n\t\t\t\t\tif (resource?.scheme === Schemas.untitled) {\n\t\t\t\t\t\ttype SetUntitledDocumentLanguageEvent = { to: string; from: string; modelPreference: string };\n\t\t\t\t\t\ttype SetUntitledDocumentLanguageClassification = {\n\t\t\t\t\t\t\towner: 'TylerLeonhardt';\n\t\t\t\t\t\t\tcomment: 'Helps understand what the automatic language detection does for untitled files';\n\t\t\t\t\t\t\tto: {\n\t\t\t\t\t\t\t\tclassification: 'SystemMetaData';\n\t\t\t\t\t\t\t\tpurpose: 'FeatureInsight';\n\t\t\t\t\t\t\t\towner: 'TylerLeonhardt';\n\t\t\t\t\t\t\t\tcomment: 'Help understand effectiveness of automatic language detection';\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfrom: {\n\t\t\t\t\t\t\t\tclassification: 'SystemMetaData';\n\t\t\t\t\t\t\t\tpurpose: 'FeatureInsight';\n\t\t\t\t\t\t\t\towner: 'TylerLeonhardt';\n\t\t\t\t\t\t\t\tcomment: 'Help understand effectiveness of automatic language detection';\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tmodelPreference: {\n\t\t\t\t\t\t\t\tclassification: 'SystemMetaData';\n\t\t\t\t\t\t\t\tpurpose: 'FeatureInsight';\n\t\t\t\t\t\t\t\towner: 'TylerLeonhardt';\n\t\t\t\t\t\t\t\tcomment: 'Help understand effectiveness of automatic language detection';\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst modelPreference = configurationService.getValue<boolean>('workbench.editor.preferHistoryBasedLanguageDetection') ? 'history' : 'classic';\n\t\t\t\t\t\ttelemetryService.publicLog2<SetUntitledDocumentLanguageEvent, SetUntitledDocumentLanguageClassification>('setUntitledDocumentLanguage', {\n\t\t\t\t\t\t\tto: languageSelection.languageId,\n\t\t\t\t\t\t\tfrom: currentLanguageId ?? 'none',\n\t\t\t\t\t\t\tmodelPreference,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tactiveTextEditorControl.focus();\n\t\t}\n\t}\n\n\tprivate configureFileAssociation(resource: URI, languageService: ILanguageService, quickInputService: IQuickInputService, configurationService: IConfigurationService): void {\n\t\tconst extension = extname(resource);\n\t\tconst base = basename(resource);\n\t\tconst currentAssociation = languageService.guessLanguageIdByFilepathOrFirstLine(URI.file(base));\n\n\t\tconst languages = languageService.getSortedRegisteredLanguageNames();\n\t\tconst picks: IQuickPickItem[] = languages.map(({ languageName, languageId }) => {\n\t\t\treturn {\n\t\t\t\tid: languageId,\n\t\t\t\tlabel: languageName,\n\t\t\t\ticonClasses: getIconClassesForLanguageId(languageId),\n\t\t\t\tdescription: (languageId === currentAssociation) ? localize('currentAssociation', \"Current Association\") : undefined\n\t\t\t};\n\t\t});\n\n\t\tsetTimeout(async () => {\n\t\t\tconst language = await quickInputService.pick(picks, { placeHolder: localize('pickLanguageToConfigure', \"Select Language Mode to Associate with '{0}'\", extension || base) });\n\t\t\tif (language) {\n\t\t\t\tconst fileAssociationsConfig = configurationService.inspect<{}>(FILES_ASSOCIATIONS_CONFIG);\n\n\t\t\t\tlet associationKey: string;\n\t\t\t\tif (extension && base[0] !== '.') {\n\t\t\t\t\tassociationKey = `*${extension}`; // only use \"*.ext\" if the file path is in the form of <name>.<ext>\n\t\t\t\t} else {\n\t\t\t\t\tassociationKey = base; // otherwise use the basename (e.g. .gitignore, Dockerfile)\n\t\t\t\t}\n\n\t\t\t\t// If the association is already being made in the workspace, make sure to target workspace settings\n\t\t\t\tlet target = ConfigurationTarget.USER;\n\t\t\t\tif (fileAssociationsConfig.workspaceValue && !!(fileAssociationsConfig.workspaceValue as any)[associationKey]) {\n\t\t\t\t\ttarget = ConfigurationTarget.WORKSPACE;\n\t\t\t\t}\n\n\t\t\t\t// Make sure to write into the value of the target and not the merged value from USER and WORKSPACE config\n\t\t\t\tconst currentAssociations = deepClone((target === ConfigurationTarget.WORKSPACE) ? fileAssociationsConfig.workspaceValue : fileAssociationsConfig.userValue) || Object.create(null);\n\t\t\t\tcurrentAssociations[associationKey] = language.id;\n\n\t\t\t\tconfigurationService.updateValue(FILES_ASSOCIATIONS_CONFIG, currentAssociations, target);\n\t\t\t}\n\t\t}, 50 /* quick input is sensitive to being opened so soon after another */);\n\t}\n}\n\ninterface IChangeEOLEntry extends IQuickPickItem {\n\teol: EndOfLineSequence;\n}\n\nexport class ChangeEOLAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.editor.changeEOL',\n\t\t\ttitle: { value: localize('changeEndOfLine', \"Change End of Line Sequence\"), original: 'Change End of Line Sequence' },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tconst activeTextEditorControl = getCodeEditor(editorService.activeTextEditorControl);\n\t\tif (!activeTextEditorControl) {\n\t\t\tawait quickInputService.pick([{ label: localize('noEditor', \"No text editor active at this time\") }]);\n\t\t\treturn;\n\t\t}\n\n\t\tif (editorService.activeEditor?.isReadonly()) {\n\t\t\tawait quickInputService.pick([{ label: localize('noWritableCodeEditor', \"The active code editor is read-only.\") }]);\n\t\t\treturn;\n\t\t}\n\n\t\tlet textModel = activeTextEditorControl.getModel();\n\n\t\tconst EOLOptions: IChangeEOLEntry[] = [\n\t\t\t{ label: nlsEOLLF, eol: EndOfLineSequence.LF },\n\t\t\t{ label: nlsEOLCRLF, eol: EndOfLineSequence.CRLF },\n\t\t];\n\n\t\tconst selectedIndex = (textModel?.getEOL() === '\\n') ? 0 : 1;\n\n\t\tconst eol = await quickInputService.pick(EOLOptions, { placeHolder: localize('pickEndOfLine', \"Select End of Line Sequence\"), activeItem: EOLOptions[selectedIndex] });\n\t\tif (eol) {\n\t\t\tconst activeCodeEditor = getCodeEditor(editorService.activeTextEditorControl);\n\t\t\tif (activeCodeEditor?.hasModel() && !editorService.activeEditor?.isReadonly()) {\n\t\t\t\ttextModel = activeCodeEditor.getModel();\n\t\t\t\ttextModel.pushStackElement();\n\t\t\t\ttextModel.pushEOL(eol.eol);\n\t\t\t\ttextModel.pushStackElement();\n\t\t\t}\n\t\t}\n\n\t\tactiveTextEditorControl.focus();\n\t}\n}\n\nexport class ChangeEncodingAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.editor.changeEncoding',\n\t\t\ttitle: { value: localize('changeEncoding', \"Change File Encoding\"), original: 'Change File Encoding' },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst textFileService = accessor.get(ITextFileService);\n\t\tconst textResourceConfigurationService = accessor.get(ITextResourceConfigurationService);\n\n\t\tconst activeTextEditorControl = getCodeEditor(editorService.activeTextEditorControl);\n\t\tif (!activeTextEditorControl) {\n\t\t\tawait quickInputService.pick([{ label: localize('noEditor', \"No text editor active at this time\") }]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\tif (!activeEditorPane) {\n\t\t\tawait quickInputService.pick([{ label: localize('noEditor', \"No text editor active at this time\") }]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst encodingSupport: IEncodingSupport | null = toEditorWithEncodingSupport(activeEditorPane.input);\n\t\tif (!encodingSupport) {\n\t\t\tawait quickInputService.pick([{ label: localize('noFileEditor', \"No file active at this time\") }]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst saveWithEncodingPick: IQuickPickItem = { label: localize('saveWithEncoding', \"Save with Encoding\") };\n\t\tconst reopenWithEncodingPick: IQuickPickItem = { label: localize('reopenWithEncoding', \"Reopen with Encoding\") };\n\n\t\tif (!Language.isDefaultVariant()) {\n\t\t\tconst saveWithEncodingAlias = 'Save with Encoding';\n\t\t\tif (saveWithEncodingAlias !== saveWithEncodingPick.label) {\n\t\t\t\tsaveWithEncodingPick.detail = saveWithEncodingAlias;\n\t\t\t}\n\n\t\t\tconst reopenWithEncodingAlias = 'Reopen with Encoding';\n\t\t\tif (reopenWithEncodingAlias !== reopenWithEncodingPick.label) {\n\t\t\t\treopenWithEncodingPick.detail = reopenWithEncodingAlias;\n\t\t\t}\n\t\t}\n\n\t\tlet action: IQuickPickItem | undefined;\n\t\tif (encodingSupport instanceof UntitledTextEditorInput) {\n\t\t\taction = saveWithEncodingPick;\n\t\t} else if (activeEditorPane.input.isReadonly()) {\n\t\t\taction = reopenWithEncodingPick;\n\t\t} else {\n\t\t\taction = await quickInputService.pick([reopenWithEncodingPick, saveWithEncodingPick], { placeHolder: localize('pickAction', \"Select Action\"), matchOnDetail: true });\n\t\t}\n\n\t\tif (!action) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait timeout(50); // quick input is sensitive to being opened so soon after another\n\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(activeEditorPane.input, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tif (!resource || (!fileService.hasProvider(resource) && resource.scheme !== Schemas.untitled)) {\n\t\t\treturn; // encoding detection only possible for resources the file service can handle or that are untitled\n\t\t}\n\n\t\tlet guessedEncoding: string | undefined = undefined;\n\t\tif (fileService.hasProvider(resource)) {\n\t\t\tconst content = await textFileService.readStream(resource, { autoGuessEncoding: true });\n\t\t\tguessedEncoding = content.encoding;\n\t\t}\n\n\t\tconst isReopenWithEncoding = (action === reopenWithEncodingPick);\n\n\t\tconst configuredEncoding = textResourceConfigurationService.getValue(resource ?? undefined, 'files.encoding');\n\n\t\tlet directMatchIndex: number | undefined;\n\t\tlet aliasMatchIndex: number | undefined;\n\n\t\t// All encodings are valid picks\n\t\tconst picks: QuickPickInput[] = Object.keys(SUPPORTED_ENCODINGS)\n\t\t\t.sort((k1, k2) => {\n\t\t\t\tif (k1 === configuredEncoding) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (k2 === configuredEncoding) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\treturn SUPPORTED_ENCODINGS[k1].order - SUPPORTED_ENCODINGS[k2].order;\n\t\t\t})\n\t\t\t.filter(k => {\n\t\t\t\tif (k === guessedEncoding && guessedEncoding !== configuredEncoding) {\n\t\t\t\t\treturn false; // do not show encoding if it is the guessed encoding that does not match the configured\n\t\t\t\t}\n\n\t\t\t\treturn !isReopenWithEncoding || !SUPPORTED_ENCODINGS[k].encodeOnly; // hide those that can only be used for encoding if we are about to decode\n\t\t\t})\n\t\t\t.map((key, index) => {\n\t\t\t\tif (key === encodingSupport.getEncoding()) {\n\t\t\t\t\tdirectMatchIndex = index;\n\t\t\t\t} else if (SUPPORTED_ENCODINGS[key].alias === encodingSupport.getEncoding()) {\n\t\t\t\t\taliasMatchIndex = index;\n\t\t\t\t}\n\n\t\t\t\treturn { id: key, label: SUPPORTED_ENCODINGS[key].labelLong, description: key };\n\t\t\t});\n\n\t\tconst items = picks.slice() as IQuickPickItem[];\n\n\t\t// If we have a guessed encoding, show it first unless it matches the configured encoding\n\t\tif (guessedEncoding && configuredEncoding !== guessedEncoding && SUPPORTED_ENCODINGS[guessedEncoding]) {\n\t\t\tpicks.unshift({ type: 'separator' });\n\t\t\tpicks.unshift({ id: guessedEncoding, label: SUPPORTED_ENCODINGS[guessedEncoding].labelLong, description: localize('guessedEncoding', \"Guessed from content\") });\n\t\t}\n\n\t\tconst encoding = await quickInputService.pick(picks, {\n\t\t\tplaceHolder: isReopenWithEncoding ? localize('pickEncodingForReopen', \"Select File Encoding to Reopen File\") : localize('pickEncodingForSave', \"Select File Encoding to Save with\"),\n\t\t\tactiveItem: items[typeof directMatchIndex === 'number' ? directMatchIndex : typeof aliasMatchIndex === 'number' ? aliasMatchIndex : -1]\n\t\t});\n\n\t\tif (!encoding) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!editorService.activeEditorPane) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeEncodingSupport = toEditorWithEncodingSupport(editorService.activeEditorPane.input);\n\t\tif (typeof encoding.id !== 'undefined' && activeEncodingSupport) {\n\t\t\tawait activeEncodingSupport.setEncoding(encoding.id, isReopenWithEncoding ? EncodingMode.Decode : EncodingMode.Encode); // Set new encoding\n\t\t}\n\n\t\tactiveTextEditorControl.focus();\n\t}\n}\n"]}