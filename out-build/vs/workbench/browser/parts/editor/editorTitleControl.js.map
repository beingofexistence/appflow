{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/browser/parts/editor/editorTitleControl.ts"],"names":[],"mappings":"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","file":"editorTitleControl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/editortitlecontrol';\nimport { Dimension, clearNode } from 'vs/base/browser/dom';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IThemeService, Themable } from 'vs/platform/theme/common/themeService';\nimport { BreadcrumbsControl, BreadcrumbsControlFactory } from 'vs/workbench/browser/parts/editor/breadcrumbsControl';\nimport { IEditorGroupsAccessor, IEditorGroupTitleHeight, IEditorGroupView } from 'vs/workbench/browser/parts/editor/editor';\nimport { EditorTabsControl } from 'vs/workbench/browser/parts/editor/editorTabsControl';\nimport { MultiEditorTabsControl } from 'vs/workbench/browser/parts/editor/multiEditorTabsControl';\nimport { SingleEditorTabsControl } from 'vs/workbench/browser/parts/editor/singleEditorTabsControl';\nimport { IEditorPartOptions } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nexport interface IEditorTitleControlDimensions {\n\n\t/**\n\t * The size of the parent container the title control is layed out in.\n\t */\n\treadonly container: Dimension;\n\n\t/**\n\t * The maximum size the title control is allowed to consume based on\n\t * other controls that are positioned inside the container.\n\t */\n\treadonly available: Dimension;\n}\n\nexport class EditorTitleControl extends Themable {\n\n\tprivate editorTabsControl: EditorTabsControl;\n\tprivate editorTabsControlDisposable = this._register(new DisposableStore());\n\n\tprivate breadcrumbsControlFactory: BreadcrumbsControlFactory | undefined;\n\tprivate breadcrumbsControlDisposables = this._register(new DisposableStore());\n\tprivate get breadcrumbsControl() { return this.breadcrumbsControlFactory?.control; }\n\n\tconstructor(\n\t\tprivate parent: HTMLElement,\n\t\tprivate accessor: IEditorGroupsAccessor,\n\t\tprivate group: IEditorGroupView,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService\n\t) {\n\t\tsuper(themeService);\n\n\t\tthis.editorTabsControl = this.createEditorTabsControl();\n\t\tthis.breadcrumbsControlFactory = this.createBreadcrumbsControl();\n\t}\n\n\tprivate createEditorTabsControl(): EditorTabsControl {\n\t\tlet control: EditorTabsControl;\n\t\tif (this.accessor.partOptions.showTabs) {\n\t\t\tcontrol = this.instantiationService.createInstance(MultiEditorTabsControl, this.parent, this.accessor, this.group);\n\t\t} else {\n\t\t\tcontrol = this.instantiationService.createInstance(SingleEditorTabsControl, this.parent, this.accessor, this.group);\n\t\t}\n\n\t\treturn this.editorTabsControlDisposable.add(control);\n\t}\n\n\tprivate createBreadcrumbsControl(): BreadcrumbsControlFactory | undefined {\n\t\tif (!this.accessor.partOptions.showTabs) {\n\t\t\treturn undefined; // single tabs have breadcrumbs inlined\n\t\t}\n\n\t\t// Breadcrumbs container\n\t\tconst breadcrumbsContainer = document.createElement('div');\n\t\tbreadcrumbsContainer.classList.add('breadcrumbs-below-tabs');\n\t\tthis.parent.appendChild(breadcrumbsContainer);\n\n\t\tconst breadcrumbsControlFactory = this.breadcrumbsControlDisposables.add(this.instantiationService.createInstance(BreadcrumbsControlFactory, breadcrumbsContainer, this.group, {\n\t\t\tshowFileIcons: true,\n\t\t\tshowSymbolIcons: true,\n\t\t\tshowDecorationColors: false,\n\t\t\tshowPlaceholder: true\n\t\t}));\n\t\tthis.breadcrumbsControlDisposables.add(breadcrumbsControlFactory.onDidEnablementChange(() => this.handleBreadcrumbsEnablementChange()));\n\n\t\treturn breadcrumbsControlFactory;\n\t}\n\n\tprivate handleBreadcrumbsEnablementChange(): void {\n\t\tthis.group.relayout(); // relayout when breadcrumbs are enable/disabled\n\t}\n\n\topenEditor(editor: EditorInput): void {\n\t\tconst didChange = this.editorTabsControl.openEditor(editor);\n\n\t\tthis.handleOpenedEditors(didChange);\n\t}\n\n\topenEditors(editors: EditorInput[]): void {\n\t\tconst didChange = this.editorTabsControl.openEditors(editors);\n\n\t\tthis.handleOpenedEditors(didChange);\n\t}\n\n\tprivate handleOpenedEditors(didChange: boolean): void {\n\t\tif (didChange) {\n\t\t\tthis.breadcrumbsControl?.update();\n\t\t} else {\n\t\t\tthis.breadcrumbsControl?.revealLast();\n\t\t}\n\t}\n\n\tbeforeCloseEditor(editor: EditorInput): void {\n\t\treturn this.editorTabsControl.beforeCloseEditor(editor);\n\t}\n\n\tcloseEditor(editor: EditorInput): void {\n\t\tthis.editorTabsControl.closeEditor(editor);\n\n\t\tthis.handleClosedEditors();\n\t}\n\n\tcloseEditors(editors: EditorInput[]): void {\n\t\tthis.editorTabsControl.closeEditors(editors);\n\n\t\tthis.handleClosedEditors();\n\t}\n\n\tprivate handleClosedEditors(): void {\n\t\tif (!this.group.activeEditor) {\n\t\t\tthis.breadcrumbsControl?.update();\n\t\t}\n\t}\n\n\tmoveEditor(editor: EditorInput, fromIndex: number, targetIndex: number): void {\n\t\treturn this.editorTabsControl.moveEditor(editor, fromIndex, targetIndex);\n\t}\n\n\tpinEditor(editor: EditorInput): void {\n\t\treturn this.editorTabsControl.pinEditor(editor);\n\t}\n\n\tstickEditor(editor: EditorInput): void {\n\t\treturn this.editorTabsControl.stickEditor(editor);\n\t}\n\n\tunstickEditor(editor: EditorInput): void {\n\t\treturn this.editorTabsControl.unstickEditor(editor);\n\t}\n\n\tsetActive(isActive: boolean): void {\n\t\treturn this.editorTabsControl.setActive(isActive);\n\t}\n\n\tupdateEditorLabel(editor: EditorInput): void {\n\t\treturn this.editorTabsControl.updateEditorLabel(editor);\n\t}\n\n\tupdateEditorDirty(editor: EditorInput): void {\n\t\treturn this.editorTabsControl.updateEditorDirty(editor);\n\t}\n\n\tupdateOptions(oldOptions: IEditorPartOptions, newOptions: IEditorPartOptions): void {\n\n\t\t// Update editor tabs control if options changed\n\t\tif (oldOptions.showTabs !== newOptions.showTabs) {\n\n\t\t\t// Clear old\n\t\t\tthis.editorTabsControlDisposable.clear();\n\t\t\tthis.breadcrumbsControlDisposables.clear();\n\t\t\tclearNode(this.parent);\n\n\t\t\t// Create new\n\t\t\tthis.editorTabsControl = this.createEditorTabsControl();\n\t\t\tthis.breadcrumbsControlFactory = this.createBreadcrumbsControl();\n\t\t}\n\n\t\t// Forward into editor tabs control\n\t\tthis.editorTabsControl.updateOptions(oldOptions, newOptions);\n\t}\n\n\tlayout(dimensions: IEditorTitleControlDimensions): Dimension {\n\n\t\t// Layout tabs control\n\t\tconst tabsControlDimension = this.editorTabsControl.layout(dimensions);\n\n\t\t// Layout breadcrumbs if visible\n\t\tlet breadcrumbsControlDimension: Dimension | undefined = undefined;\n\t\tif (this.breadcrumbsControl?.isHidden() === false) {\n\t\t\tbreadcrumbsControlDimension = new Dimension(dimensions.container.width, BreadcrumbsControl.HEIGHT);\n\t\t\tthis.breadcrumbsControl.layout(breadcrumbsControlDimension);\n\t\t}\n\n\t\treturn new Dimension(\n\t\t\tdimensions.container.width,\n\t\t\ttabsControlDimension.height + (breadcrumbsControlDimension ? breadcrumbsControlDimension.height : 0)\n\t\t);\n\t}\n\n\tgetHeight(): IEditorGroupTitleHeight {\n\t\tconst tabsControlHeight = this.editorTabsControl.getHeight();\n\t\tconst breadcrumbsControlHeight = this.breadcrumbsControl?.isHidden() === false ? BreadcrumbsControl.HEIGHT : 0;\n\n\t\treturn {\n\t\t\ttotal: tabsControlHeight + breadcrumbsControlHeight,\n\t\t\toffset: tabsControlHeight\n\t\t};\n\t}\n}\n"]}