{"version":3,"sources":["vs/workbench/browser/parts/editor/editorPanes.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IA6DzF,IAAM,IAAI,GAAV,MAAM,IAAY,SAAQ,eAAG;QAUnC,YAAY;QAEZ,IAAI,YAAY,KAAK,OAAO,IAAI,CAAC,CAAC,EAAkB,YAAY,IAAI,YAAG,CAA2B,KAAK,CAAC,CAAC,CAAC;QAC1G,IAAI,aAAa,KAAK,OAAO,IAAI,CAAC,CAAC,EAAkB,aAAa,IAAI,YAAG,CAA2B,MAAM,CAAC,CAAC,CAAC;QAC7G,IAAI,YAAY,KAAK,OAAO,IAAI,CAAC,CAAC,EAAkB,YAAY,IAAI,YAAG,CAA2B,KAAK,CAAC,CAAC,CAAC;QAC1G,IAAI,aAAa,KAAK,OAAO,IAAI,CAAC,CAAC,EAAkB,aAAa,IAAI,YAAG,CAA2B,MAAM,CAAC,CAAC,CAAC;QAG7G,IAAI,gBAAgB,KAAgC,OAAO,IAAI,CAAC,CAA8C,CAAC,CAAC,CAAC;QAUjH,YACS,CAA8B,EAC9B,CAA8B,EAC9B,CAA2B,EACV,CAAoC,EACtC,CAA0C,EACzC,CAA2C,EACjC,CAA2C,EAChE,CAAgC,EAC7B,CAAmC;YAEnD,KAAK,EAAE,CAAC;YAVA,MAAC,GAAD,CAAC,CAA6B;YAC9B,MAAC,GAAD,CAAC,CAA6B;YAC9B,MAAC,GAAD,CAAC,CAA0B;YACO,MAAC,GAAD,CAAC,CAAkB;YACrB,MAAC,GAAD,CAAC,CAAwB;YACxB,MAAC,GAAD,CAAC,CAAyB;YAChB,MAAC,GAAD,CAAC,CAAyB;YAC/C,MAAC,GAAD,CAAC,CAAc;YACZ,MAAC,GAAD,CAAC,CAAiB;YAnCpD,gBAAgB;YAEC,MAAC,GAAa,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YAC1D,eAAU,GAAG,IAAI,CAAC,CAAC,CAAW,KAAK,CAAC;YAErC,MAAC,GAA6B,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAqD,CAAC,CAAC;YAC1G,+BAA0B,GAAG,IAAI,CAAC,CAAC,CAA2B,KAAK,CAAC;YASrE,MAAC,GAAsC,IAAI,CAAC;YAGnC,MAAC,GAA2B,EAAE,CAAC;YAE/B,MAAC,GAA6B,IAAI,CAAC,CAAC,CAAS,IAAI,eAAG,EAAc,CAAC,CAAC;YAGpE,MAAC,GAAiB,IAAI,CAAC,CAAC,CAAS,IAAI,cAAG,CAAkB,IAAI,CAAC,CAAC,CAAqB,CAAC,CAAC;YACvF,MAAC,GAAqB,cAAG,CAAM,EAAE,CAAsB,YAAG,CAAc,UAAU,CAAC,CAAC;YAepG,IAAI,CAAC,CAAC,EAAkB,CAAC;QAC1B,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAqB,gBAAgB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAA0B,CAAC,CAAC,CAAC;QACrG,CAAC;QAEO,CAAC;YAER,qDAAqD;YACrD,iDAAiD;YACjD,kBAAkB;YAClB,kDAAkD;YAClD,6BAA6B;YAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,EAAkB,KAAK,CAAC;YAC7C,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,EAAkB,OAAO,CAAC;YAChD,IAAI,MAAM,EAAE,aAAa,gDAAuC,EAAE;gBACjE,IAAI,CAAC,CAAC,CAAS,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;aAC3C;QACF,CAAC;QAED,KAAK,CAAC,UAAU,CAAC,MAAW,EAAU,OAAmC,EAAE,UAA8B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;YAC3H,IAAI;gBACH,OAAO,MAAM,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,CAAC,CAAuB,MAAM,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;aAC/F;YAAC,OAAO,KAAK,EAAE;gBAEf,+DAA+D;gBAC/D,IAAI,OAAO,EAAE,WAAW,EAAE;oBACzB,OAAO,EAAE,KAAK,EAAE,CAAC;iBACjB;gBAED,oEAAoE;gBACpE,oEAAoE;gBACpE,oCAAoC;gBACpC,EAAE;gBACF,iEAAiE;gBACjE,8CAA8C;gBAE9C,OAAO,IAAI,CAAC,CAAC,CAAW,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;aACzD;QACF,CAAC;QAEO,KAAK,CAAC,CAAC,CAAW,KAAY,EAAE,MAAW,EAAU,OAAwB,EAAE,OAA4B;YAElH,sDAAsD;YACtD,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,KAAK,CAAC,CAAC;YAE7B,iEAAiE;YACjE,IAAI,YAAY,GAAG,KAAK,CAAC;YACzB,IAAI,OAAO,EAAE,MAAM,KAAK,yBAAgB,CAAC,IAAI,IAAI,CAAC,CAAC,IAAA,YAAG,EAAe,KAAK,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC,EAAE;gBAClG,YAAY,GAAG,MAAM,IAAI,CAAC,CAAC,CAAiB,KAAK,EAAE,MAAM,CAAC,CAAC;aAC3D;YAED,wDAAwD;YACxD,IAAI,YAAY,EAAE;gBACjB,OAAO,EAAE,KAAK,EAAE,CAAC;aACjB;YAED,6DAA6D;YAC7D,MAAM,wBAAwB,GAAmC,EAAE,GAAG,OAAO,EAAE,CAAC;YAChF,IAAI,CAAC,IAAA,WAAE,EAAkB,KAAK,CAAC,EAAE;gBAChC,wBAAwB,CAAC,KAAK,GAAG,KAAK,CAAC;aACvC;YAED,OAAO;gBACN,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAY,wBAAI,CAAmB,UAAU,EAAE,MAAM,EAAE,wBAAwB,EAAE,OAAO,CAAC,CAAC;gBAC1G,KAAK;aACL,CAAC;QACH,CAAC;QAEO,KAAK,CAAC,CAAC,CAAiB,KAAY,EAAE,MAAW;YACxD,IAAI,QAAQ,GAAG,kBAAQ,CAAC,KAAK,CAAC;YAC9B,IAAI,OAAO,GAAuB,SAAS,CAAC;YAC5C,IAAI,MAAM,GAAuB,IAAA,kBAAG,EAAY,KAAK,CAAC,CAAC;YACvD,IAAI,YAAY,GAAmC,SAAS,CAAC;YAE7D,IAAI,IAAA,YAAG,EAAe,KAAK,CAAC,EAAE;gBAC7B,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC7B,QAAQ,GAAG,KAAK,CAAC,aAAa,IAAI,kBAAQ,CAAC,KAAK,CAAC;gBACjD,IAAI,KAAK,CAAC,YAAY,EAAE;oBACvB,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;oBACxB,MAAM,GAAG,SAAS,CAAC;iBACnB;aACD;YAED,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO,GAAG,IAAA,cAAQ,EAAC,CAAuB,EAAE,IAAsB,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;aACtF;YAED,MAAM,OAAO,GAAyC,EAAE,CAAC;YACzD,IAAI,YAAY,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5C,KAAK,MAAM,WAAW,IAAI,YAAY,EAAE;oBACvC,OAAO,CAAC,IAAI,CAAC;wBACZ,KAAK,EAAE,WAAW,CAAC,KAAK;wBACxB,GAAG,EAAE,GAAG,EAAE,CAAC,WAAW;qBACtB,CAAC,CAAC;iBACH;aACD;iBAAM;gBACN,OAAO,CAAC,IAAI,CAAC;oBACZ,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAiD,CAA/C,CAAiD,EAA9C,EAAE,AAAkD,CAAC,GAA/C,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;oBAC/D,GAAG,EAAE,GAAG,EAAE,CAAC,SAAS;iBACpB,CAAC,CAAC;aACH;YAED,IAAI,YAAY,GAA+C,SAAS,CAAC;YACzE,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzB,YAAY,GAAG;oBACd,GAAG,EAAE,GAAG,EAAE;wBACT,YAAY,GAAG,IAAI,CAAC,CAAC,sDAAsD;wBAE3E,OAAO,SAAS,CAAC;oBAClB,CAAC;iBACD,CAAC;aACF;YAED,IAAI,YAAY,GAAG,KAAK,CAAC,CAAE,+BAA+B;YAE1D,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,CAAC,CAAa,MAAM,CAAC;gBAClD,IAAI,EAAE,QAAQ;gBACd,OAAO;gBACP,MAAM;gBACN,OAAO;gBACP,YAAY;aACZ,CAAC,CAAC;YAEH,IAAI,MAAM,EAAE;gBACX,MAAM,iBAAiB,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;gBACvC,IAAI,iBAAiB,YAAY,OAAO,EAAE;oBACzC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAa,KAAK,CAAC,IAAA,kBAAG,EAAY,KAAK,CAAC,CAAC,CAAC,CAAC;iBAClF;gBAED,YAAY,GAAG,IAAI,CAAC,CAAC,mEAAmE;aACxF;YAED,OAAO,YAAY,CAAC;QACrB,CAAC;QAEO,KAAK,CAAC,CAAC,CAAY,UAAiC,EAAE,MAAW,EAAU,OAAmC,EAAE,UAA8B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;YAExK,cAAc;YACd,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAC,CAAC;YAE/C,sEAAsE;YACtE,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;YAE7C,sBAAsB;YACtB,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,CAAC,CAAU,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;YAErF,gDAAgD;YAChD,MAAM,KAAK,GAAG,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;YACjD,IAAI,CAAC,SAAS,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,CAAkB,aAAa,CAAC,EAAE;gBAClE,IAAI,CAAC,KAAK,EAAE,CAAC;aACb;YAED,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;QACrC,CAAC;QAEO,CAAC,CAAkB,qBAAqC;YAC/D,IAAI,CAAC,IAAI,CAAC,CAAC,CAAa,UAAU,EAAE,EAAE;gBACrC,OAAO,IAAI,CAAC,CAAC,sDAAsD;aACnE;YAED,IAAI,CAAC,qBAAqB,EAAE;gBAC3B,OAAO,IAAI,CAAC,CAAC,uCAAuC;aACpD;YAED,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;YAE7C,IAAI,CAAC,aAAa,IAAI,aAAa,KAAK,QAAQ,CAAC,IAAI,EAAE;gBACtD,OAAO,IAAI,CAAC,CAAC,gDAAgD;aAC7D;YAED,MAAM,IAAI,GAAG,qBAAqB,KAAK,aAAa,CAAC;YACrD,IAAI,IAAI,EAAE;gBACT,OAAO,IAAI,CAAC,CAAC,gDAAgD;aAC7D;YAED,IAAI,aAAa,CAAC,OAAO,KAAK,OAAO,IAAI,aAAa,CAAC,OAAO,KAAK,UAAU,EAAE;gBAE9E,uEAAuE;gBACvE,uEAAuE;gBACvE,wDAAwD;gBAExD,OAAO,IAAI,CAAC;aACZ;YAED,IAAI,IAAA,SAAG,EAAQ,aAAa,EAAE,IAAI,CAAC,CAAC,CAAiB,EAAE;gBACtD,OAAO,IAAI,CAAC,CAAC,mEAAmE;aAChF;YAED,OAAO,KAAK,CAAC,CAAC,uBAAuB;QACtC,CAAC;QAEO,CAAC,CAAuB,MAAW;YAC1C,IAAI,MAAM,CAAC,aAAa,gDAAuC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAqB,kBAAkB,EAAE,EAAE;gBACpH,iEAAiE;gBACjE,mEAAmE;gBACnE,mEAAmE;gBACnE,UAAU;gBACV,OAAO,wBAAI,CAAoC,UAAU,CAAC;aAC1D;YAED,OAAO,IAAA,WAAG,EAAa,IAAI,CAAC,CAAC,CAAmB,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;QACxE,CAAC;QAEO,CAAC,CAAgB,UAAiC;YAEzD,wEAAwE;YACxE,IAAI,IAAI,CAAC,CAAC,IAAoB,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAiB,EAAE;gBAC3E,OAAO,IAAI,CAAC,CAAC,CAAiB;aAC9B;YAED,wBAAwB;YACxB,IAAI,CAAC,CAAC,EAAuB,CAAC;YAE9B,qBAAqB;YACrB,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAkB,UAAU,CAAC,CAAC;YAEvD,uBAAuB;YACvB,IAAI,CAAC,CAAC,CAAqB,UAAU,CAAC,CAAC;YAEvC,cAAc;YACd,MAAM,SAAS,GAAG,IAAA,WAAG,EAAa,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC;YAC7D,IAAI,CAAC,CAAC,CAAiB,WAAW,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAA,SAAG,EAAE,SAAS,CAAC,CAAC;YAEhB,4CAA4C;YAC5C,UAAU,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAS,CAAC;YAE5C,SAAS;YACT,IAAI,IAAI,CAAC,CAAC,EAAa;gBACtB,UAAU,CAAC,MAAM,CAAC,IAAI,SAAG,CAAO,IAAI,CAAC,CAAC,CAAY,KAAK,EAAE,IAAI,CAAC,CAAC,CAAY,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAY,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAY,IAAI,EAAE,CAAC,CAAC;aAClJ;YAED,kBAAkB;YAClB,IAAI,IAAI,CAAC,CAAC,EAAe;gBACxB,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAc,CAAC;aAClD;YAED,OAAO,UAAU,CAAC;QACnB,CAAC;QAEO,CAAC,CAAkB,UAAiC;YAE3D,qBAAqB;YACrB,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAuB,UAAU,CAAC,CAAC;YAE5D,oCAAoC;YACpC,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,EAAE;gBAC/B,MAAM,mBAAmB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAC1D,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAErD,UAAU,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;aACvC;YAED,OAAO,UAAU,CAAC;QACnB,CAAC;QAEO,CAAC,CAAuB,UAAiC;YAEhE,uCAAuC;YACvC,MAAM,kBAAkB,GAAG,IAAI,CAAC,CAAC,CAAW,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;YACjG,IAAI,kBAAkB,EAAE;gBACvB,OAAO,kBAAkB,CAAC;aAC1B;YAED,4BAA4B;YAC5B,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAS,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAoB,CAAC,CAAC;YACrF,IAAI,CAAC,CAAC,CAAW,IAAI,CAAC,UAAU,CAAC,CAAC;YAElC,OAAO,UAAU,CAAC;QACnB,CAAC;QAEO,CAAC,CAAqB,UAA6B;YAC1D,IAAI,CAAC,CAAC,GAAmB,UAAU,CAAC;YAEpC,kDAAkD;YAClD,IAAI,CAAC,CAAC,CAA2B,KAAK,EAAE,CAAC;YAEzC,gCAAgC;YAChC,IAAI,UAAU,EAAE;gBACf,IAAI,CAAC,CAAC,CAA2B,GAAG,CAAC,UAAU,CAAC,0BAA0B,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAA2B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3H,IAAI,CAAC,CAAC,CAA2B,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAW,IAAI,EAAE,CAAC,CAAC,CAAC;aAC3F;YAED,sEAAsE;YACtE,IAAI,CAAC,CAAC,CAA2B,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,CAAC;QAEO,KAAK,CAAC,CAAC,CAAU,UAAe,EAAS,MAAW,EAAU,OAAmC,EAAE,OAA2B;YAErI,qDAAqD;YACrD,sDAAsD;YACtD,uCAAuC;YACvC,MAAM,YAAY,GAAG,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;YACvD,IAAI,YAAY,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE;gBAC1C,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBAE/B,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;aAC5C;YAED,wDAAwD;YACxD,yDAAyD;YACzD,wCAAwC;YACxC,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAe,KAAK,CAAC,IAAI,CAAC,CAAC,CAAa,UAAU,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAE3F,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,IAAI;gBAEH,mDAAmD;gBACnD,kDAAkD;gBAClD,kDAAkD;gBAClD,0DAA0D;gBAC1D,UAAU,CAAC,UAAU,EAAE,CAAC;gBAExB,mCAAmC;gBACnC,MAAM,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;gBAErE,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE;oBAC3B,SAAS,GAAG,IAAI,CAAC;iBACjB;aACD;YAAC,OAAO,KAAK,EAAE;gBACf,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE;oBAC3B,SAAS,GAAG,IAAI,CAAC;iBACjB;qBAAM;oBACN,MAAM,KAAK,CAAC;iBACZ;aACD;oBAAS;gBACT,SAAS,CAAC,IAAI,EAAE,CAAC;aACjB;YAED,OAAO,EAAE,OAAO,EAAE,CAAC,YAAY,EAAE,SAAS,EAAE,CAAC;QAC9C,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,IAAI,CAAC,CAAC,EAAkB;gBAC5B,OAAO;aACP;YAED,6BAA6B;YAC7B,IAAI,CAAC,CAAC,CAAe,IAAI,EAAE,CAAC;YAE5B,0DAA0D;YAC1D,yDAAyD;YACzD,sDAAsD;YACtD,IAAI,CAAC,CAAC,CAAO,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAkB,UAAU,EAAE,CAAC,CAAC;YACzD,IAAI,CAAC,CAAC,CAAO,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAkB,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAS,CAAC,CAAC;YAE9E,iCAAiC;YACjC,MAAM,mBAAmB,GAAG,IAAI,CAAC,CAAC,CAAiB,YAAY,EAAE,CAAC;YAClE,IAAI,mBAAmB,EAAE;gBACxB,IAAI,CAAC,CAAC,CAAiB,WAAW,CAAC,mBAAmB,CAAC,CAAC;gBACxD,IAAA,SAAG,EAAE,mBAAmB,CAAC,CAAC;aAC1B;YAED,2BAA2B;YAC3B,IAAI,CAAC,CAAC,CAAqB,IAAI,CAAC,CAAC;QAClC,CAAC;QAED,WAAW,CAAC,MAAW;YACtB,IAAI,IAAI,CAAC,CAAC,EAAkB,KAAK,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAiB,KAAK,CAAC,EAAE;gBAClF,IAAI,CAAC,CAAC,EAAuB,CAAC;aAC9B;QACF,CAAC;QAED,UAAU,CAAC,OAAgB;YAC1B,IAAI,CAAC,CAAC,CAAO,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAkB,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAS,CAAC,CAAC;QACjF,CAAC;QAED,MAAM,CAAC,YAAkC;YACxC,IAAI,CAAC,CAAC,GAAc,YAAY,CAAC;YAEjC,IAAI,CAAC,CAAC,CAAO,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAkB,MAAM,CAAC,IAAI,SAAG,CAAO,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;QAC1H,CAAC;QAED,iBAAiB,CAAC,MAAuB;YACxC,IAAI,CAAC,CAAC,GAAgB,MAAM,CAAC;YAE7B,IAAI,CAAC,CAAC,CAAO,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAkB,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;QACvE,CAAC;QAEO,CAAC,CAAO,EAAc;YAE7B,yDAAyD;YACzD,2DAA2D;YAC3D,2DAA2D;YAC3D,6BAA6B;YAE7B,IAAI;gBACH,EAAE,EAAE,CAAC;aACL;YAAC,OAAO,KAAK,EAAE;gBACf,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,KAAK,CAAC,CAAC;aAC7B;QACF,CAAC;KACD,CAAA;IAnbY,oBAAI;mBAAJ,IAAI;QAgCd,WAAA,oBAAI,CAAA;QACJ,WAAA,mBAAG,CAAA;QACH,WAAA,cAAG,CAAA;QACH,WAAA,oBAAG,CAAA;QACH,WAAA,SAAG,CAAA;QACH,WAAA,aAAG,CAAA;OArCO,IAAI,CAmbhB","file":"editorPanes.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IAction } from 'vs/base/common/actions';\nimport { Emitter } from 'vs/base/common/event';\nimport Severity from 'vs/base/common/severity';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { EditorExtensions, EditorInputCapabilities, IEditorOpenContext, IVisibleEditorPane, isEditorOpenError } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { Dimension, show, hide, IDomNodePagePosition, isAncestor } from 'vs/base/browser/dom';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IEditorPaneRegistry, IEditorPaneDescriptor } from 'vs/workbench/browser/editor';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { EditorPane } from 'vs/workbench/browser/parts/editor/editorPane';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IEditorProgressService, LongRunningOperation } from 'vs/platform/progress/common/progress';\nimport { IEditorGroupView, DEFAULT_EDITOR_MIN_DIMENSIONS, DEFAULT_EDITOR_MAX_DIMENSIONS } from 'vs/workbench/browser/parts/editor/editor';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { ErrorPlaceholderEditor, IErrorEditorPlaceholderOptions, WorkspaceTrustRequiredPlaceholderEditor } from 'vs/workbench/browser/parts/editor/editorPlaceholder';\nimport { EditorOpenSource, IEditorOptions } from 'vs/platform/editor/common/editor';\nimport { isCancellationError } from 'vs/base/common/errors';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IDialogService, IPromptButton, IPromptCancelButton } from 'vs/platform/dialogs/common/dialogs';\nimport { IBoundarySashes } from 'vs/base/browser/ui/sash/sash';\n\nexport interface IOpenEditorResult {\n\n\t/**\n\t * The editor pane used for opening. This can be a generic\n\t * placeholder in certain cases, e.g. when workspace trust\n\t * is required, or an editor fails to restore.\n\t *\n\t * Will be `undefined` if an error occurred while trying to\n\t * open the editor and in cases where no placeholder is being\n\t * used.\n\t */\n\treadonly pane?: EditorPane;\n\n\t/**\n\t * Whether the editor changed as a result of opening.\n\t */\n\treadonly changed?: boolean;\n\n\t/**\n\t * This property is set when an editor fails to restore and\n\t * is shown with a generic place holder. It allows callers\n\t * to still present the error to the user in that case.\n\t */\n\treadonly error?: Error;\n\n\t/**\n\t * This property indicates whether the open editor operation was\n\t * cancelled or not. The operation may have been cancelled\n\t * in case another editor open operation was triggered right\n\t * after cancelling this one out.\n\t */\n\treadonly cancelled?: boolean;\n}\n\nexport class EditorPanes extends Disposable {\n\n\t//#region Events\n\n\tprivate readonly _onDidFocus = this._register(new Emitter<void>());\n\treadonly onDidFocus = this._onDidFocus.event;\n\n\tprivate _onDidChangeSizeConstraints = this._register(new Emitter<{ width: number; height: number } | undefined>());\n\treadonly onDidChangeSizeConstraints = this._onDidChangeSizeConstraints.event;\n\n\t//#endregion\n\n\tget minimumWidth() { return this._activeEditorPane?.minimumWidth ?? DEFAULT_EDITOR_MIN_DIMENSIONS.width; }\n\tget minimumHeight() { return this._activeEditorPane?.minimumHeight ?? DEFAULT_EDITOR_MIN_DIMENSIONS.height; }\n\tget maximumWidth() { return this._activeEditorPane?.maximumWidth ?? DEFAULT_EDITOR_MAX_DIMENSIONS.width; }\n\tget maximumHeight() { return this._activeEditorPane?.maximumHeight ?? DEFAULT_EDITOR_MAX_DIMENSIONS.height; }\n\n\tprivate _activeEditorPane: EditorPane | null = null;\n\tget activeEditorPane(): IVisibleEditorPane | null { return this._activeEditorPane as IVisibleEditorPane | null; }\n\n\tprivate readonly editorPanes: EditorPane[] = [];\n\n\tprivate readonly activeEditorPaneDisposables = this._register(new DisposableStore());\n\tprivate pagePosition: IDomNodePagePosition | undefined;\n\tprivate boundarySashes: IBoundarySashes | undefined;\n\tprivate readonly editorOperation = this._register(new LongRunningOperation(this.editorProgressService));\n\tprivate readonly editorPanesRegistry = Registry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane);\n\n\tconstructor(\n\t\tprivate editorGroupParent: HTMLElement,\n\t\tprivate editorPanesParent: HTMLElement,\n\t\tprivate groupView: IEditorGroupView,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEditorProgressService private readonly editorProgressService: IEditorProgressService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustService: IWorkspaceTrustManagementService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IDialogService private readonly dialogService: IDialogService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.workspaceTrustService.onDidChangeTrust(() => this.onDidChangeWorkspaceTrust()));\n\t}\n\n\tprivate onDidChangeWorkspaceTrust() {\n\n\t\t// If the active editor pane requires workspace trust\n\t\t// we need to re-open it anytime trust changes to\n\t\t// account for it.\n\t\t// For that we explicitly call into the group-view\n\t\t// to handle errors properly.\n\t\tconst editor = this._activeEditorPane?.input;\n\t\tconst options = this._activeEditorPane?.options;\n\t\tif (editor?.hasCapability(EditorInputCapabilities.RequiresTrust)) {\n\t\t\tthis.groupView.openEditor(editor, options);\n\t\t}\n\t}\n\n\tasync openEditor(editor: EditorInput, options: IEditorOptions | undefined, context: IEditorOpenContext = Object.create(null)): Promise<IOpenEditorResult> {\n\t\ttry {\n\t\t\treturn await this.doOpenEditor(this.getEditorPaneDescriptor(editor), editor, options, context);\n\t\t} catch (error) {\n\n\t\t\t// First check if caller instructed us to ignore error handling\n\t\t\tif (options?.ignoreError) {\n\t\t\t\treturn { error };\n\t\t\t}\n\n\t\t\t// In case of an error when opening an editor, we still want to show\n\t\t\t// an editor in the desired location to preserve the user intent and\n\t\t\t// view state (e.g. when restoring).\n\t\t\t//\n\t\t\t// For that reason we have place holder editors that can convey a\n\t\t\t// message with actions the user can click on.\n\n\t\t\treturn this.doShowError(error, editor, options, context);\n\t\t}\n\t}\n\n\tprivate async doShowError(error: Error, editor: EditorInput, options?: IEditorOptions, context?: IEditorOpenContext): Promise<IOpenEditorResult> {\n\n\t\t// Always log the error to figure out what is going on\n\t\tthis.logService.error(error);\n\n\t\t// Show as modal dialog when explicit user action unless disabled\n\t\tlet errorHandled = false;\n\t\tif (options?.source === EditorOpenSource.USER && (!isEditorOpenError(error) || error.allowDialog)) {\n\t\t\terrorHandled = await this.doShowErrorDialog(error, editor);\n\t\t}\n\n\t\t// Return early if the user dealt with the error already\n\t\tif (errorHandled) {\n\t\t\treturn { error };\n\t\t}\n\n\t\t// Show as editor placeholder: pass over the error to display\n\t\tconst editorPlaceholderOptions: IErrorEditorPlaceholderOptions = { ...options };\n\t\tif (!isCancellationError(error)) {\n\t\t\teditorPlaceholderOptions.error = error;\n\t\t}\n\n\t\treturn {\n\t\t\t...(await this.doOpenEditor(ErrorPlaceholderEditor.DESCRIPTOR, editor, editorPlaceholderOptions, context)),\n\t\t\terror\n\t\t};\n\t}\n\n\tprivate async doShowErrorDialog(error: Error, editor: EditorInput): Promise<boolean> {\n\t\tlet severity = Severity.Error;\n\t\tlet message: string | undefined = undefined;\n\t\tlet detail: string | undefined = toErrorMessage(error);\n\t\tlet errorActions: readonly IAction[] | undefined = undefined;\n\n\t\tif (isEditorOpenError(error)) {\n\t\t\terrorActions = error.actions;\n\t\t\tseverity = error.forceSeverity ?? Severity.Error;\n\t\t\tif (error.forceMessage) {\n\t\t\t\tmessage = error.message;\n\t\t\t\tdetail = undefined;\n\t\t\t}\n\t\t}\n\n\t\tif (!message) {\n\t\t\tmessage = localize('editorOpenErrorDialog', \"Unable to open '{0}'\", editor.getName());\n\t\t}\n\n\t\tconst buttons: IPromptButton<IAction | undefined>[] = [];\n\t\tif (errorActions && errorActions.length > 0) {\n\t\t\tfor (const errorAction of errorActions) {\n\t\t\t\tbuttons.push({\n\t\t\t\t\tlabel: errorAction.label,\n\t\t\t\t\trun: () => errorAction\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tbuttons.push({\n\t\t\t\tlabel: localize({ key: 'ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\"),\n\t\t\t\trun: () => undefined\n\t\t\t});\n\t\t}\n\n\t\tlet cancelButton: IPromptCancelButton<undefined> | undefined = undefined;\n\t\tif (buttons.length === 1) {\n\t\t\tcancelButton = {\n\t\t\t\trun: () => {\n\t\t\t\t\terrorHandled = true; // treat cancel as handled and do not show placeholder\n\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tlet errorHandled = false;  // by default, show placeholder\n\n\t\tconst { result } = await this.dialogService.prompt({\n\t\t\ttype: severity,\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tbuttons,\n\t\t\tcancelButton\n\t\t});\n\n\t\tif (result) {\n\t\t\tconst errorActionResult = result.run();\n\t\t\tif (errorActionResult instanceof Promise) {\n\t\t\t\terrorActionResult.catch(error => this.dialogService.error(toErrorMessage(error)));\n\t\t\t}\n\n\t\t\terrorHandled = true; // treat custom error action as handled and do not show placeholder\n\t\t}\n\n\t\treturn errorHandled;\n\t}\n\n\tprivate async doOpenEditor(descriptor: IEditorPaneDescriptor, editor: EditorInput, options: IEditorOptions | undefined, context: IEditorOpenContext = Object.create(null)): Promise<IOpenEditorResult> {\n\n\t\t// Editor pane\n\t\tconst pane = this.doShowEditorPane(descriptor);\n\n\t\t// Remember current active element for deciding to restore focus later\n\t\tconst activeElement = document.activeElement;\n\n\t\t// Apply input to pane\n\t\tconst { changed, cancelled } = await this.doSetInput(pane, editor, options, context);\n\n\t\t// Focus only if not cancelled and not prevented\n\t\tconst focus = !options || !options.preserveFocus;\n\t\tif (!cancelled && focus && this.shouldRestoreFocus(activeElement)) {\n\t\t\tpane.focus();\n\t\t}\n\n\t\treturn { pane, changed, cancelled };\n\t}\n\n\tprivate shouldRestoreFocus(expectedActiveElement: Element | null): boolean {\n\t\tif (!this.layoutService.isRestored()) {\n\t\t\treturn true; // restore focus if we are not restored yet on startup\n\t\t}\n\n\t\tif (!expectedActiveElement) {\n\t\t\treturn true; // restore focus if nothing was focused\n\t\t}\n\n\t\tconst activeElement = document.activeElement;\n\n\t\tif (!activeElement || activeElement === document.body) {\n\t\t\treturn true; // restore focus if nothing is focused currently\n\t\t}\n\n\t\tconst same = expectedActiveElement === activeElement;\n\t\tif (same) {\n\t\t\treturn true; // restore focus if same element is still active\n\t\t}\n\n\t\tif (activeElement.tagName !== 'INPUT' && activeElement.tagName !== 'TEXTAREA') {\n\n\t\t\t// This is to avoid regressions from not restoring focus as we used to:\n\t\t\t// Only allow a different input element (or textarea) to remain focused\n\t\t\t// but not other elements that do not accept text input.\n\n\t\t\treturn true;\n\t\t}\n\n\t\tif (isAncestor(activeElement, this.editorGroupParent)) {\n\t\t\treturn true; // restore focus if active element is still inside our editor group\n\t\t}\n\n\t\treturn false; // do not restore focus\n\t}\n\n\tprivate getEditorPaneDescriptor(editor: EditorInput): IEditorPaneDescriptor {\n\t\tif (editor.hasCapability(EditorInputCapabilities.RequiresTrust) && !this.workspaceTrustService.isWorkspaceTrusted()) {\n\t\t\t// Workspace trust: if an editor signals it needs workspace trust\n\t\t\t// but the current workspace is untrusted, we fallback to a generic\n\t\t\t// editor descriptor to indicate this an do NOT load the registered\n\t\t\t// editor.\n\t\t\treturn WorkspaceTrustRequiredPlaceholderEditor.DESCRIPTOR;\n\t\t}\n\n\t\treturn assertIsDefined(this.editorPanesRegistry.getEditorPane(editor));\n\t}\n\n\tprivate doShowEditorPane(descriptor: IEditorPaneDescriptor): EditorPane {\n\n\t\t// Return early if the currently active editor pane can handle the input\n\t\tif (this._activeEditorPane && descriptor.describes(this._activeEditorPane)) {\n\t\t\treturn this._activeEditorPane;\n\t\t}\n\n\t\t// Hide active one first\n\t\tthis.doHideActiveEditorPane();\n\n\t\t// Create editor pane\n\t\tconst editorPane = this.doCreateEditorPane(descriptor);\n\n\t\t// Set editor as active\n\t\tthis.doSetActiveEditorPane(editorPane);\n\n\t\t// Show editor\n\t\tconst container = assertIsDefined(editorPane.getContainer());\n\t\tthis.editorPanesParent.appendChild(container);\n\t\tshow(container);\n\n\t\t// Indicate to editor that it is now visible\n\t\teditorPane.setVisible(true, this.groupView);\n\n\t\t// Layout\n\t\tif (this.pagePosition) {\n\t\t\teditorPane.layout(new Dimension(this.pagePosition.width, this.pagePosition.height), { top: this.pagePosition.top, left: this.pagePosition.left });\n\t\t}\n\n\t\t// Boundary sashes\n\t\tif (this.boundarySashes) {\n\t\t\teditorPane.setBoundarySashes(this.boundarySashes);\n\t\t}\n\n\t\treturn editorPane;\n\t}\n\n\tprivate doCreateEditorPane(descriptor: IEditorPaneDescriptor): EditorPane {\n\n\t\t// Instantiate editor\n\t\tconst editorPane = this.doInstantiateEditorPane(descriptor);\n\n\t\t// Create editor container as needed\n\t\tif (!editorPane.getContainer()) {\n\t\t\tconst editorPaneContainer = document.createElement('div');\n\t\t\teditorPaneContainer.classList.add('editor-instance');\n\n\t\t\teditorPane.create(editorPaneContainer);\n\t\t}\n\n\t\treturn editorPane;\n\t}\n\n\tprivate doInstantiateEditorPane(descriptor: IEditorPaneDescriptor): EditorPane {\n\n\t\t// Return early if already instantiated\n\t\tconst existingEditorPane = this.editorPanes.find(editorPane => descriptor.describes(editorPane));\n\t\tif (existingEditorPane) {\n\t\t\treturn existingEditorPane;\n\t\t}\n\n\t\t// Otherwise instantiate new\n\t\tconst editorPane = this._register(descriptor.instantiate(this.instantiationService));\n\t\tthis.editorPanes.push(editorPane);\n\n\t\treturn editorPane;\n\t}\n\n\tprivate doSetActiveEditorPane(editorPane: EditorPane | null) {\n\t\tthis._activeEditorPane = editorPane;\n\n\t\t// Clear out previous active editor pane listeners\n\t\tthis.activeEditorPaneDisposables.clear();\n\n\t\t// Listen to editor pane changes\n\t\tif (editorPane) {\n\t\t\tthis.activeEditorPaneDisposables.add(editorPane.onDidChangeSizeConstraints(e => this._onDidChangeSizeConstraints.fire(e)));\n\t\t\tthis.activeEditorPaneDisposables.add(editorPane.onDidFocus(() => this._onDidFocus.fire()));\n\t\t}\n\n\t\t// Indicate that size constraints could have changed due to new editor\n\t\tthis._onDidChangeSizeConstraints.fire(undefined);\n\t}\n\n\tprivate async doSetInput(editorPane: EditorPane, editor: EditorInput, options: IEditorOptions | undefined, context: IEditorOpenContext): Promise<{ changed: boolean; cancelled: boolean }> {\n\n\t\t// If the input did not change, return early and only\n\t\t// apply the options unless the options instruct us to\n\t\t// force open it even if it is the same\n\t\tconst inputMatches = editorPane.input?.matches(editor);\n\t\tif (inputMatches && !options?.forceReload) {\n\t\t\teditorPane.setOptions(options);\n\n\t\t\treturn { changed: false, cancelled: false };\n\t\t}\n\n\t\t// Start a new editor input operation to report progress\n\t\t// and to support cancellation. Any new operation that is\n\t\t// started will cancel the previous one.\n\t\tconst operation = this.editorOperation.start(this.layoutService.isRestored() ? 800 : 3200);\n\n\t\tlet cancelled = false;\n\t\ttry {\n\n\t\t\t// Clear the current input before setting new input\n\t\t\t// This ensures that a slow loading input will not\n\t\t\t// be visible for the duration of the new input to\n\t\t\t// load (https://github.com/microsoft/vscode/issues/34697)\n\t\t\teditorPane.clearInput();\n\n\t\t\t// Set the input to the editor pane\n\t\t\tawait editorPane.setInput(editor, options, context, operation.token);\n\n\t\t\tif (!operation.isCurrent()) {\n\t\t\t\tcancelled = true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (!operation.isCurrent()) {\n\t\t\t\tcancelled = true;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t} finally {\n\t\t\toperation.stop();\n\t\t}\n\n\t\treturn { changed: !inputMatches, cancelled };\n\t}\n\n\tprivate doHideActiveEditorPane(): void {\n\t\tif (!this._activeEditorPane) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Stop any running operation\n\t\tthis.editorOperation.stop();\n\n\t\t// Indicate to editor pane before removing the editor from\n\t\t// the DOM to give a chance to persist certain state that\n\t\t// might depend on still being the active DOM element.\n\t\tthis.safeRun(() => this._activeEditorPane?.clearInput());\n\t\tthis.safeRun(() => this._activeEditorPane?.setVisible(false, this.groupView));\n\n\t\t// Remove editor pane from parent\n\t\tconst editorPaneContainer = this._activeEditorPane.getContainer();\n\t\tif (editorPaneContainer) {\n\t\t\tthis.editorPanesParent.removeChild(editorPaneContainer);\n\t\t\thide(editorPaneContainer);\n\t\t}\n\n\t\t// Clear active editor pane\n\t\tthis.doSetActiveEditorPane(null);\n\t}\n\n\tcloseEditor(editor: EditorInput): void {\n\t\tif (this._activeEditorPane?.input && editor.matches(this._activeEditorPane.input)) {\n\t\t\tthis.doHideActiveEditorPane();\n\t\t}\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis.safeRun(() => this._activeEditorPane?.setVisible(visible, this.groupView));\n\t}\n\n\tlayout(pagePosition: IDomNodePagePosition): void {\n\t\tthis.pagePosition = pagePosition;\n\n\t\tthis.safeRun(() => this._activeEditorPane?.layout(new Dimension(pagePosition.width, pagePosition.height), pagePosition));\n\t}\n\n\tsetBoundarySashes(sashes: IBoundarySashes): void {\n\t\tthis.boundarySashes = sashes;\n\n\t\tthis.safeRun(() => this._activeEditorPane?.setBoundarySashes(sashes));\n\t}\n\n\tprivate safeRun(fn: () => void): void {\n\n\t\t// We delegate many calls to the active editor pane which\n\t\t// can be any kind of editor. We must ensure that our calls\n\t\t// do not throw, for example in `layout()` because that can\n\t\t// mess with the grid layout.\n\n\t\ttry {\n\t\t\tfn();\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n}\n"]}