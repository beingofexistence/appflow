{"version":3,"sources":["vs/workbench/browser/parts/editor/sideBySideEditor.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IAuChG,SAAS,2BAA2B,CAAC,KAAc;QAClD,MAAM,SAAS,GAAG,KAA+C,CAAC;QAElE,OAAO,OAAO,SAAS,EAAE,OAAO,KAAK,QAAQ,IAAI,OAAO,SAAS,CAAC,SAAS,KAAK,QAAQ,CAAC;IAC1F,CAAC;IAeM,IAAM,IAAI,GAAV,MAAM,IAAiB,SAAQ,0BAAuD;;iBAE5E,OAAE,GAAW,YAAX,AAAc,CAAoB;iBAE7C,gCAA2B,GAAG,qCAAH,AAAwC,CAAC;iBAEnD,MAAC,GAA2B,2BAA3B,AAAsD,CAAC;QAEhF,4BAA4B;QAE5B,IAAY,CAAC,KAAuB,OAAO,IAAI,CAAC,EAAE,CAAgB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAgB,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9G,IAAY,CAAC,KAAuB,OAAO,IAAI,CAAC,EAAE,CAAgB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAgB,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACrI,IAAY,CAAC,KAAwB,OAAO,IAAI,CAAC,EAAE,CAAgB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAgB,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChH,IAAY,EAAE,KAAuB,OAAO,IAAI,CAAC,EAAE,CAAgB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAgB,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAEvI,IAAY,EAAE,KAAwB,OAAO,IAAI,CAAC,EAAE,CAAkB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAkB,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpH,IAAY,EAAE,KAAwB,OAAO,IAAI,CAAC,EAAE,CAAkB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAkB,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC3I,IAAY,EAAE,KAAyB,OAAO,IAAI,CAAC,EAAE,CAAkB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAkB,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtH,IAAY,EAAE,KAAyB,OAAO,IAAI,CAAC,EAAE,CAAkB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAkB,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAE7I,IAAa,YAAY,CAAC,KAAa,IAAe,CAAC;QACvD,IAAa,YAAY,CAAC,KAAa,IAAe,CAAC;QACvD,IAAa,aAAa,CAAC,KAAa,IAAe,CAAC;QACxD,IAAa,aAAa,CAAC,KAAa,IAAe,CAAC;QAExD,IAAa,YAAY,KAAK,OAAO,IAAI,CAAC,CAAC,GAAqB,IAAI,CAAC,EAAE,CAAoB,CAAC,CAAC;QAC7F,IAAa,YAAY,KAAK,OAAO,IAAI,CAAC,CAAC,GAAqB,IAAI,CAAC,EAAE,CAAoB,CAAC,CAAC;QAC7F,IAAa,aAAa,KAAK,OAAO,IAAI,CAAC,CAAC,GAAsB,IAAI,CAAC,EAAE,CAAqB,CAAC,CAAC;QAChG,IAAa,aAAa,KAAK,OAAO,IAAI,CAAC,EAAE,GAAqB,IAAI,CAAC,EAAE,CAAqB,CAAC,CAAC;QAkChG,YACoB,gBAAqB,EACjB,oBAAyB,EACjC,YAAiB,EACf,cAAmB,EACb,EAA0C,EAC9B,gCAAqC,EACxD,aAAkB,EACZ,kBAAuB;YAE7C,KAAK,CAAC,MAAI,CAAa,EAAE,EAAE,MAAI,CAAa,CAAC,EAA0B,gBAAgB,EAAE,oBAAoB,EAAE,cAAc,EAAE,gCAAgC,EAAE,YAAY,EAAE,aAAa,EAAE,kBAAkB,CAAC,CAAC;YAL1K,OAAE,GAAF,EAAE,CAAuB;YAnClE,YAAY;YAEZ,gBAAgB;YAER,OAAE,GAAmB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAqD,CAAC,CAAC;YAElG,OAAE,GAA4B,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAmD,CAAC,CAAC;YAC/F,+BAA0B,GAAG,aAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAiB,KAAK,EAAE,IAAI,CAAC,EAAE,CAA0B,KAAK,CAAC,CAAC;YAE/G,OAAE,GAAsB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAuC,CAAC,CAAC;YAC/F,yBAAoB,GAAG,IAAI,CAAC,EAAE,CAAoB,KAAK,CAAC;YAEjE,YAAY;YAEJ,OAAE,GAA0C,SAAS,CAAC;YACtD,OAAE,GAA4C,SAAS,CAAC;YAO/C,OAAE,GAAqB,IAAI,CAAC,CAAC,CAAS,IAAI,eAAG,EAAc,CAAC,CAAC;YAC7D,OAAE,GAAkB,IAAI,CAAC,CAAC,CAAS,IAAI,eAAG,EAAc,CAAC,CAAC;YAEnE,OAAE,GAAY,IAAI,CAAC,EAAE,CAAmB,QAAQ,CAA4B,MAAI,CAAa,2BAA2B,CAAC,KAAK,UAAU,CAAC,CAAC,8BAAsB,CAAC,+BAAuB,CAAC;YACzL,OAAE,GAAU,IAAI,SAAG,CAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YAEhC,OAAE,GAA2D,SAAS,CAAC;YAc9E,IAAI,CAAC,EAAE,EAAiB,CAAC;QAC1B,CAAC;QAEO,EAAE;YACT,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,EAAE,CAAmB,wBAAwB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;QACzG,CAAC;QAEO,EAAE,CAAqB,KAAgC;YAC9D,IAAI,KAAK,CAAC,oBAAoB,CAAC,MAAI,CAAa,2BAA2B,CAAC,EAAE;gBAC7E,IAAI,CAAC,EAAE,GAAY,IAAI,CAAC,EAAE,CAAmB,QAAQ,CAA4B,MAAI,CAAa,2BAA2B,CAAC,KAAK,UAAU,CAAC,CAAC,8BAAsB,CAAC,+BAAuB,CAAC;gBAE9L,oDAAoD;gBACpD,oDAAoD;gBACpD,mBAAmB;gBACnB,IAAI,IAAI,CAAC,EAAE,EAAS;oBACnB,IAAI,CAAC,EAAE,EAAiB,CAAC;iBACzB;aACD;QACF,CAAC;QAEO,EAAE;YACT,MAAM,SAAS,GAAG,IAAA,WAAG,EAAa,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;YAEvD,wCAAwC;YACxC,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,EAAiB,CAAC;YACvC,IAAI,IAAI,CAAC,EAAE,EAAS;gBACnB,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAQ,EAAE,CAAC,CAAC;gBACzC,IAAI,CAAC,EAAE,CAAmB,KAAK,EAAE,CAAC;aAClC;YAED,aAAa;YACb,IAAI,CAAC,EAAE,CAAc,SAAS,EAAE,KAAK,CAAC,CAAC;YAEvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAQ,CAAC;QAC7B,CAAC;QAEO,EAAE;YACT,IAAI,KAAK,GAAuB,SAAS,CAAC;YAE1C,IAAI,IAAI,CAAC,EAAE,EAAS;gBACnB,MAAM,YAAY,GAAG,IAAI,CAAC,EAAE,CAAQ,WAAW,CAAC,CAAC,CAAC,CAAC;gBACnD,MAAM,aAAa,GAAG,IAAI,CAAC,EAAE,CAAQ,WAAW,CAAC,CAAC,CAAC,CAAC;gBAEpD,0DAA0D;gBAC1D,iDAAiD;gBACjD,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,aAAa,CAAC,GAAG,CAAC,EAAE;oBAC/C,MAAM,SAAS,GAAG,IAAI,CAAC,EAAE,CAAQ,WAAW,mCAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAQ,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAQ,MAAM,CAAC;oBACvH,KAAK,GAAG,YAAY,GAAG,SAAS,CAAC;iBACjC;aACD;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QAES,EAAE,CAAW,MAAmB;YACzC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YAE5C,yBAAyB;YACzB,IAAI,CAAC,EAAE,GAAyB,IAAA,OAAC,EAAC,gDAAgD,CAAC,CAAC;YACpF,IAAI,CAAC,EAAE,GAAuB,IAAA,OAAC,EAAC,gDAAgD,CAAC,CAAC;YAElF,aAAa;YACb,IAAI,CAAC,EAAE,CAAc,MAAM,CAAC,CAAC;QAC9B,CAAC;QAEO,EAAE,CAAc,MAAmB,EAAE,KAAc;YAE1D,mBAAmB;YACnB,IAAI,CAAC,EAAE,GAAU,IAAI,CAAC,EAAE,CAAmB,GAAG,CAAC,IAAI,eAAG,CAAO,MAAM,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,EAAE,EAAW,CAAC,CAAC,CAAC;YACzG,IAAI,CAAC,EAAE,CAAmB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAQ,cAAc,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAS,mBAAmB,EAAE,CAAC,CAAC,CAAC;YAE1G,IAAI,IAAI,CAAC,EAAE,mCAAoC,EAAE;gBAChD,IAAI,CAAC,EAAE,CAAQ,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAe,MAAM,CAAC;aAChE;iBAAM;gBACN,IAAI,CAAC,EAAE,CAAQ,mBAAmB,GAAG,IAAI,CAAC,EAAE,EAAe,IAAI,CAAC;gBAChE,IAAI,CAAC,EAAE,CAAQ,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAe,KAAK,CAAC;aAC/D;YAED,oBAAoB;YACpB,IAAI,UAAU,GAAoB,kBAAM,CAAC,UAAU,CAAC;YACpD,IAAI,WAAW,GAAoB,kBAAM,CAAC,UAAU,CAAC;YACrD,IAAI,KAAK,EAAE;gBACV,MAAM,SAAS,GAAG,IAAI,CAAC,EAAE,CAAQ,WAAW,mCAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAQ,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAQ,MAAM,CAAC;gBAEvH,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;gBAC3C,WAAW,GAAG,SAAS,GAAG,UAAU,CAAC;gBAErC,8DAA8D;gBAC9D,IAAI,CAAC,EAAE,CAAQ,MAAM,CAAC,IAAI,CAAC,EAAE,mCAAoC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAQ,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAQ,MAAM,CAAC,CAAC;aAClH;YAED,mBAAmB;YACnB,MAAM,wBAAwB,GAAG,IAAA,WAAG,EAAa,IAAI,CAAC,EAAE,CAAuB,CAAC;YAChF,IAAI,CAAC,EAAE,CAAQ,OAAO,CAAC;gBACtB,OAAO,EAAE,wBAAwB;gBACjC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAS,IAAI,CAAC,EAAE,EAAmB,IAAI,CAAC;gBAC/D,WAAW,EAAE,IAAI,CAAC,EAAE,mCAAoC,CAAC,CAAC,CAAC,YAAG,CAA2B,KAAK,CAAC,CAAC,CAAC,YAAG,CAA2B,MAAM;gBACrI,WAAW,EAAE,MAAM,CAAC,iBAAiB;gBACrC,WAAW,EAAE,aAAK,CAAC,IAAI;aACvB,EAAE,UAAU,CAAC,CAAC;YAEf,kBAAkB;YAClB,MAAM,sBAAsB,GAAG,IAAA,WAAG,EAAa,IAAI,CAAC,EAAE,CAAqB,CAAC;YAC5E,IAAI,CAAC,EAAE,CAAQ,OAAO,CAAC;gBACtB,OAAO,EAAE,sBAAsB;gBAC/B,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAS,IAAI,CAAC,EAAE,EAAiB,IAAI,CAAC;gBAC7D,WAAW,EAAE,IAAI,CAAC,EAAE,mCAAoC,CAAC,CAAC,CAAC,YAAG,CAA2B,KAAK,CAAC,CAAC,CAAC,YAAG,CAA2B,MAAM;gBACrI,WAAW,EAAE,MAAM,CAAC,iBAAiB;gBACrC,WAAW,EAAE,aAAK,CAAC,IAAI;aACvB,EAAE,WAAW,CAAC,CAAC;YAEhB,IAAI,CAAC,YAAY,EAAE,CAAC;QACrB,CAAC;QAEQ,QAAQ;YAChB,IAAI,IAAI,CAAC,KAAK,EAAE;gBACf,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;aAC5B;YAED,OAAO,IAAA,cAAQ,EAAC,CAAkB,EAAE,IAAqB,CAAC,CAAC;QAC5D,CAAC;QAEQ,KAAK,CAAC,QAAQ,CAAC,KAAU,EAAoB,OAA6C,EAAE,OAA2B,EAAE,KAAwB;YACzJ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;YAC5B,MAAM,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YAErD,wDAAwD;YACxD,sDAAsD;YACtD,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAC1C,IAAI,QAAQ,EAAE;oBACb,IAAI,CAAC,EAAE,EAAc,CAAC;iBACtB;gBAED,IAAI,CAAC,EAAE,CAAY,KAAK,CAAC,CAAC;aAC1B;YAED,kCAAkC;YAClC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,EAAE,CAAY,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;YACtF,IAAI,CAAC,EAAE,GAAgB,SAAS,EAAE,KAAK,CAAC;YAExC,IAAI,OAAO,SAAS,EAAE,KAAK,KAAK,QAAQ,IAAI,IAAI,CAAC,EAAE,EAAS;gBAC3D,MAAM,SAAS,GAAG,IAAI,CAAC,EAAE,CAAQ,WAAW,mCAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAQ,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAQ,MAAM,CAAC;gBAEvH,IAAI,CAAC,EAAE,CAAQ,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;aACtE;iBAAM;gBACN,IAAI,CAAC,EAAE,EAAS,mBAAmB,EAAE,CAAC;aACtC;YAED,0BAA0B;YAC1B,MAAM,OAAO,CAAC,GAAG,CAAC;gBACjB,IAAI,CAAC,EAAE,EAAmB,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC;gBAC9E,IAAI,CAAC,EAAE,EAAiB,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;aACxE,CAAC,CAAC;YAEH,qCAAqC;YACrC,IAAI,OAAO,OAAO,EAAE,MAAM,KAAK,QAAQ,EAAE;gBACxC,IAAI,CAAC,EAAE,GAAgB,OAAO,CAAC,MAAM,CAAC;aACtC;QACF,CAAC;QAEO,EAAE,CAAY,KAAU,EAAoB,OAA6C,EAAE,OAA2B;YAC7H,MAAM,SAAS,GAAG,2BAA2B,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAkB,KAAK,EAAE,OAAO,CAAC,CAAC;YAElI,IAAI,cAAc,GAAmB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACzD,IAAI,gBAAgB,GAA+B,SAAS,CAAC;YAE7D,wDAAwD;YACxD,0DAA0D;YAC1D,OAAO;YAEP,IAAI,OAAO,EAAE,MAAM,KAAK,yBAAI,CAAC,SAAS,EAAE;gBACvC,gBAAgB,GAAG,EAAE,GAAG,OAAO,EAAE,CAAC;aAClC;iBAAM;gBACN,cAAc,GAAG,EAAE,GAAG,OAAO,EAAE,CAAC;aAChC;YAED,cAAc,CAAC,SAAS,GAAG,SAAS,EAAE,OAAO,CAAC;YAE9C,IAAI,SAAS,EAAE,SAAS,EAAE;gBACzB,IAAI,CAAC,gBAAgB,EAAE;oBACtB,gBAAgB,GAAG,EAAE,SAAS,EAAE,SAAS,CAAC,SAAS,EAAE,CAAC;iBACtD;qBAAM;oBACN,gBAAgB,CAAC,SAAS,GAAG,SAAS,EAAE,SAAS,CAAC;iBAClD;aACD;YAED,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,SAAS,EAAE,gBAAgB,EAAE,SAAS,EAAE,CAAC;QAC5E,CAAC;QAEO,EAAE,CAAY,QAAa;YAElC,iBAAiB;YACjB,IAAI,CAAC,EAAE,GAAoB,IAAI,CAAC,EAAE,CAAa,QAAQ,CAAC,SAAS,EAAE,IAAA,WAAG,EAAa,IAAI,CAAC,EAAE,CAAuB,CAAC,CAAC;YACnH,IAAI,CAAC,EAAE,GAAkB,IAAI,CAAC,EAAE,CAAa,QAAQ,CAAC,OAAO,EAAE,IAAA,WAAG,EAAa,IAAI,CAAC,EAAE,CAAqB,CAAC,CAAC;YAE7G,SAAS;YACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAQ,CAAC;YAE5B,WAAW;YACX,IAAI,CAAC,EAAE,CAA0B,KAAK,GAAG,aAAK,CAAC,GAAG,CACjD,aAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAkB,0BAA0B,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,EAC/E,aAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAgB,0BAA0B,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,CAC7E,CAAC;YACF,IAAI,CAAC,EAAE,CAAiB,IAAI,CAAC,SAAS,CAAC,CAAC;YAExC,yDAAyD;YACzD,IAAI,CAAC,EAAE,CAAgB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAgB,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAe,yBAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACzG,IAAI,CAAC,EAAE,CAAgB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAkB,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAe,yBAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC9G,CAAC;QAEO,EAAE,CAAa,WAAgB,EAAU,SAAsB;YACtE,MAAM,oBAAoB,GAAG,cAAG,CAAM,EAAE,CAAsB,YAAG,CAAc,UAAU,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YACtH,IAAI,CAAC,oBAAoB,EAAE;gBAC1B,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;aAC9D;YAED,sCAAsC;YACtC,MAAM,UAAU,GAAG,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAoB,CAAC;YAC/E,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC7B,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAEpD,gCAAgC;YAChC,IAAI,IAAA,YAAG,EAAuB,UAAU,CAAC,EAAE;gBAC1C,IAAI,CAAC,EAAE,CAAgB,GAAG,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAoB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACrG;YAED,qBAAqB;YACrB,IAAI,CAAC,EAAE,CAAgB,GAAG,CAAC,UAAU,CAAC,CAAC;YAEvC,OAAO,UAAU,CAAC;QACnB,CAAC;QAEO,EAAE,CAAe,IAAmC;YAC3D,IAAI,CAAC,EAAE,GAAgB,IAAI,CAAC;YAE5B,oDAAoD;YACpD,IAAI,CAAC,CAAC,CAAmB,IAAI,EAAE,CAAC;QACjC,CAAC;QAED,YAAY;YACX,MAAM,qBAAqB,GAAG,IAAI,CAAC,EAAE,EAAwB,CAAC;YAC9D,IAAI,IAAA,YAAG,EAAuB,qBAAqB,CAAC,EAAE;gBACrD,MAAM,SAAS,GAAG,qBAAqB,CAAC,YAAY,EAAE,CAAC;gBACvD,IAAI,SAAS,EAAE;oBACd,OAAO,IAAI,kCAAkC,CAAC,SAAS,EAAE,qBAAqB,KAAK,IAAI,CAAC,EAAE,CAAgB,CAAC,CAAC,yBAAI,CAAC,OAAO,CAAC,CAAC,CAAC,yBAAI,CAAC,SAAS,CAAC,CAAC;iBAC3I;aACD;YAED,OAAO,SAAS,CAAC;QAClB,CAAC;QAEQ,UAAU,CAAC,OAA6C;YAChE,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAE1B,qCAAqC;YACrC,IAAI,OAAO,OAAO,EAAE,MAAM,KAAK,QAAQ,EAAE;gBACxC,IAAI,CAAC,EAAE,GAAgB,OAAO,CAAC,MAAM,CAAC;aACtC;YAED,wBAAwB;YACxB,IAAI,CAAC,EAAE,EAAwB,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;QACtD,CAAC;QAEkB,EAAE,CAAe,OAAgB,EAAE,KAA+B;YAEpF,wBAAwB;YACxB,IAAI,CAAC,EAAE,EAAiB,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YACnD,IAAI,CAAC,EAAE,EAAmB,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAErD,KAAK,CAAC,EAAE,CAAe,OAAO,EAAE,KAAK,CAAC,CAAC;QACxC,CAAC;QAEQ,UAAU;YAClB,KAAK,CAAC,UAAU,EAAE,CAAC;YAEnB,wBAAwB;YACxB,IAAI,CAAC,EAAE,EAAiB,UAAU,EAAE,CAAC;YACrC,IAAI,CAAC,EAAE,EAAmB,UAAU,EAAE,CAAC;YAEvC,0CAA0C;YAC1C,+CAA+C;YAC/C,IAAI,CAAC,EAAE,EAAc,CAAC;QACvB,CAAC;QAEQ,KAAK;YACb,IAAI,CAAC,EAAE,EAAwB,EAAE,KAAK,EAAE,CAAC;QAC1C,CAAC;QAEO,EAAE;YACT,IAAI,IAAI,CAAC,EAAE,KAAkB,yBAAI,CAAC,SAAS,EAAE;gBAC5C,OAAO,IAAI,CAAC,EAAE,CAAkB;aAChC;YAED,OAAO,IAAI,CAAC,EAAE,CAAgB;QAC/B,CAAC;QAED,MAAM,CAAC,SAAc;YACpB,IAAI,CAAC,EAAE,GAAU,SAAS,CAAC;YAE3B,MAAM,SAAS,GAAG,IAAA,WAAG,EAAa,IAAI,CAAC,EAAE,CAAQ,CAAC;YAClD,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,mCAAoC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACpG,CAAC;QAEQ,iBAAiB,CAAC,MAAuB;YACjD,IAAI,CAAC,EAAE,GAAgB,MAAM,CAAC;YAE9B,IAAI,IAAI,CAAC,EAAE,EAAS;gBACnB,IAAI,CAAC,EAAE,CAAQ,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC;aACjD;QACF,CAAC;QAEO,EAAE,CAAS,IAA4B,EAAE,IAAY;YAC5D,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,mCAAoC,CAAC,CAAC,CAAC,IAAI,SAAG,CAAO,IAAI,EAAE,IAAI,CAAC,EAAE,CAAQ,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,SAAG,CAAO,IAAI,CAAC,EAAE,CAAQ,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;QACpJ,CAAC;QAEQ,UAAU;YAClB,OAAO,IAAI,CAAC,EAAE,EAAwB,EAAE,UAAU,EAAE,CAAC;QACtD,CAAC;QAED,oBAAoB;YACnB,OAAO,IAAI,CAAC,EAAE,CAAgB;QAC/B,CAAC;QAED,sBAAsB;YACrB,OAAO,IAAI,CAAC,EAAE,CAAkB;QACjC,CAAC;QAES,EAAE,CAAoB,KAAU;YACzC,OAAO,KAAK,YAAY,2BAAG,CAAmB;QAC/C,CAAC;QAES,EAAE,CAAqB,QAAa;YAC7C,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAA,eAAG,EAAK,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAwB,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;gBAClF,OAAO,CAAC,mBAAmB;aAC3B;YAED,MAAM,eAAe,GAAG,IAAI,CAAC,EAAE,EAAiB,YAAY,EAAE,CAAC;YAC/D,MAAM,kBAAkB,GAAG,IAAI,CAAC,EAAE,EAAmB,YAAY,EAAE,CAAC;YAEpE,IAAI,CAAC,eAAe,IAAI,CAAC,kBAAkB,EAAE;gBAC5C,OAAO,CAAC,+BAA+B;aACvC;YAED,OAAO;gBACN,OAAO,EAAE,eAAe;gBACxB,SAAS,EAAE,kBAAkB;gBAC7B,KAAK,EAAE,IAAI,CAAC,EAAE;gBACd,KAAK,EAAE,IAAI,CAAC,EAAE,EAAiB;aAC/B,CAAC;QACH,CAAC;QAES,EAAE,CAAwB,KAAU;YAC7C,IAAI,OAAwB,CAAC;YAC7B,IAAI,SAA0B,CAAC;YAE/B,IAAI,KAAK,YAAY,2BAAG,EAAoB;gBAC3C,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACjC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;aACrC;YAED,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO,EAAE;gBAC3B,OAAO,SAAS,CAAC;aACjB;YAED,gFAAgF;YAChF,OAAO,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,IAAA,SAAG,EAAgB,SAAS,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAA,SAAG,EAAgB,OAAO,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACzI,CAAC;QAEQ,YAAY;YACpB,KAAK,CAAC,YAAY,EAAE,CAAC;YAErB,IAAI,IAAI,CAAC,EAAE,EAAsB;gBAChC,IAAI,IAAI,CAAC,EAAE,mCAAoC,EAAE;oBAChD,IAAI,CAAC,EAAE,CAAqB,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC1D,IAAI,CAAC,EAAE,CAAqB,KAAK,CAAC,eAAe,GAAG,OAAO,CAAC;oBAC5D,IAAI,CAAC,EAAE,CAAqB,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,CAAQ,WAAG,CAAiC,IAAI,EAAE,CAAC;oBAE7G,IAAI,CAAC,EAAE,CAAqB,KAAK,CAAC,cAAc,GAAG,GAAG,CAAC;iBACvD;qBAAM;oBACN,IAAI,CAAC,EAAE,CAAqB,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC;oBACzD,IAAI,CAAC,EAAE,CAAqB,KAAK,CAAC,cAAc,GAAG,OAAO,CAAC;oBAC3D,IAAI,CAAC,EAAE,CAAqB,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,CAAQ,WAAG,CAAmC,IAAI,EAAE,CAAC;oBAE9G,IAAI,CAAC,EAAE,CAAqB,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC;iBACxD;aACD;QACF,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,EAAE,EAAc,CAAC;YAEtB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;QAEO,EAAE;YACT,IAAI,CAAC,EAAE,CAAgB,KAAK,EAAE,CAAC;YAE/B,IAAI,CAAC,EAAE,GAAoB,SAAS,CAAC;YACrC,IAAI,CAAC,EAAE,GAAkB,SAAS,CAAC;YAEnC,IAAI,CAAC,EAAE,GAAgB,SAAS,CAAC;YAEjC,IAAI,IAAI,CAAC,EAAE,EAAwB;gBAClC,IAAA,SAAG,EAAO,IAAI,CAAC,EAAE,CAAuB,CAAC;aACzC;YAED,IAAI,IAAI,CAAC,EAAE,EAAsB;gBAChC,IAAA,SAAG,EAAO,IAAI,CAAC,EAAE,CAAqB,CAAC;aACvC;QACF,CAAC;;IAneW,oBAAI;mBAAJ,IAAI;QA+Dd,WAAA,eAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,kBAAG,CAAA;QACH,WAAA,aAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,+BAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,yBAAG,CAAA;OAtEO,IAAI,CAoehB;IAED,MAAM,kCAAkC;QAEvC,YACkB,CAA+B,EAC/B,CAAmC;YADnC,MAAC,GAAD,CAAC,CAA8B;YAC/B,MAAC,GAAD,CAAC,CAAkC;QACjD,CAAC;QAEL,OAAO,CAAC,KAA2B;YAClC,IAAI,CAAC,CAAC,KAAK,YAAY,kCAAkC,CAAC,EAAE;gBAC3D,0DAAkD;aAClD;YAED,IAAI,IAAI,CAAC,CAAC,KAAQ,KAAK,CAAC,CAAC,EAAK;gBAC7B,0DAAkD;aAClD;YAED,OAAO,IAAI,CAAC,CAAC,CAAS,OAAO,CAAC,KAAK,CAAC,CAAC,CAAS,CAAC;QAChD,CAAC;QAED,OAAO,CAAC,OAAuB;YAC9B,MAAM,uBAAuB,GAA6B;gBACzD,GAAG,OAAO;gBACV,MAAM,EAAE,IAAI,CAAC,CAAC;aACd,CAAC;YAEF,OAAO,IAAI,CAAC,CAAC,CAAS,OAAO,CAAC,uBAAuB,CAAC,CAAC;QACxD,CAAC;KACD","file":"sideBySideEditor.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/sidebysideeditor';\nimport { localize } from 'vs/nls';\nimport { Dimension, $, clearNode, multibyteAwareBtoa } from 'vs/base/browser/dom';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IEditorControl, IEditorPane, IEditorOpenContext, EditorExtensions, SIDE_BY_SIDE_EDITOR_ID, SideBySideEditor as Side, IEditorPaneSelection, IEditorPaneWithSelection, IEditorPaneSelectionChangeEvent, isEditorPaneWithSelection, EditorPaneSelectionCompareResult } from 'vs/workbench/common/editor';\nimport { SideBySideEditorInput } from 'vs/workbench/common/editor/sideBySideEditorInput';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { EditorPane } from 'vs/workbench/browser/parts/editor/editorPane';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IEditorPaneRegistry } from 'vs/workbench/browser/editor';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IEditorGroup, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { SplitView, Sizing, Orientation } from 'vs/base/browser/ui/splitview/splitview';\nimport { Event, Relay, Emitter } from 'vs/base/common/event';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { IEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IConfigurationChangeEvent, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { DEFAULT_EDITOR_MIN_DIMENSIONS } from 'vs/workbench/browser/parts/editor/editor';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { SIDE_BY_SIDE_EDITOR_HORIZONTAL_BORDER, SIDE_BY_SIDE_EDITOR_VERTICAL_BORDER } from 'vs/workbench/common/theme';\nimport { AbstractEditorWithViewState } from 'vs/workbench/browser/parts/editor/editorWithViewState';\nimport { ITextResourceConfigurationService } from 'vs/editor/common/services/textResourceConfiguration';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { IBoundarySashes } from 'vs/base/browser/ui/sash/sash';\n\ninterface ISideBySideEditorViewState {\n\tprimary: object;\n\tsecondary: object;\n\tfocus: Side.PRIMARY | Side.SECONDARY | undefined;\n\tratio: number | undefined;\n}\n\nfunction isSideBySideEditorViewState(thing: unknown): thing is ISideBySideEditorViewState {\n\tconst candidate = thing as ISideBySideEditorViewState | undefined;\n\n\treturn typeof candidate?.primary === 'object' && typeof candidate.secondary === 'object';\n}\n\ninterface ISideBySideEditorOptions extends IEditorOptions {\n\n\t/**\n\t * Whether the editor options should apply to\n\t * the primary or secondary side.\n\t *\n\t * If a target side is provided, that side will\n\t * also receive keyboard focus unless focus is\n\t * to be preserved.\n\t */\n\ttarget?: Side.PRIMARY | Side.SECONDARY;\n}\n\nexport class SideBySideEditor extends AbstractEditorWithViewState<ISideBySideEditorViewState> implements IEditorPaneWithSelection {\n\n\tstatic readonly ID: string = SIDE_BY_SIDE_EDITOR_ID;\n\n\tstatic SIDE_BY_SIDE_LAYOUT_SETTING = 'workbench.editor.splitInGroupLayout';\n\n\tprivate static readonly VIEW_STATE_PREFERENCE_KEY = 'sideBySideEditorViewState';\n\n\t//#region Layout Constraints\n\n\tprivate get minimumPrimaryWidth() { return this.primaryEditorPane ? this.primaryEditorPane.minimumWidth : 0; }\n\tprivate get maximumPrimaryWidth() { return this.primaryEditorPane ? this.primaryEditorPane.maximumWidth : Number.POSITIVE_INFINITY; }\n\tprivate get minimumPrimaryHeight() { return this.primaryEditorPane ? this.primaryEditorPane.minimumHeight : 0; }\n\tprivate get maximumPrimaryHeight() { return this.primaryEditorPane ? this.primaryEditorPane.maximumHeight : Number.POSITIVE_INFINITY; }\n\n\tprivate get minimumSecondaryWidth() { return this.secondaryEditorPane ? this.secondaryEditorPane.minimumWidth : 0; }\n\tprivate get maximumSecondaryWidth() { return this.secondaryEditorPane ? this.secondaryEditorPane.maximumWidth : Number.POSITIVE_INFINITY; }\n\tprivate get minimumSecondaryHeight() { return this.secondaryEditorPane ? this.secondaryEditorPane.minimumHeight : 0; }\n\tprivate get maximumSecondaryHeight() { return this.secondaryEditorPane ? this.secondaryEditorPane.maximumHeight : Number.POSITIVE_INFINITY; }\n\n\toverride set minimumWidth(value: number) { /* noop */ }\n\toverride set maximumWidth(value: number) { /* noop */ }\n\toverride set minimumHeight(value: number) { /* noop */ }\n\toverride set maximumHeight(value: number) { /* noop */ }\n\n\toverride get minimumWidth() { return this.minimumPrimaryWidth + this.minimumSecondaryWidth; }\n\toverride get maximumWidth() { return this.maximumPrimaryWidth + this.maximumSecondaryWidth; }\n\toverride get minimumHeight() { return this.minimumPrimaryHeight + this.minimumSecondaryHeight; }\n\toverride get maximumHeight() { return this.maximumPrimaryHeight + this.maximumSecondaryHeight; }\n\n\tprivate _boundarySashes: IBoundarySashes | undefined;\n\n\t//#endregion\n\n\t//#region Events\n\n\tprivate onDidCreateEditors = this._register(new Emitter<{ width: number; height: number } | undefined>());\n\n\tprivate _onDidChangeSizeConstraints = this._register(new Relay<{ width: number; height: number } | undefined>());\n\toverride readonly onDidChangeSizeConstraints = Event.any(this.onDidCreateEditors.event, this._onDidChangeSizeConstraints.event);\n\n\tprivate readonly _onDidChangeSelection = this._register(new Emitter<IEditorPaneSelectionChangeEvent>());\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\n\t//#endregion\n\n\tprivate primaryEditorPane: EditorPane | undefined = undefined;\n\tprivate secondaryEditorPane: EditorPane | undefined = undefined;\n\n\tprivate primaryEditorContainer: HTMLElement | undefined;\n\tprivate secondaryEditorContainer: HTMLElement | undefined;\n\n\tprivate splitview: SplitView | undefined;\n\n\tprivate readonly splitviewDisposables = this._register(new DisposableStore());\n\tprivate readonly editorDisposables = this._register(new DisposableStore());\n\n\tprivate orientation = this.configurationService.getValue<'vertical' | 'horizontal'>(SideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING) === 'vertical' ? Orientation.VERTICAL : Orientation.HORIZONTAL;\n\tprivate dimension = new Dimension(0, 0);\n\n\tprivate lastFocusedSide: Side.PRIMARY | Side.SECONDARY | undefined = undefined;\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(SideBySideEditor.ID, SideBySideEditor.VIEW_STATE_PREFERENCE_KEY, telemetryService, instantiationService, storageService, textResourceConfigurationService, themeService, editorService, editorGroupService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(e)));\n\t}\n\n\tprivate onConfigurationUpdated(event: IConfigurationChangeEvent): void {\n\t\tif (event.affectsConfiguration(SideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING)) {\n\t\t\tthis.orientation = this.configurationService.getValue<'vertical' | 'horizontal'>(SideBySideEditor.SIDE_BY_SIDE_LAYOUT_SETTING) === 'vertical' ? Orientation.VERTICAL : Orientation.HORIZONTAL;\n\n\t\t\t// If config updated from event, re-create the split\n\t\t\t// editor using the new layout orientation if it was\n\t\t\t// already created.\n\t\t\tif (this.splitview) {\n\t\t\t\tthis.recreateSplitview();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate recreateSplitview(): void {\n\t\tconst container = assertIsDefined(this.getContainer());\n\n\t\t// Clear old (if any) but remember ratio\n\t\tconst ratio = this.getSplitViewRatio();\n\t\tif (this.splitview) {\n\t\t\tcontainer.removeChild(this.splitview.el);\n\t\t\tthis.splitviewDisposables.clear();\n\t\t}\n\n\t\t// Create new\n\t\tthis.createSplitView(container, ratio);\n\n\t\tthis.layout(this.dimension);\n\t}\n\n\tprivate getSplitViewRatio(): number | undefined {\n\t\tlet ratio: number | undefined = undefined;\n\n\t\tif (this.splitview) {\n\t\t\tconst leftViewSize = this.splitview.getViewSize(0);\n\t\t\tconst rightViewSize = this.splitview.getViewSize(1);\n\n\t\t\t// Only return a ratio when the view size is significantly\n\t\t\t// enough different for left and right view sizes\n\t\t\tif (Math.abs(leftViewSize - rightViewSize) > 1) {\n\t\t\t\tconst totalSize = this.splitview.orientation === Orientation.HORIZONTAL ? this.dimension.width : this.dimension.height;\n\t\t\t\tratio = leftViewSize / totalSize;\n\t\t\t}\n\t\t}\n\n\t\treturn ratio;\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tparent.classList.add('side-by-side-editor');\n\n\t\t// Editor pane containers\n\t\tthis.secondaryEditorContainer = $('.side-by-side-editor-container.editor-instance');\n\t\tthis.primaryEditorContainer = $('.side-by-side-editor-container.editor-instance');\n\n\t\t// Split view\n\t\tthis.createSplitView(parent);\n\t}\n\n\tprivate createSplitView(parent: HTMLElement, ratio?: number): void {\n\n\t\t// Splitview widget\n\t\tthis.splitview = this.splitviewDisposables.add(new SplitView(parent, { orientation: this.orientation }));\n\t\tthis.splitviewDisposables.add(this.splitview.onDidSashReset(() => this.splitview?.distributeViewSizes()));\n\n\t\tif (this.orientation === Orientation.HORIZONTAL) {\n\t\t\tthis.splitview.orthogonalEndSash = this._boundarySashes?.bottom;\n\t\t} else {\n\t\t\tthis.splitview.orthogonalStartSash = this._boundarySashes?.left;\n\t\t\tthis.splitview.orthogonalEndSash = this._boundarySashes?.right;\n\t\t}\n\n\t\t// Figure out sizing\n\t\tlet leftSizing: number | Sizing = Sizing.Distribute;\n\t\tlet rightSizing: number | Sizing = Sizing.Distribute;\n\t\tif (ratio) {\n\t\t\tconst totalSize = this.splitview.orientation === Orientation.HORIZONTAL ? this.dimension.width : this.dimension.height;\n\n\t\t\tleftSizing = Math.round(totalSize * ratio);\n\t\t\trightSizing = totalSize - leftSizing;\n\n\t\t\t// We need to call `layout` for the `ratio` to have any effect\n\t\t\tthis.splitview.layout(this.orientation === Orientation.HORIZONTAL ? this.dimension.width : this.dimension.height);\n\t\t}\n\n\t\t// Secondary (left)\n\t\tconst secondaryEditorContainer = assertIsDefined(this.secondaryEditorContainer);\n\t\tthis.splitview.addView({\n\t\t\telement: secondaryEditorContainer,\n\t\t\tlayout: size => this.layoutPane(this.secondaryEditorPane, size),\n\t\t\tminimumSize: this.orientation === Orientation.HORIZONTAL ? DEFAULT_EDITOR_MIN_DIMENSIONS.width : DEFAULT_EDITOR_MIN_DIMENSIONS.height,\n\t\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\t\tonDidChange: Event.None\n\t\t}, leftSizing);\n\n\t\t// Primary (right)\n\t\tconst primaryEditorContainer = assertIsDefined(this.primaryEditorContainer);\n\t\tthis.splitview.addView({\n\t\t\telement: primaryEditorContainer,\n\t\t\tlayout: size => this.layoutPane(this.primaryEditorPane, size),\n\t\t\tminimumSize: this.orientation === Orientation.HORIZONTAL ? DEFAULT_EDITOR_MIN_DIMENSIONS.width : DEFAULT_EDITOR_MIN_DIMENSIONS.height,\n\t\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\t\tonDidChange: Event.None\n\t\t}, rightSizing);\n\n\t\tthis.updateStyles();\n\t}\n\n\toverride getTitle(): string {\n\t\tif (this.input) {\n\t\t\treturn this.input.getName();\n\t\t}\n\n\t\treturn localize('sideBySideEditor', \"Side by Side Editor\");\n\t}\n\n\toverride async setInput(input: SideBySideEditorInput, options: ISideBySideEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tconst oldInput = this.input;\n\t\tawait super.setInput(input, options, context, token);\n\n\t\t// Create new side by side editors if either we have not\n\t\t// been created before or the input no longer matches.\n\t\tif (!oldInput || !input.matches(oldInput)) {\n\t\t\tif (oldInput) {\n\t\t\t\tthis.disposeEditors();\n\t\t\t}\n\n\t\t\tthis.createEditors(input);\n\t\t}\n\n\t\t// Restore any previous view state\n\t\tconst { primary, secondary, viewState } = this.loadViewState(input, options, context);\n\t\tthis.lastFocusedSide = viewState?.focus;\n\n\t\tif (typeof viewState?.ratio === 'number' && this.splitview) {\n\t\t\tconst totalSize = this.splitview.orientation === Orientation.HORIZONTAL ? this.dimension.width : this.dimension.height;\n\n\t\t\tthis.splitview.resizeView(0, Math.round(totalSize * viewState.ratio));\n\t\t} else {\n\t\t\tthis.splitview?.distributeViewSizes();\n\t\t}\n\n\t\t// Set input to both sides\n\t\tawait Promise.all([\n\t\t\tthis.secondaryEditorPane?.setInput(input.secondary, secondary, context, token),\n\t\t\tthis.primaryEditorPane?.setInput(input.primary, primary, context, token)\n\t\t]);\n\n\t\t// Update focus if target is provided\n\t\tif (typeof options?.target === 'number') {\n\t\t\tthis.lastFocusedSide = options.target;\n\t\t}\n\t}\n\n\tprivate loadViewState(input: SideBySideEditorInput, options: ISideBySideEditorOptions | undefined, context: IEditorOpenContext): { primary: IEditorOptions | undefined; secondary: IEditorOptions | undefined; viewState: ISideBySideEditorViewState | undefined } {\n\t\tconst viewState = isSideBySideEditorViewState(options?.viewState) ? options?.viewState : this.loadEditorViewState(input, context);\n\n\t\tlet primaryOptions: IEditorOptions = Object.create(null);\n\t\tlet secondaryOptions: IEditorOptions | undefined = undefined;\n\n\t\t// Depending on the optional `target` property, we apply\n\t\t// the provided options to either the primary or secondary\n\t\t// side\n\n\t\tif (options?.target === Side.SECONDARY) {\n\t\t\tsecondaryOptions = { ...options };\n\t\t} else {\n\t\t\tprimaryOptions = { ...options };\n\t\t}\n\n\t\tprimaryOptions.viewState = viewState?.primary;\n\n\t\tif (viewState?.secondary) {\n\t\t\tif (!secondaryOptions) {\n\t\t\t\tsecondaryOptions = { viewState: viewState.secondary };\n\t\t\t} else {\n\t\t\t\tsecondaryOptions.viewState = viewState?.secondary;\n\t\t\t}\n\t\t}\n\n\t\treturn { primary: primaryOptions, secondary: secondaryOptions, viewState };\n\t}\n\n\tprivate createEditors(newInput: SideBySideEditorInput): void {\n\n\t\t// Create editors\n\t\tthis.secondaryEditorPane = this.doCreateEditor(newInput.secondary, assertIsDefined(this.secondaryEditorContainer));\n\t\tthis.primaryEditorPane = this.doCreateEditor(newInput.primary, assertIsDefined(this.primaryEditorContainer));\n\n\t\t// Layout\n\t\tthis.layout(this.dimension);\n\n\t\t// Eventing\n\t\tthis._onDidChangeSizeConstraints.input = Event.any(\n\t\t\tEvent.map(this.secondaryEditorPane.onDidChangeSizeConstraints, () => undefined),\n\t\t\tEvent.map(this.primaryEditorPane.onDidChangeSizeConstraints, () => undefined)\n\t\t);\n\t\tthis.onDidCreateEditors.fire(undefined);\n\n\t\t// Track focus and signal active control change via event\n\t\tthis.editorDisposables.add(this.primaryEditorPane.onDidFocus(() => this.onDidFocusChange(Side.PRIMARY)));\n\t\tthis.editorDisposables.add(this.secondaryEditorPane.onDidFocus(() => this.onDidFocusChange(Side.SECONDARY)));\n\t}\n\n\tprivate doCreateEditor(editorInput: EditorInput, container: HTMLElement): EditorPane {\n\t\tconst editorPaneDescriptor = Registry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).getEditorPane(editorInput);\n\t\tif (!editorPaneDescriptor) {\n\t\t\tthrow new Error('No editor pane descriptor for editor found');\n\t\t}\n\n\t\t// Create editor pane and make visible\n\t\tconst editorPane = editorPaneDescriptor.instantiate(this.instantiationService);\n\t\teditorPane.create(container);\n\t\teditorPane.setVisible(this.isVisible(), this.group);\n\n\t\t// Track selections if supported\n\t\tif (isEditorPaneWithSelection(editorPane)) {\n\t\t\tthis.editorDisposables.add(editorPane.onDidChangeSelection(e => this._onDidChangeSelection.fire(e)));\n\t\t}\n\n\t\t// Track for disposal\n\t\tthis.editorDisposables.add(editorPane);\n\n\t\treturn editorPane;\n\t}\n\n\tprivate onDidFocusChange(side: Side.PRIMARY | Side.SECONDARY): void {\n\t\tthis.lastFocusedSide = side;\n\n\t\t// Signal to outside that our active control changed\n\t\tthis._onDidChangeControl.fire();\n\t}\n\n\tgetSelection(): IEditorPaneSelection | undefined {\n\t\tconst lastFocusedEditorPane = this.getLastFocusedEditorPane();\n\t\tif (isEditorPaneWithSelection(lastFocusedEditorPane)) {\n\t\t\tconst selection = lastFocusedEditorPane.getSelection();\n\t\t\tif (selection) {\n\t\t\t\treturn new SideBySideAwareEditorPaneSelection(selection, lastFocusedEditorPane === this.primaryEditorPane ? Side.PRIMARY : Side.SECONDARY);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride setOptions(options: ISideBySideEditorOptions | undefined): void {\n\t\tsuper.setOptions(options);\n\n\t\t// Update focus if target is provided\n\t\tif (typeof options?.target === 'number') {\n\t\t\tthis.lastFocusedSide = options.target;\n\t\t}\n\n\t\t// Apply to focused side\n\t\tthis.getLastFocusedEditorPane()?.setOptions(options);\n\t}\n\n\tprotected override setEditorVisible(visible: boolean, group: IEditorGroup | undefined): void {\n\n\t\t// Forward to both sides\n\t\tthis.primaryEditorPane?.setVisible(visible, group);\n\t\tthis.secondaryEditorPane?.setVisible(visible, group);\n\n\t\tsuper.setEditorVisible(visible, group);\n\t}\n\n\toverride clearInput(): void {\n\t\tsuper.clearInput();\n\n\t\t// Forward to both sides\n\t\tthis.primaryEditorPane?.clearInput();\n\t\tthis.secondaryEditorPane?.clearInput();\n\n\t\t// Since we do not keep side editors alive\n\t\t// we dispose any editor created for recreation\n\t\tthis.disposeEditors();\n\t}\n\n\toverride focus(): void {\n\t\tthis.getLastFocusedEditorPane()?.focus();\n\t}\n\n\tprivate getLastFocusedEditorPane(): EditorPane | undefined {\n\t\tif (this.lastFocusedSide === Side.SECONDARY) {\n\t\t\treturn this.secondaryEditorPane;\n\t\t}\n\n\t\treturn this.primaryEditorPane;\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis.dimension = dimension;\n\n\t\tconst splitview = assertIsDefined(this.splitview);\n\t\tsplitview.layout(this.orientation === Orientation.HORIZONTAL ? dimension.width : dimension.height);\n\t}\n\n\toverride setBoundarySashes(sashes: IBoundarySashes) {\n\t\tthis._boundarySashes = sashes;\n\n\t\tif (this.splitview) {\n\t\t\tthis.splitview.orthogonalEndSash = sashes.bottom;\n\t\t}\n\t}\n\n\tprivate layoutPane(pane: EditorPane | undefined, size: number): void {\n\t\tpane?.layout(this.orientation === Orientation.HORIZONTAL ? new Dimension(size, this.dimension.height) : new Dimension(this.dimension.width, size));\n\t}\n\n\toverride getControl(): IEditorControl | undefined {\n\t\treturn this.getLastFocusedEditorPane()?.getControl();\n\t}\n\n\tgetPrimaryEditorPane(): IEditorPane | undefined {\n\t\treturn this.primaryEditorPane;\n\t}\n\n\tgetSecondaryEditorPane(): IEditorPane | undefined {\n\t\treturn this.secondaryEditorPane;\n\t}\n\n\tprotected tracksEditorViewState(input: EditorInput): boolean {\n\t\treturn input instanceof SideBySideEditorInput;\n\t}\n\n\tprotected computeEditorViewState(resource: URI): ISideBySideEditorViewState | undefined {\n\t\tif (!this.input || !isEqual(resource, this.toEditorViewStateResource(this.input))) {\n\t\t\treturn; // unexpected state\n\t\t}\n\n\t\tconst primarViewState = this.primaryEditorPane?.getViewState();\n\t\tconst secondaryViewState = this.secondaryEditorPane?.getViewState();\n\n\t\tif (!primarViewState || !secondaryViewState) {\n\t\t\treturn; // we actually need view states\n\t\t}\n\n\t\treturn {\n\t\t\tprimary: primarViewState,\n\t\t\tsecondary: secondaryViewState,\n\t\t\tfocus: this.lastFocusedSide,\n\t\t\tratio: this.getSplitViewRatio()\n\t\t};\n\t}\n\n\tprotected toEditorViewStateResource(input: EditorInput): URI | undefined {\n\t\tlet primary: URI | undefined;\n\t\tlet secondary: URI | undefined;\n\n\t\tif (input instanceof SideBySideEditorInput) {\n\t\t\tprimary = input.primary.resource;\n\t\t\tsecondary = input.secondary.resource;\n\t\t}\n\n\t\tif (!secondary || !primary) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// create a URI that is the Base64 concatenation of original + modified resource\n\t\treturn URI.from({ scheme: 'sideBySide', path: `${multibyteAwareBtoa(secondary.toString())}${multibyteAwareBtoa(primary.toString())}` });\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tif (this.primaryEditorContainer) {\n\t\t\tif (this.orientation === Orientation.HORIZONTAL) {\n\t\t\t\tthis.primaryEditorContainer.style.borderLeftWidth = '1px';\n\t\t\t\tthis.primaryEditorContainer.style.borderLeftStyle = 'solid';\n\t\t\t\tthis.primaryEditorContainer.style.borderLeftColor = this.getColor(SIDE_BY_SIDE_EDITOR_VERTICAL_BORDER) ?? '';\n\n\t\t\t\tthis.primaryEditorContainer.style.borderTopWidth = '0';\n\t\t\t} else {\n\t\t\t\tthis.primaryEditorContainer.style.borderTopWidth = '1px';\n\t\t\t\tthis.primaryEditorContainer.style.borderTopStyle = 'solid';\n\t\t\t\tthis.primaryEditorContainer.style.borderTopColor = this.getColor(SIDE_BY_SIDE_EDITOR_HORIZONTAL_BORDER) ?? '';\n\n\t\t\t\tthis.primaryEditorContainer.style.borderLeftWidth = '0';\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.disposeEditors();\n\n\t\tsuper.dispose();\n\t}\n\n\tprivate disposeEditors(): void {\n\t\tthis.editorDisposables.clear();\n\n\t\tthis.secondaryEditorPane = undefined;\n\t\tthis.primaryEditorPane = undefined;\n\n\t\tthis.lastFocusedSide = undefined;\n\n\t\tif (this.secondaryEditorContainer) {\n\t\t\tclearNode(this.secondaryEditorContainer);\n\t\t}\n\n\t\tif (this.primaryEditorContainer) {\n\t\t\tclearNode(this.primaryEditorContainer);\n\t\t}\n\t}\n}\n\nclass SideBySideAwareEditorPaneSelection implements IEditorPaneSelection {\n\n\tconstructor(\n\t\tprivate readonly selection: IEditorPaneSelection,\n\t\tprivate readonly side: Side.PRIMARY | Side.SECONDARY\n\t) { }\n\n\tcompare(other: IEditorPaneSelection): EditorPaneSelectionCompareResult {\n\t\tif (!(other instanceof SideBySideAwareEditorPaneSelection)) {\n\t\t\treturn EditorPaneSelectionCompareResult.DIFFERENT;\n\t\t}\n\n\t\tif (this.side !== other.side) {\n\t\t\treturn EditorPaneSelectionCompareResult.DIFFERENT;\n\t\t}\n\n\t\treturn this.selection.compare(other.selection);\n\t}\n\n\trestore(options: IEditorOptions): ISideBySideEditorOptions {\n\t\tconst sideBySideEditorOptions: ISideBySideEditorOptions = {\n\t\t\t...options,\n\t\t\ttarget: this.side\n\t\t};\n\n\t\treturn this.selection.restore(sideBySideEditorOptions);\n\t}\n}\n"]}