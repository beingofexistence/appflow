{"version":3,"sources":["vs/workbench/browser/parts/activitybar/activitybarActions.ts"],"names":[],"mappings":"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","file":"activitybarActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/activityaction';\nimport { localize } from 'vs/nls';\nimport { EventType, addDisposableListener, EventHelper, append, $, clearNode, hide, show } from 'vs/base/browser/dom';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { EventType as TouchEventType, GestureEvent } from 'vs/base/browser/touch';\nimport { Action, IAction, Separator, SubmenuAction, toAction } from 'vs/base/common/actions';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IMenuService, MenuId, IMenu, registerAction2, Action2, IAction2Options } from 'vs/platform/actions/common/actions';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { activeContrastBorder, focusBorder } from 'vs/platform/theme/common/colorRegistry';\nimport { IColorTheme, IThemeService, registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { ActivityAction, ActivityActionViewItem, IActivityActionViewItemOptions, IActivityHoverOptions, ICompositeBar, ICompositeBarColors, ToggleCompositeBadgeAction, ToggleCompositePinnedAction } from 'vs/workbench/browser/parts/compositeBarActions';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { IActivity } from 'vs/workbench/common/activity';\nimport { ACTIVITY_BAR_ACTIVE_FOCUS_BORDER, ACTIVITY_BAR_ACTIVE_BACKGROUND, ACTIVITY_BAR_ACTIVE_BORDER } from 'vs/workbench/common/theme';\nimport { IWorkbenchLayoutService, Parts } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { createAndFillInActionBarActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { AuthenticationSessionInfo, getCurrentAuthenticationSessionInfo } from 'vs/workbench/services/authentication/browser/authenticationService';\nimport { AuthenticationSessionAccount, IAuthenticationService } from 'vs/workbench/services/authentication/common/authentication';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { AnchorAlignment, AnchorAxisAlignment } from 'vs/base/browser/ui/contextview/contextview';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IHoverService } from 'vs/workbench/services/hover/browser/hover';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { ViewContainerLocation } from 'vs/workbench/common/views';\nimport { IPaneCompositePart } from 'vs/workbench/browser/parts/paneCompositePart';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ISecretStorageService } from 'vs/platform/secrets/common/secrets';\nimport { ILifecycleService, LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { runWhenIdle } from 'vs/base/common/async';\nimport { Lazy } from 'vs/base/common/lazy';\n\nexport class ViewContainerActivityAction extends ActivityAction {\n\n\tprivate static readonly preventDoubleClickDelay = 300;\n\n\tprivate lastRun = 0;\n\n\tconstructor(\n\t\tactivity: IActivity,\n\t\tprivate readonly paneCompositePart: IPaneCompositePart,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(activity);\n\t}\n\n\tupdateActivity(activity: IActivity): void {\n\t\tthis.activity = activity;\n\t}\n\n\toverride async run(event: { preserveFocus: boolean }): Promise<void> {\n\t\tif (event instanceof MouseEvent && event.button === 2) {\n\t\t\treturn; // do not run on right click\n\t\t}\n\n\t\t// prevent accident trigger on a doubleclick (to help nervous people)\n\t\tconst now = Date.now();\n\t\tif (now > this.lastRun /* https://github.com/microsoft/vscode/issues/25830 */ && now - this.lastRun < ViewContainerActivityAction.preventDoubleClickDelay) {\n\t\t\treturn;\n\t\t}\n\t\tthis.lastRun = now;\n\n\t\tconst sideBarVisible = this.layoutService.isVisible(Parts.SIDEBAR_PART);\n\t\tconst activeViewlet = this.paneCompositePart.getActivePaneComposite();\n\t\tconst focusBehavior = this.configurationService.getValue<string>('workbench.activityBar.iconClickBehavior');\n\n\t\tconst focus = (event && 'preserveFocus' in event) ? !event.preserveFocus : true;\n\t\tif (sideBarVisible && activeViewlet?.getId() === this.activity.id) {\n\t\t\tswitch (focusBehavior) {\n\t\t\t\tcase 'focus':\n\t\t\t\t\tthis.logAction('refocus');\n\t\t\t\t\tthis.paneCompositePart.openPaneComposite(this.activity.id, focus);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'toggle':\n\t\t\t\tdefault:\n\t\t\t\t\t// Hide sidebar if selected viewlet already visible\n\t\t\t\t\tthis.logAction('hide');\n\t\t\t\t\tthis.layoutService.setPartHidden(true, Parts.SIDEBAR_PART);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logAction('show');\n\t\tawait this.paneCompositePart.openPaneComposite(this.activity.id, focus);\n\n\t\treturn this.activate();\n\t}\n\n\tprivate logAction(action: string) {\n\t\ttype ActivityBarActionClassification = {\n\t\t\towner: 'sbatten';\n\t\t\tcomment: 'Event logged when an activity bar action is triggered.';\n\t\t\tviewletId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The view in the activity bar for which the action was performed.' };\n\t\t\taction: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The action that was performed. e.g. \"hide\", \"show\", or \"refocus\"' };\n\t\t};\n\t\tthis.telemetryService.publicLog2<{ viewletId: String; action: String }, ActivityBarActionClassification>('activityBarAction', { viewletId: this.activity.id, action });\n\t}\n}\n\nabstract class AbstractGlobalActivityActionViewItem extends ActivityActionViewItem {\n\n\tconstructor(\n\t\taction: ActivityAction,\n\t\tprivate contextMenuActionsProvider: () => IAction[],\n\t\toptions: IActivityActionViewItemOptions,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService protected readonly menuService: IMenuService,\n\t\t@IContextMenuService protected readonly contextMenuService: IContextMenuService,\n\t\t@IContextKeyService protected readonly contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IWorkbenchEnvironmentService protected readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t) {\n\t\tsuper(action, options, () => true, themeService, hoverService, configurationService, keybindingService);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis._register(addDisposableListener(this.container, EventType.MOUSE_DOWN, async (e: MouseEvent) => {\n\t\t\tEventHelper.stop(e, true);\n\t\t\tconst isLeftClick = e?.button !== 2;\n\t\t\t// Left-click run\n\t\t\tif (isLeftClick) {\n\t\t\t\tthis.run();\n\t\t\t}\n\t\t}));\n\n\t\t// The rest of the activity bar uses context menu event for the context menu, so we match this\n\t\tthis._register(addDisposableListener(this.container, EventType.CONTEXT_MENU, async (e: MouseEvent) => {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst actions = await this.resolveContextMenuActions(disposables);\n\n\t\t\tconst event = new StandardMouseEvent(e);\n\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => event,\n\t\t\t\tgetActions: () => actions,\n\t\t\t\tonHide: () => disposables.dispose()\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.container, EventType.KEY_UP, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.Enter) || event.equals(KeyCode.Space)) {\n\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\tthis.run();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.container, TouchEventType.Tap, (e: GestureEvent) => {\n\t\t\tEventHelper.stop(e, true);\n\t\t\tthis.run();\n\t\t}));\n\t}\n\n\tprotected async resolveContextMenuActions(disposables: DisposableStore): Promise<IAction[]> {\n\t\treturn this.contextMenuActionsProvider();\n\t}\n\n\tprotected abstract run(): Promise<void>;\n}\n\nclass MenuActivityActionViewItem extends AbstractGlobalActivityActionViewItem {\n\n\tconstructor(\n\t\tprivate readonly menuId: MenuId,\n\t\taction: ActivityAction,\n\t\tcontextMenuActionsProvider: () => IAction[],\n\t\ticon: boolean,\n\t\tcolors: (theme: IColorTheme) => ICompositeBarColors,\n\t\thoverOptions: IActivityHoverOptions,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t) {\n\t\tsuper(action, contextMenuActionsProvider, { draggable: false, colors, icon, hasPopup: true, hoverOptions }, themeService, hoverService, menuService, contextMenuService, contextKeyService, configurationService, environmentService, keybindingService);\n\t}\n\n\tprotected async run(): Promise<void> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst menu = disposables.add(this.menuService.createMenu(this.menuId, this.contextKeyService));\n\t\tconst actions = await this.resolveMainMenuActions(menu, disposables);\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => this.container,\n\t\t\tanchorAlignment: this.configurationService.getValue('workbench.sideBar.location') === 'left' ? AnchorAlignment.RIGHT : AnchorAlignment.LEFT,\n\t\t\tanchorAxisAlignment: AnchorAxisAlignment.HORIZONTAL,\n\t\t\tgetActions: () => actions,\n\t\t\tonHide: () => disposables.dispose(),\n\t\t\tmenuActionOptions: { renderShortTitle: true },\n\t\t});\n\n\t}\n\n\tprotected async resolveMainMenuActions(menu: IMenu, _disposable: DisposableStore): Promise<IAction[]> {\n\t\tconst actions: IAction[] = [];\n\t\tcreateAndFillInActionBarActions(menu, { renderShortTitle: true }, { primary: [], secondary: actions });\n\t\treturn actions;\n\t}\n\n}\n\nexport class AccountsActivityActionViewItem extends MenuActivityActionViewItem {\n\n\tstatic readonly ACCOUNTS_VISIBILITY_PREFERENCE_KEY = 'workbench.activity.showAccounts';\n\n\tprivate readonly groupedAccounts: Map<string, (AuthenticationSessionAccount & { canSignOut: boolean })[]> = new Map();\n\tprivate readonly problematicProviders: Set<string> = new Set();\n\n\tprivate initialized = false;\n\tprivate sessionFromEmbedder = new Lazy<Promise<AuthenticationSessionInfo | undefined>>(() => getCurrentAuthenticationSessionInfo(this.secretStorageService, this.productService));\n\n\tconstructor(\n\t\taction: ActivityAction,\n\t\tcontextMenuActionsProvider: () => IAction[],\n\t\tcolors: (theme: IColorTheme) => ICompositeBarColors,\n\t\tactivityHoverOptions: IActivityHoverOptions,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IAuthenticationService private readonly authenticationService: IAuthenticationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ISecretStorageService private readonly secretStorageService: ISecretStorageService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper(MenuId.AccountsContext, action, contextMenuActionsProvider, true, colors, activityHoverOptions, themeService, hoverService, menuService, contextMenuService, contextKeyService, configurationService, environmentService, keybindingService);\n\t\tthis.registerListeners();\n\t\tthis.initialize();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.authenticationService.onDidRegisterAuthenticationProvider(async (e) => {\n\t\t\tawait this.addAccountsFromProvider(e.id);\n\t\t}));\n\n\t\tthis._register(this.authenticationService.onDidUnregisterAuthenticationProvider((e) => {\n\t\t\tthis.groupedAccounts.delete(e.id);\n\t\t\tthis.problematicProviders.delete(e.id);\n\t\t}));\n\n\t\tthis._register(this.authenticationService.onDidChangeSessions(async e => {\n\t\t\tfor (const changed of [...e.event.changed, ...e.event.added]) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.addOrUpdateAccount(e.providerId, changed.account);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const removed of e.event.removed) {\n\t\t\t\tthis.removeAccount(e.providerId, removed.account);\n\t\t\t}\n\t\t}));\n\t}\n\n\t// This function exists to ensure that the accounts are added for auth providers that had already been registered\n\t// before the menu was created.\n\tprivate async initialize(): Promise<void> {\n\t\t// Resolving the menu doesn't need to happen immediately, so we can wait until after the workbench has been restored\n\t\t// and only run this when the system is idle.\n\t\tawait this.lifecycleService.when(LifecyclePhase.Restored);\n\t\tconst disposable = this._register(runWhenIdle(async () => {\n\t\t\tawait this.doInitialize();\n\t\t\tdisposable.dispose();\n\t\t}));\n\t}\n\n\tprivate async doInitialize(): Promise<void> {\n\t\tconst providerIds = this.authenticationService.getProviderIds();\n\t\tconst results = await Promise.allSettled(providerIds.map(providerId => this.addAccountsFromProvider(providerId)));\n\n\t\t// Log any errors that occurred while initializing. We try to be best effort here to show the most amount of accounts\n\t\tfor (const result of results) {\n\t\t\tif (result.status === 'rejected') {\n\t\t\t\tthis.logService.error(result.reason);\n\t\t\t}\n\t\t}\n\n\t\tthis.initialized = true;\n\t}\n\n\t//#region overrides\n\n\tprotected override async resolveMainMenuActions(accountsMenu: IMenu, disposables: DisposableStore): Promise<IAction[]> {\n\t\tawait super.resolveMainMenuActions(accountsMenu, disposables);\n\n\t\tconst providers = this.authenticationService.getProviderIds();\n\t\tconst otherCommands = accountsMenu.getActions();\n\t\tlet menus: IAction[] = [];\n\n\t\tfor (const providerId of providers) {\n\t\t\tif (!this.initialized) {\n\t\t\t\tconst noAccountsAvailableAction = disposables.add(new Action('noAccountsAvailable', localize('loading', \"Loading...\"), undefined, false));\n\t\t\t\tmenus.push(noAccountsAvailableAction);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst providerLabel = this.authenticationService.getLabel(providerId);\n\t\t\tconst accounts = this.groupedAccounts.get(providerId);\n\t\t\tif (!accounts) {\n\t\t\t\tif (this.problematicProviders.has(providerId)) {\n\t\t\t\t\tconst providerUnavailableAction = disposables.add(new Action('providerUnavailable', localize('authProviderUnavailable', '{0} is currently unavailable', providerLabel), undefined, false));\n\t\t\t\t\tmenus.push(providerUnavailableAction);\n\t\t\t\t\t// try again in the background so that if the failure was intermittent, we can resolve it on the next showing of the menu\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.addAccountsFromProvider(providerId);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const account of accounts) {\n\t\t\t\tconst manageExtensionsAction = disposables.add(new Action(`configureSessions${account.label}`, localize('manageTrustedExtensions', \"Manage Trusted Extensions\"), undefined, true, () => {\n\t\t\t\t\treturn this.authenticationService.manageTrustedExtensionsForAccount(providerId, account.label);\n\t\t\t\t}));\n\n\t\t\t\tconst providerSubMenuActions: Action[] = [manageExtensionsAction];\n\n\t\t\t\tif (account.canSignOut) {\n\t\t\t\t\tconst signOutAction = disposables.add(new Action('signOut', localize('signOut', \"Sign Out\"), undefined, true, async () => {\n\t\t\t\t\t\tconst allSessions = await this.authenticationService.getSessions(providerId);\n\t\t\t\t\t\tconst sessionsForAccount = allSessions.filter(s => s.account.id === account.id);\n\t\t\t\t\t\treturn await this.authenticationService.removeAccountSessions(providerId, account.label, sessionsForAccount);\n\t\t\t\t\t}));\n\t\t\t\t\tproviderSubMenuActions.push(signOutAction);\n\t\t\t\t}\n\n\t\t\t\tconst providerSubMenu = new SubmenuAction('activitybar.submenu', `${account.label} (${providerLabel})`, providerSubMenuActions);\n\t\t\t\tmenus.push(providerSubMenu);\n\t\t\t}\n\t\t}\n\n\t\tif (providers.length && !menus.length) {\n\t\t\tconst noAccountsAvailableAction = disposables.add(new Action('noAccountsAvailable', localize('noAccounts', \"You are not signed in to any accounts\"), undefined, false));\n\t\t\tmenus.push(noAccountsAvailableAction);\n\t\t}\n\n\t\tif (menus.length && otherCommands.length) {\n\t\t\tmenus.push(new Separator());\n\t\t}\n\n\t\totherCommands.forEach((group, i) => {\n\t\t\tconst actions = group[1];\n\t\t\tmenus = menus.concat(actions);\n\t\t\tif (i !== otherCommands.length - 1) {\n\t\t\t\tmenus.push(new Separator());\n\t\t\t}\n\t\t});\n\n\t\treturn menus;\n\t}\n\n\tprotected override async resolveContextMenuActions(disposables: DisposableStore): Promise<IAction[]> {\n\t\tconst actions = await super.resolveContextMenuActions(disposables);\n\n\t\tactions.unshift(...[\n\t\t\ttoAction({ id: 'hideAccounts', label: localize('hideAccounts', \"Hide Accounts\"), run: () => this.storageService.store(AccountsActivityActionViewItem.ACCOUNTS_VISIBILITY_PREFERENCE_KEY, false, StorageScope.PROFILE, StorageTarget.USER) }),\n\t\t\tnew Separator()\n\t\t]);\n\n\t\treturn actions;\n\t}\n\n\t//#endregion\n\n\t//#region groupedAccounts helpers\n\n\tprivate async addOrUpdateAccount(providerId: string, account: AuthenticationSessionAccount): Promise<void> {\n\t\tlet accounts = this.groupedAccounts.get(providerId);\n\t\tif (accounts) {\n\t\t\tconst existingAccount = accounts.find(a => a.id === account.id);\n\t\t\tif (existingAccount) {\n\t\t\t\t// Update the label if it has changed\n\t\t\t\tif (existingAccount.label !== account.label) {\n\t\t\t\t\texistingAccount.label = account.label;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\taccounts = [];\n\t\t\tthis.groupedAccounts.set(providerId, accounts);\n\t\t}\n\n\t\tconst sessionFromEmbedder = await this.sessionFromEmbedder.value;\n\t\t// If the session stored from the embedder allows sign out, then we can treat it and all others as sign out-able\n\t\tlet canSignOut = !!sessionFromEmbedder?.canSignOut;\n\t\tif (!canSignOut) {\n\t\t\tif (sessionFromEmbedder?.id) {\n\t\t\t\tconst sessions = (await this.authenticationService.getSessions(providerId)).filter(s => s.account.id === account.id);\n\t\t\t\tcanSignOut = !sessions.some(s => s.id === sessionFromEmbedder.id);\n\t\t\t} else {\n\t\t\t\t// The default if we don't have a session from the embedder is to allow sign out\n\t\t\t\tcanSignOut = true;\n\t\t\t}\n\t\t}\n\n\t\taccounts.push({ ...account, canSignOut });\n\t}\n\n\tprivate removeAccount(providerId: string, account: AuthenticationSessionAccount): void {\n\t\tconst accounts = this.groupedAccounts.get(providerId);\n\t\tif (!accounts) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = accounts.findIndex(a => a.id === account.id);\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\taccounts.splice(index, 1);\n\t\tif (accounts.length === 0) {\n\t\t\tthis.groupedAccounts.delete(providerId);\n\t\t}\n\t}\n\n\tprivate async addAccountsFromProvider(providerId: string): Promise<void> {\n\t\ttry {\n\t\t\tconst sessions = await this.authenticationService.getSessions(providerId);\n\t\t\tthis.problematicProviders.delete(providerId);\n\n\t\t\tfor (const session of sessions) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.addOrUpdateAccount(providerId, session.account);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\tthis.problematicProviders.add(providerId);\n\t\t}\n\t}\n\n\t//#endregion\n}\n\nexport interface IProfileActivity extends IActivity {\n\treadonly icon: boolean;\n}\n\nexport class GlobalActivityActionViewItem extends MenuActivityActionViewItem {\n\n\tprivate profileBadge: HTMLElement | undefined;\n\tprivate profileBadgeContent: HTMLElement | undefined;\n\n\tconstructor(\n\t\taction: ActivityAction,\n\t\tcontextMenuActionsProvider: () => IAction[],\n\t\tcolors: (theme: IColorTheme) => ICompositeBarColors,\n\t\tactivityHoverOptions: IActivityHoverOptions,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t) {\n\t\tsuper(MenuId.GlobalActivity, action, contextMenuActionsProvider, true, colors, activityHoverOptions, themeService, hoverService, menuService, contextMenuService, contextKeyService, configurationService, environmentService, keybindingService);\n\t\tthis._register(this.userDataProfileService.onDidChangeCurrentProfile(() => this.updateProfileBadge()));\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis.profileBadge = append(container, $('.profile-badge'));\n\t\tthis.profileBadgeContent = append(this.profileBadge, $('.profile-badge-content'));\n\t\tthis.updateProfileBadge();\n\t}\n\n\tprivate updateProfileBadge(): void {\n\t\tif (!this.profileBadge || !this.profileBadgeContent) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearNode(this.profileBadgeContent);\n\t\thide(this.profileBadge);\n\n\t\tif (this.userDataProfileService.currentProfile.isDefault) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ((this.action as ActivityAction).getBadge()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.profileBadgeContent.textContent = this.userDataProfileService.currentProfile.name.substring(0, 2).toUpperCase();\n\t\tshow(this.profileBadge);\n\t}\n\n\tprotected override updateBadge(): void {\n\t\tsuper.updateBadge();\n\t\tthis.updateProfileBadge();\n\t}\n\n\tprotected override computeTitle(): string {\n\t\treturn this.userDataProfileService.currentProfile.isDefault ? super.computeTitle() : localize('manage', \"Manage {0} (Profile)\", this.userDataProfileService.currentProfile.name);\n\t}\n}\n\nexport class PlaceHolderViewContainerActivityAction extends ViewContainerActivityAction { }\n\nexport class PlaceHolderToggleCompositePinnedAction extends ToggleCompositePinnedAction {\n\n\tconstructor(id: string, compositeBar: ICompositeBar) {\n\t\tsuper({ id, name: id, classNames: undefined }, compositeBar);\n\t}\n\n\tsetActivity(activity: IActivity): void {\n\t\tthis.label = activity.name;\n\t}\n}\n\nexport class PlaceHolderToggleCompositeBadgeAction extends ToggleCompositeBadgeAction {\n\n\tconstructor(id: string, compositeBar: ICompositeBar) {\n\t\tsuper({ id, name: id, classNames: undefined }, compositeBar);\n\t}\n\n\tsetActivity(activity: IActivity): void {\n\t\tthis.label = activity.name;\n\t}\n}\n\nclass SwitchSideBarViewAction extends Action2 {\n\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tprivate readonly offset: number\n\t) {\n\t\tsuper(desc);\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\n\t\tconst visibleViewletIds = paneCompositeService.getVisiblePaneCompositeIds(ViewContainerLocation.Sidebar);\n\n\t\tconst activeViewlet = paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar);\n\t\tif (!activeViewlet) {\n\t\t\treturn;\n\t\t}\n\t\tlet targetViewletId: string | undefined;\n\t\tfor (let i = 0; i < visibleViewletIds.length; i++) {\n\t\t\tif (visibleViewletIds[i] === activeViewlet.getId()) {\n\t\t\t\ttargetViewletId = visibleViewletIds[(i + visibleViewletIds.length + this.offset) % visibleViewletIds.length];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tawait paneCompositeService.openPaneComposite(targetViewletId, ViewContainerLocation.Sidebar, true);\n\t}\n}\n\nregisterAction2(\n\tclass PreviousSideBarViewAction extends SwitchSideBarViewAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.previousSideBarView',\n\t\t\t\ttitle: { value: localize('previousSideBarView', \"Previous Primary Side Bar View\"), original: 'Previous Primary Side Bar View' },\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true\n\t\t\t}, -1);\n\t\t}\n\t}\n);\n\nregisterAction2(\n\tclass NextSideBarViewAction extends SwitchSideBarViewAction {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.nextSideBarView',\n\t\t\t\ttitle: { value: localize('nextSideBarView', \"Next Primary Side Bar View\"), original: 'Next Primary Side Bar View' },\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true\n\t\t\t}, 1);\n\t\t}\n\t}\n);\n\nregisterAction2(\n\tclass FocusActivityBarAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.focusActivityBar',\n\t\t\t\ttitle: { value: localize('focusActivityBar', \"Focus Activity Bar\"), original: 'Focus Activity Bar' },\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\t\tlayoutService.setPartHidden(false, Parts.ACTIVITYBAR_PART);\n\t\t\tlayoutService.focusPart(Parts.ACTIVITYBAR_PART);\n\t\t}\n\t});\n\nregisterThemingParticipant((theme, collector) => {\n\n\tconst activityBarActiveBorderColor = theme.getColor(ACTIVITY_BAR_ACTIVE_BORDER);\n\tif (activityBarActiveBorderColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.checked .active-item-indicator:before {\n\t\t\t\tborder-left-color: ${activityBarActiveBorderColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst activityBarActiveFocusBorderColor = theme.getColor(ACTIVITY_BAR_ACTIVE_FOCUS_BORDER);\n\tif (activityBarActiveFocusBorderColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.checked:focus::before {\n\t\t\t\tvisibility: hidden;\n\t\t\t}\n\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.checked:focus .active-item-indicator:before {\n\t\t\t\tvisibility: visible;\n\t\t\t\tborder-left-color: ${activityBarActiveFocusBorderColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst activityBarActiveBackgroundColor = theme.getColor(ACTIVITY_BAR_ACTIVE_BACKGROUND);\n\tif (activityBarActiveBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.checked .active-item-indicator {\n\t\t\t\tz-index: 0;\n\t\t\t\tbackground-color: ${activityBarActiveBackgroundColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Styling with Outline color (e.g. high contrast theme)\n\tconst outline = theme.getColor(activeContrastBorder);\n\tif (outline) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item:before {\n\t\t\t\tcontent: \"\";\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 8px;\n\t\t\t\tleft: 8px;\n\t\t\t\theight: 32px;\n\t\t\t\twidth: 32px;\n\t\t\t\tz-index: 1;\n\t\t\t}\n\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.profile-activity-item:before {\n\t\t\t\ttop: -6px;\n\t\t\t}\n\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.active:before,\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.active:hover:before,\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.checked:before,\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.checked:hover:before {\n\t\t\t\toutline: 1px solid;\n\t\t\t}\n\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item:hover:before {\n\t\t\t\toutline: 1px dashed;\n\t\t\t}\n\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item:focus .active-item-indicator:before {\n\t\t\t\tborder-left-color: ${outline};\n\t\t\t}\n\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.active:before,\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.active:hover:before,\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.checked:before,\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item.checked:hover:before,\n\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item:hover:before {\n\t\t\t\toutline-color: ${outline};\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Styling without outline color\n\telse {\n\t\tconst focusBorderColor = theme.getColor(focusBorder);\n\t\tif (focusBorderColor) {\n\t\t\tcollector.addRule(`\n\t\t\t\t.monaco-workbench .activitybar > .content :not(.monaco-menu) > .monaco-action-bar .action-item:focus .active-item-indicator:before {\n\t\t\t\t\t\tborder-left-color: ${focusBorderColor};\n\t\t\t\t\t}\n\t\t\t\t`);\n\t\t}\n\t}\n});\n"]}