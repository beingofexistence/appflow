{"version":3,"sources":["vs/workbench/browser/parts/views/treeView.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IAyEzF,IAAM,IAAI,GAAV,MAAM,IAAa,SAAQ,eAAI;QAMrC,YACC,OAA4B,EACR,iBAAsB,EACrB,kBAAuB,EACrB,oBAAyB,EAC5B,iBAAsB,EAClB,qBAA0B,EAC3B,oBAAyB,EAChC,aAAkB,EACnB,YAAiB,EACb,gBAAqB,EAClB,mBAAwB;YAE9C,KAAK,CAAC,EAAE,GAAI,OAA4B,EAAE,WAAW,EAAE,aAAG,CAAI,SAAS,EAAE,gBAAgB,EAAE,KAAK,EAAE,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,aAAa,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;YAChR,MAAM,EAAE,QAAQ,EAAE,GAAyB,cAAG,CAAM,EAAE,CAAiB,kBAAU,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAE,CAAC;YACtH,IAAI,CAAC,CAAC,GAAU,QAAQ,CAAC;YACzB,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAQ,kBAAkB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAa,EAAE,IAAI,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAQ,gBAAgB,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAU,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzF,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAQ,sBAAsB,CAAC,CAAC,cAAc,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAqB,cAAc,CAAC,CAAC,CAAC,CAAC;YACtH,IAAI,CAAC,CAAC,CAAS,IAAA,eAAG,EAAU,GAAG,EAAE;gBAChC,IAAI,IAAI,CAAC,CAAC,IAAa,IAAI,CAAC,CAAC,CAAQ,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC,KAAc,IAAI,CAAC,CAAC,CAAQ,SAAS,CAAC,EAAE;oBAChG,IAAI,CAAC,CAAC,CAAQ,aAAa,CAAC,KAAK,CAAC,CAAC;iBACnC;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,yBAAyB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAqB,CAAC,CAAC,CAAC;YAClF,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAQ,uBAAuB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAA2B,IAAI,EAAE,CAAC,CAAC,CAAC;YACtG,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAQ,KAAK,EAAE;gBAC1C,IAAI,CAAC,EAAE,CAAU,IAAI,CAAC,CAAC,CAAQ,KAAK,CAAC,CAAC;aACtC;YACD,IAAI,OAAO,CAAC,gBAAgB,KAAK,IAAI,CAAC,CAAC,CAAQ,WAAW,EAAE;gBAC3D,IAAI,CAAC,EAAE,CAAqB,IAAI,CAAC,CAAC,CAAQ,WAAW,CAAC,CAAC;aACvD;YACD,IAAI,CAAC,CAAC,GAAe,IAAI,6BAA6B,CAAC,mBAAmB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAQ,YAAY,EAAE,CAAC,CAAC;YAEhH,IAAI,CAAC,CAAC,EAAqB,CAAC;QAC7B,CAAC;QAEQ,KAAK;YACb,KAAK,CAAC,KAAK,EAAE,CAAC;YACd,IAAI,CAAC,CAAC,CAAQ,KAAK,EAAE,CAAC;QACvB,CAAC;QAEkB,CAAC,CAAU,SAAsB;YACnD,IAAI,CAAC,CAAC,GAAY,SAAS,CAAC;YAC5B,KAAK,CAAC,CAAC,CAAU,SAAS,CAAC,CAAC;YAC5B,IAAI,CAAC,CAAC,CAAc,SAAS,CAAC,CAAC;QAChC,CAAC;QAEQ,iBAAiB;YACzB,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,YAAY,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,OAAO,KAAK,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAQ,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9K,CAAC;QAEkB,CAAC,CAAU,MAAc,EAAE,KAAa;YAC1D,KAAK,CAAC,CAAC,CAAU,MAAM,EAAE,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,CAAC,CAAc,MAAM,EAAE,KAAK,CAAC,CAAC;QACpC,CAAC;QAEQ,eAAe;YACvB,OAAO,IAAI,CAAC,CAAC,CAAQ,eAAe,EAAE,CAAC;QACxC,CAAC;QAES,CAAC,CAAc,SAAsB;YAC9C,IAAI,CAAC,CAAC,CAAQ,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,CAAC;QAES,CAAC,CAAc,MAAc,EAAE,KAAa;YACrD,IAAI,CAAC,CAAC,CAAQ,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACrC,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,CAAC,CAAQ,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QACnD,CAAC;QAEQ,eAAe;YACvB,OAAO,IAAI,CAAC,CAAC,CAAa;QAC3B,CAAC;QAEQ,iBAAiB;YACzB,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,gBAAgB,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC;QACnF,CAAC;KAED,CAAA;IAvFY,oBAAI;mBAAJ,IAAI;QAQd,WAAA,gBAAG,CAAA;QACH,WAAA,iBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,gBAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,YAAG,CAAA;QACH,WAAA,kBAAG,CAAA;QACH,WAAA,eAAG,CAAA;QACH,YAAA,kBAAG,CAAA;OAjBO,IAAI,CAuFhB;IAED,MAAM,IAAI;QAAV;YACC,UAAK,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;YAC1B,WAAM,GAAG,GAAG,CAAC;YACb,iBAAY,GAAuB,SAAS,CAAC;YAC7C,qBAAgB,GAAG,gCAAwB,CAAC,QAAQ,CAAC;YACrD,aAAQ,GAA4B,SAAS,CAAC;QAC/C,CAAC;KAAA;IAED,SAAS,oBAAoB,CAAC,WAAwB,EAAE,iBAAsB;QAC7E,MAAM,OAAO,GAAG,cAAG,CAAc,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC9G,IAAI,OAAO,EAAE;YACZ,MAAM,aAAa,GAAG,aAAG,CAAU,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC1D,MAAM,YAAY,GAAG,aAAa,IAAI,aAAa,CAAC,YAAY,CAAC;YACjE,IAAI,YAAY,EAAE;gBACjB,OAAO,iBAAiB,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;aAC3D;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAED,SAAS,sBAAsB,CAAC,YAAwD;QACvF,OAAO,CAAC,CAAC,YAAY,IAAI,OAAO,YAAY,KAAK,QAAQ,IAAI,SAAS,IAAI,YAAY,IAAI,SAAS,IAAI,YAAY,CAAC;IACrH,CAAC;IAED,MAAM,qBAAqB,GAAG,IAAA,cAAQ,EAAC,CAAiB,EAAE,IAAkE,CAAC,CAAC;IAEjH,QAAA,IAAI,GAA0B,IAAI,gBAAG,CAAoB,gBAAgB,EAAE,KAAK,CAAC,CAAC;IAE/F,MAAM,IAAK,SAAQ,iBAAwD;KAAI;IAE/E,IAAe,gBAAgB,GAA/B,MAAe,gBAAiB,SAAQ,eAAG;QA4D1C,YACU,EAAU,EACX,EAAc,EACP,EAAkC,EAC1B,EAA0C,EAChD,EAAoC,EAC9B,EAA0C,EAC/C,EAAuC,EACpC,EAAwC,EACzC,EAAuC,EACrC,EAAyC,EACvC,EAA2C,EACpD,EAAmC,EAC9B,EAAuC,EACzC,EAAqC,EAC1C,EAAgC;YAE7C,KAAK,EAAE,CAAC;YAhBC,OAAE,GAAF,EAAE,CAAQ;YACX,OAAE,GAAF,EAAE,CAAY;YACU,OAAE,GAAF,EAAE,CAAe;YACT,OAAE,GAAF,EAAE,CAAuB;YAC/B,OAAE,GAAF,EAAE,CAAiB;YACb,OAAE,GAAF,EAAE,CAAuB;YAC5B,OAAE,GAAF,EAAE,CAAkB;YACnB,OAAE,GAAF,EAAE,CAAqB;YACxB,OAAE,GAAF,EAAE,CAAoB;YACpB,OAAE,GAAF,EAAE,CAAsB;YACtB,OAAE,GAAF,EAAE,CAAwB;YACnC,OAAE,GAAF,EAAE,CAAgB;YACb,OAAE,GAAF,EAAE,CAAoB;YACxB,OAAE,GAAF,EAAE,CAAkB;YACzB,OAAE,GAAF,EAAE,CAAa;YAzEtC,MAAC,GAAoB,KAAK,CAAC;YAC3B,MAAC,GAAuB,KAAK,CAAC;YAC9B,MAAC,GAAqB,KAAK,CAAC;YAS5B,MAAC,GAAkB,KAAK,CAAC;YAIzB,MAAC,GAAyB,KAAK,CAAC;YAChC,MAAC,GAAoC,KAAK,CAAC;YAS3C,MAAC,GAAgC,EAAE,CAAC;YACpC,MAAC,GAAqC,EAAE,CAAC;YAGhC,MAAC,GAAsC,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAiB,CAAC,CAAC;YACxF,oBAAe,GAAqB,IAAI,CAAC,CAAC,CAAgB,KAAK,CAAC;YAExD,MAAC,GAAwC,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAiB,CAAC,CAAC;YAC1F,sBAAiB,GAAqB,IAAI,CAAC,CAAC,CAAkB,KAAK,CAAC;YAErE,MAAC,GAA+F,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAA6D,CAAC,CAAC;YACpL,iCAA4B,GAAiE,IAAI,CAAC,CAAC,CAA6B,KAAK,CAAC;YAE9H,MAAC,GAA0C,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAe,CAAC,CAAC;YAC1F,0BAAqB,GAAmB,IAAI,CAAC,CAAC,CAAsB,KAAK,CAAC;YAElE,MAAC,GAAoC,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YACjF,uBAAkB,GAAgB,IAAI,CAAC,CAAC,CAAmB,KAAK,CAAC;YAEzD,MAAC,GAAyC,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YACtF,4BAAuB,GAAgB,IAAI,CAAC,CAAC,CAAwB,KAAK,CAAC;YAEnE,MAAC,GAAoC,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAc,CAAC,CAAC;YACnF,qBAAgB,GAAkB,IAAI,CAAC,CAAC,CAAiB,KAAK,CAAC;YAEvD,MAAC,GAAsD,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAA0B,CAAC,CAAC;YACjH,2BAAsB,GAA8B,IAAI,CAAC,CAAC,CAAuB,KAAK,CAAC;YAE/E,OAAE,GAAyD,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAA4B,CAAC,CAAC;YACvH,6BAAwB,GAAgC,IAAI,CAAC,EAAE,CAAwB,KAAK,CAAC;YAErF,OAAE,GAAqC,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YA0BpF,OAAE,GAAwB,KAAK,CAAC;YA2kBhC,OAAE,GAAgB,CAAC,CAAC;YACpB,OAAE,GAAe,CAAC,CAAC;YAiGnB,OAAE,GAAoB,KAAK,CAAC;YAnrBnC,IAAI,CAAC,CAAC,GAAM,IAAI,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,CAAC,GAAY,IAAI,CAAC,CAAC,CAAI;YAC5B,sGAAsG;YACtG,kEAAkE;QACnE,CAAC;QAGO,EAAE;YACT,IAAI,IAAI,CAAC,EAAE,EAAc;gBACxB,OAAO;aACP;YACD,IAAI,CAAC,EAAE,GAAe,IAAI,CAAC;YAE3B,uGAAuG;YACvG,gHAAgH;YAEhH,IAAI,CAAC,EAAE,CAAgB,kBAAkB,CAAC,GAAG,EAAE;gBAC9C,IAAI,CAAC,EAAE,EAA+B,CAAC;gBACvC,IAAI,CAAC,EAAE,EAA2B,CAAC;gBACnC,IAAI,CAAC,EAAE,EAA2B,CAAC;YACpC,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,CAAC,GAAa,IAAI,CAAC,EAAE,CAAmB,cAAc,CAAC,IAAI,EAAuB,IAAI,CAAC,EAAE,CAAC,CAAC;YAChG,IAAI,IAAI,CAAC,EAAE,EAAsB;gBAChC,IAAI,CAAC,CAAC,CAAW,UAAU,GAAG,IAAI,CAAC,EAAE,CAAqB;aAC1D;YAED,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,EAAE,CAAmB,wBAAwB,CAAC,CAAC,CAAC,EAAE;gBACrE,IAAI,CAAC,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,EAAE;oBACnD,IAAI,CAAC,EAAE,CAAQ,CAAC,IAAI,CAAC,CAAC,CAAI,CAAC,CAAC,CAAC,oBAAoB;iBACjD;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,EAAE,CAAoB,mBAAmB,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE;gBACrF,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE;oBACtC,IAAI,CAAC,CAAC,EAAK,aAAa,CAAC,EAAE,cAAc,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,YAAY,wCAAgC,CAAC,CAAC,CAAC,WAAG,CAAc,CAAC,CAAC,YAAI,EAAiB,EAAE,CAAC,CAAC;iBAC7J;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,EAAE,EAAe,CAAC;YAEvB,IAAI,CAAC,EAAE,EAAM,CAAC;QACf,CAAC;QAED,IAAI,aAAa;YAChB,OAAO,IAAI,CAAC,EAAE,CAAoB,wBAAwB,CAAC,IAAI,CAAC,EAAE,CAAE,CAAC;QACtE,CAAC;QAED,IAAI,YAAY;YACf,OAAO,IAAI,CAAC,EAAE,CAAoB,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAE,CAAC;QACjE,CAAC;QAED,IAAI,qBAAqB;YACxB,OAAO,IAAI,CAAC,EAAE,CAAqB;QACpC,CAAC;QACD,IAAI,qBAAqB,CAAC,GAA+C;YACxE,IAAI,CAAC,EAAE,GAAuB,GAAG,CAAC;YAClC,IAAI,IAAI,CAAC,CAAC,EAAY;gBACrB,IAAI,CAAC,CAAC,CAAW,UAAU,GAAG,GAAG,CAAC;aAClC;QACF,CAAC;QAGD,IAAI,YAAY;YACf,OAAO,IAAI,CAAC,EAAE,CAAY;QAC3B,CAAC;QAED,IAAI,YAAY,CAAC,YAA+C;YAC/D,IAAI,YAAY,EAAE;gBACjB,MAAM,IAAI,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,EAAE,GAAc,IAAI;oBAAA;wBAChB,MAAC,GAAmB,IAAI,CAAC;wBACzB,MAAC,GAAkC,IAAI,WAAG,EAAM,CAAC;wBAClD,qBAAgB,GAAgB,IAAI,CAAC,CAAC,CAAiB,KAAK,CAAC;oBAmCrE,CAAC;oBAjCA,IAAI,WAAW;wBACd,OAAO,IAAI,CAAC,CAAC,CAAQ;oBACtB,CAAC;oBAED,KAAK,CAAC,WAAW,CAAC,IAAgB;wBACjC,IAAI,QAAqB,CAAC;wBAC1B,MAAM,iBAAiB,GAAgB,EAAE,CAAC;wBAC1C,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;4BAC1B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;yBACzB;6BAAM;4BACN,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAI;4BACzB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,YAAY,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;4BAC3G,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;4BAC/B,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gCACxB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;gCACpB,IAAI,CAAC,IAAI,CAAC,wBAAwB,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,KAAK,KAAK,CAAC,EAAE;oCACpH,KAAK,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;oCAChC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iCAC9B;4BACF,CAAC,CAAC,CAAC;yBACH;wBACD,IAAI,IAAI,YAAY,IAAI,EAAE;4BACzB,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAQ;4BAC/B,IAAI,CAAC,CAAC,GAAU,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC;4BACtC,IAAI,QAAQ,KAAK,IAAI,CAAC,CAAC,EAAS;gCAC/B,IAAI,CAAC,CAAC,CAAiB,IAAI,EAAE,CAAC;6BAC9B;yBACD;wBACD,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;4BACjC,IAAI,CAAC,EAAE,CAAwB,IAAI,CAAC,iBAAiB,CAAC,CAAC;yBACvD;wBACD,OAAO,QAAQ,CAAC;oBACjB,CAAC;iBACD,CAAC;gBACF,IAAI,IAAI,CAAC,EAAE,CAAY,gBAAgB,EAAE;oBACxC,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,EAAE,CAAY,gBAAgB,CAAC,GAAG,EAAE;wBACvD,IAAI,CAAC,EAAE,EAAuB,CAAC;wBAC/B,IAAI,CAAC,CAAC,CAAwB,IAAI,EAAE,CAAC;oBACtC,CAAC,CAAC,CAAC,CAAC;iBACJ;gBACD,IAAI,CAAC,EAAE,EAAa,CAAC;gBACrB,IAAI,CAAC,OAAO,EAAE,CAAC;aACf;iBAAM;gBACN,IAAI,CAAC,EAAE,GAAc,SAAS,CAAC;gBAC/B,IAAI,CAAC,EAAE,EAAa,CAAC;aACrB;YAED,IAAI,CAAC,CAAC,CAAwB,IAAI,EAAE,CAAC;QACtC,CAAC;QAGD,IAAI,OAAO;YACV,OAAO,IAAI,CAAC,EAAE,CAAO;QACtB,CAAC;QAED,IAAI,OAAO,CAAC,OAA6C;YACxD,IAAI,CAAC,EAAE,GAAS,OAAO,CAAC;YACxB,IAAI,CAAC,EAAE,EAAa,CAAC;YACrB,IAAI,CAAC,CAAC,CAAwB,IAAI,EAAE,CAAC;QACtC,CAAC;QAED,IAAI,KAAK;YACR,OAAO,IAAI,CAAC,EAAE,CAAK;QACpB,CAAC;QAED,IAAI,KAAK,CAAC,IAAY;YACrB,IAAI,CAAC,EAAE,GAAO,IAAI,CAAC;YACnB,IAAI,CAAC,CAAC,CAAiB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAK,CAAC;QAC1C,CAAC;QAGD,IAAI,WAAW;YACd,OAAO,IAAI,CAAC,EAAE,CAAW;QAC1B,CAAC;QAED,IAAI,WAAW,CAAC,WAA+B;YAC9C,IAAI,CAAC,EAAE,GAAa,WAAW,CAAC;YAChC,IAAI,CAAC,CAAC,CAAuB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAW,CAAC;QACtD,CAAC;QAID,IAAI,KAAK;YACR,OAAO,IAAI,CAAC,EAAE,CAAK;QACpB,CAAC;QAED,IAAI,KAAK,CAAC,KAA6B;YAEtC,IAAI,IAAI,CAAC,EAAE,EAAM,KAAK,KAAK,KAAK,EAAE,KAAK;gBACtC,IAAI,CAAC,EAAE,EAAM,OAAO,KAAK,KAAK,EAAE,OAAO,EAAE;gBACzC,OAAO;aACP;YAED,IAAI,IAAI,CAAC,EAAE,EAAc;gBACxB,IAAI,CAAC,EAAE,CAAa,OAAO,EAAE,CAAC;gBAC9B,IAAI,CAAC,EAAE,GAAe,SAAS,CAAC;aAChC;YAED,IAAI,CAAC,EAAE,GAAO,KAAK,CAAC;YAEpB,IAAI,KAAK,EAAE;gBACV,MAAM,QAAQ,GAAG;oBAChB,KAAK,EAAE,IAAI,cAAG,CAAS,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC;oBACxD,QAAQ,EAAE,EAAE;iBACZ,CAAC;gBACF,IAAI,CAAC,EAAE,GAAe,IAAI,CAAC,EAAE,CAAc,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;aAC/E;QACF,CAAC;QAED,IAAI,aAAa;YAChB,OAAO,IAAI,CAAC,CAAC,CAAc;QAC5B,CAAC;QAED,IAAI,aAAa,CAAC,aAAsB;YACvC,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAc;YAC7C,IAAI,CAAC,CAAC,GAAgB,aAAa,CAAC;YACpC,IAAI,IAAI,CAAC,CAAC,KAAkB,gBAAgB,EAAE;gBAC7C,IAAI,CAAC,CAAC,EAAK,aAAa,CAAC,EAAE,wBAAwB,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;aAC3E;QACF,CAAC;QAED,IAAI,wBAAwB;YAC3B,OAAO,IAAI,CAAC,CAAC,CAAyB;QACvC,CAAC;QAED,IAAI,wBAAwB,CAAC,wBAAiC;YAC7D,IAAI,CAAC,CAAC,GAA2B,wBAAwB,CAAC;QAC3D,CAAC;QAED,IAAI,oBAAoB;YACvB,OAAO,IAAI,CAAC,CAAC,CAAqB;QACnC,CAAC;QAED,IAAI,kBAAkB;YACrB,OAAO,IAAI,CAAC,CAAC,CAAmB;QACjC,CAAC;QAED,IAAI,OAAO;YACV,OAAO,IAAI,CAAC,CAAC,CAAS;QACvB,CAAC;QAEO,EAAE,CAA8B,gBAAyB,KAAK;YACrE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAmB;gBAC7B,IAAI,CAAC,CAAC,GAAuB,IAAI,gBAAG,CAAoB,YAAY,IAAI,CAAC,EAAE,oBAAoB,EAAE,aAAa,EAAE,IAAA,cAAQ,EAAC,CAA4B,EAAE,IAA6D,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChO,IAAI,CAAC,CAAC,GAAoB,IAAI,CAAC,CAAC,CAAqB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAgB,CAAC;aACpF;YACD,OAAO,IAAI,CAAC;QACb,CAAC;QAED,IAAI,qBAAqB;YACxB,IAAI,CAAC,EAAE,EAA+B,CAAC;YACvC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,EAAmB,GAAG,EAAE,CAAC;QACzC,CAAC;QAED,IAAI,qBAAqB,CAAC,qBAA8B;YACvD,IAAI,CAAC,EAAE,CAA8B,qBAAqB,CAAC,CAAC;YAC5D,IAAI,CAAC,CAAC,EAAmB,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACrD,CAAC;QAGO,EAAE,CAA0B,gBAAyB,KAAK;YACjE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAe;gBACzB,IAAI,CAAC,CAAC,GAAmB,IAAI,gBAAG,CAAoB,YAAY,IAAI,CAAC,EAAE,gBAAgB,EAAE,aAAa,EAAE,IAAA,cAAQ,EAAC,CAAwB,EAAE,IAAoD,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3M,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC,CAAC,CAAiB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAgB,CAAC;aAC5E;QACF,CAAC;QAED,IAAI,iBAAiB;YACpB,IAAI,CAAC,EAAE,EAA2B,CAAC;YACnC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,EAAe,GAAG,EAAE,CAAC;QACrC,CAAC;QAED,IAAI,iBAAiB,CAAC,iBAA0B;YAC/C,IAAI,CAAC,EAAE,CAA0B,iBAAiB,CAAC,CAAC;YACpD,IAAI,CAAC,CAAC,EAAe,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC7C,CAAC;QAEO,EAAE;YACT,MAAM,IAAI,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,CAAC,CAAS,IAAA,aAAG,EAAa,KAAM,SAAQ,aAAG;gBAC/C;oBACC,KAAK,CAAC;wBACL,EAAE,EAAE,8BAA8B,IAAI,CAAC,EAAE,UAAU;wBACnD,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAS,EAAE,IAAS,CAAC;wBACrC,IAAI,EAAE;4BACL,EAAE,EAAE,aAAG,CAAI,SAAS;4BACpB,IAAI,EAAE,gBAAG,CAAY,GAAG,CAAC,gBAAG,CAAY,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAiB;4BACxF,KAAK,EAAE,YAAY;4BACnB,KAAK,EAAE,MAAM,CAAC,gBAAgB,GAAG,CAAC;yBAClC;wBACD,IAAI,EAAE,cAAG,CAAK,OAAO;qBACrB,CAAC,CAAC;gBACJ,CAAC;gBACD,KAAK,CAAC,GAAG;oBACR,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;gBACvB,CAAC;aACD,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,CAAC,CAAS,IAAA,aAAG,EAAa,KAAM,SAAQ,aAAG;gBAC/C;oBACC,KAAK,CAAC;wBACL,EAAE,EAAE,8BAA8B,IAAI,CAAC,EAAE,cAAc;wBACvD,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAa,EAAE,IAAc,CAAC;wBAC9C,IAAI,EAAE;4BACL,EAAE,EAAE,aAAG,CAAI,SAAS;4BACpB,IAAI,EAAE,gBAAG,CAAY,GAAG,CAAC,gBAAG,CAAY,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAqB;4BAC5F,KAAK,EAAE,YAAY;4BACnB,KAAK,EAAE,MAAM,CAAC,gBAAgB;yBAC9B;wBACD,YAAY,EAAE,IAAI,CAAC,CAAC;wBACpB,IAAI,EAAE,cAAG,CAAK,WAAW;qBACzB,CAAC,CAAC;gBACJ,CAAC;gBACD,KAAK,CAAC,GAAG;oBACR,IAAI,IAAI,CAAC,CAAC,EAAK;wBACd,OAAO,IAAI,kBAAG,CAAiD,IAAI,CAAC,CAAC,EAAK,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;qBACtF;gBACF,CAAC;aACD,CAAC,CAAC,CAAC;QACL,CAAC;QAED,aAAa,CAAC,SAAkB;YAC/B,2FAA2F;YAC3F,6EAA6E;YAC7E,oCAAoC;YAEpC,IAAI,CAAC,EAAE,EAAU,CAAC;YAClB,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;YACxB,IAAI,IAAI,CAAC,CAAC,KAAa,SAAS,EAAE;gBACjC,OAAO;aACP;YAED,IAAI,CAAC,CAAC,GAAW,SAAS,CAAC;YAE3B,IAAI,IAAI,CAAC,CAAC,EAAK;gBACd,IAAI,IAAI,CAAC,CAAC,EAAU;oBACnB,GAAG,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,CAAI,cAAc,EAAE,CAAC,CAAC;iBACrC;qBAAM;oBACN,GAAG,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,CAAI,cAAc,EAAE,CAAC,CAAC,CAAC,iEAAiE;iBACvG;gBAED,IAAI,IAAI,CAAC,CAAC,IAAY,IAAI,CAAC,CAAC,CAAiB,MAAM,IAAI,IAAI,CAAC,YAAY,EAAE;oBACzE,IAAI,CAAC,EAAE,CAAQ,IAAI,CAAC,CAAC,CAAiB,CAAC;oBACvC,IAAI,CAAC,CAAC,GAAmB,EAAE,CAAC;iBAC5B;aACD;YAED,IAAA,aAAE,EAAU,GAAG,EAAE;gBAChB,IAAI,IAAI,CAAC,YAAY,EAAE;oBACtB,IAAI,CAAC,CAAC,CAAsB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAS,CAAC;iBACjD;YACF,CAAC,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,EAAE,EAAQ,CAAC;aAChB;QACF,CAAC;QAID,KAAK,CAAC,SAAkB,IAAI,EAAE,UAAsB;YACnD,IAAI,IAAI,CAAC,CAAC,IAAO,IAAI,CAAC,CAAC,CAAI,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrE,qDAAqD;gBACrD,MAAM,OAAO,GAAG,UAAU,IAAI,IAAI,CAAC,CAAC,CAAI,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC1D,IAAI,OAAO,IAAI,MAAM,EAAE;oBACtB,IAAI,CAAC,CAAC,CAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;iBAC/B;gBAED,uBAAuB;gBACvB,IAAI,CAAC,CAAC,CAAI,QAAQ,EAAE,CAAC;aACrB;iBAAM,IAAI,IAAI,CAAC,CAAC,IAAO,IAAI,CAAC,CAAC,IAAgB,CAAC,IAAI,CAAC,CAAC,CAAa,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBAC7F,IAAI,CAAC,CAAC,CAAI,QAAQ,EAAE,CAAC;aACrB;iBAAM;gBACN,IAAI,CAAC,CAAC,CAAO,KAAK,EAAE,CAAC;aACrB;QACF,CAAC;QAED,IAAI,CAAC,SAAsB;YAC1B,IAAI,CAAC,CAAC,GAAY,SAAS,CAAC;YAC5B,GAAG,CAAC,GAAG,CAAI,SAAS,EAAE,IAAI,CAAC,CAAC,CAAO,CAAC;QACrC,CAAC;QAEO,EAAE;YACT,IAAI,CAAC,CAAC,GAAS,GAAG,CAAC,CAAC,CAAC,kCAAkC,CAAC,CAAC;YACzD,IAAI,CAAC,CAAC,GAAgB,GAAG,CAAC,GAAG,CAAI,IAAI,CAAC,CAAC,EAAQ,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,EAAE,EAAa,CAAC;YACrB,IAAI,CAAC,CAAC,GAAe,GAAG,CAAC,GAAG,CAAI,IAAI,CAAC,CAAC,EAAQ,GAAG,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,CAAC,CAAa,SAAS,CAAC,GAAG,CAAC,yBAAyB,EAAE,iBAAiB,CAAC,CAAC;YAC/E,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,GAAG,CAAQ,IAAI,CAAC,CAAC,CAAO,CAAC,CAAC;YAClE,IAAI,CAAC,CAAC,CAAS,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,GAAS,IAAI,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,CAAC,CAAS,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,GAAS,KAAK,CAAC,CAAC,CAAC;QACpE,CAAC;QAES,EAAE;YACX,MAAM,sBAAsB,GAAG,6BAAG,CAAkB,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAmB,CAAC;YAC/F,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,EAAE,CAAmB,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/F,IAAI,CAAC,CAAC,GAAY,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,EAAE,CAAmB,cAAc,CAAC,aAAI,EAAY,IAAI,CAAC,CAAC,CAAC;YACjG,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,CAAmB,cAAc,CAAC,cAAc,EAAE,IAAI,EAAE,CAAI,IAAgB,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAc,YAAY,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YACjL,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,CAAW,CAAC;YAC/C,MAAM,oBAAoB,GAAG,IAAI,CAAC,CAAC,CAAS,IAAI,eAAI,EAAkB,CAAC,CAAC;YACxE,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAmB,cAAc,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,EAAW,sBAAsB,EAAE,OAAO,EAAE,oBAAoB,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC;YACnM,IAAI,CAAC,CAAC,CAAS,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAwB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE/F,MAAM,eAAe,GAAG,IAAI,CAAC,EAAE,CAAK;YAEpC,IAAI,CAAC,CAAC,GAAM,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,EAAE,CAAmB,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAc,EAAE,IAAI,gBAAgB,EAAE,EAAE,CAAC,QAAQ,CAAC,EACzI,UAAU,EAAE;gBACZ,gBAAgB,EAAE,IAAI,wBAAwB,EAAE;gBAChD,qBAAqB,EAAE;oBACtB,YAAY,CAAC,OAAkB;wBAC9B,IAAI,OAAO,CAAC,wBAAwB,EAAE;4BACrC,OAAO,OAAO,CAAC,wBAAwB,CAAC,KAAK,CAAC;yBAC9C;wBAED,IAAI,IAAA,WAAG,EAAM,OAAO,CAAC,OAAO,CAAC,EAAE;4BAC9B,OAAO,OAAO,CAAC,OAAO,CAAC;yBACvB;6BAAM;4BACN,IAAI,OAAO,CAAC,WAAW,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gCAC1C,qFAAqF;gCACrF,yDAAyD;gCACzD,OAAO,IAAI,CAAC;6BACZ;4BACD,IAAI,cAAc,GAAW,EAAE,CAAC;4BAChC,IAAI,OAAO,CAAC,KAAK,EAAE;gCAClB,cAAc,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;6BAC5C;4BACD,IAAI,OAAO,CAAC,WAAW,EAAE;gCACxB,cAAc,IAAI,OAAO,CAAC,WAAW,CAAC;6BACtC;4BACD,OAAO,cAAc,CAAC;yBACtB;oBACF,CAAC;oBACD,OAAO,CAAC,OAAkB;wBACzB,OAAO,OAAO,CAAC,wBAAwB,EAAE,IAAI,IAAI,UAAU,CAAC;oBAC7D,CAAC;oBACD,kBAAkB;wBACjB,OAAO,eAAe,CAAC;oBACxB,CAAC;iBACD;gBACD,+BAA+B,EAAE;oBAChC,0BAA0B,EAAE,CAAC,IAAe,EAAE,EAAE;wBAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAA,eAAG,EAAM,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;oBAChH,CAAC;iBACD;gBACD,wBAAwB,EAAE,CAAC,CAAY,EAAE,EAAE;oBAC1C,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAmB,QAAQ,CAAgC,2BAA2B,CAAC,KAAK,aAAa,CAAC;gBACxJ,CAAC;gBACD,iBAAiB,EAAE,CAAC,CAAY,EAAW,EAAE;oBAC5C,OAAO,CAAC,CAAC,gBAAgB,KAAK,gCAAwB,CAAC,QAAQ,CAAC;gBACjE,CAAC;gBACD,wBAAwB,EAAE,IAAI,CAAC,aAAa;gBAC5C,GAAG,EAAE,IAAI,CAAC,CAAC;gBACX,cAAc,EAAE;oBACf,cAAc,EAAE,IAAI,CAAC,YAAY,wCAAgC,CAAC,CAAC,CAAC,WAAG,CAAc,CAAC,CAAC,YAAI;iBAC3F;aACD,CAA6D,CAAC,CAAC;YAChE,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAI,iBAAiB,CAAC,CAAC;YAC5D,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAI;YACzB,MAAM,YAAY,GAAG,IAAI,6BAA6B,CAAC,IAAI,CAAC,EAAE,EAAmB,GAAG,EAAE,CAAC,IAAI,CAAC,CAAK,CAAC,YAAY,EAAE,CAAC,CAAC;YAClH,QAAQ,CAAC,YAAY,GAAG,YAAY,CAAC;YAErC,IAAI,CAAC,CAAC,CAAI,iBAAiB,CAAC,SAAS,CAAU,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAC9D,MAAM,aAAa,GAAG,YAAI,CAAwB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAI,iBAAiB,CAAC,CAAC;YACtF,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAI,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAY,SAAS,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;YAE7F,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAI,oBAAoB,CAAC,CAAC,CAAC,EAAE;gBACjD,IAAI,CAAC,CAAC,GAAe,CAAC,CAAC,QAAQ,CAAC;gBAChC,IAAI,CAAC,CAAC,GAAY,IAAI,CAAC,CAAC,EAAK,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAU;gBAC9D,IAAI,CAAC,CAAC,CAA6B,IAAI,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,EAAc,KAAK,EAAE,IAAI,CAAC,CAAC,EAAW,CAAC,CAAC;YACpG,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAI,gBAAgB,CAAC,CAAC,CAAC,EAAE;gBAC7C,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAU,EAAE;oBAC7D,IAAI,CAAC,CAAC,GAAY,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAChC,IAAI,CAAC,CAAC,GAAe,IAAI,CAAC,CAAC,EAAK,YAAY,EAAE,IAAI,IAAI,CAAC,CAAC,CAAa;oBACrE,IAAI,CAAC,CAAC,CAA6B,IAAI,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,EAAc,KAAK,EAAE,IAAI,CAAC,CAAC,EAAW,CAAC,CAAC;iBACnG;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAI,wBAAwB,CAAC,CAAC,CAAC,EAAE;gBACrD,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;oBACpB,OAAO;iBACP;gBAED,MAAM,OAAO,GAAc,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;gBACtH,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE;oBACrB,IAAI,CAAC,CAAC,CAAkB,IAAI,CAAC,OAAO,CAAC,CAAC;iBACtC;qBAAM;oBACN,IAAI,CAAC,CAAC,CAAgB,IAAI,CAAC,OAAO,CAAC,CAAC;iBACpC;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,CAAC,CAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAkB,CAAC,CAAC;YAEpE,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAI,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE;oBACpB,OAAO;iBACP;gBACD,IAAI,CAAC,CAAC,YAAY,CAAC,MAAM,IAAK,CAAC,CAAC,YAAY,CAAC,MAAsB,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAI,CAAa,aAAa,CAAC,EAAE;oBACvH,OAAO;iBACP;gBACD,MAAM,SAAS,GAAG,IAAI,CAAC,CAAK,CAAC,YAAY,EAAE,CAAC;gBAC5C,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,EAAE,CAAa,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBAE7F,IAAI,OAAO,IAAI,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAgB,EAAE;oBACrE,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;oBACnC,IAAI,OAAO,CAAC,EAAE,KAAK,qBAAI,IAA0B,OAAO,CAAC,EAAE,KAAK,qBAAI,EAA6B;wBAChG,+CAA+C;wBAC/C,2CAA2C;wBAC3C,IAAI,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;qBACpB;oBAED,IAAI;wBACH,MAAM,IAAI,CAAC,EAAE,CAAa,cAAc,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;qBAC9D;oBAAC,OAAO,GAAG,EAAE;wBACb,IAAI,CAAC,EAAE,CAAkB,KAAK,CAAC,GAAG,CAAC,CAAC;qBACpC;iBACD;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,CAAC,CAAS,SAAS,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,EAAE;gBAChD,IAAI,IAAI,CAAC,CAAC,EAAK,OAAO,CAAC,OAAO,CAAC,EAAE;oBAChC,IAAI,CAAC,CAAC,EAAK,QAAQ,CAAC,OAAO,CAAC,CAAC;iBAC7B;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,KAAK,CAAC,EAAE,CAAa,OAA8B;YAC1D,IAAI,OAAO,GAAG,OAAO,EAAE,OAAO,CAAC;YAC/B,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE;gBACxB,IAAI,CAAC,OAAO,YAAY,WAAG,CAAgB,IAAI,OAAO,CAAC,UAAU,EAAE;oBAClE,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,kBAAG,EAAsB,CAAC,KAAK,CAAC,CAAC;oBAC3D,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;iBAC1B;aACD;YACD,OAAO,OAAO,CAAC;QAChB,CAAC;QAEO,EAAE,CAAY,SAAoB,EAAE,SAA2C,EAAE,YAA2C;YACnI,IAAI,CAAC,EAAE,CAAW,SAAS,EAAE,CAAC;YAC9B,MAAM,IAAI,GAAqB,SAAS,CAAC,OAAO,CAAC;YACjD,IAAI,IAAI,KAAK,IAAI,EAAE;gBAClB,OAAO;aACP;YACD,MAAM,KAAK,GAAY,SAAS,CAAC,YAAY,CAAC;YAE9C,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;YAExB,IAAI,CAAC,CAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5B,MAAM,OAAO,GAAG,SAAS,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;YAC1D,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACpB,OAAO;aACP;YACD,IAAI,CAAC,EAAE,CAAiB,eAAe,CAAC;gBACvC,SAAS,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM;gBAEjC,UAAU,EAAE,GAAG,EAAE,CAAC,OAAO;gBAEzB,iBAAiB,EAAE,CAAC,MAAM,EAAE,EAAE;oBAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,CAAgB,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBACtE,IAAI,UAAU,EAAE;wBACf,OAAO,IAAI,qBAAG,CAAY,MAAM,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;qBAC9F;oBACD,OAAO,SAAS,CAAC;gBAClB,CAAC;gBAED,MAAM,EAAE,CAAC,YAAsB,EAAE,EAAE;oBAClC,IAAI,YAAY,EAAE;wBACjB,IAAI,CAAC,CAAK,CAAC,QAAQ,EAAE,CAAC;qBACtB;gBACF,CAAC;gBAED,iBAAiB,EAAE,GAAG,EAAE,CAAC,CAAwB,EAAE,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,eAAe,EAAE,IAAI,CAAC,MAAM,EAAG,CAAA;gBAExG,YAAY;aACZ,CAAC,CAAC;QACJ,CAAC;QAES,EAAE;YACX,IAAI,IAAI,CAAC,EAAE,EAAQ;gBAClB,IAAI,CAAC,EAAE,CAAU,IAAI,CAAC,EAAE,CAAO,CAAC;aAChC;iBAAM,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBAC9B,IAAI,CAAC,EAAE,CAAU,qBAAqB,CAAC,CAAC;aACxC;iBAAM;gBACN,IAAI,CAAC,EAAE,EAAW,CAAC;aACnB;YACD,IAAI,CAAC,EAAE,EAAkB,CAAC;QAC3B,CAAC;QAEO,EAAE,CAAU,OAAiC;YACpD,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAa,EAAE;gBAC/C,IAAI,CAAC,CAAC,CAAa,OAAO,EAAE,CAAC;aAC7B;YACD,IAAI,IAAA,iBAAG,EAAc,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAiB;gBACxD,IAAI,CAAC,CAAC,GAAkB,IAAI,CAAC,EAAE,CAAmB,cAAc,CAAC,sBAAG,EAAe,EAAE,CAAC,CAAC;aACvF;YACD,IAAI,CAAC,CAAC,GAAe,IAAA,iBAAG,EAAc,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAClG,IAAI,CAAC,IAAI,CAAC,CAAC,EAAe;gBACzB,OAAO;aACP;YACD,IAAI,CAAC,CAAC,CAAc,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC7C,IAAI,CAAC,EAAE,EAAmB,CAAC;YAC3B,IAAI,OAAO,IAAI,CAAC,CAAC,KAAiB,QAAQ,IAAI,CAAC,IAAA,aAAG,EAAiB,IAAI,CAAC,CAAC,CAAa,EAAE;gBACvF,IAAI,CAAC,CAAC,CAAc,WAAW,GAAG,IAAI,CAAC,CAAC,CAAa;aACrD;iBAAM,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAa,EAAE;gBACtD,IAAI,CAAC,CAAC,CAAc,WAAW,CAAC,IAAI,CAAC,CAAC,CAAa,OAAO,CAAC,CAAC;aAC5D;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAO,IAAI,CAAC,EAAE,CAAK,CAAC;QACxC,CAAC;QAEO,EAAE;YACT,IAAI,CAAC,EAAE,EAAmB,CAAC;YAC3B,IAAI,CAAC,CAAC,EAAe,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAO,IAAI,CAAC,EAAE,CAAK,CAAC;QACxC,CAAC;QAEO,EAAE;YACT,IAAI,IAAI,CAAC,CAAC,EAAe;gBACxB,GAAG,CAAC,GAAG,CAAO,IAAI,CAAC,CAAC,CAAc,CAAC;aACnC;QACF,CAAC;QAID,MAAM,CAAC,MAAc,EAAE,KAAa;YACnC,IAAI,MAAM,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,IAAiB,IAAI,CAAC,CAAC,EAAc;gBACjE,IAAI,CAAC,EAAE,GAAQ,MAAM,CAAC;gBACtB,IAAI,CAAC,EAAE,GAAO,KAAK,CAAC;gBACpB,MAAM,UAAU,GAAG,MAAM,GAAG,GAAG,CAAC,GAAG,CAAY,IAAI,CAAC,CAAC,CAAc,CAAC;gBACpE,IAAI,CAAC,CAAC,CAAa,KAAK,CAAC,MAAM,GAAG,UAAU,GAAG,IAAI,CAAC;gBACpD,IAAI,CAAC,CAAC,EAAK,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aACrC;QACF,CAAC;QAED,eAAe;YACd,IAAI,IAAI,CAAC,CAAC,EAAK;gBACd,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAI,cAAc,EAAE,CAAC;gBAC9C,MAAM,UAAU,GAAI,EAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,CAAC,CAAC;gBAC5G,OAAO,GAAG,CAAC,GAAG,CAAkB,UAAU,EAAE,UAAU,CAAC,CAAC;aACxD;YACD,OAAO,CAAC,CAAC;QACV,CAAC;QAED,KAAK,CAAC,OAAO,CAAC,QAA+B;YAC5C,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,EAAK;gBACnC,IAAI,IAAI,CAAC,EAAE,EAAU;oBACpB,MAAM,aAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAoB,KAAK,CAAC,CAAC;iBACxD;gBACD,IAAI,CAAC,QAAQ,EAAE;oBACd,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAI,CAAC;oBACvB,qEAAqE;oBACrE,IAAI,CAAC,CAAC,GAAmB,EAAE,CAAC;iBAC5B;gBACD,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;oBAC/B,OAAO,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC,iBAAiB;iBAC/C;gBACD,IAAI,IAAI,CAAC,CAAC,EAAU;oBACnB,OAAO,IAAI,CAAC,EAAE,CAAQ,QAAQ,CAAC,CAAC;iBAChC;qBAAM;oBACN,IAAI,IAAI,CAAC,CAAC,CAAiB,MAAM,EAAE;wBAClC,MAAM,IAAI,GAAgB,IAAI,GAAG,EAAU,CAAC;wBAC5C,IAAI,CAAC,CAAC,CAAiB,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;wBACpE,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;4BAC/B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gCAC9B,IAAI,CAAC,CAAC,CAAiB,IAAI,CAAC,OAAO,CAAC,CAAC;6BACrC;yBACD;qBACD;yBAAM;wBACN,IAAI,CAAC,CAAC,CAAiB,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;qBACzC;iBACD;aACD;YACD,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,KAAK,CAAC,MAAM,CAAC,WAAoC;YAChD,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAI;YACvB,IAAI,CAAC,IAAI,EAAE;gBACV,OAAO;aACP;YACD,IAAI;gBACH,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBACvE,KAAK,MAAM,OAAO,IAAI,WAAW,EAAE;oBAClC,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;iBAClC;aACD;YAAC,OAAO,CAAC,EAAE;gBACX,+DAA+D;gBAC/D,qCAAqC;aACrC;QACF,CAAC;QAED,WAAW,CAAC,IAAe;YAC1B,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,EAAK,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,CAAC;QAED,YAAY,CAAC,KAAkB;YAC9B,IAAI,CAAC,CAAC,EAAK,YAAY,CAAC,KAAK,CAAC,CAAC;QAChC,CAAC;QAED,YAAY;YACX,OAAO,IAAI,CAAC,CAAC,EAAK,YAAY,EAAE,IAAI,EAAE,CAAC;QACxC,CAAC;QAED,QAAQ,CAAC,IAAgB;YACxB,IAAI,IAAI,CAAC,CAAC,EAAK;gBACd,IAAI,IAAI,EAAE;oBACT,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBACvB,IAAI,CAAC,CAAC,CAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC3B;qBAAM,IAAI,IAAI,CAAC,CAAC,CAAI,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC7C,IAAI,CAAC,CAAC,CAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;iBACvB;aACD;QACF,CAAC;QAED,KAAK,CAAC,MAAM,CAAC,IAAe;YAC3B,IAAI,IAAI,CAAC,CAAC,EAAK;gBACd,OAAO,IAAI,CAAC,CAAC,CAAI,MAAM,CAAC,IAAI,CAAC,CAAC;aAC9B;QACF,CAAC;QAGO,KAAK,CAAC,EAAE,CAAQ,QAA8B;YACrD,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAI;YACvB,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;gBACzB,IAAI,CAAC,EAAE,GAAW,IAAI,CAAC;gBACvB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;gBACzC,IAAI;oBACH,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;iBACrF;gBAAC,OAAO,CAAC,EAAE;oBACX,wEAAwE;oBACxE,iEAAiE;oBACjE,iFAAiF;oBACjF,IAAI,CAAC,EAAE,CAAS,KAAK,CAAC,CAAC,CAAC,CAAC;iBACzB;gBACD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;gBACzC,IAAI,YAAY,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,EAAE;oBACpI,IAAI,CAAC,CAAC,GAAe,YAAY,CAAC;oBAClC,IAAI,CAAC,CAAC,CAA6B,IAAI,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,EAAc,KAAK,EAAE,IAAI,CAAC,CAAC,EAAW,CAAC,CAAC;iBACnG;gBACD,IAAI,CAAC,EAAE,GAAW,KAAK,CAAC;gBACxB,IAAI,CAAC,EAAE,CAAoB,IAAI,EAAE,CAAC;gBAClC,IAAI,CAAC,EAAE,EAAkB,CAAC;gBAC1B,IAAI,IAAI,CAAC,CAAC,EAAQ;oBACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAClB;gBACD,IAAI,CAAC,EAAE,EAAuB,CAAC;aAC/B;QACF,CAAC;QAEO,EAAE;YACT,IAAI,CAAC,IAAI,CAAC,CAAC,EAAyB;gBACnC,IAAI,CAAC,CAAC,GAA6B,IAAI,gBAAG,CAAoB,YAAY,IAAI,CAAC,EAAE,oBAAoB,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA4B,EAAE,IAAgE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjO,IAAI,CAAC,CAAC,GAA0B,IAAI,CAAC,CAAC,CAA2B,MAAM,CAAC,IAAI,CAAC,EAAE,CAAgB,CAAC;aAChG;QACF,CAAC;QAEO,EAAE;YACT,IAAI,IAAI,CAAC,qBAAqB,EAAE;gBAC/B,IAAI,CAAC,EAAE,EAA2B,CAAC;gBACnC,IAAI,CAAC,CAAC,EAAyB,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,CAAC,CAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;oBACzF,IAAI,CAAC,CAAC,CAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,KAAK,gCAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;aAC7F;QACF,CAAC;QAEO,EAAE;YACT,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC,CAAI,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC;YAC3E,wFAAwF;YACxF,IAAI,IAAI,CAAC,CAAC,IAAgB,WAAW,IAAI,CAAC,IAAI,CAAC,EAAE,IAAY,IAAI,CAAC,CAAC,EAAc;gBAChF,wFAAwF;gBACxF,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;oBAChC,IAAI,CAAC,CAAC,CAAa,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBACzC;gBACD,IAAI,CAAC,CAAC,CAAO,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;aAC3C;iBAAM,IAAI,IAAI,CAAC,CAAC,EAAc;gBAC9B,IAAI,CAAC,CAAC,CAAa,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC5C,IAAI,IAAI,CAAC,CAAC,KAAW,GAAG,CAAC,GAAG,EAAe,EAAE;oBAC5C,IAAI,CAAC,KAAK,EAAE,CAAC;iBACb;gBACD,IAAI,CAAC,CAAC,CAAO,eAAe,CAAC,UAAU,CAAC,CAAC;aACzC;QACF,CAAC;QAED,IAAI,SAAS;YACZ,OAAO,IAAI,CAAC,CAAC,CAAU;QACxB,CAAC;KACD,CAAA;IAl0Bc,gBAAgB;QA+D5B,WAAA,kBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,cAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,cAAG,CAAA;QACH,WAAA,iBAAG,CAAA;QACH,WAAA,gBAAG,CAAA;QACH,WAAA,kBAAG,CAAA;QACH,YAAA,WAAG,CAAA;QACH,YAAA,YAAI,CAAA;QACJ,YAAA,gBAAG,CAAA;QACH,YAAA,cAAG,CAAA;QACH,YAAA,SAAG,CAAA;OA3ES,gBAAgB,CAk0B9B;IAED,MAAM,wBAAwB;QAC7B,KAAK,CAAC,OAAkB;YACvB,OAAO,OAAO,CAAC,MAAM,CAAC;QACvB,CAAC;KACD;IAED,MAAM,gBAAgB;QAErB,SAAS,CAAC,OAAkB;YAC3B,OAAO,YAAY,CAAC,WAAW,CAAC;QACjC,CAAC;QAED,aAAa,CAAC,OAAkB;YAC/B,OAAO,YAAY,CAAC,gBAAgB,CAAC;QACtC,CAAC;KACD;IAED,MAAM,cAAc;QAEnB,YACS,CAAmB,EACnB,CAAiD;YADjD,MAAC,GAAD,CAAC,CAAkB;YACnB,MAAC,GAAD,CAAC,CAAgD;QAE1D,CAAC;QAED,WAAW,CAAC,OAAkB;YAC7B,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,YAAY,IAAI,CAAC,OAAO,CAAC,gBAAgB,KAAK,gCAAwB,CAAC,IAAI,CAAC,CAAC;QACrG,CAAC;QAED,KAAK,CAAC,WAAW,CAAC,OAAkB;YACnC,IAAI,MAAM,GAAgB,EAAE,CAAC;YAC7B,IAAI,IAAI,CAAC,CAAC,CAAQ,YAAY,EAAE;gBAC/B,IAAI;oBACH,MAAM,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,CAAC,CAAQ,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;iBAC1F;gBAAC,OAAO,CAAC,EAAE;oBACX,IAAI,CAAU,CAAC,CAAC,OAAQ,CAAC,UAAU,CAAC,wBAAwB,CAAC,EAAE;wBAC9D,MAAM,CAAC,CAAC;qBACR;iBACD;aACD;YACD,OAAO,MAAM,CAAC;QACf,CAAC;KACD;IAYD,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,eAAG;;iBACb,gBAAW,GAAG,EAAH,AAAK,CAAC;iBACjB,qBAAgB,GAAG,cAAH,AAAiB,CAAC;QAUlD,YACS,CAAkB,EAClB,CAAgB,EAChB,CAAY,EACZ,CAA+C,EAC/C,CAAgB,EAChB,CAA0B,EACjB,CAAiC,EACnC,CAAkC,EAC1B,CAA0C,EAClD,CAAkC,EAClC,CAAmC,EAC/B,CAAuC,EACtC,CAAuC;YAE3D,KAAK,EAAE,CAAC;YAdA,MAAC,GAAD,CAAC,CAAiB;YAClB,MAAC,GAAD,CAAC,CAAe;YAChB,MAAC,GAAD,CAAC,CAAW;YACZ,MAAC,GAAD,CAAC,CAA8C;YAC/C,MAAC,GAAD,CAAC,CAAe;YAChB,MAAC,GAAD,CAAC,CAAyB;YACjB,MAAC,GAAD,CAAC,CAAgC;YAClB,MAAC,GAAD,CAAC,CAAgB;YACT,MAAC,GAAD,CAAC,CAAwB;YACjC,MAAC,GAAD,CAAC,CAAgB;YACjB,MAAC,GAAD,CAAC,CAAiB;YACd,MAAC,GAAD,CAAC,CAAqB;YACrB,MAAC,GAAD,CAAC,CAAqB;YArB3C,MAAC,GAA0D,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAA4B,CAAC,CAAC;YACvH,6BAAwB,GAAgC,IAAI,CAAC,CAAC,CAAyB,KAAK,CAAC;YAI9F,MAAC,GAAuB,KAAK,CAAC;YAC9B,MAAC,GAAmB,IAAI,GAAG,EAA+F,CAAC,CAAC,oCAAoC;YAkBvK,IAAI,CAAC,CAAC,GAAgB;gBACrB,SAAS,EAAE,CAAC,OAA8B,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAY,SAAS,CAAC,OAAO,CAAC;gBACnF,KAAK,EAAU,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,uBAAuB,CAAC;aAC1E,CAAC;YACF,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAY,wBAAwB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAS,CAAC,CAAC,CAAC;YAClF,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAY,qBAAqB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAS,CAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,CAAC,CAAS,CAAC,CAAoB,wBAAwB,CAAC,KAAK,CAAC,EAAE;gBACpE,IAAI,CAAC,CAAC,CAAgB,KAAK,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAED,IAAI,UAAU;YACb,OAAO,cAAY,CAAC,gBAAgB,CAAC;QACtC,CAAC;QAED,IAAI,YAAY,CAAC,YAA2C;YAC3D,IAAI,CAAC,CAAC,GAAe,YAAY,CAAC;QACnC,CAAC;QAED,cAAc,CAAC,SAAsB;YACpC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YAEtD,MAAM,iBAAiB,GAAG,GAAG,CAAC,GAAG,CAAI,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAM,MAAM,CAAC,SAAS,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC,EAAe,CAAC,CAAC;YACrH,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAK,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,kCAAkC,CAAC,CAAC,CAAC;YAC3F,MAAM,gBAAgB,GAAG,GAAG,CAAC,GAAG,CAAI,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAC9E,MAAM,SAAS,GAAG,IAAI,eAAG,CAAO,gBAAgB,EAAE;gBACjD,sBAAsB,EAAE,IAAI,CAAC,CAAC;aAC9B,CAAC,CAAC;YAEH,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,SAAS,EAAE,iBAAiB,EAAE,IAAI,eAAG,EAAc,EAAE,CAAC;QACnH,CAAC;QAEO,CAAC,CAAQ,KAAyB,EAAE,QAAoB,EAAE,IAAe;YAChF,IAAI,CAAC,CAAC,IAAI,YAAY,WAAG,CAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBAC9D,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBAC9B,OAAO,SAAS,CAAC;iBACjB;qBAAM,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;oBACtC,OAAO,KAAK,CAAC;iBACb;qBAAM,IAAI,CAAC,IAAA,WAAG,EAAM,IAAI,CAAC,OAAO,CAAC,EAAE;oBACnC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,4BAA4B,EAAE,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAA,sBAAG,EAAuB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,sFAAsF;iBACvN;qBAAM,IAAI,IAAI,CAAC,OAAO,KAAK,EAAE,EAAE;oBAC/B,OAAO,IAAI,CAAC,OAAO,CAAC;iBACpB;qBAAM;oBACN,OAAO,SAAS,CAAC;iBACjB;aACD;YAED,OAAO;gBACN,QAAQ,EAAE,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC1D,CAAC,KAAwB,EAAiD,EAAE;wBAC3E,OAAO,IAAI,OAAO,CAAuC,CAAC,OAAO,EAAE,EAAE;4BACpE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wBACvD,CAAC,CAAC,CAAC;oBACJ,CAAC;gBACF,4BAA4B,EAAE,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,sFAAsF;aACzJ,CAAC;QACH,CAAC;QAED,aAAa,CAAC,OAAyC,EAAE,KAAa,EAAE,YAAuC;YAC9G,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACxE,MAAM,aAAa,GAA+B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,IAAA,eAAG,EAAM,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACnI,MAAM,WAAW,GAAG,IAAA,WAAG,EAAM,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAY,WAAW,CAAC,IAAA,eAAG,EAAK,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC7L,MAAM,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;YAC9D,MAAM,OAAO,GAAG,CAAC,aAAa,IAAI,aAAa,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,EAAE;gBACpH,IAAI,KAAK,GAAG,CAAC,EAAE;oBACd,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;iBAC7B;gBACD,IAAI,GAAG,GAAG,CAAC,EAAE;oBACZ,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;iBACzB;gBACD,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE;oBACpD,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;iBAC9B;gBACD,IAAI,KAAK,GAAG,GAAG,EAAE;oBAChB,MAAM,IAAI,GAAG,KAAK,CAAC;oBACnB,KAAK,GAAG,GAAG,CAAC;oBACZ,GAAG,GAAG,IAAI,CAAC;iBACX;gBACD,OAAO,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACf,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAY,aAAa,EAAE,CAAC,IAAI,KAAK,mBAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;YACtG,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACpD,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAQ,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;YAEnD,QAAQ;YACR,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAC/B,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;YAEnC,IAAI,cAAc,GAAG,IAAI,CAAC;YAC1B,IAAI,IAAI,CAAC,OAAO,EAAE;gBACjB,cAAc,GAAG,oBAAoB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAiB,CAAC;aAC5E;YAED,IAAI,CAAC,CAAC,CAAc,IAAI,EAAE,YAAY,CAAC,CAAC;YAExC,IAAI,QAAQ,EAAE;gBACb,MAAM,eAAe,GAAG,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAuC,sBAAsB,CAAC,CAAC;gBACzH,MAAM,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAG,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBAChF,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,EAAE;oBAC7F,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAW,IAAI,CAAC;oBAChC,KAAK;oBACL,QAAQ,EAAE,IAAI,CAAC,CAAC,CAA2B,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC;oBACnE,eAAe;oBACf,YAAY,EAAE,CAAC,0CAA0C,CAAC;oBAC1D,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAA,aAAG,EAAW,OAAO,CAAC,UAAU,CAAC;oBAC9D,aAAa,EAAE,aAAa,EAAE,aAAa;oBAC3C,eAAe,EAAE,CAAC,cAAc;oBAChC,mBAAmB,EAAE,IAAI;oBACzB,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK;iBACxB,CAAC,CAAC;aACH;iBAAM;gBACN,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE;oBACpE,KAAK;oBACL,QAAQ,EAAE,IAAI;oBACd,YAAY,EAAE,CAAC,0CAA0C,CAAC;oBAC1D,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAA,aAAG,EAAW,OAAO,CAAC,UAAU,CAAC;oBAC9D,aAAa,EAAE,aAAa,EAAE,aAAa;oBAC3C,eAAe,EAAE,CAAC,cAAc;oBAChC,mBAAmB,EAAE,IAAI;iBACzB,CAAC,CAAC;aACH;YAED,IAAI,OAAO,EAAE;gBACZ,YAAY,CAAC,IAAI,CAAC,SAAS,GAAG,iCAAiC,CAAC;gBAChE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,GAAG,CAAM,OAAO,CAAC,CAAC;aAChE;iBAAM;gBACN,IAAI,SAA6B,CAAC;gBAClC,IAAI,IAAI,CAAC,CAAC,CAAmB,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE;oBACzD,SAAS,GAAG,qBAAS,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAClD,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;wBACzB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAY,aAAa,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;qBACtH;iBACD;gBACD,YAAY,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,mCAAmC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC9F,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;aAC7C;YAED,IAAI,CAAC,cAAc,EAAE;gBACpB,YAAY,CAAC,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;gBACxE,IAAI,YAAY,CAAC,SAAS,CAAC,aAAa,EAAE;oBACzC,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,GAAG,WAAW,CAAC;iBAC9G;aACD;YAED,YAAY,CAAC,SAAS,CAAC,OAAO,GAA0B,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,EAAW,eAAe,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;YAEvH,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAK,kBAAkB,CAAC,IAAI,CAAC,CAAC;YACxD,IAAI,WAAW,CAAC,IAAI,EAAE;gBACrB,YAAY,CAAC,iBAAiB,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACrD;YACD,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;YAE/E,IAAI,IAAI,CAAC,CAAC,EAAc;gBACvB,YAAY,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,CAAa;aACzD;YACD,IAAI,CAAC,CAAC,CAAY,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,CAAC,CAAgB,0BAA0B,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC;YAE/E,4BAA4B;YAC5B,IAAI,CAAC,CAAC,CAAiB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC,CAAC;QACnG,CAAC;QAEO,CAAC;YACR,4FAA4F;YAC5F,8CAA8C;YAC9C,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAiB,IAAI,EAAE,CAAC,CAAC;YACpD,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;gBACvB,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAiB,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC9C,IAAI,KAAK,EAAE;oBACV,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;oBACvD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;iBACtD;aACD;QACF,CAAC;QAEO,CAAC,CAAc,IAAe,EAAE,YAAuC;YAC9E,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAClB,gGAAgG;gBAChG,IAAI,CAAC,IAAI,CAAC,CAAC,EAAa;oBACvB,IAAI,CAAC,CAAC,GAAc,IAAI,CAAC;oBACzB,IAAI,CAAC,CAAC,EAAS,CAAC;iBAChB;gBACD,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;oBAC3B,MAAM,QAAQ,GAAG,IAAI,eAAI,CAAa,YAAY,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,EAAqB,IAAI,CAAC,CAAC,CAAc,CAAC;oBACtH,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC;iBACjC;gBACD,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACnC;iBACI,IAAI,YAAY,CAAC,QAAQ,EAAE;gBAC/B,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;gBAChC,YAAY,CAAC,QAAQ,GAAG,SAAS,CAAC;aAClC;QACF,CAAC;QAEO,CAAC,CAAY,SAAsB,EAAE,QAAmB;YAC/D,SAAS,CAAC,aAAc,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAe,IAAI,CAAC,CAAC,CAAO,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvI,CAAC;QAEO,CAAC,CAA2B,OAAwB,EAAE,IAA2B;YACxF,gFAAgF;YAChF,+GAA+G;YAC/G,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC;QAEO,CAAC,CAAmB,WAAoB,EAAE,IAA2B;YAC5E,IAAI,CAAC,IAAI,EAAE;gBACV,OAAO,KAAK,CAAC;aACb;YAED,qHAAqH;YACrH,kEAAkE;YAClE,OAAO,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,CAAC,CAAC;QACzD,CAAC;QAEO,CAAC,CAAiB,IAA2B;YACpD,OAAO,IAAI,EAAE,EAAE,KAAK,kBAAG,CAAa,EAAE,CAAC;QACxC,CAAC;QAEO,CAAC,CAAmB,IAA2B;YACtD,IAAI,IAAI,EAAE;gBACT,OAAO,IAAI,CAAC,EAAE,KAAK,kBAAG,CAAW,EAAE,IAAI,IAAI,CAAC,CAAC,CAAiB,IAAI,CAAC,CAAC;aACpE;iBAAM;gBACN,OAAO,KAAK,CAAC;aACb;QACF,CAAC;QAEO,CAAC,CAAW,IAAe;YAClC,IAAI,IAAI,CAAC,SAAS,EAAE;gBACnB,QAAQ,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE;oBAC1B,KAAK,kBAAG,CAAW,EAAE;wBACpB,OAAO,gBAAQ,CAAC,IAAI,CAAC;oBACtB,KAAK,kBAAG,CAAa,EAAE;wBACtB,OAAO,gBAAQ,CAAC,MAAM,CAAC;iBACxB;aACD;YACD,OAAO,IAAI,CAAC,gBAAgB,KAAK,gCAAwB,CAAC,SAAS,IAAI,IAAI,CAAC,gBAAgB,KAAK,gCAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,gBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAQ,CAAC,IAAI,CAAC;QACtK,CAAC;QAEO,CAAC,CAAgB,KAAkB;YAC1C,MAAM,eAAe,GAAgB,EAAE,CAAC;YAExC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAyB;gBACnC,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;oBACzB,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;wBAEhC,SAAS,aAAa,CAAC,WAAsB;4BAC5C,KAAK,MAAM,KAAK,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE;gCACjD,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,KAAK,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,KAAK,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oCAC5I,KAAK,CAAC,QAAQ,CAAC,SAAS,GAAG,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC;oCAC1D,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oCAC5B,aAAa,CAAC,KAAK,CAAC,CAAC;iCACrB;6BACD;wBACF,CAAC;wBACD,aAAa,CAAC,IAAI,CAAC,CAAC;wBAEpB,MAAM,cAAc,GAAmB,IAAI,GAAG,EAAE,CAAC;wBACjD,SAAS,YAAY,CAAC,WAAsB;4BAC3C,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,KAAK,SAAS,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE;gCACrG,IAAI,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;oCAC3C,OAAO;iCACP;qCAAM;oCACN,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;iCACvC;gCAED,IAAI,aAAa,GAAG,KAAK,CAAC;gCAC1B,IAAI,WAAW,GAAG,KAAK,CAAC;gCACxB,KAAK,MAAM,KAAK,IAAI,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE;oCAChD,IAAI,aAAa,IAAI,WAAW,EAAE;wCACjC,MAAM;qCACN;oCACD,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,EAAE;wCACjC,IAAI,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE;4CAC7B,WAAW,GAAG,IAAI,CAAC;yCACnB;6CAAM;4CACN,aAAa,GAAG,IAAI,CAAC;yCACrB;qCACD;iCACD;gCACD,IAAI,WAAW,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,KAAK,IAAI,CAAC,EAAE;oCACtF,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;oCAC7C,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oCACzC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;iCACjC;qCAAM,IAAI,aAAa,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE;oCAC9E,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;oCAC9C,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oCACzC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;iCACjC;6BACD;wBACF,CAAC;wBACD,YAAY,CAAC,IAAI,CAAC,CAAC;qBACnB;iBACD;aACD;YACD,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACtC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACpB,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAiB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC7D,IAAI,YAAY,EAAE;oBACjB,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;iBAC7C;YACF,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,CAAC,CAAyB,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC;QAED,cAAc,CAAC,QAA0C,EAAE,KAAa,EAAE,YAAuC;YAChH,YAAY,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;YAEvC,IAAI,CAAC,CAAC,CAAiB,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvD,IAAI,CAAC,CAAC,CAAgB,6BAA6B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAEtE,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC;YACjC,YAAY,CAAC,QAAQ,GAAG,SAAS,CAAC;QACnC,CAAC;QAED,eAAe,CAAC,YAAuC;YACtD,YAAY,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YACrC,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YACjC,YAAY,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QAC1C,CAAC;;IA5VI,YAAY;QAoBf,WAAA,kBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,YAAA,YAAI,CAAA;QACJ,YAAA,uBAAI,CAAA;QACJ,YAAA,gBAAG,CAAA;OAzBA,YAAY,CA6VjB;IAED,MAAM,OAAQ,SAAQ,eAAG;QAGxB,YAAoB,CAAiB;YACpC,KAAK,EAAE,CAAC;YADW,MAAC,GAAD,CAAC,CAAgB;QAErC,CAAC;QAED,IAAI,IAAI,CAAC,IAA8D;YACtE,IAAI,CAAC,CAAC,GAAO,IAAI,CAAC;QACnB,CAAC;QAEM,mBAAmB,CAAC,QAAmB;YAC7C,IAAI,QAAQ,CAAC,gBAAgB,KAAK,gCAAwB,CAAC,IAAI,EAAE;gBAChE,OAAO,KAAK,CAAC;aACb;YACD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAO,QAAQ,CAAC,EAAE;gBAC5B,OAAO,KAAK,CAAC;aACb;YAED,IAAI,IAAI,CAAC,CAAC,EAAM;gBACf,MAAM,MAAM,GAAc,IAAI,CAAC,CAAC,CAAK,gBAAgB,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAK,QAAQ,EAAE,CAAC;gBACzF,IAAI,IAAI,CAAC,CAAC,CAAO,MAAM,CAAC,EAAE;oBACzB,OAAO,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,KAAK,gCAAwB,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAO,CAAC,CAAC,CAAC,CAAC;iBAChI;gBACD,OAAO,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,KAAK,gCAAwB,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAO,CAAC,CAAC,CAAC,CAAC;aACjI;iBAAM;gBACN,OAAO,KAAK,CAAC;aACb;QACF,CAAC;QAEO,CAAC,CAAO,IAAe;YAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAY,aAAa,EAAE,CAAC,IAAI,KAAK,mBAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;YACtG,IAAI,IAAI,EAAE;gBACT,OAAO,IAAI,CAAC;aACZ;YACD,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,EAAE;gBACvC,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAY,gBAAgB,EAAE,CAAC;gBAC3D,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,kBAAG,CAAa,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,KAAK,gCAAwB,CAAC,IAAI,CAAC;gBACrI,IAAI,QAAQ,EAAE;oBACb,OAAO,aAAa,CAAC,YAAY,IAAI,aAAa,CAAC,cAAc,CAAC;iBAClE;gBACD,OAAO,aAAa,CAAC,YAAY,CAAC;aAClC;YACD,OAAO,KAAK,CAAC;QACd,CAAC;KACD;IAED,MAAM,6BAA8B,SAAQ,aAAG;QAE9C,YAAY,mBAAwB,EAA2B,CAAyC;YACvG,KAAK,EAAE,CAAC;YADsD,MAAC,GAAD,CAAC,CAAwC;YAEvG,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAChC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,IAAA,WAAE,EAAkB,CAAC,CAAC,KAAK,CAAC,EAAE;oBAC7C,mBAAmB,CAAC,KAAK,CAAC,IAAA,cAAQ,EAAC,CAAe,EAAE,IAA8F,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;iBACnL;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAEkB,KAAK,CAAC,CAAC,CAAS,MAAe,EAAE,OAAsD;YACzG,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,EAAqB,CAAC;YAC9C,IAAI,mBAAmB,GAAwC,SAAS,CAAC;YACzE,IAAI,gBAAgB,GAAY,KAAK,CAAC;YACtC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzB,mBAAmB,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;oBAC9C,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAM,OAAiC,CAAC,eAAe,CAAC,IAAK,OAAiC,CAAC,kBAAkB,EAAE;wBACtI,gBAAgB,GAAG,IAAI,CAAC;qBACxB;oBACD,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,WAAW,EAAE,eAAe,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAC/E,CAAC,CAAC,CAAC;aACH;YAED,IAAI,CAAC,gBAAgB,EAAE;gBACtB,mBAAmB,GAAG,SAAS,CAAC;aAChC;YAED,MAAM,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;QAChD,CAAC;KACD;IAED,IAAM,SAAS,GAAf,MAAM,SAAU,SAAQ,eAAG;QAK1B,YACS,CAAU,EACJ,CAAiC;YAE/C,KAAK,EAAE,CAAC;YAHA,MAAC,GAAD,CAAC,CAAS;YACa,MAAC,GAAD,CAAC,CAAe;YALxC,MAAC,GAAc,IAAI,WAAG,EAAiB,CAAC;YAChC,gBAAW,GAAG,IAAI,CAAC,CAAC,CAAY,KAAK,CAAC;QAOtD,CAAC;QAED;;WAEG;QACH,kBAAkB,CAAC,OAAkB;YACpC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAU,aAAG,CAAI,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;YACvE,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC;QACzD,CAAC;QAED,yBAAyB,CAAC,OAAkB;YAC3C,OAAO,IAAI,CAAC,CAAC,CAAU,aAAG,CAAI,eAAe,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC;QACnE,CAAC;QAEM,oBAAoB,CAAC,OAAY;YACvC,IAAI,CAAC,CAAC,GAAmB,OAAO,CAAC;QAClC,CAAC;QAEO,CAAC,CAAU,MAAW,EAAK,OAAkB,EAAE,SAAkB,KAAK;YAC7E,IAAI,CAAC,IAAI,CAAC,CAAC,EAAkB;gBAC5B,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;aACtC;YAED,MAAM,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAAiB,aAAa,CAAC;gBAC9D,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAE;gBACjB,CAAC,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC;aAClC,CAAC,CAAC;YAEH,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAW,UAAU,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;YACpE,MAAM,OAAO,GAAc,EAAE,CAAC;YAC9B,MAAM,SAAS,GAAc,EAAE,CAAC;YAChC,MAAM,MAAM,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;YAC5C,IAAA,6BAAG,EAA+B,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;YACvF,IAAI,MAAM,EAAE;gBACX,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aACxE;iBAAM;gBACN,IAAI,CAAC,OAAO,EAAE,CAAC;aACf;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,CAAC,GAAmB,SAAS,CAAC;YACnC,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KACD,CAAA;IAvDK,SAAS;QAOZ,WAAA,aAAG,CAAA;OAPA,SAAS,CAuDd;IAEM,IAAM,IAAI,GAAV,MAAM,IAAe,SAAQ,gBAAgB;QAInD,YACC,EAAU,EACV,KAAa,EACI,EAAmB,EACrB,YAAiB,EACT,oBAAyB,EAC/B,cAAmB,EACb,oBAAyB,EAC9B,eAAoB,EACjB,kBAAuB,EACxB,iBAAsB,EACpB,mBAAwB,EACtB,qBAA0B,EAC9B,iBAAsB,EAC3B,YAAkB,EACd,EAAsC,EACvC,eAAoB,EACnB,EAAsC,EAC5C,UAAe;YAE5B,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,oBAAoB,EAAE,cAAc,EAAE,oBAAoB,EAAE,eAAe,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,YAAY,EAAE,iBAAiB,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;YAjB5O,OAAE,GAAF,EAAE,CAAiB;YAYA,OAAE,GAAF,EAAE,CAAmB;YAErB,OAAE,GAAF,EAAE,CAAmB;YAnBlD,OAAE,GAAmB,KAAK,CAAC;QAuBnC,CAAC;QAES,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,EAAE,EAAS;gBAWpB,IAAI,CAAC,EAAE,CAAe,UAAU,CAAqD,wBAAwB,EAAE;oBAC9G,WAAW,EAAE,IAAI,oBAAG,CAAmB,IAAI,CAAC,EAAE,CAAU;oBACxD,EAAE,EAAE,IAAI,CAAC,EAAE;iBACX,CAAC,CAAC;gBACH,IAAI,CAAC,EAAE,EAAU,CAAC;gBAClB,IAAI,CAAC,EAAE,CAAc,YAAY,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAe,eAAe,CAAC,UAAU,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;qBACxH,IAAI,CAAC,GAAG,EAAE,CAAC,IAAA,WAAG,EAAK,IAAI,CAAC,CAAC;qBACzB,IAAI,CAAC,GAAG,EAAE;oBACV,IAAI,CAAC,EAAE,EAAa,CAAC;gBACtB,CAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,EAAE,GAAU,IAAI,CAAC;aACtB;QACF,CAAC;KACD,CAAA;IApDY,oBAAI;mBAAJ,IAAI;QAQd,WAAA,kBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,cAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,cAAG,CAAA;QACH,WAAA,iBAAG,CAAA;QACH,WAAA,gBAAG,CAAA;QACH,YAAA,kBAAG,CAAA;QACH,YAAA,WAAG,CAAA;QACH,YAAA,gBAAG,CAAA;QACH,YAAA,YAAI,CAAA;QACJ,YAAA,gBAAG,CAAA;QACH,YAAA,cAAG,CAAA;QACH,YAAA,eAAG,CAAA;QACH,YAAA,SAAG,CAAA;OAtBO,IAAI,CAoDhB;IAED,MAAa,IAAS,SAAQ,gBAAgB;QAA9C;;YAES,OAAE,GAAmB,KAAK,CAAC;QAQpC,CAAC;QANU,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,EAAE,EAAS;gBACpB,IAAI,CAAC,EAAE,EAAU,CAAC;gBAClB,IAAI,CAAC,EAAE,GAAU,IAAI,CAAC;aACtB;QACF,CAAC;KACD;IAVD,oBAUC;IAOM,IAAM,IAAI,GAAV,MAAM,IAAI;QAKhB,YACkB,CAAc,EAChB,CAAkC,EAC1B,CAA0C,EAC3C,CAAiD,EAC1D,CAAgC;YAJ5B,MAAC,GAAD,CAAC,CAAa;YACC,MAAC,GAAD,CAAC,CAAgB;YACT,MAAC,GAAD,CAAC,CAAwB;YAC1B,MAAC,GAAD,CAAC,CAA+B;YACzC,MAAC,GAAD,CAAC,CAAc;YAR7B,MAAC,GAAmB,SAAG,CAAoB,WAAW,EAA8B,CAAC;YASrG,IAAI,CAAC,CAAC,GAAc,6BAA6B,CAAC,CAAM,WAAW,EAAE,EAAE,CAAC;QACzE,CAAC;QAGD,IAAI,UAAU,CAAC,UAAsD;YACpE,IAAI,CAAC,CAAC,GAAe,UAAU,CAAC;QACjC,CAAC;QAEO,CAAC,CAAgB,aAA6C,EAAE,WAAqB,EAAE,IAAY,EAAE,qBAAwC;YACpJ,OAAO,aAAa,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,qBAAqB,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAE;gBACvG,IAAI,sBAAsB,EAAE;oBAC3B,MAAM,aAAa,GAAa,EAAE,CAAC;oBACnC,KAAK,MAAM,IAAI,IAAI,sBAAsB,EAAE;wBAC1C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;4BAC/G,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5B;qBACD;oBACD,IAAI,aAAa,CAAC,MAAM,EAAE;wBACzB,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,qCAAqC,IAAI,CAAC,CAAC,uFAA4F,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBACxL;iBACD;gBACD,OAAO,sBAAsB,CAAC;YAC/B,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,CAAC,CAAiC,aAAwB,EAAE,WAAqB;YACxF,IAAI,CAAC,aAAa,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,EAAc;gBACvD,OAAO;aACP;YACD,MAAM,IAAI,GAAG,IAAA,UAAG,GAAW,CAAC;YAE5B,IAAI,CAAC,CAAC,GAAuB,IAAI,kBAAG,EAAsB,CAAC;YAC3D,IAAI,CAAC,CAAC,CAA2B,wBAAwB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAgB,IAAI,CAAC,CAAC,EAAc,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAqB,KAAK,CAAC,CAAC,CAAC;YAChK,IAAI,CAAC,CAAC,CAAiB,OAAO,CAAC,CAAC,IAAI,kBAAG,CAAwB,IAAI,CAAC,CAAC,EAAE,kBAAG,CAAwB,SAAS,CAAC,CAAC;YAC7G,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,UAAG,CAAG,IAAI,CAAC,CAAC;YACjD,IAAI,IAAI,CAAC,CAAC,CAAa,aAAa,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,KAAK,UAAG,CAAG,OAAO,CAAC,EAAE;gBAClF,qCAAqC;gBACrC,aAAa,CAAC,YAAY,EAAE,OAAO,CAAC,SAAG,CAAW,SAAS,EAAE,EAAE,CAAC,CAAC;aACjE;YACD,IAAI,CAAC,CAAC,CAAa,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;gBACxD,aAAa,CAAC,YAAY,EAAE,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,CAAC,CAAyB,aAAwB,EAAE,SAAgB;YAC3E,IAAI,SAAS,CAAC,MAAM,IAAI,aAAa,CAAC,YAAY,EAAE;gBACnD,6FAA6F;gBAC7F,IAAI,CAAC,CAAC,CAAoB,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAA,UAAI,EAAgB,QAAQ,EAAE,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC;gBAE9G,4EAA4E;gBAC5E,wEAAwE;gBACxE,MAAM,aAAa,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,iBAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBAC1F,IAAI,aAAa,CAAC,MAAM,EAAE;oBACzB,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,SAAG,CAAe,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;iBAC3F;aACD;QACF,CAAC;QAED,WAAW,CAAC,IAAsB,EAAE,aAAwB;YAC3D,IAAI,aAAa,CAAC,YAAY,EAAE;gBAC/B,MAAM,aAAa,GAAI,IAAwD,CAAC,OAAO,EAAE,CAAC;gBAC1F,MAAM,SAAS,GAAU,EAAE,CAAC;gBAC5B,MAAM,UAAU,GAAuB;oBACtC,EAAE,EAAE,IAAI,CAAC,CAAC;oBACV,WAAW,EAAE,EAAE;iBACf,CAAC;gBACF,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBAC5B,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACzC,IAAI,IAAI,CAAC,WAAW,EAAE;wBACrB,SAAS,CAAC,IAAI,CAAC,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;qBAC7C;gBACF,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,CAAC,CAAyB,aAAa,EAAE,SAAS,CAAC,CAAC;gBACzD,IAAI,CAAC,CAAC,CAAiC,aAAa,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC;gBAC9E,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EACxC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;aAC7B;QACF,CAAC;QAEO,CAAC,CAAQ,KAAkB;YAClC,IAAI,KAAK,CAAC,IAAI,EAAE;gBACf,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,gCAAgC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACtF;iBAAM;gBACN,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,gDAAgD,CAAC,CAAC;aACxE;QACF,CAAC;QAED,UAAU,CAAC,IAAsB,EAAE,aAAwB,EAAE,WAAmB,EAAE,aAAwB;YACzG,MAAM,YAAY,GAAG,IAAA,SAAG,EAAsB,aAAa,CAAC,YAAa,CAAC,CAAC;YAE3E,MAAM,KAAK,GAAG,IAAI,GAAG,CAAS,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnE,IAAI,aAAa,CAAC,YAAY,EAAE;gBAC/B,yGAAyG;gBACzG,KAAK,MAAM,IAAI,IAAI,aAAa,CAAC,YAAY,CAAC,KAAK,EAAE;oBACpD,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,SAAG,CAAW,SAAS,CAAC,WAAW,EAAE,EAAE;wBAChF,KAAK,CAAC,GAAG,CAAC,UAAG,CAAG,OAAO,CAAC,CAAC;wBACzB,MAAM;qBACN;iBACD;aACD;YAED,IAAI,CAAC,CAAC,CAAQ,KAAK,CAAC,CAAC;YAErB,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAa;YACzC,IAAI,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,YAAY,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;gBAChG,OAAO,KAAK,CAAC;aACb;YACD,MAAM,2BAA2B,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBAC3E,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,EAAa;oBAChC,OAAO,IAAI,CAAC;iBACZ;qBAAM;oBACN,OAAO,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBACvD;YACF,CAAC,CAAC,CAAC;YACH,IAAI,2BAA2B,EAAE;gBAChC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,iCAAyB,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;aAC3E;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAED,UAAU,CAAC,OAAkB;YAC5B,IAAI,CAAC,IAAI,CAAC,CAAC,EAAc;gBACxB,OAAO,IAAI,CAAC;aACZ;YACD,OAAO,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;QAC1F,CAAC;QAED,YAAY,CAAE,QAAqB;YAClC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAc;gBACxB,OAAO,SAAS,CAAC;aACjB;YACD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxB,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;aAC/B;YACD,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5B,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAY,WAAW,CAAC,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QACjJ,CAAC;QAED,KAAK,CAAC,IAAI,CAAC,IAAsB,EAAE,UAAiC,EAAE,WAA+B,EAAE,aAAwB;YAC9H,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAa;YACzC,IAAI,CAAC,aAAa,CAAC,YAAY,IAAI,CAAC,aAAa,EAAE;gBAClD,OAAO;aACP;YAED,IAAI,cAA8C,CAAC;YACnD,IAAI,YAAgC,CAAC;YACrC,IAAI,IAAI,CAAC,CAAC,CAAiB,OAAO,CAAC,kBAAG,CAAwB,SAAS,CAAC,EAAE;gBACzE,YAAY,GAAG,IAAI,CAAC,CAAC,CAAiB,OAAO,CAAC,kBAAG,CAAwB,SAAS,CAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;aACnG;YAED,MAAM,oBAAoB,GAAG,IAAA,SAAG,EAAsB,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAExF,MAAM,eAAe,GAAG,IAAI,kBAAG,EAAa,CAAC;YAC7C,KAAK,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,oBAAoB,EAAE;gBAChD,IAAI,IAAI,KAAK,IAAI,CAAC,CAAC,IAAe,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAG,CAAW,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE;oBAC3K,eAAe,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBACnC,IAAI,IAAI,KAAK,IAAI,CAAC,CAAC,EAAa;wBAC/B,IAAI;4BACH,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;yBACnD;wBAAC,MAAM;4BACP,OAAO;yBACP;qBACD;iBACD;aACD;YAED,MAAM,sBAAsB,GAAG,MAAM,IAAI,CAAC,CAAC,CAA2B,2BAA2B,CAAC,YAAY,CAAC,CAAC;YAChH,IAAI,sBAAsB,EAAE;gBAC3B,KAAK,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,sBAAsB,EAAE;oBAClD,eAAe,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBACnC;aACD;YACD,OAAO,aAAa,CAAC,UAAU,CAAC,eAAe,EAAE,UAAU,EAAE,gCAAiB,CAAC,IAAI,EAAE,YAAY,EAAE,cAAc,EAAE,EAAE,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC;QACrJ,CAAC;QAED,SAAS,CAAC,aAAwB;YACjC,mCAAmC;YACnC,IAAI,aAAa,CAAC,YAAY,EAAE,UAAU,KAAK,MAAM,EAAE;gBACtD,IAAI,CAAC,CAAC,EAAsB,MAAM,EAAE,CAAC;aACrC;QACF,CAAC;KACD,CAAA;IAjMY,oBAAI;mBAAJ,IAAI;QAOd,WAAA,WAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,yBAAG,CAAA;QACH,WAAA,SAAG,CAAA;OAVO,IAAI,CAiMhB","file":"treeView.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DataTransfers, IDragAndDropData } from 'vs/base/browser/dnd';\nimport * as DOM from 'vs/base/browser/dom';\nimport { renderMarkdownAsPlaintext } from 'vs/base/browser/markdownRenderer';\nimport { ActionBar, IActionViewItemProvider } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { ActionViewItem } from 'vs/base/browser/ui/actionbar/actionViewItems';\nimport { IHoverDelegate, IHoverDelegateOptions } from 'vs/base/browser/ui/iconLabel/iconHoverDelegate';\nimport { ITooltipMarkdownString } from 'vs/base/browser/ui/iconLabel/iconLabelHover';\nimport { IIdentityProvider, IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { ElementsDragAndDropData } from 'vs/base/browser/ui/list/listView';\nimport { IAsyncDataSource, ITreeContextMenuEvent, ITreeDragAndDrop, ITreeDragOverReaction, ITreeNode, ITreeRenderer, TreeDragOverBubble } from 'vs/base/browser/ui/tree/tree';\nimport { CollapseAllAction } from 'vs/base/browser/ui/tree/treeDefaults';\nimport { ActionRunner, IAction } from 'vs/base/common/actions';\nimport { timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { isCancellationError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createMatches, FuzzyScore } from 'vs/base/common/filters';\nimport { IMarkdownString, isMarkdownString } from 'vs/base/common/htmlContent';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { Mimes } from 'vs/base/common/mime';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename, dirname } from 'vs/base/common/resources';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { isString } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport 'vs/css!./media/views';\nimport { VSDataTransfer } from 'vs/base/common/dataTransfer';\nimport { localize } from 'vs/nls';\nimport { createActionViewItem, createAndFillInContextMenuActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { Action2, IMenu, IMenuService, MenuId, MenuRegistry, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr, IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { FileKind } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { WorkbenchAsyncDataTree } from 'vs/platform/list/browser/listService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IProgressService } from 'vs/platform/progress/common/progress';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\nimport { FileThemeIcon, FolderThemeIcon, IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { fillEditorsDragData } from 'vs/workbench/browser/dnd';\nimport { IResourceLabel, ResourceLabels } from 'vs/workbench/browser/labels';\nimport { API_OPEN_DIFF_EDITOR_COMMAND_ID, API_OPEN_EDITOR_COMMAND_ID } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { IViewPaneOptions, ViewPane } from 'vs/workbench/browser/parts/views/viewPane';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { PANEL_BACKGROUND, SIDE_BAR_BACKGROUND } from 'vs/workbench/common/theme';\nimport { Extensions, ITreeItem, ITreeItemLabel, ITreeView, ITreeViewDataProvider, ITreeViewDescriptor, ITreeViewDragAndDropController, IViewBadge, IViewDescriptorService, IViewsRegistry, ResolvableTreeItem, TreeCommand, TreeItemCollapsibleState, TreeViewItemHandleArg, TreeViewPaneHandleArg, ViewContainer, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { IActivityService, NumberBadge } from 'vs/workbench/services/activity/common/activity';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IHoverService } from 'vs/workbench/services/hover/browser/hover';\nimport { ITreeViewsService } from 'vs/workbench/services/views/browser/treeViewsService';\nimport { CodeDataTransfers, LocalSelectionTransfer } from 'vs/platform/dnd/browser/dnd';\nimport { toExternalVSDataTransfer } from 'vs/editor/browser/dnd';\nimport { CheckboxStateHandler, TreeItemCheckbox } from 'vs/workbench/browser/parts/views/checkbox';\nimport { setTimeout0 } from 'vs/base/common/platform';\nimport { AriaRole } from 'vs/base/browser/ui/aria/aria';\nimport { TelemetryTrustedValue } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { ITreeViewsDnDService } from 'vs/editor/common/services/treeViewsDndService';\nimport { DraggedTreeItemsIdentifier } from 'vs/editor/common/services/treeViewsDnd';\nimport { IMarkdownRenderResult, MarkdownRenderer } from 'vs/editor/contrib/markdownRenderer/browser/markdownRenderer';\n\nexport class TreeViewPane extends ViewPane {\n\n\tprotected readonly treeView: ITreeView;\n\tprivate _container: HTMLElement | undefined;\n\tprivate _actionRunner: MultipleSelectionActionRunner;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INotificationService notificationService: INotificationService\n\t) {\n\t\tsuper({ ...(options as IViewPaneOptions), titleMenuId: MenuId.ViewTitle, donotForwardArgs: false }, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\t\tconst { treeView } = (<ITreeViewDescriptor>Registry.as<IViewsRegistry>(Extensions.ViewsRegistry).getView(options.id));\n\t\tthis.treeView = treeView;\n\t\tthis._register(this.treeView.onDidChangeActions(() => this.updateActions(), this));\n\t\tthis._register(this.treeView.onDidChangeTitle((newTitle) => this.updateTitle(newTitle)));\n\t\tthis._register(this.treeView.onDidChangeDescription((newDescription) => this.updateTitleDescription(newDescription)));\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (this._container && this.treeView.container && (this._container === this.treeView.container)) {\n\t\t\t\tthis.treeView.setVisibility(false);\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.onDidChangeBodyVisibility(() => this.updateTreeVisibility()));\n\t\tthis._register(this.treeView.onDidChangeWelcomeState(() => this._onDidChangeViewWelcomeState.fire()));\n\t\tif (options.title !== this.treeView.title) {\n\t\t\tthis.updateTitle(this.treeView.title);\n\t\t}\n\t\tif (options.titleDescription !== this.treeView.description) {\n\t\t\tthis.updateTitleDescription(this.treeView.description);\n\t\t}\n\t\tthis._actionRunner = new MultipleSelectionActionRunner(notificationService, () => this.treeView.getSelection());\n\n\t\tthis.updateTreeVisibility();\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.treeView.focus();\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tthis._container = container;\n\t\tsuper.renderBody(container);\n\t\tthis.renderTreeView(container);\n\t}\n\n\toverride shouldShowWelcome(): boolean {\n\t\treturn ((this.treeView.dataProvider === undefined) || !!this.treeView.dataProvider.isTreeEmpty) && ((this.treeView.message === undefined) || (this.treeView.message === ''));\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.layoutTreeView(height, width);\n\t}\n\n\toverride getOptimalWidth(): number {\n\t\treturn this.treeView.getOptimalWidth();\n\t}\n\n\tprotected renderTreeView(container: HTMLElement): void {\n\t\tthis.treeView.show(container);\n\t}\n\n\tprotected layoutTreeView(height: number, width: number): void {\n\t\tthis.treeView.layout(height, width);\n\t}\n\n\tprivate updateTreeVisibility(): void {\n\t\tthis.treeView.setVisibility(this.isBodyVisible());\n\t}\n\n\toverride getActionRunner() {\n\t\treturn this._actionRunner;\n\t}\n\n\toverride getActionsContext(): TreeViewPaneHandleArg {\n\t\treturn { $treeViewId: this.id, $focusedTreeItem: true, $selectedTreeItems: true };\n\t}\n\n}\n\nclass Root implements ITreeItem {\n\tlabel = { label: 'root' };\n\thandle = '0';\n\tparentHandle: string | undefined = undefined;\n\tcollapsibleState = TreeItemCollapsibleState.Expanded;\n\tchildren: ITreeItem[] | undefined = undefined;\n}\n\nfunction isTreeCommandEnabled(treeCommand: TreeCommand, contextKeyService: IContextKeyService): boolean {\n\tconst command = CommandsRegistry.getCommand(treeCommand.originalId ? treeCommand.originalId : treeCommand.id);\n\tif (command) {\n\t\tconst commandAction = MenuRegistry.getCommand(command.id);\n\t\tconst precondition = commandAction && commandAction.precondition;\n\t\tif (precondition) {\n\t\t\treturn contextKeyService.contextMatchesRules(precondition);\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction isRenderedMessageValue(messageValue: string | IMarkdownRenderResult | undefined): messageValue is IMarkdownRenderResult {\n\treturn !!messageValue && typeof messageValue !== 'string' && 'element' in messageValue && 'dispose' in messageValue;\n}\n\nconst noDataProviderMessage = localize('no-dataprovider', \"There is no data provider registered that can provide view data.\");\n\nexport const RawCustomTreeViewContextKey = new RawContextKey<boolean>('customTreeView', false);\n\nclass Tree extends WorkbenchAsyncDataTree<ITreeItem, ITreeItem, FuzzyScore> { }\n\nabstract class AbstractTreeView extends Disposable implements ITreeView {\n\n\tprivate isVisible: boolean = false;\n\tprivate _hasIconForParentNode = false;\n\tprivate _hasIconForLeafNode = false;\n\n\tprivate collapseAllContextKey: RawContextKey<boolean> | undefined;\n\tprivate collapseAllContext: IContextKey<boolean> | undefined;\n\tprivate collapseAllToggleContextKey: RawContextKey<boolean> | undefined;\n\tprivate collapseAllToggleContext: IContextKey<boolean> | undefined;\n\tprivate refreshContextKey: RawContextKey<boolean> | undefined;\n\tprivate refreshContext: IContextKey<boolean> | undefined;\n\n\tprivate focused: boolean = false;\n\tprivate domNode!: HTMLElement;\n\tprivate treeContainer: HTMLElement | undefined;\n\tprivate _messageValue: string | { element: HTMLElement; dispose: () => void } | undefined;\n\tprivate _canSelectMany: boolean = false;\n\tprivate _manuallyManageCheckboxes: boolean = false;\n\tprivate messageElement: HTMLElement | undefined;\n\tprivate tree: Tree | undefined;\n\tprivate treeLabels: ResourceLabels | undefined;\n\tprivate treeViewDnd: CustomTreeViewDragAndDrop | undefined;\n\tprivate _container: HTMLElement | undefined;\n\n\tprivate root: ITreeItem;\n\tprivate markdownRenderer: MarkdownRenderer | undefined;\n\tprivate elementsToRefresh: ITreeItem[] = [];\n\tprivate lastSelection: readonly ITreeItem[] = [];\n\tprivate lastActive: ITreeItem;\n\n\tprivate readonly _onDidExpandItem: Emitter<ITreeItem> = this._register(new Emitter<ITreeItem>());\n\treadonly onDidExpandItem: Event<ITreeItem> = this._onDidExpandItem.event;\n\n\tprivate readonly _onDidCollapseItem: Emitter<ITreeItem> = this._register(new Emitter<ITreeItem>());\n\treadonly onDidCollapseItem: Event<ITreeItem> = this._onDidCollapseItem.event;\n\n\tprivate _onDidChangeSelectionAndFocus: Emitter<{ selection: readonly ITreeItem[]; focus: ITreeItem }> = this._register(new Emitter<{ selection: readonly ITreeItem[]; focus: ITreeItem }>());\n\treadonly onDidChangeSelectionAndFocus: Event<{ selection: readonly ITreeItem[]; focus: ITreeItem }> = this._onDidChangeSelectionAndFocus.event;\n\n\tprivate readonly _onDidChangeVisibility: Emitter<boolean> = this._register(new Emitter<boolean>());\n\treadonly onDidChangeVisibility: Event<boolean> = this._onDidChangeVisibility.event;\n\n\tprivate readonly _onDidChangeActions: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeActions: Event<void> = this._onDidChangeActions.event;\n\n\tprivate readonly _onDidChangeWelcomeState: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeWelcomeState: Event<void> = this._onDidChangeWelcomeState.event;\n\n\tprivate readonly _onDidChangeTitle: Emitter<string> = this._register(new Emitter<string>());\n\treadonly onDidChangeTitle: Event<string> = this._onDidChangeTitle.event;\n\n\tprivate readonly _onDidChangeDescription: Emitter<string | undefined> = this._register(new Emitter<string | undefined>());\n\treadonly onDidChangeDescription: Event<string | undefined> = this._onDidChangeDescription.event;\n\n\tprivate readonly _onDidChangeCheckboxState: Emitter<readonly ITreeItem[]> = this._register(new Emitter<readonly ITreeItem[]>());\n\treadonly onDidChangeCheckboxState: Event<readonly ITreeItem[]> = this._onDidChangeCheckboxState.event;\n\n\tprivate readonly _onDidCompleteRefresh: Emitter<void> = this._register(new Emitter<void>());\n\n\tconstructor(\n\t\treadonly id: string,\n\t\tprivate _title: string,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IProgressService protected readonly progressService: IProgressService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.root = new Root();\n\t\tthis.lastActive = this.root;\n\t\t// Try not to add anything that could be costly to this constructor. It gets called once per tree view\n\t\t// during startup, and anything added here can affect performance.\n\t}\n\n\tprivate _isInitialized: boolean = false;\n\tprivate initialize() {\n\t\tif (this._isInitialized) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isInitialized = true;\n\n\t\t// Remember when adding to this method that it isn't called until the the view is visible, meaning that\n\t\t// properties could be set and events could be fired before we're initialized and that this needs to be handled.\n\n\t\tthis.contextKeyService.bufferChangeEvents(() => {\n\t\t\tthis.initializeShowCollapseAllAction();\n\t\t\tthis.initializeCollapseAllToggle();\n\t\t\tthis.initializeShowRefreshAction();\n\t\t});\n\n\t\tthis.treeViewDnd = this.instantiationService.createInstance(CustomTreeViewDragAndDrop, this.id);\n\t\tif (this._dragAndDropController) {\n\t\t\tthis.treeViewDnd.controller = this._dragAndDropController;\n\t\t}\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('explorer.decorations')) {\n\t\t\t\tthis.doRefresh([this.root]); /** soft refresh **/\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.viewDescriptorService.onDidChangeLocation(({ views, from, to }) => {\n\t\t\tif (views.some(v => v.id === this.id)) {\n\t\t\t\tthis.tree?.updateOptions({ overrideStyles: { listBackground: this.viewLocation === ViewContainerLocation.Panel ? PANEL_BACKGROUND : SIDE_BAR_BACKGROUND } });\n\t\t\t}\n\t\t}));\n\t\tthis.registerActions();\n\n\t\tthis.create();\n\t}\n\n\tget viewContainer(): ViewContainer {\n\t\treturn this.viewDescriptorService.getViewContainerByViewId(this.id)!;\n\t}\n\n\tget viewLocation(): ViewContainerLocation {\n\t\treturn this.viewDescriptorService.getViewLocationById(this.id)!;\n\t}\n\tprivate _dragAndDropController: ITreeViewDragAndDropController | undefined;\n\tget dragAndDropController(): ITreeViewDragAndDropController | undefined {\n\t\treturn this._dragAndDropController;\n\t}\n\tset dragAndDropController(dnd: ITreeViewDragAndDropController | undefined) {\n\t\tthis._dragAndDropController = dnd;\n\t\tif (this.treeViewDnd) {\n\t\t\tthis.treeViewDnd.controller = dnd;\n\t\t}\n\t}\n\n\tprivate _dataProvider: ITreeViewDataProvider | undefined;\n\tget dataProvider(): ITreeViewDataProvider | undefined {\n\t\treturn this._dataProvider;\n\t}\n\n\tset dataProvider(dataProvider: ITreeViewDataProvider | undefined) {\n\t\tif (dataProvider) {\n\t\t\tconst self = this;\n\t\t\tthis._dataProvider = new class implements ITreeViewDataProvider {\n\t\t\t\tprivate _isEmpty: boolean = true;\n\t\t\t\tprivate _onDidChangeEmpty: Emitter<void> = new Emitter();\n\t\t\t\tpublic onDidChangeEmpty: Event<void> = this._onDidChangeEmpty.event;\n\n\t\t\t\tget isTreeEmpty(): boolean {\n\t\t\t\t\treturn this._isEmpty;\n\t\t\t\t}\n\n\t\t\t\tasync getChildren(node?: ITreeItem): Promise<ITreeItem[]> {\n\t\t\t\t\tlet children: ITreeItem[];\n\t\t\t\t\tconst checkboxesUpdated: ITreeItem[] = [];\n\t\t\t\t\tif (node && node.children) {\n\t\t\t\t\t\tchildren = node.children;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode = node ?? self.root;\n\t\t\t\t\t\tnode.children = await (node instanceof Root ? dataProvider.getChildren() : dataProvider.getChildren(node));\n\t\t\t\t\t\tchildren = node.children ?? [];\n\t\t\t\t\t\tchildren.forEach(child => {\n\t\t\t\t\t\t\tchild.parent = node;\n\t\t\t\t\t\t\tif (!self.manuallyManageCheckboxes && (node?.checkbox?.isChecked === true) && (child.checkbox?.isChecked === false)) {\n\t\t\t\t\t\t\t\tchild.checkbox.isChecked = true;\n\t\t\t\t\t\t\t\tcheckboxesUpdated.push(child);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (node instanceof Root) {\n\t\t\t\t\t\tconst oldEmpty = this._isEmpty;\n\t\t\t\t\t\tthis._isEmpty = children.length === 0;\n\t\t\t\t\t\tif (oldEmpty !== this._isEmpty) {\n\t\t\t\t\t\t\tthis._onDidChangeEmpty.fire();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (checkboxesUpdated.length > 0) {\n\t\t\t\t\t\tself._onDidChangeCheckboxState.fire(checkboxesUpdated);\n\t\t\t\t\t}\n\t\t\t\t\treturn children;\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (this._dataProvider.onDidChangeEmpty) {\n\t\t\t\tthis._register(this._dataProvider.onDidChangeEmpty(() => {\n\t\t\t\t\tthis.updateCollapseAllToggle();\n\t\t\t\t\tthis._onDidChangeWelcomeState.fire();\n\t\t\t\t}));\n\t\t\t}\n\t\t\tthis.updateMessage();\n\t\t\tthis.refresh();\n\t\t} else {\n\t\t\tthis._dataProvider = undefined;\n\t\t\tthis.updateMessage();\n\t\t}\n\n\t\tthis._onDidChangeWelcomeState.fire();\n\t}\n\n\tprivate _message: string | IMarkdownString | undefined;\n\tget message(): string | IMarkdownString | undefined {\n\t\treturn this._message;\n\t}\n\n\tset message(message: string | IMarkdownString | undefined) {\n\t\tthis._message = message;\n\t\tthis.updateMessage();\n\t\tthis._onDidChangeWelcomeState.fire();\n\t}\n\n\tget title(): string {\n\t\treturn this._title;\n\t}\n\n\tset title(name: string) {\n\t\tthis._title = name;\n\t\tthis._onDidChangeTitle.fire(this._title);\n\t}\n\n\tprivate _description: string | undefined;\n\tget description(): string | undefined {\n\t\treturn this._description;\n\t}\n\n\tset description(description: string | undefined) {\n\t\tthis._description = description;\n\t\tthis._onDidChangeDescription.fire(this._description);\n\t}\n\n\tprivate _badge: IViewBadge | undefined;\n\tprivate _badgeActivity: IDisposable | undefined;\n\tget badge(): IViewBadge | undefined {\n\t\treturn this._badge;\n\t}\n\n\tset badge(badge: IViewBadge | undefined) {\n\n\t\tif (this._badge?.value === badge?.value &&\n\t\t\tthis._badge?.tooltip === badge?.tooltip) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._badgeActivity) {\n\t\t\tthis._badgeActivity.dispose();\n\t\t\tthis._badgeActivity = undefined;\n\t\t}\n\n\t\tthis._badge = badge;\n\n\t\tif (badge) {\n\t\t\tconst activity = {\n\t\t\t\tbadge: new NumberBadge(badge.value, () => badge.tooltip),\n\t\t\t\tpriority: 50\n\t\t\t};\n\t\t\tthis._badgeActivity = this.activityService.showViewActivity(this.id, activity);\n\t\t}\n\t}\n\n\tget canSelectMany(): boolean {\n\t\treturn this._canSelectMany;\n\t}\n\n\tset canSelectMany(canSelectMany: boolean) {\n\t\tconst oldCanSelectMany = this._canSelectMany;\n\t\tthis._canSelectMany = canSelectMany;\n\t\tif (this._canSelectMany !== oldCanSelectMany) {\n\t\t\tthis.tree?.updateOptions({ multipleSelectionSupport: this.canSelectMany });\n\t\t}\n\t}\n\n\tget manuallyManageCheckboxes(): boolean {\n\t\treturn this._manuallyManageCheckboxes;\n\t}\n\n\tset manuallyManageCheckboxes(manuallyManageCheckboxes: boolean) {\n\t\tthis._manuallyManageCheckboxes = manuallyManageCheckboxes;\n\t}\n\n\tget hasIconForParentNode(): boolean {\n\t\treturn this._hasIconForParentNode;\n\t}\n\n\tget hasIconForLeafNode(): boolean {\n\t\treturn this._hasIconForLeafNode;\n\t}\n\n\tget visible(): boolean {\n\t\treturn this.isVisible;\n\t}\n\n\tprivate initializeShowCollapseAllAction(startingValue: boolean = false) {\n\t\tif (!this.collapseAllContext) {\n\t\t\tthis.collapseAllContextKey = new RawContextKey<boolean>(`treeView.${this.id}.enableCollapseAll`, startingValue, localize('treeView.enableCollapseAll', \"Whether the the tree view with id {0} enables collapse all.\", this.id));\n\t\t\tthis.collapseAllContext = this.collapseAllContextKey.bindTo(this.contextKeyService);\n\t\t}\n\t\treturn true;\n\t}\n\n\tget showCollapseAllAction(): boolean {\n\t\tthis.initializeShowCollapseAllAction();\n\t\treturn !!this.collapseAllContext?.get();\n\t}\n\n\tset showCollapseAllAction(showCollapseAllAction: boolean) {\n\t\tthis.initializeShowCollapseAllAction(showCollapseAllAction);\n\t\tthis.collapseAllContext?.set(showCollapseAllAction);\n\t}\n\n\n\tprivate initializeShowRefreshAction(startingValue: boolean = false) {\n\t\tif (!this.refreshContext) {\n\t\t\tthis.refreshContextKey = new RawContextKey<boolean>(`treeView.${this.id}.enableRefresh`, startingValue, localize('treeView.enableRefresh', \"Whether the tree view with id {0} enables refresh.\", this.id));\n\t\t\tthis.refreshContext = this.refreshContextKey.bindTo(this.contextKeyService);\n\t\t}\n\t}\n\n\tget showRefreshAction(): boolean {\n\t\tthis.initializeShowRefreshAction();\n\t\treturn !!this.refreshContext?.get();\n\t}\n\n\tset showRefreshAction(showRefreshAction: boolean) {\n\t\tthis.initializeShowRefreshAction(showRefreshAction);\n\t\tthis.refreshContext?.set(showRefreshAction);\n\t}\n\n\tprivate registerActions() {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.actions.treeView.${that.id}.refresh`,\n\t\t\t\t\ttitle: localize('refresh', \"Refresh\"),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', that.id), that.refreshContextKey),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: Number.MAX_SAFE_INTEGER - 1,\n\t\t\t\t\t},\n\t\t\t\t\ticon: Codicon.refresh\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(): Promise<void> {\n\t\t\t\treturn that.refresh();\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.actions.treeView.${that.id}.collapseAll`,\n\t\t\t\t\ttitle: localize('collapseAll', \"Collapse All\"),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', that.id), that.collapseAllContextKey),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: Number.MAX_SAFE_INTEGER,\n\t\t\t\t\t},\n\t\t\t\t\tprecondition: that.collapseAllToggleContextKey,\n\t\t\t\t\ticon: Codicon.collapseAll\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(): Promise<void> {\n\t\t\t\tif (that.tree) {\n\t\t\t\t\treturn new CollapseAllAction<ITreeItem, ITreeItem, FuzzyScore>(that.tree, true).run();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetVisibility(isVisible: boolean): void {\n\t\t// Throughout setVisibility we need to check if the tree view's data provider still exists.\n\t\t// This can happen because the `getChildren` call to the extension can return\n\t\t// after the tree has been disposed.\n\n\t\tthis.initialize();\n\t\tisVisible = !!isVisible;\n\t\tif (this.isVisible === isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isVisible = isVisible;\n\n\t\tif (this.tree) {\n\t\t\tif (this.isVisible) {\n\t\t\t\tDOM.show(this.tree.getHTMLElement());\n\t\t\t} else {\n\t\t\t\tDOM.hide(this.tree.getHTMLElement()); // make sure the tree goes out of the tabindex world by hiding it\n\t\t\t}\n\n\t\t\tif (this.isVisible && this.elementsToRefresh.length && this.dataProvider) {\n\t\t\t\tthis.doRefresh(this.elementsToRefresh);\n\t\t\t\tthis.elementsToRefresh = [];\n\t\t\t}\n\t\t}\n\n\t\tsetTimeout0(() => {\n\t\t\tif (this.dataProvider) {\n\t\t\t\tthis._onDidChangeVisibility.fire(this.isVisible);\n\t\t\t}\n\t\t});\n\n\t\tif (this.visible) {\n\t\t\tthis.activate();\n\t\t}\n\t}\n\n\tprotected abstract activate(): void;\n\n\tfocus(reveal: boolean = true, revealItem?: ITreeItem): void {\n\t\tif (this.tree && this.root.children && this.root.children.length > 0) {\n\t\t\t// Make sure the current selected element is revealed\n\t\t\tconst element = revealItem ?? this.tree.getSelection()[0];\n\t\t\tif (element && reveal) {\n\t\t\t\tthis.tree.reveal(element, 0.5);\n\t\t\t}\n\n\t\t\t// Pass Focus to Viewer\n\t\t\tthis.tree.domFocus();\n\t\t} else if (this.tree && this.treeContainer && !this.treeContainer.classList.contains('hide')) {\n\t\t\tthis.tree.domFocus();\n\t\t} else {\n\t\t\tthis.domNode.focus();\n\t\t}\n\t}\n\n\tshow(container: HTMLElement): void {\n\t\tthis._container = container;\n\t\tDOM.append(container, this.domNode);\n\t}\n\n\tprivate create() {\n\t\tthis.domNode = DOM.$('.tree-explorer-viewlet-tree-view');\n\t\tthis.messageElement = DOM.append(this.domNode, DOM.$('.message'));\n\t\tthis.updateMessage();\n\t\tthis.treeContainer = DOM.append(this.domNode, DOM.$('.customview-tree'));\n\t\tthis.treeContainer.classList.add('file-icon-themable-tree', 'show-file-icons');\n\t\tconst focusTracker = this._register(DOM.trackFocus(this.domNode));\n\t\tthis._register(focusTracker.onDidFocus(() => this.focused = true));\n\t\tthis._register(focusTracker.onDidBlur(() => this.focused = false));\n\t}\n\n\tprotected createTree() {\n\t\tconst actionViewItemProvider = createActionViewItem.bind(undefined, this.instantiationService);\n\t\tconst treeMenus = this._register(this.instantiationService.createInstance(TreeMenus, this.id));\n\t\tthis.treeLabels = this._register(this.instantiationService.createInstance(ResourceLabels, this));\n\t\tconst dataSource = this.instantiationService.createInstance(TreeDataSource, this, <T>(task: Promise<T>) => this.progressService.withProgress({ location: this.id }, () => task));\n\t\tconst aligner = new Aligner(this.themeService);\n\t\tconst checkboxStateHandler = this._register(new CheckboxStateHandler());\n\t\tconst renderer = this.instantiationService.createInstance(TreeRenderer, this.id, treeMenus, this.treeLabels, actionViewItemProvider, aligner, checkboxStateHandler, this.manuallyManageCheckboxes);\n\t\tthis._register(renderer.onDidChangeCheckboxState(e => this._onDidChangeCheckboxState.fire(e)));\n\n\t\tconst widgetAriaLabel = this._title;\n\n\t\tthis.tree = this._register(this.instantiationService.createInstance(Tree, this.id, this.treeContainer!, new TreeViewDelegate(), [renderer],\n\t\t\tdataSource, {\n\t\t\tidentityProvider: new TreeViewIdentityProvider(),\n\t\t\taccessibilityProvider: {\n\t\t\t\tgetAriaLabel(element: ITreeItem): string | null {\n\t\t\t\t\tif (element.accessibilityInformation) {\n\t\t\t\t\t\treturn element.accessibilityInformation.label;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isString(element.tooltip)) {\n\t\t\t\t\t\treturn element.tooltip;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (element.resourceUri && !element.label) {\n\t\t\t\t\t\t\t// The custom tree has no good information on what should be used for the aria label.\n\t\t\t\t\t\t\t// Allow the tree widget's default aria label to be used.\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet buildAriaLabel: string = '';\n\t\t\t\t\t\tif (element.label) {\n\t\t\t\t\t\t\tbuildAriaLabel += element.label.label + ' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (element.description) {\n\t\t\t\t\t\t\tbuildAriaLabel += element.description;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn buildAriaLabel;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgetRole(element: ITreeItem): AriaRole | undefined {\n\t\t\t\t\treturn element.accessibilityInformation?.role ?? 'treeitem';\n\t\t\t\t},\n\t\t\t\tgetWidgetAriaLabel(): string {\n\t\t\t\t\treturn widgetAriaLabel;\n\t\t\t\t}\n\t\t\t},\n\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\tgetKeyboardNavigationLabel: (item: ITreeItem) => {\n\t\t\t\t\treturn item.label ? item.label.label : (item.resourceUri ? basename(URI.revive(item.resourceUri)) : undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\texpandOnlyOnTwistieClick: (e: ITreeItem) => {\n\t\t\t\treturn !!e.command || !!e.checkbox || this.configurationService.getValue<'singleClick' | 'doubleClick'>('workbench.tree.expandMode') === 'doubleClick';\n\t\t\t},\n\t\t\tcollapseByDefault: (e: ITreeItem): boolean => {\n\t\t\t\treturn e.collapsibleState !== TreeItemCollapsibleState.Expanded;\n\t\t\t},\n\t\t\tmultipleSelectionSupport: this.canSelectMany,\n\t\t\tdnd: this.treeViewDnd,\n\t\t\toverrideStyles: {\n\t\t\t\tlistBackground: this.viewLocation === ViewContainerLocation.Panel ? PANEL_BACKGROUND : SIDE_BAR_BACKGROUND\n\t\t\t}\n\t\t}) as WorkbenchAsyncDataTree<ITreeItem, ITreeItem, FuzzyScore>);\n\t\ttreeMenus.setContextKeyService(this.tree.contextKeyService);\n\t\taligner.tree = this.tree;\n\t\tconst actionRunner = new MultipleSelectionActionRunner(this.notificationService, () => this.tree!.getSelection());\n\t\trenderer.actionRunner = actionRunner;\n\n\t\tthis.tree.contextKeyService.createKey<boolean>(this.id, true);\n\t\tconst customTreeKey = RawCustomTreeViewContextKey.bindTo(this.tree.contextKeyService);\n\t\tcustomTreeKey.set(true);\n\t\tthis._register(this.tree.onContextMenu(e => this.onContextMenu(treeMenus, e, actionRunner)));\n\n\t\tthis._register(this.tree.onDidChangeSelection(e => {\n\t\t\tthis.lastSelection = e.elements;\n\t\t\tthis.lastActive = this.tree?.getFocus()[0] ?? this.lastActive;\n\t\t\tthis._onDidChangeSelectionAndFocus.fire({ selection: this.lastSelection, focus: this.lastActive });\n\t\t}));\n\t\tthis._register(this.tree.onDidChangeFocus(e => {\n\t\t\tif (e.elements.length && (e.elements[0] !== this.lastActive)) {\n\t\t\t\tthis.lastActive = e.elements[0];\n\t\t\t\tthis.lastSelection = this.tree?.getSelection() ?? this.lastSelection;\n\t\t\t\tthis._onDidChangeSelectionAndFocus.fire({ selection: this.lastSelection, focus: this.lastActive });\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.tree.onDidChangeCollapseState(e => {\n\t\t\tif (!e.node.element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst element: ITreeItem = Array.isArray(e.node.element.element) ? e.node.element.element[0] : e.node.element.element;\n\t\t\tif (e.node.collapsed) {\n\t\t\t\tthis._onDidCollapseItem.fire(element);\n\t\t\t} else {\n\t\t\t\tthis._onDidExpandItem.fire(element);\n\t\t\t}\n\t\t}));\n\t\tthis.tree.setInput(this.root).then(() => this.updateContentAreas());\n\n\t\tthis._register(this.tree.onDidOpen(async (e) => {\n\t\t\tif (!e.browserEvent) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (e.browserEvent.target && (e.browserEvent.target as HTMLElement).classList.contains(TreeItemCheckbox.checkboxClass)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst selection = this.tree!.getSelection();\n\t\t\tconst command = await this.resolveCommand(selection.length === 1 ? selection[0] : undefined);\n\n\t\t\tif (command && isTreeCommandEnabled(command, this.contextKeyService)) {\n\t\t\t\tlet args = command.arguments || [];\n\t\t\t\tif (command.id === API_OPEN_EDITOR_COMMAND_ID || command.id === API_OPEN_DIFF_EDITOR_COMMAND_ID) {\n\t\t\t\t\t// Some commands owned by us should receive the\n\t\t\t\t\t// `IOpenEvent` as context to open properly\n\t\t\t\t\targs = [...args, e];\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.commandService.executeCommand(command.id, ...args);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis.notificationService.error(err);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(treeMenus.onDidChange((changed) => {\n\t\t\tif (this.tree?.hasNode(changed)) {\n\t\t\t\tthis.tree?.rerender(changed);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async resolveCommand(element: ITreeItem | undefined): Promise<TreeCommand | undefined> {\n\t\tlet command = element?.command;\n\t\tif (element && !command) {\n\t\t\tif ((element instanceof ResolvableTreeItem) && element.hasResolve) {\n\t\t\t\tawait element.resolve(new CancellationTokenSource().token);\n\t\t\t\tcommand = element.command;\n\t\t\t}\n\t\t}\n\t\treturn command;\n\t}\n\n\tprivate onContextMenu(treeMenus: TreeMenus, treeEvent: ITreeContextMenuEvent<ITreeItem>, actionRunner: MultipleSelectionActionRunner): void {\n\t\tthis.hoverService.hideHover();\n\t\tconst node: ITreeItem | null = treeEvent.element;\n\t\tif (node === null) {\n\t\t\treturn;\n\t\t}\n\t\tconst event: UIEvent = treeEvent.browserEvent;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.tree!.setFocus([node]);\n\t\tconst actions = treeMenus.getResourceContextActions(node);\n\t\tif (!actions.length) {\n\t\t\treturn;\n\t\t}\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => treeEvent.anchor,\n\n\t\t\tgetActions: () => actions,\n\n\t\t\tgetActionViewItem: (action) => {\n\t\t\t\tconst keybinding = this.keybindingService.lookupKeybinding(action.id);\n\t\t\t\tif (keybinding) {\n\t\t\t\t\treturn new ActionViewItem(action, action, { label: true, keybinding: keybinding.getLabel() });\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\n\t\t\tonHide: (wasCancelled?: boolean) => {\n\t\t\t\tif (wasCancelled) {\n\t\t\t\t\tthis.tree!.domFocus();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tgetActionsContext: () => (<TreeViewItemHandleArg>{ $treeViewId: this.id, $treeItemHandle: node.handle }),\n\n\t\t\tactionRunner\n\t\t});\n\t}\n\n\tprotected updateMessage(): void {\n\t\tif (this._message) {\n\t\t\tthis.showMessage(this._message);\n\t\t} else if (!this.dataProvider) {\n\t\t\tthis.showMessage(noDataProviderMessage);\n\t\t} else {\n\t\t\tthis.hideMessage();\n\t\t}\n\t\tthis.updateContentAreas();\n\t}\n\n\tprivate showMessage(message: string | IMarkdownString): void {\n\t\tif (isRenderedMessageValue(this._messageValue)) {\n\t\t\tthis._messageValue.dispose();\n\t\t}\n\t\tif (isMarkdownString(message) && !this.markdownRenderer) {\n\t\t\tthis.markdownRenderer = this.instantiationService.createInstance(MarkdownRenderer, {});\n\t\t}\n\t\tthis._messageValue = isMarkdownString(message) ? this.markdownRenderer!.render(message) : message;\n\t\tif (!this.messageElement) {\n\t\t\treturn;\n\t\t}\n\t\tthis.messageElement.classList.remove('hide');\n\t\tthis.resetMessageElement();\n\t\tif (typeof this._messageValue === 'string' && !isFalsyOrWhitespace(this._messageValue)) {\n\t\t\tthis.messageElement.textContent = this._messageValue;\n\t\t} else if (isRenderedMessageValue(this._messageValue)) {\n\t\t\tthis.messageElement.appendChild(this._messageValue.element);\n\t\t}\n\t\tthis.layout(this._height, this._width);\n\t}\n\n\tprivate hideMessage(): void {\n\t\tthis.resetMessageElement();\n\t\tthis.messageElement?.classList.add('hide');\n\t\tthis.layout(this._height, this._width);\n\t}\n\n\tprivate resetMessageElement(): void {\n\t\tif (this.messageElement) {\n\t\t\tDOM.clearNode(this.messageElement);\n\t\t}\n\t}\n\n\tprivate _height: number = 0;\n\tprivate _width: number = 0;\n\tlayout(height: number, width: number) {\n\t\tif (height && width && this.messageElement && this.treeContainer) {\n\t\t\tthis._height = height;\n\t\t\tthis._width = width;\n\t\t\tconst treeHeight = height - DOM.getTotalHeight(this.messageElement);\n\t\t\tthis.treeContainer.style.height = treeHeight + 'px';\n\t\t\tthis.tree?.layout(treeHeight, width);\n\t\t}\n\t}\n\n\tgetOptimalWidth(): number {\n\t\tif (this.tree) {\n\t\t\tconst parentNode = this.tree.getHTMLElement();\n\t\t\tconst childNodes = ([] as HTMLElement[]).slice.call(parentNode.querySelectorAll('.outline-item-label > a'));\n\t\t\treturn DOM.getLargestChildWidth(parentNode, childNodes);\n\t\t}\n\t\treturn 0;\n\t}\n\n\tasync refresh(elements?: readonly ITreeItem[]): Promise<void> {\n\t\tif (this.dataProvider && this.tree) {\n\t\t\tif (this.refreshing) {\n\t\t\t\tawait Event.toPromise(this._onDidCompleteRefresh.event);\n\t\t\t}\n\t\t\tif (!elements) {\n\t\t\t\telements = [this.root];\n\t\t\t\t// remove all waiting elements to refresh if root is asked to refresh\n\t\t\t\tthis.elementsToRefresh = [];\n\t\t\t}\n\t\t\tfor (const element of elements) {\n\t\t\t\telement.children = undefined; // reset children\n\t\t\t}\n\t\t\tif (this.isVisible) {\n\t\t\t\treturn this.doRefresh(elements);\n\t\t\t} else {\n\t\t\t\tif (this.elementsToRefresh.length) {\n\t\t\t\t\tconst seen: Set<string> = new Set<string>();\n\t\t\t\t\tthis.elementsToRefresh.forEach(element => seen.add(element.handle));\n\t\t\t\t\tfor (const element of elements) {\n\t\t\t\t\t\tif (!seen.has(element.handle)) {\n\t\t\t\t\t\t\tthis.elementsToRefresh.push(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.elementsToRefresh.push(...elements);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tasync expand(itemOrItems: ITreeItem | ITreeItem[]): Promise<void> {\n\t\tconst tree = this.tree;\n\t\tif (!tree) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\titemOrItems = Array.isArray(itemOrItems) ? itemOrItems : [itemOrItems];\n\t\t\tfor (const element of itemOrItems) {\n\t\t\t\tawait tree.expand(element, false);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// The extension could have changed the tree during the reveal.\n\t\t\t// Because of that, we ignore errors.\n\t\t}\n\t}\n\n\tisCollapsed(item: ITreeItem): boolean {\n\t\treturn !!this.tree?.isCollapsed(item);\n\t}\n\n\tsetSelection(items: ITreeItem[]): void {\n\t\tthis.tree?.setSelection(items);\n\t}\n\n\tgetSelection(): ITreeItem[] {\n\t\treturn this.tree?.getSelection() ?? [];\n\t}\n\n\tsetFocus(item?: ITreeItem): void {\n\t\tif (this.tree) {\n\t\t\tif (item) {\n\t\t\t\tthis.focus(true, item);\n\t\t\t\tthis.tree.setFocus([item]);\n\t\t\t} else if (this.tree.getFocus().length === 0) {\n\t\t\t\tthis.tree.setFocus([]);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync reveal(item: ITreeItem): Promise<void> {\n\t\tif (this.tree) {\n\t\t\treturn this.tree.reveal(item);\n\t\t}\n\t}\n\n\tprivate refreshing: boolean = false;\n\tprivate async doRefresh(elements: readonly ITreeItem[]): Promise<void> {\n\t\tconst tree = this.tree;\n\t\tif (tree && this.visible) {\n\t\t\tthis.refreshing = true;\n\t\t\tconst oldSelection = tree.getSelection();\n\t\t\ttry {\n\t\t\t\tawait Promise.all(elements.map(element => tree.updateChildren(element, true, true)));\n\t\t\t} catch (e) {\n\t\t\t\t// When multiple calls are made to refresh the tree in quick succession,\n\t\t\t\t// we can get a \"Tree element not found\" error. This is expected.\n\t\t\t\t// Ideally this is fixable, so log instead of ignoring so the error is preserved.\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t\tconst newSelection = tree.getSelection();\n\t\t\tif (oldSelection.length !== newSelection.length || oldSelection.some((value, index) => value.handle !== newSelection[index].handle)) {\n\t\t\t\tthis.lastSelection = newSelection;\n\t\t\t\tthis._onDidChangeSelectionAndFocus.fire({ selection: this.lastSelection, focus: this.lastActive });\n\t\t\t}\n\t\t\tthis.refreshing = false;\n\t\t\tthis._onDidCompleteRefresh.fire();\n\t\t\tthis.updateContentAreas();\n\t\t\tif (this.focused) {\n\t\t\t\tthis.focus(false);\n\t\t\t}\n\t\t\tthis.updateCollapseAllToggle();\n\t\t}\n\t}\n\n\tprivate initializeCollapseAllToggle() {\n\t\tif (!this.collapseAllToggleContext) {\n\t\t\tthis.collapseAllToggleContextKey = new RawContextKey<boolean>(`treeView.${this.id}.toggleCollapseAll`, false, localize('treeView.toggleCollapseAll', \"Whether collapse all is toggled for the tree view with id {0}.\", this.id));\n\t\t\tthis.collapseAllToggleContext = this.collapseAllToggleContextKey.bindTo(this.contextKeyService);\n\t\t}\n\t}\n\n\tprivate updateCollapseAllToggle() {\n\t\tif (this.showCollapseAllAction) {\n\t\t\tthis.initializeCollapseAllToggle();\n\t\t\tthis.collapseAllToggleContext?.set(!!this.root.children && (this.root.children.length > 0) &&\n\t\t\t\tthis.root.children.some(value => value.collapsibleState !== TreeItemCollapsibleState.None));\n\t\t}\n\t}\n\n\tprivate updateContentAreas(): void {\n\t\tconst isTreeEmpty = !this.root.children || this.root.children.length === 0;\n\t\t// Hide tree container only when there is a message and tree is empty and not refreshing\n\t\tif (this._messageValue && isTreeEmpty && !this.refreshing && this.treeContainer) {\n\t\t\t// If there's a dnd controller then hiding the tree prevents it from being dragged into.\n\t\t\tif (!this.dragAndDropController) {\n\t\t\t\tthis.treeContainer.classList.add('hide');\n\t\t\t}\n\t\t\tthis.domNode.setAttribute('tabindex', '0');\n\t\t} else if (this.treeContainer) {\n\t\t\tthis.treeContainer.classList.remove('hide');\n\t\t\tif (this.domNode === DOM.getActiveElement()) {\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t\tthis.domNode.removeAttribute('tabindex');\n\t\t}\n\t}\n\n\tget container(): HTMLElement | undefined {\n\t\treturn this._container;\n\t}\n}\n\nclass TreeViewIdentityProvider implements IIdentityProvider<ITreeItem> {\n\tgetId(element: ITreeItem): { toString(): string } {\n\t\treturn element.handle;\n\t}\n}\n\nclass TreeViewDelegate implements IListVirtualDelegate<ITreeItem> {\n\n\tgetHeight(element: ITreeItem): number {\n\t\treturn TreeRenderer.ITEM_HEIGHT;\n\t}\n\n\tgetTemplateId(element: ITreeItem): string {\n\t\treturn TreeRenderer.TREE_TEMPLATE_ID;\n\t}\n}\n\nclass TreeDataSource implements IAsyncDataSource<ITreeItem, ITreeItem> {\n\n\tconstructor(\n\t\tprivate treeView: ITreeView,\n\t\tprivate withProgress: <T>(task: Promise<T>) => Promise<T>\n\t) {\n\t}\n\n\thasChildren(element: ITreeItem): boolean {\n\t\treturn !!this.treeView.dataProvider && (element.collapsibleState !== TreeItemCollapsibleState.None);\n\t}\n\n\tasync getChildren(element: ITreeItem): Promise<ITreeItem[]> {\n\t\tlet result: ITreeItem[] = [];\n\t\tif (this.treeView.dataProvider) {\n\t\t\ttry {\n\t\t\t\tresult = (await this.withProgress(this.treeView.dataProvider.getChildren(element))) ?? [];\n\t\t\t} catch (e) {\n\t\t\t\tif (!(<string>e.message).startsWith('Bad progress location:')) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\ninterface ITreeExplorerTemplateData {\n\treadonly elementDisposable: DisposableStore;\n\treadonly container: HTMLElement;\n\treadonly resourceLabel: IResourceLabel;\n\treadonly icon: HTMLElement;\n\treadonly checkboxContainer: HTMLElement;\n\tcheckbox?: TreeItemCheckbox;\n\treadonly actionBar: ActionBar;\n}\n\nclass TreeRenderer extends Disposable implements ITreeRenderer<ITreeItem, FuzzyScore, ITreeExplorerTemplateData> {\n\tstatic readonly ITEM_HEIGHT = 22;\n\tstatic readonly TREE_TEMPLATE_ID = 'treeExplorer';\n\n\tprivate readonly _onDidChangeCheckboxState: Emitter<readonly ITreeItem[]> = this._register(new Emitter<readonly ITreeItem[]>());\n\treadonly onDidChangeCheckboxState: Event<readonly ITreeItem[]> = this._onDidChangeCheckboxState.event;\n\n\tprivate _actionRunner: MultipleSelectionActionRunner | undefined;\n\tprivate _hoverDelegate: IHoverDelegate;\n\tprivate _hasCheckbox: boolean = false;\n\tprivate _renderedElements = new Map<string, { original: ITreeNode<ITreeItem, FuzzyScore>; rendered: ITreeExplorerTemplateData }>(); // tree item handle to template data\n\n\tconstructor(\n\t\tprivate treeViewId: string,\n\t\tprivate menus: TreeMenus,\n\t\tprivate labels: ResourceLabels,\n\t\tprivate actionViewItemProvider: IActionViewItemProvider,\n\t\tprivate aligner: Aligner,\n\t\tprivate checkboxStateHandler: CheckboxStateHandler,\n\t\tprivate readonly manuallyManageCheckboxes: boolean,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@ITreeViewsService private readonly treeViewsService: ITreeViewsService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\t\tthis._hoverDelegate = {\n\t\t\tshowHover: (options: IHoverDelegateOptions) => this.hoverService.showHover(options),\n\t\t\tdelay: <number>this.configurationService.getValue('workbench.hover.delay')\n\t\t};\n\t\tthis._register(this.themeService.onDidFileIconThemeChange(() => this.rerender()));\n\t\tthis._register(this.themeService.onDidColorThemeChange(() => this.rerender()));\n\t\tthis._register(checkboxStateHandler.onDidChangeCheckboxState(items => {\n\t\t\tthis.updateCheckboxes(items);\n\t\t}));\n\t}\n\n\tget templateId(): string {\n\t\treturn TreeRenderer.TREE_TEMPLATE_ID;\n\t}\n\n\tset actionRunner(actionRunner: MultipleSelectionActionRunner) {\n\t\tthis._actionRunner = actionRunner;\n\t}\n\n\trenderTemplate(container: HTMLElement): ITreeExplorerTemplateData {\n\t\tcontainer.classList.add('custom-view-tree-node-item');\n\n\t\tconst checkboxContainer = DOM.append(container, DOM.$(''));\n\t\tconst resourceLabel = this.labels.create(container, { supportHighlights: true, hoverDelegate: this._hoverDelegate });\n\t\tconst icon = DOM.prepend(resourceLabel.element, DOM.$('.custom-view-tree-node-item-icon'));\n\t\tconst actionsContainer = DOM.append(resourceLabel.element, DOM.$('.actions'));\n\t\tconst actionBar = new ActionBar(actionsContainer, {\n\t\t\tactionViewItemProvider: this.actionViewItemProvider\n\t\t});\n\n\t\treturn { resourceLabel, icon, checkboxContainer, actionBar, container, elementDisposable: new DisposableStore() };\n\t}\n\n\tprivate getHover(label: string | undefined, resource: URI | null, node: ITreeItem): string | ITooltipMarkdownString | undefined {\n\t\tif (!(node instanceof ResolvableTreeItem) || !node.hasResolve) {\n\t\t\tif (resource && !node.tooltip) {\n\t\t\t\treturn undefined;\n\t\t\t} else if (node.tooltip === undefined) {\n\t\t\t\treturn label;\n\t\t\t} else if (!isString(node.tooltip)) {\n\t\t\t\treturn { markdown: node.tooltip, markdownNotSupportedFallback: resource ? undefined : renderMarkdownAsPlaintext(node.tooltip) }; // Passing undefined as the fallback for a resource falls back to the old native hover\n\t\t\t} else if (node.tooltip !== '') {\n\t\t\t\treturn node.tooltip;\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tmarkdown: typeof node.tooltip === 'string' ? node.tooltip :\n\t\t\t\t(token: CancellationToken): Promise<IMarkdownString | string | undefined> => {\n\t\t\t\t\treturn new Promise<IMarkdownString | string | undefined>((resolve) => {\n\t\t\t\t\t\tnode.resolve(token).then(() => resolve(node.tooltip));\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\tmarkdownNotSupportedFallback: resource ? undefined : (label ?? '') // Passing undefined as the fallback for a resource falls back to the old native hover\n\t\t};\n\t}\n\n\trenderElement(element: ITreeNode<ITreeItem, FuzzyScore>, index: number, templateData: ITreeExplorerTemplateData): void {\n\t\tconst node = element.element;\n\t\tconst resource = node.resourceUri ? URI.revive(node.resourceUri) : null;\n\t\tconst treeItemLabel: ITreeItemLabel | undefined = node.label ? node.label : (resource ? { label: basename(resource) } : undefined);\n\t\tconst description = isString(node.description) ? node.description : resource && node.description === true ? this.labelService.getUriLabel(dirname(resource), { relative: true }) : undefined;\n\t\tconst label = treeItemLabel ? treeItemLabel.label : undefined;\n\t\tconst matches = (treeItemLabel && treeItemLabel.highlights && label) ? treeItemLabel.highlights.map(([start, end]) => {\n\t\t\tif (start < 0) {\n\t\t\t\tstart = label.length + start;\n\t\t\t}\n\t\t\tif (end < 0) {\n\t\t\t\tend = label.length + end;\n\t\t\t}\n\t\t\tif ((start >= label.length) || (end > label.length)) {\n\t\t\t\treturn ({ start: 0, end: 0 });\n\t\t\t}\n\t\t\tif (start > end) {\n\t\t\t\tconst swap = start;\n\t\t\t\tstart = end;\n\t\t\t\tend = swap;\n\t\t\t}\n\t\t\treturn ({ start, end });\n\t\t}) : undefined;\n\t\tconst icon = this.themeService.getColorTheme().type === ColorScheme.LIGHT ? node.icon : node.iconDark;\n\t\tconst iconUrl = icon ? URI.revive(icon) : undefined;\n\t\tconst title = this.getHover(label, resource, node);\n\n\t\t// reset\n\t\ttemplateData.actionBar.clear();\n\t\ttemplateData.icon.style.color = '';\n\n\t\tlet commandEnabled = true;\n\t\tif (node.command) {\n\t\t\tcommandEnabled = isTreeCommandEnabled(node.command, this.contextKeyService);\n\t\t}\n\n\t\tthis.renderCheckbox(node, templateData);\n\n\t\tif (resource) {\n\t\t\tconst fileDecorations = this.configurationService.getValue<{ colors: boolean; badges: boolean }>('explorer.decorations');\n\t\t\tconst labelResource = resource ? resource : URI.parse('missing:_icon_resource');\n\t\t\ttemplateData.resourceLabel.setResource({ name: label, description, resource: labelResource }, {\n\t\t\t\tfileKind: this.getFileKind(node),\n\t\t\t\ttitle,\n\t\t\t\thideIcon: this.shouldHideResourceLabelIcon(iconUrl, node.themeIcon),\n\t\t\t\tfileDecorations,\n\t\t\t\textraClasses: ['custom-view-tree-node-item-resourceLabel'],\n\t\t\t\tmatches: matches ? matches : createMatches(element.filterData),\n\t\t\t\tstrikethrough: treeItemLabel?.strikethrough,\n\t\t\t\tdisabledCommand: !commandEnabled,\n\t\t\t\tlabelEscapeNewLines: true,\n\t\t\t\tforceLabel: !!node.label\n\t\t\t});\n\t\t} else {\n\t\t\ttemplateData.resourceLabel.setResource({ name: label, description }, {\n\t\t\t\ttitle,\n\t\t\t\thideIcon: true,\n\t\t\t\textraClasses: ['custom-view-tree-node-item-resourceLabel'],\n\t\t\t\tmatches: matches ? matches : createMatches(element.filterData),\n\t\t\t\tstrikethrough: treeItemLabel?.strikethrough,\n\t\t\t\tdisabledCommand: !commandEnabled,\n\t\t\t\tlabelEscapeNewLines: true\n\t\t\t});\n\t\t}\n\n\t\tif (iconUrl) {\n\t\t\ttemplateData.icon.className = 'custom-view-tree-node-item-icon';\n\t\t\ttemplateData.icon.style.backgroundImage = DOM.asCSSUrl(iconUrl);\n\t\t} else {\n\t\t\tlet iconClass: string | undefined;\n\t\t\tif (this.shouldShowThemeIcon(!!resource, node.themeIcon)) {\n\t\t\t\ticonClass = ThemeIcon.asClassName(node.themeIcon);\n\t\t\t\tif (node.themeIcon.color) {\n\t\t\t\t\ttemplateData.icon.style.color = this.themeService.getColorTheme().getColor(node.themeIcon.color.id)?.toString() ?? '';\n\t\t\t\t}\n\t\t\t}\n\t\t\ttemplateData.icon.className = iconClass ? `custom-view-tree-node-item-icon ${iconClass}` : '';\n\t\t\ttemplateData.icon.style.backgroundImage = '';\n\t\t}\n\n\t\tif (!commandEnabled) {\n\t\t\ttemplateData.icon.className = templateData.icon.className + ' disabled';\n\t\t\tif (templateData.container.parentElement) {\n\t\t\t\ttemplateData.container.parentElement.className = templateData.container.parentElement.className + ' disabled';\n\t\t\t}\n\t\t}\n\n\t\ttemplateData.actionBar.context = <TreeViewItemHandleArg>{ $treeViewId: this.treeViewId, $treeItemHandle: node.handle };\n\n\t\tconst menuActions = this.menus.getResourceActions(node);\n\t\tif (menuActions.menu) {\n\t\t\ttemplateData.elementDisposable.add(menuActions.menu);\n\t\t}\n\t\ttemplateData.actionBar.push(menuActions.actions, { icon: true, label: false });\n\n\t\tif (this._actionRunner) {\n\t\t\ttemplateData.actionBar.actionRunner = this._actionRunner;\n\t\t}\n\t\tthis.setAlignment(templateData.container, node);\n\t\tthis.treeViewsService.addRenderedTreeItemElement(node, templateData.container);\n\n\t\t// remember rendered element\n\t\tthis._renderedElements.set(element.element.handle, { original: element, rendered: templateData });\n\t}\n\n\tprivate rerender() {\n\t\t// As we add items to the map during this call we can't directly use the map in the for loop\n\t\t// but have to create a copy of the keys first\n\t\tconst keys = new Set(this._renderedElements.keys());\n\t\tfor (const key of keys) {\n\t\t\tconst value = this._renderedElements.get(key);\n\t\t\tif (value) {\n\t\t\t\tthis.disposeElement(value.original, 0, value.rendered);\n\t\t\t\tthis.renderElement(value.original, 0, value.rendered);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderCheckbox(node: ITreeItem, templateData: ITreeExplorerTemplateData) {\n\t\tif (node.checkbox) {\n\t\t\t// The first time we find a checkbox we want to rerender the visible tree to adapt the alignment\n\t\t\tif (!this._hasCheckbox) {\n\t\t\t\tthis._hasCheckbox = true;\n\t\t\t\tthis.rerender();\n\t\t\t}\n\t\t\tif (!templateData.checkbox) {\n\t\t\t\tconst checkbox = new TreeItemCheckbox(templateData.checkboxContainer, this.checkboxStateHandler, this._hoverDelegate);\n\t\t\t\ttemplateData.checkbox = checkbox;\n\t\t\t}\n\t\t\ttemplateData.checkbox.render(node);\n\t\t}\n\t\telse if (templateData.checkbox) {\n\t\t\ttemplateData.checkbox.dispose();\n\t\t\ttemplateData.checkbox = undefined;\n\t\t}\n\t}\n\n\tprivate setAlignment(container: HTMLElement, treeItem: ITreeItem) {\n\t\tcontainer.parentElement!.classList.toggle('align-icon-with-twisty', !this._hasCheckbox && this.aligner.alignIconWithTwisty(treeItem));\n\t}\n\n\tprivate shouldHideResourceLabelIcon(iconUrl: URI | undefined, icon: ThemeIcon | undefined): boolean {\n\t\t// We always hide the resource label in favor of the iconUrl when it's provided.\n\t\t// When `ThemeIcon` is provided, we hide the resource label icon in favor of it only if it's a not a file icon.\n\t\treturn (!!iconUrl || (!!icon && !this.isFileKindThemeIcon(icon)));\n\t}\n\n\tprivate shouldShowThemeIcon(hasResource: boolean, icon: ThemeIcon | undefined): icon is ThemeIcon {\n\t\tif (!icon) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If there's a resource and the icon is a file icon, then the icon (or lack thereof) will already be coming from the\n\t\t// icon theme and should use whatever the icon theme has provided.\n\t\treturn !(hasResource && this.isFileKindThemeIcon(icon));\n\t}\n\n\tprivate isFolderThemeIcon(icon: ThemeIcon | undefined): boolean {\n\t\treturn icon?.id === FolderThemeIcon.id;\n\t}\n\n\tprivate isFileKindThemeIcon(icon: ThemeIcon | undefined): boolean {\n\t\tif (icon) {\n\t\t\treturn icon.id === FileThemeIcon.id || this.isFolderThemeIcon(icon);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate getFileKind(node: ITreeItem): FileKind {\n\t\tif (node.themeIcon) {\n\t\t\tswitch (node.themeIcon.id) {\n\t\t\t\tcase FileThemeIcon.id:\n\t\t\t\t\treturn FileKind.FILE;\n\t\t\t\tcase FolderThemeIcon.id:\n\t\t\t\t\treturn FileKind.FOLDER;\n\t\t\t}\n\t\t}\n\t\treturn node.collapsibleState === TreeItemCollapsibleState.Collapsed || node.collapsibleState === TreeItemCollapsibleState.Expanded ? FileKind.FOLDER : FileKind.FILE;\n\t}\n\n\tprivate updateCheckboxes(items: ITreeItem[]) {\n\t\tconst additionalItems: ITreeItem[] = [];\n\n\t\tif (!this.manuallyManageCheckboxes) {\n\t\t\tfor (const item of items) {\n\t\t\t\tif (item.checkbox !== undefined) {\n\n\t\t\t\t\tfunction checkChildren(currentItem: ITreeItem) {\n\t\t\t\t\t\tfor (const child of (currentItem.children ?? [])) {\n\t\t\t\t\t\t\tif ((child.checkbox !== undefined) && (currentItem.checkbox !== undefined) && (child.checkbox.isChecked !== currentItem.checkbox.isChecked)) {\n\t\t\t\t\t\t\t\tchild.checkbox.isChecked = currentItem.checkbox.isChecked;\n\t\t\t\t\t\t\t\tadditionalItems.push(child);\n\t\t\t\t\t\t\t\tcheckChildren(child);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcheckChildren(item);\n\n\t\t\t\t\tconst visitedParents: Set<ITreeItem> = new Set();\n\t\t\t\t\tfunction checkParents(currentItem: ITreeItem) {\n\t\t\t\t\t\tif (currentItem.parent && (currentItem.parent.checkbox !== undefined) && currentItem.parent.children) {\n\t\t\t\t\t\t\tif (visitedParents.has(currentItem.parent)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvisitedParents.add(currentItem.parent);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet someUnchecked = false;\n\t\t\t\t\t\t\tlet someChecked = false;\n\t\t\t\t\t\t\tfor (const child of currentItem.parent.children) {\n\t\t\t\t\t\t\t\tif (someUnchecked && someChecked) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (child.checkbox !== undefined) {\n\t\t\t\t\t\t\t\t\tif (child.checkbox.isChecked) {\n\t\t\t\t\t\t\t\t\t\tsomeChecked = true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsomeUnchecked = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (someChecked && !someUnchecked && (currentItem.parent.checkbox.isChecked !== true)) {\n\t\t\t\t\t\t\t\tcurrentItem.parent.checkbox.isChecked = true;\n\t\t\t\t\t\t\t\tadditionalItems.push(currentItem.parent);\n\t\t\t\t\t\t\t\tcheckParents(currentItem.parent);\n\t\t\t\t\t\t\t} else if (someUnchecked && (currentItem.parent.checkbox.isChecked !== false)) {\n\t\t\t\t\t\t\t\tcurrentItem.parent.checkbox.isChecked = false;\n\t\t\t\t\t\t\t\tadditionalItems.push(currentItem.parent);\n\t\t\t\t\t\t\t\tcheckParents(currentItem.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcheckParents(item);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\titems = items.concat(additionalItems);\n\t\titems.forEach(item => {\n\t\t\tconst renderedItem = this._renderedElements.get(item.handle);\n\t\t\tif (renderedItem) {\n\t\t\t\trenderedItem.rendered.checkbox?.render(item);\n\t\t\t}\n\t\t});\n\t\tthis._onDidChangeCheckboxState.fire(items);\n\t}\n\n\tdisposeElement(resource: ITreeNode<ITreeItem, FuzzyScore>, index: number, templateData: ITreeExplorerTemplateData): void {\n\t\ttemplateData.elementDisposable.clear();\n\n\t\tthis._renderedElements.delete(resource.element.handle);\n\t\tthis.treeViewsService.removeRenderedTreeItemElement(resource.element);\n\n\t\ttemplateData.checkbox?.dispose();\n\t\ttemplateData.checkbox = undefined;\n\t}\n\n\tdisposeTemplate(templateData: ITreeExplorerTemplateData): void {\n\t\ttemplateData.resourceLabel.dispose();\n\t\ttemplateData.actionBar.dispose();\n\t\ttemplateData.elementDisposable.dispose();\n\t}\n}\n\nclass Aligner extends Disposable {\n\tprivate _tree: WorkbenchAsyncDataTree<ITreeItem, ITreeItem, FuzzyScore> | undefined;\n\n\tconstructor(private themeService: IThemeService) {\n\t\tsuper();\n\t}\n\n\tset tree(tree: WorkbenchAsyncDataTree<ITreeItem, ITreeItem, FuzzyScore>) {\n\t\tthis._tree = tree;\n\t}\n\n\tpublic alignIconWithTwisty(treeItem: ITreeItem): boolean {\n\t\tif (treeItem.collapsibleState !== TreeItemCollapsibleState.None) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.hasIcon(treeItem)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._tree) {\n\t\t\tconst parent: ITreeItem = this._tree.getParentElement(treeItem) || this._tree.getInput();\n\t\t\tif (this.hasIcon(parent)) {\n\t\t\t\treturn !!parent.children && parent.children.some(c => c.collapsibleState !== TreeItemCollapsibleState.None && !this.hasIcon(c));\n\t\t\t}\n\t\t\treturn !!parent.children && parent.children.every(c => c.collapsibleState === TreeItemCollapsibleState.None || !this.hasIcon(c));\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate hasIcon(node: ITreeItem): boolean {\n\t\tconst icon = this.themeService.getColorTheme().type === ColorScheme.LIGHT ? node.icon : node.iconDark;\n\t\tif (icon) {\n\t\t\treturn true;\n\t\t}\n\t\tif (node.resourceUri || node.themeIcon) {\n\t\t\tconst fileIconTheme = this.themeService.getFileIconTheme();\n\t\t\tconst isFolder = node.themeIcon ? node.themeIcon.id === FolderThemeIcon.id : node.collapsibleState !== TreeItemCollapsibleState.None;\n\t\t\tif (isFolder) {\n\t\t\t\treturn fileIconTheme.hasFileIcons && fileIconTheme.hasFolderIcons;\n\t\t\t}\n\t\t\treturn fileIconTheme.hasFileIcons;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nclass MultipleSelectionActionRunner extends ActionRunner {\n\n\tconstructor(notificationService: INotificationService, private getSelectedResources: (() => ITreeItem[])) {\n\t\tsuper();\n\t\tthis._register(this.onDidRun(e => {\n\t\t\tif (e.error && !isCancellationError(e.error)) {\n\t\t\t\tnotificationService.error(localize('command-error', 'Error running command {1}: {0}. This is likely caused by the extension that contributes {1}.', e.error.message, e.action.id));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected override async runAction(action: IAction, context: TreeViewItemHandleArg | TreeViewPaneHandleArg): Promise<void> {\n\t\tconst selection = this.getSelectedResources();\n\t\tlet selectionHandleArgs: TreeViewItemHandleArg[] | undefined = undefined;\n\t\tlet actionInSelected: boolean = false;\n\t\tif (selection.length > 1) {\n\t\t\tselectionHandleArgs = selection.map(selected => {\n\t\t\t\tif ((selected.handle === (context as TreeViewItemHandleArg).$treeItemHandle) || (context as TreeViewPaneHandleArg).$selectedTreeItems) {\n\t\t\t\t\tactionInSelected = true;\n\t\t\t\t}\n\t\t\t\treturn { $treeViewId: context.$treeViewId, $treeItemHandle: selected.handle };\n\t\t\t});\n\t\t}\n\n\t\tif (!actionInSelected) {\n\t\t\tselectionHandleArgs = undefined;\n\t\t}\n\n\t\tawait action.run(context, selectionHandleArgs);\n\t}\n}\n\nclass TreeMenus extends Disposable implements IDisposable {\n\tprivate contextKeyService: IContextKeyService | undefined;\n\tprivate _onDidChange = new Emitter<ITreeItem>();\n\tpublic readonly onDidChange = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate id: string,\n\t\t@IMenuService private readonly menuService: IMenuService\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * Caller is now responsible for disposing of the menu!\n\t */\n\tgetResourceActions(element: ITreeItem): { menu?: IMenu; actions: IAction[] } {\n\t\tconst actions = this.getActions(MenuId.ViewItemContext, element, true);\n\t\treturn { menu: actions.menu, actions: actions.primary };\n\t}\n\n\tgetResourceContextActions(element: ITreeItem): IAction[] {\n\t\treturn this.getActions(MenuId.ViewItemContext, element).secondary;\n\t}\n\n\tpublic setContextKeyService(service: IContextKeyService) {\n\t\tthis.contextKeyService = service;\n\t}\n\n\tprivate getActions(menuId: MenuId, element: ITreeItem, listen: boolean = false): { menu?: IMenu; primary: IAction[]; secondary: IAction[] } {\n\t\tif (!this.contextKeyService) {\n\t\t\treturn { primary: [], secondary: [] };\n\t\t}\n\n\t\tconst contextKeyService = this.contextKeyService.createOverlay([\n\t\t\t['view', this.id],\n\t\t\t['viewItem', element.contextValue]\n\t\t]);\n\n\t\tconst menu = this.menuService.createMenu(menuId, contextKeyService);\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tconst result = { primary, secondary, menu };\n\t\tcreateAndFillInContextMenuActions(menu, { shouldForwardArgs: true }, result, 'inline');\n\t\tif (listen) {\n\t\t\tthis._register(menu.onDidChange(() => this._onDidChange.fire(element)));\n\t\t} else {\n\t\t\tmenu.dispose();\n\t\t}\n\t\treturn result;\n\t}\n\n\toverride dispose() {\n\t\tthis.contextKeyService = undefined;\n\t\tsuper.dispose();\n\t}\n}\n\nexport class CustomTreeView extends AbstractTreeView {\n\n\tprivate activated: boolean = false;\n\n\tconstructor(\n\t\tid: string,\n\t\ttitle: string,\n\t\tprivate readonly extensionId: string,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IProgressService progressService: IProgressService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IActivityService activityService: IActivityService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(id, title, themeService, instantiationService, commandService, configurationService, progressService, contextMenuService, keybindingService, notificationService, viewDescriptorService, hoverService, contextKeyService, activityService, logService);\n\t}\n\n\tprotected activate() {\n\t\tif (!this.activated) {\n\t\t\ttype ExtensionViewTelemetry = {\n\t\t\t\textensionId: TelemetryTrustedValue<string>;\n\t\t\t\tid: string;\n\t\t\t};\n\t\t\ttype ExtensionViewTelemetryMeta = {\n\t\t\t\textensionId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Id of the extension' };\n\t\t\t\tid: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Id of the view' };\n\t\t\t\towner: 'digitarald';\n\t\t\t\tcomment: 'Helps to gain insights on what extension contributed views are most popular';\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<ExtensionViewTelemetry, ExtensionViewTelemetryMeta>('Extension:ViewActivate', {\n\t\t\t\textensionId: new TelemetryTrustedValue(this.extensionId),\n\t\t\t\tid: this.id,\n\t\t\t});\n\t\t\tthis.createTree();\n\t\t\tthis.progressService.withProgress({ location: this.id }, () => this.extensionService.activateByEvent(`onView:${this.id}`))\n\t\t\t\t.then(() => timeout(2000))\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.updateMessage();\n\t\t\t\t});\n\t\t\tthis.activated = true;\n\t\t}\n\t}\n}\n\nexport class TreeView extends AbstractTreeView {\n\n\tprivate activated: boolean = false;\n\n\tprotected activate() {\n\t\tif (!this.activated) {\n\t\t\tthis.createTree();\n\t\t\tthis.activated = true;\n\t\t}\n\t}\n}\n\ninterface TreeDragSourceInfo {\n\tid: string;\n\titemHandles: string[];\n}\n\nexport class CustomTreeViewDragAndDrop implements ITreeDragAndDrop<ITreeItem> {\n\tprivate readonly treeMimeType: string;\n\tprivate readonly treeItemsTransfer = LocalSelectionTransfer.getInstance<DraggedTreeItemsIdentifier>();\n\tprivate dragCancellationToken: CancellationTokenSource | undefined;\n\n\tconstructor(\n\t\tprivate readonly treeId: string,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITreeViewsDnDService private readonly treeViewsDragAndDropService: ITreeViewsDnDService,\n\t\t@ILogService private readonly logService: ILogService) {\n\t\tthis.treeMimeType = `application/vnd.code.tree.${treeId.toLowerCase()}`;\n\t}\n\n\tprivate dndController: ITreeViewDragAndDropController | undefined;\n\tset controller(controller: ITreeViewDragAndDropController | undefined) {\n\t\tthis.dndController = controller;\n\t}\n\n\tprivate handleDragAndLog(dndController: ITreeViewDragAndDropController, itemHandles: string[], uuid: string, dragCancellationToken: CancellationToken): Promise<VSDataTransfer | undefined> {\n\t\treturn dndController.handleDrag(itemHandles, uuid, dragCancellationToken).then(additionalDataTransfer => {\n\t\t\tif (additionalDataTransfer) {\n\t\t\t\tconst unlistedTypes: string[] = [];\n\t\t\t\tfor (const item of additionalDataTransfer) {\n\t\t\t\t\tif ((item[0] !== this.treeMimeType) && (dndController.dragMimeTypes.findIndex(value => value === item[0]) < 0)) {\n\t\t\t\t\t\tunlistedTypes.push(item[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (unlistedTypes.length) {\n\t\t\t\t\tthis.logService.warn(`Drag and drop controller for tree ${this.treeId} adds the following data transfer types but does not declare them in dragMimeTypes: ${unlistedTypes.join(', ')}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn additionalDataTransfer;\n\t\t});\n\t}\n\n\tprivate addExtensionProvidedTransferTypes(originalEvent: DragEvent, itemHandles: string[]) {\n\t\tif (!originalEvent.dataTransfer || !this.dndController) {\n\t\t\treturn;\n\t\t}\n\t\tconst uuid = generateUuid();\n\n\t\tthis.dragCancellationToken = new CancellationTokenSource();\n\t\tthis.treeViewsDragAndDropService.addDragOperationTransfer(uuid, this.handleDragAndLog(this.dndController, itemHandles, uuid, this.dragCancellationToken.token));\n\t\tthis.treeItemsTransfer.setData([new DraggedTreeItemsIdentifier(uuid)], DraggedTreeItemsIdentifier.prototype);\n\t\toriginalEvent.dataTransfer.clearData(Mimes.text);\n\t\tif (this.dndController.dragMimeTypes.find((element) => element === Mimes.uriList)) {\n\t\t\t// Add the type that the editor knows\n\t\t\toriginalEvent.dataTransfer?.setData(DataTransfers.RESOURCES, '');\n\t\t}\n\t\tthis.dndController.dragMimeTypes.forEach(supportedType => {\n\t\t\toriginalEvent.dataTransfer?.setData(supportedType, '');\n\t\t});\n\t}\n\n\tprivate addResourceInfoToTransfer(originalEvent: DragEvent, resources: URI[]) {\n\t\tif (resources.length && originalEvent.dataTransfer) {\n\t\t\t// Apply some datatransfer types to allow for dragging the element outside of the application\n\t\t\tthis.instantiationService.invokeFunction(accessor => fillEditorsDragData(accessor, resources, originalEvent));\n\n\t\t\t// The only custom data transfer we set from the explorer is a file transfer\n\t\t\t// to be able to DND between multiple code file explorers across windows\n\t\t\tconst fileResources = resources.filter(s => s.scheme === Schemas.file).map(r => r.fsPath);\n\t\t\tif (fileResources.length) {\n\t\t\t\toriginalEvent.dataTransfer.setData(CodeDataTransfers.FILES, JSON.stringify(fileResources));\n\t\t\t}\n\t\t}\n\t}\n\n\tonDragStart(data: IDragAndDropData, originalEvent: DragEvent): void {\n\t\tif (originalEvent.dataTransfer) {\n\t\t\tconst treeItemsData = (data as ElementsDragAndDropData<ITreeItem, ITreeItem[]>).getData();\n\t\t\tconst resources: URI[] = [];\n\t\t\tconst sourceInfo: TreeDragSourceInfo = {\n\t\t\t\tid: this.treeId,\n\t\t\t\titemHandles: []\n\t\t\t};\n\t\t\ttreeItemsData.forEach(item => {\n\t\t\t\tsourceInfo.itemHandles.push(item.handle);\n\t\t\t\tif (item.resourceUri) {\n\t\t\t\t\tresources.push(URI.revive(item.resourceUri));\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.addResourceInfoToTransfer(originalEvent, resources);\n\t\t\tthis.addExtensionProvidedTransferTypes(originalEvent, sourceInfo.itemHandles);\n\t\t\toriginalEvent.dataTransfer.setData(this.treeMimeType,\n\t\t\t\tJSON.stringify(sourceInfo));\n\t\t}\n\t}\n\n\tprivate debugLog(types: Set<string>) {\n\t\tif (types.size) {\n\t\t\tthis.logService.debug(`TreeView dragged mime types: ${Array.from(types).join(', ')}`);\n\t\t} else {\n\t\t\tthis.logService.debug(`TreeView dragged with no supported mime types.`);\n\t\t}\n\t}\n\n\tonDragOver(data: IDragAndDropData, targetElement: ITreeItem, targetIndex: number, originalEvent: DragEvent): boolean | ITreeDragOverReaction {\n\t\tconst dataTransfer = toExternalVSDataTransfer(originalEvent.dataTransfer!);\n\n\t\tconst types = new Set<string>(Array.from(dataTransfer, x => x[0]));\n\n\t\tif (originalEvent.dataTransfer) {\n\t\t\t// Also add uri-list if we have any files. At this stage we can't actually access the file itself though.\n\t\t\tfor (const item of originalEvent.dataTransfer.items) {\n\t\t\t\tif (item.kind === 'file' || item.type === DataTransfers.RESOURCES.toLowerCase()) {\n\t\t\t\t\ttypes.add(Mimes.uriList);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.debugLog(types);\n\n\t\tconst dndController = this.dndController;\n\t\tif (!dndController || !originalEvent.dataTransfer || (dndController.dropMimeTypes.length === 0)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst dragContainersSupportedType = Array.from(types).some((value, index) => {\n\t\t\tif (value === this.treeMimeType) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn dndController.dropMimeTypes.indexOf(value) >= 0;\n\t\t\t}\n\t\t});\n\t\tif (dragContainersSupportedType) {\n\t\t\treturn { accept: true, bubble: TreeDragOverBubble.Down, autoExpand: true };\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetDragURI(element: ITreeItem): string | null {\n\t\tif (!this.dndController) {\n\t\t\treturn null;\n\t\t}\n\t\treturn element.resourceUri ? URI.revive(element.resourceUri).toString() : element.handle;\n\t}\n\n\tgetDragLabel?(elements: ITreeItem[]): string | undefined {\n\t\tif (!this.dndController) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (elements.length > 1) {\n\t\t\treturn String(elements.length);\n\t\t}\n\t\tconst element = elements[0];\n\t\treturn element.label ? element.label.label : (element.resourceUri ? this.labelService.getUriLabel(URI.revive(element.resourceUri)) : undefined);\n\t}\n\n\tasync drop(data: IDragAndDropData, targetNode: ITreeItem | undefined, targetIndex: number | undefined, originalEvent: DragEvent): Promise<void> {\n\t\tconst dndController = this.dndController;\n\t\tif (!originalEvent.dataTransfer || !dndController) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet treeSourceInfo: TreeDragSourceInfo | undefined;\n\t\tlet willDropUuid: string | undefined;\n\t\tif (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n\t\t\twillDropUuid = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype)![0].identifier;\n\t\t}\n\n\t\tconst originalDataTransfer = toExternalVSDataTransfer(originalEvent.dataTransfer, true);\n\n\t\tconst outDataTransfer = new VSDataTransfer();\n\t\tfor (const [type, item] of originalDataTransfer) {\n\t\t\tif (type === this.treeMimeType || dndController.dropMimeTypes.includes(type) || (item.asFile() && dndController.dropMimeTypes.includes(DataTransfers.FILES.toLowerCase()))) {\n\t\t\t\toutDataTransfer.append(type, item);\n\t\t\t\tif (type === this.treeMimeType) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttreeSourceInfo = JSON.parse(await item.asString());\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// noop\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst additionalDataTransfer = await this.treeViewsDragAndDropService.removeDragOperationTransfer(willDropUuid);\n\t\tif (additionalDataTransfer) {\n\t\t\tfor (const [type, item] of additionalDataTransfer) {\n\t\t\t\toutDataTransfer.append(type, item);\n\t\t\t}\n\t\t}\n\t\treturn dndController.handleDrop(outDataTransfer, targetNode, CancellationToken.None, willDropUuid, treeSourceInfo?.id, treeSourceInfo?.itemHandles);\n\t}\n\n\tonDragEnd(originalEvent: DragEvent): void {\n\t\t// Check if the drag was cancelled.\n\t\tif (originalEvent.dataTransfer?.dropEffect === 'none') {\n\t\t\tthis.dragCancellationToken?.cancel();\n\t\t}\n\t}\n}\n"]}