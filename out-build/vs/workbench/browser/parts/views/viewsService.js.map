{"version":3,"sources":["vs/workbench/browser/parts/views/viewsService.ts"],"names":[],"mappings":"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","file":"viewsService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable, toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IViewDescriptorService, ViewContainer, IViewDescriptor, IView, ViewContainerLocation, IViewsService, IViewPaneContainer } from 'vs/workbench/common/views';\nimport { FocusedViewContext, getVisbileViewContextKey, getEnabledViewContainerContextKey } from 'vs/workbench/common/contextkeys';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ContextKeyExpr, IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isString } from 'vs/base/common/types';\nimport { MenuId, registerAction2, Action2, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { localize } from 'vs/nls';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IPaneComposite } from 'vs/workbench/common/panecomposite';\nimport { ServicesAccessor, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { PaneCompositeDescriptor, PaneCompositeRegistry, Extensions as PaneCompositeExtensions, PaneComposite } from 'vs/workbench/browser/panecomposite';\nimport { IWorkbenchLayoutService, Parts } from 'vs/workbench/services/layout/browser/layoutService';\nimport { URI } from 'vs/base/common/uri';\nimport { IProgressIndicator } from 'vs/platform/progress/common/progress';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { FilterViewPaneContainer } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { ICommandActionTitle, ILocalizedString } from 'vs/platform/action/common/action';\n\nexport class ViewsService extends Disposable implements IViewsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly viewDisposable: Map<IViewDescriptor, IDisposable>;\n\tprivate readonly viewPaneContainers: Map<string, ViewPaneContainer>;\n\n\tprivate readonly _onDidChangeViewVisibility: Emitter<{ id: string; visible: boolean }> = this._register(new Emitter<{ id: string; visible: boolean }>());\n\treadonly onDidChangeViewVisibility: Event<{ id: string; visible: boolean }> = this._onDidChangeViewVisibility.event;\n\n\tprivate readonly _onDidChangeViewContainerVisibility = this._register(new Emitter<{ id: string; visible: boolean; location: ViewContainerLocation }>());\n\treadonly onDidChangeViewContainerVisibility = this._onDidChangeViewContainerVisibility.event;\n\n\tprivate readonly _onDidChangeFocusedView = this._register(new Emitter<void>());\n\treadonly onDidChangeFocusedView = this._onDidChangeFocusedView.event;\n\n\tprivate readonly visibleViewContextKeys: Map<string, IContextKey<boolean>>;\n\tprivate readonly focusedViewContextKey: IContextKey<string>;\n\n\tconstructor(\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IPaneCompositePartService private readonly paneCompositeService: IPaneCompositePartService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper();\n\n\t\tthis.viewDisposable = new Map<IViewDescriptor, IDisposable>();\n\t\tthis.visibleViewContextKeys = new Map<string, IContextKey<boolean>>();\n\t\tthis.viewPaneContainers = new Map<string, ViewPaneContainer>();\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.viewDisposable.forEach(disposable => disposable.dispose());\n\t\t\tthis.viewDisposable.clear();\n\t\t}));\n\n\t\tthis.viewDescriptorService.viewContainers.forEach(viewContainer => this.onDidRegisterViewContainer(viewContainer, this.viewDescriptorService.getViewContainerLocation(viewContainer)!));\n\t\tthis._register(this.viewDescriptorService.onDidChangeViewContainers(({ added, removed }) => this.onDidChangeContainers(added, removed)));\n\t\tthis._register(this.viewDescriptorService.onDidChangeContainerLocation(({ viewContainer, from, to }) => this.onDidChangeContainerLocation(viewContainer, from, to)));\n\n\t\t// View Container Visibility\n\t\tthis._register(this.paneCompositeService.onDidPaneCompositeOpen(e => this._onDidChangeViewContainerVisibility.fire({ id: e.composite.getId(), visible: true, location: e.viewContainerLocation })));\n\t\tthis._register(this.paneCompositeService.onDidPaneCompositeClose(e => this._onDidChangeViewContainerVisibility.fire({ id: e.composite.getId(), visible: false, location: e.viewContainerLocation })));\n\n\t\tthis.focusedViewContextKey = FocusedViewContext.bindTo(contextKeyService);\n\t}\n\n\tprivate onViewsAdded(added: IView[]): void {\n\t\tfor (const view of added) {\n\t\t\tthis.onViewsVisibilityChanged(view, view.isBodyVisible());\n\t\t}\n\t}\n\n\tprivate onViewsVisibilityChanged(view: IView, visible: boolean): void {\n\t\tthis.getOrCreateActiveViewContextKey(view).set(visible);\n\t\tthis._onDidChangeViewVisibility.fire({ id: view.id, visible: visible });\n\t}\n\n\tprivate onViewsRemoved(removed: IView[]): void {\n\t\tfor (const view of removed) {\n\t\t\tthis.onViewsVisibilityChanged(view, false);\n\t\t}\n\t}\n\n\tprivate getOrCreateActiveViewContextKey(view: IView): IContextKey<boolean> {\n\t\tconst visibleContextKeyId = getVisbileViewContextKey(view.id);\n\t\tlet contextKey = this.visibleViewContextKeys.get(visibleContextKeyId);\n\t\tif (!contextKey) {\n\t\t\tcontextKey = new RawContextKey(visibleContextKeyId, false).bindTo(this.contextKeyService);\n\t\t\tthis.visibleViewContextKeys.set(visibleContextKeyId, contextKey);\n\t\t}\n\t\treturn contextKey;\n\t}\n\n\tprivate onDidChangeContainers(added: ReadonlyArray<{ container: ViewContainer; location: ViewContainerLocation }>, removed: ReadonlyArray<{ container: ViewContainer; location: ViewContainerLocation }>): void {\n\t\tfor (const { container, location } of removed) {\n\t\t\tthis.deregisterPaneComposite(container, location);\n\t\t}\n\t\tfor (const { container, location } of added) {\n\t\t\tthis.onDidRegisterViewContainer(container, location);\n\t\t}\n\t}\n\n\tprivate onDidRegisterViewContainer(viewContainer: ViewContainer, viewContainerLocation: ViewContainerLocation): void {\n\t\tthis.registerPaneComposite(viewContainer, viewContainerLocation);\n\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\tthis.onViewDescriptorsAdded(viewContainerModel.allViewDescriptors, viewContainer);\n\t\tthis._register(viewContainerModel.onDidChangeAllViewDescriptors(({ added, removed }) => {\n\t\t\tthis.onViewDescriptorsAdded(added, viewContainer);\n\t\t\tthis.onViewDescriptorsRemoved(removed);\n\t\t}));\n\t\tthis._register(this.registerOpenViewContainerAction(viewContainer));\n\t}\n\n\tprivate onDidChangeContainerLocation(viewContainer: ViewContainer, from: ViewContainerLocation, to: ViewContainerLocation): void {\n\t\tthis.deregisterPaneComposite(viewContainer, from);\n\t\tthis.registerPaneComposite(viewContainer, to);\n\t}\n\n\tprivate onViewDescriptorsAdded(views: ReadonlyArray<IViewDescriptor>, container: ViewContainer): void {\n\t\tconst location = this.viewDescriptorService.getViewContainerLocation(container);\n\t\tif (location === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst composite = this.getComposite(container.id, location);\n\t\tfor (const viewDescriptor of views) {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tdisposables.add(this.registerOpenViewAction(viewDescriptor));\n\t\t\tdisposables.add(this.registerFocusViewAction(viewDescriptor, composite?.name && composite.name !== composite.id ? composite.name : Categories.View));\n\t\t\tdisposables.add(this.registerResetViewLocationAction(viewDescriptor));\n\t\t\tthis.viewDisposable.set(viewDescriptor, disposables);\n\t\t}\n\t}\n\n\tprivate onViewDescriptorsRemoved(views: ReadonlyArray<IViewDescriptor>): void {\n\t\tfor (const view of views) {\n\t\t\tconst disposable = this.viewDisposable.get(view);\n\t\t\tif (disposable) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tthis.viewDisposable.delete(view);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async openComposite(compositeId: string, location: ViewContainerLocation, focus?: boolean): Promise<IPaneComposite | undefined> {\n\t\treturn this.paneCompositeService.openPaneComposite(compositeId, location, focus);\n\t}\n\n\tprivate getComposite(compositeId: string, location: ViewContainerLocation): { id: string; name: string } | undefined {\n\t\treturn this.paneCompositeService.getPaneComposite(compositeId, location);\n\t}\n\n\tisViewContainerVisible(id: string): boolean {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(id);\n\t\tif (viewContainer) {\n\t\t\tconst viewContainerLocation = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\tif (viewContainerLocation !== null) {\n\t\t\t\treturn this.paneCompositeService.getActivePaneComposite(viewContainerLocation)?.getId() === id;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetVisibleViewContainer(location: ViewContainerLocation): ViewContainer | null {\n\t\tconst viewContainerId = this.paneCompositeService.getActivePaneComposite(location)?.getId();\n\t\treturn viewContainerId ? this.viewDescriptorService.getViewContainerById(viewContainerId) : null;\n\t}\n\n\tgetActiveViewPaneContainerWithId(viewContainerId: string): IViewPaneContainer | null {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(viewContainerId);\n\t\treturn viewContainer ? this.getActiveViewPaneContainer(viewContainer) : null;\n\t}\n\n\tasync openViewContainer(id: string, focus?: boolean): Promise<IPaneComposite | null> {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(id);\n\t\tif (viewContainer) {\n\t\t\tconst viewContainerLocation = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\tif (viewContainerLocation !== null) {\n\t\t\t\tconst paneComposite = await this.paneCompositeService.openPaneComposite(id, viewContainerLocation, focus);\n\t\t\t\treturn paneComposite || null;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync closeViewContainer(id: string): Promise<void> {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(id);\n\t\tif (viewContainer) {\n\t\t\tconst viewContainerLocation = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\tconst isActive = viewContainerLocation !== null && this.paneCompositeService.getActivePaneComposite(viewContainerLocation);\n\t\t\tif (viewContainerLocation !== null) {\n\t\t\t\treturn isActive ? this.layoutService.setPartHidden(true, getPartByLocation(viewContainerLocation)) : undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tisViewVisible(id: string): boolean {\n\t\tconst activeView = this.getActiveViewWithId(id);\n\t\treturn activeView?.isBodyVisible() || false;\n\t}\n\n\tgetActiveViewWithId<T extends IView>(id: string): T | null {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerByViewId(id);\n\t\tif (viewContainer) {\n\t\t\tconst activeViewPaneContainer = this.getActiveViewPaneContainer(viewContainer);\n\t\t\tif (activeViewPaneContainer) {\n\t\t\t\treturn activeViewPaneContainer.getView(id) as T;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetViewWithId<T extends IView>(id: string): T | null {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerByViewId(id);\n\t\tif (viewContainer) {\n\t\t\tconst viewPaneContainer: IViewPaneContainer | undefined = this.viewPaneContainers.get(viewContainer.id);\n\t\t\tif (viewPaneContainer) {\n\t\t\t\treturn viewPaneContainer.getView(id) as T;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetFocusedViewName(): string {\n\t\tconst viewId: string = this.contextKeyService.getContextKeyValue(FocusedViewContext.key) ?? '';\n\t\treturn this.viewDescriptorService.getViewDescriptorById(viewId.toString())?.name ?? '';\n\t}\n\n\tasync openView<T extends IView>(id: string, focus?: boolean): Promise<T | null> {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerByViewId(id);\n\t\tif (!viewContainer) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.viewDescriptorService.getViewContainerModel(viewContainer).activeViewDescriptors.some(viewDescriptor => viewDescriptor.id === id)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst location = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\tconst compositeDescriptor = this.getComposite(viewContainer.id, location!);\n\t\tif (compositeDescriptor) {\n\t\t\tconst paneComposite = await this.openComposite(compositeDescriptor.id, location!) as IPaneComposite | undefined;\n\t\t\tif (paneComposite && paneComposite.openView) {\n\t\t\t\treturn paneComposite.openView<T>(id, focus) || null;\n\t\t\t} else if (focus) {\n\t\t\t\tpaneComposite?.focus();\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tcloseView(id: string): void {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerByViewId(id);\n\t\tif (viewContainer) {\n\t\t\tconst activeViewPaneContainer = this.getActiveViewPaneContainer(viewContainer);\n\t\t\tif (activeViewPaneContainer) {\n\t\t\t\tconst view = activeViewPaneContainer.getView(id);\n\t\t\t\tif (view) {\n\t\t\t\t\tif (activeViewPaneContainer.views.length === 1) {\n\t\t\t\t\t\tconst location = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\t\t\t\tif (location === ViewContainerLocation.Sidebar) {\n\t\t\t\t\t\t\tthis.layoutService.setPartHidden(true, Parts.SIDEBAR_PART);\n\t\t\t\t\t\t} else if (location === ViewContainerLocation.Panel || location === ViewContainerLocation.AuxiliaryBar) {\n\t\t\t\t\t\t\tthis.paneCompositeService.hideActivePaneComposite(location);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The blur event doesn't fire on WebKit when the focused element is hidden,\n\t\t\t\t\t\t// so the context key needs to be forced here too otherwise a view may still\n\t\t\t\t\t\t// think it's showing, breaking toggle commands.\n\t\t\t\t\t\tif (this.focusedViewContextKey.get() === id) {\n\t\t\t\t\t\t\tthis.focusedViewContextKey.reset();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tview.setExpanded(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getActiveViewPaneContainer(viewContainer: ViewContainer): IViewPaneContainer | null {\n\t\tconst location = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\tif (location === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst activePaneComposite = this.paneCompositeService.getActivePaneComposite(location);\n\t\tif (activePaneComposite?.getId() === viewContainer.id) {\n\t\t\treturn activePaneComposite.getViewPaneContainer() || null;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetViewProgressIndicator(viewId: string): IProgressIndicator | undefined {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerByViewId(viewId);\n\t\tif (!viewContainer) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst viewPaneContainer = this.viewPaneContainers.get(viewContainer.id);\n\t\tif (!viewPaneContainer) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst view = viewPaneContainer.getView(viewId);\n\t\tif (!view) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (viewPaneContainer.isViewMergedWithContainer()) {\n\t\t\treturn this.getViewContainerProgressIndicator(viewContainer);\n\t\t}\n\n\t\treturn view.getProgressIndicator();\n\t}\n\n\tprivate getViewContainerProgressIndicator(viewContainer: ViewContainer): IProgressIndicator | undefined {\n\t\tconst viewContainerLocation = this.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\tif (viewContainerLocation === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.paneCompositeService.getProgressIndicator(viewContainer.id, viewContainerLocation);\n\t}\n\n\tprivate registerOpenViewContainerAction(viewContainer: ViewContainer): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tif (viewContainer.openCommandActionDescriptor) {\n\t\t\tconst { id, mnemonicTitle, keybindings, order } = viewContainer.openCommandActionDescriptor ?? { id: viewContainer.id };\n\t\t\tconst title = viewContainer.openCommandActionDescriptor.title ?? viewContainer.title;\n\t\t\tconst that = this;\n\t\t\tdisposables.add(registerAction2(class OpenViewContainerAction extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tget title(): ICommandActionTitle {\n\t\t\t\t\t\t\tconst viewContainerLocation = that.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\t\t\t\t\tconst localizedTitle = typeof title === 'string' ? title : title.value;\n\t\t\t\t\t\t\tconst originalTitle = typeof title === 'string' ? title : title.original;\n\t\t\t\t\t\t\tif (viewContainerLocation === ViewContainerLocation.Sidebar) {\n\t\t\t\t\t\t\t\treturn { value: localize('show view', \"Show {0}\", localizedTitle), original: `Show ${originalTitle}` };\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn { value: localize('toggle view', \"Toggle {0}\", localizedTitle), original: `Toggle ${originalTitle}` };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\t\tprecondition: ContextKeyExpr.has(getEnabledViewContainerContextKey(viewContainer.id)),\n\t\t\t\t\t\tkeybinding: keybindings ? { ...keybindings, weight: KeybindingWeight.WorkbenchContrib } : undefined,\n\t\t\t\t\t\tf1: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tpublic async run(serviceAccessor: ServicesAccessor): Promise<any> {\n\t\t\t\t\tconst editorGroupService = serviceAccessor.get(IEditorGroupsService);\n\t\t\t\t\tconst viewDescriptorService = serviceAccessor.get(IViewDescriptorService);\n\t\t\t\t\tconst layoutService = serviceAccessor.get(IWorkbenchLayoutService);\n\t\t\t\t\tconst viewsService = serviceAccessor.get(IViewsService);\n\t\t\t\t\tconst viewContainerLocation = viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\t\t\t\tswitch (viewContainerLocation) {\n\t\t\t\t\t\tcase ViewContainerLocation.AuxiliaryBar:\n\t\t\t\t\t\tcase ViewContainerLocation.Sidebar: {\n\t\t\t\t\t\t\tconst part = viewContainerLocation === ViewContainerLocation.Sidebar ? Parts.SIDEBAR_PART : Parts.AUXILIARYBAR_PART;\n\t\t\t\t\t\t\tif (!viewsService.isViewContainerVisible(viewContainer.id) || !layoutService.hasFocus(part)) {\n\t\t\t\t\t\t\t\tawait viewsService.openViewContainer(viewContainer.id, true);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\teditorGroupService.activeGroup.focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase ViewContainerLocation.Panel:\n\t\t\t\t\t\t\tif (!viewsService.isViewContainerVisible(viewContainer.id) || !layoutService.hasFocus(Parts.PANEL_PART)) {\n\t\t\t\t\t\t\t\tawait viewsService.openViewContainer(viewContainer.id, true);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tviewsService.closeViewContainer(viewContainer.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tif (mnemonicTitle) {\n\t\t\t\tconst defaultLocation = this.viewDescriptorService.getDefaultViewContainerLocation(viewContainer);\n\t\t\t\tdisposables.add(MenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\t\t\t\t\tcommand: {\n\t\t\t\t\t\tid,\n\t\t\t\t\t\ttitle: mnemonicTitle,\n\t\t\t\t\t},\n\t\t\t\t\tgroup: defaultLocation === ViewContainerLocation.Sidebar ? '3_views' : '4_panels',\n\t\t\t\t\twhen: ContextKeyExpr.has(getEnabledViewContainerContextKey(viewContainer.id)),\n\t\t\t\t\torder: order ?? Number.MAX_VALUE\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tprivate registerOpenViewAction(viewDescriptor: IViewDescriptor): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tif (viewDescriptor.openCommandActionDescriptor) {\n\t\t\tconst title = viewDescriptor.openCommandActionDescriptor.title ?? viewDescriptor.name;\n\t\t\tconst commandId = viewDescriptor.openCommandActionDescriptor.id;\n\t\t\tconst that = this;\n\t\t\tdisposables.add(registerAction2(class OpenViewAction extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: commandId,\n\t\t\t\t\t\tget title(): ICommandActionTitle {\n\t\t\t\t\t\t\tconst viewContainerLocation = that.viewDescriptorService.getViewLocationById(viewDescriptor.id);\n\t\t\t\t\t\t\tconst localizedTitle = typeof title === 'string' ? title : title.value;\n\t\t\t\t\t\t\tconst originalTitle = typeof title === 'string' ? title : title.original;\n\t\t\t\t\t\t\tif (viewContainerLocation === ViewContainerLocation.Sidebar) {\n\t\t\t\t\t\t\t\treturn { value: localize('show view', \"Show {0}\", localizedTitle), original: `Show ${originalTitle}` };\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn { value: localize('toggle view', \"Toggle {0}\", localizedTitle), original: `Toggle ${originalTitle}` };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\t\tprecondition: ContextKeyExpr.has(`${viewDescriptor.id}.active`),\n\t\t\t\t\t\tkeybinding: viewDescriptor.openCommandActionDescriptor!.keybindings ? { ...viewDescriptor.openCommandActionDescriptor!.keybindings, weight: KeybindingWeight.WorkbenchContrib } : undefined,\n\t\t\t\t\t\tf1: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tpublic async run(serviceAccessor: ServicesAccessor): Promise<any> {\n\t\t\t\t\tconst editorGroupService = serviceAccessor.get(IEditorGroupsService);\n\t\t\t\t\tconst viewDescriptorService = serviceAccessor.get(IViewDescriptorService);\n\t\t\t\t\tconst layoutService = serviceAccessor.get(IWorkbenchLayoutService);\n\t\t\t\t\tconst viewsService = serviceAccessor.get(IViewsService);\n\t\t\t\t\tconst contextKeyService = serviceAccessor.get(IContextKeyService);\n\n\t\t\t\t\tconst focusedViewId = FocusedViewContext.getValue(contextKeyService);\n\t\t\t\t\tif (focusedViewId === viewDescriptor.id) {\n\n\t\t\t\t\t\tconst viewLocation = viewDescriptorService.getViewLocationById(viewDescriptor.id);\n\t\t\t\t\t\tif (viewDescriptorService.getViewLocationById(viewDescriptor.id) === ViewContainerLocation.Sidebar) {\n\t\t\t\t\t\t\t// focus the editor if the view is focused and in the side bar\n\t\t\t\t\t\t\teditorGroupService.activeGroup.focus();\n\t\t\t\t\t\t} else if (viewLocation !== null) {\n\t\t\t\t\t\t\t// otherwise hide the part where the view lives if focused\n\t\t\t\t\t\t\tlayoutService.setPartHidden(true, getPartByLocation(viewLocation));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tviewsService.openView(viewDescriptor.id, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tif (viewDescriptor.openCommandActionDescriptor.mnemonicTitle) {\n\t\t\t\tconst defaultViewContainer = this.viewDescriptorService.getDefaultContainerById(viewDescriptor.id);\n\t\t\t\tif (defaultViewContainer) {\n\t\t\t\t\tconst defaultLocation = this.viewDescriptorService.getDefaultViewContainerLocation(defaultViewContainer);\n\t\t\t\t\tdisposables.add(MenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\tid: commandId,\n\t\t\t\t\t\t\ttitle: viewDescriptor.openCommandActionDescriptor.mnemonicTitle,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgroup: defaultLocation === ViewContainerLocation.Sidebar ? '3_views' : '4_panels',\n\t\t\t\t\t\twhen: ContextKeyExpr.has(`${viewDescriptor.id}.active`),\n\t\t\t\t\t\torder: viewDescriptor.openCommandActionDescriptor.order ?? Number.MAX_VALUE\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn disposables;\n\t}\n\n\tprivate registerFocusViewAction(viewDescriptor: IViewDescriptor, category?: string | ILocalizedString): IDisposable {\n\t\treturn registerAction2(class FocusViewAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tconst title = localize({ key: 'focus view', comment: ['{0} indicates the name of the view to be focused.'] }, \"Focus on {0} View\", viewDescriptor.name);\n\t\t\t\tsuper({\n\t\t\t\t\tid: viewDescriptor.focusCommand ? viewDescriptor.focusCommand.id : `${viewDescriptor.id}.focus`,\n\t\t\t\t\ttitle: { original: `Focus on ${viewDescriptor.name} View`, value: title },\n\t\t\t\t\tcategory,\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\twhen: viewDescriptor.when,\n\t\t\t\t\t}],\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\twhen: ContextKeyExpr.has(`${viewDescriptor.id}.active`),\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\tprimary: viewDescriptor.focusCommand?.keybindings?.primary,\n\t\t\t\t\t\tsecondary: viewDescriptor.focusCommand?.keybindings?.secondary,\n\t\t\t\t\t\tlinux: viewDescriptor.focusCommand?.keybindings?.linux,\n\t\t\t\t\t\tmac: viewDescriptor.focusCommand?.keybindings?.mac,\n\t\t\t\t\t\twin: viewDescriptor.focusCommand?.keybindings?.win\n\t\t\t\t\t},\n\t\t\t\t\tdescription: {\n\t\t\t\t\t\tdescription: title,\n\t\t\t\t\t\targs: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'focusOptions',\n\t\t\t\t\t\t\t\tdescription: 'Focus Options',\n\t\t\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t'preserveFocus': {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\t\t\t\tdefault: false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor, options?: { preserveFocus?: boolean }): void {\n\t\t\t\taccessor.get(IViewsService).openView(viewDescriptor.id, !options?.preserveFocus);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate registerResetViewLocationAction(viewDescriptor: IViewDescriptor): IDisposable {\n\t\treturn registerAction2(class ResetViewLocationAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `${viewDescriptor.id}.resetViewLocation`,\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\toriginal: 'Reset Location',\n\t\t\t\t\t\tvalue: localize('resetViewLocation', \"Reset Location\")\n\t\t\t\t\t},\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.ViewTitleContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\t\tContextKeyExpr.equals('view', viewDescriptor.id),\n\t\t\t\t\t\t\t\tContextKeyExpr.equals(`${viewDescriptor.id}.defaultViewLocation`, false)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: '1_hide',\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}],\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(accessor: ServicesAccessor): void {\n\t\t\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\t\t\tconst defaultContainer = viewDescriptorService.getDefaultContainerById(viewDescriptor.id)!;\n\t\t\t\tconst containerModel = viewDescriptorService.getViewContainerModel(defaultContainer)!;\n\n\t\t\t\t// The default container is hidden so we should try to reset its location first\n\t\t\t\tif (defaultContainer.hideIfEmpty && containerModel.visibleViewDescriptors.length === 0) {\n\t\t\t\t\tconst defaultLocation = viewDescriptorService.getDefaultViewContainerLocation(defaultContainer)!;\n\t\t\t\t\tviewDescriptorService.moveViewContainerToLocation(defaultContainer, defaultLocation);\n\t\t\t\t}\n\n\t\t\t\tviewDescriptorService.moveViewsToContainer([viewDescriptor], viewDescriptorService.getDefaultContainerById(viewDescriptor.id)!);\n\t\t\t\taccessor.get(IViewsService).openView(viewDescriptor.id, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate registerPaneComposite(viewContainer: ViewContainer, viewContainerLocation: ViewContainerLocation): void {\n\t\tconst that = this;\n\t\tclass PaneContainer extends PaneComposite {\n\t\t\tconstructor(\n\t\t\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t\t\t@IStorageService storageService: IStorageService,\n\t\t\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t\t\t@IThemeService themeService: IThemeService,\n\t\t\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t\t\t@IExtensionService extensionService: IExtensionService,\n\t\t\t) {\n\t\t\t\tsuper(viewContainer.id, telemetryService, storageService, instantiationService, themeService, contextMenuService, extensionService, contextService);\n\t\t\t}\n\n\t\t\tprotected createViewPaneContainer(element: HTMLElement): ViewPaneContainer {\n\t\t\t\tconst viewPaneContainerDisposables = this._register(new DisposableStore());\n\n\t\t\t\t// Use composite's instantiation service to get the editor progress service for any editors instantiated within the composite\n\t\t\t\tconst viewPaneContainer = that.createViewPaneContainer(element, viewContainer, viewContainerLocation, viewPaneContainerDisposables, this.instantiationService);\n\n\t\t\t\t// Only updateTitleArea for non-filter views: microsoft/vscode-remote-release#3676\n\t\t\t\tif (!(viewPaneContainer instanceof FilterViewPaneContainer)) {\n\t\t\t\t\tviewPaneContainerDisposables.add(Event.any(viewPaneContainer.onDidAddViews, viewPaneContainer.onDidRemoveViews, viewPaneContainer.onTitleAreaUpdate)(() => {\n\t\t\t\t\t\t// Update title area since there is no better way to update secondary actions\n\t\t\t\t\t\tthis.updateTitleArea();\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\treturn viewPaneContainer;\n\t\t\t}\n\t\t}\n\n\t\tRegistry.as<PaneCompositeRegistry>(getPaneCompositeExtension(viewContainerLocation)).registerPaneComposite(PaneCompositeDescriptor.create(\n\t\t\tPaneContainer,\n\t\t\tviewContainer.id,\n\t\t\ttypeof viewContainer.title === 'string' ? viewContainer.title : viewContainer.title.value,\n\t\t\tisString(viewContainer.icon) ? viewContainer.icon : undefined,\n\t\t\tviewContainer.order,\n\t\t\tviewContainer.requestedIndex,\n\t\t\tviewContainer.icon instanceof URI ? viewContainer.icon : undefined\n\t\t));\n\t}\n\n\tprivate deregisterPaneComposite(viewContainer: ViewContainer, viewContainerLocation: ViewContainerLocation): void {\n\t\tRegistry.as<PaneCompositeRegistry>(getPaneCompositeExtension(viewContainerLocation)).deregisterPaneComposite(viewContainer.id);\n\t}\n\n\tprivate createViewPaneContainer(element: HTMLElement, viewContainer: ViewContainer, viewContainerLocation: ViewContainerLocation, disposables: DisposableStore, instantiationService: IInstantiationService): ViewPaneContainer {\n\t\tconst viewPaneContainer: ViewPaneContainer = (instantiationService as any).createInstance(viewContainer.ctorDescriptor!.ctor, ...(viewContainer.ctorDescriptor!.staticArguments || []));\n\n\t\tthis.viewPaneContainers.set(viewPaneContainer.getId(), viewPaneContainer);\n\t\tdisposables.add(toDisposable(() => this.viewPaneContainers.delete(viewPaneContainer.getId())));\n\t\tdisposables.add(viewPaneContainer.onDidAddViews(views => this.onViewsAdded(views)));\n\t\tdisposables.add(viewPaneContainer.onDidChangeViewVisibility(view => this.onViewsVisibilityChanged(view, view.isBodyVisible())));\n\t\tdisposables.add(viewPaneContainer.onDidRemoveViews(views => this.onViewsRemoved(views)));\n\t\tdisposables.add(viewPaneContainer.onDidFocusView(view => {\n\t\t\tif (this.focusedViewContextKey.get() !== view.id) {\n\t\t\t\tthis.focusedViewContextKey.set(view.id);\n\t\t\t\tthis._onDidChangeFocusedView.fire();\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(viewPaneContainer.onDidBlurView(view => {\n\t\t\tif (this.focusedViewContextKey.get() === view.id) {\n\t\t\t\tthis.focusedViewContextKey.reset();\n\t\t\t\tthis._onDidChangeFocusedView.fire();\n\t\t\t}\n\t\t}));\n\n\t\treturn viewPaneContainer;\n\t}\n}\n\nfunction getPaneCompositeExtension(viewContainerLocation: ViewContainerLocation): string {\n\tswitch (viewContainerLocation) {\n\t\tcase ViewContainerLocation.AuxiliaryBar:\n\t\t\treturn PaneCompositeExtensions.Auxiliary;\n\t\tcase ViewContainerLocation.Panel:\n\t\t\treturn PaneCompositeExtensions.Panels;\n\t\tcase ViewContainerLocation.Sidebar:\n\t\tdefault:\n\t\t\treturn PaneCompositeExtensions.Viewlets;\n\t}\n}\n\nexport function getPartByLocation(viewContainerLocation: ViewContainerLocation): Parts.AUXILIARYBAR_PART | Parts.SIDEBAR_PART | Parts.PANEL_PART {\n\tswitch (viewContainerLocation) {\n\t\tcase ViewContainerLocation.AuxiliaryBar:\n\t\t\treturn Parts.AUXILIARYBAR_PART;\n\t\tcase ViewContainerLocation.Panel:\n\t\t\treturn Parts.PANEL_PART;\n\t\tcase ViewContainerLocation.Sidebar:\n\t\tdefault:\n\t\t\treturn Parts.SIDEBAR_PART;\n\t}\n}\n\nregisterSingleton(IViewsService, ViewsService, InstantiationType.Eager /* Eager because it registers viewlets and panels in the constructor which are required during workbench layout */);\n"]}