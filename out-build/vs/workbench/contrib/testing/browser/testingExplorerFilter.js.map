{"version":3,"sources":["vs/workbench/contrib/testing/browser/testingExplorerFilter.ts"],"names":[],"mappings":"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","file":"testingExplorerFilter.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { BaseActionViewItem } from 'vs/base/browser/ui/actionbar/actionViewItems';\nimport { AnchorAlignment } from 'vs/base/browser/ui/contextview/contextview';\nimport { DropdownMenuActionViewItem } from 'vs/base/browser/ui/dropdown/dropdownActionViewItem';\nimport { Action, IAction, IActionRunner, Separator } from 'vs/base/common/actions';\nimport { Delayer } from 'vs/base/common/async';\nimport { Emitter } from 'vs/base/common/event';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { localize } from 'vs/nls';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { ContextScopedSuggestEnabledInputWithHistory, SuggestEnabledInputWithHistory, SuggestResultsProvider } from 'vs/workbench/contrib/codeEditor/browser/suggestEnabledInput/suggestEnabledInput';\nimport { testingFilterIcon } from 'vs/workbench/contrib/testing/browser/icons';\nimport { StoredValue } from 'vs/workbench/contrib/testing/common/storedValue';\nimport { ITestExplorerFilterState, TestFilterTerm } from 'vs/workbench/contrib/testing/common/testExplorerFilterState';\nimport { ITestService } from 'vs/workbench/contrib/testing/common/testService';\nimport { denamespaceTestTag } from 'vs/workbench/contrib/testing/common/testTypes';\n\nconst testFilterDescriptions: { [K in TestFilterTerm]: string } = {\n\t[TestFilterTerm.Failed]: localize('testing.filters.showOnlyFailed', \"Show Only Failed Tests\"),\n\t[TestFilterTerm.Executed]: localize('testing.filters.showOnlyExecuted', \"Show Only Executed Tests\"),\n\t[TestFilterTerm.CurrentDoc]: localize('testing.filters.currentFile', \"Show in Active File Only\"),\n\t[TestFilterTerm.Hidden]: localize('testing.filters.showExcludedTests', \"Show Hidden Tests\"),\n};\n\nexport class TestingExplorerFilter extends BaseActionViewItem {\n\tprivate input!: SuggestEnabledInputWithHistory;\n\tprivate wrapper!: HTMLDivElement;\n\tprivate readonly focusEmitter = this._register(new Emitter<void>());\n\tpublic readonly onDidFocus = this.focusEmitter.event;\n\tprivate readonly history: StoredValue<{ values: string[]; lastValue: string } | string[]> = this._register(this.instantiationService.createInstance(StoredValue, {\n\t\tkey: 'testing.filterHistory2',\n\t\tscope: StorageScope.WORKSPACE,\n\t\ttarget: StorageTarget.MACHINE\n\t}));\n\n\tprivate readonly filtersAction = new Action('markersFiltersAction', localize('testing.filters.menu', \"More Filters...\"), 'testing-filter-button ' + ThemeIcon.asClassName(testingFilterIcon));\n\n\tconstructor(\n\t\taction: IAction,\n\t\t@ITestExplorerFilterState private readonly state: ITestExplorerFilterState,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITestService private readonly testService: ITestService,\n\t) {\n\t\tsuper(null, action);\n\t\tthis.updateFilterActiveState();\n\t\tthis._register(testService.excluded.onTestExclusionsChanged(this.updateFilterActiveState, this));\n\t}\n\n\t/**\n\t * @override\n\t */\n\tpublic override render(container: HTMLElement) {\n\t\tcontainer.classList.add('testing-filter-action-item');\n\n\t\tconst updateDelayer = this._register(new Delayer<void>(400));\n\t\tconst wrapper = this.wrapper = dom.$('.testing-filter-wrapper');\n\t\tcontainer.appendChild(wrapper);\n\n\t\tlet history = this.history.get({ lastValue: '', values: [] });\n\t\tif (history instanceof Array) {\n\t\t\thistory = { lastValue: '', values: history };\n\t\t}\n\t\tif (history.lastValue) {\n\t\t\tthis.state.setText(history.lastValue);\n\t\t}\n\n\t\tconst input = this.input = this._register(this.instantiationService.createInstance(ContextScopedSuggestEnabledInputWithHistory, {\n\t\t\tid: 'testing.explorer.filter',\n\t\t\tariaLabel: localize('testExplorerFilterLabel', \"Filter text for tests in the explorer\"),\n\t\t\tparent: wrapper,\n\t\t\tsuggestionProvider: {\n\t\t\t\ttriggerCharacters: ['@'],\n\t\t\t\tprovideResults: () => [\n\t\t\t\t\t...Object.entries(testFilterDescriptions).map(([label, detail]) => ({ label, detail })),\n\t\t\t\t\t...Iterable.map(this.testService.collection.tags.values(), tag => {\n\t\t\t\t\t\tconst { ctrlId, tagId } = denamespaceTestTag(tag.id);\n\t\t\t\t\t\tconst insertText = `@${ctrlId}:${tagId}`;\n\t\t\t\t\t\treturn ({\n\t\t\t\t\t\t\tlabel: `@${ctrlId}:${tagId}`,\n\t\t\t\t\t\t\tdetail: this.testService.collection.getNodeById(ctrlId)?.item.label,\n\t\t\t\t\t\t\tinsertText: tagId.includes(' ') ? `@${ctrlId}:\"${tagId.replace(/([\"\\\\])/g, '\\\\$1')}\"` : insertText,\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t\t].filter(r => !this.state.text.value.includes(r.label)),\n\t\t\t} as SuggestResultsProvider,\n\t\t\tresourceHandle: 'testing:filter',\n\t\t\tsuggestOptions: {\n\t\t\t\tvalue: this.state.text.value,\n\t\t\t\tplaceholderText: localize('testExplorerFilter', \"Filter (e.g. text, !exclude, @tag)\"),\n\t\t\t},\n\t\t\thistory: history.values\n\t\t}));\n\n\t\tthis._register(this.state.text.onDidChange(newValue => {\n\t\t\tif (input.getValue() !== newValue) {\n\t\t\t\tinput.setValue(newValue);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.state.onDidRequestInputFocus(() => {\n\t\t\tinput.focus();\n\t\t}));\n\n\t\tthis._register(input.onDidFocus(() => {\n\t\t\tthis.focusEmitter.fire();\n\t\t}));\n\n\t\tthis._register(input.onInputDidChange(() => updateDelayer.trigger(() => {\n\t\t\tinput.addToHistory();\n\t\t\tthis.state.setText(input.getValue());\n\t\t})));\n\n\t\tconst actionbar = this._register(new ActionBar(container, {\n\t\t\tactionViewItemProvider: action => {\n\t\t\t\tif (action.id === this.filtersAction.id) {\n\t\t\t\t\treturn this.instantiationService.createInstance(FiltersDropdownMenuActionViewItem, action, this.state, this.actionRunner);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t}));\n\t\tactionbar.push(this.filtersAction, { icon: true, label: false });\n\n\t\tthis.layout(this.wrapper.clientWidth);\n\t}\n\n\tpublic layout(width: number) {\n\t\tthis.input.layout(new dom.Dimension(\n\t\t\twidth - /* horizontal padding */ 24 - /* editor padding */ 8 - /* filter button padding */ 22,\n\t\t\t20, // line height from suggestEnabledInput.ts\n\t\t));\n\t}\n\n\n\t/**\n\t * Focuses the filter input.\n\t */\n\tpublic override focus(): void {\n\t\tthis.input.focus();\n\t}\n\n\t/**\n\t * Persists changes to the input history.\n\t */\n\tpublic saveState() {\n\t\tthis.history.store({ lastValue: this.input.getValue(), values: this.input.getHistory() });\n\t}\n\n\t/**\n\t * @override\n\t */\n\tpublic override dispose() {\n\t\tthis.saveState();\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * Updates the 'checked' state of the filter submenu.\n\t */\n\tprivate updateFilterActiveState() {\n\t\tthis.filtersAction.checked = this.testService.excluded.hasAny;\n\t}\n}\n\n\nclass FiltersDropdownMenuActionViewItem extends DropdownMenuActionViewItem {\n\n\tconstructor(\n\t\taction: IAction,\n\t\tprivate readonly filters: ITestExplorerFilterState,\n\t\tactionRunner: IActionRunner,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@ITestService private readonly testService: ITestService,\n\t) {\n\t\tsuper(action,\n\t\t\t{ getActions: () => this.getActions() },\n\t\t\tcontextMenuService,\n\t\t\t{\n\t\t\t\tactionRunner,\n\t\t\t\tclassNames: action.class,\n\t\t\t\tanchorAlignmentProvider: () => AnchorAlignment.RIGHT,\n\t\t\t\tmenuAsChild: true\n\t\t\t}\n\t\t);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tthis.updateChecked();\n\t}\n\n\tprivate getActions(): IAction[] {\n\t\treturn [\n\t\t\t...[TestFilterTerm.Failed, TestFilterTerm.Executed, TestFilterTerm.CurrentDoc].map(term => ({\n\t\t\t\tchecked: this.filters.isFilteringFor(term),\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: true,\n\t\t\t\tid: term,\n\t\t\t\tlabel: testFilterDescriptions[term],\n\t\t\t\trun: () => this.filters.toggleFilteringFor(term),\n\t\t\t\ttooltip: '',\n\t\t\t\tdispose: () => null\n\t\t\t})),\n\t\t\tnew Separator(),\n\t\t\t{\n\t\t\t\tchecked: this.filters.fuzzy.value,\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: true,\n\t\t\t\tid: 'fuzzy',\n\t\t\t\tlabel: localize('testing.filters.fuzzyMatch', \"Fuzzy Match\"),\n\t\t\t\trun: () => this.filters.fuzzy.value = !this.filters.fuzzy.value,\n\t\t\t\ttooltip: ''\n\t\t\t},\n\t\t\tnew Separator(),\n\t\t\t{\n\t\t\t\tchecked: this.filters.isFilteringFor(TestFilterTerm.Hidden),\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: this.testService.excluded.hasAny,\n\t\t\t\tid: 'showExcluded',\n\t\t\t\tlabel: localize('testing.filters.showExcludedTests', \"Show Hidden Tests\"),\n\t\t\t\trun: () => this.filters.toggleFilteringFor(TestFilterTerm.Hidden),\n\t\t\t\ttooltip: ''\n\t\t\t},\n\t\t\t{\n\t\t\t\tchecked: false,\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: this.testService.excluded.hasAny,\n\t\t\t\tid: 'removeExcluded',\n\t\t\t\tlabel: localize('testing.filters.removeTestExclusions', \"Unhide All Tests\"),\n\t\t\t\trun: async () => this.testService.excluded.clear(),\n\t\t\t\ttooltip: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tprotected override updateChecked(): void {\n\t\tthis.element!.classList.toggle('checked', this._action.checked);\n\t}\n}\n"]}