{"version":3,"sources":["vs/workbench/contrib/testing/browser/testingOutputPeek.ts"],"names":[],"mappings":"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","file":"testingOutputPeek.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { renderStringAsPlaintext } from 'vs/base/browser/markdownRenderer';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { alert } from 'vs/base/browser/ui/aria/aria';\nimport { renderLabelWithIcons } from 'vs/base/browser/ui/iconLabel/iconLabels';\nimport { IIdentityProvider } from 'vs/base/browser/ui/list/list';\nimport { DomScrollableElement } from 'vs/base/browser/ui/scrollbar/scrollableElement';\nimport { Orientation, Sizing, SplitView } from 'vs/base/browser/ui/splitview/splitview';\nimport { ICompressedTreeElement, ICompressedTreeNode } from 'vs/base/browser/ui/tree/compressedObjectTreeModel';\nimport { ICompressibleTreeRenderer } from 'vs/base/browser/ui/tree/objectTree';\nimport { ITreeContextMenuEvent, ITreeNode } from 'vs/base/browser/ui/tree/tree';\nimport { Action, IAction, Separator } from 'vs/base/common/actions';\nimport { Delayer, Limiter, RunOnceScheduler } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { FuzzyScore } from 'vs/base/common/filters';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { stripIcons } from 'vs/base/common/iconLabels';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Lazy } from 'vs/base/common/lazy';\nimport { Disposable, DisposableStore, IDisposable, IReference, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport { count } from 'vs/base/common/strings';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { isDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport 'vs/css!./testingOutputPeek';\nimport { ICodeEditor, IDiffEditorConstructionOptions, isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction2 } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { DiffEditorWidget } from 'vs/editor/browser/widget/diffEditor/diffEditorWidget';\nimport { EmbeddedCodeEditorWidget, EmbeddedDiffEditorWidget } from 'vs/editor/browser/widget/embeddedCodeEditorWidget';\nimport { IDiffEditorOptions, IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IEditor, IEditorContribution, ScrollType } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { IResolvedTextEditorModel, ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { MarkdownRenderer } from 'vs/editor/contrib/markdownRenderer/browser/markdownRenderer';\nimport { IPeekViewService, PeekViewWidget, peekViewResultsBackground, peekViewTitleForeground, peekViewTitleInfoForeground } from 'vs/editor/contrib/peekView/browser/peekView';\nimport { localize } from 'vs/nls';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { FloatingClickMenu } from 'vs/platform/actions/browser/floatingMenu';\nimport { MenuEntryActionViewItem, createAndFillInActionBarActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { Action2, IMenuService, MenuId, MenuItemAction } from 'vs/platform/actions/common/actions';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr, IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { WorkbenchCompressibleObjectTree } from 'vs/platform/list/browser/listService';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { TerminalCapability } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { TerminalCapabilityStore } from 'vs/platform/terminal/common/capabilities/terminalCapabilityStore';\nimport { formatMessageForTerminal } from 'vs/platform/terminal/common/terminalStrings';\nimport { IColorTheme, IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IViewPaneOptions, ViewPane } from 'vs/workbench/browser/parts/views/viewPane';\nimport { EditorModel } from 'vs/workbench/common/editor/editorModel';\nimport { PANEL_BACKGROUND, SIDE_BAR_BACKGROUND } from 'vs/workbench/common/theme';\nimport { IViewDescriptorService, IViewsService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { DetachedProcessInfo } from 'vs/workbench/contrib/terminal/browser/detachedTerminal';\nimport { IDetachedTerminalInstance, ITerminalService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { getXtermScaledDimensions } from 'vs/workbench/contrib/terminal/browser/xterm/xtermTerminal';\nimport { TERMINAL_BACKGROUND_COLOR } from 'vs/workbench/contrib/terminal/common/terminalColorRegistry';\nimport { getTestItemContextOverlay } from 'vs/workbench/contrib/testing/browser/explorerProjections/testItemContextOverlay';\nimport * as icons from 'vs/workbench/contrib/testing/browser/icons';\nimport { testingPeekBorder, testingPeekHeaderBackground } from 'vs/workbench/contrib/testing/browser/theme';\nimport { AutoOpenPeekViewWhen, TestingConfigKeys, getTestingConfiguration } from 'vs/workbench/contrib/testing/common/configuration';\nimport { Testing } from 'vs/workbench/contrib/testing/common/constants';\nimport { IObservableValue, MutableObservableValue, staticObservableValue } from 'vs/workbench/contrib/testing/common/observableValue';\nimport { StoredValue } from 'vs/workbench/contrib/testing/common/storedValue';\nimport { ITestExplorerFilterState } from 'vs/workbench/contrib/testing/common/testExplorerFilterState';\nimport { ITestProfileService } from 'vs/workbench/contrib/testing/common/testProfileService';\nimport { ITaskRawOutput, ITestResult, ITestRunTaskResults, LiveTestResult, TestResultItemChange, TestResultItemChangeReason, maxCountPriority, resultItemParents } from 'vs/workbench/contrib/testing/common/testResult';\nimport { ITestResultService, ResultChangeEvent } from 'vs/workbench/contrib/testing/common/testResultService';\nimport { ITestService } from 'vs/workbench/contrib/testing/common/testService';\nimport { IRichLocation, ITestErrorMessage, ITestItem, ITestMessage, ITestMessageMenuArgs, ITestRunTask, ITestTaskState, TestMessageType, TestResultItem, TestResultState, TestRunProfileBitset, getMarkId } from 'vs/workbench/contrib/testing/common/testTypes';\nimport { TestingContextKeys } from 'vs/workbench/contrib/testing/common/testingContextKeys';\nimport { IShowResultOptions, ITestingPeekOpener } from 'vs/workbench/contrib/testing/common/testingPeekOpener';\nimport { cmpPriority, isFailedState } from 'vs/workbench/contrib/testing/common/testingStates';\nimport { ParsedTestUri, TestUriType, buildTestUri, parseTestUri } from 'vs/workbench/contrib/testing/common/testingUri';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\n\nclass MessageSubject {\n\tpublic readonly test: ITestItem;\n\tpublic readonly message: ITestMessage;\n\tpublic readonly expectedUri: URI;\n\tpublic readonly actualUri: URI;\n\tpublic readonly messageUri: URI;\n\tpublic readonly revealLocation: IRichLocation | undefined;\n\n\tpublic get isDiffable() {\n\t\treturn this.message.type === TestMessageType.Error && isDiffable(this.message);\n\t}\n\n\tpublic get contextValue() {\n\t\treturn this.message.type === TestMessageType.Error ? this.message.contextValue : undefined;\n\t}\n\n\tpublic get context(): ITestMessageMenuArgs {\n\t\treturn {\n\t\t\t$mid: MarshalledId.TestMessageMenuArgs,\n\t\t\textId: this.test.extId,\n\t\t\tmessage: ITestMessage.serialize(this.message),\n\t\t};\n\t}\n\n\tconstructor(public readonly result: ITestResult, test: TestResultItem, public readonly taskIndex: number, public readonly messageIndex: number) {\n\t\tthis.test = test.item;\n\t\tconst messages = test.tasks[taskIndex].messages;\n\t\tthis.messageIndex = messageIndex;\n\n\t\tconst parts = { messageIndex, resultId: result.id, taskIndex, testExtId: test.item.extId };\n\t\tthis.expectedUri = buildTestUri({ ...parts, type: TestUriType.ResultExpectedOutput });\n\t\tthis.actualUri = buildTestUri({ ...parts, type: TestUriType.ResultActualOutput });\n\t\tthis.messageUri = buildTestUri({ ...parts, type: TestUriType.ResultMessage });\n\n\t\tconst message = this.message = messages[this.messageIndex];\n\t\tthis.revealLocation = message.location ?? (test.item.uri && test.item.range ? { uri: test.item.uri, range: Range.lift(test.item.range) } : undefined);\n\t}\n}\n\nclass TaskSubject {\n\tpublic readonly outputUri: URI;\n\tpublic readonly revealLocation: undefined;\n\n\tconstructor(public readonly result: ITestResult, public readonly taskIndex: number) {\n\t\tthis.outputUri = buildTestUri({ resultId: result.id, taskIndex, type: TestUriType.TaskOutput });\n\t}\n}\n\nclass TestOutputSubject {\n\tpublic readonly outputUri: URI;\n\tpublic readonly revealLocation: undefined;\n\n\tconstructor(public readonly result: ITestResult, public readonly taskIndex: number, public readonly task: ITestRunTask, public readonly test: TestResultItem) {\n\t\tthis.outputUri = buildTestUri({ resultId: this.result.id, taskIndex: this.taskIndex, testExtId: this.test.item.extId, type: TestUriType.TestOutput });\n\t}\n}\n\ntype InspectSubject = MessageSubject | TaskSubject | TestOutputSubject;\n\nconst equalsSubject = (a: InspectSubject, b: InspectSubject) => (\n\t(a instanceof MessageSubject && b instanceof MessageSubject && a.message === b.message) ||\n\t(a instanceof TaskSubject && b instanceof TaskSubject && a.result === b.result && a.taskIndex === b.taskIndex) ||\n\t(a instanceof TestOutputSubject && b instanceof TestOutputSubject && a.test === b.test && a.taskIndex === b.taskIndex)\n);\n\n/** Iterates through every message in every result */\nfunction* allMessages(results: readonly ITestResult[]) {\n\tfor (const result of results) {\n\t\tfor (const test of result.tests) {\n\t\t\tfor (let taskIndex = 0; taskIndex < test.tasks.length; taskIndex++) {\n\t\t\t\tfor (let messageIndex = 0; messageIndex < test.tasks[taskIndex].messages.length; messageIndex++) {\n\t\t\t\t\tyield { result, test, taskIndex, messageIndex };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\ntype TestUriWithDocument = ParsedTestUri & { documentUri: URI };\n\nexport class TestingPeekOpener extends Disposable implements ITestingPeekOpener {\n\tdeclare _serviceBrand: undefined;\n\n\tprivate lastUri?: TestUriWithDocument;\n\n\t/** @inheritdoc */\n\tpublic readonly historyVisible = MutableObservableValue.stored(this._register(new StoredValue<boolean>({\n\t\tkey: 'testHistoryVisibleInPeek',\n\t\tscope: StorageScope.PROFILE,\n\t\ttarget: StorageTarget.USER,\n\t}, this.storageService)), false);\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configuration: IConfigurationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@ITestResultService private readonly testResults: ITestResultService,\n\t\t@ITestService private readonly testService: ITestService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(testResults.onTestChanged(this.openPeekOnFailure, this));\n\t}\n\n\t/** @inheritdoc */\n\tpublic async open() {\n\t\tlet uri: TestUriWithDocument | undefined;\n\t\tconst active = this.editorService.activeTextEditorControl;\n\t\tif (isCodeEditor(active) && active.getModel()?.uri) {\n\t\t\tconst modelUri = active.getModel()?.uri;\n\t\t\tif (modelUri) {\n\t\t\t\turi = await this.getFileCandidateMessage(modelUri, active.getPosition());\n\t\t\t}\n\t\t}\n\n\t\tif (!uri) {\n\t\t\turi = this.lastUri;\n\t\t}\n\n\t\tif (!uri) {\n\t\t\turi = this.getAnyCandidateMessage();\n\t\t}\n\n\t\tif (!uri) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.showPeekFromUri(uri);\n\t}\n\n\t/** @inheritdoc */\n\tpublic tryPeekFirstError(result: ITestResult, test: TestResultItem, options?: Partial<ITextEditorOptions>) {\n\t\tconst candidate = this.getFailedCandidateMessage(test);\n\t\tif (!candidate) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst message = candidate.message;\n\t\tthis.showPeekFromUri({\n\t\t\ttype: TestUriType.ResultMessage,\n\t\t\tdocumentUri: message.location!.uri,\n\t\t\ttaskIndex: candidate.taskId,\n\t\t\tmessageIndex: candidate.index,\n\t\t\tresultId: result.id,\n\t\t\ttestExtId: test.item.extId,\n\t\t}, undefined, { selection: message.location!.range, ...options });\n\t\treturn true;\n\t}\n\n\t/** @inheritdoc */\n\tpublic peekUri(uri: URI, options: IShowResultOptions = {}) {\n\t\tconst parsed = parseTestUri(uri);\n\t\tconst result = parsed && this.testResults.getResult(parsed.resultId);\n\t\tif (!parsed || !result || !('testExtId' in parsed)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!('messageIndex' in parsed)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst message = result.getStateById(parsed.testExtId)?.tasks[parsed.taskIndex].messages[parsed.messageIndex];\n\t\tif (!message?.location) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.showPeekFromUri({\n\t\t\ttype: TestUriType.ResultMessage,\n\t\t\tdocumentUri: message.location.uri,\n\t\t\ttaskIndex: parsed.taskIndex,\n\t\t\tmessageIndex: parsed.messageIndex,\n\t\t\tresultId: result.id,\n\t\t\ttestExtId: parsed.testExtId,\n\t\t}, options.inEditor, { selection: message.location.range, ...options.options });\n\t\treturn true;\n\t}\n\n\t/** @inheritdoc */\n\tpublic closeAllPeeks() {\n\t\tfor (const editor of this.codeEditorService.listCodeEditors()) {\n\t\t\tTestingOutputPeekController.get(editor)?.removePeek();\n\t\t}\n\t}\n\n\tpublic openCurrentInEditor(): void {\n\t\tconst current = this.getActiveControl();\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst options = { pinned: false, revealIfOpened: true };\n\t\tif (current instanceof TaskSubject || current instanceof TestOutputSubject) {\n\t\t\tthis.editorService.openEditor({ resource: current.outputUri, options });\n\t\t\treturn;\n\t\t}\n\n\t\tif (current instanceof TestOutputSubject) {\n\t\t\tthis.editorService.openEditor({ resource: current.outputUri, options });\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = current.message;\n\t\tif (current.isDiffable) {\n\t\t\tthis.editorService.openEditor({\n\t\t\t\toriginal: { resource: current.expectedUri },\n\t\t\t\tmodified: { resource: current.actualUri },\n\t\t\t\toptions,\n\t\t\t});\n\t\t} else if (typeof message.message === 'string') {\n\t\t\tthis.editorService.openEditor({ resource: current.messageUri, options });\n\t\t} else {\n\t\t\tthis.commandService.executeCommand('markdown.showPreview', current.messageUri).catch(err => {\n\t\t\t\tthis.notificationService.error(localize('testing.markdownPeekError', 'Could not open markdown preview: {0}.\\n\\nPlease make sure the markdown extension is enabled.', err.message));\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getActiveControl(): InspectSubject | undefined {\n\t\tconst editor = getPeekedEditorFromFocus(this.codeEditorService);\n\t\tconst controller = editor && TestingOutputPeekController.get(editor);\n\t\treturn controller?.subject ?? this.viewsService.getActiveViewWithId<TestResultsView>(Testing.ResultsViewId)?.subject;\n\t}\n\n\t/** @inheritdoc */\n\tprivate async showPeekFromUri(uri: TestUriWithDocument, editor?: IEditor, options?: ITextEditorOptions) {\n\t\tif (isCodeEditor(editor)) {\n\t\t\tthis.lastUri = uri;\n\t\t\tTestingOutputPeekController.get(editor)?.show(buildTestUri(this.lastUri));\n\t\t\treturn true;\n\t\t}\n\n\t\tconst pane = await this.editorService.openEditor({\n\t\t\tresource: uri.documentUri,\n\t\t\toptions: { revealIfOpened: true, ...options }\n\t\t});\n\n\t\tconst control = pane?.getControl();\n\t\tif (!isCodeEditor(control)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.lastUri = uri;\n\t\tTestingOutputPeekController.get(control)?.show(buildTestUri(this.lastUri));\n\t\treturn true;\n\t}\n\n\t/**\n\t * Opens the peek view on a test failure, based on user preferences.\n\t */\n\tprivate openPeekOnFailure(evt: TestResultItemChange) {\n\t\tif (evt.reason !== TestResultItemChangeReason.OwnStateChange) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst candidate = this.getFailedCandidateMessage(evt.item);\n\t\tif (!candidate) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (evt.result.request.continuous && !getTestingConfiguration(this.configuration, TestingConfigKeys.AutoOpenPeekViewDuringContinuousRun)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editors = this.codeEditorService.listCodeEditors();\n\t\tconst cfg = getTestingConfiguration(this.configuration, TestingConfigKeys.AutoOpenPeekView);\n\n\t\t// don't show the peek if the user asked to only auto-open peeks for visible tests,\n\t\t// and this test is not in any of the editors' models.\n\t\tswitch (cfg) {\n\t\t\tcase AutoOpenPeekViewWhen.FailureVisible: {\n\t\t\t\tconst editorUris = new Set(editors.map(e => e.getModel()?.uri.toString()));\n\t\t\t\tif (!Iterable.some(resultItemParents(evt.result, evt.item), i => i.item.uri && editorUris.has(i.item.uri.toString()))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak; //continue\n\t\t\t}\n\t\t\tcase AutoOpenPeekViewWhen.FailureAnywhere:\n\t\t\t\tbreak; //continue\n\n\t\t\tdefault:\n\t\t\t\treturn; // never show\n\t\t}\n\n\t\tconst controllers = editors.map(TestingOutputPeekController.get);\n\t\tif (controllers.some(c => c?.subject)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tryPeekFirstError(evt.result, evt.item);\n\t}\n\n\t/**\n\t * Gets the message closest to the given position from a test in the file.\n\t */\n\tprivate async getFileCandidateMessage(uri: URI, position: Position | null) {\n\t\tlet best: TestUriWithDocument | undefined;\n\t\tlet bestDistance = Infinity;\n\n\t\t// Get all tests for the document. In those, find one that has a test\n\t\t// message closest to the cursor position.\n\t\tconst demandedUriStr = uri.toString();\n\t\tfor (const test of this.testService.collection.all) {\n\t\t\tconst result = this.testResults.getStateById(test.item.extId);\n\t\t\tif (!result) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmapFindTestMessage(result[1], (_task, message, messageIndex, taskIndex) => {\n\t\t\t\tif (message.type !== TestMessageType.Error || !message.location || message.location.uri.toString() !== demandedUriStr) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst distance = position ? Math.abs(position.lineNumber - message.location.range.startLineNumber) : 0;\n\t\t\t\tif (!best || distance <= bestDistance) {\n\t\t\t\t\tbestDistance = distance;\n\t\t\t\t\tbest = {\n\t\t\t\t\t\ttype: TestUriType.ResultMessage,\n\t\t\t\t\t\ttestExtId: result[1].item.extId,\n\t\t\t\t\t\tresultId: result[0].id,\n\t\t\t\t\t\ttaskIndex,\n\t\t\t\t\t\tmessageIndex,\n\t\t\t\t\t\tdocumentUri: uri,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn best;\n\t}\n\n\t/**\n\t * Gets any possible still-relevant message from the results.\n\t */\n\tprivate getAnyCandidateMessage() {\n\t\tconst seen = new Set<string>();\n\t\tfor (const result of this.testResults.results) {\n\t\t\tfor (const test of result.tests) {\n\t\t\t\tif (seen.has(test.item.extId)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tseen.add(test.item.extId);\n\t\t\t\tconst found = mapFindTestMessage(test, (task, message, messageIndex, taskIndex) => (\n\t\t\t\t\tmessage.location && {\n\t\t\t\t\t\ttype: TestUriType.ResultMessage,\n\t\t\t\t\t\ttestExtId: test.item.extId,\n\t\t\t\t\t\tresultId: result.id,\n\t\t\t\t\t\ttaskIndex,\n\t\t\t\t\t\tmessageIndex,\n\t\t\t\t\t\tdocumentUri: message.location.uri,\n\t\t\t\t\t}\n\t\t\t\t));\n\n\t\t\t\tif (found) {\n\t\t\t\t\treturn found;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Gets the first failed message that can be displayed from the result.\n\t */\n\tprivate getFailedCandidateMessage(test: TestResultItem) {\n\t\tlet best: { taskId: number; index: number; message: ITestMessage } | undefined;\n\t\tmapFindTestMessage(test, (task, message, messageIndex, taskId) => {\n\t\t\tif (!isFailedState(task.state) || !message.location) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (best && message.type !== TestMessageType.Error) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tbest = { taskId, index: messageIndex, message };\n\t\t});\n\n\t\treturn best;\n\t}\n}\n\nconst mapFindTestMessage = <T>(test: TestResultItem, fn: (task: ITestTaskState, message: ITestMessage, messageIndex: number, taskIndex: number) => T | undefined) => {\n\tfor (let taskIndex = 0; taskIndex < test.tasks.length; taskIndex++) {\n\t\tconst task = test.tasks[taskIndex];\n\t\tfor (let messageIndex = 0; messageIndex < task.messages.length; messageIndex++) {\n\t\t\tconst r = fn(task, task.messages[messageIndex], messageIndex, taskIndex);\n\t\t\tif (r !== undefined) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n};\n\n/**\n * Adds output/message peek functionality to code editors.\n */\nexport class TestingOutputPeekController extends Disposable implements IEditorContribution {\n\t/**\n\t * Gets the controller associated with the given code editor.\n\t */\n\tpublic static get(editor: ICodeEditor): TestingOutputPeekController | null {\n\t\treturn editor.getContribution<TestingOutputPeekController>(Testing.OutputPeekContributionId);\n\t}\n\n\t/**\n\t * Currently-shown peek view.\n\t */\n\tprivate readonly peek = this._register(new MutableDisposable<TestResultsPeek>());\n\n\t/**\n\t * URI of the currently-visible peek, if any.\n\t */\n\tprivate currentPeekUri: URI | undefined;\n\n\t/**\n\t * Context key updated when the peek is visible/hidden.\n\t */\n\tprivate readonly visible: IContextKey<boolean>;\n\n\t/**\n\t * Gets the currently display subject. Undefined if the peek is not open.\n\t */\n\tpublic get subject() {\n\t\treturn this.peek.value?.current;\n\t}\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITestResultService private readonly testResults: ITestResultService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\t\tthis.visible = TestingContextKeys.isPeekVisible.bindTo(contextKeyService);\n\t\tthis._register(editor.onDidChangeModel(() => this.peek.clear()));\n\t\tthis._register(testResults.onResultsChanged(this.closePeekOnCertainResultEvents, this));\n\t\tthis._register(testResults.onTestChanged(this.closePeekOnTestChange, this));\n\t}\n\n\t/**\n\t * Toggles peek visibility for the URI.\n\t */\n\tpublic toggle(uri: URI) {\n\t\tif (this.currentPeekUri?.toString() === uri.toString()) {\n\t\t\tthis.peek.clear();\n\t\t} else {\n\t\t\tthis.show(uri);\n\t\t}\n\t}\n\n\t/**\n\t * Shows a peek for the message in the editor.\n\t */\n\tpublic async show(uri: URI) {\n\t\tconst subject = this.retrieveTest(uri);\n\t\tif (!subject) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.peek.value) {\n\t\t\tthis.peek.value = this.instantiationService.createInstance(TestResultsPeek, this.editor);\n\t\t\tthis.peek.value.onDidClose(() => {\n\t\t\t\tthis.visible.set(false);\n\t\t\t\tthis.currentPeekUri = undefined;\n\t\t\t\tthis.peek.value = undefined;\n\t\t\t});\n\n\t\t\tthis.visible.set(true);\n\t\t\tthis.peek.value!.create();\n\t\t}\n\n\t\tif (subject instanceof MessageSubject) {\n\t\t\talert(renderStringAsPlaintext(subject.message.message));\n\t\t}\n\n\t\tthis.peek.value.setModel(subject);\n\t\tthis.currentPeekUri = uri;\n\t}\n\n\tpublic async openAndShow(uri: URI) {\n\t\tconst subject = this.retrieveTest(uri);\n\t\tif (!subject) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!subject.revealLocation || subject.revealLocation.uri.toString() === this.editor.getModel()?.uri.toString()) {\n\t\t\treturn this.show(uri);\n\t\t}\n\n\t\tconst otherEditor = await this.codeEditorService.openCodeEditor({\n\t\t\tresource: subject.revealLocation.uri,\n\t\t\toptions: { pinned: false, revealIfOpened: true }\n\t\t}, this.editor);\n\n\t\tif (otherEditor) {\n\t\t\tTestingOutputPeekController.get(otherEditor)?.removePeek();\n\t\t\treturn TestingOutputPeekController.get(otherEditor)?.show(uri);\n\t\t}\n\t}\n\n\t/**\n\t * Disposes the peek view, if any.\n\t */\n\tpublic removePeek() {\n\t\tthis.peek.clear();\n\t}\n\n\t/**\n\t * Shows the next message in the peek, if possible.\n\t */\n\tpublic next() {\n\t\tconst subject = this.peek.value?.current;\n\t\tif (!subject) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet found = false;\n\t\tfor (const { messageIndex, taskIndex, result, test } of allMessages(this.testResults.results)) {\n\t\t\tif (subject instanceof TaskSubject && result.id === subject.result.id) {\n\t\t\t\tfound = true; // open the first message found in the current result\n\t\t\t}\n\n\t\t\tif (found) {\n\t\t\t\tthis.openAndShow(buildTestUri({\n\t\t\t\t\ttype: TestUriType.ResultMessage,\n\t\t\t\t\tmessageIndex,\n\t\t\t\t\ttaskIndex,\n\t\t\t\t\tresultId: result.id,\n\t\t\t\t\ttestExtId: test.item.extId\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (subject instanceof TestOutputSubject && subject.test.item.extId === test.item.extId && subject.taskIndex === taskIndex && subject.result.id === result.id) {\n\t\t\t\tfound = true;\n\t\t\t}\n\n\t\t\tif (subject instanceof MessageSubject && subject.test.extId === test.item.extId && subject.messageIndex === messageIndex && subject.taskIndex === taskIndex && subject.result.id === result.id) {\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the previous message in the peek, if possible.\n\t */\n\tpublic previous() {\n\t\tconst subject = this.peek.value?.current;\n\t\tif (!subject) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet previous: { messageIndex: number; taskIndex: number; result: ITestResult; test: TestResultItem } | undefined;\n\t\tfor (const m of allMessages(this.testResults.results)) {\n\t\t\tif (subject instanceof TaskSubject) {\n\t\t\t\tif (m.result.id === subject.result.id) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (subject instanceof TestOutputSubject) {\n\t\t\t\tif (m.test.item.extId === subject.test.item.extId && m.result.id === subject.result.id && m.taskIndex === subject.taskIndex) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (subject.test.extId === m.test.item.extId && subject.messageIndex === m.messageIndex && subject.taskIndex === m.taskIndex && subject.result.id === m.result.id) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tprevious = m;\n\t\t}\n\n\t\tif (previous) {\n\t\t\tthis.openAndShow(buildTestUri({\n\t\t\t\ttype: TestUriType.ResultMessage,\n\t\t\t\tmessageIndex: previous.messageIndex,\n\t\t\t\ttaskIndex: previous.taskIndex,\n\t\t\t\tresultId: previous.result.id,\n\t\t\t\ttestExtId: previous.test.item.extId\n\t\t\t}));\n\t\t}\n\t}\n\n\t/**\n\t * Removes the peek view if it's being displayed on the given test ID.\n\t */\n\tpublic removeIfPeekingForTest(testId: string) {\n\t\tconst c = this.peek.value?.current;\n\t\tif (c && c instanceof MessageSubject && c.test.extId === testId) {\n\t\t\tthis.peek.clear();\n\t\t}\n\t}\n\n\t/**\n\t * If the test we're currently showing has its state change to something\n\t * else, then clear the peek.\n\t */\n\tprivate closePeekOnTestChange(evt: TestResultItemChange) {\n\t\tif (evt.reason !== TestResultItemChangeReason.OwnStateChange || evt.previousState === evt.item.ownComputedState) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeIfPeekingForTest(evt.item.item.extId);\n\t}\n\n\tprivate closePeekOnCertainResultEvents(evt: ResultChangeEvent) {\n\t\tif ('started' in evt) {\n\t\t\tthis.peek.clear(); // close peek when runs start\n\t\t}\n\n\t\tif ('removed' in evt && this.testResults.results.length === 0) {\n\t\t\tthis.peek.clear(); // close the peek if results are cleared\n\t\t}\n\t}\n\n\tprivate retrieveTest(uri: URI): InspectSubject | undefined {\n\t\tconst parts = parseTestUri(uri);\n\t\tif (!parts) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result = this.testResults.results.find(r => r.id === parts.resultId);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (parts.type === TestUriType.TaskOutput) {\n\t\t\treturn new TaskSubject(result, parts.taskIndex);\n\t\t}\n\n\t\tif (parts.type === TestUriType.TestOutput) {\n\t\t\tconst test = result.getStateById(parts.testExtId);\n\t\t\tconst task = result.tasks[parts.taskIndex];\n\t\t\tif (!test || !task) { return; }\n\t\t\treturn new TestOutputSubject(result, parts.taskIndex, task, test);\n\t\t}\n\n\t\tconst { testExtId, taskIndex, messageIndex } = parts;\n\t\tconst test = result?.getStateById(testExtId);\n\t\tif (!test || !test.tasks[parts.taskIndex]) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn new MessageSubject(result, test, taskIndex, messageIndex);\n\t}\n}\n\nclass TestResultsViewContent extends Disposable {\n\tprivate static lastSplitWidth?: number;\n\n\tprivate readonly didReveal = this._register(new Emitter<{ subject: InspectSubject; preserveFocus: boolean }>());\n\tprivate readonly currentSubjectStore = this._register(new DisposableStore());\n\tprivate messageContextKeyService!: IContextKeyService;\n\tprivate contextKeyTestMessage!: IContextKey<string>;\n\tprivate contextKeyResultOutdated!: IContextKey<boolean>;\n\n\tprivate dimension?: dom.Dimension;\n\tprivate splitView!: SplitView;\n\tprivate messageContainer!: HTMLElement;\n\tprivate contentProviders!: IPeekOutputRenderer[];\n\tprivate contentProvidersUpdateLimiter = this._register(new Limiter(1));\n\n\tpublic current?: InspectSubject;\n\n\t/** Fired when a tree item is selected. Populated only on .fillBody() */\n\tpublic onDidRequestReveal!: Event<InspectSubject>;\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor | undefined,\n\t\tprivate readonly options: {\n\t\t\thistoryVisible: IObservableValue<boolean>;\n\t\t\tshowRevealLocationOnMessages: boolean;\n\t\t},\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITextModelService protected readonly modelService: ITextModelService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic fillBody(containerElement: HTMLElement): void {\n\t\tconst initialSpitWidth = TestResultsViewContent.lastSplitWidth;\n\t\tthis.splitView = new SplitView(containerElement, { orientation: Orientation.HORIZONTAL });\n\n\t\tconst { historyVisible, showRevealLocationOnMessages } = this.options;\n\t\tconst isInPeekView = this.editor !== undefined;\n\t\tconst messageContainer = this.messageContainer = dom.append(containerElement, dom.$('.test-output-peek-message-container'));\n\t\tthis.contentProviders = [\n\t\t\tthis._register(this.instantiationService.createInstance(DiffContentProvider, this.editor, messageContainer)),\n\t\t\tthis._register(this.instantiationService.createInstance(MarkdownTestMessagePeek, messageContainer)),\n\t\t\tthis._register(this.instantiationService.createInstance(TerminalMessagePeek, messageContainer, isInPeekView)),\n\t\t\tthis._register(this.instantiationService.createInstance(PlainTextMessagePeek, this.editor, messageContainer)),\n\t\t];\n\n\t\tthis.messageContextKeyService = this._register(this.contextKeyService.createScoped(this.messageContainer));\n\t\tthis.contextKeyTestMessage = TestingContextKeys.testMessageContext.bindTo(this.messageContextKeyService);\n\t\tthis.contextKeyResultOutdated = TestingContextKeys.testResultOutdated.bindTo(this.messageContextKeyService);\n\n\t\tconst treeContainer = dom.append(containerElement, dom.$('.test-output-peek-tree'));\n\t\tconst tree = this._register(this.instantiationService.createInstance(\n\t\t\tOutputPeekTree,\n\t\t\ttreeContainer,\n\t\t\tthis.didReveal.event,\n\t\t\t{ showRevealLocationOnMessages }\n\t\t));\n\n\t\tthis.onDidRequestReveal = tree.onDidRequestReview;\n\n\t\tthis.splitView.addView({\n\t\t\tonDidChange: Event.None,\n\t\t\telement: messageContainer,\n\t\t\tminimumSize: 200,\n\t\t\tmaximumSize: Number.MAX_VALUE,\n\t\t\tlayout: width => {\n\t\t\t\tTestResultsViewContent.lastSplitWidth = width;\n\t\t\t\tif (this.dimension) {\n\t\t\t\t\tfor (const provider of this.contentProviders) {\n\t\t\t\t\t\tprovider.layout({ height: this.dimension.height, width });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t}, Sizing.Distribute);\n\n\t\tthis.splitView.addView({\n\t\t\tonDidChange: Event.None,\n\t\t\telement: treeContainer,\n\t\t\tminimumSize: 100,\n\t\t\tmaximumSize: Number.MAX_VALUE,\n\t\t\tlayout: width => {\n\t\t\t\tif (this.dimension) {\n\t\t\t\t\ttree.layout(this.dimension.height, width);\n\t\t\t\t}\n\t\t\t},\n\t\t}, Sizing.Distribute);\n\n\t\tconst historyViewIndex = 1;\n\t\tthis.splitView.setViewVisible(historyViewIndex, historyVisible.value);\n\t\tthis._register(historyVisible.onDidChange(visible => {\n\t\t\tthis.splitView.setViewVisible(historyViewIndex, visible);\n\t\t}));\n\n\t\tif (initialSpitWidth) {\n\t\t\tqueueMicrotask(() => this.splitView.resizeView(0, initialSpitWidth));\n\t\t}\n\t}\n\n\t/**\n\t * Shows a message in-place without showing or changing the peek location.\n\t * This is mostly used if peeking a message without a location.\n\t */\n\tpublic reveal(opts: { subject: InspectSubject; preserveFocus: boolean }) {\n\t\tthis.didReveal.fire(opts);\n\n\t\tif (this.current && equalsSubject(this.current, opts.subject)) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.current = opts.subject;\n\t\treturn this.contentProvidersUpdateLimiter.queue(async () => {\n\t\t\tawait Promise.all(this.contentProviders.map(p => p.update(opts.subject)));\n\n\t\t\tthis.currentSubjectStore.clear();\n\t\t\tthis.populateFloatingClick(opts.subject);\n\t\t});\n\t}\n\n\tprivate populateFloatingClick(subject: InspectSubject) {\n\t\tif (!(subject instanceof MessageSubject)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentSubjectStore.add(toDisposable(() => {\n\t\t\tthis.contextKeyResultOutdated.reset();\n\t\t\tthis.contextKeyTestMessage.reset();\n\t\t}));\n\n\t\tthis.contextKeyTestMessage.set(subject.contextValue || '');\n\t\tif (subject.result instanceof LiveTestResult) {\n\t\t\tthis.contextKeyResultOutdated.set(subject.result.getStateById(subject.test.extId)?.retired ?? false);\n\t\t\tthis.currentSubjectStore.add(subject.result.onChange(ev => {\n\t\t\t\tif (ev.item.item.extId === subject.test.extId) {\n\t\t\t\t\tthis.contextKeyResultOutdated.set(ev.item.retired ?? false);\n\t\t\t\t}\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.contextKeyResultOutdated.set(true);\n\t\t}\n\n\n\t\tthis.currentSubjectStore.add(\n\t\t\tthis.instantiationService\n\t\t\t\t.createChild(new ServiceCollection([IContextKeyService, this.messageContextKeyService]))\n\t\t\t\t.createInstance(FloatingClickMenu, {\n\t\t\t\t\tcontainer: this.messageContainer,\n\t\t\t\t\tmenuId: MenuId.TestMessageContent,\n\t\t\t\t\tgetActionArg: () => (subject as MessageSubject).context,\n\t\t\t\t})\n\t\t);\n\t}\n\n\tpublic onLayoutBody(height: number, width: number) {\n\t\tthis.dimension = new dom.Dimension(width, height);\n\t\tthis.splitView.layout(width);\n\t}\n\n\tpublic onWidth(width: number) {\n\t\tthis.splitView.layout(width);\n\t}\n}\n\nclass TestResultsPeek extends PeekViewWidget {\n\tprivate static lastHeightInLines?: number;\n\n\tprivate readonly visibilityChange = this._disposables.add(new Emitter<boolean>());\n\tprivate content!: TestResultsViewContent;\n\tprivate scopedContextKeyService!: IContextKeyService;\n\tprivate dimension?: dom.Dimension;\n\tpublic current?: InspectSubject;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IPeekViewService peekViewService: IPeekViewService,\n\t\t@ITestingPeekOpener private readonly testingPeek: ITestingPeekOpener,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITextModelService protected readonly modelService: ITextModelService,\n\t) {\n\t\tsuper(editor, { showFrame: true, frameWidth: 1, showArrow: true, isResizeable: true, isAccessible: true, className: 'test-output-peek' }, instantiationService);\n\n\t\tthis._disposables.add(themeService.onDidColorThemeChange(this.applyTheme, this));\n\t\tthis._disposables.add(this.onDidClose(() => this.visibilityChange.fire(false)));\n\t\tthis.applyTheme(themeService.getColorTheme());\n\t\tpeekViewService.addExclusiveWidget(editor, this);\n\t}\n\n\tprivate applyTheme(theme: IColorTheme) {\n\t\tconst borderColor = theme.getColor(testingPeekBorder) || Color.transparent;\n\t\tconst headerBg = theme.getColor(testingPeekHeaderBackground) || Color.transparent;\n\t\tthis.style({\n\t\t\tarrowColor: borderColor,\n\t\t\tframeColor: borderColor,\n\t\t\theaderBackgroundColor: headerBg,\n\t\t\tprimaryHeadingColor: theme.getColor(peekViewTitleForeground),\n\t\t\tsecondaryHeadingColor: theme.getColor(peekViewTitleInfoForeground)\n\t\t});\n\t}\n\n\tprotected override _fillContainer(container: HTMLElement): void {\n\t\tif (!this.scopedContextKeyService) {\n\t\t\tthis.scopedContextKeyService = this._disposables.add(this.contextKeyService.createScoped(container));\n\t\t\tTestingContextKeys.isInPeek.bindTo(this.scopedContextKeyService).set(true);\n\t\t\tconst instaService = this.instantiationService.createChild(new ServiceCollection([IContextKeyService, this.scopedContextKeyService]));\n\t\t\tthis.content = this._disposables.add(instaService.createInstance(TestResultsViewContent, this.editor, { historyVisible: this.testingPeek.historyVisible, showRevealLocationOnMessages: false }));\n\t\t}\n\n\t\tsuper._fillContainer(container);\n\t}\n\n\n\tprotected override _fillHead(container: HTMLElement): void {\n\t\tsuper._fillHead(container);\n\n\t\tconst actions: IAction[] = [];\n\t\tconst menu = this.menuService.createMenu(MenuId.TestPeekTitle, this.contextKeyService);\n\t\tcreateAndFillInActionBarActions(menu, undefined, actions);\n\t\tthis._actionbarWidget!.push(actions, { label: false, icon: true, index: 0 });\n\t\tmenu.dispose();\n\t}\n\n\tprotected override _fillBody(containerElement: HTMLElement): void {\n\t\tthis.content.fillBody(containerElement);\n\t\tthis.content.onDidRequestReveal(sub => {\n\t\t\tTestingOutputPeekController.get(this.editor)?.show(sub instanceof MessageSubject\n\t\t\t\t? sub.messageUri\n\t\t\t\t: sub.outputUri);\n\t\t});\n\t}\n\n\t/**\n\t * Updates the test to be shown.\n\t */\n\tpublic setModel(subject: InspectSubject): Promise<void> {\n\t\tif (subject instanceof TaskSubject || subject instanceof TestOutputSubject) {\n\t\t\tthis.current = subject;\n\t\t\treturn this.showInPlace(subject);\n\t\t}\n\n\t\tconst message = subject.message;\n\t\tconst previous = this.current;\n\t\tif (!subject.revealLocation && !previous) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.current = subject;\n\t\tif (!subject.revealLocation) {\n\t\t\treturn this.showInPlace(subject);\n\t\t}\n\n\t\tthis.show(subject.revealLocation.range, TestResultsPeek.lastHeightInLines || hintMessagePeekHeight(message));\n\t\tthis.editor.revealPositionNearTop(subject.revealLocation.range.getStartPosition(), ScrollType.Smooth);\n\n\t\treturn this.showInPlace(subject);\n\t}\n\n\t/**\n\t * Shows a message in-place without showing or changing the peek location.\n\t * This is mostly used if peeking a message without a location.\n\t */\n\tpublic async showInPlace(subject: InspectSubject) {\n\t\tif (subject instanceof MessageSubject) {\n\t\t\tconst message = subject.message;\n\t\t\tthis.setTitle(firstLine(renderStringAsPlaintext(message.message)), stripIcons(subject.test.label));\n\t\t} else {\n\t\t\tthis.setTitle(localize('testOutputTitle', 'Test Output'));\n\t\t}\n\t\tawait this.content.reveal({ subject: subject, preserveFocus: false });\n\t}\n\n\tprotected override _relayout(newHeightInLines: number): void {\n\t\tsuper._relayout(newHeightInLines);\n\t\tTestResultsPeek.lastHeightInLines = newHeightInLines;\n\t}\n\n\t/** @override */\n\tprotected override _doLayoutBody(height: number, width: number) {\n\t\tsuper._doLayoutBody(height, width);\n\t\tthis.content.onLayoutBody(height, width);\n\t}\n\n\t/** @override */\n\tprotected override _onWidth(width: number) {\n\t\tsuper._onWidth(width);\n\t\tif (this.dimension) {\n\t\t\tthis.dimension = new dom.Dimension(width, this.dimension.height);\n\t\t}\n\n\t\tthis.content.onWidth(width);\n\t}\n}\n\nexport class TestResultsView extends ViewPane {\n\tprivate readonly content = this._register(this.instantiationService.createInstance(TestResultsViewContent, undefined, {\n\t\thistoryVisible: staticObservableValue(true),\n\t\tshowRevealLocationOnMessages: true,\n\t}));\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ITestResultService private readonly resultService: ITestResultService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\t}\n\n\tpublic get subject() {\n\t\treturn this.content.current;\n\t}\n\n\tpublic showLatestRun(preserveFocus = false) {\n\t\tconst result = this.resultService.results.find(r => r.tasks.length);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.content.reveal({ preserveFocus, subject: new TaskSubject(result, 0) });\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\t\tthis.content.fillBody(container);\n\t\tthis.content.onDidRequestReveal(subject => this.content.reveal({ preserveFocus: true, subject }));\n\n\t\tconst [lastResult] = this.resultService.results;\n\t\tif (lastResult && lastResult.tasks.length) {\n\t\t\tthis.content.reveal({ preserveFocus: true, subject: new TaskSubject(lastResult, 0) });\n\t\t}\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.content.onLayoutBody(height, width);\n\t}\n}\n\ninterface IPeekOutputRenderer extends IDisposable {\n\t/** Updates the displayed test. Should clear if it cannot display the test. */\n\tupdate(subject: InspectSubject): void;\n\t/** Recalculate content layout. */\n\tlayout(dimension: dom.IDimension): void;\n\t/** Dispose the content provider. */\n\tdispose(): void;\n}\n\nconst commonEditorOptions: IEditorOptions = {\n\tscrollBeyondLastLine: false,\n\tlinks: true,\n\tlineNumbers: 'off',\n\tscrollbar: {\n\t\tverticalScrollbarSize: 14,\n\t\thorizontal: 'auto',\n\t\tuseShadows: true,\n\t\tverticalHasArrows: false,\n\t\thorizontalHasArrows: false,\n\t\talwaysConsumeMouseWheel: false\n\t},\n\tfixedOverflowWidgets: true,\n\treadOnly: true,\n\tminimap: {\n\t\tenabled: false\n\t},\n\twordWrap: 'on',\n};\n\nconst diffEditorOptions: IDiffEditorConstructionOptions = {\n\t...commonEditorOptions,\n\tenableSplitViewResizing: true,\n\tisInEmbeddedEditor: true,\n\trenderOverviewRuler: false,\n\tignoreTrimWhitespace: false,\n\trenderSideBySide: true,\n\tuseInlineViewWhenSpaceIsLimited: false,\n\toriginalAriaLabel: localize('testingOutputExpected', 'Expected result'),\n\tmodifiedAriaLabel: localize('testingOutputActual', 'Actual result'),\n\tdiffAlgorithm: 'advanced',\n};\n\nconst isDiffable = (message: ITestMessage): message is ITestErrorMessage & { actual: string; expected: string } =>\n\tmessage.type === TestMessageType.Error && message.actual !== undefined && message.expected !== undefined;\n\nclass DiffContentProvider extends Disposable implements IPeekOutputRenderer {\n\tprivate readonly widget = this._register(new MutableDisposable<DiffEditorWidget>());\n\tprivate readonly model = this._register(new MutableDisposable());\n\tprivate dimension?: dom.IDimension;\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor | undefined,\n\t\tprivate readonly container: HTMLElement,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITextModelService private readonly modelService: ITextModelService,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic async update(subject: InspectSubject) {\n\t\tif (!(subject instanceof MessageSubject)) {\n\t\t\treturn this.clear();\n\t\t}\n\t\tconst message = subject.message;\n\t\tif (!isDiffable(message)) {\n\t\t\treturn this.clear();\n\t\t}\n\n\t\tconst [original, modified] = await Promise.all([\n\t\t\tthis.modelService.createModelReference(subject.expectedUri),\n\t\t\tthis.modelService.createModelReference(subject.actualUri),\n\t\t]);\n\n\t\tconst model = this.model.value = new SimpleDiffEditorModel(original, modified);\n\t\tif (!this.widget.value) {\n\t\t\tthis.widget.value = this.editor ? this.instantiationService.createInstance(\n\t\t\t\tEmbeddedDiffEditorWidget,\n\t\t\t\tthis.container,\n\t\t\t\tdiffEditorOptions,\n\t\t\t\t{},\n\t\t\t\tthis.editor,\n\t\t\t) : this.instantiationService.createInstance(\n\t\t\t\tDiffEditorWidget,\n\t\t\t\tthis.container,\n\t\t\t\tdiffEditorOptions,\n\t\t\t\t{},\n\t\t\t);\n\n\t\t\tif (this.dimension) {\n\t\t\t\tthis.widget.value.layout(this.dimension);\n\t\t\t}\n\t\t}\n\n\t\tthis.widget.value.setModel(model);\n\t\tthis.widget.value.updateOptions(this.getOptions(\n\t\t\tisMultiline(message.expected) || isMultiline(message.actual)\n\t\t));\n\t}\n\n\tprivate clear() {\n\t\tthis.model.clear();\n\t\tthis.widget.clear();\n\t}\n\n\tpublic layout(dimensions: dom.IDimension) {\n\t\tthis.dimension = dimensions;\n\t\tthis.widget.value?.layout(dimensions);\n\t}\n\n\tprotected getOptions(isMultiline: boolean): IDiffEditorOptions {\n\t\treturn isMultiline\n\t\t\t? { ...diffEditorOptions, lineNumbers: 'on' }\n\t\t\t: { ...diffEditorOptions, lineNumbers: 'off' };\n\t}\n}\n\nclass ScrollableMarkdownMessage extends Disposable {\n\tprivate readonly scrollable: DomScrollableElement;\n\tprivate readonly element: HTMLElement;\n\n\tconstructor(container: HTMLElement, markdown: MarkdownRenderer, message: IMarkdownString) {\n\t\tsuper();\n\n\t\tconst rendered = this._register(markdown.render(message, {}));\n\t\trendered.element.style.height = '100%';\n\t\trendered.element.style.userSelect = 'text';\n\t\tcontainer.appendChild(rendered.element);\n\t\tthis.element = rendered.element;\n\n\t\tthis.scrollable = this._register(new DomScrollableElement(rendered.element, {\n\t\t\tclassName: 'preview-text',\n\t\t}));\n\t\tcontainer.appendChild(this.scrollable.getDomNode());\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tcontainer.removeChild(this.scrollable.getDomNode());\n\t\t}));\n\n\t\tthis.scrollable.scanDomNode();\n\t}\n\n\tpublic layout(height: number, width: number) {\n\t\t// Remove padding of `.monaco-editor .zone-widget.test-output-peek .preview-text`\n\t\tthis.scrollable.setScrollDimensions({\n\t\t\twidth: width - 32,\n\t\t\theight: height - 16,\n\t\t\tscrollWidth: this.element.scrollWidth,\n\t\t\tscrollHeight: this.element.scrollHeight\n\t\t});\n\t}\n}\n\nclass MarkdownTestMessagePeek extends Disposable implements IPeekOutputRenderer {\n\tprivate readonly markdown = new Lazy(\n\t\t() => this._register(this.instantiationService.createInstance(MarkdownRenderer, {})),\n\t);\n\n\tprivate readonly textPreview = this._register(new MutableDisposable<ScrollableMarkdownMessage>());\n\n\tconstructor(private readonly container: HTMLElement, @IInstantiationService private readonly instantiationService: IInstantiationService) {\n\t\tsuper();\n\t}\n\n\tpublic update(subject: InspectSubject): void {\n\t\tif (!(subject instanceof MessageSubject)) {\n\t\t\treturn this.textPreview.clear();\n\t\t}\n\n\t\tconst message = subject.message;\n\t\tif (isDiffable(message) || typeof message.message === 'string') {\n\t\t\treturn this.textPreview.clear();\n\t\t}\n\n\t\tthis.textPreview.value = new ScrollableMarkdownMessage(\n\t\t\tthis.container,\n\t\t\tthis.markdown.value,\n\t\t\tmessage.message as IMarkdownString,\n\t\t);\n\t}\n\n\tpublic layout(dimension: dom.IDimension): void {\n\t\tthis.textPreview.value?.layout(dimension.height, dimension.width);\n\t}\n}\n\nclass PlainTextMessagePeek extends Disposable implements IPeekOutputRenderer {\n\tprivate readonly widget = this._register(new MutableDisposable<CodeEditorWidget>());\n\tprivate readonly model = this._register(new MutableDisposable());\n\tprivate dimension?: dom.IDimension;\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor | undefined,\n\t\tprivate readonly container: HTMLElement,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITextModelService private readonly modelService: ITextModelService,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic async update(subject: InspectSubject) {\n\t\tif (!(subject instanceof MessageSubject)) {\n\t\t\treturn this.clear();\n\t\t}\n\n\t\tconst message = subject.message;\n\t\tif (isDiffable(message) || message.type === TestMessageType.Output || typeof message.message !== 'string') {\n\t\t\treturn this.clear();\n\t\t}\n\n\t\tconst modelRef = this.model.value = await this.modelService.createModelReference(subject.messageUri);\n\t\tif (!this.widget.value) {\n\t\t\tthis.widget.value = this.editor ? this.instantiationService.createInstance(\n\t\t\t\tEmbeddedCodeEditorWidget,\n\t\t\t\tthis.container,\n\t\t\t\tcommonEditorOptions,\n\t\t\t\t{},\n\t\t\t\tthis.editor,\n\t\t\t) : this.instantiationService.createInstance(\n\t\t\t\tCodeEditorWidget,\n\t\t\t\tthis.container,\n\t\t\t\tcommonEditorOptions,\n\t\t\t\t{ isSimpleWidget: true }\n\t\t\t);\n\n\t\t\tif (this.dimension) {\n\t\t\t\tthis.widget.value.layout(this.dimension);\n\t\t\t}\n\t\t}\n\n\t\tthis.widget.value.setModel(modelRef.object.textEditorModel);\n\t\tthis.widget.value.updateOptions(commonEditorOptions);\n\t}\n\n\tprivate clear() {\n\t\tthis.model.clear();\n\t\tthis.widget.clear();\n\t}\n\n\tpublic layout(dimensions: dom.IDimension) {\n\t\tthis.dimension = dimensions;\n\t\tthis.widget.value?.layout(dimensions);\n\t}\n}\n\nclass TerminalMessagePeek extends Disposable implements IPeekOutputRenderer {\n\tprivate dimensions?: dom.IDimension;\n\tprivate readonly terminalCwd = this._register(new MutableObservableValue<string>(''));\n\tprivate readonly xtermLayoutDelayer = this._register(new Delayer(50));\n\n\t/** Active terminal instance. */\n\tprivate readonly terminal = this._register(new MutableDisposable<IDetachedTerminalInstance>());\n\t/** Listener for streaming result data */\n\tprivate readonly outputDataListener = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tprivate readonly container: HTMLElement,\n\t\tprivate readonly isInPeekView: boolean,\n\t\t@ITerminalService private readonly terminalService: ITerminalService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IWorkspaceContextService private readonly workspaceContext: IWorkspaceContextService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprivate async makeTerminal() {\n\t\tconst prev = this.terminal.value;\n\t\tif (prev) {\n\t\t\tprev.xterm.clearBuffer();\n\t\t\tprev.xterm.clearSearchDecorations();\n\t\t\t// clearBuffer tries to retain the prompt line, but this doesn't exist for tests.\n\t\t\t// So clear the screen (J) and move to home (H) to ensure previous data is cleaned up.\n\t\t\tprev.xterm.write(`\\x1b[2J\\x1b[0;0H`);\n\t\t\treturn prev;\n\t\t}\n\n\t\tconst capabilities = new TerminalCapabilityStore();\n\t\tconst cwd = this.terminalCwd;\n\t\tcapabilities.add(TerminalCapability.CwdDetection, {\n\t\t\ttype: TerminalCapability.CwdDetection,\n\t\t\tget cwds() { return [cwd.value]; },\n\t\t\tonDidChangeCwd: cwd.onDidChange,\n\t\t\tgetCwd: () => cwd.value,\n\t\t\tupdateCwd: () => { },\n\t\t});\n\n\t\treturn this.terminal.value = await this.terminalService.createDetachedTerminal({\n\t\t\trows: 10,\n\t\t\tcols: 80,\n\t\t\treadonly: true,\n\t\t\tcapabilities,\n\t\t\tprocessInfo: new DetachedProcessInfo({ initialCwd: cwd.value }),\n\t\t\tcolorProvider: {\n\t\t\t\tgetBackgroundColor: theme => {\n\t\t\t\t\tconst terminalBackground = theme.getColor(TERMINAL_BACKGROUND_COLOR);\n\t\t\t\t\tif (terminalBackground) {\n\t\t\t\t\t\treturn terminalBackground;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isInPeekView) {\n\t\t\t\t\t\treturn theme.getColor(peekViewResultsBackground);\n\t\t\t\t\t}\n\t\t\t\t\tconst location = this.viewDescriptorService.getViewLocationById(Testing.ResultsViewId);\n\t\t\t\t\treturn location === ViewContainerLocation.Panel\n\t\t\t\t\t\t? theme.getColor(PANEL_BACKGROUND)\n\t\t\t\t\t\t: theme.getColor(SIDE_BAR_BACKGROUND);\n\t\t\t\t},\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async update(subject: InspectSubject) {\n\t\tthis.outputDataListener.clear();\n\t\tif (subject instanceof TaskSubject) {\n\t\t\tawait this.updateForTaskSubject(subject);\n\t\t} else if (subject instanceof TestOutputSubject || (subject instanceof MessageSubject && subject.message.type === TestMessageType.Output)) {\n\t\t\tawait this.updateForTestSubject(subject);\n\t\t} else {\n\t\t\tthis.clear();\n\t\t}\n\t}\n\n\tprivate async updateForTestSubject(subject: TestOutputSubject | MessageSubject) {\n\t\tconst that = this;\n\t\tconst testItem = subject instanceof TestOutputSubject ? subject.test.item : subject.test;\n\t\tconst terminal = await this.updateGenerically<ITaskRawOutput>({\n\t\t\tsubject,\n\t\t\tgetTarget: result => result?.tasks[subject.taskIndex].output,\n\t\t\t*doInitialWrite(output, results) {\n\t\t\t\tthat.updateCwd(testItem.uri);\n\t\t\t\tconst state = subject instanceof TestOutputSubject ? subject.test : results.getStateById(testItem.extId);\n\t\t\t\tif (!state) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (const message of state.tasks[subject.taskIndex].messages) {\n\t\t\t\t\tif (message.type === TestMessageType.Output) {\n\t\t\t\t\t\tyield* output.getRangeIter(message.offset, message.length);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdoListenForMoreData: (output, result, { xterm }) => result.onChange(e => {\n\t\t\t\tif (e.reason === TestResultItemChangeReason.NewMessage && e.item.item.extId === testItem.extId && e.message.type === TestMessageType.Output) {\n\t\t\t\t\tfor (const chunk of output.getRangeIter(e.message.offset, e.message.length)) {\n\t\t\t\t\t\txterm.write(chunk.buffer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t});\n\n\t\tif (subject instanceof MessageSubject && subject.message.type === TestMessageType.Output && subject.message.marker !== undefined) {\n\t\t\tterminal?.xterm.selectMarkedRange(getMarkId(subject.message.marker, true), getMarkId(subject.message.marker, false), /* scrollIntoView= */ true);\n\t\t}\n\t}\n\n\tprivate updateForTaskSubject(subject: TaskSubject) {\n\t\treturn this.updateGenerically<ITestRunTaskResults>({\n\t\t\tsubject,\n\t\t\tgetTarget: result => result?.tasks[subject.taskIndex],\n\t\t\tdoInitialWrite: (task, result) => {\n\t\t\t\t// Update the cwd and use the first test to try to hint at the correct cwd,\n\t\t\t\t// but often this will fall back to the first workspace folder.\n\t\t\t\tthis.updateCwd(Iterable.find(result.tests, t => !!t.item.uri)?.item.uri);\n\t\t\t\treturn task.output.buffers;\n\t\t\t},\n\t\t\tdoListenForMoreData: (task, _result, { xterm }) => task.output.onDidWriteData(e => xterm.write(e.buffer)),\n\t\t});\n\t}\n\n\tprivate async updateGenerically<T>(opts: {\n\t\tsubject: InspectSubject;\n\t\tgetTarget: (result: ITestResult) => T | undefined;\n\t\tdoInitialWrite: (target: T, result: LiveTestResult) => Iterable<VSBuffer>;\n\t\tdoListenForMoreData: (target: T, result: LiveTestResult, terminal: IDetachedTerminalInstance) => IDisposable | undefined;\n\t}) {\n\t\tconst result = opts.subject.result;\n\t\tconst target = opts.getTarget(result);\n\t\tif (!target) {\n\t\t\treturn this.clear();\n\t\t}\n\n\t\tconst terminal = await this.makeTerminal();\n\t\tlet didWriteData = false;\n\n\t\tconst pendingWrites = new MutableObservableValue(0);\n\t\tif (result instanceof LiveTestResult) {\n\t\t\tfor (const chunk of opts.doInitialWrite(target, result)) {\n\t\t\t\tdidWriteData ||= chunk.byteLength > 0;\n\t\t\t\tpendingWrites.value++;\n\t\t\t\tterminal.xterm.write(chunk.buffer, () => pendingWrites.value--);\n\t\t\t}\n\t\t} else {\n\t\t\tdidWriteData = true;\n\t\t\tthis.writeNotice(terminal, localize('runNoOutputForPast', 'Test output is only available for new test runs.'));\n\t\t}\n\n\t\tthis.attachTerminalToDom(terminal);\n\t\tthis.outputDataListener.value = result instanceof LiveTestResult ? opts.doListenForMoreData(target, result, terminal) : undefined;\n\n\t\tif (!this.outputDataListener.value && !didWriteData) {\n\t\t\tthis.writeNotice(terminal, localize('runNoOutput', 'The test run did not record any output.'));\n\t\t}\n\n\t\t// Ensure pending writes finish, otherwise the selection in `updateForTestSubject`\n\t\t// can happen before the markers are processed.\n\t\tif (pendingWrites.value > 0) {\n\t\t\tawait new Promise<void>(resolve => {\n\t\t\t\tconst l = pendingWrites.onDidChange(() => {\n\t\t\t\t\tif (pendingWrites.value === 0) {\n\t\t\t\t\t\tl.dispose();\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn terminal;\n\t}\n\n\tprivate updateCwd(testUri?: URI) {\n\t\tconst wf = (testUri && this.workspaceContext.getWorkspaceFolder(testUri))\n\t\t\t|| this.workspaceContext.getWorkspace().folders[0];\n\t\tif (wf) {\n\t\t\tthis.terminalCwd.value = wf.uri.fsPath;\n\t\t}\n\t}\n\n\tprivate writeNotice(terminal: IDetachedTerminalInstance, str: string) {\n\t\tterminal.xterm.write(formatMessageForTerminal(str));\n\t}\n\n\tprivate attachTerminalToDom(terminal: IDetachedTerminalInstance) {\n\t\tterminal.xterm.write('\\x1b[?25l'); // hide cursor\n\t\trequestAnimationFrame(() => this.layoutTerminal(terminal));\n\t\tterminal.attachToElement(this.container, { enableGpu: false });\n\t}\n\n\tprivate clear() {\n\t\tthis.outputDataListener.clear();\n\t\tthis.xtermLayoutDelayer.cancel();\n\t\tthis.terminal.clear();\n\t}\n\n\tpublic layout(dimensions: dom.IDimension) {\n\t\tthis.dimensions = dimensions;\n\t\tif (this.terminal.value) {\n\t\t\tthis.layoutTerminal(this.terminal.value, dimensions.width, dimensions.height);\n\t\t}\n\t}\n\n\tprivate layoutTerminal(\n\t\t{ xterm }: IDetachedTerminalInstance,\n\t\twidth = this.dimensions?.width ?? this.container.clientWidth,\n\t\theight = this.dimensions?.height ?? this.container.clientHeight\n\t) {\n\t\twidth -= 10 + 20; // scrollbar width + margin\n\t\tthis.xtermLayoutDelayer.trigger(() => {\n\t\t\tconst scaled = getXtermScaledDimensions(xterm.getFont(), width, height);\n\t\t\tif (scaled) {\n\t\t\t\txterm.resize(scaled.cols, scaled.rows);\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst hintMessagePeekHeight = (msg: ITestMessage) => {\n\tconst msgHeight = isDiffable(msg)\n\t\t? Math.max(hintPeekStrHeight(msg.actual), hintPeekStrHeight(msg.expected))\n\t\t: hintPeekStrHeight(typeof msg.message === 'string' ? msg.message : msg.message.value);\n\n\t// add 8ish lines for the size of the title and decorations in the peek.\n\treturn msgHeight + 8;\n};\n\nconst firstLine = (str: string) => {\n\tconst index = str.indexOf('\\n');\n\treturn index === -1 ? str : str.slice(0, index);\n};\n\nconst isMultiline = (str: string | undefined) => !!str && str.includes('\\n');\n\nconst hintPeekStrHeight = (str: string) => Math.min(count(str, '\\n'), 24);\n\nclass SimpleDiffEditorModel extends EditorModel {\n\tpublic readonly original = this._original.object.textEditorModel;\n\tpublic readonly modified = this._modified.object.textEditorModel;\n\n\tconstructor(\n\t\tprivate readonly _original: IReference<IResolvedTextEditorModel>,\n\t\tprivate readonly _modified: IReference<IResolvedTextEditorModel>,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic override dispose() {\n\t\tsuper.dispose();\n\t\tthis._original.dispose();\n\t\tthis._modified.dispose();\n\t}\n}\n\nfunction getOuterEditorFromDiffEditor(codeEditorService: ICodeEditorService): ICodeEditor | null {\n\tconst diffEditors = codeEditorService.listDiffEditors();\n\n\tfor (const diffEditor of diffEditors) {\n\t\tif (diffEditor.hasTextFocus() && diffEditor instanceof EmbeddedDiffEditorWidget) {\n\t\t\treturn diffEditor.getParentEditor();\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport class CloseTestPeek extends EditorAction2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.closeTestPeek',\n\t\t\ttitle: localize('close', 'Close'),\n\t\t\ticon: Codicon.close,\n\t\t\tprecondition: ContextKeyExpr.or(TestingContextKeys.isInPeek, TestingContextKeys.isPeekVisible),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib - 101,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\twhen: ContextKeyExpr.not('config.editor.stablePeek')\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst parent = getPeekedEditorFromFocus(accessor.get(ICodeEditorService));\n\t\tTestingOutputPeekController.get(parent ?? editor)?.removePeek();\n\t}\n}\n\ninterface ITreeElement {\n\ttype: string;\n\tcontext: unknown;\n\tid: string;\n\tlabel: string;\n\tonDidChange: Event<void>;\n\tlabelWithIcons?: readonly (HTMLSpanElement | string)[];\n\ticon?: ThemeIcon;\n\tdescription?: string;\n\tariaLabel?: string;\n}\n\nclass TestResultElement implements ITreeElement {\n\tpublic readonly changeEmitter = new Emitter<void>();\n\tpublic readonly onDidChange = this.changeEmitter.event;\n\tpublic readonly type = 'result';\n\tpublic readonly context = this.value.id;\n\tpublic readonly id = this.value.id;\n\tpublic readonly label = this.value.name;\n\n\tpublic get icon() {\n\t\treturn icons.testingStatesToIcons.get(\n\t\t\tthis.value.completedAt === undefined\n\t\t\t\t? TestResultState.Running\n\t\t\t\t: maxCountPriority(this.value.counts)\n\t\t);\n\t}\n\n\tconstructor(public readonly value: ITestResult) { }\n}\n\nclass TestCaseElement implements ITreeElement {\n\tpublic readonly type = 'test';\n\tpublic readonly context = this.test.item.extId;\n\tpublic readonly id = `${this.results.id}/${this.test.item.extId}`;\n\tpublic readonly description?: string;\n\n\tpublic get onDidChange() {\n\t\tif (!(this.results instanceof LiveTestResult)) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\treturn Event.filter(this.results.onChange, e => e.item.item.extId === this.test.item.extId);\n\t}\n\n\tpublic get state() {\n\t\treturn this.test.tasks[this.taskIndex].state;\n\t}\n\n\tpublic get label() {\n\t\treturn this.test.item.label;\n\t}\n\n\tpublic get labelWithIcons() {\n\t\treturn renderLabelWithIcons(this.label);\n\t}\n\n\tpublic get icon() {\n\t\treturn icons.testingStatesToIcons.get(this.state);\n\t}\n\n\tpublic get outputSubject() {\n\t\treturn new TestOutputSubject(this.results, this.taskIndex, this.task, this.test);\n\t}\n\n\tconstructor(\n\t\tprivate readonly results: ITestResult,\n\t\tprivate readonly task: ITestRunTask,\n\t\tpublic readonly test: TestResultItem,\n\t\tpublic readonly taskIndex: number,\n\t) { }\n}\n\nclass TaskElement implements ITreeElement {\n\tpublic readonly changeEmitter = new Emitter<void>();\n\tpublic readonly onDidChange = this.changeEmitter.event;\n\tpublic readonly type = 'task';\n\tpublic readonly context: string;\n\tpublic readonly id: string;\n\tpublic readonly label: string;\n\tpublic readonly itemsCache = new CreationCache<TestCaseElement>();\n\n\tpublic get icon() {\n\t\treturn this.results.tasks[this.index].running ? icons.testingStatesToIcons.get(TestResultState.Running) : undefined;\n\t}\n\n\tconstructor(public readonly results: ITestResult, public readonly task: ITestRunTask, public readonly index: number) {\n\t\tthis.id = `${results.id}/${index}`;\n\t\tthis.task = results.tasks[index];\n\t\tthis.context = String(index);\n\t\tthis.label = this.task.name ?? localize('testUnnamedTask', 'Unnamed Task');\n\t}\n}\n\nclass TestMessageElement implements ITreeElement {\n\tpublic readonly type = 'message';\n\tpublic readonly id: string;\n\tpublic readonly label: string;\n\tpublic readonly uri: URI;\n\tpublic readonly location?: IRichLocation;\n\tpublic readonly description?: string;\n\tpublic readonly contextValue?: string;\n\tpublic readonly message: ITestMessage;\n\n\tpublic get onDidChange() {\n\t\tif (!(this.result instanceof LiveTestResult)) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\t// rerender when the test case changes so it gets retired events\n\t\treturn Event.filter(this.result.onChange, e => e.item.item.extId === this.test.item.extId);\n\t}\n\n\tpublic get context(): ITestMessageMenuArgs {\n\t\treturn {\n\t\t\t$mid: MarshalledId.TestMessageMenuArgs,\n\t\t\textId: this.test.item.extId,\n\t\t\tmessage: ITestMessage.serialize(this.message),\n\t\t};\n\t}\n\n\n\tconstructor(\n\t\tpublic readonly result: ITestResult,\n\t\tpublic readonly test: TestResultItem,\n\t\tpublic readonly taskIndex: number,\n\t\tpublic readonly messageIndex: number,\n\t) {\n\t\tconst m = this.message = test.tasks[taskIndex].messages[messageIndex];\n\n\t\tthis.location = m.location;\n\t\tthis.contextValue = m.type === TestMessageType.Error ? m.contextValue : undefined;\n\t\tthis.uri = buildTestUri({\n\t\t\ttype: TestUriType.ResultMessage,\n\t\t\tmessageIndex,\n\t\t\tresultId: result.id,\n\t\t\ttaskIndex,\n\t\t\ttestExtId: test.item.extId\n\t\t});\n\n\t\tthis.id = this.uri.toString();\n\n\t\tconst asPlaintext = renderStringAsPlaintext(m.message);\n\t\tconst lines = count(asPlaintext.trimEnd(), '\\n');\n\t\tthis.label = firstLine(asPlaintext);\n\t\tif (lines > 0) {\n\t\t\tthis.description = lines > 1\n\t\t\t\t? localize('messageMoreLinesN', '+ {0} more lines', lines)\n\t\t\t\t: localize('messageMoreLines1', '+ 1 more line');\n\t\t}\n\t}\n}\n\ntype TreeElement = TestResultElement | TestCaseElement | TestMessageElement | TaskElement;\n\nclass OutputPeekTree extends Disposable {\n\tprivate disposed = false;\n\tprivate readonly tree: WorkbenchCompressibleObjectTree<TreeElement, FuzzyScore>;\n\tprivate readonly treeActions: TreeActionsProvider;\n\tprivate readonly requestReveal = this._register(new Emitter<InspectSubject>());\n\n\tpublic readonly onDidRequestReview = this.requestReveal.event;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tonDidReveal: Event<{ subject: InspectSubject; preserveFocus: boolean }>,\n\t\toptions: { showRevealLocationOnMessages: boolean },\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@ITestResultService results: ITestResultService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITestExplorerFilterState explorerFilter: ITestExplorerFilterState,\n\t) {\n\t\tsuper();\n\n\t\tthis.treeActions = instantiationService.createInstance(TreeActionsProvider, options.showRevealLocationOnMessages, this.requestReveal,);\n\t\tconst diffIdentityProvider: IIdentityProvider<TreeElement> = {\n\t\t\tgetId(e: TreeElement) {\n\t\t\t\treturn e.id;\n\t\t\t}\n\t\t};\n\n\t\tthis.tree = this._register(instantiationService.createInstance(\n\t\t\tWorkbenchCompressibleObjectTree,\n\t\t\t'Test Output Peek',\n\t\t\tcontainer,\n\t\t\t{\n\t\t\t\tgetHeight: () => 22,\n\t\t\t\tgetTemplateId: () => TestRunElementRenderer.ID,\n\t\t\t},\n\t\t\t[instantiationService.createInstance(TestRunElementRenderer, this.treeActions)],\n\t\t\t{\n\t\t\t\tcompressionEnabled: true,\n\t\t\t\thideTwistiesOfChildlessElements: true,\n\t\t\t\tidentityProvider: diffIdentityProvider,\n\t\t\t\tsorter: {\n\t\t\t\t\tcompare(a, b) {\n\t\t\t\t\t\tif (a instanceof TestCaseElement && b instanceof TestCaseElement) {\n\t\t\t\t\t\t\treturn cmpPriority(a.state, b.state);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taccessibilityProvider: {\n\t\t\t\t\tgetAriaLabel(element: ITreeElement) {\n\t\t\t\t\t\treturn element.ariaLabel || element.label;\n\t\t\t\t\t},\n\t\t\t\t\tgetWidgetAriaLabel() {\n\t\t\t\t\t\treturn localize('testingPeekLabel', 'Test Result Messages');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t)) as WorkbenchCompressibleObjectTree<TreeElement, FuzzyScore>;\n\n\t\tconst cc = new CreationCache<TreeElement>();\n\t\tconst getTaskChildren = (taskElem: TaskElement): Iterable<ICompressedTreeElement<TreeElement>> => {\n\t\t\tconst tests = Iterable.filter(taskElem.results.tests, test => test.tasks[taskElem.index].state >= TestResultState.Running || test.tasks[taskElem.index].messages.length > 0);\n\n\t\t\treturn Iterable.map(tests, test => ({\n\t\t\t\telement: taskElem.itemsCache.getOrCreate(test, () => new TestCaseElement(taskElem.results, taskElem.task, test, taskElem.index)),\n\t\t\t\tincompressible: true,\n\t\t\t\tchildren: getTestChildren(taskElem.results, test, taskElem.index),\n\t\t\t}));\n\t\t};\n\n\t\tconst getTestChildren = (result: ITestResult, test: TestResultItem, taskIndex: number): Iterable<ICompressedTreeElement<TreeElement>> => {\n\t\t\treturn test.tasks[taskIndex].messages\n\t\t\t\t.map((m, messageIndex) =>\n\t\t\t\t\tm.type === TestMessageType.Error\n\t\t\t\t\t\t? { element: cc.getOrCreate(m, () => new TestMessageElement(result, test, taskIndex, messageIndex)), incompressible: false }\n\t\t\t\t\t\t: undefined\n\t\t\t\t)\n\t\t\t\t.filter(isDefined);\n\t\t};\n\n\t\tconst getResultChildren = (result: ITestResult): Iterable<ICompressedTreeElement<TreeElement>> => {\n\t\t\treturn result.tasks.map((task, taskIndex) => {\n\t\t\t\tconst taskElem = cc.getOrCreate(task, () => new TaskElement(result, task, taskIndex));\n\t\t\t\treturn ({\n\t\t\t\t\telement: taskElem,\n\t\t\t\t\tincompressible: false,\n\t\t\t\t\tchildren: getTaskChildren(taskElem),\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\tconst getRootChildren = () => results.results.map(result => {\n\t\t\tconst element = cc.getOrCreate(result, () => new TestResultElement(result));\n\t\t\treturn {\n\t\t\t\telement,\n\t\t\t\tincompressible: true,\n\t\t\t\tcollapsed: this.tree.hasElement(element) ? this.tree.isCollapsed(element) : true,\n\t\t\t\tchildren: getResultChildren(result)\n\t\t\t};\n\t\t});\n\n\t\t// Queued result updates to prevent spamming CPU when lots of tests are\n\t\t// completing and messaging quickly (#142514)\n\t\tconst taskChildrenToUpdate = new Set<TaskElement>();\n\t\tconst taskChildrenUpdate = this._register(new RunOnceScheduler(() => {\n\t\t\tfor (const taskNode of taskChildrenToUpdate) {\n\t\t\t\tif (this.tree.hasElement(taskNode)) {\n\t\t\t\t\tthis.tree.setChildren(taskNode, getTaskChildren(taskNode), { diffIdentityProvider });\n\t\t\t\t}\n\t\t\t}\n\t\t\ttaskChildrenToUpdate.clear();\n\t\t}, 300));\n\n\t\tconst attachToResults = (result: LiveTestResult) => {\n\t\t\tconst resultNode = cc.get(result)! as TestResultElement;\n\t\t\tconst disposable = new DisposableStore();\n\t\t\tdisposable.add(result.onNewTask(() => {\n\t\t\t\tif (result.tasks.length === 1) {\n\t\t\t\t\tthis.requestReveal.fire(new TaskSubject(result, 0)); // reveal the first task in new runs\n\t\t\t\t}\n\n\t\t\t\tif (this.tree.hasElement(resultNode)) {\n\t\t\t\t\tthis.tree.setChildren(resultNode, getResultChildren(result), { diffIdentityProvider });\n\t\t\t\t}\n\t\t\t}));\n\t\t\tdisposable.add(result.onEndTask(index => {\n\t\t\t\t(cc.get(result.tasks[index]) as TaskElement | undefined)?.changeEmitter.fire();\n\t\t\t}));\n\n\t\t\tdisposable.add(result.onChange(e => {\n\t\t\t\t// try updating the item in each of its tasks\n\t\t\t\tfor (const [index, task] of result.tasks.entries()) {\n\t\t\t\t\tconst taskNode = cc.get(task) as TaskElement;\n\t\t\t\t\tif (!this.tree.hasElement(taskNode)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst itemNode = taskNode.itemsCache.get(e.item);\n\t\t\t\t\tif (itemNode && this.tree.hasElement(itemNode)) {\n\t\t\t\t\t\tif (e.reason === TestResultItemChangeReason.NewMessage && e.message.type === TestMessageType.Error) {\n\t\t\t\t\t\t\tthis.tree.setChildren(itemNode, getTestChildren(result, e.item, index), { diffIdentityProvider });\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\ttaskChildrenToUpdate.add(taskNode);\n\t\t\t\t\tif (!taskChildrenUpdate.isScheduled()) {\n\t\t\t\t\t\ttaskChildrenUpdate.schedule();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tdisposable.add(result.onComplete(() => {\n\t\t\t\tresultNode.changeEmitter.fire();\n\t\t\t\tdisposable.dispose();\n\t\t\t}));\n\n\t\t\treturn resultNode;\n\t\t};\n\n\t\tthis._register(results.onResultsChanged(e => {\n\t\t\t// little hack here: a result change can cause the peek to be disposed,\n\t\t\t// but this listener will still be queued. Doing stuff with the tree\n\t\t\t// will cause errors.\n\t\t\tif (this.disposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ('completed' in e) {\n\t\t\t\t(cc.get(e.completed) as TestResultElement | undefined)?.changeEmitter.fire();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.tree.setChildren(null, getRootChildren(), { diffIdentityProvider });\n\n\t\t\t// done after setChildren intentionally so that the ResultElement exists in the cache.\n\t\t\tif ('started' in e) {\n\t\t\t\tfor (const child of this.tree.getNode(null).children) {\n\t\t\t\t\tthis.tree.collapse(child.element, false);\n\t\t\t\t}\n\n\t\t\t\tthis.tree.expand(attachToResults(e.started), true);\n\t\t\t}\n\t\t}));\n\n\t\tconst revealItem = (element: TreeElement, preserveFocus: boolean) => {\n\t\t\tthis.tree.setFocus([element]);\n\t\t\tthis.tree.setSelection([element]);\n\t\t\tif (!preserveFocus) {\n\t\t\t\tthis.tree.domFocus();\n\t\t\t}\n\t\t};\n\n\t\tthis._register(onDidReveal(async ({ subject, preserveFocus = false }) => {\n\t\t\tif (subject instanceof TaskSubject) {\n\t\t\t\tconst resultItem = this.tree.getNode(null).children.find(c => {\n\t\t\t\t\tif (c.element instanceof TaskElement) {\n\t\t\t\t\t\treturn c.element.results.id === subject.result.id && c.element.index === subject.taskIndex;\n\t\t\t\t\t}\n\t\t\t\t\tif (c.element instanceof TestResultElement) {\n\t\t\t\t\t\treturn c.element.id === subject.result.id;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\n\t\t\t\tif (resultItem) {\n\t\t\t\t\trevealItem(resultItem.element!, preserveFocus);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst revealElement = subject instanceof TestOutputSubject\n\t\t\t\t? cc.get<TaskElement>(subject.task)?.itemsCache.get(subject.test)\n\t\t\t\t: cc.get(subject.message);\n\t\t\tif (!revealElement || !this.tree.hasElement(revealElement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst parents: TreeElement[] = [];\n\t\t\tfor (let parent = this.tree.getParentElement(revealElement); parent; parent = this.tree.getParentElement(parent)) {\n\t\t\t\tparents.unshift(parent);\n\t\t\t}\n\n\t\t\tfor (const parent of parents) {\n\t\t\t\tthis.tree.expand(parent);\n\t\t\t}\n\n\t\t\tif (this.tree.getRelativeTop(revealElement) === null) {\n\t\t\t\tthis.tree.reveal(revealElement, 0.5);\n\t\t\t}\n\n\t\t\trevealItem(revealElement, preserveFocus);\n\t\t}));\n\n\t\tthis._register(this.tree.onDidOpen(async e => {\n\t\t\tif (e.element instanceof TestMessageElement) {\n\t\t\t\tthis.requestReveal.fire(new MessageSubject(e.element.result, e.element.test, e.element.taskIndex, e.element.messageIndex));\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.tree.onDidChangeSelection(evt => {\n\t\t\tfor (const element of evt.elements) {\n\t\t\t\tif (element && 'test' in element) {\n\t\t\t\t\texplorerFilter.reveal.value = element.test.item.extId;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\n\t\tthis._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n\n\t\tthis.tree.setChildren(null, getRootChildren());\n\t\tfor (const result of results.results) {\n\t\t\tif (!result.completedAt && result instanceof LiveTestResult) {\n\t\t\t\tattachToResults(result);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic layout(height: number, width: number) {\n\t\tthis.tree.layout(height, width);\n\t}\n\n\tprivate onContextMenu(evt: ITreeContextMenuEvent<ITreeElement | null>) {\n\t\tif (!evt.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst actions = this.treeActions.provideActionBar(evt.element);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => evt.anchor,\n\t\t\tgetActions: () => actions.secondary.length\n\t\t\t\t? [...actions.primary, new Separator(), ...actions.secondary]\n\t\t\t\t: actions.primary,\n\t\t\tgetActionsContext: () => evt.element?.context\n\t\t});\n\t}\n\n\tpublic override dispose() {\n\t\tsuper.dispose();\n\t\tthis.disposed = true;\n\t}\n}\n\ninterface TemplateData {\n\tlabel: HTMLElement;\n\ticon: HTMLElement;\n\tactionBar: ActionBar;\n\telementDisposable: DisposableStore;\n\ttemplateDisposable: DisposableStore;\n}\n\nclass TestRunElementRenderer implements ICompressibleTreeRenderer<ITreeElement, FuzzyScore, TemplateData> {\n\tpublic static readonly ID = 'testRunElementRenderer';\n\tpublic readonly templateId = TestRunElementRenderer.ID;\n\n\tconstructor(\n\t\tprivate readonly treeActions: TreeActionsProvider,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) { }\n\n\t/** @inheritdoc */\n\tpublic renderCompressedElements(node: ITreeNode<ICompressedTreeNode<ITreeElement>, FuzzyScore>, _index: number, templateData: TemplateData): void {\n\t\tconst chain = node.element.elements;\n\t\tconst lastElement = chain[chain.length - 1];\n\t\tif ((lastElement instanceof TaskElement || lastElement instanceof TestMessageElement) && chain.length >= 2) {\n\t\t\tthis.doRender(chain[chain.length - 2], templateData, lastElement);\n\t\t} else {\n\t\t\tthis.doRender(lastElement, templateData);\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\tpublic renderTemplate(container: HTMLElement): TemplateData {\n\t\tconst templateDisposable = new DisposableStore();\n\t\tconst wrapper = dom.append(container, dom.$('.test-peek-item'));\n\t\tconst icon = dom.append(wrapper, dom.$('.state'));\n\t\tconst label = dom.append(wrapper, dom.$('.name'));\n\n\t\tconst actionBar = new ActionBar(wrapper, {\n\t\t\tactionViewItemProvider: action =>\n\t\t\t\taction instanceof MenuItemAction\n\t\t\t\t\t? this.instantiationService.createInstance(MenuEntryActionViewItem, action, undefined)\n\t\t\t\t\t: undefined\n\t\t});\n\n\t\tconst elementDisposable = new DisposableStore();\n\t\ttemplateDisposable.add(elementDisposable);\n\t\ttemplateDisposable.add(actionBar);\n\n\t\treturn {\n\t\t\ticon,\n\t\t\tlabel,\n\t\t\tactionBar,\n\t\t\telementDisposable,\n\t\t\ttemplateDisposable,\n\t\t};\n\t}\n\n\t/** @inheritdoc */\n\tpublic renderElement(element: ITreeNode<ITreeElement, FuzzyScore>, _index: number, templateData: TemplateData): void {\n\t\tthis.doRender(element.element, templateData);\n\t}\n\n\t/** @inheritdoc */\n\tpublic disposeTemplate(templateData: TemplateData): void {\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n\n\t/** Called to render a new element */\n\tprivate doRender(element: ITreeElement, templateData: TemplateData, subjectElement?: ITreeElement) {\n\t\ttemplateData.elementDisposable.clear();\n\t\ttemplateData.elementDisposable.add(\n\t\t\telement.onDidChange(() => this.doRender(element, templateData, subjectElement)),\n\t\t);\n\t\tthis.doRenderInner(element, templateData, subjectElement);\n\t}\n\n\t/** Called, and may be re-called, to render or re-render an element */\n\tprivate doRenderInner(element: ITreeElement, templateData: TemplateData, subjectElement: ITreeElement | undefined) {\n\t\tlet { label, labelWithIcons, description } = element;\n\t\tif (subjectElement instanceof TestMessageElement) {\n\t\t\tdescription = subjectElement.label;\n\t\t}\n\n\t\tconst descriptionElement = description ? dom.$('span.test-label-description', {}, description) : '';\n\t\tif (labelWithIcons) {\n\t\t\tdom.reset(templateData.label, ...labelWithIcons, descriptionElement);\n\t\t} else {\n\t\t\tdom.reset(templateData.label, label, descriptionElement);\n\t\t}\n\n\t\tconst icon = element.icon;\n\t\ttemplateData.icon.className = `computed-state ${icon ? ThemeIcon.asClassName(icon) : ''}`;\n\n\t\tconst actions = this.treeActions.provideActionBar(element);\n\t\ttemplateData.actionBar.clear();\n\t\ttemplateData.actionBar.context = element.context;\n\t\ttemplateData.actionBar.push(actions.primary, { icon: true, label: false });\n\t}\n}\n\nclass TreeActionsProvider {\n\tconstructor(\n\t\tprivate readonly showRevealLocationOnMessages: boolean,\n\t\tprivate readonly requestReveal: Emitter<InspectSubject>,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@ITestProfileService private readonly testProfileService: ITestProfileService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t) { }\n\n\tpublic provideActionBar(element: ITreeElement) {\n\t\tconst test = element instanceof TestCaseElement ? element.test : undefined;\n\t\tconst capabilities = test ? this.testProfileService.capabilitiesForTest(test) : 0;\n\n\t\tconst contextKeys: [string, unknown][] = [\n\t\t\t['peek', Testing.OutputPeekContributionId],\n\t\t\t[TestingContextKeys.peekItemType.key, element.type],\n\t\t];\n\n\t\tlet id = MenuId.TestPeekElement;\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\n\t\tif (element instanceof TaskElement) {\n\t\t\tprimary.push(new Action(\n\t\t\t\t'testing.outputPeek.showResultOutput',\n\t\t\t\tlocalize('testing.showResultOutput', \"Show Result Output\"),\n\t\t\t\tThemeIcon.asClassName(Codicon.terminal),\n\t\t\t\tundefined,\n\t\t\t\t() => this.requestReveal.fire(new TaskSubject(element.results, element.index)),\n\t\t\t));\n\t\t}\n\n\t\tif (element instanceof TestResultElement) {\n\t\t\t// only show if there are no collapsed test nodes that have more specific choices\n\t\t\tif (element.value.tasks.length === 1) {\n\t\t\t\tprimary.push(new Action(\n\t\t\t\t\t'testing.outputPeek.showResultOutput',\n\t\t\t\t\tlocalize('testing.showResultOutput', \"Show Result Output\"),\n\t\t\t\t\tThemeIcon.asClassName(Codicon.terminal),\n\t\t\t\t\tundefined,\n\t\t\t\t\t() => this.requestReveal.fire(new TaskSubject(element.value, 0)),\n\t\t\t\t));\n\t\t\t}\n\n\t\t\tprimary.push(new Action(\n\t\t\t\t'testing.outputPeek.reRunLastRun',\n\t\t\t\tlocalize('testing.reRunLastRun', \"Rerun Test Run\"),\n\t\t\t\tThemeIcon.asClassName(icons.testingRunIcon),\n\t\t\t\tundefined,\n\t\t\t\t() => this.commandService.executeCommand('testing.reRunLastRun', element.value.id),\n\t\t\t));\n\n\t\t\tif (capabilities & TestRunProfileBitset.Debug) {\n\t\t\t\tprimary.push(new Action(\n\t\t\t\t\t'testing.outputPeek.debugLastRun',\n\t\t\t\t\tlocalize('testing.debugLastRun', \"Debug Test Run\"),\n\t\t\t\t\tThemeIcon.asClassName(icons.testingDebugIcon),\n\t\t\t\t\tundefined,\n\t\t\t\t\t() => this.commandService.executeCommand('testing.debugLastRun', element.value.id),\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\n\t\tif (element instanceof TestCaseElement || element instanceof TestMessageElement) {\n\t\t\tcontextKeys.push(\n\t\t\t\t[TestingContextKeys.testResultOutdated.key, element.test.retired],\n\t\t\t\t...getTestItemContextOverlay(element.test, capabilities),\n\t\t\t);\n\t\t}\n\n\t\tif (element instanceof TestCaseElement) {\n\t\t\tconst extId = element.test.item.extId;\n\t\t\tif (element.test.tasks[element.taskIndex].messages.some(m => m.type === TestMessageType.Output)) {\n\t\t\t\tprimary.push(new Action(\n\t\t\t\t\t'testing.outputPeek.showResultOutput',\n\t\t\t\t\tlocalize('testing.showResultOutput', \"Show Result Output\"),\n\t\t\t\t\tThemeIcon.asClassName(Codicon.terminal),\n\t\t\t\t\tundefined,\n\t\t\t\t\t() => this.requestReveal.fire(element.outputSubject),\n\t\t\t\t));\n\t\t\t}\n\n\t\t\tsecondary.push(new Action(\n\t\t\t\t'testing.outputPeek.revealInExplorer',\n\t\t\t\tlocalize('testing.revealInExplorer', \"Reveal in Test Explorer\"),\n\t\t\t\tThemeIcon.asClassName(Codicon.listTree),\n\t\t\t\tundefined,\n\t\t\t\t() => this.commandService.executeCommand('_revealTestInExplorer', extId),\n\t\t\t));\n\n\t\t\tif (capabilities & TestRunProfileBitset.Run) {\n\t\t\t\tprimary.push(new Action(\n\t\t\t\t\t'testing.outputPeek.runTest',\n\t\t\t\t\tlocalize('run test', 'Run Test'),\n\t\t\t\t\tThemeIcon.asClassName(icons.testingRunIcon),\n\t\t\t\t\tundefined,\n\t\t\t\t\t() => this.commandService.executeCommand('vscode.runTestsById', TestRunProfileBitset.Run, extId),\n\t\t\t\t));\n\t\t\t}\n\n\t\t\tif (capabilities & TestRunProfileBitset.Debug) {\n\t\t\t\tprimary.push(new Action(\n\t\t\t\t\t'testing.outputPeek.debugTest',\n\t\t\t\t\tlocalize('debug test', 'Debug Test'),\n\t\t\t\t\tThemeIcon.asClassName(icons.testingDebugIcon),\n\t\t\t\t\tundefined,\n\t\t\t\t\t() => this.commandService.executeCommand('vscode.runTestsById', TestRunProfileBitset.Debug, extId),\n\t\t\t\t));\n\t\t\t}\n\n\t\t\tprimary.push(new Action(\n\t\t\t\t'testing.outputPeek.goToFile',\n\t\t\t\tlocalize('testing.goToFile', \"Go to Source\"),\n\t\t\t\tThemeIcon.asClassName(Codicon.goToFile),\n\t\t\t\tundefined,\n\t\t\t\t() => this.commandService.executeCommand('vscode.revealTest', extId),\n\t\t\t));\n\t\t}\n\n\t\tif (element instanceof TestMessageElement) {\n\t\t\tid = MenuId.TestMessageContext;\n\t\t\tcontextKeys.push([TestingContextKeys.testMessageContext.key, element.contextValue]);\n\t\t\tif (this.showRevealLocationOnMessages && element.location) {\n\t\t\t\tprimary.push(new Action(\n\t\t\t\t\t'testing.outputPeek.goToError',\n\t\t\t\t\tlocalize('testing.goToError', \"Go to Source\"),\n\t\t\t\t\tThemeIcon.asClassName(Codicon.goToFile),\n\t\t\t\t\tundefined,\n\t\t\t\t\t() => this.editorService.openEditor({\n\t\t\t\t\t\tresource: element.location!.uri,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tselection: element.location!.range,\n\t\t\t\t\t\t\tpreserveFocus: true,\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\n\n\t\tconst contextOverlay = this.contextKeyService.createOverlay(contextKeys);\n\t\tconst result = { primary, secondary };\n\t\tconst menu = this.menuService.createMenu(id, contextOverlay);\n\t\ttry {\n\t\t\tcreateAndFillInActionBarActions(menu, { arg: element.context }, result, 'inline');\n\t\t\treturn result;\n\t\t} finally {\n\t\t\tmenu.dispose();\n\t\t}\n\t}\n}\n\nconst navWhen = ContextKeyExpr.and(\n\tEditorContextKeys.focus,\n\tTestingContextKeys.isPeekVisible,\n);\n\n/**\n * Gets the appropriate editor for peeking based on the currently focused editor.\n */\nconst getPeekedEditorFromFocus = (codeEditorService: ICodeEditorService) => {\n\tconst editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n\treturn editor && getPeekedEditor(codeEditorService, editor);\n};\n\n/**\n * Gets the editor where the peek may be shown, bubbling upwards if the given\n * editor is embedded (i.e. inside a peek already).\n */\nconst getPeekedEditor = (codeEditorService: ICodeEditorService, editor: ICodeEditor) => {\n\tif (TestingOutputPeekController.get(editor)?.subject) {\n\t\treturn editor;\n\t}\n\n\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\treturn editor.getParentEditor();\n\t}\n\n\tconst outer = getOuterEditorFromDiffEditor(codeEditorService);\n\tif (outer) {\n\t\treturn outer;\n\t}\n\n\treturn editor;\n};\n\nexport class GoToNextMessageAction extends Action2 {\n\tpublic static readonly ID = 'testing.goToNextMessage';\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GoToNextMessageAction.ID,\n\t\t\tf1: true,\n\t\t\ttitle: { value: localize('testing.goToNextMessage', \"Go to Next Test Failure\"), original: 'Go to Next Test Failure' },\n\t\t\ticon: Codicon.arrowDown,\n\t\t\tcategory: Categories.Test,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.F8,\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\twhen: navWhen,\n\t\t\t},\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.TestPeekTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 2,\n\t\t\t}, {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: navWhen\n\t\t\t}],\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor) {\n\t\tconst editor = getPeekedEditorFromFocus(accessor.get(ICodeEditorService));\n\t\tif (editor) {\n\t\t\tTestingOutputPeekController.get(editor)?.next();\n\t\t}\n\t}\n}\n\nexport class GoToPreviousMessageAction extends Action2 {\n\tpublic static readonly ID = 'testing.goToPreviousMessage';\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GoToPreviousMessageAction.ID,\n\t\t\tf1: true,\n\t\t\ttitle: { value: localize('testing.goToPreviousMessage', \"Go to Previous Test Failure\"), original: 'Go to Previous Test Failure' },\n\t\t\ticon: Codicon.arrowUp,\n\t\t\tcategory: Categories.Test,\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.F8,\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\twhen: navWhen\n\t\t\t},\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.TestPeekTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1,\n\t\t\t}, {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: navWhen\n\t\t\t}],\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor) {\n\t\tconst editor = getPeekedEditorFromFocus(accessor.get(ICodeEditorService));\n\t\tif (editor) {\n\t\t\tTestingOutputPeekController.get(editor)?.previous();\n\t\t}\n\t}\n}\n\nexport class OpenMessageInEditorAction extends Action2 {\n\tpublic static readonly ID = 'testing.openMessageInEditor';\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenMessageInEditorAction.ID,\n\t\t\tf1: false,\n\t\t\ttitle: { value: localize('testing.openMessageInEditor', \"Open in Editor\"), original: 'Open in Editor' },\n\t\t\ticon: Codicon.goToFile,\n\t\t\tcategory: Categories.Test,\n\t\t\tmenu: [{ id: MenuId.TestPeekTitle }],\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor) {\n\t\taccessor.get(ITestingPeekOpener).openCurrentInEditor();\n\t}\n}\n\nexport class ToggleTestingPeekHistory extends Action2 {\n\tpublic static readonly ID = 'testing.toggleTestingPeekHistory';\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleTestingPeekHistory.ID,\n\t\t\tf1: true,\n\t\t\ttitle: { value: localize('testing.toggleTestingPeekHistory', \"Toggle Test History in Peek\"), original: 'Toggle Test History in Peek' },\n\t\t\ticon: Codicon.history,\n\t\t\tcategory: Categories.Test,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.TestPeekTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3,\n\t\t\t}],\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.KeyH,\n\t\t\t\twhen: TestingContextKeys.isPeekVisible.isEqualTo(true),\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic override run(accessor: ServicesAccessor) {\n\t\tconst opener = accessor.get(ITestingPeekOpener);\n\t\topener.historyVisible.value = !opener.historyVisible.value;\n\t}\n}\n\nclass CreationCache<T> {\n\tprivate readonly v = new WeakMap<object, T>();\n\n\tpublic get<T2 extends T = T>(key: object): T2 | undefined {\n\t\treturn this.v.get(key) as T2 | undefined;\n\t}\n\n\tpublic getOrCreate<T2 extends T>(ref: object, factory: () => T2): T2 {\n\t\tconst existing = this.v.get(ref);\n\t\tif (existing) {\n\t\t\treturn existing as T2;\n\t\t}\n\n\t\tconst fresh = factory();\n\t\tthis.v.set(ref, fresh);\n\t\treturn fresh;\n\t}\n}\n"]}