{"version":3,"sources":["vs/workbench/contrib/testing/browser/testing.contribution.ts"],"names":[],"mappings":"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","file":"testing.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EditorContributionInstantiation, registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { localize } from 'vs/nls';\nimport { registerAction2 } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { Extensions as ConfigurationExtensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IProgressService } from 'vs/platform/progress/common/progress';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { IViewContainersRegistry, IViewsRegistry, IViewsService, Extensions as ViewContainerExtensions, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { REVEAL_IN_EXPLORER_COMMAND_ID } from 'vs/workbench/contrib/files/browser/fileConstants';\nimport { testingResultsIcon, testingViewIcon } from 'vs/workbench/contrib/testing/browser/icons';\nimport { TestingDecorationService, TestingDecorations } from 'vs/workbench/contrib/testing/browser/testingDecorations';\nimport { TestingExplorerView } from 'vs/workbench/contrib/testing/browser/testingExplorerView';\nimport { CloseTestPeek, GoToNextMessageAction, GoToPreviousMessageAction, OpenMessageInEditorAction, TestResultsView, TestingOutputPeekController, TestingPeekOpener, ToggleTestingPeekHistory } from 'vs/workbench/contrib/testing/browser/testingOutputPeek';\nimport { TestingProgressTrigger } from 'vs/workbench/contrib/testing/browser/testingProgressUiService';\nimport { TestingViewPaneContainer } from 'vs/workbench/contrib/testing/browser/testingViewPaneContainer';\nimport { testingConfiguration } from 'vs/workbench/contrib/testing/common/configuration';\nimport { TestCommandId, Testing } from 'vs/workbench/contrib/testing/common/constants';\nimport { ITestExplorerFilterState, TestExplorerFilterState } from 'vs/workbench/contrib/testing/common/testExplorerFilterState';\nimport { TestId, TestPosition } from 'vs/workbench/contrib/testing/common/testId';\nimport { ITestProfileService, TestProfileService } from 'vs/workbench/contrib/testing/common/testProfileService';\nimport { ITestResultService, TestResultService } from 'vs/workbench/contrib/testing/common/testResultService';\nimport { ITestResultStorage, TestResultStorage } from 'vs/workbench/contrib/testing/common/testResultStorage';\nimport { ITestService } from 'vs/workbench/contrib/testing/common/testService';\nimport { TestService } from 'vs/workbench/contrib/testing/common/testServiceImpl';\nimport { ITestItem, TestRunProfileBitset } from 'vs/workbench/contrib/testing/common/testTypes';\nimport { TestingContentProvider } from 'vs/workbench/contrib/testing/common/testingContentProvider';\nimport { TestingContextKeys } from 'vs/workbench/contrib/testing/common/testingContextKeys';\nimport { ITestingContinuousRunService, TestingContinuousRunService } from 'vs/workbench/contrib/testing/common/testingContinuousRunService';\nimport { ITestingDecorationsService } from 'vs/workbench/contrib/testing/common/testingDecorations';\nimport { ITestingPeekOpener } from 'vs/workbench/contrib/testing/common/testingPeekOpener';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { allTestActions, discoverAndRunTests } from './testExplorerActions';\nimport './testingConfigurationUi';\n\nregisterSingleton(ITestService, TestService, InstantiationType.Delayed);\nregisterSingleton(ITestResultStorage, TestResultStorage, InstantiationType.Delayed);\nregisterSingleton(ITestProfileService, TestProfileService, InstantiationType.Delayed);\nregisterSingleton(ITestingContinuousRunService, TestingContinuousRunService, InstantiationType.Delayed);\nregisterSingleton(ITestResultService, TestResultService, InstantiationType.Delayed);\nregisterSingleton(ITestExplorerFilterState, TestExplorerFilterState, InstantiationType.Delayed);\nregisterSingleton(ITestingPeekOpener, TestingPeekOpener, InstantiationType.Delayed);\nregisterSingleton(ITestingDecorationsService, TestingDecorationService, InstantiationType.Delayed);\n\nconst viewContainer = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: Testing.ViewletId,\n\ttitle: { value: localize('test', \"Testing\"), original: 'Testing' },\n\tctorDescriptor: new SyncDescriptor(TestingViewPaneContainer),\n\ticon: testingViewIcon,\n\talwaysUseContainerInfo: true,\n\torder: 6,\n\topenCommandActionDescriptor: {\n\t\tid: Testing.ViewletId,\n\t\tmnemonicTitle: localize({ key: 'miViewTesting', comment: ['&& denotes a mnemonic'] }, \"T&&esting\"),\n\t\t// todo: coordinate with joh whether this is available\n\t\t// keybindings: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_SEMICOLON },\n\t\torder: 4,\n\t},\n\thideIfEmpty: true,\n}, ViewContainerLocation.Sidebar);\n\n\nconst testResultsViewContainer = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: Testing.ResultsPanelId,\n\ttitle: { value: localize('testResultsPanelName', \"Test Results\"), original: 'Test Results' },\n\ticon: testingResultsIcon,\n\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [Testing.ResultsPanelId, { mergeViewWithContainerWhenSingleView: true }]),\n\thideIfEmpty: true,\n\torder: 3,\n}, ViewContainerLocation.Panel, { doNotRegisterOpenCommand: true });\n\nconst viewsRegistry = Registry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry);\n\n\nviewsRegistry.registerViews([{\n\tid: Testing.ResultsViewId,\n\tname: localize('testResultsPanelName', \"Test Results\"),\n\tcontainerIcon: testingResultsIcon,\n\tcanToggleVisibility: false,\n\tcanMoveView: true,\n\twhen: TestingContextKeys.hasAnyResults.isEqualTo(true),\n\tctorDescriptor: new SyncDescriptor(TestResultsView),\n}], testResultsViewContainer);\n\nviewsRegistry.registerViewWelcomeContent(Testing.ExplorerViewId, {\n\tcontent: localize('noTestProvidersRegistered', \"No tests have been found in this workspace yet.\"),\n});\n\nviewsRegistry.registerViewWelcomeContent(Testing.ExplorerViewId, {\n\tcontent: '[' + localize('searchForAdditionalTestExtensions', \"Install Additional Test Extensions...\") + `](command:${TestCommandId.SearchForTestExtension})`,\n\torder: 10\n});\n\nviewsRegistry.registerViews([{\n\tid: Testing.ExplorerViewId,\n\tname: localize('testExplorer', \"Test Explorer\"),\n\tctorDescriptor: new SyncDescriptor(TestingExplorerView),\n\tcanToggleVisibility: true,\n\tcanMoveView: true,\n\tweight: 80,\n\torder: -999,\n\tcontainerIcon: testingViewIcon,\n\t// temporary until release, at which point we can show the welcome view:\n\twhen: ContextKeyExpr.greater(TestingContextKeys.providerCount.key, 0),\n}], viewContainer);\n\nallTestActions.forEach(registerAction2);\nregisterAction2(OpenMessageInEditorAction);\nregisterAction2(GoToPreviousMessageAction);\nregisterAction2(GoToNextMessageAction);\nregisterAction2(CloseTestPeek);\nregisterAction2(ToggleTestingPeekHistory);\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(TestingContentProvider, LifecyclePhase.Restored);\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(TestingPeekOpener, LifecyclePhase.Eventually);\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(TestingProgressTrigger, LifecyclePhase.Eventually);\n\nregisterEditorContribution(Testing.OutputPeekContributionId, TestingOutputPeekController, EditorContributionInstantiation.AfterFirstRender);\nregisterEditorContribution(Testing.DecorationsContributionId, TestingDecorations, EditorContributionInstantiation.AfterFirstRender);\n\nCommandsRegistry.registerCommand({\n\tid: '_revealTestInExplorer',\n\thandler: async (accessor: ServicesAccessor, testId: string | ITestItem, focus?: boolean) => {\n\t\taccessor.get(ITestExplorerFilterState).reveal.value = typeof testId === 'string' ? testId : testId.extId;\n\t\taccessor.get(IViewsService).openView(Testing.ExplorerViewId, focus);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'vscode.peekTestError',\n\thandler: async (accessor: ServicesAccessor, extId: string) => {\n\t\tconst lookup = accessor.get(ITestResultService).getStateById(extId);\n\t\tif (!lookup) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst [result, ownState] = lookup;\n\t\tconst opener = accessor.get(ITestingPeekOpener);\n\t\tif (opener.tryPeekFirstError(result, ownState)) { // fast path\n\t\t\treturn true;\n\t\t}\n\n\t\tfor (const test of result.tests) {\n\t\t\tif (TestId.compare(ownState.item.extId, test.item.extId) === TestPosition.IsChild && opener.tryPeekFirstError(result, test)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'vscode.revealTest',\n\thandler: async (accessor: ServicesAccessor, extId: string) => {\n\t\tconst test = accessor.get(ITestService).collection.getNodeById(extId);\n\t\tif (!test) {\n\t\t\treturn;\n\t\t}\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst openerService = accessor.get(IOpenerService);\n\n\t\tconst { range, uri } = test.item;\n\t\tif (!uri) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If an editor has the file open, there are decorations. Try to adjust the\n\t\t// revealed range to those decorations (#133441).\n\t\tconst position = accessor.get(ITestingDecorationsService).getDecoratedTestPosition(uri, extId) || range?.getStartPosition();\n\n\t\taccessor.get(ITestExplorerFilterState).reveal.value = extId;\n\t\taccessor.get(ITestingPeekOpener).closeAllPeeks();\n\n\t\tlet isFile = true;\n\t\ttry {\n\t\t\tif (!(await fileService.stat(uri)).isFile) {\n\t\t\t\tisFile = false;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignored\n\t\t}\n\n\t\tif (!isFile) {\n\t\t\tawait commandService.executeCommand(REVEAL_IN_EXPLORER_COMMAND_ID, uri);\n\t\t\treturn;\n\t\t}\n\n\t\tawait openerService.open(position\n\t\t\t? uri.with({ fragment: `L${position.lineNumber}:${position.column}` })\n\t\t\t: uri\n\t\t);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'vscode.runTestsById',\n\thandler: async (accessor: ServicesAccessor, group: TestRunProfileBitset, ...testIds: string[]) => {\n\t\tconst testService = accessor.get(ITestService);\n\t\tawait discoverAndRunTests(\n\t\t\taccessor.get(ITestService).collection,\n\t\t\taccessor.get(IProgressService),\n\t\t\ttestIds,\n\t\t\ttests => testService.runTests({ group, tests }),\n\t\t);\n\t}\n});\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration(testingConfiguration);\n"]}