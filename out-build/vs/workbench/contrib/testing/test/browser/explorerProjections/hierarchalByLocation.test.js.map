{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/testing/test/browser/explorerProjections/hierarchalByLocation.test.ts"],"names":[],"mappings":"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","file":"hierarchalByLocation.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Emitter } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { TreeProjection } from 'vs/workbench/contrib/testing/browser/explorerProjections/treeProjection';\nimport { TestId } from 'vs/workbench/contrib/testing/common/testId';\nimport { TestResultItemChange, TestResultItemChangeReason } from 'vs/workbench/contrib/testing/common/testResult';\nimport { TestDiffOpType, TestItemExpandState, TestResultItem, TestResultState } from 'vs/workbench/contrib/testing/common/testTypes';\nimport { TestTreeTestHarness } from 'vs/workbench/contrib/testing/test/browser/testObjectTree';\nimport { TestTestItem } from 'vs/workbench/contrib/testing/test/common/testStubs';\n\nclass TestHierarchicalByLocationProjection extends TreeProjection {\n}\n\nsuite('Workbench - Testing Explorer Hierarchal by Location Projection', () => {\n\tlet harness: TestTreeTestHarness<TestHierarchicalByLocationProjection>;\n\tlet onTestChanged: Emitter<TestResultItemChange>;\n\tlet resultsService: any;\n\tlet ds: DisposableStore;\n\n\tteardown(() => {\n\t\tds.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => {\n\t\tds = new DisposableStore();\n\t\tonTestChanged = ds.add(new Emitter());\n\t\tresultsService = {\n\t\t\tresults: [],\n\t\t\tonResultsChanged: () => undefined,\n\t\t\tonTestChanged: onTestChanged.event,\n\t\t\tgetStateById: () => ({ state: { state: 0 }, computedState: 0 }),\n\t\t};\n\n\t\tharness = ds.add(new TestTreeTestHarness(l => new TestHierarchicalByLocationProjection({}, l, resultsService as any)));\n\t});\n\n\ttest('renders initial tree', async () => {\n\t\tharness.flush();\n\t\tassert.deepStrictEqual(harness.tree.getRendered(), [\n\t\t\t{ e: 'a' }, { e: 'b' }\n\t\t]);\n\t});\n\n\ttest('expands children', async () => {\n\t\tharness.flush();\n\t\tharness.tree.expand(harness.projection.getElementByTestId(new TestId(['ctrlId', 'id-a']).toString())!);\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a', children: [{ e: 'aa' }, { e: 'ab' }] }, { e: 'b' }\n\t\t]);\n\t});\n\n\ttest('updates render if second test provider appears', async () => {\n\t\tharness.flush();\n\t\tharness.pushDiff({\n\t\t\top: TestDiffOpType.Add,\n\t\t\titem: { controllerId: 'ctrl2', expand: TestItemExpandState.Expanded, item: new TestTestItem(new TestId(['ctrlId2']), 'c').toTestItem() },\n\t\t}, {\n\t\t\top: TestDiffOpType.Add,\n\t\t\titem: { controllerId: 'ctrl2', expand: TestItemExpandState.NotExpandable, item: new TestTestItem(new TestId(['ctrlId2', 'id-c']), 'ca').toTestItem() },\n\t\t});\n\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'c', children: [{ e: 'ca' }] },\n\t\t\t{ e: 'root', children: [{ e: 'a' }, { e: 'b' }] }\n\t\t]);\n\t});\n\n\ttest('updates nodes if they add children', async () => {\n\t\tharness.flush();\n\t\tharness.tree.expand(harness.projection.getElementByTestId(new TestId(['ctrlId', 'id-a']).toString())!);\n\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a', children: [{ e: 'aa' }, { e: 'ab' }] },\n\t\t\t{ e: 'b' }\n\t\t]);\n\n\t\tharness.c.root.children.get('id-a')!.children.add(new TestTestItem(new TestId(['ctrlId', 'id-a', 'id-ac']), 'ac'));\n\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a', children: [{ e: 'aa' }, { e: 'ab' }, { e: 'ac' }] },\n\t\t\t{ e: 'b' }\n\t\t]);\n\t});\n\n\ttest('updates nodes if they remove children', async () => {\n\t\tharness.flush();\n\t\tharness.tree.expand(harness.projection.getElementByTestId(new TestId(['ctrlId', 'id-a']).toString())!);\n\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a', children: [{ e: 'aa' }, { e: 'ab' }] },\n\t\t\t{ e: 'b' }\n\t\t]);\n\n\t\tharness.c.root.children.get('id-a')!.children.delete('id-ab');\n\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a', children: [{ e: 'aa' }] },\n\t\t\t{ e: 'b' }\n\t\t]);\n\t});\n\n\ttest('applies state changes', async () => {\n\t\tharness.flush();\n\n\t\tconst resultInState = (state: TestResultState): TestResultItem => ({\n\t\t\titem: {\n\t\t\t\textId: new TestId(['ctrlId', 'id-a']).toString(),\n\t\t\t\tbusy: false,\n\t\t\t\tdescription: null,\n\t\t\t\terror: null,\n\t\t\t\tlabel: 'a',\n\t\t\t\trange: null,\n\t\t\t\tsortText: null,\n\t\t\t\ttags: [],\n\t\t\t\turi: undefined,\n\t\t\t},\n\t\t\ttasks: [],\n\t\t\townComputedState: state,\n\t\t\tcomputedState: state,\n\t\t\texpand: 0,\n\t\t\tcontrollerId: 'ctrl',\n\t\t});\n\n\t\t// Applies the change:\n\t\tresultsService.getStateById = () => [undefined, resultInState(TestResultState.Queued)];\n\t\tonTestChanged.fire({\n\t\t\treason: TestResultItemChangeReason.OwnStateChange,\n\t\t\tresult: null as any,\n\t\t\tpreviousState: TestResultState.Unset,\n\t\t\titem: resultInState(TestResultState.Queued),\n\t\t\tpreviousOwnDuration: undefined,\n\t\t});\n\t\tharness.projection.applyTo(harness.tree);\n\n\t\tassert.deepStrictEqual(harness.tree.getRendered('state'), [\n\t\t\t{ e: 'a', data: String(TestResultState.Queued) },\n\t\t\t{ e: 'b', data: String(TestResultState.Unset) }\n\t\t]);\n\n\t\t// Falls back if moved into unset state:\n\t\tresultsService.getStateById = () => [undefined, resultInState(TestResultState.Failed)];\n\t\tonTestChanged.fire({\n\t\t\treason: TestResultItemChangeReason.OwnStateChange,\n\t\t\tresult: null as any,\n\t\t\tpreviousState: TestResultState.Queued,\n\t\t\titem: resultInState(TestResultState.Unset),\n\t\t\tpreviousOwnDuration: undefined,\n\t\t});\n\t\tharness.projection.applyTo(harness.tree);\n\n\t\tassert.deepStrictEqual(harness.tree.getRendered('state'), [\n\t\t\t{ e: 'a', data: String(TestResultState.Failed) },\n\t\t\t{ e: 'b', data: String(TestResultState.Unset) }\n\t\t]);\n\t});\n\n\ttest('applies test changes (resort)', async () => {\n\t\tharness.flush();\n\t\tharness.tree.expand(harness.projection.getElementByTestId(new TestId(['ctrlId', 'id-a']).toString())!);\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a', children: [{ e: 'aa' }, { e: 'ab' }] }, { e: 'b' }\n\t\t]);\n\t\t// sortText causes order to change\n\t\tharness.pushDiff({\n\t\t\top: TestDiffOpType.Update,\n\t\t\titem: { extId: new TestId(['ctrlId', 'id-a', 'id-aa']).toString(), item: { sortText: \"z\" } }\n\t\t}, {\n\t\t\top: TestDiffOpType.Update,\n\t\t\titem: { extId: new TestId(['ctrlId', 'id-a', 'id-ab']).toString(), item: { sortText: \"a\" } }\n\t\t});\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a', children: [{ e: 'ab' }, { e: 'aa' }] }, { e: 'b' }\n\t\t]);\n\t\t// label causes order to change\n\t\tharness.pushDiff({\n\t\t\top: TestDiffOpType.Update,\n\t\t\titem: { extId: new TestId(['ctrlId', 'id-a', 'id-aa']).toString(), item: { sortText: undefined, label: \"z\" } }\n\t\t}, {\n\t\t\top: TestDiffOpType.Update,\n\t\t\titem: { extId: new TestId(['ctrlId', 'id-a', 'id-ab']).toString(), item: { sortText: undefined, label: \"a\" } }\n\t\t});\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a', children: [{ e: 'a' }, { e: 'z' }] }, { e: 'b' }\n\t\t]);\n\t\tharness.pushDiff({\n\t\t\top: TestDiffOpType.Update,\n\t\t\titem: { extId: new TestId(['ctrlId', 'id-a', 'id-aa']).toString(), item: { label: \"a2\" } }\n\t\t}, {\n\t\t\top: TestDiffOpType.Update,\n\t\t\titem: { extId: new TestId(['ctrlId', 'id-a', 'id-ab']).toString(), item: { label: \"z2\" } }\n\t\t});\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a', children: [{ e: 'a2' }, { e: 'z2' }] }, { e: 'b' }\n\t\t]);\n\t});\n\n\ttest('applies test changes (error)', async () => {\n\t\tharness.flush();\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a' }, { e: 'b' }\n\t\t]);\n\t\t// sortText causes order to change\n\t\tharness.pushDiff({\n\t\t\top: TestDiffOpType.Update,\n\t\t\titem: { extId: new TestId(['ctrlId', 'id-a']).toString(), item: { error: \"bad\" } }\n\t\t});\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a' }, { e: 'b' }\n\t\t]);\n\t\tharness.tree.expand(harness.projection.getElementByTestId(new TestId(['ctrlId', 'id-a']).toString())!);\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a', children: [{ e: 'bad' }, { e: 'aa' }, { e: 'ab' }] }, { e: 'b' }\n\t\t]);\n\t\tharness.pushDiff({\n\t\t\top: TestDiffOpType.Update,\n\t\t\titem: { extId: new TestId(['ctrlId', 'id-a']).toString(), item: { error: \"badder\" } }\n\t\t});\n\t\tassert.deepStrictEqual(harness.flush(), [\n\t\t\t{ e: 'a', children: [{ e: 'badder' }, { e: 'aa' }, { e: 'ab' }] }, { e: 'b' }\n\t\t]);\n\n\t});\n\n});\n\n"]}