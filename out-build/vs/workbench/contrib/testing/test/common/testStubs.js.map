{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/testing/test/common/testStubs.ts"],"names":[],"mappings":"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","file":"testStubs.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { MainThreadTestCollection } from 'vs/workbench/contrib/testing/common/mainThreadTestCollection';\nimport { ITestItem, TestsDiff } from 'vs/workbench/contrib/testing/common/testTypes';\nimport { TestId } from 'vs/workbench/contrib/testing/common/testId';\nimport { createTestItemChildren, ITestItemApi, ITestItemLike, TestItemCollection, TestItemEventOp } from 'vs/workbench/contrib/testing/common/testItemCollection';\n\nexport class TestTestItem implements ITestItemLike {\n\tprivate readonly props: ITestItem;\n\tprivate _canResolveChildren = false;\n\n\tpublic get tags() {\n\t\treturn this.props.tags.map(id => ({ id }));\n\t}\n\n\tpublic set tags(value) {\n\t\tthis.api.listener?.({ op: TestItemEventOp.SetTags, new: value, old: this.props.tags.map(t => ({ id: t })) });\n\t\tthis.props.tags = value.map(tag => tag.id);\n\t}\n\n\tpublic get canResolveChildren() {\n\t\treturn this._canResolveChildren;\n\t}\n\n\tpublic set canResolveChildren(value: boolean) {\n\t\tthis._canResolveChildren = value;\n\t\tthis.api.listener?.({ op: TestItemEventOp.UpdateCanResolveChildren, state: value });\n\t}\n\n\tpublic get parent() {\n\t\treturn this.api.parent;\n\t}\n\n\tpublic get id() {\n\t\treturn this._extId.localId;\n\t}\n\n\tpublic api: ITestItemApi<TestTestItem> = { controllerId: this._extId.controllerId };\n\n\tpublic children = createTestItemChildren(this.api, i => i.api, TestTestItem);\n\n\tconstructor(\n\t\tprivate readonly _extId: TestId,\n\t\tlabel: string,\n\t\turi?: URI,\n\t) {\n\t\tthis.props = {\n\t\t\textId: _extId.toString(),\n\t\t\tbusy: false,\n\t\t\tdescription: null,\n\t\t\terror: null,\n\t\t\tlabel,\n\t\t\trange: null,\n\t\t\tsortText: null,\n\t\t\ttags: [],\n\t\t\turi,\n\t\t};\n\t}\n\n\tpublic get<K extends keyof ITestItem>(key: K): ITestItem[K] {\n\t\treturn this.props[key];\n\t}\n\n\tpublic set<K extends keyof ITestItem>(key: K, value: ITestItem[K]) {\n\t\tthis.props[key] = value;\n\t\tthis.api.listener?.({ op: TestItemEventOp.SetProp, update: { [key]: value } });\n\t}\n\n\tpublic toTestItem(): ITestItem {\n\t\tconst props = { ...this.props };\n\t\tprops.extId = this._extId.toString();\n\t\treturn props;\n\t}\n}\n\nexport class TestTestCollection extends TestItemCollection<TestTestItem> {\n\tconstructor(controllerId = 'ctrlId') {\n\t\tconst root = new TestTestItem(new TestId([controllerId]), 'root');\n\t\t(root as any)._isRoot = true;\n\n\t\tsuper({\n\t\t\tcontrollerId,\n\t\t\tgetApiFor: t => t.api,\n\t\t\ttoITestItem: t => t.toTestItem(),\n\t\t\tgetChildren: t => t.children,\n\t\t\tgetDocumentVersion: () => undefined,\n\t\t\troot,\n\t\t});\n\t}\n\n\tpublic get currentDiff() {\n\t\treturn this.diff;\n\t}\n\n\tpublic setDiff(diff: TestsDiff) {\n\t\tthis.diff = diff;\n\t}\n}\n\n/**\n * Gets a main thread test collection initialized with the given set of\n * roots/stubs.\n */\nexport const getInitializedMainTestCollection = async (singleUse = testStubs.nested()) => {\n\tconst c = new MainThreadTestCollection(async (t, l) => singleUse.expand(t, l));\n\tawait singleUse.expand(singleUse.root.id, Infinity);\n\tc.apply(singleUse.collectDiff());\n\tsingleUse.dispose();\n\treturn c;\n};\n\nexport const testStubs = {\n\tnested: (idPrefix = 'id-') => {\n\t\tconst collection = new TestTestCollection();\n\t\tcollection.resolveHandler = item => {\n\t\t\tif (item === undefined) {\n\t\t\t\tconst a = new TestTestItem(new TestId(['ctrlId', 'id-a']), 'a', URI.file('/'));\n\t\t\t\ta.canResolveChildren = true;\n\t\t\t\tconst b = new TestTestItem(new TestId(['ctrlId', 'id-b']), 'b', URI.file('/'));\n\t\t\t\tcollection.root.children.add(a);\n\t\t\t\tcollection.root.children.add(b);\n\t\t\t} else if (item.id === idPrefix + 'a') {\n\t\t\t\titem.children.add(new TestTestItem(new TestId(['ctrlId', 'id-a', 'id-aa']), 'aa', URI.file('/')));\n\t\t\t\titem.children.add(new TestTestItem(new TestId(['ctrlId', 'id-a', 'id-ab']), 'ab', URI.file('/')));\n\t\t\t}\n\t\t};\n\n\t\treturn collection;\n\t},\n};\n"]}