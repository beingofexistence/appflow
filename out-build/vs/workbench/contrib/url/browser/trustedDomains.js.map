{"version":3,"sources":["vs/workbench/contrib/url/browser/trustedDomains.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAgBhG,MAAM,mBAAmB,GAAG,SAAG,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;IAE5D,QAAA,IAAI,GAA0B,mCAAmC,CAAC;IAClE,QAAA,IAAI,GAAkC,0CAA0C,CAAC;IAEjF,QAAA,IAAI,GAAiC;QACjD,EAAE,EAAE,sCAAsC;QAC1C,WAAW,EAAE;YACZ,WAAW,EAAE,IAAA,cAAQ,EAAC,CAAmC,EAAE,IAAwB,CAAC;YACpF,IAAI,EAAE,EAAE;SACR;QACD,OAAO,EAAE,KAAK,EAAE,QAA0B,EAAE,EAAE;YAC7C,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,mBAAG,CAAY,CAAC;YACnD,aAAa,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,mBAAmB,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YAC5G,OAAO;QACR,CAAC;KACD,CAAC;IAIK,KAAK,UAAU,IAAI,CACzB,cAAwB,EACxB,iBAAyB,EACzB,QAAa,EACb,iBAAsB,EACtB,cAAmB,EACnB,aAAkB,EAClB,gBAAqB;QAErB,MAAM,uBAAuB,GAAG,SAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;QAC7D,MAAM,uBAAuB,GAAG,uBAAuB,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7E,MAAM,SAAS,GAAG,uBAAuB,CAAC,KAAK,CAAC,uBAAuB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9F,MAAM,cAAc,GAAG,IAAI,GAAG,SAAS,CAAC;QACxC,MAAM,OAAO,GAA2C,EAAE,CAAC;QAE3D,OAAO,CAAC,IAAI,CAAC;YACZ,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA2B,EAAE,IAAW,EAAE,iBAAiB,CAAC;YAC5E,EAAE,EAAE,OAAO;YACX,OAAO,EAAE,iBAAiB;YAC1B,MAAM,EAAE,IAAI;SACZ,CAAC,CAAC;QAEH,MAAM,IAAI,GACT,uBAAuB,CAAC,MAAM,KAAK,CAAC;YACpC,uBAAuB,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CACvC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1E,IAAI,IAAI,EAAE;YACT,IAAI,uBAAuB,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACpD,MAAM,IAAI,GAAG,uBAAuB,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7D,OAAO,CAAC,IAAI,CAAC;oBACZ,IAAI,EAAE,MAAM;oBACZ,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA6B,EAAE,IAAwB,EAAE,IAAI,CAAC;oBAC9E,OAAO,EAAE,IAAI,GAAG,IAAI;oBACpB,EAAE,EAAE,OAAO;iBACX,CAAC,CAAC;aACH;SACD;aAAM;YACN,OAAO,CAAC,IAAI,CAAC;gBACZ,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA8B,EAAE,IAAkC,EAAE,SAAS,CAAC;gBAC9F,OAAO,EAAE,cAAc;gBACvB,EAAE,EAAE,OAAO;aACX,CAAC,CAAC;SACH;QAED,OAAO,CAAC,IAAI,CAAC;YACZ,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA+B,EAAE,IAA8C,CAAC;YAChG,OAAO,EAAE,GAAG;YACZ,EAAE,EAAE,OAAO;SACX,CAAC,CAAC;QACH,OAAO,CAAC,IAAI,CAAC;YACZ,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAoC,EAAE,IAAwB,CAAC;YAC/E,EAAE,EAAE,QAAQ;SACZ,CAAC,CAAC;QAEH,MAAM,YAAY,GAAG,MAAM,iBAAiB,CAAC,IAAI,CAChD,OAAO,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CACnC,CAAC;QAEF,IAAI,YAAY,IAAI,YAAY,CAAC,EAAE,EAAE;YACpC,QAAQ,YAAY,CAAC,EAAE,EAAE;gBACxB,KAAK,QAAQ;oBACZ,MAAM,aAAa,CAAC,UAAU,CAAC;wBAC9B,QAAQ,EAAE,mBAAmB,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC;wBACrE,UAAU,EAAE,OAAO;wBACnB,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;qBACzB,CAAC,CAAC;oBACH,OAAO,cAAc,CAAC;gBACvB,KAAK,OAAO,CAAC,CAAC;oBACb,MAAM,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC;oBACzC,IAAI,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC/C,cAAc,CAAC,MAAM,CAAC,YAAI,oCAA0D,CAAC;wBACrF,cAAc,CAAC,KAAK,CACnB,YAAI,EACJ,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,cAAc,EAAE,WAAW,CAAC,CAAC,gEAGhD,CAAC;wBAEF,OAAO,CAAC,GAAG,cAAc,EAAE,WAAW,CAAC,CAAC;qBACxC;iBACD;aACD;SACD;QAED,OAAO,EAAE,CAAC;IACX,CAAC;IA1FD,oBA0FC;IAED,wBAAwB;IACxB,SAAgB,IAAI,CAA8B,SAAiB;QAClE,MAAM,OAAO,GAAG,IAAI,GAAG,EAAU,CAAC;QAClC,IAAI,KAA6B,CAAC;QAElC,MAAM,aAAa,GAAG,iEAAiE,CAAC;QACxF,OAAO,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAC7C,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAC5C,IAAI,IAAI,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,sBAAsB,IAAI,GAAG,CAAC,CAAC;aAC3C;SACD;QACD,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC;IACrB,CAAC;IAZD,oBAYC;IAED,KAAK,UAAU,UAAU,CAAC,WAAgB,EAAW,eAAoB,EAAe,cAAmB;QAC1G,MAAM,aAAa,GAAG,cAAc,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACtF,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC;YAClC,IAAI,OAAO,CAAa,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YACvE,OAAO,CAAC,GAAG,CAAW,aAAa,CAAC,GAAG,CAAC,KAAK,EAAC,YAAY,EAAC,EAAE;gBAC5D,IAAI;oBACH,MAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;oBAC/B,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;oBACnF,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBAC7C,IAAI,CAAC,MAAM,EAAE;wBACZ,OAAO,EAAE,CAAC;qBACV;oBACD,MAAM,SAAS,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBACnH,OAAO,IAAI,CAA8B,SAAS,CAAC,CAAC;iBACpD;gBAAC,MAAM;oBACP,OAAO,EAAE,CAAC;iBACV;YACF,CAAC,CAAC,CAAC;SAAC,CAAC,CAAC;QAEP,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,EAAU,CAAC,CAAC;QAC7G,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;IACjB,CAAC;IAYM,KAAK,UAAU,IAAI,CAAe,QAA0B;QAClE,MAAM,EAAE,qBAAqB,EAAE,cAAc,EAAE,GAAG,IAAI,CAAqB,QAAQ,CAAC,CAAC;QACrF,MAAM,CAAC,gBAAgB,EAAE,WAAW,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAwB,QAAQ,CAAC,EAAE,IAAI,CAA6B,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/I,OAAO;YACN,gBAAgB;YAChB,WAAW;YACX,qBAAqB;YACrB,cAAc;SACd,CAAC;IACH,CAAC;IATD,oBASC;IAEM,KAAK,UAAU,IAAI,CAAwB,QAA0B;QAC3E,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAG,CAAU,CAAC;QAC/C,MAAM,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,eAAG,CAAc,CAAC;QACvD,MAAM,uBAAuB,GAAG,QAAQ,CAAC,GAAG,CAAC,eAAG,CAAsB,CAAC;QACvE,OAAO,UAAU,CAAC,WAAW,EAAE,eAAe,EAAE,uBAAuB,CAAC,CAAC;IAC1E,CAAC;IALD,oBAKC;IAEM,KAAK,UAAU,IAAI,CAA6B,QAA0B;QAChF,MAAM,qBAAqB,GAAG,QAAQ,CAAC,GAAG,CAAC,oBAAG,CAAoB,CAAC;QACnE,OAAO,qBAAqB,CAAC,kCAAkC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,qBAAqB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC;YAClJ,CAAC,CAAC,CAAC,oBAAoB,CAAC;YACxB,CAAC,CAAC,EAAE,CAAC;IACP,CAAC;IALD,oBAKC;IAED,SAAgB,IAAI,CAAqB,QAA0B;QAClE,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,aAAG,CAAa,CAAC;QACrD,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,oBAAG,CAAa,CAAC;QACrD,MAAM,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,wBAAG,CAAiC,CAAC;QAE7E,MAAM,qBAAqB,GAAG;YAC7B,GAAG,cAAc,CAAC,4BAA4B,IAAI,EAAE;YACpD,GAAG,kBAAkB,CAAC,OAAO,EAAE,wBAAwB,IAAI,EAAE;SAC7D,CAAC;QAEF,IAAI,cAAc,GAAa,EAAE,CAAC;QAClC,IAAI;YACH,MAAM,iBAAiB,GAAG,cAAc,CAAC,GAAG,CAAC,YAAI,oCAAkD,CAAC;YACpG,IAAI,iBAAiB,EAAE;gBACtB,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;aAC/C;SACD;QAAC,OAAO,GAAG,EAAE,GAAG;QAEjB,OAAO;YACN,qBAAqB;YACrB,cAAc;SACd,CAAC;IACH,CAAC;IAtBD,oBAsBC","file":"trustedDomains.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IQuickInputService, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IAuthenticationService } from 'vs/workbench/services/authentication/common/authentication';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\n\nconst TRUSTED_DOMAINS_URI = URI.parse('trustedDomains:/Trusted Domains');\n\nexport const TRUSTED_DOMAINS_STORAGE_KEY = 'http.linkProtectionTrustedDomains';\nexport const TRUSTED_DOMAINS_CONTENT_STORAGE_KEY = 'http.linkProtectionTrustedDomainsContent';\n\nexport const manageTrustedDomainSettingsCommand = {\n\tid: 'workbench.action.manageTrustedDomain',\n\tdescription: {\n\t\tdescription: localize('trustedDomain.manageTrustedDomain', 'Manage Trusted Domains'),\n\t\targs: []\n\t},\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\teditorService.openEditor({ resource: TRUSTED_DOMAINS_URI, languageId: 'jsonc', options: { pinned: true } });\n\t\treturn;\n\t}\n};\n\ntype ConfigureTrustedDomainsQuickPickItem = IQuickPickItem & ({ id: 'manage' } | { id: 'trust'; toTrust: string });\n\nexport async function configureOpenerTrustedDomainsHandler(\n\ttrustedDomains: string[],\n\tdomainToConfigure: string,\n\tresource: URI,\n\tquickInputService: IQuickInputService,\n\tstorageService: IStorageService,\n\teditorService: IEditorService,\n\ttelemetryService: ITelemetryService,\n) {\n\tconst parsedDomainToConfigure = URI.parse(domainToConfigure);\n\tconst toplevelDomainSegements = parsedDomainToConfigure.authority.split('.');\n\tconst domainEnd = toplevelDomainSegements.slice(toplevelDomainSegements.length - 2).join('.');\n\tconst topLevelDomain = '*.' + domainEnd;\n\tconst options: ConfigureTrustedDomainsQuickPickItem[] = [];\n\n\toptions.push({\n\t\ttype: 'item',\n\t\tlabel: localize('trustedDomain.trustDomain', 'Trust {0}', domainToConfigure),\n\t\tid: 'trust',\n\t\ttoTrust: domainToConfigure,\n\t\tpicked: true\n\t});\n\n\tconst isIP =\n\t\ttoplevelDomainSegements.length === 4 &&\n\t\ttoplevelDomainSegements.every(segment =>\n\t\t\tNumber.isInteger(+segment) || Number.isInteger(+segment.split(':')[0]));\n\n\tif (isIP) {\n\t\tif (parsedDomainToConfigure.authority.includes(':')) {\n\t\t\tconst base = parsedDomainToConfigure.authority.split(':')[0];\n\t\t\toptions.push({\n\t\t\t\ttype: 'item',\n\t\t\t\tlabel: localize('trustedDomain.trustAllPorts', 'Trust {0} on all ports', base),\n\t\t\t\ttoTrust: base + ':*',\n\t\t\t\tid: 'trust'\n\t\t\t});\n\t\t}\n\t} else {\n\t\toptions.push({\n\t\t\ttype: 'item',\n\t\t\tlabel: localize('trustedDomain.trustSubDomain', 'Trust {0} and all its subdomains', domainEnd),\n\t\t\ttoTrust: topLevelDomain,\n\t\t\tid: 'trust'\n\t\t});\n\t}\n\n\toptions.push({\n\t\ttype: 'item',\n\t\tlabel: localize('trustedDomain.trustAllDomains', 'Trust all domains (disables link protection)'),\n\t\ttoTrust: '*',\n\t\tid: 'trust'\n\t});\n\toptions.push({\n\t\ttype: 'item',\n\t\tlabel: localize('trustedDomain.manageTrustedDomains', 'Manage Trusted Domains'),\n\t\tid: 'manage'\n\t});\n\n\tconst pickedResult = await quickInputService.pick<ConfigureTrustedDomainsQuickPickItem>(\n\t\toptions, { activeItem: options[0] }\n\t);\n\n\tif (pickedResult && pickedResult.id) {\n\t\tswitch (pickedResult.id) {\n\t\t\tcase 'manage':\n\t\t\t\tawait editorService.openEditor({\n\t\t\t\t\tresource: TRUSTED_DOMAINS_URI.with({ fragment: resource.toString() }),\n\t\t\t\t\tlanguageId: 'jsonc',\n\t\t\t\t\toptions: { pinned: true }\n\t\t\t\t});\n\t\t\t\treturn trustedDomains;\n\t\t\tcase 'trust': {\n\t\t\t\tconst itemToTrust = pickedResult.toTrust;\n\t\t\t\tif (trustedDomains.indexOf(itemToTrust) === -1) {\n\t\t\t\t\tstorageService.remove(TRUSTED_DOMAINS_CONTENT_STORAGE_KEY, StorageScope.APPLICATION);\n\t\t\t\t\tstorageService.store(\n\t\t\t\t\t\tTRUSTED_DOMAINS_STORAGE_KEY,\n\t\t\t\t\t\tJSON.stringify([...trustedDomains, itemToTrust]),\n\t\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\t\tStorageTarget.USER\n\t\t\t\t\t);\n\n\t\t\t\t\treturn [...trustedDomains, itemToTrust];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [];\n}\n\n// Exported for testing.\nexport function extractGitHubRemotesFromGitConfig(gitConfig: string): string[] {\n\tconst domains = new Set<string>();\n\tlet match: RegExpExecArray | null;\n\n\tconst RemoteMatcher = /^\\s*url\\s*=\\s*(?:git@|https:\\/\\/)github\\.com(?::|\\/)(\\S*)\\s*$/mg;\n\twhile (match = RemoteMatcher.exec(gitConfig)) {\n\t\tconst repo = match[1].replace(/\\.git$/, '');\n\t\tif (repo) {\n\t\t\tdomains.add(`https://github.com/${repo}/`);\n\t\t}\n\t}\n\treturn [...domains];\n}\n\nasync function getRemotes(fileService: IFileService, textFileService: ITextFileService, contextService: IWorkspaceContextService): Promise<string[]> {\n\tconst workspaceUris = contextService.getWorkspace().folders.map(folder => folder.uri);\n\tconst domains = await Promise.race([\n\t\tnew Promise<string[][]>(resolve => setTimeout(() => resolve([]), 2000)),\n\t\tPromise.all<string[]>(workspaceUris.map(async workspaceUri => {\n\t\t\ttry {\n\t\t\t\tconst path = workspaceUri.path;\n\t\t\t\tconst uri = workspaceUri.with({ path: `${path !== '/' ? path : ''}/.git/config` });\n\t\t\t\tconst exists = await fileService.exists(uri);\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\tconst gitConfig = (await (textFileService.read(uri, { acceptTextOnly: true }).catch(() => ({ value: '' })))).value;\n\t\t\t\treturn extractGitHubRemotesFromGitConfig(gitConfig);\n\t\t\t} catch {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}))]);\n\n\tconst set = domains.reduce((set, list) => list.reduce((set, item) => set.add(item), set), new Set<string>());\n\treturn [...set];\n}\n\nexport interface IStaticTrustedDomains {\n\treadonly defaultTrustedDomains: string[];\n\treadonly trustedDomains: string[];\n}\n\nexport interface ITrustedDomains extends IStaticTrustedDomains {\n\treadonly userDomains: string[];\n\treadonly workspaceDomains: string[];\n}\n\nexport async function readTrustedDomains(accessor: ServicesAccessor): Promise<ITrustedDomains> {\n\tconst { defaultTrustedDomains, trustedDomains } = readStaticTrustedDomains(accessor);\n\tconst [workspaceDomains, userDomains] = await Promise.all([readWorkspaceTrustedDomains(accessor), readAuthenticationTrustedDomains(accessor)]);\n\treturn {\n\t\tworkspaceDomains,\n\t\tuserDomains,\n\t\tdefaultTrustedDomains,\n\t\ttrustedDomains,\n\t};\n}\n\nexport async function readWorkspaceTrustedDomains(accessor: ServicesAccessor): Promise<string[]> {\n\tconst fileService = accessor.get(IFileService);\n\tconst textFileService = accessor.get(ITextFileService);\n\tconst workspaceContextService = accessor.get(IWorkspaceContextService);\n\treturn getRemotes(fileService, textFileService, workspaceContextService);\n}\n\nexport async function readAuthenticationTrustedDomains(accessor: ServicesAccessor): Promise<string[]> {\n\tconst authenticationService = accessor.get(IAuthenticationService);\n\treturn authenticationService.isAuthenticationProviderRegistered('github') && ((await authenticationService.getSessions('github')) ?? []).length > 0\n\t\t? [`https://github.com`]\n\t\t: [];\n}\n\nexport function readStaticTrustedDomains(accessor: ServicesAccessor): IStaticTrustedDomains {\n\tconst storageService = accessor.get(IStorageService);\n\tconst productService = accessor.get(IProductService);\n\tconst environmentService = accessor.get(IBrowserWorkbenchEnvironmentService);\n\n\tconst defaultTrustedDomains = [\n\t\t...productService.linkProtectionTrustedDomains ?? [],\n\t\t...environmentService.options?.additionalTrustedDomains ?? []\n\t];\n\n\tlet trustedDomains: string[] = [];\n\ttry {\n\t\tconst trustedDomainsSrc = storageService.get(TRUSTED_DOMAINS_STORAGE_KEY, StorageScope.APPLICATION);\n\t\tif (trustedDomainsSrc) {\n\t\t\ttrustedDomains = JSON.parse(trustedDomainsSrc);\n\t\t}\n\t} catch (err) { }\n\n\treturn {\n\t\tdefaultTrustedDomains,\n\t\ttrustedDomains,\n\t};\n}\n"]}