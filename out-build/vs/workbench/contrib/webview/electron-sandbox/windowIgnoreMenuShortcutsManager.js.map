{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/webview/electron-sandbox/windowIgnoreMenuShortcutsManager.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAShG,MAAa,IAAI;QAMhB,YACC,oBAAyB,EACzB,kBAAwB,EACP,CAAwB;YAAxB,MAAC,GAAD,CAAC,CAAuB;YAEzC,IAAI,CAAC,CAAC,GAAyB,oBAAoB,CAAC,QAAQ,CAAS,sBAAsB,CAAC,KAAK,QAAQ,CAAC;YAE1G,IAAI,CAAC,CAAC,GAAqB,kBAAY,CAAC,SAAS,CAAyB,kBAAkB,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;QACrH,CAAC;QAEM,QAAQ;YACd,IAAI,CAAC,CAAC,CAAsB,IAAI,CAAC,CAAC;QACnC,CAAC;QAEM,OAAO;YACb,IAAI,CAAC,CAAC,CAAsB,KAAK,CAAC,CAAC;QACpC,CAAC;QAED,IAAY,CAAC;YACZ,OAAO,aAAE,IAAa,IAAI,CAAC,CAAC,CAAuB;QACpD,CAAC;QAES,CAAC,CAAsB,KAAc;YAC9C,IAAI,IAAI,CAAC,CAAC,EAAqC;gBAC9C,IAAI,CAAC,CAAC,CAAmB,sBAAsB,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAkB,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;aACvG;QACF,CAAC;KACD;IAjCD,oBAiCC","file":"windowIgnoreMenuShortcutsManager.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IMainProcessService } from 'vs/platform/ipc/common/mainProcessService';\nimport { INativeHostService } from 'vs/platform/native/common/native';\nimport { IWebviewManagerService } from 'vs/platform/webview/common/webviewManagerService';\n\nexport class WindowIgnoreMenuShortcutsManager {\n\n\tprivate readonly _isUsingNativeTitleBars: boolean;\n\n\tprivate readonly _webviewMainService: IWebviewManagerService;\n\n\tconstructor(\n\t\tconfigurationService: IConfigurationService,\n\t\tmainProcessService: IMainProcessService,\n\t\tprivate readonly _nativeHostService: INativeHostService\n\t) {\n\t\tthis._isUsingNativeTitleBars = configurationService.getValue<string>('window.titleBarStyle') === 'native';\n\n\t\tthis._webviewMainService = ProxyChannel.toService<IWebviewManagerService>(mainProcessService.getChannel('webview'));\n\t}\n\n\tpublic didFocus(): void {\n\t\tthis.setIgnoreMenuShortcuts(true);\n\t}\n\n\tpublic didBlur(): void {\n\t\tthis.setIgnoreMenuShortcuts(false);\n\t}\n\n\tprivate get _shouldToggleMenuShortcutsEnablement() {\n\t\treturn isMacintosh || this._isUsingNativeTitleBars;\n\t}\n\n\tprotected setIgnoreMenuShortcuts(value: boolean) {\n\t\tif (this._shouldToggleMenuShortcutsEnablement) {\n\t\t\tthis._webviewMainService.setIgnoreMenuShortcuts({ windowId: this._nativeHostService.windowId }, value);\n\t\t}\n\t}\n}\n"]}