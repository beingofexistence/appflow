{"version":3,"sources":["vs/workbench/contrib/webview/electron-sandbox/webviewCommands.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,MAAa,IAAgC,SAAQ,aAAG;QAEvD;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,6CAA6C;gBACjD,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAgB,EAAE,IAA8B,CAAC,EAAE,QAAQ,EAAE,8BAA8B,EAAE;gBAC1H,QAAQ,EAAE,4BAAG,CAAQ,SAAS;gBAC9B,EAAE,EAAE,IAAI;aACR,CAAC,CAAC;QACJ,CAAC;QAED,KAAK,CAAC,GAAG,CAAC,QAA0B;YACnC,MAAM,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,aAAI,CAAe,CAAC;YAE3D,MAAM,qBAAqB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,CAAC;YAChF,IAAI,qBAAqB,CAAC,MAAM,EAAE;gBACjC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAoB,EAAE,IAAwD,CAAC,CAAC,CAAC;gBAC3G,iBAAiB,CAAC,YAAY,EAAE,CAAC;aACjC;QACF,CAAC;KACD;IApBD,oBAoBC","file":"webviewCommands.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Action2 } from 'vs/platform/actions/common/actions';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { INativeHostService } from 'vs/platform/native/common/native';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\n\nexport class OpenWebviewDeveloperToolsAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.webview.openDeveloperTools',\n\t\t\ttitle: { value: nls.localize('openToolsLabel', \"Open Webview Developer Tools\"), original: 'Open Webview Developer Tools' },\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst nativeHostService = accessor.get(INativeHostService);\n\n\t\tconst iframeWebviewElements = document.querySelectorAll('iframe.webview.ready');\n\t\tif (iframeWebviewElements.length) {\n\t\t\tconsole.info(nls.localize('iframeWebviewAlert', \"Using standard dev tools to debug iframe based webview\"));\n\t\t\tnativeHostService.openDevTools();\n\t\t}\n\t}\n}\n"]}