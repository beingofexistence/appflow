{"version":3,"sources":["vs/workbench/contrib/webview/browser/webview.contribution.ts"],"names":[],"mappings":"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","file":"webview.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MultiCommand, RedoCommand, SelectAllCommand, UndoCommand } from 'vs/editor/browser/editorExtensions';\nimport { CopyAction, CutAction, PasteAction } from 'vs/editor/contrib/clipboard/browser/clipboard';\nimport * as nls from 'vs/nls';\nimport { MenuId, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IWebviewService, IWebview } from 'vs/workbench/contrib/webview/browser/webview';\nimport { WebviewInput } from 'vs/workbench/contrib/webviewPanel/browser/webviewEditorInput';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\n\n\nconst PRIORITY = 100;\n\nfunction overrideCommandForWebview(command: MultiCommand | undefined, f: (webview: IWebview) => void) {\n\tcommand?.addImplementation(PRIORITY, 'webview', accessor => {\n\t\tconst webviewService = accessor.get(IWebviewService);\n\t\tconst webview = webviewService.activeWebview;\n\t\tif (webview?.isFocused) {\n\t\t\tf(webview);\n\t\t\treturn true;\n\t\t}\n\n\t\t// When focused in a custom menu try to fallback to the active webview\n\t\t// This is needed for context menu actions and the menubar\n\t\tif (document.activeElement?.classList.contains('action-menu-item')) {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tif (editorService.activeEditor instanceof WebviewInput) {\n\t\t\t\tf(editorService.activeEditor.webview);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t});\n}\n\noverrideCommandForWebview(UndoCommand, webview => webview.undo());\noverrideCommandForWebview(RedoCommand, webview => webview.redo());\noverrideCommandForWebview(SelectAllCommand, webview => webview.selectAll());\noverrideCommandForWebview(CopyAction, webview => webview.copy());\noverrideCommandForWebview(PasteAction, webview => webview.paste());\noverrideCommandForWebview(CutAction, webview => webview.cut());\n\nexport const PreventDefaultContextMenuItemsContextKeyName = 'preventDefaultContextMenuItems';\n\nif (CutAction) {\n\tMenuRegistry.appendMenuItem(MenuId.WebviewContext, {\n\t\tcommand: {\n\t\t\tid: CutAction.id,\n\t\t\ttitle: nls.localize('cut', \"Cut\"),\n\t\t},\n\t\tgroup: '5_cutcopypaste',\n\t\torder: 1,\n\t\twhen: ContextKeyExpr.not(PreventDefaultContextMenuItemsContextKeyName),\n\t});\n}\n\nif (CopyAction) {\n\tMenuRegistry.appendMenuItem(MenuId.WebviewContext, {\n\t\tcommand: {\n\t\t\tid: CopyAction.id,\n\t\t\ttitle: nls.localize('copy', \"Copy\"),\n\t\t},\n\t\tgroup: '5_cutcopypaste',\n\t\torder: 2,\n\t\twhen: ContextKeyExpr.not(PreventDefaultContextMenuItemsContextKeyName),\n\t});\n}\n\nif (PasteAction) {\n\tMenuRegistry.appendMenuItem(MenuId.WebviewContext, {\n\t\tcommand: {\n\t\t\tid: PasteAction.id,\n\t\t\ttitle: nls.localize('paste', \"Paste\"),\n\t\t},\n\t\tgroup: '5_cutcopypaste',\n\t\torder: 3,\n\t\twhen: ContextKeyExpr.not(PreventDefaultContextMenuItemsContextKeyName),\n\t});\n}\n"]}