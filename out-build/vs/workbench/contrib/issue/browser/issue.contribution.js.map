{"version":3,"sources":["vs/workbench/contrib/issue/browser/issue.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;IAahG,IAAM,oBAAoB,GAA1B,MAAM,oBAAqB,SAAQ,yBAAI;QACtC,YAA6B,cAAmB;YAC/C,KAAK,CAAC,cAAc,CAAC,CAAC;QACvB,CAAC;KACD,CAAA;IAJK,oBAAoB;QACZ,WAAA,oBAAG,CAAA;OADX,oBAAoB,CAIzB;IAED,cAAG,CAAM,EAAE,CAAkC,0BAAU,CAAC,SAAS,CAAC,CAAC,6BAA6B,CAAC,oBAAoB,kCAA0B,CAAC;IAEhJ,IAAA,gBAAG,EAAe,YAAI,EAAoB,mBAAI,oCAAuC,CAAC;IAEtF,cAAG,CAAc,eAAe,CAAC,yBAAyB,EAAE,CAAC,QAAQ,EAAE,EAAE;QACxE,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAmB,EAAE,IAAyD,CAAC,CAAC;IACrG,CAAC,CAAC,CAAC","file":"issue.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { WebIssueService } from 'vs/workbench/services/issue/browser/issueService';\nimport { IWorkbenchIssueService } from 'vs/workbench/services/issue/common/issue';\nimport { BaseIssueContribution } from 'vs/workbench/contrib/issue/common/issue.contribution';\n\nclass WebIssueContribution extends BaseIssueContribution {\n\tconstructor(@IProductService productService: IProductService) {\n\t\tsuper(productService);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(WebIssueContribution, LifecyclePhase.Restored);\n\nregisterSingleton(IWorkbenchIssueService, WebIssueService, InstantiationType.Delayed);\n\nCommandsRegistry.registerCommand('_issues.getSystemStatus', (accessor) => {\n\treturn nls.localize('statusUnsupported', \"The --status argument is not yet supported in browsers.\");\n});\n"]}