{"version":3,"sources":["vs/workbench/contrib/bulkEdit/browser/preview/bulkEdit.contribution.ts"],"names":[],"mappings":"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","file":"bulkEdit.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { IBulkEditService, ResourceEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { BulkEditPane } from 'vs/workbench/contrib/bulkEdit/browser/preview/bulkEditPane';\nimport { IViewContainersRegistry, Extensions as ViewContainerExtensions, ViewContainerLocation, IViewsRegistry, IViewsService } from 'vs/workbench/common/views';\nimport { FocusedViewContext } from 'vs/workbench/common/contextkeys';\nimport { localize } from 'vs/nls';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { RawContextKey, IContextKeyService, IContextKey, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { BulkEditPreviewProvider } from 'vs/workbench/contrib/bulkEdit/browser/preview/bulkEditPreview';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { WorkbenchListFocusContextKey } from 'vs/platform/list/browser/listService';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { MenuId, registerAction2, Action2 } from 'vs/platform/actions/common/actions';\nimport { EditorResourceAccessor, SideBySideEditor } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport type { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport Severity from 'vs/base/common/severity';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\n\nasync function getBulkEditPane(viewsService: IViewsService): Promise<BulkEditPane | undefined> {\n\tconst view = await viewsService.openView(BulkEditPane.ID, true);\n\tif (view instanceof BulkEditPane) {\n\t\treturn view;\n\t}\n\treturn undefined;\n}\n\nclass UXState {\n\n\tprivate readonly _activePanel: string | undefined;\n\n\tconstructor(\n\t\t@IPaneCompositePartService private readonly _paneCompositeService: IPaneCompositePartService,\n\t\t@IEditorGroupsService private readonly _editorGroupsService: IEditorGroupsService,\n\t) {\n\t\tthis._activePanel = _paneCompositeService.getActivePaneComposite(ViewContainerLocation.Panel)?.getId();\n\t}\n\n\tasync restore(panels: boolean, editors: boolean): Promise<void> {\n\n\t\t// (1) restore previous panel\n\t\tif (panels) {\n\t\t\tif (typeof this._activePanel === 'string') {\n\t\t\t\tawait this._paneCompositeService.openPaneComposite(this._activePanel, ViewContainerLocation.Panel);\n\t\t\t} else {\n\t\t\t\tthis._paneCompositeService.hideActivePaneComposite(ViewContainerLocation.Panel);\n\t\t\t}\n\t\t}\n\n\t\t// (2) close preview editors\n\t\tif (editors) {\n\t\t\tfor (const group of this._editorGroupsService.groups) {\n\t\t\t\tconst previewEditors: EditorInput[] = [];\n\t\t\t\tfor (const input of group.editors) {\n\n\t\t\t\t\tconst resource = EditorResourceAccessor.getCanonicalUri(input, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\t\t\t\tif (resource?.scheme === BulkEditPreviewProvider.Schema) {\n\t\t\t\t\t\tpreviewEditors.push(input);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (previewEditors.length) {\n\t\t\t\t\tgroup.closeEditors(previewEditors, { preserveFocus: true });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass PreviewSession {\n\tconstructor(\n\t\treadonly uxState: UXState,\n\t\treadonly cts: CancellationTokenSource = new CancellationTokenSource(),\n\t) { }\n}\n\nclass BulkEditPreviewContribution {\n\n\tstatic readonly ctxEnabled = new RawContextKey('refactorPreview.enabled', false);\n\n\tprivate readonly _ctxEnabled: IContextKey<boolean>;\n\n\tprivate _activeSession: PreviewSession | undefined;\n\n\tconstructor(\n\t\t@IPaneCompositePartService private readonly _paneCompositeService: IPaneCompositePartService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IEditorGroupsService private readonly _editorGroupsService: IEditorGroupsService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IBulkEditService bulkEditService: IBulkEditService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tbulkEditService.setPreviewHandler(edits => this._previewEdit(edits));\n\t\tthis._ctxEnabled = BulkEditPreviewContribution.ctxEnabled.bindTo(contextKeyService);\n\t}\n\n\tprivate async _previewEdit(edits: ResourceEdit[]): Promise<ResourceEdit[]> {\n\t\tthis._ctxEnabled.set(true);\n\n\t\tconst uxState = this._activeSession?.uxState ?? new UXState(this._paneCompositeService, this._editorGroupsService);\n\t\tconst view = await getBulkEditPane(this._viewsService);\n\t\tif (!view) {\n\t\t\tthis._ctxEnabled.set(false);\n\t\t\treturn edits;\n\t\t}\n\n\t\t// check for active preview session and let the user decide\n\t\tif (view.hasInput()) {\n\t\t\tconst { confirmed } = await this._dialogService.confirm({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage: localize('overlap', \"Another refactoring is being previewed.\"),\n\t\t\t\tdetail: localize('detail', \"Press 'Continue' to discard the previous refactoring and continue with the current refactoring.\"),\n\t\t\t\tprimaryButton: localize({ key: 'continue', comment: ['&& denotes a mnemonic'] }, \"&&Continue\")\n\t\t\t});\n\n\t\t\tif (!confirmed) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// session\n\t\tlet session: PreviewSession;\n\t\tif (this._activeSession) {\n\t\t\tawait this._activeSession.uxState.restore(false, true);\n\t\t\tthis._activeSession.cts.dispose(true);\n\t\t\tsession = new PreviewSession(uxState);\n\t\t} else {\n\t\t\tsession = new PreviewSession(uxState);\n\t\t}\n\t\tthis._activeSession = session;\n\n\t\t// the actual work...\n\t\ttry {\n\n\t\t\treturn await view.setInput(edits, session.cts.token) ?? [];\n\n\t\t} finally {\n\t\t\t// restore UX state\n\t\t\tif (this._activeSession === session) {\n\t\t\t\tawait this._activeSession.uxState.restore(true, true);\n\t\t\t\tthis._activeSession.cts.dispose();\n\t\t\t\tthis._ctxEnabled.set(false);\n\t\t\t\tthis._activeSession = undefined;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// CMD: accept\nregisterAction2(class ApplyAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'refactorPreview.apply',\n\t\t\ttitle: { value: localize('apply', \"Apply Refactoring\"), original: 'Apply Refactoring' },\n\t\t\tcategory: { value: localize('cat', \"Refactor Preview\"), original: 'Refactor Preview' },\n\t\t\ticon: Codicon.check,\n\t\t\tprecondition: ContextKeyExpr.and(BulkEditPreviewContribution.ctxEnabled, BulkEditPane.ctxHasCheckedChanges),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.BulkEditContext,\n\t\t\t\torder: 1\n\t\t\t}],\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib - 10,\n\t\t\t\twhen: ContextKeyExpr.and(BulkEditPreviewContribution.ctxEnabled, FocusedViewContext.isEqualTo(BulkEditPane.ID)),\n\t\t\t\tprimary: KeyMod.Shift + KeyCode.Enter,\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<any> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = await getBulkEditPane(viewsService);\n\t\tview?.accept();\n\t}\n});\n\n// CMD: discard\nregisterAction2(class DiscardAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'refactorPreview.discard',\n\t\t\ttitle: { value: localize('Discard', \"Discard Refactoring\"), original: 'Discard Refactoring' },\n\t\t\tcategory: { value: localize('cat', \"Refactor Preview\"), original: 'Refactor Preview' },\n\t\t\ticon: Codicon.clearAll,\n\t\t\tprecondition: BulkEditPreviewContribution.ctxEnabled,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.BulkEditContext,\n\t\t\t\torder: 2\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = await getBulkEditPane(viewsService);\n\t\tview?.discard();\n\t}\n});\n\n\n// CMD: toggle change\nregisterAction2(class ToggleAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'refactorPreview.toggleCheckedState',\n\t\t\ttitle: { value: localize('toogleSelection', \"Toggle Change\"), original: 'Toggle Change' },\n\t\t\tcategory: { value: localize('cat', \"Refactor Preview\"), original: 'Refactor Preview' },\n\t\t\tprecondition: BulkEditPreviewContribution.ctxEnabled,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: WorkbenchListFocusContextKey,\n\t\t\t\tprimary: KeyCode.Space,\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.BulkEditContext,\n\t\t\t\tgroup: 'navigation'\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = await getBulkEditPane(viewsService);\n\t\tview?.toggleChecked();\n\t}\n});\n\n\n// CMD: toggle category\nregisterAction2(class GroupByFile extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'refactorPreview.groupByFile',\n\t\t\ttitle: { value: localize('groupByFile', \"Group Changes By File\"), original: 'Group Changes By File' },\n\t\t\tcategory: { value: localize('cat', \"Refactor Preview\"), original: 'Refactor Preview' },\n\t\t\ticon: Codicon.ungroupByRefType,\n\t\t\tprecondition: ContextKeyExpr.and(BulkEditPane.ctxHasCategories, BulkEditPane.ctxGroupByFile.negate(), BulkEditPreviewContribution.ctxEnabled),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.BulkEditTitle,\n\t\t\t\twhen: ContextKeyExpr.and(BulkEditPane.ctxHasCategories, BulkEditPane.ctxGroupByFile.negate()),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3,\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = await getBulkEditPane(viewsService);\n\t\tview?.groupByFile();\n\t}\n});\n\nregisterAction2(class GroupByType extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'refactorPreview.groupByType',\n\t\t\ttitle: { value: localize('groupByType', \"Group Changes By Type\"), original: 'Group Changes By Type' },\n\t\t\tcategory: { value: localize('cat', \"Refactor Preview\"), original: 'Refactor Preview' },\n\t\t\ticon: Codicon.groupByRefType,\n\t\t\tprecondition: ContextKeyExpr.and(BulkEditPane.ctxHasCategories, BulkEditPane.ctxGroupByFile, BulkEditPreviewContribution.ctxEnabled),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.BulkEditTitle,\n\t\t\t\twhen: ContextKeyExpr.and(BulkEditPane.ctxHasCategories, BulkEditPane.ctxGroupByFile),\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 3\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = await getBulkEditPane(viewsService);\n\t\tview?.groupByType();\n\t}\n});\n\nregisterAction2(class ToggleGrouping extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'refactorPreview.toggleGrouping',\n\t\t\ttitle: { value: localize('groupByType', \"Group Changes By Type\"), original: 'Group Changes By Type' },\n\t\t\tcategory: { value: localize('cat', \"Refactor Preview\"), original: 'Refactor Preview' },\n\t\t\ticon: Codicon.listTree,\n\t\t\ttoggled: BulkEditPane.ctxGroupByFile.negate(),\n\t\t\tprecondition: ContextKeyExpr.and(BulkEditPane.ctxHasCategories, BulkEditPreviewContribution.ctxEnabled),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.BulkEditContext,\n\t\t\t\torder: 3\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst view = await getBulkEditPane(viewsService);\n\t\tview?.toggleGrouping();\n\t}\n});\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(\n\tBulkEditPreviewContribution, LifecyclePhase.Ready\n);\n\nconst refactorPreviewViewIcon = registerIcon('refactor-preview-view-icon', Codicon.lightbulb, localize('refactorPreviewViewIcon', 'View icon of the refactor preview view.'));\n\nconst container = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: BulkEditPane.ID,\n\ttitle: { value: localize('panel', \"Refactor Preview\"), original: 'Refactor Preview' },\n\thideIfEmpty: true,\n\tctorDescriptor: new SyncDescriptor(\n\t\tViewPaneContainer,\n\t\t[BulkEditPane.ID, { mergeViewWithContainerWhenSingleView: true }]\n\t),\n\ticon: refactorPreviewViewIcon,\n\tstorageId: BulkEditPane.ID\n}, ViewContainerLocation.Panel);\n\nRegistry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry).registerViews([{\n\tid: BulkEditPane.ID,\n\tname: localize('panel', \"Refactor Preview\"),\n\twhen: BulkEditPreviewContribution.ctxEnabled,\n\tctorDescriptor: new SyncDescriptor(BulkEditPane),\n\tcontainerIcon: refactorPreviewViewIcon,\n}], container);\n"]}