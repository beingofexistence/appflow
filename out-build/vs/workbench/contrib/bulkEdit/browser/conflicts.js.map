{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/bulkEdit/browser/conflicts.ts"],"names":[],"mappings":"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","file":"conflicts.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ResourceEdit, ResourceFileEdit, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { ResourceNotebookCellEdit } from 'vs/workbench/contrib/bulkEdit/browser/bulkCellEdits';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class ConflictDetector {\n\n\tprivate readonly _conflicts = new ResourceMap<boolean>();\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _onDidConflict = new Emitter<this>();\n\treadonly onDidConflict: Event<this> = this._onDidConflict.event;\n\n\tconstructor(\n\t\tedits: ResourceEdit[],\n\t\t@IFileService fileService: IFileService,\n\t\t@IModelService modelService: IModelService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\n\t\tconst _workspaceEditResources = new ResourceMap<boolean>();\n\n\t\tfor (const edit of edits) {\n\t\t\tif (edit instanceof ResourceTextEdit) {\n\t\t\t\t_workspaceEditResources.set(edit.resource, true);\n\t\t\t\tif (typeof edit.versionId === 'number') {\n\t\t\t\t\tconst model = modelService.getModel(edit.resource);\n\t\t\t\t\tif (model && model.getVersionId() !== edit.versionId) {\n\t\t\t\t\t\tthis._conflicts.set(edit.resource, true);\n\t\t\t\t\t\tthis._onDidConflict.fire(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (edit instanceof ResourceFileEdit) {\n\t\t\t\tif (edit.newResource) {\n\t\t\t\t\t_workspaceEditResources.set(edit.newResource, true);\n\n\t\t\t\t} else if (edit.oldResource) {\n\t\t\t\t\t_workspaceEditResources.set(edit.oldResource, true);\n\t\t\t\t}\n\t\t\t} else if (edit instanceof ResourceNotebookCellEdit) {\n\t\t\t\t_workspaceEditResources.set(edit.resource, true);\n\n\t\t\t} else {\n\t\t\t\tlogService.warn('UNKNOWN edit type', edit);\n\t\t\t}\n\t\t}\n\n\t\t// listen to file changes\n\t\tthis._disposables.add(fileService.onDidFilesChange(e => {\n\n\t\t\tfor (const uri of _workspaceEditResources.keys()) {\n\t\t\t\t// conflict happens when a file that we are working\n\t\t\t\t// on changes on disk. ignore changes for which a model\n\t\t\t\t// exists because we have a better check for models\n\t\t\t\tif (!modelService.getModel(uri) && e.contains(uri)) {\n\t\t\t\t\tthis._conflicts.set(uri, true);\n\t\t\t\t\tthis._onDidConflict.fire(this);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// listen to model changes...?\n\t\tconst onDidChangeModel = (model: ITextModel) => {\n\n\t\t\t// conflict\n\t\t\tif (_workspaceEditResources.has(model.uri)) {\n\t\t\t\tthis._conflicts.set(model.uri, true);\n\t\t\t\tthis._onDidConflict.fire(this);\n\t\t\t}\n\t\t};\n\t\tfor (const model of modelService.getModels()) {\n\t\t\tthis._disposables.add(model.onDidChangeContent(() => onDidChangeModel(model)));\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._onDidConflict.dispose();\n\t}\n\n\tlist(): URI[] {\n\t\treturn [...this._conflicts.keys()];\n\t}\n\n\thasConflicts(): boolean {\n\t\treturn this._conflicts.size > 0;\n\t}\n}\n"]}