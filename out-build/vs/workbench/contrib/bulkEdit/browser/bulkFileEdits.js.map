{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/bulkEdit/browser/bulkFileEdits.ts"],"names":[],"mappings":"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","file":"bulkFileEdits.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport { WorkspaceFileEditOptions } from 'vs/editor/common/languages';\nimport { IFileService, FileSystemProviderCapabilities, IFileContent, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { IProgress } from 'vs/platform/progress/common/progress';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IWorkingCopyFileService, IFileOperationUndoRedoInfo, IMoveOperation, ICopyOperation, IDeleteOperation, ICreateOperation, ICreateFileOperation } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';\nimport { IWorkspaceUndoRedoElement, UndoRedoElementType, IUndoRedoService, UndoRedoGroup, UndoRedoSource } from 'vs/platform/undoRedo/common/undoRedo';\nimport { URI } from 'vs/base/common/uri';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ResourceFileEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { tail } from 'vs/base/common/arrays';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { Schemas } from 'vs/base/common/network';\n\ninterface IFileOperation {\n\turis: URI[];\n\tperform(token: CancellationToken): Promise<IFileOperation>;\n}\n\nclass Noop implements IFileOperation {\n\treadonly uris = [];\n\tasync perform() { return this; }\n\ttoString(): string {\n\t\treturn '(noop)';\n\t}\n}\n\nclass RenameEdit {\n\treadonly type = 'rename';\n\tconstructor(\n\t\treadonly newUri: URI,\n\t\treadonly oldUri: URI,\n\t\treadonly options: WorkspaceFileEditOptions\n\t) { }\n}\n\nclass RenameOperation implements IFileOperation {\n\n\tconstructor(\n\t\tprivate readonly _edits: RenameEdit[],\n\t\tprivate readonly _undoRedoInfo: IFileOperationUndoRedoInfo,\n\t\t@IWorkingCopyFileService private readonly _workingCopyFileService: IWorkingCopyFileService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t) { }\n\n\tget uris() {\n\t\treturn this._edits.map(edit => [edit.newUri, edit.oldUri]).flat();\n\t}\n\n\tasync perform(token: CancellationToken): Promise<IFileOperation> {\n\n\t\tconst moves: IMoveOperation[] = [];\n\t\tconst undoes: RenameEdit[] = [];\n\t\tfor (const edit of this._edits) {\n\t\t\t// check: not overwriting, but ignoring, and the target file exists\n\t\t\tconst skip = edit.options.overwrite === undefined && edit.options.ignoreIfExists && await this._fileService.exists(edit.newUri);\n\t\t\tif (!skip) {\n\t\t\t\tmoves.push({\n\t\t\t\t\tfile: { source: edit.oldUri, target: edit.newUri },\n\t\t\t\t\toverwrite: edit.options.overwrite\n\t\t\t\t});\n\n\t\t\t\t// reverse edit\n\t\t\t\tundoes.push(new RenameEdit(edit.oldUri, edit.newUri, edit.options));\n\t\t\t}\n\t\t}\n\n\t\tif (moves.length === 0) {\n\t\t\treturn new Noop();\n\t\t}\n\n\t\tawait this._workingCopyFileService.move(moves, token, this._undoRedoInfo);\n\t\treturn new RenameOperation(undoes, { isUndoing: true }, this._workingCopyFileService, this._fileService);\n\t}\n\n\ttoString(): string {\n\t\treturn `(rename ${this._edits.map(edit => `${edit.oldUri} to ${edit.newUri}`).join(', ')})`;\n\t}\n}\n\nclass CopyEdit {\n\treadonly type = 'copy';\n\tconstructor(\n\t\treadonly newUri: URI,\n\t\treadonly oldUri: URI,\n\t\treadonly options: WorkspaceFileEditOptions\n\t) { }\n}\n\nclass CopyOperation implements IFileOperation {\n\n\tconstructor(\n\t\tprivate readonly _edits: CopyEdit[],\n\t\tprivate readonly _undoRedoInfo: IFileOperationUndoRedoInfo,\n\t\t@IWorkingCopyFileService private readonly _workingCopyFileService: IWorkingCopyFileService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService\n\t) { }\n\n\tget uris() {\n\t\treturn this._edits.map(edit => [edit.newUri, edit.oldUri]).flat();\n\t}\n\n\tasync perform(token: CancellationToken): Promise<IFileOperation> {\n\n\t\t// (1) create copy operations, remove noops\n\t\tconst copies: ICopyOperation[] = [];\n\t\tfor (const edit of this._edits) {\n\t\t\t//check: not overwriting, but ignoring, and the target file exists\n\t\t\tconst skip = edit.options.overwrite === undefined && edit.options.ignoreIfExists && await this._fileService.exists(edit.newUri);\n\t\t\tif (!skip) {\n\t\t\t\tcopies.push({ file: { source: edit.oldUri, target: edit.newUri }, overwrite: edit.options.overwrite });\n\t\t\t}\n\t\t}\n\n\t\tif (copies.length === 0) {\n\t\t\treturn new Noop();\n\t\t}\n\n\t\t// (2) perform the actual copy and use the return stats to build undo edits\n\t\tconst stats = await this._workingCopyFileService.copy(copies, token, this._undoRedoInfo);\n\t\tconst undoes: DeleteEdit[] = [];\n\n\t\tfor (let i = 0; i < stats.length; i++) {\n\t\t\tconst stat = stats[i];\n\t\t\tconst edit = this._edits[i];\n\t\t\tundoes.push(new DeleteEdit(stat.resource, { recursive: true, folder: this._edits[i].options.folder || stat.isDirectory, ...edit.options }, false));\n\t\t}\n\n\t\treturn this._instaService.createInstance(DeleteOperation, undoes, { isUndoing: true });\n\t}\n\n\ttoString(): string {\n\t\treturn `(copy ${this._edits.map(edit => `${edit.oldUri} to ${edit.newUri}`).join(', ')})`;\n\t}\n}\n\nclass CreateEdit {\n\treadonly type = 'create';\n\tconstructor(\n\t\treadonly newUri: URI,\n\t\treadonly options: WorkspaceFileEditOptions,\n\t\treadonly contents: VSBuffer | undefined,\n\t) { }\n}\n\nclass CreateOperation implements IFileOperation {\n\n\tconstructor(\n\t\tprivate readonly _edits: CreateEdit[],\n\t\tprivate readonly _undoRedoInfo: IFileOperationUndoRedoInfo,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IWorkingCopyFileService private readonly _workingCopyFileService: IWorkingCopyFileService,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@ITextFileService private readonly _textFileService: ITextFileService\n\t) { }\n\n\tget uris() {\n\t\treturn this._edits.map(edit => edit.newUri);\n\t}\n\n\tasync perform(token: CancellationToken): Promise<IFileOperation> {\n\n\t\tconst folderCreates: ICreateOperation[] = [];\n\t\tconst fileCreates: ICreateFileOperation[] = [];\n\t\tconst undoes: DeleteEdit[] = [];\n\n\t\tfor (const edit of this._edits) {\n\t\t\tif (edit.newUri.scheme === Schemas.untitled) {\n\t\t\t\tcontinue; // ignore, will be handled by a later edit\n\t\t\t}\n\t\t\tif (edit.options.overwrite === undefined && edit.options.ignoreIfExists && await this._fileService.exists(edit.newUri)) {\n\t\t\t\tcontinue; // not overwriting, but ignoring, and the target file exists\n\t\t\t}\n\t\t\tif (edit.options.folder) {\n\t\t\t\tfolderCreates.push({ resource: edit.newUri });\n\t\t\t} else {\n\t\t\t\t// If the contents are part of the edit they include the encoding, thus use them. Otherwise get the encoding for a new empty file.\n\t\t\t\tconst encodedReadable = typeof edit.contents !== 'undefined' ? edit.contents : await this._textFileService.getEncodedReadable(edit.newUri);\n\t\t\t\tfileCreates.push({ resource: edit.newUri, contents: encodedReadable, overwrite: edit.options.overwrite });\n\t\t\t}\n\t\t\tundoes.push(new DeleteEdit(edit.newUri, edit.options, !edit.options.folder && !edit.contents));\n\t\t}\n\n\t\tif (folderCreates.length === 0 && fileCreates.length === 0) {\n\t\t\treturn new Noop();\n\t\t}\n\n\t\tawait this._workingCopyFileService.createFolder(folderCreates, token, this._undoRedoInfo);\n\t\tawait this._workingCopyFileService.create(fileCreates, token, this._undoRedoInfo);\n\n\t\treturn this._instaService.createInstance(DeleteOperation, undoes, { isUndoing: true });\n\t}\n\n\ttoString(): string {\n\t\treturn `(create ${this._edits.map(edit => edit.options.folder ? `folder ${edit.newUri}` : `file ${edit.newUri} with ${edit.contents?.byteLength || 0} bytes`).join(', ')})`;\n\t}\n}\n\nclass DeleteEdit {\n\treadonly type = 'delete';\n\tconstructor(\n\t\treadonly oldUri: URI,\n\t\treadonly options: WorkspaceFileEditOptions,\n\t\treadonly undoesCreate: boolean,\n\t) { }\n}\n\nclass DeleteOperation implements IFileOperation {\n\n\tconstructor(\n\t\tprivate _edits: DeleteEdit[],\n\t\tprivate readonly _undoRedoInfo: IFileOperationUndoRedoInfo,\n\t\t@IWorkingCopyFileService private readonly _workingCopyFileService: IWorkingCopyFileService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService\n\t) { }\n\n\tget uris() {\n\t\treturn this._edits.map(edit => edit.oldUri);\n\t}\n\n\tasync perform(token: CancellationToken): Promise<IFileOperation> {\n\t\t// delete file\n\n\t\tconst deletes: IDeleteOperation[] = [];\n\t\tconst undoes: CreateEdit[] = [];\n\n\t\tfor (const edit of this._edits) {\n\t\t\tlet fileStat: IFileStatWithMetadata | undefined;\n\t\t\ttry {\n\t\t\t\tfileStat = await this._fileService.resolve(edit.oldUri, { resolveMetadata: true });\n\t\t\t} catch (err) {\n\t\t\t\tif (!edit.options.ignoreIfNotExists) {\n\t\t\t\t\tthrow new Error(`${edit.oldUri} does not exist and can not be deleted`);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tdeletes.push({\n\t\t\t\tresource: edit.oldUri,\n\t\t\t\trecursive: edit.options.recursive,\n\t\t\t\tuseTrash: !edit.options.skipTrashBin && this._fileService.hasCapability(edit.oldUri, FileSystemProviderCapabilities.Trash) && this._configurationService.getValue<boolean>('files.enableTrash')\n\t\t\t});\n\n\n\t\t\t// read file contents for undo operation. when a file is too large it won't be restored\n\t\t\tlet fileContent: IFileContent | undefined;\n\t\t\tif (!edit.undoesCreate && !edit.options.folder && !(typeof edit.options.maxSize === 'number' && fileStat.size > edit.options.maxSize)) {\n\t\t\t\ttry {\n\t\t\t\t\tfileContent = await this._fileService.readFile(edit.oldUri);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis._logService.error(err);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fileContent !== undefined) {\n\t\t\t\tundoes.push(new CreateEdit(edit.oldUri, edit.options, fileContent.value));\n\t\t\t}\n\t\t}\n\n\t\tif (deletes.length === 0) {\n\t\t\treturn new Noop();\n\t\t}\n\n\t\tawait this._workingCopyFileService.delete(deletes, token, this._undoRedoInfo);\n\n\t\tif (undoes.length === 0) {\n\t\t\treturn new Noop();\n\t\t}\n\t\treturn this._instaService.createInstance(CreateOperation, undoes, { isUndoing: true });\n\t}\n\n\ttoString(): string {\n\t\treturn `(delete ${this._edits.map(edit => edit.oldUri).join(', ')})`;\n\t}\n}\n\nclass FileUndoRedoElement implements IWorkspaceUndoRedoElement {\n\n\treadonly type = UndoRedoElementType.Workspace;\n\n\treadonly resources: readonly URI[];\n\n\tconstructor(\n\t\treadonly label: string,\n\t\treadonly code: string,\n\t\treadonly operations: IFileOperation[],\n\t\treadonly confirmBeforeUndo: boolean\n\t) {\n\t\tthis.resources = operations.map(op => op.uris).flat();\n\t}\n\n\tasync undo(): Promise<void> {\n\t\tawait this._reverse();\n\t}\n\n\tasync redo(): Promise<void> {\n\t\tawait this._reverse();\n\t}\n\n\tprivate async _reverse() {\n\t\tfor (let i = 0; i < this.operations.length; i++) {\n\t\t\tconst op = this.operations[i];\n\t\t\tconst undo = await op.perform(CancellationToken.None);\n\t\t\tthis.operations[i] = undo;\n\t\t}\n\t}\n\n\ttoString(): string {\n\t\treturn this.operations.map(op => String(op)).join(', ');\n\t}\n}\n\nexport class BulkFileEdits {\n\n\tconstructor(\n\t\tprivate readonly _label: string,\n\t\tprivate readonly _code: string,\n\t\tprivate readonly _undoRedoGroup: UndoRedoGroup,\n\t\tprivate readonly _undoRedoSource: UndoRedoSource | undefined,\n\t\tprivate readonly _confirmBeforeUndo: boolean,\n\t\tprivate readonly _progress: IProgress<void>,\n\t\tprivate readonly _token: CancellationToken,\n\t\tprivate readonly _edits: ResourceFileEdit[],\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@IUndoRedoService private readonly _undoRedoService: IUndoRedoService,\n\t) { }\n\n\tasync apply(): Promise<readonly URI[]> {\n\t\tconst undoOperations: IFileOperation[] = [];\n\t\tconst undoRedoInfo = { undoRedoGroupId: this._undoRedoGroup.id };\n\n\t\tconst edits: Array<RenameEdit | CopyEdit | DeleteEdit | CreateEdit> = [];\n\t\tfor (const edit of this._edits) {\n\t\t\tif (edit.newResource && edit.oldResource && !edit.options?.copy) {\n\t\t\t\tedits.push(new RenameEdit(edit.newResource, edit.oldResource, edit.options ?? {}));\n\t\t\t} else if (edit.newResource && edit.oldResource && edit.options?.copy) {\n\t\t\t\tedits.push(new CopyEdit(edit.newResource, edit.oldResource, edit.options ?? {}));\n\t\t\t} else if (!edit.newResource && edit.oldResource) {\n\t\t\t\tedits.push(new DeleteEdit(edit.oldResource, edit.options ?? {}, false));\n\t\t\t} else if (edit.newResource && !edit.oldResource) {\n\t\t\t\tedits.push(new CreateEdit(edit.newResource, edit.options ?? {}, await edit.options.contents));\n\t\t\t}\n\t\t}\n\n\t\tif (edits.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst groups: Array<RenameEdit | CopyEdit | DeleteEdit | CreateEdit>[] = [];\n\t\tgroups[0] = [edits[0]];\n\n\t\tfor (let i = 1; i < edits.length; i++) {\n\t\t\tconst edit = edits[i];\n\t\t\tconst lastGroup = tail(groups);\n\t\t\tif (lastGroup[0].type === edit.type) {\n\t\t\t\tlastGroup.push(edit);\n\t\t\t} else {\n\t\t\t\tgroups.push([edit]);\n\t\t\t}\n\t\t}\n\n\t\tfor (const group of groups) {\n\n\t\t\tif (this._token.isCancellationRequested) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet op: IFileOperation | undefined;\n\t\t\tswitch (group[0].type) {\n\t\t\t\tcase 'rename':\n\t\t\t\t\top = this._instaService.createInstance(RenameOperation, <RenameEdit[]>group, undoRedoInfo);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'copy':\n\t\t\t\t\top = this._instaService.createInstance(CopyOperation, <CopyEdit[]>group, undoRedoInfo);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'delete':\n\t\t\t\t\top = this._instaService.createInstance(DeleteOperation, <DeleteEdit[]>group, undoRedoInfo);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'create':\n\t\t\t\t\top = this._instaService.createInstance(CreateOperation, <CreateEdit[]>group, undoRedoInfo);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (op) {\n\t\t\t\tconst undoOp = await op.perform(this._token);\n\t\t\t\tundoOperations.push(undoOp);\n\t\t\t}\n\t\t\tthis._progress.report(undefined);\n\t\t}\n\n\t\tconst undoRedoElement = new FileUndoRedoElement(this._label, this._code, undoOperations, this._confirmBeforeUndo);\n\t\tthis._undoRedoService.pushElement(undoRedoElement, this._undoRedoGroup, this._undoRedoSource);\n\t\treturn undoRedoElement.resources;\n\t}\n}\n"]}