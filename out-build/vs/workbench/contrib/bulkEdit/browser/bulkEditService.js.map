{"version":3,"sources":["vs/workbench/contrib/bulkEdit/browser/bulkEditService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IA4BhG,SAAS,SAAS,CAAC,KAAqB;QACvC,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACvB,IAAI,qBAAG,CAAc,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC9B,OAAO,qBAAG,CAAc,IAAI,CAAC,IAAI,CAAC,CAAC;aACnC;YACD,IAAI,qBAAG,CAAc,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC9B,OAAO,qBAAG,CAAc,IAAI,CAAC,IAAI,CAAC,CAAC;aACnC;YACD,IAAI,oBAAI,CAAqB,EAAE,CAAC,IAAI,CAAC,EAAE;gBACtC,OAAO,oBAAI,CAAqB,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3C;YACD,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,IAAM,QAAQ,GAAd,MAAM,QAAQ;QAEb,YACkB,CAA0B,EAC1B,CAAyB,EACzB,CAAgC,EAChC,CAAmC,EACnC,CAAyB,EACzB,CAAsB,EACtB,CAAmB,EACnB,CAA2C,EAC3C,CAA2B,EACJ,CAAkB,EAC5B,CAAgB;YAV7B,MAAC,GAAD,CAAC,CAAyB;YAC1B,MAAC,GAAD,CAAC,CAAwB;YACzB,MAAC,GAAD,CAAC,CAA+B;YAChC,MAAC,GAAD,CAAC,CAAkC;YACnC,MAAC,GAAD,CAAC,CAAwB;YACzB,MAAC,GAAD,CAAC,CAAqB;YACtB,MAAC,GAAD,CAAC,CAAkB;YACnB,MAAC,GAAD,CAAC,CAA0C;YAC3C,MAAC,GAAD,CAAC,CAA0B;YACJ,MAAC,GAAD,CAAC,CAAiB;YAC5B,MAAC,GAAD,CAAC,CAAe;QAG/C,CAAC;QAED,WAAW;YAEV,MAAM,cAAc,GAAG,IAAI,SAAG,EAAmB,CAAC;YAClD,MAAM,iBAAiB,GAAG,IAAI,SAAG,EAAmB,CAAC;YACrD,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,CAAC,EAAO;gBAC/B,IAAI,IAAI,YAAY,qBAAG,EAAe;oBACrC,aAAa,IAAI,CAAC,CAAC;oBACnB,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;iBAC3C;qBAAM,IAAI,IAAI,YAAY,qBAAG,EAAe;oBAC5C,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAY,EAAE,IAAI,CAAC,CAAC;iBAChE;aACD;YACD,IAAI,IAAI,CAAC,CAAC,CAAM,MAAM,KAAK,CAAC,EAAE;gBAC7B,OAAO,IAAA,cAAQ,EAAC,CAAW,EAAE,IAAe,CAAC,CAAC;aAC9C;iBAAM,IAAI,cAAc,CAAC,IAAI,KAAK,CAAC,EAAE;gBACrC,IAAI,aAAa,GAAG,CAAC,IAAI,iBAAiB,CAAC,IAAI,GAAG,CAAC,EAAE;oBACpD,OAAO,IAAA,cAAQ,EAAC,CAAY,EAAE,IAAkC,EAAE,aAAa,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC;iBACzG;qBAAM;oBACN,OAAO,IAAA,cAAQ,EAAC,CAAY,EAAE,IAAiC,EAAE,aAAa,CAAC,CAAC;iBAChF;aACD;iBAAM;gBACN,OAAO,IAAA,cAAQ,EAAC,CAAmB,EAAE,IAAqE,EAAE,aAAa,EAAE,iBAAiB,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;aACxK;QACF,CAAC;QAED,KAAK,CAAC,OAAO;YAEZ,IAAI,IAAI,CAAC,CAAC,CAAM,MAAM,KAAK,CAAC,EAAE;gBAC7B,OAAO,EAAE,CAAC;aACV;YAED,MAAM,MAAM,GAAa,CAAC,CAAC,CAAC,CAAC;YAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAM,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAM,CAAC,CAAC,CAAC,EAAE;oBACxF,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;iBAC5B;qBAAM;oBACN,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACf;aACD;YAED,yFAAyF;YACzF,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACzD,IAAI,CAAC,CAAC,CAAS,MAAM,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;YACjD,iEAAiE;YACjE,MAAM,QAAQ,GAAoB,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAS,MAAM,CAAC,EAAE,SAAS,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC,CAAM,MAAM,EAAE,CAAC,EAAE,CAAC;YAElH,MAAM,SAAS,GAAuB,EAAE,CAAC;YACzC,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;gBAC3B,IAAI,IAAI,CAAC,CAAC,CAAM,uBAAuB,EAAE;oBACxC,MAAM;iBACN;gBACD,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAM,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,CAAC;gBACtD,IAAI,KAAK,CAAC,CAAC,CAAC,YAAY,qBAAG,EAAe;oBACzC,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAqC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAe,IAAI,CAAC,CAAC,EAAgB,IAAI,CAAC,CAAC,EAAmB,QAAQ,CAAC,CAAC,CAAC;iBACtJ;qBAAM,IAAI,KAAK,CAAC,CAAC,CAAC,YAAY,qBAAG,EAAe;oBAChD,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAqC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAe,IAAI,CAAC,CAAC,EAAgB,QAAQ,CAAC,CAAC,CAAC;iBAC7H;qBAAM,IAAI,KAAK,CAAC,CAAC,CAAC,YAAY,oBAAI,EAAsB;oBACxD,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAA6C,KAAK,EAAE,IAAI,CAAC,CAAC,EAAe,IAAI,CAAC,CAAC,EAAgB,QAAQ,CAAC,CAAC,CAAC;iBACrI;qBAAM;oBACN,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;iBAC5B;gBACD,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;aACtB;YAED,OAAO,SAAS,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;QAEO,KAAK,CAAC,CAAC,CAAiB,KAAyB,EAAE,aAAkB,EAAY,cAA0C,EAAE,iBAA0B,EAAE,QAAyB;YACzL,IAAI,CAAC,CAAC,CAAW,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACnE,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAa,cAAc,CAAC,oBAAI,EAAW,IAAI,CAAC,CAAC,IAAS,IAAA,cAAQ,EAAC,CAAe,EAAE,IAAgB,CAAC,EAAE,IAAI,CAAC,CAAC,IAAQ,wBAAwB,EAAE,aAAa,EAAE,cAAc,EAAE,iBAAiB,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAO,KAAK,CAAC,CAAC;YACnP,OAAO,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;QAC5B,CAAC;QAEO,KAAK,CAAC,CAAC,CAAiB,KAAyB,EAAE,aAAkB,EAAY,cAA0C,EAAE,QAAyB;YAC7J,IAAI,CAAC,CAAC,CAAW,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACnE,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAa,cAAc,CAAC,oBAAI,EAAW,IAAI,CAAC,CAAC,IAAS,IAAA,cAAQ,EAAC,CAAe,EAAE,IAAgB,CAAC,EAAE,IAAI,CAAC,CAAC,IAAQ,wBAAwB,EAAE,IAAI,CAAC,CAAC,EAAQ,aAAa,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAO,KAAK,CAAC,CAAC;YAC9O,OAAO,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;QAC5B,CAAC;QAEO,KAAK,CAAC,CAAC,CAAiB,KAAiC,EAAE,aAAkB,EAAY,cAA0C,EAAE,QAAyB;YACrK,IAAI,CAAC,CAAC,CAAW,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACnE,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAa,cAAc,CAAC,oBAAI,EAAW,aAAa,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAO,KAAK,CAAC,CAAC;YAC5H,OAAO,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;QAC5B,CAAC;KACD,CAAA;IAxGK,QAAQ;QAYX,WAAA,mBAAG,CAAA;QACH,YAAA,SAAG,CAAA;OAbA,QAAQ,CAwGb;IAEM,IAAM,IAAI,GAAV,MAAM,IAAI;QAOhB,YACwB,CAAmC,EAC7C,CAAiC,EAC9B,CAAoC,EACjC,CAAuC,EAC1C,CAAoC,EAC/B,CAAyC,EACvC,CAAoC;YANnB,MAAC,GAAD,CAAC,CAAiB;YAC5B,MAAC,GAAD,CAAC,CAAe;YACb,MAAC,GAAD,CAAC,CAAkB;YAChB,MAAC,GAAD,CAAC,CAAqB;YACzB,MAAC,GAAD,CAAC,CAAkB;YACd,MAAC,GAAD,CAAC,CAAuB;YACtB,MAAC,GAAD,CAAC,CAAkB;YAV3C,MAAC,GAAuB,IAAI,gBAAG,EAAwB,CAAC;QAWrE,CAAC;QAEL,iBAAiB,CAAC,OAAgC;YACjD,IAAI,CAAC,CAAC,GAAiB,OAAO,CAAC;YAC/B,OAAO,IAAA,eAAG,EAAU,GAAG,EAAE;gBACxB,IAAI,IAAI,CAAC,CAAC,KAAmB,OAAO,EAAE;oBACrC,IAAI,CAAC,CAAC,GAAiB,SAAS,CAAC;iBACjC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,iBAAiB;YAChB,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAe,CAAC;QACtC,CAAC;QAED,KAAK,CAAC,KAAK,CAAC,OAAuC,EAAE,OAA0B;YAC9E,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAExE,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,OAAO,EAAE,WAAW,EAAE,IAAA,cAAQ,EAAC,CAAS,EAAE,IAAe,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;aAC/E;YAED,IAAI,IAAI,CAAC,CAAC,IAAkB,CAAC,OAAO,EAAE,WAAW,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC,EAAE;gBAC7G,KAAK,GAAG,MAAM,IAAI,CAAC,CAAC,CAAe,KAAK,EAAE,OAAO,CAAC,CAAC;aACnD;YAED,IAAI,UAAU,GAAG,OAAO,EAAE,MAAM,CAAC;YACjC,0BAA0B;YAC1B,IAAI,CAAC,UAAU,EAAE;gBAChB,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAc,uBAAuB,CAAC;gBAC9D,IAAI,IAAA,mBAAG,EAAU,SAAS,CAAC,EAAE;oBAC5B,UAAU,GAAG,SAAS,CAAC;iBACvB;qBAAM,IAAI,IAAA,mBAAG,EAAU,SAAS,CAAC,EAAE;oBACnC,UAAU,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC;iBAC3C;aACD;YAED,IAAI,UAAU,IAAI,UAAU,CAAC,SAAS,gCAAuB,EAAE;gBAC9D,6EAA6E;gBAC7E,UAAU,GAAG,SAAS,CAAC;aACvB;YAED,+DAA+D;YAC/D,6DAA6D;YAC7D,oCAAoC;YACpC,IAAI,aAAwC,CAAC;YAC7C,IAAI,mBAAmB,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;YACpC,IAAI,OAAO,OAAO,EAAE,eAAe,KAAK,QAAQ,EAAE;gBACjD,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,CAAC,EAAsB;oBACnD,IAAI,SAAS,CAAC,EAAE,KAAK,OAAO,CAAC,eAAe,EAAE;wBAC7C,aAAa,GAAG,SAAS,CAAC;wBAC1B,MAAM;qBACN;iBACD;aACD;YACD,IAAI,CAAC,aAAa,EAAE;gBACnB,aAAa,GAAG,IAAI,cAAG,EAAY,CAAC;gBACpC,mBAAmB,GAAG,IAAI,CAAC,CAAC,CAAqB,IAAI,CAAC,aAAa,CAAC,CAAC;aACrE;YAED,MAAM,KAAK,GAAG,OAAO,EAAE,aAAa,IAAI,OAAO,EAAE,KAAK,CAAC;YACvD,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAa,cAAc,CACjD,QAAQ,EACR,KAAK,EACL,OAAO,EAAE,IAAI,EACb,UAAU,EACV,OAAO,EAAE,QAAQ,IAAI,cAAG,CAAM,IAAI,EAClC,OAAO,EAAE,KAAK,IAAI,gCAAiB,CAAC,IAAI,EACxC,KAAK,EACL,aAAa,EACb,OAAO,EAAE,cAAc,EACvB,CAAC,CAAC,OAAO,EAAE,iBAAiB,CAC5B,CAAC;YAEF,IAAI,QAAiC,CAAC;YACtC,IAAI;gBACH,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAiB,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAW,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,sBAAsB,CAAC,CAAC,CAAC;gBAC3H,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,OAAO,EAAE,CAAC;gBAE3C,wFAAwF;gBACxF,4DAA4D;gBAC5D,IAAI,OAAO,EAAE,qBAAqB,IAAI,IAAI,CAAC,CAAC,CAAc,QAAQ,CAAC,eAAe,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrH,MAAM,IAAI,CAAC,CAAC,CAAQ,SAAS,CAAC,CAAC;iBAC/B;gBAED,OAAO,EAAE,WAAW,EAAE,QAAQ,CAAC,WAAW,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;aAC5E;YAAC,OAAO,GAAG,EAAE;gBACb,+BAA+B;gBAC/B,oBAAoB;gBACpB,IAAI,CAAC,CAAC,CAAW,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC5B,MAAM,GAAG,CAAC;aACV;oBAAS;gBACT,QAAQ,EAAE,OAAO,EAAE,CAAC;gBACpB,mBAAmB,EAAE,CAAC;aACtB;QACF,CAAC;QAEO,KAAK,CAAC,CAAC,CAAQ,SAAyB;YAC/C,MAAM,GAAG,GAAG,IAAI,SAAG,CAAS,SAAS,CAAC,CAAC;YACvC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAmB,kBAAkB,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;gBAC5E,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;oBAC3B,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;iBAClB;YACF,CAAC,CAAC,CAAC;YAEH,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC/C,KAAK,MAAM,IAAI,IAAI,MAAM,EAAE;gBAC1B,IAAI,IAAI,CAAC,MAAM,KAAK,UAAU,EAAE;oBAC/B,IAAI,CAAC,CAAC,CAAW,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACnC;aACD;QACF,CAAC;QAEO,KAAK,CAAC,CAAC,CAAW,KAAyB,EAAE,MAAsB;YAC1E,IAAI,OAAe,CAAC;YACpB,IAAI,aAAqB,CAAC;YAC1B,QAAQ,MAAM,EAAE;gBACf;oBACC,OAAO,GAAG,IAAA,cAAQ,EAAC,CAAwB,EAAE,IAA4C,CAAC,CAAC;oBAC3F,aAAa,GAAG,IAAA,cAAQ,EAAC,CAA6D,CAA3D,CAA6D,EAA1D,EAAE,AAAwE,CAAC,CAAC,cAA1D,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;oBACpF,MAAM;gBACP;oBACC,OAAO,GAAG,IAAA,cAAQ,EAAC,CAAyB,EAAE,IAAgD,CAAC,CAAC;oBAChG,aAAa,GAAG,IAAA,cAAQ,EAAC,EAAE,AAA4D,EAAE,CAA3D,EAAE,CAA6E,CAAC,CAAC,cAA9D,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;oBACrF,MAAM;gBACP;oBACC,OAAO,GAAG,IAAA,cAAQ,EAAC,EAAyB,EAAE,IAA6C,CAAC,CAAC;oBAC7F,aAAa,GAAG,IAAA,cAAQ,EAAC,EAAE,AAA4D,EAAE,CAA3D,EAAE,CAA0E,CAAC,CAAC,cAA3D,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;oBACrF,MAAM;gBACP;oBACC,OAAO,GAAG,IAAA,cAAQ,EAAC,EAAc,EAAE,IAAgC,CAAC,CAAC;oBACrE,aAAa,GAAG,IAAA,cAAQ,EAAC,EAAE,AAAiD,EAAE,CAAhD,EAAE,CAAsD,CAAC,CAAC,GAAlD,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;oBAC1E,MAAM;aACP;YAED,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC,CAAc,OAAO,CAAC;gBAChD,OAAO;gBACP,MAAM,EAAE,IAAA,cAAQ,EAAC,EAAgC,EAAE,IAAuB,EAAE,KAAK,IAAI,IAAA,cAAQ,EAAC,EAAe,EAAE,IAAgB,CAAC,CAAC;gBACjI,aAAa;aACb,CAAC,CAAC;YAEH,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;QAC1B,CAAC;KACD,CAAA;IA9JY,oBAAI;mBAAJ,IAAI;QAQd,WAAA,mBAAG,CAAA;QACH,WAAA,SAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,eAAG,CAAA;QACH,WAAA,aAAG,CAAA;QACH,WAAA,wBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;OAdO,IAAI,CA8JhB;IAED,IAAA,gBAAG,EAAe,qBAAG,EAAe,IAAI,oCAAuC,CAAC;IAEhF,MAAM,eAAe,GAAG,4BAA4B,CAAC;IAErD,cAAG,CAAM,EAAE,CAAyB,2BAAG,CAAQ,aAAa,CAAC,CAAC,qBAAqB,CAAC;QACnF,EAAE,EAAE,OAAO;QACX,UAAU,EAAE;YACX,CAAC,eAAe,CAAC,EAAE;gBAClB,WAAW,EAAE,IAAA,cAAQ,EAAC,EAAsB,EAAE,IAA2E,CAAC;gBAC1H,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE,SAAS;aACf;SACD;KACD,CAAC,CAAC","file":"bulkEditService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { ResourceMap, ResourceSet } from 'vs/base/common/map';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor, isCodeEditor, isDiffEditor } from 'vs/editor/browser/editorBrowser';\nimport { IBulkEditOptions, IBulkEditPreviewHandler, IBulkEditResult, IBulkEditService, ResourceEdit, ResourceFileEdit, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { WorkspaceEdit } from 'vs/editor/common/languages';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProgress, IProgressStep, Progress } from 'vs/platform/progress/common/progress';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { UndoRedoGroup, UndoRedoSource } from 'vs/platform/undoRedo/common/undoRedo';\nimport { BulkCellEdits, ResourceNotebookCellEdit } from 'vs/workbench/contrib/bulkEdit/browser/bulkCellEdits';\nimport { BulkFileEdits } from 'vs/workbench/contrib/bulkEdit/browser/bulkFileEdits';\nimport { BulkTextEdits } from 'vs/workbench/contrib/bulkEdit/browser/bulkTextEdits';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ILifecycleService, ShutdownReason } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IWorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\n\nfunction liftEdits(edits: ResourceEdit[]): ResourceEdit[] {\n\treturn edits.map(edit => {\n\t\tif (ResourceTextEdit.is(edit)) {\n\t\t\treturn ResourceTextEdit.lift(edit);\n\t\t}\n\t\tif (ResourceFileEdit.is(edit)) {\n\t\t\treturn ResourceFileEdit.lift(edit);\n\t\t}\n\t\tif (ResourceNotebookCellEdit.is(edit)) {\n\t\t\treturn ResourceNotebookCellEdit.lift(edit);\n\t\t}\n\t\tthrow new Error('Unsupported edit');\n\t});\n}\n\nclass BulkEdit {\n\n\tconstructor(\n\t\tprivate readonly _label: string | undefined,\n\t\tprivate readonly _code: string | undefined,\n\t\tprivate readonly _editor: ICodeEditor | undefined,\n\t\tprivate readonly _progress: IProgress<IProgressStep>,\n\t\tprivate readonly _token: CancellationToken,\n\t\tprivate readonly _edits: ResourceEdit[],\n\t\tprivate readonly _undoRedoGroup: UndoRedoGroup,\n\t\tprivate readonly _undoRedoSource: UndoRedoSource | undefined,\n\t\tprivate readonly _confirmBeforeUndo: boolean,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\n\t}\n\n\tariaMessage(): string {\n\n\t\tconst otherResources = new ResourceMap<boolean>();\n\t\tconst textEditResources = new ResourceMap<boolean>();\n\t\tlet textEditCount = 0;\n\t\tfor (const edit of this._edits) {\n\t\t\tif (edit instanceof ResourceTextEdit) {\n\t\t\t\ttextEditCount += 1;\n\t\t\t\ttextEditResources.set(edit.resource, true);\n\t\t\t} else if (edit instanceof ResourceFileEdit) {\n\t\t\t\totherResources.set(edit.oldResource ?? edit.newResource!, true);\n\t\t\t}\n\t\t}\n\t\tif (this._edits.length === 0) {\n\t\t\treturn localize('summary.0', \"Made no edits\");\n\t\t} else if (otherResources.size === 0) {\n\t\t\tif (textEditCount > 1 && textEditResources.size > 1) {\n\t\t\t\treturn localize('summary.nm', \"Made {0} text edits in {1} files\", textEditCount, textEditResources.size);\n\t\t\t} else {\n\t\t\t\treturn localize('summary.n0', \"Made {0} text edits in one file\", textEditCount);\n\t\t\t}\n\t\t} else {\n\t\t\treturn localize('summary.textFiles', \"Made {0} text edits in {1} files, also created or deleted {2} files\", textEditCount, textEditResources.size, otherResources.size);\n\t\t}\n\t}\n\n\tasync perform(): Promise<readonly URI[]> {\n\n\t\tif (this._edits.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst ranges: number[] = [1];\n\t\tfor (let i = 1; i < this._edits.length; i++) {\n\t\t\tif (Object.getPrototypeOf(this._edits[i - 1]) === Object.getPrototypeOf(this._edits[i])) {\n\t\t\t\tranges[ranges.length - 1]++;\n\t\t\t} else {\n\t\t\t\tranges.push(1);\n\t\t\t}\n\t\t}\n\n\t\t// Show infinte progress when there is only 1 item since we do not know how long it takes\n\t\tconst increment = this._edits.length > 1 ? 0 : undefined;\n\t\tthis._progress.report({ increment, total: 100 });\n\t\t// Increment by percentage points since progress API expects that\n\t\tconst progress: IProgress<void> = { report: _ => this._progress.report({ increment: 100 / this._edits.length }) };\n\n\t\tconst resources: (readonly URI[])[] = [];\n\t\tlet index = 0;\n\t\tfor (const range of ranges) {\n\t\t\tif (this._token.isCancellationRequested) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst group = this._edits.slice(index, index + range);\n\t\t\tif (group[0] instanceof ResourceFileEdit) {\n\t\t\t\tresources.push(await this._performFileEdits(<ResourceFileEdit[]>group, this._undoRedoGroup, this._undoRedoSource, this._confirmBeforeUndo, progress));\n\t\t\t} else if (group[0] instanceof ResourceTextEdit) {\n\t\t\t\tresources.push(await this._performTextEdits(<ResourceTextEdit[]>group, this._undoRedoGroup, this._undoRedoSource, progress));\n\t\t\t} else if (group[0] instanceof ResourceNotebookCellEdit) {\n\t\t\t\tresources.push(await this._performCellEdits(<ResourceNotebookCellEdit[]>group, this._undoRedoGroup, this._undoRedoSource, progress));\n\t\t\t} else {\n\t\t\t\tconsole.log('UNKNOWN EDIT');\n\t\t\t}\n\t\t\tindex = index + range;\n\t\t}\n\n\t\treturn resources.flat();\n\t}\n\n\tprivate async _performFileEdits(edits: ResourceFileEdit[], undoRedoGroup: UndoRedoGroup, undoRedoSource: UndoRedoSource | undefined, confirmBeforeUndo: boolean, progress: IProgress<void>): Promise<readonly URI[]> {\n\t\tthis._logService.debug('_performFileEdits', JSON.stringify(edits));\n\t\tconst model = this._instaService.createInstance(BulkFileEdits, this._label || localize('workspaceEdit', \"Workspace Edit\"), this._code || 'undoredo.workspaceEdit', undoRedoGroup, undoRedoSource, confirmBeforeUndo, progress, this._token, edits);\n\t\treturn await model.apply();\n\t}\n\n\tprivate async _performTextEdits(edits: ResourceTextEdit[], undoRedoGroup: UndoRedoGroup, undoRedoSource: UndoRedoSource | undefined, progress: IProgress<void>): Promise<readonly URI[]> {\n\t\tthis._logService.debug('_performTextEdits', JSON.stringify(edits));\n\t\tconst model = this._instaService.createInstance(BulkTextEdits, this._label || localize('workspaceEdit', \"Workspace Edit\"), this._code || 'undoredo.workspaceEdit', this._editor, undoRedoGroup, undoRedoSource, progress, this._token, edits);\n\t\treturn await model.apply();\n\t}\n\n\tprivate async _performCellEdits(edits: ResourceNotebookCellEdit[], undoRedoGroup: UndoRedoGroup, undoRedoSource: UndoRedoSource | undefined, progress: IProgress<void>): Promise<readonly URI[]> {\n\t\tthis._logService.debug('_performCellEdits', JSON.stringify(edits));\n\t\tconst model = this._instaService.createInstance(BulkCellEdits, undoRedoGroup, undoRedoSource, progress, this._token, edits);\n\t\treturn await model.apply();\n\t}\n}\n\nexport class BulkEditService implements IBulkEditService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _activeUndoRedoGroups = new LinkedList<UndoRedoGroup>();\n\tprivate _previewHandler?: IBulkEditPreviewHandler;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILifecycleService private readonly _lifecycleService: ILifecycleService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IWorkingCopyService private readonly _workingCopyService: IWorkingCopyService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t) { }\n\n\tsetPreviewHandler(handler: IBulkEditPreviewHandler): IDisposable {\n\t\tthis._previewHandler = handler;\n\t\treturn toDisposable(() => {\n\t\t\tif (this._previewHandler === handler) {\n\t\t\t\tthis._previewHandler = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\thasPreviewHandler(): boolean {\n\t\treturn Boolean(this._previewHandler);\n\t}\n\n\tasync apply(editsIn: ResourceEdit[] | WorkspaceEdit, options?: IBulkEditOptions): Promise<IBulkEditResult> {\n\t\tlet edits = liftEdits(Array.isArray(editsIn) ? editsIn : editsIn.edits);\n\n\t\tif (edits.length === 0) {\n\t\t\treturn { ariaSummary: localize('nothing', \"Made no edits\"), isApplied: false };\n\t\t}\n\n\t\tif (this._previewHandler && (options?.showPreview || edits.some(value => value.metadata?.needsConfirmation))) {\n\t\t\tedits = await this._previewHandler(edits, options);\n\t\t}\n\n\t\tlet codeEditor = options?.editor;\n\t\t// try to find code editor\n\t\tif (!codeEditor) {\n\t\t\tconst candidate = this._editorService.activeTextEditorControl;\n\t\t\tif (isCodeEditor(candidate)) {\n\t\t\t\tcodeEditor = candidate;\n\t\t\t} else if (isDiffEditor(candidate)) {\n\t\t\t\tcodeEditor = candidate.getModifiedEditor();\n\t\t\t}\n\t\t}\n\n\t\tif (codeEditor && codeEditor.getOption(EditorOption.readOnly)) {\n\t\t\t// If the code editor is readonly still allow bulk edits to be applied #68549\n\t\t\tcodeEditor = undefined;\n\t\t}\n\n\t\t// undo-redo-group: if a group id is passed then try to find it\n\t\t// in the list of active edits. otherwise (or when not found)\n\t\t// create a separate undo-redo-group\n\t\tlet undoRedoGroup: UndoRedoGroup | undefined;\n\t\tlet undoRedoGroupRemove = () => { };\n\t\tif (typeof options?.undoRedoGroupId === 'number') {\n\t\t\tfor (const candidate of this._activeUndoRedoGroups) {\n\t\t\t\tif (candidate.id === options.undoRedoGroupId) {\n\t\t\t\t\tundoRedoGroup = candidate;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!undoRedoGroup) {\n\t\t\tundoRedoGroup = new UndoRedoGroup();\n\t\t\tundoRedoGroupRemove = this._activeUndoRedoGroups.push(undoRedoGroup);\n\t\t}\n\n\t\tconst label = options?.quotableLabel || options?.label;\n\t\tconst bulkEdit = this._instaService.createInstance(\n\t\t\tBulkEdit,\n\t\t\tlabel,\n\t\t\toptions?.code,\n\t\t\tcodeEditor,\n\t\t\toptions?.progress ?? Progress.None,\n\t\t\toptions?.token ?? CancellationToken.None,\n\t\t\tedits,\n\t\t\tundoRedoGroup,\n\t\t\toptions?.undoRedoSource,\n\t\t\t!!options?.confirmBeforeUndo\n\t\t);\n\n\t\tlet listener: IDisposable | undefined;\n\t\ttry {\n\t\t\tlistener = this._lifecycleService.onBeforeShutdown(e => e.veto(this._shouldVeto(label, e.reason), 'veto.blukEditService'));\n\t\t\tconst resources = await bulkEdit.perform();\n\n\t\t\t// when enabled (option AND setting) loop over all dirty working copies and trigger save\n\t\t\t// for those that were involved in this bulk edit operation.\n\t\t\tif (options?.respectAutoSaveConfig && this._configService.getValue(autoSaveSetting) === true && resources.length > 1) {\n\t\t\t\tawait this._saveAll(resources);\n\t\t\t}\n\n\t\t\treturn { ariaSummary: bulkEdit.ariaMessage(), isApplied: edits.length > 0 };\n\t\t} catch (err) {\n\t\t\t// console.log('apply FAILED');\n\t\t\t// console.log(err);\n\t\t\tthis._logService.error(err);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tlistener?.dispose();\n\t\t\tundoRedoGroupRemove();\n\t\t}\n\t}\n\n\tprivate async _saveAll(resources: readonly URI[]) {\n\t\tconst set = new ResourceSet(resources);\n\t\tconst saves = this._workingCopyService.dirtyWorkingCopies.map(async (copy) => {\n\t\t\tif (set.has(copy.resource)) {\n\t\t\t\tawait copy.save();\n\t\t\t}\n\t\t});\n\n\t\tconst result = await Promise.allSettled(saves);\n\t\tfor (const item of result) {\n\t\t\tif (item.status === 'rejected') {\n\t\t\t\tthis._logService.warn(item.reason);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _shouldVeto(label: string | undefined, reason: ShutdownReason): Promise<boolean> {\n\t\tlet message: string;\n\t\tlet primaryButton: string;\n\t\tswitch (reason) {\n\t\t\tcase ShutdownReason.CLOSE:\n\t\t\t\tmessage = localize('closeTheWindow.message', \"Are you sure you want to close the window?\");\n\t\t\t\tprimaryButton = localize({ key: 'closeTheWindow', comment: ['&& denotes a mnemonic'] }, \"&&Close Window\");\n\t\t\t\tbreak;\n\t\t\tcase ShutdownReason.LOAD:\n\t\t\t\tmessage = localize('changeWorkspace.message', \"Are you sure you want to change the workspace?\");\n\t\t\t\tprimaryButton = localize({ key: 'changeWorkspace', comment: ['&& denotes a mnemonic'] }, \"Change &&Workspace\");\n\t\t\t\tbreak;\n\t\t\tcase ShutdownReason.RELOAD:\n\t\t\t\tmessage = localize('reloadTheWindow.message', \"Are you sure you want to reload the window?\");\n\t\t\t\tprimaryButton = localize({ key: 'reloadTheWindow', comment: ['&& denotes a mnemonic'] }, \"&&Reload Window\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmessage = localize('quit.message', \"Are you sure you want to quit?\");\n\t\t\t\tprimaryButton = localize({ key: 'quit', comment: ['&& denotes a mnemonic'] }, \"&&Quit\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst result = await this._dialogService.confirm({\n\t\t\tmessage,\n\t\t\tdetail: localize('areYouSureQuiteBulkEdit.detail', \"'{0}' is in progress.\", label || localize('fileOperation', \"File operation\")),\n\t\t\tprimaryButton\n\t\t});\n\n\t\treturn !result.confirmed;\n\t}\n}\n\nregisterSingleton(IBulkEditService, BulkEditService, InstantiationType.Delayed);\n\nconst autoSaveSetting = 'files.refactoring.autoSave';\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\tid: 'files',\n\tproperties: {\n\t\t[autoSaveSetting]: {\n\t\t\tdescription: localize('refactoring.autoSave', \"Controls if files that were part of a refactoring are saved automatically\"),\n\t\t\tdefault: true,\n\t\t\ttype: 'boolean'\n\t\t}\n\t}\n});\n"]}