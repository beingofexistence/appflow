{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/webviewPanel/browser/webviewIconManager.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAazF,IAAM,IAAI,GAAV,MAAM,IAAI;QAMhB,YACoB,CAAuC,EACnC,CAAoC;YADvB,MAAC,GAAD,CAAC,CAAqB;YAClB,MAAC,GAAD,CAAC,CAAkB;YAN3C,MAAC,GAAQ,IAAI,GAAG,EAAwB,CAAC;YAQzD,IAAI,CAAC,CAAC,CAAc,wBAAwB,CAAC,CAAC,CAAC,EAAE;gBAChD,IAAI,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,EAAE;oBAClD,IAAI,CAAC,CAAC,EAAiB,CAAC;iBACxB;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,EAAc,MAAM,EAAE,CAAC;YAC7B,IAAI,CAAC,CAAC,GAAe,SAAS,CAAC;QAChC,CAAC;QAED,IAAY,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,CAAC,EAAc;gBACxB,IAAI,CAAC,CAAC,GAAe,GAAG,CAAC,GAAG,EAAe,CAAC;gBAC5C,IAAI,CAAC,CAAC,CAAa,SAAS,GAAG,eAAe,CAAC;aAC/C;YACD,OAAO,IAAI,CAAC,CAAC,CAAa;QAC3B,CAAC;QAEM,QAAQ,CACd,SAAiB,EACjB,QAAkC;YAElC,IAAI,QAAQ,EAAE;gBACb,IAAI,CAAC,CAAC,CAAM,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;aACrC;iBAAM;gBACN,IAAI,CAAC,CAAC,CAAM,MAAM,CAAC,SAAS,CAAC,CAAC;aAC9B;YAED,IAAI,CAAC,CAAC,EAAiB,CAAC;QACzB,CAAC;QAEO,KAAK,CAAC,CAAC;YACd,MAAM,IAAI,CAAC,CAAC,CAAiB,IAAI,iCAAyB,CAAC;YAE3D,MAAM,QAAQ,GAAa,EAAE,CAAC;YAC9B,IAAI,IAAI,CAAC,CAAC,CAAc,QAAQ,CAAC,qBAAqB,CAAC,KAAK,IAAI,EAAE;gBACjE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,EAAO;oBACvC,MAAM,eAAe,GAAG,6BAA6B,GAAG,yBAAyB,CAAC;oBAClF,IAAI;wBACH,QAAQ,CAAC,IAAI,CACZ,wBAAwB,eAAe,gCAAgC,eAAe,qCAAqC,GAAG,CAAC,GAAG,CAAM,KAAK,CAAC,KAAK,CAAC,KAAK,EACzJ,6BAA6B,eAAe,gCAAgC,eAAe,qCAAqC,GAAG,CAAC,GAAG,CAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAC7J,CAAC;qBACF;oBAAC,MAAM;wBACP,OAAO;qBACP;iBACD;aACD;YACD,IAAI,CAAC,CAAC,CAAY,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,CAAC;KACD,CAAA;IA9DY,oBAAI;mBAAJ,IAAI;QAOd,WAAA,eAAG,CAAA;QACH,WAAA,mBAAG,CAAA;OARO,IAAI,CA8DhB","file":"webviewIconManager.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILifecycleService, LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\n\nexport interface WebviewIcons {\n\treadonly light: URI;\n\treadonly dark: URI;\n}\n\nexport class WebviewIconManager implements IDisposable {\n\n\tprivate readonly _icons = new Map<string, WebviewIcons>();\n\n\tprivate _styleElement: HTMLStyleElement | undefined;\n\n\tconstructor(\n\t\t@ILifecycleService private readonly _lifecycleService: ILifecycleService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t) {\n\t\tthis._configService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('workbench.iconTheme')) {\n\t\t\t\tthis.updateStyleSheet();\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose() {\n\t\tthis._styleElement?.remove();\n\t\tthis._styleElement = undefined;\n\t}\n\n\tprivate get styleElement(): HTMLStyleElement {\n\t\tif (!this._styleElement) {\n\t\t\tthis._styleElement = dom.createStyleSheet();\n\t\t\tthis._styleElement.className = 'webview-icons';\n\t\t}\n\t\treturn this._styleElement;\n\t}\n\n\tpublic setIcons(\n\t\twebviewId: string,\n\t\ticonPath: WebviewIcons | undefined,\n\t) {\n\t\tif (iconPath) {\n\t\t\tthis._icons.set(webviewId, iconPath);\n\t\t} else {\n\t\t\tthis._icons.delete(webviewId);\n\t\t}\n\n\t\tthis.updateStyleSheet();\n\t}\n\n\tprivate async updateStyleSheet() {\n\t\tawait this._lifecycleService.when(LifecyclePhase.Starting);\n\n\t\tconst cssRules: string[] = [];\n\t\tif (this._configService.getValue('workbench.iconTheme') !== null) {\n\t\t\tfor (const [key, value] of this._icons) {\n\t\t\t\tconst webviewSelector = `.show-file-icons .webview-${key}-name-file-icon::before`;\n\t\t\t\ttry {\n\t\t\t\t\tcssRules.push(\n\t\t\t\t\t\t`.monaco-workbench.vs ${webviewSelector}, .monaco-workbench.hc-light ${webviewSelector} { content: \"\"; background-image: ${dom.asCSSUrl(value.light)}; }`,\n\t\t\t\t\t\t`.monaco-workbench.vs-dark ${webviewSelector}, .monaco-workbench.hc-black ${webviewSelector} { content: \"\"; background-image: ${dom.asCSSUrl(value.dark)}; }`\n\t\t\t\t\t);\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.styleElement.textContent = cssRules.join('\\n');\n\t}\n}\n"]}