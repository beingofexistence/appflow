{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/webviewPanel/browser/webviewEditorInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAgBhG,MAAa,IAAa,SAAQ,iBAAG;iBAEtB,WAAM,GAAG,gCAAH,AAAmC,CAAC;QAExD,IAAoB,MAAM;YACzB,OAAO,IAAI,CAAS,MAAM,CAAC;QAC5B,CAAC;QAED,IAAoB,QAAQ;YAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;QAED,IAAoB,YAAY;YAC/B,OAAO,oFAAoE,sDAA4C,CAAC;QACzH,CAAC;QAYD,IAAI,QAAQ;YACX,OAAO,SAAG,CAAC,IAAI,CAAC;gBACf,MAAM,EAAE,iBAAO,CAAC,YAAY;gBAC5B,IAAI,EAAE,yBAAyB,IAAI,CAAC,CAAC,EAAY;aACjD,CAAC,CAAC;QACJ,CAAC;QAKD,YACC,IAA0B,EAC1B,OAAwB,EACP,CAAkB;YAEnC,KAAK,EAAE,CAAC;YAFS,MAAC,GAAD,CAAC,CAAiB;YAvBnB,MAAC,GAAa,IAAA,UAAG,GAAW,CAAC;YAQtC,MAAC,GAAgB,KAAK,CAAC;YAmB9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAElC,IAAI,CAAC,CAAC,GAAO,IAAI,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,CAAC,GAAU,OAAO,CAAC;QACzB,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,CAAC,EAAe;oBACzB,IAAI,CAAC,CAAC,EAAS,OAAO,EAAE,CAAC;iBACzB;aACD;YACD,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;QAEe,OAAO;YACtB,OAAO,IAAI,CAAC,CAAC,CAAK;QACnB,CAAC;QAEe,QAAQ,CAAC,UAAsB;YAC9C,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;QACvB,CAAC;QAEe,cAAc;YAC7B,OAAO,SAAS,CAAC;QAClB,CAAC;QAEM,OAAO,CAAC,KAAa;YAC3B,IAAI,CAAC,CAAC,GAAO,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,CAAC,CAAiB,IAAI,EAAE,CAAC;QAC/B,CAAC;QAED,IAAW,OAAO;YACjB,OAAO,IAAI,CAAC,CAAC,CAAQ;QACtB,CAAC;QAED,IAAW,SAAS;YACnB,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QAC/B,CAAC;QAED,IAAW,QAAQ;YAClB,OAAO,IAAI,CAAC,CAAC,CAAS;QACvB,CAAC;QAED,IAAW,QAAQ,CAAC,KAA+B;YAClD,IAAI,CAAC,CAAC,GAAW,KAAK,CAAC;YACvB,IAAI,CAAC,CAAC,CAAY,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAY,KAAK,CAAC,CAAC;QACrD,CAAC;QAEe,OAAO,CAAC,KAAwC;YAC/D,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC;QAC/C,CAAC;QAED,IAAW,KAAK;YACf,OAAO,IAAI,CAAC,CAAC,CAAM;QACpB,CAAC;QAEM,WAAW,CAAC,KAAsB;YACxC,IAAI,CAAC,CAAC,GAAQ,KAAK,CAAC;QACrB,CAAC;QAES,CAAC,CAAQ,KAAW;YAC7B,IAAI,IAAI,CAAC,CAAC,EAAe;gBACxB,OAAO,SAAS,CAAC;aACjB;YACD,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC;YAC3B,KAAK,CAAC,CAAC,GAAU,IAAI,CAAC,CAAC,CAAQ;YAC/B,OAAO,KAAK,CAAC;QACd,CAAC;;IAjHF,oBAkHC","file":"webviewEditorInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { EditorInputCapabilities, GroupIdentifier, IUntypedEditorInput, Verbosity } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { IOverlayWebview } from 'vs/workbench/contrib/webview/browser/webview';\nimport { WebviewIconManager, WebviewIcons } from 'vs/workbench/contrib/webviewPanel/browser/webviewIconManager';\n\nexport interface WebviewInputInitInfo {\n\treadonly viewType: string;\n\treadonly providedId: string | undefined;\n\treadonly name: string;\n}\n\nexport class WebviewInput extends EditorInput {\n\n\tpublic static typeId = 'workbench.editors.webviewInput';\n\n\tpublic override get typeId(): string {\n\t\treturn WebviewInput.typeId;\n\t}\n\n\tpublic override get editorId(): string {\n\t\treturn this.viewType;\n\t}\n\n\tpublic override get capabilities(): EditorInputCapabilities {\n\t\treturn EditorInputCapabilities.Readonly | EditorInputCapabilities.Singleton | EditorInputCapabilities.CanDropIntoEditor;\n\t}\n\n\tprivate readonly _resourceId = generateUuid();\n\n\tprivate _name: string;\n\tprivate _iconPath?: WebviewIcons;\n\tprivate _group?: GroupIdentifier;\n\n\tprivate _webview: IOverlayWebview;\n\n\tprivate _hasTransfered = false;\n\n\tget resource() {\n\t\treturn URI.from({\n\t\t\tscheme: Schemas.webviewPanel,\n\t\t\tpath: `webview-panel/webview-${this._resourceId}`\n\t\t});\n\t}\n\n\tpublic readonly viewType: string;\n\tpublic readonly providedId: string | undefined;\n\n\tconstructor(\n\t\tinit: WebviewInputInitInfo,\n\t\twebview: IOverlayWebview,\n\t\tprivate readonly _iconManager: WebviewIconManager,\n\t) {\n\t\tsuper();\n\n\t\tthis.viewType = init.viewType;\n\t\tthis.providedId = init.providedId;\n\n\t\tthis._name = init.name;\n\t\tthis._webview = webview;\n\t}\n\n\toverride dispose() {\n\t\tif (!this.isDisposed()) {\n\t\t\tif (!this._hasTransfered) {\n\t\t\t\tthis._webview?.dispose();\n\t\t\t}\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\tpublic override getName(): string {\n\t\treturn this._name;\n\t}\n\n\tpublic override getTitle(_verbosity?: Verbosity): string {\n\t\treturn this.getName();\n\t}\n\n\tpublic override getDescription(): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic setName(value: string): void {\n\t\tthis._name = value;\n\t\tthis.webview.setTitle(value);\n\t\tthis._onDidChangeLabel.fire();\n\t}\n\n\tpublic get webview(): IOverlayWebview {\n\t\treturn this._webview;\n\t}\n\n\tpublic get extension() {\n\t\treturn this.webview.extension;\n\t}\n\n\tpublic get iconPath() {\n\t\treturn this._iconPath;\n\t}\n\n\tpublic set iconPath(value: WebviewIcons | undefined) {\n\t\tthis._iconPath = value;\n\t\tthis._iconManager.setIcons(this._resourceId, value);\n\t}\n\n\tpublic override matches(other: EditorInput | IUntypedEditorInput): boolean {\n\t\treturn super.matches(other) || other === this;\n\t}\n\n\tpublic get group(): GroupIdentifier | undefined {\n\t\treturn this._group;\n\t}\n\n\tpublic updateGroup(group: GroupIdentifier): void {\n\t\tthis._group = group;\n\t}\n\n\tprotected transfer(other: WebviewInput): WebviewInput | undefined {\n\t\tif (this._hasTransfered) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._hasTransfered = true;\n\t\tother._webview = this._webview;\n\t\treturn other;\n\t}\n}\n"]}