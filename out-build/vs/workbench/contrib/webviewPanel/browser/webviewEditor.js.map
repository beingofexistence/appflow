{"version":3,"sources":["vs/workbench/contrib/webviewPanel/browser/webviewEditor.ts"],"names":[],"mappings":"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","file":"webviewEditor.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { DisposableStore, IDisposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as nls from 'vs/nls';\nimport { IContextKeyService, IScopedContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { EditorPane } from 'vs/workbench/browser/parts/editor/editorPane';\nimport { IEditorOpenContext } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { IOverlayWebview } from 'vs/workbench/contrib/webview/browser/webview';\nimport { WebviewWindowDragMonitor } from 'vs/workbench/contrib/webview/browser/webviewWindowDragMonitor';\nimport { WebviewInput } from 'vs/workbench/contrib/webviewPanel/browser/webviewEditorInput';\nimport { IEditorDropService } from 'vs/workbench/services/editor/browser/editorDropService';\nimport { IEditorGroup, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IWorkbenchLayoutService, Parts } from 'vs/workbench/services/layout/browser/layoutService';\n\n/**\n * Tracks the id of the actively focused webview.\n */\nexport const CONTEXT_ACTIVE_WEBVIEW_PANEL_ID = new RawContextKey<string>('activeWebviewPanelId', '', {\n\ttype: 'string',\n\tdescription: nls.localize('context.activeWebviewId', \"The viewType of the currently active webview panel.\"),\n});\n\nexport class WebviewEditor extends EditorPane {\n\n\tpublic static readonly ID = 'WebviewEditor';\n\n\tprivate _element?: HTMLElement;\n\tprivate _dimension?: DOM.Dimension;\n\tprivate _visible = false;\n\tprivate _isDisposed = false;\n\n\tprivate readonly _webviewVisibleDisposables = this._register(new DisposableStore());\n\tprivate readonly _onFocusWindowHandler = this._register(new MutableDisposable());\n\n\tprivate readonly _onDidFocusWebview = this._register(new Emitter<void>());\n\tpublic override get onDidFocus(): Event<any> { return this._onDidFocusWebview.event; }\n\n\tprivate readonly _scopedContextKeyService = this._register(new MutableDisposable<IScopedContextKeyService>());\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IEditorGroupsService editorGroupsService: IEditorGroupsService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IWorkbenchLayoutService private readonly _workbenchLayoutService: IWorkbenchLayoutService,\n\t\t@IEditorDropService private readonly _editorDropService: IEditorDropService,\n\t\t@IHostService private readonly _hostService: IHostService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper(WebviewEditor.ID, telemetryService, themeService, storageService);\n\n\t\tthis._register(Event.any(\n\t\t\teditorGroupsService.onDidScroll,\n\t\t\teditorGroupsService.onDidAddGroup,\n\t\t\teditorGroupsService.onDidRemoveGroup,\n\t\t\teditorGroupsService.onDidMoveGroup,\n\t\t)(() => {\n\t\t\tif (this.webview && this._visible) {\n\t\t\t\tthis.synchronizeWebviewContainerDimensions(this.webview);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate get webview(): IOverlayWebview | undefined {\n\t\treturn this.input instanceof WebviewInput ? this.input.webview : undefined;\n\t}\n\n\toverride get scopedContextKeyService(): IContextKeyService | undefined {\n\t\treturn this._scopedContextKeyService.value;\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tconst element = document.createElement('div');\n\t\tthis._element = element;\n\t\tthis._element.id = `webview-editor-element-${generateUuid()}`;\n\t\tparent.appendChild(element);\n\n\t\tthis._scopedContextKeyService.value = this._contextKeyService.createScoped(element);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\n\t\tthis._element?.remove();\n\t\tthis._element = undefined;\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic override layout(dimension: DOM.Dimension): void {\n\t\tthis._dimension = dimension;\n\t\tif (this.webview && this._visible) {\n\t\t\tthis.synchronizeWebviewContainerDimensions(this.webview, dimension);\n\t\t}\n\t}\n\n\tpublic override focus(): void {\n\t\tsuper.focus();\n\t\tif (!this._onFocusWindowHandler.value && !isWeb) {\n\t\t\t// Make sure we restore focus when switching back to a VS Code window\n\t\t\tthis._onFocusWindowHandler.value = this._hostService.onDidChangeFocus(focused => {\n\t\t\t\tif (focused && this._editorService.activeEditorPane === this && this._workbenchLayoutService.hasFocus(Parts.EDITOR_PART)) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.webview?.focus();\n\t}\n\n\tprotected override setEditorVisible(visible: boolean, group: IEditorGroup | undefined): void {\n\t\tthis._visible = visible;\n\t\tif (this.input instanceof WebviewInput && this.webview) {\n\t\t\tif (visible) {\n\t\t\t\tthis.claimWebview(this.input);\n\t\t\t} else {\n\t\t\t\tthis.webview.release(this);\n\t\t\t}\n\t\t}\n\t\tsuper.setEditorVisible(visible, group);\n\t}\n\n\tpublic override clearInput() {\n\t\tif (this.webview) {\n\t\t\tthis.webview.release(this);\n\t\t\tthis._webviewVisibleDisposables.clear();\n\t\t}\n\n\t\tsuper.clearInput();\n\t}\n\n\tpublic override async setInput(input: EditorInput, options: IEditorOptions, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tif (this.input && input.matches(this.input)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst alreadyOwnsWebview = input instanceof WebviewInput && input.webview === this.webview;\n\t\tif (this.webview && !alreadyOwnsWebview) {\n\t\t\tthis.webview.release(this);\n\t\t}\n\n\t\tawait super.setInput(input, options, context, token);\n\t\tawait input.resolve(options);\n\n\t\tif (token.isCancellationRequested || this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (input instanceof WebviewInput) {\n\t\t\tif (this.group) {\n\t\t\t\tinput.updateGroup(this.group.id);\n\t\t\t}\n\n\t\t\tif (!alreadyOwnsWebview) {\n\t\t\t\tthis.claimWebview(input);\n\t\t\t}\n\t\t\tif (this._dimension) {\n\t\t\t\tthis.layout(this._dimension);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate claimWebview(input: WebviewInput): void {\n\t\tinput.webview.claim(this, this.scopedContextKeyService);\n\n\t\tif (this._element) {\n\t\t\tthis._element.setAttribute('aria-flowto', input.webview.container.id);\n\t\t\tDOM.setParentFlowTo(input.webview.container, this._element);\n\t\t}\n\n\t\tthis._webviewVisibleDisposables.clear();\n\n\t\t// Webviews are not part of the normal editor dom, so we have to register our own drag and drop handler on them.\n\t\tthis._webviewVisibleDisposables.add(this._editorDropService.createEditorDropTarget(input.webview.container, {\n\t\t\tcontainsGroup: (group) => this.group?.id === group.id\n\t\t}));\n\n\t\tthis._webviewVisibleDisposables.add(new WebviewWindowDragMonitor(() => this.webview));\n\n\t\tthis.synchronizeWebviewContainerDimensions(input.webview);\n\t\tthis._webviewVisibleDisposables.add(this.trackFocus(input.webview));\n\t}\n\n\tprivate synchronizeWebviewContainerDimensions(webview: IOverlayWebview, dimension?: DOM.Dimension) {\n\t\tif (!this._element?.isConnected) {\n\t\t\treturn;\n\t\t}\n\t\tconst rootContainer = this._workbenchLayoutService.getContainer(Parts.EDITOR_PART);\n\t\twebview.layoutWebviewOverElement(this._element.parentElement!, dimension, rootContainer);\n\t}\n\n\tprivate trackFocus(webview: IOverlayWebview): IDisposable {\n\t\tconst store = new DisposableStore();\n\n\t\t// Track focus in webview content\n\t\tconst webviewContentFocusTracker = DOM.trackFocus(webview.container);\n\t\tstore.add(webviewContentFocusTracker);\n\t\tstore.add(webviewContentFocusTracker.onDidFocus(() => this._onDidFocusWebview.fire()));\n\n\t\t// Track focus in webview element\n\t\tstore.add(webview.onDidFocus(() => this._onDidFocusWebview.fire()));\n\n\t\treturn store;\n\t}\n}\n"]}