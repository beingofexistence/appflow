{"version":3,"sources":["vs/workbench/contrib/editSessions/browser/editSessions.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IAoEhG,IAAA,gBAAG,EAAe,mBAAI,EAAqB,6BAAI,oCAA8C,CAAC;IAC9F,IAAA,gBAAG,EAAe,mBAAI,EAAyB,iCAAI,oCAAoD,CAAC;IAGxG,MAAM,wBAAwB,GAAoB;QACjD,EAAE,EAAE,qDAAqD;QACzD,KAAK,EAAE,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAqB,EAAE,IAAwB,CAAC,EAAE,QAAQ,EAAE,wBAAwB,EAAE;QAC/G,YAAY,EAAE,kBAAI,CAAwB,WAAW,CAAC,GAAG,CAAC;QAC1D,EAAE,EAAE,IAAI;KACR,CAAC;IACF,MAAM,sBAAsB,GAAoB;QAC/C,EAAE,EAAE,qEAAqE;QACzE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAuC,EAAE,IAAsB,CAAC,EAAE,QAAQ,EAAE,sBAAsB,EAAE;QAC7H,QAAQ,EAAE,mBAAI;QACd,YAAY,EAAE,gBAAG,CAAY,GAAG,CAAC,iBAAG,CAAU,SAAS,EAAE,EAAE,kBAAI,CAAoB;KACnF,CAAC;IACF,MAAM,wBAAwB,GAAoB;QACjD,EAAE,EAAE,kDAAkD;QACtD,KAAK,EAAE,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAU,EAAE,IAAU,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE;QACxE,QAAQ,EAAE,mBAAI;KACd,CAAC;IACF,MAAM,yCAAyC,GAAG;QACjD,EAAE,EAAE,wCAAwC;QAC5C,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA8B,EAAE,IAAoD,CAAC;KACrG,CAAC;IACF,IAAA,aAAG,EAAa,KAAM,SAAQ,aAAG;QAChC;YACC,KAAK,CAAC,EAAE,GAAG,yCAAyC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;QACpE,CAAC;QAED,KAAK,CAAC,GAAG,CAAC,QAA0B;YACnC,MAAM,wBAAwB,GAAG,QAAQ,CAAC,GAAG,CAAC,oBAAI,CAAsB,CAAC;YACzE,MAAM,OAAO,GAAG,MAAM,wBAAwB,CAAC,iBAAiB,CAAC,iBAAI,yCAAuC,IAAI,CAAC,CAAC;YAClH,MAAM,IAAI,GAAG,OAAO,EAAE,oBAAoB,EAA8C,CAAC;YACzF,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACjC,CAAC;KACD,CAAC,CAAC;IAEH,MAAM,0BAA0B,GAAG,IAAI,IAAA,cAAQ,EAAC,CAAiC,EAAE,IAA6B,CAAC,aAAa,wBAAwB,CAAC,EAAE,GAAG,CAAC;IAC7J,MAAM,qBAAqB,GAAG;QAC7B,QAAQ,kCAAyB;QACjC,IAAI,EAAE,SAAS;KACf,CAAC;IACF,MAAM,cAAc,GAAG,eAAe,CAAC;IAEvC,MAAM,6BAA6B,GAAG,mCAAmC,CAAC;IACnE,IAAM,IAAI,GAAV,MAAM,IAAyB,SAAQ,eAAG;;iBAOjC,MAAC,GAAkD,kCAAlD,AAAoF,CAAC;QAQrG,YAC8B,CAAiD,EAChE,CAAiC,EAC7B,CAAqC,EACvC,CAAmC,EAChC,CAAsC,EAC5C,CAAgC,EACvB,CAAyC,EAC/C,CAAmC,EAC1B,CAAiC,EACrC,CAAwC,EACtC,CAA0C,EAChD,CAAoC,EAC9B,CAAiC,EAC9B,CAAoC,EACjC,CAAgD,EACzD,CAAuC,EAC1C,CAA2B,EACxB,CAAuC,EACvC,CAAuC,EACxC,CAAsC,EACxC,CAAoC,EACnC,CAAqC,EACvC,CAAmC,EAC9B,CAAwC,EAC1C,CAAsC,EACxC,CAAoC,EAC3B,CAA6C,EAClD,EAAwC,EAClC,EAA+C;YAE1E,KAAK,EAAE,CAAC;YA9BsC,MAAC,GAAD,CAAC,CAA+B;YAC/C,MAAC,GAAD,CAAC,CAAe;YACZ,MAAC,GAAD,CAAC,CAAmB;YACtB,MAAC,GAAD,CAAC,CAAiB;YACf,MAAC,GAAD,CAAC,CAAoB;YAC3B,MAAC,GAAD,CAAC,CAAc;YACN,MAAC,GAAD,CAAC,CAAuB;YAC9B,MAAC,GAAD,CAAC,CAAiB;YACT,MAAC,GAAD,CAAC,CAAe;YACpB,MAAC,GAAD,CAAC,CAAsB;YACrB,MAAC,GAAD,CAAC,CAAwB;YAC/B,MAAC,GAAD,CAAC,CAAkB;YACtB,MAAC,GAAD,CAAC,CAAwB;YACb,MAAC,GAAD,CAAC,CAAkB;YAChB,MAAC,GAAD,CAAC,CAA8B;YACxC,MAAC,GAAD,CAAC,CAAqB;YAClC,MAAC,GAAD,CAAC,CAAkB;YACP,MAAC,GAAD,CAAC,CAAqB;YACtB,MAAC,GAAD,CAAC,CAAqB;YACvB,MAAC,GAAD,CAAC,CAAoB;YACvB,MAAC,GAAD,CAAC,CAAkB;YAClB,MAAC,GAAD,CAAC,CAAmB;YACtB,MAAC,GAAD,CAAC,CAAiB;YACb,MAAC,GAAD,CAAC,CAAsB;YACzB,MAAC,GAAD,CAAC,CAAoB;YACvB,MAAC,GAAD,CAAC,CAAkB;YACV,MAAC,GAAD,CAAC,CAA2B;YACjC,OAAE,GAAF,EAAE,CAAqB;YACjB,OAAE,GAAF,EAAE,CAA4B;YA1CnE,MAAC,GAAuD,EAAE,CAAC;YAM3D,MAAC,GAA6B,IAAI,CAAC,CAAC,CAAS,IAAI,eAAG,EAAgB,CAAC,CAAC;YAEtE,MAAC,GAAoB,IAAI,GAAG,EAAU,CAAC;YAsC9C,IAAI,CAAC,CAAC,GAAwB,mBAAI,CAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAiB,CAAC;YACrF,IAAI,CAAC,CAAC,GAA4B,mBAAI,CAAkB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAiB,CAAC;YACvF,IAAI,CAAC,CAAC,CAA0B,GAAG,CAAC,KAAK,CAAC,CAAC;YAE3C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAc,oBAAoB,CAAC,EAAE,GAAG,EAAE;gBACpD,OAAO;aACP;YAED,IAAI,CAAC,CAAC,GAA2B,IAAI,gCAAI,CAAoB,SAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAc,oBAAoB,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAe,IAAI,CAAC,CAAC,EAAe,IAAI,CAAC,CAAC,EAAW,IAAI,CAAC,CAAC,EAAmB,IAAI,CAAC,CAAC,EAAY,IAAI,CAAC,CAAC,CAAc,CAAC;YAClP,IAAI,CAAC,CAAC,CAA0B,WAAW,GAAG,IAAI,CAAC,CAAC,CAAyB;YAC7E,IAAI,CAAC,CAAC,GAA4B,IAAI,yBAAI,CAAuB,IAAI,CAAC,CAAC,CAAuB,cAAc,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,EAA0B,IAAI,CAAC,CAAC,EAAW,IAAI,CAAC,CAAC,EAAY,IAAI,CAAC,CAAC,EAAmB,IAAI,CAAC,CAAC,EAAiB,IAAI,CAAC,CAAC,EAAqB,IAAI,CAAC,CAAC,EAAe,IAAI,CAAC,EAAE,EAAkB,IAAI,CAAC,EAAE,EAAwB,IAAI,CAAC,CAAC,CAA0B,CAAC;YAErX,IAAI,CAAC,EAAE,EAAqB,CAAC;YAE7B,IAAI,CAAC,EAAE,EAAe,CAAC;YACvB,IAAI,CAAC,EAAE,EAAa,CAAC;YACrB,IAAI,CAAC,EAAE,EAAqC,CAAC;YAE7C,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAW,gBAAgB,CAAC,qCAAI,CAA2B,MAAM,EAAE,IAAI,qCAAI,CAA2B,IAAI,CAAC,CAAC,CAA0B,CAAC,CAAC,CAAC;YAC9J,IAAI,CAAC,CAAC,CAAgB,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC1C,IAAI,CAAC,CAAC,MAAM,kCAA0B,IAAI,IAAI,CAAC,CAAC,CAA0B,UAAU,IAAI,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,+CAA+C,CAAC,KAAK,YAAY,IAAI,CAAC,aAAE,EAAK;oBACvM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAoB,EAAE,EAAE,EAAE,EAAE,yBAAyB,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAyB,EAAE,IAAoC,CAAC,EAAE,CAAC,CAAC;iBACzJ;YACF,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAA0B,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAuB,CAAC,CAAC,CAAC;YAClG,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAA0B,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAuB,CAAC,CAAC,CAAC;QACpG,CAAC;QAEO,KAAK,CAAC,EAAE;YACf,MAAM,wBAAwB,GAAG,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,mCAAmC,CAAC,KAAK,UAAU,CAAC;YAExH,IAAI,IAAI,CAAC,CAAC,CAAkB,aAAa,KAAK,SAAS,EAAE;gBACxD,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,uDAAuD,IAAI,CAAC,CAAC,CAAkB,aAAa,4BAA4B,CAAC,CAAC;gBAC/I,MAAM,IAAI,CAAC,CAAC,CAAe,YAAY,CAAC,qBAAqB,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAkB,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAkB,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC;aACpQ;iBAAM,IAAI,wBAAwB,IAAI,IAAI,CAAC,CAAC,CAA0B,UAAU,EAAE;gBAClF,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,0DAA0D,CAAC,CAAC;gBACjF,oEAAoE;gBACpE,oEAAoE;gBACpE,4EAA4E;gBAC5E,MAAM,IAAI,CAAC,CAAC,CAAe,YAAY,CAAC,qBAAqB,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC,MAAM,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;aAClK;iBAAM,IAAI,wBAAwB,EAAE;gBACpC,8EAA8E;gBAC9E,MAAM,wCAAwC,GAAG,IAAI,CAAC,CAAC,CAAc,UAAU,CAAC,MAAI,CAAqB,CAAC,qCAA2E,KAAK,CAAC,CAAC;gBAC5L,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,iGAAiG,wCAAwC,EAAE,CAAC,CAAC;gBAElK,MAAM,yBAAyB,GAAG,GAAG,EAAE;oBACtC,mFAAmF;oBACnF,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,2DAA2D,CAAC,CAAC;oBAClF,IAAI,CAAC,EAAE,EAAuB,CAAC;oBAC/B,IAAI,CAAC,CAAC,CAA0B,GAAG,CAAC,IAAI,CAAC,CAAC;oBAC1C,4EAA4E;oBAC5E,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAA0B,WAAW,CAAC,KAAK,IAAI,EAAE;wBACzE,UAAU,CAAC,OAAO,EAAE,CAAC;wBACrB,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,6FAA6F,CAAC,CAAC;wBACpH,MAAM,IAAI,CAAC,CAAC,CAAe,YAAY,CAAC,qBAAqB,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC,MAAM,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;wBAClK,IAAI,CAAC,CAAC,CAAc,MAAM,CAAC,MAAI,CAAqB,CAAC,oCAA0E,CAAC;wBAChI,IAAI,CAAC,CAAC,CAAkB,UAAU,GAAG,SAAS,CAAC;oBAChD,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC;gBAEF,IAAI,CAAC,IAAI,CAAC,CAAC,CAAkB,UAAU,KAAK,SAAS,CAAC;oBACrD,CAAC,IAAI,CAAC,CAAC,CAA0B,UAAU;oBAC3C,gEAAgE;oBAChE,wCAAwC,KAAK,KAAK,EACjD;oBACD,2CAA2C;oBAC3C,IAAI,CAAC,CAAC,CAAc,KAAK,CAAC,MAAI,CAAqB,CAAC,EAAiD,IAAI,mEAAkD,CAAC;oBAC5J,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,sCAAsC,CAAC,CAAC;oBAC7D,MAAM,IAAI,CAAC,CAAC,CAA0B,UAAU,CAAC,MAAM,CAAC,CAAC;oBACzD,IAAI,IAAI,CAAC,CAAC,CAA0B,UAAU,EAAE;wBAC/C,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,wEAAwE,CAAC,CAAC;wBAC/F,MAAM,IAAI,CAAC,CAAC,CAAe,YAAY,CAAC,qBAAqB,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC,MAAM,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;qBAClK;yBAAM;wBACN,yBAAyB,EAAE,CAAC;qBAC5B;iBACD;qBAAM,IAAI,CAAC,IAAI,CAAC,CAAC,CAA0B,UAAU;oBACrD,wDAAwD;oBACxD,wCAAwC,KAAK,IAAI,EAChD;oBACD,yBAAyB,EAAE,CAAC;iBAC5B;aACD;iBAAM;gBACN,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,uCAAuC,CAAC,CAAC;aAC/D;QACF,CAAC;QAEO,EAAE;YACT,IAAI,IAAI,CAAC,CAAC,CAA0B,UAAU,EAAE;gBAC/C,OAAO,IAAI,CAAC,CAAC,CAA2B,KAAK,EAAE,CAAC;aAChD;YAED,MAAM,KAAK,GAAG,IAAI,cAAG,CAAS,CAAC,EAAE,GAAG,EAAE,CAAC,IAAA,cAAQ,EAAC,CAAiC,EAAE,IAAiC,CAAC,CAAC,CAAC;YACvH,IAAI,CAAC,CAAC,CAA2B,KAAK,GAAG,IAAI,CAAC,CAAC,CAAe,oBAAoB,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/F,CAAC;QAEO,KAAK,CAAC,EAAE;YACf,MAAM,uBAAuB,GAAG,IAAI,kBAAG,EAAsB,CAAC;YAC9D,MAAM,IAAI,CAAC,CAAC,CAAe,YAAY,CAAC;gBACvC,QAAQ,kCAAyB;gBACjC,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAuB,EAAE,IAA4B,CAAC;aACtE,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,uBAAuB,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE;gBAChF,uBAAuB,CAAC,MAAM,EAAE,CAAC;gBACjC,uBAAuB,CAAC,OAAO,EAAE,CAAC;YACnC,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,EAAE;YACT,MAAM,SAAS,GAAG,cAAG,CAAM,EAAE,CAA0B,kBAAc,CAAC,sBAAsB,CAAC,CAAC,qBAAqB,CAClH;gBACC,EAAE,EAAE,mBAAI;gBACR,KAAK,EAAE,EAAE,KAAK,EAAE,mBAAI,EAAiB,QAAQ,EAAE,mBAAI,EAA0B;gBAC7E,cAAc,EAAE,IAAI,iBAAG,CACtB,wBAAI,EACJ,CAAC,mBAAI,EAAwB,EAAE,oCAAoC,EAAE,IAAI,EAAE,CAAC,CAC5E;gBACD,IAAI,EAAE,mBAAI;gBACV,WAAW,EAAE,IAAI;aACjB,yCAAiC,EAAE,wBAAwB,EAAE,IAAI,EAAE,CACpE,CAAC;YACF,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAoB,cAAc,CAAC,wBAAI,EAAmB,SAAS,CAAC,CAAC,CAAC;QAC5F,CAAC;QAEO,EAAE;YACT,IAAI,CAAC,EAAE,EAAiC,CAAC;YAEzC,IAAI,CAAC,EAAE,EAAqC,CAAC;YAC7C,IAAI,CAAC,EAAE,EAAoC,CAAC;YAE5C,IAAI,CAAC,EAAE,EAAmC,CAAC;YAE3C,IAAI,CAAC,EAAE,EAAiC,CAAC;YACzC,IAAI,CAAC,EAAE,EAA0C,CAAC;QACnD,CAAC;QAEO,EAAE;YACT,IAAI,CAAC,CAAC,CAAS,IAAA,aAAG,EAAa,MAAM,qBAAsB,SAAQ,aAAG;gBACrE;oBACC,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBACjC,CAAC;gBAED,GAAG,CAAC,QAA0B,EAAE,GAAG,IAAW;oBAC7C,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,YAAG,CAAY,CAAC;oBACnD,KAAK,aAAa,CAAC,WAAW,CAAC,mBAAI,CAAc,CAAC;gBACnD,CAAC;aACD,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,EAAE;YACT,MAAM,IAAI,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,CAAC,CAAS,IAAA,aAAG,EAAa,MAAM,mBAAoB,SAAQ,aAAG;gBACnE;oBACC,KAAK,CAAC;wBACL,EAAE,EAAE,iDAAiD;wBACrD,KAAK,EAAE,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAoB,EAAE,IAAoB,CAAC,EAAE,QAAQ,EAAE,oBAAoB,EAAE;wBACtG,QAAQ,EAAE,mBAAI;wBACd,EAAE,EAAE,IAAI;qBACR,CAAC,CAAC;gBACJ,CAAC;gBAED,KAAK,CAAC,GAAG,CAAC,QAA0B;oBACnC,IAAI,CAAC,CAAC,CAAsB,GAAG,CAAC,IAAI,CAAC,CAAC;oBACtC,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAG,CAAW,CAAC;oBACjD,MAAM,YAAY,CAAC,QAAQ,CAAC,mBAAI,CAAuB,CAAC;gBACzD,CAAC;aACD,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,EAAE;YACT,MAAM,IAAI,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,CAAC,CAAS,IAAA,aAAG,EAAa,MAAM,yBAA0B,SAAQ,aAAG;gBACzE;oBACC,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBACjC,CAAC;gBAED,KAAK,CAAC,GAAG,CAAC,QAA0B,EAAE,YAA6B,EAAE,WAA+B;oBAQnG,yDAAyD;oBACzD,IAAI,GAAG,GAAyC,YAAY,CAAC;oBAC7D,IAAI,CAAC,WAAW,IAAI,CAAC,GAAG,EAAE;wBACzB,WAAW,GAAG,MAAM,IAAI,CAAC,EAAE,EAAkC,CAAC;wBAC9D,IAAI,CAAC,WAAW,EAAE;4BACjB,IAAI,CAAC,CAAC,CAAgB,UAAU,CAA0D,sCAAsC,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC;4BAC9J,OAAO;yBACP;qBACD;oBAED,2FAA2F;oBAC3F,MAAM,sBAAsB,GAAG,MAAM,IAAI,CAAC,EAAE,EAA+B,CAAC;oBAE5E,yCAAyC;oBACzC,IAAI,GAAuB,CAAC;oBAC5B,IAAI,sBAAsB,EAAE;wBAK3B,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAsE,+BAA+B,CAAC,CAAC;wBAEvI,MAAM,uBAAuB,GAAG,IAAI,kBAAG,EAAsB,CAAC;wBAC9D,IAAI;4BACH,GAAG,GAAG,MAAM,IAAI,CAAC,CAAC,CAAe,YAAY,CAAC;gCAC7C,QAAQ,wCAA+B;gCACvC,WAAW,EAAE,IAAI;gCACjB,IAAI,EAAE,SAAS;gCACf,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA4B,EAAE,IAAiC,CAAC;6BAChF,EAAE,KAAK,IAAI,EAAE;gCACb,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,uBAAuB,CAAC,KAAK,CAAC,CAAC;gCAC9E,IAAI,GAAG,KAAK,SAAS,EAAE;oCACtB,IAAI,CAAC,CAAC,CAAgB,UAAU,CAA0D,uCAAuC,EAAE,EAAE,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,IAAA,mBAAI,EAAgB,GAAG,CAAC,EAAE,CAAC,CAAC;iCACtM;qCAAM;oCACN,IAAI,CAAC,CAAC,CAAgB,UAAU,CAA0D,uCAAuC,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;iCAChK;gCACD,OAAO,GAAG,CAAC;4BACZ,CAAC,EAAE,GAAG,EAAE;gCACP,uBAAuB,CAAC,MAAM,EAAE,CAAC;gCACjC,uBAAuB,CAAC,OAAO,EAAE,CAAC;gCAClC,IAAI,CAAC,CAAC,CAAgB,UAAU,CAA0D,uCAAuC,EAAE,EAAE,OAAO,EAAE,sBAAsB,EAAE,CAAC,CAAC;4BACzK,CAAC,CAAC,CAAC;yBACH;wBAAC,OAAO,EAAE,EAAE;4BACZ,IAAI,CAAC,CAAC,CAAgB,UAAU,CAA0D,uCAAuC,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC;4BAC/J,MAAM,EAAE,CAAC;yBACT;qBACD;oBAED,4BAA4B;oBAC5B,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE,CAAiB,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;oBACrE,IAAI,GAAG,KAAK,SAAS,EAAE;wBACtB,OAAO;qBACP;oBAED,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,kBAAkB,EAAE;wBACpD,MAAM,UAAU,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;wBAC3C,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;4BACd,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,cAAc,IAAI,UAAU,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,cAAc,IAAI,UAAU,eAAe;yBAC5I,CAAC,CAAC;wBAEH,eAAe;wBACf,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,WAAW,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;wBAClD,MAAM,IAAI,CAAC,CAAC,CAAa,IAAI,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC3D;yBAAM,IAAI,CAAC,sBAAsB,IAAI,GAAG,KAAK,kBAAkB,EAAE;wBACjE,2CAA2C;wBAC3C,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,WAAW,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;wBAClD,MAAM,IAAI,CAAC,CAAC,CAAa,IAAI,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC3D;yBAAM,IAAI,GAAG,KAAK,SAAS,IAAI,sBAAsB,EAAE;wBACvD,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,iDAAiD,wBAAwB,CAAC,EAAE,GAAG,CAAC,CAAC;qBACtG;gBACF,CAAC;aACD,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,EAAE;YACT,MAAM,IAAI,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,CAAC,CAAS,IAAA,aAAG,EAAa,MAAM,6BAA8B,SAAQ,aAAG;gBAC7E;oBACC,KAAK,CAAC;wBACL,EAAE,EAAE,6CAA6C;wBACjD,KAAK,EAAE,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,EAA6B,EAAE,IAAkC,CAAC,EAAE,QAAQ,EAAE,kCAAkC,EAAE;wBAC3I,QAAQ,EAAE,mBAAI;wBACd,EAAE,EAAE,IAAI;qBACR,CAAC,CAAC;gBACJ,CAAC;gBAED,KAAK,CAAC,GAAG,CAAC,QAA0B,EAAE,aAAsB,EAAE,yBAAmC;oBAChG,MAAM,IAAI,CAAC,CAAC,CAAe,YAAY,CAAC,EAAE,GAAG,qBAAqB,EAAE,KAAK,EAAE,0BAA0B,EAAE,EAAE,KAAK,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,SAAS,EAAE,yBAAyB,CAAC,CAAC,CAAC;gBACzM,CAAC;aACD,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,CAAC,CAAS,IAAA,aAAG,EAAa,MAAM,6BAA8B,SAAQ,aAAG;gBAC7E;oBACC,KAAK,CAAC;wBACL,EAAE,EAAE,4DAA4D;wBAChE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,EAAsB,EAAE,IAAqC,CAAC,EAAE,QAAQ,EAAE,qCAAqC,EAAE;wBAC1I,QAAQ,EAAE,WAAW;wBACrB,EAAE,EAAE,IAAI;qBACR,CAAC,CAAC;gBACJ,CAAC;gBAED,KAAK,CAAC,GAAG,CAAC,QAA0B,EAAE,aAAsB;oBAC3D,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,CAAC,CAAiB,KAAK,CAAC,EAAE,MAAM,EAAE,uBAAuB,EAAE,CAAC,CAAC;oBACrF,IAAI,IAAI,EAAE;wBACT,IAAI,CAAC,CAAC,CAA0B,iBAAiB,CAAC,GAAG,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;qBAClG;oBACD,MAAM,IAAI,CAAC,CAAC,CAAe,YAAY,CAAC,EAAE,GAAG,qBAAqB,EAAE,KAAK,EAAE,0BAA0B,EAAE,EAAE,KAAK,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;gBACrN,CAAC;aACD,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,EAAE;YACT,MAAM,IAAI,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,CAAC,CAAS,IAAA,aAAG,EAAa,MAAM,4BAA6B,SAAQ,aAAG;gBAC5E;oBACC,KAAK,CAAC;wBACL,EAAE,EAAE,6CAA6C;wBACjD,KAAK,EAAE,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,EAAgC,EAAE,IAAgC,CAAC,EAAE,QAAQ,EAAE,gCAAgC,EAAE;wBAC1I,QAAQ,EAAE,mBAAI;wBACd,EAAE,EAAE,IAAI;qBACR,CAAC,CAAC;gBACJ,CAAC;gBAED,KAAK,CAAC,GAAG,CAAC,QAA0B;oBACnC,MAAM,uBAAuB,GAAG,IAAI,kBAAG,EAAsB,CAAC;oBAC9D,MAAM,IAAI,CAAC,CAAC,CAAe,YAAY,CAAC;wBACvC,QAAQ,wCAA+B;wBACvC,KAAK,EAAE,IAAA,cAAQ,EAAC,EAAyB,EAAE,IAA4B,CAAC;qBACxE,EAAE,KAAK,IAAI,EAAE;wBAKb,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAkC,oBAAoB,CAAC,CAAC;wBAExF,MAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,uBAAuB,CAAC,KAAK,CAAC,CAAC;oBAClE,CAAC,EAAE,GAAG,EAAE;wBACP,uBAAuB,CAAC,MAAM,EAAE,CAAC;wBACjC,uBAAuB,CAAC,OAAO,EAAE,CAAC;oBACnC,CAAC,CAAC,CAAC;gBACJ,CAAC;aACD,CAAC,CAAC,CAAC;QACL,CAAC;QAED,KAAK,CAAC,iBAAiB,CAAC,GAAY,EAAE,MAAgB,EAAE,yBAAmC,EAAE,iBAA2B,EAAE,QAAmC,EAAE,cAAuB;YACrL,8DAA8D;YAC9D,MAAM,IAAI,CAAC,CAAC,CAAkB,cAAc,EAAE,CAAC;YAE/C,gEAAgE;YAChE,oDAAoD;YACpD,IAAI,IAAI,CAAC,CAAC,CAAc,iBAAiB,EAAE,iCAAyB,EAAE;gBACrE,OAAO;aACP;YAED,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,wCAAwC,GAAG,KAAK,CAAC,CAAC,CAAC,uCAAuC,CAAC,CAAC;YAErI,IAAI,MAAM,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAA0B,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE;gBAChF,OAAO;aACP;YAQD,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAoC,qBAAqB,CAAC,CAAC;YAE3F,WAAW,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;YAE7D,QAAQ,EAAE,MAAM,CAAC,EAAE,OAAO,EAAE,IAAA,cAAQ,EAAC,EAA2B,EAAE,IAAuC,CAAC,EAAE,CAAC,CAAC;YAC9G,MAAM,IAAI,GAAG,cAAc,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAA0B,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YACrI,IAAI,CAAC,IAAI,EAAE;gBACV,IAAI,GAAG,KAAK,SAAS,IAAI,CAAC,MAAM,EAAE;oBACjC,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,IAAA,cAAQ,EAAC,EAAkB,EAAE,IAAgD,CAAC,CAAC,CAAC;iBAC9G;qBAAM,IAAI,GAAG,KAAK,SAAS,EAAE;oBAC7B,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,IAAA,cAAQ,EAAC,EAA0B,EAAE,IAAqD,EAAE,GAAG,CAAC,CAAC,CAAC;iBAChI;gBACD,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,uGAAuG,GAAG,GAAG,CAAC,CAAC,CAAC,sFAAsF,CAAC,CAAC;gBACjP,OAAO;aACP;YAED,QAAQ,EAAE,MAAM,CAAC,EAAE,OAAO,EAAE,0BAA0B,EAAE,CAAC,CAAC;YAC1D,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7C,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YAEf,IAAI,WAAW,CAAC,OAAO,GAAG,mBAAI,EAAsB;gBACnD,IAAI,CAAC,CAAC,CAAmB,KAAK,CAAC,IAAA,cAAQ,EAAC,EAAgB,EAAE,IAAyF,EAAE,IAAI,CAAC,CAAC,CAAc,QAAQ,CAAC,CAAC,CAAC;gBACpL,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAoC,6BAA6B,EAAE,EAAE,QAAQ,EAAE,IAAA,mBAAI,EAAgB,GAAG,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC,CAAC;gBAC1K,OAAO;aACP;YAED,IAAI;gBACH,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,GAAG,MAAM,IAAI,CAAC,EAAE,CAAc,WAAW,EAAE,GAAG,EAAE,yBAAyB,EAAE,iBAAiB,CAAC,CAAC;gBACnI,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBACzB,OAAO;iBACP;gBAED,sGAAsG;gBACtG,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClC,8BAA8B;oBAE9B,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,CAAC,CAAa,OAAO,CAAC;wBACtD,IAAI,EAAE,uBAAQ,CAAC,OAAO;wBACtB,OAAO,EAAE,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;4BACvC,IAAA,cAAQ,EAAC,EAAkC,EAAE,IAA8G,EAAE,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;4BACzL,IAAA,cAAQ,EAAC,EAA+B,EAAE,IAA0F,EAAE,IAAA,eAAG,EAAM,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBAC3K,MAAM,EAAE,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAA,aAAG,EAAiB,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;qBAC7G,CAAC,CAAC;oBAEH,IAAI,CAAC,SAAS,EAAE;wBACf,OAAO;qBACP;iBACD;gBAED,KAAK,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,OAAO,EAAE;oBAC9C,IAAI,IAAI,KAAK,yBAAU,CAAC,QAAQ,EAAE;wBACjC,MAAM,IAAI,CAAC,CAAC,CAAW,SAAS,CAAC,GAAG,EAAE,IAAA,mBAAI,EAAyB,WAAW,CAAC,OAAO,EAAE,QAAS,CAAC,CAAC,CAAC;qBACpG;yBAAM,IAAI,IAAI,KAAK,yBAAU,CAAC,QAAQ,IAAI,MAAM,IAAI,CAAC,CAAC,CAAW,MAAM,CAAC,GAAG,CAAC,EAAE;wBAC9E,MAAM,IAAI,CAAC,CAAC,CAAW,GAAG,CAAC,GAAG,CAAC,CAAC;qBAChC;iBACD;gBAED,MAAM,IAAI,CAAC,CAAC,EAA2B,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBAExD,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,kCAAkC,GAAG,yDAAyD,CAAC,CAAC;gBACrH,MAAM,IAAI,CAAC,CAAC,CAA0B,MAAM,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;gBAClE,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,iCAAiC,GAAG,GAAG,CAAC,CAAC;gBAE9D,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAoC,6BAA6B,EAAE,EAAE,QAAQ,EAAE,IAAA,mBAAI,EAAgB,GAAG,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC,CAAC;aACvK;YAAC,OAAO,EAAE,EAAE;gBACZ,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,yCAAyC,EAAG,EAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC3F,IAAI,CAAC,CAAC,CAAmB,KAAK,CAAC,IAAA,cAAQ,EAAC,EAAe,EAAE,IAAuD,CAAC,CAAC,CAAC;aACnH;YAED,WAAW,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;QAC7D,CAAC;QAEO,KAAK,CAAC,EAAE,CAAc,WAAwB,EAAE,GAAW,EAAE,yBAAyB,GAAG,KAAK,EAAE,iBAAiB,GAAG,KAAK;YAChI,MAAM,OAAO,GAAqE,EAAE,CAAC;YACrF,MAAM,kBAAkB,GAAG,EAAE,CAAC;YAC9B,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAc,YAAY,EAAE,CAAC,OAAO,CAAC;YACpE,MAAM,uBAAuB,GAAG,IAAI,kBAAG,EAAsB,CAAC;YAE9D,KAAK,MAAM,MAAM,IAAI,WAAW,CAAC,OAAO,EAAE;gBACzC,IAAI,UAAwC,CAAC;gBAE7C,IAAI,MAAM,CAAC,iBAAiB,EAAE;oBAC7B,sDAAsD;oBACtD,KAAK,MAAM,CAAC,IAAI,gBAAgB,EAAE;wBACjC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,CAAC,CAA0B,wBAAwB,CAAC,CAAC,EAAE,uBAAuB,CAAC,KAAK,CAAC,CAAC;wBAClH,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,qBAAqB,QAAQ,yCAAyC,MAAM,CAAC,iBAAiB,KAAK,CAAC,CAAC;wBAE1H,IAAI,IAAA,aAAG,EAAI,QAAQ,EAAE,MAAM,CAAC,iBAAiB,CAAC,IAAI,yBAAyB,EAAE;4BAC5E,UAAU,GAAG,CAAC,CAAC;4BACf,MAAM;yBACN;wBAED,IAAI,QAAQ,KAAK,SAAS,EAAE;4BAC3B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,CAAC,CAA0B,+BAA+B,CAAC,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,iBAAiB,EAAE,uBAAuB,CAAC,KAAK,CAAC,CAAC;4BAC1J,IAAI,KAAK,KAAK,uCAAwB,CAAC,QAAQ,EAAE;gCAChD,UAAU,GAAG,CAAC,CAAC;gCACf,MAAM;6BACN;iCAAM,IAAI,KAAK,KAAK,uCAAwB,CAAC,OAAO;gCACpD,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,4DAA4D,CAAC,KAAK,IAAI,EACxG;gCACD,IAAI,CAAC,iBAAiB,EAAE;oCACvB,0CAA0C;oCAC1C,IAAI,CAAC,CAAC,CAAmB,MAAM,CAC9B,uBAAQ,CAAC,IAAI,EACb,IAAA,cAAQ,EAAC,EAAyB,EAAE,IAAkG,CAAC,EACvI,CAAC,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,EAAQ,EAAE,IAAQ,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,CACzG,CAAC;iCACF;qCAAM;oCACN,UAAU,GAAG,CAAC,CAAC;oCACf,MAAM;iCACN;6BACD;yBACD;qBACD;iBACD;qBAAM;oBACN,UAAU,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC;iBAClE;gBAED,IAAI,CAAC,UAAU,EAAE;oBAChB,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,qBAAqB,MAAM,CAAC,cAAc,CAAC,MAAM,uCAAuC,GAAG,6CAA6C,CAAC,CAAC;oBAC/J,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,kBAAkB,EAAE,EAAE,EAAE,wBAAwB,EAAE,EAAE,EAAE,CAAC;iBAC7E;gBAED,MAAM,YAAY,GAAG,IAAI,GAAG,EAAU,CAAC;gBACvC,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,CAAC,CAAU,YAAY,EAAE;oBACtD,IAAI,UAAU,CAAC,QAAQ,CAAC,OAAO,KAAK,SAAS;wBAC5C,IAAI,CAAC,CAAC,CAAc,kBAAkB,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,KAAK,MAAM,CAAC,IAAI,EACxF;wBACD,MAAM,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAkB,UAAU,CAAC,CAAC;wBAC/D,iBAAiB,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;qBAC3E;iBACD;gBAED,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,cAAc,EAAE;oBAC3C,MAAM,GAAG,GAAG,IAAA,eAAG,EAAM,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC;oBAE9D,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACpE,IAAI,MAAM,IAAI,CAAC,EAAE,CAAsB,YAAY,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE;wBAClE,kBAAkB,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;qBAC/E;iBACD;aACD;YAED,OAAO,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC;QACxC,CAAC;QAEO,KAAK,CAAC,EAAE,CAAsB,YAAyB,EAAE,sBAA2B,EAAE,cAAsB;YACnH,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,sBAAsB,CAAC,QAAQ,EAAE,CAAC,EAAE;gBACzD,OAAO,KAAK,CAAC;aACb;YAED,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,cAAc,CAAC;YAE1C,QAAQ,IAAI,EAAE;gBACb,KAAK,CAAC,yBAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC3B,MAAM,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAA,UAAG,EAAK,QAAQ,CAAC,EAAE,IAAA,UAAG,EAAK,IAAA,YAAG,EAAU,CAAC,MAAM,IAAI,CAAC,CAAC,CAAW,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5K,OAAO,gBAAgB,KAAK,gBAAgB,CAAC;iBAC7C;gBACD,KAAK,CAAC,yBAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC3B,OAAO,MAAM,IAAI,CAAC,CAAC,CAAW,MAAM,CAAC,sBAAsB,CAAC,CAAC;iBAC7D;gBACD;oBACC,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;aAC3C;QACF,CAAC;QAED,KAAK,CAAC,gBAAgB,CAAC,gBAAyB,EAAE,iBAAoC;YACrF,MAAM,OAAO,GAAa,EAAE,CAAC;YAC7B,IAAI,eAAe,GAAG,CAAC,CAAC;YACxB,IAAI,QAAQ,GAAG,KAAK,CAAC;YAErB,kEAAkE;YAClE,MAAM,IAAI,CAAC,CAAC,CAAa,OAAO,EAAE,CAAC;YAEnC,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,CAAC,CAAU,YAAY,EAAE;gBACtD,uFAAuF;gBACvF,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,CAAkB,UAAU,CAAC,CAAC,CAAC,qDAAqD;gBAE/G,MAAM,cAAc,GAAa,EAAE,CAAC;gBAEpC,MAAM,EAAE,OAAO,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;gBACxC,MAAM,eAAe,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAc,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC9F,IAAI,IAAI,GAAG,eAAe,EAAE,IAAI,CAAC;gBAEjC,KAAK,MAAM,GAAG,IAAI,WAAW,EAAE;oBAC9B,MAAM,eAAe,GAAG,IAAI,CAAC,CAAC,CAAc,kBAAkB,CAAC,GAAG,CAAC,CAAC;oBACpE,IAAI,CAAC,eAAe,EAAE;wBACrB,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,2BAA2B,GAAG,CAAC,QAAQ,EAAE,+CAA+C,CAAC,CAAC;wBAE/G,SAAS;qBACT;oBAED,MAAM,IAAI,CAAC,CAAC,CAA0B,+BAA+B,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;oBAE1G,IAAI,GAAG,IAAI,IAAI,eAAe,CAAC,IAAI,CAAC;oBACpC,MAAM,gBAAgB,GAAG,IAAA,eAAG,EAAU,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC;oBAE5E,uCAAuC;oBACvC,IAAI;wBACH,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAW,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE;4BAC/C,SAAS;yBACT;qBACD;oBAAC,MAAM,GAAG;oBAEX,QAAQ,GAAG,IAAI,CAAC;oBAGhB,IAAI,MAAM,IAAI,CAAC,CAAC,CAAW,MAAM,CAAC,GAAG,CAAC,EAAE;wBACvC,MAAM,QAAQ,GAAG,IAAA,YAAG,EAAU,CAAC,MAAM,IAAI,CAAC,CAAC,CAAW,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;wBAC5E,eAAe,IAAI,QAAQ,CAAC,MAAM,CAAC;wBACnC,IAAI,eAAe,GAAG,IAAI,CAAC,CAAC,CAA0B,UAAU,EAAE;4BACjE,IAAI,CAAC,CAAC,CAAmB,KAAK,CAAC,IAAA,cAAQ,EAAC,EAAmB,EAAE,IAAkE,CAAC,CAAC,CAAC;4BAClI,OAAO,SAAS,CAAC;yBACjB;wBAED,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,yBAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,uBAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,CAAC,CAAC;qBACpI;yBAAM;wBACN,yBAAyB;wBACzB,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,yBAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,uBAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,CAAC,CAAC;qBACrI;iBACD;gBAED,IAAI,iBAAiB,GAAG,SAAS,CAAC;gBAClC,IAAI,eAAe,KAAK,IAAI,IAAI,eAAe,KAAK,SAAS,EAAE;oBAC9D,iBAAiB,GAAG,MAAM,IAAI,CAAC,CAAC,CAA0B,wBAAwB,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;iBACvH;gBAED,4EAA4E;gBAC5E,OAAO,CAAC,IAAI,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,iBAAiB,EAAE,iBAAiB,IAAI,SAAS,EAAE,WAAW,EAAE,eAAe,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;aACpJ;YAED,oCAAoC;YACpC,MAAM,IAAI,CAAC,CAAC,EAA2B,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAEtD,IAAI,CAAC,QAAQ,EAAE;gBACd,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,8EAA8E,CAAC,CAAC;gBACrG,IAAI,gBAAgB,EAAE;oBACrB,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,IAAA,cAAQ,EAAC,EAA6B,EAAE,IAA8E,CAAC,CAAC,CAAC;iBACvJ;gBACD,OAAO,SAAS,CAAC;aACjB;YAED,MAAM,IAAI,GAAgB,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAA0B,oBAAoB,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;YAErJ,IAAI;gBACH,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,yBAAyB,CAAC,CAAC;gBAChD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,CAAC,CAA0B,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;gBAC9E,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,gCAAgC,GAAG,GAAG,CAAC,CAAC;gBAC7D,OAAO,GAAG,CAAC;aACX;YAAC,OAAO,EAAE,EAAE;gBACZ,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC,wCAAwC,EAAG,EAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAQ1F,IAAI,EAAE,YAAY,mBAAI,EAAoB;oBACzC,QAAQ,EAAE,CAAC,IAAI,EAAE;wBAChB;4BACC,yDAAyD;4BACzD,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAgD,4BAA4B,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;4BACtI,IAAI,CAAC,CAAC,CAAmB,KAAK,CAAC,IAAA,cAAQ,EAAC,EAAmB,EAAE,IAAkE,CAAC,CAAC,CAAC;4BAClI,MAAM;wBACP;4BACC,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAgD,4BAA4B,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;4BACrI,IAAI,CAAC,CAAC,CAAmB,KAAK,CAAC,IAAA,cAAQ,EAAC,EAAgB,EAAE,IAAwC,CAAC,CAAC,CAAC;4BACrG,MAAM;qBACP;iBACD;aACD;YAED,OAAO,SAAS,CAAC;QAClB,CAAC;QAEO,EAAE,CAAkB,UAA0B;YACrD,OAAO,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,cAAc,EAAE,EAAE;gBAC/E,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjF,OAAO,SAAS,CAAC;YAClB,CAAC,EAAE,IAAI,GAAG,EAAO,CAAC,CAAC,CAAC,qDAAqD;QAC1E,CAAC;QAEO,EAAE;YACT,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,CAAC,CAAU,YAAY,EAAE;gBACtD,IAAI,IAAI,CAAC,EAAE,CAAkB,UAAU,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE;oBAClD,OAAO,IAAI,CAAC;iBACZ;aACD;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAEO,KAAK,CAAC,EAAE;YAOf,iEAAiE;YACjE,IAAI,IAAI,CAAC,CAAC,CAA0B,UAAU,EAAE;gBAC/C,OAAO,IAAI,CAAC,EAAE,EAAc,CAAC;aAC7B;YAED,yEAAyE;YACzE,IAAI,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,6BAA6B,CAAC,KAAK,KAAK,EAAE;gBAChF,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAkE,0CAA0C,EAAE,EAAE,OAAO,EAAE,gCAAgC,EAAE,CAAC,CAAC;gBAC7L,OAAO,KAAK,CAAC;aACb;YAED,qFAAqF;YACrF,IAAI,IAAI,CAAC,EAAE,EAAc,EAAE;gBAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAiB,eAAe,EAAkB,CAAC;gBAC3E,SAAS,CAAC,WAAW,GAAG,IAAA,cAAQ,EAAC,EAA6B,EAAE,IAAuD,CAAC,CAAC;gBACzH,SAAS,CAAC,EAAE,GAAG,KAAK,CAAC;gBACrB,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC;gBAChC,MAAM,gBAAgB,GAAG,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,EAAoB,EAAE,IAAuC,CAAC,EAAE,CAAC;gBAC5G,MAAM,mBAAmB,GAAG,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,EAAuB,EAAE,IAAyC,CAAC,EAAE,CAAC;gBACpH,SAAS,CAAC,KAAK,GAAG,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,CAAC;gBAE1D,MAAM,wBAAwB,GAAG,MAAM,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;oBAC/E,SAAS,CAAC,WAAW,CAAC,GAAG,EAAE;wBAC1B,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,gBAAgB,CAAC,CAAC;wBACzD,SAAS,CAAC,IAAI,EAAE,CAAC;oBAClB,CAAC,CAAC,CAAC;oBACH,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE;wBACxB,MAAM,CAAC,IAAI,WAAE,EAAiB,CAAC,CAAC;wBAChC,SAAS,CAAC,IAAI,EAAE,CAAC;oBAClB,CAAC,CAAC,CAAC;oBACH,SAAS,CAAC,IAAI,EAAE,CAAC;gBAClB,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,wBAAwB,EAAE;oBAC9B,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAkE,0CAA0C,EAAE,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC,CAAC;oBACnM,OAAO,wBAAwB,CAAC;iBAChC;gBAED,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,CAAC,CAA0B,UAAU,CAAC,OAAO,CAAC,CAAC;gBAC9E,IAAI,CAAC,WAAW,EAAE;oBACjB,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAkE,0CAA0C,EAAE,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC,CAAC;iBACnM;gBACD,OAAO,WAAW,CAAC;aACnB;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QAED,4DAA4D;QAEpD,EAAE;YACT,2BAA2B,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;gBACnD,MAAM,0BAA0B,GAA8B,EAAE,CAAC;gBACjE,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;oBACnC,IAAI,CAAC,IAAA,gBAAG,EAAkB,SAAS,CAAC,WAAW,EAAE,qBAAqB,CAAC,EAAE;wBACxE,SAAS;qBACT;oBACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;wBACpC,SAAS;qBACT;oBACD,KAAK,MAAM,YAAY,IAAI,SAAS,CAAC,KAAK,EAAE;wBAC3C,MAAM,OAAO,GAAG,aAAG,CAAU,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;wBAC9D,IAAI,CAAC,OAAO,EAAE;4BACb,OAAO;yBACP;wBAED,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;wBAC1B,MAAM,KAAK,GAAG,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;wBACtF,MAAM,IAAI,GAAG,gBAAG,CAAY,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wBAE3D,0BAA0B,CAAC,IAAI,CAAC,IAAI,uBAAuB,CAC1D,qBAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,EAC9D,OAAO,CAAC,EAAE,EACV,OAAO,CAAC,MAAM,EAAE,KAAK,EACrB,IAAI,EACJ,YAAY,CAAC,aAAa,CAC1B,CAAC,CAAC;wBAEH,IAAI,YAAY,CAAC,aAAa,EAAE;4BAC/B,IAAI,CAAC,EAAE,CAA8B,OAAO,CAAC,EAAE,EAAE,YAAY,CAAC,aAAa,EAAE,YAAY,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,YAAY,CAAC,WAAW,CAAC,CAAC;yBACxJ;qBACD;iBACD;gBACD,IAAI,CAAC,CAAC,GAA4B,0BAA0B,CAAC;YAC9D,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,EAAE,CAA8B,SAAiB,EAAE,aAAqB,EAAE,QAA+C,EAAE,IAAsC,EAAE,WAA+B;YACzM,MAAM,OAAO,GAAG;gBACf,EAAE,EAAE,GAAG,wBAAwB,CAAC,EAAE,IAAI,SAAS,EAAE;gBACjD,KAAK,EAAE,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE;gBACxD,QAAQ,EAAE,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ;gBAC3F,YAAY,EAAE,IAAI;gBAClB,EAAE,EAAE,IAAI;aACR,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,CAAC,CAAkB,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBAC7C,IAAI,CAAC,CAAC,CAAkB,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBAExC,IAAA,aAAG,EAAa,MAAM,0BAA2B,SAAQ,aAAG;oBAC3D;wBACC,KAAK,CAAC,OAAO,CAAC,CAAC;oBAChB,CAAC;oBAED,KAAK,CAAC,GAAG,CAAC,QAA0B;wBACnC,OAAO,QAAQ,CAAC,GAAG,CAAC,cAAG,CAAa,CAAC,cAAc,CAAC,wBAAwB,CAAC,EAAE,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;oBACxG,CAAC;iBACD,CAAC,CAAC;gBAEH,IAAI,WAAW,KAAK,SAAS,EAAE;oBAC9B,aAAG,CAAU,cAAc,CAAC,aAAG,CAAI,4BAA4B,EAAE;wBAChE,KAAK,EAAE,WAAW;wBAClB,OAAO,EAAE,OAAO;wBAChB,IAAI,EAAE,OAAO,CAAC,YAAY;qBAC1B,CAAC,CAAC;iBACH;aACD;QACF,CAAC;QAEO,EAAE;YACT,MAAM,IAAI,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,CAAC,CAAS,IAAA,aAAG,EAAa,MAAM,2BAA4B,SAAQ,aAAG;gBAC3E;oBACC,KAAK,CAAC,sBAAsB,CAAC,CAAC;gBAC/B,CAAC;gBAED,KAAK,CAAC,GAAG,CAAC,QAA0B;oBACnC,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,CAAC,CAAiB,cAAc,CAAC;wBAC7D,KAAK,EAAE,IAAA,cAAQ,EAAC,EAA8C,EAAE,IAA8C,CAAC;wBAC/G,gBAAgB,EAAE,IAAI;wBACtB,aAAa,EAAE,KAAK;wBACpB,cAAc,EAAE,KAAK;wBACrB,oBAAoB,EAAE,CAAC,iBAAO,CAAC,IAAI,CAAC;qBACpC,CAAC,CAAC;oBAEH,OAAO,SAAS,EAAE,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAG,CAAC,IAAI,CAAC;wBACrD,MAAM,EAAE,IAAI,CAAC,CAAC,CAAc,WAAW;wBACvC,SAAS,EAAE,iBAAO,CAAC,IAAI;wBACvB,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI;qBACvB,CAAC,CAAC;gBACJ,CAAC;aACD,CAAC,CAAC,CAAC;YAEJ,IAAI,IAAA,sBAAG,EAAyB,IAAI,CAAC,CAAC,CAAc,YAAY,EAAE,CAAC,KAAK,SAAS,IAAI,aAAE,EAAQ;gBAC9F,IAAI,CAAC,EAAE,CAA8B,sBAAsB,CAAC,EAAE,EAAE,IAAA,cAAQ,EAAC,EAAuC,EAAE,IAA2C,CAAC,EAAE,SAAS,EAAE,sBAAsB,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;aAC3N;QACF,CAAC;QAEO,KAAK,CAAC,EAAE;YACf,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAiB,eAAe,EAA2B,CAAC;YAEpF,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAc,iBAAiB,EAAE,kCAA0B;gBACzF,CAAC,CAAC,IAAI,CAAC,CAAC,CAAc,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;gBACpD,CAAC,CAAC,IAAI,CAAC,CAAC,CAAc,YAAY,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtF,SAAS,CAAC,WAAW,GAAG,IAAA,cAAQ,EAAC,EAAkC,EAAE,IAAgE,EAAE,IAAI,gBAAgB,GAAG,CAAC,CAAC;YAChK,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,EAAe,CAAC;YACzC,IAAI,CAAC,CAAC,CAAgB,qBAAqB,CAAC,GAAG,EAAE;gBAChD,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,EAAe,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,MAAM,OAAO,GAAG,MAAM,IAAI,OAAO,CAAqB,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACzE,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;gBAE9C,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE;oBAC3B,MAAM,SAAS,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;oBAEnD,IAAI,SAAS,KAAK,yCAAyC,CAAC,EAAE,EAAE;wBAC/D,KAAK,IAAI,CAAC,CAAC,CAAc,cAAc,CAAC,yCAAyC,CAAC,EAAE,CAAC,CAAC;qBACtF;yBAAM;wBACN,OAAO,CAAC,SAAS,CAAC,CAAC;wBACnB,SAAS,CAAC,IAAI,EAAE,CAAC;qBACjB;gBACF,CAAC,CAAC,CAAC;gBAEH,SAAS,CAAC,IAAI,EAAE,CAAC;gBAEjB,SAAS,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;oBAC5C,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;wBACvC,MAAM,GAAG,GAAG,SAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAc,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;wBAC/I,KAAK,IAAI,CAAC,CAAC,CAAa,IAAI,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC1D;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,SAAS,CAAC,OAAO,EAAE,CAAC;YAEpB,OAAO,OAAO,CAAC;QAChB,CAAC;QAEO,KAAK,CAAC,EAAE,CAAiB,OAAe;YAQ/C,IAAI;gBACH,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,CAAC,CAAc,cAAc,CAAC,OAAO,CAAC,CAAC;gBAE9D,gDAAgD;gBAChD,oDAAoD;gBACpD,mCAAmC;gBACnC,IAAI,GAAG,KAAK,SAAS,EAAE;oBACtB,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAkF,oCAAoC,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC,CAAC;oBAC7M,OAAO,kBAAkB,CAAC;iBAC1B;gBAED,IAAI,SAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;oBACnB,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAkF,oCAAoC,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC;oBACxM,OAAO,GAAG,CAAC;iBACX;gBAED,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAkF,oCAAoC,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC,CAAC;gBAC/M,OAAO,SAAS,CAAC;aACjB;YAAC,OAAO,EAAE,EAAE;gBACZ,IAAI,EAAE,YAAY,WAAE,EAAiB;oBACpC,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAkF,oCAAoC,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC;iBACtM;qBAAM;oBACN,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAkF,oCAAoC,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;iBACzM;gBACD,OAAO,SAAS,CAAC;aACjB;QACF,CAAC;QAEO,EAAE;YACT,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAA0B,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,CAAC,CAAiB,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAE5J,IAAI,IAAA,sBAAG,EAAyB,IAAI,CAAC,CAAC,CAAc,YAAY,EAAE,CAAC,KAAK,SAAS,IAAI,aAAE,EAAQ;gBAC9F,KAAK,CAAC,IAAI,CAAC,IAAI,uBAAuB,CACrC,YAAY,GAAG,IAAA,cAAQ,EAAC,EAA8C,EAAE,IAAsB,CAAC,EAC/F,sBAAsB,CAAC,EAAE,EACzB,IAAA,cAAQ,EAAC,EAAiC,EAAE,IAAU,CAAC,CACvD,CAAC,CAAC;aACH;YAED,MAAM,WAAW,GAAsD,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5I,OAAO,WAAW,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE,IAAI,uBAAuB,CAAC,yCAAyC,CAAC,KAAK,EAAE,yCAAyC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9K,CAAC;;IAr6BW,oBAAI;mBAAJ,IAAI;QAgBd,WAAA,mBAAI,CAAA;QACJ,WAAA,WAAG,CAAA;QACH,WAAA,cAAG,CAAA;QACH,WAAA,YAAG,CAAA;QACH,WAAA,eAAG,CAAA;QACH,WAAA,SAAG,CAAA;QACH,WAAA,kBAAG,CAAA;QACH,WAAA,aAAG,CAAA;QACH,WAAA,mBAAI,CAAA;QACJ,WAAA,iBAAG,CAAA;QACH,YAAA,mBAAG,CAAA;QACH,YAAA,oBAAG,CAAA;QACH,YAAA,mBAAG,CAAA;QACH,YAAA,eAAG,CAAA;QACH,YAAA,kBAAG,CAAA;QACH,YAAA,gBAAG,CAAA;QACH,YAAA,cAAG,CAAA;QACH,YAAA,gBAAG,CAAA;QACH,YAAA,aAAG,CAAA;QACH,YAAA,eAAG,CAAA;QACH,YAAA,aAAG,CAAA;QACH,YAAA,cAAG,CAAA;QACH,YAAA,mBAAG,CAAA;QACH,YAAA,wBAAG,CAAA;QACH,YAAA,gBAAG,CAAA;QACH,YAAA,aAAG,CAAA;QACH,YAAA,qBAAG,CAAA;QACH,YAAA,iBAAG,CAAA;QACH,YAAA,+BAAI,CAAA;OA5CM,IAAI,CAs6BhB;IAED,MAAM,eAAe,GAAG,qBAAS,CAAC,WAAW,CAAC,cAAG,CAAK,IAAI,CAAC,CAAC;IAC5D,MAAM,uBAAuB;QAG5B,YACiB,KAAa,EACb,OAAe,EACf,WAAoB,EACpB,IAA2B,EAC3B,aAAsB;YAJtB,UAAK,GAAL,KAAK,CAAQ;YACb,YAAO,GAAP,OAAO,CAAQ;YACf,gBAAW,GAAX,WAAW,CAAS;YACpB,SAAI,GAAJ,IAAI,CAAuB;YAC3B,kBAAa,GAAb,aAAa,CAAS;YAEtC,IAAI,aAAa,KAAK,SAAS,EAAE;gBAChC,IAAI,CAAC,OAAO,GAAG,CAAC;wBACf,SAAS,EAAE,eAAe;wBAC1B,OAAO,EAAE,IAAA,cAAQ,EAAC,EAAkB,EAAE,IAAY,CAAC;qBACnD,CAAC,CAAC;aACH;QACF,CAAC;KACD;IAYD,MAAM,2BAA2B,GAAG,wBAAG,CAAgB,sBAAsB,CAAa;QACzF,cAAc,EAAE,qBAAqB;QACrC,UAAU,EAAE;YACX,WAAW,EAAE,IAAA,cAAQ,EAAC,EAA6B,EAAE,IAAwF,CAAC;YAC9I,IAAI,EAAE,OAAO;YACb,KAAK,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACX,OAAO,EAAE;wBACR,WAAW,EAAE,IAAA,cAAQ,EAAC,EAAqC,EAAE,IAAuM,CAAC;wBACrQ,IAAI,EAAE,QAAQ;qBACd;oBACD,KAAK,EAAE;wBACN,WAAW,EAAE,IAAA,cAAQ,EAAC,EAAmC,EAAE,IAAqC,CAAC;wBACjG,IAAI,EAAE,QAAQ;qBACd;oBACD,aAAa,EAAE;wBACd,WAAW,EAAE,IAAA,cAAQ,EAAC,EAA2C,EAAE,IAA0E,CAAC;wBAC9I,IAAI,EAAE,QAAQ;qBACd;oBACD,WAAW,EAAE;wBACZ,WAAW,EAAE,IAAA,cAAQ,EAAC,EAAyC,EAAE,IAAiF,CAAC;wBACnJ,IAAI,EAAE,QAAQ;qBACd;oBACD,WAAW,EAAE;wBACZ,WAAW,EAAE,IAAA,cAAQ,EAAC,EAAyC,EAAE,IAA6D,CAAC;wBAC/H,IAAI,EAAE,QAAQ;qBACd;oBACD,IAAI,EAAE;wBACL,WAAW,EAAE,IAAA,cAAQ,EAAC,EAAkC,EAAE,IAAiD,CAAC;wBAC5G,IAAI,EAAE,QAAQ;qBACd;iBACD;gBACD,QAAQ,EAAE,CAAC,SAAS,CAAC;aACrB;SACD;KACD,CAAC,CAAC;IAEH,YAAY;IAEZ,MAAM,iBAAiB,GAAG,cAAG,CAAM,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC;IACtG,iBAAiB,CAAC,6BAA6B,CAAC,IAAI,kCAA8C,CAAC;IAEnG,cAAG,CAAM,EAAE,CAAyB,2BAAuB,CAAC,aAAa,CAAC,CAAC,qBAAqB,CAAC;QAChG,GAAG,mBAAG;QACN,YAAY,EAAE;YACb,+CAA+C,EAAE;gBAChD,IAAI,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC;gBAC3B,gBAAgB,EAAE;oBACjB,IAAA,cAAQ,EAAC,EAAoC,EAAE,IAA2E,CAAC;oBAC3H,IAAA,cAAQ,EAAC,EAA6B,EAAE,IAAoE,CAAC;iBAC7G;gBACD,MAAM,EAAE,QAAQ;gBAChB,MAAM,EAAE,CAAC,cAAc,EAAE,oBAAoB,CAAC;gBAC9C,SAAS,EAAE,KAAK;gBAChB,qBAAqB,EAAE,IAAA,cAAQ,EAAC,EAAoC,EAAE,IAAkJ,CAAC;aACzN;YACD,mCAAmC,EAAE;gBACpC,IAAI,EAAE,CAAC,UAAU,EAAE,KAAK,CAAC;gBACzB,gBAAgB,EAAE;oBACjB,IAAA,cAAQ,EAAC,EAAmC,EAAE,IAAiF,CAAC;oBAChI,IAAA,cAAQ,EAAC,EAA8B,EAAE,IAAyD,CAAC;iBACnG;gBACD,MAAM,EAAE,QAAQ;gBAChB,MAAM,EAAE,CAAC,oBAAoB,CAAC;gBAC9B,SAAS,EAAE,UAAU;gBACrB,qBAAqB,EAAE,IAAA,cAAQ,EAAC,EAA0B,EAAE,IAAmH,CAAC;aAChL;YACD,mCAAmC,EAAE;gBACpC,IAAI,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC;gBACvB,gBAAgB,EAAE;oBACjB,IAAA,cAAQ,EAAC,EAAsC,EAAE,IAA4F,CAAC;oBAC9I,IAAA,cAAQ,EAAC,EAA4B,EAAE,IAAyH,CAAC;iBACjK;gBACD,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,CAAC,oBAAoB,CAAC;gBAC5B,OAAO,EAAE,QAAQ;gBACjB,mBAAmB,EAAE,IAAA,cAAQ,EAAC,EAAwB,EAAE,IAA2G,CAAC;aACpK;YACD,4DAA4D,EAAE;gBAC7D,MAAM,EAAE,SAAS;gBACjB,MAAM,EAAE,CAAC,cAAc,EAAE,oBAAoB,CAAC;gBAC9C,SAAS,EAAE,KAAK;gBAChB,qBAAqB,EAAE,IAAA,cAAQ,EAAC,EAAmC,EAAE,IAAsF,CAAC;aAC5J;SACD;KACD,CAAC,CAAC","file":"editSessions.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ILifecycleService, LifecyclePhase, ShutdownReason } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Action2, IAction2Options, MenuId, MenuRegistry, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { localize } from 'vs/nls';\nimport { IEditSessionsStorageService, Change, ChangeType, Folder, EditSession, FileType, EDIT_SESSION_SYNC_CATEGORY, EDIT_SESSIONS_CONTAINER_ID, EditSessionSchemaVersion, IEditSessionsLogService, EDIT_SESSIONS_VIEW_ICON, EDIT_SESSIONS_TITLE, EDIT_SESSIONS_ORIGINAL_TITLE, EDIT_SESSIONS_SHOW_VIEW, EDIT_SESSIONS_DATA_VIEW_ID, decodeEditSessionFileContent, hashedEditSessionId, editSessionsLogId, EDIT_SESSIONS_PENDING } from 'vs/workbench/contrib/editSessions/common/editSessions';\nimport { ISCMRepository, ISCMService } from 'vs/workbench/contrib/scm/common/scm';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IWorkspaceContextService, IWorkspaceFolder, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { URI } from 'vs/base/common/uri';\nimport { basename, joinPath, relativePath } from 'vs/base/common/resources';\nimport { encodeBase64 } from 'vs/base/common/buffer';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IProgress, IProgressService, IProgressStep, ProgressLocation } from 'vs/platform/progress/common/progress';\nimport { EditSessionsWorkbenchService } from 'vs/workbench/contrib/editSessions/browser/editSessionsStorageService';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { UserDataSyncErrorCode, UserDataSyncStoreError, IUserDataSynchroniser } from 'vs/platform/userDataSync/common/userDataSync';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { getFileNamesMessage, IDialogService, IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { workbenchConfigurationNodeBase } from 'vs/workbench/common/configuration';\nimport { Extensions as ConfigurationExtensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IQuickInputButton, IQuickInputService, IQuickPickItem, IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { ContextKeyExpr, ContextKeyExpression, IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { getVirtualWorkspaceLocation } from 'vs/platform/workspace/common/virtualWorkspace';\nimport { Schemas } from 'vs/base/common/network';\nimport { IsWebContext } from 'vs/platform/contextkey/common/contextkeys';\nimport { IExtensionService, isProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\nimport { EditSessionsLogService } from 'vs/workbench/contrib/editSessions/common/editSessionsLogService';\nimport { IViewContainersRegistry, Extensions as ViewExtensions, ViewContainerLocation, IViewsService } from 'vs/workbench/common/views';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { EditSessionsDataViews } from 'vs/workbench/contrib/editSessions/browser/editSessionsViews';\nimport { EditSessionsFileSystemProvider } from 'vs/workbench/contrib/editSessions/browser/editSessionsFileSystemProvider';\nimport { isNative, isWeb } from 'vs/base/common/platform';\nimport { VirtualWorkspaceContext, WorkspaceFolderCountContext } from 'vs/workbench/common/contextkeys';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { equals } from 'vs/base/common/objects';\nimport { EditSessionIdentityMatch, IEditSessionIdentityService } from 'vs/platform/workspace/common/editSessions';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { IOutputService } from 'vs/workbench/services/output/common/output';\nimport { sha1Hex } from 'vs/base/browser/hash';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IActivityService, NumberBadge } from 'vs/workbench/services/activity/common/activity';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ILocalizedString } from 'vs/platform/action/common/action';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IExtensionsViewPaneContainer, VIEWLET_ID } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { WorkspaceStateSynchroniser } from 'vs/workbench/contrib/editSessions/common/workspaceStateSync';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { EditSessionsStoreClient } from 'vs/workbench/contrib/editSessions/common/editSessionsStorageClient';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IWorkspaceIdentityService } from 'vs/workbench/services/workspaces/common/workspaceIdentityService';\n\nregisterSingleton(IEditSessionsLogService, EditSessionsLogService, InstantiationType.Delayed);\nregisterSingleton(IEditSessionsStorageService, EditSessionsWorkbenchService, InstantiationType.Delayed);\n\n\nconst continueWorkingOnCommand: IAction2Options = {\n\tid: '_workbench.editSessions.actions.continueEditSession',\n\ttitle: { value: localize('continue working on', \"Continue Working On...\"), original: 'Continue Working On...' },\n\tprecondition: WorkspaceFolderCountContext.notEqualsTo('0'),\n\tf1: true\n};\nconst openLocalFolderCommand: IAction2Options = {\n\tid: '_workbench.editSessions.actions.continueEditSession.openLocalFolder',\n\ttitle: { value: localize('continue edit session in local folder', \"Open In Local Folder\"), original: 'Open In Local Folder' },\n\tcategory: EDIT_SESSION_SYNC_CATEGORY,\n\tprecondition: ContextKeyExpr.and(IsWebContext.toNegated(), VirtualWorkspaceContext)\n};\nconst showOutputChannelCommand: IAction2Options = {\n\tid: 'workbench.editSessions.actions.showOutputChannel',\n\ttitle: { value: localize('show log', 'Show Log'), original: 'Show Log' },\n\tcategory: EDIT_SESSION_SYNC_CATEGORY\n};\nconst installAdditionalContinueOnOptionsCommand = {\n\tid: 'workbench.action.continueOn.extensions',\n\ttitle: localize('continueOn.installAdditional', 'Install additional development environment options'),\n};\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({ ...installAdditionalContinueOnOptionsCommand, f1: false });\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst paneCompositePartService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = await paneCompositePartService.openPaneComposite(VIEWLET_ID, ViewContainerLocation.Sidebar, true);\n\t\tconst view = viewlet?.getViewPaneContainer() as IExtensionsViewPaneContainer | undefined;\n\t\tview?.search('@tag:continueOn');\n\t}\n});\n\nconst resumeProgressOptionsTitle = `[${localize('resuming working changes window', 'Resuming working changes...')}](command:${showOutputChannelCommand.id})`;\nconst resumeProgressOptions = {\n\tlocation: ProgressLocation.Window,\n\ttype: 'syncing',\n};\nconst queryParamName = 'editSessionId';\n\nconst useEditSessionsWithContinueOn = 'workbench.editSessions.continueOn';\nexport class EditSessionsContribution extends Disposable implements IWorkbenchContribution {\n\n\tprivate continueEditSessionOptions: ContinueEditSessionItem[] = [];\n\n\tprivate readonly shouldShowViewsContext: IContextKey<boolean>;\n\tprivate readonly pendingEditSessionsContext: IContextKey<boolean>;\n\n\tprivate static APPLICATION_LAUNCHED_VIA_CONTINUE_ON_STORAGE_KEY = 'applicationLaunchedViaContinueOn';\n\tprivate accountsMenuBadgeDisposable = this._register(new MutableDisposable());\n\n\tprivate registeredCommands = new Set<string>();\n\n\tprivate workspaceStateSynchronizer: IUserDataSynchroniser | undefined;\n\tprivate editSessionsStorageClient: EditSessionsStoreClient | undefined;\n\n\tconstructor(\n\t\t@IEditSessionsStorageService private readonly editSessionsStorageService: IEditSessionsStorageService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ISCMService private readonly scmService: ISCMService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IEditSessionsLogService private readonly logService: IEditSessionsLogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService private configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IEditSessionIdentityService private readonly editSessionIdentityService: IEditSessionIdentityService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@ICommandService private commandService: ICommandService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IWorkspaceIdentityService private readonly workspaceIdentityService: IWorkspaceIdentityService,\n\t) {\n\t\tsuper();\n\n\t\tthis.shouldShowViewsContext = EDIT_SESSIONS_SHOW_VIEW.bindTo(this.contextKeyService);\n\t\tthis.pendingEditSessionsContext = EDIT_SESSIONS_PENDING.bindTo(this.contextKeyService);\n\t\tthis.pendingEditSessionsContext.set(false);\n\n\t\tif (!this.productService['editSessions.store']?.url) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editSessionsStorageClient = new EditSessionsStoreClient(URI.parse(this.productService['editSessions.store'].url), this.productService, this.requestService, this.logService, this.environmentService, this.fileService, this.storageService);\n\t\tthis.editSessionsStorageService.storeClient = this.editSessionsStorageClient;\n\t\tthis.workspaceStateSynchronizer = new WorkspaceStateSynchroniser(this.userDataProfilesService.defaultProfile, undefined, this.editSessionsStorageClient, this.logService, this.fileService, this.environmentService, this.telemetryService, this.configurationService, this.storageService, this.uriIdentityService, this.workspaceIdentityService, this.editSessionsStorageService);\n\n\t\tthis.autoResumeEditSession();\n\n\t\tthis.registerActions();\n\t\tthis.registerViews();\n\t\tthis.registerContributedEditSessionOptions();\n\n\t\tthis._register(this.fileService.registerProvider(EditSessionsFileSystemProvider.SCHEMA, new EditSessionsFileSystemProvider(this.editSessionsStorageService)));\n\t\tthis.lifecycleService.onWillShutdown((e) => {\n\t\t\tif (e.reason !== ShutdownReason.RELOAD && this.editSessionsStorageService.isSignedIn && this.configurationService.getValue('workbench.experimental.cloudChanges.autoStore') === 'onShutdown' && !isWeb) {\n\t\t\t\te.join(this.autoStoreEditSession(), { id: 'autoStoreWorkingChanges', label: localize('autoStoreWorkingChanges', 'Storing current working changes...') });\n\t\t\t}\n\t\t});\n\t\tthis._register(this.editSessionsStorageService.onDidSignIn(() => this.updateAccountsMenuBadge()));\n\t\tthis._register(this.editSessionsStorageService.onDidSignOut(() => this.updateAccountsMenuBadge()));\n\t}\n\n\tprivate async autoResumeEditSession() {\n\t\tconst shouldAutoResumeOnReload = this.configurationService.getValue('workbench.cloudChanges.autoResume') === 'onReload';\n\n\t\tif (this.environmentService.editSessionId !== undefined) {\n\t\t\tthis.logService.info(`Resuming cloud changes, reason: found editSessionId ${this.environmentService.editSessionId} in environment service...`);\n\t\t\tawait this.progressService.withProgress(resumeProgressOptions, async (progress) => await this.resumeEditSession(this.environmentService.editSessionId, undefined, undefined, undefined, progress).finally(() => this.environmentService.editSessionId = undefined));\n\t\t} else if (shouldAutoResumeOnReload && this.editSessionsStorageService.isSignedIn) {\n\t\t\tthis.logService.info('Resuming cloud changes, reason: cloud changes enabled...');\n\t\t\t// Attempt to resume edit session based on edit workspace identifier\n\t\t\t// Note: at this point if the user is not signed into edit sessions,\n\t\t\t// we don't want them to be prompted to sign in and should just return early\n\t\t\tawait this.progressService.withProgress(resumeProgressOptions, async (progress) => await this.resumeEditSession(undefined, true, undefined, undefined, progress));\n\t\t} else if (shouldAutoResumeOnReload) {\n\t\t\t// The application has previously launched via a protocol URL Continue On flow\n\t\t\tconst hasApplicationLaunchedFromContinueOnFlow = this.storageService.getBoolean(EditSessionsContribution.APPLICATION_LAUNCHED_VIA_CONTINUE_ON_STORAGE_KEY, StorageScope.APPLICATION, false);\n\t\t\tthis.logService.info(`Prompting to enable cloud changes, has application previously launched from Continue On flow: ${hasApplicationLaunchedFromContinueOnFlow}`);\n\n\t\t\tconst handlePendingEditSessions = () => {\n\t\t\t\t// display a badge in the accounts menu but do not prompt the user to sign in again\n\t\t\t\tthis.logService.info('Showing badge to enable cloud changes in accounts menu...');\n\t\t\t\tthis.updateAccountsMenuBadge();\n\t\t\t\tthis.pendingEditSessionsContext.set(true);\n\t\t\t\t// attempt a resume if we are in a pending state and the user just signed in\n\t\t\t\tconst disposable = this.editSessionsStorageService.onDidSignIn(async () => {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tthis.logService.info('Showing badge to enable cloud changes in accounts menu succeeded, resuming cloud changes...');\n\t\t\t\t\tawait this.progressService.withProgress(resumeProgressOptions, async (progress) => await this.resumeEditSession(undefined, true, undefined, undefined, progress));\n\t\t\t\t\tthis.storageService.remove(EditSessionsContribution.APPLICATION_LAUNCHED_VIA_CONTINUE_ON_STORAGE_KEY, StorageScope.APPLICATION);\n\t\t\t\t\tthis.environmentService.continueOn = undefined;\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif ((this.environmentService.continueOn !== undefined) &&\n\t\t\t\t!this.editSessionsStorageService.isSignedIn &&\n\t\t\t\t// and user has not yet been prompted to sign in on this machine\n\t\t\t\thasApplicationLaunchedFromContinueOnFlow === false\n\t\t\t) {\n\t\t\t\t// store the fact that we prompted the user\n\t\t\t\tthis.storageService.store(EditSessionsContribution.APPLICATION_LAUNCHED_VIA_CONTINUE_ON_STORAGE_KEY, true, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t\t\tthis.logService.info('Prompting to enable cloud changes...');\n\t\t\t\tawait this.editSessionsStorageService.initialize('read');\n\t\t\t\tif (this.editSessionsStorageService.isSignedIn) {\n\t\t\t\t\tthis.logService.info('Prompting to enable cloud changes succeeded, resuming cloud changes...');\n\t\t\t\t\tawait this.progressService.withProgress(resumeProgressOptions, async (progress) => await this.resumeEditSession(undefined, true, undefined, undefined, progress));\n\t\t\t\t} else {\n\t\t\t\t\thandlePendingEditSessions();\n\t\t\t\t}\n\t\t\t} else if (!this.editSessionsStorageService.isSignedIn &&\n\t\t\t\t// and user has been prompted to sign in on this machine\n\t\t\t\thasApplicationLaunchedFromContinueOnFlow === true\n\t\t\t) {\n\t\t\t\thandlePendingEditSessions();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.logService.debug('Auto resuming cloud changes disabled.');\n\t\t}\n\t}\n\n\tprivate updateAccountsMenuBadge() {\n\t\tif (this.editSessionsStorageService.isSignedIn) {\n\t\t\treturn this.accountsMenuBadgeDisposable.clear();\n\t\t}\n\n\t\tconst badge = new NumberBadge(1, () => localize('check for pending cloud changes', 'Check for pending cloud changes'));\n\t\tthis.accountsMenuBadgeDisposable.value = this.activityService.showAccountsActivity({ badge });\n\t}\n\n\tprivate async autoStoreEditSession() {\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tawait this.progressService.withProgress({\n\t\t\tlocation: ProgressLocation.Window,\n\t\t\ttype: 'syncing',\n\t\t\ttitle: localize('store working changes', 'Storing working changes...')\n\t\t}, async () => this.storeEditSession(false, cancellationTokenSource.token), () => {\n\t\t\tcancellationTokenSource.cancel();\n\t\t\tcancellationTokenSource.dispose();\n\t\t});\n\t}\n\n\tprivate registerViews() {\n\t\tconst container = Registry.as<IViewContainersRegistry>(ViewExtensions.ViewContainersRegistry).registerViewContainer(\n\t\t\t{\n\t\t\t\tid: EDIT_SESSIONS_CONTAINER_ID,\n\t\t\t\ttitle: { value: EDIT_SESSIONS_TITLE, original: EDIT_SESSIONS_ORIGINAL_TITLE },\n\t\t\t\tctorDescriptor: new SyncDescriptor(\n\t\t\t\t\tViewPaneContainer,\n\t\t\t\t\t[EDIT_SESSIONS_CONTAINER_ID, { mergeViewWithContainerWhenSingleView: true }]\n\t\t\t\t),\n\t\t\t\ticon: EDIT_SESSIONS_VIEW_ICON,\n\t\t\t\thideIfEmpty: true\n\t\t\t}, ViewContainerLocation.Sidebar, { doNotRegisterOpenCommand: true }\n\t\t);\n\t\tthis._register(this.instantiationService.createInstance(EditSessionsDataViews, container));\n\t}\n\n\tprivate registerActions() {\n\t\tthis.registerContinueEditSessionAction();\n\n\t\tthis.registerResumeLatestEditSessionAction();\n\t\tthis.registerStoreLatestEditSessionAction();\n\n\t\tthis.registerContinueInLocalFolderAction();\n\n\t\tthis.registerShowEditSessionViewAction();\n\t\tthis.registerShowEditSessionOutputChannelAction();\n\t}\n\n\tprivate registerShowEditSessionOutputChannelAction() {\n\t\tthis._register(registerAction2(class ShowEditSessionOutput extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper(showOutputChannelCommand);\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\t\tconst outputChannel = accessor.get(IOutputService);\n\t\t\t\tvoid outputChannel.showChannel(editSessionsLogId);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerShowEditSessionViewAction() {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class ShowEditSessionView extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.editSessions.actions.showEditSessions',\n\t\t\t\t\ttitle: { value: localize('show cloud changes', \"Show Cloud Changes\"), original: 'Show Cloud Changes' },\n\t\t\t\t\tcategory: EDIT_SESSION_SYNC_CATEGORY,\n\t\t\t\t\tf1: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor) {\n\t\t\t\tthat.shouldShowViewsContext.set(true);\n\t\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\t\tawait viewsService.openView(EDIT_SESSIONS_DATA_VIEW_ID);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerContinueEditSessionAction() {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class ContinueEditSessionAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper(continueWorkingOnCommand);\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor, workspaceUri: URI | undefined, destination: string | undefined): Promise<void> {\n\t\t\t\ttype ContinueOnEventOutcome = { outcome: string; hashedId?: string };\n\t\t\t\ttype ContinueOnClassificationOutcome = {\n\t\t\t\t\towner: 'joyceerhl'; comment: 'Reporting the outcome of invoking the Continue On action.';\n\t\t\t\t\toutcome: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The outcome of invoking continue edit session.' };\n\t\t\t\t\thashedId?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The hash of the stored edit session id, for correlating success of stores and resumes.' };\n\t\t\t\t};\n\n\t\t\t\t// First ask the user to pick a destination, if necessary\n\t\t\t\tlet uri: URI | 'noDestinationUri' | undefined = workspaceUri;\n\t\t\t\tif (!destination && !uri) {\n\t\t\t\t\tdestination = await that.pickContinueEditSessionDestination();\n\t\t\t\t\tif (!destination) {\n\t\t\t\t\t\tthat.telemetryService.publicLog2<ContinueOnEventOutcome, ContinueOnClassificationOutcome>('continueOn.editSessions.pick.outcome', { outcome: 'noSelection' });\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Determine if we need to store an edit session, asking for edit session auth if necessary\n\t\t\t\tconst shouldStoreEditSession = await that.shouldContinueOnWithEditSession();\n\n\t\t\t\t// Run the store action to get back a ref\n\t\t\t\tlet ref: string | undefined;\n\t\t\t\tif (shouldStoreEditSession) {\n\t\t\t\t\ttype ContinueWithEditSessionEvent = {};\n\t\t\t\t\ttype ContinueWithEditSessionClassification = {\n\t\t\t\t\t\towner: 'joyceerhl'; comment: 'Reporting when storing an edit session as part of the Continue On flow.';\n\t\t\t\t\t};\n\t\t\t\t\tthat.telemetryService.publicLog2<ContinueWithEditSessionEvent, ContinueWithEditSessionClassification>('continueOn.editSessions.store');\n\n\t\t\t\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tref = await that.progressService.withProgress({\n\t\t\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\t\t\tcancellable: true,\n\t\t\t\t\t\t\ttype: 'syncing',\n\t\t\t\t\t\t\ttitle: localize('store your working changes', 'Storing your working changes...')\n\t\t\t\t\t\t}, async () => {\n\t\t\t\t\t\t\tconst ref = await that.storeEditSession(false, cancellationTokenSource.token);\n\t\t\t\t\t\t\tif (ref !== undefined) {\n\t\t\t\t\t\t\t\tthat.telemetryService.publicLog2<ContinueOnEventOutcome, ContinueOnClassificationOutcome>('continueOn.editSessions.store.outcome', { outcome: 'storeSucceeded', hashedId: hashedEditSessionId(ref) });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthat.telemetryService.publicLog2<ContinueOnEventOutcome, ContinueOnClassificationOutcome>('continueOn.editSessions.store.outcome', { outcome: 'storeSkipped' });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ref;\n\t\t\t\t\t\t}, () => {\n\t\t\t\t\t\t\tcancellationTokenSource.cancel();\n\t\t\t\t\t\t\tcancellationTokenSource.dispose();\n\t\t\t\t\t\t\tthat.telemetryService.publicLog2<ContinueOnEventOutcome, ContinueOnClassificationOutcome>('continueOn.editSessions.store.outcome', { outcome: 'storeCancelledByUser' });\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthat.telemetryService.publicLog2<ContinueOnEventOutcome, ContinueOnClassificationOutcome>('continueOn.editSessions.store.outcome', { outcome: 'storeFailed' });\n\t\t\t\t\t\tthrow ex;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Append the ref to the URI\n\t\t\t\turi = destination ? await that.resolveDestination(destination) : uri;\n\t\t\t\tif (uri === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (ref !== undefined && uri !== 'noDestinationUri') {\n\t\t\t\t\tconst encodedRef = encodeURIComponent(ref);\n\t\t\t\t\turi = uri.with({\n\t\t\t\t\t\tquery: uri.query.length > 0 ? (uri.query + `&${queryParamName}=${encodedRef}&continueOn=1`) : `${queryParamName}=${encodedRef}&continueOn=1`\n\t\t\t\t\t});\n\n\t\t\t\t\t// Open the URI\n\t\t\t\t\tthat.logService.info(`Opening ${uri.toString()}`);\n\t\t\t\t\tawait that.openerService.open(uri, { openExternal: true });\n\t\t\t\t} else if (!shouldStoreEditSession && uri !== 'noDestinationUri') {\n\t\t\t\t\t// Open the URI without an edit session ref\n\t\t\t\t\tthat.logService.info(`Opening ${uri.toString()}`);\n\t\t\t\t\tawait that.openerService.open(uri, { openExternal: true });\n\t\t\t\t} else if (ref === undefined && shouldStoreEditSession) {\n\t\t\t\t\tthat.logService.warn(`Failed to store working changes when invoking ${continueWorkingOnCommand.id}.`);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerResumeLatestEditSessionAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class ResumeLatestEditSessionAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.editSessions.actions.resumeLatest',\n\t\t\t\t\ttitle: { value: localize('resume latest cloud changes', \"Resume Latest Changes from Cloud\"), original: 'Resume Latest Changes from Cloud' },\n\t\t\t\t\tcategory: EDIT_SESSION_SYNC_CATEGORY,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor, editSessionId?: string, forceApplyUnrelatedChange?: boolean): Promise<void> {\n\t\t\t\tawait that.progressService.withProgress({ ...resumeProgressOptions, title: resumeProgressOptionsTitle }, async () => await that.resumeEditSession(editSessionId, undefined, forceApplyUnrelatedChange));\n\t\t\t}\n\t\t}));\n\t\tthis._register(registerAction2(class ResumeLatestEditSessionAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.editSessions.actions.resumeFromSerializedPayload',\n\t\t\t\t\ttitle: { value: localize('resume cloud changes', \"Resume Changes from Serialized Data\"), original: 'Resume Changes from Serialized Data' },\n\t\t\t\t\tcategory: 'Developer',\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor, editSessionId?: string): Promise<void> {\n\t\t\t\tconst data = await that.quickInputService.input({ prompt: 'Enter serialized data' });\n\t\t\t\tif (data) {\n\t\t\t\t\tthat.editSessionsStorageService.lastReadResources.set('editSessions', { content: data, ref: '' });\n\t\t\t\t}\n\t\t\t\tawait that.progressService.withProgress({ ...resumeProgressOptions, title: resumeProgressOptionsTitle }, async () => await that.resumeEditSession(editSessionId, undefined, undefined, undefined, undefined, data));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerStoreLatestEditSessionAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class StoreLatestEditSessionAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.editSessions.actions.storeCurrent',\n\t\t\t\t\ttitle: { value: localize('store working changes in cloud', \"Store Working Changes in Cloud\"), original: 'Store Working Changes in Cloud' },\n\t\t\t\t\tcategory: EDIT_SESSION_SYNC_CATEGORY,\n\t\t\t\t\tf1: true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\t\t\tawait that.progressService.withProgress({\n\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\ttitle: localize('storing working changes', 'Storing working changes...')\n\t\t\t\t}, async () => {\n\t\t\t\t\ttype StoreEvent = {};\n\t\t\t\t\ttype StoreClassification = {\n\t\t\t\t\t\towner: 'joyceerhl'; comment: 'Reporting when the store edit session action is invoked.';\n\t\t\t\t\t};\n\t\t\t\t\tthat.telemetryService.publicLog2<StoreEvent, StoreClassification>('editSessions.store');\n\n\t\t\t\t\tawait that.storeEditSession(true, cancellationTokenSource.token);\n\t\t\t\t}, () => {\n\t\t\t\t\tcancellationTokenSource.cancel();\n\t\t\t\t\tcancellationTokenSource.dispose();\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync resumeEditSession(ref?: string, silent?: boolean, forceApplyUnrelatedChange?: boolean, applyPartialMatch?: boolean, progress?: IProgress<IProgressStep>, serializedData?: string): Promise<void> {\n\t\t// Wait for the remote environment to become available, if any\n\t\tawait this.remoteAgentService.getEnvironment();\n\n\t\t// Edit sessions are not currently supported in empty workspaces\n\t\t// https://github.com/microsoft/vscode/issues/159220\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.EMPTY) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logService.info(ref !== undefined ? `Resuming changes from cloud with ref ${ref}...` : 'Checking for pending cloud changes...');\n\n\t\tif (silent && !(await this.editSessionsStorageService.initialize('read', true))) {\n\t\t\treturn;\n\t\t}\n\n\t\ttype ResumeEvent = { outcome: string; hashedId?: string };\n\t\ttype ResumeClassification = {\n\t\t\towner: 'joyceerhl'; comment: 'Reporting when an edit session is resumed from an edit session identifier.';\n\t\t\toutcome: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The outcome of resuming the edit session.' };\n\t\t\thashedId?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The hash of the stored edit session id, for correlating success of stores and resumes.' };\n\t\t};\n\t\tthis.telemetryService.publicLog2<ResumeEvent, ResumeClassification>('editSessions.resume');\n\n\t\tperformance.mark('code/willResumeEditSessionFromIdentifier');\n\n\t\tprogress?.report({ message: localize('checkingForWorkingChanges', 'Checking for pending cloud changes...') });\n\t\tconst data = serializedData ? { content: serializedData, ref: '' } : await this.editSessionsStorageService.read('editSessions', ref);\n\t\tif (!data) {\n\t\t\tif (ref === undefined && !silent) {\n\t\t\t\tthis.notificationService.info(localize('no cloud changes', 'There are no changes to resume from the cloud.'));\n\t\t\t} else if (ref !== undefined) {\n\t\t\t\tthis.notificationService.warn(localize('no cloud changes for ref', 'Could not resume changes from the cloud for ID {0}.', ref));\n\t\t\t}\n\t\t\tthis.logService.info(ref !== undefined ? `Aborting resuming changes from cloud as no edit session content is available to be applied from ref ${ref}.` : `Aborting resuming edit session as no edit session content is available to be applied`);\n\t\t\treturn;\n\t\t}\n\n\t\tprogress?.report({ message: resumeProgressOptionsTitle });\n\t\tconst editSession = JSON.parse(data.content);\n\t\tref = data.ref;\n\n\t\tif (editSession.version > EditSessionSchemaVersion) {\n\t\t\tthis.notificationService.error(localize('client too old', \"Please upgrade to a newer version of {0} to resume your working changes from the cloud.\", this.productService.nameLong));\n\t\t\tthis.telemetryService.publicLog2<ResumeEvent, ResumeClassification>('editSessions.resume.outcome', { hashedId: hashedEditSessionId(ref), outcome: 'clientUpdateNeeded' });\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst { changes, conflictingChanges } = await this.generateChanges(editSession, ref, forceApplyUnrelatedChange, applyPartialMatch);\n\t\t\tif (changes.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// TODO@joyceerhl Provide the option to diff files which would be overwritten by edit session contents\n\t\t\tif (conflictingChanges.length > 0) {\n\t\t\t\t// Allow to show edit sessions\n\n\t\t\t\tconst { confirmed } = await this.dialogService.confirm({\n\t\t\t\t\ttype: Severity.Warning,\n\t\t\t\t\tmessage: conflictingChanges.length > 1 ?\n\t\t\t\t\t\tlocalize('resume edit session warning many', 'Resuming your working changes from the cloud will overwrite the following {0} files. Do you want to proceed?', conflictingChanges.length) :\n\t\t\t\t\t\tlocalize('resume edit session warning 1', 'Resuming your working changes from the cloud will overwrite {0}. Do you want to proceed?', basename(conflictingChanges[0].uri)),\n\t\t\t\t\tdetail: conflictingChanges.length > 1 ? getFileNamesMessage(conflictingChanges.map((c) => c.uri)) : undefined\n\t\t\t\t});\n\n\t\t\t\tif (!confirmed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const { uri, type, contents } of changes) {\n\t\t\t\tif (type === ChangeType.Addition) {\n\t\t\t\t\tawait this.fileService.writeFile(uri, decodeEditSessionFileContent(editSession.version, contents!));\n\t\t\t\t} else if (type === ChangeType.Deletion && await this.fileService.exists(uri)) {\n\t\t\t\t\tawait this.fileService.del(uri);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.workspaceStateSynchronizer?.apply(false, {});\n\n\t\t\tthis.logService.info(`Deleting edit session with ref ${ref} after successfully applying it to current workspace...`);\n\t\t\tawait this.editSessionsStorageService.delete('editSessions', ref);\n\t\t\tthis.logService.info(`Deleted edit session with ref ${ref}.`);\n\n\t\t\tthis.telemetryService.publicLog2<ResumeEvent, ResumeClassification>('editSessions.resume.outcome', { hashedId: hashedEditSessionId(ref), outcome: 'resumeSucceeded' });\n\t\t} catch (ex) {\n\t\t\tthis.logService.error('Failed to resume edit session, reason: ', (ex as Error).toString());\n\t\t\tthis.notificationService.error(localize('resume failed', \"Failed to resume your working changes from the cloud.\"));\n\t\t}\n\n\t\tperformance.mark('code/didResumeEditSessionFromIdentifier');\n\t}\n\n\tprivate async generateChanges(editSession: EditSession, ref: string, forceApplyUnrelatedChange = false, applyPartialMatch = false) {\n\t\tconst changes: ({ uri: URI; type: ChangeType; contents: string | undefined })[] = [];\n\t\tconst conflictingChanges = [];\n\t\tconst workspaceFolders = this.contextService.getWorkspace().folders;\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\n\t\tfor (const folder of editSession.folders) {\n\t\t\tlet folderRoot: IWorkspaceFolder | undefined;\n\n\t\t\tif (folder.canonicalIdentity) {\n\t\t\t\t// Look for an edit session identifier that we can use\n\t\t\t\tfor (const f of workspaceFolders) {\n\t\t\t\t\tconst identity = await this.editSessionIdentityService.getEditSessionIdentifier(f, cancellationTokenSource.token);\n\t\t\t\t\tthis.logService.info(`Matching identity ${identity} against edit session folder identity ${folder.canonicalIdentity}...`);\n\n\t\t\t\t\tif (equals(identity, folder.canonicalIdentity) || forceApplyUnrelatedChange) {\n\t\t\t\t\t\tfolderRoot = f;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (identity !== undefined) {\n\t\t\t\t\t\tconst match = await this.editSessionIdentityService.provideEditSessionIdentityMatch(f, identity, folder.canonicalIdentity, cancellationTokenSource.token);\n\t\t\t\t\t\tif (match === EditSessionIdentityMatch.Complete) {\n\t\t\t\t\t\t\tfolderRoot = f;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (match === EditSessionIdentityMatch.Partial &&\n\t\t\t\t\t\t\tthis.configurationService.getValue('workbench.experimental.cloudChanges.partialMatches.enabled') === true\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (!applyPartialMatch) {\n\t\t\t\t\t\t\t\t// Surface partially matching edit session\n\t\t\t\t\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\t\t\t\tlocalize('editSessionPartialMatch', 'You have pending working changes in the cloud for this workspace. Would you like to resume them?'),\n\t\t\t\t\t\t\t\t\t[{ label: localize('resume', 'Resume'), run: () => this.resumeEditSession(ref, false, undefined, true) }]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfolderRoot = f;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfolderRoot = workspaceFolders.find((f) => f.name === folder.name);\n\t\t\t}\n\n\t\t\tif (!folderRoot) {\n\t\t\t\tthis.logService.info(`Skipping applying ${folder.workingChanges.length} changes from edit session with ref ${ref} as no matching workspace folder was found.`);\n\t\t\t\treturn { changes: [], conflictingChanges: [], contributedStateHandlers: [] };\n\t\t\t}\n\n\t\t\tconst localChanges = new Set<string>();\n\t\t\tfor (const repository of this.scmService.repositories) {\n\t\t\t\tif (repository.provider.rootUri !== undefined &&\n\t\t\t\t\tthis.contextService.getWorkspaceFolder(repository.provider.rootUri)?.name === folder.name\n\t\t\t\t) {\n\t\t\t\t\tconst repositoryChanges = this.getChangedResources(repository);\n\t\t\t\t\trepositoryChanges.forEach((change) => localChanges.add(change.toString()));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const change of folder.workingChanges) {\n\t\t\t\tconst uri = joinPath(folderRoot.uri, change.relativeFilePath);\n\n\t\t\t\tchanges.push({ uri, type: change.type, contents: change.contents });\n\t\t\t\tif (await this.willChangeLocalContents(localChanges, uri, change)) {\n\t\t\t\t\tconflictingChanges.push({ uri, type: change.type, contents: change.contents });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { changes, conflictingChanges };\n\t}\n\n\tprivate async willChangeLocalContents(localChanges: Set<string>, uriWithIncomingChanges: URI, incomingChange: Change) {\n\t\tif (!localChanges.has(uriWithIncomingChanges.toString())) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { contents, type } = incomingChange;\n\n\t\tswitch (type) {\n\t\t\tcase (ChangeType.Addition): {\n\t\t\t\tconst [originalContents, incomingContents] = await Promise.all([sha1Hex(contents), sha1Hex(encodeBase64((await this.fileService.readFile(uriWithIncomingChanges)).value))]);\n\t\t\t\treturn originalContents !== incomingContents;\n\t\t\t}\n\t\t\tcase (ChangeType.Deletion): {\n\t\t\t\treturn await this.fileService.exists(uriWithIncomingChanges);\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unhandled change type.');\n\t\t}\n\t}\n\n\tasync storeEditSession(fromStoreCommand: boolean, cancellationToken: CancellationToken): Promise<string | undefined> {\n\t\tconst folders: Folder[] = [];\n\t\tlet editSessionSize = 0;\n\t\tlet hasEdits = false;\n\n\t\t// Save all saveable editors before building edit session contents\n\t\tawait this.editorService.saveAll();\n\n\t\tfor (const repository of this.scmService.repositories) {\n\t\t\t// Look through all resource groups and compute which files were added/modified/deleted\n\t\t\tconst trackedUris = this.getChangedResources(repository); // A URI might appear in more than one resource group\n\n\t\t\tconst workingChanges: Change[] = [];\n\n\t\t\tconst { rootUri } = repository.provider;\n\t\t\tconst workspaceFolder = rootUri ? this.contextService.getWorkspaceFolder(rootUri) : undefined;\n\t\t\tlet name = workspaceFolder?.name;\n\n\t\t\tfor (const uri of trackedUris) {\n\t\t\t\tconst workspaceFolder = this.contextService.getWorkspaceFolder(uri);\n\t\t\t\tif (!workspaceFolder) {\n\t\t\t\t\tthis.logService.info(`Skipping working change ${uri.toString()} as no associated workspace folder was found.`);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tawait this.editSessionIdentityService.onWillCreateEditSessionIdentity(workspaceFolder, cancellationToken);\n\n\t\t\t\tname = name ?? workspaceFolder.name;\n\t\t\t\tconst relativeFilePath = relativePath(workspaceFolder.uri, uri) ?? uri.path;\n\n\t\t\t\t// Only deal with file contents for now\n\t\t\t\ttry {\n\t\t\t\t\tif (!(await this.fileService.stat(uri)).isFile) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} catch { }\n\n\t\t\t\thasEdits = true;\n\n\n\t\t\t\tif (await this.fileService.exists(uri)) {\n\t\t\t\t\tconst contents = encodeBase64((await this.fileService.readFile(uri)).value);\n\t\t\t\t\teditSessionSize += contents.length;\n\t\t\t\t\tif (editSessionSize > this.editSessionsStorageService.SIZE_LIMIT) {\n\t\t\t\t\t\tthis.notificationService.error(localize('payload too large', 'Your working changes exceed the size limit and cannot be stored.'));\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tworkingChanges.push({ type: ChangeType.Addition, fileType: FileType.File, contents: contents, relativeFilePath: relativeFilePath });\n\t\t\t\t} else {\n\t\t\t\t\t// Assume it's a deletion\n\t\t\t\t\tworkingChanges.push({ type: ChangeType.Deletion, fileType: FileType.File, contents: undefined, relativeFilePath: relativeFilePath });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet canonicalIdentity = undefined;\n\t\t\tif (workspaceFolder !== null && workspaceFolder !== undefined) {\n\t\t\t\tcanonicalIdentity = await this.editSessionIdentityService.getEditSessionIdentifier(workspaceFolder, cancellationToken);\n\t\t\t}\n\n\t\t\t// TODO@joyceerhl debt: don't store working changes as a child of the folder\n\t\t\tfolders.push({ workingChanges, name: name ?? '', canonicalIdentity: canonicalIdentity ?? undefined, absoluteUri: workspaceFolder?.uri.toString() });\n\t\t}\n\n\t\t// Store contributed workspace state\n\t\tawait this.workspaceStateSynchronizer?.sync(null, {});\n\n\t\tif (!hasEdits) {\n\t\t\tthis.logService.info('Skipped storing working changes in the cloud as there are no edits to store.');\n\t\t\tif (fromStoreCommand) {\n\t\t\t\tthis.notificationService.info(localize('no working changes to store', 'Skipped storing working changes in the cloud as there are no edits to store.'));\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst data: EditSession = { folders, version: 2, workspaceStateId: this.editSessionsStorageService.lastWrittenResources.get('workspaceState')?.ref };\n\n\t\ttry {\n\t\t\tthis.logService.info(`Storing edit session...`);\n\t\t\tconst ref = await this.editSessionsStorageService.write('editSessions', data);\n\t\t\tthis.logService.info(`Stored edit session with ref ${ref}.`);\n\t\t\treturn ref;\n\t\t} catch (ex) {\n\t\t\tthis.logService.error(`Failed to store edit session, reason: `, (ex as Error).toString());\n\n\t\t\ttype UploadFailedEvent = { reason: string };\n\t\t\ttype UploadFailedClassification = {\n\t\t\t\towner: 'joyceerhl'; comment: 'Reporting when Continue On server request fails.';\n\t\t\t\treason?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The reason that the server request failed.' };\n\t\t\t};\n\n\t\t\tif (ex instanceof UserDataSyncStoreError) {\n\t\t\t\tswitch (ex.code) {\n\t\t\t\t\tcase UserDataSyncErrorCode.TooLarge:\n\t\t\t\t\t\t// Uploading a payload can fail due to server size limits\n\t\t\t\t\t\tthis.telemetryService.publicLog2<UploadFailedEvent, UploadFailedClassification>('editSessions.upload.failed', { reason: 'TooLarge' });\n\t\t\t\t\t\tthis.notificationService.error(localize('payload too large', 'Your working changes exceed the size limit and cannot be stored.'));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.telemetryService.publicLog2<UploadFailedEvent, UploadFailedClassification>('editSessions.upload.failed', { reason: 'unknown' });\n\t\t\t\t\t\tthis.notificationService.error(localize('payload failed', 'Your working changes cannot be stored.'));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getChangedResources(repository: ISCMRepository) {\n\t\treturn repository.provider.groups.elements.reduce((resources, resourceGroups) => {\n\t\t\tresourceGroups.elements.forEach((resource) => resources.add(resource.sourceUri));\n\t\t\treturn resources;\n\t\t}, new Set<URI>()); // A URI might appear in more than one resource group\n\t}\n\n\tprivate hasEditSession() {\n\t\tfor (const repository of this.scmService.repositories) {\n\t\t\tif (this.getChangedResources(repository).size > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async shouldContinueOnWithEditSession(): Promise<boolean> {\n\t\ttype EditSessionsAuthCheckEvent = { outcome: string };\n\t\ttype EditSessionsAuthCheckClassification = {\n\t\t\towner: 'joyceerhl'; comment: 'Reporting whether we can and should store edit session as part of Continue On.';\n\t\t\toutcome: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The outcome of checking whether we can store an edit session as part of the Continue On flow.' };\n\t\t};\n\n\t\t// If the user is already signed in, we should store edit session\n\t\tif (this.editSessionsStorageService.isSignedIn) {\n\t\t\treturn this.hasEditSession();\n\t\t}\n\n\t\t// If the user has been asked before and said no, don't use edit sessions\n\t\tif (this.configurationService.getValue(useEditSessionsWithContinueOn) === 'off') {\n\t\t\tthis.telemetryService.publicLog2<EditSessionsAuthCheckEvent, EditSessionsAuthCheckClassification>('continueOn.editSessions.canStore.outcome', { outcome: 'disabledEditSessionsViaSetting' });\n\t\t\treturn false;\n\t\t}\n\n\t\t// Prompt the user to use edit sessions if they currently could benefit from using it\n\t\tif (this.hasEditSession()) {\n\t\t\tconst quickpick = this.quickInputService.createQuickPick<IQuickPickItem>();\n\t\t\tquickpick.placeholder = localize('continue with cloud changes', \"Select whether to bring your working changes with you\");\n\t\t\tquickpick.ok = false;\n\t\t\tquickpick.ignoreFocusOut = true;\n\t\t\tconst withCloudChanges = { label: localize('with cloud changes', \"Yes, continue with my working changes\") };\n\t\t\tconst withoutCloudChanges = { label: localize('without cloud changes', \"No, continue without my working changes\") };\n\t\t\tquickpick.items = [withCloudChanges, withoutCloudChanges];\n\n\t\t\tconst continueWithCloudChanges = await new Promise<boolean>((resolve, reject) => {\n\t\t\t\tquickpick.onDidAccept(() => {\n\t\t\t\t\tresolve(quickpick.selectedItems[0] === withCloudChanges);\n\t\t\t\t\tquickpick.hide();\n\t\t\t\t});\n\t\t\t\tquickpick.onDidHide(() => {\n\t\t\t\t\treject(new CancellationError());\n\t\t\t\t\tquickpick.hide();\n\t\t\t\t});\n\t\t\t\tquickpick.show();\n\t\t\t});\n\n\t\t\tif (!continueWithCloudChanges) {\n\t\t\t\tthis.telemetryService.publicLog2<EditSessionsAuthCheckEvent, EditSessionsAuthCheckClassification>('continueOn.editSessions.canStore.outcome', { outcome: 'didNotEnableEditSessionsWhenPrompted' });\n\t\t\t\treturn continueWithCloudChanges;\n\t\t\t}\n\n\t\t\tconst initialized = await this.editSessionsStorageService.initialize('write');\n\t\t\tif (!initialized) {\n\t\t\t\tthis.telemetryService.publicLog2<EditSessionsAuthCheckEvent, EditSessionsAuthCheckClassification>('continueOn.editSessions.canStore.outcome', { outcome: 'didNotEnableEditSessionsWhenPrompted' });\n\t\t\t}\n\t\t\treturn initialized;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t//#region Continue Edit Session extension contribution point\n\n\tprivate registerContributedEditSessionOptions() {\n\t\tcontinueEditSessionExtPoint.setHandler(extensions => {\n\t\t\tconst continueEditSessionOptions: ContinueEditSessionItem[] = [];\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tif (!isProposedApiEnabled(extension.description, 'contribEditSessions')) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!Array.isArray(extension.value)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor (const contribution of extension.value) {\n\t\t\t\t\tconst command = MenuRegistry.getCommand(contribution.command);\n\t\t\t\t\tif (!command) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst icon = command.icon;\n\t\t\t\t\tconst title = typeof command.title === 'string' ? command.title : command.title.value;\n\t\t\t\t\tconst when = ContextKeyExpr.deserialize(contribution.when);\n\n\t\t\t\t\tcontinueEditSessionOptions.push(new ContinueEditSessionItem(\n\t\t\t\t\t\tThemeIcon.isThemeIcon(icon) ? `$(${icon.id}) ${title}` : title,\n\t\t\t\t\t\tcommand.id,\n\t\t\t\t\t\tcommand.source?.title,\n\t\t\t\t\t\twhen,\n\t\t\t\t\t\tcontribution.documentation\n\t\t\t\t\t));\n\n\t\t\t\t\tif (contribution.qualifiedName) {\n\t\t\t\t\t\tthis.generateStandaloneOptionCommand(command.id, contribution.qualifiedName, contribution.category ?? command.category, when, contribution.remoteGroup);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.continueEditSessionOptions = continueEditSessionOptions;\n\t\t});\n\t}\n\n\tprivate generateStandaloneOptionCommand(commandId: string, qualifiedName: string, category: string | ILocalizedString | undefined, when: ContextKeyExpression | undefined, remoteGroup: string | undefined) {\n\t\tconst command = {\n\t\t\tid: `${continueWorkingOnCommand.id}.${commandId}`,\n\t\t\ttitle: { original: qualifiedName, value: qualifiedName },\n\t\t\tcategory: typeof category === 'string' ? { original: category, value: category } : category,\n\t\t\tprecondition: when,\n\t\t\tf1: true\n\t\t};\n\n\t\tif (!this.registeredCommands.has(command.id)) {\n\t\t\tthis.registeredCommands.add(command.id);\n\n\t\t\tregisterAction2(class StandaloneContinueOnOption extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper(command);\n\t\t\t\t}\n\n\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\treturn accessor.get(ICommandService).executeCommand(continueWorkingOnCommand.id, undefined, commandId);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (remoteGroup !== undefined) {\n\t\t\t\tMenuRegistry.appendMenuItem(MenuId.StatusBarRemoteIndicatorMenu, {\n\t\t\t\t\tgroup: remoteGroup,\n\t\t\t\t\tcommand: command,\n\t\t\t\t\twhen: command.precondition\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate registerContinueInLocalFolderAction(): void {\n\t\tconst that = this;\n\t\tthis._register(registerAction2(class ContinueInLocalFolderAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper(openLocalFolderCommand);\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor): Promise<URI | undefined> {\n\t\t\t\tconst selection = await that.fileDialogService.showOpenDialog({\n\t\t\t\t\ttitle: localize('continueEditSession.openLocalFolder.title.v2', 'Select a local folder to continue working in'),\n\t\t\t\t\tcanSelectFolders: true,\n\t\t\t\t\tcanSelectMany: false,\n\t\t\t\t\tcanSelectFiles: false,\n\t\t\t\t\tavailableFileSystems: [Schemas.file]\n\t\t\t\t});\n\n\t\t\t\treturn selection?.length !== 1 ? undefined : URI.from({\n\t\t\t\t\tscheme: that.productService.urlProtocol,\n\t\t\t\t\tauthority: Schemas.file,\n\t\t\t\t\tpath: selection[0].path\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tif (getVirtualWorkspaceLocation(this.contextService.getWorkspace()) !== undefined && isNative) {\n\t\t\tthis.generateStandaloneOptionCommand(openLocalFolderCommand.id, localize('continueWorkingOn.existingLocalFolder', 'Continue Working in Existing Local Folder'), undefined, openLocalFolderCommand.precondition, undefined);\n\t\t}\n\t}\n\n\tprivate async pickContinueEditSessionDestination(): Promise<string | undefined> {\n\t\tconst quickPick = this.quickInputService.createQuickPick<ContinueEditSessionItem>();\n\n\t\tconst workspaceContext = this.contextService.getWorkbenchState() === WorkbenchState.FOLDER\n\t\t\t? this.contextService.getWorkspace().folders[0].name\n\t\t\t: this.contextService.getWorkspace().folders.map((folder) => folder.name).join(', ');\n\t\tquickPick.placeholder = localize('continueEditSessionPick.title.v2', \"Select a development environment to continue working on {0} in\", `'${workspaceContext}'`);\n\t\tquickPick.items = this.createPickItems();\n\t\tthis.extensionService.onDidChangeExtensions(() => {\n\t\t\tquickPick.items = this.createPickItems();\n\t\t});\n\n\t\tconst command = await new Promise<string | undefined>((resolve, reject) => {\n\t\t\tquickPick.onDidHide(() => resolve(undefined));\n\n\t\t\tquickPick.onDidAccept((e) => {\n\t\t\t\tconst selection = quickPick.activeItems[0].command;\n\n\t\t\t\tif (selection === installAdditionalContinueOnOptionsCommand.id) {\n\t\t\t\t\tvoid this.commandService.executeCommand(installAdditionalContinueOnOptionsCommand.id);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(selection);\n\t\t\t\t\tquickPick.hide();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tquickPick.show();\n\n\t\t\tquickPick.onDidTriggerItemButton(async (e) => {\n\t\t\t\tif (e.item.documentation !== undefined) {\n\t\t\t\t\tconst uri = URI.isUri(e.item.documentation) ? URI.parse(e.item.documentation) : await this.commandService.executeCommand(e.item.documentation);\n\t\t\t\t\tvoid this.openerService.open(uri, { openExternal: true });\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tquickPick.dispose();\n\n\t\treturn command;\n\t}\n\n\tprivate async resolveDestination(command: string): Promise<URI | 'noDestinationUri' | undefined> {\n\t\ttype EvaluateContinueOnDestinationEvent = { outcome: string; selection: string };\n\t\ttype EvaluateContinueOnDestinationClassification = {\n\t\t\towner: 'joyceerhl'; comment: 'Reporting the outcome of evaluating a selected Continue On destination option.';\n\t\t\tselection: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The selected Continue On destination option.' };\n\t\t\toutcome: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The outcome of evaluating the selected Continue On destination option.' };\n\t\t};\n\n\t\ttry {\n\t\t\tconst uri = await this.commandService.executeCommand(command);\n\n\t\t\t// Some continue on commands do not return a URI\n\t\t\t// to support extensions which want to be in control\n\t\t\t// of how the destination is opened\n\t\t\tif (uri === undefined) {\n\t\t\t\tthis.telemetryService.publicLog2<EvaluateContinueOnDestinationEvent, EvaluateContinueOnDestinationClassification>('continueOn.openDestination.outcome', { selection: command, outcome: 'noDestinationUri' });\n\t\t\t\treturn 'noDestinationUri';\n\t\t\t}\n\n\t\t\tif (URI.isUri(uri)) {\n\t\t\t\tthis.telemetryService.publicLog2<EvaluateContinueOnDestinationEvent, EvaluateContinueOnDestinationClassification>('continueOn.openDestination.outcome', { selection: command, outcome: 'resolvedUri' });\n\t\t\t\treturn uri;\n\t\t\t}\n\n\t\t\tthis.telemetryService.publicLog2<EvaluateContinueOnDestinationEvent, EvaluateContinueOnDestinationClassification>('continueOn.openDestination.outcome', { selection: command, outcome: 'invalidDestination' });\n\t\t\treturn undefined;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof CancellationError) {\n\t\t\t\tthis.telemetryService.publicLog2<EvaluateContinueOnDestinationEvent, EvaluateContinueOnDestinationClassification>('continueOn.openDestination.outcome', { selection: command, outcome: 'cancelled' });\n\t\t\t} else {\n\t\t\t\tthis.telemetryService.publicLog2<EvaluateContinueOnDestinationEvent, EvaluateContinueOnDestinationClassification>('continueOn.openDestination.outcome', { selection: command, outcome: 'unknownError' });\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate createPickItems(): (ContinueEditSessionItem | IQuickPickSeparator)[] {\n\t\tconst items = [...this.continueEditSessionOptions].filter((option) => option.when === undefined || this.contextKeyService.contextMatchesRules(option.when));\n\n\t\tif (getVirtualWorkspaceLocation(this.contextService.getWorkspace()) !== undefined && isNative) {\n\t\t\titems.push(new ContinueEditSessionItem(\n\t\t\t\t'$(folder) ' + localize('continueEditSessionItem.openInLocalFolder.v2', 'Open in Local Folder'),\n\t\t\t\topenLocalFolderCommand.id,\n\t\t\t\tlocalize('continueEditSessionItem.builtin', 'Built-in')\n\t\t\t));\n\t\t}\n\n\t\tconst sortedItems: (ContinueEditSessionItem | IQuickPickSeparator)[] = items.sort((item1, item2) => item1.label.localeCompare(item2.label));\n\t\treturn sortedItems.concat({ type: 'separator' }, new ContinueEditSessionItem(installAdditionalContinueOnOptionsCommand.title, installAdditionalContinueOnOptionsCommand.id));\n\t}\n}\n\nconst infoButtonClass = ThemeIcon.asClassName(Codicon.info);\nclass ContinueEditSessionItem implements IQuickPickItem {\n\tpublic readonly buttons: IQuickInputButton[] | undefined;\n\n\tconstructor(\n\t\tpublic readonly label: string,\n\t\tpublic readonly command: string,\n\t\tpublic readonly description?: string,\n\t\tpublic readonly when?: ContextKeyExpression,\n\t\tpublic readonly documentation?: string,\n\t) {\n\t\tif (documentation !== undefined) {\n\t\t\tthis.buttons = [{\n\t\t\t\ticonClass: infoButtonClass,\n\t\t\t\ttooltip: localize('learnMoreTooltip', 'Learn More'),\n\t\t\t}];\n\t\t}\n\t}\n}\n\ninterface ICommand {\n\tcommand: string;\n\tgroup: string;\n\twhen: string;\n\tdocumentation?: string;\n\tqualifiedName?: string;\n\tcategory?: string;\n\tremoteGroup?: string;\n}\n\nconst continueEditSessionExtPoint = ExtensionsRegistry.registerExtensionPoint<ICommand[]>({\n\textensionPoint: 'continueEditSession',\n\tjsonSchema: {\n\t\tdescription: localize('continueEditSessionExtPoint', 'Contributes options for continuing the current edit session in a different environment'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tcommand: {\n\t\t\t\t\tdescription: localize('continueEditSessionExtPoint.command', 'Identifier of the command to execute. The command must be declared in the \\'commands\\'-section and return a URI representing a different environment where the current edit session can be continued.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tgroup: {\n\t\t\t\t\tdescription: localize('continueEditSessionExtPoint.group', 'Group into which this item belongs.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tqualifiedName: {\n\t\t\t\t\tdescription: localize('continueEditSessionExtPoint.qualifiedName', 'A fully qualified name for this item which is used for display in menus.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tdescription: {\n\t\t\t\t\tdescription: localize('continueEditSessionExtPoint.description', \"The url, or a command that returns the url, to the option's documentation page.\"),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tremoteGroup: {\n\t\t\t\t\tdescription: localize('continueEditSessionExtPoint.remoteGroup', 'Group into which this item belongs in the remote indicator.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\twhen: {\n\t\t\t\t\tdescription: localize('continueEditSessionExtPoint.when', 'Condition which must be true to show this item.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\trequired: ['command']\n\t\t}\n\t}\n});\n\n//#endregion\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchRegistry.registerWorkbenchContribution(EditSessionsContribution, LifecyclePhase.Restored);\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\t...workbenchConfigurationNodeBase,\n\t'properties': {\n\t\t'workbench.experimental.cloudChanges.autoStore': {\n\t\t\tenum: ['onShutdown', 'off'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('autoStoreWorkingChanges.onShutdown', \"Automatically store current working changes in the cloud on window close.\"),\n\t\t\t\tlocalize('autoStoreWorkingChanges.off', \"Never attempt to automatically store working changes in the cloud.\")\n\t\t\t],\n\t\t\t'type': 'string',\n\t\t\t'tags': ['experimental', 'usesOnlineServices'],\n\t\t\t'default': 'off',\n\t\t\t'markdownDescription': localize('autoStoreWorkingChangesDescription', \"Controls whether to automatically store available working changes in the cloud for the current workspace. This setting has no effect in the web.\"),\n\t\t},\n\t\t'workbench.cloudChanges.autoResume': {\n\t\t\tenum: ['onReload', 'off'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('autoResumeWorkingChanges.onReload', \"Automatically resume available working changes from the cloud on window reload.\"),\n\t\t\t\tlocalize('autoResumeWorkingChanges.off', \"Never attempt to resume working changes from the cloud.\")\n\t\t\t],\n\t\t\t'type': 'string',\n\t\t\t'tags': ['usesOnlineServices'],\n\t\t\t'default': 'onReload',\n\t\t\t'markdownDescription': localize('autoResumeWorkingChanges', \"Controls whether to automatically resume available working changes stored in the cloud for the current workspace.\"),\n\t\t},\n\t\t'workbench.cloudChanges.continueOn': {\n\t\t\tenum: ['prompt', 'off'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('continueOnCloudChanges.promptForAuth', 'Prompt the user to sign in to store working changes in the cloud with Continue Working On.'),\n\t\t\t\tlocalize('continueOnCloudChanges.off', 'Do not store working changes in the cloud with Continue Working On unless the user has already turned on Cloud Changes.')\n\t\t\t],\n\t\t\ttype: 'string',\n\t\t\ttags: ['usesOnlineServices'],\n\t\t\tdefault: 'prompt',\n\t\t\tmarkdownDescription: localize('continueOnCloudChanges', 'Controls whether to prompt the user to store working changes in the cloud when using Continue Working On.')\n\t\t},\n\t\t'workbench.experimental.cloudChanges.partialMatches.enabled': {\n\t\t\t'type': 'boolean',\n\t\t\t'tags': ['experimental', 'usesOnlineServices'],\n\t\t\t'default': false,\n\t\t\t'markdownDescription': localize('cloudChangesPartialMatchesEnabled', \"Controls whether to surface cloud changes which partially match the current session.\")\n\t\t}\n\t}\n});\n"]}