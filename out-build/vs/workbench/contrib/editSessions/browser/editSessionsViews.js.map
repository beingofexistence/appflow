{"version":3,"sources":["vs/workbench/contrib/editSessions/browser/editSessionsViews.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAuBhG,MAAM,uBAAuB,GAAG,mBAAmB,CAAC;IACpD,MAAM,+BAA+B,GAAG,IAAI,gBAAG,CAAmB,uBAAuB,EAAE,CAAC,CAAC,CAAC;IAEvF,IAAM,IAAI,GAAV,MAAM,IAAsB,SAAQ,eAAG;QAC7C,YACC,SAAwB,EACgB,CAAyB;YAEjE,KAAK,EAAE,CAAC;YAFgC,MAAC,GAAD,CAAC,CAAwB;YAGjE,IAAI,CAAC,CAAC,CAAa,SAAS,CAAC,CAAC;QAC/B,CAAC;QAEO,CAAC,CAAa,SAAwB;YAC7C,MAAM,MAAM,GAAG,mBAAI,CAAuB;YAC1C,MAAM,IAAI,GAAG,mBAAI,CAAgB;YACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAoB,cAAc,CAAC,eAAI,EAAM,MAAM,EAAE,IAAI,CAAC,CAAC;YAClF,QAAQ,CAAC,qBAAqB,GAAG,IAAI,CAAC;YACtC,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAClC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,CAAoB,cAAc,CAAC,+BAA+B,CAAC,CAAC;YAElG,MAAM,aAAa,GAAG,cAAG,CAAM,EAAE,CAAiB,kBAAU,CAAC,aAAa,CAAC,CAAC;YAC5E,aAAa,CAAC,aAAa,CAAC,CAAsB;oBACjD,EAAE,EAAE,MAAM;oBACV,IAAI;oBACJ,cAAc,EAAE,IAAI,iBAAG,CAAY,eAAI,CAAS;oBAChD,mBAAmB,EAAE,IAAI;oBACzB,WAAW,EAAE,KAAK;oBAClB,QAAQ;oBACR,SAAS,EAAE,KAAK;oBAChB,IAAI,EAAE,gBAAG,CAAY,GAAG,CAAC,mBAAI,CAAoB;oBACjD,KAAK,EAAE,GAAG;oBACV,aAAa,EAAE,IAAI;iBACnB,CAAC,EAAE,SAAS,CAAC,CAAC;YAEf,aAAa,CAAC,0BAA0B,CAAC,MAAM,EAAE;gBAChD,OAAO,EAAE,IAAA,cAAQ,EAChB,CAAiB,EACjB,IAA0D,EAC1D,IAAI,IAAA,cAAQ,EAAC,CAA0B,EAAE,IAAuB,CAAC,iDAAiD,CAClH;gBACD,IAAI,EAAE,gBAAG,CAAY,MAAM,CAAC,uBAAuB,EAAE,CAAC,CAAC;gBACvD,KAAK,EAAE,CAAC;aACR,CAAC,CAAC;YAEH,IAAA,aAAG,EAAa,KAAM,SAAQ,aAAG;gBAChC;oBACC,KAAK,CAAC;wBACL,EAAE,EAAE,uCAAuC;wBAC3C,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA0C,EAAE,IAAwB,CAAC;wBACrF,IAAI,EAAE,cAAG,CAAK,eAAe;wBAC7B,IAAI,EAAE;4BACL,EAAE,EAAE,aAAG,CAAI,eAAe;4BAC1B,IAAI,EAAE,gBAAG,CAAY,GAAG,CAAC,gBAAG,CAAY,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,gBAAG,CAAY,KAAK,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;4BAClH,KAAK,EAAE,QAAQ;yBACf;qBACD,CAAC,CAAC;gBACJ,CAAC;gBAED,KAAK,CAAC,GAAG,CAAC,QAA0B,EAAE,MAA6B;oBAClE,MAAM,aAAa,GAAG,SAAG,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC1E,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,cAAG,CAAa,CAAC;oBACrD,MAAM,cAAc,CAAC,cAAc,CAAC,6CAA6C,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;oBACxG,MAAM,QAAQ,CAAC,OAAO,EAAE,CAAC;gBAC1B,CAAC;aACD,CAAC,CAAC;YAEH,IAAA,aAAG,EAAa,KAAM,SAAQ,aAAG;gBAChC;oBACC,KAAK,CAAC;wBACL,EAAE,EAAE,sCAAsC;wBAC1C,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAyC,EAAE,IAAuB,CAAC;wBACnF,IAAI,EAAE,cAAG,CAAK,WAAW;qBACzB,CAAC,CAAC;gBACJ,CAAC;gBAED,KAAK,CAAC,GAAG,CAAC,QAA0B,EAAE,MAA6B;oBAClE,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,cAAG,CAAa,CAAC;oBACrD,MAAM,cAAc,CAAC,cAAc,CAAC,6CAA6C,CAAC,CAAC;oBACnF,MAAM,QAAQ,CAAC,OAAO,EAAE,CAAC;gBAC1B,CAAC;aACD,CAAC,CAAC;YAEH,IAAA,aAAG,EAAa,KAAM,SAAQ,aAAG;gBAChC;oBACC,KAAK,CAAC;wBACL,EAAE,EAAE,uCAAuC;wBAC3C,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA0C,EAAE,IAAwB,CAAC;wBACrF,IAAI,EAAE,cAAG,CAAK,KAAK;wBACnB,IAAI,EAAE;4BACL,EAAE,EAAE,aAAG,CAAI,eAAe;4BAC1B,IAAI,EAAE,gBAAG,CAAY,GAAG,CAAC,gBAAG,CAAY,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,gBAAG,CAAY,KAAK,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;4BAClH,KAAK,EAAE,QAAQ;yBACf;qBACD,CAAC,CAAC;gBACJ,CAAC;gBAED,KAAK,CAAC,GAAG,CAAC,QAA0B,EAAE,MAA6B;oBAClE,MAAM,aAAa,GAAG,SAAG,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC1E,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,aAAG,CAAY,CAAC;oBACnD,MAAM,yBAAyB,GAAG,QAAQ,CAAC,GAAG,CAAC,mBAAI,CAAwB,CAAC;oBAC5E,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,OAAO,CAAC;wBAC1C,OAAO,EAAE,IAAA,cAAQ,EAAC,CAAmB,EAAE,IAAgF,EAAE,aAAa,CAAC;wBACvI,MAAM,EAAE,IAAA,cAAQ,EAAC,CAA0B,EAAE,IAA+B,CAAC;wBAC7E,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,mBAAI;qBACX,CAAC,CAAC;oBACH,IAAI,MAAM,CAAC,SAAS,EAAE;wBACrB,MAAM,yBAAyB,CAAC,MAAM,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;wBACtE,MAAM,QAAQ,CAAC,OAAO,EAAE,CAAC;qBACzB;gBACF,CAAC;aACD,CAAC,CAAC;YAEH,IAAA,aAAG,EAAa,KAAM,SAAQ,aAAG;gBAChC;oBACC,KAAK,CAAC;wBACL,EAAE,EAAE,0CAA0C;wBAC9C,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA0C,EAAE,IAAuC,CAAC;wBACpG,IAAI,EAAE,cAAG,CAAK,KAAK;wBACnB,IAAI,EAAE;4BACL,EAAE,EAAE,aAAG,CAAI,SAAS;4BACpB,IAAI,EAAE,gBAAG,CAAY,GAAG,CAAC,gBAAG,CAAY,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,gBAAG,CAAY,OAAO,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC;yBACnH;qBACD,CAAC,CAAC;gBACJ,CAAC;gBAED,KAAK,CAAC,GAAG,CAAC,QAA0B;oBACnC,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,aAAG,CAAY,CAAC;oBACnD,MAAM,yBAAyB,GAAG,QAAQ,CAAC,GAAG,CAAC,mBAAI,CAAwB,CAAC;oBAC5E,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,OAAO,CAAC;wBAC1C,OAAO,EAAE,IAAA,cAAQ,EAAC,CAAoB,EAAE,IAAgF,CAAC;wBACzH,MAAM,EAAE,IAAA,cAAQ,EAAC,CAA2B,EAAE,IAA+B,CAAC;wBAC9E,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,mBAAI;qBACX,CAAC,CAAC;oBACH,IAAI,MAAM,CAAC,SAAS,EAAE;wBACrB,MAAM,yBAAyB,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;wBAC7D,MAAM,QAAQ,CAAC,OAAO,EAAE,CAAC;qBACzB;gBACF,CAAC;aACD,CAAC,CAAC;QACJ,CAAC;KACD,CAAA;IA3IY,oBAAI;mBAAJ,IAAI;QAGd,WAAA,mBAAG,CAAA;OAHO,IAAI,CA2IhB;IAED,IAAM,+BAA+B,GAArC,MAAM,+BAA+B;QAIpC,YAC+C,CAAgC,EACzC,CAAsB,EAChB,CAA4B,EACxC,CAAgB;YAHD,MAAC,GAAD,CAAC,CAA+B;YACzC,MAAC,GAAD,CAAC,CAAqB;YAChB,MAAC,GAAD,CAAC,CAA2B;YACxC,MAAC,GAAD,CAAC,CAAe;YAE/C,IAAI,CAAC,CAAC,GAAmB,+BAA+B,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAiB,CAAC;QACzF,CAAC;QAED,KAAK,CAAC,WAAW,CAAC,OAAmB;YACpC,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO,IAAI,CAAC,CAAC,EAAmB,CAAC;aACjC;YAED,MAAM,CAAC,GAAG,EAAE,UAAU,EAAE,QAAQ,CAAC,GAAG,SAAG,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE3F,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE;gBACvB,OAAO,IAAI,CAAC,CAAC,CAAc,GAAG,CAAC,CAAC;aAChC;iBAAM,IAAI,GAAG,IAAI,UAAU,IAAI,CAAC,QAAQ,EAAE;gBAC1C,OAAO,IAAI,CAAC,CAAC,CAA4B,GAAG,EAAE,UAAU,CAAC,CAAC;aAC1D;YAED,OAAO,EAAE,CAAC;QACX,CAAC;QAEO,KAAK,CAAC,CAAC;YACd,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,CAAC,CAA0B,IAAI,CAAC,cAAc,CAAC,CAAC;YACnF,IAAI,CAAC,CAAC,CAAiB,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACnD,MAAM,YAAY,GAAG,EAAE,CAAC;YAExB,KAAK,MAAM,OAAO,IAAI,eAAe,EAAE;gBACtC,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,mBAAI,EAAkB,SAAS,EAAE,wBAAwB,EAAE,IAAI,EAAE,IAAI,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBAC1H,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,CAAC,CAA0B,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC5F,IAAI,CAAC,WAAW,EAAE;oBACjB,SAAS;iBACT;gBACD,MAAM,OAAO,GAAgB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBAC7D,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC;gBACrF,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC;gBAClC,MAAM,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAA0B,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC5G,MAAM,WAAW,GAAG,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,IAAA,UAAG,EAAK,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAA,UAAG,EAAK,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,iCAAiC,WAAW,EAAE,CAAC;gBAEjK,YAAY,CAAC,IAAI,CAAC;oBACjB,MAAM,EAAE,QAAQ,CAAC,QAAQ,EAAE;oBAC3B,gBAAgB,EAAE,gCAAwB,CAAC,SAAS;oBACpD,KAAK,EAAE,EAAE,KAAK,EAAE;oBAChB,WAAW,EAAE,WAAW;oBACxB,SAAS,EAAE,cAAG,CAAK,IAAI;oBACvB,YAAY,EAAE,cAAc;iBAC5B,CAAC,CAAC;aACH;YAED,OAAO,YAAY,CAAC;QACrB,CAAC;QAEO,KAAK,CAAC,CAAC,CAAc,GAAW;YACvC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,CAAC,CAA0B,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YAE7E,IAAI,CAAC,IAAI,EAAE;gBACV,OAAO,EAAE,CAAC;aACV;YACD,MAAM,OAAO,GAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEtD,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,MAAM,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAClC,OAAO,IAAI,CAAC,CAAC,CAA4B,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;aAC3D;YAED,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;gBACrC,MAAM,QAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,mBAAI,EAAkB,SAAS,EAAE,wBAAwB,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACtI,OAAO;oBACN,MAAM,EAAE,QAAQ,CAAC,QAAQ,EAAE;oBAC3B,gBAAgB,EAAE,gCAAwB,CAAC,SAAS;oBACpD,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE;oBAC7B,SAAS,EAAE,cAAG,CAAK,MAAM;iBACzB,CAAC;YACH,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,KAAK,CAAC,CAAC,CAA4B,GAAW,EAAE,UAAkB;YACzE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,CAAC,CAA0B,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YAE7E,IAAI,CAAC,IAAI,EAAE;gBACV,OAAO,EAAE,CAAC;aACV;YACD,MAAM,OAAO,GAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEtD,MAAM,sBAAsB,GAAG,IAAI,CAAC,CAAC,CAAuB,YAAY,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;YAChI,MAAM,iBAAiB,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;YAEvF,IAAI,CAAC,iBAAiB,EAAE;gBACvB,OAAO,EAAE,CAAC;aACV;YAED,OAAO,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;gBACxE,MAAM,cAAc,GAAG,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,mBAAI,EAAkB,SAAS,EAAE,wBAAwB,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,UAAU,IAAI,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;gBAEtK,IAAI,sBAAsB,EAAE,GAAG,EAAE;oBAChC,+CAA+C;oBAC/C,MAAM,SAAS,GAAG,IAAA,eAAG,EAAM,sBAAsB,CAAC,GAAG,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC;oBAChF,IAAI,MAAM,CAAC,IAAI,KAAK,yBAAU,CAAC,QAAQ,IAAI,MAAM,IAAI,CAAC,CAAC,CAAW,MAAM,CAAC,SAAS,CAAC,EAAE;wBACpF,OAAO;4BACN,MAAM,EAAE,cAAc,CAAC,QAAQ,EAAE;4BACjC,WAAW,EAAE,cAAc;4BAC3B,gBAAgB,EAAE,gCAAwB,CAAC,IAAI;4BAC/C,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,gBAAgB,EAAE;4BACzC,SAAS,EAAE,cAAG,CAAK,IAAI;4BACvB,OAAO,EAAE;gCACR,EAAE,EAAE,aAAa;gCACjB,KAAK,EAAE,IAAA,cAAQ,EAAC,EAAiB,EAAE,IAAiB,CAAC;gCACrD,SAAS,EAAE;oCACV,SAAS;oCACT,cAAc;oCACd,GAAG,IAAA,UAAG,EAAM,MAAM,CAAC,gBAAgB,CAAC,KAAK,IAAA,cAAQ,EAAC,EAAY,EAAE,IAAY,CAAC,WAAW,IAAA,cAAQ,EAAC,EAAe,EAAE,IAAe,CAAC,GAAG;oCACrI,SAAS;iCACT;6BACD;yBACD,CAAC;qBACF;iBACD;gBAED,OAAO;oBACN,MAAM,EAAE,cAAc,CAAC,QAAQ,EAAE;oBACjC,WAAW,EAAE,cAAc;oBAC3B,gBAAgB,EAAE,gCAAwB,CAAC,IAAI;oBAC/C,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,gBAAgB,EAAE;oBACzC,SAAS,EAAE,cAAG,CAAK,IAAI;oBACvB,OAAO,EAAE;wBACR,EAAE,EAAE,qBAAI;wBACR,KAAK,EAAE,IAAA,cAAQ,EAAC,EAAW,EAAE,IAAW,CAAC;wBACzC,SAAS,EAAE,CAAC,cAAc,EAAE,SAAS,EAAE,SAAS,CAAC;qBACjD;iBACD,CAAC;YACH,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;KACD,CAAA;IA3IK,+BAA+B;QAKlC,WAAA,mBAAI,CAAA;QACJ,WAAA,gBAAG,CAAA;QACH,WAAA,eAAG,CAAA;QACH,WAAA,WAAG,CAAA;OARA,+BAA+B,CA2IpC","file":"editSessionsViews.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { TreeView, TreeViewPane } from 'vs/workbench/browser/parts/views/treeView';\nimport { Extensions, ITreeItem, ITreeViewDataProvider, ITreeViewDescriptor, IViewsRegistry, TreeItemCollapsibleState, TreeViewItemHandleArg, ViewContainer } from 'vs/workbench/common/views';\nimport { ChangeType, EDIT_SESSIONS_DATA_VIEW_ID, EDIT_SESSIONS_SCHEME, EDIT_SESSIONS_SHOW_VIEW, EDIT_SESSIONS_TITLE, EditSession, IEditSessionsStorageService } from 'vs/workbench/contrib/editSessions/common/editSessions';\nimport { URI } from 'vs/base/common/uri';\nimport { fromNow } from 'vs/base/common/date';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { API_OPEN_EDITOR_COMMAND_ID } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { registerAction2, Action2, MenuId } from 'vs/platform/actions/common/actions';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { joinPath } from 'vs/base/common/resources';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { basename } from 'vs/base/common/path';\n\nconst EDIT_SESSIONS_COUNT_KEY = 'editSessionsCount';\nconst EDIT_SESSIONS_COUNT_CONTEXT_KEY = new RawContextKey<number>(EDIT_SESSIONS_COUNT_KEY, 0);\n\nexport class EditSessionsDataViews extends Disposable {\n\tconstructor(\n\t\tcontainer: ViewContainer,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.registerViews(container);\n\t}\n\n\tprivate registerViews(container: ViewContainer): void {\n\t\tconst viewId = EDIT_SESSIONS_DATA_VIEW_ID;\n\t\tconst name = EDIT_SESSIONS_TITLE;\n\t\tconst treeView = this.instantiationService.createInstance(TreeView, viewId, name);\n\t\ttreeView.showCollapseAllAction = true;\n\t\ttreeView.showRefreshAction = true;\n\t\ttreeView.dataProvider = this.instantiationService.createInstance(EditSessionDataViewDataProvider);\n\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\tviewsRegistry.registerViews([<ITreeViewDescriptor>{\n\t\t\tid: viewId,\n\t\t\tname,\n\t\t\tctorDescriptor: new SyncDescriptor(TreeViewPane),\n\t\t\tcanToggleVisibility: true,\n\t\t\tcanMoveView: false,\n\t\t\ttreeView,\n\t\t\tcollapsed: false,\n\t\t\twhen: ContextKeyExpr.and(EDIT_SESSIONS_SHOW_VIEW),\n\t\t\torder: 100,\n\t\t\thideByDefault: true,\n\t\t}], container);\n\n\t\tviewsRegistry.registerViewWelcomeContent(viewId, {\n\t\t\tcontent: localize(\n\t\t\t\t'noStoredChanges',\n\t\t\t\t'You have no stored changes in the cloud to display.\\n{0}',\n\t\t\t\t`[${localize('storeWorkingChangesTitle', 'Store Working Changes')}](command:workbench.editSessions.actions.store)`,\n\t\t\t),\n\t\t\twhen: ContextKeyExpr.equals(EDIT_SESSIONS_COUNT_KEY, 0),\n\t\t\torder: 1\n\t\t});\n\n\t\tregisterAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.editSessions.actions.resume',\n\t\t\t\t\ttitle: localize('workbench.editSessions.actions.resume.v2', \"Resume Working Changes\"),\n\t\t\t\t\ticon: Codicon.desktopDownload,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', viewId), ContextKeyExpr.regex('viewItem', /edit-session/i)),\n\t\t\t\t\t\tgroup: 'inline'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor, handle: TreeViewItemHandleArg): Promise<void> {\n\t\t\t\tconst editSessionId = URI.parse(handle.$treeItemHandle).path.substring(1);\n\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\tawait commandService.executeCommand('workbench.editSessions.actions.resumeLatest', editSessionId, true);\n\t\t\t\tawait treeView.refresh();\n\t\t\t}\n\t\t});\n\n\t\tregisterAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.editSessions.actions.store',\n\t\t\t\t\ttitle: localize('workbench.editSessions.actions.store.v2', \"Store Working Changes\"),\n\t\t\t\t\ticon: Codicon.cloudUpload,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor, handle: TreeViewItemHandleArg): Promise<void> {\n\t\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t\tawait commandService.executeCommand('workbench.editSessions.actions.storeCurrent');\n\t\t\t\tawait treeView.refresh();\n\t\t\t}\n\t\t});\n\n\t\tregisterAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.editSessions.actions.delete',\n\t\t\t\t\ttitle: localize('workbench.editSessions.actions.delete.v2', \"Delete Working Changes\"),\n\t\t\t\t\ticon: Codicon.trash,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewItemContext,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', viewId), ContextKeyExpr.regex('viewItem', /edit-session/i)),\n\t\t\t\t\t\tgroup: 'inline'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor, handle: TreeViewItemHandleArg): Promise<void> {\n\t\t\t\tconst editSessionId = URI.parse(handle.$treeItemHandle).path.substring(1);\n\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\tconst editSessionStorageService = accessor.get(IEditSessionsStorageService);\n\t\t\t\tconst result = await dialogService.confirm({\n\t\t\t\t\tmessage: localize('confirm delete.v2', 'Are you sure you want to permanently delete your working changes with ref {0}?', editSessionId),\n\t\t\t\t\tdetail: localize('confirm delete detail.v2', ' You cannot undo this action.'),\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\ttitle: EDIT_SESSIONS_TITLE\n\t\t\t\t});\n\t\t\t\tif (result.confirmed) {\n\t\t\t\t\tawait editSessionStorageService.delete('editSessions', editSessionId);\n\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tregisterAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.editSessions.actions.deleteAll',\n\t\t\t\t\ttitle: localize('workbench.editSessions.actions.deleteAll', \"Delete All Working Changes from Cloud\"),\n\t\t\t\t\ticon: Codicon.trash,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', viewId), ContextKeyExpr.greater(EDIT_SESSIONS_COUNT_KEY, 0)),\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\tconst editSessionStorageService = accessor.get(IEditSessionsStorageService);\n\t\t\t\tconst result = await dialogService.confirm({\n\t\t\t\t\tmessage: localize('confirm delete all', 'Are you sure you want to permanently delete all stored changes from the cloud?'),\n\t\t\t\t\tdetail: localize('confirm delete all detail', ' You cannot undo this action.'),\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\ttitle: EDIT_SESSIONS_TITLE\n\t\t\t\t});\n\t\t\t\tif (result.confirmed) {\n\t\t\t\t\tawait editSessionStorageService.delete('editSessions', null);\n\t\t\t\t\tawait treeView.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass EditSessionDataViewDataProvider implements ITreeViewDataProvider {\n\n\tprivate editSessionsCount;\n\n\tconstructor(\n\t\t@IEditSessionsStorageService private readonly editSessionsStorageService: IEditSessionsStorageService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tthis.editSessionsCount = EDIT_SESSIONS_COUNT_CONTEXT_KEY.bindTo(this.contextKeyService);\n\t}\n\n\tasync getChildren(element?: ITreeItem): Promise<ITreeItem[]> {\n\t\tif (!element) {\n\t\t\treturn this.getAllEditSessions();\n\t\t}\n\n\t\tconst [ref, folderName, filePath] = URI.parse(element.handle).path.substring(1).split('/');\n\n\t\tif (ref && !folderName) {\n\t\t\treturn this.getEditSession(ref);\n\t\t} else if (ref && folderName && !filePath) {\n\t\t\treturn this.getEditSessionFolderContents(ref, folderName);\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate async getAllEditSessions(): Promise<ITreeItem[]> {\n\t\tconst allEditSessions = await this.editSessionsStorageService.list('editSessions');\n\t\tthis.editSessionsCount.set(allEditSessions.length);\n\t\tconst editSessions = [];\n\n\t\tfor (const session of allEditSessions) {\n\t\t\tconst resource = URI.from({ scheme: EDIT_SESSIONS_SCHEME, authority: 'remote-session-content', path: `/${session.ref}` });\n\t\t\tconst sessionData = await this.editSessionsStorageService.read('editSessions', session.ref);\n\t\t\tif (!sessionData) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst content: EditSession = JSON.parse(sessionData.content);\n\t\t\tconst label = content.folders.map((folder) => folder.name).join(', ') ?? session.ref;\n\t\t\tconst machineId = content.machine;\n\t\t\tconst machineName = machineId ? await this.editSessionsStorageService.getMachineById(machineId) : undefined;\n\t\t\tconst description = machineName === undefined ? fromNow(session.created, true) : `${fromNow(session.created, true)}\\u00a0\\u00a0\\u2022\\u00a0\\u00a0${machineName}`;\n\n\t\t\teditSessions.push({\n\t\t\t\thandle: resource.toString(),\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\tlabel: { label },\n\t\t\t\tdescription: description,\n\t\t\t\tthemeIcon: Codicon.repo,\n\t\t\t\tcontextValue: `edit-session`\n\t\t\t});\n\t\t}\n\n\t\treturn editSessions;\n\t}\n\n\tprivate async getEditSession(ref: string): Promise<ITreeItem[]> {\n\t\tconst data = await this.editSessionsStorageService.read('editSessions', ref);\n\n\t\tif (!data) {\n\t\t\treturn [];\n\t\t}\n\t\tconst content: EditSession = JSON.parse(data.content);\n\n\t\tif (content.folders.length === 1) {\n\t\t\tconst folder = content.folders[0];\n\t\t\treturn this.getEditSessionFolderContents(ref, folder.name);\n\t\t}\n\n\t\treturn content.folders.map((folder) => {\n\t\t\tconst resource = URI.from({ scheme: EDIT_SESSIONS_SCHEME, authority: 'remote-session-content', path: `/${data.ref}/${folder.name}` });\n\t\t\treturn {\n\t\t\t\thandle: resource.toString(),\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.Collapsed,\n\t\t\t\tlabel: { label: folder.name },\n\t\t\t\tthemeIcon: Codicon.folder\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate async getEditSessionFolderContents(ref: string, folderName: string): Promise<ITreeItem[]> {\n\t\tconst data = await this.editSessionsStorageService.read('editSessions', ref);\n\n\t\tif (!data) {\n\t\t\treturn [];\n\t\t}\n\t\tconst content: EditSession = JSON.parse(data.content);\n\n\t\tconst currentWorkspaceFolder = this.workspaceContextService.getWorkspace().folders.find((folder) => folder.name === folderName);\n\t\tconst editSessionFolder = content.folders.find((folder) => folder.name === folderName);\n\n\t\tif (!editSessionFolder) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Promise.all(editSessionFolder.workingChanges.map(async (change) => {\n\t\t\tconst cloudChangeUri = URI.from({ scheme: EDIT_SESSIONS_SCHEME, authority: 'remote-session-content', path: `/${data.ref}/${folderName}/${change.relativeFilePath}` });\n\n\t\t\tif (currentWorkspaceFolder?.uri) {\n\t\t\t\t// find the corresponding file in the workspace\n\t\t\t\tconst localCopy = joinPath(currentWorkspaceFolder.uri, change.relativeFilePath);\n\t\t\t\tif (change.type === ChangeType.Addition && await this.fileService.exists(localCopy)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\thandle: cloudChangeUri.toString(),\n\t\t\t\t\t\tresourceUri: cloudChangeUri,\n\t\t\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\t\t\tlabel: { label: change.relativeFilePath },\n\t\t\t\t\t\tthemeIcon: Codicon.file,\n\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\tid: 'vscode.diff',\n\t\t\t\t\t\t\ttitle: localize('compare changes', 'Compare Changes'),\n\t\t\t\t\t\t\targuments: [\n\t\t\t\t\t\t\t\tlocalCopy,\n\t\t\t\t\t\t\t\tcloudChangeUri,\n\t\t\t\t\t\t\t\t`${basename(change.relativeFilePath)} (${localize('local copy', 'Local Copy')} \\u2194 ${localize('cloud changes', 'Cloud Changes')})`,\n\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\thandle: cloudChangeUri.toString(),\n\t\t\t\tresourceUri: cloudChangeUri,\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\tlabel: { label: change.relativeFilePath },\n\t\t\t\tthemeIcon: Codicon.file,\n\t\t\t\tcommand: {\n\t\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\t\ttitle: localize('open file', 'Open File'),\n\t\t\t\t\targuments: [cloudChangeUri, undefined, undefined]\n\t\t\t\t}\n\t\t\t};\n\t\t}));\n\t}\n}\n"]}