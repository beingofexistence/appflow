{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/test/browser/terminalInstance.test.ts"],"names":[],"mappings":"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","file":"terminalInstance.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual, strictEqual } from 'assert';\nimport { isWindows } from 'vs/base/common/platform';\nimport { TerminalLabelComputer, parseExitResult } from 'vs/workbench/contrib/terminal/browser/terminalInstance';\nimport { IWorkspaceContextService, IWorkspaceFolder, toWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { Workspace } from 'vs/platform/workspace/test/common/testWorkspace';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { TestContextService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { fixPath, getUri } from 'vs/workbench/services/search/test/browser/queryBuilder.test';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { TerminalConfigHelper } from 'vs/workbench/contrib/terminal/browser/terminalConfigHelper';\nimport { ITerminalInstance } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { ProcessState } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { URI } from 'vs/base/common/uri';\nimport { TerminalCapabilityStore } from 'vs/platform/terminal/common/capabilities/terminalCapabilityStore';\nimport { TerminalCapability } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { Schemas } from 'vs/base/common/network';\nimport { TestFileService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nconst root1 = '/foo/root1';\nconst ROOT_1 = fixPath(root1);\nconst root2 = '/foo/root2';\nconst ROOT_2 = fixPath(root2);\nconst emptyRoot = '/foo';\nconst ROOT_EMPTY = fixPath(emptyRoot);\n\nsuite('Workbench - TerminalInstance', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsuite('parseExitResult', () => {\n\t\ttest('should return no message for exit code = undefined', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(undefined, {}, ProcessState.KilledDuringLaunch, undefined),\n\t\t\t\t{ code: undefined, message: undefined }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(undefined, {}, ProcessState.KilledByUser, undefined),\n\t\t\t\t{ code: undefined, message: undefined }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(undefined, {}, ProcessState.KilledByProcess, undefined),\n\t\t\t\t{ code: undefined, message: undefined }\n\t\t\t);\n\t\t});\n\t\ttest('should return no message for exit code = 0', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(0, {}, ProcessState.KilledDuringLaunch, undefined),\n\t\t\t\t{ code: 0, message: undefined }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(0, {}, ProcessState.KilledByUser, undefined),\n\t\t\t\t{ code: 0, message: undefined }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(0, {}, ProcessState.KilledDuringLaunch, undefined),\n\t\t\t\t{ code: 0, message: undefined }\n\t\t\t);\n\t\t});\n\t\ttest('should return friendly message when executable is specified for non-zero exit codes', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(1, { executable: 'foo' }, ProcessState.KilledDuringLaunch, undefined),\n\t\t\t\t{ code: 1, message: 'The terminal process \"foo\" failed to launch (exit code: 1).' }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(1, { executable: 'foo' }, ProcessState.KilledByUser, undefined),\n\t\t\t\t{ code: 1, message: 'The terminal process \"foo\" terminated with exit code: 1.' }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(1, { executable: 'foo' }, ProcessState.KilledByProcess, undefined),\n\t\t\t\t{ code: 1, message: 'The terminal process \"foo\" terminated with exit code: 1.' }\n\t\t\t);\n\t\t});\n\t\ttest('should return friendly message when executable and args are specified for non-zero exit codes', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(1, { executable: 'foo', args: ['bar', 'baz'] }, ProcessState.KilledDuringLaunch, undefined),\n\t\t\t\t{ code: 1, message: `The terminal process \"foo 'bar', 'baz'\" failed to launch (exit code: 1).` }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(1, { executable: 'foo', args: ['bar', 'baz'] }, ProcessState.KilledByUser, undefined),\n\t\t\t\t{ code: 1, message: `The terminal process \"foo 'bar', 'baz'\" terminated with exit code: 1.` }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(1, { executable: 'foo', args: ['bar', 'baz'] }, ProcessState.KilledByProcess, undefined),\n\t\t\t\t{ code: 1, message: `The terminal process \"foo 'bar', 'baz'\" terminated with exit code: 1.` }\n\t\t\t);\n\t\t});\n\t\ttest('should return friendly message when executable and arguments are omitted for non-zero exit codes', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(1, {}, ProcessState.KilledDuringLaunch, undefined),\n\t\t\t\t{ code: 1, message: `The terminal process failed to launch (exit code: 1).` }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(1, {}, ProcessState.KilledByUser, undefined),\n\t\t\t\t{ code: 1, message: `The terminal process terminated with exit code: 1.` }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult(1, {}, ProcessState.KilledByProcess, undefined),\n\t\t\t\t{ code: 1, message: `The terminal process terminated with exit code: 1.` }\n\t\t\t);\n\t\t});\n\t\ttest('should ignore pty host-related errors', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult({ message: 'Could not find pty with id 16' }, {}, ProcessState.KilledDuringLaunch, undefined),\n\t\t\t\t{ code: undefined, message: undefined }\n\t\t\t);\n\t\t});\n\t\ttest('should format conpty failure code 5', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult({ code: 5, message: 'A native exception occurred during launch (Cannot create process, error code: 5)' }, { executable: 'foo' }, ProcessState.KilledDuringLaunch, undefined),\n\t\t\t\t{ code: 5, message: `The terminal process failed to launch: Access was denied to the path containing your executable \"foo\". Manage and change your permissions to get this to work.` }\n\t\t\t);\n\t\t});\n\t\ttest('should format conpty failure code 267', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult({ code: 267, message: 'A native exception occurred during launch (Cannot create process, error code: 267)' }, {}, ProcessState.KilledDuringLaunch, '/foo'),\n\t\t\t\t{ code: 267, message: `The terminal process failed to launch: Invalid starting directory \"/foo\", review your terminal.integrated.cwd setting.` }\n\t\t\t);\n\t\t});\n\t\ttest('should format conpty failure code 1260', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult({ code: 1260, message: 'A native exception occurred during launch (Cannot create process, error code: 1260)' }, { executable: 'foo' }, ProcessState.KilledDuringLaunch, undefined),\n\t\t\t\t{ code: 1260, message: `The terminal process failed to launch: Windows cannot open this program because it has been prevented by a software restriction policy. For more information, open Event Viewer or contact your system Administrator.` }\n\t\t\t);\n\t\t});\n\t\ttest('should format generic failures', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult({ code: 123, message: 'A native exception occurred during launch (Cannot create process, error code: 123)' }, {}, ProcessState.KilledDuringLaunch, undefined),\n\t\t\t\t{ code: 123, message: `The terminal process failed to launch: A native exception occurred during launch (Cannot create process, error code: 123).` }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tparseExitResult({ code: 123, message: 'foo' }, {}, ProcessState.KilledDuringLaunch, undefined),\n\t\t\t\t{ code: 123, message: `The terminal process failed to launch: foo.` }\n\t\t\t);\n\t\t});\n\t});\n\tsuite('TerminalLabelComputer', () => {\n\t\tlet store: DisposableStore;\n\t\tlet configurationService: TestConfigurationService;\n\t\tlet terminalLabelComputer: TerminalLabelComputer;\n\t\tlet instantiationService: TestInstantiationService;\n\t\tlet mockContextService: TestContextService;\n\t\tlet mockMultiRootContextService: TestContextService;\n\t\tlet emptyContextService: TestContextService;\n\t\tlet mockWorkspace: Workspace;\n\t\tlet mockMultiRootWorkspace: Workspace;\n\t\tlet emptyWorkspace: Workspace;\n\t\tlet capabilities: TerminalCapabilityStore;\n\t\tlet configHelper: TerminalConfigHelper;\n\n\t\tfunction createInstance(partial?: Partial<ITerminalInstance>): Pick<ITerminalInstance, 'shellLaunchConfig' | 'userHome' | 'cwd' | 'initialCwd' | 'processName' | 'sequence' | 'workspaceFolder' | 'staticTitle' | 'capabilities' | 'title' | 'description'> {\n\t\t\tconst capabilities = store.add(new TerminalCapabilityStore());\n\t\t\tif (!isWindows) {\n\t\t\t\tcapabilities.add(TerminalCapability.NaiveCwdDetection, null!);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tshellLaunchConfig: {},\n\t\t\t\tcwd: 'cwd',\n\t\t\t\tinitialCwd: undefined,\n\t\t\t\tprocessName: '',\n\t\t\t\tsequence: undefined,\n\t\t\t\tworkspaceFolder: undefined,\n\t\t\t\tstaticTitle: undefined,\n\t\t\t\tcapabilities,\n\t\t\t\ttitle: '',\n\t\t\t\tdescription: '',\n\t\t\t\tuserHome: undefined,\n\t\t\t\t...partial\n\t\t\t};\n\t\t}\n\n\t\tsetup(async () => {\n\t\t\tstore = new DisposableStore();\n\t\t\tinstantiationService = store.add(new TestInstantiationService());\n\t\t\tinstantiationService.stub(IWorkspaceContextService, new TestContextService());\n\t\t\tcapabilities = store.add(new TerminalCapabilityStore());\n\t\t\tif (!isWindows) {\n\t\t\t\tcapabilities.add(TerminalCapability.NaiveCwdDetection, null!);\n\t\t\t}\n\n\t\t\tconst ROOT_1_URI = getUri(ROOT_1);\n\t\t\tmockContextService = new TestContextService();\n\t\t\tmockWorkspace = new Workspace('workspace', [toWorkspaceFolder(ROOT_1_URI)]);\n\t\t\tmockContextService.setWorkspace(mockWorkspace);\n\n\t\t\tconst ROOT_2_URI = getUri(ROOT_2);\n\t\t\tmockMultiRootContextService = new TestContextService();\n\t\t\tmockMultiRootWorkspace = new Workspace('multi-root-workspace', [toWorkspaceFolder(ROOT_1_URI), toWorkspaceFolder(ROOT_2_URI)]);\n\t\t\tmockMultiRootContextService.setWorkspace(mockMultiRootWorkspace);\n\n\t\t\tconst ROOT_EMPTY_URI = getUri(ROOT_EMPTY);\n\t\t\temptyContextService = new TestContextService();\n\t\t\temptyWorkspace = new Workspace('empty workspace', [], ROOT_EMPTY_URI);\n\t\t\temptyContextService.setWorkspace(emptyWorkspace);\n\t\t});\n\n\t\tteardown(() => store.dispose());\n\n\t\ttest('should resolve to \"\" when the template variables are empty', () => {\n\t\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: { tabs: { separator: ' - ', title: '', description: '' } } } });\n\t\t\tconfigHelper = store.add(new TerminalConfigHelper(configurationService, null!, null!, null!, null!));\n\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockContextService));\n\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, processName: '' }));\n\t\t\t// TODO:\n\t\t\t// terminalLabelComputer.onLabelChanged(e => {\n\t\t\t// \tstrictEqual(e.title, '');\n\t\t\t// \tstrictEqual(e.description, '');\n\t\t\t// });\n\t\t\tstrictEqual(terminalLabelComputer.title, '');\n\t\t\tstrictEqual(terminalLabelComputer.description, '');\n\t\t});\n\t\ttest('should resolve cwd', () => {\n\t\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: { tabs: { separator: ' - ', title: '${cwd}', description: '${cwd}' } } } });\n\t\t\tconfigHelper = store.add(new TerminalConfigHelper(configurationService, null!, null!, null!, null!));\n\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockContextService));\n\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, cwd: ROOT_1 }));\n\t\t\tstrictEqual(terminalLabelComputer.title, ROOT_1);\n\t\t\tstrictEqual(terminalLabelComputer.description, ROOT_1);\n\t\t});\n\t\ttest('should resolve workspaceFolder', () => {\n\t\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: { tabs: { separator: ' - ', title: '${workspaceFolder}', description: '${workspaceFolder}' } } } });\n\t\t\tconfigHelper = store.add(new TerminalConfigHelper(configurationService, null!, null!, null!, null!));\n\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockContextService));\n\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, processName: 'zsh', workspaceFolder: { uri: URI.from({ scheme: Schemas.file, path: 'folder' }) } as IWorkspaceFolder }));\n\t\t\tstrictEqual(terminalLabelComputer.title, 'folder');\n\t\t\tstrictEqual(terminalLabelComputer.description, 'folder');\n\t\t});\n\t\ttest('should resolve local', () => {\n\t\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: { tabs: { separator: ' - ', title: '${local}', description: '${local}' } } } });\n\t\t\tconfigHelper = store.add(new TerminalConfigHelper(configurationService, null!, null!, null!, null!));\n\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockContextService));\n\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, processName: 'zsh', shellLaunchConfig: { type: 'Local' } }));\n\t\t\tstrictEqual(terminalLabelComputer.title, 'Local');\n\t\t\tstrictEqual(terminalLabelComputer.description, 'Local');\n\t\t});\n\t\ttest('should resolve process', () => {\n\t\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: { tabs: { separator: ' - ', title: '${process}', description: '${process}' } } } });\n\t\t\tconfigHelper = store.add(new TerminalConfigHelper(configurationService, null!, null!, null!, null!));\n\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockContextService));\n\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, processName: 'zsh' }));\n\t\t\tstrictEqual(terminalLabelComputer.title, 'zsh');\n\t\t\tstrictEqual(terminalLabelComputer.description, 'zsh');\n\t\t});\n\t\ttest('should resolve sequence', () => {\n\t\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: { tabs: { separator: ' - ', title: '${sequence}', description: '${sequence}' } } } });\n\t\t\tconfigHelper = store.add(new TerminalConfigHelper(configurationService, null!, null!, null!, null!));\n\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockContextService));\n\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, sequence: 'sequence' }));\n\t\t\tstrictEqual(terminalLabelComputer.title, 'sequence');\n\t\t\tstrictEqual(terminalLabelComputer.description, 'sequence');\n\t\t});\n\t\ttest('should resolve task', () => {\n\t\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: { tabs: { separator: ' ~ ', title: '${process}${separator}${task}', description: '${task}' } } } });\n\t\t\tconfigHelper = store.add(new TerminalConfigHelper(configurationService, null!, null!, null!, null!));\n\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockContextService));\n\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, processName: 'zsh', shellLaunchConfig: { type: 'Task' } }));\n\t\t\tstrictEqual(terminalLabelComputer.title, 'zsh ~ Task');\n\t\t\tstrictEqual(terminalLabelComputer.description, 'Task');\n\t\t});\n\t\ttest('should resolve separator', () => {\n\t\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: { tabs: { separator: ' ~ ', title: '${separator}', description: '${separator}' } } } });\n\t\t\tconfigHelper = store.add(new TerminalConfigHelper(configurationService, null!, null!, null!, null!));\n\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockContextService));\n\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, processName: 'zsh', shellLaunchConfig: { type: 'Task' } }));\n\t\t\tstrictEqual(terminalLabelComputer.title, 'zsh');\n\t\t\tstrictEqual(terminalLabelComputer.description, '');\n\t\t});\n\t\ttest('should always return static title when specified', () => {\n\t\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: { tabs: { separator: ' ~ ', title: '${process}', description: '${workspaceFolder}' } } } });\n\t\t\tconfigHelper = store.add(new TerminalConfigHelper(configurationService, null!, null!, null!, null!));\n\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockContextService));\n\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, processName: 'process', workspaceFolder: { uri: URI.from({ scheme: Schemas.file, path: 'folder' }) } as IWorkspaceFolder, staticTitle: 'my-title' }));\n\t\t\tstrictEqual(terminalLabelComputer.title, 'my-title');\n\t\t\tstrictEqual(terminalLabelComputer.description, 'folder');\n\t\t});\n\t\ttest('should provide cwdFolder for all cwds only when in multi-root', () => {\n\t\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: { tabs: { separator: ' ~ ', title: '${process}${separator}${cwdFolder}', description: '${cwdFolder}' } } } });\n\t\t\tconfigHelper = store.add(new TerminalConfigHelper(configurationService, null!, null!, null!, null!));\n\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockContextService));\n\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, processName: 'process', workspaceFolder: { uri: URI.from({ scheme: Schemas.file, path: ROOT_1 }) } as IWorkspaceFolder, cwd: ROOT_1 }));\n\t\t\t// single-root, cwd is same as root\n\t\t\tstrictEqual(terminalLabelComputer.title, 'process');\n\t\t\tstrictEqual(terminalLabelComputer.description, '');\n\t\t\t// multi-root\n\t\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: { tabs: { separator: ' ~ ', title: '${process}${separator}${cwdFolder}', description: '${cwdFolder}' } } } });\n\t\t\tconfigHelper = store.add(new TerminalConfigHelper(configurationService, null!, null!, null!, null!));\n\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockMultiRootContextService));\n\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, processName: 'process', workspaceFolder: { uri: URI.from({ scheme: Schemas.file, path: ROOT_1 }) } as IWorkspaceFolder, cwd: ROOT_2 }));\n\t\t\tif (isWindows) {\n\t\t\t\tstrictEqual(terminalLabelComputer.title, 'process');\n\t\t\t\tstrictEqual(terminalLabelComputer.description, '');\n\t\t\t} else {\n\t\t\t\tstrictEqual(terminalLabelComputer.title, 'process ~ root2');\n\t\t\t\tstrictEqual(terminalLabelComputer.description, 'root2');\n\t\t\t}\n\t\t});\n\t\ttest('should hide cwdFolder in single folder workspaces when cwd matches the workspace\\'s default cwd even when slashes differ', async () => {\n\t\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: { tabs: { separator: ' ~ ', title: '${process}${separator}${cwdFolder}', description: '${cwdFolder}' } } } });\n\t\t\tconfigHelper = store.add(new TerminalConfigHelper(configurationService, null!, null!, null!, null!));\n\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockContextService));\n\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, processName: 'process', workspaceFolder: { uri: URI.from({ scheme: Schemas.file, path: ROOT_1 }) } as IWorkspaceFolder, cwd: ROOT_1 }));\n\t\t\tstrictEqual(terminalLabelComputer.title, 'process');\n\t\t\tstrictEqual(terminalLabelComputer.description, '');\n\t\t\tif (!isWindows) {\n\t\t\t\tterminalLabelComputer = store.add(new TerminalLabelComputer(configHelper, new TestFileService(), mockContextService));\n\t\t\t\tterminalLabelComputer.refreshLabel(createInstance({ capabilities, processName: 'process', workspaceFolder: { uri: URI.from({ scheme: Schemas.file, path: ROOT_1 }) } as IWorkspaceFolder, cwd: ROOT_2 }));\n\t\t\t\tstrictEqual(terminalLabelComputer.title, 'process ~ root2');\n\t\t\t\tstrictEqual(terminalLabelComputer.description, 'root2');\n\t\t\t}\n\t\t});\n\t});\n});\n"]}