{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/test/browser/terminalProfileService.integrationTest.ts"],"names":[],"mappings":"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","file":"terminalProfileService.integrationTest.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { ITerminalConfiguration, ITerminalProfileService } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { TestExtensionService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { TerminalProfileService } from 'vs/workbench/contrib/terminal/browser/terminalProfileService';\nimport { ITerminalContributionService } from 'vs/workbench/contrib/terminal/common/terminalExtensionPoints';\nimport { IExtensionTerminalProfile, ITerminalBackend, ITerminalProfile } from 'vs/platform/terminal/common/terminal';\nimport { ITerminalInstanceService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { isLinux, isWindows, OperatingSystem } from 'vs/base/common/platform';\nimport { MockContextKeyService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { deepStrictEqual } from 'assert';\nimport { Emitter } from 'vs/base/common/event';\nimport { IProfileQuickPickItem, TerminalProfileQuickpick } from 'vs/workbench/contrib/terminal/browser/terminalProfileQuickpick';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { IPickOptions, IQuickInputService, Omit, QuickPickInput } from 'vs/platform/quickinput/common/quickInput';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nclass TestTerminalProfileService extends TerminalProfileService implements Partial<ITerminalProfileService>{\n\thasRefreshedProfiles: Promise<void> | undefined;\n\toverride refreshAvailableProfiles(): void {\n\t\tthis.hasRefreshedProfiles = this._refreshAvailableProfilesNow();\n\t}\n\trefreshAndAwaitAvailableProfiles(): Promise<void> {\n\t\tthis.refreshAvailableProfiles();\n\t\tif (!this.hasRefreshedProfiles) {\n\t\t\tthrow new Error('has not refreshed profiles yet');\n\t\t}\n\t\treturn this.hasRefreshedProfiles;\n\t}\n}\n\nclass MockTerminalProfileService implements Partial<ITerminalProfileService>{\n\thasRefreshedProfiles: Promise<void> | undefined;\n\t_defaultProfileName: string | undefined;\n\tavailableProfiles?: ITerminalProfile[] | undefined = [];\n\tcontributedProfiles?: IExtensionTerminalProfile[] | undefined = [];\n\tasync getPlatformKey(): Promise<string> {\n\t\treturn 'linux';\n\t}\n\tgetDefaultProfileName(): string | undefined {\n\t\treturn this._defaultProfileName;\n\t}\n\tsetProfiles(profiles: ITerminalProfile[], contributed: IExtensionTerminalProfile[]): void {\n\t\tthis.availableProfiles = profiles;\n\t\tthis.contributedProfiles = contributed;\n\t}\n\tsetDefaultProfileName(name: string): void {\n\t\tthis._defaultProfileName = name;\n\t}\n}\n\n\nclass MockQuickInputService implements Partial<IQuickInputService> {\n\t_pick: IProfileQuickPickItem = powershellPick;\n\tpick(picks: QuickPickInput<IProfileQuickPickItem>[] | Promise<QuickPickInput<IProfileQuickPickItem>[]>, options?: IPickOptions<IProfileQuickPickItem> & { canPickMany: true }, token?: CancellationToken): Promise<IProfileQuickPickItem[] | undefined>;\n\tpick(picks: QuickPickInput<IProfileQuickPickItem>[] | Promise<QuickPickInput<IProfileQuickPickItem>[]>, options?: IPickOptions<IProfileQuickPickItem> & { canPickMany: false }, token?: CancellationToken): Promise<IProfileQuickPickItem | undefined>;\n\tpick(picks: QuickPickInput<IProfileQuickPickItem>[] | Promise<QuickPickInput<IProfileQuickPickItem>[]>, options?: Omit<IPickOptions<IProfileQuickPickItem>, 'canPickMany'>, token?: CancellationToken): Promise<IProfileQuickPickItem | undefined>;\n\tasync pick(picks: any, options?: any, token?: any): Promise<IProfileQuickPickItem | IProfileQuickPickItem[] | undefined> {\n\t\tPromise.resolve(picks);\n\t\treturn this._pick;\n\t}\n\n\tsetPick(pick: IProfileQuickPickItem) {\n\t\tthis._pick = pick;\n\t}\n}\n\nclass TestTerminalProfileQuickpick extends TerminalProfileQuickpick {\n\n}\n\nclass TestTerminalExtensionService extends TestExtensionService {\n\treadonly _onDidChangeExtensions = new Emitter<void>();\n}\n\nclass TestTerminalContributionService implements ITerminalContributionService {\n\t_serviceBrand: undefined;\n\tterminalProfiles: readonly IExtensionTerminalProfile[] = [];\n\tsetProfiles(profiles: IExtensionTerminalProfile[]): void {\n\t\tthis.terminalProfiles = profiles;\n\t}\n}\n\nclass TestTerminalInstanceService implements Partial<ITerminalInstanceService> {\n\tprivate _profiles: Map<string, ITerminalProfile[]> = new Map();\n\tprivate _hasReturnedNone = true;\n\tasync getBackend(remoteAuthority: string | undefined): Promise<ITerminalBackend> {\n\t\treturn {\n\t\t\tgetProfiles: async () => {\n\t\t\t\tif (this._hasReturnedNone) {\n\t\t\t\t\treturn this._profiles.get(remoteAuthority ?? '') || [];\n\t\t\t\t} else {\n\t\t\t\t\tthis._hasReturnedNone = true;\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\t} as Partial<ITerminalBackend> as any;\n\t}\n\tsetProfiles(remoteAuthority: string | undefined, profiles: ITerminalProfile[]) {\n\t\tthis._profiles.set(remoteAuthority ?? '', profiles);\n\t}\n\tsetReturnNone() {\n\t\tthis._hasReturnedNone = false;\n\t}\n}\n\nclass TestRemoteAgentService implements Partial<IRemoteAgentService> {\n\tprivate _os: OperatingSystem | undefined;\n\tsetEnvironment(os: OperatingSystem) {\n\t\tthis._os = os;\n\t}\n\tasync getEnvironment(): Promise<IRemoteAgentEnvironment | null> {\n\t\treturn { os: this._os } as IRemoteAgentEnvironment;\n\t}\n}\n\nconst defaultTerminalConfig: Partial<ITerminalConfiguration> = { profiles: { windows: {}, linux: {}, osx: {} } };\nlet powershellProfile = {\n\tprofileName: 'PowerShell',\n\tpath: 'C:\\\\Powershell.exe',\n\tisDefault: true,\n\ticon: Codicon.terminalPowershell\n};\nlet jsdebugProfile = {\n\textensionIdentifier: 'ms-vscode.js-debug-nightly',\n\ticon: 'debug',\n\tid: 'extension.js-debug.debugTerminal',\n\ttitle: 'JavaScript Debug Terminal'\n};\nconst powershellPick = { label: 'Powershell', profile: powershellProfile, profileName: powershellProfile.profileName };\nconst jsdebugPick = { label: 'Javascript Debug Terminal', profile: jsdebugProfile, profileName: jsdebugProfile.title };\n\nsuite('TerminalProfileService', () => {\n\tlet configurationService: TestConfigurationService;\n\tlet terminalInstanceService: TestTerminalInstanceService;\n\tlet terminalProfileService: TestTerminalProfileService;\n\tlet remoteAgentService: TestRemoteAgentService;\n\tlet extensionService: TestTerminalExtensionService;\n\tlet environmentService: IWorkbenchEnvironmentService;\n\tlet instantiationService: TestInstantiationService;\n\n\tsetup(async () => {\n\t\tconfigurationService = new TestConfigurationService({ terminal: { integrated: defaultTerminalConfig } });\n\t\tremoteAgentService = new TestRemoteAgentService();\n\t\tterminalInstanceService = new TestTerminalInstanceService();\n\t\textensionService = new TestTerminalExtensionService();\n\t\tenvironmentService = { remoteAuthority: undefined } as IWorkbenchEnvironmentService;\n\t\tinstantiationService = new TestInstantiationService();\n\n\t\tconst themeService = new TestThemeService();\n\t\tconst terminalContributionService = new TestTerminalContributionService();\n\t\tconst contextKeyService = new MockContextKeyService();\n\n\t\tinstantiationService.stub(IContextKeyService, contextKeyService);\n\t\tinstantiationService.stub(IExtensionService, extensionService);\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\tinstantiationService.stub(IRemoteAgentService, remoteAgentService);\n\t\tinstantiationService.stub(ITerminalContributionService, terminalContributionService);\n\t\tinstantiationService.stub(ITerminalInstanceService, terminalInstanceService);\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, environmentService);\n\t\tinstantiationService.stub(IThemeService, themeService);\n\n\t\tterminalProfileService = instantiationService.createInstance(TestTerminalProfileService);\n\n\t\t//reset as these properties are changed in each test\n\t\tpowershellProfile = {\n\t\t\tprofileName: 'PowerShell',\n\t\t\tpath: 'C:\\\\Powershell.exe',\n\t\t\tisDefault: true,\n\t\t\ticon: Codicon.terminalPowershell\n\t\t};\n\t\tjsdebugProfile = {\n\t\t\textensionIdentifier: 'ms-vscode.js-debug-nightly',\n\t\t\ticon: 'debug',\n\t\t\tid: 'extension.js-debug.debugTerminal',\n\t\t\ttitle: 'JavaScript Debug Terminal'\n\t\t};\n\n\t\tterminalInstanceService.setProfiles(undefined, [powershellProfile]);\n\t\tterminalInstanceService.setProfiles('fakeremote', []);\n\t\tterminalContributionService.setProfiles([jsdebugProfile]);\n\t\tif (isWindows) {\n\t\t\tremoteAgentService.setEnvironment(OperatingSystem.Windows);\n\t\t} else if (isLinux) {\n\t\t\tremoteAgentService.setEnvironment(OperatingSystem.Linux);\n\t\t} else {\n\t\t\tremoteAgentService.setEnvironment(OperatingSystem.Macintosh);\n\t\t}\n\t\tconfigurationService.setUserConfiguration('terminal', { integrated: defaultTerminalConfig });\n\t});\n\tteardown(() => {\n\t\tinstantiationService.dispose();\n\t});\n\tsuite('Contributed Profiles', () => {\n\t\ttest('should filter out contributed profiles set to null (Linux)', async () => {\n\t\t\tremoteAgentService.setEnvironment(OperatingSystem.Linux);\n\t\t\tawait configurationService.setUserConfiguration('terminal', {\n\t\t\t\tintegrated: {\n\t\t\t\t\tprofiles: {\n\t\t\t\t\t\tlinux: {\n\t\t\t\t\t\t\t'JavaScript Debug Terminal': null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true, source: ConfigurationTarget.USER } as any);\n\t\t\tawait terminalProfileService.refreshAndAwaitAvailableProfiles();\n\t\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, []);\n\t\t});\n\t\ttest('should filter out contributed profiles set to null (Windows)', async () => {\n\t\t\tremoteAgentService.setEnvironment(OperatingSystem.Windows);\n\t\t\tawait configurationService.setUserConfiguration('terminal', {\n\t\t\t\tintegrated: {\n\t\t\t\t\tprofiles: {\n\t\t\t\t\t\twindows: {\n\t\t\t\t\t\t\t'JavaScript Debug Terminal': null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true, source: ConfigurationTarget.USER } as any);\n\t\t\tawait terminalProfileService.refreshAndAwaitAvailableProfiles();\n\t\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, []);\n\t\t});\n\t\ttest('should filter out contributed profiles set to null (macOS)', async () => {\n\t\t\tremoteAgentService.setEnvironment(OperatingSystem.Macintosh);\n\t\t\tawait configurationService.setUserConfiguration('terminal', {\n\t\t\t\tintegrated: {\n\t\t\t\t\tprofiles: {\n\t\t\t\t\t\tosx: {\n\t\t\t\t\t\t\t'JavaScript Debug Terminal': null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true, source: ConfigurationTarget.USER } as any);\n\t\t\tawait terminalProfileService.refreshAndAwaitAvailableProfiles();\n\t\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, []);\n\t\t});\n\t\ttest('should include contributed profiles', async () => {\n\t\t\tawait terminalProfileService.refreshAndAwaitAvailableProfiles();\n\t\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, [jsdebugProfile]);\n\t\t});\n\t});\n\n\ttest('should get profiles from remoteTerminalService when there is a remote authority', async () => {\n\t\tenvironmentService = { remoteAuthority: 'fakeremote' } as IWorkbenchEnvironmentService;\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, environmentService);\n\t\tterminalProfileService = instantiationService.createInstance(TestTerminalProfileService);\n\t\tawait terminalProfileService.hasRefreshedProfiles;\n\t\tdeepStrictEqual(terminalProfileService.availableProfiles, []);\n\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, [jsdebugProfile]);\n\t\tterminalInstanceService.setProfiles('fakeremote', [powershellProfile]);\n\t\tawait terminalProfileService.refreshAndAwaitAvailableProfiles();\n\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, [jsdebugProfile]);\n\t});\n\n\ttest('should fire onDidChangeAvailableProfiles only when available profiles have changed via user config', async () => {\n\t\tpowershellProfile.icon = Codicon.lightBulb;\n\t\tlet calls: ITerminalProfile[][] = [];\n\t\tterminalProfileService.onDidChangeAvailableProfiles(e => calls.push(e));\n\t\tawait configurationService.setUserConfiguration('terminal', {\n\t\t\tintegrated: {\n\t\t\t\tprofiles: {\n\t\t\t\t\twindows: powershellProfile,\n\t\t\t\t\tlinux: powershellProfile,\n\t\t\t\t\tosx: powershellProfile\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tawait terminalProfileService.hasRefreshedProfiles;\n\t\tdeepStrictEqual(calls, [\n\t\t\t[powershellProfile]\n\t\t]);\n\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, [jsdebugProfile]);\n\t\tcalls = [];\n\t\tawait terminalProfileService.refreshAndAwaitAvailableProfiles();\n\t\tdeepStrictEqual(calls, []);\n\t});\n\n\ttest('should fire onDidChangeAvailableProfiles when available or contributed profiles have changed via remote/localTerminalService', async () => {\n\t\tpowershellProfile.isDefault = false;\n\t\tterminalInstanceService.setProfiles(undefined, [powershellProfile]);\n\t\tconst calls: ITerminalProfile[][] = [];\n\t\tterminalProfileService.onDidChangeAvailableProfiles(e => calls.push(e));\n\t\tawait terminalProfileService.hasRefreshedProfiles;\n\t\tdeepStrictEqual(calls, [\n\t\t\t[powershellProfile]\n\t\t]);\n\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, [jsdebugProfile]);\n\t});\n\n\ttest('should call refreshAvailableProfiles _onDidChangeExtensions', async () => {\n\t\textensionService._onDidChangeExtensions.fire();\n\t\tconst calls: ITerminalProfile[][] = [];\n\t\tterminalProfileService.onDidChangeAvailableProfiles(e => calls.push(e));\n\t\tawait terminalProfileService.hasRefreshedProfiles;\n\t\tdeepStrictEqual(calls, [\n\t\t\t[powershellProfile]\n\t\t]);\n\t\tdeepStrictEqual(terminalProfileService.availableProfiles, [powershellProfile]);\n\t\tdeepStrictEqual(terminalProfileService.contributedProfiles, [jsdebugProfile]);\n\t});\n\tsuite('Profiles Quickpick', () => {\n\t\tlet quickInputService: MockQuickInputService;\n\t\tlet mockTerminalProfileService: MockTerminalProfileService;\n\t\tlet terminalProfileQuickpick: TestTerminalProfileQuickpick;\n\t\tsetup(async () => {\n\t\t\tquickInputService = new MockQuickInputService();\n\t\t\tmockTerminalProfileService = new MockTerminalProfileService();\n\t\t\tinstantiationService.stub(IQuickInputService, quickInputService);\n\t\t\tinstantiationService.stub(ITerminalProfileService, mockTerminalProfileService);\n\t\t\tterminalProfileQuickpick = instantiationService.createInstance(TestTerminalProfileQuickpick);\n\t\t});\n\t\ttest('setDefault', async () => {\n\t\t\tpowershellProfile.isDefault = false;\n\t\t\tmockTerminalProfileService.setProfiles([powershellProfile], [jsdebugProfile]);\n\t\t\tmockTerminalProfileService.setDefaultProfileName(jsdebugProfile.title);\n\t\t\tconst result = await terminalProfileQuickpick.showAndGetResult('setDefault');\n\t\t\tdeepStrictEqual(result, powershellProfile.profileName);\n\t\t});\n\t\ttest('setDefault to contributed', async () => {\n\t\t\tmockTerminalProfileService.setDefaultProfileName(powershellProfile.profileName);\n\t\t\tquickInputService.setPick(jsdebugPick);\n\t\t\tconst result = await terminalProfileQuickpick.showAndGetResult('setDefault');\n\t\t\tconst expected = {\n\t\t\t\tconfig: {\n\t\t\t\t\textensionIdentifier: jsdebugProfile.extensionIdentifier,\n\t\t\t\t\tid: jsdebugProfile.id,\n\t\t\t\t\toptions: { color: undefined, icon: 'debug' },\n\t\t\t\t\ttitle: jsdebugProfile.title,\n\t\t\t\t},\n\t\t\t\tkeyMods: undefined\n\t\t\t};\n\t\t\tdeepStrictEqual(result, expected);\n\t\t});\n\n\t\ttest('createInstance', async () => {\n\t\t\tmockTerminalProfileService.setDefaultProfileName(powershellProfile.profileName);\n\t\t\tconst pick = { ...powershellPick, keyMods: { alt: true, ctrlCmd: false } };\n\t\t\tquickInputService.setPick(pick);\n\t\t\tconst result = await terminalProfileQuickpick.showAndGetResult('createInstance');\n\t\t\tdeepStrictEqual(result, { config: powershellProfile, keyMods: { alt: true, ctrlCmd: false } });\n\t\t});\n\n\t\ttest('createInstance with contributed', async () => {\n\t\t\tconst pick = { ...jsdebugPick, keyMods: { alt: true, ctrlCmd: false } };\n\t\t\tquickInputService.setPick(pick);\n\t\t\tconst result = await terminalProfileQuickpick.showAndGetResult('createInstance');\n\t\t\tconst expected = {\n\t\t\t\tconfig: {\n\t\t\t\t\textensionIdentifier: jsdebugProfile.extensionIdentifier,\n\t\t\t\t\tid: jsdebugProfile.id,\n\t\t\t\t\toptions: { color: undefined, icon: 'debug' },\n\t\t\t\t\ttitle: jsdebugProfile.title,\n\t\t\t\t},\n\t\t\t\tkeyMods: { alt: true, ctrlCmd: false }\n\t\t\t};\n\t\t\tdeepStrictEqual(result, expected);\n\t\t});\n\t});\n});\n"]}