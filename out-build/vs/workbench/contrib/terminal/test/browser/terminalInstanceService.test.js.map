{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/test/browser/terminalInstanceService.test.ts"],"names":[],"mappings":"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","file":"terminalInstanceService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual } from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { ContextKeyService } from 'vs/platform/contextkey/browser/contextKeyService';\nimport { ITerminalInstanceService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { TerminalInstanceService } from 'vs/workbench/contrib/terminal/browser/terminalInstanceService';\nimport { ITerminalProfile } from 'vs/platform/terminal/common/terminal';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { TestEnvironmentService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nsuite('Workbench - TerminalInstanceService', () => {\n\tlet instantiationService: TestInstantiationService;\n\tlet terminalInstanceService: ITerminalInstanceService;\n\n\tsetup(async () => {\n\t\tinstantiationService = new TestInstantiationService();\n\t\t// TODO: Should be able to create these services without this config set\n\t\tinstantiationService.stub(IConfigurationService, new TestConfigurationService({\n\t\t\tterminal: {\n\t\t\t\tintegrated: {\n\t\t\t\t\tfontWeight: 'normal'\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tinstantiationService.stub(IContextKeyService, instantiationService.createInstance(ContextKeyService));\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, TestEnvironmentService);\n\n\t\tterminalInstanceService = instantiationService.createInstance(TerminalInstanceService);\n\t});\n\n\tteardown(() => {\n\t\tinstantiationService.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsuite('convertProfileToShellLaunchConfig', () => {\n\t\ttest('should return an empty shell launch config when undefined is provided', () => {\n\t\t\tdeepStrictEqual(terminalInstanceService.convertProfileToShellLaunchConfig(), {});\n\t\t\tdeepStrictEqual(terminalInstanceService.convertProfileToShellLaunchConfig(undefined), {});\n\t\t});\n\t\ttest('should return the same shell launch config when provided', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({}),\n\t\t\t\t{}\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({ executable: '/foo' }),\n\t\t\t\t{ executable: '/foo' }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({ executable: '/foo', cwd: '/bar', args: ['a', 'b'] }),\n\t\t\t\t{ executable: '/foo', cwd: '/bar', args: ['a', 'b'] }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({ executable: '/foo' }, '/bar'),\n\t\t\t\t{ executable: '/foo', cwd: '/bar' }\n\t\t\t);\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({ executable: '/foo', cwd: '/bar' }, '/baz'),\n\t\t\t\t{ executable: '/foo', cwd: '/baz' }\n\t\t\t);\n\t\t});\n\t\ttest('should convert a provided profile to a shell launch config', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({\n\t\t\t\t\tprofileName: 'abc',\n\t\t\t\t\tpath: '/foo',\n\t\t\t\t\tisDefault: true\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\targs: undefined,\n\t\t\t\t\tcolor: undefined,\n\t\t\t\t\tcwd: undefined,\n\t\t\t\t\tenv: undefined,\n\t\t\t\t\texecutable: '/foo',\n\t\t\t\t\ticon: undefined,\n\t\t\t\t\tname: undefined\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst icon = URI.file('/icon');\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({\n\t\t\t\t\tprofileName: 'abc',\n\t\t\t\t\tpath: '/foo',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\targs: ['a', 'b'],\n\t\t\t\t\tcolor: 'color',\n\t\t\t\t\tenv: { test: 'TEST' },\n\t\t\t\t\ticon\n\t\t\t\t} as ITerminalProfile, '/bar'),\n\t\t\t\t{\n\t\t\t\t\targs: ['a', 'b'],\n\t\t\t\t\tcolor: 'color',\n\t\t\t\t\tcwd: '/bar',\n\t\t\t\t\tenv: { test: 'TEST' },\n\t\t\t\t\texecutable: '/foo',\n\t\t\t\t\ticon,\n\t\t\t\t\tname: undefined\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t\ttest('should respect overrideName in profile', () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tterminalInstanceService.convertProfileToShellLaunchConfig({\n\t\t\t\t\tprofileName: 'abc',\n\t\t\t\t\tpath: '/foo',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\toverrideName: true\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\targs: undefined,\n\t\t\t\t\tcolor: undefined,\n\t\t\t\t\tcwd: undefined,\n\t\t\t\t\tenv: undefined,\n\t\t\t\t\texecutable: '/foo',\n\t\t\t\t\ticon: undefined,\n\t\t\t\t\tname: 'abc'\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t});\n});\n"]}