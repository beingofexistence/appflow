{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/test/common/terminalEnvironment.test.ts"],"names":[],"mappings":"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","file":"terminalEnvironment.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual, strictEqual } from 'assert';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { isWindows, OperatingSystem } from 'vs/base/common/platform';\nimport { URI as Uri } from 'vs/base/common/uri';\nimport { addTerminalEnvironmentKeys, createTerminalEnvironment, getCwd, getLangEnvVariable, mergeEnvironments, preparePathForShell, shouldSetLangEnvVariable } from 'vs/workbench/contrib/terminal/common/terminalEnvironment';\nimport { PosixShellType, WindowsShellType } from 'vs/platform/terminal/common/terminal';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nsuite('Workbench - TerminalEnvironment', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsuite('addTerminalEnvironmentKeys', () => {\n\t\ttest('should set expected variables', () => {\n\t\t\tconst env: { [key: string]: any } = {};\n\t\t\taddTerminalEnvironmentKeys(env, '1.2.3', 'en', 'on');\n\t\t\tstrictEqual(env['TERM_PROGRAM'], 'vscode');\n\t\t\tstrictEqual(env['TERM_PROGRAM_VERSION'], '1.2.3');\n\t\t\tstrictEqual(env['COLORTERM'], 'truecolor');\n\t\t\tstrictEqual(env['LANG'], 'en_US.UTF-8');\n\t\t});\n\t\ttest('should use language variant for LANG that is provided in locale', () => {\n\t\t\tconst env: { [key: string]: any } = {};\n\t\t\taddTerminalEnvironmentKeys(env, '1.2.3', 'en-au', 'on');\n\t\t\tstrictEqual(env['LANG'], 'en_AU.UTF-8', 'LANG is equal to the requested locale with UTF-8');\n\t\t});\n\t\ttest('should fallback to en_US when no locale is provided', () => {\n\t\t\tconst env2: { [key: string]: any } = { FOO: 'bar' };\n\t\t\taddTerminalEnvironmentKeys(env2, '1.2.3', undefined, 'on');\n\t\t\tstrictEqual(env2['LANG'], 'en_US.UTF-8', 'LANG is equal to en_US.UTF-8 as fallback.'); // More info on issue #14586\n\t\t});\n\t\ttest('should fallback to en_US when an invalid locale is provided', () => {\n\t\t\tconst env3 = { LANG: 'replace' };\n\t\t\taddTerminalEnvironmentKeys(env3, '1.2.3', undefined, 'on');\n\t\t\tstrictEqual(env3['LANG'], 'en_US.UTF-8', 'LANG is set to the fallback LANG');\n\t\t});\n\t\ttest('should override existing LANG', () => {\n\t\t\tconst env4 = { LANG: 'en_AU.UTF-8' };\n\t\t\taddTerminalEnvironmentKeys(env4, '1.2.3', undefined, 'on');\n\t\t\tstrictEqual(env4['LANG'], 'en_US.UTF-8', 'LANG is equal to the parent environment\\'s LANG');\n\t\t});\n\t});\n\n\tsuite('shouldSetLangEnvVariable', () => {\n\t\ttest('auto', () => {\n\t\t\tstrictEqual(shouldSetLangEnvVariable({}, 'auto'), true);\n\t\t\tstrictEqual(shouldSetLangEnvVariable({ LANG: 'en-US' }, 'auto'), true);\n\t\t\tstrictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.utf' }, 'auto'), true);\n\t\t\tstrictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.utf8' }, 'auto'), false);\n\t\t\tstrictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.UTF-8' }, 'auto'), false);\n\t\t});\n\t\ttest('off', () => {\n\t\t\tstrictEqual(shouldSetLangEnvVariable({}, 'off'), false);\n\t\t\tstrictEqual(shouldSetLangEnvVariable({ LANG: 'en-US' }, 'off'), false);\n\t\t\tstrictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.utf' }, 'off'), false);\n\t\t\tstrictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.utf8' }, 'off'), false);\n\t\t\tstrictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.UTF-8' }, 'off'), false);\n\t\t});\n\t\ttest('on', () => {\n\t\t\tstrictEqual(shouldSetLangEnvVariable({}, 'on'), true);\n\t\t\tstrictEqual(shouldSetLangEnvVariable({ LANG: 'en-US' }, 'on'), true);\n\t\t\tstrictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.utf' }, 'on'), true);\n\t\t\tstrictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.utf8' }, 'on'), true);\n\t\t\tstrictEqual(shouldSetLangEnvVariable({ LANG: 'en-US.UTF-8' }, 'on'), true);\n\t\t});\n\t});\n\n\tsuite('getLangEnvVariable', () => {\n\t\ttest('should fallback to en_US when no locale is provided', () => {\n\t\t\tstrictEqual(getLangEnvVariable(undefined), 'en_US.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable(''), 'en_US.UTF-8');\n\t\t});\n\t\ttest('should fallback to default language variants when variant isn\\'t provided', () => {\n\t\t\tstrictEqual(getLangEnvVariable('af'), 'af_ZA.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('am'), 'am_ET.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('be'), 'be_BY.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('bg'), 'bg_BG.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('ca'), 'ca_ES.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('cs'), 'cs_CZ.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('da'), 'da_DK.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('de'), 'de_DE.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('el'), 'el_GR.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('en'), 'en_US.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('es'), 'es_ES.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('et'), 'et_EE.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('eu'), 'eu_ES.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('fi'), 'fi_FI.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('fr'), 'fr_FR.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('he'), 'he_IL.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('hr'), 'hr_HR.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('hu'), 'hu_HU.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('hy'), 'hy_AM.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('is'), 'is_IS.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('it'), 'it_IT.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('ja'), 'ja_JP.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('kk'), 'kk_KZ.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('ko'), 'ko_KR.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('lt'), 'lt_LT.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('nl'), 'nl_NL.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('no'), 'no_NO.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('pl'), 'pl_PL.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('pt'), 'pt_BR.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('ro'), 'ro_RO.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('ru'), 'ru_RU.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('sk'), 'sk_SK.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('sl'), 'sl_SI.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('sr'), 'sr_YU.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('sv'), 'sv_SE.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('tr'), 'tr_TR.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('uk'), 'uk_UA.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('zh'), 'zh_CN.UTF-8');\n\t\t});\n\t\ttest('should set language variant based on full locale', () => {\n\t\t\tstrictEqual(getLangEnvVariable('en-AU'), 'en_AU.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('en-au'), 'en_AU.UTF-8');\n\t\t\tstrictEqual(getLangEnvVariable('fa-ke'), 'fa_KE.UTF-8');\n\t\t});\n\t});\n\n\tsuite('mergeEnvironments', () => {\n\t\ttest('should add keys', () => {\n\t\t\tconst parent = {\n\t\t\t\ta: 'b'\n\t\t\t};\n\t\t\tconst other = {\n\t\t\t\tc: 'd'\n\t\t\t};\n\t\t\tmergeEnvironments(parent, other);\n\t\t\tdeepStrictEqual(parent, {\n\t\t\t\ta: 'b',\n\t\t\t\tc: 'd'\n\t\t\t});\n\t\t});\n\n\t\t(!isWindows ? test.skip : test)('should add keys ignoring case on Windows', () => {\n\t\t\tconst parent = {\n\t\t\t\ta: 'b'\n\t\t\t};\n\t\t\tconst other = {\n\t\t\t\tA: 'c'\n\t\t\t};\n\t\t\tmergeEnvironments(parent, other);\n\t\t\tdeepStrictEqual(parent, {\n\t\t\t\ta: 'c'\n\t\t\t});\n\t\t});\n\n\t\ttest('null values should delete keys from the parent env', () => {\n\t\t\tconst parent = {\n\t\t\t\ta: 'b',\n\t\t\t\tc: 'd'\n\t\t\t};\n\t\t\tconst other: IStringDictionary<string | null> = {\n\t\t\t\ta: null\n\t\t\t};\n\t\t\tmergeEnvironments(parent, other);\n\t\t\tdeepStrictEqual(parent, {\n\t\t\t\tc: 'd'\n\t\t\t});\n\t\t});\n\n\t\t(!isWindows ? test.skip : test)('null values should delete keys from the parent env ignoring case on Windows', () => {\n\t\t\tconst parent = {\n\t\t\t\ta: 'b',\n\t\t\t\tc: 'd'\n\t\t\t};\n\t\t\tconst other: IStringDictionary<string | null> = {\n\t\t\t\tA: null\n\t\t\t};\n\t\t\tmergeEnvironments(parent, other);\n\t\t\tdeepStrictEqual(parent, {\n\t\t\t\tc: 'd'\n\t\t\t});\n\t\t});\n\t});\n\n\tsuite('getCwd', () => {\n\t\t// This helper checks the paths in a cross-platform friendly manner\n\t\tfunction assertPathsMatch(a: string, b: string): void {\n\t\t\tstrictEqual(Uri.file(a).fsPath, Uri.file(b).fsPath);\n\t\t}\n\n\t\ttest('should default to userHome for an empty workspace', async () => {\n\t\t\tassertPathsMatch(await getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, undefined, undefined), '/userHome/');\n\t\t});\n\n\t\ttest('should use to the workspace if it exists', async () => {\n\t\t\tassertPathsMatch(await getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, Uri.file('/foo'), undefined), '/foo');\n\t\t});\n\n\t\ttest('should use an absolute custom cwd as is', async () => {\n\t\t\tassertPathsMatch(await getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, undefined, '/foo'), '/foo');\n\t\t});\n\n\t\ttest('should normalize a relative custom cwd against the workspace path', async () => {\n\t\t\tassertPathsMatch(await getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, Uri.file('/bar'), 'foo'), '/bar/foo');\n\t\t\tassertPathsMatch(await getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, Uri.file('/bar'), './foo'), '/bar/foo');\n\t\t\tassertPathsMatch(await getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, Uri.file('/bar'), '../foo'), '/foo');\n\t\t});\n\n\t\ttest('should fall back for relative a custom cwd that doesn\\'t have a workspace', async () => {\n\t\t\tassertPathsMatch(await getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, undefined, 'foo'), '/userHome/');\n\t\t\tassertPathsMatch(await getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, undefined, './foo'), '/userHome/');\n\t\t\tassertPathsMatch(await getCwd({ executable: undefined, args: [] }, '/userHome/', undefined, undefined, '../foo'), '/userHome/');\n\t\t});\n\n\t\ttest('should ignore custom cwd when told to ignore', async () => {\n\t\t\tassertPathsMatch(await getCwd({ executable: undefined, args: [], ignoreConfigurationCwd: true }, '/userHome/', undefined, Uri.file('/bar'), '/foo'), '/bar');\n\t\t});\n\t});\n\n\tsuite('preparePathForShell', () => {\n\t\tconst wslPathBackend = {\n\t\t\tgetWslPath: async (original: string, direction: 'unix-to-win' | 'win-to-unix') => {\n\t\t\t\tif (direction === 'unix-to-win') {\n\t\t\t\t\tconst match = original.match(/^\\/mnt\\/(?<drive>[a-zA-Z])\\/(?<path>.+)$/);\n\t\t\t\t\tconst groups = match?.groups;\n\t\t\t\t\tif (!groups) {\n\t\t\t\t\t\treturn original;\n\t\t\t\t\t}\n\t\t\t\t\treturn `${groups.drive}:\\\\${groups.path.replace(/\\//g, '\\\\')}`;\n\t\t\t\t}\n\t\t\t\tconst match = original.match(/(?<drive>[a-zA-Z]):\\\\(?<path>.+)/);\n\t\t\t\tconst groups = match?.groups;\n\t\t\t\tif (!groups) {\n\t\t\t\t\treturn original;\n\t\t\t\t}\n\t\t\t\treturn `/mnt/${groups.drive.toLowerCase()}/${groups.path.replace(/\\\\/g, '/')}`;\n\t\t\t}\n\t\t};\n\t\tsuite('Windows frontend, Windows backend', () => {\n\t\t\ttest('Command Prompt', async () => {\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar', 'cmd', 'cmd', WindowsShellType.CommandPrompt, wslPathBackend, OperatingSystem.Windows, true), `c:\\\\foo\\\\bar`);\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar\\'baz', 'cmd', 'cmd', WindowsShellType.CommandPrompt, wslPathBackend, OperatingSystem.Windows, true), `c:\\\\foo\\\\bar'baz`);\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar$(echo evil)baz', 'cmd', 'cmd', WindowsShellType.CommandPrompt, wslPathBackend, OperatingSystem.Windows, true), `\"c:\\\\foo\\\\bar$(echo evil)baz\"`);\n\t\t\t});\n\t\t\ttest('PowerShell', async () => {\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar', 'pwsh', 'pwsh', WindowsShellType.PowerShell, wslPathBackend, OperatingSystem.Windows, true), `c:\\\\foo\\\\bar`);\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar\\'baz', 'pwsh', 'pwsh', WindowsShellType.PowerShell, wslPathBackend, OperatingSystem.Windows, true), `& 'c:\\\\foo\\\\bar''baz'`);\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar$(echo evil)baz', 'pwsh', 'pwsh', WindowsShellType.PowerShell, wslPathBackend, OperatingSystem.Windows, true), `& 'c:\\\\foo\\\\bar$(echo evil)baz'`);\n\t\t\t});\n\t\t\ttest('Git Bash', async () => {\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar', 'bash', 'bash', WindowsShellType.GitBash, wslPathBackend, OperatingSystem.Windows, true), `'c:/foo/bar'`);\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar$(echo evil)baz', 'bash', 'bash', WindowsShellType.GitBash, wslPathBackend, OperatingSystem.Windows, true), `'c:/foo/bar(echo evil)baz'`);\n\t\t\t});\n\t\t\ttest('WSL', async () => {\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar', 'bash', 'bash', WindowsShellType.Wsl, wslPathBackend, OperatingSystem.Windows, true), '/mnt/c/foo/bar');\n\t\t\t});\n\t\t});\n\t\tsuite('Windows frontend, Linux backend', () => {\n\t\t\ttest('Bash', async () => {\n\t\t\t\tstrictEqual(await preparePathForShell('/foo/bar', 'bash', 'bash', PosixShellType.Bash, wslPathBackend, OperatingSystem.Linux, true), `'/foo/bar'`);\n\t\t\t\tstrictEqual(await preparePathForShell('/foo/bar\\'baz', 'bash', 'bash', PosixShellType.Bash, wslPathBackend, OperatingSystem.Linux, true), `'/foo/barbaz'`);\n\t\t\t\tstrictEqual(await preparePathForShell('/foo/bar$(echo evil)baz', 'bash', 'bash', PosixShellType.Bash, wslPathBackend, OperatingSystem.Linux, true), `'/foo/bar(echo evil)baz'`);\n\t\t\t});\n\t\t});\n\t\tsuite('Linux frontend, Windows backend', () => {\n\t\t\ttest('Command Prompt', async () => {\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar', 'cmd', 'cmd', WindowsShellType.CommandPrompt, wslPathBackend, OperatingSystem.Windows, false), `c:\\\\foo\\\\bar`);\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar\\'baz', 'cmd', 'cmd', WindowsShellType.CommandPrompt, wslPathBackend, OperatingSystem.Windows, false), `c:\\\\foo\\\\bar'baz`);\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar$(echo evil)baz', 'cmd', 'cmd', WindowsShellType.CommandPrompt, wslPathBackend, OperatingSystem.Windows, false), `\"c:\\\\foo\\\\bar$(echo evil)baz\"`);\n\t\t\t});\n\t\t\ttest('PowerShell', async () => {\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar', 'pwsh', 'pwsh', WindowsShellType.PowerShell, wslPathBackend, OperatingSystem.Windows, false), `c:\\\\foo\\\\bar`);\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar\\'baz', 'pwsh', 'pwsh', WindowsShellType.PowerShell, wslPathBackend, OperatingSystem.Windows, false), `& 'c:\\\\foo\\\\bar''baz'`);\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar$(echo evil)baz', 'pwsh', 'pwsh', WindowsShellType.PowerShell, wslPathBackend, OperatingSystem.Windows, false), `& 'c:\\\\foo\\\\bar$(echo evil)baz'`);\n\t\t\t});\n\t\t\ttest('Git Bash', async () => {\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar', 'bash', 'bash', WindowsShellType.GitBash, wslPathBackend, OperatingSystem.Windows, false), `'c:/foo/bar'`);\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar$(echo evil)baz', 'bash', 'bash', WindowsShellType.GitBash, wslPathBackend, OperatingSystem.Windows, false), `'c:/foo/bar(echo evil)baz'`);\n\t\t\t});\n\t\t\ttest('WSL', async () => {\n\t\t\t\tstrictEqual(await preparePathForShell('c:\\\\foo\\\\bar', 'bash', 'bash', WindowsShellType.Wsl, wslPathBackend, OperatingSystem.Windows, false), '/mnt/c/foo/bar');\n\t\t\t});\n\t\t});\n\t\tsuite('Linux frontend, Linux backend', () => {\n\t\t\ttest('Bash', async () => {\n\t\t\t\tstrictEqual(await preparePathForShell('/foo/bar', 'bash', 'bash', PosixShellType.Bash, wslPathBackend, OperatingSystem.Linux, false), `'/foo/bar'`);\n\t\t\t\tstrictEqual(await preparePathForShell('/foo/bar\\'baz', 'bash', 'bash', PosixShellType.Bash, wslPathBackend, OperatingSystem.Linux, false), `'/foo/barbaz'`);\n\t\t\t\tstrictEqual(await preparePathForShell('/foo/bar$(echo evil)baz', 'bash', 'bash', PosixShellType.Bash, wslPathBackend, OperatingSystem.Linux, false), `'/foo/bar(echo evil)baz'`);\n\t\t\t});\n\t\t});\n\t});\n\tsuite('createTerminalEnvironment', () => {\n\t\tconst commonVariables = {\n\t\t\tCOLORTERM: 'truecolor',\n\t\t\tTERM_PROGRAM: 'vscode'\n\t\t};\n\t\ttest('should retain variables equal to the empty string', async () => {\n\t\t\tdeepStrictEqual(\n\t\t\t\tawait createTerminalEnvironment({}, undefined, undefined, undefined, 'off', { foo: 'bar', empty: '' }),\n\t\t\t\t{ foo: 'bar', empty: '', ...commonVariables }\n\t\t\t);\n\t\t});\n\t});\n});\n"]}