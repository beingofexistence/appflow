{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/test/common/history.test.ts"],"names":[],"mappings":"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","file":"history.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual, fail, strictEqual, ok } from 'assert';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\nimport { isWindows, OperatingSystem } from 'vs/base/common/platform';\nimport { env } from 'vs/base/common/process';\nimport { URI } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { fetchBashHistory, fetchFishHistory, fetchPwshHistory, fetchZshHistory, ITerminalPersistedHistory, sanitizeFishHistoryCmd, TerminalPersistedHistory } from 'vs/workbench/contrib/terminal/common/history';\nimport { IRemoteAgentConnection, IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { TestStorageService } from 'vs/workbench/test/common/workbenchTestServices';\n\nfunction getConfig(limit: number) {\n\treturn {\n\t\tterminal: {\n\t\t\tintegrated: {\n\t\t\t\tshellIntegration: {\n\t\t\t\t\thistory: limit\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nconst expectedCommands = [\n\t'single line command',\n\t'git commit -m \"A wrapped line in pwsh history\\n\\nSome commit description\\n\\nFixes #xyz\"',\n\t'git status',\n\t'two \"\\nline\"'\n];\n\nsuite('Terminal history', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsuite('TerminalPersistedHistory', () => {\n\t\tlet history: ITerminalPersistedHistory<number>;\n\t\tlet instantiationService: TestInstantiationService;\n\t\tlet storageService: TestStorageService;\n\t\tlet configurationService: TestConfigurationService;\n\n\t\tsetup(() => {\n\t\t\tconfigurationService = new TestConfigurationService(getConfig(5));\n\t\t\tstorageService = store.add(new TestStorageService());\n\t\t\tinstantiationService = store.add(new TestInstantiationService());\n\t\t\tinstantiationService.set(IConfigurationService, configurationService);\n\t\t\tinstantiationService.set(IStorageService, storageService);\n\n\t\t\thistory = store.add(instantiationService.createInstance(TerminalPersistedHistory<number>, 'test'));\n\t\t});\n\n\t\tteardown(() => {\n\t\t\tinstantiationService.dispose();\n\t\t});\n\n\t\ttest('should support adding items to the cache and respect LRU', () => {\n\t\t\thistory.add('foo', 1);\n\t\t\tdeepStrictEqual(Array.from(history.entries), [\n\t\t\t\t['foo', 1]\n\t\t\t]);\n\t\t\thistory.add('bar', 2);\n\t\t\tdeepStrictEqual(Array.from(history.entries), [\n\t\t\t\t['foo', 1],\n\t\t\t\t['bar', 2]\n\t\t\t]);\n\t\t\thistory.add('foo', 1);\n\t\t\tdeepStrictEqual(Array.from(history.entries), [\n\t\t\t\t['bar', 2],\n\t\t\t\t['foo', 1]\n\t\t\t]);\n\t\t});\n\n\t\ttest('should support removing specific items', () => {\n\t\t\thistory.add('1', 1);\n\t\t\thistory.add('2', 2);\n\t\t\thistory.add('3', 3);\n\t\t\thistory.add('4', 4);\n\t\t\thistory.add('5', 5);\n\t\t\tstrictEqual(Array.from(history.entries).length, 5);\n\t\t\thistory.add('6', 6);\n\t\t\tstrictEqual(Array.from(history.entries).length, 5);\n\t\t});\n\n\t\ttest('should limit the number of entries based on config', () => {\n\t\t\thistory.add('1', 1);\n\t\t\thistory.add('2', 2);\n\t\t\thistory.add('3', 3);\n\t\t\thistory.add('4', 4);\n\t\t\thistory.add('5', 5);\n\t\t\tstrictEqual(Array.from(history.entries).length, 5);\n\t\t\thistory.add('6', 6);\n\t\t\tstrictEqual(Array.from(history.entries).length, 5);\n\t\t\tconfigurationService.setUserConfiguration('terminal', getConfig(2).terminal);\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\t\tstrictEqual(Array.from(history.entries).length, 2);\n\t\t\thistory.add('7', 7);\n\t\t\tstrictEqual(Array.from(history.entries).length, 2);\n\t\t\tconfigurationService.setUserConfiguration('terminal', getConfig(3).terminal);\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\t\tstrictEqual(Array.from(history.entries).length, 2);\n\t\t\thistory.add('8', 8);\n\t\t\tstrictEqual(Array.from(history.entries).length, 3);\n\t\t\thistory.add('9', 9);\n\t\t\tstrictEqual(Array.from(history.entries).length, 3);\n\t\t});\n\n\t\ttest('should reload from storage service after recreation', () => {\n\t\t\thistory.add('1', 1);\n\t\t\thistory.add('2', 2);\n\t\t\thistory.add('3', 3);\n\t\t\tstrictEqual(Array.from(history.entries).length, 3);\n\t\t\tconst history2 = store.add(instantiationService.createInstance(TerminalPersistedHistory, 'test'));\n\t\t\tstrictEqual(Array.from(history2.entries).length, 3);\n\t\t});\n\t});\n\tsuite('fetchBashHistory', () => {\n\t\tlet fileScheme: string;\n\t\tlet filePath: string;\n\t\tconst fileContent: string = [\n\t\t\t'single line command',\n\t\t\t'git commit -m \"A wrapped line in pwsh history',\n\t\t\t'',\n\t\t\t'Some commit description',\n\t\t\t'',\n\t\t\t'Fixes #xyz\"',\n\t\t\t'git status',\n\t\t\t'two \"',\n\t\t\t'line\"'\n\t\t].join('\\n');\n\n\t\tlet instantiationService: TestInstantiationService;\n\t\tlet remoteConnection: Pick<IRemoteAgentConnection, 'remoteAuthority'> | null = null;\n\t\tlet remoteEnvironment: Pick<IRemoteAgentEnvironment, 'os'> | null = null;\n\n\t\tsetup(() => {\n\t\t\tinstantiationService = new TestInstantiationService();\n\t\t\tinstantiationService.stub(IFileService, {\n\t\t\t\tasync readFile(resource: URI) {\n\t\t\t\t\tconst expected = URI.from({ scheme: fileScheme, path: filePath });\n\t\t\t\t\tstrictEqual(resource.scheme, expected.scheme);\n\t\t\t\t\tstrictEqual(resource.path, expected.path);\n\t\t\t\t\treturn { value: VSBuffer.fromString(fileContent) };\n\t\t\t\t}\n\t\t\t} as Pick<IFileService, 'readFile'>);\n\t\t\tinstantiationService.stub(IRemoteAgentService, {\n\t\t\t\tasync getEnvironment() { return remoteEnvironment; },\n\t\t\t\tgetConnection() { return remoteConnection; }\n\t\t\t} as Pick<IRemoteAgentService, 'getConnection' | 'getEnvironment'>);\n\t\t});\n\n\t\tteardown(() => {\n\t\t\tinstantiationService.dispose();\n\t\t});\n\n\t\tif (!isWindows) {\n\t\t\tsuite('local', () => {\n\t\t\t\tlet originalEnvValues: { HOME: string | undefined };\n\t\t\t\tsetup(() => {\n\t\t\t\t\toriginalEnvValues = { HOME: env['HOME'] };\n\t\t\t\t\tenv['HOME'] = '/home/user';\n\t\t\t\t\tremoteConnection = { remoteAuthority: 'some-remote' };\n\t\t\t\t\tfileScheme = Schemas.vscodeRemote;\n\t\t\t\t\tfilePath = '/home/user/.bash_history';\n\t\t\t\t});\n\t\t\t\tteardown(() => {\n\t\t\t\t\tif (originalEnvValues['HOME'] === undefined) {\n\t\t\t\t\t\tdelete env['HOME'];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tenv['HOME'] = originalEnvValues['HOME'];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\ttest('current OS', async () => {\n\t\t\t\t\tfilePath = '/home/user/.bash_history';\n\t\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchBashHistory))!), expectedCommands);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tsuite('remote', () => {\n\t\t\tlet originalEnvValues: { HOME: string | undefined };\n\t\t\tsetup(() => {\n\t\t\t\toriginalEnvValues = { HOME: env['HOME'] };\n\t\t\t\tenv['HOME'] = '/home/user';\n\t\t\t\tremoteConnection = { remoteAuthority: 'some-remote' };\n\t\t\t\tfileScheme = Schemas.vscodeRemote;\n\t\t\t\tfilePath = '/home/user/.bash_history';\n\t\t\t});\n\t\t\tteardown(() => {\n\t\t\t\tif (originalEnvValues['HOME'] === undefined) {\n\t\t\t\t\tdelete env['HOME'];\n\t\t\t\t} else {\n\t\t\t\t\tenv['HOME'] = originalEnvValues['HOME'];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttest('Windows', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Windows };\n\t\t\t\tstrictEqual(await instantiationService.invokeFunction(fetchBashHistory), undefined);\n\t\t\t});\n\t\t\ttest('macOS', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Macintosh };\n\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchBashHistory))!), expectedCommands);\n\t\t\t});\n\t\t\ttest('Linux', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Linux };\n\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchBashHistory))!), expectedCommands);\n\t\t\t});\n\t\t});\n\t});\n\tsuite('fetchZshHistory', () => {\n\t\tlet fileScheme: string;\n\t\tlet filePath: string;\n\t\tconst fileContent: string = [\n\t\t\t': 1655252330:0;single line command',\n\t\t\t': 1655252330:0;git commit -m \"A wrapped line in pwsh history\\\\',\n\t\t\t'\\\\',\n\t\t\t'Some commit description\\\\',\n\t\t\t'\\\\',\n\t\t\t'Fixes #xyz\"',\n\t\t\t': 1655252330:0;git status',\n\t\t\t': 1655252330:0;two \"\\\\',\n\t\t\t'line\"'\n\t\t].join('\\n');\n\n\t\tlet instantiationService: TestInstantiationService;\n\t\tlet remoteConnection: Pick<IRemoteAgentConnection, 'remoteAuthority'> | null = null;\n\t\tlet remoteEnvironment: Pick<IRemoteAgentEnvironment, 'os'> | null = null;\n\n\t\tsetup(() => {\n\t\t\tinstantiationService = new TestInstantiationService();\n\t\t\tinstantiationService.stub(IFileService, {\n\t\t\t\tasync readFile(resource: URI) {\n\t\t\t\t\tconst expected = URI.from({ scheme: fileScheme, path: filePath });\n\t\t\t\t\tstrictEqual(resource.scheme, expected.scheme);\n\t\t\t\t\tstrictEqual(resource.path, expected.path);\n\t\t\t\t\treturn { value: VSBuffer.fromString(fileContent) };\n\t\t\t\t}\n\t\t\t} as Pick<IFileService, 'readFile'>);\n\t\t\tinstantiationService.stub(IRemoteAgentService, {\n\t\t\t\tasync getEnvironment() { return remoteEnvironment; },\n\t\t\t\tgetConnection() { return remoteConnection; }\n\t\t\t} as Pick<IRemoteAgentService, 'getConnection' | 'getEnvironment'>);\n\t\t});\n\n\t\tteardown(() => {\n\t\t\tinstantiationService.dispose();\n\t\t});\n\n\t\tif (!isWindows) {\n\t\t\tsuite('local', () => {\n\t\t\t\tlet originalEnvValues: { HOME: string | undefined };\n\t\t\t\tsetup(() => {\n\t\t\t\t\toriginalEnvValues = { HOME: env['HOME'] };\n\t\t\t\t\tenv['HOME'] = '/home/user';\n\t\t\t\t\tremoteConnection = { remoteAuthority: 'some-remote' };\n\t\t\t\t\tfileScheme = Schemas.vscodeRemote;\n\t\t\t\t\tfilePath = '/home/user/.bash_history';\n\t\t\t\t});\n\t\t\t\tteardown(() => {\n\t\t\t\t\tif (originalEnvValues['HOME'] === undefined) {\n\t\t\t\t\t\tdelete env['HOME'];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tenv['HOME'] = originalEnvValues['HOME'];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\ttest('current OS', async () => {\n\t\t\t\t\tfilePath = '/home/user/.zsh_history';\n\t\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchZshHistory))!), expectedCommands);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tsuite('remote', () => {\n\t\t\tlet originalEnvValues: { HOME: string | undefined };\n\t\t\tsetup(() => {\n\t\t\t\toriginalEnvValues = { HOME: env['HOME'] };\n\t\t\t\tenv['HOME'] = '/home/user';\n\t\t\t\tremoteConnection = { remoteAuthority: 'some-remote' };\n\t\t\t\tfileScheme = Schemas.vscodeRemote;\n\t\t\t\tfilePath = '/home/user/.zsh_history';\n\t\t\t});\n\t\t\tteardown(() => {\n\t\t\t\tif (originalEnvValues['HOME'] === undefined) {\n\t\t\t\t\tdelete env['HOME'];\n\t\t\t\t} else {\n\t\t\t\t\tenv['HOME'] = originalEnvValues['HOME'];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttest('Windows', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Windows };\n\t\t\t\tstrictEqual(await instantiationService.invokeFunction(fetchZshHistory), undefined);\n\t\t\t});\n\t\t\ttest('macOS', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Macintosh };\n\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchZshHistory))!), expectedCommands);\n\t\t\t});\n\t\t\ttest('Linux', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Linux };\n\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchZshHistory))!), expectedCommands);\n\t\t\t});\n\t\t});\n\t});\n\tsuite('fetchPwshHistory', () => {\n\t\tlet fileScheme: string;\n\t\tlet filePath: string;\n\t\tconst fileContent: string = [\n\t\t\t'single line command',\n\t\t\t'git commit -m \"A wrapped line in pwsh history`',\n\t\t\t'`',\n\t\t\t'Some commit description`',\n\t\t\t'`',\n\t\t\t'Fixes #xyz\"',\n\t\t\t'git status',\n\t\t\t'two \"`',\n\t\t\t'line\"'\n\t\t].join('\\n');\n\n\t\tlet instantiationService: TestInstantiationService;\n\t\tlet remoteConnection: Pick<IRemoteAgentConnection, 'remoteAuthority'> | null = null;\n\t\tlet remoteEnvironment: Pick<IRemoteAgentEnvironment, 'os'> | null = null;\n\n\t\tsetup(() => {\n\t\t\tinstantiationService = new TestInstantiationService();\n\t\t\tinstantiationService.stub(IFileService, {\n\t\t\t\tasync readFile(resource: URI) {\n\t\t\t\t\tconst expected = URI.from({ scheme: fileScheme, path: filePath });\n\t\t\t\t\tif (resource.scheme !== expected.scheme || resource.fsPath !== expected.fsPath) {\n\t\t\t\t\t\tfail(`Unexpected file scheme/path ${resource.scheme} ${resource.fsPath}`);\n\t\t\t\t\t}\n\t\t\t\t\treturn { value: VSBuffer.fromString(fileContent) };\n\t\t\t\t}\n\t\t\t} as Pick<IFileService, 'readFile'>);\n\t\t\tinstantiationService.stub(IRemoteAgentService, {\n\t\t\t\tasync getEnvironment() { return remoteEnvironment; },\n\t\t\t\tgetConnection() { return remoteConnection; }\n\t\t\t} as Pick<IRemoteAgentService, 'getConnection' | 'getEnvironment'>);\n\t\t});\n\n\t\tteardown(() => {\n\t\t\tinstantiationService.dispose();\n\t\t});\n\n\t\tsuite('local', () => {\n\t\t\tlet originalEnvValues: { HOME: string | undefined; APPDATA: string | undefined };\n\t\t\tsetup(() => {\n\t\t\t\toriginalEnvValues = { HOME: env['HOME'], APPDATA: env['APPDATA'] };\n\t\t\t\tenv['HOME'] = '/home/user';\n\t\t\t\tenv['APPDATA'] = 'C:\\\\AppData';\n\t\t\t\tremoteConnection = { remoteAuthority: 'some-remote' };\n\t\t\t\tfileScheme = Schemas.vscodeRemote;\n\t\t\t\tfilePath = '/home/user/.zsh_history';\n\t\t\t\toriginalEnvValues = { HOME: env['HOME'], APPDATA: env['APPDATA'] };\n\t\t\t});\n\t\t\tteardown(() => {\n\t\t\t\tif (originalEnvValues['HOME'] === undefined) {\n\t\t\t\t\tdelete env['HOME'];\n\t\t\t\t} else {\n\t\t\t\t\tenv['HOME'] = originalEnvValues['HOME'];\n\t\t\t\t}\n\t\t\t\tif (originalEnvValues['APPDATA'] === undefined) {\n\t\t\t\t\tdelete env['APPDATA'];\n\t\t\t\t} else {\n\t\t\t\t\tenv['APPDATA'] = originalEnvValues['APPDATA'];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttest('current OS', async () => {\n\t\t\t\tif (isWindows) {\n\t\t\t\t\tfilePath = join(env['APPDATA']!, 'Microsoft\\\\Windows\\\\PowerShell\\\\PSReadLine\\\\ConsoleHost_history.txt');\n\t\t\t\t} else {\n\t\t\t\t\tfilePath = join(env['HOME']!, '.local/share/powershell/PSReadline/ConsoleHost_history.txt');\n\t\t\t\t}\n\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchPwshHistory))!), expectedCommands);\n\t\t\t});\n\t\t});\n\t\tsuite('remote', () => {\n\t\t\tlet originalEnvValues: { HOME: string | undefined; APPDATA: string | undefined };\n\t\t\tsetup(() => {\n\t\t\t\tremoteConnection = { remoteAuthority: 'some-remote' };\n\t\t\t\tfileScheme = Schemas.vscodeRemote;\n\t\t\t\toriginalEnvValues = { HOME: env['HOME'], APPDATA: env['APPDATA'] };\n\t\t\t});\n\t\t\tteardown(() => {\n\t\t\t\tif (originalEnvValues['HOME'] === undefined) {\n\t\t\t\t\tdelete env['HOME'];\n\t\t\t\t} else {\n\t\t\t\t\tenv['HOME'] = originalEnvValues['HOME'];\n\t\t\t\t}\n\t\t\t\tif (originalEnvValues['APPDATA'] === undefined) {\n\t\t\t\t\tdelete env['APPDATA'];\n\t\t\t\t} else {\n\t\t\t\t\tenv['APPDATA'] = originalEnvValues['APPDATA'];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttest('Windows', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Windows };\n\t\t\t\tenv['APPDATA'] = 'C:\\\\AppData';\n\t\t\t\tfilePath = 'C:\\\\AppData\\\\Microsoft\\\\Windows\\\\PowerShell\\\\PSReadLine\\\\ConsoleHost_history.txt';\n\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchPwshHistory))!), expectedCommands);\n\t\t\t});\n\t\t\ttest('macOS', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Macintosh };\n\t\t\t\tenv['HOME'] = '/home/user';\n\t\t\t\tfilePath = '/home/user/.local/share/powershell/PSReadline/ConsoleHost_history.txt';\n\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchPwshHistory))!), expectedCommands);\n\t\t\t});\n\t\t\ttest('Linux', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Linux };\n\t\t\t\tenv['HOME'] = '/home/user';\n\t\t\t\tfilePath = '/home/user/.local/share/powershell/PSReadline/ConsoleHost_history.txt';\n\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchPwshHistory))!), expectedCommands);\n\t\t\t});\n\t\t});\n\t});\n\tsuite('fetchFishHistory', () => {\n\t\tlet fileScheme: string;\n\t\tlet filePath: string;\n\t\tconst fileContent: string = [\n\t\t\t'- cmd: single line command',\n\t\t\t'  when: 1650000000',\n\t\t\t'- cmd: git commit -m \"A wrapped line in pwsh history\\\\n\\\\nSome commit description\\\\n\\\\nFixes #xyz\"',\n\t\t\t'  when: 1650000010',\n\t\t\t'- cmd: git status',\n\t\t\t'  when: 1650000020',\n\t\t\t'- cmd: two \"\\\\nline\"',\n\t\t\t'  when: 1650000030',\n\t\t].join('\\n');\n\n\t\tlet instantiationService: TestInstantiationService;\n\t\tlet remoteConnection: Pick<IRemoteAgentConnection, 'remoteAuthority'> | null = null;\n\t\tlet remoteEnvironment: Pick<IRemoteAgentEnvironment, 'os'> | null = null;\n\n\t\tsetup(() => {\n\t\t\tinstantiationService = new TestInstantiationService();\n\t\t\tinstantiationService.stub(IFileService, {\n\t\t\t\tasync readFile(resource: URI) {\n\t\t\t\t\tconst expected = URI.from({ scheme: fileScheme, path: filePath });\n\t\t\t\t\tstrictEqual(resource.scheme, expected.scheme);\n\t\t\t\t\tstrictEqual(resource.path, expected.path);\n\t\t\t\t\treturn { value: VSBuffer.fromString(fileContent) };\n\t\t\t\t}\n\t\t\t} as Pick<IFileService, 'readFile'>);\n\t\t\tinstantiationService.stub(IRemoteAgentService, {\n\t\t\t\tasync getEnvironment() { return remoteEnvironment; },\n\t\t\t\tgetConnection() { return remoteConnection; }\n\t\t\t} as Pick<IRemoteAgentService, 'getConnection' | 'getEnvironment'>);\n\t\t});\n\n\t\tteardown(() => {\n\t\t\tinstantiationService.dispose();\n\t\t});\n\n\t\tif (!isWindows) {\n\t\t\tsuite('local', () => {\n\t\t\t\tlet originalEnvValues: { HOME: string | undefined };\n\t\t\t\tsetup(() => {\n\t\t\t\t\toriginalEnvValues = { HOME: env['HOME'] };\n\t\t\t\t\tenv['HOME'] = '/home/user';\n\t\t\t\t\tremoteConnection = { remoteAuthority: 'some-remote' };\n\t\t\t\t\tfileScheme = Schemas.vscodeRemote;\n\t\t\t\t\tfilePath = '/home/user/.local/share/fish/fish_history';\n\t\t\t\t});\n\t\t\t\tteardown(() => {\n\t\t\t\t\tif (originalEnvValues['HOME'] === undefined) {\n\t\t\t\t\t\tdelete env['HOME'];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tenv['HOME'] = originalEnvValues['HOME'];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\ttest('current OS', async () => {\n\t\t\t\t\tfilePath = '/home/user/.local/share/fish/fish_history';\n\t\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchFishHistory))!), expectedCommands);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsuite('local (overriden path)', () => {\n\t\t\t\tlet originalEnvValues: { XDG_DATA_HOME: string | undefined };\n\t\t\t\tsetup(() => {\n\t\t\t\t\toriginalEnvValues = { XDG_DATA_HOME: env['XDG_DATA_HOME'] };\n\t\t\t\t\tenv['XDG_DATA_HOME'] = '/home/user/data-home';\n\t\t\t\t\tremoteConnection = { remoteAuthority: 'some-remote' };\n\t\t\t\t\tfileScheme = Schemas.vscodeRemote;\n\t\t\t\t\tfilePath = '/home/user/data-home/fish/fish_history';\n\t\t\t\t});\n\t\t\t\tteardown(() => {\n\t\t\t\t\tif (originalEnvValues['XDG_DATA_HOME'] === undefined) {\n\t\t\t\t\t\tdelete env['XDG_DATA_HOME'];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tenv['XDG_DATA_HOME'] = originalEnvValues['XDG_DATA_HOME'];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\ttest('current OS', async () => {\n\t\t\t\t\tfilePath = '/home/user/data-home/fish/fish_history';\n\t\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchFishHistory))!), expectedCommands);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tsuite('remote', () => {\n\t\t\tlet originalEnvValues: { HOME: string | undefined };\n\t\t\tsetup(() => {\n\t\t\t\toriginalEnvValues = { HOME: env['HOME'] };\n\t\t\t\tenv['HOME'] = '/home/user';\n\t\t\t\tremoteConnection = { remoteAuthority: 'some-remote' };\n\t\t\t\tfileScheme = Schemas.vscodeRemote;\n\t\t\t\tfilePath = '/home/user/.local/share/fish/fish_history';\n\t\t\t});\n\t\t\tteardown(() => {\n\t\t\t\tif (originalEnvValues['HOME'] === undefined) {\n\t\t\t\t\tdelete env['HOME'];\n\t\t\t\t} else {\n\t\t\t\t\tenv['HOME'] = originalEnvValues['HOME'];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttest('Windows', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Windows };\n\t\t\t\tstrictEqual(await instantiationService.invokeFunction(fetchFishHistory), undefined);\n\t\t\t});\n\t\t\ttest('macOS', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Macintosh };\n\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchFishHistory))!), expectedCommands);\n\t\t\t});\n\t\t\ttest('Linux', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Linux };\n\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchFishHistory))!), expectedCommands);\n\t\t\t});\n\t\t});\n\n\t\tsuite('remote (overriden path)', () => {\n\t\t\tlet originalEnvValues: { XDG_DATA_HOME: string | undefined };\n\t\t\tsetup(() => {\n\t\t\t\toriginalEnvValues = { XDG_DATA_HOME: env['XDG_DATA_HOME'] };\n\t\t\t\tenv['XDG_DATA_HOME'] = '/home/user/data-home';\n\t\t\t\tremoteConnection = { remoteAuthority: 'some-remote' };\n\t\t\t\tfileScheme = Schemas.vscodeRemote;\n\t\t\t\tfilePath = '/home/user/data-home/fish/fish_history';\n\t\t\t});\n\t\t\tteardown(() => {\n\t\t\t\tif (originalEnvValues['XDG_DATA_HOME'] === undefined) {\n\t\t\t\t\tdelete env['XDG_DATA_HOME'];\n\t\t\t\t} else {\n\t\t\t\t\tenv['XDG_DATA_HOME'] = originalEnvValues['XDG_DATA_HOME'];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttest('Windows', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Windows };\n\t\t\t\tstrictEqual(await instantiationService.invokeFunction(fetchFishHistory), undefined);\n\t\t\t});\n\t\t\ttest('macOS', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Macintosh };\n\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchFishHistory))!), expectedCommands);\n\t\t\t});\n\t\t\ttest('Linux', async () => {\n\t\t\t\tremoteEnvironment = { os: OperatingSystem.Linux };\n\t\t\t\tdeepStrictEqual(Array.from((await instantiationService.invokeFunction(fetchFishHistory))!), expectedCommands);\n\t\t\t});\n\t\t});\n\n\t\tsuite('sanitizeFishHistoryCmd', () => {\n\t\t\ttest('valid new-lines', () => {\n\t\t\t\t/**\n\t\t\t\t * Valid new-lines have odd number of leading backslashes: \\n, \\\\\\n, \\\\\\\\\\n\n\t\t\t\t */\n\t\t\t\tconst cases = [\n\t\t\t\t\t'\\\\n',\n\t\t\t\t\t'\\\\n at start',\n\t\t\t\t\t'some \\\\n in the middle',\n\t\t\t\t\t'at the end \\\\n',\n\t\t\t\t\t'\\\\\\\\\\\\n',\n\t\t\t\t\t'\\\\\\\\\\\\n valid at start',\n\t\t\t\t\t'valid \\\\\\\\\\\\n in the middle',\n\t\t\t\t\t'valid in the end \\\\\\\\\\\\n',\n\t\t\t\t\t'\\\\\\\\\\\\\\\\\\\\n',\n\t\t\t\t\t'\\\\\\\\\\\\\\\\\\\\n valid at start',\n\t\t\t\t\t'valid \\\\\\\\\\\\\\\\\\\\n in the middle',\n\t\t\t\t\t'valid in the end \\\\\\\\\\\\\\\\\\\\n',\n\t\t\t\t\t'mixed valid \\\\r\\\\n',\n\t\t\t\t\t'mixed valid \\\\\\\\\\\\r\\\\n',\n\t\t\t\t\t'mixed valid \\\\r\\\\\\\\\\\\n',\n\t\t\t\t];\n\n\t\t\t\tfor (const x of cases) {\n\t\t\t\t\tok(sanitizeFishHistoryCmd(x).includes('\\n'));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\ttest('invalid new-lines', () => {\n\t\t\t\t/**\n\t\t\t\t * Invalid new-lines have even number of leading backslashes: \\\\n, \\\\\\\\n, \\\\\\\\\\\\n\n\t\t\t\t */\n\t\t\t\tconst cases = [\n\t\t\t\t\t'\\\\\\\\n',\n\t\t\t\t\t'\\\\\\\\n invalid at start',\n\t\t\t\t\t'invalid \\\\\\\\n in the middle',\n\t\t\t\t\t'invalid in the end \\\\\\\\n',\n\t\t\t\t\t'\\\\\\\\\\\\\\\\n',\n\t\t\t\t\t'\\\\\\\\\\\\\\\\n invalid at start',\n\t\t\t\t\t'invalid \\\\\\\\\\\\\\\\n in the middle',\n\t\t\t\t\t'invalid in the end \\\\\\\\\\\\\\\\n',\n\t\t\t\t\t'mixed invalid \\\\r\\\\\\\\n',\n\t\t\t\t\t'mixed invalid \\\\r\\\\\\\\\\\\\\\\n',\n\t\t\t\t\t'echo \"\\\\\\\\n\"',\n\t\t\t\t];\n\n\t\t\t\tfor (const x of cases) {\n\t\t\t\t\tok(!sanitizeFishHistoryCmd(x).includes('\\n'));\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\t});\n});\n"]}