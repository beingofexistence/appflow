{"version":3,"sources":["vs/workbench/contrib/terminal/browser/terminalQuickAccess.ts"],"names":[],"mappings":"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","file":"terminalQuickAccess.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { IPickerQuickAccessItem, PickerQuickAccessProvider, TriggerAction } from 'vs/platform/quickinput/browser/pickerQuickAccess';\nimport { matchesFuzzy } from 'vs/base/common/filters';\nimport { ITerminalEditorService, ITerminalGroupService, ITerminalInstance, ITerminalService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { TerminalCommandId } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { killTerminalIcon, renameTerminalIcon } from 'vs/workbench/contrib/terminal/browser/terminalIcons';\nimport { getColorClass, getIconId, getUriClasses } from 'vs/workbench/contrib/terminal/browser/terminalIcon';\nimport { terminalStrings } from 'vs/workbench/contrib/terminal/common/terminalStrings';\nimport { TerminalLocation } from 'vs/platform/terminal/common/terminal';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nlet terminalPicks: Array<IPickerQuickAccessItem | IQuickPickSeparator> = [];\n\nexport class TerminalQuickAccessProvider extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\n\tstatic PREFIX = 'term ';\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ITerminalEditorService private readonly _terminalService: ITerminalService,\n\t\t@ITerminalEditorService private readonly _terminalEditorService: ITerminalEditorService,\n\t\t@ITerminalGroupService private readonly _terminalGroupService: ITerminalGroupService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper(TerminalQuickAccessProvider.PREFIX, { canAcceptInBackground: true });\n\t}\n\tprotected _getPicks(filter: string): Array<IPickerQuickAccessItem | IQuickPickSeparator> {\n\t\tterminalPicks = [];\n\t\tterminalPicks.push({ type: 'separator', label: 'panel' });\n\t\tconst terminalGroups = this._terminalGroupService.groups;\n\t\tfor (let groupIndex = 0; groupIndex < terminalGroups.length; groupIndex++) {\n\t\t\tconst terminalGroup = terminalGroups[groupIndex];\n\t\t\tfor (let terminalIndex = 0; terminalIndex < terminalGroup.terminalInstances.length; terminalIndex++) {\n\t\t\t\tconst terminal = terminalGroup.terminalInstances[terminalIndex];\n\t\t\t\tconst pick = this._createPick(terminal, terminalIndex, filter, { groupIndex, groupSize: terminalGroup.terminalInstances.length });\n\t\t\t\tif (pick) {\n\t\t\t\t\tterminalPicks.push(pick);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (terminalPicks.length > 0) {\n\t\t\tterminalPicks.push({ type: 'separator', label: 'editor' });\n\t\t}\n\n\t\tconst terminalEditors = this._terminalEditorService.instances;\n\t\tfor (let editorIndex = 0; editorIndex < terminalEditors.length; editorIndex++) {\n\t\t\tconst term = terminalEditors[editorIndex];\n\t\t\tterm.target = TerminalLocation.Editor;\n\t\t\tconst pick = this._createPick(term, editorIndex, filter);\n\t\t\tif (pick) {\n\t\t\t\tterminalPicks.push(pick);\n\t\t\t}\n\t\t}\n\n\t\tif (terminalPicks.length > 0) {\n\t\t\tterminalPicks.push({ type: 'separator' });\n\t\t}\n\n\t\tconst createTerminalLabel = localize(\"workbench.action.terminal.newplus\", \"Create New Terminal\");\n\t\tterminalPicks.push({\n\t\t\tlabel: `$(plus) ${createTerminalLabel}`,\n\t\t\tariaLabel: createTerminalLabel,\n\t\t\taccept: () => this._commandService.executeCommand(TerminalCommandId.New)\n\t\t});\n\t\tconst createWithProfileLabel = localize(\"workbench.action.terminal.newWithProfilePlus\", \"Create New Terminal With Profile\");\n\t\tterminalPicks.push({\n\t\t\tlabel: `$(plus) ${createWithProfileLabel}`,\n\t\t\tariaLabel: createWithProfileLabel,\n\t\t\taccept: () => this._commandService.executeCommand(TerminalCommandId.NewWithProfile)\n\t\t});\n\t\treturn terminalPicks;\n\t}\n\n\tprivate _createPick(terminal: ITerminalInstance, terminalIndex: number, filter: string, groupInfo?: { groupIndex: number; groupSize: number }): IPickerQuickAccessItem | undefined {\n\t\tconst iconId = this._instantiationService.invokeFunction(getIconId, terminal);\n\t\tconst index = groupInfo\n\t\t\t? (groupInfo.groupSize > 1\n\t\t\t\t? `${groupInfo.groupIndex + 1}.${terminalIndex + 1}`\n\t\t\t\t: `${groupInfo.groupIndex + 1}`)\n\t\t\t: `${terminalIndex + 1}`;\n\t\tconst label = `$(${iconId}) ${index}: ${terminal.title}`;\n\t\tconst iconClasses: string[] = [];\n\t\tconst colorClass = getColorClass(terminal);\n\t\tif (colorClass) {\n\t\t\ticonClasses.push(colorClass);\n\t\t}\n\t\tconst uriClasses = getUriClasses(terminal, this._themeService.getColorTheme().type);\n\t\tif (uriClasses) {\n\t\t\ticonClasses.push(...uriClasses);\n\t\t}\n\t\tconst highlights = matchesFuzzy(filter, label, true);\n\t\tif (highlights) {\n\t\t\treturn {\n\t\t\t\tlabel,\n\t\t\t\tdescription: terminal.description,\n\t\t\t\thighlights: { label: highlights },\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(renameTerminalIcon),\n\t\t\t\t\t\ttooltip: localize('renameTerminal', \"Rename Terminal\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(killTerminalIcon),\n\t\t\t\t\t\ttooltip: terminalStrings.kill.value\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\ticonClasses,\n\t\t\t\ttrigger: buttonIndex => {\n\t\t\t\t\tswitch (buttonIndex) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tthis._commandService.executeCommand(TerminalCommandId.Rename, terminal);\n\t\t\t\t\t\t\treturn TriggerAction.NO_ACTION;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tthis._terminalService.safeDisposeTerminal(terminal);\n\t\t\t\t\t\t\treturn TriggerAction.REMOVE_ITEM;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn TriggerAction.NO_ACTION;\n\t\t\t\t},\n\t\t\t\taccept: (keyMod, event) => {\n\t\t\t\t\tif (terminal.target === TerminalLocation.Editor) {\n\t\t\t\t\t\tconst existingEditors = this._editorService.findEditors(terminal.resource);\n\t\t\t\t\t\tthis._terminalEditorService.openEditor(terminal, { viewColumn: existingEditors?.[0].groupId });\n\t\t\t\t\t\tthis._terminalEditorService.setActiveInstance(terminal);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._terminalGroupService.showPanel(!event.inBackground);\n\t\t\t\t\t\tthis._terminalGroupService.setActiveInstance(terminal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"]}