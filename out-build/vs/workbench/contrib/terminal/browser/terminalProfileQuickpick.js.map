{"version":3,"sources":["vs/workbench/contrib/terminal/browser/terminalProfileQuickpick.ts"],"names":[],"mappings":"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","file":"terminalProfileQuickpick.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from 'vs/base/common/codicons';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IQuickInputService, IKeyMods, IPickOptions, IQuickPickSeparator, IQuickInputButton, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { IExtensionTerminalProfile, ITerminalProfile, ITerminalProfileObject, TerminalSettingPrefix } from 'vs/platform/terminal/common/terminal';\nimport { getUriClasses, getColorClass, getColorStyleElement } from 'vs/workbench/contrib/terminal/browser/terminalIcon';\nimport { configureTerminalProfileIcon } from 'vs/workbench/contrib/terminal/browser/terminalIcons';\nimport * as nls from 'vs/nls';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { ITerminalProfileResolverService, ITerminalProfileService } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IQuickPickTerminalObject, ITerminalInstance } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { IPickerQuickAccessItem } from 'vs/platform/quickinput/browser/pickerQuickAccess';\nimport { getIconRegistry } from 'vs/platform/theme/common/iconRegistry';\nimport { basename } from 'vs/base/common/path';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\n\n\ntype DefaultProfileName = string;\nexport class TerminalProfileQuickpick {\n\tconstructor(\n\t\t@ITerminalProfileService private readonly _terminalProfileService: ITerminalProfileService,\n\t\t@ITerminalProfileResolverService private readonly _terminalProfileResolverService: ITerminalProfileResolverService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@INotificationService private readonly _notificationService: INotificationService\n\t) { }\n\n\tasync showAndGetResult(type: 'setDefault' | 'createInstance'): Promise<IQuickPickTerminalObject | DefaultProfileName | undefined> {\n\t\tconst platformKey = await this._terminalProfileService.getPlatformKey();\n\t\tconst profilesKey = TerminalSettingPrefix.Profiles + platformKey;\n\t\tconst result = await this._createAndShow(type);\n\t\tconst defaultProfileKey = `${TerminalSettingPrefix.DefaultProfile}${platformKey}`;\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\t\tif (type === 'setDefault') {\n\t\t\tif ('command' in result.profile) {\n\t\t\t\treturn; // Should never happen\n\t\t\t} else if ('id' in result.profile) {\n\t\t\t\t// extension contributed profile\n\t\t\t\tawait this._configurationService.updateValue(defaultProfileKey, result.profile.title, ConfigurationTarget.USER);\n\t\t\t\treturn {\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\textensionIdentifier: result.profile.extensionIdentifier,\n\t\t\t\t\t\tid: result.profile.id,\n\t\t\t\t\t\ttitle: result.profile.title,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tcolor: result.profile.color,\n\t\t\t\t\t\t\ticon: result.profile.icon\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tkeyMods: result.keyMods\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Add the profile to settings if necessary\n\t\t\tif ('isAutoDetected' in result.profile) {\n\t\t\t\tconst profilesConfig = await this._configurationService.getValue(profilesKey);\n\t\t\t\tif (typeof profilesConfig === 'object') {\n\t\t\t\t\tconst newProfile: ITerminalProfileObject = {\n\t\t\t\t\t\tpath: result.profile.path\n\t\t\t\t\t};\n\t\t\t\t\tif (result.profile.args) {\n\t\t\t\t\t\tnewProfile.args = result.profile.args;\n\t\t\t\t\t}\n\t\t\t\t\t(profilesConfig as { [key: string]: ITerminalProfileObject })[result.profile.profileName] = newProfile;\n\t\t\t\t}\n\t\t\t\tawait this._configurationService.updateValue(profilesKey, profilesConfig, ConfigurationTarget.USER);\n\t\t\t}\n\t\t\t// Set the default profile\n\t\t\tawait this._configurationService.updateValue(defaultProfileKey, result.profileName, ConfigurationTarget.USER);\n\t\t} else if (type === 'createInstance') {\n\t\t\tif ('id' in result.profile) {\n\t\t\t\treturn {\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\textensionIdentifier: result.profile.extensionIdentifier,\n\t\t\t\t\t\tid: result.profile.id,\n\t\t\t\t\t\ttitle: result.profile.title,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\ticon: result.profile.icon,\n\t\t\t\t\t\t\tcolor: result.profile.color,\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tkeyMods: result.keyMods\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn { config: result.profile, keyMods: result.keyMods };\n\t\t\t}\n\t\t}\n\t\t// for tests\n\t\treturn 'profileName' in result.profile ? result.profile.profileName : result.profile.title;\n\t}\n\n\tprivate async _createAndShow(type: 'setDefault' | 'createInstance'): Promise<IProfileQuickPickItem | undefined> {\n\t\tconst platformKey = await this._terminalProfileService.getPlatformKey();\n\t\tconst profiles = this._terminalProfileService.availableProfiles;\n\t\tconst profilesKey = TerminalSettingPrefix.Profiles + platformKey;\n\t\tconst defaultProfileName = this._terminalProfileService.getDefaultProfileName();\n\t\tlet keyMods: IKeyMods | undefined;\n\t\tconst options: IPickOptions<IProfileQuickPickItem> = {\n\t\t\tplaceHolder: type === 'createInstance' ? nls.localize('terminal.integrated.selectProfileToCreate', \"Select the terminal profile to create\") : nls.localize('terminal.integrated.chooseDefaultProfile', \"Select your default terminal profile\"),\n\t\t\tonDidTriggerItemButton: async (context) => {\n\t\t\t\t// Get the user's explicit permission to use a potentially unsafe path\n\t\t\t\tif (!await this._isProfileSafe(context.item.profile)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ('command' in context.item.profile) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ('id' in context.item.profile) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst configProfiles: { [key: string]: any } = this._configurationService.getValue(TerminalSettingPrefix.Profiles + platformKey);\n\t\t\t\tconst existingProfiles = !!configProfiles ? Object.keys(configProfiles) : [];\n\t\t\t\tconst name = await this._quickInputService.input({\n\t\t\t\t\tprompt: nls.localize('enterTerminalProfileName', \"Enter terminal profile name\"),\n\t\t\t\t\tvalue: context.item.profile.profileName,\n\t\t\t\t\tvalidateInput: async input => {\n\t\t\t\t\t\tif (existingProfiles.includes(input)) {\n\t\t\t\t\t\t\treturn nls.localize('terminalProfileAlreadyExists', \"A terminal profile already exists with that name\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (!name) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst newConfigValue: { [key: string]: ITerminalProfileObject } = { ...configProfiles };\n\t\t\t\tnewConfigValue[name] = {\n\t\t\t\t\tpath: context.item.profile.path,\n\t\t\t\t\targs: context.item.profile.args\n\t\t\t\t};\n\t\t\t\tawait this._configurationService.updateValue(profilesKey, newConfigValue, ConfigurationTarget.USER);\n\t\t\t},\n\t\t\tonKeyMods: mods => keyMods = mods\n\t\t};\n\n\t\t// Build quick pick items\n\t\tconst quickPickItems: (IProfileQuickPickItem | IQuickPickSeparator)[] = [];\n\t\tconst configProfiles = profiles.filter(e => !e.isAutoDetected);\n\t\tconst autoDetectedProfiles = profiles.filter(e => e.isAutoDetected);\n\n\t\tif (configProfiles.length > 0) {\n\t\t\tquickPickItems.push({ type: 'separator', label: nls.localize('terminalProfiles', \"profiles\") });\n\t\t\tquickPickItems.push(...this._sortProfileQuickPickItems(configProfiles.map(e => this._createProfileQuickPickItem(e)), defaultProfileName!));\n\t\t}\n\n\t\tquickPickItems.push({ type: 'separator', label: nls.localize('ICreateContributedTerminalProfileOptions', \"contributed\") });\n\t\tconst contributedProfiles: IProfileQuickPickItem[] = [];\n\t\tfor (const contributed of this._terminalProfileService.contributedProfiles) {\n\t\t\tlet icon: ThemeIcon | undefined;\n\t\t\tif (typeof contributed.icon === 'string') {\n\t\t\t\tif (contributed.icon.startsWith('$(')) {\n\t\t\t\t\ticon = ThemeIcon.fromString(contributed.icon);\n\t\t\t\t} else {\n\t\t\t\t\ticon = ThemeIcon.fromId(contributed.icon);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!icon || !getIconRegistry().getIcon(icon.id)) {\n\t\t\t\ticon = this._terminalProfileResolverService.getDefaultIcon();\n\t\t\t}\n\t\t\tconst uriClasses = getUriClasses(contributed, this._themeService.getColorTheme().type, true);\n\t\t\tconst colorClass = getColorClass(contributed);\n\t\t\tconst iconClasses = [];\n\t\t\tif (uriClasses) {\n\t\t\t\ticonClasses.push(...uriClasses);\n\t\t\t}\n\t\t\tif (colorClass) {\n\t\t\t\ticonClasses.push(colorClass);\n\t\t\t}\n\t\t\tcontributedProfiles.push({\n\t\t\t\tlabel: `$(${icon.id}) ${contributed.title}`,\n\t\t\t\tprofile: {\n\t\t\t\t\textensionIdentifier: contributed.extensionIdentifier,\n\t\t\t\t\ttitle: contributed.title,\n\t\t\t\t\ticon: contributed.icon,\n\t\t\t\t\tid: contributed.id,\n\t\t\t\t\tcolor: contributed.color\n\t\t\t\t},\n\t\t\t\tprofileName: contributed.title,\n\t\t\t\ticonClasses\n\t\t\t});\n\t\t}\n\n\t\tif (contributedProfiles.length > 0) {\n\t\t\tquickPickItems.push(...this._sortProfileQuickPickItems(contributedProfiles, defaultProfileName!));\n\t\t}\n\n\t\tif (autoDetectedProfiles.length > 0) {\n\t\t\tquickPickItems.push({ type: 'separator', label: nls.localize('terminalProfiles.detected', \"detected\") });\n\t\t\tquickPickItems.push(...this._sortProfileQuickPickItems(autoDetectedProfiles.map(e => this._createProfileQuickPickItem(e)), defaultProfileName!));\n\t\t}\n\t\tconst styleElement = getColorStyleElement(this._themeService.getColorTheme());\n\t\tdocument.body.appendChild(styleElement);\n\n\t\tconst result = await this._quickInputService.pick(quickPickItems, options);\n\t\tdocument.body.removeChild(styleElement);\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!await this._isProfileSafe(result.profile)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (keyMods) {\n\t\t\tresult.keyMods = keyMods;\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async _isProfileSafe(profile: ITerminalProfile | IExtensionTerminalProfile): Promise<boolean> {\n\t\tconst isUnsafePath = 'isUnsafePath' in profile && profile.isUnsafePath;\n\t\tconst requiresUnsafePath = 'requiresUnsafePath' in profile && profile.requiresUnsafePath;\n\t\tif (!isUnsafePath && !requiresUnsafePath) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the user's explicit permission to use a potentially unsafe path\n\t\treturn await new Promise<boolean>(r => {\n\t\t\tconst unsafePaths = [];\n\t\t\tif (isUnsafePath) {\n\t\t\t\tunsafePaths.push(profile.path);\n\t\t\t}\n\t\t\tif (requiresUnsafePath) {\n\t\t\t\tunsafePaths.push(requiresUnsafePath);\n\t\t\t}\n\t\t\t// Notify about unsafe path(s). At the time of writing, multiple unsafe paths isn't\n\t\t\t// possible so the message is optimized for a single path.\n\t\t\tconst handle = this._notificationService.prompt(\n\t\t\t\tSeverity.Warning,\n\t\t\t\tnls.localize('unsafePathWarning', 'This terminal profile uses a potentially unsafe path that can be modified by another user: {0}. Are you sure you want to use it?', `\"${unsafePaths.join(',')}\"`),\n\t\t\t\t[{\n\t\t\t\t\tlabel: nls.localize('yes', 'Yes'),\n\t\t\t\t\trun: () => r(true)\n\t\t\t\t}, {\n\t\t\t\t\tlabel: nls.localize('cancel', 'Cancel'),\n\t\t\t\t\trun: () => r(false)\n\t\t\t\t}]\n\t\t\t);\n\t\t\thandle.onDidClose(() => r(false));\n\t\t});\n\t}\n\n\tprivate _createProfileQuickPickItem(profile: ITerminalProfile): IProfileQuickPickItem {\n\t\tconst buttons: IQuickInputButton[] = [{\n\t\t\ticonClass: ThemeIcon.asClassName(configureTerminalProfileIcon),\n\t\t\ttooltip: nls.localize('createQuickLaunchProfile', \"Configure Terminal Profile\")\n\t\t}];\n\t\tconst icon = (profile.icon && ThemeIcon.isThemeIcon(profile.icon)) ? profile.icon : Codicon.terminal;\n\t\tconst label = `$(${icon.id}) ${profile.profileName}`;\n\t\tconst friendlyPath = profile.isFromPath ? basename(profile.path) : profile.path;\n\t\tconst colorClass = getColorClass(profile);\n\t\tconst iconClasses = [];\n\t\tif (colorClass) {\n\t\t\ticonClasses.push(colorClass);\n\t\t}\n\n\t\tif (profile.args) {\n\t\t\tif (typeof profile.args === 'string') {\n\t\t\t\treturn { label, description: `${profile.path} ${profile.args}`, profile, profileName: profile.profileName, buttons, iconClasses };\n\t\t\t}\n\t\t\tconst argsString = profile.args.map(e => {\n\t\t\t\tif (e.includes(' ')) {\n\t\t\t\t\treturn `\"${e.replace(/\"/g, '\\\\\"')}\"`; // CodeQL [SM02383] js/incomplete-sanitization This is only used as a label on the UI so this isn't a problem\n\t\t\t\t}\n\t\t\t\treturn e;\n\t\t\t}).join(' ');\n\t\t\treturn { label, description: `${friendlyPath} ${argsString}`, profile, profileName: profile.profileName, buttons, iconClasses };\n\t\t}\n\t\treturn { label, description: friendlyPath, profile, profileName: profile.profileName, buttons, iconClasses };\n\t}\n\n\tprivate _sortProfileQuickPickItems(items: IProfileQuickPickItem[], defaultProfileName: string) {\n\t\treturn items.sort((a, b) => {\n\t\t\tif (b.profileName === defaultProfileName) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (a.profileName === defaultProfileName) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn a.profileName.localeCompare(b.profileName);\n\t\t});\n\t}\n}\n\nexport interface IProfileQuickPickItem extends IQuickPickItem {\n\tprofile: ITerminalProfile | IExtensionTerminalProfile;\n\tprofileName: string;\n\tkeyMods?: IKeyMods | undefined;\n}\n\nexport interface ITerminalQuickPickItem extends IPickerQuickAccessItem {\n\tterminal: ITerminalInstance;\n}\n"]}