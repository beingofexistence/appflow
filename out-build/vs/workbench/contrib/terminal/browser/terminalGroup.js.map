{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/browser/terminalGroup.ts"],"names":[],"mappings":"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","file":"terminalGroup.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TERMINAL_VIEW_ID } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IDisposable, Disposable, DisposableStore, dispose, toDisposable } from 'vs/base/common/lifecycle';\nimport { SplitView, Orientation, IView, Sizing } from 'vs/base/browser/ui/splitview/splitview';\nimport { IWorkbenchLayoutService, Parts, Position } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITerminalInstance, Direction, ITerminalGroup, ITerminalService, ITerminalInstanceService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { ViewContainerLocation, IViewDescriptorService } from 'vs/workbench/common/views';\nimport { IShellLaunchConfig, ITerminalTabLayoutInfoById, TerminalLocation } from 'vs/platform/terminal/common/terminal';\nimport { TerminalStatus } from 'vs/workbench/contrib/terminal/browser/terminalStatusList';\nimport { getPartByLocation } from 'vs/workbench/browser/parts/views/viewsService';\n\nconst enum Constants {\n\t/**\n\t * The minimum size in pixels of a split pane.\n\t */\n\tSplitPaneMinSize = 80,\n\t/**\n\t * The number of cells the terminal gets added or removed when asked to increase or decrease\n\t * the view size.\n\t */\n\tResizePartCellCount = 4\n}\n\nclass SplitPaneContainer extends Disposable {\n\tprivate _height: number;\n\tprivate _width: number;\n\tprivate _splitView!: SplitView;\n\tprivate readonly _splitViewDisposables = this._register(new DisposableStore());\n\tprivate _children: SplitPane[] = [];\n\tprivate _terminalToPane: Map<ITerminalInstance, SplitPane> = new Map();\n\n\tprivate _onDidChange: Event<number | undefined> = Event.None;\n\tget onDidChange(): Event<number | undefined> { return this._onDidChange; }\n\n\tconstructor(\n\t\tprivate _container: HTMLElement,\n\t\tpublic orientation: Orientation,\n\t\t@IWorkbenchLayoutService private readonly _layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper();\n\t\tthis._width = this._container.offsetWidth;\n\t\tthis._height = this._container.offsetHeight;\n\t\tthis._createSplitView();\n\t\tthis._splitView.layout(this.orientation === Orientation.HORIZONTAL ? this._width : this._height);\n\t}\n\n\tprivate _createSplitView(): void {\n\t\tthis._splitView = new SplitView(this._container, { orientation: this.orientation });\n\t\tthis._splitViewDisposables.clear();\n\t\tthis._splitViewDisposables.add(this._splitView.onDidSashReset(() => this._splitView.distributeViewSizes()));\n\t}\n\n\tsplit(instance: ITerminalInstance, index: number): void {\n\t\tthis._addChild(instance, index);\n\t}\n\n\tresizePane(index: number, direction: Direction, amount: number, part: Parts): void {\n\t\tconst isHorizontal = (direction === Direction.Left) || (direction === Direction.Right);\n\n\t\tif ((isHorizontal && this.orientation !== Orientation.HORIZONTAL) ||\n\t\t\t(!isHorizontal && this.orientation !== Orientation.VERTICAL)) {\n\t\t\t// Resize the entire pane as a whole\n\t\t\tif ((this.orientation === Orientation.HORIZONTAL && direction === Direction.Down) ||\n\t\t\t\t(this.orientation === Orientation.VERTICAL && direction === Direction.Right)) {\n\t\t\t\tamount *= -1;\n\t\t\t}\n\n\t\t\tthis._layoutService.resizePart(part, amount, amount);\n\t\t\treturn;\n\t\t}\n\n\t\t// Resize left/right in horizontal or up/down in vertical\n\t\t// Only resize when there is more than one pane\n\t\tif (this._children.length <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get sizes\n\t\tconst sizes: number[] = [];\n\t\tfor (let i = 0; i < this._splitView.length; i++) {\n\t\t\tsizes.push(this._splitView.getViewSize(i));\n\t\t}\n\n\t\t// Remove size from right pane, unless index is the last pane in which case use left pane\n\t\tconst isSizingEndPane = index !== this._children.length - 1;\n\t\tconst indexToChange = isSizingEndPane ? index + 1 : index - 1;\n\t\tif (isSizingEndPane && direction === Direction.Left) {\n\t\t\tamount *= -1;\n\t\t} else if (!isSizingEndPane && direction === Direction.Right) {\n\t\t\tamount *= -1;\n\t\t} else if (isSizingEndPane && direction === Direction.Up) {\n\t\t\tamount *= -1;\n\t\t} else if (!isSizingEndPane && direction === Direction.Down) {\n\t\t\tamount *= -1;\n\t\t}\n\n\t\t// Ensure the size is not reduced beyond the minimum, otherwise weird things can happen\n\t\tif (sizes[index] + amount < Constants.SplitPaneMinSize) {\n\t\t\tamount = Constants.SplitPaneMinSize - sizes[index];\n\t\t} else if (sizes[indexToChange] - amount < Constants.SplitPaneMinSize) {\n\t\t\tamount = sizes[indexToChange] - Constants.SplitPaneMinSize;\n\t\t}\n\n\t\t// Apply the size change\n\t\tsizes[index] += amount;\n\t\tsizes[indexToChange] -= amount;\n\t\tfor (let i = 0; i < this._splitView.length - 1; i++) {\n\t\t\tthis._splitView.resizeView(i, sizes[i]);\n\t\t}\n\t}\n\n\tresizePanes(relativeSizes: number[]): void {\n\t\tif (this._children.length <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// assign any extra size to last terminal\n\t\trelativeSizes[relativeSizes.length - 1] += 1 - relativeSizes.reduce((totalValue, currentValue) => totalValue + currentValue, 0);\n\t\tlet totalSize = 0;\n\t\tfor (let i = 0; i < this._splitView.length; i++) {\n\t\t\ttotalSize += this._splitView.getViewSize(i);\n\t\t}\n\t\tfor (let i = 0; i < this._splitView.length; i++) {\n\t\t\tthis._splitView.resizeView(i, totalSize * relativeSizes[i]);\n\t\t}\n\t}\n\n\tgetPaneSize(instance: ITerminalInstance): number {\n\t\tconst paneForInstance = this._terminalToPane.get(instance);\n\t\tif (!paneForInstance) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst index = this._children.indexOf(paneForInstance);\n\t\treturn this._splitView.getViewSize(index);\n\t}\n\n\tprivate _addChild(instance: ITerminalInstance, index: number): void {\n\t\tconst child = new SplitPane(instance, this.orientation === Orientation.HORIZONTAL ? this._height : this._width);\n\t\tchild.orientation = this.orientation;\n\t\tif (typeof index === 'number') {\n\t\t\tthis._children.splice(index, 0, child);\n\t\t} else {\n\t\t\tthis._children.push(child);\n\t\t}\n\t\tthis._terminalToPane.set(instance, this._children[this._children.indexOf(child)]);\n\n\t\tthis._withDisabledLayout(() => this._splitView.addView(child, Sizing.Distribute, index));\n\t\tthis.layout(this._width, this._height);\n\n\t\tthis._onDidChange = Event.any(...this._children.map(c => c.onDidChange));\n\t}\n\n\tremove(instance: ITerminalInstance): void {\n\t\tlet index: number | null = null;\n\t\tfor (let i = 0; i < this._children.length; i++) {\n\t\t\tif (this._children[i].instance === instance) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tif (index !== null) {\n\t\t\tthis._children.splice(index, 1);\n\t\t\tthis._terminalToPane.delete(instance);\n\t\t\tthis._splitView.removeView(index, Sizing.Distribute);\n\t\t\tinstance.detachFromElement();\n\t\t}\n\t}\n\n\tlayout(width: number, height: number): void {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (this.orientation === Orientation.HORIZONTAL) {\n\t\t\tthis._children.forEach(c => c.orthogonalLayout(height));\n\t\t\tthis._splitView.layout(width);\n\t\t} else {\n\t\t\tthis._children.forEach(c => c.orthogonalLayout(width));\n\t\t\tthis._splitView.layout(height);\n\t\t}\n\t}\n\n\tsetOrientation(orientation: Orientation): void {\n\t\tif (this.orientation === orientation) {\n\t\t\treturn;\n\t\t}\n\t\tthis.orientation = orientation;\n\n\t\t// Remove old split view\n\t\twhile (this._container.children.length > 0) {\n\t\t\tthis._container.removeChild(this._container.children[0]);\n\t\t}\n\t\tthis._splitViewDisposables.clear();\n\t\tthis._splitView.dispose();\n\n\t\t// Create new split view with updated orientation\n\t\tthis._createSplitView();\n\t\tthis._withDisabledLayout(() => {\n\t\t\tthis._children.forEach(child => {\n\t\t\t\tchild.orientation = orientation;\n\t\t\t\tthis._splitView.addView(child, 1);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _withDisabledLayout(innerFunction: () => void): void {\n\t\t// Whenever manipulating views that are going to be changed immediately, disabling\n\t\t// layout/resize events in the terminal prevent bad dimensions going to the pty.\n\t\tthis._children.forEach(c => c.instance.disableLayout = true);\n\t\tinnerFunction();\n\t\tthis._children.forEach(c => c.instance.disableLayout = false);\n\t}\n}\n\nclass SplitPane implements IView {\n\tminimumSize: number = Constants.SplitPaneMinSize;\n\tmaximumSize: number = Number.MAX_VALUE;\n\n\torientation: Orientation | undefined;\n\n\tprivate _onDidChange: Event<number | undefined> = Event.None;\n\tget onDidChange(): Event<number | undefined> { return this._onDidChange; }\n\n\treadonly element: HTMLElement;\n\n\tconstructor(\n\t\treadonly instance: ITerminalInstance,\n\t\tpublic orthogonalSize: number\n\t) {\n\t\tthis.element = document.createElement('div');\n\t\tthis.element.className = 'terminal-split-pane';\n\t\tthis.instance.attachToElement(this.element);\n\t}\n\n\tlayout(size: number): void {\n\t\t// Only layout when both sizes are known\n\t\tif (!size || !this.orthogonalSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.orientation === Orientation.VERTICAL) {\n\t\t\tthis.instance.layout({ width: this.orthogonalSize, height: size });\n\t\t} else {\n\t\t\tthis.instance.layout({ width: size, height: this.orthogonalSize });\n\t\t}\n\t}\n\n\torthogonalLayout(size: number): void {\n\t\tthis.orthogonalSize = size;\n\t}\n}\n\nexport class TerminalGroup extends Disposable implements ITerminalGroup {\n\tprivate _terminalInstances: ITerminalInstance[] = [];\n\tprivate _splitPaneContainer: SplitPaneContainer | undefined;\n\tprivate _groupElement: HTMLElement | undefined;\n\tprivate _panelPosition: Position = Position.BOTTOM;\n\tprivate _terminalLocation: ViewContainerLocation = ViewContainerLocation.Panel;\n\tprivate _instanceDisposables: Map<number, IDisposable[]> = new Map();\n\n\tprivate _activeInstanceIndex: number = -1;\n\n\tget terminalInstances(): ITerminalInstance[] { return this._terminalInstances; }\n\n\tprivate _initialRelativeSizes: number[] | undefined;\n\tprivate _visible: boolean = false;\n\n\tprivate readonly _onDidDisposeInstance: Emitter<ITerminalInstance> = this._register(new Emitter<ITerminalInstance>());\n\treadonly onDidDisposeInstance = this._onDidDisposeInstance.event;\n\tprivate readonly _onDidFocusInstance: Emitter<ITerminalInstance> = this._register(new Emitter<ITerminalInstance>());\n\treadonly onDidFocusInstance = this._onDidFocusInstance.event;\n\tprivate readonly _onDidChangeInstanceCapability: Emitter<ITerminalInstance> = this._register(new Emitter<ITerminalInstance>());\n\treadonly onDidChangeInstanceCapability = this._onDidChangeInstanceCapability.event;\n\tprivate readonly _onDisposed: Emitter<ITerminalGroup> = this._register(new Emitter<ITerminalGroup>());\n\treadonly onDisposed = this._onDisposed.event;\n\tprivate readonly _onInstancesChanged: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onInstancesChanged = this._onInstancesChanged.event;\n\tprivate readonly _onDidChangeActiveInstance = this._register(new Emitter<ITerminalInstance | undefined>());\n\treadonly onDidChangeActiveInstance = this._onDidChangeActiveInstance.event;\n\tprivate readonly _onPanelOrientationChanged = this._register(new Emitter<Orientation>());\n\treadonly onPanelOrientationChanged = this._onPanelOrientationChanged.event;\n\n\tconstructor(\n\t\tprivate _container: HTMLElement | undefined,\n\t\tshellLaunchConfigOrInstance: IShellLaunchConfig | ITerminalInstance | undefined,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@ITerminalInstanceService private readonly _terminalInstanceService: ITerminalInstanceService,\n\t\t@IWorkbenchLayoutService private readonly _layoutService: IWorkbenchLayoutService,\n\t\t@IViewDescriptorService private readonly _viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tif (shellLaunchConfigOrInstance) {\n\t\t\tthis.addInstance(shellLaunchConfigOrInstance);\n\t\t}\n\t\tif (this._container) {\n\t\t\tthis.attachToElement(this._container);\n\t\t}\n\t\tthis._onPanelOrientationChanged.fire(this._terminalLocation === ViewContainerLocation.Panel && this._panelPosition === Position.BOTTOM ? Orientation.HORIZONTAL : Orientation.VERTICAL);\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (this._container && this._groupElement) {\n\t\t\t\tthis._container.removeChild(this._groupElement);\n\t\t\t\tthis._groupElement = undefined;\n\t\t\t}\n\t\t}));\n\t}\n\n\taddInstance(shellLaunchConfigOrInstance: IShellLaunchConfig | ITerminalInstance, parentTerminalId?: number): void {\n\t\tlet instance: ITerminalInstance;\n\t\t// if a parent terminal is provided, find it\n\t\t// otherwise, parent is the active terminal\n\t\tconst parentIndex = parentTerminalId ? this._terminalInstances.findIndex(t => t.instanceId === parentTerminalId) : this._activeInstanceIndex;\n\t\tif ('instanceId' in shellLaunchConfigOrInstance) {\n\t\t\tinstance = shellLaunchConfigOrInstance;\n\t\t} else {\n\t\t\tinstance = this._terminalInstanceService.createInstance(shellLaunchConfigOrInstance, TerminalLocation.Panel);\n\t\t}\n\t\tif (this._terminalInstances.length === 0) {\n\t\t\tthis._terminalInstances.push(instance);\n\t\t\tthis._activeInstanceIndex = 0;\n\t\t} else {\n\t\t\tthis._terminalInstances.splice(parentIndex + 1, 0, instance);\n\t\t}\n\t\tthis._initInstanceListeners(instance);\n\n\t\tif (this._splitPaneContainer) {\n\t\t\tthis._splitPaneContainer!.split(instance, parentIndex + 1);\n\t\t}\n\n\t\tthis._onInstancesChanged.fire();\n\t}\n\n\toverride dispose(): void {\n\t\tthis._terminalInstances = [];\n\t\tthis._onInstancesChanged.fire();\n\t\tsuper.dispose();\n\t}\n\n\tget activeInstance(): ITerminalInstance | undefined {\n\t\tif (this._terminalInstances.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._terminalInstances[this._activeInstanceIndex];\n\t}\n\n\tgetLayoutInfo(isActive: boolean): ITerminalTabLayoutInfoById {\n\t\tconst instances = this.terminalInstances.filter(instance => typeof instance.persistentProcessId === 'number' && instance.shouldPersist);\n\t\tconst totalSize = instances.map(t => this._splitPaneContainer?.getPaneSize(t) || 0).reduce((total, size) => total += size, 0);\n\t\treturn {\n\t\t\tisActive: isActive,\n\t\t\tactivePersistentProcessId: this.activeInstance ? this.activeInstance.persistentProcessId : undefined,\n\t\t\tterminals: instances.map(t => {\n\t\t\t\treturn {\n\t\t\t\t\trelativeSize: totalSize > 0 ? this._splitPaneContainer!.getPaneSize(t) / totalSize : 0,\n\t\t\t\t\tterminal: t.persistentProcessId || 0\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\t}\n\n\tprivate _initInstanceListeners(instance: ITerminalInstance) {\n\t\tthis._instanceDisposables.set(instance.instanceId, [\n\t\t\tinstance.onDisposed(instance => {\n\t\t\t\tthis._onDidDisposeInstance.fire(instance);\n\t\t\t\tthis._handleOnDidDisposeInstance(instance);\n\t\t\t}),\n\t\t\tinstance.onDidFocus(instance => {\n\t\t\t\tthis._setActiveInstance(instance);\n\t\t\t\tthis._onDidFocusInstance.fire(instance);\n\t\t\t}),\n\t\t\tinstance.capabilities.onDidAddCapabilityType(() => this._onDidChangeInstanceCapability.fire(instance)),\n\t\t\tinstance.capabilities.onDidRemoveCapabilityType(() => this._onDidChangeInstanceCapability.fire(instance)),\n\t\t]);\n\t}\n\n\tprivate _handleOnDidDisposeInstance(instance: ITerminalInstance) {\n\t\tthis._removeInstance(instance);\n\t}\n\n\tremoveInstance(instance: ITerminalInstance) {\n\t\tthis._removeInstance(instance);\n\t}\n\n\tprivate _removeInstance(instance: ITerminalInstance) {\n\t\tconst index = this._terminalInstances.indexOf(instance);\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst wasActiveInstance = instance === this.activeInstance;\n\t\tthis._terminalInstances.splice(index, 1);\n\n\t\t// Adjust focus if the instance was active\n\t\tif (wasActiveInstance && this._terminalInstances.length > 0) {\n\t\t\tconst newIndex = index < this._terminalInstances.length ? index : this._terminalInstances.length - 1;\n\t\t\tthis.setActiveInstanceByIndex(newIndex);\n\t\t\t// TODO: Only focus the new instance if the group had focus?\n\t\t\tthis.activeInstance?.focus(true);\n\t\t} else if (index < this._activeInstanceIndex) {\n\t\t\t// Adjust active instance index if needed\n\t\t\tthis._activeInstanceIndex--;\n\t\t}\n\n\t\tthis._splitPaneContainer?.remove(instance);\n\n\t\t// Fire events and dispose group if it was the last instance\n\t\tif (this._terminalInstances.length === 0) {\n\t\t\tthis._onDisposed.fire(this);\n\t\t\tthis.dispose();\n\t\t} else {\n\t\t\tthis._onInstancesChanged.fire();\n\t\t}\n\n\t\t// Dispose instance event listeners\n\t\tconst disposables = this._instanceDisposables.get(instance.instanceId);\n\t\tif (disposables) {\n\t\t\tdispose(disposables);\n\t\t\tthis._instanceDisposables.delete(instance.instanceId);\n\t\t}\n\t}\n\n\tmoveInstance(instance: ITerminalInstance, index: number): void {\n\t\tconst sourceIndex = this.terminalInstances.indexOf(instance);\n\t\tif (sourceIndex === -1) {\n\t\t\treturn;\n\t\t}\n\t\tthis._terminalInstances.splice(sourceIndex, 1);\n\t\tthis._terminalInstances.splice(index, 0, instance);\n\t\tif (this._splitPaneContainer) {\n\t\t\tthis._splitPaneContainer.remove(instance);\n\t\t\tthis._splitPaneContainer.split(instance, index);\n\t\t}\n\t\tthis._onInstancesChanged.fire();\n\t}\n\n\tprivate _setActiveInstance(instance: ITerminalInstance) {\n\t\tthis.setActiveInstanceByIndex(this._getIndexFromId(instance.instanceId));\n\t}\n\n\tprivate _getIndexFromId(terminalId: number): number {\n\t\tlet terminalIndex = -1;\n\t\tthis.terminalInstances.forEach((terminalInstance, i) => {\n\t\t\tif (terminalInstance.instanceId === terminalId) {\n\t\t\t\tterminalIndex = i;\n\t\t\t}\n\t\t});\n\t\tif (terminalIndex === -1) {\n\t\t\tthrow new Error(`Terminal with ID ${terminalId} does not exist (has it already been disposed?)`);\n\t\t}\n\t\treturn terminalIndex;\n\t}\n\n\tsetActiveInstanceByIndex(index: number, force?: boolean): void {\n\t\t// Check for invalid value\n\t\tif (index < 0 || index >= this._terminalInstances.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldActiveInstance = this.activeInstance;\n\t\tthis._activeInstanceIndex = index;\n\t\tif (oldActiveInstance !== this.activeInstance || force) {\n\t\t\tthis._onInstancesChanged.fire();\n\t\t\tthis._onDidChangeActiveInstance.fire(this.activeInstance);\n\t\t}\n\t}\n\n\tattachToElement(element: HTMLElement): void {\n\t\tthis._container = element;\n\n\t\t// If we already have a group element, we can reparent it\n\t\tif (!this._groupElement) {\n\t\t\tthis._groupElement = document.createElement('div');\n\t\t\tthis._groupElement.classList.add('terminal-group');\n\t\t}\n\n\t\tthis._container.appendChild(this._groupElement);\n\t\tif (!this._splitPaneContainer) {\n\t\t\tthis._panelPosition = this._layoutService.getPanelPosition();\n\t\t\tthis._terminalLocation = this._viewDescriptorService.getViewLocationById(TERMINAL_VIEW_ID)!;\n\t\t\tconst orientation = this._terminalLocation === ViewContainerLocation.Panel && this._panelPosition === Position.BOTTOM ? Orientation.HORIZONTAL : Orientation.VERTICAL;\n\t\t\tthis._splitPaneContainer = this._instantiationService.createInstance(SplitPaneContainer, this._groupElement, orientation);\n\t\t\tthis.terminalInstances.forEach(instance => this._splitPaneContainer!.split(instance, this._activeInstanceIndex + 1));\n\t\t}\n\t}\n\n\tget title(): string {\n\t\tif (this._terminalInstances.length === 0) {\n\t\t\t// Normally consumers should not call into title at all after the group is disposed but\n\t\t\t// this is required when the group is used as part of a tree.\n\t\t\treturn '';\n\t\t}\n\t\tlet title = this.terminalInstances[0].title + this._getBellTitle(this.terminalInstances[0]);\n\t\tif (this.terminalInstances[0].description) {\n\t\t\ttitle += ` (${this.terminalInstances[0].description})`;\n\t\t}\n\t\tfor (let i = 1; i < this.terminalInstances.length; i++) {\n\t\t\tconst instance = this.terminalInstances[i];\n\t\t\tif (instance.title) {\n\t\t\t\ttitle += `, ${instance.title + this._getBellTitle(instance)}`;\n\t\t\t\tif (instance.description) {\n\t\t\t\t\ttitle += ` (${instance.description})`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn title;\n\t}\n\n\tprivate _getBellTitle(instance: ITerminalInstance) {\n\t\tif (this._terminalService.configHelper.config.enableBell && instance.statusList.statuses.some(e => e.id === TerminalStatus.Bell)) {\n\t\t\treturn '*';\n\t\t}\n\t\treturn '';\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis._visible = visible;\n\t\tif (this._groupElement) {\n\t\t\tthis._groupElement.style.display = visible ? '' : 'none';\n\t\t}\n\t\tthis.terminalInstances.forEach(i => i.setVisible(visible));\n\t}\n\n\tsplit(shellLaunchConfig: IShellLaunchConfig): ITerminalInstance {\n\t\tconst instance = this._terminalInstanceService.createInstance(shellLaunchConfig, TerminalLocation.Panel);\n\t\tthis.addInstance(instance, shellLaunchConfig.parentTerminalId);\n\t\tthis._setActiveInstance(instance);\n\t\treturn instance;\n\t}\n\n\taddDisposable(disposable: IDisposable): void {\n\t\tthis._register(disposable);\n\t}\n\n\tlayout(width: number, height: number): void {\n\t\tif (this._splitPaneContainer) {\n\t\t\t// Check if the panel position changed and rotate panes if so\n\t\t\tconst newPanelPosition = this._layoutService.getPanelPosition();\n\t\t\tconst newTerminalLocation = this._viewDescriptorService.getViewLocationById(TERMINAL_VIEW_ID)!;\n\t\t\tconst terminalPositionChanged = newPanelPosition !== this._panelPosition || newTerminalLocation !== this._terminalLocation;\n\t\t\tif (terminalPositionChanged) {\n\t\t\t\tconst newOrientation = newTerminalLocation === ViewContainerLocation.Panel && newPanelPosition === Position.BOTTOM ? Orientation.HORIZONTAL : Orientation.VERTICAL;\n\t\t\t\tthis._splitPaneContainer.setOrientation(newOrientation);\n\t\t\t\tthis._panelPosition = newPanelPosition;\n\t\t\t\tthis._terminalLocation = newTerminalLocation;\n\t\t\t\tthis._onPanelOrientationChanged.fire(this._splitPaneContainer.orientation);\n\t\t\t}\n\t\t\tthis._splitPaneContainer.layout(width, height);\n\t\t\tif (this._initialRelativeSizes && this._visible) {\n\t\t\t\tthis.resizePanes(this._initialRelativeSizes);\n\t\t\t\tthis._initialRelativeSizes = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tfocusPreviousPane(): void {\n\t\tconst newIndex = this._activeInstanceIndex === 0 ? this._terminalInstances.length - 1 : this._activeInstanceIndex - 1;\n\t\tthis.setActiveInstanceByIndex(newIndex);\n\t}\n\n\tfocusNextPane(): void {\n\t\tconst newIndex = this._activeInstanceIndex === this._terminalInstances.length - 1 ? 0 : this._activeInstanceIndex + 1;\n\t\tthis.setActiveInstanceByIndex(newIndex);\n\t}\n\n\tresizePane(direction: Direction): void {\n\t\tif (!this._splitPaneContainer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isHorizontal = (direction === Direction.Left || direction === Direction.Right);\n\t\tconst font = this._terminalService.configHelper.getFont();\n\t\t// TODO: Support letter spacing and line height\n\t\tconst charSize = (isHorizontal ? font.charWidth : font.charHeight);\n\t\tif (charSize) {\n\t\t\tthis._splitPaneContainer.resizePane(this._activeInstanceIndex, direction, charSize * Constants.ResizePartCellCount, getPartByLocation(this._terminalLocation));\n\t\t}\n\t}\n\n\tresizePanes(relativeSizes: number[]): void {\n\t\tif (!this._splitPaneContainer) {\n\t\t\tthis._initialRelativeSizes = relativeSizes;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._splitPaneContainer.resizePanes(relativeSizes);\n\t}\n}\n"]}