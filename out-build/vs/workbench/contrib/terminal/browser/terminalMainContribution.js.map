{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/browser/terminalMainContribution.ts"],"names":[],"mappings":"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","file":"terminalMainContribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { TerminalLocation } from 'vs/platform/terminal/common/terminal';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { ITerminalEditorService, ITerminalGroupService, ITerminalInstanceService, ITerminalService, terminalEditorId } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { parseTerminalUri } from 'vs/workbench/contrib/terminal/browser/terminalUri';\nimport { terminalStrings } from 'vs/workbench/contrib/terminal/common/terminalStrings';\nimport { IEditorResolverService, RegisteredEditorPriority } from 'vs/workbench/services/editor/common/editorResolverService';\nimport { IEmbedderTerminalService } from 'vs/workbench/services/terminal/common/embedderTerminalService';\n\n/**\n * The main contribution for the terminal contrib. This contains calls to other components necessary\n * to set up the terminal but don't need to be tracked in the long term (where TerminalService would\n * be more relevant).\n */\nexport class TerminalMainContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@IEmbedderTerminalService embedderTerminalService: IEmbedderTerminalService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@ITerminalService terminalService: ITerminalService,\n\t\t@ITerminalEditorService terminalEditorService: ITerminalEditorService,\n\t\t@ITerminalGroupService terminalGroupService: ITerminalGroupService,\n\t\t@ITerminalInstanceService terminalInstanceService: ITerminalInstanceService\n\t) {\n\t\tsuper();\n\n\t\t// Register terminal editors\n\t\teditorResolverService.registerEditor(\n\t\t\t`${Schemas.vscodeTerminal}:/**`,\n\t\t\t{\n\t\t\t\tid: terminalEditorId,\n\t\t\t\tlabel: terminalStrings.terminal,\n\t\t\t\tpriority: RegisteredEditorPriority.exclusive\n\t\t\t},\n\t\t\t{\n\t\t\t\tcanSupportResource: uri => uri.scheme === Schemas.vscodeTerminal,\n\t\t\t\tsinglePerResource: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreateEditorInput: async ({ resource, options }) => {\n\t\t\t\t\tlet instance = terminalService.getInstanceFromResource(resource);\n\t\t\t\t\tif (instance) {\n\t\t\t\t\t\tconst sourceGroup = terminalGroupService.getGroupForInstance(instance);\n\t\t\t\t\t\tsourceGroup?.removeInstance(instance);\n\t\t\t\t\t} else { // Terminal from a different window\n\t\t\t\t\t\tconst terminalIdentifier = parseTerminalUri(resource);\n\t\t\t\t\t\tif (!terminalIdentifier.instanceId) {\n\t\t\t\t\t\t\tthrow new Error('Terminal identifier without instanceId');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst primaryBackend = terminalService.getPrimaryBackend();\n\t\t\t\t\t\tif (!primaryBackend) {\n\t\t\t\t\t\t\tthrow new Error('No terminal primary backend');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst attachPersistentProcess = await primaryBackend.requestDetachInstance(terminalIdentifier.workspaceId, terminalIdentifier.instanceId);\n\t\t\t\t\t\tif (!attachPersistentProcess) {\n\t\t\t\t\t\t\tthrow new Error('No terminal persistent process to attach');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinstance = terminalInstanceService.createInstance({ attachPersistentProcess }, TerminalLocation.Editor);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst resolvedResource = terminalEditorService.resolveResource(instance);\n\t\t\t\t\tconst editor = terminalEditorService.getInputFromResource(resolvedResource);\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\t\tforceReload: true,\n\t\t\t\t\t\t\toverride: terminalEditorId\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Register a resource formatter for terminal URIs\n\t\tlabelService.registerFormatter({\n\t\t\tscheme: Schemas.vscodeTerminal,\n\t\t\tformatting: {\n\t\t\t\tlabel: '${path}',\n\t\t\t\tseparator: ''\n\t\t\t}\n\t\t});\n\n\t\tembedderTerminalService.onDidCreateTerminal(async embedderTerminal => {\n\t\t\tconst terminal = await terminalService.createTerminal({\n\t\t\t\tconfig: embedderTerminal,\n\t\t\t\tlocation: TerminalLocation.Panel\n\t\t\t});\n\t\t\tterminalService.setActiveInstance(terminal);\n\t\t\tawait terminalService.revealActiveTerminal();\n\t\t});\n\t}\n}\n"]}