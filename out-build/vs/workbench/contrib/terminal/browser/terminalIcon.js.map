{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/browser/terminalIcon.ts"],"names":[],"mappings":"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","file":"terminalIcon.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { hash } from 'vs/base/common/hash';\nimport { URI } from 'vs/base/common/uri';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtensionTerminalProfile, ITerminalProfile } from 'vs/platform/terminal/common/terminal';\nimport { getIconRegistry } from 'vs/platform/theme/common/iconRegistry';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\nimport { IColorTheme } from 'vs/platform/theme/common/themeService';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { ITerminalInstance } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { ITerminalProfileResolverService } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { ansiColorMap } from 'vs/workbench/contrib/terminal/common/terminalColorRegistry';\n\n\nexport function getColorClass(colorKey: string): string;\nexport function getColorClass(profile: ITerminalProfile): string;\nexport function getColorClass(terminal: ITerminalInstance): string | undefined;\nexport function getColorClass(extensionTerminalProfile: IExtensionTerminalProfile): string | undefined;\nexport function getColorClass(terminalOrColorKey: ITerminalInstance | IExtensionTerminalProfile | ITerminalProfile | string): string | undefined {\n\tlet color = undefined;\n\tif (typeof terminalOrColorKey === 'string') {\n\t\tcolor = terminalOrColorKey;\n\t} else if (terminalOrColorKey.color) {\n\t\tcolor = terminalOrColorKey.color.replace(/\\./g, '_');\n\t} else if (ThemeIcon.isThemeIcon(terminalOrColorKey.icon) && terminalOrColorKey.icon.color) {\n\t\tcolor = terminalOrColorKey.icon.color.id.replace(/\\./g, '_');\n\t}\n\tif (color) {\n\t\treturn `terminal-icon-${color.replace(/\\./g, '_')}`;\n\t}\n\treturn undefined;\n}\n\nexport function getStandardColors(colorTheme: IColorTheme): string[] {\n\tconst standardColors: string[] = [];\n\n\tfor (const colorKey in ansiColorMap) {\n\t\tconst color = colorTheme.getColor(colorKey);\n\t\tif (color && !colorKey.toLowerCase().includes('bright')) {\n\t\t\tstandardColors.push(colorKey);\n\t\t}\n\t}\n\treturn standardColors;\n}\n\nexport function getColorStyleElement(colorTheme: IColorTheme): HTMLElement {\n\tconst standardColors = getStandardColors(colorTheme);\n\tconst styleElement = document.createElement('style');\n\tlet css = '';\n\tfor (const colorKey of standardColors) {\n\t\tconst colorClass = getColorClass(colorKey);\n\t\tconst color = colorTheme.getColor(colorKey);\n\t\tif (color) {\n\t\t\tcss += (\n\t\t\t\t`.monaco-workbench .${colorClass} .codicon:first-child:not(.codicon-split-horizontal):not(.codicon-trashcan):not(.file-icon)` +\n\t\t\t\t`{ color: ${color} !important; }`\n\t\t\t);\n\t\t}\n\t}\n\tstyleElement.textContent = css;\n\treturn styleElement;\n}\n\nexport function getColorStyleContent(colorTheme: IColorTheme, editor?: boolean): string {\n\tconst standardColors = getStandardColors(colorTheme);\n\tlet css = '';\n\tfor (const colorKey of standardColors) {\n\t\tconst colorClass = getColorClass(colorKey);\n\t\tconst color = colorTheme.getColor(colorKey);\n\t\tif (color) {\n\t\t\tif (editor) {\n\t\t\t\tcss += (\n\t\t\t\t\t`.monaco-workbench .show-file-icons .file-icon.terminal-tab.${colorClass}::before` +\n\t\t\t\t\t`{ color: ${color} !important; }`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcss += (\n\t\t\t\t\t`.monaco-workbench .${colorClass} .codicon:first-child:not(.codicon-split-horizontal):not(.codicon-trashcan):not(.file-icon)` +\n\t\t\t\t\t`{ color: ${color} !important; }`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\treturn css;\n}\n\nexport function getUriClasses(terminal: ITerminalInstance | IExtensionTerminalProfile | ITerminalProfile, colorScheme: ColorScheme, extensionContributed?: boolean): string[] | undefined {\n\tconst icon = terminal.icon;\n\tif (!icon) {\n\t\treturn undefined;\n\t}\n\tconst iconClasses: string[] = [];\n\tlet uri = undefined;\n\n\tif (extensionContributed) {\n\t\tif (typeof icon === 'string' && (icon.startsWith('$(') || getIconRegistry().getIcon(icon))) {\n\t\t\treturn iconClasses;\n\t\t} else if (typeof icon === 'string') {\n\t\t\turi = URI.parse(icon);\n\t\t}\n\t}\n\n\tif (icon instanceof URI) {\n\t\turi = icon;\n\t} else if (icon instanceof Object && 'light' in icon && 'dark' in icon) {\n\t\turi = colorScheme === ColorScheme.LIGHT ? icon.light : icon.dark;\n\t}\n\tif (uri instanceof URI) {\n\t\tconst uriIconKey = hash(uri.path).toString(36);\n\t\tconst className = `terminal-uri-icon-${uriIconKey}`;\n\t\ticonClasses.push(className);\n\t\ticonClasses.push(`terminal-uri-icon`);\n\t}\n\treturn iconClasses;\n}\n\nexport function getIconId(accessor: ServicesAccessor, terminal: ITerminalInstance | IExtensionTerminalProfile | ITerminalProfile): string {\n\tif (!terminal.icon || (terminal.icon instanceof Object && !('id' in terminal.icon))) {\n\t\treturn accessor.get(ITerminalProfileResolverService).getDefaultIcon().id;\n\t}\n\treturn typeof terminal.icon === 'string' ? terminal.icon : terminal.icon.id;\n}\n"]}