{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAkBzF,IAAM,IAAI,GAAV,MAAM,IAAqB,SAAQ,eAAG;QAK5C,IAAI,SAAS;YACZ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,iBAAiB,CAAC,EAAE,EAAyB,CAAC,CAAC;QAC/F,CAAC;QA+BD,YACqB,CAA+B,EAC5B,CAA2C,EACnD,CAAmC,EAC1B,CAA4C;YAEpE,KAAK,EAAE,CAAC;YALoB,MAAC,GAAD,CAAC,CAAsB;YACX,MAAC,GAAD,CAAC,CAAyB;YAClC,MAAC,GAAD,CAAC,CAAiB;YACT,MAAC,GAAD,CAAC,CAA0B;YAvCrE,WAAM,GAAqB,EAAE,CAAC;YAC9B,qBAAgB,GAAW,CAAC,CAAC,CAAC;YAK9B,qBAAgB,GAA8B,YAAY,CAAC;YAM1C,MAAC,GAAyB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAkC,CAAC,CAAC;YAC5F,2BAAsB,GAAG,IAAI,CAAC,CAAC,CAAuB,KAAK,CAAC;YACpD,MAAC,GAAoB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAsB,CAAC,CAAC;YAC3E,sBAAiB,GAAG,IAAI,CAAC,CAAC,CAAkB,KAAK,CAAC;YAC1C,MAAC,GAAoB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YACjE,sBAAiB,GAAG,IAAI,CAAC,CAAC,CAAkB,KAAK,CAAC;YAC1C,MAAC,GAAY,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YACzD,cAAS,GAAG,IAAI,CAAC,CAAC,CAAU,KAAK,CAAC;YAE1B,MAAC,GAAuB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAyB,CAAC,CAAC;YACjF,yBAAoB,GAAG,IAAI,CAAC,CAAC,CAAqB,KAAK,CAAC;YAChD,MAAC,GAAqB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAyB,CAAC,CAAC;YAC/E,uBAAkB,GAAG,IAAI,CAAC,CAAC,CAAmB,KAAK,CAAC;YAC5C,MAAC,GAA4B,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAqC,CAAC,CAAC;YAClG,8BAAyB,GAAG,IAAI,CAAC,CAAC,CAA0B,KAAK,CAAC;YAC1D,MAAC,GAAuB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YACpE,yBAAoB,GAAG,IAAI,CAAC,CAAC,CAAqB,KAAK,CAAC;YAChD,MAAC,GAAgC,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAyB,CAAC,CAAC;YAC1F,kCAA6B,GAAG,IAAI,CAAC,CAAC,CAA8B,KAAK,CAAC;YAElE,MAAC,GAA8B,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAmB,CAAC,CAAC;YAClF,gCAA2B,GAAG,IAAI,CAAC,CAAC,CAA4B,KAAK,CAAC;YAU9E,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAY,KAAK,CAAC,CAAC,CAAC;YAE1D,IAAI,CAAC,CAAC,GAA+B,wCAAmB,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAkB,CAAC;YAEpG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAA6B,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAEzF,aAAK,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAClG,CAAC;QAED,SAAS;YACR,6EAA6E;YAC7E,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAsB,wBAAwB,CAAC,cAAG,CAAc,CAAC;YACrF,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,CAAsB,qBAAqB,CAAC,KAAK,CAAC,CAAC,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzG,IAAI,CAAC,CAAC,CAAa,SAAS,CAAC,cAAG,CAAc,CAAC;gBAC/C,wCAAmB,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACzE;QACF,CAAC;QAED,IAAI,WAAW;YACd,IAAI,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBAC7E,OAAO,SAAS,CAAC;aACjB;YACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,WAAW,CAAC,KAAiC;YAChD,IAAI,KAAK,KAAK,SAAS,EAAE;gBACxB,2FAA2F;gBAC3F,OAAO;aACP;YACD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;YACtD,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC;QAED,IAAI,cAAc;YACjB,OAAO,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC;QACzC,CAAC;QAED,iBAAiB,CAAC,QAA2B;YAC5C,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAe,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;QAC1E,CAAC;QAEO,CAAC,CAAe,UAAkB;YACzC,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC;YACjF,IAAI,aAAa,KAAK,CAAC,CAAC,EAAE;gBACzB,MAAM,IAAI,KAAK,CAAC,oBAAoB,UAAU,iDAAiD,CAAC,CAAC;aACjG;YACD,OAAO,aAAa,CAAC;QACtB,CAAC;QAED,YAAY,CAAC,SAAsB;YAClC,IAAI,CAAC,CAAC,GAAY,SAAS,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;QAChE,CAAC;QAED,KAAK,CAAC,SAAS;YACd,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,OAAO;aACP;YACD,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAa,mBAAmB,CAAmB,cAAG,CAAc,CAAC;YACxF,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,CAAC;QACvC,CAAC;QAED,KAAK,CAAC,UAAU;YACf,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,OAAO;aACP;YAED,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAa,mBAAmB,CAAmB,cAAG,CAAc,CAAC;YACxF,IAAI,EAAE,kBAAkB,EAAE,UAAU,EAAE,CAAC;QACxC,CAAC;QAED,KAAK,CAAC,mBAAmB;YACxB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;QAED,WAAW,CAAC,aAAsD;YACjE,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAqB,cAAc,CAAC,oBAAI,EAAW,IAAI,CAAC,CAAC,EAAW,aAAa,CAAC,CAAC;YACvG,kFAAkF;YAClF,KAAK,CAAC,yBAAyB,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAA4B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACtG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAqB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAqB,CAAC,CAAC;YAC7G,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAmB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAmB,CAAC,CAAC;YACvG,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,EAAE;gBACvD,IAAI,KAAK,KAAK,IAAI,CAAC,WAAW,EAAE;oBAC/B,IAAI,CAAC,CAAC,CAA0B,IAAI,CAAC,CAAC,CAAC,CAAC;iBACxC;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,6BAA6B,CAAC,IAAI,CAAC,CAAC,CAA8B,IAAI,EAAE,IAAI,CAAC,CAAC,CAA8B,CAAC,CAAC;YACxI,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAqB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAqB,CAAC,CAAC;YAC3G,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAkB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAkB,CAAC,CAAC;YAC7F,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvC,IAAI,CAAC,CAAC,CAAqB,IAAI,EAAE,CAAC;aAClC;YACD,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,oFAAoF;gBACpF,oFAAoF;gBACpF,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;aACjC;YACD,IAAI,CAAC,CAAC,CAAkB,IAAI,EAAE,CAAC;YAC/B,OAAO,KAAK,CAAC;QACd,CAAC;QAED,KAAK,CAAC,SAAS,CAAC,KAAe;YAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAa,mBAAmB,CAAC,cAAG,CAAc;mBACjE,MAAM,IAAI,CAAC,CAAC,CAAa,QAAQ,CAAC,cAAG,EAAe,KAAK,CAAC,CAAC;YAC/D,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;YAExB,IAAI,KAAK,EAAE;gBACV,wDAAwD;gBACxD,0CAA0C;gBAC1C,MAAM,IAAA,WAAG,EAAK,CAAC,CAAC,CAAC;gBACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;gBACrC,IAAI,QAAQ,EAAE;oBACb,+EAA+E;oBAC/E,0DAA0D;oBAC1D,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;wBAC9B,MAAM,IAAI,CAAC,CAAC,CAAa,QAAQ,CAAC,cAAG,EAAe,KAAK,CAAC,CAAC;qBAC3D;oBACD,MAAM,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;iBACpC;aACD;YACD,IAAI,CAAC,CAAC,CAAU,IAAI,EAAE,CAAC;QACxB,CAAC;QAED,uBAAuB,CAAC,QAAyB;YAChD,OAAO,IAAA,kBAAI,EAAoB,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAC1D,CAAC;QAEO,CAAC,CAAY,KAAqB;YACzC,yDAAyD;YACzD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,MAAM,cAAc,GAAG,KAAK,KAAK,WAAW,CAAC;YAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBACjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,CAAC,CAAkB,IAAI,EAAE,CAAC;aAC/B;YAED,IAAI,cAAc,EAAE;gBACnB,uCAAuC;gBACvC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3B,MAAM,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;oBAC7E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;oBAC3C,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;iBACjC;aACD;iBAAM;gBACN,0EAA0E;gBAC1E,IAAI,IAAI,CAAC,gBAAgB,GAAG,KAAK,EAAE;oBAClC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;iBACtD;aACD;YACD,wFAAwF;YACxF,sBAAsB;YACtB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBAChD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aACnD;YAED,IAAI,CAAC,CAAC,CAAqB,IAAI,EAAE,CAAC;YAClC,IAAI,CAAC,CAAC,CAAkB,IAAI,EAAE,CAAC;YAC/B,IAAI,cAAc,EAAE;gBACnB,IAAI,CAAC,CAAC,CAAuB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACpD,IAAI,CAAC,CAAC,CAA0B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAC1D;QACF,CAAC;QAED;;;WAGG;QACH,qBAAqB,CAAC,KAAa,EAAE,KAAe;YACnD,oDAAoD;YACpD,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7C,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,CAAC,EAAE;oBACjC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;oBAC3B,IAAI,CAAC,CAAC,CAAuB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACpD,IAAI,CAAC,CAAC,CAA0B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;iBAC1D;gBACD,OAAO;aACP;YAED,wBAAwB;YACxB,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBAC7C,OAAO;aACP;YAED,uCAAuC;YACvC,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC;YACxC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,KAAK,IAAI,cAAc,KAAK,IAAI,CAAC,WAAW,EAAE;gBACjD,IAAI,CAAC,CAAC,CAAuB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACpD,IAAI,CAAC,CAAC,CAA0B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAC1D;QACF,CAAC;QAEO,CAAC,CAAoB,KAAa;YACzC,IAAI,iBAAiB,GAAG,CAAC,CAAC;YAC1B,OAAO,KAAK,IAAI,CAAC,IAAI,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBAC5D,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;gBAC7C,MAAM,KAAK,GAAG,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAC7C,IAAI,KAAK,GAAG,KAAK,EAAE;oBAClB,OAAO;wBACN,KAAK;wBACL,UAAU,EAAE,iBAAiB;wBAC7B,QAAQ,EAAE,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC;wBACxC,aAAa,EAAE,KAAK;qBACpB,CAAC;iBACF;gBACD,KAAK,IAAI,KAAK,CAAC;gBACf,iBAAiB,EAAE,CAAC;aACpB;YACD,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,wBAAwB,CAAC,KAAa;YACrC,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;YAC3C,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAoB,KAAK,CAAC,CAAC;YAC1D,MAAM,iBAAiB,GAAG,gBAAgB,EAAE,KAAK,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;YACpG,IAAI,CAAC,gBAAgB,IAAI,cAAc,KAAK,iBAAiB,EAAE;gBAC9D,OAAO;aACP;YAED,MAAM,mBAAmB,GAAG,gBAAgB,CAAC,aAAa,CAAC;YAE3D,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,UAAU,CAAC;YACpD,IAAI,CAAC,CAAC,CAAuB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACpD,gBAAgB,CAAC,KAAK,CAAC,wBAAwB,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAC5E,CAAC;QAED,oBAAoB;YACnB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC5B,OAAO;aACP;YACD,IAAI,QAAQ,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;YACzC,IAAI,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBACnC,QAAQ,GAAG,CAAC,CAAC;aACb;YACD,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC;QAED,wBAAwB;YACvB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC5B,OAAO;aACP;YACD,IAAI,QAAQ,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;YACzC,IAAI,QAAQ,GAAG,CAAC,EAAE;gBACjB,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;aAClC;YACD,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC;QAED,SAAS,CAAC,MAAyB,EAAE,MAAyB;YAC7D,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YACrD,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YAErD,uBAAuB;YACvB,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,EAAE;gBACjC,OAAO;aACP;YAED,sDAAsD;YACtD,IAAI,WAAW,KAAK,WAAW,EAAE;gBAChC,MAAM,KAAK,GAAG,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAC5D,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oBACjB,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;iBACxC;gBACD,OAAO;aACP;YAED,sCAAsC;YACtC,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAC1D,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAC1D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;YACrD,IAAI,CAAC,CAAC,CAAqB,IAAI,EAAE,CAAC;QACnC,CAAC;QAED,cAAc,CAAC,MAAyB;YACvC,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YACrD,IAAI,CAAC,WAAW,EAAE;gBACjB,OAAO;aACP;YACD,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAC1D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9B,IAAI,CAAC,CAAC,CAAqB,IAAI,EAAE,CAAC;QACnC,CAAC;QAED,YAAY,CAAC,MAAyB,EAAE,MAAyB,EAAE,IAAwB;YAC1F,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YACrD,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YACrD,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,EAAE;gBACjC,OAAO;aACP;YAED,iDAAiD;YACjD,IAAI,WAAW,KAAK,WAAW,EAAE;gBAChC,cAAc;gBACd,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gBACnC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aAChC;YAED,oCAAoC;YACpC,MAAM,KAAK,GAAG,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzF,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACzC,CAAC;QAED,eAAe,CAAC,QAA2B;YAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;YACpD,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvD,OAAO;aACP;YAED,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC;QAED,aAAa,CAAC,SAA8B;YAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,KAAK,EAAE;gBACV,IAAI,eAAe,GAAG,IAAI,CAAC;gBAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxD,IAAI,KAAK,CAAC,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;wBACnD,eAAe,GAAG,KAAK,CAAC;wBACxB,MAAM;qBACN;iBACD;gBACD,IAAI,CAAC,eAAe,EAAE;oBACrB,OAAO;iBACP;aACD;YACD,6FAA6F;YAC7F,IAAI,iBAAiB,GAAkC,SAAS,CAAC;YACjE,IAAI,cAAc,GAA+B,SAAS,CAAC;YAC3D,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;gBACjC,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;gBACjD,IAAI,KAAK,EAAE,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC1C,iBAAiB,GAAG,QAAQ,CAAC;oBAC7B,cAAc,GAAG,KAAK,CAAC;oBACvB,MAAM;iBACN;aACD;YAED,+BAA+B;YAC/B,IAAI,CAAC,cAAc,EAAE;gBACpB,cAAc,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;aACpC;YAED,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,KAAK,cAAc,CAAC;YAE3D,4DAA4D;YAC5D,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;gBACjC,IAAI,QAAQ,KAAK,iBAAiB,EAAE;oBACnC,SAAS;iBACT;gBAED,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;gBACpD,IAAI,CAAC,QAAQ,EAAE;oBACd,4CAA4C;oBAC5C,SAAS;iBACT;gBACD,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBAClC,cAAc,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;aACrC;YAED,0BAA0B;YAC1B,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAErC,cAAc;YACd,IAAI,CAAC,CAAC,CAAqB,IAAI,EAAE,CAAC;YAClC,IAAI,CAAC,cAAc,EAAE;gBACpB,IAAI,CAAC,CAAC,CAAuB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACpD;QACF,CAAC;QAED,eAAe,CAAC,QAA2B;YAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,CAAC,KAAK,EAAE;gBACX,OAAO,KAAK,CAAC;aACb;YACD,OAAO,KAAK,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;QAC3C,CAAC;QAED,mBAAmB,CAAC,QAA2B;YAC9C,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9E,CAAC;QAED,cAAc;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBAC3F,OAAO,GAAG,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;YAC1D,CAAC,CAAC,CAAC;QACJ,CAAC;QAED;;;;;WAKG;QACH,gBAAgB;YACf,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAa,aAAa,CAAC,cAAG,CAAc,CAAC;YACnE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,KAAK,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACrF,CAAC;KACD,CAAA;IAjcY,oBAAI;mBAAJ,IAAI;QAuCd,WAAA,gBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,WAAG,CAAA;OA1CO,IAAI,CAichB","file":"terminalGroupService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Orientation } from 'vs/base/browser/ui/sash/sash';\nimport { timeout } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IShellLaunchConfig } from 'vs/platform/terminal/common/terminal';\nimport { IViewDescriptorService, IViewsService } from 'vs/workbench/common/views';\nimport { ITerminalGroup, ITerminalGroupService, ITerminalInstance } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { TerminalGroup } from 'vs/workbench/contrib/terminal/browser/terminalGroup';\nimport { getInstanceFromResource } from 'vs/workbench/contrib/terminal/browser/terminalUri';\nimport { TerminalViewPane } from 'vs/workbench/contrib/terminal/browser/terminalView';\nimport { TERMINAL_VIEW_ID } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { TerminalContextKeys } from 'vs/workbench/contrib/terminal/common/terminalContextKey';\n\nexport class TerminalGroupService extends Disposable implements ITerminalGroupService {\n\tdeclare _serviceBrand: undefined;\n\n\tgroups: ITerminalGroup[] = [];\n\tactiveGroupIndex: number = -1;\n\tget instances(): ITerminalInstance[] {\n\t\treturn this.groups.reduce((p, c) => p.concat(c.terminalInstances), [] as ITerminalInstance[]);\n\t}\n\n\tlastAccessedMenu: 'inline-tab' | 'tab-list' = 'inline-tab';\n\n\tprivate _terminalGroupCountContextKey: IContextKey<number>;\n\n\tprivate _container: HTMLElement | undefined;\n\n\tprivate readonly _onDidChangeActiveGroup = this._register(new Emitter<ITerminalGroup | undefined>());\n\treadonly onDidChangeActiveGroup = this._onDidChangeActiveGroup.event;\n\tprivate readonly _onDidDisposeGroup = this._register(new Emitter<ITerminalGroup>());\n\treadonly onDidDisposeGroup = this._onDidDisposeGroup.event;\n\tprivate readonly _onDidChangeGroups = this._register(new Emitter<void>());\n\treadonly onDidChangeGroups = this._onDidChangeGroups.event;\n\tprivate readonly _onDidShow = this._register(new Emitter<void>());\n\treadonly onDidShow = this._onDidShow.event;\n\n\tprivate readonly _onDidDisposeInstance = this._register(new Emitter<ITerminalInstance>());\n\treadonly onDidDisposeInstance = this._onDidDisposeInstance.event;\n\tprivate readonly _onDidFocusInstance = this._register(new Emitter<ITerminalInstance>());\n\treadonly onDidFocusInstance = this._onDidFocusInstance.event;\n\tprivate readonly _onDidChangeActiveInstance = this._register(new Emitter<ITerminalInstance | undefined>());\n\treadonly onDidChangeActiveInstance = this._onDidChangeActiveInstance.event;\n\tprivate readonly _onDidChangeInstances = this._register(new Emitter<void>());\n\treadonly onDidChangeInstances = this._onDidChangeInstances.event;\n\tprivate readonly _onDidChangeInstanceCapability = this._register(new Emitter<ITerminalInstance>());\n\treadonly onDidChangeInstanceCapability = this._onDidChangeInstanceCapability.event;\n\n\tprivate readonly _onDidChangePanelOrientation = this._register(new Emitter<Orientation>());\n\treadonly onDidChangePanelOrientation = this._onDidChangePanelOrientation.event;\n\n\tconstructor(\n\t\t@IContextKeyService private _contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IViewDescriptorService private readonly _viewDescriptorService: IViewDescriptorService\n\t) {\n\t\tsuper();\n\n\t\tthis.onDidDisposeGroup(group => this._removeGroup(group));\n\n\t\tthis._terminalGroupCountContextKey = TerminalContextKeys.groupCount.bindTo(this._contextKeyService);\n\n\t\tthis.onDidChangeGroups(() => this._terminalGroupCountContextKey.set(this.groups.length));\n\n\t\tEvent.any(this.onDidChangeActiveGroup, this.onDidChangeInstances)(() => this.updateVisibility());\n\t}\n\n\thidePanel(): void {\n\t\t// Hide the panel if the terminal is in the panel and it has no sibling views\n\t\tconst panel = this._viewDescriptorService.getViewContainerByViewId(TERMINAL_VIEW_ID);\n\t\tif (panel && this._viewDescriptorService.getViewContainerModel(panel).activeViewDescriptors.length === 1) {\n\t\t\tthis._viewsService.closeView(TERMINAL_VIEW_ID);\n\t\t\tTerminalContextKeys.tabsMouse.bindTo(this._contextKeyService).set(false);\n\t\t}\n\t}\n\n\tget activeGroup(): ITerminalGroup | undefined {\n\t\tif (this.activeGroupIndex < 0 || this.activeGroupIndex >= this.groups.length) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.groups[this.activeGroupIndex];\n\t}\n\tset activeGroup(value: ITerminalGroup | undefined) {\n\t\tif (value === undefined) {\n\t\t\t// Setting to undefined is not possible, this can only be done when removing the last group\n\t\t\treturn;\n\t\t}\n\t\tconst index = this.groups.findIndex(e => e === value);\n\t\tthis.setActiveGroupByIndex(index);\n\t}\n\n\tget activeInstance(): ITerminalInstance | undefined {\n\t\treturn this.activeGroup?.activeInstance;\n\t}\n\n\tsetActiveInstance(instance: ITerminalInstance) {\n\t\tthis.setActiveInstanceByIndex(this._getIndexFromId(instance.instanceId));\n\t}\n\n\tprivate _getIndexFromId(terminalId: number): number {\n\t\tconst terminalIndex = this.instances.findIndex(e => e.instanceId === terminalId);\n\t\tif (terminalIndex === -1) {\n\t\t\tthrow new Error(`Terminal with ID ${terminalId} does not exist (has it already been disposed?)`);\n\t\t}\n\t\treturn terminalIndex;\n\t}\n\n\tsetContainer(container: HTMLElement) {\n\t\tthis._container = container;\n\t\tthis.groups.forEach(group => group.attachToElement(container));\n\t}\n\n\tasync focusTabs(): Promise<void> {\n\t\tif (this.instances.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.showPanel(true);\n\t\tconst pane = this._viewsService.getActiveViewWithId<TerminalViewPane>(TERMINAL_VIEW_ID);\n\t\tpane?.terminalTabbedView?.focusTabs();\n\t}\n\n\tasync focusHover(): Promise<void> {\n\t\tif (this.instances.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pane = this._viewsService.getActiveViewWithId<TerminalViewPane>(TERMINAL_VIEW_ID);\n\t\tpane?.terminalTabbedView?.focusHover();\n\t}\n\n\tasync focusActiveInstance(): Promise<void> {\n\t\treturn this.showPanel(true);\n\t}\n\n\tcreateGroup(slcOrInstance?: IShellLaunchConfig | ITerminalInstance): ITerminalGroup {\n\t\tconst group = this._instantiationService.createInstance(TerminalGroup, this._container, slcOrInstance);\n\t\t// TODO: Move panel orientation change into this file so it's not fired many times\n\t\tgroup.onPanelOrientationChanged((orientation) => this._onDidChangePanelOrientation.fire(orientation));\n\t\tthis.groups.push(group);\n\t\tgroup.addDisposable(group.onDidDisposeInstance(this._onDidDisposeInstance.fire, this._onDidDisposeInstance));\n\t\tgroup.addDisposable(group.onDidFocusInstance(this._onDidFocusInstance.fire, this._onDidFocusInstance));\n\t\tgroup.addDisposable(group.onDidChangeActiveInstance(e => {\n\t\t\tif (group === this.activeGroup) {\n\t\t\t\tthis._onDidChangeActiveInstance.fire(e);\n\t\t\t}\n\t\t}));\n\t\tgroup.addDisposable(group.onDidChangeInstanceCapability(this._onDidChangeInstanceCapability.fire, this._onDidChangeInstanceCapability));\n\t\tgroup.addDisposable(group.onInstancesChanged(this._onDidChangeInstances.fire, this._onDidChangeInstances));\n\t\tgroup.addDisposable(group.onDisposed(this._onDidDisposeGroup.fire, this._onDidDisposeGroup));\n\t\tif (group.terminalInstances.length > 0) {\n\t\t\tthis._onDidChangeInstances.fire();\n\t\t}\n\t\tif (this.instances.length === 1) {\n\t\t\t// It's the first instance so it should be made active automatically, this must fire\n\t\t\t// after onInstancesChanged so consumers can react to the instance being added first\n\t\t\tthis.setActiveInstanceByIndex(0);\n\t\t}\n\t\tthis._onDidChangeGroups.fire();\n\t\treturn group;\n\t}\n\n\tasync showPanel(focus?: boolean): Promise<void> {\n\t\tconst pane = this._viewsService.getActiveViewWithId(TERMINAL_VIEW_ID)\n\t\t\t?? await this._viewsService.openView(TERMINAL_VIEW_ID, focus);\n\t\tpane?.setExpanded(true);\n\n\t\tif (focus) {\n\t\t\t// Do the focus call asynchronously as going through the\n\t\t\t// command palette will force editor focus\n\t\t\tawait timeout(0);\n\t\t\tconst instance = this.activeInstance;\n\t\t\tif (instance) {\n\t\t\t\t// HACK: Ensure the panel is still visible at this point as there may have been\n\t\t\t\t// a request since it was opened to show a different panel\n\t\t\t\tif (pane && !pane.isVisible()) {\n\t\t\t\t\tawait this._viewsService.openView(TERMINAL_VIEW_ID, focus);\n\t\t\t\t}\n\t\t\t\tawait instance.focusWhenReady(true);\n\t\t\t}\n\t\t}\n\t\tthis._onDidShow.fire();\n\t}\n\n\tgetInstanceFromResource(resource: URI | undefined): ITerminalInstance | undefined {\n\t\treturn getInstanceFromResource(this.instances, resource);\n\t}\n\n\tprivate _removeGroup(group: ITerminalGroup) {\n\t\t// Get the index of the group and remove it from the list\n\t\tconst activeGroup = this.activeGroup;\n\t\tconst wasActiveGroup = group === activeGroup;\n\t\tconst index = this.groups.indexOf(group);\n\t\tif (index !== -1) {\n\t\t\tthis.groups.splice(index, 1);\n\t\t\tthis._onDidChangeGroups.fire();\n\t\t}\n\n\t\tif (wasActiveGroup) {\n\t\t\t// Adjust focus if the group was active\n\t\t\tif (this.groups.length > 0) {\n\t\t\t\tconst newIndex = index < this.groups.length ? index : this.groups.length - 1;\n\t\t\t\tthis.setActiveGroupByIndex(newIndex, true);\n\t\t\t\tthis.activeInstance?.focus(true);\n\t\t\t}\n\t\t} else {\n\t\t\t// Adjust the active group if the removed group was above the active group\n\t\t\tif (this.activeGroupIndex > index) {\n\t\t\t\tthis.setActiveGroupByIndex(this.activeGroupIndex - 1);\n\t\t\t}\n\t\t}\n\t\t// Ensure the active group is still valid, this should set the activeGroupIndex to -1 if\n\t\t// there are no groups\n\t\tif (this.activeGroupIndex >= this.groups.length) {\n\t\t\tthis.setActiveGroupByIndex(this.groups.length - 1);\n\t\t}\n\n\t\tthis._onDidChangeInstances.fire();\n\t\tthis._onDidChangeGroups.fire();\n\t\tif (wasActiveGroup) {\n\t\t\tthis._onDidChangeActiveGroup.fire(this.activeGroup);\n\t\t\tthis._onDidChangeActiveInstance.fire(this.activeInstance);\n\t\t}\n\t}\n\n\t/**\n\t * @param force Whether to force the group change, this should be used when the previous active\n\t * group has been removed.\n\t */\n\tsetActiveGroupByIndex(index: number, force?: boolean) {\n\t\t// Unset active group when the last group is removed\n\t\tif (index === -1 && this.groups.length === 0) {\n\t\t\tif (this.activeGroupIndex !== -1) {\n\t\t\t\tthis.activeGroupIndex = -1;\n\t\t\t\tthis._onDidChangeActiveGroup.fire(this.activeGroup);\n\t\t\t\tthis._onDidChangeActiveInstance.fire(this.activeInstance);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure index is valid\n\t\tif (index < 0 || index >= this.groups.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fire group/instance change if needed\n\t\tconst oldActiveGroup = this.activeGroup;\n\t\tthis.activeGroupIndex = index;\n\t\tif (force || oldActiveGroup !== this.activeGroup) {\n\t\t\tthis._onDidChangeActiveGroup.fire(this.activeGroup);\n\t\t\tthis._onDidChangeActiveInstance.fire(this.activeInstance);\n\t\t}\n\t}\n\n\tprivate _getInstanceLocation(index: number): IInstanceLocation | undefined {\n\t\tlet currentGroupIndex = 0;\n\t\twhile (index >= 0 && currentGroupIndex < this.groups.length) {\n\t\t\tconst group = this.groups[currentGroupIndex];\n\t\t\tconst count = group.terminalInstances.length;\n\t\t\tif (index < count) {\n\t\t\t\treturn {\n\t\t\t\t\tgroup,\n\t\t\t\t\tgroupIndex: currentGroupIndex,\n\t\t\t\t\tinstance: group.terminalInstances[index],\n\t\t\t\t\tinstanceIndex: index\n\t\t\t\t};\n\t\t\t}\n\t\t\tindex -= count;\n\t\t\tcurrentGroupIndex++;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tsetActiveInstanceByIndex(index: number) {\n\t\tconst activeInstance = this.activeInstance;\n\t\tconst instanceLocation = this._getInstanceLocation(index);\n\t\tconst newActiveInstance = instanceLocation?.group.terminalInstances[instanceLocation.instanceIndex];\n\t\tif (!instanceLocation || activeInstance === newActiveInstance) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeInstanceIndex = instanceLocation.instanceIndex;\n\n\t\tthis.activeGroupIndex = instanceLocation.groupIndex;\n\t\tthis._onDidChangeActiveGroup.fire(this.activeGroup);\n\t\tinstanceLocation.group.setActiveInstanceByIndex(activeInstanceIndex, true);\n\t}\n\n\tsetActiveGroupToNext() {\n\t\tif (this.groups.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tlet newIndex = this.activeGroupIndex + 1;\n\t\tif (newIndex >= this.groups.length) {\n\t\t\tnewIndex = 0;\n\t\t}\n\t\tthis.setActiveGroupByIndex(newIndex);\n\t}\n\n\tsetActiveGroupToPrevious() {\n\t\tif (this.groups.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tlet newIndex = this.activeGroupIndex - 1;\n\t\tif (newIndex < 0) {\n\t\t\tnewIndex = this.groups.length - 1;\n\t\t}\n\t\tthis.setActiveGroupByIndex(newIndex);\n\t}\n\n\tmoveGroup(source: ITerminalInstance, target: ITerminalInstance) {\n\t\tconst sourceGroup = this.getGroupForInstance(source);\n\t\tconst targetGroup = this.getGroupForInstance(target);\n\n\t\t// Something went wrong\n\t\tif (!sourceGroup || !targetGroup) {\n\t\t\treturn;\n\t\t}\n\n\t\t// The groups are the same, rearrange within the group\n\t\tif (sourceGroup === targetGroup) {\n\t\t\tconst index = sourceGroup.terminalInstances.indexOf(target);\n\t\t\tif (index !== -1) {\n\t\t\t\tsourceGroup.moveInstance(source, index);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// The groups differ, rearrange groups\n\t\tconst sourceGroupIndex = this.groups.indexOf(sourceGroup);\n\t\tconst targetGroupIndex = this.groups.indexOf(targetGroup);\n\t\tthis.groups.splice(sourceGroupIndex, 1);\n\t\tthis.groups.splice(targetGroupIndex, 0, sourceGroup);\n\t\tthis._onDidChangeInstances.fire();\n\t}\n\n\tmoveGroupToEnd(source: ITerminalInstance): void {\n\t\tconst sourceGroup = this.getGroupForInstance(source);\n\t\tif (!sourceGroup) {\n\t\t\treturn;\n\t\t}\n\t\tconst sourceGroupIndex = this.groups.indexOf(sourceGroup);\n\t\tthis.groups.splice(sourceGroupIndex, 1);\n\t\tthis.groups.push(sourceGroup);\n\t\tthis._onDidChangeInstances.fire();\n\t}\n\n\tmoveInstance(source: ITerminalInstance, target: ITerminalInstance, side: 'before' | 'after') {\n\t\tconst sourceGroup = this.getGroupForInstance(source);\n\t\tconst targetGroup = this.getGroupForInstance(target);\n\t\tif (!sourceGroup || !targetGroup) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Move from the source group to the target group\n\t\tif (sourceGroup !== targetGroup) {\n\t\t\t// Move groups\n\t\t\tsourceGroup.removeInstance(source);\n\t\t\ttargetGroup.addInstance(source);\n\t\t}\n\n\t\t// Rearrange within the target group\n\t\tconst index = targetGroup.terminalInstances.indexOf(target) + (side === 'after' ? 1 : 0);\n\t\ttargetGroup.moveInstance(source, index);\n\t}\n\n\tunsplitInstance(instance: ITerminalInstance) {\n\t\tconst oldGroup = this.getGroupForInstance(instance);\n\t\tif (!oldGroup || oldGroup.terminalInstances.length < 2) {\n\t\t\treturn;\n\t\t}\n\n\t\toldGroup.removeInstance(instance);\n\t\tthis.createGroup(instance);\n\t}\n\n\tjoinInstances(instances: ITerminalInstance[]) {\n\t\tconst group = this.getGroupForInstance(instances[0]);\n\t\tif (group) {\n\t\t\tlet differentGroups = true;\n\t\t\tfor (let i = 1; i < group.terminalInstances.length; i++) {\n\t\t\t\tif (group.terminalInstances.includes(instances[i])) {\n\t\t\t\t\tdifferentGroups = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!differentGroups) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// Find the group of the first instance that is the only instance in the group, if one exists\n\t\tlet candidateInstance: ITerminalInstance | undefined = undefined;\n\t\tlet candidateGroup: ITerminalGroup | undefined = undefined;\n\t\tfor (const instance of instances) {\n\t\t\tconst group = this.getGroupForInstance(instance);\n\t\t\tif (group?.terminalInstances.length === 1) {\n\t\t\t\tcandidateInstance = instance;\n\t\t\t\tcandidateGroup = group;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Create a new group if needed\n\t\tif (!candidateGroup) {\n\t\t\tcandidateGroup = this.createGroup();\n\t\t}\n\n\t\tconst wasActiveGroup = this.activeGroup === candidateGroup;\n\n\t\t// Unsplit all other instances and add them to the new group\n\t\tfor (const instance of instances) {\n\t\t\tif (instance === candidateInstance) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst oldGroup = this.getGroupForInstance(instance);\n\t\t\tif (!oldGroup) {\n\t\t\t\t// Something went wrong, don't join this one\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\toldGroup.removeInstance(instance);\n\t\t\tcandidateGroup.addInstance(instance);\n\t\t}\n\n\t\t// Set the active terminal\n\t\tthis.setActiveInstance(instances[0]);\n\n\t\t// Fire events\n\t\tthis._onDidChangeInstances.fire();\n\t\tif (!wasActiveGroup) {\n\t\t\tthis._onDidChangeActiveGroup.fire(this.activeGroup);\n\t\t}\n\t}\n\n\tinstanceIsSplit(instance: ITerminalInstance): boolean {\n\t\tconst group = this.getGroupForInstance(instance);\n\t\tif (!group) {\n\t\t\treturn false;\n\t\t}\n\t\treturn group.terminalInstances.length > 1;\n\t}\n\n\tgetGroupForInstance(instance: ITerminalInstance): ITerminalGroup | undefined {\n\t\treturn this.groups.find(group => group.terminalInstances.includes(instance));\n\t}\n\n\tgetGroupLabels(): string[] {\n\t\treturn this.groups.filter(group => group.terminalInstances.length > 0).map((group, index) => {\n\t\t\treturn `${index + 1}: ${group.title ? group.title : ''}`;\n\t\t});\n\t}\n\n\t/**\n\t * Visibility should be updated in the following cases:\n\t * 1. Toggle `TERMINAL_VIEW_ID` visibility\n\t * 2. Change active group\n\t * 3. Change instances in active group\n\t */\n\tupdateVisibility() {\n\t\tconst visible = this._viewsService.isViewVisible(TERMINAL_VIEW_ID);\n\t\tthis.groups.forEach((g, i) => g.setVisible(visible && i === this.activeGroupIndex));\n\t}\n}\n\ninterface IInstanceLocation {\n\tgroup: ITerminalGroup;\n\tgroupIndex: number;\n\tinstance: ITerminalInstance;\n\tinstanceIndex: number;\n}\n"]}