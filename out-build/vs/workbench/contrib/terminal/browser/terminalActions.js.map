{"version":3,"sources":["vs/workbench/contrib/terminal/browser/terminalActions.ts"],"names":[],"mappings":"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","file":"terminalActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserFeatures } from 'vs/base/browser/canIUse';\nimport { Action } from 'vs/base/common/actions';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { KeyChord, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isObject, isString } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { EndOfLinePreference } from 'vs/editor/common/model';\nimport { localize } from 'vs/nls';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from 'vs/platform/accessibility/common/accessibility';\nimport { Action2, registerAction2, IAction2Options } from 'vs/platform/actions/common/actions';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IListService } from 'vs/platform/list/browser/listService';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IPickOptions, IQuickInputService, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { ITerminalProfile, TerminalExitReason, TerminalLocation, TerminalSettingId } from 'vs/platform/terminal/common/terminal';\nimport { IWorkspaceContextService, IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { PICK_WORKSPACE_FOLDER_COMMAND_ID } from 'vs/workbench/browser/actions/workspaceCommands';\nimport { CLOSE_EDITOR_COMMAND_ID } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { ResourceContextKey } from 'vs/workbench/common/contextkeys';\nimport { Direction, ICreateTerminalOptions, ITerminalEditorService, ITerminalGroupService, ITerminalInstance, ITerminalInstanceService, ITerminalService, IXtermTerminal } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { TerminalQuickAccessProvider } from 'vs/workbench/contrib/terminal/browser/terminalQuickAccess';\nimport { IRemoteTerminalAttachTarget, ITerminalConfigHelper, ITerminalProfileResolverService, ITerminalProfileService, TerminalCommandId } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { TerminalContextKeys } from 'vs/workbench/contrib/terminal/common/terminalContextKey';\nimport { createProfileSchemaEnums } from 'vs/platform/terminal/common/terminalProfiles';\nimport { terminalStrings } from 'vs/workbench/contrib/terminal/common/terminalStrings';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { isAbsolute } from 'vs/base/common/path';\nimport { AbstractVariableResolverService } from 'vs/workbench/services/configurationResolver/common/variableResolver';\nimport { ITerminalQuickPickItem } from 'vs/workbench/contrib/terminal/browser/terminalProfileQuickpick';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { getIconId, getColorClass, getUriClasses } from 'vs/workbench/contrib/terminal/browser/terminalIcon';\nimport { clearShellFileHistory, getCommandHistory } from 'vs/workbench/contrib/terminal/common/history';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { dirname } from 'vs/base/common/resources';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { FileKind } from 'vs/platform/files/common/files';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { TerminalCapability } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { killTerminalIcon, newTerminalIcon } from 'vs/workbench/contrib/terminal/browser/terminalIcons';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { AccessibleViewProviderId, accessibleViewCurrentProviderId, accessibleViewOnLastLine } from 'vs/workbench/contrib/accessibility/browser/accessibilityConfiguration';\n\nexport const switchTerminalActionViewItemSeparator = '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500';\nexport const switchTerminalShowTabsTitle = localize('showTerminalTabs', \"Show Tabs\");\n\nconst category = terminalStrings.actionCategory;\n\nexport interface WorkspaceFolderCwdPair {\n\tfolder: IWorkspaceFolder;\n\tcwd: URI;\n\tisAbsolute: boolean;\n\tisOverridden: boolean;\n}\n\nexport async function getCwdForSplit(configHelper: ITerminalConfigHelper, instance: ITerminalInstance, folders?: IWorkspaceFolder[], commandService?: ICommandService): Promise<string | URI | undefined> {\n\tswitch (configHelper.config.splitCwd) {\n\t\tcase 'workspaceRoot':\n\t\t\tif (folders !== undefined && commandService !== undefined) {\n\t\t\t\tif (folders.length === 1) {\n\t\t\t\t\treturn folders[0].uri;\n\t\t\t\t} else if (folders.length > 1) {\n\t\t\t\t\t// Only choose a path when there's more than 1 folder\n\t\t\t\t\tconst options: IPickOptions<IQuickPickItem> = {\n\t\t\t\t\t\tplaceHolder: localize('workbench.action.terminal.newWorkspacePlaceholder', \"Select current working directory for new terminal\")\n\t\t\t\t\t};\n\t\t\t\t\tconst workspace = await commandService.executeCommand(PICK_WORKSPACE_FOLDER_COMMAND_ID, [options]);\n\t\t\t\t\tif (!workspace) {\n\t\t\t\t\t\t// Don't split the instance if the workspace picker was canceled\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.resolve(workspace.uri);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '';\n\t\tcase 'initial':\n\t\t\treturn instance.getInitialCwd();\n\t\tcase 'inherited':\n\t\t\treturn instance.getCwd();\n\t}\n}\n\nexport const terminalSendSequenceCommand = async (accessor: ServicesAccessor, args: unknown) => {\n\tconst instance = accessor.get(ITerminalService).activeInstance;\n\tif (instance) {\n\t\tconst text = isObject(args) && 'text' in args ? toOptionalString(args.text) : undefined;\n\t\tif (!text) {\n\t\t\treturn;\n\t\t}\n\t\tconst configurationResolverService = accessor.get(IConfigurationResolverService);\n\t\tconst workspaceContextService = accessor.get(IWorkspaceContextService);\n\t\tconst historyService = accessor.get(IHistoryService);\n\t\tconst activeWorkspaceRootUri = historyService.getLastActiveWorkspaceRoot(instance.isRemote ? Schemas.vscodeRemote : Schemas.file);\n\t\tconst lastActiveWorkspaceRoot = activeWorkspaceRootUri ? workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri) ?? undefined : undefined;\n\t\tconst resolvedText = await configurationResolverService.resolveAsync(lastActiveWorkspaceRoot, text);\n\t\tinstance.sendText(resolvedText, false);\n\t}\n};\n\nexport class TerminalLaunchHelpAction extends Action {\n\n\tconstructor(\n\t\t@IOpenerService private readonly _openerService: IOpenerService\n\t) {\n\t\tsuper('workbench.action.terminal.launchHelp', localize('terminalLaunchHelp', \"Open Help\"));\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tthis._openerService.open('https://aka.ms/vscode-troubleshoot-terminal-launch');\n\t}\n}\n\n/**\n * A wrapper function around registerAction2 to help make registering terminal actions more concise.\n * The following default options are used if undefined:\n *\n * - `f1`: true\n * - `category`: Terminal\n * - `precondition`: TerminalContextKeys.processSupported\n */\nexport function registerTerminalAction(\n\toptions: IAction2Options & { run: (c: ITerminalServicesCollection, accessor: ServicesAccessor, args?: unknown) => void | Promise<unknown> }\n): IDisposable {\n\t// Set defaults\n\toptions.f1 = options.f1 ?? true;\n\toptions.category = options.category ?? category;\n\toptions.precondition = options.precondition ?? TerminalContextKeys.processSupported;\n\t// Remove run function from options so it's not passed through to registerAction2\n\tconst runFunc = options.run;\n\tconst strictOptions: IAction2Options & { run?: (c: ITerminalServicesCollection, accessor: ServicesAccessor, args?: unknown) => void | Promise<unknown> } = options;\n\tdelete (strictOptions as IAction2Options & { run?: (c: ITerminalServicesCollection, accessor: ServicesAccessor, args?: unknown) => void | Promise<unknown> })['run'];\n\t// Register\n\treturn registerAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper(strictOptions as IAction2Options);\n\t\t}\n\t\trun(accessor: ServicesAccessor, args?: unknown) {\n\t\t\treturn runFunc(getTerminalServices(accessor), accessor, args);\n\t\t}\n\t});\n}\n\n/**\n * A wrapper around {@link registerTerminalAction} that ensures an active instance exists and\n * provides it to the run function.\n */\nexport function registerActiveInstanceAction(\n\toptions: IAction2Options & { run: (activeInstance: ITerminalInstance, c: ITerminalServicesCollection, accessor: ServicesAccessor, args?: unknown) => void | Promise<unknown> }\n): IDisposable {\n\tconst originalRun = options.run;\n\treturn registerTerminalAction({\n\t\t...options,\n\t\trun: (c, accessor, args) => {\n\t\t\tconst activeInstance = c.service.activeInstance;\n\t\t\tif (activeInstance) {\n\t\t\t\treturn originalRun(activeInstance, c, accessor, args);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * A wrapper around {@link registerTerminalAction} that ensures an active terminal\n * exists and provides it to the run function.\n *\n * This includes detached xterm terminals that are not managed by an {@link ITerminalInstance}.\n */\nexport function registerActiveXtermAction(\n\toptions: IAction2Options & { run: (activeTerminal: IXtermTerminal, accessor: ServicesAccessor, instance?: ITerminalInstance, args?: unknown) => void | Promise<unknown> }\n): IDisposable {\n\tconst originalRun = options.run;\n\treturn registerTerminalAction({\n\t\t...options,\n\t\trun: (c, accessor, args) => {\n\t\t\tconst activeDetached = Iterable.find(c.service.detachedXterms, d => d.isFocused);\n\t\t\tif (activeDetached) {\n\t\t\t\treturn originalRun(activeDetached, accessor, undefined, args);\n\t\t\t}\n\n\t\t\tconst activeInstance = c.service.activeInstance;\n\t\t\tif (activeInstance?.xterm) {\n\t\t\t\treturn originalRun(activeInstance.xterm, accessor, activeInstance, args);\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport interface ITerminalServicesCollection {\n\tservice: ITerminalService;\n\tgroupService: ITerminalGroupService;\n\tinstanceService: ITerminalInstanceService;\n\teditorService: ITerminalEditorService;\n\tprofileService: ITerminalProfileService;\n\tprofileResolverService: ITerminalProfileResolverService;\n}\n\nfunction getTerminalServices(accessor: ServicesAccessor): ITerminalServicesCollection {\n\treturn {\n\t\tservice: accessor.get(ITerminalService),\n\t\tgroupService: accessor.get(ITerminalGroupService),\n\t\tinstanceService: accessor.get(ITerminalInstanceService),\n\t\teditorService: accessor.get(ITerminalEditorService),\n\t\tprofileService: accessor.get(ITerminalProfileService),\n\t\tprofileResolverService: accessor.get(ITerminalProfileResolverService)\n\t};\n}\n\nexport function registerTerminalActions() {\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.NewInActiveWorkspace,\n\t\ttitle: { value: localize('workbench.action.terminal.newInActiveWorkspace', \"Create New Terminal (In Active Workspace)\"), original: 'Create New Terminal (In Active Workspace)' },\n\t\trun: async (c) => {\n\t\t\tif (c.service.isProcessSupportRegistered) {\n\t\t\t\tconst instance = await c.service.createTerminal({ location: c.service.defaultLocation });\n\t\t\t\tif (!instance) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tc.service.setActiveInstance(instance);\n\t\t\t}\n\t\t\tawait c.groupService.showPanel(true);\n\t\t}\n\t});\n\n\t// Register new with profile command\n\trefreshTerminalActions([]);\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.CreateTerminalEditor,\n\t\ttitle: { value: localize('workbench.action.terminal.createTerminalEditor', \"Create New Terminal in Editor Area\"), original: 'Create New Terminal in Editor Area' },\n\t\trun: async (c, _, args) => {\n\t\t\tconst options = (isObject(args) && 'location' in args) ? args as ICreateTerminalOptions : { location: TerminalLocation.Editor };\n\t\t\tconst instance = await c.service.createTerminal(options);\n\t\t\tinstance.focusWhenReady();\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.CreateTerminalEditorSameGroup,\n\t\ttitle: { value: localize('workbench.action.terminal.createTerminalEditor', \"Create New Terminal in Editor Area\"), original: 'Create New Terminal in Editor Area' },\n\t\tf1: false,\n\t\trun: async (c, accessor, args) => {\n\t\t\t// Force the editor into the same editor group if it's locked. This command is only ever\n\t\t\t// called when a terminal is the active editor\n\t\t\tconst editorGroupsService = accessor.get(IEditorGroupsService);\n\t\t\tconst instance = await c.service.createTerminal({\n\t\t\t\tlocation: { viewColumn: editorGroupsService.activeGroup.index }\n\t\t\t});\n\t\t\tinstance.focusWhenReady();\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.CreateTerminalEditorSide,\n\t\ttitle: { value: localize('workbench.action.terminal.createTerminalEditorSide', \"Create New Terminal in Editor Area to the Side\"), original: 'Create New Terminal in Editor Area to the Side' },\n\t\trun: async (c) => {\n\t\t\tconst instance = await c.service.createTerminal({\n\t\t\t\tlocation: { viewColumn: SIDE_GROUP }\n\t\t\t});\n\t\t\tinstance.focusWhenReady();\n\t\t}\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.MoveToEditor,\n\t\ttitle: terminalStrings.moveToEditor,\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.terminalEditorActive.toNegated(), TerminalContextKeys.viewShowing),\n\t\trun: (activeInstance, c) => c.service.moveToEditor(activeInstance)\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.MoveToEditorActiveTab,\n\t\ttitle: terminalStrings.moveToEditor,\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.isOpen),\n\t\trun: async (c, accessor) => {\n\t\t\tconst selectedInstances = getSelectedInstances(accessor);\n\t\t\tif (!selectedInstances || selectedInstances.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (const instance of selectedInstances) {\n\t\t\t\tc.service.moveToEditor(instance);\n\t\t\t}\n\t\t\tselectedInstances[selectedInstances.length - 1].focus();\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.MoveToTerminalPanel,\n\t\ttitle: terminalStrings.moveToTerminalPanel,\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.terminalEditorActive),\n\t\trun: (c, _, args) => {\n\t\t\tconst source = toOptionalUri(args) ?? c.editorService.activeInstance;\n\t\t\tif (source) {\n\t\t\t\tc.service.moveToTerminalView(source);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.FocusPreviousPane,\n\t\ttitle: { value: localize('workbench.action.terminal.focusPreviousPane', \"Focus Previous Terminal in Terminal Group\"), original: 'Focus Previous Terminal in Terminal Group' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.Alt | KeyCode.LeftArrow,\n\t\t\tsecondary: [KeyMod.Alt | KeyCode.UpArrow],\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.Alt | KeyMod.CtrlCmd | KeyCode.LeftArrow,\n\t\t\t\tsecondary: [KeyMod.Alt | KeyMod.CtrlCmd | KeyCode.UpArrow]\n\t\t\t},\n\t\t\twhen: TerminalContextKeys.focus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: async (c) => {\n\t\t\tc.groupService.activeGroup?.focusPreviousPane();\n\t\t\tawait c.groupService.showPanel(true);\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.FocusNextPane,\n\t\ttitle: { value: localize('workbench.action.terminal.focusNextPane', \"Focus Next Terminal in Terminal Group\"), original: 'Focus Next Terminal in Terminal Group' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.Alt | KeyCode.RightArrow,\n\t\t\tsecondary: [KeyMod.Alt | KeyCode.DownArrow],\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.Alt | KeyMod.CtrlCmd | KeyCode.RightArrow,\n\t\t\t\tsecondary: [KeyMod.Alt | KeyMod.CtrlCmd | KeyCode.DownArrow]\n\t\t\t},\n\t\t\twhen: TerminalContextKeys.focus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: async (c) => {\n\t\t\tc.groupService.activeGroup?.focusNextPane();\n\t\t\tawait c.groupService.showPanel(true);\n\t\t}\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.RunRecentCommand,\n\t\ttitle: { value: localize('workbench.action.terminal.runRecentCommand', \"Run Recent Command...\"), original: 'Run Recent Command...' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\tkeybinding: [\n\t\t\t{\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyR,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyR },\n\t\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, CONTEXT_ACCESSIBILITY_MODE_ENABLED),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\t{\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyR,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.KeyR },\n\t\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, CONTEXT_ACCESSIBILITY_MODE_ENABLED.negate()),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t],\n\t\trun: async (activeInstance, c) => {\n\t\t\tawait activeInstance.runRecent('command');\n\t\t\tif (activeInstance?.target === TerminalLocation.Editor) {\n\t\t\t\tawait c.editorService.revealActiveEditor();\n\t\t\t} else {\n\t\t\t\tawait c.groupService.showPanel(false);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.CopyLastCommandOutput,\n\t\ttitle: { value: localize('workbench.action.terminal.copyLastCommand', 'Copy Last Command Output'), original: 'Copy Last Command Output' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: async (instance, c, accessor) => {\n\t\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\t\tconst commands = instance.capabilities.get(TerminalCapability.CommandDetection)?.commands;\n\t\t\tif (!commands || commands.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst command = commands[commands.length - 1];\n\t\t\tif (!command?.hasOutput()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst output = command.getOutput();\n\t\t\tif (isString(output)) {\n\t\t\t\tawait clipboardService.writeText(output);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.GoToRecentDirectory,\n\t\ttitle: { value: localize('workbench.action.terminal.goToRecentDirectory', \"Go to Recent Directory...\"), original: 'Go to Recent Directory...' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyG,\n\t\t\twhen: TerminalContextKeys.focus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\trun: async (activeInstance, c) => {\n\t\t\tawait activeInstance.runRecent('cwd');\n\t\t\tif (activeInstance?.target === TerminalLocation.Editor) {\n\t\t\t\tawait c.editorService.revealActiveEditor();\n\t\t\t} else {\n\t\t\t\tawait c.groupService.showPanel(false);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.ResizePaneLeft,\n\t\ttitle: { value: localize('workbench.action.terminal.resizePaneLeft', \"Resize Terminal Left\"), original: 'Resize Terminal Left' },\n\t\tkeybinding: {\n\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.LeftArrow },\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.LeftArrow },\n\t\t\twhen: TerminalContextKeys.focus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c) => c.groupService.activeGroup?.resizePane(Direction.Left)\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.ResizePaneRight,\n\t\ttitle: { value: localize('workbench.action.terminal.resizePaneRight', \"Resize Terminal Right\"), original: 'Resize Terminal Right' },\n\t\tkeybinding: {\n\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.RightArrow },\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.RightArrow },\n\t\t\twhen: TerminalContextKeys.focus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c) => c.groupService.activeGroup?.resizePane(Direction.Right)\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.ResizePaneUp,\n\t\ttitle: { value: localize('workbench.action.terminal.resizePaneUp', \"Resize Terminal Up\"), original: 'Resize Terminal Up' },\n\t\tkeybinding: {\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.UpArrow },\n\t\t\twhen: TerminalContextKeys.focus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c) => c.groupService.activeGroup?.resizePane(Direction.Up)\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.ResizePaneDown,\n\t\ttitle: { value: localize('workbench.action.terminal.resizePaneDown', \"Resize Terminal Down\"), original: 'Resize Terminal Down' },\n\t\tkeybinding: {\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.DownArrow },\n\t\t\twhen: TerminalContextKeys.focus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c) => c.groupService.activeGroup?.resizePane(Direction.Down)\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.Focus,\n\t\ttitle: terminalStrings.focus,\n\t\tkeybinding: {\n\t\t\twhen: ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, accessibleViewOnLastLine, accessibleViewCurrentProviderId.isEqualTo(AccessibleViewProviderId.Terminal)),\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: async (c) => {\n\t\t\tconst instance = c.service.activeInstance || await c.service.createTerminal({ location: TerminalLocation.Panel });\n\t\t\tif (!instance) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tc.service.setActiveInstance(instance);\n\t\t\tfocusActiveTerminal(instance, c);\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.FocusTabs,\n\t\ttitle: { value: localize('workbench.action.terminal.focus.tabsView', \"Focus Terminal Tabs View\"), original: 'Focus Terminal Tabs View' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backslash,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.or(TerminalContextKeys.tabsFocus, TerminalContextKeys.focus),\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c) => c.groupService.focusTabs()\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.FocusNext,\n\t\ttitle: { value: localize('workbench.action.terminal.focusNext', \"Focus Next Terminal Group\"), original: 'Focus Next Terminal Group' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.PageDown,\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.BracketRight\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, TerminalContextKeys.editorFocus.negate()),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\trun: async (c) => {\n\t\t\tc.groupService.setActiveGroupToNext();\n\t\t\tawait c.groupService.showPanel(true);\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.FocusPrevious,\n\t\ttitle: { value: localize('workbench.action.terminal.focusPrevious', \"Focus Previous Terminal Group\"), original: 'Focus Previous Terminal Group' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.PageUp,\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.BracketLeft\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, TerminalContextKeys.editorFocus.negate()),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\trun: async (c) => {\n\t\t\tc.groupService.setActiveGroupToPrevious();\n\t\t\tawait c.groupService.showPanel(true);\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.RunSelectedText,\n\t\ttitle: { value: localize('workbench.action.terminal.runSelectedText', \"Run Selected Text In Active Terminal\"), original: 'Run Selected Text In Active Terminal' },\n\t\trun: async (c, accessor) => {\n\t\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\t\tconst editor = codeEditorService.getActiveCodeEditor();\n\t\t\tif (!editor || !editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst instance = await c.service.getActiveOrCreateInstance({ acceptsInput: true });\n\t\t\tconst selection = editor.getSelection();\n\t\t\tlet text: string;\n\t\t\tif (selection.isEmpty()) {\n\t\t\t\ttext = editor.getModel().getLineContent(selection.selectionStartLineNumber).trim();\n\t\t\t} else {\n\t\t\t\tconst endOfLinePreference = isWindows ? EndOfLinePreference.LF : EndOfLinePreference.CRLF;\n\t\t\t\ttext = editor.getModel().getValueInRange(selection, endOfLinePreference);\n\t\t\t}\n\t\t\tinstance.sendText(text, true, true);\n\t\t\tawait c.service.revealActiveTerminal();\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.RunActiveFile,\n\t\ttitle: { value: localize('workbench.action.terminal.runActiveFile', \"Run Active File In Active Terminal\"), original: 'Run Active File In Active Terminal' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: async (c, accessor) => {\n\t\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst workbenchEnvironmentService = accessor.get(IWorkbenchEnvironmentService);\n\n\t\t\tconst editor = codeEditorService.getActiveCodeEditor();\n\t\t\tif (!editor || !editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst instance = await c.service.getActiveOrCreateInstance({ acceptsInput: true });\n\t\t\tconst isRemote = instance ? instance.isRemote : (workbenchEnvironmentService.remoteAuthority ? true : false);\n\t\t\tconst uri = editor.getModel().uri;\n\t\t\tif ((!isRemote && uri.scheme !== Schemas.file && uri.scheme !== Schemas.vscodeUserData) || (isRemote && uri.scheme !== Schemas.vscodeRemote)) {\n\t\t\t\tnotificationService.warn(localize('workbench.action.terminal.runActiveFile.noFile', 'Only files on disk can be run in the terminal'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// TODO: Convert this to ctrl+c, ctrl+v for pwsh?\n\t\t\tawait instance.sendPath(uri, true);\n\t\t\treturn c.groupService.showPanel();\n\t\t}\n\t});\n\n\tregisterActiveXtermAction({\n\t\tid: TerminalCommandId.ScrollDownLine,\n\t\ttitle: { value: localize('workbench.action.terminal.scrollDown', \"Scroll Down (Line)\"), original: 'Scroll Down (Line)' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageDown,\n\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.DownArrow },\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focusInAny, TerminalContextKeys.altBufferActive.negate()),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (xterm) => xterm.scrollDownLine()\n\t});\n\n\tregisterActiveXtermAction({\n\t\tid: TerminalCommandId.ScrollDownPage,\n\t\ttitle: { value: localize('workbench.action.terminal.scrollDownPage', \"Scroll Down (Page)\"), original: 'Scroll Down (Page)' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.Shift | KeyCode.PageDown,\n\t\t\tmac: { primary: KeyCode.PageDown },\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focusInAny, TerminalContextKeys.altBufferActive.negate()),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (xterm) => xterm.scrollDownPage()\n\t});\n\n\tregisterActiveXtermAction({\n\t\tid: TerminalCommandId.ScrollToBottom,\n\t\ttitle: { value: localize('workbench.action.terminal.scrollToBottom', \"Scroll to Bottom\"), original: 'Scroll to Bottom' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.End,\n\t\t\tlinux: { primary: KeyMod.Shift | KeyCode.End },\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focusInAny, TerminalContextKeys.altBufferActive.negate()),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (xterm) => xterm.scrollToBottom()\n\t});\n\n\tregisterActiveXtermAction({\n\t\tid: TerminalCommandId.ScrollUpLine,\n\t\ttitle: { value: localize('workbench.action.terminal.scrollUp', \"Scroll Up (Line)\"), original: 'Scroll Up (Line)' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.PageUp,\n\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.UpArrow },\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focusInAny, TerminalContextKeys.altBufferActive.negate()),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (xterm) => xterm.scrollUpLine()\n\t});\n\n\tregisterActiveXtermAction({\n\t\tid: TerminalCommandId.ScrollUpPage,\n\t\ttitle: { value: localize('workbench.action.terminal.scrollUpPage', \"Scroll Up (Page)\"), original: 'Scroll Up (Page)' },\n\t\tf1: true,\n\t\tcategory,\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.Shift | KeyCode.PageUp,\n\t\t\tmac: { primary: KeyCode.PageUp },\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focusInAny, TerminalContextKeys.altBufferActive.negate()),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (xterm) => xterm.scrollUpPage()\n\t});\n\n\tregisterActiveXtermAction({\n\t\tid: TerminalCommandId.ScrollToTop,\n\t\ttitle: { value: localize('workbench.action.terminal.scrollToTop', \"Scroll to Top\"), original: 'Scroll to Top' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Home,\n\t\t\tlinux: { primary: KeyMod.Shift | KeyCode.Home },\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focusInAny, TerminalContextKeys.altBufferActive.negate()),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (xterm) => xterm.scrollToTop()\n\t});\n\n\tregisterActiveXtermAction({\n\t\tid: TerminalCommandId.ClearSelection,\n\t\ttitle: { value: localize('workbench.action.terminal.clearSelection', \"Clear Selection\"), original: 'Clear Selection' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyCode.Escape,\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focusInAny, TerminalContextKeys.textSelected, TerminalContextKeys.notFindVisible),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (xterm) => {\n\t\t\tif (xterm.hasSelection()) {\n\t\t\t\txterm.clearSelection();\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.ChangeIcon,\n\t\ttitle: terminalStrings.changeIcon,\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c, _, args: unknown) => getResourceOrActiveInstance(c, args)?.changeIcon()\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.ChangeIconPanel,\n\t\ttitle: terminalStrings.changeIcon,\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c) => c.groupService.activeInstance?.changeIcon()\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.ChangeIconActiveTab,\n\t\ttitle: terminalStrings.changeIcon,\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.tabsSingularSelection),\n\t\trun: (c, accessor) => getSelectedInstances(accessor)?.[0].changeIcon()\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.ChangeColor,\n\t\ttitle: terminalStrings.changeColor,\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c, _, args) => getResourceOrActiveInstance(c, args)?.changeColor()\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.ChangeColorPanel,\n\t\ttitle: terminalStrings.changeColor,\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c) => c.groupService.activeInstance?.changeColor()\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.ChangeColorActiveTab,\n\t\ttitle: terminalStrings.changeColor,\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.tabsSingularSelection),\n\t\trun: (c, accessor) => getSelectedInstances(accessor)?.[0].changeColor()\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.Rename,\n\t\ttitle: terminalStrings.rename,\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c, accessor, args) => renameWithQuickPick(c, accessor, args)\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.RenamePanel,\n\t\ttitle: terminalStrings.rename,\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c, accessor) => renameWithQuickPick(c, accessor)\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.RenameActiveTab,\n\t\ttitle: terminalStrings.rename,\n\t\tf1: false,\n\t\tkeybinding: {\n\t\t\tprimary: KeyCode.F2,\n\t\t\tmac: {\n\t\t\t\tprimary: KeyCode.Enter\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.tabsFocus),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.tabsSingularSelection),\n\t\trun: async (c, accessor) => {\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst instance = getSelectedInstances(accessor)?.[0];\n\t\t\tif (!instance) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tc.service.setEditingTerminal(instance);\n\t\t\tc.service.setEditable(instance, {\n\t\t\t\tvalidationMessage: value => validateTerminalName(value),\n\t\t\t\tonFinish: async (value, success) => {\n\t\t\t\t\t// Cancel editing first as instance.rename will trigger a rerender automatically\n\t\t\t\t\tc.service.setEditable(instance, null);\n\t\t\t\t\tc.service.setEditingTerminal(undefined);\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait instance.rename(value);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tnotificationService.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.DetachSession,\n\t\ttitle: { value: localize('workbench.action.terminal.detachSession', \"Detach Session\"), original: 'Detach Session' },\n\t\trun: (activeInstance) => activeInstance.detachProcessAndDispose(TerminalExitReason.User)\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.AttachToSession,\n\t\ttitle: { value: localize('workbench.action.terminal.attachToSession', \"Attach to Session\"), original: 'Attach to Session' },\n\t\trun: async (c, accessor) => {\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst labelService = accessor.get(ILabelService);\n\t\t\tconst remoteAgentService = accessor.get(IRemoteAgentService);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\n\t\t\tconst remoteAuthority = remoteAgentService.getConnection()?.remoteAuthority ?? undefined;\n\t\t\tconst backend = await accessor.get(ITerminalInstanceService).getBackend(remoteAuthority);\n\n\t\t\tif (!backend) {\n\t\t\t\tthrow new Error(`No backend registered for remote authority '${remoteAuthority}'`);\n\t\t\t}\n\n\t\t\tconst terms = await backend.listProcesses();\n\n\t\t\tbackend.reduceConnectionGraceTime();\n\n\t\t\tconst unattachedTerms = terms.filter(term => !c.service.isAttachedToTerminal(term));\n\t\t\tconst items = unattachedTerms.map(term => {\n\t\t\t\tconst cwdLabel = labelService.getUriLabel(URI.file(term.cwd));\n\t\t\t\treturn {\n\t\t\t\t\tlabel: term.title,\n\t\t\t\t\tdetail: term.workspaceName ? `${term.workspaceName} \\u2E31 ${cwdLabel}` : cwdLabel,\n\t\t\t\t\tdescription: term.pid ? String(term.pid) : '',\n\t\t\t\t\tterm\n\t\t\t\t};\n\t\t\t});\n\t\t\tif (items.length === 0) {\n\t\t\t\tnotificationService.info(localize('noUnattachedTerminals', 'There are no unattached terminals to attach to'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst selected = await quickInputService.pick<IRemoteTerminalPick>(items, { canPickMany: false });\n\t\t\tif (selected) {\n\t\t\t\tconst instance = await c.service.createTerminal({\n\t\t\t\t\tconfig: { attachPersistentProcess: selected.term }\n\t\t\t\t});\n\t\t\t\tc.service.setActiveInstance(instance);\n\t\t\t\tawait focusActiveTerminal(instance, c);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.QuickOpenTerm,\n\t\ttitle: { value: localize('quickAccessTerminal', \"Switch Active Terminal\"), original: 'Switch Active Terminal' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c, accessor) => accessor.get(IQuickInputService).quickAccess.show(TerminalQuickAccessProvider.PREFIX)\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.ScrollToPreviousCommand,\n\t\ttitle: { value: localize('workbench.action.terminal.scrollToPreviousCommand', \"Scroll To Previous Command\"), original: 'Scroll To Previous Command' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, CONTEXT_ACCESSIBILITY_MODE_ENABLED.negate()),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (activeInstance) => activeInstance.xterm?.markTracker.scrollToPreviousMark(undefined, undefined, activeInstance.capabilities.has(TerminalCapability.CommandDetection))\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.ScrollToNextCommand,\n\t\ttitle: { value: localize('workbench.action.terminal.scrollToNextCommand', \"Scroll To Next Command\"), original: 'Scroll To Next Command' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, CONTEXT_ACCESSIBILITY_MODE_ENABLED.negate()),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (activeInstance) => {\n\t\t\tactiveInstance.xterm?.markTracker.scrollToNextMark();\n\t\t\tactiveInstance.focus();\n\t\t}\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.SelectToPreviousCommand,\n\t\ttitle: { value: localize('workbench.action.terminal.selectToPreviousCommand', \"Select To Previous Command\"), original: 'Select To Previous Command' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.UpArrow,\n\t\t\twhen: TerminalContextKeys.focus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (activeInstance) => {\n\t\t\tactiveInstance.xterm?.markTracker.selectToPreviousMark();\n\t\t\tactiveInstance.focus();\n\t\t}\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.SelectToNextCommand,\n\t\ttitle: { value: localize('workbench.action.terminal.selectToNextCommand', \"Select To Next Command\"), original: 'Select To Next Command' },\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.DownArrow,\n\t\t\twhen: TerminalContextKeys.focus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (activeInstance) => {\n\t\t\tactiveInstance.xterm?.markTracker.selectToNextMark();\n\t\t\tactiveInstance.focus();\n\t\t}\n\t});\n\n\tregisterActiveXtermAction({\n\t\tid: TerminalCommandId.SelectToPreviousLine,\n\t\ttitle: { value: localize('workbench.action.terminal.selectToPreviousLine', \"Select To Previous Line\"), original: 'Select To Previous Line' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: async (xterm, _, instance) => {\n\t\t\txterm.markTracker.selectToPreviousLine();\n\t\t\t// prefer to call focus on the TerminalInstance for additional accessibility triggers\n\t\t\t(instance || xterm).focus();\n\t\t}\n\t});\n\n\tregisterActiveXtermAction({\n\t\tid: TerminalCommandId.SelectToNextLine,\n\t\ttitle: { value: localize('workbench.action.terminal.selectToNextLine', \"Select To Next Line\"), original: 'Select To Next Line' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: async (xterm, _, instance) => {\n\t\t\txterm.markTracker.selectToNextLine();\n\t\t\t// prefer to call focus on the TerminalInstance for additional accessibility triggers\n\t\t\t(instance || xterm).focus();\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.SendSequence,\n\t\ttitle: terminalStrings.sendSequence,\n\t\tf1: false,\n\t\tdescription: {\n\t\t\tdescription: terminalStrings.sendSequence.value,\n\t\t\targs: [{\n\t\t\t\tname: 'args',\n\t\t\t\tschema: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\trequired: ['text'],\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\ttext: {\n\t\t\t\t\t\t\tdescription: localize('sendSequence', \"The sequence of text to send to the terminal\"),\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\trun: (c, accessor, args) => terminalSendSequenceCommand(accessor, args)\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.NewWithCwd,\n\t\ttitle: terminalStrings.newWithCwd,\n\t\tdescription: {\n\t\t\tdescription: terminalStrings.newWithCwd.value,\n\t\t\targs: [{\n\t\t\t\tname: 'args',\n\t\t\t\tschema: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\trequired: ['cwd'],\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tcwd: {\n\t\t\t\t\t\t\tdescription: localize('workbench.action.terminal.newWithCwd.cwd', \"The directory to start the terminal at\"),\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\trun: async (c, _, args) => {\n\t\t\tconst cwd = isObject(args) && 'cwd' in args ? toOptionalString(args.cwd) : undefined;\n\t\t\tconst instance = await c.service.createTerminal({ cwd });\n\t\t\tif (!instance) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tc.service.setActiveInstance(instance);\n\t\t\tawait focusActiveTerminal(instance, c);\n\t\t}\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.RenameWithArgs,\n\t\ttitle: terminalStrings.renameWithArgs,\n\t\tdescription: {\n\t\t\tdescription: terminalStrings.renameWithArgs.value,\n\t\t\targs: [{\n\t\t\t\tname: 'args',\n\t\t\t\tschema: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\trequired: ['name'],\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\tdescription: localize('workbench.action.terminal.renameWithArg.name', \"The new name for the terminal\"),\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tminLength: 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: async (activeInstance, c, accessor, args) => {\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst name = isObject(args) && 'name' in args ? toOptionalString(args.name) : undefined;\n\t\t\tif (!name) {\n\t\t\t\tnotificationService.warn(localize('workbench.action.terminal.renameWithArg.noName', \"No name argument provided\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tactiveInstance.rename(name);\n\t\t}\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.Relaunch,\n\t\ttitle: { value: localize('workbench.action.terminal.relaunch', \"Relaunch Active Terminal\"), original: 'Relaunch Active Terminal' },\n\t\trun: (activeInstance) => activeInstance.relaunch()\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.Split,\n\t\ttitle: terminalStrings.split,\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.webExtensionContributedProfile),\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Digit5,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backslash,\n\t\t\t\tsecondary: [KeyMod.WinCtrl | KeyMod.Shift | KeyCode.Digit5]\n\t\t\t},\n\t\t\twhen: TerminalContextKeys.focus\n\t\t},\n\t\ticon: Codicon.splitHorizontal,\n\t\trun: async (c, accessor, args) => {\n\t\t\tconst optionsOrProfile = isObject(args) ? args as ICreateTerminalOptions | ITerminalProfile : undefined;\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tconst workspaceContextService = accessor.get(IWorkspaceContextService);\n\t\t\tconst options = convertOptionsOrProfileToOptions(optionsOrProfile);\n\t\t\tconst activeInstance = (await c.service.getInstanceHost(options?.location)).activeInstance;\n\t\t\tif (!activeInstance) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst cwd = await getCwdForSplit(c.service.configHelper, activeInstance, workspaceContextService.getWorkspace().folders, commandService);\n\t\t\tif (cwd === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst instance = await c.service.createTerminal({ location: { parentTerminal: activeInstance }, config: options?.config, cwd });\n\t\t\tawait focusActiveTerminal(instance, c);\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.SplitActiveTab,\n\t\ttitle: terminalStrings.split,\n\t\tf1: false,\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Digit5,\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backslash,\n\t\t\t\tsecondary: [KeyMod.WinCtrl | KeyMod.Shift | KeyCode.Digit5]\n\t\t\t},\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: TerminalContextKeys.tabsFocus\n\t\t},\n\t\trun: async (c, accessor) => {\n\t\t\tconst instances = getSelectedInstances(accessor);\n\t\t\tif (instances) {\n\t\t\t\tconst promises: Promise<void>[] = [];\n\t\t\t\tfor (const t of instances) {\n\t\t\t\t\tpromises.push((async () => {\n\t\t\t\t\t\tawait c.service.createTerminal({ location: { parentTerminal: t } });\n\t\t\t\t\t\tawait c.groupService.showPanel(true);\n\t\t\t\t\t})());\n\t\t\t\t}\n\t\t\t\tawait Promise.all(promises);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.Unsplit,\n\t\ttitle: terminalStrings.unsplit,\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (activeInstance, c) => c.groupService.unsplitInstance(activeInstance)\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.UnsplitActiveTab,\n\t\ttitle: terminalStrings.unsplit,\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: async (c, accessor) => {\n\t\t\tconst instances = getSelectedInstances(accessor);\n\t\t\t// should not even need this check given the context key\n\t\t\t// but TS complains\n\t\t\tif (instances?.length === 1) {\n\t\t\t\tconst group = c.groupService.getGroupForInstance(instances[0]);\n\t\t\t\tif (group && group?.terminalInstances.length > 1) {\n\t\t\t\t\tc.groupService.unsplitInstance(instances[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.JoinActiveTab,\n\t\ttitle: { value: localize('workbench.action.terminal.joinInstance', \"Join Terminals\"), original: 'Join Terminals' },\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.tabsSingularSelection.toNegated()),\n\t\trun: async (c, accessor) => {\n\t\t\tconst instances = getSelectedInstances(accessor);\n\t\t\tif (instances && instances.length > 1) {\n\t\t\t\tc.groupService.joinInstances(instances);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.Join,\n\t\ttitle: { value: localize('workbench.action.terminal.join', \"Join Terminals\"), original: 'Join Terminals' },\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated)),\n\t\trun: async (c, accessor) => {\n\t\t\tconst themeService = accessor.get(IThemeService);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\t\tconst picks: ITerminalQuickPickItem[] = [];\n\t\t\tif (c.groupService.instances.length <= 1) {\n\t\t\t\tnotificationService.warn(localize('workbench.action.terminal.join.insufficientTerminals', 'Insufficient terminals for the join action'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst otherInstances = c.groupService.instances.filter(i => i.instanceId !== c.groupService.activeInstance?.instanceId);\n\t\t\tfor (const terminal of otherInstances) {\n\t\t\t\tconst group = c.groupService.getGroupForInstance(terminal);\n\t\t\t\tif (group?.terminalInstances.length === 1) {\n\t\t\t\t\tconst iconId = getIconId(accessor, terminal);\n\t\t\t\t\tconst label = `$(${iconId}): ${terminal.title}`;\n\t\t\t\t\tconst iconClasses: string[] = [];\n\t\t\t\t\tconst colorClass = getColorClass(terminal);\n\t\t\t\t\tif (colorClass) {\n\t\t\t\t\t\ticonClasses.push(colorClass);\n\t\t\t\t\t}\n\t\t\t\t\tconst uriClasses = getUriClasses(terminal, themeService.getColorTheme().type);\n\t\t\t\t\tif (uriClasses) {\n\t\t\t\t\t\ticonClasses.push(...uriClasses);\n\t\t\t\t\t}\n\t\t\t\t\tpicks.push({\n\t\t\t\t\t\tterminal,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\ticonClasses\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (picks.length === 0) {\n\t\t\t\tnotificationService.warn(localize('workbench.action.terminal.join.onlySplits', 'All terminals are joined already'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst result = await quickInputService.pick(picks, {});\n\t\t\tif (result) {\n\t\t\t\tc.groupService.joinInstances([result.terminal, c.groupService.activeInstance!]);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.SplitInActiveWorkspace,\n\t\ttitle: { value: localize('workbench.action.terminal.splitInActiveWorkspace', \"Split Terminal (In Active Workspace)\"), original: 'Split Terminal (In Active Workspace)' },\n\t\trun: async (instance, c) => {\n\t\t\tconst newInstance = await c.service.createTerminal({ location: { parentTerminal: instance } });\n\t\t\tif (newInstance?.target !== TerminalLocation.Editor) {\n\t\t\t\tawait c.groupService.showPanel(true);\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterActiveXtermAction({\n\t\tid: TerminalCommandId.SelectAll,\n\t\ttitle: { value: localize('workbench.action.terminal.selectAll', \"Select All\"), original: 'Select All' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\tkeybinding: [{\n\t\t\t// Don't use ctrl+a by default as that would override the common go to start\n\t\t\t// of prompt shell binding\n\t\t\tprimary: 0,\n\t\t\t// Technically this doesn't need to be here as it will fall back to this\n\t\t\t// behavior anyway when handed to xterm.js, having this handled by VS Code\n\t\t\t// makes it easier for users to see how it works though.\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.KeyA },\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: TerminalContextKeys.focusInAny\n\t\t}],\n\t\trun: (xterm) => xterm.selectAll()\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.New,\n\t\ttitle: { value: localize('workbench.action.terminal.new', \"Create New Terminal\"), original: 'Create New Terminal' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.webExtensionContributedProfile),\n\t\ticon: newTerminalIcon,\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backquote,\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.Backquote },\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\trun: async (c, accessor, args) => {\n\t\t\tlet eventOrOptions = isObject(args) ? args as MouseEvent | ICreateTerminalOptions : undefined;\n\t\t\tconst workspaceContextService = accessor.get(IWorkspaceContextService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tconst folders = workspaceContextService.getWorkspace().folders;\n\t\t\tif (eventOrOptions && eventOrOptions instanceof MouseEvent && (eventOrOptions.altKey || eventOrOptions.ctrlKey)) {\n\t\t\t\tawait c.service.createTerminal({ location: { splitActiveTerminal: true } });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (c.service.isProcessSupportRegistered) {\n\t\t\t\teventOrOptions = !eventOrOptions || eventOrOptions instanceof MouseEvent ? {} : eventOrOptions;\n\n\t\t\t\tlet instance: ITerminalInstance | undefined;\n\t\t\t\tif (folders.length <= 1) {\n\t\t\t\t\t// Allow terminal service to handle the path when there is only a\n\t\t\t\t\t// single root\n\t\t\t\t\tinstance = await c.service.createTerminal(eventOrOptions);\n\t\t\t\t} else {\n\t\t\t\t\tconst cwd = (await pickTerminalCwd(accessor))?.cwd;\n\t\t\t\t\tif (!cwd) {\n\t\t\t\t\t\t// Don't create the instance if the workspace picker was canceled\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\teventOrOptions.cwd = cwd;\n\t\t\t\t\tinstance = await c.service.createTerminal(eventOrOptions);\n\t\t\t\t}\n\t\t\t\tc.service.setActiveInstance(instance);\n\t\t\t\tawait focusActiveTerminal(instance, c);\n\t\t\t} else {\n\t\t\t\tif (c.profileService.contributedProfiles.length > 0) {\n\t\t\t\t\tcommandService.executeCommand(TerminalCommandId.NewWithProfile);\n\t\t\t\t} else {\n\t\t\t\t\tcommandService.executeCommand(TerminalCommandId.Toggle);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tasync function killInstance(c: ITerminalServicesCollection, instance: ITerminalInstance | undefined): Promise<void> {\n\t\tif (!instance) {\n\t\t\treturn;\n\t\t}\n\t\tawait c.service.safeDisposeTerminal(instance);\n\t\tif (c.groupService.instances.length > 0) {\n\t\t\tawait c.groupService.showPanel(true);\n\t\t}\n\t}\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.Kill,\n\t\ttitle: { value: localize('workbench.action.terminal.kill', \"Kill the Active Terminal Instance\"), original: 'Kill the Active Terminal Instance' },\n\t\tprecondition: ContextKeyExpr.or(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.isOpen),\n\t\ticon: killTerminalIcon,\n\t\trun: async (c) => killInstance(c, c.groupService.activeInstance)\n\t});\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.KillViewOrEditor,\n\t\ttitle: terminalStrings.kill,\n\t\tf1: false, // This is an internal command used for context menus\n\t\tprecondition: ContextKeyExpr.or(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.isOpen),\n\t\trun: async (c) => killInstance(c, c.service.activeInstance)\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.KillAll,\n\t\ttitle: { value: localize('workbench.action.terminal.killAll', \"Kill All Terminals\"), original: 'Kill All Terminals' },\n\t\tprecondition: ContextKeyExpr.or(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.isOpen),\n\t\ticon: Codicon.trash,\n\t\trun: async (c) => {\n\t\t\tconst disposePromises: Promise<void>[] = [];\n\t\t\tfor (const instance of c.service.instances) {\n\t\t\t\tdisposePromises.push(c.service.safeDisposeTerminal(instance));\n\t\t\t}\n\t\t\tawait Promise.all(disposePromises);\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.KillEditor,\n\t\ttitle: { value: localize('workbench.action.terminal.killEditor', \"Kill the Active Terminal in Editor Area\"), original: 'Kill the Active Terminal in Editor Area' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyW,\n\t\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.F4, secondary: [KeyMod.CtrlCmd | KeyCode.KeyW] },\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, ResourceContextKey.Scheme.isEqualTo(Schemas.vscodeTerminal), TerminalContextKeys.editorFocus)\n\t\t},\n\t\trun: (c, accessor) => accessor.get(ICommandService).executeCommand(CLOSE_EDITOR_COMMAND_ID)\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.KillActiveTab,\n\t\ttitle: terminalStrings.kill,\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.or(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.isOpen),\n\t\tkeybinding: {\n\t\t\tprimary: KeyCode.Delete,\n\t\t\tmac: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\t\t\t\tsecondary: [KeyCode.Delete]\n\t\t\t},\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: TerminalContextKeys.tabsFocus\n\t\t},\n\t\trun: async (c, accessor) => {\n\t\t\tconst selectedInstances = getSelectedInstances(accessor);\n\t\t\tif (!selectedInstances) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst listService = accessor.get(IListService);\n\t\t\tconst disposePromises: Promise<void>[] = [];\n\t\t\tfor (const instance of selectedInstances) {\n\t\t\t\tdisposePromises.push(c.service.safeDisposeTerminal(instance));\n\t\t\t}\n\t\t\tawait Promise.all(disposePromises);\n\t\t\tif (c.service.instances.length > 0) {\n\t\t\t\tc.groupService.focusTabs();\n\t\t\t\tlistService.lastFocusedList?.focusNext();\n\t\t\t}\n\t\t}\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.FocusHover,\n\t\ttitle: terminalStrings.focusHover,\n\t\tprecondition: ContextKeyExpr.or(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.isOpen),\n\t\tkeybinding: {\n\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyI),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.or(TerminalContextKeys.tabsFocus, TerminalContextKeys.focus)\n\t\t},\n\t\trun: (c) => c.groupService.focusHover()\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.Clear,\n\t\ttitle: { value: localize('workbench.action.terminal.clear', \"Clear\"), original: 'Clear' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\tkeybinding: [{\n\t\t\tprimary: 0,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.KeyK },\n\t\t\t// Weight is higher than work workbench contributions so the keybinding remains\n\t\t\t// highest priority when chords are registered afterwards\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\t\t// Disable the keybinding when accessibility mode is enabled as chords include\n\t\t\t// important screen reader keybindings such as cmd+k, cmd+i to show the hover\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, CONTEXT_ACCESSIBILITY_MODE_ENABLED.negate()),\n\t\t}],\n\t\trun: (activeInstance) => activeInstance.clearBuffer()\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.SelectDefaultProfile,\n\t\ttitle: { value: localize('workbench.action.terminal.selectDefaultShell', \"Select Default Profile\"), original: 'Select Default Profile' },\n\t\trun: (c) => c.service.showProfileQuickPick('setDefault')\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.ConfigureTerminalSettings,\n\t\ttitle: { value: localize('workbench.action.terminal.openSettings', \"Configure Terminal Settings\"), original: 'Configure Terminal Settings' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: (c, accessor) => accessor.get(IPreferencesService).openSettings({ jsonEditor: false, query: '@feature:terminal' })\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.SetDimensions,\n\t\ttitle: { value: localize('workbench.action.terminal.setFixedDimensions', \"Set Fixed Dimensions\"), original: 'Set Fixed Dimensions' },\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.isOpen),\n\t\trun: (activeInstance) => activeInstance.setFixedDimensions()\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.SizeToContentWidth,\n\t\ttitle: { value: localize('workbench.action.terminal.sizeToContentWidth', \"Toggle Size to Content Width\"), original: 'Toggle Size to Content Width' },\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.isOpen),\n\t\tkeybinding: {\n\t\t\tprimary: KeyMod.Alt | KeyCode.KeyZ,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: TerminalContextKeys.focus\n\t\t},\n\t\trun: (instancactiveInstance) => instancactiveInstance.toggleSizeToContentWidth()\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.SizeToContentWidthActiveTab,\n\t\ttitle: terminalStrings.toggleSizeToContentWidth,\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.focus),\n\t\trun: (c, accessor) => getSelectedInstances(accessor)?.[0].toggleSizeToContentWidth()\n\t});\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.ClearPreviousSessionHistory,\n\t\ttitle: { value: localize('workbench.action.terminal.clearPreviousSessionHistory', \"Clear Previous Session History\"), original: 'Clear Previous Session History' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: async (c, accessor) => {\n\t\t\tgetCommandHistory(accessor).clear();\n\t\t\tclearShellFileHistory();\n\t\t}\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.SelectPrevSuggestion,\n\t\ttitle: { value: localize('workbench.action.terminal.selectPrevSuggestion', \"Select the Previous Suggestion\"), original: 'Select the Previous Suggestion' },\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.focus, TerminalContextKeys.isOpen, TerminalContextKeys.suggestWidgetVisible),\n\t\tkeybinding: {\n\t\t\t// Up is bound to other workbench keybindings that this needs to beat\n\t\t\tprimary: KeyCode.UpArrow,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1\n\t\t},\n\t\trun: (activeInstance) => activeInstance.selectPreviousSuggestion()\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.SelectPrevPageSuggestion,\n\t\ttitle: { value: localize('workbench.action.terminal.selectPrevPageSuggestion', \"Select the Previous Page Suggestion\"), original: 'Select the Previous Page Suggestion' },\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.focus, TerminalContextKeys.isOpen, TerminalContextKeys.suggestWidgetVisible),\n\t\tkeybinding: {\n\t\t\t// Up is bound to other workbench keybindings that this needs to beat\n\t\t\tprimary: KeyCode.PageUp,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1\n\t\t},\n\t\trun: (activeInstance) => activeInstance.selectPreviousPageSuggestion()\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.SelectNextSuggestion,\n\t\ttitle: { value: localize('workbench.action.terminal.selectNextSuggestion', \"Select the Next Suggestion\"), original: 'Select the Next Suggestion' },\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.focus, TerminalContextKeys.isOpen, TerminalContextKeys.suggestWidgetVisible),\n\t\tkeybinding: {\n\t\t\t// Down is bound to other workbench keybindings that this needs to beat\n\t\t\tprimary: KeyCode.DownArrow,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1\n\t\t},\n\t\trun: (insactiveInstanceance) => insactiveInstanceance.selectNextSuggestion()\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.SelectNextPageSuggestion,\n\t\ttitle: { value: localize('workbench.action.terminal.selectNextPageSuggestion', \"Select the Next Page Suggestion\"), original: 'Select the Next Page Suggestion' },\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.focus, TerminalContextKeys.isOpen, TerminalContextKeys.suggestWidgetVisible),\n\t\tkeybinding: {\n\t\t\t// Down is bound to other workbench keybindings that this needs to beat\n\t\t\tprimary: KeyCode.PageDown,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1\n\t\t},\n\t\trun: (activeInstance) => activeInstance.selectNextPageSuggestion()\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.AcceptSelectedSuggestion,\n\t\ttitle: { value: localize('workbench.action.terminal.acceptSelectedSuggestion', \"Accept Selected Suggestion\"), original: 'Accept Selected Suggestion' },\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.focus, TerminalContextKeys.isOpen, TerminalContextKeys.suggestWidgetVisible),\n\t\tkeybinding: {\n\t\t\tprimary: KeyCode.Enter,\n\t\t\tsecondary: [KeyCode.Tab],\n\t\t\t// Enter is bound to other workbench keybindings that this needs to beat\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1\n\t\t},\n\t\trun: (activeInstance) => activeInstance.acceptSelectedSuggestion()\n\t});\n\n\tregisterActiveInstanceAction({\n\t\tid: TerminalCommandId.HideSuggestWidget,\n\t\ttitle: { value: localize('workbench.action.terminal.hideSuggestWidget', \"Hide Suggest Widget\"), original: 'Hide Suggest Widget' },\n\t\tf1: false,\n\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.focus, TerminalContextKeys.isOpen, TerminalContextKeys.suggestWidgetVisible),\n\t\tkeybinding: {\n\t\t\tprimary: KeyCode.Escape,\n\t\t\t// Escape is bound to other workbench keybindings that this needs to beat\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1\n\t\t},\n\t\trun: (activeInstance) => activeInstance.hideSuggestWidget()\n\t});\n\n\t// Some commands depend on platform features\n\tif (BrowserFeatures.clipboard.writeText) {\n\t\tregisterActiveXtermAction({\n\t\t\tid: TerminalCommandId.CopySelection,\n\t\t\ttitle: { value: localize('workbench.action.terminal.copySelection', \"Copy Selection\"), original: 'Copy Selection' },\n\t\t\t// TODO: Why is copy still showing up when text isn't selected?\n\t\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.textSelectedInFocused, ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.textSelected)),\n\t\t\tkeybinding: [{\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyC,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.KeyC },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\tContextKeyExpr.and(TerminalContextKeys.textSelected, TerminalContextKeys.focus),\n\t\t\t\t\tTerminalContextKeys.textSelectedInFocused,\n\t\t\t\t)\n\t\t\t}],\n\t\t\trun: (activeInstance) => activeInstance.copySelection()\n\t\t});\n\n\t\tregisterActiveXtermAction({\n\t\t\tid: TerminalCommandId.CopyAndClearSelection,\n\t\t\ttitle: { value: localize('workbench.action.terminal.copyAndClearSelection', \"Copy and Clear Selection\"), original: 'Copy and Clear Selection' },\n\t\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.textSelectedInFocused, ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.textSelected)),\n\t\t\tkeybinding: [{\n\t\t\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.KeyC },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\tContextKeyExpr.and(TerminalContextKeys.textSelected, TerminalContextKeys.focus),\n\t\t\t\t\tTerminalContextKeys.textSelectedInFocused,\n\t\t\t\t)\n\t\t\t}],\n\t\t\trun: async (xterm) => {\n\t\t\t\tawait xterm.copySelection();\n\t\t\t\txterm.clearSelection();\n\t\t\t}\n\t\t});\n\n\t\tregisterActiveXtermAction({\n\t\t\tid: TerminalCommandId.CopySelectionAsHtml,\n\t\t\ttitle: { value: localize('workbench.action.terminal.copySelectionAsHtml', \"Copy Selection as HTML\"), original: 'Copy Selection as HTML' },\n\t\t\tf1: true,\n\t\t\tcategory,\n\t\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.textSelectedInFocused, ContextKeyExpr.and(ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated), TerminalContextKeys.textSelected)),\n\t\t\trun: (xterm) => xterm.copySelection(true)\n\t\t});\n\t}\n\n\tif (BrowserFeatures.clipboard.readText) {\n\t\tregisterActiveInstanceAction({\n\t\t\tid: TerminalCommandId.Paste,\n\t\t\ttitle: { value: localize('workbench.action.terminal.paste', \"Paste into Active Terminal\"), original: 'Paste into Active Terminal' },\n\t\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\t\tkeybinding: [{\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyV,\n\t\t\t\twin: { primary: KeyMod.CtrlCmd | KeyCode.KeyV, secondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyV] },\n\t\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyV },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: TerminalContextKeys.focus\n\t\t\t}],\n\t\t\trun: (activeInstance) => activeInstance.paste()\n\t\t});\n\t}\n\n\tif (BrowserFeatures.clipboard.readText && isLinux) {\n\t\tregisterActiveInstanceAction({\n\t\t\tid: TerminalCommandId.PasteSelection,\n\t\t\ttitle: { value: localize('workbench.action.terminal.pasteSelection', \"Paste Selection into Active Terminal\"), original: 'Paste Selection into Active Terminal' },\n\t\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\t\tkeybinding: [{\n\t\t\t\tlinux: { primary: KeyMod.Shift | KeyCode.Insert },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: TerminalContextKeys.focus\n\t\t\t}],\n\t\t\trun: (activeInstance) => activeInstance.pasteSelection()\n\t\t});\n\t}\n\n\tregisterTerminalAction({\n\t\tid: TerminalCommandId.SwitchTerminal,\n\t\ttitle: { value: localize('workbench.action.terminal.switchTerminal', \"Switch Terminal\"), original: 'Switch Terminal' },\n\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\t\trun: async (c, accessor, args) => {\n\t\t\tconst item = toOptionalString(args);\n\t\t\tif (!item) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (item === switchTerminalActionViewItemSeparator) {\n\t\t\t\tc.service.refreshActiveGroup();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (item === switchTerminalShowTabsTitle) {\n\t\t\t\taccessor.get(IConfigurationService).updateValue(TerminalSettingId.TabsEnabled, true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst terminalIndexRe = /^([0-9]+): /;\n\t\t\tconst indexMatches = terminalIndexRe.exec(item);\n\t\t\tif (indexMatches) {\n\t\t\t\tc.groupService.setActiveGroupByIndex(Number(indexMatches[1]) - 1);\n\t\t\t\treturn c.groupService.showPanel(true);\n\t\t\t}\n\n\t\t\tconst quickSelectProfiles = c.profileService.availableProfiles;\n\n\t\t\t// Remove 'New ' from the selected item to get the profile name\n\t\t\tconst profileSelection = item.substring(4);\n\t\t\tif (quickSelectProfiles) {\n\t\t\t\tconst profile = quickSelectProfiles.find(profile => profile.profileName === profileSelection);\n\t\t\t\tif (profile) {\n\t\t\t\t\tconst instance = await c.service.createTerminal({\n\t\t\t\t\t\tconfig: profile\n\t\t\t\t\t});\n\t\t\t\t\tc.service.setActiveInstance(instance);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(`No profile with name \"${profileSelection}\"`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn(`Unmatched terminal item: \"${item}\"`);\n\t\t\t}\n\t\t}\n\t});\n}\n\ninterface IRemoteTerminalPick extends IQuickPickItem {\n\tterm: IRemoteTerminalAttachTarget;\n}\n\nfunction getSelectedInstances(accessor: ServicesAccessor): ITerminalInstance[] | undefined {\n\tconst listService = accessor.get(IListService);\n\tconst terminalService = accessor.get(ITerminalService);\n\tconst terminalGroupService = accessor.get(ITerminalGroupService);\n\n\t// Get inline tab instance\n\tif (terminalGroupService.lastAccessedMenu === 'inline-tab') {\n\t\tconst instance = terminalGroupService.activeInstance;\n\t\treturn instance ? [terminalGroupService.activeInstance] : undefined;\n\t}\n\n\t// Get tab list instance\n\tif (!listService.lastFocusedList?.getSelection()) {\n\t\treturn undefined;\n\t}\n\tconst selections = listService.lastFocusedList.getSelection();\n\tconst focused = listService.lastFocusedList.getFocus();\n\tconst instances: ITerminalInstance[] = [];\n\n\tif (focused.length === 1 && !selections.includes(focused[0])) {\n\t\t// focused length is always a max of 1\n\t\t// if the focused one is not in the selected list, return that item\n\t\tinstances.push(terminalService.getInstanceFromIndex(focused[0]) as ITerminalInstance);\n\t\treturn instances;\n\t}\n\n\t// multi-select\n\tfor (const selection of selections) {\n\t\tinstances.push(terminalService.getInstanceFromIndex(selection) as ITerminalInstance);\n\t}\n\treturn instances;\n}\n\nexport function validateTerminalName(name: string): { content: string; severity: Severity } | null {\n\tif (!name || name.trim().length === 0) {\n\t\treturn {\n\t\t\tcontent: localize('emptyTerminalNameInfo', \"Providing no name will reset it to the default value\"),\n\t\t\tseverity: Severity.Info\n\t\t};\n\t}\n\n\treturn null;\n}\n\nfunction convertOptionsOrProfileToOptions(optionsOrProfile?: ICreateTerminalOptions | ITerminalProfile): ICreateTerminalOptions | undefined {\n\tif (isObject(optionsOrProfile) && 'profileName' in optionsOrProfile) {\n\t\treturn { config: optionsOrProfile as ITerminalProfile, location: (optionsOrProfile as ICreateTerminalOptions).location };\n\t}\n\treturn optionsOrProfile;\n}\n\nlet newWithProfileAction: IDisposable;\n\nexport function refreshTerminalActions(detectedProfiles: ITerminalProfile[]) {\n\tconst profileEnum = createProfileSchemaEnums(detectedProfiles);\n\tnewWithProfileAction?.dispose();\n\t// TODO: Use new register function\n\tnewWithProfileAction = registerAction2(class extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: TerminalCommandId.NewWithProfile,\n\t\t\t\ttitle: { value: localize('workbench.action.terminal.newWithProfile', \"Create New Terminal (With Profile)\"), original: 'Create New Terminal (With Profile)' },\n\t\t\t\tf1: true,\n\t\t\t\tcategory,\n\t\t\t\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.webExtensionContributedProfile),\n\t\t\t\tdescription: {\n\t\t\t\t\tdescription: TerminalCommandId.NewWithProfile,\n\t\t\t\t\targs: [{\n\t\t\t\t\t\tname: 'args',\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\trequired: ['profileName'],\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tprofileName: {\n\t\t\t\t\t\t\t\t\tdescription: localize('workbench.action.terminal.newWithProfile.profileName', \"The name of the profile to create\"),\n\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\tenum: profileEnum.values,\n\t\t\t\t\t\t\t\t\tmarkdownEnumDescriptions: profileEnum.markdownDescriptions\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}]\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor, eventOrOptionsOrProfile: MouseEvent | ICreateTerminalOptions | ITerminalProfile | { profileName: string } | undefined, profile?: ITerminalProfile) {\n\t\t\tconst c = getTerminalServices(accessor);\n\t\t\tconst workspaceContextService = accessor.get(IWorkspaceContextService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\tlet event: MouseEvent | PointerEvent | KeyboardEvent | undefined;\n\t\t\tlet options: ICreateTerminalOptions | undefined;\n\t\t\tlet instance: ITerminalInstance | undefined;\n\t\t\tlet cwd: string | URI | undefined;\n\n\t\t\tif (isObject(eventOrOptionsOrProfile) && eventOrOptionsOrProfile && 'profileName' in eventOrOptionsOrProfile) {\n\t\t\t\tconst config = c.profileService.availableProfiles.find(profile => profile.profileName === eventOrOptionsOrProfile.profileName);\n\t\t\t\tif (!config) {\n\t\t\t\t\tthrow new Error(`Could not find terminal profile \"${eventOrOptionsOrProfile.profileName}\"`);\n\t\t\t\t}\n\t\t\t\toptions = { config };\n\t\t\t} else if (eventOrOptionsOrProfile instanceof MouseEvent || eventOrOptionsOrProfile instanceof PointerEvent || eventOrOptionsOrProfile instanceof KeyboardEvent) {\n\t\t\t\tevent = eventOrOptionsOrProfile;\n\t\t\t\toptions = profile ? { config: profile } : undefined;\n\t\t\t} else {\n\t\t\t\toptions = convertOptionsOrProfileToOptions(eventOrOptionsOrProfile);\n\t\t\t}\n\n\t\t\t// split terminal\n\t\t\tif (event && (event.altKey || event.ctrlKey)) {\n\t\t\t\tconst parentTerminal = c.service.activeInstance;\n\t\t\t\tif (parentTerminal) {\n\t\t\t\t\tawait c.service.createTerminal({ location: { parentTerminal }, config: options?.config });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst folders = workspaceContextService.getWorkspace().folders;\n\t\t\tif (folders.length > 1) {\n\t\t\t\t// multi-root workspace, create root picker\n\t\t\t\tconst options: IPickOptions<IQuickPickItem> = {\n\t\t\t\t\tplaceHolder: localize('workbench.action.terminal.newWorkspacePlaceholder', \"Select current working directory for new terminal\")\n\t\t\t\t};\n\t\t\t\tconst workspace = await commandService.executeCommand(PICK_WORKSPACE_FOLDER_COMMAND_ID, [options]);\n\t\t\t\tif (!workspace) {\n\t\t\t\t\t// Don't create the instance if the workspace picker was canceled\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcwd = workspace.uri;\n\t\t\t}\n\n\t\t\tif (options) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t\tinstance = await c.service.createTerminal(options);\n\t\t\t} else {\n\t\t\t\tinstance = await c.service.showProfileQuickPick('createInstance', cwd);\n\t\t\t}\n\n\t\t\tif (instance) {\n\t\t\t\tc.service.setActiveInstance(instance);\n\t\t\t\tawait focusActiveTerminal(instance, c);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction getResourceOrActiveInstance(c: ITerminalServicesCollection, resource: unknown): ITerminalInstance | undefined {\n\treturn c.service.getInstanceFromResource(toOptionalUri(resource)) || c.service.activeInstance;\n}\n\nasync function pickTerminalCwd(accessor: ServicesAccessor, cancel?: CancellationToken): Promise<WorkspaceFolderCwdPair | undefined> {\n\tconst quickInputService = accessor.get(IQuickInputService);\n\tconst labelService = accessor.get(ILabelService);\n\tconst contextService = accessor.get(IWorkspaceContextService);\n\tconst modelService = accessor.get(IModelService);\n\tconst languageService = accessor.get(ILanguageService);\n\tconst configurationService = accessor.get(IConfigurationService);\n\tconst configurationResolverService = accessor.get(IConfigurationResolverService);\n\n\tconst folders = contextService.getWorkspace().folders;\n\tif (!folders.length) {\n\t\treturn;\n\t}\n\n\tconst folderCwdPairs = await Promise.all(folders.map(x => resolveWorkspaceFolderCwd(x, configurationService, configurationResolverService)));\n\tconst shrinkedPairs = shrinkWorkspaceFolderCwdPairs(folderCwdPairs);\n\n\tif (shrinkedPairs.length === 1) {\n\t\treturn shrinkedPairs[0];\n\t}\n\n\ttype Item = IQuickPickItem & { pair: WorkspaceFolderCwdPair };\n\tconst folderPicks: Item[] = shrinkedPairs.map(pair => {\n\t\tconst label = pair.folder.name;\n\t\tconst description = pair.isOverridden\n\t\t\t? localize('workbench.action.terminal.overriddenCwdDescription', \"(Overriden) {0}\", labelService.getUriLabel(pair.cwd, { relative: !pair.isAbsolute }))\n\t\t\t: labelService.getUriLabel(dirname(pair.cwd), { relative: true });\n\n\t\treturn {\n\t\t\tlabel,\n\t\t\tdescription: description !== label ? description : undefined,\n\t\t\tpair: pair,\n\t\t\ticonClasses: getIconClasses(modelService, languageService, pair.cwd, FileKind.ROOT_FOLDER)\n\t\t};\n\t});\n\tconst options: IPickOptions<Item> = {\n\t\tplaceHolder: localize('workbench.action.terminal.newWorkspacePlaceholder', \"Select current working directory for new terminal\"),\n\t\tmatchOnDescription: true,\n\t\tcanPickMany: false,\n\t};\n\n\tconst token: CancellationToken = cancel || CancellationToken.None;\n\tconst pick = await quickInputService.pick<Item>(folderPicks, options, token);\n\treturn pick?.pair;\n}\n\nasync function resolveWorkspaceFolderCwd(folder: IWorkspaceFolder, configurationService: IConfigurationService, configurationResolverService: IConfigurationResolverService): Promise<WorkspaceFolderCwdPair> {\n\tconst cwdConfig = configurationService.getValue(TerminalSettingId.Cwd, { resource: folder.uri });\n\tif (!isString(cwdConfig) || cwdConfig.length === 0) {\n\t\treturn { folder, cwd: folder.uri, isAbsolute: false, isOverridden: false };\n\t}\n\n\tconst resolvedCwdConfig = await configurationResolverService.resolveAsync(folder, cwdConfig);\n\treturn isAbsolute(resolvedCwdConfig) || resolvedCwdConfig.startsWith(AbstractVariableResolverService.VARIABLE_LHS)\n\t\t? { folder, isAbsolute: true, isOverridden: true, cwd: URI.from({ scheme: folder.uri.scheme, path: resolvedCwdConfig }) }\n\t\t: { folder, isAbsolute: false, isOverridden: true, cwd: URI.joinPath(folder.uri, resolvedCwdConfig) };\n}\n\n/**\n * Drops repeated CWDs, if any, by keeping the one which best matches the workspace folder. It also preserves the original order.\n */\nexport function shrinkWorkspaceFolderCwdPairs(pairs: WorkspaceFolderCwdPair[]): WorkspaceFolderCwdPair[] {\n\tconst map = new Map<string, WorkspaceFolderCwdPair>();\n\tfor (const pair of pairs) {\n\t\tconst key = pair.cwd.toString();\n\t\tconst value = map.get(key);\n\t\tif (!value || key === pair.folder.uri.toString()) {\n\t\t\tmap.set(key, pair);\n\t\t}\n\t}\n\tconst selectedPairs = new Set(map.values());\n\tconst selectedPairsInOrder = pairs.filter(x => selectedPairs.has(x));\n\treturn selectedPairsInOrder;\n}\n\nasync function focusActiveTerminal(instance: ITerminalInstance, c: ITerminalServicesCollection): Promise<void> {\n\tif (instance.target === TerminalLocation.Editor) {\n\t\tawait c.editorService.revealActiveEditor();\n\t\tawait instance.focusWhenReady(true);\n\t} else {\n\t\tawait c.groupService.showPanel(true);\n\t}\n}\n\nasync function renameWithQuickPick(c: ITerminalServicesCollection, accessor: ServicesAccessor, resource?: unknown) {\n\tconst instance = getResourceOrActiveInstance(c, resource);\n\tif (instance) {\n\t\tconst title = await accessor.get(IQuickInputService).input({\n\t\t\tvalue: instance.title,\n\t\t\tprompt: localize('workbench.action.terminal.rename.prompt', \"Enter terminal name\"),\n\t\t});\n\t\tinstance.rename(title);\n\t}\n}\n\nfunction toOptionalUri(obj: unknown): URI | undefined {\n\treturn URI.isUri(obj) ? obj : undefined;\n}\n\nfunction toOptionalString(obj: unknown): string | undefined {\n\treturn isString(obj) ? obj : undefined;\n}\n"]}