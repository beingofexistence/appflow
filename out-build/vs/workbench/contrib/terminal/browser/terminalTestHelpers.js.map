{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/browser/terminalTestHelpers.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKzF,KAAK,UAAU,IAAI,CAAG,QAAkB,EAAE,IAAY;QAC5D,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC5C,MAAM,WAAW,GAAG,IAAA,WAAG,EAAK,IAAI,CAAC,CAAC;YAClC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,kDAAkD,CAAC,CAAC,CAAC;YACnF,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE;gBACzB,WAAW,CAAC,MAAM,EAAE,CAAC;gBACrB,OAAO,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IATD,oBASC","file":"terminalTestHelpers.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport type { Terminal } from 'xterm';\n\nexport async function writeP(terminal: Terminal, data: string): Promise<void> {\n\treturn new Promise<void>((resolve, reject) => {\n\t\tconst failTimeout = timeout(2000);\n\t\tfailTimeout.then(() => reject('Writing to xterm is taking longer than 2 seconds'));\n\t\tterminal.write(data, () => {\n\t\t\tfailTimeout.cancel();\n\t\t\tresolve();\n\t\t});\n\t});\n}\n"]}