{"version":3,"sources":["vs/workbench/contrib/terminal/browser/terminalInstance.ts"],"names":[],"mappings":"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","file":"terminalInstance.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isFirefox } from 'vs/base/browser/browser';\nimport { BrowserFeatures } from 'vs/base/browser/canIUse';\nimport { DataTransfers } from 'vs/base/browser/dnd';\nimport * as dom from 'vs/base/browser/dom';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { Orientation } from 'vs/base/browser/ui/sash/sash';\nimport { DomScrollableElement } from 'vs/base/browser/ui/scrollbar/scrollableElement';\nimport { AutoOpenBarrier, Promises, timeout } from 'vs/base/common/async';\nimport { Codicon, getAllCodicons } from 'vs/base/common/codicons';\nimport { debounce } from 'vs/base/common/decorators';\nimport { ErrorNoTelemetry, onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { ISeparator, template } from 'vs/base/common/labels';\nimport { Disposable, IDisposable, MutableDisposable, dispose, toDisposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport * as path from 'vs/base/common/path';\nimport { OS, OperatingSystem, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { ScrollbarVisibility } from 'vs/base/common/scrollable';\nimport { URI } from 'vs/base/common/uri';\nimport { TabFocus } from 'vs/editor/browser/config/tabFocus';\nimport * as nls from 'vs/nls';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { AudioCue, IAudioCueService } from 'vs/platform/audioCues/browser/audioCueService';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { CodeDataTransfers, containsDragType } from 'vs/platform/dnd/browser/dnd';\nimport { FileSystemProviderCapabilities, IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ResultKind } from 'vs/platform/keybinding/common/keybindingResolver';\nimport { INotificationService, IPromptChoice, Severity } from 'vs/platform/notification/common/notification';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IQuickInputService, IQuickPickItem, QuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IMarkProperties, ITerminalCommand, TerminalCapability } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { TerminalCapabilityStoreMultiplexer } from 'vs/platform/terminal/common/capabilities/terminalCapabilityStore';\nimport { IEnvironmentVariableCollection, IMergedEnvironmentVariableCollection } from 'vs/platform/terminal/common/environmentVariable';\nimport { deserializeEnvironmentVariableCollections } from 'vs/platform/terminal/common/environmentVariableShared';\nimport { IProcessDataEvent, IProcessPropertyMap, IReconnectionProperties, IShellLaunchConfig, ITerminalDimensionsOverride, ITerminalLaunchError, ITerminalLogService, PosixShellType, ProcessPropertyType, ShellIntegrationStatus, TerminalExitReason, TerminalIcon, TerminalLocation, TerminalSettingId, TerminalShellType, TitleEventSource, WindowsShellType } from 'vs/platform/terminal/common/terminal';\nimport { formatMessageForTerminal } from 'vs/platform/terminal/common/terminalStrings';\nimport { editorBackground } from 'vs/platform/theme/common/colorRegistry';\nimport { getIconRegistry } from 'vs/platform/theme/common/iconRegistry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IWorkspaceContextService, IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IWorkspaceTrustRequestService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { PANEL_BACKGROUND, SIDE_BAR_BACKGROUND } from 'vs/workbench/common/theme';\nimport { IViewDescriptorService, IViewsService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { AccessibilityVerbositySettingId } from 'vs/workbench/contrib/accessibility/browser/accessibilityConfiguration';\nimport { IRequestAddInstanceToGroupEvent, ITerminalContribution, ITerminalInstance, TerminalDataTransfers } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { TerminalLaunchHelpAction } from 'vs/workbench/contrib/terminal/browser/terminalActions';\nimport { TerminalConfigHelper } from 'vs/workbench/contrib/terminal/browser/terminalConfigHelper';\nimport { TerminalEditorInput } from 'vs/workbench/contrib/terminal/browser/terminalEditorInput';\nimport { TerminalExtensionsRegistry } from 'vs/workbench/contrib/terminal/browser/terminalExtensions';\nimport { getColorClass, getColorStyleElement, getStandardColors } from 'vs/workbench/contrib/terminal/browser/terminalIcon';\nimport { TerminalProcessManager } from 'vs/workbench/contrib/terminal/browser/terminalProcessManager';\nimport { showRunRecentQuickPick } from 'vs/workbench/contrib/terminal/browser/terminalRunRecentQuickPick';\nimport { ITerminalStatusList, TerminalStatus, TerminalStatusList } from 'vs/workbench/contrib/terminal/browser/terminalStatusList';\nimport { getTerminalResourcesFromDragEvent, getTerminalUri } from 'vs/workbench/contrib/terminal/browser/terminalUri';\nimport { TerminalWidgetManager } from 'vs/workbench/contrib/terminal/browser/widgets/widgetManager';\nimport { LineDataEventAddon } from 'vs/workbench/contrib/terminal/browser/xterm/lineDataEventAddon';\nimport { XtermTerminal, getXtermScaledDimensions } from 'vs/workbench/contrib/terminal/browser/xterm/xtermTerminal';\nimport { IEnvironmentVariableInfo } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { getCommandHistory, getDirectoryHistory } from 'vs/workbench/contrib/terminal/common/history';\nimport { DEFAULT_COMMANDS_TO_SKIP_SHELL, ITerminalProcessManager, ITerminalProfileResolverService, ProcessState, TERMINAL_CREATION_COMMANDS, TERMINAL_VIEW_ID, TerminalCommandId } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { TERMINAL_BACKGROUND_COLOR } from 'vs/workbench/contrib/terminal/common/terminalColorRegistry';\nimport { TerminalContextKeys } from 'vs/workbench/contrib/terminal/common/terminalContextKey';\nimport { getWorkspaceForTerminal, preparePathForShell } from 'vs/workbench/contrib/terminal/common/terminalEnvironment';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { IWorkbenchLayoutService, Position } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { importAMDNodeModule } from 'vs/amdX';\nimport { ISimpleSelectedSuggestion } from 'vs/workbench/services/suggest/browser/simpleSuggestWidget';\nimport type { IMarker, Terminal as XTermTerminal } from 'xterm';\nimport { AccessibilityCommandId } from 'vs/workbench/contrib/accessibility/common/accessibilityCommands';\n\nconst enum Constants {\n\t/**\n\t * The maximum amount of milliseconds to wait for a container before starting to create the\n\t * terminal process. This period helps ensure the terminal has good initial dimensions to work\n\t * with if it's going to be a foreground terminal.\n\t */\n\tWaitForContainerThreshold = 100,\n\n\tDefaultCols = 80,\n\tDefaultRows = 30,\n\tMaxSupportedCols = 5000,\n\tMaxCanvasWidth = 8000\n}\n\nlet xtermConstructor: Promise<typeof XTermTerminal> | undefined;\n\ninterface ICanvasDimensions {\n\twidth: number;\n\theight: number;\n}\n\ninterface IGridDimensions {\n\tcols: number;\n\trows: number;\n}\n\nconst shellIntegrationSupportedShellTypes = [\n\tPosixShellType.Bash,\n\tPosixShellType.Zsh,\n\tPosixShellType.PowerShell,\n\tWindowsShellType.PowerShell\n];\n\nexport class TerminalInstance extends Disposable implements ITerminalInstance {\n\tprivate static _lastKnownCanvasDimensions: ICanvasDimensions | undefined;\n\tprivate static _lastKnownGridDimensions: IGridDimensions | undefined;\n\tprivate static _instanceIdCounter = 1;\n\n\tprivate readonly _scopedInstantiationService: IInstantiationService;\n\n\tprivate readonly _processManager: ITerminalProcessManager;\n\tprivate readonly _contributions: Map<string, ITerminalContribution> = new Map();\n\tprivate readonly _resource: URI;\n\tprivate _xtermReadyPromise: Promise<XtermTerminal>;\n\tprivate _pressAnyKeyToCloseListener: IDisposable | undefined;\n\tprivate _instanceId: number;\n\tprivate _latestXtermWriteData: number = 0;\n\tprivate _latestXtermParseData: number = 0;\n\tprivate _isExiting: boolean;\n\tprivate _hadFocusOnExit: boolean;\n\tprivate _isVisible: boolean;\n\tprivate _isDisposed: boolean;\n\tprivate _exitCode: number | undefined;\n\tprivate _exitReason: TerminalExitReason | undefined;\n\tprivate _skipTerminalCommands: string[];\n\tprivate _shellType: TerminalShellType | undefined;\n\tprivate _title: string = '';\n\tprivate _titleSource: TitleEventSource = TitleEventSource.Process;\n\tprivate _container: HTMLElement | undefined;\n\tprivate _wrapperElement: (HTMLElement & { xterm?: XTermTerminal });\n\tget domElement(): HTMLElement { return this._wrapperElement; }\n\tprivate _horizontalScrollbar: DomScrollableElement | undefined;\n\tprivate _terminalFocusContextKey: IContextKey<boolean>;\n\tprivate _terminalHasFixedWidth: IContextKey<boolean>;\n\tprivate _terminalHasTextContextKey: IContextKey<boolean>;\n\tprivate _terminalAltBufferActiveContextKey: IContextKey<boolean>;\n\tprivate _terminalShellIntegrationEnabledContextKey: IContextKey<boolean>;\n\tprivate _cols: number = 0;\n\tprivate _rows: number = 0;\n\tprivate _fixedCols: number | undefined;\n\tprivate _fixedRows: number | undefined;\n\tprivate _cwd: string | undefined = undefined;\n\tprivate _initialCwd: string | undefined = undefined;\n\tprivate _injectedArgs: string[] | undefined = undefined;\n\tprivate _layoutSettingsChanged: boolean = true;\n\tprivate _dimensionsOverride: ITerminalDimensionsOverride | undefined;\n\tprivate _areLinksReady: boolean = false;\n\tprivate _initialDataEvents: string[] | undefined = [];\n\tprivate _containerReadyBarrier: AutoOpenBarrier;\n\tprivate _attachBarrier: AutoOpenBarrier;\n\tprivate _icon: TerminalIcon | undefined;\n\tprivate _messageTitleDisposable: MutableDisposable<IDisposable> = this._register(new MutableDisposable());\n\tprivate _widgetManager: TerminalWidgetManager = new TerminalWidgetManager();\n\tprivate _dndObserver: MutableDisposable<IDisposable> = this._register(new MutableDisposable());\n\tprivate _lastLayoutDimensions: dom.Dimension | undefined;\n\tprivate _hasHadInput: boolean;\n\tprivate _description?: string;\n\tprivate _processName: string = '';\n\tprivate _sequence?: string;\n\tprivate _staticTitle?: string;\n\tprivate _workspaceFolder?: IWorkspaceFolder;\n\tprivate _labelComputer?: TerminalLabelComputer;\n\tprivate _userHome?: string;\n\tprivate _hasScrollBar?: boolean;\n\tprivate _target?: TerminalLocation | undefined;\n\tprivate _usedShellIntegrationInjection: boolean = false;\n\tget usedShellIntegrationInjection(): boolean { return this._usedShellIntegrationInjection; }\n\tprivate _lineDataEventAddon: LineDataEventAddon | undefined;\n\n\treadonly capabilities = new TerminalCapabilityStoreMultiplexer();\n\treadonly statusList: ITerminalStatusList;\n\n\tget extEnvironmentVariableCollection(): IMergedEnvironmentVariableCollection | undefined { return this._processManager.extEnvironmentVariableCollection; }\n\n\txterm?: XtermTerminal;\n\tdisableLayout: boolean = false;\n\n\tget waitOnExit(): ITerminalInstance['waitOnExit'] { return this._shellLaunchConfig.attachPersistentProcess?.waitOnExit || this._shellLaunchConfig.waitOnExit; }\n\tset waitOnExit(value: ITerminalInstance['waitOnExit']) {\n\t\tthis._shellLaunchConfig.waitOnExit = value;\n\t}\n\n\tget target(): TerminalLocation | undefined { return this._target; }\n\tset target(value: TerminalLocation | undefined) { this._target = value; }\n\n\tget instanceId(): number { return this._instanceId; }\n\tget resource(): URI { return this._resource; }\n\tget cols(): number {\n\t\tif (this._fixedCols !== undefined) {\n\t\t\treturn this._fixedCols;\n\t\t}\n\t\tif (this._dimensionsOverride && this._dimensionsOverride.cols) {\n\t\t\tif (this._dimensionsOverride.forceExactSize) {\n\t\t\t\treturn this._dimensionsOverride.cols;\n\t\t\t}\n\t\t\treturn Math.min(Math.max(this._dimensionsOverride.cols, 2), this._cols);\n\t\t}\n\t\treturn this._cols;\n\t}\n\tget rows(): number {\n\t\tif (this._fixedRows !== undefined) {\n\t\t\treturn this._fixedRows;\n\t\t}\n\t\tif (this._dimensionsOverride && this._dimensionsOverride.rows) {\n\t\t\tif (this._dimensionsOverride.forceExactSize) {\n\t\t\t\treturn this._dimensionsOverride.rows;\n\t\t\t}\n\t\t\treturn Math.min(Math.max(this._dimensionsOverride.rows, 2), this._rows);\n\t\t}\n\t\treturn this._rows;\n\t}\n\tget isDisposed(): boolean { return this._isDisposed; }\n\tget fixedCols(): number | undefined { return this._fixedCols; }\n\tget fixedRows(): number | undefined { return this._fixedRows; }\n\tget maxCols(): number { return this._cols; }\n\tget maxRows(): number { return this._rows; }\n\t// TODO: Ideally processId would be merged into processReady\n\tget processId(): number | undefined { return this._processManager.shellProcessId; }\n\t// TODO: How does this work with detached processes?\n\t// TODO: Should this be an event as it can fire twice?\n\tget processReady(): Promise<void> { return this._processManager.ptyProcessReady; }\n\tget hasChildProcesses(): boolean { return this.shellLaunchConfig.attachPersistentProcess?.hasChildProcesses || this._processManager.hasChildProcesses; }\n\tget reconnectionProperties(): IReconnectionProperties | undefined { return this.shellLaunchConfig.attachPersistentProcess?.reconnectionProperties || this.shellLaunchConfig.reconnectionProperties; }\n\tget areLinksReady(): boolean { return this._areLinksReady; }\n\tget initialDataEvents(): string[] | undefined { return this._initialDataEvents; }\n\tget exitCode(): number | undefined { return this._exitCode; }\n\tget exitReason(): TerminalExitReason | undefined { return this._exitReason; }\n\tget hadFocusOnExit(): boolean { return this._hadFocusOnExit; }\n\tget isTitleSetByProcess(): boolean { return !!this._messageTitleDisposable.value; }\n\tget shellLaunchConfig(): IShellLaunchConfig { return this._shellLaunchConfig; }\n\tget shellType(): TerminalShellType | undefined { return this._shellType; }\n\tget os(): OperatingSystem | undefined { return this._processManager.os; }\n\tget isRemote(): boolean { return this._processManager.remoteAuthority !== undefined; }\n\tget remoteAuthority(): string | undefined { return this._processManager.remoteAuthority; }\n\tget hasFocus(): boolean { return this._wrapperElement.contains(document.activeElement) ?? false; }\n\tget title(): string { return this._title; }\n\tget titleSource(): TitleEventSource { return this._titleSource; }\n\tget icon(): TerminalIcon | undefined { return this._getIcon(); }\n\tget color(): string | undefined { return this._getColor(); }\n\tget processName(): string { return this._processName; }\n\tget sequence(): string | undefined { return this._sequence; }\n\tget staticTitle(): string | undefined { return this._staticTitle; }\n\tget workspaceFolder(): IWorkspaceFolder | undefined { return this._workspaceFolder; }\n\tget cwd(): string | undefined { return this._cwd; }\n\tget initialCwd(): string | undefined { return this._initialCwd; }\n\tget description(): string | undefined {\n\t\tif (this._description) {\n\t\t\treturn this._description;\n\t\t}\n\t\tconst type = this.shellLaunchConfig.attachPersistentProcess?.type || this.shellLaunchConfig.type;\n\t\tif (type) {\n\t\t\tif (type === 'Task') {\n\t\t\t\treturn nls.localize('terminalTypeTask', \"Task\");\n\t\t\t}\n\t\t\treturn nls.localize('terminalTypeLocal', \"Local\");\n\t\t}\n\t\treturn undefined;\n\t}\n\tget userHome(): string | undefined { return this._userHome; }\n\tget shellIntegrationNonce(): string { return this._processManager.shellIntegrationNonce; }\n\tget injectedArgs(): string[] | undefined { return this._injectedArgs; }\n\n\t// The onExit event is special in that it fires and is disposed after the terminal instance\n\t// itself is disposed\n\tprivate readonly _onExit = new Emitter<number | ITerminalLaunchError | undefined>();\n\treadonly onExit = this._onExit.event;\n\tprivate readonly _onDisposed = this._register(new Emitter<ITerminalInstance>());\n\treadonly onDisposed = this._onDisposed.event;\n\tprivate readonly _onProcessIdReady = this._register(new Emitter<ITerminalInstance>());\n\treadonly onProcessIdReady = this._onProcessIdReady.event;\n\tprivate readonly _onProcessReplayComplete = this._register(new Emitter<void>());\n\treadonly onProcessReplayComplete = this._onProcessReplayComplete.event;\n\tprivate readonly _onTitleChanged = this._register(new Emitter<ITerminalInstance>());\n\treadonly onTitleChanged = this._onTitleChanged.event;\n\tprivate readonly _onIconChanged = this._register(new Emitter<{ instance: ITerminalInstance; userInitiated: boolean }>());\n\treadonly onIconChanged = this._onIconChanged.event;\n\tprivate readonly _onData = this._register(new Emitter<string>());\n\treadonly onData = this._onData.event;\n\tprivate readonly _onBinary = this._register(new Emitter<string>());\n\treadonly onBinary = this._onBinary.event;\n\tprivate readonly _onLineData = this._register(new Emitter<string>({\n\t\tonDidAddFirstListener: () => this._onLineDataSetup()\n\t}));\n\treadonly onLineData = this._onLineData.event;\n\tprivate readonly _onRequestExtHostProcess = this._register(new Emitter<ITerminalInstance>());\n\treadonly onRequestExtHostProcess = this._onRequestExtHostProcess.event;\n\tprivate readonly _onDimensionsChanged = this._register(new Emitter<void>());\n\treadonly onDimensionsChanged = this._onDimensionsChanged.event;\n\tprivate readonly _onMaximumDimensionsChanged = this._register(new Emitter<void>());\n\treadonly onMaximumDimensionsChanged = this._onMaximumDimensionsChanged.event;\n\tprivate readonly _onDidFocus = this._register(new Emitter<ITerminalInstance>());\n\treadonly onDidFocus = this._onDidFocus.event;\n\tprivate readonly _onDidRequestFocus = this._register(new Emitter<void>());\n\treadonly onDidRequestFocus = this._onDidRequestFocus.event;\n\tprivate readonly _onDidBlur = this._register(new Emitter<ITerminalInstance>());\n\treadonly onDidBlur = this._onDidBlur.event;\n\tprivate readonly _onDidInputData = this._register(new Emitter<ITerminalInstance>());\n\treadonly onDidInputData = this._onDidInputData.event;\n\tprivate readonly _onDidChangeSelection = this._register(new Emitter<ITerminalInstance>());\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\tprivate readonly _onRequestAddInstanceToGroup = this._register(new Emitter<IRequestAddInstanceToGroupEvent>());\n\treadonly onRequestAddInstanceToGroup = this._onRequestAddInstanceToGroup.event;\n\tprivate readonly _onDidChangeHasChildProcesses = this._register(new Emitter<boolean>());\n\treadonly onDidChangeHasChildProcesses = this._onDidChangeHasChildProcesses.event;\n\tprivate readonly _onDidRunText = this._register(new Emitter<void>());\n\treadonly onDidRunText = this._onDidRunText.event;\n\n\tconstructor(\n\t\tprivate readonly _terminalShellTypeContextKey: IContextKey<string>,\n\t\tprivate readonly _terminalInRunCommandPicker: IContextKey<boolean>,\n\t\tprivate readonly _terminalSuggestWidgetVisibleContextKey: IContextKey<boolean>,\n\t\tprivate readonly _configHelper: TerminalConfigHelper,\n\t\tprivate _shellLaunchConfig: IShellLaunchConfig,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITerminalProfileResolverService private readonly _terminalProfileResolverService: ITerminalProfileResolverService,\n\t\t@IPathService private readonly _pathService: IPathService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IPreferencesService private readonly _preferencesService: IPreferencesService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ITerminalLogService private readonly _logService: ITerminalLogService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@IWorkbenchEnvironmentService workbenchEnvironmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IWorkspaceTrustRequestService private readonly _workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t\t@IHistoryService private readonly _historyService: IHistoryService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IAudioCueService private readonly _audioCueService: IAudioCueService,\n\t\t@IViewDescriptorService private readonly _viewDescriptorService: IViewDescriptorService,\n\t) {\n\t\tsuper();\n\n\t\tthis._wrapperElement = document.createElement('div');\n\t\tthis._wrapperElement.classList.add('terminal-wrapper');\n\n\t\tthis._skipTerminalCommands = [];\n\t\tthis._isExiting = false;\n\t\tthis._hadFocusOnExit = false;\n\t\tthis._isVisible = false;\n\t\tthis._isDisposed = false;\n\t\tthis._instanceId = TerminalInstance._instanceIdCounter++;\n\t\tthis._hasHadInput = false;\n\t\tthis._fixedRows = _shellLaunchConfig.attachPersistentProcess?.fixedDimensions?.rows;\n\t\tthis._fixedCols = _shellLaunchConfig.attachPersistentProcess?.fixedDimensions?.cols;\n\n\t\tthis._resource = getTerminalUri(this._workspaceContextService.getWorkspace().id, this.instanceId, this.title);\n\n\t\tif (this._shellLaunchConfig.attachPersistentProcess?.hideFromUser) {\n\t\t\tthis._shellLaunchConfig.hideFromUser = this._shellLaunchConfig.attachPersistentProcess.hideFromUser;\n\t\t}\n\n\t\tif (this._shellLaunchConfig.attachPersistentProcess?.isFeatureTerminal) {\n\t\t\tthis._shellLaunchConfig.isFeatureTerminal = this._shellLaunchConfig.attachPersistentProcess.isFeatureTerminal;\n\t\t}\n\n\t\tif (this._shellLaunchConfig.attachPersistentProcess?.type) {\n\t\t\tthis._shellLaunchConfig.type = this._shellLaunchConfig.attachPersistentProcess.type;\n\t\t}\n\n\t\tif (this.shellLaunchConfig.cwd) {\n\t\t\tconst cwdUri = typeof this._shellLaunchConfig.cwd === 'string' ? URI.from({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\tpath: this._shellLaunchConfig.cwd\n\t\t\t}) : this._shellLaunchConfig.cwd;\n\t\t\tif (cwdUri) {\n\t\t\t\tthis._workspaceFolder = this._workspaceContextService.getWorkspaceFolder(cwdUri) ?? undefined;\n\t\t\t}\n\t\t}\n\t\tif (!this._workspaceFolder) {\n\t\t\tconst activeWorkspaceRootUri = this._historyService.getLastActiveWorkspaceRoot();\n\t\t\tthis._workspaceFolder = activeWorkspaceRootUri ? this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri) ?? undefined : undefined;\n\t\t}\n\n\t\tconst scopedContextKeyService = this._register(_contextKeyService.createScoped(this._wrapperElement));\n\t\tthis._scopedInstantiationService = instantiationService.createChild(new ServiceCollection(\n\t\t\t[IContextKeyService, scopedContextKeyService]\n\t\t));\n\n\t\tthis._terminalFocusContextKey = TerminalContextKeys.focus.bindTo(scopedContextKeyService);\n\t\tthis._terminalHasFixedWidth = TerminalContextKeys.terminalHasFixedWidth.bindTo(scopedContextKeyService);\n\t\tthis._terminalHasTextContextKey = TerminalContextKeys.textSelected.bindTo(scopedContextKeyService);\n\t\tthis._terminalAltBufferActiveContextKey = TerminalContextKeys.altBufferActive.bindTo(scopedContextKeyService);\n\t\tthis._terminalShellIntegrationEnabledContextKey = TerminalContextKeys.terminalShellIntegrationEnabled.bindTo(scopedContextKeyService);\n\n\t\tthis._logService.trace(`terminalInstance#ctor (instanceId: ${this.instanceId})`, this._shellLaunchConfig);\n\t\tthis._register(this.capabilities.onDidAddCapabilityType(e => {\n\t\t\tthis._logService.debug('terminalInstance added capability', e);\n\t\t\tif (e === TerminalCapability.CwdDetection) {\n\t\t\t\tthis.capabilities.get(TerminalCapability.CwdDetection)?.onDidChangeCwd(e => {\n\t\t\t\t\tthis._cwd = e;\n\t\t\t\t\tthis._setTitle(this.title, TitleEventSource.Config);\n\t\t\t\t\tthis._scopedInstantiationService.invokeFunction(getDirectoryHistory)?.add(e, { remoteAuthority: this.remoteAuthority });\n\t\t\t\t});\n\t\t\t} else if (e === TerminalCapability.CommandDetection) {\n\t\t\t\tconst commandCapability = this.capabilities.get(TerminalCapability.CommandDetection);\n\t\t\t\tcommandCapability?.onCommandFinished(e => {\n\t\t\t\t\tif (e.command.trim().length > 0) {\n\t\t\t\t\t\tthis._scopedInstantiationService.invokeFunction(getCommandHistory)?.add(e.command, { shellType: this._shellType });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.capabilities.onDidRemoveCapabilityType(e => this._logService.debug('terminalInstance removed capability', e)));\n\n\t\t// Resolve just the icon ahead of time so that it shows up immediately in the tabs. This is\n\t\t// disabled in remote because this needs to be sync and the OS may differ on the remote\n\t\t// which would result in the wrong profile being selected and the wrong icon being\n\t\t// permanently attached to the terminal. This also doesn't work when the default profile\n\t\t// setting is set to null, that's handled after the process is created.\n\t\tif (!this.shellLaunchConfig.executable && !workbenchEnvironmentService.remoteAuthority) {\n\t\t\tthis._terminalProfileResolverService.resolveIcon(this._shellLaunchConfig, OS);\n\t\t}\n\t\tthis._icon = _shellLaunchConfig.attachPersistentProcess?.icon || _shellLaunchConfig.icon;\n\n\t\t// When a custom pty is used set the name immediately so it gets passed over to the exthost\n\t\t// and is available when Pseudoterminal.open fires.\n\t\tif (this.shellLaunchConfig.customPtyImplementation) {\n\t\t\tthis._setTitle(this._shellLaunchConfig.name, TitleEventSource.Api);\n\t\t}\n\n\t\tthis.statusList = this._scopedInstantiationService.createInstance(TerminalStatusList);\n\t\tthis._initDimensions();\n\t\tthis._processManager = this._createProcessManager();\n\n\t\tthis._containerReadyBarrier = new AutoOpenBarrier(Constants.WaitForContainerThreshold);\n\t\tthis._attachBarrier = new AutoOpenBarrier(1000);\n\t\tthis._xtermReadyPromise = this._createXterm();\n\t\tthis._xtermReadyPromise.then(async () => {\n\t\t\t// Wait for a period to allow a container to be ready\n\t\t\tawait this._containerReadyBarrier.wait();\n\n\t\t\t// Resolve the executable ahead of time if shell integration is enabled, this should not\n\t\t\t// be done for custom PTYs as that would cause extension Pseudoterminal-based terminals\n\t\t\t// to hang in resolver extensions\n\t\t\tif (!this.shellLaunchConfig.customPtyImplementation && this._configHelper.config.shellIntegration?.enabled && !this.shellLaunchConfig.executable) {\n\t\t\t\tconst os = await this._processManager.getBackendOS();\n\t\t\t\tconst defaultProfile = (await this._terminalProfileResolverService.getDefaultProfile({ remoteAuthority: this.remoteAuthority, os }));\n\t\t\t\tthis.shellLaunchConfig.executable = defaultProfile.path;\n\t\t\t\tthis.shellLaunchConfig.args = defaultProfile.args;\n\t\t\t\tif (this.shellLaunchConfig.isExtensionOwnedTerminal) {\n\t\t\t\t\t// Only use default icon and color if they are undefined in the SLC\n\t\t\t\t\tthis.shellLaunchConfig.icon ??= defaultProfile.icon;\n\t\t\t\t\tthis.shellLaunchConfig.color ??= defaultProfile.color;\n\t\t\t\t} else {\n\t\t\t\t\tthis.shellLaunchConfig.icon = defaultProfile.icon;\n\t\t\t\t\tthis.shellLaunchConfig.color = defaultProfile.color;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this._createProcess();\n\n\t\t\t// Re-establish the title after reconnect\n\t\t\tif (this.shellLaunchConfig.attachPersistentProcess) {\n\t\t\t\tthis._cwd = this.shellLaunchConfig.attachPersistentProcess.cwd;\n\t\t\t\tthis._setTitle(this.shellLaunchConfig.attachPersistentProcess.title, this.shellLaunchConfig.attachPersistentProcess.titleSource);\n\t\t\t\tthis.setShellType(this.shellType);\n\t\t\t}\n\n\t\t\tif (this._fixedCols) {\n\t\t\t\tawait this._addScrollbar();\n\t\t\t}\n\t\t}).catch((err) => {\n\t\t\t// Ignore exceptions if the terminal is already disposed\n\t\t\tif (!this._isDisposed) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t});\n\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(async e => {\n\t\t\tif (e.affectsConfiguration(AccessibilityVerbositySettingId.Terminal)) {\n\t\t\t\tthis._setAriaLabel(this.xterm?.raw, this._instanceId, this.title);\n\t\t\t}\n\t\t\tif (e.affectsConfiguration('terminal.integrated')) {\n\t\t\t\tthis.updateConfig();\n\t\t\t\tthis.setVisible(this._isVisible);\n\t\t\t}\n\t\t\tconst layoutSettings: string[] = [\n\t\t\t\tTerminalSettingId.FontSize,\n\t\t\t\tTerminalSettingId.FontFamily,\n\t\t\t\tTerminalSettingId.FontWeight,\n\t\t\t\tTerminalSettingId.FontWeightBold,\n\t\t\t\tTerminalSettingId.LetterSpacing,\n\t\t\t\tTerminalSettingId.LineHeight,\n\t\t\t\t'editor.fontFamily'\n\t\t\t];\n\t\t\tif (layoutSettings.some(id => e.affectsConfiguration(id))) {\n\t\t\t\tthis._layoutSettingsChanged = true;\n\t\t\t\tawait this._resize();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(TerminalSettingId.UnicodeVersion)) {\n\t\t\t\tthis._updateUnicodeVersion();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration('editor.accessibilitySupport')) {\n\t\t\t\tthis.updateAccessibilitySupport();\n\t\t\t}\n\t\t\tif (\n\t\t\t\te.affectsConfiguration(TerminalSettingId.TerminalTitle) ||\n\t\t\t\te.affectsConfiguration(TerminalSettingId.TerminalTitleSeparator) ||\n\t\t\t\te.affectsConfiguration(TerminalSettingId.TerminalDescription)) {\n\t\t\t\tthis._labelComputer?.refreshLabel(this);\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._workspaceContextService.onDidChangeWorkspaceFolders(() => this._labelComputer?.refreshLabel(this)));\n\t\tthis._register(this.onDidBlur(() => this.xterm?.suggestController?.hideSuggestWidget()));\n\n\t\t// Clear out initial data events after 10 seconds, hopefully extension hosts are up and\n\t\t// running at that point.\n\t\tlet initialDataEventsTimeout: number | undefined = window.setTimeout(() => {\n\t\t\tinitialDataEventsTimeout = undefined;\n\t\t\tthis._initialDataEvents = undefined;\n\t\t}, 10000);\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (initialDataEventsTimeout) {\n\t\t\t\twindow.clearTimeout(initialDataEventsTimeout);\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize contributions\n\t\tconst contributionDescs = TerminalExtensionsRegistry.getTerminalContributions();\n\t\tfor (const desc of contributionDescs) {\n\t\t\tif (this._contributions.has(desc.id)) {\n\t\t\t\tonUnexpectedError(new Error(`Cannot have two terminal contributions with the same id ${desc.id}`));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet contribution: ITerminalContribution;\n\t\t\ttry {\n\t\t\t\tcontribution = this._scopedInstantiationService.createInstance(desc.ctor, this, this._processManager, this._widgetManager);\n\t\t\t\tthis._contributions.set(desc.id, contribution);\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t\tthis._xtermReadyPromise.then(xterm => {\n\t\t\t\tcontribution.xtermReady?.(xterm);\n\t\t\t});\n\t\t\tthis.onDisposed(() => {\n\t\t\t\tcontribution.dispose();\n\t\t\t\tthis._contributions.delete(desc.id);\n\t\t\t\t// Just in case to prevent potential future memory leaks due to cyclic dependency.\n\t\t\t\tif ('instance' in contribution) {\n\t\t\t\t\tdelete contribution.instance;\n\t\t\t\t}\n\t\t\t\tif ('_instance' in contribution) {\n\t\t\t\t\tdelete contribution._instance;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic getContribution<T extends ITerminalContribution>(id: string): T | null {\n\t\treturn this._contributions.get(id) as T | null;\n\t}\n\n\tprivate _getIcon(): TerminalIcon | undefined {\n\t\tif (!this._icon) {\n\t\t\tthis._icon = this._processManager.processState >= ProcessState.Launching\n\t\t\t\t? getIconRegistry().getIcon(this._configurationService.getValue(TerminalSettingId.TabsDefaultIcon))\n\t\t\t\t: undefined;\n\t\t}\n\t\treturn this._icon;\n\t}\n\n\tprivate _getColor(): string | undefined {\n\t\tif (this.shellLaunchConfig.color) {\n\t\t\treturn this.shellLaunchConfig.color;\n\t\t}\n\t\tif (this.shellLaunchConfig?.attachPersistentProcess?.color) {\n\t\t\treturn this.shellLaunchConfig.attachPersistentProcess.color;\n\t\t}\n\t\tif (this._processManager.processState >= ProcessState.Launching) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _initDimensions(): void {\n\t\t// The terminal panel needs to have been created to get the real view dimensions\n\t\tif (!this._container) {\n\t\t\t// Set the fallback dimensions if not\n\t\t\tthis._cols = Constants.DefaultCols;\n\t\t\tthis._rows = Constants.DefaultRows;\n\t\t\treturn;\n\t\t}\n\n\t\tconst computedStyle = window.getComputedStyle(this._container);\n\t\tconst width = parseInt(computedStyle.width);\n\t\tconst height = parseInt(computedStyle.height);\n\n\t\tthis._evaluateColsAndRows(width, height);\n\t}\n\n\t/**\n\t * Evaluates and sets the cols and rows of the terminal if possible.\n\t * @param width The width of the container.\n\t * @param height The height of the container.\n\t * @return The terminal's width if it requires a layout.\n\t */\n\tprivate _evaluateColsAndRows(width: number, height: number): number | null {\n\t\t// Ignore if dimensions are undefined or 0\n\t\tif (!width || !height) {\n\t\t\tthis._setLastKnownColsAndRows();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst dimension = this._getDimension(width, height);\n\t\tif (!dimension) {\n\t\t\tthis._setLastKnownColsAndRows();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst font = this.xterm ? this.xterm.getFont() : this._configHelper.getFont();\n\t\tconst newRC = getXtermScaledDimensions(font, dimension.width, dimension.height);\n\t\tif (!newRC) {\n\t\t\tthis._setLastKnownColsAndRows();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this._cols !== newRC.cols || this._rows !== newRC.rows) {\n\t\t\tthis._cols = newRC.cols;\n\t\t\tthis._rows = newRC.rows;\n\t\t\tthis._fireMaximumDimensionsChanged();\n\t\t}\n\n\t\treturn dimension.width;\n\t}\n\n\tprivate _setLastKnownColsAndRows(): void {\n\t\tif (TerminalInstance._lastKnownGridDimensions) {\n\t\t\tthis._cols = TerminalInstance._lastKnownGridDimensions.cols;\n\t\t\tthis._rows = TerminalInstance._lastKnownGridDimensions.rows;\n\t\t}\n\t}\n\n\t@debounce(50)\n\tprivate _fireMaximumDimensionsChanged(): void {\n\t\tthis._onMaximumDimensionsChanged.fire();\n\t}\n\n\tprivate _getDimension(width: number, height: number): ICanvasDimensions | undefined {\n\t\t// The font needs to have been initialized\n\t\tconst font = this.xterm ? this.xterm.getFont() : this._configHelper.getFont();\n\t\tif (!font || !font.charWidth || !font.charHeight) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this.xterm?.raw.element) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst computedStyle = window.getComputedStyle(this.xterm.raw.element);\n\t\tconst horizontalPadding = parseInt(computedStyle.paddingLeft) + parseInt(computedStyle.paddingRight);\n\t\tconst verticalPadding = parseInt(computedStyle.paddingTop) + parseInt(computedStyle.paddingBottom);\n\t\tTerminalInstance._lastKnownCanvasDimensions = new dom.Dimension(\n\t\t\tMath.min(Constants.MaxCanvasWidth, width - horizontalPadding),\n\t\t\theight + (this._hasScrollBar && !this._horizontalScrollbar ? -5/* scroll bar height */ : 0) - 2/* bottom padding */ - verticalPadding);\n\t\treturn TerminalInstance._lastKnownCanvasDimensions;\n\t}\n\n\tget persistentProcessId(): number | undefined { return this._processManager.persistentProcessId; }\n\tget shouldPersist(): boolean { return this._processManager.shouldPersist && !this.shellLaunchConfig.isTransient && (!this.reconnectionProperties || this._configurationService.getValue('task.reconnection') === true); }\n\n\tpublic static getXtermConstructor(keybindingService: IKeybindingService, contextKeyService: IContextKeyService) {\n\t\tconst keybinding = keybindingService.lookupKeybinding(TerminalCommandId.FocusAccessibleBuffer, contextKeyService);\n\t\tif (xtermConstructor) {\n\t\t\treturn xtermConstructor;\n\t\t}\n\t\txtermConstructor = Promises.withAsyncBody<typeof XTermTerminal>(async (resolve) => {\n\t\t\tconst Terminal = (await importAMDNodeModule<typeof import('xterm')>('xterm', 'lib/xterm.js')).Terminal;\n\t\t\t// Localize strings\n\t\t\tTerminal.strings.promptLabel = nls.localize('terminal.integrated.a11yPromptLabel', 'Terminal input');\n\t\t\tTerminal.strings.tooMuchOutput = keybinding ? nls.localize('terminal.integrated.useAccessibleBuffer', 'Use the accessible buffer {0} to manually review output', keybinding.getLabel()) : nls.localize('terminal.integrated.useAccessibleBufferNoKb', 'Use the Terminal: Focus Accessible Buffer command to manually review output');\n\t\t\tresolve(Terminal);\n\t\t});\n\t\treturn xtermConstructor;\n\t}\n\n\t/**\n\t * Create xterm.js instance and attach data listeners.\n\t */\n\tprotected async _createXterm(): Promise<XtermTerminal> {\n\t\tconst Terminal = await TerminalInstance.getXtermConstructor(this._keybindingService, this._contextKeyService);\n\t\tif (this._isDisposed) {\n\t\t\tthrow new ErrorNoTelemetry('Terminal disposed of during xterm.js creation');\n\t\t}\n\n\t\tconst disableShellIntegrationReporting = (this.shellLaunchConfig.hideFromUser || this.shellLaunchConfig.executable === undefined || this.shellType === undefined) || !shellIntegrationSupportedShellTypes.includes(this.shellType);\n\t\tconst xterm = this._scopedInstantiationService.createInstance(\n\t\t\tXtermTerminal,\n\t\t\tTerminal,\n\t\t\tthis._configHelper,\n\t\t\tthis._cols,\n\t\t\tthis._rows,\n\t\t\t{\n\t\t\t\tgetBackgroundColor: (theme) => {\n\t\t\t\t\tconst terminalBackground = theme.getColor(TERMINAL_BACKGROUND_COLOR);\n\t\t\t\t\tif (terminalBackground) {\n\t\t\t\t\t\treturn terminalBackground;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.target === TerminalLocation.Editor) {\n\t\t\t\t\t\treturn theme.getColor(editorBackground);\n\t\t\t\t\t}\n\t\t\t\t\tconst location = this._viewDescriptorService.getViewLocationById(TERMINAL_VIEW_ID)!;\n\t\t\t\t\tif (location === ViewContainerLocation.Panel) {\n\t\t\t\t\t\treturn theme.getColor(PANEL_BACKGROUND);\n\t\t\t\t\t}\n\t\t\t\t\treturn theme.getColor(SIDE_BAR_BACKGROUND);\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis.capabilities,\n\t\t\tthis._processManager.shellIntegrationNonce,\n\t\t\tthis._terminalSuggestWidgetVisibleContextKey,\n\t\t\tdisableShellIntegrationReporting\n\t\t);\n\t\tthis.xterm = xterm;\n\t\tthis.updateAccessibilitySupport();\n\t\tthis.xterm.onDidRequestRunCommand(e => {\n\t\t\tif (e.copyAsHtml) {\n\t\t\t\tthis.copySelection(true, e.command);\n\t\t\t} else {\n\t\t\t\tthis.sendText(e.command.command, e.noNewLine ? false : true);\n\t\t\t}\n\t\t});\n\t\tthis.xterm.onDidRequestFocus(() => this.focus());\n\t\tthis.xterm.onDidRequestSendText(e => this.sendText(e, false));\n\t\t// Write initial text, deferring onLineFeed listener when applicable to avoid firing\n\t\t// onLineData events containing initialText\n\t\tconst initialTextWrittenPromise = this._shellLaunchConfig.initialText ? new Promise<void>(r => this._writeInitialText(xterm, r)) : undefined;\n\t\tconst lineDataEventAddon = this._register(new LineDataEventAddon(initialTextWrittenPromise));\n\t\tlineDataEventAddon.onLineData(e => this._onLineData.fire(e));\n\t\tthis._lineDataEventAddon = lineDataEventAddon;\n\t\t// Delay the creation of the bell listener to avoid showing the bell when the terminal\n\t\t// starts up or reconnects\n\t\tsetTimeout(() => {\n\t\t\tthis._register(xterm.raw.onBell(() => {\n\t\t\t\tif (this._configHelper.config.enableBell) {\n\t\t\t\t\tthis.statusList.add({\n\t\t\t\t\t\tid: TerminalStatus.Bell,\n\t\t\t\t\t\tseverity: Severity.Warning,\n\t\t\t\t\t\ticon: Codicon.bell,\n\t\t\t\t\t\ttooltip: nls.localize('bellStatus', \"Bell\")\n\t\t\t\t\t}, this._configHelper.config.bellDuration);\n\t\t\t\t\tthis._audioCueService.playSound(AudioCue.terminalBell.sound.getSound());\n\t\t\t\t}\n\t\t\t}));\n\t\t}, 1000);\n\t\tthis._register(xterm.raw.onSelectionChange(async () => this._onSelectionChange()));\n\t\tthis._register(xterm.raw.buffer.onBufferChange(() => this._refreshAltBufferContextKey()));\n\n\t\tthis._processManager.onProcessData(e => this._onProcessData(e));\n\t\tthis._register(xterm.raw.onData(async data => {\n\t\t\tawait this._processManager.write(data);\n\t\t\tthis._onDidInputData.fire(this);\n\t\t}));\n\t\tthis._register(xterm.raw.onBinary(data => this._processManager.processBinary(data)));\n\t\t// Init winpty compat and link handler after process creation as they rely on the\n\t\t// underlying process OS\n\t\tthis._processManager.onProcessReady(async (processTraits) => {\n\t\t\tif (this._processManager.os) {\n\t\t\t\tlineDataEventAddon.setOperatingSystem(this._processManager.os);\n\t\t\t}\n\t\t\txterm.raw.options.windowsPty = processTraits.windowsPty;\n\t\t});\n\t\tthis._processManager.onRestoreCommands(e => this.xterm?.shellIntegration.deserialize(e));\n\n\t\tthis._register(this._viewDescriptorService.onDidChangeLocation(({ views }) => {\n\t\t\tif (views.some(v => v.id === TERMINAL_VIEW_ID)) {\n\t\t\t\txterm.refresh();\n\t\t\t}\n\t\t}));\n\n\t\t// Set up updating of the process cwd on key press, this is only needed when the cwd\n\t\t// detection capability has not been registered\n\t\tif (!this.capabilities.has(TerminalCapability.CwdDetection)) {\n\t\t\tlet onKeyListener: IDisposable | undefined = xterm.raw.onKey(e => {\n\t\t\t\tconst event = new StandardKeyboardEvent(e.domEvent);\n\t\t\t\tif (event.equals(KeyCode.Enter)) {\n\t\t\t\t\tthis._updateProcessCwd();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._register(this.capabilities.onDidAddCapabilityType(e => {\n\t\t\t\tif (e === TerminalCapability.CwdDetection) {\n\t\t\t\t\tonKeyListener?.dispose();\n\t\t\t\t\tonKeyListener = undefined;\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._pathService.userHome().then(userHome => {\n\t\t\tthis._userHome = userHome.fsPath;\n\t\t});\n\n\t\tif (this._isVisible) {\n\t\t\tthis._open();\n\t\t}\n\n\t\treturn xterm;\n\t}\n\n\tprivate async _onLineDataSetup(): Promise<void> {\n\t\tconst xterm = this.xterm || await this._xtermReadyPromise;\n\t\txterm.raw.loadAddon(this._lineDataEventAddon!);\n\t}\n\n\tasync runCommand(commandLine: string, addNewLine: boolean): Promise<void> {\n\t\t// Determine whether to send ETX (ctrl+c) before running the command. This should always\n\t\t// happen unless command detection can reliably say that a command is being entered and\n\t\t// there is no content in the prompt\n\t\tif (this.capabilities.get(TerminalCapability.CommandDetection)?.hasInput !== false) {\n\t\t\tawait this.sendText('\\x03', false);\n\t\t\t// Wait a little before running the command to avoid the sequences being echoed while the ^C\n\t\t\t// is being evaluated\n\t\t\tawait timeout(100);\n\t\t}\n\t\t// Use bracketed paste mode only when not running the command\n\t\tawait this.sendText(commandLine, addNewLine, !addNewLine);\n\t}\n\n\tasync runRecent(type: 'command' | 'cwd', filterMode?: 'fuzzy' | 'contiguous', value?: string): Promise<void> {\n\t\treturn this._scopedInstantiationService.invokeFunction(\n\t\t\tshowRunRecentQuickPick, this, this._terminalInRunCommandPicker, type, filterMode, value\n\t\t);\n\t}\n\n\tdetachFromElement(): void {\n\t\tthis._wrapperElement.remove();\n\t\tthis._container = undefined;\n\t}\n\n\tattachToElement(container: HTMLElement): void {\n\t\t// The container did not change, do nothing\n\t\tif (this._container === container) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._attachBarrier.open();\n\n\t\t// The container changed, reattach\n\t\tthis._container = container;\n\t\tthis._container.appendChild(this._wrapperElement);\n\t\tthis.xterm?.refresh();\n\n\t\tsetTimeout(() => this._initDragAndDrop(container));\n\t}\n\n\t/**\n\t * Opens the the terminal instance inside the parent DOM element previously set with\n\t * `attachToElement`, you must ensure the parent DOM element is explicitly visible before\n\t * invoking this function as it performs some DOM calculations internally\n\t */\n\tprivate _open(): void {\n\t\tif (!this.xterm || this.xterm.raw.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._container || !this._container.isConnected) {\n\t\t\tthrow new Error('A container element needs to be set with `attachToElement` and be part of the DOM before calling `_open`');\n\t\t}\n\n\t\tconst xtermElement = document.createElement('div');\n\t\tthis._wrapperElement.appendChild(xtermElement);\n\n\t\tthis._container.appendChild(this._wrapperElement);\n\n\t\tconst xterm = this.xterm;\n\n\t\t// Attach the xterm object to the DOM, exposing it to the smoke tests\n\t\tthis._wrapperElement.xterm = xterm.raw;\n\n\t\tconst screenElement = xterm.attachToElement(xtermElement);\n\n\t\tthis._register(xterm.shellIntegration.onDidChangeStatus(() => {\n\t\t\tif (this.hasFocus) {\n\t\t\t\tthis._setShellIntegrationContextKey();\n\t\t\t} else {\n\t\t\t\tthis._terminalShellIntegrationEnabledContextKey.reset();\n\t\t\t}\n\t\t}));\n\n\t\tif (!xterm.raw.element || !xterm.raw.textarea) {\n\t\t\tthrow new Error('xterm elements not set after open');\n\t\t}\n\n\t\tthis._setAriaLabel(xterm.raw, this._instanceId, this._title);\n\n\t\txterm.raw.attachCustomKeyEventHandler((event: KeyboardEvent): boolean => {\n\t\t\t// Disable all input if the terminal is exiting\n\t\t\tif (this._isExiting) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst standardKeyboardEvent = new StandardKeyboardEvent(event);\n\t\t\tconst resolveResult = this._keybindingService.softDispatch(standardKeyboardEvent, standardKeyboardEvent.target);\n\n\t\t\t// Respect chords if the allowChords setting is set and it's not Escape. Escape is\n\t\t\t// handled specially for Zen Mode's Escape, Escape chord, plus it's important in\n\t\t\t// terminals generally\n\t\t\tconst isValidChord = resolveResult.kind === ResultKind.MoreChordsNeeded && this._configHelper.config.allowChords && event.key !== 'Escape';\n\t\t\tif (this._keybindingService.inChordMode || isValidChord) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst SHOW_TERMINAL_CONFIG_PROMPT_KEY = 'terminal.integrated.showTerminalConfigPrompt';\n\t\t\tconst EXCLUDED_KEYS = ['RightArrow', 'LeftArrow', 'UpArrow', 'DownArrow', 'Space', 'Meta', 'Control', 'Shift', 'Alt', '', 'Delete', 'Backspace', 'Tab'];\n\n\t\t\t// only keep track of input if prompt hasn't already been shown\n\t\t\tif (this._storageService.getBoolean(SHOW_TERMINAL_CONFIG_PROMPT_KEY, StorageScope.APPLICATION, true) &&\n\t\t\t\t!EXCLUDED_KEYS.includes(event.key) &&\n\t\t\t\t!event.ctrlKey &&\n\t\t\t\t!event.shiftKey &&\n\t\t\t\t!event.altKey) {\n\t\t\t\tthis._hasHadInput = true;\n\t\t\t}\n\n\t\t\t// for keyboard events that resolve to commands described\n\t\t\t// within commandsToSkipShell, either alert or skip processing by xterm.js\n\t\t\tif (resolveResult.kind === ResultKind.KbFound && resolveResult.commandId && this._skipTerminalCommands.some(k => k === resolveResult.commandId) && !this._configHelper.config.sendKeybindingsToShell) {\n\t\t\t\t// don't alert when terminal is opened or closed\n\t\t\t\tif (this._storageService.getBoolean(SHOW_TERMINAL_CONFIG_PROMPT_KEY, StorageScope.APPLICATION, true) &&\n\t\t\t\t\tthis._hasHadInput &&\n\t\t\t\t\t!TERMINAL_CREATION_COMMANDS.includes(resolveResult.commandId)) {\n\t\t\t\t\tthis._notificationService.prompt(\n\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\tnls.localize('keybindingHandling', \"Some keybindings don't go to the terminal by default and are handled by {0} instead.\", this._productService.nameLong),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: nls.localize('configureTerminalSettings', \"Configure Terminal Settings\"),\n\t\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\t\tthis._preferencesService.openSettings({ jsonEditor: false, query: `@id:${TerminalSettingId.CommandsToSkipShell},${TerminalSettingId.SendKeybindingsToShell},${TerminalSettingId.AllowChords}` });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} as IPromptChoice\n\t\t\t\t\t\t]\n\t\t\t\t\t);\n\t\t\t\t\tthis._storageService.store(SHOW_TERMINAL_CONFIG_PROMPT_KEY, false, StorageScope.APPLICATION, StorageTarget.USER);\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Skip processing by xterm.js of keyboard events that match menu bar mnemonics\n\t\t\tif (this._configHelper.config.allowMnemonics && !isMacintosh && event.altKey) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If tab focus mode is on, tab is not passed to the terminal\n\t\t\tif (TabFocus.getTabFocusMode() && event.key === 'Tab') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Prevent default when shift+tab is being sent to the terminal to avoid it bubbling up\n\t\t\t// and changing focus https://github.com/microsoft/vscode/issues/188329\n\t\t\tif (event.key === 'Tab' && event.shiftKey) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Always have alt+F4 skip the terminal on Windows and allow it to be handled by the\n\t\t\t// system\n\t\t\tif (isWindows && event.altKey && event.key === 'F4' && !event.ctrlKey) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Fallback to force ctrl+v to paste on browsers that do not support\n\t\t\t// navigator.clipboard.readText\n\t\t\tif (!BrowserFeatures.clipboard.readText && event.key === 'v' && event.ctrlKey) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t\tthis._register(dom.addDisposableListener(xterm.raw.element, 'mousedown', () => {\n\t\t\t// We need to listen to the mouseup event on the document since the user may release\n\t\t\t// the mouse button anywhere outside of _xterm.element.\n\t\t\tconst listener = dom.addDisposableListener(document, 'mouseup', () => {\n\t\t\t\t// Delay with a setTimeout to allow the mouseup to propagate through the DOM\n\t\t\t\t// before evaluating the new selection state.\n\t\t\t\tsetTimeout(() => this._refreshSelectionContextKey(), 0);\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(xterm.raw.element, 'touchstart', () => {\n\t\t\txterm.raw.focus();\n\t\t}));\n\n\t\t// xterm.js currently drops selection on keyup as we need to handle this case.\n\t\tthis._register(dom.addDisposableListener(xterm.raw.element, 'keyup', () => {\n\t\t\t// Wait until keyup has propagated through the DOM before evaluating\n\t\t\t// the new selection state.\n\t\t\tsetTimeout(() => this._refreshSelectionContextKey(), 0);\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(xterm.raw.textarea, 'focus', () => this._setFocus(true)));\n\t\tthis._register(dom.addDisposableListener(xterm.raw.textarea, 'blur', () => this._setFocus(false)));\n\t\tthis._register(dom.addDisposableListener(xterm.raw.textarea, 'focusout', () => this._setFocus(false)));\n\n\t\tthis._initDragAndDrop(this._container);\n\n\t\tthis._widgetManager.attachToElement(screenElement);\n\n\t\tif (this._lastLayoutDimensions) {\n\t\t\tthis.layout(this._lastLayoutDimensions);\n\t\t}\n\t\tthis.updateConfig();\n\n\t\t// If IShellLaunchConfig.waitOnExit was true and the process finished before the terminal\n\t\t// panel was initialized.\n\t\tif (xterm.raw.options.disableStdin) {\n\t\t\tthis._attachPressAnyKeyToCloseListener(xterm.raw);\n\t\t}\n\t}\n\n\tprivate _setFocus(focused?: boolean): void {\n\t\tif (focused) {\n\t\t\tthis._terminalFocusContextKey.set(true);\n\t\t\tthis._setShellIntegrationContextKey();\n\t\t\tthis._onDidFocus.fire(this);\n\t\t} else {\n\t\t\tthis.resetFocusContextKey();\n\t\t\tthis._onDidBlur.fire(this);\n\t\t\tthis._refreshSelectionContextKey();\n\t\t}\n\t}\n\n\tprivate _setShellIntegrationContextKey(): void {\n\t\tif (this.xterm) {\n\t\t\tthis._terminalShellIntegrationEnabledContextKey.set(this.xterm.shellIntegration.status === ShellIntegrationStatus.VSCode);\n\t\t}\n\t}\n\n\tresetFocusContextKey(): void {\n\t\tthis._terminalFocusContextKey.reset();\n\t\tthis._terminalShellIntegrationEnabledContextKey.reset();\n\t}\n\n\tprivate _initDragAndDrop(container: HTMLElement) {\n\t\tconst dndController = this._register(this._scopedInstantiationService.createInstance(TerminalInstanceDragAndDropController, container));\n\t\tdndController.onDropTerminal(e => this._onRequestAddInstanceToGroup.fire(e));\n\t\tdndController.onDropFile(async path => {\n\t\t\tthis.focus();\n\t\t\tawait this.sendPath(path, false);\n\t\t});\n\t\tthis._dndObserver.value = new dom.DragAndDropObserver(container, dndController);\n\t}\n\n\thasSelection(): boolean {\n\t\treturn this.xterm ? this.xterm.raw.hasSelection() : false;\n\t}\n\n\tasync copySelection(asHtml?: boolean, command?: ITerminalCommand): Promise<void> {\n\t\tconst xterm = await this._xtermReadyPromise;\n\t\tawait xterm.copySelection(asHtml, command);\n\t}\n\n\tget selection(): string | undefined {\n\t\treturn this.xterm && this.hasSelection() ? this.xterm.raw.getSelection() : undefined;\n\t}\n\n\tclearSelection(): void {\n\t\tthis.xterm?.raw.clearSelection();\n\t}\n\n\tprivate _refreshAltBufferContextKey() {\n\t\tthis._terminalAltBufferActiveContextKey.set(!!(this.xterm && this.xterm.raw.buffer.active === this.xterm.raw.buffer.alternate));\n\t}\n\n\tprivate async _shouldPasteText(text: string): Promise<boolean> {\n\t\t// Ignore check if the shell is in bracketed paste mode (ie. the shell can handle multi-line\n\t\t// text).\n\t\tif (this.xterm?.raw.modes.bracketedPasteMode) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst textForLines = text.split(/\\r?\\n/);\n\t\t// Ignore check when a command is copied with a trailing new line\n\t\tif (textForLines.length === 2 && textForLines[1].trim().length === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If the clipboard has only one line, no prompt will be triggered\n\t\tif (textForLines.length === 1 || !this._configurationService.getValue<boolean>(TerminalSettingId.EnableMultiLinePasteWarning)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst displayItemsCount = 3;\n\t\tconst maxPreviewLineLength = 30;\n\n\t\tlet detail = nls.localize('preview', \"Preview:\");\n\t\tfor (let i = 0; i < Math.min(textForLines.length, displayItemsCount); i++) {\n\t\t\tconst line = textForLines[i];\n\t\t\tconst cleanedLine = line.length > maxPreviewLineLength ? `${line.slice(0, maxPreviewLineLength)}…` : line;\n\t\t\tdetail += `\\n${cleanedLine}`;\n\t\t}\n\n\t\tif (textForLines.length > displayItemsCount) {\n\t\t\tdetail += `\\n…`;\n\t\t}\n\n\t\tconst { confirmed, checkboxChecked } = await this._dialogService.confirm({\n\t\t\tmessage: nls.localize('confirmMoveTrashMessageFilesAndDirectories', \"Are you sure you want to paste {0} lines of text into the terminal?\", textForLines.length),\n\t\t\tdetail,\n\t\t\tprimaryButton: nls.localize({ key: 'multiLinePasteButton', comment: ['&& denotes a mnemonic'] }, \"&&Paste\"),\n\t\t\tcheckbox: {\n\t\t\t\tlabel: nls.localize('doNotAskAgain', \"Do not ask me again\")\n\t\t\t}\n\t\t});\n\n\t\tif (confirmed && checkboxChecked) {\n\t\t\tawait this._configurationService.updateValue(TerminalSettingId.EnableMultiLinePasteWarning, false);\n\t\t}\n\n\t\treturn confirmed;\n\t}\n\n\toverride dispose(reason?: TerminalExitReason): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDisposed = true;\n\t\tthis._logService.trace(`terminalInstance#dispose (instanceId: ${this.instanceId})`);\n\t\tdispose(this._widgetManager);\n\n\t\tif (this.xterm?.raw.element) {\n\t\t\tthis._hadFocusOnExit = this.hasFocus;\n\t\t}\n\t\tif (this._wrapperElement.xterm) {\n\t\t\tthis._wrapperElement.xterm = undefined;\n\t\t}\n\t\tif (this._horizontalScrollbar) {\n\t\t\tthis._horizontalScrollbar.dispose();\n\t\t\tthis._horizontalScrollbar = undefined;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.xterm?.dispose();\n\t\t} catch (err: unknown) {\n\t\t\t// See https://github.com/microsoft/vscode/issues/153486\n\t\t\tthis._logService.error('Exception occurred during xterm disposal', err);\n\t\t}\n\n\t\t// HACK: Workaround for Firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=559561,\n\t\t// as 'blur' event in xterm.raw.textarea is not triggered on xterm.dispose()\n\t\t// See https://github.com/microsoft/vscode/issues/138358\n\t\tif (isFirefox) {\n\t\t\tthis.resetFocusContextKey();\n\t\t\tthis._terminalHasTextContextKey.reset();\n\t\t\tthis._onDidBlur.fire(this);\n\t\t}\n\n\t\tif (this._pressAnyKeyToCloseListener) {\n\t\t\tthis._pressAnyKeyToCloseListener.dispose();\n\t\t\tthis._pressAnyKeyToCloseListener = undefined;\n\t\t}\n\n\t\tif (this._exitReason === undefined) {\n\t\t\tthis._exitReason = reason ?? TerminalExitReason.Unknown;\n\t\t}\n\n\t\tthis._processManager.dispose();\n\t\t// Process manager dispose/shutdown doesn't fire process exit, trigger with undefined if it\n\t\t// hasn't happened yet\n\t\tthis._onProcessExit(undefined);\n\n\t\tthis._onDisposed.fire(this);\n\n\t\tsuper.dispose();\n\t}\n\n\tasync detachProcessAndDispose(reason: TerminalExitReason): Promise<void> {\n\t\t// Detach the process and dispose the instance, without the instance dispose the terminal\n\t\t// won't go away. Force persist if the detach was requested by the user (not shutdown).\n\t\tawait this._processManager.detachFromProcess(reason === TerminalExitReason.User);\n\t\tthis.dispose(reason);\n\t}\n\n\tfocus(force?: boolean): void {\n\t\tthis._refreshAltBufferContextKey();\n\t\tif (!this.xterm) {\n\t\t\treturn;\n\t\t}\n\t\tif (force || !window.getSelection()?.toString()) {\n\t\t\tthis.xterm.raw.focus();\n\t\t\tthis._onDidRequestFocus.fire();\n\t\t}\n\t}\n\n\tasync focusWhenReady(force?: boolean): Promise<void> {\n\t\tawait this._xtermReadyPromise;\n\t\tawait this._attachBarrier.wait();\n\t\tthis.focus(force);\n\t}\n\n\tasync paste(): Promise<void> {\n\t\tif (!this.xterm) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentText: string = await this._clipboardService.readText();\n\t\tif (!await this._shouldPasteText(currentText)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.focus();\n\t\tthis.xterm.raw.paste(currentText);\n\t}\n\n\tasync pasteSelection(): Promise<void> {\n\t\tif (!this.xterm) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentText: string = await this._clipboardService.readText('selection');\n\t\tif (!await this._shouldPasteText(currentText)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.focus();\n\t\tthis.xterm.raw.paste(currentText);\n\t}\n\n\tasync sendText(text: string, addNewLine: boolean, bracketedPasteMode?: boolean): Promise<void> {\n\t\t// Apply bracketed paste sequences if the terminal has the mode enabled, this will prevent\n\t\t// the text from triggering keybindings and ensure new lines are handled properly\n\t\tif (bracketedPasteMode && this.xterm?.raw.modes.bracketedPasteMode) {\n\t\t\ttext = `\\x1b[200~${text}\\x1b[201~`;\n\t\t}\n\n\t\t// Normalize line endings to 'enter' press.\n\t\ttext = text.replace(/\\r?\\n/g, '\\r');\n\t\tif (addNewLine && !text.endsWith('\\r')) {\n\t\t\ttext += '\\r';\n\t\t}\n\n\t\t// Send it to the process\n\t\tawait this._processManager.write(text);\n\t\tthis._onDidInputData.fire(this);\n\t\tthis.xterm?.suggestController?.handleNonXtermData(text);\n\t\tthis.xterm?.scrollToBottom();\n\t\tthis._onDidRunText.fire();\n\t}\n\n\tasync sendPath(originalPath: string | URI, addNewLine: boolean): Promise<void> {\n\t\treturn this.sendText(await this.preparePathForShell(originalPath), addNewLine);\n\t}\n\n\tasync preparePathForShell(originalPath: string | URI): Promise<string> {\n\t\t// Wait for shell type to be ready\n\t\tawait this.processReady;\n\t\treturn preparePathForShell(originalPath, this.shellLaunchConfig.executable, this.title, this.shellType, this._processManager.backend, this._processManager.os);\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis._isVisible = visible;\n\t\tthis._wrapperElement.classList.toggle('active', visible);\n\t\tif (visible && this.xterm) {\n\t\t\tthis._open();\n\t\t\t// Resize to re-evaluate dimensions, this will ensure when switching to a terminal it is\n\t\t\t// using the most up to date dimensions (eg. when terminal is created in the background\n\t\t\t// using cached dimensions of a split terminal).\n\t\t\tthis._resize();\n\t\t\t// HACK: Trigger a forced refresh of the viewport to sync the viewport and scroll bar.\n\t\t\t// This is necessary if the number of rows in the terminal has decreased while it was in\n\t\t\t// the background since scrollTop changes take no effect but the terminal's position\n\t\t\t// does change since the number of visible rows decreases.\n\t\t\t// This can likely be removed after https://github.com/xtermjs/xterm.js/issues/291 is\n\t\t\t// fixed upstream.\n\t\t\tsetTimeout(() => this.xterm!.forceRefresh(), 0);\n\t\t}\n\t}\n\n\tscrollDownLine(): void {\n\t\tthis.xterm?.scrollDownLine();\n\t}\n\n\tscrollDownPage(): void {\n\t\tthis.xterm?.scrollDownPage();\n\t}\n\n\tscrollToBottom(): void {\n\t\tthis.xterm?.scrollToBottom();\n\t}\n\n\tscrollUpLine(): void {\n\t\tthis.xterm?.scrollUpLine();\n\t}\n\n\tscrollUpPage(): void {\n\t\tthis.xterm?.scrollUpPage();\n\t}\n\n\tscrollToTop(): void {\n\t\tthis.xterm?.scrollToTop();\n\t}\n\n\tclearBuffer(): void {\n\t\tthis._processManager.clearBuffer();\n\t\tthis.xterm?.clearBuffer();\n\t}\n\n\tprivate _refreshSelectionContextKey() {\n\t\tconst isActive = !!this._viewsService.getActiveViewWithId(TERMINAL_VIEW_ID);\n\t\tlet isEditorActive = false;\n\t\tconst editor = this._editorService.activeEditor;\n\t\tif (editor) {\n\t\t\tisEditorActive = editor instanceof TerminalEditorInput;\n\t\t}\n\t\tthis._terminalHasTextContextKey.set((isActive || isEditorActive) && this.hasSelection());\n\t}\n\n\tprotected _createProcessManager(): TerminalProcessManager {\n\t\tlet deserializedCollections: ReadonlyMap<string, IEnvironmentVariableCollection> | undefined;\n\t\tif (this.shellLaunchConfig.attachPersistentProcess?.environmentVariableCollections) {\n\t\t\tdeserializedCollections = deserializeEnvironmentVariableCollections(this.shellLaunchConfig.attachPersistentProcess.environmentVariableCollections);\n\t\t}\n\t\tconst processManager = this._scopedInstantiationService.createInstance(\n\t\t\tTerminalProcessManager,\n\t\t\tthis._instanceId,\n\t\t\tthis._configHelper,\n\t\t\tthis.shellLaunchConfig?.cwd,\n\t\t\tdeserializedCollections,\n\t\t\tthis.shellLaunchConfig.attachPersistentProcess?.shellIntegrationNonce\n\t\t);\n\t\tthis.capabilities.add(processManager.capabilities);\n\t\tprocessManager.onProcessReady(async (e) => {\n\t\t\tthis._onProcessIdReady.fire(this);\n\t\t\tthis._initialCwd = await this.getInitialCwd();\n\t\t\t// Set the initial name based on the _resolved_ shell launch config, this will also\n\t\t\t// ensure the resolved icon gets shown\n\t\t\tif (!this._labelComputer) {\n\t\t\t\tthis._labelComputer = this._register(this._scopedInstantiationService.createInstance(TerminalLabelComputer, this._configHelper));\n\t\t\t\tthis._register(this._labelComputer.onDidChangeLabel(e => {\n\t\t\t\t\tthis._title = e.title;\n\t\t\t\t\tthis._description = e.description;\n\t\t\t\t\tthis._onTitleChanged.fire(this);\n\t\t\t\t}));\n\t\t\t}\n\t\t\tif (this._shellLaunchConfig.name) {\n\t\t\t\tthis._setTitle(this._shellLaunchConfig.name, TitleEventSource.Api);\n\t\t\t} else {\n\t\t\t\t// Listen to xterm.js' sequence title change event, trigger this async to ensure\n\t\t\t\t// _xtermReadyPromise is ready constructed since this is called from the ctor\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis._xtermReadyPromise.then(xterm => {\n\t\t\t\t\t\tthis._messageTitleDisposable.value = xterm.raw.onTitleChange(e => this._onTitleChange(e));\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis._setTitle(this._shellLaunchConfig.executable, TitleEventSource.Process);\n\t\t\t}\n\t\t});\n\t\tprocessManager.onProcessExit(exitCode => this._onProcessExit(exitCode));\n\t\tprocessManager.onDidChangeProperty(({ type, value }) => {\n\t\t\tswitch (type) {\n\t\t\t\tcase ProcessPropertyType.Cwd:\n\t\t\t\t\tthis._cwd = value;\n\t\t\t\t\tthis._labelComputer?.refreshLabel(this);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ProcessPropertyType.InitialCwd:\n\t\t\t\t\tthis._initialCwd = value;\n\t\t\t\t\tthis._cwd = this._initialCwd;\n\t\t\t\t\tthis._setTitle(this.title, TitleEventSource.Config);\n\t\t\t\t\tthis._icon = this._shellLaunchConfig.attachPersistentProcess?.icon || this._shellLaunchConfig.icon;\n\t\t\t\t\tthis._onIconChanged.fire({ instance: this, userInitiated: false });\n\t\t\t\t\tbreak;\n\t\t\t\tcase ProcessPropertyType.Title:\n\t\t\t\t\tthis._setTitle(value ?? '', TitleEventSource.Process);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ProcessPropertyType.OverrideDimensions:\n\t\t\t\t\tthis.setOverrideDimensions(value, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ProcessPropertyType.ResolvedShellLaunchConfig:\n\t\t\t\t\tthis._setResolvedShellLaunchConfig(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ProcessPropertyType.ShellType:\n\t\t\t\t\tthis.setShellType(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ProcessPropertyType.HasChildProcesses:\n\t\t\t\t\tthis._onDidChangeHasChildProcesses.fire(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ProcessPropertyType.UsedShellIntegrationInjection:\n\t\t\t\t\tthis._usedShellIntegrationInjection = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tprocessManager.onProcessData(ev => {\n\t\t\tthis._initialDataEvents?.push(ev.data);\n\t\t\tthis._onData.fire(ev.data);\n\t\t});\n\t\tprocessManager.onProcessReplayComplete(() => this._onProcessReplayComplete.fire());\n\t\tprocessManager.onEnvironmentVariableInfoChanged(e => this._onEnvironmentVariableInfoChanged(e));\n\t\tprocessManager.onPtyDisconnect(() => {\n\t\t\tif (this.xterm) {\n\t\t\t\tthis.xterm.raw.options.disableStdin = true;\n\t\t\t}\n\t\t\tthis.statusList.add({\n\t\t\t\tid: TerminalStatus.Disconnected,\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\ticon: Codicon.debugDisconnect,\n\t\t\t\ttooltip: nls.localize('disconnectStatus', \"Lost connection to process\")\n\t\t\t});\n\t\t});\n\t\tprocessManager.onPtyReconnect(() => {\n\t\t\tif (this.xterm) {\n\t\t\t\tthis.xterm.raw.options.disableStdin = false;\n\t\t\t}\n\t\t\tthis.statusList.remove(TerminalStatus.Disconnected);\n\t\t});\n\n\t\treturn processManager;\n\t}\n\n\tprivate async _createProcess(): Promise<void> {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tconst activeWorkspaceRootUri = this._historyService.getLastActiveWorkspaceRoot(Schemas.file);\n\t\tif (activeWorkspaceRootUri) {\n\t\t\tconst trusted = await this._trust();\n\t\t\tif (!trusted) {\n\t\t\t\tthis._onProcessExit({ message: nls.localize('workspaceNotTrustedCreateTerminal', \"Cannot launch a terminal process in an untrusted workspace\") });\n\t\t\t}\n\t\t} else if (this._cwd && this._userHome && this._cwd !== this._userHome) {\n\t\t\t// something strange is going on if cwd is not userHome in an empty workspace\n\t\t\tthis._onProcessExit({\n\t\t\t\tmessage: nls.localize('workspaceNotTrustedCreateTerminalCwd', \"Cannot launch a terminal process in an untrusted workspace with cwd {0} and userHome {1}\", this._cwd, this._userHome)\n\t\t\t});\n\t\t}\n\n\t\t// Re-evaluate dimensions if the container has been set since the xterm instance was created\n\t\tif (this._container && this._cols === 0 && this._rows === 0) {\n\t\t\tthis._initDimensions();\n\t\t\tthis.xterm?.raw.resize(this._cols || Constants.DefaultCols, this._rows || Constants.DefaultRows);\n\t\t}\n\t\tconst originalIcon = this.shellLaunchConfig.icon;\n\t\tawait this._processManager.createProcess(this._shellLaunchConfig, this._cols || Constants.DefaultCols, this._rows || Constants.DefaultRows).then(result => {\n\t\t\tif (result) {\n\t\t\t\tif ('message' in result) {\n\t\t\t\t\tthis._onProcessExit(result);\n\t\t\t\t} else if ('injectedArgs' in result) {\n\t\t\t\t\tthis._injectedArgs = result.injectedArgs;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (this.xterm?.shellIntegration) {\n\t\t\tthis.capabilities.add(this.xterm.shellIntegration.capabilities);\n\t\t}\n\t\tif (originalIcon !== this.shellLaunchConfig.icon || this.shellLaunchConfig.color) {\n\t\t\tthis._icon = this._shellLaunchConfig.attachPersistentProcess?.icon || this._shellLaunchConfig.icon;\n\t\t\tthis._onIconChanged.fire({ instance: this, userInitiated: false });\n\t\t}\n\t}\n\n\tpublic registerMarker(): IMarker | undefined {\n\t\treturn this.xterm?.raw.registerMarker();\n\t}\n\n\tpublic addBufferMarker(properties: IMarkProperties): void {\n\t\tthis.capabilities.get(TerminalCapability.BufferMarkDetection)?.addMark(properties);\n\t}\n\n\tpublic scrollToMark(startMarkId: string, endMarkId?: string, highlight?: boolean): void {\n\t\tthis.xterm?.markTracker.scrollToClosestMarker(startMarkId, endMarkId, highlight);\n\t}\n\n\tpublic async freePortKillProcess(port: string, command: string): Promise<void> {\n\t\tawait this._processManager?.freePortKillProcess(port);\n\t\tthis.runCommand(command, false);\n\t}\n\n\tprivate _onProcessData(ev: IProcessDataEvent): void {\n\t\tconst messageId = ++this._latestXtermWriteData;\n\t\tif (ev.trackCommit) {\n\t\t\tev.writePromise = new Promise<void>(r => {\n\t\t\t\tthis.xterm?.raw.write(ev.data, () => {\n\t\t\t\t\tthis._latestXtermParseData = messageId;\n\t\t\t\t\tthis._processManager.acknowledgeDataEvent(ev.data.length);\n\t\t\t\t\tr();\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tthis.xterm?.raw.write(ev.data, () => {\n\t\t\t\tthis._latestXtermParseData = messageId;\n\t\t\t\tthis._processManager.acknowledgeDataEvent(ev.data.length);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Called when either a process tied to a terminal has exited or when a terminal renderer\n\t * simulates a process exiting (e.g. custom execution task).\n\t * @param exitCode The exit code of the process, this is undefined when the terminal was exited\n\t * through user action.\n\t */\n\tprivate async _onProcessExit(exitCodeOrError?: number | ITerminalLaunchError): Promise<void> {\n\t\t// Prevent dispose functions being triggered multiple times\n\t\tif (this._isExiting) {\n\t\t\treturn;\n\t\t}\n\t\tconst parsedExitResult = parseExitResult(exitCodeOrError, this.shellLaunchConfig, this._processManager.processState, this._initialCwd);\n\n\t\tif (this._usedShellIntegrationInjection && this._processManager.processState === ProcessState.KilledDuringLaunch && parsedExitResult?.code !== 0) {\n\t\t\tthis._relaunchWithShellIntegrationDisabled(parsedExitResult?.message);\n\t\t\tthis._onExit.fire(exitCodeOrError);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isExiting = true;\n\n\t\tawait this._flushXtermData();\n\n\t\tthis._exitCode = parsedExitResult?.code;\n\t\tconst exitMessage = parsedExitResult?.message;\n\n\t\tthis._logService.debug('Terminal process exit', 'instanceId', this.instanceId, 'code', this._exitCode, 'processState', this._processManager.processState);\n\n\t\t// Only trigger wait on exit when the exit was *not* triggered by the\n\t\t// user (via the `workbench.action.terminal.kill` command).\n\t\tconst waitOnExit = this.waitOnExit;\n\t\tif (waitOnExit && this._processManager.processState !== ProcessState.KilledByUser) {\n\t\t\tthis._xtermReadyPromise.then(xterm => {\n\t\t\t\tif (exitMessage) {\n\t\t\t\t\txterm.raw.write(formatMessageForTerminal(exitMessage));\n\t\t\t\t}\n\t\t\t\tswitch (typeof waitOnExit) {\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\txterm.raw.write(formatMessageForTerminal(waitOnExit, { excludeLeadingNewLine: true }));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'function':\n\t\t\t\t\t\tif (this.exitCode !== undefined) {\n\t\t\t\t\t\t\txterm.raw.write(formatMessageForTerminal(waitOnExit(this.exitCode), { excludeLeadingNewLine: true }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Disable all input if the terminal is exiting and listen for next keypress\n\t\t\t\txterm.raw.options.disableStdin = true;\n\t\t\t\tif (xterm.raw.textarea) {\n\t\t\t\t\tthis._attachPressAnyKeyToCloseListener(xterm.raw);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.dispose(TerminalExitReason.Process);\n\t\t\tif (exitMessage) {\n\t\t\t\tconst failedDuringLaunch = this._processManager.processState === ProcessState.KilledDuringLaunch;\n\t\t\t\tif (failedDuringLaunch || this._configHelper.config.showExitAlert) {\n\t\t\t\t\t// Always show launch failures\n\t\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\t\tmessage: exitMessage,\n\t\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\t\tactions: { primary: [this._scopedInstantiationService.createInstance(TerminalLaunchHelpAction)] }\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Log to help surface the error in case users report issues with showExitAlert\n\t\t\t\t\t// disabled\n\t\t\t\t\tthis._logService.warn(exitMessage);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// First onExit to consumers, this can happen after the terminal has already been disposed.\n\t\tthis._onExit.fire(exitCodeOrError);\n\n\t\t// Dispose of the onExit event if the terminal will not be reused again\n\t\tif (this._isDisposed) {\n\t\t\tthis._onExit.dispose();\n\t\t}\n\t}\n\n\tprivate _relaunchWithShellIntegrationDisabled(exitMessage: string | undefined): void {\n\t\tthis._shellLaunchConfig.ignoreShellIntegration = true;\n\t\tthis.relaunch();\n\t\tthis.statusList.add({\n\t\t\tid: TerminalStatus.ShellIntegrationAttentionNeeded,\n\t\t\tseverity: Severity.Warning,\n\t\t\ticon: Codicon.warning,\n\t\t\ttooltip: (`${exitMessage} ` ?? '') + nls.localize('launchFailed.exitCodeOnlyShellIntegration', 'Disabling shell integration in user settings might help.'),\n\t\t\thoverActions: [{\n\t\t\t\tcommandId: TerminalCommandId.ShellIntegrationLearnMore,\n\t\t\t\tlabel: nls.localize('shellIntegration.learnMore', \"Learn more about shell integration\"),\n\t\t\t\trun: () => {\n\t\t\t\t\tthis._openerService.open('https://code.visualstudio.com/docs/editor/integrated-terminal#_shell-integration');\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tcommandId: 'workbench.action.openSettings',\n\t\t\t\tlabel: nls.localize('shellIntegration.openSettings', \"Open user settings\"),\n\t\t\t\trun: () => {\n\t\t\t\t\tthis._commandService.executeCommand('workbench.action.openSettings', 'terminal.integrated.shellIntegration.enabled');\n\t\t\t\t}\n\t\t\t}]\n\t\t});\n\t\tthis._telemetryService.publicLog2<{}, { owner: 'meganrogge'; comment: 'Indicates the process exited when created with shell integration args' }>('terminal/shellIntegrationFailureProcessExit');\n\t}\n\n\t/**\n\t * Ensure write calls to xterm.js have finished before resolving.\n\t */\n\tprivate _flushXtermData(): Promise<void> {\n\t\tif (this._latestXtermWriteData === this._latestXtermParseData) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tlet retries = 0;\n\t\treturn new Promise<void>(r => {\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tif (this._latestXtermWriteData === this._latestXtermParseData || ++retries === 5) {\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tr();\n\t\t\t\t}\n\t\t\t}, 20);\n\t\t});\n\t}\n\n\tprivate _attachPressAnyKeyToCloseListener(xterm: XTermTerminal) {\n\t\tif (xterm.textarea && !this._pressAnyKeyToCloseListener) {\n\t\t\tthis._pressAnyKeyToCloseListener = dom.addDisposableListener(xterm.textarea, 'keypress', (event: KeyboardEvent) => {\n\t\t\t\tif (this._pressAnyKeyToCloseListener) {\n\t\t\t\t\tthis._pressAnyKeyToCloseListener.dispose();\n\t\t\t\t\tthis._pressAnyKeyToCloseListener = undefined;\n\t\t\t\t\tthis.dispose(TerminalExitReason.Process);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _writeInitialText(xterm: XtermTerminal, callback?: () => void): void {\n\t\tif (!this._shellLaunchConfig.initialText) {\n\t\t\tcallback?.();\n\t\t\treturn;\n\t\t}\n\t\tconst text = typeof this._shellLaunchConfig.initialText === 'string'\n\t\t\t? this._shellLaunchConfig.initialText\n\t\t\t: this._shellLaunchConfig.initialText?.text;\n\t\tif (typeof this._shellLaunchConfig.initialText === 'string') {\n\t\t\txterm.raw.writeln(text, callback);\n\t\t} else {\n\t\t\tif (this._shellLaunchConfig.initialText.trailingNewLine) {\n\t\t\t\txterm.raw.writeln(text, callback);\n\t\t\t} else {\n\t\t\t\txterm.raw.write(text, callback);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync reuseTerminal(shell: IShellLaunchConfig, reset: boolean = false): Promise<void> {\n\t\t// Unsubscribe any key listener we may have.\n\t\tthis._pressAnyKeyToCloseListener?.dispose();\n\t\tthis._pressAnyKeyToCloseListener = undefined;\n\n\t\tconst xterm = this.xterm;\n\t\tif (xterm) {\n\t\t\tif (!reset) {\n\t\t\t\t// Ensure new processes' output starts at start of new line\n\t\t\t\tawait new Promise<void>(r => xterm.raw.write('\\n\\x1b[G', r));\n\t\t\t}\n\n\t\t\t// Print initialText if specified\n\t\t\tif (shell.initialText) {\n\t\t\t\tthis._shellLaunchConfig.initialText = shell.initialText;\n\t\t\t\tawait new Promise<void>(r => this._writeInitialText(xterm, r));\n\t\t\t}\n\n\t\t\t// Clean up waitOnExit state\n\t\t\tif (this._isExiting && this._shellLaunchConfig.waitOnExit) {\n\t\t\t\txterm.raw.options.disableStdin = false;\n\t\t\t\tthis._isExiting = false;\n\t\t\t}\n\t\t\tif (reset) {\n\t\t\t\txterm.clearDecorations();\n\t\t\t}\n\t\t}\n\n\t\t// Dispose the environment info widget if it exists\n\t\tthis.statusList.remove(TerminalStatus.RelaunchNeeded);\n\n\t\tif (!reset) {\n\t\t\t// HACK: Force initialText to be non-falsy for reused terminals such that the\n\t\t\t// conptyInheritCursor flag is passed to the node-pty, this flag can cause a Window to stop\n\t\t\t// responding in Windows 10 1903 so we only want to use it when something is definitely written\n\t\t\t// to the terminal.\n\t\t\tshell.initialText = ' ';\n\t\t}\n\n\t\t// Set the new shell launch config\n\t\tthis._shellLaunchConfig = shell; // Must be done before calling _createProcess()\n\t\tawait this._processManager.relaunch(this._shellLaunchConfig, this._cols || Constants.DefaultCols, this._rows || Constants.DefaultRows, reset).then(result => {\n\t\t\tif (result) {\n\t\t\t\tif ('message' in result) {\n\t\t\t\t\tthis._onProcessExit(result);\n\t\t\t\t} else if ('injectedArgs' in result) {\n\t\t\t\t\tthis._injectedArgs = result.injectedArgs;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t@debounce(1000)\n\trelaunch(): void {\n\t\tthis.reuseTerminal(this._shellLaunchConfig, true);\n\t}\n\n\tprivate _onTitleChange(title: string): void {\n\t\tif (this.isTitleSetByProcess) {\n\t\t\tthis._setTitle(title, TitleEventSource.Sequence);\n\t\t}\n\t}\n\n\tprivate async _trust(): Promise<boolean> {\n\t\treturn (await this._workspaceTrustRequestService.requestWorkspaceTrust(\n\t\t\t{\n\t\t\t\tmessage: nls.localize('terminal.requestTrust', \"Creating a terminal process requires executing code\")\n\t\t\t})) === true;\n\t}\n\n\tprivate async _onSelectionChange(): Promise<void> {\n\t\tthis._onDidChangeSelection.fire(this);\n\t\tif (this._configurationService.getValue(TerminalSettingId.CopyOnSelection)) {\n\t\t\tif (this.hasSelection()) {\n\t\t\t\tawait this.copySelection();\n\t\t\t}\n\t\t}\n\t}\n\n\t@debounce(2000)\n\tprivate async _updateProcessCwd(): Promise<void> {\n\t\tif (this._isDisposed || this.shellLaunchConfig.customPtyImplementation) {\n\t\t\treturn;\n\t\t}\n\t\t// reset cwd if it has changed, so file based url paths can be resolved\n\t\ttry {\n\t\t\tconst cwd = await this._refreshProperty(ProcessPropertyType.Cwd);\n\t\t\tif (typeof cwd !== 'string') {\n\t\t\t\tthrow new Error(`cwd is not a string ${cwd}`);\n\t\t\t}\n\t\t} catch (e: unknown) {\n\t\t\t// Swallow this as it means the process has been killed\n\t\t\tif (e instanceof Error && e.message === 'Cannot refresh property when process is not set') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tupdateConfig(): void {\n\t\tthis._setCommandsToSkipShell(this._configHelper.config.commandsToSkipShell);\n\t\tthis._refreshEnvironmentVariableInfoWidgetState(this._processManager.environmentVariableInfo);\n\t}\n\n\tprivate async _updateUnicodeVersion(): Promise<void> {\n\t\tthis._processManager.setUnicodeVersion(this._configHelper.config.unicodeVersion);\n\t}\n\n\tupdateAccessibilitySupport(): void {\n\t\tthis.xterm!.raw.options.screenReaderMode = this._accessibilityService.isScreenReaderOptimized();\n\t}\n\n\tprivate _setCommandsToSkipShell(commands: string[]): void {\n\t\tconst excludeCommands = commands.filter(command => command[0] === '-').map(command => command.slice(1));\n\t\tthis._skipTerminalCommands = DEFAULT_COMMANDS_TO_SKIP_SHELL.filter(defaultCommand => {\n\t\t\treturn !excludeCommands.includes(defaultCommand);\n\t\t}).concat(commands);\n\t}\n\n\tlayout(dimension: dom.Dimension): void {\n\t\tthis._lastLayoutDimensions = dimension;\n\t\tif (this.disableLayout) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't layout if dimensions are invalid (eg. the container is not attached to the DOM or\n\t\t// if display: none\n\t\tif (dimension.width <= 0 || dimension.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Evaluate columns and rows, exclude the wrapper element's margin\n\t\tconst terminalWidth = this._evaluateColsAndRows(dimension.width, dimension.height);\n\t\tif (!terminalWidth) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._resize();\n\n\t\t// Signal the container is ready\n\t\tthis._containerReadyBarrier.open();\n\n\t\t// Layout all contributions\n\t\tfor (const contribution of this._contributions.values()) {\n\t\t\tif (!this.xterm) {\n\t\t\t\tthis._xtermReadyPromise.then(xterm => contribution.layout?.(xterm, dimension));\n\t\t\t} else {\n\t\t\t\tcontribution.layout?.(this.xterm, dimension);\n\t\t\t}\n\t\t}\n\t}\n\n\t@debounce(50)\n\tprivate async _resize(): Promise<void> {\n\t\tthis._resizeNow(false);\n\t}\n\n\tprivate async _resizeNow(immediate: boolean): Promise<void> {\n\t\tlet cols = this.cols;\n\t\tlet rows = this.rows;\n\n\t\tif (this.xterm) {\n\t\t\t// Only apply these settings when the terminal is visible so that\n\t\t\t// the characters are measured correctly.\n\t\t\tif (this._isVisible && this._layoutSettingsChanged) {\n\t\t\t\tconst font = this.xterm.getFont();\n\t\t\t\tconst config = this._configHelper.config;\n\t\t\t\tthis.xterm.raw.options.letterSpacing = font.letterSpacing;\n\t\t\t\tthis.xterm.raw.options.lineHeight = font.lineHeight;\n\t\t\t\tthis.xterm.raw.options.fontSize = font.fontSize;\n\t\t\t\tthis.xterm.raw.options.fontFamily = font.fontFamily;\n\t\t\t\tthis.xterm.raw.options.fontWeight = config.fontWeight;\n\t\t\t\tthis.xterm.raw.options.fontWeightBold = config.fontWeightBold;\n\n\t\t\t\t// Any of the above setting changes could have changed the dimensions of the\n\t\t\t\t// terminal, re-evaluate now.\n\t\t\t\tthis._initDimensions();\n\t\t\t\tcols = this.cols;\n\t\t\t\trows = this.rows;\n\n\t\t\t\tthis._layoutSettingsChanged = false;\n\t\t\t}\n\n\t\t\tif (isNaN(cols) || isNaN(rows)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (cols !== this.xterm.raw.cols || rows !== this.xterm.raw.rows) {\n\t\t\t\tif (this._fixedRows || this._fixedCols) {\n\t\t\t\t\tawait this._updateProperty(ProcessPropertyType.FixedDimensions, { cols: this._fixedCols, rows: this._fixedRows });\n\t\t\t\t}\n\t\t\t\tthis._onDimensionsChanged.fire();\n\t\t\t}\n\n\t\t\tthis.xterm.raw.resize(cols, rows);\n\t\t\tTerminalInstance._lastKnownGridDimensions = { cols, rows };\n\n\t\t\tif (this._isVisible) {\n\t\t\t\tthis.xterm.forceUnpause();\n\t\t\t}\n\t\t}\n\n\t\tif (immediate) {\n\t\t\t// do not await, call setDimensions synchronously\n\t\t\tthis._processManager.setDimensions(cols, rows, true);\n\t\t} else {\n\t\t\tawait this._processManager.setDimensions(cols, rows);\n\t\t}\n\t}\n\n\tsetShellType(shellType: TerminalShellType | undefined) {\n\t\tthis._shellType = shellType;\n\t\tif (shellType) {\n\t\t\tthis._terminalShellTypeContextKey.set(shellType?.toString());\n\t\t}\n\t}\n\n\tprivate _setAriaLabel(xterm: XTermTerminal | undefined, terminalId: number, title: string | undefined): void {\n\t\tconst labelParts: string[] = [];\n\t\tif (xterm && xterm.textarea) {\n\t\t\tif (title && title.length > 0) {\n\t\t\t\tlabelParts.push(nls.localize('terminalTextBoxAriaLabelNumberAndTitle', \"Terminal {0}, {1}\", terminalId, title));\n\t\t\t} else {\n\t\t\t\tlabelParts.push(nls.localize('terminalTextBoxAriaLabel', \"Terminal {0}\", terminalId));\n\t\t\t}\n\t\t\tconst screenReaderOptimized = this._accessibilityService.isScreenReaderOptimized();\n\t\t\tif (!screenReaderOptimized) {\n\t\t\t\tlabelParts.push(nls.localize('terminalScreenReaderMode', \"Run the command: Toggle Screen Reader Accessibility Mode for an optimized screen reader experience\"));\n\t\t\t}\n\t\t\tconst accessibilityHelpKeybinding = this._keybindingService.lookupKeybinding(AccessibilityCommandId.OpenAccessibilityHelp)?.getLabel();\n\t\t\tif (this._configurationService.getValue(AccessibilityVerbositySettingId.Terminal) && accessibilityHelpKeybinding) {\n\t\t\t\tlabelParts.push(nls.localize('terminalHelpAriaLabel', \"Use {0} for terminal accessibility help\", accessibilityHelpKeybinding));\n\t\t\t}\n\t\t\txterm.textarea.setAttribute('aria-label', labelParts.join('\\n'));\n\t\t}\n\t}\n\n\tprivate _updateTitleProperties(title: string | undefined, eventSource: TitleEventSource): string {\n\t\tif (!title) {\n\t\t\treturn this._processName;\n\t\t}\n\t\tswitch (eventSource) {\n\t\t\tcase TitleEventSource.Process:\n\t\t\t\tif (this._processManager.os === OperatingSystem.Windows) {\n\t\t\t\t\t// Extract the file name without extension\n\t\t\t\t\ttitle = path.win32.parse(title).name;\n\t\t\t\t} else {\n\t\t\t\t\tconst firstSpaceIndex = title.indexOf(' ');\n\t\t\t\t\tif (title.startsWith('/')) {\n\t\t\t\t\t\ttitle = path.basename(title);\n\t\t\t\t\t} else if (firstSpaceIndex > -1) {\n\t\t\t\t\t\ttitle = title.substring(0, firstSpaceIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._processName = title;\n\t\t\t\tbreak;\n\t\t\tcase TitleEventSource.Api:\n\t\t\t\t// If the title has not been set by the API or the rename command, unregister the handler that\n\t\t\t\t// automatically updates the terminal name\n\t\t\t\tthis._staticTitle = title;\n\t\t\t\tthis._messageTitleDisposable.value = undefined;\n\t\t\t\tbreak;\n\t\t\tcase TitleEventSource.Sequence:\n\t\t\t\t// On Windows, some shells will fire this with the full path which we want to trim\n\t\t\t\t// to show just the file name. This should only happen if the title looks like an\n\t\t\t\t// absolute Windows file path\n\t\t\t\tthis._sequence = title;\n\t\t\t\tif (this._processManager.os === OperatingSystem.Windows &&\n\t\t\t\t\ttitle.match(/^[a-zA-Z]:\\\\.+\\.[a-zA-Z]{1,3}/)) {\n\t\t\t\t\tthis._sequence = path.win32.parse(title).name;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tthis._titleSource = eventSource;\n\t\treturn title;\n\t}\n\n\tsetOverrideDimensions(dimensions: ITerminalDimensionsOverride | undefined, immediate: boolean = false): void {\n\t\tif (this._dimensionsOverride && this._dimensionsOverride.forceExactSize && !dimensions && this._rows === 0 && this._cols === 0) {\n\t\t\t// this terminal never had a real size => keep the last dimensions override exact size\n\t\t\tthis._cols = this._dimensionsOverride.cols;\n\t\t\tthis._rows = this._dimensionsOverride.rows;\n\t\t}\n\t\tthis._dimensionsOverride = dimensions;\n\t\tif (immediate) {\n\t\t\tthis._resizeNow(true);\n\t\t} else {\n\t\t\tthis._resize();\n\t\t}\n\t}\n\n\tasync setFixedDimensions(): Promise<void> {\n\t\tconst cols = await this._quickInputService.input({\n\t\t\ttitle: nls.localize('setTerminalDimensionsColumn', \"Set Fixed Dimensions: Column\"),\n\t\t\tplaceHolder: 'Enter a number of columns or leave empty for automatic width',\n\t\t\tvalidateInput: async (text) => text.length > 0 && !text.match(/^\\d+$/) ? { content: 'Enter a number or leave empty size automatically', severity: Severity.Error } : undefined\n\t\t});\n\t\tif (cols === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis._fixedCols = this._parseFixedDimension(cols);\n\t\tthis._labelComputer?.refreshLabel(this);\n\t\tthis._terminalHasFixedWidth.set(!!this._fixedCols);\n\t\tconst rows = await this._quickInputService.input({\n\t\t\ttitle: nls.localize('setTerminalDimensionsRow', \"Set Fixed Dimensions: Row\"),\n\t\t\tplaceHolder: 'Enter a number of rows or leave empty for automatic height',\n\t\t\tvalidateInput: async (text) => text.length > 0 && !text.match(/^\\d+$/) ? { content: 'Enter a number or leave empty size automatically', severity: Severity.Error } : undefined\n\t\t});\n\t\tif (rows === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis._fixedRows = this._parseFixedDimension(rows);\n\t\tthis._labelComputer?.refreshLabel(this);\n\t\tawait this._refreshScrollbar();\n\t\tthis._resize();\n\t\tthis.focus();\n\t}\n\n\tprivate _parseFixedDimension(value: string): number | undefined {\n\t\tif (value === '') {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst parsed = parseInt(value);\n\t\tif (parsed <= 0) {\n\t\t\tthrow new Error(`Could not parse dimension \"${value}\"`);\n\t\t}\n\t\treturn parsed;\n\t}\n\n\tasync toggleSizeToContentWidth(): Promise<void> {\n\t\tif (!this.xterm?.raw.buffer.active) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._hasScrollBar) {\n\t\t\tthis._terminalHasFixedWidth.set(false);\n\t\t\tthis._fixedCols = undefined;\n\t\t\tthis._fixedRows = undefined;\n\t\t\tthis._hasScrollBar = false;\n\t\t\tthis._initDimensions();\n\t\t\tawait this._resize();\n\t\t} else {\n\t\t\t// Fixed columns should be at least xterm.js' regular column count\n\t\t\tconst proposedCols = Math.max(this.maxCols, Math.min(this.xterm.getLongestViewportWrappedLineLength(), Constants.MaxSupportedCols));\n\t\t\t// Don't switch to fixed dimensions if the content already fits as it makes the scroll\n\t\t\t// bar look bad being off the edge\n\t\t\tif (proposedCols > this.xterm.raw.cols) {\n\t\t\t\tthis._fixedCols = proposedCols;\n\t\t\t}\n\t\t}\n\t\tawait this._refreshScrollbar();\n\t\tthis._labelComputer?.refreshLabel(this);\n\t\tthis.focus();\n\t}\n\n\tprivate _refreshScrollbar(): Promise<void> {\n\t\tif (this._fixedCols || this._fixedRows) {\n\t\t\treturn this._addScrollbar();\n\t\t}\n\t\treturn this._removeScrollbar();\n\t}\n\n\tprivate async _addScrollbar(): Promise<void> {\n\t\tconst charWidth = (this.xterm ? this.xterm.getFont() : this._configHelper.getFont()).charWidth;\n\t\tif (!this.xterm?.raw.element || !this._container || !charWidth || !this._fixedCols) {\n\t\t\treturn;\n\t\t}\n\t\tthis._wrapperElement.classList.add('fixed-dims');\n\t\tthis._hasScrollBar = true;\n\t\tthis._initDimensions();\n\t\t// Always remove a row to make room for the scroll bar\n\t\tthis._fixedRows = this._rows - 1;\n\t\tawait this._resize();\n\t\tthis._terminalHasFixedWidth.set(true);\n\t\tif (!this._horizontalScrollbar) {\n\t\t\tthis._horizontalScrollbar = this._register(new DomScrollableElement(this._wrapperElement, {\n\t\t\t\tvertical: ScrollbarVisibility.Hidden,\n\t\t\t\thorizontal: ScrollbarVisibility.Auto,\n\t\t\t\tuseShadows: false,\n\t\t\t\tscrollYToX: false,\n\t\t\t\tconsumeMouseWheelIfScrollbarIsNeeded: false\n\t\t\t}));\n\t\t\tthis._container.appendChild(this._horizontalScrollbar.getDomNode());\n\t\t}\n\t\tthis._horizontalScrollbar.setScrollDimensions({\n\t\t\twidth: this.xterm.raw.element.clientWidth,\n\t\t\tscrollWidth: this._fixedCols * charWidth + 40 // Padding + scroll bar\n\t\t});\n\t\tthis._horizontalScrollbar.getDomNode().style.paddingBottom = '16px';\n\n\t\t// work around for https://github.com/xtermjs/xterm.js/issues/3482\n\t\tif (isWindows) {\n\t\t\tfor (let i = this.xterm.raw.buffer.active.viewportY; i < this.xterm.raw.buffer.active.length; i++) {\n\t\t\t\tconst line = this.xterm.raw.buffer.active.getLine(i);\n\t\t\t\t(line as any)._line.isWrapped = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _removeScrollbar(): Promise<void> {\n\t\tif (!this._container || !this._horizontalScrollbar) {\n\t\t\treturn;\n\t\t}\n\t\tthis._horizontalScrollbar.getDomNode().remove();\n\t\tthis._horizontalScrollbar.dispose();\n\t\tthis._horizontalScrollbar = undefined;\n\t\tthis._wrapperElement.remove();\n\t\tthis._wrapperElement.classList.remove('fixed-dims');\n\t\tthis._container.appendChild(this._wrapperElement);\n\t}\n\n\tprivate _setResolvedShellLaunchConfig(shellLaunchConfig: IShellLaunchConfig): void {\n\t\tthis._shellLaunchConfig.args = shellLaunchConfig.args;\n\t\tthis._shellLaunchConfig.cwd = shellLaunchConfig.cwd;\n\t\tthis._shellLaunchConfig.executable = shellLaunchConfig.executable;\n\t\tthis._shellLaunchConfig.env = shellLaunchConfig.env;\n\t}\n\n\tprivate _onEnvironmentVariableInfoChanged(info: IEnvironmentVariableInfo): void {\n\t\tif (info.requiresAction) {\n\t\t\tthis.xterm?.raw.textarea?.setAttribute('aria-label', nls.localize('terminalStaleTextBoxAriaLabel', \"Terminal {0} environment is stale, run the 'Show Environment Information' command for more information\", this._instanceId));\n\t\t}\n\t\tthis._refreshEnvironmentVariableInfoWidgetState(info);\n\t}\n\n\tprivate async _refreshEnvironmentVariableInfoWidgetState(info?: IEnvironmentVariableInfo): Promise<void> {\n\t\t// Check if the status should exist\n\t\tif (!info) {\n\t\t\tthis.statusList.remove(TerminalStatus.RelaunchNeeded);\n\t\t\tthis.statusList.remove(TerminalStatus.EnvironmentVariableInfoChangesActive);\n\t\t\treturn;\n\t\t}\n\n\t\t// Recreate the process seamlessly without informing the use if the following conditions are\n\t\t// met.\n\t\tif (\n\t\t\t// The change requires a relaunch\n\t\t\tinfo.requiresAction &&\n\t\t\t// The feature is enabled\n\t\t\tthis._configHelper.config.environmentChangesRelaunch &&\n\t\t\t// Has not been interacted with\n\t\t\t!this._processManager.hasWrittenData &&\n\t\t\t// Not a feature terminal or is a reconnecting task terminal (TODO: Need to explain the latter case)\n\t\t\t(!this._shellLaunchConfig.isFeatureTerminal || (this.reconnectionProperties && this._configurationService.getValue('task.reconnection') === true)) &&\n\t\t\t// Not a custom pty\n\t\t\t!this._shellLaunchConfig.customPtyImplementation &&\n\t\t\t// Not an extension owned terminal\n\t\t\t!this._shellLaunchConfig.isExtensionOwnedTerminal &&\n\t\t\t// Not a reconnected or revived terminal\n\t\t\t!this._shellLaunchConfig.attachPersistentProcess &&\n\t\t\t// Not a Windows remote using ConPTY (#187084)\n\t\t\t!(this._processManager.remoteAuthority && this._configHelper.config.windowsEnableConpty && (await this._processManager.getBackendOS()) === OperatingSystem.Windows)\n\t\t) {\n\t\t\tthis.relaunch();\n\t\t\treturn;\n\t\t}\n\t\t// Re-create statuses\n\t\tconst workspaceFolder = getWorkspaceForTerminal(this.shellLaunchConfig.cwd, this._workspaceContextService, this._historyService);\n\t\tthis.statusList.add(info.getStatus({ workspaceFolder }));\n\t}\n\n\tasync getInitialCwd(): Promise<string> {\n\t\tif (!this._initialCwd) {\n\t\t\tthis._initialCwd = this._processManager.initialCwd;\n\t\t}\n\t\treturn this._initialCwd;\n\t}\n\n\tasync getCwd(): Promise<string> {\n\t\tif (this.capabilities.has(TerminalCapability.CwdDetection)) {\n\t\t\treturn this.capabilities.get(TerminalCapability.CwdDetection)!.getCwd();\n\t\t} else if (this.capabilities.has(TerminalCapability.NaiveCwdDetection)) {\n\t\t\treturn this.capabilities.get(TerminalCapability.NaiveCwdDetection)!.getCwd();\n\t\t}\n\t\treturn this._processManager.initialCwd;\n\t}\n\n\tprivate async _refreshProperty<T extends ProcessPropertyType>(type: T): Promise<IProcessPropertyMap[T]> {\n\t\tawait this.processReady;\n\t\treturn this._processManager.refreshProperty(type);\n\t}\n\n\tprivate async _updateProperty<T extends ProcessPropertyType>(type: T, value: IProcessPropertyMap[T]): Promise<void> {\n\t\treturn this._processManager.updateProperty(type, value);\n\t}\n\n\tasync rename(title?: string) {\n\t\tthis._setTitle(title, TitleEventSource.Api);\n\t}\n\n\tprivate _setTitle(title: string | undefined, eventSource: TitleEventSource): void {\n\t\tconst reset = !title;\n\t\ttitle = this._updateTitleProperties(title, eventSource);\n\t\tconst titleChanged = title !== this._title;\n\t\tthis._title = title;\n\t\tthis._labelComputer?.refreshLabel(this, reset);\n\t\tthis._setAriaLabel(this.xterm?.raw, this._instanceId, this._title);\n\n\t\tif (titleChanged) {\n\t\t\tthis._onTitleChanged.fire(this);\n\t\t}\n\t}\n\n\tasync changeIcon() {\n\t\ttype Item = IQuickPickItem & { icon: TerminalIcon };\n\t\tconst items: Item[] = [];\n\t\tfor (const icon of getAllCodicons()) {\n\t\t\titems.push({ label: `$(${icon.id})`, description: `${icon.id}`, icon });\n\t\t}\n\t\tconst result = await this._quickInputService.pick(items, {\n\t\t\tmatchOnDescription: true,\n\t\t\tplaceHolder: nls.localize('changeIcon', 'Select an icon for the terminal')\n\t\t});\n\t\tif (result) {\n\t\t\tthis._icon = result.icon;\n\t\t\tthis._onIconChanged.fire({ instance: this, userInitiated: true });\n\t\t}\n\t}\n\n\tasync changeColor() {\n\t\tconst icon = this._getIcon();\n\t\tif (!icon) {\n\t\t\treturn;\n\t\t}\n\t\tconst colorTheme = this._themeService.getColorTheme();\n\t\tconst standardColors: string[] = getStandardColors(colorTheme);\n\t\tconst styleElement = getColorStyleElement(colorTheme);\n\t\tconst items: QuickPickItem[] = [];\n\t\tfor (const colorKey of standardColors) {\n\t\t\tconst colorClass = getColorClass(colorKey);\n\t\t\titems.push({\n\t\t\t\tlabel: `$(${Codicon.circleFilled.id}) ${colorKey.replace('terminal.ansi', '')}`, id: colorKey, description: colorKey, iconClasses: [colorClass]\n\t\t\t});\n\t\t}\n\t\titems.push({ type: 'separator' });\n\t\tconst showAllColorsItem = { label: 'Reset to default' };\n\t\titems.push(showAllColorsItem);\n\t\tdocument.body.appendChild(styleElement);\n\n\t\tconst quickPick = this._quickInputService.createQuickPick();\n\t\tquickPick.items = items;\n\t\tquickPick.matchOnDescription = true;\n\t\tquickPick.placeholder = nls.localize('changeColor', 'Select a color for the terminal');\n\t\tquickPick.show();\n\t\tconst disposables: IDisposable[] = [];\n\t\tconst result = await new Promise<IQuickPickItem | undefined>(r => {\n\t\t\tdisposables.push(quickPick.onDidHide(() => r(undefined)));\n\t\t\tdisposables.push(quickPick.onDidAccept(() => r(quickPick.selectedItems[0])));\n\t\t});\n\t\tdispose(disposables);\n\n\t\tif (result) {\n\t\t\tthis.shellLaunchConfig.color = result.id;\n\t\t\tthis._onIconChanged.fire({ instance: this, userInitiated: true });\n\t\t}\n\n\t\tquickPick.hide();\n\t\tdocument.body.removeChild(styleElement);\n\t}\n\n\tselectPreviousSuggestion(): void {\n\t\tthis.xterm?.suggestController?.selectPreviousSuggestion();\n\t}\n\n\tselectPreviousPageSuggestion(): void {\n\t\tthis.xterm?.suggestController?.selectPreviousPageSuggestion();\n\t}\n\n\tselectNextSuggestion(): void {\n\t\tthis.xterm?.suggestController?.selectNextSuggestion();\n\t}\n\n\tselectNextPageSuggestion(): void {\n\t\tthis.xterm?.suggestController?.selectNextPageSuggestion();\n\t}\n\n\tasync acceptSelectedSuggestion(suggestion?: Pick<ISimpleSelectedSuggestion, 'item' | 'model'>): Promise<void> {\n\t\tthis.xterm?.suggestController?.acceptSelectedSuggestion(suggestion);\n\t}\n\n\thideSuggestWidget(): void {\n\t\tthis.xterm?.suggestController?.hideSuggestWidget();\n\t}\n\n\tforceScrollbarVisibility(): void {\n\t\tthis._wrapperElement.classList.add('force-scrollbar');\n\t}\n\n\tresetScrollbarVisibility(): void {\n\t\tthis._wrapperElement.classList.remove('force-scrollbar');\n\t}\n}\n\nclass TerminalInstanceDragAndDropController extends Disposable implements dom.IDragAndDropObserverCallbacks {\n\tprivate _dropOverlay?: HTMLElement;\n\n\tprivate readonly _onDropFile = this._register(new Emitter<string | URI>());\n\tget onDropFile(): Event<string | URI> { return this._onDropFile.event; }\n\tprivate readonly _onDropTerminal = this._register(new Emitter<IRequestAddInstanceToGroupEvent>());\n\tget onDropTerminal(): Event<IRequestAddInstanceToGroupEvent> { return this._onDropTerminal.event; }\n\n\tconstructor(\n\t\tprivate readonly _container: HTMLElement,\n\t\t@IWorkbenchLayoutService private readonly _layoutService: IWorkbenchLayoutService,\n\t\t@IViewDescriptorService private readonly _viewDescriptorService: IViewDescriptorService,\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => this._clearDropOverlay()));\n\t}\n\n\tprivate _clearDropOverlay() {\n\t\tif (this._dropOverlay && this._dropOverlay.parentElement) {\n\t\t\tthis._dropOverlay.parentElement.removeChild(this._dropOverlay);\n\t\t}\n\t\tthis._dropOverlay = undefined;\n\t}\n\n\tonDragEnter(e: DragEvent) {\n\t\tif (!containsDragType(e, DataTransfers.FILES, DataTransfers.RESOURCES, TerminalDataTransfers.Terminals, CodeDataTransfers.FILES)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._dropOverlay) {\n\t\t\tthis._dropOverlay = document.createElement('div');\n\t\t\tthis._dropOverlay.classList.add('terminal-drop-overlay');\n\t\t}\n\n\t\t// Dragging terminals\n\t\tif (containsDragType(e, TerminalDataTransfers.Terminals)) {\n\t\t\tconst side = this._getDropSide(e);\n\t\t\tthis._dropOverlay.classList.toggle('drop-before', side === 'before');\n\t\t\tthis._dropOverlay.classList.toggle('drop-after', side === 'after');\n\t\t}\n\n\t\tif (!this._dropOverlay.parentElement) {\n\t\t\tthis._container.appendChild(this._dropOverlay);\n\t\t}\n\t}\n\tonDragLeave(e: DragEvent) {\n\t\tthis._clearDropOverlay();\n\t}\n\n\tonDragEnd(e: DragEvent) {\n\t\tthis._clearDropOverlay();\n\t}\n\n\tonDragOver(e: DragEvent) {\n\t\tif (!e.dataTransfer || !this._dropOverlay) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Dragging terminals\n\t\tif (containsDragType(e, TerminalDataTransfers.Terminals)) {\n\t\t\tconst side = this._getDropSide(e);\n\t\t\tthis._dropOverlay.classList.toggle('drop-before', side === 'before');\n\t\t\tthis._dropOverlay.classList.toggle('drop-after', side === 'after');\n\t\t}\n\n\t\tthis._dropOverlay.style.opacity = '1';\n\t}\n\n\tasync onDrop(e: DragEvent) {\n\t\tthis._clearDropOverlay();\n\n\t\tif (!e.dataTransfer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst terminalResources = getTerminalResourcesFromDragEvent(e);\n\t\tif (terminalResources) {\n\t\t\tfor (const uri of terminalResources) {\n\t\t\t\tconst side = this._getDropSide(e);\n\t\t\t\tthis._onDropTerminal.fire({ uri, side });\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if files were dragged from the tree explorer\n\t\tlet path: URI | undefined;\n\t\tconst rawResources = e.dataTransfer.getData(DataTransfers.RESOURCES);\n\t\tif (rawResources) {\n\t\t\tpath = URI.parse(JSON.parse(rawResources)[0]);\n\t\t}\n\n\t\tconst rawCodeFiles = e.dataTransfer.getData(CodeDataTransfers.FILES);\n\t\tif (!path && rawCodeFiles) {\n\t\t\tpath = URI.file(JSON.parse(rawCodeFiles)[0]);\n\t\t}\n\n\t\tif (!path && e.dataTransfer.files.length > 0 && e.dataTransfer.files[0].path /* Electron only */) {\n\t\t\t// Check if the file was dragged from the filesystem\n\t\t\tpath = URI.file(e.dataTransfer.files[0].path);\n\t\t}\n\n\t\tif (!path) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._onDropFile.fire(path);\n\t}\n\n\tprivate _getDropSide(e: DragEvent): 'before' | 'after' {\n\t\tconst target = this._container;\n\t\tif (!target) {\n\t\t\treturn 'after';\n\t\t}\n\n\t\tconst rect = target.getBoundingClientRect();\n\t\treturn this._getViewOrientation() === Orientation.HORIZONTAL\n\t\t\t? (e.clientX - rect.left < rect.width / 2 ? 'before' : 'after')\n\t\t\t: (e.clientY - rect.top < rect.height / 2 ? 'before' : 'after');\n\t}\n\n\tprivate _getViewOrientation(): Orientation {\n\t\tconst panelPosition = this._layoutService.getPanelPosition();\n\t\tconst terminalLocation = this._viewDescriptorService.getViewLocationById(TERMINAL_VIEW_ID);\n\t\treturn terminalLocation === ViewContainerLocation.Panel && panelPosition === Position.BOTTOM\n\t\t\t? Orientation.HORIZONTAL\n\t\t\t: Orientation.VERTICAL;\n\t}\n}\n\ninterface ITerminalLabelTemplateProperties {\n\tcwd?: string | null | undefined;\n\tcwdFolder?: string | null | undefined;\n\tworkspaceFolder?: string | null | undefined;\n\tlocal?: string | null | undefined;\n\tprocess?: string | null | undefined;\n\tsequence?: string | null | undefined;\n\ttask?: string | null | undefined;\n\tfixedDimensions?: string | null | undefined;\n\tseparator?: string | ISeparator | null | undefined;\n}\n\nconst enum TerminalLabelType {\n\tTitle = 'title',\n\tDescription = 'description'\n}\n\nexport class TerminalLabelComputer extends Disposable {\n\tprivate _title: string = '';\n\tprivate _description: string = '';\n\tget title(): string | undefined { return this._title; }\n\tget description(): string { return this._description; }\n\n\tprivate readonly _onDidChangeLabel = this._register(new Emitter<{ title: string; description: string }>());\n\treadonly onDidChangeLabel = this._onDidChangeLabel.event;\n\n\tconstructor(\n\t\tprivate readonly _configHelper: TerminalConfigHelper,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\t}\n\n\trefreshLabel(instance: Pick<ITerminalInstance, 'shellLaunchConfig' | 'cwd' | 'fixedCols' | 'fixedRows' | 'initialCwd' | 'processName' | 'sequence' | 'userHome' | 'workspaceFolder' | 'staticTitle' | 'capabilities' | 'title' | 'description'>, reset?: boolean): void {\n\t\tthis._title = this.computeLabel(instance, this._configHelper.config.tabs.title, TerminalLabelType.Title, reset);\n\t\tthis._description = this.computeLabel(instance, this._configHelper.config.tabs.description, TerminalLabelType.Description);\n\t\tif (this._title !== instance.title || this._description !== instance.description || reset) {\n\t\t\tthis._onDidChangeLabel.fire({ title: this._title, description: this._description });\n\t\t}\n\t}\n\n\tcomputeLabel(\n\t\tinstance: Pick<ITerminalInstance, 'shellLaunchConfig' | 'cwd' | 'fixedCols' | 'fixedRows' | 'initialCwd' | 'processName' | 'sequence' | 'userHome' | 'workspaceFolder' | 'staticTitle' | 'capabilities' | 'title' | 'description'>,\n\t\tlabelTemplate: string,\n\t\tlabelType: TerminalLabelType,\n\t\treset?: boolean\n\t) {\n\t\tconst type = instance.shellLaunchConfig.attachPersistentProcess?.type || instance.shellLaunchConfig.type;\n\t\tconst templateProperties: ITerminalLabelTemplateProperties = {\n\t\t\tcwd: instance.cwd || instance.initialCwd || '',\n\t\t\tcwdFolder: '',\n\t\t\tworkspaceFolder: instance.workspaceFolder ? path.basename(instance.workspaceFolder.uri.fsPath) : undefined,\n\t\t\tlocal: type === 'Local' ? type : undefined,\n\t\t\tprocess: instance.processName,\n\t\t\tsequence: instance.sequence,\n\t\t\ttask: type === 'Task' ? type : undefined,\n\t\t\tfixedDimensions: instance.fixedCols\n\t\t\t\t? (instance.fixedRows ? `\\u2194${instance.fixedCols} \\u2195${instance.fixedRows}` : `\\u2194${instance.fixedCols}`)\n\t\t\t\t: (instance.fixedRows ? `\\u2195${instance.fixedRows}` : ''),\n\t\t\tseparator: { label: this._configHelper.config.tabs.separator }\n\t\t};\n\t\tlabelTemplate = labelTemplate.trim();\n\t\tif (!labelTemplate) {\n\t\t\treturn labelType === TerminalLabelType.Title ? (instance.processName || '') : '';\n\t\t}\n\t\tif (!reset && instance.staticTitle && labelType === TerminalLabelType.Title) {\n\t\t\treturn instance.staticTitle.replace(/[\\n\\r\\t]/g, '') || templateProperties.process?.replace(/[\\n\\r\\t]/g, '') || '';\n\t\t}\n\t\tconst detection = instance.capabilities.has(TerminalCapability.CwdDetection) || instance.capabilities.has(TerminalCapability.NaiveCwdDetection);\n\t\tconst folders = this._workspaceContextService.getWorkspace().folders;\n\t\tconst multiRootWorkspace = folders.length > 1;\n\n\t\t// Only set cwdFolder if detection is on\n\t\tif (templateProperties.cwd && detection && (!instance.shellLaunchConfig.isFeatureTerminal || labelType === TerminalLabelType.Title)) {\n\t\t\tconst cwdUri = URI.from({\n\t\t\t\tscheme: instance.workspaceFolder?.uri.scheme || Schemas.file,\n\t\t\t\tpath: instance.cwd ? path.resolve(instance.cwd) : undefined\n\t\t\t});\n\t\t\t// Multi-root workspaces always show cwdFolder to disambiguate them, otherwise only show\n\t\t\t// when it differs from the workspace folder in which it was launched from\n\t\t\tlet showCwd = false;\n\t\t\tif (multiRootWorkspace) {\n\t\t\t\tshowCwd = true;\n\t\t\t} else if (instance.workspaceFolder?.uri) {\n\t\t\t\tconst caseSensitive = this._fileService.hasCapability(instance.workspaceFolder.uri, FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\t\tshowCwd = cwdUri.fsPath.localeCompare(instance.workspaceFolder.uri.fsPath, undefined, { sensitivity: caseSensitive ? 'case' : 'base' }) !== 0;\n\t\t\t}\n\t\t\tif (showCwd) {\n\n\t\t\t\ttemplateProperties.cwdFolder = path.basename(templateProperties.cwd);\n\t\t\t}\n\t\t}\n\n\t\t// Remove special characters that could mess with rendering\n\t\tconst label = template(labelTemplate, (templateProperties as unknown) as { [key: string]: string | ISeparator | undefined | null }).replace(/[\\n\\r\\t]/g, '').trim();\n\t\treturn label === '' && labelType === TerminalLabelType.Title ? (instance.processName || '') : label;\n\t}\n}\n\nexport function parseExitResult(\n\texitCodeOrError: ITerminalLaunchError | number | undefined,\n\tshellLaunchConfig: IShellLaunchConfig,\n\tprocessState: ProcessState,\n\tinitialCwd: string | undefined\n): { code: number | undefined; message: string | undefined } | undefined {\n\t// Only return a message if the exit code is non-zero\n\tif (exitCodeOrError === undefined || exitCodeOrError === 0) {\n\t\treturn { code: exitCodeOrError, message: undefined };\n\t}\n\n\tconst code = typeof exitCodeOrError === 'number' ? exitCodeOrError : exitCodeOrError.code;\n\n\t// Create exit code message\n\tlet message: string | undefined = undefined;\n\tswitch (typeof exitCodeOrError) {\n\t\tcase 'number': {\n\t\t\tlet commandLine: string | undefined = undefined;\n\t\t\tif (shellLaunchConfig.executable) {\n\t\t\t\tcommandLine = shellLaunchConfig.executable;\n\t\t\t\tif (typeof shellLaunchConfig.args === 'string') {\n\t\t\t\t\tcommandLine += ` ${shellLaunchConfig.args}`;\n\t\t\t\t} else if (shellLaunchConfig.args && shellLaunchConfig.args.length) {\n\t\t\t\t\tcommandLine += shellLaunchConfig.args.map(a => ` '${a}'`).join();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (processState === ProcessState.KilledDuringLaunch) {\n\t\t\t\tif (commandLine) {\n\t\t\t\t\tmessage = nls.localize('launchFailed.exitCodeAndCommandLine', \"The terminal process \\\"{0}\\\" failed to launch (exit code: {1}).\", commandLine, code);\n\t\t\t\t} else {\n\t\t\t\t\tmessage = nls.localize('launchFailed.exitCodeOnly', \"The terminal process failed to launch (exit code: {0}).\", code);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (commandLine) {\n\t\t\t\t\tmessage = nls.localize('terminated.exitCodeAndCommandLine', \"The terminal process \\\"{0}\\\" terminated with exit code: {1}.\", commandLine, code);\n\t\t\t\t} else {\n\t\t\t\t\tmessage = nls.localize('terminated.exitCodeOnly', \"The terminal process terminated with exit code: {0}.\", code);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'object': {\n\t\t\t// Ignore internal errors\n\t\t\tif (exitCodeOrError.message.toString().includes('Could not find pty with id')) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Convert conpty code-based failures into human friendly messages\n\t\t\tlet innerMessage = exitCodeOrError.message;\n\t\t\tconst conptyError = exitCodeOrError.message.match(/.*error code:\\s*(\\d+).*$/);\n\t\t\tif (conptyError) {\n\t\t\t\tconst errorCode = conptyError.length > 1 ? parseInt(conptyError[1]) : undefined;\n\t\t\t\tswitch (errorCode) {\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tinnerMessage = `Access was denied to the path containing your executable \"${shellLaunchConfig.executable}\". Manage and change your permissions to get this to work`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 267:\n\t\t\t\t\t\tinnerMessage = `Invalid starting directory \"${initialCwd}\", review your terminal.integrated.cwd setting`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1260:\n\t\t\t\t\t\tinnerMessage = `Windows cannot open this program because it has been prevented by a software restriction policy. For more information, open Event Viewer or contact your system Administrator`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmessage = nls.localize('launchFailed.errorMessage', \"The terminal process failed to launch: {0}.\", innerMessage);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn { code, message };\n}\n"]}