{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy.ts"],"names":[],"mappings":"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","file":"terminalProcessExtHostProxy.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IProcessReadyEvent, IShellLaunchConfig, ITerminalChildProcess, ITerminalDimensions, ITerminalLaunchError, IProcessProperty, ProcessPropertyType, IProcessPropertyMap } from 'vs/platform/terminal/common/terminal';\nimport { ITerminalService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { ITerminalProcessExtHostProxy } from 'vs/workbench/contrib/terminal/common/terminal';\n\nexport class TerminalProcessExtHostProxy extends Disposable implements ITerminalChildProcess, ITerminalProcessExtHostProxy {\n\treadonly id = 0;\n\treadonly shouldPersist = false;\n\n\tprivate readonly _onProcessData = this._register(new Emitter<string>());\n\treadonly onProcessData: Event<string> = this._onProcessData.event;\n\tprivate readonly _onProcessReady = this._register(new Emitter<IProcessReadyEvent>());\n\tget onProcessReady(): Event<IProcessReadyEvent> { return this._onProcessReady.event; }\n\n\tprivate readonly _onStart = this._register(new Emitter<void>());\n\treadonly onStart: Event<void> = this._onStart.event;\n\tprivate readonly _onInput = this._register(new Emitter<string>());\n\treadonly onInput: Event<string> = this._onInput.event;\n\tprivate readonly _onBinary = this._register(new Emitter<string>());\n\treadonly onBinary: Event<string> = this._onBinary.event;\n\tprivate readonly _onResize: Emitter<{ cols: number; rows: number }> = this._register(new Emitter<{ cols: number; rows: number }>());\n\treadonly onResize: Event<{ cols: number; rows: number }> = this._onResize.event;\n\tprivate readonly _onAcknowledgeDataEvent = this._register(new Emitter<number>());\n\treadonly onAcknowledgeDataEvent: Event<number> = this._onAcknowledgeDataEvent.event;\n\tprivate readonly _onShutdown = this._register(new Emitter<boolean>());\n\treadonly onShutdown: Event<boolean> = this._onShutdown.event;\n\tprivate readonly _onRequestInitialCwd = this._register(new Emitter<void>());\n\treadonly onRequestInitialCwd: Event<void> = this._onRequestInitialCwd.event;\n\tprivate readonly _onRequestCwd = this._register(new Emitter<void>());\n\treadonly onRequestCwd: Event<void> = this._onRequestCwd.event;\n\tprivate readonly _onDidChangeProperty = this._register(new Emitter<IProcessProperty<any>>());\n\treadonly onDidChangeProperty = this._onDidChangeProperty.event;\n\tprivate readonly _onProcessExit = this._register(new Emitter<number | undefined>());\n\treadonly onProcessExit: Event<number | undefined> = this._onProcessExit.event;\n\n\tprivate _pendingInitialCwdRequests: ((value: string | PromiseLike<string>) => void)[] = [];\n\tprivate _pendingCwdRequests: ((value: string | PromiseLike<string>) => void)[] = [];\n\n\tconstructor(\n\t\tpublic instanceId: number,\n\t\tprivate _cols: number,\n\t\tprivate _rows: number,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t) {\n\t\tsuper();\n\t}\n\n\temitData(data: string): void {\n\t\tthis._onProcessData.fire(data);\n\t}\n\n\temitTitle(title: string): void {\n\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.Title, value: title });\n\t}\n\n\temitReady(pid: number, cwd: string): void {\n\t\tthis._onProcessReady.fire({ pid, cwd, windowsPty: undefined });\n\t}\n\n\temitProcessProperty({ type, value }: IProcessProperty<any>): void {\n\t\tswitch (type) {\n\t\t\tcase ProcessPropertyType.Cwd:\n\t\t\t\tthis.emitCwd(value);\n\t\t\t\tbreak;\n\t\t\tcase ProcessPropertyType.InitialCwd:\n\t\t\t\tthis.emitInitialCwd(value);\n\t\t\t\tbreak;\n\t\t\tcase ProcessPropertyType.Title:\n\t\t\t\tthis.emitTitle(value);\n\t\t\t\tbreak;\n\t\t\tcase ProcessPropertyType.OverrideDimensions:\n\t\t\t\tthis.emitOverrideDimensions(value);\n\t\t\t\tbreak;\n\t\t\tcase ProcessPropertyType.ResolvedShellLaunchConfig:\n\t\t\t\tthis.emitResolvedShellLaunchConfig(value);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\temitExit(exitCode: number | undefined): void {\n\t\tthis._onProcessExit.fire(exitCode);\n\t\tthis.dispose();\n\t}\n\n\temitOverrideDimensions(dimensions: ITerminalDimensions | undefined): void {\n\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.OverrideDimensions, value: dimensions });\n\t}\n\n\temitResolvedShellLaunchConfig(shellLaunchConfig: IShellLaunchConfig): void {\n\t\tthis._onDidChangeProperty.fire({ type: ProcessPropertyType.ResolvedShellLaunchConfig, value: shellLaunchConfig });\n\t}\n\n\temitInitialCwd(initialCwd: string): void {\n\t\twhile (this._pendingInitialCwdRequests.length > 0) {\n\t\t\tthis._pendingInitialCwdRequests.pop()!(initialCwd);\n\t\t}\n\t}\n\n\temitCwd(cwd: string): void {\n\t\twhile (this._pendingCwdRequests.length > 0) {\n\t\t\tthis._pendingCwdRequests.pop()!(cwd);\n\t\t}\n\t}\n\n\tasync start(): Promise<ITerminalLaunchError | undefined> {\n\t\treturn this._terminalService.requestStartExtensionTerminal(this, this._cols, this._rows);\n\t}\n\n\tshutdown(immediate: boolean): void {\n\t\tthis._onShutdown.fire(immediate);\n\t}\n\n\tinput(data: string): void {\n\t\tthis._onInput.fire(data);\n\t}\n\n\tresize(cols: number, rows: number): void {\n\t\tthis._onResize.fire({ cols, rows });\n\t}\n\n\tclearBuffer(): void | Promise<void> {\n\t\t// no-op\n\t}\n\n\tacknowledgeDataEvent(): void {\n\t\t// Flow control is disabled for extension terminals\n\t}\n\n\tasync setUnicodeVersion(version: '6' | '11'): Promise<void> {\n\t\t// No-op\n\t}\n\n\tasync processBinary(data: string): Promise<void> {\n\t\t// Disabled for extension terminals\n\t\tthis._onBinary.fire(data);\n\t}\n\n\tgetInitialCwd(): Promise<string> {\n\t\treturn new Promise<string>(resolve => {\n\t\t\tthis._onRequestInitialCwd.fire();\n\t\t\tthis._pendingInitialCwdRequests.push(resolve);\n\t\t});\n\t}\n\n\tgetCwd(): Promise<string> {\n\t\treturn new Promise<string>(resolve => {\n\t\t\tthis._onRequestCwd.fire();\n\t\t\tthis._pendingCwdRequests.push(resolve);\n\t\t});\n\t}\n\n\tasync refreshProperty<T extends ProcessPropertyType>(type: T): Promise<any> {\n\t\t// throws if called in extHostTerminalService\n\t}\n\n\tasync updateProperty<T extends ProcessPropertyType>(type: T, value: IProcessPropertyMap[T]): Promise<void> {\n\t\t// throws if called in extHostTerminalService\n\t}\n}\n"]}