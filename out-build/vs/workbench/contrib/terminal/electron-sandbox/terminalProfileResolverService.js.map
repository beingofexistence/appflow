{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/electron-sandbox/terminalProfileResolverService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAazF,IAAM,IAAI,GAAV,MAAM,IAAuC,SAAQ,qCAAI;QAE/D,YACgC,4BAAiC,EACzC,oBAAyB,EAC/B,cAAmB,EACf,UAAe,EACV,uBAA4B,EAC7B,sBAA2B,EAC/B,kBAAuB,EAClB,uBAA6B;YAEvD,KAAK,CACJ;gBACC,qBAAqB,EAAE,KAAK,EAAE,eAAe,EAAE,QAAQ,EAAE,EAAE;oBAC1D,MAAM,OAAO,GAAG,MAAM,uBAAuB,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;oBAC1E,IAAI,CAAC,OAAO,EAAE;wBACb,MAAM,IAAI,WAAE,CAAe,kFAAkF,eAAe,GAAG,CAAC,CAAC;qBACjI;oBACD,OAAO,OAAO,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;gBAChD,CAAC;gBACD,cAAc,EAAE,KAAK,EAAE,eAAe,EAAE,EAAE;oBACzC,MAAM,OAAO,GAAG,MAAM,uBAAuB,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;oBAC1E,IAAI,CAAC,OAAO,EAAE;wBACb,MAAM,IAAI,WAAE,CAAe,yEAAyE,eAAe,GAAG,CAAC,CAAC;qBACxH;oBACD,OAAO,OAAO,CAAC,cAAc,EAAE,CAAC;gBACjC,CAAC;aACD,EACD,oBAAoB,EACpB,4BAA4B,EAC5B,cAAc,EACd,UAAU,EACV,sBAAsB,EACtB,uBAAuB,EACvB,kBAAkB,CAClB,CAAC;QACH,CAAC;KACD,CAAA;IAtCY,oBAAI;mBAAJ,IAAI;QAGd,WAAA,2BAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,aAAG,CAAA;QACH,WAAA,cAAG,CAAA;QACH,WAAA,eAAG,CAAA;QACH,WAAA,cAAG,CAAA;QACH,WAAA,wBAAG,CAAA;QACH,WAAA,eAAI,CAAA;OAVM,IAAI,CAsChB","file":"terminalProfileResolverService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ErrorNoTelemetry } from 'vs/base/common/errors';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITerminalLogService } from 'vs/platform/terminal/common/terminal';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ITerminalInstanceService } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { BaseTerminalProfileResolverService } from 'vs/workbench/contrib/terminal/browser/terminalProfileResolverService';\nimport { ITerminalProfileService } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\n\nexport class ElectronTerminalProfileResolverService extends BaseTerminalProfileResolverService {\n\n\tconstructor(\n\t\t@IConfigurationResolverService configurationResolverService: IConfigurationResolverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IHistoryService historyService: IHistoryService,\n\t\t@ITerminalLogService logService: ITerminalLogService,\n\t\t@IWorkspaceContextService workspaceContextService: IWorkspaceContextService,\n\t\t@ITerminalProfileService terminalProfileService: ITerminalProfileService,\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@ITerminalInstanceService terminalInstanceService: ITerminalInstanceService\n\t) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tgetDefaultSystemShell: async (remoteAuthority, platform) => {\n\t\t\t\t\tconst backend = await terminalInstanceService.getBackend(remoteAuthority);\n\t\t\t\t\tif (!backend) {\n\t\t\t\t\t\tthrow new ErrorNoTelemetry(`Cannot get default system shell when there is no backend for remote authority '${remoteAuthority}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn backend.getDefaultSystemShell(platform);\n\t\t\t\t},\n\t\t\t\tgetEnvironment: async (remoteAuthority) => {\n\t\t\t\t\tconst backend = await terminalInstanceService.getBackend(remoteAuthority);\n\t\t\t\t\tif (!backend) {\n\t\t\t\t\t\tthrow new ErrorNoTelemetry(`Cannot get environment when there is no backend for remote authority '${remoteAuthority}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn backend.getEnvironment();\n\t\t\t\t}\n\t\t\t},\n\t\t\tconfigurationService,\n\t\t\tconfigurationResolverService,\n\t\t\thistoryService,\n\t\t\tlogService,\n\t\t\tterminalProfileService,\n\t\t\tworkspaceContextService,\n\t\t\tremoteAgentService\n\t\t);\n\t}\n}\n"]}