{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminal/common/remote/remoteTerminalChannel.ts"],"names":[],"mappings":"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","file":"remoteTerminalChannel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWorkbenchConfigurationService } from 'vs/workbench/services/configuration/common/configuration';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { serializeEnvironmentDescriptionMap, serializeEnvironmentVariableCollection } from 'vs/platform/terminal/common/environmentVariableShared';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { SideBySideEditor, EditorResourceAccessor } from 'vs/workbench/common/editor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { Schemas } from 'vs/base/common/network';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IEnvironmentVariableService } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { IProcessDataEvent, IRequestResolveVariablesEvent, IShellLaunchConfigDto, ITerminalLaunchError, ITerminalProfile, ITerminalsLayoutInfo, ITerminalsLayoutInfoById, TerminalIcon, IProcessProperty, ProcessPropertyType, IProcessPropertyMap, TitleEventSource, ISerializedTerminalState, IPtyHostController, ITerminalProcessOptions, IProcessReadyEvent, ITerminalLogService, IPtyHostLatencyMeasurement } from 'vs/platform/terminal/common/terminal';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { IProcessEnvironment, OperatingSystem } from 'vs/base/common/platform';\nimport { ICompleteTerminalConfiguration } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IPtyHostProcessReplayEvent } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { ISerializableEnvironmentDescriptionMap as ISerializableEnvironmentDescriptionMap, ISerializableEnvironmentVariableCollection } from 'vs/platform/terminal/common/environmentVariable';\nimport type * as performance from 'vs/base/common/performance';\nimport { RemoteTerminalChannelEvent, RemoteTerminalChannelRequest } from 'vs/workbench/contrib/terminal/common/remote/terminal';\n\nexport const REMOTE_TERMINAL_CHANNEL_NAME = 'remoteterminal';\n\nexport type ITerminalEnvironmentVariableCollections = [string, ISerializableEnvironmentVariableCollection, ISerializableEnvironmentDescriptionMap][];\n\nexport interface IWorkspaceFolderData {\n\turi: UriComponents;\n\tname: string;\n\tindex: number;\n}\n\nexport interface ICreateTerminalProcessArguments {\n\tconfiguration: ICompleteTerminalConfiguration;\n\tresolvedVariables: { [name: string]: string };\n\tenvVariableCollections: ITerminalEnvironmentVariableCollections;\n\tshellLaunchConfig: IShellLaunchConfigDto;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tworkspaceFolders: IWorkspaceFolderData[];\n\tactiveWorkspaceFolder: IWorkspaceFolderData | null;\n\tactiveFileResource: UriComponents | undefined;\n\tshouldPersistTerminal: boolean;\n\toptions: ITerminalProcessOptions;\n\tcols: number;\n\trows: number;\n\tunicodeVersion: '6' | '11';\n\tresolverEnv: { [key: string]: string | null } | undefined;\n}\n\nexport interface ICreateTerminalProcessResult {\n\tpersistentTerminalId: number;\n\tresolvedShellLaunchConfig: IShellLaunchConfigDto;\n}\n\nexport class RemoteTerminalChannelClient implements IPtyHostController {\n\tget onPtyHostExit(): Event<number> {\n\t\treturn this._channel.listen<number>(RemoteTerminalChannelEvent.OnPtyHostExitEvent);\n\t}\n\tget onPtyHostStart(): Event<void> {\n\t\treturn this._channel.listen<void>(RemoteTerminalChannelEvent.OnPtyHostStartEvent);\n\t}\n\tget onPtyHostUnresponsive(): Event<void> {\n\t\treturn this._channel.listen<void>(RemoteTerminalChannelEvent.OnPtyHostUnresponsiveEvent);\n\t}\n\tget onPtyHostResponsive(): Event<void> {\n\t\treturn this._channel.listen<void>(RemoteTerminalChannelEvent.OnPtyHostResponsiveEvent);\n\t}\n\tget onPtyHostRequestResolveVariables(): Event<IRequestResolveVariablesEvent> {\n\t\treturn this._channel.listen<IRequestResolveVariablesEvent>(RemoteTerminalChannelEvent.OnPtyHostRequestResolveVariablesEvent);\n\t}\n\tget onProcessData(): Event<{ id: number; event: IProcessDataEvent | string }> {\n\t\treturn this._channel.listen<{ id: number; event: IProcessDataEvent | string }>(RemoteTerminalChannelEvent.OnProcessDataEvent);\n\t}\n\tget onProcessExit(): Event<{ id: number; event: number | undefined }> {\n\t\treturn this._channel.listen<{ id: number; event: number | undefined }>(RemoteTerminalChannelEvent.OnProcessExitEvent);\n\t}\n\tget onProcessReady(): Event<{ id: number; event: IProcessReadyEvent }> {\n\t\treturn this._channel.listen<{ id: number; event: IProcessReadyEvent }>(RemoteTerminalChannelEvent.OnProcessReadyEvent);\n\t}\n\tget onProcessReplay(): Event<{ id: number; event: IPtyHostProcessReplayEvent }> {\n\t\treturn this._channel.listen<{ id: number; event: IPtyHostProcessReplayEvent }>(RemoteTerminalChannelEvent.OnProcessReplayEvent);\n\t}\n\tget onProcessOrphanQuestion(): Event<{ id: number }> {\n\t\treturn this._channel.listen<{ id: number }>(RemoteTerminalChannelEvent.OnProcessOrphanQuestion);\n\t}\n\tget onExecuteCommand(): Event<{ reqId: number; persistentProcessId: number; commandId: string; commandArgs: any[] }> {\n\t\treturn this._channel.listen<{ reqId: number; persistentProcessId: number; commandId: string; commandArgs: any[] }>(RemoteTerminalChannelEvent.OnExecuteCommand);\n\t}\n\tget onDidRequestDetach(): Event<{ requestId: number; workspaceId: string; instanceId: number }> {\n\t\treturn this._channel.listen<{ requestId: number; workspaceId: string; instanceId: number }>(RemoteTerminalChannelEvent.OnDidRequestDetach);\n\t}\n\tget onDidChangeProperty(): Event<{ id: number; property: IProcessProperty<any> }> {\n\t\treturn this._channel.listen<{ id: number; property: IProcessProperty<any> }>(RemoteTerminalChannelEvent.OnDidChangeProperty);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _remoteAuthority: string,\n\t\tprivate readonly _channel: IChannel,\n\t\t@IWorkbenchConfigurationService private readonly _configurationService: IWorkbenchConfigurationService,\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService,\n\t\t@IConfigurationResolverService private readonly _resolverService: IConfigurationResolverService,\n\t\t@IEnvironmentVariableService private readonly _environmentVariableService: IEnvironmentVariableService,\n\t\t@IRemoteAuthorityResolverService private readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ITerminalLogService private readonly _logService: ITerminalLogService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t) { }\n\n\trestartPtyHost(): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.RestartPtyHost, []);\n\t}\n\n\tasync createProcess(\n\t\tshellLaunchConfig: IShellLaunchConfigDto,\n\t\tconfiguration: ICompleteTerminalConfiguration,\n\t\tactiveWorkspaceRootUri: URI | undefined,\n\t\toptions: ITerminalProcessOptions,\n\t\tshouldPersistTerminal: boolean,\n\t\tcols: number,\n\t\trows: number,\n\t\tunicodeVersion: '6' | '11'\n\t): Promise<ICreateTerminalProcessResult> {\n\t\t// Be sure to first wait for the remote configuration\n\t\tawait this._configurationService.whenRemoteConfigurationLoaded();\n\n\t\t// We will use the resolver service to resolve all the variables in the config / launch config\n\t\t// But then we will keep only some variables, since the rest need to be resolved on the remote side\n\t\tconst resolvedVariables = Object.create(null);\n\t\tconst lastActiveWorkspace = activeWorkspaceRootUri ? this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri) ?? undefined : undefined;\n\t\tlet allResolvedVariables: Map<string, string> | undefined = undefined;\n\t\ttry {\n\t\t\tallResolvedVariables = (await this._resolverService.resolveAnyMap(lastActiveWorkspace, {\n\t\t\t\tshellLaunchConfig,\n\t\t\t\tconfiguration\n\t\t\t})).resolvedVariables;\n\t\t} catch (err) {\n\t\t\tthis._logService.error(err);\n\t\t}\n\t\tif (allResolvedVariables) {\n\t\t\tfor (const [name, value] of allResolvedVariables.entries()) {\n\t\t\t\tif (/^config:/.test(name) || name === 'selectedText' || name === 'lineNumber') {\n\t\t\t\t\tresolvedVariables[name] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst envVariableCollections: ITerminalEnvironmentVariableCollections = [];\n\t\tfor (const [k, v] of this._environmentVariableService.collections.entries()) {\n\t\t\tenvVariableCollections.push([k, serializeEnvironmentVariableCollection(v.map), serializeEnvironmentDescriptionMap(v.descriptionMap)]);\n\t\t}\n\n\t\tconst resolverResult = await this._remoteAuthorityResolverService.resolveAuthority(this._remoteAuthority);\n\t\tconst resolverEnv = resolverResult.options && resolverResult.options.extensionHostEnv;\n\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst workspaceFolders = workspace.folders;\n\t\tconst activeWorkspaceFolder = activeWorkspaceRootUri ? this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri) : null;\n\n\t\tconst activeFileResource = EditorResourceAccessor.getOriginalUri(this._editorService.activeEditor, {\n\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t\tfilterByScheme: [Schemas.file, Schemas.vscodeUserData, Schemas.vscodeRemote]\n\t\t});\n\n\t\tconst args: ICreateTerminalProcessArguments = {\n\t\t\tconfiguration,\n\t\t\tresolvedVariables,\n\t\t\tenvVariableCollections,\n\t\t\tshellLaunchConfig,\n\t\t\tworkspaceId: workspace.id,\n\t\t\tworkspaceName: this._labelService.getWorkspaceLabel(workspace),\n\t\t\tworkspaceFolders,\n\t\t\tactiveWorkspaceFolder,\n\t\t\tactiveFileResource,\n\t\t\tshouldPersistTerminal,\n\t\t\toptions,\n\t\t\tcols,\n\t\t\trows,\n\t\t\tunicodeVersion,\n\t\t\tresolverEnv\n\t\t};\n\t\treturn await this._channel.call<ICreateTerminalProcessResult>(RemoteTerminalChannelRequest.CreateProcess, args);\n\t}\n\n\trequestDetachInstance(workspaceId: string, instanceId: number): Promise<IProcessDetails | undefined> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.RequestDetachInstance, [workspaceId, instanceId]);\n\t}\n\tacceptDetachInstanceReply(requestId: number, persistentProcessId: number): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.AcceptDetachInstanceReply, [requestId, persistentProcessId]);\n\t}\n\tattachToProcess(id: number): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.AttachToProcess, [id]);\n\t}\n\tdetachFromProcess(id: number, forcePersist?: boolean): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.DetachFromProcess, [id, forcePersist]);\n\t}\n\tlistProcesses(): Promise<IProcessDetails[]> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.ListProcesses);\n\t}\n\tgetLatency(): Promise<IPtyHostLatencyMeasurement[]> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetLatency);\n\t}\n\tgetPerformanceMarks(): Promise<performance.PerformanceMark[]> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetPerformanceMarks);\n\t}\n\treduceConnectionGraceTime(): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.ReduceConnectionGraceTime);\n\t}\n\tprocessBinary(id: number, data: string): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.ProcessBinary, [id, data]);\n\t}\n\tstart(id: number): Promise<ITerminalLaunchError | { injectedArgs: string[] } | undefined> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.Start, [id]);\n\t}\n\tinput(id: number, data: string): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.Input, [id, data]);\n\t}\n\tacknowledgeDataEvent(id: number, charCount: number): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.AcknowledgeDataEvent, [id, charCount]);\n\t}\n\tsetUnicodeVersion(id: number, version: '6' | '11'): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.SetUnicodeVersion, [id, version]);\n\t}\n\tshutdown(id: number, immediate: boolean): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.Shutdown, [id, immediate]);\n\t}\n\tresize(id: number, cols: number, rows: number): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.Resize, [id, cols, rows]);\n\t}\n\tclearBuffer(id: number): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.ClearBuffer, [id]);\n\t}\n\tgetInitialCwd(id: number): Promise<string> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetInitialCwd, [id]);\n\t}\n\tgetCwd(id: number): Promise<string> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetCwd, [id]);\n\t}\n\torphanQuestionReply(id: number): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.OrphanQuestionReply, [id]);\n\t}\n\tsendCommandResult(reqId: number, isError: boolean, payload: any): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.SendCommandResult, [reqId, isError, payload]);\n\t}\n\tfreePortKillProcess(port: string): Promise<{ port: string; processId: string }> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.FreePortKillProcess, [port]);\n\t}\n\tinstallAutoReply(match: string, reply: string): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.InstallAutoReply, [match, reply]);\n\t}\n\tuninstallAllAutoReplies(): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.UninstallAllAutoReplies, []);\n\t}\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetDefaultSystemShell, [osOverride]);\n\t}\n\tgetProfiles(profiles: unknown, defaultProfile: unknown, includeDetectedProfiles?: boolean): Promise<ITerminalProfile[]> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetProfiles, [this._workspaceContextService.getWorkspace().id, profiles, defaultProfile, includeDetectedProfiles]);\n\t}\n\tacceptPtyHostResolvedVariables(requestId: number, resolved: string[]): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.AcceptPtyHostResolvedVariables, [requestId, resolved]);\n\t}\n\n\tgetEnvironment(): Promise<IProcessEnvironment> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetEnvironment);\n\t}\n\n\tgetWslPath(original: string, direction: 'unix-to-win' | 'win-to-unix'): Promise<string> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetWslPath, [original, direction]);\n\t}\n\n\tsetTerminalLayoutInfo(layout?: ITerminalsLayoutInfoById): Promise<void> {\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst args: ISetTerminalLayoutInfoArgs = {\n\t\t\tworkspaceId: workspace.id,\n\t\t\ttabs: layout ? layout.tabs : []\n\t\t};\n\t\treturn this._channel.call<void>(RemoteTerminalChannelRequest.SetTerminalLayoutInfo, args);\n\t}\n\n\tupdateTitle(id: number, title: string, titleSource: TitleEventSource): Promise<string> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.UpdateTitle, [id, title, titleSource]);\n\t}\n\n\tupdateIcon(id: number, userInitiated: boolean, icon: TerminalIcon, color?: string): Promise<string> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.UpdateIcon, [id, userInitiated, icon, color]);\n\t}\n\n\trefreshProperty<T extends ProcessPropertyType>(id: number, property: T): Promise<IProcessPropertyMap[T]> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.RefreshProperty, [id, property]);\n\t}\n\n\tupdateProperty<T extends ProcessPropertyType>(id: number, property: T, value: IProcessPropertyMap[T]): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.UpdateProperty, [id, property, value]);\n\t}\n\n\tgetTerminalLayoutInfo(): Promise<ITerminalsLayoutInfo | undefined> {\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst args: IGetTerminalLayoutInfoArgs = {\n\t\t\tworkspaceId: workspace.id,\n\t\t};\n\t\treturn this._channel.call<ITerminalsLayoutInfo>(RemoteTerminalChannelRequest.GetTerminalLayoutInfo, args);\n\t}\n\n\treviveTerminalProcesses(workspaceId: string, state: ISerializedTerminalState[], dateTimeFormatLocate: string): Promise<void> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.ReviveTerminalProcesses, [workspaceId, state, dateTimeFormatLocate]);\n\t}\n\n\tgetRevivedPtyNewId(id: number): Promise<number | undefined> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.GetRevivedPtyNewId, [id]);\n\t}\n\n\tserializeTerminalState(ids: number[]): Promise<string> {\n\t\treturn this._channel.call(RemoteTerminalChannelRequest.SerializeTerminalState, [ids]);\n\t}\n}\n"]}