{"version":3,"sources":["vs/workbench/contrib/terminal/common/terminal.ts"],"names":[],"mappings":"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","file":"terminal.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport { IProcessEnvironment, OperatingSystem } from 'vs/base/common/platform';\nimport Severity from 'vs/base/common/severity';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { URI } from 'vs/base/common/uri';\nimport * as nls from 'vs/nls';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ISerializedCommandDetectionCapability, ITerminalCapabilityStore } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { IMergedEnvironmentVariableCollection } from 'vs/platform/terminal/common/environmentVariable';\nimport { ICreateContributedTerminalProfileOptions, IExtensionTerminalProfile, IFixedTerminalDimensions, IProcessDataEvent, IProcessProperty, IProcessPropertyMap, IProcessReadyEvent, IProcessReadyWindowsPty, IShellLaunchConfig, ITerminalBackend, ITerminalContributions, ITerminalEnvironment, ITerminalLaunchError, ITerminalProfile, ITerminalProfileObject, ProcessPropertyType, TerminalIcon, TerminalLocationString, TitleEventSource } from 'vs/platform/terminal/common/terminal';\nimport { AccessibilityCommandId } from 'vs/workbench/contrib/accessibility/common/accessibilityCommands';\nimport { IEnvironmentVariableInfo } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { IExtensionPointDescriptor } from 'vs/workbench/services/extensions/common/extensionsRegistry';\n\nexport const TERMINAL_VIEW_ID = 'terminal';\n\nexport const TERMINAL_CREATION_COMMANDS = ['workbench.action.terminal.toggleTerminal', 'workbench.action.terminal.new', 'workbench.action.togglePanel', 'workbench.action.terminal.focus'];\n\nexport const TERMINAL_CONFIG_SECTION = 'terminal.integrated';\n\nexport const DEFAULT_LETTER_SPACING = 0;\nexport const MINIMUM_LETTER_SPACING = -5;\nexport const DEFAULT_LINE_HEIGHT = 1;\n\nexport const MINIMUM_FONT_WEIGHT = 1;\nexport const MAXIMUM_FONT_WEIGHT = 1000;\nexport const DEFAULT_FONT_WEIGHT = 'normal';\nexport const DEFAULT_BOLD_FONT_WEIGHT = 'bold';\nexport const SUGGESTIONS_FONT_WEIGHT = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport const ITerminalProfileResolverService = createDecorator<ITerminalProfileResolverService>('terminalProfileResolverService');\nexport interface ITerminalProfileResolverService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly defaultProfileName: string | undefined;\n\n\t/**\n\t * Resolves the icon of a shell launch config if this will use the default profile\n\t */\n\tresolveIcon(shellLaunchConfig: IShellLaunchConfig, os: OperatingSystem): void;\n\tresolveShellLaunchConfig(shellLaunchConfig: IShellLaunchConfig, options: IShellLaunchConfigResolveOptions): Promise<void>;\n\tgetDefaultProfile(options: IShellLaunchConfigResolveOptions): Promise<ITerminalProfile>;\n\tgetDefaultShell(options: IShellLaunchConfigResolveOptions): Promise<string>;\n\tgetDefaultShellArgs(options: IShellLaunchConfigResolveOptions): Promise<string | string[]>;\n\tgetDefaultIcon(): TerminalIcon & ThemeIcon;\n\tgetEnvironment(remoteAuthority: string | undefined): Promise<IProcessEnvironment>;\n\tcreateProfileFromShellAndShellArgs(shell?: unknown, shellArgs?: unknown): Promise<ITerminalProfile | string>;\n}\n\n/*\n * When there were shell integration args injected\n * and createProcess returns an error, this exit code will be used.\n */\nexport const ShellIntegrationExitCode = 633;\n\nexport interface IRegisterContributedProfileArgs {\n\textensionIdentifier: string; id: string; title: string; options: ICreateContributedTerminalProfileOptions;\n}\n\nexport const ITerminalProfileService = createDecorator<ITerminalProfileService>('terminalProfileService');\nexport interface ITerminalProfileService {\n\treadonly _serviceBrand: undefined;\n\treadonly availableProfiles: ITerminalProfile[];\n\treadonly contributedProfiles: IExtensionTerminalProfile[];\n\treadonly profilesReady: Promise<void>;\n\tgetPlatformKey(): Promise<string>;\n\trefreshAvailableProfiles(): void;\n\tgetDefaultProfileName(): string | undefined;\n\tgetDefaultProfile(os?: OperatingSystem): ITerminalProfile | undefined;\n\tonDidChangeAvailableProfiles: Event<ITerminalProfile[]>;\n\tgetContributedDefaultProfile(shellLaunchConfig: IShellLaunchConfig): Promise<IExtensionTerminalProfile | undefined>;\n\tregisterContributedProfile(args: IRegisterContributedProfileArgs): Promise<void>;\n\tgetContributedProfileProvider(extensionIdentifier: string, id: string): ITerminalProfileProvider | undefined;\n\tregisterTerminalProfileProvider(extensionIdentifier: string, id: string, profileProvider: ITerminalProfileProvider): IDisposable;\n}\n\nexport interface ITerminalProfileProvider {\n\tcreateContributedTerminalProfile(options: ICreateContributedTerminalProfileOptions): Promise<void>;\n}\n\nexport interface IShellLaunchConfigResolveOptions {\n\tremoteAuthority: string | undefined;\n\tos: OperatingSystem;\n\tallowAutomationShell?: boolean;\n}\n\nexport type FontWeight = 'normal' | 'bold' | number;\n\nexport interface ITerminalProfiles {\n\tlinux: { [key: string]: ITerminalProfileObject };\n\tosx: { [key: string]: ITerminalProfileObject };\n\twindows: { [key: string]: ITerminalProfileObject };\n}\n\nexport type ConfirmOnKill = 'never' | 'always' | 'editor' | 'panel';\nexport type ConfirmOnExit = 'never' | 'always' | 'hasChildProcesses';\n\nexport interface ICompleteTerminalConfiguration {\n\t'terminal.integrated.env.windows': ITerminalEnvironment;\n\t'terminal.integrated.env.osx': ITerminalEnvironment;\n\t'terminal.integrated.env.linux': ITerminalEnvironment;\n\t'terminal.integrated.cwd': string;\n\t'terminal.integrated.detectLocale': 'auto' | 'off' | 'on';\n}\n\nexport interface ITerminalConfiguration {\n\tshell: {\n\t\tlinux: string | null;\n\t\tosx: string | null;\n\t\twindows: string | null;\n\t};\n\tautomationShell: {\n\t\tlinux: string | null;\n\t\tosx: string | null;\n\t\twindows: string | null;\n\t};\n\tshellArgs: {\n\t\tlinux: string[];\n\t\tosx: string[];\n\t\twindows: string[];\n\t};\n\tprofiles: ITerminalProfiles;\n\tdefaultProfile: {\n\t\tlinux: string | null;\n\t\tosx: string | null;\n\t\twindows: string | null;\n\t};\n\tuseWslProfiles: boolean;\n\taltClickMovesCursor: boolean;\n\tmacOptionIsMeta: boolean;\n\tmacOptionClickForcesSelection: boolean;\n\tgpuAcceleration: 'auto' | 'on' | 'canvas' | 'off';\n\trightClickBehavior: 'default' | 'copyPaste' | 'paste' | 'selectWord' | 'nothing';\n\tcursorBlinking: boolean;\n\tcursorStyle: 'block' | 'underline' | 'line';\n\tcursorStyleInactive: 'outline' | 'block' | 'underline' | 'line' | 'none';\n\tcursorWidth: number;\n\tdrawBoldTextInBrightColors: boolean;\n\tfastScrollSensitivity: number;\n\tfontFamily: string;\n\tfontWeight: FontWeight;\n\tfontWeightBold: FontWeight;\n\tminimumContrastRatio: number;\n\tmouseWheelScrollSensitivity: number;\n\ttabStopWidth: number;\n\tsendKeybindingsToShell: boolean;\n\t// fontLigatures: boolean;\n\tfontSize: number;\n\tletterSpacing: number;\n\tlineHeight: number;\n\tdetectLocale: 'auto' | 'off' | 'on';\n\tscrollback: number;\n\tcommandsToSkipShell: string[];\n\tallowChords: boolean;\n\tallowMnemonics: boolean;\n\tcwd: string;\n\tconfirmOnExit: ConfirmOnExit;\n\tconfirmOnKill: ConfirmOnKill;\n\tenableBell: boolean;\n\tenv: {\n\t\tlinux: { [key: string]: string };\n\t\tosx: { [key: string]: string };\n\t\twindows: { [key: string]: string };\n\t};\n\tenvironmentChangesIndicator: 'off' | 'on' | 'warnonly';\n\tenvironmentChangesRelaunch: boolean;\n\tshowExitAlert: boolean;\n\tsplitCwd: 'workspaceRoot' | 'initial' | 'inherited';\n\twindowsEnableConpty: boolean;\n\twordSeparators: string;\n\tenableFileLinks: 'off' | 'on' | 'notRemote';\n\tunicodeVersion: '6' | '11';\n\tlocalEchoLatencyThreshold: number;\n\tlocalEchoExcludePrograms: ReadonlyArray<string>;\n\tlocalEchoEnabled: 'auto' | 'on' | 'off';\n\tlocalEchoStyle: 'bold' | 'dim' | 'italic' | 'underlined' | 'inverted' | string;\n\tenablePersistentSessions: boolean;\n\ttabs: {\n\t\tenabled: boolean;\n\t\thideCondition: 'never' | 'singleTerminal' | 'singleGroup';\n\t\tshowActiveTerminal: 'always' | 'singleTerminal' | 'singleTerminalOrNarrow' | 'singleGroup' | 'never';\n\t\tlocation: 'left' | 'right';\n\t\tfocusMode: 'singleClick' | 'doubleClick';\n\t\ttitle: string;\n\t\tdescription: string;\n\t\tseparator: string;\n\t};\n\tbellDuration: number;\n\tdefaultLocation: TerminalLocationString;\n\tcustomGlyphs: boolean;\n\tpersistentSessionReviveProcess: 'onExit' | 'onExitAndWindowClose' | 'never';\n\tignoreProcessNames: string[];\n\tautoReplies: { [key: string]: string };\n\tshellIntegration?: {\n\t\tenabled: boolean;\n\t\tdecorationsEnabled: boolean;\n\t};\n\tenableImages: boolean;\n\tsmoothScrolling: boolean;\n\tignoreBracketedPasteMode: boolean;\n}\n\nexport const DEFAULT_LOCAL_ECHO_EXCLUDE: ReadonlyArray<string> = ['vim', 'vi', 'nano', 'tmux'];\n\nexport interface ITerminalConfigHelper {\n\tconfig: ITerminalConfiguration;\n\n\tconfigFontIsMonospace(): boolean;\n\tgetFont(): ITerminalFont;\n\tshowRecommendations(shellLaunchConfig: IShellLaunchConfig): void;\n}\n\nexport interface ITerminalFont {\n\tfontFamily: string;\n\tfontSize: number;\n\tletterSpacing: number;\n\tlineHeight: number;\n\tcharWidth?: number;\n\tcharHeight?: number;\n}\n\nexport interface IRemoteTerminalAttachTarget {\n\tid: number;\n\tpid: number;\n\ttitle: string;\n\ttitleSource: TitleEventSource;\n\tcwd: string;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tisOrphan: boolean;\n\ticon: URI | { light: URI; dark: URI } | { id: string; color?: { id: string } } | undefined;\n\tcolor: string | undefined;\n\tfixedDimensions: IFixedTerminalDimensions | undefined;\n\tshellIntegrationNonce: string;\n}\n\nexport interface IBeforeProcessDataEvent {\n\t/**\n\t * The data of the event, this can be modified by the event listener to change what gets sent\n\t * to the terminal.\n\t */\n\tdata: string;\n}\n\nexport interface IDefaultShellAndArgsRequest {\n\tuseAutomationShell: boolean;\n\tcallback: (shell: string, args: string[] | string | undefined) => void;\n}\n\n/** Read-only process information that can apply to detached terminals. */\nexport interface ITerminalProcessInfo {\n\treadonly processState: ProcessState;\n\treadonly ptyProcessReady: Promise<void>;\n\treadonly shellProcessId: number | undefined;\n\treadonly remoteAuthority: string | undefined;\n\treadonly os: OperatingSystem | undefined;\n\treadonly userHome: string | undefined;\n\treadonly initialCwd: string;\n\treadonly environmentVariableInfo: IEnvironmentVariableInfo | undefined;\n\treadonly persistentProcessId: number | undefined;\n\treadonly shouldPersist: boolean;\n\treadonly hasWrittenData: boolean;\n\treadonly hasChildProcesses: boolean;\n\treadonly backend: ITerminalBackend | undefined;\n\treadonly capabilities: ITerminalCapabilityStore;\n\treadonly shellIntegrationNonce: string;\n\treadonly extEnvironmentVariableCollection: IMergedEnvironmentVariableCollection | undefined;\n}\n\nexport const isTerminalProcessManager = (t: ITerminalProcessInfo | ITerminalProcessManager): t is ITerminalProcessManager => typeof (t as ITerminalProcessManager).write === 'function';\n\nexport interface ITerminalProcessManager extends IDisposable, ITerminalProcessInfo {\n\treadonly onPtyDisconnect: Event<void>;\n\treadonly onPtyReconnect: Event<void>;\n\n\treadonly onProcessReady: Event<IProcessReadyEvent>;\n\treadonly onBeforeProcessData: Event<IBeforeProcessDataEvent>;\n\treadonly onProcessData: Event<IProcessDataEvent>;\n\treadonly onProcessReplayComplete: Event<void>;\n\treadonly onEnvironmentVariableInfoChanged: Event<IEnvironmentVariableInfo>;\n\treadonly onDidChangeProperty: Event<IProcessProperty<any>>;\n\treadonly onProcessExit: Event<number | undefined>;\n\treadonly onRestoreCommands: Event<ISerializedCommandDetectionCapability>;\n\n\tdispose(immediate?: boolean): void;\n\tdetachFromProcess(forcePersist?: boolean): Promise<void>;\n\tcreateProcess(shellLaunchConfig: IShellLaunchConfig, cols: number, rows: number): Promise<ITerminalLaunchError | { injectedArgs: string[] } | undefined>;\n\trelaunch(shellLaunchConfig: IShellLaunchConfig, cols: number, rows: number, reset: boolean): Promise<ITerminalLaunchError | { injectedArgs: string[] } | undefined>;\n\twrite(data: string): Promise<void>;\n\tsetDimensions(cols: number, rows: number): Promise<void>;\n\tsetDimensions(cols: number, rows: number, sync: false): Promise<void>;\n\tsetDimensions(cols: number, rows: number, sync: true): void;\n\tclearBuffer(): Promise<void>;\n\tsetUnicodeVersion(version: '6' | '11'): Promise<void>;\n\tacknowledgeDataEvent(charCount: number): void;\n\tprocessBinary(data: string): void;\n\n\trefreshProperty<T extends ProcessPropertyType>(type: T): Promise<IProcessPropertyMap[T]>;\n\tupdateProperty<T extends ProcessPropertyType>(property: T, value: IProcessPropertyMap[T]): Promise<void>;\n\tgetBackendOS(): Promise<OperatingSystem>;\n\tfreePortKillProcess(port: string): Promise<void>;\n}\n\nexport const enum ProcessState {\n\t// The process has not been initialized yet.\n\tUninitialized = 1,\n\t// The process is currently launching, the process is marked as launching\n\t// for a short duration after being created and is helpful to indicate\n\t// whether the process died as a result of bad shell and args.\n\tLaunching = 2,\n\t// The process is running normally.\n\tRunning = 3,\n\t// The process was killed during launch, likely as a result of bad shell and\n\t// args.\n\tKilledDuringLaunch = 4,\n\t// The process was killed by the user (the event originated from VS Code).\n\tKilledByUser = 5,\n\t// The process was killed by itself, for example the shell crashed or `exit`\n\t// was run.\n\tKilledByProcess = 6\n}\n\nexport interface ITerminalProcessExtHostProxy extends IDisposable {\n\treadonly instanceId: number;\n\n\temitData(data: string): void;\n\temitProcessProperty(property: IProcessProperty<any>): void;\n\temitReady(pid: number, cwd: string, windowsPty: IProcessReadyWindowsPty | undefined): void;\n\temitExit(exitCode: number | undefined): void;\n\n\tonInput: Event<string>;\n\tonBinary: Event<string>;\n\tonResize: Event<{ cols: number; rows: number }>;\n\tonAcknowledgeDataEvent: Event<number>;\n\tonShutdown: Event<boolean>;\n\tonRequestInitialCwd: Event<void>;\n\tonRequestCwd: Event<void>;\n}\n\nexport interface IStartExtensionTerminalRequest {\n\tproxy: ITerminalProcessExtHostProxy;\n\tcols: number;\n\trows: number;\n\tcallback: (error: ITerminalLaunchError | undefined) => void;\n}\n\nexport interface ITerminalStatus {\n\t/** An internal string ID used to identify the status. */\n\tid: string;\n\t/**\n\t * The severity of the status, this defines both the color and how likely the status is to be\n\t * the \"primary status\".\n\t */\n\tseverity: Severity;\n\t/**\n\t * An icon representing the status, if this is not specified it will not show up on the terminal\n\t * tab and will use the generic `info` icon when hovering.\n\t */\n\ticon?: ThemeIcon;\n\t/**\n\t * What to show for this status in the terminal's hover.\n\t */\n\ttooltip?: string | undefined;\n\t/**\n\t * Actions to expose on hover.\n\t */\n\thoverActions?: ITerminalStatusHoverAction[];\n}\n\nexport interface ITerminalStatusHoverAction {\n\tlabel: string;\n\tcommandId: string;\n\trun: () => void;\n}\n\n/**\n * Context for actions taken on terminal instances.\n */\nexport interface ISerializedTerminalInstanceContext {\n\t$mid: MarshalledId.TerminalContext;\n\tinstanceId: number;\n}\n\nexport const QUICK_LAUNCH_PROFILE_CHOICE = 'workbench.action.terminal.profile.choice';\n\nexport const enum TerminalCommandId {\n\tFindNext = 'workbench.action.terminal.findNext',\n\tFindPrevious = 'workbench.action.terminal.findPrevious',\n\tToggle = 'workbench.action.terminal.toggleTerminal',\n\tKill = 'workbench.action.terminal.kill',\n\tKillViewOrEditor = 'workbench.action.terminal.killViewOrEditor',\n\tKillEditor = 'workbench.action.terminal.killEditor',\n\tKillActiveTab = 'workbench.action.terminal.killActiveTab',\n\tKillAll = 'workbench.action.terminal.killAll',\n\tQuickKill = 'workbench.action.terminal.quickKill',\n\tConfigureTerminalSettings = 'workbench.action.terminal.openSettings',\n\tOpenDetectedLink = 'workbench.action.terminal.openDetectedLink',\n\tOpenWordLink = 'workbench.action.terminal.openWordLink',\n\tShellIntegrationLearnMore = 'workbench.action.terminal.learnMore',\n\tOpenFileLink = 'workbench.action.terminal.openFileLink',\n\tOpenWebLink = 'workbench.action.terminal.openUrlLink',\n\tRunRecentCommand = 'workbench.action.terminal.runRecentCommand',\n\tFocusAccessibleBuffer = 'workbench.action.terminal.focusAccessibleBuffer',\n\tAccessibleBufferGoToNextCommand = 'workbench.action.terminal.accessibleBufferGoToNextCommand',\n\tAccessibleBufferGoToPreviousCommand = 'workbench.action.terminal.accessibleBufferGoToPreviousCommand',\n\tCopyLastCommandOutput = 'workbench.action.terminal.copyLastCommandOutput',\n\tGoToRecentDirectory = 'workbench.action.terminal.goToRecentDirectory',\n\tCopyAndClearSelection = 'workbench.action.terminal.copyAndClearSelection',\n\tCopySelection = 'workbench.action.terminal.copySelection',\n\tCopySelectionAsHtml = 'workbench.action.terminal.copySelectionAsHtml',\n\tSelectAll = 'workbench.action.terminal.selectAll',\n\tDeleteWordLeft = 'workbench.action.terminal.deleteWordLeft',\n\tDeleteWordRight = 'workbench.action.terminal.deleteWordRight',\n\tDeleteToLineStart = 'workbench.action.terminal.deleteToLineStart',\n\tMoveToLineStart = 'workbench.action.terminal.moveToLineStart',\n\tMoveToLineEnd = 'workbench.action.terminal.moveToLineEnd',\n\tNew = 'workbench.action.terminal.new',\n\tNewWithCwd = 'workbench.action.terminal.newWithCwd',\n\tNewLocal = 'workbench.action.terminal.newLocal',\n\tNewInActiveWorkspace = 'workbench.action.terminal.newInActiveWorkspace',\n\tNewWithProfile = 'workbench.action.terminal.newWithProfile',\n\tSplit = 'workbench.action.terminal.split',\n\tSplitActiveTab = 'workbench.action.terminal.splitActiveTab',\n\tSplitInActiveWorkspace = 'workbench.action.terminal.splitInActiveWorkspace',\n\tShowQuickFixes = 'workbench.action.terminal.showQuickFixes',\n\tUnsplit = 'workbench.action.terminal.unsplit',\n\tUnsplitActiveTab = 'workbench.action.terminal.unsplitActiveTab',\n\tJoinActiveTab = 'workbench.action.terminal.joinActiveTab',\n\tJoin = 'workbench.action.terminal.join',\n\tRelaunch = 'workbench.action.terminal.relaunch',\n\tFocusPreviousPane = 'workbench.action.terminal.focusPreviousPane',\n\tCreateTerminalEditor = 'workbench.action.createTerminalEditor',\n\tCreateTerminalEditorSameGroup = 'workbench.action.createTerminalEditorSameGroup',\n\tCreateTerminalEditorSide = 'workbench.action.createTerminalEditorSide',\n\tFocusTabs = 'workbench.action.terminal.focusTabs',\n\tFocusNextPane = 'workbench.action.terminal.focusNextPane',\n\tResizePaneLeft = 'workbench.action.terminal.resizePaneLeft',\n\tResizePaneRight = 'workbench.action.terminal.resizePaneRight',\n\tResizePaneUp = 'workbench.action.terminal.resizePaneUp',\n\tSizeToContentWidth = 'workbench.action.terminal.sizeToContentWidth',\n\tSizeToContentWidthActiveTab = 'workbench.action.terminal.sizeToContentWidthActiveTab',\n\tResizePaneDown = 'workbench.action.terminal.resizePaneDown',\n\tFocus = 'workbench.action.terminal.focus',\n\tFocusNext = 'workbench.action.terminal.focusNext',\n\tFocusPrevious = 'workbench.action.terminal.focusPrevious',\n\tPaste = 'workbench.action.terminal.paste',\n\tPasteSelection = 'workbench.action.terminal.pasteSelection',\n\tSelectDefaultProfile = 'workbench.action.terminal.selectDefaultShell',\n\tRunSelectedText = 'workbench.action.terminal.runSelectedText',\n\tRunActiveFile = 'workbench.action.terminal.runActiveFile',\n\tSwitchTerminal = 'workbench.action.terminal.switchTerminal',\n\tScrollDownLine = 'workbench.action.terminal.scrollDown',\n\tScrollDownPage = 'workbench.action.terminal.scrollDownPage',\n\tScrollToBottom = 'workbench.action.terminal.scrollToBottom',\n\tScrollUpLine = 'workbench.action.terminal.scrollUp',\n\tScrollUpPage = 'workbench.action.terminal.scrollUpPage',\n\tScrollToTop = 'workbench.action.terminal.scrollToTop',\n\tClear = 'workbench.action.terminal.clear',\n\tClearSelection = 'workbench.action.terminal.clearSelection',\n\tChangeIcon = 'workbench.action.terminal.changeIcon',\n\tChangeIconPanel = 'workbench.action.terminal.changeIconPanel',\n\tChangeIconActiveTab = 'workbench.action.terminal.changeIconActiveTab',\n\tChangeColor = 'workbench.action.terminal.changeColor',\n\tChangeColorPanel = 'workbench.action.terminal.changeColorPanel',\n\tChangeColorActiveTab = 'workbench.action.terminal.changeColorActiveTab',\n\tRename = 'workbench.action.terminal.rename',\n\tRenamePanel = 'workbench.action.terminal.renamePanel',\n\tRenameActiveTab = 'workbench.action.terminal.renameActiveTab',\n\tRenameWithArgs = 'workbench.action.terminal.renameWithArg',\n\tFindFocus = 'workbench.action.terminal.focusFind',\n\tFindHide = 'workbench.action.terminal.hideFind',\n\tQuickOpenTerm = 'workbench.action.quickOpenTerm',\n\tScrollToPreviousCommand = 'workbench.action.terminal.scrollToPreviousCommand',\n\tScrollToNextCommand = 'workbench.action.terminal.scrollToNextCommand',\n\tSelectToPreviousCommand = 'workbench.action.terminal.selectToPreviousCommand',\n\tSelectToNextCommand = 'workbench.action.terminal.selectToNextCommand',\n\tSelectToPreviousLine = 'workbench.action.terminal.selectToPreviousLine',\n\tSelectToNextLine = 'workbench.action.terminal.selectToNextLine',\n\tSendSequence = 'workbench.action.terminal.sendSequence',\n\tToggleFindRegex = 'workbench.action.terminal.toggleFindRegex',\n\tToggleFindWholeWord = 'workbench.action.terminal.toggleFindWholeWord',\n\tToggleFindCaseSensitive = 'workbench.action.terminal.toggleFindCaseSensitive',\n\tSearchWorkspace = 'workbench.action.terminal.searchWorkspace',\n\tAttachToSession = 'workbench.action.terminal.attachToSession',\n\tDetachSession = 'workbench.action.terminal.detachSession',\n\tMoveToEditor = 'workbench.action.terminal.moveToEditor',\n\tMoveToEditorActiveTab = 'workbench.action.terminal.moveToEditorActiveTab',\n\tMoveToTerminalPanel = 'workbench.action.terminal.moveToTerminalPanel',\n\tSetDimensions = 'workbench.action.terminal.setDimensions',\n\tClearPreviousSessionHistory = 'workbench.action.terminal.clearPreviousSessionHistory',\n\tSelectPrevSuggestion = 'workbench.action.terminal.selectPrevSuggestion',\n\tSelectPrevPageSuggestion = 'workbench.action.terminal.selectPrevPageSuggestion',\n\tSelectNextSuggestion = 'workbench.action.terminal.selectNextSuggestion',\n\tSelectNextPageSuggestion = 'workbench.action.terminal.selectNextPageSuggestion',\n\tAcceptSelectedSuggestion = 'workbench.action.terminal.acceptSelectedSuggestion',\n\tHideSuggestWidget = 'workbench.action.terminal.hideSuggestWidget',\n\tFocusHover = 'workbench.action.terminal.focusHover',\n\tShowEnvironmentContributions = 'workbench.action.terminal.showEnvironmentContributions',\n\n\t// Developer commands\n\n\tWriteDataToTerminal = 'workbench.action.terminal.writeDataToTerminal',\n\tShowTextureAtlas = 'workbench.action.terminal.showTextureAtlas',\n\tRestartPtyHost = 'workbench.action.terminal.restartPtyHost',\n}\n\nexport const DEFAULT_COMMANDS_TO_SKIP_SHELL: string[] = [\n\tTerminalCommandId.ClearSelection,\n\tTerminalCommandId.Clear,\n\tTerminalCommandId.CopyAndClearSelection,\n\tTerminalCommandId.CopySelection,\n\tTerminalCommandId.CopySelectionAsHtml,\n\tTerminalCommandId.CopyLastCommandOutput,\n\tTerminalCommandId.DeleteToLineStart,\n\tTerminalCommandId.DeleteWordLeft,\n\tTerminalCommandId.DeleteWordRight,\n\tTerminalCommandId.FindFocus,\n\tTerminalCommandId.FindHide,\n\tTerminalCommandId.FindNext,\n\tTerminalCommandId.FindPrevious,\n\tTerminalCommandId.GoToRecentDirectory,\n\tTerminalCommandId.ToggleFindRegex,\n\tTerminalCommandId.ToggleFindWholeWord,\n\tTerminalCommandId.ToggleFindCaseSensitive,\n\tTerminalCommandId.FocusNextPane,\n\tTerminalCommandId.FocusNext,\n\tTerminalCommandId.FocusPreviousPane,\n\tTerminalCommandId.FocusPrevious,\n\tTerminalCommandId.Focus,\n\tTerminalCommandId.SizeToContentWidth,\n\tTerminalCommandId.Kill,\n\tTerminalCommandId.KillEditor,\n\tTerminalCommandId.MoveToEditor,\n\tTerminalCommandId.MoveToLineEnd,\n\tTerminalCommandId.MoveToLineStart,\n\tTerminalCommandId.MoveToTerminalPanel,\n\tTerminalCommandId.NewInActiveWorkspace,\n\tTerminalCommandId.New,\n\tTerminalCommandId.Paste,\n\tTerminalCommandId.PasteSelection,\n\tTerminalCommandId.ResizePaneDown,\n\tTerminalCommandId.ResizePaneLeft,\n\tTerminalCommandId.ResizePaneRight,\n\tTerminalCommandId.ResizePaneUp,\n\tTerminalCommandId.RunActiveFile,\n\tTerminalCommandId.RunSelectedText,\n\tTerminalCommandId.RunRecentCommand,\n\tTerminalCommandId.ScrollDownLine,\n\tTerminalCommandId.ScrollDownPage,\n\tTerminalCommandId.ScrollToBottom,\n\tTerminalCommandId.ScrollToNextCommand,\n\tTerminalCommandId.ScrollToPreviousCommand,\n\tTerminalCommandId.ScrollToTop,\n\tTerminalCommandId.ScrollUpLine,\n\tTerminalCommandId.ScrollUpPage,\n\tTerminalCommandId.SendSequence,\n\tTerminalCommandId.SelectAll,\n\tTerminalCommandId.SelectToNextCommand,\n\tTerminalCommandId.SelectToNextLine,\n\tTerminalCommandId.SelectToPreviousCommand,\n\tTerminalCommandId.SelectToPreviousLine,\n\tTerminalCommandId.SplitInActiveWorkspace,\n\tTerminalCommandId.Split,\n\tTerminalCommandId.Toggle,\n\tTerminalCommandId.SelectPrevSuggestion,\n\tTerminalCommandId.SelectPrevPageSuggestion,\n\tTerminalCommandId.SelectNextSuggestion,\n\tTerminalCommandId.SelectNextPageSuggestion,\n\tTerminalCommandId.AcceptSelectedSuggestion,\n\tTerminalCommandId.HideSuggestWidget,\n\tTerminalCommandId.FocusHover,\n\tTerminalCommandId.FocusAccessibleBuffer,\n\tAccessibilityCommandId.OpenAccessibilityHelp,\n\t'editor.action.toggleTabFocusMode',\n\t'notifications.hideList',\n\t'notifications.hideToasts',\n\t'workbench.action.closeQuickOpen',\n\t'workbench.action.quickOpen',\n\t'workbench.action.quickOpenPreviousEditor',\n\t'workbench.action.showCommands',\n\t'workbench.action.tasks.build',\n\t'workbench.action.tasks.restartTask',\n\t'workbench.action.tasks.runTask',\n\t'workbench.action.tasks.reRunTask',\n\t'workbench.action.tasks.showLog',\n\t'workbench.action.tasks.showTasks',\n\t'workbench.action.tasks.terminate',\n\t'workbench.action.tasks.test',\n\t'workbench.action.toggleFullScreen',\n\t'workbench.action.terminal.focusAtIndex1',\n\t'workbench.action.terminal.focusAtIndex2',\n\t'workbench.action.terminal.focusAtIndex3',\n\t'workbench.action.terminal.focusAtIndex4',\n\t'workbench.action.terminal.focusAtIndex5',\n\t'workbench.action.terminal.focusAtIndex6',\n\t'workbench.action.terminal.focusAtIndex7',\n\t'workbench.action.terminal.focusAtIndex8',\n\t'workbench.action.terminal.focusAtIndex9',\n\t'workbench.action.focusSecondEditorGroup',\n\t'workbench.action.focusThirdEditorGroup',\n\t'workbench.action.focusFourthEditorGroup',\n\t'workbench.action.focusFifthEditorGroup',\n\t'workbench.action.focusSixthEditorGroup',\n\t'workbench.action.focusSeventhEditorGroup',\n\t'workbench.action.focusEighthEditorGroup',\n\t'workbench.action.focusNextPart',\n\t'workbench.action.focusPreviousPart',\n\t'workbench.action.nextPanelView',\n\t'workbench.action.previousPanelView',\n\t'workbench.action.nextSideBarView',\n\t'workbench.action.previousSideBarView',\n\t'workbench.action.debug.start',\n\t'workbench.action.debug.stop',\n\t'workbench.action.debug.run',\n\t'workbench.action.debug.restart',\n\t'workbench.action.debug.continue',\n\t'workbench.action.debug.pause',\n\t'workbench.action.debug.stepInto',\n\t'workbench.action.debug.stepOut',\n\t'workbench.action.debug.stepOver',\n\t'workbench.action.nextEditor',\n\t'workbench.action.previousEditor',\n\t'workbench.action.nextEditorInGroup',\n\t'workbench.action.previousEditorInGroup',\n\t'workbench.action.openNextRecentlyUsedEditor',\n\t'workbench.action.openPreviousRecentlyUsedEditor',\n\t'workbench.action.openNextRecentlyUsedEditorInGroup',\n\t'workbench.action.openPreviousRecentlyUsedEditorInGroup',\n\t'workbench.action.quickOpenPreviousRecentlyUsedEditor',\n\t'workbench.action.quickOpenLeastRecentlyUsedEditor',\n\t'workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup',\n\t'workbench.action.quickOpenLeastRecentlyUsedEditorInGroup',\n\t'workbench.action.focusActiveEditorGroup',\n\t'workbench.action.focusFirstEditorGroup',\n\t'workbench.action.focusLastEditorGroup',\n\t'workbench.action.firstEditorInGroup',\n\t'workbench.action.lastEditorInGroup',\n\t'workbench.action.navigateUp',\n\t'workbench.action.navigateDown',\n\t'workbench.action.navigateRight',\n\t'workbench.action.navigateLeft',\n\t'workbench.action.togglePanel',\n\t'workbench.action.quickOpenView',\n\t'workbench.action.toggleMaximizedPanel',\n\t'notification.acceptPrimaryAction',\n\t'runCommands'\n];\n\nexport const terminalContributionsDescriptor: IExtensionPointDescriptor<ITerminalContributions> = {\n\textensionPoint: 'terminal',\n\tdefaultExtensionKind: ['workspace'],\n\tactivationEventsGenerator: (contribs: ITerminalContributions[], result: { push(item: string): void }) => {\n\t\tfor (const contrib of contribs) {\n\t\t\tfor (const profileContrib of (contrib.profiles ?? [])) {\n\t\t\t\tresult.push(`onTerminalProfile:${profileContrib.id}`);\n\t\t\t}\n\t\t}\n\t},\n\tjsonSchema: {\n\t\tdescription: nls.localize('vscode.extension.contributes.terminal', 'Contributes terminal functionality.'),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\tprofiles: {\n\t\t\t\ttype: 'array',\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.terminal.profiles', \"Defines additional terminal profiles that the user can create.\"),\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\trequired: ['id', 'title'],\n\t\t\t\t\tdefaultSnippets: [{\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tid: '$1',\n\t\t\t\t\t\t\ttitle: '$2'\n\t\t\t\t\t\t}\n\t\t\t\t\t}],\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.terminal.profiles.id', \"The ID of the terminal profile provider.\"),\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.terminal.profiles.title', \"Title for this terminal profile.\"),\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ticon: {\n\t\t\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.terminal.types.icon', \"A codicon, URI, or light and dark URIs to associate with this terminal type.\"),\n\t\t\t\t\t\t\tanyOf: [{\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tlight: {\n\t\t\t\t\t\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.terminal.types.icon.light', 'Icon path when a light theme is used'),\n\t\t\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdark: {\n\t\t\t\t\t\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.terminal.types.icon.dark', 'Icon path when a dark theme is used'),\n\t\t\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n};\n"]}