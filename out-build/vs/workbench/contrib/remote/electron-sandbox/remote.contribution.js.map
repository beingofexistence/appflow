{"version":3,"sources":["vs/workbench/contrib/remote/electron-sandbox/remote.contribution.ts"],"names":[],"mappings":"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","file":"remote.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IRemoteAgentService, remoteConnectionLatencyMeasurer } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { KeyMod, KeyChord, KeyCode } from 'vs/base/common/keyCodes';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions as WorkbenchContributionsExtensions } from 'vs/workbench/common/contributions';\nimport { ILifecycleService, LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { Schemas } from 'vs/base/common/network';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { ipcRenderer } from 'vs/base/parts/sandbox/electron-sandbox/globals';\nimport { IDiagnosticInfoOptions, IRemoteDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { PersistentConnectionEventType } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { OpenLocalFileFolderCommand, OpenLocalFileCommand, OpenLocalFolderCommand, SaveLocalFileCommand, RemoteFileDialogContext } from 'vs/workbench/services/dialogs/browser/simpleFileDialog';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { TELEMETRY_SETTING_ID } from 'vs/platform/telemetry/common/telemetry';\nimport { getTelemetryLevel } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { INativeHostService } from 'vs/platform/native/common/native';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\n\nclass RemoteAgentDiagnosticListener implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@ILabelService labelService: ILabelService\n\t) {\n\t\tipcRenderer.on('vscode:getDiagnosticInfo', (event: unknown, request: { replyChannel: string; args: IDiagnosticInfoOptions }): void => {\n\t\t\tconst connection = remoteAgentService.getConnection();\n\t\t\tif (connection) {\n\t\t\t\tconst hostName = labelService.getHostLabel(Schemas.vscodeRemote, connection.remoteAuthority);\n\t\t\t\tremoteAgentService.getDiagnosticInfo(request.args)\n\t\t\t\t\t.then(info => {\n\t\t\t\t\t\tif (info) {\n\t\t\t\t\t\t\t(info as IRemoteDiagnosticInfo).hostName = hostName;\n\t\t\t\t\t\t\tif (remoteConnectionLatencyMeasurer.latency?.high) {\n\t\t\t\t\t\t\t\t(info as IRemoteDiagnosticInfo).latency = {\n\t\t\t\t\t\t\t\t\taverage: remoteConnectionLatencyMeasurer.latency.average,\n\t\t\t\t\t\t\t\t\tcurrent: remoteConnectionLatencyMeasurer.latency.current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tipcRenderer.send(request.replyChannel, info);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\tconst errorMessage = e && e.message ? `Connection to '${hostName}' could not be established  ${e.message}` : `Connection to '${hostName}' could not be established `;\n\t\t\t\t\t\tipcRenderer.send(request.replyChannel, { hostName, errorMessage });\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tipcRenderer.send(request.replyChannel);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass RemoteExtensionHostEnvironmentUpdater implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@IRemoteAuthorityResolverService remoteResolverService: IRemoteAuthorityResolverService,\n\t\t@IExtensionService extensionService: IExtensionService\n\t) {\n\t\tconst connection = remoteAgentService.getConnection();\n\t\tif (connection) {\n\t\t\tconnection.onDidStateChange(async e => {\n\t\t\t\tif (e.type === PersistentConnectionEventType.ConnectionGain) {\n\t\t\t\t\tconst resolveResult = await remoteResolverService.resolveAuthority(connection.remoteAuthority);\n\t\t\t\t\tif (resolveResult.options && resolveResult.options.extensionHostEnv) {\n\t\t\t\t\t\tawait extensionService.setRemoteEnvironment(resolveResult.options.extensionHostEnv);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass RemoteTelemetryEnablementUpdater extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.updateRemoteTelemetryEnablement();\n\n\t\tthis._register(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(TELEMETRY_SETTING_ID)) {\n\t\t\t\tthis.updateRemoteTelemetryEnablement();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate updateRemoteTelemetryEnablement(): Promise<void> {\n\t\treturn this.remoteAgentService.updateTelemetryLevel(getTelemetryLevel(this.configurationService));\n\t}\n}\n\n\nclass RemoteEmptyWorkbenchPresentation extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@INativeWorkbenchEnvironmentService environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IRemoteAuthorityResolverService remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\n\t\tfunction shouldShowExplorer(): boolean {\n\t\t\tconst startupEditor = configurationService.getValue<string>('workbench.startupEditor');\n\t\t\treturn startupEditor !== 'welcomePage' && startupEditor !== 'welcomePageInEmptyWorkbench';\n\t\t}\n\n\t\tfunction shouldShowTerminal(): boolean {\n\t\t\treturn shouldShowExplorer();\n\t\t}\n\n\t\tconst { remoteAuthority, filesToDiff, filesToMerge, filesToOpenOrCreate, filesToWait } = environmentService;\n\t\tif (remoteAuthority && contextService.getWorkbenchState() === WorkbenchState.EMPTY && !filesToDiff?.length && !filesToMerge?.length && !filesToOpenOrCreate?.length && !filesToWait) {\n\t\t\tremoteAuthorityResolverService.resolveAuthority(remoteAuthority).then(() => {\n\t\t\t\tif (shouldShowExplorer()) {\n\t\t\t\t\tcommandService.executeCommand('workbench.view.explorer');\n\t\t\t\t}\n\t\t\t\tif (shouldShowTerminal()) {\n\t\t\t\t\tcommandService.executeCommand('workbench.action.terminal.toggleTerminal');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * Sets the 'wslFeatureInstalled' context key if the WSL feature is or was installed on this machine.\n */\nclass WSLContextKeyInitializer extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@INativeHostService nativeHostService: INativeHostService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService\n\t) {\n\t\tsuper();\n\n\t\tconst contextKeyId = 'wslFeatureInstalled';\n\t\tconst storageKey = 'remote.wslFeatureInstalled';\n\n\t\tconst defaultValue = storageService.getBoolean(storageKey, StorageScope.APPLICATION, undefined);\n\n\t\tconst hasWSLFeatureContext = new RawContextKey<boolean>(contextKeyId, !!defaultValue, nls.localize('wslFeatureInstalled', \"Whether the platform has the WSL feature installed\"));\n\t\tconst contextKey = hasWSLFeatureContext.bindTo(contextKeyService);\n\n\t\tif (defaultValue === undefined) {\n\t\t\tlifecycleService.when(LifecyclePhase.Eventually).then(async () => {\n\t\t\t\tnativeHostService.hasWSLFeatureInstalled().then(res => {\n\t\t\t\t\tif (res) {\n\t\t\t\t\t\tcontextKey.set(true);\n\t\t\t\t\t\t// once detected, set to true\n\t\t\t\t\t\tstorageService.store(storageKey, true, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchContributionsExtensions.Workbench);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteAgentDiagnosticListener, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteExtensionHostEnvironmentUpdater, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteTelemetryEnablementUpdater, LifecyclePhase.Ready);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteEmptyWorkbenchPresentation, LifecyclePhase.Ready);\nif (isWindows) {\n\tworkbenchContributionsRegistry.registerWorkbenchContribution(WSLContextKeyInitializer, LifecyclePhase.Ready);\n}\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'remote',\n\t\ttitle: nls.localize('remote', \"Remote\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'remote.downloadExtensionsLocally': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tmarkdownDescription: nls.localize('remote.downloadExtensionsLocally', \"When enabled extensions are downloaded locally and installed on remote.\"),\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t}\n\t});\n\nif (isMacintosh) {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: OpenLocalFileFolderCommand.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO,\n\t\twhen: RemoteFileDialogContext,\n\t\tdescription: { description: OpenLocalFileFolderCommand.LABEL, args: [] },\n\t\thandler: OpenLocalFileFolderCommand.handler()\n\t});\n} else {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: OpenLocalFileCommand.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO,\n\t\twhen: RemoteFileDialogContext,\n\t\tdescription: { description: OpenLocalFileCommand.LABEL, args: [] },\n\t\thandler: OpenLocalFileCommand.handler()\n\t});\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: OpenLocalFolderCommand.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyO),\n\t\twhen: RemoteFileDialogContext,\n\t\tdescription: { description: OpenLocalFolderCommand.LABEL, args: [] },\n\t\thandler: OpenLocalFolderCommand.handler()\n\t});\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: SaveLocalFileCommand.ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyS,\n\twhen: RemoteFileDialogContext,\n\tdescription: { description: SaveLocalFileCommand.LABEL, args: [] },\n\thandler: SaveLocalFileCommand.handler()\n});\n"]}