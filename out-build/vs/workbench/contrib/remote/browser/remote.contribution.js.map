{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/remote/browser/remote.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAWhG,MAAM,8BAA8B,GAAG,cAAG,CAAM,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC;IACnH,8BAA8B,CAAC,6BAA6B,CAAC,oBAAI,+BAA4C,CAAC;IAC9G,8BAA8B,CAAC,6BAA6B,CAAC,oBAAI,+BAA4C,CAAC;IAC9G,8BAA8B,CAAC,6BAA6B,CAAC,aAAI,oCAA2D,CAAC;IAC7H,8BAA8B,CAAC,6BAA6B,CAAC,sBAAI,kCAA2C,CAAC;IAC7G,8BAA8B,CAAC,6BAA6B,CAAC,qBAAI,kCAAwC,CAAC;IAC1G,8BAA8B,CAAC,6BAA6B,CAAC,qBAAI,oCAAmC,CAAC;IACrG,8BAA8B,CAAC,6BAA6B,CAAC,qBAAI,oCAA+C,CAAC;IACjH,8BAA8B,CAAC,6BAA6B,CAAC,aAAI,oCAAqC,CAAC","file":"remote.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ShowCandidateContribution } from 'vs/workbench/contrib/remote/browser/showCandidate';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { TunnelFactoryContribution } from 'vs/workbench/contrib/remote/browser/tunnelFactory';\nimport { RemoteAgentConnectionStatusListener, RemoteMarkers } from 'vs/workbench/contrib/remote/browser/remote';\nimport { RemoteStatusIndicator } from 'vs/workbench/contrib/remote/browser/remoteIndicator';\nimport { AutomaticPortForwarding, ForwardedPortsView, PortRestore } from 'vs/workbench/contrib/remote/browser/remoteExplorer';\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchContributionsRegistry.registerWorkbenchContribution(ShowCandidateContribution, LifecyclePhase.Ready);\nworkbenchContributionsRegistry.registerWorkbenchContribution(TunnelFactoryContribution, LifecyclePhase.Ready);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteAgentConnectionStatusListener, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteStatusIndicator, LifecyclePhase.Starting);\nworkbenchContributionsRegistry.registerWorkbenchContribution(ForwardedPortsView, LifecyclePhase.Restored);\nworkbenchContributionsRegistry.registerWorkbenchContribution(PortRestore, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(AutomaticPortForwarding, LifecyclePhase.Eventually);\nworkbenchContributionsRegistry.registerWorkbenchContribution(RemoteMarkers, LifecyclePhase.Eventually);\n"]}