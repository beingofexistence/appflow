{"version":3,"sources":["vs/workbench/contrib/remote/browser/remote.ts"],"names":[],"mappings":"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","file":"remote.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/remoteViewlet';\nimport * as nls from 'vs/nls';\nimport * as dom from 'vs/base/browser/dom';\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IExtensionService, isProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\nimport { FilterViewPaneContainer } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { VIEWLET_ID } from 'vs/workbench/contrib/remote/browser/remoteExplorer';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IViewDescriptor, IViewsRegistry, Extensions, ViewContainerLocation, IViewContainersRegistry, IViewDescriptorService } from 'vs/workbench/common/views';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IExtensionDescription, IRelaxedExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IProgress, IProgressStep, IProgressService, ProgressLocation } from 'vs/platform/progress/common/progress';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { ReconnectionWaitEvent, PersistentConnectionEventType } from 'vs/platform/remote/common/remoteAgentConnection';\nimport Severity from 'vs/base/common/severity';\nimport { ReloadWindowAction } from 'vs/workbench/browser/actions/windowActions';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { SwitchRemoteViewItem, SwitchRemoteAction } from 'vs/workbench/contrib/remote/browser/explorerViewItems';\nimport { Action } from 'vs/base/common/actions';\nimport { isStringArray } from 'vs/base/common/types';\nimport { IRemoteExplorerService } from 'vs/workbench/services/remote/common/remoteExplorerService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { ViewPane, IViewPaneOptions } from 'vs/workbench/browser/parts/views/viewPane';\nimport { IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { ITreeRenderer, ITreeNode, IAsyncDataSource } from 'vs/base/browser/ui/tree/tree';\nimport { WorkbenchAsyncDataTree } from 'vs/platform/list/browser/listService';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ExtensionsRegistry, IExtensionPointUser } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport * as icons from 'vs/workbench/contrib/remote/browser/remoteIcons';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ITimerService } from 'vs/workbench/services/timer/browser/timerService';\nimport { getRemoteName } from 'vs/platform/remote/common/remoteHosts';\nimport { IActionViewItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { getVirtualWorkspaceLocation } from 'vs/platform/workspace/common/virtualWorkspace';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { IWalkthroughsService } from 'vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedService';\nimport { Schemas } from 'vs/base/common/network';\n\ninterface HelpInformation {\n\textensionDescription: IExtensionDescription;\n\tgetStarted?: string | { id: string };\n\tdocumentation?: string;\n\tissues?: string;\n\treportIssue?: string;\n\tremoteName?: string[] | string;\n\tvirtualWorkspace?: string;\n}\n\nconst getStartedWalkthrough: IJSONSchema = {\n\ttype: 'object',\n\trequired: ['id'],\n\tproperties: {\n\t\tid: {\n\t\t\tdescription: nls.localize('getStartedWalkthrough.id', 'The ID of a Get Started walkthrough to open.'),\n\t\t\ttype: 'string'\n\t\t},\n\t}\n};\n\nconst remoteHelpExtPoint = ExtensionsRegistry.registerExtensionPoint<HelpInformation>({\n\textensionPoint: 'remoteHelp',\n\tjsonSchema: {\n\t\tdescription: nls.localize('RemoteHelpInformationExtPoint', 'Contributes help information for Remote'),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'getStarted': {\n\t\t\t\tdescription: nls.localize('RemoteHelpInformationExtPoint.getStarted', \"The url, or a command that returns the url, to your project's Getting Started page, or a walkthrough ID contributed by your project's extension\"),\n\t\t\t\toneOf: [\n\t\t\t\t\t{ type: 'string' },\n\t\t\t\t\tgetStartedWalkthrough\n\t\t\t\t]\n\t\t\t},\n\t\t\t'documentation': {\n\t\t\t\tdescription: nls.localize('RemoteHelpInformationExtPoint.documentation', \"The url, or a command that returns the url, to your project's documentation page\"),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\t'feedback': {\n\t\t\t\tdescription: nls.localize('RemoteHelpInformationExtPoint.feedback', \"The url, or a command that returns the url, to your project's feedback reporter\"),\n\t\t\t\ttype: 'string',\n\t\t\t\tmarkdownDeprecationMessage: nls.localize('RemoteHelpInformationExtPoint.feedback.deprecated', \"Use {0} instead\", '`reportIssue`')\n\t\t\t},\n\t\t\t'reportIssue': {\n\t\t\t\tdescription: nls.localize('RemoteHelpInformationExtPoint.reportIssue', \"The url, or a command that returns the url, to your project's issue reporter\"),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\t'issues': {\n\t\t\t\tdescription: nls.localize('RemoteHelpInformationExtPoint.issues', \"The url, or a command that returns the url, to your project's issues list\"),\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t}\n\t}\n});\n\ninterface IViewModel {\n\tonDidChangeHelpInformation: Event<void>;\n\thelpInformation: HelpInformation[];\n}\n\nclass HelpTreeVirtualDelegate implements IListVirtualDelegate<IHelpItem> {\n\tgetHeight(element: IHelpItem): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: IHelpItem): string {\n\t\treturn 'HelpItemTemplate';\n\t}\n}\n\ninterface IHelpItemTemplateData {\n\tparent: HTMLElement;\n\ticon: HTMLElement;\n}\n\nclass HelpTreeRenderer implements ITreeRenderer<HelpModel | IHelpItem, IHelpItem, IHelpItemTemplateData> {\n\ttemplateId: string = 'HelpItemTemplate';\n\n\trenderTemplate(container: HTMLElement): IHelpItemTemplateData {\n\t\tcontainer.classList.add('remote-help-tree-node-item');\n\t\tconst icon = dom.append(container, dom.$('.remote-help-tree-node-item-icon'));\n\t\tconst parent = container;\n\t\treturn { parent, icon };\n\t}\n\n\trenderElement(element: ITreeNode<IHelpItem, IHelpItem>, index: number, templateData: IHelpItemTemplateData, height: number | undefined): void {\n\t\tconst container = templateData.parent;\n\t\tdom.append(container, templateData.icon);\n\t\ttemplateData.icon.classList.add(...element.element.iconClasses);\n\t\tconst labelContainer = dom.append(container, dom.$('.help-item-label'));\n\t\tlabelContainer.innerText = element.element.label;\n\t}\n\n\tdisposeTemplate(templateData: IHelpItemTemplateData): void {\n\n\t}\n}\n\nclass HelpDataSource implements IAsyncDataSource<HelpModel, IHelpItem> {\n\thasChildren(element: HelpModel) {\n\t\treturn element instanceof HelpModel;\n\t}\n\n\tgetChildren(element: HelpModel) {\n\t\tif (element instanceof HelpModel && element.items) {\n\t\t\treturn element.items;\n\t\t}\n\n\t\treturn [];\n\t}\n}\ninterface IHelpItem {\n\ticon: ThemeIcon;\n\ticonClasses: string[];\n\tlabel: string;\n\tvalues: HelpItemValue[];\n\thandleClick(): Promise<void>;\n}\n\nclass HelpModel {\n\titems: IHelpItem[] | undefined;\n\n\tconstructor(\n\t\tprivate viewModel: IViewModel,\n\t\tprivate openerService: IOpenerService,\n\t\tprivate quickInputService: IQuickInputService,\n\t\tprivate commandService: ICommandService,\n\t\tprivate remoteExplorerService: IRemoteExplorerService,\n\t\tprivate environmentService: IWorkbenchEnvironmentService,\n\t\tprivate workspaceContextService: IWorkspaceContextService,\n\t\tprivate walkthroughsService: IWalkthroughsService\n\t) {\n\t\tthis.updateItems();\n\t\tviewModel.onDidChangeHelpInformation(() => this.updateItems());\n\t}\n\n\tprivate createHelpItemValue(info: HelpInformation, infoKey: Exclude<keyof HelpInformation, 'extensionDescription' | 'remoteName' | 'virtualWorkspace'>) {\n\t\treturn new HelpItemValue(this.commandService,\n\t\t\tthis.walkthroughsService,\n\t\t\tinfo.extensionDescription,\n\t\t\t(typeof info.remoteName === 'string') ? [info.remoteName] : info.remoteName,\n\t\t\tinfo.virtualWorkspace,\n\t\t\tinfo[infoKey]);\n\t}\n\n\tprivate updateItems() {\n\t\tconst helpItems: IHelpItem[] = [];\n\n\t\tconst getStarted = this.viewModel.helpInformation.filter(info => info.getStarted);\n\t\tif (getStarted.length) {\n\t\t\tconst helpItemValues = getStarted.map((info: HelpInformation) => this.createHelpItemValue(info, 'getStarted'));\n\t\t\tconst getStartedHelpItem = this.items?.find(item => item.icon === icons.getStartedIcon) ?? new GetStartedHelpItem(\n\t\t\t\ticons.getStartedIcon,\n\t\t\t\tnls.localize('remote.help.getStarted', \"Get Started\"),\n\t\t\t\thelpItemValues,\n\t\t\t\tthis.quickInputService,\n\t\t\t\tthis.environmentService,\n\t\t\t\tthis.openerService,\n\t\t\t\tthis.remoteExplorerService,\n\t\t\t\tthis.workspaceContextService,\n\t\t\t\tthis.commandService\n\t\t\t);\n\t\t\tgetStartedHelpItem.values = helpItemValues;\n\t\t\thelpItems.push(getStartedHelpItem);\n\t\t}\n\n\t\tconst documentation = this.viewModel.helpInformation.filter(info => info.documentation);\n\t\tif (documentation.length) {\n\t\t\tconst helpItemValues = documentation.map((info: HelpInformation) => this.createHelpItemValue(info, 'documentation'));\n\t\t\tconst documentationHelpItem = this.items?.find(item => item.icon === icons.documentationIcon) ?? new HelpItem(\n\t\t\t\ticons.documentationIcon,\n\t\t\t\tnls.localize('remote.help.documentation', \"Read Documentation\"),\n\t\t\t\thelpItemValues,\n\t\t\t\tthis.quickInputService,\n\t\t\t\tthis.environmentService,\n\t\t\t\tthis.openerService,\n\t\t\t\tthis.remoteExplorerService,\n\t\t\t\tthis.workspaceContextService\n\t\t\t);\n\t\t\tdocumentationHelpItem.values = helpItemValues;\n\t\t\thelpItems.push(documentationHelpItem);\n\t\t}\n\n\t\tconst issues = this.viewModel.helpInformation.filter(info => info.issues);\n\t\tif (issues.length) {\n\t\t\tconst helpItemValues = issues.map((info: HelpInformation) => this.createHelpItemValue(info, 'issues'));\n\t\t\tconst reviewIssuesHelpItem = this.items?.find(item => item.icon === icons.reviewIssuesIcon) ?? new HelpItem(\n\t\t\t\ticons.reviewIssuesIcon,\n\t\t\t\tnls.localize('remote.help.issues', \"Review Issues\"),\n\t\t\t\thelpItemValues,\n\t\t\t\tthis.quickInputService,\n\t\t\t\tthis.environmentService,\n\t\t\t\tthis.openerService,\n\t\t\t\tthis.remoteExplorerService,\n\t\t\t\tthis.workspaceContextService\n\t\t\t);\n\t\t\treviewIssuesHelpItem.values = helpItemValues;\n\t\t\thelpItems.push(reviewIssuesHelpItem);\n\t\t}\n\n\t\tif (helpItems.length) {\n\t\t\tconst helpItemValues = this.viewModel.helpInformation.map(info => this.createHelpItemValue(info, 'reportIssue'));\n\t\t\tconst issueReporterItem = this.items?.find(item => item.icon === icons.reportIssuesIcon) ?? new IssueReporterItem(\n\t\t\t\ticons.reportIssuesIcon,\n\t\t\t\tnls.localize('remote.help.report', \"Report Issue\"),\n\t\t\t\thelpItemValues,\n\t\t\t\tthis.quickInputService,\n\t\t\t\tthis.environmentService,\n\t\t\t\tthis.commandService,\n\t\t\t\tthis.openerService,\n\t\t\t\tthis.remoteExplorerService,\n\t\t\t\tthis.workspaceContextService\n\t\t\t);\n\t\t\tissueReporterItem.values = helpItemValues;\n\t\t\thelpItems.push(issueReporterItem);\n\t\t}\n\n\t\tif (helpItems.length) {\n\t\t\tthis.items = helpItems;\n\t\t}\n\t}\n}\n\nclass HelpItemValue {\n\tprivate _url: string | undefined;\n\tprivate _description: string | undefined;\n\n\tconstructor(private commandService: ICommandService, private walkthroughService: IWalkthroughsService, public extensionDescription: IExtensionDescription, public readonly remoteAuthority: string[] | undefined, public readonly virtualWorkspace: string | undefined, private urlOrCommandOrId?: string | { id: string }) {\n\t}\n\n\tget description(): Promise<string | undefined> {\n\t\treturn this.getUrl().then(() => this._description);\n\t}\n\n\tget url(): Promise<string> {\n\t\treturn this.getUrl();\n\t}\n\n\tprivate async getUrl(): Promise<string> {\n\t\tif (this._url === undefined) {\n\t\t\tif (typeof this.urlOrCommandOrId === 'string') {\n\t\t\t\tconst url = URI.parse(this.urlOrCommandOrId);\n\t\t\t\tif (url.authority) {\n\t\t\t\t\tthis._url = this.urlOrCommandOrId;\n\t\t\t\t} else {\n\t\t\t\t\tconst urlCommand: Promise<string | undefined> = this.commandService.executeCommand(this.urlOrCommandOrId).then((result) => {\n\t\t\t\t\t\t// if executing this command times out, cache its value whenever it eventually resolves\n\t\t\t\t\t\tthis._url = result;\n\t\t\t\t\t\treturn this._url;\n\t\t\t\t\t});\n\t\t\t\t\t// We must be defensive. The command may never return, meaning that no help at all is ever shown!\n\t\t\t\t\tconst emptyString: Promise<string> = new Promise(resolve => setTimeout(() => resolve(''), 500));\n\t\t\t\t\tthis._url = await Promise.race([urlCommand, emptyString]);\n\t\t\t\t}\n\t\t\t} else if (this.urlOrCommandOrId?.id) {\n\t\t\t\ttry {\n\t\t\t\t\tconst walkthroughId = `${this.extensionDescription.id}#${this.urlOrCommandOrId.id}`;\n\t\t\t\t\tconst walkthrough = await this.walkthroughService.getWalkthrough(walkthroughId);\n\t\t\t\t\tthis._description = walkthrough.title;\n\t\t\t\t\tthis._url = walkthroughId;\n\t\t\t\t} catch { }\n\t\t\t}\n\t\t}\n\t\tif (this._url === undefined) {\n\t\t\tthis._url = '';\n\t\t}\n\t\treturn this._url;\n\t}\n}\n\nabstract class HelpItemBase implements IHelpItem {\n\tpublic iconClasses: string[] = [];\n\tconstructor(\n\t\tpublic icon: ThemeIcon,\n\t\tpublic label: string,\n\t\tpublic values: HelpItemValue[],\n\t\tprivate quickInputService: IQuickInputService,\n\t\tprivate environmentService: IWorkbenchEnvironmentService,\n\t\tprivate remoteExplorerService: IRemoteExplorerService,\n\t\tprivate workspaceContextService: IWorkspaceContextService\n\t) {\n\t\tthis.iconClasses.push(...ThemeIcon.asClassNameArray(icon));\n\t\tthis.iconClasses.push('remote-help-tree-node-item-icon');\n\t}\n\n\tprotected async getActions(): Promise<{\n\t\tlabel: string;\n\t\turl: string;\n\t\tdescription: string;\n\t\textensionDescription: Readonly<IRelaxedExtensionDescription>;\n\t}[]> {\n\t\treturn (await Promise.all(this.values.map(async (value) => {\n\t\t\treturn {\n\t\t\t\tlabel: value.extensionDescription.displayName || value.extensionDescription.identifier.value,\n\t\t\t\tdescription: await value.description ?? await value.url,\n\t\t\t\turl: await value.url,\n\t\t\t\textensionDescription: value.extensionDescription\n\t\t\t};\n\t\t}))).filter(item => item.description);\n\t}\n\n\tasync handleClick() {\n\t\tconst remoteAuthority = this.environmentService.remoteAuthority;\n\t\tif (remoteAuthority) {\n\t\t\tfor (let i = 0; i < this.remoteExplorerService.targetType.length; i++) {\n\t\t\t\tif (remoteAuthority.startsWith(this.remoteExplorerService.targetType[i])) {\n\t\t\t\t\tfor (const value of this.values) {\n\t\t\t\t\t\tif (value.remoteAuthority) {\n\t\t\t\t\t\t\tfor (const authority of value.remoteAuthority) {\n\t\t\t\t\t\t\t\tif (remoteAuthority.startsWith(authority)) {\n\t\t\t\t\t\t\t\t\tawait this.takeAction(value.extensionDescription, await value.url);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst virtualWorkspace = getVirtualWorkspaceLocation(this.workspaceContextService.getWorkspace())?.scheme;\n\t\t\tif (virtualWorkspace) {\n\t\t\t\tfor (let i = 0; i < this.remoteExplorerService.targetType.length; i++) {\n\t\t\t\t\tfor (const value of this.values) {\n\t\t\t\t\t\tif (value.virtualWorkspace && value.remoteAuthority) {\n\t\t\t\t\t\t\tfor (const authority of value.remoteAuthority) {\n\t\t\t\t\t\t\t\tif (this.remoteExplorerService.targetType[i].startsWith(authority) && virtualWorkspace.startsWith(value.virtualWorkspace)) {\n\t\t\t\t\t\t\t\t\tawait this.takeAction(value.extensionDescription, await value.url);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.values.length > 1) {\n\t\t\tconst actions = await this.getActions();\n\n\t\t\tif (actions.length) {\n\t\t\t\tconst action = await this.quickInputService.pick(actions, { placeHolder: nls.localize('pickRemoteExtension', \"Select url to open\") });\n\t\t\t\tif (action) {\n\t\t\t\t\tawait this.takeAction(action.extensionDescription, action.url);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tawait this.takeAction(this.values[0].extensionDescription, await this.values[0].url);\n\t\t}\n\n\t}\n\n\tprotected abstract takeAction(extensionDescription: IExtensionDescription, url?: string): Promise<void>;\n}\n\nclass GetStartedHelpItem extends HelpItemBase {\n\tconstructor(\n\t\ticon: ThemeIcon,\n\t\tlabel: string,\n\t\tvalues: HelpItemValue[],\n\t\tquickInputService: IQuickInputService,\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t\tprivate openerService: IOpenerService,\n\t\tremoteExplorerService: IRemoteExplorerService,\n\t\tworkspaceContextService: IWorkspaceContextService,\n\t\tprivate commandService: ICommandService\n\t) {\n\t\tsuper(icon, label, values, quickInputService, environmentService, remoteExplorerService, workspaceContextService);\n\t}\n\n\tprotected async takeAction(extensionDescription: IExtensionDescription, urlOrWalkthroughId: string): Promise<void> {\n\t\tif ([Schemas.http, Schemas.https].includes(URI.parse(urlOrWalkthroughId).scheme)) {\n\t\t\tthis.openerService.open(urlOrWalkthroughId, { allowCommands: true });\n\t\t\treturn;\n\t\t}\n\n\t\tthis.commandService.executeCommand('workbench.action.openWalkthrough', urlOrWalkthroughId);\n\t}\n}\n\nclass HelpItem extends HelpItemBase {\n\tconstructor(\n\t\ticon: ThemeIcon,\n\t\tlabel: string,\n\t\tvalues: HelpItemValue[],\n\t\tquickInputService: IQuickInputService,\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t\tprivate openerService: IOpenerService,\n\t\tremoteExplorerService: IRemoteExplorerService,\n\t\tworkspaceContextService: IWorkspaceContextService\n\t) {\n\t\tsuper(icon, label, values, quickInputService, environmentService, remoteExplorerService, workspaceContextService);\n\t}\n\n\tprotected async takeAction(extensionDescription: IExtensionDescription, url: string): Promise<void> {\n\t\tawait this.openerService.open(URI.parse(url), { allowCommands: true });\n\t}\n}\n\nclass IssueReporterItem extends HelpItemBase {\n\tconstructor(\n\t\ticon: ThemeIcon,\n\t\tlabel: string,\n\t\tvalues: HelpItemValue[],\n\t\tquickInputService: IQuickInputService,\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t\tprivate commandService: ICommandService,\n\t\tprivate openerService: IOpenerService,\n\t\tremoteExplorerService: IRemoteExplorerService,\n\t\tworkspaceContextService: IWorkspaceContextService\n\t) {\n\t\tsuper(icon, label, values, quickInputService, environmentService, remoteExplorerService, workspaceContextService);\n\t}\n\n\tprotected override async getActions(): Promise<{\n\t\tlabel: string;\n\t\tdescription: string;\n\t\turl: string;\n\t\textensionDescription: Readonly<IRelaxedExtensionDescription>;\n\t}[]> {\n\t\treturn Promise.all(this.values.map(async (value) => {\n\t\t\treturn {\n\t\t\t\tlabel: value.extensionDescription.displayName || value.extensionDescription.identifier.value,\n\t\t\t\tdescription: '',\n\t\t\t\turl: await value.url,\n\t\t\t\textensionDescription: value.extensionDescription\n\t\t\t};\n\t\t}));\n\t}\n\n\tprotected async takeAction(extensionDescription: IExtensionDescription, url: string): Promise<void> {\n\t\tif (!url) {\n\t\t\tawait this.commandService.executeCommand('workbench.action.openIssueReporter', [extensionDescription.identifier.value]);\n\t\t} else {\n\t\t\tawait this.openerService.open(URI.parse(url));\n\t\t}\n\t}\n}\n\nclass HelpPanel extends ViewPane {\n\tstatic readonly ID = '~remote.helpPanel';\n\tstatic readonly TITLE = nls.localize('remote.help', \"Help and feedback\");\n\tprivate tree!: WorkbenchAsyncDataTree<HelpModel, IHelpItem, IHelpItem>;\n\n\tconstructor(\n\t\tprotected viewModel: IViewModel,\n\t\toptions: IViewPaneOptions,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IQuickInputService protected quickInputService: IQuickInputService,\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@IRemoteExplorerService protected readonly remoteExplorerService: IRemoteExplorerService,\n\t\t@IWorkbenchEnvironmentService protected readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IWalkthroughsService private readonly walkthroughsService: IWalkthroughsService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tcontainer.classList.add('remote-help');\n\t\tconst treeContainer = document.createElement('div');\n\t\ttreeContainer.classList.add('remote-help-content');\n\t\tcontainer.appendChild(treeContainer);\n\n\t\tthis.tree = <WorkbenchAsyncDataTree<HelpModel, IHelpItem, IHelpItem>>this.instantiationService.createInstance(WorkbenchAsyncDataTree,\n\t\t\t'RemoteHelp',\n\t\t\ttreeContainer,\n\t\t\tnew HelpTreeVirtualDelegate(),\n\t\t\t[new HelpTreeRenderer()],\n\t\t\tnew HelpDataSource(),\n\t\t\t{\n\t\t\t\taccessibilityProvider: {\n\t\t\t\t\tgetAriaLabel: (item: HelpItemBase) => {\n\t\t\t\t\t\treturn item.label;\n\t\t\t\t\t},\n\t\t\t\t\tgetWidgetAriaLabel: () => nls.localize('remotehelp', \"Remote Help\")\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tconst model = new HelpModel(this.viewModel, this.openerService, this.quickInputService, this.commandService, this.remoteExplorerService, this.environmentService, this.workspaceContextService, this.walkthroughsService);\n\n\t\tthis.tree.setInput(model);\n\n\t\tthis._register(Event.debounce(this.tree.onDidOpen, (last, event) => event, 75, true)(e => {\n\t\t\te.element?.handleClick();\n\t\t}));\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree.layout(height, width);\n\t}\n}\n\nclass HelpPanelDescriptor implements IViewDescriptor {\n\treadonly id = HelpPanel.ID;\n\treadonly name = HelpPanel.TITLE;\n\treadonly ctorDescriptor: SyncDescriptor<HelpPanel>;\n\treadonly canToggleVisibility = true;\n\treadonly hideByDefault = false;\n\treadonly group = 'help@50';\n\treadonly order = -10;\n\n\tconstructor(viewModel: IViewModel) {\n\t\tthis.ctorDescriptor = new SyncDescriptor(HelpPanel, [viewModel]);\n\t}\n}\n\nclass RemoteViewPaneContainer extends FilterViewPaneContainer implements IViewModel {\n\tprivate helpPanelDescriptor = new HelpPanelDescriptor(this);\n\thelpInformation: HelpInformation[] = [];\n\tprivate _onDidChangeHelpInformation = new Emitter<void>();\n\tpublic onDidChangeHelpInformation: Event<void> = this._onDidChangeHelpInformation.event;\n\tprivate hasSetSwitchForConnection: boolean = false;\n\tprivate hasRegisteredHelpView: boolean = false;\n\n\tconstructor(\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IRemoteExplorerService private readonly remoteExplorerService: IRemoteExplorerService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService\n\t) {\n\t\tsuper(VIEWLET_ID, remoteExplorerService.onDidChangeTargetType, configurationService, layoutService, telemetryService, storageService, instantiationService, themeService, contextMenuService, extensionService, contextService, viewDescriptorService);\n\t\tthis.addConstantViewDescriptors([this.helpPanelDescriptor]);\n\t\tremoteHelpExtPoint.setHandler((extensions) => {\n\t\t\tconst helpInformation: HelpInformation[] = [];\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tthis._handleRemoteInfoExtensionPoint(extension, helpInformation);\n\t\t\t}\n\n\t\t\tthis.helpInformation = helpInformation;\n\t\t\tthis._onDidChangeHelpInformation.fire();\n\n\t\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\t\tif (this.helpInformation.length && !this.hasRegisteredHelpView) {\n\t\t\t\tviewsRegistry.registerViews([this.helpPanelDescriptor], this.viewContainer);\n\t\t\t\tthis.hasRegisteredHelpView = true;\n\t\t\t} else if (this.hasRegisteredHelpView) {\n\t\t\t\tviewsRegistry.deregisterViews([this.helpPanelDescriptor], this.viewContainer);\n\t\t\t\tthis.hasRegisteredHelpView = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _handleRemoteInfoExtensionPoint(extension: IExtensionPointUser<HelpInformation>, helpInformation: HelpInformation[]) {\n\t\tif (!isProposedApiEnabled(extension.description, 'contribRemoteHelp')) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!extension.value.documentation && !extension.value.getStarted && !extension.value.issues) {\n\t\t\treturn;\n\t\t}\n\n\t\thelpInformation.push({\n\t\t\textensionDescription: extension.description,\n\t\t\tgetStarted: extension.value.getStarted,\n\t\t\tdocumentation: extension.value.documentation,\n\t\t\treportIssue: extension.value.reportIssue,\n\t\t\tissues: extension.value.issues,\n\t\t\tremoteName: extension.value.remoteName,\n\t\t\tvirtualWorkspace: extension.value.virtualWorkspace\n\t\t});\n\t}\n\n\tprotected getFilterOn(viewDescriptor: IViewDescriptor): string | undefined {\n\t\treturn isStringArray(viewDescriptor.remoteAuthority) ? viewDescriptor.remoteAuthority[0] : viewDescriptor.remoteAuthority;\n\t}\n\n\tprotected setFilter(viewDescriptor: IViewDescriptor): void {\n\t\tthis.remoteExplorerService.targetType = isStringArray(viewDescriptor.remoteAuthority) ? viewDescriptor.remoteAuthority : [viewDescriptor.remoteAuthority!];\n\t}\n\n\tpublic override getActionViewItem(action: Action): IActionViewItem | undefined {\n\t\tif (action.id === SwitchRemoteAction.ID) {\n\t\t\tconst optionItems = SwitchRemoteViewItem.createOptionItems(Registry.as<IViewsRegistry>(Extensions.ViewsRegistry).getViews(this.viewContainer), this.contextKeyService);\n\t\t\tconst item = this.instantiationService.createInstance(SwitchRemoteViewItem, action, optionItems);\n\t\t\tif (!this.hasSetSwitchForConnection) {\n\t\t\t\tthis.hasSetSwitchForConnection = item.setSelectionForConnection();\n\t\t\t} else {\n\t\t\t\titem.setSelection();\n\t\t\t}\n\t\t\treturn item;\n\t\t}\n\n\t\treturn super.getActionViewItem(action);\n\t}\n\n\tgetTitle(): string {\n\t\tconst title = nls.localize('remote.explorer', \"Remote Explorer\");\n\t\treturn title;\n\t}\n}\n\nregisterAction2(SwitchRemoteAction);\n\nRegistry.as<IViewContainersRegistry>(Extensions.ViewContainersRegistry).registerViewContainer(\n\t{\n\t\tid: VIEWLET_ID,\n\t\ttitle: { value: nls.localize('remote.explorer', \"Remote Explorer\"), original: 'Remote Explorer' },\n\t\tctorDescriptor: new SyncDescriptor(RemoteViewPaneContainer),\n\t\thideIfEmpty: true,\n\t\tviewOrderDelegate: {\n\t\t\tgetOrder: (group?: string) => {\n\t\t\t\tif (!group) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet matches = /^targets@(\\d+)$/.exec(group);\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn -1000;\n\t\t\t\t}\n\n\t\t\t\tmatches = /^details(@(\\d+))?$/.exec(group);\n\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn -500 + Number(matches[2]);\n\t\t\t\t}\n\n\t\t\t\tmatches = /^help(@(\\d+))?$/.exec(group);\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn -10;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\ticon: icons.remoteExplorerViewIcon,\n\t\torder: 4\n\t}, ViewContainerLocation.Sidebar);\n\nexport class RemoteMarkers implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@ITimerService timerService: ITimerService,\n\t) {\n\t\tremoteAgentService.getEnvironment().then(remoteEnv => {\n\t\t\tif (remoteEnv) {\n\t\t\t\ttimerService.setPerformanceMarks('server', remoteEnv.marks);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass VisibleProgress {\n\n\tpublic readonly location: ProgressLocation;\n\tprivate _isDisposed: boolean;\n\tprivate _lastReport: string | null;\n\tprivate _currentProgressPromiseResolve: (() => void) | null;\n\tprivate _currentProgress: IProgress<IProgressStep> | null;\n\tprivate _currentTimer: ReconnectionTimer | null;\n\n\tpublic get lastReport(): string | null {\n\t\treturn this._lastReport;\n\t}\n\n\tconstructor(progressService: IProgressService, location: ProgressLocation, initialReport: string | null, buttons: string[], onDidCancel: (choice: number | undefined, lastReport: string | null) => void) {\n\t\tthis.location = location;\n\t\tthis._isDisposed = false;\n\t\tthis._lastReport = initialReport;\n\t\tthis._currentProgressPromiseResolve = null;\n\t\tthis._currentProgress = null;\n\t\tthis._currentTimer = null;\n\n\t\tconst promise = new Promise<void>((resolve) => this._currentProgressPromiseResolve = resolve);\n\n\t\tprogressService.withProgress(\n\t\t\t{ location: location, buttons: buttons },\n\t\t\t(progress) => { if (!this._isDisposed) { this._currentProgress = progress; } return promise; },\n\t\t\t(choice) => onDidCancel(choice, this._lastReport)\n\t\t);\n\n\t\tif (this._lastReport) {\n\t\t\tthis.report();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tif (this._currentProgressPromiseResolve) {\n\t\t\tthis._currentProgressPromiseResolve();\n\t\t\tthis._currentProgressPromiseResolve = null;\n\t\t}\n\t\tthis._currentProgress = null;\n\t\tif (this._currentTimer) {\n\t\t\tthis._currentTimer.dispose();\n\t\t\tthis._currentTimer = null;\n\t\t}\n\t}\n\n\tpublic report(message?: string) {\n\t\tif (message) {\n\t\t\tthis._lastReport = message;\n\t\t}\n\n\t\tif (this._lastReport && this._currentProgress) {\n\t\t\tthis._currentProgress.report({ message: this._lastReport });\n\t\t}\n\t}\n\n\tpublic startTimer(completionTime: number): void {\n\t\tthis.stopTimer();\n\t\tthis._currentTimer = new ReconnectionTimer(this, completionTime);\n\t}\n\n\tpublic stopTimer(): void {\n\t\tif (this._currentTimer) {\n\t\t\tthis._currentTimer.dispose();\n\t\t\tthis._currentTimer = null;\n\t\t}\n\t}\n}\n\nclass ReconnectionTimer implements IDisposable {\n\tprivate readonly _parent: VisibleProgress;\n\tprivate readonly _completionTime: number;\n\tprivate readonly _token: any;\n\n\tconstructor(parent: VisibleProgress, completionTime: number) {\n\t\tthis._parent = parent;\n\t\tthis._completionTime = completionTime;\n\t\tthis._token = setInterval(() => this._render(), 1000);\n\t\tthis._render();\n\t}\n\n\tpublic dispose(): void {\n\t\tclearInterval(this._token);\n\t}\n\n\tprivate _render() {\n\t\tconst remainingTimeMs = this._completionTime - Date.now();\n\t\tif (remainingTimeMs < 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst remainingTime = Math.ceil(remainingTimeMs / 1000);\n\t\tif (remainingTime === 1) {\n\t\t\tthis._parent.report(nls.localize('reconnectionWaitOne', \"Attempting to reconnect in {0} second...\", remainingTime));\n\t\t} else {\n\t\t\tthis._parent.report(nls.localize('reconnectionWaitMany', \"Attempting to reconnect in {0} seconds...\", remainingTime));\n\t\t}\n\t}\n}\n\n/**\n * The time when a prompt is shown to the user\n */\nconst DISCONNECT_PROMPT_TIME = 40 * 1000; // 40 seconds\n\nexport class RemoteAgentConnectionStatusListener extends Disposable implements IWorkbenchContribution {\n\n\tprivate _reloadWindowShown: boolean = false;\n\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@IProgressService progressService: IProgressService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@ILogService logService: ILogService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService\n\t) {\n\t\tsuper();\n\t\tconst connection = remoteAgentService.getConnection();\n\t\tif (connection) {\n\t\t\tlet quickInputVisible = false;\n\t\t\tquickInputService.onShow(() => quickInputVisible = true);\n\t\t\tquickInputService.onHide(() => quickInputVisible = false);\n\n\t\t\tlet visibleProgress: VisibleProgress | null = null;\n\t\t\tlet reconnectWaitEvent: ReconnectionWaitEvent | null = null;\n\t\t\tlet disposableListener: IDisposable | null = null;\n\n\t\t\tfunction showProgress(location: ProgressLocation.Dialog | ProgressLocation.Notification | null, buttons: { label: string; callback: () => void }[], initialReport: string | null = null): VisibleProgress {\n\t\t\t\tif (visibleProgress) {\n\t\t\t\t\tvisibleProgress.dispose();\n\t\t\t\t\tvisibleProgress = null;\n\t\t\t\t}\n\n\t\t\t\tif (!location) {\n\t\t\t\t\tlocation = quickInputVisible ? ProgressLocation.Notification : ProgressLocation.Dialog;\n\t\t\t\t}\n\n\t\t\t\treturn new VisibleProgress(\n\t\t\t\t\tprogressService, location, initialReport, buttons.map(button => button.label),\n\t\t\t\t\t(choice, lastReport) => {\n\t\t\t\t\t\t// Handle choice from dialog\n\t\t\t\t\t\tif (typeof choice !== 'undefined' && buttons[choice]) {\n\t\t\t\t\t\t\tbuttons[choice].callback();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (location === ProgressLocation.Dialog) {\n\t\t\t\t\t\t\t\tvisibleProgress = showProgress(ProgressLocation.Notification, buttons, lastReport);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thideProgress();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tfunction hideProgress() {\n\t\t\t\tif (visibleProgress) {\n\t\t\t\t\tvisibleProgress.dispose();\n\t\t\t\t\tvisibleProgress = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet reconnectionToken: string = '';\n\t\t\tlet lastIncomingDataTime: number = 0;\n\t\t\tlet reconnectionAttempts: number = 0;\n\n\t\t\tconst reconnectButton = {\n\t\t\t\tlabel: nls.localize('reconnectNow', \"Reconnect Now\"),\n\t\t\t\tcallback: () => {\n\t\t\t\t\treconnectWaitEvent?.skipWait();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst reloadButton = {\n\t\t\t\tlabel: nls.localize('reloadWindow', \"Reload Window\"),\n\t\t\t\tcallback: () => {\n\n\t\t\t\t\ttype ReconnectReloadClassification = {\n\t\t\t\t\t\towner: 'alexdima';\n\t\t\t\t\t\tcomment: 'The reload button in the builtin permanent reconnection failure dialog was pressed';\n\t\t\t\t\t\tremoteName: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The name of the resolver.' };\n\t\t\t\t\t\treconnectionToken: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The identifier of the connection.' };\n\t\t\t\t\t\tmillisSinceLastIncomingData: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Elapsed time (in ms) since data was last received.' };\n\t\t\t\t\t\tattempt: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The reconnection attempt counter.' };\n\t\t\t\t\t};\n\t\t\t\t\ttype ReconnectReloadEvent = {\n\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\tmillisSinceLastIncomingData: number;\n\t\t\t\t\t\tattempt: number;\n\t\t\t\t\t};\n\t\t\t\t\ttelemetryService.publicLog2<ReconnectReloadEvent, ReconnectReloadClassification>('remoteReconnectionReload', {\n\t\t\t\t\t\tremoteName: getRemoteName(environmentService.remoteAuthority),\n\t\t\t\t\t\treconnectionToken: reconnectionToken,\n\t\t\t\t\t\tmillisSinceLastIncomingData: Date.now() - lastIncomingDataTime,\n\t\t\t\t\t\tattempt: reconnectionAttempts\n\t\t\t\t\t});\n\n\t\t\t\t\tcommandService.executeCommand(ReloadWindowAction.ID);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Possible state transitions:\n\t\t\t// ConnectionGain      -> ConnectionLost\n\t\t\t// ConnectionLost      -> ReconnectionWait, ReconnectionRunning\n\t\t\t// ReconnectionWait    -> ReconnectionRunning\n\t\t\t// ReconnectionRunning -> ConnectionGain, ReconnectionPermanentFailure\n\n\t\t\tconnection.onDidStateChange((e) => {\n\t\t\t\tvisibleProgress?.stopTimer();\n\n\t\t\t\tif (disposableListener) {\n\t\t\t\t\tdisposableListener.dispose();\n\t\t\t\t\tdisposableListener = null;\n\t\t\t\t}\n\t\t\t\tswitch (e.type) {\n\t\t\t\t\tcase PersistentConnectionEventType.ConnectionLost:\n\t\t\t\t\t\treconnectionToken = e.reconnectionToken;\n\t\t\t\t\t\tlastIncomingDataTime = Date.now() - e.millisSinceLastIncomingData;\n\t\t\t\t\t\treconnectionAttempts = 0;\n\n\t\t\t\t\t\ttype RemoteConnectionLostClassification = {\n\t\t\t\t\t\t\towner: 'alexdima';\n\t\t\t\t\t\t\tcomment: 'The remote connection state is now `ConnectionLost`';\n\t\t\t\t\t\t\tremoteName: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The name of the resolver.' };\n\t\t\t\t\t\t\treconnectionToken: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The identifier of the connection.' };\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype RemoteConnectionLostEvent = {\n\t\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttelemetryService.publicLog2<RemoteConnectionLostEvent, RemoteConnectionLostClassification>('remoteConnectionLost', {\n\t\t\t\t\t\t\tremoteName: getRemoteName(environmentService.remoteAuthority),\n\t\t\t\t\t\t\treconnectionToken: e.reconnectionToken,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (visibleProgress || e.millisSinceLastIncomingData > DISCONNECT_PROMPT_TIME) {\n\t\t\t\t\t\t\tif (!visibleProgress) {\n\t\t\t\t\t\t\t\tvisibleProgress = showProgress(null, [reconnectButton, reloadButton]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvisibleProgress.report(nls.localize('connectionLost', \"Connection Lost\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PersistentConnectionEventType.ReconnectionWait:\n\t\t\t\t\t\tif (visibleProgress) {\n\t\t\t\t\t\t\treconnectWaitEvent = e;\n\t\t\t\t\t\t\tvisibleProgress = showProgress(null, [reconnectButton, reloadButton]);\n\t\t\t\t\t\t\tvisibleProgress.startTimer(Date.now() + 1000 * e.durationSeconds);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PersistentConnectionEventType.ReconnectionRunning:\n\t\t\t\t\t\treconnectionToken = e.reconnectionToken;\n\t\t\t\t\t\tlastIncomingDataTime = Date.now() - e.millisSinceLastIncomingData;\n\t\t\t\t\t\treconnectionAttempts = e.attempt;\n\n\t\t\t\t\t\ttype RemoteReconnectionRunningClassification = {\n\t\t\t\t\t\t\towner: 'alexdima';\n\t\t\t\t\t\t\tcomment: 'The remote connection state is now `ReconnectionRunning`';\n\t\t\t\t\t\t\tremoteName: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The name of the resolver.' };\n\t\t\t\t\t\t\treconnectionToken: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The identifier of the connection.' };\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Elapsed time (in ms) since data was last received.' };\n\t\t\t\t\t\t\tattempt: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The reconnection attempt counter.' };\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype RemoteReconnectionRunningEvent = {\n\t\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: number;\n\t\t\t\t\t\t\tattempt: number;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttelemetryService.publicLog2<RemoteReconnectionRunningEvent, RemoteReconnectionRunningClassification>('remoteReconnectionRunning', {\n\t\t\t\t\t\t\tremoteName: getRemoteName(environmentService.remoteAuthority),\n\t\t\t\t\t\t\treconnectionToken: e.reconnectionToken,\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: e.millisSinceLastIncomingData,\n\t\t\t\t\t\t\tattempt: e.attempt\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (visibleProgress || e.millisSinceLastIncomingData > DISCONNECT_PROMPT_TIME) {\n\t\t\t\t\t\t\tvisibleProgress = showProgress(null, [reloadButton]);\n\t\t\t\t\t\t\tvisibleProgress.report(nls.localize('reconnectionRunning', \"Disconnected. Attempting to reconnect...\"));\n\n\t\t\t\t\t\t\t// Register to listen for quick input is opened\n\t\t\t\t\t\t\tdisposableListener = quickInputService.onShow(() => {\n\t\t\t\t\t\t\t\t// Need to move from dialog if being shown and user needs to type in a prompt\n\t\t\t\t\t\t\t\tif (visibleProgress && visibleProgress.location === ProgressLocation.Dialog) {\n\t\t\t\t\t\t\t\t\tvisibleProgress = showProgress(ProgressLocation.Notification, [reloadButton], visibleProgress.lastReport);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PersistentConnectionEventType.ReconnectionPermanentFailure:\n\t\t\t\t\t\treconnectionToken = e.reconnectionToken;\n\t\t\t\t\t\tlastIncomingDataTime = Date.now() - e.millisSinceLastIncomingData;\n\t\t\t\t\t\treconnectionAttempts = e.attempt;\n\n\t\t\t\t\t\ttype RemoteReconnectionPermanentFailureClassification = {\n\t\t\t\t\t\t\towner: 'alexdima';\n\t\t\t\t\t\t\tcomment: 'The remote connection state is now `ReconnectionPermanentFailure`';\n\t\t\t\t\t\t\tremoteName: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The name of the resolver.' };\n\t\t\t\t\t\t\treconnectionToken: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The identifier of the connection.' };\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Elapsed time (in ms) since data was last received.' };\n\t\t\t\t\t\t\tattempt: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The reconnection attempt counter.' };\n\t\t\t\t\t\t\thandled: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The error was handled by the resolver.' };\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype RemoteReconnectionPermanentFailureEvent = {\n\t\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: number;\n\t\t\t\t\t\t\tattempt: number;\n\t\t\t\t\t\t\thandled: boolean;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttelemetryService.publicLog2<RemoteReconnectionPermanentFailureEvent, RemoteReconnectionPermanentFailureClassification>('remoteReconnectionPermanentFailure', {\n\t\t\t\t\t\t\tremoteName: getRemoteName(environmentService.remoteAuthority),\n\t\t\t\t\t\t\treconnectionToken: e.reconnectionToken,\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: e.millisSinceLastIncomingData,\n\t\t\t\t\t\t\tattempt: e.attempt,\n\t\t\t\t\t\t\thandled: e.handled\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\thideProgress();\n\n\t\t\t\t\t\tif (e.handled) {\n\t\t\t\t\t\t\tlogService.info(`Error handled: Not showing a notification for the error.`);\n\t\t\t\t\t\t\tconsole.log(`Error handled: Not showing a notification for the error.`);\n\t\t\t\t\t\t} else if (!this._reloadWindowShown) {\n\t\t\t\t\t\t\tthis._reloadWindowShown = true;\n\t\t\t\t\t\t\tdialogService.confirm({\n\t\t\t\t\t\t\t\ttype: Severity.Error,\n\t\t\t\t\t\t\t\tmessage: nls.localize('reconnectionPermanentFailure', \"Cannot reconnect. Please reload the window.\"),\n\t\t\t\t\t\t\t\tprimaryButton: nls.localize({ key: 'reloadWindow.dialog', comment: ['&& denotes a mnemonic'] }, \"&&Reload Window\")\n\t\t\t\t\t\t\t}).then(result => {\n\t\t\t\t\t\t\t\tif (result.confirmed) {\n\t\t\t\t\t\t\t\t\tcommandService.executeCommand(ReloadWindowAction.ID);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PersistentConnectionEventType.ConnectionGain:\n\t\t\t\t\t\treconnectionToken = e.reconnectionToken;\n\t\t\t\t\t\tlastIncomingDataTime = Date.now() - e.millisSinceLastIncomingData;\n\t\t\t\t\t\treconnectionAttempts = e.attempt;\n\n\t\t\t\t\t\ttype RemoteConnectionGainClassification = {\n\t\t\t\t\t\t\towner: 'alexdima';\n\t\t\t\t\t\t\tcomment: 'The remote connection state is now `ConnectionGain`';\n\t\t\t\t\t\t\tremoteName: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The name of the resolver.' };\n\t\t\t\t\t\t\treconnectionToken: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The identifier of the connection.' };\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Elapsed time (in ms) since data was last received.' };\n\t\t\t\t\t\t\tattempt: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'The reconnection attempt counter.' };\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttype RemoteConnectionGainEvent = {\n\t\t\t\t\t\t\tremoteName: string | undefined;\n\t\t\t\t\t\t\treconnectionToken: string;\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: number;\n\t\t\t\t\t\t\tattempt: number;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttelemetryService.publicLog2<RemoteConnectionGainEvent, RemoteConnectionGainClassification>('remoteConnectionGain', {\n\t\t\t\t\t\t\tremoteName: getRemoteName(environmentService.remoteAuthority),\n\t\t\t\t\t\t\treconnectionToken: e.reconnectionToken,\n\t\t\t\t\t\t\tmillisSinceLastIncomingData: e.millisSinceLastIncomingData,\n\t\t\t\t\t\t\tattempt: e.attempt\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\thideProgress();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n"]}