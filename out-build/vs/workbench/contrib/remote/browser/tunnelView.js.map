{"version":3,"sources":["vs/workbench/contrib/remote/browser/tunnelView.ts"],"names":[],"mappings":"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","file":"tunnelView.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/tunnelView';\nimport * as nls from 'vs/nls';\nimport * as dom from 'vs/base/browser/dom';\nimport { IViewDescriptor, IEditableData, IViewsService, IViewDescriptorService } from 'vs/workbench/common/views';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IContextMenuService, IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IContextKeyService, IContextKey, RawContextKey, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IQuickInputService, IQuickPickItem, QuickPickInput } from 'vs/platform/quickinput/common/quickInput';\nimport { ICommandService, ICommandHandler, CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { Disposable, IDisposable, toDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IconLabel } from 'vs/base/browser/ui/iconLabel/iconLabel';\nimport { ActionRunner, IAction } from 'vs/base/common/actions';\nimport { IMenuService, MenuId, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { ILocalizedString } from 'vs/platform/action/common/action';\nimport { createAndFillInActionBarActions, createActionViewItem } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { IRemoteExplorerService, TunnelType, ITunnelItem, TUNNEL_VIEW_ID, TunnelEditId } from 'vs/workbench/services/remote/common/remoteExplorerService';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { InputBox, MessageType } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { once } from 'vs/base/common/functional';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { ViewPane, IViewPaneOptions } from 'vs/workbench/browser/parts/views/viewPane';\nimport { URI } from 'vs/base/common/uri';\nimport { isAllInterfaces, isLocalhost, ITunnelService, RemoteTunnel, TunnelPrivacyId, TunnelProtocol } from 'vs/platform/tunnel/common/tunnel';\nimport { TunnelPrivacy } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ActionViewItem } from 'vs/base/browser/ui/actionbar/actionViewItems';\nimport { copyAddressIcon, forwardedPortWithoutProcessIcon, forwardedPortWithProcessIcon, forwardPortIcon, labelPortIcon, openBrowserIcon, openPreviewIcon, portsViewIcon, privatePortIcon, stopForwardIcon } from 'vs/workbench/contrib/remote/browser/remoteIcons';\nimport { IExternalUriOpenerService } from 'vs/workbench/contrib/externalUriOpener/common/externalUriOpenerService';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { ITableColumn, ITableContextMenuEvent, ITableEvent, ITableMouseEvent, ITableRenderer, ITableVirtualDelegate } from 'vs/base/browser/ui/table/table';\nimport { WorkbenchTable } from 'vs/platform/list/browser/listService';\nimport { Button } from 'vs/base/browser/ui/button/button';\nimport { registerColor } from 'vs/platform/theme/common/colorRegistry';\nimport { IMarkdownString, MarkdownString } from 'vs/base/common/htmlContent';\nimport { IHoverDelegateOptions } from 'vs/base/browser/ui/iconLabel/iconHoverDelegate';\nimport { IHoverService } from 'vs/workbench/services/hover/browser/hover';\nimport { STATUS_BAR_REMOTE_ITEM_BACKGROUND } from 'vs/workbench/common/theme';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { defaultButtonStyles, defaultInputBoxStyles } from 'vs/platform/theme/browser/defaultStyles';\nimport { Attributes, CandidatePort, Tunnel, TunnelCloseReason, TunnelModel, TunnelSource, forwardedPortsViewEnabled, makeAddress, mapHasAddressLocalhostOrAllInterfaces, parseAddress } from 'vs/workbench/services/remote/common/tunnelModel';\n\nexport const openPreviewEnabledContext = new RawContextKey<boolean>('openPreviewEnabled', false);\n\nclass TunnelTreeVirtualDelegate implements ITableVirtualDelegate<ITunnelItem> {\n\n\treadonly headerRowHeight: number = 22;\n\n\tconstructor(private readonly remoteExplorerService: IRemoteExplorerService) { }\n\n\tgetHeight(row: ITunnelItem): number {\n\t\treturn (row.tunnelType === TunnelType.Add && !this.remoteExplorerService.getEditableData(undefined)) ? 30 : 22;\n\t}\n}\n\ninterface ITunnelViewModel {\n\treadonly onForwardedPortsChanged: Event<void>;\n\treadonly all: TunnelItem[];\n\treadonly input: TunnelItem;\n\tisEmpty(): boolean;\n}\n\nexport class TunnelViewModel implements ITunnelViewModel {\n\n\treadonly onForwardedPortsChanged: Event<void>;\n\tprivate model: TunnelModel;\n\tprivate _candidates: Map<string, CandidatePort> = new Map();\n\n\treadonly input = {\n\t\tlabel: nls.localize('remote.tunnelsView.addPort', \"Add Port\"),\n\t\ticon: undefined,\n\t\ttunnelType: TunnelType.Add,\n\t\thasRunningProcess: false,\n\t\tremoteHost: '',\n\t\tremotePort: 0,\n\t\tprocessDescription: '',\n\t\ttooltipPostfix: '',\n\t\ticonTooltip: '',\n\t\tportTooltip: '',\n\t\tprocessTooltip: '',\n\t\toriginTooltip: '',\n\t\tprivacyTooltip: '',\n\t\tsource: { source: TunnelSource.User, description: '' },\n\t\tprotocol: TunnelProtocol.Http,\n\t\tprivacy: {\n\t\t\tid: TunnelPrivacyId.Private,\n\t\t\tthemeIcon: privatePortIcon.id,\n\t\t\tlabel: nls.localize('tunnelPrivacy.private', \"Private\")\n\t\t},\n\t\tstrip: () => undefined\n\t};\n\n\tconstructor(\n\t\t@IRemoteExplorerService private readonly remoteExplorerService: IRemoteExplorerService,\n\t\t@ITunnelService private readonly tunnelService: ITunnelService\n\t) {\n\t\tthis.model = remoteExplorerService.tunnelModel;\n\t\tthis.onForwardedPortsChanged = Event.any(this.model.onForwardPort, this.model.onClosePort, this.model.onPortName, this.model.onCandidatesChanged);\n\t}\n\n\tget all(): TunnelItem[] {\n\t\tconst result: TunnelItem[] = [];\n\t\tthis._candidates = new Map();\n\t\tthis.model.candidates.forEach(candidate => {\n\t\t\tthis._candidates.set(makeAddress(candidate.host, candidate.port), candidate);\n\t\t});\n\t\tif ((this.model.forwarded.size > 0) || this.remoteExplorerService.getEditableData(undefined)) {\n\t\t\tresult.push(...this.forwarded);\n\t\t}\n\t\tif (this.model.detected.size > 0) {\n\t\t\tresult.push(...this.detected);\n\t\t}\n\n\t\tresult.push(this.input);\n\t\treturn result;\n\t}\n\n\tprivate addProcessInfoFromCandidate(tunnelItem: ITunnelItem) {\n\t\tconst key = makeAddress(tunnelItem.remoteHost, tunnelItem.remotePort);\n\t\tif (this._candidates.has(key)) {\n\t\t\ttunnelItem.processDescription = this._candidates.get(key)!.detail;\n\t\t}\n\t}\n\n\tprivate get forwarded(): TunnelItem[] {\n\t\tconst forwarded = Array.from(this.model.forwarded.values()).map(tunnel => {\n\t\t\tconst tunnelItem = TunnelItem.createFromTunnel(this.remoteExplorerService, this.tunnelService, tunnel);\n\t\t\tthis.addProcessInfoFromCandidate(tunnelItem);\n\t\t\treturn tunnelItem;\n\t\t}).sort((a: TunnelItem, b: TunnelItem) => {\n\t\t\tif (a.remotePort === b.remotePort) {\n\t\t\t\treturn a.remoteHost < b.remoteHost ? -1 : 1;\n\t\t\t} else {\n\t\t\t\treturn a.remotePort < b.remotePort ? -1 : 1;\n\t\t\t}\n\t\t});\n\t\treturn forwarded;\n\t}\n\n\tprivate get detected(): TunnelItem[] {\n\t\treturn Array.from(this.model.detected.values()).map(tunnel => {\n\t\t\tconst tunnelItem = TunnelItem.createFromTunnel(this.remoteExplorerService, this.tunnelService, tunnel, TunnelType.Detected, false);\n\t\t\tthis.addProcessInfoFromCandidate(tunnelItem);\n\t\t\treturn tunnelItem;\n\t\t});\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn (this.detected.length === 0) &&\n\t\t\t((this.forwarded.length === 0) || (this.forwarded.length === 1 &&\n\t\t\t\t(this.forwarded[0].tunnelType === TunnelType.Add) && !this.remoteExplorerService.getEditableData(undefined)));\n\t}\n}\n\nfunction emptyCell(item: ITunnelItem): ActionBarCell {\n\treturn { label: '', tunnel: item, editId: TunnelEditId.None, tooltip: '' };\n}\n\nclass IconColumn implements ITableColumn<ITunnelItem, ActionBarCell> {\n\treadonly label: string = '';\n\treadonly tooltip: string = '';\n\treadonly weight: number = 1;\n\treadonly minimumWidth = 40;\n\treadonly maximumWidth = 40;\n\treadonly templateId: string = 'actionbar';\n\tproject(row: ITunnelItem): ActionBarCell {\n\t\tif (row.tunnelType === TunnelType.Add) {\n\t\t\treturn emptyCell(row);\n\t\t}\n\n\t\tconst icon = row.processDescription ? forwardedPortWithProcessIcon : forwardedPortWithoutProcessIcon;\n\t\tlet tooltip: string = '';\n\t\tif (row instanceof TunnelItem) {\n\t\t\ttooltip = `${row.iconTooltip} ${row.tooltipPostfix}`;\n\t\t}\n\t\treturn {\n\t\t\tlabel: '', icon, tunnel: row, editId: TunnelEditId.None, tooltip\n\t\t};\n\t}\n}\n\nclass PortColumn implements ITableColumn<ITunnelItem, ActionBarCell> {\n\treadonly label: string = nls.localize('tunnel.portColumn.label', \"Port\");\n\treadonly tooltip: string = nls.localize('tunnel.portColumn.tooltip', \"The label and remote port number of the forwarded port.\");\n\treadonly weight: number = 1;\n\treadonly templateId: string = 'actionbar';\n\tproject(row: ITunnelItem): ActionBarCell {\n\t\tconst isAdd = row.tunnelType === TunnelType.Add;\n\t\tconst label = row.label;\n\t\tlet tooltip: string = '';\n\t\tif (row instanceof TunnelItem && !isAdd) {\n\t\t\ttooltip = `${row.portTooltip} ${row.tooltipPostfix}`;\n\t\t} else {\n\t\t\ttooltip = label;\n\t\t}\n\t\treturn {\n\t\t\tlabel, tunnel: row, menuId: MenuId.TunnelPortInline,\n\t\t\teditId: row.tunnelType === TunnelType.Add ? TunnelEditId.New : TunnelEditId.Label, tooltip\n\t\t};\n\t}\n}\n\nclass LocalAddressColumn implements ITableColumn<ITunnelItem, ActionBarCell> {\n\treadonly label: string = nls.localize('tunnel.addressColumn.label', \"Forwarded Address\");\n\treadonly tooltip: string = nls.localize('tunnel.addressColumn.tooltip', \"The address that the forwarded port is available at.\");\n\treadonly weight: number = 1;\n\treadonly templateId: string = 'actionbar';\n\tproject(row: ITunnelItem): ActionBarCell {\n\t\tif (row.tunnelType === TunnelType.Add) {\n\t\t\treturn emptyCell(row);\n\t\t}\n\n\t\tconst label = row.localAddress ?? '';\n\t\tlet tooltip: string = label;\n\t\tif (row instanceof TunnelItem) {\n\t\t\ttooltip = row.tooltipPostfix;\n\t\t}\n\t\treturn {\n\t\t\tlabel,\n\t\t\tmenuId: MenuId.TunnelLocalAddressInline,\n\t\t\ttunnel: row,\n\t\t\teditId: TunnelEditId.LocalPort,\n\t\t\ttooltip,\n\t\t\tmarkdownTooltip: label ? LocalAddressColumn.getHoverText(label) : undefined\n\t\t};\n\t}\n\n\tprivate static getHoverText(localAddress: string) {\n\t\treturn function (configurationService: IConfigurationService) {\n\t\t\tconst editorConf = configurationService.getValue<{ multiCursorModifier: 'ctrlCmd' | 'alt' }>('editor');\n\n\t\t\tlet clickLabel = '';\n\t\t\tif (editorConf.multiCursorModifier === 'ctrlCmd') {\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\tclickLabel = nls.localize('portsLink.followLinkAlt.mac', \"option + click\");\n\t\t\t\t} else {\n\t\t\t\t\tclickLabel = nls.localize('portsLink.followLinkAlt', \"alt + click\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\tclickLabel = nls.localize('portsLink.followLinkCmd', \"cmd + click\");\n\t\t\t\t} else {\n\t\t\t\t\tclickLabel = nls.localize('portsLink.followLinkCtrl', \"ctrl + click\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markdown = new MarkdownString('', true);\n\t\t\tconst uri = localAddress.startsWith('http') ? localAddress : `http://${localAddress}`;\n\t\t\treturn markdown.appendLink(uri, 'Follow link').appendMarkdown(` (${clickLabel})`);\n\t\t};\n\t}\n}\n\nclass RunningProcessColumn implements ITableColumn<ITunnelItem, ActionBarCell> {\n\treadonly label: string = nls.localize('tunnel.processColumn.label', \"Running Process\");\n\treadonly tooltip: string = nls.localize('tunnel.processColumn.tooltip', \"The command line of the process that is using the port.\");\n\treadonly weight: number = 2;\n\treadonly templateId: string = 'actionbar';\n\tproject(row: ITunnelItem): ActionBarCell {\n\t\tif (row.tunnelType === TunnelType.Add) {\n\t\t\treturn emptyCell(row);\n\t\t}\n\n\t\tconst label = row.processDescription ?? '';\n\t\treturn { label, tunnel: row, editId: TunnelEditId.None, tooltip: row instanceof TunnelItem ? row.processTooltip : '' };\n\t}\n}\n\nclass OriginColumn implements ITableColumn<ITunnelItem, ActionBarCell> {\n\treadonly label: string = nls.localize('tunnel.originColumn.label', \"Origin\");\n\treadonly tooltip: string = nls.localize('tunnel.originColumn.tooltip', \"The source that a forwarded port originates from. Can be an extension, user forwarded, statically forwarded, or automatically forwarded.\");\n\treadonly weight: number = 1;\n\treadonly templateId: string = 'actionbar';\n\tproject(row: ITunnelItem): ActionBarCell {\n\t\tif (row.tunnelType === TunnelType.Add) {\n\t\t\treturn emptyCell(row);\n\t\t}\n\n\t\tconst label = row.source.description;\n\t\tconst tooltip = `${row instanceof TunnelItem ? row.originTooltip : ''}. ${row instanceof TunnelItem ? row.tooltipPostfix : ''}`;\n\t\treturn { label, menuId: MenuId.TunnelOriginInline, tunnel: row, editId: TunnelEditId.None, tooltip };\n\t}\n}\n\nclass PrivacyColumn implements ITableColumn<ITunnelItem, ActionBarCell> {\n\treadonly label: string = nls.localize('tunnel.privacyColumn.label', \"Visibility\");\n\treadonly tooltip: string = nls.localize('tunnel.privacyColumn.tooltip', \"The availability of the forwarded port.\");\n\treadonly weight: number = 1;\n\treadonly templateId: string = 'actionbar';\n\tproject(row: ITunnelItem): ActionBarCell {\n\t\tif (row.tunnelType === TunnelType.Add) {\n\t\t\treturn emptyCell(row);\n\t\t}\n\n\t\tconst label = row.privacy?.label;\n\t\tlet tooltip: string = '';\n\t\tif (row instanceof TunnelItem) {\n\t\t\ttooltip = `${row.privacy.label} ${row.tooltipPostfix}`;\n\t\t}\n\t\treturn { label, tunnel: row, icon: { id: row.privacy.themeIcon }, editId: TunnelEditId.None, tooltip };\n\t}\n}\n\ninterface IActionBarTemplateData {\n\telementDisposable: IDisposable;\n\tcontainer: HTMLElement;\n\tlabel: IconLabel;\n\tbutton?: Button;\n\ticon: HTMLElement;\n\tactionBar: ActionBar;\n}\n\ninterface ActionBarCell {\n\tlabel: string;\n\ticon?: ThemeIcon;\n\ttooltip: string;\n\tmarkdownTooltip?: (configurationService: IConfigurationService) => IMarkdownString;\n\tmenuId?: MenuId;\n\ttunnel: ITunnelItem;\n\teditId: TunnelEditId;\n}\n\nclass ActionBarRenderer extends Disposable implements ITableRenderer<ActionBarCell, IActionBarTemplateData> {\n\treadonly templateId = 'actionbar';\n\tprivate inputDone?: (success: boolean, finishEditing: boolean) => void;\n\tprivate _actionRunner: ActionRunner | undefined;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IRemoteExplorerService private readonly remoteExplorerService: IRemoteExplorerService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IHoverService private readonly hoverService: IHoverService\n\t) { super(); }\n\n\tset actionRunner(actionRunner: ActionRunner) {\n\t\tthis._actionRunner = actionRunner;\n\t}\n\n\trenderTemplate(container: HTMLElement): IActionBarTemplateData {\n\t\tconst cell = dom.append(container, dom.$('.ports-view-actionbar-cell'));\n\t\tconst icon = dom.append(cell, dom.$('.ports-view-actionbar-cell-icon'));\n\t\tconst label = new IconLabel(cell,\n\t\t\t{\n\t\t\t\tsupportHighlights: true,\n\t\t\t\thoverDelegate: {\n\t\t\t\t\tshowHover: (options: IHoverDelegateOptions) => this.hoverService.showHover(options),\n\t\t\t\t\tdelay: <number>this.configurationService.getValue('workbench.hover.delay')\n\t\t\t\t}\n\t\t\t});\n\t\tconst actionsContainer = dom.append(cell, dom.$('.actions'));\n\t\tconst actionBar = new ActionBar(actionsContainer, {\n\t\t\tactionViewItemProvider: createActionViewItem.bind(undefined, this.instantiationService)\n\t\t});\n\t\treturn { label, icon, actionBar, container: cell, elementDisposable: Disposable.None };\n\t}\n\n\trenderElement(element: ActionBarCell, index: number, templateData: IActionBarTemplateData): void {\n\t\t// reset\n\t\ttemplateData.actionBar.clear();\n\t\ttemplateData.icon.className = 'ports-view-actionbar-cell-icon';\n\t\ttemplateData.icon.style.display = 'none';\n\t\ttemplateData.label.setLabel('');\n\t\ttemplateData.label.element.style.display = 'none';\n\t\ttemplateData.container.style.height = '22px';\n\t\tif (templateData.button) {\n\t\t\ttemplateData.button.element.style.display = 'none';\n\t\t\ttemplateData.button.dispose();\n\t\t}\n\t\ttemplateData.container.style.paddingLeft = '0px';\n\t\ttemplateData.elementDisposable.dispose();\n\n\t\tlet editableData: IEditableData | undefined;\n\t\tif (element.editId === TunnelEditId.New && (editableData = this.remoteExplorerService.getEditableData(undefined))) {\n\t\t\tthis.renderInputBox(templateData.container, editableData);\n\t\t} else {\n\t\t\teditableData = this.remoteExplorerService.getEditableData(element.tunnel, element.editId);\n\t\t\tif (editableData) {\n\t\t\t\tthis.renderInputBox(templateData.container, editableData);\n\t\t\t} else if ((element.tunnel.tunnelType === TunnelType.Add) && (element.menuId === MenuId.TunnelPortInline)) {\n\t\t\t\tthis.renderButton(element, templateData);\n\t\t\t} else {\n\t\t\t\tthis.renderActionBarItem(element, templateData);\n\t\t\t}\n\t\t}\n\t}\n\n\trenderButton(element: ActionBarCell, templateData: IActionBarTemplateData): void {\n\t\ttemplateData.container.style.paddingLeft = '7px';\n\t\ttemplateData.container.style.height = '28px';\n\t\ttemplateData.button = this._register(new Button(templateData.container, defaultButtonStyles));\n\t\ttemplateData.button.label = element.label;\n\t\ttemplateData.button.element.title = element.tooltip;\n\t\tthis._register(templateData.button.onDidClick(() => {\n\t\t\tthis.commandService.executeCommand(ForwardPortAction.INLINE_ID);\n\t\t}));\n\t}\n\n\tprivate tunnelContext(tunnel: ITunnelItem): ITunnelItem {\n\t\tlet context: ITunnelItem | undefined;\n\t\tif (tunnel instanceof TunnelItem) {\n\t\t\tcontext = tunnel.strip();\n\t\t}\n\t\tif (!context) {\n\t\t\tcontext = {\n\t\t\t\ttunnelType: tunnel.tunnelType,\n\t\t\t\tremoteHost: tunnel.remoteHost,\n\t\t\t\tremotePort: tunnel.remotePort,\n\t\t\t\tlocalAddress: tunnel.localAddress,\n\t\t\t\tprotocol: tunnel.protocol,\n\t\t\t\tlocalUri: tunnel.localUri,\n\t\t\t\tlocalPort: tunnel.localPort,\n\t\t\t\tname: tunnel.name,\n\t\t\t\tcloseable: tunnel.closeable,\n\t\t\t\tsource: tunnel.source,\n\t\t\t\tprivacy: tunnel.privacy,\n\t\t\t\tprocessDescription: tunnel.processDescription,\n\t\t\t\tlabel: tunnel.label\n\t\t\t};\n\t\t}\n\t\treturn context;\n\t}\n\n\trenderActionBarItem(element: ActionBarCell, templateData: IActionBarTemplateData): void {\n\t\ttemplateData.label.element.style.display = 'flex';\n\t\ttemplateData.label.setLabel(element.label, undefined,\n\t\t\t{\n\t\t\t\ttitle: element.markdownTooltip ?\n\t\t\t\t\t{ markdown: element.markdownTooltip(this.configurationService), markdownNotSupportedFallback: element.tooltip }\n\t\t\t\t\t: element.tooltip,\n\t\t\t\textraClasses: element.menuId === MenuId.TunnelLocalAddressInline ? ['ports-view-actionbar-cell-localaddress'] : undefined\n\t\t\t});\n\t\ttemplateData.actionBar.context = this.tunnelContext(element.tunnel);\n\t\ttemplateData.container.style.paddingLeft = '10px';\n\t\tconst context: [string, any][] =\n\t\t\t[\n\t\t\t\t['view', TUNNEL_VIEW_ID],\n\t\t\t\t[TunnelTypeContextKey.key, element.tunnel.tunnelType],\n\t\t\t\t[TunnelCloseableContextKey.key, element.tunnel.closeable],\n\t\t\t\t[TunnelPrivacyContextKey.key, element.tunnel.privacy.id],\n\t\t\t\t[TunnelProtocolContextKey.key, element.tunnel.protocol]\n\t\t\t];\n\t\tconst contextKeyService = this.contextKeyService.createOverlay(context);\n\t\tconst disposableStore = new DisposableStore();\n\t\ttemplateData.elementDisposable = disposableStore;\n\t\tif (element.menuId) {\n\t\t\tconst menu = disposableStore.add(this.menuService.createMenu(element.menuId, contextKeyService));\n\t\t\tlet actions: IAction[] = [];\n\t\t\tcreateAndFillInActionBarActions(menu, { shouldForwardArgs: true }, actions);\n\t\t\tif (actions) {\n\t\t\t\tconst labelActions = actions.filter(action => action.id.toLowerCase().indexOf('label') >= 0);\n\t\t\t\tif (labelActions.length > 1) {\n\t\t\t\t\tlabelActions.sort((a, b) => a.label.length - b.label.length);\n\t\t\t\t\tlabelActions.pop();\n\t\t\t\t\tactions = actions.filter(action => labelActions.indexOf(action) < 0);\n\t\t\t\t}\n\t\t\t\ttemplateData.actionBar.push(actions, { icon: true, label: false });\n\t\t\t\tif (this._actionRunner) {\n\t\t\t\t\ttemplateData.actionBar.actionRunner = this._actionRunner;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (element.icon) {\n\t\t\ttemplateData.icon.className = `ports-view-actionbar-cell-icon ${ThemeIcon.asClassName(element.icon)}`;\n\t\t\ttemplateData.icon.title = element.tooltip;\n\t\t\ttemplateData.icon.style.display = 'inline';\n\t\t}\n\t}\n\n\tprivate renderInputBox(container: HTMLElement, editableData: IEditableData): IDisposable {\n\t\t// Required for FireFox. The blur event doesn't fire on FireFox when you just mash the \"+\" button to forward a port.\n\t\tif (this.inputDone) {\n\t\t\tthis.inputDone(false, false);\n\t\t\tthis.inputDone = undefined;\n\t\t}\n\t\tcontainer.style.paddingLeft = '5px';\n\t\tconst value = editableData.startingValue || '';\n\t\tconst inputBox = new InputBox(container, this.contextViewService, {\n\t\t\tariaLabel: nls.localize('remote.tunnelsView.input', \"Press Enter to confirm or Escape to cancel.\"),\n\t\t\tvalidationOptions: {\n\t\t\t\tvalidation: (value) => {\n\t\t\t\t\tconst message = editableData.validationMessage(value);\n\t\t\t\t\tif (!message) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcontent: message.content,\n\t\t\t\t\t\tformatContent: true,\n\t\t\t\t\t\ttype: message.severity === Severity.Error ? MessageType.ERROR : MessageType.INFO\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t\tplaceholder: editableData.placeholder || '',\n\t\t\tinputBoxStyles: defaultInputBoxStyles\n\t\t});\n\t\tinputBox.value = value;\n\t\tinputBox.focus();\n\t\tinputBox.select({ start: 0, end: editableData.startingValue ? editableData.startingValue.length : 0 });\n\n\t\tconst done = once(async (success: boolean, finishEditing: boolean) => {\n\t\t\tdispose(toDispose);\n\t\t\tif (this.inputDone) {\n\t\t\t\tthis.inputDone = undefined;\n\t\t\t}\n\t\t\tinputBox.element.style.display = 'none';\n\t\t\tconst inputValue = inputBox.value;\n\t\t\tif (finishEditing) {\n\t\t\t\treturn editableData.onFinish(inputValue, success);\n\t\t\t}\n\t\t});\n\t\tthis.inputDone = done;\n\n\t\tconst toDispose = [\n\t\t\tinputBox,\n\t\t\tdom.addStandardDisposableListener(inputBox.inputElement, dom.EventType.KEY_DOWN, async (e: IKeyboardEvent) => {\n\t\t\t\tif (e.equals(KeyCode.Enter)) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tif (inputBox.validate() !== MessageType.ERROR) {\n\t\t\t\t\t\treturn done(true, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn done(false, true);\n\t\t\t\t\t}\n\t\t\t\t} else if (e.equals(KeyCode.Escape)) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\treturn done(false, true);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tdom.addDisposableListener(inputBox.inputElement, dom.EventType.BLUR, () => {\n\t\t\t\treturn done(inputBox.validate() !== MessageType.ERROR, true);\n\t\t\t})\n\t\t];\n\n\t\treturn toDisposable(() => {\n\t\t\tdone(false, false);\n\t\t});\n\t}\n\n\tdisposeElement(element: ActionBarCell, index: number, templateData: IActionBarTemplateData, height: number | undefined) {\n\t\ttemplateData.elementDisposable.dispose();\n\t}\n\n\tdisposeTemplate(templateData: IActionBarTemplateData): void {\n\t\ttemplateData.label.dispose();\n\t\ttemplateData.actionBar.dispose();\n\t\ttemplateData.elementDisposable.dispose();\n\t\ttemplateData.button?.dispose();\n\t}\n}\n\nclass TunnelItem implements ITunnelItem {\n\tstatic createFromTunnel(remoteExplorerService: IRemoteExplorerService, tunnelService: ITunnelService,\n\t\ttunnel: Tunnel, type: TunnelType = TunnelType.Forwarded, closeable?: boolean) {\n\t\treturn new TunnelItem(type,\n\t\t\ttunnel.remoteHost,\n\t\t\ttunnel.remotePort,\n\t\t\ttunnel.source,\n\t\t\t!!tunnel.hasRunningProcess,\n\t\t\ttunnel.protocol,\n\t\t\ttunnel.localUri,\n\t\t\ttunnel.localAddress,\n\t\t\ttunnel.localPort,\n\t\t\tcloseable === undefined ? tunnel.closeable : closeable,\n\t\t\ttunnel.name,\n\t\t\ttunnel.runningProcess,\n\t\t\ttunnel.pid,\n\t\t\ttunnel.privacy,\n\t\t\tremoteExplorerService,\n\t\t\ttunnelService);\n\t}\n\n\t/**\n\t * Removes all non-serializable properties from the tunnel\n\t * @returns A new TunnelItem without any services\n\t */\n\tpublic strip(): TunnelItem | undefined {\n\t\treturn new TunnelItem(\n\t\t\tthis.tunnelType,\n\t\t\tthis.remoteHost,\n\t\t\tthis.remotePort,\n\t\t\tthis.source,\n\t\t\tthis.hasRunningProcess,\n\t\t\tthis.protocol,\n\t\t\tthis.localUri,\n\t\t\tthis.localAddress,\n\t\t\tthis.localPort,\n\t\t\tthis.closeable,\n\t\t\tthis.name,\n\t\t\tthis.runningProcess,\n\t\t\tthis.pid,\n\t\t\tthis._privacy\n\t\t);\n\t}\n\n\tconstructor(\n\t\tpublic tunnelType: TunnelType,\n\t\tpublic remoteHost: string,\n\t\tpublic remotePort: number,\n\t\tpublic source: { source: TunnelSource; description: string },\n\t\tpublic hasRunningProcess: boolean,\n\t\tpublic protocol: TunnelProtocol,\n\t\tpublic localUri?: URI,\n\t\tpublic localAddress?: string,\n\t\tpublic localPort?: number,\n\t\tpublic closeable?: boolean,\n\t\tpublic name?: string,\n\t\tprivate runningProcess?: string,\n\t\tprivate pid?: number,\n\t\tprivate _privacy?: TunnelPrivacyId | string,\n\t\tprivate remoteExplorerService?: IRemoteExplorerService,\n\t\tprivate tunnelService?: ITunnelService\n\t) { }\n\n\tget label(): string {\n\t\tif (this.tunnelType === TunnelType.Add && this.name) {\n\t\t\treturn this.name;\n\t\t}\n\t\tconst portNumberLabel = (isLocalhost(this.remoteHost) || isAllInterfaces(this.remoteHost))\n\t\t\t? `${this.remotePort}`\n\t\t\t: `${this.remoteHost}:${this.remotePort}`;\n\t\tif (this.name) {\n\t\t\treturn `${this.name} (${portNumberLabel})`;\n\t\t} else {\n\t\t\treturn portNumberLabel;\n\t\t}\n\t}\n\n\tset processDescription(description: string | undefined) {\n\t\tthis.runningProcess = description;\n\t}\n\n\tget processDescription(): string | undefined {\n\t\tlet description: string = '';\n\t\tif (this.runningProcess) {\n\t\t\tif (this.pid && this.remoteExplorerService?.namedProcesses.has(this.pid)) {\n\t\t\t\t// This is a known process. Give it a friendly name.\n\t\t\t\tdescription = this.remoteExplorerService.namedProcesses.get(this.pid)!;\n\t\t\t} else {\n\t\t\t\tdescription = this.runningProcess.replace(/\\0/g, ' ').trim();\n\t\t\t}\n\t\t\tif (this.pid) {\n\t\t\t\tdescription += ` (${this.pid})`;\n\t\t\t}\n\t\t} else if (this.hasRunningProcess) {\n\t\t\tdescription = nls.localize('tunnelView.runningProcess.inacessable', \"Process information unavailable\");\n\t\t}\n\n\t\treturn description;\n\t}\n\n\tget tooltipPostfix(): string {\n\t\tlet information: string;\n\t\tif (this.localAddress) {\n\t\t\tinformation = nls.localize('remote.tunnel.tooltipForwarded', \"Remote port {0}:{1} forwarded to local address {2}. \", this.remoteHost, this.remotePort, this.localAddress);\n\t\t} else {\n\t\t\tinformation = nls.localize('remote.tunnel.tooltipCandidate', \"Remote port {0}:{1} not forwarded. \", this.remoteHost, this.remotePort);\n\t\t}\n\n\t\treturn information;\n\t}\n\n\tget iconTooltip(): string {\n\t\tconst isAdd = this.tunnelType === TunnelType.Add;\n\t\tif (!isAdd) {\n\t\t\treturn `${this.processDescription ? nls.localize('tunnel.iconColumn.running', \"Port has running process.\") :\n\t\t\t\tnls.localize('tunnel.iconColumn.notRunning', \"No running process.\")}`;\n\t\t} else {\n\t\t\treturn this.label;\n\t\t}\n\t}\n\n\tget portTooltip(): string {\n\t\tconst isAdd = this.tunnelType === TunnelType.Add;\n\t\tif (!isAdd) {\n\t\t\treturn `${this.name ? nls.localize('remote.tunnel.tooltipName', \"Port labeled {0}. \", this.name) : ''}`;\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\tget processTooltip(): string {\n\t\treturn this.processDescription ?? '';\n\t}\n\n\tget originTooltip(): string {\n\t\treturn this.source.description;\n\t}\n\n\tget privacy(): TunnelPrivacy {\n\t\tif (this.tunnelService?.privacyOptions) {\n\t\t\treturn this.tunnelService?.privacyOptions.find(element => element.id === this._privacy) ??\n\t\t\t{\n\t\t\t\tid: '',\n\t\t\t\tthemeIcon: Codicon.question.id,\n\t\t\t\tlabel: nls.localize('tunnelPrivacy.unknown', \"Unknown\")\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tid: TunnelPrivacyId.Private,\n\t\t\t\tthemeIcon: privatePortIcon.id,\n\t\t\t\tlabel: nls.localize('tunnelPrivacy.private', \"Private\")\n\t\t\t};\n\t\t}\n\t}\n}\n\nconst TunnelTypeContextKey = new RawContextKey<TunnelType>('tunnelType', TunnelType.Add, true);\nconst TunnelCloseableContextKey = new RawContextKey<boolean>('tunnelCloseable', false, true);\nconst TunnelPrivacyContextKey = new RawContextKey<TunnelPrivacyId | string | undefined>('tunnelPrivacy', undefined, true);\nconst TunnelPrivacyEnabledContextKey = new RawContextKey<boolean>('tunnelPrivacyEnabled', false, true);\nconst TunnelProtocolContextKey = new RawContextKey<TunnelProtocol | undefined>('tunnelProtocol', TunnelProtocol.Http, true);\nconst TunnelViewFocusContextKey = new RawContextKey<boolean>('tunnelViewFocus', false, nls.localize('tunnel.focusContext', \"Whether the Ports view has focus.\"));\nconst TunnelViewSelectionKeyName = 'tunnelViewSelection';\n// host:port\nconst TunnelViewSelectionContextKey = new RawContextKey<string | undefined>(TunnelViewSelectionKeyName, undefined, true);\nconst TunnelViewMultiSelectionKeyName = 'tunnelViewMultiSelection';\n// host:port[]\nconst TunnelViewMultiSelectionContextKey = new RawContextKey<string[] | undefined>(TunnelViewMultiSelectionKeyName, undefined, true);\nconst PortChangableContextKey = new RawContextKey<boolean>('portChangable', false, true);\n\nexport class TunnelPanel extends ViewPane {\n\n\tstatic readonly ID = TUNNEL_VIEW_ID;\n\tstatic readonly TITLE = nls.localize('remote.tunnel', \"Ports\");\n\n\tprivate panelContainer: HTMLElement | undefined;\n\tprivate table!: WorkbenchTable<ITunnelItem>;\n\tprivate tableDisposables: DisposableStore = this._register(new DisposableStore());\n\tprivate tunnelTypeContext: IContextKey<TunnelType>;\n\tprivate tunnelCloseableContext: IContextKey<boolean>;\n\tprivate tunnelPrivacyContext: IContextKey<TunnelPrivacyId | string | undefined>;\n\tprivate tunnelPrivacyEnabledContext: IContextKey<boolean>;\n\tprivate tunnelProtocolContext: IContextKey<TunnelProtocol | undefined>;\n\tprivate tunnelViewFocusContext: IContextKey<boolean>;\n\tprivate tunnelViewSelectionContext: IContextKey<string | undefined>;\n\tprivate tunnelViewMultiSelectionContext: IContextKey<string[] | undefined>;\n\tprivate portChangableContextKey: IContextKey<boolean>;\n\tprivate isEditing: boolean = false;\n\tprivate titleActions: IAction[] = [];\n\tprivate lastFocus: number[] = [];\n\n\tconstructor(\n\t\tprotected viewModel: ITunnelViewModel,\n\t\toptions: IViewPaneOptions,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IQuickInputService protected quickInputService: IQuickInputService,\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IRemoteExplorerService private readonly remoteExplorerService: IRemoteExplorerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ITunnelService private readonly tunnelService: ITunnelService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IHoverService private readonly hoverService: IHoverService\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\t\tthis.tunnelTypeContext = TunnelTypeContextKey.bindTo(contextKeyService);\n\t\tthis.tunnelCloseableContext = TunnelCloseableContextKey.bindTo(contextKeyService);\n\t\tthis.tunnelPrivacyContext = TunnelPrivacyContextKey.bindTo(contextKeyService);\n\t\tthis.tunnelPrivacyEnabledContext = TunnelPrivacyEnabledContextKey.bindTo(contextKeyService);\n\t\tthis.tunnelPrivacyEnabledContext.set(tunnelService.canChangePrivacy);\n\t\tthis.tunnelProtocolContext = TunnelProtocolContextKey.bindTo(contextKeyService);\n\t\tthis.tunnelViewFocusContext = TunnelViewFocusContextKey.bindTo(contextKeyService);\n\t\tthis.tunnelViewSelectionContext = TunnelViewSelectionContextKey.bindTo(contextKeyService);\n\t\tthis.tunnelViewMultiSelectionContext = TunnelViewMultiSelectionContextKey.bindTo(contextKeyService);\n\t\tthis.portChangableContextKey = PortChangableContextKey.bindTo(contextKeyService);\n\n\t\tconst overlayContextKeyService = this.contextKeyService.createOverlay([['view', TunnelPanel.ID]]);\n\t\tconst titleMenu = this._register(this.menuService.createMenu(MenuId.TunnelTitle, overlayContextKeyService));\n\t\tconst updateActions = () => {\n\t\t\tthis.titleActions = [];\n\t\t\tcreateAndFillInActionBarActions(titleMenu, undefined, this.titleActions);\n\t\t\tthis.updateActions();\n\t\t};\n\n\t\tthis._register(titleMenu.onDidChange(updateActions));\n\t\tupdateActions();\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.titleActions = [];\n\t\t}));\n\n\t\tthis.registerPrivacyActions();\n\t\tthis._register(Event.once(this.tunnelService.onAddedTunnelProvider)(() => {\n\t\t\tif (this.tunnelPrivacyEnabledContext.get() === false) {\n\t\t\t\tthis.tunnelPrivacyEnabledContext.set(tunnelService.canChangePrivacy);\n\t\t\t\tupdateActions();\n\t\t\t\tthis.registerPrivacyActions();\n\t\t\t\tthis.createTable();\n\t\t\t\tthis.table.layout(this.height, this.width);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerPrivacyActions() {\n\t\tfor (const privacyOption of this.tunnelService.privacyOptions) {\n\t\t\tconst optionId = `remote.tunnel.privacy${privacyOption.id}`;\n\t\t\tCommandsRegistry.registerCommand(optionId, ChangeTunnelPrivacyAction.handler(privacyOption.id));\n\t\t\tMenuRegistry.appendMenuItem(MenuId.TunnelPrivacy, ({\n\t\t\t\torder: 0,\n\t\t\t\tcommand: {\n\t\t\t\t\tid: optionId,\n\t\t\t\t\ttitle: privacyOption.label,\n\t\t\t\t\ttoggled: TunnelPrivacyContextKey.isEqualTo(privacyOption.id)\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tget portCount(): number {\n\t\treturn this.remoteExplorerService.tunnelModel.forwarded.size + this.remoteExplorerService.tunnelModel.detected.size;\n\t}\n\n\tprivate createTable(): void {\n\t\tif (!this.panelContainer) {\n\t\t\treturn;\n\t\t}\n\t\tthis.tableDisposables.clear();\n\n\t\tdom.clearNode(this.panelContainer);\n\n\t\tconst widgetContainer = dom.append(this.panelContainer, dom.$('.customview-tree'));\n\t\twidgetContainer.classList.add('ports-view');\n\t\twidgetContainer.classList.add('file-icon-themable-tree', 'show-file-icons');\n\n\t\tconst actionBarRenderer = new ActionBarRenderer(this.instantiationService, this.contextKeyService,\n\t\t\tthis.menuService, this.contextViewService, this.remoteExplorerService, this.commandService,\n\t\t\tthis.configurationService, this.hoverService);\n\t\tconst columns = [new IconColumn(), new PortColumn(), new LocalAddressColumn(), new RunningProcessColumn()];\n\t\tif (this.tunnelService.canChangePrivacy) {\n\t\t\tcolumns.push(new PrivacyColumn());\n\t\t}\n\t\tcolumns.push(new OriginColumn());\n\n\t\tthis.table = this.instantiationService.createInstance(WorkbenchTable,\n\t\t\t'RemoteTunnels',\n\t\t\twidgetContainer,\n\t\t\tnew TunnelTreeVirtualDelegate(this.remoteExplorerService),\n\t\t\tcolumns,\n\t\t\t[actionBarRenderer],\n\t\t\t{\n\t\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\t\tgetKeyboardNavigationLabel: (item: ITunnelItem) => {\n\t\t\t\t\t\treturn item.label;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmultipleSelectionSupport: true,\n\t\t\t\taccessibilityProvider: {\n\t\t\t\t\tgetAriaLabel: (item: ITunnelItem) => {\n\t\t\t\t\t\tif (item instanceof TunnelItem) {\n\t\t\t\t\t\t\treturn `${item.tooltipPostfix} ${item.portTooltip} ${item.iconTooltip} ${item.processTooltip} ${item.originTooltip} ${this.tunnelService.canChangePrivacy ? item.privacy.label : ''}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn item.label;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tgetWidgetAriaLabel: () => nls.localize('tunnelView', \"Tunnel View\")\n\t\t\t\t},\n\t\t\t\topenOnSingleClick: true\n\t\t\t}\n\t\t) as WorkbenchTable<ITunnelItem>;\n\n\t\tconst actionRunner: ActionRunner = new ActionRunner();\n\t\tactionBarRenderer.actionRunner = actionRunner;\n\n\t\tthis.tableDisposables.add(this.table);\n\t\tthis.tableDisposables.add(this.table.onContextMenu(e => this.onContextMenu(e, actionRunner)));\n\t\tthis.tableDisposables.add(this.table.onMouseDblClick(e => this.onMouseDblClick(e)));\n\t\tthis.tableDisposables.add(this.table.onDidChangeFocus(e => this.onFocusChanged(e)));\n\t\tthis.tableDisposables.add(this.table.onDidChangeSelection(e => this.onSelectionChanged(e)));\n\t\tthis.tableDisposables.add(this.table.onDidFocus(() => this.tunnelViewFocusContext.set(true)));\n\t\tthis.tableDisposables.add(this.table.onDidBlur(() => this.tunnelViewFocusContext.set(false)));\n\n\t\tconst rerender = () => this.table.splice(0, Number.POSITIVE_INFINITY, this.viewModel.all);\n\n\t\trerender();\n\t\tlet lastPortCount = this.portCount;\n\t\tthis.tableDisposables.add(Event.debounce(this.viewModel.onForwardedPortsChanged, (_last, e) => e, 50)(() => {\n\t\t\tconst newPortCount = this.portCount;\n\t\t\tif (((lastPortCount === 0) || (newPortCount === 0)) && (lastPortCount !== newPortCount)) {\n\t\t\t\tthis._onDidChangeViewWelcomeState.fire();\n\t\t\t}\n\t\t\tlastPortCount = newPortCount;\n\t\t\trerender();\n\t\t}));\n\n\t\tthis.tableDisposables.add(this.table.onMouseClick(e => {\n\t\t\tif (this.hasOpenLinkModifier(e.browserEvent)) {\n\t\t\t\tconst selection = this.table.getSelectedElements();\n\t\t\t\tif ((selection.length === 0) ||\n\t\t\t\t\t((selection.length === 1) && (selection[0] === e.element))) {\n\t\t\t\t\tthis.commandService.executeCommand(OpenPortInBrowserAction.ID, e.element);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis.tableDisposables.add(this.table.onDidOpen(e => {\n\t\t\tif (!e.element || (e.element.tunnelType !== TunnelType.Forwarded)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (e.browserEvent?.type === 'dblclick') {\n\t\t\t\tthis.commandService.executeCommand(LabelTunnelAction.ID);\n\t\t\t}\n\t\t}));\n\n\t\tthis.tableDisposables.add(this.remoteExplorerService.onDidChangeEditable(e => {\n\t\t\tthis.isEditing = !!this.remoteExplorerService.getEditableData(e?.tunnel, e?.editId);\n\t\t\tthis._onDidChangeViewWelcomeState.fire();\n\n\t\t\tif (!this.isEditing) {\n\t\t\t\twidgetContainer.classList.remove('highlight');\n\t\t\t}\n\n\t\t\trerender();\n\n\t\t\tif (this.isEditing) {\n\t\t\t\twidgetContainer.classList.add('highlight');\n\t\t\t\tif (!e) {\n\t\t\t\t\t// When we are in editing mode for a new forward, rather than updating an existing one we need to reveal the input box since it might be out of view.\n\t\t\t\t\tthis.table.reveal(this.table.indexOf(this.viewModel.input));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (e && (e.tunnel.tunnelType !== TunnelType.Add)) {\n\t\t\t\t\tthis.table.setFocus(this.lastFocus);\n\t\t\t\t}\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.panelContainer = dom.append(container, dom.$('.tree-explorer-viewlet-tree-view'));\n\t\tthis.createTable();\n\t}\n\n\toverride shouldShowWelcome(): boolean {\n\t\treturn this.viewModel.isEmpty() && !this.isEditing;\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tthis.table.domFocus();\n\t}\n\n\tprivate onFocusChanged(event: ITableEvent<ITunnelItem>) {\n\t\tif (event.indexes.length > 0 && event.elements.length > 0) {\n\t\t\tthis.lastFocus = [...event.indexes];\n\t\t}\n\t\tconst elements = event.elements;\n\t\tconst item = elements && elements.length ? elements[0] : undefined;\n\t\tif (item) {\n\t\t\tthis.tunnelViewSelectionContext.set(makeAddress(item.remoteHost, item.remotePort));\n\t\t\tthis.tunnelTypeContext.set(item.tunnelType);\n\t\t\tthis.tunnelCloseableContext.set(!!item.closeable);\n\t\t\tthis.tunnelPrivacyContext.set(item.privacy.id);\n\t\t\tthis.tunnelProtocolContext.set(item.protocol === TunnelProtocol.Https ? TunnelProtocol.Https : TunnelProtocol.Https);\n\t\t\tthis.portChangableContextKey.set(!!item.localPort);\n\t\t} else {\n\t\t\tthis.tunnelTypeContext.reset();\n\t\t\tthis.tunnelViewSelectionContext.reset();\n\t\t\tthis.tunnelCloseableContext.reset();\n\t\t\tthis.tunnelPrivacyContext.reset();\n\t\t\tthis.tunnelProtocolContext.reset();\n\t\t\tthis.portChangableContextKey.reset();\n\t\t}\n\t}\n\n\tprivate hasOpenLinkModifier(e: MouseEvent): boolean {\n\t\tconst editorConf = this.configurationService.getValue<{ multiCursorModifier: 'ctrlCmd' | 'alt' }>('editor');\n\n\t\tlet modifierKey = false;\n\t\tif (editorConf.multiCursorModifier === 'ctrlCmd') {\n\t\t\tmodifierKey = e.altKey;\n\t\t} else {\n\t\t\tif (isMacintosh) {\n\t\t\t\tmodifierKey = e.metaKey;\n\t\t\t} else {\n\t\t\t\tmodifierKey = e.ctrlKey;\n\t\t\t}\n\t\t}\n\t\treturn modifierKey;\n\t}\n\n\tprivate onSelectionChanged(event: ITableEvent<ITunnelItem>) {\n\t\tconst elements = event.elements;\n\t\tif (elements.length > 1) {\n\t\t\tthis.tunnelViewMultiSelectionContext.set(elements.map(element => makeAddress(element.remoteHost, element.remotePort)));\n\t\t} else {\n\t\t\tthis.tunnelViewMultiSelectionContext.set(undefined);\n\t\t}\n\t}\n\n\tprivate onContextMenu(event: ITableContextMenuEvent<ITunnelItem>, actionRunner: ActionRunner): void {\n\t\tif ((event.element !== undefined) && !(event.element instanceof TunnelItem)) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.browserEvent.preventDefault();\n\t\tevent.browserEvent.stopPropagation();\n\n\t\tconst node: TunnelItem | undefined = event.element;\n\n\t\tif (node) {\n\t\t\tthis.table.setFocus([this.table.indexOf(node)]);\n\t\t\tthis.tunnelTypeContext.set(node.tunnelType);\n\t\t\tthis.tunnelCloseableContext.set(!!node.closeable);\n\t\t\tthis.tunnelPrivacyContext.set(node.privacy.id);\n\t\t\tthis.tunnelProtocolContext.set(node.protocol);\n\t\t\tthis.portChangableContextKey.set(!!node.localPort);\n\t\t} else {\n\t\t\tthis.tunnelTypeContext.set(TunnelType.Add);\n\t\t\tthis.tunnelCloseableContext.set(false);\n\t\t\tthis.tunnelPrivacyContext.set(undefined);\n\t\t\tthis.tunnelProtocolContext.set(undefined);\n\t\t\tthis.portChangableContextKey.set(false);\n\t\t}\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tmenuId: MenuId.TunnelContext,\n\t\t\tmenuActionOptions: { shouldForwardArgs: true },\n\t\t\tcontextKeyService: this.table.contextKeyService,\n\t\t\tgetAnchor: () => event.anchor,\n\t\t\tgetActionViewItem: (action) => {\n\t\t\t\tconst keybinding = this.keybindingService.lookupKeybinding(action.id);\n\t\t\t\tif (keybinding) {\n\t\t\t\t\treturn new ActionViewItem(action, action, { label: true, keybinding: keybinding.getLabel() });\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tonHide: (wasCancelled?: boolean) => {\n\t\t\t\tif (wasCancelled) {\n\t\t\t\t\tthis.table.domFocus();\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetActionsContext: () => node?.strip(),\n\t\t\tactionRunner\n\t\t});\n\t}\n\n\tprivate onMouseDblClick(e: ITableMouseEvent<ITunnelItem>): void {\n\t\tif (!e.element) {\n\t\t\tthis.commandService.executeCommand(ForwardPortAction.INLINE_ID);\n\t\t}\n\t}\n\n\tprivate height = 0;\n\tprivate width = 0;\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tthis.height = height;\n\t\tthis.width = width;\n\t\tsuper.layoutBody(height, width);\n\t\tthis.table.layout(height, width);\n\t}\n}\n\nexport class TunnelPanelDescriptor implements IViewDescriptor {\n\treadonly id = TunnelPanel.ID;\n\treadonly name = TunnelPanel.TITLE;\n\treadonly ctorDescriptor: SyncDescriptor<TunnelPanel>;\n\treadonly canToggleVisibility = true;\n\treadonly hideByDefault = false;\n\t// group is not actually used for views that are not extension contributed. Use order instead.\n\treadonly group = 'details@0';\n\t// -500 comes from the remote explorer viewOrderDelegate\n\treadonly order = -500;\n\treadonly remoteAuthority?: string | string[];\n\treadonly canMoveView = true;\n\treadonly containerIcon = portsViewIcon;\n\n\tconstructor(viewModel: ITunnelViewModel, environmentService: IWorkbenchEnvironmentService) {\n\t\tthis.ctorDescriptor = new SyncDescriptor(TunnelPanel, [viewModel]);\n\t\tthis.remoteAuthority = environmentService.remoteAuthority ? environmentService.remoteAuthority.split('+')[0] : undefined;\n\t}\n}\n\nfunction isITunnelItem(item: any): item is ITunnelItem {\n\treturn item && item.tunnelType && item.remoteHost && item.source;\n}\n\nnamespace LabelTunnelAction {\n\texport const ID = 'remote.tunnel.label';\n\texport const LABEL = nls.localize('remote.tunnel.label', \"Set Port Label\");\n\texport const COMMAND_ID_KEYWORD = 'label';\n\n\texport function handler(): ICommandHandler {\n\t\treturn async (accessor, arg): Promise<{ port: number; label: string } | undefined> => {\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tlet tunnelContext: ITunnelItem | undefined;\n\t\t\tif (isITunnelItem(arg)) {\n\t\t\t\ttunnelContext = arg;\n\t\t\t} else {\n\t\t\t\tconst context = accessor.get(IContextKeyService).getContextKeyValue<string | undefined>(TunnelViewSelectionKeyName);\n\t\t\t\tconst tunnel = context ? remoteExplorerService.tunnelModel.forwarded.get(context) : undefined;\n\t\t\t\tif (tunnel) {\n\t\t\t\t\tconst tunnelService = accessor.get(ITunnelService);\n\t\t\t\t\ttunnelContext = TunnelItem.createFromTunnel(remoteExplorerService, tunnelService, tunnel);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tunnelContext) {\n\t\t\t\tconst tunnelItem: ITunnelItem = tunnelContext;\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tconst startingValue = tunnelItem.name ? tunnelItem.name : `${tunnelItem.remotePort}`;\n\t\t\t\t\tremoteExplorerService.setEditable(tunnelItem, TunnelEditId.Label, {\n\t\t\t\t\t\tonFinish: async (value, success) => {\n\t\t\t\t\t\t\tvalue = value.trim();\n\t\t\t\t\t\t\tremoteExplorerService.setEditable(tunnelItem, TunnelEditId.Label, null);\n\t\t\t\t\t\t\tconst changed = success && (value !== startingValue);\n\t\t\t\t\t\t\tif (changed) {\n\t\t\t\t\t\t\t\tawait remoteExplorerService.tunnelModel.name(tunnelItem.remoteHost, tunnelItem.remotePort, value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(changed ? { port: tunnelItem.remotePort, label: value } : undefined);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalidationMessage: () => null,\n\t\t\t\t\t\tplaceholder: nls.localize('remote.tunnelsView.labelPlaceholder', \"Port label\"),\n\t\t\t\t\t\tstartingValue\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\t}\n}\n\nconst invalidPortString: string = nls.localize('remote.tunnelsView.portNumberValid', \"Forwarded port should be a number or a host:port.\");\nconst maxPortNumber: number = 65536;\nconst invalidPortNumberString: string = nls.localize('remote.tunnelsView.portNumberToHigh', \"Port number must be \\u2265 0 and < {0}.\", maxPortNumber);\nconst requiresSudoString: string = nls.localize('remote.tunnelView.inlineElevationMessage', \"May Require Sudo\");\nconst alreadyForwarded: string = nls.localize('remote.tunnelView.alreadyForwarded', \"Port is already forwarded\");\n\nexport namespace ForwardPortAction {\n\texport const INLINE_ID = 'remote.tunnel.forwardInline';\n\texport const COMMANDPALETTE_ID = 'remote.tunnel.forwardCommandPalette';\n\texport const LABEL: ILocalizedString = { value: nls.localize('remote.tunnel.forward', \"Forward a Port\"), original: 'Forward a Port' };\n\texport const TREEITEM_LABEL = nls.localize('remote.tunnel.forwardItem', \"Forward Port\");\n\tconst forwardPrompt = nls.localize('remote.tunnel.forwardPrompt', \"Port number or address (eg. 3000 or 10.10.10.10:2000).\");\n\n\tfunction validateInput(remoteExplorerService: IRemoteExplorerService, tunnelService: ITunnelService, value: string, canElevate: boolean): { content: string; severity: Severity } | null {\n\t\tconst parsed = parseAddress(value);\n\t\tif (!parsed) {\n\t\t\treturn { content: invalidPortString, severity: Severity.Error };\n\t\t} else if (parsed.port >= maxPortNumber) {\n\t\t\treturn { content: invalidPortNumberString, severity: Severity.Error };\n\t\t} else if (canElevate && tunnelService.isPortPrivileged(parsed.port)) {\n\t\t\treturn { content: requiresSudoString, severity: Severity.Info };\n\t\t} else if (mapHasAddressLocalhostOrAllInterfaces(remoteExplorerService.tunnelModel.forwarded, parsed.host, parsed.port)) {\n\t\t\treturn { content: alreadyForwarded, severity: Severity.Error };\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction error(notificationService: INotificationService, tunnelOrError: RemoteTunnel | string | void, host: string, port: number) {\n\t\tif (!tunnelOrError) {\n\t\t\tnotificationService.warn(nls.localize('remote.tunnel.forwardError', \"Unable to forward {0}:{1}. The host may not be available or that remote port may already be forwarded\", host, port));\n\t\t} else if (typeof tunnelOrError === 'string') {\n\t\t\tnotificationService.warn(nls.localize('remote.tunnel.forwardErrorProvided', \"Unable to forward {0}:{1}. {2}\", host, port, tunnelOrError));\n\t\t}\n\t}\n\n\texport function inlineHandler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst tunnelService = accessor.get(ITunnelService);\n\t\t\tremoteExplorerService.setEditable(undefined, TunnelEditId.New, {\n\t\t\t\tonFinish: async (value, success) => {\n\t\t\t\t\tremoteExplorerService.setEditable(undefined, TunnelEditId.New, null);\n\t\t\t\t\tlet parsed: { host: string; port: number } | undefined;\n\t\t\t\t\tif (success && (parsed = parseAddress(value))) {\n\t\t\t\t\t\tremoteExplorerService.forward({\n\t\t\t\t\t\t\tremote: { host: parsed.host, port: parsed.port },\n\t\t\t\t\t\t\televateIfNeeded: true\n\t\t\t\t\t\t}).then(tunnelOrError => error(notificationService, tunnelOrError, parsed!.host, parsed!.port));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvalidationMessage: (value) => validateInput(remoteExplorerService, tunnelService, value, tunnelService.canElevate),\n\t\t\t\tplaceholder: forwardPrompt\n\t\t\t});\n\t\t};\n\t}\n\n\texport function commandPaletteHandler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst tunnelService = accessor.get(ITunnelService);\n\t\t\tawait viewsService.openView(TunnelPanel.ID, true);\n\t\t\tconst value = await quickInputService.input({\n\t\t\t\tprompt: forwardPrompt,\n\t\t\t\tvalidateInput: (value) => Promise.resolve(validateInput(remoteExplorerService, tunnelService, value, tunnelService.canElevate))\n\t\t\t});\n\t\t\tlet parsed: { host: string; port: number } | undefined;\n\t\t\tif (value && (parsed = parseAddress(value))) {\n\t\t\t\tremoteExplorerService.forward({\n\t\t\t\t\tremote: { host: parsed.host, port: parsed.port },\n\t\t\t\t\televateIfNeeded: true\n\t\t\t\t}).then(tunnel => error(notificationService, tunnel, parsed!.host, parsed!.port));\n\t\t\t}\n\t\t};\n\t}\n}\n\ninterface QuickPickTunnel extends IQuickPickItem {\n\ttunnel?: ITunnelItem;\n}\n\nfunction makeTunnelPicks(tunnels: Tunnel[], remoteExplorerService: IRemoteExplorerService, tunnelService: ITunnelService): QuickPickInput<QuickPickTunnel>[] {\n\tconst picks: QuickPickInput<QuickPickTunnel>[] = tunnels.map(forwarded => {\n\t\tconst item = TunnelItem.createFromTunnel(remoteExplorerService, tunnelService, forwarded);\n\t\treturn {\n\t\t\tlabel: item.label,\n\t\t\tdescription: item.processDescription,\n\t\t\ttunnel: item\n\t\t};\n\t});\n\tif (picks.length === 0) {\n\t\tpicks.push({\n\t\t\tlabel: nls.localize('remote.tunnel.closeNoPorts', \"No ports currently forwarded. Try running the {0} command\", ForwardPortAction.LABEL.value)\n\t\t});\n\t}\n\treturn picks;\n}\n\nnamespace ClosePortAction {\n\texport const INLINE_ID = 'remote.tunnel.closeInline';\n\texport const COMMANDPALETTE_ID = 'remote.tunnel.closeCommandPalette';\n\texport const LABEL: ILocalizedString = { value: nls.localize('remote.tunnel.close', \"Stop Forwarding Port\"), original: 'Stop Forwarding Port' };\n\n\texport function inlineHandler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tlet ports: (ITunnelItem | Tunnel)[] = [];\n\t\t\tconst multiSelectContext = contextKeyService.getContextKeyValue<string[] | undefined>(TunnelViewMultiSelectionKeyName);\n\t\t\tif (multiSelectContext) {\n\t\t\t\tmultiSelectContext.forEach(context => {\n\t\t\t\t\tconst tunnel = remoteExplorerService.tunnelModel.forwarded.get(context);\n\t\t\t\t\tif (tunnel) {\n\t\t\t\t\t\tports?.push(tunnel);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (isITunnelItem(arg)) {\n\t\t\t\tports = [arg];\n\t\t\t} else {\n\t\t\t\tconst context = contextKeyService.getContextKeyValue<string | undefined>(TunnelViewSelectionKeyName);\n\t\t\t\tconst tunnel = context ? remoteExplorerService.tunnelModel.forwarded.get(context) : undefined;\n\t\t\t\tif (tunnel) {\n\t\t\t\t\tports = [tunnel];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!ports || ports.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn Promise.all(ports.map(port => remoteExplorerService.close({ host: port.remoteHost, port: port.remotePort }, TunnelCloseReason.User)));\n\t\t};\n\t}\n\n\texport function commandPaletteHandler(): ICommandHandler {\n\t\treturn async (accessor) => {\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tconst tunnelService = accessor.get(ITunnelService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t\tconst picks: QuickPickInput<QuickPickTunnel>[] = makeTunnelPicks(Array.from(remoteExplorerService.tunnelModel.forwarded.values()).filter(tunnel => tunnel.closeable), remoteExplorerService, tunnelService);\n\t\t\tconst result = await quickInputService.pick(picks, { placeHolder: nls.localize('remote.tunnel.closePlaceholder', \"Choose a port to stop forwarding\") });\n\t\t\tif (result && result.tunnel) {\n\t\t\t\tawait remoteExplorerService.close({ host: result.tunnel.remoteHost, port: result.tunnel.remotePort }, TunnelCloseReason.User);\n\t\t\t} else if (result) {\n\t\t\t\tawait commandService.executeCommand(ForwardPortAction.COMMANDPALETTE_ID);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport namespace OpenPortInBrowserAction {\n\texport const ID = 'remote.tunnel.open';\n\texport const LABEL = nls.localize('remote.tunnel.open', \"Open in Browser\");\n\n\texport function handler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tlet key: string | undefined;\n\t\t\tif (isITunnelItem(arg)) {\n\t\t\t\tkey = makeAddress(arg.remoteHost, arg.remotePort);\n\t\t\t} else if (arg.tunnelRemoteHost && arg.tunnelRemotePort) {\n\t\t\t\tkey = makeAddress(arg.tunnelRemoteHost, arg.tunnelRemotePort);\n\t\t\t}\n\t\t\tif (key) {\n\t\t\t\tconst model = accessor.get(IRemoteExplorerService).tunnelModel;\n\t\t\t\tconst openerService = accessor.get(IOpenerService);\n\t\t\t\treturn run(model, openerService, key);\n\t\t\t}\n\t\t};\n\t}\n\n\texport function run(model: TunnelModel, openerService: IOpenerService, key: string) {\n\t\tconst tunnel = model.forwarded.get(key) || model.detected.get(key);\n\t\tif (tunnel) {\n\t\t\treturn openerService.open(tunnel.localUri, { allowContributedOpeners: false });\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport namespace OpenPortInPreviewAction {\n\texport const ID = 'remote.tunnel.openPreview';\n\texport const LABEL = nls.localize('remote.tunnel.openPreview', \"Preview in Editor\");\n\n\texport function handler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tlet key: string | undefined;\n\t\t\tif (isITunnelItem(arg)) {\n\t\t\t\tkey = makeAddress(arg.remoteHost, arg.remotePort);\n\t\t\t} else if (arg.tunnelRemoteHost && arg.tunnelRemotePort) {\n\t\t\t\tkey = makeAddress(arg.tunnelRemoteHost, arg.tunnelRemotePort);\n\t\t\t}\n\t\t\tif (key) {\n\t\t\t\tconst model = accessor.get(IRemoteExplorerService).tunnelModel;\n\t\t\t\tconst openerService = accessor.get(IOpenerService);\n\t\t\t\tconst externalOpenerService = accessor.get(IExternalUriOpenerService);\n\t\t\t\treturn run(model, openerService, externalOpenerService, key);\n\t\t\t}\n\t\t};\n\t}\n\n\texport async function run(model: TunnelModel, openerService: IOpenerService, externalOpenerService: IExternalUriOpenerService, key: string) {\n\t\tconst tunnel = model.forwarded.get(key) || model.detected.get(key);\n\t\tif (tunnel) {\n\t\t\tconst remoteHost = tunnel.remoteHost.includes(':') ? `[${tunnel.remoteHost}]` : tunnel.remoteHost;\n\t\t\tconst sourceUri = URI.parse(`http://${remoteHost}:${tunnel.remotePort}`);\n\t\t\tconst opener = await externalOpenerService.getOpener(tunnel.localUri, { sourceUri }, new CancellationTokenSource().token);\n\t\t\tif (opener) {\n\t\t\t\treturn opener.openExternalUri(tunnel.localUri, { sourceUri }, new CancellationTokenSource().token);\n\t\t\t}\n\t\t\treturn openerService.open(tunnel.localUri);\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n\nnamespace OpenPortInBrowserCommandPaletteAction {\n\texport const ID = 'remote.tunnel.openCommandPalette';\n\texport const LABEL = nls.localize('remote.tunnel.openCommandPalette', \"Open Port in Browser\");\n\n\tinterface QuickPickTunnel extends IQuickPickItem {\n\t\ttunnel?: TunnelItem;\n\t}\n\n\texport function handler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tconst tunnelService = accessor.get(ITunnelService);\n\t\t\tconst model = remoteExplorerService.tunnelModel;\n\t\t\tconst quickPickService = accessor.get(IQuickInputService);\n\t\t\tconst openerService = accessor.get(IOpenerService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tconst options: QuickPickTunnel[] = [...model.forwarded, ...model.detected].map(value => {\n\t\t\t\tconst tunnelItem = TunnelItem.createFromTunnel(remoteExplorerService, tunnelService, value[1]);\n\t\t\t\treturn {\n\t\t\t\t\tlabel: tunnelItem.label,\n\t\t\t\t\tdescription: tunnelItem.processDescription,\n\t\t\t\t\ttunnel: tunnelItem\n\t\t\t\t};\n\t\t\t});\n\t\t\tif (options.length === 0) {\n\t\t\t\toptions.push({\n\t\t\t\t\tlabel: nls.localize('remote.tunnel.openCommandPaletteNone', \"No ports currently forwarded. Open the Ports view to get started.\")\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toptions.push({\n\t\t\t\t\tlabel: nls.localize('remote.tunnel.openCommandPaletteView', \"Open the Ports view...\")\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst picked = await quickPickService.pick<QuickPickTunnel>(options, { placeHolder: nls.localize('remote.tunnel.openCommandPalettePick', \"Choose the port to open\") });\n\t\t\tif (picked && picked.tunnel) {\n\t\t\t\treturn OpenPortInBrowserAction.run(model, openerService, makeAddress(picked.tunnel.remoteHost, picked.tunnel.remotePort));\n\t\t\t} else if (picked) {\n\t\t\t\treturn commandService.executeCommand(`${TUNNEL_VIEW_ID}.focus`);\n\t\t\t}\n\t\t};\n\t}\n}\n\nnamespace CopyAddressAction {\n\texport const INLINE_ID = 'remote.tunnel.copyAddressInline';\n\texport const COMMANDPALETTE_ID = 'remote.tunnel.copyAddressCommandPalette';\n\texport const INLINE_LABEL = nls.localize('remote.tunnel.copyAddressInline', \"Copy Local Address\");\n\texport const COMMANDPALETTE_LABEL = nls.localize('remote.tunnel.copyAddressCommandPalette', \"Copy Forwarded Port Address\");\n\n\tasync function copyAddress(remoteExplorerService: IRemoteExplorerService, clipboardService: IClipboardService, tunnelItem: { remoteHost: string; remotePort: number }) {\n\t\tconst address = remoteExplorerService.tunnelModel.address(tunnelItem.remoteHost, tunnelItem.remotePort);\n\t\tif (address) {\n\t\t\tawait clipboardService.writeText(address.toString());\n\t\t}\n\t}\n\n\texport function inlineHandler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tlet tunnelItem: ITunnelItem | Tunnel | undefined;\n\t\t\tif (isITunnelItem(arg)) {\n\t\t\t\ttunnelItem = arg;\n\t\t\t} else {\n\t\t\t\tconst context = accessor.get(IContextKeyService).getContextKeyValue<string | undefined>(TunnelViewSelectionKeyName);\n\t\t\t\ttunnelItem = context ? remoteExplorerService.tunnelModel.forwarded.get(context) : undefined;\n\t\t\t}\n\t\t\tif (tunnelItem) {\n\t\t\t\treturn copyAddress(remoteExplorerService, accessor.get(IClipboardService), tunnelItem);\n\t\t\t}\n\t\t};\n\t}\n\n\texport function commandPaletteHandler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tconst tunnelService = accessor.get(ITunnelService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tconst clipboardService = accessor.get(IClipboardService);\n\n\t\t\tconst tunnels = Array.from(remoteExplorerService.tunnelModel.forwarded.values()).concat(Array.from(remoteExplorerService.tunnelModel.detected.values()));\n\t\t\tconst result = await quickInputService.pick(makeTunnelPicks(tunnels, remoteExplorerService, tunnelService), { placeHolder: nls.localize('remote.tunnel.copyAddressPlaceholdter', \"Choose a forwarded port\") });\n\t\t\tif (result && result.tunnel) {\n\t\t\t\tawait copyAddress(remoteExplorerService, clipboardService, result.tunnel);\n\t\t\t} else if (result) {\n\t\t\t\tawait commandService.executeCommand(ForwardPortAction.COMMANDPALETTE_ID);\n\t\t\t}\n\t\t};\n\t}\n}\n\nnamespace ChangeLocalPortAction {\n\texport const ID = 'remote.tunnel.changeLocalPort';\n\texport const LABEL = nls.localize('remote.tunnel.changeLocalPort', \"Change Local Address Port\");\n\n\tfunction validateInput(tunnelService: ITunnelService, value: string, canElevate: boolean): { content: string; severity: Severity } | null {\n\t\tif (!value.match(/^[0-9]+$/)) {\n\t\t\treturn { content: nls.localize('remote.tunnelsView.portShouldBeNumber', \"Local port should be a number.\"), severity: Severity.Error };\n\t\t} else if (Number(value) >= maxPortNumber) {\n\t\t\treturn { content: invalidPortNumberString, severity: Severity.Error };\n\t\t} else if (canElevate && tunnelService.isPortPrivileged(Number(value))) {\n\t\t\treturn { content: requiresSudoString, severity: Severity.Info };\n\t\t}\n\t\treturn null;\n\t}\n\n\texport function handler(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\tconst notificationService = accessor.get(INotificationService);\n\t\t\tconst tunnelService = accessor.get(ITunnelService);\n\t\t\tlet tunnelContext: ITunnelItem | undefined;\n\t\t\tif (isITunnelItem(arg)) {\n\t\t\t\ttunnelContext = arg;\n\t\t\t} else {\n\t\t\t\tconst context = accessor.get(IContextKeyService).getContextKeyValue<string | undefined>(TunnelViewSelectionKeyName);\n\t\t\t\tconst tunnel = context ? remoteExplorerService.tunnelModel.forwarded.get(context) : undefined;\n\t\t\t\tif (tunnel) {\n\t\t\t\t\tconst tunnelService = accessor.get(ITunnelService);\n\t\t\t\t\ttunnelContext = TunnelItem.createFromTunnel(remoteExplorerService, tunnelService, tunnel);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tunnelContext) {\n\t\t\t\tconst tunnelItem: ITunnelItem = tunnelContext;\n\t\t\t\tremoteExplorerService.setEditable(tunnelItem, TunnelEditId.LocalPort, {\n\t\t\t\t\tonFinish: async (value, success) => {\n\t\t\t\t\t\tremoteExplorerService.setEditable(tunnelItem, TunnelEditId.LocalPort, null);\n\t\t\t\t\t\tif (success) {\n\t\t\t\t\t\t\tawait remoteExplorerService.close({ host: tunnelItem.remoteHost, port: tunnelItem.remotePort }, TunnelCloseReason.Other);\n\t\t\t\t\t\t\tconst numberValue = Number(value);\n\t\t\t\t\t\t\tconst newForward = await remoteExplorerService.forward({\n\t\t\t\t\t\t\t\tremote: { host: tunnelItem.remoteHost, port: tunnelItem.remotePort },\n\t\t\t\t\t\t\t\tlocal: numberValue,\n\t\t\t\t\t\t\t\tname: tunnelItem.name,\n\t\t\t\t\t\t\t\televateIfNeeded: true,\n\t\t\t\t\t\t\t\tsource: tunnelItem.source\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (newForward && (typeof newForward !== 'string') && newForward.tunnelLocalPort !== numberValue) {\n\t\t\t\t\t\t\t\tnotificationService.warn(nls.localize('remote.tunnel.changeLocalPortNumber', \"The local port {0} is not available. Port number {1} has been used instead\", value, newForward.tunnelLocalPort ?? newForward.localAddress));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tvalidationMessage: (value) => validateInput(tunnelService, value, tunnelService.canElevate),\n\t\t\t\t\tplaceholder: nls.localize('remote.tunnelsView.changePort', \"New local port\")\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n}\n\nnamespace ChangeTunnelPrivacyAction {\n\texport function handler(privacyId: string): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\tif (isITunnelItem(arg)) {\n\t\t\t\tconst remoteExplorerService = accessor.get(IRemoteExplorerService);\n\t\t\t\tawait remoteExplorerService.close({ host: arg.remoteHost, port: arg.remotePort }, TunnelCloseReason.Other);\n\t\t\t\treturn remoteExplorerService.forward({\n\t\t\t\t\tremote: { host: arg.remoteHost, port: arg.remotePort },\n\t\t\t\t\tlocal: arg.localPort,\n\t\t\t\t\tname: arg.name,\n\t\t\t\t\televateIfNeeded: true,\n\t\t\t\t\tprivacy: privacyId,\n\t\t\t\t\tsource: arg.source\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\t}\n}\n\nnamespace SetTunnelProtocolAction {\n\texport const ID_HTTP = 'remote.tunnel.setProtocolHttp';\n\texport const ID_HTTPS = 'remote.tunnel.setProtocolHttps';\n\texport const LABEL_HTTP = nls.localize('remote.tunnel.protocolHttp', \"HTTP\");\n\texport const LABEL_HTTPS = nls.localize('remote.tunnel.protocolHttps', \"HTTPS\");\n\n\tasync function handler(arg: any, protocol: TunnelProtocol, remoteExplorerService: IRemoteExplorerService) {\n\t\tif (isITunnelItem(arg)) {\n\t\t\tconst attributes: Partial<Attributes> = {\n\t\t\t\tprotocol\n\t\t\t};\n\t\t\treturn remoteExplorerService.tunnelModel.configPortsAttributes.addAttributes(arg.remotePort, attributes, ConfigurationTarget.USER_REMOTE);\n\t\t}\n\t}\n\n\texport function handlerHttp(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\treturn handler(arg, TunnelProtocol.Http, accessor.get(IRemoteExplorerService));\n\t\t};\n\t}\n\n\texport function handlerHttps(): ICommandHandler {\n\t\treturn async (accessor, arg) => {\n\t\t\treturn handler(arg, TunnelProtocol.Https, accessor.get(IRemoteExplorerService));\n\t\t};\n\t}\n}\n\nconst tunnelViewCommandsWeightBonus = 10; // give our commands a little bit more weight over other default list/tree commands\n\nconst isForwardedExpr = TunnelTypeContextKey.isEqualTo(TunnelType.Forwarded);\nconst isForwardedOrDetectedExpr = ContextKeyExpr.or(isForwardedExpr, TunnelTypeContextKey.isEqualTo(TunnelType.Detected));\nconst isNotMultiSelectionExpr = TunnelViewMultiSelectionContextKey.isEqualTo(undefined);\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: LabelTunnelAction.ID,\n\tweight: KeybindingWeight.WorkbenchContrib + tunnelViewCommandsWeightBonus,\n\twhen: ContextKeyExpr.and(TunnelViewFocusContextKey, isForwardedExpr, isNotMultiSelectionExpr),\n\tprimary: KeyCode.F2,\n\tmac: {\n\t\tprimary: KeyCode.Enter\n\t},\n\thandler: LabelTunnelAction.handler()\n});\nCommandsRegistry.registerCommand(ForwardPortAction.INLINE_ID, ForwardPortAction.inlineHandler());\nCommandsRegistry.registerCommand(ForwardPortAction.COMMANDPALETTE_ID, ForwardPortAction.commandPaletteHandler());\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: ClosePortAction.INLINE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + tunnelViewCommandsWeightBonus,\n\twhen: ContextKeyExpr.and(TunnelCloseableContextKey, TunnelViewFocusContextKey),\n\tprimary: KeyCode.Delete,\n\tmac: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\t\tsecondary: [KeyCode.Delete]\n\t},\n\thandler: ClosePortAction.inlineHandler()\n});\n\nCommandsRegistry.registerCommand(ClosePortAction.COMMANDPALETTE_ID, ClosePortAction.commandPaletteHandler());\nCommandsRegistry.registerCommand(OpenPortInBrowserAction.ID, OpenPortInBrowserAction.handler());\nCommandsRegistry.registerCommand(OpenPortInPreviewAction.ID, OpenPortInPreviewAction.handler());\nCommandsRegistry.registerCommand(OpenPortInBrowserCommandPaletteAction.ID, OpenPortInBrowserCommandPaletteAction.handler());\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CopyAddressAction.INLINE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + tunnelViewCommandsWeightBonus,\n\twhen: ContextKeyExpr.and(TunnelViewFocusContextKey, isForwardedOrDetectedExpr, isNotMultiSelectionExpr),\n\tprimary: KeyMod.CtrlCmd | KeyCode.KeyC,\n\thandler: CopyAddressAction.inlineHandler()\n});\nCommandsRegistry.registerCommand(CopyAddressAction.COMMANDPALETTE_ID, CopyAddressAction.commandPaletteHandler());\nCommandsRegistry.registerCommand(ChangeLocalPortAction.ID, ChangeLocalPortAction.handler());\nCommandsRegistry.registerCommand(SetTunnelProtocolAction.ID_HTTP, SetTunnelProtocolAction.handlerHttp());\nCommandsRegistry.registerCommand(SetTunnelProtocolAction.ID_HTTPS, SetTunnelProtocolAction.handlerHttps());\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, ({\n\tcommand: {\n\t\tid: ClosePortAction.COMMANDPALETTE_ID,\n\t\ttitle: ClosePortAction.LABEL\n\t},\n\twhen: forwardedPortsViewEnabled\n}));\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, ({\n\tcommand: {\n\t\tid: ForwardPortAction.COMMANDPALETTE_ID,\n\t\ttitle: ForwardPortAction.LABEL\n\t},\n\twhen: forwardedPortsViewEnabled\n}));\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, ({\n\tcommand: {\n\t\tid: CopyAddressAction.COMMANDPALETTE_ID,\n\t\ttitle: CopyAddressAction.COMMANDPALETTE_LABEL\n\t},\n\twhen: forwardedPortsViewEnabled\n}));\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, ({\n\tcommand: {\n\t\tid: OpenPortInBrowserCommandPaletteAction.ID,\n\t\ttitle: OpenPortInBrowserCommandPaletteAction.LABEL\n\t},\n\twhen: forwardedPortsViewEnabled\n}));\n\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '._open',\n\torder: 0,\n\tcommand: {\n\t\tid: OpenPortInBrowserAction.ID,\n\t\ttitle: OpenPortInBrowserAction.LABEL,\n\t},\n\twhen: ContextKeyExpr.and(isForwardedOrDetectedExpr, isNotMultiSelectionExpr)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '._open',\n\torder: 1,\n\tcommand: {\n\t\tid: OpenPortInPreviewAction.ID,\n\t\ttitle: OpenPortInPreviewAction.LABEL,\n\t},\n\twhen: ContextKeyExpr.and(\n\t\tisForwardedOrDetectedExpr,\n\t\tisNotMultiSelectionExpr)\n}));\n// The group 0_manage is used by extensions, so try not to change it\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '0_manage',\n\torder: 1,\n\tcommand: {\n\t\tid: LabelTunnelAction.ID,\n\t\ttitle: LabelTunnelAction.LABEL,\n\t\ticon: labelPortIcon\n\t},\n\twhen: ContextKeyExpr.and(isForwardedExpr, isNotMultiSelectionExpr)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '2_localaddress',\n\torder: 0,\n\tcommand: {\n\t\tid: CopyAddressAction.INLINE_ID,\n\t\ttitle: CopyAddressAction.INLINE_LABEL,\n\t},\n\twhen: ContextKeyExpr.and(isForwardedOrDetectedExpr, isNotMultiSelectionExpr)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '2_localaddress',\n\torder: 1,\n\tcommand: {\n\t\tid: ChangeLocalPortAction.ID,\n\t\ttitle: ChangeLocalPortAction.LABEL,\n\t},\n\twhen: ContextKeyExpr.and(isForwardedExpr, PortChangableContextKey, isNotMultiSelectionExpr)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '2_localaddress',\n\torder: 2,\n\tsubmenu: MenuId.TunnelPrivacy,\n\ttitle: nls.localize('tunnelContext.privacyMenu', \"Port Visibility\"),\n\twhen: ContextKeyExpr.and(isForwardedExpr, TunnelPrivacyEnabledContextKey)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '2_localaddress',\n\torder: 3,\n\tsubmenu: MenuId.TunnelProtocol,\n\ttitle: nls.localize('tunnelContext.protocolMenu', \"Change Port Protocol\"),\n\twhen: ContextKeyExpr.and(isForwardedExpr, isNotMultiSelectionExpr)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '3_forward',\n\torder: 0,\n\tcommand: {\n\t\tid: ClosePortAction.INLINE_ID,\n\t\ttitle: ClosePortAction.LABEL,\n\t},\n\twhen: TunnelCloseableContextKey\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelContext, ({\n\tgroup: '3_forward',\n\torder: 1,\n\tcommand: {\n\t\tid: ForwardPortAction.INLINE_ID,\n\t\ttitle: ForwardPortAction.LABEL,\n\t},\n}));\n\nMenuRegistry.appendMenuItem(MenuId.TunnelProtocol, ({\n\torder: 0,\n\tcommand: {\n\t\tid: SetTunnelProtocolAction.ID_HTTP,\n\t\ttitle: SetTunnelProtocolAction.LABEL_HTTP,\n\t\ttoggled: TunnelProtocolContextKey.isEqualTo(TunnelProtocol.Http)\n\t}\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelProtocol, ({\n\torder: 1,\n\tcommand: {\n\t\tid: SetTunnelProtocolAction.ID_HTTPS,\n\t\ttitle: SetTunnelProtocolAction.LABEL_HTTPS,\n\t\ttoggled: TunnelProtocolContextKey.isEqualTo(TunnelProtocol.Https)\n\t}\n}));\n\n\nMenuRegistry.appendMenuItem(MenuId.TunnelPortInline, ({\n\tgroup: '0_manage',\n\torder: 0,\n\tcommand: {\n\t\tid: ForwardPortAction.INLINE_ID,\n\t\ttitle: ForwardPortAction.TREEITEM_LABEL,\n\t\ticon: forwardPortIcon\n\t},\n\twhen: TunnelTypeContextKey.isEqualTo(TunnelType.Candidate)\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelPortInline, ({\n\tgroup: '0_manage',\n\torder: 4,\n\tcommand: {\n\t\tid: LabelTunnelAction.ID,\n\t\ttitle: LabelTunnelAction.LABEL,\n\t\ticon: labelPortIcon\n\t},\n\twhen: isForwardedExpr\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelPortInline, ({\n\tgroup: '0_manage',\n\torder: 5,\n\tcommand: {\n\t\tid: ClosePortAction.INLINE_ID,\n\t\ttitle: ClosePortAction.LABEL,\n\t\ticon: stopForwardIcon\n\t},\n\twhen: TunnelCloseableContextKey\n}));\n\nMenuRegistry.appendMenuItem(MenuId.TunnelLocalAddressInline, ({\n\torder: -1,\n\tcommand: {\n\t\tid: CopyAddressAction.INLINE_ID,\n\t\ttitle: CopyAddressAction.INLINE_LABEL,\n\t\ticon: copyAddressIcon\n\t},\n\twhen: isForwardedOrDetectedExpr\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelLocalAddressInline, ({\n\torder: 0,\n\tcommand: {\n\t\tid: OpenPortInBrowserAction.ID,\n\t\ttitle: OpenPortInBrowserAction.LABEL,\n\t\ticon: openBrowserIcon\n\t},\n\twhen: isForwardedOrDetectedExpr\n}));\nMenuRegistry.appendMenuItem(MenuId.TunnelLocalAddressInline, ({\n\torder: 1,\n\tcommand: {\n\t\tid: OpenPortInPreviewAction.ID,\n\t\ttitle: OpenPortInPreviewAction.LABEL,\n\t\ticon: openPreviewIcon\n\t},\n\twhen: isForwardedOrDetectedExpr\n}));\n\nregisterColor('ports.iconRunningProcessForeground', {\n\tlight: STATUS_BAR_REMOTE_ITEM_BACKGROUND,\n\tdark: STATUS_BAR_REMOTE_ITEM_BACKGROUND,\n\thcDark: STATUS_BAR_REMOTE_ITEM_BACKGROUND,\n\thcLight: STATUS_BAR_REMOTE_ITEM_BACKGROUND\n}, nls.localize('portWithRunningProcess.foreground', \"The color of the icon for a port that has an associated running process.\"));\n\n"]}