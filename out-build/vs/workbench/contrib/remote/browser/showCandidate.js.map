{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/remote/browser/showCandidate.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAQzF,IAAM,IAAI,GAAV,MAAM,IAA0B,SAAQ,eAAG;QACjD,YACyB,qBAA2B,EACd,kBAAuB;YAE5D,KAAK,EAAE,CAAC;YACR,MAAM,iBAAiB,GAAG,kBAAkB,CAAC,OAAO,EAAE,cAAc,EAAE,iBAAiB,CAAC;YACxF,IAAI,iBAAiB,EAAE;gBACtB,IAAI,CAAC,CAAC,CAAS,qBAAqB,CAAC,kBAAkB,CAAC,KAAK,EAAE,UAA2B,EAA4B,EAAE;oBACvH,MAAM,OAAO,GAAc,MAAM,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;oBACrJ,MAAM,kBAAkB,GAAoB,EAAE,CAAC;oBAC/C,IAAI,OAAO,CAAC,MAAM,KAAK,UAAU,CAAC,MAAM,EAAE;wBACzC,OAAO,UAAU,CAAC;qBAClB;oBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC3C,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;4BACf,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;yBACvC;qBACD;oBACD,OAAO,kBAAkB,CAAC;gBAC3B,CAAC,CAAC,CAAC,CAAC;aACJ;QACF,CAAC;KACD,CAAA;IAvBY,oBAAI;mBAAJ,IAAI;QAEd,WAAA,4BAAI,CAAA;QACJ,WAAA,wBAAG,CAAA;OAHO,IAAI,CAuBhB","file":"showCandidate.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { IRemoteExplorerService } from 'vs/workbench/services/remote/common/remoteExplorerService';\nimport { CandidatePort } from 'vs/workbench/services/remote/common/tunnelModel';\n\nexport class ShowCandidateContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IRemoteExplorerService remoteExplorerService: IRemoteExplorerService,\n\t\t@IBrowserWorkbenchEnvironmentService environmentService: IBrowserWorkbenchEnvironmentService,\n\t) {\n\t\tsuper();\n\t\tconst showPortCandidate = environmentService.options?.tunnelProvider?.showPortCandidate;\n\t\tif (showPortCandidate) {\n\t\t\tthis._register(remoteExplorerService.setCandidateFilter(async (candidates: CandidatePort[]): Promise<CandidatePort[]> => {\n\t\t\t\tconst filters: boolean[] = await Promise.all(candidates.map(candidate => showPortCandidate(candidate.host, candidate.port, candidate.detail ?? '')));\n\t\t\t\tconst filteredCandidates: CandidatePort[] = [];\n\t\t\t\tif (filters.length !== candidates.length) {\n\t\t\t\t\treturn candidates;\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < candidates.length; i++) {\n\t\t\t\t\tif (filters[i]) {\n\t\t\t\t\t\tfilteredCandidates.push(candidates[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn filteredCandidates;\n\t\t\t}));\n\t\t}\n\t}\n}\n"]}