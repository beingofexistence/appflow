{"version":3,"sources":["vs/workbench/contrib/debug/browser/welcomeView.ts"],"names":[],"mappings":"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","file":"welcomeView.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKeyService, RawContextKey, IContextKey, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { localize } from 'vs/nls';\nimport { IDebugService, CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_EXTENSION_AVAILABLE } from 'vs/workbench/contrib/debug/common/debug';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ViewPane } from 'vs/workbench/browser/parts/views/viewPane';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IViewDescriptorService, IViewsRegistry, Extensions, ViewContentGroups } from 'vs/workbench/common/views';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { WorkbenchStateContext } from 'vs/workbench/common/contextkeys';\nimport { OpenFolderAction, OpenFileAction, OpenFileFolderAction } from 'vs/workbench/browser/actions/workspaceActions';\nimport { isMacintosh, isWeb } from 'vs/base/common/platform';\nimport { isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { SELECT_AND_START_ID, DEBUG_CONFIGURE_COMMAND_ID, DEBUG_START_COMMAND_ID } from 'vs/workbench/contrib/debug/browser/debugCommands';\n\nconst debugStartLanguageKey = 'debugStartLanguage';\nconst CONTEXT_DEBUG_START_LANGUAGE = new RawContextKey<string>(debugStartLanguageKey, undefined);\nconst CONTEXT_DEBUGGER_INTERESTED_IN_ACTIVE_EDITOR = new RawContextKey<boolean>('debuggerInterestedInActiveEditor', false);\n\nexport class WelcomeView extends ViewPane {\n\n\tstatic readonly ID = 'workbench.debug.welcome';\n\tstatic readonly LABEL = localize('run', \"Run\");\n\n\tprivate debugStartLanguageContext: IContextKey<string | undefined>;\n\tprivate debuggerInterestedContext: IContextKey<boolean>;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IStorageService storageSevice: IStorageService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\n\t\tthis.debugStartLanguageContext = CONTEXT_DEBUG_START_LANGUAGE.bindTo(contextKeyService);\n\t\tthis.debuggerInterestedContext = CONTEXT_DEBUGGER_INTERESTED_IN_ACTIVE_EDITOR.bindTo(contextKeyService);\n\t\tconst lastSetLanguage = storageSevice.get(debugStartLanguageKey, StorageScope.WORKSPACE);\n\t\tthis.debugStartLanguageContext.set(lastSetLanguage);\n\n\t\tconst setContextKey = () => {\n\t\t\tconst editorControl = this.editorService.activeTextEditorControl;\n\t\t\tif (isCodeEditor(editorControl)) {\n\t\t\t\tconst model = editorControl.getModel();\n\t\t\t\tconst language = model ? model.getLanguageId() : undefined;\n\t\t\t\tif (language && this.debugService.getAdapterManager().someDebuggerInterestedInLanguage(language)) {\n\t\t\t\t\tthis.debugStartLanguageContext.set(language);\n\t\t\t\t\tthis.debuggerInterestedContext.set(true);\n\t\t\t\t\tstorageSevice.store(debugStartLanguageKey, language, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.debuggerInterestedContext.set(false);\n\t\t};\n\n\t\tconst disposables = new DisposableStore();\n\t\tthis._register(disposables);\n\n\t\tthis._register(editorService.onDidActiveEditorChange(() => {\n\t\t\tdisposables.clear();\n\n\t\t\tconst editorControl = this.editorService.activeTextEditorControl;\n\t\t\tif (isCodeEditor(editorControl)) {\n\t\t\t\tdisposables.add(editorControl.onDidChangeModelLanguage(setContextKey));\n\t\t\t}\n\n\t\t\tsetContextKey();\n\t\t}));\n\t\tthis._register(this.debugService.getAdapterManager().onDidRegisterDebugger(setContextKey));\n\t\tthis._register(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (visible) {\n\t\t\t\tsetContextKey();\n\t\t\t}\n\t\t}));\n\t\tsetContextKey();\n\n\t\tconst debugKeybinding = this.keybindingService.lookupKeybinding(DEBUG_START_COMMAND_ID);\n\t\tdebugKeybindingLabel = debugKeybinding ? ` (${debugKeybinding.getLabel()})` : '';\n\t}\n\n\toverride shouldShowWelcome(): boolean {\n\t\treturn true;\n\t}\n}\n\nconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\nviewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n\tcontent: localize(\n\t\t{\n\t\t\tkey: 'openAFileWhichCanBeDebugged',\n\t\t\tcomment: [\n\t\t\t\t'Please do not translate the word \"command\", it is part of our internal syntax which must not change',\n\t\t\t\t'{Locked=\"](command:{0})\"}'\n\t\t\t]\n\t\t},\n\t\t\"[Open a file](command:{0}) which can be debugged or run.\", (isMacintosh && !isWeb) ? OpenFileFolderAction.ID : OpenFileAction.ID\n\t),\n\twhen: ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUGGER_INTERESTED_IN_ACTIVE_EDITOR.toNegated()),\n\tgroup: ViewContentGroups.Open,\n});\n\nlet debugKeybindingLabel = '';\nviewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n\tcontent: `[${localize('runAndDebugAction', \"Run and Debug\")}${debugKeybindingLabel}](command:${DEBUG_START_COMMAND_ID})`,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\tgroup: ViewContentGroups.Debug,\n\t// Allow inserting more buttons directly after this one (by setting order to 1).\n\torder: 1\n});\n\nviewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n\tcontent: `[${localize('detectThenRunAndDebug', \"Show all automatic debug configurations\")}](command:${SELECT_AND_START_ID}).`,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\tgroup: ViewContentGroups.Debug,\n\torder: 10\n});\n\nviewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n\tcontent: localize(\n\t\t{\n\t\t\tkey: 'customizeRunAndDebug',\n\t\t\tcomment: [\n\t\t\t\t'Please do not translate the word \"command\", it is part of our internal syntax which must not change',\n\t\t\t\t'{Locked=\"](command:{0})\"}'\n\t\t\t]\n\t\t},\n\t\t\"To customize Run and Debug [create a launch.json file](command:{0}).\", DEBUG_CONFIGURE_COMMAND_ID),\n\twhen: ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, WorkbenchStateContext.notEqualsTo('empty')),\n\tgroup: ViewContentGroups.Debug\n});\n\nviewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n\tcontent: localize(\n\t\t{\n\t\t\tkey: 'customizeRunAndDebugOpenFolder',\n\t\t\tcomment: [\n\t\t\t\t'Please do not translate the word \"commmand\", it is part of our internal syntax which must not change',\n\t\t\t\t'{Locked=\"](command:{0})\"}'\n\t\t\t]\n\t\t},\n\t\t\"To customize Run and Debug, [open a folder](command:{0}) and create a launch.json file.\", (isMacintosh && !isWeb) ? OpenFileFolderAction.ID : OpenFolderAction.ID),\n\twhen: ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, WorkbenchStateContext.isEqualTo('empty')),\n\tgroup: ViewContentGroups.Debug\n});\n\nviewsRegistry.registerViewWelcomeContent(WelcomeView.ID, {\n\tcontent: localize('allDebuggersDisabled', \"All debug extensions are disabled. Enable a debug extension or install a new one from the Marketplace.\"),\n\twhen: CONTEXT_DEBUG_EXTENSION_AVAILABLE.toNegated(),\n\tgroup: ViewContentGroups.Debug\n});\n"]}