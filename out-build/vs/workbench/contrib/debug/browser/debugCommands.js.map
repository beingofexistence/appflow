{"version":3,"sources":["vs/workbench/contrib/debug/browser/debugCommands.ts"],"names":[],"mappings":"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","file":"debugCommands.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { List } from 'vs/base/browser/ui/list/listWidget';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IListService } from 'vs/platform/list/browser/listService';\nimport { IDebugService, IEnablement, CONTEXT_BREAKPOINTS_FOCUSED, CONTEXT_WATCH_EXPRESSIONS_FOCUSED, CONTEXT_VARIABLES_FOCUSED, EDITOR_CONTRIBUTION_ID, IDebugEditorContribution, CONTEXT_IN_DEBUG_MODE, CONTEXT_EXPRESSION_SELECTED, IConfig, IStackFrame, IThread, IDebugSession, CONTEXT_DEBUG_STATE, IDebugConfiguration, CONTEXT_JUMP_TO_CURSOR_SUPPORTED, REPL_VIEW_ID, CONTEXT_DEBUGGERS_AVAILABLE, State, getStateLabel, CONTEXT_BREAKPOINT_INPUT_FOCUSED, CONTEXT_FOCUSED_SESSION_IS_ATTACH, VIEWLET_ID, CONTEXT_DISASSEMBLY_VIEW_FOCUS, CONTEXT_IN_DEBUG_REPL, CONTEXT_STEP_INTO_TARGETS_SUPPORTED } from 'vs/workbench/contrib/debug/common/debug';\nimport { Expression, Variable, Breakpoint, FunctionBreakpoint, DataBreakpoint, Thread } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { IExtensionsViewPaneContainer, VIEWLET_ID as EXTENSIONS_VIEWLET_ID } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { ICodeEditor, isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { MenuRegistry, MenuId, Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { openBreakpointSource } from 'vs/workbench/contrib/debug/browser/breakpointsView';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { InputFocusedContext } from 'vs/platform/contextkey/common/contextkeys';\nimport { ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { ActiveEditorContext, PanelFocusContext, ResourceContextKey } from 'vs/workbench/common/contextkeys';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { ITextResourcePropertiesService } from 'vs/editor/common/services/textResourceConfiguration';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IQuickInputService, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { IViewsService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { deepClone } from 'vs/base/common/objects';\nimport { isWeb, isWindows } from 'vs/base/common/platform';\nimport { saveAllBeforeDebugStart } from 'vs/workbench/contrib/debug/common/debugUtils';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { showLoadedScriptMenu } from 'vs/workbench/contrib/debug/common/loadedScriptsPicker';\nimport { showDebugSessionMenu } from 'vs/workbench/contrib/debug/browser/debugSessionPicker';\nimport { TEXT_FILE_EDITOR_ID } from 'vs/workbench/contrib/files/common/files';\nimport { ILocalizedString } from 'vs/platform/action/common/action';\n\nexport const ADD_CONFIGURATION_ID = 'debug.addConfiguration';\nexport const TOGGLE_INLINE_BREAKPOINT_ID = 'editor.debug.action.toggleInlineBreakpoint';\nexport const COPY_STACK_TRACE_ID = 'debug.copyStackTrace';\nexport const REVERSE_CONTINUE_ID = 'workbench.action.debug.reverseContinue';\nexport const STEP_BACK_ID = 'workbench.action.debug.stepBack';\nexport const RESTART_SESSION_ID = 'workbench.action.debug.restart';\nexport const TERMINATE_THREAD_ID = 'workbench.action.debug.terminateThread';\nexport const STEP_OVER_ID = 'workbench.action.debug.stepOver';\nexport const STEP_INTO_ID = 'workbench.action.debug.stepInto';\nexport const STEP_INTO_TARGET_ID = 'workbench.action.debug.stepIntoTarget';\nexport const STEP_OUT_ID = 'workbench.action.debug.stepOut';\nexport const PAUSE_ID = 'workbench.action.debug.pause';\nexport const DISCONNECT_ID = 'workbench.action.debug.disconnect';\nexport const DISCONNECT_AND_SUSPEND_ID = 'workbench.action.debug.disconnectAndSuspend';\nexport const STOP_ID = 'workbench.action.debug.stop';\nexport const RESTART_FRAME_ID = 'workbench.action.debug.restartFrame';\nexport const CONTINUE_ID = 'workbench.action.debug.continue';\nexport const FOCUS_REPL_ID = 'workbench.debug.action.focusRepl';\nexport const JUMP_TO_CURSOR_ID = 'debug.jumpToCursor';\nexport const FOCUS_SESSION_ID = 'workbench.action.debug.focusProcess';\nexport const SELECT_AND_START_ID = 'workbench.action.debug.selectandstart';\nexport const SELECT_DEBUG_CONSOLE_ID = 'workbench.action.debug.selectDebugConsole';\nexport const SELECT_DEBUG_SESSION_ID = 'workbench.action.debug.selectDebugSession';\nexport const DEBUG_CONFIGURE_COMMAND_ID = 'workbench.action.debug.configure';\nexport const DEBUG_START_COMMAND_ID = 'workbench.action.debug.start';\nexport const DEBUG_RUN_COMMAND_ID = 'workbench.action.debug.run';\nexport const EDIT_EXPRESSION_COMMAND_ID = 'debug.renameWatchExpression';\nexport const SET_EXPRESSION_COMMAND_ID = 'debug.setWatchExpression';\nexport const REMOVE_EXPRESSION_COMMAND_ID = 'debug.removeWatchExpression';\nexport const NEXT_DEBUG_CONSOLE_ID = 'workbench.action.debug.nextConsole';\nexport const PREV_DEBUG_CONSOLE_ID = 'workbench.action.debug.prevConsole';\nexport const SHOW_LOADED_SCRIPTS_ID = 'workbench.action.debug.showLoadedScripts';\nexport const CALLSTACK_TOP_ID = 'workbench.action.debug.callStackTop';\nexport const CALLSTACK_BOTTOM_ID = 'workbench.action.debug.callStackBottom';\nexport const CALLSTACK_UP_ID = 'workbench.action.debug.callStackUp';\nexport const CALLSTACK_DOWN_ID = 'workbench.action.debug.callStackDown';\n\nexport const DEBUG_COMMAND_CATEGORY: ILocalizedString = { original: 'Debug', value: nls.localize('debug', 'Debug') };\nexport const RESTART_LABEL = { value: nls.localize('restartDebug', \"Restart\"), original: 'Restart' };\nexport const STEP_OVER_LABEL = { value: nls.localize('stepOverDebug', \"Step Over\"), original: 'Step Over' };\nexport const STEP_INTO_LABEL = { value: nls.localize('stepIntoDebug', \"Step Into\"), original: 'Step Into' };\nexport const STEP_INTO_TARGET_LABEL = { value: nls.localize('stepIntoTargetDebug', \"Step Into Target\"), original: 'Step Into Target' };\nexport const STEP_OUT_LABEL = { value: nls.localize('stepOutDebug', \"Step Out\"), original: 'Step Out' };\nexport const PAUSE_LABEL = { value: nls.localize('pauseDebug', \"Pause\"), original: 'Pause' };\nexport const DISCONNECT_LABEL = { value: nls.localize('disconnect', \"Disconnect\"), original: 'Disconnect' };\nexport const DISCONNECT_AND_SUSPEND_LABEL = { value: nls.localize('disconnectSuspend', \"Disconnect and Suspend\"), original: 'Disconnect and Suspend' };\nexport const STOP_LABEL = { value: nls.localize('stop', \"Stop\"), original: 'Stop' };\nexport const CONTINUE_LABEL = { value: nls.localize('continueDebug', \"Continue\"), original: 'Continue' };\nexport const FOCUS_SESSION_LABEL = { value: nls.localize('focusSession', \"Focus Session\"), original: 'Focus Session' };\nexport const SELECT_AND_START_LABEL = { value: nls.localize('selectAndStartDebugging', \"Select and Start Debugging\"), original: 'Select and Start Debugging' };\nexport const DEBUG_CONFIGURE_LABEL = nls.localize('openLaunchJson', \"Open '{0}'\", 'launch.json');\nexport const DEBUG_START_LABEL = { value: nls.localize('startDebug', \"Start Debugging\"), original: 'Start Debugging' };\nexport const DEBUG_RUN_LABEL = { value: nls.localize('startWithoutDebugging', \"Start Without Debugging\"), original: 'Start Without Debugging' };\nexport const NEXT_DEBUG_CONSOLE_LABEL = { value: nls.localize('nextDebugConsole', \"Focus Next Debug Console\"), original: 'Focus Next Debug Console' };\nexport const PREV_DEBUG_CONSOLE_LABEL = { value: nls.localize('prevDebugConsole', \"Focus Previous Debug Console\"), original: 'Focus Previous Debug Console' };\nexport const OPEN_LOADED_SCRIPTS_LABEL = { value: nls.localize('openLoadedScript', \"Open Loaded Script...\"), original: 'Open Loaded Script...' };\nexport const CALLSTACK_TOP_LABEL = { value: nls.localize('callStackTop', \"Navigate to Top of Call Stack\"), original: 'Navigate to Top of Call Stack' };\nexport const CALLSTACK_BOTTOM_LABEL = { value: nls.localize('callStackBottom', \"Navigate to Bottom of Call Stack\"), original: 'Navigate to Bottom of Call Stack' };\nexport const CALLSTACK_UP_LABEL = { value: nls.localize('callStackUp', \"Navigate Up Call Stack\"), original: 'Navigate Up Call Stack' };\nexport const CALLSTACK_DOWN_LABEL = { value: nls.localize('callStackDown', \"Navigate Down Call Stack\"), original: 'Navigate Down Call Stack' };\n\nexport const SELECT_DEBUG_CONSOLE_LABEL = { value: nls.localize('selectDebugConsole', \"Select Debug Console\"), original: 'Select Debug Console' };\nexport const SELECT_DEBUG_SESSION_LABEL = { value: nls.localize('selectDebugSession', \"Select Debug Session\"), original: 'Select Debug Session' };\n\nexport const DEBUG_QUICK_ACCESS_PREFIX = 'debug ';\nexport const DEBUG_CONSOLE_QUICK_ACCESS_PREFIX = 'debug consoles ';\n\ninterface CallStackContext {\n\tsessionId: string;\n\tthreadId: string;\n\tframeId: string;\n}\n\nfunction isThreadContext(obj: any): obj is CallStackContext {\n\treturn obj && typeof obj.sessionId === 'string' && typeof obj.threadId === 'string';\n}\n\nasync function getThreadAndRun(accessor: ServicesAccessor, sessionAndThreadId: CallStackContext | unknown, run: (thread: IThread) => Promise<void>): Promise<void> {\n\tconst debugService = accessor.get(IDebugService);\n\tlet thread: IThread | undefined;\n\tif (isThreadContext(sessionAndThreadId)) {\n\t\tconst session = debugService.getModel().getSession(sessionAndThreadId.sessionId);\n\t\tif (session) {\n\t\t\tthread = session.getAllThreads().find(t => t.getId() === sessionAndThreadId.threadId);\n\t\t}\n\t} else if (isSessionContext(sessionAndThreadId)) {\n\t\tconst session = debugService.getModel().getSession(sessionAndThreadId.sessionId);\n\t\tif (session) {\n\t\t\tconst threads = session.getAllThreads();\n\t\t\tthread = threads.length > 0 ? threads[0] : undefined;\n\t\t}\n\t}\n\n\tif (!thread) {\n\t\tthread = debugService.getViewModel().focusedThread;\n\t\tif (!thread) {\n\t\t\tconst focusedSession = debugService.getViewModel().focusedSession;\n\t\t\tconst threads = focusedSession ? focusedSession.getAllThreads() : undefined;\n\t\t\tthread = threads && threads.length ? threads[0] : undefined;\n\t\t}\n\t}\n\n\tif (thread) {\n\t\tawait run(thread);\n\t}\n}\n\nfunction isStackFrameContext(obj: any): obj is CallStackContext {\n\treturn obj && typeof obj.sessionId === 'string' && typeof obj.threadId === 'string' && typeof obj.frameId === 'string';\n}\n\nfunction getFrame(debugService: IDebugService, context: CallStackContext | unknown): IStackFrame | undefined {\n\tif (isStackFrameContext(context)) {\n\t\tconst session = debugService.getModel().getSession(context.sessionId);\n\t\tif (session) {\n\t\t\tconst thread = session.getAllThreads().find(t => t.getId() === context.threadId);\n\t\t\tif (thread) {\n\t\t\t\treturn thread.getCallStack().find(sf => sf.getId() === context.frameId);\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn debugService.getViewModel().focusedStackFrame;\n\t}\n\n\treturn undefined;\n}\n\nfunction isSessionContext(obj: any): obj is CallStackContext {\n\treturn obj && typeof obj.sessionId === 'string';\n}\n\nasync function changeDebugConsoleFocus(accessor: ServicesAccessor, next: boolean) {\n\tconst debugService = accessor.get(IDebugService);\n\tconst viewsService = accessor.get(IViewsService);\n\tconst sessions = debugService.getModel().getSessions(true).filter(s => s.hasSeparateRepl());\n\tlet currSession = debugService.getViewModel().focusedSession;\n\n\tlet nextIndex = 0;\n\tif (sessions.length > 0 && currSession) {\n\t\twhile (currSession && !currSession.hasSeparateRepl()) {\n\t\t\tcurrSession = currSession.parentSession;\n\t\t}\n\n\t\tif (currSession) {\n\t\t\tconst currIndex = sessions.indexOf(currSession);\n\t\t\tif (next) {\n\t\t\t\tnextIndex = (currIndex === (sessions.length - 1) ? 0 : (currIndex + 1));\n\t\t\t} else {\n\t\t\t\tnextIndex = (currIndex === 0 ? (sessions.length - 1) : (currIndex - 1));\n\t\t\t}\n\t\t}\n\t}\n\tawait debugService.focusStackFrame(undefined, undefined, sessions[nextIndex], { explicit: true });\n\n\tif (!viewsService.isViewVisible(REPL_VIEW_ID)) {\n\t\tawait viewsService.openView(REPL_VIEW_ID, true);\n\t}\n}\n\nasync function navigateCallStack(debugService: IDebugService, down: boolean) {\n\tconst frame = debugService.getViewModel().focusedStackFrame;\n\tif (frame) {\n\n\t\tlet callStack = frame.thread.getCallStack();\n\t\tlet index = callStack.findIndex(elem => elem.frameId === frame.frameId);\n\t\tlet nextVisibleFrame;\n\t\tif (down) {\n\t\t\tif (index >= callStack.length - 1) {\n\t\t\t\tif ((<Thread>frame.thread).reachedEndOfCallStack) {\n\t\t\t\t\tgoToTopOfCallStack(debugService);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tawait debugService.getModel().fetchCallstack(frame.thread, 20);\n\t\t\t\t\tcallStack = frame.thread.getCallStack();\n\t\t\t\t\tindex = callStack.findIndex(elem => elem.frameId === frame.frameId);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextVisibleFrame = findNextVisibleFrame(true, callStack, index);\n\t\t} else {\n\t\t\tif (index <= 0) {\n\t\t\t\tgoToBottomOfCallStack(debugService);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnextVisibleFrame = findNextVisibleFrame(false, callStack, index);\n\t\t}\n\n\t\tif (nextVisibleFrame) {\n\t\t\tdebugService.focusStackFrame(nextVisibleFrame);\n\t\t}\n\t}\n}\n\nasync function goToBottomOfCallStack(debugService: IDebugService) {\n\tconst thread = debugService.getViewModel().focusedThread;\n\tif (thread) {\n\t\tawait debugService.getModel().fetchCallstack(thread);\n\t\tconst callStack = thread.getCallStack();\n\t\tif (callStack.length > 0) {\n\t\t\tconst nextVisibleFrame = findNextVisibleFrame(false, callStack, 0); // must consider the next frame up first, which will be the last frame\n\t\t\tif (nextVisibleFrame) {\n\t\t\t\tdebugService.focusStackFrame(nextVisibleFrame);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction goToTopOfCallStack(debugService: IDebugService) {\n\tconst thread = debugService.getViewModel().focusedThread;\n\n\tif (thread) {\n\t\tdebugService.focusStackFrame(thread.getTopStackFrame());\n\t}\n}\n\n/**\n * Finds next frame that is not skipped by SkipFiles. Skips frame at index and starts searching at next.\n * Must satisfy `0 <= startIndex <= callStack - 1`\n * @param down specifies whether to search downwards if the current file is skipped.\n * @param callStack the call stack to search\n * @param startIndex the index to start the search at\n */\nfunction findNextVisibleFrame(down: boolean, callStack: readonly IStackFrame[], startIndex: number) {\n\n\tif (startIndex >= callStack.length) {\n\t\tstartIndex = callStack.length - 1;\n\t} else if (startIndex < 0) {\n\t\tstartIndex = 0;\n\t}\n\n\tlet index = startIndex;\n\n\tlet currFrame;\n\tdo {\n\t\tif (down) {\n\t\t\tif (index === callStack.length - 1) {\n\t\t\t\tindex = 0;\n\t\t\t} else {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t} else {\n\t\t\tif (index === 0) {\n\t\t\t\tindex = callStack.length - 1;\n\t\t\t} else {\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\n\t\tcurrFrame = callStack[index];\n\t\tif (!(currFrame.source.presentationHint === 'deemphasize' || currFrame.presentationHint === 'deemphasize')) {\n\t\t\treturn currFrame;\n\t\t}\n\t} while (index !== startIndex); // end loop when we've just checked the start index, since that should be the last one checked\n\n\treturn undefined;\n}\n\n// These commands are used in call stack context menu, call stack inline actions, command palette, debug toolbar, mac native touch bar\n// When the command is exectued in the context of a thread(context menu on a thread, inline call stack action) we pass the thread id\n// Otherwise when it is executed \"globaly\"(using the touch bar, debug toolbar, command palette) we do not pass any id and just take whatever is the focussed thread\n// Same for stackFrame commands and session commands.\nCommandsRegistry.registerCommand({\n\tid: COPY_STACK_TRACE_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst textResourcePropertiesService = accessor.get(ITextResourcePropertiesService);\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst frame = getFrame(debugService, context);\n\t\tif (frame) {\n\t\t\tconst eol = textResourcePropertiesService.getEOL(frame.source.uri);\n\t\t\tawait clipboardService.writeText(frame.thread.getCallStack().map(sf => sf.toString()).join(eol));\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: REVERSE_CONTINUE_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tawait getThreadAndRun(accessor, context, thread => thread.reverseContinue());\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: STEP_BACK_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.stepBack('instruction'));\n\t\t} else {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.stepBack());\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: TERMINATE_THREAD_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tawait getThreadAndRun(accessor, context, thread => thread.terminate());\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: JUMP_TO_CURSOR_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst stackFrame = debugService.getViewModel().focusedStackFrame;\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeEditorControl = editorService.activeTextEditorControl;\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tif (stackFrame && isCodeEditor(activeEditorControl) && activeEditorControl.hasModel()) {\n\t\t\tconst position = activeEditorControl.getPosition();\n\t\t\tconst resource = activeEditorControl.getModel().uri;\n\t\t\tconst source = stackFrame.thread.session.getSourceForUri(resource);\n\t\t\tif (source) {\n\t\t\t\tconst response = await stackFrame.thread.session.gotoTargets(source.raw, position.lineNumber, position.column);\n\t\t\t\tconst targets = response?.body.targets;\n\t\t\t\tif (targets && targets.length) {\n\t\t\t\t\tlet id = targets[0].id;\n\t\t\t\t\tif (targets.length > 1) {\n\t\t\t\t\t\tconst picks = targets.map(t => ({ label: t.label, _id: t.id }));\n\t\t\t\t\t\tconst pick = await quickInputService.pick(picks, { placeHolder: nls.localize('chooseLocation', \"Choose the specific location\") });\n\t\t\t\t\t\tif (!pick) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tid = pick._id;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn await stackFrame.thread.session.goto(stackFrame.thread.threadId, id).catch(e => notificationService.warn(e));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn notificationService.warn(nls.localize('noExecutableCode', \"No executable code is associated at the current cursor position.\"));\n\t}\n});\n\n\nCommandsRegistry.registerCommand({\n\tid: CALLSTACK_TOP_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tgoToTopOfCallStack(debugService);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: CALLSTACK_BOTTOM_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait goToBottomOfCallStack(debugService);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: CALLSTACK_UP_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tnavigateCallStack(debugService, false);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: CALLSTACK_DOWN_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tnavigateCallStack(debugService, true);\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n\tcommand: {\n\t\tid: JUMP_TO_CURSOR_ID,\n\t\ttitle: nls.localize('jumpToCursor', \"Jump to Cursor\"),\n\t\tcategory: DEBUG_COMMAND_CATEGORY\n\t},\n\twhen: ContextKeyExpr.and(CONTEXT_JUMP_TO_CURSOR_SUPPORTED, EditorContextKeys.editorTextFocus),\n\tgroup: 'debug',\n\torder: 3\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: NEXT_DEBUG_CONSOLE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\twhen: CONTEXT_IN_DEBUG_REPL,\n\tprimary: KeyMod.CtrlCmd | KeyCode.PageDown,\n\tmac: { primary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.BracketRight },\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tchangeDebugConsoleFocus(accessor, true);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: PREV_DEBUG_CONSOLE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\twhen: CONTEXT_IN_DEBUG_REPL,\n\tprimary: KeyMod.CtrlCmd | KeyCode.PageUp,\n\tmac: { primary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.BracketLeft },\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tchangeDebugConsoleFocus(accessor, false);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: RESTART_SESSION_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.F5,\n\twhen: CONTEXT_IN_DEBUG_MODE,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tlet session: IDebugSession | undefined;\n\t\tif (isSessionContext(context)) {\n\t\t\tsession = debugService.getModel().getSession(context.sessionId);\n\t\t} else {\n\t\t\tsession = debugService.getViewModel().focusedSession;\n\t\t}\n\n\t\tif (!session) {\n\t\t\tconst { launch, name } = debugService.getConfigurationManager().selectedConfiguration;\n\t\t\tawait debugService.startDebugging(launch, name, { noDebug: false, startedByUser: true });\n\t\t} else {\n\t\t\tconst showSubSessions = configurationService.getValue<IDebugConfiguration>('debug').showSubSessionsInToolBar;\n\t\t\t// Stop should be sent to the root parent session\n\t\t\twhile (!showSubSessions && session.lifecycleManagedByParent && session.parentSession) {\n\t\t\t\tsession = session.parentSession;\n\t\t\t}\n\t\t\tsession.removeReplExpressions();\n\t\t\tawait debugService.restartSession(session);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_OVER_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.F10,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo('stopped'),\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.next('instruction'));\n\t\t} else {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.next());\n\t\t}\n\t}\n});\n\n// Windows browsers use F11 for full screen, thus use alt+F11 as the default shortcut\nconst STEP_INTO_KEYBINDING = (isWeb && isWindows) ? (KeyMod.Alt | KeyCode.F11) : KeyCode.F11;\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_INTO_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 10, // Have a stronger weight to have priority over full screen when debugging\n\tprimary: STEP_INTO_KEYBINDING,\n\t// Use a more flexible when clause to not allow full screen command to take over when F11 pressed a lot of times\n\twhen: CONTEXT_DEBUG_STATE.notEqualsTo('inactive'),\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.stepIn('instruction'));\n\t\t} else {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.stepIn());\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_OUT_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F11,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo('stopped'),\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (CONTEXT_DISASSEMBLY_VIEW_FOCUS.getValue(contextKeyService)) {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.stepOut('instruction'));\n\t\t} else {\n\t\t\tawait getThreadAndRun(accessor, context, (thread: IThread) => thread.stepOut());\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: PAUSE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 2, // take priority over focus next part while we are debugging\n\tprimary: KeyCode.F6,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo('running'),\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tawait getThreadAndRun(accessor, context, thread => thread.pause());\n\t}\n});\n\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STEP_INTO_TARGET_ID,\n\tprimary: STEP_INTO_KEYBINDING | KeyMod.CtrlCmd,\n\twhen: ContextKeyExpr.and(CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped')),\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst session = debugService.getViewModel().focusedSession;\n\t\tconst frame = debugService.getViewModel().focusedStackFrame;\n\t\tif (!frame || !session) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = await accessor.get(IEditorService).openEditor({\n\t\t\tresource: frame.source.uri,\n\t\t\toptions: { revealIfOpened: true }\n\t\t});\n\n\t\tlet codeEditor: ICodeEditor | undefined;\n\t\tif (editor) {\n\t\t\tconst ctrl = editor?.getControl();\n\t\t\tif (isCodeEditor(ctrl)) {\n\t\t\t\tcodeEditor = ctrl;\n\t\t\t}\n\t\t}\n\n\t\tinterface ITargetItem extends IQuickPickItem {\n\t\t\ttarget: DebugProtocol.StepInTarget;\n\t\t}\n\n\t\tconst qp = quickInputService.createQuickPick<ITargetItem>();\n\t\tqp.busy = true;\n\t\tqp.show();\n\n\t\tqp.onDidChangeActive(([item]) => {\n\t\t\tif (codeEditor && item && item.target.line !== undefined) {\n\t\t\t\tcodeEditor.revealLineInCenterIfOutsideViewport(item.target.line);\n\t\t\t\tcodeEditor.setSelection({\n\t\t\t\t\tstartLineNumber: item.target.line,\n\t\t\t\t\tstartColumn: item.target.column || 1,\n\t\t\t\t\tendLineNumber: item.target.endLine || item.target.line,\n\t\t\t\t\tendColumn: item.target.endColumn || item.target.column || 1,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tqp.onDidAccept(() => {\n\t\t\tif (qp.activeItems.length) {\n\t\t\t\tsession.stepIn(frame.thread.threadId, qp.activeItems[0].target.id);\n\t\t\t}\n\t\t});\n\n\t\tqp.onDidHide(() => qp.dispose());\n\n\t\tsession.stepInTargets(frame.frameId).then(targets => {\n\t\t\tqp.busy = false;\n\t\t\tif (targets?.length) {\n\t\t\t\tqp.items = targets?.map(target => ({ target, label: target.label }));\n\t\t\t} else {\n\t\t\t\tqp.placeholder = nls.localize('editor.debug.action.stepIntoTargets.none', \"No step targets available\");\n\t\t\t}\n\t\t});\n\t}\n});\n\nasync function stopHandler(accessor: ServicesAccessor, _: string, context: CallStackContext | unknown, disconnect: boolean, suspend?: boolean): Promise<void> {\n\tconst debugService = accessor.get(IDebugService);\n\tlet session: IDebugSession | undefined;\n\tif (isSessionContext(context)) {\n\t\tsession = debugService.getModel().getSession(context.sessionId);\n\t} else {\n\t\tsession = debugService.getViewModel().focusedSession;\n\t}\n\n\tconst configurationService = accessor.get(IConfigurationService);\n\tconst showSubSessions = configurationService.getValue<IDebugConfiguration>('debug').showSubSessionsInToolBar;\n\t// Stop should be sent to the root parent session\n\twhile (!showSubSessions && session && session.lifecycleManagedByParent && session.parentSession) {\n\t\tsession = session.parentSession;\n\t}\n\n\tawait debugService.stopSession(session, disconnect, suspend);\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: DISCONNECT_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F5,\n\twhen: ContextKeyExpr.and(CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_IN_DEBUG_MODE),\n\thandler: (accessor, _, context) => stopHandler(accessor, _, context, true)\n});\n\nCommandsRegistry.registerCommand({\n\tid: DISCONNECT_AND_SUSPEND_ID,\n\thandler: (accessor, _, context) => stopHandler(accessor, _, context, true, true)\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: STOP_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F5,\n\twhen: ContextKeyExpr.and(CONTEXT_FOCUSED_SESSION_IS_ATTACH.toNegated(), CONTEXT_IN_DEBUG_MODE),\n\thandler: (accessor, _, context) => stopHandler(accessor, _, context, false)\n});\n\nCommandsRegistry.registerCommand({\n\tid: RESTART_FRAME_ID,\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst frame = getFrame(debugService, context);\n\t\tif (frame) {\n\t\t\ttry {\n\t\t\t\tawait frame.restart();\n\t\t\t} catch (e) {\n\t\t\t\tnotificationService.error(e);\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: CONTINUE_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 10, // Use a stronger weight to get priority over start debugging F5 shortcut\n\tprimary: KeyCode.F5,\n\twhen: CONTEXT_DEBUG_STATE.isEqualTo('stopped'),\n\thandler: async (accessor: ServicesAccessor, _: string, context: CallStackContext | unknown) => {\n\t\tawait getThreadAndRun(accessor, context, thread => thread.continue());\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SHOW_LOADED_SCRIPTS_ID,\n\thandler: async (accessor) => {\n\t\tawait showLoadedScriptMenu(accessor);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: FOCUS_REPL_ID,\n\thandler: async (accessor) => {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tawait viewsService.openView(REPL_VIEW_ID, true);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'debug.startFromConfig',\n\thandler: async (accessor, config: IConfig) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait debugService.startDebugging(undefined, config);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: FOCUS_SESSION_ID,\n\thandler: async (accessor: ServicesAccessor, session: IDebugSession) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst stoppedChildSession = debugService.getModel().getSessions().find(s => s.parentSession === session && s.state === State.Stopped);\n\t\tif (stoppedChildSession && session.state !== State.Stopped) {\n\t\t\tsession = stoppedChildSession;\n\t\t}\n\t\tawait debugService.focusStackFrame(undefined, undefined, session, { explicit: true });\n\t\tconst stackFrame = debugService.getViewModel().focusedStackFrame;\n\t\tif (stackFrame) {\n\t\t\tawait stackFrame.openInEditor(editorService, true);\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SELECT_AND_START_ID,\n\thandler: async (accessor: ServicesAccessor, debugType: string | unknown) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tif (debugType) {\n\t\t\tconst configManager = debugService.getConfigurationManager();\n\t\t\tconst dynamicProviders = await configManager.getDynamicProviders();\n\t\t\tfor (const provider of dynamicProviders) {\n\t\t\t\tif (provider.type === debugType) {\n\t\t\t\t\tconst pick = await provider.pick();\n\t\t\t\t\tif (pick) {\n\t\t\t\t\t\tawait configManager.selectConfiguration(pick.launch, pick.config.name, pick.config, { type: provider.type });\n\t\t\t\t\t\tdebugService.startDebugging(pick.launch, pick.config, { startedByUser: true });\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tquickInputService.quickAccess.show(DEBUG_QUICK_ACCESS_PREFIX);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SELECT_DEBUG_CONSOLE_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.quickAccess.show(DEBUG_CONSOLE_QUICK_ACCESS_PREFIX);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SELECT_DEBUG_SESSION_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tshowDebugSessionMenu(accessor, SELECT_AND_START_ID);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: DEBUG_START_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyCode.F5,\n\twhen: ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE.isEqualTo('inactive')),\n\thandler: async (accessor: ServicesAccessor, debugStartOptions?: { config?: Partial<IConfig>; noDebug?: boolean }) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tawait saveAllBeforeDebugStart(accessor.get(IConfigurationService), accessor.get(IEditorService));\n\t\tconst { launch, name, getConfig } = debugService.getConfigurationManager().selectedConfiguration;\n\t\tconst config = await getConfig();\n\t\tconst configOrName = config ? Object.assign(deepClone(config), debugStartOptions?.config) : name;\n\t\tawait debugService.startDebugging(launch, configOrName, { noDebug: debugStartOptions?.noDebug, startedByUser: true }, false);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: DEBUG_RUN_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.F5,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.F5 },\n\twhen: ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(State.Initializing))),\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tawait commandService.executeCommand(DEBUG_START_COMMAND_ID, { noDebug: true });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.toggleBreakpoint',\n\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\twhen: ContextKeyExpr.and(CONTEXT_BREAKPOINTS_FOCUSED, InputFocusedContext.toNegated()),\n\tprimary: KeyCode.Space,\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst list = listService.lastFocusedList;\n\t\tif (list instanceof List) {\n\t\t\tconst focused = <IEnablement[]>list.getFocusedElements();\n\t\t\tif (focused && focused.length) {\n\t\t\t\tdebugService.enableOrDisableBreakpoints(!focused[0].enabled, focused[0]);\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.enableOrDisableBreakpoint',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: undefined,\n\twhen: EditorContextKeys.editorTextFocus,\n\thandler: (accessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst control = editorService.activeTextEditorControl;\n\t\tif (isCodeEditor(control)) {\n\t\t\tconst model = control.getModel();\n\t\t\tif (model) {\n\t\t\t\tconst position = control.getPosition();\n\t\t\t\tif (position) {\n\t\t\t\t\tconst bps = debugService.getModel().getBreakpoints({ uri: model.uri, lineNumber: position.lineNumber });\n\t\t\t\t\tif (bps.length) {\n\t\t\t\t\t\tdebugService.enableOrDisableBreakpoints(!bps[0].enabled, bps[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: EDIT_EXPRESSION_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\twhen: CONTEXT_WATCH_EXPRESSIONS_FOCUSED,\n\tprimary: KeyCode.F2,\n\tmac: { primary: KeyCode.Enter },\n\thandler: (accessor: ServicesAccessor, expression: Expression | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (!(expression instanceof Expression)) {\n\t\t\tconst listService = accessor.get(IListService);\n\t\t\tconst focused = listService.lastFocusedList;\n\t\t\tif (focused) {\n\t\t\t\tconst elements = focused.getFocus();\n\t\t\t\tif (Array.isArray(elements) && elements[0] instanceof Expression) {\n\t\t\t\t\texpression = elements[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (expression instanceof Expression) {\n\t\t\tdebugService.getViewModel().setSelectedExpression(expression, false);\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SET_EXPRESSION_COMMAND_ID,\n\thandler: async (accessor: ServicesAccessor, expression: Expression | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (expression instanceof Expression || expression instanceof Variable) {\n\t\t\tdebugService.getViewModel().setSelectedExpression(expression, true);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.setVariable',\n\tweight: KeybindingWeight.WorkbenchContrib + 5,\n\twhen: CONTEXT_VARIABLES_FOCUSED,\n\tprimary: KeyCode.F2,\n\tmac: { primary: KeyCode.Enter },\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst focused = listService.lastFocusedList;\n\n\t\tif (focused) {\n\t\t\tconst elements = focused.getFocus();\n\t\t\tif (Array.isArray(elements) && elements[0] instanceof Variable) {\n\t\t\t\tdebugService.getViewModel().setSelectedExpression(elements[0], false);\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: REMOVE_EXPRESSION_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(CONTEXT_WATCH_EXPRESSIONS_FOCUSED, CONTEXT_EXPRESSION_SELECTED.toNegated()),\n\tprimary: KeyCode.Delete,\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.Backspace },\n\thandler: (accessor: ServicesAccessor, expression: Expression | unknown) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tif (expression instanceof Expression) {\n\t\t\tdebugService.removeWatchExpressions(expression.getId());\n\t\t\treturn;\n\t\t}\n\n\t\tconst listService = accessor.get(IListService);\n\t\tconst focused = listService.lastFocusedList;\n\t\tif (focused) {\n\t\t\tlet elements = focused.getFocus();\n\t\t\tif (Array.isArray(elements) && elements[0] instanceof Expression) {\n\t\t\t\tconst selection = focused.getSelection();\n\t\t\t\tif (selection && selection.indexOf(elements[0]) >= 0) {\n\t\t\t\t\telements = selection;\n\t\t\t\t}\n\t\t\t\telements.forEach((e: Expression) => debugService.removeWatchExpressions(e.getId()));\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.removeBreakpoint',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(CONTEXT_BREAKPOINTS_FOCUSED, CONTEXT_BREAKPOINT_INPUT_FOCUSED.toNegated()),\n\tprimary: KeyCode.Delete,\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.Backspace },\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst list = listService.lastFocusedList;\n\n\t\tif (list instanceof List) {\n\t\t\tconst focused = list.getFocusedElements();\n\t\t\tconst element = focused.length ? focused[0] : undefined;\n\t\t\tif (element instanceof Breakpoint) {\n\t\t\t\tdebugService.removeBreakpoints(element.getId());\n\t\t\t} else if (element instanceof FunctionBreakpoint) {\n\t\t\t\tdebugService.removeFunctionBreakpoints(element.getId());\n\t\t\t} else if (element instanceof DataBreakpoint) {\n\t\t\t\tdebugService.removeDataBreakpoints(element.getId());\n\t\t\t}\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.installAdditionalDebuggers',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: undefined,\n\thandler: async (accessor, query: string) => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = (await paneCompositeService.openPaneComposite(EXTENSIONS_VIEWLET_ID, ViewContainerLocation.Sidebar, true))?.getViewPaneContainer() as IExtensionsViewPaneContainer;\n\t\tlet searchFor = `@category:debuggers`;\n\t\tif (typeof query === 'string') {\n\t\t\tsearchFor += ` ${query}`;\n\t\t}\n\t\tviewlet.search(searchFor);\n\t\tviewlet.focus();\n\t}\n});\n\nregisterAction2(class AddConfigurationAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ADD_CONFIGURATION_ID,\n\t\t\ttitle: { value: nls.localize('addConfiguration', \"Add Configuration...\"), original: 'Add Configuration...' },\n\t\t\tcategory: DEBUG_COMMAND_CATEGORY,\n\t\t\tf1: true,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.EditorContent,\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.regex(ResourceContextKey.Path.key, /\\.vscode[/\\\\]launch\\.json$/),\n\t\t\t\t\tActiveEditorContext.isEqualTo(TEXT_FILE_EDITOR_ID))\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, launchUri: string): Promise<void> {\n\t\tconst manager = accessor.get(IDebugService).getConfigurationManager();\n\n\t\tconst launch = manager.getLaunches().find(l => l.uri.toString() === launchUri) || manager.selectedConfiguration.launch;\n\t\tif (launch) {\n\t\t\tconst { editor, created } = await launch.openConfigFile({ preserveFocus: false });\n\t\t\tif (editor && !created) {\n\t\t\t\tconst codeEditor = <ICodeEditor>editor.getControl();\n\t\t\t\tif (codeEditor) {\n\t\t\t\t\tawait codeEditor.getContribution<IDebugEditorContribution>(EDITOR_CONTRIBUTION_ID)?.addLaunchConfiguration();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nconst inlineBreakpointHandler = (accessor: ServicesAccessor) => {\n\tconst debugService = accessor.get(IDebugService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst control = editorService.activeTextEditorControl;\n\tif (isCodeEditor(control)) {\n\t\tconst position = control.getPosition();\n\t\tif (position && control.hasModel() && debugService.canSetBreakpointsIn(control.getModel())) {\n\t\t\tconst modelUri = control.getModel().uri;\n\t\t\tconst breakpointAlreadySet = debugService.getModel().getBreakpoints({ lineNumber: position.lineNumber, uri: modelUri })\n\t\t\t\t.some(bp => (bp.sessionAgnosticData.column === position.column || (!bp.column && position.column <= 1)));\n\n\t\t\tif (!breakpointAlreadySet) {\n\t\t\t\tdebugService.addBreakpoints(modelUri, [{ lineNumber: position.lineNumber, column: position.column > 1 ? position.column : undefined }]);\n\t\t\t}\n\t\t}\n\t}\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.Shift | KeyCode.F9,\n\twhen: EditorContextKeys.editorTextFocus,\n\tid: TOGGLE_INLINE_BREAKPOINT_ID,\n\thandler: inlineBreakpointHandler\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n\tcommand: {\n\t\tid: TOGGLE_INLINE_BREAKPOINT_ID,\n\t\ttitle: nls.localize('addInlineBreakpoint', \"Add Inline Breakpoint\"),\n\t\tcategory: DEBUG_COMMAND_CATEGORY\n\t},\n\twhen: ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, PanelFocusContext.toNegated(), EditorContextKeys.editorTextFocus),\n\tgroup: 'debug',\n\torder: 1\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.openBreakpointToSide',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: CONTEXT_BREAKPOINTS_FOCUSED,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tsecondary: [KeyMod.Alt | KeyCode.Enter],\n\thandler: (accessor) => {\n\t\tconst listService = accessor.get(IListService);\n\t\tconst list = listService.lastFocusedList;\n\t\tif (list instanceof List) {\n\t\t\tconst focus = list.getFocusedElements();\n\t\t\tif (focus.length && focus[0] instanceof Breakpoint) {\n\t\t\t\treturn openBreakpointSource(focus[0], true, false, true, accessor.get(IDebugService), accessor.get(IEditorService));\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n});\n\n// When there are no debug extensions, open the debug viewlet when F5 is pressed so the user can read the limitations\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'debug.openView',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: CONTEXT_DEBUGGERS_AVAILABLE.toNegated(),\n\tprimary: KeyCode.F5,\n\tsecondary: [KeyMod.CtrlCmd | KeyCode.F5],\n\thandler: async (accessor) => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tawait paneCompositeService.openPaneComposite(VIEWLET_ID, ViewContainerLocation.Sidebar, true);\n\t}\n});\n"]}