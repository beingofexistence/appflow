{"version":3,"sources":["vs/workbench/contrib/debug/browser/breakpointWidget.ts"],"names":[],"mappings":"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","file":"breakpointWidget.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/breakpointWidget';\nimport * as nls from 'vs/nls';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { SelectBox, ISelectOptionItem } from 'vs/base/browser/ui/selectBox/selectBox';\nimport * as lifecycle from 'vs/base/common/lifecycle';\nimport * as dom from 'vs/base/browser/dom';\nimport { Position, IPosition } from 'vs/editor/common/core/position';\nimport { ICodeEditor, IActiveCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ZoneWidget } from 'vs/editor/contrib/zoneWidget/browser/zoneWidget';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IDebugService, IBreakpoint, BreakpointWidgetContext as Context, CONTEXT_BREAKPOINT_WIDGET_VISIBLE, DEBUG_SCHEME, CONTEXT_IN_BREAKPOINT_WIDGET, IBreakpointUpdateData, IBreakpointEditorContribution, BREAKPOINT_EDITOR_CONTRIBUTION_ID } from 'vs/workbench/contrib/debug/common/debug';\nimport { IThemeService, IColorTheme } from 'vs/platform/theme/common/themeService';\nimport { createDecorator, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { ServicesAccessor, EditorCommand, registerEditorCommand } from 'vs/editor/browser/editorExtensions';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { CompletionList, CompletionContext, CompletionItemKind } from 'vs/editor/common/languages';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { provideSuggestionItems, CompletionOptions } from 'vs/editor/contrib/suggest/browser/suggest';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { editorForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IDecorationOptions } from 'vs/editor/common/editorCommon';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { getSimpleEditorOptions, getSimpleCodeEditorWidgetOptions } from 'vs/workbench/contrib/codeEditor/browser/simpleEditorOptions';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEditorOptions, EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { defaultSelectBoxStyles } from 'vs/platform/theme/browser/defaultStyles';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\n\nconst $ = dom.$;\nconst IPrivateBreakpointWidgetService = createDecorator<IPrivateBreakpointWidgetService>('privateBreakpointWidgetService');\ninterface IPrivateBreakpointWidgetService {\n\treadonly _serviceBrand: undefined;\n\tclose(success: boolean): void;\n}\nconst DECORATION_KEY = 'breakpointwidgetdecoration';\n\nfunction isPositionInCurlyBracketBlock(input: IActiveCodeEditor): boolean {\n\tconst model = input.getModel();\n\tconst bracketPairs = model.bracketPairs.getBracketPairsInRange(Range.fromPositions(input.getPosition()));\n\treturn bracketPairs.some(p => p.openingBracketInfo.bracketText === '{');\n}\n\nfunction createDecorations(theme: IColorTheme, placeHolder: string): IDecorationOptions[] {\n\tconst transparentForeground = theme.getColor(editorForeground)?.transparent(0.4);\n\treturn [{\n\t\trange: {\n\t\t\tstartLineNumber: 0,\n\t\t\tendLineNumber: 0,\n\t\t\tstartColumn: 0,\n\t\t\tendColumn: 1\n\t\t},\n\t\trenderOptions: {\n\t\t\tafter: {\n\t\t\t\tcontentText: placeHolder,\n\t\t\t\tcolor: transparentForeground ? transparentForeground.toString() : undefined\n\t\t\t}\n\t\t}\n\t}];\n}\n\nexport class BreakpointWidget extends ZoneWidget implements IPrivateBreakpointWidgetService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate selectContainer!: HTMLElement;\n\tprivate inputContainer!: HTMLElement;\n\tprivate input!: IActiveCodeEditor;\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate conditionInput = '';\n\tprivate hitCountInput = '';\n\tprivate logMessageInput = '';\n\tprivate breakpoint: IBreakpoint | undefined;\n\tprivate context: Context;\n\tprivate heightInPx: number | undefined;\n\n\tconstructor(editor: ICodeEditor, private lineNumber: number, private column: number | undefined, context: Context | undefined,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t) {\n\t\tsuper(editor, { showFrame: true, showArrow: false, frameWidth: 1, isAccessible: true });\n\n\t\tthis.toDispose = [];\n\t\tconst model = this.editor.getModel();\n\t\tif (model) {\n\t\t\tconst uri = model.uri;\n\t\t\tconst breakpoints = this.debugService.getModel().getBreakpoints({ lineNumber: this.lineNumber, column: this.column, uri });\n\t\t\tthis.breakpoint = breakpoints.length ? breakpoints[0] : undefined;\n\t\t}\n\n\t\tif (context === undefined) {\n\t\t\tif (this.breakpoint && !this.breakpoint.condition && !this.breakpoint.hitCondition && this.breakpoint.logMessage) {\n\t\t\t\tthis.context = Context.LOG_MESSAGE;\n\t\t\t} else if (this.breakpoint && !this.breakpoint.condition && this.breakpoint.hitCondition) {\n\t\t\t\tthis.context = Context.HIT_COUNT;\n\t\t\t} else {\n\t\t\t\tthis.context = Context.CONDITION;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.context = context;\n\t\t}\n\n\t\tthis.toDispose.push(this.debugService.getModel().onDidChangeBreakpoints(e => {\n\t\t\tif (this.breakpoint && e && e.removed && e.removed.indexOf(this.breakpoint) >= 0) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\t\tthis.codeEditorService.registerDecorationType('breakpoint-widget', DECORATION_KEY, {});\n\n\t\tthis.create();\n\t}\n\n\tprivate get placeholder(): string {\n\t\tconst acceptString = this.keybindingService.lookupKeybinding(AcceptBreakpointWidgetInputAction.ID)?.getLabel() || 'Enter';\n\t\tconst closeString = this.keybindingService.lookupKeybinding(CloseBreakpointWidgetCommand.ID)?.getLabel() || 'Escape';\n\t\tswitch (this.context) {\n\t\t\tcase Context.LOG_MESSAGE:\n\t\t\t\treturn nls.localize('breakpointWidgetLogMessagePlaceholder', \"Message to log when breakpoint is hit. Expressions within {} are interpolated. '{0}' to accept, '{1}' to cancel.\", acceptString, closeString);\n\t\t\tcase Context.HIT_COUNT:\n\t\t\t\treturn nls.localize('breakpointWidgetHitCountPlaceholder', \"Break when hit count condition is met. '{0}' to accept, '{1}' to cancel.\", acceptString, closeString);\n\t\t\tdefault:\n\t\t\t\treturn nls.localize('breakpointWidgetExpressionPlaceholder', \"Break when expression evaluates to true. '{0}' to accept, '{1}' to cancel.\", acceptString, closeString);\n\t\t}\n\t}\n\n\tprivate getInputValue(breakpoint: IBreakpoint | undefined): string {\n\t\tswitch (this.context) {\n\t\t\tcase Context.LOG_MESSAGE:\n\t\t\t\treturn breakpoint && breakpoint.logMessage ? breakpoint.logMessage : this.logMessageInput;\n\t\t\tcase Context.HIT_COUNT:\n\t\t\t\treturn breakpoint && breakpoint.hitCondition ? breakpoint.hitCondition : this.hitCountInput;\n\t\t\tdefault:\n\t\t\t\treturn breakpoint && breakpoint.condition ? breakpoint.condition : this.conditionInput;\n\t\t}\n\t}\n\n\tprivate rememberInput(): void {\n\t\tconst value = this.input.getModel().getValue();\n\t\tswitch (this.context) {\n\t\t\tcase Context.LOG_MESSAGE:\n\t\t\t\tthis.logMessageInput = value;\n\t\t\t\tbreak;\n\t\t\tcase Context.HIT_COUNT:\n\t\t\t\tthis.hitCountInput = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.conditionInput = value;\n\t\t}\n\t}\n\n\tprivate setInputMode(): void {\n\t\tif (this.editor.hasModel()) {\n\t\t\t// Use plaintext language for log messages, otherwise respect underlying editor language #125619\n\t\t\tconst languageId = this.context === Context.LOG_MESSAGE ? PLAINTEXT_LANGUAGE_ID : this.editor.getModel().getLanguageId();\n\t\t\tthis.input.getModel().setLanguage(languageId);\n\t\t}\n\t}\n\n\toverride show(rangeOrPos: IRange | IPosition): void {\n\t\tconst lineNum = this.input.getModel().getLineCount();\n\t\tsuper.show(rangeOrPos, lineNum + 1);\n\t}\n\n\tfitHeightToContent(): void {\n\t\tconst lineNum = this.input.getModel().getLineCount();\n\t\tthis._relayout(lineNum + 1);\n\t}\n\n\tprotected _fillContainer(container: HTMLElement): void {\n\t\tthis.setCssClass('breakpoint-widget');\n\t\tconst selectBox = new SelectBox(<ISelectOptionItem[]>[{ text: nls.localize('expression', \"Expression\") }, { text: nls.localize('hitCount', \"Hit Count\") }, { text: nls.localize('logMessage', \"Log Message\") }], this.context, this.contextViewService, defaultSelectBoxStyles, { ariaLabel: nls.localize('breakpointType', 'Breakpoint Type') });\n\t\tthis.selectContainer = $('.breakpoint-select-container');\n\t\tselectBox.render(dom.append(container, this.selectContainer));\n\t\tselectBox.onDidSelect(e => {\n\t\t\tthis.rememberInput();\n\t\t\tthis.context = e.index;\n\t\t\tthis.setInputMode();\n\n\t\t\tconst value = this.getInputValue(this.breakpoint);\n\t\t\tthis.input.getModel().setValue(value);\n\t\t\tthis.input.focus();\n\t\t});\n\n\t\tthis.inputContainer = $('.inputContainer');\n\t\tthis.createBreakpointInput(dom.append(container, this.inputContainer));\n\n\t\tthis.input.getModel().setValue(this.getInputValue(this.breakpoint));\n\t\tthis.toDispose.push(this.input.getModel().onDidChangeContent(() => {\n\t\t\tthis.fitHeightToContent();\n\t\t}));\n\t\tthis.input.setPosition({ lineNumber: 1, column: this.input.getModel().getLineMaxColumn(1) });\n\t\t// Due to an electron bug we have to do the timeout, otherwise we do not get focus\n\t\tsetTimeout(() => this.input.focus(), 150);\n\t}\n\n\tprotected override _doLayout(heightInPixel: number, widthInPixel: number): void {\n\t\tthis.heightInPx = heightInPixel;\n\t\tthis.input.layout({ height: heightInPixel, width: widthInPixel - 113 });\n\t\tthis.centerInputVertically();\n\t}\n\n\tprotected override _onWidth(widthInPixel: number): void {\n\t\tif (typeof this.heightInPx === 'number') {\n\t\t\tthis._doLayout(this.heightInPx, widthInPixel);\n\t\t}\n\t}\n\n\tprivate createBreakpointInput(container: HTMLElement): void {\n\t\tconst scopedContextKeyService = this.contextKeyService.createScoped(container);\n\t\tthis.toDispose.push(scopedContextKeyService);\n\n\t\tconst scopedInstatiationService = this.instantiationService.createChild(new ServiceCollection(\n\t\t\t[IContextKeyService, scopedContextKeyService], [IPrivateBreakpointWidgetService, this]));\n\n\t\tconst options = this.createEditorOptions();\n\t\tconst codeEditorWidgetOptions = getSimpleCodeEditorWidgetOptions();\n\t\tthis.input = <IActiveCodeEditor>scopedInstatiationService.createInstance(CodeEditorWidget, container, options, codeEditorWidgetOptions);\n\t\tCONTEXT_IN_BREAKPOINT_WIDGET.bindTo(scopedContextKeyService).set(true);\n\t\tconst model = this.modelService.createModel('', null, uri.parse(`${DEBUG_SCHEME}:${this.editor.getId()}:breakpointinput`), true);\n\t\tif (this.editor.hasModel()) {\n\t\t\tmodel.setLanguage(this.editor.getModel().getLanguageId());\n\t\t}\n\t\tthis.input.setModel(model);\n\t\tthis.setInputMode();\n\t\tthis.toDispose.push(model);\n\t\tconst setDecorations = () => {\n\t\t\tconst value = this.input.getModel().getValue();\n\t\t\tconst decorations = !!value ? [] : createDecorations(this.themeService.getColorTheme(), this.placeholder);\n\t\t\tthis.input.setDecorationsByType('breakpoint-widget', DECORATION_KEY, decorations);\n\t\t};\n\t\tthis.input.getModel().onDidChangeContent(() => setDecorations());\n\t\tthis.themeService.onDidColorThemeChange(() => setDecorations());\n\n\t\tthis.toDispose.push(this.languageFeaturesService.completionProvider.register({ scheme: DEBUG_SCHEME, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: 'breakpointWidget',\n\t\t\tprovideCompletionItems: (model: ITextModel, position: Position, _context: CompletionContext, token: CancellationToken): Promise<CompletionList> => {\n\t\t\t\tlet suggestionsPromise: Promise<CompletionList>;\n\t\t\t\tconst underlyingModel = this.editor.getModel();\n\t\t\t\tif (underlyingModel && (this.context === Context.CONDITION || (this.context === Context.LOG_MESSAGE && isPositionInCurlyBracketBlock(this.input)))) {\n\t\t\t\t\tsuggestionsPromise = provideSuggestionItems(this.languageFeaturesService.completionProvider, underlyingModel, new Position(this.lineNumber, 1), new CompletionOptions(undefined, new Set<CompletionItemKind>().add(CompletionItemKind.Snippet)), _context, token).then(suggestions => {\n\n\t\t\t\t\t\tlet overwriteBefore = 0;\n\t\t\t\t\t\tif (this.context === Context.CONDITION) {\n\t\t\t\t\t\t\toverwriteBefore = position.column - 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Inside the currly brackets, need to count how many useful characters are behind the position so they would all be taken into account\n\t\t\t\t\t\t\tconst value = this.input.getModel().getValue();\n\t\t\t\t\t\t\twhile ((position.column - 2 - overwriteBefore >= 0) && value[position.column - 2 - overwriteBefore] !== '{' && value[position.column - 2 - overwriteBefore] !== ' ') {\n\t\t\t\t\t\t\t\toverwriteBefore++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tsuggestions: suggestions.items.map(s => {\n\t\t\t\t\t\t\t\ts.completion.range = Range.fromPositions(position.delta(0, -overwriteBefore), position);\n\t\t\t\t\t\t\t\treturn s.completion;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsuggestionsPromise = Promise.resolve({ suggestions: [] });\n\t\t\t\t}\n\n\t\t\t\treturn suggestionsPromise;\n\t\t\t}\n\t\t}));\n\n\t\tthis.toDispose.push(this._configurationService.onDidChangeConfiguration((e) => {\n\t\t\tif (e.affectsConfiguration('editor.fontSize') || e.affectsConfiguration('editor.lineHeight')) {\n\t\t\t\tthis.input.updateOptions(this.createEditorOptions());\n\t\t\t\tthis.centerInputVertically();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate createEditorOptions(): IEditorOptions {\n\t\tconst editorConfig = this._configurationService.getValue<IEditorOptions>('editor');\n\t\tconst options = getSimpleEditorOptions(this._configurationService);\n\t\toptions.fontSize = editorConfig.fontSize;\n\t\toptions.fontFamily = editorConfig.fontFamily;\n\t\toptions.lineHeight = editorConfig.lineHeight;\n\t\toptions.fontLigatures = editorConfig.fontLigatures;\n\t\toptions.ariaLabel = this.placeholder;\n\t\treturn options;\n\t}\n\n\tprivate centerInputVertically() {\n\t\tif (this.container && typeof this.heightInPx === 'number') {\n\t\t\tconst lineHeight = this.input.getOption(EditorOption.lineHeight);\n\t\t\tconst lineNum = this.input.getModel().getLineCount();\n\t\t\tconst newTopMargin = (this.heightInPx - lineNum * lineHeight) / 2;\n\t\t\tthis.inputContainer.style.marginTop = newTopMargin + 'px';\n\t\t}\n\t}\n\n\tclose(success: boolean): void {\n\t\tif (success) {\n\t\t\t// if there is already a breakpoint on this location - remove it.\n\n\t\t\tlet condition = this.breakpoint && this.breakpoint.condition;\n\t\t\tlet hitCondition = this.breakpoint && this.breakpoint.hitCondition;\n\t\t\tlet logMessage = this.breakpoint && this.breakpoint.logMessage;\n\t\t\tthis.rememberInput();\n\n\t\t\tif (this.conditionInput || this.context === Context.CONDITION) {\n\t\t\t\tcondition = this.conditionInput;\n\t\t\t}\n\t\t\tif (this.hitCountInput || this.context === Context.HIT_COUNT) {\n\t\t\t\thitCondition = this.hitCountInput;\n\t\t\t}\n\t\t\tif (this.logMessageInput || this.context === Context.LOG_MESSAGE) {\n\t\t\t\tlogMessage = this.logMessageInput;\n\t\t\t}\n\n\t\t\tif (this.breakpoint) {\n\t\t\t\tconst data = new Map<string, IBreakpointUpdateData>();\n\t\t\t\tdata.set(this.breakpoint.getId(), {\n\t\t\t\t\tcondition,\n\t\t\t\t\thitCondition,\n\t\t\t\t\tlogMessage\n\t\t\t\t});\n\t\t\t\tthis.debugService.updateBreakpoints(this.breakpoint.originalUri, data, false).then(undefined, onUnexpectedError);\n\t\t\t} else {\n\t\t\t\tconst model = this.editor.getModel();\n\t\t\t\tif (model) {\n\t\t\t\t\tthis.debugService.addBreakpoints(model.uri, [{\n\t\t\t\t\t\tlineNumber: this.lineNumber,\n\t\t\t\t\t\tcolumn: this.column,\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\tcondition,\n\t\t\t\t\t\thitCondition,\n\t\t\t\t\t\tlogMessage\n\t\t\t\t\t}]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dispose();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tlifecycle.dispose(this.toDispose);\n\t\tsetTimeout(() => this.editor.focus(), 0);\n\t}\n}\n\nclass AcceptBreakpointWidgetInputAction extends EditorCommand {\n\tstatic ID = 'breakpointWidget.action.acceptInput';\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AcceptBreakpointWidgetInputAction.ID,\n\t\t\tprecondition: CONTEXT_BREAKPOINT_WIDGET_VISIBLE,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: CONTEXT_IN_BREAKPOINT_WIDGET,\n\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\taccessor.get(IPrivateBreakpointWidgetService).close(true);\n\t}\n}\n\nclass CloseBreakpointWidgetCommand extends EditorCommand {\n\tstatic ID = 'closeBreakpointWidget';\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CloseBreakpointWidgetCommand.ID,\n\t\t\tprecondition: CONTEXT_BREAKPOINT_WIDGET_VISIBLE,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tconst debugContribution = editor.getContribution<IBreakpointEditorContribution>(BREAKPOINT_EDITOR_CONTRIBUTION_ID);\n\t\tif (debugContribution) {\n\t\t\t// if focus is in outer editor we need to use the debug contribution to close\n\t\t\treturn debugContribution.closeBreakpointWidget();\n\t\t}\n\n\t\taccessor.get(IPrivateBreakpointWidgetService).close(false);\n\t}\n}\n\nregisterEditorCommand(new AcceptBreakpointWidgetInputAction());\nregisterEditorCommand(new CloseBreakpointWidgetCommand());\n"]}