{"version":3,"sources":["vs/workbench/contrib/debug/browser/debugIcons.ts"],"names":[],"mappings":"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","file":"debugIcons.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from 'vs/base/common/codicons';\nimport { localize } from 'vs/nls';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\n\nexport const debugConsoleViewIcon = registerIcon('debug-console-view-icon', Codicon.debugConsole, localize('debugConsoleViewIcon', 'View icon of the debug console view.'));\nexport const runViewIcon = registerIcon('run-view-icon', Codicon.debugAlt, localize('runViewIcon', 'View icon of the run view.'));\nexport const variablesViewIcon = registerIcon('variables-view-icon', Codicon.debugAlt, localize('variablesViewIcon', 'View icon of the variables view.'));\nexport const watchViewIcon = registerIcon('watch-view-icon', Codicon.debugAlt, localize('watchViewIcon', 'View icon of the watch view.'));\nexport const callStackViewIcon = registerIcon('callstack-view-icon', Codicon.debugAlt, localize('callStackViewIcon', 'View icon of the call stack view.'));\nexport const breakpointsViewIcon = registerIcon('breakpoints-view-icon', Codicon.debugAlt, localize('breakpointsViewIcon', 'View icon of the breakpoints view.'));\nexport const loadedScriptsViewIcon = registerIcon('loaded-scripts-view-icon', Codicon.debugAlt, localize('loadedScriptsViewIcon', 'View icon of the loaded scripts view.'));\n\nexport const breakpoint = {\n\tregular: registerIcon('debug-breakpoint', Codicon.debugBreakpoint, localize('debugBreakpoint', 'Icon for breakpoints.')),\n\tdisabled: registerIcon('debug-breakpoint-disabled', Codicon.debugBreakpointDisabled, localize('debugBreakpointDisabled', 'Icon for disabled breakpoints.')),\n\tunverified: registerIcon('debug-breakpoint-unverified', Codicon.debugBreakpointUnverified, localize('debugBreakpointUnverified', 'Icon for unverified breakpoints.'))\n};\nexport const functionBreakpoint = {\n\tregular: registerIcon('debug-breakpoint-function', Codicon.debugBreakpointFunction, localize('debugBreakpointFunction', 'Icon for function breakpoints.')),\n\tdisabled: registerIcon('debug-breakpoint-function-disabled', Codicon.debugBreakpointFunctionDisabled, localize('debugBreakpointFunctionDisabled', 'Icon for disabled function breakpoints.')),\n\tunverified: registerIcon('debug-breakpoint-function-unverified', Codicon.debugBreakpointFunctionUnverified, localize('debugBreakpointFunctionUnverified', 'Icon for unverified function breakpoints.'))\n};\nexport const conditionalBreakpoint = {\n\tregular: registerIcon('debug-breakpoint-conditional', Codicon.debugBreakpointConditional, localize('debugBreakpointConditional', 'Icon for conditional breakpoints.')),\n\tdisabled: registerIcon('debug-breakpoint-conditional-disabled', Codicon.debugBreakpointConditionalDisabled, localize('debugBreakpointConditionalDisabled', 'Icon for disabled conditional breakpoints.')),\n\tunverified: registerIcon('debug-breakpoint-conditional-unverified', Codicon.debugBreakpointConditionalUnverified, localize('debugBreakpointConditionalUnverified', 'Icon for unverified conditional breakpoints.'))\n};\nexport const dataBreakpoint = {\n\tregular: registerIcon('debug-breakpoint-data', Codicon.debugBreakpointData, localize('debugBreakpointData', 'Icon for data breakpoints.')),\n\tdisabled: registerIcon('debug-breakpoint-data-disabled', Codicon.debugBreakpointDataDisabled, localize('debugBreakpointDataDisabled', 'Icon for disabled data breakpoints.')),\n\tunverified: registerIcon('debug-breakpoint-data-unverified', Codicon.debugBreakpointDataUnverified, localize('debugBreakpointDataUnverified', 'Icon for unverified data breakpoints.')),\n};\nexport const logBreakpoint = {\n\tregular: registerIcon('debug-breakpoint-log', Codicon.debugBreakpointLog, localize('debugBreakpointLog', 'Icon for log breakpoints.')),\n\tdisabled: registerIcon('debug-breakpoint-log-disabled', Codicon.debugBreakpointLogDisabled, localize('debugBreakpointLogDisabled', 'Icon for disabled log breakpoint.')),\n\tunverified: registerIcon('debug-breakpoint-log-unverified', Codicon.debugBreakpointLogUnverified, localize('debugBreakpointLogUnverified', 'Icon for unverified log breakpoints.')),\n};\n\nexport const debugBreakpointHint = registerIcon('debug-hint', Codicon.debugHint, localize('debugBreakpointHint', 'Icon for breakpoint hints shown on hover in editor glyph margin.'));\nexport const debugBreakpointUnsupported = registerIcon('debug-breakpoint-unsupported', Codicon.debugBreakpointUnsupported, localize('debugBreakpointUnsupported', 'Icon for unsupported breakpoints.'));\n\nexport const allBreakpoints = [breakpoint, functionBreakpoint, conditionalBreakpoint, dataBreakpoint, logBreakpoint];\n\n\nexport const debugStackframe = registerIcon('debug-stackframe', Codicon.debugStackframe, localize('debugStackframe', 'Icon for a stackframe shown in the editor glyph margin.'));\nexport const debugStackframeFocused = registerIcon('debug-stackframe-focused', Codicon.debugStackframeFocused, localize('debugStackframeFocused', 'Icon for a focused stackframe  shown in the editor glyph margin.'));\n\nexport const debugGripper = registerIcon('debug-gripper', Codicon.gripper, localize('debugGripper', 'Icon for the debug bar gripper.'));\n\nexport const debugRestartFrame = registerIcon('debug-restart-frame', Codicon.debugRestartFrame, localize('debugRestartFrame', 'Icon for the debug restart frame action.'));\n\nexport const debugStop = registerIcon('debug-stop', Codicon.debugStop, localize('debugStop', 'Icon for the debug stop action.'));\nexport const debugDisconnect = registerIcon('debug-disconnect', Codicon.debugDisconnect, localize('debugDisconnect', 'Icon for the debug disconnect action.'));\nexport const debugRestart = registerIcon('debug-restart', Codicon.debugRestart, localize('debugRestart', 'Icon for the debug restart action.'));\nexport const debugStepOver = registerIcon('debug-step-over', Codicon.debugStepOver, localize('debugStepOver', 'Icon for the debug step over action.'));\nexport const debugStepInto = registerIcon('debug-step-into', Codicon.debugStepInto, localize('debugStepInto', 'Icon for the debug step into action.'));\nexport const debugStepOut = registerIcon('debug-step-out', Codicon.debugStepOut, localize('debugStepOut', 'Icon for the debug step out action.'));\nexport const debugStepBack = registerIcon('debug-step-back', Codicon.debugStepBack, localize('debugStepBack', 'Icon for the debug step back action.'));\nexport const debugPause = registerIcon('debug-pause', Codicon.debugPause, localize('debugPause', 'Icon for the debug pause action.'));\nexport const debugContinue = registerIcon('debug-continue', Codicon.debugContinue, localize('debugContinue', 'Icon for the debug continue action.'));\nexport const debugReverseContinue = registerIcon('debug-reverse-continue', Codicon.debugReverseContinue, localize('debugReverseContinue', 'Icon for the debug reverse continue action.'));\nexport const debugRun = registerIcon('debug-run', Codicon.run, localize('debugRun', 'Icon for the run or debug action.'));\n\nexport const debugStart = registerIcon('debug-start', Codicon.debugStart, localize('debugStart', 'Icon for the debug start action.'));\nexport const debugConfigure = registerIcon('debug-configure', Codicon.gear, localize('debugConfigure', 'Icon for the debug configure action.'));\nexport const debugConsole = registerIcon('debug-console', Codicon.gear, localize('debugConsole', 'Icon for the debug console open action.'));\nexport const debugRemoveConfig = registerIcon('debug-remove-config', Codicon.trash, localize('debugRemoveConfig', 'Icon for removing debug configurations.'));\n\nexport const debugCollapseAll = registerIcon('debug-collapse-all', Codicon.collapseAll, localize('debugCollapseAll', 'Icon for the collapse all action in the debug views.'));\nexport const callstackViewSession = registerIcon('callstack-view-session', Codicon.bug, localize('callstackViewSession', 'Icon for the session icon in the call stack view.'));\nexport const debugConsoleClearAll = registerIcon('debug-console-clear-all', Codicon.clearAll, localize('debugConsoleClearAll', 'Icon for the clear all action in the debug console.'));\nexport const watchExpressionsRemoveAll = registerIcon('watch-expressions-remove-all', Codicon.closeAll, localize('watchExpressionsRemoveAll', 'Icon for the Remove All action in the watch view.'));\nexport const watchExpressionRemove = registerIcon('watch-expression-remove', Codicon.removeClose, localize('watchExpressionRemove', 'Icon for the Remove action in the watch view.'));\nexport const watchExpressionsAdd = registerIcon('watch-expressions-add', Codicon.add, localize('watchExpressionsAdd', 'Icon for the add action in the watch view.'));\nexport const watchExpressionsAddFuncBreakpoint = registerIcon('watch-expressions-add-function-breakpoint', Codicon.add, localize('watchExpressionsAddFuncBreakpoint', 'Icon for the add function breakpoint action in the watch view.'));\n\nexport const breakpointsRemoveAll = registerIcon('breakpoints-remove-all', Codicon.closeAll, localize('breakpointsRemoveAll', 'Icon for the Remove All action in the breakpoints view.'));\nexport const breakpointsActivate = registerIcon('breakpoints-activate', Codicon.activateBreakpoints, localize('breakpointsActivate', 'Icon for the activate action in the breakpoints view.'));\n\nexport const debugConsoleEvaluationInput = registerIcon('debug-console-evaluation-input', Codicon.arrowSmallRight, localize('debugConsoleEvaluationInput', 'Icon for the debug evaluation input marker.'));\nexport const debugConsoleEvaluationPrompt = registerIcon('debug-console-evaluation-prompt', Codicon.chevronRight, localize('debugConsoleEvaluationPrompt', 'Icon for the debug evaluation prompt.'));\n\nexport const debugInspectMemory = registerIcon('debug-inspect-memory', Codicon.fileBinary, localize('debugInspectMemory', 'Icon for the inspect memory action.'));\n"]}