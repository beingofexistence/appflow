{"version":3,"sources":["vs/workbench/contrib/debug/browser/variablesView.ts"],"names":[],"mappings":"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","file":"variablesView.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { HighlightedLabel, IHighlight } from 'vs/base/browser/ui/highlightedlabel/highlightedLabel';\nimport { IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { IListAccessibilityProvider } from 'vs/base/browser/ui/list/listWidget';\nimport { IAsyncDataTreeViewState } from 'vs/base/browser/ui/tree/asyncDataTree';\nimport { IAsyncDataSource, ITreeContextMenuEvent, ITreeMouseEvent, ITreeNode, ITreeRenderer } from 'vs/base/browser/ui/tree/tree';\nimport { IAction } from 'vs/base/common/actions';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { RunOnceScheduler, timeout } from 'vs/base/common/async';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { createMatches, FuzzyScore } from 'vs/base/common/filters';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { createAndFillInContextMenuActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { IMenuService, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService, IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { WorkbenchAsyncDataTree } from 'vs/platform/list/browser/listService';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IProgressService, ProgressLocation } from 'vs/platform/progress/common/progress';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ViewAction, ViewPane } from 'vs/workbench/browser/parts/views/viewPane';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IViewDescriptorService } from 'vs/workbench/common/views';\nimport { AbstractExpressionsRenderer, IExpressionTemplateData, IInputBoxOptions, renderVariable, renderViewTree } from 'vs/workbench/contrib/debug/browser/baseDebugView';\nimport { LinkDetector } from 'vs/workbench/contrib/debug/browser/linkDetector';\nimport { CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED, CONTEXT_CAN_VIEW_MEMORY, CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT, CONTEXT_VARIABLES_FOCUSED, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, CONTEXT_VARIABLE_IS_READONLY, IDataBreakpointInfoResponse, IDebugService, IExpression, IScope, IStackFrame, VARIABLES_VIEW_ID } from 'vs/workbench/contrib/debug/common/debug';\nimport { ErrorScope, Expression, getUriForDebugMemory, Scope, StackFrame, Variable } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { IEditorService, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\n\nconst $ = dom.$;\nlet forgetScopes = true;\n\nlet variableInternalContext: Variable | undefined;\nlet dataBreakpointInfoResponse: IDataBreakpointInfoResponse | undefined;\n\ninterface IVariablesContext {\n\tsessionId: string | undefined;\n\tcontainer: DebugProtocol.Variable | DebugProtocol.Scope | DebugProtocol.EvaluateArguments;\n\tvariable: DebugProtocol.Variable;\n}\n\nexport class VariablesView extends ViewPane {\n\n\tprivate updateTreeScheduler: RunOnceScheduler;\n\tprivate needsRefresh = false;\n\tprivate tree!: WorkbenchAsyncDataTree<IStackFrame | null, IExpression | IScope, FuzzyScore>;\n\tprivate savedViewState = new Map<string, IAsyncDataTreeViewState>();\n\tprivate autoExpandedScopes = new Set<string>();\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IMenuService private readonly menuService: IMenuService\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\n\t\t// Use scheduler to prevent unnecessary flashing\n\t\tthis.updateTreeScheduler = new RunOnceScheduler(async () => {\n\t\t\tconst stackFrame = this.debugService.getViewModel().focusedStackFrame;\n\n\t\t\tthis.needsRefresh = false;\n\t\t\tconst input = this.tree.getInput();\n\t\t\tif (input) {\n\t\t\t\tthis.savedViewState.set(input.getId(), this.tree.getViewState());\n\t\t\t}\n\t\t\tif (!stackFrame) {\n\t\t\t\tawait this.tree.setInput(null);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewState = this.savedViewState.get(stackFrame.getId());\n\t\t\tawait this.tree.setInput(stackFrame, viewState);\n\n\t\t\t// Automatically expand the first non-expensive scope\n\t\t\tconst scopes = await stackFrame.getScopes();\n\t\t\tconst toExpand = scopes.find(s => !s.expensive);\n\n\t\t\t// A race condition could be present causing the scopes here to be different from the scopes that the tree just retrieved.\n\t\t\t// If that happened, don't try to reveal anything, it will be straightened out on the next update\n\t\t\tif (toExpand && this.tree.hasNode(toExpand)) {\n\t\t\t\tthis.autoExpandedScopes.add(toExpand.getId());\n\t\t\t\tawait this.tree.expand(toExpand);\n\t\t\t}\n\t\t}, 400);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.element.classList.add('debug-pane');\n\t\tcontainer.classList.add('debug-variables');\n\t\tconst treeContainer = renderViewTree(container);\n\t\tconst linkeDetector = this.instantiationService.createInstance(LinkDetector);\n\t\tthis.tree = <WorkbenchAsyncDataTree<IStackFrame | null, IExpression | IScope, FuzzyScore>>this.instantiationService.createInstance(WorkbenchAsyncDataTree, 'VariablesView', treeContainer, new VariablesDelegate(),\n\t\t\t[this.instantiationService.createInstance(VariablesRenderer, linkeDetector), new ScopesRenderer(), new ScopeErrorRenderer()],\n\t\t\tnew VariablesDataSource(), {\n\t\t\taccessibilityProvider: new VariablesAccessibilityProvider(),\n\t\t\tidentityProvider: { getId: (element: IExpression | IScope) => element.getId() },\n\t\t\tkeyboardNavigationLabelProvider: { getKeyboardNavigationLabel: (e: IExpression | IScope) => e.name },\n\t\t\toverrideStyles: {\n\t\t\t\tlistBackground: this.getBackgroundColor()\n\t\t\t}\n\t\t});\n\n\t\tthis.tree.setInput(this.debugService.getViewModel().focusedStackFrame ?? null);\n\n\t\tCONTEXT_VARIABLES_FOCUSED.bindTo(this.tree.contextKeyService);\n\n\t\tthis._register(this.debugService.getViewModel().onDidFocusStackFrame(sf => {\n\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\tthis.needsRefresh = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Refresh the tree immediately if the user explictly changed stack frames.\n\t\t\t// Otherwise postpone the refresh until user stops stepping.\n\t\t\tconst timeout = sf.explicit ? 0 : undefined;\n\t\t\tthis.updateTreeScheduler.schedule(timeout);\n\t\t}));\n\t\tthis._register(this.debugService.getViewModel().onWillUpdateViews(() => {\n\t\t\tconst stackFrame = this.debugService.getViewModel().focusedStackFrame;\n\t\t\tif (stackFrame && forgetScopes) {\n\t\t\t\tstackFrame.forgetScopes();\n\t\t\t}\n\t\t\tforgetScopes = true;\n\t\t\tthis.tree.updateChildren();\n\t\t}));\n\t\tthis._register(this.tree);\n\t\tthis._register(this.tree.onMouseDblClick(e => this.onMouseDblClick(e)));\n\t\tthis._register(this.tree.onContextMenu(async e => await this.onContextMenu(e)));\n\n\t\tthis._register(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (visible && this.needsRefresh) {\n\t\t\t\tthis.updateTreeScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tlet horizontalScrolling: boolean | undefined;\n\t\tthis._register(this.debugService.getViewModel().onDidSelectExpression(e => {\n\t\t\tconst variable = e?.expression;\n\t\t\tif (variable instanceof Variable && !e?.settingWatch) {\n\t\t\t\thorizontalScrolling = this.tree.options.horizontalScrolling;\n\t\t\t\tif (horizontalScrolling) {\n\t\t\t\t\tthis.tree.updateOptions({ horizontalScrolling: false });\n\t\t\t\t}\n\n\t\t\t\tthis.tree.rerender(variable);\n\t\t\t} else if (!e && horizontalScrolling !== undefined) {\n\t\t\t\tthis.tree.updateOptions({ horizontalScrolling: horizontalScrolling });\n\t\t\t\thorizontalScrolling = undefined;\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.debugService.getViewModel().onDidEvaluateLazyExpression(async e => {\n\t\t\tif (e instanceof Variable && this.tree.hasNode(e)) {\n\t\t\t\tawait this.tree.updateChildren(e, false, true);\n\t\t\t\tawait this.tree.expand(e);\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.debugService.onDidEndSession(() => {\n\t\t\tthis.savedViewState.clear();\n\t\t\tthis.autoExpandedScopes.clear();\n\t\t}));\n\t}\n\n\tprotected override layoutBody(width: number, height: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree.layout(width, height);\n\t}\n\n\toverride focus(): void {\n\t\tthis.tree.domFocus();\n\t}\n\n\tcollapseAll(): void {\n\t\tthis.tree.collapseAll();\n\t}\n\n\tprivate onMouseDblClick(e: ITreeMouseEvent<IExpression | IScope>): void {\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tif (session && e.element instanceof Variable && session.capabilities.supportsSetVariable && !e.element.presentationHint?.attributes?.includes('readOnly') && !e.element.presentationHint?.lazy) {\n\t\t\tthis.debugService.getViewModel().setSelectedExpression(e.element, false);\n\t\t}\n\t}\n\n\tprivate async onContextMenu(e: ITreeContextMenuEvent<IExpression | IScope>): Promise<void> {\n\t\tconst variable = e.element;\n\t\tif (!(variable instanceof Variable) || !variable.value) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst toDispose = new DisposableStore();\n\n\t\ttry {\n\t\t\tconst contextKeyService = await getContextForVariableMenuWithDataAccess(this.contextKeyService, variable);\n\t\t\tconst menu = toDispose.add(this.menuService.createMenu(MenuId.DebugVariablesContext, contextKeyService));\n\n\t\t\tconst context: IVariablesContext = getVariablesContext(variable);\n\t\t\tconst secondary: IAction[] = [];\n\t\t\tcreateAndFillInContextMenuActions(menu, { arg: context, shouldForwardArgs: false }, { primary: [], secondary }, 'inline');\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => e.anchor,\n\t\t\t\tgetActions: () => secondary\n\t\t\t});\n\t\t} finally {\n\t\t\ttoDispose.dispose();\n\t\t}\n\t}\n}\n\nconst getVariablesContext = (variable: Variable): IVariablesContext => ({\n\tsessionId: variable.getSession()?.getId(),\n\tcontainer: variable.parent instanceof Expression\n\t\t? { expression: variable.parent.name }\n\t\t: (variable.parent as (Variable | Scope)).toDebugProtocolObject(),\n\tvariable: variable.toDebugProtocolObject()\n});\n\n/**\n * Gets a context key overlay that has context for the given variable, including data access info.\n */\nasync function getContextForVariableMenuWithDataAccess(parentContext: IContextKeyService, variable: Variable) {\n\tconst session = variable.getSession();\n\tif (!session || !session.capabilities.supportsDataBreakpoints) {\n\t\treturn getContextForVariableMenu(parentContext, variable);\n\t}\n\n\tconst contextKeys: [string, unknown][] = [];\n\tdataBreakpointInfoResponse = await session.dataBreakpointInfo(variable.name, variable.parent.reference);\n\tconst dataBreakpointId = dataBreakpointInfoResponse?.dataId;\n\tconst dataBreakpointAccessTypes = dataBreakpointInfoResponse?.accessTypes;\n\n\tif (!dataBreakpointAccessTypes) {\n\t\tcontextKeys.push([CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED.key, !!dataBreakpointId]);\n\t} else {\n\t\tfor (const accessType of dataBreakpointAccessTypes) {\n\t\t\tswitch (accessType) {\n\t\t\t\tcase 'read':\n\t\t\t\t\tcontextKeys.push([CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED.key, !!dataBreakpointId]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'write':\n\t\t\t\t\tcontextKeys.push([CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED.key, !!dataBreakpointId]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'readWrite':\n\t\t\t\t\tcontextKeys.push([CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED.key, !!dataBreakpointId]);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn getContextForVariableMenu(parentContext, variable, contextKeys);\n}\n\n/**\n * Gets a context key overlay that has context for the given variable.\n */\nfunction getContextForVariableMenu(parentContext: IContextKeyService, variable: Variable, additionalContext: [string, unknown][] = []) {\n\tconst session = variable.getSession();\n\tconst contextKeys: [string, unknown][] = [\n\t\t[CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT.key, variable.variableMenuContext || ''],\n\t\t[CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT.key, !!variable.evaluateName],\n\t\t[CONTEXT_CAN_VIEW_MEMORY.key, !!session?.capabilities.supportsReadMemoryRequest && variable.memoryReference !== undefined],\n\t\t[CONTEXT_VARIABLE_IS_READONLY.key, !!variable.presentationHint?.attributes?.includes('readOnly') || variable.presentationHint?.lazy],\n\t\t...additionalContext,\n\t];\n\n\tvariableInternalContext = variable;\n\n\treturn parentContext.createOverlay(contextKeys);\n}\n\nfunction isStackFrame(obj: any): obj is IStackFrame {\n\treturn obj instanceof StackFrame;\n}\n\nclass VariablesDataSource implements IAsyncDataSource<IStackFrame | null, IExpression | IScope> {\n\n\thasChildren(element: IStackFrame | null | IExpression | IScope): boolean {\n\t\tif (!element) {\n\t\t\treturn false;\n\t\t}\n\t\tif (isStackFrame(element)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn element.hasChildren;\n\t}\n\n\tgetChildren(element: IStackFrame | IExpression | IScope): Promise<(IExpression | IScope)[]> {\n\t\tif (isStackFrame(element)) {\n\t\t\treturn element.getScopes();\n\t\t}\n\n\t\treturn element.getChildren();\n\t}\n}\n\ninterface IScopeTemplateData {\n\tname: HTMLElement;\n\tlabel: HighlightedLabel;\n}\n\nclass VariablesDelegate implements IListVirtualDelegate<IExpression | IScope> {\n\n\tgetHeight(element: IExpression | IScope): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: IExpression | IScope): string {\n\t\tif (element instanceof ErrorScope) {\n\t\t\treturn ScopeErrorRenderer.ID;\n\t\t}\n\n\t\tif (element instanceof Scope) {\n\t\t\treturn ScopesRenderer.ID;\n\t\t}\n\n\t\treturn VariablesRenderer.ID;\n\t}\n}\n\nclass ScopesRenderer implements ITreeRenderer<IScope, FuzzyScore, IScopeTemplateData> {\n\n\tstatic readonly ID = 'scope';\n\n\tget templateId(): string {\n\t\treturn ScopesRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IScopeTemplateData {\n\t\tconst name = dom.append(container, $('.scope'));\n\t\tconst label = new HighlightedLabel(name);\n\n\t\treturn { name, label };\n\t}\n\n\trenderElement(element: ITreeNode<IScope, FuzzyScore>, index: number, templateData: IScopeTemplateData): void {\n\t\ttemplateData.label.set(element.element.name, createMatches(element.filterData));\n\t}\n\n\tdisposeTemplate(templateData: IScopeTemplateData): void {\n\t\t// noop\n\t}\n}\n\ninterface IScopeErrorTemplateData {\n\terror: HTMLElement;\n}\n\nclass ScopeErrorRenderer implements ITreeRenderer<IScope, FuzzyScore, IScopeErrorTemplateData> {\n\n\tstatic readonly ID = 'scopeError';\n\n\tget templateId(): string {\n\t\treturn ScopeErrorRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IScopeErrorTemplateData {\n\t\tconst wrapper = dom.append(container, $('.scope'));\n\t\tconst error = dom.append(wrapper, $('.error'));\n\t\treturn { error };\n\t}\n\n\trenderElement(element: ITreeNode<IScope, FuzzyScore>, index: number, templateData: IScopeErrorTemplateData): void {\n\t\ttemplateData.error.innerText = element.element.name;\n\t}\n\n\tdisposeTemplate(): void {\n\t\t// noop\n\t}\n}\n\nexport class VariablesRenderer extends AbstractExpressionsRenderer {\n\n\tstatic readonly ID = 'variable';\n\n\tconstructor(\n\t\tprivate readonly linkDetector: LinkDetector,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IDebugService debugService: IDebugService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t) {\n\t\tsuper(debugService, contextViewService);\n\t}\n\n\tget templateId(): string {\n\t\treturn VariablesRenderer.ID;\n\t}\n\n\tprotected renderExpression(expression: IExpression, data: IExpressionTemplateData, highlights: IHighlight[]): void {\n\t\trenderVariable(expression as Variable, data, true, highlights, this.linkDetector);\n\t}\n\n\tpublic override renderElement(node: ITreeNode<IExpression, FuzzyScore>, index: number, data: IExpressionTemplateData): void {\n\t\tsuper.renderExpressionElement(node.element, node, data);\n\t}\n\n\tprotected getInputBoxOptions(expression: IExpression): IInputBoxOptions {\n\t\tconst variable = <Variable>expression;\n\t\treturn {\n\t\t\tinitialValue: expression.value,\n\t\t\tariaLabel: localize('variableValueAriaLabel', \"Type new variable value\"),\n\t\t\tvalidationOptions: {\n\t\t\t\tvalidation: () => variable.errorMessage ? ({ content: variable.errorMessage }) : null\n\t\t\t},\n\t\t\tonFinish: (value: string, success: boolean) => {\n\t\t\t\tvariable.errorMessage = undefined;\n\t\t\t\tconst focusedStackFrame = this.debugService.getViewModel().focusedStackFrame;\n\t\t\t\tif (success && variable.value !== value && focusedStackFrame) {\n\t\t\t\t\tvariable.setVariable(value, focusedStackFrame)\n\t\t\t\t\t\t// Need to force watch expressions and variables to update since a variable change can have an effect on both\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t// Do not refresh scopes due to a node limitation #15520\n\t\t\t\t\t\t\tforgetScopes = false;\n\t\t\t\t\t\t\tthis.debugService.getViewModel().updateViews();\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected override renderActionBar(actionBar: ActionBar, expression: IExpression) {\n\t\tconst variable = expression as Variable;\n\t\tconst contextKeyService = getContextForVariableMenu(this.contextKeyService, variable);\n\t\tconst menu = this.menuService.createMenu(MenuId.DebugVariablesContext, contextKeyService);\n\n\t\tconst primary: IAction[] = [];\n\t\tconst context = getVariablesContext(variable);\n\t\tcreateAndFillInContextMenuActions(menu, { arg: context, shouldForwardArgs: false }, { primary, secondary: [] }, 'inline');\n\n\t\tactionBar.clear();\n\t\tactionBar.context = context;\n\t\tactionBar.push(primary, { icon: true, label: false });\n\t}\n}\n\nclass VariablesAccessibilityProvider implements IListAccessibilityProvider<IExpression | IScope> {\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('variablesAriaTreeLabel', \"Debug Variables\");\n\t}\n\n\tgetAriaLabel(element: IExpression | IScope): string | null {\n\t\tif (element instanceof Scope) {\n\t\t\treturn localize('variableScopeAriaLabel', \"Scope {0}\", element.name);\n\t\t}\n\t\tif (element instanceof Variable) {\n\t\t\treturn localize({ key: 'variableAriaLabel', comment: ['Placeholders are variable name and variable value respectivly. They should not be translated.'] }, \"{0}, value {1}\", element.name, element.value);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport const SET_VARIABLE_ID = 'debug.setVariable';\nCommandsRegistry.registerCommand({\n\tid: SET_VARIABLE_ID,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tdebugService.getViewModel().setSelectedExpression(variableInternalContext, false);\n\t}\n});\n\nexport const COPY_VALUE_ID = 'workbench.debug.viewlet.action.copyValue';\nCommandsRegistry.registerCommand({\n\tid: COPY_VALUE_ID,\n\thandler: async (accessor: ServicesAccessor, arg: Variable | Expression | IVariablesContext, ctx?: (Variable | Expression)[]) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tlet elementContext = '';\n\t\tlet elements: (Variable | Expression)[];\n\t\tif (arg instanceof Variable || arg instanceof Expression) {\n\t\t\telementContext = 'watch';\n\t\t\telements = ctx ? ctx : [];\n\t\t} else {\n\t\t\telementContext = 'variables';\n\t\t\telements = variableInternalContext ? [variableInternalContext] : [];\n\t\t}\n\n\t\tconst stackFrame = debugService.getViewModel().focusedStackFrame;\n\t\tconst session = debugService.getViewModel().focusedSession;\n\t\tif (!stackFrame || !session || elements.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst evalContext = session.capabilities.supportsClipboardContext ? 'clipboard' : elementContext;\n\t\tconst toEvaluate = elements.map(element => element instanceof Variable ? (element.evaluateName || element.value) : element.name);\n\n\t\ttry {\n\t\t\tconst evaluations = await Promise.all(toEvaluate.map(expr => session.evaluate(expr, stackFrame.frameId, evalContext)));\n\t\t\tconst result = coalesce(evaluations).map(evaluation => evaluation.body.result);\n\t\t\tif (result.length) {\n\t\t\t\tclipboardService.writeText(result.join('\\n'));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconst result = elements.map(element => element.value);\n\t\t\tclipboardService.writeText(result.join('\\n'));\n\t\t}\n\t}\n});\n\nexport const VIEW_MEMORY_ID = 'workbench.debug.viewlet.action.viewMemory';\n\nconst HEX_EDITOR_EXTENSION_ID = 'ms-vscode.hexeditor';\nconst HEX_EDITOR_EDITOR_ID = 'hexEditor.hexedit';\n\nCommandsRegistry.registerCommand({\n\tid: VIEW_MEMORY_ID,\n\thandler: async (accessor: ServicesAccessor, arg: IVariablesContext | IExpression, ctx?: (Variable | Expression)[]) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tlet sessionId: string;\n\t\tlet memoryReference: string;\n\t\tif ('sessionId' in arg) { // IVariablesContext\n\t\t\tif (!arg.sessionId || !arg.variable.memoryReference) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsessionId = arg.sessionId;\n\t\t\tmemoryReference = arg.variable.memoryReference;\n\t\t} else { // IExpression\n\t\t\tif (!arg.memoryReference) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst focused = debugService.getViewModel().focusedSession;\n\t\t\tif (!focused) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsessionId = focused.getId();\n\t\t\tmemoryReference = arg.memoryReference;\n\t\t}\n\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst notifications = accessor.get(INotificationService);\n\t\tconst progressService = accessor.get(IProgressService);\n\t\tconst extensionService = accessor.get(IExtensionService);\n\t\tconst telemetryService = accessor.get(ITelemetryService);\n\n\t\tconst ext = await extensionService.getExtension(HEX_EDITOR_EXTENSION_ID);\n\t\tif (ext || await tryInstallHexEditor(notifications, progressService, extensionService, commandService)) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"debug/didViewMemory\" : {\n\t\t\t\t\t\"owner\": \"connor4312\",\n\t\t\t\t\t\"debugType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('debug/didViewMemory', {\n\t\t\t\tdebugType: debugService.getModel().getSession(sessionId)?.configuration.type,\n\t\t\t});\n\n\t\t\tawait editorService.openEditor({\n\t\t\t\tresource: getUriForDebugMemory(sessionId, memoryReference),\n\t\t\t\toptions: {\n\t\t\t\t\trevealIfOpened: true,\n\t\t\t\t\toverride: HEX_EDITOR_EDITOR_ID,\n\t\t\t\t},\n\t\t\t}, SIDE_GROUP);\n\t\t}\n\t}\n});\n\nfunction tryInstallHexEditor(notifications: INotificationService, progressService: IProgressService, extensionService: IExtensionService, commandService: ICommandService) {\n\treturn new Promise<boolean>(resolve => {\n\t\tlet installing = false;\n\n\t\tconst handle = notifications.prompt(\n\t\t\tSeverity.Info,\n\t\t\tlocalize(\"viewMemory.prompt\", \"Inspecting binary data requires the Hex Editor extension. Would you like to install it now?\"), [\n\t\t\t{\n\t\t\t\tlabel: localize(\"cancel\", \"Cancel\"),\n\t\t\t\trun: () => resolve(false),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: localize(\"install\", \"Install\"),\n\t\t\t\trun: async () => {\n\t\t\t\t\tinstalling = true;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait progressService.withProgress(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\t\t\t\ttitle: localize(\"viewMemory.install.progress\", \"Installing the Hex Editor...\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tasync () => {\n\t\t\t\t\t\t\t\tawait commandService.executeCommand('workbench.extensions.installExtension', HEX_EDITOR_EXTENSION_ID);\n\t\t\t\t\t\t\t\t// it seems like the extension is not registered immediately on install --\n\t\t\t\t\t\t\t\t// wait for it to appear before returning.\n\t\t\t\t\t\t\t\twhile (!(await extensionService.getExtension(HEX_EDITOR_EXTENSION_ID))) {\n\t\t\t\t\t\t\t\t\tawait timeout(30);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tnotifications.error(e as Error);\n\t\t\t\t\t\tresolve(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t],\n\t\t\t{ sticky: true },\n\t\t);\n\n\t\thandle.onDidClose(e => {\n\t\t\tif (!installing) {\n\t\t\t\tresolve(false);\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport const BREAK_WHEN_VALUE_CHANGES_ID = 'debug.breakWhenValueChanges';\nCommandsRegistry.registerCommand({\n\tid: BREAK_WHEN_VALUE_CHANGES_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (dataBreakpointInfoResponse) {\n\t\t\tawait debugService.addDataBreakpoint(dataBreakpointInfoResponse.description, dataBreakpointInfoResponse.dataId!, !!dataBreakpointInfoResponse.canPersist, dataBreakpointInfoResponse.accessTypes, 'write');\n\t\t}\n\t}\n});\n\nexport const BREAK_WHEN_VALUE_IS_ACCESSED_ID = 'debug.breakWhenValueIsAccessed';\nCommandsRegistry.registerCommand({\n\tid: BREAK_WHEN_VALUE_IS_ACCESSED_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (dataBreakpointInfoResponse) {\n\t\t\tawait debugService.addDataBreakpoint(dataBreakpointInfoResponse.description, dataBreakpointInfoResponse.dataId!, !!dataBreakpointInfoResponse.canPersist, dataBreakpointInfoResponse.accessTypes, 'readWrite');\n\t\t}\n\t}\n});\n\nexport const BREAK_WHEN_VALUE_IS_READ_ID = 'debug.breakWhenValueIsRead';\nCommandsRegistry.registerCommand({\n\tid: BREAK_WHEN_VALUE_IS_READ_ID,\n\thandler: async (accessor: ServicesAccessor) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tif (dataBreakpointInfoResponse) {\n\t\t\tawait debugService.addDataBreakpoint(dataBreakpointInfoResponse.description, dataBreakpointInfoResponse.dataId!, !!dataBreakpointInfoResponse.canPersist, dataBreakpointInfoResponse.accessTypes, 'read');\n\t\t}\n\t}\n});\n\nexport const COPY_EVALUATE_PATH_ID = 'debug.copyEvaluatePath';\nCommandsRegistry.registerCommand({\n\tid: COPY_EVALUATE_PATH_ID,\n\thandler: async (accessor: ServicesAccessor, context: IVariablesContext) => {\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\tawait clipboardService.writeText(context.variable.evaluateName!);\n\t}\n});\n\nexport const ADD_TO_WATCH_ID = 'debug.addToWatchExpressions';\nCommandsRegistry.registerCommand({\n\tid: ADD_TO_WATCH_ID,\n\thandler: async (accessor: ServicesAccessor, context: IVariablesContext) => {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tdebugService.addWatchExpression(context.variable.evaluateName);\n\t}\n});\n\nregisterAction2(class extends ViewAction<VariablesView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'variables.collapse',\n\t\t\tviewId: VARIABLES_VIEW_ID,\n\t\t\ttitle: localize('collapse', \"Collapse All\"),\n\t\t\tf1: false,\n\t\t\ticon: Codicon.collapseAll,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.equals('view', VARIABLES_VIEW_ID)\n\t\t\t}\n\t\t});\n\t}\n\n\trunInView(_accessor: ServicesAccessor, view: VariablesView) {\n\t\tview.collapseAll();\n\t}\n});\n"]}