{"version":3,"sources":["vs/workbench/contrib/debug/browser/debugStatus.ts"],"names":[],"mappings":"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","file":"debugStatus.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { IDebugService, State, IDebugConfiguration } from 'vs/workbench/contrib/debug/common/debug';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IStatusbarEntry, IStatusbarService, StatusbarAlignment, IStatusbarEntryAccessor } from 'vs/workbench/services/statusbar/browser/statusbar';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\n\nexport class DebugStatusContribution implements IWorkbenchContribution {\n\n\tprivate showInStatusBar!: 'never' | 'always' | 'onFirstSessionStart';\n\tprivate toDispose: IDisposable[] = [];\n\tprivate entryAccessor: IStatusbarEntryAccessor | undefined;\n\n\tconstructor(\n\t\t@IStatusbarService private readonly statusBarService: IStatusbarService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\n\t\tconst addStatusBarEntry = () => {\n\t\t\tthis.entryAccessor = this.statusBarService.addEntry(this.entry, 'status.debug', StatusbarAlignment.LEFT, 30 /* Low Priority */);\n\t\t};\n\n\t\tconst setShowInStatusBar = () => {\n\t\t\tthis.showInStatusBar = configurationService.getValue<IDebugConfiguration>('debug').showInStatusBar;\n\t\t\tif (this.showInStatusBar === 'always' && !this.entryAccessor) {\n\t\t\t\taddStatusBarEntry();\n\t\t\t}\n\t\t};\n\t\tsetShowInStatusBar();\n\n\t\tthis.toDispose.push(this.debugService.onDidChangeState(state => {\n\t\t\tif (state !== State.Inactive && this.showInStatusBar === 'onFirstSessionStart' && !this.entryAccessor) {\n\t\t\t\taddStatusBarEntry();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('debug.showInStatusBar')) {\n\t\t\t\tsetShowInStatusBar();\n\t\t\t\tif (this.entryAccessor && this.showInStatusBar === 'never') {\n\t\t\t\t\tthis.entryAccessor.dispose();\n\t\t\t\t\tthis.entryAccessor = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.debugService.getConfigurationManager().onDidSelectConfiguration(e => {\n\t\t\tthis.entryAccessor?.update(this.entry);\n\t\t}));\n\t}\n\n\tprivate get entry(): IStatusbarEntry {\n\t\tlet text = '';\n\t\tconst manager = this.debugService.getConfigurationManager();\n\t\tconst name = manager.selectedConfiguration.name || '';\n\t\tconst nameAndLaunchPresent = name && manager.selectedConfiguration.launch;\n\t\tif (nameAndLaunchPresent) {\n\t\t\ttext = (manager.getLaunches().length > 1 ? `${name} (${manager.selectedConfiguration.launch!.name})` : name);\n\t\t}\n\n\t\treturn {\n\t\t\tname: nls.localize('status.debug', \"Debug\"),\n\t\t\ttext: '$(debug-alt-small) ' + text,\n\t\t\tariaLabel: nls.localize('debugTarget', \"Debug: {0}\", text),\n\t\t\ttooltip: nls.localize('selectAndStartDebug', \"Select and start debug configuration\"),\n\t\t\tcommand: 'workbench.action.debug.selectandstart'\n\t\t};\n\t}\n\n\tdispose(): void {\n\t\tthis.entryAccessor?.dispose();\n\t\tdispose(this.toDispose);\n\t}\n}\n"]}