{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/debug/browser/debugTitle.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAQzF,IAAM,IAAI,GAAV,MAAM,IAAI;QAIhB,YACgB,YAAiB,EAClB,WAAgB,EACf,YAAkB;YAL1B,MAAC,GAA0B,EAAE,CAAC;YAOrC,MAAM,WAAW,GAAG,GAAG,EAAE;gBACxB,IAAI,YAAY,CAAC,KAAK,0BAAkB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;oBAClE,YAAY,CAAC,gBAAgB,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;iBAChD;qBAAM;oBACN,YAAY,CAAC,gBAAgB,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;iBAC9C;YACF,CAAC,CAAC;YACF,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;QAChE,CAAC;QAED,OAAO;YACN,IAAA,eAAG,EAAK,IAAI,CAAC,CAAC,CAAS,CAAC;QACzB,CAAC;KACD,CAAA;IAvBY,oBAAI;mBAAJ,IAAI;QAKd,WAAA,WAAG,CAAA;QACH,WAAA,UAAG,CAAA;QACH,WAAA,mBAAI,CAAA;OAPM,IAAI,CAuBhB","file":"debugTitle.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IDebugService, State } from 'vs/workbench/contrib/debug/common/debug';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { ITitleService } from 'vs/workbench/services/title/common/titleService';\n\nexport class DebugTitleContribution implements IWorkbenchContribution {\n\n\tprivate toDispose: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IDebugService debugService: IDebugService,\n\t\t@IHostService hostService: IHostService,\n\t\t@ITitleService titleService: ITitleService\n\t) {\n\t\tconst updateTitle = () => {\n\t\t\tif (debugService.state === State.Stopped && !hostService.hasFocus) {\n\t\t\t\ttitleService.updateProperties({ prefix: 'ðŸ”´' });\n\t\t\t} else {\n\t\t\t\ttitleService.updateProperties({ prefix: '' });\n\t\t\t}\n\t\t};\n\t\tthis.toDispose.push(debugService.onDidChangeState(updateTitle));\n\t\tthis.toDispose.push(hostService.onDidChangeFocus(updateTitle));\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.toDispose);\n\t}\n}\n"]}