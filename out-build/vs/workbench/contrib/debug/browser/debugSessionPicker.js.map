{"version":3,"sources":["vs/workbench/contrib/debug/browser/debugSessionPicker.ts"],"names":[],"mappings":";;;;IAgBO,KAAK,UAAU,IAAI,CAAiB,QAA0B,EAAE,gBAAwB;QAC9F,MAAM,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,gBAAG,CAAgB,CAAC;QAC3D,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAG,CAAW,CAAC;QACjD,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAG,CAAW,CAAC;QACjD,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,cAAG,CAAa,CAAC;QAErD,MAAM,oBAAoB,GAAG,IAAI,eAAG,EAAc,CAAC;QACnD,MAAM,SAAS,GAAG,iBAAiB,CAAC,eAAe,EAAoB,CAAC;QACxE,oBAAoB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACpC,SAAS,CAAC,YAAY,GAAG,SAAS,CAAC,kBAAkB,GAAG,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;QAChH,SAAS,CAAC,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC,CAA4B,EAAE,IAA+B,CAAC,CAAC;QAEpG,MAAM,SAAS,GAAG,sBAAsB,CAAC,SAAS,CAAC,KAAK,EAAE,gBAAgB,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;QACxH,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAClC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;QAE9C,oBAAoB,CAAC,GAAG,CAAC,SAAS,CAAC,gBAAgB,CAAC,KAAK,IAAI,EAAE;YAC9D,SAAS,CAAC,KAAK,GAAG,sBAAsB,CAAC,SAAS,CAAC,KAAK,EAAE,gBAAgB,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC,KAAK,CAAC;QAC/H,CAAC,CAAC,CAAC,CAAC;QACJ,oBAAoB,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,EAAE;YACnD,MAAM,YAAY,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAChD,YAAY,CAAC,MAAM,EAAE,CAAC;YACtB,SAAS,CAAC,IAAI,EAAE,CAAC;YACjB,oBAAoB,CAAC,OAAO,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC;QACJ,SAAS,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IA1BD,oBA0BC;IAED,SAAS,sBAAsB,CAAC,MAAc,EAAE,gBAAwB,EAAE,YAAiB,EAAY,YAAiB,EAAY,cAAmB;QACtJ,MAAM,iBAAiB,GAAkD,EAAE,CAAC;QAC5E,MAAM,cAAc,GAAoB,EAAE,CAAC;QAE3C,MAAM,WAAW,GAAG,YAAY,CAAC,YAAY,EAAE,CAAC,cAAc,CAAC;QAC/D,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC5D,MAAM,WAAW,GAA4B,EAAE,CAAC;QAEhD,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC5B,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE;gBAC7C,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;aAC3C;QACF,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC5B,MAAM,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAClD,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;gBAC3B,iBAAiB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;aAC1F;YAED,IAAI,CAAC,QAAQ,EAAE;gBACd,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;gBACtF,IAAI,IAAI,EAAE;oBACT,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC7B,IAAI,OAAO,CAAC,KAAK,EAAE,KAAK,WAAW,EAAE,KAAK,EAAE,EAAE;wBAC7C,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACvB;iBACD;aACD;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,iBAAiB,CAAC,MAAM,EAAE;YAC7B,iBAAiB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;SAC9C;QAED,MAAM,uBAAuB,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAmC,EAAE,IAA2B,CAAC,CAAC;QAC/G,iBAAiB,CAAC,IAAI,CAAC;YACtB,KAAK,EAAE,WAAW,uBAAuB,EAAE;YAC3C,SAAS,EAAE,uBAAuB;YAClC,MAAM,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,gBAAgB,CAAC;SAC7D,CAAC,CAAC;QAEH,OAAO,EAAE,KAAK,EAAE,iBAAiB,EAAE,WAAW,EAAE,CAAC;IAClD,CAAC;IAGD,SAAS,eAAe,CAAC,OAAsB;QAC9C,MAAM,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC;QAC/F,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,aAAa,CAAC,IAAI,CAAC;QAC3F,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,IAAI,UAAU,EAAE;YACf,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAkC,EAAE,IAA8B,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;YAChH,WAAW,GAAG,UAAU,CAAC;SACzB;QAED,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC;IAC1C,CAAC;IAED,SAAS,WAAW,CAAC,OAAsB,EAAE,MAAc,EAAE,YAAiB,EAAY,YAAiB,EAAY,cAAmB;QACzI,MAAM,QAAQ,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC;QAC1C,MAAM,UAAU,GAAG,IAAA,aAAG,EAAU,MAAM,EAAE,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,UAAU,EAAE;YACf,OAAO;gBACN,KAAK,EAAE,QAAQ,CAAC,KAAK;gBACrB,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,SAAS,EAAE,QAAQ,CAAC,SAAS;gBAC7B,UAAU,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE;gBACjC,MAAM,EAAE,GAAG,EAAE;oBACZ,YAAY,CAAC,eAAe,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAChF,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAG,CAAU,EAAE;wBAC9C,YAAY,CAAC,QAAQ,CAAC,WAAG,EAAW,IAAI,CAAC,CAAC;qBAC1C;gBACF,CAAC;aACD,CAAC;SACF;QACD,OAAO,SAAS,CAAC;IAClB,CAAC","file":"debugSessionPicker.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from 'vs/nls';\nimport { matchesFuzzy } from 'vs/base/common/filters';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IDebugService, IDebugSession, REPL_VIEW_ID } from 'vs/workbench/contrib/debug/common/debug';\nimport { IQuickInputService, IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\n\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IPickerDebugItem } from 'vs/workbench/contrib/debug/common/loadedScriptsPicker';\nimport { IViewsService } from 'vs/workbench/common/views';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\n\n\nexport async function showDebugSessionMenu(accessor: ServicesAccessor, selectAndStartID: string) {\n\tconst quickInputService = accessor.get(IQuickInputService);\n\tconst debugService = accessor.get(IDebugService);\n\tconst viewsService = accessor.get(IViewsService);\n\tconst commandService = accessor.get(ICommandService);\n\n\tconst localDisposableStore = new DisposableStore();\n\tconst quickPick = quickInputService.createQuickPick<IPickerDebugItem>();\n\tlocalDisposableStore.add(quickPick);\n\tquickPick.matchOnLabel = quickPick.matchOnDescription = quickPick.matchOnDetail = quickPick.sortByLabel = false;\n\tquickPick.placeholder = nls.localize('moveFocusedView.selectView', 'Search debug sessions by name');\n\n\tconst pickItems = _getPicksAndActiveItem(quickPick.value, selectAndStartID, debugService, viewsService, commandService);\n\tquickPick.items = pickItems.picks;\n\tquickPick.activeItems = pickItems.activeItems;\n\n\tlocalDisposableStore.add(quickPick.onDidChangeValue(async () => {\n\t\tquickPick.items = _getPicksAndActiveItem(quickPick.value, selectAndStartID, debugService, viewsService, commandService).picks;\n\t}));\n\tlocalDisposableStore.add(quickPick.onDidAccept(() => {\n\t\tconst selectedItem = quickPick.selectedItems[0];\n\t\tselectedItem.accept();\n\t\tquickPick.hide();\n\t\tlocalDisposableStore.dispose();\n\t}));\n\tquickPick.show();\n}\n\nfunction _getPicksAndActiveItem(filter: string, selectAndStartID: string, debugService: IDebugService, viewsService: IViewsService, commandService: ICommandService): { picks: Array<IPickerDebugItem | IQuickPickSeparator>; activeItems: Array<IPickerDebugItem> } {\n\tconst debugConsolePicks: Array<IPickerDebugItem | IQuickPickSeparator> = [];\n\tconst headerSessions: IDebugSession[] = [];\n\n\tconst currSession = debugService.getViewModel().focusedSession;\n\tconst sessions = debugService.getModel().getSessions(false);\n\tconst activeItems: Array<IPickerDebugItem> = [];\n\n\tsessions.forEach((session) => {\n\t\tif (session.compact && session.parentSession) {\n\t\t\theaderSessions.push(session.parentSession);\n\t\t}\n\t});\n\n\tsessions.forEach((session) => {\n\t\tconst isHeader = headerSessions.includes(session);\n\t\tif (!session.parentSession) {\n\t\t\tdebugConsolePicks.push({ type: 'separator', label: isHeader ? session.name : undefined });\n\t\t}\n\n\t\tif (!isHeader) {\n\t\t\tconst pick = _createPick(session, filter, debugService, viewsService, commandService);\n\t\t\tif (pick) {\n\t\t\t\tdebugConsolePicks.push(pick);\n\t\t\t\tif (session.getId() === currSession?.getId()) {\n\t\t\t\t\tactiveItems.push(pick);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tif (debugConsolePicks.length) {\n\t\tdebugConsolePicks.push({ type: 'separator' });\n\t}\n\n\tconst createDebugSessionLabel = nls.localize('workbench.action.debug.startDebug', 'Start a New Debug Session');\n\tdebugConsolePicks.push({\n\t\tlabel: `$(plus) ${createDebugSessionLabel}`,\n\t\tariaLabel: createDebugSessionLabel,\n\t\taccept: () => commandService.executeCommand(selectAndStartID)\n\t});\n\n\treturn { picks: debugConsolePicks, activeItems };\n}\n\n\nfunction _getSessionInfo(session: IDebugSession): { label: string; description: string; ariaLabel: string } {\n\tconst label = (!session.configuration.name.length) ? session.name : session.configuration.name;\n\tconst parentName = session.compact ? undefined : session.parentSession?.configuration.name;\n\tlet description = '';\n\tlet ariaLabel = '';\n\tif (parentName) {\n\t\tariaLabel = nls.localize('workbench.action.debug.spawnFrom', 'Session {0} spawned from {1}', label, parentName);\n\t\tdescription = parentName;\n\t}\n\n\treturn { label, description, ariaLabel };\n}\n\nfunction _createPick(session: IDebugSession, filter: string, debugService: IDebugService, viewsService: IViewsService, commandService: ICommandService): IPickerDebugItem | undefined {\n\tconst pickInfo = _getSessionInfo(session);\n\tconst highlights = matchesFuzzy(filter, pickInfo.label, true);\n\tif (highlights) {\n\t\treturn {\n\t\t\tlabel: pickInfo.label,\n\t\t\tdescription: pickInfo.description,\n\t\t\tariaLabel: pickInfo.ariaLabel,\n\t\t\thighlights: { label: highlights },\n\t\t\taccept: () => {\n\t\t\t\tdebugService.focusStackFrame(undefined, undefined, session, { explicit: true });\n\t\t\t\tif (!viewsService.isViewVisible(REPL_VIEW_ID)) {\n\t\t\t\t\tviewsService.openView(REPL_VIEW_ID, true);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\treturn undefined;\n}\n\n\n"]}