{"version":3,"sources":["vs/workbench/contrib/debug/browser/baseDebugView.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAsBhG,MAAM,kCAAkC,GAAG,IAAI,CAAC;IAChD,MAAM,YAAY,GAAG,iBAAiB,CAAC;IACvC,MAAM,WAAW,GAAG,cAAc,CAAC;IACnC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAkBhB,SAAgB,IAAI,CAAW,SAAsB;QACpD,MAAM,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7B,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClD,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACrC,OAAO,aAAa,CAAC;IACtB,CAAC;IALD,oBAKC;IAED,SAAgB,IAAI,CAAkB,iBAAgD,EAAE,SAAsB,EAAE,OAA4B;QAC3I,IAAI,KAAK,GAAG,OAAO,iBAAiB,KAAK,QAAQ,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC;QAEhG,uBAAuB;QACvB,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC;QAC9B,mGAAmG;QACnG,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,CAAC,iBAAiB,YAAY,iBAAI,IAAU,iBAAiB,YAAY,iBAAI,IAAQ,iBAAiB,YAAY,gBAAI,CAAiB,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAAE;YAChM,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YACvC,IAAI,KAAK,KAAK,iBAAI,CAAO,aAAa,EAAE;gBACvC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aACjC;SACD;aAAM;YACN,IAAI,CAAC,iBAAiB,YAAY,iBAAI,CAAgB,IAAI,OAAO,CAAC,WAAW,IAAI,iBAAiB,CAAC,YAAY,IAAI,KAAK,KAAK,iBAAI,CAAO,aAAa,EAAE;gBACtJ,sDAAsD;gBACtD,SAAS,CAAC,SAAS,GAAG,eAAe,CAAC;gBACtC,iBAAiB,CAAC,YAAY,GAAG,KAAK,CAAC;aACvC;YAED,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,iBAAiB,KAAK,QAAQ,EAAE;gBAC9D,IAAI,iBAAiB,CAAC,IAAI,KAAK,QAAQ,IAAI,iBAAiB,CAAC,IAAI,KAAK,SAAS,IAAI,iBAAiB,CAAC,IAAI,KAAK,QAAQ,EAAE;oBACvH,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;iBAChD;qBAAM,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE;oBAC1B,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;iBAClC;qBAAM,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACpC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iBACnC;qBAAM,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACnC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;iBAClC;aACD;SACD;QAED,IAAI,OAAO,CAAC,cAAc,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,cAAc,EAAE;YAC7E,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;SAC3D;QACD,IAAI,CAAC,KAAK,EAAE;YACX,KAAK,GAAG,EAAE,CAAC;SACX;QAED,IAAI,OAAO,CAAC,YAAY,EAAE;YACzB,SAAS,CAAC,WAAW,GAAG,EAAE,CAAC;YAC3B,MAAM,OAAO,GAAG,CAAC,iBAAiB,YAAY,iBAAI,CAAgB,CAAC,CAAC,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;YAChH,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;SAC5G;aAAM;YACN,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;SAC9B;QACD,IAAI,OAAO,CAAC,SAAS,EAAE;YACtB,SAAS,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;SAC9B;IACF,CAAC;IAhDD,oBAgDC;IAED,SAAgB,IAAI,CAAW,QAAc,EAAM,IAA2B,EAAE,WAAoB,EAAE,UAAwB,EAAE,YAAmB;QAClJ,IAAI,QAAQ,CAAC,SAAS,EAAE;YACvB,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YACzB,IAAI,QAAQ,CAAC,KAAK,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE;gBACxD,IAAI,IAAI,GAAG,CAAC;aACZ;YACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAChF,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,gBAAgB,EAAE,IAAI,KAAK,SAAS,CAAC,CAAC;YACrF,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,gBAAgB,EAAE,UAAU,KAAK,UAAU,CAAC,CAAC;SAC7F;aAAM,IAAI,QAAQ,CAAC,KAAK,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;YAChF,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;QAED,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAC5E,IAAI,CAAkB,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE;YAC3C,WAAW;YACX,cAAc,EAAE,kCAAkC;YAClD,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,IAAI;YACd,YAAY;SACZ,CAAC,CAAC;IACJ,CAAC;IArBD,oBAqBC;IAuBM,IAAe,IAAI,GAAnB,MAAe,IAAI;QAEzB,YAC0B,CAAiB,EACJ,CAAuB;YADpC,MAAC,GAAD,CAAC,CAAgB;YACJ,MAAC,GAAD,CAAC,CAAsB;QAC1D,CAAC;QAIL,cAAc,CAAC,SAAsB;YACpC,MAAM,UAAU,GAAG,GAAG,CAAC,GAAG,CAAI,SAAS,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAC3D,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAI,UAAU,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACpD,MAAM,UAAU,GAAG,GAAG,CAAC,GAAG,CAAI,UAAU,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACjE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,qBAAS,CAAC,gBAAgB,CAAC,cAAG,CAAK,GAAG,CAAC,CAAC,CAAC;YACrE,UAAU,CAAC,KAAK,GAAG,IAAA,cAAQ,EAAC,CAA0B,EAAE,IAAiB,CAAC,CAAC;YAC3E,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAI,UAAU,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YAEtD,MAAM,KAAK,GAAG,IAAI,sBAAG,CAAc,IAAI,CAAC,CAAC;YAEzC,MAAM,iBAAiB,GAAG,GAAG,CAAC,GAAG,CAAI,UAAU,EAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAE1E,MAAM,kBAAkB,GAAG,IAAI,eAAG,EAAc,CAAC;YAEjD,IAAI,SAAgC,CAAC;YACrC,IAAI,IAAI,CAAC,CAAC,EAAgB;gBACzB,GAAG,CAAC,GAAG,CAAI,UAAU,EAAE,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC;gBACpD,SAAS,GAAG,kBAAkB,CAAC,GAAG,CAAC,IAAI,eAAG,CAAO,UAAU,CAAC,CAAC,CAAC;aAC9D;YAED,MAAM,QAAQ,GAA4B,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE,iBAAiB,EAAE,EAAE,EAAE,kBAAkB,EAAE,UAAU,EAAE,cAAc,EAAE,SAAS,EAAE,CAAC;YAE7L,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAmB,UAAU,EAAE,GAAG,CAAC,GAAG,CAAO,KAAK,EAAE,GAAG,EAAE;gBACtF,IAAI,QAAQ,CAAC,cAAc,EAAE;oBAC5B,IAAI,CAAC,CAAC,CAAY,YAAY,EAAE,CAAC,sBAAsB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;iBACjF;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,OAAO,QAAQ,CAAC;QACjB,CAAC;QAIS,CAAC,CAAuB,OAAoB,EAAE,IAA8B,EAAE,IAA6B;YACpH,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;YAC9B,IAAI,CAAC,CAAC,CAAgB,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAA,aAAG,EAAW,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1E,IAAI,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,CAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;aACrD;YACD,MAAM,kBAAkB,GAAG,IAAI,CAAC,CAAC,CAAY,YAAY,EAAE,CAAC,qBAAqB,EAAE,CAAC;YACpF,IAAI,OAAO,KAAK,kBAAkB,EAAE,UAAU,IAAI,CAAC,OAAO,YAAY,iBAAI,IAAQ,OAAO,CAAC,YAAY,CAAC,EAAE;gBACxG,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAkB,OAAO,EAAE,CAAC,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;gBACrF,IAAI,OAAO,EAAE;oBACZ,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,CAAC;iBACzG;aACD;QACF,CAAC;QAED,cAAc,CAAC,WAAwB,EAAE,YAAyB,EAAE,iBAA8B,EAAE,OAAyB;YAC5H,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACnC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACpC,iBAAiB,CAAC,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC;YAC5C,GAAG,CAAC,GAAG,CAAO,iBAAiB,CAAC,CAAC;YAEjC,MAAM,QAAQ,GAAG,IAAI,cAAG,CAAM,iBAAiB,EAAE,IAAI,CAAC,CAAC,EAAmB,EAAE,GAAG,OAAO,EAAE,cAAc,EAAE,mBAAG,EAAoB,CAAC,CAAC;YAEjI,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC;YACtC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACjB,QAAQ,CAAC,MAAM,EAAE,CAAC;YAElB,MAAM,IAAI,GAAG,IAAA,gBAAG,EAAE,CAAC,OAAgB,EAAE,aAAsB,EAAE,EAAE;gBAC9D,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;gBAC/B,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;gBAChC,iBAAiB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;gBACzC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;gBAC7B,IAAA,eAAG,EAAK,SAAS,CAAC,CAAC;gBAEnB,IAAI,aAAa,EAAE;oBAClB,IAAI,CAAC,CAAC,CAAY,YAAY,EAAE,CAAC,qBAAqB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;oBACzE,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;iBACjC;YACF,CAAC,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG;gBACjB,QAAQ;gBACR,GAAG,CAAC,GAAG,CAA2B,QAAQ,CAAC,YAAY,EAAE,GAAG,CAAC,GAAG,CAAO,QAAQ,EAAE,CAAC,CAAiB,EAAE,EAAE;oBACtG,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,wBAAgB,CAAC;oBAC1C,MAAM,OAAO,GAAG,CAAC,CAAC,MAAM,uBAAe,CAAC;oBACxC,IAAI,QAAQ,IAAI,OAAO,EAAE;wBACxB,CAAC,CAAC,cAAc,EAAE,CAAC;wBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;wBACpB,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;qBACpB;gBACF,CAAC,CAAC;gBACF,GAAG,CAAC,GAAG,CAAmB,QAAQ,CAAC,YAAY,EAAE,GAAG,CAAC,GAAG,CAAO,IAAI,EAAE,GAAG,EAAE;oBACzE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC;gBACF,GAAG,CAAC,GAAG,CAAmB,QAAQ,CAAC,YAAY,EAAE,GAAG,CAAC,GAAG,CAAO,KAAK,EAAE,CAAC,CAAC,EAAE;oBACzE,6CAA6C;oBAC7C,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;gBACrB,CAAC,CAAC;aACF,CAAC;YAEF,OAAO,IAAA,eAAG,EAAU,GAAG,EAAE;gBACxB,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;QACJ,CAAC;QAOD,cAAc,CAAC,IAA8B,EAAE,KAAa,EAAE,YAAqC;YAClG,IAAA,eAAG,EAAK,YAAY,CAAC,iBAAiB,CAAC,CAAC;YACxC,YAAY,CAAC,iBAAiB,GAAG,EAAE,CAAC;QACrC,CAAC;QAED,eAAe,CAAC,YAAqC;YACpD,IAAA,eAAG,EAAK,YAAY,CAAC,iBAAiB,CAAC,CAAC;YACxC,YAAY,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;QAC3C,CAAC;KACD,CAAA;IA1HqB,oBAAI;mBAAJ,IAAI;QAGvB,WAAA,WAAG,CAAA;QACH,WAAA,iBAAG,CAAA;OAJgB,IAAI,CA0HzB","file":"baseDebugView.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { HighlightedLabel, IHighlight } from 'vs/base/browser/ui/highlightedlabel/highlightedLabel';\nimport { IInputValidationOptions, InputBox } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { ITreeNode, ITreeRenderer } from 'vs/base/browser/ui/tree/tree';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { createMatches, FuzzyScore } from 'vs/base/common/filters';\nimport { once } from 'vs/base/common/functional';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { DisposableStore, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { defaultInputBoxStyles } from 'vs/platform/theme/browser/defaultStyles';\nimport { LinkDetector } from 'vs/workbench/contrib/debug/browser/linkDetector';\nimport { IDebugService, IExpression, IExpressionContainer } from 'vs/workbench/contrib/debug/common/debug';\nimport { Expression, ExpressionContainer, Variable } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { ReplEvaluationResult } from 'vs/workbench/contrib/debug/common/replModel';\n\nconst MAX_VALUE_RENDER_LENGTH_IN_VIEWLET = 1024;\nconst booleanRegex = /^(true|false)$/i;\nconst stringRegex = /^(['\"]).*\\1$/;\nconst $ = dom.$;\n\nexport interface IRenderValueOptions {\n\tshowChanged?: boolean;\n\tmaxValueLength?: number;\n\tshowHover?: boolean;\n\tcolorize?: boolean;\n\tlinkDetector?: LinkDetector;\n}\n\nexport interface IVariableTemplateData {\n\texpression: HTMLElement;\n\tname: HTMLElement;\n\tvalue: HTMLElement;\n\tlabel: HighlightedLabel;\n\tlazyButton: HTMLElement;\n}\n\nexport function renderViewTree(container: HTMLElement): HTMLElement {\n\tconst treeContainer = $('.');\n\ttreeContainer.classList.add('debug-view-content');\n\tcontainer.appendChild(treeContainer);\n\treturn treeContainer;\n}\n\nexport function renderExpressionValue(expressionOrValue: IExpressionContainer | string, container: HTMLElement, options: IRenderValueOptions): void {\n\tlet value = typeof expressionOrValue === 'string' ? expressionOrValue : expressionOrValue.value;\n\n\t// remove stale classes\n\tcontainer.className = 'value';\n\t// when resolving expressions we represent errors from the server as a variable with name === null.\n\tif (value === null || ((expressionOrValue instanceof Expression || expressionOrValue instanceof Variable || expressionOrValue instanceof ReplEvaluationResult) && !expressionOrValue.available)) {\n\t\tcontainer.classList.add('unavailable');\n\t\tif (value !== Expression.DEFAULT_VALUE) {\n\t\t\tcontainer.classList.add('error');\n\t\t}\n\t} else {\n\t\tif ((expressionOrValue instanceof ExpressionContainer) && options.showChanged && expressionOrValue.valueChanged && value !== Expression.DEFAULT_VALUE) {\n\t\t\t// value changed color has priority over other colors.\n\t\t\tcontainer.className = 'value changed';\n\t\t\texpressionOrValue.valueChanged = false;\n\t\t}\n\n\t\tif (options.colorize && typeof expressionOrValue !== 'string') {\n\t\t\tif (expressionOrValue.type === 'number' || expressionOrValue.type === 'boolean' || expressionOrValue.type === 'string') {\n\t\t\t\tcontainer.classList.add(expressionOrValue.type);\n\t\t\t} else if (!isNaN(+value)) {\n\t\t\t\tcontainer.classList.add('number');\n\t\t\t} else if (booleanRegex.test(value)) {\n\t\t\t\tcontainer.classList.add('boolean');\n\t\t\t} else if (stringRegex.test(value)) {\n\t\t\t\tcontainer.classList.add('string');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (options.maxValueLength && value && value.length > options.maxValueLength) {\n\t\tvalue = value.substring(0, options.maxValueLength) + '...';\n\t}\n\tif (!value) {\n\t\tvalue = '';\n\t}\n\n\tif (options.linkDetector) {\n\t\tcontainer.textContent = '';\n\t\tconst session = (expressionOrValue instanceof ExpressionContainer) ? expressionOrValue.getSession() : undefined;\n\t\tcontainer.appendChild(options.linkDetector.linkify(value, false, session ? session.root : undefined, true));\n\t} else {\n\t\tcontainer.textContent = value;\n\t}\n\tif (options.showHover) {\n\t\tcontainer.title = value || '';\n\t}\n}\n\nexport function renderVariable(variable: Variable, data: IVariableTemplateData, showChanged: boolean, highlights: IHighlight[], linkDetector?: LinkDetector): void {\n\tif (variable.available) {\n\t\tlet text = variable.name;\n\t\tif (variable.value && typeof variable.name === 'string') {\n\t\t\ttext += ':';\n\t\t}\n\t\tdata.label.set(text, highlights, variable.type ? variable.type : variable.name);\n\t\tdata.name.classList.toggle('virtual', variable.presentationHint?.kind === 'virtual');\n\t\tdata.name.classList.toggle('internal', variable.presentationHint?.visibility === 'internal');\n\t} else if (variable.value && typeof variable.name === 'string' && variable.name) {\n\t\tdata.label.set(':');\n\t}\n\n\tdata.expression.classList.toggle('lazy', !!variable.presentationHint?.lazy);\n\trenderExpressionValue(variable, data.value, {\n\t\tshowChanged,\n\t\tmaxValueLength: MAX_VALUE_RENDER_LENGTH_IN_VIEWLET,\n\t\tshowHover: true,\n\t\tcolorize: true,\n\t\tlinkDetector\n\t});\n}\n\nexport interface IInputBoxOptions {\n\tinitialValue: string;\n\tariaLabel: string;\n\tplaceholder?: string;\n\tvalidationOptions?: IInputValidationOptions;\n\tonFinish: (value: string, success: boolean) => void;\n}\n\nexport interface IExpressionTemplateData {\n\texpression: HTMLElement;\n\tname: HTMLSpanElement;\n\tvalue: HTMLSpanElement;\n\tinputBoxContainer: HTMLElement;\n\tactionBar?: ActionBar;\n\telementDisposable: IDisposable[];\n\ttemplateDisposable: IDisposable;\n\tlabel: HighlightedLabel;\n\tlazyButton: HTMLElement;\n\tcurrentElement: IExpression | undefined;\n}\n\nexport abstract class AbstractExpressionsRenderer<T = IExpression> implements ITreeRenderer<T, FuzzyScore, IExpressionTemplateData> {\n\n\tconstructor(\n\t\t@IDebugService protected debugService: IDebugService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t) { }\n\n\tabstract get templateId(): string;\n\n\trenderTemplate(container: HTMLElement): IExpressionTemplateData {\n\t\tconst expression = dom.append(container, $('.expression'));\n\t\tconst name = dom.append(expression, $('span.name'));\n\t\tconst lazyButton = dom.append(expression, $('span.lazy-button'));\n\t\tlazyButton.classList.add(...ThemeIcon.asClassNameArray(Codicon.eye));\n\t\tlazyButton.title = localize('debug.lazyButton.tooltip', \"Click to expand\");\n\t\tconst value = dom.append(expression, $('span.value'));\n\n\t\tconst label = new HighlightedLabel(name);\n\n\t\tconst inputBoxContainer = dom.append(expression, $('.inputBoxContainer'));\n\n\t\tconst templateDisposable = new DisposableStore();\n\n\t\tlet actionBar: ActionBar | undefined;\n\t\tif (this.renderActionBar) {\n\t\t\tdom.append(expression, $('.span.actionbar-spacer'));\n\t\t\tactionBar = templateDisposable.add(new ActionBar(expression));\n\t\t}\n\n\t\tconst template: IExpressionTemplateData = { expression, name, value, label, inputBoxContainer, actionBar, elementDisposable: [], templateDisposable, lazyButton, currentElement: undefined };\n\n\t\ttemplateDisposable.add(dom.addDisposableListener(lazyButton, dom.EventType.CLICK, () => {\n\t\t\tif (template.currentElement) {\n\t\t\t\tthis.debugService.getViewModel().evaluateLazyExpression(template.currentElement);\n\t\t\t}\n\t\t}));\n\n\t\treturn template;\n\t}\n\n\tpublic abstract renderElement(node: ITreeNode<T, FuzzyScore>, index: number, data: IExpressionTemplateData): void;\n\n\tprotected renderExpressionElement(element: IExpression, node: ITreeNode<T, FuzzyScore>, data: IExpressionTemplateData): void {\n\t\tdata.currentElement = element;\n\t\tthis.renderExpression(node.element, data, createMatches(node.filterData));\n\t\tif (data.actionBar) {\n\t\t\tthis.renderActionBar!(data.actionBar, element, data);\n\t\t}\n\t\tconst selectedExpression = this.debugService.getViewModel().getSelectedExpression();\n\t\tif (element === selectedExpression?.expression || (element instanceof Variable && element.errorMessage)) {\n\t\t\tconst options = this.getInputBoxOptions(element, !!selectedExpression?.settingWatch);\n\t\t\tif (options) {\n\t\t\t\tdata.elementDisposable.push(this.renderInputBox(data.name, data.value, data.inputBoxContainer, options));\n\t\t\t}\n\t\t}\n\t}\n\n\trenderInputBox(nameElement: HTMLElement, valueElement: HTMLElement, inputBoxContainer: HTMLElement, options: IInputBoxOptions): IDisposable {\n\t\tnameElement.style.display = 'none';\n\t\tvalueElement.style.display = 'none';\n\t\tinputBoxContainer.style.display = 'initial';\n\t\tdom.clearNode(inputBoxContainer);\n\n\t\tconst inputBox = new InputBox(inputBoxContainer, this.contextViewService, { ...options, inputBoxStyles: defaultInputBoxStyles });\n\n\t\tinputBox.value = options.initialValue;\n\t\tinputBox.focus();\n\t\tinputBox.select();\n\n\t\tconst done = once((success: boolean, finishEditing: boolean) => {\n\t\t\tnameElement.style.display = '';\n\t\t\tvalueElement.style.display = '';\n\t\t\tinputBoxContainer.style.display = 'none';\n\t\t\tconst value = inputBox.value;\n\t\t\tdispose(toDispose);\n\n\t\t\tif (finishEditing) {\n\t\t\t\tthis.debugService.getViewModel().setSelectedExpression(undefined, false);\n\t\t\t\toptions.onFinish(value, success);\n\t\t\t}\n\t\t});\n\n\t\tconst toDispose = [\n\t\t\tinputBox,\n\t\t\tdom.addStandardDisposableListener(inputBox.inputElement, dom.EventType.KEY_DOWN, (e: IKeyboardEvent) => {\n\t\t\t\tconst isEscape = e.equals(KeyCode.Escape);\n\t\t\t\tconst isEnter = e.equals(KeyCode.Enter);\n\t\t\t\tif (isEscape || isEnter) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tdone(isEnter, true);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tdom.addDisposableListener(inputBox.inputElement, dom.EventType.BLUR, () => {\n\t\t\t\tdone(true, true);\n\t\t\t}),\n\t\t\tdom.addDisposableListener(inputBox.inputElement, dom.EventType.CLICK, e => {\n\t\t\t\t// Do not expand / collapse selected elements\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t})\n\t\t];\n\n\t\treturn toDisposable(() => {\n\t\t\tdone(false, false);\n\t\t});\n\t}\n\n\tprotected abstract renderExpression(expression: T, data: IExpressionTemplateData, highlights: IHighlight[]): void;\n\tprotected abstract getInputBoxOptions(expression: IExpression, settingValue: boolean): IInputBoxOptions | undefined;\n\n\tprotected renderActionBar?(actionBar: ActionBar, expression: IExpression, data: IExpressionTemplateData): void;\n\n\tdisposeElement(node: ITreeNode<T, FuzzyScore>, index: number, templateData: IExpressionTemplateData): void {\n\t\tdispose(templateData.elementDisposable);\n\t\ttemplateData.elementDisposable = [];\n\t}\n\n\tdisposeTemplate(templateData: IExpressionTemplateData): void {\n\t\tdispose(templateData.elementDisposable);\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n}\n"]}