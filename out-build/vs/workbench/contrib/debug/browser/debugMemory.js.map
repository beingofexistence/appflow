{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/debug/browser/debugMemory.ts"],"names":[],"mappings":"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","file":"debugMemory.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { clamp } from 'vs/base/common/numbers';\nimport { assertNever } from 'vs/base/common/assert';\nimport { URI } from 'vs/base/common/uri';\nimport { FileChangeType, IFileOpenOptions, FilePermission, FileSystemProviderCapabilities, FileSystemProviderErrorCode, FileType, IFileChange, IFileSystemProvider, IStat, IWatchOptions, createFileSystemProviderError } from 'vs/platform/files/common/files';\nimport { DEBUG_MEMORY_SCHEME, IDebugService, IDebugSession, IMemoryInvalidationEvent, IMemoryRegion, MemoryRange, MemoryRangeType, State } from 'vs/workbench/contrib/debug/common/debug';\n\nconst rangeRe = /range=([0-9]+):([0-9]+)/;\n\nexport class DebugMemoryFileSystemProvider implements IFileSystemProvider {\n\tprivate memoryFdCounter = 0;\n\tprivate readonly fdMemory = new Map<number, { session: IDebugSession; region: IMemoryRegion }>();\n\tprivate readonly changeEmitter = new Emitter<readonly IFileChange[]>();\n\n\t/** @inheritdoc */\n\tpublic readonly onDidChangeCapabilities = Event.None;\n\n\t/** @inheritdoc */\n\tpublic readonly onDidChangeFile = this.changeEmitter.event;\n\n\t/** @inheritdoc */\n\tpublic readonly capabilities = 0\n\t\t| FileSystemProviderCapabilities.PathCaseSensitive\n\t\t| FileSystemProviderCapabilities.FileOpenReadWriteClose;\n\n\tconstructor(private readonly debugService: IDebugService) {\n\t\tdebugService.onDidEndSession(session => {\n\t\t\tfor (const [fd, memory] of this.fdMemory) {\n\t\t\t\tif (memory.session === session) {\n\t\t\t\t\tthis.close(fd);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic watch(resource: URI, opts: IWatchOptions) {\n\t\tif (opts.recursive) {\n\t\t\treturn toDisposable(() => { });\n\t\t}\n\n\t\tconst { session, memoryReference, offset } = this.parseUri(resource);\n\t\tconst disposable = new DisposableStore();\n\n\t\tdisposable.add(session.onDidChangeState(() => {\n\t\t\tif (session.state === State.Running || session.state === State.Inactive) {\n\t\t\t\tthis.changeEmitter.fire([{ type: FileChangeType.DELETED, resource }]);\n\t\t\t}\n\t\t}));\n\n\t\tdisposable.add(session.onDidInvalidateMemory(e => {\n\t\t\tif (e.body.memoryReference !== memoryReference) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (offset && (e.body.offset >= offset.toOffset || e.body.offset + e.body.count < offset.fromOffset)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.changeEmitter.fire([{ resource, type: FileChangeType.UPDATED }]);\n\t\t}));\n\n\t\treturn disposable;\n\t}\n\n\t/** @inheritdoc */\n\tpublic stat(file: URI): Promise<IStat> {\n\t\tconst { readOnly } = this.parseUri(file);\n\t\treturn Promise.resolve({\n\t\t\ttype: FileType.File,\n\t\t\tmtime: 0,\n\t\t\tctime: 0,\n\t\t\tsize: 0,\n\t\t\tpermissions: readOnly ? FilePermission.Readonly : undefined,\n\t\t});\n\t}\n\n\t/** @inheritdoc */\n\tpublic mkdir(): never {\n\t\tthrow createFileSystemProviderError(`Not allowed`, FileSystemProviderErrorCode.NoPermissions);\n\t}\n\n\t/** @inheritdoc */\n\tpublic readdir(): never {\n\t\tthrow createFileSystemProviderError(`Not allowed`, FileSystemProviderErrorCode.NoPermissions);\n\t}\n\n\t/** @inheritdoc */\n\tpublic delete(): never {\n\t\tthrow createFileSystemProviderError(`Not allowed`, FileSystemProviderErrorCode.NoPermissions);\n\t}\n\n\t/** @inheritdoc */\n\tpublic rename(): never {\n\t\tthrow createFileSystemProviderError(`Not allowed`, FileSystemProviderErrorCode.NoPermissions);\n\t}\n\n\t/** @inheritdoc */\n\tpublic open(resource: URI, _opts: IFileOpenOptions): Promise<number> {\n\t\tconst { session, memoryReference, offset } = this.parseUri(resource);\n\t\tconst fd = this.memoryFdCounter++;\n\t\tlet region = session.getMemory(memoryReference);\n\t\tif (offset) {\n\t\t\tregion = new MemoryRegionView(region, offset);\n\t\t}\n\n\t\tthis.fdMemory.set(fd, { session, region });\n\t\treturn Promise.resolve(fd);\n\t}\n\n\t/** @inheritdoc */\n\tpublic close(fd: number) {\n\t\tthis.fdMemory.get(fd)?.region.dispose();\n\t\tthis.fdMemory.delete(fd);\n\t\treturn Promise.resolve();\n\t}\n\n\t/** @inheritdoc */\n\tpublic async writeFile(resource: URI, content: Uint8Array) {\n\t\tconst { offset } = this.parseUri(resource);\n\t\tif (!offset) {\n\t\t\tthrow createFileSystemProviderError(`Range must be present to read a file`, FileSystemProviderErrorCode.FileNotFound);\n\t\t}\n\n\t\tconst fd = await this.open(resource, { create: false });\n\n\t\ttry {\n\t\t\tawait this.write(fd, offset.fromOffset, content, 0, content.length);\n\t\t} finally {\n\t\t\tthis.close(fd);\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\tpublic async readFile(resource: URI) {\n\t\tconst { offset } = this.parseUri(resource);\n\t\tif (!offset) {\n\t\t\tthrow createFileSystemProviderError(`Range must be present to read a file`, FileSystemProviderErrorCode.FileNotFound);\n\t\t}\n\n\t\tconst data = new Uint8Array(offset.toOffset - offset.fromOffset);\n\t\tconst fd = await this.open(resource, { create: false });\n\n\t\ttry {\n\t\t\tawait this.read(fd, offset.fromOffset, data, 0, data.length);\n\t\t\treturn data;\n\t\t} finally {\n\t\t\tthis.close(fd);\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\tpublic async read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst memory = this.fdMemory.get(fd);\n\t\tif (!memory) {\n\t\t\tthrow createFileSystemProviderError(`No file with that descriptor open`, FileSystemProviderErrorCode.Unavailable);\n\t\t}\n\n\t\tconst ranges = await memory.region.read(pos, length);\n\t\tlet readSoFar = 0;\n\t\tfor (const range of ranges) {\n\t\t\tswitch (range.type) {\n\t\t\t\tcase MemoryRangeType.Unreadable:\n\t\t\t\t\treturn readSoFar;\n\t\t\t\tcase MemoryRangeType.Error:\n\t\t\t\t\tif (readSoFar > 0) {\n\t\t\t\t\t\treturn readSoFar;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow createFileSystemProviderError(range.error, FileSystemProviderErrorCode.Unknown);\n\t\t\t\t\t}\n\t\t\t\tcase MemoryRangeType.Valid: {\n\t\t\t\t\tconst start = Math.max(0, pos - range.offset);\n\t\t\t\t\tconst toWrite = range.data.slice(start, Math.min(range.data.byteLength, start + (length - readSoFar)));\n\t\t\t\t\tdata.set(toWrite.buffer, offset + readSoFar);\n\t\t\t\t\treadSoFar += toWrite.byteLength;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tassertNever(range);\n\t\t\t}\n\t\t}\n\n\t\treturn readSoFar;\n\t}\n\n\t/** @inheritdoc */\n\tpublic write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst memory = this.fdMemory.get(fd);\n\t\tif (!memory) {\n\t\t\tthrow createFileSystemProviderError(`No file with that descriptor open`, FileSystemProviderErrorCode.Unavailable);\n\t\t}\n\n\t\treturn memory.region.write(pos, VSBuffer.wrap(data).slice(offset, offset + length));\n\t}\n\n\tprotected parseUri(uri: URI) {\n\t\tif (uri.scheme !== DEBUG_MEMORY_SCHEME) {\n\t\t\tthrow createFileSystemProviderError(`Cannot open file with scheme ${uri.scheme}`, FileSystemProviderErrorCode.FileNotFound);\n\t\t}\n\n\t\tconst session = this.debugService.getModel().getSession(uri.authority);\n\t\tif (!session) {\n\t\t\tthrow createFileSystemProviderError(`Debug session not found`, FileSystemProviderErrorCode.FileNotFound);\n\t\t}\n\n\t\tlet offset: { fromOffset: number; toOffset: number } | undefined;\n\t\tconst rangeMatch = rangeRe.exec(uri.query);\n\t\tif (rangeMatch) {\n\t\t\toffset = { fromOffset: Number(rangeMatch[1]), toOffset: Number(rangeMatch[2]) };\n\t\t}\n\n\t\tconst [, memoryReference] = uri.path.split('/');\n\n\t\treturn {\n\t\t\tsession,\n\t\t\toffset,\n\t\t\treadOnly: !session.capabilities.supportsWriteMemoryRequest,\n\t\t\tsessionId: uri.authority,\n\t\t\tmemoryReference: decodeURIComponent(memoryReference),\n\t\t};\n\t}\n}\n\n/** A wrapper for a MemoryRegion that references a subset of data in another region. */\nclass MemoryRegionView extends Disposable implements IMemoryRegion {\n\tprivate readonly invalidateEmitter = new Emitter<IMemoryInvalidationEvent>();\n\n\tpublic readonly onDidInvalidate = this.invalidateEmitter.event;\n\tpublic readonly writable: boolean;\n\tprivate readonly width = this.range.toOffset - this.range.fromOffset;\n\n\tconstructor(private readonly parent: IMemoryRegion, public readonly range: { fromOffset: number; toOffset: number }) {\n\t\tsuper();\n\t\tthis.writable = parent.writable;\n\n\t\tthis._register(parent);\n\t\tthis._register(parent.onDidInvalidate(e => {\n\t\t\tconst fromOffset = clamp(e.fromOffset - range.fromOffset, 0, this.width);\n\t\t\tconst toOffset = clamp(e.toOffset - range.fromOffset, 0, this.width);\n\t\t\tif (toOffset > fromOffset) {\n\t\t\t\tthis.invalidateEmitter.fire({ fromOffset, toOffset });\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic read(fromOffset: number, toOffset: number): Promise<MemoryRange[]> {\n\t\tif (fromOffset < 0) {\n\t\t\tthrow new RangeError(`Invalid fromOffset: ${fromOffset}`);\n\t\t}\n\n\t\treturn this.parent.read(\n\t\t\tthis.range.fromOffset + fromOffset,\n\t\t\tthis.range.fromOffset + Math.min(toOffset, this.width),\n\t\t);\n\t}\n\n\tpublic write(offset: number, data: VSBuffer): Promise<number> {\n\t\treturn this.parent.write(this.range.fromOffset + offset, data);\n\t}\n}\n"]}