{"version":3,"sources":["vs/workbench/contrib/debug/browser/watchExpressionsView.ts"],"names":[],"mappings":"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","file":"watchExpressionsView.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IDebugService, IExpression, CONTEXT_WATCH_EXPRESSIONS_FOCUSED, WATCH_VIEW_ID, CONTEXT_WATCH_EXPRESSIONS_EXIST, CONTEXT_WATCH_ITEM_TYPE, CONTEXT_VARIABLE_IS_READONLY, CONTEXT_CAN_VIEW_MEMORY } from 'vs/workbench/contrib/debug/common/debug';\nimport { Expression, Variable } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { IContextMenuService, IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IAction } from 'vs/base/common/actions';\nimport { renderExpressionValue, renderViewTree, IInputBoxOptions, AbstractExpressionsRenderer, IExpressionTemplateData } from 'vs/workbench/contrib/debug/browser/baseDebugView';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ViewPane, ViewAction } from 'vs/workbench/browser/parts/views/viewPane';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { IListAccessibilityProvider } from 'vs/base/browser/ui/list/listWidget';\nimport { WorkbenchAsyncDataTree } from 'vs/platform/list/browser/listService';\nimport { IAsyncDataSource, ITreeMouseEvent, ITreeContextMenuEvent, ITreeDragAndDrop, ITreeDragOverReaction, ITreeNode } from 'vs/base/browser/ui/tree/tree';\nimport { IDragAndDropData } from 'vs/base/browser/dnd';\nimport { ElementsDragAndDropData } from 'vs/base/browser/ui/list/listView';\nimport { FuzzyScore } from 'vs/base/common/filters';\nimport { IHighlight } from 'vs/base/browser/ui/highlightedlabel/highlightedLabel';\nimport { VariablesRenderer } from 'vs/workbench/contrib/debug/browser/variablesView';\nimport { IContextKeyService, ContextKeyExpr, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IViewDescriptorService } from 'vs/workbench/common/views';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { watchExpressionsRemoveAll, watchExpressionsAdd } from 'vs/workbench/contrib/debug/browser/debugIcons';\nimport { registerAction2, MenuId, Action2, IMenuService, IMenu } from 'vs/platform/actions/common/actions';\nimport { localize } from 'vs/nls';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { createAndFillInContextMenuActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { LinkDetector } from 'vs/workbench/contrib/debug/browser/linkDetector';\n\nconst MAX_VALUE_RENDER_LENGTH_IN_VIEWLET = 1024;\nlet ignoreViewUpdates = false;\nlet useCachedEvaluation = false;\n\nexport class WatchExpressionsView extends ViewPane {\n\n\tprivate watchExpressionsUpdatedScheduler: RunOnceScheduler;\n\tprivate needsRefresh = false;\n\tprivate tree!: WorkbenchAsyncDataTree<IDebugService | IExpression, IExpression, FuzzyScore>;\n\tprivate watchExpressionsExist: IContextKey<boolean>;\n\tprivate watchItemType: IContextKey<string | undefined>;\n\tprivate variableReadonly: IContextKey<boolean>;\n\tprivate menu: IMenu;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IMenuService menuService: IMenuService\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\n\t\tthis.menu = menuService.createMenu(MenuId.DebugWatchContext, contextKeyService);\n\t\tthis._register(this.menu);\n\t\tthis.watchExpressionsUpdatedScheduler = new RunOnceScheduler(() => {\n\t\t\tthis.needsRefresh = false;\n\t\t\tthis.tree.updateChildren();\n\t\t}, 50);\n\t\tthis.watchExpressionsExist = CONTEXT_WATCH_EXPRESSIONS_EXIST.bindTo(contextKeyService);\n\t\tthis.variableReadonly = CONTEXT_VARIABLE_IS_READONLY.bindTo(contextKeyService);\n\t\tthis.watchExpressionsExist.set(this.debugService.getModel().getWatchExpressions().length > 0);\n\t\tthis.watchItemType = CONTEXT_WATCH_ITEM_TYPE.bindTo(contextKeyService);\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.element.classList.add('debug-pane');\n\t\tcontainer.classList.add('debug-watch');\n\t\tconst treeContainer = renderViewTree(container);\n\n\t\tconst expressionsRenderer = this.instantiationService.createInstance(WatchExpressionsRenderer);\n\t\tconst linkeDetector = this.instantiationService.createInstance(LinkDetector);\n\t\tthis.tree = <WorkbenchAsyncDataTree<IDebugService | IExpression, IExpression, FuzzyScore>>this.instantiationService.createInstance(WorkbenchAsyncDataTree, 'WatchExpressions', treeContainer, new WatchExpressionsDelegate(), [expressionsRenderer, this.instantiationService.createInstance(VariablesRenderer, linkeDetector)],\n\t\t\tnew WatchExpressionsDataSource(), {\n\t\t\taccessibilityProvider: new WatchExpressionsAccessibilityProvider(),\n\t\t\tidentityProvider: { getId: (element: IExpression) => element.getId() },\n\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\tgetKeyboardNavigationLabel: (e: IExpression) => {\n\t\t\t\t\tif (e === this.debugService.getViewModel().getSelectedExpression()?.expression) {\n\t\t\t\t\t\t// Don't filter input box\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn e.name;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdnd: new WatchExpressionsDragAndDrop(this.debugService),\n\t\t\toverrideStyles: {\n\t\t\t\tlistBackground: this.getBackgroundColor()\n\t\t\t}\n\t\t});\n\t\tthis.tree.setInput(this.debugService);\n\t\tCONTEXT_WATCH_EXPRESSIONS_FOCUSED.bindTo(this.tree.contextKeyService);\n\n\t\tthis._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n\t\tthis._register(this.tree.onMouseDblClick(e => this.onMouseDblClick(e)));\n\t\tthis._register(this.debugService.getModel().onDidChangeWatchExpressions(async we => {\n\t\t\tthis.watchExpressionsExist.set(this.debugService.getModel().getWatchExpressions().length > 0);\n\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\tthis.needsRefresh = true;\n\t\t\t} else {\n\t\t\t\tif (we && !we.name) {\n\t\t\t\t\t// We are adding a new input box, no need to re-evaluate watch expressions\n\t\t\t\t\tuseCachedEvaluation = true;\n\t\t\t\t}\n\t\t\t\tawait this.tree.updateChildren();\n\t\t\t\tuseCachedEvaluation = false;\n\t\t\t\tif (we instanceof Expression) {\n\t\t\t\t\tthis.tree.reveal(we);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.debugService.getViewModel().onDidFocusStackFrame(() => {\n\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\tthis.needsRefresh = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.watchExpressionsUpdatedScheduler.isScheduled()) {\n\t\t\t\tthis.watchExpressionsUpdatedScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.debugService.getViewModel().onWillUpdateViews(() => {\n\t\t\tif (!ignoreViewUpdates) {\n\t\t\t\tthis.tree.updateChildren();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (visible && this.needsRefresh) {\n\t\t\t\tthis.watchExpressionsUpdatedScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tlet horizontalScrolling: boolean | undefined;\n\t\tthis._register(this.debugService.getViewModel().onDidSelectExpression(e => {\n\t\t\tconst expression = e?.expression;\n\t\t\tif (expression instanceof Expression || (expression instanceof Variable && e?.settingWatch)) {\n\t\t\t\thorizontalScrolling = this.tree.options.horizontalScrolling;\n\t\t\t\tif (horizontalScrolling) {\n\t\t\t\t\tthis.tree.updateOptions({ horizontalScrolling: false });\n\t\t\t\t}\n\n\t\t\t\tif (expression.name) {\n\t\t\t\t\t// Only rerender if the input is already done since otherwise the tree is not yet aware of the new element\n\t\t\t\t\tthis.tree.rerender(expression);\n\t\t\t\t}\n\t\t\t} else if (!expression && horizontalScrolling !== undefined) {\n\t\t\t\tthis.tree.updateOptions({ horizontalScrolling: horizontalScrolling });\n\t\t\t\thorizontalScrolling = undefined;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.debugService.getViewModel().onDidEvaluateLazyExpression(async e => {\n\t\t\tif (e instanceof Variable && this.tree.hasNode(e)) {\n\t\t\t\tawait this.tree.updateChildren(e, false, true);\n\t\t\t\tawait this.tree.expand(e);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis.tree.layout(height, width);\n\t}\n\n\toverride focus(): void {\n\t\tthis.tree.domFocus();\n\t}\n\n\tcollapseAll(): void {\n\t\tthis.tree.collapseAll();\n\t}\n\n\tprivate onMouseDblClick(e: ITreeMouseEvent<IExpression>): void {\n\t\tif ((e.browserEvent.target as HTMLElement).className.indexOf('twistie') >= 0) {\n\t\t\t// Ignore double click events on twistie\n\t\t\treturn;\n\t\t}\n\n\t\tconst element = e.element;\n\t\t// double click on primitive value: open input box to be able to select and copy value.\n\t\tconst selectedExpression = this.debugService.getViewModel().getSelectedExpression();\n\t\tif (element instanceof Expression && element !== selectedExpression?.expression) {\n\t\t\tthis.debugService.getViewModel().setSelectedExpression(element, false);\n\t\t} else if (!element) {\n\t\t\t// Double click in watch panel triggers to add a new watch expression\n\t\t\tthis.debugService.addWatchExpression();\n\t\t}\n\t}\n\n\tprivate onContextMenu(e: ITreeContextMenuEvent<IExpression>): void {\n\t\tconst element = e.element;\n\t\tconst selection = this.tree.getSelection();\n\n\t\tthis.watchItemType.set(element instanceof Expression ? 'expression' : element instanceof Variable ? 'variable' : undefined);\n\t\tconst actions: IAction[] = [];\n\t\tconst attributes = element instanceof Variable ? element.presentationHint?.attributes : undefined;\n\t\tthis.variableReadonly.set(!!attributes && attributes.indexOf('readOnly') >= 0 || !!element?.presentationHint?.lazy);\n\t\tcreateAndFillInContextMenuActions(this.menu, { arg: element, shouldForwardArgs: true }, actions);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => element && selection.includes(element) ? selection : element ? [element] : [],\n\t\t});\n\t}\n}\n\nclass WatchExpressionsDelegate implements IListVirtualDelegate<IExpression> {\n\n\tgetHeight(_element: IExpression): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: IExpression): string {\n\t\tif (element instanceof Expression) {\n\t\t\treturn WatchExpressionsRenderer.ID;\n\t\t}\n\n\t\t// Variable\n\t\treturn VariablesRenderer.ID;\n\t}\n}\n\nfunction isDebugService(element: any): element is IDebugService {\n\treturn typeof element.getConfigurationManager === 'function';\n}\n\nclass WatchExpressionsDataSource implements IAsyncDataSource<IDebugService, IExpression> {\n\n\thasChildren(element: IExpression | IDebugService): boolean {\n\t\treturn isDebugService(element) || element.hasChildren;\n\t}\n\n\tgetChildren(element: IDebugService | IExpression): Promise<Array<IExpression>> {\n\t\tif (isDebugService(element)) {\n\t\t\tconst debugService = element as IDebugService;\n\t\t\tconst watchExpressions = debugService.getModel().getWatchExpressions();\n\t\t\tconst viewModel = debugService.getViewModel();\n\t\t\treturn Promise.all(watchExpressions.map(we => !!we.name && !useCachedEvaluation\n\t\t\t\t? we.evaluate(viewModel.focusedSession!, viewModel.focusedStackFrame!, 'watch').then(() => we)\n\t\t\t\t: Promise.resolve(we)));\n\t\t}\n\n\t\treturn element.getChildren();\n\t}\n}\n\n\nclass WatchExpressionsRenderer extends AbstractExpressionsRenderer {\n\n\tstatic readonly ID = 'watchexpression';\n\n\tconstructor(\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IDebugService debugService: IDebugService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t) {\n\t\tsuper(debugService, contextViewService);\n\t}\n\n\tget templateId() {\n\t\treturn WatchExpressionsRenderer.ID;\n\t}\n\n\tpublic override renderElement(node: ITreeNode<IExpression, FuzzyScore>, index: number, data: IExpressionTemplateData): void {\n\t\tsuper.renderExpressionElement(node.element, node, data);\n\t}\n\n\tprotected renderExpression(expression: IExpression, data: IExpressionTemplateData, highlights: IHighlight[]): void {\n\t\tconst text = typeof expression.value === 'string' ? `${expression.name}:` : expression.name;\n\t\tlet title: string;\n\t\tif (expression.type) {\n\t\t\ttitle = expression.type === expression.value ?\n\t\t\t\texpression.type :\n\t\t\t\t`${expression.type}: ${expression.value}`;\n\t\t} else {\n\t\t\ttitle = expression.value;\n\t\t}\n\n\t\tdata.label.set(text, highlights, title);\n\t\trenderExpressionValue(expression, data.value, {\n\t\t\tshowChanged: true,\n\t\t\tmaxValueLength: MAX_VALUE_RENDER_LENGTH_IN_VIEWLET,\n\t\t\tshowHover: true,\n\t\t\tcolorize: true\n\t\t});\n\t}\n\n\tprotected getInputBoxOptions(expression: IExpression, settingValue: boolean): IInputBoxOptions {\n\t\tif (settingValue) {\n\t\t\treturn {\n\t\t\t\tinitialValue: expression.value,\n\t\t\t\tariaLabel: localize('typeNewValue', \"Type new value\"),\n\t\t\t\tonFinish: async (value: string, success: boolean) => {\n\t\t\t\t\tif (success && value) {\n\t\t\t\t\t\tconst focusedFrame = this.debugService.getViewModel().focusedStackFrame;\n\t\t\t\t\t\tif (focusedFrame && (expression instanceof Variable || expression instanceof Expression)) {\n\t\t\t\t\t\t\tawait expression.setExpression(value, focusedFrame);\n\t\t\t\t\t\t\tthis.debugService.getViewModel().updateViews();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tinitialValue: expression.name ? expression.name : '',\n\t\t\tariaLabel: localize('watchExpressionInputAriaLabel', \"Type watch expression\"),\n\t\t\tplaceholder: localize('watchExpressionPlaceholder', \"Expression to watch\"),\n\t\t\tonFinish: (value: string, success: boolean) => {\n\t\t\t\tif (success && value) {\n\t\t\t\t\tthis.debugService.renameWatchExpression(expression.getId(), value);\n\t\t\t\t\tignoreViewUpdates = true;\n\t\t\t\t\tthis.debugService.getViewModel().updateViews();\n\t\t\t\t\tignoreViewUpdates = false;\n\t\t\t\t} else if (!expression.name) {\n\t\t\t\t\tthis.debugService.removeWatchExpressions(expression.getId());\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected override renderActionBar(actionBar: ActionBar, expression: IExpression) {\n\t\tconst contextKeyService = getContextForWatchExpressionMenu(this.contextKeyService, expression);\n\t\tconst menu = this.menuService.createMenu(MenuId.DebugWatchContext, contextKeyService);\n\n\t\tconst primary: IAction[] = [];\n\t\tconst context = expression;\n\t\tcreateAndFillInContextMenuActions(menu, { arg: context, shouldForwardArgs: false }, { primary, secondary: [] }, 'inline');\n\n\t\tactionBar.clear();\n\t\tactionBar.context = context;\n\t\tactionBar.push(primary, { icon: true, label: false });\n\t}\n}\n\n/**\n * Gets a context key overlay that has context for the given expression.\n */\nfunction getContextForWatchExpressionMenu(parentContext: IContextKeyService, expression: IExpression) {\n\treturn parentContext.createOverlay([\n\t\t[CONTEXT_CAN_VIEW_MEMORY.key, expression.memoryReference !== undefined],\n\t\t[CONTEXT_WATCH_ITEM_TYPE.key, 'expression']\n\t]);\n}\n\nclass WatchExpressionsAccessibilityProvider implements IListAccessibilityProvider<IExpression> {\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize({ comment: ['Debug is a noun in this context, not a verb.'], key: 'watchAriaTreeLabel' }, \"Debug Watch Expressions\");\n\t}\n\n\tgetAriaLabel(element: IExpression): string {\n\t\tif (element instanceof Expression) {\n\t\t\treturn localize('watchExpressionAriaLabel', \"{0}, value {1}\", (<Expression>element).name, (<Expression>element).value);\n\t\t}\n\n\t\t// Variable\n\t\treturn localize('watchVariableAriaLabel', \"{0}, value {1}\", (<Variable>element).name, (<Variable>element).value);\n\t}\n}\n\nclass WatchExpressionsDragAndDrop implements ITreeDragAndDrop<IExpression> {\n\n\tconstructor(private debugService: IDebugService) { }\n\n\tonDragOver(data: IDragAndDropData): boolean | ITreeDragOverReaction {\n\t\tif (!(data instanceof ElementsDragAndDropData)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst expressions = (data as ElementsDragAndDropData<IExpression>).elements;\n\t\treturn expressions.length > 0 && expressions[0] instanceof Expression;\n\t}\n\n\tgetDragURI(element: IExpression): string | null {\n\t\tif (!(element instanceof Expression) || element === this.debugService.getViewModel().getSelectedExpression()?.expression) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn element.getId();\n\t}\n\n\tgetDragLabel(elements: IExpression[]): string | undefined {\n\t\tif (elements.length === 1) {\n\t\t\treturn elements[0].name;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tdrop(data: IDragAndDropData, targetElement: IExpression): void {\n\t\tif (!(data instanceof ElementsDragAndDropData)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst draggedElement = (data as ElementsDragAndDropData<IExpression>).elements[0];\n\t\tconst watches = this.debugService.getModel().getWatchExpressions();\n\t\tconst position = targetElement instanceof Expression ? watches.indexOf(targetElement) : watches.length - 1;\n\t\tthis.debugService.moveWatchExpression(draggedElement.getId(), position);\n\t}\n}\n\nregisterAction2(class Collapse extends ViewAction<WatchExpressionsView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'watch.collapse',\n\t\t\tviewId: WATCH_VIEW_ID,\n\t\t\ttitle: localize('collapse', \"Collapse All\"),\n\t\t\tf1: false,\n\t\t\ticon: Codicon.collapseAll,\n\t\t\tprecondition: CONTEXT_WATCH_EXPRESSIONS_EXIST,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\torder: 30,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.equals('view', WATCH_VIEW_ID)\n\t\t\t}\n\t\t});\n\t}\n\n\trunInView(_accessor: ServicesAccessor, view: WatchExpressionsView) {\n\t\tview.collapseAll();\n\t}\n});\n\nexport const ADD_WATCH_ID = 'workbench.debug.viewlet.action.addWatchExpression'; // Use old and long id for backwards compatibility\nexport const ADD_WATCH_LABEL = localize('addWatchExpression', \"Add Expression\");\n\nregisterAction2(class AddWatchExpressionAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ADD_WATCH_ID,\n\t\t\ttitle: ADD_WATCH_LABEL,\n\t\t\tf1: false,\n\t\t\ticon: watchExpressionsAdd,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.equals('view', WATCH_VIEW_ID)\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tdebugService.addWatchExpression();\n\t}\n});\n\nexport const REMOVE_WATCH_EXPRESSIONS_COMMAND_ID = 'workbench.debug.viewlet.action.removeAllWatchExpressions';\nexport const REMOVE_WATCH_EXPRESSIONS_LABEL = localize('removeAllWatchExpressions', \"Remove All Expressions\");\nregisterAction2(class RemoveAllWatchExpressionsAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: REMOVE_WATCH_EXPRESSIONS_COMMAND_ID, // Use old and long id for backwards compatibility\n\t\t\ttitle: REMOVE_WATCH_EXPRESSIONS_LABEL,\n\t\t\tf1: false,\n\t\t\ticon: watchExpressionsRemoveAll,\n\t\t\tprecondition: CONTEXT_WATCH_EXPRESSIONS_EXIST,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\torder: 20,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.equals('view', WATCH_VIEW_ID)\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tdebugService.removeWatchExpressions();\n\t}\n});\n"]}