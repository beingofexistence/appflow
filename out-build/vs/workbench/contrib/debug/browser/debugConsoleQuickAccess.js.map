{"version":3,"sources":["vs/workbench/contrib/debug/browser/debugConsoleQuickAccess.ts"],"names":[],"mappings":";;;;;;;;;;;;;IAeO,IAAM,IAAI,GAAV,MAAM,IAAwB,SAAQ,wBAAiD;QAE7F,YACiC,CAAkB,EAClB,CAAkB,EAChB,CAAoB;YAEtD,KAAK,CAAC,oBAAI,EAA+B,EAAE,qBAAqB,EAAE,IAAI,EAAE,CAAC,CAAC;YAJ1C,MAAC,GAAD,CAAC,CAAiB;YAClB,MAAC,GAAD,CAAC,CAAiB;YAChB,MAAC,GAAD,CAAC,CAAmB;QAGvD,CAAC;QAES,CAAC,CAAS,MAAc,EAAE,WAAgB,EAAc,KAAwB;YACzF,MAAM,iBAAiB,GAAwD,EAAE,CAAC;YAElF,IAAI,CAAC,CAAC,CAAa,QAAQ,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;gBAC3G,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAW,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;gBACtD,IAAI,IAAI,EAAE;oBACT,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC7B;YACF,CAAC,CAAC,CAAC;YAGH,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,iBAAiB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;aAC9C;YAED,MAAM,mBAAmB,GAAG,IAAA,cAAQ,EAAC,CAAmC,EAAE,IAA2B,CAAC,CAAC;YACvG,iBAAiB,CAAC,IAAI,CAAC;gBACtB,KAAK,EAAE,WAAW,mBAAmB,EAAE;gBACvC,SAAS,EAAE,mBAAmB;gBAC9B,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAe,cAAc,CAAC,oBAAI,CAAgB;aACtE,CAAC,CAAC;YACH,OAAO,iBAAiB,CAAC;QAC1B,CAAC;QAEO,CAAC,CAAW,OAAsB,EAAE,YAAoB,EAAE,MAAc;YAC/E,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;YAE3B,MAAM,UAAU,GAAG,IAAA,aAAG,EAAU,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YACrD,IAAI,UAAU,EAAE;gBACf,OAAO;oBACN,KAAK;oBACL,UAAU,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE;oBACjC,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;wBACzB,IAAI,CAAC,CAAC,CAAa,eAAe,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;wBACtF,IAAI,CAAC,IAAI,CAAC,CAAC,CAAa,aAAa,CAAC,WAAG,CAAU,EAAE;4BACpD,IAAI,CAAC,CAAC,CAAa,QAAQ,CAAC,WAAG,EAAW,IAAI,CAAC,CAAC;yBAChD;oBACF,CAAC;iBACD,CAAC;aACF;YACD,OAAO,SAAS,CAAC;QAClB,CAAC;KACD,CAAA;IApDY,oBAAI;mBAAJ,IAAI;QAGd,WAAA,WAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,cAAG,CAAA;OALO,IAAI,CAoDhB","file":"debugConsoleQuickAccess.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { matchesFuzzy } from 'vs/base/common/filters';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { FastAndSlowPicks, IPickerQuickAccessItem, PickerQuickAccessProvider, Picks } from 'vs/platform/quickinput/browser/pickerQuickAccess';\nimport { IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { IViewsService } from 'vs/workbench/common/views';\nimport { DEBUG_CONSOLE_QUICK_ACCESS_PREFIX, SELECT_AND_START_ID } from 'vs/workbench/contrib/debug/browser/debugCommands';\nimport { IDebugService, IDebugSession, REPL_VIEW_ID } from 'vs/workbench/contrib/debug/common/debug';\n\nexport class DebugConsoleQuickAccess extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\n\tconstructor(\n\t\t@IDebugService private readonly _debugService: IDebugService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t) {\n\t\tsuper(DEBUG_CONSOLE_QUICK_ACCESS_PREFIX, { canAcceptInBackground: true });\n\t}\n\n\tprotected _getPicks(filter: string, disposables: DisposableStore, token: CancellationToken): Picks<IPickerQuickAccessItem> | Promise<Picks<IPickerQuickAccessItem>> | FastAndSlowPicks<IPickerQuickAccessItem> | null {\n\t\tconst debugConsolePicks: Array<IPickerQuickAccessItem | IQuickPickSeparator> = [];\n\n\t\tthis._debugService.getModel().getSessions(true).filter(s => s.hasSeparateRepl()).forEach((session, index) => {\n\t\t\tconst pick = this._createPick(session, index, filter);\n\t\t\tif (pick) {\n\t\t\t\tdebugConsolePicks.push(pick);\n\t\t\t}\n\t\t});\n\n\n\t\tif (debugConsolePicks.length > 0) {\n\t\t\tdebugConsolePicks.push({ type: 'separator' });\n\t\t}\n\n\t\tconst createTerminalLabel = localize(\"workbench.action.debug.startDebug\", \"Start a New Debug Session\");\n\t\tdebugConsolePicks.push({\n\t\t\tlabel: `$(plus) ${createTerminalLabel}`,\n\t\t\tariaLabel: createTerminalLabel,\n\t\t\taccept: () => this._commandService.executeCommand(SELECT_AND_START_ID)\n\t\t});\n\t\treturn debugConsolePicks;\n\t}\n\n\tprivate _createPick(session: IDebugSession, sessionIndex: number, filter: string): IPickerQuickAccessItem | undefined {\n\t\tconst label = session.name;\n\n\t\tconst highlights = matchesFuzzy(filter, label, true);\n\t\tif (highlights) {\n\t\t\treturn {\n\t\t\t\tlabel,\n\t\t\t\thighlights: { label: highlights },\n\t\t\t\taccept: (keyMod, event) => {\n\t\t\t\t\tthis._debugService.focusStackFrame(undefined, undefined, session, { explicit: true });\n\t\t\t\t\tif (!this._viewsService.isViewVisible(REPL_VIEW_ID)) {\n\t\t\t\t\t\tthis._viewsService.openView(REPL_VIEW_ID, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"]}