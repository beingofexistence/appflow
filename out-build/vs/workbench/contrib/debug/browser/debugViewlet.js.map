{"version":3,"sources":["vs/workbench/contrib/debug/browser/debugViewlet.ts"],"names":[],"mappings":"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","file":"debugViewlet.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IActionViewItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IAction } from 'vs/base/common/actions';\nimport { DisposableStore, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport 'vs/css!./media/debugViewlet';\nimport * as nls from 'vs/nls';\nimport { createActionViewItem } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { Action2, MenuId, MenuItemAction, MenuRegistry, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService, IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IProgressService } from 'vs/platform/progress/common/progress';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ViewPane } from 'vs/workbench/browser/parts/views/viewPane';\nimport { ViewPaneContainer, ViewsSubMenu } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { WorkbenchStateContext } from 'vs/workbench/common/contextkeys';\nimport { IViewDescriptorService, IViewsService } from 'vs/workbench/common/views';\nimport { FocusSessionActionViewItem, StartDebugActionViewItem } from 'vs/workbench/contrib/debug/browser/debugActionViewItems';\nimport { DEBUG_CONFIGURE_COMMAND_ID, DEBUG_CONFIGURE_LABEL, DEBUG_START_COMMAND_ID, DEBUG_START_LABEL, DISCONNECT_ID, FOCUS_SESSION_ID, SELECT_AND_START_ID, STOP_ID } from 'vs/workbench/contrib/debug/browser/debugCommands';\nimport { debugConfigure } from 'vs/workbench/contrib/debug/browser/debugIcons';\nimport { createDisconnectMenuItemAction } from 'vs/workbench/contrib/debug/browser/debugToolBar';\nimport { WelcomeView } from 'vs/workbench/contrib/debug/browser/welcomeView';\nimport { BREAKPOINTS_VIEW_ID, CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE, CONTEXT_DEBUG_UX, CONTEXT_DEBUG_UX_KEY, getStateLabel, IDebugService, ILaunch, REPL_VIEW_ID, State, VIEWLET_ID } from 'vs/workbench/contrib/debug/common/debug';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\n\nexport class DebugViewPaneContainer extends ViewPaneContainer {\n\n\tprivate startDebugActionViewItem: StartDebugActionViewItem | undefined;\n\tprivate progressResolve: (() => void) | undefined;\n\tprivate breakpointView: ViewPane | undefined;\n\tprivate paneListeners = new Map<string, IDisposable>();\n\n\tprivate readonly stopActionViewItemDisposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t) {\n\t\tsuper(VIEWLET_ID, { mergeViewWithContainerWhenSingleView: true }, instantiationService, configurationService, layoutService, contextMenuService, telemetryService, extensionService, themeService, storageService, contextService, viewDescriptorService);\n\n\t\t// When there are potential updates to the docked debug toolbar we need to update it\n\t\tthis._register(this.debugService.onDidChangeState(state => this.onDebugServiceStateChange(state)));\n\n\t\tthis._register(this.contextKeyService.onDidChangeContext(e => {\n\t\t\tif (e.affectsSome(new Set([CONTEXT_DEBUG_UX_KEY]))) {\n\t\t\t\tthis.updateTitleArea();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(() => this.updateTitleArea()));\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('debug.toolBarLocation')) {\n\t\t\t\tthis.updateTitleArea();\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride create(parent: HTMLElement): void {\n\t\tsuper.create(parent);\n\t\tparent.classList.add('debug-viewlet');\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\n\t\tif (this.startDebugActionViewItem) {\n\t\t\tthis.startDebugActionViewItem.focus();\n\t\t} else {\n\t\t\tthis.focusView(WelcomeView.ID);\n\t\t}\n\t}\n\n\toverride getActionViewItem(action: IAction): IActionViewItem | undefined {\n\t\tif (action.id === DEBUG_START_COMMAND_ID) {\n\t\t\tthis.startDebugActionViewItem = this.instantiationService.createInstance(StartDebugActionViewItem, null, action);\n\t\t\treturn this.startDebugActionViewItem;\n\t\t}\n\t\tif (action.id === FOCUS_SESSION_ID) {\n\t\t\treturn new FocusSessionActionViewItem(action, undefined, this.debugService, this.contextViewService, this.configurationService);\n\t\t}\n\n\t\tif (action.id === STOP_ID || action.id === DISCONNECT_ID) {\n\t\t\tthis.stopActionViewItemDisposables.clear();\n\t\t\tconst item = this.instantiationService.invokeFunction(accessor => createDisconnectMenuItemAction(action as MenuItemAction, this.stopActionViewItemDisposables, accessor));\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\n\t\treturn createActionViewItem(this.instantiationService, action);\n\t}\n\n\tfocusView(id: string): void {\n\t\tconst view = this.getView(id);\n\t\tif (view) {\n\t\t\tview.focus();\n\t\t}\n\t}\n\n\tprivate onDebugServiceStateChange(state: State): void {\n\t\tif (this.progressResolve) {\n\t\t\tthis.progressResolve();\n\t\t\tthis.progressResolve = undefined;\n\t\t}\n\n\t\tif (state === State.Initializing) {\n\t\t\tthis.progressService.withProgress({ location: VIEWLET_ID, }, _progress => {\n\t\t\t\treturn new Promise<void>(resolve => this.progressResolve = resolve);\n\t\t\t});\n\t\t}\n\t}\n\n\toverride addPanes(panes: { pane: ViewPane; size: number; index?: number }[]): void {\n\t\tsuper.addPanes(panes);\n\n\t\tfor (const { pane: pane } of panes) {\n\t\t\t// attach event listener to\n\t\t\tif (pane.id === BREAKPOINTS_VIEW_ID) {\n\t\t\t\tthis.breakpointView = pane;\n\t\t\t\tthis.updateBreakpointsMaxSize();\n\t\t\t} else {\n\t\t\t\tthis.paneListeners.set(pane.id, pane.onDidChange(() => this.updateBreakpointsMaxSize()));\n\t\t\t}\n\t\t}\n\t}\n\n\toverride removePanes(panes: ViewPane[]): void {\n\t\tsuper.removePanes(panes);\n\t\tfor (const pane of panes) {\n\t\t\tdispose(this.paneListeners.get(pane.id));\n\t\t\tthis.paneListeners.delete(pane.id);\n\t\t}\n\t}\n\n\tprivate updateBreakpointsMaxSize(): void {\n\t\tif (this.breakpointView) {\n\t\t\t// We need to update the breakpoints view since all other views are collapsed #25384\n\t\t\tconst allOtherCollapsed = this.panes.every(view => !view.isExpanded() || view === this.breakpointView);\n\t\t\tthis.breakpointView.maximumBodySize = allOtherCollapsed ? Number.POSITIVE_INFINITY : this.breakpointView.minimumBodySize;\n\t\t}\n\t}\n}\n\nMenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID), CONTEXT_DEBUG_UX.notEqualsTo('simple'), WorkbenchStateContext.notEqualsTo('empty'),\n\t\tContextKeyExpr.or(CONTEXT_DEBUG_STATE.isEqualTo('inactive'), ContextKeyExpr.notEquals('config.debug.toolBarLocation', 'docked'))),\n\torder: 10,\n\tgroup: 'navigation',\n\tcommand: {\n\t\tprecondition: CONTEXT_DEBUG_STATE.notEqualsTo(getStateLabel(State.Initializing)),\n\t\tid: DEBUG_START_COMMAND_ID,\n\t\ttitle: DEBUG_START_LABEL\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: DEBUG_CONFIGURE_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: DEBUG_CONFIGURE_LABEL,\n\t\t\t\toriginal: 'Open \\'launch.json\\'',\n\t\t\t\tmnemonicTitle: nls.localize({ key: 'miOpenConfigurations', comment: ['&& denotes a mnemonic'] }, \"Open &&Configurations\")\n\t\t\t},\n\t\t\tf1: true,\n\t\t\ticon: debugConfigure,\n\t\t\tprecondition: CONTEXT_DEBUG_UX.notEqualsTo('simple'),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 20,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID), CONTEXT_DEBUG_UX.notEqualsTo('simple'), WorkbenchStateContext.notEqualsTo('empty'),\n\t\t\t\t\tContextKeyExpr.or(CONTEXT_DEBUG_STATE.isEqualTo('inactive'), ContextKeyExpr.notEquals('config.debug.toolBarLocation', 'docked')))\n\t\t\t}, {\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\torder: 20,\n\t\t\t\t// Show in debug viewlet secondary actions when debugging and debug toolbar is docked\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID), CONTEXT_DEBUG_STATE.notEqualsTo('inactive'), ContextKeyExpr.equals('config.debug.toolBarLocation', 'docked'))\n\t\t\t}, {\n\t\t\t\tid: MenuId.MenubarDebugMenu,\n\t\t\t\tgroup: '2_configuration',\n\t\t\t\torder: 1,\n\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst configurationManager = debugService.getConfigurationManager();\n\t\tlet launch: ILaunch | undefined;\n\t\tif (configurationManager.selectedConfiguration.name) {\n\t\t\tlaunch = configurationManager.selectedConfiguration.launch;\n\t\t} else {\n\t\t\tconst launches = configurationManager.getLaunches().filter(l => !l.hidden);\n\t\t\tif (launches.length === 1) {\n\t\t\t\tlaunch = launches[0];\n\t\t\t} else {\n\t\t\t\tconst picks = launches.map(l => ({ label: l.name, launch: l }));\n\t\t\t\tconst picked = await quickInputService.pick<{ label: string; launch: ILaunch }>(picks, {\n\t\t\t\t\tactiveItem: picks[0],\n\t\t\t\t\tplaceHolder: nls.localize({ key: 'selectWorkspaceFolder', comment: ['User picks a workspace folder or a workspace configuration file here. Workspace configuration files can contain settings and thus a launch.json configuration can be written into one.'] }, \"Select a workspace folder to create a launch.json file in or add it to the workspace config file\")\n\t\t\t\t});\n\t\t\t\tif (picked) {\n\t\t\t\t\tlaunch = picked.launch;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (launch) {\n\t\t\tawait launch.openConfigFile({ preserveFocus: false });\n\t\t}\n\t}\n});\n\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'debug.toggleReplIgnoreFocus',\n\t\t\ttitle: nls.localize('debugPanel', \"Debug Console\"),\n\t\t\ttoggled: ContextKeyExpr.has(`view.${REPL_VIEW_ID}.visible`),\n\t\t\tmenu: [{\n\t\t\t\tid: ViewsSubMenu,\n\t\t\t\tgroup: '3_toggleRepl',\n\t\t\t\torder: 30,\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID))\n\t\t\t}]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tif (viewsService.isViewVisible(REPL_VIEW_ID)) {\n\t\t\tviewsService.closeView(REPL_VIEW_ID);\n\t\t} else {\n\t\t\tawait viewsService.openView(REPL_VIEW_ID);\n\t\t}\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('viewContainer', VIEWLET_ID), CONTEXT_DEBUG_STATE.notEqualsTo('inactive'), ContextKeyExpr.equals('config.debug.toolBarLocation', 'docked')),\n\torder: 10,\n\tcommand: {\n\t\tid: SELECT_AND_START_ID,\n\t\ttitle: nls.localize('startAdditionalSession', \"Start Additional Session\"),\n\t}\n});\n"]}