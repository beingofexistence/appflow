{"version":3,"sources":["vs/workbench/contrib/debug/browser/debugEditorActions.ts"],"names":[],"mappings":"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","file":"debugEditorActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getDomNodePagePosition } from 'vs/base/browser/dom';\nimport { Action } from 'vs/base/common/actions';\nimport { KeyChord, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, EditorAction2, IActionOptions, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { Position } from 'vs/editor/common/core/position';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { MessageController } from 'vs/editor/contrib/message/browser/messageController';\nimport * as nls from 'vs/nls';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { PanelFocusContext } from 'vs/workbench/common/contextkeys';\nimport { IViewsService } from 'vs/workbench/common/views';\nimport { openBreakpointSource } from 'vs/workbench/contrib/debug/browser/breakpointsView';\nimport { DisassemblyView } from 'vs/workbench/contrib/debug/browser/disassemblyView';\nimport { BREAKPOINT_EDITOR_CONTRIBUTION_ID, BreakpointWidgetContext, CONTEXT_CALLSTACK_ITEM_TYPE, CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_STATE, CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED, CONTEXT_DISASSEMBLY_VIEW_FOCUS, CONTEXT_EXCEPTION_WIDGET_VISIBLE, CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE, CONTEXT_IN_DEBUG_MODE, CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST, CONTEXT_STEP_INTO_TARGETS_SUPPORTED, EDITOR_CONTRIBUTION_ID, IBreakpointEditorContribution, IDebugConfiguration, IDebugEditorContribution, IDebugService, REPL_VIEW_ID, WATCH_VIEW_ID } from 'vs/workbench/contrib/debug/common/debug';\nimport { getEvaluatableExpressionAtPosition } from 'vs/workbench/contrib/debug/common/debugUtils';\nimport { DisassemblyViewInput } from 'vs/workbench/contrib/debug/common/disassemblyViewInput';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\n\nclass ToggleBreakpointAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.toggleBreakpoint',\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('toggleBreakpointAction', \"Debug: Toggle Breakpoint\"),\n\t\t\t\toriginal: 'Debug: Toggle Breakpoint',\n\t\t\t\tmnemonicTitle: nls.localize({ key: 'miToggleBreakpoint', comment: ['&& denotes a mnemonic'] }, \"Toggle &&Breakpoint\"),\n\t\t\t},\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.or(EditorContextKeys.editorTextFocus, CONTEXT_DISASSEMBLY_VIEW_FOCUS),\n\t\t\t\tprimary: KeyCode.F9,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarDebugMenu,\n\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\t\tgroup: '4_new_breakpoint',\n\t\t\t\torder: 1\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tconst activePane = editorService.activeEditorPane;\n\t\tif (activePane instanceof DisassemblyView) {\n\t\t\tconst location = activePane.focusedAddressAndOffset;\n\t\t\tif (location) {\n\t\t\t\tconst bps = debugService.getModel().getInstructionBreakpoints();\n\t\t\t\tconst toRemove = bps.find(bp => bp.address === location.address);\n\t\t\t\tif (toRemove) {\n\t\t\t\t\tdebugService.removeInstructionBreakpoints(toRemove.instructionReference, toRemove.offset);\n\t\t\t\t} else {\n\t\t\t\t\tdebugService.addInstructionBreakpoint(location.reference, location.offset, location.address);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n\t\tif (editor?.hasModel()) {\n\t\t\tconst modelUri = editor.getModel().uri;\n\t\t\tconst canSet = debugService.canSetBreakpointsIn(editor.getModel());\n\t\t\t// Does not account for multi line selections, Set to remove multiple cursor on the same line\n\t\t\tconst lineNumbers = [...new Set(editor.getSelections().map(s => s.getPosition().lineNumber))];\n\n\t\t\tawait Promise.all(lineNumbers.map(async line => {\n\t\t\t\tconst bps = debugService.getModel().getBreakpoints({ lineNumber: line, uri: modelUri });\n\t\t\t\tif (bps.length) {\n\t\t\t\t\tawait Promise.all(bps.map(bp => debugService.removeBreakpoints(bp.getId())));\n\t\t\t\t} else if (canSet) {\n\t\t\t\t\tawait debugService.addBreakpoints(modelUri, [{ lineNumber: line }]);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n}\n\nclass ConditionalBreakpointAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.conditionalBreakpoint',\n\t\t\tlabel: nls.localize('conditionalBreakpointEditorAction', \"Debug: Add Conditional Breakpoint...\"),\n\t\t\talias: 'Debug: Add Conditional Breakpoint...',\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarNewBreakpointMenu,\n\t\t\t\ttitle: nls.localize({ key: 'miConditionalBreakpoint', comment: ['&& denotes a mnemonic'] }, \"&&Conditional Breakpoint...\"),\n\t\t\t\tgroup: '1_breakpoints',\n\t\t\t\torder: 1,\n\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tconst position = editor.getPosition();\n\t\tif (position && editor.hasModel() && debugService.canSetBreakpointsIn(editor.getModel())) {\n\t\t\teditor.getContribution<IBreakpointEditorContribution>(BREAKPOINT_EDITOR_CONTRIBUTION_ID)?.showBreakpointWidget(position.lineNumber, undefined, BreakpointWidgetContext.CONDITION);\n\t\t}\n\t}\n}\n\nclass LogPointAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.addLogPoint',\n\t\t\tlabel: nls.localize('logPointEditorAction', \"Debug: Add Logpoint...\"),\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\talias: 'Debug: Add Logpoint...',\n\t\t\tmenuOpts: [\n\t\t\t\t{\n\t\t\t\t\tmenuId: MenuId.MenubarNewBreakpointMenu,\n\t\t\t\t\ttitle: nls.localize({ key: 'miLogPoint', comment: ['&& denotes a mnemonic'] }, \"&&Logpoint...\"),\n\t\t\t\t\tgroup: '1_breakpoints',\n\t\t\t\t\torder: 4,\n\t\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tconst position = editor.getPosition();\n\t\tif (position && editor.hasModel() && debugService.canSetBreakpointsIn(editor.getModel())) {\n\t\t\teditor.getContribution<IBreakpointEditorContribution>(BREAKPOINT_EDITOR_CONTRIBUTION_ID)?.showBreakpointWidget(position.lineNumber, position.column, BreakpointWidgetContext.LOG_MESSAGE);\n\t\t}\n\t}\n}\n\nclass EditBreakpointAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.editBreakpoint',\n\t\t\tlabel: nls.localize('EditBreakpointEditorAction', \"Debug: Edit Breakpoint\"),\n\t\t\talias: 'Debug: Edit Existing Breakpoint',\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE,\n\t\t\tmenuOpts: {\n\t\t\t\tmenuId: MenuId.MenubarNewBreakpointMenu,\n\t\t\t\ttitle: nls.localize({ key: 'miEditBreakpoint', comment: ['&& denotes a mnemonic'] }, \"&&Edit Breakpoint\"),\n\t\t\t\tgroup: '1_breakpoints',\n\t\t\t\torder: 1,\n\t\t\t\twhen: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\n\t\tconst position = editor.getPosition();\n\t\tconst debugModel = debugService.getModel();\n\t\tif (!(editor.hasModel() && position)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineBreakpoints = debugModel.getBreakpoints({ lineNumber: position.lineNumber });\n\t\tif (lineBreakpoints.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst breakpointDistances = lineBreakpoints.map(b => {\n\t\t\tif (!b.column) {\n\t\t\t\treturn position.column;\n\t\t\t}\n\n\t\t\treturn Math.abs(b.column - position.column);\n\t\t});\n\t\tconst closestBreakpointIndex = breakpointDistances.indexOf(Math.min(...breakpointDistances));\n\t\tconst closestBreakpoint = lineBreakpoints[closestBreakpointIndex];\n\n\t\teditor.getContribution<IBreakpointEditorContribution>(BREAKPOINT_EDITOR_CONTRIBUTION_ID)?.showBreakpointWidget(closestBreakpoint.lineNumber, closestBreakpoint.column);\n\t}\n}\n\nclass OpenDisassemblyViewAction extends EditorAction2 {\n\n\tpublic static readonly ID = 'editor.debug.action.openDisassemblyView';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenDisassemblyViewAction.ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('openDisassemblyView', \"Open Disassembly View\"),\n\t\t\t\toriginal: 'Open Disassembly View',\n\t\t\t\tmnemonicTitle: nls.localize({ key: 'miDisassemblyView', comment: ['&& denotes a mnemonic'] }, \"&&DisassemblyView\")\n\t\t\t},\n\t\t\tprecondition: CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorContext,\n\t\t\t\t\tgroup: 'debug',\n\t\t\t\t\torder: 5,\n\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, PanelFocusContext.toNegated(), CONTEXT_DEBUG_STATE.isEqualTo('stopped'), EditorContextKeys.editorTextFocus, CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED, CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.DebugCallStackContext,\n\t\t\t\t\tgroup: 'z_commands',\n\t\t\t\t\torder: 50,\n\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped'), CONTEXT_CALLSTACK_ITEM_TYPE.isEqualTo('stackFrame'), CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped'), CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED)\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\trunEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, ...args: any[]): void {\n\t\tif (editor.hasModel()) {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\teditorService.openEditor(DisassemblyViewInput.instance, { pinned: true, revealIfOpened: true });\n\t\t}\n\t}\n}\n\nclass ToggleDisassemblyViewSourceCodeAction extends Action2 {\n\n\tpublic static readonly ID = 'debug.action.toggleDisassemblyViewSourceCode';\n\tpublic static readonly configID: string = 'debug.disassemblyView.showSourceCode';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleDisassemblyViewSourceCodeAction.ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('toggleDisassemblyViewSourceCode', \"Toggle Source Code in Disassembly View\"),\n\t\t\t\toriginal: 'Toggle Source Code in Disassembly View',\n\t\t\t\tmnemonicTitle: nls.localize({ key: 'mitogglesource', comment: ['&& denotes a mnemonic'] }, \"&&ToggleSource\")\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor, ...args: any[]): void {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tif (configService) {\n\t\t\tconst value = configService.getValue<IDebugConfiguration>('debug').disassemblyView.showSourceCode;\n\t\t\tconfigService.updateValue(ToggleDisassemblyViewSourceCodeAction.configID, !value);\n\t\t}\n\t}\n}\n\nexport class RunToCursorAction extends EditorAction {\n\n\tpublic static readonly ID = 'editor.debug.action.runToCursor';\n\tpublic static readonly LABEL = nls.localize('runToCursor', \"Run to Cursor\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: RunToCursorAction.ID,\n\t\t\tlabel: RunToCursorAction.LABEL,\n\t\t\talias: 'Debug: Run to Cursor',\n\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_DEBUGGERS_AVAILABLE, PanelFocusContext.toNegated(), ContextKeyExpr.or(EditorContextKeys.editorTextFocus, CONTEXT_DISASSEMBLY_VIEW_FOCUS)),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'debug',\n\t\t\t\torder: 2,\n\t\t\t\twhen: CONTEXT_IN_DEBUG_MODE\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst position = editor.getPosition();\n\t\tif (!(editor.hasModel() && position)) {\n\t\t\treturn;\n\t\t}\n\t\tconst uri = editor.getModel().uri;\n\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst viewModel = debugService.getViewModel();\n\t\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\n\t\tlet column: number | undefined = undefined;\n\t\tconst focusedStackFrame = viewModel.focusedStackFrame;\n\t\tif (focusedStackFrame && uriIdentityService.extUri.isEqual(focusedStackFrame.source.uri, uri) && focusedStackFrame.range.startLineNumber === position.lineNumber) {\n\t\t\t// If the cursor is on a line different than the one the debugger is currently paused on, then send the breakpoint on the line without a column\n\t\t\t// otherwise set it at the precise column #102199\n\t\t\tcolumn = position.column;\n\t\t}\n\t\tawait debugService.runTo(uri, position.lineNumber, column);\n\t}\n}\n\nexport class SelectionToReplAction extends EditorAction {\n\n\tpublic static readonly ID = 'editor.debug.action.selectionToRepl';\n\tpublic static readonly LABEL = nls.localize('evaluateInDebugConsole', \"Evaluate in Debug Console\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SelectionToReplAction.ID,\n\t\t\tlabel: SelectionToReplAction.LABEL,\n\t\t\talias: 'Debug: Evaluate in Console',\n\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, EditorContextKeys.editorTextFocus),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'debug',\n\t\t\t\torder: 0\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst viewModel = debugService.getViewModel();\n\t\tconst session = viewModel.focusedSession;\n\t\tif (!editor.hasModel() || !session) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selection = editor.getSelection();\n\t\tlet text: string;\n\t\tif (selection.isEmpty()) {\n\t\t\ttext = editor.getModel().getLineContent(selection.selectionStartLineNumber).trim();\n\t\t} else {\n\t\t\ttext = editor.getModel().getValueInRange(selection);\n\t\t}\n\n\t\tawait session.addReplExpression(viewModel.focusedStackFrame!, text);\n\t\tawait viewsService.openView(REPL_VIEW_ID, false);\n\t}\n}\n\nexport class SelectionToWatchExpressionsAction extends EditorAction {\n\n\tpublic static readonly ID = 'editor.debug.action.selectionToWatch';\n\tpublic static readonly LABEL = nls.localize('addToWatch', \"Add to Watch\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SelectionToWatchExpressionsAction.ID,\n\t\t\tlabel: SelectionToWatchExpressionsAction.LABEL,\n\t\t\talias: 'Debug: Add to Watch',\n\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_IN_DEBUG_MODE, EditorContextKeys.editorTextFocus),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'debug',\n\t\t\t\torder: 1\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet expression: string | undefined = undefined;\n\n\t\tconst model = editor.getModel();\n\t\tconst selection = editor.getSelection();\n\n\t\tif (!selection.isEmpty()) {\n\t\t\texpression = model.getValueInRange(selection);\n\t\t} else {\n\t\t\tconst position = editor.getPosition();\n\t\t\tconst evaluatableExpression = await getEvaluatableExpressionAtPosition(languageFeaturesService, model, position);\n\t\t\tif (!evaluatableExpression) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\texpression = evaluatableExpression.matchingExpression;\n\t\t}\n\n\t\tif (!expression) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait viewsService.openView(WATCH_VIEW_ID);\n\t\tdebugService.addWatchExpression(expression);\n\t}\n}\n\nclass ShowDebugHoverAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.showDebugHover',\n\t\t\tlabel: nls.localize('showDebugHover', \"Debug: Show Hover\"),\n\t\t\talias: 'Debug: Show Hover',\n\t\t\tprecondition: CONTEXT_IN_DEBUG_MODE,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyI),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst position = editor.getPosition();\n\t\tif (!position || !editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn editor.getContribution<IDebugEditorContribution>(EDITOR_CONTRIBUTION_ID)?.showHover(position, true);\n\t}\n}\n\nconst NO_TARGETS_MESSAGE = nls.localize('editor.debug.action.stepIntoTargets.notAvailable', \"Step targets are not available here\");\n\nclass StepIntoTargetsAction extends EditorAction {\n\n\tpublic static readonly ID = 'editor.debug.action.stepIntoTargets';\n\tpublic static readonly LABEL = nls.localize({ key: 'stepIntoTargets', comment: ['Step Into Targets lets the user step into an exact function he or she is interested in.'] }, \"Step Into Target\");\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: StepIntoTargetsAction.ID,\n\t\t\tlabel: StepIntoTargetsAction.LABEL,\n\t\t\talias: 'Debug: Step Into Target',\n\t\t\tprecondition: ContextKeyExpr.and(CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_IN_DEBUG_MODE, CONTEXT_DEBUG_STATE.isEqualTo('stopped'), EditorContextKeys.editorTextFocus),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: 'debug',\n\t\t\t\torder: 1.5\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst contextMenuService = accessor.get(IContextMenuService);\n\t\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\t\tconst session = debugService.getViewModel().focusedSession;\n\t\tconst frame = debugService.getViewModel().focusedStackFrame;\n\t\tconst selection = editor.getSelection();\n\n\t\tconst targetPosition = selection?.getPosition() || (frame && { lineNumber: frame.range.startLineNumber, column: frame.range.startColumn });\n\n\t\tif (!session || !frame || !editor.hasModel() || !uriIdentityService.extUri.isEqual(editor.getModel().uri, frame.source.uri)) {\n\t\t\tif (targetPosition) {\n\t\t\t\tMessageController.get(editor)?.showMessage(NO_TARGETS_MESSAGE, targetPosition);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\n\t\tconst targets = await session.stepInTargets(frame.frameId);\n\t\tif (!targets?.length) {\n\t\t\tMessageController.get(editor)?.showMessage(NO_TARGETS_MESSAGE, targetPosition!);\n\t\t\treturn;\n\t\t}\n\n\t\t// If there is a selection, try to find the best target with a position to step into.\n\t\tif (selection) {\n\t\t\tconst positionalTargets: { start: Position; end?: Position; target: DebugProtocol.StepInTarget }[] = [];\n\t\t\tfor (const target of targets) {\n\t\t\t\tif (target.line) {\n\t\t\t\t\tpositionalTargets.push({\n\t\t\t\t\t\tstart: new Position(target.line, target.column || 1),\n\t\t\t\t\t\tend: target.endLine ? new Position(target.endLine, target.endColumn || 1) : undefined,\n\t\t\t\t\t\ttarget\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpositionalTargets.sort((a, b) => b.start.lineNumber - a.start.lineNumber || b.start.column - a.start.column);\n\n\t\t\tconst needle = selection.getPosition();\n\n\t\t\t// Try to find a target with a start and end that is around the cursor\n\t\t\t// position. Or, if none, whatever is before the cursor.\n\t\t\tconst best = positionalTargets.find(t => t.end && needle.isBefore(t.end) && t.start.isBeforeOrEqual(needle)) || positionalTargets.find(t => t.end === undefined && t.start.isBeforeOrEqual(needle));\n\t\t\tif (best) {\n\t\t\t\tsession.stepIn(frame.thread.threadId, best.target.id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise, show a context menu and have the user pick a target\n\t\teditor.revealLineInCenterIfOutsideViewport(frame.range.startLineNumber);\n\t\tconst cursorCoords = editor.getScrolledVisiblePosition(targetPosition!);\n\t\tconst editorCoords = getDomNodePagePosition(editor.getDomNode());\n\t\tconst x = editorCoords.left + cursorCoords.left;\n\t\tconst y = editorCoords.top + cursorCoords.top + cursorCoords.height;\n\n\t\tcontextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => ({ x, y }),\n\t\t\tgetActions: () => {\n\t\t\t\treturn targets.map(t => new Action(`stepIntoTarget:${t.id}`, t.label, undefined, true, () => session.stepIn(frame.thread.threadId, t.id)));\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass GoToBreakpointAction extends EditorAction {\n\tconstructor(private isNext: boolean, opts: IActionOptions) {\n\t\tsuper(opts);\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<any> {\n\t\tconst debugService = accessor.get(IDebugService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\n\t\tif (editor.hasModel()) {\n\t\t\tconst currentUri = editor.getModel().uri;\n\t\t\tconst currentLine = editor.getPosition().lineNumber;\n\t\t\t//Breakpoints returned from `getBreakpoints` are already sorted.\n\t\t\tconst allEnabledBreakpoints = debugService.getModel().getBreakpoints({ enabledOnly: true });\n\n\t\t\t//Try to find breakpoint in current file\n\t\t\tlet moveBreakpoint =\n\t\t\t\tthis.isNext\n\t\t\t\t\t? allEnabledBreakpoints.filter(bp => uriIdentityService.extUri.isEqual(bp.uri, currentUri) && bp.lineNumber > currentLine).shift()\n\t\t\t\t\t: allEnabledBreakpoints.filter(bp => uriIdentityService.extUri.isEqual(bp.uri, currentUri) && bp.lineNumber < currentLine).pop();\n\n\t\t\t//Try to find breakpoints in following files\n\t\t\tif (!moveBreakpoint) {\n\t\t\t\tmoveBreakpoint =\n\t\t\t\t\tthis.isNext\n\t\t\t\t\t\t? allEnabledBreakpoints.filter(bp => bp.uri.toString() > currentUri.toString()).shift()\n\t\t\t\t\t\t: allEnabledBreakpoints.filter(bp => bp.uri.toString() < currentUri.toString()).pop();\n\t\t\t}\n\n\t\t\t//Move to first or last possible breakpoint\n\t\t\tif (!moveBreakpoint && allEnabledBreakpoints.length) {\n\t\t\t\tmoveBreakpoint = this.isNext ? allEnabledBreakpoints[0] : allEnabledBreakpoints[allEnabledBreakpoints.length - 1];\n\t\t\t}\n\n\t\t\tif (moveBreakpoint) {\n\t\t\t\treturn openBreakpointSource(moveBreakpoint, false, true, false, debugService, editorService);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass GoToNextBreakpointAction extends GoToBreakpointAction {\n\tconstructor() {\n\t\tsuper(true, {\n\t\t\tid: 'editor.debug.action.goToNextBreakpoint',\n\t\t\tlabel: nls.localize('goToNextBreakpoint', \"Debug: Go to Next Breakpoint\"),\n\t\t\talias: 'Debug: Go to Next Breakpoint',\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t});\n\t}\n}\n\nclass GoToPreviousBreakpointAction extends GoToBreakpointAction {\n\tconstructor() {\n\t\tsuper(false, {\n\t\t\tid: 'editor.debug.action.goToPreviousBreakpoint',\n\t\t\tlabel: nls.localize('goToPreviousBreakpoint', \"Debug: Go to Previous Breakpoint\"),\n\t\t\talias: 'Debug: Go to Previous Breakpoint',\n\t\t\tprecondition: CONTEXT_DEBUGGERS_AVAILABLE\n\t\t});\n\t}\n}\n\nclass CloseExceptionWidgetAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.debug.action.closeExceptionWidget',\n\t\t\tlabel: nls.localize('closeExceptionWidget', \"Close Exception Widget\"),\n\t\t\talias: 'Close Exception Widget',\n\t\t\tprecondition: CONTEXT_EXCEPTION_WIDGET_VISIBLE,\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(_accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst contribution = editor.getContribution<IDebugEditorContribution>(EDITOR_CONTRIBUTION_ID);\n\t\tcontribution?.closeExceptionWidget();\n\t}\n}\n\nregisterAction2(OpenDisassemblyViewAction);\nregisterAction2(ToggleDisassemblyViewSourceCodeAction);\nregisterAction2(ToggleBreakpointAction);\nregisterEditorAction(ConditionalBreakpointAction);\nregisterEditorAction(LogPointAction);\nregisterEditorAction(EditBreakpointAction);\nregisterEditorAction(RunToCursorAction);\nregisterEditorAction(StepIntoTargetsAction);\nregisterEditorAction(SelectionToReplAction);\nregisterEditorAction(SelectionToWatchExpressionsAction);\nregisterEditorAction(ShowDebugHoverAction);\nregisterEditorAction(GoToNextBreakpointAction);\nregisterEditorAction(GoToPreviousBreakpointAction);\nregisterEditorAction(CloseExceptionWidgetAction);\n"]}