{"version":3,"sources":["vs/workbench/contrib/debug/browser/disassemblyView.ts"],"names":[],"mappings":"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","file":"disassemblyView.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { PixelRatio } from 'vs/base/browser/browser';\nimport { $, Dimension, addStandardDisposableListener, append } from 'vs/base/browser/dom';\nimport { IListAccessibilityProvider } from 'vs/base/browser/ui/list/listWidget';\nimport { ITableRenderer, ITableVirtualDelegate } from 'vs/base/browser/ui/table/table';\nimport { binarySearch2 } from 'vs/base/common/arrays';\nimport { Color } from 'vs/base/common/color';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { isAbsolute } from 'vs/base/common/path';\nimport { Constants } from 'vs/base/common/uint';\nimport { URI } from 'vs/base/common/uri';\nimport { applyFontInfo } from 'vs/editor/browser/config/domFontInfo';\nimport { isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { BareFontInfo } from 'vs/editor/common/config/fontInfo';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { StringBuilder } from 'vs/editor/common/core/stringBuilder';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { TextEditorSelectionRevealType } from 'vs/platform/editor/common/editor';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { WorkbenchTable } from 'vs/platform/list/browser/listService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { editorBackground } from 'vs/platform/theme/common/colorRegistry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { EditorPane } from 'vs/workbench/browser/parts/editor/editorPane';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { focusedStackFrameColor, topStackFrameColor } from 'vs/workbench/contrib/debug/browser/callStackEditorContribution';\nimport * as icons from 'vs/workbench/contrib/debug/browser/debugIcons';\nimport { CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST, DISASSEMBLY_VIEW_ID, IDebugConfiguration, IDebugService, IDebugSession, IInstructionBreakpoint, State } from 'vs/workbench/contrib/debug/common/debug';\nimport { InstructionBreakpoint } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { getUriFromSource } from 'vs/workbench/contrib/debug/common/debugSource';\nimport { isUri, sourcesEqual } from 'vs/workbench/contrib/debug/common/debugUtils';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\n\ninterface IDisassembledInstructionEntry {\n\tallowBreakpoint: boolean;\n\tisBreakpointSet: boolean;\n\tisBreakpointEnabled: boolean;\n\t/** Instruction reference from the DA */\n\tinstructionReference: string;\n\t/** Offset from the instructionReference that's the basis for the `instructionOffset` */\n\tinstructionReferenceOffset: number;\n\t/** The number of instructions (+/-) away from the instructionReference and instructionReferenceOffset this instruction lies */\n\tinstructionOffset: number;\n\t/** Whether this is the first instruction on the target line. */\n\tshowSourceLocation?: boolean;\n\t/** Original instruction from the debugger */\n\tinstruction: DebugProtocol.DisassembledInstruction;\n\t/** Parsed instruction address */\n\taddress: bigint;\n}\n\n\n// Special entry as a placeholer when disassembly is not available\nconst disassemblyNotAvailable: IDisassembledInstructionEntry = {\n\tallowBreakpoint: false,\n\tisBreakpointSet: false,\n\tisBreakpointEnabled: false,\n\tinstructionReference: '',\n\tinstructionOffset: 0,\n\tinstructionReferenceOffset: 0,\n\taddress: 0n,\n\tinstruction: {\n\t\taddress: '-1',\n\t\tinstruction: localize('instructionNotAvailable', \"Disassembly not available.\")\n\t},\n};\n\nexport class DisassemblyView extends EditorPane {\n\n\tprivate static readonly NUM_INSTRUCTIONS_TO_LOAD = 50;\n\n\t// Used in instruction renderer\n\tprivate _fontInfo: BareFontInfo;\n\tprivate _disassembledInstructions: WorkbenchTable<IDisassembledInstructionEntry> | undefined;\n\tprivate _onDidChangeStackFrame: Emitter<void>;\n\tprivate _previousDebuggingState: State;\n\tprivate _instructionBpList: readonly IInstructionBreakpoint[] = [];\n\tprivate _enableSourceCodeRender: boolean = true;\n\tprivate _loadingLock: boolean = false;\n\tprivate readonly _referenceToMemoryAddress = new Map<string, bigint>();\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IDebugService private readonly _debugService: IDebugService,\n\t) {\n\t\tsuper(DISASSEMBLY_VIEW_ID, telemetryService, themeService, storageService);\n\n\t\tthis._disassembledInstructions = undefined;\n\t\tthis._onDidChangeStackFrame = this._register(new Emitter<void>({ leakWarningThreshold: 1000 }));\n\t\tthis._previousDebuggingState = _debugService.state;\n\t\tthis._fontInfo = BareFontInfo.createFromRawSettings(_configurationService.getValue('editor'), PixelRatio.value);\n\t\tthis._register(_configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('editor')) {\n\t\t\t\tthis._fontInfo = BareFontInfo.createFromRawSettings(_configurationService.getValue('editor'), PixelRatio.value);\n\t\t\t}\n\n\t\t\tif (e.affectsConfiguration('debug')) {\n\t\t\t\t// show/hide source code requires changing height which WorkbenchTable doesn't support dynamic height, thus force a total reload.\n\t\t\t\tconst newValue = this._configurationService.getValue<IDebugConfiguration>('debug').disassemblyView.showSourceCode;\n\t\t\t\tif (this._enableSourceCodeRender !== newValue) {\n\t\t\t\t\tthis._enableSourceCodeRender = newValue;\n\t\t\t\t\t// todo: trigger rerender\n\t\t\t\t} else {\n\t\t\t\t\tthis._disassembledInstructions?.rerender();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tget fontInfo() { return this._fontInfo; }\n\n\tget currentInstructionAddresses() {\n\t\treturn this._debugService.getModel().getSessions(false).\n\t\t\tmap(session => session.getAllThreads()).\n\t\t\treduce((prev, curr) => prev.concat(curr), []).\n\t\t\tmap(thread => thread.getTopStackFrame()).\n\t\t\tmap(frame => frame?.instructionPointerReference).\n\t\t\tmap(ref => ref ? this.getReferenceAddress(ref) : undefined);\n\t}\n\n\t// Instruction reference of the top stack frame of the focused stack\n\tget focusedCurrentInstructionReference() {\n\t\treturn this._debugService.getViewModel().focusedStackFrame?.thread.getTopStackFrame()?.instructionPointerReference;\n\t}\n\n\tget focusedCurrentInstructionAddress() {\n\t\tconst ref = this.focusedCurrentInstructionReference;\n\t\treturn ref ? this.getReferenceAddress(ref) : undefined;\n\t}\n\n\tget focusedInstructionReference() {\n\t\treturn this._debugService.getViewModel().focusedStackFrame?.instructionPointerReference;\n\t}\n\n\tget focusedInstructionAddress() {\n\t\tconst ref = this.focusedInstructionReference;\n\t\treturn ref ? this.getReferenceAddress(ref) : undefined;\n\t}\n\n\tget isSourceCodeRender() { return this._enableSourceCodeRender; }\n\n\tget debugSession(): IDebugSession | undefined {\n\t\treturn this._debugService.getViewModel().focusedSession;\n\t}\n\n\tget onDidChangeStackFrame() { return this._onDidChangeStackFrame.event; }\n\n\tget focusedAddressAndOffset() {\n\t\tconst element = this._disassembledInstructions?.getFocusedElements()[0];\n\t\tif (!element) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst reference = element.instructionReference;\n\t\tconst offset = Number(element.address - this.getReferenceAddress(reference)!);\n\t\treturn { reference, offset, address: element.address };\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tthis._enableSourceCodeRender = this._configurationService.getValue<IDebugConfiguration>('debug').disassemblyView.showSourceCode;\n\t\tconst lineHeight = this.fontInfo.lineHeight;\n\t\tconst thisOM = this;\n\t\tconst delegate = new class implements ITableVirtualDelegate<IDisassembledInstructionEntry>{\n\t\t\theaderRowHeight: number = 0; // No header\n\t\t\tgetHeight(row: IDisassembledInstructionEntry): number {\n\t\t\t\tif (thisOM.isSourceCodeRender && row.showSourceLocation && row.instruction.location?.path && row.instruction.line) {\n\t\t\t\t\t// instruction line + source lines\n\t\t\t\t\tif (row.instruction.endLine) {\n\t\t\t\t\t\treturn lineHeight * (row.instruction.endLine - row.instruction.line + 2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// source is only a single line.\n\t\t\t\t\t\treturn lineHeight * 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// just instruction line\n\t\t\t\treturn lineHeight;\n\t\t\t}\n\t\t};\n\n\t\tconst instructionRenderer = this._register(this._instantiationService.createInstance(InstructionRenderer, this));\n\n\t\tthis._disassembledInstructions = this._register(this._instantiationService.createInstance(WorkbenchTable,\n\t\t\t'DisassemblyView', parent, delegate,\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tlabel: '',\n\t\t\t\t\ttooltip: '',\n\t\t\t\t\tweight: 0,\n\t\t\t\t\tminimumWidth: this.fontInfo.lineHeight,\n\t\t\t\t\tmaximumWidth: this.fontInfo.lineHeight,\n\t\t\t\t\ttemplateId: BreakpointRenderer.TEMPLATE_ID,\n\t\t\t\t\tproject(row: IDisassembledInstructionEntry): IDisassembledInstructionEntry { return row; }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize('disassemblyTableColumnLabel', \"instructions\"),\n\t\t\t\t\ttooltip: '',\n\t\t\t\t\tweight: 0.3,\n\t\t\t\t\ttemplateId: InstructionRenderer.TEMPLATE_ID,\n\t\t\t\t\tproject(row: IDisassembledInstructionEntry): IDisassembledInstructionEntry { return row; }\n\t\t\t\t},\n\t\t\t],\n\t\t\t[\n\t\t\t\tthis._instantiationService.createInstance(BreakpointRenderer, this),\n\t\t\t\tinstructionRenderer,\n\t\t\t],\n\t\t\t{\n\t\t\t\tidentityProvider: { getId: (e: IDisassembledInstructionEntry) => e.instruction.address },\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\toverrideStyles: {\n\t\t\t\t\tlistBackground: editorBackground\n\t\t\t\t},\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\tsetRowLineHeight: false,\n\t\t\t\topenOnSingleClick: false,\n\t\t\t\taccessibilityProvider: new AccessibilityProvider(),\n\t\t\t\tmouseSupport: false\n\t\t\t}\n\t\t)) as WorkbenchTable<IDisassembledInstructionEntry>;\n\n\t\tif (this.focusedInstructionReference) {\n\t\t\tthis.reloadDisassembly(this.focusedInstructionReference, 0);\n\t\t}\n\n\t\tthis._register(this._disassembledInstructions.onDidScroll(e => {\n\t\t\tif (this._loadingLock) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.oldScrollTop > e.scrollTop && e.scrollTop < e.height) {\n\t\t\t\tthis._loadingLock = true;\n\t\t\t\tconst prevTop = Math.floor(e.scrollTop / this.fontInfo.lineHeight);\n\t\t\t\tthis.scrollUp_LoadDisassembledInstructions(DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD).then((loaded) => {\n\t\t\t\t\tif (loaded > 0) {\n\t\t\t\t\t\tthis._disassembledInstructions!.reveal(prevTop + loaded, 0);\n\t\t\t\t\t}\n\t\t\t\t\tthis._loadingLock = false;\n\t\t\t\t});\n\t\t\t} else if (e.oldScrollTop < e.scrollTop && e.scrollTop + e.height > e.scrollHeight - e.height) {\n\t\t\t\tthis._loadingLock = true;\n\t\t\t\tthis.scrollDown_LoadDisassembledInstructions(DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD).then(() => { this._loadingLock = false; });\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._debugService.getViewModel().onDidFocusStackFrame(({ stackFrame }) => {\n\t\t\tif (this._disassembledInstructions && stackFrame?.instructionPointerReference) {\n\t\t\t\tthis.goToInstructionAndOffset(stackFrame.instructionPointerReference, 0);\n\t\t\t}\n\t\t\tthis._onDidChangeStackFrame.fire();\n\t\t}));\n\n\t\t// refresh breakpoints view\n\t\tthis._register(this._debugService.getModel().onDidChangeBreakpoints(bpEvent => {\n\t\t\tif (bpEvent && this._disassembledInstructions) {\n\t\t\t\t// draw viewable BP\n\t\t\t\tlet changed = false;\n\t\t\t\tbpEvent.added?.forEach((bp) => {\n\t\t\t\t\tif (bp instanceof InstructionBreakpoint) {\n\t\t\t\t\t\tconst index = this.getIndexFromReferenceAndOffset(bp.instructionReference, bp.offset);\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\tthis._disassembledInstructions!.row(index).isBreakpointSet = true;\n\t\t\t\t\t\t\tthis._disassembledInstructions!.row(index).isBreakpointEnabled = bp.enabled;\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tbpEvent.removed?.forEach((bp) => {\n\t\t\t\t\tif (bp instanceof InstructionBreakpoint) {\n\t\t\t\t\t\tconst index = this.getIndexFromReferenceAndOffset(bp.instructionReference, bp.offset);\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\tthis._disassembledInstructions!.row(index).isBreakpointSet = false;\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tbpEvent.changed?.forEach((bp) => {\n\t\t\t\t\tif (bp instanceof InstructionBreakpoint) {\n\t\t\t\t\t\tconst index = this.getIndexFromReferenceAndOffset(bp.instructionReference, bp.offset);\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\tif (this._disassembledInstructions!.row(index).isBreakpointEnabled !== bp.enabled) {\n\t\t\t\t\t\t\t\tthis._disassembledInstructions!.row(index).isBreakpointEnabled = bp.enabled;\n\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// get an updated list so that items beyond the current range would render when reached.\n\t\t\t\tthis._instructionBpList = this._debugService.getModel().getInstructionBreakpoints();\n\n\t\t\t\t// breakpoints restored from a previous session can be based on memory\n\t\t\t\t// references that may no longer exist in the current session. Request\n\t\t\t\t// those instructions to be loaded so the BP can be displayed.\n\t\t\t\tfor (const bp of this._instructionBpList) {\n\t\t\t\t\tthis.primeMemoryReference(bp.instructionReference);\n\t\t\t\t}\n\n\t\t\t\tif (changed) {\n\t\t\t\t\tthis._onDidChangeStackFrame.fire();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._debugService.onDidChangeState(e => {\n\t\t\tif ((e === State.Running || e === State.Stopped) &&\n\t\t\t\t(this._previousDebuggingState !== State.Running && this._previousDebuggingState !== State.Stopped)) {\n\t\t\t\t// Just started debugging, clear the view\n\t\t\t\tthis.clear();\n\t\t\t\tthis._enableSourceCodeRender = this._configurationService.getValue<IDebugConfiguration>('debug').disassemblyView.showSourceCode;\n\t\t\t}\n\n\t\t\tthis._previousDebuggingState = e;\n\t\t\tthis._onDidChangeStackFrame.fire();\n\t\t}));\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis._disassembledInstructions?.layout(dimension.height);\n\t}\n\n\tasync goToInstructionAndOffset(instructionReference: string, offset: number, focus?: boolean) {\n\t\tlet addr = this._referenceToMemoryAddress.get(instructionReference);\n\t\tif (addr === undefined) {\n\t\t\tawait this.loadDisassembledInstructions(instructionReference, 0, -DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD, DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD);\n\t\t\taddr = this._referenceToMemoryAddress.get(instructionReference);\n\t\t}\n\n\t\tif (addr) {\n\t\t\tthis.goToAddress(addr + BigInt(offset), focus);\n\t\t}\n\t}\n\n\t/** Gets the address associated with the instruction reference. */\n\tgetReferenceAddress(instructionReference: string) {\n\t\treturn this._referenceToMemoryAddress.get(instructionReference);\n\t}\n\n\t/**\n\t * Go to the address provided. If no address is provided, reveal the address of the currently focused stack frame. Returns false if that address is not available.\n\t */\n\tprivate goToAddress(address: bigint, focus?: boolean): boolean {\n\t\tif (!this._disassembledInstructions) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!address) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst index = this.getIndexFromAddress(address);\n\t\tif (index >= 0) {\n\t\t\tthis._disassembledInstructions.reveal(index);\n\n\t\t\tif (focus) {\n\t\t\t\tthis._disassembledInstructions.domFocus();\n\t\t\t\tthis._disassembledInstructions.setFocus([index]);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate async scrollUp_LoadDisassembledInstructions(instructionCount: number): Promise<number> {\n\t\tconst first = this._disassembledInstructions?.row(0);\n\t\tif (first) {\n\t\t\treturn this.loadDisassembledInstructions(\n\t\t\t\tfirst.instructionReference,\n\t\t\t\tfirst.instructionReferenceOffset,\n\t\t\t\tfirst.instructionOffset - instructionCount,\n\t\t\t\tinstructionCount,\n\t\t\t);\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tprivate async scrollDown_LoadDisassembledInstructions(instructionCount: number): Promise<number> {\n\t\tconst last = this._disassembledInstructions?.row(this._disassembledInstructions?.length - 1);\n\t\tif (last) {\n\t\t\treturn this.loadDisassembledInstructions(\n\t\t\t\tlast.instructionReference,\n\t\t\t\tlast.instructionReferenceOffset,\n\t\t\t\tlast.instructionOffset + 1,\n\t\t\t\tinstructionCount,\n\t\t\t);\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Sets the memory reference address. We don't just loadDisassembledInstructions\n\t * for this, since we can't really deal with discontiguous ranges (we can't\n\t * detect _if_ a range is discontiguous since we don't know how much memory\n\t * comes between instructions.)\n\t */\n\tprivate async primeMemoryReference(instructionReference: string) {\n\t\tif (this._referenceToMemoryAddress.has(instructionReference)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst s = await this.debugSession?.disassemble(instructionReference, 0, 0, 1);\n\t\tif (s && s.length > 0) {\n\t\t\ttry {\n\t\t\t\tthis._referenceToMemoryAddress.set(instructionReference, BigInt(s[0].address));\n\t\t\t\treturn true;\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/** Loads disasembled instructions. Returns the number of instructions that were loaded. */\n\tprivate async loadDisassembledInstructions(instructionReference: string, offset: number, instructionOffset: number, instructionCount: number): Promise<number> {\n\t\tconst session = this.debugSession;\n\t\tconst resultEntries = await session?.disassemble(instructionReference, offset, instructionOffset, instructionCount);\n\n\t\t// Ensure we always load the baseline instructions so we know what address the instructionReference refers to.\n\t\tif (!this._referenceToMemoryAddress.has(instructionReference) && instructionOffset !== 0) {\n\t\t\tawait this.loadDisassembledInstructions(instructionReference, 0, 0, DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD);\n\t\t}\n\n\t\tif (session && resultEntries && this._disassembledInstructions) {\n\t\t\tconst newEntries: IDisassembledInstructionEntry[] = [];\n\n\t\t\tlet lastLocation: DebugProtocol.Source | undefined;\n\t\t\tlet lastLine: IRange | undefined;\n\t\t\tfor (let i = 0; i < resultEntries.length; i++) {\n\t\t\t\tconst instruction = resultEntries[i];\n\t\t\t\tconst thisInstructionOffset = instructionOffset + i;\n\n\t\t\t\t// Forward fill the missing location as detailed in the DAP spec.\n\t\t\t\tif (instruction.location) {\n\t\t\t\t\tlastLocation = instruction.location;\n\t\t\t\t\tlastLine = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (instruction.line) {\n\t\t\t\t\tconst currentLine: IRange = {\n\t\t\t\t\t\tstartLineNumber: instruction.line,\n\t\t\t\t\t\tstartColumn: instruction.column ?? 0,\n\t\t\t\t\t\tendLineNumber: instruction.endLine ?? instruction.line!,\n\t\t\t\t\t\tendColumn: instruction.endColumn ?? 0,\n\t\t\t\t\t};\n\n\t\t\t\t\t// Add location only to the first unique range. This will give the appearance of grouping of instructions.\n\t\t\t\t\tif (!Range.equalsRange(currentLine, lastLine ?? null)) {\n\t\t\t\t\t\tlastLine = currentLine;\n\t\t\t\t\t\tinstruction.location = lastLocation;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet address: bigint;\n\t\t\t\ttry {\n\t\t\t\t\taddress = BigInt(instruction.address);\n\t\t\t\t} catch {\n\t\t\t\t\tconsole.error(`Could not parse disassembly address ${instruction.address} (in ${JSON.stringify(instruction)})`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst entry: IDisassembledInstructionEntry = {\n\t\t\t\t\tallowBreakpoint: true,\n\t\t\t\t\tisBreakpointSet: false,\n\t\t\t\t\tisBreakpointEnabled: false,\n\t\t\t\t\tinstructionReference,\n\t\t\t\t\tinstructionReferenceOffset: offset,\n\t\t\t\t\tinstructionOffset: thisInstructionOffset,\n\t\t\t\t\tinstruction,\n\t\t\t\t\taddress,\n\t\t\t\t};\n\n\t\t\t\tnewEntries.push(entry);\n\n\t\t\t\t// if we just loaded the first instruction for this reference, mark its address.\n\t\t\t\tif (offset === 0 && thisInstructionOffset === 0) {\n\t\t\t\t\tthis._referenceToMemoryAddress.set(instructionReference, address);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newEntries.length === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst refBaseAddress = this._referenceToMemoryAddress.get(instructionReference);\n\t\t\tconst bps = this._instructionBpList.map(p => {\n\t\t\t\tconst base = this._referenceToMemoryAddress.get(p.instructionReference);\n\t\t\t\tif (!base) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tenabled: p.enabled,\n\t\t\t\t\taddress: base + BigInt(p.offset || 0),\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tif (refBaseAddress !== undefined) {\n\t\t\t\tfor (const entry of newEntries) {\n\t\t\t\t\tconst bp = bps.find(p => p?.address === entry.address);\n\t\t\t\t\tif (bp) {\n\t\t\t\t\t\tentry.isBreakpointSet = true;\n\t\t\t\t\t\tentry.isBreakpointEnabled = bp.enabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst da = this._disassembledInstructions;\n\t\t\tif (da.length === 1 && this._disassembledInstructions.row(0) === disassemblyNotAvailable) {\n\t\t\t\tda.splice(0, 1);\n\t\t\t}\n\n\t\t\tconst firstAddr = newEntries[0].address;\n\t\t\tconst lastAddr = newEntries[newEntries.length - 1].address;\n\n\t\t\tconst startN = binarySearch2(da.length, i => Number(da.row(i).address - firstAddr));\n\t\t\tconst start = startN < 0 ? ~startN : startN;\n\t\t\tconst endN = binarySearch2(da.length, i => Number(da.row(i).address - lastAddr));\n\t\t\tconst end = endN < 0 ? ~endN : endN;\n\t\t\tconst toDelete = end - start;\n\n\t\t\t// Go through everything we're about to add, and only show the source\n\t\t\t// location if it's different from the previous one, \"grouping\" instructions by line\n\t\t\tlet lastLocated: undefined | DebugProtocol.DisassembledInstruction;\n\t\t\tfor (let i = start - 1; i >= 0; i--) {\n\t\t\t\tconst { instruction } = da.row(i);\n\t\t\t\tif (instruction.location && instruction.line !== undefined) {\n\t\t\t\t\tlastLocated = instruction;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst shouldShowLocation = (instruction: DebugProtocol.DisassembledInstruction) =>\n\t\t\t\tinstruction.line !== undefined && instruction.location !== undefined &&\n\t\t\t\t(!lastLocated || !sourcesEqual(instruction.location, lastLocated.location) || instruction.line !== lastLocated.line);\n\n\t\t\tfor (const entry of newEntries) {\n\t\t\t\tif (shouldShowLocation(entry.instruction)) {\n\t\t\t\t\tentry.showSourceLocation = true;\n\t\t\t\t\tlastLocated = entry.instruction;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tda.splice(start, toDelete, newEntries);\n\n\t\t\treturn newEntries.length - toDelete;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tprivate getIndexFromReferenceAndOffset(instructionReference: string, offset: number): number {\n\t\tconst addr = this._referenceToMemoryAddress.get(instructionReference);\n\t\tif (addr === undefined) {\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn this.getIndexFromAddress(addr + BigInt(offset));\n\t}\n\n\tprivate getIndexFromAddress(address: bigint): number {\n\t\tconst disassembledInstructions = this._disassembledInstructions;\n\t\tif (disassembledInstructions && disassembledInstructions.length > 0) {\n\t\t\treturn binarySearch2(disassembledInstructions.length, index => {\n\t\t\t\tconst row = disassembledInstructions.row(index);\n\t\t\t\treturn Number(row.address - address);\n\t\t\t});\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Clears the table and reload instructions near the target address\n\t */\n\tprivate reloadDisassembly(instructionReference: string, offset: number) {\n\t\tif (!this._disassembledInstructions) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loadingLock = true; // stop scrolling during the load.\n\t\tthis.clear();\n\t\tthis._instructionBpList = this._debugService.getModel().getInstructionBreakpoints();\n\t\tthis.loadDisassembledInstructions(instructionReference, offset, -DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD * 4, DisassemblyView.NUM_INSTRUCTIONS_TO_LOAD * 8).then(() => {\n\t\t\t// on load, set the target instruction in the middle of the page.\n\t\t\tif (this._disassembledInstructions!.length > 0) {\n\t\t\t\tconst targetIndex = Math.floor(this._disassembledInstructions!.length / 2);\n\t\t\t\tthis._disassembledInstructions!.reveal(targetIndex, 0.5);\n\n\t\t\t\t// Always focus the target address on reload, or arrow key navigation would look terrible\n\t\t\t\tthis._disassembledInstructions!.domFocus();\n\t\t\t\tthis._disassembledInstructions!.setFocus([targetIndex]);\n\t\t\t}\n\t\t\tthis._loadingLock = false;\n\t\t});\n\t}\n\n\tprivate clear() {\n\t\tthis._referenceToMemoryAddress.clear();\n\t\tthis._disassembledInstructions?.splice(0, this._disassembledInstructions.length, [disassemblyNotAvailable]);\n\t}\n}\n\ninterface IBreakpointColumnTemplateData {\n\tcurrentElement: { element?: IDisassembledInstructionEntry };\n\ticon: HTMLElement;\n\tdisposables: IDisposable[];\n}\n\nclass BreakpointRenderer implements ITableRenderer<IDisassembledInstructionEntry, IBreakpointColumnTemplateData> {\n\n\tstatic readonly TEMPLATE_ID = 'breakpoint';\n\n\ttemplateId: string = BreakpointRenderer.TEMPLATE_ID;\n\n\tprivate readonly _breakpointIcon = 'codicon-' + icons.breakpoint.regular.id;\n\tprivate readonly _breakpointDisabledIcon = 'codicon-' + icons.breakpoint.disabled.id;\n\tprivate readonly _breakpointHintIcon = 'codicon-' + icons.debugBreakpointHint.id;\n\tprivate readonly _debugStackframe = 'codicon-' + icons.debugStackframe.id;\n\tprivate readonly _debugStackframeFocused = 'codicon-' + icons.debugStackframeFocused.id;\n\n\tconstructor(\n\t\tprivate readonly _disassemblyView: DisassemblyView,\n\t\t@IDebugService private readonly _debugService: IDebugService\n\t) {\n\t}\n\n\trenderTemplate(container: HTMLElement): IBreakpointColumnTemplateData {\n\t\t// align from the bottom so that it lines up with instruction when source code is present.\n\t\tcontainer.style.alignSelf = 'flex-end';\n\n\t\tconst icon = append(container, $('.disassembly-view'));\n\t\ticon.classList.add('codicon');\n\t\ticon.style.display = 'flex';\n\t\ticon.style.alignItems = 'center';\n\t\ticon.style.justifyContent = 'center';\n\t\ticon.style.height = this._disassemblyView.fontInfo.lineHeight + 'px';\n\n\t\tconst currentElement: { element?: IDisassembledInstructionEntry } = { element: undefined };\n\n\t\tconst disposables = [\n\t\t\tthis._disassemblyView.onDidChangeStackFrame(() => this.rerenderDebugStackframe(icon, currentElement.element)),\n\t\t\taddStandardDisposableListener(container, 'mouseover', () => {\n\t\t\t\tif (currentElement.element?.allowBreakpoint) {\n\t\t\t\t\ticon.classList.add(this._breakpointHintIcon);\n\t\t\t\t}\n\t\t\t}),\n\t\t\taddStandardDisposableListener(container, 'mouseout', () => {\n\t\t\t\tif (currentElement.element?.allowBreakpoint) {\n\t\t\t\t\ticon.classList.remove(this._breakpointHintIcon);\n\t\t\t\t}\n\t\t\t}),\n\t\t\taddStandardDisposableListener(container, 'click', () => {\n\t\t\t\tif (currentElement.element?.allowBreakpoint) {\n\t\t\t\t\t// click show hint while waiting for BP to resolve.\n\t\t\t\t\ticon.classList.add(this._breakpointHintIcon);\n\t\t\t\t\tconst reference = currentElement.element.instructionReference;\n\t\t\t\t\tconst offset = Number(currentElement.element.address - this._disassemblyView.getReferenceAddress(reference)!);\n\t\t\t\t\tif (currentElement.element.isBreakpointSet) {\n\t\t\t\t\t\tthis._debugService.removeInstructionBreakpoints(reference, offset);\n\t\t\t\t\t} else if (currentElement.element.allowBreakpoint && !currentElement.element.isBreakpointSet) {\n\t\t\t\t\t\tthis._debugService.addInstructionBreakpoint(reference, offset, currentElement.element.address);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t];\n\n\t\treturn { currentElement, icon, disposables };\n\t}\n\n\trenderElement(element: IDisassembledInstructionEntry, index: number, templateData: IBreakpointColumnTemplateData, height: number | undefined): void {\n\t\ttemplateData.currentElement.element = element;\n\t\tthis.rerenderDebugStackframe(templateData.icon, element);\n\t}\n\n\tdisposeTemplate(templateData: IBreakpointColumnTemplateData): void {\n\t\tdispose(templateData.disposables);\n\t\ttemplateData.disposables = [];\n\t}\n\n\tprivate rerenderDebugStackframe(icon: HTMLElement, element?: IDisassembledInstructionEntry) {\n\t\tif (element?.address === this._disassemblyView.focusedCurrentInstructionAddress) {\n\t\t\ticon.classList.add(this._debugStackframe);\n\t\t} else if (element?.address === this._disassemblyView.focusedInstructionAddress) {\n\t\t\ticon.classList.add(this._debugStackframeFocused);\n\t\t} else {\n\t\t\ticon.classList.remove(this._debugStackframe);\n\t\t\ticon.classList.remove(this._debugStackframeFocused);\n\t\t}\n\n\t\ticon.classList.remove(this._breakpointHintIcon);\n\n\t\tif (element?.isBreakpointSet) {\n\t\t\tif (element.isBreakpointEnabled) {\n\t\t\t\ticon.classList.add(this._breakpointIcon);\n\t\t\t\ticon.classList.remove(this._breakpointDisabledIcon);\n\t\t\t} else {\n\t\t\t\ticon.classList.remove(this._breakpointIcon);\n\t\t\t\ticon.classList.add(this._breakpointDisabledIcon);\n\t\t\t}\n\t\t} else {\n\t\t\ticon.classList.remove(this._breakpointIcon);\n\t\t\ticon.classList.remove(this._breakpointDisabledIcon);\n\t\t}\n\t}\n}\n\ninterface IInstructionColumnTemplateData {\n\tcurrentElement: { element?: IDisassembledInstructionEntry };\n\t// TODO: hover widget?\n\tinstruction: HTMLElement;\n\tsourcecode: HTMLElement;\n\t// disposed when cell is closed.\n\tcellDisposable: IDisposable[];\n\t// disposed when template is closed.\n\tdisposables: IDisposable[];\n}\n\nclass InstructionRenderer extends Disposable implements ITableRenderer<IDisassembledInstructionEntry, IInstructionColumnTemplateData> {\n\n\tstatic readonly TEMPLATE_ID = 'instruction';\n\n\tprivate static readonly INSTRUCTION_ADDR_MIN_LENGTH = 25;\n\tprivate static readonly INSTRUCTION_BYTES_MIN_LENGTH = 30;\n\n\ttemplateId: string = InstructionRenderer.TEMPLATE_ID;\n\n\tprivate _topStackFrameColor: Color | undefined;\n\tprivate _focusedStackFrameColor: Color | undefined;\n\n\tconstructor(\n\t\tprivate readonly _disassemblyView: DisassemblyView,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IUriIdentityService private readonly uriService: IUriIdentityService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\n\t\tthis._topStackFrameColor = themeService.getColorTheme().getColor(topStackFrameColor);\n\t\tthis._focusedStackFrameColor = themeService.getColorTheme().getColor(focusedStackFrameColor);\n\n\t\tthis._register(themeService.onDidColorThemeChange(e => {\n\t\t\tthis._topStackFrameColor = e.getColor(topStackFrameColor);\n\t\t\tthis._focusedStackFrameColor = e.getColor(focusedStackFrameColor);\n\t\t}));\n\t}\n\n\trenderTemplate(container: HTMLElement): IInstructionColumnTemplateData {\n\t\tconst sourcecode = append(container, $('.sourcecode'));\n\t\tconst instruction = append(container, $('.instruction'));\n\t\tthis.applyFontInfo(sourcecode);\n\t\tthis.applyFontInfo(instruction);\n\t\tconst currentElement: { element?: IDisassembledInstructionEntry } = { element: undefined };\n\t\tconst cellDisposable: IDisposable[] = [];\n\n\t\tconst disposables = [\n\t\t\tthis._disassemblyView.onDidChangeStackFrame(() => this.rerenderBackground(instruction, sourcecode, currentElement.element)),\n\t\t\taddStandardDisposableListener(sourcecode, 'dblclick', () => this.openSourceCode(currentElement.element?.instruction!)),\n\t\t];\n\n\t\treturn { currentElement, instruction, sourcecode, cellDisposable, disposables };\n\t}\n\n\trenderElement(element: IDisassembledInstructionEntry, index: number, templateData: IInstructionColumnTemplateData, height: number | undefined): void {\n\t\tthis.renderElementInner(element, index, templateData, height);\n\t}\n\n\tprivate async renderElementInner(element: IDisassembledInstructionEntry, index: number, templateData: IInstructionColumnTemplateData, height: number | undefined): Promise<void> {\n\t\ttemplateData.currentElement.element = element;\n\t\tconst instruction = element.instruction;\n\t\ttemplateData.sourcecode.innerText = '';\n\t\tconst sb = new StringBuilder(1000);\n\n\t\tif (this._disassemblyView.isSourceCodeRender && element.showSourceLocation && instruction.location?.path && instruction.line !== undefined) {\n\t\t\tconst sourceURI = this.getUriFromSource(instruction);\n\n\t\t\tif (sourceURI) {\n\t\t\t\tlet textModel: ITextModel | undefined = undefined;\n\t\t\t\tconst sourceSB = new StringBuilder(10000);\n\t\t\t\tconst ref = await this.textModelService.createModelReference(sourceURI);\n\t\t\t\ttextModel = ref.object.textEditorModel;\n\t\t\t\ttemplateData.cellDisposable.push(ref);\n\n\t\t\t\t// templateData could have moved on during async.  Double check if it is still the same source.\n\t\t\t\tif (textModel && templateData.currentElement.element === element) {\n\t\t\t\t\tlet lineNumber = instruction.line;\n\n\t\t\t\t\twhile (lineNumber && lineNumber >= 1 && lineNumber <= textModel.getLineCount()) {\n\t\t\t\t\t\tconst lineContent = textModel.getLineContent(lineNumber);\n\t\t\t\t\t\tsourceSB.appendString(`  ${lineNumber}: `);\n\t\t\t\t\t\tsourceSB.appendString(lineContent + '\\n');\n\n\t\t\t\t\t\tif (instruction.endLine && lineNumber < instruction.endLine) {\n\t\t\t\t\t\t\tlineNumber++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\ttemplateData.sourcecode.innerText = sourceSB.build();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet spacesToAppend = 10;\n\n\t\tif (instruction.address !== '-1') {\n\t\t\tsb.appendString(instruction.address);\n\t\t\tif (instruction.address.length < InstructionRenderer.INSTRUCTION_ADDR_MIN_LENGTH) {\n\t\t\t\tspacesToAppend = InstructionRenderer.INSTRUCTION_ADDR_MIN_LENGTH - instruction.address.length;\n\t\t\t}\n\t\t\tfor (let i = 0; i < spacesToAppend; i++) {\n\t\t\t\tsb.appendString(' ');\n\t\t\t}\n\t\t}\n\n\t\tif (instruction.instructionBytes) {\n\t\t\tsb.appendString(instruction.instructionBytes);\n\t\t\tspacesToAppend = 10;\n\t\t\tif (instruction.instructionBytes.length < InstructionRenderer.INSTRUCTION_BYTES_MIN_LENGTH) {\n\t\t\t\tspacesToAppend = InstructionRenderer.INSTRUCTION_BYTES_MIN_LENGTH - instruction.instructionBytes.length;\n\t\t\t}\n\t\t\tfor (let i = 0; i < spacesToAppend; i++) {\n\t\t\t\tsb.appendString(' ');\n\t\t\t}\n\t\t}\n\n\t\tsb.appendString(instruction.instruction);\n\t\ttemplateData.instruction.innerText = sb.build();\n\n\t\tthis.rerenderBackground(templateData.instruction, templateData.sourcecode, element);\n\t}\n\n\tdisposeElement(element: IDisassembledInstructionEntry, index: number, templateData: IInstructionColumnTemplateData, height: number | undefined): void {\n\t\tdispose(templateData.cellDisposable);\n\t\ttemplateData.cellDisposable = [];\n\t}\n\n\tdisposeTemplate(templateData: IInstructionColumnTemplateData): void {\n\t\tdispose(templateData.disposables);\n\t\ttemplateData.disposables = [];\n\t}\n\n\tprivate rerenderBackground(instruction: HTMLElement, sourceCode: HTMLElement, element?: IDisassembledInstructionEntry) {\n\t\tif (element && this._disassemblyView.currentInstructionAddresses.includes(element.address)) {\n\t\t\tinstruction.style.background = this._topStackFrameColor?.toString() || 'transparent';\n\t\t} else if (element?.address === this._disassemblyView.focusedInstructionAddress) {\n\t\t\tinstruction.style.background = this._focusedStackFrameColor?.toString() || 'transparent';\n\t\t} else {\n\t\t\tinstruction.style.background = 'transparent';\n\t\t}\n\t}\n\n\tprivate openSourceCode(instruction: DebugProtocol.DisassembledInstruction | undefined) {\n\t\tif (instruction) {\n\t\t\tconst sourceURI = this.getUriFromSource(instruction);\n\t\t\tconst selection = instruction.endLine ? {\n\t\t\t\tstartLineNumber: instruction.line!,\n\t\t\t\tendLineNumber: instruction.endLine!,\n\t\t\t\tstartColumn: instruction.column || 1,\n\t\t\t\tendColumn: instruction.endColumn || Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t} : {\n\t\t\t\tstartLineNumber: instruction.line!,\n\t\t\t\tendLineNumber: instruction.line!,\n\t\t\t\tstartColumn: instruction.column || 1,\n\t\t\t\tendColumn: instruction.endColumn || Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t};\n\n\t\t\tthis.editorService.openEditor({\n\t\t\t\tresource: sourceURI,\n\t\t\t\tdescription: localize('editorOpenedFromDisassemblyDescription', \"from disassembly\"),\n\t\t\t\toptions: {\n\t\t\t\t\tpreserveFocus: false,\n\t\t\t\t\tselection: selection,\n\t\t\t\t\trevealIfOpened: true,\n\t\t\t\t\tselectionRevealType: TextEditorSelectionRevealType.CenterIfOutsideViewport,\n\t\t\t\t\tpinned: false,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getUriFromSource(instruction: DebugProtocol.DisassembledInstruction): URI {\n\t\t// Try to resolve path before consulting the debugSession.\n\t\tconst path = instruction.location!.path;\n\t\tif (path && isUri(path)) {\t// path looks like a uri\n\t\t\treturn this.uriService.asCanonicalUri(URI.parse(path));\n\t\t}\n\t\t// assume a filesystem path\n\t\tif (path && isAbsolute(path)) {\n\t\t\treturn this.uriService.asCanonicalUri(URI.file(path));\n\t\t}\n\n\t\treturn getUriFromSource(instruction.location!, instruction.location!.path, this._disassemblyView.debugSession!.getId(), this.uriService, this.logService);\n\t}\n\n\tprivate applyFontInfo(element: HTMLElement) {\n\t\tapplyFontInfo(element, this._disassemblyView.fontInfo);\n\t\telement.style.whiteSpace = 'pre';\n\t}\n}\n\nclass AccessibilityProvider implements IListAccessibilityProvider<IDisassembledInstructionEntry> {\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('disassemblyView', \"Disassembly View\");\n\t}\n\n\tgetAriaLabel(element: IDisassembledInstructionEntry): string | null {\n\t\tlet label = '';\n\n\t\tconst instruction = element.instruction;\n\t\tif (instruction.address !== '-1') {\n\t\t\tlabel += `${localize('instructionAddress', \"Address\")}: ${instruction.address}`;\n\t\t}\n\t\tif (instruction.instructionBytes) {\n\t\t\tlabel += `, ${localize('instructionBytes', \"Bytes\")}: ${instruction.instructionBytes}`;\n\t\t}\n\t\tlabel += `, ${localize(`instructionText`, \"Instruction\")}: ${instruction.instruction}`;\n\n\t\treturn label;\n\t}\n}\n\nexport class DisassemblyViewContribution implements IWorkbenchContribution {\n\n\tprivate readonly _onDidActiveEditorChangeListener: IDisposable;\n\tprivate _onDidChangeModelLanguage: IDisposable | undefined;\n\tprivate _languageSupportsDisassembleRequest: IContextKey<boolean> | undefined;\n\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IDebugService debugService: IDebugService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tcontextKeyService.bufferChangeEvents(() => {\n\t\t\tthis._languageSupportsDisassembleRequest = CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST.bindTo(contextKeyService);\n\t\t});\n\n\t\tconst onDidActiveEditorChangeListener = () => {\n\t\t\tif (this._onDidChangeModelLanguage) {\n\t\t\t\tthis._onDidChangeModelLanguage.dispose();\n\t\t\t\tthis._onDidChangeModelLanguage = undefined;\n\t\t\t}\n\n\t\t\tconst activeTextEditorControl = editorService.activeTextEditorControl;\n\t\t\tif (isCodeEditor(activeTextEditorControl)) {\n\t\t\t\tconst language = activeTextEditorControl.getModel()?.getLanguageId();\n\t\t\t\t// TODO: instead of using idDebuggerInterestedInLanguage, have a specific ext point for languages\n\t\t\t\t// support disassembly\n\t\t\t\tthis._languageSupportsDisassembleRequest?.set(!!language && debugService.getAdapterManager().someDebuggerInterestedInLanguage(language));\n\n\t\t\t\tthis._onDidChangeModelLanguage = activeTextEditorControl.onDidChangeModelLanguage(e => {\n\t\t\t\t\tthis._languageSupportsDisassembleRequest?.set(debugService.getAdapterManager().someDebuggerInterestedInLanguage(e.newLanguage));\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._languageSupportsDisassembleRequest?.set(false);\n\t\t\t}\n\t\t};\n\n\t\tonDidActiveEditorChangeListener();\n\t\tthis._onDidActiveEditorChangeListener = editorService.onDidActiveEditorChange(onDidActiveEditorChangeListener);\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidActiveEditorChangeListener.dispose();\n\t\tthis._onDidChangeModelLanguage?.dispose();\n\t}\n}\n"]}