{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/debug/test/node/terminals.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAMhG,KAAK,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACpC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE;YACjB,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,MAAM,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EAC/C,iBAAiB,CAAC,CAAC;YACpB,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EACvE,yBAAyB,CAAC,CAAC;YAC5B,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,MAAM,EAAE,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EACrD,kBAAkB,CAAC,CAAC;YAErB,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,MAAM,EAAE,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EAC9C,OAAO,CAAC,CAAC;YACV,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EACtE,yBAAyB,CAAC,CAAC;YAC5B,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,MAAM,EAAE,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EACpD,WAAW,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE;YACzC,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,MAAM,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,aAAa,EAAE,GAAG,EAAE,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EACpF,sCAAsC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE;YAChB,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,SAAS,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EACjD,WAAW,CAAC,CAAC;YACd,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,SAAS,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EAC1E,yBAAyB,CAAC,CAAC;YAC5B,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,SAAS,EAAE,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EACxD,eAAe,CAAC,CAAC;YAClB,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,SAAS,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EAClD,YAAY,CAAC,CAAC;YACf,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EAC7C,IAAI,CAAC,CAAC;YAEP,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,SAAS,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EAChD,KAAK,CAAC,CAAC;YACR,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,SAAS,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EACzE,yBAAyB,CAAC,CAAC;YAC5B,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,SAAS,EAAE,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EACvD,WAAW,CAAC,CAAC;YACd,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,SAAS,EAAE,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EACjD,OAAO,CAAC,CAAC;YACV,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EAC5C,EAAE,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACxC,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,SAAS,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,aAAa,EAAE,GAAG,EAAE,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EACvF,oCAAoC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;YACvB,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,YAAY,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EACnD,SAAS,CAAC,CAAC;YACZ,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EAC7E,iCAAiC,CAAC,CAAC;YACpC,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,YAAY,EAAE,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EAC3D,iBAAiB,CAAC,CAAC;YACpB,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,YAAY,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EACrD,WAAW,CAAC,CAAC;YACd,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EAChD,MAAM,CAAC,CAAC;YAET,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,YAAY,EAAE,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EAClD,IAAI,CAAC,CAAC;YACP,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EAC5E,yBAAyB,CAAC,CAAC;YAC5B,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,YAAY,EAAE,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EAC1D,WAAW,CAAC,CAAC;YACd,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,YAAY,EAAE,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EACpD,OAAO,CAAC,CAAC;YACV,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,EAC/C,EAAE,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAC/C,MAAM,CAAC,WAAW,CACjB,IAAA,gBAAI,EAAW,YAAY,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,aAAa,EAAE,GAAG,EAAE,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EAC1F,wCAAwC,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","file":"terminals.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { prepareCommand } from 'vs/workbench/contrib/debug/node/terminals';\n\n\nsuite('Debug - prepareCommand', () => {\n\ttest('bash', () => {\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('bash', ['{$} ('], false).trim(),\n\t\t\t'\\\\{\\\\$\\\\}\\\\ \\\\(');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('bash', ['hello', 'world', '--flag=true'], false).trim(),\n\t\t\t'hello world --flag=true');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('bash', [' space arg '], false).trim(),\n\t\t\t'\\\\ space\\\\ arg\\\\');\n\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('bash', ['{$} ('], true).trim(),\n\t\t\t'{$} (');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('bash', ['hello', 'world', '--flag=true'], true).trim(),\n\t\t\t'hello world --flag=true');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('bash', [' space arg '], true).trim(),\n\t\t\t'space arg');\n\t});\n\n\ttest('bash - do not escape > and <', () => {\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('bash', ['arg1', '>', '> hello.txt', '<', '<input.in'], false).trim(),\n\t\t\t'arg1 > \\\\>\\\\ hello.txt < \\\\<input.in');\n\t});\n\n\ttest('cmd', () => {\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('cmd.exe', ['^!< '], false).trim(),\n\t\t\t'\"^^^!^< \"');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('cmd.exe', ['hello', 'world', '--flag=true'], false).trim(),\n\t\t\t'hello world --flag=true');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('cmd.exe', [' space arg '], false).trim(),\n\t\t\t'\" space arg \"');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('cmd.exe', ['\"A>0\"'], false).trim(),\n\t\t\t'\"\"\"A^>0\"\"\"');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('cmd.exe', [''], false).trim(),\n\t\t\t'\"\"');\n\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('cmd.exe', ['^!< '], true).trim(),\n\t\t\t'^!<');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('cmd.exe', ['hello', 'world', '--flag=true'], true).trim(),\n\t\t\t'hello world --flag=true');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('cmd.exe', [' space arg '], true).trim(),\n\t\t\t'space arg');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('cmd.exe', ['\"A>0\"'], true).trim(),\n\t\t\t'\"A>0\"');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('cmd.exe', [''], true).trim(),\n\t\t\t'');\n\t});\n\n\ttest('cmd - do not escape > and <', () => {\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('cmd.exe', ['arg1', '>', '> hello.txt', '<', '<input.in'], false).trim(),\n\t\t\t'arg1 > \"^> hello.txt\" < ^<input.in');\n\t});\n\n\ttest('powershell', () => {\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('powershell', ['!< '], false).trim(),\n\t\t\t`& '!< '`);\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('powershell', ['hello', 'world', '--flag=true'], false).trim(),\n\t\t\t`& 'hello' 'world' '--flag=true'`);\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('powershell', [' space arg '], false).trim(),\n\t\t\t`& ' space arg '`);\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('powershell', ['\"A>0\"'], false).trim(),\n\t\t\t`& '\"A>0\"'`);\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('powershell', [''], false).trim(),\n\t\t\t`& ''`);\n\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('powershell', ['!< '], true).trim(),\n\t\t\t'!<');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('powershell', ['hello', 'world', '--flag=true'], true).trim(),\n\t\t\t'hello world --flag=true');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('powershell', [' space arg '], true).trim(),\n\t\t\t'space arg');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('powershell', ['\"A>0\"'], true).trim(),\n\t\t\t'\"A>0\"');\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('powershell', [''], true).trim(),\n\t\t\t``);\n\t});\n\n\ttest('powershell - do not escape > and <', () => {\n\t\tassert.strictEqual(\n\t\t\tprepareCommand('powershell', ['arg1', '>', '> hello.txt', '<', '<input.in'], false).trim(),\n\t\t\t`& 'arg1' > '> hello.txt' < '<input.in'`);\n\t});\n});\n"]}