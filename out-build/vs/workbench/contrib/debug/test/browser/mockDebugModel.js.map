{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/debug/test/browser/mockDebugModel.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG,MAAM,WAAW,GAAG,IAAI,4BAAI,EAAa,CAAC;IAC7B,QAAA,IAAI,GAAqB,IAAI,wBAAG,CAAgB,WAAW,CAAC,CAAC;IAE1E,SAAgB,IAAI,CAAiB,UAAe;QACnD,MAAM,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,4BAAI,EAAgB,CAAC,CAAC;QACzD,MAAM,YAAY,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,gBAAI,CAAa,OAAO,CAAC,CAAC,CAAC;QACnE,OAAO,UAAU,CAAC,GAAG,CAAC,IAAI,iBAAI,CAAO,YAAY,EAAO,EAAE,OAAO,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,YAAI,EAAoB,IAAI,SAAG,EAAa,CAAC,CAAC,CAAC;IACxI,CAAC;IAJD,oBAIC","file":"mockDebugModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { DebugModel } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { MockDebugStorage } from 'vs/workbench/contrib/debug/test/common/mockDebug';\nimport { TestFileService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { TestStorageService } from 'vs/workbench/test/common/workbenchTestServices';\n\nconst fileService = new TestFileService();\nexport const mockUriIdentityService = new UriIdentityService(fileService);\n\nexport function createMockDebugModel(disposable: DisposableStore): DebugModel {\n\tconst storage = disposable.add(new TestStorageService());\n\tconst debugStorage = disposable.add(new MockDebugStorage(storage));\n\treturn disposable.add(new DebugModel(debugStorage, <any>{ isDirty: (e: any) => false }, mockUriIdentityService, new NullLogService()));\n}\n"]}