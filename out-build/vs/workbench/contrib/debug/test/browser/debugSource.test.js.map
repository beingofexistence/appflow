{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/debug/test/browser/debugSource.test.ts"],"names":[],"mappings":"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","file":"debugSource.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { isWindows } from 'vs/base/common/platform';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { Source } from 'vs/workbench/contrib/debug/common/debugSource';\nimport { mockUriIdentityService } from 'vs/workbench/contrib/debug/test/browser/mockDebugModel';\n\nsuite('Debug - Source', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('from raw source', () => {\n\t\tconst source = new Source({\n\t\t\tname: 'zz',\n\t\t\tpath: '/xx/yy/zz',\n\t\t\tsourceReference: 0,\n\t\t\tpresentationHint: 'emphasize'\n\t\t}, 'aDebugSessionId', mockUriIdentityService, new NullLogService());\n\n\t\tassert.strictEqual(source.presentationHint, 'emphasize');\n\t\tassert.strictEqual(source.name, 'zz');\n\t\tassert.strictEqual(source.inMemory, false);\n\t\tassert.strictEqual(source.reference, 0);\n\t\tassert.strictEqual(source.uri.toString(), uri.file('/xx/yy/zz').toString());\n\t});\n\n\ttest('from raw internal source', () => {\n\t\tconst source = new Source({\n\t\t\tname: 'internalModule.js',\n\t\t\tsourceReference: 11,\n\t\t\tpresentationHint: 'deemphasize'\n\t\t}, 'aDebugSessionId', mockUriIdentityService, new NullLogService());\n\n\t\tassert.strictEqual(source.presentationHint, 'deemphasize');\n\t\tassert.strictEqual(source.name, 'internalModule.js');\n\t\tassert.strictEqual(source.inMemory, true);\n\t\tassert.strictEqual(source.reference, 11);\n\t\tassert.strictEqual(source.uri.toString(), 'debug:internalModule.js?session%3DaDebugSessionId%26ref%3D11');\n\t});\n\n\ttest('get encoded debug data', () => {\n\t\tconst checkData = (uri: uri, expectedName: string, expectedPath: string, expectedSourceReference: number | undefined, expectedSessionId?: string) => {\n\t\t\tconst { name, path, sourceReference, sessionId } = Source.getEncodedDebugData(uri);\n\t\t\tassert.strictEqual(name, expectedName);\n\t\t\tassert.strictEqual(path, expectedPath);\n\t\t\tassert.strictEqual(sourceReference, expectedSourceReference);\n\t\t\tassert.strictEqual(sessionId, expectedSessionId);\n\t\t};\n\n\t\tcheckData(uri.file('a/b/c/d'), 'd', isWindows ? '\\\\a\\\\b\\\\c\\\\d' : '/a/b/c/d', undefined, undefined);\n\t\tcheckData(uri.from({ scheme: 'file', path: '/my/path/test.js', query: 'ref=1&session=2' }), 'test.js', isWindows ? '\\\\my\\\\path\\\\test.js' : '/my/path/test.js', undefined, undefined);\n\n\t\tcheckData(uri.from({ scheme: 'http', authority: 'www.example.com', path: '/my/path' }), 'path', 'http://www.example.com/my/path', undefined, undefined);\n\t\tcheckData(uri.from({ scheme: 'debug', authority: 'www.example.com', path: '/my/path', query: 'ref=100' }), 'path', '/my/path', 100, undefined);\n\t\tcheckData(uri.from({ scheme: 'debug', path: 'a/b/c/d.js', query: 'session=100' }), 'd.js', 'a/b/c/d.js', undefined, '100');\n\t\tcheckData(uri.from({ scheme: 'debug', path: 'a/b/c/d/foo.txt', query: 'session=100&ref=10' }), 'foo.txt', 'a/b/c/d/foo.txt', 10, '100');\n\t});\n});\n"]}