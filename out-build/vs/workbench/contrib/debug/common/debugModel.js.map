{"version":3,"sources":["vs/workbench/contrib/debug/common/debugModel.ts"],"names":[],"mappings":"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","file":"debugModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { DeferredPromise, RunOnceScheduler } from 'vs/base/common/async';\nimport { decodeBase64, encodeBase64, VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { stringHash } from 'vs/base/common/hash';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { mixin } from 'vs/base/common/objects';\nimport * as resources from 'vs/base/common/resources';\nimport { isString, isUndefinedOrNull } from 'vs/base/common/types';\nimport { URI, URI as uri } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport * as nls from 'vs/nls';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IEditorPane } from 'vs/workbench/common/editor';\nimport { DEBUG_MEMORY_SCHEME, IBaseBreakpoint, IBreakpoint, IBreakpointData, IBreakpointsChangeEvent, IBreakpointUpdateData, IDataBreakpoint, IDebugModel, IDebugSession, IEnablement, IExceptionBreakpoint, IExceptionInfo, IExpression, IExpressionContainer, IFunctionBreakpoint, IInstructionBreakpoint, IMemoryInvalidationEvent, IMemoryRegion, IRawModelUpdate, IRawStoppedDetails, IScope, IStackFrame, IThread, ITreeElement, MemoryRange, MemoryRangeType, State } from 'vs/workbench/contrib/debug/common/debug';\nimport { getUriFromSource, Source, UNKNOWN_SOURCE_LABEL } from 'vs/workbench/contrib/debug/common/debugSource';\nimport { DebugStorage } from 'vs/workbench/contrib/debug/common/debugStorage';\nimport { DisassemblyViewInput } from 'vs/workbench/contrib/debug/common/disassemblyViewInput';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { autorun } from 'vs/base/common/observable';\nimport { findLastIdx } from 'vs/base/common/arraysFind';\n\ninterface IDebugProtocolVariableWithContext extends DebugProtocol.Variable {\n\t__vscodeVariableMenuContext?: string;\n}\n\nexport class ExpressionContainer implements IExpressionContainer {\n\n\tpublic static readonly allValues = new Map<string, string>();\n\t// Use chunks to support variable paging #9537\n\tprivate static readonly BASE_CHUNK_SIZE = 100;\n\n\tpublic type: string | undefined;\n\tpublic valueChanged = false;\n\tprivate _value: string = '';\n\tprotected children?: Promise<IExpression[]>;\n\n\tconstructor(\n\t\tprotected session: IDebugSession | undefined,\n\t\tprotected readonly threadId: number | undefined,\n\t\tprivate _reference: number | undefined,\n\t\tprivate readonly id: string,\n\t\tpublic namedVariables: number | undefined = 0,\n\t\tpublic indexedVariables: number | undefined = 0,\n\t\tpublic memoryReference: string | undefined = undefined,\n\t\tprivate startOfVariables: number | undefined = 0,\n\t\tpublic presentationHint: DebugProtocol.VariablePresentationHint | undefined = undefined\n\t) { }\n\n\tget reference(): number | undefined {\n\t\treturn this._reference;\n\t}\n\n\tset reference(value: number | undefined) {\n\t\tthis._reference = value;\n\t\tthis.children = undefined; // invalidate children cache\n\t}\n\n\tasync evaluateLazy(): Promise<void> {\n\t\tif (typeof this.reference === 'undefined') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst response = await this.session!.variables(this.reference, this.threadId, undefined, undefined, undefined);\n\t\tif (!response || !response.body || !response.body.variables || response.body.variables.length !== 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dummyVar = response.body.variables[0];\n\t\tthis.reference = dummyVar.variablesReference;\n\t\tthis._value = dummyVar.value;\n\t\tthis.namedVariables = dummyVar.namedVariables;\n\t\tthis.indexedVariables = dummyVar.indexedVariables;\n\t\tthis.memoryReference = dummyVar.memoryReference;\n\t\tthis.presentationHint = dummyVar.presentationHint;\n\t\t// Also call overridden method to adopt subclass props\n\t\tthis.adoptLazyResponse(dummyVar);\n\t}\n\n\tprotected adoptLazyResponse(response: DebugProtocol.Variable): void {\n\t}\n\n\tgetChildren(): Promise<IExpression[]> {\n\t\tif (!this.children) {\n\t\t\tthis.children = this.doGetChildren();\n\t\t}\n\n\t\treturn this.children;\n\t}\n\n\tprivate async doGetChildren(): Promise<IExpression[]> {\n\t\tif (!this.hasChildren) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (!this.getChildrenInChunks) {\n\t\t\treturn this.fetchVariables(undefined, undefined, undefined);\n\t\t}\n\n\t\t// Check if object has named variables, fetch them independent from indexed variables #9670\n\t\tconst children = this.namedVariables ? await this.fetchVariables(undefined, undefined, 'named') : [];\n\n\t\t// Use a dynamic chunk size based on the number of elements #9774\n\t\tlet chunkSize = ExpressionContainer.BASE_CHUNK_SIZE;\n\t\twhile (!!this.indexedVariables && this.indexedVariables > chunkSize * ExpressionContainer.BASE_CHUNK_SIZE) {\n\t\t\tchunkSize *= ExpressionContainer.BASE_CHUNK_SIZE;\n\t\t}\n\n\t\tif (!!this.indexedVariables && this.indexedVariables > chunkSize) {\n\t\t\t// There are a lot of children, create fake intermediate values that represent chunks #9537\n\t\t\tconst numberOfChunks = Math.ceil(this.indexedVariables / chunkSize);\n\t\t\tfor (let i = 0; i < numberOfChunks; i++) {\n\t\t\t\tconst start = (this.startOfVariables || 0) + i * chunkSize;\n\t\t\t\tconst count = Math.min(chunkSize, this.indexedVariables - i * chunkSize);\n\t\t\t\tchildren.push(new Variable(this.session, this.threadId, this, this.reference, `[${start}..${start + count - 1}]`, '', '', undefined, count, undefined, { kind: 'virtual' }, undefined, undefined, true, start));\n\t\t\t}\n\n\t\t\treturn children;\n\t\t}\n\n\t\tconst variables = await this.fetchVariables(this.startOfVariables, this.indexedVariables, 'indexed');\n\t\treturn children.concat(variables);\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetSession(): IDebugSession | undefined {\n\t\treturn this.session;\n\t}\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n\n\tget hasChildren(): boolean {\n\t\t// only variables with reference > 0 have children.\n\t\treturn !!this.reference && this.reference > 0 && !this.presentationHint?.lazy;\n\t}\n\n\tprivate async fetchVariables(start: number | undefined, count: number | undefined, filter: 'indexed' | 'named' | undefined): Promise<Variable[]> {\n\t\ttry {\n\t\t\tconst response = await this.session!.variables(this.reference || 0, this.threadId, filter, start, count);\n\t\t\tif (!response || !response.body || !response.body.variables) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst nameCount = new Map<string, number>();\n\t\t\tconst vars = response.body.variables.filter(v => !!v).map((v: IDebugProtocolVariableWithContext) => {\n\t\t\t\tif (isString(v.value) && isString(v.name) && typeof v.variablesReference === 'number') {\n\t\t\t\t\tconst count = nameCount.get(v.name) || 0;\n\t\t\t\t\tconst idDuplicationIndex = count > 0 ? count.toString() : '';\n\t\t\t\t\tnameCount.set(v.name, count + 1);\n\t\t\t\t\treturn new Variable(this.session, this.threadId, this, v.variablesReference, v.name, v.evaluateName, v.value, v.namedVariables, v.indexedVariables, v.memoryReference, v.presentationHint, v.type, v.__vscodeVariableMenuContext, true, 0, idDuplicationIndex);\n\t\t\t\t}\n\t\t\t\treturn new Variable(this.session, this.threadId, this, 0, '', undefined, nls.localize('invalidVariableAttributes', \"Invalid variable attributes\"), 0, 0, undefined, { kind: 'virtual' }, undefined, undefined, false);\n\t\t\t});\n\n\t\t\tif (this.session!.autoExpandLazyVariables) {\n\t\t\t\tawait Promise.all(vars.map(v => v.presentationHint?.lazy && v.evaluateLazy()));\n\t\t\t}\n\n\t\t\treturn vars;\n\t\t} catch (e) {\n\t\t\treturn [new Variable(this.session, this.threadId, this, 0, '', undefined, e.message, 0, 0, undefined, { kind: 'virtual' }, undefined, undefined, false)];\n\t\t}\n\t}\n\n\t// The adapter explicitly sents the children count of an expression only if there are lots of children which should be chunked.\n\tprivate get getChildrenInChunks(): boolean {\n\t\treturn !!this.indexedVariables;\n\t}\n\n\tset value(value: string) {\n\t\tthis._value = value;\n\t\tthis.valueChanged = !!ExpressionContainer.allValues.get(this.getId()) &&\n\t\t\tExpressionContainer.allValues.get(this.getId()) !== Expression.DEFAULT_VALUE && ExpressionContainer.allValues.get(this.getId()) !== value;\n\t\tExpressionContainer.allValues.set(this.getId(), value);\n\t}\n\n\ttoString(): string {\n\t\treturn this.value;\n\t}\n\n\tasync evaluateExpression(\n\t\texpression: string,\n\t\tsession: IDebugSession | undefined,\n\t\tstackFrame: IStackFrame | undefined,\n\t\tcontext: string,\n\t\tkeepLazyVars = false): Promise<boolean> {\n\n\t\tif (!session || (!stackFrame && context !== 'repl')) {\n\t\t\tthis.value = context === 'repl' ? nls.localize('startDebugFirst', \"Please start a debug session to evaluate expressions\") : Expression.DEFAULT_VALUE;\n\t\t\tthis.reference = 0;\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.session = session;\n\t\ttry {\n\t\t\tconst response = await session.evaluate(expression, stackFrame ? stackFrame.frameId : undefined, context);\n\n\t\t\tif (response && response.body) {\n\t\t\t\tthis.value = response.body.result || '';\n\t\t\t\tthis.reference = response.body.variablesReference;\n\t\t\t\tthis.namedVariables = response.body.namedVariables;\n\t\t\t\tthis.indexedVariables = response.body.indexedVariables;\n\t\t\t\tthis.memoryReference = response.body.memoryReference;\n\t\t\t\tthis.type = response.body.type || this.type;\n\t\t\t\tthis.presentationHint = response.body.presentationHint;\n\n\t\t\t\tif (!keepLazyVars && response.body.presentationHint?.lazy) {\n\t\t\t\t\tawait this.evaluateLazy();\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\tthis.value = e.message || '';\n\t\t\tthis.reference = 0;\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nfunction handleSetResponse(expression: ExpressionContainer, response: DebugProtocol.SetVariableResponse | DebugProtocol.SetExpressionResponse | undefined): void {\n\tif (response && response.body) {\n\t\texpression.value = response.body.value || '';\n\t\texpression.type = response.body.type || expression.type;\n\t\texpression.reference = response.body.variablesReference;\n\t\texpression.namedVariables = response.body.namedVariables;\n\t\texpression.indexedVariables = response.body.indexedVariables;\n\t\t// todo @weinand: the set responses contain most properties, but not memory references. Should they?\n\t}\n}\n\nexport class Expression extends ExpressionContainer implements IExpression {\n\tstatic readonly DEFAULT_VALUE = nls.localize('notAvailable', \"not available\");\n\n\tpublic available: boolean;\n\n\tconstructor(public name: string, id = generateUuid()) {\n\t\tsuper(undefined, undefined, 0, id);\n\t\tthis.available = false;\n\t\t// name is not set if the expression is just being added\n\t\t// in that case do not set default value to prevent flashing #14499\n\t\tif (name) {\n\t\t\tthis.value = Expression.DEFAULT_VALUE;\n\t\t}\n\t}\n\n\tasync evaluate(session: IDebugSession | undefined, stackFrame: IStackFrame | undefined, context: string, keepLazyVars?: boolean): Promise<void> {\n\t\tthis.available = await this.evaluateExpression(this.name, session, stackFrame, context, keepLazyVars);\n\t}\n\n\toverride toString(): string {\n\t\treturn `${this.name}\\n${this.value}`;\n\t}\n\n\tasync setExpression(value: string, stackFrame: IStackFrame): Promise<void> {\n\t\tif (!this.session) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst response = await this.session.setExpression(stackFrame.frameId, this.name, value);\n\t\thandleSetResponse(this, response);\n\t}\n}\n\nexport class Variable extends ExpressionContainer implements IExpression {\n\n\t// Used to show the error message coming from the adapter when setting the value #7807\n\tpublic errorMessage: string | undefined;\n\n\tconstructor(\n\t\tsession: IDebugSession | undefined,\n\t\tthreadId: number | undefined,\n\t\tpublic readonly parent: IExpressionContainer,\n\t\treference: number | undefined,\n\t\tpublic readonly name: string,\n\t\tpublic evaluateName: string | undefined,\n\t\tvalue: string | undefined,\n\t\tnamedVariables: number | undefined,\n\t\tindexedVariables: number | undefined,\n\t\tmemoryReference: string | undefined,\n\t\tpresentationHint: DebugProtocol.VariablePresentationHint | undefined,\n\t\ttype: string | undefined = undefined,\n\t\tpublic readonly variableMenuContext: string | undefined = undefined,\n\t\tpublic readonly available = true,\n\t\tstartOfVariables = 0,\n\t\tidDuplicationIndex = '',\n\t) {\n\t\tsuper(session, threadId, reference, `variable:${parent.getId()}:${name}:${idDuplicationIndex}`, namedVariables, indexedVariables, memoryReference, startOfVariables, presentationHint);\n\t\tthis.value = value || '';\n\t\tthis.type = type;\n\t}\n\n\tasync setVariable(value: string, stackFrame: IStackFrame): Promise<any> {\n\t\tif (!this.session) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t// Send out a setExpression for debug extensions that do not support set variables https://github.com/microsoft/vscode/issues/124679#issuecomment-869844437\n\t\t\tif (this.session.capabilities.supportsSetExpression && !this.session.capabilities.supportsSetVariable && this.evaluateName) {\n\t\t\t\treturn this.setExpression(value, stackFrame);\n\t\t\t}\n\n\t\t\tconst response = await this.session.setVariable((<ExpressionContainer>this.parent).reference, this.name, value);\n\t\t\thandleSetResponse(this, response);\n\t\t} catch (err) {\n\t\t\tthis.errorMessage = err.message;\n\t\t}\n\t}\n\n\tasync setExpression(value: string, stackFrame: IStackFrame): Promise<void> {\n\t\tif (!this.session || !this.evaluateName) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst response = await this.session.setExpression(stackFrame.frameId, this.evaluateName, value);\n\t\thandleSetResponse(this, response);\n\t}\n\n\toverride toString(): string {\n\t\treturn this.name ? `${this.name}: ${this.value}` : this.value;\n\t}\n\n\tprotected override adoptLazyResponse(response: DebugProtocol.Variable): void {\n\t\tthis.evaluateName = response.evaluateName;\n\t}\n\n\ttoDebugProtocolObject(): DebugProtocol.Variable {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tvariablesReference: this.reference || 0,\n\t\t\tmemoryReference: this.memoryReference,\n\t\t\tvalue: this.value,\n\t\t\tevaluateName: this.evaluateName\n\t\t};\n\t}\n}\n\nexport class Scope extends ExpressionContainer implements IScope {\n\n\tconstructor(\n\t\tstackFrame: IStackFrame,\n\t\tid: number,\n\t\tpublic readonly name: string,\n\t\treference: number,\n\t\tpublic expensive: boolean,\n\t\tnamedVariables?: number,\n\t\tindexedVariables?: number,\n\t\tpublic readonly range?: IRange\n\t) {\n\t\tsuper(stackFrame.thread.session, stackFrame.thread.threadId, reference, `scope:${name}:${id}`, namedVariables, indexedVariables);\n\t}\n\n\toverride toString(): string {\n\t\treturn this.name;\n\t}\n\n\ttoDebugProtocolObject(): DebugProtocol.Scope {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tvariablesReference: this.reference || 0,\n\t\t\texpensive: this.expensive\n\t\t};\n\t}\n}\n\nexport class ErrorScope extends Scope {\n\n\tconstructor(\n\t\tstackFrame: IStackFrame,\n\t\tindex: number,\n\t\tmessage: string,\n\t) {\n\t\tsuper(stackFrame, index, message, 0, false);\n\t}\n\n\toverride toString(): string {\n\t\treturn this.name;\n\t}\n}\n\nexport class StackFrame implements IStackFrame {\n\n\tprivate scopes: Promise<Scope[]> | undefined;\n\n\tconstructor(\n\t\tpublic readonly thread: Thread,\n\t\tpublic readonly frameId: number,\n\t\tpublic readonly source: Source,\n\t\tpublic readonly name: string,\n\t\tpublic readonly presentationHint: string | undefined,\n\t\tpublic readonly range: IRange,\n\t\tprivate readonly index: number,\n\t\tpublic readonly canRestart: boolean,\n\t\tpublic readonly instructionPointerReference?: string\n\t) { }\n\n\tgetId(): string {\n\t\treturn `stackframe:${this.thread.getId()}:${this.index}:${this.source.name}`;\n\t}\n\n\tgetScopes(): Promise<IScope[]> {\n\t\tif (!this.scopes) {\n\t\t\tthis.scopes = this.thread.session.scopes(this.frameId, this.thread.threadId).then(response => {\n\t\t\t\tif (!response || !response.body || !response.body.scopes) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst usedIds = new Set<number>();\n\t\t\t\treturn response.body.scopes.map(rs => {\n\t\t\t\t\t// form the id based on the name and location so that it's the\n\t\t\t\t\t// same across multiple pauses to retain expansion state\n\t\t\t\t\tlet id = 0;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tid = stringHash(`${rs.name}:${rs.line}:${rs.column}`, id);\n\t\t\t\t\t} while (usedIds.has(id));\n\n\t\t\t\t\tusedIds.add(id);\n\t\t\t\t\treturn new Scope(this, id, rs.name, rs.variablesReference, rs.expensive, rs.namedVariables, rs.indexedVariables,\n\t\t\t\t\t\trs.line && rs.column && rs.endLine && rs.endColumn ? new Range(rs.line, rs.column, rs.endLine, rs.endColumn) : undefined);\n\n\t\t\t\t});\n\t\t\t}, err => [new ErrorScope(this, 0, err.message)]);\n\t\t}\n\n\t\treturn this.scopes;\n\t}\n\n\tasync getMostSpecificScopes(range: IRange): Promise<IScope[]> {\n\t\tconst scopes = await this.getScopes();\n\t\tconst nonExpensiveScopes = scopes.filter(s => !s.expensive);\n\t\tconst haveRangeInfo = nonExpensiveScopes.some(s => !!s.range);\n\t\tif (!haveRangeInfo) {\n\t\t\treturn nonExpensiveScopes;\n\t\t}\n\n\t\tconst scopesContainingRange = nonExpensiveScopes.filter(scope => scope.range && Range.containsRange(scope.range, range))\n\t\t\t.sort((first, second) => (first.range!.endLineNumber - first.range!.startLineNumber) - (second.range!.endLineNumber - second.range!.startLineNumber));\n\t\treturn scopesContainingRange.length ? scopesContainingRange : nonExpensiveScopes;\n\t}\n\n\trestart(): Promise<void> {\n\t\treturn this.thread.session.restartFrame(this.frameId, this.thread.threadId);\n\t}\n\n\tforgetScopes(): void {\n\t\tthis.scopes = undefined;\n\t}\n\n\ttoString(): string {\n\t\tconst lineNumberToString = typeof this.range.startLineNumber === 'number' ? `:${this.range.startLineNumber}` : '';\n\t\tconst sourceToString = `${this.source.inMemory ? this.source.name : this.source.uri.fsPath}${lineNumberToString}`;\n\n\t\treturn sourceToString === UNKNOWN_SOURCE_LABEL ? this.name : `${this.name} (${sourceToString})`;\n\t}\n\n\tasync openInEditor(editorService: IEditorService, preserveFocus?: boolean, sideBySide?: boolean, pinned?: boolean): Promise<IEditorPane | undefined> {\n\t\tconst threadStopReason = this.thread.stoppedDetails?.reason;\n\t\tif (this.instructionPointerReference &&\n\t\t\t(threadStopReason === 'instruction breakpoint' ||\n\t\t\t\t(threadStopReason === 'step' && this.thread.lastSteppingGranularity === 'instruction') ||\n\t\t\t\teditorService.activeEditor instanceof DisassemblyViewInput)) {\n\t\t\treturn editorService.openEditor(DisassemblyViewInput.instance, { pinned: true, revealIfOpened: true });\n\t\t}\n\n\t\tif (this.source.available) {\n\t\t\treturn this.source.openInEditor(editorService, this.range, preserveFocus, sideBySide, pinned);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tequals(other: IStackFrame): boolean {\n\t\treturn (this.name === other.name) && (other.thread === this.thread) && (this.frameId === other.frameId) && (other.source === this.source) && (Range.equalsRange(this.range, other.range));\n\t}\n}\n\nexport class Thread implements IThread {\n\tprivate callStack: IStackFrame[];\n\tprivate staleCallStack: IStackFrame[];\n\tprivate callStackCancellationTokens: CancellationTokenSource[] = [];\n\tpublic stoppedDetails: IRawStoppedDetails | undefined;\n\tpublic stopped: boolean;\n\tpublic reachedEndOfCallStack = false;\n\tpublic lastSteppingGranularity: DebugProtocol.SteppingGranularity | undefined;\n\n\tconstructor(public readonly session: IDebugSession, public name: string, public readonly threadId: number) {\n\t\tthis.callStack = [];\n\t\tthis.staleCallStack = [];\n\t\tthis.stopped = false;\n\t}\n\n\tgetId(): string {\n\t\treturn `thread:${this.session.getId()}:${this.threadId}`;\n\t}\n\n\tclearCallStack(): void {\n\t\tif (this.callStack.length) {\n\t\t\tthis.staleCallStack = this.callStack;\n\t\t}\n\t\tthis.callStack = [];\n\t\tthis.callStackCancellationTokens.forEach(c => c.dispose(true));\n\t\tthis.callStackCancellationTokens = [];\n\t}\n\n\tgetCallStack(): IStackFrame[] {\n\t\treturn this.callStack;\n\t}\n\n\tgetStaleCallStack(): ReadonlyArray<IStackFrame> {\n\t\treturn this.staleCallStack;\n\t}\n\n\tgetTopStackFrame(): IStackFrame | undefined {\n\t\tconst callStack = this.getCallStack();\n\t\t// Allow stack frame without source and with instructionReferencePointer as top stack frame when using disassembly view.\n\t\tconst firstAvailableStackFrame = callStack.find(sf => !!(sf &&\n\t\t\t((this.stoppedDetails?.reason === 'instruction breakpoint' || (this.stoppedDetails?.reason === 'step' && this.lastSteppingGranularity === 'instruction')) && sf.instructionPointerReference) ||\n\t\t\t(sf.source && sf.source.available && sf.source.presentationHint !== 'deemphasize')));\n\t\treturn firstAvailableStackFrame;\n\t}\n\n\tget stateLabel(): string {\n\t\tif (this.stoppedDetails) {\n\t\t\treturn this.stoppedDetails.description ||\n\t\t\t\t(this.stoppedDetails.reason ? nls.localize({ key: 'pausedOn', comment: ['indicates reason for program being paused'] }, \"Paused on {0}\", this.stoppedDetails.reason) : nls.localize('paused', \"Paused\"));\n\t\t}\n\n\t\treturn nls.localize({ key: 'running', comment: ['indicates state'] }, \"Running\");\n\t}\n\n\t/**\n\t * Queries the debug adapter for the callstack and returns a promise\n\t * which completes once the call stack has been retrieved.\n\t * If the thread is not stopped, it returns a promise to an empty array.\n\t * Only fetches the first stack frame for performance reasons. Calling this method consecutive times\n\t * gets the remainder of the call stack.\n\t */\n\tasync fetchCallStack(levels = 20): Promise<void> {\n\t\tif (this.stopped) {\n\t\t\tconst start = this.callStack.length;\n\t\t\tconst callStack = await this.getCallStackImpl(start, levels);\n\t\t\tthis.reachedEndOfCallStack = callStack.length < levels;\n\t\t\tif (start < this.callStack.length) {\n\t\t\t\t// Set the stack frames for exact position we requested. To make sure no concurrent requests create duplicate stack frames #30660\n\t\t\t\tthis.callStack.splice(start, this.callStack.length - start);\n\t\t\t}\n\t\t\tthis.callStack = this.callStack.concat(callStack || []);\n\t\t\tif (typeof this.stoppedDetails?.totalFrames === 'number' && this.stoppedDetails.totalFrames === this.callStack.length) {\n\t\t\t\tthis.reachedEndOfCallStack = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async getCallStackImpl(startFrame: number, levels: number): Promise<IStackFrame[]> {\n\t\ttry {\n\t\t\tconst tokenSource = new CancellationTokenSource();\n\t\t\tthis.callStackCancellationTokens.push(tokenSource);\n\t\t\tconst response = await this.session.stackTrace(this.threadId, startFrame, levels, tokenSource.token);\n\t\t\tif (!response || !response.body || tokenSource.token.isCancellationRequested) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tif (this.stoppedDetails) {\n\t\t\t\tthis.stoppedDetails.totalFrames = response.body.totalFrames;\n\t\t\t}\n\n\t\t\treturn response.body.stackFrames.map((rsf, index) => {\n\t\t\t\tconst source = this.session.getSource(rsf.source);\n\n\t\t\t\treturn new StackFrame(this, rsf.id, source, rsf.name, rsf.presentationHint, new Range(\n\t\t\t\t\trsf.line,\n\t\t\t\t\trsf.column,\n\t\t\t\t\trsf.endLine || rsf.line,\n\t\t\t\t\trsf.endColumn || rsf.column\n\t\t\t\t), startFrame + index, typeof rsf.canRestart === 'boolean' ? rsf.canRestart : true, rsf.instructionPointerReference);\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tif (this.stoppedDetails) {\n\t\t\t\tthis.stoppedDetails.framesErrorMessage = err.message;\n\t\t\t}\n\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Returns exception info promise if the exception was thrown, otherwise undefined\n\t */\n\tget exceptionInfo(): Promise<IExceptionInfo | undefined> {\n\t\tif (this.stoppedDetails && this.stoppedDetails.reason === 'exception') {\n\t\t\tif (this.session.capabilities.supportsExceptionInfoRequest) {\n\t\t\t\treturn this.session.exceptionInfo(this.threadId);\n\t\t\t}\n\t\t\treturn Promise.resolve({\n\t\t\t\tdescription: this.stoppedDetails.text,\n\t\t\t\tbreakMode: null\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tnext(granularity?: DebugProtocol.SteppingGranularity): Promise<any> {\n\t\treturn this.session.next(this.threadId, granularity);\n\t}\n\n\tstepIn(granularity?: DebugProtocol.SteppingGranularity): Promise<any> {\n\t\treturn this.session.stepIn(this.threadId, undefined, granularity);\n\t}\n\n\tstepOut(granularity?: DebugProtocol.SteppingGranularity): Promise<any> {\n\t\treturn this.session.stepOut(this.threadId, granularity);\n\t}\n\n\tstepBack(granularity?: DebugProtocol.SteppingGranularity): Promise<any> {\n\t\treturn this.session.stepBack(this.threadId, granularity);\n\t}\n\n\tcontinue(): Promise<any> {\n\t\treturn this.session.continue(this.threadId);\n\t}\n\n\tpause(): Promise<any> {\n\t\treturn this.session.pause(this.threadId);\n\t}\n\n\tterminate(): Promise<any> {\n\t\treturn this.session.terminateThreads([this.threadId]);\n\t}\n\n\treverseContinue(): Promise<any> {\n\t\treturn this.session.reverseContinue(this.threadId);\n\t}\n}\n\n/**\n * Gets a URI to a memory in the given session ID.\n */\nexport const getUriForDebugMemory = (\n\tsessionId: string,\n\tmemoryReference: string,\n\trange?: { fromOffset: number; toOffset: number },\n\tdisplayName = 'memory'\n) => {\n\treturn URI.from({\n\t\tscheme: DEBUG_MEMORY_SCHEME,\n\t\tauthority: sessionId,\n\t\tpath: '/' + encodeURIComponent(memoryReference) + `/${encodeURIComponent(displayName)}.bin`,\n\t\tquery: range ? `?range=${range.fromOffset}:${range.toOffset}` : undefined,\n\t});\n};\n\nexport class MemoryRegion extends Disposable implements IMemoryRegion {\n\tprivate readonly invalidateEmitter = this._register(new Emitter<IMemoryInvalidationEvent>());\n\n\t/** @inheritdoc */\n\tpublic readonly onDidInvalidate = this.invalidateEmitter.event;\n\n\t/** @inheritdoc */\n\tpublic readonly writable = !!this.session.capabilities.supportsWriteMemoryRequest;\n\n\tconstructor(private readonly memoryReference: string, private readonly session: IDebugSession) {\n\t\tsuper();\n\t\tthis._register(session.onDidInvalidateMemory(e => {\n\t\t\tif (e.body.memoryReference === memoryReference) {\n\t\t\t\tthis.invalidate(e.body.offset, e.body.count - e.body.offset);\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic async read(fromOffset: number, toOffset: number): Promise<MemoryRange[]> {\n\t\tconst length = toOffset - fromOffset;\n\t\tconst offset = fromOffset;\n\t\tconst result = await this.session.readMemory(this.memoryReference, offset, length);\n\n\t\tif (result === undefined || !result.body?.data) {\n\t\t\treturn [{ type: MemoryRangeType.Unreadable, offset, length }];\n\t\t}\n\n\t\tlet data: VSBuffer;\n\t\ttry {\n\t\t\tdata = decodeBase64(result.body.data);\n\t\t} catch {\n\t\t\treturn [{ type: MemoryRangeType.Error, offset, length, error: 'Invalid base64 data from debug adapter' }];\n\t\t}\n\n\t\tconst unreadable = result.body.unreadableBytes || 0;\n\t\tconst dataLength = length - unreadable;\n\t\tif (data.byteLength < dataLength) {\n\t\t\tconst pad = VSBuffer.alloc(dataLength - data.byteLength);\n\t\t\tpad.buffer.fill(0);\n\t\t\tdata = VSBuffer.concat([data, pad], dataLength);\n\t\t} else if (data.byteLength > dataLength) {\n\t\t\tdata = data.slice(0, dataLength);\n\t\t}\n\n\t\tif (!unreadable) {\n\t\t\treturn [{ type: MemoryRangeType.Valid, offset, length, data }];\n\t\t}\n\n\t\treturn [\n\t\t\t{ type: MemoryRangeType.Valid, offset, length: dataLength, data },\n\t\t\t{ type: MemoryRangeType.Unreadable, offset: offset + dataLength, length: unreadable },\n\t\t];\n\t}\n\n\tpublic async write(offset: number, data: VSBuffer): Promise<number> {\n\t\tconst result = await this.session.writeMemory(this.memoryReference, offset, encodeBase64(data), true);\n\t\tconst written = result?.body?.bytesWritten ?? data.byteLength;\n\t\tthis.invalidate(offset, offset + written);\n\t\treturn written;\n\t}\n\n\tpublic override dispose() {\n\t\tsuper.dispose();\n\t}\n\n\tprivate invalidate(fromOffset: number, toOffset: number) {\n\t\tthis.invalidateEmitter.fire({ fromOffset, toOffset });\n\t}\n}\n\nexport class Enablement implements IEnablement {\n\tconstructor(\n\t\tpublic enabled: boolean,\n\t\tprivate readonly id: string\n\t) { }\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n\ninterface IBreakpointSessionData extends DebugProtocol.Breakpoint {\n\tsupportsConditionalBreakpoints: boolean;\n\tsupportsHitConditionalBreakpoints: boolean;\n\tsupportsLogPoints: boolean;\n\tsupportsFunctionBreakpoints: boolean;\n\tsupportsDataBreakpoints: boolean;\n\tsupportsInstructionBreakpoints: boolean;\n\tsessionId: string;\n}\n\nfunction toBreakpointSessionData(data: DebugProtocol.Breakpoint, capabilities: DebugProtocol.Capabilities): IBreakpointSessionData {\n\treturn mixin({\n\t\tsupportsConditionalBreakpoints: !!capabilities.supportsConditionalBreakpoints,\n\t\tsupportsHitConditionalBreakpoints: !!capabilities.supportsHitConditionalBreakpoints,\n\t\tsupportsLogPoints: !!capabilities.supportsLogPoints,\n\t\tsupportsFunctionBreakpoints: !!capabilities.supportsFunctionBreakpoints,\n\t\tsupportsDataBreakpoints: !!capabilities.supportsDataBreakpoints,\n\t\tsupportsInstructionBreakpoints: !!capabilities.supportsInstructionBreakpoints\n\t}, data);\n}\n\nexport abstract class BaseBreakpoint extends Enablement implements IBaseBreakpoint {\n\n\tprivate sessionData = new Map<string, IBreakpointSessionData>();\n\tprotected data: IBreakpointSessionData | undefined;\n\n\tconstructor(\n\t\tenabled: boolean,\n\t\tpublic hitCondition: string | undefined,\n\t\tpublic condition: string | undefined,\n\t\tpublic logMessage: string | undefined,\n\t\tid: string\n\t) {\n\t\tsuper(enabled, id);\n\t\tif (enabled === undefined) {\n\t\t\tthis.enabled = true;\n\t\t}\n\t}\n\n\tsetSessionData(sessionId: string, data: IBreakpointSessionData | undefined): void {\n\t\tif (!data) {\n\t\t\tthis.sessionData.delete(sessionId);\n\t\t} else {\n\t\t\tdata.sessionId = sessionId;\n\t\t\tthis.sessionData.set(sessionId, data);\n\t\t}\n\n\t\tconst allData = Array.from(this.sessionData.values());\n\t\tconst verifiedData = distinct(allData.filter(d => d.verified), d => `${d.line}:${d.column}`);\n\t\tif (verifiedData.length) {\n\t\t\t// In case multiple session verified the breakpoint and they provide different data show the intial data that the user set (corner case)\n\t\t\tthis.data = verifiedData.length === 1 ? verifiedData[0] : undefined;\n\t\t} else {\n\t\t\t// No session verified the breakpoint\n\t\t\tthis.data = allData.length ? allData[0] : undefined;\n\t\t}\n\t}\n\n\tget message(): string | undefined {\n\t\tif (!this.data) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.data.message;\n\t}\n\n\tget verified(): boolean {\n\t\treturn this.data ? this.data.verified : true;\n\t}\n\n\tget sessionsThatVerified() {\n\t\tconst sessionIds: string[] = [];\n\t\tfor (const [sessionId, data] of this.sessionData) {\n\t\t\tif (data.verified) {\n\t\t\t\tsessionIds.push(sessionId);\n\t\t\t}\n\t\t}\n\n\t\treturn sessionIds;\n\t}\n\n\tabstract get supported(): boolean;\n\n\tgetIdFromAdapter(sessionId: string): number | undefined {\n\t\tconst data = this.sessionData.get(sessionId);\n\t\treturn data ? data.id : undefined;\n\t}\n\n\tgetDebugProtocolBreakpoint(sessionId: string): DebugProtocol.Breakpoint | undefined {\n\t\tconst data = this.sessionData.get(sessionId);\n\t\tif (data) {\n\t\t\tconst bp: DebugProtocol.Breakpoint = {\n\t\t\t\tid: data.id,\n\t\t\t\tverified: data.verified,\n\t\t\t\tmessage: data.message,\n\t\t\t\tsource: data.source,\n\t\t\t\tline: data.line,\n\t\t\t\tcolumn: data.column,\n\t\t\t\tendLine: data.endLine,\n\t\t\t\tendColumn: data.endColumn,\n\t\t\t\tinstructionReference: data.instructionReference,\n\t\t\t\toffset: data.offset\n\t\t\t};\n\t\t\treturn bp;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoJSON(): any {\n\t\tconst result = Object.create(null);\n\t\tresult.id = this.getId();\n\t\tresult.enabled = this.enabled;\n\t\tresult.condition = this.condition;\n\t\tresult.hitCondition = this.hitCondition;\n\t\tresult.logMessage = this.logMessage;\n\n\t\treturn result;\n\t}\n}\n\nexport class Breakpoint extends BaseBreakpoint implements IBreakpoint {\n\n\tconstructor(\n\t\tprivate readonly _uri: uri,\n\t\tprivate _lineNumber: number,\n\t\tprivate _column: number | undefined,\n\t\tenabled: boolean,\n\t\tcondition: string | undefined,\n\t\thitCondition: string | undefined,\n\t\tlogMessage: string | undefined,\n\t\tprivate _adapterData: any,\n\t\tprivate readonly textFileService: ITextFileService,\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\tprivate readonly logService: ILogService,\n\t\tid = generateUuid()\n\t) {\n\t\tsuper(enabled, hitCondition, condition, logMessage, id);\n\t}\n\n\tget originalUri() {\n\t\treturn this._uri;\n\t}\n\n\tget lineNumber(): number {\n\t\treturn this.verified && this.data && typeof this.data.line === 'number' ? this.data.line : this._lineNumber;\n\t}\n\n\toverride get verified(): boolean {\n\t\tif (this.data) {\n\t\t\treturn this.data.verified && !this.textFileService.isDirty(this._uri);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tget uri(): uri {\n\t\treturn this.verified && this.data && this.data.source ? getUriFromSource(this.data.source, this.data.source.path, this.data.sessionId, this.uriIdentityService, this.logService) : this._uri;\n\t}\n\n\tget column(): number | undefined {\n\t\treturn this.verified && this.data && typeof this.data.column === 'number' ? this.data.column : this._column;\n\t}\n\n\toverride get message(): string | undefined {\n\t\tif (this.textFileService.isDirty(this.uri)) {\n\t\t\treturn nls.localize('breakpointDirtydHover', \"Unverified breakpoint. File is modified, please restart debug session.\");\n\t\t}\n\n\t\treturn super.message;\n\t}\n\n\tget adapterData(): any {\n\t\treturn this.data && this.data.source && this.data.source.adapterData ? this.data.source.adapterData : this._adapterData;\n\t}\n\n\tget endLineNumber(): number | undefined {\n\t\treturn this.verified && this.data ? this.data.endLine : undefined;\n\t}\n\n\tget endColumn(): number | undefined {\n\t\treturn this.verified && this.data ? this.data.endColumn : undefined;\n\t}\n\n\tget sessionAgnosticData(): { lineNumber: number; column: number | undefined } {\n\t\treturn {\n\t\t\tlineNumber: this._lineNumber,\n\t\t\tcolumn: this._column\n\t\t};\n\t}\n\n\tget supported(): boolean {\n\t\tif (!this.data) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.logMessage && !this.data.supportsLogPoints) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.condition && !this.data.supportsConditionalBreakpoints) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.hitCondition && !this.data.supportsHitConditionalBreakpoints) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\toverride setSessionData(sessionId: string, data: IBreakpointSessionData | undefined): void {\n\t\tsuper.setSessionData(sessionId, data);\n\t\tif (!this._adapterData) {\n\t\t\tthis._adapterData = this.adapterData;\n\t\t}\n\t}\n\n\toverride toJSON(): any {\n\t\tconst result = super.toJSON();\n\t\tresult.uri = this._uri;\n\t\tresult.lineNumber = this._lineNumber;\n\t\tresult.column = this._column;\n\t\tresult.adapterData = this.adapterData;\n\n\t\treturn result;\n\t}\n\n\toverride toString(): string {\n\t\treturn `${resources.basenameOrAuthority(this.uri)} ${this.lineNumber}`;\n\t}\n\n\tupdate(data: IBreakpointUpdateData): void {\n\t\tif (!isUndefinedOrNull(data.lineNumber)) {\n\t\t\tthis._lineNumber = data.lineNumber;\n\t\t}\n\t\tif (!isUndefinedOrNull(data.column)) {\n\t\t\tthis._column = data.column;\n\t\t}\n\t\tif (!isUndefinedOrNull(data.condition)) {\n\t\t\tthis.condition = data.condition;\n\t\t}\n\t\tif (!isUndefinedOrNull(data.hitCondition)) {\n\t\t\tthis.hitCondition = data.hitCondition;\n\t\t}\n\t\tif (!isUndefinedOrNull(data.logMessage)) {\n\t\t\tthis.logMessage = data.logMessage;\n\t\t}\n\t}\n}\n\nexport class FunctionBreakpoint extends BaseBreakpoint implements IFunctionBreakpoint {\n\n\tconstructor(\n\t\tpublic name: string,\n\t\tenabled: boolean,\n\t\thitCondition: string | undefined,\n\t\tcondition: string | undefined,\n\t\tlogMessage: string | undefined,\n\t\tid = generateUuid()\n\t) {\n\t\tsuper(enabled, hitCondition, condition, logMessage, id);\n\t}\n\n\toverride toJSON(): any {\n\t\tconst result = super.toJSON();\n\t\tresult.name = this.name;\n\n\t\treturn result;\n\t}\n\n\tget supported(): boolean {\n\t\tif (!this.data) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.data.supportsFunctionBreakpoints;\n\t}\n\n\toverride toString(): string {\n\t\treturn this.name;\n\t}\n}\n\nexport class DataBreakpoint extends BaseBreakpoint implements IDataBreakpoint {\n\n\tconstructor(\n\t\tpublic readonly description: string,\n\t\tpublic readonly dataId: string,\n\t\tpublic readonly canPersist: boolean,\n\t\tenabled: boolean,\n\t\thitCondition: string | undefined,\n\t\tcondition: string | undefined,\n\t\tlogMessage: string | undefined,\n\t\tpublic readonly accessTypes: DebugProtocol.DataBreakpointAccessType[] | undefined,\n\t\tpublic readonly accessType: DebugProtocol.DataBreakpointAccessType,\n\t\tid = generateUuid()\n\t) {\n\t\tsuper(enabled, hitCondition, condition, logMessage, id);\n\t}\n\n\toverride toJSON(): any {\n\t\tconst result = super.toJSON();\n\t\tresult.description = this.description;\n\t\tresult.dataId = this.dataId;\n\t\tresult.accessTypes = this.accessTypes;\n\t\tresult.accessType = this.accessType;\n\t\treturn result;\n\t}\n\n\tget supported(): boolean {\n\t\tif (!this.data) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.data.supportsDataBreakpoints;\n\t}\n\n\toverride toString(): string {\n\t\treturn this.description;\n\t}\n}\n\nexport class ExceptionBreakpoint extends BaseBreakpoint implements IExceptionBreakpoint {\n\n\tprivate supportedSessions: Set<string> = new Set();\n\n\tconstructor(\n\t\tpublic readonly filter: string,\n\t\tpublic readonly label: string,\n\t\tenabled: boolean,\n\t\tpublic readonly supportsCondition: boolean,\n\t\tcondition: string | undefined,\n\t\tpublic readonly description: string | undefined,\n\t\tpublic readonly conditionDescription: string | undefined,\n\t\tprivate fallback: boolean = false\n\t) {\n\t\tsuper(enabled, undefined, condition, undefined, generateUuid());\n\t}\n\n\toverride toJSON(): any {\n\t\tconst result = Object.create(null);\n\t\tresult.filter = this.filter;\n\t\tresult.label = this.label;\n\t\tresult.enabled = this.enabled;\n\t\tresult.supportsCondition = this.supportsCondition;\n\t\tresult.conditionDescription = this.conditionDescription;\n\t\tresult.condition = this.condition;\n\t\tresult.fallback = this.fallback;\n\t\tresult.description = this.description;\n\n\t\treturn result;\n\t}\n\n\tsetSupportedSession(sessionId: string, supported: boolean): void {\n\t\tif (supported) {\n\t\t\tthis.supportedSessions.add(sessionId);\n\t\t}\n\t\telse {\n\t\t\tthis.supportedSessions.delete(sessionId);\n\t\t}\n\t}\n\n\t/**\n\t * Used to specify which breakpoints to show when no session is specified.\n\t * Useful when no session is active and we want to show the exception breakpoints from the last session.\n\t */\n\tsetFallback(isFallback: boolean) {\n\t\tthis.fallback = isFallback;\n\t}\n\n\tget supported(): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks if the breakpoint is applicable for the specified session.\n\t * If sessionId is undefined, returns true if this breakpoint is a fallback breakpoint.\n\t */\n\tisSupportedSession(sessionId?: string): boolean {\n\t\treturn sessionId ? this.supportedSessions.has(sessionId) : this.fallback;\n\t}\n\n\tmatches(filter: DebugProtocol.ExceptionBreakpointsFilter) {\n\t\treturn this.filter === filter.filter && this.label === filter.label && this.supportsCondition === !!filter.supportsCondition && this.conditionDescription === filter.conditionDescription && this.description === filter.description;\n\t}\n\n\toverride toString(): string {\n\t\treturn this.label;\n\t}\n}\n\nexport class InstructionBreakpoint extends BaseBreakpoint implements IInstructionBreakpoint {\n\n\tconstructor(\n\t\tpublic readonly instructionReference: string,\n\t\tpublic readonly offset: number,\n\t\tpublic readonly canPersist: boolean,\n\t\tenabled: boolean,\n\t\thitCondition: string | undefined,\n\t\tcondition: string | undefined,\n\t\tlogMessage: string | undefined,\n\t\tpublic readonly address: bigint,\n\t\tid = generateUuid()\n\t) {\n\t\tsuper(enabled, hitCondition, condition, logMessage, id);\n\t}\n\n\toverride toJSON(): DebugProtocol.InstructionBreakpoint {\n\t\tconst result = super.toJSON();\n\t\tresult.instructionReference = this.instructionReference;\n\t\tresult.offset = this.offset;\n\t\treturn result;\n\t}\n\n\tget supported(): boolean {\n\t\tif (!this.data) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.data.supportsInstructionBreakpoints;\n\t}\n\n\toverride toString(): string {\n\t\treturn this.instructionReference;\n\t}\n}\n\nexport class ThreadAndSessionIds implements ITreeElement {\n\tconstructor(public sessionId: string, public threadId: number) { }\n\n\tgetId(): string {\n\t\treturn `${this.sessionId}:${this.threadId}`;\n\t}\n}\n\nexport class DebugModel extends Disposable implements IDebugModel {\n\n\tprivate sessions: IDebugSession[];\n\tprivate schedulers = new Map<string, { scheduler: RunOnceScheduler; completeDeferred: DeferredPromise<void> }>();\n\tprivate breakpointsActivated = true;\n\tprivate readonly _onDidChangeBreakpoints = this._register(new Emitter<IBreakpointsChangeEvent | undefined>());\n\tprivate readonly _onDidChangeCallStack = this._register(new Emitter<void>());\n\tprivate readonly _onDidChangeWatchExpressions = this._register(new Emitter<IExpression | undefined>());\n\tprivate breakpoints!: Breakpoint[];\n\tprivate functionBreakpoints!: FunctionBreakpoint[];\n\tprivate exceptionBreakpoints!: ExceptionBreakpoint[];\n\tprivate dataBreakpoints!: DataBreakpoint[];\n\tprivate watchExpressions!: Expression[];\n\tprivate instructionBreakpoints: InstructionBreakpoint[];\n\n\tconstructor(\n\t\tdebugStorage: DebugStorage,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(autorun(reader => {\n\t\t\tthis.breakpoints = debugStorage.breakpoints.read(reader);\n\t\t\tthis.functionBreakpoints = debugStorage.functionBreakpoints.read(reader);\n\t\t\tthis.exceptionBreakpoints = debugStorage.exceptionBreakpoints.read(reader);\n\t\t\tthis.dataBreakpoints = debugStorage.dataBreakpoints.read(reader);\n\t\t\tthis._onDidChangeBreakpoints.fire(undefined);\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tthis.watchExpressions = debugStorage.watchExpressions.read(reader);\n\t\t\tthis._onDidChangeWatchExpressions.fire(undefined);\n\t\t}));\n\n\t\tthis.instructionBreakpoints = [];\n\t\tthis.sessions = [];\n\t}\n\n\tgetId(): string {\n\t\treturn 'root';\n\t}\n\n\tgetSession(sessionId: string | undefined, includeInactive = false): IDebugSession | undefined {\n\t\tif (sessionId) {\n\t\t\treturn this.getSessions(includeInactive).find(s => s.getId() === sessionId);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetSessions(includeInactive = false): IDebugSession[] {\n\t\t// By default do not return inactive sessions.\n\t\t// However we are still holding onto inactive sessions due to repl and debug service session revival (eh scenario)\n\t\treturn this.sessions.filter(s => includeInactive || s.state !== State.Inactive);\n\t}\n\n\taddSession(session: IDebugSession): void {\n\t\tthis.sessions = this.sessions.filter(s => {\n\t\t\tif (s.getId() === session.getId()) {\n\t\t\t\t// Make sure to de-dupe if a session is re-initialized. In case of EH debugging we are adding a session again after an attach.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (s.state === State.Inactive && s.configuration.name === session.configuration.name) {\n\t\t\t\t// Make sure to remove all inactive sessions that are using the same configuration as the new session\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tlet i = 1;\n\t\twhile (this.sessions.some(s => s.getLabel() === session.getLabel())) {\n\t\t\tsession.setName(`${session.configuration.name} ${++i}`);\n\t\t}\n\n\t\tlet index = -1;\n\t\tif (session.parentSession) {\n\t\t\t// Make sure that child sessions are placed after the parent session\n\t\t\tindex = findLastIdx(this.sessions, s => s.parentSession === session.parentSession || s === session.parentSession);\n\t\t}\n\t\tif (index >= 0) {\n\t\t\tthis.sessions.splice(index + 1, 0, session);\n\t\t} else {\n\t\t\tthis.sessions.push(session);\n\t\t}\n\t\tthis._onDidChangeCallStack.fire(undefined);\n\t}\n\n\tget onDidChangeBreakpoints(): Event<IBreakpointsChangeEvent | undefined> {\n\t\treturn this._onDidChangeBreakpoints.event;\n\t}\n\n\tget onDidChangeCallStack(): Event<void> {\n\t\treturn this._onDidChangeCallStack.event;\n\t}\n\n\tget onDidChangeWatchExpressions(): Event<IExpression | undefined> {\n\t\treturn this._onDidChangeWatchExpressions.event;\n\t}\n\n\trawUpdate(data: IRawModelUpdate): void {\n\t\tconst session = this.sessions.find(p => p.getId() === data.sessionId);\n\t\tif (session) {\n\t\t\tsession.rawUpdate(data);\n\t\t\tthis._onDidChangeCallStack.fire(undefined);\n\t\t}\n\t}\n\n\tclearThreads(id: string, removeThreads: boolean, reference: number | undefined = undefined): void {\n\t\tconst session = this.sessions.find(p => p.getId() === id);\n\t\tthis.schedulers.forEach(entry => {\n\t\t\tentry.scheduler.dispose();\n\t\t\tentry.completeDeferred.complete();\n\t\t});\n\t\tthis.schedulers.clear();\n\n\t\tif (session) {\n\t\t\tsession.clearThreads(removeThreads, reference);\n\t\t\tthis._onDidChangeCallStack.fire(undefined);\n\t\t}\n\t}\n\n\t/**\n\t * Update the call stack and notify the call stack view that changes have occurred.\n\t */\n\tasync fetchCallstack(thread: IThread, levels?: number): Promise<void> {\n\n\t\tif ((<Thread>thread).reachedEndOfCallStack) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst totalFrames = thread.stoppedDetails?.totalFrames;\n\t\tconst remainingFrames = (typeof totalFrames === 'number') ? (totalFrames - thread.getCallStack().length) : undefined;\n\n\t\tif (!levels || (remainingFrames && levels > remainingFrames)) {\n\t\t\tlevels = remainingFrames;\n\t\t}\n\n\t\tif (levels && levels > 0) {\n\t\t\tawait (<Thread>thread).fetchCallStack(levels);\n\t\t\tthis._onDidChangeCallStack.fire();\n\t\t}\n\n\t\treturn;\n\t}\n\n\trefreshTopOfCallstack(thread: Thread): { topCallStack: Promise<void>; wholeCallStack: Promise<void> } {\n\t\tif (thread.session.capabilities.supportsDelayedStackTraceLoading) {\n\t\t\t// For improved performance load the first stack frame and then load the rest async.\n\t\t\tlet topCallStack = Promise.resolve();\n\t\t\tconst wholeCallStack = new Promise<void>((c, e) => {\n\t\t\t\ttopCallStack = thread.fetchCallStack(1).then(() => {\n\t\t\t\t\tif (!this.schedulers.has(thread.getId())) {\n\t\t\t\t\t\tconst deferred = new DeferredPromise<void>();\n\t\t\t\t\t\tthis.schedulers.set(thread.getId(), {\n\t\t\t\t\t\t\tcompleteDeferred: deferred,\n\t\t\t\t\t\t\tscheduler: new RunOnceScheduler(() => {\n\t\t\t\t\t\t\t\tthread.fetchCallStack(19).then(() => {\n\t\t\t\t\t\t\t\t\tconst stale = thread.getStaleCallStack();\n\t\t\t\t\t\t\t\t\tconst current = thread.getCallStack();\n\t\t\t\t\t\t\t\t\tlet bottomOfCallStackChanged = stale.length !== current.length;\n\t\t\t\t\t\t\t\t\tfor (let i = 1; i < stale.length && !bottomOfCallStackChanged; i++) {\n\t\t\t\t\t\t\t\t\t\tbottomOfCallStackChanged = !stale[i].equals(current[i]);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (bottomOfCallStackChanged) {\n\t\t\t\t\t\t\t\t\t\tthis._onDidChangeCallStack.fire();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}).finally(() => {\n\t\t\t\t\t\t\t\t\tdeferred.complete();\n\t\t\t\t\t\t\t\t\tthis.schedulers.delete(thread.getId());\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, 420)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst entry = this.schedulers.get(thread.getId())!;\n\t\t\t\t\tentry.scheduler.schedule();\n\t\t\t\t\tentry.completeDeferred.p.then(c, e);\n\t\t\t\t\tthis._onDidChangeCallStack.fire();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn { topCallStack, wholeCallStack };\n\t\t}\n\n\t\tconst wholeCallStack = thread.fetchCallStack();\n\t\treturn { wholeCallStack, topCallStack: wholeCallStack };\n\t}\n\n\tgetBreakpoints(filter?: { uri?: uri; originalUri?: uri; lineNumber?: number; column?: number; enabledOnly?: boolean }): IBreakpoint[] {\n\t\tif (filter) {\n\t\t\tconst uriStr = filter.uri?.toString();\n\t\t\tconst originalUriStr = filter.originalUri?.toString();\n\t\t\treturn this.breakpoints.filter(bp => {\n\t\t\t\tif (uriStr && bp.uri.toString() !== uriStr) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (originalUriStr && bp.originalUri.toString() !== originalUriStr) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (filter.lineNumber && bp.lineNumber !== filter.lineNumber) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (filter.column && bp.column !== filter.column) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (filter.enabledOnly && (!this.breakpointsActivated || !bp.enabled)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\n\t\treturn this.breakpoints;\n\t}\n\n\tgetFunctionBreakpoints(): IFunctionBreakpoint[] {\n\t\treturn this.functionBreakpoints;\n\t}\n\n\tgetDataBreakpoints(): IDataBreakpoint[] {\n\t\treturn this.dataBreakpoints;\n\t}\n\n\tgetExceptionBreakpoints(): IExceptionBreakpoint[] {\n\t\treturn this.exceptionBreakpoints;\n\t}\n\n\tgetExceptionBreakpointsForSession(sessionId?: string): IExceptionBreakpoint[] {\n\t\treturn this.exceptionBreakpoints.filter(ebp => ebp.isSupportedSession(sessionId));\n\t}\n\n\tgetInstructionBreakpoints(): IInstructionBreakpoint[] {\n\t\treturn this.instructionBreakpoints;\n\t}\n\n\tsetExceptionBreakpointsForSession(sessionId: string, data: DebugProtocol.ExceptionBreakpointsFilter[]): void {\n\t\tif (data) {\n\t\t\tlet didChangeBreakpoints = false;\n\t\t\tdata.forEach(d => {\n\t\t\t\tlet ebp = this.exceptionBreakpoints.filter((exbp) => exbp.matches(d)).pop();\n\n\t\t\t\tif (!ebp) {\n\t\t\t\t\tdidChangeBreakpoints = true;\n\t\t\t\t\tebp = new ExceptionBreakpoint(d.filter, d.label, !!d.default, !!d.supportsCondition, undefined /* condition */, d.description, d.conditionDescription);\n\t\t\t\t\tthis.exceptionBreakpoints.push(ebp);\n\t\t\t\t}\n\n\t\t\t\tebp.setSupportedSession(sessionId, true);\n\t\t\t});\n\n\t\t\tif (didChangeBreakpoints) {\n\t\t\t\tthis._onDidChangeBreakpoints.fire(undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\tremoveExceptionBreakpointsForSession(sessionId: string): void {\n\t\tthis.exceptionBreakpoints.forEach(ebp => ebp.setSupportedSession(sessionId, false));\n\t}\n\n\t// Set last focused session as fallback session.\n\t// This is done to keep track of the exception breakpoints to show when no session is active.\n\tsetExceptionBreakpointFallbackSession(sessionId: string): void {\n\t\tthis.exceptionBreakpoints.forEach(ebp => ebp.setFallback(ebp.isSupportedSession(sessionId)));\n\t}\n\n\tsetExceptionBreakpointCondition(exceptionBreakpoint: IExceptionBreakpoint, condition: string | undefined): void {\n\t\t(exceptionBreakpoint as ExceptionBreakpoint).condition = condition;\n\t\tthis._onDidChangeBreakpoints.fire(undefined);\n\t}\n\n\tareBreakpointsActivated(): boolean {\n\t\treturn this.breakpointsActivated;\n\t}\n\n\tsetBreakpointsActivated(activated: boolean): void {\n\t\tthis.breakpointsActivated = activated;\n\t\tthis._onDidChangeBreakpoints.fire(undefined);\n\t}\n\n\taddBreakpoints(uri: uri, rawData: IBreakpointData[], fireEvent = true): IBreakpoint[] {\n\t\tconst newBreakpoints = rawData.map(rawBp => new Breakpoint(uri, rawBp.lineNumber, rawBp.column, rawBp.enabled === false ? false : true, rawBp.condition, rawBp.hitCondition, rawBp.logMessage, undefined, this.textFileService, this.uriIdentityService, this.logService, rawBp.id));\n\t\tthis.breakpoints = this.breakpoints.concat(newBreakpoints);\n\t\tthis.breakpointsActivated = true;\n\t\tthis.sortAndDeDup();\n\n\t\tif (fireEvent) {\n\t\t\tthis._onDidChangeBreakpoints.fire({ added: newBreakpoints, sessionOnly: false });\n\t\t}\n\n\t\treturn newBreakpoints;\n\t}\n\n\tremoveBreakpoints(toRemove: IBreakpoint[]): void {\n\t\tthis.breakpoints = this.breakpoints.filter(bp => !toRemove.some(toRemove => toRemove.getId() === bp.getId()));\n\t\tthis._onDidChangeBreakpoints.fire({ removed: toRemove, sessionOnly: false });\n\t}\n\n\tupdateBreakpoints(data: Map<string, IBreakpointUpdateData>): void {\n\t\tconst updated: IBreakpoint[] = [];\n\t\tthis.breakpoints.forEach(bp => {\n\t\t\tconst bpData = data.get(bp.getId());\n\t\t\tif (bpData) {\n\t\t\t\tbp.update(bpData);\n\t\t\t\tupdated.push(bp);\n\t\t\t}\n\t\t});\n\t\tthis.sortAndDeDup();\n\t\tthis._onDidChangeBreakpoints.fire({ changed: updated, sessionOnly: false });\n\t}\n\n\tsetBreakpointSessionData(sessionId: string, capabilites: DebugProtocol.Capabilities, data: Map<string, DebugProtocol.Breakpoint> | undefined): void {\n\t\tthis.breakpoints.forEach(bp => {\n\t\t\tif (!data) {\n\t\t\t\tbp.setSessionData(sessionId, undefined);\n\t\t\t} else {\n\t\t\t\tconst bpData = data.get(bp.getId());\n\t\t\t\tif (bpData) {\n\t\t\t\t\tbp.setSessionData(sessionId, toBreakpointSessionData(bpData, capabilites));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.functionBreakpoints.forEach(fbp => {\n\t\t\tif (!data) {\n\t\t\t\tfbp.setSessionData(sessionId, undefined);\n\t\t\t} else {\n\t\t\t\tconst fbpData = data.get(fbp.getId());\n\t\t\t\tif (fbpData) {\n\t\t\t\t\tfbp.setSessionData(sessionId, toBreakpointSessionData(fbpData, capabilites));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.dataBreakpoints.forEach(dbp => {\n\t\t\tif (!data) {\n\t\t\t\tdbp.setSessionData(sessionId, undefined);\n\t\t\t} else {\n\t\t\t\tconst dbpData = data.get(dbp.getId());\n\t\t\t\tif (dbpData) {\n\t\t\t\t\tdbp.setSessionData(sessionId, toBreakpointSessionData(dbpData, capabilites));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.exceptionBreakpoints.forEach(ebp => {\n\t\t\tif (!data) {\n\t\t\t\tebp.setSessionData(sessionId, undefined);\n\t\t\t} else {\n\t\t\t\tconst ebpData = data.get(ebp.getId());\n\t\t\t\tif (ebpData) {\n\t\t\t\t\tebp.setSessionData(sessionId, toBreakpointSessionData(ebpData, capabilites));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.instructionBreakpoints.forEach(ibp => {\n\t\t\tif (!data) {\n\t\t\t\tibp.setSessionData(sessionId, undefined);\n\t\t\t} else {\n\t\t\t\tconst ibpData = data.get(ibp.getId());\n\t\t\t\tif (ibpData) {\n\t\t\t\t\tibp.setSessionData(sessionId, toBreakpointSessionData(ibpData, capabilites));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._onDidChangeBreakpoints.fire({\n\t\t\tsessionOnly: true\n\t\t});\n\t}\n\n\tgetDebugProtocolBreakpoint(breakpointId: string, sessionId: string): DebugProtocol.Breakpoint | undefined {\n\t\tconst bp = this.breakpoints.find(bp => bp.getId() === breakpointId);\n\t\tif (bp) {\n\t\t\treturn bp.getDebugProtocolBreakpoint(sessionId);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate sortAndDeDup(): void {\n\t\tthis.breakpoints = this.breakpoints.sort((first, second) => {\n\t\t\tif (first.uri.toString() !== second.uri.toString()) {\n\t\t\t\treturn resources.basenameOrAuthority(first.uri).localeCompare(resources.basenameOrAuthority(second.uri));\n\t\t\t}\n\t\t\tif (first.lineNumber === second.lineNumber) {\n\t\t\t\tif (first.column && second.column) {\n\t\t\t\t\treturn first.column - second.column;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn first.lineNumber - second.lineNumber;\n\t\t});\n\t\tthis.breakpoints = distinct(this.breakpoints, bp => `${bp.uri.toString()}:${bp.lineNumber}:${bp.column}`);\n\t}\n\n\tsetEnablement(element: IEnablement, enable: boolean): void {\n\t\tif (element instanceof Breakpoint || element instanceof FunctionBreakpoint || element instanceof ExceptionBreakpoint || element instanceof DataBreakpoint || element instanceof InstructionBreakpoint) {\n\t\t\tconst changed: Array<IBreakpoint | IFunctionBreakpoint | IDataBreakpoint | IInstructionBreakpoint> = [];\n\t\t\tif (element.enabled !== enable && (element instanceof Breakpoint || element instanceof FunctionBreakpoint || element instanceof DataBreakpoint || element instanceof InstructionBreakpoint)) {\n\t\t\t\tchanged.push(element);\n\t\t\t}\n\n\t\t\telement.enabled = enable;\n\t\t\tif (enable) {\n\t\t\t\tthis.breakpointsActivated = true;\n\t\t\t}\n\n\t\t\tthis._onDidChangeBreakpoints.fire({ changed: changed, sessionOnly: false });\n\t\t}\n\t}\n\n\tenableOrDisableAllBreakpoints(enable: boolean): void {\n\t\tconst changed: Array<IBreakpoint | IFunctionBreakpoint | IDataBreakpoint | IInstructionBreakpoint> = [];\n\n\t\tthis.breakpoints.forEach(bp => {\n\t\t\tif (bp.enabled !== enable) {\n\t\t\t\tchanged.push(bp);\n\t\t\t}\n\t\t\tbp.enabled = enable;\n\t\t});\n\t\tthis.functionBreakpoints.forEach(fbp => {\n\t\t\tif (fbp.enabled !== enable) {\n\t\t\t\tchanged.push(fbp);\n\t\t\t}\n\t\t\tfbp.enabled = enable;\n\t\t});\n\t\tthis.dataBreakpoints.forEach(dbp => {\n\t\t\tif (dbp.enabled !== enable) {\n\t\t\t\tchanged.push(dbp);\n\t\t\t}\n\t\t\tdbp.enabled = enable;\n\t\t});\n\t\tthis.instructionBreakpoints.forEach(ibp => {\n\t\t\tif (ibp.enabled !== enable) {\n\t\t\t\tchanged.push(ibp);\n\t\t\t}\n\t\t\tibp.enabled = enable;\n\t\t});\n\n\t\tif (enable) {\n\t\t\tthis.breakpointsActivated = true;\n\t\t}\n\n\t\tthis._onDidChangeBreakpoints.fire({ changed: changed, sessionOnly: false });\n\t}\n\n\taddFunctionBreakpoint(functionName: string, id?: string): IFunctionBreakpoint {\n\t\tconst newFunctionBreakpoint = new FunctionBreakpoint(functionName, true, undefined, undefined, undefined, id);\n\t\tthis.functionBreakpoints.push(newFunctionBreakpoint);\n\t\tthis._onDidChangeBreakpoints.fire({ added: [newFunctionBreakpoint], sessionOnly: false });\n\n\t\treturn newFunctionBreakpoint;\n\t}\n\n\tupdateFunctionBreakpoint(id: string, update: { name?: string; hitCondition?: string; condition?: string }): void {\n\t\tconst functionBreakpoint = this.functionBreakpoints.find(fbp => fbp.getId() === id);\n\t\tif (functionBreakpoint) {\n\t\t\tif (typeof update.name === 'string') {\n\t\t\t\tfunctionBreakpoint.name = update.name;\n\t\t\t}\n\t\t\tif (typeof update.condition === 'string') {\n\t\t\t\tfunctionBreakpoint.condition = update.condition;\n\t\t\t}\n\t\t\tif (typeof update.hitCondition === 'string') {\n\t\t\t\tfunctionBreakpoint.hitCondition = update.hitCondition;\n\t\t\t}\n\t\t\tthis._onDidChangeBreakpoints.fire({ changed: [functionBreakpoint], sessionOnly: false });\n\t\t}\n\t}\n\n\tremoveFunctionBreakpoints(id?: string): void {\n\t\tlet removed: FunctionBreakpoint[];\n\t\tif (id) {\n\t\t\tremoved = this.functionBreakpoints.filter(fbp => fbp.getId() === id);\n\t\t\tthis.functionBreakpoints = this.functionBreakpoints.filter(fbp => fbp.getId() !== id);\n\t\t} else {\n\t\t\tremoved = this.functionBreakpoints;\n\t\t\tthis.functionBreakpoints = [];\n\t\t}\n\t\tthis._onDidChangeBreakpoints.fire({ removed, sessionOnly: false });\n\t}\n\n\taddDataBreakpoint(label: string, dataId: string, canPersist: boolean, accessTypes: DebugProtocol.DataBreakpointAccessType[] | undefined, accessType: DebugProtocol.DataBreakpointAccessType): void {\n\t\tconst newDataBreakpoint = new DataBreakpoint(label, dataId, canPersist, true, undefined, undefined, undefined, accessTypes, accessType);\n\t\tthis.dataBreakpoints.push(newDataBreakpoint);\n\t\tthis._onDidChangeBreakpoints.fire({ added: [newDataBreakpoint], sessionOnly: false });\n\t}\n\n\tremoveDataBreakpoints(id?: string): void {\n\t\tlet removed: DataBreakpoint[];\n\t\tif (id) {\n\t\t\tremoved = this.dataBreakpoints.filter(fbp => fbp.getId() === id);\n\t\t\tthis.dataBreakpoints = this.dataBreakpoints.filter(fbp => fbp.getId() !== id);\n\t\t} else {\n\t\t\tremoved = this.dataBreakpoints;\n\t\t\tthis.dataBreakpoints = [];\n\t\t}\n\t\tthis._onDidChangeBreakpoints.fire({ removed, sessionOnly: false });\n\t}\n\n\taddInstructionBreakpoint(instructionReference: string, offset: number, address: bigint, condition?: string, hitCondition?: string): void {\n\t\tconst newInstructionBreakpoint = new InstructionBreakpoint(instructionReference, offset, false, true, hitCondition, condition, undefined, address);\n\t\tthis.instructionBreakpoints.push(newInstructionBreakpoint);\n\t\tthis._onDidChangeBreakpoints.fire({ added: [newInstructionBreakpoint], sessionOnly: true });\n\t}\n\n\tremoveInstructionBreakpoints(instructionReference?: string, offset?: number): void {\n\t\tlet removed: InstructionBreakpoint[] = [];\n\t\tif (instructionReference) {\n\t\t\tfor (let i = 0; i < this.instructionBreakpoints.length; i++) {\n\t\t\t\tconst ibp = this.instructionBreakpoints[i];\n\t\t\t\tif (ibp.instructionReference === instructionReference && (offset === undefined || ibp.offset === offset)) {\n\t\t\t\t\tremoved.push(ibp);\n\t\t\t\t\tthis.instructionBreakpoints.splice(i--, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tremoved = this.instructionBreakpoints;\n\t\t\tthis.instructionBreakpoints = [];\n\t\t}\n\t\tthis._onDidChangeBreakpoints.fire({ removed, sessionOnly: false });\n\t}\n\n\tgetWatchExpressions(): Expression[] {\n\t\treturn this.watchExpressions;\n\t}\n\n\taddWatchExpression(name?: string): IExpression {\n\t\tconst we = new Expression(name || '');\n\t\tthis.watchExpressions.push(we);\n\t\tthis._onDidChangeWatchExpressions.fire(we);\n\n\t\treturn we;\n\t}\n\n\trenameWatchExpression(id: string, newName: string): void {\n\t\tconst filtered = this.watchExpressions.filter(we => we.getId() === id);\n\t\tif (filtered.length === 1) {\n\t\t\tfiltered[0].name = newName;\n\t\t\tthis._onDidChangeWatchExpressions.fire(filtered[0]);\n\t\t}\n\t}\n\n\tremoveWatchExpressions(id: string | null = null): void {\n\t\tthis.watchExpressions = id ? this.watchExpressions.filter(we => we.getId() !== id) : [];\n\t\tthis._onDidChangeWatchExpressions.fire(undefined);\n\t}\n\n\tmoveWatchExpression(id: string, position: number): void {\n\t\tconst we = this.watchExpressions.find(we => we.getId() === id);\n\t\tif (we) {\n\t\t\tthis.watchExpressions = this.watchExpressions.filter(we => we.getId() !== id);\n\t\t\tthis.watchExpressions = this.watchExpressions.slice(0, position).concat(we, this.watchExpressions.slice(position));\n\t\t\tthis._onDidChangeWatchExpressions.fire(undefined);\n\t\t}\n\t}\n\n\tsourceIsNotAvailable(uri: uri): void {\n\t\tthis.sessions.forEach(s => {\n\t\t\tconst source = s.getSourceForUri(uri);\n\t\t\tif (source) {\n\t\t\t\tsource.available = false;\n\t\t\t}\n\t\t});\n\t\tthis._onDidChangeCallStack.fire(undefined);\n\t}\n}\n"]}