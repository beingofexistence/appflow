{"version":3,"sources":["vs/workbench/contrib/debug/common/debugger.ts"],"names":[],"mappings":"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","file":"debugger.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { isObject } from 'vs/base/common/types';\nimport { IJSONSchema, IJSONSchemaMap, IJSONSchemaSnippet } from 'vs/base/common/jsonSchema';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IConfig, IDebuggerContribution, IDebugAdapter, IDebugger, IDebugSession, IAdapterManager, IDebugService, debuggerDisabledMessage, IDebuggerMetadata } from 'vs/workbench/contrib/debug/common/debug';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport * as ConfigurationResolverUtils from 'vs/workbench/services/configurationResolver/common/configurationResolverUtils';\nimport { ITextResourcePropertiesService } from 'vs/editor/common/services/textResourceConfiguration';\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\nimport { isDebuggerMainContribution } from 'vs/workbench/contrib/debug/common/debugUtils';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { ITelemetryEndpoint } from 'vs/platform/telemetry/common/telemetry';\nimport { cleanRemoteAuthority } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { ContextKeyExpr, ContextKeyExpression, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { filter } from 'vs/base/common/objects';\n\nexport class Debugger implements IDebugger, IDebuggerMetadata {\n\n\tprivate debuggerContribution: IDebuggerContribution;\n\tprivate mergedExtensionDescriptions: IExtensionDescription[] = [];\n\tprivate mainExtensionDescription: IExtensionDescription | undefined;\n\n\tprivate debuggerWhen: ContextKeyExpression | undefined;\n\tprivate debuggerHiddenWhen: ContextKeyExpression | undefined;\n\n\tconstructor(\n\t\tprivate adapterManager: IAdapterManager,\n\t\tdbgContribution: IDebuggerContribution,\n\t\textensionDescription: IExtensionDescription,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITextResourcePropertiesService private readonly resourcePropertiesService: ITextResourcePropertiesService,\n\t\t@IConfigurationResolverService private readonly configurationResolverService: IConfigurationResolverService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tthis.debuggerContribution = { type: dbgContribution.type };\n\t\tthis.merge(dbgContribution, extensionDescription);\n\n\t\tthis.debuggerWhen = typeof this.debuggerContribution.when === 'string' ? ContextKeyExpr.deserialize(this.debuggerContribution.when) : undefined;\n\t\tthis.debuggerHiddenWhen = typeof this.debuggerContribution.hiddenWhen === 'string' ? ContextKeyExpr.deserialize(this.debuggerContribution.hiddenWhen) : undefined;\n\t}\n\n\tmerge(otherDebuggerContribution: IDebuggerContribution, extensionDescription: IExtensionDescription): void {\n\n\t\t/**\n\t\t * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n\t\t * if existing non-structured properties on the destination should be overwritten or not. Defaults to true (overwrite).\n\t\t */\n\t\tfunction mixin(destination: any, source: any, overwrite: boolean, level = 0): any {\n\n\t\t\tif (!isObject(destination)) {\n\t\t\t\treturn source;\n\t\t\t}\n\n\t\t\tif (isObject(source)) {\n\t\t\t\tObject.keys(source).forEach(key => {\n\t\t\t\t\tif (key !== '__proto__') {\n\t\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\t\tmixin(destination[key], source[key], overwrite, level + 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (key in destination) {\n\t\t\t\t\t\t\t\tif (overwrite) {\n\t\t\t\t\t\t\t\t\tif (level === 0 && key === 'type') {\n\t\t\t\t\t\t\t\t\t\t// don't merge the 'type' property\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn destination;\n\t\t}\n\n\t\t// only if not already merged\n\t\tif (this.mergedExtensionDescriptions.indexOf(extensionDescription) < 0) {\n\n\t\t\t// remember all extensions that have been merged for this debugger\n\t\t\tthis.mergedExtensionDescriptions.push(extensionDescription);\n\n\t\t\t// merge new debugger contribution into existing contributions (and don't overwrite values in built-in extensions)\n\t\t\tmixin(this.debuggerContribution, otherDebuggerContribution, extensionDescription.isBuiltin);\n\n\t\t\t// remember the extension that is considered the \"main\" debugger contribution\n\t\t\tif (isDebuggerMainContribution(otherDebuggerContribution)) {\n\t\t\t\tthis.mainExtensionDescription = extensionDescription;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync startDebugging(configuration: IConfig, parentSessionId: string): Promise<boolean> {\n\t\tconst parentSession = this.debugService.getModel().getSession(parentSessionId);\n\t\treturn await this.debugService.startDebugging(undefined, configuration, { parentSession }, undefined);\n\t}\n\n\tasync createDebugAdapter(session: IDebugSession): Promise<IDebugAdapter> {\n\t\tawait this.adapterManager.activateDebuggers('onDebugAdapterProtocolTracker', this.type);\n\t\tconst da = this.adapterManager.createDebugAdapter(session);\n\t\tif (da) {\n\t\t\treturn Promise.resolve(da);\n\t\t}\n\t\tthrow new Error(nls.localize('cannot.find.da', \"Cannot find debug adapter for type '{0}'.\", this.type));\n\t}\n\n\tasync substituteVariables(folder: IWorkspaceFolder | undefined, config: IConfig): Promise<IConfig> {\n\t\tconst substitutedConfig = await this.adapterManager.substituteVariables(this.type, folder, config);\n\t\treturn await this.configurationResolverService.resolveWithInteractionReplace(folder, substitutedConfig, 'launch', this.variables, substitutedConfig.__configurationTarget);\n\t}\n\n\trunInTerminal(args: DebugProtocol.RunInTerminalRequestArguments, sessionId: string): Promise<number | undefined> {\n\t\treturn this.adapterManager.runInTerminal(this.type, args, sessionId);\n\t}\n\n\tget label(): string {\n\t\treturn this.debuggerContribution.label || this.debuggerContribution.type;\n\t}\n\n\tget type(): string {\n\t\treturn this.debuggerContribution.type;\n\t}\n\n\tget variables(): { [key: string]: string } | undefined {\n\t\treturn this.debuggerContribution.variables;\n\t}\n\n\tget configurationSnippets(): IJSONSchemaSnippet[] | undefined {\n\t\treturn this.debuggerContribution.configurationSnippets;\n\t}\n\n\tget languages(): string[] | undefined {\n\t\treturn this.debuggerContribution.languages;\n\t}\n\n\tget when(): ContextKeyExpression | undefined {\n\t\treturn this.debuggerWhen;\n\t}\n\n\tget hiddenWhen(): ContextKeyExpression | undefined {\n\t\treturn this.debuggerHiddenWhen;\n\t}\n\n\tget enabled() {\n\t\treturn !this.debuggerWhen || this.contextKeyService.contextMatchesRules(this.debuggerWhen);\n\t}\n\n\tget isHiddenFromDropdown() {\n\t\tif (!this.debuggerHiddenWhen) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.contextKeyService.contextMatchesRules(this.debuggerHiddenWhen);\n\t}\n\n\tget strings() {\n\t\treturn this.debuggerContribution.strings ?? (this.debuggerContribution as any).uiMessages;\n\t}\n\n\tinterestedInLanguage(languageId: string): boolean {\n\t\treturn !!(this.languages && this.languages.indexOf(languageId) >= 0);\n\t}\n\n\thasInitialConfiguration(): boolean {\n\t\treturn !!this.debuggerContribution.initialConfigurations;\n\t}\n\n\thasConfigurationProvider(): boolean {\n\t\treturn this.debugService.getConfigurationManager().hasDebugConfigurationProvider(this.type);\n\t}\n\n\tgetInitialConfigurationContent(initialConfigs?: IConfig[]): Promise<string> {\n\t\t// at this point we got some configs from the package.json and/or from registered DebugConfigurationProviders\n\t\tlet initialConfigurations = this.debuggerContribution.initialConfigurations || [];\n\t\tif (initialConfigs) {\n\t\t\tinitialConfigurations = initialConfigurations.concat(initialConfigs);\n\t\t}\n\n\t\tconst eol = this.resourcePropertiesService.getEOL(URI.from({ scheme: Schemas.untitled, path: '1' })) === '\\r\\n' ? '\\r\\n' : '\\n';\n\t\tconst configs = JSON.stringify(initialConfigurations, null, '\\t').split('\\n').map(line => '\\t' + line).join(eol).trim();\n\t\tconst comment1 = nls.localize('launch.config.comment1', \"Use IntelliSense to learn about possible attributes.\");\n\t\tconst comment2 = nls.localize('launch.config.comment2', \"Hover to view descriptions of existing attributes.\");\n\t\tconst comment3 = nls.localize('launch.config.comment3', \"For more information, visit: {0}\", 'https://go.microsoft.com/fwlink/?linkid=830387');\n\n\t\tlet content = [\n\t\t\t'{',\n\t\t\t`\\t// ${comment1}`,\n\t\t\t`\\t// ${comment2}`,\n\t\t\t`\\t// ${comment3}`,\n\t\t\t`\\t\"version\": \"0.2.0\",`,\n\t\t\t`\\t\"configurations\": ${configs}`,\n\t\t\t'}'\n\t\t].join(eol);\n\n\t\t// fix formatting\n\t\tconst editorConfig = this.configurationService.getValue<any>();\n\t\tif (editorConfig.editor && editorConfig.editor.insertSpaces) {\n\t\t\tcontent = content.replace(new RegExp('\\t', 'g'), ' '.repeat(editorConfig.editor.tabSize));\n\t\t}\n\n\t\treturn Promise.resolve(content);\n\t}\n\n\tgetMainExtensionDescriptor(): IExtensionDescription {\n\t\treturn this.mainExtensionDescription || this.mergedExtensionDescriptions[0];\n\t}\n\n\tgetCustomTelemetryEndpoint(): ITelemetryEndpoint | undefined {\n\t\tconst aiKey = this.debuggerContribution.aiKey;\n\t\tif (!aiKey) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst sendErrorTelemtry = cleanRemoteAuthority(this.environmentService.remoteAuthority) !== 'other';\n\t\treturn {\n\t\t\tid: `${this.getMainExtensionDescriptor().publisher}.${this.type}`,\n\t\t\taiKey,\n\t\t\tsendErrorTelemetry: sendErrorTelemtry\n\t\t};\n\t}\n\n\tgetSchemaAttributes(definitions: IJSONSchemaMap): IJSONSchema[] | null {\n\n\t\tif (!this.debuggerContribution.configurationAttributes) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// fill in the default configuration attributes shared by all adapters.\n\t\treturn Object.keys(this.debuggerContribution.configurationAttributes).map(request => {\n\t\t\tconst definitionId = `${this.type}:${request}`;\n\t\t\tconst platformSpecificDefinitionId = `${this.type}:${request}:platform`;\n\t\t\tconst attributes: IJSONSchema = this.debuggerContribution.configurationAttributes[request];\n\t\t\tconst defaultRequired = ['name', 'type', 'request'];\n\t\t\tattributes.required = attributes.required && attributes.required.length ? defaultRequired.concat(attributes.required) : defaultRequired;\n\t\t\tattributes.additionalProperties = false;\n\t\t\tattributes.type = 'object';\n\t\t\tif (!attributes.properties) {\n\t\t\t\tattributes.properties = {};\n\t\t\t}\n\t\t\tconst properties = attributes.properties;\n\t\t\tproperties['type'] = {\n\t\t\t\tenum: [this.type],\n\t\t\t\tenumDescriptions: [this.label],\n\t\t\t\tdescription: nls.localize('debugType', \"Type of configuration.\"),\n\t\t\t\tpattern: '^(?!node2)',\n\t\t\t\tdeprecationMessage: this.debuggerContribution.deprecated || (this.enabled ? undefined : debuggerDisabledMessage(this.type)),\n\t\t\t\tdoNotSuggest: !!this.debuggerContribution.deprecated,\n\t\t\t\terrorMessage: nls.localize('debugTypeNotRecognised', \"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.\"),\n\t\t\t\tpatternErrorMessage: nls.localize('node2NotSupported', \"\\\"node2\\\" is no longer supported, use \\\"node\\\" instead and set the \\\"protocol\\\" attribute to \\\"inspector\\\".\")\n\t\t\t};\n\t\t\tproperties['request'] = {\n\t\t\t\tenum: [request],\n\t\t\t\tdescription: nls.localize('debugRequest', \"Request type of configuration. Can be \\\"launch\\\" or \\\"attach\\\".\"),\n\t\t\t};\n\t\t\tfor (const prop in definitions['common'].properties) {\n\t\t\t\tproperties[prop] = {\n\t\t\t\t\t$ref: `#/definitions/common/properties/${prop}`\n\t\t\t\t};\n\t\t\t}\n\t\t\tObject.keys(properties).forEach(name => {\n\t\t\t\t// Use schema allOf property to get independent error reporting #21113\n\t\t\t\tConfigurationResolverUtils.applyDeprecatedVariableMessage(properties[name]);\n\t\t\t});\n\n\t\t\tdefinitions[definitionId] = { ...attributes };\n\t\t\tdefinitions[platformSpecificDefinitionId] = {\n\t\t\t\ttype: 'object',\n\t\t\t\tadditionalProperties: false,\n\t\t\t\tproperties: filter(properties, key => key !== 'type' && key !== 'request' && key !== 'name')\n\t\t\t};\n\n\t\t\t// Don't add the OS props to the real attributes object so they don't show up in 'definitions'\n\t\t\tconst attributesCopy = { ...attributes };\n\t\t\tattributesCopy.properties = {\n\t\t\t\t...properties,\n\t\t\t\t...{\n\t\t\t\t\twindows: {\n\t\t\t\t\t\t$ref: `#/definitions/${platformSpecificDefinitionId}`,\n\t\t\t\t\t\tdescription: nls.localize('debugWindowsConfiguration', \"Windows specific launch configuration attributes.\"),\n\t\t\t\t\t},\n\t\t\t\t\tosx: {\n\t\t\t\t\t\t$ref: `#/definitions/${platformSpecificDefinitionId}`,\n\t\t\t\t\t\tdescription: nls.localize('debugOSXConfiguration', \"OS X specific launch configuration attributes.\"),\n\t\t\t\t\t},\n\t\t\t\t\tlinux: {\n\t\t\t\t\t\t$ref: `#/definitions/${platformSpecificDefinitionId}`,\n\t\t\t\t\t\tdescription: nls.localize('debugLinuxConfiguration', \"Linux specific launch configuration attributes.\"),\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn attributesCopy;\n\t\t});\n\t}\n}\n"]}