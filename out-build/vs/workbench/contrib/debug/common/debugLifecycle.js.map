{"version":3,"sources":["vs/workbench/contrib/debug/common/debugLifecycle.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IASzF,IAAM,IAAI,GAAV,MAAM,IAAI;QAChB,YACoB,gBAAqB,EACR,CAAiB,EACT,CAAyB,EAChC,CAAkB;YAFnB,MAAC,GAAD,CAAC,CAAgB;YACT,MAAC,GAAD,CAAC,CAAwB;YAChC,MAAC,GAAD,CAAC,CAAiB;YAEnD,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,EAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAkB,CAAC,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;QACvG,CAAC;QAEO,CAAC,CAAkB,OAAuB;YACjD,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAY,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,SAAS,CAAC,CAAC;YAC3G,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC9B,OAAO,KAAK,CAAC;aACb;YAED,MAAM,mBAAmB,GAAG,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAsB,OAAO,CAAC,CAAC,aAAa,CAAC;YAC3G,IAAI,mBAAmB,KAAK,OAAO,EAAE;gBACpC,OAAO,KAAK,CAAC;aACb;YAED,OAAO,IAAI,CAAC,CAAC,CAA2B,YAAY,CAAC,MAAM,CAAC,CAAC;QAC9D,CAAC;QAEO,KAAK,CAAC,CAAC,CAA2B,WAAmB;YAC5D,IAAI,OAAe,CAAC;YACpB,IAAI,WAAW,KAAK,CAAC,EAAE;gBACtB,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,CAA6C,EAAE,IAAqE,CAAC,CAAC;aAC7I;iBAAM;gBACN,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,CAA2C,EAAE,IAAsE,CAAC,CAAC;aAC5I;YACD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,CAAC,CAAa,OAAO,CAAC;gBAC5C,OAAO;gBACP,IAAI,EAAE,SAAS;gBACf,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAyD,CAAvD,CAAyD,EAAtD,EAAE,AAAsE,CAAC,WAA3D,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;aACnF,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QACvB,CAAC;KACD,CAAA;IAtCY,oBAAI;mBAAJ,IAAI;QAEd,WAAA,eAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,aAAG,CAAA;OALO,IAAI,CAsChB","file":"debugLifecycle.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IDebugConfiguration, IDebugService } from 'vs/workbench/contrib/debug/common/debug';\nimport { ILifecycleService, ShutdownReason } from 'vs/workbench/services/lifecycle/common/lifecycle';\n\nexport class DebugLifecycle implements IWorkbenchContribution {\n\tconstructor(\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t) {\n\t\tlifecycleService.onBeforeShutdown(async e => e.veto(this.shouldVetoShutdown(e.reason), 'veto.debug'));\n\t}\n\n\tprivate shouldVetoShutdown(_reason: ShutdownReason): boolean | Promise<boolean> {\n\t\tconst rootSessions = this.debugService.getModel().getSessions().filter(s => s.parentSession === undefined);\n\t\tif (rootSessions.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst shouldConfirmOnExit = this.configurationService.getValue<IDebugConfiguration>('debug').confirmOnExit;\n\t\tif (shouldConfirmOnExit === 'never') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.showWindowCloseConfirmation(rootSessions.length);\n\t}\n\n\tprivate async showWindowCloseConfirmation(numSessions: number): Promise<boolean> {\n\t\tlet message: string;\n\t\tif (numSessions === 1) {\n\t\t\tmessage = nls.localize('debug.debugSessionCloseConfirmationSingular', \"There is an active debug session, are you sure you want to stop it?\");\n\t\t} else {\n\t\t\tmessage = nls.localize('debug.debugSessionCloseConfirmationPlural', \"There are active debug sessions, are you sure you want to stop them?\");\n\t\t}\n\t\tconst res = await this.dialogService.confirm({\n\t\t\tmessage,\n\t\t\ttype: 'warning',\n\t\t\tprimaryButton: nls.localize({ key: 'debug.stop', comment: ['&& denotes a mnemonic'] }, \"&&Stop Debugging\")\n\t\t});\n\t\treturn !res.confirmed;\n\t}\n}\n"]}