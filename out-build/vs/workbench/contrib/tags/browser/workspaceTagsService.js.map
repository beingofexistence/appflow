{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/tags/browser/workspaceTagsService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG,MAAa,IAAI;QAIhB,OAAO;YACN,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC5B,CAAC;QAED,KAAK,CAAC,uBAAuB,CAAC,SAAqB,EAAE,KAAqB;YACzE,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,uBAAuB,CAAC,YAAiB,EAAE,iBAA2B;YACrE,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC5B,CAAC;KACD;IAfD,oBAeC;IAED,IAAA,gBAAG,EAAe,oBAAI,EAAmB,IAAI,oCAAgD,CAAC","file":"workspaceTagsService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { WorkbenchState, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { URI } from 'vs/base/common/uri';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IWorkspaceTagsService, Tags } from 'vs/workbench/contrib/tags/common/workspaceTags';\n\nexport class NoOpWorkspaceTagsService implements IWorkspaceTagsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tgetTags(): Promise<Tags> {\n\t\treturn Promise.resolve({});\n\t}\n\n\tasync getTelemetryWorkspaceId(workspace: IWorkspace, state: WorkbenchState): Promise<string | undefined> {\n\t\treturn undefined;\n\t}\n\n\tgetHashedRemotesFromUri(workspaceUri: URI, stripEndingDotGit?: boolean): Promise<string[]> {\n\t\treturn Promise.resolve([]);\n\t}\n}\n\nregisterSingleton(IWorkspaceTagsService, NoOpWorkspaceTagsService, InstantiationType.Delayed);\n"]}