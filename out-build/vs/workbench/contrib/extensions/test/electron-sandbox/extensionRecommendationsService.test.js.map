{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/extensions/test/electron-sandbox/extensionRecommendationsService.test.ts"],"names":[],"mappings":"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","file":"extensionRecommendationsService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sinon from 'sinon';\nimport * as assert from 'assert';\nimport * as uuid from 'vs/base/common/uuid';\nimport {\n\tIExtensionGalleryService, IGalleryExtensionAssets, IGalleryExtension, IExtensionManagementService,\n\tDidUninstallExtensionEvent, InstallExtensionEvent, IExtensionTipsService, InstallExtensionResult, getTargetPlatform, UninstallExtensionEvent\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IWorkbenchExtensionEnablementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { TestLifecycleService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { TestContextService, TestStorageService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { TestExtensionTipsService, TestSharedProcessService } from 'vs/workbench/test/electron-sandbox/workbenchTestServices';\nimport { TestNotificationService } from 'vs/platform/notification/test/common/testNotificationService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { URI } from 'vs/base/common/uri';\nimport { testWorkspace } from 'vs/platform/workspace/test/common/testWorkspace';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { IPager } from 'vs/base/common/paging';\nimport { getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ConfigurationKey, IExtensionsWorkbenchService } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { TestExtensionEnablementService } from 'vs/workbench/services/extensionManagement/test/browser/extensionEnablementService.test';\nimport { IURLService } from 'vs/platform/url/common/url';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { INotificationService, Severity, IPromptChoice, IPromptOptions } from 'vs/platform/notification/common/notification';\nimport { NativeURLService } from 'vs/platform/url/common/urlService';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { ISharedProcessService } from 'vs/platform/ipc/electron-sandbox/services';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { NullLogService, ILogService } from 'vs/platform/log/common/log';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ExtensionRecommendationsService } from 'vs/workbench/contrib/extensions/browser/extensionRecommendationsService';\nimport { NoOpWorkspaceTagsService } from 'vs/workbench/contrib/tags/browser/workspaceTagsService';\nimport { IWorkspaceTagsService } from 'vs/workbench/contrib/tags/common/workspaceTags';\nimport { ExtensionsWorkbenchService } from 'vs/workbench/contrib/extensions/browser/extensionsWorkbenchService';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkspaceExtensionsConfigService, WorkspaceExtensionsConfigService } from 'vs/workbench/services/extensionRecommendations/common/workspaceExtensionsConfig';\nimport { IExtensionIgnoredRecommendationsService } from 'vs/workbench/services/extensionRecommendations/common/extensionRecommendations';\nimport { ExtensionIgnoredRecommendationsService } from 'vs/workbench/services/extensionRecommendations/common/extensionIgnoredRecommendationsService';\nimport { IExtensionRecommendationNotificationService } from 'vs/platform/extensionRecommendations/common/extensionRecommendations';\nimport { ExtensionRecommendationNotificationService } from 'vs/workbench/contrib/extensions/browser/extensionRecommendationNotificationService';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { MockContextKeyService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { InMemoryFileSystemProvider } from 'vs/platform/files/common/inMemoryFilesystemProvider';\nimport { joinPath } from 'vs/base/common/resources';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { platform } from 'vs/base/common/platform';\nimport { arch } from 'vs/base/common/process';\nimport { runWithFakedTimers } from 'vs/base/test/common/timeTravelScheduler';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { timeout } from 'vs/base/common/async';\n\nconst mockExtensionGallery: IGalleryExtension[] = [\n\taGalleryExtension('MockExtension1', {\n\t\tdisplayName: 'Mock Extension 1',\n\t\tversion: '1.5',\n\t\tpublisherId: 'mockPublisher1Id',\n\t\tpublisher: 'mockPublisher1',\n\t\tpublisherDisplayName: 'Mock Publisher 1',\n\t\tdescription: 'Mock Description',\n\t\tinstallCount: 1000,\n\t\trating: 4,\n\t\tratingCount: 100\n\t}, {\n\t\tdependencies: ['pub.1'],\n\t}, {\n\t\tmanifest: { uri: 'uri:manifest', fallbackUri: 'fallback:manifest' },\n\t\treadme: { uri: 'uri:readme', fallbackUri: 'fallback:readme' },\n\t\tchangelog: { uri: 'uri:changelog', fallbackUri: 'fallback:changlog' },\n\t\tdownload: { uri: 'uri:download', fallbackUri: 'fallback:download' },\n\t\ticon: { uri: 'uri:icon', fallbackUri: 'fallback:icon' },\n\t\tlicense: { uri: 'uri:license', fallbackUri: 'fallback:license' },\n\t\trepository: { uri: 'uri:repository', fallbackUri: 'fallback:repository' },\n\t\tsignature: { uri: 'uri:signature', fallbackUri: 'fallback:signature' },\n\t\tcoreTranslations: []\n\t}),\n\taGalleryExtension('MockExtension2', {\n\t\tdisplayName: 'Mock Extension 2',\n\t\tversion: '1.5',\n\t\tpublisherId: 'mockPublisher2Id',\n\t\tpublisher: 'mockPublisher2',\n\t\tpublisherDisplayName: 'Mock Publisher 2',\n\t\tdescription: 'Mock Description',\n\t\tinstallCount: 1000,\n\t\trating: 4,\n\t\tratingCount: 100\n\t}, {\n\t\tdependencies: ['pub.1', 'pub.2'],\n\t}, {\n\t\tmanifest: { uri: 'uri:manifest', fallbackUri: 'fallback:manifest' },\n\t\treadme: { uri: 'uri:readme', fallbackUri: 'fallback:readme' },\n\t\tchangelog: { uri: 'uri:changelog', fallbackUri: 'fallback:changlog' },\n\t\tdownload: { uri: 'uri:download', fallbackUri: 'fallback:download' },\n\t\ticon: { uri: 'uri:icon', fallbackUri: 'fallback:icon' },\n\t\tlicense: { uri: 'uri:license', fallbackUri: 'fallback:license' },\n\t\trepository: { uri: 'uri:repository', fallbackUri: 'fallback:repository' },\n\t\tsignature: { uri: 'uri:signature', fallbackUri: 'fallback:signature' },\n\t\tcoreTranslations: []\n\t})\n];\n\nconst mockExtensionLocal = [\n\t{\n\t\ttype: ExtensionType.User,\n\t\tidentifier: mockExtensionGallery[0].identifier,\n\t\tmanifest: {\n\t\t\tname: mockExtensionGallery[0].name,\n\t\t\tpublisher: mockExtensionGallery[0].publisher,\n\t\t\tversion: mockExtensionGallery[0].version\n\t\t},\n\t\tmetadata: null,\n\t\tpath: 'somepath',\n\t\treadmeUrl: 'some readmeUrl',\n\t\tchangelogUrl: 'some changelogUrl'\n\t},\n\t{\n\t\ttype: ExtensionType.User,\n\t\tidentifier: mockExtensionGallery[1].identifier,\n\t\tmanifest: {\n\t\t\tname: mockExtensionGallery[1].name,\n\t\t\tpublisher: mockExtensionGallery[1].publisher,\n\t\t\tversion: mockExtensionGallery[1].version\n\t\t},\n\t\tmetadata: null,\n\t\tpath: 'somepath',\n\t\treadmeUrl: 'some readmeUrl',\n\t\tchangelogUrl: 'some changelogUrl'\n\t}\n];\n\nconst mockTestData = {\n\trecommendedExtensions: [\n\t\t'mockPublisher1.mockExtension1',\n\t\t'MOCKPUBLISHER2.mockextension2',\n\t\t'badlyformattedextension',\n\t\t'MOCKPUBLISHER2.mockextension2',\n\t\t'unknown.extension'\n\t],\n\tvalidRecommendedExtensions: [\n\t\t'mockPublisher1.mockExtension1',\n\t\t'MOCKPUBLISHER2.mockextension2'\n\t]\n};\n\nfunction aPage<T>(...objects: T[]): IPager<T> {\n\treturn { firstPage: objects, total: objects.length, pageSize: objects.length, getPage: () => null! };\n}\n\nconst noAssets: IGalleryExtensionAssets = {\n\tchangelog: null,\n\tdownload: null!,\n\ticon: null!,\n\tlicense: null,\n\tmanifest: null,\n\treadme: null,\n\trepository: null,\n\tsignature: null,\n\tcoreTranslations: []\n};\n\nfunction aGalleryExtension(name: string, properties: any = {}, galleryExtensionProperties: any = {}, assets: IGalleryExtensionAssets = noAssets): IGalleryExtension {\n\tconst targetPlatform = getTargetPlatform(platform, arch);\n\tconst galleryExtension = <IGalleryExtension>Object.create({ name, publisher: 'pub', version: '1.0.0', allTargetPlatforms: [targetPlatform], properties: {}, assets: {}, ...properties });\n\tgalleryExtension.properties = { ...galleryExtension.properties, dependencies: [], targetPlatform, ...galleryExtensionProperties };\n\tgalleryExtension.assets = { ...galleryExtension.assets, ...assets };\n\tgalleryExtension.identifier = { id: getGalleryExtensionId(galleryExtension.publisher, galleryExtension.name), uuid: uuid.generateUuid() };\n\treturn <IGalleryExtension>galleryExtension;\n}\n\nsuite('ExtensionRecommendationsService Test', () => {\n\tlet disposableStore: DisposableStore;\n\tlet workspaceService: IWorkspaceContextService;\n\tlet instantiationService: TestInstantiationService;\n\tlet testConfigurationService: TestConfigurationService;\n\tlet testObject: ExtensionRecommendationsService;\n\tlet installEvent: Emitter<InstallExtensionEvent>,\n\t\tdidInstallEvent: Emitter<readonly InstallExtensionResult[]>,\n\t\tuninstallEvent: Emitter<UninstallExtensionEvent>,\n\t\tdidUninstallEvent: Emitter<DidUninstallExtensionEvent>;\n\tlet prompted: boolean;\n\tlet promptedEmitter: Emitter<void>;\n\tlet onModelAddedEvent: Emitter<ITextModel>;\n\n\tteardown(async () => {\n\t\tdisposableStore.dispose();\n\t\tawait timeout(0); // allow for async disposables to complete\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => {\n\t\tdisposableStore = new DisposableStore();\n\t\tinstantiationService = disposableStore.add(new TestInstantiationService());\n\t\tpromptedEmitter = disposableStore.add(new Emitter<void>());\n\t\tinstallEvent = disposableStore.add(new Emitter<InstallExtensionEvent>());\n\t\tdidInstallEvent = disposableStore.add(new Emitter<readonly InstallExtensionResult[]>());\n\t\tuninstallEvent = disposableStore.add(new Emitter<UninstallExtensionEvent>());\n\t\tdidUninstallEvent = disposableStore.add(new Emitter<DidUninstallExtensionEvent>());\n\t\tinstantiationService.stub(IExtensionGalleryService, ExtensionGalleryService);\n\t\tinstantiationService.stub(ISharedProcessService, TestSharedProcessService);\n\t\tinstantiationService.stub(ILifecycleService, disposableStore.add(new TestLifecycleService()));\n\t\ttestConfigurationService = new TestConfigurationService();\n\t\tinstantiationService.stub(IConfigurationService, testConfigurationService);\n\t\tinstantiationService.stub(INotificationService, new TestNotificationService());\n\t\tinstantiationService.stub(IContextKeyService, new MockContextKeyService());\n\t\tinstantiationService.stub(IExtensionManagementService, <Partial<IExtensionManagementService>>{\n\t\t\tonInstallExtension: installEvent.event,\n\t\t\tonDidInstallExtensions: didInstallEvent.event,\n\t\t\tonUninstallExtension: uninstallEvent.event,\n\t\t\tonDidUninstallExtension: didUninstallEvent.event,\n\t\t\tonDidUpdateExtensionMetadata: Event.None,\n\t\t\tonDidChangeProfile: Event.None,\n\t\t\tasync getInstalled() { return []; },\n\t\t\tasync canInstall() { return true; },\n\t\t\tasync getExtensionsControlManifest() { return { malicious: [], deprecated: {}, search: [] }; },\n\t\t\tasync getTargetPlatform() { return getTargetPlatform(platform, arch); }\n\t\t});\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\textensions: [],\n\t\t\tasync whenInstalledExtensionsRegistered() { return true; }\n\t\t});\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposableStore.add(new TestExtensionEnablementService(instantiationService)));\n\t\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\t\tinstantiationService.stub(IURLService, NativeURLService);\n\t\tinstantiationService.stub(IWorkspaceTagsService, new NoOpWorkspaceTagsService());\n\t\tinstantiationService.stub(IStorageService, disposableStore.add(new TestStorageService()));\n\t\tinstantiationService.stub(ILogService, new NullLogService());\n\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{\n\t\t\textensionTips: {\n\t\t\t\t'ms-dotnettools.csharp': '{**/*.cs,**/project.json,**/global.json,**/*.csproj,**/*.sln,**/appsettings.json}',\n\t\t\t\t'msjsdiag.debugger-for-chrome': '{**/*.ts,**/*.tsx,**/*.js,**/*.jsx,**/*.es6,**/*.mjs,**/*.cjs,**/.babelrc}',\n\t\t\t\t'lukehoban.Go': '**/*.go'\n\t\t\t},\n\t\t\textensionRecommendations: {\n\t\t\t\t'ms-python.python': {\n\t\t\t\t\tonFileOpen: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'pathGlob': '{**/*.py}',\n\t\t\t\t\t\t\timportant: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t'ms-vscode.PowerShell': {\n\t\t\t\t\tonFileOpen: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'pathGlob': '{**/*.ps,**/*.ps1}',\n\t\t\t\t\t\t\timportant: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t'ms-dotnettools.csharp': {\n\t\t\t\t\tonFileOpen: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'pathGlob': '{**/*.cs,**/project.json,**/global.json,**/*.csproj,**/*.sln,**/appsettings.json}',\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t'msjsdiag.debugger-for-chrome': {\n\t\t\t\t\tonFileOpen: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'pathGlob': '{**/*.ts,**/*.tsx,**/*.js,**/*.jsx,**/*.es6,**/*.mjs,**/*.cjs,**/.babelrc}',\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t'lukehoban.Go': {\n\t\t\t\t\tonFileOpen: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'pathGlob': '**/*.go',\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tinstantiationService.set(IExtensionsWorkbenchService, disposableStore.add(instantiationService.createInstance(ExtensionsWorkbenchService)));\n\t\tinstantiationService.stub(IExtensionTipsService, disposableStore.add(instantiationService.createInstance(TestExtensionTipsService)));\n\n\t\tonModelAddedEvent = new Emitter<ITextModel>();\n\n\t\tinstantiationService.stub(IEnvironmentService, <Partial<IEnvironmentService>>{});\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', []);\n\t\tinstantiationService.stub(IExtensionGalleryService, 'isEnabled', true);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage<IGalleryExtension>(...mockExtensionGallery));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'getExtensions', mockExtensionGallery);\n\n\t\tprompted = false;\n\n\t\tclass TestNotificationService2 extends TestNotificationService {\n\t\t\tpublic override prompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions) {\n\t\t\t\tprompted = true;\n\t\t\t\tpromptedEmitter.fire();\n\t\t\t\treturn super.prompt(severity, message, choices, options);\n\t\t\t}\n\t\t}\n\n\t\tinstantiationService.stub(INotificationService, new TestNotificationService2());\n\n\t\ttestConfigurationService.setUserConfiguration(ConfigurationKey, { ignoreRecommendations: false });\n\t\tinstantiationService.stub(IModelService, <IModelService>{\n\t\t\tgetModels(): any { return []; },\n\t\t\tonModelAdded: onModelAddedEvent.event\n\t\t});\n\t});\n\n\tfunction setUpFolderWorkspace(folderName: string, recommendedExtensions: string[], ignoredRecommendations: string[] = []): Promise<void> {\n\t\treturn setUpFolder(folderName, recommendedExtensions, ignoredRecommendations);\n\t}\n\n\tasync function setUpFolder(folderName: string, recommendedExtensions: string[], ignoredRecommendations: string[] = []): Promise<void> {\n\t\tconst ROOT = URI.file('tests').with({ scheme: 'vscode-tests' });\n\t\tconst logService = new NullLogService();\n\t\tconst fileService = disposableStore.add(new FileService(logService));\n\t\tconst fileSystemProvider = disposableStore.add(new InMemoryFileSystemProvider());\n\t\tdisposableStore.add(fileService.registerProvider(ROOT.scheme, fileSystemProvider));\n\n\t\tconst folderDir = joinPath(ROOT, folderName);\n\t\tconst workspaceSettingsDir = joinPath(folderDir, '.vscode');\n\t\tawait fileService.createFolder(workspaceSettingsDir);\n\t\tconst configPath = joinPath(workspaceSettingsDir, 'extensions.json');\n\t\tawait fileService.writeFile(configPath, VSBuffer.fromString(JSON.stringify({\n\t\t\t'recommendations': recommendedExtensions,\n\t\t\t'unwantedRecommendations': ignoredRecommendations,\n\t\t}, null, '\\t')));\n\n\t\tconst myWorkspace = testWorkspace(folderDir);\n\n\t\tinstantiationService.stub(IFileService, fileService);\n\t\tworkspaceService = new TestContextService(myWorkspace);\n\t\tinstantiationService.stub(IWorkspaceContextService, workspaceService);\n\t\tinstantiationService.stub(IWorkspaceExtensionsConfigService, disposableStore.add(instantiationService.createInstance(WorkspaceExtensionsConfigService)));\n\t\tinstantiationService.stub(IExtensionIgnoredRecommendationsService, disposableStore.add(instantiationService.createInstance(ExtensionIgnoredRecommendationsService)));\n\t\tinstantiationService.stub(IExtensionRecommendationNotificationService, disposableStore.add(instantiationService.createInstance(ExtensionRecommendationNotificationService)));\n\t}\n\n\tfunction testNoPromptForValidRecommendations(recommendations: string[]) {\n\t\treturn setUpFolderWorkspace('myFolder', recommendations).then(() => {\n\t\t\ttestObject = disposableStore.add(instantiationService.createInstance(ExtensionRecommendationsService));\n\t\t\treturn testObject.activationPromise.then(() => {\n\t\t\t\tassert.strictEqual(Object.keys(testObject.getAllRecommendationsWithReason()).length, recommendations.length);\n\t\t\t\tassert.ok(!prompted);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction testNoPromptOrRecommendationsForValidRecommendations(recommendations: string[]) {\n\t\treturn setUpFolderWorkspace('myFolder', mockTestData.validRecommendedExtensions).then(() => {\n\t\t\ttestObject = disposableStore.add(instantiationService.createInstance(ExtensionRecommendationsService));\n\t\t\tassert.ok(!prompted);\n\n\t\t\treturn testObject.getWorkspaceRecommendations().then(() => {\n\t\t\t\tassert.strictEqual(Object.keys(testObject.getAllRecommendationsWithReason()).length, 0);\n\t\t\t\tassert.ok(!prompted);\n\t\t\t});\n\t\t});\n\t}\n\n\ttest('ExtensionRecommendationsService: No Prompt for valid workspace recommendations when galleryService is absent', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst galleryQuerySpy = sinon.spy();\n\t\tinstantiationService.stub(IExtensionGalleryService, { query: galleryQuerySpy, isEnabled: () => false });\n\n\t\treturn testNoPromptOrRecommendationsForValidRecommendations(mockTestData.validRecommendedExtensions)\n\t\t\t.then(() => assert.ok(galleryQuerySpy.notCalled));\n\t}));\n\n\ttest('ExtensionRecommendationsService: No Prompt for valid workspace recommendations during extension development', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tinstantiationService.stub(IEnvironmentService, { extensionDevelopmentLocationURI: [URI.file('/folder/file')], isExtensionDevelopment: true });\n\t\treturn testNoPromptOrRecommendationsForValidRecommendations(mockTestData.validRecommendedExtensions);\n\t}));\n\n\ttest('ExtensionRecommendationsService: No workspace recommendations or prompts when extensions.json has empty array', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\treturn testNoPromptForValidRecommendations([]);\n\t}));\n\n\ttest('ExtensionRecommendationsService: Prompt for valid workspace recommendations', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tawait setUpFolderWorkspace('myFolder', mockTestData.recommendedExtensions);\n\t\ttestObject = disposableStore.add(instantiationService.createInstance(ExtensionRecommendationsService));\n\n\t\tawait Event.toPromise(promptedEmitter.event);\n\t\tconst recommendations = Object.keys(testObject.getAllRecommendationsWithReason());\n\t\tconst expected = [...mockTestData.validRecommendedExtensions, 'unknown.extension'];\n\t\tassert.strictEqual(recommendations.length, expected.length);\n\t\texpected.forEach(x => {\n\t\t\tassert.strictEqual(recommendations.indexOf(x.toLowerCase()) > -1, true);\n\t\t});\n\t}));\n\n\ttest('ExtensionRecommendationsService: No Prompt for valid workspace recommendations if they are already installed', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', mockExtensionLocal);\n\t\treturn testNoPromptForValidRecommendations(mockTestData.validRecommendedExtensions);\n\t}));\n\n\ttest('ExtensionRecommendationsService: No Prompt for valid workspace recommendations with casing mismatch if they are already installed', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', mockExtensionLocal);\n\t\treturn testNoPromptForValidRecommendations(mockTestData.validRecommendedExtensions.map(x => x.toUpperCase()));\n\t}));\n\n\ttest('ExtensionRecommendationsService: No Prompt for valid workspace recommendations if ignoreRecommendations is set', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\ttestConfigurationService.setUserConfiguration(ConfigurationKey, { ignoreRecommendations: true });\n\t\treturn testNoPromptForValidRecommendations(mockTestData.validRecommendedExtensions);\n\t}));\n\n\ttest('ExtensionRecommendationsService: No Prompt for valid workspace recommendations if showRecommendationsOnlyOnDemand is set', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\ttestConfigurationService.setUserConfiguration(ConfigurationKey, { showRecommendationsOnlyOnDemand: true });\n\t\treturn setUpFolderWorkspace('myFolder', mockTestData.validRecommendedExtensions).then(() => {\n\t\t\ttestObject = disposableStore.add(instantiationService.createInstance(ExtensionRecommendationsService));\n\t\t\treturn testObject.activationPromise.then(() => {\n\t\t\t\tassert.ok(!prompted);\n\t\t\t});\n\t\t});\n\t}));\n\n\ttest('ExtensionRecommendationsService: No Prompt for valid workspace recommendations if ignoreRecommendations is set for current workspace', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tinstantiationService.get(IStorageService).store('extensionsAssistant/workspaceRecommendationsIgnore', true, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\treturn testNoPromptForValidRecommendations(mockTestData.validRecommendedExtensions);\n\t}));\n\n\ttest('ExtensionRecommendationsService: No Recommendations of globally ignored recommendations', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tinstantiationService.get(IStorageService).store('extensionsAssistant/workspaceRecommendationsIgnore', true, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tinstantiationService.get(IStorageService).store('extensionsAssistant/recommendations', '[\"ms-dotnettools.csharp\", \"ms-python.python\", \"ms-vscode.vscode-typescript-tslint-plugin\"]', StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tinstantiationService.get(IStorageService).store('extensionsAssistant/ignored_recommendations', '[\"ms-dotnettools.csharp\", \"mockpublisher2.mockextension2\"]', StorageScope.PROFILE, StorageTarget.MACHINE);\n\n\t\treturn setUpFolderWorkspace('myFolder', mockTestData.validRecommendedExtensions).then(() => {\n\t\t\ttestObject = disposableStore.add(instantiationService.createInstance(ExtensionRecommendationsService));\n\t\t\treturn testObject.activationPromise.then(() => {\n\t\t\t\tconst recommendations = testObject.getAllRecommendationsWithReason();\n\t\t\t\tassert.ok(!recommendations['ms-dotnettools.csharp']); // stored recommendation that has been globally ignored\n\t\t\t\tassert.ok(recommendations['ms-python.python']); // stored recommendation\n\t\t\t\tassert.ok(recommendations['mockpublisher1.mockextension1']); // workspace recommendation\n\t\t\t\tassert.ok(!recommendations['mockpublisher2.mockextension2']); // workspace recommendation that has been globally ignored\n\t\t\t});\n\t\t});\n\t}));\n\n\ttest('ExtensionRecommendationsService: No Recommendations of workspace ignored recommendations', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst ignoredRecommendations = ['ms-dotnettools.csharp', 'mockpublisher2.mockextension2']; // ignore a stored recommendation and a workspace recommendation.\n\t\tconst storedRecommendations = '[\"ms-dotnettools.csharp\", \"ms-python.python\"]';\n\t\tinstantiationService.get(IStorageService).store('extensionsAssistant/workspaceRecommendationsIgnore', true, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tinstantiationService.get(IStorageService).store('extensionsAssistant/recommendations', storedRecommendations, StorageScope.PROFILE, StorageTarget.MACHINE);\n\n\t\treturn setUpFolderWorkspace('myFolder', mockTestData.validRecommendedExtensions, ignoredRecommendations).then(() => {\n\t\t\ttestObject = disposableStore.add(instantiationService.createInstance(ExtensionRecommendationsService));\n\t\t\treturn testObject.activationPromise.then(() => {\n\t\t\t\tconst recommendations = testObject.getAllRecommendationsWithReason();\n\t\t\t\tassert.ok(!recommendations['ms-dotnettools.csharp']); // stored recommendation that has been workspace ignored\n\t\t\t\tassert.ok(recommendations['ms-python.python']); // stored recommendation\n\t\t\t\tassert.ok(recommendations['mockpublisher1.mockextension1']); // workspace recommendation\n\t\t\t\tassert.ok(!recommendations['mockpublisher2.mockextension2']); // workspace recommendation that has been workspace ignored\n\t\t\t});\n\t\t});\n\t}));\n\n\ttest('ExtensionRecommendationsService: Able to retrieve collection of all ignored recommendations', async () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\n\t\tconst storageService = instantiationService.get(IStorageService);\n\t\tconst workspaceIgnoredRecommendations = ['ms-dotnettools.csharp']; // ignore a stored recommendation and a workspace recommendation.\n\t\tconst storedRecommendations = '[\"ms-dotnettools.csharp\", \"ms-python.python\"]';\n\t\tconst globallyIgnoredRecommendations = '[\"mockpublisher2.mockextension2\"]'; // ignore a workspace recommendation.\n\t\tstorageService.store('extensionsAssistant/workspaceRecommendationsIgnore', true, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tstorageService.store('extensionsAssistant/recommendations', storedRecommendations, StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tstorageService.store('extensionsAssistant/ignored_recommendations', globallyIgnoredRecommendations, StorageScope.PROFILE, StorageTarget.MACHINE);\n\n\t\tawait setUpFolderWorkspace('myFolder', mockTestData.validRecommendedExtensions, workspaceIgnoredRecommendations);\n\t\ttestObject = disposableStore.add(instantiationService.createInstance(ExtensionRecommendationsService));\n\t\tawait testObject.activationPromise;\n\n\t\tconst recommendations = testObject.getAllRecommendationsWithReason();\n\t\tassert.deepStrictEqual(Object.keys(recommendations), ['ms-python.python', 'mockpublisher1.mockextension1']);\n\t}));\n\n\ttest('ExtensionRecommendationsService: Able to dynamically ignore/unignore global recommendations', async () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst storageService = instantiationService.get(IStorageService);\n\n\t\tconst storedRecommendations = '[\"ms-dotnettools.csharp\", \"ms-python.python\"]';\n\t\tconst globallyIgnoredRecommendations = '[\"mockpublisher2.mockextension2\"]'; // ignore a workspace recommendation.\n\t\tstorageService.store('extensionsAssistant/workspaceRecommendationsIgnore', true, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tstorageService.store('extensionsAssistant/recommendations', storedRecommendations, StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tstorageService.store('extensionsAssistant/ignored_recommendations', globallyIgnoredRecommendations, StorageScope.PROFILE, StorageTarget.MACHINE);\n\n\t\tawait setUpFolderWorkspace('myFolder', mockTestData.validRecommendedExtensions);\n\t\tconst extensionIgnoredRecommendationsService = instantiationService.get(IExtensionIgnoredRecommendationsService);\n\t\ttestObject = disposableStore.add(instantiationService.createInstance(ExtensionRecommendationsService));\n\t\tawait testObject.activationPromise;\n\n\t\tlet recommendations = testObject.getAllRecommendationsWithReason();\n\t\tassert.ok(recommendations['ms-python.python']);\n\t\tassert.ok(recommendations['mockpublisher1.mockextension1']);\n\t\tassert.ok(!recommendations['mockpublisher2.mockextension2']);\n\n\t\textensionIgnoredRecommendationsService.toggleGlobalIgnoredRecommendation('mockpublisher1.mockextension1', true);\n\n\t\trecommendations = testObject.getAllRecommendationsWithReason();\n\t\tassert.ok(recommendations['ms-python.python']);\n\t\tassert.ok(!recommendations['mockpublisher1.mockextension1']);\n\t\tassert.ok(!recommendations['mockpublisher2.mockextension2']);\n\n\t\textensionIgnoredRecommendationsService.toggleGlobalIgnoredRecommendation('mockpublisher1.mockextension1', false);\n\n\t\trecommendations = testObject.getAllRecommendationsWithReason();\n\t\tassert.ok(recommendations['ms-python.python']);\n\t\tassert.ok(recommendations['mockpublisher1.mockextension1']);\n\t\tassert.ok(!recommendations['mockpublisher2.mockextension2']);\n\t}));\n\n\ttest('test global extensions are modified and recommendation change event is fired when an extension is ignored', async () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst storageService = instantiationService.get(IStorageService);\n\t\tconst changeHandlerTarget = sinon.spy();\n\t\tconst ignoredExtensionId = 'Some.Extension';\n\n\t\tstorageService.store('extensionsAssistant/workspaceRecommendationsIgnore', true, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tstorageService.store('extensionsAssistant/ignored_recommendations', '[\"ms-vscode.vscode\"]', StorageScope.PROFILE, StorageTarget.MACHINE);\n\n\t\tawait setUpFolderWorkspace('myFolder', []);\n\t\ttestObject = disposableStore.add(instantiationService.createInstance(ExtensionRecommendationsService));\n\t\tconst extensionIgnoredRecommendationsService = instantiationService.get(IExtensionIgnoredRecommendationsService);\n\t\tdisposableStore.add(extensionIgnoredRecommendationsService.onDidChangeGlobalIgnoredRecommendation(changeHandlerTarget));\n\t\textensionIgnoredRecommendationsService.toggleGlobalIgnoredRecommendation(ignoredExtensionId, true);\n\t\tawait testObject.activationPromise;\n\n\t\tassert.ok(changeHandlerTarget.calledOnce);\n\t\tassert.ok(changeHandlerTarget.getCall(0).calledWithMatch({ extensionId: ignoredExtensionId.toLowerCase(), isRecommended: false }));\n\t}));\n\n\ttest('ExtensionRecommendationsService: Get file based recommendations from storage (old format)', () => runWithFakedTimers<void>({ useFakeTimers: true }, async () => {\n\t\tconst storedRecommendations = '[\"ms-dotnettools.csharp\", \"ms-python.python\", \"ms-vscode.vscode-typescript-tslint-plugin\"]';\n\t\tinstantiationService.get(IStorageService).store('extensionsAssistant/recommendations', storedRecommendations, StorageScope.PROFILE, StorageTarget.MACHINE);\n\n\t\treturn setUpFolderWorkspace('myFolder', []).then(() => {\n\t\t\ttestObject = disposableStore.add(instantiationService.createInstance(ExtensionRecommendationsService));\n\t\t\treturn testObject.activationPromise.then(() => {\n\t\t\t\tconst recommendations = testObject.getFileBasedRecommendations();\n\t\t\t\tassert.strictEqual(recommendations.length, 2);\n\t\t\t\tassert.ok(recommendations.some(extensionId => extensionId === 'ms-dotnettools.csharp')); // stored recommendation that exists in product.extensionTips\n\t\t\t\tassert.ok(recommendations.some(extensionId => extensionId === 'ms-python.python')); // stored recommendation that exists in product.extensionImportantTips\n\t\t\t\tassert.ok(recommendations.every(extensionId => extensionId !== 'ms-vscode.vscode-typescript-tslint-plugin')); // stored recommendation that is no longer in neither product.extensionTips nor product.extensionImportantTips\n\t\t\t});\n\t\t});\n\t}));\n\n\ttest('ExtensionRecommendationsService: Get file based recommendations from storage (new format)', async () => {\n\t\tconst milliSecondsInADay = 1000 * 60 * 60 * 24;\n\t\tconst now = Date.now();\n\t\tconst tenDaysOld = 10 * milliSecondsInADay;\n\t\tconst storedRecommendations = `{\"ms-dotnettools.csharp\": ${now}, \"ms-python.python\": ${now}, \"ms-vscode.vscode-typescript-tslint-plugin\": ${now}, \"lukehoban.Go\": ${tenDaysOld}}`;\n\t\tinstantiationService.get(IStorageService).store('extensionsAssistant/recommendations', storedRecommendations, StorageScope.PROFILE, StorageTarget.MACHINE);\n\n\t\tawait setUpFolderWorkspace('myFolder', []);\n\t\ttestObject = disposableStore.add(instantiationService.createInstance(ExtensionRecommendationsService));\n\t\tawait testObject.activationPromise;\n\n\t\tconst recommendations = testObject.getFileBasedRecommendations();\n\t\tassert.strictEqual(recommendations.length, 2);\n\t\tassert.ok(recommendations.some(extensionId => extensionId === 'ms-dotnettools.csharp')); // stored recommendation that exists in product.extensionTips\n\t\tassert.ok(recommendations.some(extensionId => extensionId === 'ms-python.python')); // stored recommendation that exists in product.extensionImportantTips\n\t\tassert.ok(recommendations.every(extensionId => extensionId !== 'ms-vscode.vscode-typescript-tslint-plugin')); // stored recommendation that is no longer in neither product.extensionTips nor product.extensionImportantTips\n\t\tassert.ok(recommendations.every(extensionId => extensionId !== 'lukehoban.Go')); //stored recommendation that is older than a week\n\t});\n});\n"]}