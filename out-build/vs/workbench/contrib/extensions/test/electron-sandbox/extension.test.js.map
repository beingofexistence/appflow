{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/extensions/test/electron-sandbox/extension.test.ts"],"names":[],"mappings":"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","file":"extension.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { ExtensionState } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { Extension } from 'vs/workbench/contrib/extensions/browser/extensionsWorkbenchService';\nimport { IGalleryExtension, IGalleryExtensionProperties, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionType, IExtensionManifest, TargetPlatform } from 'vs/platform/extensions/common/extensions';\nimport { URI } from 'vs/base/common/uri';\nimport { getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nsuite('Extension Test', () => {\n\n\tlet instantiationService: TestInstantiationService;\n\n\tsetup(() => {\n\t\tinstantiationService = new TestInstantiationService();\n\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{ quality: 'insiders' });\n\t});\n\n\tteardown(() => {\n\t\tinstantiationService.dispose();\n\t});\n\n\ttest('extension is not outdated when there is no local and gallery', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, undefined, undefined);\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is not outdated when there is local and no gallery', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension(), undefined);\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is not outdated when there is no local and has gallery', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, undefined, aGalleryExtension());\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is not outdated when local and gallery are on same version', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension(), aGalleryExtension());\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is outdated when local is older than gallery', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }), aGalleryExtension('somext', { version: '1.0.1' }));\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\ttest('extension is outdated when local is built in and older than gallery', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }, { type: ExtensionType.System }), aGalleryExtension('somext', { version: '1.0.1' }));\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\ttest('extension is not outdated when local is built in and older than gallery but product quality is stable', () => {\n\t\tinstantiationService.stub(IProductService, <Partial<IProductService>>{ quality: 'stable' });\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }, { type: ExtensionType.System }), aGalleryExtension('somext', { version: '1.0.1' }));\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is outdated when local and gallery are on same version but on different target platforms', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', {}, { targetPlatform: TargetPlatform.WIN32_IA32 }), aGalleryExtension('somext', {}, { targetPlatform: TargetPlatform.WIN32_X64 }));\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\ttest('extension is not outdated when local and gallery are on same version and local is on web', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', {}, { targetPlatform: TargetPlatform.WEB }), aGalleryExtension('somext'));\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is not outdated when local and gallery are on same version and gallery is on web', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext'), aGalleryExtension('somext', {}, { targetPlatform: TargetPlatform.WEB }));\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is not outdated when local is not pre-release but gallery is pre-release', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }), aGalleryExtension('somext', { version: '1.0.1' }, { isPreReleaseVersion: true }));\n\t\tassert.strictEqual(extension.outdated, false);\n\t});\n\n\ttest('extension is outdated when local and gallery are pre-releases', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }, { preRelease: true, isPreReleaseVersion: true }), aGalleryExtension('somext', { version: '1.0.1' }, { isPreReleaseVersion: true }));\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\ttest('extension is outdated when local was opted to pre-release but current version is not pre-release', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }, { preRelease: true, isPreReleaseVersion: false }), aGalleryExtension('somext', { version: '1.0.1' }, { isPreReleaseVersion: true }));\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\ttest('extension is outdated when local is pre-release but gallery is not', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }, { preRelease: true, isPreReleaseVersion: true }), aGalleryExtension('somext', { version: '1.0.1' }));\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\ttest('extension is outdated when local was opted pre-release but current version is not and gallery is not', () => {\n\t\tconst extension = instantiationService.createInstance(Extension, () => ExtensionState.Installed, () => undefined, undefined, aLocalExtension('somext', { version: '1.0.0' }, { preRelease: true, isPreReleaseVersion: false }), aGalleryExtension('somext', { version: '1.0.1' }));\n\t\tassert.strictEqual(extension.outdated, true);\n\t});\n\n\tfunction aLocalExtension(name: string = 'someext', manifest: Partial<IExtensionManifest> = {}, properties: Partial<ILocalExtension> = {}): ILocalExtension {\n\t\tmanifest = { name, publisher: 'pub', version: '1.0.0', ...manifest };\n\t\tproperties = {\n\t\t\ttype: ExtensionType.User,\n\t\t\tlocation: URI.file(`pub.${name}`),\n\t\t\tidentifier: { id: getGalleryExtensionId(manifest.publisher!, manifest.name!) },\n\t\t\ttargetPlatform: TargetPlatform.UNDEFINED,\n\t\t\t...properties\n\t\t};\n\t\treturn <ILocalExtension>Object.create({ manifest, ...properties });\n\t}\n\n\tfunction aGalleryExtension(name: string = 'somext', properties: Partial<IGalleryExtension> = {}, galleryExtensionProperties: Partial<IGalleryExtensionProperties> = {}): IGalleryExtension {\n\t\tconst targetPlatform = galleryExtensionProperties.targetPlatform ?? TargetPlatform.UNDEFINED;\n\t\tconst galleryExtension = <IGalleryExtension>Object.create({ name, publisher: 'pub', version: '1.0.0', allTargetPlatforms: [targetPlatform], properties: {}, assets: {}, ...properties });\n\t\tgalleryExtension.properties = { ...galleryExtension.properties, dependencies: [], targetPlatform, ...galleryExtensionProperties };\n\t\tgalleryExtension.identifier = { id: getGalleryExtensionId(galleryExtension.publisher, galleryExtension.name), uuid: generateUuid() };\n\t\treturn <IGalleryExtension>galleryExtension;\n\t}\n\n});\n"]}