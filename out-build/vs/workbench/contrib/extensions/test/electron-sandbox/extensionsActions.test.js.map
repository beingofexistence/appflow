{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/extensions/test/electron-sandbox/extensionsActions.test.ts"],"names":[],"mappings":"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","file":"extensionsActions.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IExtensionsWorkbenchService, ExtensionContainers } from 'vs/workbench/contrib/extensions/common/extensions';\nimport * as ExtensionsActions from 'vs/workbench/contrib/extensions/browser/extensionsActions';\nimport { ExtensionsWorkbenchService } from 'vs/workbench/contrib/extensions/browser/extensionsWorkbenchService';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension, IGalleryExtension,\n\tDidUninstallExtensionEvent, InstallExtensionEvent, IExtensionIdentifier, InstallOperation, IExtensionTipsService, InstallExtensionResult, getTargetPlatform, IExtensionsControlManifest, UninstallExtensionEvent, Metadata\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IWorkbenchExtensionEnablementService, EnablementState, IExtensionManagementServerService, IExtensionManagementServer, ExtensionInstallLocation, IProfileAwareExtensionManagementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { IExtensionRecommendationsService } from 'vs/workbench/services/extensionRecommendations/common/extensionRecommendations';\nimport { getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { TestExtensionEnablementService } from 'vs/workbench/services/extensionManagement/test/browser/extensionEnablementService.test';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IURLService } from 'vs/platform/url/common/url';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IExtensionService, toExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { TestContextService, TestWorkspaceTrustManagementService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { TestExtensionTipsService, TestSharedProcessService } from 'vs/workbench/test/electron-sandbox/workbenchTestServices';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { NativeURLService } from 'vs/platform/url/common/urlService';\nimport { URI } from 'vs/base/common/uri';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { RemoteAgentService } from 'vs/workbench/services/remote/electron-sandbox/remoteAgentService';\nimport { IExtensionContributions, ExtensionType, IExtensionDescription, IExtension } from 'vs/platform/extensions/common/extensions';\nimport { ISharedProcessService } from 'vs/platform/ipc/electron-sandbox/services';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILabelService, IFormatterChangeEvent } from 'vs/platform/label/common/label';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { Schemas } from 'vs/base/common/network';\nimport { IProgressService } from 'vs/platform/progress/common/progress';\nimport { ProgressService } from 'vs/workbench/services/progress/browser/progressService';\nimport { ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { TestEnvironmentService, TestLifecycleService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IUserDataSyncEnablementService } from 'vs/platform/userDataSync/common/userDataSync';\nimport { UserDataSyncEnablementService } from 'vs/platform/userDataSync/common/userDataSyncEnablementService';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { MockContextKeyService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { platform } from 'vs/base/common/platform';\nimport { arch } from 'vs/base/common/process';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nlet instantiationService: TestInstantiationService;\nlet installEvent: Emitter<InstallExtensionEvent>,\n\tdidInstallEvent: Emitter<readonly InstallExtensionResult[]>,\n\tuninstallEvent: Emitter<UninstallExtensionEvent>,\n\tdidUninstallEvent: Emitter<DidUninstallExtensionEvent>;\n\nfunction setupTest(disposables: Pick<DisposableStore, 'add'>) {\n\tinstallEvent = disposables.add(new Emitter<InstallExtensionEvent>());\n\tdidInstallEvent = disposables.add(new Emitter<readonly InstallExtensionResult[]>());\n\tuninstallEvent = disposables.add(new Emitter<UninstallExtensionEvent>());\n\tdidUninstallEvent = disposables.add(new Emitter<DidUninstallExtensionEvent>());\n\n\tinstantiationService = disposables.add(new TestInstantiationService());\n\n\tinstantiationService.stub(IEnvironmentService, TestEnvironmentService);\n\tinstantiationService.stub(IWorkbenchEnvironmentService, TestEnvironmentService);\n\n\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\tinstantiationService.stub(ILogService, NullLogService);\n\n\tinstantiationService.stub(IWorkspaceContextService, new TestContextService());\n\tinstantiationService.stub(IConfigurationService, new TestConfigurationService());\n\tinstantiationService.stub(IProgressService, ProgressService);\n\tinstantiationService.stub(IProductService, {});\n\tinstantiationService.stub(IContextKeyService, new MockContextKeyService());\n\n\tinstantiationService.stub(IExtensionGalleryService, ExtensionGalleryService);\n\tinstantiationService.stub(ISharedProcessService, TestSharedProcessService);\n\n\tinstantiationService.stub(IExtensionManagementService, <Partial<IExtensionManagementService>>{\n\t\tonInstallExtension: installEvent.event,\n\t\tonDidInstallExtensions: didInstallEvent.event,\n\t\tonUninstallExtension: uninstallEvent.event,\n\t\tonDidUninstallExtension: didUninstallEvent.event,\n\t\tonDidChangeProfile: Event.None,\n\t\tonDidUpdateExtensionMetadata: Event.None,\n\t\tasync getInstalled() { return []; },\n\t\tasync getExtensionsControlManifest() { return { malicious: [], deprecated: {}, search: [] }; },\n\t\tasync updateMetadata(local: ILocalExtension, metadata: Partial<Metadata>) {\n\t\t\tlocal.identifier.uuid = metadata.id;\n\t\t\tlocal.publisherDisplayName = metadata.publisherDisplayName!;\n\t\t\tlocal.publisherId = metadata.publisherId!;\n\t\t\treturn local;\n\t\t},\n\t\tasync canInstall() { return true; },\n\t\tasync getTargetPlatform() { return getTargetPlatform(platform, arch); },\n\t});\n\n\tinstantiationService.stub(IRemoteAgentService, RemoteAgentService);\n\n\tconst localExtensionManagementServer = { extensionManagementService: instantiationService.get(IExtensionManagementService) as IProfileAwareExtensionManagementService, label: 'local', id: 'vscode-local' };\n\tinstantiationService.stub(IExtensionManagementServerService, <Partial<IExtensionManagementServerService>>{\n\t\tget localExtensionManagementServer(): IExtensionManagementServer {\n\t\t\treturn localExtensionManagementServer;\n\t\t},\n\t\tgetExtensionManagementServer(extension: IExtension): IExtensionManagementServer | null {\n\t\t\tif (extension.location.scheme === Schemas.file) {\n\t\t\t\treturn localExtensionManagementServer;\n\t\t\t}\n\t\t\tthrow new Error(`Invalid Extension ${extension.location}`);\n\t\t}\n\t});\n\n\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\tinstantiationService.stub(ILabelService, { onDidChangeFormatters: disposables.add(new Emitter<IFormatterChangeEvent>()).event });\n\n\tinstantiationService.stub(ILifecycleService, disposables.add(new TestLifecycleService()));\n\tinstantiationService.stub(IExtensionTipsService, disposables.add(instantiationService.createInstance(TestExtensionTipsService)));\n\tinstantiationService.stub(IExtensionRecommendationsService, {});\n\tinstantiationService.stub(IURLService, NativeURLService);\n\n\tinstantiationService.stub(IExtensionGalleryService, 'isEnabled', true);\n\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage());\n\tinstantiationService.stubPromise(IExtensionGalleryService, 'getExtensions', []);\n\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{ extensions: [], onDidChangeExtensions: Event.None, canAddExtension: (extension: IExtensionDescription) => false, canRemoveExtension: (extension: IExtensionDescription) => false, whenInstalledExtensionsRegistered: () => Promise.resolve(true) });\n\t(<TestExtensionEnablementService>instantiationService.get(IWorkbenchExtensionEnablementService)).reset();\n\n\tinstantiationService.stub(IUserDataSyncEnablementService, disposables.add(instantiationService.createInstance(UserDataSyncEnablementService)));\n\n\tinstantiationService.set(IExtensionsWorkbenchService, disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService)));\n\tinstantiationService.stub(IWorkspaceTrustManagementService, disposables.add(new TestWorkspaceTrustManagementService()));\n}\n\n\nsuite('ExtensionsActions', () => {\n\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\tsetup(() => setupTest(disposables));\n\n\ttest('Install action is disabled when there is no extension', () => {\n\t\tconst testObject: ExtensionsActions.InstallAction = disposables.add(instantiationService.createInstance(ExtensionsActions.InstallAction, { installPreReleaseVersion: false }));\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test Install action when state is installed', () => {\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tconst testObject: ExtensionsActions.InstallAction = disposables.add(instantiationService.createInstance(ExtensionsActions.InstallAction, { installPreReleaseVersion: false }));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\treturn workbenchService.queryLocal()\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: local.identifier })));\n\t\t\t\treturn workbenchService.queryGallery(CancellationToken.None)\n\t\t\t\t\t.then((paged) => {\n\t\t\t\t\t\ttestObject.extension = paged.firstPage[0];\n\t\t\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\t\t\tassert.strictEqual('Install', testObject.label);\n\t\t\t\t\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test InstallingLabelAction when state is installing', () => {\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tconst testObject: ExtensionsActions.InstallAction = disposables.add(instantiationService.createInstance(ExtensionsActions.InstallingLabelAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\treturn workbenchService.queryGallery(CancellationToken.None)\n\t\t\t.then((paged) => {\n\t\t\t\ttestObject.extension = paged.firstPage[0];\n\t\t\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\tassert.strictEqual('Installing', testObject.label);\n\t\t\t\tassert.strictEqual('extension-action label install installing', testObject.class);\n\t\t\t});\n\t});\n\n\ttest('Test Install action when state is uninstalled', async () => {\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tconst testObject: ExtensionsActions.InstallAction = disposables.add(instantiationService.createInstance(ExtensionsActions.InstallAction, { installPreReleaseVersion: false }));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\tconst paged = await workbenchService.queryGallery(CancellationToken.None);\n\t\tconst promise = Event.toPromise(testObject.onDidChange);\n\t\ttestObject.extension = paged.firstPage[0];\n\t\tawait promise;\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install', testObject.label);\n\t});\n\n\ttest('Test Install action when extension is system action', () => {\n\t\tconst testObject: ExtensionsActions.InstallAction = disposables.add(instantiationService.createInstance(ExtensionsActions.InstallAction, { installPreReleaseVersion: false }));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a', {}, { type: ExtensionType.System });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\tuninstallEvent.fire({ identifier: local.identifier });\n\t\t\t\tdidUninstallEvent.fire({ identifier: local.identifier });\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test Install action when extension doesnot has gallery', () => {\n\t\tconst testObject: ExtensionsActions.InstallAction = disposables.add(instantiationService.createInstance(ExtensionsActions.InstallAction, { installPreReleaseVersion: false }));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\tuninstallEvent.fire({ identifier: local.identifier });\n\t\t\t\tdidUninstallEvent.fire({ identifier: local.identifier });\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Uninstall action is disabled when there is no extension', () => {\n\t\tconst testObject: ExtensionsActions.UninstallAction = disposables.add(instantiationService.createInstance(ExtensionsActions.UninstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test Uninstall action when state is uninstalling', () => {\n\t\tconst testObject: ExtensionsActions.UninstallAction = disposables.add(instantiationService.createInstance(ExtensionsActions.UninstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tuninstallEvent.fire({ identifier: local.identifier });\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\tassert.strictEqual('Uninstalling', testObject.label);\n\t\t\t\tassert.strictEqual('extension-action label uninstall uninstalling', testObject.class);\n\t\t\t});\n\t});\n\n\ttest('Test Uninstall action when state is installed and is user extension', () => {\n\t\tconst testObject: ExtensionsActions.UninstallAction = disposables.add(instantiationService.createInstance(ExtensionsActions.UninstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t\tassert.strictEqual('Uninstall', testObject.label);\n\t\t\t\tassert.strictEqual('extension-action label uninstall', testObject.class);\n\t\t\t});\n\t});\n\n\ttest('Test Uninstall action when state is installed and is system extension', () => {\n\t\tconst testObject: ExtensionsActions.UninstallAction = disposables.add(instantiationService.createInstance(ExtensionsActions.UninstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a', {}, { type: ExtensionType.System });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\tassert.strictEqual('Uninstall', testObject.label);\n\t\t\t\tassert.strictEqual('extension-action label uninstall', testObject.class);\n\t\t\t});\n\t});\n\n\ttest('Test Uninstall action when state is installing and is user extension', () => {\n\t\tconst testObject: ExtensionsActions.UninstallAction = disposables.add(instantiationService.createInstance(ExtensionsActions.UninstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\tconst gallery = aGalleryExtension('a');\n\t\t\t\tconst extension = extensions[0];\n\t\t\t\textension.gallery = gallery;\n\t\t\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\t\t\ttestObject.extension = extension;\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test Uninstall action after extension is installed', async () => {\n\t\tconst testObject: ExtensionsActions.UninstallAction = disposables.add(instantiationService.createInstance(ExtensionsActions.UninstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tconst paged = await instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None);\n\t\ttestObject.extension = paged.firstPage[0];\n\n\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\tconst promise = Event.toPromise(testObject.onDidChange);\n\t\tdidInstallEvent.fire([{ identifier: gallery.identifier, source: gallery, operation: InstallOperation.Install, local: aLocalExtension('a', gallery, gallery) }]);\n\n\t\tawait promise;\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Uninstall', testObject.label);\n\t\tassert.strictEqual('extension-action label uninstall', testObject.class);\n\t});\n\n\ttest('Test UpdateAction when there is no extension', () => {\n\t\tconst testObject: ExtensionsActions.UpdateAction = disposables.add(instantiationService.createInstance(ExtensionsActions.UpdateAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test UpdateAction when extension is uninstalled', () => {\n\t\tconst testObject: ExtensionsActions.UpdateAction = disposables.add(instantiationService.createInstance(ExtensionsActions.UpdateAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst gallery = aGalleryExtension('a', { version: '1.0.0' });\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None)\n\t\t\t.then((paged) => {\n\t\t\t\ttestObject.extension = paged.firstPage[0];\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test UpdateAction when extension is installed and not outdated', () => {\n\t\tconst testObject: ExtensionsActions.UpdateAction = disposables.add(instantiationService.createInstance(ExtensionsActions.UpdateAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a', { version: '1.0.0' });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: local.identifier, version: local.manifest.version })));\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None)\n\t\t\t\t\t.then(extensions => assert.ok(!testObject.enabled));\n\t\t\t});\n\t});\n\n\ttest('Test UpdateAction when extension is installed outdated and system extension', () => {\n\t\tconst testObject: ExtensionsActions.UpdateAction = disposables.add(instantiationService.createInstance(ExtensionsActions.UpdateAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a', { version: '1.0.0' }, { type: ExtensionType.System });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: local.identifier, version: '1.0.1' })));\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None)\n\t\t\t\t\t.then(extensions => assert.ok(!testObject.enabled));\n\t\t\t});\n\t});\n\n\ttest('Test UpdateAction when extension is installed outdated and user extension', () => {\n\t\tconst testObject: ExtensionsActions.UpdateAction = disposables.add(instantiationService.createInstance(ExtensionsActions.UpdateAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a', { version: '1.0.0' });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\treturn workbenchService.queryLocal()\n\t\t\t.then(async extensions => {\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tconst gallery = aGalleryExtension('a', { identifier: local.identifier, version: '1.0.1' });\n\t\t\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\t\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'getCompatibleExtension', gallery);\n\t\t\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'getExtensions', [gallery]);\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\treturn new Promise<void>(c => {\n\t\t\t\t\tdisposables.add(testObject.onDidChange(() => {\n\t\t\t\t\t\tif (testObject.enabled) {\n\t\t\t\t\t\t\tc();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\tinstantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None);\n\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test UpdateAction when extension is installing and outdated and user extension', async () => {\n\t\tconst testObject: ExtensionsActions.UpdateAction = disposables.add(instantiationService.createInstance(ExtensionsActions.UpdateAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a', { version: '1.0.0' });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\tconst extensions = await instantiationService.get(IExtensionsWorkbenchService).queryLocal();\n\t\ttestObject.extension = extensions[0];\n\t\tconst gallery = aGalleryExtension('a', { identifier: local.identifier, version: '1.0.1' });\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'getCompatibleExtension', gallery);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'getExtensions', [gallery]);\n\t\tawait new Promise<void>(c => {\n\t\t\tdisposables.add(testObject.onDidChange(() => {\n\t\t\t\tif (testObject.enabled) {\n\t\t\t\t\tc();\n\t\t\t\t}\n\t\t\t}));\n\t\t\tinstantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None);\n\t\t});\n\t\tawait new Promise<void>(c => {\n\t\t\tdisposables.add(testObject.onDidChange(() => {\n\t\t\t\tif (!testObject.enabled) {\n\t\t\t\t\tc();\n\t\t\t\t}\n\t\t\t}));\n\t\t\tinstallEvent.fire({ identifier: local.identifier, source: gallery });\n\t\t});\n\t});\n\n\ttest('Test ManageExtensionAction when there is no extension', () => {\n\t\tconst testObject: ExtensionsActions.ManageExtensionAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ManageExtensionAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ManageExtensionAction when extension is installed', () => {\n\t\tconst testObject: ExtensionsActions.ManageExtensionAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ManageExtensionAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t\tassert.strictEqual('extension-action icon manage codicon codicon-extensions-manage', testObject.class);\n\t\t\t\tassert.strictEqual('Manage', testObject.tooltip);\n\t\t\t});\n\t});\n\n\ttest('Test ManageExtensionAction when extension is uninstalled', () => {\n\t\tconst testObject: ExtensionsActions.ManageExtensionAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ManageExtensionAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None)\n\t\t\t.then(page => {\n\t\t\t\ttestObject.extension = page.firstPage[0];\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\tassert.strictEqual('extension-action icon manage codicon codicon-extensions-manage hide', testObject.class);\n\t\t\t\tassert.strictEqual('Manage', testObject.tooltip);\n\t\t\t});\n\t});\n\n\ttest('Test ManageExtensionAction when extension is installing', () => {\n\t\tconst testObject: ExtensionsActions.ManageExtensionAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ManageExtensionAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None)\n\t\t\t.then(page => {\n\t\t\t\ttestObject.extension = page.firstPage[0];\n\n\t\t\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\tassert.strictEqual('extension-action icon manage codicon codicon-extensions-manage hide', testObject.class);\n\t\t\t\tassert.strictEqual('Manage', testObject.tooltip);\n\t\t\t});\n\t});\n\n\ttest('Test ManageExtensionAction when extension is queried from gallery and installed', async () => {\n\t\tconst testObject: ExtensionsActions.ManageExtensionAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ManageExtensionAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tconst paged = await instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None);\n\t\ttestObject.extension = paged.firstPage[0];\n\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\tconst promise = Event.toPromise(testObject.onDidChange);\n\t\tdidInstallEvent.fire([{ identifier: gallery.identifier, source: gallery, operation: InstallOperation.Install, local: aLocalExtension('a', gallery, gallery) }]);\n\n\t\tawait promise;\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('extension-action icon manage codicon codicon-extensions-manage', testObject.class);\n\t\tassert.strictEqual('Manage', testObject.tooltip);\n\t});\n\n\ttest('Test ManageExtensionAction when extension is system extension', () => {\n\t\tconst testObject: ExtensionsActions.ManageExtensionAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ManageExtensionAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a', {}, { type: ExtensionType.System });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t\tassert.strictEqual('extension-action icon manage codicon codicon-extensions-manage', testObject.class);\n\t\t\t\tassert.strictEqual('Manage', testObject.tooltip);\n\t\t\t});\n\t});\n\n\ttest('Test ManageExtensionAction when extension is uninstalling', () => {\n\t\tconst testObject: ExtensionsActions.ManageExtensionAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ManageExtensionAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tuninstallEvent.fire({ identifier: local.identifier });\n\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\tassert.strictEqual('extension-action icon manage codicon codicon-extensions-manage', testObject.class);\n\t\t\t\tassert.strictEqual('Manage', testObject.tooltip);\n\t\t\t});\n\t});\n\n\ttest('Test EnableForWorkspaceAction when there is no extension', () => {\n\t\tconst testObject: ExtensionsActions.EnableForWorkspaceAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableForWorkspaceAction));\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test EnableForWorkspaceAction when there extension is not disabled', () => {\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\tconst testObject: ExtensionsActions.EnableForWorkspaceAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableForWorkspaceAction));\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test EnableForWorkspaceAction when the extension is disabled globally', () => {\n\t\tconst local = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally)\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.EnableForWorkspaceAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableForWorkspaceAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test EnableForWorkspaceAction when extension is disabled for workspace', () => {\n\t\tconst local = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.EnableForWorkspaceAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableForWorkspaceAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test EnableForWorkspaceAction when the extension is disabled globally and workspace', () => {\n\t\tconst local = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledWorkspace))\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.EnableForWorkspaceAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableForWorkspaceAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test EnableGloballyAction when there is no extension', () => {\n\t\tconst testObject: ExtensionsActions.EnableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableGloballyAction));\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test EnableGloballyAction when the extension is not disabled', () => {\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\tconst testObject: ExtensionsActions.EnableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableGloballyAction));\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test EnableGloballyAction when the extension is disabled for workspace', () => {\n\t\tconst local = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.EnableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableGloballyAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test EnableGloballyAction when the extension is disabled globally', () => {\n\t\tconst local = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally)\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.EnableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableGloballyAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test EnableGloballyAction when the extension is disabled in both', () => {\n\t\tconst local = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally)\n\t\t\t.then(() => instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledWorkspace))\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.EnableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableGloballyAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test EnableAction when there is no extension', () => {\n\t\tconst testObject: ExtensionsActions.EnableDropDownAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableDropDownAction));\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test EnableDropDownAction when extension is installed and enabled', () => {\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\tconst testObject: ExtensionsActions.EnableDropDownAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableDropDownAction));\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test EnableDropDownAction when extension is installed and disabled globally', () => {\n\t\tconst local = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally)\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.EnableDropDownAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableDropDownAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test EnableDropDownAction when extension is installed and disabled for workspace', () => {\n\t\tconst local = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.EnableDropDownAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableDropDownAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test EnableDropDownAction when extension is uninstalled', () => {\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None)\n\t\t\t.then(page => {\n\t\t\t\tconst testObject: ExtensionsActions.EnableDropDownAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableDropDownAction));\n\t\t\t\ttestObject.extension = page.firstPage[0];\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test EnableDropDownAction when extension is installing', () => {\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None)\n\t\t\t.then(page => {\n\t\t\t\tconst testObject: ExtensionsActions.EnableDropDownAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableDropDownAction));\n\t\t\t\ttestObject.extension = page.firstPage[0];\n\t\t\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\t\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test EnableDropDownAction when extension is uninstalling', () => {\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\tconst testObject: ExtensionsActions.EnableDropDownAction = disposables.add(instantiationService.createInstance(ExtensionsActions.EnableDropDownAction));\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tuninstallEvent.fire({ identifier: local.identifier });\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test DisableForWorkspaceAction when there is no extension', () => {\n\t\tconst testObject: ExtensionsActions.DisableForWorkspaceAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableForWorkspaceAction));\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test DisableForWorkspaceAction when the extension is disabled globally', () => {\n\t\tconst local = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally)\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.DisableForWorkspaceAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableForWorkspaceAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test DisableForWorkspaceAction when the extension is disabled workspace', () => {\n\t\tconst local = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally)\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.DisableForWorkspaceAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableForWorkspaceAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test DisableForWorkspaceAction when extension is enabled', () => {\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(local)],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\tconst testObject: ExtensionsActions.DisableForWorkspaceAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableForWorkspaceAction));\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test DisableGloballyAction when there is no extension', () => {\n\t\tconst testObject: ExtensionsActions.DisableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableGloballyAction));\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test DisableGloballyAction when the extension is disabled globally', () => {\n\t\tconst local = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally)\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.DisableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableGloballyAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test DisableGloballyAction when the extension is disabled for workspace', () => {\n\t\tconst local = aLocalExtension('a');\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.DisableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableGloballyAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test DisableGloballyAction when the extension is enabled', () => {\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(local)],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\tconst testObject: ExtensionsActions.DisableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableGloballyAction));\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test DisableGloballyAction when extension is installed and enabled', () => {\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(local)],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\tconst testObject: ExtensionsActions.DisableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableGloballyAction));\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tassert.ok(testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test DisableGloballyAction when extension is installed and disabled globally', () => {\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(local)],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\n\t\treturn instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally)\n\t\t\t.then(() => {\n\t\t\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\t\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t\t\t.then(extensions => {\n\t\t\t\t\t\tconst testObject: ExtensionsActions.DisableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableGloballyAction));\n\t\t\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t\t\t});\n\t\t\t});\n\t});\n\n\ttest('Test DisableGloballyAction when extension is uninstalled', () => {\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('a'))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None)\n\t\t\t.then(page => {\n\t\t\t\tconst testObject: ExtensionsActions.DisableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableGloballyAction));\n\t\t\t\ttestObject.extension = page.firstPage[0];\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test DisableGloballyAction when extension is installing', () => {\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('a'))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None)\n\t\t\t.then(page => {\n\t\t\t\tconst testObject: ExtensionsActions.DisableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableGloballyAction));\n\t\t\t\ttestObject.extension = page.firstPage[0];\n\t\t\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\t\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n\ttest('Test DisableGloballyAction when extension is uninstalling', () => {\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(local)],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\n\t\treturn instantiationService.get(IExtensionsWorkbenchService).queryLocal()\n\t\t\t.then(extensions => {\n\t\t\t\tconst testObject: ExtensionsActions.DisableGloballyAction = disposables.add(instantiationService.createInstance(ExtensionsActions.DisableGloballyAction));\n\t\t\t\ttestObject.extension = extensions[0];\n\t\t\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\t\t\tuninstallEvent.fire({ identifier: local.identifier });\n\t\t\t\tassert.ok(!testObject.enabled);\n\t\t\t});\n\t});\n\n});\n\nsuite('ReloadAction', () => {\n\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => setupTest(disposables));\n\n\ttest('Test ReloadAction when there is no extension', () => {\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when extension state is installing', async () => {\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\tconst paged = await workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = paged.firstPage[0];\n\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when extension state is uninstalling', async () => {\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\n\t\tconst extensions = await instantiationService.get(IExtensionsWorkbenchService).queryLocal();\n\t\ttestObject.extension = extensions[0];\n\t\tuninstallEvent.fire({ identifier: local.identifier });\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when extension is newly installed', async () => {\n\t\tconst onDidChangeExtensionsEmitter = new Emitter<{ added: IExtensionDescription[]; removed: IExtensionDescription[] }>();\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('b'))],\n\t\t\tonDidChangeExtensions: onDidChangeExtensionsEmitter.event,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tconst paged = await instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None);\n\t\ttestObject.extension = paged.firstPage[0];\n\t\tassert.ok(!testObject.enabled);\n\n\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\tconst promise = Event.toPromise(testObject.onDidChange);\n\t\tdidInstallEvent.fire([{ identifier: gallery.identifier, source: gallery, operation: InstallOperation.Install, local: aLocalExtension('a', gallery, gallery) }]);\n\t\tawait promise;\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual(testObject.tooltip, 'Please reload Visual Studio Code to enable this extension.');\n\t});\n\n\ttest('Test ReloadAction when extension is newly installed and reload is not required', async () => {\n\t\tconst onDidChangeExtensionsEmitter = new Emitter<{ added: IExtensionDescription[]; removed: IExtensionDescription[] }>();\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('b'))],\n\t\t\tonDidChangeExtensions: onDidChangeExtensionsEmitter.event,\n\t\t\tcanAddExtension: (extension) => true,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tconst paged = await instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None);\n\t\ttestObject.extension = paged.firstPage[0];\n\t\tassert.ok(!testObject.enabled);\n\n\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\tdidInstallEvent.fire([{ identifier: gallery.identifier, source: gallery, operation: InstallOperation.Install, local: aLocalExtension('a', gallery, gallery) }]);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when extension is installed and uninstalled', async () => {\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('b'))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => false,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\tconst paged = await instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None);\n\n\t\ttestObject.extension = paged.firstPage[0];\n\t\tconst identifier = gallery.identifier;\n\t\tinstallEvent.fire({ identifier, source: gallery });\n\t\tdidInstallEvent.fire([{ identifier, source: gallery, operation: InstallOperation.Install, local: aLocalExtension('a', gallery, { identifier }) }]);\n\t\tuninstallEvent.fire({ identifier });\n\t\tdidUninstallEvent.fire({ identifier });\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when extension is uninstalled', async () => {\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('a', { version: '1.0.0' }))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => false,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tinstantiationService.set(IExtensionsWorkbenchService, disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService)));\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst extensions = await instantiationService.get(IExtensionsWorkbenchService).queryLocal();\n\t\ttestObject.extension = extensions[0];\n\n\t\tuninstallEvent.fire({ identifier: local.identifier });\n\t\tdidUninstallEvent.fire({ identifier: local.identifier });\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual(testObject.tooltip, 'Please reload Visual Studio Code to complete the uninstallation of this extension.');\n\t});\n\n\ttest('Test ReloadAction when extension is uninstalled and can be removed', async () => {\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(local)],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => true,\n\t\t\tcanAddExtension: (extension) => true,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst extensions = await instantiationService.get(IExtensionsWorkbenchService).queryLocal();\n\t\ttestObject.extension = extensions[0];\n\n\t\tuninstallEvent.fire({ identifier: local.identifier });\n\t\tdidUninstallEvent.fire({ identifier: local.identifier });\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when extension is uninstalled and installed', async () => {\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('a', { version: '1.0.0' }))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => false,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst extensions = await instantiationService.get(IExtensionsWorkbenchService).queryLocal();\n\n\t\ttestObject.extension = extensions[0];\n\t\tuninstallEvent.fire({ identifier: local.identifier });\n\t\tdidUninstallEvent.fire({ identifier: local.identifier });\n\n\t\tconst gallery = aGalleryExtension('a');\n\t\tconst identifier = gallery.identifier;\n\t\tinstallEvent.fire({ identifier, source: gallery });\n\t\tdidInstallEvent.fire([{ identifier, source: gallery, operation: InstallOperation.Install, local }]);\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when extension is updated while running', async () => {\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('a', { version: '1.0.1' }))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => true,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tinstantiationService.set(IExtensionsWorkbenchService, disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService)));\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a', { version: '1.0.1' });\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst extensions = await workbenchService.queryLocal();\n\t\ttestObject.extension = extensions[0];\n\n\t\treturn new Promise<void>(c => {\n\t\t\tdisposables.add(testObject.onDidChange(() => {\n\t\t\t\tif (testObject.enabled && testObject.tooltip === 'Please reload Visual Studio Code to enable the updated extension.') {\n\t\t\t\t\tc();\n\t\t\t\t}\n\t\t\t}));\n\t\t\tconst gallery = aGalleryExtension('a', { uuid: local.identifier.id, version: '1.0.2' });\n\t\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\t\tdidInstallEvent.fire([{ identifier: gallery.identifier, source: gallery, operation: InstallOperation.Install, local: aLocalExtension('a', gallery, gallery) }]);\n\t\t});\n\t});\n\n\ttest('Test ReloadAction when extension is updated when not running', async () => {\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('b'))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => false,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst local = aLocalExtension('a', { version: '1.0.1' });\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally);\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst extensions = await workbenchService.queryLocal();\n\t\ttestObject.extension = extensions[0];\n\n\t\tconst gallery = aGalleryExtension('a', { identifier: local.identifier, version: '1.0.2' });\n\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\tdidInstallEvent.fire([{ identifier: gallery.identifier, source: gallery, operation: InstallOperation.Update, local: aLocalExtension('a', gallery, gallery) }]);\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when extension is disabled when running', async () => {\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('a'))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => false,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tinstantiationService.set(IExtensionsWorkbenchService, disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService)));\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a');\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst extensions = await workbenchService.queryLocal();\n\t\ttestObject.extension = extensions[0];\n\t\tawait workbenchService.setEnablement(extensions[0], EnablementState.DisabledGlobally);\n\t\tawait testObject.update();\n\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Please reload Visual Studio Code to disable this extension.', testObject.tooltip);\n\t});\n\n\ttest('Test ReloadAction when extension enablement is toggled when running', async () => {\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('a', { version: '1.0.0' }))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => false,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tinstantiationService.set(IExtensionsWorkbenchService, disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService)));\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a');\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst extensions = await workbenchService.queryLocal();\n\t\ttestObject.extension = extensions[0];\n\t\tawait workbenchService.setEnablement(extensions[0], EnablementState.DisabledGlobally);\n\t\tawait workbenchService.setEnablement(extensions[0], EnablementState.EnabledGlobally);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when extension is enabled when not running', async () => {\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('b'))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => false,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst local = aLocalExtension('a');\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally);\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst extensions = await workbenchService.queryLocal();\n\t\ttestObject.extension = extensions[0];\n\t\tawait workbenchService.setEnablement(extensions[0], EnablementState.EnabledGlobally);\n\t\tawait testObject.update();\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Please reload Visual Studio Code to enable this extension.', testObject.tooltip);\n\t});\n\n\ttest('Test ReloadAction when extension enablement is toggled when not running', async () => {\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('b'))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => false,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst local = aLocalExtension('a');\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally);\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst extensions = await workbenchService.queryLocal();\n\t\ttestObject.extension = extensions[0];\n\t\tawait workbenchService.setEnablement(extensions[0], EnablementState.EnabledGlobally);\n\t\tawait workbenchService.setEnablement(extensions[0], EnablementState.DisabledGlobally);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when extension is updated when not running and enabled', async () => {\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('a'))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => false,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst local = aLocalExtension('a', { version: '1.0.1' });\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([local], EnablementState.DisabledGlobally);\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst extensions = await workbenchService.queryLocal();\n\t\ttestObject.extension = extensions[0];\n\n\t\tconst gallery = aGalleryExtension('a', { identifier: local.identifier, version: '1.0.2' });\n\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\tdidInstallEvent.fire([{ identifier: gallery.identifier, source: gallery, operation: InstallOperation.Install, local: aLocalExtension('a', gallery, gallery) }]);\n\t\tawait workbenchService.setEnablement(extensions[0], EnablementState.EnabledGlobally);\n\t\tawait testObject.update();\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Please reload Visual Studio Code to enable this extension.', testObject.tooltip);\n\t});\n\n\ttest('Test ReloadAction when a localization extension is newly installed', async () => {\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('b'))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => false,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst gallery = aGalleryExtension('a');\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tconst paged = await instantiationService.get(IExtensionsWorkbenchService).queryGallery(CancellationToken.None);\n\t\ttestObject.extension = paged.firstPage[0];\n\t\tassert.ok(!testObject.enabled);\n\n\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\tdidInstallEvent.fire([{ identifier: gallery.identifier, source: gallery, operation: InstallOperation.Install, local: aLocalExtension('a', { ...gallery, ...{ contributes: <IExtensionContributions>{ localizations: [{ languageId: 'de', translations: [] }] } } }, gallery) }]);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when a localization extension is updated while running', async () => {\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(aLocalExtension('a', { version: '1.0.1' }))],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanRemoveExtension: (extension) => false,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tconst local = aLocalExtension('a', { version: '1.0.1', contributes: <IExtensionContributions>{ localizations: [{ languageId: 'de', translations: [] }] } });\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [local]);\n\t\tconst extensions = await workbenchService.queryLocal();\n\t\ttestObject.extension = extensions[0];\n\n\t\tconst gallery = aGalleryExtension('a', { uuid: local.identifier.id, version: '1.0.2' });\n\t\tinstallEvent.fire({ identifier: gallery.identifier, source: gallery });\n\t\tdidInstallEvent.fire([{ identifier: gallery.identifier, source: gallery, operation: InstallOperation.Install, local: aLocalExtension('a', { ...gallery, ...{ contributes: <IExtensionContributions>{ localizations: [{ languageId: 'de', translations: [] }] } } }, gallery) }]);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when extension is not installed but extension from different server is installed and running', async () => {\n\t\t// multi server setup\n\t\tconst gallery = aGalleryExtension('a');\n\t\tconst localExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file('pub.a') });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file('pub.a').with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst onDidChangeExtensionsEmitter = new Emitter<{ added: IExtensionDescription[]; removed: IExtensionDescription[] }>();\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(remoteExtension)],\n\t\t\tonDidChangeExtensions: onDidChangeExtensionsEmitter.event,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when extension is uninstalled but extension from different server is installed and running', async () => {\n\t\t// multi server setup\n\t\tconst gallery = aGalleryExtension('a');\n\t\tconst localExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file('pub.a') });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file('pub.a').with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst localExtensionManagementService = createExtensionManagementService([localExtension]);\n\t\tconst uninstallEvent = new Emitter<UninstallExtensionEvent>();\n\t\tconst onDidUninstallEvent = new Emitter<{ identifier: IExtensionIdentifier }>();\n\t\tlocalExtensionManagementService.onUninstallExtension = uninstallEvent.event;\n\t\tlocalExtensionManagementService.onDidUninstallExtension = onDidUninstallEvent.event;\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, localExtensionManagementService, createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst onDidChangeExtensionsEmitter = new Emitter<{ added: IExtensionDescription[]; removed: IExtensionDescription[] }>();\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(remoteExtension)],\n\t\t\tonDidChangeExtensions: onDidChangeExtensionsEmitter.event,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\n\t\tuninstallEvent.fire({ identifier: localExtension.identifier });\n\t\tdidUninstallEvent.fire({ identifier: localExtension.identifier });\n\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when workspace extension is disabled on local server and installed in remote server', async () => {\n\t\t// multi server setup\n\t\tconst gallery = aGalleryExtension('a');\n\t\tconst remoteExtensionManagementService = createExtensionManagementService([]);\n\t\tconst onDidInstallEvent = new Emitter<readonly InstallExtensionResult[]>();\n\t\tremoteExtensionManagementService.onDidInstallExtensions = onDidInstallEvent.event;\n\t\tconst localExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file('pub.a') });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), remoteExtensionManagementService);\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst onDidChangeExtensionsEmitter = new Emitter<{ added: IExtensionDescription[]; removed: IExtensionDescription[] }>();\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [],\n\t\t\tonDidChangeExtensions: onDidChangeExtensionsEmitter.event,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file('pub.a').with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst promise = Event.toPromise(testObject.onDidChange);\n\t\tonDidInstallEvent.fire([{ identifier: remoteExtension.identifier, local: remoteExtension, operation: InstallOperation.Install }]);\n\n\t\tawait promise;\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual(testObject.tooltip, 'Please reload Visual Studio Code to enable this extension.');\n\t});\n\n\ttest('Test ReloadAction when ui extension is disabled on remote server and installed in local server', async () => {\n\t\t// multi server setup\n\t\tconst gallery = aGalleryExtension('a');\n\t\tconst localExtensionManagementService = createExtensionManagementService([]);\n\t\tconst onDidInstallEvent = new Emitter<readonly InstallExtensionResult[]>();\n\t\tlocalExtensionManagementService.onDidInstallExtensions = onDidInstallEvent.event;\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file('pub.a').with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, localExtensionManagementService, createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst onDidChangeExtensionsEmitter = new Emitter<{ added: IExtensionDescription[]; removed: IExtensionDescription[] }>();\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [],\n\t\t\tonDidChangeExtensions: onDidChangeExtensionsEmitter.event,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\n\t\tconst localExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file('pub.a') });\n\t\tconst promise = Event.toPromise(Event.filter(testObject.onDidChange, () => testObject.enabled));\n\t\tonDidInstallEvent.fire([{ identifier: localExtension.identifier, local: localExtension, operation: InstallOperation.Install }]);\n\n\t\tawait promise;\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual(testObject.tooltip, 'Please reload Visual Studio Code to enable this extension.');\n\t});\n\n\ttest('Test ReloadAction for remote ui extension is disabled when it is installed and enabled in local server', async () => {\n\t\t// multi server setup\n\t\tconst gallery = aGalleryExtension('a');\n\t\tconst localExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file('pub.a') });\n\t\tconst localExtensionManagementService = createExtensionManagementService([localExtension]);\n\t\tconst onDidInstallEvent = new Emitter<readonly InstallExtensionResult[]>();\n\t\tlocalExtensionManagementService.onDidInstallExtensions = onDidInstallEvent.event;\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file('pub.a').with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, localExtensionManagementService, createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst onDidChangeExtensionsEmitter = new Emitter<{ added: IExtensionDescription[]; removed: IExtensionDescription[] }>();\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(localExtension)],\n\t\t\tonDidChangeExtensions: onDidChangeExtensionsEmitter.event,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction for remote workspace+ui extension is enabled when it is installed and enabled in local server', async () => {\n\t\t// multi server setup\n\t\tconst gallery = aGalleryExtension('a');\n\t\tconst localExtension = aLocalExtension('a', { extensionKind: ['workspace', 'ui'] }, { location: URI.file('pub.a') });\n\t\tconst localExtensionManagementService = createExtensionManagementService([localExtension]);\n\t\tconst onDidInstallEvent = new Emitter<readonly InstallExtensionResult[]>();\n\t\tlocalExtensionManagementService.onDidInstallExtensions = onDidInstallEvent.event;\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind: ['workspace', 'ui'] }, { location: URI.file('pub.a').with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, localExtensionManagementService, createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst onDidChangeExtensionsEmitter = new Emitter<{ added: IExtensionDescription[]; removed: IExtensionDescription[] }>();\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(localExtension)],\n\t\t\tonDidChangeExtensions: onDidChangeExtensionsEmitter.event,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction for local ui+workspace extension is enabled when it is installed and enabled in remote server', async () => {\n\t\t// multi server setup\n\t\tconst gallery = aGalleryExtension('a');\n\t\tconst localExtension = aLocalExtension('a', { extensionKind: ['ui', 'workspace'] }, { location: URI.file('pub.a') });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind: ['ui', 'workspace'] }, { location: URI.file('pub.a').with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst remoteExtensionManagementService = createExtensionManagementService([remoteExtension]);\n\t\tconst onDidInstallEvent = new Emitter<readonly InstallExtensionResult[]>();\n\t\tremoteExtensionManagementService.onDidInstallExtensions = onDidInstallEvent.event;\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), remoteExtensionManagementService);\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst onDidChangeExtensionsEmitter = new Emitter<{ added: IExtensionDescription[]; removed: IExtensionDescription[] }>();\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(remoteExtension)],\n\t\t\tonDidChangeExtensions: onDidChangeExtensionsEmitter.event,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction for local workspace+ui extension is enabled when it is installed in both servers but running in local server', async () => {\n\t\t// multi server setup\n\t\tconst gallery = aGalleryExtension('a');\n\t\tconst localExtension = aLocalExtension('a', { extensionKind: ['workspace', 'ui'] }, { location: URI.file('pub.a') });\n\t\tconst localExtensionManagementService = createExtensionManagementService([localExtension]);\n\t\tconst onDidInstallEvent = new Emitter<readonly InstallExtensionResult[]>();\n\t\tlocalExtensionManagementService.onDidInstallExtensions = onDidInstallEvent.event;\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind: ['workspace', 'ui'] }, { location: URI.file('pub.a').with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, localExtensionManagementService, createExtensionManagementService([remoteExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst onDidChangeExtensionsEmitter = new Emitter<{ added: IExtensionDescription[]; removed: IExtensionDescription[] }>();\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(localExtension)],\n\t\t\tonDidChangeExtensions: onDidChangeExtensionsEmitter.event,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction for remote ui+workspace extension is enabled when it is installed on both servers but running in remote server', async () => {\n\t\t// multi server setup\n\t\tconst gallery = aGalleryExtension('a');\n\t\tconst localExtension = aLocalExtension('a', { extensionKind: ['ui', 'workspace'] }, { location: URI.file('pub.a') });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind: ['ui', 'workspace'] }, { location: URI.file('pub.a').with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst remoteExtensionManagementService = createExtensionManagementService([remoteExtension]);\n\t\tconst onDidInstallEvent = new Emitter<readonly InstallExtensionResult[]>();\n\t\tremoteExtensionManagementService.onDidInstallExtensions = onDidInstallEvent.event;\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), remoteExtensionManagementService);\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst onDidChangeExtensionsEmitter = new Emitter<{ added: IExtensionDescription[]; removed: IExtensionDescription[] }>();\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(remoteExtension)],\n\t\t\tonDidChangeExtensions: onDidChangeExtensionsEmitter.event,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when ui+workspace+web extension is installed in web and remote and running in remote', async () => {\n\t\t// multi server setup\n\t\tconst gallery = aGalleryExtension('a');\n\t\tconst webExtension = aLocalExtension('a', { extensionKind: ['ui', 'workspace'], 'browser': 'browser.js' }, { location: URI.file('pub.a').with({ scheme: Schemas.vscodeUserData }) });\n\t\tconst remoteExtension = aLocalExtension('a', { extensionKind: ['ui', 'workspace'], 'browser': 'browser.js' }, { location: URI.file('pub.a').with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, null, createExtensionManagementService([remoteExtension]), createExtensionManagementService([webExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(remoteExtension)],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test ReloadAction when workspace+ui+web extension is installed in web and local and running in local', async () => {\n\t\t// multi server setup\n\t\tconst gallery = aGalleryExtension('a');\n\t\tconst webExtension = aLocalExtension('a', { extensionKind: ['workspace', 'ui'], 'browser': 'browser.js' }, { location: URI.file('pub.a').with({ scheme: Schemas.vscodeUserData }) });\n\t\tconst localExtension = aLocalExtension('a', { extensionKind: ['workspace', 'ui'], 'browser': 'browser.js' }, { location: URI.file('pub.a') });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localExtension]), null, createExtensionManagementService([webExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tinstantiationService.stub(IExtensionService, <Partial<IExtensionService>>{\n\t\t\textensions: [toExtensionDescription(localExtension)],\n\t\t\tonDidChangeExtensions: Event.None,\n\t\t\tcanAddExtension: (extension) => false,\n\t\t\twhenInstalledExtensionsRegistered: () => Promise.resolve(true)\n\t\t});\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst testObject: ExtensionsActions.ReloadAction = disposables.add(instantiationService.createInstance(ExtensionsActions.ReloadAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n});\n\nsuite('RemoteInstallAction', () => {\n\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => setupTest(disposables));\n\n\ttest('Test remote install action is enabled for local workspace extension', async () => {\n\t\t// multi server setup\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install in remote', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\t});\n\n\ttest('Test remote install action when installing local workspace extension', async () => {\n\t\t// multi server setup\n\t\tconst remoteExtensionManagementService = createExtensionManagementService();\n\t\tconst onInstallExtension = new Emitter<InstallExtensionEvent>();\n\t\tremoteExtensionManagementService.onInstallExtension = onInstallExtension.event;\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceExtension]), remoteExtensionManagementService);\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.stub(IExtensionsWorkbenchService, workbenchService, 'open', undefined);\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst gallery = aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier });\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install in remote', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\n\t\tonInstallExtension.fire({ identifier: localWorkspaceExtension.identifier, source: gallery });\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Installing', testObject.label);\n\t\tassert.strictEqual('extension-action label install installing', testObject.class);\n\t});\n\n\ttest('Test remote install action when installing local workspace extension is finished', async () => {\n\t\t// multi server setup\n\t\tconst remoteExtensionManagementService = createExtensionManagementService();\n\t\tconst onInstallExtension = new Emitter<InstallExtensionEvent>();\n\t\tremoteExtensionManagementService.onInstallExtension = onInstallExtension.event;\n\t\tconst onDidInstallEvent = new Emitter<readonly InstallExtensionResult[]>();\n\t\tremoteExtensionManagementService.onDidInstallExtensions = onDidInstallEvent.event;\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceExtension]), remoteExtensionManagementService);\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.stub(IExtensionsWorkbenchService, workbenchService, 'open', undefined);\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst gallery = aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier });\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install in remote', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\n\t\tonInstallExtension.fire({ identifier: localWorkspaceExtension.identifier, source: gallery });\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Installing', testObject.label);\n\t\tassert.strictEqual('extension-action label install installing', testObject.class);\n\n\t\tconst installedExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst promise = Event.toPromise(testObject.onDidChange);\n\t\tonDidInstallEvent.fire([{ identifier: installedExtension.identifier, local: installedExtension, operation: InstallOperation.Install }]);\n\t\tawait promise;\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test remote install action is enabled for disabled local workspace extension', async () => {\n\t\t// multi server setup\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst remoteWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([remoteWorkspaceExtension], EnablementState.DisabledGlobally);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install in remote', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\t});\n\n\ttest('Test remote install action is enabled local workspace+ui extension', async () => {\n\t\t// multi server setup\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace', 'ui'] }, { location: URI.file(`pub.a`) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([localWorkspaceExtension], EnablementState.DisabledGlobally);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install in remote', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\t});\n\n\ttest('Test remote install action is enabled for local ui+workapace extension if can install is true', async () => {\n\t\t// multi server setup\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['ui', 'workspace'] }, { location: URI.file(`pub.a`) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([localWorkspaceExtension], EnablementState.DisabledGlobally);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, true));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install in remote', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\t});\n\n\ttest('Test remote install action is disabled for local ui+workapace extension if can install is false', async () => {\n\t\t// multi server setup\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['ui', 'workspace'] }, { location: URI.file(`pub.a`) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([localWorkspaceExtension], EnablementState.DisabledGlobally);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test remote install action is disabled when extension is not set', async () => {\n\t\t// multi server setup\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceExtension]));\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tawait workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test remote install action is disabled for extension which is not installed', async () => {\n\t\t// multi server setup\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService);\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a')));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst pager = await workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = pager.firstPage[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test remote install action is disabled for local workspace extension which is disabled in env', async () => {\n\t\t// multi server setup\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceExtension]));\n\t\tconst environmentService = { disableExtensions: true } as INativeWorkbenchEnvironmentService;\n\t\tinstantiationService.stub(IEnvironmentService, environmentService);\n\t\tinstantiationService.stub(INativeEnvironmentService, environmentService);\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, environmentService);\n\t\tinstantiationService.stub(INativeWorkbenchEnvironmentService, environmentService);\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test remote install action is disabled when remote server is not available', async () => {\n\t\t// single server setup\n\t\tconst workbenchService = instantiationService.get(IExtensionsWorkbenchService);\n\t\tconst extensionManagementServerService = instantiationService.get(IExtensionManagementServerService);\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [localWorkspaceExtension]);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test remote install action is disabled for local workspace extension if it is uninstalled locally', async () => {\n\t\t// multi server setup\n\t\tconst extensionManagementService = instantiationService.get(IExtensionManagementService) as IProfileAwareExtensionManagementService;\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, extensionManagementService);\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [localWorkspaceExtension]);\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install in remote', testObject.label);\n\n\t\tuninstallEvent.fire({ identifier: localWorkspaceExtension.identifier });\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test remote install action is disabled for local workspace extension if it is installed in remote', async () => {\n\t\t// multi server setup\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\tconst remoteWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceExtension]), createExtensionManagementService([remoteWorkspaceExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test remote install action is enabled for local workspace extension if it has not gallery', async () => {\n\t\t// multi server setup\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(testObject.enabled);\n\t});\n\n\ttest('Test remote install action is disabled for local workspace system extension', async () => {\n\t\t// multi server setup\n\t\tconst localWorkspaceSystemExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`), type: ExtensionType.System });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceSystemExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceSystemExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test remote install action is disabled for local ui extension if it is not installed in remote', async () => {\n\t\t// multi server setup\n\t\tconst localUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localUIExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localUIExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test remote install action is disabled for local ui extension if it is also installed in remote', async () => {\n\t\t// multi server setup\n\t\tconst localUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`) });\n\t\tconst remoteUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localUIExtension]), createExtensionManagementService([remoteUIExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localUIExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test remote install action is enabled for locally installed language pack extension', async () => {\n\t\t// multi server setup\n\t\tconst languagePackExtension = aLocalExtension('a', { contributes: <IExtensionContributions>{ localizations: [{ languageId: 'de', translations: [] }] } }, { location: URI.file(`pub.a`) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([languagePackExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: languagePackExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install in remote', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\t});\n\n\ttest('Test remote install action is disabled if local language pack extension is uninstalled', async () => {\n\t\t// multi server setup\n\t\tconst extensionManagementService = instantiationService.get(IExtensionManagementService) as IProfileAwareExtensionManagementService;\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, extensionManagementService);\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst languagePackExtension = aLocalExtension('a', { contributes: <IExtensionContributions>{ localizations: [{ languageId: 'de', translations: [] }] } }, { location: URI.file(`pub.a`) });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [languagePackExtension]);\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: languagePackExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.RemoteInstallAction, false));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.localExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install in remote', testObject.label);\n\n\t\tuninstallEvent.fire({ identifier: languagePackExtension.identifier });\n\t\tassert.ok(!testObject.enabled);\n\t});\n});\n\nsuite('LocalInstallAction', () => {\n\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => setupTest(disposables));\n\n\ttest('Test local install action is enabled for remote ui extension', async () => {\n\t\t// multi server setup\n\t\tconst remoteUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService(), createExtensionManagementService([remoteUIExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: remoteUIExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install Locally', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\t});\n\n\ttest('Test local install action is enabled for remote ui+workspace extension', async () => {\n\t\t// multi server setup\n\t\tconst remoteUIExtension = aLocalExtension('a', { extensionKind: ['ui', 'workspace'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService(), createExtensionManagementService([remoteUIExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: remoteUIExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install Locally', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\t});\n\n\ttest('Test local install action when installing remote ui extension', async () => {\n\t\t// multi server setup\n\t\tconst localExtensionManagementService = createExtensionManagementService();\n\t\tconst onInstallExtension = new Emitter<InstallExtensionEvent>();\n\t\tlocalExtensionManagementService.onInstallExtension = onInstallExtension.event;\n\t\tconst remoteUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, localExtensionManagementService, createExtensionManagementService([remoteUIExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.stub(IExtensionsWorkbenchService, workbenchService, 'open', undefined);\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst gallery = aGalleryExtension('a', { identifier: remoteUIExtension.identifier });\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install Locally', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\n\t\tonInstallExtension.fire({ identifier: remoteUIExtension.identifier, source: gallery });\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Installing', testObject.label);\n\t\tassert.strictEqual('extension-action label install installing', testObject.class);\n\t});\n\n\ttest('Test local install action when installing remote ui extension is finished', async () => {\n\t\t// multi server setup\n\t\tconst localExtensionManagementService = createExtensionManagementService();\n\t\tconst onInstallExtension = new Emitter<InstallExtensionEvent>();\n\t\tlocalExtensionManagementService.onInstallExtension = onInstallExtension.event;\n\t\tconst onDidInstallEvent = new Emitter<readonly InstallExtensionResult[]>();\n\t\tlocalExtensionManagementService.onDidInstallExtensions = onDidInstallEvent.event;\n\t\tconst remoteUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, localExtensionManagementService, createExtensionManagementService([remoteUIExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.stub(IExtensionsWorkbenchService, workbenchService, 'open', undefined);\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst gallery = aGalleryExtension('a', { identifier: remoteUIExtension.identifier });\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(gallery));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install Locally', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\n\t\tonInstallExtension.fire({ identifier: remoteUIExtension.identifier, source: gallery });\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Installing', testObject.label);\n\t\tassert.strictEqual('extension-action label install installing', testObject.class);\n\n\t\tconst installedExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`) });\n\t\tconst promise = Event.toPromise(testObject.onDidChange);\n\t\tonDidInstallEvent.fire([{ identifier: installedExtension.identifier, local: installedExtension, operation: InstallOperation.Install }]);\n\t\tawait promise;\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test local install action is enabled for disabled remote ui extension', async () => {\n\t\t// multi server setup\n\t\tconst remoteUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService(), createExtensionManagementService([remoteUIExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tconst localUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`) });\n\t\tawait instantiationService.get(IWorkbenchExtensionEnablementService).setEnablement([localUIExtension], EnablementState.DisabledGlobally);\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: remoteUIExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install Locally', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\t});\n\n\ttest('Test local install action is disabled when extension is not set', async () => {\n\t\t// multi server setup\n\t\tconst remoteUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService(), createExtensionManagementService([remoteUIExtension]));\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: remoteUIExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tawait workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test local install action is disabled for extension which is not installed', async () => {\n\t\t// multi server setup\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService);\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a')));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst pager = await workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = pager.firstPage[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test local install action is disabled for remote ui extension which is disabled in env', async () => {\n\t\t// multi server setup\n\t\tconst remoteUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst environmentService = { disableExtensions: true } as INativeWorkbenchEnvironmentService;\n\t\tinstantiationService.stub(IEnvironmentService, environmentService);\n\t\tinstantiationService.stub(INativeEnvironmentService, environmentService);\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, environmentService);\n\t\tinstantiationService.stub(INativeWorkbenchEnvironmentService, environmentService);\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService(), createExtensionManagementService([remoteUIExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: remoteUIExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test local install action is disabled when local server is not available', async () => {\n\t\t// single server setup\n\t\tconst remoteUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aSingleRemoteExtensionManagementServerService(instantiationService, createExtensionManagementService([remoteUIExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: remoteUIExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test local install action is disabled for remote ui extension if it is installed in local', async () => {\n\t\t// multi server setup\n\t\tconst localUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`) });\n\t\tconst remoteUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localUIExtension]), createExtensionManagementService([remoteUIExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localUIExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test local install action is disabled for remoteUI extension if it is uninstalled locally', async () => {\n\t\t// multi server setup\n\t\tconst extensionManagementService = instantiationService.get(IExtensionManagementService) as IProfileAwareExtensionManagementService;\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService(), extensionManagementService);\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst remoteUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [remoteUIExtension]);\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: remoteUIExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install Locally', testObject.label);\n\n\t\tuninstallEvent.fire({ identifier: remoteUIExtension.identifier });\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test local install action is enabled for remote UI extension if it has gallery', async () => {\n\t\t// multi server setup\n\t\tconst remoteUIExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService(), createExtensionManagementService([remoteUIExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: remoteUIExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(testObject.enabled);\n\t});\n\n\ttest('Test local install action is disabled for remote UI system extension', async () => {\n\t\t// multi server setup\n\t\tconst remoteUISystemExtension = aLocalExtension('a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }), type: ExtensionType.System });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService(), createExtensionManagementService([remoteUISystemExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: remoteUISystemExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test local install action is disabled for remote workspace extension if it is not installed in local', async () => {\n\t\t// multi server setup\n\t\tconst remoteWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService(), createExtensionManagementService([remoteWorkspaceExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: remoteWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test local install action is disabled for remote workspace extension if it is also installed in local', async () => {\n\t\t// multi server setup\n\t\tconst localWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspae'] }, { location: URI.file(`pub.a`) });\n\t\tconst remoteWorkspaceExtension = aLocalExtension('a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService([localWorkspaceExtension]), createExtensionManagementService([remoteWorkspaceExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: localWorkspaceExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.extension);\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n\ttest('Test local install action is enabled for remotely installed language pack extension', async () => {\n\t\t// multi server setup\n\t\tconst languagePackExtension = aLocalExtension('a', { contributes: <IExtensionContributions>{ localizations: [{ languageId: 'de', translations: [] }] } }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService(), createExtensionManagementService([languagePackExtension]));\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: languagePackExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install Locally', testObject.label);\n\t\tassert.strictEqual('extension-action label prominent install', testObject.class);\n\t});\n\n\ttest('Test local install action is disabled if remote language pack extension is uninstalled', async () => {\n\t\t// multi server setup\n\t\tconst extensionManagementService = instantiationService.get(IExtensionManagementService) as IProfileAwareExtensionManagementService;\n\t\tconst extensionManagementServerService = aMultiExtensionManagementServerService(instantiationService, createExtensionManagementService(), extensionManagementService);\n\t\tinstantiationService.stub(IExtensionManagementServerService, extensionManagementServerService);\n\t\tinstantiationService.stub(IWorkbenchExtensionEnablementService, disposables.add(new TestExtensionEnablementService(instantiationService)));\n\t\tconst languagePackExtension = aLocalExtension('a', { contributes: <IExtensionContributions>{ localizations: [{ languageId: 'de', translations: [] }] } }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tinstantiationService.stubPromise(IExtensionManagementService, 'getInstalled', [languagePackExtension]);\n\t\tconst workbenchService: IExtensionsWorkbenchService = disposables.add(instantiationService.createInstance(ExtensionsWorkbenchService));\n\t\tinstantiationService.set(IExtensionsWorkbenchService, workbenchService);\n\n\t\tinstantiationService.stubPromise(IExtensionGalleryService, 'query', aPage(aGalleryExtension('a', { identifier: languagePackExtension.identifier })));\n\t\tconst testObject = disposables.add(instantiationService.createInstance(ExtensionsActions.LocalInstallAction));\n\t\tdisposables.add(instantiationService.createInstance(ExtensionContainers, [testObject]));\n\n\t\tconst extensions = await workbenchService.queryLocal(extensionManagementServerService.remoteExtensionManagementServer!);\n\t\tawait workbenchService.queryGallery(CancellationToken.None);\n\t\ttestObject.extension = extensions[0];\n\t\tassert.ok(testObject.enabled);\n\t\tassert.strictEqual('Install Locally', testObject.label);\n\n\t\tuninstallEvent.fire({ identifier: languagePackExtension.identifier });\n\t\tassert.ok(!testObject.enabled);\n\t});\n\n});\n\nfunction aLocalExtension(name: string = 'someext', manifest: any = {}, properties: any = {}): ILocalExtension {\n\tmanifest = { name, publisher: 'pub', version: '1.0.0', ...manifest };\n\tproperties = {\n\t\ttype: ExtensionType.User,\n\t\tlocation: URI.file(`pub.${name}`),\n\t\tidentifier: { id: getGalleryExtensionId(manifest.publisher, manifest.name) },\n\t\t...properties\n\t};\n\tproperties.isBuiltin = properties.type === ExtensionType.System;\n\treturn <ILocalExtension>Object.create({ manifest, ...properties });\n}\n\nfunction aGalleryExtension(name: string, properties: any = {}, galleryExtensionProperties: any = {}, assets: any = {}): IGalleryExtension {\n\tconst targetPlatform = getTargetPlatform(platform, arch);\n\tconst galleryExtension = <IGalleryExtension>Object.create({ name, publisher: 'pub', version: '1.0.0', allTargetPlatforms: [targetPlatform], properties: {}, assets: {}, ...properties });\n\tgalleryExtension.properties = { ...galleryExtension.properties, dependencies: [], targetPlatform, ...galleryExtensionProperties };\n\tgalleryExtension.assets = { ...galleryExtension.assets, ...assets };\n\tgalleryExtension.identifier = { id: getGalleryExtensionId(galleryExtension.publisher, galleryExtension.name), uuid: generateUuid() };\n\tgalleryExtension.hasReleaseVersion = true;\n\treturn <IGalleryExtension>galleryExtension;\n}\n\nfunction aPage<T>(...objects: T[]): IPager<T> {\n\treturn { firstPage: objects, total: objects.length, pageSize: objects.length, getPage: () => null! };\n}\n\nfunction aSingleRemoteExtensionManagementServerService(instantiationService: TestInstantiationService, remoteExtensionManagementService?: IProfileAwareExtensionManagementService): IExtensionManagementServerService {\n\tconst remoteExtensionManagementServer: IExtensionManagementServer = {\n\t\tid: 'vscode-remote',\n\t\tlabel: 'remote',\n\t\textensionManagementService: remoteExtensionManagementService || createExtensionManagementService(),\n\t};\n\treturn {\n\t\t_serviceBrand: undefined,\n\t\tlocalExtensionManagementServer: null,\n\t\tremoteExtensionManagementServer,\n\t\twebExtensionManagementServer: null,\n\t\tgetExtensionManagementServer: (extension: IExtension) => {\n\t\t\tif (extension.location.scheme === Schemas.vscodeRemote) {\n\t\t\t\treturn remoteExtensionManagementServer;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tgetExtensionInstallLocation(extension: IExtension): ExtensionInstallLocation | null {\n\t\t\tconst server = this.getExtensionManagementServer(extension);\n\t\t\treturn server === remoteExtensionManagementServer ? ExtensionInstallLocation.Remote : ExtensionInstallLocation.Local;\n\t\t}\n\t};\n}\n\nfunction aMultiExtensionManagementServerService(instantiationService: TestInstantiationService, localExtensionManagementService?: IProfileAwareExtensionManagementService | null, remoteExtensionManagementService?: IProfileAwareExtensionManagementService | null, webExtensionManagementService?: IProfileAwareExtensionManagementService): IExtensionManagementServerService {\n\tconst localExtensionManagementServer: IExtensionManagementServer | null = localExtensionManagementService === null ? null : {\n\t\tid: 'vscode-local',\n\t\tlabel: 'local',\n\t\textensionManagementService: localExtensionManagementService || createExtensionManagementService(),\n\t};\n\tconst remoteExtensionManagementServer: IExtensionManagementServer | null = remoteExtensionManagementService === null ? null : {\n\t\tid: 'vscode-remote',\n\t\tlabel: 'remote',\n\t\textensionManagementService: remoteExtensionManagementService || createExtensionManagementService(),\n\t};\n\tconst webExtensionManagementServer: IExtensionManagementServer | null = webExtensionManagementService ? {\n\t\tid: 'vscode-web',\n\t\tlabel: 'web',\n\t\textensionManagementService: webExtensionManagementService,\n\t} : null;\n\treturn {\n\t\t_serviceBrand: undefined,\n\t\tlocalExtensionManagementServer,\n\t\tremoteExtensionManagementServer,\n\t\twebExtensionManagementServer,\n\t\tgetExtensionManagementServer: (extension: IExtension) => {\n\t\t\tif (extension.location.scheme === Schemas.file) {\n\t\t\t\treturn localExtensionManagementServer;\n\t\t\t}\n\t\t\tif (extension.location.scheme === Schemas.vscodeRemote) {\n\t\t\t\treturn remoteExtensionManagementServer;\n\t\t\t}\n\t\t\tif (extension.location.scheme === Schemas.vscodeUserData) {\n\t\t\t\treturn webExtensionManagementServer;\n\t\t\t}\n\t\t\tthrow new Error('');\n\t\t},\n\t\tgetExtensionInstallLocation(extension: IExtension): ExtensionInstallLocation | null {\n\t\t\tconst server = this.getExtensionManagementServer(extension);\n\t\t\tif (server === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (server === remoteExtensionManagementServer) {\n\t\t\t\treturn ExtensionInstallLocation.Remote;\n\t\t\t}\n\t\t\tif (server === webExtensionManagementServer) {\n\t\t\t\treturn ExtensionInstallLocation.Web;\n\t\t\t}\n\t\t\treturn ExtensionInstallLocation.Local;\n\t\t}\n\t};\n}\n\nfunction createExtensionManagementService(installed: ILocalExtension[] = []): IProfileAwareExtensionManagementService {\n\treturn <IProfileAwareExtensionManagementService>{\n\t\tonInstallExtension: Event.None,\n\t\tonDidInstallExtensions: Event.None,\n\t\tonUninstallExtension: Event.None,\n\t\tonDidUninstallExtension: Event.None,\n\t\tonDidChangeProfile: Event.None,\n\t\tonDidUpdateExtensionMetadata: Event.None,\n\t\tgetInstalled: () => Promise.resolve<ILocalExtension[]>(installed),\n\t\tcanInstall: async (extension: IGalleryExtension) => { return true; },\n\t\tinstallFromGallery: (extension: IGalleryExtension) => Promise.reject(new Error('not supported')),\n\t\tupdateMetadata: async (local: ILocalExtension, metadata: Partial<Metadata>) => {\n\t\t\tlocal.identifier.uuid = metadata.id;\n\t\t\tlocal.publisherDisplayName = metadata.publisherDisplayName!;\n\t\t\tlocal.publisherId = metadata.publisherId!;\n\t\t\treturn local;\n\t\t},\n\t\tasync getTargetPlatform() { return getTargetPlatform(platform, arch); },\n\t\tasync getExtensionsControlManifest() { return <IExtensionsControlManifest>{ malicious: [], deprecated: {}, search: [] }; },\n\t};\n}\n\n\n"]}