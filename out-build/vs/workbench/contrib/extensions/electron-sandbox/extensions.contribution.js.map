{"version":3,"sources":["vs/workbench/contrib/extensions/electron-sandbox/extensions.contribution.ts"],"names":[],"mappings":"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","file":"extensions.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { MenuRegistry, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { ServicesAccessor, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from 'vs/workbench/browser/editor';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { RuntimeExtensionsEditor, StartExtensionHostProfileAction, StopExtensionHostProfileAction, CONTEXT_PROFILE_SESSION_STATE, CONTEXT_EXTENSION_HOST_PROFILE_RECORDED, SaveExtensionHostProfileAction, IExtensionHostProfileService } from 'vs/workbench/contrib/extensions/electron-sandbox/runtimeExtensionsEditor';\nimport { DebugExtensionHostAction } from 'vs/workbench/contrib/extensions/electron-sandbox/debugExtensionHostAction';\nimport { IEditorSerializer, IEditorFactoryRegistry, EditorExtensions } from 'vs/workbench/common/editor';\nimport { ActiveEditorContext } from 'vs/workbench/common/contextkeys';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { RuntimeExtensionsInput } from 'vs/workbench/contrib/extensions/common/runtimeExtensionsInput';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { CleanUpExtensionsFolderAction, OpenExtensionsFolderAction } from 'vs/workbench/contrib/extensions/electron-sandbox/extensionsActions';\nimport { IExtensionRecommendationNotificationService } from 'vs/platform/extensionRecommendations/common/extensionRecommendations';\nimport { ISharedProcessService } from 'vs/platform/ipc/electron-sandbox/services';\nimport { ExtensionRecommendationNotificationServiceChannel } from 'vs/platform/extensionRecommendations/common/extensionRecommendationsIpc';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { RemoteExtensionsInitializerContribution } from 'vs/workbench/contrib/extensions/electron-sandbox/remoteExtensionsInit';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ExtensionHostProfileService } from 'vs/workbench/contrib/extensions/electron-sandbox/extensionProfileService';\nimport { ExtensionsAutoProfiler } from 'vs/workbench/contrib/extensions/electron-sandbox/extensionsAutoProfiler';\n\n// Singletons\nregisterSingleton(IExtensionHostProfileService, ExtensionHostProfileService, InstantiationType.Delayed);\n\n// Running Extensions Editor\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(RuntimeExtensionsEditor, RuntimeExtensionsEditor.ID, localize('runtimeExtension', \"Running Extensions\")),\n\t[new SyncDescriptor(RuntimeExtensionsInput)]\n);\n\nclass RuntimeExtensionsInputSerializer implements IEditorSerializer {\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\treturn true;\n\t}\n\tserialize(editorInput: EditorInput): string {\n\t\treturn '';\n\t}\n\tdeserialize(instantiationService: IInstantiationService): EditorInput {\n\t\treturn RuntimeExtensionsInput.instance;\n\t}\n}\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).registerEditorSerializer(RuntimeExtensionsInput.ID, RuntimeExtensionsInputSerializer);\n\n\n// Global actions\n\nclass ExtensionsContributions implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IExtensionRecommendationNotificationService extensionRecommendationNotificationService: IExtensionRecommendationNotificationService,\n\t\t@ISharedProcessService sharedProcessService: ISharedProcessService,\n\t) {\n\t\tsharedProcessService.registerChannel('extensionRecommendationNotification', new ExtensionRecommendationNotificationServiceChannel(extensionRecommendationNotificationService));\n\t\tregisterAction2(OpenExtensionsFolderAction);\n\t\tregisterAction2(CleanUpExtensionsFolderAction);\n\t}\n}\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchRegistry.registerWorkbenchContribution(ExtensionsContributions, LifecyclePhase.Restored);\nworkbenchRegistry.registerWorkbenchContribution(ExtensionsAutoProfiler, LifecyclePhase.Eventually);\nworkbenchRegistry.registerWorkbenchContribution(RemoteExtensionsInitializerContribution, LifecyclePhase.Restored);\n// Register Commands\n\nCommandsRegistry.registerCommand(DebugExtensionHostAction.ID, (accessor: ServicesAccessor) => {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tinstantiationService.createInstance(DebugExtensionHostAction).run();\n});\n\nCommandsRegistry.registerCommand(StartExtensionHostProfileAction.ID, (accessor: ServicesAccessor) => {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tinstantiationService.createInstance(StartExtensionHostProfileAction, StartExtensionHostProfileAction.ID, StartExtensionHostProfileAction.LABEL).run();\n});\n\nCommandsRegistry.registerCommand(StopExtensionHostProfileAction.ID, (accessor: ServicesAccessor) => {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tinstantiationService.createInstance(StopExtensionHostProfileAction, StopExtensionHostProfileAction.ID, StopExtensionHostProfileAction.LABEL).run();\n});\n\nCommandsRegistry.registerCommand(SaveExtensionHostProfileAction.ID, (accessor: ServicesAccessor) => {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tinstantiationService.createInstance(SaveExtensionHostProfileAction, SaveExtensionHostProfileAction.ID, SaveExtensionHostProfileAction.LABEL).run();\n});\n\n// Running extensions\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: DebugExtensionHostAction.ID,\n\t\ttitle: DebugExtensionHostAction.LABEL,\n\t\ticon: Codicon.debugStart\n\t},\n\tgroup: 'navigation',\n\twhen: ActiveEditorContext.isEqualTo(RuntimeExtensionsEditor.ID)\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: StartExtensionHostProfileAction.ID,\n\t\ttitle: StartExtensionHostProfileAction.LABEL,\n\t\ticon: Codicon.circleFilled\n\t},\n\tgroup: 'navigation',\n\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(RuntimeExtensionsEditor.ID), CONTEXT_PROFILE_SESSION_STATE.notEqualsTo('running'))\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: StopExtensionHostProfileAction.ID,\n\t\ttitle: StopExtensionHostProfileAction.LABEL,\n\t\ticon: Codicon.debugStop\n\t},\n\tgroup: 'navigation',\n\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(RuntimeExtensionsEditor.ID), CONTEXT_PROFILE_SESSION_STATE.isEqualTo('running'))\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorTitle, {\n\tcommand: {\n\t\tid: SaveExtensionHostProfileAction.ID,\n\t\ttitle: SaveExtensionHostProfileAction.LABEL,\n\t\ticon: Codicon.saveAll,\n\t\tprecondition: CONTEXT_EXTENSION_HOST_PROFILE_RECORDED\n\t},\n\tgroup: 'navigation',\n\twhen: ContextKeyExpr.and(ActiveEditorContext.isEqualTo(RuntimeExtensionsEditor.ID))\n});\n"]}