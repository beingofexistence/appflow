{"version":3,"sources":["vs/workbench/contrib/extensions/electron-sandbox/extensionsAutoProfiler.ts"],"names":[],"mappings":"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","file":"extensionsAutoProfiler.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { joinPath } from 'vs/base/common/resources';\nimport { TernarySearchTree } from 'vs/base/common/ternarySearchTree';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ExtensionIdentifier, ExtensionIdentifierSet, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INotificationService, NotificationPriority, Severity } from 'vs/platform/notification/common/notification';\nimport { IProfileAnalysisWorkerService } from 'vs/platform/profiling/electron-sandbox/profileAnalysisWorkerService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { RuntimeExtensionsInput } from 'vs/workbench/contrib/extensions/common/runtimeExtensionsInput';\nimport { createSlowExtensionAction } from 'vs/workbench/contrib/extensions/electron-sandbox/extensionsSlowActions';\nimport { IExtensionHostProfileService } from 'vs/workbench/contrib/extensions/electron-sandbox/runtimeExtensionsEditor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { ExtensionHostKind } from 'vs/workbench/services/extensions/common/extensionHostKind';\nimport { IExtensionHostProfile, IExtensionService, IResponsiveStateChangeEvent, ProfileSession } from 'vs/workbench/services/extensions/common/extensions';\nimport { ExtensionHostProfiler } from 'vs/workbench/services/extensions/electron-sandbox/extensionHostProfiler';\nimport { ITimerService } from 'vs/workbench/services/timer/browser/timerService';\n\nexport class ExtensionsAutoProfiler implements IWorkbenchContribution {\n\n\tprivate readonly _blame = new ExtensionIdentifierSet();\n\n\tprivate _session: CancellationTokenSource | undefined;\n\tprivate _unresponsiveListener: IDisposable | undefined;\n\tprivate _perfBaseline: number = -1;\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IExtensionHostProfileService private readonly _extensionProfileService: IExtensionHostProfileService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@INativeWorkbenchEnvironmentService private readonly _environmentServie: INativeWorkbenchEnvironmentService,\n\t\t@IProfileAnalysisWorkerService private readonly _profileAnalysisService: IProfileAnalysisWorkerService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITimerService timerService: ITimerService\n\t) {\n\n\t\ttimerService.perfBaseline.then(value => {\n\t\t\tif (value < 0) {\n\t\t\t\treturn; // too slow for profiling\n\t\t\t}\n\t\t\tthis._perfBaseline = value;\n\t\t\tthis._unresponsiveListener = _extensionService.onDidChangeResponsiveChange(this._onDidChangeResponsiveChange, this);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._unresponsiveListener?.dispose();\n\t\tthis._session?.dispose(true);\n\t}\n\n\tprivate async _onDidChangeResponsiveChange(event: IResponsiveStateChangeEvent): Promise<void> {\n\t\tif (event.extensionHostKind !== ExtensionHostKind.LocalProcess) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst port = await event.getInspectPort(true);\n\n\t\tif (!port) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (event.isResponsive && this._session) {\n\t\t\t// stop profiling when responsive again\n\t\t\tthis._session.cancel();\n\t\t\tthis._logService.info('UNRESPONSIVE extension host: received responsive event and cancelling profiling session');\n\n\n\t\t} else if (!event.isResponsive && !this._session) {\n\t\t\t// start profiling if not yet profiling\n\t\t\tconst cts = new CancellationTokenSource();\n\t\t\tthis._session = cts;\n\n\n\t\t\tlet session: ProfileSession;\n\t\t\ttry {\n\t\t\t\tsession = await this._instantiationService.createInstance(ExtensionHostProfiler, port).start();\n\n\t\t\t} catch (err) {\n\t\t\t\tthis._session = undefined;\n\t\t\t\t// fail silent as this is often\n\t\t\t\t// caused by another party being\n\t\t\t\t// connected already\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._logService.info('UNRESPONSIVE extension host: starting to profile NOW');\n\n\t\t\t// wait 5 seconds or until responsive again\n\t\t\ttry {\n\t\t\t\tawait timeout(5e3, cts.token);\n\t\t\t} catch {\n\t\t\t\t// can throw cancellation error. that is\n\t\t\t\t// OK, we stop profiling and analyse the\n\t\t\t\t// profile anyways\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// stop profiling and analyse results\n\t\t\t\tthis._processCpuProfile(await session.stop());\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t} finally {\n\t\t\t\tthis._session = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _processCpuProfile(profile: IExtensionHostProfile) {\n\n\t\t// get all extensions\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\n\t\t// send heavy samples iff enabled\n\t\tif (this._configService.getValue('application.experimental.rendererProfiling')) {\n\n\t\t\tconst searchTree = TernarySearchTree.forUris<IExtensionDescription>();\n\t\t\tsearchTree.fill(this._extensionService.extensions.map(e => [e.extensionLocation, e]));\n\n\t\t\tawait this._profileAnalysisService.analyseBottomUp(\n\t\t\t\tprofile.data,\n\t\t\t\turl => searchTree.findSubstr(URI.parse(url))?.identifier.value ?? '<<not-found>>',\n\t\t\t\tthis._perfBaseline,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\n\t\t// analyse profile by extension-category\n\t\tconst categories: [location: URI, id: string][] = this._extensionService.extensions\n\t\t\t.filter(e => e.extensionLocation.scheme === Schemas.file)\n\t\t\t.map(e => [e.extensionLocation, ExtensionIdentifier.toKey(e.identifier)]);\n\n\t\tconst data = await this._profileAnalysisService.analyseByLocation(profile.data, categories);\n\n\t\t//\n\t\tlet overall: number = 0;\n\t\tlet top: string = '';\n\t\tlet topAggregated: number = -1;\n\t\tfor (const [category, aggregated] of data) {\n\t\t\toverall += aggregated;\n\t\t\tif (aggregated > topAggregated) {\n\t\t\t\ttopAggregated = aggregated;\n\t\t\t\ttop = category;\n\t\t\t}\n\t\t}\n\t\tconst topPercentage = topAggregated / (overall / 100);\n\n\t\t// associate extensions to profile node\n\t\tconst extension = await this._extensionService.getExtension(top);\n\t\tif (!extension) {\n\t\t\t// not an extension => idle, gc, self?\n\t\t\treturn;\n\t\t}\n\n\n\t\tconst sessionId = generateUuid();\n\n\t\t// print message to log\n\t\tconst path = joinPath(this._environmentServie.tmpDir, `exthost-${Math.random().toString(16).slice(2, 8)}.cpuprofile`);\n\t\tawait this._fileService.writeFile(path, VSBuffer.fromString(JSON.stringify(profile.data)));\n\t\tthis._logService.warn(`UNRESPONSIVE extension host: '${top}' took ${topPercentage}% of ${topAggregated / 1e3}ms, saved PROFILE here: '${path}'`);\n\n\t\ttype UnresponsiveData = {\n\t\t\tduration: number;\n\t\t\tsessionId: string;\n\t\t\tdata: string[];\n\t\t\tid: string;\n\t\t};\n\t\ttype UnresponsiveDataClassification = {\n\t\t\towner: 'jrieken';\n\t\t\tcomment: 'Profiling data that was collected while the extension host was unresponsive';\n\t\t\tsessionId: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Identifier of a profiling session' };\n\t\t\tduration: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Duration for which the extension host was unresponsive' };\n\t\t\tdata: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Extensions ids and core parts that were active while the extension host was frozen' };\n\t\t\tid: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Top extensions id that took most of the duration' };\n\t\t};\n\t\tthis._telemetryService.publicLog2<UnresponsiveData, UnresponsiveDataClassification>('exthostunresponsive', {\n\t\t\tsessionId,\n\t\t\tduration: overall,\n\t\t\tdata: data.map(tuple => tuple[0]).flat(),\n\t\t\tid: ExtensionIdentifier.toKey(extension.identifier),\n\t\t});\n\n\n\t\t// add to running extensions view\n\t\tthis._extensionProfileService.setUnresponsiveProfile(extension.identifier, profile);\n\n\t\t// prompt: when really slow/greedy\n\t\tif (!(topPercentage >= 95 && topAggregated >= 5e6)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst action = await this._instantiationService.invokeFunction(createSlowExtensionAction, extension, profile);\n\n\t\tif (!action) {\n\t\t\t// cannot report issues against this extension...\n\t\t\treturn;\n\t\t}\n\n\t\t// only blame once per extension, don't blame too often\n\t\tif (this._blame.has(extension.identifier) || this._blame.size >= 3) {\n\t\t\treturn;\n\t\t}\n\t\tthis._blame.add(extension.identifier);\n\n\t\t// user-facing message when very bad...\n\t\tthis._notificationService.prompt(\n\t\t\tSeverity.Warning,\n\t\t\tlocalize(\n\t\t\t\t'unresponsive-exthost',\n\t\t\t\t\"The extension '{0}' took a very long time to complete its last operation and it has prevented other extensions from running.\",\n\t\t\t\textension.displayName || extension.name\n\t\t\t),\n\t\t\t[{\n\t\t\t\tlabel: localize('show', 'Show Extensions'),\n\t\t\t\trun: () => this._editorService.openEditor(RuntimeExtensionsInput.instance, { pinned: true })\n\t\t\t},\n\t\t\t\taction\n\t\t\t],\n\t\t\t{ priority: NotificationPriority.SILENT }\n\t\t);\n\t}\n}\n"]}