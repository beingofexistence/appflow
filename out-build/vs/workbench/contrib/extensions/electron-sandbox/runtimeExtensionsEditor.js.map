{"version":3,"sources":["vs/workbench/contrib/extensions/electron-sandbox/runtimeExtensionsEditor.ts"],"names":[],"mappings":"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","file":"runtimeExtensionsEditor.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Action } from 'vs/base/common/actions';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IInstantiationService, createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtensionsWorkbenchService } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IExtensionService, IExtensionHostProfile } from 'vs/workbench/services/extensions/common/extensions';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { Event } from 'vs/base/common/event';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IContextKeyService, RawContextKey, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { SlowExtensionAction } from 'vs/workbench/contrib/extensions/electron-sandbox/extensionsSlowActions';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { ReportExtensionIssueAction } from 'vs/workbench/contrib/extensions/common/reportExtensionIssueAction';\nimport { AbstractRuntimeExtensionsEditor, IRuntimeExtension } from 'vs/workbench/contrib/extensions/browser/abstractRuntimeExtensionsEditor';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { INativeHostService } from 'vs/platform/native/common/native';\nimport { IV8Profile, Utils } from 'vs/platform/profiling/common/profiling';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\n\nexport const IExtensionHostProfileService = createDecorator<IExtensionHostProfileService>('extensionHostProfileService');\nexport const CONTEXT_PROFILE_SESSION_STATE = new RawContextKey<string>('profileSessionState', 'none');\nexport const CONTEXT_EXTENSION_HOST_PROFILE_RECORDED = new RawContextKey<boolean>('extensionHostProfileRecorded', false);\n\nexport enum ProfileSessionState {\n\tNone = 0,\n\tStarting = 1,\n\tRunning = 2,\n\tStopping = 3\n}\n\nexport interface IExtensionHostProfileService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeState: Event<void>;\n\treadonly onDidChangeLastProfile: Event<void>;\n\n\treadonly state: ProfileSessionState;\n\treadonly lastProfile: IExtensionHostProfile | null;\n\n\tstartProfiling(): void;\n\tstopProfiling(): void;\n\n\tgetUnresponsiveProfile(extensionId: ExtensionIdentifier): IExtensionHostProfile | undefined;\n\tsetUnresponsiveProfile(extensionId: ExtensionIdentifier, profile: IExtensionHostProfile): void;\n}\n\nexport class RuntimeExtensionsEditor extends AbstractRuntimeExtensionsEditor {\n\n\tprivate _profileInfo: IExtensionHostProfile | null;\n\tprivate _extensionsHostRecorded: IContextKey<boolean>;\n\tprivate _profileSessionState: IContextKey<string>;\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionsWorkbenchService extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IClipboardService clipboardService: IClipboardService,\n\t\t@IExtensionHostProfileService private readonly _extensionHostProfileService: IExtensionHostProfileService,\n\t) {\n\t\tsuper(telemetryService, themeService, contextKeyService, extensionsWorkbenchService, extensionService, notificationService, contextMenuService, instantiationService, storageService, labelService, environmentService, clipboardService);\n\t\tthis._profileInfo = this._extensionHostProfileService.lastProfile;\n\t\tthis._extensionsHostRecorded = CONTEXT_EXTENSION_HOST_PROFILE_RECORDED.bindTo(contextKeyService);\n\t\tthis._profileSessionState = CONTEXT_PROFILE_SESSION_STATE.bindTo(contextKeyService);\n\n\t\tthis._register(this._extensionHostProfileService.onDidChangeLastProfile(() => {\n\t\t\tthis._profileInfo = this._extensionHostProfileService.lastProfile;\n\t\t\tthis._extensionsHostRecorded.set(!!this._profileInfo);\n\t\t\tthis._updateExtensions();\n\t\t}));\n\t\tthis._register(this._extensionHostProfileService.onDidChangeState(() => {\n\t\t\tconst state = this._extensionHostProfileService.state;\n\t\t\tthis._profileSessionState.set(ProfileSessionState[state].toLowerCase());\n\t\t}));\n\t}\n\n\tprotected _getProfileInfo(): IExtensionHostProfile | null {\n\t\treturn this._profileInfo;\n\t}\n\n\tprotected _getUnresponsiveProfile(extensionId: ExtensionIdentifier): IExtensionHostProfile | undefined {\n\t\treturn this._extensionHostProfileService.getUnresponsiveProfile(extensionId);\n\t}\n\n\tprotected _createSlowExtensionAction(element: IRuntimeExtension): Action | null {\n\t\tif (element.unresponsiveProfile) {\n\t\t\treturn this._instantiationService.createInstance(SlowExtensionAction, element.description, element.unresponsiveProfile);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected _createReportExtensionIssueAction(element: IRuntimeExtension): Action | null {\n\t\tif (element.marketplaceInfo) {\n\t\t\treturn this._instantiationService.createInstance(ReportExtensionIssueAction, element.description);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected _createSaveExtensionHostProfileAction(): Action | null {\n\t\treturn this._instantiationService.createInstance(SaveExtensionHostProfileAction, SaveExtensionHostProfileAction.ID, SaveExtensionHostProfileAction.LABEL);\n\t}\n\n\tprotected _createProfileAction(): Action | null {\n\t\tconst state = this._extensionHostProfileService.state;\n\t\tconst profileAction = (\n\t\t\tstate === ProfileSessionState.Running\n\t\t\t\t? this._instantiationService.createInstance(StopExtensionHostProfileAction, StopExtensionHostProfileAction.ID, StopExtensionHostProfileAction.LABEL)\n\t\t\t\t: this._instantiationService.createInstance(StartExtensionHostProfileAction, StartExtensionHostProfileAction.ID, StartExtensionHostProfileAction.LABEL)\n\t\t);\n\t\treturn profileAction;\n\t}\n}\n\nexport class StartExtensionHostProfileAction extends Action {\n\tstatic readonly ID = 'workbench.extensions.action.extensionHostProfile';\n\tstatic readonly LABEL = nls.localize('extensionHostProfileStart', \"Start Extension Host Profile\");\n\n\tconstructor(\n\t\tid: string = StartExtensionHostProfileAction.ID, label: string = StartExtensionHostProfileAction.LABEL,\n\t\t@IExtensionHostProfileService private readonly _extensionHostProfileService: IExtensionHostProfileService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(): Promise<any> {\n\t\tthis._extensionHostProfileService.startProfiling();\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class StopExtensionHostProfileAction extends Action {\n\tstatic readonly ID = 'workbench.extensions.action.stopExtensionHostProfile';\n\tstatic readonly LABEL = nls.localize('stopExtensionHostProfileStart', \"Stop Extension Host Profile\");\n\n\tconstructor(\n\t\tid: string = StartExtensionHostProfileAction.ID, label: string = StartExtensionHostProfileAction.LABEL,\n\t\t@IExtensionHostProfileService private readonly _extensionHostProfileService: IExtensionHostProfileService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(): Promise<any> {\n\t\tthis._extensionHostProfileService.stopProfiling();\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class SaveExtensionHostProfileAction extends Action {\n\n\tstatic readonly LABEL = nls.localize('saveExtensionHostProfile', \"Save Extension Host Profile\");\n\tstatic readonly ID = 'workbench.extensions.action.saveExtensionHostProfile';\n\n\tconstructor(\n\t\tid: string = SaveExtensionHostProfileAction.ID, label: string = SaveExtensionHostProfileAction.LABEL,\n\t\t@INativeHostService private readonly _nativeHostService: INativeHostService,\n\t\t@IWorkbenchEnvironmentService private readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@IExtensionHostProfileService private readonly _extensionHostProfileService: IExtensionHostProfileService,\n\t\t@IFileService private readonly _fileService: IFileService\n\t) {\n\t\tsuper(id, label, undefined, false);\n\t\tthis._extensionHostProfileService.onDidChangeLastProfile(() => {\n\t\t\tthis.enabled = (this._extensionHostProfileService.lastProfile !== null);\n\t\t});\n\t}\n\n\toverride run(): Promise<any> {\n\t\treturn Promise.resolve(this._asyncRun());\n\t}\n\n\tprivate async _asyncRun(): Promise<any> {\n\t\tconst picked = await this._nativeHostService.showSaveDialog({\n\t\t\ttitle: nls.localize('saveprofile.dialogTitle', \"Save Extension Host Profile\"),\n\t\t\tbuttonLabel: nls.localize('saveprofile.saveButton', \"Save\"),\n\t\t\tdefaultPath: `CPU-${new Date().toISOString().replace(/[\\-:]/g, '')}.cpuprofile`,\n\t\t\tfilters: [{\n\t\t\t\tname: 'CPU Profiles',\n\t\t\t\textensions: ['cpuprofile', 'txt']\n\t\t\t}]\n\t\t});\n\n\t\tif (!picked || !picked.filePath || picked.canceled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst profileInfo = this._extensionHostProfileService.lastProfile;\n\t\tlet dataToWrite: object = profileInfo ? profileInfo.data : {};\n\n\t\tlet savePath = picked.filePath;\n\n\t\tif (this._environmentService.isBuilt) {\n\t\t\t// when running from a not-development-build we remove\n\t\t\t// absolute filenames because we don't want to reveal anything\n\t\t\t// about users. We also append the `.txt` suffix to make it\n\t\t\t// easier to attach these files to GH issues\n\t\t\tdataToWrite = Utils.rewriteAbsolutePaths(dataToWrite as IV8Profile, 'piiRemoved');\n\n\t\t\tsavePath = savePath + '.txt';\n\t\t}\n\n\t\treturn this._fileService.writeFile(URI.file(savePath), VSBuffer.fromString(JSON.stringify(profileInfo ? profileInfo.data : {}, null, '\\t')));\n\t}\n}\n"]}