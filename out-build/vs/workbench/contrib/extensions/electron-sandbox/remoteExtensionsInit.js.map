{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/extensions/electron-sandbox/remoteExtensionsInit.ts"],"names":[],"mappings":"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","file":"remoteExtensionsInit.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionGalleryService, IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { IStorageService, IS_NEW_KEY, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { AbstractExtensionsInitializer } from 'vs/platform/userDataSync/common/extensionsSync';\nimport { IIgnoredExtensionsManagementService } from 'vs/platform/userDataSync/common/ignoredExtensions';\nimport { IRemoteUserData, IUserDataSyncEnablementService, IUserDataSyncStoreManagementService, SyncResource } from 'vs/platform/userDataSync/common/userDataSync';\nimport { UserDataSyncStoreClient } from 'vs/platform/userDataSync/common/userDataSyncStoreService';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IAuthenticationService } from 'vs/workbench/services/authentication/common/authentication';\nimport { IExtensionManagementServerService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { IExtensionManifestPropertiesService } from 'vs/workbench/services/extensions/common/extensionManifestPropertiesService';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\n\nexport class RemoteExtensionsInitializerContribution implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IAuthenticationService private readonly authenticationService: IAuthenticationService,\n\t\t@IRemoteAuthorityResolverService private readonly remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t) {\n\t\tthis.initializeRemoteExtensions();\n\t}\n\n\tprivate async initializeRemoteExtensions(): Promise<void> {\n\t\tconst connection = this.remoteAgentService.getConnection();\n\t\tconst localExtensionManagementServer = this.extensionManagementServerService.localExtensionManagementServer;\n\t\tconst remoteExtensionManagementServer = this.extensionManagementServerService.remoteExtensionManagementServer;\n\t\t// Skip: Not a remote window\n\t\tif (!connection || !remoteExtensionManagementServer) {\n\t\t\treturn;\n\t\t}\n\t\t// Skip: Not a native window\n\t\tif (!localExtensionManagementServer) {\n\t\t\treturn;\n\t\t}\n\t\t// Skip: No UserdataSyncStore is configured\n\t\tif (!this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\treturn;\n\t\t}\n\t\tconst newRemoteConnectionKey = `${IS_NEW_KEY}.${connection.remoteAuthority}`;\n\t\t// Skip: Not a new remote connection\n\t\tif (!this.storageService.getBoolean(newRemoteConnectionKey, StorageScope.APPLICATION, true)) {\n\t\t\tthis.logService.trace(`Skipping initializing remote extensions because the window with this remote authority was opened before.`);\n\t\t\treturn;\n\t\t}\n\t\tthis.storageService.store(newRemoteConnectionKey, false, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t// Skip: Not a new workspace\n\t\tif (!this.storageService.isNew(StorageScope.WORKSPACE)) {\n\t\t\tthis.logService.trace(`Skipping initializing remote extensions because this workspace was opened before.`);\n\t\t\treturn;\n\t\t}\n\t\t// Skip: Settings Sync is disabled\n\t\tif (!this.userDataSyncEnablementService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\t// Skip: No account is provided to initialize\n\t\tconst resolvedAuthority = await this.remoteAuthorityResolverService.resolveAuthority(connection.remoteAuthority);\n\t\tif (!resolvedAuthority.options?.authenticationSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst sessions = await this.authenticationService.getSessions(resolvedAuthority.options?.authenticationSession.providerId);\n\t\tconst session = sessions.find(s => s.id === resolvedAuthority.options?.authenticationSession?.id);\n\t\t// Skip: Session is not found\n\t\tif (!session) {\n\t\t\tthis.logService.info('Skipping initializing remote extensions because the account with given session id is not found', resolvedAuthority.options.authenticationSession.id);\n\t\t\treturn;\n\t\t}\n\n\t\tconst userDataSyncStoreClient = this.instantiationService.createInstance(UserDataSyncStoreClient, this.userDataSyncStoreManagementService.userDataSyncStore.url);\n\t\tuserDataSyncStoreClient.setAuthToken(session.accessToken, resolvedAuthority.options.authenticationSession.providerId);\n\t\tconst userData = await userDataSyncStoreClient.readResource(SyncResource.Extensions, null);\n\n\t\tconst serviceCollection = new ServiceCollection();\n\t\tserviceCollection.set(IExtensionManagementService, remoteExtensionManagementServer.extensionManagementService);\n\t\tconst instantiationService = this.instantiationService.createChild(serviceCollection);\n\t\tconst extensionsToInstallInitializer = instantiationService.createInstance(RemoteExtensionsInitializer);\n\n\t\tawait extensionsToInstallInitializer.initialize(userData);\n\t}\n}\n\nclass RemoteExtensionsInitializer extends AbstractExtensionsInitializer {\n\n\tconstructor(\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@IIgnoredExtensionsManagementService ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService logService: ILogService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper(extensionManagementService, ignoredExtensionsManagementService, fileService, userDataProfilesService, environmentService, logService, storageService, uriIdentityService);\n\t}\n\n\tprotected override async doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst remoteExtensions = await this.parseExtensions(remoteUserData);\n\t\tif (!remoteExtensions) {\n\t\t\tthis.logService.info('No synced extensions exist while initializing remote extensions.');\n\t\t\treturn;\n\t\t}\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\tconst { newExtensions } = this.generatePreview(remoteExtensions, installedExtensions);\n\t\tif (!newExtensions.length) {\n\t\t\tthis.logService.trace('No new remote extensions to install.');\n\t\t\treturn;\n\t\t}\n\t\tconst targetPlatform = await this.extensionManagementService.getTargetPlatform();\n\t\tconst extensionsToInstall = await this.extensionGalleryService.getExtensions(newExtensions, { targetPlatform, compatible: true }, CancellationToken.None);\n\t\tif (extensionsToInstall.length) {\n\t\t\tawait Promise.allSettled(extensionsToInstall.map(async e => {\n\t\t\t\tconst manifest = await this.extensionGalleryService.getManifest(e, CancellationToken.None);\n\t\t\t\tif (manifest && this.extensionManifestPropertiesService.canExecuteOnWorkspace(manifest)) {\n\t\t\t\t\tconst syncedExtension = remoteExtensions.find(e => areSameExtensions(e.identifier, e.identifier));\n\t\t\t\t\tawait this.extensionManagementService.installFromGallery(e, { installPreReleaseVersion: syncedExtension?.preRelease, donotIncludePackAndDependencies: true });\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n}\n"]}