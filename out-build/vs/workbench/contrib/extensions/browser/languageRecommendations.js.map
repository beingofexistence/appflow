{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/extensions/browser/languageRecommendations.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAMzF,IAAM,IAAI,GAAV,MAAM,IAAwB,SAAQ,+BAAI;QAGhD,IAAI,eAAe,KAA6C,OAAO,IAAI,CAAC,CAAC,CAAgB,CAAC,CAAC;QAE/F,YACkB,CAAoC;YAErD,KAAK,EAAE,CAAC;YAF0B,MAAC,GAAD,CAAC,CAAkB;YAJ9C,MAAC,GAA6C,EAAE,CAAC;QAOzD,CAAC;QAES,KAAK,CAAC,CAAC;YAChB,IAAI,IAAI,CAAC,CAAC,CAAc,qBAAqB,EAAE;gBAC9C,IAAI,CAAC,CAAC,GAAkB,IAAI,CAAC,CAAC,CAAc,qBAAqB,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAA0B;oBAC9G,WAAW,EAAE,WAAW,CAAC,WAAW,EAAE;oBACtC,MAAM,EAAE;wBACP,QAAQ,mDAA2C;wBACnD,UAAU,EAAE,EAAE;qBACd;iBACA,CAAA,CAAC,CAAC;aACJ;QACF,CAAC;KAED,CAAA;IAvBY,oBAAI;mBAAJ,IAAI;QAMd,WAAA,oBAAG,CAAA;OANO,IAAI,CAuBhB","file":"languageRecommendations.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtensionRecommendations, ExtensionRecommendation } from 'vs/workbench/contrib/extensions/browser/extensionRecommendations';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ExtensionRecommendationReason } from 'vs/workbench/services/extensionRecommendations/common/extensionRecommendations';\n\nexport class LanguageRecommendations extends ExtensionRecommendations {\n\n\tprivate _recommendations: ExtensionRecommendation[] = [];\n\tget recommendations(): ReadonlyArray<ExtensionRecommendation> { return this._recommendations; }\n\n\tconstructor(\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected async doActivate(): Promise<void> {\n\t\tif (this.productService.languageExtensionTips) {\n\t\t\tthis._recommendations = this.productService.languageExtensionTips.map(extensionId => (<ExtensionRecommendation>{\n\t\t\t\textensionId: extensionId.toLowerCase(),\n\t\t\t\treason: {\n\t\t\t\t\treasonId: ExtensionRecommendationReason.Application,\n\t\t\t\t\treasonText: ''\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n}\n\n"]}