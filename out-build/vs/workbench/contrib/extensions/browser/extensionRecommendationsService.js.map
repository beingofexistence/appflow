{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/extensions/browser/extensionRecommendationsService.ts"],"names":[],"mappings":"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","file":"extensionRecommendationsService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IExtensionManagementService, IExtensionGalleryService, InstallOperation, InstallExtensionResult } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IExtensionRecommendationsService, ExtensionRecommendationReason, IExtensionIgnoredRecommendationsService } from 'vs/workbench/services/extensionRecommendations/common/extensionRecommendations';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { distinct, shuffle } from 'vs/base/common/arrays';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { LifecyclePhase, ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { ExeBasedRecommendations } from 'vs/workbench/contrib/extensions/browser/exeBasedRecommendations';\nimport { WorkspaceRecommendations } from 'vs/workbench/contrib/extensions/browser/workspaceRecommendations';\nimport { FileBasedRecommendations } from 'vs/workbench/contrib/extensions/browser/fileBasedRecommendations';\nimport { KeymapRecommendations } from 'vs/workbench/contrib/extensions/browser/keymapRecommendations';\nimport { LanguageRecommendations } from 'vs/workbench/contrib/extensions/browser/languageRecommendations';\nimport { ExtensionRecommendation } from 'vs/workbench/contrib/extensions/browser/extensionRecommendations';\nimport { ConfigBasedRecommendations } from 'vs/workbench/contrib/extensions/browser/configBasedRecommendations';\nimport { IExtensionRecommendationNotificationService } from 'vs/platform/extensionRecommendations/common/extensionRecommendations';\nimport { CancelablePromise, timeout } from 'vs/base/common/async';\nimport { URI } from 'vs/base/common/uri';\nimport { WebRecommendations } from 'vs/workbench/contrib/extensions/browser/webRecommendations';\nimport { IExtensionsWorkbenchService } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { RemoteRecommendations } from 'vs/workbench/contrib/extensions/browser/remoteRecommendations';\nimport { IRemoteExtensionsScannerService } from 'vs/platform/remote/common/remoteExtensionsScanner';\nimport { IUserDataInitializationService } from 'vs/workbench/services/userData/browser/userDataInit';\n\ntype IgnoreRecommendationClassification = {\n\towner: 'sandy081';\n\tcomment: 'Report when a recommendation is ignored';\n\trecommendationReason: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Reason why extension is recommended' };\n\textensionId: { classification: 'PublicNonPersonalData'; purpose: 'FeatureInsight'; comment: 'Id of the extension recommendation that is being ignored' };\n};\n\nexport class ExtensionRecommendationsService extends Disposable implements IExtensionRecommendationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t// Recommendations\n\tprivate readonly fileBasedRecommendations: FileBasedRecommendations;\n\tprivate readonly workspaceRecommendations: WorkspaceRecommendations;\n\tprivate readonly configBasedRecommendations: ConfigBasedRecommendations;\n\tprivate readonly exeBasedRecommendations: ExeBasedRecommendations;\n\tprivate readonly keymapRecommendations: KeymapRecommendations;\n\tprivate readonly webRecommendations: WebRecommendations;\n\tprivate readonly languageRecommendations: LanguageRecommendations;\n\tprivate readonly remoteRecommendations: RemoteRecommendations;\n\n\tpublic readonly activationPromise: Promise<void>;\n\tprivate sessionSeed: number;\n\n\tprivate _onDidChangeRecommendations = this._register(new Emitter<void>());\n\treadonly onDidChangeRecommendations = this._onDidChangeRecommendations.event;\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionIgnoredRecommendationsService private readonly extensionRecommendationsManagementService: IExtensionIgnoredRecommendationsService,\n\t\t@IExtensionRecommendationNotificationService private readonly extensionRecommendationNotificationService: IExtensionRecommendationNotificationService,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IRemoteExtensionsScannerService private readonly remoteExtensionsScannerService: IRemoteExtensionsScannerService,\n\t\t@IUserDataInitializationService private readonly userDataInitializationService: IUserDataInitializationService,\n\t) {\n\t\tsuper();\n\n\t\tthis.workspaceRecommendations = this._register(instantiationService.createInstance(WorkspaceRecommendations));\n\t\tthis.fileBasedRecommendations = this._register(instantiationService.createInstance(FileBasedRecommendations));\n\t\tthis.configBasedRecommendations = this._register(instantiationService.createInstance(ConfigBasedRecommendations));\n\t\tthis.exeBasedRecommendations = this._register(instantiationService.createInstance(ExeBasedRecommendations));\n\t\tthis.keymapRecommendations = this._register(instantiationService.createInstance(KeymapRecommendations));\n\t\tthis.webRecommendations = this._register(instantiationService.createInstance(WebRecommendations));\n\t\tthis.languageRecommendations = this._register(instantiationService.createInstance(LanguageRecommendations));\n\t\tthis.remoteRecommendations = this._register(instantiationService.createInstance(RemoteRecommendations));\n\n\t\tif (!this.isEnabled()) {\n\t\t\tthis.sessionSeed = 0;\n\t\t\tthis.activationPromise = Promise.resolve();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.sessionSeed = +new Date();\n\n\t\t// Activation\n\t\tthis.activationPromise = this.activate();\n\n\t\tthis._register(this.extensionManagementService.onDidInstallExtensions(e => this.onDidInstallExtensions(e)));\n\t}\n\n\tprivate async activate(): Promise<void> {\n\t\ttry {\n\t\t\tawait Promise.allSettled([\n\t\t\t\tthis.remoteExtensionsScannerService.whenExtensionsReady(),\n\t\t\t\tthis.userDataInitializationService.whenInitializationFinished(),\n\t\t\t\tthis.lifecycleService.when(LifecyclePhase.Restored)]);\n\t\t} catch (error) { /* ignore */ }\n\n\t\t// activate all recommendations\n\t\tawait Promise.all([\n\t\t\tthis.workspaceRecommendations.activate(),\n\t\t\tthis.configBasedRecommendations.activate(),\n\t\t\tthis.fileBasedRecommendations.activate(),\n\t\t\tthis.keymapRecommendations.activate(),\n\t\t\tthis.languageRecommendations.activate(),\n\t\t\tthis.webRecommendations.activate(),\n\t\t\tthis.remoteRecommendations.activate()\n\t\t]);\n\n\t\tthis._register(Event.any(this.workspaceRecommendations.onDidChangeRecommendations, this.configBasedRecommendations.onDidChangeRecommendations, this.extensionRecommendationsManagementService.onDidChangeIgnoredRecommendations)(() => this._onDidChangeRecommendations.fire()));\n\t\tthis._register(this.extensionRecommendationsManagementService.onDidChangeGlobalIgnoredRecommendation(({ extensionId, isRecommended }) => {\n\t\t\tif (!isRecommended) {\n\t\t\t\tconst reason = this.getAllRecommendationsWithReason()[extensionId];\n\t\t\t\tif (reason && reason.reasonId) {\n\t\t\t\t\tthis.telemetryService.publicLog2<{ extensionId: string; recommendationReason: ExtensionRecommendationReason }, IgnoreRecommendationClassification>('extensionsRecommendations:ignoreRecommendation', { extensionId, recommendationReason: reason.reasonId });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis.promptWorkspaceRecommendations();\n\t}\n\n\tprivate isEnabled(): boolean {\n\t\treturn this.galleryService.isEnabled() && !this.environmentService.isExtensionDevelopment;\n\t}\n\n\tprivate async activateProactiveRecommendations(): Promise<void> {\n\t\tawait Promise.all([this.exeBasedRecommendations.activate(), this.configBasedRecommendations.activate()]);\n\t}\n\n\tgetAllRecommendationsWithReason(): { [id: string]: { reasonId: ExtensionRecommendationReason; reasonText: string } } {\n\t\t/* Activate proactive recommendations */\n\t\tthis.activateProactiveRecommendations();\n\n\t\tconst output: { [id: string]: { reasonId: ExtensionRecommendationReason; reasonText: string } } = Object.create(null);\n\n\t\tconst allRecommendations = [\n\t\t\t...this.configBasedRecommendations.recommendations,\n\t\t\t...this.exeBasedRecommendations.recommendations,\n\t\t\t...this.fileBasedRecommendations.recommendations,\n\t\t\t...this.workspaceRecommendations.recommendations,\n\t\t\t...this.keymapRecommendations.recommendations,\n\t\t\t...this.languageRecommendations.recommendations,\n\t\t\t...this.webRecommendations.recommendations,\n\t\t];\n\n\t\tfor (const { extensionId, reason } of allRecommendations) {\n\t\t\tif (this.isExtensionAllowedToBeRecommended(extensionId)) {\n\t\t\t\toutput[extensionId.toLowerCase()] = reason;\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tasync getConfigBasedRecommendations(): Promise<{ important: string[]; others: string[] }> {\n\t\tawait this.configBasedRecommendations.activate();\n\t\treturn {\n\t\t\timportant: this.toExtensionRecommendations(this.configBasedRecommendations.importantRecommendations),\n\t\t\tothers: this.toExtensionRecommendations(this.configBasedRecommendations.otherRecommendations)\n\t\t};\n\t}\n\n\tasync getOtherRecommendations(): Promise<string[]> {\n\t\tawait this.activationPromise;\n\t\tawait this.activateProactiveRecommendations();\n\n\t\tconst recommendations = [\n\t\t\t...this.configBasedRecommendations.otherRecommendations,\n\t\t\t...this.exeBasedRecommendations.otherRecommendations,\n\t\t\t...this.webRecommendations.recommendations\n\t\t];\n\n\t\tconst extensionIds = distinct(recommendations.map(e => e.extensionId))\n\t\t\t.filter(extensionId => this.isExtensionAllowedToBeRecommended(extensionId));\n\n\t\tshuffle(extensionIds, this.sessionSeed);\n\n\t\treturn extensionIds;\n\t}\n\n\tasync getImportantRecommendations(): Promise<string[]> {\n\t\tawait this.activateProactiveRecommendations();\n\n\t\tconst recommendations = [\n\t\t\t...this.fileBasedRecommendations.importantRecommendations,\n\t\t\t...this.configBasedRecommendations.importantRecommendations,\n\t\t\t...this.exeBasedRecommendations.importantRecommendations,\n\t\t];\n\n\t\tconst extensionIds = distinct(recommendations.map(e => e.extensionId))\n\t\t\t.filter(extensionId => this.isExtensionAllowedToBeRecommended(extensionId));\n\n\t\tshuffle(extensionIds, this.sessionSeed);\n\n\t\treturn extensionIds;\n\t}\n\n\tgetKeymapRecommendations(): string[] {\n\t\treturn this.toExtensionRecommendations(this.keymapRecommendations.recommendations);\n\t}\n\n\tgetLanguageRecommendations(): string[] {\n\t\treturn this.toExtensionRecommendations(this.languageRecommendations.recommendations);\n\t}\n\n\tgetRemoteRecommendations(): string[] {\n\t\treturn this.toExtensionRecommendations(this.remoteRecommendations.recommendations);\n\t}\n\n\tasync getWorkspaceRecommendations(): Promise<string[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn [];\n\t\t}\n\t\tawait this.workspaceRecommendations.activate();\n\t\treturn this.toExtensionRecommendations(this.workspaceRecommendations.recommendations);\n\t}\n\n\tasync getExeBasedRecommendations(exe?: string): Promise<{ important: string[]; others: string[] }> {\n\t\tawait this.exeBasedRecommendations.activate();\n\t\tconst { important, others } = exe ? this.exeBasedRecommendations.getRecommendations(exe)\n\t\t\t: { important: this.exeBasedRecommendations.importantRecommendations, others: this.exeBasedRecommendations.otherRecommendations };\n\t\treturn { important: this.toExtensionRecommendations(important), others: this.toExtensionRecommendations(others) };\n\t}\n\n\tgetFileBasedRecommendations(): string[] {\n\t\treturn this.toExtensionRecommendations(this.fileBasedRecommendations.recommendations);\n\t}\n\n\tprivate onDidInstallExtensions(results: readonly InstallExtensionResult[]): void {\n\t\tfor (const e of results) {\n\t\t\tif (e.source && !URI.isUri(e.source) && e.operation === InstallOperation.Install) {\n\t\t\t\tconst extRecommendations = this.getAllRecommendationsWithReason() || {};\n\t\t\t\tconst recommendationReason = extRecommendations[e.source.identifier.id.toLowerCase()];\n\t\t\t\tif (recommendationReason) {\n\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\"extensionGallery:install:recommendations\" : {\n\t\t\t\t\t\t\t\"owner\": \"sandy081\",\n\t\t\t\t\t\t\t\"recommendationReason\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\t\t\t\"${include}\": [\n\t\t\t\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tthis.telemetryService.publicLog('extensionGallery:install:recommendations', { ...e.source.telemetryData, recommendationReason: recommendationReason.reasonId });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate toExtensionRecommendations(recommendations: ReadonlyArray<ExtensionRecommendation>): string[] {\n\t\tconst extensionIds = distinct(recommendations.map(e => e.extensionId))\n\t\t\t.filter(extensionId => this.isExtensionAllowedToBeRecommended(extensionId));\n\n\t\treturn extensionIds;\n\t}\n\n\tprivate isExtensionAllowedToBeRecommended(extensionId: string): boolean {\n\t\treturn !this.extensionRecommendationsManagementService.ignoredRecommendations.includes(extensionId.toLowerCase());\n\t}\n\n\tprivate async promptWorkspaceRecommendations(): Promise<void> {\n\t\tconst installed = await this.extensionsWorkbenchService.queryLocal();\n\t\tconst allowedRecommendations = [\n\t\t\t...this.workspaceRecommendations.recommendations,\n\t\t\t...this.configBasedRecommendations.importantRecommendations.filter(\n\t\t\t\trecommendation => !recommendation.whenNotInstalled || recommendation.whenNotInstalled.every(id => installed.every(local => !areSameExtensions(local.identifier, { id }))))\n\t\t]\n\t\t\t.map(({ extensionId }) => extensionId)\n\t\t\t.filter(extensionId => this.isExtensionAllowedToBeRecommended(extensionId));\n\n\t\tif (allowedRecommendations.length) {\n\t\t\tawait this._registerP(timeout(5000));\n\t\t\tawait this.extensionRecommendationNotificationService.promptWorkspaceRecommendations(allowedRecommendations);\n\t\t}\n\t}\n\n\tprivate _registerP<T>(o: CancelablePromise<T>): CancelablePromise<T> {\n\t\tthis._register(toDisposable(() => o.cancel()));\n\t\treturn o;\n\t}\n}\n"]}