{"version":3,"sources":["vs/workbench/contrib/extensions/browser/extensionsCompletionItemsProvider.ts"],"names":[],"mappings":"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","file":"extensionsCompletionItemsProvider.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getLocation, parse } from 'vs/base/common/json';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Position } from 'vs/editor/common/core/position';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { CompletionContext, CompletionList, CompletionItemKind, CompletionItem } from 'vs/editor/common/languages';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\n\n\nexport class ExtensionsCompletionItemsProvider extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(languageFeaturesService.completionProvider.register({ language: 'jsonc', pattern: '**/settings.json' }, {\n\t\t\t_debugDisplayName: 'extensionsCompletionProvider',\n\t\t\tprovideCompletionItems: async (model: ITextModel, position: Position, _context: CompletionContext, token: CancellationToken): Promise<CompletionList> => {\n\t\t\t\tconst getWordRangeAtPosition = (model: ITextModel, position: Position): Range | null => {\n\t\t\t\t\tconst wordAtPosition = model.getWordAtPosition(position);\n\t\t\t\t\treturn wordAtPosition ? new Range(position.lineNumber, wordAtPosition.startColumn, position.lineNumber, wordAtPosition.endColumn) : null;\n\t\t\t\t};\n\n\t\t\t\tconst location = getLocation(model.getValue(), model.getOffsetAt(position));\n\t\t\t\tconst range = getWordRangeAtPosition(model, position) ?? Range.fromPositions(position, position);\n\n\t\t\t\t// extensions.supportUntrustedWorkspaces\n\t\t\t\tif (location.path[0] === 'extensions.supportUntrustedWorkspaces' && location.path.length === 2 && location.isAtPropertyKey) {\n\t\t\t\t\tlet alreadyConfigured: string[] = [];\n\t\t\t\t\ttry {\n\t\t\t\t\t\talreadyConfigured = Object.keys(parse(model.getValue())['extensions.supportUntrustedWorkspaces']);\n\t\t\t\t\t} catch (e) {/* ignore error */ }\n\n\t\t\t\t\treturn { suggestions: await this.provideSupportUntrustedWorkspacesExtensionProposals(alreadyConfigured, range) };\n\t\t\t\t}\n\n\t\t\t\treturn { suggestions: [] };\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async provideSupportUntrustedWorkspacesExtensionProposals(alreadyConfigured: string[], range: Range): Promise<CompletionItem[]> {\n\t\tconst suggestions: CompletionItem[] = [];\n\t\tconst installedExtensions = (await this.extensionManagementService.getInstalled()).filter(e => e.manifest.main);\n\t\tconst proposedExtensions = installedExtensions.filter(e => alreadyConfigured.indexOf(e.identifier.id) === -1);\n\n\t\tif (proposedExtensions.length) {\n\t\t\tsuggestions.push(...proposedExtensions.map(e => {\n\t\t\t\tconst text = `\"${e.identifier.id}\": {\\n\\t\"supported\": true,\\n\\t\"version\": \"${e.manifest.version}\"\\n},`;\n\t\t\t\treturn { label: e.identifier.id, kind: CompletionItemKind.Value, insertText: text, filterText: text, range };\n\t\t\t}));\n\t\t} else {\n\t\t\tconst text = '\"vscode.csharp\": {\\n\\t\"supported\": true,\\n\\t\"version\": \"0.0.0\"\\n},';\n\t\t\tsuggestions.push({ label: localize('exampleExtension', \"Example\"), kind: CompletionItemKind.Value, insertText: text, filterText: text, range });\n\t\t}\n\n\t\treturn suggestions;\n\t}\n}\n"]}