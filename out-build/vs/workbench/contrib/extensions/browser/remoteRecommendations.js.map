{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/extensions/browser/remoteRecommendations.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAOzF,IAAM,IAAI,GAAV,MAAM,IAAsB,SAAQ,+BAAI;QAG9C,IAAI,eAAe,KAA6C,OAAO,IAAI,CAAC,CAAC,CAAgB,CAAC,CAAC;QAE/F,YACkB,CAAoC;YAErD,KAAK,EAAE,CAAC;YAF0B,MAAC,GAAD,CAAC,CAAkB;YAJ9C,MAAC,GAA6C,EAAE,CAAC;QAOzD,CAAC;QAES,KAAK,CAAC,CAAC;YAChB,MAAM,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAc,mBAAmB,EAAE,GAAG,IAAI,CAAC,CAAC,CAAc,6BAA6B,EAAE,CAAC;YAC3H,MAAM,eAAe,GAAG,IAAA,aAAE,EAAe,aAAE,CAAO,CAAC;YACnD,IAAI,CAAC,CAAC,GAAkB,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,kBAAkB,EAAE,EAAE,EAAE,CAAC,CAAC,kBAAkB,IAAI,kBAAkB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBAC9K,WAAW,EAAE,SAAS,CAAC,WAAW,CAAC,WAAW,EAAE;gBAChD,MAAM,EAAE;oBACP,QAAQ,mDAA2C;oBACnD,UAAU,EAAE,EAAE;iBACd;aACD,CAAC,CAAC,CAAC;QACL,CAAC;KACD,CAAA;IAtBY,oBAAI;mBAAJ,IAAI;QAMd,WAAA,oBAAG,CAAA;OANO,IAAI,CAsBhB","file":"remoteRecommendations.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtensionRecommendations, ExtensionRecommendation } from 'vs/workbench/contrib/extensions/browser/extensionRecommendations';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ExtensionRecommendationReason } from 'vs/workbench/services/extensionRecommendations/common/extensionRecommendations';\nimport { PlatformToString, platform } from 'vs/base/common/platform';\n\nexport class RemoteRecommendations extends ExtensionRecommendations {\n\n\tprivate _recommendations: ExtensionRecommendation[] = [];\n\tget recommendations(): ReadonlyArray<ExtensionRecommendation> { return this._recommendations; }\n\n\tconstructor(\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected async doActivate(): Promise<void> {\n\t\tconst extensionTips = { ...this.productService.remoteExtensionTips, ...this.productService.virtualWorkspaceExtensionTips };\n\t\tconst currentPlatform = PlatformToString(platform);\n\t\tthis._recommendations = Object.values(extensionTips).filter(({ supportedPlatforms }) => !supportedPlatforms || supportedPlatforms.includes(currentPlatform)).map(extension => ({\n\t\t\textensionId: extension.extensionId.toLowerCase(),\n\t\t\treason: {\n\t\t\t\treasonId: ExtensionRecommendationReason.Application,\n\t\t\t\treasonText: ''\n\t\t\t}\n\t\t}));\n\t}\n}\n\n"]}