{"version":3,"sources":["vs/workbench/contrib/extensions/browser/extensionsQuickAccess.ts"],"names":[],"mappings":"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","file":"extensionsQuickAccess.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { IPickerQuickAccessItem, PickerQuickAccessProvider } from 'vs/platform/quickinput/browser/pickerQuickAccess';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { localize } from 'vs/nls';\nimport { VIEWLET_ID, IExtensionsViewPaneContainer } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { IExtensionGalleryService, IExtensionManagementService, IGalleryExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { ViewContainerLocation } from 'vs/workbench/common/views';\n\nexport class InstallExtensionQuickAccessProvider extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\n\tstatic PREFIX = 'ext install ';\n\n\tconstructor(\n\t\t@IPaneCompositePartService private readonly paneCompositeService: IPaneCompositePartService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IExtensionManagementService private readonly extensionsService: IExtensionManagementService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper(InstallExtensionQuickAccessProvider.PREFIX);\n\t}\n\n\tprotected _getPicks(filter: string, disposables: DisposableStore, token: CancellationToken): Array<IPickerQuickAccessItem | IQuickPickSeparator> | Promise<Array<IPickerQuickAccessItem | IQuickPickSeparator>> {\n\n\t\t// Nothing typed\n\t\tif (!filter) {\n\t\t\treturn [{\n\t\t\t\tlabel: localize('type', \"Type an extension name to install or search.\")\n\t\t\t}];\n\t\t}\n\n\t\tconst genericSearchPickItem: IPickerQuickAccessItem = {\n\t\t\tlabel: localize('searchFor', \"Press Enter to search for extension '{0}'.\", filter),\n\t\t\taccept: () => this.searchExtension(filter)\n\t\t};\n\n\t\t// Extension ID typed: try to find it\n\t\tif (/\\./.test(filter)) {\n\t\t\treturn this.getPicksForExtensionId(filter, genericSearchPickItem, token);\n\t\t}\n\n\t\t// Extension name typed: offer to search it\n\t\treturn [genericSearchPickItem];\n\t}\n\n\tprivate async getPicksForExtensionId(filter: string, fallback: IPickerQuickAccessItem, token: CancellationToken): Promise<Array<IPickerQuickAccessItem | IQuickPickSeparator>> {\n\t\ttry {\n\t\t\tconst [galleryExtension] = await this.galleryService.getExtensions([{ id: filter }], token);\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn []; // return early if canceled\n\t\t\t}\n\n\t\t\tif (!galleryExtension) {\n\t\t\t\treturn [fallback];\n\t\t\t}\n\n\t\t\treturn [{\n\t\t\t\tlabel: localize('install', \"Press Enter to install extension '{0}'.\", filter),\n\t\t\t\taccept: () => this.installExtension(galleryExtension, filter)\n\t\t\t}];\n\t\t} catch (error) {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn []; // expected error\n\t\t\t}\n\n\t\t\tthis.logService.error(error);\n\n\t\t\treturn [fallback];\n\t\t}\n\t}\n\n\tprivate async installExtension(extension: IGalleryExtension, name: string): Promise<void> {\n\t\ttry {\n\t\t\tawait openExtensionsViewlet(this.paneCompositeService, `@id:${name}`);\n\t\t\tawait this.extensionsService.installFromGallery(extension);\n\t\t} catch (error) {\n\t\t\tthis.notificationService.error(error);\n\t\t}\n\t}\n\n\tprivate async searchExtension(name: string): Promise<void> {\n\t\topenExtensionsViewlet(this.paneCompositeService, name);\n\t}\n}\n\nexport class ManageExtensionsQuickAccessProvider extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\n\tstatic PREFIX = 'ext ';\n\n\tconstructor(@IPaneCompositePartService private readonly paneCompositeService: IPaneCompositePartService) {\n\t\tsuper(ManageExtensionsQuickAccessProvider.PREFIX);\n\t}\n\n\tprotected _getPicks(): Array<IPickerQuickAccessItem | IQuickPickSeparator> {\n\t\treturn [{\n\t\t\tlabel: localize('manage', \"Press Enter to manage your extensions.\"),\n\t\t\taccept: () => openExtensionsViewlet(this.paneCompositeService)\n\t\t}];\n\t}\n}\n\nasync function openExtensionsViewlet(paneCompositeService: IPaneCompositePartService, search = ''): Promise<void> {\n\tconst viewlet = await paneCompositeService.openPaneComposite(VIEWLET_ID, ViewContainerLocation.Sidebar, true);\n\tconst view = viewlet?.getViewPaneContainer() as IExtensionsViewPaneContainer | undefined;\n\tview?.search(search);\n\tview?.focus();\n}\n"]}