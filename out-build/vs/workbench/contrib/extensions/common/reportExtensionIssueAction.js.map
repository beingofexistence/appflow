{"version":3,"sources":["vs/workbench/contrib/extensions/common/reportExtensionIssueAction.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IAOzF,IAAM,IAAI,GAAV,MAAM,IAA2B,SAAQ,aAAG;;iBAE1B,MAAC,GAAK,kDAAL,AAAuD,CAAC;iBACzD,MAAC,GAAQ,GAAG,CAAC,QAAQ,CAAC,CAAsB,EAAE,IAAc,CAA3D,AAA4D,CAAC;QAEtF,0FAA0F;QAC1F,YACS,CAAgC,EACC,CAAkB;YAE3D,KAAK,CAAC,MAAI,CAAuB,CAAC,EAAI,MAAI,CAAuB,CAAC,EAAO,+BAA+B,CAAC,CAAC;YAHlG,MAAC,GAAD,CAAC,CAA+B;YACC,MAAC,GAAD,CAAC,CAAiB;YAI3D,IAAI,CAAC,OAAO,GAAG,CAAC,CAAS,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,CAAS,UAAU,IAAI,CAAC,CAAC,CAAC,CAAS,UAAU,CAAC,GAAG,CAAC,CAAC;QAC9F,CAAC;QAEQ,KAAK,CAAC,GAAG;YACjB,MAAM,IAAI,CAAC,CAAC,CAAY,YAAY,CAAC;gBACpC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAS,UAAU,CAAC,KAAK;aAC5C,CAAC,CAAC;QACJ,CAAC;;IAnBW,oBAAI;mBAAJ,IAAI;QAQd,WAAA,YAAI,CAAA;OARM,IAAI,CAoBhB","file":"reportExtensionIssueAction.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Action } from 'vs/base/common/actions';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IWorkbenchIssueService } from 'vs/workbench/services/issue/common/issue';\n\nexport class ReportExtensionIssueAction extends Action {\n\n\tprivate static readonly _id = 'workbench.extensions.action.reportExtensionIssue';\n\tprivate static readonly _label = nls.localize('reportExtensionIssue', \"Report Issue\");\n\n\t// TODO: Consider passing in IExtensionStatus or IExtensionHostProfile for additional data\n\tconstructor(\n\t\tprivate extension: IExtensionDescription,\n\t\t@IWorkbenchIssueService private readonly issueService: IWorkbenchIssueService\n\t) {\n\t\tsuper(ReportExtensionIssueAction._id, ReportExtensionIssueAction._label, 'extension-action report-issue');\n\n\t\tthis.enabled = extension.isBuiltin || (!!extension.repository && !!extension.repository.url);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tawait this.issueService.openReporter({\n\t\t\textensionId: this.extension.identifier.value,\n\t\t});\n\t}\n}\n"]}