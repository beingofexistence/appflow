{"version":3,"sources":["vs/workbench/contrib/update/browser/update.ts"],"names":[],"mappings":"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","file":"update.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport severity from 'vs/base/common/severity';\nimport { Disposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IActivityService, NumberBadge, IBadge, ProgressBadge } from 'vs/workbench/services/activity/common/activity';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IUpdateService, State as UpdateState, StateType, IUpdate, DisablementReason } from 'vs/platform/update/common/update';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { ReleaseNotesManager } from 'vs/workbench/contrib/update/browser/releaseNotesEditor';\nimport { isWeb, isWindows } from 'vs/base/common/platform';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { RawContextKey, IContextKey, IContextKeyService, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { MenuRegistry, MenuId, registerAction2, Action2 } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IUserDataSyncEnablementService, IUserDataSyncService, IUserDataSyncStoreManagementService, SyncStatus, UserDataSyncStoreType } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IsWebContext } from 'vs/platform/contextkey/common/contextkeys';\nimport { Promises } from 'vs/base/common/async';\nimport { IUserDataSyncWorkbenchService } from 'vs/workbench/services/userDataSync/common/userDataSync';\nimport { Event } from 'vs/base/common/event';\nimport { Action } from 'vs/base/common/actions';\n\nexport const CONTEXT_UPDATE_STATE = new RawContextKey<string>('updateState', StateType.Uninitialized);\nexport const MAJOR_MINOR_UPDATE_AVAILABLE = new RawContextKey<boolean>('majorMinorUpdateAvailable', false);\nexport const RELEASE_NOTES_URL = new RawContextKey<string>('releaseNotesUrl', '');\nexport const DOWNLOAD_URL = new RawContextKey<string>('downloadUrl', '');\n\nlet releaseNotesManager: ReleaseNotesManager | undefined = undefined;\n\nexport function showReleaseNotesInEditor(instantiationService: IInstantiationService, version: string) {\n\tif (!releaseNotesManager) {\n\t\treleaseNotesManager = instantiationService.createInstance(ReleaseNotesManager);\n\t}\n\n\treturn releaseNotesManager.show(version);\n}\n\nasync function openLatestReleaseNotesInBrowser(accessor: ServicesAccessor) {\n\tconst openerService = accessor.get(IOpenerService);\n\tconst productService = accessor.get(IProductService);\n\n\tif (productService.releaseNotesUrl) {\n\t\tconst uri = URI.parse(productService.releaseNotesUrl);\n\t\tawait openerService.open(uri);\n\t} else {\n\t\tthrow new Error(nls.localize('update.noReleaseNotesOnline', \"This version of {0} does not have release notes online\", productService.nameLong));\n\t}\n}\n\nasync function showReleaseNotes(accessor: ServicesAccessor, version: string) {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\ttry {\n\t\tawait showReleaseNotesInEditor(instantiationService, version);\n\t} catch (err) {\n\t\ttry {\n\t\t\tawait instantiationService.invokeFunction(openLatestReleaseNotesInBrowser);\n\t\t} catch (err2) {\n\t\t\tthrow new Error(`${err.message} and ${err2.message}`);\n\t\t}\n\t}\n}\n\ninterface IVersion {\n\tmajor: number;\n\tminor: number;\n\tpatch: number;\n}\n\nfunction parseVersion(version: string): IVersion | undefined {\n\tconst match = /([0-9]+)\\.([0-9]+)\\.([0-9]+)/.exec(version);\n\n\tif (!match) {\n\t\treturn undefined;\n\t}\n\n\treturn {\n\t\tmajor: parseInt(match[1]),\n\t\tminor: parseInt(match[2]),\n\t\tpatch: parseInt(match[3])\n\t};\n}\n\nfunction isMajorMinorUpdate(before: IVersion, after: IVersion): boolean {\n\treturn before.major < after.major || before.minor < after.minor;\n}\n\nexport class ProductContribution implements IWorkbenchContribution {\n\n\tprivate static readonly KEY = 'releaseNotes/lastVersion';\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IBrowserWorkbenchEnvironmentService environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IProductService productService: IProductService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tif (productService.releaseNotesUrl) {\n\t\t\tconst releaseNotesUrlKey = RELEASE_NOTES_URL.bindTo(contextKeyService);\n\t\t\treleaseNotesUrlKey.set(productService.releaseNotesUrl);\n\t\t}\n\t\tif (productService.downloadUrl) {\n\t\t\tconst downloadUrlKey = DOWNLOAD_URL.bindTo(contextKeyService);\n\t\t\tdownloadUrlKey.set(productService.downloadUrl);\n\t\t}\n\n\t\tif (isWeb) {\n\t\t\treturn;\n\t\t}\n\n\t\thostService.hadLastFocus().then(async hadLastFocus => {\n\t\t\tif (!hadLastFocus) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst lastVersion = parseVersion(storageService.get(ProductContribution.KEY, StorageScope.APPLICATION, ''));\n\t\t\tconst currentVersion = parseVersion(productService.version);\n\t\t\tconst shouldShowReleaseNotes = configurationService.getValue<boolean>('update.showReleaseNotes');\n\t\t\tconst releaseNotesUrl = productService.releaseNotesUrl;\n\n\t\t\t// was there a major/minor update? if so, open release notes\n\t\t\tif (shouldShowReleaseNotes && !environmentService.skipReleaseNotes && releaseNotesUrl && lastVersion && currentVersion && isMajorMinorUpdate(lastVersion, currentVersion)) {\n\t\t\t\tshowReleaseNotesInEditor(instantiationService, productService.version)\n\t\t\t\t\t.then(undefined, () => {\n\t\t\t\t\t\tnotificationService.prompt(\n\t\t\t\t\t\t\tseverity.Info,\n\t\t\t\t\t\t\tnls.localize('read the release notes', \"Welcome to {0} v{1}! Would you like to read the Release Notes?\", productService.nameLong, productService.version),\n\t\t\t\t\t\t\t[{\n\t\t\t\t\t\t\t\tlabel: nls.localize('releaseNotes', \"Release Notes\"),\n\t\t\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\t\t\tconst uri = URI.parse(releaseNotesUrl);\n\t\t\t\t\t\t\t\t\topenerService.open(uri);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tstorageService.store(ProductContribution.KEY, productService.version, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t});\n\t}\n}\n\nexport class UpdateContribution extends Disposable implements IWorkbenchContribution {\n\n\tprivate state: UpdateState;\n\tprivate readonly badgeDisposable = this._register(new MutableDisposable());\n\tprivate updateStateContextKey: IContextKey<string>;\n\tprivate majorMinorUpdateAvailableContextKey: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IUpdateService private readonly updateService: IUpdateService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IHostService private readonly hostService: IHostService\n\t) {\n\t\tsuper();\n\t\tthis.state = updateService.state;\n\t\tthis.updateStateContextKey = CONTEXT_UPDATE_STATE.bindTo(this.contextKeyService);\n\t\tthis.majorMinorUpdateAvailableContextKey = MAJOR_MINOR_UPDATE_AVAILABLE.bindTo(this.contextKeyService);\n\n\t\tthis._register(updateService.onStateChange(this.onUpdateStateChange, this));\n\t\tthis.onUpdateStateChange(this.updateService.state);\n\n\t\t/*\n\t\tThe `update/lastKnownVersion` and `update/updateNotificationTime` storage keys are used in\n\t\tcombination to figure out when to show a message to the user that he should update.\n\n\t\tThis message should appear if the user has received an update notification but hasn't\n\t\tupdated since 5 days.\n\t\t*/\n\n\t\tconst currentVersion = this.productService.commit;\n\t\tconst lastKnownVersion = this.storageService.get('update/lastKnownVersion', StorageScope.APPLICATION);\n\n\t\t// if current version != stored version, clear both fields\n\t\tif (currentVersion !== lastKnownVersion) {\n\t\t\tthis.storageService.remove('update/lastKnownVersion', StorageScope.APPLICATION);\n\t\t\tthis.storageService.remove('update/updateNotificationTime', StorageScope.APPLICATION);\n\t\t}\n\n\t\tthis.registerGlobalActivityActions();\n\t}\n\n\tprivate async onUpdateStateChange(state: UpdateState): Promise<void> {\n\t\tthis.updateStateContextKey.set(state.type);\n\n\t\tswitch (state.type) {\n\t\t\tcase StateType.Disabled:\n\t\t\t\tif (state.reason === DisablementReason.RunningAsAdmin) {\n\t\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\t\tseverity: Severity.Info,\n\t\t\t\t\t\tmessage: nls.localize('update service disabled', \"Updates are disabled because you are running the user-scope installation of {0} as Administrator.\", this.productService.nameLong),\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\tprimary: [\n\t\t\t\t\t\t\t\tnew Action('', nls.localize('learn more', \"Learn More\"), undefined, undefined, () => {\n\t\t\t\t\t\t\t\t\tthis.openerService.open('https://aka.ms/vscode-windows-setup');\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tneverShowAgain: { id: 'no-updates-running-as-admin', }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase StateType.Idle:\n\t\t\t\tif (state.error) {\n\t\t\t\t\tthis.onError(state.error);\n\t\t\t\t} else if (this.state.type === StateType.CheckingForUpdates && this.state.explicit && await this.hostService.hadLastFocus()) {\n\t\t\t\t\tthis.onUpdateNotAvailable();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase StateType.AvailableForDownload:\n\t\t\t\tthis.onUpdateAvailable(state.update);\n\t\t\t\tbreak;\n\n\t\t\tcase StateType.Downloaded:\n\t\t\t\tthis.onUpdateDownloaded(state.update);\n\t\t\t\tbreak;\n\n\t\t\tcase StateType.Ready: {\n\t\t\t\tconst currentVersion = parseVersion(this.productService.version);\n\t\t\t\tconst nextVersion = parseVersion(state.update.productVersion);\n\t\t\t\tthis.majorMinorUpdateAvailableContextKey.set(Boolean(currentVersion && nextVersion && isMajorMinorUpdate(currentVersion, nextVersion)));\n\t\t\t\tthis.onUpdateReady(state.update);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet badge: IBadge | undefined = undefined;\n\t\tlet clazz: string | undefined;\n\t\tlet priority: number | undefined = undefined;\n\n\t\tif (state.type === StateType.AvailableForDownload || state.type === StateType.Downloaded || state.type === StateType.Ready) {\n\t\t\tbadge = new NumberBadge(1, () => nls.localize('updateIsReady', \"New {0} update available.\", this.productService.nameShort));\n\t\t} else if (state.type === StateType.CheckingForUpdates) {\n\t\t\tbadge = new ProgressBadge(() => nls.localize('checkingForUpdates', \"Checking for Updates...\"));\n\t\t\tclazz = 'progress-badge';\n\t\t\tpriority = 1;\n\t\t} else if (state.type === StateType.Downloading) {\n\t\t\tbadge = new ProgressBadge(() => nls.localize('downloading', \"Downloading...\"));\n\t\t\tclazz = 'progress-badge';\n\t\t\tpriority = 1;\n\t\t} else if (state.type === StateType.Updating) {\n\t\t\tbadge = new ProgressBadge(() => nls.localize('updating', \"Updating...\"));\n\t\t\tclazz = 'progress-badge';\n\t\t\tpriority = 1;\n\t\t}\n\n\t\tthis.badgeDisposable.clear();\n\n\t\tif (badge) {\n\t\t\tthis.badgeDisposable.value = this.activityService.showGlobalActivity({ badge, clazz, priority });\n\t\t}\n\n\t\tthis.state = state;\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (/The request timed out|The network connection was lost/i.test(error)) {\n\t\t\treturn;\n\t\t}\n\n\t\terror = error.replace(/See https:\\/\\/github\\.com\\/Squirrel\\/Squirrel\\.Mac\\/issues\\/182 for more information/, 'This might mean the application was put on quarantine by macOS. See [this link](https://github.com/microsoft/vscode/issues/7426#issuecomment-425093469) for more information');\n\n\t\tthis.notificationService.notify({\n\t\t\tseverity: Severity.Error,\n\t\t\tmessage: error,\n\t\t\tsource: nls.localize('update service', \"Update Service\"),\n\t\t});\n\t}\n\n\tprivate onUpdateNotAvailable(): void {\n\t\tthis.dialogService.info(nls.localize('noUpdatesAvailable', \"There are currently no updates available.\"));\n\t}\n\n\t// linux\n\tprivate onUpdateAvailable(update: IUpdate): void {\n\t\tif (!this.shouldShowNotification()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notificationService.prompt(\n\t\t\tseverity.Info,\n\t\t\tnls.localize('thereIsUpdateAvailable', \"There is an available update.\"),\n\t\t\t[{\n\t\t\t\tlabel: nls.localize('download update', \"Download Update\"),\n\t\t\t\trun: () => this.updateService.downloadUpdate()\n\t\t\t}, {\n\t\t\t\tlabel: nls.localize('later', \"Later\"),\n\t\t\t\trun: () => { }\n\t\t\t}, {\n\t\t\t\tlabel: nls.localize('releaseNotes', \"Release Notes\"),\n\t\t\t\trun: () => {\n\t\t\t\t\tthis.instantiationService.invokeFunction(accessor => showReleaseNotes(accessor, update.productVersion));\n\t\t\t\t}\n\t\t\t}]\n\t\t);\n\t}\n\n\t// windows fast updates (target === system)\n\tprivate onUpdateDownloaded(update: IUpdate): void {\n\t\tif (!this.shouldShowNotification()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notificationService.prompt(\n\t\t\tseverity.Info,\n\t\t\tnls.localize('updateAvailable', \"There's an update available: {0} {1}\", this.productService.nameLong, update.productVersion),\n\t\t\t[{\n\t\t\t\tlabel: nls.localize('installUpdate', \"Install Update\"),\n\t\t\t\trun: () => this.updateService.applyUpdate()\n\t\t\t}, {\n\t\t\t\tlabel: nls.localize('later', \"Later\"),\n\t\t\t\trun: () => { }\n\t\t\t}, {\n\t\t\t\tlabel: nls.localize('releaseNotes', \"Release Notes\"),\n\t\t\t\trun: () => {\n\t\t\t\t\tthis.instantiationService.invokeFunction(accessor => showReleaseNotes(accessor, update.productVersion));\n\t\t\t\t}\n\t\t\t}]\n\t\t);\n\t}\n\n\t// windows and mac\n\tprivate onUpdateReady(update: IUpdate): void {\n\t\tif (!(isWindows && this.productService.target !== 'user') && !this.shouldShowNotification()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst actions = [{\n\t\t\tlabel: nls.localize('updateNow', \"Update Now\"),\n\t\t\trun: () => this.updateService.quitAndInstall()\n\t\t}, {\n\t\t\tlabel: nls.localize('later', \"Later\"),\n\t\t\trun: () => { }\n\t\t}];\n\n\t\t// TODO@joao check why snap updates send `update` as falsy\n\t\tif (update.productVersion) {\n\t\t\tactions.push({\n\t\t\t\tlabel: nls.localize('releaseNotes', \"Release Notes\"),\n\t\t\t\trun: () => {\n\t\t\t\t\tthis.instantiationService.invokeFunction(accessor => showReleaseNotes(accessor, update.productVersion));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// windows user fast updates and mac\n\t\tthis.notificationService.prompt(\n\t\t\tseverity.Info,\n\t\t\tnls.localize('updateAvailableAfterRestart', \"Restart {0} to apply the latest update.\", this.productService.nameLong),\n\t\t\tactions,\n\t\t\t{ sticky: true }\n\t\t);\n\t}\n\n\tprivate shouldShowNotification(): boolean {\n\t\tconst currentVersion = this.productService.commit;\n\t\tconst currentMillis = new Date().getTime();\n\t\tconst lastKnownVersion = this.storageService.get('update/lastKnownVersion', StorageScope.APPLICATION);\n\n\t\t// if version != stored version, save version and date\n\t\tif (currentVersion !== lastKnownVersion) {\n\t\t\tthis.storageService.store('update/lastKnownVersion', currentVersion!, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t\tthis.storageService.store('update/updateNotificationTime', currentMillis, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t}\n\n\t\tconst updateNotificationMillis = this.storageService.getNumber('update/updateNotificationTime', StorageScope.APPLICATION, currentMillis);\n\t\tconst diffDays = (currentMillis - updateNotificationMillis) / (1000 * 60 * 60 * 24);\n\n\t\treturn diffDays > 5;\n\t}\n\n\tprivate registerGlobalActivityActions(): void {\n\t\tCommandsRegistry.registerCommand('update.check', () => this.updateService.checkForUpdates(true));\n\t\tMenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\t\t\tgroup: '7_update',\n\t\t\tcommand: {\n\t\t\t\tid: 'update.check',\n\t\t\t\ttitle: nls.localize('checkForUpdates', \"Check for Updates...\")\n\t\t\t},\n\t\t\twhen: CONTEXT_UPDATE_STATE.isEqualTo(StateType.Idle)\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('update.checking', () => { });\n\t\tMenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\t\t\tgroup: '7_update',\n\t\t\tcommand: {\n\t\t\t\tid: 'update.checking',\n\t\t\t\ttitle: nls.localize('checkingForUpdates', \"Checking for Updates...\"),\n\t\t\t\tprecondition: ContextKeyExpr.false()\n\t\t\t},\n\t\t\twhen: CONTEXT_UPDATE_STATE.isEqualTo(StateType.CheckingForUpdates)\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('update.downloadNow', () => this.updateService.downloadUpdate());\n\t\tMenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\t\t\tgroup: '7_update',\n\t\t\tcommand: {\n\t\t\t\tid: 'update.downloadNow',\n\t\t\t\ttitle: nls.localize('download update_1', \"Download Update (1)\")\n\t\t\t},\n\t\t\twhen: CONTEXT_UPDATE_STATE.isEqualTo(StateType.AvailableForDownload)\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('update.downloading', () => { });\n\t\tMenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\t\t\tgroup: '7_update',\n\t\t\tcommand: {\n\t\t\t\tid: 'update.downloading',\n\t\t\t\ttitle: nls.localize('DownloadingUpdate', \"Downloading Update...\"),\n\t\t\t\tprecondition: ContextKeyExpr.false()\n\t\t\t},\n\t\t\twhen: CONTEXT_UPDATE_STATE.isEqualTo(StateType.Downloading)\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('update.install', () => this.updateService.applyUpdate());\n\t\tMenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\t\t\tgroup: '7_update',\n\t\t\tcommand: {\n\t\t\t\tid: 'update.install',\n\t\t\t\ttitle: nls.localize('installUpdate...', \"Install Update... (1)\")\n\t\t\t},\n\t\t\twhen: CONTEXT_UPDATE_STATE.isEqualTo(StateType.Downloaded)\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('update.updating', () => { });\n\t\tMenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\t\t\tgroup: '7_update',\n\t\t\tcommand: {\n\t\t\t\tid: 'update.updating',\n\t\t\t\ttitle: nls.localize('installingUpdate', \"Installing Update...\"),\n\t\t\t\tprecondition: ContextKeyExpr.false()\n\t\t\t},\n\t\t\twhen: CONTEXT_UPDATE_STATE.isEqualTo(StateType.Updating)\n\t\t});\n\n\t\tif (this.productService.quality === 'stable') {\n\t\t\tCommandsRegistry.registerCommand('update.showUpdateReleaseNotes', () => {\n\t\t\t\tif (this.updateService.state.type !== StateType.Ready) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst version = this.updateService.state.update.version;\n\t\t\t\tthis.instantiationService.invokeFunction(accessor => showReleaseNotes(accessor, version));\n\t\t\t});\n\t\t\tMenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\t\t\t\tgroup: '7_update',\n\t\t\t\torder: 1,\n\t\t\t\tcommand: {\n\t\t\t\t\tid: 'update.showUpdateReleaseNotes',\n\t\t\t\t\ttitle: nls.localize('showUpdateReleaseNotes', \"Show Update Release Notes\")\n\t\t\t\t},\n\t\t\t\twhen: ContextKeyExpr.and(CONTEXT_UPDATE_STATE.isEqualTo(StateType.Ready), MAJOR_MINOR_UPDATE_AVAILABLE)\n\t\t\t});\n\t\t}\n\n\t\tCommandsRegistry.registerCommand('update.restart', () => this.updateService.quitAndInstall());\n\t\tMenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\t\t\tgroup: '7_update',\n\t\t\torder: 2,\n\t\t\tcommand: {\n\t\t\t\tid: 'update.restart',\n\t\t\t\ttitle: nls.localize('restartToUpdate', \"Restart to Update (1)\")\n\t\t\t},\n\t\t\twhen: CONTEXT_UPDATE_STATE.isEqualTo(StateType.Ready)\n\t\t});\n\n\t\tCommandsRegistry.registerCommand('_update.state', () => {\n\t\t\treturn this.state;\n\t\t});\n\t}\n}\n\nexport class SwitchProductQualityContribution extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerGlobalActivityActions();\n\t}\n\n\tprivate registerGlobalActivityActions(): void {\n\t\tconst quality = this.productService.quality;\n\t\tconst productQualityChangeHandler = this.environmentService.options?.productQualityChangeHandler;\n\t\tif (productQualityChangeHandler && (quality === 'stable' || quality === 'insider')) {\n\t\t\tconst newQuality = quality === 'stable' ? 'insider' : 'stable';\n\t\t\tconst commandId = `update.switchQuality.${newQuality}`;\n\t\t\tconst isSwitchingToInsiders = newQuality === 'insider';\n\t\t\tregisterAction2(class SwitchQuality extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: commandId,\n\t\t\t\t\t\ttitle: isSwitchingToInsiders ? nls.localize('switchToInsiders', \"Switch to Insiders Version...\") : nls.localize('switchToStable', \"Switch to Stable Version...\"),\n\t\t\t\t\t\tprecondition: IsWebContext,\n\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\tid: MenuId.GlobalActivity,\n\t\t\t\t\t\t\twhen: IsWebContext,\n\t\t\t\t\t\t\tgroup: '7_update',\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\t\tconst userDataSyncEnablementService = accessor.get(IUserDataSyncEnablementService);\n\t\t\t\t\tconst userDataSyncStoreManagementService = accessor.get(IUserDataSyncStoreManagementService);\n\t\t\t\t\tconst storageService = accessor.get(IStorageService);\n\t\t\t\t\tconst userDataSyncWorkbenchService = accessor.get(IUserDataSyncWorkbenchService);\n\t\t\t\t\tconst userDataSyncService = accessor.get(IUserDataSyncService);\n\t\t\t\t\tconst notificationService = accessor.get(INotificationService);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst selectSettingsSyncServiceDialogShownKey = 'switchQuality.selectSettingsSyncServiceDialogShown';\n\t\t\t\t\t\tconst userDataSyncStore = userDataSyncStoreManagementService.userDataSyncStore;\n\t\t\t\t\t\tlet userDataSyncStoreType: UserDataSyncStoreType | undefined;\n\t\t\t\t\t\tif (userDataSyncStore && isSwitchingToInsiders && userDataSyncEnablementService.isEnabled()\n\t\t\t\t\t\t\t&& !storageService.getBoolean(selectSettingsSyncServiceDialogShownKey, StorageScope.APPLICATION, false)) {\n\t\t\t\t\t\t\tuserDataSyncStoreType = await this.selectSettingsSyncService(dialogService);\n\t\t\t\t\t\t\tif (!userDataSyncStoreType) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstorageService.store(selectSettingsSyncServiceDialogShownKey, true, StorageScope.APPLICATION, StorageTarget.USER);\n\t\t\t\t\t\t\tif (userDataSyncStoreType === 'stable') {\n\t\t\t\t\t\t\t\t// Update the stable service type in the current window, so that it uses stable service after switched to insiders version (after reload).\n\t\t\t\t\t\t\t\tawait userDataSyncStoreManagementService.switch(userDataSyncStoreType);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst res = await dialogService.confirm({\n\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\tmessage: nls.localize('relaunchMessage', \"Changing the version requires a reload to take effect\"),\n\t\t\t\t\t\t\tdetail: newQuality === 'insider' ?\n\t\t\t\t\t\t\t\tnls.localize('relaunchDetailInsiders', \"Press the reload button to switch to the Insiders version of VS Code.\") :\n\t\t\t\t\t\t\t\tnls.localize('relaunchDetailStable', \"Press the reload button to switch to the Stable version of VS Code.\"),\n\t\t\t\t\t\t\tprimaryButton: nls.localize({ key: 'reload', comment: ['&& denotes a mnemonic'] }, \"&&Reload\")\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (res.confirmed) {\n\t\t\t\t\t\t\tconst promises: Promise<any>[] = [];\n\n\t\t\t\t\t\t\t// If sync is happening wait until it is finished before reload\n\t\t\t\t\t\t\tif (userDataSyncService.status === SyncStatus.Syncing) {\n\t\t\t\t\t\t\t\tpromises.push(Event.toPromise(Event.filter(userDataSyncService.onDidChangeStatus, status => status !== SyncStatus.Syncing)));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// If user chose the sync service then synchronise the store type option in insiders service, so that other clients using insiders service are also updated.\n\t\t\t\t\t\t\tif (isSwitchingToInsiders && userDataSyncStoreType) {\n\t\t\t\t\t\t\t\tpromises.push(userDataSyncWorkbenchService.synchroniseUserDataSyncStoreType());\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tawait Promises.settled(promises);\n\n\t\t\t\t\t\t\tproductQualityChangeHandler(newQuality);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reset\n\t\t\t\t\t\t\tif (userDataSyncStoreType) {\n\t\t\t\t\t\t\t\tstorageService.remove(selectSettingsSyncServiceDialogShownKey, StorageScope.APPLICATION);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tnotificationService.error(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprivate async selectSettingsSyncService(dialogService: IDialogService): Promise<UserDataSyncStoreType | undefined> {\n\t\t\t\t\tconst { result } = await dialogService.prompt<UserDataSyncStoreType>({\n\t\t\t\t\t\ttype: Severity.Info,\n\t\t\t\t\t\tmessage: nls.localize('selectSyncService.message', \"Choose the settings sync service to use after changing the version\"),\n\t\t\t\t\t\tdetail: nls.localize('selectSyncService.detail', \"The Insiders version of VS Code will synchronize your settings, keybindings, extensions, snippets and UI State using separate insiders settings sync service by default.\"),\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: nls.localize({ key: 'use insiders', comment: ['&& denotes a mnemonic'] }, \"&&Insiders\"),\n\t\t\t\t\t\t\t\trun: () => 'insiders'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: nls.localize({ key: 'use stable', comment: ['&& denotes a mnemonic'] }, \"&&Stable (current)\"),\n\t\t\t\t\t\t\t\trun: () => 'stable'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\tcancelButton: true\n\t\t\t\t\t});\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n"]}