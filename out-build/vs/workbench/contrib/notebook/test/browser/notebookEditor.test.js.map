{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/test/browser/notebookEditor.test.ts"],"names":[],"mappings":"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","file":"notebookEditor.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { mock } from 'vs/base/test/common/mock';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { FoldingModel, updateFoldingStateAtIndex } from 'vs/workbench/contrib/notebook/browser/viewModel/foldingModel';\nimport { expandCellRangesWithHiddenCells, INotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellKind } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { createNotebookCellList, setupInstantiationService, withTestNotebook } from 'vs/workbench/contrib/notebook/test/browser/testNotebookEditor';\nimport { ListViewInfoAccessor } from 'vs/workbench/contrib/notebook/browser/view/notebookCellList';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nsuite('ListViewInfoAccessor', () => {\n\tlet disposables: DisposableStore;\n\tlet instantiationService: TestInstantiationService;\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\tinstantiationService = setupInstantiationService(disposables);\n\t});\n\n\ttest('basics', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header a', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var b = 1;', 'javascript', CellKind.Code, [], {}],\n\t\t\t\t['# header b', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['var b = 2;', 'javascript', CellKind.Code, [], {}],\n\t\t\t\t['var c = 3;', 'javascript', CellKind.Code, [], {}]\n\t\t\t],\n\t\t\t(editor, viewModel, ds) => {\n\t\t\t\tconst foldingModel = ds.add(new FoldingModel());\n\t\t\t\tfoldingModel.attachViewModel(viewModel);\n\n\t\t\t\tconst cellList = ds.add(createNotebookCellList(instantiationService, ds));\n\t\t\t\tcellList.attachViewModel(viewModel);\n\t\t\t\tconst listViewInfoAccessor = ds.add(new ListViewInfoAccessor(cellList));\n\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(0)!), 0);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(1)!), 1);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(2)!), 2);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(3)!), 3);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(4)!), 4);\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellRangeFromViewRange(0, 1), { start: 0, end: 1 });\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellRangeFromViewRange(1, 2), { start: 1, end: 2 });\n\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 0, true);\n\t\t\t\tupdateFoldingStateAtIndex(foldingModel, 2, true);\n\t\t\t\tviewModel.updateFoldingRanges(foldingModel.regions);\n\t\t\t\tcellList.setHiddenAreas(viewModel.getHiddenRanges(), true);\n\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(0)!), 0);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(1)!), -1);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(2)!), 1);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(3)!), -1);\n\t\t\t\tassert.strictEqual(listViewInfoAccessor.getViewIndex(viewModel.cellAt(4)!), -1);\n\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellRangeFromViewRange(0, 1), { start: 0, end: 2 });\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellRangeFromViewRange(1, 2), { start: 2, end: 5 });\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellsFromViewRange(0, 1), viewModel.getCellsInRange({ start: 0, end: 2 }));\n\t\t\t\tassert.deepStrictEqual(listViewInfoAccessor.getCellsFromViewRange(1, 2), viewModel.getCellsInRange({ start: 2, end: 5 }));\n\n\t\t\t\tconst notebookEditor = new class extends mock<INotebookEditor>() {\n\t\t\t\t\toverride getViewIndexByModelIndex(index: number) { return listViewInfoAccessor.getViewIndex(viewModel.viewCells[index]!); }\n\t\t\t\t\toverride getCellRangeFromViewRange(startIndex: number, endIndex: number) { return listViewInfoAccessor.getCellRangeFromViewRange(startIndex, endIndex); }\n\t\t\t\t\toverride cellAt(index: number) { return viewModel.cellAt(index); }\n\t\t\t\t};\n\n\t\t\t\tassert.deepStrictEqual(expandCellRangesWithHiddenCells(notebookEditor, [{ start: 0, end: 1 }]), [{ start: 0, end: 2 }]);\n\t\t\t\tassert.deepStrictEqual(expandCellRangesWithHiddenCells(notebookEditor, [{ start: 2, end: 3 }]), [{ start: 2, end: 5 }]);\n\t\t\t\tassert.deepStrictEqual(expandCellRangesWithHiddenCells(notebookEditor, [{ start: 0, end: 1 }, { start: 2, end: 3 }]), [{ start: 0, end: 5 }]);\n\t\t\t});\n\t});\n});\n"]}