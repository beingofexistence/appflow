{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/test/browser/notebookExecutionService.test.ts"],"names":[],"mappings":"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","file":"notebookExecutionService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as sinon from 'sinon';\nimport { Event } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { mock } from 'vs/base/test/common/mock';\nimport { assertThrowsAsync } from 'vs/base/test/common/utils';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { IMenu, IMenuService } from 'vs/platform/actions/common/actions';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { insertCellAtIndex } from 'vs/workbench/contrib/notebook/browser/controller/cellOperations';\nimport { NotebookExecutionService } from 'vs/workbench/contrib/notebook/browser/services/notebookExecutionServiceImpl';\nimport { NotebookKernelService } from 'vs/workbench/contrib/notebook/browser/services/notebookKernelServiceImpl';\nimport { NotebookViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/notebookViewModelImpl';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { CellKind, IOutputDto, NotebookCellMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookExecutionStateService } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\nimport { INotebookKernel, INotebookKernelHistoryService, INotebookKernelService, INotebookTextModelLike } from 'vs/workbench/contrib/notebook/common/notebookKernelService';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { setupInstantiationService, withTestNotebook as _withTestNotebook } from 'vs/workbench/contrib/notebook/test/browser/testNotebookEditor';\n\nsuite('NotebookExecutionService', () => {\n\n\tlet instantiationService: TestInstantiationService;\n\tlet contextKeyService: IContextKeyService;\n\tlet kernelService: INotebookKernelService;\n\tlet disposables: DisposableStore;\n\n\tsetup(function () {\n\n\t\tdisposables = new DisposableStore();\n\n\t\tinstantiationService = setupInstantiationService(disposables);\n\n\t\tinstantiationService.stub(INotebookService, new class extends mock<INotebookService>() {\n\t\t\toverride onDidAddNotebookDocument = Event.None;\n\t\t\toverride onWillRemoveNotebookDocument = Event.None;\n\t\t\toverride getNotebookTextModels() { return []; }\n\t\t});\n\n\t\tinstantiationService.stub(IMenuService, new class extends mock<IMenuService>() {\n\t\t\toverride createMenu() {\n\t\t\t\treturn new class extends mock<IMenu>() {\n\t\t\t\t\toverride onDidChange = Event.None;\n\t\t\t\t\toverride getActions() { return []; }\n\t\t\t\t\toverride dispose() { }\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tinstantiationService.stub(INotebookKernelHistoryService, new class extends mock<INotebookKernelHistoryService>() {\n\t\t\toverride getKernels(notebook: INotebookTextModelLike) {\n\t\t\t\treturn kernelService.getMatchingKernel(notebook);\n\t\t\t}\n\t\t\toverride addMostRecentKernel(kernel: INotebookKernel): void { }\n\t\t});\n\n\t\tinstantiationService.stub(ICommandService, new class extends mock<ICommandService>() {\n\t\t\toverride executeCommand(_commandId: string, ..._args: any[]) {\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\t\t});\n\n\t\tkernelService = instantiationService.createInstance(NotebookKernelService);\n\t\tinstantiationService.set(INotebookKernelService, kernelService);\n\t\tcontextKeyService = instantiationService.get(IContextKeyService);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tasync function withTestNotebook(cells: [string, string, CellKind, IOutputDto[], NotebookCellMetadata][], callback: (viewModel: NotebookViewModel, textModel: NotebookTextModel) => void | Promise<void>) {\n\t\treturn _withTestNotebook(cells, (editor, viewModel) => callback(viewModel, viewModel.notebookDocument));\n\t}\n\n\t// test('ctor', () => {\n\t// \tinstantiationService.createInstance(NotebookEditorKernelManager, { activeKernel: undefined, viewModel: undefined });\n\t// \tconst contextKeyService = instantiationService.get(IContextKeyService);\n\n\t// \tassert.strictEqual(contextKeyService.getContextKeyValue(NOTEBOOK_KERNEL_COUNT.key), 0);\n\t// });\n\n\ttest('cell is not runnable when no kernel is selected', async () => {\n\t\tawait withTestNotebook(\n\t\t\t[],\n\t\t\tasync (viewModel, textModel) => {\n\t\t\t\tconst executionService = instantiationService.createInstance(NotebookExecutionService);\n\n\t\t\t\tconst cell = insertCellAtIndex(viewModel, 1, 'var c = 3', 'javascript', CellKind.Code, {}, [], true, true);\n\t\t\t\tawait assertThrowsAsync(async () => await executionService.executeNotebookCells(textModel, [cell.model], contextKeyService));\n\t\t\t});\n\t});\n\n\ttest('cell is not runnable when kernel does not support the language', async () => {\n\t\tawait withTestNotebook(\n\t\t\t[],\n\t\t\tasync (viewModel, textModel) => {\n\n\t\t\t\tkernelService.registerKernel(new TestNotebookKernel({ languages: ['testlang'] }));\n\t\t\t\tconst executionService = instantiationService.createInstance(NotebookExecutionService);\n\t\t\t\tconst cell = insertCellAtIndex(viewModel, 1, 'var c = 3', 'javascript', CellKind.Code, {}, [], true, true);\n\t\t\t\tawait assertThrowsAsync(async () => await executionService.executeNotebookCells(textModel, [cell.model], contextKeyService));\n\n\t\t\t});\n\t});\n\n\ttest('cell is runnable when kernel does support the language', async () => {\n\t\tawait withTestNotebook(\n\t\t\t[],\n\t\t\tasync (viewModel, textModel) => {\n\t\t\t\tconst kernel = new TestNotebookKernel({ languages: ['javascript'] });\n\t\t\t\tkernelService.registerKernel(kernel);\n\t\t\t\tkernelService.selectKernelForNotebook(kernel, textModel);\n\t\t\t\tconst executionService = instantiationService.createInstance(NotebookExecutionService);\n\t\t\t\tconst executeSpy = sinon.spy();\n\t\t\t\tkernel.executeNotebookCellsRequest = executeSpy;\n\n\t\t\t\tconst cell = insertCellAtIndex(viewModel, 0, 'var c = 3', 'javascript', CellKind.Code, {}, [], true, true);\n\t\t\t\tawait executionService.executeNotebookCells(viewModel.notebookDocument, [cell.model], contextKeyService);\n\t\t\t\tassert.strictEqual(executeSpy.calledOnce, true);\n\t\t\t});\n\t});\n\n\ttest('Completes unconfirmed executions', async function () {\n\n\t\treturn withTestNotebook([], async (viewModel, textModel) => {\n\t\t\tlet didExecute = false;\n\t\t\tconst kernel = new class extends TestNotebookKernel {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({ languages: ['javascript'] });\n\t\t\t\t\tthis.id = 'mySpecialId';\n\t\t\t\t}\n\n\t\t\t\toverride async executeNotebookCellsRequest() {\n\t\t\t\t\tdidExecute = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tkernelService.registerKernel(kernel);\n\t\t\tkernelService.selectKernelForNotebook(kernel, textModel);\n\t\t\tconst executionService = instantiationService.createInstance(NotebookExecutionService);\n\t\t\tconst exeStateService = instantiationService.get(INotebookExecutionStateService);\n\n\t\t\tconst cell = insertCellAtIndex(viewModel, 0, 'var c = 3', 'javascript', CellKind.Code, {}, [], true, true);\n\t\t\tawait executionService.executeNotebookCells(textModel, [cell.model], contextKeyService);\n\n\t\t\tassert.strictEqual(didExecute, true);\n\t\t\tassert.strictEqual(exeStateService.getCellExecution(cell.uri), undefined);\n\t\t});\n\t});\n});\n\nclass TestNotebookKernel implements INotebookKernel {\n\tid: string = 'test';\n\tlabel: string = '';\n\tviewType = '*';\n\tonDidChange = Event.None;\n\textension: ExtensionIdentifier = new ExtensionIdentifier('test');\n\tlocalResourceRoot: URI = URI.file('/test');\n\tdescription?: string | undefined;\n\tdetail?: string | undefined;\n\tpreloadUris: URI[] = [];\n\tpreloadProvides: string[] = [];\n\tsupportedLanguages: string[] = [];\n\texecuteNotebookCellsRequest(): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tcancelNotebookCellExecution(): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tconstructor(opts?: { languages: string[] }) {\n\t\tthis.supportedLanguages = opts?.languages ?? [PLAINTEXT_LANGUAGE_ID];\n\t}\n\timplementsInterrupt?: boolean | undefined;\n\timplementsExecutionOrder?: boolean | undefined;\n}\n"]}