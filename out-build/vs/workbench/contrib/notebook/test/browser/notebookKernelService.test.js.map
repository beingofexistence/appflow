{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/test/browser/notebookKernelService.test.ts"],"names":[],"mappings":"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","file":"notebookKernelService.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { setupInstantiationService, withTestNotebook as _withTestNotebook } from 'vs/workbench/contrib/notebook/test/browser/testNotebookEditor';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { INotebookKernel, INotebookKernelService } from 'vs/workbench/contrib/notebook/common/notebookKernelService';\nimport { NotebookKernelService } from 'vs/workbench/contrib/notebook/browser/services/notebookKernelServiceImpl';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { mock } from 'vs/base/test/common/mock';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { IMenu, IMenuService } from 'vs/platform/actions/common/actions';\nimport { TransientOptions } from 'vs/workbench/contrib/notebook/common/notebookCommon';\n\nsuite('NotebookKernelService', () => {\n\n\tlet instantiationService: TestInstantiationService;\n\tlet kernelService: INotebookKernelService;\n\tlet disposables: DisposableStore;\n\n\tlet onDidAddNotebookDocument: Emitter<NotebookTextModel>;\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tsetup(function () {\n\t\tdisposables = new DisposableStore();\n\n\t\tonDidAddNotebookDocument = new Emitter();\n\t\tdisposables.add(onDidAddNotebookDocument);\n\n\t\tinstantiationService = setupInstantiationService(disposables);\n\t\tinstantiationService.stub(INotebookService, new class extends mock<INotebookService>() {\n\t\t\toverride onDidAddNotebookDocument = onDidAddNotebookDocument.event;\n\t\t\toverride onWillRemoveNotebookDocument = Event.None;\n\t\t\toverride getNotebookTextModels() { return []; }\n\t\t});\n\t\tinstantiationService.stub(IMenuService, new class extends mock<IMenuService>() {\n\t\t\toverride createMenu() {\n\t\t\t\treturn new class extends mock<IMenu>() {\n\t\t\t\t\toverride onDidChange = Event.None;\n\t\t\t\t\toverride getActions() { return []; }\n\t\t\t\t\toverride dispose() { }\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\tkernelService = instantiationService.createInstance(NotebookKernelService);\n\t\tinstantiationService.set(INotebookKernelService, kernelService);\n\t});\n\n\ttest('notebook priorities', function () {\n\n\t\tconst u1 = URI.parse('foo:///one');\n\t\tconst u2 = URI.parse('foo:///two');\n\n\t\tconst k1 = new TestNotebookKernel({ label: 'z' });\n\t\tconst k2 = new TestNotebookKernel({ label: 'a' });\n\n\t\tkernelService.registerKernel(k1);\n\t\tkernelService.registerKernel(k2);\n\n\t\t// equal priorities -> sort by name\n\t\tlet info = kernelService.getMatchingKernel({ uri: u1, viewType: 'foo' });\n\t\tassert.ok(info.all[0] === k2);\n\t\tassert.ok(info.all[1] === k1);\n\n\t\t// update priorities for u1 notebook\n\t\tkernelService.updateKernelNotebookAffinity(k2, u1, 2);\n\t\tkernelService.updateKernelNotebookAffinity(k2, u2, 1);\n\n\t\t// updated\n\t\tinfo = kernelService.getMatchingKernel({ uri: u1, viewType: 'foo' });\n\t\tassert.ok(info.all[0] === k2);\n\t\tassert.ok(info.all[1] === k1);\n\n\t\t// NOT updated\n\t\tinfo = kernelService.getMatchingKernel({ uri: u2, viewType: 'foo' });\n\t\tassert.ok(info.all[0] === k2);\n\t\tassert.ok(info.all[1] === k1);\n\n\t\t// reset\n\t\tkernelService.updateKernelNotebookAffinity(k2, u1, undefined);\n\t\tinfo = kernelService.getMatchingKernel({ uri: u1, viewType: 'foo' });\n\t\tassert.ok(info.all[0] === k2);\n\t\tassert.ok(info.all[1] === k1);\n\t});\n\n\ttest('new kernel with higher affinity wins, https://github.com/microsoft/vscode/issues/122028', function () {\n\t\tconst notebook = URI.parse('foo:///one');\n\n\t\tconst kernel = new TestNotebookKernel();\n\t\tkernelService.registerKernel(kernel);\n\n\t\tlet info = kernelService.getMatchingKernel({ uri: notebook, viewType: 'foo' });\n\t\tassert.strictEqual(info.all.length, 1);\n\t\tassert.ok(info.all[0] === kernel);\n\n\t\tconst betterKernel = new TestNotebookKernel();\n\t\tkernelService.registerKernel(betterKernel);\n\n\t\tinfo = kernelService.getMatchingKernel({ uri: notebook, viewType: 'foo' });\n\t\tassert.strictEqual(info.all.length, 2);\n\n\t\tkernelService.updateKernelNotebookAffinity(betterKernel, notebook, 2);\n\t\tinfo = kernelService.getMatchingKernel({ uri: notebook, viewType: 'foo' });\n\t\tassert.strictEqual(info.all.length, 2);\n\t\tassert.ok(info.all[0] === betterKernel);\n\t\tassert.ok(info.all[1] === kernel);\n\t});\n\n\ttest('onDidChangeSelectedNotebooks not fired on initial notebook open #121904', function () {\n\n\t\tconst uri = URI.parse('foo:///one');\n\t\tconst jupyter = { uri, viewType: 'jupyter' };\n\t\tconst dotnet = { uri, viewType: 'dotnet' };\n\n\t\tconst jupyterKernel = new TestNotebookKernel({ viewType: jupyter.viewType });\n\t\tconst dotnetKernel = new TestNotebookKernel({ viewType: dotnet.viewType });\n\t\tkernelService.registerKernel(jupyterKernel);\n\t\tkernelService.registerKernel(dotnetKernel);\n\n\t\tkernelService.selectKernelForNotebook(jupyterKernel, jupyter);\n\t\tkernelService.selectKernelForNotebook(dotnetKernel, dotnet);\n\n\t\tlet info = kernelService.getMatchingKernel(dotnet);\n\t\tassert.strictEqual(info.selected === dotnetKernel, true);\n\n\t\tinfo = kernelService.getMatchingKernel(jupyter);\n\t\tassert.strictEqual(info.selected === jupyterKernel, true);\n\t});\n\n\ttest('onDidChangeSelectedNotebooks not fired on initial notebook open #121904, p2', async function () {\n\n\t\tconst uri = URI.parse('foo:///one');\n\t\tconst jupyter = { uri, viewType: 'jupyter' };\n\t\tconst dotnet = { uri, viewType: 'dotnet' };\n\n\t\tconst jupyterKernel = new TestNotebookKernel({ viewType: jupyter.viewType });\n\t\tconst dotnetKernel = new TestNotebookKernel({ viewType: dotnet.viewType });\n\t\tkernelService.registerKernel(jupyterKernel);\n\t\tkernelService.registerKernel(dotnetKernel);\n\n\t\tkernelService.selectKernelForNotebook(jupyterKernel, jupyter);\n\t\tkernelService.selectKernelForNotebook(dotnetKernel, dotnet);\n\n\t\tconst transientOptions: TransientOptions = {\n\t\t\ttransientOutputs: false,\n\t\t\ttransientCellMetadata: {},\n\t\t\ttransientDocumentMetadata: {},\n\t\t\tcellContentMetadata: {},\n\t\t};\n\n\t\t{\n\t\t\t// open as jupyter -> bind event\n\t\t\tconst p1 = Event.toPromise(kernelService.onDidChangeSelectedNotebooks);\n\t\t\tconst d1 = instantiationService.createInstance(NotebookTextModel, jupyter.viewType, jupyter.uri, [], {}, transientOptions);\n\t\t\tonDidAddNotebookDocument.fire(d1);\n\t\t\tconst event = await p1;\n\t\t\tassert.strictEqual(event.newKernel, jupyterKernel.id);\n\t\t}\n\t\t{\n\t\t\t// RE-open as dotnet -> bind event\n\t\t\tconst p2 = Event.toPromise(kernelService.onDidChangeSelectedNotebooks);\n\t\t\tconst d2 = instantiationService.createInstance(NotebookTextModel, dotnet.viewType, dotnet.uri, [], {}, transientOptions);\n\t\t\tonDidAddNotebookDocument.fire(d2);\n\t\t\tconst event2 = await p2;\n\t\t\tassert.strictEqual(event2.newKernel, dotnetKernel.id);\n\t\t}\n\t});\n});\n\nclass TestNotebookKernel implements INotebookKernel {\n\tid: string = Math.random() + 'kernel';\n\tlabel: string = 'test-label';\n\tviewType = '*';\n\tonDidChange = Event.None;\n\textension: ExtensionIdentifier = new ExtensionIdentifier('test');\n\tlocalResourceRoot: URI = URI.file('/test');\n\tdescription?: string | undefined;\n\tdetail?: string | undefined;\n\tpreloadUris: URI[] = [];\n\tpreloadProvides: string[] = [];\n\tsupportedLanguages: string[] = [];\n\texecuteNotebookCellsRequest(): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\tcancelNotebookCellExecution(): Promise<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tconstructor(opts?: { languages?: string[]; label?: string; viewType?: string }) {\n\t\tthis.supportedLanguages = opts?.languages ?? [PLAINTEXT_LANGUAGE_ID];\n\t\tthis.label = opts?.label ?? this.label;\n\t\tthis.viewType = opts?.viewType ?? this.viewType;\n\t}\n}\n"]}