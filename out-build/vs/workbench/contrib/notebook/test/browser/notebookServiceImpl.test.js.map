{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/test/browser/notebookServiceImpl.test.ts"],"names":[],"mappings":"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","file":"notebookServiceImpl.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Event } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { mock } from 'vs/base/test/common/mock';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { NotebookProviderInfoStore } from 'vs/workbench/contrib/notebook/browser/services/notebookServiceImpl';\nimport { INotebookEditorModelResolverService } from 'vs/workbench/contrib/notebook/common/notebookEditorModelResolverService';\nimport { NotebookProviderInfo } from 'vs/workbench/contrib/notebook/common/notebookProvider';\nimport { EditorResolverService } from 'vs/workbench/services/editor/browser/editorResolverService';\nimport { RegisteredEditorPriority } from 'vs/workbench/services/editor/common/editorResolverService';\nimport { IExtensionService, nullExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { workbenchInstantiationService } from 'vs/workbench/test/browser/workbenchTestServices';\n\nsuite('NotebookProviderInfoStore', function () {\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite() as Pick<DisposableStore, 'add'>;\n\n\ttest('Can\\'t open untitled notebooks in test #119363', function () {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst store = new NotebookProviderInfoStore(\n\t\t\tnew class extends mock<IStorageService>() {\n\t\t\t\toverride get() { return ''; }\n\t\t\t\toverride store() { }\n\t\t\t},\n\t\t\tnew class extends mock<IExtensionService>() {\n\t\t\t\toverride onDidRegisterExtensions = Event.None;\n\t\t\t},\n\t\t\tdisposables.add(instantiationService.createInstance(EditorResolverService)),\n\t\t\tnew TestConfigurationService(),\n\t\t\tnew class extends mock<IAccessibilityService>() {\n\t\t\t\toverride onDidChangeScreenReaderOptimized: Event<void> = Event.None;\n\t\t\t},\n\t\t\tinstantiationService,\n\t\t\tnew class extends mock<IFileService>() {\n\t\t\t\toverride hasProvider() { return true; }\n\t\t\t},\n\t\t\tnew class extends mock<INotebookEditorModelResolverService>() { }\n\t\t);\n\t\tdisposables.add(store);\n\n\t\tconst fooInfo = new NotebookProviderInfo({\n\t\t\textension: nullExtensionDescription.identifier,\n\t\t\tid: 'foo',\n\t\t\tdisplayName: 'foo',\n\t\t\tselectors: [{ filenamePattern: '*.foo' }],\n\t\t\tpriority: RegisteredEditorPriority.default,\n\t\t\texclusive: false,\n\t\t\tproviderDisplayName: 'foo',\n\t\t});\n\t\tconst barInfo = new NotebookProviderInfo({\n\t\t\textension: nullExtensionDescription.identifier,\n\t\t\tid: 'bar',\n\t\t\tdisplayName: 'bar',\n\t\t\tselectors: [{ filenamePattern: '*.bar' }],\n\t\t\tpriority: RegisteredEditorPriority.default,\n\t\t\texclusive: false,\n\t\t\tproviderDisplayName: 'bar',\n\t\t});\n\n\t\tstore.add(fooInfo);\n\t\tstore.add(barInfo);\n\n\t\tassert.ok(store.get('foo'));\n\t\tassert.ok(store.get('bar'));\n\t\tassert.ok(!store.get('barfoo'));\n\n\t\tlet providers = store.getContributedNotebook(URI.parse('file:///test/nb.foo'));\n\t\tassert.strictEqual(providers.length, 1);\n\t\tassert.strictEqual(providers[0] === fooInfo, true);\n\n\t\tproviders = store.getContributedNotebook(URI.parse('file:///test/nb.bar'));\n\t\tassert.strictEqual(providers.length, 1);\n\t\tassert.strictEqual(providers[0] === barInfo, true);\n\n\t\tproviders = store.getContributedNotebook(URI.parse('untitled:///Untitled-1'));\n\t\tassert.strictEqual(providers.length, 2);\n\t\tassert.strictEqual(providers[0] === fooInfo, true);\n\t\tassert.strictEqual(providers[1] === barInfo, true);\n\n\t\tproviders = store.getContributedNotebook(URI.parse('untitled:///test/nb.bar'));\n\t\tassert.strictEqual(providers.length, 1);\n\t\tassert.strictEqual(providers[0] === barInfo, true);\n\t});\n\n});\n"]}