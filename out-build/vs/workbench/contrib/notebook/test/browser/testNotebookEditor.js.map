{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/test/browser/testNotebookEditor.ts"],"names":[],"mappings":"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","file":"testNotebookEditor.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { IListRenderer, IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { NotImplementedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { Mimes } from 'vs/base/common/mime';\nimport { URI } from 'vs/base/common/uri';\nimport { mock } from 'vs/base/test/common/mock';\nimport { runWithFakedTimers } from 'vs/base/test/common/timeTravelScheduler';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { LanguageService } from 'vs/editor/common/services/languageService';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ModelService } from 'vs/editor/common/services/modelService';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { TestLanguageConfigurationService } from 'vs/editor/test/common/modes/testLanguageConfigurationService';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { TestClipboardService } from 'vs/platform/clipboard/test/common/testClipboardService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { ContextKeyService } from 'vs/platform/contextkey/browser/contextKeyService';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { MockKeybindingService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { ILayoutService } from 'vs/platform/layout/browser/layoutService';\nimport { IListService, ListService } from 'vs/platform/list/browser/listService';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { IUndoRedoService } from 'vs/platform/undoRedo/common/undoRedo';\nimport { UndoRedoService } from 'vs/platform/undoRedo/common/undoRedoService';\nimport { IWorkspaceTrustRequestService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { EditorModel } from 'vs/workbench/common/editor/editorModel';\nimport { CellFindMatchWithIndex, IActiveNotebookEditorDelegate, IBaseCellEditorOptions, ICellViewModel, INotebookEditorDelegate } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { NotebookCellStateChangedEvent, NotebookLayoutInfo } from 'vs/workbench/contrib/notebook/browser/notebookViewEvents';\nimport { NotebookCellStatusBarService } from 'vs/workbench/contrib/notebook/browser/services/notebookCellStatusBarServiceImpl';\nimport { ListViewInfoAccessor, NotebookCellList } from 'vs/workbench/contrib/notebook/browser/view/notebookCellList';\nimport { BaseCellRenderTemplate } from 'vs/workbench/contrib/notebook/browser/view/notebookRenderingCommon';\nimport { NotebookEventDispatcher } from 'vs/workbench/contrib/notebook/browser/viewModel/eventDispatcher';\nimport { CellViewModel, NotebookViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/notebookViewModelImpl';\nimport { ViewContext } from 'vs/workbench/contrib/notebook/browser/viewModel/viewContext';\nimport { NotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { INotebookCellStatusBarService } from 'vs/workbench/contrib/notebook/common/notebookCellStatusBarService';\nimport { CellKind, CellUri, ICellDto2, INotebookDiffEditorModel, INotebookEditorModel, INotebookSearchOptions, IOutputDto, IResolvedNotebookEditorModel, NotebookCellExecutionState, NotebookCellMetadata, SelectionStateType } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { ICellExecuteUpdate, ICellExecutionComplete, ICellExecutionStateChangedEvent, IExecutionStateChangedEvent, INotebookCellExecution, INotebookExecution, INotebookExecutionStateService, INotebookFailStateChangedEvent } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\nimport { NotebookOptions } from 'vs/workbench/contrib/notebook/browser/notebookOptions';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { TextModelResolverService } from 'vs/workbench/services/textmodelResolver/common/textModelResolverService';\nimport { IWorkingCopySaveEvent } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { TestLayoutService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { TestStorageService, TestWorkspaceTrustRequestService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { FontInfo } from 'vs/editor/common/config/fontInfo';\nimport { EditorFontLigatures, EditorFontVariations } from 'vs/editor/common/config/editorOptions';\n\nexport class TestCell extends NotebookCellTextModel {\n\tconstructor(\n\t\tpublic viewType: string,\n\t\thandle: number,\n\t\tpublic source: string,\n\t\tlanguage: string,\n\t\tcellKind: CellKind,\n\t\toutputs: IOutputDto[],\n\t\tlanguageService: ILanguageService,\n\t) {\n\t\tsuper(CellUri.generate(URI.parse('test:///fake/notebook'), handle), handle, source, language, Mimes.text, cellKind, outputs, undefined, undefined, undefined, { transientCellMetadata: {}, transientDocumentMetadata: {}, transientOutputs: false, cellContentMetadata: {} }, languageService);\n\t}\n}\n\nexport class NotebookEditorTestModel extends EditorModel implements INotebookEditorModel {\n\tprivate _dirty = false;\n\n\tprotected readonly _onDidSave = this._register(new Emitter<IWorkingCopySaveEvent>());\n\treadonly onDidSave = this._onDidSave.event;\n\n\tprotected readonly _onDidChangeDirty = this._register(new Emitter<void>());\n\treadonly onDidChangeDirty = this._onDidChangeDirty.event;\n\n\treadonly onDidChangeOrphaned = Event.None;\n\treadonly onDidChangeReadonly = Event.None;\n\treadonly onDidRevertUntitled = Event.None;\n\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<void>());\n\treadonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\n\tget viewType() {\n\t\treturn this._notebook.viewType;\n\t}\n\n\tget resource() {\n\t\treturn this._notebook.uri;\n\t}\n\n\tget notebook(): NotebookTextModel {\n\t\treturn this._notebook;\n\t}\n\n\tconstructor(\n\t\tprivate _notebook: NotebookTextModel\n\t) {\n\t\tsuper();\n\n\t\tif (_notebook && _notebook.onDidChangeContent) {\n\t\t\tthis._register(_notebook.onDidChangeContent(() => {\n\t\t\t\tthis._dirty = true;\n\t\t\t\tthis._onDidChangeDirty.fire();\n\t\t\t\tthis._onDidChangeContent.fire();\n\t\t\t}));\n\t\t}\n\t}\n\n\tisReadonly(): boolean {\n\t\treturn false;\n\t}\n\n\tisOrphaned(): boolean {\n\t\treturn false;\n\t}\n\n\thasAssociatedFilePath(): boolean {\n\t\treturn false;\n\t}\n\n\tisDirty() {\n\t\treturn this._dirty;\n\t}\n\n\tget hasErrorState() {\n\t\treturn false;\n\t}\n\n\tisModified(): boolean {\n\t\treturn this._dirty;\n\t}\n\n\tgetNotebook(): NotebookTextModel {\n\t\treturn this._notebook;\n\t}\n\n\tasync load(): Promise<IResolvedNotebookEditorModel> {\n\t\treturn this;\n\t}\n\n\tasync save(): Promise<boolean> {\n\t\tif (this._notebook) {\n\t\t\tthis._dirty = false;\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t\tthis._onDidSave.fire({});\n\t\t\t// todo, flush all states\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tsaveAs(): Promise<EditorInput | undefined> {\n\t\tthrow new NotImplementedError();\n\t}\n\n\trevert(): Promise<void> {\n\t\tthrow new NotImplementedError();\n\t}\n}\n\nexport function setupInstantiationService(disposables: DisposableStore) {\n\tconst instantiationService = disposables.add(new TestInstantiationService());\n\tinstantiationService.stub(ILanguageService, disposables.add(new LanguageService()));\n\tinstantiationService.stub(IUndoRedoService, instantiationService.createInstance(UndoRedoService));\n\tinstantiationService.stub(IConfigurationService, new TestConfigurationService());\n\tinstantiationService.stub(IThemeService, new TestThemeService());\n\tinstantiationService.stub(ILanguageConfigurationService, disposables.add(new TestLanguageConfigurationService()));\n\tinstantiationService.stub(IModelService, disposables.add(instantiationService.createInstance(ModelService)));\n\tinstantiationService.stub(ITextModelService, <ITextModelService>disposables.add(instantiationService.createInstance(TextModelResolverService)));\n\tinstantiationService.stub(IContextKeyService, disposables.add(instantiationService.createInstance(ContextKeyService)));\n\tinstantiationService.stub(IListService, disposables.add(instantiationService.createInstance(ListService)));\n\tinstantiationService.stub(ILayoutService, new TestLayoutService());\n\tinstantiationService.stub(ILogService, new NullLogService());\n\tinstantiationService.stub(IClipboardService, TestClipboardService);\n\tinstantiationService.stub(IStorageService, disposables.add(new TestStorageService()));\n\tinstantiationService.stub(IWorkspaceTrustRequestService, disposables.add(new TestWorkspaceTrustRequestService(true)));\n\tinstantiationService.stub(INotebookExecutionStateService, new TestNotebookExecutionStateService());\n\tinstantiationService.stub(IKeybindingService, new MockKeybindingService());\n\tinstantiationService.stub(INotebookCellStatusBarService, disposables.add(new NotebookCellStatusBarService()));\n\n\treturn instantiationService;\n}\n\nfunction _createTestNotebookEditor(instantiationService: TestInstantiationService, disposables: DisposableStore, cells: [source: string, lang: string, kind: CellKind, output?: IOutputDto[], metadata?: NotebookCellMetadata][]): { editor: IActiveNotebookEditorDelegate; viewModel: NotebookViewModel } {\n\n\tconst viewType = 'notebook';\n\tconst notebook = disposables.add(instantiationService.createInstance(NotebookTextModel, viewType, URI.parse('test'), cells.map((cell): ICellDto2 => {\n\t\treturn {\n\t\t\tsource: cell[0],\n\t\t\tmime: undefined,\n\t\t\tlanguage: cell[1],\n\t\t\tcellKind: cell[2],\n\t\t\toutputs: cell[3] ?? [],\n\t\t\tmetadata: cell[4]\n\t\t};\n\t}), {}, { transientCellMetadata: {}, transientDocumentMetadata: {}, cellContentMetadata: {}, transientOutputs: false }));\n\n\tconst model = disposables.add(new NotebookEditorTestModel(notebook));\n\tconst notebookOptions = disposables.add(new NotebookOptions(instantiationService.get(IConfigurationService), instantiationService.get(INotebookExecutionStateService), false));\n\tconst viewContext = new ViewContext(notebookOptions, disposables.add(new NotebookEventDispatcher()), () => ({} as IBaseCellEditorOptions));\n\tconst viewModel: NotebookViewModel = disposables.add(instantiationService.createInstance(NotebookViewModel, viewType, model.notebook, viewContext, null, { isReadOnly: false }));\n\n\tconst cellList = disposables.add(createNotebookCellList(instantiationService, disposables, viewContext));\n\tcellList.attachViewModel(viewModel);\n\tconst listViewInfoAccessor = disposables.add(new ListViewInfoAccessor(cellList));\n\n\tlet visibleRanges: ICellRange[] = [{ start: 0, end: 100 }];\n\n\tconst notebookEditor: IActiveNotebookEditorDelegate = new class extends mock<IActiveNotebookEditorDelegate>() {\n\t\toverride dispose() {\n\t\t\tviewModel.dispose();\n\t\t}\n\t\toverride notebookOptions = notebookOptions;\n\t\toverride onDidChangeModel: Event<NotebookTextModel | undefined> = new Emitter<NotebookTextModel | undefined>().event;\n\t\toverride onDidChangeCellState: Event<NotebookCellStateChangedEvent> = new Emitter<NotebookCellStateChangedEvent>().event;\n\t\toverride getViewModel(): NotebookViewModel {\n\t\t\treturn viewModel;\n\t\t}\n\t\toverride textModel = viewModel.notebookDocument;\n\t\toverride hasModel(): this is IActiveNotebookEditorDelegate {\n\t\t\treturn !!viewModel;\n\t\t}\n\t\toverride getLength() { return viewModel.length; }\n\t\toverride getFocus() { return viewModel.getFocus(); }\n\t\toverride getSelections() { return viewModel.getSelections(); }\n\t\toverride setFocus(focus: ICellRange) {\n\t\t\tviewModel.updateSelectionsState({\n\t\t\t\tkind: SelectionStateType.Index,\n\t\t\t\tfocus: focus,\n\t\t\t\tselections: viewModel.getSelections()\n\t\t\t});\n\t\t}\n\t\toverride setSelections(selections: ICellRange[]) {\n\t\t\tviewModel.updateSelectionsState({\n\t\t\t\tkind: SelectionStateType.Index,\n\t\t\t\tfocus: viewModel.getFocus(),\n\t\t\t\tselections: selections\n\t\t\t});\n\t\t}\n\t\toverride getViewIndexByModelIndex(index: number) { return listViewInfoAccessor.getViewIndex(viewModel.viewCells[index]); }\n\t\toverride getCellRangeFromViewRange(startIndex: number, endIndex: number) { return listViewInfoAccessor.getCellRangeFromViewRange(startIndex, endIndex); }\n\t\toverride revealCellRangeInView() { }\n\t\toverride setHiddenAreas(_ranges: ICellRange[]): boolean {\n\t\t\treturn cellList.setHiddenAreas(_ranges, true);\n\t\t}\n\t\toverride getActiveCell() {\n\t\t\tconst elements = cellList.getFocusedElements();\n\n\t\t\tif (elements && elements.length) {\n\t\t\t\treturn elements[0];\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\t\toverride hasOutputTextSelection() {\n\t\t\treturn false;\n\t\t}\n\t\toverride changeModelDecorations() { return null; }\n\t\toverride focusElement() { }\n\t\toverride setCellEditorSelection() { }\n\t\toverride async revealRangeInCenterIfOutsideViewportAsync() { }\n\t\toverride async layoutNotebookCell() { }\n\t\toverride async removeInset() { }\n\t\toverride async focusNotebookCell() { }\n\t\toverride cellAt(index: number) { return viewModel.cellAt(index)!; }\n\t\toverride getCellIndex(cell: ICellViewModel) { return viewModel.getCellIndex(cell); }\n\t\toverride getCellsInRange(range?: ICellRange) { return viewModel.getCellsInRange(range); }\n\t\toverride getCellByHandle(handle: number) { return viewModel.getCellByHandle(handle); }\n\t\toverride getNextVisibleCellIndex(index: number) { return viewModel.getNextVisibleCellIndex(index); }\n\t\tgetControl() { return this; }\n\t\toverride get onDidChangeSelection() { return viewModel.onDidChangeSelection as Event<any>; }\n\t\toverride get onDidChangeOptions() { return viewModel.onDidChangeOptions; }\n\t\toverride get onDidChangeViewCells() { return viewModel.onDidChangeViewCells; }\n\t\toverride async find(query: string, options: INotebookSearchOptions): Promise<CellFindMatchWithIndex[]> {\n\t\t\tconst findMatches = viewModel.find(query, options).filter(match => match.length > 0);\n\t\t\treturn findMatches;\n\t\t}\n\t\toverride deltaCellDecorations() { return []; }\n\t\toverride onDidChangeVisibleRanges = Event.None;\n\n\t\toverride get visibleRanges() {\n\t\t\treturn visibleRanges;\n\t\t}\n\n\t\toverride set visibleRanges(_ranges: ICellRange[]) {\n\t\t\tvisibleRanges = _ranges;\n\t\t}\n\n\t\toverride getId(): string { return ''; }\n\t\toverride setScrollTop(scrollTop: number): void {\n\t\t\tcellList.scrollTop = scrollTop;\n\t\t}\n\t\toverride get scrollTop(): number {\n\t\t\treturn cellList.scrollTop;\n\t\t}\n\t\toverride getLayoutInfo(): NotebookLayoutInfo {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tscrollHeight: cellList.getScrollHeight(),\n\t\t\t\tfontInfo: new FontInfo({\n\t\t\t\t\tpixelRatio: 1,\n\t\t\t\t\tfontFamily: 'mockFont',\n\t\t\t\t\tfontWeight: 'normal',\n\t\t\t\t\tfontSize: 14,\n\t\t\t\t\tfontFeatureSettings: EditorFontLigatures.OFF,\n\t\t\t\t\tfontVariationSettings: EditorFontVariations.OFF,\n\t\t\t\t\tlineHeight: 19,\n\t\t\t\t\tletterSpacing: 1.5,\n\t\t\t\t\tisMonospace: true,\n\t\t\t\t\ttypicalHalfwidthCharacterWidth: 10,\n\t\t\t\t\ttypicalFullwidthCharacterWidth: 20,\n\t\t\t\t\tcanUseHalfwidthRightwardsArrow: true,\n\t\t\t\t\tspaceWidth: 10,\n\t\t\t\t\tmiddotWidth: 10,\n\t\t\t\t\twsmiddotWidth: 10,\n\t\t\t\t\tmaxDigitWidth: 10,\n\t\t\t\t}, true),\n\t\t\t\tstickyHeight: 0\n\t\t\t};\n\t\t}\n\t};\n\n\treturn { editor: notebookEditor, viewModel };\n}\n\nexport function createTestNotebookEditor(instantiationService: TestInstantiationService, disposables: DisposableStore, cells: [source: string, lang: string, kind: CellKind, output?: IOutputDto[], metadata?: NotebookCellMetadata][]): { editor: INotebookEditorDelegate; viewModel: NotebookViewModel } {\n\treturn _createTestNotebookEditor(instantiationService, disposables, cells);\n}\n\nexport async function withTestNotebookDiffModel<R = any>(originalCells: [source: string, lang: string, kind: CellKind, output?: IOutputDto[], metadata?: NotebookCellMetadata][], modifiedCells: [source: string, lang: string, kind: CellKind, output?: IOutputDto[], metadata?: NotebookCellMetadata][], callback: (diffModel: INotebookDiffEditorModel, disposables: DisposableStore, accessor: TestInstantiationService) => Promise<R> | R): Promise<R> {\n\tconst disposables = new DisposableStore();\n\tconst instantiationService = setupInstantiationService(disposables);\n\tconst originalNotebook = createTestNotebookEditor(instantiationService, disposables, originalCells);\n\tconst modifiedNotebook = createTestNotebookEditor(instantiationService, disposables, modifiedCells);\n\tconst originalResource = new class extends mock<IResolvedNotebookEditorModel>() {\n\t\toverride get notebook() {\n\t\t\treturn originalNotebook.viewModel.notebookDocument;\n\t\t}\n\t};\n\n\tconst modifiedResource = new class extends mock<IResolvedNotebookEditorModel>() {\n\t\toverride get notebook() {\n\t\t\treturn modifiedNotebook.viewModel.notebookDocument;\n\t\t}\n\t};\n\n\tconst model = new class extends mock<INotebookDiffEditorModel>() {\n\t\toverride get original() {\n\t\t\treturn originalResource;\n\t\t}\n\t\toverride get modified() {\n\t\t\treturn modifiedResource;\n\t\t}\n\t};\n\n\tconst res = await callback(model, disposables, instantiationService);\n\tif (res instanceof Promise) {\n\t\tres.finally(() => {\n\t\t\toriginalNotebook.editor.dispose();\n\t\t\toriginalNotebook.viewModel.dispose();\n\t\t\tmodifiedNotebook.editor.dispose();\n\t\t\tmodifiedNotebook.viewModel.dispose();\n\t\t\tdisposables.dispose();\n\t\t});\n\t} else {\n\t\toriginalNotebook.editor.dispose();\n\t\toriginalNotebook.viewModel.dispose();\n\t\tmodifiedNotebook.editor.dispose();\n\t\tmodifiedNotebook.viewModel.dispose();\n\t\tdisposables.dispose();\n\t}\n\treturn res;\n}\n\ninterface IActiveTestNotebookEditorDelegate extends IActiveNotebookEditorDelegate {\n\tvisibleRanges: ICellRange[];\n}\n\nexport async function withTestNotebook<R = any>(cells: [source: string, lang: string, kind: CellKind, output?: IOutputDto[], metadata?: NotebookCellMetadata][], callback: (editor: IActiveTestNotebookEditorDelegate, viewModel: NotebookViewModel, disposables: DisposableStore, accessor: TestInstantiationService) => Promise<R> | R, accessor?: TestInstantiationService): Promise<R> {\n\tconst disposables: DisposableStore = new DisposableStore();\n\tconst instantiationService = accessor ?? setupInstantiationService(disposables);\n\tconst notebookEditor = _createTestNotebookEditor(instantiationService, disposables, cells);\n\n\treturn runWithFakedTimers({ useFakeTimers: true }, async () => {\n\t\tconst res = await callback(notebookEditor.editor, notebookEditor.viewModel, disposables, instantiationService);\n\t\tif (res instanceof Promise) {\n\t\t\tres.finally(() => {\n\t\t\t\tnotebookEditor.editor.dispose();\n\t\t\t\tnotebookEditor.viewModel.dispose();\n\t\t\t\tnotebookEditor.editor.textModel.dispose();\n\t\t\t\tdisposables.dispose();\n\t\t\t});\n\t\t} else {\n\t\t\tnotebookEditor.editor.dispose();\n\t\t\tnotebookEditor.viewModel.dispose();\n\t\t\tnotebookEditor.editor.textModel.dispose();\n\t\t\tdisposables.dispose();\n\t\t}\n\t\treturn res;\n\t});\n}\n\nexport function createNotebookCellList(instantiationService: TestInstantiationService, disposables: DisposableStore, viewContext?: ViewContext) {\n\tconst delegate: IListVirtualDelegate<CellViewModel> = {\n\t\tgetHeight(element: CellViewModel) { return element.getHeight(17); },\n\t\tgetTemplateId() { return 'template'; }\n\t};\n\n\tconst renderer: IListRenderer<CellViewModel, BaseCellRenderTemplate> = {\n\t\ttemplateId: 'template',\n\t\trenderTemplate() { return {} as BaseCellRenderTemplate; },\n\t\trenderElement() { },\n\t\tdisposeTemplate() { }\n\t};\n\n\tconst notebookOptions = !!viewContext ? viewContext.notebookOptions\n\t\t: disposables.add(new NotebookOptions(instantiationService.get(IConfigurationService), instantiationService.get(INotebookExecutionStateService), false));\n\tconst cellList: NotebookCellList = disposables.add(instantiationService.createInstance(\n\t\tNotebookCellList,\n\t\t'NotebookCellList',\n\t\tDOM.$('container'),\n\t\tnotebookOptions,\n\t\tdelegate,\n\t\t[renderer],\n\t\tinstantiationService.get<IContextKeyService>(IContextKeyService),\n\t\t{\n\t\t\tsupportDynamicHeights: true,\n\t\t\tmultipleSelectionSupport: true,\n\t\t}\n\t));\n\n\treturn cellList;\n}\n\nexport function valueBytesFromString(value: string): VSBuffer {\n\treturn VSBuffer.fromString(value);\n}\n\nclass TestCellExecution implements INotebookCellExecution {\n\tconstructor(\n\t\treadonly notebook: URI,\n\t\treadonly cellHandle: number,\n\t\tprivate onComplete: () => void,\n\t) { }\n\n\treadonly state: NotebookCellExecutionState = NotebookCellExecutionState.Unconfirmed;\n\n\treadonly didPause: boolean = false;\n\treadonly isPaused: boolean = false;\n\n\tconfirm(): void {\n\t}\n\n\tupdate(updates: ICellExecuteUpdate[]): void {\n\t}\n\n\tcomplete(complete: ICellExecutionComplete): void {\n\t\tthis.onComplete();\n\t}\n}\n\nclass TestNotebookExecutionStateService implements INotebookExecutionStateService {\n\t_serviceBrand: undefined;\n\n\tprivate _executions = new ResourceMap<INotebookCellExecution>();\n\n\tonDidChangeExecution = new Emitter<ICellExecutionStateChangedEvent | IExecutionStateChangedEvent>().event;\n\tonDidChangeLastRunFailState = new Emitter<INotebookFailStateChangedEvent>().event;\n\n\tforceCancelNotebookExecutions(notebookUri: URI): void {\n\t}\n\n\tgetCellExecutionsForNotebook(notebook: URI): INotebookCellExecution[] {\n\t\treturn [];\n\t}\n\n\tgetCellExecution(cellUri: URI): INotebookCellExecution | undefined {\n\t\treturn this._executions.get(cellUri);\n\t}\n\n\tcreateCellExecution(notebook: URI, cellHandle: number): INotebookCellExecution {\n\t\tconst onComplete = () => this._executions.delete(CellUri.generate(notebook, cellHandle));\n\t\tconst exe = new TestCellExecution(notebook, cellHandle, onComplete);\n\t\tthis._executions.set(CellUri.generate(notebook, cellHandle), exe);\n\t\treturn exe;\n\t}\n\n\tgetCellExecutionsByHandleForNotebook(notebook: URI): Map<number, INotebookCellExecution> | undefined {\n\t\treturn;\n\t}\n\n\tgetLastFailedCellForNotebook(notebook: URI): number | undefined {\n\t\treturn;\n\t}\n\tgetExecution(notebook: URI): INotebookExecution | undefined {\n\t\treturn;\n\t}\n\tcreateExecution(notebook: URI): INotebookExecution {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n"]}