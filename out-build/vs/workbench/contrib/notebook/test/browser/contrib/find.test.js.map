{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/test/browser/contrib/find.test.ts"],"names":[],"mappings":"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","file":"find.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Range } from 'vs/editor/common/core/range';\nimport { FindMatch, ITextBuffer, ValidAnnotatedEditOperation } from 'vs/editor/common/model';\nimport { USUAL_WORD_SEPARATORS } from 'vs/editor/common/core/wordHelper';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { FindReplaceState } from 'vs/editor/contrib/find/browser/findState';\nimport { IConfigurationService, IConfigurationValue } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { NotebookFindFilters } from 'vs/workbench/contrib/notebook/browser/contrib/find/findFilters';\nimport { CellFindMatchModel, FindModel } from 'vs/workbench/contrib/notebook/browser/contrib/find/findModel';\nimport { IActiveNotebookEditor, ICellModelDecorations, ICellModelDeltaDecorations } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { NotebookViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/notebookViewModelImpl';\nimport { CellEditType, CellKind } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { TestCell, withTestNotebook } from 'vs/workbench/contrib/notebook/test/browser/testNotebookEditor';\n\nsuite('Notebook Find', () => {\n\tconst configurationValue: IConfigurationValue<any> = {\n\t\tvalue: USUAL_WORD_SEPARATORS\n\t};\n\tconst configurationService = new class extends TestConfigurationService {\n\t\toverride inspect() {\n\t\t\treturn configurationValue;\n\t\t}\n\t}();\n\n\tconst setupEditorForTest = (editor: IActiveNotebookEditor, viewModel: NotebookViewModel) => {\n\t\teditor.changeModelDecorations = (callback) => {\n\t\t\treturn callback({\n\t\t\t\tdeltaDecorations: (oldDecorations: ICellModelDecorations[], newDecorations: ICellModelDeltaDecorations[]) => {\n\t\t\t\t\tconst ret: ICellModelDecorations[] = [];\n\t\t\t\t\tnewDecorations.forEach(dec => {\n\t\t\t\t\t\tconst cell = viewModel.viewCells.find(cell => cell.handle === dec.ownerId);\n\t\t\t\t\t\tconst decorations = cell?.deltaModelDecorations([], dec.decorations) ?? [];\n\n\t\t\t\t\t\tif (decorations.length > 0) {\n\t\t\t\t\t\t\tret.push({ ownerId: dec.ownerId, decorations: decorations });\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t};\n\n\ttest('Update find matches basics', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel, _ds, accessor) => {\n\t\t\t\taccessor.stub(IConfigurationService, configurationService);\n\t\t\t\tconst state = new FindReplaceState<NotebookFindFilters>();\n\t\t\t\tconst model = new FindModel(editor, state, accessor.get(IConfigurationService));\n\n\t\t\t\tconst found = new Promise<boolean>(resolve => state.onFindReplaceStateChange(e => {\n\t\t\t\t\tif (e.matchesCount) { resolve(true); }\n\t\t\t\t}));\n\t\t\t\tstate.change({ isRevealed: true }, true);\n\t\t\t\tstate.change({ searchString: '1' }, true);\n\t\t\t\tawait found;\n\t\t\t\tassert.strictEqual(model.findMatches.length, 2);\n\t\t\t\tassert.strictEqual(model.currentMatch, 0);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 1);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 0);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 1);\n\n\t\t\t\tassert.strictEqual(editor.textModel.length, 3);\n\n\t\t\t\tconst found2 = new Promise<boolean>(resolve => state.onFindReplaceStateChange(e => {\n\t\t\t\t\tif (e.matchesCount) { resolve(true); }\n\t\t\t\t}));\n\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 3, count: 0, cells: [\n\t\t\t\t\t\tnew TestCell(viewModel.viewType, 3, '# next paragraph 1', 'markdown', CellKind.Code, [], accessor.get(ILanguageService)),\n\t\t\t\t\t]\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t\t\tawait found2;\n\t\t\t\tassert.strictEqual(editor.textModel.length, 4);\n\t\t\t\tassert.strictEqual(model.findMatches.length, 3);\n\t\t\t\tassert.strictEqual(model.currentMatch, 1);\n\t\t\t});\n\t});\n\n\ttest('Update find matches basics 2', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 1.1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 1.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 1.3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel, _ds, accessor) => {\n\t\t\t\tsetupEditorForTest(editor, viewModel);\n\t\t\t\taccessor.stub(IConfigurationService, configurationService);\n\t\t\t\tconst state = new FindReplaceState<NotebookFindFilters>();\n\t\t\t\tconst model = new FindModel(editor, state, accessor.get(IConfigurationService));\n\t\t\t\tconst found = new Promise<boolean>(resolve => state.onFindReplaceStateChange(e => {\n\t\t\t\t\tif (e.matchesCount) { resolve(true); }\n\t\t\t\t}));\n\t\t\t\tstate.change({ isRevealed: true }, true);\n\t\t\t\tstate.change({ searchString: '1' }, true);\n\t\t\t\tawait found;\n\t\t\t\t// find matches is not necessarily find results\n\t\t\t\tassert.strictEqual(model.findMatches.length, 4);\n\t\t\t\tassert.strictEqual(model.currentMatch, 0);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 1);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 2);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 3);\n\n\t\t\t\tconst found2 = new Promise<boolean>(resolve => state.onFindReplaceStateChange(e => {\n\t\t\t\t\tif (e.matchesCount) { resolve(true); }\n\t\t\t\t}));\n\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 2, count: 1, cells: []\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t\t\tawait found2;\n\t\t\t\tassert.strictEqual(model.findMatches.length, 3);\n\n\t\t\t\tassert.strictEqual(model.currentMatch, 0);\n\t\t\t\tmodel.find({ previous: true });\n\t\t\t\tassert.strictEqual(model.currentMatch, 3);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 0);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 1);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 2);\n\t\t\t});\n\t});\n\n\ttest('Update find matches basics 3', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 1.1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 1.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 1.3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel, _ds, accessor) => {\n\t\t\t\tsetupEditorForTest(editor, viewModel);\n\t\t\t\taccessor.stub(IConfigurationService, configurationService);\n\t\t\t\tconst state = new FindReplaceState<NotebookFindFilters>();\n\t\t\t\tconst model = new FindModel(editor, state, accessor.get(IConfigurationService));\n\t\t\t\tconst found = new Promise<boolean>(resolve => state.onFindReplaceStateChange(e => {\n\t\t\t\t\tif (e.matchesCount) { resolve(true); }\n\t\t\t\t}));\n\t\t\t\tstate.change({ isRevealed: true }, true);\n\t\t\t\tstate.change({ searchString: '1' }, true);\n\t\t\t\tawait found;\n\t\t\t\t// find matches is not necessarily find results\n\t\t\t\tassert.strictEqual(model.findMatches.length, 4);\n\t\t\t\tassert.strictEqual(model.currentMatch, 0);\n\t\t\t\tmodel.find({ previous: true });\n\t\t\t\tassert.strictEqual(model.currentMatch, 4);\n\n\t\t\t\tconst found2 = new Promise<boolean>(resolve => state.onFindReplaceStateChange(e => {\n\t\t\t\t\tif (e.matchesCount) { resolve(true); }\n\t\t\t\t}));\n\t\t\t\teditor.textModel.applyEdits([{\n\t\t\t\t\teditType: CellEditType.Replace, index: 2, count: 1, cells: []\n\t\t\t\t}], true, undefined, () => undefined, undefined, true);\n\t\t\t\tawait found2;\n\t\t\t\tassert.strictEqual(model.findMatches.length, 3);\n\t\t\t\tassert.strictEqual(model.currentMatch, 0);\n\t\t\t\tmodel.find({ previous: true });\n\t\t\t\tassert.strictEqual(model.currentMatch, 3);\n\t\t\t\tmodel.find({ previous: true });\n\t\t\t\tassert.strictEqual(model.currentMatch, 2);\n\t\t\t});\n\t});\n\n\ttest('Update find matches, #112748', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 1.1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 1.2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 1.3', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel, _ds, accessor) => {\n\t\t\t\tsetupEditorForTest(editor, viewModel);\n\t\t\t\taccessor.stub(IConfigurationService, configurationService);\n\t\t\t\tconst state = new FindReplaceState<NotebookFindFilters>();\n\t\t\t\tconst model = new FindModel(editor, state, accessor.get(IConfigurationService));\n\t\t\t\tconst found = new Promise<boolean>(resolve => state.onFindReplaceStateChange(e => {\n\t\t\t\t\tif (e.matchesCount) { resolve(true); }\n\t\t\t\t}));\n\t\t\t\tstate.change({ isRevealed: true }, true);\n\t\t\t\tstate.change({ searchString: '1' }, true);\n\t\t\t\tawait found;\n\t\t\t\t// find matches is not necessarily find results\n\t\t\t\tassert.strictEqual(model.findMatches.length, 4);\n\t\t\t\tassert.strictEqual(model.currentMatch, 0);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 3);\n\t\t\t\tconst found2 = new Promise<boolean>(resolve => state.onFindReplaceStateChange(e => {\n\t\t\t\t\tif (e.matchesCount) { resolve(true); }\n\t\t\t\t}));\n\t\t\t\t(viewModel.viewCells[1].textBuffer as ITextBuffer).applyEdits([\n\t\t\t\t\tnew ValidAnnotatedEditOperation(null, new Range(1, 1, 1, 14), '', false, false, false)\n\t\t\t\t], false, true);\n\t\t\t\t// cell content updates, recompute\n\t\t\t\tmodel.research();\n\t\t\t\tawait found2;\n\t\t\t\tassert.strictEqual(model.currentMatch, 1);\n\t\t\t});\n\t});\n\n\ttest('Reset when match not found, #127198', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['paragraph 2', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel, _ds, accessor) => {\n\t\t\t\taccessor.stub(IConfigurationService, configurationService);\n\t\t\t\tconst state = new FindReplaceState<NotebookFindFilters>();\n\t\t\t\tconst model = new FindModel(editor, state, accessor.get(IConfigurationService));\n\t\t\t\tconst found = new Promise<boolean>(resolve => state.onFindReplaceStateChange(e => {\n\t\t\t\t\tif (e.matchesCount) { resolve(true); }\n\t\t\t\t}));\n\t\t\t\tstate.change({ isRevealed: true }, true);\n\t\t\t\tstate.change({ searchString: '1' }, true);\n\t\t\t\tawait found;\n\t\t\t\tassert.strictEqual(model.findMatches.length, 2);\n\t\t\t\tassert.strictEqual(model.currentMatch, 0);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 1);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 0);\n\t\t\t\tmodel.find({ previous: false });\n\t\t\t\tassert.strictEqual(model.currentMatch, 1);\n\n\t\t\t\tassert.strictEqual(editor.textModel.length, 3);\n\n\t\t\t\tconst found2 = new Promise<boolean>(resolve => state.onFindReplaceStateChange(e => {\n\t\t\t\t\tif (e.matchesCount) { resolve(true); }\n\t\t\t\t}));\n\t\t\t\tstate.change({ searchString: '3' }, true);\n\t\t\t\tawait found2;\n\t\t\t\tassert.strictEqual(model.currentMatch, -1);\n\t\t\t\tassert.strictEqual(model.findMatches.length, 0);\n\t\t\t});\n\t});\n\n\ttest('CellFindMatchModel', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['# header 1', 'markdown', CellKind.Markup, [], {}],\n\t\t\t\t['print(1)', 'typescript', CellKind.Code, [], {}],\n\t\t\t],\n\t\t\tasync (editor) => {\n\t\t\t\tconst mdCell = editor.cellAt(0);\n\t\t\t\tconst mdModel = new CellFindMatchModel(mdCell, 0, [], []);\n\t\t\t\tassert.strictEqual(mdModel.length, 0);\n\n\t\t\t\tmdModel.contentMatches.push(new FindMatch(new Range(1, 1, 1, 2), []));\n\t\t\t\tassert.strictEqual(mdModel.length, 1);\n\t\t\t\tmdModel.webviewMatches.push({\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tsearchPreviewInfo: {\n\t\t\t\t\t\tline: '',\n\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\t\tend: 0,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tindex: 1,\n\t\t\t\t\tsearchPreviewInfo: {\n\t\t\t\t\t\tline: '',\n\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\t\tend: 0,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tassert.strictEqual(mdModel.length, 3);\n\t\t\t\tassert.strictEqual(mdModel.getMatch(0), mdModel.contentMatches[0]);\n\t\t\t\tassert.strictEqual(mdModel.getMatch(1), mdModel.webviewMatches[0]);\n\t\t\t\tassert.strictEqual(mdModel.getMatch(2), mdModel.webviewMatches[1]);\n\t\t\t});\n\t});\n});\n"]}