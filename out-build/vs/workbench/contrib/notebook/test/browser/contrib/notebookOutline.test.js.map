{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/test/browser/contrib/notebookOutline.test.ts"],"names":[],"mappings":"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","file":"notebookOutline.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { setupInstantiationService, withTestNotebook } from 'vs/workbench/contrib/notebook/test/browser/testNotebookEditor';\nimport { OutlineTarget } from 'vs/workbench/services/outline/browser/outline';\nimport { IFileIconTheme, IThemeService } from 'vs/platform/theme/common/themeService';\nimport { mock } from 'vs/base/test/common/mock';\nimport { Event } from 'vs/base/common/event';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IMarkerService } from 'vs/platform/markers/common/markers';\nimport { MarkerService } from 'vs/platform/markers/common/markerService';\nimport { CellKind, IOutputDto, NotebookCellMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { IActiveNotebookEditor, INotebookEditorPane } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { NotebookCellOutline } from 'vs/workbench/contrib/notebook/browser/contrib/outline/notebookOutline';\n\nsuite('Notebook Outline', function () {\n\n\tlet disposables: DisposableStore;\n\tlet instantiationService: TestInstantiationService;\n\n\tsuiteSetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\tinstantiationService = setupInstantiationService(disposables);\n\t\tinstantiationService.set(IEditorService, new class extends mock<IEditorService>() { });\n\t\tinstantiationService.set(IMarkerService, new MarkerService());\n\t\tinstantiationService.set(IThemeService, new class extends mock<IThemeService>() {\n\t\t\toverride onDidFileIconThemeChange = Event.None;\n\t\t\toverride getFileIconTheme(): IFileIconTheme {\n\t\t\t\treturn { hasFileIcons: true, hasFolderIcons: true, hidesExplorerArrows: false };\n\t\t\t}\n\t\t});\n\t});\n\n\tsuiteTeardown(() => disposables.dispose());\n\n\tfunction withNotebookOutline<R = any>(cells: [source: string, lang: string, kind: CellKind, output?: IOutputDto[], metadata?: NotebookCellMetadata][], callback: (outline: NotebookCellOutline, editor: IActiveNotebookEditor) => R): Promise<R> {\n\t\treturn withTestNotebook(cells, (editor) => {\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\tassert.ok(false, 'MUST have active text editor');\n\t\t\t}\n\t\t\tconst outline = instantiationService.createInstance(NotebookCellOutline, new class extends mock<INotebookEditorPane>() {\n\t\t\t\toverride getControl() {\n\t\t\t\t\treturn editor;\n\t\t\t\t}\n\t\t\t\toverride onDidChangeModel: Event<void> = Event.None;\n\t\t\t}, OutlineTarget.OutlinePane);\n\t\t\treturn callback(outline, editor);\n\t\t});\n\n\t}\n\n\ttest('basic', async function () {\n\t\tawait withNotebookOutline([], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements(), []);\n\t\t});\n\t});\n\n\ttest('special characters in heading', async function () {\n\t\tawait withNotebookOutline([\n\t\t\t['# Hellö & Hällo', 'md', CellKind.Markup]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 1);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, 'Hellö & Hällo');\n\t\t});\n\n\t\tawait withNotebookOutline([\n\t\t\t['# bo<i>ld</i>', 'md', CellKind.Markup]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 1);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, 'bold');\n\t\t});\n\t});\n\n\ttest('Notebook falsely detects \"empty cells\"', async function () {\n\t\tawait withNotebookOutline([\n\t\t\t['  的时代   ', 'md', CellKind.Markup]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 1);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, '的时代');\n\t\t});\n\n\t\tawait withNotebookOutline([\n\t\t\t['   ', 'md', CellKind.Markup]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 1);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, 'empty cell');\n\t\t});\n\n\t\tawait withNotebookOutline([\n\t\t\t['+++++[]{}--)(0  ', 'md', CellKind.Markup]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 1);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, '+++++[]{}--)(0');\n\t\t});\n\n\t\tawait withNotebookOutline([\n\t\t\t['+++++[]{}--)(0 Hello **&^ ', 'md', CellKind.Markup]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 1);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, '+++++[]{}--)(0 Hello **&^');\n\t\t});\n\n\t\tawait withNotebookOutline([\n\t\t\t['!@#$\\n Überschrïft', 'md', CellKind.Markup]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 1);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, '!@#$');\n\t\t});\n\t});\n\n\ttest('Heading text defines entry label', async function () {\n\t\treturn await withNotebookOutline([\n\t\t\t['foo\\n # h1', 'md', CellKind.Markup]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 1);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, 'h1');\n\t\t});\n\t});\n\n\ttest('Notebook outline ignores markdown headings #115200', async function () {\n\t\tawait withNotebookOutline([\n\t\t\t['## h2 \\n# h1', 'md', CellKind.Markup]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 2);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, 'h2');\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[1].label, 'h1');\n\t\t});\n\n\t\tawait withNotebookOutline([\n\t\t\t['## h2', 'md', CellKind.Markup],\n\t\t\t['# h1', 'md', CellKind.Markup]\n\t\t], outline => {\n\t\t\tassert.ok(outline instanceof NotebookCellOutline);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements().length, 2);\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[0].label, 'h2');\n\t\t\tassert.deepStrictEqual(outline.config.quickPickDataSource.getQuickPickElements()[1].label, 'h1');\n\t\t});\n\t});\n});\n"]}