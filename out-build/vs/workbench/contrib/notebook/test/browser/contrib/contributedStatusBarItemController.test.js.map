{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/test/browser/contrib/contributedStatusBarItemController.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAYhG,KAAK,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAChC,MAAM,eAAe,GAAG,IAAI,eAAG,EAAc,CAAC;QAE9C,QAAQ,CAAC,GAAG,EAAE;YACb,eAAe,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE,KAAK;YAChC,MAAM,IAAA,yBAAI,EACT;gBACC,CAAC,YAAY,EAAE,YAAY,EAAE,yBAAQ,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;gBACnD,CAAC,YAAY,EAAE,UAAU,EAAE,yBAAQ,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC;aACnD,EACD,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE;gBAC1C,MAAM,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,mCAAI,CAA0B,CAAC;gBACrE,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,yCAAI,EAAgC,MAAM,CAAC,CAAC,CAAC;gBAEzF,MAAM,QAAQ,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,KAAM,SAAQ,eAAG;oBAAjB;;wBAChC,MAAC,GAAc,CAAC,CAAC;wBAEjB,MAAC,GAAkB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAc,CAAC,CAAC;wBAC1D,oBAAe,GAAG,IAAI,CAAC,CAAC,CAAgB,KAAK,CAAC;wBAE9C,+BAA0B,GAAG,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;wBACjE,8BAAyB,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;wBAWzE,aAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;oBACtC,CAAC;oBAVA,KAAK,CAAC,yBAAyB,CAAC,IAAS,EAAE,KAAa,EAAE,MAAyB;wBAClF,IAAI,KAAK,KAAK,CAAC,EAAE;4BAChB,IAAI,CAAC,CAAC,EAAa,CAAC;4BACpB,IAAI,CAAC,CAAC,CAAgB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAY,CAAC;yBAC9C;wBAED,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;oBACtB,CAAC;iBAGD,CAAC,CAAC;gBACH,MAAM,eAAe,GAAG,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAC5D,eAAe,CAAC,GAAG,CAAC,gBAAgB,CAAC,iCAAiC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClF,MAAM,CAAC,WAAW,CAAC,MAAM,eAAe,EAAE,CAAC,EAAE,sCAAsC,CAAC,CAAC;gBAErF,MAAM,eAAe,GAAG,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAC5D,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxC,KAAK,CAAC,QAAQ,GAAG,EAAE,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC;gBACjE,MAAM,CAAC,WAAW,CAAC,MAAM,eAAe,EAAE,CAAC,EAAE,sCAAsC,CAAC,CAAC;gBAErF,MAAM,eAAe,GAAG,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAC5D,KAAK,CAAC,QAAQ,GAAG,aAAa,CAAC;gBAC/B,MAAM,CAAC,WAAW,CAAC,MAAM,eAAe,EAAE,CAAC,EAAE,sCAAsC,CAAC,CAAC;gBAErF,MAAM,eAAe,GAAG,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAC5D,QAAQ,CAAC,0BAA0B,CAAC,IAAI,EAAE,CAAC;gBAC3C,MAAM,CAAC,WAAW,CAAC,MAAM,eAAe,EAAE,CAAC,EAAE,sCAAsC,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,KAAK,UAAU,SAAS,CAAI,KAAe,EAAE,OAAO,GAAG,IAAI;QAC1D,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QACrD,OAAO,IAAI,OAAO,CAAI,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACzC,MAAM,MAAM,GAAG,UAAU,CAAC,GAAG,EAAE;gBAC9B,GAAG,CAAC,OAAO,EAAE,CAAC;gBACd,MAAM,CAAC,KAAK,CAAC,CAAC;YACf,CAAC,EAAE,OAAO,CAAC,CAAC;YAEZ,MAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE;gBACrB,YAAY,CAAC,MAAM,CAAC,CAAC;gBACrB,GAAG,CAAC,OAAO,EAAE,CAAC;gBACd,OAAO,CAAC,CAAC,CAAC,CAAC;YACZ,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC","file":"contributedStatusBarItemController.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { ContributedStatusBarItemController } from 'vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/contributedStatusBarItemController';\nimport { INotebookCellStatusBarService } from 'vs/workbench/contrib/notebook/common/notebookCellStatusBarService';\nimport { CellKind, INotebookCellStatusBarItemProvider } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { withTestNotebook } from 'vs/workbench/contrib/notebook/test/browser/testNotebookEditor';\n\nsuite('Notebook Statusbar', () => {\n\tconst testDisposables = new DisposableStore();\n\n\tteardown(() => {\n\t\ttestDisposables.clear();\n\t});\n\n\ttest('Calls item provider', async function () {\n\t\tawait withTestNotebook(\n\t\t\t[\n\t\t\t\t['var b = 1;', 'javascript', CellKind.Code, [], {}],\n\t\t\t\t['# header a', 'markdown', CellKind.Markup, [], {}],\n\t\t\t],\n\t\t\tasync (editor, viewModel, _ds, accessor) => {\n\t\t\t\tconst cellStatusbarSvc = accessor.get(INotebookCellStatusBarService);\n\t\t\t\ttestDisposables.add(accessor.createInstance(ContributedStatusBarItemController, editor));\n\n\t\t\t\tconst provider = testDisposables.add(new class extends Disposable implements INotebookCellStatusBarItemProvider {\n\t\t\t\t\tprivate provideCalls = 0;\n\n\t\t\t\t\tprivate _onProvideCalled = this._register(new Emitter<number>());\n\t\t\t\t\tpublic onProvideCalled = this._onProvideCalled.event;\n\n\t\t\t\t\tpublic _onDidChangeStatusBarItems = this._register(new Emitter<void>());\n\t\t\t\t\tpublic onDidChangeStatusBarItems = this._onDidChangeStatusBarItems.event;\n\n\t\t\t\t\tasync provideCellStatusBarItems(_uri: URI, index: number, _token: CancellationToken) {\n\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\tthis.provideCalls++;\n\t\t\t\t\t\t\tthis._onProvideCalled.fire(this.provideCalls);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn { items: [] };\n\t\t\t\t\t}\n\n\t\t\t\t\tviewType = editor.textModel.viewType;\n\t\t\t\t});\n\t\t\t\tconst providePromise1 = asPromise(provider.onProvideCalled);\n\t\t\t\ttestDisposables.add(cellStatusbarSvc.registerCellStatusBarItemProvider(provider));\n\t\t\t\tassert.strictEqual(await providePromise1, 1, 'should call provider on registration');\n\n\t\t\t\tconst providePromise2 = asPromise(provider.onProvideCalled);\n\t\t\t\tconst cell0 = editor.textModel.cells[0];\n\t\t\t\tcell0.metadata = { ...cell0.metadata, ...{ newMetadata: true } };\n\t\t\t\tassert.strictEqual(await providePromise2, 2, 'should call provider on registration');\n\n\t\t\t\tconst providePromise3 = asPromise(provider.onProvideCalled);\n\t\t\t\tcell0.language = 'newlanguage';\n\t\t\t\tassert.strictEqual(await providePromise3, 3, 'should call provider on registration');\n\n\t\t\t\tconst providePromise4 = asPromise(provider.onProvideCalled);\n\t\t\t\tprovider._onDidChangeStatusBarItems.fire();\n\t\t\t\tassert.strictEqual(await providePromise4, 4, 'should call provider on registration');\n\t\t\t});\n\t});\n});\n\nasync function asPromise<T>(event: Event<T>, timeout = 5000): Promise<T> {\n\tconst error = new Error('asPromise TIMEOUT reached');\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tsub.dispose();\n\t\t\treject(error);\n\t\t}, timeout);\n\n\t\tconst sub = event(e => {\n\t\t\tclearTimeout(handle);\n\t\t\tsub.dispose();\n\t\t\tresolve(e);\n\t\t});\n\t});\n}\n"]}