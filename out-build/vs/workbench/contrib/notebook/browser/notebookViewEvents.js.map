{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/notebookViewEvents.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAsChG,IAAY,qBAIX;IAJD,WAAY,qBAAqB;QAChC,mFAAiB,CAAA;QACjB,uFAAmB,CAAA;QACnB,yFAAoB,CAAA;IACrB,CAAC,EAJW,qBAAqB,qCAArB,qBAAqB,QAIhC;IAED,MAAa,IAAI;QAGhB,YAAqB,MAAiC,EAAW,KAAyB;YAArE,WAAM,GAAN,MAAM,CAA2B;YAAW,UAAK,GAAL,KAAK,CAAoB;YAF1E,SAAI,GAAG,qBAAqB,CAAC,aAAa,CAAC;QAI3D,CAAC;KACD;IAND,oBAMC;IAGD,MAAa,IAAI;QAGhB,YAAqB,MAAgC;YAAhC,WAAM,GAAN,MAAM,CAA0B;YAFrC,SAAI,GAAG,qBAAqB,CAAC,eAAe,CAAC;QAI7D,CAAC;KACD;IAND,oBAMC;IAED,MAAa,IAAI;QAGhB,YAAqB,MAAqC,EAAW,IAAS;YAAzD,WAAM,GAAN,MAAM,CAA+B;YAAW,SAAI,GAAJ,IAAI,CAAK;YAF9D,SAAI,GAAG,qBAAqB,CAAC,gBAAgB,CAAC;QAI9D,CAAC;KACD;IAND,oBAMC","file":"notebookViewEvents.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FontInfo } from 'vs/editor/common/config/fontInfo';\nimport { NotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\nimport { NotebookDocumentMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\n\nexport interface NotebookLayoutInfo {\n\twidth: number;\n\theight: number;\n\tscrollHeight: number;\n\tfontInfo: FontInfo;\n\tstickyHeight: number;\n}\n\nexport interface CellViewModelStateChangeEvent {\n\treadonly metadataChanged?: boolean;\n\treadonly internalMetadataChanged?: boolean;\n\treadonly selectionChanged?: boolean;\n\treadonly focusModeChanged?: boolean;\n\treadonly editStateChanged?: boolean;\n\treadonly languageChanged?: boolean;\n\treadonly foldingStateChanged?: boolean;\n\treadonly contentChanged?: boolean;\n\treadonly outputIsHoveredChanged?: boolean;\n\treadonly outputIsFocusedChanged?: boolean;\n\treadonly cellIsHoveredChanged?: boolean;\n\treadonly cellLineNumberChanged?: boolean;\n\treadonly inputCollapsedChanged?: boolean;\n\treadonly outputCollapsedChanged?: boolean;\n\treadonly dragStateChanged?: boolean;\n}\n\nexport interface NotebookLayoutChangeEvent {\n\twidth?: boolean;\n\theight?: boolean;\n\tfontInfo?: boolean;\n}\n\nexport enum NotebookViewEventType {\n\tLayoutChanged = 1,\n\tMetadataChanged = 2,\n\tCellStateChanged = 3\n}\n\nexport class NotebookLayoutChangedEvent {\n\tpublic readonly type = NotebookViewEventType.LayoutChanged;\n\n\tconstructor(readonly source: NotebookLayoutChangeEvent, readonly value: NotebookLayoutInfo) {\n\n\t}\n}\n\n\nexport class NotebookMetadataChangedEvent {\n\tpublic readonly type = NotebookViewEventType.MetadataChanged;\n\n\tconstructor(readonly source: NotebookDocumentMetadata) {\n\n\t}\n}\n\nexport class NotebookCellStateChangedEvent {\n\tpublic readonly type = NotebookViewEventType.CellStateChanged;\n\n\tconstructor(readonly source: CellViewModelStateChangeEvent, readonly cell: NotebookCellTextModel) {\n\n\t}\n}\n\nexport type NotebookViewEvent = NotebookLayoutChangedEvent | NotebookMetadataChangedEvent | NotebookCellStateChangedEvent;\n"]}