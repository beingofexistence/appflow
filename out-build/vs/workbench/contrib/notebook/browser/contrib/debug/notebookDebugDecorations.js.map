{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/contrib/debug/notebookDebugDecorations.ts"],"names":[],"mappings":"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","file":"notebookDebugDecorations.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { debugIconBreakpointForeground } from 'vs/workbench/contrib/debug/browser/breakpointEditorContribution';\nimport { focusedStackFrameColor, topStackFrameColor } from 'vs/workbench/contrib/debug/browser/callStackEditorContribution';\nimport { IDebugService, IStackFrame } from 'vs/workbench/contrib/debug/common/debug';\nimport { INotebookCellDecorationOptions, INotebookDeltaDecoration, INotebookEditor, INotebookEditorContribution, NotebookOverviewRulerLane } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { registerNotebookContribution } from 'vs/workbench/contrib/notebook/browser/notebookEditorExtensions';\nimport { runningCellRulerDecorationColor } from 'vs/workbench/contrib/notebook/browser/notebookEditorWidget';\nimport { CellUri, NotebookCellExecutionState } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookExecutionStateService, NotebookExecutionType } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\n\ninterface ICellAndRange {\n\thandle: number;\n\trange: IRange;\n}\n\nexport class PausedCellDecorationContribution extends Disposable implements INotebookEditorContribution {\n\tstatic id: string = 'workbench.notebook.debug.pausedCellDecorations';\n\n\tprivate _currentTopDecorations: string[] = [];\n\tprivate _currentOtherDecorations: string[] = [];\n\tprivate _executingCellDecorations: string[] = [];\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditor,\n\t\t@IDebugService private readonly _debugService: IDebugService,\n\t\t@INotebookExecutionStateService private readonly _notebookExecutionStateService: INotebookExecutionStateService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(_debugService.getModel().onDidChangeCallStack(() => this.updateExecutionDecorations()));\n\t\tthis._register(_debugService.getViewModel().onDidFocusStackFrame(() => this.updateExecutionDecorations()));\n\t\tthis._register(_notebookExecutionStateService.onDidChangeExecution(e => {\n\t\t\tif (e.type === NotebookExecutionType.cell && this._notebookEditor.textModel && e.affectsNotebook(this._notebookEditor.textModel.uri)) {\n\t\t\t\tthis.updateExecutionDecorations();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate updateExecutionDecorations(): void {\n\t\tconst exes = this._notebookEditor.textModel ?\n\t\t\tthis._notebookExecutionStateService.getCellExecutionsByHandleForNotebook(this._notebookEditor.textModel.uri)\n\t\t\t: undefined;\n\n\t\tconst topFrameCellsAndRanges: ICellAndRange[] = [];\n\t\tlet focusedFrameCellAndRange: ICellAndRange | undefined = undefined;\n\n\t\tconst getNotebookCellAndRange = (sf: IStackFrame): ICellAndRange | undefined => {\n\t\t\tconst parsed = CellUri.parse(sf.source.uri);\n\t\t\tif (parsed && parsed.notebook.toString() === this._notebookEditor.textModel?.uri.toString()) {\n\t\t\t\treturn { handle: parsed.handle, range: sf.range };\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\n\t\tfor (const session of this._debugService.getModel().getSessions()) {\n\t\t\tfor (const thread of session.getAllThreads()) {\n\t\t\t\tconst topFrame = thread.getTopStackFrame();\n\t\t\t\tif (topFrame) {\n\t\t\t\t\tconst notebookCellAndRange = getNotebookCellAndRange(topFrame);\n\t\t\t\t\tif (notebookCellAndRange) {\n\t\t\t\t\t\ttopFrameCellsAndRanges.push(notebookCellAndRange);\n\t\t\t\t\t\texes?.delete(notebookCellAndRange.handle);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst focusedFrame = this._debugService.getViewModel().focusedStackFrame;\n\t\tif (focusedFrame && focusedFrame.thread.stopped) {\n\t\t\tconst thisFocusedFrameCellAndRange = getNotebookCellAndRange(focusedFrame);\n\t\t\tif (thisFocusedFrameCellAndRange &&\n\t\t\t\t!topFrameCellsAndRanges.some(topFrame => topFrame.handle === thisFocusedFrameCellAndRange?.handle && Range.equalsRange(topFrame.range, thisFocusedFrameCellAndRange?.range))) {\n\t\t\t\tfocusedFrameCellAndRange = thisFocusedFrameCellAndRange;\n\t\t\t\texes?.delete(focusedFrameCellAndRange.handle);\n\t\t\t}\n\t\t}\n\n\t\tthis.setTopFrameDecoration(topFrameCellsAndRanges);\n\t\tthis.setFocusedFrameDecoration(focusedFrameCellAndRange);\n\n\t\tconst exeHandles = exes ?\n\t\t\tArray.from(exes.entries())\n\t\t\t\t.filter(([_, exe]) => exe.state === NotebookCellExecutionState.Executing)\n\t\t\t\t.map(([handle]) => handle)\n\t\t\t: [];\n\t\tthis.setExecutingCellDecorations(exeHandles);\n\t}\n\n\tprivate setTopFrameDecoration(handlesAndRanges: ICellAndRange[]): void {\n\t\tconst newDecorations = handlesAndRanges.map(({ handle, range }) => {\n\t\t\tconst options: INotebookCellDecorationOptions = {\n\t\t\t\toverviewRuler: {\n\t\t\t\t\tcolor: topStackFrameColor,\n\t\t\t\t\tincludeOutput: false,\n\t\t\t\t\tmodelRanges: [range],\n\t\t\t\t\tposition: NotebookOverviewRulerLane.Full\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn { handle, options };\n\t\t});\n\n\t\tthis._currentTopDecorations = this._notebookEditor.deltaCellDecorations(this._currentTopDecorations, newDecorations);\n\t}\n\n\tprivate setFocusedFrameDecoration(focusedFrameCellAndRange: ICellAndRange | undefined): void {\n\t\tlet newDecorations: INotebookDeltaDecoration[] = [];\n\t\tif (focusedFrameCellAndRange) {\n\t\t\tconst options: INotebookCellDecorationOptions = {\n\t\t\t\toverviewRuler: {\n\t\t\t\t\tcolor: focusedStackFrameColor,\n\t\t\t\t\tincludeOutput: false,\n\t\t\t\t\tmodelRanges: [focusedFrameCellAndRange.range],\n\t\t\t\t\tposition: NotebookOverviewRulerLane.Full\n\t\t\t\t}\n\t\t\t};\n\t\t\tnewDecorations = [{ handle: focusedFrameCellAndRange.handle, options }];\n\t\t}\n\n\t\tthis._currentOtherDecorations = this._notebookEditor.deltaCellDecorations(this._currentOtherDecorations, newDecorations);\n\t}\n\n\tprivate setExecutingCellDecorations(handles: number[]): void {\n\t\tconst newDecorations = handles.map(handle => {\n\t\t\tconst options: INotebookCellDecorationOptions = {\n\t\t\t\toverviewRuler: {\n\t\t\t\t\tcolor: runningCellRulerDecorationColor,\n\t\t\t\t\tincludeOutput: false,\n\t\t\t\t\tmodelRanges: [new Range(0, 0, 0, 0)],\n\t\t\t\t\tposition: NotebookOverviewRulerLane.Left\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn { handle, options };\n\t\t});\n\n\t\tthis._executingCellDecorations = this._notebookEditor.deltaCellDecorations(this._executingCellDecorations, newDecorations);\n\t}\n}\n\nregisterNotebookContribution(PausedCellDecorationContribution.id, PausedCellDecorationContribution);\n\nexport class NotebookBreakpointDecorations extends Disposable implements INotebookEditorContribution {\n\tstatic id: string = 'workbench.notebook.debug.notebookBreakpointDecorations';\n\n\tprivate _currentDecorations: string[] = [];\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditor,\n\t\t@IDebugService private readonly _debugService: IDebugService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(_debugService.getModel().onDidChangeBreakpoints(() => this.updateDecorations()));\n\t\tthis._register(_configService.onDidChangeConfiguration(e => e.affectsConfiguration('debug.showBreakpointsInOverviewRuler') && this.updateDecorations()));\n\t}\n\n\tprivate updateDecorations(): void {\n\t\tconst enabled = this._configService.getValue('debug.showBreakpointsInOverviewRuler');\n\t\tconst newDecorations = enabled ?\n\t\t\tthis._debugService.getModel().getBreakpoints().map(breakpoint => {\n\t\t\t\tconst parsed = CellUri.parse(breakpoint.uri);\n\t\t\t\tif (!parsed || parsed.notebook.toString() !== this._notebookEditor.textModel!.uri.toString()) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst options: INotebookCellDecorationOptions = {\n\t\t\t\t\toverviewRuler: {\n\t\t\t\t\t\tcolor: debugIconBreakpointForeground,\n\t\t\t\t\t\tincludeOutput: false,\n\t\t\t\t\t\tmodelRanges: [new Range(breakpoint.lineNumber, 0, breakpoint.lineNumber, 0)],\n\t\t\t\t\t\tposition: NotebookOverviewRulerLane.Left\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn { handle: parsed.handle, options };\n\t\t\t}).filter(x => !!x) as INotebookDeltaDecoration[]\n\t\t\t: [];\n\t\tthis._currentDecorations = this._notebookEditor.deltaCellDecorations(this._currentDecorations, newDecorations);\n\t}\n}\n\nregisterNotebookContribution(NotebookBreakpointDecorations.id, NotebookBreakpointDecorations);\n"]}