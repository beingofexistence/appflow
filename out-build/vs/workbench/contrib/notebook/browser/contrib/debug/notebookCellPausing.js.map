{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/contrib/debug/notebookCellPausing.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;IAchG,IAAM,mBAAmB,GAAzB,MAAM,mBAAoB,SAAQ,eAAG;QAKpC,YACgB,CAAmC,EAClB,CAAoD;YAEpF,KAAK,EAAE,CAAC;YAHwB,MAAC,GAAD,CAAC,CAAiB;YACD,MAAC,GAAD,CAAC,CAAkC;YANpE,MAAC,GAAc,IAAI,GAAG,EAAU,CAAC;YAUjD,IAAI,CAAC,CAAC,CAAS,CAAC,CAAa,QAAQ,EAAE,CAAC,oBAAoB,CAAC,GAAG,EAAE;gBACjE,4GAA4G;gBAC5G,oEAAoE;gBACpE,IAAI,CAAC,CAAC,CAAoB,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,CAAC,CAAU,QAAQ,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,CAAC,GAAY,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,CAAc,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAoB,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QACtG,CAAC;QAEO,KAAK,CAAC,CAAC,CAAoB,wBAAiC;YACnE,MAAM,cAAc,GAAG,IAAI,GAAG,EAAU,CAAC;YAEzC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,CAAC,CAAa,QAAQ,EAAE,CAAC,WAAW,EAAE,EAAE;gBAClE,KAAK,MAAM,MAAM,IAAI,OAAO,CAAC,aAAa,EAAE,EAAE;oBAC7C,IAAI,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;oBACtC,IAAI,wBAAwB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;wBAClD,SAAS,GAAI,MAAiB,CAAC,iBAAiB,EAAE,CAAC;qBACnD;oBAED,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;wBACtB,MAAM,MAAM,GAAG,wBAAO,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;wBAC5C,IAAI,MAAM,EAAE;4BACX,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;4BAC7C,IAAI,CAAC,CAAC,CAAY,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;yBACvC;oBACF,CAAC,CAAC,CAAC;iBACH;aACD;YAED,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,CAAC,EAAa;gBACpC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;oBAC7B,IAAI,CAAC,CAAC,CAAY,SAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;oBACzC,IAAI,CAAC,CAAC,CAAY,MAAM,CAAC,GAAG,CAAC,CAAC;iBAC9B;aACD;YAED,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7D,CAAC;QAEO,CAAC,CAAY,OAAY,EAAE,QAAiB;YACnD,MAAM,MAAM,GAAG,wBAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACtC,IAAI,MAAM,EAAE;gBACX,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAA8B,gBAAgB,CAAC,OAAO,CAAC,CAAC;gBAC/E,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,KAAK,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBACvE,QAAQ,CAAC,MAAM,CAAC,CAAC;4BAChB,QAAQ,EAAE,kDAAuB,CAAC,cAAc;4BAChD,QAAQ,EAAE,IAAI;4BACd,QAAQ;yBACR,CAAC,CAAC,CAAC;iBACJ;aACD;QACF,CAAC;KACD,CAAA;IA/DK,mBAAmB;QAMtB,WAAA,WAAG,CAAA;QACH,WAAA,mCAAG,CAAA;OAPA,mBAAmB,CA+DxB;IAED,cAAG,CAAM,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC,6BAA6B,CAAC,mBAAmB,kCAA0B,CAAC","file":"notebookCellPausing.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { IDebugService } from 'vs/workbench/contrib/debug/common/debug';\nimport { Thread } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { CellUri } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { CellExecutionUpdateType } from 'vs/workbench/contrib/notebook/common/notebookExecutionService';\nimport { INotebookExecutionStateService } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\n\nclass NotebookCellPausing extends Disposable implements IWorkbenchContribution {\n\tprivate readonly _pausedCells = new Set<string>();\n\n\tprivate _scheduler: RunOnceScheduler;\n\n\tconstructor(\n\t\t@IDebugService private readonly _debugService: IDebugService,\n\t\t@INotebookExecutionStateService private readonly _notebookExecutionStateService: INotebookExecutionStateService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(_debugService.getModel().onDidChangeCallStack(() => {\n\t\t\t// First update using the stale callstack if the real callstack is empty, to reduce blinking while stepping.\n\t\t\t// After not pausing for 2s, update again with the latest callstack.\n\t\t\tthis.onDidChangeCallStack(true);\n\t\t\tthis._scheduler.schedule();\n\t\t}));\n\t\tthis._scheduler = this._register(new RunOnceScheduler(() => this.onDidChangeCallStack(false), 2000));\n\t}\n\n\tprivate async onDidChangeCallStack(fallBackOnStaleCallstack: boolean): Promise<void> {\n\t\tconst newPausedCells = new Set<string>();\n\n\t\tfor (const session of this._debugService.getModel().getSessions()) {\n\t\t\tfor (const thread of session.getAllThreads()) {\n\t\t\t\tlet callStack = thread.getCallStack();\n\t\t\t\tif (fallBackOnStaleCallstack && !callStack.length) {\n\t\t\t\t\tcallStack = (thread as Thread).getStaleCallStack();\n\t\t\t\t}\n\n\t\t\t\tcallStack.forEach(sf => {\n\t\t\t\t\tconst parsed = CellUri.parse(sf.source.uri);\n\t\t\t\t\tif (parsed) {\n\t\t\t\t\t\tnewPausedCells.add(sf.source.uri.toString());\n\t\t\t\t\t\tthis.editIsPaused(sf.source.uri, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfor (const uri of this._pausedCells) {\n\t\t\tif (!newPausedCells.has(uri)) {\n\t\t\t\tthis.editIsPaused(URI.parse(uri), false);\n\t\t\t\tthis._pausedCells.delete(uri);\n\t\t\t}\n\t\t}\n\n\t\tnewPausedCells.forEach(cell => this._pausedCells.add(cell));\n\t}\n\n\tprivate editIsPaused(cellUri: URI, isPaused: boolean) {\n\t\tconst parsed = CellUri.parse(cellUri);\n\t\tif (parsed) {\n\t\t\tconst exeState = this._notebookExecutionStateService.getCellExecution(cellUri);\n\t\t\tif (exeState && (exeState.isPaused !== isPaused || !exeState.didPause)) {\n\t\t\t\texeState.update([{\n\t\t\t\t\teditType: CellExecutionUpdateType.ExecutionState,\n\t\t\t\t\tdidPause: true,\n\t\t\t\t\tisPaused\n\t\t\t\t}]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(NotebookCellPausing, LifecyclePhase.Restored);\n"]}