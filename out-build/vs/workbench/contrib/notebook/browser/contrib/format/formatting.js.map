{"version":3,"sources":["vs/workbench/contrib/notebook/browser/contrib/format/formatting.ts"],"names":[],"mappings":"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","file":"formatting.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { IBulkEditService, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorker';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { FormattingMode, formatDocumentWithSelectedProvider, getDocumentFormattingEditsUntilResult } from 'vs/editor/contrib/format/browser/format';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { Progress } from 'vs/platform/progress/common/progress';\nimport { NOTEBOOK_ACTIONS_CATEGORY } from 'vs/workbench/contrib/notebook/browser/controller/coreActions';\nimport { getNotebookEditorFromEditorPane } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_IS_ACTIVE_EDITOR } from 'vs/workbench/contrib/notebook/common/notebookContextKeys';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { INotebookCellExecution } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\nimport { ICellExecutionParticipant, INotebookExecutionService } from 'vs/workbench/contrib/notebook/common/notebookExecutionService';\nimport { NotebookSetting } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions as WorkbenchContributionsExtensions } from 'vs/workbench/common/contributions';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\n\n// format notebook\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.format',\n\t\t\ttitle: { value: localize('format.title', \"Format Notebook\"), original: 'Format Notebook' },\n\t\t\tcategory: NOTEBOOK_ACTIONS_CATEGORY,\n\t\t\tprecondition: ContextKeyExpr.and(NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_EDITOR_EDITABLE),\n\t\t\tkeybinding: {\n\t\t\t\twhen: EditorContextKeys.editorTextFocus.toNegated(),\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyI },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.EditorContext,\n\t\t\t\twhen: ContextKeyExpr.and(EditorContextKeys.inCompositeEditor, EditorContextKeys.hasDocumentFormattingProvider),\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 1.3\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst textModelService = accessor.get(ITextModelService);\n\t\tconst editorWorkerService = accessor.get(IEditorWorkerService);\n\t\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\n\t\tconst editor = getNotebookEditorFromEditorPane(editorService.activeEditorPane);\n\t\tif (!editor || !editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst notebook = editor.textModel;\n\t\tconst disposable = new DisposableStore();\n\t\ttry {\n\t\t\tconst allCellEdits = await Promise.all(notebook.cells.map(async cell => {\n\t\t\t\tconst ref = await textModelService.createModelReference(cell.uri);\n\t\t\t\tdisposable.add(ref);\n\n\t\t\t\tconst model = ref.object.textEditorModel;\n\n\t\t\t\tconst formatEdits = await getDocumentFormattingEditsUntilResult(\n\t\t\t\t\teditorWorkerService,\n\t\t\t\t\tlanguageFeaturesService,\n\t\t\t\t\tmodel,\n\t\t\t\t\tmodel.getOptions(),\n\t\t\t\t\tCancellationToken.None\n\t\t\t\t);\n\n\t\t\t\tconst edits: ResourceTextEdit[] = [];\n\n\t\t\t\tif (formatEdits) {\n\t\t\t\t\tfor (const edit of formatEdits) {\n\t\t\t\t\t\tedits.push(new ResourceTextEdit(model.uri, edit, model.getVersionId()));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn edits;\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}));\n\n\t\t\tawait bulkEditService.apply(/* edit */allCellEdits.flat(), { label: localize('label', \"Format Notebook\"), code: 'undoredo.formatNotebook', });\n\n\t\t} finally {\n\t\t\tdisposable.dispose();\n\t\t}\n\t}\n});\n\n// format cell\nregisterEditorAction(class FormatCellAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.formatCell',\n\t\t\tlabel: localize('formatCell.label', \"Format Cell\"),\n\t\t\talias: 'Format Cell',\n\t\t\tprecondition: ContextKeyExpr.and(NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_EDITOR_EDITABLE, EditorContextKeys.inCompositeEditor, EditorContextKeys.writable, EditorContextKeys.hasDocumentFormattingProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus),\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyI },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 1.301\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tif (editor.hasModel()) {\n\t\t\tconst instaService = accessor.get(IInstantiationService);\n\t\t\tawait instaService.invokeFunction(formatDocumentWithSelectedProvider, editor, FormattingMode.Explicit, Progress.None, CancellationToken.None);\n\t\t}\n\t}\n});\n\nclass FormatOnCellExecutionParticipant implements ICellExecutionParticipant {\n\tconstructor(\n\t\t@IBulkEditService private readonly bulkEditService: IBulkEditService,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IEditorWorkerService private readonly editorWorkerService: IEditorWorkerService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t) {\n\t}\n\n\tasync onWillExecuteCell(executions: INotebookCellExecution[]): Promise<void> {\n\n\t\tconst enabled = this.configurationService.getValue<boolean>(NotebookSetting.formatOnCellExecution);\n\t\tif (!enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposable = new DisposableStore();\n\t\ttry {\n\t\t\tconst allCellEdits = await Promise.all(executions.map(async cellExecution => {\n\t\t\t\tconst nbModel = this._notebookService.getNotebookTextModel(cellExecution.notebook);\n\t\t\t\tif (!nbModel) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\tlet activeCell;\n\t\t\t\tfor (const cell of nbModel.cells) {\n\t\t\t\t\tif (cell.handle === cellExecution.cellHandle) {\n\t\t\t\t\t\tactiveCell = cell;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!activeCell) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst ref = await this.textModelService.createModelReference(activeCell.uri);\n\t\t\t\tdisposable.add(ref);\n\n\t\t\t\tconst model = ref.object.textEditorModel;\n\n\t\t\t\t// todo: eventually support cancellation. potential leak if cell deleted mid execution\n\t\t\t\tconst formatEdits = await getDocumentFormattingEditsUntilResult(\n\t\t\t\t\tthis.editorWorkerService,\n\t\t\t\t\tthis.languageFeaturesService,\n\t\t\t\t\tmodel,\n\t\t\t\t\tmodel.getOptions(),\n\t\t\t\t\tCancellationToken.None\n\t\t\t\t);\n\n\t\t\t\tconst edits: ResourceTextEdit[] = [];\n\n\t\t\t\tif (formatEdits) {\n\t\t\t\t\tedits.push(...formatEdits.map(edit => new ResourceTextEdit(model.uri, edit, model.getVersionId())));\n\t\t\t\t\treturn edits;\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}));\n\n\t\t\tawait this.bulkEditService.apply(/* edit */allCellEdits.flat(), { label: localize('formatCells.label', \"Format Cells\"), code: 'undoredo.notebooks.onWillExecuteFormat', });\n\n\t\t} finally {\n\t\t\tdisposable.dispose();\n\t\t}\n\t}\n}\n\nexport class CellExecutionParticipantsContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@INotebookExecutionService private readonly notebookExecutionService: INotebookExecutionService\n\t) {\n\t\tsuper();\n\t\tthis.registerKernelExecutionParticipants();\n\t}\n\n\tprivate registerKernelExecutionParticipants(): void {\n\t\tthis._register(this.notebookExecutionService.registerExecutionParticipant(this.instantiationService.createInstance(FormatOnCellExecutionParticipant)));\n\t}\n}\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchContributionsExtensions.Workbench);\nworkbenchContributionsRegistry.registerWorkbenchContribution(CellExecutionParticipantsContribution, LifecyclePhase.Restored);\n"]}