{"version":3,"sources":["vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/executionStatusBarItemController.ts"],"names":[],"mappings":"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","file":"executionStatusBarItemController.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { disposableTimeout, RunOnceScheduler } from 'vs/base/common/async';\nimport { Disposable, dispose, IDisposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { language } from 'vs/base/common/platform';\nimport { localize } from 'vs/nls';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { themeColorFromId } from 'vs/platform/theme/common/themeService';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { ICellVisibilityChangeEvent, NotebookVisibleCellObserver } from 'vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/notebookVisibleCellObserver';\nimport { ICellViewModel, INotebookEditor, INotebookEditorContribution, INotebookViewModel } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { registerNotebookContribution } from 'vs/workbench/contrib/notebook/browser/notebookEditorExtensions';\nimport { cellStatusIconError, cellStatusIconSuccess } from 'vs/workbench/contrib/notebook/browser/notebookEditorWidget';\nimport { errorStateIcon, executingStateIcon, pendingStateIcon, successStateIcon } from 'vs/workbench/contrib/notebook/browser/notebookIcons';\nimport { CellStatusbarAlignment, INotebookCellStatusBarItem, NotebookCellExecutionState, NotebookCellInternalMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookCellExecution, INotebookExecutionStateService, NotebookExecutionType } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\n\nexport function formatCellDuration(duration: number, showMilliseconds: boolean = true): string {\n\tif (showMilliseconds && duration < 1000) {\n\t\treturn `${duration}ms`;\n\t}\n\n\tconst minutes = Math.floor(duration / 1000 / 60);\n\tconst seconds = Math.floor(duration / 1000) % 60;\n\tconst tenths = Math.floor((duration % 1000) / 100);\n\n\tif (minutes > 0) {\n\t\treturn `${minutes}m ${seconds}.${tenths}s`;\n\t} else {\n\t\treturn `${seconds}.${tenths}s`;\n\t}\n}\n\nexport class NotebookStatusBarController extends Disposable {\n\tprivate readonly _visibleCells = new Map<number, IDisposable>();\n\tprivate readonly _observer: NotebookVisibleCellObserver;\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditor,\n\t\tprivate readonly _itemFactory: (vm: INotebookViewModel, cell: ICellViewModel) => IDisposable,\n\t) {\n\t\tsuper();\n\t\tthis._observer = this._register(new NotebookVisibleCellObserver(this._notebookEditor));\n\t\tthis._register(this._observer.onDidChangeVisibleCells(this._updateVisibleCells, this));\n\n\t\tthis._updateEverything();\n\t}\n\n\tprivate _updateEverything(): void {\n\t\tthis._visibleCells.forEach(dispose);\n\t\tthis._visibleCells.clear();\n\t\tthis._updateVisibleCells({ added: this._observer.visibleCells, removed: [] });\n\t}\n\n\tprivate _updateVisibleCells(e: ICellVisibilityChangeEvent): void {\n\t\tconst vm = this._notebookEditor.getViewModel();\n\t\tif (!vm) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const oldCell of e.removed) {\n\t\t\tthis._visibleCells.get(oldCell.handle)?.dispose();\n\t\t\tthis._visibleCells.delete(oldCell.handle);\n\t\t}\n\n\t\tfor (const newCell of e.added) {\n\t\t\tthis._visibleCells.set(newCell.handle, this._itemFactory(vm, newCell));\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis._visibleCells.forEach(dispose);\n\t\tthis._visibleCells.clear();\n\t}\n}\n\nexport class ExecutionStateCellStatusBarContrib extends Disposable implements INotebookEditorContribution {\n\tstatic id: string = 'workbench.notebook.statusBar.execState';\n\n\tconstructor(notebookEditor: INotebookEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._register(new NotebookStatusBarController(notebookEditor, (vm, cell) => instantiationService.createInstance(ExecutionStateCellStatusBarItem, vm, cell)));\n\t}\n}\nregisterNotebookContribution(ExecutionStateCellStatusBarContrib.id, ExecutionStateCellStatusBarContrib);\n\n/**\n * Shows the cell's execution state in the cell status bar. When the \"executing\" state is shown, it will be shown for a minimum brief time.\n */\nclass ExecutionStateCellStatusBarItem extends Disposable {\n\tprivate static readonly MIN_SPINNER_TIME = 500;\n\n\tprivate _currentItemIds: string[] = [];\n\n\tprivate _showedExecutingStateTime: number | undefined;\n\tprivate _clearExecutingStateTimer = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tprivate readonly _notebookViewModel: INotebookViewModel,\n\t\tprivate readonly _cell: ICellViewModel,\n\t\t@INotebookExecutionStateService private readonly _executionStateService: INotebookExecutionStateService\n\t) {\n\t\tsuper();\n\n\t\tthis._update();\n\t\tthis._register(this._executionStateService.onDidChangeExecution(e => {\n\t\t\tif (e.type === NotebookExecutionType.cell && e.affectsCell(this._cell.uri)) {\n\t\t\t\tthis._update();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._cell.model.onDidChangeInternalMetadata(() => this._update()));\n\t}\n\n\tprivate async _update() {\n\t\tconst items = this._getItemsForCell();\n\t\tif (Array.isArray(items)) {\n\t\t\tthis._currentItemIds = this._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [{ handle: this._cell.handle, items }]);\n\t\t}\n\t}\n\n\t/**\n\t *\tReturns undefined if there should be no change, and an empty array if all items should be removed.\n\t */\n\tprivate _getItemsForCell(): INotebookCellStatusBarItem[] | undefined {\n\t\tconst runState = this._executionStateService.getCellExecution(this._cell.uri);\n\n\t\t// Show the execution spinner for a minimum time\n\t\tif (runState?.state === NotebookCellExecutionState.Executing && typeof this._showedExecutingStateTime !== 'number') {\n\t\t\tthis._showedExecutingStateTime = Date.now();\n\t\t} else if (runState?.state !== NotebookCellExecutionState.Executing && typeof this._showedExecutingStateTime === 'number') {\n\t\t\tconst timeUntilMin = ExecutionStateCellStatusBarItem.MIN_SPINNER_TIME - (Date.now() - this._showedExecutingStateTime);\n\t\t\tif (timeUntilMin > 0) {\n\t\t\t\tif (!this._clearExecutingStateTimer.value) {\n\t\t\t\t\tthis._clearExecutingStateTimer.value = disposableTimeout(() => {\n\t\t\t\t\t\tthis._showedExecutingStateTime = undefined;\n\t\t\t\t\t\tthis._clearExecutingStateTimer.clear();\n\t\t\t\t\t\tthis._update();\n\t\t\t\t\t}, timeUntilMin);\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t} else {\n\t\t\t\tthis._showedExecutingStateTime = undefined;\n\t\t\t}\n\t\t}\n\n\t\tconst items = this._getItemForState(runState, this._cell.internalMetadata);\n\t\treturn items;\n\t}\n\n\tprivate _getItemForState(runState: INotebookCellExecution | undefined, internalMetadata: NotebookCellInternalMetadata): INotebookCellStatusBarItem[] {\n\t\tconst state = runState?.state;\n\t\tconst { lastRunSuccess } = internalMetadata;\n\t\tif (!state && lastRunSuccess) {\n\t\t\treturn [<INotebookCellStatusBarItem>{\n\t\t\t\ttext: `$(${successStateIcon.id})`,\n\t\t\t\tcolor: themeColorFromId(cellStatusIconSuccess),\n\t\t\t\ttooltip: localize('notebook.cell.status.success', \"Success\"),\n\t\t\t\talignment: CellStatusbarAlignment.Left,\n\t\t\t\tpriority: Number.MAX_SAFE_INTEGER\n\t\t\t}];\n\t\t} else if (!state && lastRunSuccess === false) {\n\t\t\treturn [{\n\t\t\t\ttext: `$(${errorStateIcon.id})`,\n\t\t\t\tcolor: themeColorFromId(cellStatusIconError),\n\t\t\t\ttooltip: localize('notebook.cell.status.failed', \"Failed\"),\n\t\t\t\talignment: CellStatusbarAlignment.Left,\n\t\t\t\tpriority: Number.MAX_SAFE_INTEGER\n\t\t\t}];\n\t\t} else if (state === NotebookCellExecutionState.Pending || state === NotebookCellExecutionState.Unconfirmed) {\n\t\t\treturn [<INotebookCellStatusBarItem>{\n\t\t\t\ttext: `$(${pendingStateIcon.id})`,\n\t\t\t\ttooltip: localize('notebook.cell.status.pending', \"Pending\"),\n\t\t\t\talignment: CellStatusbarAlignment.Left,\n\t\t\t\tpriority: Number.MAX_SAFE_INTEGER\n\t\t\t}];\n\t\t} else if (state === NotebookCellExecutionState.Executing) {\n\t\t\tconst icon = runState?.didPause ?\n\t\t\t\texecutingStateIcon :\n\t\t\t\tThemeIcon.modify(executingStateIcon, 'spin');\n\t\t\treturn [<INotebookCellStatusBarItem>{\n\t\t\t\ttext: `$(${icon.id})`,\n\t\t\t\ttooltip: localize('notebook.cell.status.executing', \"Executing\"),\n\t\t\t\talignment: CellStatusbarAlignment.Left,\n\t\t\t\tpriority: Number.MAX_SAFE_INTEGER\n\t\t\t}];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\n\t\tthis._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [{ handle: this._cell.handle, items: [] }]);\n\t}\n}\n\nexport class TimerCellStatusBarContrib extends Disposable implements INotebookEditorContribution {\n\tstatic id: string = 'workbench.notebook.statusBar.execTimer';\n\n\tconstructor(\n\t\tnotebookEditor: INotebookEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService) {\n\t\tsuper();\n\t\tthis._register(new NotebookStatusBarController(notebookEditor, (vm, cell) => instantiationService.createInstance(TimerCellStatusBarItem, vm, cell)));\n\t}\n}\nregisterNotebookContribution(TimerCellStatusBarContrib.id, TimerCellStatusBarContrib);\n\nconst UPDATE_TIMER_GRACE_PERIOD = 200;\n\nclass TimerCellStatusBarItem extends Disposable {\n\tprivate static UPDATE_INTERVAL = 100;\n\tprivate _currentItemIds: string[] = [];\n\n\tprivate _scheduler: RunOnceScheduler;\n\n\tprivate _deferredUpdate: IDisposable | undefined;\n\n\tconstructor(\n\t\tprivate readonly _notebookViewModel: INotebookViewModel,\n\t\tprivate readonly _cell: ICellViewModel,\n\t\t@INotebookExecutionStateService private readonly _executionStateService: INotebookExecutionStateService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t) {\n\t\tsuper();\n\n\t\tthis._scheduler = this._register(new RunOnceScheduler(() => this._update(), TimerCellStatusBarItem.UPDATE_INTERVAL));\n\t\tthis._update();\n\t\tthis._register(this._cell.model.onDidChangeInternalMetadata(() => this._update()));\n\t}\n\n\tprivate async _update() {\n\t\tlet timerItem: INotebookCellStatusBarItem | undefined;\n\t\tconst runState = this._executionStateService.getCellExecution(this._cell.uri);\n\t\tconst state = runState?.state;\n\t\tconst startTime = this._cell.internalMetadata.runStartTime;\n\t\tconst adjustment = this._cell.internalMetadata.runStartTimeAdjustment ?? 0;\n\t\tconst endTime = this._cell.internalMetadata.runEndTime;\n\n\t\tif (runState?.didPause) {\n\t\t\ttimerItem = undefined;\n\t\t} else if (state === NotebookCellExecutionState.Executing) {\n\t\t\tif (typeof startTime === 'number') {\n\t\t\t\ttimerItem = this._getTimeItem(startTime, Date.now(), adjustment);\n\t\t\t\tthis._scheduler.schedule();\n\t\t\t}\n\t\t} else if (!state) {\n\t\t\tif (typeof startTime === 'number' && typeof endTime === 'number') {\n\t\t\t\tconst timerDuration = Date.now() - startTime + adjustment;\n\t\t\t\tconst executionDuration = endTime - startTime;\n\t\t\t\tconst renderDuration = this._cell.internalMetadata.renderDuration ?? {};\n\n\t\t\t\ttimerItem = this._getTimeItem(startTime, endTime, undefined, {\n\t\t\t\t\ttimerDuration,\n\t\t\t\t\texecutionDuration,\n\t\t\t\t\trenderDuration\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst items = timerItem ? [timerItem] : [];\n\n\t\tif (!items.length && !!runState) {\n\t\t\tif (!this._deferredUpdate) {\n\t\t\t\tthis._deferredUpdate = disposableTimeout(() => {\n\t\t\t\t\tthis._deferredUpdate = undefined;\n\t\t\t\t\tthis._currentItemIds = this._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [{ handle: this._cell.handle, items }]);\n\t\t\t\t}, UPDATE_TIMER_GRACE_PERIOD);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._deferredUpdate?.dispose();\n\t\t\tthis._deferredUpdate = undefined;\n\t\t\tthis._currentItemIds = this._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [{ handle: this._cell.handle, items }]);\n\t\t}\n\t}\n\n\tprivate _getTimeItem(startTime: number, endTime: number, adjustment: number = 0, runtimeInformation?: { renderDuration: { [key: string]: number }; executionDuration: number; timerDuration: number }): INotebookCellStatusBarItem {\n\t\tconst duration = endTime - startTime + adjustment;\n\n\t\tlet tooltip: IMarkdownString | undefined;\n\n\t\tif (runtimeInformation) {\n\t\t\tconst lastExecution = new Date(endTime).toLocaleTimeString(language);\n\t\t\tconst { renderDuration, executionDuration, timerDuration } = runtimeInformation;\n\n\t\t\tlet renderTimes = '';\n\t\t\tfor (const key in renderDuration) {\n\t\t\t\tconst rendererInfo = this._notebookService.getRendererInfo(key);\n\n\t\t\t\tconst args = encodeURIComponent(JSON.stringify({\n\t\t\t\t\textensionId: rendererInfo?.extensionId.value ?? '',\n\t\t\t\t\tissueBody:\n\t\t\t\t\t\t`Auto-generated text from notebook cell performance. The duration for the renderer, ${rendererInfo?.displayName ?? key}, is slower than expected.\\n` +\n\t\t\t\t\t\t`Execution Time: ${formatCellDuration(executionDuration)}\\n` +\n\t\t\t\t\t\t`Renderer Duration: ${formatCellDuration(renderDuration[key])}\\n`\n\t\t\t\t}));\n\n\t\t\t\trenderTimes += `- [${rendererInfo?.displayName ?? key}](command:workbench.action.openIssueReporter?${args}) ${formatCellDuration(renderDuration[key])}\\n`;\n\t\t\t}\n\n\t\t\trenderTimes += `\\n*${localize('notebook.cell.statusBar.timerTooltip.reportIssueFootnote', \"Use the links above to file an issue using the issue reporter.\")}*\\n`;\n\n\t\t\ttooltip = {\n\t\t\t\tvalue: localize('notebook.cell.statusBar.timerTooltip', \"**Last Execution** {0}\\n\\n**Execution Time** {1}\\n\\n**Overhead Time** {2}\\n\\n**Render Times**\\n\\n{3}\", lastExecution, formatCellDuration(executionDuration), formatCellDuration(timerDuration - executionDuration), renderTimes),\n\t\t\t\tisTrusted: true\n\t\t\t};\n\n\t\t}\n\n\t\treturn <INotebookCellStatusBarItem>{\n\t\t\ttext: formatCellDuration(duration, false),\n\t\t\talignment: CellStatusbarAlignment.Left,\n\t\t\tpriority: Number.MAX_SAFE_INTEGER - 5,\n\t\t\ttooltip\n\t\t};\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\n\t\tthis._deferredUpdate?.dispose();\n\t\tthis._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [{ handle: this._cell.handle, items: [] }]);\n\t}\n}\n"]}