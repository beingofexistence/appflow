{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/notebookVisibleCellObserver.ts"],"names":[],"mappings":"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","file":"notebookVisibleCellObserver.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { diffSets } from 'vs/base/common/collections';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { isDefined } from 'vs/base/common/types';\nimport { ICellViewModel, INotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { cellRangesToIndexes } from 'vs/workbench/contrib/notebook/common/notebookRange';\n\nexport interface ICellVisibilityChangeEvent {\n\tadded: ICellViewModel[];\n\tremoved: ICellViewModel[];\n}\n\nexport class NotebookVisibleCellObserver extends Disposable {\n\tprivate readonly _onDidChangeVisibleCells = this._register(new Emitter<ICellVisibilityChangeEvent>());\n\treadonly onDidChangeVisibleCells = this._onDidChangeVisibleCells.event;\n\n\tprivate readonly _viewModelDisposables = this._register(new DisposableStore());\n\n\tprivate _visibleCells: ICellViewModel[] = [];\n\n\tget visibleCells(): ICellViewModel[] {\n\t\treturn this._visibleCells;\n\t}\n\n\tconstructor(private readonly _notebookEditor: INotebookEditor) {\n\t\tsuper();\n\n\t\tthis._register(this._notebookEditor.onDidChangeVisibleRanges(this._updateVisibleCells, this));\n\t\tthis._register(this._notebookEditor.onDidChangeModel(this._onModelChange, this));\n\t\tthis._updateVisibleCells();\n\t}\n\n\tprivate _onModelChange() {\n\t\tthis._viewModelDisposables.clear();\n\t\tif (this._notebookEditor.hasModel()) {\n\t\t\tthis._viewModelDisposables.add(this._notebookEditor.onDidChangeViewCells(() => this.updateEverything()));\n\t\t}\n\n\t\tthis.updateEverything();\n\t}\n\n\tprotected updateEverything(): void {\n\t\tthis._onDidChangeVisibleCells.fire({ added: [], removed: Array.from(this._visibleCells) });\n\t\tthis._visibleCells = [];\n\t\tthis._updateVisibleCells();\n\t}\n\n\tprivate _updateVisibleCells(): void {\n\t\tif (!this._notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newVisibleCells = cellRangesToIndexes(this._notebookEditor.visibleRanges)\n\t\t\t.map(index => this._notebookEditor.cellAt(index))\n\t\t\t.filter(isDefined);\n\t\tconst newVisibleHandles = new Set(newVisibleCells.map(cell => cell.handle));\n\t\tconst oldVisibleHandles = new Set(this._visibleCells.map(cell => cell.handle));\n\t\tconst diff = diffSets(oldVisibleHandles, newVisibleHandles);\n\n\t\tconst added = diff.added\n\t\t\t.map(handle => this._notebookEditor.getCellByHandle(handle))\n\t\t\t.filter(isDefined);\n\t\tconst removed = diff.removed\n\t\t\t.map(handle => this._notebookEditor.getCellByHandle(handle))\n\t\t\t.filter(isDefined);\n\n\t\tthis._visibleCells = newVisibleCells;\n\t\tthis._onDidChangeVisibleCells.fire({\n\t\t\tadded,\n\t\t\tremoved\n\t\t});\n\t}\n}\n"]}