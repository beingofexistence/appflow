{"version":3,"sources":["vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/statusBarProviders.ts"],"names":[],"mappings":"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","file":"statusBarProviders.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { URI } from 'vs/base/common/uri';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { CHANGE_CELL_LANGUAGE, DETECT_CELL_LANGUAGE } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { INotebookCellStatusBarService } from 'vs/workbench/contrib/notebook/common/notebookCellStatusBarService';\nimport { CellKind, CellStatusbarAlignment, INotebookCellStatusBarItem, INotebookCellStatusBarItemList, INotebookCellStatusBarItemProvider } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookKernelService } from 'vs/workbench/contrib/notebook/common/notebookKernelService';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { ILanguageDetectionService, LanguageDetectionHintConfig } from 'vs/workbench/services/languageDetection/common/languageDetectionWorkerService';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\n\nclass CellStatusBarLanguagePickerProvider implements INotebookCellStatusBarItemProvider {\n\n\treadonly viewType = '*';\n\n\tconstructor(\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) { }\n\n\tasync provideCellStatusBarItems(uri: URI, index: number, _token: CancellationToken): Promise<INotebookCellStatusBarItemList | undefined> {\n\t\tconst doc = this._notebookService.getNotebookTextModel(uri);\n\t\tconst cell = doc?.cells[index];\n\t\tif (!cell) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst statusBarItems: INotebookCellStatusBarItem[] = [];\n\t\tlet displayLanguage = cell.language;\n\t\tif (cell.cellKind === CellKind.Markup) {\n\t\t\tdisplayLanguage = 'markdown';\n\t\t} else {\n\t\t\tconst registeredId = this._languageService.getLanguageIdByLanguageName(cell.language);\n\t\t\tif (registeredId) {\n\t\t\t\tdisplayLanguage = this._languageService.getLanguageName(displayLanguage) ?? displayLanguage;\n\t\t\t} else {\n\t\t\t\t// add unregistered lanugage warning item\n\t\t\t\tconst searchTooltip = localize('notebook.cell.status.searchLanguageExtensions', \"Unknown cell language. Click to search for '{0}' extensions\", cell.language);\n\t\t\t\tstatusBarItems.push({\n\t\t\t\t\ttext: `$(dialog-warning)`,\n\t\t\t\t\tcommand: { id: 'workbench.extensions.search', arguments: [`@tag:${cell.language}`], title: 'Search Extensions' },\n\t\t\t\t\ttooltip: searchTooltip,\n\t\t\t\t\talignment: CellStatusbarAlignment.Right,\n\t\t\t\t\tpriority: -Number.MAX_SAFE_INTEGER + 1\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tstatusBarItems.push({\n\t\t\ttext: displayLanguage,\n\t\t\tcommand: CHANGE_CELL_LANGUAGE,\n\t\t\ttooltip: localize('notebook.cell.status.language', \"Select Cell Language Mode\"),\n\t\t\talignment: CellStatusbarAlignment.Right,\n\t\t\tpriority: -Number.MAX_SAFE_INTEGER\n\t\t});\n\t\treturn {\n\t\t\titems: statusBarItems\n\t\t};\n\t}\n}\n\nclass CellStatusBarLanguageDetectionProvider implements INotebookCellStatusBarItemProvider {\n\n\treadonly viewType = '*';\n\n\tprivate cache = new ResourceMap<{\n\t\tcontentVersion: number;\n\t\tupdateTimestamp: number;\n\t\tcellLanguage: string;\n\n\t\tguess?: string;\n\t}>();\n\n\tconstructor(\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@INotebookKernelService private readonly _notebookKernelService: INotebookKernelService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ILanguageDetectionService private readonly _languageDetectionService: ILanguageDetectionService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) { }\n\n\tasync provideCellStatusBarItems(uri: URI, index: number, token: CancellationToken): Promise<INotebookCellStatusBarItemList | undefined> {\n\t\tconst doc = this._notebookService.getNotebookTextModel(uri);\n\t\tconst cell = doc?.cells[index];\n\t\tif (!cell) { return; }\n\n\t\tconst enablementConfig = this._configurationService.getValue<LanguageDetectionHintConfig>('workbench.editor.languageDetectionHints');\n\t\tconst enabled = typeof enablementConfig === 'object' && enablementConfig?.notebookEditors;\n\t\tif (!enabled) {\n\t\t\treturn;\n\t\t}\n\t\tconst cellUri = cell.uri;\n\t\tconst contentVersion = cell.textModel?.getVersionId();\n\t\tif (!contentVersion) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentLanguageId = cell.cellKind === CellKind.Markup ?\n\t\t\t'markdown' :\n\t\t\t(this._languageService.getLanguageIdByLanguageName(cell.language) || cell.language);\n\n\t\tif (!this.cache.has(cellUri)) {\n\t\t\tthis.cache.set(cellUri, {\n\t\t\t\tcellLanguage: currentLanguageId, // force a re-compute upon a change in configured language\n\t\t\t\tupdateTimestamp: 0, // facilitates a disposable-free debounce operation\n\t\t\t\tcontentVersion: 1, // dont run for the initial contents, only on update\n\t\t\t});\n\t\t}\n\n\t\tconst cached = this.cache.get(cellUri)!;\n\t\tif (cached.cellLanguage !== currentLanguageId || (cached.updateTimestamp < Date.now() - 1000 && cached.contentVersion !== contentVersion)) {\n\t\t\tcached.updateTimestamp = Date.now();\n\t\t\tcached.cellLanguage = currentLanguageId;\n\t\t\tcached.contentVersion = contentVersion;\n\n\t\t\tconst kernel = this._notebookKernelService.getSelectedOrSuggestedKernel(doc);\n\t\t\tif (kernel) {\n\t\t\t\tconst supportedLangs = [...kernel.supportedLanguages, 'markdown'];\n\t\t\t\tcached.guess = await this._languageDetectionService.detectLanguage(cell.uri, supportedLangs);\n\t\t\t}\n\t\t}\n\n\t\tconst items: INotebookCellStatusBarItem[] = [];\n\t\tif (cached.guess && currentLanguageId !== cached.guess) {\n\t\t\tconst detectedName = this._languageService.getLanguageName(cached.guess) || cached.guess;\n\t\t\tlet tooltip = localize('notebook.cell.status.autoDetectLanguage', \"Accept Detected Language: {0}\", detectedName);\n\t\t\tconst keybinding = this._keybindingService.lookupKeybinding(DETECT_CELL_LANGUAGE);\n\t\t\tconst label = keybinding?.getLabel();\n\t\t\tif (label) {\n\t\t\t\ttooltip += ` (${label})`;\n\t\t\t}\n\t\t\titems.push({\n\t\t\t\ttext: '$(lightbulb-autofix)',\n\t\t\t\tcommand: DETECT_CELL_LANGUAGE,\n\t\t\t\ttooltip,\n\t\t\t\talignment: CellStatusbarAlignment.Right,\n\t\t\t\tpriority: -Number.MAX_SAFE_INTEGER + 1\n\t\t\t});\n\t\t}\n\n\t\treturn { items };\n\t}\n}\n\nclass BuiltinCellStatusBarProviders extends Disposable {\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@INotebookCellStatusBarService notebookCellStatusBarService: INotebookCellStatusBarService) {\n\t\tsuper();\n\n\t\tconst builtinProviders = [\n\t\t\tCellStatusBarLanguagePickerProvider,\n\t\t\tCellStatusBarLanguageDetectionProvider,\n\t\t];\n\t\tbuiltinProviders.forEach(p => {\n\t\t\tthis._register(notebookCellStatusBarService.registerCellStatusBarItemProvider(instantiationService.createInstance(p)));\n\t\t});\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(BuiltinCellStatusBarProviders, LifecyclePhase.Restored);\n"]}