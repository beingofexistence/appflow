{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/contributedStatusBarItemController.ts"],"names":[],"mappings":"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","file":"contributedStatusBarItemController.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { disposableTimeout, Throttler } from 'vs/base/common/async';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { NotebookVisibleCellObserver } from 'vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/notebookVisibleCellObserver';\nimport { ICellViewModel, INotebookEditor, INotebookEditorContribution, INotebookViewModel } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { registerNotebookContribution } from 'vs/workbench/contrib/notebook/browser/notebookEditorExtensions';\nimport { INotebookCellStatusBarService } from 'vs/workbench/contrib/notebook/common/notebookCellStatusBarService';\nimport { INotebookCellStatusBarItemList } from 'vs/workbench/contrib/notebook/common/notebookCommon';\n\nexport class ContributedStatusBarItemController extends Disposable implements INotebookEditorContribution {\n\tstatic id: string = 'workbench.notebook.statusBar.contributed';\n\n\tprivate readonly _visibleCells = new Map<number, CellStatusBarHelper>();\n\n\tprivate readonly _observer: NotebookVisibleCellObserver;\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditor,\n\t\t@INotebookCellStatusBarService private readonly _notebookCellStatusBarService: INotebookCellStatusBarService\n\t) {\n\t\tsuper();\n\t\tthis._observer = this._register(new NotebookVisibleCellObserver(this._notebookEditor));\n\t\tthis._register(this._observer.onDidChangeVisibleCells(this._updateVisibleCells, this));\n\n\t\tthis._updateEverything();\n\t\tthis._register(this._notebookCellStatusBarService.onDidChangeProviders(this._updateEverything, this));\n\t\tthis._register(this._notebookCellStatusBarService.onDidChangeItems(this._updateEverything, this));\n\t}\n\n\tprivate _updateEverything(): void {\n\t\tconst newCells = this._observer.visibleCells.filter(cell => !this._visibleCells.has(cell.handle));\n\t\tconst visibleCellHandles = new Set(this._observer.visibleCells.map(item => item.handle));\n\t\tconst currentCellHandles = Array.from(this._visibleCells.keys());\n\t\tconst removedCells = currentCellHandles.filter(handle => !visibleCellHandles.has(handle));\n\t\tconst itemsToUpdate = currentCellHandles.filter(handle => visibleCellHandles.has(handle));\n\n\t\tthis._updateVisibleCells({ added: newCells, removed: removedCells.map(handle => ({ handle })) });\n\t\titemsToUpdate.forEach(handle => this._visibleCells.get(handle)?.update());\n\t}\n\n\tprivate _updateVisibleCells(e: {\n\t\tadded: ICellViewModel[];\n\t\tremoved: { handle: number }[];\n\t}): void {\n\t\tconst vm = this._notebookEditor.getViewModel();\n\t\tif (!vm) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const newCell of e.added) {\n\t\t\tconst helper = new CellStatusBarHelper(vm, newCell, this._notebookCellStatusBarService);\n\t\t\tthis._visibleCells.set(newCell.handle, helper);\n\t\t}\n\n\t\tfor (const oldCell of e.removed) {\n\t\t\tthis._visibleCells.get(oldCell.handle)?.dispose();\n\t\t\tthis._visibleCells.delete(oldCell.handle);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis._visibleCells.forEach(cell => cell.dispose());\n\t\tthis._visibleCells.clear();\n\t}\n}\n\nclass CellStatusBarHelper extends Disposable {\n\tprivate _currentItemIds: string[] = [];\n\tprivate _currentItemLists: INotebookCellStatusBarItemList[] = [];\n\n\tprivate _activeToken: CancellationTokenSource | undefined;\n\n\tprivate readonly _updateThrottler = this._register(new Throttler());\n\n\tconstructor(\n\t\tprivate readonly _notebookViewModel: INotebookViewModel,\n\t\tprivate readonly _cell: ICellViewModel,\n\t\tprivate readonly _notebookCellStatusBarService: INotebookCellStatusBarService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(toDisposable(() => this._activeToken?.dispose(true)));\n\t\tthis._updateSoon();\n\t\tthis._register(this._cell.model.onDidChangeContent(() => this._updateSoon()));\n\t\tthis._register(this._cell.model.onDidChangeLanguage(() => this._updateSoon()));\n\t\tthis._register(this._cell.model.onDidChangeMetadata(() => this._updateSoon()));\n\t\tthis._register(this._cell.model.onDidChangeInternalMetadata(() => this._updateSoon()));\n\t\tthis._register(this._cell.model.onDidChangeOutputs(() => this._updateSoon()));\n\t}\n\n\tpublic update(): void {\n\t\tthis._updateSoon();\n\t}\n\tprivate _updateSoon(): void {\n\t\t// Wait a tick to make sure that the event is fired to the EH before triggering status bar providers\n\t\tthis._register(disposableTimeout(() => {\n\t\t\tthis._updateThrottler.queue(() => this._update());\n\t\t}, 0));\n\t}\n\n\tprivate async _update() {\n\t\tconst cellIndex = this._notebookViewModel.getCellIndex(this._cell);\n\t\tconst docUri = this._notebookViewModel.notebookDocument.uri;\n\t\tconst viewType = this._notebookViewModel.notebookDocument.viewType;\n\n\t\tthis._activeToken?.dispose(true);\n\t\tconst tokenSource = this._activeToken = new CancellationTokenSource();\n\t\tconst itemLists = await this._notebookCellStatusBarService.getStatusBarItemsForCell(docUri, cellIndex, viewType, tokenSource.token);\n\t\tif (tokenSource.token.isCancellationRequested) {\n\t\t\titemLists.forEach(itemList => itemList.dispose && itemList.dispose());\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = itemLists.map(itemList => itemList.items).flat();\n\t\tconst newIds = this._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [{ handle: this._cell.handle, items }]);\n\n\t\tthis._currentItemLists.forEach(itemList => itemList.dispose && itemList.dispose());\n\t\tthis._currentItemLists = itemLists;\n\t\tthis._currentItemIds = newIds;\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis._activeToken?.dispose(true);\n\n\t\tthis._notebookViewModel.deltaCellStatusBarItems(this._currentItemIds, [{ handle: this._cell.handle, items: [] }]);\n\t\tthis._currentItemLists.forEach(itemList => itemList.dispose && itemList.dispose());\n\t}\n}\n\nregisterNotebookContribution(ContributedStatusBarItemController.id, ContributedStatusBarItemController);\n"]}