{"version":3,"sources":["vs/workbench/contrib/notebook/browser/contrib/cellCommands/cellCommands.ts"],"names":[],"mappings":"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","file":"cellCommands.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyChord, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Mimes } from 'vs/base/common/mime';\nimport { IBulkEditService, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { localize } from 'vs/nls';\nimport { MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { InputFocusedContext, InputFocusedContextKey } from 'vs/platform/contextkey/common/contextkeys';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ResourceNotebookCellEdit } from 'vs/workbench/contrib/bulkEdit/browser/bulkCellEdits';\nimport { changeCellToKind, computeCellLinesContents, copyCellRange, joinCellsWithSurrounds, joinSelectedCells, moveCellRange } from 'vs/workbench/contrib/notebook/browser/controller/cellOperations';\nimport { cellExecutionArgs, CellOverflowToolbarGroups, CellToolbarOrder, CELL_TITLE_CELL_GROUP_ID, INotebookCellActionContext, INotebookCellToolbarActionContext, INotebookCommandContext, NotebookCellAction, NotebookMultiCellAction, parseMultiCellExecutionArgs } from 'vs/workbench/contrib/notebook/browser/controller/coreActions';\nimport { CellFocusMode, EXPAND_CELL_INPUT_COMMAND_ID, EXPAND_CELL_OUTPUT_COMMAND_ID, ICellOutputViewModel, ICellViewModel, INotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { NOTEBOOK_CELL_EDITABLE, NOTEBOOK_CELL_HAS_OUTPUTS, NOTEBOOK_CELL_INPUT_COLLAPSED, NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_OUTPUT_COLLAPSED, NOTEBOOK_CELL_TYPE, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_OUTPUT_FOCUSED } from 'vs/workbench/contrib/notebook/common/notebookContextKeys';\nimport * as icons from 'vs/workbench/contrib/notebook/browser/notebookIcons';\nimport { CellEditType, CellKind, NotebookSetting } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\n\n//#region Move/Copy cells\nconst MOVE_CELL_UP_COMMAND_ID = 'notebook.cell.moveUp';\nconst MOVE_CELL_DOWN_COMMAND_ID = 'notebook.cell.moveDown';\nconst COPY_CELL_UP_COMMAND_ID = 'notebook.cell.copyUp';\nconst COPY_CELL_DOWN_COMMAND_ID = 'notebook.cell.copyDown';\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: MOVE_CELL_UP_COMMAND_ID,\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: localize('notebookActions.moveCellUp', \"Move Cell Up\"),\n\t\t\t\t\toriginal: 'Move Cell Up'\n\t\t\t\t},\n\t\t\t\ticon: icons.moveUpIcon,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.UpArrow,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, InputFocusedContext.toNegated()),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.equals('config.notebook.dragAndDropEnabled', false),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t\t\torder: 14\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\treturn moveCellRange(context, 'up');\n\t}\n});\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: MOVE_CELL_DOWN_COMMAND_ID,\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: localize('notebookActions.moveCellDown', \"Move Cell Down\"),\n\t\t\t\t\toriginal: 'Move Cell Down'\n\t\t\t\t},\n\t\t\t\ticon: icons.moveDownIcon,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.DownArrow,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, InputFocusedContext.toNegated()),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.equals('config.notebook.dragAndDropEnabled', false),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t\t\torder: 14\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\treturn moveCellRange(context, 'down');\n\t}\n});\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: COPY_CELL_UP_COMMAND_ID,\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: localize('notebookActions.copyCellUp', \"Copy Cell Up\"),\n\t\t\t\t\toriginal: 'Copy Cell Up'\n\t\t\t\t},\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.UpArrow,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, InputFocusedContext.toNegated()),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\treturn copyCellRange(context, 'up');\n\t}\n});\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: COPY_CELL_DOWN_COMMAND_ID,\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: localize('notebookActions.copyCellDown', \"Copy Cell Down\"),\n\t\t\t\t\toriginal: 'Copy Cell Down'\n\t\t\t\t},\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.DownArrow,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, InputFocusedContext.toNegated()),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t\t\torder: 13\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\treturn copyCellRange(context, 'down');\n\t}\n});\n\n\n//#endregion\n\n//#region Join/Split\n\nconst SPLIT_CELL_COMMAND_ID = 'notebook.cell.split';\nconst JOIN_SELECTED_CELLS_COMMAND_ID = 'notebook.cell.joinSelected';\nconst JOIN_CELL_ABOVE_COMMAND_ID = 'notebook.cell.joinAbove';\nconst JOIN_CELL_BELOW_COMMAND_ID = 'notebook.cell.joinBelow';\n\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: SPLIT_CELL_COMMAND_ID,\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: localize('notebookActions.splitCell', \"Split Cell\"),\n\t\t\t\t\toriginal: 'Split Cell'\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\t\tNOTEBOOK_CELL_EDITABLE,\n\t\t\t\t\t\tNOTEBOOK_CELL_INPUT_COLLAPSED.toNegated()\n\t\t\t\t\t),\n\t\t\t\t\torder: CellToolbarOrder.SplitCell,\n\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID\n\t\t\t\t},\n\t\t\t\ticon: icons.splitCellIcon,\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE, EditorContextKeys.editorTextFocus),\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Backslash),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tif (context.notebookEditor.isReadOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\tconst cell = context.cell;\n\t\tconst index = context.notebookEditor.getCellIndex(cell);\n\t\tconst splitPoints = cell.focusMode === CellFocusMode.Container ? [{ lineNumber: 1, column: 1 }] : cell.getSelectionsStartPosition();\n\t\tif (splitPoints && splitPoints.length > 0) {\n\t\t\tawait cell.resolveTextModel();\n\n\t\t\tif (!cell.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newLinesContents = computeCellLinesContents(cell, splitPoints);\n\t\t\tif (newLinesContents) {\n\t\t\t\tconst language = cell.language;\n\t\t\t\tconst kind = cell.cellKind;\n\t\t\t\tconst mime = cell.mime;\n\n\t\t\t\tconst textModel = await cell.resolveTextModel();\n\t\t\t\tawait bulkEditService.apply(\n\t\t\t\t\t[\n\t\t\t\t\t\tnew ResourceTextEdit(cell.uri, { range: textModel.getFullModelRange(), text: newLinesContents[0] }),\n\t\t\t\t\t\tnew ResourceNotebookCellEdit(context.notebookEditor.textModel.uri,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\t\t\t\t\tindex: index + 1,\n\t\t\t\t\t\t\t\tcount: 0,\n\t\t\t\t\t\t\t\tcells: newLinesContents.slice(1).map(line => ({\n\t\t\t\t\t\t\t\t\tcellKind: kind,\n\t\t\t\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\t\t\t\tmime,\n\t\t\t\t\t\t\t\t\tsource: line,\n\t\t\t\t\t\t\t\t\toutputs: [],\n\t\t\t\t\t\t\t\t\tmetadata: {}\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t],\n\t\t\t\t\t{ quotableLabel: 'Split Notebook Cell' }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: JOIN_CELL_ABOVE_COMMAND_ID,\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: localize('notebookActions.joinCellAbove', \"Join With Previous Cell\"),\n\t\t\t\t\toriginal: 'Join With Previous Cell'\n\t\t\t\t},\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: NOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyMod.Alt | KeyMod.Shift | KeyCode.KeyJ,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t\t\torder: 10\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\treturn joinCellsWithSurrounds(bulkEditService, context, 'above');\n\t}\n});\n\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: JOIN_CELL_BELOW_COMMAND_ID,\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: localize('notebookActions.joinCellBelow', \"Join With Next Cell\"),\n\t\t\t\t\toriginal: 'Join With Next Cell'\n\t\t\t\t},\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: NOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.KeyJ,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t\t\torder: 11\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\treturn joinCellsWithSurrounds(bulkEditService, context, 'below');\n\t}\n});\n\nregisterAction2(class extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: JOIN_SELECTED_CELLS_COMMAND_ID,\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: localize('notebookActions.joinSelectedCells', \"Join Selected Cells\"),\n\t\t\t\t\toriginal: 'Join Selected Cells'\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE),\n\t\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t\t\torder: 12\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\treturn joinSelectedCells(bulkEditService, notificationService, context);\n\t}\n});\n\n//#endregion\n\n//#region Change Cell Type\n\nconst CHANGE_CELL_TO_CODE_COMMAND_ID = 'notebook.cell.changeToCode';\nconst CHANGE_CELL_TO_MARKDOWN_COMMAND_ID = 'notebook.cell.changeToMarkdown';\n\nregisterAction2(class ChangeCellToCodeAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CHANGE_CELL_TO_CODE_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('notebookActions.changeCellToCode', \"Change Cell to Code\"),\n\t\t\t\toriginal: 'Change Cell to Code'\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.not(InputFocusedContextKey), NOTEBOOK_OUTPUT_FOCUSED.toNegated()),\n\t\t\t\tprimary: KeyCode.KeyY,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tprecondition: ContextKeyExpr.and(NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_CELL_TYPE.isEqualTo('markup')),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE, NOTEBOOK_CELL_TYPE.isEqualTo('markup')),\n\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tawait changeCellToKind(CellKind.Code, context);\n\t}\n});\n\nregisterAction2(class ChangeCellToMarkdownAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CHANGE_CELL_TO_MARKDOWN_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('notebookActions.changeCellToMarkdown', \"Change Cell to Markdown\"),\n\t\t\t\toriginal: 'Change Cell to Markdown'\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.not(InputFocusedContextKey), NOTEBOOK_OUTPUT_FOCUSED.toNegated()),\n\t\t\t\tprimary: KeyCode.KeyM,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tprecondition: ContextKeyExpr.and(NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_CELL_TYPE.isEqualTo('code')),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE, NOTEBOOK_CELL_TYPE.isEqualTo('code')),\n\t\t\t\tgroup: CellOverflowToolbarGroups.Edit,\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tawait changeCellToKind(CellKind.Markup, context, 'markdown', Mimes.markdown);\n\t}\n});\n\n//#endregion\n\n//#region Collapse Cell\n\nconst COLLAPSE_CELL_INPUT_COMMAND_ID = 'notebook.cell.collapseCellInput';\nconst COLLAPSE_CELL_OUTPUT_COMMAND_ID = 'notebook.cell.collapseCellOutput';\nconst COLLAPSE_ALL_CELL_INPUTS_COMMAND_ID = 'notebook.cell.collapseAllCellInputs';\nconst EXPAND_ALL_CELL_INPUTS_COMMAND_ID = 'notebook.cell.expandAllCellInputs';\nconst COLLAPSE_ALL_CELL_OUTPUTS_COMMAND_ID = 'notebook.cell.collapseAllCellOutputs';\nconst EXPAND_ALL_CELL_OUTPUTS_COMMAND_ID = 'notebook.cell.expandAllCellOutputs';\nconst TOGGLE_CELL_OUTPUTS_COMMAND_ID = 'notebook.cell.toggleOutputs';\nconst TOGGLE_CELL_OUTPUT_SCROLLING = 'notebook.cell.toggleOutputScrolling';\n\nregisterAction2(class CollapseCellInputAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: COLLAPSE_CELL_INPUT_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('notebookActions.collapseCellInput', \"Collapse Cell Input\"),\n\t\t\t\toriginal: 'Collapse Cell Input'\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_INPUT_COLLAPSED.toNegated(), InputFocusedContext.toNegated()),\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyC),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\toverride parseArgs(accessor: ServicesAccessor, ...args: any[]): INotebookCommandContext | undefined {\n\t\treturn parseMultiCellExecutionArgs(accessor, ...args);\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tif (context.ui) {\n\t\t\tcontext.cell.isInputCollapsed = true;\n\t\t} else {\n\t\t\tcontext.selectedCells.forEach(cell => cell.isInputCollapsed = true);\n\t\t}\n\t}\n});\n\nregisterAction2(class ExpandCellInputAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EXPAND_CELL_INPUT_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('notebookActions.expandCellInput', \"Expand Cell Input\"),\n\t\t\t\toriginal: 'Expand Cell Input'\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_INPUT_COLLAPSED),\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyC),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\toverride parseArgs(accessor: ServicesAccessor, ...args: any[]): INotebookCommandContext | undefined {\n\t\treturn parseMultiCellExecutionArgs(accessor, ...args);\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tif (context.ui) {\n\t\t\tcontext.cell.isInputCollapsed = false;\n\t\t} else {\n\t\t\tcontext.selectedCells.forEach(cell => cell.isInputCollapsed = false);\n\t\t}\n\t}\n});\n\nregisterAction2(class CollapseCellOutputAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: COLLAPSE_CELL_OUTPUT_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('notebookActions.collapseCellOutput', \"Collapse Cell Output\"),\n\t\t\t\toriginal: 'Collapse Cell Output'\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_OUTPUT_COLLAPSED.toNegated(), InputFocusedContext.toNegated(), NOTEBOOK_CELL_HAS_OUTPUTS),\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyT),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tif (context.ui) {\n\t\t\tcontext.cell.isOutputCollapsed = true;\n\t\t} else {\n\t\t\tcontext.selectedCells.forEach(cell => cell.isOutputCollapsed = true);\n\t\t}\n\t}\n});\n\nregisterAction2(class ExpandCellOuputAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EXPAND_CELL_OUTPUT_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('notebookActions.expandCellOutput', \"Expand Cell Output\"),\n\t\t\t\toriginal: 'Expand Cell Output'\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_OUTPUT_COLLAPSED),\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyT),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tif (context.ui) {\n\t\t\tcontext.cell.isOutputCollapsed = false;\n\t\t} else {\n\t\t\tcontext.selectedCells.forEach(cell => cell.isOutputCollapsed = false);\n\t\t}\n\t}\n});\n\nregisterAction2(class extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TOGGLE_CELL_OUTPUTS_COMMAND_ID,\n\t\t\tprecondition: NOTEBOOK_CELL_LIST_FOCUSED,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('notebookActions.toggleOutputs', \"Toggle Outputs\"),\n\t\t\t\toriginal: 'Toggle Outputs'\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\tdescription: localize('notebookActions.toggleOutputs', \"Toggle Outputs\"),\n\t\t\t\targs: cellExecutionArgs\n\t\t\t}\n\t\t});\n\t}\n\n\toverride parseArgs(accessor: ServicesAccessor, ...args: any[]): INotebookCommandContext | undefined {\n\t\treturn parseMultiCellExecutionArgs(accessor, ...args);\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tlet cells: readonly ICellViewModel[] = [];\n\t\tif (context.ui) {\n\t\t\tcells = [context.cell];\n\t\t} else if (context.selectedCells) {\n\t\t\tcells = context.selectedCells;\n\t\t}\n\n\t\tfor (const cell of cells) {\n\t\t\tcell.isOutputCollapsed = !cell.isOutputCollapsed;\n\t\t}\n\t}\n});\n\nregisterAction2(class CollapseAllCellInputsAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: COLLAPSE_ALL_CELL_INPUTS_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('notebookActions.collapseAllCellInput', \"Collapse All Cell Inputs\"),\n\t\t\t\toriginal: 'Collapse All Cell Inputs'\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tforEachCell(context.notebookEditor, cell => cell.isInputCollapsed = true);\n\t}\n});\n\nregisterAction2(class ExpandAllCellInputsAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EXPAND_ALL_CELL_INPUTS_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('notebookActions.expandAllCellInput', \"Expand All Cell Inputs\"),\n\t\t\t\toriginal: 'Expand All Cell Inputs'\n\t\t\t},\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tforEachCell(context.notebookEditor, cell => cell.isInputCollapsed = false);\n\t}\n});\n\nregisterAction2(class CollapseAllCellOutputsAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: COLLAPSE_ALL_CELL_OUTPUTS_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('notebookActions.collapseAllCellOutput', \"Collapse All Cell Outputs\"),\n\t\t\t\toriginal: 'Collapse All Cell Outputs'\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tforEachCell(context.notebookEditor, cell => cell.isOutputCollapsed = true);\n\t}\n});\n\nregisterAction2(class ExpandAllCellOutputsAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EXPAND_ALL_CELL_OUTPUTS_COMMAND_ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('notebookActions.expandAllCellOutput', \"Expand All Cell Outputs\"),\n\t\t\t\toriginal: 'Expand All Cell Outputs'\n\t\t\t},\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tforEachCell(context.notebookEditor, cell => cell.isOutputCollapsed = false);\n\t}\n});\n\nregisterAction2(class ToggleCellOutputScrolling extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TOGGLE_CELL_OUTPUT_SCROLLING,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('notebookActions.toggleScrolling', \"Toggle Scroll Cell Output\"),\n\t\t\t\toriginal: 'Toggle Scroll Cell Output'\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_LIST_FOCUSED, InputFocusedContext.toNegated(), NOTEBOOK_CELL_HAS_OUTPUTS),\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyY),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toggleOutputScrolling(viewModel: ICellOutputViewModel, globalScrollSetting: boolean, collapsed: boolean) {\n\t\tconst cellMetadata = viewModel.model.metadata;\n\t\t// TODO: when is cellMetadata undefined? Is that a case we need to support? It is currently a read-only property.\n\t\tif (cellMetadata) {\n\t\t\tconst currentlyEnabled = cellMetadata['scrollable'] !== undefined ? cellMetadata['scrollable'] : globalScrollSetting;\n\t\t\tconst shouldEnableScrolling = collapsed || !currentlyEnabled;\n\t\t\tcellMetadata['scrollable'] = shouldEnableScrolling;\n\t\t\tviewModel.resetRenderer();\n\t\t}\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tconst globalScrolling = accessor.get(IConfigurationService).getValue<boolean>(NotebookSetting.outputScrolling);\n\t\tif (context.ui) {\n\t\t\tcontext.cell.outputsViewModels.forEach((viewModel) => {\n\t\t\t\tthis.toggleOutputScrolling(viewModel, globalScrolling, context.cell.isOutputCollapsed);\n\t\t\t});\n\t\t\tcontext.cell.isOutputCollapsed = false;\n\t\t} else {\n\t\t\tcontext.selectedCells.forEach(cell => {\n\t\t\t\tcell.outputsViewModels.forEach((viewModel) => {\n\t\t\t\t\tthis.toggleOutputScrolling(viewModel, globalScrolling, cell.isOutputCollapsed);\n\t\t\t\t});\n\t\t\t\tcell.isOutputCollapsed = false;\n\t\t\t});\n\t\t}\n\t}\n});\n\n//#endregion\n\nfunction forEachCell(editor: INotebookEditor, callback: (cell: ICellViewModel, index: number) => void) {\n\tfor (let i = 0; i < editor.getLength(); i++) {\n\t\tconst cell = editor.cellAt(i);\n\t\tcallback(cell!, i);\n\t}\n}\n"]}