{"version":3,"sources":["vs/workbench/contrib/notebook/browser/contrib/saveParticipants/saveParticipants.ts"],"names":[],"mappings":"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","file":"saveParticipants.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { isEqual } from 'vs/base/common/resources';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IBulkEditService, ResourceEdit, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { trimTrailingWhitespace } from 'vs/editor/common/commands/trimTrailingWhitespaceCommand';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { CodeActionProvider, CodeActionTriggerType, IWorkspaceTextEdit } from 'vs/editor/common/languages';\nimport { IReadonlyTextBuffer, ITextModel } from 'vs/editor/common/model';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorker';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { ApplyCodeActionReason, applyCodeAction, getCodeActions } from 'vs/editor/contrib/codeAction/browser/codeAction';\nimport { CodeActionKind, CodeActionTriggerSource } from 'vs/editor/contrib/codeAction/common/types';\nimport { getDocumentFormattingEditsUntilResult } from 'vs/editor/contrib/format/browser/format';\nimport { SnippetController2 } from 'vs/editor/contrib/snippet/browser/snippetController2';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProgress, IProgressStep } from 'vs/platform/progress/common/progress';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions as WorkbenchContributionsExtensions } from 'vs/workbench/common/contributions';\nimport { SaveReason } from 'vs/workbench/common/editor';\nimport { getNotebookEditorFromEditorPane } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellKind, NotebookSetting } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { NotebookFileWorkingCopyModel } from 'vs/workbench/contrib/notebook/common/notebookEditorModel';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IStoredFileWorkingCopy, IStoredFileWorkingCopyModel } from 'vs/workbench/services/workingCopy/common/storedFileWorkingCopy';\nimport { IStoredFileWorkingCopySaveParticipant, IWorkingCopyFileService } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';\n\nclass FormatOnSaveParticipant implements IStoredFileWorkingCopySaveParticipant {\n\tconstructor(\n\t\t@IEditorWorkerService private readonly editorWorkerService: IEditorWorkerService,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IBulkEditService private readonly bulkEditService: IBulkEditService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t}\n\n\tasync participate(workingCopy: IStoredFileWorkingCopy<IStoredFileWorkingCopyModel>, context: { reason: SaveReason }, progress: IProgress<IProgressStep>, token: CancellationToken): Promise<void> {\n\t\tif (!workingCopy.model || !(workingCopy.model instanceof NotebookFileWorkingCopyModel)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (context.reason === SaveReason.AUTO) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst enabled = this.configurationService.getValue<boolean>(NotebookSetting.formatOnSave);\n\t\tif (!enabled) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst notebook = workingCopy.model.notebookModel;\n\n\t\tprogress.report({ message: localize('notebookFormatSave.formatting', \"Formatting\") });\n\t\tconst disposable = new DisposableStore();\n\t\ttry {\n\t\t\tconst allCellEdits = await Promise.all(notebook.cells.map(async cell => {\n\t\t\t\tconst ref = await this.textModelService.createModelReference(cell.uri);\n\t\t\t\tdisposable.add(ref);\n\n\t\t\t\tconst model = ref.object.textEditorModel;\n\n\t\t\t\tconst formatEdits = await getDocumentFormattingEditsUntilResult(\n\t\t\t\t\tthis.editorWorkerService,\n\t\t\t\t\tthis.languageFeaturesService,\n\t\t\t\t\tmodel,\n\t\t\t\t\tmodel.getOptions(),\n\t\t\t\t\ttoken\n\t\t\t\t);\n\n\t\t\t\tconst edits: ResourceTextEdit[] = [];\n\n\t\t\t\tif (formatEdits) {\n\t\t\t\t\tedits.push(...formatEdits.map(edit => new ResourceTextEdit(model.uri, edit, model.getVersionId())));\n\t\t\t\t\treturn edits;\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}));\n\n\t\t\tawait this.bulkEditService.apply(/* edit */allCellEdits.flat(), { label: localize('formatNotebook', \"Format Notebook\"), code: 'undoredo.formatNotebook', });\n\n\t\t} finally {\n\t\t\tprogress.report({ increment: 100 });\n\t\t\tdisposable.dispose();\n\t\t}\n\t}\n}\n\nclass TrimWhitespaceParticipant implements IStoredFileWorkingCopySaveParticipant {\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IBulkEditService private readonly bulkEditService: IBulkEditService,\n\t) { }\n\n\tasync participate(workingCopy: IStoredFileWorkingCopy<IStoredFileWorkingCopyModel>, context: { reason: SaveReason }, progress: IProgress<IProgressStep>, _token: CancellationToken): Promise<void> {\n\t\tif (this.configurationService.getValue<boolean>('files.trimTrailingWhitespace')) {\n\t\t\tawait this.doTrimTrailingWhitespace(workingCopy, context.reason === SaveReason.AUTO, progress);\n\t\t}\n\t}\n\n\tprivate async doTrimTrailingWhitespace(workingCopy: IStoredFileWorkingCopy<IStoredFileWorkingCopyModel>, isAutoSaved: boolean, progress: IProgress<IProgressStep>) {\n\t\tif (!workingCopy.model || !(workingCopy.model instanceof NotebookFileWorkingCopyModel)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposable = new DisposableStore();\n\t\tconst notebook = workingCopy.model.notebookModel;\n\t\tconst activeCellEditor = getActiveCellCodeEditor(this.editorService);\n\n\t\tlet cursors: Position[] = [];\n\t\tlet prevSelection: Selection[] = [];\n\t\ttry {\n\t\t\tconst allCellEdits = await Promise.all(notebook.cells.map(async (cell) => {\n\t\t\t\tif (cell.cellKind !== CellKind.Code) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst ref = await this.textModelService.createModelReference(cell.uri);\n\t\t\t\tdisposable.add(ref);\n\t\t\t\tconst model = ref.object.textEditorModel;\n\n\t\t\t\tconst isActiveCell = (activeCellEditor && cell.uri.toString() === activeCellEditor.getModel()?.uri.toString());\n\t\t\t\tif (isActiveCell) {\n\t\t\t\t\tprevSelection = activeCellEditor.getSelections() ?? [];\n\t\t\t\t\tif (isAutoSaved) {\n\t\t\t\t\t\tcursors = prevSelection.map(s => s.getPosition()); // get initial cursor positions\n\t\t\t\t\t\tconst snippetsRange = SnippetController2.get(activeCellEditor)?.getSessionEnclosingRange();\n\t\t\t\t\t\tif (snippetsRange) {\n\t\t\t\t\t\t\tfor (let lineNumber = snippetsRange.startLineNumber; lineNumber <= snippetsRange.endLineNumber; lineNumber++) {\n\t\t\t\t\t\t\t\tcursors.push(new Position(lineNumber, model.getLineMaxColumn(lineNumber)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst ops = trimTrailingWhitespace(model, cursors);\n\t\t\t\tif (!ops.length) {\n\t\t\t\t\treturn []; // Nothing to do\n\t\t\t\t}\n\n\t\t\t\treturn ops.map(op => new ResourceTextEdit(model.uri, { ...op, text: op.text || '' }, model.getVersionId()));\n\t\t\t}));\n\n\t\t\tconst filteredEdits = allCellEdits.flat().filter(edit => edit !== undefined) as ResourceEdit[];\n\t\t\tawait this.bulkEditService.apply(filteredEdits, { label: localize('trimNotebookWhitespace', \"Notebook Trim Trailing Whitespace\"), code: 'undoredo.notebookTrimTrailingWhitespace' });\n\n\t\t} finally {\n\t\t\tprogress.report({ increment: 100 });\n\t\t\tdisposable.dispose();\n\t\t}\n\t}\n}\n\nclass TrimFinalNewLinesParticipant implements IStoredFileWorkingCopySaveParticipant {\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IBulkEditService private readonly bulkEditService: IBulkEditService,\n\t) { }\n\n\tasync participate(workingCopy: IStoredFileWorkingCopy<IStoredFileWorkingCopyModel>, context: { reason: SaveReason }, progress: IProgress<IProgressStep>, _token: CancellationToken): Promise<void> {\n\t\tif (this.configurationService.getValue<boolean>('files.trimTrailingWhitespace')) {\n\t\t\tthis.doTrimFinalNewLines(workingCopy, context.reason === SaveReason.AUTO, progress);\n\t\t}\n\t}\n\n\t/**\n\t * returns 0 if the entire file is empty\n\t */\n\tprivate findLastNonEmptyLine(textBuffer: IReadonlyTextBuffer): number {\n\t\tfor (let lineNumber = textBuffer.getLineCount(); lineNumber >= 1; lineNumber--) {\n\t\t\tconst lineLength = textBuffer.getLineLength(lineNumber);\n\t\t\tif (lineLength) {\n\t\t\t\t// this line has content\n\t\t\t\treturn lineNumber;\n\t\t\t}\n\t\t}\n\t\t// no line has content\n\t\treturn 0;\n\t}\n\n\tprivate async doTrimFinalNewLines(workingCopy: IStoredFileWorkingCopy<IStoredFileWorkingCopyModel>, isAutoSaved: boolean, progress: IProgress<IProgressStep>): Promise<void> {\n\t\tif (!workingCopy.model || !(workingCopy.model instanceof NotebookFileWorkingCopyModel)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposable = new DisposableStore();\n\t\tconst notebook = workingCopy.model.notebookModel;\n\t\tconst activeCellEditor = getActiveCellCodeEditor(this.editorService);\n\n\t\ttry {\n\t\t\tconst allCellEdits = await Promise.all(notebook.cells.map(async (cell) => {\n\t\t\t\tif (cell.cellKind !== CellKind.Code) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// autosave -- don't trim every trailing line, just up to the cursor line\n\t\t\t\tlet cannotTouchLineNumber = 0;\n\t\t\t\tconst isActiveCell = (activeCellEditor && cell.uri.toString() === activeCellEditor.getModel()?.uri.toString());\n\t\t\t\tif (isAutoSaved && isActiveCell) {\n\t\t\t\t\tconst selections = activeCellEditor.getSelections() ?? [];\n\t\t\t\t\tfor (const sel of selections) {\n\t\t\t\t\t\tcannotTouchLineNumber = Math.max(cannotTouchLineNumber, sel.selectionStartLineNumber);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst textBuffer = cell.textBuffer;\n\t\t\t\tconst lastNonEmptyLine = this.findLastNonEmptyLine(textBuffer);\n\t\t\t\tconst deleteFromLineNumber = Math.max(lastNonEmptyLine + 1, cannotTouchLineNumber + 1);\n\t\t\t\tconst deletionRange = new Range(deleteFromLineNumber, 1, textBuffer.getLineCount(), textBuffer.getLineLastNonWhitespaceColumn(textBuffer.getLineCount()));\n\n\t\t\t\tif (deletionRange.isEmpty()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// create the edit to delete all lines in deletionRange\n\t\t\t\treturn new ResourceTextEdit(cell.uri, { range: deletionRange, text: '' }, cell.textModel?.getVersionId());\n\t\t\t}));\n\n\t\t\tconst filteredEdits = allCellEdits.flat().filter(edit => edit !== undefined) as ResourceEdit[];\n\t\t\tawait this.bulkEditService.apply(filteredEdits, { label: localize('trimNotebookNewlines', \"Trim Final New Lines\"), code: 'undoredo.trimFinalNewLines' });\n\n\t\t} finally {\n\t\t\tprogress.report({ increment: 100 });\n\t\t\tdisposable.dispose();\n\t\t}\n\t}\n}\n\nclass FinalNewLineParticipant implements IStoredFileWorkingCopySaveParticipant {\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IBulkEditService private readonly bulkEditService: IBulkEditService,\n\t) { }\n\n\tasync participate(workingCopy: IStoredFileWorkingCopy<IStoredFileWorkingCopyModel>, context: { reason: SaveReason }, progress: IProgress<IProgressStep>, _token: CancellationToken): Promise<void> {\n\t\tif (this.configurationService.getValue('files.insertFinalNewline')) {\n\t\t\tthis.doInsertFinalNewLine(workingCopy, context, progress);\n\t\t}\n\t}\n\n\tprivate async doInsertFinalNewLine(workingCopy: IStoredFileWorkingCopy<IStoredFileWorkingCopyModel>, context: { reason: SaveReason }, progress: IProgress<IProgressStep>): Promise<void> {\n\t\tif (!workingCopy.model || !(workingCopy.model instanceof NotebookFileWorkingCopyModel)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposable = new DisposableStore();\n\t\tconst notebook = workingCopy.model.notebookModel;\n\n\t\ttry {\n\t\t\tconst allCellEdits = await Promise.all(notebook.cells.map(async (cell) => {\n\t\t\t\tif (cell.cellKind !== CellKind.Code) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst lineCount = cell.textBuffer.getLineCount();\n\t\t\t\tconst lastLineIsEmptyOrWhitespace = cell.textBuffer.getLineFirstNonWhitespaceColumn(lineCount) === 0;\n\n\t\t\t\tif (!lineCount || lastLineIsEmptyOrWhitespace) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn new ResourceTextEdit(cell.uri, { range: new Range(lineCount + 1, cell.textBuffer.getLineLength(lineCount), lineCount + 1, cell.textBuffer.getLineLength(lineCount)), text: cell.textBuffer.getEOL() }, cell.textModel?.getVersionId());\n\t\t\t}));\n\n\t\t\tconst filteredEdits = allCellEdits.filter(edit => edit !== undefined) as ResourceEdit[];\n\t\t\tawait this.bulkEditService.apply(filteredEdits, { label: localize('insertFinalNewLine', \"Insert Final New Line\"), code: 'undoredo.insertFinalNewLine' });\n\n\t\t} finally {\n\t\t\tprogress.report({ increment: 100 });\n\t\t\tdisposable.dispose();\n\t\t}\n\t}\n}\n\nclass CodeActionOnSaveParticipant implements IStoredFileWorkingCopySaveParticipant {\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t}\n\n\tasync participate(workingCopy: IStoredFileWorkingCopy<IStoredFileWorkingCopyModel>, context: { reason: SaveReason }, progress: IProgress<IProgressStep>, token: CancellationToken): Promise<void> {\n\t\tconst nbDisposable = new DisposableStore();\n\t\tconst isTrusted = this.workspaceTrustManagementService.isWorkspaceTrusted();\n\t\tif (!isTrusted) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!workingCopy.model || !(workingCopy.model instanceof NotebookFileWorkingCopyModel)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet saveTrigger = '';\n\t\tif (context.reason === SaveReason.AUTO) {\n\t\t\t// currently this won't happen, as vs/editor/contrib/codeAction/browser/codeAction.ts L#104 filters out codeactions on autosave. Just future-proofing\n\t\t\t// ? notebook CodeActions on autosave seems dangerous (perf-wise)\n\t\t\tsaveTrigger = 'always';\n\t\t} else if (context.reason === SaveReason.EXPLICIT) {\n\t\t\tsaveTrigger = 'explicit';\n\t\t} else {\n\t\t\t// \tSaveReason.FOCUS_CHANGE, WINDOW_CHANGE need to be addressed when autosaves are enabled\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst notebookModel = workingCopy.model.notebookModel;\n\n\t\tconst setting = this.configurationService.getValue<{ [kind: string]: string }>(NotebookSetting.codeActionsOnSave);\n\t\tif (!setting) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst settingItems: string[] = Array.isArray(setting)\n\t\t\t? setting\n\t\t\t: Object.keys(setting).filter(x => setting[x]);\n\t\tif (!settingItems.length) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst allCodeActions = this.createCodeActionsOnSave(settingItems);\n\t\tconst excludedActions = allCodeActions\n\t\t\t.filter(x => setting[x.value] === 'never');\n\t\tconst includedActions = allCodeActions\n\t\t\t.filter(x => setting[x.value] === saveTrigger);\n\n\t\tconst editorCodeActionsOnSave = includedActions.filter(x => !CodeActionKind.Notebook.contains(x));\n\t\tconst notebookCodeActionsOnSave = includedActions.filter(x => CodeActionKind.Notebook.contains(x));\n\t\tif (!editorCodeActionsOnSave.length && !notebookCodeActionsOnSave.length) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// prioritize `source.fixAll` code actions\n\t\tif (!Array.isArray(setting)) {\n\t\t\teditorCodeActionsOnSave.sort((a, b) => {\n\t\t\t\tif (CodeActionKind.SourceFixAll.contains(a)) {\n\t\t\t\t\tif (CodeActionKind.SourceFixAll.contains(b)) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (CodeActionKind.SourceFixAll.contains(b)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\n\t\t// run notebook code actions\n\t\tprogress.report({ message: localize('notebookSaveParticipants.notebookCodeActions', \"Running 'Notebook' code actions\") });\n\t\ttry {\n\t\t\tconst cell = notebookModel.cells[0];\n\t\t\tconst ref = await this.textModelService.createModelReference(cell.uri);\n\t\t\tnbDisposable.add(ref);\n\n\t\t\tconst textEditorModel = ref.object.textEditorModel;\n\n\t\t\tawait this.applyOnSaveActions(textEditorModel, notebookCodeActionsOnSave, excludedActions, progress, token);\n\t\t} catch {\n\t\t\tthis.logService.error('Failed to apply notebook code action on save');\n\t\t} finally {\n\t\t\tprogress.report({ increment: 100 });\n\t\t\tnbDisposable.dispose();\n\t\t}\n\n\t\t// run cell level code actions\n\t\tconst disposable = new DisposableStore();\n\t\tprogress.report({ message: localize('notebookSaveParticipants.cellCodeActions', \"Running 'Cell' code actions\") });\n\t\ttry {\n\t\t\tawait Promise.all(notebookModel.cells.map(async cell => {\n\t\t\t\tconst ref = await this.textModelService.createModelReference(cell.uri);\n\t\t\t\tdisposable.add(ref);\n\n\t\t\t\tconst textEditorModel = ref.object.textEditorModel;\n\n\t\t\t\tawait this.applyOnSaveActions(textEditorModel, editorCodeActionsOnSave, excludedActions, progress, token);\n\t\t\t}));\n\t\t} catch {\n\t\t\tthis.logService.error('Failed to apply code action on save');\n\t\t} finally {\n\t\t\tprogress.report({ increment: 100 });\n\t\t\tdisposable.dispose();\n\t\t}\n\t}\n\n\tprivate createCodeActionsOnSave(settingItems: readonly string[]): CodeActionKind[] {\n\t\tconst kinds = settingItems.map(x => new CodeActionKind(x));\n\n\t\t// Remove subsets\n\t\treturn kinds.filter(kind => {\n\t\t\treturn kinds.every(otherKind => otherKind.equals(kind) || !otherKind.contains(kind));\n\t\t});\n\t}\n\n\tprivate async applyOnSaveActions(model: ITextModel, codeActionsOnSave: readonly CodeActionKind[], excludes: readonly CodeActionKind[], progress: IProgress<IProgressStep>, token: CancellationToken): Promise<void> {\n\n\t\tconst getActionProgress = new class implements IProgress<CodeActionProvider> {\n\t\t\tprivate _names = new Set<string>();\n\t\t\tprivate _report(): void {\n\t\t\t\tprogress.report({\n\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t{ key: 'codeaction.get2', comment: ['[configure]({1}) is a link. Only translate `configure`. Do not change brackets and parentheses or {1}'] },\n\t\t\t\t\t\t\"Getting code actions from '{0}' ([configure]({1})).\",\n\t\t\t\t\t\t[...this._names].map(name => `'${name}'`).join(', '),\n\t\t\t\t\t\t'command:workbench.action.openSettings?%5B%22editor.codeActionsOnSave%22%5D'\n\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t}\n\t\t\treport(provider: CodeActionProvider) {\n\t\t\t\tif (provider.displayName && !this._names.has(provider.displayName)) {\n\t\t\t\t\tthis._names.add(provider.displayName);\n\t\t\t\t\tthis._report();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfor (const codeActionKind of codeActionsOnSave) {\n\t\t\tconst actionsToRun = await this.getActionsToRun(model, codeActionKind, excludes, getActionProgress, token);\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\tactionsToRun.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tfor (const action of actionsToRun.validActions) {\n\t\t\t\t\tconst codeActionEdits = action.action.edit?.edits;\n\t\t\t\t\tlet breakFlag = false;\n\t\t\t\t\tif (!action.action.kind?.startsWith('notebook')) {\n\t\t\t\t\t\tfor (const edit of codeActionEdits ?? []) {\n\t\t\t\t\t\t\tconst workspaceTextEdit = edit as IWorkspaceTextEdit;\n\t\t\t\t\t\t\tif (workspaceTextEdit.resource && isEqual(workspaceTextEdit.resource, model.uri)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// error -> applied to multiple resources\n\t\t\t\t\t\t\t\tbreakFlag = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (breakFlag) {\n\t\t\t\t\t\tthis.logService.warn('Failed to apply code action on save, applied to multiple resources.');\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tprogress.report({ message: localize('codeAction.apply', \"Applying code action '{0}'.\", action.action.title) });\n\t\t\t\t\tawait this.instantiationService.invokeFunction(applyCodeAction, action, ApplyCodeActionReason.OnSave, {}, token);\n\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// Failure to apply a code action should not block other on save actions\n\t\t\t} finally {\n\t\t\t\tactionsToRun.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getActionsToRun(model: ITextModel, codeActionKind: CodeActionKind, excludes: readonly CodeActionKind[], progress: IProgress<CodeActionProvider>, token: CancellationToken) {\n\t\treturn getCodeActions(this.languageFeaturesService.codeActionProvider, model, model.getFullModelRange(), {\n\t\t\ttype: CodeActionTriggerType.Invoke,\n\t\t\ttriggerAction: CodeActionTriggerSource.OnSave,\n\t\t\tfilter: { include: codeActionKind, excludes: excludes, includeSourceActions: true },\n\t\t}, progress, token);\n\t}\n}\n\nfunction getActiveCellCodeEditor(editorService: IEditorService): ICodeEditor | undefined {\n\tconst activePane = editorService.activeEditorPane;\n\tconst notebookEditor = getNotebookEditorFromEditorPane(activePane);\n\tconst activeCodeEditor = notebookEditor?.activeCodeEditor;\n\treturn activeCodeEditor;\n}\n\nexport class SaveParticipantsContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkingCopyFileService private readonly workingCopyFileService: IWorkingCopyFileService) {\n\n\t\tsuper();\n\t\tthis.registerSaveParticipants();\n\t}\n\n\tprivate registerSaveParticipants(): void {\n\t\tthis._register(this.workingCopyFileService.addSaveParticipant(this.instantiationService.createInstance(TrimWhitespaceParticipant)));\n\t\tthis._register(this.workingCopyFileService.addSaveParticipant(this.instantiationService.createInstance(CodeActionOnSaveParticipant)));\n\t\tthis._register(this.workingCopyFileService.addSaveParticipant(this.instantiationService.createInstance(FormatOnSaveParticipant)));\n\t\tthis._register(this.workingCopyFileService.addSaveParticipant(this.instantiationService.createInstance(FinalNewLineParticipant)));\n\t\tthis._register(this.workingCopyFileService.addSaveParticipant(this.instantiationService.createInstance(TrimFinalNewLinesParticipant)));\n\t}\n}\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchContributionsExtensions.Workbench);\nworkbenchContributionsRegistry.registerWorkbenchContribution(SaveParticipantsContribution, LifecyclePhase.Restored);\n"]}