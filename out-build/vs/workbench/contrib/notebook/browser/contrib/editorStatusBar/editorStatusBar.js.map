{"version":3,"sources":["vs/workbench/contrib/notebook/browser/contrib/editorStatusBar/editorStatusBar.ts"],"names":[],"mappings":"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","file":"editorStatusBar.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport * as nls from 'vs/nls';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { CENTER_ACTIVE_CELL } from 'vs/workbench/contrib/notebook/browser/contrib/navigation/arrow';\nimport { SELECT_KERNEL_ID } from 'vs/workbench/contrib/notebook/browser/controller/coreActions';\nimport { getNotebookEditorFromEditorPane, INotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { NotebookCellsChangeType } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookKernel, INotebookKernelService } from 'vs/workbench/contrib/notebook/common/notebookKernelService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IStatusbarEntry, IStatusbarEntryAccessor, IStatusbarService, StatusbarAlignment } from 'vs/workbench/services/statusbar/browser/statusbar';\n\nclass ImplictKernelSelector implements IDisposable {\n\n\treadonly dispose: () => void;\n\n\tconstructor(\n\t\tnotebook: NotebookTextModel,\n\t\tsuggested: INotebookKernel,\n\t\t@INotebookKernelService notebookKernelService: INotebookKernelService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tconst disposables = new DisposableStore();\n\t\tthis.dispose = disposables.dispose.bind(disposables);\n\n\t\tconst selectKernel = () => {\n\t\t\tdisposables.clear();\n\t\t\tnotebookKernelService.selectKernelForNotebook(suggested, notebook);\n\t\t};\n\n\t\t// IMPLICITLY select a suggested kernel when the notebook has been changed\n\t\t// e.g change cell source, move cells, etc\n\t\tdisposables.add(notebook.onDidChangeContent(e => {\n\t\t\tfor (const event of e.rawEvents) {\n\t\t\t\tswitch (event.kind) {\n\t\t\t\t\tcase NotebookCellsChangeType.ChangeCellContent:\n\t\t\t\t\tcase NotebookCellsChangeType.ModelChange:\n\t\t\t\t\tcase NotebookCellsChangeType.Move:\n\t\t\t\t\tcase NotebookCellsChangeType.ChangeCellLanguage:\n\t\t\t\t\t\tlogService.trace('IMPLICIT kernel selection because of change event', event.kind);\n\t\t\t\t\t\tselectKernel();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\n\t\t// IMPLICITLY select a suggested kernel when users start to hover. This should\n\t\t// be a strong enough hint that the user wants to interact with the notebook. Maybe\n\t\t// add more triggers like goto-providers or completion-providers\n\t\tdisposables.add(languageFeaturesService.hoverProvider.register({ scheme: Schemas.vscodeNotebookCell, pattern: notebook.uri.path }, {\n\t\t\tprovideHover() {\n\t\t\t\tlogService.trace('IMPLICIT kernel selection because of hover');\n\t\t\t\tselectKernel();\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\t}\n}\n\nexport class KernelStatus extends Disposable implements IWorkbenchContribution {\n\n\tprivate readonly _editorDisposables = this._register(new DisposableStore());\n\tprivate readonly _kernelInfoElement = this._register(new DisposableStore());\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IStatusbarService private readonly _statusbarService: IStatusbarService,\n\t\t@INotebookKernelService private readonly _notebookKernelService: INotebookKernelService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(this._editorService.onDidActiveEditorChange(() => this._updateStatusbar()));\n\t}\n\n\tprivate _updateStatusbar() {\n\t\tthis._editorDisposables.clear();\n\n\t\tconst activeEditor = getNotebookEditorFromEditorPane(this._editorService.activeEditorPane);\n\t\tif (!activeEditor) {\n\t\t\t// not a notebook -> clean-up, done\n\t\t\tthis._kernelInfoElement.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst updateStatus = () => {\n\t\t\tif (activeEditor.notebookOptions.getLayoutConfiguration().globalToolbar) {\n\t\t\t\t// kernel info rendered in the notebook toolbar already\n\t\t\t\tthis._kernelInfoElement.clear();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst notebook = activeEditor.textModel;\n\t\t\tif (notebook) {\n\t\t\t\tthis._showKernelStatus(notebook);\n\t\t\t} else {\n\t\t\t\tthis._kernelInfoElement.clear();\n\t\t\t}\n\t\t};\n\n\t\tthis._editorDisposables.add(this._notebookKernelService.onDidAddKernel(updateStatus));\n\t\tthis._editorDisposables.add(this._notebookKernelService.onDidChangeSelectedNotebooks(updateStatus));\n\t\tthis._editorDisposables.add(this._notebookKernelService.onDidChangeNotebookAffinity(updateStatus));\n\t\tthis._editorDisposables.add(activeEditor.onDidChangeModel(updateStatus));\n\t\tthis._editorDisposables.add(activeEditor.notebookOptions.onDidChangeOptions(updateStatus));\n\t\tupdateStatus();\n\t}\n\n\tprivate _showKernelStatus(notebook: NotebookTextModel) {\n\n\t\tthis._kernelInfoElement.clear();\n\n\t\tconst { selected, suggestions, all } = this._notebookKernelService.getMatchingKernel(notebook);\n\t\tconst suggested = (suggestions.length === 1 ? suggestions[0] : undefined)\n\t\t\t?? (all.length === 1) ? all[0] : undefined;\n\t\tlet isSuggested = false;\n\n\t\tif (all.length === 0) {\n\t\t\t// no kernel -> no status\n\t\t\treturn;\n\n\t\t} else if (selected || suggested) {\n\t\t\t// selected or single kernel\n\t\t\tlet kernel = selected;\n\n\t\t\tif (!kernel) {\n\t\t\t\t// proceed with suggested kernel - show UI and install handler that selects the kernel\n\t\t\t\t// when non trivial interactions with the notebook happen.\n\t\t\t\tkernel = suggested!;\n\t\t\t\tisSuggested = true;\n\t\t\t\tthis._kernelInfoElement.add(this._instantiationService.createInstance(ImplictKernelSelector, notebook, kernel));\n\t\t\t}\n\t\t\tconst tooltip = kernel.description ?? kernel.detail ?? kernel.label;\n\t\t\tthis._kernelInfoElement.add(this._statusbarService.addEntry(\n\t\t\t\t{\n\t\t\t\t\tname: nls.localize('notebook.info', \"Notebook Kernel Info\"),\n\t\t\t\t\ttext: `$(notebook-kernel-select) ${kernel.label}`,\n\t\t\t\t\tariaLabel: kernel.label,\n\t\t\t\t\ttooltip: isSuggested ? nls.localize('tooltop', \"{0} (suggestion)\", tooltip) : tooltip,\n\t\t\t\t\tcommand: SELECT_KERNEL_ID,\n\t\t\t\t},\n\t\t\t\tSELECT_KERNEL_ID,\n\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t10\n\t\t\t));\n\n\t\t\tthis._kernelInfoElement.add(kernel.onDidChange(() => this._showKernelStatus(notebook)));\n\n\n\t\t} else {\n\t\t\t// multiple kernels -> show selection hint\n\t\t\tthis._kernelInfoElement.add(this._statusbarService.addEntry(\n\t\t\t\t{\n\t\t\t\t\tname: nls.localize('notebook.select', \"Notebook Kernel Selection\"),\n\t\t\t\t\ttext: nls.localize('kernel.select.label', \"Select Kernel\"),\n\t\t\t\t\tariaLabel: nls.localize('kernel.select.label', \"Select Kernel\"),\n\t\t\t\t\tcommand: SELECT_KERNEL_ID,\n\t\t\t\t\tkind: 'prominent'\n\t\t\t\t},\n\t\t\t\tSELECT_KERNEL_ID,\n\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t10\n\t\t\t));\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(KernelStatus, LifecyclePhase.Restored);\n\nexport class ActiveCellStatus extends Disposable implements IWorkbenchContribution {\n\n\tprivate readonly _itemDisposables = this._register(new DisposableStore());\n\tprivate readonly _accessor = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IStatusbarService private readonly _statusbarService: IStatusbarService,\n\t) {\n\t\tsuper();\n\t\tthis._register(this._editorService.onDidActiveEditorChange(() => this._update()));\n\t}\n\n\tprivate _update() {\n\t\tthis._itemDisposables.clear();\n\t\tconst activeEditor = getNotebookEditorFromEditorPane(this._editorService.activeEditorPane);\n\t\tif (activeEditor) {\n\t\t\tthis._itemDisposables.add(activeEditor.onDidChangeSelection(() => this._show(activeEditor)));\n\t\t\tthis._itemDisposables.add(activeEditor.onDidChangeActiveCell(() => this._show(activeEditor)));\n\t\t\tthis._show(activeEditor);\n\t\t} else {\n\t\t\tthis._accessor.clear();\n\t\t}\n\t}\n\n\tprivate _show(editor: INotebookEditor) {\n\t\tif (!editor.hasModel()) {\n\t\t\tthis._accessor.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst newText = this._getSelectionsText(editor);\n\t\tif (!newText) {\n\t\t\tthis._accessor.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tconst entry: IStatusbarEntry = {\n\t\t\tname: nls.localize('notebook.activeCellStatusName', \"Notebook Editor Selections\"),\n\t\t\ttext: newText,\n\t\t\tariaLabel: newText,\n\t\t\tcommand: CENTER_ACTIVE_CELL\n\t\t};\n\t\tif (!this._accessor.value) {\n\t\t\tthis._accessor.value = this._statusbarService.addEntry(\n\t\t\t\tentry,\n\t\t\t\t'notebook.activeCellStatus',\n\t\t\t\tStatusbarAlignment.RIGHT,\n\t\t\t\t100\n\t\t\t);\n\t\t} else {\n\t\t\tthis._accessor.value.update(entry);\n\t\t}\n\t}\n\n\tprivate _getSelectionsText(editor: INotebookEditor): string | undefined {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst activeCell = editor.getActiveCell();\n\t\tif (!activeCell) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst idxFocused = editor.getCellIndex(activeCell) + 1;\n\t\tconst numSelected = editor.getSelections().reduce((prev, range) => prev + (range.end - range.start), 0);\n\t\tconst totalCells = editor.getLength();\n\t\treturn numSelected > 1 ?\n\t\t\tnls.localize('notebook.multiActiveCellIndicator', \"Cell {0} ({1} selected)\", idxFocused, numSelected) :\n\t\t\tnls.localize('notebook.singleActiveCellIndicator', \"Cell {0} of {1}\", idxFocused, totalCells);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(ActiveCellStatus, LifecyclePhase.Restored);\n"]}