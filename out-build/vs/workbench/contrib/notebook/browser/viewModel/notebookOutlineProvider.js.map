{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/viewModel/notebookOutlineProvider.ts"],"names":[],"mappings":"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","file":"notebookOutlineProvider.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { DisposableStore, MutableDisposable, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IMarkerService } from 'vs/platform/markers/common/markers';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IActiveNotebookEditor, INotebookEditor, INotebookViewCellsUpdateEvent } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellKind } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookExecutionStateService, NotebookExecutionType } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\nimport { OutlineChangeEvent, OutlineConfigKeys, OutlineTarget } from 'vs/workbench/services/outline/browser/outline';\nimport { OutlineEntry } from './OutlineEntry';\nimport { IOutlineModelService } from 'vs/editor/contrib/documentSymbols/browser/outlineModel';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { NotebookOutlineEntryFactory } from 'vs/workbench/contrib/notebook/browser/viewModel/notebookOutlineEntryFactory';\n\nexport class NotebookCellOutlineProvider {\n\tprivate readonly _dispoables = new DisposableStore();\n\tprivate readonly _onDidChange = new Emitter<OutlineChangeEvent>();\n\n\treadonly onDidChange: Event<OutlineChangeEvent> = this._onDidChange.event;\n\n\tprivate _uri: URI | undefined;\n\tprivate _entries: OutlineEntry[] = [];\n\tget entries(): OutlineEntry[] {\n\t\treturn this._entries;\n\t}\n\n\tprivate _activeEntry?: OutlineEntry;\n\tprivate readonly _entriesDisposables = new DisposableStore();\n\n\treadonly outlineKind = 'notebookCells';\n\n\tget activeElement(): OutlineEntry | undefined {\n\t\treturn this._activeEntry;\n\t}\n\n\tprivate readonly _outlineEntryFactory: NotebookOutlineEntryFactory;\n\n\tconstructor(\n\t\tprivate readonly _editor: INotebookEditor,\n\t\tprivate readonly _target: OutlineTarget,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@INotebookExecutionStateService notebookExecutionStateService: INotebookExecutionStateService,\n\t\t@IOutlineModelService private readonly _outlineModelService: IOutlineModelService,\n\t\t@IMarkerService private readonly _markerService: IMarkerService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tthis._outlineEntryFactory = new NotebookOutlineEntryFactory(notebookExecutionStateService);\n\n\t\tconst selectionListener = new MutableDisposable();\n\t\tthis._dispoables.add(selectionListener);\n\n\t\tselectionListener.value = combinedDisposable(\n\t\t\tEvent.debounce<void, void>(\n\t\t\t\t_editor.onDidChangeSelection,\n\t\t\t\t(last, _current) => last,\n\t\t\t\t200\n\t\t\t)(this._recomputeActive, this),\n\t\t\tEvent.debounce<INotebookViewCellsUpdateEvent, INotebookViewCellsUpdateEvent>(\n\t\t\t\t_editor.onDidChangeViewCells,\n\t\t\t\t(last, _current) => last ?? _current,\n\t\t\t\t200\n\t\t\t)(this._recomputeState, this)\n\t\t);\n\n\t\tthis._dispoables.add(_configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('notebook.outline.showCodeCells')) {\n\t\t\t\tthis._recomputeState();\n\t\t\t}\n\t\t}));\n\n\t\tthis._dispoables.add(themeService.onDidFileIconThemeChange(() => {\n\t\t\tthis._onDidChange.fire({});\n\t\t}));\n\n\t\tthis._dispoables.add(notebookExecutionStateService.onDidChangeExecution(e => {\n\t\t\tif (e.type === NotebookExecutionType.cell && !!this._editor.textModel && e.affectsNotebook(this._editor.textModel?.uri)) {\n\t\t\t\tthis._recomputeState();\n\t\t\t}\n\t\t}));\n\n\t\tthis._recomputeState();\n\t}\n\n\tdispose(): void {\n\t\tthis._entries.length = 0;\n\t\tthis._activeEntry = undefined;\n\t\tthis._entriesDisposables.dispose();\n\t\tthis._dispoables.dispose();\n\t}\n\n\tinit(): void {\n\t\tthis._recomputeState();\n\t}\n\n\tasync setFullSymbols(cancelToken: CancellationToken) {\n\t\tconst notebookEditorWidget = this._editor;\n\n\t\tconst notebookCells = notebookEditorWidget?.getViewModel()?.viewCells.filter((cell) => cell.cellKind === CellKind.Code);\n\n\t\tthis._entries.length = 0;\n\t\tif (notebookCells) {\n\t\t\tconst promises: Promise<void>[] = [];\n\t\t\tfor (const cell of notebookCells) {\n\t\t\t\tif (cell.textModel) {\n\t\t\t\t\t// gather all symbols asynchronously\n\t\t\t\t\tpromises.push(this._outlineEntryFactory.cacheSymbols(cell.textModel, this._outlineModelService, cancelToken));\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait Promise.allSettled(promises);\n\t\t}\n\n\t\tthis._recomputeState();\n\t}\n\n\tprivate _recomputeState(): void {\n\t\tthis._entriesDisposables.clear();\n\t\tthis._activeEntry = undefined;\n\t\tthis._uri = undefined;\n\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._uri = this._editor.textModel.uri;\n\n\t\tconst notebookEditorWidget: IActiveNotebookEditor = this._editor;\n\n\t\tif (notebookEditorWidget.getLength() === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet includeCodeCells = true;\n\t\tif (this._target === OutlineTarget.OutlinePane) {\n\t\t\tincludeCodeCells = this._configurationService.getValue<boolean>('notebook.outline.showCodeCells');\n\t\t} else if (this._target === OutlineTarget.Breadcrumbs) {\n\t\t\tincludeCodeCells = this._configurationService.getValue<boolean>('notebook.breadcrumbs.showCodeCells');\n\t\t}\n\n\t\tconst notebookCells = notebookEditorWidget.getViewModel().viewCells.filter((cell) => cell.cellKind === CellKind.Markup || includeCodeCells);\n\n\t\tconst entries: OutlineEntry[] = [];\n\t\tfor (const cell of notebookCells) {\n\t\t\tentries.push(...this._outlineEntryFactory.getOutlineEntries(cell, entries.length));\n\t\t\t// send an event whenever any of the cells change\n\t\t\tthis._entriesDisposables.add(cell.model.onDidChangeContent(() => {\n\t\t\t\tthis._recomputeState();\n\t\t\t\tthis._onDidChange.fire({});\n\t\t\t}));\n\t\t}\n\n\t\t// build a tree from the list of entries\n\t\tif (entries.length > 0) {\n\t\t\tconst result: OutlineEntry[] = [entries[0]];\n\t\t\tconst parentStack: OutlineEntry[] = [entries[0]];\n\n\t\t\tfor (let i = 1; i < entries.length; i++) {\n\t\t\t\tconst entry = entries[i];\n\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst len = parentStack.length;\n\t\t\t\t\tif (len === 0) {\n\t\t\t\t\t\t// root node\n\t\t\t\t\t\tresult.push(entry);\n\t\t\t\t\t\tparentStack.push(entry);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst parentCandidate = parentStack[len - 1];\n\t\t\t\t\t\tif (parentCandidate.level < entry.level) {\n\t\t\t\t\t\t\tparentCandidate.addChild(entry);\n\t\t\t\t\t\t\tparentStack.push(entry);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparentStack.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._entries = result;\n\t\t}\n\n\t\t// feature: show markers with each cell\n\t\tconst markerServiceListener = new MutableDisposable();\n\t\tthis._entriesDisposables.add(markerServiceListener);\n\t\tconst updateMarkerUpdater = () => {\n\t\t\tif (notebookEditorWidget.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst doUpdateMarker = (clear: boolean) => {\n\t\t\t\tfor (const entry of this._entries) {\n\t\t\t\t\tif (clear) {\n\t\t\t\t\t\tentry.clearMarkers();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tentry.updateMarkers(this._markerService);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (this._configurationService.getValue(OutlineConfigKeys.problemsEnabled)) {\n\t\t\t\tmarkerServiceListener.value = this._markerService.onMarkerChanged(e => {\n\t\t\t\t\tif (notebookEditorWidget.isDisposed) {\n\t\t\t\t\t\tconsole.error('notebook editor is disposed');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (e.some(uri => notebookEditorWidget.getCellsInRange().some(cell => isEqual(cell.uri, uri)))) {\n\t\t\t\t\t\tdoUpdateMarker(false);\n\t\t\t\t\t\tthis._onDidChange.fire({});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tdoUpdateMarker(false);\n\t\t\t} else {\n\t\t\t\tmarkerServiceListener.clear();\n\t\t\t\tdoUpdateMarker(true);\n\t\t\t}\n\t\t};\n\t\tupdateMarkerUpdater();\n\t\tthis._entriesDisposables.add(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(OutlineConfigKeys.problemsEnabled)) {\n\t\t\t\tupdateMarkerUpdater();\n\t\t\t\tthis._onDidChange.fire({});\n\t\t\t}\n\t\t}));\n\n\t\tthis._recomputeActive();\n\t\tthis._onDidChange.fire({});\n\t}\n\n\tprivate _recomputeActive(): void {\n\t\tlet newActive: OutlineEntry | undefined;\n\t\tconst notebookEditorWidget = this._editor;\n\n\t\tif (notebookEditorWidget) {//TODO don't check for widget, only here if we do have\n\t\t\tif (notebookEditorWidget.hasModel() && notebookEditorWidget.getLength() > 0) {\n\t\t\t\tconst cell = notebookEditorWidget.cellAt(notebookEditorWidget.getFocus().start);\n\t\t\t\tif (cell) {\n\t\t\t\t\tfor (const entry of this._entries) {\n\t\t\t\t\t\tnewActive = entry.find(cell, []);\n\t\t\t\t\t\tif (newActive) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (newActive !== this._activeEntry) {\n\t\t\tthis._activeEntry = newActive;\n\t\t\tthis._onDidChange.fire({ affectOnlyActiveElement: true });\n\t\t}\n\t}\n\n\n\n\tget isEmpty(): boolean {\n\t\treturn this._entries.length === 0;\n\t}\n\n\tget uri() {\n\t\treturn this._uri;\n\t}\n}\n"]}