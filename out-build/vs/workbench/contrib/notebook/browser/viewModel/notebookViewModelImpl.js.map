{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/viewModel/notebookViewModelImpl.ts"],"names":[],"mappings":"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","file":"notebookViewModelImpl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { groupBy } from 'vs/base/common/collections';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { clamp } from 'vs/base/common/numbers';\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { IBulkEditService, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { Range } from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { FindMatch, IModelDecorationOptions, IModelDeltaDecoration, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { MultiModelEditStackElement, SingleModelEditStackElement } from 'vs/editor/common/model/editStack';\nimport { IntervalNode, IntervalTree } from 'vs/editor/common/model/intervalTree';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { IWorkspaceTextEdit } from 'vs/editor/common/languages';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { FoldingRegions } from 'vs/editor/contrib/folding/browser/foldingRanges';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IUndoRedoService } from 'vs/platform/undoRedo/common/undoRedo';\nimport { CellEditState, CellFindMatchWithIndex, CellFoldingState, EditorFoldingStateDelegate, ICellViewModel, INotebookDeltaCellStatusBarItems, INotebookDeltaDecoration, ICellModelDecorations, ICellModelDeltaDecorations, IModelDecorationsChangeAccessor, INotebookEditorViewState, INotebookViewCellsUpdateEvent, INotebookViewModel } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { NotebookCellSelectionCollection } from 'vs/workbench/contrib/notebook/browser/viewModel/cellSelectionCollection';\nimport { CodeCellViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel';\nimport { MarkupCellViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/markupCellViewModel';\nimport { ViewContext } from 'vs/workbench/contrib/notebook/browser/viewModel/viewContext';\nimport { NotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { CellKind, ICell, INotebookSearchOptions, ISelectionState, NotebookCellsChangeType, NotebookCellTextModelSplice, SelectionStateType } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { cellIndexesToRanges, cellRangesToIndexes, ICellRange, reduceCellRanges } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { NotebookLayoutInfo, NotebookMetadataChangedEvent } from 'vs/workbench/contrib/notebook/browser/notebookViewEvents';\nimport { CellFindMatchModel } from 'vs/workbench/contrib/notebook/browser/contrib/find/findModel';\nimport { INotebookExecutionStateService, NotebookExecutionType } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\n\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\n\nclass DecorationsTree {\n\tprivate readonly _decorationsTree: IntervalTree;\n\n\tconstructor() {\n\t\tthis._decorationsTree = new IntervalTree();\n\t}\n\n\tpublic intervalSearch(start: number, end: number, filterOwnerId: number, filterOutValidation: boolean, cachedVersionId: number, onlyMarginDecorations: boolean = false): IntervalNode[] {\n\t\tconst r1 = this._decorationsTree.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n\t\treturn r1;\n\t}\n\n\tpublic search(filterOwnerId: number, filterOutValidation: boolean, overviewRulerOnly: boolean, cachedVersionId: number, onlyMarginDecorations: boolean): IntervalNode[] {\n\t\treturn this._decorationsTree.search(filterOwnerId, filterOutValidation, cachedVersionId, onlyMarginDecorations);\n\n\t}\n\n\tpublic collectNodesFromOwner(ownerId: number): IntervalNode[] {\n\t\tconst r1 = this._decorationsTree.collectNodesFromOwner(ownerId);\n\t\treturn r1;\n\t}\n\n\tpublic collectNodesPostOrder(): IntervalNode[] {\n\t\tconst r1 = this._decorationsTree.collectNodesPostOrder();\n\t\treturn r1;\n\t}\n\n\tpublic insert(node: IntervalNode): void {\n\t\tthis._decorationsTree.insert(node);\n\t}\n\n\tpublic delete(node: IntervalNode): void {\n\t\tthis._decorationsTree.delete(node);\n\t}\n\n\tpublic resolveNode(node: IntervalNode, cachedVersionId: number): void {\n\t\tthis._decorationsTree.resolveNode(node, cachedVersionId);\n\t}\n\n\tpublic acceptReplace(offset: number, length: number, textLength: number, forceMoveMarkers: boolean): void {\n\t\tthis._decorationsTree.acceptReplace(offset, length, textLength, forceMoveMarkers);\n\t}\n}\n\nconst TRACKED_RANGE_OPTIONS = [\n\tModelDecorationOptions.register({ description: 'notebook-view-model-tracked-range-always-grows-when-typing-at-edges', stickiness: TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges }),\n\tModelDecorationOptions.register({ description: 'notebook-view-model-tracked-range-never-grows-when-typing-at-edges', stickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges }),\n\tModelDecorationOptions.register({ description: 'notebook-view-model-tracked-range-grows-only-when-typing-before', stickiness: TrackedRangeStickiness.GrowsOnlyWhenTypingBefore }),\n\tModelDecorationOptions.register({ description: 'notebook-view-model-tracked-range-grows-only-when-typing-after', stickiness: TrackedRangeStickiness.GrowsOnlyWhenTypingAfter }),\n];\n\nfunction _normalizeOptions(options: IModelDecorationOptions): ModelDecorationOptions {\n\tif (options instanceof ModelDecorationOptions) {\n\t\treturn options;\n\t}\n\treturn ModelDecorationOptions.createDynamic(options);\n}\n\nlet MODEL_ID = 0;\n\nexport interface NotebookViewModelOptions {\n\tisReadOnly: boolean;\n}\n\nexport class NotebookViewModel extends Disposable implements EditorFoldingStateDelegate, INotebookViewModel {\n\tprivate _localStore: DisposableStore = this._register(new DisposableStore());\n\tprivate _handleToViewCellMapping = new Map<number, CellViewModel>();\n\tget options(): NotebookViewModelOptions { return this._options; }\n\tprivate readonly _onDidChangeOptions = this._register(new Emitter<void>());\n\tget onDidChangeOptions(): Event<void> { return this._onDidChangeOptions.event; }\n\tprivate _viewCells: CellViewModel[] = [];\n\n\tget viewCells(): ICellViewModel[] {\n\t\treturn this._viewCells;\n\t}\n\n\tset viewCells(_: ICellViewModel[]) {\n\t\tthrow new Error('NotebookViewModel.viewCells is readonly');\n\t}\n\n\tget length(): number {\n\t\treturn this._viewCells.length;\n\t}\n\n\tget notebookDocument() {\n\t\treturn this._notebook;\n\t}\n\n\tget uri() {\n\t\treturn this._notebook.uri;\n\t}\n\n\tget metadata() {\n\t\treturn this._notebook.metadata;\n\t}\n\n\tprivate readonly _onDidChangeViewCells = this._register(new Emitter<INotebookViewCellsUpdateEvent>());\n\tget onDidChangeViewCells(): Event<INotebookViewCellsUpdateEvent> { return this._onDidChangeViewCells.event; }\n\n\tprivate _lastNotebookEditResource: URI[] = [];\n\n\tget lastNotebookEditResource(): URI | null {\n\t\tif (this._lastNotebookEditResource.length) {\n\t\t\treturn this._lastNotebookEditResource[this._lastNotebookEditResource.length - 1];\n\t\t}\n\t\treturn null;\n\t}\n\n\tget layoutInfo(): NotebookLayoutInfo | null {\n\t\treturn this._layoutInfo;\n\t}\n\n\tprivate readonly _onDidChangeSelection = this._register(new Emitter<string>());\n\tget onDidChangeSelection(): Event<string> { return this._onDidChangeSelection.event; }\n\n\tprivate _selectionCollection = this._register(new NotebookCellSelectionCollection());\n\n\tprivate get selectionHandles() {\n\t\tconst handlesSet = new Set<number>();\n\t\tconst handles: number[] = [];\n\t\tcellRangesToIndexes(this._selectionCollection.selections).map(index => index < this.length ? this.cellAt(index) : undefined).forEach(cell => {\n\t\t\tif (cell && !handlesSet.has(cell.handle)) {\n\t\t\t\thandles.push(cell.handle);\n\t\t\t}\n\t\t});\n\n\t\treturn handles;\n\t}\n\n\tprivate set selectionHandles(selectionHandles: number[]) {\n\t\tconst indexes = selectionHandles.map(handle => this._viewCells.findIndex(cell => cell.handle === handle));\n\t\tthis._selectionCollection.setSelections(cellIndexesToRanges(indexes), true, 'model');\n\t}\n\n\tprivate _decorationsTree = new DecorationsTree();\n\tprivate _decorations: { [decorationId: string]: IntervalNode } = Object.create(null);\n\tprivate _lastDecorationId: number = 0;\n\tprivate readonly _instanceId: string;\n\tpublic readonly id: string;\n\tprivate _foldingRanges: FoldingRegions | null = null;\n\tprivate _hiddenRanges: ICellRange[] = [];\n\tprivate _focused: boolean = true;\n\n\tget focused() {\n\t\treturn this._focused;\n\t}\n\n\tprivate _decorationIdToCellMap = new Map<string, number>();\n\tprivate _statusBarItemIdToCellMap = new Map<string, number>();\n\n\tconstructor(\n\t\tpublic viewType: string,\n\t\tprivate _notebook: NotebookTextModel,\n\t\tprivate _viewContext: ViewContext,\n\t\tprivate _layoutInfo: NotebookLayoutInfo | null,\n\t\tprivate _options: NotebookViewModelOptions,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IBulkEditService private readonly _bulkEditService: IBulkEditService,\n\t\t@IUndoRedoService private readonly _undoService: IUndoRedoService,\n\t\t@ITextModelService private readonly _textModelService: ITextModelService,\n\t\t@INotebookExecutionStateService notebookExecutionStateService: INotebookExecutionStateService,\n\t) {\n\t\tsuper();\n\n\t\tMODEL_ID++;\n\t\tthis.id = '$notebookViewModel' + MODEL_ID;\n\t\tthis._instanceId = strings.singleLetterHash(MODEL_ID);\n\n\t\tconst compute = (changes: NotebookCellTextModelSplice<ICell>[], synchronous: boolean) => {\n\t\t\tconst diffs = changes.map(splice => {\n\t\t\t\treturn [splice[0], splice[1], splice[2].map(cell => {\n\t\t\t\t\treturn createCellViewModel(this._instantiationService, this, cell as NotebookCellTextModel, this._viewContext);\n\t\t\t\t})] as [number, number, CellViewModel[]];\n\t\t\t});\n\n\t\t\tdiffs.reverse().forEach(diff => {\n\t\t\t\tconst deletedCells = this._viewCells.splice(diff[0], diff[1], ...diff[2]);\n\n\t\t\t\tthis._decorationsTree.acceptReplace(diff[0], diff[1], diff[2].length, true);\n\t\t\t\tdeletedCells.forEach(cell => {\n\t\t\t\t\tthis._handleToViewCellMapping.delete(cell.handle);\n\t\t\t\t\t// dispose the cell to release ref to the cell text document\n\t\t\t\t\tcell.dispose();\n\t\t\t\t});\n\n\t\t\t\tdiff[2].forEach(cell => {\n\t\t\t\t\tthis._handleToViewCellMapping.set(cell.handle, cell);\n\t\t\t\t\tthis._localStore.add(cell);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst selectionHandles = this.selectionHandles;\n\n\t\t\tthis._onDidChangeViewCells.fire({\n\t\t\t\tsynchronous: synchronous,\n\t\t\t\tsplices: diffs\n\t\t\t});\n\n\t\t\tlet endSelectionHandles: number[] = [];\n\t\t\tif (selectionHandles.length) {\n\t\t\t\tconst primaryHandle = selectionHandles[0];\n\t\t\t\tconst primarySelectionIndex = this._viewCells.indexOf(this.getCellByHandle(primaryHandle)!);\n\t\t\t\tendSelectionHandles = [primaryHandle];\n\t\t\t\tlet delta = 0;\n\n\t\t\t\tfor (let i = 0; i < diffs.length; i++) {\n\t\t\t\t\tconst diff = diffs[0];\n\t\t\t\t\tif (diff[0] + diff[1] <= primarySelectionIndex) {\n\t\t\t\t\t\tdelta += diff[2].length - diff[1];\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff[0] > primarySelectionIndex) {\n\t\t\t\t\t\tendSelectionHandles = [primaryHandle];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff[0] + diff[1] > primarySelectionIndex) {\n\t\t\t\t\t\tendSelectionHandles = [this._viewCells[diff[0] + delta].handle];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TODO@rebornix\n\t\t\tconst selectionIndexes = endSelectionHandles.map(handle => this._viewCells.findIndex(cell => cell.handle === handle));\n\t\t\tthis._selectionCollection.setState(cellIndexesToRanges([selectionIndexes[0]])[0], cellIndexesToRanges(selectionIndexes), true, 'model');\n\t\t};\n\n\t\tthis._register(this._notebook.onDidChangeContent(e => {\n\t\t\tfor (let i = 0; i < e.rawEvents.length; i++) {\n\t\t\t\tconst change = e.rawEvents[i];\n\t\t\t\tlet changes: NotebookCellTextModelSplice<ICell>[] = [];\n\t\t\t\tconst synchronous = e.synchronous ?? true;\n\n\t\t\t\tif (change.kind === NotebookCellsChangeType.ModelChange || change.kind === NotebookCellsChangeType.Initialize) {\n\t\t\t\t\tchanges = change.changes;\n\t\t\t\t\tcompute(changes, synchronous);\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (change.kind === NotebookCellsChangeType.Move) {\n\t\t\t\t\tcompute([[change.index, change.length, []]], synchronous);\n\t\t\t\t\tcompute([[change.newIdx, 0, change.cells]], synchronous);\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._notebook.onDidChangeContent(contentChanges => {\n\t\t\tcontentChanges.rawEvents.forEach(e => {\n\t\t\t\tif (e.kind === NotebookCellsChangeType.ChangeDocumentMetadata) {\n\t\t\t\t\tthis._viewContext.eventDispatcher.emit([new NotebookMetadataChangedEvent(this._notebook.metadata)]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (contentChanges.endSelectionState) {\n\t\t\t\tthis.updateSelectionsState(contentChanges.endSelectionState);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._viewContext.eventDispatcher.onDidChangeLayout((e) => {\n\t\t\tthis._layoutInfo = e.value;\n\n\t\t\tthis._viewCells.forEach(cell => {\n\t\t\t\tif (cell.cellKind === CellKind.Markup) {\n\t\t\t\t\tif (e.source.width || e.source.fontInfo) {\n\t\t\t\t\t\tcell.layoutChange({ outerWidth: e.value.width, font: e.value.fontInfo });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (e.source.width !== undefined) {\n\t\t\t\t\t\tcell.layoutChange({ outerWidth: e.value.width, font: e.value.fontInfo });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(this._viewContext.notebookOptions.onDidChangeOptions(e => {\n\t\t\tfor (let i = 0; i < this.length; i++) {\n\t\t\t\tconst cell = this._viewCells[i];\n\t\t\t\tcell.updateOptions(e);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(notebookExecutionStateService.onDidChangeExecution(e => {\n\t\t\tif (e.type !== NotebookExecutionType.cell) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst cell = this.getCellByHandle(e.cellHandle);\n\n\t\t\tif (cell instanceof CodeCellViewModel) {\n\t\t\t\tcell.updateExecutionState(e);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._selectionCollection.onDidChangeSelection(e => {\n\t\t\tthis._onDidChangeSelection.fire(e);\n\t\t}));\n\n\t\tthis._viewCells = this._notebook.cells.map(cell => {\n\t\t\treturn createCellViewModel(this._instantiationService, this, cell, this._viewContext);\n\t\t});\n\n\t\tthis._viewCells.forEach(cell => {\n\t\t\tthis._handleToViewCellMapping.set(cell.handle, cell);\n\t\t});\n\t}\n\n\tupdateOptions(newOptions: Partial<NotebookViewModelOptions>) {\n\t\tthis._options = { ...this._options, ...newOptions };\n\t\tthis._onDidChangeOptions.fire();\n\t}\n\n\tgetFocus() {\n\t\treturn this._selectionCollection.focus;\n\t}\n\n\tgetSelections() {\n\t\treturn this._selectionCollection.selections;\n\t}\n\n\tsetEditorFocus(focused: boolean) {\n\t\tthis._focused = focused;\n\t}\n\n\t/**\n\t * Empty selection will be turned to `null`\n\t */\n\tvalidateRange(cellRange: ICellRange | null | undefined): ICellRange | null {\n\t\tif (!cellRange) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst start = clamp(cellRange.start, 0, this.length);\n\t\tconst end = clamp(cellRange.end, 0, this.length);\n\n\t\tif (start === end) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (start < end) {\n\t\t\treturn { start, end };\n\t\t} else {\n\t\t\treturn { start: end, end: start };\n\t\t}\n\t}\n\n\t// selection change from list view's `setFocus` and `setSelection` should always use `source: view` to prevent events breaking the list view focus/selection change transaction\n\tupdateSelectionsState(state: ISelectionState, source: 'view' | 'model' = 'model') {\n\t\tif (this._focused || source === 'model') {\n\t\t\tif (state.kind === SelectionStateType.Handle) {\n\t\t\t\tconst primaryIndex = state.primary !== null ? this.getCellIndexByHandle(state.primary) : null;\n\t\t\t\tconst primarySelection = primaryIndex !== null ? this.validateRange({ start: primaryIndex, end: primaryIndex + 1 }) : null;\n\t\t\t\tconst selections = cellIndexesToRanges(state.selections.map(sel => this.getCellIndexByHandle(sel)))\n\t\t\t\t\t.map(range => this.validateRange(range))\n\t\t\t\t\t.filter(range => range !== null) as ICellRange[];\n\t\t\t\tthis._selectionCollection.setState(primarySelection, reduceCellRanges(selections), true, source);\n\t\t\t} else {\n\t\t\t\tconst primarySelection = this.validateRange(state.focus);\n\t\t\t\tconst selections = state.selections\n\t\t\t\t\t.map(range => this.validateRange(range))\n\t\t\t\t\t.filter(range => range !== null) as ICellRange[];\n\t\t\t\tthis._selectionCollection.setState(primarySelection, reduceCellRanges(selections), true, source);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFoldingStartIndex(index: number): number {\n\t\tif (!this._foldingRanges) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst range = this._foldingRanges.findRange(index + 1);\n\t\tconst startIndex = this._foldingRanges.getStartLineNumber(range) - 1;\n\t\treturn startIndex;\n\t}\n\n\tgetFoldingState(index: number): CellFoldingState {\n\t\tif (!this._foldingRanges) {\n\t\t\treturn CellFoldingState.None;\n\t\t}\n\n\t\tconst range = this._foldingRanges.findRange(index + 1);\n\t\tconst startIndex = this._foldingRanges.getStartLineNumber(range) - 1;\n\n\t\tif (startIndex !== index) {\n\t\t\treturn CellFoldingState.None;\n\t\t}\n\n\t\treturn this._foldingRanges.isCollapsed(range) ? CellFoldingState.Collapsed : CellFoldingState.Expanded;\n\t}\n\n\tgetFoldedLength(index: number): number {\n\t\tif (!this._foldingRanges) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst range = this._foldingRanges.findRange(index + 1);\n\t\tconst startIndex = this._foldingRanges.getStartLineNumber(range) - 1;\n\t\tconst endIndex = this._foldingRanges.getEndLineNumber(range) - 1;\n\n\t\treturn endIndex - startIndex;\n\t}\n\n\tupdateFoldingRanges(ranges: FoldingRegions) {\n\t\tthis._foldingRanges = ranges;\n\t\tlet updateHiddenAreas = false;\n\t\tconst newHiddenAreas: ICellRange[] = [];\n\n\t\tlet i = 0; // index into hidden\n\t\tlet k = 0;\n\n\t\tlet lastCollapsedStart = Number.MAX_VALUE;\n\t\tlet lastCollapsedEnd = -1;\n\n\t\tfor (; i < ranges.length; i++) {\n\t\t\tif (!ranges.isCollapsed(i)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst startLineNumber = ranges.getStartLineNumber(i) + 1; // the first line is not hidden\n\t\t\tconst endLineNumber = ranges.getEndLineNumber(i);\n\t\t\tif (lastCollapsedStart <= startLineNumber && endLineNumber <= lastCollapsedEnd) {\n\t\t\t\t// ignore ranges contained in collapsed regions\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!updateHiddenAreas && k < this._hiddenRanges.length && this._hiddenRanges[k].start + 1 === startLineNumber && (this._hiddenRanges[k].end + 1) === endLineNumber) {\n\t\t\t\t// reuse the old ranges\n\t\t\t\tnewHiddenAreas.push(this._hiddenRanges[k]);\n\t\t\t\tk++;\n\t\t\t} else {\n\t\t\t\tupdateHiddenAreas = true;\n\t\t\t\tnewHiddenAreas.push({ start: startLineNumber - 1, end: endLineNumber - 1 });\n\t\t\t}\n\t\t\tlastCollapsedStart = startLineNumber;\n\t\t\tlastCollapsedEnd = endLineNumber;\n\t\t}\n\n\t\tif (updateHiddenAreas || k < this._hiddenRanges.length) {\n\t\t\tthis._hiddenRanges = newHiddenAreas;\n\t\t}\n\n\t\tthis._viewCells.forEach(cell => {\n\t\t\tif (cell.cellKind === CellKind.Markup) {\n\t\t\t\tcell.triggerFoldingStateChange();\n\t\t\t}\n\t\t});\n\t}\n\n\tgetHiddenRanges() {\n\t\treturn this._hiddenRanges;\n\t}\n\n\tgetCellByHandle(handle: number) {\n\t\treturn this._handleToViewCellMapping.get(handle);\n\t}\n\n\tgetCellIndexByHandle(handle: number): number {\n\t\treturn this._viewCells.findIndex(cell => cell.handle === handle);\n\t}\n\n\tgetCellIndex(cell: ICellViewModel) {\n\t\treturn this._viewCells.indexOf(cell as CellViewModel);\n\t}\n\n\tcellAt(index: number): CellViewModel | undefined {\n\t\t// if (index < 0 || index >= this.length) {\n\t\t// \tthrow new Error(`Invalid index ${index}`);\n\t\t// }\n\n\t\treturn this._viewCells[index];\n\t}\n\n\tgetCellsInRange(range?: ICellRange): ReadonlyArray<ICellViewModel> {\n\t\tif (!range) {\n\t\t\treturn this._viewCells.slice(0);\n\t\t}\n\n\t\tconst validatedRange = this.validateRange(range);\n\n\t\tif (validatedRange) {\n\t\t\tconst result: ICellViewModel[] = [];\n\n\t\t\tfor (let i = validatedRange.start; i < validatedRange.end; i++) {\n\t\t\t\tresult.push(this._viewCells[i]);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * If this._viewCells[index] is visible then return index\n\t */\n\tgetNearestVisibleCellIndexUpwards(index: number) {\n\t\tfor (let i = this._hiddenRanges.length - 1; i >= 0; i--) {\n\t\t\tconst cellRange = this._hiddenRanges[i];\n\t\t\tconst foldStart = cellRange.start - 1;\n\t\t\tconst foldEnd = cellRange.end;\n\n\t\t\tif (foldStart > index) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (foldStart <= index && foldEnd >= index) {\n\t\t\t\treturn index;\n\t\t\t}\n\n\t\t\t// foldStart <= index, foldEnd < index\n\t\t\tbreak;\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tgetNextVisibleCellIndex(index: number) {\n\t\tfor (let i = 0; i < this._hiddenRanges.length; i++) {\n\t\t\tconst cellRange = this._hiddenRanges[i];\n\t\t\tconst foldStart = cellRange.start - 1;\n\t\t\tconst foldEnd = cellRange.end;\n\n\t\t\tif (foldEnd < index) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// foldEnd >= index\n\t\t\tif (foldStart <= index) {\n\t\t\t\treturn foldEnd + 1;\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\treturn index + 1;\n\t}\n\n\tgetPreviousVisibleCellIndex(index: number) {\n\t\tfor (let i = this._hiddenRanges.length - 1; i >= 0; i--) {\n\t\t\tconst cellRange = this._hiddenRanges[i];\n\t\t\tconst foldStart = cellRange.start - 1;\n\t\t\tconst foldEnd = cellRange.end;\n\n\t\t\tif (foldEnd < index) {\n\t\t\t\treturn index;\n\t\t\t}\n\n\t\t\tif (foldStart <= index) {\n\t\t\t\treturn foldStart;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\thasCell(cell: ICellViewModel) {\n\t\treturn this._handleToViewCellMapping.has(cell.handle);\n\t}\n\n\tgetVersionId() {\n\t\treturn this._notebook.versionId;\n\t}\n\n\tgetAlternativeId() {\n\t\treturn this._notebook.alternativeVersionId;\n\t}\n\n\tgetTrackedRange(id: string): ICellRange | null {\n\t\treturn this._getDecorationRange(id);\n\t}\n\n\tprivate _getDecorationRange(decorationId: string): ICellRange | null {\n\t\tconst node = this._decorations[decorationId];\n\t\tif (!node) {\n\t\t\treturn null;\n\t\t}\n\t\tconst versionId = this.getVersionId();\n\t\tif (node.cachedVersionId !== versionId) {\n\t\t\tthis._decorationsTree.resolveNode(node, versionId);\n\t\t}\n\t\tif (node.range === null) {\n\t\t\treturn { start: node.cachedAbsoluteStart - 1, end: node.cachedAbsoluteEnd - 1 };\n\t\t}\n\n\t\treturn { start: node.range.startLineNumber - 1, end: node.range.endLineNumber - 1 };\n\t}\n\n\tsetTrackedRange(id: string | null, newRange: ICellRange | null, newStickiness: TrackedRangeStickiness): string | null {\n\t\tconst node = (id ? this._decorations[id] : null);\n\n\t\tif (!node) {\n\t\t\tif (!newRange) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this._deltaCellDecorationsImpl(0, [], [{ range: new Range(newRange.start + 1, 1, newRange.end + 1, 1), options: TRACKED_RANGE_OPTIONS[newStickiness] }])[0];\n\t\t}\n\n\t\tif (!newRange) {\n\t\t\t// node exists, the request is to delete => delete node\n\t\t\tthis._decorationsTree.delete(node);\n\t\t\tdelete this._decorations[node.id];\n\t\t\treturn null;\n\t\t}\n\n\t\tthis._decorationsTree.delete(node);\n\t\tnode.reset(this.getVersionId(), newRange.start, newRange.end + 1, new Range(newRange.start + 1, 1, newRange.end + 1, 1));\n\t\tnode.setOptions(TRACKED_RANGE_OPTIONS[newStickiness]);\n\t\tthis._decorationsTree.insert(node);\n\t\treturn node.id;\n\t}\n\n\tprivate _deltaCellDecorationsImpl(ownerId: number, oldDecorationsIds: string[], newDecorations: IModelDeltaDecoration[]): string[] {\n\t\tconst versionId = this.getVersionId();\n\n\t\tconst oldDecorationsLen = oldDecorationsIds.length;\n\t\tlet oldDecorationIndex = 0;\n\n\t\tconst newDecorationsLen = newDecorations.length;\n\t\tlet newDecorationIndex = 0;\n\n\t\tconst result = new Array<string>(newDecorationsLen);\n\t\twhile (oldDecorationIndex < oldDecorationsLen || newDecorationIndex < newDecorationsLen) {\n\n\t\t\tlet node: IntervalNode | null = null;\n\n\t\t\tif (oldDecorationIndex < oldDecorationsLen) {\n\t\t\t\t// (1) get ourselves an old node\n\t\t\t\tdo {\n\t\t\t\t\tnode = this._decorations[oldDecorationsIds[oldDecorationIndex++]];\n\t\t\t\t} while (!node && oldDecorationIndex < oldDecorationsLen);\n\n\t\t\t\t// (2) remove the node from the tree (if it exists)\n\t\t\t\tif (node) {\n\t\t\t\t\tthis._decorationsTree.delete(node);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newDecorationIndex < newDecorationsLen) {\n\t\t\t\t// (3) create a new node if necessary\n\t\t\t\tif (!node) {\n\t\t\t\t\tconst internalDecorationId = (++this._lastDecorationId);\n\t\t\t\t\tconst decorationId = `${this._instanceId};${internalDecorationId}`;\n\t\t\t\t\tnode = new IntervalNode(decorationId, 0, 0);\n\t\t\t\t\tthis._decorations[decorationId] = node;\n\t\t\t\t}\n\n\t\t\t\t// (4) initialize node\n\t\t\t\tconst newDecoration = newDecorations[newDecorationIndex];\n\t\t\t\tconst range = newDecoration.range;\n\t\t\t\tconst options = _normalizeOptions(newDecoration.options);\n\n\t\t\t\tnode.ownerId = ownerId;\n\t\t\t\tnode.reset(versionId, range.startLineNumber, range.endLineNumber, Range.lift(range));\n\t\t\t\tnode.setOptions(options);\n\n\t\t\t\tthis._decorationsTree.insert(node);\n\n\t\t\t\tresult[newDecorationIndex] = node.id;\n\n\t\t\t\tnewDecorationIndex++;\n\t\t\t} else {\n\t\t\t\tif (node) {\n\t\t\t\t\tdelete this._decorations[node.id];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tdeltaCellDecorations(oldDecorations: string[], newDecorations: INotebookDeltaDecoration[]): string[] {\n\t\toldDecorations.forEach(id => {\n\t\t\tconst handle = this._decorationIdToCellMap.get(id);\n\n\t\t\tif (handle !== undefined) {\n\t\t\t\tconst cell = this.getCellByHandle(handle);\n\t\t\t\tcell?.deltaCellDecorations([id], []);\n\t\t\t}\n\t\t});\n\n\t\tconst result: string[] = [];\n\n\t\tnewDecorations.forEach(decoration => {\n\t\t\tconst cell = this.getCellByHandle(decoration.handle);\n\t\t\tconst ret = cell?.deltaCellDecorations([], [decoration.options]) || [];\n\t\t\tret.forEach(id => {\n\t\t\t\tthis._decorationIdToCellMap.set(id, decoration.handle);\n\t\t\t});\n\n\t\t\tresult.push(...ret);\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tdeltaCellStatusBarItems(oldItems: string[], newItems: INotebookDeltaCellStatusBarItems[]): string[] {\n\t\tconst deletesByHandle = groupBy(oldItems, id => this._statusBarItemIdToCellMap.get(id) ?? -1);\n\n\t\tconst result: string[] = [];\n\t\tnewItems.forEach(itemDelta => {\n\t\t\tconst cell = this.getCellByHandle(itemDelta.handle);\n\t\t\tconst deleted = deletesByHandle[itemDelta.handle] ?? [];\n\t\t\tdelete deletesByHandle[itemDelta.handle];\n\t\t\tdeleted.forEach(id => this._statusBarItemIdToCellMap.delete(id));\n\n\t\t\tconst ret = cell?.deltaCellStatusBarItems(deleted, itemDelta.items) || [];\n\t\t\tret.forEach(id => {\n\t\t\t\tthis._statusBarItemIdToCellMap.set(id, itemDelta.handle);\n\t\t\t});\n\n\t\t\tresult.push(...ret);\n\t\t});\n\n\t\tfor (const _handle in deletesByHandle) {\n\t\t\tconst handle = parseInt(_handle);\n\t\t\tconst ids = deletesByHandle[handle];\n\t\t\tconst cell = this.getCellByHandle(handle);\n\t\t\tcell?.deltaCellStatusBarItems(ids, []);\n\t\t\tids.forEach(id => this._statusBarItemIdToCellMap.delete(id));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tnearestCodeCellIndex(index: number /* exclusive */) {\n\t\tconst nearest = this.viewCells.slice(0, index).reverse().findIndex(cell => cell.cellKind === CellKind.Code);\n\t\tif (nearest > -1) {\n\t\t\treturn index - nearest - 1;\n\t\t} else {\n\t\t\tconst nearestCellTheOtherDirection = this.viewCells.slice(index + 1).findIndex(cell => cell.cellKind === CellKind.Code);\n\t\t\tif (nearestCellTheOtherDirection > -1) {\n\t\t\t\treturn index + 1 + nearestCellTheOtherDirection;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tgetEditorViewState(): INotebookEditorViewState {\n\t\tconst editingCells: { [key: number]: boolean } = {};\n\t\tconst collapsedInputCells: { [key: number]: boolean } = {};\n\t\tconst collapsedOutputCells: { [key: number]: boolean } = {};\n\t\tconst cellLineNumberStates: { [key: number]: 'on' | 'off' } = {};\n\n\t\tthis._viewCells.forEach((cell, i) => {\n\t\t\tif (cell.getEditState() === CellEditState.Editing) {\n\t\t\t\teditingCells[i] = true;\n\t\t\t}\n\n\t\t\tif (cell.isInputCollapsed) {\n\t\t\t\tcollapsedInputCells[i] = true;\n\t\t\t}\n\n\t\t\tif (cell instanceof CodeCellViewModel && cell.isOutputCollapsed) {\n\t\t\t\tcollapsedOutputCells[i] = true;\n\t\t\t}\n\n\t\t\tif (cell.lineNumbers !== 'inherit') {\n\t\t\t\tcellLineNumberStates[i] = cell.lineNumbers;\n\t\t\t}\n\t\t});\n\t\tconst editorViewStates: { [key: number]: editorCommon.ICodeEditorViewState } = {};\n\t\tthis._viewCells.map(cell => ({ handle: cell.model.handle, state: cell.saveEditorViewState() })).forEach((viewState, i) => {\n\t\t\tif (viewState.state) {\n\t\t\t\teditorViewStates[i] = viewState.state;\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\teditingCells,\n\t\t\teditorViewStates,\n\t\t\tcellLineNumberStates,\n\t\t\tcollapsedInputCells,\n\t\t\tcollapsedOutputCells\n\t\t};\n\t}\n\n\trestoreEditorViewState(viewState: INotebookEditorViewState | undefined): void {\n\t\tif (!viewState) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._viewCells.forEach((cell, index) => {\n\t\t\tconst isEditing = viewState.editingCells && viewState.editingCells[index];\n\t\t\tconst editorViewState = viewState.editorViewStates && viewState.editorViewStates[index];\n\n\t\t\tcell.updateEditState(isEditing ? CellEditState.Editing : CellEditState.Preview, 'viewState');\n\t\t\tconst cellHeight = viewState.cellTotalHeights ? viewState.cellTotalHeights[index] : undefined;\n\t\t\tcell.restoreEditorViewState(editorViewState, cellHeight);\n\t\t\tif (viewState.collapsedInputCells && viewState.collapsedInputCells[index]) {\n\t\t\t\tcell.isInputCollapsed = true;\n\t\t\t}\n\t\t\tif (viewState.collapsedOutputCells && viewState.collapsedOutputCells[index] && cell instanceof CodeCellViewModel) {\n\t\t\t\tcell.isOutputCollapsed = true;\n\t\t\t}\n\t\t\tif (viewState.cellLineNumberStates && viewState.cellLineNumberStates[index]) {\n\t\t\t\tcell.lineNumbers = viewState.cellLineNumberStates[index];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Editor decorations across cells. For example, find decorations for multiple code cells\n\t * The reason that we can't completely delegate this to CodeEditorWidget is most of the time, the editors for cells are not created yet but we already have decorations for them.\n\t */\n\tchangeModelDecorations<T>(callback: (changeAccessor: IModelDecorationsChangeAccessor) => T): T | null {\n\t\tconst changeAccessor: IModelDecorationsChangeAccessor = {\n\t\t\tdeltaDecorations: (oldDecorations: ICellModelDecorations[], newDecorations: ICellModelDeltaDecorations[]): ICellModelDecorations[] => {\n\t\t\t\treturn this._deltaModelDecorationsImpl(oldDecorations, newDecorations);\n\t\t\t}\n\t\t};\n\n\t\tlet result: T | null = null;\n\t\ttry {\n\t\t\tresult = callback(changeAccessor);\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\n\t\tchangeAccessor.deltaDecorations = invalidFunc;\n\n\t\treturn result;\n\t}\n\n\tprivate _deltaModelDecorationsImpl(oldDecorations: ICellModelDecorations[], newDecorations: ICellModelDeltaDecorations[]): ICellModelDecorations[] {\n\n\t\tconst mapping = new Map<number, { cell: CellViewModel; oldDecorations: readonly string[]; newDecorations: readonly IModelDeltaDecoration[] }>();\n\t\toldDecorations.forEach(oldDecoration => {\n\t\t\tconst ownerId = oldDecoration.ownerId;\n\n\t\t\tif (!mapping.has(ownerId)) {\n\t\t\t\tconst cell = this._viewCells.find(cell => cell.handle === ownerId);\n\t\t\t\tif (cell) {\n\t\t\t\t\tmapping.set(ownerId, { cell: cell, oldDecorations: [], newDecorations: [] });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst data = mapping.get(ownerId)!;\n\t\t\tif (data) {\n\t\t\t\tdata.oldDecorations = oldDecoration.decorations;\n\t\t\t}\n\t\t});\n\n\t\tnewDecorations.forEach(newDecoration => {\n\t\t\tconst ownerId = newDecoration.ownerId;\n\n\t\t\tif (!mapping.has(ownerId)) {\n\t\t\t\tconst cell = this._viewCells.find(cell => cell.handle === ownerId);\n\n\t\t\t\tif (cell) {\n\t\t\t\t\tmapping.set(ownerId, { cell: cell, oldDecorations: [], newDecorations: [] });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst data = mapping.get(ownerId)!;\n\t\t\tif (data) {\n\t\t\t\tdata.newDecorations = newDecoration.decorations;\n\t\t\t}\n\t\t});\n\n\t\tconst ret: ICellModelDecorations[] = [];\n\t\tmapping.forEach((value, ownerId) => {\n\t\t\tconst cellRet = value.cell.deltaModelDecorations(value.oldDecorations, value.newDecorations);\n\t\t\tret.push({\n\t\t\t\townerId: ownerId,\n\t\t\t\tdecorations: cellRet\n\t\t\t});\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\t//#region Find\n\tfind(value: string, options: INotebookSearchOptions): CellFindMatchWithIndex[] {\n\t\tconst matches: CellFindMatchWithIndex[] = [];\n\t\tthis._viewCells.forEach((cell, index) => {\n\t\t\tconst cellMatches = cell.startFind(value, options);\n\t\t\tif (cellMatches) {\n\t\t\t\tmatches.push(new CellFindMatchModel(\n\t\t\t\t\tcellMatches.cell,\n\t\t\t\t\tindex,\n\t\t\t\t\tcellMatches.contentMatches,\n\t\t\t\t\t[]\n\t\t\t\t));\n\t\t\t}\n\t\t});\n\n\t\t// filter based on options and editing state\n\n\t\treturn matches.filter(match => {\n\t\t\tif (match.cell.cellKind === CellKind.Code) {\n\t\t\t\t// code cell, we only include its match if include input is enabled\n\t\t\t\treturn options.includeCodeInput;\n\t\t\t}\n\n\t\t\t// markup cell, it depends on the editing state\n\t\t\tif (match.cell.getEditState() === CellEditState.Editing) {\n\t\t\t\t// editing, even if we includeMarkupPreview\n\t\t\t\treturn options.includeMarkupInput;\n\t\t\t} else {\n\t\t\t\t// cell in preview mode, we should only include it if includeMarkupPreview is false but includeMarkupInput is true\n\t\t\t\t// if includeMarkupPreview is true, then we should include the webview match result other than this\n\t\t\t\treturn !options.includeMarkupPreview && options.includeMarkupInput;\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\n\treplaceOne(cell: ICellViewModel, range: Range, text: string): Promise<void> {\n\t\tconst viewCell = cell as CellViewModel;\n\t\tthis._lastNotebookEditResource.push(viewCell.uri);\n\t\treturn viewCell.resolveTextModel().then(() => {\n\t\t\tthis._bulkEditService.apply(\n\t\t\t\t[new ResourceTextEdit(cell.uri, { range, text })],\n\t\t\t\t{ quotableLabel: 'Notebook Replace' }\n\t\t\t);\n\t\t});\n\t}\n\n\tasync replaceAll(matches: CellFindMatchWithIndex[], texts: string[]): Promise<void> {\n\t\tif (!matches.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst textEdits: IWorkspaceTextEdit[] = [];\n\t\tthis._lastNotebookEditResource.push(matches[0].cell.uri);\n\n\t\tmatches.forEach(match => {\n\t\t\tmatch.contentMatches.forEach((singleMatch, index) => {\n\t\t\t\ttextEdits.push({\n\t\t\t\t\tversionId: undefined,\n\t\t\t\t\ttextEdit: { range: (singleMatch as FindMatch).range, text: texts[index] },\n\t\t\t\t\tresource: match.cell.uri\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\treturn Promise.all(matches.map(match => {\n\t\t\treturn match.cell.resolveTextModel();\n\t\t})).then(async () => {\n\t\t\tthis._bulkEditService.apply({ edits: textEdits }, { quotableLabel: 'Notebook Replace All' });\n\t\t\treturn;\n\t\t});\n\t}\n\n\t//#endregion\n\n\t//#region Undo/Redo\n\n\tprivate async _withElement(element: SingleModelEditStackElement | MultiModelEditStackElement, callback: () => Promise<void>) {\n\t\tconst viewCells = this._viewCells.filter(cell => element.matchesResource(cell.uri));\n\t\tconst refs = await Promise.all(viewCells.map(cell => this._textModelService.createModelReference(cell.uri)));\n\t\tawait callback();\n\t\trefs.forEach(ref => ref.dispose());\n\t}\n\n\tasync undo() {\n\n\t\tconst editStack = this._undoService.getElements(this.uri);\n\t\tconst element = editStack.past.length ? editStack.past[editStack.past.length - 1] : undefined;\n\n\t\tif (element && element instanceof SingleModelEditStackElement || element instanceof MultiModelEditStackElement) {\n\t\t\tawait this._withElement(element, async () => {\n\t\t\t\tawait this._undoService.undo(this.uri);\n\t\t\t});\n\n\t\t\treturn (element instanceof SingleModelEditStackElement) ? [element.resource] : element.resources;\n\t\t}\n\n\t\tawait this._undoService.undo(this.uri);\n\t\treturn [];\n\t}\n\n\tasync redo() {\n\n\t\tconst editStack = this._undoService.getElements(this.uri);\n\t\tconst element = editStack.future[0];\n\n\t\tif (element && element instanceof SingleModelEditStackElement || element instanceof MultiModelEditStackElement) {\n\t\t\tawait this._withElement(element, async () => {\n\t\t\t\tawait this._undoService.redo(this.uri);\n\t\t\t});\n\n\t\t\treturn (element instanceof SingleModelEditStackElement) ? [element.resource] : element.resources;\n\t\t}\n\n\t\tawait this._undoService.redo(this.uri);\n\n\t\treturn [];\n\t}\n\n\t//#endregion\n\n\tequal(notebook: NotebookTextModel) {\n\t\treturn this._notebook === notebook;\n\t}\n\n\toverride dispose() {\n\t\tthis._localStore.clear();\n\t\tthis._viewCells.forEach(cell => {\n\t\t\tcell.dispose();\n\t\t});\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport type CellViewModel = CodeCellViewModel | MarkupCellViewModel;\n\nexport function createCellViewModel(instantiationService: IInstantiationService, notebookViewModel: NotebookViewModel, cell: NotebookCellTextModel, viewContext: ViewContext) {\n\tif (cell.cellKind === CellKind.Code) {\n\t\treturn instantiationService.createInstance(CodeCellViewModel, notebookViewModel.viewType, cell, notebookViewModel.layoutInfo, viewContext);\n\t} else {\n\t\treturn instantiationService.createInstance(MarkupCellViewModel, notebookViewModel.viewType, cell, notebookViewModel.layoutInfo, notebookViewModel, viewContext);\n\t}\n}\n"]}