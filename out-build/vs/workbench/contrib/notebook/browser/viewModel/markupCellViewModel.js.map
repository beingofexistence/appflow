{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/viewModel/markupCellViewModel.ts"],"names":[],"mappings":"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","file":"markupCellViewModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as UUID from 'vs/base/common/uuid';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { CellEditState, CellFindMatch, CellFoldingState, CellLayoutContext, CellLayoutState, EditorFoldingStateDelegate, ICellOutputViewModel, ICellViewModel, MarkupCellLayoutChangeEvent, MarkupCellLayoutInfo } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { BaseCellViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/baseCellViewModel';\nimport { NotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\nimport { CellKind, INotebookSearchOptions } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { ViewContext } from 'vs/workbench/contrib/notebook/browser/viewModel/viewContext';\nimport { IUndoRedoService } from 'vs/platform/undoRedo/common/undoRedo';\nimport { NotebookOptionsChangeEvent } from 'vs/workbench/contrib/notebook/browser/notebookOptions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { NotebookCellStateChangedEvent, NotebookLayoutInfo } from 'vs/workbench/contrib/notebook/browser/notebookViewEvents';\n\nexport class MarkupCellViewModel extends BaseCellViewModel implements ICellViewModel {\n\n\treadonly cellKind = CellKind.Markup;\n\n\tprivate _layoutInfo: MarkupCellLayoutInfo;\n\n\tprivate _renderedHtml?: string;\n\n\tpublic get renderedHtml(): string | undefined { return this._renderedHtml; }\n\tpublic set renderedHtml(value: string | undefined) {\n\t\tif (this._renderedHtml !== value) {\n\t\t\tthis._renderedHtml = value;\n\t\t\tthis._onDidChangeState.fire({ contentChanged: true });\n\t\t}\n\t}\n\n\tget layoutInfo() {\n\t\treturn this._layoutInfo;\n\t}\n\n\tprivate _previewHeight = 0;\n\n\tset renderedMarkdownHeight(newHeight: number) {\n\t\tthis._previewHeight = newHeight;\n\t\tthis._updateTotalHeight(this._computeTotalHeight());\n\t}\n\n\tprivate _editorHeight = 0;\n\tprivate _statusBarHeight = 0;\n\tset editorHeight(newHeight: number) {\n\t\tthis._editorHeight = newHeight;\n\t\tthis._statusBarHeight = this.viewContext.notebookOptions.computeStatusBarHeight();\n\t\tthis._updateTotalHeight(this._computeTotalHeight());\n\t}\n\n\tget editorHeight() {\n\t\tthrow new Error('MarkdownCellViewModel.editorHeight is write only');\n\t}\n\n\tprotected readonly _onDidChangeLayout = this._register(new Emitter<MarkupCellLayoutChangeEvent>());\n\treadonly onDidChangeLayout = this._onDidChangeLayout.event;\n\n\tget foldingState() {\n\t\treturn this.foldingDelegate.getFoldingState(this.foldingDelegate.getCellIndex(this));\n\t}\n\n\tprivate _hoveringOutput: boolean = false;\n\tpublic get outputIsHovered(): boolean {\n\t\treturn this._hoveringOutput;\n\t}\n\n\tpublic set outputIsHovered(v: boolean) {\n\t\tthis._hoveringOutput = v;\n\t}\n\n\tprivate _focusOnOutput: boolean = false;\n\tpublic get outputIsFocused(): boolean {\n\t\treturn this._focusOnOutput;\n\t}\n\n\tpublic set outputIsFocused(v: boolean) {\n\t\tthis._focusOnOutput = v;\n\t}\n\n\tprivate _hoveringCell = false;\n\tpublic get cellIsHovered(): boolean {\n\t\treturn this._hoveringCell;\n\t}\n\n\tpublic set cellIsHovered(v: boolean) {\n\t\tthis._hoveringCell = v;\n\t\tthis._onDidChangeState.fire({ cellIsHoveredChanged: true });\n\t}\n\n\tconstructor(\n\t\tviewType: string,\n\t\tmodel: NotebookCellTextModel,\n\t\tinitialNotebookLayoutInfo: NotebookLayoutInfo | null,\n\t\treadonly foldingDelegate: EditorFoldingStateDelegate,\n\t\treadonly viewContext: ViewContext,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IUndoRedoService undoRedoService: IUndoRedoService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService\n\t) {\n\t\tsuper(viewType, model, UUID.generateUuid(), viewContext, configurationService, textModelService, undoRedoService, codeEditorService);\n\n\t\tconst { bottomToolbarGap } = this.viewContext.notebookOptions.computeBottomToolbarDimensions(this.viewType);\n\n\t\tthis._layoutInfo = {\n\t\t\teditorHeight: 0,\n\t\t\tpreviewHeight: 0,\n\t\t\tfontInfo: initialNotebookLayoutInfo?.fontInfo || null,\n\t\t\teditorWidth: initialNotebookLayoutInfo?.width\n\t\t\t\t? this.viewContext.notebookOptions.computeMarkdownCellEditorWidth(initialNotebookLayoutInfo.width)\n\t\t\t\t: 0,\n\t\t\tbottomToolbarOffset: bottomToolbarGap,\n\t\t\ttotalHeight: 100,\n\t\t\tlayoutState: CellLayoutState.Uninitialized,\n\t\t\tfoldHintHeight: 0,\n\t\t\tstatusBarHeight: 0\n\t\t};\n\n\t\tthis._register(this.onDidChangeState(e => {\n\t\t\tthis.viewContext.eventDispatcher.emit([new NotebookCellStateChangedEvent(e, this.model)]);\n\n\t\t\tif (e.foldingStateChanged) {\n\t\t\t\tthis._updateTotalHeight(this._computeTotalHeight(), CellLayoutContext.Fold);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _computeTotalHeight(): number {\n\t\tconst layoutConfiguration = this.viewContext.notebookOptions.getLayoutConfiguration();\n\t\tconst { bottomToolbarGap } = this.viewContext.notebookOptions.computeBottomToolbarDimensions(this.viewType);\n\t\tconst foldHintHeight = this._computeFoldHintHeight();\n\n\t\tif (this.getEditState() === CellEditState.Editing) {\n\t\t\treturn this._editorHeight\n\t\t\t\t+ layoutConfiguration.markdownCellTopMargin\n\t\t\t\t+ layoutConfiguration.markdownCellBottomMargin\n\t\t\t\t+ bottomToolbarGap\n\t\t\t\t+ this._statusBarHeight;\n\t\t} else {\n\t\t\t// @rebornix\n\t\t\t// On file open, the previewHeight + bottomToolbarGap for a cell out of viewport can be 0\n\t\t\t// When it's 0, the list view will never try to render it anymore even if we scroll the cell into view.\n\t\t\t// Thus we make sure it's greater than 0\n\t\t\treturn Math.max(1, this._previewHeight + bottomToolbarGap + foldHintHeight);\n\t\t}\n\t}\n\n\tprivate _computeFoldHintHeight(): number {\n\t\treturn (this.getEditState() === CellEditState.Editing || this.foldingState !== CellFoldingState.Collapsed) ?\n\t\t\t0 : this.viewContext.notebookOptions.getLayoutConfiguration().markdownFoldHintHeight;\n\t}\n\n\tupdateOptions(e: NotebookOptionsChangeEvent) {\n\t\tif (e.cellStatusBarVisibility || e.insertToolbarPosition || e.cellToolbarLocation) {\n\t\t\tthis._updateTotalHeight(this._computeTotalHeight());\n\t\t}\n\t}\n\n\t/**\n\t * we put outputs stuff here to make compiler happy\n\t */\n\toutputsViewModels: ICellOutputViewModel[] = [];\n\tgetOutputOffset(index: number): number {\n\t\t// throw new Error('Method not implemented.');\n\t\treturn -1;\n\t}\n\tupdateOutputHeight(index: number, height: number): void {\n\t\t// throw new Error('Method not implemented.');\n\t}\n\n\ttriggerFoldingStateChange() {\n\t\tthis._onDidChangeState.fire({ foldingStateChanged: true });\n\t}\n\n\tprivate _updateTotalHeight(newHeight: number, context?: CellLayoutContext) {\n\t\tif (newHeight !== this.layoutInfo.totalHeight) {\n\t\t\tthis.layoutChange({ totalHeight: newHeight, context });\n\t\t}\n\t}\n\n\tlayoutChange(state: MarkupCellLayoutChangeEvent) {\n\t\t// recompute\n\t\tconst foldHintHeight = this._computeFoldHintHeight();\n\t\tif (!this.isInputCollapsed) {\n\t\t\tconst editorWidth = state.outerWidth !== undefined\n\t\t\t\t? this.viewContext.notebookOptions.computeMarkdownCellEditorWidth(state.outerWidth)\n\t\t\t\t: this._layoutInfo.editorWidth;\n\t\t\tconst totalHeight = state.totalHeight === undefined\n\t\t\t\t? (this._layoutInfo.layoutState === CellLayoutState.Uninitialized ? 100 : this._layoutInfo.totalHeight)\n\t\t\t\t: state.totalHeight;\n\t\t\tconst previewHeight = this._previewHeight;\n\n\t\t\tthis._layoutInfo = {\n\t\t\t\tfontInfo: state.font || this._layoutInfo.fontInfo,\n\t\t\t\teditorWidth,\n\t\t\t\tpreviewHeight,\n\t\t\t\teditorHeight: this._editorHeight,\n\t\t\t\tstatusBarHeight: this._statusBarHeight,\n\t\t\t\tbottomToolbarOffset: this.viewContext.notebookOptions.computeBottomToolbarOffset(totalHeight, this.viewType),\n\t\t\t\ttotalHeight,\n\t\t\t\tlayoutState: CellLayoutState.Measured,\n\t\t\t\tfoldHintHeight\n\t\t\t};\n\t\t} else {\n\t\t\tconst editorWidth = state.outerWidth !== undefined\n\t\t\t\t? this.viewContext.notebookOptions.computeMarkdownCellEditorWidth(state.outerWidth)\n\t\t\t\t: this._layoutInfo.editorWidth;\n\t\t\tconst totalHeight = this.viewContext.notebookOptions.computeCollapsedMarkdownCellHeight(this.viewType);\n\n\t\t\tstate.totalHeight = totalHeight;\n\n\t\t\tthis._layoutInfo = {\n\t\t\t\tfontInfo: state.font || this._layoutInfo.fontInfo,\n\t\t\t\teditorWidth,\n\t\t\t\teditorHeight: this._editorHeight,\n\t\t\t\tstatusBarHeight: this._statusBarHeight,\n\t\t\t\tpreviewHeight: this._previewHeight,\n\t\t\t\tbottomToolbarOffset: this.viewContext.notebookOptions.computeBottomToolbarOffset(totalHeight, this.viewType),\n\t\t\t\ttotalHeight,\n\t\t\t\tlayoutState: CellLayoutState.Measured,\n\t\t\t\tfoldHintHeight: 0\n\t\t\t};\n\t\t}\n\n\t\tthis._onDidChangeLayout.fire(state);\n\t}\n\n\toverride restoreEditorViewState(editorViewStates: editorCommon.ICodeEditorViewState | null, totalHeight?: number) {\n\t\tsuper.restoreEditorViewState(editorViewStates);\n\t\t// we might already warmup the viewport so the cell has a total height computed\n\t\tif (totalHeight !== undefined && this.layoutInfo.layoutState === CellLayoutState.Uninitialized) {\n\t\t\tthis._layoutInfo = {\n\t\t\t\tfontInfo: this._layoutInfo.fontInfo,\n\t\t\t\teditorWidth: this._layoutInfo.editorWidth,\n\t\t\t\tpreviewHeight: this._layoutInfo.previewHeight,\n\t\t\t\tbottomToolbarOffset: this._layoutInfo.bottomToolbarOffset,\n\t\t\t\ttotalHeight: totalHeight,\n\t\t\t\teditorHeight: this._editorHeight,\n\t\t\t\tstatusBarHeight: this._statusBarHeight,\n\t\t\t\tlayoutState: CellLayoutState.FromCache,\n\t\t\t\tfoldHintHeight: this._layoutInfo.foldHintHeight\n\t\t\t};\n\t\t\tthis.layoutChange({});\n\t\t}\n\t}\n\n\tgetDynamicHeight() {\n\t\treturn null;\n\t}\n\n\tgetHeight(lineHeight: number) {\n\t\tif (this._layoutInfo.layoutState === CellLayoutState.Uninitialized) {\n\t\t\treturn 100;\n\t\t} else {\n\t\t\treturn this._layoutInfo.totalHeight;\n\t\t}\n\t}\n\n\tprotected onDidChangeTextModelContent(): void {\n\t\tthis._onDidChangeState.fire({ contentChanged: true });\n\t}\n\n\tonDeselect() {\n\t}\n\n\n\tprivate readonly _hasFindResult = this._register(new Emitter<boolean>());\n\tpublic readonly hasFindResult: Event<boolean> = this._hasFindResult.event;\n\n\tstartFind(value: string, options: INotebookSearchOptions): CellFindMatch | null {\n\t\tconst matches = super.cellStartFind(value, options);\n\n\t\tif (matches === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tcell: this,\n\t\t\tcontentMatches: matches\n\t\t};\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\t(this.foldingDelegate as any) = null;\n\t}\n}\n"]}