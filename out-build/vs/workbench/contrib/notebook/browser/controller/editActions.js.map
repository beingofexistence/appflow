{"version":3,"sources":["vs/workbench/contrib/notebook/browser/controller/editActions.ts"],"names":[],"mappings":"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","file":"editActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Mimes } from 'vs/base/common/mime';\nimport { URI } from 'vs/base/common/uri';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { localize } from 'vs/nls';\nimport { MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { InputFocusedContext, InputFocusedContextKey } from 'vs/platform/contextkey/common/contextkeys';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IQuickInputService, IQuickPickItem, QuickPickInput } from 'vs/platform/quickinput/common/quickInput';\nimport { changeCellToKind, runDeleteAction } from 'vs/workbench/contrib/notebook/browser/controller/cellOperations';\nimport { CellToolbarOrder, CELL_TITLE_CELL_GROUP_ID, CELL_TITLE_OUTPUT_GROUP_ID, executeNotebookCondition, INotebookActionContext, INotebookCellActionContext, NotebookAction, NotebookCellAction, NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT, findTargetCellEditor } from 'vs/workbench/contrib/notebook/browser/controller/coreActions';\nimport { NOTEBOOK_CELL_EDITABLE, NOTEBOOK_CELL_HAS_OUTPUTS, NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_MARKDOWN_EDIT_MODE, NOTEBOOK_CELL_TYPE, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_HAS_OUTPUTS, NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_OUTPUT_FOCUSED, NOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON } from 'vs/workbench/contrib/notebook/common/notebookContextKeys';\nimport { CellEditState, CHANGE_CELL_LANGUAGE, DETECT_CELL_LANGUAGE, QUIT_EDIT_CELL_COMMAND_ID } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport * as icons from 'vs/workbench/contrib/notebook/browser/notebookIcons';\nimport { CellEditType, CellKind, ICellEditOperation, NotebookCellExecutionState, NotebookSetting } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { ILanguageDetectionService } from 'vs/workbench/services/languageDetection/common/languageDetectionWorkerService';\nimport { INotebookExecutionStateService } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { INotebookKernelService } from 'vs/workbench/contrib/notebook/common/notebookKernelService';\nimport { IDialogService, IConfirmationResult } from 'vs/platform/dialogs/common/dialogs';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { InlineChatController } from 'vs/workbench/contrib/inlineChat/browser/inlineChatController';\n\n\nconst CLEAR_ALL_CELLS_OUTPUTS_COMMAND_ID = 'notebook.clearAllCellsOutputs';\nconst EDIT_CELL_COMMAND_ID = 'notebook.cell.edit';\nconst DELETE_CELL_COMMAND_ID = 'notebook.cell.delete';\nexport const CLEAR_CELL_OUTPUTS_COMMAND_ID = 'notebook.cell.clearOutputs';\n\nregisterAction2(class EditCellAction extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: EDIT_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize('notebookActions.editCell', \"Edit Cell\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_CELL_LIST_FOCUSED,\n\t\t\t\t\t\tContextKeyExpr.not(InputFocusedContextKey),\n\t\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE.isEqualTo(true),\n\t\t\t\t\t\tEditorContextKeys.hoverFocused.toNegated()\n\t\t\t\t\t),\n\t\t\t\t\tprimary: KeyCode.Enter,\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_EDITOR_EDITABLE.isEqualTo(true),\n\t\t\t\t\t\tNOTEBOOK_CELL_TYPE.isEqualTo('markup'),\n\t\t\t\t\t\tNOTEBOOK_CELL_MARKDOWN_EDIT_MODE.toNegated(),\n\t\t\t\t\t\tNOTEBOOK_CELL_EDITABLE),\n\t\t\t\t\torder: CellToolbarOrder.EditCell,\n\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID\n\t\t\t\t},\n\t\t\t\ticon: icons.editIcon,\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext): Promise<void> {\n\t\tif (!context.notebookEditor.hasModel() || context.notebookEditor.isReadOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait context.notebookEditor.focusNotebookCell(context.cell, 'editor');\n\t\tconst foundEditor: ICodeEditor | undefined = context.cell ? findTargetCellEditor(context, context.cell) : undefined;\n\t\tif (foundEditor && foundEditor.hasTextFocus() && InlineChatController.get(foundEditor)?.getWidgetPosition()?.lineNumber === foundEditor.getPosition()?.lineNumber) {\n\t\t\tInlineChatController.get(foundEditor)?.focus();\n\t\t}\n\t}\n});\n\nconst quitEditCondition = ContextKeyExpr.and(\n\tNOTEBOOK_EDITOR_FOCUSED,\n\tInputFocusedContext\n);\nregisterAction2(class QuitEditCellAction extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: QUIT_EDIT_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize('notebookActions.quitEdit', \"Stop Editing Cell\"),\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_CELL_TYPE.isEqualTo('markup'),\n\t\t\t\t\t\tNOTEBOOK_CELL_MARKDOWN_EDIT_MODE,\n\t\t\t\t\t\tNOTEBOOK_CELL_EDITABLE),\n\t\t\t\t\torder: CellToolbarOrder.SaveCell,\n\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID\n\t\t\t\t},\n\t\t\t\ticon: icons.stopEditIcon,\n\t\t\t\tkeybinding: [\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(quitEditCondition,\n\t\t\t\t\t\t\tEditorContextKeys.hoverVisible.toNegated(),\n\t\t\t\t\t\t\tEditorContextKeys.hasNonEmptySelection.toNegated(),\n\t\t\t\t\t\t\tEditorContextKeys.hasMultipleSelections.toNegated()),\n\t\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT - 5\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED,\n\t\t\t\t\t\t\tNOTEBOOK_OUTPUT_FOCUSED),\n\t\t\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 5\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\t\tquitEditCondition,\n\t\t\t\t\t\t\tNOTEBOOK_CELL_TYPE.isEqualTo('markup')),\n\t\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter,\n\t\t\t\t\t\twin: {\n\t\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Enter\n\t\t\t\t\t\t},\n\t\t\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT - 5\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tif (context.cell.cellKind === CellKind.Markup) {\n\t\t\tcontext.cell.updateEditState(CellEditState.Preview, QUIT_EDIT_CELL_COMMAND_ID);\n\t\t}\n\n\t\tawait context.notebookEditor.focusNotebookCell(context.cell, 'container', { skipReveal: true });\n\t}\n});\n\nregisterAction2(class DeleteCellAction extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t{\n\t\t\t\tid: DELETE_CELL_COMMAND_ID,\n\t\t\t\ttitle: localize('notebookActions.deleteCell', \"Delete Cell\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyCode.Delete,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace\n\t\t\t\t\t},\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.not(InputFocusedContextKey)),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t\t},\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.NotebookCellDelete,\n\t\t\t\t\t\twhen: NOTEBOOK_EDITOR_EDITABLE,\n\t\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.InteractiveCellDelete,\n\t\t\t\t\t\tgroup: CELL_TITLE_CELL_GROUP_ID\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\ticon: icons.deleteCellIcon\n\t\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) {\n\t\tif (!context.notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet confirmation: IConfirmationResult;\n\t\tconst notebookExecutionStateService = accessor.get(INotebookExecutionStateService);\n\t\tconst runState = notebookExecutionStateService.getCellExecution(context.cell.uri)?.state;\n\t\tconst configService = accessor.get(IConfigurationService);\n\n\t\tif (runState === NotebookCellExecutionState.Executing && configService.getValue(NotebookSetting.confirmDeleteRunningCell)) {\n\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\tconst primaryButton = localize('confirmDeleteButton', \"Delete\");\n\n\t\t\tconfirmation = await dialogService.confirm({\n\t\t\t\ttype: 'question',\n\t\t\t\tmessage: localize('confirmDeleteButtonMessage', \"This cell is running, are you sure you want to delete it?\"),\n\t\t\t\tprimaryButton: primaryButton,\n\t\t\t\tcheckbox: {\n\t\t\t\t\tlabel: localize('doNotAskAgain', \"Do not ask me again\")\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\tconfirmation = { confirmed: true };\n\t\t}\n\n\t\tif (!confirmation.confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (confirmation.checkboxChecked === true) {\n\t\t\tawait configService.updateValue(NotebookSetting.confirmDeleteRunningCell, false);\n\t\t}\n\n\t\trunDeleteAction(context.notebookEditor, context.cell);\n\t}\n});\n\nregisterAction2(class ClearCellOutputsAction extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CLEAR_CELL_OUTPUTS_COMMAND_ID,\n\t\t\ttitle: localize('clearCellOutputs', 'Clear Cell Outputs'),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_TYPE.isEqualTo('code'), executeNotebookCondition, NOTEBOOK_CELL_HAS_OUTPUTS, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE, NOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON.toNegated()),\n\t\t\t\t\torder: CellToolbarOrder.ClearCellOutput,\n\t\t\t\t\tgroup: CELL_TITLE_OUTPUT_GROUP_ID\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookOutputToolbar,\n\t\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_CELL_HAS_OUTPUTS, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE)\n\t\t\t\t},\n\t\t\t],\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, ContextKeyExpr.not(InputFocusedContextKey), NOTEBOOK_CELL_HAS_OUTPUTS, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE),\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.Delete,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\ticon: icons.clearIcon\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext): Promise<void> {\n\t\tconst notebookExecutionStateService = accessor.get(INotebookExecutionStateService);\n\t\tconst editor = context.notebookEditor;\n\t\tif (!editor.hasModel() || !editor.textModel.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cell = context.cell;\n\t\tconst index = editor.textModel.cells.indexOf(cell.model);\n\n\t\tif (index < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst computeUndoRedo = !editor.isReadOnly;\n\t\teditor.textModel.applyEdits([{ editType: CellEditType.Output, index, outputs: [] }], true, undefined, () => undefined, undefined, computeUndoRedo);\n\n\t\tconst runState = notebookExecutionStateService.getCellExecution(context.cell.uri)?.state;\n\t\tif (runState !== NotebookCellExecutionState.Executing) {\n\t\t\tcontext.notebookEditor.textModel.applyEdits([{\n\t\t\t\teditType: CellEditType.PartialInternalMetadata, index, internalMetadata: {\n\t\t\t\t\trunStartTime: null,\n\t\t\t\t\trunStartTimeAdjustment: null,\n\t\t\t\t\trunEndTime: null,\n\t\t\t\t\texecutionOrder: null,\n\t\t\t\t\tlastRunSuccess: null\n\t\t\t\t}\n\t\t\t}], true, undefined, () => undefined, undefined, computeUndoRedo);\n\t\t}\n\t}\n});\n\n\nregisterAction2(class ClearAllCellOutputsAction extends NotebookAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CLEAR_ALL_CELLS_OUTPUTS_COMMAND_ID,\n\t\t\ttitle: localize('clearAllCellsOutputs', 'Clear All Outputs'),\n\t\t\tprecondition: NOTEBOOK_HAS_OUTPUTS,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\tNOTEBOOK_IS_ACTIVE_EDITOR,\n\t\t\t\t\t\tContextKeyExpr.notEquals('config.notebook.globalToolbar', true)\n\t\t\t\t\t),\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookToolbar,\n\t\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\t\texecuteNotebookCondition,\n\t\t\t\t\t\tContextKeyExpr.equals('config.notebook.globalToolbar', true)\n\t\t\t\t\t),\n\t\t\t\t\tgroup: 'navigation/execute',\n\t\t\t\t\torder: 10\n\t\t\t\t}\n\t\t\t],\n\t\t\ticon: icons.clearIcon\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookActionContext): Promise<void> {\n\t\tconst notebookExecutionStateService = accessor.get(INotebookExecutionStateService);\n\t\tconst editor = context.notebookEditor;\n\t\tif (!editor.hasModel() || !editor.textModel.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst computeUndoRedo = !editor.isReadOnly;\n\t\teditor.textModel.applyEdits(\n\t\t\teditor.textModel.cells.map((cell, index) => ({\n\t\t\t\teditType: CellEditType.Output, index, outputs: []\n\t\t\t})), true, undefined, () => undefined, undefined, computeUndoRedo);\n\n\t\tconst clearExecutionMetadataEdits = editor.textModel.cells.map((cell, index) => {\n\t\t\tconst runState = notebookExecutionStateService.getCellExecution(cell.uri)?.state;\n\t\t\tif (runState !== NotebookCellExecutionState.Executing) {\n\t\t\t\treturn {\n\t\t\t\t\teditType: CellEditType.PartialInternalMetadata, index, internalMetadata: {\n\t\t\t\t\t\trunStartTime: null,\n\t\t\t\t\t\trunStartTimeAdjustment: null,\n\t\t\t\t\t\trunEndTime: null,\n\t\t\t\t\t\texecutionOrder: null,\n\t\t\t\t\t\tlastRunSuccess: null\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}).filter(edit => !!edit) as ICellEditOperation[];\n\t\tif (clearExecutionMetadataEdits.length) {\n\t\t\tcontext.notebookEditor.textModel.applyEdits(clearExecutionMetadataEdits, true, undefined, () => undefined, undefined, computeUndoRedo);\n\t\t}\n\t}\n});\n\n\ninterface ILanguagePickInput extends IQuickPickItem {\n\tlanguageId: string;\n\tdescription: string;\n}\n\ninterface IChangeCellContext extends INotebookCellActionContext {\n\t// TODO@rebornix : `cells`\n\t// range: ICellRange;\n\tlanguage?: string;\n}\n\nregisterAction2(class ChangeCellLanguageAction extends NotebookCellAction<ICellRange> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CHANGE_CELL_LANGUAGE,\n\t\t\ttitle: localize('changeLanguage', 'Change Cell Language'),\n\t\t\tdescription: {\n\t\t\t\tdescription: localize('changeLanguage', 'Change Cell Language'),\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'range',\n\t\t\t\t\t\tdescription: 'The cell range',\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t\t'required': ['start', 'end'],\n\t\t\t\t\t\t\t'properties': {\n\t\t\t\t\t\t\t\t'start': {\n\t\t\t\t\t\t\t\t\t'type': 'number'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'end': {\n\t\t\t\t\t\t\t\t\t'type': 'number'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'language',\n\t\t\t\t\t\tdescription: 'The target cell language',\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected override getCellContextFromArgs(accessor: ServicesAccessor, context?: ICellRange, ...additionalArgs: any[]): IChangeCellContext | undefined {\n\t\tif (!context || typeof context.start !== 'number' || typeof context.end !== 'number' || context.start >= context.end) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst language = additionalArgs.length && typeof additionalArgs[0] === 'string' ? additionalArgs[0] : undefined;\n\t\tconst activeEditorContext = this.getEditorContextFromArgsOrActive(accessor);\n\n\t\tif (!activeEditorContext || !activeEditorContext.notebookEditor.hasModel() || context.start >= activeEditorContext.notebookEditor.getLength()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO@rebornix, support multiple cells\n\t\treturn {\n\t\t\tnotebookEditor: activeEditorContext.notebookEditor,\n\t\t\tcell: activeEditorContext.notebookEditor.cellAt(context.start)!,\n\t\t\tlanguage\n\t\t};\n\t}\n\n\n\tasync runWithContext(accessor: ServicesAccessor, context: IChangeCellContext): Promise<void> {\n\t\tif (context.language) {\n\t\t\tawait this.setLanguage(context, context.language);\n\t\t} else {\n\t\t\tawait this.showLanguagePicker(accessor, context);\n\t\t}\n\t}\n\n\tprivate async showLanguagePicker(accessor: ServicesAccessor, context: IChangeCellContext) {\n\t\tconst topItems: ILanguagePickInput[] = [];\n\t\tconst mainItems: ILanguagePickInput[] = [];\n\n\t\tconst languageService = accessor.get(ILanguageService);\n\t\tconst modelService = accessor.get(IModelService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst languageDetectionService = accessor.get(ILanguageDetectionService);\n\t\tconst kernelService = accessor.get(INotebookKernelService);\n\n\t\tlet languages = context.notebookEditor.activeKernel?.supportedLanguages;\n\t\tif (!languages) {\n\t\t\tconst matchResult = kernelService.getMatchingKernel(context.notebookEditor.textModel);\n\t\t\tconst allSupportedLanguages = matchResult.all.flatMap(kernel => kernel.supportedLanguages);\n\t\t\tlanguages = allSupportedLanguages.length > 0 ? allSupportedLanguages : languageService.getRegisteredLanguageIds();\n\t\t}\n\n\t\tconst providerLanguages = new Set([\n\t\t\t...languages,\n\t\t\t'markdown'\n\t\t]);\n\n\t\tproviderLanguages.forEach(languageId => {\n\t\t\tlet description: string;\n\t\t\tif (context.cell.cellKind === CellKind.Markup ? (languageId === 'markdown') : (languageId === context.cell.language)) {\n\t\t\t\tdescription = localize('languageDescription', \"({0}) - Current Language\", languageId);\n\t\t\t} else {\n\t\t\t\tdescription = localize('languageDescriptionConfigured', \"({0})\", languageId);\n\t\t\t}\n\n\t\t\tconst languageName = languageService.getLanguageName(languageId);\n\t\t\tif (!languageName) {\n\t\t\t\t// Notebook has unrecognized language\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst item = <ILanguagePickInput>{\n\t\t\t\tlabel: languageName,\n\t\t\t\ticonClasses: getIconClasses(modelService, languageService, this.getFakeResource(languageName, languageService)),\n\t\t\t\tdescription,\n\t\t\t\tlanguageId\n\t\t\t};\n\n\t\t\tif (languageId === 'markdown' || languageId === context.cell.language) {\n\t\t\t\ttopItems.push(item);\n\t\t\t} else {\n\t\t\t\tmainItems.push(item);\n\t\t\t}\n\t\t});\n\n\t\tmainItems.sort((a, b) => {\n\t\t\treturn a.description.localeCompare(b.description);\n\t\t});\n\n\t\t// Offer to \"Auto Detect\"\n\t\tconst autoDetectMode: IQuickPickItem = {\n\t\t\tlabel: localize('autoDetect', \"Auto Detect\")\n\t\t};\n\n\t\tconst picks: QuickPickInput[] = [\n\t\t\tautoDetectMode,\n\t\t\t{ type: 'separator', label: localize('languagesPicks', \"languages (identifier)\") },\n\t\t\t...topItems,\n\t\t\t{ type: 'separator' },\n\t\t\t...mainItems\n\t\t];\n\n\t\tconst selection = await quickInputService.pick(picks, { placeHolder: localize('pickLanguageToConfigure', \"Select Language Mode\") });\n\t\tconst languageId = selection === autoDetectMode\n\t\t\t? await languageDetectionService.detectLanguage(context.cell.uri)\n\t\t\t: (selection as ILanguagePickInput)?.languageId;\n\n\t\tif (languageId) {\n\t\t\tawait this.setLanguage(context, languageId);\n\t\t}\n\t}\n\n\tprivate async setLanguage(context: IChangeCellContext, languageId: string) {\n\t\tawait setCellToLanguage(languageId, context);\n\t}\n\n\t/**\n\t * Copied from editorStatus.ts\n\t */\n\tprivate getFakeResource(lang: string, languageService: ILanguageService): URI | undefined {\n\t\tlet fakeResource: URI | undefined;\n\n\t\tconst languageId = languageService.getLanguageIdByLanguageName(lang);\n\t\tif (languageId) {\n\t\t\tconst extensions = languageService.getExtensions(languageId);\n\t\t\tif (extensions.length) {\n\t\t\t\tfakeResource = URI.file(extensions[0]);\n\t\t\t} else {\n\t\t\t\tconst filenames = languageService.getFilenames(languageId);\n\t\t\t\tif (filenames.length) {\n\t\t\t\t\tfakeResource = URI.file(filenames[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fakeResource;\n\t}\n});\n\nregisterAction2(class DetectCellLanguageAction extends NotebookCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: DETECT_CELL_LANGUAGE,\n\t\t\ttitle: { value: localize('detectLanguage', 'Accept Detected Language for Cell'), original: 'Accept Detected Language for Cell' },\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_CELL_EDITABLE),\n\t\t\tkeybinding: { primary: KeyCode.KeyD | KeyMod.Alt | KeyMod.Shift, weight: KeybindingWeight.WorkbenchContrib }\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext): Promise<void> {\n\t\tconst languageDetectionService = accessor.get(ILanguageDetectionService);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst kernelService = accessor.get(INotebookKernelService);\n\t\tconst kernel = kernelService.getSelectedOrSuggestedKernel(context.notebookEditor.textModel);\n\t\tconst providerLanguages = [...kernel?.supportedLanguages ?? []];\n\t\tproviderLanguages.push('markdown');\n\t\tconst detection = await languageDetectionService.detectLanguage(context.cell.uri, providerLanguages);\n\t\tif (detection) {\n\t\t\tsetCellToLanguage(detection, context);\n\t\t} else {\n\t\t\tnotificationService.warn(localize('noDetection', \"Unable to detect cell language\"));\n\t\t}\n\t}\n});\n\nasync function setCellToLanguage(languageId: string, context: IChangeCellContext) {\n\tif (languageId === 'markdown' && context.cell?.language !== 'markdown') {\n\t\tconst idx = context.notebookEditor.getCellIndex(context.cell);\n\t\tawait changeCellToKind(CellKind.Markup, { cell: context.cell, notebookEditor: context.notebookEditor, ui: true }, 'markdown', Mimes.markdown);\n\t\tconst newCell = context.notebookEditor.cellAt(idx);\n\n\t\tif (newCell) {\n\t\t\tawait context.notebookEditor.focusNotebookCell(newCell, 'editor');\n\t\t}\n\t} else if (languageId !== 'markdown' && context.cell?.cellKind === CellKind.Markup) {\n\t\tawait changeCellToKind(CellKind.Code, { cell: context.cell, notebookEditor: context.notebookEditor, ui: true }, languageId);\n\t} else {\n\t\tconst index = context.notebookEditor.textModel.cells.indexOf(context.cell.model);\n\t\tcontext.notebookEditor.textModel.applyEdits(\n\t\t\t[{ editType: CellEditType.CellLanguage, index, language: languageId }],\n\t\t\ttrue, undefined, () => undefined, undefined, !context.notebookEditor.isReadOnly\n\t\t);\n\t}\n}\n"]}