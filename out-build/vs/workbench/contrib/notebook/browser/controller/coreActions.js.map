{"version":3,"sources":["vs/workbench/contrib/notebook/browser/controller/coreActions.ts"],"names":[],"mappings":"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","file":"coreActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { Action2, IAction2Options, MenuId, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { getNotebookEditorFromEditorPane, IActiveNotebookEditor, ICellViewModel, cellRangeToViewCells, ICellOutputViewModel } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { INTERACTIVE_WINDOW_IS_ACTIVE_EDITOR, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_KERNEL_COUNT, NOTEBOOK_KERNEL_SOURCE_COUNT } from 'vs/workbench/contrib/notebook/common/notebookContextKeys';\nimport { ICellRange, isICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorCommandsContext } from 'vs/workbench/common/editor';\nimport { INotebookEditorService } from 'vs/workbench/contrib/notebook/browser/services/notebookEditorService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from 'vs/base/common/actions';\nimport { TypeConstraint } from 'vs/base/common/types';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { MarshalledId } from 'vs/base/common/marshallingIds';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { isEqual } from 'vs/base/common/resources';\n\n// Kernel Command\nexport const SELECT_KERNEL_ID = '_notebook.selectKernel';\nexport const NOTEBOOK_ACTIONS_CATEGORY = { value: localize('notebookActions.category', \"Notebook\"), original: 'Notebook' };\n\nexport const CELL_TITLE_CELL_GROUP_ID = 'inline/cell';\nexport const CELL_TITLE_OUTPUT_GROUP_ID = 'inline/output';\n\nexport const NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT = KeybindingWeight.EditorContrib; // smaller than Suggest Widget, etc\n\nexport const enum CellToolbarOrder {\n\tEditCell,\n\tExecuteAboveCells,\n\tExecuteCellAndBelow,\n\tSaveCell,\n\tSplitCell,\n\tClearCellOutput\n}\n\nexport const enum CellOverflowToolbarGroups {\n\tCopy = '1_copy',\n\tInsert = '2_insert',\n\tEdit = '3_edit',\n\tShare = '4_share'\n}\n\nexport interface INotebookActionContext {\n\treadonly cell?: ICellViewModel;\n\treadonly notebookEditor: IActiveNotebookEditor;\n\treadonly ui?: boolean;\n\treadonly selectedCells?: readonly ICellViewModel[];\n\treadonly autoReveal?: boolean;\n}\n\nexport interface INotebookCellToolbarActionContext extends INotebookActionContext {\n\treadonly ui: true;\n\treadonly cell: ICellViewModel;\n}\n\nexport interface INotebookCommandContext extends INotebookActionContext {\n\treadonly ui: false;\n\treadonly selectedCells: readonly ICellViewModel[];\n}\n\nexport interface INotebookCellActionContext extends INotebookActionContext {\n\tcell: ICellViewModel;\n}\n\nexport interface INotebookOutputActionContext extends INotebookCellActionContext {\n\toutputViewModel: ICellOutputViewModel;\n}\n\nexport function getContextFromActiveEditor(editorService: IEditorService): INotebookActionContext | undefined {\n\tconst editor = getNotebookEditorFromEditorPane(editorService.activeEditorPane);\n\tif (!editor || !editor.hasModel()) {\n\t\treturn;\n\t}\n\n\tconst activeCell = editor.getActiveCell();\n\tconst selectedCells = editor.getSelectionViewModels();\n\treturn {\n\t\tcell: activeCell,\n\t\tselectedCells,\n\t\tnotebookEditor: editor\n\t};\n}\n\nfunction getWidgetFromUri(accessor: ServicesAccessor, uri: URI) {\n\tconst notebookEditorService = accessor.get(INotebookEditorService);\n\tconst widget = notebookEditorService.listNotebookEditors().find(widget => widget.hasModel() && widget.textModel.uri.toString() === uri.toString());\n\n\tif (widget && widget.hasModel()) {\n\t\treturn widget;\n\t}\n\n\treturn undefined;\n}\n\nexport function getContextFromUri(accessor: ServicesAccessor, context?: any) {\n\tconst uri = URI.revive(context);\n\n\tif (uri) {\n\t\tconst widget = getWidgetFromUri(accessor, uri);\n\n\t\tif (widget) {\n\t\t\treturn {\n\t\t\t\tnotebookEditor: widget,\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function findTargetCellEditor(context: INotebookCellActionContext, targetCell: ICellViewModel) {\n\tlet foundEditor: ICodeEditor | undefined = undefined;\n\tfor (const [, codeEditor] of context.notebookEditor.codeEditors) {\n\t\tif (isEqual(codeEditor.getModel()?.uri, targetCell.uri)) {\n\t\t\tfoundEditor = codeEditor;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn foundEditor;\n}\n\nexport abstract class NotebookAction extends Action2 {\n\tconstructor(desc: IAction2Options) {\n\t\tif (desc.f1 !== false) {\n\t\t\tdesc.f1 = false;\n\t\t\tconst f1Menu = {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.or(NOTEBOOK_IS_ACTIVE_EDITOR, INTERACTIVE_WINDOW_IS_ACTIVE_EDITOR)\n\t\t\t};\n\n\t\t\tif (!desc.menu) {\n\t\t\t\tdesc.menu = [];\n\t\t\t} else if (!Array.isArray(desc.menu)) {\n\t\t\t\tdesc.menu = [desc.menu];\n\t\t\t}\n\n\t\t\tdesc.menu = [\n\t\t\t\t...desc.menu,\n\t\t\t\tf1Menu\n\t\t\t];\n\t\t}\n\n\t\tdesc.category = NOTEBOOK_ACTIONS_CATEGORY;\n\n\t\tsuper(desc);\n\t}\n\n\tasync run(accessor: ServicesAccessor, context?: any, ...additionalArgs: any[]): Promise<void> {\n\t\tconst isFromUI = !!context;\n\t\tconst from = isFromUI ? (this.isNotebookActionContext(context) ? 'notebookToolbar' : 'editorToolbar') : undefined;\n\t\tif (!this.isNotebookActionContext(context)) {\n\t\t\tcontext = this.getEditorContextFromArgsOrActive(accessor, context, ...additionalArgs);\n\t\t\tif (!context) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (from !== undefined) {\n\t\t\tconst telemetryService = accessor.get(ITelemetryService);\n\t\t\ttelemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id: this.desc.id, from: from });\n\t\t}\n\n\t\treturn this.runWithContext(accessor, context);\n\t}\n\n\tabstract runWithContext(accessor: ServicesAccessor, context: INotebookActionContext): Promise<void>;\n\n\tprivate isNotebookActionContext(context?: unknown): context is INotebookActionContext {\n\t\treturn !!context && !!(context as INotebookActionContext).notebookEditor;\n\t}\n\n\tgetEditorContextFromArgsOrActive(accessor: ServicesAccessor, context?: any, ...additionalArgs: any[]): INotebookActionContext | undefined {\n\t\treturn getContextFromActiveEditor(accessor.get(IEditorService));\n\t}\n}\n\n// todo@rebornix, replace NotebookAction with this\nexport abstract class NotebookMultiCellAction extends Action2 {\n\tconstructor(desc: IAction2Options) {\n\t\tif (desc.f1 !== false) {\n\t\t\tdesc.f1 = false;\n\t\t\tconst f1Menu = {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: NOTEBOOK_IS_ACTIVE_EDITOR\n\t\t\t};\n\n\t\t\tif (!desc.menu) {\n\t\t\t\tdesc.menu = [];\n\t\t\t} else if (!Array.isArray(desc.menu)) {\n\t\t\t\tdesc.menu = [desc.menu];\n\t\t\t}\n\n\t\t\tdesc.menu = [\n\t\t\t\t...desc.menu,\n\t\t\t\tf1Menu\n\t\t\t];\n\t\t}\n\n\t\tdesc.category = NOTEBOOK_ACTIONS_CATEGORY;\n\n\t\tsuper(desc);\n\t}\n\n\tparseArgs(accessor: ServicesAccessor, ...args: any[]): INotebookCommandContext | undefined {\n\t\treturn undefined;\n\t}\n\n\tabstract runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void>;\n\n\tprivate isCellToolbarContext(context?: unknown): context is INotebookCellToolbarActionContext {\n\t\treturn !!context && !!(context as INotebookActionContext).notebookEditor && (context as any).$mid === MarshalledId.NotebookCellActionContext;\n\t}\n\tprivate isEditorContext(context?: unknown): boolean {\n\t\treturn !!context && (context as IEditorCommandsContext).groupId !== undefined;\n\t}\n\n\t/**\n\t * The action/command args are resolved in following order\n\t * `run(accessor, cellToolbarContext)` from cell toolbar\n\t * `run(accessor, ...args)` from command service with arguments\n\t * `run(accessor, undefined)` from keyboard shortcuts, command palatte, etc\n\t */\n\tasync run(accessor: ServicesAccessor, ...additionalArgs: any[]): Promise<void> {\n\t\tconst context = additionalArgs[0];\n\t\tconst isFromCellToolbar = this.isCellToolbarContext(context);\n\t\tconst isFromEditorToolbar = this.isEditorContext(context);\n\t\tconst from = isFromCellToolbar ? 'cellToolbar' : (isFromEditorToolbar ? 'editorToolbar' : 'other');\n\t\tconst telemetryService = accessor.get(ITelemetryService);\n\n\t\tif (isFromCellToolbar) {\n\t\t\ttelemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id: this.desc.id, from: from });\n\t\t\treturn this.runWithContext(accessor, context);\n\t\t}\n\n\t\t// handle parsed args\n\n\t\tconst parsedArgs = this.parseArgs(accessor, ...additionalArgs);\n\t\tif (parsedArgs) {\n\t\t\ttelemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id: this.desc.id, from: from });\n\t\t\treturn this.runWithContext(accessor, parsedArgs);\n\t\t}\n\n\t\t// no parsed args, try handle active editor\n\t\tconst editor = getEditorFromArgsOrActivePane(accessor);\n\t\tif (editor) {\n\t\t\ttelemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id: this.desc.id, from: from });\n\n\t\t\treturn this.runWithContext(accessor, {\n\t\t\t\tui: false,\n\t\t\t\tnotebookEditor: editor,\n\t\t\t\tselectedCells: cellRangeToViewCells(editor, editor.getSelections())\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport abstract class NotebookCellAction<T = INotebookCellActionContext> extends NotebookAction {\n\tprotected isCellActionContext(context?: unknown): context is INotebookCellActionContext {\n\t\treturn !!context && !!(context as INotebookCellActionContext).notebookEditor && !!(context as INotebookCellActionContext).cell;\n\t}\n\n\tprotected getCellContextFromArgs(accessor: ServicesAccessor, context?: T, ...additionalArgs: any[]): INotebookCellActionContext | undefined {\n\t\treturn undefined;\n\t}\n\n\toverride async run(accessor: ServicesAccessor, context?: INotebookCellActionContext, ...additionalArgs: any[]): Promise<void> {\n\t\tif (this.isCellActionContext(context)) {\n\t\t\tconst telemetryService = accessor.get(ITelemetryService);\n\t\t\ttelemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id: this.desc.id, from: 'cellToolbar' });\n\n\t\t\treturn this.runWithContext(accessor, context);\n\t\t}\n\n\t\tconst contextFromArgs = this.getCellContextFromArgs(accessor, context, ...additionalArgs);\n\n\t\tif (contextFromArgs) {\n\t\t\treturn this.runWithContext(accessor, contextFromArgs);\n\t\t}\n\n\t\tconst activeEditorContext = this.getEditorContextFromArgsOrActive(accessor);\n\t\tif (this.isCellActionContext(activeEditorContext)) {\n\t\t\treturn this.runWithContext(accessor, activeEditorContext);\n\t\t}\n\t}\n\n\tabstract override runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext): Promise<void>;\n}\n\nexport const executeNotebookCondition = ContextKeyExpr.or(ContextKeyExpr.greater(NOTEBOOK_KERNEL_COUNT.key, 0), ContextKeyExpr.greater(NOTEBOOK_KERNEL_SOURCE_COUNT.key, 0));\n\ninterface IMultiCellArgs {\n\tranges: ICellRange[];\n\tdocument?: URI;\n\tautoReveal?: boolean;\n}\n\nfunction isMultiCellArgs(arg: unknown): arg is IMultiCellArgs {\n\tif (arg === undefined) {\n\t\treturn false;\n\t}\n\tconst ranges = (arg as IMultiCellArgs).ranges;\n\tif (!ranges) {\n\t\treturn false;\n\t}\n\n\tif (!Array.isArray(ranges) || ranges.some(range => !isICellRange(range))) {\n\t\treturn false;\n\t}\n\n\tif ((arg as IMultiCellArgs).document) {\n\t\tconst uri = URI.revive((arg as IMultiCellArgs).document);\n\n\t\tif (!uri) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function getEditorFromArgsOrActivePane(accessor: ServicesAccessor, context?: UriComponents): IActiveNotebookEditor | undefined {\n\tconst editorFromUri = getContextFromUri(accessor, context)?.notebookEditor;\n\n\tif (editorFromUri) {\n\t\treturn editorFromUri;\n\t}\n\n\tconst editor = getNotebookEditorFromEditorPane(accessor.get(IEditorService).activeEditorPane);\n\tif (!editor || !editor.hasModel()) {\n\t\treturn;\n\t}\n\n\treturn editor;\n}\n\nexport function parseMultiCellExecutionArgs(accessor: ServicesAccessor, ...args: any[]): INotebookCommandContext | undefined {\n\tconst firstArg = args[0];\n\n\tif (isMultiCellArgs(firstArg)) {\n\t\tconst editor = getEditorFromArgsOrActivePane(accessor, firstArg.document);\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ranges = firstArg.ranges;\n\t\tconst selectedCells = ranges.map(range => editor.getCellsInRange(range).slice(0)).flat();\n\t\tconst autoReveal = firstArg.autoReveal;\n\t\treturn {\n\t\t\tui: false,\n\t\t\tnotebookEditor: editor,\n\t\t\tselectedCells,\n\t\t\tautoReveal\n\t\t};\n\t}\n\n\t// handle legacy arguments\n\tif (isICellRange(firstArg)) {\n\t\t// cellRange, document\n\t\tconst secondArg = args[1];\n\t\tconst editor = getEditorFromArgsOrActivePane(accessor, secondArg);\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tui: false,\n\t\t\tnotebookEditor: editor,\n\t\t\tselectedCells: editor.getCellsInRange(firstArg)\n\t\t};\n\t}\n\n\t// let's just execute the active cell\n\tconst context = getContextFromActiveEditor(accessor.get(IEditorService));\n\treturn context ? {\n\t\tui: false,\n\t\tnotebookEditor: context.notebookEditor,\n\t\tselectedCells: context.selectedCells ?? []\n\t} : undefined;\n}\n\nexport const cellExecutionArgs: ReadonlyArray<{\n\treadonly name: string;\n\treadonly isOptional?: boolean;\n\treadonly description?: string;\n\treadonly constraint?: TypeConstraint;\n\treadonly schema?: IJSONSchema;\n}> = [\n\t\t{\n\t\t\tisOptional: true,\n\t\t\tname: 'options',\n\t\t\tdescription: 'The cell range options',\n\t\t\tschema: {\n\t\t\t\t'type': 'object',\n\t\t\t\t'required': ['ranges'],\n\t\t\t\t'properties': {\n\t\t\t\t\t'ranges': {\n\t\t\t\t\t\t'type': 'array',\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t\t\t'required': ['start', 'end'],\n\t\t\t\t\t\t\t\t'properties': {\n\t\t\t\t\t\t\t\t\t'start': {\n\t\t\t\t\t\t\t\t\t\t'type': 'number'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t'end': {\n\t\t\t\t\t\t\t\t\t\t'type': 'number'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t'document': {\n\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t'description': 'The document uri',\n\t\t\t\t\t},\n\t\t\t\t\t'autoReveal': {\n\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t'description': 'Whether the cell should be revealed into view automatically'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t];\n\n\nMenuRegistry.appendMenuItem(MenuId.NotebookCellTitle, {\n\tsubmenu: MenuId.NotebookCellInsert,\n\ttitle: localize('notebookMenu.insertCell', \"Insert Cell\"),\n\tgroup: CellOverflowToolbarGroups.Insert,\n\twhen: NOTEBOOK_EDITOR_EDITABLE.isEqualTo(true)\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n\tsubmenu: MenuId.NotebookCellTitle,\n\ttitle: localize('notebookMenu.cellTitle', \"Notebook Cell\"),\n\tgroup: CellOverflowToolbarGroups.Insert,\n\twhen: NOTEBOOK_EDITOR_FOCUSED\n});\n\nMenuRegistry.appendMenuItem(MenuId.NotebookCellTitle, {\n\ttitle: localize('miShare', \"Share\"),\n\tsubmenu: MenuId.EditorContextShare,\n\tgroup: CellOverflowToolbarGroups.Share\n});\n"]}