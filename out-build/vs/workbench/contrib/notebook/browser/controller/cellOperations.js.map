{"version":3,"sources":["vs/workbench/contrib/notebook/browser/controller/cellOperations.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAkBzF,KAAK,UAAU,IAAI,CAAa,IAAc,EAAE,OAA+B,EAAE,QAAiB,EAAE,IAAa;QACvH,MAAM,EAAE,cAAc,EAAE,GAAG,OAAO,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE;YAC/B,OAAO;SACP;QAED,IAAI,cAAc,CAAC,UAAU,EAAE;YAC9B,OAAO;SACP;QAED,IAAI,OAAO,CAAC,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE;YAC/B,iBAAiB;YACjB,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC;YAEzB,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;gBAC3B,OAAO;aACP;YAED,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC5B,MAAM,GAAG,GAAG,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAE9C,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC3B,MAAM,kBAAkB,GAAG,cAAc,CAAC,YAAY,EAAE,kBAAkB,IAAI,EAAE,CAAC;gBACjF,QAAQ,GAAG,kBAAkB,CAAC,CAAC,CAAC,IAAI,mBAAG,CAAmB;aAC1D;YAED,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC;gBACnC;oBACC,QAAQ,8BAAsB;oBAC9B,KAAK,EAAE,GAAG;oBACV,KAAK,EAAE,CAAC;oBACR,KAAK,EAAE,CAAC;4BACP,QAAQ,EAAE,IAAI;4BACd,MAAM,EAAE,IAAI;4BACZ,QAAQ,EAAE,QAAS;4BACnB,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI;4BACvB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;4BAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;yBACvB,CAAC;iBACF;aACD,EAAE,IAAI,EAAE;gBACR,IAAI,EAAE,mCAAkB,CAAC,KAAK;gBAC9B,KAAK,EAAE,cAAc,CAAC,QAAQ,EAAE;gBAChC,UAAU,EAAE,cAAc,CAAC,aAAa,EAAE;aAC1C,EAAE,GAAG,EAAE;gBACP,OAAO;oBACN,IAAI,EAAE,mCAAkB,CAAC,KAAK;oBAC9B,KAAK,EAAE,cAAc,CAAC,QAAQ,EAAE;oBAChC,UAAU,EAAE,cAAc,CAAC,aAAa,EAAE;iBAC1C,CAAC;YACH,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;YACpB,MAAM,OAAO,GAAG,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC3C,MAAM,cAAc,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,KAAK,+BAAa,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;SACxH;aAAM,IAAI,OAAO,CAAC,aAAa,EAAE;YACjC,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;YAC5C,MAAM,QAAQ,GAAyB,EAAE,CAAC;YAE1C,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC5B,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;oBAC3B,OAAO;iBACP;gBACD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAC5B,MAAM,GAAG,GAAG,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBAE9C,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC3B,MAAM,kBAAkB,GAAG,cAAc,CAAC,YAAY,EAAE,kBAAkB,IAAI,EAAE,CAAC;oBACjF,QAAQ,GAAG,kBAAkB,CAAC,CAAC,CAAC,IAAI,mBAAG,CAAmB;iBAC1D;gBAED,QAAQ,CAAC,IAAI,CACZ;oBACC,QAAQ,8BAAsB;oBAC9B,KAAK,EAAE,GAAG;oBACV,KAAK,EAAE,CAAC;oBACR,KAAK,EAAE,CAAC;4BACP,QAAQ,EAAE,IAAI;4BACd,MAAM,EAAE,IAAI;4BACZ,QAAQ,EAAE,QAAS;4BACnB,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI;4BACvB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;4BAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;yBACvB,CAAC;iBACF,CACD,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE;gBACnD,IAAI,EAAE,mCAAkB,CAAC,KAAK;gBAC9B,KAAK,EAAE,cAAc,CAAC,QAAQ,EAAE;gBAChC,UAAU,EAAE,cAAc,CAAC,aAAa,EAAE;aAC1C,EAAE,GAAG,EAAE;gBACP,OAAO;oBACN,IAAI,EAAE,mCAAkB,CAAC,KAAK;oBAC9B,KAAK,EAAE,cAAc,CAAC,QAAQ,EAAE;oBAChC,UAAU,EAAE,cAAc,CAAC,aAAa,EAAE;iBAC1C,CAAC;YACH,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;SACpB;IACF,CAAC;IAlGD,oBAkGC;IAED,SAAgB,IAAI,CAAY,MAA6B,EAAE,IAAoB;QAClF,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACnC,MAAM,UAAU,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;QAC1C,MAAM,eAAe,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAClD,MAAM,mBAAmB,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,IAAI,eAAe,IAAI,eAAe,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QAEhI,MAAM,eAAe,GAAG,CAAC,MAAM,CAAC,UAAU,IAAI,SAAS,CAAC,QAAQ,KAAK,aAAa,CAAC;QACnF,IAAI,mBAAmB,EAAE;YACxB,MAAM,KAAK,GAAuB,UAAU,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBACxE,QAAQ,8BAAsB,EAAE,KAAK,EAAE,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;aACzG,CAAC,CAAC,CAAC;YAEJ,MAAM,gCAAgC,GAAG,mBAAmB,CAAC,GAAG,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;YAE5I,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,MAAM,CAAC,aAAa,EAAE,EAAE,EAAE,GAAG,EAAE;gBACxI,IAAI,gCAAgC,EAAE;oBACrC,MAAM,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,gCAAgC,CAAC,MAAM,CAAC,CAAC;oBAC7G,OAAO,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;iBACnJ;qBAAM;oBACN,IAAI,SAAS,CAAC,MAAM,EAAE;wBACrB,MAAM,aAAa,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;wBAC3C,OAAO,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,EAAE,aAAa,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,EAAE,aAAa,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;qBAEnK;yBAAM;wBACN,OAAO,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;qBAC3G;iBACD;YACF,CAAC,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;SAC/B;aAAM;YACN,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAChC,MAAM,KAAK,GAAuB,CAAC;oBAClC,QAAQ,8BAAsB,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE;iBAC3E,CAAC,CAAC;YAEH,MAAM,eAAe,GAAiB,EAAE,CAAC;YACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC3C,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAEhC,IAAI,SAAS,CAAC,GAAG,IAAI,eAAe,EAAE;oBACrC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAChC;qBAAM,IAAI,SAAS,CAAC,KAAK,GAAG,eAAe,EAAE;oBAC7C,eAAe,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;iBAC7E;qBAAM;oBACN,eAAe,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,EAAE,eAAe,GAAG,CAAC,EAAE,CAAC,CAAC;iBAC3E;aACD;YAED,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;gBACxC,+DAA+D;gBAC/D,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,KAAK,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;gBAEzG,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,MAAM,CAAC,aAAa,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;oBAC1I,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,eAAe;iBAC5E,CAAC,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;aAChC;iBAAM;gBACN,+DAA+D;gBAC/D,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;gBAExG,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,MAAM,CAAC,aAAa,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;oBAC1I,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,eAAe;iBAC5E,CAAC,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;aAChC;SACD;IACF,CAAC;IA/DD,oBA+DC;IAEM,KAAK,UAAU,IAAI,CAAU,OAAmC,EAAE,SAAwB;QAChG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE;YACvC,OAAO;SACP;QACD,MAAM,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC;QACtC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAEnC,IAAI,MAAM,CAAC,UAAU,EAAE;YACtB,OAAO;SACP;QAED,MAAM,UAAU,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;QAC1C,MAAM,WAAW,GAAG,IAAA,sBAAI,EAA4B,MAAM,EAAE,UAAU,CAAC,CAAC;QACxE,MAAM,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,GAAG,EAAE;YACxC,OAAO;SACP;QAED,IAAI,SAAS,KAAK,IAAI,EAAE;YACvB,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO;aACP;YAED,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;YACnC,MAAM,cAAc,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;YACtE,MAAM,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;YAChD,MAAM,QAAQ,GAAG,IAAA,mBAAG,EAAe,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC;YACjJ,SAAS,CAAC,UAAU,CAAC;gBACpB;oBACC,QAAQ,2BAAmB;oBAC3B,KAAK,EAAE,UAAU;oBACjB,MAAM,EAAE,CAAC;oBACT,MAAM,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC;iBACrB;aAAC,EACF,IAAI,EACJ;gBACC,IAAI,EAAE,mCAAkB,CAAC,KAAK;gBAC9B,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE;gBACxB,UAAU,EAAE,MAAM,CAAC,aAAa,EAAE;aAClC,EACD,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,EACzF,SAAS,EACT,IAAI,CACJ,CAAC;YACF,MAAM,UAAU,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;YAClE,MAAM,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;SACzC;aAAM;YACN,IAAI,KAAK,CAAC,GAAG,IAAI,SAAS,CAAC,MAAM,EAAE;gBAClC,OAAO;aACP;YAED,MAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC;YAC7B,MAAM,cAAc,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;YACtE,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAChC,MAAM,QAAQ,GAAG,IAAA,mBAAG,EAAe,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC;YAErJ,SAAS,CAAC,UAAU,CAAC;gBACpB;oBACC,QAAQ,2BAAmB;oBAC3B,KAAK,EAAE,UAAU;oBACjB,MAAM,EAAE,CAAC;oBACT,MAAM,EAAE,KAAK,CAAC,KAAK;iBACnB;aAAC,EACF,IAAI,EACJ;gBACC,IAAI,EAAE,mCAAkB,CAAC,KAAK;gBAC9B,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE;gBACxB,UAAU,EAAE,MAAM,CAAC,aAAa,EAAE;aAClC,EACD,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,EACzF,SAAS,EACT,IAAI,CACJ,CAAC;YAEF,MAAM,UAAU,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;YAClE,MAAM,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;SACzC;IACF,CAAC;IA7ED,oBA6EC;IAEM,KAAK,UAAU,IAAI,CAAU,OAAmC,EAAE,SAAwB;QAChG,MAAM,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;YACvB,OAAO;SACP;QAED,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAEnC,IAAI,MAAM,CAAC,UAAU,EAAE;YACtB,OAAO;SACP;QAED,IAAI,KAAK,GAA2B,SAAS,CAAC;QAE9C,IAAI,OAAO,CAAC,EAAE,EAAE;YACf,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;YAChC,MAAM,eAAe,GAAG,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YACxD,KAAK,GAAG,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,EAAE,eAAe,GAAG,CAAC,EAAE,CAAC;SAC7D;aAAM;YACN,MAAM,UAAU,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;YAC1C,MAAM,WAAW,GAAG,IAAA,sBAAI,EAA4B,MAAM,EAAE,UAAU,CAAC,CAAC;YACxE,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;SACvB;QAED,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,GAAG,EAAE;YACxC,OAAO;SACP;QAED,IAAI,SAAS,KAAK,IAAI,EAAE;YACvB,mDAAmD;YACnD,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAChC,MAAM,UAAU,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;YAC1C,SAAS,CAAC,UAAU,CAAC;gBACpB;oBACC,QAAQ,8BAAsB;oBAC9B,KAAK,EAAE,KAAK,CAAC,GAAG;oBAChB,KAAK,EAAE,CAAC;oBACR,KAAK,EAAE,IAAA,mBAAG,EAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAA,2BAAG,EAAwB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAE,CAAC,KAAK,CAAC,CAAC;iBACzG;aAAC,EACF,IAAI,EACJ;gBACC,IAAI,EAAE,mCAAkB,CAAC,KAAK;gBAC9B,KAAK,EAAE,KAAK;gBACZ,UAAU,EAAE,UAAU;aACtB,EACD,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,EAChF,SAAS,EACT,IAAI,CACJ,CAAC;SACF;aAAM;YACN,+BAA+B;YAC/B,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAChC,MAAM,UAAU,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;YAC1C,MAAM,QAAQ,GAAG,IAAA,mBAAG,EAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAA,2BAAG,EAAwB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACpH,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;YACnC,MAAM,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,UAAU,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,UAAU,EAAE,CAAC;YACvG,MAAM,aAAa,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,UAAU,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,UAAU,EAAE,CAAC,CAAC;YACnH,SAAS,CAAC,UAAU,CAAC;gBACpB;oBACC,QAAQ,8BAAsB;oBAC9B,KAAK,EAAE,KAAK,CAAC,GAAG;oBAChB,KAAK,EAAE,CAAC;oBACR,KAAK,EAAE,IAAA,mBAAG,EAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAA,2BAAG,EAAwB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAE,CAAC,KAAK,CAAC,CAAC;iBACzG;aAAC,EACF,IAAI,EACJ;gBACC,IAAI,EAAE,mCAAkB,CAAC,KAAK;gBAC9B,KAAK,EAAE,KAAK;gBACZ,UAAU,EAAE,UAAU;aACtB,EACD,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,aAAa,EAAE,CAAC,EACtF,SAAS,EACT,IAAI,CACJ,CAAC;YAEF,MAAM,UAAU,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;YAClE,MAAM,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;SACzC;IACF,CAAC;IA9ED,oBA8EC;IAEM,KAAK,UAAU,IAAI,CAAc,eAAoB,EAAe,mBAAwB,EAAmB,OAAmC;QACxJ,MAAM,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC;QACtC,IAAI,MAAM,CAAC,UAAU,EAAE;YACtB,OAAO;SACP;QAED,MAAM,KAAK,GAAmB,EAAE,CAAC;QACjC,MAAM,KAAK,GAAqB,EAAE,CAAC;QACnC,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,aAAa,EAAE,EAAE;YAC/C,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;SACjD;QAED,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACtB,OAAO;SACP;QAED,0CAA0C;QAC1C,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QACnC,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;QACnE,IAAI,CAAC,UAAU,EAAE;YAChB,uCAAuC;YACvC,wBAAwB;YACxB,MAAM,OAAO,GAAG,IAAA,cAAQ,EAAC,CAAmC,EAAE,IAAsC,CAAC,CAAC;YACtG,OAAO,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACzC;QAED,0CAA0C;QAC1C,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;QAC5F,MAAM,cAAc,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;QACjD,KAAK,CAAC,IAAI,CACT,IAAI,oBAAI,CAAqB,MAAM,CAAC,SAAS,CAAC,GAAG,EAChD;YACC,QAAQ,8BAAsB;YAC9B,KAAK,EAAE,cAAc,CAAC,KAAK;YAC3B,KAAK,EAAE,cAAc,CAAC,GAAG,GAAG,cAAc,CAAC,KAAK;YAChD,KAAK,EAAE,CAAC;oBACP,QAAQ,EAAE,SAAS,CAAC,QAAQ;oBAC5B,MAAM,EAAE,aAAa;oBACrB,QAAQ,EAAE,SAAS,CAAC,QAAQ;oBAC5B,IAAI,EAAE,SAAS,CAAC,IAAI;oBACpB,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,OAAO;oBAChC,QAAQ,EAAE,SAAS,CAAC,QAAQ;iBAC5B,CAAC;SACF,CACD,CACD,CAAC;QAEF,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YACxD,KAAK,CAAC,IAAI,CAAC,IAAI,oBAAI,CAAqB,MAAM,CAAC,SAAS,CAAC,GAAG,EAC3D;gBACC,QAAQ,8BAAsB;gBAC9B,KAAK,EAAE,SAAS,CAAC,KAAK;gBACtB,KAAK,EAAE,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,KAAK;gBACtC,KAAK,EAAE,EAAE;aACT,CAAC,CAAC,CAAC;SACL;QAED,IAAI,KAAK,CAAC,MAAM,EAAE;YACjB,MAAM,eAAe,CAAC,KAAK,CAC1B,KAAK,EACL,EAAE,aAAa,EAAE,IAAA,cAAQ,EAAC,CAAyC,EAAE,IAAqB,CAAC,EAAE,CAC7F,CAAC;SACF;IACF,CAAC;IAhED,oBAgEC;IAEM,KAAK,UAAU,IAAI,CAAc,MAA6B,EAAE,KAAiB,EAAE,SAA4B,EAAE,UAAqB;QAC5I,IAAI,MAAM,CAAC,UAAU,EAAE;YACtB,OAAO,IAAI,CAAC;SACZ;QAED,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACnC,MAAM,KAAK,GAAG,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAE5C,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAClB,OAAO,IAAI,CAAC;SACZ;QAED,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,SAAS,KAAK,OAAO,EAAE;YAC/C,OAAO,IAAI,CAAC;SACZ;QAED,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,CAAC,MAAM,IAAI,SAAS,KAAK,OAAO,EAAE;YAC5D,OAAO,IAAI,CAAC;SACZ;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAEtB,IAAI,UAAU,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;gBAC/C,OAAO,IAAI,CAAC;aACZ;SACD;QAED,IAAI,SAAS,KAAK,OAAO,EAAE;YAC1B,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAkB,CAAC;YAC9D,IAAI,UAAU,IAAI,KAAK,CAAC,QAAQ,KAAK,UAAU,EAAE;gBAChD,OAAO,IAAI,CAAC;aACZ;YAED,MAAM,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACpG,MAAM,kBAAkB,GAAG,KAAK,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;YAC3D,MAAM,0BAA0B,GAAG,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;YAEtF,OAAO;gBACN,KAAK,EAAE;oBACN,IAAI,qBAAG,CAAc,KAAK,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,WAAG,CAAG,kBAAkB,EAAE,0BAA0B,GAAG,CAAC,EAAE,kBAAkB,EAAE,0BAA0B,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;oBAClL,IAAI,oBAAI,CAAqB,SAAS,CAAC,GAAG,EACzC;wBACC,QAAQ,8BAAsB;wBAC9B,KAAK,EAAE,KAAK,CAAC,KAAK;wBAClB,KAAK,EAAE,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK;wBAC9B,KAAK,EAAE,EAAE;qBACT,CACD;iBACD;gBACD,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE;gBACtD,aAAa,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC;aAC7D,CAAC;SACF;aAAM;YACN,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAkB,CAAC;YACxD,IAAI,UAAU,IAAI,KAAK,CAAC,QAAQ,KAAK,UAAU,EAAE;gBAChD,OAAO,IAAI,CAAC;aACZ;YAED,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,MAAM,SAAS,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAC7C,MAAM,aAAa,GAAG,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAElG,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;YACrD,MAAM,qBAAqB,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YAE3E,OAAO;gBACN,KAAK,EAAE;oBACN,IAAI,qBAAG,CAAc,IAAI,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,WAAG,CAAG,aAAa,EAAE,qBAAqB,GAAG,CAAC,EAAE,aAAa,EAAE,qBAAqB,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;oBAC7J,IAAI,oBAAI,CAAqB,SAAS,CAAC,GAAG,EACzC;wBACC,QAAQ,8BAAsB;wBAC9B,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC;wBACtB,KAAK,EAAE,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK;wBAC9B,KAAK,EAAE,EAAE;qBACT,CACD;iBACD;gBACD,IAAI;gBACJ,QAAQ,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE;gBACtD,aAAa,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC;aAC7D,CAAC;SACF;IACF,CAAC;IApFD,oBAoFC;IAEM,KAAK,UAAU,IAAI,CAAmB,eAAoB,EAAe,OAAmC,EAAE,SAA4B;QAChJ,MAAM,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC;QACtC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACnC,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAU,CAAc;QAC7D,IAAI,GAAG,GAKI,IAAI,CAAC;QAEhB,IAAI,OAAO,CAAC,EAAE,EAAE;YACf,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;YACzC,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACpD,GAAG,GAAG,MAAM,IAAI,CAAc,MAAM,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;YAC3F,IAAI,CAAC,GAAG,EAAE;gBACT,OAAO;aACP;YAED,MAAM,eAAe,CAAC,KAAK,CAC1B,GAAG,EAAE,KAAK,EACV,EAAE,aAAa,EAAE,qBAAqB,EAAE,CACxC,CAAC;YACF,SAAS,CAAC,qBAAqB,CAAC,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;YACxH,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,+BAAa,CAAC,OAAO,EAAE,wBAAwB,CAAC,CAAC;YAC1E,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;YAChD,IAAI,SAAS,KAAK,+BAAa,CAAC,MAAM,EAAE;gBACvC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,+BAAa,CAAC,MAAM,CAAC;aAC1C;SACD;aAAM;YACN,MAAM,UAAU,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;YAC1C,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACvB,OAAO;aACP;YAED,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAChC,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC;YAExD,MAAM,KAAK,GAAmB,EAAE,CAAC;YACjC,IAAI,IAAI,GAA0B,IAAI,CAAC;YACvC,MAAM,KAAK,GAAqB,EAAE,CAAC;YAEnC,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBAChD,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,YAAY,GAAG,IAAA,mBAAG,EAAe,SAAS,EAAE,KAAK,CAAC,CAAC;gBAEzD,IACC,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,MAAM,IAAI,SAAS,KAAK,OAAO;uBACvD,SAAS,CAAC,KAAK,KAAK,CAAC,IAAI,SAAS,KAAK,OAAO,EAChD;oBACD,IAAI,YAAY,EAAE;wBACjB,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC;qBACnC;oBAED,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;oBACjD,SAAS;iBACT;gBAED,MAAM,SAAS,GAAG,MAAM,IAAI,CAAc,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBAExE,IAAI,CAAC,SAAS,EAAE;oBACf,OAAO;iBACP;gBAED,KAAK,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAE3B,IAAI,YAAY,EAAE;oBACjB,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;iBACtB;aACD;YAED,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBAClB,OAAO;aACP;YAED,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBAC3B,OAAO;aACP;YAED,MAAM,eAAe,CAAC,KAAK,CAC1B,KAAK,EACL,EAAE,aAAa,EAAE,qBAAqB,EAAE,CACxC,CAAC;YAEF,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACpB,IAAI,CAAC,eAAe,CAAC,+BAAa,CAAC,OAAO,EAAE,wBAAwB,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;YAEH,SAAS,CAAC,qBAAqB,CAAC,EAAE,IAAI,EAAE,mCAAkB,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACvI,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;YAChD,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC;YAC9D,IAAI,SAAS,KAAK,+BAAa,CAAC,MAAM,IAAI,cAAc,EAAE;gBACzD,cAAc,CAAC,SAAS,GAAG,+BAAa,CAAC,MAAM,CAAC;aAChD;SACD;IACF,CAAC;IAhGD,oBAgGC;IAED,SAAS,wBAAwB,CAAC,WAAwB,EAAE,UAA+B;QAC1F,MAAM,UAAU,GAAgB,EAAE,CAAC;QACnC,MAAM,OAAO,GAAG,UAAU,CAAC,YAAY,EAAE,CAAC;QAC1C,MAAM,UAAU,GAAG,CAAC,UAAkB,EAAE,EAAE;YACzC,OAAO,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC7C,CAAC,CAAC;QAEF,iCAAiC;QACjC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACvC,MAAM,QAAQ,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;YAC7C,MAAM,UAAU,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;YACvC,OAAO,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,KAAK,IAAI,EAAE,IAAI,WAAW,EAAE;YAC3B,IAAI,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,iBAAiB,IAAI,EAAE,CAAC,UAAU,GAAG,OAAO,EAAE;gBAChH,EAAE,GAAG,IAAI,cAAG,CAAM,EAAE,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;aACxC;YACD,aAAa,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;SAC9B;QAED,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,OAAO,IAAI,CAAC;SACZ;QAED,0CAA0C;QAC1C,MAAM,UAAU,GAAG,IAAI,cAAG,CAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QACtC,MAAM,QAAQ,GAAG,IAAI,cAAG,CAAM,OAAO,EAAE,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAChE,OAAO,CAAC,UAAU,EAAE,GAAG,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAED,SAAS,aAAa,CAAC,SAAsB,EAAE,CAAY;QAC1D,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAChF,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE;YAC1E,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;IACF,CAAC;IAED,SAAgB,IAAI,CAAqB,IAAoB,EAAE,WAAwB;QACtF,MAAM,eAAe,GAAG,wBAAwB,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/E,IAAI,CAAC,eAAe,EAAE;YACrB,OAAO,IAAI,CAAC;SACZ;QACD,MAAM,aAAa,GAAa,EAAE,CAAC;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAChD,MAAM,KAAK,GAAG,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACrC,MAAM,GAAG,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YAE/B,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,WAAG,CAAG,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,0CAAkC,CAAC,CAAC;SAC5J;QAED,OAAO,aAAa,CAAC;IACtB,CAAC;IAdD,oBAcC;IAED,SAAgB,IAAI,CACnB,eAAoB,EACpB,MAA6B,EAC7B,KAAa,EACb,IAAc,EACd,YAA+B,OAAO,EACtC,cAAsB,EAAE,EACxB,KAAc,KAAK;QAEnB,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAU,CAAc;QAC7D,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACzC,IAAI,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE;YACjC,OAAO,IAAI,CAAC;SACZ;QAED,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAClC,MAAM,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;QAC5E,IAAI,QAAQ,CAAC;QACb,IAAI,IAAI,KAAK,yBAAQ,CAAC,IAAI,EAAE;YAC3B,MAAM,kBAAkB,GAAG,YAAY,EAAE,kBAAkB,IAAI,eAAe,CAAC,wBAAwB,EAAE,CAAC;YAC1G,MAAM,eAAe,GAAG,kBAAkB,CAAC,CAAC,CAAC,IAAI,mBAAG,CAAmB;YACvE,IAAI,IAAI,EAAE,QAAQ,KAAK,yBAAQ,CAAC,IAAI,EAAE;gBACrC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aACzB;iBAAM,IAAI,IAAI,EAAE,QAAQ,KAAK,yBAAQ,CAAC,MAAM,EAAE;gBAC9C,MAAM,oBAAoB,GAAG,SAAS,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBACnE,IAAI,oBAAoB,GAAG,CAAC,CAAC,EAAE;oBAC9B,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAAE,CAAC,QAAQ,CAAC;iBAC5D;qBAAM;oBACN,QAAQ,GAAG,eAAe,CAAC;iBAC3B;aACD;iBAAM;gBACN,IAAI,IAAI,KAAK,SAAS,IAAI,SAAS,KAAK,OAAO,EAAE;oBAChD,8BAA8B;oBAC9B,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,yBAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,IAAI,eAAe,CAAC;iBAC1G;qBAAM;oBACN,QAAQ,GAAG,eAAe,CAAC;iBAC3B;aACD;YAED,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAC3C,gCAAgC;gBAChC,QAAQ,GAAG,eAAe,CAAC;aAC3B;SACD;aAAM;YACN,QAAQ,GAAG,UAAU,CAAC;SACtB;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC;YACzB,CAAC,SAAS,KAAK,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7C,KAAK,CAAC;QACP,OAAO,IAAI,CAAc,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1G,CAAC;IAnDD,oBAmDC;IAED,SAAgB,IAAI,CAAc,SAAe,EAAe,KAAa,EAAE,MAAc,EAAE,QAAgB,EAAE,IAAc,EAAE,QAA0C,EAAE,OAAqB,EAAE,WAAoB,EAAE,YAAqB;QAC9O,MAAM,aAAa,GAAoB,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;QACnK,SAAS,CAAC,gBAAgB,CAAC,UAAU,CAAC;YACrC;gBACC,QAAQ,8BAAsB;gBAC9B,KAAK;gBACL,KAAK,EAAE,CAAC;gBACR,KAAK,EAAE;oBACN;wBACC,QAAQ,EAAE,IAAI;wBACd,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,OAAO;wBAChB,QAAQ,EAAE,QAAQ;wBAClB,MAAM,EAAE,MAAM;qBACd;iBACD;aACD;SACD,EAAE,WAAW,EAAE,EAAE,IAAI,EAAE,mCAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,SAAS,CAAC,aAAa,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,YAAY,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACvM,OAAO,SAAS,CAAC,MAAM,CAAC,KAAK,CAAE,CAAC;IACjC,CAAC;IApBD,oBAoBC","file":"cellOperations.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IBulkEditService, ResourceEdit, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EndOfLinePreference, IReadonlyTextBuffer } from 'vs/editor/common/model';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { ResourceNotebookCellEdit } from 'vs/workbench/contrib/bulkEdit/browser/bulkCellEdits';\nimport { INotebookActionContext, INotebookCellActionContext } from 'vs/workbench/contrib/notebook/browser/controller/coreActions';\nimport { CellEditState, CellFocusMode, expandCellRangesWithHiddenCells, IActiveNotebookEditor, ICellViewModel } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellViewModel, NotebookViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/notebookViewModelImpl';\nimport { cloneNotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\nimport { CellEditType, CellKind, ICellEditOperation, ICellReplaceEdit, IOutputDto, ISelectionState, NotebookCellMetadata, SelectionStateType } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { cellRangeContains, cellRangesToIndexes, ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { localize } from 'vs/nls';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\n\nexport async function changeCellToKind(kind: CellKind, context: INotebookActionContext, language?: string, mime?: string): Promise<void> {\n\tconst { notebookEditor } = context;\n\tif (!notebookEditor.hasModel()) {\n\t\treturn;\n\t}\n\n\tif (notebookEditor.isReadOnly) {\n\t\treturn;\n\t}\n\n\tif (context.ui && context.cell) {\n\t\t// action from UI\n\t\tconst { cell } = context;\n\n\t\tif (cell.cellKind === kind) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst text = cell.getText();\n\t\tconst idx = notebookEditor.getCellIndex(cell);\n\n\t\tif (language === undefined) {\n\t\t\tconst availableLanguages = notebookEditor.activeKernel?.supportedLanguages ?? [];\n\t\t\tlanguage = availableLanguages[0] ?? PLAINTEXT_LANGUAGE_ID;\n\t\t}\n\n\t\tnotebookEditor.textModel.applyEdits([\n\t\t\t{\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex: idx,\n\t\t\t\tcount: 1,\n\t\t\t\tcells: [{\n\t\t\t\t\tcellKind: kind,\n\t\t\t\t\tsource: text,\n\t\t\t\t\tlanguage: language!,\n\t\t\t\t\tmime: mime ?? cell.mime,\n\t\t\t\t\toutputs: cell.model.outputs,\n\t\t\t\t\tmetadata: cell.metadata,\n\t\t\t\t}]\n\t\t\t}\n\t\t], true, {\n\t\t\tkind: SelectionStateType.Index,\n\t\t\tfocus: notebookEditor.getFocus(),\n\t\t\tselections: notebookEditor.getSelections()\n\t\t}, () => {\n\t\t\treturn {\n\t\t\t\tkind: SelectionStateType.Index,\n\t\t\t\tfocus: notebookEditor.getFocus(),\n\t\t\t\tselections: notebookEditor.getSelections()\n\t\t\t};\n\t\t}, undefined, true);\n\t\tconst newCell = notebookEditor.cellAt(idx);\n\t\tawait notebookEditor.focusNotebookCell(newCell, cell.getEditState() === CellEditState.Editing ? 'editor' : 'container');\n\t} else if (context.selectedCells) {\n\t\tconst selectedCells = context.selectedCells;\n\t\tconst rawEdits: ICellEditOperation[] = [];\n\n\t\tselectedCells.forEach(cell => {\n\t\t\tif (cell.cellKind === kind) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst text = cell.getText();\n\t\t\tconst idx = notebookEditor.getCellIndex(cell);\n\n\t\t\tif (language === undefined) {\n\t\t\t\tconst availableLanguages = notebookEditor.activeKernel?.supportedLanguages ?? [];\n\t\t\t\tlanguage = availableLanguages[0] ?? PLAINTEXT_LANGUAGE_ID;\n\t\t\t}\n\n\t\t\trawEdits.push(\n\t\t\t\t{\n\t\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\t\tindex: idx,\n\t\t\t\t\tcount: 1,\n\t\t\t\t\tcells: [{\n\t\t\t\t\t\tcellKind: kind,\n\t\t\t\t\t\tsource: text,\n\t\t\t\t\t\tlanguage: language!,\n\t\t\t\t\t\tmime: mime ?? cell.mime,\n\t\t\t\t\t\toutputs: cell.model.outputs,\n\t\t\t\t\t\tmetadata: cell.metadata,\n\t\t\t\t\t}]\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\tnotebookEditor.textModel.applyEdits(rawEdits, true, {\n\t\t\tkind: SelectionStateType.Index,\n\t\t\tfocus: notebookEditor.getFocus(),\n\t\t\tselections: notebookEditor.getSelections()\n\t\t}, () => {\n\t\t\treturn {\n\t\t\t\tkind: SelectionStateType.Index,\n\t\t\t\tfocus: notebookEditor.getFocus(),\n\t\t\t\tselections: notebookEditor.getSelections()\n\t\t\t};\n\t\t}, undefined, true);\n\t}\n}\n\nexport function runDeleteAction(editor: IActiveNotebookEditor, cell: ICellViewModel) {\n\tconst textModel = editor.textModel;\n\tconst selections = editor.getSelections();\n\tconst targetCellIndex = editor.getCellIndex(cell);\n\tconst containingSelection = selections.find(selection => selection.start <= targetCellIndex && targetCellIndex < selection.end);\n\n\tconst computeUndoRedo = !editor.isReadOnly || textModel.viewType === 'interactive';\n\tif (containingSelection) {\n\t\tconst edits: ICellReplaceEdit[] = selections.reverse().map(selection => ({\n\t\t\teditType: CellEditType.Replace, index: selection.start, count: selection.end - selection.start, cells: []\n\t\t}));\n\n\t\tconst nextCellAfterContainingSelection = containingSelection.end >= editor.getLength() ? undefined : editor.cellAt(containingSelection.end);\n\n\t\ttextModel.applyEdits(edits, true, { kind: SelectionStateType.Index, focus: editor.getFocus(), selections: editor.getSelections() }, () => {\n\t\t\tif (nextCellAfterContainingSelection) {\n\t\t\t\tconst cellIndex = textModel.cells.findIndex(cell => cell.handle === nextCellAfterContainingSelection.handle);\n\t\t\t\treturn { kind: SelectionStateType.Index, focus: { start: cellIndex, end: cellIndex + 1 }, selections: [{ start: cellIndex, end: cellIndex + 1 }] };\n\t\t\t} else {\n\t\t\t\tif (textModel.length) {\n\t\t\t\t\tconst lastCellIndex = textModel.length - 1;\n\t\t\t\t\treturn { kind: SelectionStateType.Index, focus: { start: lastCellIndex, end: lastCellIndex + 1 }, selections: [{ start: lastCellIndex, end: lastCellIndex + 1 }] };\n\n\t\t\t\t} else {\n\t\t\t\t\treturn { kind: SelectionStateType.Index, focus: { start: 0, end: 0 }, selections: [{ start: 0, end: 0 }] };\n\t\t\t\t}\n\t\t\t}\n\t\t}, undefined, computeUndoRedo);\n\t} else {\n\t\tconst focus = editor.getFocus();\n\t\tconst edits: ICellReplaceEdit[] = [{\n\t\t\teditType: CellEditType.Replace, index: targetCellIndex, count: 1, cells: []\n\t\t}];\n\n\t\tconst finalSelections: ICellRange[] = [];\n\t\tfor (let i = 0; i < selections.length; i++) {\n\t\t\tconst selection = selections[i];\n\n\t\t\tif (selection.end <= targetCellIndex) {\n\t\t\t\tfinalSelections.push(selection);\n\t\t\t} else if (selection.start > targetCellIndex) {\n\t\t\t\tfinalSelections.push({ start: selection.start - 1, end: selection.end - 1 });\n\t\t\t} else {\n\t\t\t\tfinalSelections.push({ start: targetCellIndex, end: targetCellIndex + 1 });\n\t\t\t}\n\t\t}\n\n\t\tif (editor.cellAt(focus.start) === cell) {\n\t\t\t// focus is the target, focus is also not part of any selection\n\t\t\tconst newFocus = focus.end === textModel.length ? { start: focus.start - 1, end: focus.end - 1 } : focus;\n\n\t\t\ttextModel.applyEdits(edits, true, { kind: SelectionStateType.Index, focus: editor.getFocus(), selections: editor.getSelections() }, () => ({\n\t\t\t\tkind: SelectionStateType.Index, focus: newFocus, selections: finalSelections\n\t\t\t}), undefined, computeUndoRedo);\n\t\t} else {\n\t\t\t// users decide to delete a cell out of current focus/selection\n\t\t\tconst newFocus = focus.start > targetCellIndex ? { start: focus.start - 1, end: focus.end - 1 } : focus;\n\n\t\t\ttextModel.applyEdits(edits, true, { kind: SelectionStateType.Index, focus: editor.getFocus(), selections: editor.getSelections() }, () => ({\n\t\t\t\tkind: SelectionStateType.Index, focus: newFocus, selections: finalSelections\n\t\t\t}), undefined, computeUndoRedo);\n\t\t}\n\t}\n}\n\nexport async function moveCellRange(context: INotebookCellActionContext, direction: 'up' | 'down'): Promise<void> {\n\tif (!context.notebookEditor.hasModel()) {\n\t\treturn;\n\t}\n\tconst editor = context.notebookEditor;\n\tconst textModel = editor.textModel;\n\n\tif (editor.isReadOnly) {\n\t\treturn;\n\t}\n\n\tconst selections = editor.getSelections();\n\tconst modelRanges = expandCellRangesWithHiddenCells(editor, selections);\n\tconst range = modelRanges[0];\n\tif (!range || range.start === range.end) {\n\t\treturn;\n\t}\n\n\tif (direction === 'up') {\n\t\tif (range.start === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst indexAbove = range.start - 1;\n\t\tconst finalSelection = { start: range.start - 1, end: range.end - 1 };\n\t\tconst focus = context.notebookEditor.getFocus();\n\t\tconst newFocus = cellRangeContains(range, focus) ? { start: focus.start - 1, end: focus.end - 1 } : { start: range.start - 1, end: range.start };\n\t\ttextModel.applyEdits([\n\t\t\t{\n\t\t\t\teditType: CellEditType.Move,\n\t\t\t\tindex: indexAbove,\n\t\t\t\tlength: 1,\n\t\t\t\tnewIdx: range.end - 1\n\t\t\t}],\n\t\t\ttrue,\n\t\t\t{\n\t\t\t\tkind: SelectionStateType.Index,\n\t\t\t\tfocus: editor.getFocus(),\n\t\t\t\tselections: editor.getSelections()\n\t\t\t},\n\t\t\t() => ({ kind: SelectionStateType.Index, focus: newFocus, selections: [finalSelection] }),\n\t\t\tundefined,\n\t\t\ttrue\n\t\t);\n\t\tconst focusRange = editor.getSelections()[0] ?? editor.getFocus();\n\t\teditor.revealCellRangeInView(focusRange);\n\t} else {\n\t\tif (range.end >= textModel.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst indexBelow = range.end;\n\t\tconst finalSelection = { start: range.start + 1, end: range.end + 1 };\n\t\tconst focus = editor.getFocus();\n\t\tconst newFocus = cellRangeContains(range, focus) ? { start: focus.start + 1, end: focus.end + 1 } : { start: range.start + 1, end: range.start + 2 };\n\n\t\ttextModel.applyEdits([\n\t\t\t{\n\t\t\t\teditType: CellEditType.Move,\n\t\t\t\tindex: indexBelow,\n\t\t\t\tlength: 1,\n\t\t\t\tnewIdx: range.start\n\t\t\t}],\n\t\t\ttrue,\n\t\t\t{\n\t\t\t\tkind: SelectionStateType.Index,\n\t\t\t\tfocus: editor.getFocus(),\n\t\t\t\tselections: editor.getSelections()\n\t\t\t},\n\t\t\t() => ({ kind: SelectionStateType.Index, focus: newFocus, selections: [finalSelection] }),\n\t\t\tundefined,\n\t\t\ttrue\n\t\t);\n\n\t\tconst focusRange = editor.getSelections()[0] ?? editor.getFocus();\n\t\teditor.revealCellRangeInView(focusRange);\n\t}\n}\n\nexport async function copyCellRange(context: INotebookCellActionContext, direction: 'up' | 'down'): Promise<void> {\n\tconst editor = context.notebookEditor;\n\tif (!editor.hasModel()) {\n\t\treturn;\n\t}\n\n\tconst textModel = editor.textModel;\n\n\tif (editor.isReadOnly) {\n\t\treturn;\n\t}\n\n\tlet range: ICellRange | undefined = undefined;\n\n\tif (context.ui) {\n\t\tconst targetCell = context.cell;\n\t\tconst targetCellIndex = editor.getCellIndex(targetCell);\n\t\trange = { start: targetCellIndex, end: targetCellIndex + 1 };\n\t} else {\n\t\tconst selections = editor.getSelections();\n\t\tconst modelRanges = expandCellRangesWithHiddenCells(editor, selections);\n\t\trange = modelRanges[0];\n\t}\n\n\tif (!range || range.start === range.end) {\n\t\treturn;\n\t}\n\n\tif (direction === 'up') {\n\t\t// insert up, without changing focus and selections\n\t\tconst focus = editor.getFocus();\n\t\tconst selections = editor.getSelections();\n\t\ttextModel.applyEdits([\n\t\t\t{\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex: range.end,\n\t\t\t\tcount: 0,\n\t\t\t\tcells: cellRangesToIndexes([range]).map(index => cloneNotebookCellTextModel(editor.cellAt(index)!.model))\n\t\t\t}],\n\t\t\ttrue,\n\t\t\t{\n\t\t\t\tkind: SelectionStateType.Index,\n\t\t\t\tfocus: focus,\n\t\t\t\tselections: selections\n\t\t\t},\n\t\t\t() => ({ kind: SelectionStateType.Index, focus: focus, selections: selections }),\n\t\t\tundefined,\n\t\t\ttrue\n\t\t);\n\t} else {\n\t\t// insert down, move selections\n\t\tconst focus = editor.getFocus();\n\t\tconst selections = editor.getSelections();\n\t\tconst newCells = cellRangesToIndexes([range]).map(index => cloneNotebookCellTextModel(editor.cellAt(index)!.model));\n\t\tconst countDelta = newCells.length;\n\t\tconst newFocus = context.ui ? focus : { start: focus.start + countDelta, end: focus.end + countDelta };\n\t\tconst newSelections = context.ui ? selections : [{ start: range.start + countDelta, end: range.end + countDelta }];\n\t\ttextModel.applyEdits([\n\t\t\t{\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex: range.end,\n\t\t\t\tcount: 0,\n\t\t\t\tcells: cellRangesToIndexes([range]).map(index => cloneNotebookCellTextModel(editor.cellAt(index)!.model))\n\t\t\t}],\n\t\t\ttrue,\n\t\t\t{\n\t\t\t\tkind: SelectionStateType.Index,\n\t\t\t\tfocus: focus,\n\t\t\t\tselections: selections\n\t\t\t},\n\t\t\t() => ({ kind: SelectionStateType.Index, focus: newFocus, selections: newSelections }),\n\t\t\tundefined,\n\t\t\ttrue\n\t\t);\n\n\t\tconst focusRange = editor.getSelections()[0] ?? editor.getFocus();\n\t\teditor.revealCellRangeInView(focusRange);\n\t}\n}\n\nexport async function joinSelectedCells(bulkEditService: IBulkEditService, notificationService: INotificationService, context: INotebookCellActionContext): Promise<void> {\n\tconst editor = context.notebookEditor;\n\tif (editor.isReadOnly) {\n\t\treturn;\n\t}\n\n\tconst edits: ResourceEdit[] = [];\n\tconst cells: ICellViewModel[] = [];\n\tfor (const selection of editor.getSelections()) {\n\t\tcells.push(...editor.getCellsInRange(selection));\n\t}\n\n\tif (cells.length <= 1) {\n\t\treturn;\n\t}\n\n\t// check if all cells are of the same kind\n\tconst cellKind = cells[0].cellKind;\n\tconst isSameKind = cells.every(cell => cell.cellKind === cellKind);\n\tif (!isSameKind) {\n\t\t// cannot join cells of different kinds\n\t\t// show warning and quit\n\t\tconst message = localize('notebookActions.joinSelectedCells', \"Cannot join cells of different kinds\");\n\t\treturn notificationService.warn(message);\n\t}\n\n\t// merge all cells content into first cell\n\tconst firstCell = cells[0];\n\tconst insertContent = cells.map(cell => cell.getText()).join(firstCell.textBuffer.getEOL());\n\tconst firstSelection = editor.getSelections()[0];\n\tedits.push(\n\t\tnew ResourceNotebookCellEdit(editor.textModel.uri,\n\t\t\t{\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex: firstSelection.start,\n\t\t\t\tcount: firstSelection.end - firstSelection.start,\n\t\t\t\tcells: [{\n\t\t\t\t\tcellKind: firstCell.cellKind,\n\t\t\t\t\tsource: insertContent,\n\t\t\t\t\tlanguage: firstCell.language,\n\t\t\t\t\tmime: firstCell.mime,\n\t\t\t\t\toutputs: firstCell.model.outputs,\n\t\t\t\t\tmetadata: firstCell.metadata,\n\t\t\t\t}]\n\t\t\t}\n\t\t)\n\t);\n\n\tfor (const selection of editor.getSelections().slice(1)) {\n\t\tedits.push(new ResourceNotebookCellEdit(editor.textModel.uri,\n\t\t\t{\n\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\tindex: selection.start,\n\t\t\t\tcount: selection.end - selection.start,\n\t\t\t\tcells: []\n\t\t\t}));\n\t}\n\n\tif (edits.length) {\n\t\tawait bulkEditService.apply(\n\t\t\tedits,\n\t\t\t{ quotableLabel: localize('notebookActions.joinSelectedCells.label', \"Join Notebook Cells\") }\n\t\t);\n\t}\n}\n\nexport async function joinNotebookCells(editor: IActiveNotebookEditor, range: ICellRange, direction: 'above' | 'below', constraint?: CellKind): Promise<{ edits: ResourceEdit[]; cell: ICellViewModel; endFocus: ICellRange; endSelections: ICellRange[] } | null> {\n\tif (editor.isReadOnly) {\n\t\treturn null;\n\t}\n\n\tconst textModel = editor.textModel;\n\tconst cells = editor.getCellsInRange(range);\n\n\tif (!cells.length) {\n\t\treturn null;\n\t}\n\n\tif (range.start === 0 && direction === 'above') {\n\t\treturn null;\n\t}\n\n\tif (range.end === textModel.length && direction === 'below') {\n\t\treturn null;\n\t}\n\n\tfor (let i = 0; i < cells.length; i++) {\n\t\tconst cell = cells[i];\n\n\t\tif (constraint && cell.cellKind !== constraint) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tif (direction === 'above') {\n\t\tconst above = editor.cellAt(range.start - 1) as CellViewModel;\n\t\tif (constraint && above.cellKind !== constraint) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst insertContent = cells.map(cell => (cell.textBuffer.getEOL() ?? '') + cell.getText()).join('');\n\t\tconst aboveCellLineCount = above.textBuffer.getLineCount();\n\t\tconst aboveCellLastLineEndColumn = above.textBuffer.getLineLength(aboveCellLineCount);\n\n\t\treturn {\n\t\t\tedits: [\n\t\t\t\tnew ResourceTextEdit(above.uri, { range: new Range(aboveCellLineCount, aboveCellLastLineEndColumn + 1, aboveCellLineCount, aboveCellLastLineEndColumn + 1), text: insertContent }),\n\t\t\t\tnew ResourceNotebookCellEdit(textModel.uri,\n\t\t\t\t\t{\n\t\t\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\t\t\tindex: range.start,\n\t\t\t\t\t\tcount: range.end - range.start,\n\t\t\t\t\t\tcells: []\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t],\n\t\t\tcell: above,\n\t\t\tendFocus: { start: range.start - 1, end: range.start },\n\t\t\tendSelections: [{ start: range.start - 1, end: range.start }]\n\t\t};\n\t} else {\n\t\tconst below = editor.cellAt(range.end) as CellViewModel;\n\t\tif (constraint && below.cellKind !== constraint) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst cell = cells[0];\n\t\tconst restCells = [...cells.slice(1), below];\n\t\tconst insertContent = restCells.map(cl => (cl.textBuffer.getEOL() ?? '') + cl.getText()).join('');\n\n\t\tconst cellLineCount = cell.textBuffer.getLineCount();\n\t\tconst cellLastLineEndColumn = cell.textBuffer.getLineLength(cellLineCount);\n\n\t\treturn {\n\t\t\tedits: [\n\t\t\t\tnew ResourceTextEdit(cell.uri, { range: new Range(cellLineCount, cellLastLineEndColumn + 1, cellLineCount, cellLastLineEndColumn + 1), text: insertContent }),\n\t\t\t\tnew ResourceNotebookCellEdit(textModel.uri,\n\t\t\t\t\t{\n\t\t\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\t\t\tindex: range.start + 1,\n\t\t\t\t\t\tcount: range.end - range.start,\n\t\t\t\t\t\tcells: []\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t],\n\t\t\tcell,\n\t\t\tendFocus: { start: range.start, end: range.start + 1 },\n\t\t\tendSelections: [{ start: range.start, end: range.start + 1 }]\n\t\t};\n\t}\n}\n\nexport async function joinCellsWithSurrounds(bulkEditService: IBulkEditService, context: INotebookCellActionContext, direction: 'above' | 'below'): Promise<void> {\n\tconst editor = context.notebookEditor;\n\tconst textModel = editor.textModel;\n\tconst viewModel = editor.getViewModel() as NotebookViewModel;\n\tlet ret: {\n\t\tedits: ResourceEdit[];\n\t\tcell: ICellViewModel;\n\t\tendFocus: ICellRange;\n\t\tendSelections: ICellRange[];\n\t} | null = null;\n\n\tif (context.ui) {\n\t\tconst focusMode = context.cell.focusMode;\n\t\tconst cellIndex = editor.getCellIndex(context.cell);\n\t\tret = await joinNotebookCells(editor, { start: cellIndex, end: cellIndex + 1 }, direction);\n\t\tif (!ret) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait bulkEditService.apply(\n\t\t\tret?.edits,\n\t\t\t{ quotableLabel: 'Join Notebook Cells' }\n\t\t);\n\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Index, focus: ret.endFocus, selections: ret.endSelections });\n\t\tret.cell.updateEditState(CellEditState.Editing, 'joinCellsWithSurrounds');\n\t\teditor.revealCellRangeInView(editor.getFocus());\n\t\tif (focusMode === CellFocusMode.Editor) {\n\t\t\tret.cell.focusMode = CellFocusMode.Editor;\n\t\t}\n\t} else {\n\t\tconst selections = editor.getSelections();\n\t\tif (!selections.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focus = editor.getFocus();\n\t\tconst focusMode = editor.cellAt(focus.start)?.focusMode;\n\n\t\tconst edits: ResourceEdit[] = [];\n\t\tlet cell: ICellViewModel | null = null;\n\t\tconst cells: ICellViewModel[] = [];\n\n\t\tfor (let i = selections.length - 1; i >= 0; i--) {\n\t\t\tconst selection = selections[i];\n\t\t\tconst containFocus = cellRangeContains(selection, focus);\n\n\t\t\tif (\n\t\t\t\tselection.end >= textModel.length && direction === 'below'\n\t\t\t\t|| selection.start === 0 && direction === 'above'\n\t\t\t) {\n\t\t\t\tif (containFocus) {\n\t\t\t\t\tcell = editor.cellAt(focus.start)!;\n\t\t\t\t}\n\n\t\t\t\tcells.push(...editor.getCellsInRange(selection));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst singleRet = await joinNotebookCells(editor, selection, direction);\n\n\t\t\tif (!singleRet) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tedits.push(...singleRet.edits);\n\t\t\tcells.push(singleRet.cell);\n\n\t\t\tif (containFocus) {\n\t\t\t\tcell = singleRet.cell;\n\t\t\t}\n\t\t}\n\n\t\tif (!edits.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!cell || !cells.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait bulkEditService.apply(\n\t\t\tedits,\n\t\t\t{ quotableLabel: 'Join Notebook Cells' }\n\t\t);\n\n\t\tcells.forEach(cell => {\n\t\t\tcell.updateEditState(CellEditState.Editing, 'joinCellsWithSurrounds');\n\t\t});\n\n\t\tviewModel.updateSelectionsState({ kind: SelectionStateType.Handle, primary: cell.handle, selections: cells.map(cell => cell.handle) });\n\t\teditor.revealCellRangeInView(editor.getFocus());\n\t\tconst newFocusedCell = editor.cellAt(editor.getFocus().start);\n\t\tif (focusMode === CellFocusMode.Editor && newFocusedCell) {\n\t\t\tnewFocusedCell.focusMode = CellFocusMode.Editor;\n\t\t}\n\t}\n}\n\nfunction _splitPointsToBoundaries(splitPoints: IPosition[], textBuffer: IReadonlyTextBuffer): IPosition[] | null {\n\tconst boundaries: IPosition[] = [];\n\tconst lineCnt = textBuffer.getLineCount();\n\tconst getLineLen = (lineNumber: number) => {\n\t\treturn textBuffer.getLineLength(lineNumber);\n\t};\n\n\t// split points need to be sorted\n\tsplitPoints = splitPoints.sort((l, r) => {\n\t\tconst lineDiff = l.lineNumber - r.lineNumber;\n\t\tconst columnDiff = l.column - r.column;\n\t\treturn lineDiff !== 0 ? lineDiff : columnDiff;\n\t});\n\n\tfor (let sp of splitPoints) {\n\t\tif (getLineLen(sp.lineNumber) + 1 === sp.column && sp.column !== 1 /** empty line */ && sp.lineNumber < lineCnt) {\n\t\t\tsp = new Position(sp.lineNumber + 1, 1);\n\t\t}\n\t\t_pushIfAbsent(boundaries, sp);\n\t}\n\n\tif (boundaries.length === 0) {\n\t\treturn null;\n\t}\n\n\t// boundaries already sorted and not empty\n\tconst modelStart = new Position(1, 1);\n\tconst modelEnd = new Position(lineCnt, getLineLen(lineCnt) + 1);\n\treturn [modelStart, ...boundaries, modelEnd];\n}\n\nfunction _pushIfAbsent(positions: IPosition[], p: IPosition) {\n\tconst last = positions.length > 0 ? positions[positions.length - 1] : undefined;\n\tif (!last || last.lineNumber !== p.lineNumber || last.column !== p.column) {\n\t\tpositions.push(p);\n\t}\n}\n\nexport function computeCellLinesContents(cell: ICellViewModel, splitPoints: IPosition[]): string[] | null {\n\tconst rangeBoundaries = _splitPointsToBoundaries(splitPoints, cell.textBuffer);\n\tif (!rangeBoundaries) {\n\t\treturn null;\n\t}\n\tconst newLineModels: string[] = [];\n\tfor (let i = 1; i < rangeBoundaries.length; i++) {\n\t\tconst start = rangeBoundaries[i - 1];\n\t\tconst end = rangeBoundaries[i];\n\n\t\tnewLineModels.push(cell.textBuffer.getValueInRange(new Range(start.lineNumber, start.column, end.lineNumber, end.column), EndOfLinePreference.TextDefined));\n\t}\n\n\treturn newLineModels;\n}\n\nexport function insertCell(\n\tlanguageService: ILanguageService,\n\teditor: IActiveNotebookEditor,\n\tindex: number,\n\ttype: CellKind,\n\tdirection: 'above' | 'below' = 'above',\n\tinitialText: string = '',\n\tui: boolean = false\n) {\n\tconst viewModel = editor.getViewModel() as NotebookViewModel;\n\tconst activeKernel = editor.activeKernel;\n\tif (viewModel.options.isReadOnly) {\n\t\treturn null;\n\t}\n\n\tconst cell = editor.cellAt(index);\n\tconst nextIndex = ui ? viewModel.getNextVisibleCellIndex(index) : index + 1;\n\tlet language;\n\tif (type === CellKind.Code) {\n\t\tconst supportedLanguages = activeKernel?.supportedLanguages ?? languageService.getRegisteredLanguageIds();\n\t\tconst defaultLanguage = supportedLanguages[0] || PLAINTEXT_LANGUAGE_ID;\n\t\tif (cell?.cellKind === CellKind.Code) {\n\t\t\tlanguage = cell.language;\n\t\t} else if (cell?.cellKind === CellKind.Markup) {\n\t\t\tconst nearestCodeCellIndex = viewModel.nearestCodeCellIndex(index);\n\t\t\tif (nearestCodeCellIndex > -1) {\n\t\t\t\tlanguage = viewModel.cellAt(nearestCodeCellIndex)!.language;\n\t\t\t} else {\n\t\t\t\tlanguage = defaultLanguage;\n\t\t\t}\n\t\t} else {\n\t\t\tif (cell === undefined && direction === 'above') {\n\t\t\t\t// insert cell at the very top\n\t\t\t\tlanguage = viewModel.viewCells.find(cell => cell.cellKind === CellKind.Code)?.language || defaultLanguage;\n\t\t\t} else {\n\t\t\t\tlanguage = defaultLanguage;\n\t\t\t}\n\t\t}\n\n\t\tif (!supportedLanguages.includes(language)) {\n\t\t\t// the language no longer exists\n\t\t\tlanguage = defaultLanguage;\n\t\t}\n\t} else {\n\t\tlanguage = 'markdown';\n\t}\n\n\tconst insertIndex = cell ?\n\t\t(direction === 'above' ? index : nextIndex) :\n\t\tindex;\n\treturn insertCellAtIndex(viewModel, insertIndex, initialText, language, type, undefined, [], true, true);\n}\n\nexport function insertCellAtIndex(viewModel: NotebookViewModel, index: number, source: string, language: string, type: CellKind, metadata: NotebookCellMetadata | undefined, outputs: IOutputDto[], synchronous: boolean, pushUndoStop: boolean): CellViewModel {\n\tconst endSelections: ISelectionState = { kind: SelectionStateType.Index, focus: { start: index, end: index + 1 }, selections: [{ start: index, end: index + 1 }] };\n\tviewModel.notebookDocument.applyEdits([\n\t\t{\n\t\t\teditType: CellEditType.Replace,\n\t\t\tindex,\n\t\t\tcount: 0,\n\t\t\tcells: [\n\t\t\t\t{\n\t\t\t\t\tcellKind: type,\n\t\t\t\t\tlanguage: language,\n\t\t\t\t\tmime: undefined,\n\t\t\t\t\toutputs: outputs,\n\t\t\t\t\tmetadata: metadata,\n\t\t\t\t\tsource: source\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t], synchronous, { kind: SelectionStateType.Index, focus: viewModel.getFocus(), selections: viewModel.getSelections() }, () => endSelections, undefined, pushUndoStop && !viewModel.options.isReadOnly);\n\treturn viewModel.cellAt(index)!;\n}\n"]}