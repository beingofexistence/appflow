{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/controller/apiActions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAShG,cAAG,CAAc,eAAe,CAAC,iCAAiC,EAAE,CAAC,QAAQ,EAKzE,EAAE;QACL,MAAM,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAmB,sBAAI,CAAa,CAAC;QACzE,MAAM,gBAAgB,GAAG,eAAe,CAAC,2BAA2B,EAAE,CAAC;QACvE,OAAO,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACtC,MAAM,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBAC1D,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;oBACjC,OAAO,QAAQ,CAAC;iBAChB;gBAED,IAAI,IAAI,CAAC,GAAG,CAAe,QAAQ,CAAC,EAAE;oBACrC,OAAO,QAAQ,CAAC;iBAChB;gBAED,IAAI,IAAA,oBAAG,EAAsB,QAAQ,CAAC,EAAE;oBACvC,OAAO;wBACN,OAAO,EAAE,QAAQ,CAAC,OAAO;wBACzB,OAAO,EAAE,QAAQ,CAAC,OAAO;qBACzB,CAAC;iBACF;gBAED,OAAO,IAAI,CAAC;YACb,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,KAAK,IAAI,CAA8H,CAAC;YAEpK,OAAO;gBACN,QAAQ,EAAE,QAAQ,CAAC,EAAE;gBACrB,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,eAAe,EAAE,gBAAgB;gBACjC,OAAO,EAAE;oBACR,qBAAqB,EAAE,QAAQ,CAAC,OAAO,CAAC,qBAAqB;oBAC7D,yBAAyB,EAAE,QAAQ,CAAC,OAAO,CAAC,yBAAyB;oBACrE,gBAAgB,EAAE,QAAQ,CAAC,OAAO,CAAC,gBAAgB;iBACnD;aACD,CAAC;QACH,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,cAAG,CAAc,eAAe,CAAC,yBAAyB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAG5E,EAOI,EAAE;QACN,MAAM,qBAAqB,GAAG,QAAQ,CAAC,GAAG,CAAC,4BAAI,CAAmB,CAAC;QACnE,MAAM,GAAG,GAAG,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAoB,CAAC,CAAC;QAClD,MAAM,OAAO,GAAG,qBAAqB,CAAC,iBAAiB,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE1F,OAAO,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACnC,EAAE,EAAE,QAAQ,CAAC,EAAE;YACf,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,WAAW,EAAE,QAAQ,CAAC,WAAW;YACjC,MAAM,EAAE,QAAQ,CAAC,MAAM;YACvB,WAAW,EAAE,KAAK;YAClB,QAAQ,EAAE,QAAQ,CAAC,WAAW;SAC9B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","file":"apiActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as glob from 'vs/base/common/glob';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { isDocumentExcludePattern, TransientCellMetadata, TransientDocumentMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookKernelService } from 'vs/workbench/contrib/notebook/common/notebookKernelService';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\n\nCommandsRegistry.registerCommand('_resolveNotebookContentProvider', (accessor): {\n\tviewType: string;\n\tdisplayName: string;\n\toptions: { transientOutputs: boolean; transientCellMetadata: TransientCellMetadata; transientDocumentMetadata: TransientDocumentMetadata };\n\tfilenamePattern: (string | glob.IRelativePattern | { include: string | glob.IRelativePattern; exclude: string | glob.IRelativePattern })[];\n}[] => {\n\tconst notebookService = accessor.get<INotebookService>(INotebookService);\n\tconst contentProviders = notebookService.getContributedNotebookTypes();\n\treturn contentProviders.map(provider => {\n\t\tconst filenamePatterns = provider.selectors.map(selector => {\n\t\t\tif (typeof selector === 'string') {\n\t\t\t\treturn selector;\n\t\t\t}\n\n\t\t\tif (glob.isRelativePattern(selector)) {\n\t\t\t\treturn selector;\n\t\t\t}\n\n\t\t\tif (isDocumentExcludePattern(selector)) {\n\t\t\t\treturn {\n\t\t\t\t\tinclude: selector.include,\n\t\t\t\t\texclude: selector.exclude\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}).filter(pattern => pattern !== null) as (string | glob.IRelativePattern | { include: string | glob.IRelativePattern; exclude: string | glob.IRelativePattern })[];\n\n\t\treturn {\n\t\t\tviewType: provider.id,\n\t\t\tdisplayName: provider.displayName,\n\t\t\tfilenamePattern: filenamePatterns,\n\t\t\toptions: {\n\t\t\t\ttransientCellMetadata: provider.options.transientCellMetadata,\n\t\t\t\ttransientDocumentMetadata: provider.options.transientDocumentMetadata,\n\t\t\t\ttransientOutputs: provider.options.transientOutputs\n\t\t\t}\n\t\t};\n\t});\n});\n\nCommandsRegistry.registerCommand('_resolveNotebookKernels', async (accessor, args: {\n\tviewType: string;\n\turi: UriComponents;\n}): Promise<{\n\tid?: string;\n\tlabel: string;\n\tdescription?: string;\n\tdetail?: string;\n\tisPreferred?: boolean;\n\tpreloads?: URI[];\n}[]> => {\n\tconst notebookKernelService = accessor.get(INotebookKernelService);\n\tconst uri = URI.revive(args.uri as UriComponents);\n\tconst kernels = notebookKernelService.getMatchingKernel({ uri, viewType: args.viewType });\n\n\treturn kernels.all.map(provider => ({\n\t\tid: provider.id,\n\t\tlabel: provider.label,\n\t\tdescription: provider.description,\n\t\tdetail: provider.detail,\n\t\tisPreferred: false, // todo@jrieken,@rebornix\n\t\tpreloads: provider.preloadUris,\n\t}));\n});\n"]}