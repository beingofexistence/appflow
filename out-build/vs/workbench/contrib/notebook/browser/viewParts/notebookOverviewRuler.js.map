{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/viewParts/notebookOverviewRuler.ts"],"names":[],"mappings":"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","file":"notebookOverviewRuler.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from 'vs/base/browser/browser';\nimport { createFastDomNode, FastDomNode } from 'vs/base/browser/fastDomNode';\nimport { IThemeService, Themable } from 'vs/platform/theme/common/themeService';\nimport { INotebookEditorDelegate, NotebookOverviewRulerLane } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\n\nexport class NotebookOverviewRuler extends Themable {\n\tprivate readonly _domNode: FastDomNode<HTMLCanvasElement>;\n\tprivate _lanes = 3;\n\n\tconstructor(readonly notebookEditor: INotebookEditorDelegate, container: HTMLElement, @IThemeService themeService: IThemeService) {\n\t\tsuper(themeService);\n\t\tthis._domNode = createFastDomNode(document.createElement('canvas'));\n\t\tthis._domNode.setPosition('relative');\n\t\tthis._domNode.setLayerHinting(true);\n\t\tthis._domNode.setContain('strict');\n\n\t\tcontainer.appendChild(this._domNode.domNode);\n\n\t\tthis._register(notebookEditor.onDidChangeDecorations(() => {\n\t\t\tthis.layout();\n\t\t}));\n\n\t\tthis._register(browser.PixelRatio.onDidChange(() => {\n\t\t\tthis.layout();\n\t\t}));\n\t}\n\n\tlayout() {\n\t\tconst width = 10;\n\t\tconst layoutInfo = this.notebookEditor.getLayoutInfo();\n\t\tconst scrollHeight = layoutInfo.scrollHeight;\n\t\tconst height = layoutInfo.height;\n\t\tconst ratio = browser.PixelRatio.value;\n\t\tthis._domNode.setWidth(width);\n\t\tthis._domNode.setHeight(height);\n\t\tthis._domNode.domNode.width = width * ratio;\n\t\tthis._domNode.domNode.height = height * ratio;\n\t\tconst ctx = this._domNode.domNode.getContext('2d')!;\n\t\tctx.clearRect(0, 0, width * ratio, height * ratio);\n\t\tthis._render(ctx, width * ratio, height * ratio, scrollHeight * ratio, ratio);\n\t}\n\n\tprivate _render(ctx: CanvasRenderingContext2D, width: number, height: number, scrollHeight: number, ratio: number) {\n\t\tconst viewModel = this.notebookEditor.getViewModel();\n\t\tconst fontInfo = this.notebookEditor.getLayoutInfo().fontInfo;\n\t\tconst laneWidth = width / this._lanes;\n\n\t\tlet currentFrom = 0;\n\n\t\tif (viewModel) {\n\t\t\tfor (let i = 0; i < viewModel.viewCells.length; i++) {\n\t\t\t\tconst viewCell = viewModel.viewCells[i];\n\t\t\t\tconst textBuffer = viewCell.textBuffer;\n\t\t\t\tconst decorations = viewCell.getCellDecorations();\n\t\t\t\tconst cellHeight = (viewCell.layoutInfo.totalHeight / scrollHeight) * ratio * height;\n\n\t\t\t\tdecorations.filter(decoration => decoration.overviewRuler).forEach(decoration => {\n\t\t\t\t\tconst overviewRuler = decoration.overviewRuler!;\n\t\t\t\t\tconst fillStyle = this.getColor(overviewRuler.color) ?? '#000000';\n\t\t\t\t\tconst lineHeight = Math.min(fontInfo.lineHeight, (viewCell.layoutInfo.editorHeight / scrollHeight / textBuffer.getLineCount()) * ratio * height);\n\t\t\t\t\tconst lineNumbers = overviewRuler.modelRanges.map(range => range.startLineNumber).reduce((previous: number[], current: number) => {\n\t\t\t\t\t\tif (previous.length === 0) {\n\t\t\t\t\t\t\tprevious.push(current);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst last = previous[previous.length - 1];\n\t\t\t\t\t\t\tif (last !== current) {\n\t\t\t\t\t\t\t\tprevious.push(current);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn previous;\n\t\t\t\t\t}, [] as number[]);\n\n\t\t\t\t\tlet x = 0;\n\t\t\t\t\tswitch (overviewRuler.position) {\n\t\t\t\t\t\tcase NotebookOverviewRulerLane.Left:\n\t\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase NotebookOverviewRulerLane.Center:\n\t\t\t\t\t\t\tx = laneWidth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase NotebookOverviewRulerLane.Right:\n\t\t\t\t\t\t\tx = laneWidth * 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst width = overviewRuler.position === NotebookOverviewRulerLane.Full ? laneWidth * 3 : laneWidth;\n\n\t\t\t\t\tfor (let i = 0; i < lineNumbers.length; i++) {\n\t\t\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t\t\t\tconst lineNumber = lineNumbers[i];\n\t\t\t\t\t\tconst offset = (lineNumber - 1) * lineHeight;\n\t\t\t\t\t\tctx.fillRect(x, currentFrom + offset, width, lineHeight);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (overviewRuler.includeOutput) {\n\t\t\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t\t\t\tconst outputOffset = (viewCell.layoutInfo.editorHeight / scrollHeight) * ratio * height;\n\t\t\t\t\t\tconst decorationHeight = (fontInfo.lineHeight / scrollHeight) * ratio * height;\n\t\t\t\t\t\tctx.fillRect(laneWidth, currentFrom + outputOffset, laneWidth, decorationHeight);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tcurrentFrom += cellHeight;\n\t\t\t}\n\t\t}\n\t}\n}\n"]}