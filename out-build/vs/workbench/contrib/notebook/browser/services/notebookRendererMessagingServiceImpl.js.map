{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/services/notebookRendererMessagingServiceImpl.ts"],"names":[],"mappings":"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","file":"notebookRendererMessagingServiceImpl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { INotebookRendererMessagingService, IScopedRendererMessaging } from 'vs/workbench/contrib/notebook/common/notebookRendererMessagingService';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\n\ntype MessageToSend = { editorId: string; rendererId: string; message: unknown };\n\nexport class NotebookRendererMessagingService extends Disposable implements INotebookRendererMessagingService {\n\tdeclare _serviceBrand: undefined;\n\t/**\n\t * Activation promises. Maps renderer IDs to a queue of messages that should\n\t * be sent once activation finishes, or undefined if activation is complete.\n\t */\n\tprivate readonly activations = new Map<string /* rendererId */, undefined | MessageToSend[]>();\n\tprivate readonly scopedMessaging = new Map</* editorId */ string, IScopedRendererMessaging>();\n\tprivate readonly postMessageEmitter = this._register(new Emitter<MessageToSend>());\n\tpublic readonly onShouldPostMessage = this.postMessageEmitter.event;\n\n\tconstructor(\n\t\t@IExtensionService private readonly extensionService: IExtensionService\n\t) {\n\t\tsuper();\n\t}\n\n\t/** @inheritdoc */\n\tpublic receiveMessage(editorId: string | undefined, rendererId: string, message: unknown): Promise<boolean> {\n\t\tif (editorId === undefined) {\n\t\t\tconst sends = [...this.scopedMessaging.values()].map(e => e.receiveMessageHandler?.(rendererId, message));\n\t\t\treturn Promise.all(sends).then(s => s.some(s => !!s));\n\t\t}\n\n\t\treturn this.scopedMessaging.get(editorId)?.receiveMessageHandler?.(rendererId, message) ?? Promise.resolve(false);\n\t}\n\n\t/** @inheritdoc */\n\tpublic prepare(rendererId: string) {\n\t\tif (this.activations.has(rendererId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst queue: MessageToSend[] = [];\n\t\tthis.activations.set(rendererId, queue);\n\n\t\tthis.extensionService.activateByEvent(`onRenderer:${rendererId}`).then(() => {\n\t\t\tfor (const message of queue) {\n\t\t\t\tthis.postMessageEmitter.fire(message);\n\t\t\t}\n\n\t\t\tthis.activations.set(rendererId, undefined);\n\t\t});\n\t}\n\n\t/** @inheritdoc */\n\tpublic getScoped(editorId: string): IScopedRendererMessaging {\n\t\tconst existing = this.scopedMessaging.get(editorId);\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\n\t\tconst messaging: IScopedRendererMessaging = {\n\t\t\tpostMessage: (rendererId, message) => this.postMessage(editorId, rendererId, message),\n\t\t\tdispose: () => this.scopedMessaging.delete(editorId),\n\t\t};\n\n\t\tthis.scopedMessaging.set(editorId, messaging);\n\t\treturn messaging;\n\t}\n\n\tprivate postMessage(editorId: string, rendererId: string, message: unknown): void {\n\t\tif (!this.activations.has(rendererId)) {\n\t\t\tthis.prepare(rendererId);\n\t\t}\n\n\t\tconst activation = this.activations.get(rendererId);\n\t\tconst toSend = { rendererId, editorId, message };\n\t\tif (activation === undefined) {\n\t\t\tthis.postMessageEmitter.fire(toSend);\n\t\t} else {\n\t\t\tactivation.push(toSend);\n\t\t}\n\t}\n}\n"]}