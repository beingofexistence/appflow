{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/services/notebookEditorService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAWnF,QAAA,IAAI,GAAqB,IAAA,mBAAG,EAAqC,8BAA8B,CAAC,CAAC","file":"notebookEditorService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { createDecorator, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { NotebookEditorInput } from 'vs/workbench/contrib/notebook/common/notebookEditorInput';\nimport { INotebookEditor, INotebookEditorCreationOptions } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { Event } from 'vs/base/common/event';\nimport { Dimension } from 'vs/base/browser/dom';\nimport { NotebookEditorWidget } from 'vs/workbench/contrib/notebook/browser/notebookEditorWidget';\nimport { URI } from 'vs/base/common/uri';\n\nexport const INotebookEditorService = createDecorator<INotebookEditorService>('INotebookEditorWidgetService');\n\nexport interface IBorrowValue<T> {\n\treadonly value: T | undefined;\n}\n\nexport interface INotebookEditorService {\n\t_serviceBrand: undefined;\n\n\tretrieveWidget(accessor: ServicesAccessor, group: IEditorGroup, input: NotebookEditorInput, creationOptions?: INotebookEditorCreationOptions, dimension?: Dimension): IBorrowValue<INotebookEditor>;\n\n\tretrieveExistingWidgetFromURI(resource: URI): IBorrowValue<NotebookEditorWidget> | undefined;\n\tretrieveAllExistingWidgets(): IBorrowValue<NotebookEditorWidget>[];\n\tonDidAddNotebookEditor: Event<INotebookEditor>;\n\tonDidRemoveNotebookEditor: Event<INotebookEditor>;\n\taddNotebookEditor(editor: INotebookEditor): void;\n\tremoveNotebookEditor(editor: INotebookEditor): void;\n\tgetNotebookEditor(editorId: string): INotebookEditor | undefined;\n\tlistNotebookEditors(): readonly INotebookEditor[];\n}\n"]}