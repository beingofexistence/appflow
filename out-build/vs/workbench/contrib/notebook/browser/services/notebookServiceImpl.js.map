{"version":3,"sources":["vs/workbench/contrib/notebook/browser/services/notebookServiceImpl.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IA0CzF,IAAM,IAAI,GAAV,MAAM,IAA0B,SAAQ,eAAG;;iBAEzB,MAAC,GAA2B,iBAA3B,AAA4C,CAAC;iBAC9C,MAAC,GAAyB,SAAzB,AAAkC,CAAC;QAQ5D,YACkB,cAAmB,EACjB,gBAAqB,EAChB,CAA6C,EAC9C,CAA2C,EAC3C,CAA2C,EAC3C,CAA2C,EACpD,CAAkC,EACX,CAA0D;YAE/F,KAAK,EAAE,CAAC;YAPiC,MAAC,GAAD,CAAC,CAA2B;YAC7B,MAAC,GAAD,CAAC,CAAyB;YAC1B,MAAC,GAAD,CAAC,CAAyB;YAC1B,MAAC,GAAD,CAAC,CAAyB;YACnC,MAAC,GAAD,CAAC,CAAgB;YACM,MAAC,GAAD,CAAC,CAAwC;YAbxF,MAAC,GAAmB,KAAK,CAAC;YAEjB,MAAC,GAAqB,IAAI,GAAG,EAAgC,CAAC;YAC9D,MAAC,GAA+B,IAAI,CAAC,CAAC,CAAS,IAAI,eAAG,EAAc,CAAC,CAAC;YActF,IAAI,CAAC,CAAC,GAAU,IAAI,aAAG,CAAK,MAAI,CAAsB,CAAC,EAA0B,cAAc,CAAC,CAAC;YAEjG,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAQ,UAAU,6DAA6C,CAAC;YAC5F,0EAA0E;YAC1E,IAAI,CAAC,CAAC,CAAsB,kBAAkB,CAAC,GAAG,EAAE;gBACnD,KAAK,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,MAAI,CAAsB,CAAC,CAAuB,IAAI,EAAE,CAA+B,EAAE;oBAC1H,IAAI,CAAC,GAAG,CAAC,IAAI,uBAAI,CAAiB,IAAI,CAAC,CAAC,CAAC;iBACzC;YACF,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,CAAC,CAAS,gBAAgB,CAAC,uBAAuB,CAAC,GAAG,EAAE;gBAC5D,IAAI,CAAC,IAAI,CAAC,CAAC,EAAS;oBACnB,uEAAuE;oBACvE,8BAA8B;oBAC9B,IAAI,CAAC,CAAC,EAAO,CAAC;oBACd,aAAa,CAAC,MAAI,CAAsB,CAAC,CAAuB,GAAG,EAAE,CAAC;oBACtE,IAAI,CAAC,CAAC,CAAQ,WAAW,EAAE,CAAC;iBAC5B;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,6BAAI,CAAoB,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAa,UAAU,CAAC,CAAC,CAAC;QAClF,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,CAAC,EAAO,CAAC;YACd,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;QAEO,CAAC,CAAa,UAAyE;YAC9F,IAAI,CAAC,CAAC,GAAU,IAAI,CAAC;YACrB,MAAM,QAAQ,GAA2B,CAAC,GAAG,IAAI,CAAC,CAAC,CAAmB,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAChH,IAAI,CAAC,CAAC,EAAO,CAAC;YAEd,MAAM,yBAAyB,GAA6B,IAAI,GAAG,EAAE,CAAC;YACtE,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC1B,yBAAyB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAC;YAEH,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;gBACnC,KAAK,MAAM,oBAAoB,IAAI,SAAS,CAAC,KAAK,EAAE;oBAEnD,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE;wBAC/B,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;wBACrE,SAAS;qBACT;oBAED,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;oBAErD,IAAI,QAAQ,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,SAAS,CAAC,WAAW,CAAC,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,oBAAoB,CAAC,IAAI,CAAC,EAAE;4BACjI,4FAA4F;4BAC5F,yBAAyB,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC;yBACpE;6BAAM;4BACN,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,kBAAkB,oBAAoB,CAAC,IAAI,gBAAgB,CAAC,CAAC;4BACvF,SAAS;yBACT;qBACD;oBAED,IAAI,CAAC,GAAG,CAAC,IAAI,uBAAI,CAAiB;wBACjC,SAAS,EAAE,SAAS,CAAC,WAAW,CAAC,UAAU;wBAC3C,EAAE,EAAE,oBAAoB,CAAC,IAAI;wBAC7B,WAAW,EAAE,oBAAoB,CAAC,WAAW;wBAC7C,SAAS,EAAE,oBAAoB,CAAC,QAAQ,IAAI,EAAE;wBAC9C,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAgB,oBAAoB,CAAC,QAAQ,CAAC;wBAC9D,mBAAmB,EAAE,SAAS,CAAC,WAAW,CAAC,WAAW,IAAI,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK;wBAChG,SAAS,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;iBACJ;aACD;YAED,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAQ,UAAU,6DAA6C,CAAC;YAC5F,aAAa,CAAC,MAAI,CAAsB,CAAC,CAAuB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAmB,MAAM,EAAE,CAAC,CAAC;YACjH,IAAI,CAAC,CAAC,CAAQ,WAAW,EAAE,CAAC;QAC7B,CAAC;QAED,gBAAgB;YACf,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAQ,UAAU,6DAA6C,CAAC;YAC5F,aAAa,CAAC,MAAI,CAAsB,CAAC,CAAuB,GAAG,EAAE,CAAC;YACtE,IAAI,CAAC,CAAC,CAAQ,WAAW,EAAE,CAAC;QAC7B,CAAC;QAEO,CAAC,CAAgB,QAAiB;YACzC,IAAI,CAAC,QAAQ,EAAE;gBACd,OAAO,gDAAwB,CAAC,OAAO,CAAC;aACxC;YAED,IAAI,QAAQ,KAAK,uCAAsB,CAAC,OAAO,EAAE;gBAChD,OAAO,gDAAwB,CAAC,OAAO,CAAC;aACxC;YAED,OAAO,gDAAwB,CAAC,MAAM,CAAC;QAExC,CAAC;QAEO,CAAC,CAA0B,oBAA0B;YAE5D,MAAM,WAAW,GAAG,IAAI,eAAG,EAAc,CAAC;YAE1C,KAAK,MAAM,QAAQ,IAAI,oBAAoB,CAAC,SAAS,EAAE;gBACtD,MAAM,WAAW,GAAI,QAA6C,CAAC,OAAO,IAAI,QAA0C,CAAC;gBACzH,MAAM,kBAAkB,GAAyB;oBAChD,EAAE,EAAE,oBAAoB,CAAC,EAAE;oBAC3B,KAAK,EAAE,oBAAoB,CAAC,WAAW;oBACvC,MAAM,EAAE,oBAAoB,CAAC,mBAAmB;oBAChD,QAAQ,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,gDAAwB,CAAC,SAAS,CAAC,CAAC,CAAC,oBAAoB,CAAC,QAAQ;iBAC7G,CAAC;gBACF,MAAM,qBAAqB,GAAG;oBAC7B,aAAa,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAqB,QAAQ,CAAC,oBAAG,CAAa,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAqB,uBAAuB,EAAE;oBAC1J,kBAAkB,EAAE,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,kBAAkB,IAAI,IAAI,CAAC,CAAC,CAAY,WAAW,CAAC,QAAQ,CAAC;iBACxK,CAAC;gBACF,MAAM,0BAA0B,GAA+B,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE;oBACxF,MAAM,IAAI,GAAG,wBAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBACrC,IAAI,WAAW,GAAQ,QAAQ,CAAC;oBAChC,IAAI,WAA6C,CAAC;oBAElD,IAAI,IAAI,EAAE;wBACT,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;wBAC5B,WAAW,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC;qBACpC;oBAED,IAAI,CAAC,WAAW,EAAE;wBACjB,WAAW,GAAI,OAA8C,EAAE,WAAW,CAAC;qBAC3E;oBAED,MAAM,eAAe,GAAG,EAAE,GAAG,OAAO,EAAE,WAAW,EAA4B,CAAC;oBAC9E,OAAO,EAAE,MAAM,EAAE,0BAAI,CAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,EAAsB,WAAW,EAAE,oBAAoB,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;gBAC3I,CAAC,CAAC;gBACF,MAAM,6BAA6B,GAAuC,KAAK,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE;oBACzG,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,CAAC,CAAmC,OAAO,CAAC,EAAE,gBAAgB,EAAE,QAAQ,EAAE,EAAE,oBAAoB,CAAC,EAAE,CAAC,CAAC;oBAE5H,sFAAsF;oBACtF,0EAA0E;oBAC1E,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE;wBACtC,GAAI,CAAC,OAAO,EAAE,CAAC;oBAChB,CAAC,CAAC,CAAC;oBAEH,OAAO,EAAE,MAAM,EAAE,0BAAI,CAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,EAAsB,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,oBAAoB,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC;gBAClI,CAAC,CAAC;gBACF,MAAM,8BAA8B,GAAmC,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE;oBACrH,OAAO,EAAE,MAAM,EAAE,8BAAI,CAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,EAAsB,QAAQ,CAAC,QAAS,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,CAAC,QAAS,EAAE,oBAAoB,CAAC,EAAE,CAAC,EAAE,CAAC;gBACpK,CAAC,CAAC;gBAEF,MAAM,qBAAqB,GAA6B;oBACvD,iBAAiB,EAAE,0BAA0B;oBAC7C,qBAAqB,EAAE,8BAA8B;oBACrD,yBAAyB,EAAE,6BAA6B;iBACxD,CAAC;gBACF,MAAM,yBAAyB,GAA6B;oBAC3D,iBAAiB,EAAE,0BAA0B;oBAC7C,qBAAqB,EAAE,8BAA8B;iBACrD,CAAC;gBAEF,uHAAuH;gBACvH,0EAA0E;gBAC1E,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAqB,wBAAwB,CAAC,CAAC,CAAC,EAAE;oBACvE,IAAI,CAAC,CAAC,oBAAoB,CAAC,oBAAG,CAAa,qBAAqB,CAAC,EAAE;wBAClE,MAAM,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAqB,QAAQ,CAAC,oBAAG,CAAa,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAqB,uBAAuB,EAAE,CAAC;wBAC5J,IAAI,aAAa,EAAE;4BAClB,qBAAqB,CAAC,qBAAqB,GAAG,8BAA8B,CAAC;4BAC7E,yBAAyB,CAAC,qBAAqB,GAAG,8BAA8B,CAAC;yBACjF;6BAAM;4BACN,qBAAqB,CAAC,qBAAqB,GAAG,SAAS,CAAC;4BACxD,yBAAyB,CAAC,qBAAqB,GAAG,SAAS,CAAC;yBAC5D;qBACD;gBACF,CAAC,CAAC,CAAC,CAAC;gBAEJ,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAqB,gCAAgC,CAAC,GAAG,EAAE;oBAChF,MAAM,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAqB,QAAQ,CAAC,oBAAG,CAAa,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAqB,uBAAuB,EAAE,CAAC;oBAC5J,IAAI,aAAa,EAAE;wBAClB,qBAAqB,CAAC,qBAAqB,GAAG,8BAA8B,CAAC;wBAC7E,yBAAyB,CAAC,qBAAqB,GAAG,8BAA8B,CAAC;qBACjF;yBAAM;wBACN,qBAAqB,CAAC,qBAAqB,GAAG,SAAS,CAAC;wBACxD,yBAAyB,CAAC,qBAAqB,GAAG,SAAS,CAAC;qBAC5D;gBACF,CAAC,CAAC,CAAC,CAAC;gBAEJ,+BAA+B;gBAC/B,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAsB,cAAc,CACzD,WAAW,EACX,kBAAkB,EAClB,qBAAqB,EACrB,qBAAqB,CACrB,CAAC,CAAC;gBACH,kEAAkE;gBAClE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAsB,cAAc,CACzD,GAAG,iBAAO,CAAC,kBAAkB,QAAQ,WAAW,EAAE,EAClD,EAAE,GAAG,kBAAkB,EAAE,QAAQ,EAAE,gDAAwB,CAAC,SAAS,EAAE,EACvE,qBAAqB,EACrB,yBAAyB,CACzB,CAAC,CAAC;aACH;YAED,OAAO,WAAW,CAAC;QACpB,CAAC;QAGO,CAAC;YACR,IAAI,CAAC,CAAC,CAAmB,KAAK,EAAE,CAAC;YACjC,IAAI,CAAC,CAAC,CAA6B,KAAK,EAAE,CAAC;QAC5C,CAAC;QAED,GAAG,CAAC,QAAgB;YACnB,OAAO,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/C,CAAC;QAED,GAAG,CAAC,IAAU;YACb,IAAI,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAC1C,MAAM,IAAI,KAAK,CAAC,kBAAkB,IAAI,CAAC,EAAE,kBAAkB,CAAC,CAAC;aAC7D;YACD,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAC5C,IAAI,kBAA2C,CAAC;YAEhD,2DAA2D;YAC3D,IAAI,IAAI,CAAC,SAAS,EAAE;gBACnB,kBAAkB,GAAG,IAAI,CAAC,CAAC,CAA0B,IAAI,CAAC,CAAC;gBAC3D,IAAI,CAAC,CAAC,CAA6B,GAAG,CAAC,kBAAkB,CAAC,CAAC;aAC3D;YAED,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAQ,UAAU,6DAA6C,CAAC;YAC5F,aAAa,CAAC,MAAI,CAAsB,CAAC,CAAuB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAmB,MAAM,EAAE,CAAC,CAAC;YACjH,IAAI,CAAC,CAAC,CAAQ,WAAW,EAAE,CAAC;YAE5B,OAAO,IAAI,CAAC,CAAC,CAAS,IAAA,eAAG,EAAU,GAAG,EAAE;gBACvC,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAQ,UAAU,6DAA6C,CAAC;gBAC5F,aAAa,CAAC,MAAI,CAAsB,CAAC,CAAuB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAmB,MAAM,EAAE,CAAC,CAAC;gBACjH,IAAI,CAAC,CAAC,CAAQ,WAAW,EAAE,CAAC;gBAC5B,kBAAkB,EAAE,OAAO,EAAE,CAAC;gBAC9B,IAAI,CAAC,CAAC,CAAmB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAED,sBAAsB,CAAC,QAAa;YACnC,MAAM,MAAM,GAA2B,EAAE,CAAC;YAC1C,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,CAAC,CAAmB,MAAM,EAAE,EAAE;gBACrD,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;oBAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClB;aACD;YACD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,QAAQ,EAAE;gBAChE,sEAAsE;gBACtE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAmB,MAAM,EAAE,CAAC,CAAC;aACrD;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAED,CAAC,MAAM,CAAC,QAAQ,CAAC;YAChB,OAAO,IAAI,CAAC,CAAC,CAAmB,MAAM,EAAE,CAAC;QAC1C,CAAC;;IAhRW,oBAAI;mBAAJ,IAAI;QAYd,WAAA,aAAG,CAAA;QACH,WAAA,gBAAG,CAAA;QACH,WAAA,4BAAI,CAAA;QACJ,WAAA,mBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,yCAAI,CAAA;OAnBM,IAAI,CAiRhB;IAEM,IAAM,IAAI,GAAV,MAAM,IAAI;QAMhB,YACkB,cAAmB;YANpB,MAAC,GAAsB,IAAI,GAAG,EAAuD,CAAC;YAEtF,MAAC,GAAmB,IAAI,SAAE,CAC1C,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAwB,UAAU,+DAA+C,CAAC,CAAC;YAK/F,IAAI,CAAC,CAAC,GAA0B,IAAI,aAAG,CAAK,8CAA8C,EAAE,cAAc,CAAC,CAAC;QAC7G,CAAC;QAED,KAAK;YACJ,IAAI,CAAC,CAAC,CAAoB,KAAK,EAAE,CAAC;QACnC,CAAC;QAED,GAAG,CAAC,UAAkB;YACrB,OAAO,IAAI,CAAC,CAAC,CAAoB,GAAG,CAAC,UAAU,CAAC,CAAC;QAClD,CAAC;QAED,MAAM;YACL,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAoB,MAAM,EAAE,CAAC,CAAC;QACvD,CAAC;QAED,GAAG,CAAC,IAAU;YACb,IAAI,IAAI,CAAC,CAAC,CAAoB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAC3C,OAAO;aACP;YACD,IAAI,CAAC,CAAC,CAAoB,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC9C,CAAC;QAED,0FAA0F;QAC1F,YAAY,CAAC,oBAA0B,EAAkB,QAAgB,EAAE,UAAkB;YAC5F,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAiB,KAAK,CAAC;YAChD,MAAM,WAAW,GAAG,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;YACxD,IAAI,WAAW,EAAE;gBAChB,WAAW,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;aACnC;iBAAM;gBACN,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,CAAC;aACjE;YAED,IAAI,CAAC,CAAC,CAAwB,WAAW,EAAE,CAAC;QAC7C,CAAC;QAED,iBAAiB,CAAC,oBAAsD,EAAE,QAAgB,EAAE,cAA6C;YAExI,IAAW,UAKV;YALD,WAAW,UAAU;gBACpB,yEAA2B,CAAA;gBAC3B,mFAAgC,CAAA;gBAChC,+DAAsB,CAAA;gBACtB,oDAAgB,CAAA;YACjB,CAAC,EALU,UAAU,KAAV,UAAU,QAKpB;YAED,MAAM,SAAS,GAAG,oBAAoB,IAAI,IAAI,CAAC,CAAC,CAAiB,KAAK,CAAC,oBAAoB,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;YAC5G,MAAM,aAAa,GAAG,oBAAoB,EAAE,SAAS,EAAE,KAAK,CAAC;YAC7D,MAAM,UAAU,GAAG,oBAAoB,EAAE,EAAE,CAAC;YAC5C,MAAM,SAAS,GAAmD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAoB,MAAM,EAAE,CAAC;iBAC9G,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACf,MAAM,QAAQ,GAAG,cAAc,KAAK,SAAS;oBAC5C,CAAC,CAAC,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC;oBACzC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;gBAE9C,IAAI,QAAQ,wCAAgC,EAAE;oBAC7C,OAAO,SAAS,CAAC;iBACjB;gBAED,MAAM,aAAa,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjD,MAAM,UAAU,GAAG,SAAS,KAAK,QAAQ,CAAC,EAAE;oBAC3C,CAAC;oBACD,CAAC,CAAC,aAAa,KAAK,aAAa,IAAI,oBAAG,CAA4B,GAAG,CAAC,aAAa,CAAC,EAAE,GAAG,CAAC,UAAW,CAAC;wBACvG,CAAC;wBACD,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,+BAAoB,CAAC,mCAAyB,CAAC;gBACvE,OAAO;oBACN,OAAO,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;oBAC/D,KAAK,EAAE,UAAU,GAAG,QAAQ;iBAC5B,CAAC;YACH,CAAC,CAAC,CAAC,MAAM,CAAC,WAAG,CAAO,CAAC;YAEtB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3B,OAAO,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,oBAAG,EAAqB,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;aAC3E;YAED,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACxE,CAAC;KACD,CAAA;IApFY,oBAAI;mBAAJ,IAAI;QAOd,WAAA,aAAG,CAAA;OAPO,IAAI,CAoFhB;IAED,MAAM,SAAS;QAGd,YACU,KAAU,EACnB,aAAkD;YADzC,UAAK,GAAL,KAAK,CAAK;YAHH,MAAC,GAAsB,IAAI,eAAG,EAAc,CAAC;YAM7D,IAAI,CAAC,CAAC,CAAoB,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChF,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAoB,OAAO,EAAE,CAAC;QACrC,CAAC;KACD;IAEM,IAAM,IAAI,GAAV,MAAM,IAAgB,SAAQ,eAAG;;iBAGxB,MAAC,GAAkC,2BAAlC,AAA6D,CAAC;QAM9E,IAAY,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,CAAC,EAA2B;gBACrC,IAAI,CAAC,CAAC,GAA4B,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAqB,cAAc,CAAC,IAAI,CAAsB,CAAC,CAAC;aACvH;YAED,OAAO,IAAI,CAAC,CAAC,CAA0B;QACxC,CAAC;QAiCD,YACoB,CAAuC,EACnC,CAA2C,EAC3C,CAA2C,EAC3C,CAA2C,EAC9C,CAAwC,EACrC,CAA0C,EAChD,CAAqC;YAEtD,KAAK,EAAE,CAAC;YAR4B,MAAC,GAAD,CAAC,CAAqB;YAClB,MAAC,GAAD,CAAC,CAAyB;YAC1B,MAAC,GAAD,CAAC,CAAyB;YAC1B,MAAC,GAAD,CAAC,CAAyB;YAC7B,MAAC,GAAD,CAAC,CAAsB;YACpB,MAAC,GAAD,CAAC,CAAwB;YAC/B,MAAC,GAAD,CAAC,CAAmB;YAhDtC,MAAC,GAAoB,IAAI,GAAG,EAAsC,CAAC;YAC5E,MAAC,GAAmE,SAAS,CAAC;YAQrE,MAAC,GAA6B,IAAI,CAAC,CAAC,CAAqB,cAAc,CAAC,IAAI,CAA4B,CAAC;YACzG,MAAC,GAA6B,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YAC1E,+BAA0B,GAAG,IAAI,CAAC,CAAC,CAA2B,KAAK,CAAC;YAE5D,MAAC,GAAiC,IAAI,GAAG,EAA6B,CAAC;YAEvE,MAAC,GAAS,IAAI,SAAG,EAAqB,CAAC;YAEvC,MAAC,GAA4B,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAyB,CAAC,CAAC;YAC9E,MAAC,GAA2B,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAyB,CAAC,CAAC;YAC7E,MAAC,GAA+B,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAyB,CAAC,CAAC;YACjF,MAAC,GAA8B,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAyB,CAAC,CAAC;YAExF,8BAAyB,GAAG,IAAI,CAAC,CAAC,CAA0B,KAAK,CAAC;YAClE,6BAAwB,GAAG,IAAI,CAAC,CAAC,CAAyB,KAAK,CAAC;YAChE,gCAA2B,GAAG,IAAI,CAAC,CAAC,CAA4B,KAAK,CAAC;YACtE,iCAA4B,GAAG,IAAI,CAAC,CAAC,CAA6B,KAAK,CAAC;YAEhE,MAAC,GAAgB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAc,CAAC,CAAC;YAC/D,kBAAa,GAAG,IAAI,CAAC,CAAC,CAAc,KAAK,CAAC;YAElC,MAAC,GAAuB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAc,CAAC,CAAC;YACtE,yBAAoB,GAAG,IAAI,CAAC,CAAC,CAAqB,KAAK,CAAC;YAEhD,MAAC,GAAyB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YAC/E,2BAAsB,GAAgB,IAAI,CAAC,CAAC,CAAuB,KAAK,CAAC;YAGjE,MAAC,GAA+B,IAAI,CAAC;YAe5C,6BAAI,CAA2B,UAAU,CAAC,CAAC,SAAS,EAAE,EAAE;gBACvD,IAAI,CAAC,CAAC,CAA2B,KAAK,EAAE,CAAC;gBAEzC,KAAK,MAAM,SAAS,IAAI,SAAS,EAAE;oBAClC,KAAK,MAAM,oBAAoB,IAAI,SAAS,CAAC,KAAK,EAAE;wBACnD,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,EAAE,iBAAiB;4BACxD,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;4BAC5E,SAAS;yBACT;wBAED,MAAM,EAAE,GAAG,oBAAoB,CAAC,EAAE,CAAC;wBACnC,IAAI,CAAC,EAAE,EAAE;4BACR,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;4BAC5E,SAAS;yBACT;wBAED,IAAI,CAAC,CAAC,CAA2B,GAAG,CAAC,IAAI,6BAAI,CAAuB;4BACnE,EAAE;4BACF,SAAS,EAAE,SAAS,CAAC,WAAW;4BAChC,UAAU,EAAE,oBAAoB,CAAC,UAAU;4BAC3C,WAAW,EAAE,oBAAoB,CAAC,WAAW;4BAC7C,SAAS,EAAE,oBAAoB,CAAC,SAAS,IAAI,EAAE;4BAC/C,YAAY,EAAE,oBAAoB,CAAC,YAAY;4BAC/C,oBAAoB,EAAE,oBAAoB,CAAC,oBAAoB;4BAC/D,iBAAiB,EAAE,oBAAoB,CAAC,iBAAiB;yBACzD,CAAC,CAAC,CAAC;qBACJ;iBACD;gBAED,IAAI,CAAC,CAAC,CAA2B,IAAI,EAAE,CAAC;YACzC,CAAC,CAAC,CAAC;YAEH,6BAAI,CAA0B,UAAU,CAAC,UAAU,CAAC,EAAE;gBACrD,IAAI,CAAC,CAAC,CAA+B,KAAK,EAAE,CAAC;gBAE7C,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;oBACnC,IAAI,CAAC,IAAA,gBAAG,EAAkB,SAAS,CAAC,WAAW,EAAE,+BAA+B,CAAC,EAAE;wBAClF,SAAS;qBACT;oBAED,KAAK,MAAM,oBAAoB,IAAI,SAAS,CAAC,KAAK,EAAE;wBACnD,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,EAAE,iBAAiB;4BACxD,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;4BAC3E,SAAS;yBACT;wBAED,MAAM,IAAI,GAAG,oBAAoB,CAAC,IAAI,CAAC;wBACvC,IAAI,CAAC,IAAI,EAAE;4BACV,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,iDAAiD,CAAC,CAAC;4BAC7E,SAAS;yBACT;wBAED,IAAI,CAAC,CAAC,CAA+B,GAAG,CAAC,IAAI,6BAAI,CAAsB;4BACtE,IAAI;4BACJ,SAAS,EAAE,SAAS,CAAC,WAAW;4BAChC,UAAU,EAAE,oBAAoB,CAAC,UAAU;4BAC3C,kBAAkB,EAAE,oBAAoB,CAAC,kBAAkB,IAAI,EAAE;yBACjE,CAAC,CAAC,CAAC;qBACJ;iBACD;YACF,CAAC,CAAC,CAAC;YAEH,MAAM,WAAW,GAAG,GAAG,EAAE;gBACxB,IAAI,CAAC,CAAC,GAAe,IAAI,oBAAG,CAC3B,IAAI,CAAC,CAAC,CAAqB,QAAQ,CAAW,oBAAG,CAAa,YAAY,CAAC,IAAI,EAAE,EACjF,IAAI,CAAC,CAAC,CAAqB,uBAAuB,EAAE;oBACnD,CAAC,CAAC,oBAAG;oBACL,CAAC,CAAC,oBAAG,CACN,CAAC;YACH,CAAC,CAAC;YAEF,WAAW,EAAE,CAAC;YAEd,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAqB,wBAAwB,CAAC,CAAC,CAAC,EAAE;gBACtE,IAAI,CAAC,CAAC,oBAAoB,CAAC,oBAAG,CAAa,YAAY,CAAC,EAAE;oBACzD,WAAW,EAAE,CAAC;iBACd;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAqB,gCAAgC,CAAC,GAAG,EAAE;gBAC/E,WAAW,EAAE,CAAC;YACf,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,6BAA6B,GAAG,KAAK,CAAC;YAC1C,MAAM,kBAAkB,GAAG,IAAI,GAAG,EAAU,CAAC;YAC7C,MAAM,sBAAsB,GAAG,CAAC,CAAS,EAAE,EAAE;gBAC5C,IAAI,6BAA6B,EAAE;oBAClC,OAAO;iBACP;gBAED,IAAI,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;oBAC9B,OAAO;iBACP;gBAED,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAkB,wBAAwB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBAC1E,IAAI,OAAO,CAAC,qBAAqB,IAAI,OAAO,CAAC,sBAAsB,EAAE;oBACpE,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAkB,yBAAyB,CAAC,CAAC,CAAC,CAAC;oBACtE,IAAI,QAAQ,KAAK,IAAI,EAAE;wBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BACzC,2DAA2D;4BAC3D,IACC,CAAE,QAAQ,CAAC,CAAC,CAAkB,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAK,QAAQ,CAAC,CAAC,CAAkB,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;mCAC9H,QAAQ,CAAC,CAAC,CAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAC5D;gCACD,mGAAmG;gCACnG,yEAAyE;gCACzE,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAiB,QAAQ,CAAC,CAAC;gCACnF,IAAA,sBAAI,EAAmB,cAAG,CAAU,qBAAqB,CAAC,aAAa,EAAE,aAAG,CAAQ,KAAK,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;gCAC3G,6BAA6B,GAAG,IAAI,CAAC;gCACrC,MAAM;6BACN;yBACD;qBACD;iBACD;gBAED,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC;YACF,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAkB,0BAA0B,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC3F,IAAI,CAAC,CAAC,CAAkB,mBAAmB,EAAE,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;YAE9E,IAAI,CAAC,CAAC,GAAU,IAAI,aAAG,CAAK,MAAI,CAAY,CAAC,EAAiC,IAAI,CAAC,CAAC,CAAe,CAAC;YACpG,IAAI,CAAC,CAAC,GAAgB,IAAI,CAAC,CAAC,CAAQ,UAAU,+DAA+C,CAAC;QAC/F,CAAC;QAGD,cAAc;YACb,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAyB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACvD,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;aAC7C,CAAC,CAAC,CAAC;QACL,CAAC;QAED,gBAAgB;YACf,IAAI,CAAC,CAAC,CAAyB,gBAAgB,EAAE,CAAC;QACnD,CAAC;QAEO,CAAC,CAA2B,QAAgB;YACnD,uDAAuD;YACvD,IAAI,CAAC,CAAC,CAAiB,eAAe,CAAC,cAAc,QAAQ,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,CAAC,CAAiB,eAAe,CAAC,cAAc,CAAC,CAAC;QACxD,CAAC;QAED,KAAK,CAAC,UAAU,CAAC,QAAgB;YAChC,IAAI,IAAI,CAAC,CAAC,CAAkB,GAAG,CAAC,QAAQ,CAAC,EAAE;gBAC1C,OAAO,IAAI,CAAC;aACZ;YAED,MAAM,IAAI,CAAC,CAAC,CAAiB,iCAAiC,EAAE,CAAC;YACjE,MAAM,IAAI,CAAC,CAAC,CAAiB,eAAe,CAAC,wBAAwB,QAAQ,EAAE,CAAC,CAAC;YAEjF,OAAO,IAAI,CAAC,CAAC,CAAkB,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC9C,CAAC;QAED,+BAA+B,CAAC,QAAgB,EAAE,IAA+B;YAEhF,MAAM,IAAI,GAAG,IAAI,uBAAI,CAAiB;gBACrC,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,EAAE,EAAE,QAAQ;gBACZ,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;gBAC7C,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,QAAQ,EAAE,gDAAwB,CAAC,OAAO;gBAC1C,SAAS,EAAE,EAAE;aACb,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;YAEjD,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAyB,GAAG,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,CAAC,CAAuB,IAAI,EAAE,CAAC;YAEpC,OAAO,IAAA,eAAG,EAAU,GAAG,EAAE;gBACxB,GAAG,CAAC,OAAO,EAAE,CAAC;gBACd,IAAI,CAAC,CAAC,CAAuB,IAAI,EAAE,CAAC;YACrC,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,CAAC,CAAqB,QAAgB,EAAE,IAAU;YACzD,IAAI,IAAI,CAAC,CAAC,CAAkB,GAAG,CAAC,QAAQ,CAAC,EAAE;gBAC1C,MAAM,IAAI,KAAK,CAAC,mCAAmC,QAAQ,kBAAkB,CAAC,CAAC;aAC/E;YACD,IAAI,CAAC,CAAC,CAAkB,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,CAAC,CAAc,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnC,OAAO,IAAA,eAAG,EAAU,GAAG,EAAE;gBACxB,IAAI,CAAC,CAAC,CAAqB,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1C,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,0BAA0B,CAAC,QAAgB,EAAE,aAA2C,EAAE,UAA+B;YACxH,IAAI,CAAC,CAAC,CAAyB,GAAG,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;YACtF,IAAI,CAAC,CAAC,CAAc,QAAQ,CAAC,GAAG,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC;YACvD,IAAI,CAAC,CAAC,EAAiB,CAAC;YACxB,OAAO,IAAI,CAAC,CAAC,CAAqB,QAAQ,EAAE,IAAI,sBAAI,CAAuB,QAAQ,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC,CAAC;QAClH,CAAC;QAED,KAAK,CAAC,wBAAwB,CAAC,QAAgB;YAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAyB,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC9D,IAAI,CAAC,QAAQ,EAAE;gBACd,MAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;gBAEzD,MAAM,OAAO,GAAG,aAAa,CAAC,CAAC,CAAC;oBAC/B,IAAA,aAAG,EAAM;wBACR,EAAE,EAAE,kDAAkD,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAoC,EAAE,IAA6B,EAAE,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,IAAI,EAAE;4BACvK,MAAM,IAAI,CAAC,CAAC,CAAqB,cAAc,CAAC,wBAAI,EAA+B,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;wBACzG,CAAC;qBACD,CAAC;iBACF,CAAC,CAAC,CAAC,EAAE,CAAC;gBAEP,MAAM,IAAA,kBAAG,EAAoB,0BAA0B,QAAQ,GAAG,EAAE,OAAO,CAAC,CAAC;aAC7E;YACD,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAkB,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,0CAA0C,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC;aAC1E;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAGO,CAAC;YACR,IAAI,CAAC,CAAC,CAAQ,WAAW,EAAE,CAAC;QAC7B,CAAC;QAED,mBAAmB,CAAC,QAAgB;YACnC,OAAO,IAAI,CAAC,CAAC,CAAc,QAAQ,CAAC,CAAC;QACtC,CAAC;QAED,eAAe,CAAC,UAAkB;YACjC,OAAO,IAAI,CAAC,CAAC,CAA2B,GAAG,CAAC,UAAU,CAAC,CAAC;QACzD,CAAC;QAED,2BAA2B,CAAC,QAAgB,EAAE,QAAgB,EAAE,UAAkB,EAAE,cAAiC;YACpH,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAyB,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC1D,IAAI,IAAI,EAAE;gBACT,IAAI,CAAC,CAAC,CAA2B,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;aAC1E;YAED,IAAI,CAAC,CAAC,CAAa,UAAU,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QACzD,CAAC;QAED,oBAAoB,CAAC,MAA2B;YAC/C,IAAI,CAAC,CAAC,CAAqB,WAAW,CAAC,oBAAG,CAAa,YAAY,EAAE,IAAI,CAAC,CAAC,CAAa,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;QAC5G,CAAC;QAED,YAAY;YACX,OAAO,IAAI,CAAC,CAAC,CAA2B,MAAM,EAAE,CAAC;QAClD,CAAC;QAED,CAAC,iBAAiB,CAAC,QAAgB;YAClC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,CAAC,EAAgC;gBAC3D,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAC9B,MAAM,OAAO,CAAC;iBACd;aACD;QACF,CAAC;QAED,+DAA+D;QAE/D,uBAAuB,CAAC,QAAgB,EAAE,GAAQ,EAAE,IAAkB,EAAE,gBAAkC;YACzG,IAAI,IAAI,CAAC,CAAC,CAAO,GAAG,CAAC,GAAG,CAAC,EAAE;gBAC1B,MAAM,IAAI,KAAK,CAAC,gBAAgB,GAAG,iBAAiB,CAAC,CAAC;aACtD;YACD,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAqB,cAAc,CAAC,uBAAG,EAAgB,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;YAC/I,IAAI,CAAC,CAAC,CAAO,GAAG,CAAC,GAAG,EAAE,IAAI,SAAS,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAsB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5F,IAAI,CAAC,CAAC,CAA0B,IAAI,CAAC,aAAa,CAAC,CAAC;YACpD,IAAI,CAAC,CAAC,CAAyB,IAAI,CAAC,aAAa,CAAC,CAAC;YACnD,IAAI,CAAC,CAAC,CAA2B,QAAQ,CAAC,CAAC;YAC3C,OAAO,aAAa,CAAC;QACtB,CAAC;QAED,oBAAoB,CAAC,GAAQ;YAC5B,OAAO,IAAI,CAAC,CAAC,CAAO,GAAG,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC;QACrC,CAAC;QAED,qBAAqB;YACpB,OAAO,mBAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAO,MAAM,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChE,CAAC;QAED,qBAAqB;YACpB,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC;QAEO,CAAC,CAAsB,KAAyB;YACvD,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC9C,IAAI,SAAS,EAAE;gBACd,IAAI,CAAC,CAAC,CAA6B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACzD,IAAI,CAAC,CAAC,CAAO,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC/B,SAAS,CAAC,OAAO,EAAE,CAAC;gBACpB,IAAI,CAAC,CAAC,CAA4B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACxD;QACF,CAAC;QAED,qBAAqB,CAAC,SAAc,EAAgB,cAA6C,EAAE,MAAkB;YACpH,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAa,IAAI,CAAC,IAAI,GAAG,CAAS,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3F,MAAM,oBAAoB,GAAG,IAAI,CAAC,CAAC,CAAyB,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAEpF,OAAO,MAAM;iBACX,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAA2B,iBAAiB,CAAC,oBAAoB,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;iBACvH,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,oBAAG,CAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,KAAK,oBAAG,CAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzH,CAAC;QAED,2BAA2B,CAAC,QAAc;YACzC,IAAI,QAAQ,EAAE;gBACb,OAAO,IAAI,CAAC,CAAC,CAAyB,sBAAsB,CAAC,QAAQ,CAAC,CAAC;aACvE;YAED,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAyB,CAAC;QAC5C,CAAC;QAED,0BAA0B,CAAC,QAAgB;YAC1C,OAAO,IAAI,CAAC,CAAC,CAAyB,GAAG,CAAC,QAAQ,CAAC,CAAC;QACrD,CAAC;QAED,gCAAgC;YAC/B,MAAM,GAAG,GAAU,EAAE,CAAC;YACtB,IAAI,CAAC,CAAC,CAAkB,OAAO,CAAC,GAAG,CAAC,EAAE;gBACrC,IAAI,GAAG,CAAC,aAAa,CAAC,QAAQ,EAAE;oBAC/B,GAAG,CAAC,IAAI,CAAC,SAAG,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACjD;YACF,CAAC,CAAC,CAAC;YAEH,OAAO,GAAG,CAAC;QACZ,CAAC;QAED,mBAAmB;QAEnB,SAAS,CAAC,KAA8B,EAAE,MAAe;YACxD,IAAI,CAAC,CAAC,GAAW,KAAK,CAAC;YACvB,IAAI,CAAC,CAAC,GAAsB,MAAM,CAAC;QACpC,CAAC;QAED,SAAS;YACR,IAAI,IAAI,CAAC,CAAC,EAAU;gBACnB,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,EAAU,MAAM,EAAE,IAAI,CAAC,CAAC,EAAqB,CAAC;aACpE;YAED,OAAO,SAAS,CAAC;QAClB,CAAC;;IA7YW,oBAAI;mBAAJ,IAAI;QAiDd,WAAA,gBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,uBAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,aAAG,CAAA;OAvDO,IAAI,CA+YhB","file":"notebookServiceImpl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { toAction } from 'vs/base/common/actions';\nimport { createErrorWithActions } from 'vs/base/common/errorMessage';\nimport { PixelRatio } from 'vs/base/browser/browser';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as glob from 'vs/base/common/glob';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Lazy } from 'vs/base/common/lazy';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { Schemas } from 'vs/base/common/network';\nimport { isDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { BareFontInfo } from 'vs/editor/common/config/fontInfo';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { Memento, MementoObject } from 'vs/workbench/common/memento';\nimport { INotebookEditorContribution, notebookPreloadExtensionPoint, notebookRendererExtensionPoint, notebooksExtensionPoint } from 'vs/workbench/contrib/notebook/browser/notebookExtensionPoint';\nimport { INotebookEditorOptions } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { NotebookDiffEditorInput } from 'vs/workbench/contrib/notebook/common/notebookDiffEditorInput';\nimport { NotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER, CellUri, NotebookSetting, INotebookContributionData, INotebookExclusiveDocumentFilter, INotebookRendererInfo, INotebookTextModel, IOrderedMimeType, IOutputDto, MimeTypeDisplayOrder, NotebookData, NotebookEditorPriority, NotebookRendererMatch, NOTEBOOK_DISPLAY_ORDER, RENDERER_EQUIVALENT_EXTENSIONS, RENDERER_NOT_AVAILABLE, TransientOptions, NotebookExtensionDescription, INotebookStaticPreloadInfo } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { NotebookEditorInput } from 'vs/workbench/contrib/notebook/common/notebookEditorInput';\nimport { INotebookEditorModelResolverService } from 'vs/workbench/contrib/notebook/common/notebookEditorModelResolverService';\nimport { updateEditorTopPadding } from 'vs/workbench/contrib/notebook/browser/notebookOptions';\nimport { NotebookOutputRendererInfo, NotebookStaticPreloadInfo as NotebookStaticPreloadInfo } from 'vs/workbench/contrib/notebook/common/notebookOutputRenderer';\nimport { NotebookEditorDescriptor, NotebookProviderInfo } from 'vs/workbench/contrib/notebook/common/notebookProvider';\nimport { INotebookSerializer, INotebookService, SimpleNotebookProviderInfo } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { DiffEditorInputFactoryFunction, EditorInputFactoryFunction, EditorInputFactoryObject, IEditorResolverService, IEditorType, RegisteredEditorInfo, RegisteredEditorPriority, UntitledEditorInputFactoryFunction } from 'vs/workbench/services/editor/common/editorResolverService';\nimport { IExtensionService, isProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\nimport { IExtensionPointUser } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { InstallRecommendedExtensionAction } from 'vs/workbench/contrib/extensions/browser/extensionsActions';\n\nexport class NotebookProviderInfoStore extends Disposable {\n\n\tprivate static readonly CUSTOM_EDITORS_STORAGE_ID = 'notebookEditors';\n\tprivate static readonly CUSTOM_EDITORS_ENTRY_ID = 'editors';\n\n\tprivate readonly _memento: Memento;\n\tprivate _handled: boolean = false;\n\n\tprivate readonly _contributedEditors = new Map<string, NotebookProviderInfo>();\n\tprivate readonly _contributedEditorDisposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IEditorResolverService private readonly _editorResolverService: IEditorResolverService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@INotebookEditorModelResolverService private readonly _notebookEditorModelResolverService: INotebookEditorModelResolverService\n\t) {\n\t\tsuper();\n\n\t\tthis._memento = new Memento(NotebookProviderInfoStore.CUSTOM_EDITORS_STORAGE_ID, storageService);\n\n\t\tconst mementoObject = this._memento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\t// Process the notebook contributions but buffer changes from the resolver\n\t\tthis._editorResolverService.bufferChangeEvents(() => {\n\t\t\tfor (const info of (mementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] || []) as NotebookEditorDescriptor[]) {\n\t\t\t\tthis.add(new NotebookProviderInfo(info));\n\t\t\t}\n\t\t});\n\n\t\tthis._register(extensionService.onDidRegisterExtensions(() => {\n\t\t\tif (!this._handled) {\n\t\t\t\t// there is no extension point registered for notebook content provider\n\t\t\t\t// clear the memento and cache\n\t\t\t\tthis._clear();\n\t\t\t\tmementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] = [];\n\t\t\t\tthis._memento.saveMemento();\n\t\t\t}\n\t\t}));\n\n\t\tnotebooksExtensionPoint.setHandler(extensions => this._setupHandler(extensions));\n\t}\n\n\toverride dispose(): void {\n\t\tthis._clear();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _setupHandler(extensions: readonly IExtensionPointUser<INotebookEditorContribution[]>[]) {\n\t\tthis._handled = true;\n\t\tconst builtins: NotebookProviderInfo[] = [...this._contributedEditors.values()].filter(info => !info.extension);\n\t\tthis._clear();\n\n\t\tconst builtinProvidersFromCache: Map<string, IDisposable> = new Map();\n\t\tbuiltins.forEach(builtin => {\n\t\t\tbuiltinProvidersFromCache.set(builtin.id, this.add(builtin));\n\t\t});\n\n\t\tfor (const extension of extensions) {\n\t\t\tfor (const notebookContribution of extension.value) {\n\n\t\t\t\tif (!notebookContribution.type) {\n\t\t\t\t\textension.collector.error(`Notebook does not specify type-property`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst existing = this.get(notebookContribution.type);\n\n\t\t\t\tif (existing) {\n\t\t\t\t\tif (!existing.extension && extension.description.isBuiltin && builtins.find(builtin => builtin.id === notebookContribution.type)) {\n\t\t\t\t\t\t// we are registering an extension which is using the same view type which is already cached\n\t\t\t\t\t\tbuiltinProvidersFromCache.get(notebookContribution.type)?.dispose();\n\t\t\t\t\t} else {\n\t\t\t\t\t\textension.collector.error(`Notebook type '${notebookContribution.type}' already used`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.add(new NotebookProviderInfo({\n\t\t\t\t\textension: extension.description.identifier,\n\t\t\t\t\tid: notebookContribution.type,\n\t\t\t\t\tdisplayName: notebookContribution.displayName,\n\t\t\t\t\tselectors: notebookContribution.selector || [],\n\t\t\t\t\tpriority: this._convertPriority(notebookContribution.priority),\n\t\t\t\t\tproviderDisplayName: extension.description.displayName ?? extension.description.identifier.value,\n\t\t\t\t\texclusive: false\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\tconst mementoObject = this._memento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tmementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] = Array.from(this._contributedEditors.values());\n\t\tthis._memento.saveMemento();\n\t}\n\n\tclearEditorCache() {\n\t\tconst mementoObject = this._memento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tmementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] = [];\n\t\tthis._memento.saveMemento();\n\t}\n\n\tprivate _convertPriority(priority?: string) {\n\t\tif (!priority) {\n\t\t\treturn RegisteredEditorPriority.default;\n\t\t}\n\n\t\tif (priority === NotebookEditorPriority.default) {\n\t\t\treturn RegisteredEditorPriority.default;\n\t\t}\n\n\t\treturn RegisteredEditorPriority.option;\n\n\t}\n\n\tprivate _registerContributionPoint(notebookProviderInfo: NotebookProviderInfo): IDisposable {\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tfor (const selector of notebookProviderInfo.selectors) {\n\t\t\tconst globPattern = (selector as INotebookExclusiveDocumentFilter).include || selector as glob.IRelativePattern | string;\n\t\t\tconst notebookEditorInfo: RegisteredEditorInfo = {\n\t\t\t\tid: notebookProviderInfo.id,\n\t\t\t\tlabel: notebookProviderInfo.displayName,\n\t\t\t\tdetail: notebookProviderInfo.providerDisplayName,\n\t\t\t\tpriority: notebookProviderInfo.exclusive ? RegisteredEditorPriority.exclusive : notebookProviderInfo.priority,\n\t\t\t};\n\t\t\tconst notebookEditorOptions = {\n\t\t\t\tcanHandleDiff: () => !!this._configurationService.getValue(NotebookSetting.textDiffEditorPreview) && !this._accessibilityService.isScreenReaderOptimized(),\n\t\t\t\tcanSupportResource: (resource: URI) => resource.scheme === Schemas.untitled || resource.scheme === Schemas.vscodeNotebookCell || this._fileService.hasProvider(resource)\n\t\t\t};\n\t\t\tconst notebookEditorInputFactory: EditorInputFactoryFunction = ({ resource, options }) => {\n\t\t\t\tconst data = CellUri.parse(resource);\n\t\t\t\tlet notebookUri: URI = resource;\n\t\t\t\tlet cellOptions: IResourceEditorInput | undefined;\n\n\t\t\t\tif (data) {\n\t\t\t\t\tnotebookUri = data.notebook;\n\t\t\t\t\tcellOptions = { resource, options };\n\t\t\t\t}\n\n\t\t\t\tif (!cellOptions) {\n\t\t\t\t\tcellOptions = (options as INotebookEditorOptions | undefined)?.cellOptions;\n\t\t\t\t}\n\n\t\t\t\tconst notebookOptions = { ...options, cellOptions } as INotebookEditorOptions;\n\t\t\t\treturn { editor: NotebookEditorInput.create(this._instantiationService, notebookUri, notebookProviderInfo.id), options: notebookOptions };\n\t\t\t};\n\t\t\tconst notebookUntitledEditorFactory: UntitledEditorInputFactoryFunction = async ({ resource, options }) => {\n\t\t\t\tconst ref = await this._notebookEditorModelResolverService.resolve({ untitledResource: resource }, notebookProviderInfo.id);\n\n\t\t\t\t// untitled notebooks are disposed when they get saved. we should not hold a reference\n\t\t\t\t// to such a disposed notebook and therefore dispose the reference as well\n\t\t\t\tref.object.notebook.onWillDispose(() => {\n\t\t\t\t\tref!.dispose();\n\t\t\t\t});\n\n\t\t\t\treturn { editor: NotebookEditorInput.create(this._instantiationService, ref.object.resource, notebookProviderInfo.id), options };\n\t\t\t};\n\t\t\tconst notebookDiffEditorInputFactory: DiffEditorInputFactoryFunction = ({ modified, original, label, description }) => {\n\t\t\t\treturn { editor: NotebookDiffEditorInput.create(this._instantiationService, modified.resource!, label, description, original.resource!, notebookProviderInfo.id) };\n\t\t\t};\n\n\t\t\tconst notebookFactoryObject: EditorInputFactoryObject = {\n\t\t\t\tcreateEditorInput: notebookEditorInputFactory,\n\t\t\t\tcreateDiffEditorInput: notebookDiffEditorInputFactory,\n\t\t\t\tcreateUntitledEditorInput: notebookUntitledEditorFactory,\n\t\t\t};\n\t\t\tconst notebookCellFactoryObject: EditorInputFactoryObject = {\n\t\t\t\tcreateEditorInput: notebookEditorInputFactory,\n\t\t\t\tcreateDiffEditorInput: notebookDiffEditorInputFactory,\n\t\t\t};\n\n\t\t\t// TODO @lramos15 find a better way to toggle handling diff editors than needing these listeners for every registration\n\t\t\t// This is a lot of event listeners especially if there are many notebooks\n\t\t\tdisposables.add(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\t\tif (e.affectsConfiguration(NotebookSetting.textDiffEditorPreview)) {\n\t\t\t\t\tconst canHandleDiff = !!this._configurationService.getValue(NotebookSetting.textDiffEditorPreview) && !this._accessibilityService.isScreenReaderOptimized();\n\t\t\t\t\tif (canHandleDiff) {\n\t\t\t\t\t\tnotebookFactoryObject.createDiffEditorInput = notebookDiffEditorInputFactory;\n\t\t\t\t\t\tnotebookCellFactoryObject.createDiffEditorInput = notebookDiffEditorInputFactory;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnotebookFactoryObject.createDiffEditorInput = undefined;\n\t\t\t\t\t\tnotebookCellFactoryObject.createDiffEditorInput = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tdisposables.add(this._accessibilityService.onDidChangeScreenReaderOptimized(() => {\n\t\t\t\tconst canHandleDiff = !!this._configurationService.getValue(NotebookSetting.textDiffEditorPreview) && !this._accessibilityService.isScreenReaderOptimized();\n\t\t\t\tif (canHandleDiff) {\n\t\t\t\t\tnotebookFactoryObject.createDiffEditorInput = notebookDiffEditorInputFactory;\n\t\t\t\t\tnotebookCellFactoryObject.createDiffEditorInput = notebookDiffEditorInputFactory;\n\t\t\t\t} else {\n\t\t\t\t\tnotebookFactoryObject.createDiffEditorInput = undefined;\n\t\t\t\t\tnotebookCellFactoryObject.createDiffEditorInput = undefined;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\t// Register the notebook editor\n\t\t\tdisposables.add(this._editorResolverService.registerEditor(\n\t\t\t\tglobPattern,\n\t\t\t\tnotebookEditorInfo,\n\t\t\t\tnotebookEditorOptions,\n\t\t\t\tnotebookFactoryObject,\n\t\t\t));\n\t\t\t// Then register the schema handler as exclusive for that notebook\n\t\t\tdisposables.add(this._editorResolverService.registerEditor(\n\t\t\t\t`${Schemas.vscodeNotebookCell}:/**/${globPattern}`,\n\t\t\t\t{ ...notebookEditorInfo, priority: RegisteredEditorPriority.exclusive },\n\t\t\t\tnotebookEditorOptions,\n\t\t\t\tnotebookCellFactoryObject\n\t\t\t));\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\n\tprivate _clear(): void {\n\t\tthis._contributedEditors.clear();\n\t\tthis._contributedEditorDisposables.clear();\n\t}\n\n\tget(viewType: string): NotebookProviderInfo | undefined {\n\t\treturn this._contributedEditors.get(viewType);\n\t}\n\n\tadd(info: NotebookProviderInfo): IDisposable {\n\t\tif (this._contributedEditors.has(info.id)) {\n\t\t\tthrow new Error(`notebook type '${info.id}' ALREADY EXISTS`);\n\t\t}\n\t\tthis._contributedEditors.set(info.id, info);\n\t\tlet editorRegistration: IDisposable | undefined;\n\n\t\t// built-in notebook providers contribute their own editors\n\t\tif (info.extension) {\n\t\t\teditorRegistration = this._registerContributionPoint(info);\n\t\t\tthis._contributedEditorDisposables.add(editorRegistration);\n\t\t}\n\n\t\tconst mementoObject = this._memento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tmementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] = Array.from(this._contributedEditors.values());\n\t\tthis._memento.saveMemento();\n\n\t\treturn this._register(toDisposable(() => {\n\t\t\tconst mementoObject = this._memento.getMemento(StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\t\tmementoObject[NotebookProviderInfoStore.CUSTOM_EDITORS_ENTRY_ID] = Array.from(this._contributedEditors.values());\n\t\t\tthis._memento.saveMemento();\n\t\t\teditorRegistration?.dispose();\n\t\t\tthis._contributedEditors.delete(info.id);\n\t\t}));\n\t}\n\n\tgetContributedNotebook(resource: URI): readonly NotebookProviderInfo[] {\n\t\tconst result: NotebookProviderInfo[] = [];\n\t\tfor (const info of this._contributedEditors.values()) {\n\t\t\tif (info.matches(resource)) {\n\t\t\t\tresult.push(info);\n\t\t\t}\n\t\t}\n\t\tif (result.length === 0 && resource.scheme === Schemas.untitled) {\n\t\t\t// untitled resource and no path-specific match => all providers apply\n\t\t\treturn Array.from(this._contributedEditors.values());\n\t\t}\n\t\treturn result;\n\t}\n\n\t[Symbol.iterator](): Iterator<NotebookProviderInfo> {\n\t\treturn this._contributedEditors.values();\n\t}\n}\n\nexport class NotebookOutputRendererInfoStore {\n\tprivate readonly contributedRenderers = new Map</* rendererId */ string, NotebookOutputRendererInfo>();\n\tprivate readonly preferredMimetypeMemento: Memento;\n\tprivate readonly preferredMimetype = new Lazy<{ [notebookType: string]: { [mimeType: string]: /* rendererId */ string } }>(\n\t\t() => this.preferredMimetypeMemento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE));\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tthis.preferredMimetypeMemento = new Memento('workbench.editor.notebook.preferredRenderer2', storageService);\n\t}\n\n\tclear() {\n\t\tthis.contributedRenderers.clear();\n\t}\n\n\tget(rendererId: string): NotebookOutputRendererInfo | undefined {\n\t\treturn this.contributedRenderers.get(rendererId);\n\t}\n\n\tgetAll(): NotebookOutputRendererInfo[] {\n\t\treturn Array.from(this.contributedRenderers.values());\n\t}\n\n\tadd(info: NotebookOutputRendererInfo): void {\n\t\tif (this.contributedRenderers.has(info.id)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.contributedRenderers.set(info.id, info);\n\t}\n\n\t/** Update and remember the preferred renderer for the given mimetype in this workspace */\n\tsetPreferred(notebookProviderInfo: NotebookProviderInfo, mimeType: string, rendererId: string) {\n\t\tconst mementoObj = this.preferredMimetype.value;\n\t\tconst forNotebook = mementoObj[notebookProviderInfo.id];\n\t\tif (forNotebook) {\n\t\t\tforNotebook[mimeType] = rendererId;\n\t\t} else {\n\t\t\tmementoObj[notebookProviderInfo.id] = { [mimeType]: rendererId };\n\t\t}\n\n\t\tthis.preferredMimetypeMemento.saveMemento();\n\t}\n\n\tfindBestRenderers(notebookProviderInfo: NotebookProviderInfo | undefined, mimeType: string, kernelProvides: readonly string[] | undefined): IOrderedMimeType[] {\n\n\t\tconst enum ReuseOrder {\n\t\t\tPreviouslySelected = 1 << 8,\n\t\t\tSameExtensionAsNotebook = 2 << 8,\n\t\t\tOtherRenderer = 3 << 8,\n\t\t\tBuiltIn = 4 << 8,\n\t\t}\n\n\t\tconst preferred = notebookProviderInfo && this.preferredMimetype.value[notebookProviderInfo.id]?.[mimeType];\n\t\tconst notebookExtId = notebookProviderInfo?.extension?.value;\n\t\tconst notebookId = notebookProviderInfo?.id;\n\t\tconst renderers: { ordered: IOrderedMimeType; score: number }[] = Array.from(this.contributedRenderers.values())\n\t\t\t.map(renderer => {\n\t\t\t\tconst ownScore = kernelProvides === undefined\n\t\t\t\t\t? renderer.matchesWithoutKernel(mimeType)\n\t\t\t\t\t: renderer.matches(mimeType, kernelProvides);\n\n\t\t\t\tif (ownScore === NotebookRendererMatch.Never) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst rendererExtId = renderer.extensionId.value;\n\t\t\t\tconst reuseScore = preferred === renderer.id\n\t\t\t\t\t? ReuseOrder.PreviouslySelected\n\t\t\t\t\t: rendererExtId === notebookExtId || RENDERER_EQUIVALENT_EXTENSIONS.get(rendererExtId)?.has(notebookId!)\n\t\t\t\t\t\t? ReuseOrder.SameExtensionAsNotebook\n\t\t\t\t\t\t: renderer.isBuiltin ? ReuseOrder.BuiltIn : ReuseOrder.OtherRenderer;\n\t\t\t\treturn {\n\t\t\t\t\tordered: { mimeType, rendererId: renderer.id, isTrusted: true },\n\t\t\t\t\tscore: reuseScore | ownScore,\n\t\t\t\t};\n\t\t\t}).filter(isDefined);\n\n\t\tif (renderers.length === 0) {\n\t\t\treturn [{ mimeType, rendererId: RENDERER_NOT_AVAILABLE, isTrusted: true }];\n\t\t}\n\n\t\treturn renderers.sort((a, b) => a.score - b.score).map(r => r.ordered);\n\t}\n}\n\nclass ModelData implements IDisposable {\n\tprivate readonly _modelEventListeners = new DisposableStore();\n\n\tconstructor(\n\t\treadonly model: NotebookTextModel,\n\t\tonWillDispose: (model: INotebookTextModel) => void\n\t) {\n\t\tthis._modelEventListeners.add(model.onWillDispose(() => onWillDispose(model)));\n\t}\n\n\tdispose(): void {\n\t\tthis._modelEventListeners.dispose();\n\t}\n}\n\nexport class NotebookService extends Disposable implements INotebookService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate static _storageNotebookViewTypeProvider = 'notebook.viewTypeProvider';\n\tprivate readonly _memento: Memento;\n\tprivate readonly _viewTypeCache: MementoObject;\n\n\tprivate readonly _notebookProviders = new Map<string, SimpleNotebookProviderInfo>();\n\tprivate _notebookProviderInfoStore: NotebookProviderInfoStore | undefined = undefined;\n\tprivate get notebookProviderInfoStore(): NotebookProviderInfoStore {\n\t\tif (!this._notebookProviderInfoStore) {\n\t\t\tthis._notebookProviderInfoStore = this._register(this._instantiationService.createInstance(NotebookProviderInfoStore));\n\t\t}\n\n\t\treturn this._notebookProviderInfoStore;\n\t}\n\tprivate readonly _notebookRenderersInfoStore = this._instantiationService.createInstance(NotebookOutputRendererInfoStore);\n\tprivate readonly _onDidChangeOutputRenderers = this._register(new Emitter<void>());\n\treadonly onDidChangeOutputRenderers = this._onDidChangeOutputRenderers.event;\n\n\tprivate readonly _notebookStaticPreloadInfoStore = new Set<NotebookStaticPreloadInfo>();\n\n\tprivate readonly _models = new ResourceMap<ModelData>();\n\n\tprivate readonly _onWillAddNotebookDocument = this._register(new Emitter<NotebookTextModel>());\n\tprivate readonly _onDidAddNotebookDocument = this._register(new Emitter<NotebookTextModel>());\n\tprivate readonly _onWillRemoveNotebookDocument = this._register(new Emitter<NotebookTextModel>());\n\tprivate readonly _onDidRemoveNotebookDocument = this._register(new Emitter<NotebookTextModel>());\n\n\treadonly onWillAddNotebookDocument = this._onWillAddNotebookDocument.event;\n\treadonly onDidAddNotebookDocument = this._onDidAddNotebookDocument.event;\n\treadonly onDidRemoveNotebookDocument = this._onDidRemoveNotebookDocument.event;\n\treadonly onWillRemoveNotebookDocument = this._onWillRemoveNotebookDocument.event;\n\n\tprivate readonly _onAddViewType = this._register(new Emitter<string>());\n\treadonly onAddViewType = this._onAddViewType.event;\n\n\tprivate readonly _onWillRemoveViewType = this._register(new Emitter<string>());\n\treadonly onWillRemoveViewType = this._onWillRemoveViewType.event;\n\n\tprivate readonly _onDidChangeEditorTypes = this._register(new Emitter<void>());\n\tonDidChangeEditorTypes: Event<void> = this._onDidChangeEditorTypes.event;\n\n\tprivate _cutItems: NotebookCellTextModel[] | undefined;\n\tprivate _lastClipboardIsCopy: boolean = true;\n\n\tprivate _displayOrder!: MimeTypeDisplayOrder;\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\t\tsuper();\n\n\t\tnotebookRendererExtensionPoint.setHandler((renderers) => {\n\t\t\tthis._notebookRenderersInfoStore.clear();\n\n\t\t\tfor (const extension of renderers) {\n\t\t\t\tfor (const notebookContribution of extension.value) {\n\t\t\t\t\tif (!notebookContribution.entrypoint) { // avoid crashing\n\t\t\t\t\t\textension.collector.error(`Notebook renderer does not specify entry point`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst id = notebookContribution.id;\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\textension.collector.error(`Notebook renderer does not specify id-property`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._notebookRenderersInfoStore.add(new NotebookOutputRendererInfo({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\textension: extension.description,\n\t\t\t\t\t\tentrypoint: notebookContribution.entrypoint,\n\t\t\t\t\t\tdisplayName: notebookContribution.displayName,\n\t\t\t\t\t\tmimeTypes: notebookContribution.mimeTypes || [],\n\t\t\t\t\t\tdependencies: notebookContribution.dependencies,\n\t\t\t\t\t\toptionalDependencies: notebookContribution.optionalDependencies,\n\t\t\t\t\t\trequiresMessaging: notebookContribution.requiresMessaging,\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidChangeOutputRenderers.fire();\n\t\t});\n\n\t\tnotebookPreloadExtensionPoint.setHandler(extensions => {\n\t\t\tthis._notebookStaticPreloadInfoStore.clear();\n\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tif (!isProposedApiEnabled(extension.description, 'contribNotebookStaticPreloads')) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (const notebookContribution of extension.value) {\n\t\t\t\t\tif (!notebookContribution.entrypoint) { // avoid crashing\n\t\t\t\t\t\textension.collector.error(`Notebook preload does not specify entry point`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst type = notebookContribution.type;\n\t\t\t\t\tif (!type) {\n\t\t\t\t\t\textension.collector.error(`Notebook preload does not specify type-property`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._notebookStaticPreloadInfoStore.add(new NotebookStaticPreloadInfo({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\textension: extension.description,\n\t\t\t\t\t\tentrypoint: notebookContribution.entrypoint,\n\t\t\t\t\t\tlocalResourceRoots: notebookContribution.localResourceRoots ?? [],\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst updateOrder = () => {\n\t\t\tthis._displayOrder = new MimeTypeDisplayOrder(\n\t\t\t\tthis._configurationService.getValue<string[]>(NotebookSetting.displayOrder) || [],\n\t\t\t\tthis._accessibilityService.isScreenReaderOptimized()\n\t\t\t\t\t? ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER\n\t\t\t\t\t: NOTEBOOK_DISPLAY_ORDER,\n\t\t\t);\n\t\t};\n\n\t\tupdateOrder();\n\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(NotebookSetting.displayOrder)) {\n\t\t\t\tupdateOrder();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._accessibilityService.onDidChangeScreenReaderOptimized(() => {\n\t\t\tupdateOrder();\n\t\t}));\n\n\t\tlet decorationTriggeredAdjustment = false;\n\t\tconst decorationCheckSet = new Set<string>();\n\t\tconst onDidAddDecorationType = (e: string) => {\n\t\t\tif (decorationTriggeredAdjustment) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (decorationCheckSet.has(e)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst options = this._codeEditorService.resolveDecorationOptions(e, true);\n\t\t\tif (options.afterContentClassName || options.beforeContentClassName) {\n\t\t\t\tconst cssRules = this._codeEditorService.resolveDecorationCSSRules(e);\n\t\t\t\tif (cssRules !== null) {\n\t\t\t\t\tfor (let i = 0; i < cssRules.length; i++) {\n\t\t\t\t\t\t// The following ways to index into the list are equivalent\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t((cssRules[i] as CSSStyleRule).selectorText.endsWith('::after') || (cssRules[i] as CSSStyleRule).selectorText.endsWith('::after'))\n\t\t\t\t\t\t\t&& (cssRules[i] as CSSStyleRule).cssText.indexOf('top:') > -1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// there is a `::before` or `::after` text decoration whose position is above or below current line\n\t\t\t\t\t\t\t// we at least make sure that the editor top padding is at least one line\n\t\t\t\t\t\t\tconst editorOptions = this.configurationService.getValue<IEditorOptions>('editor');\n\t\t\t\t\t\t\tupdateEditorTopPadding(BareFontInfo.createFromRawSettings(editorOptions, PixelRatio.value).lineHeight + 2);\n\t\t\t\t\t\t\tdecorationTriggeredAdjustment = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdecorationCheckSet.add(e);\n\t\t};\n\t\tthis._register(this._codeEditorService.onDecorationTypeRegistered(onDidAddDecorationType));\n\t\tthis._codeEditorService.listDecorationTypes().forEach(onDidAddDecorationType);\n\n\t\tthis._memento = new Memento(NotebookService._storageNotebookViewTypeProvider, this._storageService);\n\t\tthis._viewTypeCache = this._memento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t}\n\n\n\tgetEditorTypes(): IEditorType[] {\n\t\treturn [...this.notebookProviderInfoStore].map(info => ({\n\t\t\tid: info.id,\n\t\t\tdisplayName: info.displayName,\n\t\t\tproviderDisplayName: info.providerDisplayName\n\t\t}));\n\t}\n\n\tclearEditorCache(): void {\n\t\tthis.notebookProviderInfoStore.clearEditorCache();\n\t}\n\n\tprivate _postDocumentOpenActivation(viewType: string) {\n\t\t// send out activations on notebook text model creation\n\t\tthis._extensionService.activateByEvent(`onNotebook:${viewType}`);\n\t\tthis._extensionService.activateByEvent(`onNotebook:*`);\n\t}\n\n\tasync canResolve(viewType: string): Promise<boolean> {\n\t\tif (this._notebookProviders.has(viewType)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\t\tawait this._extensionService.activateByEvent(`onNotebookSerializer:${viewType}`);\n\n\t\treturn this._notebookProviders.has(viewType);\n\t}\n\n\tregisterContributedNotebookType(viewType: string, data: INotebookContributionData): IDisposable {\n\n\t\tconst info = new NotebookProviderInfo({\n\t\t\textension: data.extension,\n\t\t\tid: viewType,\n\t\t\tdisplayName: data.displayName,\n\t\t\tproviderDisplayName: data.providerDisplayName,\n\t\t\texclusive: data.exclusive,\n\t\t\tpriority: RegisteredEditorPriority.default,\n\t\t\tselectors: []\n\t\t});\n\n\t\tinfo.update({ selectors: data.filenamePattern });\n\n\t\tconst reg = this.notebookProviderInfoStore.add(info);\n\t\tthis._onDidChangeEditorTypes.fire();\n\n\t\treturn toDisposable(() => {\n\t\t\treg.dispose();\n\t\t\tthis._onDidChangeEditorTypes.fire();\n\t\t});\n\t}\n\n\tprivate _registerProviderData(viewType: string, data: SimpleNotebookProviderInfo): IDisposable {\n\t\tif (this._notebookProviders.has(viewType)) {\n\t\t\tthrow new Error(`notebook provider for viewtype '${viewType}' already exists`);\n\t\t}\n\t\tthis._notebookProviders.set(viewType, data);\n\t\tthis._onAddViewType.fire(viewType);\n\t\treturn toDisposable(() => {\n\t\t\tthis._onWillRemoveViewType.fire(viewType);\n\t\t\tthis._notebookProviders.delete(viewType);\n\t\t});\n\t}\n\n\tregisterNotebookSerializer(viewType: string, extensionData: NotebookExtensionDescription, serializer: INotebookSerializer): IDisposable {\n\t\tthis.notebookProviderInfoStore.get(viewType)?.update({ options: serializer.options });\n\t\tthis._viewTypeCache[viewType] = extensionData.id.value;\n\t\tthis._persistMementos();\n\t\treturn this._registerProviderData(viewType, new SimpleNotebookProviderInfo(viewType, serializer, extensionData));\n\t}\n\n\tasync withNotebookDataProvider(viewType: string): Promise<SimpleNotebookProviderInfo> {\n\t\tconst selected = this.notebookProviderInfoStore.get(viewType);\n\t\tif (!selected) {\n\t\t\tconst knownProvider = this.getViewTypeProvider(viewType);\n\n\t\t\tconst actions = knownProvider ? [\n\t\t\t\ttoAction({\n\t\t\t\t\tid: 'workbench.notebook.action.installMissingViewType', label: localize('notebookOpenInstallMissingViewType', \"Install extension for '{0}'\", viewType), run: async () => {\n\t\t\t\t\t\tawait this._instantiationService.createInstance(InstallRecommendedExtensionAction, knownProvider).run();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t] : [];\n\n\t\t\tthrow createErrorWithActions(`UNKNOWN notebook type '${viewType}'`, actions);\n\t\t}\n\t\tawait this.canResolve(selected.id);\n\t\tconst result = this._notebookProviders.get(selected.id);\n\t\tif (!result) {\n\t\t\tthrow new Error(`NO provider registered for view type: '${selected.id}'`);\n\t\t}\n\t\treturn result;\n\t}\n\n\n\tprivate _persistMementos(): void {\n\t\tthis._memento.saveMemento();\n\t}\n\n\tgetViewTypeProvider(viewType: string): string | undefined {\n\t\treturn this._viewTypeCache[viewType];\n\t}\n\n\tgetRendererInfo(rendererId: string): INotebookRendererInfo | undefined {\n\t\treturn this._notebookRenderersInfoStore.get(rendererId);\n\t}\n\n\tupdateMimePreferredRenderer(viewType: string, mimeType: string, rendererId: string, otherMimetypes: readonly string[]): void {\n\t\tconst info = this.notebookProviderInfoStore.get(viewType);\n\t\tif (info) {\n\t\t\tthis._notebookRenderersInfoStore.setPreferred(info, mimeType, rendererId);\n\t\t}\n\n\t\tthis._displayOrder.prioritize(mimeType, otherMimetypes);\n\t}\n\n\tsaveMimeDisplayOrder(target: ConfigurationTarget) {\n\t\tthis._configurationService.updateValue(NotebookSetting.displayOrder, this._displayOrder.toArray(), target);\n\t}\n\n\tgetRenderers(): INotebookRendererInfo[] {\n\t\treturn this._notebookRenderersInfoStore.getAll();\n\t}\n\n\t*getStaticPreloads(viewType: string): Iterable<INotebookStaticPreloadInfo> {\n\t\tfor (const preload of this._notebookStaticPreloadInfoStore) {\n\t\t\tif (preload.type === viewType) {\n\t\t\t\tyield preload;\n\t\t\t}\n\t\t}\n\t}\n\n\t// --- notebook documents: create, destory, retrieve, enumerate\n\n\tcreateNotebookTextModel(viewType: string, uri: URI, data: NotebookData, transientOptions: TransientOptions): NotebookTextModel {\n\t\tif (this._models.has(uri)) {\n\t\t\tthrow new Error(`notebook for ${uri} already exists`);\n\t\t}\n\t\tconst notebookModel = this._instantiationService.createInstance(NotebookTextModel, viewType, uri, data.cells, data.metadata, transientOptions);\n\t\tthis._models.set(uri, new ModelData(notebookModel, this._onWillDisposeDocument.bind(this)));\n\t\tthis._onWillAddNotebookDocument.fire(notebookModel);\n\t\tthis._onDidAddNotebookDocument.fire(notebookModel);\n\t\tthis._postDocumentOpenActivation(viewType);\n\t\treturn notebookModel;\n\t}\n\n\tgetNotebookTextModel(uri: URI): NotebookTextModel | undefined {\n\t\treturn this._models.get(uri)?.model;\n\t}\n\n\tgetNotebookTextModels(): Iterable<NotebookTextModel> {\n\t\treturn Iterable.map(this._models.values(), data => data.model);\n\t}\n\n\tlistNotebookDocuments(): NotebookTextModel[] {\n\t\treturn [...this._models].map(e => e[1].model);\n\t}\n\n\tprivate _onWillDisposeDocument(model: INotebookTextModel): void {\n\t\tconst modelData = this._models.get(model.uri);\n\t\tif (modelData) {\n\t\t\tthis._onWillRemoveNotebookDocument.fire(modelData.model);\n\t\t\tthis._models.delete(model.uri);\n\t\t\tmodelData.dispose();\n\t\t\tthis._onDidRemoveNotebookDocument.fire(modelData.model);\n\t\t}\n\t}\n\n\tgetOutputMimeTypeInfo(textModel: NotebookTextModel, kernelProvides: readonly string[] | undefined, output: IOutputDto): readonly IOrderedMimeType[] {\n\t\tconst sorted = this._displayOrder.sort(new Set<string>(output.outputs.map(op => op.mime)));\n\t\tconst notebookProviderInfo = this.notebookProviderInfoStore.get(textModel.viewType);\n\n\t\treturn sorted\n\t\t\t.flatMap(mimeType => this._notebookRenderersInfoStore.findBestRenderers(notebookProviderInfo, mimeType, kernelProvides))\n\t\t\t.sort((a, b) => (a.rendererId === RENDERER_NOT_AVAILABLE ? 1 : 0) - (b.rendererId === RENDERER_NOT_AVAILABLE ? 1 : 0));\n\t}\n\n\tgetContributedNotebookTypes(resource?: URI): readonly NotebookProviderInfo[] {\n\t\tif (resource) {\n\t\t\treturn this.notebookProviderInfoStore.getContributedNotebook(resource);\n\t\t}\n\n\t\treturn [...this.notebookProviderInfoStore];\n\t}\n\n\tgetContributedNotebookType(viewType: string): NotebookProviderInfo | undefined {\n\t\treturn this.notebookProviderInfoStore.get(viewType);\n\t}\n\n\tgetNotebookProviderResourceRoots(): URI[] {\n\t\tconst ret: URI[] = [];\n\t\tthis._notebookProviders.forEach(val => {\n\t\t\tif (val.extensionData.location) {\n\t\t\t\tret.push(URI.revive(val.extensionData.location));\n\t\t\t}\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\t// --- copy & paste\n\n\tsetToCopy(items: NotebookCellTextModel[], isCopy: boolean) {\n\t\tthis._cutItems = items;\n\t\tthis._lastClipboardIsCopy = isCopy;\n\t}\n\n\tgetToCopy(): { items: NotebookCellTextModel[]; isCopy: boolean } | undefined {\n\t\tif (this._cutItems) {\n\t\t\treturn { items: this._cutItems, isCopy: this._lastClipboardIsCopy };\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n}\n"]}