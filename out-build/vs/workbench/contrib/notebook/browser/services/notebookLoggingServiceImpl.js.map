{"version":3,"sources":["vs/workbench/contrib/notebook/browser/services/notebookLoggingServiceImpl.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAOhG,MAAM,YAAY,GAAG,oBAAoB,CAAC;IAEnC,IAAM,IAAI,GAAV,MAAM,IAAuB,SAAQ,eAAG;iBAGvC,OAAE,GAAW,UAAX,AAAqB,CAAC;QAG/B,YACiB,aAAkB;YAElC,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,CAAC,GAAS,IAAI,CAAC,CAAC,CAAS,aAAa,CAAC,YAAY,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAmB,EAAE,IAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5I,CAAC;QAED,KAAK,CAAC,QAAgB,EAAE,MAAc;YACrC,IAAI,CAAC,CAAC,CAAO,KAAK,CAAC,IAAI,QAAQ,KAAK,MAAM,EAAE,CAAC,CAAC;QAC/C,CAAC;QAED,IAAI,CAAC,QAAgB,EAAE,MAAc;YACpC,IAAI,CAAC,CAAC,CAAO,IAAI,CAAC,IAAI,QAAQ,KAAK,MAAM,EAAE,CAAC,CAAC;QAC9C,CAAC;;IAnBW,oBAAI;mBAAJ,IAAI;QAOd,WAAA,SAAG,CAAA;OAPO,IAAI,CAoBhB","file":"notebookLoggingServiceImpl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { INotebookLoggingService } from 'vs/workbench/contrib/notebook/common/notebookLoggingService';\nimport { ILogger, ILoggerService } from 'vs/platform/log/common/log';\n\nconst logChannelId = 'notebook.rendering';\n\nexport class NotebookLoggingService extends Disposable implements INotebookLoggingService {\n\t_serviceBrand: undefined;\n\n\tstatic ID: string = 'notebook';\n\tprivate readonly _logger: ILogger;\n\n\tconstructor(\n\t\t@ILoggerService loggerService: ILoggerService,\n\t) {\n\t\tsuper();\n\t\tthis._logger = this._register(loggerService.createLogger(logChannelId, { name: nls.localize('renderChannelName', \"Notebook rendering\") }));\n\t}\n\n\tdebug(category: string, output: string): void {\n\t\tthis._logger.debug(`[${category}] ${output}`);\n\t}\n\n\tinfo(category: string, output: string): void {\n\t\tthis._logger.info(`[${category}] ${output}`);\n\t}\n}\n\n"]}