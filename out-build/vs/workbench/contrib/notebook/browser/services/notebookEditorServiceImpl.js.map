{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/services/notebookEditorServiceImpl.ts"],"names":[],"mappings":"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","file":"notebookEditorServiceImpl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ResourceMap } from 'vs/base/common/map';\nimport { getDefaultNotebookCreationOptions, NotebookEditorWidget } from 'vs/workbench/contrib/notebook/browser/notebookEditorWidget';\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { IEditorGroupsService, IEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { isCompositeNotebookEditorInput, NotebookEditorInput } from 'vs/workbench/contrib/notebook/common/notebookEditorInput';\nimport { IBorrowValue, INotebookEditorService } from 'vs/workbench/contrib/notebook/browser/services/notebookEditorService';\nimport { INotebookEditor, INotebookEditorCreationOptions } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { Emitter } from 'vs/base/common/event';\nimport { GroupIdentifier, GroupModelChangeKind } from 'vs/workbench/common/editor';\nimport { Dimension } from 'vs/base/browser/dom';\nimport { URI } from 'vs/base/common/uri';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { InteractiveWindowOpen } from 'vs/workbench/contrib/notebook/common/notebookContextKeys';\n\nexport class NotebookEditorWidgetService implements INotebookEditorService {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate _tokenPool = 1;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _notebookEditors = new Map<string, INotebookEditor>();\n\n\tprivate readonly _onNotebookEditorAdd = new Emitter<INotebookEditor>();\n\tprivate readonly _onNotebookEditorsRemove = new Emitter<INotebookEditor>();\n\treadonly onDidAddNotebookEditor = this._onNotebookEditorAdd.event;\n\treadonly onDidRemoveNotebookEditor = this._onNotebookEditorsRemove.event;\n\n\tprivate readonly _borrowableEditors = new Map<number, ResourceMap<{ widget: NotebookEditorWidget; token: number | undefined }>>();\n\n\tconstructor(\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\n\t\tconst groupListener = new Map<number, IDisposable[]>();\n\t\tconst onNewGroup = (group: IEditorGroup) => {\n\t\t\tconst { id } = group;\n\t\t\tconst listeners: IDisposable[] = [];\n\t\t\tlisteners.push(group.onDidCloseEditor(e => {\n\t\t\t\tconst widgets = this._borrowableEditors.get(group.id);\n\t\t\t\tif (!widgets) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst inputs = e.editor instanceof NotebookEditorInput ? [e.editor] : (isCompositeNotebookEditorInput(e.editor) ? e.editor.editorInputs : []);\n\t\t\t\tinputs.forEach(input => {\n\t\t\t\t\tconst value = widgets.get(input.resource);\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvalue.token = undefined;\n\t\t\t\t\tthis._disposeWidget(value.widget);\n\t\t\t\t\twidgets.delete(input.resource);\n\t\t\t\t\tvalue.widget = (<any>undefined); // unset the widget so that others that still hold a reference don't harm us\n\t\t\t\t});\n\t\t\t}));\n\t\t\tlisteners.push(group.onWillMoveEditor(e => {\n\t\t\t\tif (e.editor instanceof NotebookEditorInput) {\n\t\t\t\t\tthis._allowWidgetMove(e.editor, e.groupId, e.target);\n\t\t\t\t}\n\n\t\t\t\tif (isCompositeNotebookEditorInput(e.editor)) {\n\t\t\t\t\te.editor.editorInputs.forEach(input => {\n\t\t\t\t\t\tthis._allowWidgetMove(input, e.groupId, e.target);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}));\n\t\t\tgroupListener.set(id, listeners);\n\t\t};\n\t\tthis._disposables.add(editorGroupService.onDidAddGroup(onNewGroup));\n\t\teditorGroupService.whenReady.then(() => editorGroupService.groups.forEach(onNewGroup));\n\n\t\t// group removed -> clean up listeners, clean up widgets\n\t\tthis._disposables.add(editorGroupService.onDidRemoveGroup(group => {\n\t\t\tconst listeners = groupListener.get(group.id);\n\t\t\tif (listeners) {\n\t\t\t\tlisteners.forEach(listener => listener.dispose());\n\t\t\t\tgroupListener.delete(group.id);\n\t\t\t}\n\t\t\tconst widgets = this._borrowableEditors.get(group.id);\n\t\t\tthis._borrowableEditors.delete(group.id);\n\t\t\tif (widgets) {\n\t\t\t\tfor (const value of widgets.values()) {\n\t\t\t\t\tvalue.token = undefined;\n\t\t\t\t\tthis._disposeWidget(value.widget);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tconst interactiveWindowOpen = InteractiveWindowOpen.bindTo(contextKeyService);\n\t\tthis._disposables.add(editorService.onDidEditorsChange(e => {\n\t\t\tif (e.event.kind === GroupModelChangeKind.EDITOR_OPEN && !interactiveWindowOpen.get()) {\n\t\t\t\tif (editorService.editors.find(editor => editor.editorId === 'interactive')) {\n\t\t\t\t\tinteractiveWindowOpen.set(true);\n\t\t\t\t}\n\t\t\t} else if (e.event.kind === GroupModelChangeKind.EDITOR_CLOSE && interactiveWindowOpen.get()) {\n\t\t\t\tif (!editorService.editors.find(editor => editor.editorId === 'interactive')) {\n\t\t\t\t\tinteractiveWindowOpen.set(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tdispose() {\n\t\tthis._disposables.dispose();\n\t\tthis._onNotebookEditorAdd.dispose();\n\t\tthis._onNotebookEditorsRemove.dispose();\n\t}\n\n\t// --- group-based editor borrowing...\n\n\tprivate _disposeWidget(widget: NotebookEditorWidget): void {\n\t\twidget.onWillHide();\n\t\tconst domNode = widget.getDomNode();\n\t\twidget.dispose();\n\t\tdomNode.remove();\n\t}\n\n\tprivate _allowWidgetMove(input: NotebookEditorInput, sourceID: GroupIdentifier, targetID: GroupIdentifier): void {\n\t\tconst targetWidget = this._borrowableEditors.get(targetID)?.get(input.resource);\n\t\tif (targetWidget) {\n\t\t\t// not needed\n\t\t\treturn;\n\t\t}\n\n\t\tconst widget = this._borrowableEditors.get(sourceID)?.get(input.resource);\n\t\tif (!widget) {\n\t\t\tthrow new Error('no widget at source group');\n\t\t}\n\t\t// don't allow the widget to be retrieved at its previous location any more\n\t\tthis._borrowableEditors.get(sourceID)?.delete(input.resource);\n\n\t\t// allow the widget to be retrieved at its new location\n\t\tlet targetMap = this._borrowableEditors.get(targetID);\n\t\tif (!targetMap) {\n\t\t\ttargetMap = new ResourceMap();\n\t\t\tthis._borrowableEditors.set(targetID, targetMap);\n\t\t}\n\t\ttargetMap.set(input.resource, widget);\n\t}\n\n\tretrieveExistingWidgetFromURI(resource: URI): IBorrowValue<NotebookEditorWidget> | undefined {\n\t\tfor (const widgetInfo of this._borrowableEditors.values()) {\n\t\t\tconst widget = widgetInfo.get(resource);\n\t\t\tif (widget) {\n\t\t\t\treturn this._createBorrowValue(widget.token!, widget);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tretrieveAllExistingWidgets(): IBorrowValue<NotebookEditorWidget>[] {\n\t\tconst ret: IBorrowValue<NotebookEditorWidget>[] = [];\n\t\tfor (const widgetInfo of this._borrowableEditors.values()) {\n\t\t\tfor (const widget of widgetInfo.values()) {\n\t\t\t\tret.push(this._createBorrowValue(widget.token!, widget));\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tretrieveWidget(accessor: ServicesAccessor, group: IEditorGroup, input: NotebookEditorInput, creationOptions?: INotebookEditorCreationOptions, initialDimension?: Dimension): IBorrowValue<NotebookEditorWidget> {\n\n\t\tlet value = this._borrowableEditors.get(group.id)?.get(input.resource);\n\n\t\tif (!value) {\n\t\t\t// NEW widget\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst widget = instantiationService.createInstance(NotebookEditorWidget, creationOptions ?? getDefaultNotebookCreationOptions(), initialDimension);\n\t\t\tconst token = this._tokenPool++;\n\t\t\tvalue = { widget, token };\n\n\t\t\tlet map = this._borrowableEditors.get(group.id);\n\t\t\tif (!map) {\n\t\t\t\tmap = new ResourceMap();\n\t\t\t\tthis._borrowableEditors.set(group.id, map);\n\t\t\t}\n\t\t\tmap.set(input.resource, value);\n\n\t\t} else {\n\t\t\t// reuse a widget which was either free'ed before or which\n\t\t\t// is simply being reused...\n\t\t\tvalue.token = this._tokenPool++;\n\t\t}\n\n\t\treturn this._createBorrowValue(value.token!, value);\n\t}\n\n\tprivate _createBorrowValue(myToken: number, widget: { widget: NotebookEditorWidget; token: number | undefined }): IBorrowValue<NotebookEditorWidget> {\n\t\treturn {\n\t\t\tget value() {\n\t\t\t\treturn widget.token === myToken ? widget.widget : undefined;\n\t\t\t}\n\t\t};\n\t}\n\n\t// --- editor management\n\n\taddNotebookEditor(editor: INotebookEditor): void {\n\t\tthis._notebookEditors.set(editor.getId(), editor);\n\t\tthis._onNotebookEditorAdd.fire(editor);\n\t}\n\n\tremoveNotebookEditor(editor: INotebookEditor): void {\n\t\tif (this._notebookEditors.has(editor.getId())) {\n\t\t\tthis._notebookEditors.delete(editor.getId());\n\t\t\tthis._onNotebookEditorsRemove.fire(editor);\n\t\t}\n\t}\n\n\tgetNotebookEditor(editorId: string): INotebookEditor | undefined {\n\t\treturn this._notebookEditors.get(editorId);\n\t}\n\n\tlistNotebookEditors(): readonly INotebookEditor[] {\n\t\treturn [...this._notebookEditors].map(e => e[1]);\n\t}\n}\n"]}