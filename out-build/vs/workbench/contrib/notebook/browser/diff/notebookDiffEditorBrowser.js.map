{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/diff/notebookDiffEditorBrowser.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAgBhG,IAAY,QAGX;IAHD,WAAY,QAAQ;QACnB,+CAAY,CAAA;QACZ,+CAAY,CAAA;IACb,CAAC,EAHW,QAAQ,wBAAR,QAAQ,QAGnB;IAoGY,QAAA,IAAI,GAAe,EAAE,CAAC;IACtB,QAAA,IAAI,GAAuB,IAAI,gBAAG,CAAoB,8BAA8B,EAAE,KAAK,CAAC,CAAC;IAC7F,QAAA,IAAI,GAA0B,IAAI,gBAAG,CAAoB,iCAAiC,EAAE,KAAK,CAAC,CAAC;IACnG,QAAA,IAAI,GAAmC,IAAI,gBAAG,CAAoB,kCAAkC,EAAE,KAAK,CAAC,CAAC","file":"notebookDiffEditorBrowser.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CellLayoutState, ICellOutputViewModel, ICommonCellInfo, IGenericCellViewModel, IInsetRenderOutput } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { DiffElementViewModelBase } from 'vs/workbench/contrib/notebook/browser/diff/diffElementViewModel';\nimport { Event } from 'vs/base/common/event';\nimport { BareFontInfo } from 'vs/editor/common/config/fontInfo';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { IMouseWheelEvent } from 'vs/base/browser/mouseEvent';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { NotebookOptions } from 'vs/workbench/contrib/notebook/browser/notebookOptions';\nimport { NotebookLayoutInfo } from 'vs/workbench/contrib/notebook/browser/notebookViewEvents';\nimport { WorkbenchToolBar } from 'vs/platform/actions/browser/toolbar';\nimport { DiffEditorWidget } from 'vs/editor/browser/widget/diffEditor/diffEditorWidget';\n\nexport enum DiffSide {\n\tOriginal = 0,\n\tModified = 1\n}\n\nexport interface IDiffCellInfo extends ICommonCellInfo {\n\tdiffElement: DiffElementViewModelBase;\n}\n\nexport interface INotebookTextDiffEditor {\n\tnotebookOptions: NotebookOptions;\n\treadonly textModel?: NotebookTextModel;\n\tonMouseUp: Event<{ readonly event: MouseEvent; readonly target: DiffElementViewModelBase }>;\n\tonDidScroll: Event<void>;\n\tonDidDynamicOutputRendered: Event<{ cell: IGenericCellViewModel; output: ICellOutputViewModel }>;\n\tgetOverflowContainerDomNode(): HTMLElement;\n\tgetLayoutInfo(): NotebookLayoutInfo;\n\tgetScrollTop(): number;\n\tgetScrollHeight(): number;\n\tlayoutNotebookCell(cell: DiffElementViewModelBase, height: number): void;\n\tcreateOutput(cellDiffViewModel: DiffElementViewModelBase, cellViewModel: IDiffNestedCellViewModel, output: IInsetRenderOutput, getOffset: () => number, diffSide: DiffSide): void;\n\tshowInset(cellDiffViewModel: DiffElementViewModelBase, cellViewModel: IDiffNestedCellViewModel, displayOutput: ICellOutputViewModel, diffSide: DiffSide): void;\n\tremoveInset(cellDiffViewModel: DiffElementViewModelBase, cellViewModel: IDiffNestedCellViewModel, output: ICellOutputViewModel, diffSide: DiffSide): void;\n\thideInset(cellDiffViewModel: DiffElementViewModelBase, cellViewModel: IDiffNestedCellViewModel, output: ICellOutputViewModel): void;\n\t/**\n\t * Trigger the editor to scroll from scroll event programmatically\n\t */\n\ttriggerScroll(event: IMouseWheelEvent): void;\n\tdelegateVerticalScrollbarPointerDown(browserEvent: PointerEvent): void;\n\tgetCellByInfo(cellInfo: ICommonCellInfo): IGenericCellViewModel;\n\tfocusNotebookCell(cell: IGenericCellViewModel, focus: 'editor' | 'container' | 'output'): Promise<void>;\n\tfocusNextNotebookCell(cell: IGenericCellViewModel, focus: 'editor' | 'container' | 'output'): Promise<void>;\n\tupdateOutputHeight(cellInfo: ICommonCellInfo, output: ICellOutputViewModel, height: number, isInit: boolean): void;\n\tdeltaCellOutputContainerClassNames(diffSide: DiffSide, cellId: string, added: string[], removed: string[]): void;\n\tpreviousChange(): void;\n\tnextChange(): void;\n}\n\nexport interface IDiffNestedCellViewModel {\n\n}\n\nexport interface CellDiffCommonRenderTemplate {\n\treadonly leftBorder: HTMLElement;\n\treadonly rightBorder: HTMLElement;\n\treadonly topBorder: HTMLElement;\n\treadonly bottomBorder: HTMLElement;\n}\n\nexport interface CellDiffSingleSideRenderTemplate extends CellDiffCommonRenderTemplate {\n\treadonly container: HTMLElement;\n\treadonly body: HTMLElement;\n\treadonly diffEditorContainer: HTMLElement;\n\treadonly diagonalFill: HTMLElement;\n\treadonly elementDisposables: DisposableStore;\n\treadonly sourceEditor: CodeEditorWidget;\n\treadonly metadataHeaderContainer: HTMLElement;\n\treadonly metadataInfoContainer: HTMLElement;\n\treadonly outputHeaderContainer: HTMLElement;\n\treadonly outputInfoContainer: HTMLElement;\n}\n\n\nexport interface CellDiffSideBySideRenderTemplate extends CellDiffCommonRenderTemplate {\n\treadonly container: HTMLElement;\n\treadonly body: HTMLElement;\n\treadonly diffEditorContainer: HTMLElement;\n\treadonly elementDisposables: DisposableStore;\n\treadonly sourceEditor: DiffEditorWidget;\n\treadonly editorContainer: HTMLElement;\n\treadonly inputToolbarContainer: HTMLElement;\n\treadonly toolbar: WorkbenchToolBar;\n\treadonly metadataHeaderContainer: HTMLElement;\n\treadonly metadataInfoContainer: HTMLElement;\n\treadonly outputHeaderContainer: HTMLElement;\n\treadonly outputInfoContainer: HTMLElement;\n}\n\nexport interface IDiffElementLayoutInfo {\n\ttotalHeight: number;\n\twidth: number;\n\teditorHeight: number;\n\teditorMargin: number;\n\tmetadataHeight: number;\n\tmetadataStatusHeight: number;\n\trawOutputHeight: number;\n\toutputMetadataHeight: number;\n\toutputTotalHeight: number;\n\toutputStatusHeight: number;\n\tbodyMargin: number;\n\tlayoutState: CellLayoutState;\n}\n\ntype IDiffElementSelfLayoutChangeEvent = { [K in keyof IDiffElementLayoutInfo]?: boolean };\n\nexport interface CellDiffViewModelLayoutChangeEvent extends IDiffElementSelfLayoutChangeEvent {\n\tfont?: BareFontInfo;\n\touterWidth?: boolean;\n\tmetadataEditor?: boolean;\n\toutputEditor?: boolean;\n\toutputView?: boolean;\n}\n\nexport const DIFF_CELL_MARGIN = 16;\nexport const NOTEBOOK_DIFF_CELL_INPUT = new RawContextKey<boolean>('notebookDiffCellInputChanged', false);\nexport const NOTEBOOK_DIFF_CELL_PROPERTY = new RawContextKey<boolean>('notebookDiffCellPropertyChanged', false);\nexport const NOTEBOOK_DIFF_CELL_PROPERTY_EXPANDED = new RawContextKey<boolean>('notebookDiffCellPropertyExpanded', false);\n"]}