{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/view/cellParts/cellExecution.ts"],"names":[],"mappings":"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","file":"cellExecution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { disposableTimeout } from 'vs/base/common/async';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ICellViewModel, INotebookEditorDelegate } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellViewModelStateChangeEvent } from 'vs/workbench/contrib/notebook/browser/notebookViewEvents';\nimport { CellContentPart } from 'vs/workbench/contrib/notebook/browser/view/cellPart';\nimport { NotebookCellInternalMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookExecutionStateService } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\n\nconst UPDATE_EXECUTION_ORDER_GRACE_PERIOD = 200;\n\nexport class CellExecutionPart extends CellContentPart {\n\tprivate kernelDisposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tprivate readonly _notebookEditor: INotebookEditorDelegate,\n\t\tprivate readonly _executionOrderLabel: HTMLElement,\n\t\t@INotebookExecutionStateService private readonly _notebookExecutionStateService: INotebookExecutionStateService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this._notebookEditor.onDidChangeActiveKernel(() => {\n\t\t\tif (this.currentCell) {\n\t\t\t\tthis.kernelDisposables.clear();\n\n\t\t\t\tif (this._notebookEditor.activeKernel) {\n\t\t\t\t\tthis.kernelDisposables.add(this._notebookEditor.activeKernel.onDidChange(() => {\n\t\t\t\t\t\tif (this.currentCell) {\n\t\t\t\t\t\t\tthis.updateExecutionOrder(this.currentCell.internalMetadata);\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tthis.updateExecutionOrder(this.currentCell.internalMetadata);\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride didRenderCell(element: ICellViewModel): void {\n\t\tthis.updateExecutionOrder(element.internalMetadata, true);\n\t}\n\n\tprivate updateExecutionOrder(internalMetadata: NotebookCellInternalMetadata, forceClear = false): void {\n\t\tif (this._notebookEditor.activeKernel?.implementsExecutionOrder || (!this._notebookEditor.activeKernel && typeof internalMetadata.executionOrder === 'number')) {\n\t\t\t// If the executionOrder was just cleared, and the cell is executing, wait just a bit before clearing the view to avoid flashing\n\t\t\tif (typeof internalMetadata.executionOrder !== 'number' && !forceClear && !!this._notebookExecutionStateService.getCellExecution(this.currentCell!.uri)) {\n\t\t\t\tconst renderingCell = this.currentCell;\n\t\t\t\tthis.cellDisposables.add(disposableTimeout(() => {\n\t\t\t\t\tif (this.currentCell === renderingCell) {\n\t\t\t\t\t\tthis.updateExecutionOrder(this.currentCell!.internalMetadata, true);\n\t\t\t\t\t}\n\t\t\t\t}, UPDATE_EXECUTION_ORDER_GRACE_PERIOD));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst executionOrderLabel = typeof internalMetadata.executionOrder === 'number' ?\n\t\t\t\t`[${internalMetadata.executionOrder}]` :\n\t\t\t\t'[ ]';\n\t\t\tthis._executionOrderLabel.innerText = executionOrderLabel;\n\t\t} else {\n\t\t\tthis._executionOrderLabel.innerText = '';\n\t\t}\n\t}\n\n\toverride updateState(element: ICellViewModel, e: CellViewModelStateChangeEvent): void {\n\t\tif (e.internalMetadataChanged) {\n\t\t\tthis.updateExecutionOrder(element.internalMetadata);\n\t\t}\n\t}\n\n\toverride updateInternalLayoutNow(element: ICellViewModel): void {\n\t\tif (element.isInputCollapsed) {\n\t\t\tDOM.hide(this._executionOrderLabel);\n\t\t} else {\n\t\t\tDOM.show(this._executionOrderLabel);\n\t\t\tconst top = element.layoutInfo.editorHeight - 22 + element.layoutInfo.statusBarHeight;\n\t\t\tthis._executionOrderLabel.style.top = `${top}px`;\n\t\t}\n\t}\n}\n"]}