{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/view/cellParts/cellDecorations.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,MAAa,IAAgB,SAAQ,eAAI;QACxC,YACU,aAA0B,EAC1B,mBAAgC;YAEzC,KAAK,EAAE,CAAC;YAHC,kBAAa,GAAb,aAAa,CAAa;YAC1B,wBAAmB,GAAnB,mBAAmB,CAAa;QAG1C,CAAC;QAEQ,aAAa,CAAC,OAAuB;YAC7C,MAAM,iBAAiB,GAAa,EAAE,CAAC;YACvC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gBAChD,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBAC/B,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAClC;YACF,CAAC,CAAC,CAAC;YAEH,iBAAiB,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gBACrC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,EAAE,CAAC;YAExC,MAAM,0BAA0B,GAAG,GAAG,EAAE;gBACvC,IAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,EAAE,CAAC;gBAExC,OAAO,CAAC,kBAAkB,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACpG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,YAAa,EAAE,CAAC,CAAC,CAAC;gBACrE,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC;YAEF,IAAI,CAAC,CAAC,CAAe,GAAG,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC/D,MAAM,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;gBAE1F,IAAI,QAAQ,EAAE;oBACb,0BAA0B,EAAE,CAAC;iBAC7B;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,0BAA0B,EAAE,CAAC;QAC9B,CAAC;KACD;IAxCD,oBAwCC","file":"cellDecorations.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { ICellViewModel } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellContentPart } from 'vs/workbench/contrib/notebook/browser/view/cellPart';\n\nexport class CellDecorations extends CellContentPart {\n\tconstructor(\n\t\treadonly rootContainer: HTMLElement,\n\t\treadonly decorationContainer: HTMLElement,\n\t) {\n\t\tsuper();\n\t}\n\n\toverride didRenderCell(element: ICellViewModel): void {\n\t\tconst removedClassNames: string[] = [];\n\t\tthis.rootContainer.classList.forEach(className => {\n\t\t\tif (/^nb\\-.*$/.test(className)) {\n\t\t\t\tremovedClassNames.push(className);\n\t\t\t}\n\t\t});\n\n\t\tremovedClassNames.forEach(className => {\n\t\t\tthis.rootContainer.classList.remove(className);\n\t\t});\n\n\t\tthis.decorationContainer.innerText = '';\n\n\t\tconst generateCellTopDecorations = () => {\n\t\t\tthis.decorationContainer.innerText = '';\n\n\t\t\telement.getCellDecorations().filter(options => options.topClassName !== undefined).forEach(options => {\n\t\t\t\tthis.decorationContainer.append(DOM.$(`.${options.topClassName!}`));\n\t\t\t});\n\t\t};\n\n\t\tthis.cellDisposables.add(element.onCellDecorationsChanged((e) => {\n\t\t\tconst modified = e.added.find(e => e.topClassName) || e.removed.find(e => e.topClassName);\n\n\t\t\tif (modified) {\n\t\t\t\tgenerateCellTopDecorations();\n\t\t\t}\n\t\t}));\n\n\t\tgenerateCellTopDecorations();\n\t}\n}\n"]}