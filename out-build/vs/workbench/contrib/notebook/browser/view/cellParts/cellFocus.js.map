{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/view/cellParts/cellFocus.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG,MAAa,IAAc,SAAQ,eAAI;QACtC,YACC,gBAA6B,EAC7B,gBAAyC,EACzC,cAA+B;YAE/B,KAAK,EAAE,CAAC;YAER,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,GAAG,CAAmB,gBAAgB,EAAE,GAAG,CAAC,GAAG,CAAO,KAAK,EAAE,GAAG,EAAE;gBACpF,IAAI,IAAI,CAAC,CAAC,EAAY;oBACrB,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAW,CAAC;iBAC9C;YACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YAEV,IAAI,gBAAgB,EAAE;gBACrB,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,GAAG,CAAmB,gBAAgB,EAAE,GAAG,CAAC,GAAG,CAAO,KAAK,EAAE,GAAG,EAAE;oBACpF,IAAI,IAAI,CAAC,CAAC,IAAe,IAAI,CAAC,CAAiC,CAAC,iBAAiB,CAAC,MAAM,EAAE;wBACzF,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,EAAY,QAAQ,CAAC,CAAC;qBAC7D;gBACF,CAAC,CAAC,CAAC,CAAC;aACJ;QACF,CAAC;KACD;IAtBD,oBAsBC","file":"cellFocus.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { INotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellContentPart } from 'vs/workbench/contrib/notebook/browser/view/cellPart';\nimport { CodeCellViewModel } from 'vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel';\n\nexport class CellFocusPart extends CellContentPart {\n\tconstructor(\n\t\tcontainerElement: HTMLElement,\n\t\tfocusSinkElement: HTMLElement | undefined,\n\t\tnotebookEditor: INotebookEditor\n\t) {\n\t\tsuper();\n\n\t\tthis._register(DOM.addDisposableListener(containerElement, DOM.EventType.FOCUS, () => {\n\t\t\tif (this.currentCell) {\n\t\t\t\tnotebookEditor.focusElement(this.currentCell);\n\t\t\t}\n\t\t}, true));\n\n\t\tif (focusSinkElement) {\n\t\t\tthis._register(DOM.addDisposableListener(focusSinkElement, DOM.EventType.FOCUS, () => {\n\t\t\t\tif (this.currentCell && (this.currentCell as CodeCellViewModel).outputsViewModels.length) {\n\t\t\t\t\tnotebookEditor.focusNotebookCell(this.currentCell, 'output');\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n}\n"]}