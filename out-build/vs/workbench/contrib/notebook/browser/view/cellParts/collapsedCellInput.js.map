{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/view/cellParts/collapsedCellInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,MAAa,IAAmB,SAAQ,eAAI;QAC3C,YACkB,CAA+B,EAChD,2BAAwC;YAExC,KAAK,EAAE,CAAC;YAHS,MAAC,GAAD,CAAC,CAA8B;YAKhD,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,GAAG,CAAmB,2BAA2B,EAAE,GAAG,CAAC,GAAG,CAAO,QAAQ,EAAE,CAAC,CAAC,EAAE;gBACjG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAc,CAAC,IAAI,CAAC,CAAC,CAAc,QAAQ,EAAE,EAAE;oBACzD,OAAO;iBACP;gBAED,IAAI,IAAI,CAAC,CAAC,CAAW,gBAAgB,EAAE;oBACtC,IAAI,CAAC,CAAC,CAAW,gBAAgB,GAAG,KAAK,CAAC;iBAC1C;qBAAM;oBACN,IAAI,CAAC,CAAC,CAAW,iBAAiB,GAAG,KAAK,CAAC;iBAC3C;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,GAAG,CAAmB,2BAA2B,EAAE,GAAG,CAAC,GAAG,CAAO,KAAK,EAAE,CAAC,CAAC,EAAE;gBAC9F,IAAI,CAAC,IAAI,CAAC,CAAC,IAAc,CAAC,IAAI,CAAC,CAAC,CAAc,QAAQ,EAAE,EAAE;oBACzD,OAAO;iBACP;gBAED,MAAM,OAAO,GAAG,CAAC,CAAC,MAAqB,CAAC;gBAExC,IAAI,OAAO,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;oBAClF,6BAA6B;oBAC7B,IAAI,CAAC,CAAC,CAAW,gBAAgB,GAAG,KAAK,CAAC;iBAC1C;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;KACD;IAhCD,oBAgCC","file":"collapsedCellInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { INotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellContentPart } from 'vs/workbench/contrib/notebook/browser/view/cellPart';\n\nexport class CollapsedCellInput extends CellContentPart {\n\tconstructor(\n\t\tprivate readonly notebookEditor: INotebookEditor,\n\t\tcellInputCollapsedContainer: HTMLElement,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(DOM.addDisposableListener(cellInputCollapsedContainer, DOM.EventType.DBLCLICK, e => {\n\t\t\tif (!this.currentCell || !this.notebookEditor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.currentCell.isInputCollapsed) {\n\t\t\t\tthis.currentCell.isInputCollapsed = false;\n\t\t\t} else {\n\t\t\t\tthis.currentCell.isOutputCollapsed = false;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(DOM.addDisposableListener(cellInputCollapsedContainer, DOM.EventType.CLICK, e => {\n\t\t\tif (!this.currentCell || !this.notebookEditor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst element = e.target as HTMLElement;\n\n\t\t\tif (element && element.classList && element.classList.contains('expandInputIcon')) {\n\t\t\t\t// clicked on the expand icon\n\t\t\t\tthis.currentCell.isInputCollapsed = false;\n\t\t\t}\n\t\t}));\n\t}\n}\n\n"]}