{"version":3,"sources":["vs/workbench/contrib/notebook/browser/view/cellParts/cellEditorOptions.ts"],"names":[],"mappings":"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","file":"cellEditorOptions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { localize } from 'vs/nls';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { Extensions as ConfigurationExtensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ActiveEditorContext } from 'vs/workbench/common/contextkeys';\nimport { INotebookCellToolbarActionContext, INotebookCommandContext, NotebookMultiCellAction, NOTEBOOK_ACTIONS_CATEGORY } from 'vs/workbench/contrib/notebook/browser/controller/coreActions';\nimport { IBaseCellEditorOptions, ICellViewModel } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { NOTEBOOK_CELL_LINE_NUMBERS, NOTEBOOK_EDITOR_FOCUSED } from 'vs/workbench/contrib/notebook/common/notebookContextKeys';\nimport { CellContentPart } from 'vs/workbench/contrib/notebook/browser/view/cellPart';\nimport { NotebookCellInternalMetadata, NOTEBOOK_EDITOR_ID } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { NotebookOptions } from 'vs/workbench/contrib/notebook/browser/notebookOptions';\nimport { CellViewModelStateChangeEvent } from 'vs/workbench/contrib/notebook/browser/notebookViewEvents';\n\nexport class CellEditorOptions extends CellContentPart {\n\tprivate _lineNumbers: 'on' | 'off' | 'inherit' = 'inherit';\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\tprivate _value: IEditorOptions;\n\n\tconstructor(private readonly base: IBaseCellEditorOptions, readonly notebookOptions: NotebookOptions, readonly configurationService: IConfigurationService) {\n\t\tsuper();\n\n\t\tthis._register(base.onDidChange(() => {\n\t\t\tthis._recomputeOptions();\n\t\t}));\n\n\t\tthis._value = this._computeEditorOptions();\n\t}\n\n\toverride updateState(element: ICellViewModel, e: CellViewModelStateChangeEvent) {\n\t\tif (e.cellLineNumberChanged) {\n\t\t\tthis.setLineNumbers(element.lineNumbers);\n\t\t}\n\t}\n\n\tprivate _recomputeOptions(): void {\n\t\tthis._value = this._computeEditorOptions();\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate _computeEditorOptions() {\n\t\tconst value = this.base.value;\n\t\tlet cellRenderLineNumber = value.lineNumbers;\n\n\t\tswitch (this._lineNumbers) {\n\t\t\tcase 'inherit':\n\t\t\t\t// inherit from the notebook setting\n\t\t\t\tif (this.configurationService.getValue<'on' | 'off'>('notebook.lineNumbers') === 'on') {\n\t\t\t\t\tif (value.lineNumbers === 'off') {\n\t\t\t\t\t\tcellRenderLineNumber = 'on';\n\t\t\t\t\t} // otherwise just use the editor setting\n\t\t\t\t} else {\n\t\t\t\t\tcellRenderLineNumber = 'off';\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'on':\n\t\t\t\t// should turn on, ignore the editor line numbers off options\n\t\t\t\tif (value.lineNumbers === 'off') {\n\t\t\t\t\tcellRenderLineNumber = 'on';\n\t\t\t\t} // otherwise just use the editor setting\n\t\t\t\tbreak;\n\t\t\tcase 'off':\n\t\t\t\tcellRenderLineNumber = 'off';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (value.lineNumbers !== cellRenderLineNumber) {\n\t\t\treturn {\n\t\t\t\t...value,\n\t\t\t\t...{ lineNumbers: cellRenderLineNumber }\n\t\t\t};\n\t\t} else {\n\t\t\treturn Object.assign({}, value);\n\t\t}\n\t}\n\n\tgetUpdatedValue(internalMetadata: NotebookCellInternalMetadata, cellUri: URI): IEditorOptions {\n\t\tconst options = this.getValue(internalMetadata, cellUri);\n\t\tdelete options.hover; // This is toggled by a debug editor contribution\n\n\t\treturn options;\n\t}\n\n\tgetValue(internalMetadata: NotebookCellInternalMetadata, cellUri: URI): IEditorOptions {\n\t\treturn {\n\t\t\t...this._value,\n\t\t\t...{\n\t\t\t\tpadding: this.notebookOptions.computeEditorPadding(internalMetadata, cellUri)\n\t\t\t}\n\t\t};\n\t}\n\n\tgetDefaultValue(): IEditorOptions {\n\t\treturn {\n\t\t\t...this._value,\n\t\t\t...{\n\t\t\t\tpadding: { top: 12, bottom: 12 }\n\t\t\t}\n\t\t};\n\t}\n\n\tsetLineNumbers(lineNumbers: 'on' | 'off' | 'inherit'): void {\n\t\tthis._lineNumbers = lineNumbers;\n\t\tthis._recomputeOptions();\n\t}\n}\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'notebook',\n\torder: 100,\n\ttype: 'object',\n\t'properties': {\n\t\t'notebook.lineNumbers': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['off', 'on'],\n\t\t\tdefault: 'off',\n\t\t\tmarkdownDescription: localize('notebook.lineNumbers', \"Controls the display of line numbers in the cell editor.\")\n\t\t}\n\t}\n});\n\nregisterAction2(class ToggleLineNumberAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.toggleLineNumbers',\n\t\t\ttitle: { value: localize('notebook.toggleLineNumbers', \"Toggle Notebook Line Numbers\"), original: 'Toggle Notebook Line Numbers' },\n\t\t\tprecondition: NOTEBOOK_EDITOR_FOCUSED,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.NotebookToolbar,\n\t\t\t\t\tgroup: 'notebookLayout',\n\t\t\t\t\torder: 2,\n\t\t\t\t\twhen: ContextKeyExpr.equals('config.notebook.globalToolbar', true)\n\t\t\t\t}],\n\t\t\tcategory: NOTEBOOK_ACTIONS_CATEGORY,\n\t\t\tf1: true,\n\t\t\ttoggled: {\n\t\t\t\tcondition: ContextKeyExpr.notEquals('config.notebook.lineNumbers', 'off'),\n\t\t\t\ttitle: localize('notebook.showLineNumbers', \"Notebook Line Numbers\"),\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst renderLiNumbers = configurationService.getValue<'on' | 'off'>('notebook.lineNumbers') === 'on';\n\n\t\tif (renderLiNumbers) {\n\t\t\tconfigurationService.updateValue('notebook.lineNumbers', 'off');\n\t\t} else {\n\t\t\tconfigurationService.updateValue('notebook.lineNumbers', 'on');\n\t\t}\n\t}\n});\n\nregisterAction2(class ToggleActiveLineNumberAction extends NotebookMultiCellAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'notebook.cell.toggleLineNumbers',\n\t\t\ttitle: localize('notebook.cell.toggleLineNumbers.title', \"Show Cell Line Numbers\"),\n\t\t\tprecondition: ActiveEditorContext.isEqualTo(NOTEBOOK_EDITOR_ID),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.NotebookCellTitle,\n\t\t\t\tgroup: 'View',\n\t\t\t\torder: 1\n\t\t\t}],\n\t\t\ttoggled: ContextKeyExpr.or(\n\t\t\t\tNOTEBOOK_CELL_LINE_NUMBERS.isEqualTo('on'),\n\t\t\t\tContextKeyExpr.and(NOTEBOOK_CELL_LINE_NUMBERS.isEqualTo('inherit'), ContextKeyExpr.equals('config.notebook.lineNumbers', 'on'))\n\t\t\t)\n\t\t});\n\t}\n\n\tasync runWithContext(accessor: ServicesAccessor, context: INotebookCommandContext | INotebookCellToolbarActionContext): Promise<void> {\n\t\tif (context.ui) {\n\t\t\tthis.updateCell(accessor.get(IConfigurationService), context.cell);\n\t\t} else {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tcontext.selectedCells.forEach(cell => {\n\t\t\t\tthis.updateCell(configurationService, cell);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate updateCell(configurationService: IConfigurationService, cell: ICellViewModel) {\n\t\tconst renderLineNumbers = configurationService.getValue<'on' | 'off'>('notebook.lineNumbers') === 'on';\n\t\tconst cellLineNumbers = cell.lineNumbers;\n\t\t// 'on', 'inherit' \t-> 'on'\n\t\t// 'on', 'off'\t\t-> 'off'\n\t\t// 'on', 'on'\t\t-> 'on'\n\t\t// 'off', 'inherit'\t-> 'off'\n\t\t// 'off', 'off'\t\t-> 'off'\n\t\t// 'off', 'on'\t\t-> 'on'\n\t\tconst currentLineNumberIsOn = cellLineNumbers === 'on' || (cellLineNumbers === 'inherit' && renderLineNumbers);\n\n\t\tif (currentLineNumberIsOn) {\n\t\t\tcell.lineNumbers = 'off';\n\t\t} else {\n\t\t\tcell.lineNumbers = 'on';\n\t\t}\n\n\t}\n});\n"]}