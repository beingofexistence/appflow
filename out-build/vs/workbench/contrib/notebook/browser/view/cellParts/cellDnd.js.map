{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/view/cellParts/cellDnd.ts"],"names":[],"mappings":"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","file":"cellDnd.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { Delayer } from 'vs/base/common/async';\nimport { Disposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport { expandCellRangesWithHiddenCells, ICellViewModel, INotebookEditorDelegate } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellViewModelStateChangeEvent } from 'vs/workbench/contrib/notebook/browser/notebookViewEvents';\nimport { CellContentPart } from 'vs/workbench/contrib/notebook/browser/view/cellPart';\nimport { BaseCellRenderTemplate, INotebookCellList } from 'vs/workbench/contrib/notebook/browser/view/notebookRenderingCommon';\nimport { cloneNotebookCellTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellTextModel';\nimport { CellEditType, ICellMoveEdit, SelectionStateType } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { cellRangesToIndexes, ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\n\nconst $ = DOM.$;\n\nconst DRAGGING_CLASS = 'cell-dragging';\nconst GLOBAL_DRAG_CLASS = 'global-drag-active';\n\ntype DragImageProvider = () => HTMLElement;\n\ninterface CellDragEvent {\n\tbrowserEvent: DragEvent;\n\tdraggedOverCell: ICellViewModel;\n\tcellTop: number;\n\tcellHeight: number;\n\tdragPosRatio: number;\n}\n\nexport class CellDragAndDropPart extends CellContentPart {\n\tconstructor(\n\t\tprivate readonly container: HTMLElement\n\t) {\n\t\tsuper();\n\t}\n\n\toverride didRenderCell(element: ICellViewModel): void {\n\t\tthis.update(element);\n\t}\n\n\toverride updateState(element: ICellViewModel, e: CellViewModelStateChangeEvent): void {\n\t\tif (e.dragStateChanged) {\n\t\t\tthis.update(element);\n\t\t}\n\t}\n\n\tprivate update(element: ICellViewModel) {\n\t\tthis.container.classList.toggle(DRAGGING_CLASS, element.dragging);\n\t}\n}\n\nexport class CellDragAndDropController extends Disposable {\n\t// TODO@roblourens - should probably use dataTransfer here, but any dataTransfer set makes the editor think I am dropping a file, need\n\t// to figure out how to prevent that\n\tprivate currentDraggedCell: ICellViewModel | undefined;\n\tprivate draggedCells: ICellViewModel[] = [];\n\n\tprivate listInsertionIndicator: HTMLElement;\n\n\tprivate list!: INotebookCellList;\n\n\tprivate isScrolling = false;\n\tprivate readonly scrollingDelayer: Delayer<void>;\n\n\tprivate readonly listOnWillScrollListener = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tprivate notebookEditor: INotebookEditorDelegate,\n\t\tprivate readonly notebookListContainer: HTMLElement\n\t) {\n\t\tsuper();\n\n\t\tthis.listInsertionIndicator = DOM.append(notebookListContainer, $('.cell-list-insertion-indicator'));\n\n\t\tthis._register(DOM.addDisposableListener(document.body, DOM.EventType.DRAG_START, this.onGlobalDragStart.bind(this), true));\n\t\tthis._register(DOM.addDisposableListener(document.body, DOM.EventType.DRAG_END, this.onGlobalDragEnd.bind(this), true));\n\n\t\tconst addCellDragListener = (eventType: string, handler: (e: CellDragEvent) => void, useCapture = false) => {\n\t\t\tthis._register(DOM.addDisposableListener(\n\t\t\t\tnotebookEditor.getDomNode(),\n\t\t\t\teventType,\n\t\t\t\te => {\n\t\t\t\t\tconst cellDragEvent = this.toCellDragEvent(e);\n\t\t\t\t\tif (cellDragEvent) {\n\t\t\t\t\t\thandler(cellDragEvent);\n\t\t\t\t\t}\n\t\t\t\t}, useCapture));\n\t\t};\n\n\t\taddCellDragListener(DOM.EventType.DRAG_OVER, event => {\n\t\t\tif (!this.currentDraggedCell) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tevent.browserEvent.preventDefault();\n\t\t\tthis.onCellDragover(event);\n\t\t}, true);\n\t\taddCellDragListener(DOM.EventType.DROP, event => {\n\t\t\tif (!this.currentDraggedCell) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tevent.browserEvent.preventDefault();\n\t\t\tthis.onCellDrop(event);\n\t\t});\n\t\taddCellDragListener(DOM.EventType.DRAG_LEAVE, event => {\n\t\t\tevent.browserEvent.preventDefault();\n\t\t\tthis.onCellDragLeave(event);\n\t\t});\n\n\t\tthis.scrollingDelayer = this._register(new Delayer(200));\n\t}\n\n\tsetList(value: INotebookCellList) {\n\t\tthis.list = value;\n\n\t\tthis.listOnWillScrollListener.value = this.list.onWillScroll(e => {\n\t\t\tif (!e.scrollTopChanged) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.setInsertIndicatorVisibility(false);\n\t\t\tthis.isScrolling = true;\n\t\t\tthis.scrollingDelayer.trigger(() => {\n\t\t\t\tthis.isScrolling = false;\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate setInsertIndicatorVisibility(visible: boolean) {\n\t\tthis.listInsertionIndicator.style.opacity = visible ? '1' : '0';\n\t}\n\n\tprivate toCellDragEvent(event: DragEvent): CellDragEvent | undefined {\n\t\tconst targetTop = this.notebookListContainer.getBoundingClientRect().top;\n\t\tconst dragOffset = this.list.scrollTop + event.clientY - targetTop;\n\t\tconst draggedOverCell = this.list.elementAt(dragOffset);\n\t\tif (!draggedOverCell) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst cellTop = this.list.getCellViewScrollTop(draggedOverCell);\n\t\tconst cellHeight = this.list.elementHeight(draggedOverCell);\n\n\t\tconst dragPosInElement = dragOffset - cellTop;\n\t\tconst dragPosRatio = dragPosInElement / cellHeight;\n\n\t\treturn <CellDragEvent>{\n\t\t\tbrowserEvent: event,\n\t\t\tdraggedOverCell,\n\t\t\tcellTop,\n\t\t\tcellHeight,\n\t\t\tdragPosRatio\n\t\t};\n\t}\n\n\tclearGlobalDragState() {\n\t\tthis.notebookEditor.getDomNode().classList.remove(GLOBAL_DRAG_CLASS);\n\t}\n\n\tprivate onGlobalDragStart() {\n\t\tthis.notebookEditor.getDomNode().classList.add(GLOBAL_DRAG_CLASS);\n\t}\n\n\tprivate onGlobalDragEnd() {\n\t\tthis.notebookEditor.getDomNode().classList.remove(GLOBAL_DRAG_CLASS);\n\t}\n\n\tprivate onCellDragover(event: CellDragEvent): void {\n\t\tif (!event.browserEvent.dataTransfer) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.currentDraggedCell) {\n\t\t\tevent.browserEvent.dataTransfer.dropEffect = 'none';\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isScrolling || this.currentDraggedCell === event.draggedOverCell) {\n\t\t\tthis.setInsertIndicatorVisibility(false);\n\t\t\treturn;\n\t\t}\n\n\t\tconst dropDirection = this.getDropInsertDirection(event.dragPosRatio);\n\t\tconst insertionIndicatorAbsolutePos = dropDirection === 'above' ? event.cellTop : event.cellTop + event.cellHeight;\n\t\tthis.updateInsertIndicator(dropDirection, insertionIndicatorAbsolutePos);\n\t}\n\n\tprivate updateInsertIndicator(dropDirection: string, insertionIndicatorAbsolutePos: number) {\n\t\tconst { bottomToolbarGap } = this.notebookEditor.notebookOptions.computeBottomToolbarDimensions(this.notebookEditor.textModel?.viewType);\n\t\tconst insertionIndicatorTop = insertionIndicatorAbsolutePos - this.list.scrollTop + bottomToolbarGap / 2;\n\t\tif (insertionIndicatorTop >= 0) {\n\t\t\tthis.listInsertionIndicator.style.top = `${insertionIndicatorTop}px`;\n\t\t\tthis.setInsertIndicatorVisibility(true);\n\t\t} else {\n\t\t\tthis.setInsertIndicatorVisibility(false);\n\t\t}\n\t}\n\n\tprivate getDropInsertDirection(dragPosRatio: number): 'above' | 'below' {\n\t\treturn dragPosRatio < 0.5 ? 'above' : 'below';\n\t}\n\n\tprivate onCellDrop(event: CellDragEvent): void {\n\t\tconst draggedCell = this.currentDraggedCell!;\n\n\t\tif (this.isScrolling || this.currentDraggedCell === event.draggedOverCell) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.dragCleanup();\n\n\t\tconst dropDirection = this.getDropInsertDirection(event.dragPosRatio);\n\t\tthis._dropImpl(draggedCell, dropDirection, event.browserEvent, event.draggedOverCell);\n\t}\n\n\tprivate getCellRangeAroundDragTarget(draggedCellIndex: number) {\n\t\tconst selections = this.notebookEditor.getSelections();\n\t\tconst modelRanges = expandCellRangesWithHiddenCells(this.notebookEditor, selections);\n\t\tconst nearestRange = modelRanges.find(range => range.start <= draggedCellIndex && draggedCellIndex < range.end);\n\n\t\tif (nearestRange) {\n\t\t\treturn nearestRange;\n\t\t} else {\n\t\t\treturn { start: draggedCellIndex, end: draggedCellIndex + 1 };\n\t\t}\n\t}\n\n\tprivate _dropImpl(draggedCell: ICellViewModel, dropDirection: 'above' | 'below', ctx: { ctrlKey: boolean; altKey: boolean }, draggedOverCell: ICellViewModel) {\n\t\tconst cellTop = this.list.getCellViewScrollTop(draggedOverCell);\n\t\tconst cellHeight = this.list.elementHeight(draggedOverCell);\n\t\tconst insertionIndicatorAbsolutePos = dropDirection === 'above' ? cellTop : cellTop + cellHeight;\n\t\tconst { bottomToolbarGap } = this.notebookEditor.notebookOptions.computeBottomToolbarDimensions(this.notebookEditor.textModel?.viewType);\n\t\tconst insertionIndicatorTop = insertionIndicatorAbsolutePos - this.list.scrollTop + bottomToolbarGap / 2;\n\t\tconst editorHeight = this.notebookEditor.getDomNode().getBoundingClientRect().height;\n\t\tif (insertionIndicatorTop < 0 || insertionIndicatorTop > editorHeight) {\n\t\t\t// Ignore drop, insertion point is off-screen\n\t\t\treturn;\n\t\t}\n\n\t\tconst isCopy = (ctx.ctrlKey && !platform.isMacintosh) || (ctx.altKey && platform.isMacintosh);\n\n\t\tif (!this.notebookEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst textModel = this.notebookEditor.textModel;\n\n\t\tif (isCopy) {\n\t\t\tconst draggedCellIndex = this.notebookEditor.getCellIndex(draggedCell);\n\t\t\tconst range = this.getCellRangeAroundDragTarget(draggedCellIndex);\n\n\t\t\tlet originalToIdx = this.notebookEditor.getCellIndex(draggedOverCell);\n\t\t\tif (dropDirection === 'below') {\n\t\t\t\tconst relativeToIndex = this.notebookEditor.getCellIndex(draggedOverCell);\n\t\t\t\tconst newIdx = this.notebookEditor.getNextVisibleCellIndex(relativeToIndex);\n\t\t\t\toriginalToIdx = newIdx;\n\t\t\t}\n\n\t\t\tlet finalSelection: ICellRange;\n\t\t\tlet finalFocus: ICellRange;\n\n\t\t\tif (originalToIdx <= range.start) {\n\t\t\t\tfinalSelection = { start: originalToIdx, end: originalToIdx + range.end - range.start };\n\t\t\t\tfinalFocus = { start: originalToIdx + draggedCellIndex - range.start, end: originalToIdx + draggedCellIndex - range.start + 1 };\n\t\t\t} else {\n\t\t\t\tconst delta = (originalToIdx - range.start);\n\t\t\t\tfinalSelection = { start: range.start + delta, end: range.end + delta };\n\t\t\t\tfinalFocus = { start: draggedCellIndex + delta, end: draggedCellIndex + delta + 1 };\n\t\t\t}\n\n\t\t\ttextModel.applyEdits([\n\t\t\t\t{\n\t\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\t\tindex: originalToIdx,\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tcells: cellRangesToIndexes([range]).map(index => cloneNotebookCellTextModel(this.notebookEditor.cellAt(index)!.model))\n\t\t\t\t}\n\t\t\t], true, { kind: SelectionStateType.Index, focus: this.notebookEditor.getFocus(), selections: this.notebookEditor.getSelections() }, () => ({ kind: SelectionStateType.Index, focus: finalFocus, selections: [finalSelection] }), undefined, true);\n\t\t\tthis.notebookEditor.revealCellRangeInView(finalSelection);\n\t\t} else {\n\t\t\tperformCellDropEdits(this.notebookEditor, draggedCell, dropDirection, draggedOverCell);\n\t\t}\n\t}\n\n\tprivate onCellDragLeave(event: CellDragEvent): void {\n\t\tif (!event.browserEvent.relatedTarget || !DOM.isAncestor(event.browserEvent.relatedTarget as HTMLElement, this.notebookEditor.getDomNode())) {\n\t\t\tthis.setInsertIndicatorVisibility(false);\n\t\t}\n\t}\n\n\tprivate dragCleanup(): void {\n\t\tif (this.currentDraggedCell) {\n\t\t\tthis.draggedCells.forEach(cell => cell.dragging = false);\n\t\t\tthis.currentDraggedCell = undefined;\n\t\t\tthis.draggedCells = [];\n\t\t}\n\n\t\tthis.setInsertIndicatorVisibility(false);\n\t}\n\n\tregisterDragHandle(templateData: BaseCellRenderTemplate, cellRoot: HTMLElement, dragHandles: HTMLElement[], dragImageProvider: DragImageProvider): void {\n\t\tconst container = templateData.container;\n\t\tfor (const dragHandle of dragHandles) {\n\t\t\tdragHandle.setAttribute('draggable', 'true');\n\t\t}\n\n\t\tconst onDragEnd = () => {\n\t\t\tif (!this.notebookEditor.notebookOptions.getLayoutConfiguration().dragAndDropEnabled || !!this.notebookEditor.isReadOnly) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Note, templateData may have a different element rendered into it by now\n\t\t\tcontainer.classList.remove(DRAGGING_CLASS);\n\t\t\tthis.dragCleanup();\n\t\t};\n\t\tfor (const dragHandle of dragHandles) {\n\t\t\ttemplateData.templateDisposables.add(DOM.addDisposableListener(dragHandle, DOM.EventType.DRAG_END, onDragEnd));\n\t\t}\n\n\t\tconst onDragStart = (event: DragEvent) => {\n\t\t\tif (!event.dataTransfer) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.notebookEditor.notebookOptions.getLayoutConfiguration().dragAndDropEnabled || !!this.notebookEditor.isReadOnly) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.currentDraggedCell = templateData.currentRenderedCell!;\n\t\t\tthis.draggedCells = this.notebookEditor.getSelections().map(range => this.notebookEditor.getCellsInRange(range)).flat();\n\t\t\tthis.draggedCells.forEach(cell => cell.dragging = true);\n\n\t\t\tconst dragImage = dragImageProvider();\n\t\t\tcellRoot.parentElement!.appendChild(dragImage);\n\t\t\tevent.dataTransfer.setDragImage(dragImage, 0, 0);\n\t\t\tsetTimeout(() => cellRoot.parentElement!.removeChild(dragImage!), 0); // Comment this out to debug drag image layout\n\t\t};\n\t\tfor (const dragHandle of dragHandles) {\n\t\t\ttemplateData.templateDisposables.add(DOM.addDisposableListener(dragHandle, DOM.EventType.DRAG_START, onDragStart));\n\t\t}\n\t}\n\n\tpublic startExplicitDrag(cell: ICellViewModel, _dragOffsetY: number) {\n\t\tif (!this.notebookEditor.notebookOptions.getLayoutConfiguration().dragAndDropEnabled || !!this.notebookEditor.isReadOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentDraggedCell = cell;\n\t\tthis.setInsertIndicatorVisibility(true);\n\t}\n\n\tpublic explicitDrag(cell: ICellViewModel, dragOffsetY: number) {\n\t\tif (!this.notebookEditor.notebookOptions.getLayoutConfiguration().dragAndDropEnabled || !!this.notebookEditor.isReadOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = this.list.elementAt(dragOffsetY);\n\t\tif (target && target !== cell) {\n\t\t\tconst cellTop = this.list.getCellViewScrollTop(target);\n\t\t\tconst cellHeight = this.list.elementHeight(target);\n\n\t\t\tconst dropDirection = this.getExplicitDragDropDirection(dragOffsetY, cellTop, cellHeight);\n\t\t\tconst insertionIndicatorAbsolutePos = dropDirection === 'above' ? cellTop : cellTop + cellHeight;\n\t\t\tthis.updateInsertIndicator(dropDirection, insertionIndicatorAbsolutePos);\n\t\t}\n\n\t\t// Try scrolling list if needed\n\t\tif (this.currentDraggedCell !== cell) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst notebookViewRect = this.notebookEditor.getDomNode().getBoundingClientRect();\n\t\tconst eventPositionInView = dragOffsetY - this.list.scrollTop;\n\n\t\t// Percentage from the top/bottom of the screen where we start scrolling while dragging\n\t\tconst notebookViewScrollMargins = 0.2;\n\n\t\tconst maxScrollDeltaPerFrame = 20;\n\n\t\tconst eventPositionRatio = eventPositionInView / notebookViewRect.height;\n\t\tif (eventPositionRatio < notebookViewScrollMargins) {\n\t\t\tthis.list.scrollTop -= maxScrollDeltaPerFrame * (1 - eventPositionRatio / notebookViewScrollMargins);\n\t\t} else if (eventPositionRatio > 1 - notebookViewScrollMargins) {\n\t\t\tthis.list.scrollTop += maxScrollDeltaPerFrame * (1 - ((1 - eventPositionRatio) / notebookViewScrollMargins));\n\t\t}\n\t}\n\n\tpublic endExplicitDrag(_cell: ICellViewModel) {\n\t\tthis.setInsertIndicatorVisibility(false);\n\t}\n\n\tpublic explicitDrop(cell: ICellViewModel, ctx: { dragOffsetY: number; ctrlKey: boolean; altKey: boolean }) {\n\t\tthis.currentDraggedCell = undefined;\n\t\tthis.setInsertIndicatorVisibility(false);\n\n\t\tconst target = this.list.elementAt(ctx.dragOffsetY);\n\t\tif (!target || target === cell) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cellTop = this.list.getCellViewScrollTop(target);\n\t\tconst cellHeight = this.list.elementHeight(target);\n\t\tconst dropDirection = this.getExplicitDragDropDirection(ctx.dragOffsetY, cellTop, cellHeight);\n\t\tthis._dropImpl(cell, dropDirection, ctx, target);\n\t}\n\n\tprivate getExplicitDragDropDirection(clientY: number, cellTop: number, cellHeight: number) {\n\t\tconst dragPosInElement = clientY - cellTop;\n\t\tconst dragPosRatio = dragPosInElement / cellHeight;\n\n\t\treturn this.getDropInsertDirection(dragPosRatio);\n\t}\n\n\toverride dispose() {\n\t\tthis.notebookEditor = null!;\n\t\tsuper.dispose();\n\t}\n}\n\nexport function performCellDropEdits(editor: INotebookEditorDelegate, draggedCell: ICellViewModel, dropDirection: 'above' | 'below', draggedOverCell: ICellViewModel): void {\n\tconst draggedCellIndex = editor.getCellIndex(draggedCell)!;\n\tlet originalToIdx = editor.getCellIndex(draggedOverCell)!;\n\n\tif (typeof draggedCellIndex !== 'number' || typeof originalToIdx !== 'number') {\n\t\treturn;\n\t}\n\n\t// If dropped on a folded markdown range, insert after the folding range\n\tif (dropDirection === 'below') {\n\t\tconst newIdx = editor.getNextVisibleCellIndex(originalToIdx) ?? originalToIdx;\n\t\toriginalToIdx = newIdx;\n\t}\n\n\tlet selections = editor.getSelections();\n\tif (!selections.length) {\n\t\tselections = [editor.getFocus()];\n\t}\n\n\tlet originalFocusIdx = editor.getFocus().start;\n\n\t// If the dragged cell is not focused/selected, ignore the current focus/selection and use the dragged idx\n\tif (!selections.some(s => s.start <= draggedCellIndex && s.end > draggedCellIndex)) {\n\t\tselections = [{ start: draggedCellIndex, end: draggedCellIndex + 1 }];\n\t\toriginalFocusIdx = draggedCellIndex;\n\t}\n\n\tconst droppedInSelection = selections.find(range => range.start <= originalToIdx && range.end > originalToIdx);\n\tif (droppedInSelection) {\n\t\toriginalToIdx = droppedInSelection.start;\n\t}\n\n\n\tlet numCells = 0;\n\tlet focusNewIdx = originalToIdx;\n\tlet newInsertionIdx = originalToIdx;\n\n\t// Compute a set of edits which will be applied in reverse order by the notebook text model.\n\t// `index`: the starting index of the range, after previous edits have been applied\n\t// `newIdx`: the destination index, after this edit's range has been removed\n\tselections.sort((a, b) => b.start - a.start);\n\tconst edits = selections.map(range => {\n\t\tconst length = range.end - range.start;\n\n\t\t// If this range is before the insertion point, subtract the cells in this range from the \"to\" index\n\t\tlet toIndexDelta = 0;\n\t\tif (range.end <= newInsertionIdx) {\n\t\t\ttoIndexDelta = -length;\n\t\t}\n\n\t\tconst newIdx = newInsertionIdx + toIndexDelta;\n\n\t\t// If this range contains the focused cell, set the new focus index to the new index of the cell\n\t\tif (originalFocusIdx >= range.start && originalFocusIdx <= range.end) {\n\t\t\tconst offset = originalFocusIdx - range.start;\n\t\t\tfocusNewIdx = newIdx + offset;\n\t\t}\n\n\t\t// If below the insertion point, the original index will have been shifted down\n\t\tconst fromIndexDelta = range.start >= originalToIdx ? numCells : 0;\n\n\t\tconst edit: ICellMoveEdit = {\n\t\t\teditType: CellEditType.Move,\n\t\t\tindex: range.start + fromIndexDelta,\n\t\t\tlength,\n\t\t\tnewIdx\n\t\t};\n\t\tnumCells += length;\n\n\t\t// If a range was moved down, the insertion index needs to be adjusted\n\t\tif (range.end < newInsertionIdx) {\n\t\t\tnewInsertionIdx -= length;\n\t\t}\n\n\t\treturn edit;\n\t});\n\n\tconst lastEdit = edits[edits.length - 1];\n\tconst finalSelection = { start: lastEdit.newIdx, end: lastEdit.newIdx + numCells };\n\tconst finalFocus = { start: focusNewIdx, end: focusNewIdx + 1 };\n\n\teditor.textModel!.applyEdits(\n\t\tedits,\n\t\ttrue,\n\t\t{ kind: SelectionStateType.Index, focus: editor.getFocus(), selections: editor.getSelections() },\n\t\t() => ({ kind: SelectionStateType.Index, focus: finalFocus, selections: [finalSelection] }),\n\t\tundefined, true);\n\teditor.revealCellRangeInView(finalSelection);\n}\n"]}