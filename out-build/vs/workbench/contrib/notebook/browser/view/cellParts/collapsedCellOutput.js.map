{"version":3,"sources":["vs/workbench/contrib/notebook/browser/view/cellParts/collapsedCellOutput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAUhG,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAET,IAAM,IAAI,GAAV,MAAM,IAAoB,SAAQ,eAAI;QAC5C,YACkB,CAA+B,EAChD,2BAAwC,EACpB,iBAAsB;YAE1C,KAAK,EAAE,CAAC;YAJS,MAAC,GAAD,CAAC,CAA8B;YAMhD,MAAM,WAAW,GAAG,GAAG,CAAC,GAAG,CAAI,2BAA2B,EAAE,CAAC,CAAC,8BAA8B,CAAC,CAAgB,CAAC;YAC9G,WAAW,CAAC,WAAW,GAAG,IAAA,cAAQ,EAAC,CAAyB,EAAE,IAAuB,CAAC,CAAC;YACvF,MAAM,UAAU,GAAG,GAAG,CAAC,GAAG,CAAI,2BAA2B,EAAE,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;YACvF,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,qBAAS,CAAC,gBAAgB,CAAC,cAAG,CAAK,IAAI,CAAC,CAAC,CAAC;YAEtE,MAAM,UAAU,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,sBAAI,CAA0B,CAAC;YACrF,IAAI,UAAU,EAAE;gBACf,WAAW,CAAC,KAAK,GAAG,IAAA,cAAQ,EAAC,CAA4C,EAAE,IAA0C,EAAE,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC9I,2BAA2B,CAAC,KAAK,GAAG,IAAA,cAAQ,EAAC,CAA6B,EAAE,IAA2B,EAAE,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;aAChI;YAED,GAAG,CAAC,GAAG,CAAE,2BAA2B,CAAC,CAAC;YAEtC,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,GAAG,CAAmB,UAAU,EAAE,GAAG,CAAC,GAAG,CAAO,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAO,CAAC,CAAC,CAAC;YAChG,IAAI,CAAC,CAAC,CAAS,GAAG,CAAC,GAAG,CAAmB,2BAA2B,EAAE,GAAG,CAAC,GAAG,CAAO,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAO,CAAC,CAAC,CAAC;QACrH,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,IAAI,CAAC,CAAC,EAAY;gBACtB,OAAO;aACP;YAED,IAAI,CAAC,IAAI,CAAC,CAAC,EAAY;gBACtB,OAAO;aACP;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAc,SAAU,CAAC;YACjD,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAW,KAAK,CAAC,CAAC;YAE9D,IAAI,KAAK,GAAG,CAAC,EAAE;gBACd,OAAO;aACP;YAED,IAAI,CAAC,CAAC,CAAW,iBAAiB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAW,iBAAiB,CAAC;QAC1E,CAAC;KACD,CAAA;IA3CY,oBAAI;mBAAJ,IAAI;QAId,WAAA,gBAAG,CAAA;OAJO,IAAI,CA2ChB","file":"collapsedCellOutput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { localize } from 'vs/nls';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { EXPAND_CELL_OUTPUT_COMMAND_ID, INotebookEditor } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellContentPart } from 'vs/workbench/contrib/notebook/browser/view/cellPart';\n\nconst $ = DOM.$;\n\nexport class CollapsedCellOutput extends CellContentPart {\n\tconstructor(\n\t\tprivate readonly notebookEditor: INotebookEditor,\n\t\tcellOutputCollapseContainer: HTMLElement,\n\t\t@IKeybindingService keybindingService: IKeybindingService\n\t) {\n\t\tsuper();\n\n\t\tconst placeholder = DOM.append(cellOutputCollapseContainer, $('span.expandOutputPlaceholder')) as HTMLElement;\n\t\tplaceholder.textContent = localize('cellOutputsCollapsedMsg', \"Outputs are collapsed\");\n\t\tconst expandIcon = DOM.append(cellOutputCollapseContainer, $('span.expandOutputIcon'));\n\t\texpandIcon.classList.add(...ThemeIcon.asClassNameArray(Codicon.more));\n\n\t\tconst keybinding = keybindingService.lookupKeybinding(EXPAND_CELL_OUTPUT_COMMAND_ID);\n\t\tif (keybinding) {\n\t\t\tplaceholder.title = localize('cellExpandOutputButtonLabelWithDoubleClick', \"Double-click to expand cell output ({0})\", keybinding.getLabel());\n\t\t\tcellOutputCollapseContainer.title = localize('cellExpandOutputButtonLabel', \"Expand Cell Output (${0})\", keybinding.getLabel());\n\t\t}\n\n\t\tDOM.hide(cellOutputCollapseContainer);\n\n\t\tthis._register(DOM.addDisposableListener(expandIcon, DOM.EventType.CLICK, () => this.expand()));\n\t\tthis._register(DOM.addDisposableListener(cellOutputCollapseContainer, DOM.EventType.DBLCLICK, () => this.expand()));\n\t}\n\n\tprivate expand() {\n\t\tif (!this.currentCell) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.currentCell) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst textModel = this.notebookEditor.textModel!;\n\t\tconst index = textModel.cells.indexOf(this.currentCell.model);\n\n\t\tif (index < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentCell.isOutputCollapsed = !this.currentCell.isOutputCollapsed;\n\t}\n}\n"]}