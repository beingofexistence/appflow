{"version":3,"sources":["vs/workbench/contrib/notebook/browser/view/cellParts/codeCellExecutionIcon.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAiBzF,IAAM,IAAI,GAAV,MAAM,IAA+B,SAAQ,eAAG;QAGtD,YACC,eAAwC,EACvB,CAAqB,EACrB,CAAqB,EACN,CAAmC;YAEnE,KAAK,EAAE,CAAC;YAJS,MAAC,GAAD,CAAC,CAAoB;YACrB,MAAC,GAAD,CAAC,CAAoB;YACE,MAAC,GAAD,CAAC,CAA0B;YAN5D,MAAC,GAAU,KAAK,CAAC;YAUxB,IAAI,CAAC,CAAC,EAAQ,CAAC;YACf,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAsB,oBAAoB,CAAC,CAAC,CAAC,EAAE;gBACnE,IAAI,CAAC,CAAC,IAAI,KAAK,qDAAqB,CAAC,IAAI,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAK,GAAG,CAAC,EAAE;oBAC3E,IAAI,CAAC,CAAC,EAAQ,CAAC;iBACf;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAK,KAAK,CAAC,2BAA2B,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAQ,CAAC,CAAC,CAAC;QACpF,CAAC;QAED,aAAa,CAAC,OAAgB;YAC7B,IAAI,CAAC,CAAC,GAAU,OAAO,CAAC;YACxB,IAAI,CAAC,CAAC,EAAQ,CAAC;QAChB,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,IAAI,CAAC,CAAC,EAAS;gBACnB,OAAO;aACP;YAED,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAsB,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAK,GAAG,CAAC,CAAC;YAC9E,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAgB,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAK,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAChF,IAAI,IAAI,EAAE;gBACT,IAAI,CAAC,CAAC,CAAQ,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;gBACjC,GAAG,CAAC,GAAG,CAAG,IAAI,CAAC,CAAC,EAAS,GAAG,IAAA,gBAAG,EAAkB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC7D,IAAI,CAAC,CAAC,CAAQ,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;aACzC;iBAAM;gBACN,IAAI,CAAC,CAAC,CAAQ,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;gBACrC,GAAG,CAAC,GAAG,CAAG,IAAI,CAAC,CAAC,CAAQ,CAAC;aACzB;QACF,CAAC;QAEO,CAAC,CAAgB,QAA4C,EAAE,gBAA8C;YACpH,MAAM,KAAK,GAAG,QAAQ,EAAE,KAAK,CAAC;YAC9B,MAAM,EAAE,cAAc,EAAE,GAAG,gBAAgB,CAAC;YAC5C,IAAI,CAAC,KAAK,IAAI,cAAc,EAAE;gBAC7B,OAAuB;oBACtB,IAAI,EAAE,KAAK,oBAAI,CAAa,EAAE,GAAG;oBACjC,OAAO,EAAE,IAAA,cAAQ,EAAC,CAA8B,EAAE,IAAS,CAAC;iBAC5D,CAAC;aACF;iBAAM,IAAI,CAAC,KAAK,IAAI,cAAc,KAAK,KAAK,EAAE;gBAC9C,OAAuB;oBACtB,IAAI,EAAE,KAAK,oBAAI,CAAW,EAAE,GAAG;oBAC/B,OAAO,EAAE,IAAA,cAAQ,EAAC,CAA6B,EAAE,IAAQ,CAAC;iBAC1D,CAAC;aACF;iBAAM,IAAI,KAAK,KAAK,2CAA0B,CAAC,OAAO,IAAI,KAAK,KAAK,2CAA0B,CAAC,WAAW,EAAE;gBAC5G,OAAuB;oBACtB,IAAI,EAAE,KAAK,oBAAI,CAAa,EAAE,GAAG;oBACjC,OAAO,EAAE,IAAA,cAAQ,EAAC,CAA8B,EAAE,IAAS,CAAC;iBAC5D,CAAC;aACF;iBAAM,IAAI,KAAK,KAAK,2CAA0B,CAAC,SAAS,EAAE;gBAC1D,MAAM,IAAI,GAAG,qBAAS,CAAC,MAAM,CAAC,oBAAI,EAAgB,MAAM,CAAC,CAAC;gBAC1D,OAAuB;oBACtB,IAAI,EAAE,KAAK,IAAI,CAAC,EAAE,GAAG;oBACrB,OAAO,EAAE,IAAA,cAAQ,EAAC,CAAgC,EAAE,IAAW,CAAC;iBAChE,CAAC;aACF;YAED,OAAO;QACR,CAAC;KACD,CAAA;IAtEY,oBAAI;mBAAJ,IAAI;QAOd,WAAA,mCAAG,CAAA;OAPO,IAAI,CAsEhB","file":"codeCellExecutionIcon.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { renderLabelWithIcons } from 'vs/base/browser/ui/iconLabel/iconLabels';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { ICellViewModel, INotebookEditorDelegate } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { errorStateIcon, executingStateIcon, pendingStateIcon, successStateIcon } from 'vs/workbench/contrib/notebook/browser/notebookIcons';\nimport { NotebookCellExecutionState, NotebookCellInternalMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookCellExecution, INotebookExecutionStateService, NotebookExecutionType } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\n\ninterface IExecutionItem {\n\ttext: string;\n\ttooltip?: string;\n}\n\nexport class CollapsedCodeCellExecutionIcon extends Disposable {\n\tprivate _visible = false;\n\n\tconstructor(\n\t\t_notebookEditor: INotebookEditorDelegate,\n\t\tprivate readonly _cell: ICellViewModel,\n\t\tprivate readonly _element: HTMLElement,\n\t\t@INotebookExecutionStateService private _executionStateService: INotebookExecutionStateService,\n\t) {\n\t\tsuper();\n\n\t\tthis._update();\n\t\tthis._register(this._executionStateService.onDidChangeExecution(e => {\n\t\t\tif (e.type === NotebookExecutionType.cell && e.affectsCell(this._cell.uri)) {\n\t\t\t\tthis._update();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._cell.model.onDidChangeInternalMetadata(() => this._update()));\n\t}\n\n\tsetVisibility(visible: boolean): void {\n\t\tthis._visible = visible;\n\t\tthis._update();\n\t}\n\n\tprivate _update() {\n\t\tif (!this._visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst runState = this._executionStateService.getCellExecution(this._cell.uri);\n\t\tconst item = this._getItemForState(runState, this._cell.model.internalMetadata);\n\t\tif (item) {\n\t\t\tthis._element.style.display = '';\n\t\t\tDOM.reset(this._element, ...renderLabelWithIcons(item.text));\n\t\t\tthis._element.title = item.tooltip ?? '';\n\t\t} else {\n\t\t\tthis._element.style.display = 'none';\n\t\t\tDOM.reset(this._element);\n\t\t}\n\t}\n\n\tprivate _getItemForState(runState: INotebookCellExecution | undefined, internalMetadata: NotebookCellInternalMetadata): IExecutionItem | undefined {\n\t\tconst state = runState?.state;\n\t\tconst { lastRunSuccess } = internalMetadata;\n\t\tif (!state && lastRunSuccess) {\n\t\t\treturn <IExecutionItem>{\n\t\t\t\ttext: `$(${successStateIcon.id})`,\n\t\t\t\ttooltip: localize('notebook.cell.status.success', \"Success\"),\n\t\t\t};\n\t\t} else if (!state && lastRunSuccess === false) {\n\t\t\treturn <IExecutionItem>{\n\t\t\t\ttext: `$(${errorStateIcon.id})`,\n\t\t\t\ttooltip: localize('notebook.cell.status.failed', \"Failed\"),\n\t\t\t};\n\t\t} else if (state === NotebookCellExecutionState.Pending || state === NotebookCellExecutionState.Unconfirmed) {\n\t\t\treturn <IExecutionItem>{\n\t\t\t\ttext: `$(${pendingStateIcon.id})`,\n\t\t\t\ttooltip: localize('notebook.cell.status.pending', \"Pending\"),\n\t\t\t};\n\t\t} else if (state === NotebookCellExecutionState.Executing) {\n\t\t\tconst icon = ThemeIcon.modify(executingStateIcon, 'spin');\n\t\t\treturn <IExecutionItem>{\n\t\t\t\ttext: `$(${icon.id})`,\n\t\t\t\ttooltip: localize('notebook.cell.status.executing', \"Executing\"),\n\t\t\t};\n\t\t}\n\n\t\treturn;\n\t}\n}\n"]}