{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/browser/view/notebookCellListView.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG,MAAa,IAAwB,SAAQ,cAAW;QAAxD;;YACS,OAAE,GAAgB,CAAC,CAAC;QAiB7B,CAAC;QAfA,IAAI,sBAAsB;YACzB,OAAO,IAAI,CAAC,EAAE,GAAgB,CAAC,CAAC;QACjC,CAAC;QAEkB,CAAC,CAAM,mBAA2B,EAAE,SAAiB,EAAE,YAAoB,EAAE,UAA8B,EAAE,WAA+B,EAAE,gBAA0B;YAC1L,IAAI,CAAC,EAAE,EAAe,CAAC;YACvB,KAAK,CAAC,CAAC,CAAM,mBAAmB,EAAE,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAC;YACtG,IAAI,CAAC,EAAE,EAAe,CAAC;QACxB,CAAC;QAEkB,EAAE,CAAQ,SAAiB,EAAE,YAAoB,EAAE,iBAAuC;YAC5G,IAAI,CAAC,EAAE,EAAe,CAAC;YACvB,KAAK,CAAC,EAAE,CAAQ,SAAS,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;YAC5D,IAAI,CAAC,EAAE,EAAe,CAAC;QACxB,CAAC;KACD;IAlBD,oBAkBC","file":"notebookCellListView.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange } from 'vs/base/common/range';\nimport { ListView } from 'vs/base/browser/ui/list/listView';\n\nexport class NotebookCellListView<T> extends ListView<T> {\n\tprivate _renderingStack = 0;\n\n\tget inRenderingTransaction(): boolean {\n\t\treturn this._renderingStack > 0;\n\t}\n\n\tprotected override render(previousRenderRange: IRange, renderTop: number, renderHeight: number, renderLeft: number | undefined, scrollWidth: number | undefined, updateItemsInDOM?: boolean): void {\n\t\tthis._renderingStack++;\n\t\tsuper.render(previousRenderRange, renderTop, renderHeight, renderLeft, scrollWidth, updateItemsInDOM);\n\t\tthis._renderingStack--;\n\t}\n\n\tprotected override _rerender(renderTop: number, renderHeight: number, inSmoothScrolling?: boolean | undefined): void {\n\t\tthis._renderingStack++;\n\t\tsuper._rerender(renderTop, renderHeight, inSmoothScrolling);\n\t\tthis._renderingStack--;\n\t}\n}\n"]}