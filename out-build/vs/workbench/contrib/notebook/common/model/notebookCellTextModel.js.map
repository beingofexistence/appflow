{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/common/model/notebookCellTextModel.ts"],"names":[],"mappings":"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","file":"notebookCellTextModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { hash, StringSHA1 } from 'vs/base/common/hash';\nimport { Disposable, DisposableStore, dispose } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport * as UUID from 'vs/base/common/uuid';\nimport { Range } from 'vs/editor/common/core/range';\nimport * as model from 'vs/editor/common/model';\nimport { PieceTreeTextBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer';\nimport { PieceTreeTextBufferBuilder } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { NotebookCellOutputTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookCellOutputTextModel';\nimport { CellInternalMetadataChangedEvent, CellKind, ICell, ICellDto2, ICellOutput, IOutputDto, IOutputItemDto, NotebookCellCollapseState, NotebookCellInternalMetadata, NotebookCellMetadata, NotebookCellOutputsSplice, TransientOptions } from 'vs/workbench/contrib/notebook/common/notebookCommon';\n\nexport class NotebookCellTextModel extends Disposable implements ICell {\n\tprivate readonly _onDidChangeOutputs = this._register(new Emitter<NotebookCellOutputsSplice>());\n\treadonly onDidChangeOutputs: Event<NotebookCellOutputsSplice> = this._onDidChangeOutputs.event;\n\n\tprivate readonly _onDidChangeOutputItems = this._register(new Emitter<void>());\n\treadonly onDidChangeOutputItems: Event<void> = this._onDidChangeOutputItems.event;\n\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<'content' | 'language' | 'mime'>());\n\treadonly onDidChangeContent: Event<'content' | 'language' | 'mime'> = this._onDidChangeContent.event;\n\n\tprivate readonly _onDidChangeMetadata = this._register(new Emitter<void>());\n\treadonly onDidChangeMetadata: Event<void> = this._onDidChangeMetadata.event;\n\n\tprivate readonly _onDidChangeInternalMetadata = this._register(new Emitter<CellInternalMetadataChangedEvent>());\n\treadonly onDidChangeInternalMetadata: Event<CellInternalMetadataChangedEvent> = this._onDidChangeInternalMetadata.event;\n\n\tprivate readonly _onDidChangeLanguage = this._register(new Emitter<string>());\n\treadonly onDidChangeLanguage: Event<string> = this._onDidChangeLanguage.event;\n\n\tprivate _outputs: NotebookCellOutputTextModel[];\n\n\tget outputs(): ICellOutput[] {\n\t\treturn this._outputs;\n\t}\n\n\tprivate _metadata: NotebookCellMetadata;\n\n\tget metadata() {\n\t\treturn this._metadata;\n\t}\n\n\tset metadata(newMetadata: NotebookCellMetadata) {\n\t\tthis._metadata = newMetadata;\n\t\tthis._hash = null;\n\t\tthis._onDidChangeMetadata.fire();\n\t}\n\n\tprivate _internalMetadata: NotebookCellInternalMetadata;\n\n\tget internalMetadata() {\n\t\treturn this._internalMetadata;\n\t}\n\n\tset internalMetadata(newInternalMetadata: NotebookCellInternalMetadata) {\n\t\tconst lastRunSuccessChanged = this._internalMetadata.lastRunSuccess !== newInternalMetadata.lastRunSuccess;\n\t\tnewInternalMetadata = {\n\t\t\t...newInternalMetadata,\n\t\t\t...{ runStartTimeAdjustment: computeRunStartTimeAdjustment(this._internalMetadata, newInternalMetadata) }\n\t\t};\n\t\tthis._internalMetadata = newInternalMetadata;\n\t\tthis._hash = null;\n\t\tthis._onDidChangeInternalMetadata.fire({ lastRunSuccessChanged });\n\t}\n\n\tget language() {\n\t\treturn this._language;\n\t}\n\n\tset language(newLanguage: string) {\n\t\tif (this._textModel\n\t\t\t// 1. the language update is from workspace edit, checking if it's the same as text model's mode\n\t\t\t&& this._textModel.getLanguageId() === this._languageService.getLanguageIdByLanguageName(newLanguage)\n\t\t\t// 2. the text model's mode might be the same as the `this.language`, even if the language friendly name is not the same, we should not trigger an update\n\t\t\t&& this._textModel.getLanguageId() === this._languageService.getLanguageIdByLanguageName(this.language)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newLanguageId = this._languageService.getLanguageIdByLanguageName(newLanguage);\n\n\t\tif (newLanguageId === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._textModel) {\n\t\t\tconst languageId = this._languageService.createById(newLanguageId);\n\t\t\tthis._textModel.setLanguage(languageId.languageId);\n\t\t}\n\n\t\tif (this._language === newLanguage) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._language = newLanguage;\n\t\tthis._hash = null;\n\t\tthis._onDidChangeLanguage.fire(newLanguage);\n\t\tthis._onDidChangeContent.fire('language');\n\t}\n\n\tpublic get mime(): string | undefined {\n\t\treturn this._mime;\n\t}\n\n\tpublic set mime(newMime: string | undefined) {\n\t\tif (this._mime === newMime) {\n\t\t\treturn;\n\t\t}\n\t\tthis._mime = newMime;\n\t\tthis._hash = null;\n\t\tthis._onDidChangeContent.fire('mime');\n\t}\n\n\tprivate _textBuffer!: model.IReadonlyTextBuffer;\n\n\tget textBuffer() {\n\t\tif (this._textBuffer) {\n\t\t\treturn this._textBuffer;\n\t\t}\n\n\t\tconst builder = new PieceTreeTextBufferBuilder();\n\t\tbuilder.acceptChunk(this._source);\n\t\tconst bufferFactory = builder.finish(true);\n\t\tconst { textBuffer, disposable } = bufferFactory.create(model.DefaultEndOfLine.LF);\n\t\tthis._textBuffer = textBuffer;\n\t\tthis._register(disposable);\n\n\t\tthis._register(this._textBuffer.onDidChangeContent(() => {\n\t\t\tthis._hash = null;\n\t\t\tif (!this._textModel) {\n\t\t\t\tthis._onDidChangeContent.fire('content');\n\t\t\t}\n\t\t}));\n\n\t\treturn this._textBuffer;\n\t}\n\n\tprivate _textBufferHash: string | null = null;\n\tprivate _hash: number | null = null;\n\n\tprivate _versionId: number = 1;\n\tprivate _alternativeId: number = 1;\n\tget alternativeId(): number {\n\t\treturn this._alternativeId;\n\t}\n\n\tprivate readonly _textModelDisposables = this._register(new DisposableStore());\n\tprivate _textModel: TextModel | undefined = undefined;\n\tget textModel(): TextModel | undefined {\n\t\treturn this._textModel;\n\t}\n\n\tset textModel(m: TextModel | undefined) {\n\t\tif (this._textModel === m) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._textModelDisposables.clear();\n\t\tthis._textModel = m;\n\t\tif (this._textModel) {\n\t\t\tthis.setRegisteredLanguage(this._languageService, this._textModel.getLanguageId(), this.language);\n\n\t\t\t// Listen to language changes on the model\n\t\t\tthis._textModelDisposables.add(this._textModel.onDidChangeLanguage((e) => this.setRegisteredLanguage(this._languageService, e.newLanguage, this.language)));\n\t\t\tthis._textModelDisposables.add(this._textModel.onWillDispose(() => this.textModel = undefined));\n\t\t\tthis._textModelDisposables.add(this._textModel.onDidChangeContent(() => {\n\t\t\t\tif (this._textModel) {\n\t\t\t\t\tthis._versionId = this._textModel.getVersionId();\n\t\t\t\t\tthis._alternativeId = this._textModel.getAlternativeVersionId();\n\t\t\t\t}\n\t\t\t\tthis._onDidChangeContent.fire('content');\n\t\t\t}));\n\n\t\t\tthis._textModel._overwriteVersionId(this._versionId);\n\t\t\tthis._textModel._overwriteAlternativeVersionId(this._versionId);\n\t\t}\n\t}\n\n\tprivate setRegisteredLanguage(languageService: ILanguageService, newLanguage: string, currentLanguage: string) {\n\t\t// The language defined in the cell might not be supported in the editor so the text model might be using the default fallback\n\t\t// If so let's not modify the language\n\t\tconst isFallBackLanguage = (newLanguage === PLAINTEXT_LANGUAGE_ID || newLanguage === 'jupyter');\n\t\tif (!languageService.isRegisteredLanguageId(currentLanguage) && isFallBackLanguage) {\n\t\t\t// notify to display warning, but don't change the language\n\t\t\tthis._onDidChangeLanguage.fire(currentLanguage);\n\t\t} else {\n\t\t\tthis.language = newLanguage;\n\t\t}\n\t}\n\n\tconstructor(\n\t\treadonly uri: URI,\n\t\tpublic readonly handle: number,\n\t\tprivate readonly _source: string,\n\t\tprivate _language: string,\n\t\tprivate _mime: string | undefined,\n\t\tpublic readonly cellKind: CellKind,\n\t\toutputs: IOutputDto[],\n\t\tmetadata: NotebookCellMetadata | undefined,\n\t\tinternalMetadata: NotebookCellInternalMetadata | undefined,\n\t\tpublic readonly collapseState: NotebookCellCollapseState | undefined,\n\t\tpublic readonly transientOptions: TransientOptions,\n\t\tprivate readonly _languageService: ILanguageService\n\t) {\n\t\tsuper();\n\t\tthis._outputs = outputs.map(op => new NotebookCellOutputTextModel(op));\n\t\tthis._metadata = metadata ?? {};\n\t\tthis._internalMetadata = internalMetadata ?? {};\n\t}\n\n\tresetTextBuffer(textBuffer: model.ITextBuffer) {\n\t\tthis._textBuffer = textBuffer;\n\t}\n\n\tgetValue(): string {\n\t\tconst fullRange = this.getFullModelRange();\n\t\tconst eol = this.textBuffer.getEOL();\n\t\tif (eol === '\\n') {\n\t\t\treturn this.textBuffer.getValueInRange(fullRange, model.EndOfLinePreference.LF);\n\t\t} else {\n\t\t\treturn this.textBuffer.getValueInRange(fullRange, model.EndOfLinePreference.CRLF);\n\t\t}\n\t}\n\n\tgetTextBufferHash() {\n\t\tif (this._textBufferHash !== null) {\n\t\t\treturn this._textBufferHash;\n\t\t}\n\n\t\tconst shaComputer = new StringSHA1();\n\t\tconst snapshot = this.textBuffer.createSnapshot(false);\n\t\tlet text: string | null;\n\t\twhile ((text = snapshot.read())) {\n\t\t\tshaComputer.update(text);\n\t\t}\n\t\tthis._textBufferHash = shaComputer.digest();\n\t\treturn this._textBufferHash;\n\t}\n\n\tgetHashValue(): number {\n\t\tif (this._hash !== null) {\n\t\t\treturn this._hash;\n\t\t}\n\n\t\tthis._hash = hash([hash(this.language), this.getTextBufferHash(), this._getPersisentMetadata(), this.transientOptions.transientOutputs ? [] : this._outputs.map(op => ({\n\t\t\toutputs: op.outputs.map(output => ({\n\t\t\t\tmime: output.mime,\n\t\t\t\tdata: Array.from(output.data.buffer)\n\t\t\t})),\n\t\t\tmetadata: op.metadata\n\t\t}))]);\n\t\treturn this._hash;\n\t}\n\n\tprivate _getPersisentMetadata() {\n\t\tconst filteredMetadata: { [key: string]: any } = {};\n\t\tconst transientCellMetadata = this.transientOptions.transientCellMetadata;\n\n\t\tconst keys = new Set([...Object.keys(this.metadata)]);\n\t\tfor (const key of keys) {\n\t\t\tif (!(transientCellMetadata[key as keyof NotebookCellMetadata])\n\t\t\t) {\n\t\t\t\tfilteredMetadata[key] = this.metadata[key as keyof NotebookCellMetadata];\n\t\t\t}\n\t\t}\n\n\t\treturn filteredMetadata;\n\t}\n\n\tgetTextLength(): number {\n\t\treturn this.textBuffer.getLength();\n\t}\n\n\tgetFullModelRange() {\n\t\tconst lineCount = this.textBuffer.getLineCount();\n\t\treturn new Range(1, 1, lineCount, this.textBuffer.getLineLength(lineCount) + 1);\n\t}\n\n\tspliceNotebookCellOutputs(splice: NotebookCellOutputsSplice): void {\n\t\tif (splice.deleteCount > 0 && splice.newOutputs.length > 0) {\n\t\t\tconst commonLen = Math.min(splice.deleteCount, splice.newOutputs.length);\n\t\t\t// update\n\t\t\tfor (let i = 0; i < commonLen; i++) {\n\t\t\t\tconst currentOutput = this.outputs[splice.start + i];\n\t\t\t\tconst newOutput = splice.newOutputs[i];\n\n\t\t\t\tthis.replaceOutput(currentOutput.outputId, newOutput);\n\t\t\t}\n\n\t\t\tthis.outputs.splice(splice.start + commonLen, splice.deleteCount - commonLen, ...splice.newOutputs.slice(commonLen));\n\t\t\tthis._onDidChangeOutputs.fire({ start: splice.start + commonLen, deleteCount: splice.deleteCount - commonLen, newOutputs: splice.newOutputs.slice(commonLen) });\n\t\t} else {\n\t\t\tthis.outputs.splice(splice.start, splice.deleteCount, ...splice.newOutputs);\n\t\t\tthis._onDidChangeOutputs.fire(splice);\n\t\t}\n\t}\n\n\treplaceOutput(outputId: string, newOutputItem: ICellOutput) {\n\t\tconst outputIndex = this.outputs.findIndex(output => output.outputId === outputId);\n\n\t\tif (outputIndex < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst output = this.outputs[outputIndex];\n\t\toutput.replaceData(newOutputItem);\n\t\tthis._onDidChangeOutputItems.fire();\n\t\treturn true;\n\t}\n\n\tchangeOutputItems(outputId: string, append: boolean, items: IOutputItemDto[]): boolean {\n\t\tconst outputIndex = this.outputs.findIndex(output => output.outputId === outputId);\n\n\t\tif (outputIndex < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst output = this.outputs[outputIndex];\n\t\tif (append) {\n\t\t\toutput.appendData(items);\n\t\t} else {\n\t\t\toutput.replaceData({ outputId: outputId, outputs: items, metadata: output.metadata });\n\t\t}\n\t\tthis._onDidChangeOutputItems.fire();\n\t\treturn true;\n\t}\n\n\tprivate _outputNotEqualFastCheck(left: ICellOutput[], right: ICellOutput[]) {\n\t\tif (left.length !== right.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let i = 0; i < this.outputs.length; i++) {\n\t\t\tconst l = left[i];\n\t\t\tconst r = right[i];\n\n\t\t\tif (l.outputs.length !== r.outputs.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (let k = 0; k < l.outputs.length; k++) {\n\t\t\t\tif (l.outputs[k].mime !== r.outputs[k].mime) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (l.outputs[k].data.byteLength !== r.outputs[k].data.byteLength) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tequal(b: NotebookCellTextModel): boolean {\n\t\tif (this.language !== b.language) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.getTextLength() !== b.getTextLength()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.transientOptions.transientOutputs) {\n\t\t\t// compare outputs\n\n\t\t\tif (!this._outputNotEqualFastCheck(this.outputs, b.outputs)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn this.getHashValue() === b.getHashValue();\n\t}\n\n\t/**\n\t * Only compares\n\t * - language\n\t * - mime\n\t * - cellKind\n\t * - internal metadata\n\t * - source\n\t */\n\tfastEqual(b: ICellDto2): boolean {\n\t\tif (this.language !== b.language) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.mime !== b.mime) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.cellKind !== b.cellKind) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.internalMetadata?.executionOrder !== b.internalMetadata?.executionOrder\n\t\t\t|| this.internalMetadata?.lastRunSuccess !== b.internalMetadata?.lastRunSuccess\n\t\t\t|| this.internalMetadata?.runStartTime !== b.internalMetadata?.runStartTime\n\t\t\t|| this.internalMetadata?.runStartTimeAdjustment !== b.internalMetadata?.runStartTimeAdjustment\n\t\t\t|| this.internalMetadata?.runEndTime !== b.internalMetadata?.runEndTime) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Once we attach the cell text buffer to an editor, the source of truth is the text buffer instead of the original source\n\t\tif (this._textBuffer && this.getValue() !== b.source) {\n\t\t\treturn false;\n\t\t} else if (this._source !== b.source) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\toverride dispose() {\n\t\tdispose(this._outputs);\n\t\t// Manually release reference to previous text buffer to avoid large leaks\n\t\t// in case someone leaks a CellTextModel reference\n\t\tconst emptyDisposedTextBuffer = new PieceTreeTextBuffer([], '', '\\n', false, false, true, true);\n\t\temptyDisposedTextBuffer.dispose();\n\t\tthis._textBuffer = emptyDisposedTextBuffer;\n\t\tsuper.dispose();\n\t}\n}\n\nexport function cloneNotebookCellTextModel(cell: NotebookCellTextModel) {\n\treturn {\n\t\tsource: cell.getValue(),\n\t\tlanguage: cell.language,\n\t\tmime: cell.mime,\n\t\tcellKind: cell.cellKind,\n\t\toutputs: cell.outputs.map(output => ({\n\t\t\toutputs: output.outputs,\n\t\t\t/* paste should generate new outputId */ outputId: UUID.generateUuid()\n\t\t})),\n\t\tmetadata: {}\n\t};\n}\n\nfunction computeRunStartTimeAdjustment(oldMetadata: NotebookCellInternalMetadata, newMetadata: NotebookCellInternalMetadata): number | undefined {\n\tif (oldMetadata.runStartTime !== newMetadata.runStartTime && typeof newMetadata.runStartTime === 'number') {\n\t\tconst offset = Date.now() - newMetadata.runStartTime;\n\t\treturn offset < 0 ? Math.abs(offset) : 0;\n\t} else {\n\t\treturn newMetadata.runStartTimeAdjustment;\n\t}\n}\n"]}