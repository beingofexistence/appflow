{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/common/notebookEditorModel.ts"],"names":[],"mappings":"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","file":"notebookEditorModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBufferReadableStream, bufferToStream, streamToBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { filter } from 'vs/base/common/objects';\nimport { assertType } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IWriteFileOptions, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { IRevertOptions, ISaveOptions, IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { EditorModel } from 'vs/workbench/common/editor/editorModel';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { ICellDto2, INotebookEditorModel, INotebookLoadOptions, IResolvedNotebookEditorModel, NotebookCellsChangeType, NotebookData, NotebookSetting } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { INotebookSerializer, INotebookService, SimpleNotebookProviderInfo } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { IFilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { IFileWorkingCopyModelConfiguration } from 'vs/workbench/services/workingCopy/common/fileWorkingCopy';\nimport { IFileWorkingCopyManager } from 'vs/workbench/services/workingCopy/common/fileWorkingCopyManager';\nimport { IStoredFileWorkingCopy, IStoredFileWorkingCopyModel, IStoredFileWorkingCopyModelContentChangedEvent, IStoredFileWorkingCopyModelFactory, IStoredFileWorkingCopySaveEvent, StoredFileWorkingCopyState } from 'vs/workbench/services/workingCopy/common/storedFileWorkingCopy';\nimport { IUntitledFileWorkingCopy, IUntitledFileWorkingCopyModel, IUntitledFileWorkingCopyModelContentChangedEvent, IUntitledFileWorkingCopyModelFactory } from 'vs/workbench/services/workingCopy/common/untitledFileWorkingCopy';\nimport { WorkingCopyCapabilities } from 'vs/workbench/services/workingCopy/common/workingCopy';\n\n//#region --- simple content provider\n\nexport class SimpleNotebookEditorModel extends EditorModel implements INotebookEditorModel {\n\n\tprivate readonly _onDidChangeDirty = this._register(new Emitter<void>());\n\tprivate readonly _onDidSave = this._register(new Emitter<IStoredFileWorkingCopySaveEvent>());\n\tprivate readonly _onDidChangeOrphaned = this._register(new Emitter<void>());\n\tprivate readonly _onDidChangeReadonly = this._register(new Emitter<void>());\n\tprivate readonly _onDidRevertUntitled = this._register(new Emitter<void>());\n\n\treadonly onDidChangeDirty: Event<void> = this._onDidChangeDirty.event;\n\treadonly onDidSave: Event<IStoredFileWorkingCopySaveEvent> = this._onDidSave.event;\n\treadonly onDidChangeOrphaned: Event<void> = this._onDidChangeOrphaned.event;\n\treadonly onDidChangeReadonly: Event<void> = this._onDidChangeReadonly.event;\n\treadonly onDidRevertUntitled: Event<void> = this._onDidRevertUntitled.event;\n\n\tprivate _workingCopy?: IStoredFileWorkingCopy<NotebookFileWorkingCopyModel> | IUntitledFileWorkingCopy<NotebookFileWorkingCopyModel>;\n\tprivate readonly _workingCopyListeners = this._register(new DisposableStore());\n\tprivate readonly scratchPad: boolean;\n\n\tconstructor(\n\t\treadonly resource: URI,\n\t\tprivate readonly _hasAssociatedFilePath: boolean,\n\t\treadonly viewType: string,\n\t\tprivate readonly _workingCopyManager: IFileWorkingCopyManager<NotebookFileWorkingCopyModel, NotebookFileWorkingCopyModel>,\n\t\t@IFilesConfigurationService private readonly _filesConfigurationService: IFilesConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.scratchPad = viewType === 'interactive';\n\t}\n\n\toverride dispose(): void {\n\t\tthis._workingCopy?.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tget notebook(): NotebookTextModel | undefined {\n\t\treturn this._workingCopy?.model?.notebookModel;\n\t}\n\n\toverride isResolved(): this is IResolvedNotebookEditorModel {\n\t\treturn Boolean(this._workingCopy?.model?.notebookModel);\n\t}\n\n\tasync canDispose(): Promise<boolean> {\n\t\tif (!this._workingCopy) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (SimpleNotebookEditorModel._isStoredFileWorkingCopy(this._workingCopy)) {\n\t\t\treturn this._workingCopyManager.stored.canDispose(this._workingCopy);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tisDirty(): boolean {\n\t\treturn this._workingCopy?.isDirty() ?? false;\n\t}\n\n\tisModified(): boolean {\n\t\treturn this._workingCopy?.isModified() ?? false;\n\t}\n\n\tisOrphaned(): boolean {\n\t\treturn SimpleNotebookEditorModel._isStoredFileWorkingCopy(this._workingCopy) && this._workingCopy.hasState(StoredFileWorkingCopyState.ORPHAN);\n\t}\n\n\thasAssociatedFilePath(): boolean {\n\t\treturn !SimpleNotebookEditorModel._isStoredFileWorkingCopy(this._workingCopy) && !!this._workingCopy?.hasAssociatedFilePath;\n\t}\n\n\tisReadonly(): boolean | IMarkdownString {\n\t\tif (SimpleNotebookEditorModel._isStoredFileWorkingCopy(this._workingCopy)) {\n\t\t\treturn this._workingCopy?.isReadonly();\n\t\t} else {\n\t\t\treturn this._filesConfigurationService.isReadonly(this.resource);\n\t\t}\n\t}\n\n\tget hasErrorState(): boolean {\n\t\tif (this._workingCopy && 'hasState' in this._workingCopy) {\n\t\t\treturn this._workingCopy.hasState(StoredFileWorkingCopyState.ERROR);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\trevert(options?: IRevertOptions): Promise<void> {\n\t\tassertType(this.isResolved());\n\t\treturn this._workingCopy!.revert(options);\n\t}\n\n\tsave(options?: ISaveOptions): Promise<boolean> {\n\t\tassertType(this.isResolved());\n\t\treturn this._workingCopy!.save(options);\n\t}\n\n\tasync load(options?: INotebookLoadOptions): Promise<IResolvedNotebookEditorModel> {\n\t\tif (!this._workingCopy || !this._workingCopy.model) {\n\t\t\tif (this.resource.scheme === Schemas.untitled) {\n\t\t\t\tif (this._hasAssociatedFilePath) {\n\t\t\t\t\tthis._workingCopy = await this._workingCopyManager.resolve({ associatedResource: this.resource });\n\t\t\t\t} else {\n\t\t\t\t\tthis._workingCopy = await this._workingCopyManager.resolve({ untitledResource: this.resource, isScratchpad: this.scratchPad });\n\t\t\t\t}\n\t\t\t\tthis._workingCopy.onDidRevert(() => this._onDidRevertUntitled.fire());\n\t\t\t} else {\n\t\t\t\tthis._workingCopy = await this._workingCopyManager.resolve(this.resource, options?.forceReadFromFile ? { reload: { async: false, force: true } } : undefined);\n\t\t\t\tthis._workingCopyListeners.add(this._workingCopy.onDidSave(e => this._onDidSave.fire(e)));\n\t\t\t\tthis._workingCopyListeners.add(this._workingCopy.onDidChangeOrphaned(() => this._onDidChangeOrphaned.fire()));\n\t\t\t\tthis._workingCopyListeners.add(this._workingCopy.onDidChangeReadonly(() => this._onDidChangeReadonly.fire()));\n\t\t\t}\n\t\t\tthis._workingCopyListeners.add(this._workingCopy.onDidChangeDirty(() => this._onDidChangeDirty.fire(), undefined));\n\n\t\t\tthis._workingCopyListeners.add(this._workingCopy.onWillDispose(() => {\n\t\t\t\tthis._workingCopyListeners.clear();\n\t\t\t\tthis._workingCopy?.model?.dispose();\n\t\t\t}));\n\t\t} else {\n\t\t\tawait this._workingCopyManager.resolve(this.resource, {\n\t\t\t\treload: {\n\t\t\t\t\tasync: !options?.forceReadFromFile,\n\t\t\t\t\tforce: options?.forceReadFromFile\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tassertType(this.isResolved());\n\t\treturn this;\n\t}\n\n\tasync saveAs(target: URI): Promise<IUntypedEditorInput | undefined> {\n\t\tconst newWorkingCopy = await this._workingCopyManager.saveAs(this.resource, target);\n\t\tif (!newWorkingCopy) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// this is a little hacky because we leave the new working copy alone. BUT\n\t\t// the newly created editor input will pick it up and claim ownership of it.\n\t\treturn { resource: newWorkingCopy.resource };\n\t}\n\n\tprivate static _isStoredFileWorkingCopy(candidate?: IStoredFileWorkingCopy<NotebookFileWorkingCopyModel> | IUntitledFileWorkingCopy<NotebookFileWorkingCopyModel>): candidate is IStoredFileWorkingCopy<NotebookFileWorkingCopyModel> {\n\t\tconst isUntitled = candidate && candidate.capabilities & WorkingCopyCapabilities.Untitled;\n\n\t\treturn !isUntitled;\n\t}\n}\n\nexport class NotebookFileWorkingCopyModel extends Disposable implements IStoredFileWorkingCopyModel, IUntitledFileWorkingCopyModel {\n\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<IStoredFileWorkingCopyModelContentChangedEvent & IUntitledFileWorkingCopyModelContentChangedEvent>());\n\treadonly onDidChangeContent = this._onDidChangeContent.event;\n\n\treadonly onWillDispose: Event<void>;\n\n\treadonly configuration: IFileWorkingCopyModelConfiguration | undefined = undefined;\n\tsave: ((options: IWriteFileOptions, token: CancellationToken) => Promise<IFileStatWithMetadata>) | undefined;\n\n\tconstructor(\n\t\tprivate readonly _notebookModel: NotebookTextModel,\n\t\tprivate readonly _notebookService: INotebookService,\n\t\tprivate readonly _configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.onWillDispose = _notebookModel.onWillDispose.bind(_notebookModel);\n\n\t\tthis._register(_notebookModel.onDidChangeContent(e => {\n\t\t\tfor (const rawEvent of e.rawEvents) {\n\t\t\t\tif (rawEvent.kind === NotebookCellsChangeType.Initialize) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (rawEvent.transient) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis._onDidChangeContent.fire({\n\t\t\t\t\tisRedoing: false, //todo@rebornix forward this information from notebook model\n\t\t\t\t\tisUndoing: false,\n\t\t\t\t\tisInitial: false, //_notebookModel.cells.length === 0 // todo@jrieken non transient metadata?\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}));\n\n\t\tif (_notebookModel.uri.scheme === Schemas.vscodeRemote) {\n\t\t\tthis.configuration = {\n\t\t\t\t// Intentionally pick a larger delay for triggering backups when\n\t\t\t\t// we are connected to a remote. This saves us repeated roundtrips\n\t\t\t\t// to the remote server when the content changes because the\n\t\t\t\t// remote hosts the extension of the notebook with the contents truth\n\t\t\t\tbackupDelay: 10000\n\t\t\t};\n\n\t\t\t// Override save behavior to avoid transferring the buffer across the wire 3 times\n\t\t\tif (this._configurationService.getValue(NotebookSetting.remoteSaving)) {\n\t\t\t\tthis.save = async (options: IWriteFileOptions, token: CancellationToken) => {\n\t\t\t\t\tconst serializer = await this.getNotebookSerializer();\n\n\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst stat = await serializer.save(this._notebookModel.uri, this._notebookModel.versionId, options, token);\n\t\t\t\t\treturn stat;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis._notebookModel.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tget notebookModel() {\n\t\treturn this._notebookModel;\n\t}\n\n\tasync snapshot(token: CancellationToken): Promise<VSBufferReadableStream> {\n\t\tconst serializer = await this.getNotebookSerializer();\n\n\t\tconst data: NotebookData = {\n\t\t\tmetadata: filter(this._notebookModel.metadata, key => !serializer.options.transientDocumentMetadata[key]),\n\t\t\tcells: [],\n\t\t};\n\n\t\tfor (const cell of this._notebookModel.cells) {\n\t\t\tconst cellData: ICellDto2 = {\n\t\t\t\tcellKind: cell.cellKind,\n\t\t\t\tlanguage: cell.language,\n\t\t\t\tmime: cell.mime,\n\t\t\t\tsource: cell.getValue(),\n\t\t\t\toutputs: [],\n\t\t\t\tinternalMetadata: cell.internalMetadata\n\t\t\t};\n\n\t\t\tcellData.outputs = !serializer.options.transientOutputs ? cell.outputs : [];\n\t\t\tcellData.metadata = filter(cell.metadata, key => !serializer.options.transientCellMetadata[key]);\n\n\t\t\tdata.cells.push(cellData);\n\t\t}\n\n\t\tconst bytes = await serializer.notebookToData(data);\n\t\tif (token.isCancellationRequested) {\n\t\t\tthrow new CancellationError();\n\t\t}\n\t\treturn bufferToStream(bytes);\n\t}\n\n\tasync update(stream: VSBufferReadableStream, token: CancellationToken): Promise<void> {\n\t\tconst serializer = await this.getNotebookSerializer();\n\n\t\tconst bytes = await streamToBuffer(stream);\n\t\tconst data = await serializer.dataToNotebook(bytes);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\tthrow new CancellationError();\n\t\t}\n\t\tthis._notebookModel.reset(data.cells, data.metadata, serializer.options);\n\t}\n\n\tasync getNotebookSerializer(): Promise<INotebookSerializer> {\n\t\tconst info = await this._notebookService.withNotebookDataProvider(this.notebookModel.viewType);\n\t\tif (!(info instanceof SimpleNotebookProviderInfo)) {\n\t\t\tthrow new Error('CANNOT open file notebook with this provider');\n\t\t}\n\n\t\treturn info.serializer;\n\t}\n\n\tget versionId() {\n\t\treturn this._notebookModel.alternativeVersionId;\n\t}\n\n\tpushStackElement(): void {\n\t\tthis._notebookModel.pushStackElement('save', undefined, undefined);\n\t}\n}\n\nexport class NotebookFileWorkingCopyModelFactory implements IStoredFileWorkingCopyModelFactory<NotebookFileWorkingCopyModel>, IUntitledFileWorkingCopyModelFactory<NotebookFileWorkingCopyModel>{\n\n\tconstructor(\n\t\tprivate readonly _viewType: string,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) { }\n\n\tasync createModel(resource: URI, stream: VSBufferReadableStream, token: CancellationToken): Promise<NotebookFileWorkingCopyModel> {\n\n\t\tconst info = await this._notebookService.withNotebookDataProvider(this._viewType);\n\t\tif (!(info instanceof SimpleNotebookProviderInfo)) {\n\t\t\tthrow new Error('CANNOT open file notebook with this provider');\n\t\t}\n\n\t\tconst bytes = await streamToBuffer(stream);\n\t\tconst data = await info.serializer.dataToNotebook(bytes);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\tthrow new CancellationError();\n\t\t}\n\n\t\tconst notebookModel = this._notebookService.createNotebookTextModel(info.viewType, resource, data, info.serializer.options);\n\t\treturn new NotebookFileWorkingCopyModel(notebookModel, this._notebookService, this._configurationService);\n\t}\n}\n\n//#endregion\n"]}