{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/common/notebookEditorModelResolverServiceImpl.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAqBhG,IAAM,gCAAgC,GAAtC,MAAM,gCAAiC,SAAQ,eAA0D;QAexG,YACwB,CAA2C,EAChD,CAAuC,EAC5C,CAAiC,EACvB,CAA2C;YAElE,KAAK,EAAE,CAAC;YALgC,MAAC,GAAD,CAAC,CAAyB;YAC/B,MAAC,GAAD,CAAC,CAAqB;YAC3B,MAAC,GAAD,CAAC,CAAe;YACN,MAAC,GAAD,CAAC,CAAyB;YAjBlD,MAAC,GAAc,IAAI,eAAG,EAAc,CAAC;YACrC,MAAC,GAAsB,IAAI,GAAG,EAA+F,CAAC;YAC9H,MAAC,GAAgB,IAAI,GAAG,EAA6C,CAAC;YAEtE,MAAC,GAAoB,IAAI,WAAG,EAAW,CAAC;YAChD,sBAAiB,GAAe,IAAI,CAAC,CAAC,CAAkB,KAAK,CAAC;YAEtD,MAAC,GAAmB,IAAI,WAAG,EAAoC,CAAC;YACxE,qBAAgB,GAAwC,IAAI,CAAC,CAAC,CAAiB,KAAK,CAAC;YAE7E,MAAC,GAAc,IAAI,SAAG,EAAmB,CAAC;YAE1C,MAAC,GAAiB,IAAI,GAAG,EAAU,CAAC;QAQrD,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAY,OAAO,EAAE,CAAC;YAC5B,IAAI,CAAC,CAAC,CAAkB,OAAO,EAAE,CAAC;YAClC,IAAI,CAAC,CAAC,CAAiB,OAAO,EAAE,CAAC;YACjC,IAAA,eAAG,EAAK,IAAI,CAAC,CAAC,CAAc,MAAM,EAAE,CAAC,CAAC;YACtC,IAAA,eAAG,EAAK,IAAI,CAAC,CAAC,CAAoB,MAAM,EAAE,CAAC,CAAC;QAC7C,CAAC;QAED,OAAO,CAAC,QAAa;YACpB,OAAO,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC;QACjD,CAAC;QAES,KAAK,CAAC,CAAC,CAAsB,GAAW,EAAE,QAAgB,EAAE,qBAA8B;YACnG,4BAA4B;YAC5B,IAAI,CAAC,CAAC,CAAe,MAAM,CAAC,GAAG,CAAC,CAAC;YAEjC,MAAM,GAAG,GAAG,SAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE3B,MAAM,iBAAiB,GAAG,oBAAG,CAA+B,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC7E,IAAI,kBAAkB,GAAG,IAAI,CAAC,CAAC,CAAoB,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC1E,IAAI,CAAC,kBAAkB,EAAE;gBACxB,MAAM,OAAO,GAAG,IAAI,0BAAI,CAAgC,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAiB,IAAI,CAAC,CAAC,CAAqB,CAAC;gBACrH,kBAAkB,GAA6F,IAAI,CAAC,CAAC,CAAqB,cAAc,CACvJ,6BAAI,EACJ,iBAAiB,EACjB,OAAO,EACP,OAAO,CACP,CAAC;gBACF,IAAI,CAAC,CAAC,CAAoB,GAAG,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,CAAC;aACrE;YACD,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAqB,cAAc,CAAC,0BAAI,EAAuB,GAAG,EAAE,qBAAqB,EAAE,QAAQ,EAAE,kBAAkB,CAAC,CAAC;YAC7I,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC;YAGlC,2EAA2E;YAC3E,yEAAyE;YACzE,kDAAkD;YAClD,IAAI,oBAAiD,CAAC;YAEtD,IAAI,CAAC,CAAC,CAAc,GAAG,CAAC,MAAM,EAAE,IAAA,eAAG,EAClC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAkB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EACrE,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE;gBAC5B,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;gBACjC,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;gBAEhD,2BAA2B;gBAC3B,6BAA6B;gBAC7B,IAAI,OAAO,IAAI,CAAC,oBAAoB,EAAE;oBACrC,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;iBACnD;qBAAM,IAAI,oBAAoB,EAAE;oBAChC,oBAAoB,CAAC,OAAO,EAAE,CAAC;oBAC/B,oBAAoB,GAAG,SAAS,CAAC;iBACjC;gBAED,IAAI,CAAC,CAAC,CAAiB,IAAI,CAAC,MAAM,CAAC,CAAC;YACrC,CAAC,CAAC,EACF,IAAA,eAAG,EAAU,GAAG,EAAE,CAAC,oBAAoB,EAAE,OAAO,EAAE,CAAC,CACnD,CAAC,CAAC;YACH,OAAO,MAAM,CAAC;QACf,CAAC;QAES,CAAC,CAAuB,GAAW,EAAE,MAA6C;YAC3F,IAAI,CAAC,CAAC,CAAe,GAAG,CAAC,GAAG,CAAC,CAAC;YAE9B,CAAC,KAAK,IAAI,EAAE;gBACX,IAAI;oBACH,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC;oBAE3B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAe,GAAG,CAAC,GAAG,CAAC,EAAE;wBACnC,oDAAoD;wBACpD,OAAO;qBACP;oBAED,IAAI,KAAK,YAAY,0BAAI,EAAuB;wBAC/C,MAAM,KAAK,CAAC,UAAU,EAAE,CAAC;qBACzB;oBAED,IAAI,CAAC,IAAI,CAAC,CAAC,CAAe,GAAG,CAAC,GAAG,CAAC,EAAE;wBACnC,oDAAoD;wBACpD,OAAO;qBACP;oBAED,mCAAmC;oBACnC,IAAI,CAAC,CAAC,CAAc,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC;oBAC1C,IAAI,CAAC,CAAC,CAAc,MAAM,CAAC,KAAK,CAAC,CAAC;oBAClC,KAAK,CAAC,OAAO,EAAE,CAAC;iBAChB;gBAAC,OAAO,GAAG,EAAE;oBACb,IAAI,CAAC,CAAC,CAAW,KAAK,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAC;iBAC1D;wBAAS;oBACT,IAAI,CAAC,CAAC,CAAe,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,4BAA4B;iBAC9D;YACF,CAAC,CAAC,EAAE,CAAC;QACN,CAAC;KACD,CAAA;IArHK,gCAAgC;QAgBnC,WAAA,mBAAG,CAAA;QACH,WAAA,sBAAI,CAAA;QACJ,WAAA,SAAG,CAAA;QACH,WAAA,mBAAG,CAAA;OAnBA,gCAAgC,CAqHrC;IAEM,IAAM,IAAI,GAAV,MAAM,IAAI;QAYhB,YACwB,oBAAyB,EAC9B,CAAuC,EACtC,CAAuC,EACrC,CAAsC;YAFxB,MAAC,GAAD,CAAC,CAAqB;YACrB,MAAC,GAAD,CAAC,CAAqB;YACpB,MAAC,GAAD,CAAC,CAAoB;YAP3C,MAAC,GAAyB,IAAI,WAAG,EAAmC,CAAC;YAC7E,2BAAsB,GAAG,IAAI,CAAC,CAAC,CAAuB,KAAK,CAAC;YAQpE,IAAI,CAAC,CAAC,GAAO,oBAAoB,CAAC,cAAc,CAAC,gCAAgC,CAAC,CAAC;YACnF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAAK,iBAAiB,CAAC;YACtD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAK,gBAAgB,CAAC;QACrD,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAK,OAAO,EAAE,CAAC;QACtB,CAAC;QAED,OAAO,CAAC,QAAa;YACpB,OAAO,IAAI,CAAC,CAAC,CAAK,OAAO,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC;QAID,KAAK,CAAC,OAAO,CAAC,IAAqC,EAAE,QAAiB;YACrE,IAAI,QAAa,CAAC;YAClB,IAAI,qBAAqB,GAAG,KAAK,CAAC;YAClC,IAAI,SAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBACpB,QAAQ,GAAG,IAAI,CAAC;aAChB;iBAAM;gBACN,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;oBAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAgB,0BAA0B,CAAC,IAAA,WAAG,EAAa,QAAQ,CAAC,CAAC,CAAC;oBACzF,IAAI,CAAC,IAAI,EAAE;wBACV,MAAM,IAAI,KAAK,CAAC,qBAAqB,GAAG,QAAQ,CAAC,CAAC;qBAClD;oBAED,MAAM,MAAM,GAAG,uBAAI,CAAiB,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;oBAC7E,KAAK,IAAI,OAAO,GAAG,CAAC,GAAI,OAAO,EAAE,EAAE;wBAClC,MAAM,SAAS,GAAG,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,iBAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,YAAY,OAAO,GAAG,MAAM,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;wBAChH,IAAI,CAAC,IAAI,CAAC,CAAC,CAAgB,oBAAoB,CAAC,SAAS,CAAC,EAAE;4BAC3D,QAAQ,GAAG,SAAS,CAAC;4BACrB,MAAM;yBACN;qBACD;iBACD;qBAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,iBAAO,CAAC,QAAQ,EAAE;oBAC7D,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC;iBACjC;qBAAM;oBACN,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,iBAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACpE,qBAAqB,GAAG,IAAI,CAAC;iBAC7B;aACD;YAED,IAAI,QAAQ,CAAC,MAAM,KAAK,wBAAO,CAAC,MAAM,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,kDAAkD,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;aACzF;YAED,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAgB,cAAc,CAAC,QAAQ,CAAC,CAAC;YAE1D,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAgB,oBAAoB,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC;YACxF,IAAI,CAAC,QAAQ,EAAE;gBACd,IAAI,gBAAgB,EAAE;oBACrB,QAAQ,GAAG,gBAAgB,CAAC;iBAC5B;qBAAM;oBACN,MAAM,IAAI,CAAC,CAAC,CAAiB,iCAAiC,EAAE,CAAC;oBACjE,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAgB,2BAA2B,CAAC,QAAQ,CAAC,CAAC;oBAC9E,MAAM,iBAAiB,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;oBACzE,QAAQ,GAAG,iBAAiB,EAAE,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;iBACrD;aACD;YAED,IAAI,CAAC,QAAQ,EAAE;gBACd,MAAM,IAAI,KAAK,CAAC,yBAAyB,QAAQ,GAAG,CAAC,CAAC;aACtD;YAED,IAAI,gBAAgB,IAAI,gBAAgB,KAAK,QAAQ,EAAE;gBAEtD,MAAM,IAAI,CAAC,CAAC,CAAuB,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;gBAE7F,iDAAiD;gBACjD,MAAM,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAAgB,oBAAoB,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC;gBACzF,IAAI,iBAAiB,IAAI,iBAAiB,KAAK,QAAQ,EAAE;oBACxD,MAAM,IAAI,KAAK,CAAC,8BAA8B,iBAAiB,yBAAyB,QAAQ,oDAAoD,QAAQ,EAAE,CAAC,CAAC;iBAChK;aACD;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAK,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,qBAAqB,CAAC,CAAC;YAC3F,IAAI;gBACH,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC;gBACrC,OAAO;oBACN,MAAM,EAAE,KAAK;oBACb,OAAO,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAClC,CAAC;aACF;YAAC,OAAO,GAAG,EAAE;gBACb,SAAS,CAAC,OAAO,EAAE,CAAC;gBACpB,MAAM,GAAG,CAAC;aACV;QACF,CAAC;KACD,CAAA;IA1GY,oBAAI;mBAAJ,IAAI;QAad,WAAA,mBAAG,CAAA;QACH,WAAA,sBAAI,CAAA;QACJ,WAAA,gBAAG,CAAA;QACH,WAAA,iBAAG,CAAA;OAhBO,IAAI,CA0GhB","file":"notebookEditorModelResolverServiceImpl.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { CellUri, IResolvedNotebookEditorModel, NotebookWorkingCopyTypeIdentifier } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { NotebookFileWorkingCopyModel, NotebookFileWorkingCopyModelFactory, SimpleNotebookEditorModel } from 'vs/workbench/contrib/notebook/common/notebookEditorModel';\nimport { combinedDisposable, DisposableStore, dispose, IDisposable, IReference, ReferenceCollection, toDisposable } from 'vs/base/common/lifecycle';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { AsyncEmitter, Emitter, Event } from 'vs/base/common/event';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { INotebookConflictEvent, INotebookEditorModelResolverService, IUntitledNotebookResource } from 'vs/workbench/contrib/notebook/common/notebookEditorModelResolverService';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { FileWorkingCopyManager, IFileWorkingCopyManager } from 'vs/workbench/services/workingCopy/common/fileWorkingCopyManager';\nimport { Schemas } from 'vs/base/common/network';\nimport { NotebookProviderInfo } from 'vs/workbench/contrib/notebook/common/notebookProvider';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\n\nclass NotebookModelReferenceCollection extends ReferenceCollection<Promise<IResolvedNotebookEditorModel>> {\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _workingCopyManagers = new Map<string, IFileWorkingCopyManager<NotebookFileWorkingCopyModel, NotebookFileWorkingCopyModel>>();\n\tprivate readonly _modelListener = new Map<IResolvedNotebookEditorModel, IDisposable>();\n\n\tprivate readonly _onDidSaveNotebook = new Emitter<URI>();\n\treadonly onDidSaveNotebook: Event<URI> = this._onDidSaveNotebook.event;\n\n\tprivate readonly _onDidChangeDirty = new Emitter<IResolvedNotebookEditorModel>();\n\treadonly onDidChangeDirty: Event<IResolvedNotebookEditorModel> = this._onDidChangeDirty.event;\n\n\tprivate readonly _dirtyStates = new ResourceMap<boolean>();\n\n\tprivate readonly modelsToDispose = new Set<string>();\n\tconstructor(\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._onDidSaveNotebook.dispose();\n\t\tthis._onDidChangeDirty.dispose();\n\t\tdispose(this._modelListener.values());\n\t\tdispose(this._workingCopyManagers.values());\n\t}\n\n\tisDirty(resource: URI): boolean {\n\t\treturn this._dirtyStates.get(resource) ?? false;\n\t}\n\n\tprotected async createReferencedObject(key: string, viewType: string, hasAssociatedFilePath: boolean): Promise<IResolvedNotebookEditorModel> {\n\t\t// Untrack as being disposed\n\t\tthis.modelsToDispose.delete(key);\n\n\t\tconst uri = URI.parse(key);\n\n\t\tconst workingCopyTypeId = NotebookWorkingCopyTypeIdentifier.create(viewType);\n\t\tlet workingCopyManager = this._workingCopyManagers.get(workingCopyTypeId);\n\t\tif (!workingCopyManager) {\n\t\t\tconst factory = new NotebookFileWorkingCopyModelFactory(viewType, this._notebookService, this._configurationService);\n\t\t\tworkingCopyManager = <IFileWorkingCopyManager<NotebookFileWorkingCopyModel, NotebookFileWorkingCopyModel>><any>this._instantiationService.createInstance(\n\t\t\t\tFileWorkingCopyManager,\n\t\t\t\tworkingCopyTypeId,\n\t\t\t\tfactory,\n\t\t\t\tfactory,\n\t\t\t);\n\t\t\tthis._workingCopyManagers.set(workingCopyTypeId, workingCopyManager);\n\t\t}\n\t\tconst model = this._instantiationService.createInstance(SimpleNotebookEditorModel, uri, hasAssociatedFilePath, viewType, workingCopyManager);\n\t\tconst result = await model.load();\n\n\n\t\t// Whenever a notebook model is dirty we automatically reference it so that\n\t\t// we can ensure that at least one reference exists. That guarantees that\n\t\t// a model with unsaved changes is never disposed.\n\t\tlet onDirtyAutoReference: IReference<any> | undefined;\n\n\t\tthis._modelListener.set(result, combinedDisposable(\n\t\t\tresult.onDidSave(() => this._onDidSaveNotebook.fire(result.resource)),\n\t\t\tresult.onDidChangeDirty(() => {\n\t\t\t\tconst isDirty = result.isDirty();\n\t\t\t\tthis._dirtyStates.set(result.resource, isDirty);\n\n\t\t\t\t// isDirty -> add reference\n\t\t\t\t// !isDirty -> free reference\n\t\t\t\tif (isDirty && !onDirtyAutoReference) {\n\t\t\t\t\tonDirtyAutoReference = this.acquire(key, viewType);\n\t\t\t\t} else if (onDirtyAutoReference) {\n\t\t\t\t\tonDirtyAutoReference.dispose();\n\t\t\t\t\tonDirtyAutoReference = undefined;\n\t\t\t\t}\n\n\t\t\t\tthis._onDidChangeDirty.fire(result);\n\t\t\t}),\n\t\t\ttoDisposable(() => onDirtyAutoReference?.dispose()),\n\t\t));\n\t\treturn result;\n\t}\n\n\tprotected destroyReferencedObject(key: string, object: Promise<IResolvedNotebookEditorModel>): void {\n\t\tthis.modelsToDispose.add(key);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst model = await object;\n\n\t\t\t\tif (!this.modelsToDispose.has(key)) {\n\t\t\t\t\t// return if model has been acquired again meanwhile\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (model instanceof SimpleNotebookEditorModel) {\n\t\t\t\t\tawait model.canDispose();\n\t\t\t\t}\n\n\t\t\t\tif (!this.modelsToDispose.has(key)) {\n\t\t\t\t\t// return if model has been acquired again meanwhile\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Finally we can dispose the model\n\t\t\t\tthis._modelListener.get(model)?.dispose();\n\t\t\t\tthis._modelListener.delete(model);\n\t\t\t\tmodel.dispose();\n\t\t\t} catch (err) {\n\t\t\t\tthis._logService.error('FAILED to destory notebook', err);\n\t\t\t} finally {\n\t\t\t\tthis.modelsToDispose.delete(key); // Untrack as being disposed\n\t\t\t}\n\t\t})();\n\t}\n}\n\nexport class NotebookModelResolverServiceImpl implements INotebookEditorModelResolverService {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _data: NotebookModelReferenceCollection;\n\n\treadonly onDidSaveNotebook: Event<URI>;\n\treadonly onDidChangeDirty: Event<IResolvedNotebookEditorModel>;\n\n\tprivate readonly _onWillFailWithConflict = new AsyncEmitter<INotebookConflictEvent>();\n\treadonly onWillFailWithConflict = this._onWillFailWithConflict.event;\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IUriIdentityService private readonly _uriIdentService: IUriIdentityService,\n\t) {\n\t\tthis._data = instantiationService.createInstance(NotebookModelReferenceCollection);\n\t\tthis.onDidSaveNotebook = this._data.onDidSaveNotebook;\n\t\tthis.onDidChangeDirty = this._data.onDidChangeDirty;\n\t}\n\n\tdispose() {\n\t\tthis._data.dispose();\n\t}\n\n\tisDirty(resource: URI): boolean {\n\t\treturn this._data.isDirty(resource);\n\t}\n\n\tasync resolve(resource: URI, viewType?: string): Promise<IReference<IResolvedNotebookEditorModel>>;\n\tasync resolve(resource: IUntitledNotebookResource, viewType: string): Promise<IReference<IResolvedNotebookEditorModel>>;\n\tasync resolve(arg0: URI | IUntitledNotebookResource, viewType?: string): Promise<IReference<IResolvedNotebookEditorModel>> {\n\t\tlet resource: URI;\n\t\tlet hasAssociatedFilePath = false;\n\t\tif (URI.isUri(arg0)) {\n\t\t\tresource = arg0;\n\t\t} else {\n\t\t\tif (!arg0.untitledResource) {\n\t\t\t\tconst info = this._notebookService.getContributedNotebookType(assertIsDefined(viewType));\n\t\t\t\tif (!info) {\n\t\t\t\t\tthrow new Error('UNKNOWN view type: ' + viewType);\n\t\t\t\t}\n\n\t\t\t\tconst suffix = NotebookProviderInfo.possibleFileEnding(info.selectors) ?? '';\n\t\t\t\tfor (let counter = 1; ; counter++) {\n\t\t\t\t\tconst candidate = URI.from({ scheme: Schemas.untitled, path: `Untitled-${counter}${suffix}`, query: viewType });\n\t\t\t\t\tif (!this._notebookService.getNotebookTextModel(candidate)) {\n\t\t\t\t\t\tresource = candidate;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (arg0.untitledResource.scheme === Schemas.untitled) {\n\t\t\t\tresource = arg0.untitledResource;\n\t\t\t} else {\n\t\t\t\tresource = arg0.untitledResource.with({ scheme: Schemas.untitled });\n\t\t\t\thasAssociatedFilePath = true;\n\t\t\t}\n\t\t}\n\n\t\tif (resource.scheme === CellUri.scheme) {\n\t\t\tthrow new Error(`CANNOT open a cell-uri as notebook. Tried with ${resource.toString()}`);\n\t\t}\n\n\t\tresource = this._uriIdentService.asCanonicalUri(resource);\n\n\t\tconst existingViewType = this._notebookService.getNotebookTextModel(resource)?.viewType;\n\t\tif (!viewType) {\n\t\t\tif (existingViewType) {\n\t\t\t\tviewType = existingViewType;\n\t\t\t} else {\n\t\t\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\t\t\t\tconst providers = this._notebookService.getContributedNotebookTypes(resource);\n\t\t\t\tconst exclusiveProvider = providers.find(provider => provider.exclusive);\n\t\t\t\tviewType = exclusiveProvider?.id || providers[0]?.id;\n\t\t\t}\n\t\t}\n\n\t\tif (!viewType) {\n\t\t\tthrow new Error(`Missing viewType for '${resource}'`);\n\t\t}\n\n\t\tif (existingViewType && existingViewType !== viewType) {\n\n\t\t\tawait this._onWillFailWithConflict.fireAsync({ resource, viewType }, CancellationToken.None);\n\n\t\t\t// check again, listener should have done cleanup\n\t\t\tconst existingViewType2 = this._notebookService.getNotebookTextModel(resource)?.viewType;\n\t\t\tif (existingViewType2 && existingViewType2 !== viewType) {\n\t\t\t\tthrow new Error(`A notebook with view type '${existingViewType2}' already exists for '${resource}', CANNOT create another notebook with view type ${viewType}`);\n\t\t\t}\n\t\t}\n\n\t\tconst reference = this._data.acquire(resource.toString(), viewType, hasAssociatedFilePath);\n\t\ttry {\n\t\t\tconst model = await reference.object;\n\t\t\treturn {\n\t\t\t\tobject: model,\n\t\t\t\tdispose() { reference.dispose(); }\n\t\t\t};\n\t\t} catch (err) {\n\t\t\treference.dispose();\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n"]}