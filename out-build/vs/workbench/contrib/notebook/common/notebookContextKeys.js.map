{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/common/notebookContextKeys.ts"],"names":[],"mappings":"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","file":"notebookContextKeys.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ContextKeyExpr, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { INTERACTIVE_WINDOW_EDITOR_ID, NOTEBOOK_EDITOR_ID } from 'vs/workbench/contrib/notebook/common/notebookCommon';\n\n\n\n//#region Context Keys\nexport const HAS_OPENED_NOTEBOOK = new RawContextKey<boolean>('userHasOpenedNotebook', false);\nexport const KEYBINDING_CONTEXT_NOTEBOOK_FIND_WIDGET_FOCUSED = new RawContextKey<boolean>('notebookFindWidgetFocused', false);\nexport const InteractiveWindowOpen = new RawContextKey<boolean>('interactiveWindowOpen', false);\n\n// Is Notebook\nexport const NOTEBOOK_IS_ACTIVE_EDITOR = ContextKeyExpr.equals('activeEditor', NOTEBOOK_EDITOR_ID);\nexport const INTERACTIVE_WINDOW_IS_ACTIVE_EDITOR = ContextKeyExpr.equals('activeEditor', INTERACTIVE_WINDOW_EDITOR_ID);\n\n// Editor keys\nexport const NOTEBOOK_EDITOR_FOCUSED = new RawContextKey<boolean>('notebookEditorFocused', false);\nexport const NOTEBOOK_CELL_LIST_FOCUSED = new RawContextKey<boolean>('notebookCellListFocused', false);\nexport const NOTEBOOK_OUTPUT_FOCUSED = new RawContextKey<boolean>('notebookOutputFocused', false);\nexport const NOTEBOOK_OUPTUT_INPUT_FOCUSED = new RawContextKey<boolean>('notebookOutputInputFocused', false);\nexport const NOTEBOOK_EDITOR_EDITABLE = new RawContextKey<boolean>('notebookEditable', true);\nexport const NOTEBOOK_HAS_RUNNING_CELL = new RawContextKey<boolean>('notebookHasRunningCell', false);\nexport const NOTEBOOK_HAS_SOMETHING_RUNNING = new RawContextKey<boolean>('notebookHasSomethingRunning', false);\nexport const NOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON = new RawContextKey<boolean>('notebookUseConsolidatedOutputButton', false);\nexport const NOTEBOOK_BREAKPOINT_MARGIN_ACTIVE = new RawContextKey<boolean>('notebookBreakpointMargin', false);\nexport const NOTEBOOK_CELL_TOOLBAR_LOCATION = new RawContextKey<'left' | 'right' | 'hidden'>('notebookCellToolbarLocation', 'left');\nexport const NOTEBOOK_CURSOR_NAVIGATION_MODE = new RawContextKey<boolean>('notebookCursorNavigationMode', false);\nexport const NOTEBOOK_LAST_CELL_FAILED = new RawContextKey<boolean>('notebookLastCellFailed', false);\n\n// Cell keys\nexport const NOTEBOOK_VIEW_TYPE = new RawContextKey<string>('notebookType', undefined);\nexport const NOTEBOOK_CELL_TYPE = new RawContextKey<'code' | 'markup'>('notebookCellType', undefined);\nexport const NOTEBOOK_CELL_EDITABLE = new RawContextKey<boolean>('notebookCellEditable', false);\nexport const NOTEBOOK_CELL_FOCUSED = new RawContextKey<boolean>('notebookCellFocused', false);\nexport const NOTEBOOK_CELL_EDITOR_FOCUSED = new RawContextKey<boolean>('notebookCellEditorFocused', false);\nexport const NOTEBOOK_CELL_MARKDOWN_EDIT_MODE = new RawContextKey<boolean>('notebookCellMarkdownEditMode', false);\nexport const NOTEBOOK_CELL_LINE_NUMBERS = new RawContextKey<'on' | 'off' | 'inherit'>('notebookCellLineNumbers', 'inherit');\nexport type NotebookCellExecutionStateContext = 'idle' | 'pending' | 'executing' | 'succeeded' | 'failed';\nexport const NOTEBOOK_CELL_EXECUTION_STATE = new RawContextKey<NotebookCellExecutionStateContext>('notebookCellExecutionState', undefined);\nexport const NOTEBOOK_CELL_EXECUTING = new RawContextKey<boolean>('notebookCellExecuting', false); // This only exists to simplify a context key expression, see #129625\nexport const NOTEBOOK_CELL_HAS_OUTPUTS = new RawContextKey<boolean>('notebookCellHasOutputs', false);\nexport const NOTEBOOK_CELL_INPUT_COLLAPSED = new RawContextKey<boolean>('notebookCellInputIsCollapsed', false);\nexport const NOTEBOOK_CELL_OUTPUT_COLLAPSED = new RawContextKey<boolean>('notebookCellOutputIsCollapsed', false);\nexport const NOTEBOOK_CELL_RESOURCE = new RawContextKey<string>('notebookCellResource', '');\n\n// Kernels\nexport const NOTEBOOK_KERNEL = new RawContextKey<string>('notebookKernel', undefined);\nexport const NOTEBOOK_KERNEL_COUNT = new RawContextKey<number>('notebookKernelCount', 0);\nexport const NOTEBOOK_KERNEL_SOURCE_COUNT = new RawContextKey<number>('notebookKernelSourceCount', 0);\nexport const NOTEBOOK_KERNEL_SELECTED = new RawContextKey<boolean>('notebookKernelSelected', false);\nexport const NOTEBOOK_INTERRUPTIBLE_KERNEL = new RawContextKey<boolean>('notebookInterruptibleKernel', false);\nexport const NOTEBOOK_MISSING_KERNEL_EXTENSION = new RawContextKey<boolean>('notebookMissingKernelExtension', false);\nexport const NOTEBOOK_HAS_OUTPUTS = new RawContextKey<boolean>('notebookHasOutputs', false);\n\n//#endregion\n"]}