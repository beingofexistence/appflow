{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/notebook/common/notebookDiffEditorInput.ts"],"names":[],"mappings":"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","file":"notebookDiffEditorInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IResourceDiffEditorInput, IResourceSideBySideEditorInput, isResourceDiffEditorInput, IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { EditorModel } from 'vs/workbench/common/editor/editorModel';\nimport { URI } from 'vs/base/common/uri';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { INotebookDiffEditorModel, IResolvedNotebookEditorModel } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { NotebookEditorInput } from 'vs/workbench/contrib/notebook/common/notebookEditorInput';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\n\nclass NotebookDiffEditorModel extends EditorModel implements INotebookDiffEditorModel {\n\tconstructor(\n\t\treadonly original: IResolvedNotebookEditorModel,\n\t\treadonly modified: IResolvedNotebookEditorModel,\n\t) {\n\t\tsuper();\n\t}\n}\n\nexport class NotebookDiffEditorInput extends DiffEditorInput {\n\tstatic create(instantiationService: IInstantiationService, resource: URI, name: string | undefined, description: string | undefined, originalResource: URI, viewType: string) {\n\t\tconst original = NotebookEditorInput.create(instantiationService, originalResource, viewType);\n\t\tconst modified = NotebookEditorInput.create(instantiationService, resource, viewType);\n\t\treturn instantiationService.createInstance(NotebookDiffEditorInput, name, description, original, modified, viewType);\n\t}\n\n\tstatic override readonly ID: string = 'workbench.input.diffNotebookInput';\n\n\tprivate _modifiedTextModel: IResolvedNotebookEditorModel | null = null;\n\tprivate _originalTextModel: IResolvedNotebookEditorModel | null = null;\n\n\toverride get resource() {\n\t\treturn this.modified.resource;\n\t}\n\n\toverride get editorId() {\n\t\treturn this.viewType;\n\t}\n\n\tprivate _cachedModel: NotebookDiffEditorModel | undefined = undefined;\n\n\tconstructor(\n\t\tname: string | undefined,\n\t\tdescription: string | undefined,\n\t\toverride readonly original: NotebookEditorInput,\n\t\toverride readonly modified: NotebookEditorInput,\n\t\tpublic readonly viewType: string,\n\t\t@IEditorService editorService: IEditorService\n\t) {\n\t\tsuper(\n\t\t\tname,\n\t\t\tdescription,\n\t\t\toriginal,\n\t\t\tmodified,\n\t\t\tundefined,\n\t\t\teditorService\n\t\t);\n\t}\n\n\toverride get typeId(): string {\n\t\treturn NotebookDiffEditorInput.ID;\n\t}\n\n\toverride async resolve(): Promise<NotebookDiffEditorModel> {\n\t\tconst [originalEditorModel, modifiedEditorModel] = await Promise.all([\n\t\t\tthis.original.resolve(),\n\t\t\tthis.modified.resolve(),\n\t\t]);\n\n\t\tthis._cachedModel?.dispose();\n\n\t\t// TODO@rebornix check how we restore the editor in text diff editor\n\t\tif (!modifiedEditorModel) {\n\t\t\tthrow new Error(`Fail to resolve modified editor model for resource ${this.modified.resource} with notebookType ${this.viewType}`);\n\t\t}\n\n\t\tif (!originalEditorModel) {\n\t\t\tthrow new Error(`Fail to resolve original editor model for resource ${this.original.resource} with notebookType ${this.viewType}`);\n\t\t}\n\n\t\tthis._originalTextModel = originalEditorModel;\n\t\tthis._modifiedTextModel = modifiedEditorModel;\n\t\tthis._cachedModel = new NotebookDiffEditorModel(this._originalTextModel, this._modifiedTextModel);\n\t\treturn this._cachedModel;\n\t}\n\n\toverride toUntyped(): IResourceDiffEditorInput & IResourceSideBySideEditorInput {\n\t\tconst original = { resource: this.original.resource };\n\t\tconst modified = { resource: this.resource };\n\t\treturn {\n\t\t\toriginal,\n\t\t\tmodified,\n\t\t\tprimary: modified,\n\t\t\tsecondary: original,\n\t\t\toptions: {\n\t\t\t\toverride: this.viewType\n\t\t\t}\n\t\t};\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (this === otherInput) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof NotebookDiffEditorInput) {\n\t\t\treturn this.modified.matches(otherInput.modified)\n\t\t\t\t&& this.original.matches(otherInput.original)\n\t\t\t\t&& this.viewType === otherInput.viewType;\n\t\t}\n\n\t\tif (isResourceDiffEditorInput(otherInput)) {\n\t\t\treturn this.modified.matches(otherInput.modified)\n\t\t\t\t&& this.original.matches(otherInput.original)\n\t\t\t\t&& this.editorId !== undefined\n\t\t\t\t&& (this.editorId === otherInput.options?.override || otherInput.options?.override === undefined);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis._cachedModel?.dispose();\n\t\tthis._cachedModel = undefined;\n\t\tthis.original.dispose();\n\t\tthis.modified.dispose();\n\t\tthis._originalTextModel = null;\n\t\tthis._modifiedTextModel = null;\n\t}\n}\n"]}