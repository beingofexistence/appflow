{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/preferences/common/preferences.ts"],"names":[],"mappings":"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","file":"preferences.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { IExtensionRecommendations } from 'vs/base/common/product';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IWorkbenchAssignmentService } from 'vs/workbench/services/assignment/common/assignmentService';\nimport { ISearchResult, ISettingsEditorModel } from 'vs/workbench/services/preferences/common/preferences';\n\nexport interface IWorkbenchSettingsConfiguration {\n\tworkbench: {\n\t\tsettings: {\n\t\t\topenDefaultSettings: boolean;\n\t\t\tnaturalLanguageSearchEndpoint: string;\n\t\t\tnaturalLanguageSearchKey: string;\n\t\t\tnaturalLanguageSearchAutoIngestFeedback: boolean;\n\t\t\tuseNaturalLanguageSearchPost: boolean;\n\t\t\tenableNaturalLanguageSearch: boolean;\n\t\t\tenableNaturalLanguageSearchFeedback: boolean;\n\t\t};\n\t};\n}\n\nexport interface IEndpointDetails {\n\turlBase: string;\n\tkey?: string;\n}\n\nexport const IPreferencesSearchService = createDecorator<IPreferencesSearchService>('preferencesSearchService');\n\nexport interface IPreferencesSearchService {\n\treadonly _serviceBrand: undefined;\n\n\tgetLocalSearchProvider(filter: string): ISearchProvider;\n\tgetRemoteSearchProvider(filter: string, newExtensionsOnly?: boolean): ISearchProvider | undefined;\n}\n\nexport interface ISearchProvider {\n\tsearchModel(preferencesModel: ISettingsEditorModel, token?: CancellationToken): Promise<ISearchResult | null>;\n}\n\nexport const SETTINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS = 'settings.action.clearSearchResults';\nexport const SETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU = 'settings.action.showContextMenu';\nexport const SETTINGS_EDITOR_COMMAND_SUGGEST_FILTERS = 'settings.action.suggestFilters';\n\nexport const CONTEXT_SETTINGS_EDITOR = new RawContextKey<boolean>('inSettingsEditor', false);\nexport const CONTEXT_SETTINGS_JSON_EDITOR = new RawContextKey<boolean>('inSettingsJSONEditor', false);\nexport const CONTEXT_SETTINGS_SEARCH_FOCUS = new RawContextKey<boolean>('inSettingsSearch', false);\nexport const CONTEXT_TOC_ROW_FOCUS = new RawContextKey<boolean>('settingsTocRowFocus', false);\nexport const CONTEXT_SETTINGS_ROW_FOCUS = new RawContextKey<boolean>('settingRowFocus', false);\nexport const CONTEXT_KEYBINDINGS_EDITOR = new RawContextKey<boolean>('inKeybindings', false);\nexport const CONTEXT_KEYBINDINGS_SEARCH_FOCUS = new RawContextKey<boolean>('inKeybindingsSearch', false);\nexport const CONTEXT_KEYBINDING_FOCUS = new RawContextKey<boolean>('keybindingFocus', false);\nexport const CONTEXT_WHEN_FOCUS = new RawContextKey<boolean>('whenFocus', false);\n\nexport const KEYBINDINGS_EDITOR_COMMAND_SEARCH = 'keybindings.editor.searchKeybindings';\nexport const KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS = 'keybindings.editor.clearSearchResults';\nexport const KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_HISTORY = 'keybindings.editor.clearSearchHistory';\nexport const KEYBINDINGS_EDITOR_COMMAND_RECORD_SEARCH_KEYS = 'keybindings.editor.recordSearchKeys';\nexport const KEYBINDINGS_EDITOR_COMMAND_SORTBY_PRECEDENCE = 'keybindings.editor.toggleSortByPrecedence';\nexport const KEYBINDINGS_EDITOR_COMMAND_DEFINE = 'keybindings.editor.defineKeybinding';\nexport const KEYBINDINGS_EDITOR_COMMAND_ADD = 'keybindings.editor.addKeybinding';\nexport const KEYBINDINGS_EDITOR_COMMAND_DEFINE_WHEN = 'keybindings.editor.defineWhenExpression';\nexport const KEYBINDINGS_EDITOR_COMMAND_ACCEPT_WHEN = 'keybindings.editor.acceptWhenExpression';\nexport const KEYBINDINGS_EDITOR_COMMAND_REJECT_WHEN = 'keybindings.editor.rejectWhenExpression';\nexport const KEYBINDINGS_EDITOR_COMMAND_REMOVE = 'keybindings.editor.removeKeybinding';\nexport const KEYBINDINGS_EDITOR_COMMAND_RESET = 'keybindings.editor.resetKeybinding';\nexport const KEYBINDINGS_EDITOR_COMMAND_COPY = 'keybindings.editor.copyKeybindingEntry';\nexport const KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND = 'keybindings.editor.copyCommandKeybindingEntry';\nexport const KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND_TITLE = 'keybindings.editor.copyCommandTitle';\nexport const KEYBINDINGS_EDITOR_COMMAND_SHOW_SIMILAR = 'keybindings.editor.showConflicts';\nexport const KEYBINDINGS_EDITOR_COMMAND_FOCUS_KEYBINDINGS = 'keybindings.editor.focusKeybindings';\nexport const KEYBINDINGS_EDITOR_SHOW_DEFAULT_KEYBINDINGS = 'keybindings.editor.showDefaultKeybindings';\nexport const KEYBINDINGS_EDITOR_SHOW_USER_KEYBINDINGS = 'keybindings.editor.showUserKeybindings';\nexport const KEYBINDINGS_EDITOR_SHOW_EXTENSION_KEYBINDINGS = 'keybindings.editor.showExtensionKeybindings';\n\nexport const MODIFIED_SETTING_TAG = 'modified';\nexport const EXTENSION_SETTING_TAG = 'ext:';\nexport const FEATURE_SETTING_TAG = 'feature:';\nexport const ID_SETTING_TAG = 'id:';\nexport const LANGUAGE_SETTING_TAG = 'lang:';\nexport const GENERAL_TAG_SETTING_TAG = 'tag:';\nexport const POLICY_SETTING_TAG = 'hasPolicy';\nexport const WORKSPACE_TRUST_SETTING_TAG = 'workspaceTrust';\nexport const REQUIRE_TRUSTED_WORKSPACE_SETTING_TAG = 'requireTrustedWorkspace';\nexport const KEYBOARD_LAYOUT_OPEN_PICKER = 'workbench.action.openKeyboardLayoutPicker';\n\nexport const ENABLE_LANGUAGE_FILTER = true;\n\nexport const ENABLE_EXTENSION_TOGGLE_SETTINGS = true;\n\ntype ExtensionToggleData = {\n\tsettingsEditorRecommendedExtensions: IStringDictionary<IExtensionRecommendations>;\n\tcommonlyUsed: string[];\n};\n\nlet cachedExtensionToggleData: ExtensionToggleData | undefined;\n\nexport async function getExperimentalExtensionToggleData(workbenchAssignmentService: IWorkbenchAssignmentService, environmentService: IEnvironmentService, productService: IProductService): Promise<ExtensionToggleData | undefined> {\n\tif (!ENABLE_EXTENSION_TOGGLE_SETTINGS) {\n\t\treturn undefined;\n\t}\n\n\tif (cachedExtensionToggleData) {\n\t\treturn cachedExtensionToggleData;\n\t}\n\n\tconst isTreatment = await workbenchAssignmentService.getTreatment<boolean>('ExtensionToggleSettings');\n\tif ((isTreatment || !environmentService.isBuilt) && productService.extensionRecommendations && productService.commonlyUsedSettings) {\n\t\tconst settingsEditorRecommendedExtensions: Record<string, IExtensionRecommendations> = {};\n\t\tObject.keys(productService.extensionRecommendations).forEach(extensionId => {\n\t\t\tconst extensionInfo = productService.extensionRecommendations![extensionId];\n\t\t\tif (extensionInfo.onSettingsEditorOpen) {\n\t\t\t\tsettingsEditorRecommendedExtensions[extensionId] = extensionInfo;\n\t\t\t}\n\t\t});\n\t\tcachedExtensionToggleData = {\n\t\t\tsettingsEditorRecommendedExtensions,\n\t\t\tcommonlyUsed: productService.commonlyUsedSettings\n\t\t};\n\t\treturn cachedExtensionToggleData;\n\t}\n\treturn undefined;\n}\n"]}