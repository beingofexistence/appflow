{"version":3,"sources":["vs/workbench/contrib/preferences/common/settingsEditorColorRegistry.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG,yBAAyB;IACZ,QAAA,IAAI,GAAuB,IAAA,mBAAG,EAAW,2BAA2B,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,IAAA,cAAQ,EAAC,CAAkB,EAAE,IAA4D,CAAC,CAAC,CAAC;IAChP,QAAA,IAAI,GAA4B,IAAA,mBAAG,EAAW,wCAAwC,EAAE,EAAE,KAAK,EAAE,IAAA,mBAAG,EAAS,YAAI,EAAsB,GAAG,CAAC,EAAE,IAAI,EAAE,IAAA,mBAAG,EAAS,YAAI,EAAsB,GAAG,CAAC,EAAE,MAAM,EAAE,IAAA,mBAAG,EAAS,YAAI,EAAsB,GAAG,CAAC,EAAE,OAAO,EAAE,IAAA,mBAAG,EAAS,YAAI,EAAsB,GAAG,CAAC,EAAE,EAAE,IAAA,cAAQ,EAAC,CAA+B,EAAE,IAA6D,CAAC,CAAC,CAAC;IACpZ,QAAA,IAAI,GAAoB,IAAA,mBAAG,EAAW,gCAAgC,EAAE;QACpF,KAAK,EAAE,IAAI,WAAG,CAAG,IAAI,WAAG,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACzC,IAAI,EAAE,IAAI,WAAG,CAAG,IAAI,WAAG,CAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACvC,MAAM,EAAE,IAAI,WAAG,CAAG,IAAI,WAAG,CAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QACvC,OAAO,EAAE,IAAI,WAAG,CAAG,IAAI,WAAG,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;KAC3C,EAAE,IAAA,cAAQ,EAAC,CAAwB,EAAE,IAA8C,CAAC,CAAC,CAAC;IAC1E,QAAA,IAAI,GAAmB,IAAA,mBAAG,EAAW,uBAAuB,EAAE,EAAE,IAAI,EAAE,WAAG,EAAW,KAAK,EAAE,WAAG,EAAW,MAAM,EAAE,WAAG,EAAW,OAAO,EAAE,WAAG,EAAW,EAAE,IAAA,cAAQ,EAAC,CAAsB,EAAE,IAA2C,CAAC,CAAC,CAAC;IACvO,QAAA,IAAI,GAAiB,IAAA,mBAAG,EAAW,qBAAqB,EAAE,EAAE,IAAI,EAAE,WAAG,EAAW,KAAK,EAAE,WAAG,EAAW,MAAM,EAAE,WAAG,EAAW,OAAO,EAAE,WAAG,EAAW,EAAE,IAAA,cAAQ,EAAC,CAAoB,EAAE,IAAyD,CAAC,CAAC,CAAC;IAE5P,sBAAsB;IACT,QAAA,IAAI,GAAuB,IAAA,mBAAG,EAAW,6BAA6B,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAe,KAAK,EAAE,mBAAG,EAAe,MAAM,EAAE,mBAAG,EAAe,OAAO,EAAE,mBAAG,EAAe,EAAE,IAAA,cAAQ,EAAC,CAA4B,EAAE,IAAsC,CAAC,CAAC,CAAC;IAClQ,QAAA,IAAI,GAAuB,IAAA,mBAAG,EAAW,6BAA6B,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAe,KAAK,EAAE,mBAAG,EAAe,MAAM,EAAE,mBAAG,EAAe,OAAO,EAAE,mBAAG,EAAe,EAAE,IAAA,cAAQ,EAAC,CAA4B,EAAE,IAAsC,CAAC,CAAC,CAAC;IAClQ,QAAA,IAAI,GAAmB,IAAA,mBAAG,EAAW,yBAAyB,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAW,KAAK,EAAE,mBAAG,EAAW,MAAM,EAAE,mBAAG,EAAW,OAAO,EAAE,mBAAG,EAAW,EAAE,IAAA,cAAQ,EAAC,CAAwB,EAAE,IAAkC,CAAC,CAAC,CAAC;IAClO,QAAA,IAAI,GAAuB,IAAA,mBAAG,EAAW,6BAA6B,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAiB,KAAK,EAAE,mBAAG,EAAiB,MAAM,EAAE,mBAAG,EAAiB,OAAO,EAAE,mBAAG,EAAiB,EAAE,IAAA,cAAQ,EAAC,CAA4B,EAAE,IAAkH,CAAC,CAAC,CAAC;IAEnW,sBAAsB;IACT,QAAA,IAAI,GAAyB,IAAA,mBAAG,EAAW,6BAA6B,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAiB,KAAK,EAAE,mBAAG,EAAiB,MAAM,EAAE,mBAAG,EAAiB,OAAO,EAAE,mBAAG,EAAiB,EAAE,IAAA,cAAQ,EAAC,CAA4B,EAAE,IAAsC,CAAC,CAAC,CAAC;IAC5Q,QAAA,IAAI,GAAyB,IAAA,mBAAG,EAAW,6BAA6B,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAiB,KAAK,EAAE,mBAAG,EAAiB,MAAM,EAAE,mBAAG,EAAiB,OAAO,EAAE,mBAAG,EAAiB,EAAE,IAAA,cAAQ,EAAC,EAA4B,EAAE,IAAsC,CAAC,CAAC,CAAC;IAC5Q,QAAA,IAAI,GAAqB,IAAA,mBAAG,EAAW,yBAAyB,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAa,KAAK,EAAE,mBAAG,EAAa,MAAM,EAAE,mBAAG,EAAa,OAAO,EAAE,mBAAG,EAAa,EAAE,IAAA,cAAQ,EAAC,EAAwB,EAAE,IAAkC,CAAC,CAAC,CAAC;IAEzP,sBAAsB;IACT,QAAA,IAAI,GAA0B,IAAA,mBAAG,EAAW,8BAA8B,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAc,KAAK,EAAE,mBAAG,EAAc,MAAM,EAAE,mBAAG,EAAc,OAAO,EAAE,mBAAG,EAAc,EAAE,IAAA,cAAQ,EAAC,EAAwB,EAAE,IAA4C,CAAC,CAAC,CAAC;IACpQ,QAAA,IAAI,GAA0B,IAAA,mBAAG,EAAW,8BAA8B,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAc,KAAK,EAAE,mBAAG,EAAc,MAAM,EAAE,mBAAG,EAAc,OAAO,EAAE,mBAAG,EAAc,EAAE,IAAA,cAAQ,EAAC,EAAwB,EAAE,IAA4C,CAAC,CAAC,CAAC;IACpQ,QAAA,IAAI,GAAsB,IAAA,mBAAG,EAAW,0BAA0B,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAU,KAAK,EAAE,mBAAG,EAAU,MAAM,EAAE,mBAAG,EAAU,OAAO,EAAE,mBAAG,EAAU,EAAE,IAAA,cAAQ,EAAC,EAAoB,EAAE,IAAwC,CAAC,CAAC,CAAC;IAEjP,wBAAwB;IACX,QAAA,IAAI,GAA4B,IAAA,mBAAG,EAAW,gCAAgC,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAc,KAAK,EAAE,mBAAG,EAAc,MAAM,EAAE,mBAAG,EAAc,OAAO,EAAE,mBAAG,EAAc,EAAE,IAAA,cAAQ,EAAC,EAA0B,EAAE,IAA8C,CAAC,CAAC,CAAC;IAC5Q,QAAA,IAAI,GAA4B,IAAA,mBAAG,EAAW,gCAAgC,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAc,KAAK,EAAE,mBAAG,EAAc,MAAM,EAAE,mBAAG,EAAc,OAAO,EAAE,mBAAG,EAAc,EAAE,IAAA,cAAQ,EAAC,EAA0B,EAAE,IAA8C,CAAC,CAAC,CAAC;IAC5Q,QAAA,IAAI,GAAwB,IAAA,mBAAG,EAAW,4BAA4B,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAU,KAAK,EAAE,mBAAG,EAAU,MAAM,EAAE,mBAAG,EAAU,OAAO,EAAE,mBAAG,EAAU,EAAE,IAAA,cAAQ,EAAC,EAAsB,EAAE,IAA0C,CAAC,CAAC,CAAC;IAE5O,QAAA,IAAI,GAAmB,IAAA,mBAAG,EAAW,+BAA+B,EAAE;QAClF,IAAI,EAAE,IAAA,mBAAG,EAAS,mBAAG,EAAkB,EAAE,CAAC;QAC1C,KAAK,EAAE,IAAA,mBAAG,EAAS,mBAAG,EAAkB,EAAE,CAAC;QAC3C,MAAM,EAAE,IAAI;QACZ,OAAO,EAAE,IAAI;KACb,EAAE,IAAA,cAAQ,EAAC,EAAsB,EAAE,IAAsD,CAAC,CAAC,CAAC;IAEhF,QAAA,IAAI,GAAiB,IAAA,mBAAG,EAAW,6BAA6B,EAAE;QAC9E,IAAI,EAAE,IAAA,mBAAG,EAAS,mBAAG,EAAkB,EAAE,CAAC;QAC1C,KAAK,EAAE,IAAA,mBAAG,EAAS,mBAAG,EAAkB,EAAE,CAAC;QAC3C,MAAM,EAAE,IAAI;QACZ,OAAO,EAAE,IAAI;KACb,EAAE,IAAA,cAAQ,EAAC,EAA6B,EAAE,IAAsD,CAAC,CAAC,CAAC;IAEvF,QAAA,IAAI,GAAe,IAAA,mBAAG,EAAW,2BAA2B,EAAE;QAC1E,IAAI,EAAE,mBAAG;QACT,KAAK,EAAE,mBAAG;QACV,MAAM,EAAE,mBAAG;QACX,OAAO,EAAE,mBAAG;KACZ,EAAE,IAAA,cAAQ,EAAC,EAA2B,EAAE,IAAuE,CAAC,CAAC,CAAC","file":"settingsEditorColorRegistry.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color, RGBA } from 'vs/base/common/color';\nimport { localize } from 'vs/nls';\nimport { editorWidgetBorder, focusBorder, inputBackground, inputBorder, inputForeground, listHoverBackground, registerColor, selectBackground, selectBorder, selectForeground, checkboxBackground, checkboxBorder, checkboxForeground, transparent } from 'vs/platform/theme/common/colorRegistry';\nimport { PANEL_BORDER } from 'vs/workbench/common/theme';\n\n// General setting colors\nexport const settingsHeaderForeground = registerColor('settings.headerForeground', { light: '#444444', dark: '#e7e7e7', hcDark: '#ffffff', hcLight: '#292929' }, localize('headerForeground', \"The foreground color for a section header or active title.\"));\nexport const settingsHeaderHoverForeground = registerColor('settings.settingsHeaderHoverForeground', { light: transparent(settingsHeaderForeground, 0.7), dark: transparent(settingsHeaderForeground, 0.7), hcDark: transparent(settingsHeaderForeground, 0.7), hcLight: transparent(settingsHeaderForeground, 0.7) }, localize('settingsHeaderHoverForeground', \"The foreground color for a section header or hovered title.\"));\nexport const modifiedItemIndicator = registerColor('settings.modifiedItemIndicator', {\n\tlight: new Color(new RGBA(102, 175, 224)),\n\tdark: new Color(new RGBA(12, 125, 157)),\n\thcDark: new Color(new RGBA(0, 73, 122)),\n\thcLight: new Color(new RGBA(102, 175, 224)),\n}, localize('modifiedItemForeground', \"The color of the modified setting indicator.\"));\nexport const settingsHeaderBorder = registerColor('settings.headerBorder', { dark: PANEL_BORDER, light: PANEL_BORDER, hcDark: PANEL_BORDER, hcLight: PANEL_BORDER }, localize('settingsHeaderBorder', \"The color of the header container border.\"));\nexport const settingsSashBorder = registerColor('settings.sashBorder', { dark: PANEL_BORDER, light: PANEL_BORDER, hcDark: PANEL_BORDER, hcLight: PANEL_BORDER }, localize('settingsSashBorder', \"The color of the Settings editor splitview sash border.\"));\n\n// Enum control colors\nexport const settingsSelectBackground = registerColor(`settings.dropdownBackground`, { dark: selectBackground, light: selectBackground, hcDark: selectBackground, hcLight: selectBackground }, localize('settingsDropdownBackground', \"Settings editor dropdown background.\"));\nexport const settingsSelectForeground = registerColor('settings.dropdownForeground', { dark: selectForeground, light: selectForeground, hcDark: selectForeground, hcLight: selectForeground }, localize('settingsDropdownForeground', \"Settings editor dropdown foreground.\"));\nexport const settingsSelectBorder = registerColor('settings.dropdownBorder', { dark: selectBorder, light: selectBorder, hcDark: selectBorder, hcLight: selectBorder }, localize('settingsDropdownBorder', \"Settings editor dropdown border.\"));\nexport const settingsSelectListBorder = registerColor('settings.dropdownListBorder', { dark: editorWidgetBorder, light: editorWidgetBorder, hcDark: editorWidgetBorder, hcLight: editorWidgetBorder }, localize('settingsDropdownListBorder', \"Settings editor dropdown list border. This surrounds the options and separates the options from the description.\"));\n\n// Bool control colors\nexport const settingsCheckboxBackground = registerColor('settings.checkboxBackground', { dark: checkboxBackground, light: checkboxBackground, hcDark: checkboxBackground, hcLight: checkboxBackground }, localize('settingsCheckboxBackground', \"Settings editor checkbox background.\"));\nexport const settingsCheckboxForeground = registerColor('settings.checkboxForeground', { dark: checkboxForeground, light: checkboxForeground, hcDark: checkboxForeground, hcLight: checkboxForeground }, localize('settingsCheckboxForeground', \"Settings editor checkbox foreground.\"));\nexport const settingsCheckboxBorder = registerColor('settings.checkboxBorder', { dark: checkboxBorder, light: checkboxBorder, hcDark: checkboxBorder, hcLight: checkboxBorder }, localize('settingsCheckboxBorder', \"Settings editor checkbox border.\"));\n\n// Text control colors\nexport const settingsTextInputBackground = registerColor('settings.textInputBackground', { dark: inputBackground, light: inputBackground, hcDark: inputBackground, hcLight: inputBackground }, localize('textInputBoxBackground', \"Settings editor text input box background.\"));\nexport const settingsTextInputForeground = registerColor('settings.textInputForeground', { dark: inputForeground, light: inputForeground, hcDark: inputForeground, hcLight: inputForeground }, localize('textInputBoxForeground', \"Settings editor text input box foreground.\"));\nexport const settingsTextInputBorder = registerColor('settings.textInputBorder', { dark: inputBorder, light: inputBorder, hcDark: inputBorder, hcLight: inputBorder }, localize('textInputBoxBorder', \"Settings editor text input box border.\"));\n\n// Number control colors\nexport const settingsNumberInputBackground = registerColor('settings.numberInputBackground', { dark: inputBackground, light: inputBackground, hcDark: inputBackground, hcLight: inputBackground }, localize('numberInputBoxBackground', \"Settings editor number input box background.\"));\nexport const settingsNumberInputForeground = registerColor('settings.numberInputForeground', { dark: inputForeground, light: inputForeground, hcDark: inputForeground, hcLight: inputForeground }, localize('numberInputBoxForeground', \"Settings editor number input box foreground.\"));\nexport const settingsNumberInputBorder = registerColor('settings.numberInputBorder', { dark: inputBorder, light: inputBorder, hcDark: inputBorder, hcLight: inputBorder }, localize('numberInputBoxBorder', \"Settings editor number input box border.\"));\n\nexport const focusedRowBackground = registerColor('settings.focusedRowBackground', {\n\tdark: transparent(listHoverBackground, .6),\n\tlight: transparent(listHoverBackground, .6),\n\thcDark: null,\n\thcLight: null,\n}, localize('focusedRowBackground', \"The background color of a settings row when focused.\"));\n\nexport const rowHoverBackground = registerColor('settings.rowHoverBackground', {\n\tdark: transparent(listHoverBackground, .3),\n\tlight: transparent(listHoverBackground, .3),\n\thcDark: null,\n\thcLight: null\n}, localize('settings.rowHoverBackground', \"The background color of a settings row when hovered.\"));\n\nexport const focusedRowBorder = registerColor('settings.focusedRowBorder', {\n\tdark: focusBorder,\n\tlight: focusBorder,\n\thcDark: focusBorder,\n\thcLight: focusBorder\n}, localize('settings.focusedRowBorder', \"The color of the row's top and bottom border when the row is focused.\"));\n"]}