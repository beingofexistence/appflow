{"version":3,"sources":["vs/workbench/contrib/preferences/browser/preferencesRenderers.ts"],"names":[],"mappings":"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","file":"preferencesRenderers.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventHelper, getDomNodePagePosition } from 'vs/base/browser/dom';\nimport { IAction, SubmenuAction } from 'vs/base/common/actions';\nimport { Delayer } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { EditorOption } from 'vs/editor/common/config/editorOptions';\nimport { ICursorPositionChangedEvent } from 'vs/editor/common/cursorEvents';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { IModelDeltaDecoration, ITextModel, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport * as languages from 'vs/editor/common/languages';\nimport { CodeActionKind } from 'vs/editor/contrib/codeAction/common/types';\nimport * as nls from 'vs/nls';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationPropertySchema, IConfigurationRegistry, IRegisteredConfigurationPropertySchema, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IMarkerData, IMarkerService, MarkerSeverity, MarkerTag } from 'vs/platform/markers/common/markers';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { RangeHighlightDecorations } from 'vs/workbench/browser/codeeditor';\nimport { settingsEditIcon } from 'vs/workbench/contrib/preferences/browser/preferencesIcons';\nimport { EditPreferenceWidget } from 'vs/workbench/contrib/preferences/browser/preferencesWidgets';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { IPreferencesEditorModel, IPreferencesService, ISetting, ISettingsEditorModel, ISettingsGroup } from 'vs/workbench/services/preferences/common/preferences';\nimport { DefaultSettingsEditorModel, SettingsEditorModel, WorkspaceConfigurationEditorModel } from 'vs/workbench/services/preferences/common/preferencesModels';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { isEqual } from 'vs/base/common/resources';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { APPLY_ALL_PROFILES_SETTING, IWorkbenchConfigurationService } from 'vs/workbench/services/configuration/common/configuration';\n\nexport interface IPreferencesRenderer extends IDisposable {\n\trender(): void;\n\tupdatePreference(key: string, value: any, source: ISetting): void;\n\tfocusPreference(setting: ISetting): void;\n\tclearFocus(setting: ISetting): void;\n\teditPreference(setting: ISetting): boolean;\n}\n\nexport class UserSettingsRenderer extends Disposable implements IPreferencesRenderer {\n\n\tprivate settingHighlighter: SettingHighlighter;\n\tprivate editSettingActionRenderer: EditSettingRenderer;\n\tprivate modelChangeDelayer: Delayer<void> = new Delayer<void>(200);\n\tprivate associatedPreferencesModel!: IPreferencesEditorModel<ISetting>;\n\n\tprivate unsupportedSettingsRenderer: UnsupportedSettingsRenderer;\n\n\tconstructor(protected editor: ICodeEditor, readonly preferencesModel: SettingsEditorModel,\n\t\t@IPreferencesService protected preferencesService: IPreferencesService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis.settingHighlighter = this._register(instantiationService.createInstance(SettingHighlighter, editor));\n\t\tthis.editSettingActionRenderer = this._register(this.instantiationService.createInstance(EditSettingRenderer, this.editor, this.preferencesModel, this.settingHighlighter));\n\t\tthis._register(this.editSettingActionRenderer.onUpdateSetting(({ key, value, source }) => this.updatePreference(key, value, source)));\n\t\tthis._register(this.editor.getModel()!.onDidChangeContent(() => this.modelChangeDelayer.trigger(() => this.onModelChanged())));\n\t\tthis.unsupportedSettingsRenderer = this._register(instantiationService.createInstance(UnsupportedSettingsRenderer, editor, preferencesModel));\n\t}\n\n\trender(): void {\n\t\tthis.editSettingActionRenderer.render(this.preferencesModel.settingsGroups, this.associatedPreferencesModel);\n\t\tthis.unsupportedSettingsRenderer.render();\n\t}\n\n\tupdatePreference(key: string, value: any, source: IIndexedSetting): void {\n\t\tconst overrideIdentifiers = source.overrideOf ? overrideIdentifiersFromKey(source.overrideOf.key) : null;\n\t\tconst resource = this.preferencesModel.uri;\n\t\tthis.configurationService.updateValue(key, value, { overrideIdentifiers, resource }, this.preferencesModel.configurationTarget)\n\t\t\t.then(() => this.onSettingUpdated(source));\n\t}\n\n\tprivate onModelChanged(): void {\n\t\tif (!this.editor.hasModel()) {\n\t\t\t// model could have been disposed during the delay\n\t\t\treturn;\n\t\t}\n\t\tthis.render();\n\t}\n\n\tprivate onSettingUpdated(setting: ISetting) {\n\t\tthis.editor.focus();\n\t\tsetting = this.getSetting(setting)!;\n\t\tif (setting) {\n\t\t\t// TODO:@sandy Selection range should be template range\n\t\t\tthis.editor.setSelection(setting.valueRange);\n\t\t\tthis.settingHighlighter.highlight(setting, true);\n\t\t}\n\t}\n\n\tprivate getSetting(setting: ISetting): ISetting | undefined {\n\t\tconst { key, overrideOf } = setting;\n\t\tif (overrideOf) {\n\t\t\tconst setting = this.getSetting(overrideOf);\n\t\t\tfor (const override of setting!.overrides!) {\n\t\t\t\tif (override.key === key) {\n\t\t\t\t\treturn override;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.preferencesModel.getPreference(key);\n\t}\n\n\tfocusPreference(setting: ISetting): void {\n\t\tconst s = this.getSetting(setting);\n\t\tif (s) {\n\t\t\tthis.settingHighlighter.highlight(s, true);\n\t\t\tthis.editor.setPosition({ lineNumber: s.keyRange.startLineNumber, column: s.keyRange.startColumn });\n\t\t} else {\n\t\t\tthis.settingHighlighter.clear(true);\n\t\t}\n\t}\n\n\tclearFocus(setting: ISetting): void {\n\t\tthis.settingHighlighter.clear(true);\n\t}\n\n\teditPreference(setting: ISetting): boolean {\n\t\tconst editableSetting = this.getSetting(setting);\n\t\treturn !!(editableSetting && this.editSettingActionRenderer.activateOnSetting(editableSetting));\n\t}\n\n}\n\nexport class WorkspaceSettingsRenderer extends UserSettingsRenderer implements IPreferencesRenderer {\n\n\tprivate workspaceConfigurationRenderer: WorkspaceConfigurationRenderer;\n\n\tconstructor(editor: ICodeEditor, preferencesModel: SettingsEditorModel,\n\t\t@IPreferencesService preferencesService: IPreferencesService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper(editor, preferencesModel, preferencesService, configurationService, instantiationService);\n\t\tthis.workspaceConfigurationRenderer = this._register(instantiationService.createInstance(WorkspaceConfigurationRenderer, editor, preferencesModel));\n\t}\n\n\toverride render(): void {\n\t\tsuper.render();\n\t\tthis.workspaceConfigurationRenderer.render();\n\t}\n}\n\nexport interface IIndexedSetting extends ISetting {\n\tindex: number;\n\tgroupId: string;\n}\n\nclass EditSettingRenderer extends Disposable {\n\n\tprivate editPreferenceWidgetForCursorPosition: EditPreferenceWidget<IIndexedSetting>;\n\tprivate editPreferenceWidgetForMouseMove: EditPreferenceWidget<IIndexedSetting>;\n\n\tprivate settingsGroups: ISettingsGroup[] = [];\n\tassociatedPreferencesModel!: IPreferencesEditorModel<ISetting>;\n\tprivate toggleEditPreferencesForMouseMoveDelayer: Delayer<void>;\n\n\tprivate readonly _onUpdateSetting: Emitter<{ key: string; value: any; source: IIndexedSetting }> = new Emitter<{ key: string; value: any; source: IIndexedSetting }>();\n\treadonly onUpdateSetting: Event<{ key: string; value: any; source: IIndexedSetting }> = this._onUpdateSetting.event;\n\n\tconstructor(private editor: ICodeEditor, private primarySettingsModel: ISettingsEditorModel,\n\t\tprivate settingHighlighter: SettingHighlighter,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tsuper();\n\n\t\tthis.editPreferenceWidgetForCursorPosition = <EditPreferenceWidget<IIndexedSetting>>this._register(this.instantiationService.createInstance(EditPreferenceWidget, editor));\n\t\tthis.editPreferenceWidgetForMouseMove = <EditPreferenceWidget<IIndexedSetting>>this._register(this.instantiationService.createInstance(EditPreferenceWidget, editor));\n\t\tthis.toggleEditPreferencesForMouseMoveDelayer = new Delayer<void>(75);\n\n\t\tthis._register(this.editPreferenceWidgetForCursorPosition.onClick(e => this.onEditSettingClicked(this.editPreferenceWidgetForCursorPosition, e)));\n\t\tthis._register(this.editPreferenceWidgetForMouseMove.onClick(e => this.onEditSettingClicked(this.editPreferenceWidgetForMouseMove, e)));\n\n\t\tthis._register(this.editor.onDidChangeCursorPosition(positionChangeEvent => this.onPositionChanged(positionChangeEvent)));\n\t\tthis._register(this.editor.onMouseMove(mouseMoveEvent => this.onMouseMoved(mouseMoveEvent)));\n\t\tthis._register(this.editor.onDidChangeConfiguration(() => this.onConfigurationChanged()));\n\t}\n\n\trender(settingsGroups: ISettingsGroup[], associatedPreferencesModel: IPreferencesEditorModel<ISetting>): void {\n\t\tthis.editPreferenceWidgetForCursorPosition.hide();\n\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\tthis.settingsGroups = settingsGroups;\n\t\tthis.associatedPreferencesModel = associatedPreferencesModel;\n\n\t\tconst settings = this.getSettings(this.editor.getPosition()!.lineNumber);\n\t\tif (settings.length) {\n\t\t\tthis.showEditPreferencesWidget(this.editPreferenceWidgetForCursorPosition, settings);\n\t\t}\n\t}\n\n\tprivate isDefaultSettings(): boolean {\n\t\treturn this.primarySettingsModel instanceof DefaultSettingsEditorModel;\n\t}\n\n\tprivate onConfigurationChanged(): void {\n\t\tif (!this.editor.getOption(EditorOption.glyphMargin)) {\n\t\t\tthis.editPreferenceWidgetForCursorPosition.hide();\n\t\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\t}\n\t}\n\n\tprivate onPositionChanged(positionChangeEvent: ICursorPositionChangedEvent) {\n\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\tconst settings = this.getSettings(positionChangeEvent.position.lineNumber);\n\t\tif (settings.length) {\n\t\t\tthis.showEditPreferencesWidget(this.editPreferenceWidgetForCursorPosition, settings);\n\t\t} else {\n\t\t\tthis.editPreferenceWidgetForCursorPosition.hide();\n\t\t}\n\t}\n\n\tprivate onMouseMoved(mouseMoveEvent: IEditorMouseEvent): void {\n\t\tconst editPreferenceWidget = this.getEditPreferenceWidgetUnderMouse(mouseMoveEvent);\n\t\tif (editPreferenceWidget) {\n\t\t\tthis.onMouseOver(editPreferenceWidget);\n\t\t\treturn;\n\t\t}\n\t\tthis.settingHighlighter.clear();\n\t\tthis.toggleEditPreferencesForMouseMoveDelayer.trigger(() => this.toggleEditPreferenceWidgetForMouseMove(mouseMoveEvent));\n\t}\n\n\tprivate getEditPreferenceWidgetUnderMouse(mouseMoveEvent: IEditorMouseEvent): EditPreferenceWidget<ISetting> | undefined {\n\t\tif (mouseMoveEvent.target.type === MouseTargetType.GUTTER_GLYPH_MARGIN) {\n\t\t\tconst line = mouseMoveEvent.target.position.lineNumber;\n\t\t\tif (this.editPreferenceWidgetForMouseMove.getLine() === line && this.editPreferenceWidgetForMouseMove.isVisible()) {\n\t\t\t\treturn this.editPreferenceWidgetForMouseMove;\n\t\t\t}\n\t\t\tif (this.editPreferenceWidgetForCursorPosition.getLine() === line && this.editPreferenceWidgetForCursorPosition.isVisible()) {\n\t\t\t\treturn this.editPreferenceWidgetForCursorPosition;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate toggleEditPreferenceWidgetForMouseMove(mouseMoveEvent: IEditorMouseEvent): void {\n\t\tconst settings = mouseMoveEvent.target.position ? this.getSettings(mouseMoveEvent.target.position.lineNumber) : null;\n\t\tif (settings && settings.length) {\n\t\t\tthis.showEditPreferencesWidget(this.editPreferenceWidgetForMouseMove, settings);\n\t\t} else {\n\t\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\t}\n\t}\n\n\tprivate showEditPreferencesWidget(editPreferencesWidget: EditPreferenceWidget<ISetting>, settings: IIndexedSetting[]) {\n\t\tconst line = settings[0].valueRange.startLineNumber;\n\t\tif (this.editor.getOption(EditorOption.glyphMargin) && this.marginFreeFromOtherDecorations(line)) {\n\t\t\teditPreferencesWidget.show(line, nls.localize('editTtile', \"Edit\"), settings);\n\t\t\tconst editPreferenceWidgetToHide = editPreferencesWidget === this.editPreferenceWidgetForCursorPosition ? this.editPreferenceWidgetForMouseMove : this.editPreferenceWidgetForCursorPosition;\n\t\t\teditPreferenceWidgetToHide.hide();\n\t\t}\n\t}\n\n\tprivate marginFreeFromOtherDecorations(line: number): boolean {\n\t\tconst decorations = this.editor.getLineDecorations(line);\n\t\tif (decorations) {\n\t\t\tfor (const { options } of decorations) {\n\t\t\t\tif (options.glyphMarginClassName && options.glyphMarginClassName.indexOf(ThemeIcon.asClassName(settingsEditIcon)) === -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate getSettings(lineNumber: number): IIndexedSetting[] {\n\t\tconst configurationMap = this.getConfigurationsMap();\n\t\treturn this.getSettingsAtLineNumber(lineNumber).filter(setting => {\n\t\t\tconst configurationNode = configurationMap[setting.key];\n\t\t\tif (configurationNode) {\n\t\t\t\tif (configurationNode.policy && this.configurationService.inspect(setting.key).policyValue !== undefined) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (this.isDefaultSettings()) {\n\t\t\t\t\tif (setting.key === 'launch') {\n\t\t\t\t\t\t// Do not show because of https://github.com/microsoft/vscode/issues/32593\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (configurationNode.type === 'boolean' || configurationNode.enum) {\n\t\t\t\t\tif ((<SettingsEditorModel>this.primarySettingsModel).configurationTarget !== ConfigurationTarget.WORKSPACE_FOLDER) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (configurationNode.scope === ConfigurationScope.RESOURCE || configurationNode.scope === ConfigurationScope.LANGUAGE_OVERRIDABLE) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate getSettingsAtLineNumber(lineNumber: number): IIndexedSetting[] {\n\t\t// index of setting, across all groups/sections\n\t\tlet index = 0;\n\n\t\tconst settings: IIndexedSetting[] = [];\n\t\tfor (const group of this.settingsGroups) {\n\t\t\tif (group.range.startLineNumber > lineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineNumber >= group.range.startLineNumber && lineNumber <= group.range.endLineNumber) {\n\t\t\t\tfor (const section of group.sections) {\n\t\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\t\tif (setting.range.startLineNumber > lineNumber) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (lineNumber >= setting.range.startLineNumber && lineNumber <= setting.range.endLineNumber) {\n\t\t\t\t\t\t\tif (!this.isDefaultSettings() && setting.overrides!.length) {\n\t\t\t\t\t\t\t\t// Only one level because override settings cannot have override settings\n\t\t\t\t\t\t\t\tfor (const overrideSetting of setting.overrides!) {\n\t\t\t\t\t\t\t\t\tif (lineNumber >= overrideSetting.range.startLineNumber && lineNumber <= overrideSetting.range.endLineNumber) {\n\t\t\t\t\t\t\t\t\t\tsettings.push({ ...overrideSetting, index, groupId: group.id });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsettings.push({ ...setting, index, groupId: group.id });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn settings;\n\t}\n\n\tprivate onMouseOver(editPreferenceWidget: EditPreferenceWidget<ISetting>): void {\n\t\tthis.settingHighlighter.highlight(editPreferenceWidget.preferences[0]);\n\t}\n\n\tprivate onEditSettingClicked(editPreferenceWidget: EditPreferenceWidget<IIndexedSetting>, e: IEditorMouseEvent): void {\n\t\tEventHelper.stop(e.event, true);\n\n\t\tconst actions = this.getSettings(editPreferenceWidget.getLine()).length === 1 ? this.getActions(editPreferenceWidget.preferences[0], this.getConfigurationsMap()[editPreferenceWidget.preferences[0].key])\n\t\t\t: editPreferenceWidget.preferences.map(setting => new SubmenuAction(`preferences.submenu.${setting.key}`, setting.key, this.getActions(setting, this.getConfigurationsMap()[setting.key])));\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.event,\n\t\t\tgetActions: () => actions\n\t\t});\n\t}\n\n\tactivateOnSetting(setting: ISetting): boolean {\n\t\tconst startLine = setting.keyRange.startLineNumber;\n\t\tconst settings = this.getSettings(startLine);\n\t\tif (!settings.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.editPreferenceWidgetForMouseMove.show(startLine, '', settings);\n\t\tconst actions = this.getActions(this.editPreferenceWidgetForMouseMove.preferences[0], this.getConfigurationsMap()[this.editPreferenceWidgetForMouseMove.preferences[0].key]);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => this.toAbsoluteCoords(new Position(startLine, 1)),\n\t\t\tgetActions: () => actions\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tprivate toAbsoluteCoords(position: Position): { x: number; y: number } {\n\t\tconst positionCoords = this.editor.getScrolledVisiblePosition(position);\n\t\tconst editorCoords = getDomNodePagePosition(this.editor.getDomNode()!);\n\t\tconst x = editorCoords.left + positionCoords!.left;\n\t\tconst y = editorCoords.top + positionCoords!.top + positionCoords!.height;\n\n\t\treturn { x, y: y + 10 };\n\t}\n\n\tprivate getConfigurationsMap(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\t}\n\n\tprivate getActions(setting: IIndexedSetting, jsonSchema: IJSONSchema): IAction[] {\n\t\tif (jsonSchema.type === 'boolean') {\n\t\t\treturn [<IAction>{\n\t\t\t\tid: 'truthyValue',\n\t\t\t\tlabel: 'true',\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => this.updateSetting(setting.key, true, setting)\n\t\t\t}, <IAction>{\n\t\t\t\tid: 'falsyValue',\n\t\t\t\tlabel: 'false',\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => this.updateSetting(setting.key, false, setting)\n\t\t\t}];\n\t\t}\n\t\tif (jsonSchema.enum) {\n\t\t\treturn jsonSchema.enum.map(value => {\n\t\t\t\treturn <IAction>{\n\t\t\t\t\tid: value,\n\t\t\t\t\tlabel: JSON.stringify(value),\n\t\t\t\t\tenabled: true,\n\t\t\t\t\trun: () => this.updateSetting(setting.key, value, setting)\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn this.getDefaultActions(setting);\n\t}\n\n\tprivate getDefaultActions(setting: IIndexedSetting): IAction[] {\n\t\tif (this.isDefaultSettings()) {\n\t\t\tconst settingInOtherModel = this.associatedPreferencesModel.getPreference(setting.key);\n\t\t\treturn [<IAction>{\n\t\t\t\tid: 'setDefaultValue',\n\t\t\t\tlabel: settingInOtherModel ? nls.localize('replaceDefaultValue', \"Replace in Settings\") : nls.localize('copyDefaultValue', \"Copy to Settings\"),\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => this.updateSetting(setting.key, setting.value, setting)\n\t\t\t}];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate updateSetting(key: string, value: any, source: IIndexedSetting): void {\n\t\tthis._onUpdateSetting.fire({ key, value, source });\n\t}\n}\n\nclass SettingHighlighter extends Disposable {\n\n\tprivate fixedHighlighter: RangeHighlightDecorations;\n\tprivate volatileHighlighter: RangeHighlightDecorations;\n\n\tconstructor(private editor: ICodeEditor, @IInstantiationService instantiationService: IInstantiationService) {\n\t\tsuper();\n\t\tthis.fixedHighlighter = this._register(instantiationService.createInstance(RangeHighlightDecorations));\n\t\tthis.volatileHighlighter = this._register(instantiationService.createInstance(RangeHighlightDecorations));\n\t}\n\n\thighlight(setting: ISetting, fix: boolean = false) {\n\t\tthis.volatileHighlighter.removeHighlightRange();\n\t\tthis.fixedHighlighter.removeHighlightRange();\n\n\t\tconst highlighter = fix ? this.fixedHighlighter : this.volatileHighlighter;\n\t\thighlighter.highlightRange({\n\t\t\trange: setting.valueRange,\n\t\t\tresource: this.editor.getModel()!.uri\n\t\t}, this.editor);\n\n\t\tthis.editor.revealLineInCenterIfOutsideViewport(setting.valueRange.startLineNumber, editorCommon.ScrollType.Smooth);\n\t}\n\n\tclear(fix: boolean = false): void {\n\t\tthis.volatileHighlighter.removeHighlightRange();\n\t\tif (fix) {\n\t\t\tthis.fixedHighlighter.removeHighlightRange();\n\t\t}\n\t}\n}\n\nclass UnsupportedSettingsRenderer extends Disposable implements languages.CodeActionProvider {\n\n\tprivate renderingDelayer: Delayer<void> = new Delayer<void>(200);\n\n\tprivate readonly codeActions = new ResourceMap<[Range, languages.CodeAction[]][]>(uri => this.uriIdentityService.extUri.getComparisonKey(uri));\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly settingsEditorModel: SettingsEditorModel,\n\t\t@IMarkerService private readonly markerService: IMarkerService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkbenchConfigurationService private readonly configurationService: IWorkbenchConfigurationService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\t\tthis._register(this.editor.getModel()!.onDidChangeContent(() => this.delayedRender()));\n\t\tthis._register(Event.filter(this.configurationService.onDidChangeConfiguration, e => e.source === ConfigurationTarget.DEFAULT)(() => this.delayedRender()));\n\t\tthis._register(languageFeaturesService.codeActionProvider.register({ pattern: settingsEditorModel.uri.path }, this));\n\t}\n\n\tprivate delayedRender(): void {\n\t\tthis.renderingDelayer.trigger(() => this.render());\n\t}\n\n\tpublic render(): void {\n\t\tthis.codeActions.clear();\n\t\tconst markerData: IMarkerData[] = this.generateMarkerData();\n\t\tif (markerData.length) {\n\t\t\tthis.markerService.changeOne('UnsupportedSettingsRenderer', this.settingsEditorModel.uri, markerData);\n\t\t} else {\n\t\t\tthis.markerService.remove('UnsupportedSettingsRenderer', [this.settingsEditorModel.uri]);\n\t\t}\n\t}\n\n\tasync provideCodeActions(model: ITextModel, range: Range | Selection, context: languages.CodeActionContext, token: CancellationToken): Promise<languages.CodeActionList> {\n\t\tconst actions: languages.CodeAction[] = [];\n\t\tconst codeActionsByRange = this.codeActions.get(model.uri);\n\t\tif (codeActionsByRange) {\n\t\t\tfor (const [codeActionsRange, codeActions] of codeActionsByRange) {\n\t\t\t\tif (codeActionsRange.containsRange(range)) {\n\t\t\t\t\tactions.push(...codeActions);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tactions,\n\t\t\tdispose: () => { }\n\t\t};\n\t}\n\n\tprivate generateMarkerData(): IMarkerData[] {\n\t\tconst markerData: IMarkerData[] = [];\n\t\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\t\tfor (const settingsGroup of this.settingsEditorModel.settingsGroups) {\n\t\t\tfor (const section of settingsGroup.sections) {\n\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(setting.key)) {\n\t\t\t\t\t\tif (setting.overrides) {\n\t\t\t\t\t\t\tthis.handleOverrides(setting.overrides, configurationRegistry, markerData);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst configuration = configurationRegistry[setting.key];\n\t\t\t\t\tif (configuration) {\n\t\t\t\t\t\tif (this.handlePolicyConfiguration(setting, configuration, markerData)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (this.settingsEditorModel.configurationTarget) {\n\t\t\t\t\t\t\tcase ConfigurationTarget.USER_LOCAL:\n\t\t\t\t\t\t\t\tthis.handleLocalUserConfiguration(setting, configuration, markerData);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase ConfigurationTarget.USER_REMOTE:\n\t\t\t\t\t\t\t\tthis.handleRemoteUserConfiguration(setting, configuration, markerData);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase ConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\t\t\tthis.handleWorkspaceConfiguration(setting, configuration, markerData);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase ConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\t\t\t\t\tthis.handleWorkspaceFolderConfiguration(setting, configuration, markerData);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmarkerData.push(this.gemerateUnknownConfigurationMarker(setting));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn markerData;\n\t}\n\n\tprivate handlePolicyConfiguration(setting: ISetting, configuration: IConfigurationPropertySchema, markerData: IMarkerData[]): boolean {\n\t\tif (!configuration.policy) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.configurationService.inspect(setting.key).policyValue === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.settingsEditorModel.configurationTarget === ConfigurationTarget.DEFAULT) {\n\t\t\treturn false;\n\t\t}\n\t\tmarkerData.push({\n\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize('unsupportedPolicySetting', \"This setting cannot be applied because it is configured in the system policy.\")\n\t\t});\n\t\treturn true;\n\t}\n\n\tprivate handleOverrides(overrides: ISetting[], configurationRegistry: IStringDictionary<IRegisteredConfigurationPropertySchema>, markerData: IMarkerData[]): void {\n\t\tfor (const setting of overrides || []) {\n\t\t\tconst configuration = configurationRegistry[setting.key];\n\t\t\tif (configuration) {\n\t\t\t\tif (configuration.scope !== ConfigurationScope.LANGUAGE_OVERRIDABLE) {\n\t\t\t\t\tmarkerData.push({\n\t\t\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t\t\t...setting.range,\n\t\t\t\t\t\tmessage: nls.localize('unsupportLanguageOverrideSetting', \"This setting cannot be applied because it is not registered as language override setting.\")\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmarkerData.push(this.gemerateUnknownConfigurationMarker(setting));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleLocalUserConfiguration(setting: ISetting, configuration: IConfigurationPropertySchema, markerData: IMarkerData[]): void {\n\t\tif (!this.userDataProfileService.currentProfile.isDefault && !this.userDataProfileService.currentProfile.useDefaultFlags?.settings) {\n\t\t\tif (isEqual(this.userDataProfilesService.defaultProfile.settingsResource, this.settingsEditorModel.uri) && !this.configurationService.isSettingAppliedForAllProfiles(setting.key)) {\n\t\t\t\t// If we're in the default profile setting file, and the setting cannot be applied in all profiles\n\t\t\t\tmarkerData.push({\n\t\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t\t...setting.range,\n\t\t\t\t\tmessage: nls.localize('defaultProfileSettingWhileNonDefaultActive', \"This setting cannot be applied while a non-default profile is active. It will be applied when the default profile is active.\")\n\t\t\t\t});\n\t\t\t} else if (isEqual(this.userDataProfileService.currentProfile.settingsResource, this.settingsEditorModel.uri)) {\n\t\t\t\tif (configuration.scope === ConfigurationScope.APPLICATION) {\n\t\t\t\t\t// If we're in a profile setting file, and the setting is application-scoped, fade it out.\n\t\t\t\t\tmarkerData.push(this.generateUnsupportedApplicationSettingMarker(setting));\n\t\t\t\t} else if (this.configurationService.isSettingAppliedForAllProfiles(setting.key)) {\n\t\t\t\t\t// If we're in the non-default profile setting file, and the setting can be applied in all profiles, fade it out.\n\t\t\t\t\tmarkerData.push({\n\t\t\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t\t\t...setting.range,\n\t\t\t\t\t\tmessage: nls.localize('allProfileSettingWhileInNonDefaultProfileSetting', \"This setting cannot be applied because it is configured to be applied in all profiles using setting {0}. Value from the default profile will be used instead.\", APPLY_ALL_PROFILES_SETTING)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.environmentService.remoteAuthority && (configuration.scope === ConfigurationScope.MACHINE || configuration.scope === ConfigurationScope.MACHINE_OVERRIDABLE)) {\n\t\t\tmarkerData.push({\n\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t...setting.range,\n\t\t\t\tmessage: nls.localize('unsupportedRemoteMachineSetting', \"This setting cannot be applied in this window. It will be applied when you open a local window.\")\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate handleRemoteUserConfiguration(setting: ISetting, configuration: IConfigurationPropertySchema, markerData: IMarkerData[]): void {\n\t\tif (configuration.scope === ConfigurationScope.APPLICATION) {\n\t\t\tmarkerData.push(this.generateUnsupportedApplicationSettingMarker(setting));\n\t\t}\n\t}\n\n\tprivate handleWorkspaceConfiguration(setting: ISetting, configuration: IConfigurationPropertySchema, markerData: IMarkerData[]): void {\n\t\tif (configuration.scope === ConfigurationScope.APPLICATION) {\n\t\t\tmarkerData.push(this.generateUnsupportedApplicationSettingMarker(setting));\n\t\t}\n\n\t\tif (configuration.scope === ConfigurationScope.MACHINE) {\n\t\t\tmarkerData.push(this.generateUnsupportedMachineSettingMarker(setting));\n\t\t}\n\n\t\tif (!this.workspaceTrustManagementService.isWorkspaceTrusted() && configuration.restricted) {\n\t\t\tconst marker = this.generateUntrustedSettingMarker(setting);\n\t\t\tmarkerData.push(marker);\n\t\t\tconst codeActions = this.generateUntrustedSettingCodeActions([marker]);\n\t\t\tthis.addCodeActions(marker, codeActions);\n\t\t}\n\t}\n\n\tprivate handleWorkspaceFolderConfiguration(setting: ISetting, configuration: IConfigurationPropertySchema, markerData: IMarkerData[]): void {\n\t\tif (configuration.scope === ConfigurationScope.APPLICATION) {\n\t\t\tmarkerData.push(this.generateUnsupportedApplicationSettingMarker(setting));\n\t\t}\n\n\t\tif (configuration.scope === ConfigurationScope.MACHINE) {\n\t\t\tmarkerData.push(this.generateUnsupportedMachineSettingMarker(setting));\n\t\t}\n\n\t\tif (configuration.scope === ConfigurationScope.WINDOW) {\n\t\t\tmarkerData.push({\n\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t...setting.range,\n\t\t\t\tmessage: nls.localize('unsupportedWindowSetting', \"This setting cannot be applied in this workspace. It will be applied when you open the containing workspace folder directly.\")\n\t\t\t});\n\t\t}\n\n\t\tif (!this.workspaceTrustManagementService.isWorkspaceTrusted() && configuration.restricted) {\n\t\t\tconst marker = this.generateUntrustedSettingMarker(setting);\n\t\t\tmarkerData.push(marker);\n\t\t\tconst codeActions = this.generateUntrustedSettingCodeActions([marker]);\n\t\t\tthis.addCodeActions(marker, codeActions);\n\t\t}\n\t}\n\n\tprivate generateUnsupportedApplicationSettingMarker(setting: ISetting): IMarkerData {\n\t\treturn {\n\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize('unsupportedApplicationSetting', \"This setting has an application scope and can be set only in the user settings file.\")\n\t\t};\n\t}\n\n\tprivate generateUnsupportedMachineSettingMarker(setting: ISetting): IMarkerData {\n\t\treturn {\n\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize('unsupportedMachineSetting', \"This setting can only be applied in user settings in local window or in remote settings in remote window.\")\n\t\t};\n\t}\n\n\tprivate generateUntrustedSettingMarker(setting: ISetting): IMarkerData {\n\t\treturn {\n\t\t\tseverity: MarkerSeverity.Warning,\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize('untrustedSetting', \"This setting can only be applied in a trusted workspace.\")\n\t\t};\n\t}\n\n\tprivate gemerateUnknownConfigurationMarker(setting: ISetting): IMarkerData {\n\t\treturn {\n\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t...setting.range,\n\t\t\tmessage: nls.localize('unknown configuration setting', \"Unknown Configuration Setting\")\n\t\t};\n\t}\n\n\tprivate generateUntrustedSettingCodeActions(diagnostics: IMarkerData[]): languages.CodeAction[] {\n\t\treturn [{\n\t\t\ttitle: nls.localize('manage workspace trust', \"Manage Workspace Trust\"),\n\t\t\tcommand: {\n\t\t\t\tid: 'workbench.trust.manage',\n\t\t\t\ttitle: nls.localize('manage workspace trust', \"Manage Workspace Trust\")\n\t\t\t},\n\t\t\tdiagnostics,\n\t\t\tkind: CodeActionKind.QuickFix.value\n\t\t}];\n\t}\n\n\tprivate addCodeActions(range: IRange, codeActions: languages.CodeAction[]): void {\n\t\tlet actions = this.codeActions.get(this.settingsEditorModel.uri);\n\t\tif (!actions) {\n\t\t\tactions = [];\n\t\t\tthis.codeActions.set(this.settingsEditorModel.uri, actions);\n\t\t}\n\t\tactions.push([Range.lift(range), codeActions]);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis.markerService.remove('UnsupportedSettingsRenderer', [this.settingsEditorModel.uri]);\n\t\tthis.codeActions.clear();\n\t\tsuper.dispose();\n\t}\n\n}\n\nclass WorkspaceConfigurationRenderer extends Disposable {\n\tprivate static readonly supportedKeys = ['folders', 'tasks', 'launch', 'extensions', 'settings', 'remoteAuthority', 'transient'];\n\n\tprivate readonly decorations = this.editor.createDecorationsCollection();\n\tprivate renderingDelayer: Delayer<void> = new Delayer<void>(200);\n\n\tconstructor(private editor: ICodeEditor, private workspaceSettingsEditorModel: SettingsEditorModel,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IMarkerService private readonly markerService: IMarkerService\n\t) {\n\t\tsuper();\n\t\tthis._register(this.editor.getModel()!.onDidChangeContent(() => this.renderingDelayer.trigger(() => this.render())));\n\t}\n\n\trender(): void {\n\t\tconst markerData: IMarkerData[] = [];\n\t\tif (this.workspaceContextService.getWorkbenchState() === WorkbenchState.WORKSPACE && this.workspaceSettingsEditorModel instanceof WorkspaceConfigurationEditorModel) {\n\t\t\tconst ranges: IRange[] = [];\n\t\t\tfor (const settingsGroup of this.workspaceSettingsEditorModel.configurationGroups) {\n\t\t\t\tfor (const section of settingsGroup.sections) {\n\t\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\t\tif (!WorkspaceConfigurationRenderer.supportedKeys.includes(setting.key)) {\n\t\t\t\t\t\t\tmarkerData.push({\n\t\t\t\t\t\t\t\tseverity: MarkerSeverity.Hint,\n\t\t\t\t\t\t\t\ttags: [MarkerTag.Unnecessary],\n\t\t\t\t\t\t\t\t...setting.range,\n\t\t\t\t\t\t\t\tmessage: nls.localize('unsupportedProperty', \"Unsupported Property\")\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.decorations.set(ranges.map(range => this.createDecoration(range)));\n\t\t}\n\t\tif (markerData.length) {\n\t\t\tthis.markerService.changeOne('WorkspaceConfigurationRenderer', this.workspaceSettingsEditorModel.uri, markerData);\n\t\t} else {\n\t\t\tthis.markerService.remove('WorkspaceConfigurationRenderer', [this.workspaceSettingsEditorModel.uri]);\n\t\t}\n\t}\n\n\tprivate static readonly _DIM_CONFIGURATION_ = ModelDecorationOptions.register({\n\t\tdescription: 'dim-configuration',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tinlineClassName: 'dim-configuration'\n\t});\n\n\tprivate createDecoration(range: IRange): IModelDeltaDecoration {\n\t\treturn {\n\t\t\trange,\n\t\t\toptions: WorkspaceConfigurationRenderer._DIM_CONFIGURATION_\n\t\t};\n\t}\n\n\toverride dispose(): void {\n\t\tthis.markerService.remove('WorkspaceConfigurationRenderer', [this.workspaceSettingsEditorModel.uri]);\n\t\tthis.decorations.clear();\n\t\tsuper.dispose();\n\t}\n}\n"]}