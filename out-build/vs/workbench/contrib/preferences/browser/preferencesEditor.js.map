{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/preferences/browser/preferencesEditor.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAWzF,IAAM,IAAI,GAAV,MAAM,IAA2B,SAAQ,eAAG;iBAClC,OAAE,GAAW,yBAAX,AAAoC,CAAC;QAKvD,YACkB,CAAmB,EACb,CAA0C,EAC5C,CAAwC,EACnC,CAA6C;YAEvE,KAAK,EAAE,CAAC;YALS,MAAC,GAAD,CAAC,CAAkB;YACI,MAAC,GAAD,CAAC,CAAwB;YAC3B,MAAC,GAAD,CAAC,CAAsB;YAClB,MAAC,GAAD,CAAC,CAA2B;YANvD,MAAC,GAAa,IAAI,CAAC,CAAC,CAAS,IAAI,eAAG,EAAc,CAAC,CAAC;YASpE,IAAI,CAAC,CAAC,EAA2B,CAAC;YAClC,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAM,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAA2B,CAAC,CAAC,CAAC;YACrF,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAuB,yBAAyB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAA2B,CAAC,CAAC,CAAC;QACjH,CAAC;QAEO,KAAK,CAAC,CAAC;YACd,IAAI,CAAC,CAAC,CAAW,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,CAAC,GAAiB,SAAS,CAAC;YAEjC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAM,QAAQ,EAAE,CAAC;YACrC,IAAI,KAAK,IAAI,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAC7D,uDAAuD;gBACvD,uCAAuC;gBACvC,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,CAAC,CAAkB,4BAA4B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC5F,IAAI,aAAa,YAAY,uBAAG,IAAoB,IAAI,CAAC,CAAC,CAAM,QAAQ,EAAE,EAAE;oBAC3E,IAAI,CAAC,CAAC,CAAW,GAAG,CAAC,aAAa,CAAC,CAAC;oBACpC,QAAQ,aAAa,CAAC,mBAAmB,EAAE;wBAC1C;4BACC,IAAI,CAAC,CAAC,GAAiB,IAAI,CAAC,CAAC,CAAW,GAAG,CAAC,IAAI,CAAC,CAAC,CAAoB,cAAc,CAAC,2BAAI,EAAuB,IAAI,CAAC,CAAC,EAAO,aAAa,CAAC,CAAC,CAAC;4BAC7I,MAAM;wBACP;4BACC,IAAI,CAAC,CAAC,GAAiB,IAAI,CAAC,CAAC,CAAW,GAAG,CAAC,IAAI,CAAC,CAAC,CAAoB,cAAc,CAAC,2BAAI,EAAkB,IAAI,CAAC,CAAC,EAAO,aAAa,CAAC,CAAC,CAAC;4BACxI,MAAM;qBACP;iBACD;gBAED,IAAI,CAAC,CAAC,EAAgB,MAAM,EAAE,CAAC;aAC/B;QACF,CAAC;;IAzCW,oBAAI;mBAAJ,IAAI;QAQd,WAAA,mBAAG,CAAA;QACH,WAAA,iBAAG,CAAA;QACH,WAAA,eAAG,CAAA;OAVO,IAAI,CA0ChB","file":"preferencesEditor.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IPreferencesRenderer, UserSettingsRenderer, WorkspaceSettingsRenderer } from 'vs/workbench/contrib/preferences/browser/preferencesRenderers';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { SettingsEditorModel } from 'vs/workbench/services/preferences/common/preferencesModels';\n\nexport class SettingsEditorContribution extends Disposable {\n\tstatic readonly ID: string = 'editor.contrib.settings';\n\n\tprivate currentRenderer: IPreferencesRenderer | undefined;\n\tprivate readonly disposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\t\tthis._createPreferencesRenderer();\n\t\tthis._register(this.editor.onDidChangeModel(e => this._createPreferencesRenderer()));\n\t\tthis._register(this.workspaceContextService.onDidChangeWorkbenchState(() => this._createPreferencesRenderer()));\n\t}\n\n\tprivate async _createPreferencesRenderer(): Promise<void> {\n\t\tthis.disposables.clear();\n\t\tthis.currentRenderer = undefined;\n\n\t\tconst model = this.editor.getModel();\n\t\tif (model && /\\.(json|code-workspace)$/.test(model.uri.path)) {\n\t\t\t// Fast check: the preferences renderer can only appear\n\t\t\t// in settings files or workspace files\n\t\t\tconst settingsModel = await this.preferencesService.createPreferencesEditorModel(model.uri);\n\t\t\tif (settingsModel instanceof SettingsEditorModel && this.editor.getModel()) {\n\t\t\t\tthis.disposables.add(settingsModel);\n\t\t\t\tswitch (settingsModel.configurationTarget) {\n\t\t\t\t\tcase ConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\tthis.currentRenderer = this.disposables.add(this.instantiationService.createInstance(WorkspaceSettingsRenderer, this.editor, settingsModel));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.currentRenderer = this.disposables.add(this.instantiationService.createInstance(UserSettingsRenderer, this.editor, settingsModel));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.currentRenderer?.render();\n\t\t}\n\t}\n}\n"]}