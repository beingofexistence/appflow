{"version":3,"sources":["vs/workbench/contrib/preferences/browser/keybindingsEditorContribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IA0BhG,MAAM,2BAA2B,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAuC,EAAE,IAAuF,CAAC,CAAC;IAEnL,IAAM,kCAAkC,GAAxC,MAAM,kCAAmC,SAAQ,eAAG;QAMnD,YACS,CAAoB,EACL,CAA2C,EACzC,CAA6C;YAEtE,KAAK,EAAE,CAAC;YAJA,MAAC,GAAD,CAAC,CAAmB;YACY,MAAC,GAAD,CAAC,CAAyB;YACxB,MAAC,GAAD,CAAC,CAA2B;YAP/D,MAAC,GAA+B,IAAI,CAAC,CAAC,CAAS,IAAI,eAAG,EAAqD,CAAC,CAAC;YAWpH,IAAI,CAAC,CAAC,GAAe,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAqB,cAAc,CAAC,wBAAI,EAA2B,IAAI,CAAC,CAAC,CAAO,CAAC,CAAC;YAC5H,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAO,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAQ,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,CAAC,EAAQ,CAAC;QAChB,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,CAAC,CAA6B,KAAK,GAAG,wBAAwB,CAAC,IAAI,CAAC,CAAC,EAAQ,IAAI,CAAC,CAAC,CAAuB;gBAC9G,+FAA+F;gBAC/F,CAAC,CAAC,IAAI,CAAC,CAAC,CAAqB,cAAc,CAAC,IAAI,EAAiC,IAAI,CAAC,CAAC,CAAO;gBAC9F,CAAC,CAAC,SAAS,CAAC;QACd,CAAC;QAED,0BAA0B;YACzB,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAC,EAAQ,IAAI,CAAC,CAAC,CAAuB,EAAE;gBACzE,IAAI,CAAC,CAAC,CAAa,KAAK,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAW,UAAU,CAAC,CAAC,CAAC;aAC5E;QACF,CAAC;QAEO,CAAC,CAAW,UAAyB;YAC5C,IAAI,CAAC,CAAC,CAAO,KAAK,EAAE,CAAC;YACrB,IAAI,UAAU,IAAI,IAAI,CAAC,CAAC,CAAO,QAAQ,EAAE,EAAE;gBAC1C,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;gBACjC,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC1C,IAAI,SAAS,EAAE;oBACd,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;iBAC9C;gBACD,IAAI,WAAW,GAAG;oBACjB,GAAG;oBACH,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,GAAG;oBAC9C,gCAAgC;oBAChC,kCAAkC;oBAClC,KAAK;iBACL,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEb,MAAM,eAAe,GAAG,2BAAI,CAAiB,aAAa,CAAC,IAAI,CAAC,CAAC,CAAO,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC,CAAO,WAAW,EAAE,CAAC,CAAC;gBAChH,WAAW,GAAG,eAAe,CAAC,OAAO,GAAG,WAAW,GAAG,eAAe,CAAC,MAAM,CAAC;gBAC7E,IAAI,CAAC,CAAC,CAAO,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;gBAEnD,wBAAG,CAAgB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAO,EAAE,MAAM,CAAC,WAAW,EAAE,EAAE,eAAe,EAAE,CAAC,EAAE,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC;aACrG;QACF,CAAC;KACD,CAAA;IAtDK,kCAAkC;QAQrC,WAAA,mBAAG,CAAA;QACH,WAAA,qBAAG,CAAA;OATA,kCAAkC,CAsDvC;IAEM,IAAM,IAAI,YAAV,MAAM,IAAoC,SAAQ,eAAG;QAK3D,YACS,CAAoB,EACR,CAAwC;YAE5D,KAAK,EAAE,CAAC;YAHA,MAAC,GAAD,CAAC,CAAmB;YACS,MAAC,GAAD,CAAC,CAAsB;YAJ5C,MAAC,GAAM,IAAI,CAAC,CAAC,CAAO,2BAA2B,EAAE,CAAC;YAQlE,IAAI,CAAC,CAAC,GAAoB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,CAAc,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAsB,EAAE,GAAG,CAAC,CAAC,CAAC;YAExG,MAAM,KAAK,GAAG,IAAA,WAAG,EAAa,IAAI,CAAC,CAAC,CAAO,QAAQ,EAAE,CAAC,CAAC;YACvD,IAAI,CAAC,CAAC,CAAS,KAAK,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAkB,QAAQ,EAAE,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAkB,sBAAsB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAkB,QAAQ,EAAE,CAAC,CAAC,CAAC;YACzG,IAAI,CAAC,CAAC,CAAS;gBACd,OAAO,EAAE,GAAG,EAAE;oBACb,IAAI,CAAC,CAAC,CAAI,KAAK,EAAE,CAAC;oBAClB,IAAI,CAAC,CAAC,CAAkB,MAAM,EAAE,CAAC;gBAClC,CAAC;aACD,CAAC,CAAC;YACH,IAAI,CAAC,CAAC,CAAkB,QAAQ,EAAE,CAAC;QACpC,CAAC;QAEO,CAAC;YACR,MAAM,KAAK,GAAG,IAAA,WAAG,EAAa,IAAI,CAAC,CAAC,CAAO,QAAQ,EAAE,CAAC,CAAC;YAEvD,MAAM,cAAc,GAA4B,EAAE,CAAC;YAEnD,MAAM,IAAI,GAAG,IAAA,UAAG,EAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzC,IAAI,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;oBACzD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAsB,KAAK,EAAE,KAAK,CAAC,CAAC;oBACtD,IAAI,GAAG,KAAK,IAAI,EAAE;wBACjB,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACzB;iBACD;aACD;YAED,IAAI,CAAC,CAAC,CAAI,GAAG,CAAC,cAAc,CAAC,CAAC;QAC/B,CAAC;QAEO,CAAC,CAAsB,KAAiB,EAAE,KAAW;YAC5D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;gBACnC,OAAO,IAAI,CAAC;aACZ;YACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC1D,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;oBAC7B,SAAS;iBACT;gBACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBAChE,SAAS;iBACT;gBACD,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,GAAG,CAAC,KAAK,KAAK,KAAK,EAAE;oBACxB,SAAS;iBACT;gBACD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAC5B,SAAS;iBACT;gBAED,MAAM,mBAAmB,GAAG,IAAI,CAAC,CAAC,CAAkB,kBAAkB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACpF,IAAI,mBAAmB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACrC,OAAO,IAAI,CAAC,CAAC,CAAiB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;iBAC9D;gBACD,MAAM,kBAAkB,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,OAAO,GAAkB,IAAI,CAAC;gBAClC,IAAI,kBAAkB,YAAY,4BAAI,EAA6B;oBAClE,OAAO,GAAG,kBAAkB,CAAC,UAAU,EAAE,CAAC;iBAC1C;gBACD,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,EAAE;oBACpC,MAAM,OAAO,GAAG,kBAAkB,CAAC,QAAQ,EAAE,CAAC;oBAC9C,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,WAAW,EAAE,EAAE;wBACvF,2CAA2C;wBAC3C,OAAO,IAAI,CAAC;qBACZ;oBACD,OAAO,IAAI,CAAC,CAAC,CAAiB,KAAK,EAAE,kBAAkB,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;iBAC3F;gBACD,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;oBACnC,OAAO,IAAI,CAAC,CAAC,CAAiB,KAAK,EAAE,kBAAkB,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;iBAC3F;gBACD,MAAM,yBAAyB,GAAG,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;gBAC5E,IAAI,OAAO,yBAAyB,KAAK,QAAQ,IAAI,CAAC,MAAI,CAAgC,wBAAwB,CAAC,KAAK,CAAC,KAAK,EAAE,yBAAyB,CAAC,EAAE;oBAC3J,OAAO,IAAI,CAAC,CAAC,CAAiB,KAAK,EAAE,kBAAkB,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;iBAC3F;gBACD,OAAO,IAAI,CAAC;aACZ;YACD,OAAO,IAAI,CAAC;QACb,CAAC;QAED,MAAM,CAAC,wBAAwB,CAAC,CAAS,EAAE,CAAS;YACnD,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAC3B,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAE3B,IAAI,CAAC,KAAK,CAAC,EAAE;gBACZ,OAAO,IAAI,CAAC;aACZ;YAED,MAAM,WAAW,GAAG,sBAAG,CAAc,eAAe,CAAC,CAAC,CAAC,CAAC;YACxD,MAAM,WAAW,GAAG,sBAAG,CAAc,eAAe,CAAC,CAAC,CAAC,CAAC;YACxD,IAAI,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,IAAI,EAAE;gBACjD,OAAO,IAAI,CAAC;aACZ;YACD,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,EAAE;gBACjC,OAAO,KAAK,CAAC;aACb;YACD,OAAO,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACxC,CAAC;QAEO,CAAC,CAAiB,OAAgB,EAAE,OAAsB,EAAE,OAAsB,EAAE,KAAiB,EAAE,OAAa;YAC3H,IAAI,GAAQ,CAAY;YACxB,IAAI,SAAiB,CAAC;YACtB,IAAI,kBAA8B,CAAC;YAEnC,IAAI,OAAO,EAAE;gBACZ,yBAAyB;gBACzB,GAAG,GAAG,IAAI,iBAAG,EAAa,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC;gBACnE,SAAS,GAAG,iBAAiB,CAAC;gBAC9B,kBAAkB,GAAG,IAAA,kBAAG,EAAc,yBAAG,CAAgB,CAAC;aAC1D;iBAAM;gBACN,wBAAwB;gBACxB,IAAI,OAAO,IAAI,OAAO,KAAK,OAAO,EAAE;oBACnC,GAAG,GAAG,IAAI,iBAAG,CACZ,GAAG,CAAC,QAAQ,CAAC;wBACZ,GAAG,EAAE,4CAA4C;wBACjD,OAAO,EAAE;4BACR,6GAA6G;4BAC7G,wEAAwE;yBACxE;8DACD,EAAE,IAAqE,EAAE,OAAO,EAAE,OAAO,CAAC,CAC3F,CAAC;iBACF;qBAAM;oBACN,GAAG,GAAG,IAAI,iBAAG,CACZ,GAAG,CAAC,QAAQ,CAAC;wBACZ,GAAG,EAAE,uCAAuC;wBAC5C,OAAO,EAAE;4BACR,0GAA0G;4BAC1G,uEAAuE;yBACvE;8DACD,EAAE,IAA2C,EAAE,OAAO,CAAC,CACxD,CAAC;iBACF;gBACD,SAAS,GAAG,gBAAgB,CAAC;gBAC7B,kBAAkB,GAAG,IAAA,kBAAG,EAAc,yBAAG,CAAe,CAAC;aACzD;YAED,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC1D,MAAM,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;YACzE,MAAM,KAAK,GAAG,IAAI,WAAG,CACpB,aAAa,CAAC,UAAU,EAAE,aAAa,CAAC,MAAM,EAC9C,WAAW,CAAC,UAAU,EAAE,WAAW,CAAC,MAAM,CAC1C,CAAC;YAEF,wCAAwC;YACxC,OAAO;gBACN,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE;oBACR,WAAW,EAAE,oBAAoB;oBACjC,UAAU,4DAAoD;oBAC9D,SAAS,EAAE,SAAS;oBACpB,YAAY,EAAE,GAAG;oBACjB,aAAa,EAAE;wBACd,KAAK,EAAE,kBAAkB;wBACzB,QAAQ,EAAE,yBAAiB,CAAC,KAAK;qBACjC;iBACD;aACD,CAAC;QACH,CAAC;KAED,CAAA;IA7KY,oBAAI;mBAAJ,IAAI;QAOd,WAAA,gBAAG,CAAA;OAPO,IAAI,CA6KhB;IAED,SAAS,wBAAwB,CAAC,MAAmB,EAAE,sBAA2B;QACjF,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE;YACX,OAAO,KAAK,CAAC;SACb;QACD,OAAO,IAAA,eAAG,EAAK,KAAK,CAAC,GAAG,EAAE,sBAAsB,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;IACtF,CAAC;IAED,IAAA,sBAAG,EAAwB,iBAAG,EAAkC,kCAAkC,2DAAmD,CAAC","file":"keybindingsEditorContribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { MarkdownString } from 'vs/base/common/htmlContent';\nimport { Disposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Range } from 'vs/editor/common/core/range';\nimport { registerEditorContribution, EditorContributionInstantiation } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { SnippetController2 } from 'vs/editor/contrib/snippet/browser/snippetController2';\nimport { SmartSnippetInserter } from 'vs/workbench/contrib/preferences/common/smartSnippetInserter';\nimport { DefineKeybindingOverlayWidget } from 'vs/workbench/contrib/preferences/browser/keybindingWidgets';\nimport { parseTree, Node } from 'vs/base/common/json';\nimport { WindowsNativeResolvedKeybinding } from 'vs/workbench/services/keybinding/common/windowsKeyboardMapper';\nimport { themeColorFromId } from 'vs/platform/theme/common/themeService';\nimport { ThemeColor } from 'vs/base/common/themables';\nimport { overviewRulerInfo, overviewRulerError } from 'vs/editor/common/core/editorColorRegistry';\nimport { IModelDeltaDecoration, ITextModel, TrackedRangeStickiness, OverviewRulerLane } from 'vs/editor/common/model';\nimport { KeybindingParser } from 'vs/base/common/keybindingParser';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { isEqual } from 'vs/base/common/resources';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { DEFINE_KEYBINDING_EDITOR_CONTRIB_ID, IDefineKeybindingEditorContribution } from 'vs/workbench/services/preferences/common/preferences';\n\nconst NLS_KB_LAYOUT_ERROR_MESSAGE = nls.localize('defineKeybinding.kbLayoutErrorMessage', \"You won't be able to produce this key combination under your current keyboard layout.\");\n\nclass DefineKeybindingEditorContribution extends Disposable implements IDefineKeybindingEditorContribution {\n\n\tprivate _keybindingDecorationRenderer = this._register(new MutableDisposable<KeybindingEditorDecorationsRenderer>());\n\n\tprivate readonly _defineWidget: DefineKeybindingOverlayWidget;\n\n\tconstructor(\n\t\tprivate _editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IUserDataProfileService private readonly _userDataProfileService: IUserDataProfileService\n\t) {\n\t\tsuper();\n\n\t\tthis._defineWidget = this._register(this._instantiationService.createInstance(DefineKeybindingOverlayWidget, this._editor));\n\t\tthis._register(this._editor.onDidChangeModel(e => this._update()));\n\t\tthis._update();\n\t}\n\n\tprivate _update(): void {\n\t\tthis._keybindingDecorationRenderer.value = isInterestingEditorModel(this._editor, this._userDataProfileService)\n\t\t\t// Decorations are shown for the default keybindings.json **and** for the user keybindings.json\n\t\t\t? this._instantiationService.createInstance(KeybindingEditorDecorationsRenderer, this._editor)\n\t\t\t: undefined;\n\t}\n\n\tshowDefineKeybindingWidget(): void {\n\t\tif (isInterestingEditorModel(this._editor, this._userDataProfileService)) {\n\t\t\tthis._defineWidget.start().then(keybinding => this._onAccepted(keybinding));\n\t\t}\n\t}\n\n\tprivate _onAccepted(keybinding: string | null): void {\n\t\tthis._editor.focus();\n\t\tif (keybinding && this._editor.hasModel()) {\n\t\t\tconst regexp = new RegExp(/\\\\/g);\n\t\t\tconst backslash = regexp.test(keybinding);\n\t\t\tif (backslash) {\n\t\t\t\tkeybinding = keybinding.slice(0, -1) + '\\\\\\\\';\n\t\t\t}\n\t\t\tlet snippetText = [\n\t\t\t\t'{',\n\t\t\t\t'\\t\"key\": ' + JSON.stringify(keybinding) + ',',\n\t\t\t\t'\\t\"command\": \"${1:commandId}\",',\n\t\t\t\t'\\t\"when\": \"${2:editorTextFocus}\"',\n\t\t\t\t'}$0'\n\t\t\t].join('\\n');\n\n\t\t\tconst smartInsertInfo = SmartSnippetInserter.insertSnippet(this._editor.getModel(), this._editor.getPosition());\n\t\t\tsnippetText = smartInsertInfo.prepend + snippetText + smartInsertInfo.append;\n\t\t\tthis._editor.setPosition(smartInsertInfo.position);\n\n\t\t\tSnippetController2.get(this._editor)?.insert(snippetText, { overwriteBefore: 0, overwriteAfter: 0 });\n\t\t}\n\t}\n}\n\nexport class KeybindingEditorDecorationsRenderer extends Disposable {\n\n\tprivate _updateDecorations: RunOnceScheduler;\n\tprivate readonly _dec = this._editor.createDecorationsCollection();\n\n\tconstructor(\n\t\tprivate _editor: ICodeEditor,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) {\n\t\tsuper();\n\n\t\tthis._updateDecorations = this._register(new RunOnceScheduler(() => this._updateDecorationsNow(), 500));\n\n\t\tconst model = assertIsDefined(this._editor.getModel());\n\t\tthis._register(model.onDidChangeContent(() => this._updateDecorations.schedule()));\n\t\tthis._register(this._keybindingService.onDidUpdateKeybindings(() => this._updateDecorations.schedule()));\n\t\tthis._register({\n\t\t\tdispose: () => {\n\t\t\t\tthis._dec.clear();\n\t\t\t\tthis._updateDecorations.cancel();\n\t\t\t}\n\t\t});\n\t\tthis._updateDecorations.schedule();\n\t}\n\n\tprivate _updateDecorationsNow(): void {\n\t\tconst model = assertIsDefined(this._editor.getModel());\n\n\t\tconst newDecorations: IModelDeltaDecoration[] = [];\n\n\t\tconst root = parseTree(model.getValue());\n\t\tif (root && Array.isArray(root.children)) {\n\t\t\tfor (let i = 0, len = root.children.length; i < len; i++) {\n\t\t\t\tconst entry = root.children[i];\n\t\t\t\tconst dec = this._getDecorationForEntry(model, entry);\n\t\t\t\tif (dec !== null) {\n\t\t\t\t\tnewDecorations.push(dec);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._dec.set(newDecorations);\n\t}\n\n\tprivate _getDecorationForEntry(model: ITextModel, entry: Node): IModelDeltaDecoration | null {\n\t\tif (!Array.isArray(entry.children)) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (let i = 0, len = entry.children.length; i < len; i++) {\n\t\t\tconst prop = entry.children[i];\n\t\t\tif (prop.type !== 'property') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!Array.isArray(prop.children) || prop.children.length !== 2) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst key = prop.children[0];\n\t\t\tif (key.value !== 'key') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst value = prop.children[1];\n\t\t\tif (value.type !== 'string') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst resolvedKeybindings = this._keybindingService.resolveUserBinding(value.value);\n\t\t\tif (resolvedKeybindings.length === 0) {\n\t\t\t\treturn this._createDecoration(true, null, null, model, value);\n\t\t\t}\n\t\t\tconst resolvedKeybinding = resolvedKeybindings[0];\n\t\t\tlet usLabel: string | null = null;\n\t\t\tif (resolvedKeybinding instanceof WindowsNativeResolvedKeybinding) {\n\t\t\t\tusLabel = resolvedKeybinding.getUSLabel();\n\t\t\t}\n\t\t\tif (!resolvedKeybinding.isWYSIWYG()) {\n\t\t\t\tconst uiLabel = resolvedKeybinding.getLabel();\n\t\t\t\tif (typeof uiLabel === 'string' && value.value.toLowerCase() === uiLabel.toLowerCase()) {\n\t\t\t\t\t// coincidentally, this is actually WYSIWYG\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn this._createDecoration(false, resolvedKeybinding.getLabel(), usLabel, model, value);\n\t\t\t}\n\t\t\tif (/abnt_|oem_/.test(value.value)) {\n\t\t\t\treturn this._createDecoration(false, resolvedKeybinding.getLabel(), usLabel, model, value);\n\t\t\t}\n\t\t\tconst expectedUserSettingsLabel = resolvedKeybinding.getUserSettingsLabel();\n\t\t\tif (typeof expectedUserSettingsLabel === 'string' && !KeybindingEditorDecorationsRenderer._userSettingsFuzzyEquals(value.value, expectedUserSettingsLabel)) {\n\t\t\t\treturn this._createDecoration(false, resolvedKeybinding.getLabel(), usLabel, model, value);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tstatic _userSettingsFuzzyEquals(a: string, b: string): boolean {\n\t\ta = a.trim().toLowerCase();\n\t\tb = b.trim().toLowerCase();\n\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst aKeybinding = KeybindingParser.parseKeybinding(a);\n\t\tconst bKeybinding = KeybindingParser.parseKeybinding(b);\n\t\tif (aKeybinding === null && bKeybinding === null) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!aKeybinding || !bKeybinding) {\n\t\t\treturn false;\n\t\t}\n\t\treturn aKeybinding.equals(bKeybinding);\n\t}\n\n\tprivate _createDecoration(isError: boolean, uiLabel: string | null, usLabel: string | null, model: ITextModel, keyNode: Node): IModelDeltaDecoration {\n\t\tlet msg: MarkdownString;\n\t\tlet className: string;\n\t\tlet overviewRulerColor: ThemeColor;\n\n\t\tif (isError) {\n\t\t\t// this is the error case\n\t\t\tmsg = new MarkdownString().appendText(NLS_KB_LAYOUT_ERROR_MESSAGE);\n\t\t\tclassName = 'keybindingError';\n\t\t\toverviewRulerColor = themeColorFromId(overviewRulerError);\n\t\t} else {\n\t\t\t// this is the info case\n\t\t\tif (usLabel && uiLabel !== usLabel) {\n\t\t\t\tmsg = new MarkdownString(\n\t\t\t\t\tnls.localize({\n\t\t\t\t\t\tkey: 'defineKeybinding.kbLayoutLocalAndUSMessage',\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t'Please translate maintaining the stars (*) around the placeholders such that they will be rendered in bold.',\n\t\t\t\t\t\t\t'The placeholders will contain a keyboard combination e.g. Ctrl+Shift+/'\n\t\t\t\t\t\t]\n\t\t\t\t\t}, \"**{0}** for your current keyboard layout (**{1}** for US standard).\", uiLabel, usLabel)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmsg = new MarkdownString(\n\t\t\t\t\tnls.localize({\n\t\t\t\t\t\tkey: 'defineKeybinding.kbLayoutLocalMessage',\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t'Please translate maintaining the stars (*) around the placeholder such that it will be rendered in bold.',\n\t\t\t\t\t\t\t'The placeholder will contain a keyboard combination e.g. Ctrl+Shift+/'\n\t\t\t\t\t\t]\n\t\t\t\t\t}, \"**{0}** for your current keyboard layout.\", uiLabel)\n\t\t\t\t);\n\t\t\t}\n\t\t\tclassName = 'keybindingInfo';\n\t\t\toverviewRulerColor = themeColorFromId(overviewRulerInfo);\n\t\t}\n\n\t\tconst startPosition = model.getPositionAt(keyNode.offset);\n\t\tconst endPosition = model.getPositionAt(keyNode.offset + keyNode.length);\n\t\tconst range = new Range(\n\t\t\tstartPosition.lineNumber, startPosition.column,\n\t\t\tendPosition.lineNumber, endPosition.column\n\t\t);\n\n\t\t// icon + highlight + message decoration\n\t\treturn {\n\t\t\trange: range,\n\t\t\toptions: {\n\t\t\t\tdescription: 'keybindings-widget',\n\t\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\t\tclassName: className,\n\t\t\t\thoverMessage: msg,\n\t\t\t\toverviewRuler: {\n\t\t\t\t\tcolor: overviewRulerColor,\n\t\t\t\t\tposition: OverviewRulerLane.Right\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n}\n\nfunction isInterestingEditorModel(editor: ICodeEditor, userDataProfileService: IUserDataProfileService): boolean {\n\tconst model = editor.getModel();\n\tif (!model) {\n\t\treturn false;\n\t}\n\treturn isEqual(model.uri, userDataProfileService.currentProfile.keybindingsResource);\n}\n\nregisterEditorContribution(DEFINE_KEYBINDING_EDITOR_CONTRIB_ID, DefineKeybindingEditorContribution, EditorContributionInstantiation.AfterFirstRender);\n"]}