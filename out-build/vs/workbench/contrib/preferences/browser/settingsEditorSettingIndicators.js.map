{"version":3,"sources":["vs/workbench/contrib/preferences/browser/settingsEditorSettingIndicators.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAsBhG,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAqBhB;;;;OAIG;IACH,IAAI,4BAA4B,GAAgB,IAAI,GAAG,EAAU,CAAC;IAElE;;;OAGG;IACH,IAAI,yBAAyB,GAAa,EAAE,CAAC;IAE7C;;OAEG;IACI,IAAM,IAAI,GAAV,MAAM,IAAI;QAchB,YACC,SAAsB,EACU,CAA0C,EAC3D,CAAmC,EAClB,CAAoD,EAClE,CAAqC,EAC7B,CAA6C,EACtD,CAAoC;YALJ,MAAC,GAAD,CAAC,CAAwB;YAC1C,MAAC,GAAD,CAAC,CAAiB;YACD,MAAC,GAAD,CAAC,CAAkC;YACjD,MAAC,GAAD,CAAC,CAAmB;YACZ,MAAC,GAAD,CAAC,CAA2B;YACrC,MAAC,GAAD,CAAC,CAAkB;YAVrC,MAAC,GAAsC,IAAI,eAAG,EAAc,CAAC;YACtE,MAAC,GAAc,CAAC,CAAC;YAsBjB,MAAC,GAA6C;gBACrD,aAAa,6BAAqB;gBAClC,WAAW,EAAE,IAAI;gBACjB,OAAO,EAAE,KAAK;gBACd,SAAS,EAAE,IAAI;aACf,CAAC;YAjBD,IAAI,CAAC,CAAC,GAA4B,GAAG,CAAC,GAAG,CAAI,SAAS,EAAE,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC;YAC5F,IAAI,CAAC,CAAC,CAA0B,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;YAEzD,IAAI,CAAC,CAAC,GAAiB,IAAI,CAAC,CAAC,CAAuB,SAAS,EAAE,CAAC;YAEhE,IAAI,CAAC,CAAC,GAAyB,IAAI,CAAC,CAAC,EAA8B,CAAC;YACpE,IAAI,CAAC,CAAC,GAAyB,IAAI,CAAC,CAAC,EAA8B,CAAC;YACpE,IAAI,CAAC,CAAC,GAAsB,IAAI,CAAC,CAAC,EAA2B,CAAC;YAC9D,IAAI,CAAC,CAAC,GAA0B,IAAI,CAAC,CAAC,EAA+B,CAAC;YACtE,IAAI,CAAC,CAAC,GAAe,CAAC,IAAI,CAAC,CAAC,EAAwB,IAAI,CAAC,CAAC,EAAwB,IAAI,CAAC,CAAC,EAAqB,IAAI,CAAC,CAAC,CAAwB,CAAC;QAC7I,CAAC;QASO,CAAC,CAAmB,WAAgB,EAAc,OAAoB,EAAE,SAAuD;YACtI,WAAW,CAAC,KAAK,EAAE,CAAC;YACpB,MAAM,SAAS,GAAqB,WAAW,CAAC,GAAG,CAAC,IAAI,WAAG,CAAc,GAAG,EAAE;gBAC7E,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;gBAC/B,IAAI,KAAK,EAAE;oBACV,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACvB;YACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAS,uBAAuB,CAAC,CAAC,CAAC,CAAC;YACzE,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAmB,OAAO,EAAE,GAAG,CAAC,GAAG,CAAO,UAAU,EAAE,GAAG,EAAE;gBACjF,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE;oBAC7B,SAAS,CAAC,QAAQ,EAAE,CAAC;iBACrB;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAmB,OAAO,EAAE,GAAG,CAAC,GAAG,CAAO,WAAW,EAAE,GAAG,EAAE;gBAClF,SAAS,CAAC,MAAM,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC,CAAC;YACJ,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAmB,OAAO,EAAE,GAAG,CAAC,GAAG,CAAO,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;gBAChF,MAAM,GAAG,GAAG,IAAI,mBAAG,CAAmB,CAAC,CAAC,CAAC;gBACzC,IAAI,GAAG,CAAC,MAAM,wBAAe,IAAI,GAAG,CAAC,MAAM,uBAAe,EAAE;oBAC3D,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;oBAC9B,IAAI,KAAK,EAAE;wBACV,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACvB;oBACD,CAAC,CAAC,cAAc,EAAE,CAAC;iBACnB;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,CAAC;YACR,MAAM,qBAAqB,GAAG,CAAC,CAAC,qDAAqD,CAAC,CAAC;YACvF,MAAM,mBAAmB,GAAG,IAAI,qBAAG,CAAa,qBAAqB,CAAC,CAAC;YACvE,mBAAmB,CAAC,IAAI,GAAG,aAAa,GAAG,IAAA,cAAQ,EAAC,CAAyB,EAAE,IAA2B,CAAC,CAAC;YAE5G,MAAM,OAAO,GAAG,IAAA,cAAQ,EAAC,CAAY,EAAE,IAA+D,CAAC,CAAC;YACxG,MAAM,WAAW,GAAG,IAAI,eAAG,EAAc,CAAC;YAC1C,MAAM,SAAS,GAAG,CAAC,KAAc,EAAE,EAAE;gBACpC,OAAO,IAAI,CAAC,CAAC,CAAY,SAAS,CAAC;oBAClC,GAAG,IAAI,CAAC,CAAC;oBACT,OAAO;oBACP,MAAM,EAAE,qBAAqB;oBAC7B,OAAO,EAAE,CAAC;4BACT,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAsB,EAAE,IAAwB,CAAC;4BACjE,SAAS,EAAE,wBAAwB;4BACnC,GAAG,EAAE,CAAC,MAAmB,EAAE,EAAE;gCAC5B,IAAI,CAAC,CAAC,CAAc,cAAc,CAAC,wBAAwB,CAAC,CAAC;4BAC9D,CAAC;yBACD,CAAC;iBACF,EAAE,KAAK,CAAC,CAAC;YACX,CAAC,CAAC;YACF,IAAI,CAAC,CAAC,CAAmB,WAAW,EAAE,qBAAqB,EAAE,SAAS,CAAC,CAAC;YACxE,OAAO;gBACN,OAAO,EAAE,qBAAqB;gBAC9B,KAAK,EAAE,mBAAmB;gBAC1B,WAAW;aACX,CAAC;QACH,CAAC;QAEO,CAAC;YACR,sFAAsF;YACtF,MAAM,qBAAqB,GAAG,CAAC,CAAC,6BAA6B,CAAC,CAAC;YAC/D,MAAM,mBAAmB,GAAG,IAAI,qBAAG,CAAa,qBAAqB,CAAC,CAAC;YACvE,OAAO;gBACN,OAAO,EAAE,qBAAqB;gBAC9B,KAAK,EAAE,mBAAmB;gBAC1B,WAAW,EAAE,IAAI,eAAG,EAAc;aAClC,CAAC;QACH,CAAC;QAEO,CAAC;YACR,MAAM,kBAAkB,GAAG,CAAC,CAAC,6CAA6C,CAAC,CAAC;YAC5E,MAAM,gBAAgB,GAAG,IAAI,qBAAG,CAAa,kBAAkB,CAAC,CAAC;YACjE,gBAAgB,CAAC,IAAI,GAAG,IAAA,cAAQ,EAAC,CAA2B,EAAE,IAAY,CAAC,CAAC;YAE5E,MAAM,uBAAuB,GAAG,IAAA,cAAQ,EAAC,CAAkB,EAAE,IAAqC,CAAC,CAAC;YACpG,MAAM,WAAW,GAAG,IAAI,eAAG,EAAc,CAAC;YAC1C,MAAM,SAAS,GAAG,CAAC,KAAc,EAAE,EAAE;gBACpC,OAAO,IAAI,CAAC,CAAC,CAAY,SAAS,CAAC;oBAClC,GAAG,IAAI,CAAC,CAAC;oBACT,OAAO,EAAE,uBAAuB;oBAChC,MAAM,EAAE,kBAAkB;iBAC1B,EAAE,KAAK,CAAC,CAAC;YACX,CAAC,CAAC;YACF,IAAI,CAAC,CAAC,CAAmB,WAAW,EAAE,kBAAkB,EAAE,SAAS,CAAC,CAAC;YAErE,OAAO;gBACN,OAAO,EAAE,kBAAkB;gBAC3B,KAAK,EAAE,gBAAgB;gBACvB,WAAW,EAAE,IAAI,eAAG,EAAc;aAClC,CAAC;QACH,CAAC;QAEO,CAAC;YACR,MAAM,wBAAwB,GAAG,CAAC,CAAC,wDAAwD,CAAC,CAAC;YAC7F,MAAM,oBAAoB,GAAG,IAAI,qBAAG,CAAa,wBAAwB,CAAC,CAAC;YAC3E,oBAAoB,CAAC,IAAI,GAAG,IAAA,cAAQ,EAAC,CAAwB,EAAE,IAAuB,CAAC,CAAC;YAExF,OAAO;gBACN,OAAO,EAAE,wBAAwB;gBACjC,KAAK,EAAE,oBAAoB;gBAC3B,WAAW,EAAE,IAAI,eAAG,EAAc;aAClC,CAAC;QACH,CAAC;QAEO,CAAC;YACR,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAa,MAAM,CAAC,SAAS,CAAC,EAAE;gBAC9D,OAAO,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC;YACnD,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,CAAC,CAA0B,SAAS,GAAG,EAAE,CAAC;YAC/C,IAAI,CAAC,CAAC,CAA0B,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACvD,IAAI,gBAAgB,CAAC,MAAM,EAAE;gBAC5B,IAAI,CAAC,CAAC,CAA0B,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;gBACzD,GAAG,CAAC,GAAG,CAAI,IAAI,CAAC,CAAC,EAA2B,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;gBACvE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBACrD,GAAG,CAAC,GAAG,CAAI,IAAI,CAAC,CAAC,EAA2B,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oBACzE,GAAG,CAAC,GAAG,CAAI,IAAI,CAAC,CAAC,EAA2B,CAAC,CAAC,YAAY,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;iBAC/E;gBACD,GAAG,CAAC,GAAG,CAAI,IAAI,CAAC,CAAC,EAA2B,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gBACnG,GAAG,CAAC,GAAG,CAAI,IAAI,CAAC,CAAC,EAA2B,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;gBACvE,IAAI,CAAC,CAAC,CAAmC,gBAAgB,CAAC,CAAC;aAC3D;QACF,CAAC;QAEO,CAAC,CAAmC,UAA8B;YACzE,IAAI,CAAC,CAAC,CAAmB,KAAK,EAAE,CAAC;YACjC,IAAI,CAAC,CAAC,CAA0B,IAAI,GAAG,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;YACrF,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACvB,OAAO;aACP;YACD,MAAM,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACzE,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;YAC1B,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAmB,IAAI,CAAC,CAAC,EAA2B,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;gBACxG,MAAM,EAAE,GAAG,IAAI,mBAAG,CAAmB,CAAC,CAAC,CAAC;gBACxC,IAAI,OAAO,GAAG,IAAI,CAAC;gBACnB,IAAI,EAAE,CAAC,MAAM,uBAAc,EAAE;oBAC5B,IAAI,CAAC,CAAC,CAAgB,UAAU,EAAE,CAAC,CAAC,CAAC;iBACrC;qBAAM,IAAI,EAAE,CAAC,MAAM,sBAAa,EAAE;oBAClC,IAAI,CAAC,CAAC,CAAgB,UAAU,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;iBACzD;qBAAM,IAAI,EAAE,CAAC,MAAM,6BAAoB,EAAE;oBACzC,MAAM,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,GAAc,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC;oBACjE,IAAI,CAAC,CAAC,CAAgB,UAAU,EAAE,YAAY,CAAC,CAAC;iBAChD;qBAAM,IAAI,EAAE,CAAC,MAAM,4BAAmB,EAAE;oBACxC,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAY,CAAC,CAAC,IAAI,CAAC,CAAC,GAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;oBACvF,IAAI,CAAC,CAAC,CAAgB,UAAU,EAAE,YAAY,CAAC,CAAC;iBAChD;qBAAM;oBACN,OAAO,GAAG,KAAK,CAAC;iBAChB;gBAED,IAAI,OAAO,EAAE;oBACZ,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;iBACpB;YACF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,CAAC,CAAgB,UAA8B,EAAE,KAAa;YACrE,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,EAAa;gBAChC,OAAO;aACP;YACD,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;YACpC,MAAM,cAAc,GAAG,SAAS,CAAC,YAAY,IAAI,SAAS,CAAC,OAAO,CAAC;YACnE,cAAc,CAAC,QAAQ,GAAG,CAAC,CAAC;YAC5B,cAAc,CAAC,KAAK,EAAE,CAAC;YAEvB,MAAM,yBAAyB,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAY,CAAC;YAChE,MAAM,sBAAsB,GAAG,yBAAyB,CAAC,YAAY,IAAI,yBAAyB,CAAC,OAAO,CAAC;YAC3G,sBAAsB,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;YAErC,IAAI,CAAC,CAAC,GAAc,KAAK,CAAC;QAC3B,CAAC;QAED,oBAAoB,CAAC,OAAa;YACjC,IAAI,CAAC,CAAC,CAAuB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;YAC7F,IAAI,CAAC,CAAC,EAAO,CAAC;QACf,CAAC;QAED,iBAAiB,CAAC,OAAa,EAAwB,eAAyB;YAC/E,IAAI,CAAC,CAAC,CAAoB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAA6B,SAAS,EAAE;mBAC5F,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;YACtE,IAAI,CAAC,CAAC,EAAO,CAAC;YACd,IAAI,yBAAyB,KAAK,eAAe,EAAE;gBAClD,yBAAyB,GAAG,eAAe,CAAC;gBAC5C,4BAA4B,GAAG,IAAI,GAAG,CAAS,yBAAyB,CAAC,CAAC;aAC1E;QACF,CAAC;QAEO,CAAC,CAAyB,aAAqB;YACtD,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnD,MAAM,cAAc,GAAG,KAAK,KAAK,MAAM,CAAC,CAAC;gBACxC,IAAA,cAAQ,EAAC,CAAM,EAAE,IAAM,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;gBACjD,IAAA,cAAQ,EAAC,CAAW,EAAE,IAAW,CAAC,CAAC,CAAC,CAAC,IAAA,cAAQ,EAAC,CAAQ,EAAE,IAAQ,CAAC,CAAC;YACpE,IAAI,QAAQ,EAAE;gBACb,OAAO,GAAG,IAAI,CAAC,CAAC,CAAe,eAAe,CAAC,QAAQ,CAAC,MAAM,cAAc,EAAE,CAAC;aAC/E;YACD,OAAO,cAAc,CAAC;QACvB,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAmB,OAAO,EAAE,CAAC;YACnC,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,CAAC,EAAc;gBAC3C,SAAS,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;aAChC;QACF,CAAC;QAED,oBAAoB,CAAC,OAAa,EAAwB,yBAA8D,EAAE,aAA8B;YACvJ,IAAI,CAAC,CAAC,CAAuB,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC;YACpD,IAAI,CAAC,CAAC,CAAuB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YAC5D,IAAI,CAAC,CAAC,CAAuB,YAAY,GAAG,IAAI,CAAC,CAAC,CAAuB,OAAO,CAAC;YACjF,IAAI,OAAO,CAAC,cAAc,EAAE;gBAC3B,yGAAyG;gBACzG,IAAI,CAAC,CAAC,CAAuB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;gBAC9D,IAAI,CAAC,CAAC,CAAuB,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gBAExE,IAAI,CAAC,CAAC,CAAuB,KAAK,CAAC,IAAI,GAAG,aAAa,GAAG,IAAA,cAAQ,EAAC,CAAiB,EAAE,IAA2B,CAAC,CAAC;gBACnH,MAAM,OAAO,GAAG,IAAA,cAAQ,EAAC,EAAmB,EAAE,IAAuF,CAAC,CAAC;gBACvI,MAAM,SAAS,GAAG,CAAC,KAAc,EAAE,EAAE;oBACpC,OAAO,IAAI,CAAC,CAAC,CAAY,SAAS,CAAC;wBAClC,GAAG,IAAI,CAAC,CAAC;wBACT,OAAO;wBACP,OAAO,EAAE,CAAC;gCACT,KAAK,EAAE,IAAA,cAAQ,EAAC,EAAkB,EAAE,IAAsB,CAAC;gCAC3D,SAAS,EAAE,qCAAqC;gCAChD,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE;oCACV,aAAa,CAAC,IAAI,CAAC,IAAI,kBAAI,EAAgB,CAAC,CAAC;gCAC9C,CAAC;6BACD,CAAC;wBACF,MAAM,EAAE,IAAI,CAAC,CAAC,CAAuB,OAAO;qBAC5C,EAAE,KAAK,CAAC,CAAC;gBACX,CAAC,CAAC;gBACF,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,CAAC,CAAuB,WAAW,EAAE,IAAI,CAAC,CAAC,CAAuB,OAAO,EAAE,SAAS,CAAC,CAAC;aACpH;iBAAM,IAAI,IAAI,CAAC,CAAC,IAAkB,OAAO,CAAC,cAAc,2CAAmC,IAAI,IAAI,CAAC,CAAC,CAAoB,8BAA8B,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBAC9K,IAAI,CAAC,CAAC,CAAuB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;gBAC9D,IAAI,CAAC,CAAC,CAAuB,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gBAExE,IAAI,CAAC,CAAC,CAAuB,KAAK,CAAC,IAAI,GAAG,IAAA,cAAQ,EAAC,EAAoB,EAAE,IAAyB,CAAC,CAAC;gBAEpG,MAAM,OAAO,GAAG,IAAA,cAAQ,EAAC,EAA+B,EAAE,IAAwG,CAAC,CAAC;gBACpK,MAAM,SAAS,GAAG,CAAC,KAAc,EAAE,EAAE;oBACpC,OAAO,IAAI,CAAC,CAAC,CAAY,SAAS,CAAC;wBAClC,GAAG,IAAI,CAAC,CAAC;wBACT,OAAO;wBACP,MAAM,EAAE,IAAI,CAAC,CAAC,CAAuB,OAAO;qBAC5C,EAAE,KAAK,CAAC,CAAC;gBACX,CAAC,CAAC;gBACF,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,CAAC,CAAuB,WAAW,EAAE,IAAI,CAAC,CAAC,CAAuB,OAAO,EAAE,SAAS,CAAC,CAAC;aACpH;iBAAM,IAAI,OAAO,CAAC,mBAAmB,CAAC,MAAM,IAAI,OAAO,CAAC,8BAA8B,CAAC,MAAM,EAAE;gBAC/F,IAAI,OAAO,CAAC,mBAAmB,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,8BAA8B,CAAC,MAAM,EAAE;oBAC/F,gEAAgE;oBAChE,yDAAyD;oBACzD,gDAAgD;oBAChD,IAAI,CAAC,CAAC,CAAuB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;oBAC9D,IAAI,CAAC,CAAC,CAAuB,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;oBAC3E,IAAI,CAAC,CAAC,CAAuB,WAAW,CAAC,KAAK,EAAE,CAAC;oBAEjD,MAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;wBACzC,IAAA,cAAQ,EAAC,EAAkB,EAAE,IAAkB,CAAC,CAAC,CAAC;wBAClD,IAAA,cAAQ,EAAC,EAAc,EAAE,IAAa,CAAC,CAAC;oBACzC,IAAI,CAAC,CAAC,CAAuB,KAAK,CAAC,IAAI,GAAG,GAAG,WAAW,GAAG,CAAC;oBAE5D,MAAM,eAAe,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;oBACvD,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAI,IAAI,CAAC,CAAC,CAAuB,OAAO,EAAE,CAAC,CAAC,kBAAkB,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,CAAyB,eAAe,CAAC,CAAC,CAAC,CAAC;oBACjJ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,CAAC,CAAuB,YAAY,GAAG,IAAI,CAAC;oBACjD,MAAM,gBAAgB,GAAG,CAAC,CAAU,EAAE,EAAE;wBACvC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACrD,yBAAyB,CAAC,IAAI,CAAC;4BAC9B,UAAU,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG;4BAC/B,KAAK,EAAE,KAAoB;4BAC3B,QAAQ;yBACR,CAAC,CAAC;wBACH,CAAC,CAAC,cAAc,EAAE,CAAC;wBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;oBACrB,CAAC,CAAC;oBACF,IAAI,CAAC,CAAC,CAAuB,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAmB,IAAI,EAAE,GAAG,CAAC,GAAG,CAAO,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE;wBACvG,gBAAgB,CAAC,CAAC,CAAC,CAAC;oBACrB,CAAC,CAAC,CAAC,CAAC;oBACJ,IAAI,CAAC,CAAC,CAAuB,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAmB,IAAI,EAAE,GAAG,CAAC,GAAG,CAAO,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;wBAC1G,MAAM,EAAE,GAAG,IAAI,mBAAG,CAAmB,CAAC,CAAC,CAAC;wBACxC,IAAI,EAAE,CAAC,MAAM,wBAAe,IAAI,EAAE,CAAC,MAAM,uBAAe,EAAE;4BACzD,gBAAgB,CAAC,CAAC,CAAC,CAAC;yBACpB;oBACF,CAAC,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACN,IAAI,CAAC,CAAC,CAAuB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;oBAC9D,IAAI,CAAC,CAAC,CAAuB,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;oBACxE,MAAM,uBAAuB,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;wBACrD,IAAA,cAAQ,EAAC,EAAyB,EAAE,IAAyB,CAAC,CAAC,CAAC;wBAChE,IAAA,cAAQ,EAAC,EAAqB,EAAE,IAAoB,CAAC,CAAC;oBACvD,IAAI,CAAC,CAAC,CAAuB,KAAK,CAAC,IAAI,GAAG,uBAAuB,CAAC;oBAElE,IAAI,qBAAqB,GAAG,EAAE,CAAC;oBAC/B,IAAI,OAAO,CAAC,mBAAmB,CAAC,MAAM,EAAE;wBACvC,MAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;4BACzC,IAAA,cAAQ,EAAC,EAAsB,EAAE,IAA6D,CAAC,CAAC,CAAC;4BACjG,IAAA,cAAQ,EAAC,EAAkB,EAAE,IAAwD,CAAC,CAAC;wBACxF,qBAAqB,GAAG,WAAW,CAAC;wBACpC,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,mBAAmB,EAAE;4BAChD,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAyB,KAAK,CAAC,CAAC;4BAC/D,qBAAqB,IAAI,QAAQ,gBAAgB,KAAK,kBAAkB,CAAC,KAAK,CAAC,KAAK,6BAA6B,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAe,IAAI,CAAC;yBACnJ;qBACD;oBACD,IAAI,OAAO,CAAC,8BAA8B,CAAC,MAAM,EAAE;wBAClD,IAAI,qBAAqB,EAAE;4BAC1B,qBAAqB,IAAI,MAAM,CAAC;yBAChC;wBACD,MAAM,WAAW,GAAG,IAAA,cAAQ,EAAC,EAAiC,EAAE,IAAiD,CAAC,CAAC;wBACnH,qBAAqB,IAAI,WAAW,CAAC;wBACrC,KAAK,MAAM,QAAQ,IAAI,OAAO,CAAC,8BAA8B,EAAE;4BAC9D,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAe,eAAe,CAAC,QAAQ,CAAC,CAAC;4BACxE,qBAAqB,IAAI,QAAQ,gBAAgB,KAAK,kBAAkB,CAAC,WAAW,QAAQ,EAAE,CAAC,KAAK,gBAAgB,IAAI,CAAC;yBACzH;qBACD;oBACD,MAAM,OAAO,GAAoB;wBAChC,KAAK,EAAE,qBAAqB;wBAC5B,SAAS,EAAE,KAAK;wBAChB,WAAW,EAAE,KAAK;qBAClB,CAAC;oBACF,MAAM,SAAS,GAAG,CAAC,KAAc,EAAE,EAAE;wBACpC,OAAO,IAAI,CAAC,CAAC,CAAY,SAAS,CAAC;4BAClC,GAAG,IAAI,CAAC,CAAC;4BACT,OAAO;4BACP,WAAW,EAAE,CAAC,GAAW,EAAE,EAAE;gCAC5B,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gCAC7D,yBAAyB,CAAC,IAAI,CAAC;oCAC9B,UAAU,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG;oCAC/B,KAAK,EAAE,KAAoB;oCAC3B,QAAQ;iCACR,CAAC,CAAC;4BACJ,CAAC;4BACD,MAAM,EAAE,IAAI,CAAC,CAAC,CAAuB,OAAO;yBAC5C,EAAE,KAAK,CAAC,CAAC;oBACX,CAAC,CAAC;oBACF,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,CAAC,CAAuB,WAAW,EAAE,IAAI,CAAC,CAAC,CAAuB,OAAO,EAAE,SAAS,CAAC,CAAC;iBACpH;aACD;YACD,IAAI,CAAC,CAAC,EAAO,CAAC;QACf,CAAC;QAED,8BAA8B,CAAC,OAAa;YAC3C,IAAI,CAAC,CAAC,CAAwB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YAC7D,MAAM,eAAe,GAAG,8BAA8B,CAAC,OAAO,CAAC,CAAC;YAChE,IAAI,eAAe,KAAK,SAAS,EAAE;gBAClC,IAAI,CAAC,CAAC,CAAwB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;gBAC/D,IAAI,CAAC,CAAC,CAAwB,WAAW,CAAC,KAAK,EAAE,CAAC;gBAElD,MAAM,2BAA2B,GAAG,IAAA,cAAQ,EAAC,EAA0B,EAAE,IAAyC,EAAE,eAAe,CAAC,CAAC;gBACrI,MAAM,SAAS,GAAG,CAAC,KAAc,EAAE,EAAE;oBACpC,OAAO,IAAI,CAAC,CAAC,CAAY,SAAS,CAAC;wBAClC,OAAO,EAAE,2BAA2B;wBACpC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAwB,OAAO;wBAC7C,aAAa,6BAAqB;wBAClC,WAAW,EAAE,IAAI;wBACjB,OAAO,EAAE,KAAK;qBACd,EAAE,KAAK,CAAC,CAAC;gBACX,CAAC,CAAC;gBACF,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,CAAC,CAAwB,WAAW,EAAE,IAAI,CAAC,CAAC,CAAwB,OAAO,EAAE,SAAS,CAAC,CAAC;aACtH;YACD,IAAI,CAAC,CAAC,EAAO,CAAC;QACf,CAAC;KACD,CAAA;IAhZY,oBAAI;mBAAJ,IAAI;QAgBd,WAAA,mBAAG,CAAA;QACH,WAAA,YAAI,CAAA;QACJ,WAAA,mBAAI,CAAA;QACJ,WAAA,cAAG,CAAA;QACH,WAAA,qBAAG,CAAA;QACH,WAAA,cAAG,CAAA;OArBO,IAAI,CAgZhB;IAED,SAAS,8BAA8B,CAAC,OAAa;QACpD,IAAI,eAAmC,CAAC;QACxC,MAAM,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;QACtD,IAAI,kBAAkB,EAAE;YACvB,IAAI,OAAO,kBAAkB,KAAK,QAAQ,EAAE;gBAC3C,eAAe,GAAG,kBAAkB,CAAC,WAAW,IAAI,kBAAkB,CAAC,EAAE,CAAC;aAC1E;iBAAM,IAAI,OAAO,kBAAkB,KAAK,QAAQ,EAAE;gBAClD,eAAe,GAAG,kBAAkB,CAAC;aACrC;SACD;QACD,OAAO,eAAe,CAAC;IACxB,CAAC;IAED,SAAS,6BAA6B,CAAC,aAAqB,EAAE,eAAoB;QACjF,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnD,MAAM,cAAc,GAAG,KAAK,KAAK,MAAM,CAAC,CAAC;YACxC,IAAA,cAAQ,EAAC,EAAM,EAAE,IAAM,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;YACjD,IAAA,cAAQ,EAAC,EAAW,EAAE,IAAW,CAAC,CAAC,CAAC,CAAC,IAAA,cAAQ,EAAC,EAAQ,EAAE,IAAQ,CAAC,CAAC;QACpE,IAAI,QAAQ,EAAE;YACb,OAAO,IAAA,cAAQ,EAAC,EAA4B,EAAE,IAAuB,EAAE,cAAc,EAAE,eAAe,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;SAClI;QACD,OAAO,cAAc,CAAC;IACvB,CAAC;IAED,SAAS,wCAAwC,CAAC,aAAqB,EAAE,eAAoB;QAC5F,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnD,MAAM,cAAc,GAAG,KAAK,KAAK,MAAM,CAAC,CAAC;YACxC,IAAA,cAAQ,EAAC,EAAM,EAAE,IAAM,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;YACjD,IAAA,cAAQ,EAAC,EAAW,EAAE,IAAW,CAAC,CAAC,CAAC,CAAC,IAAA,cAAQ,EAAC,EAAQ,EAAE,IAAQ,CAAC,CAAC;QACpE,IAAI,QAAQ,EAAE;YACb,OAAO,IAAA,cAAQ,EAAC,EAAuC,EAAE,IAAuB,EAAE,cAAc,CAAC,WAAW,EAAE,EAAE,eAAe,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC3J;QACD,OAAO,cAAc,CAAC;IACvB,CAAC;IAED,SAAgB,IAAI,CAAwB,OAAa,EAAwB,oBAAyB,EAA6B,uBAA4B,EAAuB,eAAoB;QAC7M,MAAM,iBAAiB,GAAa,EAAE,CAAC;QAEvC,2BAA2B;QAC3B,IAAI,OAAO,CAAC,WAAW,EAAE;YACxB,iBAAiB,CAAC,IAAI,CAAC,IAAA,cAAQ,EAAC,EAA6B,EAAE,IAAgD,CAAC,CAAC,CAAC;SAClH;QAED,IAAI,OAAO,CAAC,cAAc,EAAE;YAC3B,iBAAiB,CAAC,IAAI,CAAC,IAAA,cAAQ,EAAC,EAA6B,EAAE,IAA2D,CAAC,CAAC,CAAC;SAC7H;aAAM,IAAI,uBAAuB,CAAC,SAAS,EAAE,IAAI,OAAO,CAAC,cAAc,2CAAmC,IAAI,oBAAoB,CAAC,8BAA8B,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACxL,iBAAiB,CAAC,IAAI,CAAC,IAAA,cAAQ,EAAC,EAAyC,EAAE,IAAgD,CAAC,CAAC,CAAC;SAC9H;aAAM;YACN,2BAA2B;YAC3B,MAAM,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;gBACjD,IAAA,cAAQ,EAAC,EAAkB,EAAE,IAAkB,CAAC,CAAC,CAAC;gBAClD,IAAA,cAAQ,EAAC,EAAc,EAAE,IAAa,CAAC,CAAC;YACzC,MAAM,kBAAkB,GAAG,OAAO,CAAC,mBAAmB;iBACpD,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,wCAAwC,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5F,IAAI,OAAO,CAAC,mBAAmB,CAAC,MAAM,EAAE;gBACvC,iBAAiB,CAAC,IAAI,CAAC,GAAG,mBAAmB,IAAI,kBAAkB,EAAE,CAAC,CAAC;aACvE;SACD;QAED,wBAAwB;QACxB,IAAI,4BAA4B,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC1D,iBAAiB,CAAC,IAAI,CAAC,IAAA,cAAQ,EAAC,EAAsB,EAAE,IAA6B,CAAC,CAAC,CAAC;SACxF;QAED,sCAAsC;QACtC,MAAM,eAAe,GAAG,8BAA8B,CAAC,OAAO,CAAC,CAAC;QAChE,IAAI,eAAe,KAAK,SAAS,EAAE;YAClC,iBAAiB,CAAC,IAAI,CAAC,IAAA,cAAQ,EAAC,EAAmC,EAAE,IAAiC,EAAE,eAAe,CAAC,CAAC,CAAC;SAC1H;QAED,oEAAoE;QACpE,MAAM,0BAA0B,GAAG,OAAO,CAAC,8BAA8B;aACvE,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,eAAe,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxE,IAAI,OAAO,CAAC,8BAA8B,CAAC,MAAM,EAAE;YAClD,MAAM,0BAA0B,GAAG,IAAA,cAAQ,EAAC,EAAgC,EAAE,IAAgD,EAAE,0BAA0B,CAAC,CAAC;YAC5J,iBAAiB,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;SACnD;QAED,MAAM,SAAS,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,OAAO,SAAS,CAAC;IAClB,CAAC;IA7CD,oBA6CC","file":"settingsEditorSettingIndicators.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { HoverPosition } from 'vs/base/browser/ui/hover/hoverWidget';\nimport { SimpleIconLabel } from 'vs/base/browser/ui/iconLabel/simpleIconLabel';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Emitter } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { IDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { localize } from 'vs/nls';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';\nimport { IUserDataSyncEnablementService } from 'vs/platform/userDataSync/common/userDataSync';\nimport { SettingsTreeSettingElement } from 'vs/workbench/contrib/preferences/browser/settingsTreeModels';\nimport { POLICY_SETTING_TAG } from 'vs/workbench/contrib/preferences/common/preferences';\nimport { IWorkbenchConfigurationService } from 'vs/workbench/services/configuration/common/configuration';\nimport { IHoverOptions, IHoverService, IHoverWidget } from 'vs/workbench/services/hover/browser/hover';\n\nconst $ = DOM.$;\n\ntype ScopeString = 'workspace' | 'user' | 'remote' | 'default';\n\nexport interface ISettingOverrideClickEvent {\n\tscope: ScopeString;\n\tlanguage: string;\n\tsettingKey: string;\n}\n\ninterface SettingIndicator {\n\telement: HTMLElement;\n\t/**\n\t * The element to focus on when navigating with keyboard.\n\t * When undefined, use {@link element} instead.\n\t */\n\tfocusElement?: HTMLElement;\n\tlabel: SimpleIconLabel;\n\tdisposables: DisposableStore;\n}\n\n/**\n * Contains a set of the sync-ignored settings\n * to keep the sync ignored indicator and the getIndicatorsLabelAriaLabel() function in sync.\n * SettingsTreeIndicatorsLabel#updateSyncIgnored provides the source of truth.\n */\nlet cachedSyncIgnoredSettingsSet: Set<string> = new Set<string>();\n\n/**\n * Contains a copy of the sync-ignored settings to determine when to update\n * cachedSyncIgnoredSettingsSet.\n */\nlet cachedSyncIgnoredSettings: string[] = [];\n\n/**\n * Renders the indicators next to a setting, such as \"Also Modified In\".\n */\nexport class SettingsTreeIndicatorsLabel implements IDisposable {\n\tprivate readonly indicatorsContainerElement: HTMLElement;\n\n\tprivate readonly workspaceTrustIndicator: SettingIndicator;\n\tprivate readonly scopeOverridesIndicator: SettingIndicator;\n\tprivate readonly syncIgnoredIndicator: SettingIndicator;\n\tprivate readonly defaultOverrideIndicator: SettingIndicator;\n\tprivate readonly allIndicators: SettingIndicator[];\n\n\tprivate readonly profilesEnabled: boolean;\n\n\tprivate readonly keybindingListeners: DisposableStore = new DisposableStore();\n\tprivate focusedIndex = 0;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\t@IWorkbenchConfigurationService private readonly configurationService: IWorkbenchConfigurationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@ICommandService private readonly commandService: ICommandService) {\n\t\tthis.indicatorsContainerElement = DOM.append(container, $('.setting-indicators-container'));\n\t\tthis.indicatorsContainerElement.style.display = 'inline';\n\n\t\tthis.profilesEnabled = this.userDataProfilesService.isEnabled();\n\n\t\tthis.workspaceTrustIndicator = this.createWorkspaceTrustIndicator();\n\t\tthis.scopeOverridesIndicator = this.createScopeOverridesIndicator();\n\t\tthis.syncIgnoredIndicator = this.createSyncIgnoredIndicator();\n\t\tthis.defaultOverrideIndicator = this.createDefaultOverrideIndicator();\n\t\tthis.allIndicators = [this.workspaceTrustIndicator, this.scopeOverridesIndicator, this.syncIgnoredIndicator, this.defaultOverrideIndicator];\n\t}\n\n\tprivate defaultHoverOptions: Partial<IHoverOptions> = {\n\t\thoverPosition: HoverPosition.BELOW,\n\t\tshowPointer: true,\n\t\tcompact: false,\n\t\ttrapFocus: true\n\t};\n\n\tprivate addHoverDisposables(disposables: DisposableStore, element: HTMLElement, showHover: (focus: boolean) => IHoverWidget | undefined) {\n\t\tdisposables.clear();\n\t\tconst scheduler: RunOnceScheduler = disposables.add(new RunOnceScheduler(() => {\n\t\t\tconst hover = showHover(false);\n\t\t\tif (hover) {\n\t\t\t\tdisposables.add(hover);\n\t\t\t}\n\t\t}, this.configurationService.getValue<number>('workbench.hover.delay')));\n\t\tdisposables.add(DOM.addDisposableListener(element, DOM.EventType.MOUSE_OVER, () => {\n\t\t\tif (!scheduler.isScheduled()) {\n\t\t\t\tscheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(DOM.addDisposableListener(element, DOM.EventType.MOUSE_LEAVE, () => {\n\t\t\tscheduler.cancel();\n\t\t}));\n\t\tdisposables.add(DOM.addDisposableListener(element, DOM.EventType.KEY_DOWN, (e) => {\n\t\t\tconst evt = new StandardKeyboardEvent(e);\n\t\t\tif (evt.equals(KeyCode.Space) || evt.equals(KeyCode.Enter)) {\n\t\t\t\tconst hover = showHover(true);\n\t\t\t\tif (hover) {\n\t\t\t\t\tdisposables.add(hover);\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate createWorkspaceTrustIndicator(): SettingIndicator {\n\t\tconst workspaceTrustElement = $('span.setting-indicator.setting-item-workspace-trust');\n\t\tconst workspaceTrustLabel = new SimpleIconLabel(workspaceTrustElement);\n\t\tworkspaceTrustLabel.text = '$(warning) ' + localize('workspaceUntrustedLabel', \"Setting value not applied\");\n\n\t\tconst content = localize('trustLabel', \"The setting value can only be applied in a trusted workspace.\");\n\t\tconst disposables = new DisposableStore();\n\t\tconst showHover = (focus: boolean) => {\n\t\t\treturn this.hoverService.showHover({\n\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\tcontent,\n\t\t\t\ttarget: workspaceTrustElement,\n\t\t\t\tactions: [{\n\t\t\t\t\tlabel: localize('manageWorkspaceTrust', \"Manage Workspace Trust\"),\n\t\t\t\t\tcommandId: 'workbench.trust.manage',\n\t\t\t\t\trun: (target: HTMLElement) => {\n\t\t\t\t\t\tthis.commandService.executeCommand('workbench.trust.manage');\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t}, focus);\n\t\t};\n\t\tthis.addHoverDisposables(disposables, workspaceTrustElement, showHover);\n\t\treturn {\n\t\t\telement: workspaceTrustElement,\n\t\t\tlabel: workspaceTrustLabel,\n\t\t\tdisposables\n\t\t};\n\t}\n\n\tprivate createScopeOverridesIndicator(): SettingIndicator {\n\t\t// Don't add .setting-indicator class here, because it gets conditionally added later.\n\t\tconst otherOverridesElement = $('span.setting-item-overrides');\n\t\tconst otherOverridesLabel = new SimpleIconLabel(otherOverridesElement);\n\t\treturn {\n\t\t\telement: otherOverridesElement,\n\t\t\tlabel: otherOverridesLabel,\n\t\t\tdisposables: new DisposableStore()\n\t\t};\n\t}\n\n\tprivate createSyncIgnoredIndicator(): SettingIndicator {\n\t\tconst syncIgnoredElement = $('span.setting-indicator.setting-item-ignored');\n\t\tconst syncIgnoredLabel = new SimpleIconLabel(syncIgnoredElement);\n\t\tsyncIgnoredLabel.text = localize('extensionSyncIgnoredLabel', 'Not synced');\n\n\t\tconst syncIgnoredHoverContent = localize('syncIgnoredTitle', \"This setting is ignored during sync\");\n\t\tconst disposables = new DisposableStore();\n\t\tconst showHover = (focus: boolean) => {\n\t\t\treturn this.hoverService.showHover({\n\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\tcontent: syncIgnoredHoverContent,\n\t\t\t\ttarget: syncIgnoredElement\n\t\t\t}, focus);\n\t\t};\n\t\tthis.addHoverDisposables(disposables, syncIgnoredElement, showHover);\n\n\t\treturn {\n\t\t\telement: syncIgnoredElement,\n\t\t\tlabel: syncIgnoredLabel,\n\t\t\tdisposables: new DisposableStore()\n\t\t};\n\t}\n\n\tprivate createDefaultOverrideIndicator(): SettingIndicator {\n\t\tconst defaultOverrideIndicator = $('span.setting-indicator.setting-item-default-overridden');\n\t\tconst defaultOverrideLabel = new SimpleIconLabel(defaultOverrideIndicator);\n\t\tdefaultOverrideLabel.text = localize('defaultOverriddenLabel', \"Default value changed\");\n\n\t\treturn {\n\t\t\telement: defaultOverrideIndicator,\n\t\t\tlabel: defaultOverrideLabel,\n\t\t\tdisposables: new DisposableStore()\n\t\t};\n\t}\n\n\tprivate render() {\n\t\tconst indicatorsToShow = this.allIndicators.filter(indicator => {\n\t\t\treturn indicator.element.style.display !== 'none';\n\t\t});\n\n\t\tthis.indicatorsContainerElement.innerText = '';\n\t\tthis.indicatorsContainerElement.style.display = 'none';\n\t\tif (indicatorsToShow.length) {\n\t\t\tthis.indicatorsContainerElement.style.display = 'inline';\n\t\t\tDOM.append(this.indicatorsContainerElement, $('span', undefined, '('));\n\t\t\tfor (let i = 0; i < indicatorsToShow.length - 1; i++) {\n\t\t\t\tDOM.append(this.indicatorsContainerElement, indicatorsToShow[i].element);\n\t\t\t\tDOM.append(this.indicatorsContainerElement, $('span.comma', undefined, ' • '));\n\t\t\t}\n\t\t\tDOM.append(this.indicatorsContainerElement, indicatorsToShow[indicatorsToShow.length - 1].element);\n\t\t\tDOM.append(this.indicatorsContainerElement, $('span', undefined, ')'));\n\t\t\tthis.resetIndicatorNavigationKeyBindings(indicatorsToShow);\n\t\t}\n\t}\n\n\tprivate resetIndicatorNavigationKeyBindings(indicators: SettingIndicator[]) {\n\t\tthis.keybindingListeners.clear();\n\t\tthis.indicatorsContainerElement.role = indicators.length >= 1 ? 'toolbar' : 'button';\n\t\tif (!indicators.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst firstElement = indicators[0].focusElement ?? indicators[0].element;\n\t\tfirstElement.tabIndex = 0;\n\t\tthis.keybindingListeners.add(DOM.addDisposableListener(this.indicatorsContainerElement, 'keydown', (e) => {\n\t\t\tconst ev = new StandardKeyboardEvent(e);\n\t\t\tlet handled = true;\n\t\t\tif (ev.equals(KeyCode.Home)) {\n\t\t\t\tthis.focusIndicatorAt(indicators, 0);\n\t\t\t} else if (ev.equals(KeyCode.End)) {\n\t\t\t\tthis.focusIndicatorAt(indicators, indicators.length - 1);\n\t\t\t} else if (ev.equals(KeyCode.RightArrow)) {\n\t\t\t\tconst indexToFocus = (this.focusedIndex + 1) % indicators.length;\n\t\t\t\tthis.focusIndicatorAt(indicators, indexToFocus);\n\t\t\t} else if (ev.equals(KeyCode.LeftArrow)) {\n\t\t\t\tconst indexToFocus = this.focusedIndex ? this.focusedIndex - 1 : indicators.length - 1;\n\t\t\t\tthis.focusIndicatorAt(indicators, indexToFocus);\n\t\t\t} else {\n\t\t\t\thandled = false;\n\t\t\t}\n\n\t\t\tif (handled) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate focusIndicatorAt(indicators: SettingIndicator[], index: number) {\n\t\tif (index === this.focusedIndex) {\n\t\t\treturn;\n\t\t}\n\t\tconst indicator = indicators[index];\n\t\tconst elementToFocus = indicator.focusElement ?? indicator.element;\n\t\telementToFocus.tabIndex = 0;\n\t\telementToFocus.focus();\n\n\t\tconst currentlyFocusedIndicator = indicators[this.focusedIndex];\n\t\tconst previousFocusedElement = currentlyFocusedIndicator.focusElement ?? currentlyFocusedIndicator.element;\n\t\tpreviousFocusedElement.tabIndex = -1;\n\n\t\tthis.focusedIndex = index;\n\t}\n\n\tupdateWorkspaceTrust(element: SettingsTreeSettingElement) {\n\t\tthis.workspaceTrustIndicator.element.style.display = element.isUntrusted ? 'inline' : 'none';\n\t\tthis.render();\n\t}\n\n\tupdateSyncIgnored(element: SettingsTreeSettingElement, ignoredSettings: string[]) {\n\t\tthis.syncIgnoredIndicator.element.style.display = this.userDataSyncEnablementService.isEnabled()\n\t\t\t&& ignoredSettings.includes(element.setting.key) ? 'inline' : 'none';\n\t\tthis.render();\n\t\tif (cachedSyncIgnoredSettings !== ignoredSettings) {\n\t\t\tcachedSyncIgnoredSettings = ignoredSettings;\n\t\t\tcachedSyncIgnoredSettingsSet = new Set<string>(cachedSyncIgnoredSettings);\n\t\t}\n\t}\n\n\tprivate getInlineScopeDisplayText(completeScope: string): string {\n\t\tconst [scope, language] = completeScope.split(':');\n\t\tconst localizedScope = scope === 'user' ?\n\t\t\tlocalize('user', \"User\") : scope === 'workspace' ?\n\t\t\t\tlocalize('workspace', \"Workspace\") : localize('remote', \"Remote\");\n\t\tif (language) {\n\t\t\treturn `${this.languageService.getLanguageName(language)} > ${localizedScope}`;\n\t\t}\n\t\treturn localizedScope;\n\t}\n\n\tdispose() {\n\t\tthis.keybindingListeners.dispose();\n\t\tfor (const indicator of this.allIndicators) {\n\t\t\tindicator.disposables.dispose();\n\t\t}\n\t}\n\n\tupdateScopeOverrides(element: SettingsTreeSettingElement, onDidClickOverrideElement: Emitter<ISettingOverrideClickEvent>, onApplyFilter: Emitter<string>) {\n\t\tthis.scopeOverridesIndicator.element.innerText = '';\n\t\tthis.scopeOverridesIndicator.element.style.display = 'none';\n\t\tthis.scopeOverridesIndicator.focusElement = this.scopeOverridesIndicator.element;\n\t\tif (element.hasPolicyValue) {\n\t\t\t// If the setting falls under a policy, then no matter what the user sets, the policy value takes effect.\n\t\t\tthis.scopeOverridesIndicator.element.style.display = 'inline';\n\t\t\tthis.scopeOverridesIndicator.element.classList.add('setting-indicator');\n\n\t\t\tthis.scopeOverridesIndicator.label.text = '$(warning) ' + localize('policyLabelText', \"Setting value not applied\");\n\t\t\tconst content = localize('policyDescription', \"This setting is managed by your organization and its applied value cannot be changed.\");\n\t\t\tconst showHover = (focus: boolean) => {\n\t\t\t\treturn this.hoverService.showHover({\n\t\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\t\tcontent,\n\t\t\t\t\tactions: [{\n\t\t\t\t\t\tlabel: localize('policyFilterLink', \"View policy settings\"),\n\t\t\t\t\t\tcommandId: '_settings.action.viewPolicySettings',\n\t\t\t\t\t\trun: (_) => {\n\t\t\t\t\t\t\tonApplyFilter.fire(`@${POLICY_SETTING_TAG}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}],\n\t\t\t\t\ttarget: this.scopeOverridesIndicator.element\n\t\t\t\t}, focus);\n\t\t\t};\n\t\t\tthis.addHoverDisposables(this.scopeOverridesIndicator.disposables, this.scopeOverridesIndicator.element, showHover);\n\t\t} else if (this.profilesEnabled && element.settingsTarget === ConfigurationTarget.USER_LOCAL && this.configurationService.isSettingAppliedForAllProfiles(element.setting.key)) {\n\t\t\tthis.scopeOverridesIndicator.element.style.display = 'inline';\n\t\t\tthis.scopeOverridesIndicator.element.classList.add('setting-indicator');\n\n\t\t\tthis.scopeOverridesIndicator.label.text = localize('applicationSetting', \"Applies to all profiles\");\n\n\t\t\tconst content = localize('applicationSettingDescription', \"The setting is not specific to the current profile, and will retain its value when switching profiles.\");\n\t\t\tconst showHover = (focus: boolean) => {\n\t\t\t\treturn this.hoverService.showHover({\n\t\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\t\tcontent,\n\t\t\t\t\ttarget: this.scopeOverridesIndicator.element\n\t\t\t\t}, focus);\n\t\t\t};\n\t\t\tthis.addHoverDisposables(this.scopeOverridesIndicator.disposables, this.scopeOverridesIndicator.element, showHover);\n\t\t} else if (element.overriddenScopeList.length || element.overriddenDefaultsLanguageList.length) {\n\t\t\tif (element.overriddenScopeList.length === 1 && !element.overriddenDefaultsLanguageList.length) {\n\t\t\t\t// We can inline the override and show all the text in the label\n\t\t\t\t// so that users don't have to wait for the hover to load\n\t\t\t\t// just to click into the one override there is.\n\t\t\t\tthis.scopeOverridesIndicator.element.style.display = 'inline';\n\t\t\t\tthis.scopeOverridesIndicator.element.classList.remove('setting-indicator');\n\t\t\t\tthis.scopeOverridesIndicator.disposables.clear();\n\n\t\t\t\tconst prefaceText = element.isConfigured ?\n\t\t\t\t\tlocalize('alsoConfiguredIn', \"Also modified in\") :\n\t\t\t\t\tlocalize('configuredIn', \"Modified in\");\n\t\t\t\tthis.scopeOverridesIndicator.label.text = `${prefaceText} `;\n\n\t\t\t\tconst overriddenScope = element.overriddenScopeList[0];\n\t\t\t\tconst view = DOM.append(this.scopeOverridesIndicator.element, $('a.modified-scope', undefined, this.getInlineScopeDisplayText(overriddenScope)));\n\t\t\t\tview.tabIndex = -1;\n\t\t\t\tthis.scopeOverridesIndicator.focusElement = view;\n\t\t\t\tconst onClickOrKeydown = (e: UIEvent) => {\n\t\t\t\t\tconst [scope, language] = overriddenScope.split(':');\n\t\t\t\t\tonDidClickOverrideElement.fire({\n\t\t\t\t\t\tsettingKey: element.setting.key,\n\t\t\t\t\t\tscope: scope as ScopeString,\n\t\t\t\t\t\tlanguage\n\t\t\t\t\t});\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t};\n\t\t\t\tthis.scopeOverridesIndicator.disposables.add(DOM.addDisposableListener(view, DOM.EventType.CLICK, (e) => {\n\t\t\t\t\tonClickOrKeydown(e);\n\t\t\t\t}));\n\t\t\t\tthis.scopeOverridesIndicator.disposables.add(DOM.addDisposableListener(view, DOM.EventType.KEY_DOWN, (e) => {\n\t\t\t\t\tconst ev = new StandardKeyboardEvent(e);\n\t\t\t\t\tif (ev.equals(KeyCode.Space) || ev.equals(KeyCode.Enter)) {\n\t\t\t\t\t\tonClickOrKeydown(e);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tthis.scopeOverridesIndicator.element.style.display = 'inline';\n\t\t\t\tthis.scopeOverridesIndicator.element.classList.add('setting-indicator');\n\t\t\t\tconst scopeOverridesLabelText = element.isConfigured ?\n\t\t\t\t\tlocalize('alsoConfiguredElsewhere', \"Also modified elsewhere\") :\n\t\t\t\t\tlocalize('configuredElsewhere', \"Modified elsewhere\");\n\t\t\t\tthis.scopeOverridesIndicator.label.text = scopeOverridesLabelText;\n\n\t\t\t\tlet contentMarkdownString = '';\n\t\t\t\tif (element.overriddenScopeList.length) {\n\t\t\t\t\tconst prefaceText = element.isConfigured ?\n\t\t\t\t\t\tlocalize('alsoModifiedInScopes', \"The setting has also been modified in the following scopes:\") :\n\t\t\t\t\t\tlocalize('modifiedInScopes', \"The setting has been modified in the following scopes:\");\n\t\t\t\t\tcontentMarkdownString = prefaceText;\n\t\t\t\t\tfor (const scope of element.overriddenScopeList) {\n\t\t\t\t\t\tconst scopeDisplayText = this.getInlineScopeDisplayText(scope);\n\t\t\t\t\t\tcontentMarkdownString += `\\n- [${scopeDisplayText}](${encodeURIComponent(scope)} \"${getAccessibleScopeDisplayText(scope, this.languageService)}\")`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (element.overriddenDefaultsLanguageList.length) {\n\t\t\t\t\tif (contentMarkdownString) {\n\t\t\t\t\t\tcontentMarkdownString += `\\n\\n`;\n\t\t\t\t\t}\n\t\t\t\t\tconst prefaceText = localize('hasDefaultOverridesForLanguages', \"The following languages have default overrides:\");\n\t\t\t\t\tcontentMarkdownString += prefaceText;\n\t\t\t\t\tfor (const language of element.overriddenDefaultsLanguageList) {\n\t\t\t\t\t\tconst scopeDisplayText = this.languageService.getLanguageName(language);\n\t\t\t\t\t\tcontentMarkdownString += `\\n- [${scopeDisplayText}](${encodeURIComponent(`default:${language}`)} \"${scopeDisplayText}\")`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst content: IMarkdownString = {\n\t\t\t\t\tvalue: contentMarkdownString,\n\t\t\t\t\tisTrusted: false,\n\t\t\t\t\tsupportHtml: false\n\t\t\t\t};\n\t\t\t\tconst showHover = (focus: boolean) => {\n\t\t\t\t\treturn this.hoverService.showHover({\n\t\t\t\t\t\t...this.defaultHoverOptions,\n\t\t\t\t\t\tcontent,\n\t\t\t\t\t\tlinkHandler: (url: string) => {\n\t\t\t\t\t\t\tconst [scope, language] = decodeURIComponent(url).split(':');\n\t\t\t\t\t\t\tonDidClickOverrideElement.fire({\n\t\t\t\t\t\t\t\tsettingKey: element.setting.key,\n\t\t\t\t\t\t\t\tscope: scope as ScopeString,\n\t\t\t\t\t\t\t\tlanguage\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttarget: this.scopeOverridesIndicator.element\n\t\t\t\t\t}, focus);\n\t\t\t\t};\n\t\t\t\tthis.addHoverDisposables(this.scopeOverridesIndicator.disposables, this.scopeOverridesIndicator.element, showHover);\n\t\t\t}\n\t\t}\n\t\tthis.render();\n\t}\n\n\tupdateDefaultOverrideIndicator(element: SettingsTreeSettingElement) {\n\t\tthis.defaultOverrideIndicator.element.style.display = 'none';\n\t\tconst sourceToDisplay = getDefaultValueSourceToDisplay(element);\n\t\tif (sourceToDisplay !== undefined) {\n\t\t\tthis.defaultOverrideIndicator.element.style.display = 'inline';\n\t\t\tthis.defaultOverrideIndicator.disposables.clear();\n\n\t\t\tconst defaultOverrideHoverContent = localize('defaultOverriddenDetails', \"Default setting value overridden by {0}\", sourceToDisplay);\n\t\t\tconst showHover = (focus: boolean) => {\n\t\t\t\treturn this.hoverService.showHover({\n\t\t\t\t\tcontent: defaultOverrideHoverContent,\n\t\t\t\t\ttarget: this.defaultOverrideIndicator.element,\n\t\t\t\t\thoverPosition: HoverPosition.BELOW,\n\t\t\t\t\tshowPointer: true,\n\t\t\t\t\tcompact: false\n\t\t\t\t}, focus);\n\t\t\t};\n\t\t\tthis.addHoverDisposables(this.defaultOverrideIndicator.disposables, this.defaultOverrideIndicator.element, showHover);\n\t\t}\n\t\tthis.render();\n\t}\n}\n\nfunction getDefaultValueSourceToDisplay(element: SettingsTreeSettingElement): string | undefined {\n\tlet sourceToDisplay: string | undefined;\n\tconst defaultValueSource = element.defaultValueSource;\n\tif (defaultValueSource) {\n\t\tif (typeof defaultValueSource !== 'string') {\n\t\t\tsourceToDisplay = defaultValueSource.displayName ?? defaultValueSource.id;\n\t\t} else if (typeof defaultValueSource === 'string') {\n\t\t\tsourceToDisplay = defaultValueSource;\n\t\t}\n\t}\n\treturn sourceToDisplay;\n}\n\nfunction getAccessibleScopeDisplayText(completeScope: string, languageService: ILanguageService): string {\n\tconst [scope, language] = completeScope.split(':');\n\tconst localizedScope = scope === 'user' ?\n\t\tlocalize('user', \"User\") : scope === 'workspace' ?\n\t\t\tlocalize('workspace', \"Workspace\") : localize('remote', \"Remote\");\n\tif (language) {\n\t\treturn localize('modifiedInScopeForLanguage', \"The {0} scope for {1}\", localizedScope, languageService.getLanguageName(language));\n\t}\n\treturn localizedScope;\n}\n\nfunction getAccessibleScopeDisplayMidSentenceText(completeScope: string, languageService: ILanguageService): string {\n\tconst [scope, language] = completeScope.split(':');\n\tconst localizedScope = scope === 'user' ?\n\t\tlocalize('user', \"User\") : scope === 'workspace' ?\n\t\t\tlocalize('workspace', \"Workspace\") : localize('remote', \"Remote\");\n\tif (language) {\n\t\treturn localize('modifiedInScopeForLanguageMidSentence', \"the {0} scope for {1}\", localizedScope.toLowerCase(), languageService.getLanguageName(language));\n\t}\n\treturn localizedScope;\n}\n\nexport function getIndicatorsLabelAriaLabel(element: SettingsTreeSettingElement, configurationService: IWorkbenchConfigurationService, userDataProfilesService: IUserDataProfilesService, languageService: ILanguageService): string {\n\tconst ariaLabelSections: string[] = [];\n\n\t// Add workspace trust text\n\tif (element.isUntrusted) {\n\t\tariaLabelSections.push(localize('workspaceUntrustedAriaLabel', \"Workspace untrusted; setting value not applied\"));\n\t}\n\n\tif (element.hasPolicyValue) {\n\t\tariaLabelSections.push(localize('policyDescriptionAccessible', \"Managed by organization policy; setting value not applied\"));\n\t} else if (userDataProfilesService.isEnabled() && element.settingsTarget === ConfigurationTarget.USER_LOCAL && configurationService.isSettingAppliedForAllProfiles(element.setting.key)) {\n\t\tariaLabelSections.push(localize('applicationSettingDescriptionAccessible', \"Setting value retained when switching profiles\"));\n\t} else {\n\t\t// Add other overrides text\n\t\tconst otherOverridesStart = element.isConfigured ?\n\t\t\tlocalize('alsoConfiguredIn', \"Also modified in\") :\n\t\t\tlocalize('configuredIn', \"Modified in\");\n\t\tconst otherOverridesList = element.overriddenScopeList\n\t\t\t.map(scope => getAccessibleScopeDisplayMidSentenceText(scope, languageService)).join(', ');\n\t\tif (element.overriddenScopeList.length) {\n\t\t\tariaLabelSections.push(`${otherOverridesStart} ${otherOverridesList}`);\n\t\t}\n\t}\n\n\t// Add sync ignored text\n\tif (cachedSyncIgnoredSettingsSet.has(element.setting.key)) {\n\t\tariaLabelSections.push(localize('syncIgnoredAriaLabel', \"Setting ignored during sync\"));\n\t}\n\n\t// Add default override indicator text\n\tconst sourceToDisplay = getDefaultValueSourceToDisplay(element);\n\tif (sourceToDisplay !== undefined) {\n\t\tariaLabelSections.push(localize('defaultOverriddenDetailsAriaLabel', \"{0} overrides the default value\", sourceToDisplay));\n\t}\n\n\t// Add text about default values being overridden in other languages\n\tconst otherLanguageOverridesList = element.overriddenDefaultsLanguageList\n\t\t.map(language => languageService.getLanguageName(language)).join(', ');\n\tif (element.overriddenDefaultsLanguageList.length) {\n\t\tconst otherLanguageOverridesText = localize('defaultOverriddenLanguagesList', \"Language-specific default values exist for {0}\", otherLanguageOverridesList);\n\t\tariaLabelSections.push(otherLanguageOverridesText);\n\t}\n\n\tconst ariaLabel = ariaLabelSections.join('. ');\n\treturn ariaLabel;\n}\n"]}