{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/splash/electron-sandbox/splash.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;IAWhG,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;QAIzB,YAAgC,iBAAuB;YACtD,IAAI,CAAC,gBAAgB,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpF,CAAC;KACD,CAAA;IAPK,oBAAoB;QAIZ,WAAA,aAAI,CAAA;OAJZ,oBAAoB,CAOzB;IAED,IAAA,gBAAG,EAAe,aAAI,EAAmB,oBAAoB,oCAA4B,CAAC;IAE1F,cAAG,CAAM,EAAE,CAAkC,0BAAU,CAAC,SAAS,CAAC,CAAC,6BAA6B,CAC/F,kBAAI,kCAEJ,CAAC","file":"splash.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { ISplashStorageService } from 'vs/workbench/contrib/splash/browser/splash';\nimport { INativeHostService } from 'vs/platform/native/common/native';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { PartsSplash } from 'vs/workbench/contrib/splash/browser/partsSplash';\nimport { IPartsSplash } from 'vs/platform/theme/common/themeService';\n\nclass SplashStorageService implements ISplashStorageService {\n\t_serviceBrand: undefined;\n\treadonly saveWindowSplash: (splash: IPartsSplash) => Promise<void>;\n\n\tconstructor(@INativeHostService nativeHostService: INativeHostService) {\n\t\tthis.saveWindowSplash = nativeHostService.saveWindowSplash.bind(nativeHostService);\n\t}\n}\n\nregisterSingleton(ISplashStorageService, SplashStorageService, InstantiationType.Delayed);\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(\n\tPartsSplash,\n\tLifecyclePhase.Starting\n);\n"]}