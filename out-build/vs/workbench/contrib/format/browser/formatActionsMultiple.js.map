{"version":3,"sources":["vs/workbench/contrib/format/browser/formatActionsMultiple.ts"],"names":[],"mappings":"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","file":"formatActionsMultiple.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getCodeEditor, ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { DocumentFormattingEditProvider, DocumentRangeFormattingEditProvider } from 'vs/editor/common/languages';\nimport * as nls from 'vs/nls';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IQuickInputService, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { formatDocumentRangesWithProvider, formatDocumentWithProvider, getRealAndSyntheticDocumentFormattersOrdered, FormattingConflicts, FormattingMode } from 'vs/editor/contrib/format/browser/format';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IExtensionService, toExtension } from 'vs/workbench/services/extensions/common/extensions';\nimport { Disposable, DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { INotificationService, NotificationPriority, Severity } from 'vs/platform/notification/common/notification';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { IWorkbenchExtensionEnablementService } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\nimport { editorConfigurationBaseNode } from 'vs/editor/common/config/editorConfigurationSchema';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { ILanguageStatusService } from 'vs/workbench/services/languageStatus/common/languageStatusService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { generateUuid } from 'vs/base/common/uuid';\n\ntype FormattingEditProvider = DocumentFormattingEditProvider | DocumentRangeFormattingEditProvider;\n\nclass DefaultFormatter extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly configName = 'editor.defaultFormatter';\n\n\tstatic extensionIds: (string | null)[] = [];\n\tstatic extensionItemLabels: string[] = [];\n\tstatic extensionDescriptions: string[] = [];\n\n\tprivate readonly _languageStatusStore = this._store.add(new DisposableStore());\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IWorkbenchExtensionEnablementService private readonly _extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ILanguageStatusService private readonly _languageStatusService: ILanguageStatusService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t) {\n\t\tsuper();\n\t\tthis._store.add(this._extensionService.onDidChangeExtensions(this._updateConfigValues, this));\n\t\tthis._store.add(FormattingConflicts.setFormatterSelector((formatter, document, mode) => this._selectFormatter(formatter, document, mode)));\n\t\tthis._store.add(_editorService.onDidActiveEditorChange(this._updateStatus, this));\n\t\tthis._store.add(_languageFeaturesService.documentFormattingEditProvider.onDidChange(this._updateStatus, this));\n\t\tthis._store.add(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(this._updateStatus, this));\n\t\tthis._store.add(_configService.onDidChangeConfiguration(e => e.affectsConfiguration(DefaultFormatter.configName) && this._updateStatus()));\n\t\tthis._updateConfigValues();\n\t}\n\n\tprivate async _updateConfigValues(): Promise<void> {\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\t\tlet extensions = [...this._extensionService.extensions];\n\n\t\textensions = extensions.sort((a, b) => {\n\t\t\tconst boostA = a.categories?.find(cat => cat === 'Formatters' || cat === 'Programming Languages');\n\t\t\tconst boostB = b.categories?.find(cat => cat === 'Formatters' || cat === 'Programming Languages');\n\n\t\t\tif (boostA && !boostB) {\n\t\t\t\treturn -1;\n\t\t\t} else if (!boostA && boostB) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn a.name.localeCompare(b.name);\n\t\t\t}\n\t\t});\n\n\t\tDefaultFormatter.extensionIds.length = 0;\n\t\tDefaultFormatter.extensionItemLabels.length = 0;\n\t\tDefaultFormatter.extensionDescriptions.length = 0;\n\n\t\tDefaultFormatter.extensionIds.push(null);\n\t\tDefaultFormatter.extensionItemLabels.push(nls.localize('null', 'None'));\n\t\tDefaultFormatter.extensionDescriptions.push(nls.localize('nullFormatterDescription', \"None\"));\n\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension.main || extension.browser) {\n\t\t\t\tDefaultFormatter.extensionIds.push(extension.identifier.value);\n\t\t\t\tDefaultFormatter.extensionItemLabels.push(extension.displayName ?? '');\n\t\t\t\tDefaultFormatter.extensionDescriptions.push(extension.description ?? '');\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic _maybeQuotes(s: string): string {\n\t\treturn s.match(/\\s/) ? `'${s}'` : s;\n\t}\n\n\tprivate async _analyzeFormatter<T extends FormattingEditProvider>(formatter: T[], document: ITextModel): Promise<T | string> {\n\t\tconst defaultFormatterId = this._configService.getValue<string>(DefaultFormatter.configName, {\n\t\t\tresource: document.uri,\n\t\t\toverrideIdentifier: document.getLanguageId()\n\t\t});\n\n\t\tif (defaultFormatterId) {\n\t\t\t// good -> formatter configured\n\t\t\tconst defaultFormatter = formatter.find(formatter => ExtensionIdentifier.equals(formatter.extensionId, defaultFormatterId));\n\t\t\tif (defaultFormatter) {\n\t\t\t\t// formatter available\n\t\t\t\treturn defaultFormatter;\n\t\t\t}\n\n\t\t\t// bad -> formatter gone\n\t\t\tconst extension = await this._extensionService.getExtension(defaultFormatterId);\n\t\t\tif (extension && this._extensionEnablementService.isEnabled(toExtension(extension))) {\n\t\t\t\t// formatter does not target this file\n\t\t\t\tconst langName = this._languageService.getLanguageName(document.getLanguageId()) || document.getLanguageId();\n\t\t\t\tconst detail = nls.localize('miss', \"Extension '{0}' is configured as formatter but it cannot format '{1}'-files\", extension.displayName || extension.name, langName);\n\t\t\t\treturn detail;\n\t\t\t}\n\n\t\t} else if (formatter.length === 1) {\n\t\t\t// ok -> nothing configured but only one formatter available\n\t\t\treturn formatter[0];\n\t\t}\n\n\t\tconst langName = this._languageService.getLanguageName(document.getLanguageId()) || document.getLanguageId();\n\t\tconst message = !defaultFormatterId\n\t\t\t? nls.localize('config.needed', \"There are multiple formatters for '{0}' files. One of them should be configured as default formatter.\", DefaultFormatter._maybeQuotes(langName))\n\t\t\t: nls.localize('config.bad', \"Extension '{0}' is configured as formatter but not available. Select a different default formatter to continue.\", defaultFormatterId);\n\n\t\treturn message;\n\t}\n\n\tprivate async _selectFormatter<T extends FormattingEditProvider>(formatter: T[], document: ITextModel, mode: FormattingMode): Promise<T | undefined> {\n\t\tconst formatterOrMessage = await this._analyzeFormatter(formatter, document);\n\t\tif (typeof formatterOrMessage !== 'string') {\n\t\t\treturn formatterOrMessage;\n\t\t}\n\n\t\tif (mode !== FormattingMode.Silent) {\n\t\t\t// running from a user action -> show modal dialog so that users configure\n\t\t\t// a default formatter\n\t\t\tconst { confirmed } = await this._dialogService.confirm({\n\t\t\t\tmessage: nls.localize('miss.1', \"Configure Default Formatter\"),\n\t\t\t\tdetail: formatterOrMessage,\n\t\t\t\tprimaryButton: nls.localize({ key: 'do.config', comment: ['&& denotes a mnemonic'] }, \"&&Configure...\")\n\t\t\t});\n\t\t\tif (confirmed) {\n\t\t\t\treturn this._pickAndPersistDefaultFormatter(formatter, document);\n\t\t\t}\n\t\t} else {\n\t\t\t// no user action -> show a silent notification and proceed\n\t\t\tthis._notificationService.prompt(\n\t\t\t\tSeverity.Info,\n\t\t\t\tformatterOrMessage,\n\t\t\t\t[{ label: nls.localize('do.config.notification', \"Configure...\"), run: () => this._pickAndPersistDefaultFormatter(formatter, document) }],\n\t\t\t\t{ priority: NotificationPriority.SILENT }\n\t\t\t);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async _pickAndPersistDefaultFormatter<T extends FormattingEditProvider>(formatter: T[], document: ITextModel): Promise<T | undefined> {\n\t\tconst picks = formatter.map((formatter, index): IIndexedPick => {\n\t\t\treturn {\n\t\t\t\tindex,\n\t\t\t\tlabel: formatter.displayName || (formatter.extensionId ? formatter.extensionId.value : '?'),\n\t\t\t\tdescription: formatter.extensionId && formatter.extensionId.value\n\t\t\t};\n\t\t});\n\t\tconst langName = this._languageService.getLanguageName(document.getLanguageId()) || document.getLanguageId();\n\t\tconst pick = await this._quickInputService.pick(picks, { placeHolder: nls.localize('select', \"Select a default formatter for '{0}' files\", DefaultFormatter._maybeQuotes(langName)) });\n\t\tif (!pick || !formatter[pick.index].extensionId) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._configService.updateValue(DefaultFormatter.configName, formatter[pick.index].extensionId!.value, {\n\t\t\tresource: document.uri,\n\t\t\toverrideIdentifier: document.getLanguageId()\n\t\t});\n\t\treturn formatter[pick.index];\n\t}\n\n\t// --- status item\n\n\tprivate _updateStatus() {\n\t\tthis._languageStatusStore.clear();\n\n\t\tconst editor = getCodeEditor(this._editorService.activeTextEditorControl);\n\t\tif (!editor || !editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tconst document = editor.getModel();\n\t\tconst formatter = getRealAndSyntheticDocumentFormattersOrdered(this._languageFeaturesService.documentFormattingEditProvider, this._languageFeaturesService.documentRangeFormattingEditProvider, document);\n\n\t\tif (formatter.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tthis._languageStatusStore.add(toDisposable(() => cts.dispose(true)));\n\n\t\tthis._analyzeFormatter(formatter, document).then(result => {\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (typeof result !== 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst command = { id: `formatter/configure/dfl/${generateUuid()}`, title: nls.localize('do.config.command', \"Configure...\") };\n\t\t\tthis._languageStatusStore.add(CommandsRegistry.registerCommand(command.id, () => this._pickAndPersistDefaultFormatter(formatter, document)));\n\t\t\tthis._languageStatusStore.add(this._languageStatusService.addStatus({\n\t\t\t\tid: 'formatter.conflict',\n\t\t\t\tname: nls.localize('summary', \"Formatter Conflicts\"),\n\t\t\t\tselector: { language: document.getLanguageId(), pattern: document.uri.fsPath },\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tlabel: nls.localize('formatter', \"Formatting\"),\n\t\t\t\tdetail: result,\n\t\t\t\tbusy: false,\n\t\t\t\tsource: '',\n\t\t\t\tcommand,\n\t\t\t\taccessibilityInfo: undefined\n\t\t\t}));\n\t\t});\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(\n\tDefaultFormatter,\n\tLifecyclePhase.Restored\n);\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\t...editorConfigurationBaseNode,\n\tproperties: {\n\t\t[DefaultFormatter.configName]: {\n\t\t\tdescription: nls.localize('formatter.default', \"Defines a default formatter which takes precedence over all other formatter settings. Must be the identifier of an extension contributing a formatter.\"),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tenum: DefaultFormatter.extensionIds,\n\t\t\tenumItemLabels: DefaultFormatter.extensionItemLabels,\n\t\t\tmarkdownEnumDescriptions: DefaultFormatter.extensionDescriptions\n\t\t}\n\t}\n});\n\ninterface IIndexedPick extends IQuickPickItem {\n\tindex: number;\n}\n\nfunction logFormatterTelemetry<T extends { extensionId?: ExtensionIdentifier }>(telemetryService: ITelemetryService, mode: 'document' | 'range', options: T[], pick?: T) {\n\ttype FormatterPicks = {\n\t\tmode: 'document' | 'range';\n\t\textensions: string[];\n\t\tpick: string;\n\t};\n\ttype FormatterPicksClassification = {\n\t\towner: 'jrieken';\n\t\tcomment: 'Information about resolving formatter conflicts';\n\t\tmode: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Formatting mode: whole document or a range/selection' };\n\t\textensions: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The extension that got picked' };\n\t\tpick: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The possible extensions to pick' };\n\t};\n\tfunction extKey(obj: T): string {\n\t\treturn obj.extensionId ? ExtensionIdentifier.toKey(obj.extensionId) : 'unknown';\n\t}\n\ttelemetryService.publicLog2<FormatterPicks, FormatterPicksClassification>('formatterpick', {\n\t\tmode,\n\t\textensions: options.map(extKey),\n\t\tpick: pick ? extKey(pick) : 'none'\n\t});\n}\n\nasync function showFormatterPick(accessor: ServicesAccessor, model: ITextModel, formatters: FormattingEditProvider[]): Promise<number | undefined> {\n\tconst quickPickService = accessor.get(IQuickInputService);\n\tconst configService = accessor.get(IConfigurationService);\n\tconst languageService = accessor.get(ILanguageService);\n\n\tconst overrides = { resource: model.uri, overrideIdentifier: model.getLanguageId() };\n\tconst defaultFormatter = configService.getValue<string>(DefaultFormatter.configName, overrides);\n\n\tlet defaultFormatterPick: IIndexedPick | undefined;\n\n\tconst picks = formatters.map((provider, index) => {\n\t\tconst isDefault = ExtensionIdentifier.equals(provider.extensionId, defaultFormatter);\n\t\tconst pick: IIndexedPick = {\n\t\t\tindex,\n\t\t\tlabel: provider.displayName || '',\n\t\t\tdescription: isDefault ? nls.localize('def', \"(default)\") : undefined,\n\t\t};\n\n\t\tif (isDefault) {\n\t\t\t// autofocus default pick\n\t\t\tdefaultFormatterPick = pick;\n\t\t}\n\n\t\treturn pick;\n\t});\n\n\tconst configurePick: IQuickPickItem = {\n\t\tlabel: nls.localize('config', \"Configure Default Formatter...\")\n\t};\n\n\tconst pick = await quickPickService.pick([...picks, { type: 'separator' }, configurePick],\n\t\t{\n\t\t\tplaceHolder: nls.localize('format.placeHolder', \"Select a formatter\"),\n\t\t\tactiveItem: defaultFormatterPick\n\t\t}\n\t);\n\tif (!pick) {\n\t\t// dismissed\n\t\treturn undefined;\n\n\t} else if (pick === configurePick) {\n\t\t// config default\n\t\tconst langName = languageService.getLanguageName(model.getLanguageId()) || model.getLanguageId();\n\t\tconst pick = await quickPickService.pick(picks, { placeHolder: nls.localize('select', \"Select a default formatter for '{0}' files\", DefaultFormatter._maybeQuotes(langName)) });\n\t\tif (pick && formatters[pick.index].extensionId) {\n\t\t\tconfigService.updateValue(DefaultFormatter.configName, formatters[pick.index].extensionId!.value, overrides);\n\t\t}\n\t\treturn undefined;\n\n\t} else {\n\t\t// picked one\n\t\treturn (<IIndexedPick>pick).index;\n\t}\n\n}\n\nregisterEditorAction(class FormatDocumentMultipleAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.formatDocument.multiple',\n\t\t\tlabel: nls.localize('formatDocument.label.multiple', \"Format Document With...\"),\n\t\t\talias: 'Format Document...',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasMultipleDocumentFormattingProvider),\n\t\t\tcontextMenuOpts: {\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 1.3\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): Promise<void> {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst instaService = accessor.get(IInstantiationService);\n\t\tconst telemetryService = accessor.get(ITelemetryService);\n\t\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\t\tconst model = editor.getModel();\n\t\tconst provider = getRealAndSyntheticDocumentFormattersOrdered(languageFeaturesService.documentFormattingEditProvider, languageFeaturesService.documentRangeFormattingEditProvider, model);\n\t\tconst pick = await instaService.invokeFunction(showFormatterPick, model, provider);\n\t\tif (typeof pick === 'number') {\n\t\t\tawait instaService.invokeFunction(formatDocumentWithProvider, provider[pick], editor, FormattingMode.Explicit, CancellationToken.None);\n\t\t}\n\t\tlogFormatterTelemetry(telemetryService, 'document', provider, typeof pick === 'number' && provider[pick] || undefined);\n\t}\n});\n\nregisterEditorAction(class FormatSelectionMultipleAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.formatSelection.multiple',\n\t\t\tlabel: nls.localize('formatSelection.label.multiple', \"Format Selection With...\"),\n\t\t\talias: 'Format Code...',\n\t\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.and(EditorContextKeys.writable), EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider),\n\t\t\tcontextMenuOpts: {\n\t\t\t\twhen: ContextKeyExpr.and(EditorContextKeys.hasNonEmptySelection),\n\t\t\t\tgroup: '1_modification',\n\t\t\t\torder: 1.31\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst instaService = accessor.get(IInstantiationService);\n\t\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\t\tconst telemetryService = accessor.get(ITelemetryService);\n\n\t\tconst model = editor.getModel();\n\t\tlet range: Range = editor.getSelection();\n\t\tif (range.isEmpty()) {\n\t\t\trange = new Range(range.startLineNumber, 1, range.startLineNumber, model.getLineMaxColumn(range.startLineNumber));\n\t\t}\n\n\t\tconst provider = languageFeaturesService.documentRangeFormattingEditProvider.ordered(model);\n\t\tconst pick = await instaService.invokeFunction(showFormatterPick, model, provider);\n\t\tif (typeof pick === 'number') {\n\t\t\tawait instaService.invokeFunction(formatDocumentRangesWithProvider, provider[pick], editor, range, CancellationToken.None);\n\t\t}\n\n\t\tlogFormatterTelemetry(telemetryService, 'range', provider, typeof pick === 'number' && provider[pick] || undefined);\n\t}\n});\n"]}