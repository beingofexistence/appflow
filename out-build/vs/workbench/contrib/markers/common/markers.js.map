{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/markers/common/markers.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAIhG,IAAkB,eAGjB;IAHD,WAAkB,eAAe;QAChC,kCAAe,CAAA;QACf,gCAAa,CAAA;IACd,CAAC,EAHiB,eAAe,+BAAf,eAAe,QAGhC;IAED,IAAiB,OAAO,CAiBvB;IAjBD,WAAiB,OAAO;QACV,4BAAoB,GAAG,yBAAyB,CAAC;QACjD,uBAAe,GAAG,8BAA8B,CAAC;QACjD,+BAAuB,GAAG,yBAAyB,CAAC;QACpD,6BAAqB,GAAG,sBAAsB,CAAC;QAC/C,qCAA6B,GAAG,6BAA6B,CAAC;QAC9D,kDAA0C,GAAG,+CAA+C,CAAC;QAC7F,kCAA0B,GAAG,yCAAyC,CAAC;QACvE,iCAAyB,GAAG,6BAA6B,CAAC;QAC1D,sCAA8B,GAAG,iCAAiC,CAAC;QACnE,2CAAmC,GAAG,sCAAsC,CAAC;QAC7E,4CAAoC,GAAG,uCAAuC,CAAC;QAC/E,6BAAqB,GAAG,sBAAsB,CAAC;QAC/C,kCAA0B,GAAG,4BAA4B,CAAC;QAC1D,4BAAoB,GAAG,qCAAqC,CAAC;QAC7D,6BAAqB,GAAG,gCAAgC,CAAC;QACzD,qCAA6B,GAAG,uCAAuC,CAAC;IACtF,CAAC,EAjBgB,OAAO,uBAAP,OAAO,QAiBvB;IAED,IAAiB,kBAAkB,CAWlC;IAXD,WAAiB,kBAAkB;QACrB,4CAAyB,GAAG,IAAI,gBAAG,CAA4B,kBAAkB,oCAAuB,CAAC;QACzG,kDAA+B,GAAG,IAAI,gBAAG,CAAoB,oBAAoB,EAAE,KAAK,CAAC,CAAC;QAC1F,wCAAqB,GAAG,IAAI,gBAAG,CAAoB,cAAc,EAAE,KAAK,CAAC,CAAC;QAC1E,kDAA+B,GAAG,IAAI,gBAAG,CAAoB,qBAAqB,EAAE,KAAK,CAAC,CAAC;QAC3F,oDAAiC,GAAG,IAAI,gBAAG,CAAoB,yBAAyB,EAAE,KAAK,CAAC,CAAC;QACjG,6CAA0B,GAAG,IAAI,gBAAG,CAAoB,wBAAwB,EAAE,IAAI,CAAC,CAAC;QACxF,+CAA4B,GAAG,IAAI,gBAAG,CAAoB,0BAA0B,EAAE,IAAI,CAAC,CAAC;QAC5F,2CAAwB,GAAG,IAAI,gBAAG,CAAoB,sBAAsB,EAAE,IAAI,CAAC,CAAC;QACpF,iDAA8B,GAAG,IAAI,gBAAG,CAAoB,4BAA4B,EAAE,KAAK,CAAC,CAAC;QACjG,oDAAiC,GAAG,IAAI,gBAAG,CAAoB,+BAA+B,EAAE,IAAI,CAAC,CAAC;IACpH,CAAC,EAXgB,kBAAkB,kCAAlB,kBAAkB,QAWlC","file":"markers.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\n\nexport const enum MarkersViewMode {\n\tTable = 'table',\n\tTree = 'tree'\n}\n\nexport namespace Markers {\n\texport const MARKERS_CONTAINER_ID = 'workbench.panel.markers';\n\texport const MARKERS_VIEW_ID = 'workbench.panel.markers.view';\n\texport const MARKERS_VIEW_STORAGE_ID = 'workbench.panel.markers';\n\texport const MARKER_COPY_ACTION_ID = 'problems.action.copy';\n\texport const MARKER_COPY_MESSAGE_ACTION_ID = 'problems.action.copyMessage';\n\texport const RELATED_INFORMATION_COPY_MESSAGE_ACTION_ID = 'problems.action.copyRelatedInformationMessage';\n\texport const FOCUS_PROBLEMS_FROM_FILTER = 'problems.action.focusProblemsFromFilter';\n\texport const MARKERS_VIEW_FOCUS_FILTER = 'problems.action.focusFilter';\n\texport const MARKERS_VIEW_CLEAR_FILTER_TEXT = 'problems.action.clearFilterText';\n\texport const MARKERS_VIEW_SHOW_MULTILINE_MESSAGE = 'problems.action.showMultilineMessage';\n\texport const MARKERS_VIEW_SHOW_SINGLELINE_MESSAGE = 'problems.action.showSinglelineMessage';\n\texport const MARKER_OPEN_ACTION_ID = 'problems.action.open';\n\texport const MARKER_OPEN_SIDE_ACTION_ID = 'problems.action.openToSide';\n\texport const MARKER_SHOW_PANEL_ID = 'workbench.action.showErrorsWarnings';\n\texport const MARKER_SHOW_QUICK_FIX = 'problems.action.showQuickFixes';\n\texport const TOGGLE_MARKERS_VIEW_ACTION_ID = 'workbench.actions.view.toggleProblems';\n}\n\nexport namespace MarkersContextKeys {\n\texport const MarkersViewModeContextKey = new RawContextKey<MarkersViewMode>('problemsViewMode', MarkersViewMode.Tree);\n\texport const MarkersTreeVisibilityContextKey = new RawContextKey<boolean>('problemsVisibility', false);\n\texport const MarkerFocusContextKey = new RawContextKey<boolean>('problemFocus', false);\n\texport const MarkerViewFilterFocusContextKey = new RawContextKey<boolean>('problemsFilterFocus', false);\n\texport const RelatedInformationFocusContextKey = new RawContextKey<boolean>('relatedInformationFocus', false);\n\texport const ShowErrorsFilterContextKey = new RawContextKey<boolean>('problems.filter.errors', true);\n\texport const ShowWarningsFilterContextKey = new RawContextKey<boolean>('problems.filter.warnings', true);\n\texport const ShowInfoFilterContextKey = new RawContextKey<boolean>('problems.filter.info', true);\n\texport const ShowActiveFileFilterContextKey = new RawContextKey<boolean>('problems.filter.activeFile', false);\n\texport const ShowExcludedFilesFilterContextKey = new RawContextKey<boolean>('problems.filter.excludedFiles', true);\n}\n"]}