{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/emmet/test/browser/emmetAction.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAShG,MAAM,wBAAwB;QAG7B,YAAY,SAAiB;YAC5B,IAAI,CAAC,CAAC,GAAW,SAAS,CAAC;QAC5B,CAAC;QAEM,UAAU,CAAC,IAAY;YAC7B,OAAO,IAAI,CAAC,CAAC,CAAS;QACvB,CAAC;KACD;IAED,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE;QACnB,IAAI,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACxD,IAAA,qBAAI,EAAe,EAAE,EAAE,EAAE,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,oBAAoB,EAAE,EAAE;gBACtE,MAAM,eAAe,GAAG,oBAAoB,CAAC,GAAG,CAAC,cAAG,CAAc,CAAC;gBAEnE,MAAM,WAAW,GAAG,IAAI,eAAG,EAAc,CAAC;gBAC1C,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;gBACtE,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;gBACxE,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;gBACtE,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;gBAE3E,SAAS,aAAa,CAAC,IAAY,EAAE,SAAiB,EAAE,gBAAyB,EAAE,sBAA+B;oBACjH,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;oBAChC,IAAI,CAAC,KAAK,EAAE;wBACX,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;qBACtC;oBAED,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBACxB,MAAM,UAAU,GAAG,mBAAI,CAAc,WAAW,CAAC,MAAM,EAAE,IAAI,wBAAwB,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClG,IAAI,CAAC,UAAU,EAAE;wBAChB,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;qBACpC;oBAED,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;oBAC1D,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAC;gBACnE,CAAC;gBAED,sDAAsD;gBACtD,aAAa,CAAC,UAAU,EAAE,oBAAoB,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;gBACpE,aAAa,CAAC,YAAY,EAAE,sBAAsB,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;gBAC1E,aAAa,CAAC,UAAU,EAAE,oBAAoB,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;gBACpE,aAAa,CAAC,eAAe,EAAE,6BAA6B,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;gBAEvF,0DAA0D;gBAC1D,+DAA+D;gBAC/D,kEAAkE;gBAElE,WAAW,CAAC,OAAO,EAAE,CAAC;YAEvB,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAA,WAAG,GAAsC,CAAC;IAC3C,CAAC,CAAC,CAAC","file":"emmetAction.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IGrammarContributions, EmmetEditorAction } from 'vs/workbench/contrib/emmet/browser/emmetActions';\nimport { withTestCodeEditor } from 'vs/editor/test/browser/testCodeEditor';\nimport * as assert from 'assert';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nclass MockGrammarContributions implements IGrammarContributions {\n\tprivate scopeName: string;\n\n\tconstructor(scopeName: string) {\n\t\tthis.scopeName = scopeName;\n\t}\n\n\tpublic getGrammar(mode: string): string {\n\t\treturn this.scopeName;\n\t}\n}\n\nsuite('Emmet', () => {\n\ttest('Get language mode and parent mode for emmet', () => {\n\t\twithTestCodeEditor([], {}, (editor, viewModel, instantiationService) => {\n\t\t\tconst languageService = instantiationService.get(ILanguageService);\n\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tdisposables.add(languageService.registerLanguage({ id: 'markdown' }));\n\t\t\tdisposables.add(languageService.registerLanguage({ id: 'handlebars' }));\n\t\t\tdisposables.add(languageService.registerLanguage({ id: 'nunjucks' }));\n\t\t\tdisposables.add(languageService.registerLanguage({ id: 'laravel-blade' }));\n\n\t\t\tfunction testIsEnabled(mode: string, scopeName: string, expectedLanguage?: string, expectedParentLanguage?: string) {\n\t\t\t\tconst model = editor.getModel();\n\t\t\t\tif (!model) {\n\t\t\t\t\tassert.fail('Editor model not found');\n\t\t\t\t}\n\n\t\t\t\tmodel.setLanguage(mode);\n\t\t\t\tconst langOutput = EmmetEditorAction.getLanguage(editor, new MockGrammarContributions(scopeName));\n\t\t\t\tif (!langOutput) {\n\t\t\t\t\tassert.fail('langOutput not found');\n\t\t\t\t}\n\n\t\t\t\tassert.strictEqual(langOutput.language, expectedLanguage);\n\t\t\t\tassert.strictEqual(langOutput.parentMode, expectedParentLanguage);\n\t\t\t}\n\n\t\t\t// syntaxes mapped using the scope name of the grammar\n\t\t\ttestIsEnabled('markdown', 'text.html.markdown', 'markdown', 'html');\n\t\t\ttestIsEnabled('handlebars', 'text.html.handlebars', 'handlebars', 'html');\n\t\t\ttestIsEnabled('nunjucks', 'text.html.nunjucks', 'nunjucks', 'html');\n\t\t\ttestIsEnabled('laravel-blade', 'text.html.php.laravel-blade', 'laravel-blade', 'html');\n\n\t\t\t// languages that have different Language Id and scopeName\n\t\t\t// testIsEnabled('razor', 'text.html.cshtml', 'razor', 'html');\n\t\t\t// testIsEnabled('HTML (Eex)', 'text.html.elixir', 'boo', 'html');\n\n\t\t\tdisposables.dispose();\n\n\t\t});\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"]}