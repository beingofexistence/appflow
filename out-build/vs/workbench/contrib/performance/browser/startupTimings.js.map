{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/performance/browser/startupTimings.ts"],"names":[],"mappings":"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","file":"startupTimings.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ILifecycleService, StartupKind, StartupKindToString } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IUpdateService } from 'vs/platform/update/common/update';\nimport * as files from 'vs/workbench/contrib/files/common/files';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { ViewContainerLocation } from 'vs/workbench/common/views';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { ITimerService } from 'vs/workbench/services/timer/browser/timerService';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { posix } from 'vs/base/common/path';\nimport { hash } from 'vs/base/common/hash';\n\nexport abstract class StartupTimings {\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IPaneCompositePartService private readonly _paneCompositeService: IPaneCompositePartService,\n\t\t@ILifecycleService private readonly _lifecycleService: ILifecycleService,\n\t\t@IUpdateService private readonly _updateService: IUpdateService,\n\t\t@IWorkspaceTrustManagementService private readonly _workspaceTrustService: IWorkspaceTrustManagementService\n\t) {\n\t}\n\n\tprotected async _isStandardStartup(): Promise<string | undefined> {\n\t\t// check for standard startup:\n\t\t// * new window (no reload)\n\t\t// * workspace is trusted\n\t\t// * just one window\n\t\t// * explorer viewlet visible\n\t\t// * one text editor (not multiple, not webview, welcome etc...)\n\t\t// * cached data present (not rejected, not created)\n\t\tif (this._lifecycleService.startupKind !== StartupKind.NewWindow) {\n\t\t\treturn StartupKindToString(this._lifecycleService.startupKind);\n\t\t}\n\t\tif (!this._workspaceTrustService.isWorkspaceTrusted()) {\n\t\t\treturn 'Workspace not trusted';\n\t\t}\n\t\tconst activeViewlet = this._paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar);\n\t\tif (!activeViewlet || activeViewlet.getId() !== files.VIEWLET_ID) {\n\t\t\treturn 'Explorer viewlet not visible';\n\t\t}\n\t\tconst visibleEditorPanes = this._editorService.visibleEditorPanes;\n\t\tif (visibleEditorPanes.length !== 1) {\n\t\t\treturn `Expected text editor count : 1, Actual : ${visibleEditorPanes.length}`;\n\t\t}\n\t\tif (!isCodeEditor(visibleEditorPanes[0].getControl())) {\n\t\t\treturn 'Active editor is not a text editor';\n\t\t}\n\t\tconst activePanel = this._paneCompositeService.getActivePaneComposite(ViewContainerLocation.Panel);\n\t\tif (activePanel) {\n\t\t\treturn `Current active panel : ${this._paneCompositeService.getPaneComposite(activePanel.getId(), ViewContainerLocation.Panel)?.name}`;\n\t\t}\n\t\tconst isLatestVersion = await this._updateService.isLatestVersion();\n\t\tif (isLatestVersion === false) {\n\t\t\treturn 'Not on latest version, updates available';\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport class BrowserStartupTimings extends StartupTimings implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IPaneCompositePartService paneCompositeService: IPaneCompositePartService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IUpdateService updateService: IUpdateService,\n\t\t@IWorkspaceTrustManagementService workspaceTrustService: IWorkspaceTrustManagementService,\n\t\t@ITimerService private readonly timerService: ITimerService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t\tsuper(editorService, paneCompositeService, lifecycleService, updateService, workspaceTrustService);\n\n\t\tthis.logPerfMarks();\n\t}\n\n\tprivate async logPerfMarks(): Promise<void> {\n\t\tif (!this.environmentService.profDurationMarkers) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.timerService.whenReady();\n\n\t\tconst standardStartupError = await this._isStandardStartup();\n\t\tconst perfBaseline = await this.timerService.perfBaseline;\n\t\tconst [from, to] = this.environmentService.profDurationMarkers;\n\t\tconst content = `${this.timerService.getDuration(from, to)}\\t${this.productService.nameShort}\\t${(this.productService.commit || '').slice(0, 10) || '0000000000'}\\t${this.telemetryService.sessionId}\\t${standardStartupError === undefined ? 'standard_start' : 'NO_standard_start : ' + standardStartupError}\\t${String(perfBaseline).padStart(4, '0')}ms\\n`;\n\n\t\tthis.logService.info(`[prof-timers] ${content}`);\n\t}\n}\n\nexport class BrowserResourcePerformanceMarks {\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService\n\t) {\n\n\t\ttype Entry = {\n\t\t\thosthash: string;\n\t\t\tname: string;\n\t\t\tduration: number;\n\t\t};\n\t\ttype EntryClassifify = {\n\t\t\towner: 'jrieken';\n\t\t\tcomment: 'Resource performance numbers';\n\t\t\thosthash: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Hash of the hostname' };\n\t\t\tname: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; comment: 'Resource basename' };\n\t\t\tduration: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Resource duration' };\n\t\t};\n\t\tfor (const item of performance.getEntriesByType('resource')) {\n\n\t\t\ttry {\n\t\t\t\tconst url = new URL(item.name);\n\t\t\t\tconst name = posix.basename(url.pathname);\n\n\t\t\t\ttelemetryService.publicLog2<Entry, EntryClassifify>('startup.resource.perf', {\n\t\t\t\t\thosthash: `H${hash(url.host).toString(16)}`,\n\t\t\t\t\tname,\n\t\t\t\t\tduration: item.duration\n\t\t\t\t});\n\t\t\t} catch {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t}\n}\n"]}