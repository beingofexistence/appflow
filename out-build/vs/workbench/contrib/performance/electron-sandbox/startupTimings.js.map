{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/performance/electron-sandbox/startupTimings.ts"],"names":[],"mappings":"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","file":"startupTimings.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { timeout } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { ILifecycleService } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUpdateService } from 'vs/platform/update/common/update';\nimport { INativeHostService } from 'vs/platform/native/common/native';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ITimerService } from 'vs/workbench/services/timer/browser/timerService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IWorkspaceTrustManagementService } from 'vs/platform/workspace/common/workspaceTrust';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { StartupTimings } from 'vs/workbench/contrib/performance/browser/startupTimings';\n\nexport class NativeStartupTimings extends StartupTimings implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITimerService private readonly _timerService: ITimerService,\n\t\t@INativeHostService private readonly _nativeHostService: INativeHostService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IPaneCompositePartService paneCompositeService: IPaneCompositePartService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IUpdateService updateService: IUpdateService,\n\t\t@INativeWorkbenchEnvironmentService private readonly _environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@IWorkspaceTrustManagementService workspaceTrustService: IWorkspaceTrustManagementService,\n\t) {\n\t\tsuper(editorService, paneCompositeService, lifecycleService, updateService, workspaceTrustService);\n\n\t\tthis._report().catch(onUnexpectedError);\n\t}\n\n\tprivate async _report() {\n\t\tconst standardStartupError = await this._isStandardStartup();\n\t\tthis._appendStartupTimes(standardStartupError).catch(onUnexpectedError);\n\t}\n\n\tprivate async _appendStartupTimes(standardStartupError: string | undefined) {\n\t\tconst appendTo = this._environmentService.args['prof-append-timers'];\n\t\tconst durationMarkers = this._environmentService.args['prof-duration-markers'];\n\t\tconst durationMarkersFile = this._environmentService.args['prof-duration-markers-file'];\n\t\tif (!appendTo && !durationMarkers) {\n\t\t\t// nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait Promise.all([\n\t\t\t\tthis._timerService.whenReady(),\n\t\t\t\ttimeout(15000), // wait: cached data creation, telemetry sending\n\t\t\t]);\n\n\t\t\tconst perfBaseline = await this._timerService.perfBaseline;\n\n\t\t\tif (appendTo) {\n\t\t\t\tconst content = `${this._timerService.startupMetrics.ellapsed}\\t${this._productService.nameShort}\\t${(this._productService.commit || '').slice(0, 10) || '0000000000'}\\t${this._telemetryService.sessionId}\\t${standardStartupError === undefined ? 'standard_start' : 'NO_standard_start : ' + standardStartupError}\\t${String(perfBaseline).padStart(4, '0')}ms\\n`;\n\t\t\t\tawait this.appendContent(URI.file(appendTo), content);\n\t\t\t}\n\n\t\t\tif (durationMarkers?.length) {\n\t\t\t\tconst durations: string[] = [];\n\t\t\t\tfor (const durationMarker of durationMarkers) {\n\t\t\t\t\tlet duration: number = 0;\n\t\t\t\t\tif (durationMarker === 'ellapsed') {\n\t\t\t\t\t\tduration = this._timerService.startupMetrics.ellapsed;\n\t\t\t\t\t} else if (durationMarker.indexOf('-') !== -1) {\n\t\t\t\t\t\tconst markers = durationMarker.split('-');\n\t\t\t\t\t\tif (markers.length === 2) {\n\t\t\t\t\t\t\tduration = this._timerService.getDuration(markers[0], markers[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (duration) {\n\t\t\t\t\t\tdurations.push(durationMarker);\n\t\t\t\t\t\tdurations.push(`${duration}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst durationsContent = `${durations.join('\\t')}\\n`;\n\t\t\t\tif (durationMarkersFile) {\n\t\t\t\t\tawait this.appendContent(URI.file(durationMarkersFile), durationsContent);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(durationsContent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t} finally {\n\t\t\tthis._nativeHostService.exit(0);\n\t\t}\n\t}\n\n\tprotected override async _isStandardStartup(): Promise<string | undefined> {\n\t\tconst windowCount = await this._nativeHostService.getWindowCount();\n\t\tif (windowCount !== 1) {\n\t\t\treturn `Expected window count : 1, Actual : ${windowCount}`;\n\t\t}\n\t\treturn super._isStandardStartup();\n\t}\n\n\tprivate async appendContent(file: URI, content: string): Promise<void> {\n\t\tconst chunks: VSBuffer[] = [];\n\t\tif (await this._fileService.exists(file)) {\n\t\t\tchunks.push((await this._fileService.readFile(file)).value);\n\t\t}\n\t\tchunks.push(VSBuffer.fromString(content));\n\t\tawait this._fileService.writeFile(file, VSBuffer.concat(chunks));\n\t}\n}\n"]}