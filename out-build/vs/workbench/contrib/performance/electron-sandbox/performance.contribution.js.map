{"version":3,"sources":["vs/workbench/contrib/performance/electron-sandbox/performance.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAYhG,mBAAmB;IAEnB,cAAG,CAAM,EAAE,CAAkC,0BAAU,CAAC,SAAS,CAAC,CAAC,6BAA6B,CAC/F,2BAAI,oCAEJ,CAAC;IAEF,sBAAsB;IAEtB,cAAG,CAAM,EAAE,CAAkC,0BAAU,CAAC,SAAS,CAAC,CAAC,6BAA6B,CAC/F,sBAAI,kCAEJ,CAAC;IAEF,qBAAqB;IAErB,cAAG,CAAM,EAAE,CAAkC,0BAAU,CAAC,SAAS,CAAC,CAAC,6BAA6B,CAC/F,qBAAI,oCAEJ,CAAC;IAEF,cAAG,CAAM,EAAE,CAAyB,2BAAS,CAAC,aAAa,CAAC,CAAC,qBAAqB,CAAC;QAClF,GAAG,mBAAG;QACN,YAAY,EAAE;YACb,4CAA4C,EAAE;gBAC7C,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,CAAC,cAAc,CAAC;gBACtB,mBAAmB,EAAE,IAAA,cAAQ,EAAC,CAAgC,EAAE,IAAwD,CAAC;aACzH;SACD;KACD,CAAC,CAAC","file":"performance.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { StartupProfiler } from './startupProfiler';\nimport { NativeStartupTimings } from './startupTimings';\nimport { RendererProfiling } from 'vs/workbench/contrib/performance/electron-sandbox/rendererAutoProfiler';\nimport { IConfigurationRegistry, Extensions as ConfigExt } from 'vs/platform/configuration/common/configurationRegistry';\nimport { localize } from 'vs/nls';\nimport { applicationConfigurationNodeBase } from 'vs/workbench/common/configuration';\n\n// -- auto profiler\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(\n\tRendererProfiling,\n\tLifecyclePhase.Eventually\n);\n\n// -- startup profiler\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(\n\tStartupProfiler,\n\tLifecyclePhase.Restored\n);\n\n// -- startup timings\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(\n\tNativeStartupTimings,\n\tLifecyclePhase.Eventually\n);\n\nRegistry.as<IConfigurationRegistry>(ConfigExt.Configuration).registerConfiguration({\n\t...applicationConfigurationNodeBase,\n\t'properties': {\n\t\t'application.experimental.rendererProfiling': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\ttags: ['experimental'],\n\t\t\tmarkdownDescription: localize('experimental.rendererProfiling', \"When enabled slow renderers are automatically profiled\")\n\t\t}\n\t}\n});\n"]}