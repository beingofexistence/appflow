{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/welcomeBanner/browser/welcomeBanner.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAWhG,IAAM,yBAAyB,GAA/B,MAAM,yBAAyB;;iBAEN,MAAC,GAA8B,oCAA9B,AAAkE,CAAC;QAE5F,YACiB,aAAmB,EAClB,cAAmB,EACC,kBAAuB;YAE5D,MAAM,aAAa,GAAG,kBAAkB,CAAC,OAAO,EAAE,aAAa,CAAC;YAChE,IAAI,CAAC,aAAa,EAAE;gBACnB,OAAO,CAAC,gCAAgC;aACxC;YAED,IAAI,cAAc,CAAC,UAAU,CAAC,2BAAyB,CAAC,CAAC,gCAAmD,KAAK,CAAC,EAAE;gBACnH,OAAO,CAAC,2BAA2B;aACnC;YAED,IAAI,IAAI,GAAgC,SAAS,CAAC;YAClD,IAAI,OAAO,aAAa,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC3C,IAAI,GAAG,qBAAS,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;aAC5C;iBAAM,IAAI,aAAa,CAAC,IAAI,EAAE;gBAC9B,IAAI,GAAG,SAAG,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;aACtC;YAED,aAAa,CAAC,IAAI,CAAC;gBAClB,EAAE,EAAE,gBAAgB;gBACpB,OAAO,EAAE,aAAa,CAAC,OAAO;gBAC9B,IAAI;gBACJ,OAAO,EAAE,aAAa,CAAC,OAAO;gBAC9B,OAAO,EAAE,GAAG,EAAE;oBACb,cAAc,CAAC,KAAK,CAAC,2BAAyB,CAAC,CAAC,EAA6B,IAAI,8DAA8C,CAAC;gBACjI,CAAC;aACD,CAAC,CAAC;QACJ,CAAC;;IAlCI,yBAAyB;QAK5B,WAAA,oBAAI,CAAA;QACJ,WAAA,aAAG,CAAA;QACH,WAAA,wBAAG,CAAA;OAPA,yBAAyB,CAmC9B;IAED,cAAG,CAAM,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC;SACzE,6BAA6B,CAAC,yBAAyB,kCAA0B,CAAC","file":"welcomeBanner.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { IBannerService } from 'vs/workbench/services/banner/browser/bannerService';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';\nimport { URI } from 'vs/base/common/uri';\nimport { ThemeIcon } from 'vs/base/common/themables';\n\nclass WelcomeBannerContribution {\n\n\tprivate static readonly WELCOME_BANNER_DISMISSED_KEY = 'workbench.banner.welcome.dismissed';\n\n\tconstructor(\n\t\t@IBannerService bannerService: IBannerService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IBrowserWorkbenchEnvironmentService environmentService: IBrowserWorkbenchEnvironmentService\n\t) {\n\t\tconst welcomeBanner = environmentService.options?.welcomeBanner;\n\t\tif (!welcomeBanner) {\n\t\t\treturn; // welcome banner is not enabled\n\t\t}\n\n\t\tif (storageService.getBoolean(WelcomeBannerContribution.WELCOME_BANNER_DISMISSED_KEY, StorageScope.PROFILE, false)) {\n\t\t\treturn; // welcome banner dismissed\n\t\t}\n\n\t\tlet icon: ThemeIcon | URI | undefined = undefined;\n\t\tif (typeof welcomeBanner.icon === 'string') {\n\t\t\ticon = ThemeIcon.fromId(welcomeBanner.icon);\n\t\t} else if (welcomeBanner.icon) {\n\t\t\ticon = URI.revive(welcomeBanner.icon);\n\t\t}\n\n\t\tbannerService.show({\n\t\t\tid: 'welcome.banner',\n\t\t\tmessage: welcomeBanner.message,\n\t\t\ticon,\n\t\t\tactions: welcomeBanner.actions,\n\t\t\tonClose: () => {\n\t\t\t\tstorageService.store(WelcomeBannerContribution.WELCOME_BANNER_DISMISSED_KEY, true, StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\t\t}\n\t\t});\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(WelcomeBannerContribution, LifecyclePhase.Restored);\n"]}