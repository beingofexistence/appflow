{"version":3,"sources":["vs/workbench/contrib/logs/electron-sandbox/logsActions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAUzF,IAAM,IAAI,GAAV,MAAM,IAAqB,SAAQ,aAAG;iBAE5B,OAAE,GAAG,iCAAH,AAAoC,CAAC;iBACvC,UAAK,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAgB,EAAE,IAAkB,CAAC,EAAE,QAAQ,EAAE,kBAAkB,EAA5F,AAA8F,CAAC;QAEpH,YAAY,EAAU,EAAE,KAAa,EACiB,CAAwB,EACxC,CAAuB;YAE5D,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAHoC,MAAC,GAAD,CAAC,CAAuB;YACxC,MAAC,GAAD,CAAC,CAAsB;QAG7D,CAAC;QAEQ,GAAG;YACX,OAAO,IAAI,CAAC,CAAC,CAAiB,gBAAgB,CAAC,IAAA,eAAG,EAAM,IAAI,CAAC,CAAC,CAAkB,QAAQ,EAAE,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;QAC9I,CAAC;;IAdW,oBAAI;mBAAJ,IAAI;QAMd,WAAA,yBAAI,CAAA;QACJ,WAAA,aAAI,CAAA;OAPM,IAAI,CAehB;IAEM,IAAM,IAAI,GAAV,MAAM,IAA8B,SAAQ,aAAG;iBAErC,OAAE,GAAG,0CAAH,AAA6C,CAAC;iBAChD,UAAK,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAyB,EAAE,IAA4B,CAAC,EAAE,QAAQ,EAAE,4BAA4B,EAAzH,AAA2H,CAAC;QAEjJ,YAAY,EAAU,EAAE,KAAa,EACiB,CAAuB,EAC7C,CAAgB,EACV,CAAuB;YAE5D,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAJoC,MAAC,GAAD,CAAC,CAAsB;YAC7C,MAAC,GAAD,CAAC,CAAe;YACV,MAAC,GAAD,CAAC,CAAsB;QAG7D,CAAC;QAEQ,KAAK,CAAC,GAAG;YACjB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,CAAC,CAAW,OAAO,CAAC,IAAI,CAAC,CAAC,CAAiB,eAAe,CAAC,CAAC;YAC1F,IAAI,UAAU,CAAC,QAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAClD,OAAO,IAAI,CAAC,CAAC,CAAiB,gBAAgB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;aACtH;QACF,CAAC;;IAlBW,oBAAI;mBAAJ,IAAI;QAMd,WAAA,yBAAI,CAAA;QACJ,WAAA,WAAG,CAAA;QACH,WAAA,aAAI,CAAA;OARM,IAAI,CAmBhB","file":"logsActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from 'vs/base/common/actions';\nimport * as nls from 'vs/nls';\nimport { INativeHostService } from 'vs/platform/native/common/native';\nimport { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { joinPath } from 'vs/base/common/resources';\nimport { Schemas } from 'vs/base/common/network';\n\nexport class OpenLogsFolderAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.openLogsFolder';\n\tstatic readonly TITLE = { value: nls.localize('openLogsFolder', \"Open Logs Folder\"), original: 'Open Logs Folder' };\n\n\tconstructor(id: string, label: string,\n\t\t@INativeWorkbenchEnvironmentService private readonly environmentService: INativeWorkbenchEnvironmentService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride run(): Promise<void> {\n\t\treturn this.nativeHostService.showItemInFolder(joinPath(this.environmentService.logsHome, 'main.log').with({ scheme: Schemas.file }).fsPath);\n\t}\n}\n\nexport class OpenExtensionLogsFolderAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.openExtensionLogsFolder';\n\tstatic readonly TITLE = { value: nls.localize('openExtensionLogsFolder', \"Open Extension Logs Folder\"), original: 'Open Extension Logs Folder' };\n\n\tconstructor(id: string, label: string,\n\t\t@INativeWorkbenchEnvironmentService private readonly environmentSerice: INativeWorkbenchEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\toverride async run(): Promise<void> {\n\t\tconst folderStat = await this.fileService.resolve(this.environmentSerice.extHostLogsPath);\n\t\tif (folderStat.children && folderStat.children[0]) {\n\t\t\treturn this.nativeHostService.showItemInFolder(folderStat.children[0].resource.with({ scheme: Schemas.file }).fsPath);\n\t\t}\n\t}\n}\n"]}