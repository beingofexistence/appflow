{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/logs/browser/logs.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;IAYhG,IAAM,oBAAoB,GAA1B,MAAM,oBAAqB,SAAQ,eAAG;QAErC,YACyC,CAAyB;YAEjE,KAAK,EAAE,CAAC;YAFgC,MAAC,GAAD,CAAC,CAAwB;YAGjE,IAAI,CAAC,CAAC,EAAyB,CAAC;QACjC,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,CAAC,CAAoB,cAAc,CAAC,sBAAI,CAAY,CAAC;YAE1D,IAAA,aAAG,EAAa,KAAM,SAAQ,aAAG;gBAChC;oBACC,KAAK,CAAC;wBACL,EAAE,EAAE,kBAAI,CAA2B,EAAE;wBACrC,KAAK,EAAE,kBAAI,CAA2B,KAAK;wBAC3C,QAAQ,EAAE,4BAAG,CAAQ,SAAS;wBAC9B,EAAE,EAAE,IAAI;qBACR,CAAC,CAAC;gBACJ,CAAC;gBACD,GAAG,CAAC,gBAAkC;oBACrC,OAAO,gBAAgB,CAAC,GAAG,CAAC,mBAAG,CAAmB,CAAC,cAAc,CAAC,kBAAI,EAA4B,kBAAI,CAA2B,EAAE,EAAE,kBAAI,CAA2B,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;gBACxL,CAAC;aACD,CAAC,CAAC;QAEJ,CAAC;KAED,CAAA;IA5BK,oBAAoB;QAGvB,WAAA,mBAAG,CAAA;OAHA,oBAAoB,CA4BzB;IAED,cAAG,CAAM,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC,6BAA6B,CAAC,oBAAoB,kCAA0B,CAAC","file":"logs.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { OpenWindowSessionLogFileAction } from 'vs/workbench/contrib/logs/common/logsActions';\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { LogsDataCleaner } from 'vs/workbench/contrib/logs/common/logsDataCleaner';\n\nclass WebLogOutputChannels extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.registerWebContributions();\n\t}\n\n\tprivate registerWebContributions(): void {\n\t\tthis.instantiationService.createInstance(LogsDataCleaner);\n\n\t\tregisterAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: OpenWindowSessionLogFileAction.ID,\n\t\t\t\t\ttitle: OpenWindowSessionLogFileAction.TITLE,\n\t\t\t\t\tcategory: Categories.Developer,\n\t\t\t\t\tf1: true\n\t\t\t\t});\n\t\t\t}\n\t\t\trun(servicesAccessor: ServicesAccessor): Promise<void> {\n\t\t\t\treturn servicesAccessor.get(IInstantiationService).createInstance(OpenWindowSessionLogFileAction, OpenWindowSessionLogFileAction.ID, OpenWindowSessionLogFileAction.TITLE.value).run();\n\t\t\t}\n\t\t});\n\n\t}\n\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(WebLogOutputChannels, LifecyclePhase.Restored);\n"]}