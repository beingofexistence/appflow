{"version":3,"sources":["vs/workbench/contrib/searchEditor/browser/searchEditorInput.ts"],"names":[],"mappings":"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","file":"searchEditorInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/searchEditor';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { basename } from 'vs/base/common/path';\nimport { extname, isEqual, joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ITextModel, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { localize } from 'vs/nls';\nimport { IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { GroupIdentifier, IRevertOptions, ISaveOptions, EditorResourceAccessor, IMoveResult, EditorInputCapabilities, IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { Memento } from 'vs/workbench/common/memento';\nimport { SearchEditorFindMatchClass, SearchEditorInputTypeId, SearchEditorScheme, SearchEditorWorkingCopyTypeId } from 'vs/workbench/contrib/searchEditor/browser/constants';\nimport { SearchConfigurationModel, SearchEditorModel, searchEditorModelFactory } from 'vs/workbench/contrib/searchEditor/browser/searchEditorModel';\nimport { defaultSearchConfig, parseSavedSearchEditor, serializeSearchConfiguration } from 'vs/workbench/contrib/searchEditor/browser/searchEditorSerialization';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\nimport { ITextFileSaveOptions, ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IWorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { IWorkingCopy, IWorkingCopyBackup, IWorkingCopySaveEvent, WorkingCopyCapabilities } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ISearchComplete, ISearchConfigurationProperties } from 'vs/workbench/services/search/common/search';\nimport { bufferToReadable, VSBuffer } from 'vs/base/common/buffer';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { IResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport type SearchConfiguration = {\n\tquery: string;\n\tfilesToInclude: string;\n\tfilesToExclude: string;\n\tcontextLines: number;\n\tmatchWholeWord: boolean;\n\tisCaseSensitive: boolean;\n\tisRegexp: boolean;\n\tuseExcludeSettingsAndIgnoreFiles: boolean;\n\tshowIncludesExcludes: boolean;\n\tonlyOpenEditors: boolean;\n\tnotebookSearchConfig: {\n\t\tincludeMarkupInput: boolean;\n\t\tincludeMarkupPreview: boolean;\n\t\tincludeCodeInput: boolean;\n\t\tincludeOutput: boolean;\n\t};\n};\n\nexport const SEARCH_EDITOR_EXT = '.code-search';\n\nexport class SearchEditorInput extends EditorInput {\n\tstatic readonly ID: string = SearchEditorInputTypeId;\n\n\toverride get typeId(): string {\n\t\treturn SearchEditorInput.ID;\n\t}\n\n\toverride get editorId(): string | undefined {\n\t\treturn this.typeId;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\tlet capabilities = EditorInputCapabilities.Singleton;\n\t\tif (!this.backingUri) {\n\t\t\tcapabilities |= EditorInputCapabilities.Untitled;\n\t\t}\n\n\t\treturn capabilities;\n\t}\n\n\tprivate memento: Memento;\n\n\tprivate dirty: boolean = false;\n\n\tprivate lastLabel: string | undefined;\n\n\tprivate readonly _onDidChangeContent = this._register(new Emitter<void>());\n\treadonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tprivate readonly _onDidSave = this._register(new Emitter<IWorkingCopySaveEvent>());\n\treadonly onDidSave: Event<IWorkingCopySaveEvent> = this._onDidSave.event;\n\n\tprivate oldDecorationsIDs: string[] = [];\n\n\tget resource() {\n\t\treturn this.backingUri || this.modelUri;\n\t}\n\n\tpublic ongoingSearchOperation: Promise<ISearchComplete> | undefined;\n\n\tpublic model: SearchEditorModel;\n\tprivate _cachedResultsModel: ITextModel | undefined;\n\tprivate _cachedConfigurationModel: SearchConfigurationModel | undefined;\n\n\tconstructor(\n\t\tpublic readonly modelUri: URI,\n\t\tpublic readonly backingUri: URI | undefined,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ITextFileService protected readonly textFileService: ITextFileService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkingCopyService private readonly workingCopyService: IWorkingCopyService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper();\n\n\t\tthis.model = instantiationService.createInstance(SearchEditorModel, modelUri);\n\n\t\tif (this.modelUri.scheme !== SearchEditorScheme) {\n\t\t\tthrow Error('SearchEditorInput must be invoked with a SearchEditorScheme uri');\n\t\t}\n\n\t\tthis.memento = new Memento(SearchEditorInput.ID, storageService);\n\t\tstorageService.onWillSaveState(() => this.memento.saveMemento());\n\n\t\tconst input = this;\n\t\tconst workingCopyAdapter = new class implements IWorkingCopy {\n\t\t\treadonly typeId = SearchEditorWorkingCopyTypeId;\n\t\t\treadonly resource = input.modelUri;\n\t\t\tget name() { return input.getName(); }\n\t\t\treadonly capabilities = input.hasCapability(EditorInputCapabilities.Untitled) ? WorkingCopyCapabilities.Untitled : WorkingCopyCapabilities.None;\n\t\t\treadonly onDidChangeDirty = input.onDidChangeDirty;\n\t\t\treadonly onDidChangeContent = input.onDidChangeContent;\n\t\t\treadonly onDidSave = input.onDidSave;\n\t\t\tisDirty(): boolean { return input.isDirty(); }\n\t\t\tisModified(): boolean { return input.isDirty(); }\n\t\t\tbackup(token: CancellationToken): Promise<IWorkingCopyBackup> { return input.backup(token); }\n\t\t\tsave(options?: ISaveOptions): Promise<boolean> { return input.save(0, options).then(editor => !!editor); }\n\t\t\trevert(options?: IRevertOptions): Promise<void> { return input.revert(0, options); }\n\t\t};\n\n\t\tthis._register(this.workingCopyService.registerWorkingCopy(workingCopyAdapter));\n\t}\n\n\toverride async save(group: GroupIdentifier, options?: ITextFileSaveOptions): Promise<EditorInput | undefined> {\n\t\tif (((await this.resolveModels()).resultsModel).isDisposed()) { return; }\n\n\t\tif (this.backingUri) {\n\t\t\tawait this.textFileService.write(this.backingUri, await this.serializeForDisk(), options);\n\t\t\tthis.setDirty(false);\n\t\t\tthis._onDidSave.fire({ reason: options?.reason, source: options?.source });\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn this.saveAs(group, options);\n\t\t}\n\t}\n\n\tpublic tryReadConfigSync(): SearchConfiguration | undefined {\n\t\treturn this._cachedConfigurationModel?.config;\n\t}\n\n\tprivate async serializeForDisk() {\n\t\tconst { configurationModel, resultsModel } = await this.resolveModels();\n\t\treturn serializeSearchConfiguration(configurationModel.config) + '\\n' + resultsModel.getValue();\n\t}\n\n\tprivate configChangeListenerDisposable: IDisposable | undefined;\n\tprivate registerConfigChangeListeners(model: SearchConfigurationModel) {\n\t\tthis.configChangeListenerDisposable?.dispose();\n\t\tif (!this.isDisposed()) {\n\t\t\tthis.configChangeListenerDisposable = model.onConfigDidUpdate(() => {\n\t\t\t\tif (this.lastLabel !== this.getName()) {\n\t\t\t\t\tthis._onDidChangeLabel.fire();\n\t\t\t\t\tthis.lastLabel = this.getName();\n\t\t\t\t}\n\t\t\t\tthis.memento.getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE).searchConfig = model.config;\n\t\t\t});\n\t\t\tthis._register(this.configChangeListenerDisposable);\n\t\t}\n\t}\n\n\tasync resolveModels() {\n\t\treturn this.model.resolve().then(data => {\n\t\t\tthis._cachedResultsModel = data.resultsModel;\n\t\t\tthis._cachedConfigurationModel = data.configurationModel;\n\t\t\tif (this.lastLabel !== this.getName()) {\n\t\t\t\tthis._onDidChangeLabel.fire();\n\t\t\t\tthis.lastLabel = this.getName();\n\t\t\t}\n\t\t\tthis.registerConfigChangeListeners(data.configurationModel);\n\t\t\treturn data;\n\t\t});\n\t}\n\n\toverride async saveAs(group: GroupIdentifier, options?: ITextFileSaveOptions): Promise<EditorInput | undefined> {\n\t\tconst path = await this.fileDialogService.pickFileToSave(await this.suggestFileName(), options?.availableFileSystems);\n\t\tif (path) {\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\towner: 'roblourens';\n\t\t\t\t\tcomment: 'Fired when a search editor is saved';\n\t\t\t\t}>\n\t\t\t\t('searchEditor/saveSearchResults');\n\t\t\tconst toWrite = await this.serializeForDisk();\n\t\t\tif (await this.textFileService.create([{ resource: path, value: toWrite, options: { overwrite: true } }])) {\n\t\t\t\tthis.setDirty(false);\n\t\t\t\tif (!isEqual(path, this.modelUri)) {\n\t\t\t\t\tconst input = this.instantiationService.invokeFunction(getOrMakeSearchEditorInput, { fileUri: path, from: 'existingFile' });\n\t\t\t\t\tinput.setMatchRanges(this.getMatchRanges());\n\t\t\t\t\treturn input;\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\toverride getName(maxLength = 12): string {\n\t\tconst trimToMax = (label: string) => (label.length < maxLength ? label : `${label.slice(0, maxLength - 3)}...`);\n\n\t\tif (this.backingUri) {\n\t\t\tconst originalURI = EditorResourceAccessor.getOriginalUri(this);\n\t\t\treturn localize('searchTitle.withQuery', \"Search: {0}\", basename((originalURI ?? this.backingUri).path, SEARCH_EDITOR_EXT));\n\t\t}\n\n\t\tconst query = this._cachedConfigurationModel?.config?.query?.trim();\n\t\tif (query) {\n\t\t\treturn localize('searchTitle.withQuery', \"Search: {0}\", trimToMax(query));\n\t\t}\n\t\treturn localize('searchTitle', \"Search\");\n\t}\n\n\tsetDirty(dirty: boolean) {\n\t\tconst wasDirty = this.dirty;\n\t\tthis.dirty = dirty;\n\t\tif (wasDirty !== dirty) {\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\t}\n\n\toverride isDirty() {\n\t\treturn this.dirty;\n\t}\n\n\toverride async rename(group: GroupIdentifier, target: URI): Promise<IMoveResult | undefined> {\n\t\tif (extname(target) === SEARCH_EDITOR_EXT) {\n\t\t\treturn {\n\t\t\t\teditor: this.instantiationService.invokeFunction(getOrMakeSearchEditorInput, { from: 'existingFile', fileUri: target })\n\t\t\t};\n\t\t}\n\t\t// Ignore move if editor was renamed to a different file extension\n\t\treturn undefined;\n\t}\n\n\toverride dispose() {\n\t\tthis.modelService.destroyModel(this.modelUri);\n\t\tsuper.dispose();\n\t}\n\n\toverride matches(other: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (super.matches(other)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (other instanceof SearchEditorInput) {\n\t\t\treturn !!(other.modelUri.fragment && other.modelUri.fragment === this.modelUri.fragment) || !!(other.backingUri && isEqual(other.backingUri, this.backingUri));\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetMatchRanges(): Range[] {\n\t\treturn (this._cachedResultsModel?.getAllDecorations() ?? [])\n\t\t\t.filter(decoration => decoration.options.className === SearchEditorFindMatchClass)\n\t\t\t.filter(({ range }) => !(range.startColumn === 1 && range.endColumn === 1))\n\t\t\t.map(({ range }) => range);\n\t}\n\n\tasync setMatchRanges(ranges: Range[]) {\n\t\tthis.oldDecorationsIDs = (await this.resolveModels()).resultsModel.deltaDecorations(this.oldDecorationsIDs, ranges.map(range =>\n\t\t\t({ range, options: { description: 'search-editor-find-match', className: SearchEditorFindMatchClass, stickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges } })));\n\t}\n\n\toverride async revert(group: GroupIdentifier, options?: IRevertOptions) {\n\t\tif (options?.soft) {\n\t\t\tthis.setDirty(false);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.backingUri) {\n\t\t\tconst { config, text } = await this.instantiationService.invokeFunction(parseSavedSearchEditor, this.backingUri);\n\t\t\tconst { resultsModel, configurationModel } = await this.resolveModels();\n\t\t\tresultsModel.setValue(text);\n\t\t\tconfigurationModel.updateConfig(config);\n\t\t} else {\n\t\t\t(await this.resolveModels()).resultsModel.setValue('');\n\t\t}\n\t\tsuper.revert(group, options);\n\t\tthis.setDirty(false);\n\t}\n\n\tprivate async backup(token: CancellationToken): Promise<IWorkingCopyBackup> {\n\t\tconst contents = await this.serializeForDisk();\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn {};\n\t\t}\n\n\t\treturn {\n\t\t\tcontent: bufferToReadable(VSBuffer.fromString(contents))\n\t\t};\n\t}\n\n\tprivate async suggestFileName(): Promise<URI> {\n\t\tconst query = (await this.resolveModels()).configurationModel.config.query;\n\t\tconst searchFileName = (query.replace(/[^\\w \\-_]+/g, '_') || 'Search') + SEARCH_EDITOR_EXT;\n\t\treturn joinPath(await this.fileDialogService.defaultFilePath(this.pathService.defaultUriScheme), searchFileName);\n\t}\n\n\toverride toUntyped(): IResourceEditorInput | undefined {\n\t\tif (this.hasCapability(EditorInputCapabilities.Untitled)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tresource: this.resource,\n\t\t\toptions: {\n\t\t\t\toverride: SearchEditorInput.ID\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport const getOrMakeSearchEditorInput = (\n\taccessor: ServicesAccessor,\n\texistingData: (\n\t\t| { from: 'model'; config?: Partial<SearchConfiguration>; modelUri: URI; backupOf?: URI }\n\t\t| { from: 'rawData'; resultsContents: string | undefined; config: Partial<SearchConfiguration> }\n\t\t| { from: 'existingFile'; fileUri: URI })\n): SearchEditorInput => {\n\n\tconst storageService = accessor.get(IStorageService);\n\tconst configurationService = accessor.get(IConfigurationService);\n\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tconst modelUri = existingData.from === 'model' ? existingData.modelUri : URI.from({ scheme: SearchEditorScheme, fragment: `${Math.random()}` });\n\n\tif (!searchEditorModelFactory.models.has(modelUri)) {\n\t\tif (existingData.from === 'existingFile') {\n\t\t\tinstantiationService.invokeFunction(accessor => searchEditorModelFactory.initializeModelFromExistingFile(accessor, modelUri, existingData.fileUri));\n\t\t} else {\n\n\t\t\tconst searchEditorSettings = configurationService.getValue<ISearchConfigurationProperties>('search').searchEditor;\n\n\t\t\tconst reuseOldSettings = searchEditorSettings.reusePriorSearchConfiguration;\n\t\t\tconst defaultNumberOfContextLines = searchEditorSettings.defaultNumberOfContextLines;\n\n\t\t\tconst priorConfig: SearchConfiguration = reuseOldSettings ? new Memento(SearchEditorInput.ID, storageService).getMemento(StorageScope.WORKSPACE, StorageTarget.MACHINE).searchConfig : {};\n\t\t\tconst defaultConfig = defaultSearchConfig();\n\n\t\t\tconst config = { ...defaultConfig, ...priorConfig, ...existingData.config };\n\n\t\t\tif (defaultNumberOfContextLines !== null && defaultNumberOfContextLines !== undefined) {\n\t\t\t\tconfig.contextLines = existingData?.config?.contextLines ?? defaultNumberOfContextLines;\n\t\t\t}\n\t\t\tif (existingData.from === 'rawData') {\n\t\t\t\tif (existingData.resultsContents) {\n\t\t\t\t\tconfig.contextLines = 0;\n\t\t\t\t}\n\t\t\t\tinstantiationService.invokeFunction(accessor => searchEditorModelFactory.initializeModelFromRawData(accessor, modelUri, config, existingData.resultsContents));\n\t\t\t} else {\n\t\t\t\tinstantiationService.invokeFunction(accessor => searchEditorModelFactory.initializeModelFromExistingModel(accessor, modelUri, config));\n\t\t\t}\n\t\t}\n\t}\n\treturn instantiationService.createInstance(\n\t\tSearchEditorInput,\n\t\tmodelUri,\n\t\texistingData.from === 'existingFile'\n\t\t\t? existingData.fileUri\n\t\t\t: existingData.from === 'model'\n\t\t\t\t? existingData.backupOf\n\t\t\t\t: undefined);\n};\n"]}