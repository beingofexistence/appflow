{"version":3,"sources":["vs/workbench/contrib/comments/browser/commentsEditorContribution.ts"],"names":[],"mappings":"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","file":"commentsEditorContribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyChord, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport 'vs/css!./media/review';\nimport { IActiveCodeEditor, ICodeEditor, isCodeEditor, isDiffEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, EditorContributionInstantiation, registerEditorAction, registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport * as nls from 'vs/nls';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ICommentService } from 'vs/workbench/contrib/comments/browser/commentService';\nimport { ctxCommentEditorFocused, SimpleCommentEditor } from 'vs/workbench/contrib/comments/browser/simpleCommentEditor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { MenuId, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { CommentController, ID } from 'vs/workbench/contrib/comments/browser/commentsController';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { CommentContextKeys } from 'vs/workbench/contrib/comments/common/commentContextKeys';\n\nexport class NextCommentThreadAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.nextCommentThreadAction',\n\t\t\tlabel: nls.localize('nextCommentThreadAction', \"Go to Next Comment Thread\"),\n\t\t\talias: 'Go to Next Comment Thread',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.F9,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst controller = CommentController.get(editor);\n\t\tcontroller?.nextCommentThread();\n\t}\n}\n\nexport class PreviousCommentThreadAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.previousCommentThreadAction',\n\t\t\tlabel: nls.localize('previousCommentThreadAction', \"Go to Previous Comment Thread\"),\n\t\t\talias: 'Go to Previous Comment Thread',\n\t\t\tprecondition: undefined,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.F9,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst controller = CommentController.get(editor);\n\t\tcontroller?.previousCommentThread();\n\t}\n}\n\nregisterEditorContribution(ID, CommentController, EditorContributionInstantiation.AfterFirstRender);\nregisterEditorAction(NextCommentThreadAction);\nregisterEditorAction(PreviousCommentThreadAction);\n\nexport class NextCommentingRangeAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.goToNextCommentingRange',\n\t\t\tlabel: nls.localize('goToNextCommentingRange', \"Go to Next Commenting Range\"),\n\t\t\talias: 'Go to Next Commenting Range',\n\t\t\tprecondition: CommentContextKeys.WorkspaceHasCommenting,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.DownArrow),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst controller = CommentController.get(editor);\n\t\tcontroller?.nextCommentingRange();\n\t}\n}\n\nexport class PreviousCommentingRangeAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.goToPreviousCommentingRange',\n\t\t\tlabel: nls.localize('goToPreviousCommentingRange', \"Go to Previous Commenting Range\"),\n\t\t\talias: 'Go to Next Commenting Range',\n\t\t\tprecondition: CommentContextKeys.WorkspaceHasCommenting,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.focus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.UpArrow),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst controller = CommentController.get(editor);\n\t\tcontroller?.previousCommentingRange();\n\t}\n}\n\nregisterEditorAction(NextCommentingRangeAction);\nregisterEditorAction(PreviousCommentingRangeAction);\n\nconst TOGGLE_COMMENTING_COMMAND = 'workbench.action.toggleCommenting';\nCommandsRegistry.registerCommand({\n\tid: TOGGLE_COMMENTING_COMMAND,\n\thandler: (accessor) => {\n\t\tconst commentService = accessor.get(ICommentService);\n\t\tconst enable = commentService.isCommentingEnabled;\n\t\tcommentService.enableCommenting(!enable);\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: TOGGLE_COMMENTING_COMMAND,\n\t\ttitle: nls.localize('comments.toggleCommenting', \"Toggle Editor Commenting\"),\n\t\tcategory: 'Comments',\n\t},\n\twhen: CommentContextKeys.WorkspaceHasCommenting\n});\n\nconst ADD_COMMENT_COMMAND = 'workbench.action.addComment';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: ADD_COMMENT_COMMAND,\n\thandler: async (accessor, args?: { range: IRange; fileComment: boolean }) => {\n\t\tconst activeEditor = getActiveEditor(accessor);\n\t\tif (!activeEditor) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst controller = CommentController.get(activeEditor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst position = args?.range ? new Range(args.range.startLineNumber, args.range.startLineNumber, args.range.endLineNumber, args.range.endColumn)\n\t\t\t: (args?.fileComment ? undefined : activeEditor.getSelection());\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\ttry {\n\t\t\tawait controller.addOrToggleCommentAtLine(position, undefined);\n\t\t} catch (e) {\n\t\t\tnotificationService.error(nls.localize('comments.addCommand.error', \"The cursor must be within a commenting range to add a comment\")); // TODO: Once we have commands to go to next commenting range they should be included as buttons in the error.\n\t\t}\n\t},\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC),\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: ADD_COMMENT_COMMAND,\n\t\ttitle: nls.localize('comments.addCommand', \"Add Comment on Current Selection\"),\n\t\tcategory: 'Comments'\n\t},\n\twhen: CommentContextKeys.activeCursorHasCommentingRange\n});\n\nconst COLLAPSE_ALL_COMMENT_COMMAND = 'workbench.action.collapseAllComments';\nCommandsRegistry.registerCommand({\n\tid: COLLAPSE_ALL_COMMENT_COMMAND,\n\thandler: (accessor) => {\n\t\treturn getActiveController(accessor)?.collapseAll();\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: COLLAPSE_ALL_COMMENT_COMMAND,\n\t\ttitle: nls.localize('comments.collapseAll', \"Collapse All Comments\"),\n\t\tcategory: 'Comments'\n\t},\n\twhen: CommentContextKeys.WorkspaceHasCommenting\n});\n\nconst EXPAND_ALL_COMMENT_COMMAND = 'workbench.action.expandAllComments';\nCommandsRegistry.registerCommand({\n\tid: EXPAND_ALL_COMMENT_COMMAND,\n\thandler: (accessor) => {\n\t\treturn getActiveController(accessor)?.expandAll();\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: EXPAND_ALL_COMMENT_COMMAND,\n\t\ttitle: nls.localize('comments.expandAll', \"Expand All Comments\"),\n\t\tcategory: 'Comments'\n\t},\n\twhen: CommentContextKeys.WorkspaceHasCommenting\n});\n\nconst EXPAND_UNRESOLVED_COMMENT_COMMAND = 'workbench.action.expandUnresolvedComments';\nCommandsRegistry.registerCommand({\n\tid: EXPAND_UNRESOLVED_COMMENT_COMMAND,\n\thandler: (accessor) => {\n\t\treturn getActiveController(accessor)?.expandUnresolved();\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: {\n\t\tid: EXPAND_UNRESOLVED_COMMENT_COMMAND,\n\t\ttitle: nls.localize('comments.expandUnresolved', \"Expand Unresolved Comments\"),\n\t\tcategory: 'Comments'\n\t},\n\twhen: CommentContextKeys.WorkspaceHasCommenting\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.submitComment',\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\twhen: ctxCommentEditorFocused,\n\thandler: (accessor, args) => {\n\t\tconst activeCodeEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (activeCodeEditor instanceof SimpleCommentEditor) {\n\t\t\tactiveCodeEditor.getParentThread().submitComment();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.hideComment',\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ctxCommentEditorFocused,\n\thandler: (accessor, args) => {\n\t\tconst activeCodeEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (activeCodeEditor instanceof SimpleCommentEditor) {\n\t\t\tactiveCodeEditor.getParentThread().collapse();\n\t\t}\n\t}\n});\n\nexport function getActiveEditor(accessor: ServicesAccessor): IActiveCodeEditor | null {\n\tlet activeTextEditorControl = accessor.get(IEditorService).activeTextEditorControl;\n\n\tif (isDiffEditor(activeTextEditorControl)) {\n\t\tif (activeTextEditorControl.getOriginalEditor().hasTextFocus()) {\n\t\t\tactiveTextEditorControl = activeTextEditorControl.getOriginalEditor();\n\t\t} else {\n\t\t\tactiveTextEditorControl = activeTextEditorControl.getModifiedEditor();\n\t\t}\n\t}\n\n\tif (!isCodeEditor(activeTextEditorControl) || !activeTextEditorControl.hasModel()) {\n\t\treturn null;\n\t}\n\n\treturn activeTextEditorControl;\n}\n\nfunction getActiveController(accessor: ServicesAccessor): CommentController | undefined {\n\tconst activeEditor = getActiveEditor(accessor);\n\tif (!activeEditor) {\n\t\treturn undefined;\n\t}\n\n\tconst controller = CommentController.get(activeEditor);\n\tif (!controller) {\n\t\treturn undefined;\n\t}\n\treturn controller;\n}\n\n"]}