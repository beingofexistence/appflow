{"version":3,"sources":["vs/workbench/contrib/comments/browser/commentGlyphWidget.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAYnF,QAAA,IAAI,GAAqC,IAAA,mBAAG,EAAW,qCAAqC,EAAE,EAAE,IAAI,EAAE,IAAA,mBAAG,EAAI,mBAAG,EAA8B,mBAAG,CAAc,EAAE,KAAK,EAAE,IAAA,mBAAG,EAAI,IAAA,mBAAG,EAAI,mBAAG,EAA8B,mBAAG,CAAc,EAAE,GAAG,CAAC,EAAE,MAAM,EAAE,WAAG,CAAG,KAAK,EAAE,OAAO,EAAE,WAAG,CAAG,KAAK,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAoC,EAAE,IAAoF,CAAC,CAAC,CAAC;IACpb,MAAM,8BAA8B,GAAG,IAAA,mBAAG,EAAW,uCAAuC,EAAE,EAAE,IAAI,EAAE,YAAI,EAAoC,KAAK,EAAE,YAAI,EAAoC,MAAM,EAAE,YAAI,EAAoC,OAAO,EAAE,YAAI,EAAoC,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAuC,EAAE,IAA4F,CAAC,CAAC,CAAC;IACrb,MAAM,wCAAwC,GAAG,IAAA,mBAAG,EAAW,iDAAiD,EAAE,EAAE,IAAI,EAAE,8BAA8B,EAAE,KAAK,EAAE,8BAA8B,EAAE,MAAM,EAAE,8BAA8B,EAAE,OAAO,EAAE,8BAA8B,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAiD,EAAE,IAA8F,CAAC,CAAC,CAAC;IAErb,MAAM,kCAAkC,GAAG,IAAA,mBAAG,EAAW,qCAAqC,EAAE,EAAE,IAAI,EAAE,mBAAG,EAAe,KAAK,EAAE,mBAAG,EAAe,MAAM,EAAE,WAAG,CAAG,KAAK,EAAE,OAAO,EAAE,WAAG,CAAG,KAAK,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAoC,EAAE,IAAuD,CAAC,CAAC,CAAC;IAC7S,IAAA,mBAAG,EAAW,+CAA+C,EAAE,EAAE,IAAI,EAAE,kCAAkC,EAAE,KAAK,EAAE,kCAAkC,EAAE,MAAM,EAAE,kCAAkC,EAAE,OAAO,EAAE,kCAAkC,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA8C,EAAE,IAAsF,CAAC,CAAC,CAAC;IAEvY,MAAa,IAAI;iBACF,gBAAW,GAAG,sBAAsB,CAAC;QAOnD,YAAY,MAAmB,EAAE,UAAkB;YAClD,IAAI,CAAC,CAAC,GAAkB,IAAI,CAAC,CAAC,EAAwB,CAAC;YACvD,IAAI,CAAC,CAAC,GAAS,MAAM,CAAC;YACtB,IAAI,CAAC,CAAC,GAAsB,IAAI,CAAC,CAAC,CAAO,2BAA2B,EAAE,CAAC;YACvE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAChC,CAAC;QAEO,CAAC;YACR,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,KAAgB,8BAAkB,CAAC,UAAU,CAAC;YACvE,MAAM,iBAAiB,GAA4B;gBAClD,WAAW,EAAE,IAAI,CAAe,WAAW;gBAC3C,WAAW,EAAE,IAAI;gBACjB,aAAa,EAAE;oBACd,KAAK,EAAE,IAAA,kBAAG,EAAc,UAAU,CAAC,CAAC,CAAC,wCAAwC,CAAC,CAAC,CAAC,8BAA8B,CAAC;oBAC/G,QAAQ,EAAE,yBAAiB,CAAC,MAAM;iBAClC;gBACD,qBAAqB,EAAE,IAAI;gBAC3B,yBAAyB,EAAE,qCAAqC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE;aACjG,CAAC;YAEF,OAAO,eAAG,CAAoB,aAAa,CAAC,iBAAiB,CAAC,CAAC;QAChE,CAAC;QAED,cAAc,CAAC,KAAqC;YACnD,IAAI,IAAI,CAAC,CAAC,KAAgB,KAAK,EAAE;gBAChC,IAAI,CAAC,CAAC,GAAc,KAAK,CAAC;gBAC1B,IAAI,CAAC,CAAC,GAAkB,IAAI,CAAC,CAAC,EAAwB,CAAC;gBACvD,IAAI,CAAC,CAAC,EAAmB,CAAC;aAC1B;QACF,CAAC;QAEO,CAAC;YACR,MAAM,mBAAmB,GAAG,CAAC;oBAC5B,KAAK,EAAE;wBACN,eAAe,EAAE,IAAI,CAAC,CAAC,EAAY,WAAW,EAAE,CAAC;wBACjD,aAAa,EAAE,IAAI,CAAC,CAAC,EAAY,SAAS,EAAE,CAAC;qBAC7C;oBACD,OAAO,EAAE,IAAI,CAAC,CAAC;iBACf,CAAC,CAAC;YAEH,IAAI,CAAC,CAAC,CAAoB,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACpD,CAAC;QAED,aAAa,CAAC,UAAkB;YAC/B,IAAI,CAAC,CAAC,GAAa,UAAU,CAAC;YAC9B,IAAI,CAAC,CAAC,EAAmB,CAAC;QAC3B,CAAC;QAED,WAAW;YACV,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAoB,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAEpG,OAAO;gBACN,QAAQ,EAAE;oBACT,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;oBAChD,MAAM,EAAE,CAAC;iBACT;gBACD,UAAU,EAAE,+CAAuC;aACnD,CAAC;QACH,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAoB,KAAK,EAAE,CAAC;QACnC,CAAC;;IAtEF,oBAuEC","file":"commentGlyphWidget.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Color } from 'vs/base/common/color';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidgetPosition } from 'vs/editor/browser/editorBrowser';\nimport { IModelDecorationOptions, OverviewRulerLane } from 'vs/editor/common/model';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { darken, editorBackground, editorForeground, listInactiveSelectionBackground, opaque, registerColor } from 'vs/platform/theme/common/colorRegistry';\nimport { themeColorFromId } from 'vs/platform/theme/common/themeService';\nimport { IEditorDecorationsCollection } from 'vs/editor/common/editorCommon';\nimport { CommentThreadState } from 'vs/editor/common/languages';\n\nexport const overviewRulerCommentingRangeForeground = registerColor('editorGutter.commentRangeForeground', { dark: opaque(listInactiveSelectionBackground, editorBackground), light: darken(opaque(listInactiveSelectionBackground, editorBackground), .05), hcDark: Color.white, hcLight: Color.black }, nls.localize('editorGutterCommentRangeForeground', 'Editor gutter decoration color for commenting ranges. This color should be opaque.'));\nconst overviewRulerCommentForeground = registerColor('editorOverviewRuler.commentForeground', { dark: overviewRulerCommentingRangeForeground, light: overviewRulerCommentingRangeForeground, hcDark: overviewRulerCommentingRangeForeground, hcLight: overviewRulerCommentingRangeForeground }, nls.localize('editorOverviewRuler.commentForeground', 'Editor overview ruler decoration color for resolved comments. This color should be opaque.'));\nconst overviewRulerCommentUnresolvedForeground = registerColor('editorOverviewRuler.commentUnresolvedForeground', { dark: overviewRulerCommentForeground, light: overviewRulerCommentForeground, hcDark: overviewRulerCommentForeground, hcLight: overviewRulerCommentForeground }, nls.localize('editorOverviewRuler.commentUnresolvedForeground', 'Editor overview ruler decoration color for unresolved comments. This color should be opaque.'));\n\nconst editorGutterCommentGlyphForeground = registerColor('editorGutter.commentGlyphForeground', { dark: editorForeground, light: editorForeground, hcDark: Color.black, hcLight: Color.white }, nls.localize('editorGutterCommentGlyphForeground', 'Editor gutter decoration color for commenting glyphs.'));\nregisterColor('editorGutter.commentUnresolvedGlyphForeground', { dark: editorGutterCommentGlyphForeground, light: editorGutterCommentGlyphForeground, hcDark: editorGutterCommentGlyphForeground, hcLight: editorGutterCommentGlyphForeground }, nls.localize('editorGutterCommentUnresolvedGlyphForeground', 'Editor gutter decoration color for commenting glyphs for unresolved comment threads.'));\n\nexport class CommentGlyphWidget {\n\tpublic static description = 'comment-glyph-widget';\n\tprivate _lineNumber!: number;\n\tprivate _editor: ICodeEditor;\n\tprivate _threadState: CommentThreadState | undefined;\n\tprivate readonly _commentsDecorations: IEditorDecorationsCollection;\n\tprivate _commentsOptions: ModelDecorationOptions;\n\n\tconstructor(editor: ICodeEditor, lineNumber: number) {\n\t\tthis._commentsOptions = this.createDecorationOptions();\n\t\tthis._editor = editor;\n\t\tthis._commentsDecorations = this._editor.createDecorationsCollection();\n\t\tthis.setLineNumber(lineNumber);\n\t}\n\n\tprivate createDecorationOptions(): ModelDecorationOptions {\n\t\tconst unresolved = this._threadState === CommentThreadState.Unresolved;\n\t\tconst decorationOptions: IModelDecorationOptions = {\n\t\t\tdescription: CommentGlyphWidget.description,\n\t\t\tisWholeLine: true,\n\t\t\toverviewRuler: {\n\t\t\t\tcolor: themeColorFromId(unresolved ? overviewRulerCommentUnresolvedForeground : overviewRulerCommentForeground),\n\t\t\t\tposition: OverviewRulerLane.Center\n\t\t\t},\n\t\t\tcollapseOnReplaceEdit: true,\n\t\t\tlinesDecorationsClassName: `comment-range-glyph comment-thread${unresolved ? '-unresolved' : ''}`\n\t\t};\n\n\t\treturn ModelDecorationOptions.createDynamic(decorationOptions);\n\t}\n\n\tsetThreadState(state: CommentThreadState | undefined): void {\n\t\tif (this._threadState !== state) {\n\t\t\tthis._threadState = state;\n\t\t\tthis._commentsOptions = this.createDecorationOptions();\n\t\t\tthis._updateDecorations();\n\t\t}\n\t}\n\n\tprivate _updateDecorations(): void {\n\t\tconst commentsDecorations = [{\n\t\t\trange: {\n\t\t\t\tstartLineNumber: this._lineNumber, startColumn: 1,\n\t\t\t\tendLineNumber: this._lineNumber, endColumn: 1\n\t\t\t},\n\t\t\toptions: this._commentsOptions\n\t\t}];\n\n\t\tthis._commentsDecorations.set(commentsDecorations);\n\t}\n\n\tsetLineNumber(lineNumber: number): void {\n\t\tthis._lineNumber = lineNumber;\n\t\tthis._updateDecorations();\n\t}\n\n\tgetPosition(): IContentWidgetPosition {\n\t\tconst range = (this._commentsDecorations.length > 0 ? this._commentsDecorations.getRange(0) : null);\n\n\t\treturn {\n\t\t\tposition: {\n\t\t\t\tlineNumber: range ? range.endLineNumber : this._lineNumber,\n\t\t\t\tcolumn: 1\n\t\t\t},\n\t\t\tpreference: [ContentWidgetPositionPreference.EXACT]\n\t\t};\n\t}\n\n\tdispose() {\n\t\tthis._commentsDecorations.clear();\n\t}\n}\n"]}