{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/comments/browser/commentMenus.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IASzF,IAAM,IAAI,GAAV,MAAM,IAAI;QAChB,YACgC,CAAgB;YAAhB,MAAC,GAAD,CAAC,CAAe;QAC5C,CAAC;QAEL,4BAA4B,CAAC,iBAAsB;YAClD,OAAO,IAAI,CAAC,CAAC,CAAO,aAAG,CAAI,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;QACnE,CAAC;QAED,uBAAuB,CAAC,iBAAsB;YAC7C,OAAO,IAAI,CAAC,CAAC,CAAO,aAAG,CAAI,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;QACrE,CAAC;QAED,uBAAuB,CAAC,iBAAsB;YAC7C,OAAO,IAAI,CAAC,CAAC,CAAO,aAAG,CAAI,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;QACrE,CAAC;QAED,iCAAiC,CAAC,iBAAsB;YACvD,OAAO,IAAI,CAAC,CAAC,CAAO,aAAG,CAAI,8BAA8B,EAAE,iBAAiB,CAAC,CAAC;QAC/E,CAAC;QAED,sBAAsB,CAAC,OAAgB,EAAE,iBAAsB;YAC9D,OAAO,IAAI,CAAC,CAAC,CAAO,aAAG,CAAI,YAAY,EAAE,iBAAiB,CAAC,CAAC;QAC7D,CAAC;QAED,iBAAiB,CAAC,OAAgB,EAAE,iBAAsB;YACzD,OAAO,IAAI,CAAC,CAAC,CAAO,aAAG,CAAI,cAAc,EAAE,iBAAiB,CAAC,CAAC;QAC/D,CAAC;QAED,mCAAmC,CAAC,iBAAsB;YACzD,OAAO,IAAI,CAAC,CAAC,CAAO,aAAG,CAAI,yBAAyB,EAAE,iBAAiB,CAAC,CAAC;QAC1E,CAAC;QAEO,CAAC,CAAO,MAAW,EAAK,iBAAsB;YACrD,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAW,UAAU,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;YAEpE,MAAM,OAAO,GAAc,EAAE,CAAC;YAC9B,MAAM,SAAS,GAAc,EAAE,CAAC;YAChC,MAAM,MAAM,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;YAEtC,IAAA,6BAAG,EAA+B,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;YAEvF,OAAO,IAAI,CAAC;QACb,CAAC;QAED,OAAO;QAEP,CAAC;KACD,CAAA;IAhDY,oBAAI;mBAAJ,IAAI;QAEd,WAAA,aAAG,CAAA;OAFO,IAAI,CAgDhB","file":"commentMenus.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IMenuService, MenuId, IMenu } from 'vs/platform/actions/common/actions';\nimport { IAction } from 'vs/base/common/actions';\nimport { Comment } from 'vs/editor/common/languages';\nimport { createAndFillInContextMenuActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\n\nexport class CommentMenus implements IDisposable {\n\tconstructor(\n\t\t@IMenuService private readonly menuService: IMenuService\n\t) { }\n\n\tgetCommentThreadTitleActions(contextKeyService: IContextKeyService): IMenu {\n\t\treturn this.getMenu(MenuId.CommentThreadTitle, contextKeyService);\n\t}\n\n\tgetCommentThreadActions(contextKeyService: IContextKeyService): IMenu {\n\t\treturn this.getMenu(MenuId.CommentThreadActions, contextKeyService);\n\t}\n\n\tgetCommentEditorActions(contextKeyService: IContextKeyService): IMenu {\n\t\treturn this.getMenu(MenuId.CommentEditorActions, contextKeyService);\n\t}\n\n\tgetCommentThreadAdditionalActions(contextKeyService: IContextKeyService): IMenu {\n\t\treturn this.getMenu(MenuId.CommentThreadAdditionalActions, contextKeyService);\n\t}\n\n\tgetCommentTitleActions(comment: Comment, contextKeyService: IContextKeyService): IMenu {\n\t\treturn this.getMenu(MenuId.CommentTitle, contextKeyService);\n\t}\n\n\tgetCommentActions(comment: Comment, contextKeyService: IContextKeyService): IMenu {\n\t\treturn this.getMenu(MenuId.CommentActions, contextKeyService);\n\t}\n\n\tgetCommentThreadTitleContextActions(contextKeyService: IContextKeyService): IMenu {\n\t\treturn this.getMenu(MenuId.CommentThreadTitleContext, contextKeyService);\n\t}\n\n\tprivate getMenu(menuId: MenuId, contextKeyService: IContextKeyService): IMenu {\n\t\tconst menu = this.menuService.createMenu(menuId, contextKeyService);\n\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tconst result = { primary, secondary };\n\n\t\tcreateAndFillInContextMenuActions(menu, { shouldForwardArgs: true }, result, 'inline');\n\n\t\treturn menu;\n\t}\n\n\tdispose(): void {\n\n\t}\n}\n"]}