{"version":3,"sources":["vs/workbench/contrib/comments/browser/commentsViewActions.ts"],"names":[],"mappings":"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","file":"commentsViewActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { CommentsViewFilterFocusContextKey, ICommentsView } from 'vs/workbench/contrib/comments/browser/comments';\nimport { registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ViewAction } from 'vs/workbench/browser/parts/views/viewPane';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { COMMENTS_VIEW_ID } from 'vs/workbench/contrib/comments/browser/commentsTreeViewer';\nimport { FocusedViewContext } from 'vs/workbench/common/contextkeys';\nimport { viewFilterSubmenu } from 'vs/workbench/browser/parts/views/viewFilter';\n\nconst CONTEXT_KEY_SHOW_RESOLVED = new RawContextKey<boolean>('commentsView.showResolvedFilter', true);\nconst CONTEXT_KEY_SHOW_UNRESOLVED = new RawContextKey<boolean>('commentsView.showUnResolvedFilter', true);\n\nexport interface CommentsFiltersChangeEvent {\n\tshowResolved?: boolean;\n\tshowUnresolved?: boolean;\n}\n\ninterface CommentsFiltersOptions {\n\tshowResolved: boolean;\n\tshowUnresolved: boolean;\n}\n\nexport class CommentsFilters extends Disposable {\n\n\tprivate readonly _onDidChange: Emitter<CommentsFiltersChangeEvent> = this._register(new Emitter<CommentsFiltersChangeEvent>());\n\treadonly onDidChange: Event<CommentsFiltersChangeEvent> = this._onDidChange.event;\n\n\tconstructor(options: CommentsFiltersOptions, private readonly contextKeyService: IContextKeyService) {\n\t\tsuper();\n\t\tthis._showResolved.set(options.showResolved);\n\t\tthis._showUnresolved.set(options.showUnresolved);\n\t}\n\n\tprivate readonly _showUnresolved = CONTEXT_KEY_SHOW_UNRESOLVED.bindTo(this.contextKeyService);\n\tget showUnresolved(): boolean {\n\t\treturn !!this._showUnresolved.get();\n\t}\n\tset showUnresolved(showUnresolved: boolean) {\n\t\tif (this._showUnresolved.get() !== showUnresolved) {\n\t\t\tthis._showUnresolved.set(showUnresolved);\n\t\t\tthis._onDidChange.fire(<CommentsFiltersChangeEvent>{ showUnresolved: true });\n\t\t}\n\t}\n\n\tprivate _showResolved = CONTEXT_KEY_SHOW_RESOLVED.bindTo(this.contextKeyService);\n\tget showResolved(): boolean {\n\t\treturn !!this._showResolved.get();\n\t}\n\tset showResolved(showResolved: boolean) {\n\t\tif (this._showResolved.get() !== showResolved) {\n\t\t\tthis._showResolved.set(showResolved);\n\t\t\tthis._onDidChange.fire(<CommentsFiltersChangeEvent>{ showResolved: true });\n\t\t}\n\t}\n\n}\n\nregisterAction2(class extends ViewAction<ICommentsView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'commentsFocusViewFromFilter',\n\t\t\ttitle: localize('focusCommentsList', \"Focus Comments view\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: CommentsViewFilterFocusContextKey,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow\n\t\t\t},\n\t\t\tviewId: COMMENTS_VIEW_ID\n\t\t});\n\t}\n\tasync runInView(serviceAccessor: ServicesAccessor, commentsView: ICommentsView): Promise<void> {\n\t\tcommentsView.focus();\n\t}\n});\n\nregisterAction2(class extends ViewAction<ICommentsView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'commentsClearFilterText',\n\t\t\ttitle: localize('commentsClearFilterText', \"Clear filter text\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: CommentsViewFilterFocusContextKey,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyCode.Escape\n\t\t\t},\n\t\t\tviewId: COMMENTS_VIEW_ID\n\t\t});\n\t}\n\tasync runInView(serviceAccessor: ServicesAccessor, commentsView: ICommentsView): Promise<void> {\n\t\tcommentsView.clearFilterText();\n\t}\n});\n\nregisterAction2(class extends ViewAction<ICommentsView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'commentsFocusFilter',\n\t\t\ttitle: localize('focusCommentsFilter', \"Focus comments filter\"),\n\t\t\tkeybinding: {\n\t\t\t\twhen: FocusedViewContext.isEqualTo(COMMENTS_VIEW_ID),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyF\n\t\t\t},\n\t\t\tviewId: COMMENTS_VIEW_ID\n\t\t});\n\t}\n\tasync runInView(serviceAccessor: ServicesAccessor, commentsView: ICommentsView): Promise<void> {\n\t\tcommentsView.focusFilter();\n\t}\n});\n\nregisterAction2(class extends ViewAction<ICommentsView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.actions.${COMMENTS_VIEW_ID}.toggleUnResolvedComments`,\n\t\t\ttitle: localize('toggle unresolved', \"Toggle Unresolved Comments\"),\n\t\t\tcategory: localize('comments', \"Comments\"),\n\t\t\ttoggled: {\n\t\t\t\tcondition: CONTEXT_KEY_SHOW_UNRESOLVED,\n\t\t\t\ttitle: localize('unresolved', \"Show Unresolved\"),\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: viewFilterSubmenu,\n\t\t\t\tgroup: '1_filter',\n\t\t\t\twhen: ContextKeyExpr.equals('view', COMMENTS_VIEW_ID),\n\t\t\t\torder: 1\n\t\t\t},\n\t\t\tviewId: COMMENTS_VIEW_ID\n\t\t});\n\t}\n\n\tasync runInView(serviceAccessor: ServicesAccessor, view: ICommentsView): Promise<void> {\n\t\tview.filters.showUnresolved = !view.filters.showUnresolved;\n\t}\n});\n\nregisterAction2(class extends ViewAction<ICommentsView> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: `workbench.actions.${COMMENTS_VIEW_ID}.toggleResolvedComments`,\n\t\t\ttitle: localize('toggle resolved', \"Toggle Resolved Comments\"),\n\t\t\tcategory: localize('comments', \"Comments\"),\n\t\t\ttoggled: {\n\t\t\t\tcondition: CONTEXT_KEY_SHOW_RESOLVED,\n\t\t\t\ttitle: localize('resolved', \"Show Resolved\"),\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: viewFilterSubmenu,\n\t\t\t\tgroup: '1_filter',\n\t\t\t\twhen: ContextKeyExpr.equals('view', COMMENTS_VIEW_ID),\n\t\t\t\torder: 1\n\t\t\t},\n\t\t\tviewId: COMMENTS_VIEW_ID\n\t\t});\n\t}\n\n\tasync runInView(serviceAccessor: ServicesAccessor, view: ICommentsView): Promise<void> {\n\t\tview.filters.showResolved = !view.filters.showResolved;\n\t}\n});\n"]}