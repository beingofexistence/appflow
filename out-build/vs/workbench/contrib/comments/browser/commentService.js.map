{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/comments/browser/commentService.ts"],"names":[],"mappings":"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","file":"commentService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CommentThreadChangedEvent, CommentInfo, Comment, CommentReaction, CommentingRanges, CommentThread, CommentOptions, PendingCommentThread } from 'vs/editor/common/languages';\nimport { createDecorator, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Range, IRange } from 'vs/editor/common/core/range';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ICommentThreadChangedEvent } from 'vs/workbench/contrib/comments/common/commentModel';\nimport { CommentMenus } from 'vs/workbench/contrib/comments/browser/commentMenus';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { COMMENTS_SECTION, ICommentsConfiguration } from 'vs/workbench/contrib/comments/common/commentsConfiguration';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { CommentContextKeys } from 'vs/workbench/contrib/comments/common/commentContextKeys';\n\nexport const ICommentService = createDecorator<ICommentService>('commentService');\n\ninterface IResourceCommentThreadEvent {\n\tresource: URI;\n\tcommentInfos: ICommentInfo[];\n}\n\nexport interface ICommentInfo extends CommentInfo {\n\towner: string;\n\tlabel?: string;\n}\n\nexport interface INotebookCommentInfo {\n\textensionId?: string;\n\tthreads: CommentThread<ICellRange>[];\n\towner: string;\n\tlabel?: string;\n}\n\nexport interface IWorkspaceCommentThreadsEvent {\n\townerId: string;\n\tcommentThreads: CommentThread[];\n}\n\nexport interface INotebookCommentThreadChangedEvent extends CommentThreadChangedEvent<ICellRange> {\n\towner: string;\n}\n\nexport interface ICommentController {\n\tid: string;\n\tfeatures: {\n\t\treactionGroup?: CommentReaction[];\n\t\treactionHandler?: boolean;\n\t\toptions?: CommentOptions;\n\t};\n\toptions?: CommentOptions;\n\tcontextValue?: string;\n\tcreateCommentThreadTemplate(resource: UriComponents, range: IRange | undefined): void;\n\tupdateCommentThreadTemplate(threadHandle: number, range: IRange): Promise<void>;\n\tdeleteCommentThreadMain(commentThreadId: string): void;\n\ttoggleReaction(uri: URI, thread: CommentThread, comment: Comment, reaction: CommentReaction, token: CancellationToken): Promise<void>;\n\tgetDocumentComments(resource: URI, token: CancellationToken): Promise<ICommentInfo>;\n\tgetNotebookComments(resource: URI, token: CancellationToken): Promise<INotebookCommentInfo>;\n}\n\nexport interface IContinueOnCommentProvider {\n\tprovideContinueOnComments(): PendingCommentThread[];\n}\n\nexport interface ICommentService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidSetResourceCommentInfos: Event<IResourceCommentThreadEvent>;\n\treadonly onDidSetAllCommentThreads: Event<IWorkspaceCommentThreadsEvent>;\n\treadonly onDidUpdateCommentThreads: Event<ICommentThreadChangedEvent>;\n\treadonly onDidUpdateNotebookCommentThreads: Event<INotebookCommentThreadChangedEvent>;\n\treadonly onDidChangeActiveCommentThread: Event<CommentThread | null>;\n\treadonly onDidChangeCurrentCommentThread: Event<CommentThread | undefined>;\n\treadonly onDidUpdateCommentingRanges: Event<{ owner: string }>;\n\treadonly onDidChangeActiveCommentingRange: Event<{ range: Range; commentingRangesInfo: CommentingRanges }>;\n\treadonly onDidSetDataProvider: Event<void>;\n\treadonly onDidDeleteDataProvider: Event<string | undefined>;\n\treadonly onDidChangeCommentingEnabled: Event<boolean>;\n\treadonly isCommentingEnabled: boolean;\n\tsetDocumentComments(resource: URI, commentInfos: ICommentInfo[]): void;\n\tsetWorkspaceComments(owner: string, commentsByResource: CommentThread<IRange | ICellRange>[]): void;\n\tremoveWorkspaceComments(owner: string): void;\n\tregisterCommentController(owner: string, commentControl: ICommentController): void;\n\tunregisterCommentController(owner?: string): void;\n\tgetCommentController(owner: string): ICommentController | undefined;\n\tcreateCommentThreadTemplate(owner: string, resource: URI, range: Range | undefined): void;\n\tupdateCommentThreadTemplate(owner: string, threadHandle: number, range: Range): Promise<void>;\n\tgetCommentMenus(owner: string): CommentMenus;\n\tupdateComments(ownerId: string, event: CommentThreadChangedEvent<IRange>): void;\n\tupdateNotebookComments(ownerId: string, event: CommentThreadChangedEvent<ICellRange>): void;\n\tdisposeCommentThread(ownerId: string, threadId: string): void;\n\tgetDocumentComments(resource: URI): Promise<(ICommentInfo | null)[]>;\n\tgetNotebookComments(resource: URI): Promise<(INotebookCommentInfo | null)[]>;\n\tupdateCommentingRanges(ownerId: string): void;\n\thasReactionHandler(owner: string): boolean;\n\ttoggleReaction(owner: string, resource: URI, thread: CommentThread<IRange | ICellRange>, comment: Comment, reaction: CommentReaction): Promise<void>;\n\tsetActiveCommentThread(commentThread: CommentThread<IRange | ICellRange> | null): void;\n\tsetCurrentCommentThread(commentThread: CommentThread<IRange | ICellRange> | undefined): void;\n\tenableCommenting(enable: boolean): void;\n\tregisterContinueOnCommentProvider(provider: IContinueOnCommentProvider): IDisposable;\n\tremoveContinueOnComment(pendingComment: { range: IRange; uri: URI; owner: string }): PendingCommentThread | undefined;\n}\n\nconst CONTINUE_ON_COMMENTS = 'comments.continueOnComments';\n\nexport class CommentService extends Disposable implements ICommentService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidSetDataProvider: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidSetDataProvider: Event<void> = this._onDidSetDataProvider.event;\n\n\tprivate readonly _onDidDeleteDataProvider: Emitter<string | undefined> = this._register(new Emitter<string | undefined>());\n\treadonly onDidDeleteDataProvider: Event<string | undefined> = this._onDidDeleteDataProvider.event;\n\n\tprivate readonly _onDidSetResourceCommentInfos: Emitter<IResourceCommentThreadEvent> = this._register(new Emitter<IResourceCommentThreadEvent>());\n\treadonly onDidSetResourceCommentInfos: Event<IResourceCommentThreadEvent> = this._onDidSetResourceCommentInfos.event;\n\n\tprivate readonly _onDidSetAllCommentThreads: Emitter<IWorkspaceCommentThreadsEvent> = this._register(new Emitter<IWorkspaceCommentThreadsEvent>());\n\treadonly onDidSetAllCommentThreads: Event<IWorkspaceCommentThreadsEvent> = this._onDidSetAllCommentThreads.event;\n\n\tprivate readonly _onDidUpdateCommentThreads: Emitter<ICommentThreadChangedEvent> = this._register(new Emitter<ICommentThreadChangedEvent>());\n\treadonly onDidUpdateCommentThreads: Event<ICommentThreadChangedEvent> = this._onDidUpdateCommentThreads.event;\n\n\tprivate readonly _onDidUpdateNotebookCommentThreads: Emitter<INotebookCommentThreadChangedEvent> = this._register(new Emitter<INotebookCommentThreadChangedEvent>());\n\treadonly onDidUpdateNotebookCommentThreads: Event<INotebookCommentThreadChangedEvent> = this._onDidUpdateNotebookCommentThreads.event;\n\n\tprivate readonly _onDidUpdateCommentingRanges: Emitter<{ owner: string }> = this._register(new Emitter<{ owner: string }>());\n\treadonly onDidUpdateCommentingRanges: Event<{ owner: string }> = this._onDidUpdateCommentingRanges.event;\n\n\tprivate readonly _onDidChangeActiveCommentThread = this._register(new Emitter<CommentThread | null>());\n\treadonly onDidChangeActiveCommentThread = this._onDidChangeActiveCommentThread.event;\n\n\tprivate readonly _onDidChangeCurrentCommentThread = this._register(new Emitter<CommentThread | undefined>());\n\treadonly onDidChangeCurrentCommentThread = this._onDidChangeCurrentCommentThread.event;\n\n\tprivate readonly _onDidChangeCommentingEnabled = this._register(new Emitter<boolean>());\n\treadonly onDidChangeCommentingEnabled = this._onDidChangeCommentingEnabled.event;\n\n\tprivate readonly _onDidChangeActiveCommentingRange: Emitter<{\n\t\trange: Range; commentingRangesInfo:\n\t\tCommentingRanges;\n\t}> = this._register(new Emitter<{\n\t\trange: Range; commentingRangesInfo:\n\t\tCommentingRanges;\n\t}>());\n\treadonly onDidChangeActiveCommentingRange: Event<{ range: Range; commentingRangesInfo: CommentingRanges }> = this._onDidChangeActiveCommentingRange.event;\n\n\tprivate _commentControls = new Map<string, ICommentController>();\n\tprivate _commentMenus = new Map<string, CommentMenus>();\n\tprivate _isCommentingEnabled: boolean = true;\n\tprivate _workspaceHasCommenting: IContextKey<boolean>;\n\n\tprivate _continueOnComments = new Map<string, PendingCommentThread[]>(); // owner -> PendingCommentThread[]\n\tprivate _continueOnCommentProviders = new Set<IContinueOnCommentProvider>();\n\n\tconstructor(\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IStorageService private readonly storageService: IStorageService\n\t) {\n\t\tsuper();\n\t\tthis._handleConfiguration();\n\t\tthis._handleZenMode();\n\t\tthis._workspaceHasCommenting = CommentContextKeys.WorkspaceHasCommenting.bindTo(contextKeyService);\n\t\tconst storageListener = this._register(new DisposableStore());\n\n\t\tstorageListener.add(this.storageService.onDidChangeValue(StorageScope.WORKSPACE, CONTINUE_ON_COMMENTS, storageListener)((v) => {\n\t\t\tif (!v.external) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst commentsToRestore: PendingCommentThread[] | undefined = this.storageService.getObject(CONTINUE_ON_COMMENTS, StorageScope.WORKSPACE);\n\t\t\tif (!commentsToRestore) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst changedOwners = this._addContinueOnComments(commentsToRestore);\n\t\t\tfor (const owner of changedOwners) {\n\t\t\t\tconst evt: ICommentThreadChangedEvent = {\n\t\t\t\t\towner,\n\t\t\t\t\tpending: this._continueOnComments.get(owner) || [],\n\t\t\t\t\tadded: [],\n\t\t\t\t\tremoved: [],\n\t\t\t\t\tchanged: []\n\t\t\t\t};\n\t\t\t\tthis._onDidUpdateCommentThreads.fire(evt);\n\t\t\t}\n\t\t}));\n\t\tthis._register(storageService.onWillSaveState(() => {\n\t\t\tfor (const provider of this._continueOnCommentProviders) {\n\t\t\t\tconst pendingComments = provider.provideContinueOnComments();\n\t\t\t\tthis._addContinueOnComments(pendingComments);\n\t\t\t}\n\t\t\tthis._saveContinueOnComments();\n\t\t}));\n\t}\n\n\tprivate _handleConfiguration() {\n\t\tthis._isCommentingEnabled = this._defaultCommentingEnablement;\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('comments.visible')) {\n\t\t\t\tthis.enableCommenting(this._defaultCommentingEnablement);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _handleZenMode() {\n\t\tlet preZenModeValue: boolean = this._isCommentingEnabled;\n\t\tthis._register(this.layoutService.onDidChangeZenMode(e => {\n\t\t\tif (e) {\n\t\t\t\tpreZenModeValue = this._isCommentingEnabled;\n\t\t\t\tthis.enableCommenting(false);\n\t\t\t} else {\n\t\t\t\tthis.enableCommenting(preZenModeValue);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate get _defaultCommentingEnablement(): boolean {\n\t\treturn !!this.configurationService.getValue<ICommentsConfiguration | undefined>(COMMENTS_SECTION)?.visible;\n\t}\n\n\tget isCommentingEnabled(): boolean {\n\t\treturn this._isCommentingEnabled;\n\t}\n\n\tenableCommenting(enable: boolean): void {\n\t\tif (enable !== this._isCommentingEnabled) {\n\t\t\tthis._isCommentingEnabled = enable;\n\t\t\tthis._onDidChangeCommentingEnabled.fire(enable);\n\t\t}\n\t}\n\n\t/**\n\t * The current comment thread is the thread that has focus or is being hovered.\n\t * @param commentThread\n\t */\n\tsetCurrentCommentThread(commentThread: CommentThread | undefined) {\n\t\tthis._onDidChangeCurrentCommentThread.fire(commentThread);\n\t}\n\n\t/**\n\t * The active comment thread is the the thread that is currently being edited.\n\t * @param commentThread\n\t */\n\tsetActiveCommentThread(commentThread: CommentThread | null) {\n\t\tthis._onDidChangeActiveCommentThread.fire(commentThread);\n\t}\n\n\tsetDocumentComments(resource: URI, commentInfos: ICommentInfo[]): void {\n\t\tif (commentInfos.length) {\n\t\t\tthis._workspaceHasCommenting.set(true);\n\t\t}\n\t\tthis._onDidSetResourceCommentInfos.fire({ resource, commentInfos });\n\t}\n\n\tsetWorkspaceComments(owner: string, commentsByResource: CommentThread[]): void {\n\t\tif (commentsByResource.length) {\n\t\t\tthis._workspaceHasCommenting.set(true);\n\t\t}\n\t\tthis._onDidSetAllCommentThreads.fire({ ownerId: owner, commentThreads: commentsByResource });\n\t}\n\n\tremoveWorkspaceComments(owner: string): void {\n\t\tthis._onDidSetAllCommentThreads.fire({ ownerId: owner, commentThreads: [] });\n\t}\n\n\tregisterCommentController(owner: string, commentControl: ICommentController): void {\n\t\tthis._commentControls.set(owner, commentControl);\n\t\tthis._onDidSetDataProvider.fire();\n\t}\n\n\tunregisterCommentController(owner?: string): void {\n\t\tif (owner) {\n\t\t\tthis._commentControls.delete(owner);\n\t\t} else {\n\t\t\tthis._commentControls.clear();\n\t\t}\n\t\tthis._onDidDeleteDataProvider.fire(owner);\n\t}\n\n\tgetCommentController(owner: string): ICommentController | undefined {\n\t\treturn this._commentControls.get(owner);\n\t}\n\n\tcreateCommentThreadTemplate(owner: string, resource: URI, range: Range | undefined): void {\n\t\tconst commentController = this._commentControls.get(owner);\n\n\t\tif (!commentController) {\n\t\t\treturn;\n\t\t}\n\n\t\tcommentController.createCommentThreadTemplate(resource, range);\n\t}\n\n\tasync updateCommentThreadTemplate(owner: string, threadHandle: number, range: Range) {\n\t\tconst commentController = this._commentControls.get(owner);\n\n\t\tif (!commentController) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait commentController.updateCommentThreadTemplate(threadHandle, range);\n\t}\n\n\tdisposeCommentThread(owner: string, threadId: string) {\n\t\tconst controller = this.getCommentController(owner);\n\t\tcontroller?.deleteCommentThreadMain(threadId);\n\t}\n\n\tgetCommentMenus(owner: string): CommentMenus {\n\t\tif (this._commentMenus.get(owner)) {\n\t\t\treturn this._commentMenus.get(owner)!;\n\t\t}\n\n\t\tconst menu = this.instantiationService.createInstance(CommentMenus);\n\t\tthis._commentMenus.set(owner, menu);\n\t\treturn menu;\n\t}\n\n\tupdateComments(ownerId: string, event: CommentThreadChangedEvent<IRange>): void {\n\t\tconst evt: ICommentThreadChangedEvent = Object.assign({}, event, { owner: ownerId });\n\t\tthis._onDidUpdateCommentThreads.fire(evt);\n\t}\n\n\tupdateNotebookComments(ownerId: string, event: CommentThreadChangedEvent<ICellRange>): void {\n\t\tconst evt: INotebookCommentThreadChangedEvent = Object.assign({}, event, { owner: ownerId });\n\t\tthis._onDidUpdateNotebookCommentThreads.fire(evt);\n\t}\n\n\tupdateCommentingRanges(ownerId: string) {\n\t\tthis._workspaceHasCommenting.set(true);\n\t\tthis._onDidUpdateCommentingRanges.fire({ owner: ownerId });\n\t}\n\n\tasync toggleReaction(owner: string, resource: URI, thread: CommentThread, comment: Comment, reaction: CommentReaction): Promise<void> {\n\t\tconst commentController = this._commentControls.get(owner);\n\n\t\tif (commentController) {\n\t\t\treturn commentController.toggleReaction(resource, thread, comment, reaction, CancellationToken.None);\n\t\t} else {\n\t\t\tthrow new Error('Not supported');\n\t\t}\n\t}\n\n\thasReactionHandler(owner: string): boolean {\n\t\tconst commentProvider = this._commentControls.get(owner);\n\n\t\tif (commentProvider) {\n\t\t\treturn !!commentProvider.features.reactionHandler;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync getDocumentComments(resource: URI): Promise<(ICommentInfo | null)[]> {\n\t\tconst commentControlResult: Promise<ICommentInfo | null>[] = [];\n\n\t\tfor (const control of this._commentControls.values()) {\n\t\t\tcommentControlResult.push(control.getDocumentComments(resource, CancellationToken.None)\n\t\t\t\t.then(documentComments => {\n\t\t\t\t\t// Check that there aren't any continue on comments in the provided comments\n\t\t\t\t\t// This can happen because continue on comments are stored separately from local un-submitted comments.\n\t\t\t\t\tfor (const documentCommentThread of documentComments.threads) {\n\t\t\t\t\t\tif (documentCommentThread.comments?.length === 0 && documentCommentThread.range) {\n\t\t\t\t\t\t\tthis.removeContinueOnComment({ range: documentCommentThread.range, uri: resource, owner: documentComments.owner });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst pendingComments = this._continueOnComments.get(documentComments.owner);\n\t\t\t\t\tdocumentComments.pendingCommentThreads = pendingComments?.filter(pendingComment => pendingComment.uri.toString() === resource.toString());\n\t\t\t\t\treturn documentComments;\n\t\t\t\t})\n\t\t\t\t.catch(_ => {\n\t\t\t\t\treturn null;\n\t\t\t\t}));\n\t\t}\n\n\t\treturn Promise.all(commentControlResult);\n\t}\n\n\tasync getNotebookComments(resource: URI): Promise<(INotebookCommentInfo | null)[]> {\n\t\tconst commentControlResult: Promise<INotebookCommentInfo | null>[] = [];\n\n\t\tthis._commentControls.forEach(control => {\n\t\t\tcommentControlResult.push(control.getNotebookComments(resource, CancellationToken.None)\n\t\t\t\t.catch(_ => {\n\t\t\t\t\treturn null;\n\t\t\t\t}));\n\t\t});\n\n\t\treturn Promise.all(commentControlResult);\n\t}\n\n\tregisterContinueOnCommentProvider(provider: IContinueOnCommentProvider): IDisposable {\n\t\tthis._continueOnCommentProviders.add(provider);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._continueOnCommentProviders.delete(provider);\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate _saveContinueOnComments() {\n\t\tconst commentsToSave: PendingCommentThread[] = [];\n\t\tfor (const pendingComments of this._continueOnComments.values()) {\n\t\t\tcommentsToSave.push(...pendingComments);\n\t\t}\n\t\tthis.storageService.store(CONTINUE_ON_COMMENTS, commentsToSave, StorageScope.WORKSPACE, StorageTarget.USER);\n\t}\n\n\tremoveContinueOnComment(pendingComment: { range: IRange; uri: URI; owner: string }): PendingCommentThread | undefined {\n\t\tconst pendingComments = this._continueOnComments.get(pendingComment.owner);\n\t\tif (pendingComments) {\n\t\t\treturn pendingComments.splice(pendingComments.findIndex(comment => comment.uri.toString() === pendingComment.uri.toString() && Range.equalsRange(comment.range, pendingComment.range)), 1)[0];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _addContinueOnComments(pendingComments: PendingCommentThread[]): Set<string> {\n\t\tconst changedOwners = new Set<string>();\n\t\tfor (const pendingComment of pendingComments) {\n\t\t\tif (!this._continueOnComments.has(pendingComment.owner)) {\n\t\t\t\tthis._continueOnComments.set(pendingComment.owner, [pendingComment]);\n\t\t\t\tchangedOwners.add(pendingComment.owner);\n\t\t\t} else {\n\t\t\t\tconst commentsForOwner = this._continueOnComments.get(pendingComment.owner)!;\n\t\t\t\tif (commentsForOwner.every(comment => (comment.uri.toString() !== pendingComment.uri.toString()) || !Range.equalsRange(comment.range, pendingComment.range) || (comment.body !== pendingComment.body))) {\n\t\t\t\t\tcommentsForOwner.push(pendingComment);\n\t\t\t\t\tchangedOwners.add(pendingComment.owner);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn changedOwners;\n\t}\n}\n"]}