{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/comments/browser/timestamp.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAShG,MAAa,IAAgB,SAAQ,eAAG;QAKvC,YAAoB,CAAyB,EAAoB,SAAsB,EAAE,SAAgB;YACxG,KAAK,EAAE,CAAC;YADW,MAAC,GAAD,CAAC,CAAwB;YAE5C,IAAI,CAAC,CAAC,GAAO,GAAG,CAAC,GAAG,CAAI,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,CAAC,CAAK,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YAClC,IAAI,CAAC,CAAC,GAAkB,IAAI,CAAC,CAAC,CAAsB;YACpD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QAC9B,CAAC;QAED,IAAY,CAAC;YACZ,OAAO,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAyB,4BAAI,CAAa,CAAC,eAAe,CAAC;QACrG,CAAC;QAEM,KAAK,CAAC,YAAY,CAAC,SAA2B;YACpD,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAU,IAAI,CAAC,IAAI,CAAC,CAAC,KAA0B,IAAI,CAAC,CAAC,CAAgB,EAAE;gBAC/F,IAAI,CAAC,CAAC,CAAU,SAAS,CAAC,CAAC;aAC3B;YACD,IAAI,CAAC,CAAC,GAAY,SAAS,CAAC;YAC5B,IAAI,CAAC,CAAC,GAAkB,IAAI,CAAC,CAAC,CAAsB;QACrD,CAAC;QAEO,CAAC,CAAU,SAAgB;YAClC,IAAI,CAAC,SAAS,EAAE;gBACf,IAAI,CAAC,CAAC,CAAK,WAAW,GAAG,EAAE,CAAC;gBAC5B,IAAI,CAAC,CAAC,CAAK,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;aAClC;iBAAM,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAU;mBACtC,CAAC,IAAI,CAAC,CAAC,KAA0B,IAAI,CAAC,CAAC,CAAgB,EAAE;gBAC5D,IAAI,CAAC,CAAC,CAAK,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;gBAC9B,IAAI,WAAmB,CAAC;gBACxB,IAAI,OAA2B,CAAC;gBAChC,IAAI,IAAI,CAAC,CAAC,EAAuB;oBAChC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAW,SAAS,CAAC,CAAC;oBAC1C,OAAO,GAAG,IAAI,CAAC,CAAC,CAAa,SAAS,CAAC,CAAC;iBACxC;qBAAM;oBACN,WAAW,GAAG,IAAI,CAAC,CAAC,CAAa,SAAS,CAAC,CAAC;iBAC5C;gBAED,IAAI,CAAC,CAAC,CAAK,WAAW,GAAG,WAAW,CAAC;gBACrC,IAAI,OAAO,EAAE;oBACZ,IAAI,CAAC,CAAC,CAAK,KAAK,GAAG,OAAO,CAAC;iBAC3B;aACD;QACF,CAAC;QAEO,CAAC,CAAW,IAAU;YAC7B,OAAO,IAAA,UAAG,EAAK,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC;QAEO,CAAC,CAAa,IAAU;YAC/B,OAAO,IAAI,CAAC,cAAc,CAAC,aAAE,CAAO,CAAC;QACtC,CAAC;KACD;IAvDD,oBAuDC","file":"timestamp.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { fromNow } from 'vs/base/common/date';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { language } from 'vs/base/common/platform';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { COMMENTS_SECTION, ICommentsConfiguration } from 'vs/workbench/contrib/comments/common/commentsConfiguration';\n\nexport class TimestampWidget extends Disposable {\n\tprivate _date: HTMLElement;\n\tprivate _timestamp: Date | undefined;\n\tprivate _useRelativeTime: boolean;\n\n\tconstructor(private configurationService: IConfigurationService, container: HTMLElement, timeStamp?: Date) {\n\t\tsuper();\n\t\tthis._date = dom.append(container, dom.$('span.timestamp'));\n\t\tthis._date.style.display = 'none';\n\t\tthis._useRelativeTime = this.useRelativeTimeSetting;\n\t\tthis.setTimestamp(timeStamp);\n\t}\n\n\tprivate get useRelativeTimeSetting(): boolean {\n\t\treturn this.configurationService.getValue<ICommentsConfiguration>(COMMENTS_SECTION).useRelativeTime;\n\t}\n\n\tpublic async setTimestamp(timestamp: Date | undefined) {\n\t\tif ((timestamp !== this._timestamp) || (this.useRelativeTimeSetting !== this._useRelativeTime)) {\n\t\t\tthis.updateDate(timestamp);\n\t\t}\n\t\tthis._timestamp = timestamp;\n\t\tthis._useRelativeTime = this.useRelativeTimeSetting;\n\t}\n\n\tprivate updateDate(timestamp?: Date) {\n\t\tif (!timestamp) {\n\t\t\tthis._date.textContent = '';\n\t\t\tthis._date.style.display = 'none';\n\t\t} else if ((timestamp !== this._timestamp)\n\t\t\t|| (this.useRelativeTimeSetting !== this._useRelativeTime)) {\n\t\t\tthis._date.style.display = '';\n\t\t\tlet textContent: string;\n\t\t\tlet tooltip: string | undefined;\n\t\t\tif (this.useRelativeTimeSetting) {\n\t\t\t\ttextContent = this.getRelative(timestamp);\n\t\t\t\ttooltip = this.getDateString(timestamp);\n\t\t\t} else {\n\t\t\t\ttextContent = this.getDateString(timestamp);\n\t\t\t}\n\n\t\t\tthis._date.textContent = textContent;\n\t\t\tif (tooltip) {\n\t\t\t\tthis._date.title = tooltip;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getRelative(date: Date): string {\n\t\treturn fromNow(date, true, true);\n\t}\n\n\tprivate getDateString(date: Date): string {\n\t\treturn date.toLocaleString(language);\n\t}\n}\n"]}