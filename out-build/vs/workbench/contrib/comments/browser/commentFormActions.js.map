{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/comments/browser/commentFormActions.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQhG,MAAa,IAAI;QAKhB,YACS,CAAsB,EACtB,CAAwC,EAC/B,CAAmB;YAF5B,MAAC,GAAD,CAAC,CAAqB;YACtB,MAAC,GAAD,CAAC,CAAuC;YAC/B,MAAC,GAAD,CAAC,CAAkB;YAP7B,MAAC,GAAgC,EAAE,CAAC;YAC3B,MAAC,GAAY,IAAI,eAAG,EAAc,CAAC;YAC5C,MAAC,GAAqB,EAAE,CAAC;QAM7B,CAAC;QAEL,UAAU,CAAC,IAAW,EAAE,0BAAmC,KAAK;YAC/D,IAAI,CAAC,CAAC,CAAU,KAAK,EAAE,CAAC;YAExB,IAAI,CAAC,CAAC,CAAe,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;YAC9C,IAAI,CAAC,CAAC,GAAiB,EAAE,CAAC;YAE1B,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;YAC5D,IAAI,SAAS,GAAY,CAAC,uBAAuB,CAAC;YAClD,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;gBAC3B,MAAM,CAAC,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC;gBAE1B,IAAI,CAAC,CAAC,GAAU,OAAO,CAAC;gBACxB,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;oBAC7B,MAAM,MAAM,GAAG,IAAI,YAAG,CAAI,IAAI,CAAC,CAAC,EAAU,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,GAAG,mBAAG,EAAkB,CAAC,CAAC;oBAE7F,SAAS,GAAG,KAAK,CAAC;oBAClB,IAAI,CAAC,CAAC,CAAe,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBAE1C,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,MAAM,CAAC,CAAC;oBAC5B,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAa,MAAM,CAAC,CAAC,CAAC,CAAC;oBAEzE,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;oBAChC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;oBAC5B,IAAI,CAAC,IAAI,CAAC,CAAC,KAAc,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAe,MAAM,IAAI,IAAI,CAAC,CAAC,CAAU,EAAE;wBACxF,OAAO,CAAC,IAAI,CAAC,4FAA4F,CAAC,CAAC;wBAC3G,OAAO;qBACP;iBACD;aACD;QACF,CAAC;QAED,oBAAoB;YACnB,IAAI,IAAI,CAAC,CAAC,CAAQ,MAAM,EAAE;gBACzB,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAQ,CAAC,CAAC,CAAC;gBAEpC,IAAI,UAAU,CAAC,OAAO,EAAE;oBACvB,OAAO,IAAI,CAAC,CAAC,CAAa,UAAU,CAAC,CAAC;iBACtC;aACD;QACF,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAU,OAAO,EAAE,CAAC;QAC3B,CAAC;KACD;IAvDD,oBAuDC","file":"commentFormActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Button } from 'vs/base/browser/ui/button/button';\nimport { IAction } from 'vs/base/common/actions';\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { IMenu } from 'vs/platform/actions/common/actions';\nimport { defaultButtonStyles } from 'vs/platform/theme/browser/defaultStyles';\n\nexport class CommentFormActions implements IDisposable {\n\tprivate _buttonElements: HTMLElement[] = [];\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate _actions: IAction[] = [];\n\n\tconstructor(\n\t\tprivate container: HTMLElement,\n\t\tprivate actionHandler: (action: IAction) => void,\n\t\tprivate readonly maxActions?: number\n\t) { }\n\n\tsetActions(menu: IMenu, hasOnlySecondaryActions: boolean = false) {\n\t\tthis._toDispose.clear();\n\n\t\tthis._buttonElements.forEach(b => b.remove());\n\t\tthis._buttonElements = [];\n\n\t\tconst groups = menu.getActions({ shouldForwardArgs: true });\n\t\tlet isPrimary: boolean = !hasOnlySecondaryActions;\n\t\tfor (const group of groups) {\n\t\t\tconst [, actions] = group;\n\n\t\t\tthis._actions = actions;\n\t\t\tfor (const action of actions) {\n\t\t\t\tconst button = new Button(this.container, { secondary: !isPrimary, ...defaultButtonStyles });\n\n\t\t\t\tisPrimary = false;\n\t\t\t\tthis._buttonElements.push(button.element);\n\n\t\t\t\tthis._toDispose.add(button);\n\t\t\t\tthis._toDispose.add(button.onDidClick(() => this.actionHandler(action)));\n\n\t\t\t\tbutton.enabled = action.enabled;\n\t\t\t\tbutton.label = action.label;\n\t\t\t\tif ((this.maxActions !== undefined) && (this._buttonElements.length >= this.maxActions)) {\n\t\t\t\t\tconsole.warn(`An extension has contributed more than the allowable number of actions to a comments menu.`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\ttriggerDefaultAction() {\n\t\tif (this._actions.length) {\n\t\t\tconst lastAction = this._actions[0];\n\n\t\t\tif (lastAction.enabled) {\n\t\t\t\treturn this.actionHandler(lastAction);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._toDispose.dispose();\n\t}\n}\n"]}