{"version":3,"sources":["vs/workbench/contrib/workspace/common/workspace.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKhG;;OAEG;IAEU,QAAA,IAAI,GAAoB;QACpC,SAAS,EAAE,IAAI,gBAAG,CAAoB,yBAAyB,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA0B,EAAE,IAAiD,CAAC,CAAC;QAChK,SAAS,EAAE,IAAI,gBAAG,CAAoB,oBAAoB,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAqB,EAAE,IAA6D,CAAC,CAAC;KAClK,CAAC;IAEW,QAAA,IAAI,GAAsB,wBAAwB,CAAC","file":"workspace.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\n\n/**\n * Trust Context Keys\n */\n\nexport const WorkspaceTrustContext = {\n\tIsEnabled: new RawContextKey<boolean>('isWorkspaceTrustEnabled', false, localize('workspaceTrustEnabledCtx', \"Whether the workspace trust feature is enabled.\")),\n\tIsTrusted: new RawContextKey<boolean>('isWorkspaceTrusted', false, localize('workspaceTrustedCtx', \"Whether the current workspace has been trusted by the user.\"))\n};\n\nexport const MANAGE_TRUST_COMMAND_ID = 'workbench.trust.manage';\n"]}