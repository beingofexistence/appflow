{"version":3,"sources":["vs/workbench/contrib/workspace/browser/workspace.contribution.ts"],"names":[],"mappings":"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","file":"workspace.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/workspaceTrustEditor';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { Disposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { Severity } from 'vs/platform/notification/common/notification';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceTrustEnablementService, IWorkspaceTrustManagementService, IWorkspaceTrustRequestService, workspaceTrustToString, WorkspaceTrustUriResponse } from 'vs/platform/workspace/common/workspaceTrust';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ContextKeyExpr, IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IStatusbarEntry, IStatusbarEntryAccessor, IStatusbarService, StatusbarAlignment } from 'vs/workbench/services/statusbar/browser/statusbar';\nimport { IEditorPaneRegistry, EditorPaneDescriptor } from 'vs/workbench/browser/editor';\nimport { shieldIcon, WorkspaceTrustEditor } from 'vs/workbench/contrib/workspace/browser/workspaceTrustEditor';\nimport { WorkspaceTrustEditorInput } from 'vs/workbench/services/workspaces/browser/workspaceTrustEditorInput';\nimport { WORKSPACE_TRUST_BANNER, WORKSPACE_TRUST_EMPTY_WINDOW, WORKSPACE_TRUST_ENABLED, WORKSPACE_TRUST_STARTUP_PROMPT, WORKSPACE_TRUST_UNTRUSTED_FILES } from 'vs/workbench/services/workspaces/common/workspaceTrust';\nimport { IEditorSerializer, IEditorFactoryRegistry, EditorExtensions } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEmptyWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, IWorkspaceContextService, IWorkspaceFoldersWillChangeEvent, toWorkspaceIdentifier, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { dirname, resolve } from 'vs/base/common/path';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IMarkdownString, MarkdownString } from 'vs/base/common/htmlContent';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IBannerItem, IBannerService } from 'vs/workbench/services/banner/browser/bannerService';\nimport { isVirtualWorkspace } from 'vs/platform/workspace/common/virtualWorkspace';\nimport { LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { WORKSPACE_TRUST_SETTING_TAG } from 'vs/workbench/contrib/preferences/common/preferences';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { ILabelService, Verbosity } from 'vs/platform/label/common/label';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { MANAGE_TRUST_COMMAND_ID, WorkspaceTrustContext } from 'vs/workbench/contrib/workspace/common/workspace';\nimport { isWeb } from 'vs/base/common/platform';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { securityConfigurationNodeBase } from 'vs/workbench/common/configuration';\nimport { basename, dirname as uriDirname } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\n\nconst BANNER_RESTRICTED_MODE = 'workbench.banner.restrictedMode';\nconst STARTUP_PROMPT_SHOWN_KEY = 'workspace.trust.startupPrompt.shown';\nconst BANNER_RESTRICTED_MODE_DISMISSED_KEY = 'workbench.banner.restrictedMode.dismissed';\n\nexport class WorkspaceTrustContextKeys extends Disposable implements IWorkbenchContribution {\n\n\tprivate readonly _ctxWorkspaceTrustEnabled: IContextKey<boolean>;\n\tprivate readonly _ctxWorkspaceTrustState: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IWorkspaceTrustEnablementService workspaceTrustEnablementService: IWorkspaceTrustEnablementService,\n\t\t@IWorkspaceTrustManagementService workspaceTrustManagementService: IWorkspaceTrustManagementService\n\t) {\n\t\tsuper();\n\n\t\tthis._ctxWorkspaceTrustEnabled = WorkspaceTrustContext.IsEnabled.bindTo(contextKeyService);\n\t\tthis._ctxWorkspaceTrustEnabled.set(workspaceTrustEnablementService.isWorkspaceTrustEnabled());\n\n\t\tthis._ctxWorkspaceTrustState = WorkspaceTrustContext.IsTrusted.bindTo(contextKeyService);\n\t\tthis._ctxWorkspaceTrustState.set(workspaceTrustManagementService.isWorkspaceTrusted());\n\n\t\tthis._register(workspaceTrustManagementService.onDidChangeTrust(trusted => this._ctxWorkspaceTrustState.set(trusted)));\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(WorkspaceTrustContextKeys, LifecyclePhase.Restored);\n\n\n/*\n * Trust Request via Service UX handler\n */\n\nexport class WorkspaceTrustRequestHandler extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IWorkspaceTrustRequestService private readonly workspaceTrustRequestService: IWorkspaceTrustRequestService) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate get useWorkspaceLanguage(): boolean {\n\t\treturn !isSingleFolderWorkspaceIdentifier(toWorkspaceIdentifier(this.workspaceContextService.getWorkspace()));\n\t}\n\n\tprivate async registerListeners(): Promise<void> {\n\t\tawait this.workspaceTrustManagementService.workspaceResolved;\n\n\t\t// Open files trust request\n\t\tthis._register(this.workspaceTrustRequestService.onDidInitiateOpenFilesTrustRequest(async () => {\n\t\t\t// Details\n\t\t\tconst markdownDetails = [\n\t\t\t\tthis.workspaceContextService.getWorkbenchState() !== WorkbenchState.EMPTY ?\n\t\t\t\t\tlocalize('openLooseFileWorkspaceDetails', \"You are trying to open untrusted files in a workspace which is trusted.\") :\n\t\t\t\t\tlocalize('openLooseFileWindowDetails', \"You are trying to open untrusted files in a window which is trusted.\"),\n\t\t\t\tlocalize('openLooseFileLearnMore', \"If you don't want to open untrusted files, we recommend to open them in Restricted Mode in a new window as the files may be malicious. See [our docs](https://aka.ms/vscode-workspace-trust) to learn more.\")\n\t\t\t];\n\n\t\t\t// Dialog\n\t\t\tawait this.dialogService.prompt<void>({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage: this.workspaceContextService.getWorkbenchState() !== WorkbenchState.EMPTY ?\n\t\t\t\t\tlocalize('openLooseFileWorkspaceMesssage', \"Do you want to allow untrusted files in this workspace?\") :\n\t\t\t\t\tlocalize('openLooseFileWindowMesssage', \"Do you want to allow untrusted files in this window?\"),\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize({ key: 'open', comment: ['&& denotes a mnemonic'] }, \"&&Open\"),\n\t\t\t\t\t\trun: ({ checkboxChecked }) => this.workspaceTrustRequestService.completeOpenFilesTrustRequest(WorkspaceTrustUriResponse.Open, !!checkboxChecked)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize({ key: 'newWindow', comment: ['&& denotes a mnemonic'] }, \"Open in &&Restricted Mode\"),\n\t\t\t\t\t\trun: ({ checkboxChecked }) => this.workspaceTrustRequestService.completeOpenFilesTrustRequest(WorkspaceTrustUriResponse.OpenInNewWindow, !!checkboxChecked)\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tcancelButton: {\n\t\t\t\t\trun: () => this.workspaceTrustRequestService.completeOpenFilesTrustRequest(WorkspaceTrustUriResponse.Cancel)\n\t\t\t\t},\n\t\t\t\tcheckbox: {\n\t\t\t\t\tlabel: localize('openLooseFileWorkspaceCheckbox', \"Remember my decision for all workspaces\"),\n\t\t\t\t\tchecked: false\n\t\t\t\t},\n\t\t\t\tcustom: {\n\t\t\t\t\ticon: Codicon.shield,\n\t\t\t\t\tmarkdownDetails: markdownDetails.map(md => { return { markdown: new MarkdownString(md) }; })\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\n\t\t// Workspace trust request\n\t\tthis._register(this.workspaceTrustRequestService.onDidInitiateWorkspaceTrustRequest(async requestOptions => {\n\t\t\t// Title\n\t\t\tconst message = this.useWorkspaceLanguage ?\n\t\t\t\tlocalize('workspaceTrust', \"Do you trust the authors of the files in this workspace?\") :\n\t\t\t\tlocalize('folderTrust', \"Do you trust the authors of the files in this folder?\");\n\n\t\t\t// Message\n\t\t\tconst defaultDetails = localize('immediateTrustRequestMessage', \"A feature you are trying to use may be a security risk if you do not trust the source of the files or folders you currently have open.\");\n\t\t\tconst details = requestOptions?.message ?? defaultDetails;\n\n\t\t\t// Buttons\n\t\t\tconst buttons = requestOptions?.buttons ?? [\n\t\t\t\t{ label: this.useWorkspaceLanguage ? localize({ key: 'grantWorkspaceTrustButton', comment: ['&& denotes a mnemonic'] }, \"&&Trust Workspace & Continue\") : localize({ key: 'grantFolderTrustButton', comment: ['&& denotes a mnemonic'] }, \"&&Trust Folder & Continue\"), type: 'ContinueWithTrust' },\n\t\t\t\t{ label: localize({ key: 'manageWorkspaceTrustButton', comment: ['&& denotes a mnemonic'] }, \"&&Manage\"), type: 'Manage' }\n\t\t\t];\n\n\t\t\t// Add Cancel button if not provided\n\t\t\tif (!buttons.some(b => b.type === 'Cancel')) {\n\t\t\t\tbuttons.push({ label: localize('cancelWorkspaceTrustButton', \"Cancel\"), type: 'Cancel' });\n\t\t\t}\n\n\t\t\t// Dialog\n\t\t\tconst { result } = await this.dialogService.prompt({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage,\n\t\t\t\tcustom: {\n\t\t\t\t\ticon: Codicon.shield,\n\t\t\t\t\tmarkdownDetails: [\n\t\t\t\t\t\t{ markdown: new MarkdownString(details) },\n\t\t\t\t\t\t{ markdown: new MarkdownString(localize('immediateTrustRequestLearnMore', \"If you don't trust the authors of these files, we do not recommend continuing as the files may be malicious. See [our docs](https://aka.ms/vscode-workspace-trust) to learn more.\")) }\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tbuttons: buttons.filter(b => b.type !== 'Cancel').map(button => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: button.label,\n\t\t\t\t\t\trun: () => button.type\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\tcancelButton: (() => {\n\t\t\t\t\tconst cancelButton = buttons.find(b => b.type === 'Cancel');\n\t\t\t\t\tif (!cancelButton) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: cancelButton.label,\n\t\t\t\t\t\trun: () => cancelButton.type\n\t\t\t\t\t};\n\t\t\t\t})()\n\t\t\t});\n\n\n\t\t\t// Dialog result\n\t\t\tswitch (result) {\n\t\t\t\tcase 'ContinueWithTrust':\n\t\t\t\t\tawait this.workspaceTrustRequestService.completeWorkspaceTrustRequest(true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ContinueWithoutTrust':\n\t\t\t\t\tawait this.workspaceTrustRequestService.completeWorkspaceTrustRequest(undefined);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Manage':\n\t\t\t\t\tthis.workspaceTrustRequestService.cancelWorkspaceTrustRequest();\n\t\t\t\t\tawait this.commandService.executeCommand(MANAGE_TRUST_COMMAND_ID);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Cancel':\n\t\t\t\t\tthis.workspaceTrustRequestService.cancelWorkspaceTrustRequest();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}));\n\t}\n}\n\n\n/*\n * Trust UX and Startup Handler\n */\nexport class WorkspaceTrustUXHandler extends Disposable implements IWorkbenchContribution {\n\n\tprivate readonly entryId = `status.workspaceTrust.${this.workspaceContextService.getWorkspace().id}`;\n\n\tprivate readonly statusbarEntryAccessor: MutableDisposable<IStatusbarEntryAccessor>;\n\n\tconstructor(\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IWorkspaceTrustEnablementService private readonly workspaceTrustEnablementService: IWorkspaceTrustEnablementService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IWorkspaceTrustRequestService private readonly workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t\t@IBannerService private readonly bannerService: IBannerService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tsuper();\n\n\t\tthis.statusbarEntryAccessor = this._register(new MutableDisposable<IStatusbarEntryAccessor>());\n\n\t\t(async () => {\n\n\t\t\tawait this.workspaceTrustManagementService.workspaceTrustInitialized;\n\n\t\t\tif (this.workspaceTrustEnablementService.isWorkspaceTrustEnabled()) {\n\t\t\t\tthis.registerListeners();\n\t\t\t\tthis.createStatusbarEntry();\n\n\t\t\t\t// Show modal dialog\n\t\t\t\tif (this.hostService.hasFocus) {\n\t\t\t\t\tthis.showModalOnStart();\n\t\t\t\t} else {\n\t\t\t\t\tconst focusDisposable = this.hostService.onDidChangeFocus(focused => {\n\t\t\t\t\t\tif (focused) {\n\t\t\t\t\t\t\tfocusDisposable.dispose();\n\t\t\t\t\t\t\tthis.showModalOnStart();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.workspaceContextService.onWillChangeWorkspaceFolders(e => {\n\t\t\tif (e.fromCache) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.workspaceTrustEnablementService.isWorkspaceTrustEnabled()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst addWorkspaceFolder = async (e: IWorkspaceFoldersWillChangeEvent): Promise<void> => {\n\t\t\t\tconst trusted = this.workspaceTrustManagementService.isWorkspaceTrusted();\n\n\t\t\t\t// Workspace is trusted and there are added/changed folders\n\t\t\t\tif (trusted && (e.changes.added.length || e.changes.changed.length)) {\n\t\t\t\t\tconst addedFoldersTrustInfo = await Promise.all(e.changes.added.map(folder => this.workspaceTrustManagementService.getUriTrustInfo(folder.uri)));\n\n\t\t\t\t\tif (!addedFoldersTrustInfo.map(info => info.trusted).every(trusted => trusted)) {\n\t\t\t\t\t\tconst { confirmed } = await this.dialogService.confirm({\n\t\t\t\t\t\t\ttype: Severity.Info,\n\t\t\t\t\t\t\tmessage: localize('addWorkspaceFolderMessage', \"Do you trust the authors of the files in this folder?\"),\n\t\t\t\t\t\t\tdetail: localize('addWorkspaceFolderDetail', \"You are adding files that are not currently trusted to a trusted workspace. Do you trust the authors of these new files?\"),\n\t\t\t\t\t\t\tcancelButton: localize('no', 'No'),\n\t\t\t\t\t\t\tcustom: { icon: Codicon.shield }\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Mark added/changed folders as trusted\n\t\t\t\t\t\tawait this.workspaceTrustManagementService.setUrisTrust(addedFoldersTrustInfo.map(i => i.uri), confirmed);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn e.join(addWorkspaceFolder(e));\n\t\t}));\n\n\t\tthis._register(this.workspaceTrustManagementService.onDidChangeTrust(trusted => {\n\t\t\tthis.updateWorkbenchIndicators(trusted);\n\t\t}));\n\n\t\tthis._register(this.workspaceTrustRequestService.onDidInitiateWorkspaceTrustRequestOnStartup(async () => {\n\n\t\t\tlet titleString: string | undefined;\n\t\t\tlet learnMoreString: string | undefined;\n\t\t\tlet trustOption: string | undefined;\n\t\t\tlet dontTrustOption: string | undefined;\n\t\t\tconst isAiGeneratedWorkspace = await this.isAiGeneratedWorkspace();\n\t\t\tif (isAiGeneratedWorkspace && this.productService.aiGeneratedWorkspaceTrust) {\n\t\t\t\ttitleString = this.productService.aiGeneratedWorkspaceTrust.title;\n\t\t\t\tlearnMoreString = this.productService.aiGeneratedWorkspaceTrust.startupTrustRequestLearnMore;\n\t\t\t\ttrustOption = this.productService.aiGeneratedWorkspaceTrust.trustOption;\n\t\t\t\tdontTrustOption = this.productService.aiGeneratedWorkspaceTrust.dontTrustOption;\n\t\t\t} else {\n\t\t\t\tconsole.warn('AI generated workspace trust dialog contents not available.');\n\t\t\t}\n\n\t\t\tconst title = titleString ?? (this.useWorkspaceLanguage ?\n\t\t\t\tlocalize('workspaceTrust', \"Do you trust the authors of the files in this workspace?\") :\n\t\t\t\tlocalize('folderTrust', \"Do you trust the authors of the files in this folder?\"));\n\n\t\t\tlet checkboxText: string | undefined;\n\t\t\tconst workspaceIdentifier = toWorkspaceIdentifier(this.workspaceContextService.getWorkspace());\n\t\t\tconst isSingleFolderWorkspace = isSingleFolderWorkspaceIdentifier(workspaceIdentifier);\n\t\t\tconst isEmptyWindow = isEmptyWorkspaceIdentifier(workspaceIdentifier);\n\t\t\tif (!isAiGeneratedWorkspace && this.workspaceTrustManagementService.canSetParentFolderTrust()) {\n\t\t\t\tconst name = basename(uriDirname((workspaceIdentifier as ISingleFolderWorkspaceIdentifier).uri));\n\t\t\t\tcheckboxText = localize('checkboxString', \"Trust the authors of all files in the parent folder '{0}'\", name);\n\t\t\t}\n\n\t\t\t// Show Workspace Trust Start Dialog\n\t\t\tthis.doShowModal(\n\t\t\t\ttitle,\n\t\t\t\t{ label: trustOption ?? localize({ key: 'trustOption', comment: ['&& denotes a mnemonic'] }, \"&&Yes, I trust the authors\"), sublabel: isSingleFolderWorkspace ? localize('trustFolderOptionDescription', \"Trust folder and enable all features\") : localize('trustWorkspaceOptionDescription', \"Trust workspace and enable all features\") },\n\t\t\t\t{ label: dontTrustOption ?? localize({ key: 'dontTrustOption', comment: ['&& denotes a mnemonic'] }, \"&&No, I don't trust the authors\"), sublabel: isSingleFolderWorkspace ? localize('dontTrustFolderOptionDescription', \"Browse folder in restricted mode\") : localize('dontTrustWorkspaceOptionDescription', \"Browse workspace in restricted mode\") },\n\t\t\t\t[\n\t\t\t\t\t!isSingleFolderWorkspace ?\n\t\t\t\t\t\tlocalize('workspaceStartupTrustDetails', \"{0} provides features that may automatically execute files in this workspace.\", this.productService.nameShort) :\n\t\t\t\t\t\tlocalize('folderStartupTrustDetails', \"{0} provides features that may automatically execute files in this folder.\", this.productService.nameShort),\n\t\t\t\t\tlearnMoreString ?? localize('startupTrustRequestLearnMore', \"If you don't trust the authors of these files, we recommend to continue in restricted mode as the files may be malicious. See [our docs](https://aka.ms/vscode-workspace-trust) to learn more.\"),\n\t\t\t\t\t!isEmptyWindow ?\n\t\t\t\t\t\t`\\`${this.labelService.getWorkspaceLabel(workspaceIdentifier, { verbose: Verbosity.LONG })}\\`` : '',\n\t\t\t\t],\n\t\t\t\tcheckboxText\n\t\t\t);\n\t\t}));\n\t}\n\n\tprivate updateWorkbenchIndicators(trusted: boolean): void {\n\t\tconst bannerItem = this.getBannerItem(!trusted);\n\n\t\tthis.updateStatusbarEntry(trusted);\n\n\t\tif (bannerItem) {\n\t\t\tif (!trusted) {\n\t\t\t\tthis.bannerService.show(bannerItem);\n\t\t\t} else {\n\t\t\t\tthis.bannerService.hide(BANNER_RESTRICTED_MODE);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#region Dialog\n\n\tprivate async doShowModal(question: string, trustedOption: { label: string; sublabel: string }, untrustedOption: { label: string; sublabel: string }, markdownStrings: string[], trustParentString?: string): Promise<void> {\n\t\tawait this.dialogService.prompt({\n\t\t\ttype: Severity.Info,\n\t\t\tmessage: question,\n\t\t\tcheckbox: trustParentString ? {\n\t\t\t\tlabel: trustParentString\n\t\t\t} : undefined,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: trustedOption.label,\n\t\t\t\t\trun: async ({ checkboxChecked }) => {\n\t\t\t\t\t\tif (checkboxChecked) {\n\t\t\t\t\t\t\tawait this.workspaceTrustManagementService.setParentFolderTrust(true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tawait this.workspaceTrustRequestService.completeWorkspaceTrustRequest(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: untrustedOption.label,\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tthis.updateWorkbenchIndicators(false);\n\t\t\t\t\t\tthis.workspaceTrustRequestService.cancelWorkspaceTrustRequest();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\tcustom: {\n\t\t\t\tbuttonDetails: [\n\t\t\t\t\ttrustedOption.sublabel,\n\t\t\t\t\tuntrustedOption.sublabel\n\t\t\t\t],\n\t\t\t\tdisableCloseAction: true,\n\t\t\t\ticon: Codicon.shield,\n\t\t\t\tmarkdownDetails: markdownStrings.map(md => { return { markdown: new MarkdownString(md) }; })\n\t\t\t}\n\t\t});\n\n\t\tthis.storageService.store(STARTUP_PROMPT_SHOWN_KEY, true, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t}\n\n\tprivate async showModalOnStart(): Promise<void> {\n\t\tif (this.workspaceTrustManagementService.isWorkspaceTrusted()) {\n\t\t\tthis.updateWorkbenchIndicators(true);\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't show modal prompt if workspace trust cannot be changed\n\t\tif (!(this.workspaceTrustManagementService.canSetWorkspaceTrust())) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't show modal prompt for virtual workspaces by default\n\t\tif (isVirtualWorkspace(this.workspaceContextService.getWorkspace())) {\n\t\t\tthis.updateWorkbenchIndicators(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't show modal prompt for empty workspaces by default\n\t\tif (this.workspaceContextService.getWorkbenchState() === WorkbenchState.EMPTY) {\n\t\t\tthis.updateWorkbenchIndicators(false);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.startupPromptSetting === 'never') {\n\t\t\tthis.updateWorkbenchIndicators(false);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.startupPromptSetting === 'once' && this.storageService.getBoolean(STARTUP_PROMPT_SHOWN_KEY, StorageScope.WORKSPACE, false)) {\n\t\t\tthis.updateWorkbenchIndicators(false);\n\t\t\treturn;\n\t\t}\n\n\t\t// Use the workspace trust request service to show modal dialog\n\t\tthis.workspaceTrustRequestService.requestWorkspaceTrustOnStartup();\n\t}\n\n\tprivate get startupPromptSetting(): 'always' | 'once' | 'never' {\n\t\treturn this.configurationService.getValue(WORKSPACE_TRUST_STARTUP_PROMPT);\n\t}\n\n\tprivate get useWorkspaceLanguage(): boolean {\n\t\treturn !isSingleFolderWorkspaceIdentifier(toWorkspaceIdentifier(this.workspaceContextService.getWorkspace()));\n\t}\n\n\tprivate async isAiGeneratedWorkspace(): Promise<boolean> {\n\t\tconst aiGeneratedWorkspaces = URI.joinPath(this.environmentService.workspaceStorageHome, 'aiGeneratedWorkspaces.json');\n\t\treturn await this.fileService.exists(aiGeneratedWorkspaces).then(async result => {\n\t\t\tif (result) {\n\t\t\t\ttry {\n\t\t\t\t\tconst content = await this.fileService.readFile(aiGeneratedWorkspaces);\n\t\t\t\t\tconst workspaces = JSON.parse(content.value.toString()) as string[];\n\t\t\t\t\tif (workspaces.indexOf(this.workspaceContextService.getWorkspace().folders[0].uri.toString()) > -1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Ignore errors when resolving file contents\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\t//#endregion\n\n\t//#region Banner\n\n\tprivate getBannerItem(restrictedMode: boolean): IBannerItem | undefined {\n\t\tconst dismissedRestricted = this.storageService.getBoolean(BANNER_RESTRICTED_MODE_DISMISSED_KEY, StorageScope.WORKSPACE, false);\n\n\t\t// never show the banner\n\t\tif (this.bannerSetting === 'never') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// info has been dismissed\n\t\tif (this.bannerSetting === 'untilDismissed' && dismissedRestricted) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst actions =\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tlabel: localize('restrictedModeBannerManage', \"Manage\"),\n\t\t\t\t\thref: 'command:' + MANAGE_TRUST_COMMAND_ID\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize('restrictedModeBannerLearnMore', \"Learn More\"),\n\t\t\t\t\thref: 'https://aka.ms/vscode-workspace-trust'\n\t\t\t\t}\n\t\t\t];\n\n\t\treturn {\n\t\t\tid: BANNER_RESTRICTED_MODE,\n\t\t\ticon: shieldIcon,\n\t\t\tariaLabel: this.getBannerItemAriaLabels(),\n\t\t\tmessage: this.getBannerItemMessages(),\n\t\t\tactions,\n\t\t\tonClose: () => {\n\t\t\t\tif (restrictedMode) {\n\t\t\t\t\tthis.storageService.store(BANNER_RESTRICTED_MODE_DISMISSED_KEY, true, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate getBannerItemAriaLabels(): string {\n\t\tswitch (this.workspaceContextService.getWorkbenchState()) {\n\t\t\tcase WorkbenchState.EMPTY:\n\t\t\t\treturn localize('restrictedModeBannerAriaLabelWindow', \"Restricted Mode is intended for safe code browsing. Trust this window to enable all features. Use navigation keys to access banner actions.\");\n\t\t\tcase WorkbenchState.FOLDER:\n\t\t\t\treturn localize('restrictedModeBannerAriaLabelFolder', \"Restricted Mode is intended for safe code browsing. Trust this folder to enable all features. Use navigation keys to access banner actions.\");\n\t\t\tcase WorkbenchState.WORKSPACE:\n\t\t\t\treturn localize('restrictedModeBannerAriaLabelWorkspace', \"Restricted Mode is intended for safe code browsing. Trust this workspace to enable all features. Use navigation keys to access banner actions.\");\n\t\t}\n\t}\n\n\tprivate getBannerItemMessages(): string {\n\t\tswitch (this.workspaceContextService.getWorkbenchState()) {\n\t\t\tcase WorkbenchState.EMPTY:\n\t\t\t\treturn localize('restrictedModeBannerMessageWindow', \"Restricted Mode is intended for safe code browsing. Trust this window to enable all features.\");\n\t\t\tcase WorkbenchState.FOLDER:\n\t\t\t\treturn localize('restrictedModeBannerMessageFolder', \"Restricted Mode is intended for safe code browsing. Trust this folder to enable all features.\");\n\t\t\tcase WorkbenchState.WORKSPACE:\n\t\t\t\treturn localize('restrictedModeBannerMessageWorkspace', \"Restricted Mode is intended for safe code browsing. Trust this workspace to enable all features.\");\n\t\t}\n\t}\n\n\n\tprivate get bannerSetting(): 'always' | 'untilDismissed' | 'never' {\n\t\tconst result = this.configurationService.getValue<'always' | 'untilDismissed' | 'never'>(WORKSPACE_TRUST_BANNER);\n\n\t\t// In serverless environments, we don't need to aggressively show the banner\n\t\tif (result !== 'always' && isWeb && !this.remoteAgentService.getConnection()?.remoteAuthority) {\n\t\t\treturn 'never';\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t//#endregion\n\n\t//#region Statusbar\n\n\tprivate createStatusbarEntry(): void {\n\t\tconst entry = this.getStatusbarEntry(this.workspaceTrustManagementService.isWorkspaceTrusted());\n\t\tthis.statusbarEntryAccessor.value = this.statusbarService.addEntry(entry, this.entryId, StatusbarAlignment.LEFT, 0.99 * Number.MAX_VALUE /* Right of remote indicator */);\n\t\tthis.statusbarService.updateEntryVisibility(this.entryId, false);\n\t}\n\n\tprivate getStatusbarEntry(trusted: boolean): IStatusbarEntry {\n\t\tconst text = workspaceTrustToString(trusted);\n\n\t\tlet ariaLabel = '';\n\t\tlet toolTip: IMarkdownString | string | undefined;\n\t\tswitch (this.workspaceContextService.getWorkbenchState()) {\n\t\t\tcase WorkbenchState.EMPTY: {\n\t\t\t\tariaLabel = trusted ? localize('status.ariaTrustedWindow', \"This window is trusted.\") :\n\t\t\t\t\tlocalize('status.ariaUntrustedWindow', \"Restricted Mode: Some features are disabled because this window is not trusted.\");\n\t\t\t\ttoolTip = trusted ? ariaLabel : {\n\t\t\t\t\tvalue: localize(\n\t\t\t\t\t\t{ key: 'status.tooltipUntrustedWindow2', comment: ['[abc]({n}) are links.  Only translate `features are disabled` and `window is not trusted`. Do not change brackets and parentheses or {n}'] },\n\t\t\t\t\t\t\"Running in Restricted Mode\\n\\nSome [features are disabled]({0}) because this [window is not trusted]({1}).\",\n\t\t\t\t\t\t`command:${LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID}`,\n\t\t\t\t\t\t`command:${MANAGE_TRUST_COMMAND_ID}`\n\t\t\t\t\t),\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t\tsupportThemeIcons: true\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase WorkbenchState.FOLDER: {\n\t\t\t\tariaLabel = trusted ? localize('status.ariaTrustedFolder', \"This folder is trusted.\") :\n\t\t\t\t\tlocalize('status.ariaUntrustedFolder', \"Restricted Mode: Some features are disabled because this folder is not trusted.\");\n\t\t\t\ttoolTip = trusted ? ariaLabel : {\n\t\t\t\t\tvalue: localize(\n\t\t\t\t\t\t{ key: 'status.tooltipUntrustedFolder2', comment: ['[abc]({n}) are links.  Only translate `features are disabled` and `folder is not trusted`. Do not change brackets and parentheses or {n}'] },\n\t\t\t\t\t\t\"Running in Restricted Mode\\n\\nSome [features are disabled]({0}) because this [folder is not trusted]({1}).\",\n\t\t\t\t\t\t`command:${LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID}`,\n\t\t\t\t\t\t`command:${MANAGE_TRUST_COMMAND_ID}`\n\t\t\t\t\t),\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t\tsupportThemeIcons: true\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase WorkbenchState.WORKSPACE: {\n\t\t\t\tariaLabel = trusted ? localize('status.ariaTrustedWorkspace', \"This workspace is trusted.\") :\n\t\t\t\t\tlocalize('status.ariaUntrustedWorkspace', \"Restricted Mode: Some features are disabled because this workspace is not trusted.\");\n\t\t\t\ttoolTip = trusted ? ariaLabel : {\n\t\t\t\t\tvalue: localize(\n\t\t\t\t\t\t{ key: 'status.tooltipUntrustedWorkspace2', comment: ['[abc]({n}) are links. Only translate `features are disabled` and `workspace is not trusted`. Do not change brackets and parentheses or {n}'] },\n\t\t\t\t\t\t\"Running in Restricted Mode\\n\\nSome [features are disabled]({0}) because this [workspace is not trusted]({1}).\",\n\t\t\t\t\t\t`command:${LIST_WORKSPACE_UNSUPPORTED_EXTENSIONS_COMMAND_ID}`,\n\t\t\t\t\t\t`command:${MANAGE_TRUST_COMMAND_ID}`\n\t\t\t\t\t),\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t\tsupportThemeIcons: true\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tname: localize('status.WorkspaceTrust', \"Workspace Trust\"),\n\t\t\ttext: trusted ? `$(shield)` : `$(shield) ${text}`,\n\t\t\tariaLabel: ariaLabel,\n\t\t\ttooltip: toolTip,\n\t\t\tcommand: MANAGE_TRUST_COMMAND_ID,\n\t\t\tkind: 'prominent'\n\t\t};\n\t}\n\n\tprivate updateStatusbarEntry(trusted: boolean): void {\n\t\tthis.statusbarEntryAccessor.value?.update(this.getStatusbarEntry(trusted));\n\t\tthis.statusbarService.updateEntryVisibility(this.entryId, !trusted);\n\t}\n\n\t//#endregion\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(WorkspaceTrustRequestHandler, LifecyclePhase.Ready);\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(WorkspaceTrustUXHandler, LifecyclePhase.Restored);\n\n\n/**\n * Trusted Workspace GUI Editor\n */\nclass WorkspaceTrustEditorInputSerializer implements IEditorSerializer {\n\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\treturn true;\n\t}\n\n\tserialize(input: WorkspaceTrustEditorInput): string {\n\t\treturn '';\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService): WorkspaceTrustEditorInput {\n\t\treturn instantiationService.createInstance(WorkspaceTrustEditorInput);\n\t}\n}\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory)\n\t.registerEditorSerializer(WorkspaceTrustEditorInput.ID, WorkspaceTrustEditorInputSerializer);\n\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tWorkspaceTrustEditor,\n\t\tWorkspaceTrustEditor.ID,\n\t\tlocalize('workspaceTrustEditor', \"Workspace Trust Editor\")\n\t),\n\t[\n\t\tnew SyncDescriptor(WorkspaceTrustEditorInput)\n\t]\n);\n\n\n/*\n * Actions\n */\n\n// Configure Workspace Trust Settings\n\nconst CONFIGURE_TRUST_COMMAND_ID = 'workbench.trust.configure';\nconst WORKSPACES_CATEGORY = { value: localize('workspacesCategory', \"Workspaces\"), original: 'Workspaces' };\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CONFIGURE_TRUST_COMMAND_ID,\n\t\t\ttitle: { original: 'Configure Workspace Trust Settings', value: localize('configureWorkspaceTrustSettings', \"Configure Workspace Trust Settings\") },\n\t\t\tprecondition: ContextKeyExpr.and(WorkspaceTrustContext.IsEnabled, ContextKeyExpr.equals(`config.${WORKSPACE_TRUST_ENABLED}`, true)),\n\t\t\tcategory: WORKSPACES_CATEGORY,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\taccessor.get(IPreferencesService).openUserSettings({ jsonEditor: false, query: `@tag:${WORKSPACE_TRUST_SETTING_TAG}` });\n\t}\n});\n\n// Manage Workspace Trust\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: MANAGE_TRUST_COMMAND_ID,\n\t\t\ttitle: { original: 'Manage Workspace Trust', value: localize('manageWorkspaceTrust', \"Manage Workspace Trust\") },\n\t\t\tprecondition: ContextKeyExpr.and(WorkspaceTrustContext.IsEnabled, ContextKeyExpr.equals(`config.${WORKSPACE_TRUST_ENABLED}`, true)),\n\t\t\tcategory: WORKSPACES_CATEGORY,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\n\t\tconst input = instantiationService.createInstance(WorkspaceTrustEditorInput);\n\n\t\teditorService.openEditor(input, { pinned: true });\n\t\treturn;\n\t}\n});\n\n\n/*\n * Configuration\n */\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration)\n\t.registerConfiguration({\n\t\t...securityConfigurationNodeBase,\n\t\tproperties: {\n\t\t\t[WORKSPACE_TRUST_ENABLED]: {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('workspace.trust.description', \"Controls whether or not Workspace Trust is enabled within VS Code.\"),\n\t\t\t\ttags: [WORKSPACE_TRUST_SETTING_TAG],\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t},\n\t\t\t[WORKSPACE_TRUST_STARTUP_PROMPT]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'once',\n\t\t\t\tdescription: localize('workspace.trust.startupPrompt.description', \"Controls when the startup prompt to trust a workspace is shown.\"),\n\t\t\t\ttags: [WORKSPACE_TRUST_SETTING_TAG],\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\tenum: ['always', 'once', 'never'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('workspace.trust.startupPrompt.always', \"Ask for trust every time an untrusted workspace is opened.\"),\n\t\t\t\t\tlocalize('workspace.trust.startupPrompt.once', \"Ask for trust the first time an untrusted workspace is opened.\"),\n\t\t\t\t\tlocalize('workspace.trust.startupPrompt.never', \"Do not ask for trust when an untrusted workspace is opened.\"),\n\t\t\t\t]\n\t\t\t},\n\t\t\t[WORKSPACE_TRUST_BANNER]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'untilDismissed',\n\t\t\t\tdescription: localize('workspace.trust.banner.description', \"Controls when the restricted mode banner is shown.\"),\n\t\t\t\ttags: [WORKSPACE_TRUST_SETTING_TAG],\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\tenum: ['always', 'untilDismissed', 'never'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('workspace.trust.banner.always', \"Show the banner every time an untrusted workspace is open.\"),\n\t\t\t\t\tlocalize('workspace.trust.banner.untilDismissed', \"Show the banner when an untrusted workspace is opened until dismissed.\"),\n\t\t\t\t\tlocalize('workspace.trust.banner.never', \"Do not show the banner when an untrusted workspace is open.\"),\n\t\t\t\t]\n\t\t\t},\n\t\t\t[WORKSPACE_TRUST_UNTRUSTED_FILES]: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'prompt',\n\t\t\t\tmarkdownDescription: localize('workspace.trust.untrustedFiles.description', \"Controls how to handle opening untrusted files in a trusted workspace. This setting also applies to opening files in an empty window which is trusted via `#{0}#`.\", WORKSPACE_TRUST_EMPTY_WINDOW),\n\t\t\t\ttags: [WORKSPACE_TRUST_SETTING_TAG],\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\tenum: ['prompt', 'open', 'newWindow'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('workspace.trust.untrustedFiles.prompt', \"Ask how to handle untrusted files for each workspace. Once untrusted files are introduced to a trusted workspace, you will not be prompted again.\"),\n\t\t\t\t\tlocalize('workspace.trust.untrustedFiles.open', \"Always allow untrusted files to be introduced to a trusted workspace without prompting.\"),\n\t\t\t\t\tlocalize('workspace.trust.untrustedFiles.newWindow', \"Always open untrusted files in a separate window in restricted mode without prompting.\"),\n\t\t\t\t]\n\t\t\t},\n\t\t\t[WORKSPACE_TRUST_EMPTY_WINDOW]: {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tmarkdownDescription: localize('workspace.trust.emptyWindow.description', \"Controls whether or not the empty window is trusted by default within VS Code. When used with `#{0}#`, you can enable the full functionality of VS Code without prompting in an empty window.\", WORKSPACE_TRUST_UNTRUSTED_FILES),\n\t\t\t\ttags: [WORKSPACE_TRUST_SETTING_TAG],\n\t\t\t\tscope: ConfigurationScope.APPLICATION\n\t\t\t}\n\t\t}\n\t});\n\nclass WorkspaceTrustTelemetryContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IWorkspaceTrustEnablementService private readonly workspaceTrustEnablementService: IWorkspaceTrustEnablementService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t) {\n\t\tsuper();\n\n\t\tthis.workspaceTrustManagementService.workspaceTrustInitialized\n\t\t\t.then(() => {\n\t\t\t\tthis.logInitialWorkspaceTrustInfo();\n\t\t\t\tthis.logWorkspaceTrust(this.workspaceTrustManagementService.isWorkspaceTrusted());\n\n\t\t\t\tthis._register(this.workspaceTrustManagementService.onDidChangeTrust(isTrusted => this.logWorkspaceTrust(isTrusted)));\n\t\t\t});\n\t}\n\n\tprivate logInitialWorkspaceTrustInfo(): void {\n\t\tif (!this.workspaceTrustEnablementService.isWorkspaceTrustEnabled()) {\n\t\t\tconst disabledByCliFlag = this.environmentService.disableWorkspaceTrust;\n\n\t\t\ttype WorkspaceTrustDisabledEventClassification = {\n\t\t\t\towner: 'sbatten';\n\t\t\t\tcomment: 'Logged when workspace trust is disabled';\n\t\t\t\treason: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The reason workspace trust is disabled. e.g. cli or setting' };\n\t\t\t};\n\n\t\t\ttype WorkspaceTrustDisabledEvent = {\n\t\t\t\treason: 'setting' | 'cli';\n\t\t\t};\n\n\t\t\tthis.telemetryService.publicLog2<WorkspaceTrustDisabledEvent, WorkspaceTrustDisabledEventClassification>('workspaceTrustDisabled', {\n\t\t\t\treason: disabledByCliFlag ? 'cli' : 'setting'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\ttype WorkspaceTrustInfoEventClassification = {\n\t\t\towner: 'sbatten';\n\t\t\tcomment: 'Information about the workspaces trusted on the machine';\n\t\t\ttrustedFoldersCount: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The number of trusted folders on the machine' };\n\t\t};\n\n\t\ttype WorkspaceTrustInfoEvent = {\n\t\t\ttrustedFoldersCount: number;\n\t\t};\n\n\t\tthis.telemetryService.publicLog2<WorkspaceTrustInfoEvent, WorkspaceTrustInfoEventClassification>('workspaceTrustFolderCounts', {\n\t\t\ttrustedFoldersCount: this.workspaceTrustManagementService.getTrustedUris().length,\n\t\t});\n\t}\n\n\tprivate async logWorkspaceTrust(isTrusted: boolean): Promise<void> {\n\t\tif (!this.workspaceTrustEnablementService.isWorkspaceTrustEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttype WorkspaceTrustStateChangedEvent = {\n\t\t\tworkspaceId: string;\n\t\t\tisTrusted: boolean;\n\t\t};\n\n\t\ttype WorkspaceTrustStateChangedEventClassification = {\n\t\t\towner: 'sbatten';\n\t\t\tcomment: 'Logged when the workspace transitions between trusted and restricted modes';\n\t\t\tworkspaceId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'An id of the workspace' };\n\t\t\tisTrusted: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'true if the workspace is trusted' };\n\t\t};\n\n\t\tthis.telemetryService.publicLog2<WorkspaceTrustStateChangedEvent, WorkspaceTrustStateChangedEventClassification>('workspaceTrustStateChanged', {\n\t\t\tworkspaceId: this.workspaceContextService.getWorkspace().id,\n\t\t\tisTrusted: isTrusted\n\t\t});\n\n\t\tif (isTrusted) {\n\t\t\ttype WorkspaceTrustFolderInfoEventClassification = {\n\t\t\t\towner: 'sbatten';\n\t\t\t\tcomment: 'Some metrics on the trusted workspaces folder structure';\n\t\t\t\ttrustedFolderDepth: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The number of directories deep of the trusted path' };\n\t\t\t\tworkspaceFolderDepth: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The number of directories deep of the workspace path' };\n\t\t\t\tdelta: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'The difference between the trusted path and the workspace path directories depth' };\n\t\t\t};\n\n\t\t\ttype WorkspaceTrustFolderInfoEvent = {\n\t\t\t\ttrustedFolderDepth: number;\n\t\t\t\tworkspaceFolderDepth: number;\n\t\t\t\tdelta: number;\n\t\t\t};\n\n\t\t\tconst getDepth = (folder: string): number => {\n\t\t\t\tlet resolvedPath = resolve(folder);\n\n\t\t\t\tlet depth = 0;\n\t\t\t\twhile (dirname(resolvedPath) !== resolvedPath && depth < 100) {\n\t\t\t\t\tresolvedPath = dirname(resolvedPath);\n\t\t\t\t\tdepth++;\n\t\t\t\t}\n\n\t\t\t\treturn depth;\n\t\t\t};\n\n\t\t\tfor (const folder of this.workspaceContextService.getWorkspace().folders) {\n\t\t\t\tconst { trusted, uri } = await this.workspaceTrustManagementService.getUriTrustInfo(folder.uri);\n\t\t\t\tif (!trusted) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst workspaceFolderDepth = getDepth(folder.uri.fsPath);\n\t\t\t\tconst trustedFolderDepth = getDepth(uri.fsPath);\n\t\t\t\tconst delta = workspaceFolderDepth - trustedFolderDepth;\n\n\t\t\t\tthis.telemetryService.publicLog2<WorkspaceTrustFolderInfoEvent, WorkspaceTrustFolderInfoEventClassification>('workspaceFolderDepthBelowTrustedFolder', { workspaceFolderDepth, trustedFolderDepth, delta });\n\t\t\t}\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(WorkspaceTrustTelemetryContribution, LifecyclePhase.Restored);\n"]}