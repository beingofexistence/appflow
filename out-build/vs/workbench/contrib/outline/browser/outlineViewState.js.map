{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/outline/browser/outlineViewState.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAMhG,MAAa,IAAI;QAAjB;YAES,MAAC,GAAe,KAAK,CAAC;YACtB,MAAC,GAAe,IAAI,CAAC;YACrB,MAAC,uCAAqC;YAE7B,MAAC,GAAc,IAAI,WAAG,EAA4E,CAAC;YAC3G,gBAAW,GAAG,IAAI,CAAC,CAAC,CAAY,KAAK,CAAC;QAgEhD,CAAC;QA9DA,OAAO;YACN,IAAI,CAAC,CAAC,CAAY,OAAO,EAAE,CAAC;QAC7B,CAAC;QAED,IAAI,YAAY,CAAC,KAAc;YAC9B,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,EAAc;gBACjC,IAAI,CAAC,CAAC,GAAe,KAAK,CAAC;gBAC3B,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;aAC/C;QACF,CAAC;QAED,IAAI,YAAY;YACf,OAAO,IAAI,CAAC,CAAC,CAAa;QAC3B,CAAC;QAED,IAAI,YAAY;YACf,OAAO,IAAI,CAAC,CAAC,CAAa;QAC3B,CAAC;QAED,IAAI,YAAY,CAAC,KAAK;YACrB,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,EAAc;gBACjC,IAAI,CAAC,CAAC,GAAe,KAAK,CAAC;gBAC3B,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;aAC/C;QACF,CAAC;QAED,IAAI,MAAM,CAAC,KAAuB;YACjC,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,EAAQ;gBAC3B,IAAI,CAAC,CAAC,GAAS,KAAK,CAAC;gBACrB,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;aACzC;QACF,CAAC;QAED,IAAI,MAAM;YACT,OAAO,IAAI,CAAC,CAAC,CAAO;QACrB,CAAC;QAED,OAAO,CAAC,cAAmB;YAC1B,cAAc,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC;gBACpD,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,YAAY,EAAE,IAAI,CAAC,YAAY;aAC/B,CAAC,gEAAgD,CAAC;QACpD,CAAC;QAED,OAAO,CAAC,cAAmB;YAC1B,MAAM,GAAG,GAAG,cAAc,CAAC,GAAG,CAAC,eAAe,iCAAyB,CAAC;YACxE,IAAI,CAAC,GAAG,EAAE;gBACT,OAAO;aACP;YACD,IAAI,IAAS,CAAC;YACd,IAAI;gBACH,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACvB;YAAC,OAAO,CAAC,EAAE;gBACX,OAAO;aACP;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,uCAA+B,CAAC;YACzD,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;gBAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;aACtC;QACF,CAAC;KACD;IAvED,oBAuEC","file":"outlineViewState.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IOutlineViewState, OutlineSortOrder } from 'vs/workbench/contrib/outline/browser/outline';\n\nexport class OutlineViewState implements IOutlineViewState {\n\n\tprivate _followCursor = false;\n\tprivate _filterOnType = true;\n\tprivate _sortBy = OutlineSortOrder.ByPosition;\n\n\tprivate readonly _onDidChange = new Emitter<{ followCursor?: boolean; sortBy?: boolean; filterOnType?: boolean }>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t}\n\n\tset followCursor(value: boolean) {\n\t\tif (value !== this._followCursor) {\n\t\t\tthis._followCursor = value;\n\t\t\tthis._onDidChange.fire({ followCursor: true });\n\t\t}\n\t}\n\n\tget followCursor(): boolean {\n\t\treturn this._followCursor;\n\t}\n\n\tget filterOnType() {\n\t\treturn this._filterOnType;\n\t}\n\n\tset filterOnType(value) {\n\t\tif (value !== this._filterOnType) {\n\t\t\tthis._filterOnType = value;\n\t\t\tthis._onDidChange.fire({ filterOnType: true });\n\t\t}\n\t}\n\n\tset sortBy(value: OutlineSortOrder) {\n\t\tif (value !== this._sortBy) {\n\t\t\tthis._sortBy = value;\n\t\t\tthis._onDidChange.fire({ sortBy: true });\n\t\t}\n\t}\n\n\tget sortBy(): OutlineSortOrder {\n\t\treturn this._sortBy;\n\t}\n\n\tpersist(storageService: IStorageService): void {\n\t\tstorageService.store('outline/state', JSON.stringify({\n\t\t\tfollowCursor: this.followCursor,\n\t\t\tsortBy: this.sortBy,\n\t\t\tfilterOnType: this.filterOnType,\n\t\t}), StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t}\n\n\trestore(storageService: IStorageService): void {\n\t\tconst raw = storageService.get('outline/state', StorageScope.WORKSPACE);\n\t\tif (!raw) {\n\t\t\treturn;\n\t\t}\n\t\tlet data: any;\n\t\ttry {\n\t\t\tdata = JSON.parse(raw);\n\t\t} catch (e) {\n\t\t\treturn;\n\t\t}\n\t\tthis.followCursor = data.followCursor;\n\t\tthis.sortBy = data.sortBy ?? OutlineSortOrder.ByPosition;\n\t\tif (typeof data.filterOnType === 'boolean') {\n\t\t\tthis.filterOnType = data.filterOnType;\n\t\t}\n\t}\n}\n"]}