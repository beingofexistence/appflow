{"version":3,"sources":["vs/workbench/contrib/outline/browser/outlineActions.ts"],"names":[],"mappings":"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","file":"outlineActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ViewAction } from 'vs/workbench/browser/parts/views/viewPane';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ctxAllCollapsed, ctxFilterOnType, ctxFollowsCursor, ctxSortMode, IOutlinePane, OutlineSortOrder } from 'vs/workbench/contrib/outline/browser/outline';\n\n\n// --- commands\n\nregisterAction2(class CollapseAll extends ViewAction<IOutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: IOutlinePane.Id,\n\t\t\tid: 'outline.collapse',\n\t\t\ttitle: localize('collapse', \"Collapse All\"),\n\t\t\tf1: false,\n\t\t\ticon: Codicon.collapseAll,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', IOutlinePane.Id), ctxAllCollapsed.isEqualTo(false))\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: IOutlinePane) {\n\t\tview.collapseAll();\n\t}\n});\n\nregisterAction2(class ExpandAll extends ViewAction<IOutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: IOutlinePane.Id,\n\t\t\tid: 'outline.expand',\n\t\t\ttitle: localize('expand', \"Expand All\"),\n\t\t\tf1: false,\n\t\t\ticon: Codicon.expandAll,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', IOutlinePane.Id), ctxAllCollapsed.isEqualTo(true))\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: IOutlinePane) {\n\t\tview.expandAll();\n\t}\n});\n\nregisterAction2(class FollowCursor extends ViewAction<IOutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: IOutlinePane.Id,\n\t\t\tid: 'outline.followCursor',\n\t\t\ttitle: localize('followCur', \"Follow Cursor\"),\n\t\t\tf1: false,\n\t\t\ttoggled: ctxFollowsCursor,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'config',\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyExpr.equals('view', IOutlinePane.Id)\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: IOutlinePane) {\n\t\tview.outlineViewState.followCursor = !view.outlineViewState.followCursor;\n\t}\n});\n\nregisterAction2(class FilterOnType extends ViewAction<IOutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: IOutlinePane.Id,\n\t\t\tid: 'outline.filterOnType',\n\t\t\ttitle: localize('filterOnType', \"Filter on Type\"),\n\t\t\tf1: false,\n\t\t\ttoggled: ctxFilterOnType,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'config',\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.equals('view', IOutlinePane.Id)\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: IOutlinePane) {\n\t\tview.outlineViewState.filterOnType = !view.outlineViewState.filterOnType;\n\t}\n});\n\n\nregisterAction2(class SortByPosition extends ViewAction<IOutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: IOutlinePane.Id,\n\t\t\tid: 'outline.sortByPosition',\n\t\t\ttitle: localize('sortByPosition', \"Sort By: Position\"),\n\t\t\tf1: false,\n\t\t\ttoggled: ctxSortMode.isEqualTo(OutlineSortOrder.ByPosition),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'sort',\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyExpr.equals('view', IOutlinePane.Id)\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: IOutlinePane) {\n\t\tview.outlineViewState.sortBy = OutlineSortOrder.ByPosition;\n\t}\n});\n\nregisterAction2(class SortByName extends ViewAction<IOutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: IOutlinePane.Id,\n\t\t\tid: 'outline.sortByName',\n\t\t\ttitle: localize('sortByName', \"Sort By: Name\"),\n\t\t\tf1: false,\n\t\t\ttoggled: ctxSortMode.isEqualTo(OutlineSortOrder.ByName),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'sort',\n\t\t\t\torder: 2,\n\t\t\t\twhen: ContextKeyExpr.equals('view', IOutlinePane.Id)\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: IOutlinePane) {\n\t\tview.outlineViewState.sortBy = OutlineSortOrder.ByName;\n\t}\n});\n\nregisterAction2(class SortByKind extends ViewAction<IOutlinePane> {\n\tconstructor() {\n\t\tsuper({\n\t\t\tviewId: IOutlinePane.Id,\n\t\t\tid: 'outline.sortByKind',\n\t\t\ttitle: localize('sortByKind', \"Sort By: Category\"),\n\t\t\tf1: false,\n\t\t\ttoggled: ctxSortMode.isEqualTo(OutlineSortOrder.ByKind),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\tgroup: 'sort',\n\t\t\t\torder: 3,\n\t\t\t\twhen: ContextKeyExpr.equals('view', IOutlinePane.Id)\n\t\t\t}\n\t\t});\n\t}\n\trunInView(_accessor: ServicesAccessor, view: IOutlinePane) {\n\t\tview.outlineViewState.sortBy = OutlineSortOrder.ByKind;\n\t}\n});\n"]}