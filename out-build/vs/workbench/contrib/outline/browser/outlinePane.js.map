{"version":3,"sources":["vs/workbench/contrib/outline/browser/outlinePane.ts"],"names":[],"mappings":"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","file":"outlinePane.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./outlinePane';\nimport * as dom from 'vs/base/browser/dom';\nimport { ProgressBar } from 'vs/base/browser/ui/progressbar/progressbar';\nimport { TimeoutTimer } from 'vs/base/common/async';\nimport { IDisposable, toDisposable, DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { LRUCache } from 'vs/base/common/map';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { WorkbenchDataTree } from 'vs/platform/list/browser/listService';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ViewPane } from 'vs/workbench/browser/parts/views/viewPane';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { FuzzyScore } from 'vs/base/common/filters';\nimport { basename } from 'vs/base/common/resources';\nimport { IViewDescriptorService } from 'vs/workbench/common/views';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { OutlineViewState } from './outlineViewState';\nimport { IOutline, IOutlineComparator, IOutlineService, OutlineTarget } from 'vs/workbench/services/outline/browser/outline';\nimport { EditorResourceAccessor, IEditorPane } from 'vs/workbench/common/editor';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { ITreeSorter } from 'vs/base/browser/ui/tree/tree';\nimport { AbstractTreeViewState, IAbstractTreeViewState, TreeFindMode } from 'vs/base/browser/ui/tree/abstractTree';\nimport { URI } from 'vs/base/common/uri';\nimport { ctxAllCollapsed, ctxFilterOnType, ctxFollowsCursor, ctxSortMode, IOutlinePane, OutlineSortOrder } from 'vs/workbench/contrib/outline/browser/outline';\nimport { defaultProgressBarStyles } from 'vs/platform/theme/browser/defaultStyles';\n\nclass OutlineTreeSorter<E> implements ITreeSorter<E> {\n\n\tconstructor(\n\t\tprivate _comparator: IOutlineComparator<E>,\n\t\tpublic order: OutlineSortOrder\n\t) { }\n\n\tcompare(a: E, b: E): number {\n\t\tif (this.order === OutlineSortOrder.ByKind) {\n\t\t\treturn this._comparator.compareByType(a, b);\n\t\t} else if (this.order === OutlineSortOrder.ByName) {\n\t\t\treturn this._comparator.compareByName(a, b);\n\t\t} else {\n\t\t\treturn this._comparator.compareByPosition(a, b);\n\t\t}\n\t}\n}\n\nexport class OutlinePane extends ViewPane implements IOutlinePane {\n\n\tstatic readonly Id = 'outline';\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _editorControlDisposables = new DisposableStore();\n\tprivate readonly _editorPaneDisposables = new DisposableStore();\n\tprivate readonly _outlineViewState = new OutlineViewState();\n\n\tprivate readonly _editorListener = new MutableDisposable();\n\n\tprivate _domNode!: HTMLElement;\n\tprivate _message!: HTMLDivElement;\n\tprivate _progressBar!: ProgressBar;\n\tprivate _treeContainer!: HTMLElement;\n\tprivate _tree?: WorkbenchDataTree<IOutline<any> | undefined, any, FuzzyScore>;\n\tprivate _treeDimensions?: dom.Dimension;\n\tprivate _treeStates = new LRUCache<string, IAbstractTreeViewState>(10);\n\n\tprivate _ctxFollowsCursor!: IContextKey<boolean>;\n\tprivate _ctxFilterOnType!: IContextKey<boolean>;\n\tprivate _ctxSortMode!: IContextKey<OutlineSortOrder>;\n\tprivate _ctxAllCollapsed!: IContextKey<boolean>;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IOutlineService private readonly _outlineService: IOutlineService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, _instantiationService, openerService, themeService, telemetryService);\n\t\tthis._outlineViewState.restore(this._storageService);\n\t\tthis._disposables.add(this._outlineViewState);\n\n\t\tcontextKeyService.bufferChangeEvents(() => {\n\t\t\tthis._ctxFollowsCursor = ctxFollowsCursor.bindTo(contextKeyService);\n\t\t\tthis._ctxFilterOnType = ctxFilterOnType.bindTo(contextKeyService);\n\t\t\tthis._ctxSortMode = ctxSortMode.bindTo(contextKeyService);\n\t\t\tthis._ctxAllCollapsed = ctxAllCollapsed.bindTo(contextKeyService);\n\t\t});\n\n\t\tconst updateContext = () => {\n\t\t\tthis._ctxFollowsCursor.set(this._outlineViewState.followCursor);\n\t\t\tthis._ctxFilterOnType.set(this._outlineViewState.filterOnType);\n\t\t\tthis._ctxSortMode.set(this._outlineViewState.sortBy);\n\t\t};\n\t\tupdateContext();\n\t\tthis._disposables.add(this._outlineViewState.onDidChange(updateContext));\n\t}\n\n\toverride dispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._editorPaneDisposables.dispose();\n\t\tthis._editorControlDisposables.dispose();\n\t\tthis._editorListener.dispose();\n\t\tsuper.dispose();\n\t}\n\n\toverride focus(): void {\n\t\tthis._tree?.domFocus();\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis._domNode = container;\n\t\tcontainer.classList.add('outline-pane');\n\n\t\tconst progressContainer = dom.$('.outline-progress');\n\t\tthis._message = dom.$('.outline-message');\n\n\t\tthis._progressBar = new ProgressBar(progressContainer, defaultProgressBarStyles);\n\n\t\tthis._treeContainer = dom.$('.outline-tree');\n\t\tdom.append(container, progressContainer, this._message, this._treeContainer);\n\n\t\tthis._disposables.add(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (!visible) {\n\t\t\t\t// stop everything when not visible\n\t\t\t\tthis._editorListener.clear();\n\t\t\t\tthis._editorPaneDisposables.clear();\n\t\t\t\tthis._editorControlDisposables.clear();\n\n\t\t\t} else if (!this._editorListener.value) {\n\t\t\t\tconst event = Event.any(this._editorService.onDidActiveEditorChange, this._outlineService.onDidChange);\n\t\t\t\tthis._editorListener.value = event(() => this._handleEditorChanged(this._editorService.activeEditorPane));\n\t\t\t\tthis._handleEditorChanged(this._editorService.activeEditorPane);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\t\tthis._tree?.layout(height, width);\n\t\tthis._treeDimensions = new dom.Dimension(width, height);\n\t}\n\n\tcollapseAll(): void {\n\t\tthis._tree?.collapseAll();\n\t}\n\n\texpandAll(): void {\n\t\tthis._tree?.expandAll();\n\t}\n\n\tget outlineViewState() {\n\t\treturn this._outlineViewState;\n\t}\n\n\tprivate _showMessage(message: string) {\n\t\tthis._domNode.classList.add('message');\n\t\tthis._progressBar.stop().hide();\n\t\tthis._message.innerText = message;\n\t}\n\n\tprivate _captureViewState(uri?: URI): boolean {\n\t\tif (this._tree) {\n\t\t\tconst oldOutline = this._tree.getInput();\n\t\t\tif (!uri) {\n\t\t\t\turi = oldOutline?.uri;\n\t\t\t}\n\t\t\tif (oldOutline && uri) {\n\t\t\t\tthis._treeStates.set(`${oldOutline.outlineKind}/${uri}`, this._tree.getViewState());\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _handleEditorChanged(pane: IEditorPane | undefined): void {\n\t\tthis._editorPaneDisposables.clear();\n\n\t\tif (pane) {\n\t\t\t// react to control changes from within pane (https://github.com/microsoft/vscode/issues/134008)\n\t\t\tthis._editorPaneDisposables.add(pane.onDidChangeControl(() => {\n\t\t\t\tthis._handleEditorControlChanged(pane);\n\t\t\t}));\n\t\t}\n\n\t\tthis._handleEditorControlChanged(pane);\n\t}\n\n\tprivate async _handleEditorControlChanged(pane: IEditorPane | undefined): Promise<void> {\n\n\t\t// persist state\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(pane?.input);\n\t\tconst didCapture = this._captureViewState();\n\n\t\tthis._editorControlDisposables.clear();\n\n\t\tif (!pane || !this._outlineService.canCreateOutline(pane) || !resource) {\n\t\t\treturn this._showMessage(localize('no-editor', \"The active editor cannot provide outline information.\"));\n\t\t}\n\n\t\tlet loadingMessage: IDisposable | undefined;\n\t\tif (!didCapture) {\n\t\t\tloadingMessage = new TimeoutTimer(() => {\n\t\t\t\tthis._showMessage(localize('loading', \"Loading document symbols for '{0}'...\", basename(resource)));\n\t\t\t}, 100);\n\t\t}\n\n\t\tthis._progressBar.infinite().show(500);\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tthis._editorControlDisposables.add(toDisposable(() => cts.dispose(true)));\n\n\t\tconst newOutline = await this._outlineService.createOutline(pane, OutlineTarget.OutlinePane, cts.token);\n\t\tloadingMessage?.dispose();\n\n\t\tif (!newOutline) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (cts.token.isCancellationRequested) {\n\t\t\tnewOutline?.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editorControlDisposables.add(newOutline);\n\t\tthis._progressBar.stop().hide();\n\n\t\tconst sorter = new OutlineTreeSorter(newOutline.config.comparator, this._outlineViewState.sortBy);\n\n\t\tconst tree = <WorkbenchDataTree<IOutline<any> | undefined, any, FuzzyScore>>this._instantiationService.createInstance(\n\t\t\tWorkbenchDataTree,\n\t\t\t'OutlinePane',\n\t\t\tthis._treeContainer,\n\t\t\tnewOutline.config.delegate,\n\t\t\tnewOutline.config.renderers,\n\t\t\tnewOutline.config.treeDataSource,\n\t\t\t{\n\t\t\t\t...newOutline.config.options,\n\t\t\t\tsorter,\n\t\t\t\texpandOnDoubleClick: false,\n\t\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\thideTwistiesOfChildlessElements: true,\n\t\t\t\tdefaultFindMode: this._outlineViewState.filterOnType ? TreeFindMode.Filter : TreeFindMode.Highlight,\n\t\t\t\toverrideStyles: { listBackground: this.getBackgroundColor() }\n\t\t\t}\n\t\t);\n\n\t\t// update tree, listen to changes\n\t\tconst updateTree = () => {\n\t\t\tif (newOutline.isEmpty) {\n\t\t\t\t// no more elements\n\t\t\t\tthis._showMessage(localize('no-symbols', \"No symbols found in document '{0}'\", basename(resource)));\n\t\t\t\tthis._captureViewState(resource);\n\t\t\t\ttree.setInput(undefined);\n\n\t\t\t} else if (!tree.getInput()) {\n\t\t\t\t// first: init tree\n\t\t\t\tthis._domNode.classList.remove('message');\n\t\t\t\tconst state = this._treeStates.get(`${newOutline.outlineKind}/${newOutline.uri}`);\n\t\t\t\ttree.setInput(newOutline, state && AbstractTreeViewState.lift(state));\n\n\t\t\t} else {\n\t\t\t\t// update: refresh tree\n\t\t\t\tthis._domNode.classList.remove('message');\n\t\t\t\ttree.updateChildren();\n\t\t\t}\n\t\t};\n\t\tupdateTree();\n\t\tthis._editorControlDisposables.add(newOutline.onDidChange(updateTree));\n\t\ttree.findMode = this._outlineViewState.filterOnType ? TreeFindMode.Filter : TreeFindMode.Highlight;\n\n\t\t// feature: apply panel background to tree\n\t\tthis._editorControlDisposables.add(this.viewDescriptorService.onDidChangeLocation(({ views }) => {\n\t\t\tif (views.some(v => v.id === this.id)) {\n\t\t\t\ttree.updateOptions({ overrideStyles: { listBackground: this.getBackgroundColor() } });\n\t\t\t}\n\t\t}));\n\n\t\t// feature: filter on type - keep tree and menu in sync\n\t\tthis._editorControlDisposables.add(tree.onDidChangeFindMode(mode => this._outlineViewState.filterOnType = mode === TreeFindMode.Filter));\n\n\t\t// feature: reveal outline selection in editor\n\t\t// on change -> reveal/select defining range\n\t\tthis._editorControlDisposables.add(tree.onDidOpen(e => newOutline.reveal(e.element, e.editorOptions, e.sideBySide)));\n\t\t// feature: reveal editor selection in outline\n\t\tconst revealActiveElement = () => {\n\t\t\tif (!this._outlineViewState.followCursor || !newOutline.activeElement) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet item = newOutline.activeElement;\n\t\t\twhile (item) {\n\t\t\t\tconst top = tree.getRelativeTop(item);\n\t\t\t\tif (top === null) {\n\t\t\t\t\t// not visible -> reveal\n\t\t\t\t\ttree.reveal(item, 0.5);\n\t\t\t\t}\n\t\t\t\tif (tree.getRelativeTop(item) !== null) {\n\t\t\t\t\ttree.setFocus([item]);\n\t\t\t\t\ttree.setSelection([item]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// STILL not visible -> try parent\n\t\t\t\titem = tree.getParentElement(item);\n\t\t\t}\n\t\t};\n\t\trevealActiveElement();\n\t\tthis._editorControlDisposables.add(newOutline.onDidChange(revealActiveElement));\n\n\t\t// feature: update view when user state changes\n\t\tthis._editorControlDisposables.add(this._outlineViewState.onDidChange((e: { followCursor?: boolean; sortBy?: boolean; filterOnType?: boolean }) => {\n\t\t\tthis._outlineViewState.persist(this._storageService);\n\t\t\tif (e.filterOnType) {\n\t\t\t\ttree.findMode = this._outlineViewState.filterOnType ? TreeFindMode.Filter : TreeFindMode.Highlight;\n\t\t\t}\n\t\t\tif (e.followCursor) {\n\t\t\t\trevealActiveElement();\n\t\t\t}\n\t\t\tif (e.sortBy) {\n\t\t\t\tsorter.order = this._outlineViewState.sortBy;\n\t\t\t\ttree.resort();\n\t\t\t}\n\t\t}));\n\n\t\t// feature: expand all nodes when filtering (not when finding)\n\t\tlet viewState: AbstractTreeViewState | undefined;\n\t\tthis._editorControlDisposables.add(tree.onDidChangeFindPattern(pattern => {\n\t\t\tif (tree.findMode === TreeFindMode.Highlight) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!viewState && pattern) {\n\t\t\t\tviewState = tree.getViewState();\n\t\t\t\ttree.expandAll();\n\t\t\t} else if (!pattern && viewState) {\n\t\t\t\ttree.setInput(tree.getInput()!, viewState);\n\t\t\t\tviewState = undefined;\n\t\t\t}\n\t\t}));\n\n\t\t// feature: update all-collapsed context key\n\t\tconst updateAllCollapsedCtx = () => {\n\t\t\tthis._ctxAllCollapsed.set(tree.getNode(null).children.every(node => !node.collapsible || node.collapsed));\n\t\t};\n\t\tthis._editorControlDisposables.add(tree.onDidChangeCollapseState(updateAllCollapsedCtx));\n\t\tthis._editorControlDisposables.add(tree.onDidChangeModel(updateAllCollapsedCtx));\n\t\tupdateAllCollapsedCtx();\n\n\t\t// last: set tree property and wire it up to one of our context keys\n\t\ttree.layout(this._treeDimensions?.height, this._treeDimensions?.width);\n\t\tthis._tree = tree;\n\t\tthis._editorControlDisposables.add(toDisposable(() => {\n\t\t\ttree.dispose();\n\t\t\tthis._tree = undefined;\n\t\t}));\n\t}\n}\n"]}