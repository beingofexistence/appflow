{"version":3,"sources":["vs/workbench/contrib/typeHierarchy/browser/typeHierarchyTree.ts"],"names":[],"mappings":"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","file":"typeHierarchyTree.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAsyncDataSource, ITreeRenderer, ITreeNode, ITreeSorter } from 'vs/base/browser/ui/tree/tree';\nimport { TypeHierarchyDirection, TypeHierarchyItem, TypeHierarchyModel } from 'vs/workbench/contrib/typeHierarchy/common/typeHierarchy';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IIdentityProvider, IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { FuzzyScore, createMatches } from 'vs/base/common/filters';\nimport { IconLabel } from 'vs/base/browser/ui/iconLabel/iconLabel';\nimport { SymbolKinds, SymbolTag } from 'vs/editor/common/languages';\nimport { compare } from 'vs/base/common/strings';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IListAccessibilityProvider } from 'vs/base/browser/ui/list/listWidget';\nimport { localize } from 'vs/nls';\nimport { ThemeIcon } from 'vs/base/common/themables';\n\nexport class Type {\n\tconstructor(\n\t\treadonly item: TypeHierarchyItem,\n\t\treadonly model: TypeHierarchyModel,\n\t\treadonly parent: Type | undefined\n\t) { }\n\n\tstatic compare(a: Type, b: Type): number {\n\t\tlet res = compare(a.item.uri.toString(), b.item.uri.toString());\n\t\tif (res === 0) {\n\t\t\tres = Range.compareRangesUsingStarts(a.item.range, b.item.range);\n\t\t}\n\t\treturn res;\n\t}\n}\n\nexport class DataSource implements IAsyncDataSource<TypeHierarchyModel, Type> {\n\n\tconstructor(\n\t\tpublic getDirection: () => TypeHierarchyDirection,\n\t) { }\n\n\thasChildren(): boolean {\n\t\treturn true;\n\t}\n\n\tasync getChildren(element: TypeHierarchyModel | Type): Promise<Type[]> {\n\t\tif (element instanceof TypeHierarchyModel) {\n\t\t\treturn element.roots.map(root => new Type(root, element, undefined));\n\t\t}\n\n\t\tconst { model, item } = element;\n\n\t\tif (this.getDirection() === TypeHierarchyDirection.Supertypes) {\n\t\t\treturn (await model.provideSupertypes(item, CancellationToken.None)).map(item => {\n\t\t\t\treturn new Type(\n\t\t\t\t\titem,\n\t\t\t\t\tmodel,\n\t\t\t\t\telement\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\treturn (await model.provideSubtypes(item, CancellationToken.None)).map(item => {\n\t\t\t\treturn new Type(\n\t\t\t\t\titem,\n\t\t\t\t\tmodel,\n\t\t\t\t\telement\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class Sorter implements ITreeSorter<Type> {\n\n\tcompare(element: Type, otherElement: Type): number {\n\t\treturn Type.compare(element, otherElement);\n\t}\n}\n\nexport class IdentityProvider implements IIdentityProvider<Type> {\n\n\tconstructor(\n\t\tpublic getDirection: () => TypeHierarchyDirection\n\t) { }\n\n\tgetId(element: Type): { toString(): string } {\n\t\tlet res = this.getDirection() + JSON.stringify(element.item.uri) + JSON.stringify(element.item.range);\n\t\tif (element.parent) {\n\t\t\tres += this.getId(element.parent);\n\t\t}\n\t\treturn res;\n\t}\n}\n\nclass TypeRenderingTemplate {\n\tconstructor(\n\t\treadonly icon: HTMLDivElement,\n\t\treadonly label: IconLabel\n\t) { }\n}\n\nexport class TypeRenderer implements ITreeRenderer<Type, FuzzyScore, TypeRenderingTemplate> {\n\n\tstatic readonly id = 'TypeRenderer';\n\n\ttemplateId: string = TypeRenderer.id;\n\n\trenderTemplate(container: HTMLElement): TypeRenderingTemplate {\n\t\tcontainer.classList.add('typehierarchy-element');\n\t\tconst icon = document.createElement('div');\n\t\tcontainer.appendChild(icon);\n\t\tconst label = new IconLabel(container, { supportHighlights: true });\n\t\treturn new TypeRenderingTemplate(icon, label);\n\t}\n\n\trenderElement(node: ITreeNode<Type, FuzzyScore>, _index: number, template: TypeRenderingTemplate): void {\n\t\tconst { element, filterData } = node;\n\t\tconst deprecated = element.item.tags?.includes(SymbolTag.Deprecated);\n\t\ttemplate.icon.classList.add('inline', ...ThemeIcon.asClassNameArray(SymbolKinds.toIcon(element.item.kind)));\n\t\ttemplate.label.setLabel(\n\t\t\telement.item.name,\n\t\t\telement.item.detail,\n\t\t\t{ labelEscapeNewLines: true, matches: createMatches(filterData), strikethrough: deprecated }\n\t\t);\n\t}\n\tdisposeTemplate(template: TypeRenderingTemplate): void {\n\t\ttemplate.label.dispose();\n\t}\n}\n\nexport class VirtualDelegate implements IListVirtualDelegate<Type> {\n\n\tgetHeight(_element: Type): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(_element: Type): string {\n\t\treturn TypeRenderer.id;\n\t}\n}\n\nexport class AccessibilityProvider implements IListAccessibilityProvider<Type> {\n\n\tconstructor(\n\t\tpublic getDirection: () => TypeHierarchyDirection\n\t) { }\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('tree.aria', \"Type Hierarchy\");\n\t}\n\n\tgetAriaLabel(element: Type): string | null {\n\t\tif (this.getDirection() === TypeHierarchyDirection.Supertypes) {\n\t\t\treturn localize('supertypes', \"supertypes of {0}\", element.item.name);\n\t\t} else {\n\t\t\treturn localize('subtypes', \"subtypes of {0}\", element.item.name);\n\t\t}\n\t}\n}\n"]}