{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/typeHierarchy/common/typeHierarchy.ts"],"names":[],"mappings":"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","file":"typeHierarchy.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { SymbolKind, ProviderResult, SymbolTag } from 'vs/editor/common/languages';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/languageFeatureRegistry';\nimport { URI } from 'vs/base/common/uri';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { IDisposable, RefCountedDisposable } from 'vs/base/common/lifecycle';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { assertType } from 'vs/base/common/types';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\n\nexport const enum TypeHierarchyDirection {\n\tSubtypes = 'subtypes',\n\tSupertypes = 'supertypes'\n}\n\nexport interface TypeHierarchyItem {\n\t_sessionId: string;\n\t_itemId: string;\n\tkind: SymbolKind;\n\tname: string;\n\tdetail?: string;\n\turi: URI;\n\trange: IRange;\n\tselectionRange: IRange;\n\ttags?: SymbolTag[];\n}\n\nexport interface TypeHierarchySession {\n\troots: TypeHierarchyItem[];\n\tdispose(): void;\n}\n\nexport interface TypeHierarchyProvider {\n\tprepareTypeHierarchy(document: ITextModel, position: IPosition, token: CancellationToken): ProviderResult<TypeHierarchySession>;\n\tprovideSupertypes(item: TypeHierarchyItem, token: CancellationToken): ProviderResult<TypeHierarchyItem[]>;\n\tprovideSubtypes(item: TypeHierarchyItem, token: CancellationToken): ProviderResult<TypeHierarchyItem[]>;\n}\n\nexport const TypeHierarchyProviderRegistry = new LanguageFeatureRegistry<TypeHierarchyProvider>();\n\n\n\nexport class TypeHierarchyModel {\n\n\tstatic async create(model: ITextModel, position: IPosition, token: CancellationToken): Promise<TypeHierarchyModel | undefined> {\n\t\tconst [provider] = TypeHierarchyProviderRegistry.ordered(model);\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst session = await provider.prepareTypeHierarchy(model, position, token);\n\t\tif (!session) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new TypeHierarchyModel(session.roots.reduce((p, c) => p + c._sessionId, ''), provider, session.roots, new RefCountedDisposable(session));\n\t}\n\n\treadonly root: TypeHierarchyItem;\n\n\tprivate constructor(\n\t\treadonly id: string,\n\t\treadonly provider: TypeHierarchyProvider,\n\t\treadonly roots: TypeHierarchyItem[],\n\t\treadonly ref: RefCountedDisposable,\n\t) {\n\t\tthis.root = roots[0];\n\t}\n\n\tdispose(): void {\n\t\tthis.ref.release();\n\t}\n\n\tfork(item: TypeHierarchyItem): TypeHierarchyModel {\n\t\tconst that = this;\n\t\treturn new class extends TypeHierarchyModel {\n\t\t\tconstructor() {\n\t\t\t\tsuper(that.id, that.provider, [item], that.ref.acquire());\n\t\t\t}\n\t\t};\n\t}\n\n\tasync provideSupertypes(item: TypeHierarchyItem, token: CancellationToken): Promise<TypeHierarchyItem[]> {\n\t\ttry {\n\t\t\tconst result = await this.provider.provideSupertypes(item, token);\n\t\t\tif (isNonEmptyArray(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tonUnexpectedExternalError(e);\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync provideSubtypes(item: TypeHierarchyItem, token: CancellationToken): Promise<TypeHierarchyItem[]> {\n\t\ttry {\n\t\t\tconst result = await this.provider.provideSubtypes(item, token);\n\t\t\tif (isNonEmptyArray(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tonUnexpectedExternalError(e);\n\t\t}\n\t\treturn [];\n\t}\n}\n\n// --- API command support\n\nconst _models = new Map<string, TypeHierarchyModel>();\n\nCommandsRegistry.registerCommand('_executePrepareTypeHierarchy', async (accessor, ...args) => {\n\tconst [resource, position] = args;\n\tassertType(URI.isUri(resource));\n\tassertType(Position.isIPosition(position));\n\n\tconst modelService = accessor.get(IModelService);\n\tlet textModel = modelService.getModel(resource);\n\tlet textModelReference: IDisposable | undefined;\n\tif (!textModel) {\n\t\tconst textModelService = accessor.get(ITextModelService);\n\t\tconst result = await textModelService.createModelReference(resource);\n\t\ttextModel = result.object.textEditorModel;\n\t\ttextModelReference = result;\n\t}\n\n\ttry {\n\t\tconst model = await TypeHierarchyModel.create(textModel, position, CancellationToken.None);\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\t_models.set(model.id, model);\n\t\t_models.forEach((value, key, map) => {\n\t\t\tif (map.size > 10) {\n\t\t\t\tvalue.dispose();\n\t\t\t\t_models.delete(key);\n\t\t\t}\n\t\t});\n\t\treturn [model.root];\n\n\t} finally {\n\t\ttextModelReference?.dispose();\n\t}\n});\n\nfunction isTypeHierarchyItemDto(obj: any): obj is TypeHierarchyItem {\n\tconst item = obj as TypeHierarchyItem;\n\treturn typeof obj === 'object'\n\t\t&& typeof item.name === 'string'\n\t\t&& typeof item.kind === 'number'\n\t\t&& URI.isUri(item.uri)\n\t\t&& Range.isIRange(item.range)\n\t\t&& Range.isIRange(item.selectionRange);\n}\n\nCommandsRegistry.registerCommand('_executeProvideSupertypes', async (_accessor, ...args) => {\n\tconst [item] = args;\n\tassertType(isTypeHierarchyItemDto(item));\n\n\t// find model\n\tconst model = _models.get(item._sessionId);\n\tif (!model) {\n\t\treturn undefined;\n\t}\n\n\treturn model.provideSupertypes(item, CancellationToken.None);\n});\n\nCommandsRegistry.registerCommand('_executeProvideSubtypes', async (_accessor, ...args) => {\n\tconst [item] = args;\n\tassertType(isTypeHierarchyItemDto(item));\n\n\t// find model\n\tconst model = _models.get(item._sessionId);\n\tif (!model) {\n\t\treturn undefined;\n\t}\n\n\treturn model.provideSubtypes(item, CancellationToken.None);\n});\n"]}