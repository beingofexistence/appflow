{"version":3,"sources":["vs/workbench/contrib/inlineChat/browser/inlineChatController.ts"],"names":[],"mappings":"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","file":"inlineChatController.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { renderMarkdown } from 'vs/base/browser/markdownRenderer';\nimport * as aria from 'vs/base/browser/ui/aria/aria';\nimport { Barrier, raceCancellationError } from 'vs/base/common/async';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { DisposableStore, IDisposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { assertType } from 'vs/base/common/types';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { IEditorContribution, ScrollType } from 'vs/editor/common/editorCommon';\nimport { ModelDecorationOptions, createTextBufferFactoryFromSnapshot } from 'vs/editor/common/model/textModel';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorker';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { InlineCompletionsController } from 'vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController';\nimport { localize } from 'vs/nls';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { EditResponse, EmptyResponse, ErrorResponse, ExpansionState, IInlineChatSessionService, MarkdownResponse, Session, SessionExchange, SessionPrompt } from 'vs/workbench/contrib/inlineChat/browser/inlineChatSession';\nimport { EditModeStrategy, LivePreviewStrategy, LiveStrategy, PreviewStrategy } from 'vs/workbench/contrib/inlineChat/browser/inlineChatStrategies';\nimport { InlineChatZoneWidget } from 'vs/workbench/contrib/inlineChat/browser/inlineChatWidget';\nimport { CTX_INLINE_CHAT_HAS_ACTIVE_REQUEST, CTX_INLINE_CHAT_LAST_FEEDBACK, IInlineChatRequest, IInlineChatResponse, INLINE_CHAT_ID, EditMode, InlineChatResponseFeedbackKind, CTX_INLINE_CHAT_LAST_RESPONSE_TYPE, InlineChatResponseType, CTX_INLINE_CHAT_DID_EDIT, CTX_INLINE_CHAT_HAS_STASHED_SESSION, InlineChateResponseTypes, CTX_INLINE_CHAT_RESPONSE_TYPES, CTX_INLINE_CHAT_USER_DID_EDIT, IInlineChatProgressItem } from 'vs/workbench/contrib/inlineChat/common/inlineChat';\nimport { IChatAccessibilityService, IChatWidgetService } from 'vs/workbench/contrib/chat/browser/chat';\nimport { IChatService } from 'vs/workbench/contrib/chat/common/chatService';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { Lazy } from 'vs/base/common/lazy';\nimport { Progress } from 'vs/platform/progress/common/progress';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { TextEdit } from 'vs/editor/common/languages';\nimport { ISelection } from 'vs/editor/common/core/selection';\nimport { onUnexpectedError } from 'vs/base/common/errors';\n\nexport const enum State {\n\tCREATE_SESSION = 'CREATE_SESSION',\n\tINIT_UI = 'INIT_UI',\n\tWAIT_FOR_INPUT = 'WAIT_FOR_INPUT',\n\tMAKE_REQUEST = 'MAKE_REQUEST',\n\tAPPLY_RESPONSE = 'APPLY_RESPONSE',\n\tSHOW_RESPONSE = 'SHOW_RESPONSE',\n\tPAUSE = 'PAUSE',\n\tCANCEL = 'CANCEL',\n\tACCEPT = 'DONE',\n}\n\nconst enum Message {\n\tNONE = 0,\n\tACCEPT_SESSION = 1 << 0,\n\tCANCEL_SESSION = 1 << 1,\n\tPAUSE_SESSION = 1 << 2,\n\tCANCEL_REQUEST = 1 << 3,\n\tCANCEL_INPUT = 1 << 4,\n\tACCEPT_INPUT = 1 << 5,\n\tRERUN_INPUT = 1 << 6,\n}\n\nexport interface InlineChatRunOptions {\n\tinitialSelection?: ISelection;\n\tinitialRange?: IRange;\n\tmessage?: string;\n\tautoSend?: boolean;\n\texistingSession?: Session;\n\tisUnstashed?: boolean;\n\tposition?: IPosition;\n}\n\nexport class InlineChatController implements IEditorContribution {\n\n\tstatic get(editor: ICodeEditor) {\n\t\treturn editor.getContribution<InlineChatController>(INLINE_CHAT_ID);\n\t}\n\n\tprivate static _decoBlock = ModelDecorationOptions.register({\n\t\tdescription: 'inline-chat',\n\t\tshowIfCollapsed: false,\n\t\tisWholeLine: true,\n\t\tclassName: 'inline-chat-block-selection',\n\t});\n\n\tprivate static _promptHistory: string[] = [];\n\tprivate _historyOffset: number = -1;\n\n\tprivate readonly _store = new DisposableStore();\n\tprivate readonly _zone: Lazy<InlineChatZoneWidget>;\n\tprivate readonly _ctxHasActiveRequest: IContextKey<boolean>;\n\tprivate readonly _ctxLastResponseType: IContextKey<undefined | InlineChatResponseType>;\n\tprivate readonly _ctxResponseTypes: IContextKey<undefined | InlineChateResponseTypes>;\n\tprivate readonly _ctxDidEdit: IContextKey<boolean>;\n\tprivate readonly _ctxUserDidEdit: IContextKey<boolean>;\n\tprivate readonly _ctxLastFeedbackKind: IContextKey<'helpful' | 'unhelpful' | ''>;\n\n\tprivate _messages = this._store.add(new Emitter<Message>());\n\n\treadonly onDidAcceptInput = Event.filter(this._messages.event, m => m === Message.ACCEPT_INPUT, this._store);\n\treadonly onDidCancelInput = Event.filter(this._messages.event, m => m === Message.CANCEL_INPUT || m === Message.CANCEL_SESSION, this._store);\n\n\tprivate readonly _sessionStore: DisposableStore = this._store.add(new DisposableStore());\n\tprivate readonly _stashedSession: MutableDisposable<StashedSession> = this._store.add(new MutableDisposable());\n\tprivate _activeSession?: Session;\n\tprivate _strategy?: EditModeStrategy;\n\tprivate _ignoreModelContentChanged = false;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@IInlineChatSessionService private readonly _inlineChatSessionService: IInlineChatSessionService,\n\t\t@IEditorWorkerService private readonly _editorWorkerService: IEditorWorkerService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IChatAccessibilityService private readonly _chatAccessibilityService: IChatAccessibilityService\n\t) {\n\t\tthis._ctxHasActiveRequest = CTX_INLINE_CHAT_HAS_ACTIVE_REQUEST.bindTo(contextKeyService);\n\t\tthis._ctxDidEdit = CTX_INLINE_CHAT_DID_EDIT.bindTo(contextKeyService);\n\t\tthis._ctxUserDidEdit = CTX_INLINE_CHAT_USER_DID_EDIT.bindTo(contextKeyService);\n\t\tthis._ctxResponseTypes = CTX_INLINE_CHAT_RESPONSE_TYPES.bindTo(contextKeyService);\n\t\tthis._ctxLastResponseType = CTX_INLINE_CHAT_LAST_RESPONSE_TYPE.bindTo(contextKeyService);\n\t\tthis._ctxLastFeedbackKind = CTX_INLINE_CHAT_LAST_FEEDBACK.bindTo(contextKeyService);\n\t\tthis._zone = new Lazy(() => this._store.add(_instaService.createInstance(InlineChatZoneWidget, this._editor)));\n\n\t\tthis._store.add(this._editor.onDidChangeModel(async e => {\n\t\t\tif (this._activeSession || !e.newModelUrl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst existingSession = this._inlineChatSessionService.getSession(this._editor, e.newModelUrl);\n\t\t\tif (!existingSession) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._log('session RESUMING', e);\n\t\t\tawait this.run({ existingSession });\n\t\t\tthis._log('session done or paused');\n\t\t}));\n\t\tthis._log('NEW controller');\n\t}\n\n\tdispose(): void {\n\t\tthis._strategy?.dispose();\n\t\tthis._stashedSession.clear();\n\t\tif (this._activeSession) {\n\t\t\tthis._inlineChatSessionService.releaseSession(this._activeSession);\n\t\t}\n\t\tthis._store.dispose();\n\t\tthis._log('controller disposed');\n\t}\n\n\tprivate _log(message: string | Error, ...more: any[]): void {\n\t\tif (message instanceof Error) {\n\t\t\tthis._logService.error(message, ...more);\n\t\t} else {\n\t\t\tthis._logService.trace(`[IE] (editor:${this._editor.getId()})${message}`, ...more);\n\t\t}\n\t}\n\n\tgetMessage(): string | undefined {\n\t\treturn this._zone.value.widget.responseContent;\n\t}\n\n\tgetId(): string {\n\t\treturn INLINE_CHAT_ID;\n\t}\n\n\tprivate _getMode(): EditMode {\n\t\tconst editMode = this._configurationService.inspect<EditMode>('inlineChat.mode');\n\t\tlet editModeValue = editMode.value;\n\t\tif (this._accessibilityService.isScreenReaderOptimized() && editModeValue === editMode.defaultValue) {\n\t\t\t// By default, use preview mode for screen reader users\n\t\t\teditModeValue = EditMode.Preview;\n\t\t}\n\t\treturn editModeValue!;\n\t}\n\n\tgetWidgetPosition(): Position | undefined {\n\t\treturn this._zone.value.position;\n\t}\n\n\tprivate _currentRun?: Promise<void>;\n\n\tasync run(options: InlineChatRunOptions | undefined = {}): Promise<void> {\n\t\ttry {\n\t\t\tthis.finishExistingSession();\n\t\t\tif (this._currentRun) {\n\t\t\t\tawait this._currentRun;\n\t\t\t}\n\t\t\tthis._stashedSession.clear();\n\t\t\tif (options.initialSelection) {\n\t\t\t\tthis._editor.setSelection(options.initialSelection);\n\t\t\t}\n\t\t\tthis._currentRun = this._nextState(State.CREATE_SESSION, options);\n\t\t\tawait this._currentRun;\n\n\t\t} catch (error) {\n\t\t\t// this should not happen but when it does make sure to tear down the UI and everything\n\t\t\tonUnexpectedError(error);\n\t\t\tif (this._activeSession) {\n\t\t\t\tthis._inlineChatSessionService.releaseSession(this._activeSession);\n\t\t\t}\n\t\t\tthis[State.PAUSE]();\n\n\t\t} finally {\n\t\t\tthis._currentRun = undefined;\n\t\t}\n\t}\n\n\t// ---- state machine\n\n\tprivate _showWidget(initialRender: boolean = false, position?: IPosition) {\n\t\tassertType(this._editor.hasModel());\n\n\t\tlet widgetPosition: Position;\n\t\tif (initialRender) {\n\t\t\twidgetPosition = position ? Position.lift(position) : this._editor.getSelection().getEndPosition();\n\t\t\tthis._zone.value.setContainerMargins();\n\t\t\tthis._zone.value.setWidgetMargins(widgetPosition);\n\t\t} else {\n\t\t\tassertType(this._activeSession);\n\t\t\tassertType(this._strategy);\n\t\t\twidgetPosition = this._strategy.getWidgetPosition() ?? this._zone.value.position ?? this._activeSession.wholeRange.value.getEndPosition();\n\t\t\tconst needsMargin = this._strategy.needsMargin();\n\t\t\tif (!needsMargin) {\n\t\t\t\tthis._zone.value.setWidgetMargins(widgetPosition, 0);\n\t\t\t}\n\t\t\tthis._zone.value.updateBackgroundColor(widgetPosition, this._activeSession.wholeRange.value);\n\t\t}\n\t\tthis._zone.value.show(widgetPosition);\n\t}\n\n\tprotected async _nextState(state: State, options: InlineChatRunOptions): Promise<void> {\n\t\tlet nextState: State | void = state;\n\t\twhile (nextState) {\n\t\t\tthis._log('setState to ', nextState);\n\t\t\tnextState = await this[nextState](options);\n\t\t}\n\t}\n\n\tprivate async [State.CREATE_SESSION](options: InlineChatRunOptions): Promise<State.CANCEL | State.INIT_UI | State.PAUSE> {\n\t\tassertType(this._activeSession === undefined);\n\t\tassertType(this._editor.hasModel());\n\n\t\tlet session: Session | undefined = options.existingSession;\n\n\t\tthis._showWidget(true, options.position);\n\t\tthis._zone.value.widget.updateInfo(localize('welcome.1', \"AI-generated code may be incorrect\"));\n\t\tthis._zone.value.widget.placeholder = this._getPlaceholderText();\n\n\t\tif (!session) {\n\t\t\tconst createSessionCts = new CancellationTokenSource();\n\t\t\tconst msgListener = Event.once(this._messages.event)(m => {\n\t\t\t\tthis._log('state=_createSession) message received', m);\n\t\t\t\tif (m === Message.ACCEPT_INPUT) {\n\t\t\t\t\t// user accepted the input before having a session\n\t\t\t\t\toptions.autoSend = true;\n\t\t\t\t\tthis._zone.value.widget.updateProgress(true);\n\t\t\t\t\tthis._zone.value.widget.updateInfo(localize('welcome.2', \"Getting ready...\"));\n\t\t\t\t} else {\n\t\t\t\t\tcreateSessionCts.cancel();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsession = await this._inlineChatSessionService.createSession(\n\t\t\t\tthis._editor,\n\t\t\t\t{ editMode: this._getMode(), wholeRange: options.initialRange },\n\t\t\t\tcreateSessionCts.token\n\t\t\t);\n\n\t\t\tcreateSessionCts.dispose();\n\t\t\tmsgListener.dispose();\n\n\t\t\tif (createSessionCts.token.isCancellationRequested) {\n\t\t\t\treturn State.PAUSE;\n\t\t\t}\n\t\t}\n\n\t\tdelete options.initialRange;\n\t\tdelete options.existingSession;\n\n\t\tif (!session) {\n\t\t\tthis._dialogService.info(localize('create.fail', \"Failed to start editor chat\"), localize('create.fail.detail', \"Please consult the error log and try again later.\"));\n\t\t\treturn State.CANCEL;\n\t\t}\n\n\t\tswitch (session.editMode) {\n\t\t\tcase EditMode.Live:\n\t\t\t\tthis._strategy = this._instaService.createInstance(LiveStrategy, session, this._editor, this._zone.value.widget);\n\t\t\t\tbreak;\n\t\t\tcase EditMode.Preview:\n\t\t\t\tthis._strategy = this._instaService.createInstance(PreviewStrategy, session, this._zone.value.widget);\n\t\t\t\tbreak;\n\t\t\tcase EditMode.LivePreview:\n\t\t\tdefault:\n\t\t\t\tthis._strategy = this._instaService.createInstance(LivePreviewStrategy, session, this._editor, this._zone.value.widget);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._activeSession = session;\n\t\treturn State.INIT_UI;\n\t}\n\n\tprivate async [State.INIT_UI](options: InlineChatRunOptions): Promise<State.WAIT_FOR_INPUT | State.SHOW_RESPONSE | State.APPLY_RESPONSE> {\n\t\tassertType(this._activeSession);\n\n\t\t// hide/cancel inline completions when invoking IE\n\t\tInlineCompletionsController.get(this._editor)?.hide();\n\n\t\tthis._sessionStore.clear();\n\n\t\tconst wholeRangeDecoration = this._editor.createDecorationsCollection();\n\t\tconst updateWholeRangeDecoration = () => {\n\t\t\twholeRangeDecoration.set([{\n\t\t\t\trange: this._activeSession!.wholeRange.value,\n\t\t\t\toptions: InlineChatController._decoBlock\n\t\t\t}]);\n\t\t};\n\t\tthis._sessionStore.add(toDisposable(() => wholeRangeDecoration.clear()));\n\t\tthis._sessionStore.add(this._activeSession.wholeRange.onDidChange(updateWholeRangeDecoration));\n\t\tupdateWholeRangeDecoration();\n\n\t\tthis._zone.value.widget.updateSlashCommands(this._activeSession.session.slashCommands ?? []);\n\t\tthis._zone.value.widget.placeholder = this._getPlaceholderText();\n\t\tthis._zone.value.widget.updateInfo(this._activeSession.session.message ?? localize('welcome.1', \"AI-generated code may be incorrect\"));\n\t\tthis._zone.value.widget.preferredExpansionState = this._activeSession.lastExpansionState;\n\t\tthis._zone.value.widget.value = this._activeSession.lastInput?.value ?? this._zone.value.widget.value;\n\t\tthis._sessionStore.add(this._zone.value.widget.onDidChangeInput(_ => {\n\t\t\tconst start = this._zone.value.position;\n\t\t\tif (!start || !this._zone.value.widget.hasFocus() || !this._zone.value.widget.value || !this._editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst nextLine = start.lineNumber + 1;\n\t\t\tif (nextLine >= this._editor.getModel().getLineCount()) {\n\t\t\t\t// last line isn't supported\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._editor.revealLine(nextLine, ScrollType.Smooth);\n\t\t}));\n\n\t\tthis._showWidget(true, options.position);\n\n\t\tthis._sessionStore.add(this._editor.onDidChangeModel((e) => {\n\t\t\tconst msg = this._activeSession?.lastExchange\n\t\t\t\t? Message.PAUSE_SESSION // pause when switching models/tabs and when having a previous exchange\n\t\t\t\t: Message.CANCEL_SESSION;\n\t\t\tthis._log('model changed, pause or cancel session', msg, e);\n\t\t\tthis._messages.fire(msg);\n\t\t}));\n\n\t\tthis._sessionStore.add(this._editor.onDidChangeModelContent(e => {\n\n\t\t\tif (!this._ignoreModelContentChanged && this._strategy?.hasFocus()) {\n\t\t\t\tthis._ctxUserDidEdit.set(true);\n\t\t\t}\n\n\t\t\tif (this._ignoreModelContentChanged || this._strategy?.hasFocus()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst wholeRange = this._activeSession!.wholeRange;\n\t\t\tlet editIsOutsideOfWholeRange = false;\n\t\t\tfor (const { range } of e.changes) {\n\t\t\t\teditIsOutsideOfWholeRange = !Range.areIntersectingOrTouching(range, wholeRange.value);\n\t\t\t}\n\n\t\t\tthis._activeSession!.recordExternalEditOccurred(editIsOutsideOfWholeRange);\n\n\t\t\tif (editIsOutsideOfWholeRange) {\n\t\t\t\tthis._log('text changed outside of whole range, FINISH session');\n\t\t\t\tthis.finishExistingSession();\n\t\t\t}\n\t\t}));\n\n\t\tif (!this._activeSession.lastExchange) {\n\t\t\treturn State.WAIT_FOR_INPUT;\n\t\t} else if (options.isUnstashed) {\n\t\t\tdelete options.isUnstashed;\n\t\t\treturn State.APPLY_RESPONSE;\n\t\t} else {\n\t\t\treturn State.SHOW_RESPONSE;\n\t\t}\n\t}\n\n\tprivate _getPlaceholderText(): string {\n\t\tlet result = this._activeSession?.session.placeholder ?? localize('default.placeholder', \"Ask a question\");\n\t\tif (InlineChatController._promptHistory.length > 0) {\n\t\t\tconst kb1 = this._keybindingService.lookupKeybinding('inlineChat.previousFromHistory')?.getLabel();\n\t\t\tconst kb2 = this._keybindingService.lookupKeybinding('inlineChat.nextFromHistory')?.getLabel();\n\n\t\t\tif (kb1 && kb2) {\n\t\t\t\tresult = localize('default.placeholder.history', \"{0} ({1}, {2} for history)\", result, kb1, kb2);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\n\tprivate async [State.WAIT_FOR_INPUT](options: InlineChatRunOptions): Promise<State.ACCEPT | State.CANCEL | State.PAUSE | State.WAIT_FOR_INPUT | State.MAKE_REQUEST> {\n\t\tassertType(this._activeSession);\n\t\tassertType(this._strategy);\n\n\t\tthis._zone.value.widget.placeholder = this._getPlaceholderText();\n\n\t\tif (options.message) {\n\t\t\tthis.updateInput(options.message);\n\t\t\taria.alert(options.message);\n\t\t\tdelete options.message;\n\t\t}\n\n\t\tlet message = Message.NONE;\n\t\tif (options.autoSend) {\n\t\t\tmessage = Message.ACCEPT_INPUT;\n\t\t\tdelete options.autoSend;\n\n\t\t} else {\n\t\t\tconst barrier = new Barrier();\n\t\t\tconst msgListener = Event.once(this._messages.event)(m => {\n\t\t\t\tthis._log('state=_waitForInput) message received', m);\n\t\t\t\tmessage = m;\n\t\t\t\tbarrier.open();\n\t\t\t});\n\t\t\tawait barrier.wait();\n\t\t\tmsgListener.dispose();\n\t\t}\n\n\t\tthis._zone.value.widget.selectAll(false);\n\n\t\tif (message & (Message.CANCEL_INPUT | Message.CANCEL_SESSION)) {\n\t\t\treturn State.CANCEL;\n\t\t}\n\n\t\tif (message & Message.ACCEPT_SESSION) {\n\t\t\treturn State.ACCEPT;\n\t\t}\n\n\t\tif (message & Message.PAUSE_SESSION) {\n\t\t\treturn State.PAUSE;\n\t\t}\n\n\t\tif (message & Message.RERUN_INPUT && this._activeSession.lastExchange) {\n\t\t\tconst { lastExchange } = this._activeSession;\n\t\t\tthis._activeSession.addInput(lastExchange.prompt.retry());\n\t\t\tif (lastExchange.response instanceof EditResponse) {\n\t\t\t\tawait this._strategy.undoChanges(lastExchange.response);\n\t\t\t}\n\t\t\treturn State.MAKE_REQUEST;\n\t\t}\n\n\t\tif (!this._zone.value.widget.value) {\n\t\t\treturn State.WAIT_FOR_INPUT;\n\t\t}\n\n\t\tconst input = this._zone.value.widget.value;\n\n\t\tif (!InlineChatController._promptHistory.includes(input)) {\n\t\t\tInlineChatController._promptHistory.unshift(input);\n\t\t}\n\n\t\tconst refer = this._activeSession.session.slashCommands?.some(value => value.refer && input!.startsWith(`/${value.command}`));\n\t\tif (refer) {\n\t\t\tthis._log('[IE] seeing refer command, continuing outside editor', this._activeSession.provider.debugName);\n\t\t\tthis._editor.setSelection(this._activeSession.wholeRange.value);\n\t\t\tthis._instaService.invokeFunction(sendRequest, input);\n\n\t\t\tif (!this._activeSession.lastExchange) {\n\t\t\t\t// DONE when there wasn't any exchange yet. We used the inline chat only as trampoline\n\t\t\t\treturn State.ACCEPT;\n\t\t\t}\n\t\t\treturn State.WAIT_FOR_INPUT;\n\t\t}\n\n\t\tthis._activeSession.addInput(new SessionPrompt(input));\n\t\treturn State.MAKE_REQUEST;\n\t}\n\n\tprivate async [State.MAKE_REQUEST](): Promise<State.APPLY_RESPONSE | State.PAUSE | State.CANCEL | State.ACCEPT> {\n\t\tassertType(this._editor.hasModel());\n\t\tassertType(this._activeSession);\n\t\tassertType(this._activeSession.lastInput);\n\n\t\tconst requestCts = new CancellationTokenSource();\n\n\t\tlet message = Message.NONE;\n\t\tconst msgListener = Event.once(this._messages.event)(m => {\n\t\t\tthis._log('state=_makeRequest) message received', m);\n\t\t\tmessage = m;\n\t\t\trequestCts.cancel();\n\t\t});\n\n\t\tconst typeListener = this._zone.value.widget.onDidChangeInput(() => {\n\t\t\trequestCts.cancel();\n\t\t});\n\n\t\tconst sw = StopWatch.create();\n\t\tconst request: IInlineChatRequest = {\n\t\t\trequestId: generateUuid(),\n\t\t\tprompt: this._activeSession.lastInput.value,\n\t\t\tattempt: this._activeSession.lastInput.attempt,\n\t\t\tselection: this._editor.getSelection(),\n\t\t\twholeRange: this._activeSession.wholeRange.value,\n\t\t\tlive: this._activeSession.editMode !== EditMode.Preview // TODO@jrieken let extension know what document is used for previewing\n\t\t};\n\t\tthis._chatAccessibilityService.acceptRequest();\n\n\t\tconst progressEdits: TextEdit[][] = [];\n\t\tconst progress = new Progress<IInlineChatProgressItem>(async data => {\n\t\t\tthis._log('received chunk', data, request);\n\t\t\tif (!request.live) {\n\t\t\t\tthrow new Error('Progress in NOT supported in non-live mode');\n\t\t\t}\n\t\t\tif (data.message) {\n\t\t\t\tthis._zone.value.widget.updateToolbar(false);\n\t\t\t\tthis._zone.value.widget.updateInfo(data.message);\n\t\t\t}\n\t\t\tif (data.edits) {\n\t\t\t\tprogressEdits.push(data.edits);\n\t\t\t\tawait this._makeChanges(progressEdits);\n\t\t\t}\n\t\t}, { async: true });\n\t\tconst task = this._activeSession.provider.provideResponse(this._activeSession.session, request, progress, requestCts.token);\n\t\tthis._log('request started', this._activeSession.provider.debugName, this._activeSession.session, request);\n\n\t\tlet response: EditResponse | MarkdownResponse | ErrorResponse | EmptyResponse;\n\t\tlet reply: IInlineChatResponse | null | undefined;\n\t\ttry {\n\t\t\tthis._zone.value.widget.updateProgress(true);\n\t\t\tthis._zone.value.widget.updateInfo(!this._activeSession.lastExchange ? localize('thinking', \"Thinking\\u2026\") : '');\n\t\t\tthis._ctxHasActiveRequest.set(true);\n\t\t\treply = await raceCancellationError(Promise.resolve(task), requestCts.token);\n\n\t\t\tif (reply?.type === InlineChatResponseType.Message) {\n\t\t\t\tresponse = new MarkdownResponse(this._activeSession.textModelN.uri, reply);\n\t\t\t} else if (reply) {\n\t\t\t\tconst editResponse = new EditResponse(this._activeSession.textModelN.uri, this._activeSession.textModelN.getAlternativeVersionId(), reply, progressEdits);\n\t\t\t\tif (editResponse.allLocalEdits.length > progressEdits.length) {\n\t\t\t\t\tawait this._makeChanges(editResponse.allLocalEdits);\n\t\t\t\t}\n\t\t\t\tresponse = editResponse;\n\t\t\t} else {\n\t\t\t\tresponse = new EmptyResponse();\n\t\t\t}\n\n\t\t} catch (e) {\n\t\t\tresponse = new ErrorResponse(e);\n\n\t\t} finally {\n\t\t\tthis._ctxHasActiveRequest.set(false);\n\t\t\tthis._zone.value.widget.updateProgress(false);\n\t\t\tthis._zone.value.widget.updateInfo('');\n\t\t\tthis._zone.value.widget.updateToolbar(true);\n\t\t\tthis._log('request took', sw.elapsed(), this._activeSession.provider.debugName);\n\n\t\t}\n\n\t\trequestCts.dispose();\n\t\tmsgListener.dispose();\n\t\ttypeListener.dispose();\n\n\t\tthis._activeSession.addExchange(new SessionExchange(this._activeSession.lastInput, response));\n\n\t\tif (message & Message.CANCEL_SESSION) {\n\t\t\treturn State.CANCEL;\n\t\t} else if (message & Message.PAUSE_SESSION) {\n\t\t\treturn State.PAUSE;\n\t\t} else if (message & Message.ACCEPT_SESSION) {\n\t\t\treturn State.ACCEPT;\n\t\t} else {\n\t\t\treturn State.APPLY_RESPONSE;\n\t\t}\n\t}\n\n\tprivate async [State.APPLY_RESPONSE](): Promise<State.SHOW_RESPONSE | State.ACCEPT> {\n\t\tassertType(this._activeSession);\n\t\tassertType(this._strategy);\n\n\t\tconst { response } = this._activeSession.lastExchange!;\n\t\tif (response instanceof EditResponse) {\n\t\t\t// edit response -> complex...\n\t\t\tthis._zone.value.widget.updateMarkdownMessage(undefined);\n\n\t\t\tconst canContinue = this._strategy.checkChanges(response);\n\t\t\tif (!canContinue) {\n\t\t\t\treturn State.ACCEPT;\n\t\t\t}\n\t\t}\n\t\treturn State.SHOW_RESPONSE;\n\t}\n\n\tprivate async _makeChanges(allEdits: TextEdit[][]) {\n\t\tassertType(this._activeSession);\n\t\tassertType(this._strategy);\n\n\t\tif (allEdits.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// diff-changes from model0 -> modelN+1\n\t\tfor (const edits of allEdits) {\n\t\t\tconst textModelNplus1 = this._modelService.createModel(createTextBufferFactoryFromSnapshot(this._activeSession.textModelN.createSnapshot()), null, undefined, true);\n\t\t\ttextModelNplus1.applyEdits(edits.map(TextEdit.asEditOperation));\n\t\t\tconst diff = await this._editorWorkerService.computeDiff(this._activeSession.textModel0.uri, textModelNplus1.uri, { ignoreTrimWhitespace: false, maxComputationTimeMs: 5000, computeMoves: false }, 'advanced');\n\t\t\tthis._activeSession.lastTextModelChanges = diff?.changes ?? [];\n\t\t\ttextModelNplus1.dispose();\n\t\t}\n\n\t\t// make changes from modelN -> modelN+1\n\t\tconst lastEdits = allEdits[allEdits.length - 1];\n\t\tconst moreMinimalEdits = await this._editorWorkerService.computeHumanReadableDiff(this._activeSession.textModelN.uri, lastEdits);\n\t\tconst editOperations = (moreMinimalEdits ?? lastEdits).map(TextEdit.asEditOperation);\n\t\tthis._log('edits from PROVIDER and after making them MORE MINIMAL', this._activeSession.provider.debugName, lastEdits, moreMinimalEdits);\n\n\t\ttry {\n\t\t\tthis._ignoreModelContentChanged = true;\n\t\t\tthis._activeSession.wholeRange.trackEdits(editOperations);\n\t\t\tawait this._strategy.makeChanges(editOperations);\n\t\t\tthis._ctxDidEdit.set(this._activeSession.hasChangedText);\n\t\t} finally {\n\t\t\tthis._ignoreModelContentChanged = false;\n\t\t}\n\t}\n\n\tprivate async [State.SHOW_RESPONSE](): Promise<State.WAIT_FOR_INPUT | State.ACCEPT> {\n\t\tassertType(this._activeSession);\n\t\tassertType(this._strategy);\n\n\t\tconst { response } = this._activeSession.lastExchange!;\n\t\tthis._showWidget(false);\n\n\t\tlet status: string | undefined;\n\n\t\tthis._ctxLastResponseType.set(response instanceof EditResponse || response instanceof MarkdownResponse\n\t\t\t? response.raw.type\n\t\t\t: undefined);\n\n\t\tlet responseTypes: InlineChateResponseTypes | undefined;\n\t\tfor (const { response } of this._activeSession.exchanges) {\n\n\t\t\tconst thisType = response instanceof MarkdownResponse\n\t\t\t\t? InlineChateResponseTypes.OnlyMessages : response instanceof EditResponse\n\t\t\t\t\t? InlineChateResponseTypes.OnlyEdits : undefined;\n\n\t\t\tif (responseTypes === undefined) {\n\t\t\t\tresponseTypes = thisType;\n\t\t\t} else if (responseTypes !== thisType) {\n\t\t\t\tresponseTypes = InlineChateResponseTypes.Mixed;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._ctxResponseTypes.set(responseTypes);\n\t\tthis._ctxDidEdit.set(this._activeSession.hasChangedText);\n\n\t\tif (response instanceof EmptyResponse) {\n\t\t\t// show status message\n\t\t\tstatus = localize('empty', \"No results, please refine your input and try again\");\n\t\t\tthis._zone.value.widget.updateStatus(status, { classes: ['warn'] });\n\t\t\treturn State.WAIT_FOR_INPUT;\n\n\t\t} else if (response instanceof ErrorResponse) {\n\t\t\t// show error\n\t\t\tif (!response.isCancellation) {\n\t\t\t\tstatus = response.message;\n\t\t\t\tthis._zone.value.widget.updateStatus(status, { classes: ['error'] });\n\t\t\t}\n\n\t\t} else if (response instanceof MarkdownResponse) {\n\t\t\t// clear status, show MD message\n\t\t\tconst renderedMarkdown = renderMarkdown(response.raw.message, { inline: true });\n\t\t\tthis._zone.value.widget.updateStatus('');\n\t\t\tthis._zone.value.widget.updateMarkdownMessage(renderedMarkdown.element);\n\t\t\tthis._zone.value.widget.updateToolbar(true);\n\t\t\tconst content = renderedMarkdown.element.textContent;\n\t\t\tif (content) {\n\t\t\t\tstatus = localize('markdownResponseMessage', \"{0}\", content);\n\t\t\t}\n\t\t\tthis._activeSession.lastExpansionState = this._zone.value.widget.expansionState;\n\n\t\t} else if (response instanceof EditResponse) {\n\t\t\t// edit response -> complex...\n\t\t\tthis._zone.value.widget.updateMarkdownMessage(undefined);\n\t\t\tthis._zone.value.widget.updateToolbar(true);\n\n\t\t\tconst canContinue = this._strategy.checkChanges(response);\n\t\t\tif (!canContinue) {\n\t\t\t\treturn State.ACCEPT;\n\t\t\t}\n\t\t\tstatus = this._configurationService.getValue('accessibility.verbosity.inlineChat') === true ? localize('editResponseMessage', \"Use tab to navigate to the diff editor and review proposed changes.\") : '';\n\t\t\tawait this._strategy.renderChanges(response);\n\t\t}\n\t\tthis._chatAccessibilityService.acceptResponse(status);\n\n\t\treturn State.WAIT_FOR_INPUT;\n\t}\n\n\tprivate async [State.PAUSE]() {\n\n\t\tthis._ctxDidEdit.reset();\n\t\tthis._ctxUserDidEdit.reset();\n\t\tthis._ctxLastResponseType.reset();\n\t\tthis._ctxLastFeedbackKind.reset();\n\n\t\tthis._zone.value.hide();\n\n\t\t// Return focus to the editor only if the current focus is within the editor widget\n\t\tif (this._editor.hasWidgetFocus()) {\n\t\t\tthis._editor.focus();\n\t\t}\n\n\n\t\tthis._strategy?.dispose();\n\t\tthis._strategy = undefined;\n\t\tthis._activeSession = undefined;\n\t}\n\n\tprivate async [State.ACCEPT]() {\n\t\tassertType(this._activeSession);\n\t\tassertType(this._strategy);\n\t\tthis._sessionStore.clear();\n\n\t\ttry {\n\t\t\tawait this._strategy.apply();\n\t\t} catch (err) {\n\t\t\tthis._dialogService.error(localize('err.apply', \"Failed to apply changes.\", toErrorMessage(err)));\n\t\t\tthis._log('FAILED to apply changes');\n\t\t\tthis._log(err);\n\t\t}\n\n\t\tthis._inlineChatSessionService.releaseSession(this._activeSession);\n\n\t\tthis[State.PAUSE]();\n\t}\n\n\tprivate async [State.CANCEL]() {\n\t\tassertType(this._activeSession);\n\t\tassertType(this._strategy);\n\t\tthis._sessionStore.clear();\n\n\t\tconst mySession = this._activeSession;\n\n\t\ttry {\n\t\t\tawait this._strategy.cancel();\n\t\t} catch (err) {\n\t\t\tthis._dialogService.error(localize('err.discard', \"Failed to discard changes.\", toErrorMessage(err)));\n\t\t\tthis._log('FAILED to discard changes');\n\t\t\tthis._log(err);\n\t\t}\n\n\t\tthis[State.PAUSE]();\n\n\t\tthis._stashedSession.clear();\n\t\tif (!mySession.isUnstashed && mySession.lastExchange) {\n\t\t\t// only stash sessions that had edits\n\t\t\tthis._stashedSession.value = this._instaService.createInstance(StashedSession, this._editor, mySession);\n\t\t} else {\n\t\t\tthis._inlineChatSessionService.releaseSession(mySession);\n\t\t}\n\t}\n\n\tprivate static isEditOrMarkdownResponse(response: EditResponse | MarkdownResponse | EmptyResponse | ErrorResponse | undefined): response is EditResponse | MarkdownResponse {\n\t\treturn response instanceof EditResponse || response instanceof MarkdownResponse;\n\t}\n\n\t// ---- controller API\n\n\tacceptInput(): void {\n\t\tthis._messages.fire(Message.ACCEPT_INPUT);\n\t}\n\n\tupdateInput(text: string): void {\n\t\tthis._zone.value.widget.value = text;\n\t\tthis._zone.value.widget.selectAll();\n\t}\n\n\tregenerate(): void {\n\t\tthis._messages.fire(Message.RERUN_INPUT);\n\t}\n\n\tcancelCurrentRequest(): void {\n\t\tthis._messages.fire(Message.CANCEL_INPUT | Message.CANCEL_REQUEST);\n\t}\n\n\tarrowOut(up: boolean): void {\n\t\tif (this._zone.value.position && this._editor.hasModel()) {\n\t\t\tconst { column } = this._editor.getPosition();\n\t\t\tconst { lineNumber } = this._zone.value.position;\n\t\t\tconst newLine = up ? lineNumber : lineNumber + 1;\n\t\t\tthis._editor.setPosition({ lineNumber: newLine, column });\n\t\t\tthis._editor.focus();\n\t\t}\n\t}\n\n\tfocus(): void {\n\t\tthis._zone.value.widget.focus();\n\t}\n\n\thasFocus(): boolean {\n\t\treturn this._zone.value.widget.hasFocus();\n\t}\n\n\tpopulateHistory(up: boolean) {\n\t\tconst len = InlineChatController._promptHistory.length;\n\t\tif (len === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst pos = (len + this._historyOffset + (up ? 1 : -1)) % len;\n\t\tconst entry = InlineChatController._promptHistory[pos];\n\n\t\tthis._zone.value.widget.value = entry;\n\t\tthis._zone.value.widget.selectAll();\n\t\tthis._historyOffset = pos;\n\t}\n\n\tviewInChat() {\n\t\tif (this._activeSession?.lastExchange?.response instanceof MarkdownResponse) {\n\t\t\tthis._instaService.invokeFunction(showMessageResponse, this._activeSession.lastExchange.prompt.value, this._activeSession.lastExchange.response.raw.message.value);\n\t\t}\n\t}\n\n\tupdateExpansionState(expand: boolean) {\n\t\tif (this._activeSession) {\n\t\t\tconst expansionState = expand ? ExpansionState.EXPANDED : ExpansionState.CROPPED;\n\t\t\tthis._zone.value.widget.updateMarkdownMessageExpansionState(expansionState);\n\t\t\tthis._activeSession.lastExpansionState = expansionState;\n\t\t}\n\t}\n\n\tfeedbackLast(helpful: boolean) {\n\t\tif (this._activeSession?.lastExchange && InlineChatController.isEditOrMarkdownResponse(this._activeSession.lastExchange.response)) {\n\t\t\tconst kind = helpful ? InlineChatResponseFeedbackKind.Helpful : InlineChatResponseFeedbackKind.Unhelpful;\n\t\t\tthis._activeSession.provider.handleInlineChatResponseFeedback?.(this._activeSession.session, this._activeSession.lastExchange.response.raw, kind);\n\t\t\tthis._ctxLastFeedbackKind.set(helpful ? 'helpful' : 'unhelpful');\n\t\t\tthis._zone.value.widget.updateStatus('Thank you for your feedback!', { resetAfter: 1250 });\n\t\t}\n\t}\n\n\tcreateSnapshot(): void {\n\t\tif (this._activeSession && !this._activeSession.textModel0.equalsTextBuffer(this._activeSession.textModelN.getTextBuffer())) {\n\t\t\tthis._activeSession.createSnapshot();\n\t\t}\n\t}\n\n\tacceptSession(): void {\n\t\tif (this._activeSession?.lastExchange && InlineChatController.isEditOrMarkdownResponse(this._activeSession.lastExchange.response)) {\n\t\t\tthis._activeSession.provider.handleInlineChatResponseFeedback?.(this._activeSession.session, this._activeSession.lastExchange.response.raw, InlineChatResponseFeedbackKind.Accepted);\n\t\t}\n\t\tthis._messages.fire(Message.ACCEPT_SESSION);\n\t}\n\n\tcancelSession() {\n\t\tconst result = this._activeSession?.asChangedText();\n\t\tif (this._activeSession?.lastExchange && InlineChatController.isEditOrMarkdownResponse(this._activeSession.lastExchange.response)) {\n\t\t\tthis._activeSession.provider.handleInlineChatResponseFeedback?.(this._activeSession.session, this._activeSession.lastExchange.response.raw, InlineChatResponseFeedbackKind.Undone);\n\t\t}\n\t\tthis._messages.fire(Message.CANCEL_SESSION);\n\t\treturn result;\n\t}\n\n\tfinishExistingSession(): void {\n\t\tif (this._activeSession) {\n\t\t\tif (this._activeSession.editMode === EditMode.Preview) {\n\t\t\t\tthis._log('finishing existing session, using CANCEL', this._activeSession.editMode);\n\t\t\t\tthis.cancelSession();\n\t\t\t} else {\n\t\t\t\tthis._log('finishing existing session, using APPLY', this._activeSession.editMode);\n\t\t\t\tthis.acceptSession();\n\t\t\t}\n\t\t}\n\t}\n\n\tunstashLastSession(): Session | undefined {\n\t\treturn this._stashedSession.value?.unstash();\n\t}\n}\n\n\nclass StashedSession {\n\n\tprivate readonly _listener: IDisposable;\n\tprivate readonly _ctxHasStashedSession: IContextKey<boolean>;\n\tprivate _session: Session | undefined;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tsession: Session,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IInlineChatSessionService private readonly _sessionService: IInlineChatSessionService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis._ctxHasStashedSession = CTX_INLINE_CHAT_HAS_STASHED_SESSION.bindTo(contextKeyService);\n\n\t\t// keep session for a little bit, only release when user continues to work (type, move cursor, etc.)\n\t\tthis._session = session;\n\t\tthis._ctxHasStashedSession.set(true);\n\t\tthis._listener = Event.once(Event.any(editor.onDidChangeCursorSelection, editor.onDidChangeModelContent, editor.onDidChangeModel))(() => {\n\t\t\tthis._session = undefined;\n\t\t\tthis._sessionService.releaseSession(session);\n\t\t\tthis._ctxHasStashedSession.reset();\n\t\t});\n\t}\n\n\tdispose() {\n\t\tthis._listener.dispose();\n\t\tthis._ctxHasStashedSession.reset();\n\t\tif (this._session) {\n\t\t\tthis._sessionService.releaseSession(this._session);\n\t\t}\n\t}\n\n\tunstash(): Session | undefined {\n\t\tif (!this._session) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._listener.dispose();\n\t\tconst result = this._session;\n\t\tresult.markUnstashed();\n\t\tthis._session = undefined;\n\t\tthis._logService.debug('[IE] Unstashed session');\n\t\treturn result;\n\t}\n\n}\n\nasync function showMessageResponse(accessor: ServicesAccessor, query: string, response: string) {\n\tconst chatService = accessor.get(IChatService);\n\tconst providerId = chatService.getProviderInfos()[0]?.id;\n\n\tconst chatWidgetService = accessor.get(IChatWidgetService);\n\tconst widget = await chatWidgetService.revealViewForProvider(providerId);\n\tif (widget && widget.viewModel) {\n\t\tchatService.addCompleteRequest(widget.viewModel.sessionId, query, { message: response });\n\t\twidget.focusLastMessage();\n\t}\n}\n\nasync function sendRequest(accessor: ServicesAccessor, query: string) {\n\tconst chatService = accessor.get(IChatService);\n\tconst widgetService = accessor.get(IChatWidgetService);\n\n\tconst providerId = chatService.getProviderInfos()[0]?.id;\n\tconst widget = await widgetService.revealViewForProvider(providerId);\n\tif (!widget) {\n\t\treturn;\n\t}\n\n\twidget.acceptInput(query);\n}\n"]}