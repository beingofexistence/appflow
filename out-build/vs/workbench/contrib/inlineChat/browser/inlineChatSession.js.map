{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/inlineChat/browser/inlineChatSession.ts"],"names":[],"mappings":"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","file":"inlineChatSession.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { ResourceEdit, ResourceFileEdit, ResourceTextEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { TextEdit } from 'vs/editor/common/languages';\nimport { IModelDeltaDecoration, ITextModel } from 'vs/editor/common/model';\nimport { EditMode, IInlineChatSessionProvider, IInlineChatSession, IInlineChatBulkEditResponse, IInlineChatEditResponse, IInlineChatMessageResponse, IInlineChatResponse, IInlineChatService } from 'vs/workbench/contrib/inlineChat/common/inlineChat';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { IActiveCodeEditor, ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { createTextBufferFactoryFromSnapshot } from 'vs/editor/common/model/textModel';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { isCancellationError } from 'vs/base/common/errors';\nimport { DetailedLineRangeMapping } from 'vs/editor/common/diff/rangeMapping';\nimport { ISingleEditOperation } from 'vs/editor/common/core/editOperation';\nimport { raceCancellation } from 'vs/base/common/async';\n\nexport type Recording = {\n\twhen: Date;\n\tsession: IInlineChatSession;\n\texchanges: { prompt: string; res: IInlineChatResponse }[];\n};\n\ntype TelemetryData = {\n\textension: string;\n\trounds: string;\n\tundos: string;\n\tedits: boolean;\n\tfinishedByEdit: boolean;\n\tstartTime: string;\n\tendTime: string;\n\teditMode: string;\n};\n\ntype TelemetryDataClassification = {\n\towner: 'jrieken';\n\tcomment: 'Data about an interaction editor session';\n\textension: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The extension providing the data' };\n\trounds: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Number of request that were made' };\n\tundos: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Requests that have been undone' };\n\tedits: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Did edits happen while the session was active' };\n\tfinishedByEdit: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; isMeasurement: true; comment: 'Did edits cause the session to terminate' };\n\tstartTime: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'When the session started' };\n\tendTime: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'When the session ended' };\n\teditMode: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'What edit mode was choosen: live, livePreview, preview' };\n};\n\nexport enum ExpansionState {\n\tEXPANDED = 'expanded',\n\tCROPPED = 'cropped',\n\tNOT_CROPPED = 'not_cropped'\n}\n\nclass SessionWholeRange {\n\n\tprivate static readonly _options = { description: 'inlineChat/session/wholeRange' };\n\n\tprivate readonly _onDidChange = new Emitter<this>();\n\treadonly onDidChange: Event<this> = this._onDidChange.event;\n\n\tprivate readonly _decorationIds: string[] = [];\n\n\tconstructor(private readonly _textModel: ITextModel, wholeRange: IRange) {\n\t\tthis._decorationIds = _textModel.deltaDecorations([], [{ range: wholeRange, options: SessionWholeRange._options }]);\n\t}\n\n\tdispose() {\n\t\tthis._onDidChange.dispose();\n\t\tif (!this._textModel.isDisposed()) {\n\t\t\tthis._textModel.deltaDecorations(this._decorationIds, []);\n\t\t}\n\t}\n\n\ttrackEdits(edits: ISingleEditOperation[]): void {\n\t\tconst newDeco: IModelDeltaDecoration[] = [];\n\t\tfor (const edit of edits) {\n\t\t\tnewDeco.push({ range: edit.range, options: SessionWholeRange._options });\n\t\t}\n\t\tthis._decorationIds.push(...this._textModel.deltaDecorations([], newDeco));\n\t\tthis._onDidChange.fire(this);\n\t}\n\n\tget value(): Range {\n\t\tlet result: Range | undefined;\n\t\tfor (const id of this._decorationIds) {\n\t\t\tconst range = this._textModel.getDecorationRange(id);\n\t\t\tif (range) {\n\t\t\t\tif (!result) {\n\t\t\t\t\tresult = range;\n\t\t\t\t} else {\n\t\t\t\t\tresult = Range.plusRange(result, range);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result!;\n\t}\n}\n\nexport class Session {\n\n\tprivate _lastInput: SessionPrompt | undefined;\n\tprivate _lastExpansionState: ExpansionState | undefined;\n\tprivate _lastTextModelChanges: readonly DetailedLineRangeMapping[] | undefined;\n\tprivate _isUnstashed: boolean = false;\n\tprivate readonly _exchange: SessionExchange[] = [];\n\tprivate readonly _startTime = new Date();\n\tprivate readonly _teldata: Partial<TelemetryData>;\n\n\treadonly textModelNAltVersion: number;\n\tprivate _textModelNSnapshotAltVersion: number | undefined;\n\n\tconstructor(\n\t\treadonly editMode: EditMode,\n\t\treadonly editor: ICodeEditor,\n\t\treadonly textModel0: ITextModel,\n\t\treadonly textModelN: ITextModel,\n\t\treadonly provider: IInlineChatSessionProvider,\n\t\treadonly session: IInlineChatSession,\n\t\treadonly wholeRange: SessionWholeRange\n\t) {\n\t\tthis.textModelNAltVersion = textModelN.getAlternativeVersionId();\n\t\tthis._teldata = {\n\t\t\textension: provider.debugName,\n\t\t\tstartTime: this._startTime.toISOString(),\n\t\t\tedits: false,\n\t\t\trounds: '',\n\t\t\tundos: '',\n\t\t\teditMode\n\t\t};\n\t}\n\n\taddInput(input: SessionPrompt): void {\n\t\tthis._lastInput = input;\n\t}\n\n\tget lastInput() {\n\t\treturn this._lastInput;\n\t}\n\n\tget isUnstashed(): boolean {\n\t\treturn this._isUnstashed;\n\t}\n\n\tmarkUnstashed() {\n\t\tthis._isUnstashed = true;\n\t}\n\n\tget lastExpansionState(): ExpansionState | undefined {\n\t\treturn this._lastExpansionState;\n\t}\n\n\tset lastExpansionState(state: ExpansionState) {\n\t\tthis._lastExpansionState = state;\n\t}\n\n\tget textModelNSnapshotAltVersion(): number | undefined {\n\t\treturn this._textModelNSnapshotAltVersion;\n\t}\n\n\tcreateSnapshot(): void {\n\t\tthis._textModelNSnapshotAltVersion = this.textModelN.getAlternativeVersionId();\n\t}\n\n\taddExchange(exchange: SessionExchange): void {\n\t\tthis._isUnstashed = false;\n\t\tconst newLen = this._exchange.push(exchange);\n\t\tthis._teldata.rounds += `${newLen}|`;\n\t}\n\n\tget exchanges(): Iterable<SessionExchange> {\n\t\treturn this._exchange;\n\t}\n\n\tget lastExchange(): SessionExchange | undefined {\n\t\treturn this._exchange[this._exchange.length - 1];\n\t}\n\n\tget lastTextModelChanges() {\n\t\treturn this._lastTextModelChanges ?? [];\n\t}\n\n\tset lastTextModelChanges(changes: readonly DetailedLineRangeMapping[]) {\n\t\tthis._lastTextModelChanges = changes;\n\t}\n\n\tget hasChangedText(): boolean {\n\t\treturn !this.textModel0.equalsTextBuffer(this.textModelN.getTextBuffer());\n\t}\n\n\tasChangedText(): string | undefined {\n\t\tif (!this._lastTextModelChanges || this._lastTextModelChanges.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet startLine = Number.MAX_VALUE;\n\t\tlet endLine = Number.MIN_VALUE;\n\t\tfor (const change of this._lastTextModelChanges) {\n\t\t\tstartLine = Math.min(startLine, change.modified.startLineNumber);\n\t\t\tendLine = Math.max(endLine, change.modified.endLineNumberExclusive);\n\t\t}\n\n\t\treturn this.textModelN.getValueInRange(new Range(startLine, 1, endLine, Number.MAX_VALUE));\n\t}\n\n\trecordExternalEditOccurred(didFinish: boolean) {\n\t\tthis._teldata.edits = true;\n\t\tthis._teldata.finishedByEdit = didFinish;\n\t}\n\n\tasTelemetryData(): TelemetryData {\n\t\treturn <TelemetryData>{\n\t\t\t...this._teldata,\n\t\t\tendTime: new Date().toISOString(),\n\t\t};\n\t}\n\n\tasRecording(): Recording {\n\t\tconst result: Recording = {\n\t\t\tsession: this.session,\n\t\t\twhen: this._startTime,\n\t\t\texchanges: []\n\t\t};\n\t\tfor (const exchange of this._exchange) {\n\t\t\tconst response = exchange.response;\n\t\t\tif (response instanceof MarkdownResponse || response instanceof EditResponse) {\n\t\t\t\tresult.exchanges.push({ prompt: exchange.prompt.value, res: response.raw });\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\n\nexport class SessionPrompt {\n\n\tprivate _attempt: number = 0;\n\n\tconstructor(\n\t\treadonly value: string,\n\t) { }\n\n\tget attempt() {\n\t\treturn this._attempt;\n\t}\n\n\tretry() {\n\t\tconst result = new SessionPrompt(this.value);\n\t\tresult._attempt = this._attempt + 1;\n\t\treturn result;\n\t}\n}\n\nexport class SessionExchange {\n\n\tconstructor(\n\t\treadonly prompt: SessionPrompt,\n\t\treadonly response: MarkdownResponse | EditResponse | EmptyResponse | ErrorResponse\n\t) { }\n}\n\nexport class EmptyResponse {\n\n}\n\nexport class ErrorResponse {\n\n\treadonly message: string;\n\treadonly isCancellation: boolean;\n\n\tconstructor(\n\t\treadonly error: any\n\t) {\n\t\tthis.message = toErrorMessage(error, false);\n\t\tthis.isCancellation = isCancellationError(error);\n\t}\n}\n\nexport class MarkdownResponse {\n\tconstructor(\n\t\treadonly localUri: URI,\n\t\treadonly raw: IInlineChatMessageResponse\n\t) { }\n}\n\nexport class EditResponse {\n\n\treadonly allLocalEdits: TextEdit[][] = [];\n\treadonly singleCreateFileEdit: { uri: URI; edits: Promise<TextEdit>[] } | undefined;\n\treadonly workspaceEdits: ResourceEdit[] | undefined;\n\treadonly workspaceEditsIncludeLocalEdits: boolean = false;\n\n\tconstructor(\n\t\tlocalUri: URI,\n\t\treadonly modelAltVersionId: number,\n\t\treadonly raw: IInlineChatBulkEditResponse | IInlineChatEditResponse,\n\t\tprogressEdits: TextEdit[][],\n\t) {\n\n\t\tthis.allLocalEdits.push(...progressEdits);\n\n\t\tif (raw.type === 'editorEdit') {\n\t\t\t//\n\t\t\tthis.allLocalEdits.push(raw.edits);\n\t\t\tthis.singleCreateFileEdit = undefined;\n\t\t\tthis.workspaceEdits = undefined;\n\n\t\t} else {\n\t\t\t//\n\t\t\tconst edits = ResourceEdit.convert(raw.edits);\n\t\t\tthis.workspaceEdits = edits;\n\n\t\t\tlet isComplexEdit = false;\n\t\t\tconst localEdits: TextEdit[] = [];\n\n\t\t\tfor (const edit of edits) {\n\t\t\t\tif (edit instanceof ResourceFileEdit) {\n\t\t\t\t\tif (!isComplexEdit && edit.newResource && !edit.oldResource) {\n\t\t\t\t\t\t// file create\n\t\t\t\t\t\tif (this.singleCreateFileEdit) {\n\t\t\t\t\t\t\tisComplexEdit = true;\n\t\t\t\t\t\t\tthis.singleCreateFileEdit = undefined;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.singleCreateFileEdit = { uri: edit.newResource, edits: [] };\n\t\t\t\t\t\t\tif (edit.options.contents) {\n\t\t\t\t\t\t\t\tthis.singleCreateFileEdit.edits.push(edit.options.contents.then(x => ({ range: new Range(1, 1, 1, 1), text: x.toString() })));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (edit instanceof ResourceTextEdit) {\n\t\t\t\t\t//\n\t\t\t\t\tif (isEqual(edit.resource, localUri)) {\n\t\t\t\t\t\tlocalEdits.push(edit.textEdit);\n\t\t\t\t\t\tthis.workspaceEditsIncludeLocalEdits = true;\n\n\t\t\t\t\t} else if (isEqual(this.singleCreateFileEdit?.uri, edit.resource)) {\n\t\t\t\t\t\tthis.singleCreateFileEdit!.edits.push(Promise.resolve(edit.textEdit));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisComplexEdit = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (localEdits.length > 0) {\n\t\t\t\tthis.allLocalEdits.push(localEdits);\n\t\t\t}\n\t\t\tif (isComplexEdit) {\n\t\t\t\tthis.singleCreateFileEdit = undefined;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface ISessionKeyComputer {\n\tgetComparisonKey(editor: ICodeEditor, uri: URI): string;\n}\n\nexport const IInlineChatSessionService = createDecorator<IInlineChatSessionService>('IInlineChatSessionService');\n\nexport interface IInlineChatSessionService {\n\t_serviceBrand: undefined;\n\n\tonWillStartSession: Event<IActiveCodeEditor>;\n\n\tonDidEndSession: Event<ICodeEditor>;\n\n\tcreateSession(editor: IActiveCodeEditor, options: { editMode: EditMode; wholeRange?: IRange }, token: CancellationToken): Promise<Session | undefined>;\n\n\tgetSession(editor: ICodeEditor, uri: URI): Session | undefined;\n\n\treleaseSession(session: Session): void;\n\n\tregisterSessionKeyComputer(scheme: string, value: ISessionKeyComputer): IDisposable;\n\n\t//\n\n\trecordings(): readonly Recording[];\n\n\tdispose(): void;\n}\n\ntype SessionData = {\n\tsession: Session;\n\tstore: IDisposable;\n};\n\nexport class InlineChatSessionService implements IInlineChatSessionService {\n\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _onWillStartSession = new Emitter<IActiveCodeEditor>();\n\treadonly onWillStartSession: Event<IActiveCodeEditor> = this._onWillStartSession.event;\n\n\tprivate readonly _onDidEndSession = new Emitter<ICodeEditor>();\n\treadonly onDidEndSession: Event<ICodeEditor> = this._onDidEndSession.event;\n\n\tprivate readonly _sessions = new Map<string, SessionData>();\n\tprivate readonly _keyComputers = new Map<string, ISessionKeyComputer>();\n\tprivate _recordings: Recording[] = [];\n\n\tconstructor(\n\t\t@IInlineChatService private readonly _inlineChatService: IInlineChatService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ITextModelService private readonly _textModelService: ITextModelService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) { }\n\n\tdispose() {\n\t\tthis._onWillStartSession.dispose();\n\t\tthis._onDidEndSession.dispose();\n\t\tthis._sessions.forEach(x => x.store.dispose());\n\t\tthis._sessions.clear();\n\t}\n\n\tasync createSession(editor: IActiveCodeEditor, options: { editMode: EditMode; wholeRange?: Range }, token: CancellationToken): Promise<Session | undefined> {\n\n\t\tconst provider = Iterable.first(this._inlineChatService.getAllProvider());\n\t\tif (!provider) {\n\t\t\tthis._logService.trace('[IE] NO provider found');\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._onWillStartSession.fire(editor);\n\n\t\tconst textModel = editor.getModel();\n\t\tconst selection = editor.getSelection();\n\t\tlet raw: IInlineChatSession | undefined | null;\n\t\ttry {\n\t\t\traw = await raceCancellation(\n\t\t\t\tPromise.resolve(provider.prepareInlineChatSession(textModel, selection, token)),\n\t\t\t\ttoken\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tthis._logService.error('[IE] FAILED to prepare session', provider.debugName);\n\t\t\tthis._logService.error(error);\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!raw) {\n\t\t\tthis._logService.trace('[IE] NO session', provider.debugName);\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._logService.trace('[IE] NEW session', provider.debugName);\n\n\t\tthis._logService.trace(`[IE] creating NEW session for ${editor.getId()},  ${provider.debugName}`);\n\t\tconst store = new DisposableStore();\n\n\t\t// create: keep a reference to prevent disposal of the \"actual\" model\n\t\tconst refTextModelN = await this._textModelService.createModelReference(textModel.uri);\n\t\tstore.add(refTextModelN);\n\n\t\t// create: keep a snapshot of the \"actual\" model\n\t\tconst textModel0 = this._modelService.createModel(\n\t\t\tcreateTextBufferFactoryFromSnapshot(textModel.createSnapshot()),\n\t\t\t{ languageId: textModel.getLanguageId(), onDidChange: Event.None },\n\t\t\tundefined, true\n\t\t);\n\t\tstore.add(textModel0);\n\n\t\tlet wholeRange = options.wholeRange;\n\t\tif (!wholeRange) {\n\t\t\twholeRange = raw.wholeRange ? Range.lift(raw.wholeRange) : editor.getSelection();\n\t\t}\n\n\t\t// expand to whole lines\n\t\twholeRange = new Range(wholeRange.startLineNumber, 1, wholeRange.endLineNumber, textModel.getLineMaxColumn(wholeRange.endLineNumber));\n\n\t\t// install managed-marker for the decoration range\n\t\tconst wholeRangeMgr = new SessionWholeRange(textModel, wholeRange);\n\t\tstore.add(wholeRangeMgr);\n\n\t\tconst session = new Session(options.editMode, editor, textModel0, textModel, provider, raw, wholeRangeMgr);\n\n\t\t// store: key -> session\n\t\tconst key = this._key(editor, textModel.uri);\n\t\tif (this._sessions.has(key)) {\n\t\t\tstore.dispose();\n\t\t\tthrow new Error(`Session already stored for ${key}`);\n\t\t}\n\t\tthis._sessions.set(key, { session, store });\n\t\treturn session;\n\t}\n\n\treleaseSession(session: Session): void {\n\n\t\tconst { editor } = session;\n\n\t\t// cleanup\n\t\tfor (const [key, value] of this._sessions) {\n\t\t\tif (value.session === session) {\n\t\t\t\tvalue.store.dispose();\n\t\t\t\tthis._sessions.delete(key);\n\t\t\t\tthis._logService.trace(`[IE] did RELEASED session for ${editor.getId()}, ${session.provider.debugName}`);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// keep recording\n\t\tconst newLen = this._recordings.unshift(session.asRecording());\n\t\tif (newLen > 5) {\n\t\t\tthis._recordings.pop();\n\t\t}\n\n\t\t// send telemetry\n\t\tthis._telemetryService.publicLog2<TelemetryData, TelemetryDataClassification>('interactiveEditor/session', session.asTelemetryData());\n\n\t\tthis._onDidEndSession.fire(editor);\n\t}\n\n\tgetSession(editor: ICodeEditor, uri: URI): Session | undefined {\n\t\tconst key = this._key(editor, uri);\n\t\treturn this._sessions.get(key)?.session;\n\t}\n\n\tprivate _key(editor: ICodeEditor, uri: URI): string {\n\t\tconst item = this._keyComputers.get(uri.scheme);\n\t\treturn item\n\t\t\t? item.getComparisonKey(editor, uri)\n\t\t\t: `${editor.getId()}@${uri.toString()}`;\n\n\t}\n\n\tregisterSessionKeyComputer(scheme: string, value: ISessionKeyComputer): IDisposable {\n\t\tthis._keyComputers.set(scheme, value);\n\t\treturn toDisposable(() => this._keyComputers.delete(scheme));\n\t}\n\n\t// --- debug\n\n\trecordings(): readonly Recording[] {\n\t\treturn this._recordings;\n\t}\n\n}\n"]}