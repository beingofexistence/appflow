{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/sash/browser/sash.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IASnF,QAAA,IAAI,GAAM,CAAC,CAAC;IACZ,QAAA,IAAI,GAAM,EAAE,CAAC,CAAC,qHAAqH;IAEzI,IAAM,IAAI,GAAV,MAAM,IAAI;QAIhB,YACwB,CAA0C;YAAzB,MAAC,GAAD,CAAC,CAAwB;YAHjD,MAAC,GAAa,IAAI,eAAG,EAAc,CAAC;YAKpD,MAAM,eAAe,GAAG,aAAK,CAAC,MAAM,CAAC,CAAC,CAAoB,wBAAwB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAC,CAAC;YACxI,eAAe,CAAC,IAAI,CAAC,CAAC,EAAgB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAW,CAAC;YAC9D,IAAI,CAAC,CAAC,EAAgB,CAAC;YAEvB,MAAM,qBAAqB,GAAG,aAAK,CAAC,MAAM,CAAC,CAAC,CAAoB,wBAAwB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACpJ,qBAAqB,CAAC,IAAI,CAAC,CAAC,EAAsB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAW,CAAC;YAC1E,IAAI,CAAC,CAAC,EAAsB,CAAC;QAC9B,CAAC;QAEO,CAAC;YACR,MAAM,cAAc,GAAG,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAS,qBAAqB,CAAC,CAAC;YACzF,MAAM,IAAI,GAAG,IAAA,aAAG,EAAG,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAC1C,MAAM,SAAS,GAAG,IAAA,aAAG,EAAG,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAE9C,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,oBAAoB,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;YAC9E,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,0BAA0B,EAAE,SAAS,GAAG,IAAI,CAAC,CAAC;YACzF,IAAA,UAAG,EAAe,IAAI,CAAC,CAAC;QACzB,CAAC;QAEO,CAAC;YACR,IAAA,UAAG,EAAiB,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAS,2BAA2B,CAAC,CAAC,CAAC;QAC9F,CAAC;QAED,OAAO;YACN,IAAI,CAAC,CAAC,CAAW,OAAO,EAAE,CAAC;QAC5B,CAAC;KACD,CAAA;IAjCY,oBAAI;mBAAJ,IAAI;QAKd,WAAA,mBAAG,CAAA;OALO,IAAI,CAiChB","file":"sash.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { clamp } from 'vs/base/common/numbers';\nimport { setGlobalSashSize, setGlobalHoverDelay } from 'vs/base/browser/ui/sash/sash';\nimport { Event } from 'vs/base/common/event';\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\n\nexport const minSize = 1;\nexport const maxSize = 20; // see also https://ux.stackexchange.com/questions/39023/what-is-the-optimum-button-size-of-touch-screen-applications\n\nexport class SashSettingsController implements IWorkbenchContribution, IDisposable {\n\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tconst onDidChangeSize = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('workbench.sash.size'));\n\t\tonDidChangeSize(this.onDidChangeSize, this, this.disposables);\n\t\tthis.onDidChangeSize();\n\n\t\tconst onDidChangeHoverDelay = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('workbench.sash.hoverDelay'));\n\t\tonDidChangeHoverDelay(this.onDidChangeHoverDelay, this, this.disposables);\n\t\tthis.onDidChangeHoverDelay();\n\t}\n\n\tprivate onDidChangeSize(): void {\n\t\tconst configuredSize = this.configurationService.getValue<number>('workbench.sash.size');\n\t\tconst size = clamp(configuredSize, 4, 20);\n\t\tconst hoverSize = clamp(configuredSize, 1, 8);\n\n\t\tdocument.documentElement.style.setProperty('--vscode-sash-size', size + 'px');\n\t\tdocument.documentElement.style.setProperty('--vscode-sash-hover-size', hoverSize + 'px');\n\t\tsetGlobalSashSize(size);\n\t}\n\n\tprivate onDidChangeHoverDelay(): void {\n\t\tsetGlobalHoverDelay(this.configurationService.getValue<number>('workbench.sash.hoverDelay'));\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n"]}