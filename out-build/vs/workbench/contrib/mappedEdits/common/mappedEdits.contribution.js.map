{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/mappedEdits/common/mappedEdits.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAUhG,cAAG,CAAc,eAAe,CAC/B,6BAA6B,EAC7B,KAAK,EACJ,QAA0B,EAC1B,WAAgB,EAChB,UAAoB,EACpB,OAAqC,EACK,EAAE;QAE5C,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,qBAAG,CAAe,CAAC;QACrD,MAAM,mBAAmB,GAAG,QAAQ,CAAC,GAAG,CAAC,sBAAG,CAAsB,CAAC;QAEnE,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;QAEtE,IAAI,MAAM,GAAmC,IAAI,CAAC;QAElD,IAAI;YACH,MAAM,SAAS,GAAG,mBAAmB,CAAC,mBAAmB,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YAEnG,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzB,MAAM,oBAAoB,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBAE1C,MAAM,uBAAuB,GAAG,IAAI,kBAAG,EAAsB,CAAC;gBAE9D,MAAM,GAAG,MAAM,oBAAoB,CAAC,kBAAkB,CACrD,QAAQ,CAAC,MAAM,CAAC,eAAe,EAC/B,UAAU,EACV,OAAO,EACP,uBAAuB,CAAC,KAAK,CAC7B,CAAC;aACF;SACD;gBAAS;YACT,QAAQ,CAAC,OAAO,EAAE,CAAC;SACnB;QAED,OAAO,MAAM,CAAC;IACf,CAAC,CACD,CAAC","file":"mappedEdits.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport * as languages from 'vs/editor/common/languages';\n\nCommandsRegistry.registerCommand(\n\t'_executeMappedEditsProvider',\n\tasync (\n\t\taccessor: ServicesAccessor,\n\t\tdocumentUri: URI,\n\t\tcodeBlocks: string[],\n\t\tcontext: languages.MappedEditsContext\n\t): Promise<languages.WorkspaceEdit | null> => {\n\n\t\tconst modelService = accessor.get(ITextModelService);\n\t\tconst langFeaturesService = accessor.get(ILanguageFeaturesService);\n\n\t\tconst document = await modelService.createModelReference(documentUri);\n\n\t\tlet result: languages.WorkspaceEdit | null = null;\n\n\t\ttry {\n\t\t\tconst providers = langFeaturesService.mappedEditsProvider.ordered(document.object.textEditorModel);\n\n\t\t\tif (providers.length > 0) {\n\t\t\t\tconst mostRelevantProvider = providers[0];\n\n\t\t\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\n\t\t\t\tresult = await mostRelevantProvider.provideMappedEdits(\n\t\t\t\t\tdocument.object.textEditorModel,\n\t\t\t\t\tcodeBlocks,\n\t\t\t\t\tcontext,\n\t\t\t\t\tcancellationTokenSource.token\n\t\t\t\t);\n\t\t\t}\n\t\t} finally {\n\t\t\tdocument.dispose();\n\t\t}\n\n\t\treturn result;\n\t}\n);\n"]}