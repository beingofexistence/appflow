{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/codeEditor/browser/suggestEnabledInput/suggestEnabledInput.ts"],"names":[],"mappings":"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","file":"suggestEnabledInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./suggestEnabledInput';\nimport { $, Dimension, append } from 'vs/base/browser/dom';\nimport { Widget } from 'vs/base/browser/ui/widget';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { mixin } from 'vs/base/common/objects';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ITextModel } from 'vs/editor/common/model';\nimport * as languages from 'vs/editor/common/languages';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ContextMenuController } from 'vs/editor/contrib/contextmenu/browser/contextmenu';\nimport { SnippetController2 } from 'vs/editor/contrib/snippet/browser/snippetController2';\nimport { SuggestController } from 'vs/editor/contrib/suggest/browser/suggestController';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ColorIdentifier, asCssVariable, asCssVariableWithDefault, editorSelectionBackground, inputBackground, inputBorder, inputForeground, inputPlaceholderForeground, selectionBackground } from 'vs/platform/theme/common/colorRegistry';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { MenuPreventer } from 'vs/workbench/contrib/codeEditor/browser/menuPreventer';\nimport { getSimpleEditorOptions } from 'vs/workbench/contrib/codeEditor/browser/simpleEditorOptions';\nimport { SelectionClipboardContributionID } from 'vs/workbench/contrib/codeEditor/browser/selectionClipboard';\nimport { EditorExtensionsRegistry } from 'vs/editor/browser/editorExtensions';\nimport { DEFAULT_FONT_FAMILY } from 'vs/workbench/browser/style';\nimport { HistoryNavigator } from 'vs/base/common/history';\nimport { registerAndCreateHistoryNavigationContext, IHistoryNavigationContext } from 'vs/platform/history/browser/contextScopedHistoryWidget';\nimport { IHistoryNavigationWidget } from 'vs/base/browser/history';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { IEditorConstructionOptions } from 'vs/editor/browser/config/editorConfiguration';\nimport { ensureValidWordDefinition, getWordAtText } from 'vs/editor/common/core/wordHelper';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\n\nexport interface SuggestResultsProvider {\n\t/**\n\t * Provider function for suggestion results.\n\t *\n\t * @param query the full text of the input.\n\t */\n\tprovideResults: (query: string) => (Partial<languages.CompletionItem> & ({ label: string }) | string)[];\n\n\t/**\n\t * Trigger characters for this input. Suggestions will appear when one of these is typed,\n\t * or upon `ctrl+space` triggering at a word boundary.\n\t *\n\t * Defaults to the empty array.\n\t */\n\ttriggerCharacters?: string[];\n\n\t/**\n\t * Optional regular expression that describes what a word is\n\t *\n\t * Defaults to space separated words.\n\t */\n\twordDefinition?: RegExp;\n\n\t/**\n\t * Show suggestions even if the trigger character is not present.\n\t *\n\t * Defaults to false.\n\t */\n\talwaysShowSuggestions?: boolean;\n\n\t/**\n\t * Defines the sorting function used when showing results.\n\t *\n\t * Defaults to the identity function.\n\t */\n\tsortKey?: (result: string) => string;\n}\n\ninterface SuggestEnabledInputOptions {\n\t/**\n\t * The text to show when no input is present.\n\t *\n\t * Defaults to the empty string.\n\t */\n\tplaceholderText?: string;\n\n\t/**\n\t * Initial value to be shown\n\t */\n\tvalue?: string;\n\n\t/**\n\t * Context key tracking the focus state of this element\n\t */\n\tfocusContextKey?: IContextKey<boolean>;\n\n\t/**\n\t * Place overflow widgets inside an external DOM node.\n\t * Defaults to an internal DOM node.\n\t */\n\toverflowWidgetsDomNode?: HTMLElement;\n\n\t/**\n\t * Override the default styling of the input.\n\t */\n\tstyleOverrides?: ISuggestEnabledInputStyleOverrides;\n}\n\nexport interface ISuggestEnabledInputStyleOverrides {\n\tinputBackground?: ColorIdentifier;\n\tinputForeground?: ColorIdentifier;\n\tinputBorder?: ColorIdentifier;\n\tinputPlaceholderForeground?: ColorIdentifier;\n}\n\nexport class SuggestEnabledInput extends Widget {\n\n\tprivate readonly _onShouldFocusResults = new Emitter<void>();\n\treadonly onShouldFocusResults: Event<void> = this._onShouldFocusResults.event;\n\n\tprivate readonly _onInputDidChange = new Emitter<string | undefined>();\n\treadonly onInputDidChange: Event<string | undefined> = this._onInputDidChange.event;\n\n\tprivate readonly _onDidFocus = this._register(new Emitter<void>());\n\treadonly onDidFocus = this._onDidFocus.event;\n\n\tprivate readonly _onDidBlur = this._register(new Emitter<void>());\n\treadonly onDidBlur = this._onDidBlur.event;\n\n\treadonly inputWidget: CodeEditorWidget;\n\tprivate readonly inputModel: ITextModel;\n\tprotected stylingContainer: HTMLDivElement;\n\treadonly element: HTMLElement;\n\tprivate placeholderText: HTMLDivElement;\n\n\tconstructor(\n\t\tid: string,\n\t\tparent: HTMLElement,\n\t\tsuggestionProvider: SuggestResultsProvider,\n\t\tariaLabel: string,\n\t\tresourceHandle: string,\n\t\toptions: SuggestEnabledInputOptions,\n\t\t@IInstantiationService defaultInstantiationService: IInstantiationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.stylingContainer = append(parent, $('.suggest-input-container'));\n\t\tthis.element = parent;\n\t\tthis.placeholderText = append(this.stylingContainer, $('.suggest-input-placeholder', undefined, options.placeholderText || ''));\n\n\t\tconst editorOptions: IEditorConstructionOptions = mixin(\n\t\t\tgetSimpleEditorOptions(configurationService),\n\t\t\tgetSuggestEnabledInputOptions(ariaLabel));\n\t\teditorOptions.overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n\n\t\tconst scopedContextKeyService = this.getScopedContextKeyService(contextKeyService);\n\n\t\tconst instantiationService = scopedContextKeyService\n\t\t\t? defaultInstantiationService.createChild(new ServiceCollection([IContextKeyService, scopedContextKeyService]))\n\t\t\t: defaultInstantiationService;\n\n\t\tthis.inputWidget = this._register(instantiationService.createInstance(CodeEditorWidget, this.stylingContainer,\n\t\t\teditorOptions,\n\t\t\t{\n\t\t\t\tcontributions: EditorExtensionsRegistry.getSomeEditorContributions([\n\t\t\t\t\tSuggestController.ID,\n\t\t\t\t\tSnippetController2.ID,\n\t\t\t\t\tContextMenuController.ID,\n\t\t\t\t\tMenuPreventer.ID,\n\t\t\t\t\tSelectionClipboardContributionID,\n\t\t\t\t]),\n\t\t\t\tisSimpleWidget: true,\n\t\t\t}));\n\n\t\tthis._register(configurationService.onDidChangeConfiguration((e) => {\n\t\t\tif (e.affectsConfiguration('editor.accessibilitySupport') ||\n\t\t\t\te.affectsConfiguration('editor.cursorBlinking')) {\n\t\t\t\tconst accessibilitySupport = configurationService.getValue<'auto' | 'off' | 'on'>('editor.accessibilitySupport');\n\t\t\t\tconst cursorBlinking = configurationService.getValue<'blink' | 'smooth' | 'phase' | 'expand' | 'solid'>('editor.cursorBlinking');\n\t\t\t\tthis.inputWidget.updateOptions({\n\t\t\t\t\taccessibilitySupport,\n\t\t\t\t\tcursorBlinking\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.inputWidget.onDidFocusEditorText(() => this._onDidFocus.fire()));\n\t\tthis._register(this.inputWidget.onDidBlurEditorText(() => this._onDidBlur.fire()));\n\n\t\tconst scopeHandle = uri.parse(resourceHandle);\n\t\tthis.inputModel = modelService.createModel('', null, scopeHandle, true);\n\t\tthis._register(this.inputModel);\n\t\tthis.inputWidget.setModel(this.inputModel);\n\n\t\tthis._register(this.inputWidget.onDidPaste(() => this.setValue(this.getValue()))); // setter cleanses\n\n\t\tthis._register((this.inputWidget.onDidFocusEditorText(() => {\n\t\t\tif (options.focusContextKey) { options.focusContextKey.set(true); }\n\t\t\tthis.stylingContainer.classList.add('synthetic-focus');\n\t\t})));\n\t\tthis._register((this.inputWidget.onDidBlurEditorText(() => {\n\t\t\tif (options.focusContextKey) { options.focusContextKey.set(false); }\n\t\t\tthis.stylingContainer.classList.remove('synthetic-focus');\n\t\t})));\n\n\t\tthis._register(Event.chain(this.inputWidget.onKeyDown, $ => $.filter(e => e.keyCode === KeyCode.Enter))(e => { e.preventDefault(); /** Do nothing. Enter causes new line which is not expected. */ }, this));\n\t\tthis._register(Event.chain(this.inputWidget.onKeyDown, $ => $.filter(e => e.keyCode === KeyCode.DownArrow && (isMacintosh ? e.metaKey : e.ctrlKey)))(() => this._onShouldFocusResults.fire(), this));\n\n\t\tlet preexistingContent = this.getValue();\n\t\tconst inputWidgetModel = this.inputWidget.getModel();\n\t\tif (inputWidgetModel) {\n\t\t\tthis._register(inputWidgetModel.onDidChangeContent(() => {\n\t\t\t\tconst content = this.getValue();\n\t\t\t\tthis.placeholderText.style.visibility = content ? 'hidden' : 'visible';\n\t\t\t\tif (preexistingContent.trim() === content.trim()) { return; }\n\t\t\t\tthis._onInputDidChange.fire(undefined);\n\t\t\t\tpreexistingContent = content;\n\t\t\t}));\n\t\t}\n\n\t\tconst validatedSuggestProvider = {\n\t\t\tprovideResults: suggestionProvider.provideResults,\n\t\t\tsortKey: suggestionProvider.sortKey || (a => a),\n\t\t\ttriggerCharacters: suggestionProvider.triggerCharacters || [],\n\t\t\twordDefinition: suggestionProvider.wordDefinition ? ensureValidWordDefinition(suggestionProvider.wordDefinition) : undefined,\n\t\t\talwaysShowSuggestions: !!suggestionProvider.alwaysShowSuggestions,\n\t\t};\n\n\t\tthis.setValue(options.value || '');\n\n\t\tthis._register(languageFeaturesService.completionProvider.register({ scheme: scopeHandle.scheme, pattern: '**/' + scopeHandle.path, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: `suggestEnabledInput/${id}`,\n\t\t\ttriggerCharacters: validatedSuggestProvider.triggerCharacters,\n\t\t\tprovideCompletionItems: (model: ITextModel, position: Position, _context: languages.CompletionContext) => {\n\t\t\t\tconst query = model.getValue();\n\n\t\t\t\tconst zeroIndexedColumn = position.column - 1;\n\t\t\t\tlet alreadyTypedCount = 0, zeroIndexedWordStart = 0;\n\n\t\t\t\tif (validatedSuggestProvider.wordDefinition) {\n\t\t\t\t\tconst wordAtText = getWordAtText(position.column, validatedSuggestProvider.wordDefinition, query, 0);\n\t\t\t\t\talreadyTypedCount = wordAtText?.word.length ?? 0;\n\t\t\t\t\tzeroIndexedWordStart = wordAtText ? wordAtText.startColumn - 1 : 0;\n\t\t\t\t} else {\n\t\t\t\t\tzeroIndexedWordStart = query.lastIndexOf(' ', zeroIndexedColumn - 1) + 1;\n\t\t\t\t\talreadyTypedCount = zeroIndexedColumn - zeroIndexedWordStart;\n\t\t\t\t}\n\n\t\t\t\t// dont show suggestions if the user has typed something, but hasn't used the trigger character\n\t\t\t\tif (!validatedSuggestProvider.alwaysShowSuggestions && alreadyTypedCount > 0 && validatedSuggestProvider.triggerCharacters?.indexOf(query[zeroIndexedWordStart]) === -1) {\n\t\t\t\t\treturn { suggestions: [] };\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsuggestions: suggestionProvider.provideResults(query).map((result): languages.CompletionItem => {\n\t\t\t\t\t\tlet label: string;\n\t\t\t\t\t\tlet rest: Partial<languages.CompletionItem> | undefined;\n\t\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\t\tlabel = result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabel = result.label;\n\t\t\t\t\t\t\trest = result;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\tinsertText: label,\n\t\t\t\t\t\t\trange: Range.fromPositions(position.delta(0, -alreadyTypedCount), position),\n\t\t\t\t\t\t\tsortText: validatedSuggestProvider.sortKey(label),\n\t\t\t\t\t\t\tkind: languages.CompletionItemKind.Keyword,\n\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tthis.style(options.styleOverrides || {});\n\t}\n\n\tprotected getScopedContextKeyService(_contextKeyService: IContextKeyService): IContextKeyService | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic updateAriaLabel(label: string): void {\n\t\tthis.inputWidget.updateOptions({ ariaLabel: label });\n\t}\n\n\tpublic setValue(val: string) {\n\t\tval = val.replace(/\\s/g, ' ');\n\t\tconst fullRange = this.inputModel.getFullModelRange();\n\t\tthis.inputWidget.executeEdits('suggestEnabledInput.setValue', [EditOperation.replace(fullRange, val)]);\n\t\tthis.inputWidget.setScrollTop(0);\n\t\tthis.inputWidget.setPosition(new Position(1, val.length + 1));\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.inputWidget.getValue();\n\t}\n\n\tprivate style(styleOverrides: ISuggestEnabledInputStyleOverrides): void {\n\t\tthis.stylingContainer.style.backgroundColor = asCssVariable(styleOverrides.inputBackground ?? inputBackground);\n\t\tthis.stylingContainer.style.color = asCssVariable(styleOverrides.inputForeground ?? inputForeground);\n\t\tthis.placeholderText.style.color = asCssVariable(styleOverrides.inputPlaceholderForeground ?? inputPlaceholderForeground);\n\t\tthis.stylingContainer.style.borderWidth = '1px';\n\t\tthis.stylingContainer.style.borderStyle = 'solid';\n\t\tthis.stylingContainer.style.borderColor = asCssVariableWithDefault(styleOverrides.inputBorder ?? inputBorder, 'transparent');\n\n\t\tconst cursor = this.stylingContainer.getElementsByClassName('cursor')[0] as HTMLDivElement;\n\t\tif (cursor) {\n\t\t\tcursor.style.backgroundColor = asCssVariable(styleOverrides.inputForeground ?? inputForeground);\n\t\t}\n\t}\n\n\tpublic focus(selectAll?: boolean): void {\n\t\tthis.inputWidget.focus();\n\n\t\tif (selectAll && this.inputWidget.getValue()) {\n\t\t\tthis.selectAll();\n\t\t}\n\t}\n\n\tpublic onHide(): void {\n\t\tthis.inputWidget.onHide();\n\t}\n\n\tpublic layout(dimension: Dimension): void {\n\t\tthis.inputWidget.layout(dimension);\n\t\tthis.placeholderText.style.width = `${dimension.width - 2}px`;\n\t}\n\n\tprivate selectAll(): void {\n\t\tthis.inputWidget.setSelection(new Range(1, 1, 1, this.getValue().length + 1));\n\t}\n}\n\nexport interface ISuggestEnabledHistoryOptions {\n\tid: string;\n\tariaLabel: string;\n\tparent: HTMLElement;\n\tsuggestionProvider: SuggestResultsProvider;\n\tresourceHandle: string;\n\tsuggestOptions: SuggestEnabledInputOptions;\n\thistory: string[];\n}\n\nexport class SuggestEnabledInputWithHistory extends SuggestEnabledInput implements IHistoryNavigationWidget {\n\tprotected readonly history: HistoryNavigator<string>;\n\n\tconstructor(\n\t\t{ id, parent, ariaLabel, suggestionProvider, resourceHandle, suggestOptions, history }: ISuggestEnabledHistoryOptions,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, parent, suggestionProvider, ariaLabel, resourceHandle, suggestOptions, instantiationService, modelService, contextKeyService, languageFeaturesService, configurationService);\n\t\tthis.history = new HistoryNavigator<string>(history, 100);\n\t}\n\n\tpublic addToHistory(): void {\n\t\tconst value = this.getValue();\n\t\tif (value && value !== this.getCurrentValue()) {\n\t\t\tthis.history.add(value);\n\t\t}\n\t}\n\n\tpublic getHistory(): string[] {\n\t\treturn this.history.getHistory();\n\t}\n\n\tpublic showNextValue(): void {\n\t\tif (!this.history.has(this.getValue())) {\n\t\t\tthis.addToHistory();\n\t\t}\n\n\t\tlet next = this.getNextValue();\n\t\tif (next) {\n\t\t\tnext = next === this.getValue() ? this.getNextValue() : next;\n\t\t}\n\n\t\tthis.setValue(next ?? '');\n\t}\n\n\tpublic showPreviousValue(): void {\n\t\tif (!this.history.has(this.getValue())) {\n\t\t\tthis.addToHistory();\n\t\t}\n\n\t\tlet previous = this.getPreviousValue();\n\t\tif (previous) {\n\t\t\tprevious = previous === this.getValue() ? this.getPreviousValue() : previous;\n\t\t}\n\n\t\tif (previous) {\n\t\t\tthis.setValue(previous);\n\t\t\tthis.inputWidget.setPosition({ lineNumber: 0, column: 0 });\n\t\t}\n\t}\n\n\tpublic clearHistory(): void {\n\t\tthis.history.clear();\n\t}\n\n\tprivate getCurrentValue(): string | null {\n\t\tlet currentValue = this.history.current();\n\t\tif (!currentValue) {\n\t\t\tcurrentValue = this.history.last();\n\t\t\tthis.history.next();\n\t\t}\n\t\treturn currentValue;\n\t}\n\n\tprivate getPreviousValue(): string | null {\n\t\treturn this.history.previous() || this.history.first();\n\t}\n\n\tprivate getNextValue(): string | null {\n\t\treturn this.history.next();\n\t}\n}\n\nexport class ContextScopedSuggestEnabledInputWithHistory extends SuggestEnabledInputWithHistory {\n\tprivate historyContext!: IHistoryNavigationContext;\n\n\tconstructor(\n\t\toptions: ISuggestEnabledHistoryOptions,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(options, instantiationService, modelService, contextKeyService, languageFeaturesService, configurationService);\n\n\t\tconst { historyNavigationBackwardsEnablement, historyNavigationForwardsEnablement } = this.historyContext;\n\t\tthis._register(this.inputWidget.onDidChangeCursorPosition(({ position }) => {\n\t\t\tconst viewModel = this.inputWidget._getViewModel()!;\n\t\t\tconst lastLineNumber = viewModel.getLineCount();\n\t\t\tconst lastLineCol = viewModel.getLineLength(lastLineNumber) + 1;\n\t\t\tconst viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(position);\n\t\t\thistoryNavigationBackwardsEnablement.set(viewPosition.lineNumber === 1 && viewPosition.column === 1);\n\t\t\thistoryNavigationForwardsEnablement.set(viewPosition.lineNumber === lastLineNumber && viewPosition.column === lastLineCol);\n\t\t}));\n\t}\n\n\tprotected override getScopedContextKeyService(contextKeyService: IContextKeyService) {\n\t\tconst scopedContextKeyService = this._register(contextKeyService.createScoped(this.element));\n\t\tthis.historyContext = this._register(registerAndCreateHistoryNavigationContext(\n\t\t\tscopedContextKeyService,\n\t\t\tthis,\n\t\t));\n\n\t\treturn scopedContextKeyService;\n\t}\n}\n\n// Override styles in selections.ts\nregisterThemingParticipant((theme, collector) => {\n\tconst selectionBackgroundColor = theme.getColor(selectionBackground);\n\n\tif (selectionBackgroundColor) {\n\t\t// Override inactive selection bg\n\t\tconst inputBackgroundColor = theme.getColor(inputBackground);\n\t\tif (inputBackgroundColor) {\n\t\t\tcollector.addRule(`.suggest-input-container .monaco-editor .selected-text { background-color: ${inputBackgroundColor.transparent(0.4)}; }`);\n\t\t}\n\n\t\t// Override selected fg\n\t\tconst inputForegroundColor = theme.getColor(inputForeground);\n\t\tif (inputForegroundColor) {\n\t\t\tcollector.addRule(`.suggest-input-container .monaco-editor .view-line span.inline-selected-text { color: ${inputForegroundColor}; }`);\n\t\t}\n\n\t\tconst backgroundColor = theme.getColor(inputBackground);\n\t\tif (backgroundColor) {\n\t\t\tcollector.addRule(`.suggest-input-container .monaco-editor-background { background-color: ${backgroundColor}; } `);\n\t\t}\n\t\tcollector.addRule(`.suggest-input-container .monaco-editor .focused .selected-text { background-color: ${selectionBackgroundColor}; }`);\n\t} else {\n\t\t// Use editor selection color if theme has not set a selection background color\n\t\tcollector.addRule(`.suggest-input-container .monaco-editor .focused .selected-text { background-color: ${theme.getColor(editorSelectionBackground)}; }`);\n\t}\n});\n\n\nfunction getSuggestEnabledInputOptions(ariaLabel?: string): IEditorOptions {\n\treturn {\n\t\tfontSize: 13,\n\t\tlineHeight: 20,\n\t\twordWrap: 'off',\n\t\tscrollbar: { vertical: 'hidden', },\n\t\troundedSelection: false,\n\t\tguides: {\n\t\t\tindentation: false\n\t\t},\n\t\tcursorWidth: 1,\n\t\tfontFamily: DEFAULT_FONT_FAMILY,\n\t\tariaLabel: ariaLabel || '',\n\t\tsnippetSuggestions: 'none',\n\t\tsuggest: { filterGraceful: false, showIcons: false },\n\t\tautoClosingBrackets: 'never'\n\t};\n}\n"]}