{"version":3,"sources":["vs/workbench/contrib/codeEditor/browser/toggleMultiCursorModifier.ts"],"names":[],"mappings":"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","file":"toggleMultiCursorModifier.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { Action2, MenuId, MenuRegistry, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\n\nexport class ToggleMultiCursorModifierAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.toggleMultiCursorModifier';\n\n\tprivate static readonly multiCursorModifierConfigurationKey = 'editor.multiCursorModifier';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleMultiCursorModifierAction.ID,\n\t\t\ttitle: { value: localize('toggleLocation', \"Toggle Multi-Cursor Modifier\"), original: 'Toggle Multi-Cursor Modifier' },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst editorConf = configurationService.getValue<{ multiCursorModifier: 'ctrlCmd' | 'alt' }>('editor');\n\t\tconst newValue: 'ctrlCmd' | 'alt' = (editorConf.multiCursorModifier === 'ctrlCmd' ? 'alt' : 'ctrlCmd');\n\n\t\treturn configurationService.updateValue(ToggleMultiCursorModifierAction.multiCursorModifierConfigurationKey, newValue);\n\t}\n}\n\nconst multiCursorModifier = new RawContextKey<string>('multiCursorModifier', 'altKey');\n\nclass MultiCursorModifierContextKeyController implements IWorkbenchContribution {\n\n\tprivate readonly _multiCursorModifier: IContextKey<string>;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tthis._multiCursorModifier = multiCursorModifier.bindTo(contextKeyService);\n\n\t\tthis._update();\n\t\tconfigurationService.onDidChangeConfiguration((e) => {\n\t\t\tif (e.affectsConfiguration('editor.multiCursorModifier')) {\n\t\t\t\tthis._update();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _update(): void {\n\t\tconst editorConf = this.configurationService.getValue<{ multiCursorModifier: 'ctrlCmd' | 'alt' }>('editor');\n\t\tconst value = (editorConf.multiCursorModifier === 'ctrlCmd' ? 'ctrlCmd' : 'altKey');\n\t\tthis._multiCursorModifier.set(value);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(MultiCursorModifierContextKeyController, LifecyclePhase.Restored);\n\nregisterAction2(ToggleMultiCursorModifierAction);\n\nMenuRegistry.appendMenuItem(MenuId.MenubarSelectionMenu, {\n\tgroup: '4_config',\n\tcommand: {\n\t\tid: ToggleMultiCursorModifierAction.ID,\n\t\ttitle: localize('miMultiCursorAlt', \"Switch to Alt+Click for Multi-Cursor\")\n\t},\n\twhen: multiCursorModifier.isEqualTo('ctrlCmd'),\n\torder: 1\n});\nMenuRegistry.appendMenuItem(MenuId.MenubarSelectionMenu, {\n\tgroup: '4_config',\n\tcommand: {\n\t\tid: ToggleMultiCursorModifierAction.ID,\n\t\ttitle: (\n\t\t\tisMacintosh\n\t\t\t\t? localize('miMultiCursorCmd', \"Switch to Cmd+Click for Multi-Cursor\")\n\t\t\t\t: localize('miMultiCursorCtrl', \"Switch to Ctrl+Click for Multi-Cursor\")\n\t\t)\n\t},\n\twhen: multiCursorModifier.isEqualTo('altKey'),\n\torder: 1\n});\n"]}