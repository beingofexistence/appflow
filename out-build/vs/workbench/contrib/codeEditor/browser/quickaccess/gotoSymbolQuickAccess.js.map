{"version":3,"sources":["vs/workbench/contrib/codeEditor/browser/quickaccess/gotoSymbolQuickAccess.ts"],"names":[],"mappings":"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","file":"gotoSymbolQuickAccess.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IKeyMods, IQuickPickSeparator, IQuickInputService, IQuickPick, ItemActivation } from 'vs/platform/quickinput/common/quickInput';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IQuickAccessRegistry, Extensions as QuickaccessExtensions } from 'vs/platform/quickinput/common/quickAccess';\nimport { AbstractGotoSymbolQuickAccessProvider, IGotoSymbolQuickPickItem } from 'vs/editor/contrib/quickAccess/browser/gotoSymbolQuickAccess';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IWorkbenchEditorConfiguration } from 'vs/workbench/common/editor';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { DisposableStore, IDisposable, toDisposable, Disposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { registerAction2, Action2, MenuId } from 'vs/platform/actions/common/actions';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { prepareQuery } from 'vs/base/common/fuzzyScorer';\nimport { SymbolKind } from 'vs/editor/common/languages';\nimport { fuzzyScore, createMatches } from 'vs/base/common/filters';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IQuickAccessTextEditorContext } from 'vs/editor/contrib/quickAccess/browser/editorNavigationQuickAccess';\nimport { IOutlineService, OutlineTarget } from 'vs/workbench/services/outline/browser/outline';\nimport { isCompositeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IOutlineModelService } from 'vs/editor/contrib/documentSymbols/browser/outlineModel';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\n\nexport class GotoSymbolQuickAccessProvider extends AbstractGotoSymbolQuickAccessProvider {\n\n\tprotected readonly onDidActiveTextEditorControlChange = this.editorService.onDidActiveEditorChange;\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IOutlineService private readonly outlineService: IOutlineService,\n\t\t@IOutlineModelService outlineModelService: IOutlineModelService,\n\t) {\n\t\tsuper(languageFeaturesService, outlineModelService, {\n\t\t\topenSideBySideDirection: () => this.configuration.openSideBySideDirection\n\t\t});\n\t}\n\n\t//#region DocumentSymbols (text editor required)\n\n\tprivate get configuration() {\n\t\tconst editorConfig = this.configurationService.getValue<IWorkbenchEditorConfiguration>().workbench?.editor;\n\n\t\treturn {\n\t\t\topenEditorPinned: !editorConfig?.enablePreviewFromQuickOpen || !editorConfig?.enablePreview,\n\t\t\topenSideBySideDirection: editorConfig?.openSideBySideDirection\n\t\t};\n\t}\n\n\tprotected get activeTextEditorControl() {\n\n\t\t// TODO: this distinction should go away by adopting `IOutlineService`\n\t\t// for all editors (either text based ones or not). Currently text based\n\t\t// editors are not yet using the new outline service infrastructure but the\n\t\t// \"classical\" document symbols approach.\n\t\tif (isCompositeEditor(this.editorService.activeEditorPane?.getControl())) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.editorService.activeTextEditorControl;\n\t}\n\n\tprotected override gotoLocation(context: IQuickAccessTextEditorContext, options: { range: IRange; keyMods: IKeyMods; forceSideBySide?: boolean; preserveFocus?: boolean }): void {\n\n\t\t// Check for sideBySide use\n\t\tif ((options.keyMods.alt || (this.configuration.openEditorPinned && options.keyMods.ctrlCmd) || options.forceSideBySide) && this.editorService.activeEditor) {\n\t\t\tcontext.restoreViewState?.(); // since we open to the side, restore view state in this editor\n\n\t\t\tconst editorOptions: ITextEditorOptions = {\n\t\t\t\tselection: options.range,\n\t\t\t\tpinned: options.keyMods.ctrlCmd || this.configuration.openEditorPinned,\n\t\t\t\tpreserveFocus: options.preserveFocus\n\t\t\t};\n\n\t\t\tthis.editorGroupService.sideGroup.openEditor(this.editorService.activeEditor, editorOptions);\n\t\t}\n\n\t\t// Otherwise let parent handle it\n\t\telse {\n\t\t\tsuper.gotoLocation(context, options);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region public methods to use this picker from other pickers\n\n\tprivate static readonly SYMBOL_PICKS_TIMEOUT = 8000;\n\n\tasync getSymbolPicks(model: ITextModel, filter: string, options: { extraContainerLabel?: string }, disposables: DisposableStore, token: CancellationToken): Promise<Array<IGotoSymbolQuickPickItem | IQuickPickSeparator>> {\n\n\t\t// If the registry does not know the model, we wait for as long as\n\t\t// the registry knows it. This helps in cases where a language\n\t\t// registry was not activated yet for providing any symbols.\n\t\t// To not wait forever, we eventually timeout though.\n\t\tconst result = await Promise.race([\n\t\t\tthis.waitForLanguageSymbolRegistry(model, disposables),\n\t\t\ttimeout(GotoSymbolQuickAccessProvider.SYMBOL_PICKS_TIMEOUT)\n\t\t]);\n\n\t\tif (!result || token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this.doGetSymbolPicks(this.getDocumentSymbols(model, token), prepareQuery(filter), options, token);\n\t}\n\n\t//#endregion\n\n\tprotected override provideWithoutTextEditor(picker: IQuickPick<IGotoSymbolQuickPickItem>): IDisposable {\n\t\tif (this.canPickWithOutlineService()) {\n\t\t\treturn this.doGetOutlinePicks(picker);\n\t\t}\n\t\treturn super.provideWithoutTextEditor(picker);\n\t}\n\n\tprivate canPickWithOutlineService(): boolean {\n\t\treturn this.editorService.activeEditorPane ? this.outlineService.canCreateOutline(this.editorService.activeEditorPane) : false;\n\t}\n\n\tprivate doGetOutlinePicks(picker: IQuickPick<IGotoSymbolQuickPickItem>): IDisposable {\n\t\tconst pane = this.editorService.activeEditorPane;\n\t\tif (!pane) {\n\t\t\treturn Disposable.None;\n\t\t}\n\t\tconst cts = new CancellationTokenSource();\n\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(toDisposable(() => cts.dispose(true)));\n\n\t\tpicker.busy = true;\n\n\t\tthis.outlineService.createOutline(pane, OutlineTarget.QuickPick, cts.token).then(outline => {\n\n\t\t\tif (!outline) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\toutline.dispose();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdisposables.add(outline);\n\n\t\t\tconst viewState = outline.captureViewState();\n\t\t\tdisposables.add(toDisposable(() => {\n\t\t\t\tif (picker.selectedItems.length === 0) {\n\t\t\t\t\tviewState.dispose();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tconst entries = outline.config.quickPickDataSource.getQuickPickElements();\n\n\t\t\tconst items: IGotoSymbolQuickPickItem[] = entries.map((entry, idx) => {\n\t\t\t\treturn {\n\t\t\t\t\tkind: SymbolKind.File,\n\t\t\t\t\tindex: idx,\n\t\t\t\t\tscore: 0,\n\t\t\t\t\tlabel: entry.label,\n\t\t\t\t\tdescription: entry.description,\n\t\t\t\t\tariaLabel: entry.ariaLabel,\n\t\t\t\t\ticonClasses: entry.iconClasses\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tdisposables.add(picker.onDidAccept(() => {\n\t\t\t\tpicker.hide();\n\t\t\t\tconst [entry] = picker.selectedItems;\n\t\t\t\tif (entry && entries[entry.index]) {\n\t\t\t\t\toutline.reveal(entries[entry.index].element, {}, false);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tconst updatePickerItems = () => {\n\t\t\t\tconst filteredItems = items.filter(item => {\n\t\t\t\t\tif (picker.value === '@') {\n\t\t\t\t\t\t// default, no filtering, scoring...\n\t\t\t\t\t\titem.score = 0;\n\t\t\t\t\t\titem.highlights = undefined;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tconst score = fuzzyScore(picker.value, picker.value.toLowerCase(), 1 /*@-character*/, item.label, item.label.toLowerCase(), 0, { firstMatchCanBeWeak: true, boostFullMatch: true });\n\t\t\t\t\tif (!score) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\titem.score = score[1];\n\t\t\t\t\titem.highlights = { label: createMatches(score) };\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tif (filteredItems.length === 0) {\n\t\t\t\t\tconst label = localize('empty', 'No matching entries');\n\t\t\t\t\tpicker.items = [{ label, index: -1, kind: SymbolKind.String }];\n\t\t\t\t\tpicker.ariaLabel = label;\n\t\t\t\t} else {\n\t\t\t\t\tpicker.items = filteredItems;\n\t\t\t\t}\n\t\t\t};\n\t\t\tupdatePickerItems();\n\t\t\tdisposables.add(picker.onDidChangeValue(updatePickerItems));\n\n\t\t\tconst previewDisposable = new MutableDisposable();\n\t\t\tdisposables.add(previewDisposable);\n\n\t\t\tdisposables.add(picker.onDidChangeActive(() => {\n\t\t\t\tconst [entry] = picker.activeItems;\n\t\t\t\tif (entry && entries[entry.index]) {\n\t\t\t\t\tpreviewDisposable.value = outline.preview(entries[entry.index].element);\n\t\t\t\t} else {\n\t\t\t\t\tpreviewDisposable.clear();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t}).catch(err => {\n\t\t\tonUnexpectedError(err);\n\t\t\tpicker.hide();\n\t\t}).finally(() => {\n\t\t\tpicker.busy = false;\n\t\t});\n\n\t\treturn disposables;\n\t}\n}\n\nclass GotoSymbolAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.gotoSymbol';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: GotoSymbolAction.ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('gotoSymbol', \"Go to Symbol in Editor...\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miGotoSymbolInEditor', comment: ['&& denotes a mnemonic'] }, \"Go to &&Symbol in Editor...\"),\n\t\t\t\toriginal: 'Go to Symbol in Editor...'\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\twhen: undefined,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyO\n\t\t\t},\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.MenubarGoMenu,\n\t\t\t\tgroup: '4_symbol_nav',\n\t\t\t\torder: 1\n\t\t\t}]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\taccessor.get(IQuickInputService).quickAccess.show(GotoSymbolQuickAccessProvider.PREFIX, { itemActivation: ItemActivation.NONE });\n\t}\n}\n\nregisterAction2(GotoSymbolAction);\n\nRegistry.as<IQuickAccessRegistry>(QuickaccessExtensions.Quickaccess).registerQuickAccessProvider({\n\tctor: GotoSymbolQuickAccessProvider,\n\tprefix: AbstractGotoSymbolQuickAccessProvider.PREFIX,\n\tcontextKey: 'inFileSymbolsPicker',\n\tplaceholder: localize('gotoSymbolQuickAccessPlaceholder', \"Type the name of a symbol to go to.\"),\n\thelpEntries: [\n\t\t{\n\t\t\tdescription: localize('gotoSymbolQuickAccess', \"Go to Symbol in Editor\"),\n\t\t\tprefix: AbstractGotoSymbolQuickAccessProvider.PREFIX,\n\t\t\tcommandId: GotoSymbolAction.ID,\n\t\t\tcommandCenterOrder: 40\n\t\t},\n\t\t{\n\t\t\tdescription: localize('gotoSymbolByCategoryQuickAccess', \"Go to Symbol in Editor by Category\"),\n\t\t\tprefix: AbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY\n\t\t}\n\t]\n});\n"]}