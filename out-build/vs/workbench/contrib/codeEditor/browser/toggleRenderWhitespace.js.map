{"version":3,"sources":["vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAShG,MAAM,4BAA6B,SAAQ,aAAG;iBAE7B,OAAE,GAAG,sCAAsC,CAAC;QAE5D;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,4BAA4B,CAAC,EAAE;gBACnC,KAAK,EAAE;oBACN,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAwB,EAAE,IAA0B,CAAC;oBACrE,aAAa,EAAE,IAAA,cAAQ,EAAC,CAAuE,CAArE,CAAuE,EAApE,EAAE,AAAuF,CAAC,yBAA9D,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;oBAC7F,QAAQ,EAAE,0BAA0B;iBACpC;gBACD,QAAQ,EAAE,4BAAG,CAAQ,IAAI;gBACzB,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,gBAAG,CAAY,SAAS,CAAC,gCAAgC,EAAE,MAAM,CAAC;gBAC3E,IAAI,EAAE;oBACL,EAAE,EAAE,aAAG,CAAI,qBAAqB;oBAChC,KAAK,EAAE,UAAU;oBACjB,KAAK,EAAE,CAAC;iBACR;aACD,CAAC,CAAC;QACJ,CAAC;QAEQ,GAAG,CAAC,QAA0B;YACtC,MAAM,oBAAoB,GAAG,QAAQ,CAAC,GAAG,CAAC,mBAAG,CAAmB,CAAC;YAEjE,MAAM,gBAAgB,GAAG,oBAAoB,CAAC,QAAQ,CAAS,yBAAyB,CAAC,CAAC;YAE1F,IAAI,mBAA2B,CAAC;YAChC,IAAI,gBAAgB,KAAK,MAAM,EAAE;gBAChC,mBAAmB,GAAG,KAAK,CAAC;aAC5B;iBAAM;gBACN,mBAAmB,GAAG,MAAM,CAAC;aAC7B;YAED,OAAO,oBAAoB,CAAC,WAAW,CAAC,yBAAyB,EAAE,mBAAmB,CAAC,CAAC;QACzF,CAAC;;IAGF,IAAA,aAAG,EAAa,4BAA4B,CAAC,CAAC","file":"toggleRenderWhitespace.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\n\nclass ToggleRenderWhitespaceAction extends Action2 {\n\n\tstatic readonly ID = 'editor.action.toggleRenderWhitespace';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleRenderWhitespaceAction.ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('toggleRenderWhitespace', \"Toggle Render Whitespace\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miToggleRenderWhitespace', comment: ['&& denotes a mnemonic'] }, \"&&Render Whitespace\"),\n\t\t\t\toriginal: 'Toggle Render Whitespace'\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ttoggled: ContextKeyExpr.notEquals('config.editor.renderWhitespace', 'none'),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '4_editor',\n\t\t\t\torder: 4\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst renderWhitespace = configurationService.getValue<string>('editor.renderWhitespace');\n\n\t\tlet newRenderWhitespace: string;\n\t\tif (renderWhitespace === 'none') {\n\t\t\tnewRenderWhitespace = 'all';\n\t\t} else {\n\t\t\tnewRenderWhitespace = 'none';\n\t\t}\n\n\t\treturn configurationService.updateValue('editor.renderWhitespace', newRenderWhitespace);\n\t}\n}\n\nregisterAction2(ToggleRenderWhitespaceAction);\n"]}