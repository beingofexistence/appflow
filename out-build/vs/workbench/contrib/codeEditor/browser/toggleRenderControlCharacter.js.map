{"version":3,"sources":["vs/workbench/contrib/codeEditor/browser/toggleRenderControlCharacter.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAShG,MAAa,IAAmC,SAAQ,aAAG;iBAE1C,OAAE,GAAG,4CAA4C,CAAC;QAElE;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,IAAI,CAA+B,EAAE;gBACzC,KAAK,EAAE;oBACN,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA+B,EAAE,IAA2B,CAAC;oBAC7E,aAAa,EAAE,IAAA,cAAQ,EAAC,CAA8E,CAA5E,CAA8E,EAA3E,EAAE,AAAsG,CAAC,gCAAtE,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;oBACpG,QAAQ,EAAE,2BAA2B;iBACrC;gBACD,QAAQ,EAAE,4BAAG,CAAQ,IAAI;gBACzB,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,gBAAG,CAAY,MAAM,CAAC,uCAAuC,EAAE,IAAI,CAAC;gBAC7E,IAAI,EAAE;oBACL,EAAE,EAAE,aAAG,CAAI,qBAAqB;oBAChC,KAAK,EAAE,UAAU;oBACjB,KAAK,EAAE,CAAC;iBACR;aACD,CAAC,CAAC;QACJ,CAAC;QAEQ,GAAG,CAAC,QAA0B;YACtC,MAAM,oBAAoB,GAAG,QAAQ,CAAC,GAAG,CAAC,mBAAG,CAAmB,CAAC;YAEjE,MAAM,0BAA0B,GAAG,CAAC,oBAAoB,CAAC,QAAQ,CAAU,gCAAgC,CAAC,CAAC;YAC7G,OAAO,oBAAoB,CAAC,WAAW,CAAC,gCAAgC,EAAE,0BAA0B,CAAC,CAAC;QACvG,CAAC;;IA5BF,oBA6BC;IAED,IAAA,aAAG,EAAa,IAAI,CAA+B,CAAC","file":"toggleRenderControlCharacter.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\n\nexport class ToggleRenderControlCharacterAction extends Action2 {\n\n\tstatic readonly ID = 'editor.action.toggleRenderControlCharacter';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleRenderControlCharacterAction.ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('toggleRenderControlCharacters', \"Toggle Control Characters\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miToggleRenderControlCharacters', comment: ['&& denotes a mnemonic'] }, \"Render &&Control Characters\"),\n\t\t\t\toriginal: 'Toggle Control Characters'\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ttoggled: ContextKeyExpr.equals('config.editor.renderControlCharacters', true),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '4_editor',\n\t\t\t\torder: 5\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst newRenderControlCharacters = !configurationService.getValue<boolean>('editor.renderControlCharacters');\n\t\treturn configurationService.updateValue('editor.renderControlCharacters', newRenderControlCharacters);\n\t}\n}\n\nregisterAction2(ToggleRenderControlCharacterAction);\n"]}