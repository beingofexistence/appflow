{"version":3,"sources":["vs/workbench/contrib/codeEditor/browser/toggleMinimap.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAShG,MAAa,IAAoB,SAAQ,aAAG;iBAE3B,OAAE,GAAG,6BAA6B,CAAC;QAEnD;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,IAAI,CAAgB,EAAE;gBAC1B,KAAK,EAAE;oBACN,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAe,EAAE,IAAgB,CAAC;oBAClD,QAAQ,EAAE,gBAAgB;oBAC1B,aAAa,EAAE,IAAA,cAAQ,EAAC,CAAwD,CAAtD,CAAwD,EAArD,EAAE,AAA8D,CAAC,UAApD,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC;iBAC9E;gBACD,QAAQ,EAAE,4BAAG,CAAQ,IAAI;gBACzB,EAAE,EAAE,IAAI;gBACR,OAAO,EAAE,gBAAG,CAAY,MAAM,CAAC,+BAA+B,EAAE,IAAI,CAAC;gBACrE,IAAI,EAAE;oBACL,EAAE,EAAE,aAAG,CAAI,qBAAqB;oBAChC,KAAK,EAAE,UAAU;oBACjB,KAAK,EAAE,CAAC;iBACR;aACD,CAAC,CAAC;QACJ,CAAC;QAEQ,KAAK,CAAC,GAAG,CAAC,QAA0B;YAC5C,MAAM,oBAAoB,GAAG,QAAQ,CAAC,GAAG,CAAC,mBAAG,CAAmB,CAAC;YAEjE,MAAM,QAAQ,GAAG,CAAC,oBAAoB,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;YAC1E,OAAO,oBAAoB,CAAC,WAAW,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;QAC7E,CAAC;;IA5BF,oBA6BC;IAED,IAAA,aAAG,EAAa,IAAI,CAAgB,CAAC","file":"toggleMinimap.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\n\nexport class ToggleMinimapAction extends Action2 {\n\n\tstatic readonly ID = 'editor.action.toggleMinimap';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleMinimapAction.ID,\n\t\t\ttitle: {\n\t\t\t\tvalue: localize('toggleMinimap', \"Toggle Minimap\"),\n\t\t\t\toriginal: 'Toggle Minimap',\n\t\t\t\tmnemonicTitle: localize({ key: 'miMinimap', comment: ['&& denotes a mnemonic'] }, \"&&Minimap\")\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ttoggled: ContextKeyExpr.equals('config.editor.minimap.enabled', true),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '4_editor',\n\t\t\t\torder: 1\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst newValue = !configurationService.getValue('editor.minimap.enabled');\n\t\treturn configurationService.updateValue('editor.minimap.enabled', newValue);\n\t}\n}\n\nregisterAction2(ToggleMinimapAction);\n"]}