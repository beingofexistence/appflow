{"version":3,"sources":["vs/workbench/contrib/languageDetection/browser/languageDetection.contribution.ts"],"names":[],"mappings":"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","file":"languageDetection.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { getCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { localize } from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IStatusbarEntry, IStatusbarEntryAccessor, IStatusbarService, StatusbarAlignment } from 'vs/workbench/services/statusbar/browser/statusbar';\nimport { ILanguageDetectionService, LanguageDetectionHintConfig, LanguageDetectionLanguageEventSource } from 'vs/workbench/services/languageDetection/common/languageDetectionWorkerService';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { registerAction2, Action2 } from 'vs/platform/actions/common/actions';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { NOTEBOOK_EDITOR_EDITABLE } from 'vs/workbench/contrib/notebook/common/notebookContextKeys';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { Schemas } from 'vs/base/common/network';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\n\nconst detectLanguageCommandId = 'editor.detectLanguage';\n\nclass LanguageDetectionStatusContribution implements IWorkbenchContribution {\n\n\tprivate static readonly _id = 'status.languageDetectionStatus';\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _combinedEntry?: IStatusbarEntryAccessor;\n\tprivate _delayer = new ThrottledDelayer(1000);\n\tprivate readonly _renderDisposables = new DisposableStore();\n\n\tconstructor(\n\t\t@ILanguageDetectionService private readonly _languageDetectionService: ILanguageDetectionService,\n\t\t@IStatusbarService private readonly _statusBarService: IStatusbarService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t) {\n\t\t_editorService.onDidActiveEditorChange(() => this._update(true), this, this._disposables);\n\t\tthis._update(false);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._delayer.dispose();\n\t\tthis._combinedEntry?.dispose();\n\t\tthis._renderDisposables.dispose();\n\t}\n\n\tprivate _update(clear: boolean): void {\n\t\tif (clear) {\n\t\t\tthis._combinedEntry?.dispose();\n\t\t\tthis._combinedEntry = undefined;\n\t\t}\n\t\tthis._delayer.trigger(() => this._doUpdate());\n\t}\n\n\tprivate async _doUpdate(): Promise<void> {\n\t\tconst editor = getCodeEditor(this._editorService.activeTextEditorControl);\n\n\t\tthis._renderDisposables.clear();\n\n\t\t// update when editor language changes\n\t\teditor?.onDidChangeModelLanguage(() => this._update(true), this, this._renderDisposables);\n\t\teditor?.onDidChangeModelContent(() => this._update(false), this, this._renderDisposables);\n\t\tconst editorModel = editor?.getModel();\n\t\tconst editorUri = editorModel?.uri;\n\t\tconst existingId = editorModel?.getLanguageId();\n\t\tconst enablementConfig = this._configurationService.getValue<LanguageDetectionHintConfig>('workbench.editor.languageDetectionHints');\n\t\tconst enabled = typeof enablementConfig === 'object' && enablementConfig?.untitledEditors;\n\t\tconst disableLightbulb = !enabled || editorUri?.scheme !== Schemas.untitled || !existingId;\n\n\t\tif (disableLightbulb || !editorUri) {\n\t\t\tthis._combinedEntry?.dispose();\n\t\t\tthis._combinedEntry = undefined;\n\t\t} else {\n\t\t\tconst lang = await this._languageDetectionService.detectLanguage(editorUri);\n\t\t\tconst skip: Record<string, string | undefined> = { 'jsonc': 'json' };\n\t\t\tconst existing = editorModel.getLanguageId();\n\t\t\tif (lang && lang !== existing && skip[existing] !== lang) {\n\t\t\t\tconst detectedName = this._languageService.getLanguageName(lang) || lang;\n\t\t\t\tlet tooltip = localize('status.autoDetectLanguage', \"Accept Detected Language: {0}\", detectedName);\n\t\t\t\tconst keybinding = this._keybindingService.lookupKeybinding(detectLanguageCommandId);\n\t\t\t\tconst label = keybinding?.getLabel();\n\t\t\t\tif (label) {\n\t\t\t\t\ttooltip += ` (${label})`;\n\t\t\t\t}\n\n\t\t\t\tconst props: IStatusbarEntry = {\n\t\t\t\t\tname: localize('langDetection.name', \"Language Detection\"),\n\t\t\t\t\tariaLabel: localize('langDetection.aria', \"Change to Detected Language: {0}\", lang),\n\t\t\t\t\ttooltip,\n\t\t\t\t\tcommand: detectLanguageCommandId,\n\t\t\t\t\ttext: '$(lightbulb-autofix)',\n\t\t\t\t};\n\t\t\t\tif (!this._combinedEntry) {\n\t\t\t\t\tthis._combinedEntry = this._statusBarService.addEntry(props, LanguageDetectionStatusContribution._id, StatusbarAlignment.RIGHT, { id: 'status.editor.mode', alignment: StatusbarAlignment.RIGHT, compact: true });\n\t\t\t\t} else {\n\t\t\t\t\tthis._combinedEntry.update(props);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._combinedEntry?.dispose();\n\t\t\t\tthis._combinedEntry = undefined;\n\t\t\t}\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(LanguageDetectionStatusContribution, LifecyclePhase.Restored);\n\n\nregisterAction2(class extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: detectLanguageCommandId,\n\t\t\ttitle: { value: localize('detectlang', 'Detect Language from Content'), original: 'Detect Language from Content' },\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(NOTEBOOK_EDITOR_EDITABLE.toNegated(), EditorContextKeys.editorTextFocus),\n\t\t\tkeybinding: { primary: KeyCode.KeyD | KeyMod.Alt | KeyMod.Shift, weight: KeybindingWeight.WorkbenchContrib }\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst languageDetectionService = accessor.get(ILanguageDetectionService);\n\t\tconst editor = getCodeEditor(editorService.activeTextEditorControl);\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst editorUri = editor?.getModel()?.uri;\n\t\tif (editorUri) {\n\t\t\tconst lang = await languageDetectionService.detectLanguage(editorUri);\n\t\t\tif (lang) {\n\t\t\t\teditor.getModel()?.setLanguage(lang, LanguageDetectionLanguageEventSource);\n\t\t\t} else {\n\t\t\t\tnotificationService.warn(localize('noDetection', \"Unable to detect editor language\"));\n\t\t\t}\n\t\t}\n\t}\n});\n"]}