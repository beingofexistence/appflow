{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/interactive/browser/interactiveHistoryService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAQnF,QAAA,IAAI,GAAyB,IAAA,mBAAG,EAAyC,4BAA4B,CAAC,CAAC;IAapH,MAAa,IAA0B,SAAQ,eAAG;QAIjD;YACC,KAAK,EAAE,CAAC;YAER,IAAI,CAAC,QAAQ,GAAG,IAAI,SAAG,EAAqC,CAAC;QAC9D,CAAC;QAED,YAAY,CAAC,GAAQ,EAAE,KAAa;YACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,aAAG,CAAuB,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACnE,OAAO;aACP;YAED,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;YAExC,OAAO,CAAC,WAAW,EAAE,CAAC;YACtB,IAAI,OAAO,EAAE,OAAO,EAAE,KAAK,KAAK,EAAE;gBACjC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACF,CAAC;QACD,gBAAgB,CAAC,GAAQ;YACxB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvC,OAAO,OAAO,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC;QACpC,CAAC;QAED,YAAY,CAAC,GAAQ;YACpB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEvC,OAAO,OAAO,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC;QAChC,CAAC;QAED,WAAW,CAAC,GAAQ,EAAE,KAAa;YAClC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,aAAG,CAAuB,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACnE,OAAO;aACP;iBAAM;gBACN,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACvC,IAAI,OAAO,EAAE,OAAO,EAAE,KAAK,KAAK,EAAE;oBACjC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;iBAC5B;aACD;QAEF,CAAC;QAED,YAAY,CAAC,GAAQ;YACpB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;QAED,GAAG,CAAC,GAAQ;YACX,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9C,CAAC;KAED;IAvDD,oBAuDC","file":"interactiveHistoryService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { HistoryNavigator2 } from 'vs/base/common/history';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IInteractiveHistoryService = createDecorator<IInteractiveHistoryService>('IInteractiveHistoryService');\n\nexport interface IInteractiveHistoryService {\n\treadonly _serviceBrand: undefined;\n\n\taddToHistory(uri: URI, value: string): void;\n\tgetPreviousValue(uri: URI): string | null;\n\tgetNextValue(uri: URI): string | null;\n\treplaceLast(uri: URI, value: string): void;\n\tclearHistory(uri: URI): void;\n\thas(uri: URI): boolean;\n}\n\nexport class InteractiveHistoryService extends Disposable implements IInteractiveHistoryService {\n\tdeclare readonly _serviceBrand: undefined;\n\t_history: ResourceMap<HistoryNavigator2<string>>;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._history = new ResourceMap<HistoryNavigator2<string>>();\n\t}\n\n\taddToHistory(uri: URI, value: string): void {\n\t\tif (!this._history.has(uri)) {\n\t\t\tthis._history.set(uri, new HistoryNavigator2<string>([value], 50));\n\t\t\treturn;\n\t\t}\n\n\t\tconst history = this._history.get(uri)!;\n\n\t\thistory.resetCursor();\n\t\tif (history?.current() !== value) {\n\t\t\thistory?.add(value);\n\t\t}\n\t}\n\tgetPreviousValue(uri: URI): string | null {\n\t\tconst history = this._history.get(uri);\n\t\treturn history?.previous() ?? null;\n\t}\n\n\tgetNextValue(uri: URI): string | null {\n\t\tconst history = this._history.get(uri);\n\n\t\treturn history?.next() ?? null;\n\t}\n\n\treplaceLast(uri: URI, value: string) {\n\t\tif (!this._history.has(uri)) {\n\t\t\tthis._history.set(uri, new HistoryNavigator2<string>([value], 50));\n\t\t\treturn;\n\t\t} else {\n\t\t\tconst history = this._history.get(uri);\n\t\t\tif (history?.current() !== value) {\n\t\t\t\thistory?.replaceLast(value);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclearHistory(uri: URI) {\n\t\tthis._history.delete(uri);\n\t}\n\n\thas(uri: URI) {\n\t\treturn this._history.has(uri) ? true : false;\n\t}\n\n}\n"]}