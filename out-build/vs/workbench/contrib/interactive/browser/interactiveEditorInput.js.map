{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/interactive/browser/interactiveEditorInput.ts"],"names":[],"mappings":"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","file":"interactiveEditorInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IReference } from 'vs/base/common/lifecycle';\nimport * as paths from 'vs/base/common/path';\nimport { isEqual, joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { IResolvedTextEditorModel, ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { EditorInputCapabilities, GroupIdentifier, ISaveOptions, IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { IInteractiveDocumentService } from 'vs/workbench/contrib/interactive/browser/interactiveDocumentService';\nimport { IInteractiveHistoryService } from 'vs/workbench/contrib/interactive/browser/interactiveHistoryService';\nimport { IResolvedNotebookEditorModel } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { ICompositeNotebookEditorInput, NotebookEditorInput } from 'vs/workbench/contrib/notebook/common/notebookEditorInput';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\n\nexport class InteractiveEditorInput extends EditorInput implements ICompositeNotebookEditorInput {\n\tstatic create(instantiationService: IInstantiationService, resource: URI, inputResource: URI, title?: string, language?: string) {\n\t\treturn instantiationService.createInstance(InteractiveEditorInput, resource, inputResource, title, language);\n\t}\n\n\tprivate static windowNames: Record<string, string> = {};\n\n\tstatic setName(notebookUri: URI, title: string | undefined) {\n\t\tif (title) {\n\t\t\tthis.windowNames[notebookUri.path] = title;\n\t\t}\n\t}\n\n\tstatic readonly ID: string = 'workbench.input.interactive';\n\n\tpublic override get editorId(): string {\n\t\treturn 'interactive';\n\t}\n\n\toverride get typeId(): string {\n\t\treturn InteractiveEditorInput.ID;\n\t}\n\n\tprivate name: string;\n\n\tget language() {\n\t\treturn this._inputModelRef?.object.textEditorModel.getLanguageId() ?? this._initLanguage;\n\t}\n\tprivate _initLanguage?: string;\n\n\tprivate _notebookEditorInput: NotebookEditorInput;\n\tget notebookEditorInput() {\n\t\treturn this._notebookEditorInput;\n\t}\n\n\tget editorInputs() {\n\t\treturn [this._notebookEditorInput];\n\t}\n\n\tprivate _resource: URI;\n\n\toverride get resource(): URI {\n\t\treturn this._resource;\n\t}\n\n\tprivate _inputResource: URI;\n\n\tget inputResource() {\n\t\treturn this._inputResource;\n\t}\n\tprivate _inputResolver: Promise<IResolvedNotebookEditorModel | null> | null;\n\tprivate _editorModelReference: IResolvedNotebookEditorModel | null;\n\n\tprivate _inputModelRef: IReference<IResolvedTextEditorModel> | null;\n\n\tget primary(): EditorInput {\n\t\treturn this._notebookEditorInput;\n\t}\n\tprivate _textModelService: ITextModelService;\n\tprivate _interactiveDocumentService: IInteractiveDocumentService;\n\tprivate _historyService: IInteractiveHistoryService;\n\n\n\tconstructor(\n\t\tresource: URI,\n\t\tinputResource: URI,\n\t\ttitle: string | undefined,\n\t\tlanguageId: string | undefined,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IInteractiveDocumentService interactiveDocumentService: IInteractiveDocumentService,\n\t\t@IInteractiveHistoryService historyService: IInteractiveHistoryService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@IFileDialogService private readonly _fileDialogService: IFileDialogService\n\t) {\n\t\tconst input = NotebookEditorInput.create(instantiationService, resource, 'interactive', {});\n\t\tsuper();\n\t\tthis._notebookEditorInput = input;\n\t\tthis._register(this._notebookEditorInput);\n\t\tthis.name = title ?? InteractiveEditorInput.windowNames[resource.path] ?? paths.basename(resource.path, paths.extname(resource.path));\n\t\tthis._initLanguage = languageId;\n\t\tthis._resource = resource;\n\t\tthis._inputResource = inputResource;\n\t\tthis._inputResolver = null;\n\t\tthis._editorModelReference = null;\n\t\tthis._inputModelRef = null;\n\t\tthis._textModelService = textModelService;\n\t\tthis._interactiveDocumentService = interactiveDocumentService;\n\t\tthis._historyService = historyService;\n\n\t\tthis._registerListeners();\n\t}\n\n\tprivate _registerListeners(): void {\n\t\tconst oncePrimaryDisposed = Event.once(this.primary.onWillDispose);\n\t\tthis._register(oncePrimaryDisposed(() => {\n\t\t\tif (!this.isDisposed()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\t// Re-emit some events from the primary side to the outside\n\t\tthis._register(this.primary.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n\t\tthis._register(this.primary.onDidChangeLabel(() => this._onDidChangeLabel.fire()));\n\n\t\t// Re-emit some events from both sides to the outside\n\t\tthis._register(this.primary.onDidChangeCapabilities(() => this._onDidChangeCapabilities.fire()));\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\treturn EditorInputCapabilities.Untitled\n\t\t\t| EditorInputCapabilities.Readonly\n\t\t\t| EditorInputCapabilities.Scratchpad;\n\t}\n\n\tprivate async _resolveEditorModel() {\n\t\tif (!this._editorModelReference) {\n\t\t\tthis._editorModelReference = await this._notebookEditorInput.resolve();\n\t\t}\n\n\t\treturn this._editorModelReference;\n\t}\n\n\toverride async resolve(): Promise<IResolvedNotebookEditorModel | null> {\n\t\tif (this._editorModelReference) {\n\t\t\treturn this._editorModelReference;\n\t\t}\n\n\t\tif (this._inputResolver) {\n\t\t\treturn this._inputResolver;\n\t\t}\n\n\t\tthis._inputResolver = this._resolveEditorModel();\n\n\t\treturn this._inputResolver;\n\t}\n\n\tasync resolveInput(language?: string) {\n\t\tif (this._inputModelRef) {\n\t\t\treturn this._inputModelRef.object.textEditorModel;\n\t\t}\n\n\t\tconst resolvedLanguage = language ?? this._initLanguage ?? PLAINTEXT_LANGUAGE_ID;\n\t\tthis._interactiveDocumentService.willCreateInteractiveDocument(this.resource!, this.inputResource, resolvedLanguage);\n\t\tthis._inputModelRef = await this._textModelService.createModelReference(this.inputResource);\n\n\t\treturn this._inputModelRef.object.textEditorModel;\n\t}\n\n\toverride async save(group: GroupIdentifier, options?: ISaveOptions): Promise<EditorInput | IUntypedEditorInput | undefined> {\n\t\tif (this._editorModelReference) {\n\n\t\t\tif (this.hasCapability(EditorInputCapabilities.Untitled)) {\n\t\t\t\treturn this.saveAs(group, options);\n\t\t\t} else {\n\t\t\t\tawait this._editorModelReference.save(options);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride async saveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<IUntypedEditorInput | undefined> {\n\t\tif (!this._editorModelReference) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst provider = this._notebookService.getContributedNotebookType('interactive');\n\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst filename = this.getName() + '.ipynb';\n\t\tconst pathCandidate = joinPath(await this._fileDialogService.defaultFilePath(), filename);\n\n\t\tconst target = await this._fileDialogService.pickFileToSave(pathCandidate, options?.availableFileSystems);\n\t\tif (!target) {\n\t\t\treturn undefined; // save cancelled\n\t\t}\n\n\t\treturn await this._editorModelReference.saveAs(target);\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (super.matches(otherInput)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherInput instanceof InteractiveEditorInput) {\n\t\t\treturn isEqual(this.resource, otherInput.resource) && isEqual(this.inputResource, otherInput.inputResource);\n\t\t}\n\t\treturn false;\n\t}\n\n\toverride getName() {\n\t\treturn this.name;\n\t}\n\n\toverride isModified() {\n\t\treturn this._editorModelReference?.isModified() ?? false;\n\t}\n\n\toverride dispose() {\n\t\t// we support closing the interactive window without prompt, so the editor model should not be dirty\n\t\tthis._editorModelReference?.revert({ soft: true });\n\n\t\tthis._notebookEditorInput?.dispose();\n\t\tthis._editorModelReference?.dispose();\n\t\tthis._editorModelReference = null;\n\t\tthis._interactiveDocumentService.willRemoveInteractiveDocument(this.resource!, this.inputResource);\n\t\tthis._inputModelRef?.dispose();\n\t\tthis._inputModelRef = null;\n\t\tsuper.dispose();\n\t}\n\n\tget historyService() {\n\t\treturn this._historyService;\n\t}\n}\n"]}