{"version":3,"sources":["vs/workbench/contrib/interactive/browser/interactive.contribution.ts"],"names":[],"mappings":"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","file":"interactive.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterable } from 'vs/base/common/iterator';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { parse } from 'vs/base/common/marshalling';\nimport { Schemas } from 'vs/base/common/network';\nimport { extname, isEqual } from 'vs/base/common/resources';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { assertType } from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IBulkEditService } from 'vs/editor/browser/services/bulkEditService';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { PLAINTEXT_LANGUAGE_ID } from 'vs/editor/common/languages/modesRegistry';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ITextModelContentProvider, ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { peekViewBorder } from 'vs/editor/contrib/peekView/browser/peekView';\nimport { Context as SuggestContext } from 'vs/editor/contrib/suggest/browser/suggest';\nimport { localize } from 'vs/nls';\nimport { ILocalizedString } from 'vs/platform/action/common/action';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { EditorActivation, IResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { contrastBorder, listInactiveSelectionBackground, registerColor, transparent } from 'vs/platform/theme/common/colorRegistry';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from 'vs/workbench/browser/editor';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { EditorExtensions, EditorsOrder, IEditorFactoryRegistry, IEditorSerializer, IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { PANEL_BORDER } from 'vs/workbench/common/theme';\nimport { ResourceNotebookCellEdit } from 'vs/workbench/contrib/bulkEdit/browser/bulkCellEdits';\nimport { InteractiveWindowSetting, INTERACTIVE_INPUT_CURSOR_BOUNDARY } from 'vs/workbench/contrib/interactive/browser/interactiveCommon';\nimport { IInteractiveDocumentService, InteractiveDocumentService } from 'vs/workbench/contrib/interactive/browser/interactiveDocumentService';\nimport { InteractiveEditor } from 'vs/workbench/contrib/interactive/browser/interactiveEditor';\nimport { InteractiveEditorInput } from 'vs/workbench/contrib/interactive/browser/interactiveEditorInput';\nimport { IInteractiveHistoryService, InteractiveHistoryService } from 'vs/workbench/contrib/interactive/browser/interactiveHistoryService';\nimport { NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT } from 'vs/workbench/contrib/notebook/browser/controller/coreActions';\nimport { INotebookEditorOptions } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { NotebookEditorWidget } from 'vs/workbench/contrib/notebook/browser/notebookEditorWidget';\nimport * as icons from 'vs/workbench/contrib/notebook/browser/notebookIcons';\nimport { INotebookEditorService } from 'vs/workbench/contrib/notebook/browser/services/notebookEditorService';\nimport { CellEditType, CellKind, CellUri, INTERACTIVE_WINDOW_EDITOR_ID, NotebookWorkingCopyTypeIdentifier } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { InteractiveWindowOpen } from 'vs/workbench/contrib/notebook/common/notebookContextKeys';\nimport { INotebookKernelService } from 'vs/workbench/contrib/notebook/common/notebookKernelService';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { columnToEditorGroup } from 'vs/workbench/services/editor/common/editorGroupColumn';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorResolverService, RegisteredEditorPriority } from 'vs/workbench/services/editor/common/editorResolverService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IWorkingCopyIdentifier } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { IWorkingCopyEditorHandler, IWorkingCopyEditorService } from 'vs/workbench/services/workingCopy/common/workingCopyEditorService';\n\nconst interactiveWindowCategory: ILocalizedString = { value: localize('interactiveWindow', 'Interactive Window'), original: 'Interactive Window' };\n\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tInteractiveEditor,\n\t\tINTERACTIVE_WINDOW_EDITOR_ID,\n\t\t'Interactive Window'\n\t),\n\t[\n\t\tnew SyncDescriptor(InteractiveEditorInput)\n\t]\n);\n\nexport class InteractiveDocumentContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@INotebookService notebookService: INotebookService,\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\n\t\tconst info = notebookService.getContributedNotebookType('interactive');\n\n\t\t// We need to contribute a notebook type for the Interactive Window to provide notebook models.\n\t\tif (!info) {\n\t\t\tthis._register(notebookService.registerContributedNotebookType('interactive', {\n\t\t\t\tproviderDisplayName: 'Interactive Notebook',\n\t\t\t\tdisplayName: 'Interactive',\n\t\t\t\tfilenamePattern: ['*.interactive'],\n\t\t\t\texclusive: true\n\t\t\t}));\n\t\t}\n\n\t\teditorResolverService.registerEditor(\n\t\t\t`${Schemas.vscodeInteractiveInput}:/**`,\n\t\t\t{\n\t\t\t\tid: 'vscode-interactive-input',\n\t\t\t\tlabel: 'Interactive Editor',\n\t\t\t\tpriority: RegisteredEditorPriority.exclusive\n\t\t\t},\n\t\t\t{\n\t\t\t\tcanSupportResource: uri => uri.scheme === Schemas.vscodeInteractiveInput,\n\t\t\t\tsinglePerResource: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource }) => {\n\t\t\t\t\tconst editorInput = editorService.getEditors(EditorsOrder.SEQUENTIAL).find(editor => editor.editor instanceof InteractiveEditorInput && editor.editor.inputResource.toString() === resource.toString());\n\t\t\t\t\treturn editorInput!;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\teditorResolverService.registerEditor(\n\t\t\t`*.interactive`,\n\t\t\t{\n\t\t\t\tid: 'interactive',\n\t\t\t\tlabel: 'Interactive Editor',\n\t\t\t\tpriority: RegisteredEditorPriority.exclusive\n\t\t\t},\n\t\t\t{\n\t\t\t\tcanSupportResource: uri =>\n\t\t\t\t\t(uri.scheme === Schemas.untitled && extname(uri) === '.interactive') ||\n\t\t\t\t\t(uri.scheme === Schemas.vscodeNotebookCell && extname(uri) === '.interactive'),\n\t\t\t\tsinglePerResource: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }) => {\n\t\t\t\t\tconst data = CellUri.parse(resource);\n\t\t\t\t\tlet cellOptions: IResourceEditorInput | undefined;\n\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tcellOptions = { resource, options };\n\t\t\t\t\t}\n\n\t\t\t\t\tconst notebookOptions = { ...options, cellOptions } as INotebookEditorOptions;\n\n\t\t\t\t\tconst editorInput = createEditor(resource, this.instantiationService);\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: editorInput,\n\t\t\t\t\t\toptions: notebookOptions\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcreateUntitledEditorInput: ({ resource, options }) => {\n\t\t\t\t\tif (!resource) {\n\t\t\t\t\t\tthrow new Error('Interactive window editors must have a resource name');\n\t\t\t\t\t}\n\t\t\t\t\tconst data = CellUri.parse(resource);\n\t\t\t\t\tlet cellOptions: IResourceEditorInput | undefined;\n\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tcellOptions = { resource, options };\n\t\t\t\t\t}\n\n\t\t\t\t\tconst notebookOptions = { ...options, cellOptions } as INotebookEditorOptions;\n\n\t\t\t\t\tconst editorInput = createEditor(resource, this.instantiationService);\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: editorInput,\n\t\t\t\t\t\toptions: notebookOptions\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\nclass InteractiveInputContentProvider implements ITextModelContentProvider {\n\n\tprivate readonly _registration: IDisposable;\n\n\tconstructor(\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t) {\n\t\tthis._registration = textModelService.registerTextModelContentProvider(Schemas.vscodeInteractiveInput, this);\n\t}\n\n\tdispose(): void {\n\t\tthis._registration.dispose();\n\t}\n\n\tasync provideTextContent(resource: URI): Promise<ITextModel | null> {\n\t\tconst existing = this._modelService.getModel(resource);\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\tconst result: ITextModel | null = this._modelService.createModel('', null, resource, false);\n\t\treturn result;\n\t}\n}\n\nfunction createEditor(resource: URI, instantiationService: IInstantiationService): EditorInput {\n\tconst counter = /\\/Interactive-(\\d+)/.exec(resource.path);\n\tconst inputBoxPath = counter && counter[1] ? `/InteractiveInput-${counter[1]}` : 'InteractiveInput';\n\tconst inputUri = URI.from({ scheme: Schemas.vscodeInteractiveInput, path: inputBoxPath });\n\tconst editorInput = InteractiveEditorInput.create(instantiationService, resource, inputUri);\n\n\treturn editorInput;\n}\n\nclass InteractiveWindowWorkingCopyEditorHandler extends Disposable implements IWorkbenchContribution, IWorkingCopyEditorHandler {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWorkingCopyEditorService private readonly _workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t) {\n\t\tsuper();\n\n\t\tthis._installHandler();\n\t}\n\n\thandles(workingCopy: IWorkingCopyIdentifier): boolean {\n\t\tconst viewType = this._getViewType(workingCopy);\n\t\treturn !!viewType && viewType === 'interactive';\n\n\t}\n\n\tisOpen(workingCopy: IWorkingCopyIdentifier, editor: EditorInput): boolean {\n\t\tif (!this.handles(workingCopy)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn editor instanceof InteractiveEditorInput && isEqual(workingCopy.resource, editor.resource);\n\t}\n\n\tcreateEditor(workingCopy: IWorkingCopyIdentifier): EditorInput {\n\t\treturn createEditor(workingCopy.resource, this._instantiationService);\n\t}\n\n\tprivate async _installHandler(): Promise<void> {\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\n\t\tthis._register(this._workingCopyEditorService.registerHandler(this));\n\t}\n\n\tprivate _getViewType(workingCopy: IWorkingCopyIdentifier): string | undefined {\n\t\treturn NotebookWorkingCopyTypeIdentifier.parse(workingCopy.typeId);\n\t}\n}\n\n\n\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchContributionsRegistry.registerWorkbenchContribution(InteractiveDocumentContribution, LifecyclePhase.Ready);\nworkbenchContributionsRegistry.registerWorkbenchContribution(InteractiveInputContentProvider, LifecyclePhase.Ready);\nworkbenchContributionsRegistry.registerWorkbenchContribution(InteractiveWindowWorkingCopyEditorHandler, LifecyclePhase.Ready);\n\ntype interactiveEditorInputData = { resource: URI; inputResource: URI; name: string; language: string };\n\nexport class InteractiveEditorSerializer implements IEditorSerializer {\n\tpublic static readonly ID = InteractiveEditorInput.ID;\n\n\tcanSerialize(editor: EditorInput): boolean {\n\t\tconst interactiveEditorInput = editor as InteractiveEditorInput;\n\t\treturn URI.isUri(interactiveEditorInput?.primary?.resource) && URI.isUri(interactiveEditorInput?.inputResource);\n\t}\n\n\tserialize(input: EditorInput): string {\n\t\tassertType(input instanceof InteractiveEditorInput);\n\t\treturn JSON.stringify({\n\t\t\tresource: input.primary.resource,\n\t\t\tinputResource: input.inputResource,\n\t\t\tname: input.getName(),\n\t\t\tlanguage: input.language\n\t\t});\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService, raw: string) {\n\t\tconst data = <interactiveEditorInputData>parse(raw);\n\t\tif (!data) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst { resource, inputResource, name, language } = data;\n\t\tif (!URI.isUri(resource) || !URI.isUri(inputResource)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst input = InteractiveEditorInput.create(instantiationService, resource, inputResource, name, language);\n\t\treturn input;\n\t}\n}\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory)\n\t.registerEditorSerializer(\n\t\tInteractiveEditorSerializer.ID,\n\t\tInteractiveEditorSerializer);\n\nregisterSingleton(IInteractiveHistoryService, InteractiveHistoryService, InstantiationType.Delayed);\nregisterSingleton(IInteractiveDocumentService, InteractiveDocumentService, InstantiationType.Delayed);\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: '_interactive.open',\n\t\t\ttitle: { value: localize('interactive.open', \"Open Interactive Window\"), original: 'Open Interactive Window' },\n\t\t\tf1: false,\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tdescription: {\n\t\t\t\tdescription: localize('interactive.open', \"Open Interactive Window\"),\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'showOptions',\n\t\t\t\t\t\tdescription: 'Show Options',\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t'viewColumn': {\n\t\t\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\t\t\tdefault: -1\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'preserveFocus': {\n\t\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\t\tdefault: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'resource',\n\t\t\t\t\t\tdescription: 'Interactive resource Uri',\n\t\t\t\t\t\tisOptional: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'controllerId',\n\t\t\t\t\t\tdescription: 'Notebook controller Id',\n\t\t\t\t\t\tisOptional: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'title',\n\t\t\t\t\t\tdescription: 'Notebook editor title',\n\t\t\t\t\t\tisOptional: true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, showOptions?: number | { viewColumn?: number; preserveFocus?: boolean }, resource?: URI, id?: string, title?: string): Promise<{ notebookUri: URI; inputUri: URI; notebookEditorId?: string }> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\tconst kernelService = accessor.get(INotebookKernelService);\n\t\tconst logService = accessor.get(ILogService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst group = columnToEditorGroup(editorGroupService, configurationService, typeof showOptions === 'number' ? showOptions : showOptions?.viewColumn);\n\t\tconst editorOptions = {\n\t\t\tactivation: EditorActivation.PRESERVE,\n\t\t\tpreserveFocus: typeof showOptions !== 'number' ? (showOptions?.preserveFocus ?? false) : false\n\t\t};\n\n\t\tif (resource && extname(resource) === '.interactive') {\n\t\t\tlogService.debug('Open interactive window from resource:', resource.toString());\n\t\t\tconst resourceUri = URI.revive(resource);\n\t\t\tconst editors = editorService.findEditors(resourceUri).filter(id => id.editor instanceof InteractiveEditorInput && id.editor.resource?.toString() === resourceUri.toString());\n\t\t\tif (editors.length) {\n\t\t\t\tlogService.debug('Find existing interactive window:', resource.toString());\n\t\t\t\tconst editorInput = editors[0].editor as InteractiveEditorInput;\n\t\t\t\tconst currentGroup = editors[0].groupId;\n\t\t\t\tconst editor = await editorService.openEditor(editorInput, editorOptions, currentGroup);\n\t\t\t\tconst editorControl = editor?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\t\t\treturn {\n\t\t\t\t\tnotebookUri: editorInput.resource!,\n\t\t\t\t\tinputUri: editorInput.inputResource,\n\t\t\t\t\tnotebookEditorId: editorControl?.notebookEditor?.getId()\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst existingNotebookDocument = new Set<string>();\n\t\teditorService.getEditors(EditorsOrder.SEQUENTIAL).forEach(editor => {\n\t\t\tif (editor.editor.resource) {\n\t\t\t\texistingNotebookDocument.add(editor.editor.resource.toString());\n\t\t\t}\n\t\t});\n\n\t\tlet notebookUri: URI | undefined = undefined;\n\t\tlet inputUri: URI | undefined = undefined;\n\t\tlet counter = 1;\n\t\tdo {\n\t\t\tnotebookUri = URI.from({ scheme: Schemas.untitled, path: `/Interactive-${counter}.interactive` });\n\t\t\tinputUri = URI.from({ scheme: Schemas.vscodeInteractiveInput, path: `/InteractiveInput-${counter}` });\n\n\t\t\tcounter++;\n\t\t} while (existingNotebookDocument.has(notebookUri.toString()));\n\t\tInteractiveEditorInput.setName(notebookUri, title);\n\n\t\tlogService.debug('Open new interactive window:', notebookUri.toString(), inputUri.toString());\n\n\t\tif (id) {\n\t\t\tconst allKernels = kernelService.getMatchingKernel({ uri: notebookUri, viewType: 'interactive' }).all;\n\t\t\tconst preferredKernel = allKernels.find(kernel => kernel.id === id);\n\t\t\tif (preferredKernel) {\n\t\t\t\tkernelService.preselectKernelForNotebook(preferredKernel, { uri: notebookUri, viewType: 'interactive' });\n\t\t\t}\n\t\t}\n\n\t\thistoryService.clearHistory(notebookUri);\n\t\tconst editorInput: IUntypedEditorInput = { resource: notebookUri, options: editorOptions };\n\t\tconst editorPane = await editorService.openEditor(editorInput, group);\n\t\tconst editorControl = editorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\t\t// Extensions must retain references to these URIs to manipulate the interactive editor\n\t\tlogService.debug('New interactive window opened. Notebook editor id', editorControl?.notebookEditor?.getId());\n\t\treturn { notebookUri, inputUri, notebookEditorId: editorControl?.notebookEditor?.getId() };\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.execute',\n\t\t\ttitle: { value: localize('interactive.execute', \"Execute Code\"), original: 'Execute Code' },\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tkeybinding: {\n\t\t\t\t// when: NOTEBOOK_CELL_LIST_FOCUSED,\n\t\t\t\twhen: ContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter,\n\t\t\t\twin: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Enter\n\t\t\t\t},\n\t\t\t\tweight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.InteractiveInputExecute\n\t\t\t\t}\n\t\t\t],\n\t\t\ticon: icons.executeIcon,\n\t\t\tf1: false,\n\t\t\tdescription: {\n\t\t\t\tdescription: 'Execute the Contents of the Input Box',\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'resource',\n\t\t\t\t\t\tdescription: 'Interactive resource Uri',\n\t\t\t\t\t\tisOptional: true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, context?: UriComponents): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst bulkEditService = accessor.get(IBulkEditService);\n\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\tconst notebookEditorService = accessor.get(INotebookEditorService);\n\t\tlet editorControl: { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\t\tif (context) {\n\t\t\tconst resourceUri = URI.revive(context);\n\t\t\tconst editors = editorService.findEditors(resourceUri)\n\t\t\t\t.filter(id => id.editor instanceof InteractiveEditorInput && id.editor.resource?.toString() === resourceUri.toString());\n\t\t\tif (editors.length) {\n\t\t\t\tconst editorInput = editors[0].editor as InteractiveEditorInput;\n\t\t\t\tconst currentGroup = editors[0].groupId;\n\t\t\t\tconst editor = await editorService.openEditor(editorInput, currentGroup);\n\t\t\t\teditorControl = editor?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\teditorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\t\t}\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\t\tconst textModel = editorControl.codeEditor.getModel();\n\t\t\tconst activeKernel = editorControl.notebookEditor.activeKernel;\n\t\t\tconst language = activeKernel?.supportedLanguages[0] ?? PLAINTEXT_LANGUAGE_ID;\n\n\t\t\tif (notebookDocument && textModel) {\n\t\t\t\tconst index = notebookDocument.length;\n\t\t\t\tconst value = textModel.getValue();\n\n\t\t\t\tif (isFalsyOrWhitespace(value)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\thistoryService.addToHistory(notebookDocument.uri, '');\n\t\t\t\ttextModel.setValue('');\n\n\t\t\t\tconst collapseState = editorControl.notebookEditor.notebookOptions.getLayoutConfiguration().interactiveWindowCollapseCodeCells === 'fromEditor' ?\n\t\t\t\t\t{\n\t\t\t\t\t\tinputCollapsed: false,\n\t\t\t\t\t\toutputCollapsed: false\n\t\t\t\t\t} :\n\t\t\t\t\tundefined;\n\n\t\t\t\tawait bulkEditService.apply([\n\t\t\t\t\tnew ResourceNotebookCellEdit(notebookDocument.uri,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\teditType: CellEditType.Replace,\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tcount: 0,\n\t\t\t\t\t\t\tcells: [{\n\t\t\t\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\t\t\t\tmime: undefined,\n\t\t\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\t\t\tsource: value,\n\t\t\t\t\t\t\t\toutputs: [],\n\t\t\t\t\t\t\t\tmetadata: {},\n\t\t\t\t\t\t\t\tcollapseState\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t]);\n\n\t\t\t\t// reveal the cell into view first\n\t\t\t\tconst range = { start: index, end: index + 1 };\n\t\t\t\teditorControl.notebookEditor.revealCellRangeInView(range);\n\t\t\t\tawait editorControl.notebookEditor.executeNotebookCells(editorControl.notebookEditor.getCellsInRange({ start: index, end: index + 1 }));\n\n\t\t\t\t// update the selection and focus in the extension host model\n\t\t\t\tconst editor = notebookEditorService.getNotebookEditor(editorControl.notebookEditor.getId());\n\t\t\t\tif (editor) {\n\t\t\t\t\teditor.setSelections([range]);\n\t\t\t\t\teditor.setFocus(range);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.input.clear',\n\t\t\ttitle: { value: localize('interactive.input.clear', \"Clear the interactive window input editor contents\"), original: 'Clear the interactive window input editor contents' },\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tf1: false\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\t\tconst textModel = editorControl.codeEditor.getModel();\n\t\t\tconst range = editorControl.codeEditor.getModel()?.getFullModelRange();\n\n\t\t\tif (notebookDocument && textModel && range) {\n\t\t\t\teditorControl.codeEditor.executeEdits('', [EditOperation.replace(range, null)]);\n\t\t\t}\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.history.previous',\n\t\t\ttitle: { value: localize('interactive.history.previous', \"Previous value in history\"), original: 'Previous value in history' },\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tf1: false,\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo('bottom'),\n\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo('none'),\n\t\t\t\t\tSuggestContext.Visible.toNegated()\n\t\t\t\t),\n\t\t\t\tprimary: KeyCode.UpArrow,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\t\tconst textModel = editorControl.codeEditor.getModel();\n\n\t\t\tif (notebookDocument && textModel) {\n\t\t\t\tconst previousValue = historyService.getPreviousValue(notebookDocument.uri);\n\t\t\t\tif (previousValue) {\n\t\t\t\t\ttextModel.setValue(previousValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.history.next',\n\t\t\ttitle: { value: localize('interactive.history.next', \"Next value in history\"), original: 'Next value in history' },\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tf1: false,\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo('top'),\n\t\t\t\t\tINTERACTIVE_INPUT_CURSOR_BOUNDARY.notEqualsTo('none'),\n\t\t\t\t\tSuggestContext.Visible.toNegated()\n\t\t\t\t),\n\t\t\t\tprimary: KeyCode.DownArrow,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst historyService = accessor.get(IInteractiveHistoryService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\tconst notebookDocument = editorControl.notebookEditor.textModel;\n\t\t\tconst textModel = editorControl.codeEditor.getModel();\n\n\t\t\tif (notebookDocument && textModel) {\n\t\t\t\tconst previousValue = historyService.getNextValue(notebookDocument.uri);\n\t\t\t\tif (previousValue) {\n\t\t\t\t\ttextModel.setValue(previousValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.scrollToTop',\n\t\t\ttitle: localize('interactiveScrollToTop', 'Scroll to Top'),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Home,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.UpArrow },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tcategory: interactiveWindowCategory,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\tif (editorControl.notebookEditor.getLength() === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditorControl.notebookEditor.revealCellRangeInView({ start: 0, end: 1 });\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.scrollToBottom',\n\t\t\ttitle: localize('interactiveScrollToBottom', 'Scroll to Bottom'),\n\t\t\tkeybinding: {\n\t\t\t\twhen: ContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.End,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.DownArrow },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tcategory: interactiveWindowCategory,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\tif (editorControl.notebookEditor.getLength() === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst len = editorControl.notebookEditor.getLength();\n\t\t\teditorControl.notebookEditor.revealCellRangeInView({ start: len - 1, end: len });\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.input.focus',\n\t\t\ttitle: { value: localize('interactive.input.focus', \"Focus Input Editor\"), original: 'Focus Input Editor' },\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: InteractiveWindowOpen,\n\t\t\t},\n\t\t\tprecondition: InteractiveWindowOpen,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\teditorService.activeEditorPane?.focus();\n\t\t}\n\t\telse {\n\t\t\t// find and open the most recent interactive window\n\t\t\tconst openEditors = editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\t\tconst interactiveWindow = Iterable.find(openEditors, identifier => { return identifier.editor.typeId === InteractiveEditorInput.ID; });\n\t\t\tif (interactiveWindow) {\n\t\t\t\tconst editorInput = interactiveWindow.editor as InteractiveEditorInput;\n\t\t\t\tconst currentGroup = interactiveWindow.groupId;\n\t\t\t\tconst editor = await editorService.openEditor(editorInput, currentGroup);\n\t\t\t\tconst editorControl = editor?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget } | undefined;\n\n\t\t\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\t\t\teditorService.activeEditorPane?.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'interactive.history.focus',\n\t\t\ttitle: { value: localize('interactive.history.focus', \"Focus History\"), original: 'Focus History' },\n\t\t\tcategory: interactiveWindowCategory,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\twhen: ContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t\t},\n\t\t\tprecondition: ContextKeyExpr.equals('activeEditor', 'workbench.editor.interactive'),\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst editorControl = editorService.activeEditorPane?.getControl() as { notebookEditor: NotebookEditorWidget | undefined; codeEditor: CodeEditorWidget; focusHistory: () => void } | undefined;\n\n\t\tif (editorControl && editorControl.notebookEditor && editorControl.codeEditor) {\n\t\t\teditorControl.notebookEditor.focus();\n\t\t}\n\t}\n});\n\nregisterThemingParticipant((theme) => {\n\tregisterColor('interactive.activeCodeBorder', {\n\t\tdark: theme.getColor(peekViewBorder) ?? '#007acc',\n\t\tlight: theme.getColor(peekViewBorder) ?? '#007acc',\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder\n\t}, localize('interactive.activeCodeBorder', 'The border color for the current interactive code cell when the editor has focus.'));\n\n\t// registerColor('interactive.activeCodeBackground', {\n\t// \tdark: (theme.getColor(peekViewEditorBackground) ?? Color.fromHex('#001F33')).transparent(0.25),\n\t// \tlight: (theme.getColor(peekViewEditorBackground) ?? Color.fromHex('#F2F8FC')).transparent(0.25),\n\t// \thc: Color.black\n\t// }, localize('interactive.activeCodeBackground', 'The background color for the current interactive code cell when the editor has focus.'));\n\n\tregisterColor('interactive.inactiveCodeBorder', {\n\t\tdark: theme.getColor(listInactiveSelectionBackground) ?? transparent(listInactiveSelectionBackground, 1),\n\t\tlight: theme.getColor(listInactiveSelectionBackground) ?? transparent(listInactiveSelectionBackground, 1),\n\t\thcDark: PANEL_BORDER,\n\t\thcLight: PANEL_BORDER\n\t}, localize('interactive.inactiveCodeBorder', 'The border color for the current interactive code cell when the editor does not have focus.'));\n\n\t// registerColor('interactive.inactiveCodeBackground', {\n\t// \tdark: (theme.getColor(peekViewResultsBackground) ?? Color.fromHex('#252526')).transparent(0.25),\n\t// \tlight: (theme.getColor(peekViewResultsBackground) ?? Color.fromHex('#F3F3F3')).transparent(0.25),\n\t// \thc: Color.black\n\t// }, localize('interactive.inactiveCodeBackground', 'The backgorund color for the current interactive code cell when the editor does not have focus.'));\n});\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'interactiveWindow',\n\torder: 100,\n\ttype: 'object',\n\t'properties': {\n\t\t[InteractiveWindowSetting.interactiveWindowAlwaysScrollOnNewCell]: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tmarkdownDescription: localize('interactiveWindow.alwaysScrollOnNewCell', \"Automatically scroll the interactive window to show the output of the last statement executed. If this value is false, the window will only scroll if the last cell was already the one scrolled to.\")\n\t\t}\n\t}\n});\n"]}