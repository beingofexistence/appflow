{"version":3,"sources":["vs/workbench/contrib/commands/common/commands.contribution.ts"],"names":[],"mappings":"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","file":"commands.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\n\ntype RunnableCommand = string | { command: string; args: any[] };\n\ntype CommandArgs = {\n\tcommands: RunnableCommand[];\n};\n\n/** Runs several commands passed to it as an argument */\nclass RunCommands extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'runCommands',\n\t\t\ttitle: { value: nls.localize('runCommands', \"Run Commands\"), original: 'Run Commands' },\n\t\t\tf1: false,\n\t\t\tdescription: {\n\t\t\t\tdescription: nls.localize('runCommands.description', \"Run several commands\"),\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'args',\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\trequired: ['commands'],\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tcommands: {\n\t\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\t\tdescription: nls.localize('runCommands.commands', \"Commands to run\"),\n\t\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$ref: 'vscode://schemas/keybindings#/definitions/commandNames'\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\t\t\t\t\trequired: ['command'],\n\t\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'anyOf': [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$ref: 'vscode://schemas/keybindings#/definitions/commandNames'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t$ref: 'vscode://schemas/keybindings#/definitions/commandsSchemas'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\t// dev decisions:\n\t// - this command takes a single argument-object because\n\t//\t- keybinding definitions don't allow running commands with several arguments\n\t//  - and we want to be able to take on different other arguments in future, e.g., `runMode : 'serial' | 'concurrent'`\n\tasync run(accessor: ServicesAccessor, args: unknown) {\n\n\t\tconst notificationService = accessor.get(INotificationService);\n\n\t\tif (!this._isCommandArgs(args)) {\n\t\t\tnotificationService.error(nls.localize('runCommands.invalidArgs', \"'runCommands' has received an argument with incorrect type. Please, review the argument passed to the command.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (args.commands.length === 0) {\n\t\t\tnotificationService.warn(nls.localize('runCommands.noCommandsToRun', \"'runCommands' has not received commands to run. Did you forget to pass commands in the 'runCommands' argument?\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst logService = accessor.get(ILogService);\n\n\t\tlet i = 0;\n\t\ttry {\n\t\t\tfor (; i < args.commands.length; ++i) {\n\n\t\t\t\tconst cmd = args.commands[i];\n\n\t\t\t\tlogService.debug(`runCommands: executing ${i}-th command: ${JSON.stringify(cmd)}`);\n\n\t\t\t\tconst r = await this._runCommand(commandService, cmd);\n\n\t\t\t\tlogService.debug(`runCommands: executed ${i}-th command with return value: ${JSON.stringify(r)}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tlogService.debug(`runCommands: executing ${i}-th command resulted in an error: ${err instanceof Error ? err.message : JSON.stringify(err)}`);\n\n\t\t\tnotificationService.error(err);\n\t\t}\n\t}\n\n\tprivate _isCommandArgs(args: unknown): args is CommandArgs {\n\t\tif (!args || typeof args !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\tif (!('commands' in args) || !Array.isArray(args.commands)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const cmd of args.commands) {\n\t\t\tif (typeof cmd === 'string') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof cmd === 'object' && typeof cmd.command === 'string') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate _runCommand(commandService: ICommandService, cmd: RunnableCommand) {\n\t\tlet commandID: string, commandArgs;\n\n\t\tif (typeof cmd === 'string') {\n\t\t\tcommandID = cmd;\n\t\t} else {\n\t\t\tcommandID = cmd.command;\n\t\t\tcommandArgs = cmd.args;\n\t\t}\n\n\t\tif (commandArgs === undefined) {\n\t\t\treturn commandService.executeCommand(commandID);\n\t\t} else {\n\t\t\tif (Array.isArray(commandArgs)) {\n\t\t\t\treturn commandService.executeCommand(commandID, ...commandArgs);\n\t\t\t} else {\n\t\t\t\treturn commandService.executeCommand(commandID, commandArgs);\n\t\t\t}\n\t\t}\n\t}\n}\n\nregisterAction2(RunCommands);\n"]}