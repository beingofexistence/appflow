{"version":3,"sources":["vs/workbench/contrib/accessibility/browser/accessibleViewActions.ts"],"names":[],"mappings":"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","file":"accessibleViewActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from 'vs/base/common/codicons';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Command, MultiCommand, ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { localize } from 'vs/nls';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { AccessibilityCommandId } from 'vs/workbench/contrib/accessibility/common/accessibilityCommands';\nimport { AccessibleViewProviderId, accessibilityHelpIsShown, accessibleViewCurrentProviderId, accessibleViewGoToSymbolSupported, accessibleViewIsShown, accessibleViewSupportsNavigation, accessibleViewVerbosityEnabled } from 'vs/workbench/contrib/accessibility/browser/accessibilityConfiguration';\nimport { IAccessibleViewService } from 'vs/workbench/contrib/accessibility/browser/accessibleView';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { InlineCompletionsController } from 'vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController';\nimport { alert } from 'vs/base/browser/ui/aria/aria';\n\nconst accessibleViewMenu = {\n\tid: MenuId.AccessibleView,\n\tgroup: 'navigation',\n\twhen: accessibleViewIsShown\n};\nconst commandPalette = {\n\tid: MenuId.CommandPalette,\n\tgroup: '',\n\torder: 1\n};\nclass AccessibleViewNextAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.ShowNext,\n\t\t\tprecondition: ContextKeyExpr.and(accessibleViewIsShown, accessibleViewSupportsNavigation),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketRight,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\tcommandPalette,\n\t\t\t\t{\n\t\t\t\t\t...accessibleViewMenu,\n\t\t\t\t\twhen: ContextKeyExpr.and(accessibleViewIsShown, accessibleViewSupportsNavigation),\n\t\t\t\t}],\n\t\t\ticon: Codicon.arrowDown,\n\t\t\ttitle: localize('editor.action.accessibleViewNext', \"Show Next in Accessible View\")\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IAccessibleViewService).next();\n\t}\n}\nregisterAction2(AccessibleViewNextAction);\n\n\nclass AccessibleViewPreviousAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.ShowPrevious,\n\t\t\tprecondition: ContextKeyExpr.and(accessibleViewIsShown, accessibleViewSupportsNavigation),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketLeft,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\ticon: Codicon.arrowUp,\n\t\t\tmenu: [\n\t\t\t\tcommandPalette,\n\t\t\t\t{\n\t\t\t\t\t...accessibleViewMenu,\n\t\t\t\t\twhen: ContextKeyExpr.and(accessibleViewIsShown, accessibleViewSupportsNavigation),\n\t\t\t\t}\n\t\t\t],\n\t\t\ttitle: localize('editor.action.accessibleViewPrevious', \"Show Previous in Accessible View\")\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IAccessibleViewService).previous();\n\t}\n}\nregisterAction2(AccessibleViewPreviousAction);\n\n\nclass AccessibleViewGoToSymbolAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.GoToSymbol,\n\t\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(accessibleViewIsShown, accessibilityHelpIsShown), accessibleViewGoToSymbolSupported),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyO,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Period],\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 10\n\t\t\t},\n\t\t\ticon: Codicon.symbolField,\n\t\t\tmenu: [\n\t\t\t\tcommandPalette,\n\t\t\t\t{\n\t\t\t\t\t...accessibleViewMenu,\n\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.or(accessibleViewIsShown, accessibilityHelpIsShown), accessibleViewGoToSymbolSupported),\n\t\t\t\t}\n\t\t\t],\n\t\t\ttitle: localize('editor.action.accessibleViewGoToSymbol', \"Go To Symbol in Accessible View\")\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IAccessibleViewService).goToSymbol();\n\t}\n}\nregisterAction2(AccessibleViewGoToSymbolAction);\n\nfunction registerCommand<T extends Command>(command: T): T {\n\tcommand.register();\n\treturn command;\n}\n\nexport const AccessibilityHelpAction = registerCommand(new MultiCommand({\n\tid: AccessibilityCommandId.OpenAccessibilityHelp,\n\tprecondition: undefined,\n\tkbOpts: {\n\t\tprimary: KeyMod.Alt | KeyCode.F1,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tlinux: {\n\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.F1,\n\t\t\tsecondary: [KeyMod.Alt | KeyCode.F1]\n\t\t}\n\t},\n\tmenuOpts: [{\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: localize('editor.action.accessibilityHelp', \"Open Accessibility Help\"),\n\t\torder: 1\n\t}],\n}));\n\n\nexport const AccessibleViewAction = registerCommand(new MultiCommand({\n\tid: AccessibilityCommandId.OpenAccessibleView,\n\tprecondition: undefined,\n\tkbOpts: {\n\t\tprimary: KeyMod.Alt | KeyCode.F2,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\tlinux: {\n\t\t\tprimary: KeyMod.Alt | KeyMod.Shift | KeyCode.F2,\n\t\t\tsecondary: [KeyMod.Alt | KeyCode.F2]\n\t\t}\n\t},\n\tmenuOpts: [{\n\t\tmenuId: MenuId.CommandPalette,\n\t\tgroup: '',\n\t\ttitle: localize('editor.action.accessibleView', \"Open Accessible View\"),\n\t\torder: 1\n\t}],\n}));\n\nclass AccessibleViewDisableHintAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.DisableVerbosityHint,\n\t\t\tprecondition: ContextKeyExpr.and(ContextKeyExpr.or(accessibleViewIsShown, accessibilityHelpIsShown), accessibleViewVerbosityEnabled),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.F6,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\ticon: Codicon.bellSlash,\n\t\t\tmenu: [\n\t\t\t\tcommandPalette,\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.AccessibleView,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.or(accessibleViewIsShown, accessibilityHelpIsShown), accessibleViewVerbosityEnabled),\n\t\t\t\t}\n\t\t\t],\n\t\t\ttitle: localize('editor.action.accessibleViewDisableHint', \"Disable Accessible View Hint\")\n\t\t});\n\t}\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IAccessibleViewService).disableHint();\n\t}\n}\nregisterAction2(AccessibleViewDisableHintAction);\n\nclass AccessibleViewAcceptInlineCompletionAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AccessibilityCommandId.AccessibleViewAcceptInlineCompletion,\n\t\t\tprecondition: ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.InlineCompletions)),\n\t\t\tkeybinding: {\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Slash,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Slash },\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t\t},\n\t\t\ticon: Codicon.check,\n\t\t\tmenu: [\n\t\t\t\tcommandPalette,\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.AccessibleView,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 0,\n\t\t\t\t\twhen: ContextKeyExpr.and(accessibleViewIsShown, ContextKeyExpr.equals(accessibleViewCurrentProviderId.key, AccessibleViewProviderId.InlineCompletions))\n\t\t\t\t}],\n\t\t\ttitle: localize('editor.action.accessibleViewAcceptInlineCompletionAction', \"Accept Inline Completion\")\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst codeEditorService = accessor.get(ICodeEditorService);\n\t\tconst editor = codeEditorService.getActiveCodeEditor() || codeEditorService.getFocusedCodeEditor();\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = InlineCompletionsController.get(editor)?.model.get();\n\t\tconst state = model?.state.get();\n\t\tif (!model || !state) {\n\t\t\treturn;\n\t\t}\n\t\tawait model.accept(editor);\n\t\talert('Accepted');\n\t\tmodel.stop();\n\t\teditor.focus();\n\t}\n}\nregisterAction2(AccessibleViewAcceptInlineCompletionAction);\n"]}