{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/tasks/test/common/taskConfiguration.test.ts"],"names":[],"mappings":"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","file":"taskConfiguration.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { URI } from 'vs/base/common/uri';\nimport * as assert from 'assert';\nimport Severity from 'vs/base/common/severity';\nimport * as UUID from 'vs/base/common/uuid';\n\nimport * as Types from 'vs/base/common/types';\nimport * as Platform from 'vs/base/common/platform';\nimport { ValidationStatus } from 'vs/base/common/parsers';\nimport { ProblemMatcher, FileLocationKind, IProblemPattern, ApplyToKind, INamedProblemMatcher } from 'vs/workbench/contrib/tasks/common/problemMatcher';\nimport { WorkspaceFolder, IWorkspace } from 'vs/platform/workspace/common/workspace';\n\nimport * as Tasks from 'vs/workbench/contrib/tasks/common/tasks';\nimport { parse, IParseResult, IProblemReporter, IExternalTaskRunnerConfiguration, ICustomTask, TaskConfigSource, IParseContext, ProblemMatcherConverter, IGlobals, ITaskParseResult, UUIDMap, TaskParser } from 'vs/workbench/contrib/tasks/common/taskConfiguration';\nimport { MockContextKeyService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { IContext } from 'vs/platform/contextkey/common/contextkey';\nimport { Workspace } from 'vs/platform/workspace/test/common/testWorkspace';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { ITaskDefinitionRegistry } from 'vs/workbench/contrib/tasks/common/taskDefinitionRegistry';\n\nconst workspaceFolder: WorkspaceFolder = new WorkspaceFolder({\n\turi: URI.file('/workspace/folderOne'),\n\tname: 'folderOne',\n\tindex: 0\n});\n\nconst workspace: IWorkspace = new Workspace('id', [workspaceFolder]);\n\nclass ProblemReporter implements IProblemReporter {\n\n\tprivate _validationStatus: ValidationStatus = new ValidationStatus();\n\n\tpublic receivedMessage: boolean = false;\n\tpublic lastMessage: string | undefined = undefined;\n\n\tpublic info(message: string): void {\n\t\tthis.log(message);\n\t}\n\n\tpublic warn(message: string): void {\n\t\tthis.log(message);\n\t}\n\n\tpublic error(message: string): void {\n\t\tthis.log(message);\n\t}\n\n\tpublic fatal(message: string): void {\n\t\tthis.log(message);\n\t}\n\n\tpublic get status(): ValidationStatus {\n\t\treturn this._validationStatus;\n\t}\n\n\tprivate log(message: string): void {\n\t\tthis.receivedMessage = true;\n\t\tthis.lastMessage = message;\n\t}\n\n\tpublic clearMessage(): void {\n\t\tthis.lastMessage = undefined;\n\t}\n}\n\nclass ConfigurationBuilder {\n\n\tpublic result: Tasks.Task[];\n\tprivate builders: CustomTaskBuilder[];\n\n\tconstructor() {\n\t\tthis.result = [];\n\t\tthis.builders = [];\n\t}\n\n\tpublic task(name: string, command: string): CustomTaskBuilder {\n\t\tconst builder = new CustomTaskBuilder(this, name, command);\n\t\tthis.builders.push(builder);\n\t\tthis.result.push(builder.result);\n\t\treturn builder;\n\t}\n\n\tpublic done(): void {\n\t\tfor (const builder of this.builders) {\n\t\t\tbuilder.done();\n\t\t}\n\t}\n}\n\nclass PresentationBuilder {\n\n\tpublic result: Tasks.IPresentationOptions;\n\n\tconstructor(public parent: CommandConfigurationBuilder) {\n\t\tthis.result = { echo: false, reveal: Tasks.RevealKind.Always, revealProblems: Tasks.RevealProblemKind.Never, focus: false, panel: Tasks.PanelKind.Shared, showReuseMessage: true, clear: false, close: false };\n\t}\n\n\tpublic echo(value: boolean): PresentationBuilder {\n\t\tthis.result.echo = value;\n\t\treturn this;\n\t}\n\n\tpublic reveal(value: Tasks.RevealKind): PresentationBuilder {\n\t\tthis.result.reveal = value;\n\t\treturn this;\n\t}\n\n\tpublic focus(value: boolean): PresentationBuilder {\n\t\tthis.result.focus = value;\n\t\treturn this;\n\t}\n\n\tpublic instance(value: Tasks.PanelKind): PresentationBuilder {\n\t\tthis.result.panel = value;\n\t\treturn this;\n\t}\n\n\tpublic showReuseMessage(value: boolean): PresentationBuilder {\n\t\tthis.result.showReuseMessage = value;\n\t\treturn this;\n\t}\n\n\tpublic close(value: boolean): PresentationBuilder {\n\t\tthis.result.close = value;\n\t\treturn this;\n\t}\n\n\tpublic done(): void {\n\t}\n}\n\nclass CommandConfigurationBuilder {\n\tpublic result: Tasks.ICommandConfiguration;\n\n\tprivate presentationBuilder: PresentationBuilder;\n\n\tconstructor(public parent: CustomTaskBuilder, command: string) {\n\t\tthis.presentationBuilder = new PresentationBuilder(this);\n\t\tthis.result = {\n\t\t\tname: command,\n\t\t\truntime: Tasks.RuntimeType.Process,\n\t\t\targs: [],\n\t\t\toptions: {\n\t\t\t\tcwd: '${workspaceFolder}'\n\t\t\t},\n\t\t\tpresentation: this.presentationBuilder.result,\n\t\t\tsuppressTaskName: false\n\t\t};\n\t}\n\n\tpublic name(value: string): CommandConfigurationBuilder {\n\t\tthis.result.name = value;\n\t\treturn this;\n\t}\n\n\tpublic runtime(value: Tasks.RuntimeType): CommandConfigurationBuilder {\n\t\tthis.result.runtime = value;\n\t\treturn this;\n\t}\n\n\tpublic args(value: string[]): CommandConfigurationBuilder {\n\t\tthis.result.args = value;\n\t\treturn this;\n\t}\n\n\tpublic options(value: Tasks.CommandOptions): CommandConfigurationBuilder {\n\t\tthis.result.options = value;\n\t\treturn this;\n\t}\n\n\tpublic taskSelector(value: string): CommandConfigurationBuilder {\n\t\tthis.result.taskSelector = value;\n\t\treturn this;\n\t}\n\n\tpublic suppressTaskName(value: boolean): CommandConfigurationBuilder {\n\t\tthis.result.suppressTaskName = value;\n\t\treturn this;\n\t}\n\n\tpublic presentation(): PresentationBuilder {\n\t\treturn this.presentationBuilder;\n\t}\n\n\tpublic done(taskName: string): void {\n\t\tthis.result.args = this.result.args!.map(arg => arg === '$name' ? taskName : arg);\n\t\tthis.presentationBuilder.done();\n\t}\n}\n\nclass CustomTaskBuilder {\n\n\tpublic result: Tasks.CustomTask;\n\tprivate commandBuilder: CommandConfigurationBuilder;\n\n\tconstructor(public parent: ConfigurationBuilder, name: string, command: string) {\n\t\tthis.commandBuilder = new CommandConfigurationBuilder(this, command);\n\t\tthis.result = new Tasks.CustomTask(\n\t\t\tname,\n\t\t\t{ kind: Tasks.TaskSourceKind.Workspace, label: 'workspace', config: { workspaceFolder: workspaceFolder, element: undefined, index: -1, file: '.vscode/tasks.json' } },\n\t\t\tname,\n\t\t\tTasks.CUSTOMIZED_TASK_TYPE,\n\t\t\tthis.commandBuilder.result,\n\t\t\tfalse,\n\t\t\t{ reevaluateOnRerun: true },\n\t\t\t{\n\t\t\t\tidentifier: name,\n\t\t\t\tname: name,\n\t\t\t\tisBackground: false,\n\t\t\t\tpromptOnClose: true,\n\t\t\t\tproblemMatchers: [],\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic identifier(value: string): CustomTaskBuilder {\n\t\tthis.result.configurationProperties.identifier = value;\n\t\treturn this;\n\t}\n\n\tpublic group(value: string | Tasks.TaskGroup): CustomTaskBuilder {\n\t\tthis.result.configurationProperties.group = value;\n\t\treturn this;\n\t}\n\n\tpublic isBackground(value: boolean): CustomTaskBuilder {\n\t\tthis.result.configurationProperties.isBackground = value;\n\t\treturn this;\n\t}\n\n\tpublic promptOnClose(value: boolean): CustomTaskBuilder {\n\t\tthis.result.configurationProperties.promptOnClose = value;\n\t\treturn this;\n\t}\n\n\tpublic problemMatcher(): ProblemMatcherBuilder {\n\t\tconst builder = new ProblemMatcherBuilder(this);\n\t\tthis.result.configurationProperties.problemMatchers!.push(builder.result);\n\t\treturn builder;\n\t}\n\n\tpublic command(): CommandConfigurationBuilder {\n\t\treturn this.commandBuilder;\n\t}\n\n\tpublic done(): void {\n\t\tthis.commandBuilder.done(this.result.configurationProperties.name!);\n\t}\n}\n\nclass ProblemMatcherBuilder {\n\n\tpublic static readonly DEFAULT_UUID = UUID.generateUuid();\n\n\tpublic result: ProblemMatcher;\n\n\tconstructor(public parent: CustomTaskBuilder) {\n\t\tthis.result = {\n\t\t\towner: ProblemMatcherBuilder.DEFAULT_UUID,\n\t\t\tapplyTo: ApplyToKind.allDocuments,\n\t\t\tseverity: undefined,\n\t\t\tfileLocation: FileLocationKind.Relative,\n\t\t\tfilePrefix: '${workspaceFolder}',\n\t\t\tpattern: undefined!\n\t\t};\n\t}\n\n\tpublic owner(value: string): ProblemMatcherBuilder {\n\t\tthis.result.owner = value;\n\t\treturn this;\n\t}\n\n\tpublic applyTo(value: ApplyToKind): ProblemMatcherBuilder {\n\t\tthis.result.applyTo = value;\n\t\treturn this;\n\t}\n\n\tpublic severity(value: Severity): ProblemMatcherBuilder {\n\t\tthis.result.severity = value;\n\t\treturn this;\n\t}\n\n\tpublic fileLocation(value: FileLocationKind): ProblemMatcherBuilder {\n\t\tthis.result.fileLocation = value;\n\t\treturn this;\n\t}\n\n\tpublic filePrefix(value: string): ProblemMatcherBuilder {\n\t\tthis.result.filePrefix = value;\n\t\treturn this;\n\t}\n\n\tpublic pattern(regExp: RegExp): PatternBuilder {\n\t\tconst builder = new PatternBuilder(this, regExp);\n\t\tif (!this.result.pattern) {\n\t\t\tthis.result.pattern = builder.result;\n\t\t}\n\t\treturn builder;\n\t}\n}\n\nclass PatternBuilder {\n\tpublic result: IProblemPattern;\n\n\tconstructor(public parent: ProblemMatcherBuilder, regExp: RegExp) {\n\t\tthis.result = {\n\t\t\tregexp: regExp,\n\t\t\tfile: 1,\n\t\t\tmessage: 0,\n\t\t\tline: 2,\n\t\t\tcharacter: 3\n\t\t};\n\t}\n\n\tpublic file(value: number): PatternBuilder {\n\t\tthis.result.file = value;\n\t\treturn this;\n\t}\n\n\tpublic message(value: number): PatternBuilder {\n\t\tthis.result.message = value;\n\t\treturn this;\n\t}\n\n\tpublic location(value: number): PatternBuilder {\n\t\tthis.result.location = value;\n\t\treturn this;\n\t}\n\n\tpublic line(value: number): PatternBuilder {\n\t\tthis.result.line = value;\n\t\treturn this;\n\t}\n\n\tpublic character(value: number): PatternBuilder {\n\t\tthis.result.character = value;\n\t\treturn this;\n\t}\n\n\tpublic endLine(value: number): PatternBuilder {\n\t\tthis.result.endLine = value;\n\t\treturn this;\n\t}\n\n\tpublic endCharacter(value: number): PatternBuilder {\n\t\tthis.result.endCharacter = value;\n\t\treturn this;\n\t}\n\n\tpublic code(value: number): PatternBuilder {\n\t\tthis.result.code = value;\n\t\treturn this;\n\t}\n\n\tpublic severity(value: number): PatternBuilder {\n\t\tthis.result.severity = value;\n\t\treturn this;\n\t}\n\n\tpublic loop(value: boolean): PatternBuilder {\n\t\tthis.result.loop = value;\n\t\treturn this;\n\t}\n}\n\nclass TasksMockContextKeyService extends MockContextKeyService {\n\tpublic override getContext(domNode: HTMLElement): IContext {\n\t\treturn {\n\t\t\tgetValue: <T>(_key: string) => {\n\t\t\t\treturn <T><unknown>true;\n\t\t\t}\n\t\t};\n\t}\n}\n\nfunction testDefaultProblemMatcher(external: IExternalTaskRunnerConfiguration, resolved: number) {\n\tconst reporter = new ProblemReporter();\n\tconst result = parse(workspaceFolder, workspace, Platform.platform, external, reporter, TaskConfigSource.TasksJson, new TasksMockContextKeyService());\n\tassert.ok(!reporter.receivedMessage);\n\tassert.strictEqual(result.custom.length, 1);\n\tconst task = result.custom[0];\n\tassert.ok(task);\n\tassert.strictEqual(task.configurationProperties.problemMatchers!.length, resolved);\n}\n\nfunction testConfiguration(external: IExternalTaskRunnerConfiguration, builder: ConfigurationBuilder): void {\n\tbuilder.done();\n\tconst reporter = new ProblemReporter();\n\tconst result = parse(workspaceFolder, workspace, Platform.platform, external, reporter, TaskConfigSource.TasksJson, new TasksMockContextKeyService());\n\tif (reporter.receivedMessage) {\n\t\tassert.ok(false, reporter.lastMessage);\n\t}\n\tassertConfiguration(result, builder.result);\n}\n\nclass TaskGroupMap {\n\tprivate _store: { [key: string]: Tasks.Task[] };\n\n\tconstructor() {\n\t\tthis._store = Object.create(null);\n\t}\n\n\tpublic add(group: string, task: Tasks.Task): void {\n\t\tlet tasks = this._store[group];\n\t\tif (!tasks) {\n\t\t\ttasks = [];\n\t\t\tthis._store[group] = tasks;\n\t\t}\n\t\ttasks.push(task);\n\t}\n\n\tpublic static assert(actual: TaskGroupMap, expected: TaskGroupMap): void {\n\t\tconst actualKeys = Object.keys(actual._store);\n\t\tconst expectedKeys = Object.keys(expected._store);\n\t\tif (actualKeys.length === 0 && expectedKeys.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tassert.strictEqual(actualKeys.length, expectedKeys.length);\n\t\tactualKeys.forEach(key => assert.ok(expected._store[key]));\n\t\texpectedKeys.forEach(key => actual._store[key]);\n\t\tactualKeys.forEach((key) => {\n\t\t\tconst actualTasks = actual._store[key];\n\t\t\tconst expectedTasks = expected._store[key];\n\t\t\tassert.strictEqual(actualTasks.length, expectedTasks.length);\n\t\t\tif (actualTasks.length === 1) {\n\t\t\t\tassert.strictEqual(actualTasks[0].configurationProperties.name, expectedTasks[0].configurationProperties.name);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst expectedTaskMap: { [key: string]: boolean } = Object.create(null);\n\t\t\texpectedTasks.forEach(task => expectedTaskMap[task.configurationProperties.name!] = true);\n\t\t\tactualTasks.forEach(task => delete expectedTaskMap[task.configurationProperties.name!]);\n\t\t\tassert.strictEqual(Object.keys(expectedTaskMap).length, 0);\n\t\t});\n\t}\n}\n\nfunction assertConfiguration(result: IParseResult, expected: Tasks.Task[]): void {\n\tassert.ok(result.validationStatus.isOK());\n\tconst actual = result.custom;\n\tassert.strictEqual(typeof actual, typeof expected);\n\tif (!actual) {\n\t\treturn;\n\t}\n\n\t// We can't compare Ids since the parser uses UUID which are random\n\t// So create a new map using the name.\n\tconst actualTasks: { [key: string]: Tasks.Task } = Object.create(null);\n\tconst actualId2Name: { [key: string]: string } = Object.create(null);\n\tconst actualTaskGroups = new TaskGroupMap();\n\tactual.forEach(task => {\n\t\tassert.ok(!actualTasks[task.configurationProperties.name!]);\n\t\tactualTasks[task.configurationProperties.name!] = task;\n\t\tactualId2Name[task._id] = task.configurationProperties.name!;\n\n\t\tconst taskId = Tasks.TaskGroup.from(task.configurationProperties.group)?._id;\n\t\tif (taskId) {\n\t\t\tactualTaskGroups.add(taskId, task);\n\t\t}\n\t});\n\tconst expectedTasks: { [key: string]: Tasks.Task } = Object.create(null);\n\tconst expectedTaskGroup = new TaskGroupMap();\n\texpected.forEach(task => {\n\t\tassert.ok(!expectedTasks[task.configurationProperties.name!]);\n\t\texpectedTasks[task.configurationProperties.name!] = task;\n\t\tconst taskId = Tasks.TaskGroup.from(task.configurationProperties.group)?._id;\n\t\tif (taskId) {\n\t\t\texpectedTaskGroup.add(taskId, task);\n\t\t}\n\t});\n\tconst actualKeys = Object.keys(actualTasks);\n\tassert.strictEqual(actualKeys.length, expected.length);\n\tactualKeys.forEach((key) => {\n\t\tconst actualTask = actualTasks[key];\n\t\tconst expectedTask = expectedTasks[key];\n\t\tassert.ok(expectedTask);\n\t\tassertTask(actualTask, expectedTask);\n\t});\n\tTaskGroupMap.assert(actualTaskGroups, expectedTaskGroup);\n}\n\nfunction assertTask(actual: Tasks.Task, expected: Tasks.Task) {\n\tassert.ok(actual._id);\n\tassert.strictEqual(actual.configurationProperties.name, expected.configurationProperties.name, 'name');\n\tif (!Tasks.InMemoryTask.is(actual) && !Tasks.InMemoryTask.is(expected)) {\n\t\tassertCommandConfiguration(actual.command, expected.command);\n\t}\n\tassert.strictEqual(actual.configurationProperties.isBackground, expected.configurationProperties.isBackground, 'isBackground');\n\tassert.strictEqual(typeof actual.configurationProperties.problemMatchers, typeof expected.configurationProperties.problemMatchers);\n\tassert.strictEqual(actual.configurationProperties.promptOnClose, expected.configurationProperties.promptOnClose, 'promptOnClose');\n\tassert.strictEqual(typeof actual.configurationProperties.group, typeof expected.configurationProperties.group, `group types unequal`);\n\n\tif (actual.configurationProperties.problemMatchers && expected.configurationProperties.problemMatchers) {\n\t\tassert.strictEqual(actual.configurationProperties.problemMatchers.length, expected.configurationProperties.problemMatchers.length);\n\t\tfor (let i = 0; i < actual.configurationProperties.problemMatchers.length; i++) {\n\t\t\tassertProblemMatcher(actual.configurationProperties.problemMatchers[i], expected.configurationProperties.problemMatchers[i]);\n\t\t}\n\t}\n\n\tif (actual.configurationProperties.group && expected.configurationProperties.group) {\n\t\tif (Types.isString(actual.configurationProperties.group)) {\n\t\t\tassert.strictEqual(actual.configurationProperties.group, expected.configurationProperties.group);\n\t\t} else {\n\t\t\tassertGroup(actual.configurationProperties.group as Tasks.TaskGroup, expected.configurationProperties.group as Tasks.TaskGroup);\n\t\t}\n\t}\n}\n\nfunction assertCommandConfiguration(actual: Tasks.ICommandConfiguration, expected: Tasks.ICommandConfiguration) {\n\tassert.strictEqual(typeof actual, typeof expected);\n\tif (actual && expected) {\n\t\tassertPresentation(actual.presentation!, expected.presentation!);\n\t\tassert.strictEqual(actual.name, expected.name, 'name');\n\t\tassert.strictEqual(actual.runtime, expected.runtime, 'runtime type');\n\t\tassert.strictEqual(actual.suppressTaskName, expected.suppressTaskName, 'suppressTaskName');\n\t\tassert.strictEqual(actual.taskSelector, expected.taskSelector, 'taskSelector');\n\t\tassert.deepStrictEqual(actual.args, expected.args, 'args');\n\t\tassert.strictEqual(typeof actual.options, typeof expected.options);\n\t\tif (actual.options && expected.options) {\n\t\t\tassert.strictEqual(actual.options.cwd, expected.options.cwd, 'cwd');\n\t\t\tassert.strictEqual(typeof actual.options.env, typeof expected.options.env, 'env');\n\t\t\tif (actual.options.env && expected.options.env) {\n\t\t\t\tassert.deepStrictEqual(actual.options.env, expected.options.env, 'env');\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction assertGroup(actual: Tasks.TaskGroup, expected: Tasks.TaskGroup) {\n\tassert.strictEqual(typeof actual, typeof expected);\n\tif (actual && expected) {\n\t\tassert.strictEqual(actual._id, expected._id, `group ids unequal. actual: ${actual._id} expected ${expected._id}`);\n\t\tassert.strictEqual(actual.isDefault, expected.isDefault, `group defaults unequal. actual: ${actual.isDefault} expected ${expected.isDefault}`);\n\t}\n}\n\nfunction assertPresentation(actual: Tasks.IPresentationOptions, expected: Tasks.IPresentationOptions) {\n\tassert.strictEqual(typeof actual, typeof expected);\n\tif (actual && expected) {\n\t\tassert.strictEqual(actual.echo, expected.echo);\n\t\tassert.strictEqual(actual.reveal, expected.reveal);\n\t}\n}\n\nfunction assertProblemMatcher(actual: string | ProblemMatcher, expected: string | ProblemMatcher) {\n\tassert.strictEqual(typeof actual, typeof expected);\n\tif (typeof actual === 'string' && typeof expected === 'string') {\n\t\tassert.strictEqual(actual, expected, 'Problem matcher references are different');\n\t\treturn;\n\t}\n\tif (typeof actual !== 'string' && typeof expected !== 'string') {\n\t\tif (expected.owner === ProblemMatcherBuilder.DEFAULT_UUID) {\n\t\t\tassert.ok(UUID.isUUID(actual.owner), 'Owner must be a UUID');\n\t\t} else {\n\t\t\tassert.strictEqual(actual.owner, expected.owner);\n\t\t}\n\t\tassert.strictEqual(actual.applyTo, expected.applyTo);\n\t\tassert.strictEqual(actual.severity, expected.severity);\n\t\tassert.strictEqual(actual.fileLocation, expected.fileLocation);\n\t\tassert.strictEqual(actual.filePrefix, expected.filePrefix);\n\t\tif (actual.pattern && expected.pattern) {\n\t\t\tassertProblemPatterns(actual.pattern, expected.pattern);\n\t\t}\n\t}\n}\n\nfunction assertProblemPatterns(actual: IProblemPattern | IProblemPattern[], expected: IProblemPattern | IProblemPattern[]) {\n\tassert.strictEqual(typeof actual, typeof expected);\n\tif (Array.isArray(actual)) {\n\t\tconst actuals = <IProblemPattern[]>actual;\n\t\tconst expecteds = <IProblemPattern[]>expected;\n\t\tassert.strictEqual(actuals.length, expecteds.length);\n\t\tfor (let i = 0; i < actuals.length; i++) {\n\t\t\tassertProblemPattern(actuals[i], expecteds[i]);\n\t\t}\n\t} else {\n\t\tassertProblemPattern(<IProblemPattern>actual, <IProblemPattern>expected);\n\t}\n}\n\nfunction assertProblemPattern(actual: IProblemPattern, expected: IProblemPattern) {\n\tassert.strictEqual(actual.regexp.toString(), expected.regexp.toString());\n\tassert.strictEqual(actual.file, expected.file);\n\tassert.strictEqual(actual.message, expected.message);\n\tif (typeof expected.location !== 'undefined') {\n\t\tassert.strictEqual(actual.location, expected.location);\n\t} else {\n\t\tassert.strictEqual(actual.line, expected.line);\n\t\tassert.strictEqual(actual.character, expected.character);\n\t\tassert.strictEqual(actual.endLine, expected.endLine);\n\t\tassert.strictEqual(actual.endCharacter, expected.endCharacter);\n\t}\n\tassert.strictEqual(actual.code, expected.code);\n\tassert.strictEqual(actual.severity, expected.severity);\n\tassert.strictEqual(actual.loop, expected.loop);\n}\n\nsuite('Tasks version 0.1.0', () => {\n\ttest('tasks: all default', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true);\n\t\ttestConfiguration(\n\t\t\t{\n\t\t\t\tversion: '0.1.0',\n\t\t\t\tcommand: 'tsc'\n\t\t\t}, builder);\n\t});\n\n\ttest('tasks: global isShellCommand', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\truntime(Tasks.RuntimeType.Shell);\n\t\ttestConfiguration(\n\t\t\t{\n\t\t\t\tversion: '0.1.0',\n\t\t\t\tcommand: 'tsc',\n\t\t\t\tisShellCommand: true\n\t\t\t},\n\t\t\tbuilder);\n\t});\n\n\ttest('tasks: global show output silent', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.\n\t\t\ttask('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\tpresentation().reveal(Tasks.RevealKind.Silent);\n\t\ttestConfiguration(\n\t\t\t{\n\t\t\t\tversion: '0.1.0',\n\t\t\t\tcommand: 'tsc',\n\t\t\t\tshowOutput: 'silent'\n\t\t\t},\n\t\t\tbuilder\n\t\t);\n\t});\n\n\ttest('tasks: global promptOnClose default', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true);\n\t\ttestConfiguration(\n\t\t\t{\n\t\t\t\tversion: '0.1.0',\n\t\t\t\tcommand: 'tsc',\n\t\t\t\tpromptOnClose: true\n\t\t\t},\n\t\t\tbuilder\n\t\t);\n\t});\n\n\ttest('tasks: global promptOnClose', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tpromptOnClose(false).\n\t\t\tcommand().suppressTaskName(true);\n\t\ttestConfiguration(\n\t\t\t{\n\t\t\t\tversion: '0.1.0',\n\t\t\t\tcommand: 'tsc',\n\t\t\t\tpromptOnClose: false\n\t\t\t},\n\t\t\tbuilder\n\t\t);\n\t});\n\n\ttest('tasks: global promptOnClose default watching', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tisBackground(true).\n\t\t\tpromptOnClose(false).\n\t\t\tcommand().suppressTaskName(true);\n\t\ttestConfiguration(\n\t\t\t{\n\t\t\t\tversion: '0.1.0',\n\t\t\t\tcommand: 'tsc',\n\t\t\t\tisWatching: true\n\t\t\t},\n\t\t\tbuilder\n\t\t);\n\t});\n\n\ttest('tasks: global show output never', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.\n\t\t\ttask('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\tpresentation().reveal(Tasks.RevealKind.Never);\n\t\ttestConfiguration(\n\t\t\t{\n\t\t\t\tversion: '0.1.0',\n\t\t\t\tcommand: 'tsc',\n\t\t\t\tshowOutput: 'never'\n\t\t\t},\n\t\t\tbuilder\n\t\t);\n\t});\n\n\ttest('tasks: global echo Command', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.\n\t\t\ttask('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\tpresentation().\n\t\t\techo(true);\n\t\ttestConfiguration(\n\t\t\t{\n\t\t\t\tversion: '0.1.0',\n\t\t\t\tcommand: 'tsc',\n\t\t\t\techoCommand: true\n\t\t\t},\n\t\t\tbuilder\n\t\t);\n\t});\n\n\ttest('tasks: global args', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.\n\t\t\ttask('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\targs(['--p']);\n\t\ttestConfiguration(\n\t\t\t{\n\t\t\t\tversion: '0.1.0',\n\t\t\t\tcommand: 'tsc',\n\t\t\t\targs: [\n\t\t\t\t\t'--p'\n\t\t\t\t]\n\t\t\t},\n\t\t\tbuilder\n\t\t);\n\t});\n\n\ttest('tasks: options - cwd', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.\n\t\t\ttask('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\toptions({\n\t\t\t\tcwd: 'myPath'\n\t\t\t});\n\t\ttestConfiguration(\n\t\t\t{\n\t\t\t\tversion: '0.1.0',\n\t\t\t\tcommand: 'tsc',\n\t\t\t\toptions: {\n\t\t\t\t\tcwd: 'myPath'\n\t\t\t\t}\n\t\t\t},\n\t\t\tbuilder\n\t\t);\n\t});\n\n\ttest('tasks: options - env', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.\n\t\t\ttask('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\toptions({ cwd: '${workspaceFolder}', env: { key: 'value' } });\n\t\ttestConfiguration(\n\t\t\t{\n\t\t\t\tversion: '0.1.0',\n\t\t\t\tcommand: 'tsc',\n\t\t\t\toptions: {\n\t\t\t\t\tenv: {\n\t\t\t\t\t\tkey: 'value'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tbuilder\n\t\t);\n\t});\n\n\ttest('tasks: os windows', () => {\n\t\tconst name: string = Platform.isWindows ? 'tsc.win' : 'tsc';\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.\n\t\t\ttask(name, name).\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true);\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\twindows: {\n\t\t\t\tcommand: 'tsc.win'\n\t\t\t}\n\t\t};\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: os windows & global isShellCommand', () => {\n\t\tconst name: string = Platform.isWindows ? 'tsc.win' : 'tsc';\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.\n\t\t\ttask(name, name).\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\truntime(Tasks.RuntimeType.Shell);\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\tisShellCommand: true,\n\t\t\twindows: {\n\t\t\t\tcommand: 'tsc.win'\n\t\t\t}\n\t\t};\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: os mac', () => {\n\t\tconst name: string = Platform.isMacintosh ? 'tsc.osx' : 'tsc';\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.\n\t\t\ttask(name, name).\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true);\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\tosx: {\n\t\t\t\tcommand: 'tsc.osx'\n\t\t\t}\n\t\t};\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: os linux', () => {\n\t\tconst name: string = Platform.isLinux ? 'tsc.linux' : 'tsc';\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.\n\t\t\ttask(name, name).\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true);\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\tlinux: {\n\t\t\t\tcommand: 'tsc.linux'\n\t\t\t}\n\t\t};\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: overwrite showOutput', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.\n\t\t\ttask('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\tpresentation().reveal(Platform.isWindows ? Tasks.RevealKind.Always : Tasks.RevealKind.Never);\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\tshowOutput: 'never',\n\t\t\twindows: {\n\t\t\t\tshowOutput: 'always'\n\t\t\t}\n\t\t};\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: overwrite echo Command', () => {\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.\n\t\t\ttask('tsc', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\tpresentation().\n\t\t\techo(Platform.isWindows ? false : true);\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\techoCommand: true,\n\t\t\twindows: {\n\t\t\t\techoCommand: false\n\t\t\t}\n\t\t};\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: global problemMatcher one', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\tproblemMatcher: '$msCompile'\n\t\t};\n\t\ttestDefaultProblemMatcher(external, 1);\n\t});\n\n\ttest('tasks: global problemMatcher two', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\tproblemMatcher: ['$eslint-compact', '$msCompile']\n\t\t};\n\t\ttestDefaultProblemMatcher(external, 2);\n\t});\n\n\ttest('tasks: task definition', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').command().args(['$name']);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: build task', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName',\n\t\t\t\t\tisBuildCommand: true\n\t\t\t\t} as ICustomTask\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').group(Tasks.TaskGroup.Build).command().args(['$name']);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: default build task', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'build'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('build', 'tsc').group(Tasks.TaskGroup.Build).command().args(['$name']);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: test task', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName',\n\t\t\t\t\tisTestCommand: true\n\t\t\t\t} as ICustomTask\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').group(Tasks.TaskGroup.Test).command().args(['$name']);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: default test task', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'test'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('test', 'tsc').group(Tasks.TaskGroup.Test).command().args(['$name']);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: task with values', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'test',\n\t\t\t\t\tshowOutput: 'never',\n\t\t\t\t\techoCommand: true,\n\t\t\t\t\targs: ['--p'],\n\t\t\t\t\tisWatching: true\n\t\t\t\t} as ICustomTask\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('test', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Test).\n\t\t\tisBackground(true).\n\t\t\tpromptOnClose(false).\n\t\t\tcommand().args(['$name', '--p']).\n\t\t\tpresentation().\n\t\t\techo(true).reveal(Tasks.RevealKind.Never);\n\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: task inherits global values', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\tshowOutput: 'never',\n\t\t\techoCommand: true,\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'test'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('test', 'tsc').\n\t\t\tgroup(Tasks.TaskGroup.Test).\n\t\t\tcommand().args(['$name']).presentation().\n\t\t\techo(true).reveal(Tasks.RevealKind.Never);\n\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: problem matcher default', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName',\n\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\tregexp: 'abc'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').\n\t\t\tcommand().args(['$name']).parent.\n\t\t\tproblemMatcher().pattern(/abc/);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: problem matcher .* regular expression', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName',\n\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\tregexp: '.*'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').\n\t\t\tcommand().args(['$name']).parent.\n\t\t\tproblemMatcher().pattern(/.*/);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: problem matcher owner, applyTo, severity and fileLocation', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName',\n\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\towner: 'myOwner',\n\t\t\t\t\t\tapplyTo: 'closedDocuments',\n\t\t\t\t\t\tseverity: 'warning',\n\t\t\t\t\t\tfileLocation: 'absolute',\n\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\tregexp: 'abc'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').\n\t\t\tcommand().args(['$name']).parent.\n\t\t\tproblemMatcher().\n\t\t\towner('myOwner').\n\t\t\tapplyTo(ApplyToKind.closedDocuments).\n\t\t\tseverity(Severity.Warning).\n\t\t\tfileLocation(FileLocationKind.Absolute).\n\t\t\tfilePrefix(undefined!).\n\t\t\tpattern(/abc/);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: problem matcher fileLocation and filePrefix', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName',\n\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\tfileLocation: ['relative', 'myPath'],\n\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\tregexp: 'abc'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').\n\t\t\tcommand().args(['$name']).parent.\n\t\t\tproblemMatcher().\n\t\t\tfileLocation(FileLocationKind.Relative).\n\t\t\tfilePrefix('myPath').\n\t\t\tpattern(/abc/);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: problem pattern location', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName',\n\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\tregexp: 'abc',\n\t\t\t\t\t\t\tfile: 10,\n\t\t\t\t\t\t\tmessage: 11,\n\t\t\t\t\t\t\tlocation: 12,\n\t\t\t\t\t\t\tseverity: 13,\n\t\t\t\t\t\t\tcode: 14\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').\n\t\t\tcommand().args(['$name']).parent.\n\t\t\tproblemMatcher().\n\t\t\tpattern(/abc/).file(10).message(11).location(12).severity(13).code(14);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: problem pattern line & column', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName',\n\t\t\t\t\tproblemMatcher: {\n\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\tregexp: 'abc',\n\t\t\t\t\t\t\tfile: 10,\n\t\t\t\t\t\t\tmessage: 11,\n\t\t\t\t\t\t\tline: 12,\n\t\t\t\t\t\t\tcolumn: 13,\n\t\t\t\t\t\t\tendLine: 14,\n\t\t\t\t\t\t\tendColumn: 15,\n\t\t\t\t\t\t\tseverity: 16,\n\t\t\t\t\t\t\tcode: 17\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').\n\t\t\tcommand().args(['$name']).parent.\n\t\t\tproblemMatcher().\n\t\t\tpattern(/abc/).file(10).message(11).\n\t\t\tline(12).character(13).endLine(14).endCharacter(15).\n\t\t\tseverity(16).code(17);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: prompt on close default', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').\n\t\t\tpromptOnClose(true).\n\t\t\tcommand().args(['$name']);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: prompt on close watching', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName',\n\t\t\t\t\tisWatching: true\n\t\t\t\t} as ICustomTask\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').\n\t\t\tisBackground(true).promptOnClose(false).\n\t\t\tcommand().args(['$name']);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: prompt on close set', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName',\n\t\t\t\t\tpromptOnClose: false\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').\n\t\t\tpromptOnClose(false).\n\t\t\tcommand().args(['$name']);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: task selector set', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttaskSelector: '/t:',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName',\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').\n\t\t\tcommand().\n\t\t\ttaskSelector('/t:').\n\t\t\targs(['/t:taskName']);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: suppress task name set', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\tsuppressTaskName: false,\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName',\n\t\t\t\t\tsuppressTaskName: true\n\t\t\t\t} as ICustomTask\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').\n\t\t\tcommand().suppressTaskName(true);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: suppress task name inherit', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\tsuppressTaskName: true,\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskName'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskName', 'tsc').\n\t\t\tcommand().suppressTaskName(true);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: two tasks', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskNameOne'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskNameTwo'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskNameOne', 'tsc').\n\t\t\tcommand().args(['$name']);\n\t\tbuilder.task('taskNameTwo', 'tsc').\n\t\t\tcommand().args(['$name']);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: with command', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskNameOne',\n\t\t\t\t\tcommand: 'tsc'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskNameOne', 'tsc').command().suppressTaskName(true);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: two tasks with command', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskNameOne',\n\t\t\t\t\tcommand: 'tsc'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskNameTwo',\n\t\t\t\t\tcommand: 'dir'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskNameOne', 'tsc').command().suppressTaskName(true);\n\t\tbuilder.task('taskNameTwo', 'dir').command().suppressTaskName(true);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: with command and args', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskNameOne',\n\t\t\t\t\tcommand: 'tsc',\n\t\t\t\t\tisShellCommand: true,\n\t\t\t\t\targs: ['arg'],\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tcwd: 'cwd',\n\t\t\t\t\t\tenv: {\n\t\t\t\t\t\t\tenv: 'env'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} as ICustomTask\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskNameOne', 'tsc').command().suppressTaskName(true).\n\t\t\truntime(Tasks.RuntimeType.Shell).args(['arg']).options({ cwd: 'cwd', env: { env: 'env' } });\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: with command os specific', () => {\n\t\tconst name: string = Platform.isWindows ? 'tsc.win' : 'tsc';\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskNameOne',\n\t\t\t\t\tcommand: 'tsc',\n\t\t\t\t\twindows: {\n\t\t\t\t\t\tcommand: 'tsc.win'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskNameOne', name).command().suppressTaskName(true);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: with Windows specific args', () => {\n\t\tconst args: string[] = Platform.isWindows ? ['arg1', 'arg2'] : ['arg1'];\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'tsc',\n\t\t\t\t\tcommand: 'tsc',\n\t\t\t\t\targs: ['arg1'],\n\t\t\t\t\twindows: {\n\t\t\t\t\t\targs: ['arg2']\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('tsc', 'tsc').command().suppressTaskName(true).args(args);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: with Linux specific args', () => {\n\t\tconst args: string[] = Platform.isLinux ? ['arg1', 'arg2'] : ['arg1'];\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'tsc',\n\t\t\t\t\tcommand: 'tsc',\n\t\t\t\t\targs: ['arg1'],\n\t\t\t\t\tlinux: {\n\t\t\t\t\t\targs: ['arg2']\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('tsc', 'tsc').command().suppressTaskName(true).args(args);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: global command and task command properties', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskNameOne',\n\t\t\t\t\tisShellCommand: true,\n\t\t\t\t} as ICustomTask\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskNameOne', 'tsc').command().runtime(Tasks.RuntimeType.Shell).args(['$name']);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: global and tasks args', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\targs: ['global'],\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskNameOne',\n\t\t\t\t\targs: ['local']\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskNameOne', 'tsc').command().args(['global', '$name', 'local']);\n\t\ttestConfiguration(external, builder);\n\t});\n\n\ttest('tasks: global and tasks args with task selector', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: 'tsc',\n\t\t\targs: ['global'],\n\t\t\ttaskSelector: '/t:',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'taskNameOne',\n\t\t\t\t\targs: ['local']\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('taskNameOne', 'tsc').command().taskSelector('/t:').args(['global', '/t:taskNameOne', 'local']);\n\t\ttestConfiguration(external, builder);\n\t});\n});\n\nsuite('Tasks version 2.0.0', () => {\n\ttest.skip('Build workspace task', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '2.0.0',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'dir',\n\t\t\t\t\tcommand: 'dir',\n\t\t\t\t\ttype: 'shell',\n\t\t\t\t\tgroup: 'build'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('dir', 'dir').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\truntime(Tasks.RuntimeType.Shell).\n\t\t\tpresentation().echo(true);\n\t\ttestConfiguration(external, builder);\n\t});\n\ttest('Global group none', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '2.0.0',\n\t\t\tcommand: 'dir',\n\t\t\ttype: 'shell',\n\t\t\tgroup: 'none'\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('dir', 'dir').\n\t\t\tcommand().suppressTaskName(true).\n\t\t\truntime(Tasks.RuntimeType.Shell).\n\t\t\tpresentation().echo(true);\n\t\ttestConfiguration(external, builder);\n\t});\n\ttest.skip('Global group build', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '2.0.0',\n\t\t\tcommand: 'dir',\n\t\t\ttype: 'shell',\n\t\t\tgroup: 'build'\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('dir', 'dir').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\truntime(Tasks.RuntimeType.Shell).\n\t\t\tpresentation().echo(true);\n\t\ttestConfiguration(external, builder);\n\t});\n\ttest.skip('Global group default build', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '2.0.0',\n\t\t\tcommand: 'dir',\n\t\t\ttype: 'shell',\n\t\t\tgroup: { kind: 'build', isDefault: true }\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tconst taskGroup = Tasks.TaskGroup.Build;\n\t\ttaskGroup.isDefault = true;\n\t\tbuilder.task('dir', 'dir').\n\t\t\tgroup(taskGroup).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\truntime(Tasks.RuntimeType.Shell).\n\t\t\tpresentation().echo(true);\n\t\ttestConfiguration(external, builder);\n\t});\n\ttest('Local group none', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '2.0.0',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'dir',\n\t\t\t\t\tcommand: 'dir',\n\t\t\t\t\ttype: 'shell',\n\t\t\t\t\tgroup: 'none'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('dir', 'dir').\n\t\t\tcommand().suppressTaskName(true).\n\t\t\truntime(Tasks.RuntimeType.Shell).\n\t\t\tpresentation().echo(true);\n\t\ttestConfiguration(external, builder);\n\t});\n\ttest.skip('Local group build', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '2.0.0',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'dir',\n\t\t\t\t\tcommand: 'dir',\n\t\t\t\t\ttype: 'shell',\n\t\t\t\t\tgroup: 'build'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('dir', 'dir').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\truntime(Tasks.RuntimeType.Shell).\n\t\t\tpresentation().echo(true);\n\t\ttestConfiguration(external, builder);\n\t});\n\ttest.skip('Local group default build', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '2.0.0',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'dir',\n\t\t\t\t\tcommand: 'dir',\n\t\t\t\t\ttype: 'shell',\n\t\t\t\t\tgroup: { kind: 'build', isDefault: true }\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tconst taskGroup = Tasks.TaskGroup.Build;\n\t\ttaskGroup.isDefault = true;\n\t\tbuilder.task('dir', 'dir').\n\t\t\tgroup(taskGroup).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\truntime(Tasks.RuntimeType.Shell).\n\t\t\tpresentation().echo(true);\n\t\ttestConfiguration(external, builder);\n\t});\n\ttest('Arg overwrite', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '2.0.0',\n\t\t\ttasks: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'echo',\n\t\t\t\t\ttype: 'shell',\n\t\t\t\t\tcommand: 'echo',\n\t\t\t\t\targs: [\n\t\t\t\t\t\t'global'\n\t\t\t\t\t],\n\t\t\t\t\twindows: {\n\t\t\t\t\t\targs: [\n\t\t\t\t\t\t\t'windows'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tlinux: {\n\t\t\t\t\t\targs: [\n\t\t\t\t\t\t\t'linux'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tosx: {\n\t\t\t\t\t\targs: [\n\t\t\t\t\t\t\t'osx'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tif (Platform.isWindows) {\n\t\t\tbuilder.task('echo', 'echo').\n\t\t\t\tcommand().suppressTaskName(true).args(['windows']).\n\t\t\t\truntime(Tasks.RuntimeType.Shell).\n\t\t\t\tpresentation().echo(true);\n\t\t\ttestConfiguration(external, builder);\n\t\t} else if (Platform.isLinux) {\n\t\t\tbuilder.task('echo', 'echo').\n\t\t\t\tcommand().suppressTaskName(true).args(['linux']).\n\t\t\t\truntime(Tasks.RuntimeType.Shell).\n\t\t\t\tpresentation().echo(true);\n\t\t\ttestConfiguration(external, builder);\n\t\t} else if (Platform.isMacintosh) {\n\t\t\tbuilder.task('echo', 'echo').\n\t\t\t\tcommand().suppressTaskName(true).args(['osx']).\n\t\t\t\truntime(Tasks.RuntimeType.Shell).\n\t\t\t\tpresentation().echo(true);\n\t\t\ttestConfiguration(external, builder);\n\t\t}\n\t});\n});\n\nsuite('Bugs / regression tests', () => {\n\t(Platform.isLinux ? test.skip : test)('Bug 19548', () => {\n\t\tconst external: IExternalTaskRunnerConfiguration = {\n\t\t\tversion: '0.1.0',\n\t\t\twindows: {\n\t\t\t\tcommand: 'powershell',\n\t\t\t\toptions: {\n\t\t\t\t\tcwd: '${workspaceFolder}'\n\t\t\t\t},\n\t\t\t\ttasks: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttaskName: 'composeForDebug',\n\t\t\t\t\t\tsuppressTaskName: true,\n\t\t\t\t\t\targs: [\n\t\t\t\t\t\t\t'-ExecutionPolicy',\n\t\t\t\t\t\t\t'RemoteSigned',\n\t\t\t\t\t\t\t'.\\\\dockerTask.ps1',\n\t\t\t\t\t\t\t'-ComposeForDebug',\n\t\t\t\t\t\t\t'-Environment',\n\t\t\t\t\t\t\t'debug'\n\t\t\t\t\t\t],\n\t\t\t\t\t\tisBuildCommand: false,\n\t\t\t\t\t\tshowOutput: 'always',\n\t\t\t\t\t\techoCommand: true\n\t\t\t\t\t} as ICustomTask\n\t\t\t\t]\n\t\t\t},\n\t\t\tosx: {\n\t\t\t\tcommand: '/bin/bash',\n\t\t\t\toptions: {\n\t\t\t\t\tcwd: '${workspaceFolder}'\n\t\t\t\t},\n\t\t\t\ttasks: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttaskName: 'composeForDebug',\n\t\t\t\t\t\tsuppressTaskName: true,\n\t\t\t\t\t\targs: [\n\t\t\t\t\t\t\t'-c',\n\t\t\t\t\t\t\t'./dockerTask.sh composeForDebug debug'\n\t\t\t\t\t\t],\n\t\t\t\t\t\tisBuildCommand: false,\n\t\t\t\t\t\tshowOutput: 'always'\n\t\t\t\t\t} as ICustomTask\n\t\t\t\t]\n\t\t\t}\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tif (Platform.isWindows) {\n\t\t\tbuilder.task('composeForDebug', 'powershell').\n\t\t\t\tcommand().suppressTaskName(true).\n\t\t\t\targs(['-ExecutionPolicy', 'RemoteSigned', '.\\\\dockerTask.ps1', '-ComposeForDebug', '-Environment', 'debug']).\n\t\t\t\toptions({ cwd: '${workspaceFolder}' }).\n\t\t\t\tpresentation().echo(true).reveal(Tasks.RevealKind.Always);\n\t\t\ttestConfiguration(external, builder);\n\t\t} else if (Platform.isMacintosh) {\n\t\t\tbuilder.task('composeForDebug', '/bin/bash').\n\t\t\t\tcommand().suppressTaskName(true).\n\t\t\t\targs(['-c', './dockerTask.sh composeForDebug debug']).\n\t\t\t\toptions({ cwd: '${workspaceFolder}' }).\n\t\t\t\tpresentation().reveal(Tasks.RevealKind.Always);\n\t\t\ttestConfiguration(external, builder);\n\t\t}\n\t});\n\n\ttest('Bug 28489', () => {\n\t\tconst external = {\n\t\t\tversion: '0.1.0',\n\t\t\tcommand: '',\n\t\t\tisShellCommand: true,\n\t\t\targs: [''],\n\t\t\tshowOutput: 'always',\n\t\t\t'tasks': [\n\t\t\t\t{\n\t\t\t\t\ttaskName: 'build',\n\t\t\t\t\tcommand: 'bash',\n\t\t\t\t\targs: [\n\t\t\t\t\t\t'build.sh'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tconst builder = new ConfigurationBuilder();\n\t\tbuilder.task('build', 'bash').\n\t\t\tgroup(Tasks.TaskGroup.Build).\n\t\t\tcommand().suppressTaskName(true).\n\t\t\targs(['build.sh']).\n\t\t\truntime(Tasks.RuntimeType.Shell);\n\t\ttestConfiguration(external, builder);\n\t});\n});\n\nclass TestNamedProblemMatcher implements Partial<ProblemMatcher> {\n}\n\nclass TestParseContext implements Partial<IParseContext> {\n}\n\nclass TestTaskDefinitionRegistry implements Partial<ITaskDefinitionRegistry> {\n\tprivate _task: Tasks.ITaskDefinition | undefined;\n\tpublic get(key: string): Tasks.ITaskDefinition {\n\t\treturn this._task!;\n\t}\n\tpublic set(task: Tasks.ITaskDefinition) {\n\t\tthis._task = task;\n\t}\n}\n\nsuite('Task configuration conversions', () => {\n\tconst globals = {} as IGlobals;\n\tconst taskConfigSource = {} as TaskConfigSource;\n\tconst TaskDefinitionRegistry = new TestTaskDefinitionRegistry();\n\tlet instantiationService: TestInstantiationService;\n\tlet parseContext: IParseContext;\n\tlet namedProblemMatcher: INamedProblemMatcher;\n\tlet problemReporter: ProblemReporter;\n\tsetup(() => {\n\t\tinstantiationService = new TestInstantiationService();\n\t\tnamedProblemMatcher = instantiationService.createInstance(TestNamedProblemMatcher);\n\t\tnamedProblemMatcher.name = 'real';\n\t\tnamedProblemMatcher.label = 'real label';\n\t\tproblemReporter = new ProblemReporter();\n\t\tparseContext = instantiationService.createInstance(TestParseContext);\n\t\tparseContext.problemReporter = problemReporter;\n\t\tparseContext.namedProblemMatchers = { 'real': namedProblemMatcher };\n\t\tparseContext.uuidMap = new UUIDMap();\n\t});\n\tteardown(() => {\n\t\tinstantiationService.dispose();\n\t});\n\tsuite('ProblemMatcherConverter.from', () => {\n\t\ttest('returns [] and an error for an unknown problem matcher', () => {\n\t\t\tconst result = (ProblemMatcherConverter.from('$fake', parseContext));\n\t\t\tassert.deepEqual(result.value, []);\n\t\t\tassert.strictEqual(result.errors?.length, 1);\n\t\t});\n\t\ttest('returns config for a known problem matcher', () => {\n\t\t\tconst result = (ProblemMatcherConverter.from('$real', parseContext));\n\t\t\tassert.strictEqual(result.errors?.length, 0);\n\t\t\tassert.deepEqual(result.value, [{ \"label\": \"real label\" }]);\n\t\t});\n\t\ttest('returns config for a known problem matcher including applyTo', () => {\n\t\t\tnamedProblemMatcher.applyTo = ApplyToKind.closedDocuments;\n\t\t\tconst result = (ProblemMatcherConverter.from('$real', parseContext));\n\t\t\tassert.strictEqual(result.errors?.length, 0);\n\t\t\tassert.deepEqual(result.value, [{ \"label\": \"real label\", \"applyTo\": ApplyToKind.closedDocuments }]);\n\t\t});\n\t});\n\tsuite('TaskParser.from', () => {\n\t\tsuite('CustomTask', () => {\n\t\t\tsuite('incomplete config reports an appropriate error for missing', () => {\n\t\t\t\ttest('name', () => {\n\t\t\t\t\tconst result = TaskParser.from([{} as ICustomTask], globals, parseContext, taskConfigSource);\n\t\t\t\t\tassertTaskParseResult(result, undefined, problemReporter, 'Error: a task must provide a label property');\n\t\t\t\t});\n\t\t\t\ttest('command', () => {\n\t\t\t\t\tconst result = TaskParser.from([{ taskName: 'task' } as ICustomTask], globals, parseContext, taskConfigSource);\n\t\t\t\t\tassertTaskParseResult(result, undefined, problemReporter, \"Error: the task 'task' doesn't define a command\");\n\t\t\t\t});\n\t\t\t});\n\t\t\ttest('returns expected result', () => {\n\t\t\t\tconst expected = [\n\t\t\t\t\t{ taskName: 'task', command: 'echo test' } as ICustomTask,\n\t\t\t\t\t{ taskName: 'task 2', command: 'echo test' } as ICustomTask\n\t\t\t\t];\n\t\t\t\tconst result = TaskParser.from(expected, globals, parseContext, taskConfigSource);\n\t\t\t\tassertTaskParseResult(result, { custom: expected }, problemReporter, undefined);\n\t\t\t});\n\t\t});\n\t\tsuite('ConfiguredTask', () => {\n\t\t\ttest('returns expected result', () => {\n\t\t\t\tconst expected = [{ taskName: 'task', command: 'echo test', type: 'any', label: 'task' }, { taskName: 'task 2', command: 'echo test', type: 'any', label: 'task 2' }];\n\t\t\t\tTaskDefinitionRegistry.set({ extensionId: 'registered', taskType: 'any', properties: {} } as Tasks.ITaskDefinition);\n\t\t\t\tconst result = TaskParser.from(expected, globals, parseContext, taskConfigSource, TaskDefinitionRegistry);\n\t\t\t\tassertTaskParseResult(result, { configured: expected }, problemReporter, undefined);\n\t\t\t});\n\t\t});\n\t});\n});\n\nfunction assertTaskParseResult(actual: ITaskParseResult, expected: ITestTaskParseResult | undefined, problemReporter: ProblemReporter, expectedMessage?: string): void {\n\tif (expectedMessage === undefined) {\n\t\tassert.strictEqual(problemReporter.lastMessage, undefined);\n\t} else {\n\t\tassert.ok(problemReporter.lastMessage?.includes(expectedMessage));\n\t}\n\n\tassert.deepEqual(actual.custom.length, expected?.custom?.length || 0);\n\tassert.deepEqual(actual.configured.length, expected?.configured?.length || 0);\n\n\tlet index = 0;\n\tif (expected?.configured) {\n\t\tfor (const taskParseResult of expected?.configured) {\n\t\t\tassert.strictEqual(actual.configured[index]._label, taskParseResult.label);\n\t\t\tindex++;\n\t\t}\n\t}\n\tindex = 0;\n\tif (expected?.custom) {\n\t\tfor (const taskParseResult of expected?.custom) {\n\t\t\tassert.strictEqual(actual.custom[index]._label, taskParseResult.taskName);\n\t\t\tindex++;\n\t\t}\n\t}\n\tproblemReporter.clearMessage();\n}\n\ninterface ITestTaskParseResult {\n\tcustom?: Partial<ICustomTask>[];\n\tconfigured?: Partial<ITestConfiguringTask>[];\n}\n\ninterface ITestConfiguringTask extends Partial<Tasks.ConfiguringTask> {\n\tlabel: string;\n}\n"]}