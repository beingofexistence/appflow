{"version":3,"sources":["vs/workbench/contrib/tasks/common/problemMatcher.ts"],"names":[],"mappings":"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","file":"problemMatcher.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\n\nimport * as Objects from 'vs/base/common/objects';\nimport * as Strings from 'vs/base/common/strings';\nimport * as Assert from 'vs/base/common/assert';\nimport { join, normalize } from 'vs/base/common/path';\nimport * as Types from 'vs/base/common/types';\nimport * as UUID from 'vs/base/common/uuid';\nimport * as Platform from 'vs/base/common/platform';\nimport Severity from 'vs/base/common/severity';\nimport { URI } from 'vs/base/common/uri';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { ValidationStatus, ValidationState, IProblemReporter, Parser } from 'vs/base/common/parsers';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { asArray } from 'vs/base/common/arrays';\nimport { Schemas as NetworkSchemas } from 'vs/base/common/network';\n\nimport { IMarkerData, MarkerSeverity } from 'vs/platform/markers/common/markers';\nimport { ExtensionsRegistry, ExtensionMessageCollector } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { FileType, IFileService, IFileStatWithPartialMetadata, IFileSystemProvider } from 'vs/platform/files/common/files';\n\nexport enum FileLocationKind {\n\tDefault,\n\tRelative,\n\tAbsolute,\n\tAutoDetect,\n\tSearch\n}\n\nexport module FileLocationKind {\n\texport function fromString(value: string): FileLocationKind | undefined {\n\t\tvalue = value.toLowerCase();\n\t\tif (value === 'absolute') {\n\t\t\treturn FileLocationKind.Absolute;\n\t\t} else if (value === 'relative') {\n\t\t\treturn FileLocationKind.Relative;\n\t\t} else if (value === 'autodetect') {\n\t\t\treturn FileLocationKind.AutoDetect;\n\t\t} else if (value === 'search') {\n\t\t\treturn FileLocationKind.Search;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nexport enum ProblemLocationKind {\n\tFile,\n\tLocation\n}\n\nexport module ProblemLocationKind {\n\texport function fromString(value: string): ProblemLocationKind | undefined {\n\t\tvalue = value.toLowerCase();\n\t\tif (value === 'file') {\n\t\t\treturn ProblemLocationKind.File;\n\t\t} else if (value === 'location') {\n\t\t\treturn ProblemLocationKind.Location;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nexport interface IProblemPattern {\n\tregexp: RegExp;\n\n\tkind?: ProblemLocationKind;\n\n\tfile?: number;\n\n\tmessage?: number;\n\n\tlocation?: number;\n\n\tline?: number;\n\n\tcharacter?: number;\n\n\tendLine?: number;\n\n\tendCharacter?: number;\n\n\tcode?: number;\n\n\tseverity?: number;\n\n\tloop?: boolean;\n}\n\nexport interface INamedProblemPattern extends IProblemPattern {\n\tname: string;\n}\n\nexport type MultiLineProblemPattern = IProblemPattern[];\n\nexport interface IWatchingPattern {\n\tregexp: RegExp;\n\tfile?: number;\n}\n\nexport interface IWatchingMatcher {\n\tactiveOnStart: boolean;\n\tbeginsPattern: IWatchingPattern;\n\tendsPattern: IWatchingPattern;\n}\n\nexport enum ApplyToKind {\n\tallDocuments,\n\topenDocuments,\n\tclosedDocuments\n}\n\nexport module ApplyToKind {\n\texport function fromString(value: string): ApplyToKind | undefined {\n\t\tvalue = value.toLowerCase();\n\t\tif (value === 'alldocuments') {\n\t\t\treturn ApplyToKind.allDocuments;\n\t\t} else if (value === 'opendocuments') {\n\t\t\treturn ApplyToKind.openDocuments;\n\t\t} else if (value === 'closeddocuments') {\n\t\t\treturn ApplyToKind.closedDocuments;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nexport interface ProblemMatcher {\n\towner: string;\n\tsource?: string;\n\tapplyTo: ApplyToKind;\n\tfileLocation: FileLocationKind;\n\tfilePrefix?: string | Config.SearchFileLocationArgs;\n\tpattern: IProblemPattern | IProblemPattern[];\n\tseverity?: Severity;\n\twatching?: IWatchingMatcher;\n\turiProvider?: (path: string) => URI;\n}\n\nexport interface INamedProblemMatcher extends ProblemMatcher {\n\tname: string;\n\tlabel: string;\n\tdeprecated?: boolean;\n}\n\nexport interface INamedMultiLineProblemPattern {\n\tname: string;\n\tlabel: string;\n\tpatterns: MultiLineProblemPattern;\n}\n\nexport function isNamedProblemMatcher(value: ProblemMatcher | undefined): value is INamedProblemMatcher {\n\treturn value && Types.isString((<INamedProblemMatcher>value).name) ? true : false;\n}\n\ninterface ILocation {\n\tstartLineNumber: number;\n\tstartCharacter: number;\n\tendLineNumber: number;\n\tendCharacter: number;\n}\n\ninterface IProblemData {\n\tkind?: ProblemLocationKind;\n\tfile?: string;\n\tlocation?: string;\n\tline?: string;\n\tcharacter?: string;\n\tendLine?: string;\n\tendCharacter?: string;\n\tmessage?: string;\n\tseverity?: string;\n\tcode?: string;\n}\n\nexport interface IProblemMatch {\n\tresource: Promise<URI>;\n\tmarker: IMarkerData;\n\tdescription: ProblemMatcher;\n}\n\nexport interface IHandleResult {\n\tmatch: IProblemMatch | null;\n\tcontinue: boolean;\n}\n\n\nexport async function getResource(filename: string, matcher: ProblemMatcher, fileService?: IFileService): Promise<URI> {\n\tconst kind = matcher.fileLocation;\n\tlet fullPath: string | undefined;\n\tif (kind === FileLocationKind.Absolute) {\n\t\tfullPath = filename;\n\t} else if ((kind === FileLocationKind.Relative) && matcher.filePrefix && Types.isString(matcher.filePrefix)) {\n\t\tfullPath = join(matcher.filePrefix, filename);\n\t} else if (kind === FileLocationKind.AutoDetect) {\n\t\tconst matcherClone = Objects.deepClone(matcher);\n\t\tmatcherClone.fileLocation = FileLocationKind.Relative;\n\t\tif (fileService) {\n\t\t\tconst relative = await getResource(filename, matcherClone);\n\t\t\tlet stat: IFileStatWithPartialMetadata | undefined = undefined;\n\t\t\ttry {\n\t\t\t\tstat = await fileService.stat(relative);\n\t\t\t} catch (ex) {\n\t\t\t\t// Do nothing, we just need to catch file resolution errors.\n\t\t\t}\n\t\t\tif (stat) {\n\t\t\t\treturn relative;\n\t\t\t}\n\t\t}\n\n\t\tmatcherClone.fileLocation = FileLocationKind.Absolute;\n\t\treturn getResource(filename, matcherClone);\n\t} else if (kind === FileLocationKind.Search && fileService) {\n\t\tconst fsProvider = fileService.getProvider(NetworkSchemas.file);\n\t\tif (fsProvider) {\n\t\t\tconst uri = await searchForFileLocation(filename, fsProvider, matcher.filePrefix as Config.SearchFileLocationArgs);\n\t\t\tfullPath = uri?.path;\n\t\t}\n\n\t\tif (!fullPath) {\n\t\t\tconst absoluteMatcher = Objects.deepClone(matcher);\n\t\t\tabsoluteMatcher.fileLocation = FileLocationKind.Absolute;\n\t\t\treturn getResource(filename, absoluteMatcher);\n\t\t}\n\t}\n\tif (fullPath === undefined) {\n\t\tthrow new Error('FileLocationKind is not actionable. Does the matcher have a filePrefix? This should never happen.');\n\t}\n\tfullPath = normalize(fullPath);\n\tfullPath = fullPath.replace(/\\\\/g, '/');\n\tif (fullPath[0] !== '/') {\n\t\tfullPath = '/' + fullPath;\n\t}\n\tif (matcher.uriProvider !== undefined) {\n\t\treturn matcher.uriProvider(fullPath);\n\t} else {\n\t\treturn URI.file(fullPath);\n\t}\n}\n\nasync function searchForFileLocation(filename: string, fsProvider: IFileSystemProvider, args: Config.SearchFileLocationArgs): Promise<URI | undefined> {\n\tconst exclusions = new Set(asArray(args.exclude || []).map(x => URI.file(x).path));\n\tasync function search(dir: URI): Promise<URI | undefined> {\n\t\tif (exclusions.has(dir.path)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst entries = await fsProvider.readdir(dir);\n\t\tconst subdirs: URI[] = [];\n\n\t\tfor (const [name, fileType] of entries) {\n\t\t\tif (fileType === FileType.Directory) {\n\t\t\t\tsubdirs.push(URI.joinPath(dir, name));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (fileType === FileType.File) {\n\t\t\t\t/**\n\t\t\t\t * Note that sometimes the given `filename` could be a relative\n\t\t\t\t * path (not just the \"name.ext\" part). For example, the\n\t\t\t\t * `filename` can be \"/subdir/name.ext\". So, just comparing\n\t\t\t\t * `name` as `filename` is not sufficient. The workaround here\n\t\t\t\t * is to form the URI with `dir` and `name` and check if it ends\n\t\t\t\t * with the given `filename`.\n\t\t\t\t */\n\t\t\t\tconst fullUri = URI.joinPath(dir, name);\n\t\t\t\tif (fullUri.path.endsWith(filename)) {\n\t\t\t\t\treturn fullUri;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const subdir of subdirs) {\n\t\t\tconst result = await search(subdir);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tfor (const dir of asArray(args.include || [])) {\n\t\tconst hit = await search(URI.file(dir));\n\t\tif (hit) {\n\t\t\treturn hit;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nexport interface ILineMatcher {\n\tmatchLength: number;\n\tnext(line: string): IProblemMatch | null;\n\thandle(lines: string[], start?: number): IHandleResult;\n}\n\nexport function createLineMatcher(matcher: ProblemMatcher, fileService?: IFileService): ILineMatcher {\n\tconst pattern = matcher.pattern;\n\tif (Array.isArray(pattern)) {\n\t\treturn new MultiLineMatcher(matcher, fileService);\n\t} else {\n\t\treturn new SingleLineMatcher(matcher, fileService);\n\t}\n}\n\nconst endOfLine: string = Platform.OS === Platform.OperatingSystem.Windows ? '\\r\\n' : '\\n';\n\nabstract class AbstractLineMatcher implements ILineMatcher {\n\tprivate matcher: ProblemMatcher;\n\tprivate fileService?: IFileService;\n\n\tconstructor(matcher: ProblemMatcher, fileService?: IFileService) {\n\t\tthis.matcher = matcher;\n\t\tthis.fileService = fileService;\n\t}\n\n\tpublic handle(lines: string[], start: number = 0): IHandleResult {\n\t\treturn { match: null, continue: false };\n\t}\n\n\tpublic next(line: string): IProblemMatch | null {\n\t\treturn null;\n\t}\n\n\tpublic abstract get matchLength(): number;\n\n\tprotected fillProblemData(data: IProblemData | undefined, pattern: IProblemPattern, matches: RegExpExecArray): data is IProblemData {\n\t\tif (data) {\n\t\t\tthis.fillProperty(data, 'file', pattern, matches, true);\n\t\t\tthis.appendProperty(data, 'message', pattern, matches, true);\n\t\t\tthis.fillProperty(data, 'code', pattern, matches, true);\n\t\t\tthis.fillProperty(data, 'severity', pattern, matches, true);\n\t\t\tthis.fillProperty(data, 'location', pattern, matches, true);\n\t\t\tthis.fillProperty(data, 'line', pattern, matches);\n\t\t\tthis.fillProperty(data, 'character', pattern, matches);\n\t\t\tthis.fillProperty(data, 'endLine', pattern, matches);\n\t\t\tthis.fillProperty(data, 'endCharacter', pattern, matches);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate appendProperty(data: IProblemData, property: keyof IProblemData, pattern: IProblemPattern, matches: RegExpExecArray, trim: boolean = false): void {\n\t\tconst patternProperty = pattern[property];\n\t\tif (Types.isUndefined(data[property])) {\n\t\t\tthis.fillProperty(data, property, pattern, matches, trim);\n\t\t}\n\t\telse if (!Types.isUndefined(patternProperty) && patternProperty < matches.length) {\n\t\t\tlet value = matches[patternProperty];\n\t\t\tif (trim) {\n\t\t\t\tvalue = Strings.trim(value)!;\n\t\t\t}\n\t\t\t(data as any)[property] += endOfLine + value;\n\t\t}\n\t}\n\n\tprivate fillProperty(data: IProblemData, property: keyof IProblemData, pattern: IProblemPattern, matches: RegExpExecArray, trim: boolean = false): void {\n\t\tconst patternAtProperty = pattern[property];\n\t\tif (Types.isUndefined(data[property]) && !Types.isUndefined(patternAtProperty) && patternAtProperty < matches.length) {\n\t\t\tlet value = matches[patternAtProperty];\n\t\t\tif (value !== undefined) {\n\t\t\t\tif (trim) {\n\t\t\t\t\tvalue = Strings.trim(value)!;\n\t\t\t\t}\n\t\t\t\t(data as any)[property] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getMarkerMatch(data: IProblemData): IProblemMatch | undefined {\n\t\ttry {\n\t\t\tconst location = this.getLocation(data);\n\t\t\tif (data.file && location && data.message) {\n\t\t\t\tconst marker: IMarkerData = {\n\t\t\t\t\tseverity: this.getSeverity(data),\n\t\t\t\t\tstartLineNumber: location.startLineNumber,\n\t\t\t\t\tstartColumn: location.startCharacter,\n\t\t\t\t\tendLineNumber: location.endLineNumber,\n\t\t\t\t\tendColumn: location.endCharacter,\n\t\t\t\t\tmessage: data.message\n\t\t\t\t};\n\t\t\t\tif (data.code !== undefined) {\n\t\t\t\t\tmarker.code = data.code;\n\t\t\t\t}\n\t\t\t\tif (this.matcher.source !== undefined) {\n\t\t\t\t\tmarker.source = this.matcher.source;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tdescription: this.matcher,\n\t\t\t\t\tresource: this.getResource(data.file),\n\t\t\t\t\tmarker: marker\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(`Failed to convert problem data into match: ${JSON.stringify(data)}`);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprotected getResource(filename: string): Promise<URI> {\n\t\treturn getResource(filename, this.matcher, this.fileService);\n\t}\n\n\tprivate getLocation(data: IProblemData): ILocation | null {\n\t\tif (data.kind === ProblemLocationKind.File) {\n\t\t\treturn this.createLocation(0, 0, 0, 0);\n\t\t}\n\t\tif (data.location) {\n\t\t\treturn this.parseLocationInfo(data.location);\n\t\t}\n\t\tif (!data.line) {\n\t\t\treturn null;\n\t\t}\n\t\tconst startLine = parseInt(data.line);\n\t\tconst startColumn = data.character ? parseInt(data.character) : undefined;\n\t\tconst endLine = data.endLine ? parseInt(data.endLine) : undefined;\n\t\tconst endColumn = data.endCharacter ? parseInt(data.endCharacter) : undefined;\n\t\treturn this.createLocation(startLine, startColumn, endLine, endColumn);\n\t}\n\n\tprivate parseLocationInfo(value: string): ILocation | null {\n\t\tif (!value || !value.match(/(\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)/)) {\n\t\t\treturn null;\n\t\t}\n\t\tconst parts = value.split(',');\n\t\tconst startLine = parseInt(parts[0]);\n\t\tconst startColumn = parts.length > 1 ? parseInt(parts[1]) : undefined;\n\t\tif (parts.length > 3) {\n\t\t\treturn this.createLocation(startLine, startColumn, parseInt(parts[2]), parseInt(parts[3]));\n\t\t} else {\n\t\t\treturn this.createLocation(startLine, startColumn, undefined, undefined);\n\t\t}\n\t}\n\n\tprivate createLocation(startLine: number, startColumn: number | undefined, endLine: number | undefined, endColumn: number | undefined): ILocation {\n\t\tif (startColumn !== undefined && endColumn !== undefined) {\n\t\t\treturn { startLineNumber: startLine, startCharacter: startColumn, endLineNumber: endLine || startLine, endCharacter: endColumn };\n\t\t}\n\t\tif (startColumn !== undefined) {\n\t\t\treturn { startLineNumber: startLine, startCharacter: startColumn, endLineNumber: startLine, endCharacter: startColumn };\n\t\t}\n\t\treturn { startLineNumber: startLine, startCharacter: 1, endLineNumber: startLine, endCharacter: 2 ** 31 - 1 }; // See https://github.com/microsoft/vscode/issues/80288#issuecomment-650636442 for discussion\n\t}\n\n\tprivate getSeverity(data: IProblemData): MarkerSeverity {\n\t\tlet result: Severity | null = null;\n\t\tif (data.severity) {\n\t\t\tconst value = data.severity;\n\t\t\tif (value) {\n\t\t\t\tresult = Severity.fromValue(value);\n\t\t\t\tif (result === Severity.Ignore) {\n\t\t\t\t\tif (value === 'E') {\n\t\t\t\t\t\tresult = Severity.Error;\n\t\t\t\t\t} else if (value === 'W') {\n\t\t\t\t\t\tresult = Severity.Warning;\n\t\t\t\t\t} else if (value === 'I') {\n\t\t\t\t\t\tresult = Severity.Info;\n\t\t\t\t\t} else if (Strings.equalsIgnoreCase(value, 'hint')) {\n\t\t\t\t\t\tresult = Severity.Info;\n\t\t\t\t\t} else if (Strings.equalsIgnoreCase(value, 'note')) {\n\t\t\t\t\t\tresult = Severity.Info;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (result === null || result === Severity.Ignore) {\n\t\t\tresult = this.matcher.severity || Severity.Error;\n\t\t}\n\t\treturn MarkerSeverity.fromSeverity(result);\n\t}\n}\n\nclass SingleLineMatcher extends AbstractLineMatcher {\n\n\tprivate pattern: IProblemPattern;\n\n\tconstructor(matcher: ProblemMatcher, fileService?: IFileService) {\n\t\tsuper(matcher, fileService);\n\t\tthis.pattern = <IProblemPattern>matcher.pattern;\n\t}\n\n\tpublic get matchLength(): number {\n\t\treturn 1;\n\t}\n\n\tpublic override handle(lines: string[], start: number = 0): IHandleResult {\n\t\tAssert.ok(lines.length - start === 1);\n\t\tconst data: IProblemData = Object.create(null);\n\t\tif (this.pattern.kind !== undefined) {\n\t\t\tdata.kind = this.pattern.kind;\n\t\t}\n\t\tconst matches = this.pattern.regexp.exec(lines[start]);\n\t\tif (matches) {\n\t\t\tthis.fillProblemData(data, this.pattern, matches);\n\t\t\tconst match = this.getMarkerMatch(data);\n\t\t\tif (match) {\n\t\t\t\treturn { match: match, continue: false };\n\t\t\t}\n\t\t}\n\t\treturn { match: null, continue: false };\n\t}\n\n\tpublic override next(line: string): IProblemMatch | null {\n\t\treturn null;\n\t}\n}\n\nclass MultiLineMatcher extends AbstractLineMatcher {\n\n\tprivate patterns: IProblemPattern[];\n\tprivate data: IProblemData | undefined;\n\n\tconstructor(matcher: ProblemMatcher, fileService?: IFileService) {\n\t\tsuper(matcher, fileService);\n\t\tthis.patterns = <IProblemPattern[]>matcher.pattern;\n\t}\n\n\tpublic get matchLength(): number {\n\t\treturn this.patterns.length;\n\t}\n\n\tpublic override handle(lines: string[], start: number = 0): IHandleResult {\n\t\tAssert.ok(lines.length - start === this.patterns.length);\n\t\tthis.data = Object.create(null);\n\t\tlet data = this.data!;\n\t\tdata.kind = this.patterns[0].kind;\n\t\tfor (let i = 0; i < this.patterns.length; i++) {\n\t\t\tconst pattern = this.patterns[i];\n\t\t\tconst matches = pattern.regexp.exec(lines[i + start]);\n\t\t\tif (!matches) {\n\t\t\t\treturn { match: null, continue: false };\n\t\t\t} else {\n\t\t\t\t// Only the last pattern can loop\n\t\t\t\tif (pattern.loop && i === this.patterns.length - 1) {\n\t\t\t\t\tdata = Objects.deepClone(data);\n\t\t\t\t}\n\t\t\t\tthis.fillProblemData(data, pattern, matches);\n\t\t\t}\n\t\t}\n\t\tconst loop = !!this.patterns[this.patterns.length - 1].loop;\n\t\tif (!loop) {\n\t\t\tthis.data = undefined;\n\t\t}\n\t\tconst markerMatch = data ? this.getMarkerMatch(data) : null;\n\t\treturn { match: markerMatch ? markerMatch : null, continue: loop };\n\t}\n\n\tpublic override next(line: string): IProblemMatch | null {\n\t\tconst pattern = this.patterns[this.patterns.length - 1];\n\t\tAssert.ok(pattern.loop === true && this.data !== null);\n\t\tconst matches = pattern.regexp.exec(line);\n\t\tif (!matches) {\n\t\t\tthis.data = undefined;\n\t\t\treturn null;\n\t\t}\n\t\tconst data = Objects.deepClone(this.data);\n\t\tlet problemMatch: IProblemMatch | undefined;\n\t\tif (this.fillProblemData(data, pattern, matches)) {\n\t\t\tproblemMatch = this.getMarkerMatch(data);\n\t\t}\n\t\treturn problemMatch ? problemMatch : null;\n\t}\n}\n\nexport namespace Config {\n\n\texport interface IProblemPattern {\n\n\t\t/**\n\t\t* The regular expression to find a problem in the console output of an\n\t\t* executed task.\n\t\t*/\n\t\tregexp?: string;\n\n\t\t/**\n\t\t* Whether the pattern matches a whole file, or a location (file/line)\n\t\t*\n\t\t* The default is to match for a location. Only valid on the\n\t\t* first problem pattern in a multi line problem matcher.\n\t\t*/\n\t\tkind?: string;\n\n\t\t/**\n\t\t* The match group index of the filename.\n\t\t* If omitted 1 is used.\n\t\t*/\n\t\tfile?: number;\n\n\t\t/**\n\t\t* The match group index of the problem's location. Valid location\n\t\t* patterns are: (line), (line,column) and (startLine,startColumn,endLine,endColumn).\n\t\t* If omitted the line and column properties are used.\n\t\t*/\n\t\tlocation?: number;\n\n\t\t/**\n\t\t* The match group index of the problem's line in the source file.\n\t\t*\n\t\t* Defaults to 2.\n\t\t*/\n\t\tline?: number;\n\n\t\t/**\n\t\t* The match group index of the problem's column in the source file.\n\t\t*\n\t\t* Defaults to 3.\n\t\t*/\n\t\tcolumn?: number;\n\n\t\t/**\n\t\t* The match group index of the problem's end line in the source file.\n\t\t*\n\t\t* Defaults to undefined. No end line is captured.\n\t\t*/\n\t\tendLine?: number;\n\n\t\t/**\n\t\t* The match group index of the problem's end column in the source file.\n\t\t*\n\t\t* Defaults to undefined. No end column is captured.\n\t\t*/\n\t\tendColumn?: number;\n\n\t\t/**\n\t\t* The match group index of the problem's severity.\n\t\t*\n\t\t* Defaults to undefined. In this case the problem matcher's severity\n\t\t* is used.\n\t\t*/\n\t\tseverity?: number;\n\n\t\t/**\n\t\t* The match group index of the problem's code.\n\t\t*\n\t\t* Defaults to undefined. No code is captured.\n\t\t*/\n\t\tcode?: number;\n\n\t\t/**\n\t\t* The match group index of the message. If omitted it defaults\n\t\t* to 4 if location is specified. Otherwise it defaults to 5.\n\t\t*/\n\t\tmessage?: number;\n\n\t\t/**\n\t\t* Specifies if the last pattern in a multi line problem matcher should\n\t\t* loop as long as it does match a line consequently. Only valid on the\n\t\t* last problem pattern in a multi line problem matcher.\n\t\t*/\n\t\tloop?: boolean;\n\t}\n\n\texport interface ICheckedProblemPattern extends IProblemPattern {\n\t\t/**\n\t\t* The regular expression to find a problem in the console output of an\n\t\t* executed task.\n\t\t*/\n\t\tregexp: string;\n\t}\n\n\texport namespace CheckedProblemPattern {\n\t\texport function is(value: any): value is ICheckedProblemPattern {\n\t\t\tconst candidate: IProblemPattern = value as IProblemPattern;\n\t\t\treturn candidate && Types.isString(candidate.regexp);\n\t\t}\n\t}\n\n\texport interface INamedProblemPattern extends IProblemPattern {\n\t\t/**\n\t\t * The name of the problem pattern.\n\t\t */\n\t\tname: string;\n\n\t\t/**\n\t\t * A human readable label\n\t\t */\n\t\tlabel?: string;\n\t}\n\n\texport namespace NamedProblemPattern {\n\t\texport function is(value: any): value is INamedProblemPattern {\n\t\t\tconst candidate: INamedProblemPattern = value as INamedProblemPattern;\n\t\t\treturn candidate && Types.isString(candidate.name);\n\t\t}\n\t}\n\n\texport interface INamedCheckedProblemPattern extends INamedProblemPattern {\n\t\t/**\n\t\t* The regular expression to find a problem in the console output of an\n\t\t* executed task.\n\t\t*/\n\t\tregexp: string;\n\t}\n\n\texport namespace NamedCheckedProblemPattern {\n\t\texport function is(value: any): value is INamedCheckedProblemPattern {\n\t\t\tconst candidate: INamedProblemPattern = value as INamedProblemPattern;\n\t\t\treturn candidate && NamedProblemPattern.is(candidate) && Types.isString(candidate.regexp);\n\t\t}\n\t}\n\n\texport type MultiLineProblemPattern = IProblemPattern[];\n\n\texport namespace MultiLineProblemPattern {\n\t\texport function is(value: any): value is MultiLineProblemPattern {\n\t\t\treturn value && Array.isArray(value);\n\t\t}\n\t}\n\n\texport type MultiLineCheckedProblemPattern = ICheckedProblemPattern[];\n\n\texport namespace MultiLineCheckedProblemPattern {\n\t\texport function is(value: any): value is MultiLineCheckedProblemPattern {\n\t\t\tif (!MultiLineProblemPattern.is(value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (const element of value) {\n\t\t\t\tif (!Config.CheckedProblemPattern.is(element)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\texport interface INamedMultiLineCheckedProblemPattern {\n\t\t/**\n\t\t * The name of the problem pattern.\n\t\t */\n\t\tname: string;\n\n\t\t/**\n\t\t * A human readable label\n\t\t */\n\t\tlabel?: string;\n\n\t\t/**\n\t\t * The actual patterns\n\t\t */\n\t\tpatterns: MultiLineCheckedProblemPattern;\n\t}\n\n\texport namespace NamedMultiLineCheckedProblemPattern {\n\t\texport function is(value: any): value is INamedMultiLineCheckedProblemPattern {\n\t\t\tconst candidate = value as INamedMultiLineCheckedProblemPattern;\n\t\t\treturn candidate && Types.isString(candidate.name) && Array.isArray(candidate.patterns) && MultiLineCheckedProblemPattern.is(candidate.patterns);\n\t\t}\n\t}\n\n\texport type NamedProblemPatterns = (Config.INamedProblemPattern | Config.INamedMultiLineCheckedProblemPattern)[];\n\n\t/**\n\t* A watching pattern\n\t*/\n\texport interface IWatchingPattern {\n\t\t/**\n\t\t* The actual regular expression\n\t\t*/\n\t\tregexp?: string;\n\n\t\t/**\n\t\t* The match group index of the filename. If provided the expression\n\t\t* is matched for that file only.\n\t\t*/\n\t\tfile?: number;\n\t}\n\n\t/**\n\t* A description to track the start and end of a watching task.\n\t*/\n\texport interface IBackgroundMonitor {\n\n\t\t/**\n\t\t* If set to true the watcher is in active mode when the task\n\t\t* starts. This is equals of issuing a line that matches the\n\t\t* beginsPattern.\n\t\t*/\n\t\tactiveOnStart?: boolean;\n\n\t\t/**\n\t\t* If matched in the output the start of a watching task is signaled.\n\t\t*/\n\t\tbeginsPattern?: string | IWatchingPattern;\n\n\t\t/**\n\t\t* If matched in the output the end of a watching task is signaled.\n\t\t*/\n\t\tendsPattern?: string | IWatchingPattern;\n\t}\n\n\t/**\n\t* A description of a problem matcher that detects problems\n\t* in build output.\n\t*/\n\texport interface ProblemMatcher {\n\n\t\t/**\n\t\t * The name of a base problem matcher to use. If specified the\n\t\t * base problem matcher will be used as a template and properties\n\t\t * specified here will replace properties of the base problem\n\t\t * matcher\n\t\t */\n\t\tbase?: string;\n\n\t\t/**\n\t\t * The owner of the produced VSCode problem. This is typically\n\t\t * the identifier of a VSCode language service if the problems are\n\t\t * to be merged with the one produced by the language service\n\t\t * or a generated internal id. Defaults to the generated internal id.\n\t\t */\n\t\towner?: string;\n\n\t\t/**\n\t\t * A human-readable string describing the source of this problem.\n\t\t * E.g. 'typescript' or 'super lint'.\n\t\t */\n\t\tsource?: string;\n\n\t\t/**\n\t\t* Specifies to which kind of documents the problems found by this\n\t\t* matcher are applied. Valid values are:\n\t\t*\n\t\t*   \"allDocuments\": problems found in all documents are applied.\n\t\t*   \"openDocuments\": problems found in documents that are open\n\t\t*   are applied.\n\t\t*   \"closedDocuments\": problems found in closed documents are\n\t\t*   applied.\n\t\t*/\n\t\tapplyTo?: string;\n\n\t\t/**\n\t\t* The severity of the VSCode problem produced by this problem matcher.\n\t\t*\n\t\t* Valid values are:\n\t\t*   \"error\": to produce errors.\n\t\t*   \"warning\": to produce warnings.\n\t\t*   \"info\": to produce infos.\n\t\t*\n\t\t* The value is used if a pattern doesn't specify a severity match group.\n\t\t* Defaults to \"error\" if omitted.\n\t\t*/\n\t\tseverity?: string;\n\n\t\t/**\n\t\t* Defines how filename reported in a problem pattern\n\t\t* should be read. Valid values are:\n\t\t*  - \"absolute\": the filename is always treated absolute.\n\t\t*  - \"relative\": the filename is always treated relative to\n\t\t*    the current working directory. This is the default.\n\t\t*  - [\"relative\", \"path value\"]: the filename is always\n\t\t*    treated relative to the given path value.\n\t\t*  - \"autodetect\": the filename is treated relative to\n\t\t*    the current workspace directory, and if the file\n\t\t*    does not exist, it is treated as absolute.\n\t\t*  - [\"autodetect\", \"path value\"]: the filename is treated\n\t\t*    relative to the given path value, and if it does not\n\t\t*    exist, it is treated as absolute.\n\t\t*  - [\"search\", { include?: \"\" | []; exclude?: \"\" | [] }]: The filename\n\t\t*    needs to be searched under the directories named by the \"include\"\n\t\t*    property and their nested subdirectories. With \"exclude\" property\n\t\t*    present, the directories should be removed from the search. When\n\t\t*    `include` is not unprovided, the current workspace directory should\n\t\t*    be used as the default.\n\t\t*/\n\t\tfileLocation?: string | string[] | ['search', SearchFileLocationArgs];\n\n\t\t/**\n\t\t* The name of a predefined problem pattern, the inline definition\n\t\t* of a problem pattern or an array of problem patterns to match\n\t\t* problems spread over multiple lines.\n\t\t*/\n\t\tpattern?: string | IProblemPattern | IProblemPattern[];\n\n\t\t/**\n\t\t* A regular expression signaling that a watched tasks begins executing\n\t\t* triggered through file watching.\n\t\t*/\n\t\twatchedTaskBeginsRegExp?: string;\n\n\t\t/**\n\t\t* A regular expression signaling that a watched tasks ends executing.\n\t\t*/\n\t\twatchedTaskEndsRegExp?: string;\n\n\t\t/**\n\t\t * @deprecated Use background instead.\n\t\t */\n\t\twatching?: IBackgroundMonitor;\n\t\tbackground?: IBackgroundMonitor;\n\t}\n\n\texport type SearchFileLocationArgs = {\n\t\tinclude?: string | string[];\n\t\texclude?: string | string[];\n\t};\n\n\texport type ProblemMatcherType = string | ProblemMatcher | Array<string | ProblemMatcher>;\n\n\texport interface INamedProblemMatcher extends ProblemMatcher {\n\t\t/**\n\t\t* This name can be used to refer to the\n\t\t* problem matcher from within a task.\n\t\t*/\n\t\tname: string;\n\n\t\t/**\n\t\t * A human readable label.\n\t\t */\n\t\tlabel?: string;\n\t}\n\n\texport function isNamedProblemMatcher(value: ProblemMatcher): value is INamedProblemMatcher {\n\t\treturn Types.isString((<INamedProblemMatcher>value).name);\n\t}\n}\n\nexport class ProblemPatternParser extends Parser {\n\n\tconstructor(logger: IProblemReporter) {\n\t\tsuper(logger);\n\t}\n\n\tpublic parse(value: Config.IProblemPattern): IProblemPattern;\n\tpublic parse(value: Config.MultiLineProblemPattern): MultiLineProblemPattern;\n\tpublic parse(value: Config.INamedProblemPattern): INamedProblemPattern;\n\tpublic parse(value: Config.INamedMultiLineCheckedProblemPattern): INamedMultiLineProblemPattern;\n\tpublic parse(value: Config.IProblemPattern | Config.MultiLineProblemPattern | Config.INamedProblemPattern | Config.INamedMultiLineCheckedProblemPattern): any {\n\t\tif (Config.NamedMultiLineCheckedProblemPattern.is(value)) {\n\t\t\treturn this.createNamedMultiLineProblemPattern(value);\n\t\t} else if (Config.MultiLineCheckedProblemPattern.is(value)) {\n\t\t\treturn this.createMultiLineProblemPattern(value);\n\t\t} else if (Config.NamedCheckedProblemPattern.is(value)) {\n\t\t\tconst result = this.createSingleProblemPattern(value) as INamedProblemPattern;\n\t\t\tresult.name = value.name;\n\t\t\treturn result;\n\t\t} else if (Config.CheckedProblemPattern.is(value)) {\n\t\t\treturn this.createSingleProblemPattern(value);\n\t\t} else {\n\t\t\tthis.error(localize('ProblemPatternParser.problemPattern.missingRegExp', 'The problem pattern is missing a regular expression.'));\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate createSingleProblemPattern(value: Config.ICheckedProblemPattern): IProblemPattern | null {\n\t\tconst result = this.doCreateSingleProblemPattern(value, true);\n\t\tif (result === undefined) {\n\t\t\treturn null;\n\t\t} else if (result.kind === undefined) {\n\t\t\tresult.kind = ProblemLocationKind.Location;\n\t\t}\n\t\treturn this.validateProblemPattern([result]) ? result : null;\n\t}\n\n\tprivate createNamedMultiLineProblemPattern(value: Config.INamedMultiLineCheckedProblemPattern): INamedMultiLineProblemPattern | null {\n\t\tconst validPatterns = this.createMultiLineProblemPattern(value.patterns);\n\t\tif (!validPatterns) {\n\t\t\treturn null;\n\t\t}\n\t\tconst result = {\n\t\t\tname: value.name,\n\t\t\tlabel: value.label ? value.label : value.name,\n\t\t\tpatterns: validPatterns\n\t\t};\n\t\treturn result;\n\t}\n\n\tprivate createMultiLineProblemPattern(values: Config.MultiLineCheckedProblemPattern): MultiLineProblemPattern | null {\n\t\tconst result: MultiLineProblemPattern = [];\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tconst pattern = this.doCreateSingleProblemPattern(values[i], false);\n\t\t\tif (pattern === undefined) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (i < values.length - 1) {\n\t\t\t\tif (!Types.isUndefined(pattern.loop) && pattern.loop) {\n\t\t\t\t\tpattern.loop = false;\n\t\t\t\t\tthis.error(localize('ProblemPatternParser.loopProperty.notLast', 'The loop property is only supported on the last line matcher.'));\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(pattern);\n\t\t}\n\t\tif (result[0].kind === undefined) {\n\t\t\tresult[0].kind = ProblemLocationKind.Location;\n\t\t}\n\t\treturn this.validateProblemPattern(result) ? result : null;\n\t}\n\n\tprivate doCreateSingleProblemPattern(value: Config.ICheckedProblemPattern, setDefaults: boolean): IProblemPattern | undefined {\n\t\tconst regexp = this.createRegularExpression(value.regexp);\n\t\tif (regexp === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet result: IProblemPattern = { regexp };\n\t\tif (value.kind) {\n\t\t\tresult.kind = ProblemLocationKind.fromString(value.kind);\n\t\t}\n\n\t\tfunction copyProperty(result: IProblemPattern, source: Config.IProblemPattern, resultKey: keyof IProblemPattern, sourceKey: keyof Config.IProblemPattern) {\n\t\t\tconst value = source[sourceKey];\n\t\t\tif (typeof value === 'number') {\n\t\t\t\t(result as any)[resultKey] = value;\n\t\t\t}\n\t\t}\n\t\tcopyProperty(result, value, 'file', 'file');\n\t\tcopyProperty(result, value, 'location', 'location');\n\t\tcopyProperty(result, value, 'line', 'line');\n\t\tcopyProperty(result, value, 'character', 'column');\n\t\tcopyProperty(result, value, 'endLine', 'endLine');\n\t\tcopyProperty(result, value, 'endCharacter', 'endColumn');\n\t\tcopyProperty(result, value, 'severity', 'severity');\n\t\tcopyProperty(result, value, 'code', 'code');\n\t\tcopyProperty(result, value, 'message', 'message');\n\t\tif (value.loop === true || value.loop === false) {\n\t\t\tresult.loop = value.loop;\n\t\t}\n\t\tif (setDefaults) {\n\t\t\tif (result.location || result.kind === ProblemLocationKind.File) {\n\t\t\t\tconst defaultValue: Partial<IProblemPattern> = {\n\t\t\t\t\tfile: 1,\n\t\t\t\t\tmessage: 0\n\t\t\t\t};\n\t\t\t\tresult = Objects.mixin(result, defaultValue, false);\n\t\t\t} else {\n\t\t\t\tconst defaultValue: Partial<IProblemPattern> = {\n\t\t\t\t\tfile: 1,\n\t\t\t\t\tline: 2,\n\t\t\t\t\tcharacter: 3,\n\t\t\t\t\tmessage: 0\n\t\t\t\t};\n\t\t\t\tresult = Objects.mixin(result, defaultValue, false);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate validateProblemPattern(values: IProblemPattern[]): boolean {\n\t\tlet file: boolean = false, message: boolean = false, location: boolean = false, line: boolean = false;\n\t\tconst locationKind = (values[0].kind === undefined) ? ProblemLocationKind.Location : values[0].kind;\n\n\t\tvalues.forEach((pattern, i) => {\n\t\t\tif (i !== 0 && pattern.kind) {\n\t\t\t\tthis.error(localize('ProblemPatternParser.problemPattern.kindProperty.notFirst', 'The problem pattern is invalid. The kind property must be provided only in the first element'));\n\t\t\t}\n\t\t\tfile = file || !Types.isUndefined(pattern.file);\n\t\t\tmessage = message || !Types.isUndefined(pattern.message);\n\t\t\tlocation = location || !Types.isUndefined(pattern.location);\n\t\t\tline = line || !Types.isUndefined(pattern.line);\n\t\t});\n\t\tif (!(file && message)) {\n\t\t\tthis.error(localize('ProblemPatternParser.problemPattern.missingProperty', 'The problem pattern is invalid. It must have at least have a file and a message.'));\n\t\t\treturn false;\n\t\t}\n\t\tif (locationKind === ProblemLocationKind.Location && !(location || line)) {\n\t\t\tthis.error(localize('ProblemPatternParser.problemPattern.missingLocation', 'The problem pattern is invalid. It must either have kind: \"file\" or have a line or location match group.'));\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate createRegularExpression(value: string): RegExp | undefined {\n\t\tlet result: RegExp | undefined;\n\t\ttry {\n\t\t\tresult = new RegExp(value);\n\t\t} catch (err) {\n\t\t\tthis.error(localize('ProblemPatternParser.invalidRegexp', 'Error: The string {0} is not a valid regular expression.\\n', value));\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class ExtensionRegistryReporter implements IProblemReporter {\n\tconstructor(private _collector: ExtensionMessageCollector, private _validationStatus: ValidationStatus = new ValidationStatus()) {\n\t}\n\n\tpublic info(message: string): void {\n\t\tthis._validationStatus.state = ValidationState.Info;\n\t\tthis._collector.info(message);\n\t}\n\n\tpublic warn(message: string): void {\n\t\tthis._validationStatus.state = ValidationState.Warning;\n\t\tthis._collector.warn(message);\n\t}\n\n\tpublic error(message: string): void {\n\t\tthis._validationStatus.state = ValidationState.Error;\n\t\tthis._collector.error(message);\n\t}\n\n\tpublic fatal(message: string): void {\n\t\tthis._validationStatus.state = ValidationState.Fatal;\n\t\tthis._collector.error(message);\n\t}\n\n\tpublic get status(): ValidationStatus {\n\t\treturn this._validationStatus;\n\t}\n}\n\nexport namespace Schemas {\n\n\texport const ProblemPattern: IJSONSchema = {\n\t\tdefault: {\n\t\t\tregexp: '^([^\\\\\\\\s].*)\\\\\\\\((\\\\\\\\d+,\\\\\\\\d+)\\\\\\\\):\\\\\\\\s*(.*)$',\n\t\t\tfile: 1,\n\t\t\tlocation: 2,\n\t\t\tmessage: 3\n\t\t},\n\t\ttype: 'object',\n\t\tadditionalProperties: false,\n\t\tproperties: {\n\t\t\tregexp: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: localize('ProblemPatternSchema.regexp', 'The regular expression to find an error, warning or info in the output.')\n\t\t\t},\n\t\t\tkind: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: localize('ProblemPatternSchema.kind', 'whether the pattern matches a location (file and line) or only a file.')\n\t\t\t},\n\t\t\tfile: {\n\t\t\t\ttype: 'integer',\n\t\t\t\tdescription: localize('ProblemPatternSchema.file', 'The match group index of the filename. If omitted 1 is used.')\n\t\t\t},\n\t\t\tlocation: {\n\t\t\t\ttype: 'integer',\n\t\t\t\tdescription: localize('ProblemPatternSchema.location', 'The match group index of the problem\\'s location. Valid location patterns are: (line), (line,column) and (startLine,startColumn,endLine,endColumn). If omitted (line,column) is assumed.')\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttype: 'integer',\n\t\t\t\tdescription: localize('ProblemPatternSchema.line', 'The match group index of the problem\\'s line. Defaults to 2')\n\t\t\t},\n\t\t\tcolumn: {\n\t\t\t\ttype: 'integer',\n\t\t\t\tdescription: localize('ProblemPatternSchema.column', 'The match group index of the problem\\'s line character. Defaults to 3')\n\t\t\t},\n\t\t\tendLine: {\n\t\t\t\ttype: 'integer',\n\t\t\t\tdescription: localize('ProblemPatternSchema.endLine', 'The match group index of the problem\\'s end line. Defaults to undefined')\n\t\t\t},\n\t\t\tendColumn: {\n\t\t\t\ttype: 'integer',\n\t\t\t\tdescription: localize('ProblemPatternSchema.endColumn', 'The match group index of the problem\\'s end line character. Defaults to undefined')\n\t\t\t},\n\t\t\tseverity: {\n\t\t\t\ttype: 'integer',\n\t\t\t\tdescription: localize('ProblemPatternSchema.severity', 'The match group index of the problem\\'s severity. Defaults to undefined')\n\t\t\t},\n\t\t\tcode: {\n\t\t\t\ttype: 'integer',\n\t\t\t\tdescription: localize('ProblemPatternSchema.code', 'The match group index of the problem\\'s code. Defaults to undefined')\n\t\t\t},\n\t\t\tmessage: {\n\t\t\t\ttype: 'integer',\n\t\t\t\tdescription: localize('ProblemPatternSchema.message', 'The match group index of the message. If omitted it defaults to 4 if location is specified. Otherwise it defaults to 5.')\n\t\t\t},\n\t\t\tloop: {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: localize('ProblemPatternSchema.loop', 'In a multi line matcher loop indicated whether this pattern is executed in a loop as long as it matches. Can only specified on a last pattern in a multi line pattern.')\n\t\t\t}\n\t\t}\n\t};\n\n\texport const NamedProblemPattern: IJSONSchema = Objects.deepClone(ProblemPattern);\n\tNamedProblemPattern.properties = Objects.deepClone(NamedProblemPattern.properties) || {};\n\tNamedProblemPattern.properties['name'] = {\n\t\ttype: 'string',\n\t\tdescription: localize('NamedProblemPatternSchema.name', 'The name of the problem pattern.')\n\t};\n\n\texport const MultiLineProblemPattern: IJSONSchema = {\n\t\ttype: 'array',\n\t\titems: ProblemPattern\n\t};\n\n\texport const NamedMultiLineProblemPattern: IJSONSchema = {\n\t\ttype: 'object',\n\t\tadditionalProperties: false,\n\t\tproperties: {\n\t\t\tname: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: localize('NamedMultiLineProblemPatternSchema.name', 'The name of the problem multi line problem pattern.')\n\t\t\t},\n\t\t\tpatterns: {\n\t\t\t\ttype: 'array',\n\t\t\t\tdescription: localize('NamedMultiLineProblemPatternSchema.patterns', 'The actual patterns.'),\n\t\t\t\titems: ProblemPattern\n\t\t\t}\n\t\t}\n\t};\n}\n\nconst problemPatternExtPoint = ExtensionsRegistry.registerExtensionPoint<Config.NamedProblemPatterns>({\n\textensionPoint: 'problemPatterns',\n\tjsonSchema: {\n\t\tdescription: localize('ProblemPatternExtPoint', 'Contributes problem patterns'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\tanyOf: [\n\t\t\t\tSchemas.NamedProblemPattern,\n\t\t\t\tSchemas.NamedMultiLineProblemPattern\n\t\t\t]\n\t\t}\n\t}\n});\n\nexport interface IProblemPatternRegistry {\n\tonReady(): Promise<void>;\n\n\tget(key: string): IProblemPattern | MultiLineProblemPattern;\n}\n\nclass ProblemPatternRegistryImpl implements IProblemPatternRegistry {\n\n\tprivate patterns: IStringDictionary<IProblemPattern | IProblemPattern[]>;\n\tprivate readyPromise: Promise<void>;\n\n\tconstructor() {\n\t\tthis.patterns = Object.create(null);\n\t\tthis.fillDefaults();\n\t\tthis.readyPromise = new Promise<void>((resolve, reject) => {\n\t\t\tproblemPatternExtPoint.setHandler((extensions, delta) => {\n\t\t\t\t// We get all statically know extension during startup in one batch\n\t\t\t\ttry {\n\t\t\t\t\tdelta.removed.forEach(extension => {\n\t\t\t\t\t\tconst problemPatterns = extension.value as Config.NamedProblemPatterns;\n\t\t\t\t\t\tfor (const pattern of problemPatterns) {\n\t\t\t\t\t\t\tif (this.patterns[pattern.name]) {\n\t\t\t\t\t\t\t\tdelete this.patterns[pattern.name];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tdelta.added.forEach(extension => {\n\t\t\t\t\t\tconst problemPatterns = extension.value as Config.NamedProblemPatterns;\n\t\t\t\t\t\tconst parser = new ProblemPatternParser(new ExtensionRegistryReporter(extension.collector));\n\t\t\t\t\t\tfor (const pattern of problemPatterns) {\n\t\t\t\t\t\t\tif (Config.NamedMultiLineCheckedProblemPattern.is(pattern)) {\n\t\t\t\t\t\t\t\tconst result = parser.parse(pattern);\n\t\t\t\t\t\t\t\tif (parser.problemReporter.status.state < ValidationState.Error) {\n\t\t\t\t\t\t\t\t\tthis.add(result.name, result.patterns);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\textension.collector.error(localize('ProblemPatternRegistry.error', 'Invalid problem pattern. The pattern will be ignored.'));\n\t\t\t\t\t\t\t\t\textension.collector.error(JSON.stringify(pattern, undefined, 4));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (Config.NamedProblemPattern.is(pattern)) {\n\t\t\t\t\t\t\t\tconst result = parser.parse(pattern);\n\t\t\t\t\t\t\t\tif (parser.problemReporter.status.state < ValidationState.Error) {\n\t\t\t\t\t\t\t\t\tthis.add(pattern.name, result);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\textension.collector.error(localize('ProblemPatternRegistry.error', 'Invalid problem pattern. The pattern will be ignored.'));\n\t\t\t\t\t\t\t\t\textension.collector.error(JSON.stringify(pattern, undefined, 4));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparser.reset();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Do nothing\n\t\t\t\t}\n\t\t\t\tresolve(undefined);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic onReady(): Promise<void> {\n\t\treturn this.readyPromise;\n\t}\n\n\tpublic add(key: string, value: IProblemPattern | IProblemPattern[]): void {\n\t\tthis.patterns[key] = value;\n\t}\n\n\tpublic get(key: string): IProblemPattern | IProblemPattern[] {\n\t\treturn this.patterns[key];\n\t}\n\n\tprivate fillDefaults(): void {\n\t\tthis.add('msCompile', {\n\t\t\tregexp: /^(?:\\s*\\d+>)?(\\S.*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\)\\s*:\\s+((?:fatal +)?error|warning|info)\\s+(\\w+\\d+)\\s*:\\s*(.*)$/,\n\t\t\tkind: ProblemLocationKind.Location,\n\t\t\tfile: 1,\n\t\t\tlocation: 2,\n\t\t\tseverity: 3,\n\t\t\tcode: 4,\n\t\t\tmessage: 5\n\t\t});\n\t\tthis.add('gulp-tsc', {\n\t\t\tregexp: /^([^\\s].*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(\\d+)\\s+(.*)$/,\n\t\t\tkind: ProblemLocationKind.Location,\n\t\t\tfile: 1,\n\t\t\tlocation: 2,\n\t\t\tcode: 3,\n\t\t\tmessage: 4\n\t\t});\n\t\tthis.add('cpp', {\n\t\t\tregexp: /^(\\S.*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(error|warning|info)\\s+(C\\d+)\\s*:\\s*(.*)$/,\n\t\t\tkind: ProblemLocationKind.Location,\n\t\t\tfile: 1,\n\t\t\tlocation: 2,\n\t\t\tseverity: 3,\n\t\t\tcode: 4,\n\t\t\tmessage: 5\n\t\t});\n\t\tthis.add('csc', {\n\t\t\tregexp: /^(\\S.*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(error|warning|info)\\s+(CS\\d+)\\s*:\\s*(.*)$/,\n\t\t\tkind: ProblemLocationKind.Location,\n\t\t\tfile: 1,\n\t\t\tlocation: 2,\n\t\t\tseverity: 3,\n\t\t\tcode: 4,\n\t\t\tmessage: 5\n\t\t});\n\t\tthis.add('vb', {\n\t\t\tregexp: /^(\\S.*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(error|warning|info)\\s+(BC\\d+)\\s*:\\s*(.*)$/,\n\t\t\tkind: ProblemLocationKind.Location,\n\t\t\tfile: 1,\n\t\t\tlocation: 2,\n\t\t\tseverity: 3,\n\t\t\tcode: 4,\n\t\t\tmessage: 5\n\t\t});\n\t\tthis.add('lessCompile', {\n\t\t\tregexp: /^\\s*(.*) in file (.*) line no. (\\d+)$/,\n\t\t\tkind: ProblemLocationKind.Location,\n\t\t\tmessage: 1,\n\t\t\tfile: 2,\n\t\t\tline: 3\n\t\t});\n\t\tthis.add('jshint', {\n\t\t\tregexp: /^(.*):\\s+line\\s+(\\d+),\\s+col\\s+(\\d+),\\s(.+?)(?:\\s+\\((\\w)(\\d+)\\))?$/,\n\t\t\tkind: ProblemLocationKind.Location,\n\t\t\tfile: 1,\n\t\t\tline: 2,\n\t\t\tcharacter: 3,\n\t\t\tmessage: 4,\n\t\t\tseverity: 5,\n\t\t\tcode: 6\n\t\t});\n\t\tthis.add('jshint-stylish', [\n\t\t\t{\n\t\t\t\tregexp: /^(.+)$/,\n\t\t\t\tkind: ProblemLocationKind.Location,\n\t\t\t\tfile: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tregexp: /^\\s+line\\s+(\\d+)\\s+col\\s+(\\d+)\\s+(.+?)(?:\\s+\\((\\w)(\\d+)\\))?$/,\n\t\t\t\tline: 1,\n\t\t\t\tcharacter: 2,\n\t\t\t\tmessage: 3,\n\t\t\t\tseverity: 4,\n\t\t\t\tcode: 5,\n\t\t\t\tloop: true\n\t\t\t}\n\t\t]);\n\t\tthis.add('eslint-compact', {\n\t\t\tregexp: /^(.+):\\sline\\s(\\d+),\\scol\\s(\\d+),\\s(Error|Warning|Info)\\s-\\s(.+)\\s\\((.+)\\)$/,\n\t\t\tfile: 1,\n\t\t\tkind: ProblemLocationKind.Location,\n\t\t\tline: 2,\n\t\t\tcharacter: 3,\n\t\t\tseverity: 4,\n\t\t\tmessage: 5,\n\t\t\tcode: 6\n\t\t});\n\t\tthis.add('eslint-stylish', [\n\t\t\t{\n\t\t\t\tregexp: /^((?:[a-zA-Z]:)*[./\\\\]+.*?)$/,\n\t\t\t\tkind: ProblemLocationKind.Location,\n\t\t\t\tfile: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tregexp: /^\\s+(\\d+):(\\d+)\\s+(error|warning|info)\\s+(.+?)(?:\\s\\s+(.*))?$/,\n\t\t\t\tline: 1,\n\t\t\t\tcharacter: 2,\n\t\t\t\tseverity: 3,\n\t\t\t\tmessage: 4,\n\t\t\t\tcode: 5,\n\t\t\t\tloop: true\n\t\t\t}\n\t\t]);\n\t\tthis.add('go', {\n\t\t\tregexp: /^([^:]*: )?((.:)?[^:]*):(\\d+)(:(\\d+))?: (.*)$/,\n\t\t\tkind: ProblemLocationKind.Location,\n\t\t\tfile: 2,\n\t\t\tline: 4,\n\t\t\tcharacter: 6,\n\t\t\tmessage: 7\n\t\t});\n\t}\n}\n\nexport const ProblemPatternRegistry: IProblemPatternRegistry = new ProblemPatternRegistryImpl();\n\nexport class ProblemMatcherParser extends Parser {\n\n\tconstructor(logger: IProblemReporter) {\n\t\tsuper(logger);\n\t}\n\n\tpublic parse(json: Config.ProblemMatcher): ProblemMatcher | undefined {\n\t\tconst result = this.createProblemMatcher(json);\n\t\tif (!this.checkProblemMatcherValid(json, result)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis.addWatchingMatcher(json, result);\n\n\t\treturn result;\n\t}\n\n\tprivate checkProblemMatcherValid(externalProblemMatcher: Config.ProblemMatcher, problemMatcher: ProblemMatcher | null): problemMatcher is ProblemMatcher {\n\t\tif (!problemMatcher) {\n\t\t\tthis.error(localize('ProblemMatcherParser.noProblemMatcher', 'Error: the description can\\'t be converted into a problem matcher:\\n{0}\\n', JSON.stringify(externalProblemMatcher, null, 4)));\n\t\t\treturn false;\n\t\t}\n\t\tif (!problemMatcher.pattern) {\n\t\t\tthis.error(localize('ProblemMatcherParser.noProblemPattern', 'Error: the description doesn\\'t define a valid problem pattern:\\n{0}\\n', JSON.stringify(externalProblemMatcher, null, 4)));\n\t\t\treturn false;\n\t\t}\n\t\tif (!problemMatcher.owner) {\n\t\t\tthis.error(localize('ProblemMatcherParser.noOwner', 'Error: the description doesn\\'t define an owner:\\n{0}\\n', JSON.stringify(externalProblemMatcher, null, 4)));\n\t\t\treturn false;\n\t\t}\n\t\tif (Types.isUndefined(problemMatcher.fileLocation)) {\n\t\t\tthis.error(localize('ProblemMatcherParser.noFileLocation', 'Error: the description doesn\\'t define a file location:\\n{0}\\n', JSON.stringify(externalProblemMatcher, null, 4)));\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate createProblemMatcher(description: Config.ProblemMatcher): ProblemMatcher | null {\n\t\tlet result: ProblemMatcher | null = null;\n\n\t\tconst owner = Types.isString(description.owner) ? description.owner : UUID.generateUuid();\n\t\tconst source = Types.isString(description.source) ? description.source : undefined;\n\t\tlet applyTo = Types.isString(description.applyTo) ? ApplyToKind.fromString(description.applyTo) : ApplyToKind.allDocuments;\n\t\tif (!applyTo) {\n\t\t\tapplyTo = ApplyToKind.allDocuments;\n\t\t}\n\t\tlet fileLocation: FileLocationKind | undefined = undefined;\n\t\tlet filePrefix: string | Config.SearchFileLocationArgs | undefined = undefined;\n\n\t\tlet kind: FileLocationKind | undefined;\n\t\tif (Types.isUndefined(description.fileLocation)) {\n\t\t\tfileLocation = FileLocationKind.Relative;\n\t\t\tfilePrefix = '${workspaceFolder}';\n\t\t} else if (Types.isString(description.fileLocation)) {\n\t\t\tkind = FileLocationKind.fromString(<string>description.fileLocation);\n\t\t\tif (kind) {\n\t\t\t\tfileLocation = kind;\n\t\t\t\tif ((kind === FileLocationKind.Relative) || (kind === FileLocationKind.AutoDetect)) {\n\t\t\t\t\tfilePrefix = '${workspaceFolder}';\n\t\t\t\t} else if (kind === FileLocationKind.Search) {\n\t\t\t\t\tfilePrefix = { include: ['${workspaceFolder}'] };\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Types.isStringArray(description.fileLocation)) {\n\t\t\tconst values = <string[]>description.fileLocation;\n\t\t\tif (values.length > 0) {\n\t\t\t\tkind = FileLocationKind.fromString(values[0]);\n\t\t\t\tif (values.length === 1 && kind === FileLocationKind.Absolute) {\n\t\t\t\t\tfileLocation = kind;\n\t\t\t\t} else if (values.length === 2 && (kind === FileLocationKind.Relative || kind === FileLocationKind.AutoDetect) && values[1]) {\n\t\t\t\t\tfileLocation = kind;\n\t\t\t\t\tfilePrefix = values[1];\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Array.isArray(description.fileLocation)) {\n\t\t\tconst kind = FileLocationKind.fromString(description.fileLocation[0]);\n\t\t\tif (kind === FileLocationKind.Search) {\n\t\t\t\tfileLocation = FileLocationKind.Search;\n\t\t\t\tfilePrefix = description.fileLocation[1] ?? { include: ['${workspaceFolder}'] };\n\t\t\t}\n\t\t}\n\n\t\tconst pattern = description.pattern ? this.createProblemPattern(description.pattern) : undefined;\n\n\t\tlet severity = description.severity ? Severity.fromValue(description.severity) : undefined;\n\t\tif (severity === Severity.Ignore) {\n\t\t\tthis.info(localize('ProblemMatcherParser.unknownSeverity', 'Info: unknown severity {0}. Valid values are error, warning and info.\\n', description.severity));\n\t\t\tseverity = Severity.Error;\n\t\t}\n\n\t\tif (Types.isString(description.base)) {\n\t\t\tconst variableName = <string>description.base;\n\t\t\tif (variableName.length > 1 && variableName[0] === '$') {\n\t\t\t\tconst base = ProblemMatcherRegistry.get(variableName.substring(1));\n\t\t\t\tif (base) {\n\t\t\t\t\tresult = Objects.deepClone(base);\n\t\t\t\t\tif (description.owner !== undefined && owner !== undefined) {\n\t\t\t\t\t\tresult.owner = owner;\n\t\t\t\t\t}\n\t\t\t\t\tif (description.source !== undefined && source !== undefined) {\n\t\t\t\t\t\tresult.source = source;\n\t\t\t\t\t}\n\t\t\t\t\tif (description.fileLocation !== undefined && fileLocation !== undefined) {\n\t\t\t\t\t\tresult.fileLocation = fileLocation;\n\t\t\t\t\t\tresult.filePrefix = filePrefix;\n\t\t\t\t\t}\n\t\t\t\t\tif (description.pattern !== undefined && pattern !== undefined && pattern !== null) {\n\t\t\t\t\t\tresult.pattern = pattern;\n\t\t\t\t\t}\n\t\t\t\t\tif (description.severity !== undefined && severity !== undefined) {\n\t\t\t\t\t\tresult.severity = severity;\n\t\t\t\t\t}\n\t\t\t\t\tif (description.applyTo !== undefined && applyTo !== undefined) {\n\t\t\t\t\t\tresult.applyTo = applyTo;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (fileLocation && pattern) {\n\t\t\tresult = {\n\t\t\t\towner: owner,\n\t\t\t\tapplyTo: applyTo,\n\t\t\t\tfileLocation: fileLocation,\n\t\t\t\tpattern: pattern,\n\t\t\t};\n\t\t\tif (source) {\n\t\t\t\tresult.source = source;\n\t\t\t}\n\t\t\tif (filePrefix) {\n\t\t\t\tresult.filePrefix = filePrefix;\n\t\t\t}\n\t\t\tif (severity) {\n\t\t\t\tresult.severity = severity;\n\t\t\t}\n\t\t}\n\t\tif (Config.isNamedProblemMatcher(description)) {\n\t\t\t(result as INamedProblemMatcher).name = description.name;\n\t\t\t(result as INamedProblemMatcher).label = Types.isString(description.label) ? description.label : description.name;\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate createProblemPattern(value: string | Config.IProblemPattern | Config.MultiLineProblemPattern): IProblemPattern | IProblemPattern[] | null {\n\t\tif (Types.isString(value)) {\n\t\t\tconst variableName: string = <string>value;\n\t\t\tif (variableName.length > 1 && variableName[0] === '$') {\n\t\t\t\tconst result = ProblemPatternRegistry.get(variableName.substring(1));\n\t\t\t\tif (!result) {\n\t\t\t\t\tthis.error(localize('ProblemMatcherParser.noDefinedPatter', 'Error: the pattern with the identifier {0} doesn\\'t exist.', variableName));\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tif (variableName.length === 0) {\n\t\t\t\t\tthis.error(localize('ProblemMatcherParser.noIdentifier', 'Error: the pattern property refers to an empty identifier.'));\n\t\t\t\t} else {\n\t\t\t\t\tthis.error(localize('ProblemMatcherParser.noValidIdentifier', 'Error: the pattern property {0} is not a valid pattern variable name.', variableName));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (value) {\n\t\t\tconst problemPatternParser = new ProblemPatternParser(this.problemReporter);\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn problemPatternParser.parse(value);\n\t\t\t} else {\n\t\t\t\treturn problemPatternParser.parse(value);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate addWatchingMatcher(external: Config.ProblemMatcher, internal: ProblemMatcher): void {\n\t\tconst oldBegins = this.createRegularExpression(external.watchedTaskBeginsRegExp);\n\t\tconst oldEnds = this.createRegularExpression(external.watchedTaskEndsRegExp);\n\t\tif (oldBegins && oldEnds) {\n\t\t\tinternal.watching = {\n\t\t\t\tactiveOnStart: false,\n\t\t\t\tbeginsPattern: { regexp: oldBegins },\n\t\t\t\tendsPattern: { regexp: oldEnds }\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tconst backgroundMonitor = external.background || external.watching;\n\t\tif (Types.isUndefinedOrNull(backgroundMonitor)) {\n\t\t\treturn;\n\t\t}\n\t\tconst begins: IWatchingPattern | null = this.createWatchingPattern(backgroundMonitor.beginsPattern);\n\t\tconst ends: IWatchingPattern | null = this.createWatchingPattern(backgroundMonitor.endsPattern);\n\t\tif (begins && ends) {\n\t\t\tinternal.watching = {\n\t\t\t\tactiveOnStart: Types.isBoolean(backgroundMonitor.activeOnStart) ? backgroundMonitor.activeOnStart : false,\n\t\t\t\tbeginsPattern: begins,\n\t\t\t\tendsPattern: ends\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tif (begins || ends) {\n\t\t\tthis.error(localize('ProblemMatcherParser.problemPattern.watchingMatcher', 'A problem matcher must define both a begin pattern and an end pattern for watching.'));\n\t\t}\n\t}\n\n\tprivate createWatchingPattern(external: string | Config.IWatchingPattern | undefined): IWatchingPattern | null {\n\t\tif (Types.isUndefinedOrNull(external)) {\n\t\t\treturn null;\n\t\t}\n\t\tlet regexp: RegExp | null;\n\t\tlet file: number | undefined;\n\t\tif (Types.isString(external)) {\n\t\t\tregexp = this.createRegularExpression(external);\n\t\t} else {\n\t\t\tregexp = this.createRegularExpression(external.regexp);\n\t\t\tif (Types.isNumber(external.file)) {\n\t\t\t\tfile = external.file;\n\t\t\t}\n\t\t}\n\t\tif (!regexp) {\n\t\t\treturn null;\n\t\t}\n\t\treturn file ? { regexp, file } : { regexp, file: 1 };\n\t}\n\n\tprivate createRegularExpression(value: string | undefined): RegExp | null {\n\t\tlet result: RegExp | null = null;\n\t\tif (!value) {\n\t\t\treturn result;\n\t\t}\n\t\ttry {\n\t\t\tresult = new RegExp(value);\n\t\t} catch (err) {\n\t\t\tthis.error(localize('ProblemMatcherParser.invalidRegexp', 'Error: The string {0} is not a valid regular expression.\\n', value));\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport namespace Schemas {\n\n\texport const WatchingPattern: IJSONSchema = {\n\t\ttype: 'object',\n\t\tadditionalProperties: false,\n\t\tproperties: {\n\t\t\tregexp: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: localize('WatchingPatternSchema.regexp', 'The regular expression to detect the begin or end of a background task.')\n\t\t\t},\n\t\t\tfile: {\n\t\t\t\ttype: 'integer',\n\t\t\t\tdescription: localize('WatchingPatternSchema.file', 'The match group index of the filename. Can be omitted.')\n\t\t\t},\n\t\t}\n\t};\n\n\n\texport const PatternType: IJSONSchema = {\n\t\tanyOf: [\n\t\t\t{\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: localize('PatternTypeSchema.name', 'The name of a contributed or predefined pattern')\n\t\t\t},\n\t\t\tSchemas.ProblemPattern,\n\t\t\tSchemas.MultiLineProblemPattern\n\t\t],\n\t\tdescription: localize('PatternTypeSchema.description', 'A problem pattern or the name of a contributed or predefined problem pattern. Can be omitted if base is specified.')\n\t};\n\n\texport const ProblemMatcher: IJSONSchema = {\n\t\ttype: 'object',\n\t\tadditionalProperties: false,\n\t\tproperties: {\n\t\t\tbase: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: localize('ProblemMatcherSchema.base', 'The name of a base problem matcher to use.')\n\t\t\t},\n\t\t\towner: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: localize('ProblemMatcherSchema.owner', 'The owner of the problem inside Code. Can be omitted if base is specified. Defaults to \\'external\\' if omitted and base is not specified.')\n\t\t\t},\n\t\t\tsource: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: localize('ProblemMatcherSchema.source', 'A human-readable string describing the source of this diagnostic, e.g. \\'typescript\\' or \\'super lint\\'.')\n\t\t\t},\n\t\t\tseverity: {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['error', 'warning', 'info'],\n\t\t\t\tdescription: localize('ProblemMatcherSchema.severity', 'The default severity for captures problems. Is used if the pattern doesn\\'t define a match group for severity.')\n\t\t\t},\n\t\t\tapplyTo: {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['allDocuments', 'openDocuments', 'closedDocuments'],\n\t\t\t\tdescription: localize('ProblemMatcherSchema.applyTo', 'Controls if a problem reported on a text document is applied only to open, closed or all documents.')\n\t\t\t},\n\t\t\tpattern: PatternType,\n\t\t\tfileLocation: {\n\t\t\t\toneOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenum: ['absolute', 'relative', 'autoDetect', 'search']\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\tprefixItems: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tenum: ['absolute', 'relative', 'autoDetect', 'search']\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tminItems: 1,\n\t\t\t\t\t\tmaxItems: 1,\n\t\t\t\t\t\tadditionalItems: false\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\tprefixItems: [\n\t\t\t\t\t\t\t{ type: 'string', enum: ['relative', 'autoDetect'] },\n\t\t\t\t\t\t\t{ type: 'string' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\tminItems: 2,\n\t\t\t\t\t\tmaxItems: 2,\n\t\t\t\t\t\tadditionalItems: false,\n\t\t\t\t\t\texamples: [\n\t\t\t\t\t\t\t['relative', '${workspaceFolder}'],\n\t\t\t\t\t\t\t['autoDetect', '${workspaceFolder}'],\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\tprefixItems: [\n\t\t\t\t\t\t\t{ type: 'string', enum: ['search'] },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t'include': {\n\t\t\t\t\t\t\t\t\t\toneOf: [\n\t\t\t\t\t\t\t\t\t\t\t{ type: 'string' },\n\t\t\t\t\t\t\t\t\t\t\t{ type: 'array', items: { type: 'string' } }\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t'exclude': {\n\t\t\t\t\t\t\t\t\t\toneOf: [\n\t\t\t\t\t\t\t\t\t\t\t{ type: 'string' },\n\t\t\t\t\t\t\t\t\t\t\t{ type: 'array', items: { type: 'string' } }\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\trequired: ['include']\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\tminItems: 2,\n\t\t\t\t\t\tmaxItems: 2,\n\t\t\t\t\t\tadditionalItems: false,\n\t\t\t\t\t\texamples: [\n\t\t\t\t\t\t\t['search', { 'include': ['${workspaceFolder}'] }],\n\t\t\t\t\t\t\t['search', { 'include': ['${workspaceFolder}'], 'exclude': [] }]\n\t\t\t\t\t\t],\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tdescription: localize('ProblemMatcherSchema.fileLocation', 'Defines how file names reported in a problem pattern should be interpreted. A relative fileLocation may be an array, where the second element of the array is the path of the relative file location. The search fileLocation mode, performs a deep (and, possibly, heavy) file system search within the directories specified by the include/exclude properties of the second element (or the current workspace directory if not specified).')\n\t\t\t},\n\t\t\tbackground: {\n\t\t\t\ttype: 'object',\n\t\t\t\tadditionalProperties: false,\n\t\t\t\tdescription: localize('ProblemMatcherSchema.background', 'Patterns to track the begin and end of a matcher active on a background task.'),\n\t\t\t\tproperties: {\n\t\t\t\t\tactiveOnStart: {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdescription: localize('ProblemMatcherSchema.background.activeOnStart', 'If set to true the background monitor is in active mode when the task starts. This is equals of issuing a line that matches the beginsPattern')\n\t\t\t\t\t},\n\t\t\t\t\tbeginsPattern: {\n\t\t\t\t\t\toneOf: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSchemas.WatchingPattern\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdescription: localize('ProblemMatcherSchema.background.beginsPattern', 'If matched in the output the start of a background task is signaled.')\n\t\t\t\t\t},\n\t\t\t\t\tendsPattern: {\n\t\t\t\t\t\toneOf: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSchemas.WatchingPattern\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdescription: localize('ProblemMatcherSchema.background.endsPattern', 'If matched in the output the end of a background task is signaled.')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\twatching: {\n\t\t\t\ttype: 'object',\n\t\t\t\tadditionalProperties: false,\n\t\t\t\tdeprecationMessage: localize('ProblemMatcherSchema.watching.deprecated', 'The watching property is deprecated. Use background instead.'),\n\t\t\t\tdescription: localize('ProblemMatcherSchema.watching', 'Patterns to track the begin and end of a watching matcher.'),\n\t\t\t\tproperties: {\n\t\t\t\t\tactiveOnStart: {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdescription: localize('ProblemMatcherSchema.watching.activeOnStart', 'If set to true the watcher is in active mode when the task starts. This is equals of issuing a line that matches the beginPattern')\n\t\t\t\t\t},\n\t\t\t\t\tbeginsPattern: {\n\t\t\t\t\t\toneOf: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSchemas.WatchingPattern\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdescription: localize('ProblemMatcherSchema.watching.beginsPattern', 'If matched in the output the start of a watching task is signaled.')\n\t\t\t\t\t},\n\t\t\t\t\tendsPattern: {\n\t\t\t\t\t\toneOf: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSchemas.WatchingPattern\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdescription: localize('ProblemMatcherSchema.watching.endsPattern', 'If matched in the output the end of a watching task is signaled.')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\texport const LegacyProblemMatcher: IJSONSchema = Objects.deepClone(ProblemMatcher);\n\tLegacyProblemMatcher.properties = Objects.deepClone(LegacyProblemMatcher.properties) || {};\n\tLegacyProblemMatcher.properties['watchedTaskBeginsRegExp'] = {\n\t\ttype: 'string',\n\t\tdeprecationMessage: localize('LegacyProblemMatcherSchema.watchedBegin.deprecated', 'This property is deprecated. Use the watching property instead.'),\n\t\tdescription: localize('LegacyProblemMatcherSchema.watchedBegin', 'A regular expression signaling that a watched tasks begins executing triggered through file watching.')\n\t};\n\tLegacyProblemMatcher.properties['watchedTaskEndsRegExp'] = {\n\t\ttype: 'string',\n\t\tdeprecationMessage: localize('LegacyProblemMatcherSchema.watchedEnd.deprecated', 'This property is deprecated. Use the watching property instead.'),\n\t\tdescription: localize('LegacyProblemMatcherSchema.watchedEnd', 'A regular expression signaling that a watched tasks ends executing.')\n\t};\n\n\texport const NamedProblemMatcher: IJSONSchema = Objects.deepClone(ProblemMatcher);\n\tNamedProblemMatcher.properties = Objects.deepClone(NamedProblemMatcher.properties) || {};\n\tNamedProblemMatcher.properties.name = {\n\t\ttype: 'string',\n\t\tdescription: localize('NamedProblemMatcherSchema.name', 'The name of the problem matcher used to refer to it.')\n\t};\n\tNamedProblemMatcher.properties.label = {\n\t\ttype: 'string',\n\t\tdescription: localize('NamedProblemMatcherSchema.label', 'A human readable label of the problem matcher.')\n\t};\n}\n\nconst problemMatchersExtPoint = ExtensionsRegistry.registerExtensionPoint<Config.INamedProblemMatcher[]>({\n\textensionPoint: 'problemMatchers',\n\tdeps: [problemPatternExtPoint],\n\tjsonSchema: {\n\t\tdescription: localize('ProblemMatcherExtPoint', 'Contributes problem matchers'),\n\t\ttype: 'array',\n\t\titems: Schemas.NamedProblemMatcher\n\t}\n});\n\nexport interface IProblemMatcherRegistry {\n\tonReady(): Promise<void>;\n\tget(name: string): INamedProblemMatcher;\n\tkeys(): string[];\n\treadonly onMatcherChanged: Event<void>;\n}\n\nclass ProblemMatcherRegistryImpl implements IProblemMatcherRegistry {\n\n\tprivate matchers: IStringDictionary<INamedProblemMatcher>;\n\tprivate readyPromise: Promise<void>;\n\tprivate readonly _onMatchersChanged: Emitter<void> = new Emitter<void>();\n\tpublic readonly onMatcherChanged: Event<void> = this._onMatchersChanged.event;\n\n\n\tconstructor() {\n\t\tthis.matchers = Object.create(null);\n\t\tthis.fillDefaults();\n\t\tthis.readyPromise = new Promise<void>((resolve, reject) => {\n\t\t\tproblemMatchersExtPoint.setHandler((extensions, delta) => {\n\t\t\t\ttry {\n\t\t\t\t\tdelta.removed.forEach(extension => {\n\t\t\t\t\t\tconst problemMatchers = extension.value;\n\t\t\t\t\t\tfor (const matcher of problemMatchers) {\n\t\t\t\t\t\t\tif (this.matchers[matcher.name]) {\n\t\t\t\t\t\t\t\tdelete this.matchers[matcher.name];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tdelta.added.forEach(extension => {\n\t\t\t\t\t\tconst problemMatchers = extension.value;\n\t\t\t\t\t\tconst parser = new ProblemMatcherParser(new ExtensionRegistryReporter(extension.collector));\n\t\t\t\t\t\tfor (const matcher of problemMatchers) {\n\t\t\t\t\t\t\tconst result = parser.parse(matcher);\n\t\t\t\t\t\t\tif (result && isNamedProblemMatcher(result)) {\n\t\t\t\t\t\t\t\tthis.add(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif ((delta.removed.length > 0) || (delta.added.length > 0)) {\n\t\t\t\t\t\tthis._onMatchersChanged.fire();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t}\n\t\t\t\tconst matcher = this.get('tsc-watch');\n\t\t\t\tif (matcher) {\n\t\t\t\t\t(<any>matcher).tscWatch = true;\n\t\t\t\t}\n\t\t\t\tresolve(undefined);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic onReady(): Promise<void> {\n\t\tProblemPatternRegistry.onReady();\n\t\treturn this.readyPromise;\n\t}\n\n\tpublic add(matcher: INamedProblemMatcher): void {\n\t\tthis.matchers[matcher.name] = matcher;\n\t}\n\n\tpublic get(name: string): INamedProblemMatcher {\n\t\treturn this.matchers[name];\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn Object.keys(this.matchers);\n\t}\n\n\tprivate fillDefaults(): void {\n\t\tthis.add({\n\t\t\tname: 'msCompile',\n\t\t\tlabel: localize('msCompile', 'Microsoft compiler problems'),\n\t\t\towner: 'msCompile',\n\t\t\tsource: 'cpp',\n\t\t\tapplyTo: ApplyToKind.allDocuments,\n\t\t\tfileLocation: FileLocationKind.Absolute,\n\t\t\tpattern: ProblemPatternRegistry.get('msCompile')\n\t\t});\n\n\t\tthis.add({\n\t\t\tname: 'lessCompile',\n\t\t\tlabel: localize('lessCompile', 'Less problems'),\n\t\t\tdeprecated: true,\n\t\t\towner: 'lessCompile',\n\t\t\tsource: 'less',\n\t\t\tapplyTo: ApplyToKind.allDocuments,\n\t\t\tfileLocation: FileLocationKind.Absolute,\n\t\t\tpattern: ProblemPatternRegistry.get('lessCompile'),\n\t\t\tseverity: Severity.Error\n\t\t});\n\n\t\tthis.add({\n\t\t\tname: 'gulp-tsc',\n\t\t\tlabel: localize('gulp-tsc', 'Gulp TSC Problems'),\n\t\t\towner: 'typescript',\n\t\t\tsource: 'ts',\n\t\t\tapplyTo: ApplyToKind.closedDocuments,\n\t\t\tfileLocation: FileLocationKind.Relative,\n\t\t\tfilePrefix: '${workspaceFolder}',\n\t\t\tpattern: ProblemPatternRegistry.get('gulp-tsc')\n\t\t});\n\n\t\tthis.add({\n\t\t\tname: 'jshint',\n\t\t\tlabel: localize('jshint', 'JSHint problems'),\n\t\t\towner: 'jshint',\n\t\t\tsource: 'jshint',\n\t\t\tapplyTo: ApplyToKind.allDocuments,\n\t\t\tfileLocation: FileLocationKind.Absolute,\n\t\t\tpattern: ProblemPatternRegistry.get('jshint')\n\t\t});\n\n\t\tthis.add({\n\t\t\tname: 'jshint-stylish',\n\t\t\tlabel: localize('jshint-stylish', 'JSHint stylish problems'),\n\t\t\towner: 'jshint',\n\t\t\tsource: 'jshint',\n\t\t\tapplyTo: ApplyToKind.allDocuments,\n\t\t\tfileLocation: FileLocationKind.Absolute,\n\t\t\tpattern: ProblemPatternRegistry.get('jshint-stylish')\n\t\t});\n\n\t\tthis.add({\n\t\t\tname: 'eslint-compact',\n\t\t\tlabel: localize('eslint-compact', 'ESLint compact problems'),\n\t\t\towner: 'eslint',\n\t\t\tsource: 'eslint',\n\t\t\tapplyTo: ApplyToKind.allDocuments,\n\t\t\tfileLocation: FileLocationKind.Absolute,\n\t\t\tfilePrefix: '${workspaceFolder}',\n\t\t\tpattern: ProblemPatternRegistry.get('eslint-compact')\n\t\t});\n\n\t\tthis.add({\n\t\t\tname: 'eslint-stylish',\n\t\t\tlabel: localize('eslint-stylish', 'ESLint stylish problems'),\n\t\t\towner: 'eslint',\n\t\t\tsource: 'eslint',\n\t\t\tapplyTo: ApplyToKind.allDocuments,\n\t\t\tfileLocation: FileLocationKind.Absolute,\n\t\t\tpattern: ProblemPatternRegistry.get('eslint-stylish')\n\t\t});\n\n\t\tthis.add({\n\t\t\tname: 'go',\n\t\t\tlabel: localize('go', 'Go problems'),\n\t\t\towner: 'go',\n\t\t\tsource: 'go',\n\t\t\tapplyTo: ApplyToKind.allDocuments,\n\t\t\tfileLocation: FileLocationKind.Relative,\n\t\t\tfilePrefix: '${workspaceFolder}',\n\t\t\tpattern: ProblemPatternRegistry.get('go')\n\t\t});\n\t}\n}\n\nexport const ProblemMatcherRegistry: IProblemMatcherRegistry = new ProblemMatcherRegistryImpl();\n"]}