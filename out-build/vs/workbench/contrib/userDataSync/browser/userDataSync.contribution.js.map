{"version":3,"sources":["vs/workbench/contrib/userDataSync/browser/userDataSync.contribution.ts"],"names":[],"mappings":"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","file":"userDataSync.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { UserDataSyncWorkbenchContribution } from 'vs/workbench/contrib/userDataSync/browser/userDataSync';\nimport { IUserDataAutoSyncService, UserDataSyncError, UserDataSyncErrorCode } from 'vs/platform/userDataSync/common/userDataSync';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { isWeb } from 'vs/base/common/platform';\nimport { UserDataSyncTrigger } from 'vs/workbench/contrib/userDataSync/browser/userDataSyncTrigger';\nimport { Action } from 'vs/base/common/actions';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { SHOW_SYNC_LOG_COMMAND_ID } from 'vs/workbench/services/userDataSync/common/userDataSync';\n\nclass UserDataSyncReportIssueContribution extends Disposable implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tthis._register(userDataAutoSyncService.onError(error => this.onAutoSyncError(error)));\n\t}\n\n\tprivate onAutoSyncError(error: UserDataSyncError): void {\n\t\tswitch (error.code) {\n\t\t\tcase UserDataSyncErrorCode.LocalTooManyRequests: {\n\t\t\t\tconst message = isWeb ? localize({ key: 'local too many requests - reload', comment: ['Settings Sync is the name of the feature'] }, \"Settings sync is suspended temporarily because the current device is making too many requests. Please reload {0} to resume.\", this.productService.nameLong)\n\t\t\t\t\t: localize({ key: 'local too many requests - restart', comment: ['Settings Sync is the name of the feature'] }, \"Settings sync is suspended temporarily because the current device is making too many requests. Please restart {0} to resume.\", this.productService.nameLong);\n\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage,\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [\n\t\t\t\t\t\t\tnew Action('Show Sync Logs', localize('show sync logs', \"Show Log\"), undefined, true, () => this.commandService.executeCommand(SHOW_SYNC_LOG_COMMAND_ID)),\n\t\t\t\t\t\t\tnew Action('Restart', isWeb ? localize('reload', \"Reload\") : localize('restart', \"Restart\"), undefined, true, () => this.hostService.restart())\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase UserDataSyncErrorCode.TooManyRequests: {\n\t\t\t\tconst operationId = error.operationId ? localize('operationId', \"Operation Id: {0}\", error.operationId) : undefined;\n\t\t\t\tconst message = localize({ key: 'server too many requests', comment: ['Settings Sync is the name of the feature'] }, \"Settings sync is disabled because the current device is making too many requests. Please wait for 10 minutes and turn on sync.\");\n\t\t\t\tthis.notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: operationId ? `${message} ${operationId}` : message,\n\t\t\t\t\tsource: error.operationId ? localize('settings sync', \"Settings Sync. Operation Id: {0}\", error.operationId) : undefined,\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [\n\t\t\t\t\t\t\tnew Action('Show Sync Logs', localize('show sync logs', \"Show Log\"), undefined, true, () => this.commandService.executeCommand(SHOW_SYNC_LOG_COMMAND_ID)),\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchRegistry.registerWorkbenchContribution(UserDataSyncWorkbenchContribution, LifecyclePhase.Restored);\nworkbenchRegistry.registerWorkbenchContribution(UserDataSyncTrigger, LifecyclePhase.Eventually);\nworkbenchRegistry.registerWorkbenchContribution(UserDataSyncReportIssueContribution, LifecyclePhase.Eventually);\n"]}