{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/files/test/browser/explorerFileNestingTrie.test.ts"],"names":[],"mappings":"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","file":"explorerFileNestingTrie.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { PreTrie, ExplorerFileNestingTrie, SufTrie } from 'vs/workbench/contrib/files/common/explorerFileNestingTrie';\nimport * as assert from 'assert';\n\nconst fakeFilenameAttributes = { dirname: 'mydir', basename: '', extname: '' };\n\nsuite('SufTrie', () => {\n\ttest('exactMatches', () => {\n\t\tconst t = new SufTrie();\n\t\tt.add('.npmrc', 'MyKey');\n\t\tassert.deepStrictEqual(t.get('.npmrc', fakeFilenameAttributes), ['MyKey']);\n\t\tassert.deepStrictEqual(t.get('.npmrcs', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('a.npmrc', fakeFilenameAttributes), []);\n\t});\n\n\ttest('starMatches', () => {\n\t\tconst t = new SufTrie();\n\t\tt.add('*.npmrc', 'MyKey');\n\t\tassert.deepStrictEqual(t.get('.npmrc', fakeFilenameAttributes), ['MyKey']);\n\t\tassert.deepStrictEqual(t.get('npmrc', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('.npmrcs', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('a.npmrc', fakeFilenameAttributes), ['MyKey']);\n\t\tassert.deepStrictEqual(t.get('a.b.c.d.npmrc', fakeFilenameAttributes), ['MyKey']);\n\t});\n\n\ttest('starSubstitutes', () => {\n\t\tconst t = new SufTrie();\n\t\tt.add('*.npmrc', '${capture}.json');\n\t\tassert.deepStrictEqual(t.get('.npmrc', fakeFilenameAttributes), ['.json']);\n\t\tassert.deepStrictEqual(t.get('npmrc', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('.npmrcs', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('a.npmrc', fakeFilenameAttributes), ['a.json']);\n\t\tassert.deepStrictEqual(t.get('a.b.c.d.npmrc', fakeFilenameAttributes), ['a.b.c.d.json']);\n\t});\n\n\ttest('multiMatches', () => {\n\t\tconst t = new SufTrie();\n\t\tt.add('*.npmrc', 'Key1');\n\t\tt.add('*.json', 'Key2');\n\t\tt.add('*d.npmrc', 'Key3');\n\t\tassert.deepStrictEqual(t.get('.npmrc', fakeFilenameAttributes), ['Key1']);\n\t\tassert.deepStrictEqual(t.get('npmrc', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('.npmrcs', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('.json', fakeFilenameAttributes), ['Key2']);\n\t\tassert.deepStrictEqual(t.get('a.json', fakeFilenameAttributes), ['Key2']);\n\t\tassert.deepStrictEqual(t.get('a.npmrc', fakeFilenameAttributes), ['Key1']);\n\t\tassert.deepStrictEqual(t.get('a.b.c.d.npmrc', fakeFilenameAttributes), ['Key1', 'Key3']);\n\t});\n\n\ttest('multiSubstitutes', () => {\n\t\tconst t = new SufTrie();\n\t\tt.add('*.npmrc', 'Key1.${capture}.js');\n\t\tt.add('*.json', 'Key2.${capture}.js');\n\t\tt.add('*d.npmrc', 'Key3.${capture}.js');\n\t\tassert.deepStrictEqual(t.get('.npmrc', fakeFilenameAttributes), ['Key1..js']);\n\t\tassert.deepStrictEqual(t.get('npmrc', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('.npmrcs', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('.json', fakeFilenameAttributes), ['Key2..js']);\n\t\tassert.deepStrictEqual(t.get('a.json', fakeFilenameAttributes), ['Key2.a.js']);\n\t\tassert.deepStrictEqual(t.get('a.npmrc', fakeFilenameAttributes), ['Key1.a.js']);\n\t\tassert.deepStrictEqual(t.get('a.b.cd.npmrc', fakeFilenameAttributes), ['Key1.a.b.cd.js', 'Key3.a.b.c.js']);\n\t\tassert.deepStrictEqual(t.get('a.b.c.d.npmrc', fakeFilenameAttributes), ['Key1.a.b.c.d.js', 'Key3.a.b.c..js']);\n\t});\n});\n\nsuite('PreTrie', () => {\n\ttest('exactMatches', () => {\n\t\tconst t = new PreTrie();\n\t\tt.add('.npmrc', 'MyKey');\n\t\tassert.deepStrictEqual(t.get('.npmrc', fakeFilenameAttributes), ['MyKey']);\n\t\tassert.deepStrictEqual(t.get('.npmrcs', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('a.npmrc', fakeFilenameAttributes), []);\n\t});\n\n\ttest('starMatches', () => {\n\t\tconst t = new PreTrie();\n\t\tt.add('*.npmrc', 'MyKey');\n\t\tassert.deepStrictEqual(t.get('.npmrc', fakeFilenameAttributes), ['MyKey']);\n\t\tassert.deepStrictEqual(t.get('npmrc', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('.npmrcs', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('a.npmrc', fakeFilenameAttributes), ['MyKey']);\n\t\tassert.deepStrictEqual(t.get('a.b.c.d.npmrc', fakeFilenameAttributes), ['MyKey']);\n\t});\n\n\ttest('starSubstitutes', () => {\n\t\tconst t = new PreTrie();\n\t\tt.add('*.npmrc', '${capture}.json');\n\t\tassert.deepStrictEqual(t.get('.npmrc', fakeFilenameAttributes), ['.json']);\n\t\tassert.deepStrictEqual(t.get('npmrc', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('.npmrcs', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('a.npmrc', fakeFilenameAttributes), ['a.json']);\n\t\tassert.deepStrictEqual(t.get('a.b.c.d.npmrc', fakeFilenameAttributes), ['a.b.c.d.json']);\n\t});\n\n\ttest('multiMatches', () => {\n\t\tconst t = new PreTrie();\n\t\tt.add('*.npmrc', 'Key1');\n\t\tt.add('*.json', 'Key2');\n\t\tt.add('*d.npmrc', 'Key3');\n\t\tassert.deepStrictEqual(t.get('.npmrc', fakeFilenameAttributes), ['Key1']);\n\t\tassert.deepStrictEqual(t.get('npmrc', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('.npmrcs', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('.json', fakeFilenameAttributes), ['Key2']);\n\t\tassert.deepStrictEqual(t.get('a.json', fakeFilenameAttributes), ['Key2']);\n\t\tassert.deepStrictEqual(t.get('a.npmrc', fakeFilenameAttributes), ['Key1']);\n\t\tassert.deepStrictEqual(t.get('a.b.c.d.npmrc', fakeFilenameAttributes), ['Key1', 'Key3']);\n\t});\n\n\ttest('multiSubstitutes', () => {\n\t\tconst t = new PreTrie();\n\t\tt.add('*.npmrc', 'Key1.${capture}.js');\n\t\tt.add('*.json', 'Key2.${capture}.js');\n\t\tt.add('*d.npmrc', 'Key3.${capture}.js');\n\t\tassert.deepStrictEqual(t.get('.npmrc', fakeFilenameAttributes), ['Key1..js']);\n\t\tassert.deepStrictEqual(t.get('npmrc', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('.npmrcs', fakeFilenameAttributes), []);\n\t\tassert.deepStrictEqual(t.get('.json', fakeFilenameAttributes), ['Key2..js']);\n\t\tassert.deepStrictEqual(t.get('a.json', fakeFilenameAttributes), ['Key2.a.js']);\n\t\tassert.deepStrictEqual(t.get('a.npmrc', fakeFilenameAttributes), ['Key1.a.js']);\n\t\tassert.deepStrictEqual(t.get('a.b.cd.npmrc', fakeFilenameAttributes), ['Key1.a.b.cd.js', 'Key3.a.b.c.js']);\n\t\tassert.deepStrictEqual(t.get('a.b.c.d.npmrc', fakeFilenameAttributes), ['Key1.a.b.c.d.js', 'Key3.a.b.c..js']);\n\t});\n\n\n\ttest('emptyMatches', () => {\n\t\tconst t = new PreTrie();\n\t\tt.add('package*json', 'package');\n\t\tassert.deepStrictEqual(t.get('package.json', fakeFilenameAttributes), ['package']);\n\t\tassert.deepStrictEqual(t.get('packagejson', fakeFilenameAttributes), ['package']);\n\t\tassert.deepStrictEqual(t.get('package-lock.json', fakeFilenameAttributes), ['package']);\n\t});\n});\n\nsuite('StarTrie', () => {\n\tconst assertMapEquals = (actual: Map<string, Set<string>>, expected: Record<string, string[]>) => {\n\t\tconst actualStr = [...actual.entries()].map(e => `${e[0]} => [${[...e[1].keys()].join()}]`);\n\t\tconst expectedStr = Object.entries(expected).map(e => `${e[0]}: [${[e[1]].join()}]`);\n\t\tconst bigMsg = actualStr + '===' + expectedStr;\n\t\tassert.strictEqual(actual.size, Object.keys(expected).length, bigMsg);\n\t\tfor (const parent of actual.keys()) {\n\t\t\tconst act = actual.get(parent)!;\n\t\t\tconst exp = expected[parent];\n\t\t\tconst str = [...act.keys()].join() + '===' + exp.join();\n\t\t\tconst msg = bigMsg + '\\n' + str;\n\t\t\tassert(act.size === exp.length, msg);\n\t\t\tfor (const child of exp) {\n\t\t\t\tassert(act.has(child), msg);\n\t\t\t}\n\t\t}\n\t};\n\n\ttest('does added extension nesting', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['*', ['${capture}.*']],\n\t\t]);\n\t\tconst nesting = t.nest([\n\t\t\t'file',\n\t\t\t'file.json',\n\t\t\t'boop.test',\n\t\t\t'boop.test1',\n\t\t\t'boop.test.1',\n\t\t\t'beep',\n\t\t\t'beep.test1',\n\t\t\t'beep.boop.test1',\n\t\t\t'beep.boop.test2',\n\t\t\t'beep.boop.a',\n\t\t], 'mydir');\n\t\tassertMapEquals(nesting, {\n\t\t\t'file': ['file.json'],\n\t\t\t'boop.test': ['boop.test.1'],\n\t\t\t'boop.test1': [],\n\t\t\t'beep': ['beep.test1', 'beep.boop.test1', 'beep.boop.test2', 'beep.boop.a']\n\t\t});\n\t});\n\n\ttest('does ext specific nesting', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['*.ts', ['${capture}.js']],\n\t\t\t['*.js', ['${capture}.map']],\n\t\t]);\n\t\tconst nesting = t.nest([\n\t\t\t'a.ts',\n\t\t\t'a.js',\n\t\t\t'a.jss',\n\t\t\t'ab.js',\n\t\t\t'b.js',\n\t\t\t'b.map',\n\t\t\t'c.ts',\n\t\t\t'c.js',\n\t\t\t'c.map',\n\t\t\t'd.ts',\n\t\t\t'd.map',\n\t\t], 'mydir');\n\t\tassertMapEquals(nesting, {\n\t\t\t'a.ts': ['a.js'],\n\t\t\t'ab.js': [],\n\t\t\t'a.jss': [],\n\t\t\t'b.js': ['b.map'],\n\t\t\t'c.ts': ['c.js', 'c.map'],\n\t\t\t'd.ts': [],\n\t\t\t'd.map': [],\n\t\t});\n\t});\n\n\ttest('handles loops', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['*.a', ['${capture}.b', '${capture}.c']],\n\t\t\t['*.b', ['${capture}.a']],\n\t\t\t['*.c', ['${capture}.d']],\n\n\t\t\t['*.aa', ['${capture}.bb']],\n\t\t\t['*.bb', ['${capture}.cc', '${capture}.dd']],\n\t\t\t['*.cc', ['${capture}.aa']],\n\t\t\t['*.dd', ['${capture}.ee']],\n\t\t]);\n\t\tconst nesting = t.nest([\n\t\t\t'.a', '.b', '.c', '.d',\n\t\t\t'a.a', 'a.b', 'a.d',\n\t\t\t'a.aa', 'a.bb', 'a.cc',\n\t\t\t'b.aa', 'b.bb',\n\t\t\t'c.bb', 'c.cc',\n\t\t\t'd.aa', 'd.cc',\n\t\t\t'e.aa', 'e.bb', 'e.dd', 'e.ee',\n\t\t\t'f.aa', 'f.bb', 'f.cc', 'f.dd', 'f.ee',\n\t\t], 'mydir');\n\n\t\tassertMapEquals(nesting, {\n\t\t\t'.a': [], '.b': [], '.c': [], '.d': [],\n\t\t\t'a.a': [], 'a.b': [], 'a.d': [],\n\t\t\t'a.aa': [], 'a.bb': [], 'a.cc': [],\n\t\t\t'b.aa': ['b.bb'],\n\t\t\t'c.bb': ['c.cc'],\n\t\t\t'd.cc': ['d.aa'],\n\t\t\t'e.aa': ['e.bb', 'e.dd', 'e.ee'],\n\t\t\t'f.aa': [], 'f.bb': [], 'f.cc': [], 'f.dd': [], 'f.ee': []\n\t\t});\n\t});\n\n\ttest('does general bidirectional suffix matching', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['*-vsdoc.js', ['${capture}.js']],\n\t\t\t['*.js', ['${capture}-vscdoc.js']],\n\t\t]);\n\n\t\tconst nesting = t.nest([\n\t\t\t'a-vsdoc.js',\n\t\t\t'a.js',\n\t\t\t'b.js',\n\t\t\t'b-vscdoc.js',\n\t\t], 'mydir');\n\n\t\tassertMapEquals(nesting, {\n\t\t\t'a-vsdoc.js': ['a.js'],\n\t\t\t'b.js': ['b-vscdoc.js'],\n\t\t});\n\t});\n\n\ttest('does general bidirectional prefix matching', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['vsdoc-*.js', ['${capture}.js']],\n\t\t\t['*.js', ['vscdoc-${capture}.js']],\n\t\t]);\n\n\t\tconst nesting = t.nest([\n\t\t\t'vsdoc-a.js',\n\t\t\t'a.js',\n\t\t\t'b.js',\n\t\t\t'vscdoc-b.js',\n\t\t], 'mydir');\n\n\t\tassertMapEquals(nesting, {\n\t\t\t'vsdoc-a.js': ['a.js'],\n\t\t\t'b.js': ['vscdoc-b.js'],\n\t\t});\n\t});\n\n\ttest('does general bidirectional general matching', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['foo-*-bar.js', ['${capture}.js']],\n\t\t\t['*.js', ['bib-${capture}-bap.js']],\n\t\t]);\n\n\t\tconst nesting = t.nest([\n\t\t\t'foo-a-bar.js',\n\t\t\t'a.js',\n\t\t\t'b.js',\n\t\t\t'bib-b-bap.js',\n\t\t], 'mydir');\n\n\t\tassertMapEquals(nesting, {\n\t\t\t'foo-a-bar.js': ['a.js'],\n\t\t\t'b.js': ['bib-b-bap.js'],\n\t\t});\n\t});\n\n\ttest('does extension specific path segment matching', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['*.js', ['${capture}.*.js']],\n\t\t]);\n\n\t\tconst nesting = t.nest([\n\t\t\t'foo.js',\n\t\t\t'foo.test.js',\n\t\t\t'fooTest.js',\n\t\t\t'bar.js.js',\n\t\t], 'mydir');\n\n\t\tassertMapEquals(nesting, {\n\t\t\t'foo.js': ['foo.test.js'],\n\t\t\t'fooTest.js': [],\n\t\t\t'bar.js.js': [],\n\t\t});\n\t});\n\n\ttest('does exact match nesting', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['package.json', ['.npmrc', 'npm-shrinkwrap.json', 'yarn.lock', '.yarnclean', '.yarnignore', '.yarn-integrity', '.yarnrc']],\n\t\t\t['bower.json', ['.bowerrc']],\n\t\t]);\n\n\t\tconst nesting = t.nest([\n\t\t\t'package.json',\n\t\t\t'.npmrc', 'npm-shrinkwrap.json', 'yarn.lock',\n\t\t\t'.bowerrc',\n\t\t], 'mydir');\n\n\t\tassertMapEquals(nesting, {\n\t\t\t'package.json': [\n\t\t\t\t'.npmrc', 'npm-shrinkwrap.json', 'yarn.lock'],\n\t\t\t'.bowerrc': [],\n\t\t});\n\t});\n\n\ttest('eslint test', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['.eslintrc*', ['.eslint*']],\n\t\t]);\n\n\t\tconst nesting1 = t.nest([\n\t\t\t'.eslintrc.json',\n\t\t\t'.eslintignore',\n\t\t], 'mydir');\n\n\t\tassertMapEquals(nesting1, {\n\t\t\t'.eslintrc.json': ['.eslintignore'],\n\t\t});\n\n\t\tconst nesting2 = t.nest([\n\t\t\t'.eslintrc',\n\t\t\t'.eslintignore',\n\t\t], 'mydir');\n\n\t\tassertMapEquals(nesting2, {\n\t\t\t'.eslintrc': ['.eslintignore'],\n\t\t});\n\t});\n\n\ttest('basename expansion', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['*-vsdoc.js', ['${basename}.doc']],\n\t\t]);\n\n\t\tconst nesting1 = t.nest([\n\t\t\t'boop-vsdoc.js',\n\t\t\t'boop-vsdoc.doc',\n\t\t\t'boop.doc',\n\t\t], 'mydir');\n\n\t\tassertMapEquals(nesting1, {\n\t\t\t'boop-vsdoc.js': ['boop-vsdoc.doc'],\n\t\t\t'boop.doc': [],\n\t\t});\n\t});\n\n\ttest('extname expansion', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['*-vsdoc.js', ['${extname}.doc']],\n\t\t]);\n\n\t\tconst nesting1 = t.nest([\n\t\t\t'boop-vsdoc.js',\n\t\t\t'js.doc',\n\t\t\t'boop.doc',\n\t\t], 'mydir');\n\n\t\tassertMapEquals(nesting1, {\n\t\t\t'boop-vsdoc.js': ['js.doc'],\n\t\t\t'boop.doc': [],\n\t\t});\n\t});\n\n\ttest('added segment matcher', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['*', ['${basename}.*.${extname}']],\n\t\t]);\n\n\t\tconst nesting1 = t.nest([\n\t\t\t'some.file',\n\t\t\t'some.html.file',\n\t\t\t'some.html.nested.file',\n\t\t\t'other.file',\n\t\t\t'some.thing',\n\t\t\t'some.thing.else',\n\t\t], 'mydir');\n\n\t\tassertMapEquals(nesting1, {\n\t\t\t'some.file': ['some.html.file', 'some.html.nested.file'],\n\t\t\t'other.file': [],\n\t\t\t'some.thing': [],\n\t\t\t'some.thing.else': [],\n\t\t});\n\t});\n\n\ttest('added segment matcher (old format)', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['*', ['$(basename).*.$(extname)']],\n\t\t]);\n\n\t\tconst nesting1 = t.nest([\n\t\t\t'some.file',\n\t\t\t'some.html.file',\n\t\t\t'some.html.nested.file',\n\t\t\t'other.file',\n\t\t\t'some.thing',\n\t\t\t'some.thing.else',\n\t\t], 'mydir');\n\n\t\tassertMapEquals(nesting1, {\n\t\t\t'some.file': ['some.html.file', 'some.html.nested.file'],\n\t\t\t'other.file': [],\n\t\t\t'some.thing': [],\n\t\t\t'some.thing.else': [],\n\t\t});\n\t});\n\n\ttest('dirname matching', () => {\n\t\tconst t = new ExplorerFileNestingTrie([\n\t\t\t['index.ts', ['${dirname}.ts']],\n\t\t]);\n\n\t\tconst nesting1 = t.nest([\n\t\t\t'otherFile.ts',\n\t\t\t'MyComponent.ts',\n\t\t\t'index.ts',\n\t\t], 'MyComponent');\n\n\t\tassertMapEquals(nesting1, {\n\t\t\t'index.ts': ['MyComponent.ts'],\n\t\t\t'otherFile.ts': [],\n\t\t});\n\t});\n\n\ttest.skip('is fast', () => {\n\t\tconst bigNester = new ExplorerFileNestingTrie([\n\t\t\t['*', ['${capture}.*']],\n\t\t\t['*.js', ['${capture}.*.js', '${capture}.map']],\n\t\t\t['*.jsx', ['${capture}.js']],\n\t\t\t['*.ts', ['${capture}.js', '${capture}.*.ts']],\n\t\t\t['*.tsx', ['${capture}.js']],\n\t\t\t['*.css', ['${capture}.*.css', '${capture}.map']],\n\t\t\t['*.html', ['${capture}.*.html']],\n\t\t\t['*.htm', ['${capture}.*.htm']],\n\t\t\t['*.less', ['${capture}.*.less', '${capture}.css']],\n\t\t\t['*.scss', ['${capture}.*.scss', '${capture}.css']],\n\t\t\t['*.sass', ['${capture}.css']],\n\t\t\t['*.styl', ['${capture}.css']],\n\t\t\t['*.coffee', ['${capture}.*.coffee', '${capture}.js']],\n\t\t\t['*.iced', ['${capture}.*.iced', '${capture}.js']],\n\t\t\t['*.config', ['${capture}.*.config']],\n\t\t\t['*.cs', ['${capture}.*.cs', '${capture}.cs.d.ts']],\n\t\t\t['*.vb', ['${capture}.*.vb']],\n\t\t\t['*.json', ['${capture}.*.json']],\n\t\t\t['*.md', ['${capture}.html']],\n\t\t\t['*.mdown', ['${capture}.html']],\n\t\t\t['*.markdown', ['${capture}.html']],\n\t\t\t['*.mdwn', ['${capture}.html']],\n\t\t\t['*.svg', ['${capture}.svgz']],\n\t\t\t['*.a', ['${capture}.b']],\n\t\t\t['*.b', ['${capture}.a']],\n\t\t\t['*.resx', ['${capture}.designer.cs']],\n\t\t\t['package.json', ['.npmrc', 'npm-shrinkwrap.json', 'yarn.lock', '.yarnclean', '.yarnignore', '.yarn-integrity', '.yarnrc']],\n\t\t\t['bower.json', ['.bowerrc']],\n\t\t\t['*-vsdoc.js', ['${capture}.js']],\n\t\t\t['*.tt', ['${capture}.*']]\n\t\t]);\n\n\t\tconst bigFiles = Array.from({ length: 50000 / 6 }).map((_, i) => [\n\t\t\t'file' + i + '.js',\n\t\t\t'file' + i + '.map',\n\t\t\t'file' + i + '.css',\n\t\t\t'file' + i + '.ts',\n\t\t\t'file' + i + '.d.ts',\n\t\t\t'file' + i + '.jsx',\n\t\t]).flat();\n\n\t\tconst start = performance.now();\n\t\t// const _bigResult =\n\t\tbigNester.nest(bigFiles, 'mydir');\n\t\tconst end = performance.now();\n\t\tassert(end - start < 1000, 'too slow...' + (end - start));\n\t\t// console.log(bigResult)\n\t});\n});\n"]}