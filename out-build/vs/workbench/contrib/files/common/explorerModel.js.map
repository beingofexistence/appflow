{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/files/common/explorerModel.ts"],"names":[],"mappings":"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","file":"explorerModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { posix } from 'vs/base/common/path';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { IFileStat, IFileService, FileSystemProviderCapabilities } from 'vs/platform/files/common/files';\nimport { rtrim, startsWithIgnoreCase, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { memoize } from 'vs/base/common/decorators';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { joinPath, isEqualOrParent, basenameOrAuthority } from 'vs/base/common/resources';\nimport { IFilesConfiguration, SortOrder } from 'vs/workbench/contrib/files/common/files';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { ExplorerFileNestingTrie } from 'vs/workbench/contrib/files/common/explorerFileNestingTrie';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { IFilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\n\nexport class ExplorerModel implements IDisposable {\n\n\tprivate _roots!: ExplorerItem[];\n\tprivate _listener: IDisposable;\n\tprivate readonly _onDidChangeRoots = new Emitter<void>();\n\n\tconstructor(\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\tfileService: IFileService,\n\t\tconfigService: IConfigurationService,\n\t\tfilesConfigService: IFilesConfigurationService,\n\t) {\n\t\tconst setRoots = () => this._roots = this.contextService.getWorkspace().folders\n\t\t\t.map(folder => new ExplorerItem(folder.uri, fileService, configService, filesConfigService, undefined, true, false, false, false, folder.name));\n\t\tsetRoots();\n\n\t\tthis._listener = this.contextService.onDidChangeWorkspaceFolders(() => {\n\t\t\tsetRoots();\n\t\t\tthis._onDidChangeRoots.fire();\n\t\t});\n\t}\n\n\tget roots(): ExplorerItem[] {\n\t\treturn this._roots;\n\t}\n\n\tget onDidChangeRoots(): Event<void> {\n\t\treturn this._onDidChangeRoots.event;\n\t}\n\n\t/**\n\t * Returns an array of child stat from this stat that matches with the provided path.\n\t * Starts matching from the first root.\n\t * Will return empty array in case the FileStat does not exist.\n\t */\n\tfindAll(resource: URI): ExplorerItem[] {\n\t\treturn coalesce(this.roots.map(root => root.find(resource)));\n\t}\n\n\t/**\n\t * Returns a FileStat that matches the passed resource.\n\t * In case multiple FileStat are matching the resource (same folder opened multiple times) returns the FileStat that has the closest root.\n\t * Will return undefined in case the FileStat does not exist.\n\t */\n\tfindClosest(resource: URI): ExplorerItem | null {\n\t\tconst folder = this.contextService.getWorkspaceFolder(resource);\n\t\tif (folder) {\n\t\t\tconst root = this.roots.find(r => this.uriIdentityService.extUri.isEqual(r.resource, folder.uri));\n\t\t\tif (root) {\n\t\t\t\treturn root.find(resource);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._listener);\n\t}\n}\n\nexport class ExplorerItem {\n\t_isDirectoryResolved: boolean; // used in tests\n\tpublic error: Error | undefined = undefined;\n\tprivate _isExcluded = false;\n\n\tpublic nestedParent: ExplorerItem | undefined;\n\tpublic nestedChildren: ExplorerItem[] | undefined;\n\n\tconstructor(\n\t\tpublic resource: URI,\n\t\tprivate readonly fileService: IFileService,\n\t\tprivate readonly configService: IConfigurationService,\n\t\tprivate readonly filesConfigService: IFilesConfigurationService,\n\t\tprivate _parent: ExplorerItem | undefined,\n\t\tprivate _isDirectory?: boolean,\n\t\tprivate _isSymbolicLink?: boolean,\n\t\tprivate _readonly?: boolean,\n\t\tprivate _locked?: boolean,\n\t\tprivate _name: string = basenameOrAuthority(resource),\n\t\tprivate _mtime?: number,\n\t\tprivate _unknown = false\n\t) {\n\t\tthis._isDirectoryResolved = false;\n\t}\n\n\tget isExcluded(): boolean {\n\t\tif (this._isExcluded) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!this._parent) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._parent.isExcluded;\n\t}\n\n\tset isExcluded(value: boolean) {\n\t\tthis._isExcluded = value;\n\t}\n\n\thasChildren(filter: (stat: ExplorerItem) => boolean): boolean {\n\t\tif (this.hasNests) {\n\t\t\treturn this.nestedChildren?.some(c => filter(c)) ?? false;\n\t\t} else {\n\t\t\treturn this.isDirectory;\n\t\t}\n\t}\n\n\tget hasNests() {\n\t\treturn !!(this.nestedChildren?.length);\n\t}\n\n\tget isDirectoryResolved(): boolean {\n\t\treturn this._isDirectoryResolved;\n\t}\n\n\tget isSymbolicLink(): boolean {\n\t\treturn !!this._isSymbolicLink;\n\t}\n\n\tget isDirectory(): boolean {\n\t\treturn !!this._isDirectory;\n\t}\n\n\tget isReadonly(): boolean | IMarkdownString {\n\t\treturn this.filesConfigService.isReadonly(this.resource, { resource: this.resource, name: this.name, readonly: this._readonly, locked: this._locked });\n\t}\n\n\tget mtime(): number | undefined {\n\t\treturn this._mtime;\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tget isUnknown(): boolean {\n\t\treturn this._unknown;\n\t}\n\n\tget parent(): ExplorerItem | undefined {\n\t\treturn this._parent;\n\t}\n\n\tget root(): ExplorerItem {\n\t\tif (!this._parent) {\n\t\t\treturn this;\n\t\t}\n\n\t\treturn this._parent.root;\n\t}\n\n\t@memoize get children(): Map<string, ExplorerItem> {\n\t\treturn new Map<string, ExplorerItem>();\n\t}\n\n\tprivate updateName(value: string): void {\n\t\t// Re-add to parent since the parent has a name map to children and the name might have changed\n\t\tthis._parent?.removeChild(this);\n\t\tthis._name = value;\n\t\tthis._parent?.addChild(this);\n\t}\n\n\tgetId(): string {\n\t\treturn this.root.resource.toString() + '::' + this.resource.toString();\n\t}\n\n\ttoString(): string {\n\t\treturn `ExplorerItem: ${this.name}`;\n\t}\n\n\tget isRoot(): boolean {\n\t\treturn this === this.root;\n\t}\n\n\tstatic create(fileService: IFileService, configService: IConfigurationService, filesConfigService: IFilesConfigurationService, raw: IFileStat, parent: ExplorerItem | undefined, resolveTo?: readonly URI[]): ExplorerItem {\n\t\tconst stat = new ExplorerItem(raw.resource, fileService, configService, filesConfigService, parent, raw.isDirectory, raw.isSymbolicLink, raw.readonly, raw.locked, raw.name, raw.mtime, !raw.isFile && !raw.isDirectory);\n\n\t\t// Recursively add children if present\n\t\tif (stat.isDirectory) {\n\n\t\t\t// isDirectoryResolved is a very important indicator in the stat model that tells if the folder was fully resolved\n\t\t\t// the folder is fully resolved if either it has a list of children or the client requested this by using the resolveTo\n\t\t\t// array of resource path to resolve.\n\t\t\tstat._isDirectoryResolved = !!raw.children || (!!resolveTo && resolveTo.some((r) => {\n\t\t\t\treturn isEqualOrParent(r, stat.resource);\n\t\t\t}));\n\n\t\t\t// Recurse into children\n\t\t\tif (raw.children) {\n\t\t\t\tfor (let i = 0, len = raw.children.length; i < len; i++) {\n\t\t\t\t\tconst child = ExplorerItem.create(fileService, configService, filesConfigService, raw.children[i], stat, resolveTo);\n\t\t\t\t\tstat.addChild(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\t/**\n\t * Merges the stat which was resolved from the disk with the local stat by copying over properties\n\t * and children. The merge will only consider resolved stat elements to avoid overwriting data which\n\t * exists locally.\n\t */\n\tstatic mergeLocalWithDisk(disk: ExplorerItem, local: ExplorerItem): void {\n\t\tif (disk.resource.toString() !== local.resource.toString()) {\n\t\t\treturn; // Merging only supported for stats with the same resource\n\t\t}\n\n\t\t// Stop merging when a folder is not resolved to avoid loosing local data\n\t\tconst mergingDirectories = disk.isDirectory || local.isDirectory;\n\t\tif (mergingDirectories && local._isDirectoryResolved && !disk._isDirectoryResolved) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Properties\n\t\tlocal.resource = disk.resource;\n\t\tif (!local.isRoot) {\n\t\t\tlocal.updateName(disk.name);\n\t\t}\n\t\tlocal._isDirectory = disk.isDirectory;\n\t\tlocal._mtime = disk.mtime;\n\t\tlocal._isDirectoryResolved = disk._isDirectoryResolved;\n\t\tlocal._isSymbolicLink = disk.isSymbolicLink;\n\t\tlocal.error = disk.error;\n\n\t\t// Merge Children if resolved\n\t\tif (mergingDirectories && disk._isDirectoryResolved) {\n\n\t\t\t// Map resource => stat\n\t\t\tconst oldLocalChildren = new ResourceMap<ExplorerItem>();\n\t\t\tlocal.children.forEach(child => {\n\t\t\t\toldLocalChildren.set(child.resource, child);\n\t\t\t});\n\n\t\t\t// Clear current children\n\t\t\tlocal.children.clear();\n\n\t\t\t// Merge received children\n\t\t\tdisk.children.forEach(diskChild => {\n\t\t\t\tconst formerLocalChild = oldLocalChildren.get(diskChild.resource);\n\t\t\t\t// Existing child: merge\n\t\t\t\tif (formerLocalChild) {\n\t\t\t\t\tExplorerItem.mergeLocalWithDisk(diskChild, formerLocalChild);\n\t\t\t\t\tlocal.addChild(formerLocalChild);\n\t\t\t\t\toldLocalChildren.delete(diskChild.resource);\n\t\t\t\t}\n\n\t\t\t\t// New child: add\n\t\t\t\telse {\n\t\t\t\t\tlocal.addChild(diskChild);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\toldLocalChildren.forEach(oldChild => {\n\t\t\t\tif (oldChild instanceof NewExplorerItem) {\n\t\t\t\t\tlocal.addChild(oldChild);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Adds a child element to this folder.\n\t */\n\taddChild(child: ExplorerItem): void {\n\t\t// Inherit some parent properties to child\n\t\tchild._parent = this;\n\t\tchild.updateResource(false);\n\t\tthis.children.set(this.getPlatformAwareName(child.name), child);\n\t}\n\n\tgetChild(name: string): ExplorerItem | undefined {\n\t\treturn this.children.get(this.getPlatformAwareName(name));\n\t}\n\n\tfetchChildren(sortOrder: SortOrder): ExplorerItem[] | Promise<ExplorerItem[]> {\n\t\tconst nestingConfig = this.configService.getValue<IFilesConfiguration>({ resource: this.root.resource }).explorer.fileNesting;\n\n\t\t// fast path when the children can be resolved sync\n\t\tif (nestingConfig.enabled && this.nestedChildren) {\n\t\t\treturn this.nestedChildren;\n\t\t}\n\n\t\treturn (async () => {\n\t\t\tif (!this._isDirectoryResolved) {\n\t\t\t\t// Resolve metadata only when the mtime is needed since this can be expensive\n\t\t\t\t// Mtime is only used when the sort order is 'modified'\n\t\t\t\tconst resolveMetadata = sortOrder === SortOrder.Modified;\n\t\t\t\tthis.error = undefined;\n\t\t\t\ttry {\n\t\t\t\t\tconst stat = await this.fileService.resolve(this.resource, { resolveSingleChildDescendants: true, resolveMetadata });\n\t\t\t\t\tconst resolved = ExplorerItem.create(this.fileService, this.configService, this.filesConfigService, stat, this);\n\t\t\t\t\tExplorerItem.mergeLocalWithDisk(resolved, this);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.error = e;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t\tthis._isDirectoryResolved = true;\n\t\t\t}\n\n\t\t\tconst items: ExplorerItem[] = [];\n\t\t\tif (nestingConfig.enabled) {\n\t\t\t\tconst fileChildren: [string, ExplorerItem][] = [];\n\t\t\t\tconst dirChildren: [string, ExplorerItem][] = [];\n\t\t\t\tfor (const child of this.children.entries()) {\n\t\t\t\t\tchild[1].nestedParent = undefined;\n\t\t\t\t\tif (child[1].isDirectory) {\n\t\t\t\t\t\tdirChildren.push(child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfileChildren.push(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst nested = this.fileNester.nest(\n\t\t\t\t\tfileChildren.map(([name]) => name),\n\t\t\t\t\tthis.getPlatformAwareName(this.name));\n\n\t\t\t\tfor (const [fileEntryName, fileEntryItem] of fileChildren) {\n\t\t\t\t\tconst nestedItems = nested.get(fileEntryName);\n\t\t\t\t\tif (nestedItems !== undefined) {\n\t\t\t\t\t\tfileEntryItem.nestedChildren = [];\n\t\t\t\t\t\tfor (const name of nestedItems.keys()) {\n\t\t\t\t\t\t\tconst child = assertIsDefined(this.children.get(name));\n\t\t\t\t\t\t\tfileEntryItem.nestedChildren.push(child);\n\t\t\t\t\t\t\tchild.nestedParent = fileEntryItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t\titems.push(fileEntryItem);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfileEntryItem.nestedChildren = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const [_, dirEntryItem] of dirChildren.values()) {\n\t\t\t\t\titems.push(dirEntryItem);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.children.forEach(child => {\n\t\t\t\t\titems.push(child);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn items;\n\t\t})();\n\t}\n\n\tprivate _fileNester: ExplorerFileNestingTrie | undefined;\n\tprivate get fileNester(): ExplorerFileNestingTrie {\n\t\tif (!this.root._fileNester) {\n\t\t\tconst nestingConfig = this.configService.getValue<IFilesConfiguration>({ resource: this.root.resource }).explorer.fileNesting;\n\t\t\tconst patterns = Object.entries(nestingConfig.patterns)\n\t\t\t\t.filter(entry =>\n\t\t\t\t\ttypeof (entry[0]) === 'string' && typeof (entry[1]) === 'string' && entry[0] && entry[1])\n\t\t\t\t.map(([parentPattern, childrenPatterns]) =>\n\t\t\t\t\t[\n\t\t\t\t\t\tthis.getPlatformAwareName(parentPattern.trim()),\n\t\t\t\t\t\tchildrenPatterns.split(',').map(p => this.getPlatformAwareName(p.trim().replace(/\\u200b/g, '').trim()))\n\t\t\t\t\t\t\t.filter(p => p !== '')\n\t\t\t\t\t] as [string, string[]]);\n\n\t\t\tthis.root._fileNester = new ExplorerFileNestingTrie(patterns);\n\t\t}\n\t\treturn this.root._fileNester;\n\t}\n\n\t/**\n\t * Removes a child element from this folder.\n\t */\n\tremoveChild(child: ExplorerItem): void {\n\t\tthis.nestedChildren = undefined;\n\t\tthis.children.delete(this.getPlatformAwareName(child.name));\n\t}\n\n\tforgetChildren(): void {\n\t\tthis.children.clear();\n\t\tthis.nestedChildren = undefined;\n\t\tthis._isDirectoryResolved = false;\n\t\tthis._fileNester = undefined;\n\t}\n\n\tprivate getPlatformAwareName(name: string): string {\n\t\treturn this.fileService.hasCapability(this.resource, FileSystemProviderCapabilities.PathCaseSensitive) ? name : name.toLowerCase();\n\t}\n\n\t/**\n\t * Moves this element under a new parent element.\n\t */\n\tmove(newParent: ExplorerItem): void {\n\t\tthis.nestedParent?.removeChild(this);\n\t\tthis._parent?.removeChild(this);\n\t\tnewParent.removeChild(this); // make sure to remove any previous version of the file if any\n\t\tnewParent.addChild(this);\n\t\tthis.updateResource(true);\n\t}\n\n\tprivate updateResource(recursive: boolean): void {\n\t\tif (this._parent) {\n\t\t\tthis.resource = joinPath(this._parent.resource, this.name);\n\t\t}\n\n\t\tif (recursive) {\n\t\t\tif (this.isDirectory) {\n\t\t\t\tthis.children.forEach(child => {\n\t\t\t\t\tchild.updateResource(true);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Tells this stat that it was renamed. This requires changes to all children of this stat (if any)\n\t * so that the path property can be updated properly.\n\t */\n\trename(renamedStat: { name: string; mtime?: number }): void {\n\n\t\t// Merge a subset of Properties that can change on rename\n\t\tthis.updateName(renamedStat.name);\n\t\tthis._mtime = renamedStat.mtime;\n\n\t\t// Update Paths including children\n\t\tthis.updateResource(true);\n\t}\n\n\t/**\n\t * Returns a child stat from this stat that matches with the provided path.\n\t * Will return \"null\" in case the child does not exist.\n\t */\n\tfind(resource: URI): ExplorerItem | null {\n\t\t// Return if path found\n\t\t// For performance reasons try to do the comparison as fast as possible\n\t\tconst ignoreCase = !this.fileService.hasCapability(resource, FileSystemProviderCapabilities.PathCaseSensitive);\n\t\tif (resource && this.resource.scheme === resource.scheme && equalsIgnoreCase(this.resource.authority, resource.authority) &&\n\t\t\t(ignoreCase ? startsWithIgnoreCase(resource.path, this.resource.path) : resource.path.startsWith(this.resource.path))) {\n\t\t\treturn this.findByPath(rtrim(resource.path, posix.sep), this.resource.path.length, ignoreCase);\n\t\t}\n\n\t\treturn null; //Unable to find\n\t}\n\n\tprivate findByPath(path: string, index: number, ignoreCase: boolean): ExplorerItem | null {\n\t\tif (isEqual(rtrim(this.resource.path, posix.sep), path, ignoreCase)) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this.isDirectory) {\n\t\t\t// Ignore separtor to more easily deduct the next name to search\n\t\t\twhile (index < path.length && path[index] === posix.sep) {\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tlet indexOfNextSep = path.indexOf(posix.sep, index);\n\t\t\tif (indexOfNextSep === -1) {\n\t\t\t\t// If there is no separator take the remainder of the path\n\t\t\t\tindexOfNextSep = path.length;\n\t\t\t}\n\t\t\t// The name to search is between two separators\n\t\t\tconst name = path.substring(index, indexOfNextSep);\n\n\t\t\tconst child = this.children.get(this.getPlatformAwareName(name));\n\n\t\t\tif (child) {\n\t\t\t\t// We found a child with the given name, search inside it\n\t\t\t\treturn child.findByPath(path, indexOfNextSep, ignoreCase);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport class NewExplorerItem extends ExplorerItem {\n\tconstructor(fileService: IFileService, configService: IConfigurationService, filesConfigService: IFilesConfigurationService, parent: ExplorerItem, isDirectory: boolean) {\n\t\tsuper(URI.file(''), fileService, configService, filesConfigService, parent, isDirectory);\n\t\tthis._isDirectoryResolved = true;\n\t}\n}\n"]}