{"version":3,"sources":["vs/workbench/contrib/files/browser/workspaceWatcher.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAgBzF,IAAM,IAAI,GAAV,MAAM,IAAiB,SAAQ,eAAG;QAIxC,YACwB,CAAkC,EAClC,CAA0C,EACvC,CAAoC,EACxC,CAAyC,EAC/C,CAAmC,EAC9B,CAAwC,EAC/C,CAAiC;YAE/C,KAAK,EAAE,CAAC;YARgC,MAAC,GAAD,CAAC,CAAgB;YACjB,MAAC,GAAD,CAAC,CAAwB;YACtB,MAAC,GAAD,CAAC,CAAkB;YACvB,MAAC,GAAD,CAAC,CAAuB;YAC9B,MAAC,GAAD,CAAC,CAAiB;YACb,MAAC,GAAD,CAAC,CAAsB;YAC9B,MAAC,GAAD,CAAC,CAAe;YAT/B,MAAC,GAAmB,IAAI,SAAG,CAAsB,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;YAaxI,IAAI,CAAC,CAAC,EAAkB,CAAC;YAEzB,IAAI,CAAC,CAAC,EAAQ,CAAC;QAChB,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAc,2BAA2B,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAA2B,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1G,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAc,yBAAyB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAA0B,CAAC,CAAC,CAAC;YACtG,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAoB,wBAAwB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAwB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1G,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAW,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAe,KAAK,CAAC,CAAC,CAAC,CAAC;QACxF,CAAC;QAEO,CAAC,CAA2B,CAA+B;YAElE,6BAA6B;YAC7B,KAAK,MAAM,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,CAAC,CAAgB,OAAO,CAAC,CAAC;aAC/B;YAED,yBAAyB;YACzB,KAAK,MAAM,KAAK,IAAI,CAAC,CAAC,KAAK,EAAE;gBAC5B,IAAI,CAAC,CAAC,CAAc,KAAK,CAAC,CAAC;aAC3B;QACF,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,CAAC,EAAQ,CAAC;QAChB,CAAC;QAEO,CAAC,CAAwB,CAA4B;YAC5D,IAAI,CAAC,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,EAAE;gBACrG,IAAI,CAAC,CAAC,EAAQ,CAAC;aACf;QACF,CAAC;QAEO,CAAC,CAAe,KAAY;YACnC,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAE7B,sCAAsC;YACtC,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAC/B,IAAI,CAAC,CAAC,CAAmB,MAAM,CAC9B,uBAAQ,CAAC,OAAO,EAChB,IAAA,cAAQ,EAAC,CAAa,EAAE,IAA6H,CAAC,EACtJ,CAAC;wBACA,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAW,EAAE,IAAc,CAAC;wBAC5C,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAa,IAAI,CAAC,SAAG,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;qBAC/F,CAAC,EACF;oBACC,MAAM,EAAE,IAAI;oBACZ,cAAc,EAAE,EAAE,EAAE,EAAE,mBAAmB,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,kCAAmB,CAAC,SAAS,EAAE;iBACpG,CACD,CAAC;aACF;YAED,uDAAuD;iBAClD,IAAI,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;gBACtC,IAAI,CAAC,CAAC,CAAmB,MAAM,CAC9B,uBAAQ,CAAC,OAAO,EAChB,IAAA,cAAQ,EAAC,CAAgB,EAAE,IAAyJ,CAAC,EACrL,CAAC;wBACA,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAQ,EAAE,IAAQ,CAAC;wBACnC,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAW,MAAM,EAAE;qBACpC,CAAC,EACF;oBACC,MAAM,EAAE,IAAI;oBACZ,QAAQ,EAAE,mCAAoB,CAAC,MAAM,CAAC,wEAAwE;iBAC9G,CACD,CAAC;aACF;QACF,CAAC;QAEO,CAAC,CAAc,SAA2B;YAEjD,uDAAuD;YACvD,MAAM,QAAQ,GAAa,EAAE,CAAC;YAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAsB,EAAE,QAAQ,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;YACpG,IAAI,MAAM,CAAC,KAAK,EAAE,cAAc,EAAE;gBACjC,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE;oBAC9C,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;wBAC9C,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACnB;iBACD;aACD;YAED,MAAM,YAAY,GAAG,IAAI,SAAG,CAAc,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC;YAEvG,qCAAqC;YACrC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;YAE/C,iDAAiD;YACjD,IAAI,MAAM,CAAC,KAAK,EAAE,cAAc,EAAE;gBACjC,KAAK,MAAM,WAAW,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE;oBACtD,IAAI,CAAC,WAAW,EAAE;wBACjB,SAAS;qBACT;oBAED,4CAA4C;oBAC5C,IAAI,IAAA,UAAG,EAAQ,WAAW,CAAC,EAAE;wBAC5B,MAAM,SAAS,GAAG,SAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;wBAC/E,IAAI,IAAI,CAAC,CAAC,CAAkB,MAAM,CAAC,eAAe,CAAC,SAAS,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE;4BAC7E,YAAY,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;yBACvC;qBACD;oBAED,0CAA0C;yBACrC;wBACJ,MAAM,SAAS,GAAG,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;wBACpD,YAAY,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;qBACvC;iBACD;aACD;YAED,gCAAgC;YAChC,MAAM,WAAW,GAAG,IAAI,eAAG,EAAc,CAAC;YAC1C,KAAK,MAAM,CAAC,EAAE,WAAW,CAAC,IAAI,YAAY,EAAE;gBAC3C,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAW,KAAK,CAAC,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;aACpF;YACD,IAAI,CAAC,CAAC,CAAiB,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;QACxD,CAAC;QAEO,CAAC,CAAgB,SAA2B;YACnD,IAAI,IAAI,CAAC,CAAC,CAAiB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC9C,IAAA,eAAG,EAAK,IAAI,CAAC,CAAC,CAAiB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;gBACnD,IAAI,CAAC,CAAC,CAAiB,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;aAC7C;QACF,CAAC;QAEO,CAAC;YAER,oBAAoB;YACpB,IAAI,CAAC,CAAC,EAAkB,CAAC;YAEzB,8BAA8B;YAC9B,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,CAAC,CAAc,YAAY,EAAE,CAAC,OAAO,EAAE;gBAChE,IAAI,CAAC,CAAC,CAAc,MAAM,CAAC,CAAC;aAC5B;QACF,CAAC;QAEO,CAAC;YACR,KAAK,MAAM,CAAC,EAAE,UAAU,CAAC,IAAI,IAAI,CAAC,CAAC,EAAkB;gBACpD,UAAU,CAAC,OAAO,EAAE,CAAC;aACrB;YACD,IAAI,CAAC,CAAC,CAAiB,KAAK,EAAE,CAAC;QAChC,CAAC;QAEQ,OAAO;YACf,KAAK,CAAC,OAAO,EAAE,CAAC;YAEhB,IAAI,CAAC,CAAC,EAAkB,CAAC;QAC1B,CAAC;KACD,CAAA;IArKY,oBAAI;mBAAJ,IAAI;QAKd,WAAA,YAAI,CAAA;QACJ,WAAA,mBAAG,CAAA;QACH,WAAA,eAAG,CAAA;QACH,WAAA,kBAAG,CAAA;QACH,WAAA,YAAG,CAAA;QACH,WAAA,iBAAG,CAAA;QACH,WAAA,UAAG,CAAA;OAXO,IAAI,CAqKhB","file":"workspaceWatcher.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IDisposable, Disposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService, IConfigurationChangeEvent } from 'vs/platform/configuration/common/configuration';\nimport { IFilesConfiguration } from 'vs/platform/files/common/files';\nimport { IWorkspaceContextService, IWorkspaceFolder, IWorkspaceFoldersChangeEvent } from 'vs/platform/workspace/common/workspace';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { INotificationService, Severity, NeverShowAgainScope, NotificationPriority } from 'vs/platform/notification/common/notification';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { isAbsolute } from 'vs/base/common/path';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IWorkbenchFileService } from 'vs/workbench/services/files/common/files';\n\nexport class WorkspaceWatcher extends Disposable {\n\n\tprivate readonly watchedWorkspaces = new ResourceMap<IDisposable>(resource => this.uriIdentityService.extUri.getComparisonKey(resource));\n\n\tconstructor(\n\t\t@IWorkbenchFileService private readonly fileService: IWorkbenchFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IHostService private readonly hostService: IHostService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\n\t\tthis.refresh();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.contextService.onDidChangeWorkspaceFolders(e => this.onDidChangeWorkspaceFolders(e)));\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(() => this.onDidChangeWorkbenchState()));\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onDidChangeConfiguration(e)));\n\t\tthis._register(this.fileService.onDidWatchError(error => this.onDidWatchError(error)));\n\t}\n\n\tprivate onDidChangeWorkspaceFolders(e: IWorkspaceFoldersChangeEvent): void {\n\n\t\t// Removed workspace: Unwatch\n\t\tfor (const removed of e.removed) {\n\t\t\tthis.unwatchWorkspace(removed);\n\t\t}\n\n\t\t// Added workspace: Watch\n\t\tfor (const added of e.added) {\n\t\t\tthis.watchWorkspace(added);\n\t\t}\n\t}\n\n\tprivate onDidChangeWorkbenchState(): void {\n\t\tthis.refresh();\n\t}\n\n\tprivate onDidChangeConfiguration(e: IConfigurationChangeEvent): void {\n\t\tif (e.affectsConfiguration('files.watcherExclude') || e.affectsConfiguration('files.watcherInclude')) {\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tprivate onDidWatchError(error: Error): void {\n\t\tconst msg = error.toString();\n\n\t\t// Detect if we run into ENOSPC issues\n\t\tif (msg.indexOf('ENOSPC') >= 0) {\n\t\t\tthis.notificationService.prompt(\n\t\t\t\tSeverity.Warning,\n\t\t\t\tlocalize('enospcError', \"Unable to watch for file changes in this large workspace folder. Please follow the instructions link to resolve this issue.\"),\n\t\t\t\t[{\n\t\t\t\t\tlabel: localize('learnMore', \"Instructions\"),\n\t\t\t\t\trun: () => this.openerService.open(URI.parse('https://go.microsoft.com/fwlink/?linkid=867693'))\n\t\t\t\t}],\n\t\t\t\t{\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tneverShowAgain: { id: 'ignoreEnospcError', isSecondary: true, scope: NeverShowAgainScope.WORKSPACE }\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// Detect when the watcher throws an error unexpectedly\n\t\telse if (msg.indexOf('EUNKNOWN') >= 0) {\n\t\t\tthis.notificationService.prompt(\n\t\t\t\tSeverity.Warning,\n\t\t\t\tlocalize('eshutdownError', \"File changes watcher stopped unexpectedly. A reload of the window may enable the watcher again unless the workspace cannot be watched for file changes.\"),\n\t\t\t\t[{\n\t\t\t\t\tlabel: localize('reload', \"Reload\"),\n\t\t\t\t\trun: () => this.hostService.reload()\n\t\t\t\t}],\n\t\t\t\t{\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tpriority: NotificationPriority.SILENT // reduce potential spam since we don't really know how often this fires\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate watchWorkspace(workspace: IWorkspaceFolder): void {\n\n\t\t// Compute the watcher exclude rules from configuration\n\t\tconst excludes: string[] = [];\n\t\tconst config = this.configurationService.getValue<IFilesConfiguration>({ resource: workspace.uri });\n\t\tif (config.files?.watcherExclude) {\n\t\t\tfor (const key in config.files.watcherExclude) {\n\t\t\t\tif (config.files.watcherExclude[key] === true) {\n\t\t\t\t\texcludes.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst pathsToWatch = new ResourceMap<URI>(uri => this.uriIdentityService.extUri.getComparisonKey(uri));\n\n\t\t// Add the workspace as path to watch\n\t\tpathsToWatch.set(workspace.uri, workspace.uri);\n\n\t\t// Compute additional includes from configuration\n\t\tif (config.files?.watcherInclude) {\n\t\t\tfor (const includePath of config.files.watcherInclude) {\n\t\t\t\tif (!includePath) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Absolute: verify a child of the workspace\n\t\t\t\tif (isAbsolute(includePath)) {\n\t\t\t\t\tconst candidate = URI.file(includePath).with({ scheme: workspace.uri.scheme });\n\t\t\t\t\tif (this.uriIdentityService.extUri.isEqualOrParent(candidate, workspace.uri)) {\n\t\t\t\t\t\tpathsToWatch.set(candidate, candidate);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Relative: join against workspace folder\n\t\t\t\telse {\n\t\t\t\t\tconst candidate = workspace.toResource(includePath);\n\t\t\t\t\tpathsToWatch.set(candidate, candidate);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Watch all paths as instructed\n\t\tconst disposables = new DisposableStore();\n\t\tfor (const [, pathToWatch] of pathsToWatch) {\n\t\t\tdisposables.add(this.fileService.watch(pathToWatch, { recursive: true, excludes }));\n\t\t}\n\t\tthis.watchedWorkspaces.set(workspace.uri, disposables);\n\t}\n\n\tprivate unwatchWorkspace(workspace: IWorkspaceFolder): void {\n\t\tif (this.watchedWorkspaces.has(workspace.uri)) {\n\t\t\tdispose(this.watchedWorkspaces.get(workspace.uri));\n\t\t\tthis.watchedWorkspaces.delete(workspace.uri);\n\t\t}\n\t}\n\n\tprivate refresh(): void {\n\n\t\t// Unwatch all first\n\t\tthis.unwatchWorkspaces();\n\n\t\t// Watch each workspace folder\n\t\tfor (const folder of this.contextService.getWorkspace().folders) {\n\t\t\tthis.watchWorkspace(folder);\n\t\t}\n\t}\n\n\tprivate unwatchWorkspaces(): void {\n\t\tfor (const [, disposable] of this.watchedWorkspaces) {\n\t\t\tdisposable.dispose();\n\t\t}\n\t\tthis.watchedWorkspaces.clear();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.unwatchWorkspaces();\n\t}\n}\n"]}