{"version":3,"sources":["vs/workbench/contrib/files/browser/fileCommands.ts"],"names":[],"mappings":"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","file":"fileCommands.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { EditorResourceAccessor, IEditorCommandsContext, SideBySideEditor, IEditorIdentifier, SaveReason, EditorsOrder, EditorInputCapabilities } from 'vs/workbench/common/editor';\nimport { SideBySideEditorInput } from 'vs/workbench/common/editor/sideBySideEditorInput';\nimport { IWindowOpenable, IOpenWindowOptions, isWorkspaceToOpen, IOpenEmptyWindowOptions } from 'vs/platform/window/common/window';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { ServicesAccessor, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceContextService, UNTITLED_WORKSPACE_NAME } from 'vs/platform/workspace/common/workspace';\nimport { ExplorerFocusCondition, TextFileContentProvider, VIEWLET_ID, ExplorerCompressedFocusContext, ExplorerCompressedFirstFocusContext, ExplorerCompressedLastFocusContext, FilesExplorerFocusCondition, ExplorerFolderContext, VIEW_ID } from 'vs/workbench/contrib/files/common/files';\nimport { ExplorerViewPaneContainer } from 'vs/workbench/contrib/files/browser/explorerViewlet';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { IListService } from 'vs/platform/list/browser/listService';\nimport { CommandsRegistry, ICommandHandler, ICommandService } from 'vs/platform/commands/common/commands';\nimport { IContextKey, IContextKeyService, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { KeyMod, KeyCode, KeyChord } from 'vs/base/common/keyCodes';\nimport { isWeb, isWindows } from 'vs/base/common/platform';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { getResourceForCommand, getMultiSelectedResources, getOpenEditorsViewMultiSelection, IExplorerService } from 'vs/workbench/contrib/files/browser/files';\nimport { IWorkspaceEditingService } from 'vs/workbench/services/workspaces/common/workspaceEditing';\nimport { getMultiSelectedEditorContexts } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { Schemas } from 'vs/base/common/network';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { IEditorService, SIDE_GROUP, ISaveEditorsOptions } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService, GroupsOrder, IEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { basename, joinPath, isEqual } from 'vs/base/common/resources';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { EmbeddedCodeEditorWidget } from 'vs/editor/browser/widget/embeddedCodeEditorWidget';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { isCancellationError } from 'vs/base/common/errors';\nimport { toAction } from 'vs/base/common/actions';\nimport { EditorOpenSource, EditorResolution } from 'vs/platform/editor/common/editor';\nimport { hash } from 'vs/base/common/hash';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { IViewsService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { OPEN_TO_SIDE_COMMAND_ID, COMPARE_WITH_SAVED_COMMAND_ID, SELECT_FOR_COMPARE_COMMAND_ID, ResourceSelectedForCompareContext, COMPARE_SELECTED_COMMAND_ID, COMPARE_RESOURCE_COMMAND_ID, COPY_PATH_COMMAND_ID, COPY_RELATIVE_PATH_COMMAND_ID, REVEAL_IN_EXPLORER_COMMAND_ID, OPEN_WITH_EXPLORER_COMMAND_ID, SAVE_FILE_COMMAND_ID, SAVE_FILE_WITHOUT_FORMATTING_COMMAND_ID, SAVE_FILE_AS_COMMAND_ID, SAVE_ALL_COMMAND_ID, SAVE_ALL_IN_GROUP_COMMAND_ID, SAVE_FILES_COMMAND_ID, REVERT_FILE_COMMAND_ID, REMOVE_ROOT_FOLDER_COMMAND_ID, PREVIOUS_COMPRESSED_FOLDER, NEXT_COMPRESSED_FOLDER, FIRST_COMPRESSED_FOLDER, LAST_COMPRESSED_FOLDER, NEW_UNTITLED_FILE_COMMAND_ID, NEW_UNTITLED_FILE_LABEL, NEW_FILE_COMMAND_ID } from './fileConstants';\nimport { IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { RemoveRootFolderAction } from 'vs/workbench/browser/actions/workspaceActions';\nimport { OpenEditorsView } from 'vs/workbench/contrib/files/browser/views/openEditorsView';\n\nexport const openWindowCommand = (accessor: ServicesAccessor, toOpen: IWindowOpenable[], options?: IOpenWindowOptions) => {\n\tif (Array.isArray(toOpen)) {\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst environmentService = accessor.get(IEnvironmentService);\n\n\t\t// rewrite untitled: workspace URIs to the absolute path on disk\n\t\ttoOpen = toOpen.map(openable => {\n\t\t\tif (isWorkspaceToOpen(openable) && openable.workspaceUri.scheme === Schemas.untitled) {\n\t\t\t\treturn {\n\t\t\t\t\tworkspaceUri: joinPath(environmentService.untitledWorkspacesHome, openable.workspaceUri.path, UNTITLED_WORKSPACE_NAME)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn openable;\n\t\t});\n\n\t\thostService.openWindow(toOpen, options);\n\t}\n};\n\nexport const newWindowCommand = (accessor: ServicesAccessor, options?: IOpenEmptyWindowOptions) => {\n\tconst hostService = accessor.get(IHostService);\n\thostService.openWindow(options);\n};\n\n// Command registration\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ExplorerFocusCondition,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter\n\t},\n\tid: OPEN_TO_SIDE_COMMAND_ID, handler: async (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst listService = accessor.get(IListService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst resources = getMultiSelectedResources(resource, listService, editorService, explorerService);\n\n\t\t// Set side input\n\t\tif (resources.length) {\n\t\t\tconst untitledResources = resources.filter(resource => resource.scheme === Schemas.untitled);\n\t\t\tconst fileResources = resources.filter(resource => resource.scheme !== Schemas.untitled);\n\n\t\t\tconst items = await Promise.all(fileResources.map(async resource => {\n\t\t\t\tconst item = explorerService.findClosest(resource);\n\t\t\t\tif (item) {\n\t\t\t\t\t// Explorer already resolved the item, no need to go to the file service #109780\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\n\t\t\t\treturn await fileService.stat(resource);\n\t\t\t}));\n\t\t\tconst files = items.filter(i => !i.isDirectory);\n\t\t\tconst editors = files.map(f => ({\n\t\t\t\tresource: f.resource,\n\t\t\t\toptions: { pinned: true }\n\t\t\t})).concat(...untitledResources.map(untitledResource => ({ resource: untitledResource, options: { pinned: true } })));\n\n\t\t\tawait editorService.openEditors(editors, SIDE_GROUP);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerFolderContext.toNegated()),\n\tprimary: KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow\n\t},\n\tid: 'explorer.openAndPassFocus', handler: async (accessor, _resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst resources = explorerService.getContext(true);\n\n\t\tif (resources.length) {\n\t\t\tawait editorService.openEditors(resources.map(r => ({ resource: r.resource, options: { preserveFocus: false, pinned: true } })));\n\t\t}\n\t}\n});\n\nconst COMPARE_WITH_SAVED_SCHEMA = 'showModifications';\nlet providerDisposables: IDisposable[] = [];\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: COMPARE_WITH_SAVED_COMMAND_ID,\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyD),\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst textModelService = accessor.get(ITextModelService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst fileService = accessor.get(IFileService);\n\n\t\t// Register provider at first as needed\n\t\tlet registerEditorListener = false;\n\t\tif (providerDisposables.length === 0) {\n\t\t\tregisterEditorListener = true;\n\n\t\t\tconst provider = instantiationService.createInstance(TextFileContentProvider);\n\t\t\tproviderDisposables.push(provider);\n\t\t\tproviderDisposables.push(textModelService.registerTextModelContentProvider(COMPARE_WITH_SAVED_SCHEMA, provider));\n\t\t}\n\n\t\t// Open editor (only resources that can be handled by file service are supported)\n\t\tconst uri = getResourceForCommand(resource, accessor.get(IListService), editorService);\n\t\tif (uri && fileService.hasProvider(uri)) {\n\t\t\tconst name = basename(uri);\n\t\t\tconst editorLabel = nls.localize('modifiedLabel', \"{0} (in file) ↔ {1}\", name, name);\n\n\t\t\ttry {\n\t\t\t\tawait TextFileContentProvider.open(uri, COMPARE_WITH_SAVED_SCHEMA, editorLabel, editorService, { pinned: true });\n\t\t\t\t// Dispose once no more diff editor is opened with the scheme\n\t\t\t\tif (registerEditorListener) {\n\t\t\t\t\tproviderDisposables.push(editorService.onDidVisibleEditorsChange(() => {\n\t\t\t\t\t\tif (!editorService.editors.some(editor => !!EditorResourceAccessor.getCanonicalUri(editor, { supportSideBySide: SideBySideEditor.SECONDARY, filterByScheme: COMPARE_WITH_SAVED_SCHEMA }))) {\n\t\t\t\t\t\t\tproviderDisposables = dispose(providerDisposables);\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tproviderDisposables = dispose(providerDisposables);\n\t\t\t}\n\t\t}\n\t}\n});\n\nlet globalResourceToCompare: URI | undefined;\nlet resourceSelectedForCompareContext: IContextKey<boolean>;\nCommandsRegistry.registerCommand({\n\tid: SELECT_FOR_COMPARE_COMMAND_ID,\n\thandler: (accessor, resource: URI | object) => {\n\t\tconst listService = accessor.get(IListService);\n\n\t\tglobalResourceToCompare = getResourceForCommand(resource, listService, accessor.get(IEditorService));\n\t\tif (!resourceSelectedForCompareContext) {\n\t\t\tresourceSelectedForCompareContext = ResourceSelectedForCompareContext.bindTo(accessor.get(IContextKeyService));\n\t\t}\n\t\tresourceSelectedForCompareContext.set(true);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: COMPARE_SELECTED_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), editorService, explorerService);\n\n\t\tif (resources.length === 2) {\n\t\t\treturn editorService.openEditor({\n\t\t\t\toriginal: { resource: resources[0] },\n\t\t\t\tmodified: { resource: resources[1] },\n\t\t\t\toptions: { pinned: true }\n\t\t\t});\n\t\t}\n\n\t\treturn true;\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: COMPARE_RESOURCE_COMMAND_ID,\n\thandler: (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst listService = accessor.get(IListService);\n\n\t\tconst rightResource = getResourceForCommand(resource, listService, editorService);\n\t\tif (globalResourceToCompare && rightResource) {\n\t\t\teditorService.openEditor({\n\t\t\t\toriginal: { resource: globalResourceToCompare },\n\t\t\t\tmodified: { resource: rightResource },\n\t\t\t\toptions: { pinned: true }\n\t\t\t});\n\t\t}\n\t}\n});\n\nasync function resourcesToClipboard(resources: URI[], relative: boolean, clipboardService: IClipboardService, labelService: ILabelService, configurationService: IConfigurationService): Promise<void> {\n\tif (resources.length) {\n\t\tconst lineDelimiter = isWindows ? '\\r\\n' : '\\n';\n\n\t\tlet separator: '/' | '\\\\' | undefined = undefined;\n\t\tif (relative) {\n\t\t\tconst relativeSeparator = configurationService.getValue('explorer.copyRelativePathSeparator');\n\t\t\tif (relativeSeparator === '/' || relativeSeparator === '\\\\') {\n\t\t\t\tseparator = relativeSeparator;\n\t\t\t}\n\t\t}\n\n\t\tconst text = resources.map(resource => labelService.getUriLabel(resource, { relative, noPrefix: true, separator })).join(lineDelimiter);\n\t\tawait clipboardService.writeText(text);\n\t}\n}\n\nconst copyPathCommandHandler: ICommandHandler = async (accessor, resource: URI | object) => {\n\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), accessor.get(IEditorService), accessor.get(IExplorerService));\n\tawait resourcesToClipboard(resources, false, accessor.get(IClipboardService), accessor.get(ILabelService), accessor.get(IConfigurationService));\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus.toNegated(),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC,\n\twin: {\n\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC\n\t},\n\tid: COPY_PATH_COMMAND_ID,\n\thandler: copyPathCommandHandler\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC),\n\twin: {\n\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC\n\t},\n\tid: COPY_PATH_COMMAND_ID,\n\thandler: copyPathCommandHandler\n});\n\nconst copyRelativePathCommandHandler: ICommandHandler = async (accessor, resource: URI | object) => {\n\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), accessor.get(IEditorService), accessor.get(IExplorerService));\n\tawait resourcesToClipboard(resources, true, accessor.get(IClipboardService), accessor.get(ILabelService), accessor.get(IConfigurationService));\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus.toNegated(),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC,\n\twin: {\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyC)\n\t},\n\tid: COPY_RELATIVE_PATH_COMMAND_ID,\n\thandler: copyRelativePathCommandHandler\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: EditorContextKeys.focus,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.KeyC),\n\twin: {\n\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyC)\n\t},\n\tid: COPY_RELATIVE_PATH_COMMAND_ID,\n\thandler: copyRelativePathCommandHandler\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyP),\n\tid: 'workbench.action.files.copyPathOfActiveFile',\n\thandler: async accessor => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst activeInput = editorService.activeEditor;\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(activeInput, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tconst resources = resource ? [resource] : [];\n\t\tawait resourcesToClipboard(resources, false, accessor.get(IClipboardService), accessor.get(ILabelService), accessor.get(IConfigurationService));\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: REVEAL_IN_EXPLORER_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst viewService = accessor.get(IViewsService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst uri = getResourceForCommand(resource, accessor.get(IListService), accessor.get(IEditorService));\n\n\n\t\tif (uri && contextService.isInsideWorkspace(uri)) {\n\t\t\tconst explorerView = await viewService.openView(VIEW_ID, false);\n\t\t\tif (explorerView) {\n\t\t\t\texplorerView.setExpanded(true);\n\t\t\t\tawait explorerService.select(uri, 'force');\n\t\t\t\texplorerView.focus();\n\t\t\t}\n\t\t} else {\n\t\t\tconst openEditorsView = await viewService.openView(OpenEditorsView.ID, false);\n\t\t\tif (openEditorsView) {\n\t\t\t\topenEditorsView.setExpanded(true);\n\t\t\t\topenEditorsView.focus();\n\t\t\t}\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: OPEN_WITH_EXPLORER_COMMAND_ID,\n\thandler: async (accessor, resource: URI | object) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst uri = getResourceForCommand(resource, accessor.get(IListService), accessor.get(IEditorService));\n\t\tif (uri) {\n\t\t\treturn editorService.openEditor({ resource: uri, options: { override: EditorResolution.PICK, source: EditorOpenSource.USER } });\n\t\t}\n\n\t\treturn undefined;\n\t}\n});\n\n// Save / Save As / Save All / Revert\n\nasync function saveSelectedEditors(accessor: ServicesAccessor, options?: ISaveEditorsOptions): Promise<void> {\n\tconst listService = accessor.get(IListService);\n\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\tconst textFileService = accessor.get(ITextFileService);\n\n\t// Retrieve selected or active editor\n\tlet editors = getOpenEditorsViewMultiSelection(listService, editorGroupService);\n\tif (!editors) {\n\t\tconst activeGroup = editorGroupService.activeGroup;\n\t\tif (activeGroup.activeEditor) {\n\t\t\teditors = [];\n\n\t\t\t// Special treatment for side by side editors: if the active editor\n\t\t\t// has 2 sides, we consider both, to support saving both sides.\n\t\t\t// We only allow this when saving, not for \"Save As\" and not if any\n\t\t\t// editor is untitled which would bring up a \"Save As\" dialog too.\n\t\t\t// In addition, we require the secondary side to be modified to not\n\t\t\t// trigger a touch operation unexpectedly.\n\t\t\t//\n\t\t\t// See also https://github.com/microsoft/vscode/issues/4180\n\t\t\t// See also https://github.com/microsoft/vscode/issues/106330\n\t\t\t// See also https://github.com/microsoft/vscode/issues/190210\n\t\t\tif (\n\t\t\t\tactiveGroup.activeEditor instanceof SideBySideEditorInput &&\n\t\t\t\t!options?.saveAs && !(activeGroup.activeEditor.primary.hasCapability(EditorInputCapabilities.Untitled) || activeGroup.activeEditor.secondary.hasCapability(EditorInputCapabilities.Untitled)) &&\n\t\t\t\tactiveGroup.activeEditor.secondary.isModified()\n\t\t\t) {\n\t\t\t\teditors.push({ groupId: activeGroup.id, editor: activeGroup.activeEditor.primary });\n\t\t\t\teditors.push({ groupId: activeGroup.id, editor: activeGroup.activeEditor.secondary });\n\t\t\t} else {\n\t\t\t\teditors.push({ groupId: activeGroup.id, editor: activeGroup.activeEditor });\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!editors || editors.length === 0) {\n\t\treturn; // nothing to save\n\t}\n\n\t// Save editors\n\tawait doSaveEditors(accessor, editors, options);\n\n\t// Special treatment for embedded editors: if we detect that focus is\n\t// inside an embedded code editor, we save that model as well if we\n\t// find it in our text file models. Currently, only textual editors\n\t// support embedded editors.\n\tconst focusedCodeEditor = codeEditorService.getFocusedCodeEditor();\n\tif (focusedCodeEditor instanceof EmbeddedCodeEditorWidget) {\n\t\tconst resource = focusedCodeEditor.getModel()?.uri;\n\n\t\t// Check that the resource of the model was not saved already\n\t\tif (resource && !editors.some(({ editor }) => isEqual(EditorResourceAccessor.getCanonicalUri(editor, { supportSideBySide: SideBySideEditor.PRIMARY }), resource))) {\n\t\t\tconst model = textFileService.files.get(resource);\n\t\t\tif (!model?.isReadonly()) {\n\t\t\t\tawait textFileService.save(resource, options);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction saveDirtyEditorsOfGroups(accessor: ServicesAccessor, groups: readonly IEditorGroup[], options?: ISaveEditorsOptions): Promise<void> {\n\tconst dirtyEditors: IEditorIdentifier[] = [];\n\tfor (const group of groups) {\n\t\tfor (const editor of group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)) {\n\t\t\tif (editor.isDirty()) {\n\t\t\t\tdirtyEditors.push({ groupId: group.id, editor });\n\t\t\t}\n\t\t}\n\t}\n\n\treturn doSaveEditors(accessor, dirtyEditors, options);\n}\n\nasync function doSaveEditors(accessor: ServicesAccessor, editors: IEditorIdentifier[], options?: ISaveEditorsOptions): Promise<void> {\n\tconst editorService = accessor.get(IEditorService);\n\tconst notificationService = accessor.get(INotificationService);\n\tconst instantiationService = accessor.get(IInstantiationService);\n\n\ttry {\n\t\tawait editorService.save(editors, options);\n\t} catch (error) {\n\t\tif (!isCancellationError(error)) {\n\t\t\tnotificationService.notify({\n\t\t\t\tid: editors.map(({ editor }) => hash(editor.resource?.toString())).join(), // ensure unique notification ID per set of editor\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tmessage: nls.localize({ key: 'genericSaveError', comment: ['{0} is the resource that failed to save and {1} the error message'] }, \"Failed to save '{0}': {1}\", editors.map(({ editor }) => editor.getName()).join(', '), toErrorMessage(error, false)),\n\t\t\t\tactions: {\n\t\t\t\t\tprimary: [\n\t\t\t\t\t\ttoAction({ id: 'workbench.action.files.saveEditors', label: nls.localize('retry', \"Retry\"), run: () => instantiationService.invokeFunction(accessor => doSaveEditors(accessor, editors, options)) }),\n\t\t\t\t\t\ttoAction({ id: 'workbench.action.files.revertEditors', label: nls.localize('discard', \"Discard\"), run: () => editorService.revert(editors) })\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.KeyS,\n\tid: SAVE_FILE_COMMAND_ID,\n\thandler: accessor => {\n\t\treturn saveSelectedEditors(accessor, { reason: SaveReason.EXPLICIT, force: true /* force save even when non-dirty */ });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyS),\n\twin: { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyS) },\n\tid: SAVE_FILE_WITHOUT_FORMATTING_COMMAND_ID,\n\thandler: accessor => {\n\t\treturn saveSelectedEditors(accessor, { reason: SaveReason.EXPLICIT, force: true /* force save even when non-dirty */, skipSaveParticipants: true });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: SAVE_FILE_AS_COMMAND_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyS,\n\thandler: accessor => {\n\t\treturn saveSelectedEditors(accessor, { reason: SaveReason.EXPLICIT, saveAs: true });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\twhen: undefined,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\tprimary: undefined,\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyS },\n\twin: { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyS) },\n\tid: SAVE_ALL_COMMAND_ID,\n\thandler: accessor => {\n\t\treturn saveDirtyEditorsOfGroups(accessor, accessor.get(IEditorGroupsService).getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE), { reason: SaveReason.EXPLICIT });\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SAVE_ALL_IN_GROUP_COMMAND_ID,\n\thandler: (accessor, _: URI | object, editorContext: IEditorCommandsContext) => {\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\t\tconst contexts = getMultiSelectedEditorContexts(editorContext, accessor.get(IListService), accessor.get(IEditorGroupsService));\n\n\t\tlet groups: readonly IEditorGroup[] | undefined = undefined;\n\t\tif (!contexts.length) {\n\t\t\tgroups = editorGroupService.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\t\t} else {\n\t\t\tgroups = coalesce(contexts.map(context => editorGroupService.getGroup(context.groupId)));\n\t\t}\n\n\t\treturn saveDirtyEditorsOfGroups(accessor, groups, { reason: SaveReason.EXPLICIT });\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: SAVE_FILES_COMMAND_ID,\n\thandler: async accessor => {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst res = await editorService.saveAll({ includeUntitled: false, reason: SaveReason.EXPLICIT });\n\t\treturn res.success;\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: REVERT_FILE_COMMAND_ID,\n\thandler: async accessor => {\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst listService = accessor.get(IListService);\n\t\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\t// Retrieve selected or active editor\n\t\tlet editors = getOpenEditorsViewMultiSelection(listService, editorGroupService);\n\t\tif (!editors) {\n\t\t\tconst activeGroup = editorGroupService.activeGroup;\n\t\t\tif (activeGroup.activeEditor) {\n\t\t\t\teditors = [{ groupId: activeGroup.id, editor: activeGroup.activeEditor }];\n\t\t\t}\n\t\t}\n\n\t\tif (!editors || editors.length === 0) {\n\t\t\treturn; // nothing to revert\n\t\t}\n\n\t\ttry {\n\t\t\tawait editorService.revert(editors.filter(({ editor }) => !editor.hasCapability(EditorInputCapabilities.Untitled) /* all except untitled */), { force: true });\n\t\t} catch (error) {\n\t\t\tnotificationService.error(nls.localize('genericRevertError', \"Failed to revert '{0}': {1}\", editors.map(({ editor }) => editor.getName()).join(', '), toErrorMessage(error, false)));\n\t\t}\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: REMOVE_ROOT_FOLDER_COMMAND_ID,\n\thandler: (accessor, resource: URI | object) => {\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst uriIdentityService = accessor.get(IUriIdentityService);\n\t\tconst workspace = contextService.getWorkspace();\n\t\tconst resources = getMultiSelectedResources(resource, accessor.get(IListService), accessor.get(IEditorService), accessor.get(IExplorerService)).filter(resource =>\n\t\t\tworkspace.folders.some(folder => uriIdentityService.extUri.isEqual(folder.uri, resource)) // Need to verify resources are workspaces since multi selection can trigger this command on some non workspace resources\n\t\t);\n\n\t\tif (resources.length === 0) {\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\t// Show a picker for the user to choose which folder to remove\n\t\t\treturn commandService.executeCommand(RemoveRootFolderAction.ID);\n\t\t}\n\n\t\treturn workspaceEditingService.removeFolders(resources);\n\t}\n});\n\n// Compressed item navigation\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerCompressedFocusContext, ExplorerCompressedFirstFocusContext.negate()),\n\tprimary: KeyCode.LeftArrow,\n\tid: PREVIOUS_COMPRESSED_FOLDER,\n\thandler: accessor => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar);\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.previousCompressedStat();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerCompressedFocusContext, ExplorerCompressedLastFocusContext.negate()),\n\tprimary: KeyCode.RightArrow,\n\tid: NEXT_COMPRESSED_FOLDER,\n\thandler: accessor => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar);\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.nextCompressedStat();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerCompressedFocusContext, ExplorerCompressedFirstFocusContext.negate()),\n\tprimary: KeyCode.Home,\n\tid: FIRST_COMPRESSED_FOLDER,\n\thandler: accessor => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar);\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.firstCompressedStat();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerCompressedFocusContext, ExplorerCompressedLastFocusContext.negate()),\n\tprimary: KeyCode.End,\n\tid: LAST_COMPRESSED_FOLDER,\n\thandler: accessor => {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst viewlet = paneCompositeService.getActivePaneComposite(ViewContainerLocation.Sidebar);\n\n\t\tif (viewlet?.getId() !== VIEWLET_ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst explorer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\tconst view = explorer.getExplorerView();\n\t\tview.lastCompressedStat();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: null,\n\tprimary: isWeb ? (isWindows ? KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyN) : KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyN) : KeyMod.CtrlCmd | KeyCode.KeyN,\n\tsecondary: isWeb ? [KeyMod.CtrlCmd | KeyCode.KeyN] : undefined,\n\tid: NEW_UNTITLED_FILE_COMMAND_ID,\n\tdescription: {\n\t\tdescription: NEW_UNTITLED_FILE_LABEL,\n\t\targs: [\n\t\t\t{\n\t\t\t\tisOptional: true,\n\t\t\t\tname: 'New Untitled Text File arguments',\n\t\t\t\tdescription: 'The editor view type or language ID if known',\n\t\t\t\tschema: {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'viewType': {\n\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'languageId': {\n\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\thandler: async (accessor, args?: { languageId?: string; viewType?: string }) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tawait editorService.openEditor({\n\t\t\tresource: undefined,\n\t\t\toptions: {\n\t\t\t\toverride: args?.viewType,\n\t\t\t\tpinned: true\n\t\t\t},\n\t\t\tlanguageId: args?.languageId,\n\t\t});\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: NEW_FILE_COMMAND_ID,\n\thandler: async (accessor, args?: { languageId?: string; viewType?: string; fileName?: string }) => {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst dialogService = accessor.get(IFileDialogService);\n\t\tconst fileService = accessor.get(IFileService);\n\n\t\tconst createFileLocalized = nls.localize('newFileCommand.saveLabel', \"Create File\");\n\t\tconst defaultFileUri = joinPath(await dialogService.defaultFilePath(), args?.fileName ?? 'Untitled.txt');\n\n\t\tconst saveUri = await dialogService.showSaveDialog({ saveLabel: createFileLocalized, title: createFileLocalized, defaultUri: defaultFileUri });\n\n\t\tif (!saveUri) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait fileService.createFile(saveUri, undefined, { overwrite: true });\n\n\t\tawait editorService.openEditor({\n\t\t\tresource: saveUri,\n\t\t\toptions: {\n\t\t\t\toverride: args?.viewType,\n\t\t\t\tpinned: true\n\t\t\t},\n\t\t\tlanguageId: args?.languageId,\n\t\t});\n\t}\n});\n"]}