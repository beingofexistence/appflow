{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/files/browser/explorerService.ts"],"names":[],"mappings":"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","file":"explorerService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFilesConfiguration, ISortOrderConfiguration, SortOrder, LexicographicOptions } from 'vs/workbench/contrib/files/common/files';\nimport { ExplorerItem, ExplorerModel } from 'vs/workbench/contrib/files/common/explorerModel';\nimport { URI } from 'vs/base/common/uri';\nimport { FileOperationEvent, FileOperation, IFileService, FileChangesEvent, FileChangeType, IResolveFileOptions } from 'vs/platform/files/common/files';\nimport { dirname, basename } from 'vs/base/common/resources';\nimport { IConfigurationService, IConfigurationChangeEvent } from 'vs/platform/configuration/common/configuration';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditableData } from 'vs/workbench/common/views';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { IBulkEditService, ResourceFileEdit } from 'vs/editor/browser/services/bulkEditService';\nimport { UndoRedoSource } from 'vs/platform/undoRedo/common/undoRedo';\nimport { IExplorerView, IExplorerService } from 'vs/workbench/contrib/files/browser/files';\nimport { IProgressService, ProgressLocation, IProgressNotificationOptions, IProgressCompositeOptions } from 'vs/platform/progress/common/progress';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IExpression } from 'vs/base/common/glob';\nimport { ResourceGlobMatcher } from 'vs/workbench/common/resources';\nimport { IFilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport const UNDO_REDO_SOURCE = new UndoRedoSource();\n\nexport class ExplorerService implements IExplorerService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly EXPLORER_FILE_CHANGES_REACT_DELAY = 500; // delay in ms to react to file changes to give our internal events a chance to react first\n\n\tprivate readonly disposables = new DisposableStore();\n\tprivate editable: { stat: ExplorerItem; data: IEditableData } | undefined;\n\tprivate config: IFilesConfiguration['explorer'];\n\tprivate cutItems: ExplorerItem[] | undefined;\n\tprivate view: IExplorerView | undefined;\n\tprivate model: ExplorerModel;\n\tprivate onFileChangesScheduler: RunOnceScheduler;\n\tprivate fileChangeEvents: FileChangesEvent[] = [];\n\tprivate revealExcludeMatcher: ResourceGlobMatcher;\n\n\tconstructor(\n\t\t@IFileService private fileService: IFileService,\n\t\t@IConfigurationService private configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IClipboardService private clipboardService: IClipboardService,\n\t\t@IEditorService private editorService: IEditorService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IBulkEditService private readonly bulkEditService: IBulkEditService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IFilesConfigurationService private readonly filesConfigurationService: IFilesConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService\n\t) {\n\t\tthis.config = this.configurationService.getValue('explorer');\n\n\t\tthis.model = new ExplorerModel(this.contextService, this.uriIdentityService, this.fileService, this.configurationService, this.filesConfigurationService);\n\t\tthis.disposables.add(this.model);\n\t\tthis.disposables.add(this.fileService.onDidRunOperation(e => this.onDidRunOperation(e)));\n\n\t\tthis.onFileChangesScheduler = new RunOnceScheduler(async () => {\n\t\t\tconst events = this.fileChangeEvents;\n\t\t\tthis.fileChangeEvents = [];\n\n\t\t\t// Filter to the ones we care\n\t\t\tconst types = [FileChangeType.DELETED];\n\t\t\tif (this.config.sortOrder === SortOrder.Modified) {\n\t\t\t\ttypes.push(FileChangeType.UPDATED);\n\t\t\t}\n\n\t\t\tlet shouldRefresh = false;\n\t\t\t// For DELETED and UPDATED events go through the explorer model and check if any of the items got affected\n\t\t\tthis.roots.forEach(r => {\n\t\t\t\tif (this.view && !shouldRefresh) {\n\t\t\t\t\tshouldRefresh = doesFileEventAffect(r, this.view, events, types);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// For ADDED events we need to go through all the events and check if the explorer is already aware of some of them\n\t\t\t// Or if they affect not yet resolved parts of the explorer. If that is the case we will not refresh.\n\t\t\tevents.forEach(e => {\n\t\t\t\tif (!shouldRefresh) {\n\t\t\t\t\tfor (const resource of e.rawAdded) {\n\t\t\t\t\t\tconst parent = this.model.findClosest(dirname(resource));\n\t\t\t\t\t\t// Parent of the added resource is resolved and the explorer model is not aware of the added resource - we need to refresh\n\t\t\t\t\t\tif (parent && !parent.getChild(basename(resource))) {\n\t\t\t\t\t\t\tshouldRefresh = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (shouldRefresh) {\n\t\t\t\tawait this.refresh(false);\n\t\t\t}\n\n\t\t}, ExplorerService.EXPLORER_FILE_CHANGES_REACT_DELAY);\n\n\t\tthis.disposables.add(this.fileService.onDidFilesChange(e => {\n\t\t\tthis.fileChangeEvents.push(e);\n\t\t\t// Don't mess with the file tree while in the process of editing. #112293\n\t\t\tif (this.editable) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.onFileChangesScheduler.isScheduled()) {\n\t\t\t\tthis.onFileChangesScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tthis.disposables.add(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated(e)));\n\t\tthis.disposables.add(Event.any<{ scheme: string }>(this.fileService.onDidChangeFileSystemProviderRegistrations, this.fileService.onDidChangeFileSystemProviderCapabilities)(async e => {\n\t\t\tlet affected = false;\n\t\t\tthis.model.roots.forEach(r => {\n\t\t\t\tif (r.resource.scheme === e.scheme) {\n\t\t\t\t\taffected = true;\n\t\t\t\t\tr.forgetChildren();\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (affected) {\n\t\t\t\tif (this.view) {\n\t\t\t\t\tawait this.view.setTreeInput();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis.disposables.add(this.model.onDidChangeRoots(() => {\n\t\t\tthis.view?.setTreeInput();\n\t\t}));\n\n\t\t// Refresh explorer when window gets focus to compensate for missing file events #126817\n\t\tthis.disposables.add(hostService.onDidChangeFocus(hasFocus => {\n\t\t\tif (hasFocus) {\n\t\t\t\tthis.refresh(false);\n\t\t\t}\n\t\t}));\n\t\tthis.revealExcludeMatcher = new ResourceGlobMatcher(\n\t\t\t(uri) => getRevealExcludes(configurationService.getValue<IFilesConfiguration>({ resource: uri })),\n\t\t\t(event) => event.affectsConfiguration('explorer.autoRevealExclude'),\n\t\t\tcontextService, configurationService);\n\t\tthis.disposables.add(this.revealExcludeMatcher);\n\t}\n\n\tget roots(): ExplorerItem[] {\n\t\treturn this.model.roots;\n\t}\n\n\tget sortOrderConfiguration(): ISortOrderConfiguration {\n\t\treturn {\n\t\t\tsortOrder: this.config.sortOrder,\n\t\t\tlexicographicOptions: this.config.sortOrderLexicographicOptions,\n\t\t};\n\t}\n\n\tregisterView(contextProvider: IExplorerView): void {\n\t\tthis.view = contextProvider;\n\t}\n\n\tgetContext(respectMultiSelection: boolean, ignoreNestedChildren: boolean = false): ExplorerItem[] {\n\t\tif (!this.view) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst items = new Set<ExplorerItem>(this.view.getContext(respectMultiSelection));\n\t\titems.forEach(item => {\n\t\t\ttry {\n\t\t\t\tif (respectMultiSelection && !ignoreNestedChildren && this.view?.isItemCollapsed(item) && item.nestedChildren) {\n\t\t\t\t\tfor (const child of item.nestedChildren) {\n\t\t\t\t\t\titems.add(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// We will error out trying to resolve collapsed nodes that have not yet been resolved.\n\t\t\t\t// So we catch and ignore them in the multiSelect context\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\treturn [...items];\n\t}\n\n\tasync applyBulkEdit(edit: ResourceFileEdit[], options: { undoLabel: string; progressLabel: string; confirmBeforeUndo?: boolean; progressLocation?: ProgressLocation.Explorer | ProgressLocation.Window }): Promise<void> {\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tconst promise = this.progressService.withProgress(<IProgressNotificationOptions | IProgressCompositeOptions>{\n\t\t\tlocation: options.progressLocation || ProgressLocation.Window,\n\t\t\ttitle: options.progressLabel,\n\t\t\tcancellable: edit.length > 1, // Only allow cancellation when there is more than one edit. Since cancelling will not actually stop the current edit that is in progress.\n\t\t\tdelay: 500,\n\t\t}, async progress => {\n\t\t\tawait this.bulkEditService.apply(edit, {\n\t\t\t\tundoRedoSource: UNDO_REDO_SOURCE,\n\t\t\t\tlabel: options.undoLabel,\n\t\t\t\tcode: 'undoredo.explorerOperation',\n\t\t\t\tprogress,\n\t\t\t\ttoken: cancellationTokenSource.token,\n\t\t\t\tconfirmBeforeUndo: options.confirmBeforeUndo\n\t\t\t});\n\t\t}, () => cancellationTokenSource.cancel());\n\t\tawait this.progressService.withProgress({ location: ProgressLocation.Explorer, delay: 500 }, () => promise);\n\t\tcancellationTokenSource.dispose();\n\t}\n\n\thasViewFocus(): boolean {\n\t\treturn !!this.view && this.view.hasFocus();\n\t}\n\n\t// IExplorerService methods\n\n\tfindClosest(resource: URI): ExplorerItem | null {\n\t\treturn this.model.findClosest(resource);\n\t}\n\n\tfindClosestRoot(resource: URI): ExplorerItem | null {\n\t\tconst parentRoots = this.model.roots.filter(r => this.uriIdentityService.extUri.isEqualOrParent(resource, r.resource))\n\t\t\t.sort((first, second) => second.resource.path.length - first.resource.path.length);\n\t\treturn parentRoots.length ? parentRoots[0] : null;\n\t}\n\n\tasync setEditable(stat: ExplorerItem, data: IEditableData | null): Promise<void> {\n\t\tif (!this.view) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!data) {\n\t\t\tthis.editable = undefined;\n\t\t} else {\n\t\t\tthis.editable = { stat, data };\n\t\t}\n\t\tconst isEditing = this.isEditable(stat);\n\t\ttry {\n\t\t\tawait this.view.setEditable(stat, isEditing);\n\t\t} catch {\n\t\t\tconst parent = stat.parent;\n\t\t\ttype ExplorerViewEditableErrorData = {\n\t\t\t\tparentIsDirectory: boolean | undefined;\n\t\t\t\tisDirectory: boolean | undefined;\n\t\t\t\tisReadonly: boolean | undefined;\n\t\t\t\tparentIsReadonly: boolean | undefined;\n\t\t\t\tparentIsExcluded: boolean | undefined;\n\t\t\t\tisExcluded: boolean | undefined;\n\t\t\t\tparentIsRoot: boolean | undefined;\n\t\t\t\tisRoot: boolean | undefined;\n\t\t\t\tparentHasNests: boolean | undefined;\n\t\t\t\thasNests: boolean | undefined;\n\t\t\t};\n\t\t\ttype ExplorerViewEditableErrorClassification = {\n\t\t\t\towner: 'lramos15';\n\t\t\t\tcomment: 'Helps gain a broard understanding of why users are unable to edit files in the explorer';\n\t\t\t\tparentIsDirectory: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Whether the parent of the editable element is a directory' };\n\t\t\t\tisDirectory: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Whether the editable element is a directory' };\n\t\t\t\tisReadonly: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Whether the editable element is readonly' };\n\t\t\t\tparentIsReadonly: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Whether the parent of the editable element is readonly' };\n\t\t\t\tparentIsExcluded: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Whether the parent of the editable element is excluded from being shown in the explorer' };\n\t\t\t\tisExcluded: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Whether the editable element is excluded from being shown in the explorer' };\n\t\t\t\tparentIsRoot: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Whether the parent of the editable element is a root' };\n\t\t\t\tisRoot: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Whether the editable element is a root' };\n\t\t\t\tparentHasNests: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Whether the parent of the editable element has nested children' };\n\t\t\t\thasNests: { classification: 'SystemMetaData'; purpose: 'PerformanceAndHealth'; isMeasurement: true; comment: 'Whether the editable element has nested children' };\n\t\t\t};\n\t\t\tconst errorData = {\n\t\t\t\tparentIsDirectory: parent?.isDirectory,\n\t\t\t\tisDirectory: stat.isDirectory,\n\t\t\t\tisReadonly: !!stat.isReadonly,\n\t\t\t\tparentIsReadonly: !!parent?.isReadonly,\n\t\t\t\tparentIsExcluded: parent?.isExcluded,\n\t\t\t\tisExcluded: stat.isExcluded,\n\t\t\t\tparentIsRoot: parent?.isRoot,\n\t\t\t\tisRoot: stat.isRoot,\n\t\t\t\tparentHasNests: parent?.hasNests,\n\t\t\t\thasNests: stat.hasNests,\n\t\t\t};\n\t\t\tthis.telemetryService.publicLogError2<ExplorerViewEditableErrorData, ExplorerViewEditableErrorClassification>('explorerView.setEditableError', errorData);\n\t\t\treturn;\n\t\t}\n\n\n\t\tif (!this.editable && this.fileChangeEvents.length && !this.onFileChangesScheduler.isScheduled()) {\n\t\t\tthis.onFileChangesScheduler.schedule();\n\t\t}\n\t}\n\n\tasync setToCopy(items: ExplorerItem[], cut: boolean): Promise<void> {\n\t\tconst previouslyCutItems = this.cutItems;\n\t\tthis.cutItems = cut ? items : undefined;\n\t\tawait this.clipboardService.writeResources(items.map(s => s.resource));\n\n\t\tthis.view?.itemsCopied(items, cut, previouslyCutItems);\n\t}\n\n\tisCut(item: ExplorerItem): boolean {\n\t\treturn !!this.cutItems && this.cutItems.some(i => this.uriIdentityService.extUri.isEqual(i.resource, item.resource));\n\t}\n\n\tgetEditable(): { stat: ExplorerItem; data: IEditableData } | undefined {\n\t\treturn this.editable;\n\t}\n\n\tgetEditableData(stat: ExplorerItem): IEditableData | undefined {\n\t\treturn this.editable && this.editable.stat === stat ? this.editable.data : undefined;\n\t}\n\n\tisEditable(stat: ExplorerItem | undefined): boolean {\n\t\treturn !!this.editable && (this.editable.stat === stat || !stat);\n\t}\n\n\tasync select(resource: URI, reveal?: boolean | string): Promise<void> {\n\t\tif (!this.view) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If file or parent matches exclude patterns, do not reveal unless reveal argument is 'force'\n\t\tconst ignoreRevealExcludes = reveal === 'force';\n\n\t\tconst fileStat = this.findClosest(resource);\n\t\tif (fileStat) {\n\t\t\tif (!this.shouldAutoRevealItem(fileStat, ignoreRevealExcludes)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait this.view.selectResource(fileStat.resource, reveal);\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Stat needs to be resolved first and then revealed\n\t\tconst options: IResolveFileOptions = { resolveTo: [resource], resolveMetadata: this.config.sortOrder === SortOrder.Modified };\n\t\tconst root = this.findClosestRoot(resource);\n\t\tif (!root) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\ttry {\n\t\t\tconst stat = await this.fileService.resolve(root.resource, options);\n\n\t\t\t// Convert to model\n\t\t\tconst modelStat = ExplorerItem.create(this.fileService, this.configurationService, this.filesConfigurationService, stat, undefined, options.resolveTo);\n\t\t\t// Update Input with disk Stat\n\t\t\tExplorerItem.mergeLocalWithDisk(modelStat, root);\n\t\t\tconst item = root.find(resource);\n\t\t\tawait this.view.refresh(true, root);\n\n\t\t\t// Once item is resolved, check again if folder should be expanded\n\t\t\tif (item && !this.shouldAutoRevealItem(item, ignoreRevealExcludes)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait this.view.selectResource(item ? item.resource : undefined, reveal);\n\t\t} catch (error) {\n\t\t\troot.error = error;\n\t\t\tawait this.view.refresh(false, root);\n\t\t}\n\t}\n\n\tasync refresh(reveal = true): Promise<void> {\n\t\tthis.model.roots.forEach(r => r.forgetChildren());\n\t\tif (this.view) {\n\t\t\tawait this.view.refresh(true);\n\t\t\tconst resource = this.editorService.activeEditor?.resource;\n\t\t\tconst autoReveal = this.configurationService.getValue<IFilesConfiguration>().explorer.autoReveal;\n\n\t\t\tif (reveal && resource && autoReveal) {\n\t\t\t\t// We did a top level refresh, reveal the active file #67118\n\t\t\t\tthis.select(resource, autoReveal);\n\t\t\t}\n\t\t}\n\t}\n\n\t// File events\n\n\tprivate async onDidRunOperation(e: FileOperationEvent): Promise<void> {\n\t\t// When nesting, changes to one file in a folder may impact the rendered structure\n\t\t// of all the folder's immediate children, thus a recursive refresh is needed.\n\t\t// Ideally the tree would be able to recusively refresh just one level but that does not yet exist.\n\t\tconst shouldDeepRefresh = this.config.fileNesting.enabled;\n\n\t\t// Add\n\t\tif (e.isOperation(FileOperation.CREATE) || e.isOperation(FileOperation.COPY)) {\n\t\t\tconst addedElement = e.target;\n\t\t\tconst parentResource = dirname(addedElement.resource)!;\n\t\t\tconst parents = this.model.findAll(parentResource);\n\n\t\t\tif (parents.length) {\n\n\t\t\t\t// Add the new file to its parent (Model)\n\t\t\t\tawait Promise.all(parents.map(async p => {\n\t\t\t\t\t// We have to check if the parent is resolved #29177\n\t\t\t\t\tconst resolveMetadata = this.config.sortOrder === `modified`;\n\t\t\t\t\tif (!p.isDirectoryResolved) {\n\t\t\t\t\t\tconst stat = await this.fileService.resolve(p.resource, { resolveMetadata });\n\t\t\t\t\t\tif (stat) {\n\t\t\t\t\t\t\tconst modelStat = ExplorerItem.create(this.fileService, this.configurationService, this.filesConfigurationService, stat, p.parent);\n\t\t\t\t\t\t\tExplorerItem.mergeLocalWithDisk(modelStat, p);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst childElement = ExplorerItem.create(this.fileService, this.configurationService, this.filesConfigurationService, addedElement, p.parent);\n\t\t\t\t\t// Make sure to remove any previous version of the file if any\n\t\t\t\t\tp.removeChild(childElement);\n\t\t\t\t\tp.addChild(childElement);\n\t\t\t\t\t// Refresh the Parent (View)\n\t\t\t\t\tawait this.view?.refresh(shouldDeepRefresh, p);\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\t// Move (including Rename)\n\t\telse if (e.isOperation(FileOperation.MOVE)) {\n\t\t\tconst oldResource = e.resource;\n\t\t\tconst newElement = e.target;\n\t\t\tconst oldParentResource = dirname(oldResource);\n\t\t\tconst newParentResource = dirname(newElement.resource);\n\t\t\tconst modelElements = this.model.findAll(oldResource);\n\t\t\tconst sameParentMove = modelElements.every(e => !e.nestedParent) && this.uriIdentityService.extUri.isEqual(oldParentResource, newParentResource);\n\n\t\t\t// Handle Rename\n\t\t\tif (sameParentMove) {\n\t\t\t\tawait Promise.all(modelElements.map(async modelElement => {\n\t\t\t\t\t// Rename File (Model)\n\t\t\t\t\tmodelElement.rename(newElement);\n\t\t\t\t\tawait this.view?.refresh(shouldDeepRefresh, modelElement.parent);\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\t// Handle Move\n\t\t\telse {\n\t\t\t\tconst newParents = this.model.findAll(newParentResource);\n\t\t\t\tif (newParents.length && modelElements.length) {\n\t\t\t\t\t// Move in Model\n\t\t\t\t\tawait Promise.all(modelElements.map(async (modelElement, index) => {\n\t\t\t\t\t\tconst oldParent = modelElement.parent;\n\t\t\t\t\t\tconst oldNestedParent = modelElement.nestedParent;\n\t\t\t\t\t\tmodelElement.move(newParents[index]);\n\t\t\t\t\t\tif (oldNestedParent) {\n\t\t\t\t\t\t\tawait this.view?.refresh(false, oldNestedParent);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.view?.refresh(false, oldParent);\n\t\t\t\t\t\tawait this.view?.refresh(shouldDeepRefresh, newParents[index]);\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Delete\n\t\telse if (e.isOperation(FileOperation.DELETE)) {\n\t\t\tconst modelElements = this.model.findAll(e.resource);\n\t\t\tawait Promise.all(modelElements.map(async modelElement => {\n\t\t\t\tif (modelElement.parent) {\n\t\t\t\t\t// Remove Element from Parent (Model)\n\t\t\t\t\tconst parent = modelElement.parent;\n\t\t\t\t\tparent.removeChild(modelElement);\n\n\t\t\t\t\tconst oldNestedParent = modelElement.nestedParent;\n\t\t\t\t\tif (oldNestedParent) {\n\t\t\t\t\t\toldNestedParent.removeChild(modelElement);\n\t\t\t\t\t\tawait this.view?.refresh(false, oldNestedParent);\n\t\t\t\t\t}\n\t\t\t\t\t// Refresh Parent (View)\n\t\t\t\t\tawait this.view?.refresh(shouldDeepRefresh, parent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\t// Check if an item matches a explorer.autoRevealExclude pattern\n\tprivate shouldAutoRevealItem(item: ExplorerItem | undefined, ignore: boolean): boolean {\n\t\tif (item === undefined || ignore) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.revealExcludeMatcher.matches(item.resource, name => !!(item.parent && item.parent.getChild(name)))) {\n\t\t\treturn false;\n\t\t}\n\t\tconst root = item.root;\n\t\tlet currentItem = item.parent;\n\t\twhile (currentItem !== root) {\n\t\t\tif (currentItem === undefined) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.revealExcludeMatcher.matches(currentItem.resource)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcurrentItem = currentItem.parent;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async onConfigurationUpdated(event: IConfigurationChangeEvent): Promise<void> {\n\t\tif (!event.affectsConfiguration('explorer')) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet shouldRefresh = false;\n\n\t\tif (event.affectsConfiguration('explorer.fileNesting')) {\n\t\t\tshouldRefresh = true;\n\t\t}\n\n\t\tconst configuration = this.configurationService.getValue<IFilesConfiguration>();\n\n\t\tconst configSortOrder = configuration?.explorer?.sortOrder || SortOrder.Default;\n\t\tif (this.config.sortOrder !== configSortOrder) {\n\t\t\tshouldRefresh = this.config.sortOrder !== undefined;\n\t\t}\n\n\t\tconst configLexicographicOptions = configuration?.explorer?.sortOrderLexicographicOptions || LexicographicOptions.Default;\n\t\tif (this.config.sortOrderLexicographicOptions !== configLexicographicOptions) {\n\t\t\tshouldRefresh = shouldRefresh || this.config.sortOrderLexicographicOptions !== undefined;\n\t\t}\n\n\t\tthis.config = configuration.explorer;\n\n\t\tif (shouldRefresh) {\n\t\t\tawait this.refresh();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nfunction doesFileEventAffect(item: ExplorerItem, view: IExplorerView, events: FileChangesEvent[], types: FileChangeType[]): boolean {\n\tfor (const [_name, child] of item.children) {\n\t\tif (view.isItemVisible(child)) {\n\t\t\tif (events.some(e => e.contains(child.resource, ...types))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (child.isDirectory && child.isDirectoryResolved) {\n\t\t\t\tif (doesFileEventAffect(child, view, events, types)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction getRevealExcludes(configuration: IFilesConfiguration): IExpression {\n\tconst revealExcludes = configuration && configuration.explorer && configuration.explorer.autoRevealExclude;\n\n\tif (!revealExcludes) {\n\t\treturn {};\n\t}\n\n\treturn revealExcludes;\n}\n"]}