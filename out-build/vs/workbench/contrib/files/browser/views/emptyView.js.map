{"version":3,"sources":["vs/workbench/contrib/files/browser/views/emptyView.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IAqBzF,IAAM,IAAI,GAAV,MAAM,IAAU,SAAQ,eAAI;;iBAElB,OAAE,GAAW,8BAAX,AAAyC,CAAC;iBAC5C,SAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAa,EAAE,IAAkB,CAAjD,AAAkD,CAAC;QAGvE,YACC,OAA4B,EACb,YAAiB,EACR,qBAA0B,EAC3B,oBAAyB,EAC5B,iBAAsB,EACrB,kBAAuB,EAClB,CAAoC,EACvC,oBAAyB,EACjC,CAAyB,EACpB,iBAAsB,EAC1B,aAAkB,EACf,gBAAqB;YAExC,KAAK,CAAC,OAAO,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,aAAa,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;YAPhJ,MAAC,GAAD,CAAC,CAAkB;YAEvC,MAAC,GAAD,CAAC,CAAgB;YAXjC,MAAC,GAAoB,KAAK,CAAC;YAkBlC,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAc,yBAAyB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,CAAC;YACzF,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAY,qBAAqB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAa,CAAC,CAAC,CAAC;QACpF,CAAC;QAEQ,iBAAiB;YACzB,OAAO,IAAI,CAAC;QACb,CAAC;QAEkB,CAAC,CAAU,SAAsB;YACnD,KAAK,CAAC,CAAC,CAAU,SAAS,CAAC,CAAC;YAE5B,IAAI,CAAC,CAAC,CAAS,IAAI,SAAG,CAAiB,SAAS,EAAE;gBACjD,MAAM,EAAE,CAAC,CAAC,EAAE;oBACX,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;oBACrC,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,CAAmB,cAAc,CAAC,UAAI,EAAkB,EAAE,kBAAkB,EAAE,CAAC,aAAE,IAAO,IAAA,eAAG,EAAkB,IAAI,CAAC,CAAC,CAAc,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;oBAC/K,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;gBAC7D,CAAC;gBACD,WAAW,EAAE,GAAG,EAAE;oBACjB,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAW,aAAa,EAAE,CAAC,QAAQ,CAAC,mBAAG,CAAgB,CAAC;oBAC7E,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBACjE,CAAC;gBACD,SAAS,EAAE,GAAG,EAAE;oBACf,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;gBACtC,CAAC;gBACD,WAAW,EAAE,GAAG,EAAE;oBACjB,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;gBACtC,CAAC;gBACD,UAAU,EAAE,CAAC,CAAC,EAAE;oBACf,IAAI,CAAC,CAAC,YAAY,EAAE;wBACnB,CAAC,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;qBACnC;gBACF,CAAC;aACD,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,CAAC,EAAa,CAAC;QACrB,CAAC;QAEO,CAAC;YACR,IAAI,IAAI,CAAC,CAAC,EAAU;gBACnB,OAAO;aACP;YAED,IAAI,IAAI,CAAC,CAAC,CAAc,iBAAiB,EAAE,qCAA6B,EAAE;gBACzE,IAAI,CAAC,EAAE,CAAU,MAAI,CAAM,IAAI,CAAC,CAAC;aACjC;iBAAM;gBACN,IAAI,CAAC,EAAE,CAAU,IAAI,CAAC,KAAK,CAAC,CAAC;aAC7B;QACF,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,CAAC,GAAW,IAAI,CAAC;YACtB,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;;IA1EW,oBAAI;mBAAJ,IAAI;QAQd,WAAA,kBAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,gBAAG,CAAA;QACH,WAAA,iBAAG,CAAA;QACH,WAAA,eAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,gBAAG,CAAA;QACH,YAAA,YAAG,CAAA;QACH,YAAA,eAAG,CAAA;OAlBO,IAAI,CA2EhB","file":"emptyView.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { isTemporaryWorkspace, IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ViewPane } from 'vs/workbench/browser/parts/views/viewPane';\nimport { ResourcesDropHandler } from 'vs/workbench/browser/dnd';\nimport { listDropBackground } from 'vs/platform/theme/common/colorRegistry';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IViewDescriptorService } from 'vs/workbench/common/views';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isWeb } from 'vs/base/common/platform';\nimport { DragAndDropObserver } from 'vs/base/browser/dom';\n\nexport class EmptyView extends ViewPane {\n\n\tstatic readonly ID: string = 'workbench.explorer.emptyView';\n\tstatic readonly NAME = nls.localize('noWorkspace', \"No Folder Opened\");\n\tprivate _disposed: boolean = false;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILabelService private labelService: ILabelService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService);\n\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(() => this.refreshTitle()));\n\t\tthis._register(this.labelService.onDidChangeFormatters(() => this.refreshTitle()));\n\t}\n\n\toverride shouldShowWelcome(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis._register(new DragAndDropObserver(container, {\n\t\t\tonDrop: e => {\n\t\t\t\tcontainer.style.backgroundColor = '';\n\t\t\t\tconst dropHandler = this.instantiationService.createInstance(ResourcesDropHandler, { allowWorkspaceOpen: !isWeb || isTemporaryWorkspace(this.contextService.getWorkspace()) });\n\t\t\t\tdropHandler.handleDrop(e, () => undefined, () => undefined);\n\t\t\t},\n\t\t\tonDragEnter: () => {\n\t\t\t\tconst color = this.themeService.getColorTheme().getColor(listDropBackground);\n\t\t\t\tcontainer.style.backgroundColor = color ? color.toString() : '';\n\t\t\t},\n\t\t\tonDragEnd: () => {\n\t\t\t\tcontainer.style.backgroundColor = '';\n\t\t\t},\n\t\t\tonDragLeave: () => {\n\t\t\t\tcontainer.style.backgroundColor = '';\n\t\t\t},\n\t\t\tonDragOver: e => {\n\t\t\t\tif (e.dataTransfer) {\n\t\t\t\t\te.dataTransfer.dropEffect = 'copy';\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis.refreshTitle();\n\t}\n\n\tprivate refreshTitle(): void {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\tthis.updateTitle(EmptyView.NAME);\n\t\t} else {\n\t\t\tthis.updateTitle(this.title);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis._disposed = true;\n\t\tsuper.dispose();\n\t}\n}\n"]}