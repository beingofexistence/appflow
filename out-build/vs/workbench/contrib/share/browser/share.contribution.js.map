{"version":3,"sources":["vs/workbench/contrib/share/browser/share.contribution.ts"],"names":[],"mappings":"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","file":"share.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./share';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { MarkdownString } from 'vs/base/common/htmlContent';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { localize } from 'vs/nls';\nimport { Action2, MenuId, MenuRegistry, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { EditorResourceAccessor, SideBySideEditor } from 'vs/workbench/common/editor';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { Severity } from 'vs/platform/notification/common/notification';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { WorkspaceFolderCountContext } from 'vs/workbench/common/contextkeys';\nimport { Extensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { ShareProviderCountContext, ShareService } from 'vs/workbench/contrib/share/browser/shareService';\nimport { IShareService } from 'vs/workbench/contrib/share/common/share';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IProgressService, ProgressLocation } from 'vs/platform/progress/common/progress';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { workbenchConfigurationNodeBase } from 'vs/workbench/common/configuration';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nconst targetMenus = [\n\tMenuId.EditorContextShare,\n\tMenuId.SCMResourceContextShare,\n\tMenuId.OpenEditorsContextShare,\n\tMenuId.EditorTitleContextShare,\n\tMenuId.MenubarShare,\n\t// MenuId.EditorLineNumberContext, // todo@joyceerhl add share\n\tMenuId.ExplorerContextShare\n];\n\nclass ShareWorkbenchContribution {\n\tprivate static SHARE_ENABLED_SETTING = 'workbench.experimental.share.enabled';\n\n\tprivate _disposables: DisposableStore | undefined;\n\n\tconstructor(\n\t\t@IShareService private readonly shareService: IShareService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tif (this.configurationService.getValue<boolean>(ShareWorkbenchContribution.SHARE_ENABLED_SETTING)) {\n\t\t\tthis.registerActions();\n\t\t}\n\t\tthis.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(ShareWorkbenchContribution.SHARE_ENABLED_SETTING)) {\n\t\t\t\tconst settingValue = this.configurationService.getValue<boolean>(ShareWorkbenchContribution.SHARE_ENABLED_SETTING);\n\t\t\t\tif (settingValue === true && this._disposables === undefined) {\n\t\t\t\t\tthis.registerActions();\n\t\t\t\t} else if (settingValue === false && this._disposables !== undefined) {\n\t\t\t\t\tthis._disposables?.clear();\n\t\t\t\t\tthis._disposables = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate registerActions() {\n\t\tif (!this._disposables) {\n\t\t\tthis._disposables = new DisposableStore();\n\t\t}\n\n\t\tthis._disposables.add(\n\t\t\tregisterAction2(class ShareAction extends Action2 {\n\t\t\t\tstatic readonly ID = 'workbench.action.share';\n\t\t\t\tstatic readonly LABEL = localize('share', 'Share...');\n\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: ShareAction.ID,\n\t\t\t\t\t\ttitle: { value: ShareAction.LABEL, original: 'Share...' },\n\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\ticon: Codicon.linkExternal,\n\t\t\t\t\t\tprecondition: ContextKeyExpr.and(ShareProviderCountContext.notEqualsTo(0), WorkspaceFolderCountContext.notEqualsTo(0)),\n\t\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\t\tprimary: KeyMod.Alt | KeyMod.CtrlCmd | KeyCode.KeyS,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmenu: [\n\t\t\t\t\t\t\t{ id: MenuId.CommandCenter, order: 1000 }\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\toverride async run(accessor: ServicesAccessor, ...args: any[]): Promise<void> {\n\t\t\t\t\tconst shareService = accessor.get(IShareService);\n\t\t\t\t\tconst activeEditor = accessor.get(IEditorService)?.activeEditor;\n\t\t\t\t\tconst resourceUri = (activeEditor && EditorResourceAccessor.getOriginalUri(activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY }))\n\t\t\t\t\t\t?? accessor.get(IWorkspaceContextService).getWorkspace().folders[0].uri;\n\t\t\t\t\tconst clipboardService = accessor.get(IClipboardService);\n\t\t\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\t\t\tconst urlService = accessor.get(IOpenerService);\n\t\t\t\t\tconst progressService = accessor.get(IProgressService);\n\t\t\t\t\tconst selection = accessor.get(ICodeEditorService).getActiveCodeEditor()?.getSelection() ?? undefined;\n\n\t\t\t\t\tconst result = await progressService.withProgress({\n\t\t\t\t\t\tlocation: ProgressLocation.Window,\n\t\t\t\t\t\tdetail: localize('generating link', 'Generating link...')\n\t\t\t\t\t}, async () => shareService.provideShare({ resourceUri, selection }, new CancellationTokenSource().token));\n\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tconst uriText = result.toString();\n\t\t\t\t\t\tconst isResultText = typeof result === 'string';\n\t\t\t\t\t\tawait clipboardService.writeText(uriText);\n\n\t\t\t\t\t\tdialogService.prompt(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: Severity.Info,\n\t\t\t\t\t\t\t\tmessage: isResultText ? localize('shareTextSuccess', 'Copied text to clipboard!') : localize('shareSuccess', 'Copied link to clipboard!'),\n\t\t\t\t\t\t\t\tcustom: {\n\t\t\t\t\t\t\t\t\ticon: Codicon.check,\n\t\t\t\t\t\t\t\t\tmarkdownDetails: [{\n\t\t\t\t\t\t\t\t\t\tmarkdown: new MarkdownString(`<div aria-label='${uriText}'>${uriText}</div>`, { supportHtml: true }),\n\t\t\t\t\t\t\t\t\t\tclasses: [isResultText ? 'share-dialog-input-text' : 'share-dialog-input-link']\n\t\t\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcancelButton: localize('close', 'Close'),\n\t\t\t\t\t\t\t\tbuttons: isResultText ? [] : [{ label: localize('open link', 'Open Link'), run: () => { urlService.open(result, { openExternal: true }); } }]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tconst actions = this.shareService.getShareActions();\n\t\tfor (const menuId of targetMenus) {\n\t\t\tfor (const action of actions) {\n\t\t\t\t// todo@joyceerhl avoid duplicates\n\t\t\t\tthis._disposables.add(MenuRegistry.appendMenuItem(menuId, action));\n\t\t\t}\n\t\t}\n\t}\n}\n\nregisterSingleton(IShareService, ShareService, InstantiationType.Delayed);\nconst workbenchContributionsRegistry = Registry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench);\nworkbenchContributionsRegistry.registerWorkbenchContribution(ShareWorkbenchContribution, LifecyclePhase.Eventually);\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\t...workbenchConfigurationNodeBase,\n\tproperties: {\n\t\t'workbench.experimental.share.enabled': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\ttags: ['experimental'],\n\t\t\tmarkdownDescription: localize('experimental.share.enabled', \"Controls whether to render the Share action next to the command center when {0} is {1}.\", '`#window.commandCenter#`', '`true`'),\n\t\t\trestricted: false,\n\t\t}\n\t}\n});\n"]}