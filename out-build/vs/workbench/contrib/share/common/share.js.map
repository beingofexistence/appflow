{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/share/common/share.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAwBnF,QAAA,IAAI,GAAY,IAAA,mBAAG,EAA4B,cAAc,CAAC,CAAC","file":"share.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { LanguageSelector } from 'vs/editor/common/languageSelector';\nimport { ISubmenuItem } from 'vs/platform/actions/common/actions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IShareableItem {\n\tresourceUri: URI;\n\tselection?: Selection;\n}\n\nexport interface IShareProvider {\n\treadonly id: string;\n\treadonly label: string;\n\treadonly priority: number;\n\treadonly selector: LanguageSelector;\n\tprepareShare?(item: IShareableItem, token: CancellationToken): Thenable<boolean | undefined>;\n\tprovideShare(item: IShareableItem, token: CancellationToken): Thenable<URI | string | undefined>;\n}\n\nexport const IShareService = createDecorator<IShareService>('shareService');\nexport interface IShareService {\n\t_serviceBrand: undefined;\n\n\tregisterShareProvider(provider: IShareProvider): IDisposable;\n\tgetShareActions(): ISubmenuItem[];\n\tprovideShare(item: IShareableItem, token: CancellationToken): Thenable<URI | string | undefined>;\n}\n"]}