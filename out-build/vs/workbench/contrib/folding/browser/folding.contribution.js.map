{"version":3,"sources":["vs/workbench/contrib/folding/browser/folding.contribution.ts"],"names":[],"mappings":"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","file":"folding.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { FoldingController } from 'vs/editor/contrib/folding/browser/folding';\nimport * as nls from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { editorConfigurationBaseNode } from 'vs/editor/common/config/editorConfigurationSchema';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { FoldingRangeProvider } from 'vs/editor/common/languages';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\n\nclass DefaultFoldingRangeProvider extends Disposable implements IWorkbenchContribution {\n\n\tstatic readonly configName = 'editor.defaultFoldingRangeProvider';\n\n\tstatic extensionIds: (string | null)[] = [];\n\tstatic extensionItemLabels: string[] = [];\n\tstatic extensionDescriptions: string[] = [];\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis._store.add(this._extensionService.onDidChangeExtensions(this._updateConfigValues, this));\n\t\tthis._store.add(FoldingController.setFoldingRangeProviderSelector(this._selectFoldingRangeProvider.bind(this)));\n\n\t\tthis._updateConfigValues();\n\t}\n\n\tprivate async _updateConfigValues(): Promise<void> {\n\t\tawait this._extensionService.whenInstalledExtensionsRegistered();\n\n\t\tDefaultFoldingRangeProvider.extensionIds.length = 0;\n\t\tDefaultFoldingRangeProvider.extensionItemLabels.length = 0;\n\t\tDefaultFoldingRangeProvider.extensionDescriptions.length = 0;\n\n\t\tDefaultFoldingRangeProvider.extensionIds.push(null);\n\t\tDefaultFoldingRangeProvider.extensionItemLabels.push(nls.localize('null', 'All'));\n\t\tDefaultFoldingRangeProvider.extensionDescriptions.push(nls.localize('nullFormatterDescription', \"All active folding range providers\"));\n\n\t\tconst languageExtensions: IExtensionDescription[] = [];\n\t\tconst otherExtensions: IExtensionDescription[] = [];\n\n\t\tfor (const extension of this._extensionService.extensions) {\n\t\t\tif (extension.main || extension.browser) {\n\t\t\t\tif (extension.categories?.find(cat => cat === 'Programming Languages')) {\n\t\t\t\t\tlanguageExtensions.push(extension);\n\t\t\t\t} else {\n\t\t\t\t\totherExtensions.push(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst sorter = (a: IExtensionDescription, b: IExtensionDescription) => a.name.localeCompare(b.name);\n\n\t\tfor (const extension of languageExtensions.sort(sorter)) {\n\t\t\tDefaultFoldingRangeProvider.extensionIds.push(extension.identifier.value);\n\t\t\tDefaultFoldingRangeProvider.extensionItemLabels.push(extension.displayName ?? '');\n\t\t\tDefaultFoldingRangeProvider.extensionDescriptions.push(extension.description ?? '');\n\t\t}\n\t\tfor (const extension of otherExtensions.sort(sorter)) {\n\t\t\tDefaultFoldingRangeProvider.extensionIds.push(extension.identifier.value);\n\t\t\tDefaultFoldingRangeProvider.extensionItemLabels.push(extension.displayName ?? '');\n\t\t\tDefaultFoldingRangeProvider.extensionDescriptions.push(extension.description ?? '');\n\t\t}\n\t}\n\n\tprivate _selectFoldingRangeProvider(providers: FoldingRangeProvider[], document: ITextModel): FoldingRangeProvider[] | undefined {\n\t\tconst value = this._configurationService.getValue<string>(DefaultFoldingRangeProvider.configName, { overrideIdentifier: document.getLanguageId() });\n\t\tif (value) {\n\t\t\treturn providers.filter(p => p.id === value);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\t...editorConfigurationBaseNode,\n\tproperties: {\n\t\t[DefaultFoldingRangeProvider.configName]: {\n\t\t\tdescription: nls.localize('formatter.default', \"Defines a default folding range provider that takes precedence over all other folding range providers. Must be the identifier of an extension contributing a folding range provider.\"),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tenum: DefaultFoldingRangeProvider.extensionIds,\n\t\t\tenumItemLabels: DefaultFoldingRangeProvider.extensionItemLabels,\n\t\t\tmarkdownEnumDescriptions: DefaultFoldingRangeProvider.extensionDescriptions\n\t\t}\n\t}\n});\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(\n\tDefaultFoldingRangeProvider,\n\tLifecyclePhase.Restored\n);\n\n"]}