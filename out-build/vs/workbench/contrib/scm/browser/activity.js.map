{"version":3,"sources":["vs/workbench/contrib/scm/browser/activity.ts"],"names":[],"mappings":"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","file":"activity.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { basename } from 'vs/base/common/resources';\nimport { IDisposable, dispose, Disposable, DisposableStore, combinedDisposable, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { Event } from 'vs/base/common/event';\nimport { VIEW_PANE_ID, ISCMService, ISCMRepository, ISCMViewService } from 'vs/workbench/contrib/scm/common/scm';\nimport { IActivityService, NumberBadge } from 'vs/workbench/services/activity/common/activity';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IStatusbarEntry, IStatusbarService, StatusbarAlignment as MainThreadStatusBarAlignment } from 'vs/workbench/services/statusbar/browser/statusbar';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { EditorResourceAccessor } from 'vs/workbench/common/editor';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { Schemas } from 'vs/base/common/network';\nimport { Iterable } from 'vs/base/common/iterator';\n\nfunction getCount(repository: ISCMRepository): number {\n\tif (typeof repository.provider.count === 'number') {\n\t\treturn repository.provider.count;\n\t} else {\n\t\treturn repository.provider.groups.elements.reduce<number>((r, g) => r + g.elements.length, 0);\n\t}\n}\n\nexport class SCMStatusController implements IWorkbenchContribution {\n\n\tprivate statusBarDisposable: IDisposable = Disposable.None;\n\tprivate focusDisposable: IDisposable = Disposable.None;\n\tprivate focusedRepository: ISCMRepository | undefined = undefined;\n\tprivate readonly badgeDisposable = new MutableDisposable<IDisposable>();\n\tprivate readonly disposables = new DisposableStore();\n\tprivate repositoryDisposables = new Set<IDisposable>();\n\n\tconstructor(\n\t\t@ISCMService private readonly scmService: ISCMService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService,\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@IActivityService private readonly activityService: IActivityService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService\n\t) {\n\t\tthis.scmService.onDidAddRepository(this.onDidAddRepository, this, this.disposables);\n\t\tthis.scmService.onDidRemoveRepository(this.onDidRemoveRepository, this, this.disposables);\n\n\t\tconst onDidChangeSCMCountBadge = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.countBadge'));\n\t\tonDidChangeSCMCountBadge(this.renderActivityCount, this, this.disposables);\n\n\t\tfor (const repository of this.scmService.repositories) {\n\t\t\tthis.onDidAddRepository(repository);\n\t\t}\n\n\t\tthis.scmViewService.onDidFocusRepository(this.focusRepository, this, this.disposables);\n\t\tthis.focusRepository(this.scmViewService.focusedRepository);\n\n\t\teditorService.onDidActiveEditorChange(() => this.tryFocusRepositoryBasedOnActiveEditor(), this, this.disposables);\n\t\tthis.renderActivityCount();\n\t}\n\n\tprivate tryFocusRepositoryBasedOnActiveEditor(repositories: Iterable<ISCMRepository> = this.scmService.repositories): boolean {\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(this.editorService.activeEditor);\n\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet bestRepository: ISCMRepository | null = null;\n\t\tlet bestMatchLength = Number.POSITIVE_INFINITY;\n\n\t\tfor (const repository of repositories) {\n\t\t\tconst root = repository.provider.rootUri;\n\n\t\t\tif (!root) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst path = this.uriIdentityService.extUri.relativePath(root, resource);\n\n\t\t\tif (path && !/^\\.\\./.test(path) && path.length < bestMatchLength) {\n\t\t\t\tbestRepository = repository;\n\t\t\t\tbestMatchLength = path.length;\n\t\t\t}\n\t\t}\n\n\t\tif (!bestRepository) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.focusRepository(bestRepository);\n\t\treturn true;\n\t}\n\n\tprivate onDidAddRepository(repository: ISCMRepository): void {\n\t\tconst onDidChange = Event.any(repository.provider.onDidChange, repository.provider.onDidChangeResources);\n\t\tconst changeDisposable = onDidChange(() => this.renderActivityCount());\n\n\t\tconst onDidRemove = Event.filter(this.scmService.onDidRemoveRepository, e => e === repository);\n\t\tconst removeDisposable = onDidRemove(() => {\n\t\t\tdisposable.dispose();\n\t\t\tthis.repositoryDisposables.delete(disposable);\n\t\t\tthis.renderActivityCount();\n\t\t});\n\n\t\tconst disposable = combinedDisposable(changeDisposable, removeDisposable);\n\t\tthis.repositoryDisposables.add(disposable);\n\n\t\tthis.tryFocusRepositoryBasedOnActiveEditor(Iterable.single(repository));\n\t}\n\n\tprivate onDidRemoveRepository(repository: ISCMRepository): void {\n\t\tif (this.focusedRepository !== repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.focusRepository(Iterable.first(this.scmService.repositories));\n\t}\n\n\tprivate focusRepository(repository: ISCMRepository | undefined): void {\n\t\tif (this.focusedRepository === repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.focusDisposable.dispose();\n\t\tthis.focusedRepository = repository;\n\n\t\tif (repository && repository.provider.onDidChangeStatusBarCommands) {\n\t\t\tthis.focusDisposable = repository.provider.onDidChangeStatusBarCommands(() => this.renderStatusBar(repository));\n\t\t}\n\n\t\tthis.renderStatusBar(repository);\n\t\tthis.renderActivityCount();\n\t}\n\n\tprivate renderStatusBar(repository: ISCMRepository | undefined): void {\n\t\tthis.statusBarDisposable.dispose();\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst commands = repository.provider.statusBarCommands || [];\n\t\tconst label = repository.provider.rootUri\n\t\t\t? `${basename(repository.provider.rootUri)} (${repository.provider.label})`\n\t\t\t: repository.provider.label;\n\n\t\tconst disposables = new DisposableStore();\n\t\tfor (let index = 0; index < commands.length; index++) {\n\t\t\tconst command = commands[index];\n\t\t\tconst tooltip = `${label}${command.tooltip ? ` - ${command.tooltip}` : ''}`;\n\n\t\t\t// Get a repository agnostic name for the status bar action, derive this from the\n\t\t\t// first command argument which is in the form \"git.<command>/<number>\"\n\t\t\tlet repoAgnosticActionName = command.arguments?.[0];\n\t\t\tif (repoAgnosticActionName && typeof repoAgnosticActionName === 'string') {\n\t\t\t\trepoAgnosticActionName = repoAgnosticActionName\n\t\t\t\t\t.substring(0, repoAgnosticActionName.lastIndexOf('/'))\n\t\t\t\t\t.replace(/^git\\./, '');\n\t\t\t\tif (repoAgnosticActionName.length > 1) {\n\t\t\t\t\trepoAgnosticActionName = repoAgnosticActionName[0].toLocaleUpperCase() + repoAgnosticActionName.slice(1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trepoAgnosticActionName = '';\n\t\t\t}\n\n\t\t\tconst statusbarEntry: IStatusbarEntry = {\n\t\t\t\tname: localize('status.scm', \"Source Control\") + (repoAgnosticActionName ? ` ${repoAgnosticActionName}` : ''),\n\t\t\t\ttext: command.title,\n\t\t\t\tariaLabel: tooltip,\n\t\t\t\ttooltip,\n\t\t\t\tcommand: command.id ? command : undefined\n\t\t\t};\n\n\t\t\tdisposables.add(index === 0 ?\n\t\t\t\tthis.statusbarService.addEntry(statusbarEntry, `status.scm.${index}`, MainThreadStatusBarAlignment.LEFT, 10000) :\n\t\t\t\tthis.statusbarService.addEntry(statusbarEntry, `status.scm.${index}`, MainThreadStatusBarAlignment.LEFT, { id: `status.scm.${index - 1}`, alignment: MainThreadStatusBarAlignment.RIGHT, compact: true })\n\t\t\t);\n\t\t}\n\n\t\tthis.statusBarDisposable = disposables;\n\t}\n\n\tprivate renderActivityCount(): void {\n\t\tconst countBadgeType = this.configurationService.getValue<'all' | 'focused' | 'off'>('scm.countBadge');\n\n\t\tlet count = 0;\n\n\t\tif (countBadgeType === 'all') {\n\t\t\tcount = Iterable.reduce(this.scmService.repositories, (r, repository) => r + getCount(repository), 0);\n\t\t} else if (countBadgeType === 'focused' && this.focusedRepository) {\n\t\t\tcount = getCount(this.focusedRepository);\n\t\t}\n\n\t\tif (count > 0) {\n\t\t\tconst badge = new NumberBadge(count, num => localize('scmPendingChangesBadge', '{0} pending changes', num));\n\t\t\tthis.badgeDisposable.value = this.activityService.showViewActivity(VIEW_PANE_ID, { badge, clazz: 'scm-viewlet-label' });\n\t\t} else {\n\t\t\tthis.badgeDisposable.value = undefined;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.focusDisposable.dispose();\n\t\tthis.statusBarDisposable.dispose();\n\t\tthis.badgeDisposable.dispose();\n\t\tthis.disposables.dispose();\n\t\tdispose(this.repositoryDisposables.values());\n\t\tthis.repositoryDisposables.clear();\n\t}\n}\n\nexport class SCMActiveResourceContextKeyController implements IWorkbenchContribution {\n\n\tprivate activeResourceHasChangesContextKey: IContextKey<boolean>;\n\tprivate activeResourceRepositoryContextKey: IContextKey<string | undefined>;\n\tprivate readonly disposables = new DisposableStore();\n\tprivate repositoryDisposables = new Set<IDisposable>();\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ISCMService private readonly scmService: ISCMService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService\n\t) {\n\t\tthis.activeResourceHasChangesContextKey = contextKeyService.createKey('scmActiveResourceHasChanges', false);\n\t\tthis.activeResourceRepositoryContextKey = contextKeyService.createKey('scmActiveResourceRepository', undefined);\n\n\t\tthis.scmService.onDidAddRepository(this.onDidAddRepository, this, this.disposables);\n\n\t\tfor (const repository of this.scmService.repositories) {\n\t\t\tthis.onDidAddRepository(repository);\n\t\t}\n\n\t\teditorService.onDidActiveEditorChange(this.updateContextKey, this, this.disposables);\n\t}\n\n\tprivate onDidAddRepository(repository: ISCMRepository): void {\n\t\tconst onDidChange = Event.any(repository.provider.onDidChange, repository.provider.onDidChangeResources);\n\t\tconst changeDisposable = onDidChange(() => this.updateContextKey());\n\n\t\tconst onDidRemove = Event.filter(this.scmService.onDidRemoveRepository, e => e === repository);\n\t\tconst removeDisposable = onDidRemove(() => {\n\t\t\tdisposable.dispose();\n\t\t\tthis.repositoryDisposables.delete(disposable);\n\t\t\tthis.updateContextKey();\n\t\t});\n\n\t\tconst disposable = combinedDisposable(changeDisposable, removeDisposable);\n\t\tthis.repositoryDisposables.add(disposable);\n\t}\n\n\tprivate updateContextKey(): void {\n\t\tconst activeResource = EditorResourceAccessor.getOriginalUri(this.editorService.activeEditor);\n\n\t\tif (activeResource?.scheme === Schemas.file || activeResource?.scheme === Schemas.vscodeRemote) {\n\t\t\tconst activeResourceRepository = Iterable.find(\n\t\t\t\tthis.scmService.repositories,\n\t\t\t\tr => Boolean(r.provider.rootUri && this.uriIdentityService.extUri.isEqualOrParent(activeResource, r.provider.rootUri))\n\t\t\t);\n\n\t\t\tthis.activeResourceRepositoryContextKey.set(activeResourceRepository?.id);\n\n\t\t\tfor (const resourceGroup of activeResourceRepository?.provider.groups.elements ?? []) {\n\t\t\t\tif (resourceGroup.elements\n\t\t\t\t\t.some(scmResource =>\n\t\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(activeResource, scmResource.sourceUri))) {\n\t\t\t\t\tthis.activeResourceHasChangesContextKey.set(true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.activeResourceHasChangesContextKey.set(false);\n\t\t} else {\n\t\t\tthis.activeResourceHasChangesContextKey.set(false);\n\t\t\tthis.activeResourceRepositoryContextKey.set(undefined);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t\tdispose(this.repositoryDisposables.values());\n\t\tthis.repositoryDisposables.clear();\n\t}\n}\n"]}