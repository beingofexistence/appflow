{"version":3,"sources":["vs/workbench/contrib/scm/browser/dirtyDiffSwitcher.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAgBzF,IAAM,IAAI,GAAV,MAAM,IAAwB,SAAQ,qBAA0C;QAGtF,YACC,MAAe,EACf,SAAmB,EACnB,QAAgB,EACK,kBAAuB,EAC7B,YAAiB;YAEhC,MAAM,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;YACxE,IAAI,iBAAiB,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpD,IAAI,iBAAiB,KAAK,CAAC,CAAC,EAAE;gBAC7B,iBAAiB,GAAG,CAAC,CAAC;aACtB;YACD,MAAM,MAAM,GAAG,EAAE,GAAG,mBAAG,EAAqB,CAAC;YAC7C,MAAM,KAAK,GAAG,YAAY,CAAC,aAAa,EAAE,CAAC;YAC3C,MAAM,qBAAqB,GAAG,KAAK,CAAC,QAAQ,CAAC,mBAAG,CAAc,CAAC;YAC/D,MAAM,cAAc,GAAG,KAAK,CAAC,QAAQ,CAAC,cAAG,CAAqB,CAAC;YAC/D,MAAM,gBAAgB,GAAG,cAAc,EAAE,UAAU,CAAC,qBAAsB,CAAC,IAAI,qBAAsB,CAAC;YACtG,MAAM,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;YAClE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,MAAM,EAAE,EAAE,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAS,EAAE,IAAwB,CAAC,EAAE,CAAC,CAAC;YAC5I,IAAI,CAAC,CAAC,GAAc,KAAK,CAAC;QAC3B,CAAC;QAEM,YAAY,CAAC,QAAgB;YACnC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAY,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;YAC9E,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC;QAEkB,CAAC,CAAgB,CAAS,EAAE,KAAa;YAC3D,OAAO,IAAI,CAAC,CAAC,CAAY,KAAK,CAAC,CAAC;QACjC,CAAC;QAEQ,MAAM,CAAC,SAAsB;YACrC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;KACD,CAAA;IAtCY,oBAAI;mBAAJ,IAAI;QAOd,WAAA,iBAAG,CAAA;QACH,WAAA,kBAAG,CAAA;OARO,IAAI,CAsChB;IAED,MAAa,IAA0B,SAAQ,aAAG;iBAE1B,OAAE,GAAG,uBAAuB,CAAC;iBAC7B,UAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAuB,EAAE,IAAwB,CAAC,CAAC;QAE/F,YAA6B,CAAgD;YAC5E,KAAK,CAAC,IAAI,CAAsB,EAAE,EAAE,IAAI,CAAsB,KAAK,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YAD/D,MAAC,GAAD,CAAC,CAA+C;QAE7E,CAAC;QAEQ,KAAK,CAAC,GAAG,CAAC,KAA4B;YAC9C,OAAO,IAAI,CAAC,CAAC,CAAQ,KAAK,CAAC,CAAC;QAC7B,CAAC;;IAXF,oBAYC","file":"dirtyDiffSwitcher.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Action, IAction } from 'vs/base/common/actions';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { ISelectOptionItem } from 'vs/base/browser/ui/selectBox/selectBox';\nimport { SelectActionViewItem } from 'vs/base/browser/ui/actionbar/actionViewItems';\nimport { defaultSelectBoxStyles } from 'vs/platform/theme/browser/defaultStyles';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { peekViewTitleBackground } from 'vs/editor/contrib/peekView/browser/peekView';\nimport { editorBackground } from 'vs/platform/theme/common/colorRegistry';\n\nexport interface IQuickDiffSelectItem extends ISelectOptionItem {\n\tprovider: string;\n}\n\nexport class SwitchQuickDiffViewItem extends SelectActionViewItem<IQuickDiffSelectItem> {\n\tprivate readonly optionsItems: IQuickDiffSelectItem[];\n\n\tconstructor(\n\t\taction: IAction,\n\t\tproviders: string[],\n\t\tselected: string,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IThemeService themeService: IThemeService\n\t) {\n\t\tconst items = providers.map(provider => ({ provider, text: provider }));\n\t\tlet startingSelection = providers.indexOf(selected);\n\t\tif (startingSelection === -1) {\n\t\t\tstartingSelection = 0;\n\t\t}\n\t\tconst styles = { ...defaultSelectBoxStyles };\n\t\tconst theme = themeService.getColorTheme();\n\t\tconst editorBackgroundColor = theme.getColor(editorBackground);\n\t\tconst peekTitleColor = theme.getColor(peekViewTitleBackground);\n\t\tconst opaqueTitleColor = peekTitleColor?.makeOpaque(editorBackgroundColor!) ?? editorBackgroundColor!;\n\t\tstyles.selectBackground = opaqueTitleColor.lighten(.6).toString();\n\t\tsuper(null, action, items, startingSelection, contextViewService, styles, { ariaLabel: nls.localize('remotes', 'Switch quick diff base') });\n\t\tthis.optionsItems = items;\n\t}\n\n\tpublic setSelection(provider: string) {\n\t\tconst index = this.optionsItems.findIndex(item => item.provider === provider);\n\t\tthis.select(index);\n\t}\n\n\tprotected override getActionContext(_: string, index: number): IQuickDiffSelectItem {\n\t\treturn this.optionsItems[index];\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tthis.setFocusable(true);\n\t}\n}\n\nexport class SwitchQuickDiffBaseAction extends Action {\n\n\tpublic static readonly ID = 'quickDiff.base.switch';\n\tpublic static readonly LABEL = nls.localize('quickDiff.base.switch', \"Switch Quick Diff Base\");\n\n\tconstructor(private readonly callback: (event?: IQuickDiffSelectItem) => void) {\n\t\tsuper(SwitchQuickDiffBaseAction.ID, SwitchQuickDiffBaseAction.LABEL, undefined, undefined);\n\t}\n\n\toverride async run(event?: IQuickDiffSelectItem): Promise<void> {\n\t\treturn this.callback(event);\n\t}\n}\n"]}