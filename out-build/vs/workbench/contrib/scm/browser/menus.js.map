{"version":3,"sources":["vs/workbench/contrib/scm/browser/menus.ts"],"names":[],"mappings":"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","file":"menus.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/scm';\nimport { Emitter } from 'vs/base/common/event';\nimport { IDisposable, DisposableStore, dispose } from 'vs/base/common/lifecycle';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IMenuService, MenuId, IMenu, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { IAction } from 'vs/base/common/actions';\nimport { createAndFillInActionBarActions } from 'vs/platform/actions/browser/menuEntryActionViewItem';\nimport { ISCMResource, ISCMResourceGroup, ISCMProvider, ISCMRepository, ISCMService, ISCMMenus, ISCMRepositoryMenus } from 'vs/workbench/contrib/scm/common/scm';\nimport { equals } from 'vs/base/common/arrays';\nimport { ISplice } from 'vs/base/common/sequence';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { localize } from 'vs/nls';\n\nfunction actionEquals(a: IAction, b: IAction): boolean {\n\treturn a.id === b.id;\n}\n\nexport class SCMTitleMenu implements IDisposable {\n\n\tprivate _actions: IAction[] = [];\n\tget actions(): IAction[] { return this._actions; }\n\n\tprivate _secondaryActions: IAction[] = [];\n\tget secondaryActions(): IAction[] { return this._secondaryActions; }\n\n\tprivate readonly _onDidChangeTitle = new Emitter<void>();\n\treadonly onDidChangeTitle = this._onDidChangeTitle.event;\n\n\treadonly menu: IMenu;\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tthis.menu = menuService.createMenu(MenuId.SCMTitle, contextKeyService);\n\t\tthis.disposables.add(this.menu);\n\n\t\tthis.menu.onDidChange(this.updateTitleActions, this, this.disposables);\n\t\tthis.updateTitleActions();\n\t}\n\n\tprivate updateTitleActions(): void {\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tcreateAndFillInActionBarActions(this.menu, { shouldForwardArgs: true }, { primary, secondary });\n\n\t\tif (equals(primary, this._actions, actionEquals) && equals(secondary, this._secondaryActions, actionEquals)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._actions = primary;\n\t\tthis._secondaryActions = secondary;\n\n\t\tthis._onDidChangeTitle.fire();\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\ninterface IContextualResourceMenuItem {\n\treadonly menu: IMenu;\n\tdispose(): void;\n}\n\nclass SCMMenusItem implements IDisposable {\n\n\tprivate _resourceGroupMenu: IMenu | undefined;\n\tget resourceGroupMenu(): IMenu {\n\t\tif (!this._resourceGroupMenu) {\n\t\t\tthis._resourceGroupMenu = this.menuService.createMenu(MenuId.SCMResourceGroupContext, this.contextKeyService);\n\t\t}\n\n\t\treturn this._resourceGroupMenu;\n\t}\n\n\tprivate _resourceFolderMenu: IMenu | undefined;\n\tget resourceFolderMenu(): IMenu {\n\t\tif (!this._resourceFolderMenu) {\n\t\t\tthis._resourceFolderMenu = this.menuService.createMenu(MenuId.SCMResourceFolderContext, this.contextKeyService);\n\t\t}\n\n\t\treturn this._resourceFolderMenu;\n\t}\n\n\tprivate genericResourceMenu: IMenu | undefined;\n\tprivate contextualResourceMenus: Map<string /* contextValue */, IContextualResourceMenuItem> | undefined;\n\n\tconstructor(\n\t\tprivate contextKeyService: IContextKeyService,\n\t\tprivate menuService: IMenuService\n\t) { }\n\n\tgetResourceMenu(resource: ISCMResource): IMenu {\n\t\tif (typeof resource.contextValue === 'undefined') {\n\t\t\tif (!this.genericResourceMenu) {\n\t\t\t\tthis.genericResourceMenu = this.menuService.createMenu(MenuId.SCMResourceContext, this.contextKeyService);\n\t\t\t}\n\n\t\t\treturn this.genericResourceMenu;\n\t\t}\n\n\t\tif (!this.contextualResourceMenus) {\n\t\t\tthis.contextualResourceMenus = new Map<string, IContextualResourceMenuItem>();\n\t\t}\n\n\t\tlet item = this.contextualResourceMenus.get(resource.contextValue);\n\n\t\tif (!item) {\n\t\t\tconst contextKeyService = this.contextKeyService.createOverlay([['scmResourceState', resource.contextValue]]);\n\t\t\tconst menu = this.menuService.createMenu(MenuId.SCMResourceContext, contextKeyService);\n\n\t\t\titem = {\n\t\t\t\tmenu, dispose() {\n\t\t\t\t\tmenu.dispose();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.contextualResourceMenus.set(resource.contextValue, item);\n\t\t}\n\n\t\treturn item.menu;\n\t}\n\n\tdispose(): void {\n\t\tthis._resourceGroupMenu?.dispose();\n\t\tthis._resourceFolderMenu?.dispose();\n\t\tthis.genericResourceMenu?.dispose();\n\n\t\tif (this.contextualResourceMenus) {\n\t\t\tdispose(this.contextualResourceMenus.values());\n\t\t\tthis.contextualResourceMenus.clear();\n\t\t\tthis.contextualResourceMenus = undefined;\n\t\t}\n\t}\n}\n\nexport class SCMRepositoryMenus implements ISCMRepositoryMenus, IDisposable {\n\n\tprivate contextKeyService: IContextKeyService;\n\n\treadonly titleMenu: SCMTitleMenu;\n\tprivate readonly resourceGroups: ISCMResourceGroup[] = [];\n\tprivate readonly resourceGroupMenusItems = new Map<ISCMResourceGroup, SCMMenusItem>();\n\n\tprivate _repositoryMenu: IMenu | undefined;\n\tget repositoryMenu(): IMenu {\n\t\tif (!this._repositoryMenu) {\n\t\t\tthis._repositoryMenu = this.menuService.createMenu(MenuId.SCMSourceControl, this.contextKeyService);\n\t\t\tthis.disposables.add(this._repositoryMenu);\n\t\t}\n\n\t\treturn this._repositoryMenu;\n\t}\n\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\tprovider: ISCMProvider,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IMenuService private readonly menuService: IMenuService\n\t) {\n\t\tthis.contextKeyService = contextKeyService.createOverlay([\n\t\t\t['scmProvider', provider.contextValue],\n\t\t\t['scmProviderRootUri', provider.rootUri?.toString()],\n\t\t\t['scmProviderHasRootUri', !!provider.rootUri],\n\t\t]);\n\n\t\tconst serviceCollection = new ServiceCollection([IContextKeyService, this.contextKeyService]);\n\t\tinstantiationService = instantiationService.createChild(serviceCollection);\n\t\tthis.titleMenu = instantiationService.createInstance(SCMTitleMenu);\n\n\t\tprovider.groups.onDidSplice(this.onDidSpliceGroups, this, this.disposables);\n\t\tthis.onDidSpliceGroups({ start: 0, deleteCount: 0, toInsert: provider.groups.elements });\n\t}\n\n\tgetResourceGroupMenu(group: ISCMResourceGroup): IMenu {\n\t\treturn this.getOrCreateResourceGroupMenusItem(group).resourceGroupMenu;\n\t}\n\n\tgetResourceMenu(resource: ISCMResource): IMenu {\n\t\treturn this.getOrCreateResourceGroupMenusItem(resource.resourceGroup).getResourceMenu(resource);\n\t}\n\n\tgetResourceFolderMenu(group: ISCMResourceGroup): IMenu {\n\t\treturn this.getOrCreateResourceGroupMenusItem(group).resourceFolderMenu;\n\t}\n\n\tprivate getOrCreateResourceGroupMenusItem(group: ISCMResourceGroup): SCMMenusItem {\n\t\tlet result = this.resourceGroupMenusItems.get(group);\n\n\t\tif (!result) {\n\t\t\tconst contextKeyService = this.contextKeyService.createOverlay([\n\t\t\t\t['scmResourceGroup', group.id],\n\t\t\t]);\n\n\t\t\tresult = new SCMMenusItem(contextKeyService, this.menuService);\n\t\t\tthis.resourceGroupMenusItems.set(group, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate onDidSpliceGroups({ start, deleteCount, toInsert }: ISplice<ISCMResourceGroup>): void {\n\t\tconst deleted = this.resourceGroups.splice(start, deleteCount, ...toInsert);\n\n\t\tfor (const group of deleted) {\n\t\t\tconst item = this.resourceGroupMenusItems.get(group);\n\t\t\titem?.dispose();\n\t\t\tthis.resourceGroupMenusItems.delete(group);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t\tthis.resourceGroupMenusItems.forEach(item => item.dispose());\n\t}\n}\n\nexport class SCMMenus implements ISCMMenus, IDisposable {\n\n\treadonly titleMenu: SCMTitleMenu;\n\tprivate readonly disposables = new DisposableStore();\n\tprivate readonly menus = new Map<ISCMProvider, { menus: SCMRepositoryMenus; dispose: () => void }>();\n\n\tconstructor(\n\t\t@ISCMService scmService: ISCMService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService\n\t) {\n\t\tthis.titleMenu = instantiationService.createInstance(SCMTitleMenu);\n\t\tscmService.onDidRemoveRepository(this.onDidRemoveRepository, this, this.disposables);\n\t}\n\n\tprivate onDidRemoveRepository(repository: ISCMRepository): void {\n\t\tconst menus = this.menus.get(repository.provider);\n\t\tmenus?.dispose();\n\t\tthis.menus.delete(repository.provider);\n\t}\n\n\tgetRepositoryMenus(provider: ISCMProvider): SCMRepositoryMenus {\n\t\tlet result = this.menus.get(provider);\n\n\t\tif (!result) {\n\t\t\tconst menus = this.instantiationService.createInstance(SCMRepositoryMenus, provider);\n\t\t\tconst dispose = () => {\n\t\t\t\tmenus.dispose();\n\t\t\t\tthis.menus.delete(provider);\n\t\t\t};\n\n\t\t\tresult = { menus, dispose };\n\t\t\tthis.menus.set(provider, result);\n\t\t}\n\n\t\treturn result.menus;\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nMenuRegistry.appendMenuItem(MenuId.SCMResourceContext, {\n\ttitle: localize('miShare', \"Share\"),\n\tsubmenu: MenuId.SCMResourceContextShare,\n\tgroup: '45_share',\n\torder: 3,\n});\n"]}