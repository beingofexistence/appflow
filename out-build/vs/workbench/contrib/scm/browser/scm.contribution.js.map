{"version":3,"sources":["vs/workbench/contrib/scm/browser/scm.contribution.ts"],"names":[],"mappings":"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","file":"scm.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { DirtyDiffWorkbenchController } from './dirtydiffDecorator';\nimport { VIEWLET_ID, ISCMService, VIEW_PANE_ID, ISCMProvider, ISCMViewService, REPOSITORIES_VIEW_PANE_ID, SYNC_VIEW_PANE_ID } from 'vs/workbench/contrib/scm/common/scm';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { MenuRegistry, MenuId } from 'vs/platform/actions/common/actions';\nimport { SCMActiveResourceContextKeyController, SCMStatusController } from './activity';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IContextKeyService, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { SCMService } from 'vs/workbench/contrib/scm/common/scmService';\nimport { IViewContainersRegistry, ViewContainerLocation, Extensions as ViewContainerExtensions, IViewsRegistry } from 'vs/workbench/common/views';\nimport { SCMViewPaneContainer } from 'vs/workbench/contrib/scm/browser/scmViewPaneContainer';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ModesRegistry } from 'vs/editor/common/languages/modesRegistry';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\nimport { SCMViewPane } from 'vs/workbench/contrib/scm/browser/scmViewPane';\nimport { SCMViewService } from 'vs/workbench/contrib/scm/browser/scmViewService';\nimport { SCMRepositoriesViewPane } from 'vs/workbench/contrib/scm/browser/scmRepositoriesViewPane';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { Context as SuggestContext } from 'vs/editor/contrib/suggest/browser/suggest';\nimport { MANAGE_TRUST_COMMAND_ID, WorkspaceTrustContext } from 'vs/workbench/contrib/workspace/common/workspace';\nimport { IQuickDiffService } from 'vs/workbench/contrib/scm/common/quickDiff';\nimport { QuickDiffService } from 'vs/workbench/contrib/scm/common/quickDiffService';\nimport { SCMSyncViewPane } from 'vs/workbench/contrib/scm/browser/scmSyncViewPane';\n\nModesRegistry.registerLanguage({\n\tid: 'scminput',\n\textensions: [],\n\taliases: [], // hide from language selector\n\tmimetypes: ['text/x-scm-input']\n});\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(DirtyDiffWorkbenchController, LifecyclePhase.Restored);\n\nconst sourceControlViewIcon = registerIcon('source-control-view-icon', Codicon.sourceControl, localize('sourceControlViewIcon', 'View icon of the Source Control view.'));\n\nconst viewContainer = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: VIEWLET_ID,\n\ttitle: { value: localize('source control', \"Source Control\"), original: 'Source Control' },\n\tctorDescriptor: new SyncDescriptor(SCMViewPaneContainer),\n\tstorageId: 'workbench.scm.views.state',\n\ticon: sourceControlViewIcon,\n\talwaysUseContainerInfo: true,\n\torder: 2,\n\thideIfEmpty: true,\n}, ViewContainerLocation.Sidebar, { doNotRegisterOpenCommand: true });\n\nconst viewsRegistry = Registry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry);\n\nviewsRegistry.registerViewWelcomeContent(VIEW_PANE_ID, {\n\tcontent: localize('no open repo', \"No source control providers registered.\"),\n\twhen: 'default'\n});\n\nviewsRegistry.registerViewWelcomeContent(VIEW_PANE_ID, {\n\tcontent: localize('no open repo in an untrusted workspace', \"None of the registered source control providers work in Restricted Mode.\"),\n\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('scm.providerCount', 0), WorkspaceTrustContext.IsEnabled, WorkspaceTrustContext.IsTrusted.toNegated())\n});\n\nviewsRegistry.registerViewWelcomeContent(VIEW_PANE_ID, {\n\tcontent: `[${localize('manageWorkspaceTrustAction', \"Manage Workspace Trust\")}](command:${MANAGE_TRUST_COMMAND_ID})`,\n\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('scm.providerCount', 0), WorkspaceTrustContext.IsEnabled, WorkspaceTrustContext.IsTrusted.toNegated())\n});\n\nviewsRegistry.registerViews([{\n\tid: VIEW_PANE_ID,\n\tname: localize('source control', \"Source Control\"),\n\tctorDescriptor: new SyncDescriptor(SCMViewPane),\n\tcanToggleVisibility: true,\n\tcanMoveView: true,\n\tweight: 60,\n\torder: -999,\n\tcontainerIcon: sourceControlViewIcon,\n\topenCommandActionDescriptor: {\n\t\tid: viewContainer.id,\n\t\tmnemonicTitle: localize({ key: 'miViewSCM', comment: ['&& denotes a mnemonic'] }, \"Source &&Control\"),\n\t\tkeybindings: {\n\t\t\tprimary: 0,\n\t\t\twin: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG },\n\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG },\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KeyG },\n\t\t},\n\t\torder: 2,\n\t}\n}], viewContainer);\n\nviewsRegistry.registerViews([{\n\tid: REPOSITORIES_VIEW_PANE_ID,\n\tname: localize('source control repositories', \"Source Control Repositories\"),\n\tctorDescriptor: new SyncDescriptor(SCMRepositoriesViewPane),\n\tcanToggleVisibility: true,\n\thideByDefault: true,\n\tcanMoveView: true,\n\tweight: 20,\n\torder: -1000,\n\twhen: ContextKeyExpr.and(ContextKeyExpr.has('scm.providerCount'), ContextKeyExpr.notEquals('scm.providerCount', 0)),\n\t// readonly when = ContextKeyExpr.or(ContextKeyExpr.equals('config.scm.alwaysShowProviders', true), ContextKeyExpr.and(ContextKeyExpr.notEquals('scm.providerCount', 0), ContextKeyExpr.notEquals('scm.providerCount', 1)));\n\tcontainerIcon: sourceControlViewIcon\n}], viewContainer);\n\nviewsRegistry.registerViews([{\n\tid: SYNC_VIEW_PANE_ID,\n\tname: localize('source control sync', \"Source Control Sync\"),\n\tctorDescriptor: new SyncDescriptor(SCMSyncViewPane),\n\tcanToggleVisibility: true,\n\tcanMoveView: true,\n\tweight: 20,\n\torder: -998,\n\twhen: ContextKeyExpr.equals('config.scm.experimental.showSyncView', true),\n}], viewContainer);\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(SCMActiveResourceContextKeyController, LifecyclePhase.Restored);\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(SCMStatusController, LifecyclePhase.Restored);\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'scm',\n\torder: 5,\n\ttitle: localize('scmConfigurationTitle', \"Source Control\"),\n\ttype: 'object',\n\tscope: ConfigurationScope.RESOURCE,\n\tproperties: {\n\t\t'scm.diffDecorations': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['all', 'gutter', 'overview', 'minimap', 'none'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.diffDecorations.all', \"Show the diff decorations in all available locations.\"),\n\t\t\t\tlocalize('scm.diffDecorations.gutter', \"Show the diff decorations only in the editor gutter.\"),\n\t\t\t\tlocalize('scm.diffDecorations.overviewRuler', \"Show the diff decorations only in the overview ruler.\"),\n\t\t\t\tlocalize('scm.diffDecorations.minimap', \"Show the diff decorations only in the minimap.\"),\n\t\t\t\tlocalize('scm.diffDecorations.none', \"Do not show the diff decorations.\")\n\t\t\t],\n\t\t\tdefault: 'all',\n\t\t\tdescription: localize('diffDecorations', \"Controls diff decorations in the editor.\")\n\t\t},\n\t\t'scm.diffDecorationsGutterWidth': {\n\t\t\ttype: 'number',\n\t\t\tenum: [1, 2, 3, 4, 5],\n\t\t\tdefault: 3,\n\t\t\tdescription: localize('diffGutterWidth', \"Controls the width(px) of diff decorations in gutter (added & modified).\")\n\t\t},\n\t\t'scm.diffDecorationsGutterVisibility': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['always', 'hover'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.diffDecorationsGutterVisibility.always', \"Show the diff decorator in the gutter at all times.\"),\n\t\t\t\tlocalize('scm.diffDecorationsGutterVisibility.hover', \"Show the diff decorator in the gutter only on hover.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.diffDecorationsGutterVisibility', \"Controls the visibility of the Source Control diff decorator in the gutter.\"),\n\t\t\tdefault: 'always'\n\t\t},\n\t\t'scm.diffDecorationsGutterAction': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['diff', 'none'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.diffDecorationsGutterAction.diff', \"Show the inline diff Peek view on click.\"),\n\t\t\t\tlocalize('scm.diffDecorationsGutterAction.none', \"Do nothing.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.diffDecorationsGutterAction', \"Controls the behavior of Source Control diff gutter decorations.\"),\n\t\t\tdefault: 'diff'\n\t\t},\n\t\t'scm.diffDecorationsGutterPattern': {\n\t\t\ttype: 'object',\n\t\t\tdescription: localize('diffGutterPattern', \"Controls whether a pattern is used for the diff decorations in gutter.\"),\n\t\t\tadditionalProperties: false,\n\t\t\tproperties: {\n\t\t\t\t'added': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: localize('diffGutterPatternAdded', \"Use pattern for the diff decorations in gutter for added lines.\"),\n\t\t\t\t},\n\t\t\t\t'modified': {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: localize('diffGutterPatternModifed', \"Use pattern for the diff decorations in gutter for modified lines.\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: {\n\t\t\t\t'added': false,\n\t\t\t\t'modified': true\n\t\t\t}\n\t\t},\n\t\t'scm.diffDecorationsIgnoreTrimWhitespace': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['true', 'false', 'inherit'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.diffDecorationsIgnoreTrimWhitespace.true', \"Ignore leading and trailing whitespace.\"),\n\t\t\t\tlocalize('scm.diffDecorationsIgnoreTrimWhitespace.false', \"Do not ignore leading and trailing whitespace.\"),\n\t\t\t\tlocalize('scm.diffDecorationsIgnoreTrimWhitespace.inherit', \"Inherit from `diffEditor.ignoreTrimWhitespace`.\")\n\t\t\t],\n\t\t\tdescription: localize('diffDecorationsIgnoreTrimWhitespace', \"Controls whether leading and trailing whitespace is ignored in Source Control diff gutter decorations.\"),\n\t\t\tdefault: 'false'\n\t\t},\n\t\t'scm.alwaysShowActions': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: localize('alwaysShowActions', \"Controls whether inline actions are always visible in the Source Control view.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'scm.countBadge': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['all', 'focused', 'off'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.countBadge.all', \"Show the sum of all Source Control Provider count badges.\"),\n\t\t\t\tlocalize('scm.countBadge.focused', \"Show the count badge of the focused Source Control Provider.\"),\n\t\t\t\tlocalize('scm.countBadge.off', \"Disable the Source Control count badge.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.countBadge', \"Controls the count badge on the Source Control icon on the Activity Bar.\"),\n\t\t\tdefault: 'all'\n\t\t},\n\t\t'scm.providerCountBadge': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['hidden', 'auto', 'visible'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.providerCountBadge.hidden', \"Hide Source Control Provider count badges.\"),\n\t\t\t\tlocalize('scm.providerCountBadge.auto', \"Only show count badge for Source Control Provider when non-zero.\"),\n\t\t\t\tlocalize('scm.providerCountBadge.visible', \"Show Source Control Provider count badges.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.providerCountBadge', \"Controls the count badges on Source Control Provider headers. These headers only appear when there is more than one provider.\"),\n\t\t\tdefault: 'hidden'\n\t\t},\n\t\t'scm.defaultViewMode': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['tree', 'list'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.defaultViewMode.tree', \"Show the repository changes as a tree.\"),\n\t\t\t\tlocalize('scm.defaultViewMode.list', \"Show the repository changes as a list.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.defaultViewMode', \"Controls the default Source Control repository view mode.\"),\n\t\t\tdefault: 'list'\n\t\t},\n\t\t'scm.defaultViewSortKey': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['name', 'path', 'status'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.defaultViewSortKey.name', \"Sort the repository changes by file name.\"),\n\t\t\t\tlocalize('scm.defaultViewSortKey.path', \"Sort the repository changes by path.\"),\n\t\t\t\tlocalize('scm.defaultViewSortKey.status', \"Sort the repository changes by Source Control status.\")\n\t\t\t],\n\t\t\tdescription: localize('scm.defaultViewSortKey', \"Controls the default Source Control repository changes sort order when viewed as a list.\"),\n\t\t\tdefault: 'path'\n\t\t},\n\t\t'scm.autoReveal': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: localize('autoReveal', \"Controls whether the Source Control view should automatically reveal and select files when opening them.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'scm.inputFontFamily': {\n\t\t\ttype: 'string',\n\t\t\tmarkdownDescription: localize('inputFontFamily', \"Controls the font for the input message. Use `default` for the workbench user interface font family, `editor` for the `#editor.fontFamily#`'s value, or a custom font family.\"),\n\t\t\tdefault: 'default'\n\t\t},\n\t\t'scm.inputFontSize': {\n\t\t\ttype: 'number',\n\t\t\tmarkdownDescription: localize('inputFontSize', \"Controls the font size for the input message in pixels.\"),\n\t\t\tdefault: 13\n\t\t},\n\t\t'scm.alwaysShowRepositories': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: localize('alwaysShowRepository', \"Controls whether repositories should always be visible in the Source Control view.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'scm.repositories.sortOrder': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['discovery time', 'name', 'path'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('scm.repositoriesSortOrder.discoveryTime', \"Repositories in the Source Control Repositories view are sorted by discovery time. Repositories in the Source Control view are sorted in the order that they were selected.\"),\n\t\t\t\tlocalize('scm.repositoriesSortOrder.name', \"Repositories in the Source Control Repositories and Source Control views are sorted by repository name.\"),\n\t\t\t\tlocalize('scm.repositoriesSortOrder.path', \"Repositories in the Source Control Repositories and Source Control views are sorted by repository path.\")\n\t\t\t],\n\t\t\tdescription: localize('repositoriesSortOrder', \"Controls the sort order of the repositories in the source control repositories view.\"),\n\t\t\tdefault: 'discovery time'\n\t\t},\n\t\t'scm.repositories.visible': {\n\t\t\ttype: 'number',\n\t\t\tdescription: localize('providersVisible', \"Controls how many repositories are visible in the Source Control Repositories section. Set to 0, to be able to manually resize the view.\"),\n\t\t\tdefault: 10\n\t\t},\n\t\t'scm.showActionButton': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: localize('showActionButton', \"Controls whether an action button can be shown in the Source Control view.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'scm.experimental.showSyncView': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: localize('showSyncView', \"Controls whether the Source Control Sync view is shown.\"),\n\t\t\tdefault: false\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'scm.acceptInput',\n\tdescription: { description: localize('scm accept', \"Source Control: Accept Input\"), args: [] },\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.has('scmRepository'),\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\thandler: accessor => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst context = contextKeyService.getContext(document.activeElement);\n\t\tconst repositoryId = context.getValue<string | undefined>('scmRepository');\n\n\t\tif (!repositoryId) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst scmService = accessor.get(ISCMService);\n\t\tconst repository = scmService.getRepository(repositoryId);\n\n\t\tif (!repository?.provider.acceptInputCommand) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst id = repository.provider.acceptInputCommand.id;\n\t\tconst args = repository.provider.acceptInputCommand.arguments;\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\treturn commandService.executeCommand(id, ...(args || []));\n\t}\n});\n\nconst viewNextCommitCommand = {\n\tdescription: { description: localize('scm view next commit', \"Source Control: View Next Commit\"), args: [] },\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst scmService = accessor.get(ISCMService);\n\t\tconst context = contextKeyService.getContext(document.activeElement);\n\t\tconst repositoryId = context.getValue<string | undefined>('scmRepository');\n\t\tconst repository = repositoryId ? scmService.getRepository(repositoryId) : undefined;\n\t\trepository?.input.showNextHistoryValue();\n\t}\n};\n\nconst viewPreviousCommitCommand = {\n\tdescription: { description: localize('scm view previous commit', \"Source Control: View Previous Commit\"), args: [] },\n\tweight: KeybindingWeight.WorkbenchContrib,\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst scmService = accessor.get(ISCMService);\n\t\tconst context = contextKeyService.getContext(document.activeElement);\n\t\tconst repositoryId = context.getValue<string | undefined>('scmRepository');\n\t\tconst repository = repositoryId ? scmService.getRepository(repositoryId) : undefined;\n\t\trepository?.input.showPreviousHistoryValue();\n\t}\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewNextCommitCommand,\n\tid: 'scm.viewNextCommit',\n\twhen: ContextKeyExpr.and(ContextKeyExpr.has('scmRepository'), ContextKeyExpr.has('scmInputIsInLastPosition'), SuggestContext.Visible.toNegated()),\n\tprimary: KeyCode.DownArrow\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewPreviousCommitCommand,\n\tid: 'scm.viewPreviousCommit',\n\twhen: ContextKeyExpr.and(ContextKeyExpr.has('scmRepository'), ContextKeyExpr.has('scmInputIsInFirstPosition'), SuggestContext.Visible.toNegated()),\n\tprimary: KeyCode.UpArrow\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewNextCommitCommand,\n\tid: 'scm.forceViewNextCommit',\n\twhen: ContextKeyExpr.has('scmRepository'),\n\tprimary: KeyMod.Alt | KeyCode.DownArrow\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t...viewPreviousCommitCommand,\n\tid: 'scm.forceViewPreviousCommit',\n\twhen: ContextKeyExpr.has('scmRepository'),\n\tprimary: KeyMod.Alt | KeyCode.UpArrow\n});\n\nCommandsRegistry.registerCommand('scm.openInIntegratedTerminal', async (accessor, provider: ISCMProvider) => {\n\tif (!provider || !provider.rootUri) {\n\t\treturn;\n\t}\n\n\tconst commandService = accessor.get(ICommandService);\n\tawait commandService.executeCommand('openInIntegratedTerminal', provider.rootUri);\n});\n\nCommandsRegistry.registerCommand('scm.openInTerminal', async (accessor, provider: ISCMProvider) => {\n\tif (!provider || !provider.rootUri) {\n\t\treturn;\n\t}\n\n\tconst commandService = accessor.get(ICommandService);\n\tawait commandService.executeCommand('openInTerminal', provider.rootUri);\n});\n\nMenuRegistry.appendMenuItem(MenuId.SCMSourceControl, {\n\tgroup: '100_end',\n\tcommand: {\n\t\tid: 'scm.openInTerminal',\n\t\ttitle: localize('open in external terminal', \"Open in External Terminal\")\n\t},\n\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('scmProviderHasRootUri', true), ContextKeyExpr.or(ContextKeyExpr.equals('config.terminal.sourceControlRepositoriesKind', 'external'), ContextKeyExpr.equals('config.terminal.sourceControlRepositoriesKind', 'both')))\n});\n\nMenuRegistry.appendMenuItem(MenuId.SCMSourceControl, {\n\tgroup: '100_end',\n\tcommand: {\n\t\tid: 'scm.openInIntegratedTerminal',\n\t\ttitle: localize('open in integrated terminal', \"Open in Integrated Terminal\")\n\t},\n\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('scmProviderHasRootUri', true), ContextKeyExpr.or(ContextKeyExpr.equals('config.terminal.sourceControlRepositoriesKind', 'integrated'), ContextKeyExpr.equals('config.terminal.sourceControlRepositoriesKind', 'both')))\n});\n\nregisterSingleton(ISCMService, SCMService, InstantiationType.Delayed);\nregisterSingleton(ISCMViewService, SCMViewService, InstantiationType.Delayed);\nregisterSingleton(IQuickDiffService, QuickDiffService, InstantiationType.Delayed);\n"]}