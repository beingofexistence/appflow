{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/customEditor/browser/customEditorInputFactory.ts"],"names":[],"mappings":"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","file":"customEditorInputFactory.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { CustomEditorInput } from 'vs/workbench/contrib/customEditor/browser/customEditorInput';\nimport { ICustomEditorService } from 'vs/workbench/contrib/customEditor/common/customEditor';\nimport { NotebookEditorInput } from 'vs/workbench/contrib/notebook/common/notebookEditorInput';\nimport { IWebviewService, WebviewContentOptions, WebviewContentPurpose, WebviewExtensionDescription, WebviewOptions } from 'vs/workbench/contrib/webview/browser/webview';\nimport { DeserializedWebview, restoreWebviewContentOptions, restoreWebviewOptions, reviveWebviewExtensionDescription, SerializedWebview, SerializedWebviewOptions, WebviewEditorInputSerializer } from 'vs/workbench/contrib/webviewPanel/browser/webviewEditorInputSerializer';\nimport { IWebviewWorkbenchService } from 'vs/workbench/contrib/webviewPanel/browser/webviewWorkbenchService';\nimport { IWorkingCopyBackupMeta, IWorkingCopyIdentifier } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { IWorkingCopyBackupService } from 'vs/workbench/services/workingCopy/common/workingCopyBackup';\nimport { IWorkingCopyEditorHandler, IWorkingCopyEditorService } from 'vs/workbench/services/workingCopy/common/workingCopyEditorService';\n\nexport interface CustomDocumentBackupData extends IWorkingCopyBackupMeta {\n\treadonly viewType: string;\n\treadonly editorResource: UriComponents;\n\tbackupId: string;\n\n\treadonly extension: undefined | {\n\t\treadonly location: UriComponents;\n\t\treadonly id: string;\n\t};\n\n\treadonly webview: {\n\t\treadonly origin: string | undefined;\n\t\treadonly options: SerializedWebviewOptions;\n\t\treadonly state: any;\n\t};\n}\n\ninterface SerializedCustomEditor extends SerializedWebview {\n\treadonly editorResource: UriComponents;\n\treadonly dirty: boolean;\n\treadonly backupId?: string;\n}\n\ninterface DeserializedCustomEditor extends DeserializedWebview {\n\treadonly editorResource: URI;\n\treadonly dirty: boolean;\n\treadonly backupId?: string;\n}\n\nexport class CustomEditorInputSerializer extends WebviewEditorInputSerializer {\n\n\tpublic static override readonly ID = CustomEditorInput.typeId;\n\n\tpublic constructor(\n\t\t@IWebviewWorkbenchService webviewWorkbenchService: IWebviewWorkbenchService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWebviewService private readonly _webviewService: IWebviewService,\n\t) {\n\t\tsuper(webviewWorkbenchService);\n\t}\n\n\tpublic override serialize(input: CustomEditorInput): string | undefined {\n\t\tconst dirty = input.isDirty();\n\t\tconst data: SerializedCustomEditor = {\n\t\t\t...this.toJson(input),\n\t\t\teditorResource: input.resource.toJSON(),\n\t\t\tdirty,\n\t\t\tbackupId: dirty ? input.backupId : undefined,\n\t\t};\n\n\t\ttry {\n\t\t\treturn JSON.stringify(data);\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprotected override fromJson(data: SerializedCustomEditor): DeserializedCustomEditor {\n\t\treturn {\n\t\t\t...super.fromJson(data),\n\t\t\teditorResource: URI.from(data.editorResource),\n\t\t\tdirty: data.dirty,\n\t\t};\n\t}\n\n\tpublic override deserialize(\n\t\t_instantiationService: IInstantiationService,\n\t\tserializedEditorInput: string\n\t): CustomEditorInput {\n\t\tconst data = this.fromJson(JSON.parse(serializedEditorInput));\n\n\t\tconst webview = reviveWebview(this._webviewService, data);\n\t\tconst customInput = this._instantiationService.createInstance(CustomEditorInput, { resource: data.editorResource, viewType: data.viewType }, webview, { startsDirty: data.dirty, backupId: data.backupId });\n\t\tif (typeof data.group === 'number') {\n\t\t\tcustomInput.updateGroup(data.group);\n\t\t}\n\t\treturn customInput;\n\t}\n}\n\nfunction reviveWebview(webviewService: IWebviewService, data: { origin: string | undefined; viewType: string; state: any; webviewOptions: WebviewOptions; contentOptions: WebviewContentOptions; extension?: WebviewExtensionDescription }) {\n\tconst webview = webviewService.createWebviewOverlay({\n\t\tprovidedViewType: data.viewType,\n\t\torigin: data.origin,\n\t\ttitle: undefined,\n\t\toptions: {\n\t\t\tpurpose: WebviewContentPurpose.CustomEditor,\n\t\t\tenableFindWidget: data.webviewOptions.enableFindWidget,\n\t\t\tretainContextWhenHidden: data.webviewOptions.retainContextWhenHidden,\n\t\t},\n\t\tcontentOptions: data.contentOptions,\n\t\textension: data.extension,\n\t});\n\twebview.state = data.state;\n\treturn webview;\n}\n\nexport class ComplexCustomWorkingCopyEditorHandler extends Disposable implements IWorkbenchContribution, IWorkingCopyEditorHandler {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWorkingCopyEditorService _workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IWorkingCopyBackupService private readonly _workingCopyBackupService: IWorkingCopyBackupService,\n\t\t@IWebviewService private readonly _webviewService: IWebviewService,\n\t\t@ICustomEditorService _customEditorService: ICustomEditorService // DO NOT REMOVE (needed on startup to register overrides properly)\n\t) {\n\t\tsuper();\n\n\t\tthis._register(_workingCopyEditorService.registerHandler(this));\n\t}\n\n\thandles(workingCopy: IWorkingCopyIdentifier): boolean {\n\t\treturn workingCopy.resource.scheme === Schemas.vscodeCustomEditor;\n\t}\n\n\tisOpen(workingCopy: IWorkingCopyIdentifier, editor: EditorInput): boolean {\n\t\tif (!this.handles(workingCopy)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (workingCopy.resource.authority === 'jupyter-notebook-ipynb' && editor instanceof NotebookEditorInput) {\n\t\t\ttry {\n\t\t\t\tconst data = JSON.parse(workingCopy.resource.query);\n\t\t\t\tconst workingCopyResource = URI.from(data);\n\t\t\t\treturn isEqual(workingCopyResource, editor.resource);\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (!(editor instanceof CustomEditorInput)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (workingCopy.resource.authority !== editor.viewType.replace(/[^a-z0-9\\-_]/gi, '-').toLowerCase()) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// The working copy stores the uri of the original resource as its query param\n\t\ttry {\n\t\t\tconst data = JSON.parse(workingCopy.resource.query);\n\t\t\tconst workingCopyResource = URI.from(data);\n\t\t\treturn isEqual(workingCopyResource, editor.resource);\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tasync createEditor(workingCopy: IWorkingCopyIdentifier): Promise<EditorInput> {\n\t\tconst backup = await this._workingCopyBackupService.resolve<CustomDocumentBackupData>(workingCopy);\n\t\tif (!backup?.meta) {\n\t\t\tthrow new Error(`No backup found for custom editor: ${workingCopy.resource}`);\n\t\t}\n\n\t\tconst backupData = backup.meta;\n\t\tconst extension = reviveWebviewExtensionDescription(backupData.extension?.id, backupData.extension?.location);\n\t\tconst webview = reviveWebview(this._webviewService, {\n\t\t\tviewType: backupData.viewType,\n\t\t\torigin: backupData.webview.origin,\n\t\t\twebviewOptions: restoreWebviewOptions(backupData.webview.options),\n\t\t\tcontentOptions: restoreWebviewContentOptions(backupData.webview.options),\n\t\t\tstate: backupData.webview.state,\n\t\t\textension,\n\t\t});\n\n\t\tconst editor = this._instantiationService.createInstance(CustomEditorInput, { resource: URI.revive(backupData.editorResource), viewType: backupData.viewType }, webview, { backupId: backupData.backupId });\n\t\teditor.updateGroup(0);\n\t\treturn editor;\n\t}\n}\n\n"]}