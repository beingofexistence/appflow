{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/customEditor/browser/customEditor.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAehG,IAAA,gBAAG,EAAe,mBAAI,EAAkB,oBAAI,oCAA2C,CAAC;IAExF,cAAG,CAAM,EAAE,CAAsB,YAAG,CAAc,UAAU,CAAC;SAC3D,kBAAkB,CAClB,YAAG,CAAkB,MAAM,CAC1B,oBAAI,EACJ,oBAAI,CAAU,EAAE,EAChB,gBAAgB,CAChB,EAAE;QACH,IAAI,iBAAG,CAAY,wBAAI,CAAc;KACrC,CAAC,CAAC;IAEJ,cAAG,CAAM,EAAE,CAAyB,YAAG,CAAc,aAAa,CAAC;SACjE,wBAAwB,CAAC,+BAAI,CAAwB,EAAE,EAAE,+BAAI,CAAwB,CAAC;IAExF,cAAG,CAAM,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC;SACzE,6BAA6B,CAAC,+BAAI,kCAA2D,CAAC","file":"customEditor.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { EditorPaneDescriptor, IEditorPaneRegistry } from 'vs/workbench/browser/editor';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { EditorExtensions, IEditorFactoryRegistry } from 'vs/workbench/common/editor';\nimport { ComplexCustomWorkingCopyEditorHandler as ComplexCustomWorkingCopyEditorHandler, CustomEditorInputSerializer } from 'vs/workbench/contrib/customEditor/browser/customEditorInputFactory';\nimport { ICustomEditorService } from 'vs/workbench/contrib/customEditor/common/customEditor';\nimport { WebviewEditor } from 'vs/workbench/contrib/webviewPanel/browser/webviewEditor';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { CustomEditorInput } from './customEditorInput';\nimport { CustomEditorService } from './customEditors';\n\nregisterSingleton(ICustomEditorService, CustomEditorService, InstantiationType.Delayed);\n\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane)\n\t.registerEditorPane(\n\t\tEditorPaneDescriptor.create(\n\t\t\tWebviewEditor,\n\t\t\tWebviewEditor.ID,\n\t\t\t'Webview Editor',\n\t\t), [\n\t\tnew SyncDescriptor(CustomEditorInput)\n\t]);\n\nRegistry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory)\n\t.registerEditorSerializer(CustomEditorInputSerializer.ID, CustomEditorInputSerializer);\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(ComplexCustomWorkingCopyEditorHandler, LifecyclePhase.Starting);\n"]}