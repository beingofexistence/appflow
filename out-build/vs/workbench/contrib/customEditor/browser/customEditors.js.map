{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/customEditor/browser/customEditors.ts"],"names":[],"mappings":"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","file":"customEditors.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/customEditor';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { extname, isEqual } from 'vs/base/common/resources';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { RedoCommand, UndoCommand } from 'vs/editor/browser/editorExtensions';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { FileOperation, IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { DEFAULT_EDITOR_ASSOCIATION, EditorExtensions, GroupIdentifier, IEditorFactoryRegistry, IResourceDiffEditorInput } from 'vs/workbench/common/editor';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { CONTEXT_ACTIVE_CUSTOM_EDITOR_ID, CONTEXT_FOCUSED_CUSTOM_EDITOR_IS_EDITABLE, CustomEditorCapabilities, CustomEditorInfo, CustomEditorInfoCollection, ICustomEditorService } from 'vs/workbench/contrib/customEditor/common/customEditor';\nimport { CustomEditorModelManager } from 'vs/workbench/contrib/customEditor/common/customEditorModelManager';\nimport { IEditorGroup, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorResolverService, IEditorType, RegisteredEditorPriority } from 'vs/workbench/services/editor/common/editorResolverService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ContributedCustomEditors } from '../common/contributedCustomEditors';\nimport { CustomEditorInput } from './customEditorInput';\n\nexport class CustomEditorService extends Disposable implements ICustomEditorService {\n\t_serviceBrand: any;\n\n\tprivate readonly _contributedEditors: ContributedCustomEditors;\n\tprivate _untitledCounter = 0;\n\tprivate readonly _editorResolverDisposables = this._register(new DisposableStore());\n\tprivate readonly _editorCapabilities = new Map<string, CustomEditorCapabilities>();\n\n\tprivate readonly _models = new CustomEditorModelManager();\n\n\tprivate readonly _activeCustomEditorId: IContextKey<string>;\n\tprivate readonly _focusedCustomEditorIsEditable: IContextKey<boolean>;\n\n\tprivate readonly _onDidChangeEditorTypes = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeEditorTypes: Event<void> = this._onDidChangeEditorTypes.event;\n\n\tprivate readonly _fileEditorFactory = Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).getFileEditorFactory();\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IEditorResolverService private readonly editorResolverService: IEditorResolverService,\n\t) {\n\t\tsuper();\n\n\t\tthis._activeCustomEditorId = CONTEXT_ACTIVE_CUSTOM_EDITOR_ID.bindTo(contextKeyService);\n\t\tthis._focusedCustomEditorIsEditable = CONTEXT_FOCUSED_CUSTOM_EDITOR_IS_EDITABLE.bindTo(contextKeyService);\n\n\t\tthis._contributedEditors = this._register(new ContributedCustomEditors(storageService));\n\t\t// Register the contribution points only emitting one change from the resolver\n\t\tthis.editorResolverService.bufferChangeEvents(this.registerContributionPoints.bind(this));\n\n\t\tthis._register(this._contributedEditors.onChange(() => {\n\t\t\t// Register the contribution points only emitting one change from the resolver\n\t\t\tthis.editorResolverService.bufferChangeEvents(this.registerContributionPoints.bind(this));\n\t\t\tthis.updateContexts();\n\t\t\tthis._onDidChangeEditorTypes.fire();\n\t\t}));\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.updateContexts()));\n\n\t\tthis._register(fileService.onDidRunOperation(e => {\n\t\t\tif (e.isOperation(FileOperation.MOVE)) {\n\t\t\t\tthis.handleMovedFileInOpenedFileEditors(e.resource, this.uriIdentityService.asCanonicalUri(e.target.resource));\n\t\t\t}\n\t\t}));\n\n\t\tconst PRIORITY = 105;\n\t\tthis._register(UndoCommand.addImplementation(PRIORITY, 'custom-editor', () => {\n\t\t\treturn this.withActiveCustomEditor(editor => editor.undo());\n\t\t}));\n\t\tthis._register(RedoCommand.addImplementation(PRIORITY, 'custom-editor', () => {\n\t\t\treturn this.withActiveCustomEditor(editor => editor.redo());\n\t\t}));\n\n\t\tthis.updateContexts();\n\t}\n\n\tgetEditorTypes(): IEditorType[] {\n\t\treturn [...this._contributedEditors];\n\t}\n\n\tprivate withActiveCustomEditor(f: (editor: CustomEditorInput) => void | Promise<void>): boolean | Promise<void> {\n\t\tconst activeEditor = this.editorService.activeEditor;\n\t\tif (activeEditor instanceof CustomEditorInput) {\n\t\t\tconst result = f(activeEditor);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate registerContributionPoints(): void {\n\t\t// Clear all previous contributions we know\n\t\tthis._editorResolverDisposables.clear();\n\n\t\tfor (const contributedEditor of this._contributedEditors) {\n\t\t\tfor (const globPattern of contributedEditor.selector) {\n\t\t\t\tif (!globPattern.filenamePattern) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthis._editorResolverDisposables.add(this.editorResolverService.registerEditor(\n\t\t\t\t\tglobPattern.filenamePattern,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: contributedEditor.id,\n\t\t\t\t\t\tlabel: contributedEditor.displayName,\n\t\t\t\t\t\tdetail: contributedEditor.providerDisplayName,\n\t\t\t\t\t\tpriority: contributedEditor.priority,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsinglePerResource: () => !this.getCustomEditorCapabilities(contributedEditor.id)?.supportsMultipleEditorsPerDocument ?? true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcreateEditorInput: ({ resource }, group) => {\n\t\t\t\t\t\t\treturn { editor: CustomEditorInput.create(this.instantiationService, resource, contributedEditor.id, group.id) };\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcreateUntitledEditorInput: ({ resource }, group) => {\n\t\t\t\t\t\t\treturn { editor: CustomEditorInput.create(this.instantiationService, resource ?? URI.from({ scheme: Schemas.untitled, authority: `Untitled-${this._untitledCounter++}` }), contributedEditor.id, group.id) };\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcreateDiffEditorInput: (diffEditorInput, group) => {\n\t\t\t\t\t\t\treturn { editor: this.createDiffEditorInput(diffEditorInput, contributedEditor.id, group) };\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createDiffEditorInput(\n\t\teditor: IResourceDiffEditorInput,\n\t\teditorID: string,\n\t\tgroup: IEditorGroup\n\t): DiffEditorInput {\n\t\tconst modifiedOverride = CustomEditorInput.create(this.instantiationService, assertIsDefined(editor.modified.resource), editorID, group.id, { customClasses: 'modified' });\n\t\tconst originalOverride = CustomEditorInput.create(this.instantiationService, assertIsDefined(editor.original.resource), editorID, group.id, { customClasses: 'original' });\n\t\treturn this.instantiationService.createInstance(DiffEditorInput, editor.label, editor.description, originalOverride, modifiedOverride, true);\n\t}\n\n\tpublic get models() { return this._models; }\n\n\tpublic getCustomEditor(viewType: string): CustomEditorInfo | undefined {\n\t\treturn this._contributedEditors.get(viewType);\n\t}\n\n\tpublic getContributedCustomEditors(resource: URI): CustomEditorInfoCollection {\n\t\treturn new CustomEditorInfoCollection(this._contributedEditors.getContributedEditors(resource));\n\t}\n\n\tpublic getUserConfiguredCustomEditors(resource: URI): CustomEditorInfoCollection {\n\t\tconst resourceAssocations = this.editorResolverService.getAssociationsForResource(resource);\n\t\treturn new CustomEditorInfoCollection(\n\t\t\tcoalesce(resourceAssocations\n\t\t\t\t.map(association => this._contributedEditors.get(association.viewType))));\n\t}\n\n\tpublic getAllCustomEditors(resource: URI): CustomEditorInfoCollection {\n\t\treturn new CustomEditorInfoCollection([\n\t\t\t...this.getUserConfiguredCustomEditors(resource).allEditors,\n\t\t\t...this.getContributedCustomEditors(resource).allEditors,\n\t\t]);\n\t}\n\n\tpublic registerCustomEditorCapabilities(viewType: string, options: CustomEditorCapabilities): IDisposable {\n\t\tif (this._editorCapabilities.has(viewType)) {\n\t\t\tthrow new Error(`Capabilities for ${viewType} already set`);\n\t\t}\n\t\tthis._editorCapabilities.set(viewType, options);\n\t\treturn toDisposable(() => {\n\t\t\tthis._editorCapabilities.delete(viewType);\n\t\t});\n\t}\n\n\tpublic getCustomEditorCapabilities(viewType: string): CustomEditorCapabilities | undefined {\n\t\treturn this._editorCapabilities.get(viewType);\n\t}\n\n\tprivate updateContexts() {\n\t\tconst activeEditorPane = this.editorService.activeEditorPane;\n\t\tconst resource = activeEditorPane?.input?.resource;\n\t\tif (!resource) {\n\t\t\tthis._activeCustomEditorId.reset();\n\t\t\tthis._focusedCustomEditorIsEditable.reset();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._activeCustomEditorId.set(activeEditorPane?.input instanceof CustomEditorInput ? activeEditorPane.input.viewType : '');\n\t\tthis._focusedCustomEditorIsEditable.set(activeEditorPane?.input instanceof CustomEditorInput);\n\t}\n\n\tprivate async handleMovedFileInOpenedFileEditors(oldResource: URI, newResource: URI): Promise<void> {\n\t\tif (extname(oldResource).toLowerCase() === extname(newResource).toLowerCase()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst possibleEditors = this.getAllCustomEditors(newResource);\n\n\t\t// See if we have any non-optional custom editor for this resource\n\t\tif (!possibleEditors.allEditors.some(editor => editor.priority !== RegisteredEditorPriority.option)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If so, check all editors to see if there are any file editors open for the new resource\n\t\tconst editorsToReplace = new Map<GroupIdentifier, EditorInput[]>();\n\t\tfor (const group of this.editorGroupService.groups) {\n\t\t\tfor (const editor of group.editors) {\n\t\t\t\tif (this._fileEditorFactory.isFileEditor(editor)\n\t\t\t\t\t&& !(editor instanceof CustomEditorInput)\n\t\t\t\t\t&& isEqual(editor.resource, newResource)\n\t\t\t\t) {\n\t\t\t\t\tlet entry = editorsToReplace.get(group.id);\n\t\t\t\t\tif (!entry) {\n\t\t\t\t\t\tentry = [];\n\t\t\t\t\t\teditorsToReplace.set(group.id, entry);\n\t\t\t\t\t}\n\t\t\t\t\tentry.push(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!editorsToReplace.size) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [group, entries] of editorsToReplace) {\n\t\t\tthis.editorService.replaceEditors(entries.map(editor => {\n\t\t\t\tlet replacement: EditorInput | IResourceEditorInput;\n\t\t\t\tif (possibleEditors.defaultEditor) {\n\t\t\t\t\tconst viewType = possibleEditors.defaultEditor.id;\n\t\t\t\t\treplacement = CustomEditorInput.create(this.instantiationService, newResource, viewType!, group);\n\t\t\t\t} else {\n\t\t\t\t\treplacement = { resource: newResource, options: { override: DEFAULT_EDITOR_ASSOCIATION.id } };\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\teditor,\n\t\t\t\t\treplacement,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tpreserveFocus: true,\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}), group);\n\t\t}\n\t}\n}\n"]}