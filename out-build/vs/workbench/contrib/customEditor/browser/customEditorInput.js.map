{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/customEditor/browser/customEditorInput.ts"],"names":[],"mappings":"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","file":"customEditorInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IReference } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename } from 'vs/base/common/path';\nimport { dirname, isEqual } from 'vs/base/common/resources';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IUndoRedoService } from 'vs/platform/undoRedo/common/undoRedo';\nimport { EditorInputCapabilities, GroupIdentifier, IMoveResult, IRevertOptions, ISaveOptions, IUntypedEditorInput, Verbosity } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { ICustomEditorModel, ICustomEditorService } from 'vs/workbench/contrib/customEditor/common/customEditor';\nimport { IOverlayWebview, IWebviewService } from 'vs/workbench/contrib/webview/browser/webview';\nimport { IWebviewWorkbenchService, LazilyResolvedWebviewEditorInput } from 'vs/workbench/contrib/webviewPanel/browser/webviewWorkbenchService';\nimport { IFilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { IUntitledTextEditorService } from 'vs/workbench/services/untitled/common/untitledTextEditorService';\n\ninterface CustomEditorInputInitInfo {\n\treadonly resource: URI;\n\treadonly viewType: string;\n}\n\nexport class CustomEditorInput extends LazilyResolvedWebviewEditorInput {\n\n\tstatic create(\n\t\tinstantiationService: IInstantiationService,\n\t\tresource: URI,\n\t\tviewType: string,\n\t\tgroup: GroupIdentifier | undefined,\n\t\toptions?: { readonly customClasses?: string; readonly oldResource?: URI },\n\t): EditorInput {\n\t\treturn instantiationService.invokeFunction(accessor => {\n\t\t\t// If it's an untitled file we must populate the untitledDocumentData\n\t\t\tconst untitledString = accessor.get(IUntitledTextEditorService).getValue(resource);\n\t\t\tconst untitledDocumentData = untitledString ? VSBuffer.fromString(untitledString) : undefined;\n\t\t\tconst webview = accessor.get(IWebviewService).createWebviewOverlay({\n\t\t\t\tprovidedViewType: viewType,\n\t\t\t\ttitle: undefined,\n\t\t\t\toptions: { customClasses: options?.customClasses },\n\t\t\t\tcontentOptions: {},\n\t\t\t\textension: undefined,\n\t\t\t});\n\t\t\tconst input = instantiationService.createInstance(CustomEditorInput, { resource, viewType }, webview, { untitledDocumentData: untitledDocumentData, oldResource: options?.oldResource });\n\t\t\tif (typeof group !== 'undefined') {\n\t\t\t\tinput.updateGroup(group);\n\t\t\t}\n\t\t\treturn input;\n\t\t});\n\t}\n\n\tpublic static override readonly typeId = 'workbench.editors.webviewEditor';\n\n\tprivate readonly _editorResource: URI;\n\tpublic readonly oldResource?: URI;\n\tprivate _defaultDirtyState: boolean | undefined;\n\n\tprivate readonly _backupId: string | undefined;\n\n\tprivate readonly _untitledDocumentData: VSBuffer | undefined;\n\n\toverride get resource() { return this._editorResource; }\n\n\tprivate _modelRef?: IReference<ICustomEditorModel>;\n\n\tconstructor(\n\t\tinit: CustomEditorInputInitInfo,\n\t\twebview: IOverlayWebview,\n\t\toptions: { startsDirty?: boolean; backupId?: string; untitledDocumentData?: VSBuffer; readonly oldResource?: URI },\n\t\t@IWebviewWorkbenchService webviewWorkbenchService: IWebviewWorkbenchService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@ICustomEditorService private readonly customEditorService: ICustomEditorService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IUndoRedoService private readonly undoRedoService: IUndoRedoService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IFilesConfigurationService private readonly filesConfigurationService: IFilesConfigurationService\n\t) {\n\t\tsuper({ providedId: init.viewType, viewType: init.viewType, name: '' }, webview, webviewWorkbenchService);\n\t\tthis._editorResource = init.resource;\n\t\tthis.oldResource = options.oldResource;\n\t\tthis._defaultDirtyState = options.startsDirty;\n\t\tthis._backupId = options.backupId;\n\t\tthis._untitledDocumentData = options.untitledDocumentData;\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Clear our labels on certain label related events\n\t\tthis._register(this.labelService.onDidChangeFormatters(e => this.onLabelEvent(e.scheme)));\n\t\tthis._register(this.fileService.onDidChangeFileSystemProviderRegistrations(e => this.onLabelEvent(e.scheme)));\n\t\tthis._register(this.fileService.onDidChangeFileSystemProviderCapabilities(e => this.onLabelEvent(e.scheme)));\n\t}\n\n\tprivate onLabelEvent(scheme: string): void {\n\t\tif (scheme === this.resource.scheme) {\n\t\t\tthis.updateLabel();\n\t\t}\n\t}\n\n\tprivate updateLabel(): void {\n\n\t\t// Clear any cached labels from before\n\t\tthis._shortDescription = undefined;\n\t\tthis._mediumDescription = undefined;\n\t\tthis._longDescription = undefined;\n\t\tthis._shortTitle = undefined;\n\t\tthis._mediumTitle = undefined;\n\t\tthis._longTitle = undefined;\n\n\t\t// Trigger recompute of label\n\t\tthis._onDidChangeLabel.fire();\n\t}\n\n\tpublic override get typeId(): string {\n\t\treturn CustomEditorInput.typeId;\n\t}\n\n\tpublic override get editorId() {\n\t\treturn this.viewType;\n\t}\n\n\tpublic override get capabilities(): EditorInputCapabilities {\n\t\tlet capabilities = EditorInputCapabilities.None;\n\n\t\tcapabilities |= EditorInputCapabilities.CanDropIntoEditor;\n\n\t\tif (!this.customEditorService.getCustomEditorCapabilities(this.viewType)?.supportsMultipleEditorsPerDocument) {\n\t\t\tcapabilities |= EditorInputCapabilities.Singleton;\n\t\t}\n\n\t\tif (this._modelRef) {\n\t\t\tif (this._modelRef.object.isReadonly()) {\n\t\t\t\tcapabilities |= EditorInputCapabilities.Readonly;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.filesConfigurationService.isReadonly(this.resource)) {\n\t\t\t\tcapabilities |= EditorInputCapabilities.Readonly;\n\t\t\t}\n\t\t}\n\n\t\tif (this.resource.scheme === Schemas.untitled) {\n\t\t\tcapabilities |= EditorInputCapabilities.Untitled;\n\t\t}\n\n\t\treturn capabilities;\n\t}\n\n\toverride getName(): string {\n\t\treturn basename(this.labelService.getUriLabel(this.resource));\n\t}\n\n\toverride getDescription(verbosity = Verbosity.MEDIUM): string | undefined {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.shortDescription;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.longDescription;\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\tdefault:\n\t\t\t\treturn this.mediumDescription;\n\t\t}\n\t}\n\n\tprivate _shortDescription: string | undefined = undefined;\n\tprivate get shortDescription(): string {\n\t\tif (typeof this._shortDescription !== 'string') {\n\t\t\tthis._shortDescription = this.labelService.getUriBasenameLabel(dirname(this.resource));\n\t\t}\n\n\t\treturn this._shortDescription;\n\t}\n\n\tprivate _mediumDescription: string | undefined = undefined;\n\tprivate get mediumDescription(): string {\n\t\tif (typeof this._mediumDescription !== 'string') {\n\t\t\tthis._mediumDescription = this.labelService.getUriLabel(dirname(this.resource), { relative: true });\n\t\t}\n\n\t\treturn this._mediumDescription;\n\t}\n\n\tprivate _longDescription: string | undefined = undefined;\n\tprivate get longDescription(): string {\n\t\tif (typeof this._longDescription !== 'string') {\n\t\t\tthis._longDescription = this.labelService.getUriLabel(dirname(this.resource));\n\t\t}\n\n\t\treturn this._longDescription;\n\t}\n\n\tprivate _shortTitle: string | undefined = undefined;\n\tprivate get shortTitle(): string {\n\t\tif (typeof this._shortTitle !== 'string') {\n\t\t\tthis._shortTitle = this.getName();\n\t\t}\n\n\t\treturn this._shortTitle;\n\t}\n\n\tprivate _mediumTitle: string | undefined = undefined;\n\tprivate get mediumTitle(): string {\n\t\tif (typeof this._mediumTitle !== 'string') {\n\t\t\tthis._mediumTitle = this.labelService.getUriLabel(this.resource, { relative: true });\n\t\t}\n\n\t\treturn this._mediumTitle;\n\t}\n\n\tprivate _longTitle: string | undefined = undefined;\n\tprivate get longTitle(): string {\n\t\tif (typeof this._longTitle !== 'string') {\n\t\t\tthis._longTitle = this.labelService.getUriLabel(this.resource);\n\t\t}\n\n\t\treturn this._longTitle;\n\t}\n\n\toverride getTitle(verbosity?: Verbosity): string {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.shortTitle;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.longTitle;\n\t\t\tdefault:\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\t\treturn this.mediumTitle;\n\t\t}\n\t}\n\n\tpublic override matches(other: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (super.matches(other)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn this === other || (other instanceof CustomEditorInput\n\t\t\t&& this.viewType === other.viewType\n\t\t\t&& isEqual(this.resource, other.resource));\n\t}\n\n\tpublic override copy(): EditorInput {\n\t\treturn CustomEditorInput.create(this.instantiationService, this.resource, this.viewType, this.group, this.webview.options);\n\t}\n\n\tpublic override isReadonly(): boolean | IMarkdownString {\n\t\tif (!this._modelRef) {\n\t\t\treturn this.filesConfigurationService.isReadonly(this.resource);\n\t\t}\n\t\treturn this._modelRef.object.isReadonly();\n\t}\n\n\tpublic override isDirty(): boolean {\n\t\tif (!this._modelRef) {\n\t\t\treturn !!this._defaultDirtyState;\n\t\t}\n\t\treturn this._modelRef.object.isDirty();\n\t}\n\n\tpublic override async save(groupId: GroupIdentifier, options?: ISaveOptions): Promise<EditorInput | IUntypedEditorInput | undefined> {\n\t\tif (!this._modelRef) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst target = await this._modelRef.object.saveCustomEditor(options);\n\t\tif (!target) {\n\t\t\treturn undefined; // save cancelled\n\t\t}\n\n\t\t// Different URIs == untyped input returned to allow resolver to possibly resolve to a different editor type\n\t\tif (!isEqual(target, this.resource)) {\n\t\t\treturn { resource: target };\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic override async saveAs(groupId: GroupIdentifier, options?: ISaveOptions): Promise<EditorInput | IUntypedEditorInput | undefined> {\n\t\tif (!this._modelRef) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst dialogPath = this._editorResource;\n\t\tconst target = await this.fileDialogService.pickFileToSave(dialogPath, options?.availableFileSystems);\n\t\tif (!target) {\n\t\t\treturn undefined; // save cancelled\n\t\t}\n\n\t\tif (!await this._modelRef.object.saveCustomEditorAs(this._editorResource, target, options)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn (await this.rename(groupId, target))?.editor;\n\t}\n\n\tpublic override async revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\tif (this._modelRef) {\n\t\t\treturn this._modelRef.object.revert(options);\n\t\t}\n\t\tthis._defaultDirtyState = false;\n\t\tthis._onDidChangeDirty.fire();\n\t}\n\n\tpublic override async resolve(): Promise<null> {\n\t\tawait super.resolve();\n\n\t\tif (this.isDisposed()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this._modelRef) {\n\t\t\tconst oldCapabilities = this.capabilities;\n\t\t\tthis._modelRef = this._register(assertIsDefined(await this.customEditorService.models.tryRetain(this.resource, this.viewType)));\n\t\t\tthis._register(this._modelRef.object.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n\t\t\tthis._register(this._modelRef.object.onDidChangeReadonly(() => this._onDidChangeCapabilities.fire()));\n\t\t\t// If we're loading untitled file data we should ensure it's dirty\n\t\t\tif (this._untitledDocumentData) {\n\t\t\t\tthis._defaultDirtyState = true;\n\t\t\t}\n\t\t\tif (this.isDirty()) {\n\t\t\t\tthis._onDidChangeDirty.fire();\n\t\t\t}\n\t\t\tif (this.capabilities !== oldCapabilities) {\n\t\t\t\tthis._onDidChangeCapabilities.fire();\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic override async rename(group: GroupIdentifier, newResource: URI): Promise<IMoveResult | undefined> {\n\t\t// We return an untyped editor input which can then be resolved in the editor service\n\t\treturn { editor: { resource: newResource } };\n\t}\n\n\tpublic undo(): void | Promise<void> {\n\t\tassertIsDefined(this._modelRef);\n\t\treturn this.undoRedoService.undo(this.resource);\n\t}\n\n\tpublic redo(): void | Promise<void> {\n\t\tassertIsDefined(this._modelRef);\n\t\treturn this.undoRedoService.redo(this.resource);\n\t}\n\n\tprivate _moveHandler?: (newResource: URI) => void;\n\n\tpublic onMove(handler: (newResource: URI) => void): void {\n\t\t// TODO: Move this to the service\n\t\tthis._moveHandler = handler;\n\t}\n\n\tprotected override transfer(other: CustomEditorInput): CustomEditorInput | undefined {\n\t\tif (!super.transfer(other)) {\n\t\t\treturn;\n\t\t}\n\n\t\tother._moveHandler = this._moveHandler;\n\t\tthis._moveHandler = undefined;\n\t\treturn other;\n\t}\n\n\tpublic get backupId(): string | undefined {\n\t\tif (this._modelRef) {\n\t\t\treturn this._modelRef.object.backupId;\n\t\t}\n\t\treturn this._backupId;\n\t}\n\n\tpublic get untitledDocumentData(): VSBuffer | undefined {\n\t\treturn this._untitledDocumentData;\n\t}\n\n\tpublic override toUntyped(): IResourceEditorInput {\n\t\treturn {\n\t\t\tresource: this.resource,\n\t\t\toptions: {\n\t\t\t\toverride: this.viewType\n\t\t\t}\n\t\t};\n\t}\n}\n"]}