{"version":3,"sources":["vs/workbench/contrib/welcomeGettingStarted/browser/featuredExtensionService.ts"],"names":[],"mappings":"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","file":"featuredExtensionService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IExtensionGalleryService, IExtensionManagementService, IGalleryExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IFeaturedExtension } from 'vs/base/common/product';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { localize } from 'vs/nls';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\n\ntype FeaturedExtensionStorageData = { title: string; description: string; imagePath: string; date: number };\n\nexport const IFeaturedExtensionsService = createDecorator<IFeaturedExtensionsService>('featuredExtensionsService');\n\nexport interface IFeaturedExtensionsService {\n\t_serviceBrand: undefined;\n\n\tgetExtensions(): Promise<IFeaturedExtension[]>;\n\ttitle: string;\n}\n\nconst enum FeaturedExtensionMetadataType {\n\tTitle,\n\tDescription,\n\tImagePath\n}\n\nexport class FeaturedExtensionsService extends Disposable implements IFeaturedExtensionsService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate ignoredExtensions: Set<string> = new Set<string>();\n\tprivate _isInitialized: boolean = false;\n\n\tprivate static readonly STORAGE_KEY = 'workbench.welcomePage.extensionMetadata';\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t) {\n\t\tsuper();\n\t\tthis.title = localize('gettingStarted.featuredTitle', 'Recommended');\n\t}\n\n\ttitle: string;\n\n\tasync getExtensions(): Promise<IFeaturedExtension[]> {\n\n\t\tawait this._init();\n\n\t\tconst featuredExtensions: IFeaturedExtension[] = [];\n\t\tfor (const extension of this.productService.featuredExtensions?.filter(e => !this.ignoredExtensions.has(e.id)) ?? []) {\n\t\t\tconst resolvedExtension = await this.resolveExtension(extension);\n\t\t\tif (resolvedExtension) {\n\t\t\t\tfeaturedExtensions.push(resolvedExtension);\n\t\t\t}\n\t\t}\n\n\t\treturn featuredExtensions;\n\t}\n\n\tprivate async _init(): Promise<void> {\n\n\t\tif (this._isInitialized) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst featuredExtensions = this.productService.featuredExtensions;\n\t\tif (!featuredExtensions) {\n\t\t\tthis._isInitialized = true;\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\tfor (const extension of featuredExtensions) {\n\t\t\tif (installed.some(e => ExtensionIdentifier.equals(e.identifier.id, extension.id))) {\n\t\t\t\tthis.ignoredExtensions.add(extension.id);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet galleryExtension: IGalleryExtension | undefined;\n\t\t\t\ttry {\n\t\t\t\t\tgalleryExtension = (await this.galleryService.getExtensions([{ id: extension.id }], CancellationToken.None))[0];\n\t\t\t\t} catch (err) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!await this.extensionManagementService.canInstall(galleryExtension)) {\n\t\t\t\t\tthis.ignoredExtensions.add(extension.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._isInitialized = true;\n\t}\n\n\tprivate async resolveExtension(productMetadata: IFeaturedExtension): Promise<IFeaturedExtension | undefined> {\n\n\t\tconst title = productMetadata.title ?? await this.getMetadata(productMetadata.id, FeaturedExtensionMetadataType.Title);\n\t\tconst description = productMetadata.description ?? await this.getMetadata(productMetadata.id, FeaturedExtensionMetadataType.Description);\n\t\tconst imagePath = productMetadata.imagePath ?? await this.getMetadata(productMetadata.id, FeaturedExtensionMetadataType.ImagePath);\n\n\t\tif (title && description && imagePath) {\n\t\t\treturn {\n\t\t\t\tid: productMetadata.id,\n\t\t\t\ttitle: title,\n\t\t\t\tdescription: description,\n\t\t\t\timagePath: imagePath,\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async getMetadata(extensionId: string, key: FeaturedExtensionMetadataType): Promise<string | undefined> {\n\n\t\tconst storageMetadata = this.getStorageData(extensionId);\n\t\tif (storageMetadata) {\n\t\t\tswitch (key) {\n\t\t\t\tcase FeaturedExtensionMetadataType.Title: {\n\t\t\t\t\treturn storageMetadata.title;\n\t\t\t\t}\n\t\t\t\tcase FeaturedExtensionMetadataType.Description: {\n\t\t\t\t\treturn storageMetadata.description;\n\t\t\t\t}\n\t\t\t\tcase FeaturedExtensionMetadataType.ImagePath: {\n\t\t\t\t\treturn storageMetadata.imagePath;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\treturn await this.getGalleryMetadata(extensionId, key);\n\t}\n\n\tprivate getStorageData(extensionId: string): FeaturedExtensionStorageData | undefined {\n\t\tconst metadata = this.storageService.get(FeaturedExtensionsService.STORAGE_KEY + '.' + extensionId, StorageScope.APPLICATION);\n\t\tif (metadata) {\n\t\t\tconst value = JSON.parse(metadata) as FeaturedExtensionStorageData;\n\t\t\tconst lastUpdateDate = new Date().getTime() - value.date;\n\t\t\tif (lastUpdateDate < 1000 * 60 * 60 * 24 * 7) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async getGalleryMetadata(extensionId: string, key: FeaturedExtensionMetadataType): Promise<string | undefined> {\n\n\t\tconst storageKey = FeaturedExtensionsService.STORAGE_KEY + '.' + extensionId;\n\t\tthis.storageService.remove(storageKey, StorageScope.APPLICATION);\n\t\tlet metadata: string | undefined;\n\n\t\tlet galleryExtension: IGalleryExtension | undefined;\n\t\ttry {\n\t\t\tgalleryExtension = (await this.galleryService.getExtensions([{ id: extensionId }], CancellationToken.None))[0];\n\t\t} catch (err) {\n\t\t}\n\n\t\tif (!galleryExtension) {\n\t\t\treturn metadata;\n\t\t}\n\n\t\tswitch (key) {\n\t\t\tcase FeaturedExtensionMetadataType.Title: {\n\t\t\t\tmetadata = galleryExtension.displayName;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase FeaturedExtensionMetadataType.Description: {\n\t\t\t\tmetadata = galleryExtension.description;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase FeaturedExtensionMetadataType.ImagePath: {\n\t\t\t\tmetadata = galleryExtension.assets.icon?.uri;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.storageService.store(storageKey, JSON.stringify({\n\t\t\ttitle: galleryExtension.displayName,\n\t\t\tdescription: galleryExtension.description,\n\t\t\timagePath: galleryExtension.assets.icon?.uri,\n\t\t\tdate: new Date().getTime()\n\t\t}), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\n\t\treturn metadata;\n\t}\n}\n\nregisterSingleton(IFeaturedExtensionsService, FeaturedExtensionsService, InstantiationType.Delayed);\n"]}