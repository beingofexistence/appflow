{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedDetailsRenderer.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAkBzF,IAAM,IAAI,GAAV,MAAM,IAAI;QAIhB,YACe,CAAiC,EACzB,CAAyC,EAC5C,CAAsC,EACvC,CAAqC;YAHxB,MAAC,GAAD,CAAC,CAAe;YACR,MAAC,GAAD,CAAC,CAAuB;YAC3B,MAAC,GAAD,CAAC,CAAoB;YACtB,MAAC,GAAD,CAAC,CAAmB;YAPhD,MAAC,GAAS,IAAI,SAAG,EAAkB,CAAC;YACpC,MAAC,GAAU,IAAI,SAAG,EAAkB,CAAC;QAOzC,CAAC;QAEL,KAAK,CAAC,cAAc,CAAC,IAAS,EAAE,IAAS;YACxC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,CAAC,CAAwB,IAAI,EAAE,IAAI,CAAC,CAAC;YAChE,MAAM,KAAK,GAAG,IAAA,UAAG,GAAW,CAAC;YAC7B,MAAM,QAAQ,GAAG,eAAG,CAAkB,WAAW,EAAE,CAAC;YAEpD,MAAM,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAA,mBAAI,EAAyB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAEnE,MAAM,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC,QAAQ,KAAK,OAAO,CAAC;YACrD,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,sBAAsB,CAAC;YAEhF,OAAO;;;;8EAIqE,SAAS,yCAAyC,KAAK,uBAAuB,KAAK;oBAC7I,KAAK;OAClB,+BAAI;OACJ,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAyEH,OAAO;;;oBAGM,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA0Cf,CAAC;QACV,CAAC;QAED,KAAK,CAAC,SAAS,CAAC,IAAS;YACxB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,CAAC;YACrD,MAAM,KAAK,GAAG,IAAA,UAAG,GAAW,CAAC;YAC7B,MAAM,QAAQ,GAAG,eAAG,CAAkB,WAAW,EAAE,CAAC;YAEpD,MAAM,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAA,mBAAI,EAAyB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACnE,OAAO;;;;8GAIqG,KAAK;oBAC/F,KAAK;OAClB,+BAAI;OACJ,GAAG;;;;;;;;;;;;;;MAcJ,OAAO;;UAEH,CAAC;QACV,CAAC;QAEO,KAAK,CAAC,CAAC,CAAmB,IAAS;YAC1C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,IAAI,CAAC,EAAE;gBAC7B,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,CAAC,CAAkB,IAAI,EAAE,KAAK,CAAC,CAAC;gBAC5D,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;aAClC;YACD,OAAO,IAAA,WAAG,EAAa,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACjD,CAAC;QAEO,KAAK,CAAC,CAAC,CAAwB,IAAS,EAAE,IAAS;YAC1D,IAAI,CAAC,IAAI,CAAC,CAAC,CAAO,GAAG,CAAC,IAAI,CAAC,EAAE;gBAC5B,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,CAAC,CAAkB,IAAI,CAAC,CAAC;gBACrD,MAAM,gBAAgB,GAAG,MAAM,IAAA,+BAAI,EAAmB,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,EAAiB,IAAI,CAAC,CAAC,EAAgB,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC9I,IAAI,CAAC,CAAC,CAAO,GAAG,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;aACzC;YACD,OAAO,IAAA,WAAG,EAAa,IAAI,CAAC,CAAC,CAAO,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAChD,CAAC;QAEO,KAAK,CAAC,CAAC,CAAkB,IAAS,EAAE,WAAW,GAAG,IAAI;YAC7D,IAAI;gBACH,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;gBACjD,IAAI,WAAW,IAAI,QAAQ,EAAE;oBAC5B,MAAM,QAAQ,GAAG,MAAM,IAAI,OAAO,CAAS,CAAC,CAAC,EAAE;wBAC9C,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,EAAE;4BAC7B,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;wBACtB,CAAC,CAAC,CAAC;oBACJ,CAAC,CAAC,CAAC;oBACH,OAAO,QAAQ,CAAC;iBAChB;aACD;YAAC,MAAM,GAAG;YAEX,IAAI;gBACH,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,aAAE,KAAW,CAAC,EAAE,CAAC,CAAC;gBAE7F,MAAM,iBAAiB,GAAG,aAAE,EAAQ,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;gBACxD,MAAM,wBAAwB,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,iBAAiB,KAAK,CAAC,EAAE,CAAC,CAAC;gBAEjH,MAAM,UAAU,GAAG,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;qBACtC,IAAI,CAAC,IAAI,CAAC;qBACV,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,+FAA+F;qBAC3H,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;gBAErB,MAAM,CAAC,mBAAmB,EAAE,8BAA8B,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;oBAC/E,UAAU,CAAC,aAAa,CAAC;oBACzB,UAAU,CAAC,wBAAwB,CAAC;iBACpC,CAAC,CAAC;gBAEH,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,CAAC,CAAW,QAAQ,CAC5C,mBAAmB;oBAClB,CAAC,CAAC,aAAa;oBACf,CAAC,CAAC,8BAA8B;wBAC/B,CAAC,CAAC,wBAAwB;wBAC1B,CAAC,CAAC,IAAI,CAAC,CAAC;gBAEX,OAAO,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;aAC9B;YAAC,OAAO,CAAC,EAAE;gBACX,IAAI,CAAC,CAAC,CAAmB,KAAK,CAAC,sCAAsC,GAAG,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC1F,OAAO,EAAE,CAAC;aACV;QACF,CAAC;KACD,CAAA;IAhPY,oBAAI;mBAAJ,IAAI;QAKd,WAAA,WAAG,CAAA;QACH,WAAA,kBAAG,CAAA;QACH,WAAA,gBAAG,CAAA;QACH,WAAA,cAAG,CAAA;OARO,IAAI,CAgPhB;IAED,MAAM,YAAY,GAAG,CAAC,GAAW,EAAE,IAAS,EAAE,EAAE;QAC/C,MAAM,IAAI,GAAG,IAAA,eAAG,EAAM,IAAI,EAAE,GAAG,CAAC,CAAC;QACjC,OAAO,IAAA,cAAI,EAAS,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAM,aAAa,GAAG,CAAC,OAAe,EAAE,IAAS,EAAU,EAAE,CAAC,OAAO;SACnE,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,GAAW,EAAE,EAAE;QAC7C,IAAI,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;YAAE,OAAO,QAAQ,GAAG,GAAG,CAAC;SAAE;QAC1D,OAAO,QAAQ,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC;IAC3C,CAAC,CAAC;SACD,OAAO,CAAC,2BAA2B,EAAE,CAAC,CAAC,EAAE,KAAa,EAAE,GAAW,EAAE,EAAE;QACvE,IAAI,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;YAAE,OAAO,KAAK,KAAK,KAAK,GAAG,GAAG,CAAC;SAAE;QACjE,OAAO,KAAK,KAAK,KAAK,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC;IAClD,CAAC,CAAC,CAAC","file":"gettingStartedDetailsRenderer.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { generateTokensCSSForColorMap } from 'vs/editor/common/languages/supports/tokenization';\nimport { TokenizationRegistry } from 'vs/editor/common/languages';\nimport { DEFAULT_MARKDOWN_STYLES, renderMarkdownDocument } from 'vs/workbench/contrib/markdown/browser/markdownDocumentRenderer';\nimport { URI } from 'vs/base/common/uri';\nimport { language } from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { asWebviewUri } from 'vs/workbench/contrib/webview/common/webview';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\n\n\nexport class GettingStartedDetailsRenderer {\n\tprivate mdCache = new ResourceMap<string>();\n\tprivate svgCache = new ResourceMap<string>();\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t) { }\n\n\tasync renderMarkdown(path: URI, base: URI): Promise<string> {\n\t\tconst content = await this.readAndCacheStepMarkdown(path, base);\n\t\tconst nonce = generateUuid();\n\t\tconst colorMap = TokenizationRegistry.getColorMap();\n\n\t\tconst css = colorMap ? generateTokensCSSForColorMap(colorMap) : '';\n\n\t\tconst inDev = document.location.protocol === 'http:';\n\t\tconst imgSrcCsp = inDev ? 'img-src https: data: http:' : 'img-src https: data:';\n\n\t\treturn `<!DOCTYPE html>\n\t\t<html>\n\t\t\t<head>\n\t\t\t\t<meta http-equiv=\"Content-type\" content=\"text/html;charset=UTF-8\">\n\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; ${imgSrcCsp}; media-src https:; script-src 'nonce-${nonce}'; style-src 'nonce-${nonce}';\">\n\t\t\t\t<style nonce=\"${nonce}\">\n\t\t\t\t\t${DEFAULT_MARKDOWN_STYLES}\n\t\t\t\t\t${css}\n\t\t\t\t\tbody > img {\n\t\t\t\t\t\talign-self: flex-start;\n\t\t\t\t\t}\n\t\t\t\t\tbody > img[centered] {\n\t\t\t\t\t\talign-self: center;\n\t\t\t\t\t}\n\t\t\t\t\tbody {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\tpadding: 0;\n\t\t\t\t\t\theight: inherit;\n\t\t\t\t\t}\n\t\t\t\t\t.theme-picker-row {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\tgap: 32px;\n\t\t\t\t\t}\n\t\t\t\t\tchecklist {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tgap: 32px;\n\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t}\n\t\t\t\t\tcheckbox {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\tmargin: 5px;\n\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t}\n\t\t\t\t\tcheckbox > img {\n\t\t\t\t\t\tmargin-bottom: 8px !important;\n\t\t\t\t\t}\n\t\t\t\t\tcheckbox.checked > img {\n\t\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\t}\n\t\t\t\t\tcheckbox.checked > img {\n\t\t\t\t\t\toutline: 2px solid var(--vscode-focusBorder);\n\t\t\t\t\t\toutline-offset: 4px;\n\t\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t\t}\n\t\t\t\t\t.theme-picker-link {\n\t\t\t\t\t\tmargin-top: 16px;\n\t\t\t\t\t\tcolor: var(--vscode-textLink-foreground);\n\t\t\t\t\t}\n\t\t\t\t\tblockquote > p:first-child {\n\t\t\t\t\t\tmargin-top: 0;\n\t\t\t\t\t}\n\t\t\t\t\tbody > * {\n\t\t\t\t\t\tmargin-block-end: 0.25em;\n\t\t\t\t\t\tmargin-block-start: 0.25em;\n\t\t\t\t\t}\n\t\t\t\t\tvertically-centered {\n\t\t\t\t\t\tpadding-top: 5px;\n\t\t\t\t\t\tpadding-bottom: 5px;\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t}\n\t\t\t\t\thtml {\n\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\tpadding-right: 32px;\n\t\t\t\t\t}\n\t\t\t\t\th1 {\n\t\t\t\t\t\tfont-size: 19.5px;\n\t\t\t\t\t}\n\t\t\t\t\th2 {\n\t\t\t\t\t\tfont-size: 18.5px;\n\t\t\t\t\t}\n\t\t\t\t</style>\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t<vertically-centered>\n\t\t\t\t\t${content}\n\t\t\t\t</vertically-centered>\n\t\t\t</body>\n\t\t\t<script nonce=\"${nonce}\">\n\t\t\t\tconst vscode = acquireVsCodeApi();\n\n\t\t\t\tdocument.querySelectorAll('[when-checked]').forEach(el => {\n\t\t\t\t\tel.addEventListener('click', () => {\n\t\t\t\t\t\tvscode.postMessage(el.getAttribute('when-checked'));\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tlet ongoingLayout = undefined;\n\t\t\t\tconst doLayout = () => {\n\t\t\t\t\tdocument.querySelectorAll('vertically-centered').forEach(element => {\n\t\t\t\t\t\telement.style.marginTop = Math.max((document.body.clientHeight - element.scrollHeight) * 3/10, 0) + 'px';\n\t\t\t\t\t});\n\t\t\t\t\tongoingLayout = undefined;\n\t\t\t\t};\n\n\t\t\t\tconst layout = () => {\n\t\t\t\t\tif (ongoingLayout) {\n\t\t\t\t\t\tclearTimeout(ongoingLayout);\n\t\t\t\t\t}\n\t\t\t\t\tongoingLayout = setTimeout(doLayout, 0);\n\t\t\t\t};\n\n\t\t\t\tlayout();\n\n\t\t\t\tdocument.querySelectorAll('img').forEach(element => {\n\t\t\t\t\telement.onload = layout;\n\t\t\t\t})\n\n\t\t\t\twindow.addEventListener('message', event => {\n\t\t\t\t\tif (event.data.layoutMeNow) {\n\t\t\t\t\t\tlayout();\n\t\t\t\t\t}\n\t\t\t\t\tif (event.data.enabledContextKeys) {\n\t\t\t\t\t\tdocument.querySelectorAll('.checked').forEach(element => element.classList.remove('checked'))\n\t\t\t\t\t\tfor (const key of event.data.enabledContextKeys) {\n\t\t\t\t\t\t\tdocument.querySelectorAll('[checked-on=\"' + key + '\"]').forEach(element => element.classList.add('checked'))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t</script>\n\t\t</html>`;\n\t}\n\n\tasync renderSVG(path: URI): Promise<string> {\n\t\tconst content = await this.readAndCacheSVGFile(path);\n\t\tconst nonce = generateUuid();\n\t\tconst colorMap = TokenizationRegistry.getColorMap();\n\n\t\tconst css = colorMap ? generateTokensCSSForColorMap(colorMap) : '';\n\t\treturn `<!DOCTYPE html>\n\t\t<html>\n\t\t\t<head>\n\t\t\t\t<meta http-equiv=\"Content-type\" content=\"text/html;charset=UTF-8\">\n\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; img-src data:; style-src 'nonce-${nonce}';\">\n\t\t\t\t<style nonce=\"${nonce}\">\n\t\t\t\t\t${DEFAULT_MARKDOWN_STYLES}\n\t\t\t\t\t${css}\n\t\t\t\t\tsvg {\n\t\t\t\t\t\tposition: fixed;\n\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\twidth: 80%;\n\t\t\t\t\t\tleft: 50%;\n\t\t\t\t\t\ttop: 50%;\n\t\t\t\t\t\tmax-width: 530px;\n\t\t\t\t\t\tmin-width: 350px;\n\t\t\t\t\t\ttransform: translate(-50%,-50%);\n\t\t\t\t\t}\n\t\t\t\t</style>\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t${content}\n\t\t\t</body>\n\t\t</html>`;\n\t}\n\n\tprivate async readAndCacheSVGFile(path: URI): Promise<string> {\n\t\tif (!this.svgCache.has(path)) {\n\t\t\tconst contents = await this.readContentsOfPath(path, false);\n\t\t\tthis.svgCache.set(path, contents);\n\t\t}\n\t\treturn assertIsDefined(this.svgCache.get(path));\n\t}\n\n\tprivate async readAndCacheStepMarkdown(path: URI, base: URI): Promise<string> {\n\t\tif (!this.mdCache.has(path)) {\n\t\t\tconst contents = await this.readContentsOfPath(path);\n\t\t\tconst markdownContents = await renderMarkdownDocument(transformUris(contents, base), this.extensionService, this.languageService, true, true);\n\t\t\tthis.mdCache.set(path, markdownContents);\n\t\t}\n\t\treturn assertIsDefined(this.mdCache.get(path));\n\t}\n\n\tprivate async readContentsOfPath(path: URI, useModuleId = true): Promise<string> {\n\t\ttry {\n\t\t\tconst moduleId = JSON.parse(path.query).moduleId;\n\t\t\tif (useModuleId && moduleId) {\n\t\t\t\tconst contents = await new Promise<string>(c => {\n\t\t\t\t\trequire([moduleId], content => {\n\t\t\t\t\t\tc(content.default());\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn contents;\n\t\t\t}\n\t\t} catch { }\n\n\t\ttry {\n\t\t\tconst localizedPath = path.with({ path: path.path.replace(/\\.md$/, `.nls.${language}.md`) });\n\n\t\t\tconst generalizedLocale = language?.replace(/-.*$/, '');\n\t\t\tconst generalizedLocalizedPath = path.with({ path: path.path.replace(/\\.md$/, `.nls.${generalizedLocale}.md`) });\n\n\t\t\tconst fileExists = (file: URI) => this.fileService\n\t\t\t\t.stat(file)\n\t\t\t\t.then((stat) => !!stat.size) // Double check the file actually has content for fileSystemProviders that fake `stat`. #131809\n\t\t\t\t.catch(() => false);\n\n\t\t\tconst [localizedFileExists, generalizedLocalizedFileExists] = await Promise.all([\n\t\t\t\tfileExists(localizedPath),\n\t\t\t\tfileExists(generalizedLocalizedPath),\n\t\t\t]);\n\n\t\t\tconst bytes = await this.fileService.readFile(\n\t\t\t\tlocalizedFileExists\n\t\t\t\t\t? localizedPath\n\t\t\t\t\t: generalizedLocalizedFileExists\n\t\t\t\t\t\t? generalizedLocalizedPath\n\t\t\t\t\t\t: path);\n\n\t\t\treturn bytes.value.toString();\n\t\t} catch (e) {\n\t\t\tthis.notificationService.error('Error reading markdown document at `' + path + '`: ' + e);\n\t\t\treturn '';\n\t\t}\n\t}\n}\n\nconst transformUri = (src: string, base: URI) => {\n\tconst path = joinPath(base, src);\n\treturn asWebviewUri(path).toString(true);\n};\n\nconst transformUris = (content: string, base: URI): string => content\n\t.replace(/src=\"([^\"]*)\"/g, (_, src: string) => {\n\t\tif (src.startsWith('https://')) { return `src=\"${src}\"`; }\n\t\treturn `src=\"${transformUri(src, base)}\"`;\n\t})\n\t.replace(/!\\[([^\\]]*)\\]\\(([^)]*)\\)/g, (_, title: string, src: string) => {\n\t\tif (src.startsWith('https://')) { return `![${title}](${src})`; }\n\t\treturn `![${title}](${transformUri(src, base)})`;\n\t});\n"]}