{"version":3,"sources":["vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUnF,QAAA,IAAI,GAAwB,uCAAuC,CAAC;IAMjF,MAAa,IAAoB,SAAQ,iBAAG;iBAE3B,OAAE,GAAG,YAAI,CAAsB;iBAC/B,aAAQ,GAAG,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,iBAAO,CAAC,WAAW,EAAE,SAAS,EAAE,6BAA6B,EAAE,CAAC,CAAC;QAE/G,IAAa,MAAM;YAClB,OAAO,IAAI,CAAgB,EAAE,CAAC;QAC/B,CAAC;QAED,IAAa,QAAQ;YACpB,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;QAEQ,SAAS;YACjB,OAAO;gBACN,QAAQ,EAAE,IAAI,CAAgB,QAAQ;gBACtC,OAAO,EAAE;oBACR,QAAQ,EAAE,IAAI,CAAgB,EAAE;oBAChC,MAAM,EAAE,KAAK;iBACb;aACD,CAAC;QACH,CAAC;QAED,IAAI,QAAQ;YACX,OAAO,IAAI,CAAgB,QAAQ,CAAC;QACrC,CAAC;QAEQ,OAAO,CAAC,KAAwC;YACxD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACzB,OAAO,IAAI,CAAC;aACZ;YAED,IAAI,KAAK,YAAY,IAAI,EAAiB;gBACzC,OAAO,KAAK,CAAC,gBAAgB,KAAK,IAAI,CAAC,gBAAgB,CAAC;aACxD;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAED,YACC,OAAoC;YAEpC,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,gBAAgB,CAAC;YACjD,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;YACzC,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC;QAC1D,CAAC;QAEQ,OAAO;YACf,OAAO,IAAA,cAAQ,EAAC,CAAY,EAAE,IAAS,CAAC,CAAC;QAC1C,CAAC;;IAjDF,oBAsDC","file":"gettingStartedInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/gettingStarted';\nimport { localize } from 'vs/nls';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\nimport { IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { IEditorOptions } from 'vs/platform/editor/common/editor';\n\nexport const gettingStartedInputTypeId = 'workbench.editors.gettingStartedInput';\n\nexport interface GettingStartedEditorOptions extends IEditorOptions {\n\tselectedCategory?: string; selectedStep?: string; showTelemetryNotice?: boolean;\n}\n\nexport class GettingStartedInput extends EditorInput {\n\n\tstatic readonly ID = gettingStartedInputTypeId;\n\tstatic readonly RESOURCE = URI.from({ scheme: Schemas.walkThrough, authority: 'vscode_getting_started_page' });\n\n\toverride get typeId(): string {\n\t\treturn GettingStartedInput.ID;\n\t}\n\n\toverride get editorId(): string | undefined {\n\t\treturn this.typeId;\n\t}\n\n\toverride toUntyped(): IUntypedEditorInput {\n\t\treturn {\n\t\t\tresource: GettingStartedInput.RESOURCE,\n\t\t\toptions: {\n\t\t\t\toverride: GettingStartedInput.ID,\n\t\t\t\tpinned: false\n\t\t\t}\n\t\t};\n\t}\n\n\tget resource(): URI | undefined {\n\t\treturn GettingStartedInput.RESOURCE;\n\t}\n\n\toverride matches(other: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (super.matches(other)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (other instanceof GettingStartedInput) {\n\t\t\treturn other.selectedCategory === this.selectedCategory;\n\t\t}\n\t\treturn false;\n\t}\n\n\tconstructor(\n\t\toptions: GettingStartedEditorOptions\n\t) {\n\t\tsuper();\n\t\tthis.selectedCategory = options.selectedCategory;\n\t\tthis.selectedStep = options.selectedStep;\n\t\tthis.showTelemetryNotice = !!options.showTelemetryNotice;\n\t}\n\n\toverride getName() {\n\t\treturn localize('getStarted', \"Welcome\");\n\t}\n\n\tselectedCategory: string | undefined;\n\tselectedStep: string | undefined;\n\tshowTelemetryNotice: boolean;\n}\n"]}