{"version":3,"sources":["vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAkCnF,QAAA,IAAI,GAAwB,IAAI,gBAAG,CAAoB,2BAA2B,EAAE,KAAK,CAAC,CAAC;IAE3F,QAAA,IAAI,GAAmB,IAAA,mBAAG,EAAmC,qBAAqB,CAAC,CAAC;IAEpF,QAAA,IAAI,GAA4B,wCAAwC,CAAC;IAEzE,QAAA,IAAI,GAAkC,2CAA2C,CAAC;IAG/F,MAAM,eAAe,GAAG,IAAA,cAAQ,EAAC,CAAS,EAAE,IAAU,CAAC,CAAC;IAgExD,2DAA2D;IAC3D,MAAM,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IACjC,MAAM,oBAAoB,GAAG,CAAC,GAAG,IAAI,CAAC;IAE/B,IAAM,IAAI,GAAV,MAAM,IAAoB,SAAQ,eAAG;QA6B3C,YACkB,CAAoC,EACpC,CAAoC,EAC9B,CAA0C,EACvC,CAA6C,EACnD,CAAoC,EACxB,CAAoD,EAC7D,CAA0C,EACpC,CAAgD,EAC/D,CAAiC,EAChC,CAAkC,EAC9B,CAAsC,EAC5B,CAA2C;YAExE,KAAK,EAAE,CAAC;YAb0B,MAAC,GAAD,CAAC,CAAkB;YACnB,MAAC,GAAD,CAAC,CAAkB;YACb,MAAC,GAAD,CAAC,CAAwB;YACtB,MAAC,GAAD,CAAC,CAA2B;YAClC,MAAC,GAAD,CAAC,CAAkB;YACP,MAAC,GAAD,CAAC,CAAkC;YAC5C,MAAC,GAAD,CAAC,CAAwB;YACnB,MAAC,GAAD,CAAC,CAA8B;YAC9C,MAAC,GAAD,CAAC,CAAe;YACf,MAAC,GAAD,CAAC,CAAgB;YACb,MAAC,GAAD,CAAC,CAAoB;YACX,MAAC,GAAD,CAAC,CAAyB;YAtCxD,MAAC,GAAsB,IAAI,WAAG,EAA4B,CAAC;YACnE,wBAAmB,GAAgC,IAAI,CAAC,CAAC,CAAoB,KAAK,CAAC;YAC3E,MAAC,GAAyB,IAAI,WAAG,EAAc,CAAC;YACxD,2BAAsB,GAAkB,IAAI,CAAC,CAAC,CAAuB,KAAK,CAAC;YACnE,MAAC,GAAyB,IAAI,WAAG,EAA4B,CAAC;YACtE,2BAAsB,GAAgC,IAAI,CAAC,CAAC,CAAuB,KAAK,CAAC;YACjF,MAAC,GAAoB,IAAI,WAAG,EAAgC,CAAC;YACrE,sBAAiB,GAAoC,IAAI,CAAC,CAAC,CAAkB,KAAK,CAAC;YAKpF,MAAC,GAAe,IAAI,GAAG,EAAU,CAAC;YAClC,MAAC,GAAqB,IAAI,GAAG,EAAuB,CAAC;YAErD,MAAC,GAA6B,IAAI,GAAG,EAAwB,CAAC;YAC9D,MAAC,GAAO,IAAI,GAAG,EAA4B,CAAC;YAE5C,MAAC,GAAyC,IAAI,GAAG,EAAU,CAAC;YAE5D,MAAC,GAA+B,IAAI,GAAG,EAAU,CAAC;YAClD,MAAC,GAAqC,IAAI,GAAG,EAAwB,CAAC;YACtE,MAAC,GAA2B,IAAI,GAAG,EAAU,CAAC;YAoBrD,IAAI,CAAC,CAAC,GAAU,IAAI,GAAG,CACtB,IAAI,CAAC,KAAK,CACT,IAAI,CAAC,CAAC,CAAc,GAAG,CAAC,YAAI,gCAAuD,IAAI,CAAC,CAAC,CAAC,CAAC;YAE7F,IAAI,CAAC,CAAC,GAAS,IAAI,aAAG,CAAK,uBAAuB,EAAE,IAAI,CAAC,CAAC,CAAc,CAAC;YACzE,IAAI,CAAC,CAAC,GAAc,IAAI,CAAC,CAAC,CAAO,UAAU,0DAA0C,CAAC;YAEtF,IAAI,CAAC,CAAC,EAA6B,CAAC;YAEpC,YAAI,CAAsB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,CAAC,CAAC,EAAqB,CAAC;QAE7B,CAAC;QAEO,CAAC;YAER,4BAAI,CAAS,OAAO,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE;gBAE9C,IAAI,CAAC,oBAAoB,CAAC;oBACzB,GAAG,QAAQ;oBACX,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE;oBAC3C,KAAK,EAAE,4BAAI,CAAS,MAAM,GAAG,KAAK;oBAClC,MAAM,EAAE,eAAe;oBACvB,IAAI,EAAE,gBAAG,CAAY,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,gBAAG,CAAY,IAAI,EAAE;oBACxE,KAAK,EACJ,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;wBAC1C,OAAO,CAAC;4BACP,GAAG,IAAI;4BACP,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,IAAI,EAAE;4BAC7C,WAAW,EAAE,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC;4BAC/C,QAAQ,EAAE,QAAQ,CAAC,EAAE;4BACrB,KAAK,EAAE,KAAK;4BACZ,IAAI,EAAE,gBAAG,CAAY,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,gBAAG,CAAY,IAAI,EAAE;4BACpE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,OAAO;gCACjC,CAAC,CAAC;oCACD,IAAI,EAAE,OAAO;oCACb,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;oCAC3B,IAAI,EAAE,sCAAsC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;iCAC7D;gCACD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK;oCAC1B,CAAC,CAAC;wCACD,IAAI,EAAE,KAAK;wCACX,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;wCAC3B,IAAI,EAAE,IAAA,YAAI,EAA8B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,0DAA0D,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;qCACpL;oCACD,CAAC,CAAC;wCACD,IAAI,EAAE,UAAU;wCAChB,IAAI,EAAE,IAAA,YAAI,EAA8B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,0DAA0D,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;wCACpL,IAAI,EAAE,aAAG,CAAQ,SAAS,CAAC,0DAA0D,CAAC;wCACtF,IAAI,EAAE,aAAG,CAAQ,SAAS,CAAC,0DAA0D,CAAC;qCACtF;yBACH,CAAC,CAAC;oBACJ,CAAC,CAAC;iBACH,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,mCAAI,CAAuB,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC/D,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAyC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC9E,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAA2C,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACnF,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,CAAC;YACR,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAc,mBAAmB,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;YAE3H,IAAI,CAAC,CAAC,CAA0B,YAAY,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC/D,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,sBAAsB,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;YACzG,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAA0B,sBAAsB,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;gBACtF,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,CAAC,CAAW,YAAY,EAAE,CAAC;gBAC3D,KAAK,MAAM,CAAC,IAAI,MAAM,EAAE;oBACvB,MAAM,eAAe,GAAG,CAAC,EAAE,OAAO,EAAE,CAAC,yBAAG,CAAwC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,yBAAG,CAAgC,CAAC;oBACrI,sFAAsF;oBACtF,2DAA2D;oBAC3D,IAAI,YAAY,IAAI,CAAC,eAAe,EAAE;wBACrC,IAAI,CAAC,CAAC,CAA0B,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;qBACnE;oBACD,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;iBAC5E;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAc,kBAAkB,CAAC,KAAK,CAAC,EAAE;gBAC7D,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAyB,EAAE;oBACtD,IAAI,CAAC,CAAC,CAAmC,OAAO,CAAC,UAAU,CAAC,EAAE;wBAC7D,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAc,mBAAmB,CAAC,UAAU,CAAC,EAAE;4BACzG,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC;yBAC5D;oBACF,CAAC,CAAC,CAAC;iBACH;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAY,yBAAyB,CAAC,CAAC,CAAC,EAAE;gBAC9D,IAAI,CAAC,CAAC,OAAO,EAAE;oBAAE,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;iBAAE;YAC3D,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAoB,wBAAwB,CAAC,CAAC,CAAC,EAAE;gBACrE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,mBAAmB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrF,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,IAAI,CAAC,CAAC,CAA6B,SAAS,EAAE,EAAE;gBAAE,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC;aAAE;YACrG,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAA6B,qBAAqB,CAAC,GAAG,EAAE;gBAC5E,IAAI,IAAI,CAAC,CAAC,CAA6B,SAAS,EAAE,EAAE;oBAAE,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC;iBAAE;YACtG,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAED,qBAAqB,CAAC,EAAU;YAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAA2B,GAAG,CAAC,EAAE,CAAC,CAAC;YAC7D,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;YACpC,IAAI,KAAK,IAAI,WAAW,EAAE;gBACzB,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACrG;YAED,IAAI,CAAC,CAAC,CAAc,KAAK,CAAC,YAAI,EAAiC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAQ,OAAO,EAAE,CAAC,CAAC,2DAA2C,CAAC;QACxJ,CAAC;QAEO,KAAK,CAAC,CAAC,CAAyC,SAAgC;YACvF,MAAM,6BAA6B,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;gBAClF,CAAC,CAAC,SAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;gBACvB,CAAC,CAAC,aAAG,CAAQ,YAAY,CAAC,IAAA,eAAG,EAAM,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC;YAExE,MAAM,0CAA0C,GAAG,CAAC,IAA4E,EAAwD,EAAE;gBACzL,MAAM,WAAW,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;oBAChE,CAAC,CAAC,SAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;oBACvB,CAAC,CAAC,aAAG,CAAQ,eAAe,CAAC,IAAA,eAAG,EAAM,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC;gBAE3E,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;oBAC7B,MAAM,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;oBACpC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;iBACpF;qBAAM;oBACN,OAAO;wBACN,MAAM,EAAE,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;wBAC5B,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC;wBAChD,KAAK,EAAE,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;wBAC9B,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;qBAC5B,CAAC;iBACF;YACF,CAAC,CAAC;YAEF,IAAI,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE,YAAY,EAAE,MAAM,CAAC,EAAE;gBACnD,OAAO;aACP;YAED,IAAI,aAAiC,CAAC;YACtC,IAAI,kBAAkB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,eAAe;YACpD,MAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,YAAY,EAAE,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE;gBACvF,MAAM,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,GAAG,WAAW,CAAC,EAAE,CAAC;gBAErE,MAAM,gBAAgB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,UAAU,CAAC,CAAC;gBACxD,IAAI,gBAAgB,EAAE;oBACrB,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,UAAU,EAAE,EAAE,SAAS,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;iBACnI;gBAED,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC;oBACnC,IAAI,CAAC,CAAC,EAAqB,YAAY,CAAS,mCAAmC,SAAS,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,GAAG,WAAW,CAAC,EAAE,OAAO,CAAC;oBAC5I,IAAI,OAAO,CAAqB,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;iBAC7F,CAAC,CAAC;gBAEH,IAAI,IAAI,CAAC,CAAC,CAA0B,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;uBAC7E,IAAI,CAAC,CAAC,CAAc,mBAAmB,CAAC,gBAAG,CAAY,WAAW,CAAC,QAAQ,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,gBAAG,CAAY,IAAI,EAAE,CAAC,EAC5H;oBACD,IAAI,CAAC,CAAC,CAA0B,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;oBACjF,IAAI,KAAK,GAAG,kBAAkB,IAAI,gBAAgB,EAAE;wBACnD,aAAa,GAAG,UAAU,CAAC;wBAC3B,kBAAkB,GAAG,KAAK,CAAC;qBAC3B;iBACD;gBAED,MAAM,KAAK,GAAG,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;oBAC3D,MAAM,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;oBAC7D,MAAM,gBAAgB,GAAG,SAAS,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,GAAG,WAAW,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;oBAE3F,IAAI,KAAgC,CAAC;oBAErC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;wBAChB,MAAM,KAAK,CAAC,qCAAqC,GAAG,WAAW,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;qBACpF;oBAED,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;wBACrB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;wBACnC,IAAI,OAAO,KAAK,SAAS,EAAE;4BAC1B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,gBAAgB,EAAE,2CAA2C,CAAC,CAAC;yBAClG;wBACD,KAAK,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,0CAA0C,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;qBACvG;yBACI,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;wBAC7B,KAAK,GAAG;4BACP,IAAI,EAAE,UAAU;4BAChB,IAAI,EAAE,6BAA6B,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;4BACxD,IAAI,EAAE,6BAA6B,CAAC,IAAA,UAAG,EAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;4BACjE,IAAI,EAAE,aAAG,CAAQ,YAAY,CAAC,SAAS,CAAC,iBAAiB,CAAC;yBAC1D,CAAC;qBACF;yBACI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;wBACxB,KAAK,GAAG;4BACP,IAAI,EAAE,KAAK;4BACX,IAAI,EAAE,6BAA6B,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;4BACnD,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG;yBACvB,CAAC;qBACF;oBAED,6CAA6C;yBACxC;wBACJ,MAAM,IAAI,KAAK,CAAC,0CAA0C,GAAG,gBAAgB,CAAC,CAAC;qBAC/E;oBAED,OAAO,CAAC;wBACP,WAAW;wBACX,KAAK;wBACL,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,IAAI,EAAE;wBACjF,EAAE,EAAE,gBAAgB;wBACpB,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,IAAI,EAAE,gBAAG,CAAY,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,gBAAG,CAAY,IAAI,EAAE;wBACpE,QAAQ,EAAE,UAAU;wBACpB,KAAK,EAAE,KAAK;qBACZ,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,IAAI,UAAU,GAAG,KAAK,CAAC;gBACvB,IAAI,WAAW,CAAC,WAAW,EAAE;oBAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAuB,YAAY,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACpF,MAAM,KAAK,GAAG,IAAI,kBAAG,EAAsB,CAAC;oBAC5C,UAAU,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;oBACvC,UAAU,GAAG,MAAM,IAAI,CAAC,CAAC,CAAoB,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,IAAA,wBAAI,EAAgB,CAAC,EAAE,OAAO,EAAE,WAAW,CAAC,WAAY,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;iBACzI;gBAED,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC;gBACnD,MAAM,oBAAoB,GAAiB;oBAC1C,WAAW,EAAE,WAAW,CAAC,WAAW;oBACpC,KAAK,EAAE,WAAW,CAAC,KAAK;oBACxB,EAAE,EAAE,UAAU;oBACd,UAAU;oBACV,MAAM,EAAE,SAAS,CAAC,WAAW,IAAI,SAAS,CAAC,IAAI;oBAC/C,KAAK,EAAE,CAAC;oBACR,KAAK;oBACL,IAAI,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE,OAAO;4BACZ,CAAC,CAAC,aAAG,CAAQ,eAAe,CAAC,IAAA,eAAG,EAAM,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;4BAC3F,CAAC,CAAC,0BAAI;qBACP;oBACD,IAAI,EAAE,gBAAG,CAAY,WAAW,CAAC,QAAQ,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,gBAAG,CAAY,IAAI,EAAE;iBAC9E,CAAC;gBAEX,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;gBAEhD,IAAI,CAAC,CAAC,CAAoB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAkB,oBAAoB,CAAC,CAAC,CAAC;YAC/E,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,CAAC,CAAc,KAAK,CAAC,YAAI,EAAiC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAQ,OAAO,EAAE,CAAC,CAAC,2DAA2C,CAAC;YAEvJ,IAAI,aAAa,IAAI,IAAI,CAAC,CAAC,CAAoB,QAAQ,CAAS,kDAAkD,CAAC,EAAE;gBAapH,IAAI,CAAC,CAAC,CAAgB,UAAU,CAAoE,uCAAuC,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE,CAAC,CAAC;gBACpK,IAAI,CAAC,CAAC,CAAc,cAAc,CAAC,kCAAkC,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;aAC5F;QACF,CAAC;QAEO,CAAC,CAA2C,SAAgC;YACnF,IAAI,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE,YAAY,EAAE,MAAM,CAAC,EAAE;gBACnD,OAAO;aACP;YAED,SAAS,CAAC,WAAW,EAAE,YAAY,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE;gBACtD,MAAM,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC;gBACjE,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBAC5B,MAAM,gBAAgB,GAAG,SAAS,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;oBACvF,IAAI,CAAC,CAAC,CAAK,MAAM,CAAC,gBAAgB,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,CAAC,CAA2B,MAAM,CAAC,UAAU,CAAC,CAAC;gBACpD,IAAI,CAAC,CAAC,CAAuB,IAAI,CAAC,UAAU,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,cAAc,CAAC,EAAU;YAExB,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAA2B,GAAG,CAAC,EAAE,CAAC,CAAC;YAC7D,IAAI,CAAC,WAAW,EAAE;gBAAE,MAAM,KAAK,CAAC,qCAAqC,GAAG,EAAE,CAAC,CAAC;aAAE;YAC9E,OAAO,IAAI,CAAC,CAAC,CAAkB,WAAW,CAAC,CAAC;QAC7C,CAAC;QAED,eAAe;YAEd,MAAM,oBAAoB,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAA2B,MAAM,EAAE,CAAC,CAAC;YAC5E,MAAM,wBAAwB,GAAG,oBAAoB;iBACnD,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACf,OAAO;oBACN,GAAG,QAAQ;oBACX,OAAO,EAAE;wBACR,IAAI,EAAE,OAAgB;wBACtB,KAAK,EAAE,QAAQ,CAAC,KAAK;qBACrB;iBACD,CAAC;YACH,CAAC,CAAC;iBACD,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,KAAK,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC;iBACtF,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAkB,QAAQ,CAAC,CAAC,CAAC;YAErD,OAAO,wBAAwB,CAAC;QACjC,CAAC;QAEO,CAAC,CAAkB,QAAsB;YAEhD,MAAM,iBAAiB,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAe,IAAI,CAAC,CAAC,CAAC;YAEjF,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,cAAc,CAAC;YACjE,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC;YAChE,MAAM,KAAK,GAAG,aAAa,IAAI,aAAa,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE,GAAG,oBAAoB,CAAC,CAAC;YAEpF,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAQ,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;YAC5D,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAA2B,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACtE,IAAI,CAAC,WAAW,EAAE;gBAAE,MAAM,KAAK,CAAC,qCAAqC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;aAAE;YAEvF,MAAM,cAAc,GAAa,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAElE,MAAM,WAAW,GAAG,WAAW,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,KAAK,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEnJ,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,IAAI,aAAa,EAAE;gBAClB,MAAM,WAAW,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;gBAChC,MAAM,kBAAkB,GAAG,WAAW,GAAG,aAAa,CAAC;gBACvD,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,oBAAoB,GAAG,kBAAkB,CAAC,GAAG,oBAAoB,CAAC,CAAC;aAC/F;YAED,OAAO;gBACN,GAAG,QAAQ;gBACX,YAAY;gBACZ,KAAK,EAAE,iBAAiB;gBACxB,QAAQ,EAAE,CAAC,CAAC,WAAW;gBACvB,QAAQ,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC;aACjC,CAAC;QACH,CAAC;QAEO,CAAC,CAAe,IAAsB;YAC7C,OAAO;gBACN,GAAG,IAAI;gBACP,IAAI,EAAE,KAAK;gBACX,GAAG,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,EAAE,CAAC;aAC7B,CAAC;QACH,CAAC;QAED,YAAY,CAAC,EAAU;YACtB,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAY,EAAE,CAAC,CAAC;YAC1C,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,IAAI,KAAK,IAAI,EAAE;gBAC9C,IAAI,CAAC,CAAC,CAAY,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;gBACvC,IAAI,CAAC,CAAC,CAAO,WAAW,EAAE,CAAC;gBAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,CAAM,EAAE,CAAC,CAAC;gBAC9B,IAAI,CAAC,IAAI,EAAE;oBAAE,MAAM,KAAK,CAAC,gCAAgC,CAAC,CAAC;iBAAE;gBAE7D,IAAI,CAAC,CAAC,CAAkB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAe,IAAI,CAAC,CAAC,CAAC;aACzD;QACF,CAAC;QAED,cAAc,CAAC,EAAU;YACxB,OAAO,IAAI,CAAC,CAAC,CAAY,EAAE,CAAC,CAAC;YAC7B,IAAI,CAAC,CAAC,CAAO,WAAW,EAAE,CAAC;YAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,CAAM,EAAE,CAAC,CAAC;YAC9B,IAAI,CAAC,CAAC,CAAkB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAe,IAAI,CAAC,CAAC,CAAC;QAC1D,CAAC;QAED,eAAe,CAAC,KAAa;YAC5B,IAAI,IAAI,CAAC,CAAC,CAAa,GAAG,CAAC,KAAK,CAAC,EAAE;gBAAE,OAAO;aAAE;YAE9C,IAAI,CAAC,CAAC,CAAa,GAAG,CAAC,KAAK,CAAC,CAAC;YAC9B,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3E,CAAC;QAED,mBAAmB,CAAC,oBAAuC;YAC1D,IAAI,CAAC,oBAAoB,CAAC;gBACzB,GAAG,oBAAoB;gBACvB,KAAK,EAAE,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,WAAW,EAAE,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;aAC7G,CAAC,CAAC;QACJ,CAAC;QAED,oBAAoB,CAAC,qBAAmC;YACvD,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAA2B,GAAG,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;YACnF,IAAI,WAAW,EAAE;gBAChB,OAAO,CAAC,KAAK,CAAC,+CAA+C,qBAAqB,CAAC,EAAE,GAAG,CAAC,CAAC;gBAC1F,OAAO;aACP;YAED,IAAI,CAAC,CAAC,CAA2B,GAAG,CAAC,qBAAqB,CAAC,EAAE,EAAE,qBAAqB,CAAC,CAAC;YAEtF,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC1C,IAAI,IAAI,CAAC,CAAC,CAAK,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;oBAAE,MAAM,KAAK,CAAC,sCAAsC,GAAG,IAAI,CAAC,EAAE,GAAG,4BAA4B,CAAC,CAAC;iBAAE;gBAC9H,IAAI,CAAC,CAAC,CAAK,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;gBAC9B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAA6B,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC7E,IAAI,CAAC,CAAC,CAAqB,IAAI,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,qBAAqB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAA6B,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/F,CAAC;QAEO,CAAC,CAAqB,IAAsB;YACnD,IAAK,IAAY,CAAC,MAAM,EAAE;gBACzB,OAAO,CAAC,KAAK,CAAC,iBAAiB,EAAE,IAAI,EAAE,qFAAqF,CAAC,CAAC;gBAC9H,OAAO;aACP;YAED,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;gBAClC,IAAI,CAAC,gBAAgB,GAAG,IAAA,YAAG,EAAM,IAAA,YAAG,EACnC,IAAI,CAAC,WAAW;qBACd,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,eAAe;qBACnE,GAAG,CAAC,UAAU,CAAC,EAAE,CACjB,UAAU,CAAC,KAAK;qBACd,MAAM,CAAC,CAAC,CAAC,IAAI,EAAiB,EAAE,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC;qBAC3D,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;oBACjB,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;wBAChC,OAAO,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;qBACxG;oBACD,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;wBAC9D,OAAO,SAAS,GAAG,IAAI,CAAC;qBACxB;oBACD,OAAO,SAAS,CAAC;gBAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACV;YAED,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;gBAClC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAC3C;YAED,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACxC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,GAAG,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;gBAErE,IAAI,CAAC,SAAS,EAAE;oBACf,OAAO,CAAC,KAAK,CAAC,2BAA2B,KAAK,0BAA0B,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;oBACnF,SAAS;iBACT;gBAED,QAAQ,SAAS,EAAE;oBAClB,KAAK,QAAQ,CAAC;oBAAC,KAAK,SAAS,CAAC;oBAAC,KAAK,QAAQ,CAAC;oBAAC,KAAK,kBAAkB;wBACpE,MAAM;oBACP,KAAK,WAAW,CAAC,CAAC;wBACjB,MAAM,UAAU,GAAG,gBAAG,CAAY,WAAW,CAAC,QAAQ,CAAC,CAAC;wBACxD,IAAI,UAAU,EAAE;4BACf,IAAI,CAAC,CAAC,CAAmC,GAAG,CAAC,UAAU,CAAC,CAAC;4BACzD,UAAU,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAyB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC1E,KAAK,GAAG,SAAS,GAAG,GAAG,GAAG,UAAU,CAAC,SAAS,EAAE,CAAC;4BACjD,IAAI,IAAI,CAAC,CAAC,CAAc,mBAAmB,CAAC,UAAU,CAAC,EAAE;gCACxD,IAAI,CAAC,CAAC,CAAa,GAAG,CAAC,KAAK,CAAC,CAAC;6BAC9B;yBACD;6BAAM;4BACN,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,UAAU,EAAE,qBAAqB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;yBACrG;wBACD,MAAM;qBACN;oBACD,KAAK,gBAAgB,CAAC;oBAAC,KAAK,cAAc;wBACzC,KAAK,GAAG,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC;wBAClC,MAAM;oBACP,KAAK,WAAW;wBACf,KAAK,GAAG,SAAS,GAAG,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;wBAC3D,MAAM;oBACP,KAAK,sBAAsB,CAAC;oBAAC,KAAK,oBAAoB;wBACrD,KAAK,GAAG,qBAAqB,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;wBACvD,MAAM;oBACP;wBACC,OAAO,CAAC,KAAK,CAAC,2BAA2B,KAAK,0BAA0B,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;wBACnF,SAAS;iBACV;gBAED,IAAI,CAAC,EAAE,CAAyB,KAAK,EAAE,IAAI,CAAC,CAAC;aAC7C;QACF,CAAC;QAEO,EAAE,CAAyB,KAAa,EAAE,IAAsB;YACvE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,KAAK,CAAC,EAAE;gBACzC,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,KAAK,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;aAC/C;YACD,IAAI,CAAC,CAAC,CAAmB,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnD,CAAC;QAEO,EAAE,CAAM,EAAU;YACzB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAK,GAAG,CAAC,EAAE,CAAC,CAAC;YAChC,IAAI,CAAC,IAAI,EAAE;gBAAE,MAAM,KAAK,CAAC,6DAA6D,GAAG,EAAE,CAAC,CAAC;aAAE;YAC/F,OAAO,IAAI,CAAC;QACb,CAAC;KACD,CAAA;IAnhBY,oBAAI;mBAAJ,IAAI;QA8Bd,WAAA,aAAG,CAAA;QACH,WAAA,cAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,eAAG,CAAA;QACH,WAAA,gBAAG,CAAA;QACH,WAAA,mBAAI,CAAA;QACJ,WAAA,mBAAG,CAAA;QACH,WAAA,yBAAG,CAAA;QACH,WAAA,UAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,YAAA,eAAG,CAAA;QACH,YAAA,wBAAI,CAAA;OAzCM,IAAI,CAmhBhB;IAED,MAAM,gBAAgB,GAAG,CAAC,IAAY,EAAgB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAA,gBAAG,EAAa,IAAI,CAAC,CAAC,CAAC;IAErH,MAAM,IAAI,GAAgC,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QAC7F,CAAC,CAAC,SAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;QACvB,CAAC,CAAC,aAAG,CAAQ,SAAS,CAAC,2DAA2D,IAAI,EAAE,CAAC,CAAC;IAF9E,QAAA,IAAI,QAE0E;IAE3F,MAAM,oCAAoC,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QACzF,CAAC,CAAC,SAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;QACvB,CAAC,CAAC,aAAG,CAAQ,YAAY,CAAC,2DAA2D,IAAI,EAAE,CAAC,CAAC;IAC9F,MAAM,sCAAsC,GAAG,CAAC,IAA4E,EAAwD,EAAE;QACrL,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC7B,MAAM,SAAS,GAAG,oCAAoC,CAAC,IAAI,CAAC,CAAC;YAC7D,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;SACpF;aAAM;YACN,OAAO;gBACN,MAAM,EAAE,oCAAoC,CAAC,IAAI,CAAC,EAAE,CAAC;gBACrD,OAAO,EAAE,oCAAoC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC;gBACzE,KAAK,EAAE,oCAAoC,CAAC,IAAI,CAAC,KAAK,CAAC;gBACvD,IAAI,EAAE,oCAAoC,CAAC,IAAI,CAAC,IAAI,CAAC;aACrD,CAAC;SACF;IACF,CAAC,CAAC;IAEF,IAAA,aAAG,EAAa,KAAM,SAAQ,aAAG;QAChC;YACC,KAAK,CAAC;gBACL,EAAE,EAAE,6BAA6B;gBACjC,QAAQ,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAW,EAAE,IAAW,CAAC,EAAE;gBAC9E,KAAK,EAAE,EAAE,QAAQ,EAAE,yCAAyC,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAqC,EAAE,IAAyC,CAAC,EAAE;gBACjK,EAAE,EAAE,IAAI;aACR,CAAC,CAAC;QACJ,CAAC;QAED,GAAG,CAAC,QAA0B;YAC7B,MAAM,qBAAqB,GAAG,QAAQ,CAAC,GAAG,CAAC,YAAI,CAAiB,CAAC;YACjE,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,aAAG,CAAa,CAAC;YAErD,cAAc,CAAC,KAAK,CACnB,YAAI,EACJ,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,2DAEC,CAAC;YAErB,cAAc,CAAC,KAAK,CACnB,YAAI,EACJ,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,2DAEC,CAAC;YAErB,MAAM,OAAO,GAAG,IAAI,aAAG,CAAK,uBAAuB,EAAE,QAAQ,CAAC,GAAG,CAAC,aAAG,CAAa,CAAC,CAAC;YACpF,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,0DAA0C,CAAC;YAC5E,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;gBACzB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;oBACtD,IAAI;wBACH,qBAAqB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;qBAC1C;oBAAC,OAAO,CAAC,EAAE;wBACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBACjB;iBACD;aACD;YACD,OAAO,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;KACD,CAAC,CAAC;IAEH,IAAA,gBAAG,EAAe,YAAI,EAAkB,IAAI,oCAA2C,CAAC","file":"gettingStartedService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator, IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { Memento } from 'vs/workbench/common/memento';\nimport { Action2, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ContextKeyExpr, ContextKeyExpression, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IUserDataSyncEnablementService } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { FileAccess } from 'vs/base/common/network';\nimport { EXTENSION_INSTALL_DEP_PACK_CONTEXT, EXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT, IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { walkthroughs } from 'vs/workbench/contrib/welcomeGettingStarted/common/gettingStartedContent';\nimport { IWorkbenchAssignmentService } from 'vs/workbench/services/assignment/common/assignmentService';\nimport { IHostService } from 'vs/workbench/services/host/browser/host';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILink, LinkedText, parseLinkedText } from 'vs/base/common/linkedText';\nimport { walkthroughsExtensionPoint } from 'vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedExtensionPoint';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { dirname } from 'vs/base/common/path';\nimport { coalesce, flatten } from 'vs/base/common/arrays';\nimport { IViewsService } from 'vs/workbench/common/views';\nimport { localize } from 'vs/nls';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { checkGlobFileExists } from 'vs/workbench/services/extensions/common/workspaceContains';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { DefaultIconPath } from 'vs/workbench/services/extensionManagement/common/extensionManagement';\n\nexport const HasMultipleNewFileEntries = new RawContextKey<boolean>('hasMultipleNewFileEntries', false);\n\nexport const IWalkthroughsService = createDecorator<IWalkthroughsService>('walkthroughsService');\n\nexport const hiddenEntriesConfigurationKey = 'workbench.welcomePage.hiddenCategories';\n\nexport const walkthroughMetadataConfigurationKey = 'workbench.welcomePage.walkthroughMetadata';\nexport type WalkthroughMetaDataType = Map<string, { firstSeen: number; stepIDs: string[]; manaullyOpened: boolean }>;\n\nconst BUILT_IN_SOURCE = localize('builtin', \"Built-In\");\n\nexport interface IWalkthrough {\n\tid: string;\n\ttitle: string;\n\tdescription: string;\n\torder: number;\n\tsource: string;\n\tisFeatured: boolean;\n\tnext?: string;\n\twhen: ContextKeyExpression;\n\tsteps: IWalkthroughStep[];\n\ticon:\n\t| { type: 'icon'; icon: ThemeIcon }\n\t| { type: 'image'; path: string };\n}\n\nexport type IWalkthroughLoose = Omit<IWalkthrough, 'steps'> & { steps: (Omit<IWalkthroughStep, 'description'> & { description: string })[] };\n\nexport interface IResolvedWalkthrough extends IWalkthrough {\n\tsteps: IResolvedWalkthroughStep[];\n\tnewItems: boolean;\n\trecencyBonus: number;\n\tnewEntry: boolean;\n}\n\nexport interface IWalkthroughStep {\n\tid: string;\n\ttitle: string;\n\tdescription: LinkedText[];\n\tcategory: string;\n\twhen: ContextKeyExpression;\n\torder: number;\n\tcompletionEvents: string[];\n\tmedia:\n\t| { type: 'image'; path: { hcDark: URI; hcLight: URI; light: URI; dark: URI }; altText: string }\n\t| { type: 'svg'; path: URI; altText: string }\n\t| { type: 'markdown'; path: URI; base: URI; root: URI };\n}\n\ntype StepProgress = { done: boolean };\n\nexport interface IResolvedWalkthroughStep extends IWalkthroughStep, StepProgress { }\n\nexport interface IWalkthroughsService {\n\t_serviceBrand: undefined;\n\n\treadonly onDidAddWalkthrough: Event<IResolvedWalkthrough>;\n\treadonly onDidRemoveWalkthrough: Event<string>;\n\treadonly onDidChangeWalkthrough: Event<IResolvedWalkthrough>;\n\treadonly onDidProgressStep: Event<IResolvedWalkthroughStep>;\n\n\tgetWalkthroughs(): IResolvedWalkthrough[];\n\tgetWalkthrough(id: string): IResolvedWalkthrough;\n\n\tregisterWalkthrough(descriptor: IWalkthroughLoose): void;\n\n\tprogressByEvent(eventName: string): void;\n\tprogressStep(id: string): void;\n\tdeprogressStep(id: string): void;\n\n\tmarkWalkthroughOpened(id: string): void;\n}\n\n// Show walkthrough as \"new\" for 7 days after first install\nconst DAYS = 24 * 60 * 60 * 1000;\nconst NEW_WALKTHROUGH_TIME = 7 * DAYS;\n\nexport class WalkthroughsService extends Disposable implements IWalkthroughsService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidAddWalkthrough = new Emitter<IResolvedWalkthrough>();\n\treadonly onDidAddWalkthrough: Event<IResolvedWalkthrough> = this._onDidAddWalkthrough.event;\n\tprivate readonly _onDidRemoveWalkthrough = new Emitter<string>();\n\treadonly onDidRemoveWalkthrough: Event<string> = this._onDidRemoveWalkthrough.event;\n\tprivate readonly _onDidChangeWalkthrough = new Emitter<IResolvedWalkthrough>();\n\treadonly onDidChangeWalkthrough: Event<IResolvedWalkthrough> = this._onDidChangeWalkthrough.event;\n\tprivate readonly _onDidProgressStep = new Emitter<IResolvedWalkthroughStep>();\n\treadonly onDidProgressStep: Event<IResolvedWalkthroughStep> = this._onDidProgressStep.event;\n\n\tprivate memento: Memento;\n\tprivate stepProgress: Record<string, StepProgress | undefined>;\n\n\tprivate sessionEvents = new Set<string>();\n\tprivate completionListeners = new Map<string, Set<string>>();\n\n\tprivate gettingStartedContributions = new Map<string, IWalkthrough>();\n\tprivate steps = new Map<string, IWalkthroughStep>();\n\n\tprivate sessionInstalledExtensions: Set<string> = new Set<string>();\n\n\tprivate categoryVisibilityContextKeys = new Set<string>();\n\tprivate stepCompletionContextKeyExpressions = new Set<ContextKeyExpression>();\n\tprivate stepCompletionContextKeys = new Set<string>();\n\n\tprivate metadata: WalkthroughMetaDataType;\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IContextKeyService private readonly contextService: IContextKeyService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkbenchAssignmentService private readonly tasExperimentService: IWorkbenchAssignmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.metadata = new Map(\n\t\t\tJSON.parse(\n\t\t\t\tthis.storageService.get(walkthroughMetadataConfigurationKey, StorageScope.PROFILE, '[]')));\n\n\t\tthis.memento = new Memento('gettingStartedService', this.storageService);\n\t\tthis.stepProgress = this.memento.getMemento(StorageScope.PROFILE, StorageTarget.USER);\n\n\t\tthis.initCompletionEventListeners();\n\n\t\tHasMultipleNewFileEntries.bindTo(this.contextService).set(false);\n\t\tthis.registerWalkthroughs();\n\n\t}\n\n\tprivate registerWalkthroughs() {\n\n\t\twalkthroughs.forEach(async (category, index) => {\n\n\t\t\tthis._registerWalkthrough({\n\t\t\t\t...category,\n\t\t\t\ticon: { type: 'icon', icon: category.icon },\n\t\t\t\torder: walkthroughs.length - index,\n\t\t\t\tsource: BUILT_IN_SOURCE,\n\t\t\t\twhen: ContextKeyExpr.deserialize(category.when) ?? ContextKeyExpr.true(),\n\t\t\t\tsteps:\n\t\t\t\t\tcategory.content.steps.map((step, index) => {\n\t\t\t\t\t\treturn ({\n\t\t\t\t\t\t\t...step,\n\t\t\t\t\t\t\tcompletionEvents: step.completionEvents ?? [],\n\t\t\t\t\t\t\tdescription: parseDescription(step.description),\n\t\t\t\t\t\t\tcategory: category.id,\n\t\t\t\t\t\t\torder: index,\n\t\t\t\t\t\t\twhen: ContextKeyExpr.deserialize(step.when) ?? ContextKeyExpr.true(),\n\t\t\t\t\t\t\tmedia: step.media.type === 'image'\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\t\t\t\taltText: step.media.altText,\n\t\t\t\t\t\t\t\t\tpath: convertInternalMediaPathsToBrowserURIs(step.media.path)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t: step.media.type === 'svg'\n\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\ttype: 'svg',\n\t\t\t\t\t\t\t\t\t\taltText: step.media.altText,\n\t\t\t\t\t\t\t\t\t\tpath: convertInternalMediaPathToFileURI(step.media.path).with({ query: JSON.stringify({ moduleId: 'vs/workbench/contrib/welcomeGettingStarted/common/media/' + step.media.path }) })\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\ttype: 'markdown',\n\t\t\t\t\t\t\t\t\t\tpath: convertInternalMediaPathToFileURI(step.media.path).with({ query: JSON.stringify({ moduleId: 'vs/workbench/contrib/welcomeGettingStarted/common/media/' + step.media.path }) }),\n\t\t\t\t\t\t\t\t\t\tbase: FileAccess.asFileUri('vs/workbench/contrib/welcomeGettingStarted/common/media/'),\n\t\t\t\t\t\t\t\t\t\troot: FileAccess.asFileUri('vs/workbench/contrib/welcomeGettingStarted/common/media/'),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t});\n\t\t});\n\n\t\twalkthroughsExtensionPoint.setHandler((_, { added, removed }) => {\n\t\t\tadded.map(e => this.registerExtensionWalkthroughContributions(e.description));\n\t\t\tremoved.map(e => this.unregisterExtensionWalkthroughContributions(e.description));\n\t\t});\n\t}\n\n\tprivate initCompletionEventListeners() {\n\t\tthis._register(this.commandService.onDidExecuteCommand(command => this.progressByEvent(`onCommand:${command.commandId}`)));\n\n\t\tthis.extensionManagementService.getInstalled().then(installed => {\n\t\t\tinstalled.forEach(ext => this.progressByEvent(`extensionInstalled:${ext.identifier.id.toLowerCase()}`));\n\t\t});\n\n\t\tthis._register(this.extensionManagementService.onDidInstallExtensions(async (result) => {\n\t\t\tconst hadLastFoucs = await this.hostService.hadLastFocus();\n\t\t\tfor (const e of result) {\n\t\t\t\tconst skipWalkthrough = e?.context?.[EXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT] || e?.context?.[EXTENSION_INSTALL_DEP_PACK_CONTEXT];\n\t\t\t\t// If the window had last focus and the install didn't specify to skip the walkthrough\n\t\t\t\t// Then add it to the sessionInstallExtensions to be opened\n\t\t\t\tif (hadLastFoucs && !skipWalkthrough) {\n\t\t\t\t\tthis.sessionInstalledExtensions.add(e.identifier.id.toLowerCase());\n\t\t\t\t}\n\t\t\t\tthis.progressByEvent(`extensionInstalled:${e.identifier.id.toLowerCase()}`);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.contextService.onDidChangeContext(event => {\n\t\t\tif (event.affectsSome(this.stepCompletionContextKeys)) {\n\t\t\t\tthis.stepCompletionContextKeyExpressions.forEach(expression => {\n\t\t\t\t\tif (event.affectsSome(new Set(expression.keys())) && this.contextService.contextMatchesRules(expression)) {\n\t\t\t\t\t\tthis.progressByEvent(`onContext:` + expression.serialize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.viewsService.onDidChangeViewVisibility(e => {\n\t\t\tif (e.visible) { this.progressByEvent('onView:' + e.id); }\n\t\t}));\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\te.affectedKeys.forEach(key => { this.progressByEvent('onSettingChanged:' + key); });\n\t\t}));\n\n\t\tif (this.userDataSyncEnablementService.isEnabled()) { this.progressByEvent('onEvent:sync-enabled'); }\n\t\tthis._register(this.userDataSyncEnablementService.onDidChangeEnablement(() => {\n\t\t\tif (this.userDataSyncEnablementService.isEnabled()) { this.progressByEvent('onEvent:sync-enabled'); }\n\t\t}));\n\t}\n\n\tmarkWalkthroughOpened(id: string) {\n\t\tconst walkthrough = this.gettingStartedContributions.get(id);\n\t\tconst prior = this.metadata.get(id);\n\t\tif (prior && walkthrough) {\n\t\t\tthis.metadata.set(id, { ...prior, manaullyOpened: true, stepIDs: walkthrough.steps.map(s => s.id) });\n\t\t}\n\n\t\tthis.storageService.store(walkthroughMetadataConfigurationKey, JSON.stringify([...this.metadata.entries()]), StorageScope.PROFILE, StorageTarget.USER);\n\t}\n\n\tprivate async registerExtensionWalkthroughContributions(extension: IExtensionDescription) {\n\t\tconst convertExtensionPathToFileURI = (path: string) => path.startsWith('https://')\n\t\t\t? URI.parse(path, true)\n\t\t\t: FileAccess.uriToFileUri(joinPath(extension.extensionLocation, path));\n\n\t\tconst convertExtensionRelativePathsToBrowserURIs = (path: string | { hc: string; hcLight?: string; dark: string; light: string }): { hcDark: URI; hcLight: URI; dark: URI; light: URI } => {\n\t\t\tconst convertPath = (path: string) => path.startsWith('https://')\n\t\t\t\t? URI.parse(path, true)\n\t\t\t\t: FileAccess.uriToBrowserUri(joinPath(extension.extensionLocation, path));\n\n\t\t\tif (typeof path === 'string') {\n\t\t\t\tconst converted = convertPath(path);\n\t\t\t\treturn { hcDark: converted, hcLight: converted, dark: converted, light: converted };\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\thcDark: convertPath(path.hc),\n\t\t\t\t\thcLight: convertPath(path.hcLight ?? path.light),\n\t\t\t\t\tlight: convertPath(path.light),\n\t\t\t\t\tdark: convertPath(path.dark)\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\tif (!(extension.contributes?.walkthroughs?.length)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet sectionToOpen: string | undefined;\n\t\tlet sectionToOpenIndex = Math.min(); // '+Infinity';\n\t\tawait Promise.all(extension.contributes?.walkthroughs?.map(async (walkthrough, index) => {\n\t\t\tconst categoryID = extension.identifier.value + '#' + walkthrough.id;\n\n\t\t\tconst isNewlyInstalled = !this.metadata.get(categoryID);\n\t\t\tif (isNewlyInstalled) {\n\t\t\t\tthis.metadata.set(categoryID, { firstSeen: +new Date(), stepIDs: walkthrough.steps?.map(s => s.id) ?? [], manaullyOpened: false });\n\t\t\t}\n\n\t\t\tconst override = await Promise.race([\n\t\t\t\tthis.tasExperimentService?.getTreatment<string>(`gettingStarted.overrideCategory.${extension.identifier.value + '.' + walkthrough.id}.when`),\n\t\t\t\tnew Promise<string | undefined>(resolve => setTimeout(() => resolve(walkthrough.when), 5000))\n\t\t\t]);\n\n\t\t\tif (this.sessionInstalledExtensions.has(extension.identifier.value.toLowerCase())\n\t\t\t\t&& this.contextService.contextMatchesRules(ContextKeyExpr.deserialize(override ?? walkthrough.when) ?? ContextKeyExpr.true())\n\t\t\t) {\n\t\t\t\tthis.sessionInstalledExtensions.delete(extension.identifier.value.toLowerCase());\n\t\t\t\tif (index < sectionToOpenIndex && isNewlyInstalled) {\n\t\t\t\t\tsectionToOpen = categoryID;\n\t\t\t\t\tsectionToOpenIndex = index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst steps = (walkthrough.steps ?? []).map((step, index) => {\n\t\t\t\tconst description = parseDescription(step.description || '');\n\t\t\t\tconst fullyQualifiedID = extension.identifier.value + '#' + walkthrough.id + '#' + step.id;\n\n\t\t\t\tlet media: IWalkthroughStep['media'];\n\n\t\t\t\tif (!step.media) {\n\t\t\t\t\tthrow Error('missing media in walkthrough step: ' + walkthrough.id + '@' + step.id);\n\t\t\t\t}\n\n\t\t\t\tif (step.media.image) {\n\t\t\t\t\tconst altText = step.media.altText;\n\t\t\t\t\tif (altText === undefined) {\n\t\t\t\t\t\tconsole.error('Walkthrough item:', fullyQualifiedID, 'is missing altText for its media element.');\n\t\t\t\t\t}\n\t\t\t\t\tmedia = { type: 'image', altText, path: convertExtensionRelativePathsToBrowserURIs(step.media.image) };\n\t\t\t\t}\n\t\t\t\telse if (step.media.markdown) {\n\t\t\t\t\tmedia = {\n\t\t\t\t\t\ttype: 'markdown',\n\t\t\t\t\t\tpath: convertExtensionPathToFileURI(step.media.markdown),\n\t\t\t\t\t\tbase: convertExtensionPathToFileURI(dirname(step.media.markdown)),\n\t\t\t\t\t\troot: FileAccess.uriToFileUri(extension.extensionLocation),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (step.media.svg) {\n\t\t\t\t\tmedia = {\n\t\t\t\t\t\ttype: 'svg',\n\t\t\t\t\t\tpath: convertExtensionPathToFileURI(step.media.svg),\n\t\t\t\t\t\taltText: step.media.svg,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Throw error for unknown walkthrough format\n\t\t\t\telse {\n\t\t\t\t\tthrow new Error('Unknown walkthrough format detected for ' + fullyQualifiedID);\n\t\t\t\t}\n\n\t\t\t\treturn ({\n\t\t\t\t\tdescription,\n\t\t\t\t\tmedia,\n\t\t\t\t\tcompletionEvents: step.completionEvents?.filter(x => typeof x === 'string') ?? [],\n\t\t\t\t\tid: fullyQualifiedID,\n\t\t\t\t\ttitle: step.title,\n\t\t\t\t\twhen: ContextKeyExpr.deserialize(step.when) ?? ContextKeyExpr.true(),\n\t\t\t\t\tcategory: categoryID,\n\t\t\t\t\torder: index,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tlet isFeatured = false;\n\t\t\tif (walkthrough.featuredFor) {\n\t\t\t\tconst folders = this.workspaceContextService.getWorkspace().folders.map(f => f.uri);\n\t\t\t\tconst token = new CancellationTokenSource();\n\t\t\t\tsetTimeout(() => token.cancel(), 2000);\n\t\t\t\tisFeatured = await this.instantiationService.invokeFunction(a => checkGlobFileExists(a, folders, walkthrough.featuredFor!, token.token));\n\t\t\t}\n\n\t\t\tconst iconStr = walkthrough.icon ?? extension.icon;\n\t\t\tconst walkthoughDescriptor: IWalkthrough = {\n\t\t\t\tdescription: walkthrough.description,\n\t\t\t\ttitle: walkthrough.title,\n\t\t\t\tid: categoryID,\n\t\t\t\tisFeatured,\n\t\t\t\tsource: extension.displayName ?? extension.name,\n\t\t\t\torder: 0,\n\t\t\t\tsteps,\n\t\t\t\ticon: {\n\t\t\t\t\ttype: 'image',\n\t\t\t\t\tpath: iconStr\n\t\t\t\t\t\t? FileAccess.uriToBrowserUri(joinPath(extension.extensionLocation, iconStr)).toString(true)\n\t\t\t\t\t\t: DefaultIconPath\n\t\t\t\t},\n\t\t\t\twhen: ContextKeyExpr.deserialize(override ?? walkthrough.when) ?? ContextKeyExpr.true(),\n\t\t\t} as const;\n\n\t\t\tthis._registerWalkthrough(walkthoughDescriptor);\n\n\t\t\tthis._onDidAddWalkthrough.fire(this.resolveWalkthrough(walkthoughDescriptor));\n\t\t}));\n\n\t\tthis.storageService.store(walkthroughMetadataConfigurationKey, JSON.stringify([...this.metadata.entries()]), StorageScope.PROFILE, StorageTarget.USER);\n\n\t\tif (sectionToOpen && this.configurationService.getValue<string>('workbench.welcomePage.walkthroughs.openOnInstall')) {\n\t\t\ttype GettingStartedAutoOpenClassification = {\n\t\t\t\towner: 'lramos15';\n\t\t\t\tcomment: 'When a walkthrthrough is opened upon extension installation';\n\t\t\t\tid: {\n\t\t\t\t\tclassification: 'PublicNonPersonalData'; purpose: 'FeatureInsight';\n\t\t\t\t\towner: 'lramos15';\n\t\t\t\t\tcomment: 'Used to understand what walkthroughs are consulted most frequently';\n\t\t\t\t};\n\t\t\t};\n\t\t\ttype GettingStartedAutoOpenEvent = {\n\t\t\t\tid: string;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<GettingStartedAutoOpenEvent, GettingStartedAutoOpenClassification>('gettingStarted.didAutoOpenWalkthrough', { id: sectionToOpen });\n\t\t\tthis.commandService.executeCommand('workbench.action.openWalkthrough', sectionToOpen, true);\n\t\t}\n\t}\n\n\tprivate unregisterExtensionWalkthroughContributions(extension: IExtensionDescription) {\n\t\tif (!(extension.contributes?.walkthroughs?.length)) {\n\t\t\treturn;\n\t\t}\n\n\t\textension.contributes?.walkthroughs?.forEach(section => {\n\t\t\tconst categoryID = extension.identifier.value + '#' + section.id;\n\t\t\tsection.steps.forEach(step => {\n\t\t\t\tconst fullyQualifiedID = extension.identifier.value + '#' + section.id + '#' + step.id;\n\t\t\t\tthis.steps.delete(fullyQualifiedID);\n\t\t\t});\n\t\t\tthis.gettingStartedContributions.delete(categoryID);\n\t\t\tthis._onDidRemoveWalkthrough.fire(categoryID);\n\t\t});\n\t}\n\n\tgetWalkthrough(id: string): IResolvedWalkthrough {\n\n\t\tconst walkthrough = this.gettingStartedContributions.get(id);\n\t\tif (!walkthrough) { throw Error('Trying to get unknown walkthrough: ' + id); }\n\t\treturn this.resolveWalkthrough(walkthrough);\n\t}\n\n\tgetWalkthroughs(): IResolvedWalkthrough[] {\n\n\t\tconst registeredCategories = [...this.gettingStartedContributions.values()];\n\t\tconst categoriesWithCompletion = registeredCategories\n\t\t\t.map(category => {\n\t\t\t\treturn {\n\t\t\t\t\t...category,\n\t\t\t\t\tcontent: {\n\t\t\t\t\t\ttype: 'steps' as const,\n\t\t\t\t\t\tsteps: category.steps\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t})\n\t\t\t.filter(category => category.content.type !== 'steps' || category.content.steps.length)\n\t\t\t.map(category => this.resolveWalkthrough(category));\n\n\t\treturn categoriesWithCompletion;\n\t}\n\n\tprivate resolveWalkthrough(category: IWalkthrough): IResolvedWalkthrough {\n\n\t\tconst stepsWithProgress = category.steps.map(step => this.getStepProgress(step));\n\n\t\tconst hasOpened = this.metadata.get(category.id)?.manaullyOpened;\n\t\tconst firstSeenDate = this.metadata.get(category.id)?.firstSeen;\n\t\tconst isNew = firstSeenDate && firstSeenDate > (+new Date() - NEW_WALKTHROUGH_TIME);\n\n\t\tconst lastStepIDs = this.metadata.get(category.id)?.stepIDs;\n\t\tconst rawCategory = this.gettingStartedContributions.get(category.id);\n\t\tif (!rawCategory) { throw Error('Could not find walkthrough with id ' + category.id); }\n\n\t\tconst currentStepIds: string[] = rawCategory.steps.map(s => s.id);\n\n\t\tconst hasNewSteps = lastStepIDs && (currentStepIds.length !== lastStepIDs.length || currentStepIds.some((id, index) => id !== lastStepIDs[index]));\n\n\t\tlet recencyBonus = 0;\n\t\tif (firstSeenDate) {\n\t\t\tconst currentDate = +new Date();\n\t\t\tconst timeSinceFirstSeen = currentDate - firstSeenDate;\n\t\t\trecencyBonus = Math.max(0, (NEW_WALKTHROUGH_TIME - timeSinceFirstSeen) / NEW_WALKTHROUGH_TIME);\n\t\t}\n\n\t\treturn {\n\t\t\t...category,\n\t\t\trecencyBonus,\n\t\t\tsteps: stepsWithProgress,\n\t\t\tnewItems: !!hasNewSteps,\n\t\t\tnewEntry: !!(isNew && !hasOpened),\n\t\t};\n\t}\n\n\tprivate getStepProgress(step: IWalkthroughStep): IResolvedWalkthroughStep {\n\t\treturn {\n\t\t\t...step,\n\t\t\tdone: false,\n\t\t\t...this.stepProgress[step.id]\n\t\t};\n\t}\n\n\tprogressStep(id: string) {\n\t\tconst oldProgress = this.stepProgress[id];\n\t\tif (!oldProgress || oldProgress.done !== true) {\n\t\t\tthis.stepProgress[id] = { done: true };\n\t\t\tthis.memento.saveMemento();\n\t\t\tconst step = this.getStep(id);\n\t\t\tif (!step) { throw Error('Tried to progress unknown step'); }\n\n\t\t\tthis._onDidProgressStep.fire(this.getStepProgress(step));\n\t\t}\n\t}\n\n\tdeprogressStep(id: string) {\n\t\tdelete this.stepProgress[id];\n\t\tthis.memento.saveMemento();\n\t\tconst step = this.getStep(id);\n\t\tthis._onDidProgressStep.fire(this.getStepProgress(step));\n\t}\n\n\tprogressByEvent(event: string): void {\n\t\tif (this.sessionEvents.has(event)) { return; }\n\n\t\tthis.sessionEvents.add(event);\n\t\tthis.completionListeners.get(event)?.forEach(id => this.progressStep(id));\n\t}\n\n\tregisterWalkthrough(walkthoughDescriptor: IWalkthroughLoose) {\n\t\tthis._registerWalkthrough({\n\t\t\t...walkthoughDescriptor,\n\t\t\tsteps: walkthoughDescriptor.steps.map(step => ({ ...step, description: parseDescription(step.description) }))\n\t\t});\n\t}\n\n\t_registerWalkthrough(walkthroughDescriptor: IWalkthrough): void {\n\t\tconst oldCategory = this.gettingStartedContributions.get(walkthroughDescriptor.id);\n\t\tif (oldCategory) {\n\t\t\tconsole.error(`Skipping attempt to overwrite walkthrough. (${walkthroughDescriptor.id})`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.gettingStartedContributions.set(walkthroughDescriptor.id, walkthroughDescriptor);\n\n\t\twalkthroughDescriptor.steps.forEach(step => {\n\t\t\tif (this.steps.has(step.id)) { throw Error('Attempting to register step with id ' + step.id + ' twice. Second is dropped.'); }\n\t\t\tthis.steps.set(step.id, step);\n\t\t\tstep.when.keys().forEach(key => this.categoryVisibilityContextKeys.add(key));\n\t\t\tthis.registerDoneListeners(step);\n\t\t});\n\n\t\twalkthroughDescriptor.when.keys().forEach(key => this.categoryVisibilityContextKeys.add(key));\n\t}\n\n\tprivate registerDoneListeners(step: IWalkthroughStep) {\n\t\tif ((step as any).doneOn) {\n\t\t\tconsole.error(`wakthrough step`, step, `uses deprecated 'doneOn' property. Adopt 'completionEvents' to silence this warning`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!step.completionEvents.length) {\n\t\t\tstep.completionEvents = coalesce(flatten(\n\t\t\t\tstep.description\n\t\t\t\t\t.filter(linkedText => linkedText.nodes.length === 1) // only buttons\n\t\t\t\t\t.map(linkedText =>\n\t\t\t\t\t\tlinkedText.nodes\n\t\t\t\t\t\t\t.filter(((node): node is ILink => typeof node !== 'string'))\n\t\t\t\t\t\t\t.map(({ href }) => {\n\t\t\t\t\t\t\t\tif (href.startsWith('command:')) {\n\t\t\t\t\t\t\t\t\treturn 'onCommand:' + href.slice('command:'.length, href.includes('?') ? href.indexOf('?') : undefined);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (href.startsWith('https://') || href.startsWith('http://')) {\n\t\t\t\t\t\t\t\t\treturn 'onLink:' + href;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}))));\n\t\t}\n\n\t\tif (!step.completionEvents.length) {\n\t\t\tstep.completionEvents.push('stepSelected');\n\t\t}\n\n\t\tfor (let event of step.completionEvents) {\n\t\t\tconst [_, eventType, argument] = /^([^:]*):?(.*)$/.exec(event) ?? [];\n\n\t\t\tif (!eventType) {\n\t\t\t\tconsole.error(`Unknown completionEvent ${event} when registering step ${step.id}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (eventType) {\n\t\t\t\tcase 'onLink': case 'onEvent': case 'onView': case 'onSettingChanged':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'onContext': {\n\t\t\t\t\tconst expression = ContextKeyExpr.deserialize(argument);\n\t\t\t\t\tif (expression) {\n\t\t\t\t\t\tthis.stepCompletionContextKeyExpressions.add(expression);\n\t\t\t\t\t\texpression.keys().forEach(key => this.stepCompletionContextKeys.add(key));\n\t\t\t\t\t\tevent = eventType + ':' + expression.serialize();\n\t\t\t\t\t\tif (this.contextService.contextMatchesRules(expression)) {\n\t\t\t\t\t\t\tthis.sessionEvents.add(event);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('Unable to parse context key expression:', expression, 'in walkthrough step', step.id);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'onStepSelected': case 'stepSelected':\n\t\t\t\t\tevent = 'stepSelected:' + step.id;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'onCommand':\n\t\t\t\t\tevent = eventType + ':' + argument.replace(/^toSide:/, '');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'onExtensionInstalled': case 'extensionInstalled':\n\t\t\t\t\tevent = 'extensionInstalled:' + argument.toLowerCase();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error(`Unknown completionEvent ${event} when registering step ${step.id}`);\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.registerCompletionListener(event, step);\n\t\t}\n\t}\n\n\tprivate registerCompletionListener(event: string, step: IWalkthroughStep) {\n\t\tif (!this.completionListeners.has(event)) {\n\t\t\tthis.completionListeners.set(event, new Set());\n\t\t}\n\t\tthis.completionListeners.get(event)?.add(step.id);\n\t}\n\n\tprivate getStep(id: string): IWalkthroughStep {\n\t\tconst step = this.steps.get(id);\n\t\tif (!step) { throw Error('Attempting to access step which does not exist in registry ' + id); }\n\t\treturn step;\n\t}\n}\n\nconst parseDescription = (desc: string): LinkedText[] => desc.split('\\n').filter(x => x).map(text => parseLinkedText(text));\n\nexport const convertInternalMediaPathToFileURI = (path: string) => path.startsWith('https://')\n\t? URI.parse(path, true)\n\t: FileAccess.asFileUri(`vs/workbench/contrib/welcomeGettingStarted/common/media/${path}`);\n\nconst convertInternalMediaPathToBrowserURI = (path: string) => path.startsWith('https://')\n\t? URI.parse(path, true)\n\t: FileAccess.asBrowserUri(`vs/workbench/contrib/welcomeGettingStarted/common/media/${path}`);\nconst convertInternalMediaPathsToBrowserURIs = (path: string | { hc: string; hcLight?: string; dark: string; light: string }): { hcDark: URI; hcLight: URI; dark: URI; light: URI } => {\n\tif (typeof path === 'string') {\n\t\tconst converted = convertInternalMediaPathToBrowserURI(path);\n\t\treturn { hcDark: converted, hcLight: converted, dark: converted, light: converted };\n\t} else {\n\t\treturn {\n\t\t\thcDark: convertInternalMediaPathToBrowserURI(path.hc),\n\t\t\thcLight: convertInternalMediaPathToBrowserURI(path.hcLight ?? path.light),\n\t\t\tlight: convertInternalMediaPathToBrowserURI(path.light),\n\t\t\tdark: convertInternalMediaPathToBrowserURI(path.dark)\n\t\t};\n\t}\n};\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'resetGettingStartedProgress',\n\t\t\tcategory: { original: 'Developer', value: localize('developer', \"Developer\") },\n\t\t\ttitle: { original: 'Reset Welcome Page Walkthrough Progress', value: localize('resetWelcomePageWalkthroughProgress', \"Reset Welcome Page Walkthrough Progress\") },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst gettingStartedService = accessor.get(IWalkthroughsService);\n\t\tconst storageService = accessor.get(IStorageService);\n\n\t\tstorageService.store(\n\t\t\thiddenEntriesConfigurationKey,\n\t\t\tJSON.stringify([]),\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.USER);\n\n\t\tstorageService.store(\n\t\t\twalkthroughMetadataConfigurationKey,\n\t\t\tJSON.stringify([]),\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.USER);\n\n\t\tconst memento = new Memento('gettingStartedService', accessor.get(IStorageService));\n\t\tconst record = memento.getMemento(StorageScope.PROFILE, StorageTarget.USER);\n\t\tfor (const key in record) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(record, key)) {\n\t\t\t\ttry {\n\t\t\t\t\tgettingStartedService.deprogressStep(key);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmemento.saveMemento();\n\t}\n});\n\nregisterSingleton(IWalkthroughsService, WalkthroughsService, InstantiationType.Delayed);\n"]}