{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/welcomeGettingStarted/test/browser/gettingStartedMarkdownRenderer.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;IAYhG,KAAK,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC/C,IAAI,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YAC5D,MAAM,WAAW,GAAG,IAAI,4BAAI,EAAa,CAAC;YAC1C,MAAM,eAAe,GAAG,IAAI,sBAAI,EAAa,CAAC;YAC9C,MAAM,QAAQ,GAAG,IAAI,oCAAI,CAA0B,WAAW,EAAE,IAAI,8BAAI,EAAqB,EAAE,IAAI,4BAAI,EAAkB,EAAE,eAAe,CAAC,CAAC;YAC5I,MAAM,MAAM,GAAG,IAAA,4BAAI,EAA8B,cAAc,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,sEAAsE,EAAE,CAAC,EAAE,CAAC,CAAC;YACvL,MAAM,MAAM,GAAG,aAAG,CAAQ,SAAS,CAAC,0DAA0D,CAAC,CAAC;YAChG,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAC/D,MAAM,SAAS,GAAG,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACpF,KAAK,MAAM,GAAG,IAAI,SAAS,EAAE;gBAC5B,MAAM,eAAe,GAAG,uIAAuI,CAAC;gBAChK,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,oBAAoB,CAAC,CAAC;aAC9D;YACD,eAAe,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","file":"gettingStartedMarkdownRenderer.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { FileAccess } from 'vs/base/common/network';\nimport { LanguageService } from 'vs/editor/common/services/languageService';\nimport { TestNotificationService } from 'vs/platform/notification/test/common/testNotificationService';\nimport { GettingStartedDetailsRenderer } from 'vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedDetailsRenderer';\nimport { convertInternalMediaPathToFileURI } from 'vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedService';\nimport { TestFileService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { TestExtensionService } from 'vs/workbench/test/common/workbenchTestServices';\n\n\nsuite('Getting Started Markdown Renderer', () => {\n\ttest('renders theme picker markdown with images', async () => {\n\t\tconst fileService = new TestFileService();\n\t\tconst languageService = new LanguageService();\n\t\tconst renderer = new GettingStartedDetailsRenderer(fileService, new TestNotificationService(), new TestExtensionService(), languageService);\n\t\tconst mdPath = convertInternalMediaPathToFileURI('theme_picker').with({ query: JSON.stringify({ moduleId: 'vs/workbench/contrib/welcomeGettingStarted/common/media/theme_picker' }) });\n\t\tconst mdBase = FileAccess.asFileUri('vs/workbench/contrib/welcomeGettingStarted/common/media/');\n\t\tconst rendered = await renderer.renderMarkdown(mdPath, mdBase);\n\t\tconst imageSrcs = [...rendered.matchAll(/img src=\"[^\"]*\"/g)].map(match => match[0]);\n\t\tfor (const src of imageSrcs) {\n\t\t\tconst targetSrcFormat = /^img src=\"https:\\/\\/file\\+.vscode-resource.vscode-cdn.net\\/.*\\/vs\\/workbench\\/contrib\\/welcomeGettingStarted\\/common\\/media\\/.*.png\"$/;\n\t\t\tassert(targetSrcFormat.test(src), `${src} didnt match regex`);\n\t\t}\n\t\tlanguageService.dispose();\n\t});\n});\n"]}