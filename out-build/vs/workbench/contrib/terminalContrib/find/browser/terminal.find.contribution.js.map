{"version":3,"sources":["vs/workbench/contrib/terminalContrib/find/browser/terminal.find.contribution.ts"],"names":[],"mappings":"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","file":"terminal.find.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDimension } from 'vs/base/browser/dom';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Lazy } from 'vs/base/common/lazy';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { findInFilesCommand } from 'vs/workbench/contrib/search/browser/searchActionsFind';\nimport { ITerminalContribution, ITerminalInstance, ITerminalService, IXtermTerminal } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { registerActiveInstanceAction } from 'vs/workbench/contrib/terminal/browser/terminalActions';\nimport { registerTerminalContribution } from 'vs/workbench/contrib/terminal/browser/terminalExtensions';\nimport { TerminalWidgetManager } from 'vs/workbench/contrib/terminal/browser/widgets/widgetManager';\nimport { ITerminalProcessManager, TerminalCommandId } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { TerminalContextKeys } from 'vs/workbench/contrib/terminal/common/terminalContextKey';\nimport { TerminalFindWidget } from 'vs/workbench/contrib/terminalContrib/find/browser/terminalFindWidget';\nimport type { Terminal as RawXtermTerminal } from 'xterm';\n\nclass TerminalFindContribution extends Disposable implements ITerminalContribution {\n\tstatic readonly ID = 'terminal.find';\n\n\tstatic get(instance: ITerminalInstance): TerminalFindContribution | null {\n\t\treturn instance.getContribution<TerminalFindContribution>(TerminalFindContribution.ID);\n\t}\n\n\tprivate _findWidget: Lazy<TerminalFindWidget>;\n\tprivate _lastLayoutDimensions: IDimension | undefined;\n\n\tget findWidget(): TerminalFindWidget { return this._findWidget.value; }\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprocessManager: ITerminalProcessManager,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITerminalService terminalService: ITerminalService\n\t) {\n\t\tsuper();\n\n\t\tthis._findWidget = new Lazy(() => {\n\t\t\tconst findWidget = instantiationService.createInstance(TerminalFindWidget, this._instance);\n\n\t\t\t// Track focus and set state so we can force the scroll bar to be visible\n\t\t\tfindWidget.focusTracker.onDidFocus(() => {\n\t\t\t\tthis._instance.forceScrollbarVisibility();\n\t\t\t\tterminalService.setActiveInstance(this._instance);\n\t\t\t});\n\t\t\tfindWidget.focusTracker.onDidBlur(() => {\n\t\t\t\tthis._instance.resetScrollbarVisibility();\n\t\t\t});\n\n\t\t\tthis._instance.domElement.appendChild(findWidget.getDomNode());\n\t\t\tif (this._lastLayoutDimensions) {\n\t\t\t\tfindWidget.layout(this._lastLayoutDimensions.width);\n\t\t\t}\n\n\t\t\treturn findWidget;\n\t\t});\n\t}\n\n\tlayout(xterm: IXtermTerminal & { raw: RawXtermTerminal }, dimension: IDimension): void {\n\t\tthis._lastLayoutDimensions = dimension;\n\t\tthis._findWidget.rawValue?.layout(dimension.width);\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\tthis._register(xterm.onDidChangeFindResults(() => this._findWidget.rawValue?.updateResultCount()));\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis._findWidget.rawValue?.dispose();\n\t}\n\n}\nregisterTerminalContribution(TerminalFindContribution.ID, TerminalFindContribution);\n\nregisterActiveInstanceAction({\n\tid: TerminalCommandId.FindFocus,\n\ttitle: { value: localize('workbench.action.terminal.focusFind', \"Focus Find\"), original: 'Focus Find' },\n\tkeybinding: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyF,\n\t\twhen: ContextKeyExpr.or(TerminalContextKeys.findFocus, TerminalContextKeys.focus),\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (activeInstance) => {\n\t\tTerminalFindContribution.get(activeInstance)?.findWidget.reveal();\n\t}\n});\n\nregisterActiveInstanceAction({\n\tid: TerminalCommandId.FindHide,\n\ttitle: { value: localize('workbench.action.terminal.hideFind', \"Hide Find\"), original: 'Hide Find' },\n\tkeybinding: {\n\t\tprimary: KeyCode.Escape,\n\t\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\t\twhen: ContextKeyExpr.and(TerminalContextKeys.focus, TerminalContextKeys.findVisible),\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (activeInstance) => {\n\t\tTerminalFindContribution.get(activeInstance)?.findWidget.hide();\n\t}\n});\n\nregisterActiveInstanceAction({\n\tid: TerminalCommandId.ToggleFindRegex,\n\ttitle: { value: localize('workbench.action.terminal.toggleFindRegex', \"Toggle Find Using Regex\"), original: 'Toggle Find Using Regex' },\n\tkeybinding: {\n\t\tprimary: KeyMod.Alt | KeyCode.KeyR,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyR },\n\t\twhen: ContextKeyExpr.or(TerminalContextKeys.focus, TerminalContextKeys.findFocus),\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (activeInstance) => {\n\t\tconst state = TerminalFindContribution.get(activeInstance)?.findWidget.state;\n\t\tstate?.change({ isRegex: !state.isRegex }, false);\n\t}\n});\n\nregisterActiveInstanceAction({\n\tid: TerminalCommandId.ToggleFindWholeWord,\n\ttitle: { value: localize('workbench.action.terminal.toggleFindWholeWord', \"Toggle Find Using Whole Word\"), original: 'Toggle Find Using Whole Word' },\n\tkeybinding: {\n\t\tprimary: KeyMod.Alt | KeyCode.KeyW,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyW },\n\t\twhen: ContextKeyExpr.or(TerminalContextKeys.focus, TerminalContextKeys.findFocus),\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (activeInstance) => {\n\t\tconst state = TerminalFindContribution.get(activeInstance)?.findWidget.state;\n\t\tstate?.change({ wholeWord: !state.wholeWord }, false);\n\t}\n});\n\nregisterActiveInstanceAction({\n\tid: TerminalCommandId.ToggleFindCaseSensitive,\n\ttitle: { value: localize('workbench.action.terminal.toggleFindCaseSensitive', \"Toggle Find Using Case Sensitive\"), original: 'Toggle Find Using Case Sensitive' },\n\tkeybinding: {\n\t\tprimary: KeyMod.Alt | KeyCode.KeyC,\n\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KeyC },\n\t\twhen: ContextKeyExpr.or(TerminalContextKeys.focus, TerminalContextKeys.findFocus),\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (activeInstance) => {\n\t\tconst state = TerminalFindContribution.get(activeInstance)?.findWidget.state;\n\t\tstate?.change({ matchCase: !state.matchCase }, false);\n\t}\n});\n\nregisterActiveInstanceAction({\n\tid: TerminalCommandId.FindNext,\n\ttitle: { value: localize('workbench.action.terminal.findNext', \"Find Next\"), original: 'Find Next' },\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyCode.F3,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.KeyG, secondary: [KeyCode.F3] },\n\t\t\twhen: ContextKeyExpr.or(TerminalContextKeys.focus, TerminalContextKeys.findFocus),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\t{\n\t\t\tprimary: KeyMod.Shift | KeyCode.Enter,\n\t\t\twhen: TerminalContextKeys.findInputFocus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t}\n\t],\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (activeInstance) => {\n\t\tconst widget = TerminalFindContribution.get(activeInstance)?.findWidget;\n\t\tif (widget) {\n\t\t\twidget.show();\n\t\t\twidget.find(false);\n\t\t}\n\t}\n});\n\nregisterActiveInstanceAction({\n\tid: TerminalCommandId.FindPrevious,\n\ttitle: { value: localize('workbench.action.terminal.findPrevious', \"Find Previous\"), original: 'Find Previous' },\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyMod.Shift | KeyCode.F3,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyG, secondary: [KeyMod.Shift | KeyCode.F3] },\n\t\t\twhen: ContextKeyExpr.or(TerminalContextKeys.focus, TerminalContextKeys.findFocus),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t},\n\t\t{\n\t\t\tprimary: KeyCode.Enter,\n\t\t\twhen: TerminalContextKeys.findInputFocus,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib\n\t\t}\n\t],\n\tprecondition: ContextKeyExpr.or(TerminalContextKeys.processSupported, TerminalContextKeys.terminalHasBeenCreated),\n\trun: (activeInstance) => {\n\t\tconst widget = TerminalFindContribution.get(activeInstance)?.findWidget;\n\t\tif (widget) {\n\t\t\twidget.show();\n\t\t\twidget.find(true);\n\t\t}\n\t}\n});\n\n// Global workspace file search\nregisterActiveInstanceAction({\n\tid: TerminalCommandId.SearchWorkspace,\n\ttitle: { value: localize('workbench.action.terminal.searchWorkspace', \"Search Workspace\"), original: 'Search Workspace' },\n\tkeybinding: [\n\t\t{\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyF,\n\t\t\twhen: ContextKeyExpr.and(TerminalContextKeys.processSupported, TerminalContextKeys.focus, TerminalContextKeys.textSelected),\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50\n\t\t}\n\t],\n\trun: (activeInstance, c, accessor) => findInFilesCommand(accessor, { query: activeInstance.selection })\n});\n"]}