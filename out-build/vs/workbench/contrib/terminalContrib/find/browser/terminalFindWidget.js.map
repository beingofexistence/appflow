{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminalContrib/find/browser/terminalFindWidget.ts"],"names":[],"mappings":"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","file":"terminalFindWidget.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SimpleFindWidget } from 'vs/workbench/contrib/codeEditor/browser/find/simpleFindWidget';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IContextKeyService, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { ITerminalInstance, IXtermTerminal, XtermTerminalConstants } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { TerminalContextKeys } from 'vs/workbench/contrib/terminal/common/terminalContextKey';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { Event } from 'vs/base/common/event';\nimport type { ISearchOptions } from 'xterm-addon-search';\nimport { TerminalCommandId } from 'vs/workbench/contrib/terminal/common/terminal';\n\nconst TERMINAL_FIND_WIDGET_INITIAL_WIDTH = 419;\n\nexport class TerminalFindWidget extends SimpleFindWidget {\n\tprivate _findInputFocused: IContextKey<boolean>;\n\tprivate _findWidgetFocused: IContextKey<boolean>;\n\tprivate _findWidgetVisible: IContextKey<boolean>;\n\n\tconstructor(\n\t\tprivate _instance: ITerminalInstance,\n\t\t@IContextViewService _contextViewService: IContextViewService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService\n\t) {\n\t\tsuper({\n\t\t\tshowCommonFindToggles: true,\n\t\t\tcheckImeCompletionState: true,\n\t\t\tshowResultCount: true,\n\t\t\tinitialWidth: TERMINAL_FIND_WIDGET_INITIAL_WIDTH,\n\t\t\tenableSash: true,\n\t\t\tappendCaseSensitiveActionId: TerminalCommandId.ToggleFindCaseSensitive,\n\t\t\tappendRegexActionId: TerminalCommandId.ToggleFindRegex,\n\t\t\tappendWholeWordsActionId: TerminalCommandId.ToggleFindWholeWord,\n\t\t\tpreviousMatchActionId: TerminalCommandId.FindPrevious,\n\t\t\tnextMatchActionId: TerminalCommandId.FindNext,\n\t\t\tcloseWidgetActionId: TerminalCommandId.FindHide,\n\t\t\ttype: 'Terminal',\n\t\t\tmatchesLimit: XtermTerminalConstants.SearchHighlightLimit\n\t\t}, _contextViewService, _contextKeyService, keybindingService);\n\n\t\tthis._register(this.state.onFindReplaceStateChange(() => {\n\t\t\tthis.show();\n\t\t}));\n\t\tthis._findInputFocused = TerminalContextKeys.findInputFocus.bindTo(this._contextKeyService);\n\t\tthis._findWidgetFocused = TerminalContextKeys.findFocus.bindTo(this._contextKeyService);\n\t\tthis._findWidgetVisible = TerminalContextKeys.findVisible.bindTo(this._contextKeyService);\n\t\tthis._register(this._themeService.onDidColorThemeChange(() => {\n\t\t\tif (this.isVisible()) {\n\t\t\t\tthis.find(true, true);\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._configurationService.onDidChangeConfiguration((e) => {\n\t\t\tif (e.affectsConfiguration('workbench.colorCustomizations') && this.isVisible()) {\n\t\t\t\tthis.find(true, true);\n\t\t\t}\n\t\t}));\n\n\t\tthis.updateResultCount();\n\t}\n\n\tfind(previous: boolean, update?: boolean) {\n\t\tconst xterm = this._instance.xterm;\n\t\tif (!xterm) {\n\t\t\treturn;\n\t\t}\n\t\tif (previous) {\n\t\t\tthis._findPreviousWithEvent(xterm, this.inputValue, { regex: this._getRegexValue(), wholeWord: this._getWholeWordValue(), caseSensitive: this._getCaseSensitiveValue(), incremental: update });\n\t\t} else {\n\t\t\tthis._findNextWithEvent(xterm, this.inputValue, { regex: this._getRegexValue(), wholeWord: this._getWholeWordValue(), caseSensitive: this._getCaseSensitiveValue() });\n\t\t}\n\t}\n\n\toverride reveal(): void {\n\t\tconst initialInput = this._instance.hasSelection() && !this._instance.selection!.includes('\\n') ? this._instance.selection : undefined;\n\t\tconst inputValue = initialInput ?? this.inputValue;\n\t\tconst xterm = this._instance.xterm;\n\t\tif (xterm && inputValue && inputValue !== '') {\n\t\t\t// trigger highlight all matches\n\t\t\tthis._findPreviousWithEvent(xterm, inputValue, { incremental: true, regex: this._getRegexValue(), wholeWord: this._getWholeWordValue(), caseSensitive: this._getCaseSensitiveValue() }).then(foundMatch => {\n\t\t\t\tthis.updateButtons(foundMatch);\n\t\t\t\tthis._register(Event.once(xterm.onDidChangeSelection)(() => xterm.clearActiveSearchDecoration()));\n\t\t\t});\n\t\t}\n\t\tthis.updateButtons(false);\n\n\t\tsuper.reveal(inputValue);\n\t\tthis._findWidgetVisible.set(true);\n\t}\n\n\toverride show() {\n\t\tconst initialInput = this._instance.hasSelection() && !this._instance.selection!.includes('\\n') ? this._instance.selection : undefined;\n\t\tsuper.show(initialInput);\n\t\tthis._findWidgetVisible.set(true);\n\t}\n\n\toverride hide() {\n\t\tsuper.hide();\n\t\tthis._findWidgetVisible.reset();\n\t\tthis._instance.focus(true);\n\t\tthis._instance.xterm?.clearSearchDecorations();\n\t}\n\n\tprotected async _getResultCount(): Promise<{ resultIndex: number; resultCount: number } | undefined> {\n\t\treturn this._instance.xterm?.findResult;\n\t}\n\n\tprotected _onInputChanged() {\n\t\t// Ignore input changes for now\n\t\tconst xterm = this._instance.xterm;\n\t\tif (xterm) {\n\t\t\tthis._findPreviousWithEvent(xterm, this.inputValue, { regex: this._getRegexValue(), wholeWord: this._getWholeWordValue(), caseSensitive: this._getCaseSensitiveValue(), incremental: true }).then(foundMatch => {\n\t\t\t\tthis.updateButtons(foundMatch);\n\t\t\t});\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _onFocusTrackerFocus() {\n\t\tthis._findWidgetFocused.set(true);\n\t}\n\n\tprotected _onFocusTrackerBlur() {\n\t\tthis._instance.xterm?.clearActiveSearchDecoration();\n\t\tthis._findWidgetFocused.reset();\n\t}\n\n\tprotected _onFindInputFocusTrackerFocus() {\n\t\tthis._findInputFocused.set(true);\n\t}\n\n\tprotected _onFindInputFocusTrackerBlur() {\n\t\tthis._findInputFocused.reset();\n\t}\n\n\tfindFirst() {\n\t\tconst instance = this._instance;\n\t\tif (instance.hasSelection()) {\n\t\t\tinstance.clearSelection();\n\t\t}\n\t\tconst xterm = instance.xterm;\n\t\tif (xterm) {\n\t\t\tthis._findPreviousWithEvent(xterm, this.inputValue, { regex: this._getRegexValue(), wholeWord: this._getWholeWordValue(), caseSensitive: this._getCaseSensitiveValue() });\n\t\t}\n\t}\n\n\tprivate async _findNextWithEvent(xterm: IXtermTerminal, term: string, options: ISearchOptions): Promise<boolean> {\n\t\treturn xterm.findNext(term, options).then(foundMatch => {\n\t\t\tthis._register(Event.once(xterm.onDidChangeSelection)(() => xterm.clearActiveSearchDecoration()));\n\t\t\treturn foundMatch;\n\t\t});\n\t}\n\n\tprivate async _findPreviousWithEvent(xterm: IXtermTerminal, term: string, options: ISearchOptions): Promise<boolean> {\n\t\treturn xterm.findPrevious(term, options).then(foundMatch => {\n\t\t\tthis._register(Event.once(xterm.onDidChangeSelection)(() => xterm.clearActiveSearchDecoration()));\n\t\t\treturn foundMatch;\n\t\t});\n\t}\n}\n"]}