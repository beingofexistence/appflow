{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminalContrib/links/browser/terminalLinkHelpers.ts"],"names":[],"mappings":"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","file":"terminalLinkHelpers.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IViewportRange, IBufferRange, IBufferLine, IBuffer, IBufferCellPosition } from 'xterm';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { IPath, posix, win32 } from 'vs/base/common/path';\nimport { ITerminalCapabilityStore, TerminalCapability } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { ITerminalLogService } from 'vs/platform/terminal/common/terminal';\n\n/**\n * Converts a possibly wrapped link's range (comprised of string indices) into a buffer range that plays nicely with xterm.js\n *\n * @param lines A single line (not the entire buffer)\n * @param bufferWidth The number of columns in the terminal\n * @param range The link range - string indices\n * @param startLine The absolute y position (on the buffer) of the line\n */\nexport function convertLinkRangeToBuffer(\n\tlines: IBufferLine[],\n\tbufferWidth: number,\n\trange: IRange,\n\tstartLine: number\n): IBufferRange {\n\tconst bufferRange: IBufferRange = {\n\t\tstart: {\n\t\t\tx: range.startColumn,\n\t\t\ty: range.startLineNumber + startLine\n\t\t},\n\t\tend: {\n\t\t\tx: range.endColumn - 1,\n\t\t\ty: range.endLineNumber + startLine\n\t\t}\n\t};\n\n\t// Shift start range right for each wide character before the link\n\tlet startOffset = 0;\n\tconst startWrappedLineCount = Math.ceil(range.startColumn / bufferWidth);\n\tfor (let y = 0; y < Math.min(startWrappedLineCount); y++) {\n\t\tconst lineLength = Math.min(bufferWidth, (range.startColumn - 1) - y * bufferWidth);\n\t\tlet lineOffset = 0;\n\t\tconst line = lines[y];\n\t\t// Sanity check for line, apparently this can happen but it's not clear under what\n\t\t// circumstances this happens. Continue on, skipping the remainder of start offset if this\n\t\t// happens to minimize impact.\n\t\tif (!line) {\n\t\t\tbreak;\n\t\t}\n\t\tfor (let x = 0; x < Math.min(bufferWidth, lineLength + lineOffset); x++) {\n\t\t\tconst cell = line.getCell(x);\n\t\t\t// This is unexpected but it means the character doesn't exist, so we shouldn't add to\n\t\t\t// the offset\n\t\t\tif (!cell) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst width = cell.getWidth();\n\t\t\tif (width === 2) {\n\t\t\t\tlineOffset++;\n\t\t\t}\n\t\t\tconst char = cell.getChars();\n\t\t\tif (char.length > 1) {\n\t\t\t\tlineOffset -= char.length - 1;\n\t\t\t}\n\t\t}\n\t\tstartOffset += lineOffset;\n\t}\n\n\t// Shift end range right for each wide character inside the link\n\tlet endOffset = 0;\n\tconst endWrappedLineCount = Math.ceil(range.endColumn / bufferWidth);\n\tfor (let y = Math.max(0, startWrappedLineCount - 1); y < endWrappedLineCount; y++) {\n\t\tconst start = (y === startWrappedLineCount - 1 ? (range.startColumn - 1 + startOffset) % bufferWidth : 0);\n\t\tconst lineLength = Math.min(bufferWidth, range.endColumn + startOffset - y * bufferWidth);\n\t\tlet lineOffset = 0;\n\t\tconst line = lines[y];\n\t\t// Sanity check for line, apparently this can happen but it's not clear under what\n\t\t// circumstances this happens. Continue on, skipping the remainder of start offset if this\n\t\t// happens to minimize impact.\n\t\tif (!line) {\n\t\t\tbreak;\n\t\t}\n\t\tfor (let x = start; x < Math.min(bufferWidth, lineLength + lineOffset); x++) {\n\t\t\tconst cell = line.getCell(x);\n\t\t\t// This is unexpected but it means the character doesn't exist, so we shouldn't add to\n\t\t\t// the offset\n\t\t\tif (!cell) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst width = cell.getWidth();\n\t\t\tconst chars = cell.getChars();\n\t\t\t// Offset for null cells following wide characters\n\t\t\tif (width === 2) {\n\t\t\t\tlineOffset++;\n\t\t\t}\n\t\t\t// Offset for early wrapping when the last cell in row is a wide character\n\t\t\tif (x === bufferWidth - 1 && chars === '') {\n\t\t\t\tlineOffset++;\n\t\t\t}\n\t\t\t// Offset multi-code characters like emoji\n\t\t\tif (chars.length > 1) {\n\t\t\t\tlineOffset -= chars.length - 1;\n\t\t\t}\n\t\t}\n\t\tendOffset += lineOffset;\n\t}\n\n\t// Apply the width character offsets to the result\n\tbufferRange.start.x += startOffset;\n\tbufferRange.end.x += startOffset + endOffset;\n\n\t// Convert back to wrapped lines\n\twhile (bufferRange.start.x > bufferWidth) {\n\t\tbufferRange.start.x -= bufferWidth;\n\t\tbufferRange.start.y++;\n\t}\n\twhile (bufferRange.end.x > bufferWidth) {\n\t\tbufferRange.end.x -= bufferWidth;\n\t\tbufferRange.end.y++;\n\t}\n\n\treturn bufferRange;\n}\n\nexport function convertBufferRangeToViewport(bufferRange: IBufferRange, viewportY: number): IViewportRange {\n\treturn {\n\t\tstart: {\n\t\t\tx: bufferRange.start.x - 1,\n\t\t\ty: bufferRange.start.y - viewportY - 1\n\t\t},\n\t\tend: {\n\t\t\tx: bufferRange.end.x - 1,\n\t\t\ty: bufferRange.end.y - viewportY - 1\n\t\t}\n\t};\n}\n\nexport function getXtermLineContent(buffer: IBuffer, lineStart: number, lineEnd: number, cols: number): string {\n\t// Cap the maximum number of lines generated to prevent potential performance problems. This is\n\t// more of a sanity check as the wrapped line should already be trimmed down at this point.\n\tconst maxLineLength = Math.max(2048, cols * 2);\n\tlineEnd = Math.min(lineEnd, lineStart + maxLineLength);\n\tlet content = '';\n\tfor (let i = lineStart; i <= lineEnd; i++) {\n\t\t// Make sure only 0 to cols are considered as resizing when windows mode is enabled will\n\t\t// retain buffer data outside of the terminal width as reflow is disabled.\n\t\tconst line = buffer.getLine(i);\n\t\tif (line) {\n\t\t\tcontent += line.translateToString(true, 0, cols);\n\t\t}\n\t}\n\treturn content;\n}\n\nexport function getXtermRangesByAttr(buffer: IBuffer, lineStart: number, lineEnd: number, cols: number): IBufferRange[] {\n\tlet bufferRangeStart: IBufferCellPosition | undefined = undefined;\n\tlet lastFgAttr: number = -1;\n\tlet lastBgAttr: number = -1;\n\tconst ranges: IBufferRange[] = [];\n\tfor (let y = lineStart; y <= lineEnd; y++) {\n\t\tconst line = buffer.getLine(y);\n\t\tif (!line) {\n\t\t\tcontinue;\n\t\t}\n\t\tfor (let x = 0; x < cols; x++) {\n\t\t\tconst cell = line.getCell(x);\n\t\t\tif (!cell) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// HACK: Re-construct the attributes from fg and bg, this is hacky as it relies\n\t\t\t// upon the internal buffer bit layout\n\t\t\tconst thisFgAttr = (\n\t\t\t\tcell.isBold() |\n\t\t\t\tcell.isInverse() |\n\t\t\t\tcell.isStrikethrough() |\n\t\t\t\tcell.isUnderline()\n\t\t\t);\n\t\t\tconst thisBgAttr = (\n\t\t\t\tcell.isDim() |\n\t\t\t\tcell.isItalic()\n\t\t\t);\n\t\t\tif (lastFgAttr === -1 || lastBgAttr === -1) {\n\t\t\t\tbufferRangeStart = { x, y };\n\t\t\t} else {\n\t\t\t\tif (lastFgAttr !== thisFgAttr || lastBgAttr !== thisBgAttr) {\n\t\t\t\t\t// TODO: x overflow\n\t\t\t\t\tconst bufferRangeEnd = { x, y };\n\t\t\t\t\tranges.push({\n\t\t\t\t\t\tstart: bufferRangeStart!,\n\t\t\t\t\t\tend: bufferRangeEnd\n\t\t\t\t\t});\n\t\t\t\t\tbufferRangeStart = { x, y };\n\t\t\t\t}\n\t\t\t}\n\t\t\tlastFgAttr = thisFgAttr;\n\t\t\tlastBgAttr = thisBgAttr;\n\t\t}\n\t}\n\treturn ranges;\n}\n\n\n// export function positionIsInRange(position: IBufferCellPosition, range: IBufferRange): boolean {\n// \tif (position.y < range.start.y || position.y > range.end.y) {\n// \t\treturn false;\n// \t}\n// \tif (position.y === range.start.y && position.x < range.start.x) {\n// \t\treturn false;\n// \t}\n// \tif (position.y === range.end.y && position.x > range.end.x) {\n// \t\treturn false;\n// \t}\n// \treturn true;\n// }\n\n/**\n * For shells with the CommandDetection capability, the cwd for a command relative to the line of\n * the particular link can be used to narrow down the result for an exact file match.\n */\nexport function updateLinkWithRelativeCwd(capabilities: ITerminalCapabilityStore, y: number, text: string, osPath: IPath, logService: ITerminalLogService): string[] | undefined {\n\tconst cwd = capabilities.get(TerminalCapability.CommandDetection)?.getCwdForLine(y);\n\tlogService.trace('terminalLinkHelpers#updateLinkWithRelativeCwd cwd', cwd);\n\tif (!cwd) {\n\t\treturn undefined;\n\t}\n\tconst result: string[] = [];\n\tconst sep = osPath.sep;\n\tif (!text.includes(sep)) {\n\t\tresult.push(osPath.resolve(cwd + sep + text));\n\t} else {\n\t\tlet commonDirs = 0;\n\t\tlet i = 0;\n\t\tconst cwdPath = cwd.split(sep).reverse();\n\t\tconst linkPath = text.split(sep);\n\t\t// Get all results as candidates, prioritizing the link with the most common directories.\n\t\t// For example if in the directory /home/common and the link is common/file, the result\n\t\t// should be: `['/home/common/common/file', '/home/common/file']`. The first is the most\n\t\t// likely as cwd detection is active.\n\t\twhile (i < cwdPath.length) {\n\t\t\tresult.push(osPath.resolve(cwd + sep + linkPath.slice(commonDirs).join(sep)));\n\t\t\tif (cwdPath[i] === linkPath[i]) {\n\t\t\t\tcommonDirs++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function osPathModule(os: OperatingSystem): IPath {\n\treturn os === OperatingSystem.Windows ? win32 : posix;\n}\n"]}