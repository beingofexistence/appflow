{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminalContrib/links/browser/terminalLinkProviderService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAOhG,MAAa,IAAI;QAAjB;YAGS,MAAC,GAAgB,IAAI,GAAG,EAAiC,CAAC;YAGjD,MAAC,GAAuB,IAAI,WAAG,EAAqC,CAAC;YAErE,MAAC,GAA0B,IAAI,WAAG,EAAqC,CAAC;QAiB1F,CAAC;QArBA,IAAI,aAAa,KAAiD,OAAO,IAAI,CAAC,CAAC,CAAc,CAAC,CAAC;QAG/F,IAAI,oBAAoB,KAA2C,OAAO,IAAI,CAAC,CAAC,CAAqB,KAAK,CAAC,CAAC,CAAC;QAE7G,IAAI,uBAAuB,KAA2C,OAAO,IAAI,CAAC,CAAC,CAAwB,KAAK,CAAC,CAAC,CAAC;QAEnH,oBAAoB,CAAC,YAA2C;YAC/D,MAAM,WAAW,GAAkB,EAAE,CAAC;YACtC,IAAI,CAAC,CAAC,CAAc,GAAG,CAAC,YAAY,CAAC,CAAC;YACtC,IAAI,CAAC,CAAC,CAAqB,IAAI,CAAC,YAAY,CAAC,CAAC;YAC9C,OAAO;gBACN,OAAO,EAAE,GAAG,EAAE;oBACb,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;wBACrC,UAAU,CAAC,OAAO,EAAE,CAAC;qBACrB;oBACD,IAAI,CAAC,CAAC,CAAc,MAAM,CAAC,YAAY,CAAC,CAAC;oBACzC,IAAI,CAAC,CAAC,CAAwB,IAAI,CAAC,YAAY,CAAC,CAAC;gBAClD,CAAC;aACD,CAAC;QACH,CAAC;KACD;IAzBD,oBAyBC","file":"terminalLinkProviderService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITerminalExternalLinkProvider } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { ITerminalLinkProviderService } from 'vs/workbench/contrib/terminalContrib/links/browser/links';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport class TerminalLinkProviderService implements ITerminalLinkProviderService {\n\tdeclare _serviceBrand: undefined;\n\n\tprivate _linkProviders = new Set<ITerminalExternalLinkProvider>();\n\tget linkProviders(): ReadonlySet<ITerminalExternalLinkProvider> { return this._linkProviders; }\n\n\tprivate readonly _onDidAddLinkProvider = new Emitter<ITerminalExternalLinkProvider>();\n\tget onDidAddLinkProvider(): Event<ITerminalExternalLinkProvider> { return this._onDidAddLinkProvider.event; }\n\tprivate readonly _onDidRemoveLinkProvider = new Emitter<ITerminalExternalLinkProvider>();\n\tget onDidRemoveLinkProvider(): Event<ITerminalExternalLinkProvider> { return this._onDidRemoveLinkProvider.event; }\n\n\tregisterLinkProvider(linkProvider: ITerminalExternalLinkProvider): IDisposable {\n\t\tconst disposables: IDisposable[] = [];\n\t\tthis._linkProviders.add(linkProvider);\n\t\tthis._onDidAddLinkProvider.fire(linkProvider);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tfor (const disposable of disposables) {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t}\n\t\t\t\tthis._linkProviders.delete(linkProvider);\n\t\t\t\tthis._onDidRemoveLinkProvider.fire(linkProvider);\n\t\t\t}\n\t\t};\n\t}\n}\n"]}