{"version":3,"sources":["vs/workbench/contrib/terminalContrib/links/browser/terminalLinkQuickpick.ts"],"names":[],"mappings":"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","file":"terminalLinkQuickpick.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventType } from 'vs/base/browser/dom';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { localize } from 'vs/nls';\nimport { QuickPickItem, IQuickInputService, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { IDetectedLinks } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalLinkManager';\nimport { TerminalLinkQuickPickEvent } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport type { ILink } from 'xterm';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nexport class TerminalLinkQuickpick extends DisposableStore {\n\n\tprivate readonly _onDidRequestMoreLinks = this.add(new Emitter<void>());\n\treadonly onDidRequestMoreLinks = this._onDidRequestMoreLinks.event;\n\n\tconstructor(\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync show(links: { viewport: IDetectedLinks; all: Promise<IDetectedLinks> }): Promise<void> {\n\t\t// Get raw link picks\n\t\tconst wordPicks = links.viewport.wordLinks ? await this._generatePicks(links.viewport.wordLinks) : undefined;\n\t\tconst filePicks = links.viewport.fileLinks ? await this._generatePicks(links.viewport.fileLinks) : undefined;\n\t\tconst folderPicks = links.viewport.folderLinks ? await this._generatePicks(links.viewport.folderLinks) : undefined;\n\t\tconst webPicks = links.viewport.webLinks ? await this._generatePicks(links.viewport.webLinks) : undefined;\n\n\t\tconst picks: LinkQuickPickItem[] = [];\n\t\tif (webPicks) {\n\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.urlLinks', \"Url\") });\n\t\t\tpicks.push(...webPicks);\n\t\t}\n\t\tif (filePicks) {\n\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.localFileLinks', \"File\") });\n\t\t\tpicks.push(...filePicks);\n\t\t}\n\t\tif (folderPicks) {\n\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.localFolderLinks', \"Folder\") });\n\t\t\tpicks.push(...folderPicks);\n\t\t}\n\t\tif (wordPicks) {\n\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.searchLinks', \"Workspace Search\") });\n\t\t\tpicks.push(...wordPicks);\n\t\t}\n\n\t\t// Create and show quick pick\n\t\tconst pick = this._quickInputService.createQuickPick<IQuickPickItem | ITerminalLinkQuickPickItem>();\n\t\tpick.items = picks;\n\t\tpick.placeholder = localize('terminal.integrated.openDetectedLink', \"Select the link to open, type to filter all links\");\n\t\tpick.sortByLabel = false;\n\t\tpick.show();\n\n\t\t// Show all results only when filtering begins, this is done so the quick pick will show up\n\t\t// ASAP with only the viewport entries.\n\t\tlet accepted = false;\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(Event.once(pick.onDidChangeValue)(async () => {\n\t\t\tconst allLinks = await links.all;\n\t\t\tif (accepted) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst wordIgnoreLinks = [...(allLinks.fileLinks ?? []), ...(allLinks.folderLinks ?? []), ...(allLinks.webLinks ?? [])];\n\n\t\t\tconst wordPicks = allLinks.wordLinks ? await this._generatePicks(allLinks.wordLinks, wordIgnoreLinks) : undefined;\n\t\t\tconst filePicks = allLinks.fileLinks ? await this._generatePicks(allLinks.fileLinks) : undefined;\n\t\t\tconst folderPicks = allLinks.folderLinks ? await this._generatePicks(allLinks.folderLinks) : undefined;\n\t\t\tconst webPicks = allLinks.webLinks ? await this._generatePicks(allLinks.webLinks) : undefined;\n\t\t\tconst picks: LinkQuickPickItem[] = [];\n\t\t\tif (webPicks) {\n\t\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.urlLinks', \"Url\") });\n\t\t\t\tpicks.push(...webPicks);\n\t\t\t}\n\t\t\tif (filePicks) {\n\t\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.localFileLinks', \"File\") });\n\t\t\t\tpicks.push(...filePicks);\n\t\t\t}\n\t\t\tif (folderPicks) {\n\t\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.localFolderLinks', \"Folder\") });\n\t\t\t\tpicks.push(...folderPicks);\n\t\t\t}\n\t\t\tif (wordPicks) {\n\t\t\t\tpicks.push({ type: 'separator', label: localize('terminal.integrated.searchLinks', \"Workspace Search\") });\n\t\t\t\tpicks.push(...wordPicks);\n\t\t\t}\n\t\t\tpick.items = picks;\n\t\t}));\n\n\t\treturn new Promise(r => {\n\t\t\tdisposables.add(pick.onDidHide(() => {\n\t\t\t\tdisposables.dispose();\n\t\t\t\tr();\n\t\t\t}));\n\t\t\tdisposables.add(Event.once(pick.onDidAccept)(() => {\n\t\t\t\taccepted = true;\n\t\t\t\tconst event = new TerminalLinkQuickPickEvent(EventType.CLICK);\n\t\t\t\tconst activeItem = pick.activeItems?.[0];\n\t\t\t\tif (activeItem && 'link' in activeItem) {\n\t\t\t\t\tactiveItem.link.activate(event, activeItem.label);\n\t\t\t\t}\n\t\t\t\tdisposables.dispose();\n\t\t\t\tr();\n\t\t\t}));\n\t\t});\n\t}\n\n\t/**\n\t * @param ignoreLinks Links with labels to not include in the picks.\n\t */\n\tprivate async _generatePicks(links: ILink[], ignoreLinks?: ILink[]): Promise<ITerminalLinkQuickPickItem[] | undefined> {\n\t\tif (!links) {\n\t\t\treturn;\n\t\t}\n\t\tconst linkKeys: Set<string> = new Set();\n\t\tconst picks: ITerminalLinkQuickPickItem[] = [];\n\t\tfor (const link of links) {\n\t\t\tconst label = link.text;\n\t\t\tif (!linkKeys.has(label) && (!ignoreLinks || !ignoreLinks.some(e => e.text === label))) {\n\t\t\t\tlinkKeys.add(label);\n\t\t\t\tpicks.push({ label, link });\n\t\t\t}\n\t\t}\n\t\treturn picks.length > 0 ? picks : undefined;\n\t}\n}\n\nexport interface ITerminalLinkQuickPickItem extends IQuickPickItem {\n\tlink: ILink;\n}\n\ntype LinkQuickPickItem = ITerminalLinkQuickPickItem | QuickPickItem;\n"]}