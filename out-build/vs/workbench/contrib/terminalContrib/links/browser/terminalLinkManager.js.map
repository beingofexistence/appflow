{"version":3,"sources":["vs/workbench/contrib/terminalContrib/links/browser/terminalLinkManager.ts"],"names":[],"mappings":"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","file":"terminalLinkManager.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventType } from 'vs/base/browser/dom';\nimport { IMarkdownString, MarkdownString } from 'vs/base/common/htmlContent';\nimport { DisposableStore, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { isMacintosh, OS } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport * as nls from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITunnelService } from 'vs/platform/tunnel/common/tunnel';\nimport { ITerminalLinkDetector, ITerminalLinkOpener, ITerminalLinkResolver, ITerminalSimpleLink, OmitFirstArg, TerminalBuiltinLinkType, TerminalLinkType } from 'vs/workbench/contrib/terminalContrib/links/browser/links';\nimport { TerminalExternalLinkDetector } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalExternalLinkDetector';\nimport { TerminalLink } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalLink';\nimport { TerminalLinkDetectorAdapter } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalLinkDetectorAdapter';\nimport { TerminalLocalFileLinkOpener, TerminalLocalFolderInWorkspaceLinkOpener, TerminalLocalFolderOutsideWorkspaceLinkOpener, TerminalSearchLinkOpener, TerminalUrlLinkOpener } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalLinkOpeners';\nimport { TerminalLocalLinkDetector } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalLocalLinkDetector';\nimport { TerminalUriLinkDetector } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalUriLinkDetector';\nimport { TerminalWordLinkDetector } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalWordLinkDetector';\nimport { ITerminalExternalLinkProvider, TerminalLinkQuickPickEvent } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { ILinkHoverTargetOptions, TerminalHover } from 'vs/workbench/contrib/terminal/browser/widgets/terminalHoverWidget';\nimport { TerminalWidgetManager } from 'vs/workbench/contrib/terminal/browser/widgets/widgetManager';\nimport { IXtermCore } from 'vs/workbench/contrib/terminal/browser/xterm-private';\nimport { ITerminalCapabilityStore } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { ITerminalConfiguration, ITerminalProcessInfo, TERMINAL_CONFIG_SECTION } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IHoverAction } from 'vs/workbench/services/hover/browser/hover';\nimport type { ILink, ILinkProvider, IViewportRange, Terminal } from 'xterm';\nimport { convertBufferRangeToViewport } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalLinkHelpers';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { ITerminalLogService } from 'vs/platform/terminal/common/terminal';\nimport { TerminalMultiLineLinkDetector } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalMultiLineLinkDetector';\n\nexport type XtermLinkMatcherHandler = (event: MouseEvent | undefined, link: string) => Promise<void>;\n\n/**\n * An object responsible for managing registration of link matchers and link providers.\n */\nexport class TerminalLinkManager extends DisposableStore {\n\tprivate _widgetManager: TerminalWidgetManager | undefined;\n\tprivate readonly _standardLinkProviders: Map<string, ILinkProvider> = new Map();\n\tprivate readonly _linkProvidersDisposables: IDisposable[] = [];\n\tprivate readonly _externalLinkProviders: IDisposable[] = [];\n\tprivate readonly _openers: Map<TerminalLinkType, ITerminalLinkOpener> = new Map();\n\n\tconstructor(\n\t\tprivate readonly _xterm: Terminal,\n\t\tprivate readonly _processInfo: ITerminalProcessInfo,\n\t\tcapabilities: ITerminalCapabilityStore,\n\t\tprivate readonly _linkResolver: ITerminalLinkResolver,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ITerminalLogService private readonly _logService: ITerminalLogService,\n\t\t@ITunnelService private readonly _tunnelService: ITunnelService\n\t) {\n\t\tsuper();\n\n\t\tlet enableFileLinks: boolean = true;\n\t\tconst enableFileLinksConfig = this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION).enableFileLinks as ITerminalConfiguration['enableFileLinks'] | boolean;\n\t\tswitch (enableFileLinksConfig) {\n\t\t\tcase 'off':\n\t\t\tcase false: // legacy from v1.75\n\t\t\t\tenableFileLinks = false;\n\t\t\t\tbreak;\n\t\t\tcase 'notRemote':\n\t\t\t\tenableFileLinks = !this._processInfo.remoteAuthority;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Setup link detectors in their order of priority\n\t\tthis._setupLinkDetector(TerminalUriLinkDetector.id, this._instantiationService.createInstance(TerminalUriLinkDetector, this._xterm, this._processInfo, this._linkResolver));\n\t\tif (enableFileLinks) {\n\t\t\tthis._setupLinkDetector(TerminalMultiLineLinkDetector.id, this._instantiationService.createInstance(TerminalMultiLineLinkDetector, this._xterm, this._processInfo, this._linkResolver));\n\t\t\tthis._setupLinkDetector(TerminalLocalLinkDetector.id, this._instantiationService.createInstance(TerminalLocalLinkDetector, this._xterm, capabilities, this._processInfo, this._linkResolver));\n\t\t}\n\t\tthis._setupLinkDetector(TerminalWordLinkDetector.id, this.add(this._instantiationService.createInstance(TerminalWordLinkDetector, this._xterm)));\n\n\t\t// Setup link openers\n\t\tconst localFileOpener = this._instantiationService.createInstance(TerminalLocalFileLinkOpener);\n\t\tconst localFolderInWorkspaceOpener = this._instantiationService.createInstance(TerminalLocalFolderInWorkspaceLinkOpener);\n\t\tthis._openers.set(TerminalBuiltinLinkType.LocalFile, localFileOpener);\n\t\tthis._openers.set(TerminalBuiltinLinkType.LocalFolderInWorkspace, localFolderInWorkspaceOpener);\n\t\tthis._openers.set(TerminalBuiltinLinkType.LocalFolderOutsideWorkspace, this._instantiationService.createInstance(TerminalLocalFolderOutsideWorkspaceLinkOpener));\n\t\tthis._openers.set(TerminalBuiltinLinkType.Search, this._instantiationService.createInstance(TerminalSearchLinkOpener, capabilities, this._processInfo.initialCwd, localFileOpener, localFolderInWorkspaceOpener, () => this._processInfo.os || OS));\n\t\tthis._openers.set(TerminalBuiltinLinkType.Url, this._instantiationService.createInstance(TerminalUrlLinkOpener, !!this._processInfo.remoteAuthority));\n\n\t\tthis._registerStandardLinkProviders();\n\n\t\tlet activeHoverDisposable: IDisposable | undefined;\n\t\tlet activeTooltipScheduler: RunOnceScheduler | undefined;\n\t\tthis.add(toDisposable(() => {\n\t\t\tactiveHoverDisposable?.dispose();\n\t\t\tactiveTooltipScheduler?.dispose();\n\t\t}));\n\t\tthis._xterm.options.linkHandler = {\n\t\t\tactivate: (_, text) => {\n\t\t\t\tthis._openers.get(TerminalBuiltinLinkType.Url)?.open({\n\t\t\t\t\ttype: TerminalBuiltinLinkType.Url,\n\t\t\t\t\ttext,\n\t\t\t\t\tbufferRange: null!,\n\t\t\t\t\turi: URI.parse(text)\n\t\t\t\t});\n\t\t\t},\n\t\t\thover: (e, text, range) => {\n\t\t\t\tactiveHoverDisposable?.dispose();\n\t\t\t\tactiveHoverDisposable = undefined;\n\t\t\t\tactiveTooltipScheduler?.dispose();\n\t\t\t\tactiveTooltipScheduler = new RunOnceScheduler(() => {\n\t\t\t\t\tconst core = (this._xterm as any)._core as IXtermCore;\n\t\t\t\t\tconst cellDimensions = {\n\t\t\t\t\t\twidth: core._renderService.dimensions.css.cell.width,\n\t\t\t\t\t\theight: core._renderService.dimensions.css.cell.height\n\t\t\t\t\t};\n\t\t\t\t\tconst terminalDimensions = {\n\t\t\t\t\t\twidth: this._xterm.cols,\n\t\t\t\t\t\theight: this._xterm.rows\n\t\t\t\t\t};\n\t\t\t\t\tactiveHoverDisposable = this._showHover({\n\t\t\t\t\t\tviewportRange: convertBufferRangeToViewport(range, this._xterm.buffer.active.viewportY),\n\t\t\t\t\t\tcellDimensions,\n\t\t\t\t\t\tterminalDimensions\n\t\t\t\t\t}, this._getLinkHoverString(text, text), undefined, (text) => this._xterm.options.linkHandler?.activate(e, text, range));\n\t\t\t\t\t// Clear out scheduler until next hover event\n\t\t\t\t\tactiveTooltipScheduler?.dispose();\n\t\t\t\t\tactiveTooltipScheduler = undefined;\n\t\t\t\t}, this._configurationService.getValue('workbench.hover.delay'));\n\t\t\t\tactiveTooltipScheduler.schedule();\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate _setupLinkDetector(id: string, detector: ITerminalLinkDetector, isExternal: boolean = false): ILinkProvider {\n\t\tconst detectorAdapter = this.add(this._instantiationService.createInstance(TerminalLinkDetectorAdapter, detector));\n\t\tthis.add(detectorAdapter.onDidActivateLink(e => {\n\t\t\t// Prevent default electron link handling so Alt+Click mode works normally\n\t\t\te.event?.preventDefault();\n\t\t\t// Require correct modifier on click unless event is coming from linkQuickPick selection\n\t\t\tif (e.event && !(e.event instanceof TerminalLinkQuickPickEvent) && !this._isLinkActivationModifierDown(e.event)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Just call the handler if there is no before listener\n\t\t\tif (e.link.activate) {\n\t\t\t\t// Custom activate call (external links only)\n\t\t\t\te.link.activate(e.link.text);\n\t\t\t} else {\n\t\t\t\tthis._openLink(e.link);\n\t\t\t}\n\t\t}));\n\t\tthis.add(detectorAdapter.onDidShowHover(e => this._tooltipCallback(e.link, e.viewportRange, e.modifierDownCallback, e.modifierUpCallback)));\n\t\tif (!isExternal) {\n\t\t\tthis._standardLinkProviders.set(id, detectorAdapter);\n\t\t}\n\t\treturn detectorAdapter;\n\t}\n\n\tprivate async _openLink(link: ITerminalSimpleLink): Promise<void> {\n\t\tthis._logService.debug('Opening link', link);\n\t\tconst opener = this._openers.get(link.type);\n\t\tif (!opener) {\n\t\t\tthrow new Error(`No matching opener for link type \"${link.type}\"`);\n\t\t}\n\t\tawait opener.open(link);\n\t}\n\n\tasync openRecentLink(type: 'localFile' | 'url'): Promise<ILink | undefined> {\n\t\tlet links;\n\t\tlet i = this._xterm.buffer.active.length;\n\t\twhile ((!links || links.length === 0) && i >= this._xterm.buffer.active.viewportY) {\n\t\t\tlinks = await this._getLinksForType(i, type);\n\t\t\ti--;\n\t\t}\n\n\t\tif (!links || links.length < 1) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst event = new TerminalLinkQuickPickEvent(EventType.CLICK);\n\t\tlinks[0].activate(event, links[0].text);\n\t\treturn links[0];\n\t}\n\n\tasync getLinks(): Promise<{ viewport: IDetectedLinks; all: Promise<IDetectedLinks> }> {\n\t\t// Fetch and await the viewport results\n\t\tconst viewportLinksByLinePromises: Promise<IDetectedLinks | undefined>[] = [];\n\t\tfor (let i = this._xterm.buffer.active.viewportY + this._xterm.rows - 1; i >= this._xterm.buffer.active.viewportY; i--) {\n\t\t\tviewportLinksByLinePromises.push(this._getLinksForLine(i));\n\t\t}\n\t\tconst viewportLinksByLine = await Promise.all(viewportLinksByLinePromises);\n\n\t\t// Assemble viewport links\n\t\tconst viewportLinks: Required<Pick<IDetectedLinks, 'wordLinks' | 'webLinks' | 'fileLinks' | 'folderLinks'>> = {\n\t\t\twordLinks: [],\n\t\t\twebLinks: [],\n\t\t\tfileLinks: [],\n\t\t\tfolderLinks: [],\n\t\t};\n\t\tfor (const links of viewportLinksByLine) {\n\t\t\tif (links) {\n\t\t\t\tconst { wordLinks, webLinks, fileLinks, folderLinks } = links;\n\t\t\t\tif (wordLinks?.length) {\n\t\t\t\t\tviewportLinks.wordLinks.push(...wordLinks.reverse());\n\t\t\t\t}\n\t\t\t\tif (webLinks?.length) {\n\t\t\t\t\tviewportLinks.webLinks.push(...webLinks.reverse());\n\t\t\t\t}\n\t\t\t\tif (fileLinks?.length) {\n\t\t\t\t\tviewportLinks.fileLinks.push(...fileLinks.reverse());\n\t\t\t\t}\n\t\t\t\tif (folderLinks?.length) {\n\t\t\t\t\tviewportLinks.folderLinks.push(...folderLinks.reverse());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Fetch the remaining results async\n\t\tconst aboveViewportLinksPromises: Promise<IDetectedLinks | undefined>[] = [];\n\t\tfor (let i = this._xterm.buffer.active.viewportY - 1; i >= 0; i--) {\n\t\t\taboveViewportLinksPromises.push(this._getLinksForLine(i));\n\t\t}\n\t\tconst belowViewportLinksPromises: Promise<IDetectedLinks | undefined>[] = [];\n\t\tfor (let i = this._xterm.buffer.active.length - 1; i >= this._xterm.buffer.active.viewportY + this._xterm.rows; i--) {\n\t\t\tbelowViewportLinksPromises.push(this._getLinksForLine(i));\n\t\t}\n\n\t\t// Assemble all links in results\n\t\tconst allLinks: Promise<Required<Pick<IDetectedLinks, 'wordLinks' | 'webLinks' | 'fileLinks' | 'folderLinks'>>> = Promise.all(aboveViewportLinksPromises).then(async aboveViewportLinks => {\n\t\t\tconst belowViewportLinks = await Promise.all(belowViewportLinksPromises);\n\t\t\tconst allResults: Required<Pick<IDetectedLinks, 'wordLinks' | 'webLinks' | 'fileLinks' | 'folderLinks'>> = {\n\t\t\t\twordLinks: [...viewportLinks.wordLinks],\n\t\t\t\twebLinks: [...viewportLinks.webLinks],\n\t\t\t\tfileLinks: [...viewportLinks.fileLinks],\n\t\t\t\tfolderLinks: [...viewportLinks.folderLinks]\n\t\t\t};\n\t\t\tfor (const links of [...belowViewportLinks, ...aboveViewportLinks]) {\n\t\t\t\tif (links) {\n\t\t\t\t\tconst { wordLinks, webLinks, fileLinks, folderLinks } = links;\n\t\t\t\t\tif (wordLinks?.length) {\n\t\t\t\t\t\tallResults.wordLinks.push(...wordLinks.reverse());\n\t\t\t\t\t}\n\t\t\t\t\tif (webLinks?.length) {\n\t\t\t\t\t\tallResults.webLinks.push(...webLinks.reverse());\n\t\t\t\t\t}\n\t\t\t\t\tif (fileLinks?.length) {\n\t\t\t\t\t\tallResults.fileLinks.push(...fileLinks.reverse());\n\t\t\t\t\t}\n\t\t\t\t\tif (folderLinks?.length) {\n\t\t\t\t\t\tallResults.folderLinks.push(...folderLinks.reverse());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn allResults;\n\t\t});\n\n\t\treturn {\n\t\t\tviewport: viewportLinks,\n\t\t\tall: allLinks\n\t\t};\n\t}\n\n\tprivate async _getLinksForLine(y: number): Promise<IDetectedLinks | undefined> {\n\t\tconst unfilteredWordLinks = await this._getLinksForType(y, 'word');\n\t\tconst webLinks = await this._getLinksForType(y, 'url');\n\t\tconst fileLinks = await this._getLinksForType(y, 'localFile');\n\t\tconst folderLinks = await this._getLinksForType(y, 'localFolder');\n\t\tconst words = new Set();\n\t\tlet wordLinks;\n\t\tif (unfilteredWordLinks) {\n\t\t\twordLinks = [];\n\t\t\tfor (const link of unfilteredWordLinks) {\n\t\t\t\tif (!words.has(link.text) && link.text.length > 1) {\n\t\t\t\t\twordLinks.push(link);\n\t\t\t\t\twords.add(link.text);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { wordLinks, webLinks, fileLinks, folderLinks };\n\t}\n\n\tprotected async _getLinksForType(y: number, type: 'word' | 'url' | 'localFile' | 'localFolder'): Promise<ILink[] | undefined> {\n\t\tswitch (type) {\n\t\t\tcase 'word':\n\t\t\t\treturn (await new Promise<ILink[] | undefined>(r => this._standardLinkProviders.get(TerminalWordLinkDetector.id)?.provideLinks(y, r)));\n\t\t\tcase 'url':\n\t\t\t\treturn (await new Promise<ILink[] | undefined>(r => this._standardLinkProviders.get(TerminalUriLinkDetector.id)?.provideLinks(y, r)));\n\t\t\tcase 'localFile': {\n\t\t\t\tconst links = (await new Promise<ILink[] | undefined>(r => this._standardLinkProviders.get(TerminalLocalLinkDetector.id)?.provideLinks(y, r)));\n\t\t\t\treturn links?.filter(link => (link as TerminalLink).type === TerminalBuiltinLinkType.LocalFile);\n\t\t\t}\n\t\t\tcase 'localFolder': {\n\t\t\t\tconst links = (await new Promise<ILink[] | undefined>(r => this._standardLinkProviders.get(TerminalLocalLinkDetector.id)?.provideLinks(y, r)));\n\t\t\t\treturn links?.filter(link => (link as TerminalLink).type === TerminalBuiltinLinkType.LocalFolderInWorkspace);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _tooltipCallback(link: TerminalLink, viewportRange: IViewportRange, modifierDownCallback?: () => void, modifierUpCallback?: () => void) {\n\t\tif (!this._widgetManager) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst core = (this._xterm as any)._core as IXtermCore;\n\t\tconst cellDimensions = {\n\t\t\twidth: core._renderService.dimensions.css.cell.width,\n\t\t\theight: core._renderService.dimensions.css.cell.height\n\t\t};\n\t\tconst terminalDimensions = {\n\t\t\twidth: this._xterm.cols,\n\t\t\theight: this._xterm.rows\n\t\t};\n\n\t\t// Don't pass the mouse event as this avoids the modifier check\n\t\tthis._showHover({\n\t\t\tviewportRange,\n\t\t\tcellDimensions,\n\t\t\tterminalDimensions,\n\t\t\tmodifierDownCallback,\n\t\t\tmodifierUpCallback\n\t\t}, this._getLinkHoverString(link.text, link.label), link.actions, (text) => link.activate(undefined, text), link);\n\t}\n\n\tprivate _showHover(\n\t\ttargetOptions: ILinkHoverTargetOptions,\n\t\ttext: IMarkdownString,\n\t\tactions: IHoverAction[] | undefined,\n\t\tlinkHandler: (url: string) => void,\n\t\tlink?: TerminalLink\n\t): IDisposable | undefined {\n\t\tif (this._widgetManager) {\n\t\t\tconst widget = this._instantiationService.createInstance(TerminalHover, targetOptions, text, actions, linkHandler);\n\t\t\tconst attached = this._widgetManager.attachWidget(widget);\n\t\t\tif (attached) {\n\t\t\t\tlink?.onInvalidated(() => attached.dispose());\n\t\t\t}\n\t\t\treturn attached;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tsetWidgetManager(widgetManager: TerminalWidgetManager): void {\n\t\tthis._widgetManager = widgetManager;\n\t}\n\n\tprivate _clearLinkProviders(): void {\n\t\tdispose(this._linkProvidersDisposables);\n\t\tthis._linkProvidersDisposables.length = 0;\n\t}\n\n\tprivate _registerStandardLinkProviders(): void {\n\t\tfor (const p of this._standardLinkProviders.values()) {\n\t\t\tthis._linkProvidersDisposables.push(this._xterm.registerLinkProvider(p));\n\t\t}\n\t}\n\n\tregisterExternalLinkProvider(provideLinks: OmitFirstArg<ITerminalExternalLinkProvider['provideLinks']>): IDisposable {\n\t\t// Clear and re-register the standard link providers so they are a lower priority than the new one\n\t\tthis._clearLinkProviders();\n\t\tconst detectorId = `extension-${this._externalLinkProviders.length}`;\n\t\tconst wrappedLinkProvider = this._setupLinkDetector(detectorId, new TerminalExternalLinkDetector(detectorId, this._xterm, provideLinks), true);\n\t\tconst newLinkProvider = this._xterm.registerLinkProvider(wrappedLinkProvider);\n\t\tthis._externalLinkProviders.push(newLinkProvider);\n\t\tthis._registerStandardLinkProviders();\n\t\treturn newLinkProvider;\n\t}\n\n\tprotected _isLinkActivationModifierDown(event: MouseEvent): boolean {\n\t\tconst editorConf = this._configurationService.getValue<{ multiCursorModifier: 'ctrlCmd' | 'alt' }>('editor');\n\t\tif (editorConf.multiCursorModifier === 'ctrlCmd') {\n\t\t\treturn !!event.altKey;\n\t\t}\n\t\treturn isMacintosh ? event.metaKey : event.ctrlKey;\n\t}\n\n\tprivate _getLinkHoverString(uri: string, label: string | undefined): IMarkdownString {\n\t\tconst editorConf = this._configurationService.getValue<{ multiCursorModifier: 'ctrlCmd' | 'alt' }>('editor');\n\n\t\tlet clickLabel = '';\n\t\tif (editorConf.multiCursorModifier === 'ctrlCmd') {\n\t\t\tif (isMacintosh) {\n\t\t\t\tclickLabel = nls.localize('terminalLinkHandler.followLinkAlt.mac', \"option + click\");\n\t\t\t} else {\n\t\t\t\tclickLabel = nls.localize('terminalLinkHandler.followLinkAlt', \"alt + click\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (isMacintosh) {\n\t\t\t\tclickLabel = nls.localize('terminalLinkHandler.followLinkCmd', \"cmd + click\");\n\t\t\t} else {\n\t\t\t\tclickLabel = nls.localize('terminalLinkHandler.followLinkCtrl', \"ctrl + click\");\n\t\t\t}\n\t\t}\n\n\t\tlet fallbackLabel = nls.localize('followLink', \"Follow link\");\n\t\ttry {\n\t\t\tif (this._tunnelService.canTunnel(URI.parse(uri))) {\n\t\t\t\tfallbackLabel = nls.localize('followForwardedLink', \"Follow link using forwarded port\");\n\t\t\t}\n\t\t} catch {\n\t\t\t// No-op, already set to fallback\n\t\t}\n\n\t\tconst markdown = new MarkdownString('', true);\n\t\t// Escapes markdown in label & uri\n\t\tif (label) {\n\t\t\tlabel = markdown.appendText(label).value;\n\t\t\tmarkdown.value = '';\n\t\t}\n\t\tif (uri) {\n\t\t\turi = markdown.appendText(uri).value;\n\t\t\tmarkdown.value = '';\n\t\t}\n\n\t\tlabel = label || fallbackLabel;\n\t\t// Use the label when uri is '' so the link displays correctly\n\t\turi = uri || label;\n\t\t// Although if there is a space in the uri, just replace it completely\n\t\tif (/(\\s|&nbsp;)/.test(uri)) {\n\t\t\turi = nls.localize('followLinkUrl', 'Link');\n\t\t}\n\n\t\treturn markdown.appendLink(uri, label).appendMarkdown(` (${clickLabel})`);\n\t}\n}\n\nexport interface ILineColumnInfo {\n\tlineNumber: number;\n\tcolumnNumber: number;\n}\n\nexport interface IDetectedLinks {\n\twordLinks?: ILink[];\n\twebLinks?: ILink[];\n\tfileLinks?: ILink[];\n\tfolderLinks?: ILink[];\n}\n"]}