{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminalContrib/links/test/browser/terminalMultiLineLinkDetector.test.ts"],"names":[],"mappings":"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","file":"terminalMultiLineLinkDetector.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, OperatingSystem } from 'vs/base/common/platform';\nimport { format } from 'vs/base/common/strings';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { TerminalBuiltinLinkType } from 'vs/workbench/contrib/terminalContrib/links/browser/links';\nimport { assertLinkHelper } from 'vs/workbench/contrib/terminalContrib/links/test/browser/linkTestUtils';\nimport type { Terminal } from 'xterm';\nimport { timeout } from 'vs/base/common/async';\nimport { strictEqual } from 'assert';\nimport { TerminalLinkResolver } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalLinkResolver';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { createFileStat } from 'vs/workbench/test/common/workbenchTestServices';\nimport { URI } from 'vs/base/common/uri';\nimport { NullLogService } from 'vs/platform/log/common/log';\nimport { ITerminalLogService } from 'vs/platform/terminal/common/terminal';\nimport { TerminalMultiLineLinkDetector } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalMultiLineLinkDetector';\nimport { importAMDNodeModule } from 'vs/amdX';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\nconst unixLinks: (string | { link: string; resource: URI })[] = [\n\t// Absolute\n\t'/foo',\n\t'/foo/bar',\n\t'/foo/[bar]',\n\t'/foo/[bar].baz',\n\t'/foo/[bar]/baz',\n\t'/foo/bar+more',\n\t// User home\n\t{ link: '~/foo', resource: URI.file('/home/foo') },\n\t// Relative\n\t{ link: './foo', resource: URI.file('/parent/cwd/foo') },\n\t{ link: './$foo', resource: URI.file('/parent/cwd/$foo') },\n\t{ link: '../foo', resource: URI.file('/parent/foo') },\n\t{ link: 'foo/bar', resource: URI.file('/parent/cwd/foo/bar') },\n\t{ link: 'foo/bar+more', resource: URI.file('/parent/cwd/foo/bar+more') },\n];\n\nconst windowsLinks: (string | { link: string; resource: URI })[] = [\n\t// Absolute\n\t'c:\\\\foo',\n\t{ link: '\\\\\\\\?\\\\C:\\\\foo', resource: URI.file('C:\\\\foo') },\n\t'c:/foo',\n\t'c:/foo/bar',\n\t'c:\\\\foo\\\\bar',\n\t'c:\\\\foo\\\\bar+more',\n\t'c:\\\\foo/bar\\\\baz',\n\t// User home\n\t{ link: '~\\\\foo', resource: URI.file('C:\\\\Home\\\\foo') },\n\t{ link: '~/foo', resource: URI.file('C:\\\\Home\\\\foo') },\n\t// Relative\n\t{ link: '.\\\\foo', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo') },\n\t{ link: './foo', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo') },\n\t{ link: './$foo', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\$foo') },\n\t{ link: '..\\\\foo', resource: URI.file('C:\\\\Parent\\\\foo') },\n\t{ link: 'foo/bar', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar') },\n\t{ link: 'foo/bar', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar') },\n\t{ link: 'foo/[bar]', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar]') },\n\t{ link: 'foo/[bar].baz', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar].baz') },\n\t{ link: 'foo/[bar]/baz', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar]/baz') },\n\t{ link: 'foo\\\\bar', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar') },\n\t{ link: 'foo\\\\[bar].baz', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar].baz') },\n\t{ link: 'foo\\\\[bar]\\\\baz', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\[bar]\\\\baz') },\n\t{ link: 'foo\\\\bar+more', resource: URI.file('C:\\\\Parent\\\\Cwd\\\\foo\\\\bar+more') },\n];\n\ninterface LinkFormatInfo {\n\turlFormat: string;\n\t/**\n\t * The start offset to the buffer range that is not in the actual link (but is in the matched\n\t * area.\n\t */\n\tlinkCellStartOffset?: number;\n\t/**\n\t * The end offset to the buffer range that is not in the actual link (but is in the matched\n\t * area.\n\t */\n\tlinkCellEndOffset?: number;\n\tline?: string;\n\tcolumn?: string;\n}\n\nconst supportedLinkFormats: LinkFormatInfo[] = [\n\t// 5: file content...                         [#181837]\n\t//   5:3  error                               [#181837]\n\t{ urlFormat: '{0}\\r\\n{1}:foo', line: '5' },\n\t{ urlFormat: '{0}\\r\\n{1}: foo', line: '5' },\n\t{ urlFormat: '{0}\\r\\n5:another link\\r\\n{1}:{2} foo', line: '5', column: '3' },\n\t{ urlFormat: '{0}\\r\\n  {1}:{2} foo', line: '5', column: '3' },\n\t{ urlFormat: '{0}\\r\\n  5:6  error  another one\\r\\n  {1}:{2}  error', line: '5', column: '3' },\n\t{ urlFormat: `{0}\\r\\n  5:6  error  ${'a'.repeat(80)}\\r\\n  {1}:{2}  error`, line: '5', column: '3' },\n\n\t// @@ ... <to-file-range> @@ content...       [#182878]   (tests check the entire line, so they don't include the line content at the end of the last @@)\n\t{ urlFormat: '+++ b/{0}\\r\\n@@ -7,6 +{1},7 @@', line: '5' },\n\t{ urlFormat: '+++ b/{0}\\r\\n@@ -1,1 +1,1 @@\\r\\nfoo\\r\\nbar\\r\\n@@ -7,6 +{1},7 @@', line: '5' },\n];\n\nsuite('Workbench - TerminalMultiLineLinkDetector', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet instantiationService: TestInstantiationService;\n\tlet configurationService: TestConfigurationService;\n\tlet detector: TerminalMultiLineLinkDetector;\n\tlet resolver: TerminalLinkResolver;\n\tlet xterm: Terminal;\n\tlet validResources: URI[];\n\n\tasync function assertLinks(\n\t\ttype: TerminalBuiltinLinkType,\n\t\ttext: string,\n\t\texpected: ({ uri: URI; range: [number, number][] })[]\n\t) {\n\t\tlet to;\n\t\tconst race = await Promise.race([\n\t\t\tassertLinkHelper(text, expected, detector, type).then(() => 'success'),\n\t\t\t(to = timeout(2)).then(() => 'timeout')\n\t\t]);\n\t\tstrictEqual(race, 'success', `Awaiting link assertion for \"${text}\" timed out`);\n\t\tto.cancel();\n\t}\n\n\tasync function assertLinksMain(link: string, resource?: URI) {\n\t\tconst uri = resource ?? URI.file(link);\n\t\tconst lines = link.split('\\r\\n');\n\t\tconst lastLine = lines.at(-1)!;\n\t\t// Count lines, accounting for wrapping\n\t\tlet lineCount = 0;\n\t\tfor (const line of lines) {\n\t\t\tlineCount += Math.max(Math.ceil(line.length / 80), 1);\n\t\t}\n\t\tawait assertLinks(TerminalBuiltinLinkType.LocalFile, link, [{ uri, range: [[1, lineCount], [lastLine.length, lineCount]] }]);\n\t}\n\n\tsetup(async () => {\n\t\tinstantiationService = store.add(new TestInstantiationService());\n\t\tconfigurationService = new TestConfigurationService();\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\tinstantiationService.stub(IFileService, {\n\t\t\tasync stat(resource) {\n\t\t\t\tif (!validResources.map(e => e.path).includes(resource.path)) {\n\t\t\t\t\tthrow new Error('Doesn\\'t exist');\n\t\t\t\t}\n\t\t\t\treturn createFileStat(resource);\n\t\t\t}\n\t\t});\n\t\tinstantiationService.stub(ITerminalLogService, new NullLogService());\n\t\tresolver = instantiationService.createInstance(TerminalLinkResolver);\n\t\tvalidResources = [];\n\n\t\tconst TerminalCtor = (await importAMDNodeModule<typeof import('xterm')>('xterm', 'lib/xterm.js')).Terminal;\n\t\txterm = new TerminalCtor({ allowProposedApi: true, cols: 80, rows: 30 });\n\t});\n\n\tsuite('macOS/Linux', () => {\n\t\tsetup(() => {\n\t\t\tdetector = instantiationService.createInstance(TerminalMultiLineLinkDetector, xterm, {\n\t\t\t\tinitialCwd: '/parent/cwd',\n\t\t\t\tos: OperatingSystem.Linux,\n\t\t\t\tremoteAuthority: undefined,\n\t\t\t\tuserHome: '/home',\n\t\t\t\tbackend: undefined\n\t\t\t}, resolver);\n\t\t});\n\n\t\tfor (const l of unixLinks) {\n\t\t\tconst baseLink = typeof l === 'string' ? l : l.link;\n\t\t\tconst resource = typeof l === 'string' ? URI.file(l) : l.resource;\n\t\t\tsuite(`Link: ${baseLink}`, () => {\n\t\t\t\tfor (let i = 0; i < supportedLinkFormats.length; i++) {\n\t\t\t\t\tconst linkFormat = supportedLinkFormats[i];\n\t\t\t\t\tconst formattedLink = format(linkFormat.urlFormat, baseLink, linkFormat.line, linkFormat.column);\n\t\t\t\t\ttest(`should detect in \"${escapeMultilineTestName(formattedLink)}\"`, async () => {\n\t\t\t\t\t\tvalidResources = [resource];\n\t\t\t\t\t\tawait assertLinksMain(formattedLink, resource);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t// Only test these when on Windows because there is special behavior around replacing separators\n\t// in URI that cannot be changed\n\tif (isWindows) {\n\t\tsuite('Windows', () => {\n\t\t\tsetup(() => {\n\t\t\t\tdetector = instantiationService.createInstance(TerminalMultiLineLinkDetector, xterm, {\n\t\t\t\t\tinitialCwd: 'C:\\\\Parent\\\\Cwd',\n\t\t\t\t\tos: OperatingSystem.Windows,\n\t\t\t\t\tremoteAuthority: undefined,\n\t\t\t\t\tuserHome: 'C:\\\\Home',\n\t\t\t\t}, resolver);\n\t\t\t});\n\n\t\t\tfor (const l of windowsLinks) {\n\t\t\t\tconst baseLink = typeof l === 'string' ? l : l.link;\n\t\t\t\tconst resource = typeof l === 'string' ? URI.file(l) : l.resource;\n\t\t\t\tsuite(`Link \"${baseLink}\"`, () => {\n\t\t\t\t\tfor (let i = 0; i < supportedLinkFormats.length; i++) {\n\t\t\t\t\t\tconst linkFormat = supportedLinkFormats[i];\n\t\t\t\t\t\tconst formattedLink = format(linkFormat.urlFormat, baseLink, linkFormat.line, linkFormat.column);\n\t\t\t\t\t\ttest(`should detect in \"${escapeMultilineTestName(formattedLink)}\"`, async () => {\n\t\t\t\t\t\t\tvalidResources = [resource];\n\t\t\t\t\t\t\tawait assertLinksMain(formattedLink, resource);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n});\n\nfunction escapeMultilineTestName(text: string): string {\n\treturn text.replaceAll('\\r\\n', '\\\\r\\\\n');\n}\n"]}