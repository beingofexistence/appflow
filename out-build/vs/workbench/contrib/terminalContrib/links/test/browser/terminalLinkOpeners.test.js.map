{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminalContrib/links/test/browser/terminalLinkOpeners.test.ts"],"names":[],"mappings":"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","file":"terminalLinkOpeners.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual } from 'assert';\nimport { Schemas } from 'vs/base/common/network';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { ITextEditorSelection, ITextResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { IFileService, IFileStatWithPartialMetadata } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { CommandDetectionCapability } from 'vs/platform/terminal/common/capabilities/commandDetectionCapability';\nimport { TerminalBuiltinLinkType } from 'vs/workbench/contrib/terminalContrib/links/browser/links';\nimport { TerminalLocalFileLinkOpener, TerminalLocalFolderInWorkspaceLinkOpener, TerminalSearchLinkOpener } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalLinkOpeners';\nimport { TerminalCapability, ITerminalCommand, IXtermMarker } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { TerminalCapabilityStore } from 'vs/platform/terminal/common/capabilities/terminalCapabilityStore';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';\nimport { TestContextService } from 'vs/workbench/test/common/workbenchTestServices';\nimport type { Terminal } from 'xterm';\nimport { IFileQuery, ISearchComplete, ISearchService } from 'vs/workbench/services/search/common/search';\nimport { SearchService } from 'vs/workbench/services/search/common/searchService';\nimport { ITerminalLogService, ITerminalOutputMatcher } from 'vs/platform/terminal/common/terminal';\nimport { importAMDNodeModule } from 'vs/amdX';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\n\ninterface ITerminalLinkActivationResult {\n\tsource: 'editor' | 'search';\n\tlink: string;\n\tselection?: ITextEditorSelection;\n}\n\nclass TestCommandDetectionCapability extends CommandDetectionCapability {\n\tsetCommands(commands: ITerminalCommand[]) {\n\t\tthis._commands = commands;\n\t}\n}\n\nclass TestFileService extends FileService {\n\tprivate _files: URI[] | '*' = '*';\n\toverride async stat(resource: URI): Promise<IFileStatWithPartialMetadata> {\n\t\tif (this._files === '*' || this._files.some(e => e.toString() === resource.toString())) {\n\t\t\treturn { isFile: true, isDirectory: false, isSymbolicLink: false } as IFileStatWithPartialMetadata;\n\t\t}\n\t\tthrow new Error('ENOENT');\n\t}\n\tsetFiles(files: URI[] | '*'): void {\n\t\tthis._files = files;\n\t}\n}\n\nclass TestSearchService extends SearchService {\n\tprivate _searchResult: ISearchComplete | undefined;\n\toverride async fileSearch(query: IFileQuery): Promise<ISearchComplete> {\n\t\treturn this._searchResult!;\n\t}\n\tsetSearchResult(result: ISearchComplete) {\n\t\tthis._searchResult = result;\n\t}\n}\n\nclass TestTerminalSearchLinkOpener extends TerminalSearchLinkOpener {\n\tsetFileQueryBuilder(value: any) {\n\t\tthis._fileQueryBuilder = value;\n\t}\n}\n\nsuite('Workbench - TerminalLinkOpeners', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet instantiationService: TestInstantiationService;\n\tlet fileService: TestFileService;\n\tlet searchService: TestSearchService;\n\tlet activationResult: ITerminalLinkActivationResult | undefined;\n\tlet xterm: Terminal;\n\n\tsetup(async () => {\n\t\tinstantiationService = store.add(new TestInstantiationService());\n\t\tfileService = store.add(new TestFileService(new NullLogService()));\n\t\tsearchService = store.add(new TestSearchService(null!, null!, null!, null!, null!, null!, null!));\n\t\tinstantiationService.set(IFileService, fileService);\n\t\tinstantiationService.set(ILogService, new NullLogService());\n\t\tinstantiationService.set(ISearchService, searchService);\n\t\tinstantiationService.set(IWorkspaceContextService, new TestContextService());\n\t\tinstantiationService.stub(ITerminalLogService, new NullLogService());\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, {\n\t\t\tremoteAuthority: undefined\n\t\t} as Partial<IWorkbenchEnvironmentService>);\n\t\t// Allow intercepting link activations\n\t\tactivationResult = undefined;\n\t\tinstantiationService.stub(IQuickInputService, {\n\t\t\tquickAccess: {\n\t\t\t\tshow(link: string) {\n\t\t\t\t\tactivationResult = { link, source: 'search' };\n\t\t\t\t}\n\t\t\t}\n\t\t} as Partial<IQuickInputService>);\n\t\tinstantiationService.stub(IEditorService, {\n\t\t\tasync openEditor(editor: ITextResourceEditorInput): Promise<any> {\n\t\t\t\tactivationResult = {\n\t\t\t\t\tsource: 'editor',\n\t\t\t\t\tlink: editor.resource?.toString()\n\t\t\t\t};\n\t\t\t\t// Only assert on selection if it's not the default value\n\t\t\t\tif (editor.options?.selection && (editor.options.selection.startColumn !== 1 || editor.options.selection.startLineNumber !== 1)) {\n\t\t\t\t\tactivationResult.selection = editor.options.selection;\n\t\t\t\t}\n\t\t\t}\n\t\t} as Partial<IEditorService>);\n\t\tconst TerminalCtor = (await importAMDNodeModule<typeof import('xterm')>('xterm', 'lib/xterm.js')).Terminal;\n\t\txterm = store.add(new TerminalCtor({ allowProposedApi: true }));\n\t});\n\n\tsuite('TerminalSearchLinkOpener', () => {\n\t\tlet opener: TestTerminalSearchLinkOpener;\n\t\tlet capabilities: TerminalCapabilityStore;\n\t\tlet commandDetection: TestCommandDetectionCapability;\n\t\tlet localFileOpener: TerminalLocalFileLinkOpener;\n\n\t\tsetup(() => {\n\t\t\tcapabilities = store.add(new TerminalCapabilityStore());\n\t\t\tcommandDetection = store.add(instantiationService.createInstance(TestCommandDetectionCapability, xterm));\n\t\t\tcapabilities.add(TerminalCapability.CommandDetection, commandDetection);\n\t\t});\n\n\t\ttest('should open single exact match against cwd when searching if it exists when command detection cwd is available', async () => {\n\t\t\tlocalFileOpener = instantiationService.createInstance(TerminalLocalFileLinkOpener);\n\t\t\tconst localFolderOpener = instantiationService.createInstance(TerminalLocalFolderInWorkspaceLinkOpener);\n\t\t\topener = instantiationService.createInstance(TestTerminalSearchLinkOpener, capabilities, '/initial/cwd', localFileOpener, localFolderOpener, () => OperatingSystem.Linux);\n\t\t\t// Set a fake detected command starting as line 0 to establish the cwd\n\t\t\tcommandDetection.setCommands([{\n\t\t\t\tcommand: '',\n\t\t\t\texitCode: 0,\n\t\t\t\tcommandStartLineContent: '',\n\t\t\t\tmarkProperties: {},\n\t\t\t\tisTrusted: true,\n\t\t\t\tcwd: '/initial/cwd',\n\t\t\t\ttimestamp: 0,\n\t\t\t\tgetOutput() { return undefined; },\n\t\t\t\tgetOutputMatch(outputMatcher: ITerminalOutputMatcher) { return undefined; },\n\t\t\t\tmarker: {\n\t\t\t\t\tline: 0\n\t\t\t\t} as Partial<IXtermMarker> as any,\n\t\t\t\thasOutput() { return true; }\n\t\t\t}]);\n\t\t\tfileService.setFiles([\n\t\t\t\tURI.from({ scheme: Schemas.file, path: '/initial/cwd/foo/bar.txt' }),\n\t\t\t\tURI.from({ scheme: Schemas.file, path: '/initial/cwd/foo2/bar.txt' })\n\t\t\t]);\n\t\t\tawait opener.open({\n\t\t\t\ttext: 'foo/bar.txt',\n\t\t\t\tbufferRange: { start: { x: 1, y: 1 }, end: { x: 8, y: 1 } },\n\t\t\t\ttype: TerminalBuiltinLinkType.Search\n\t\t\t});\n\t\t\tdeepStrictEqual(activationResult, {\n\t\t\t\tlink: 'file:///initial/cwd/foo/bar.txt',\n\t\t\t\tsource: 'editor'\n\t\t\t});\n\t\t});\n\n\t\ttest('should open single exact match against cwd for paths containing a separator when searching if it exists, even when command detection isn\\'t available', async () => {\n\t\t\tlocalFileOpener = instantiationService.createInstance(TerminalLocalFileLinkOpener);\n\t\t\tconst localFolderOpener = instantiationService.createInstance(TerminalLocalFolderInWorkspaceLinkOpener);\n\t\t\topener = instantiationService.createInstance(TestTerminalSearchLinkOpener, capabilities, '/initial/cwd', localFileOpener, localFolderOpener, () => OperatingSystem.Linux);\n\t\t\tfileService.setFiles([\n\t\t\t\tURI.from({ scheme: Schemas.file, path: '/initial/cwd/foo/bar.txt' }),\n\t\t\t\tURI.from({ scheme: Schemas.file, path: '/initial/cwd/foo2/bar.txt' })\n\t\t\t]);\n\t\t\tawait opener.open({\n\t\t\t\ttext: 'foo/bar.txt',\n\t\t\t\tbufferRange: { start: { x: 1, y: 1 }, end: { x: 8, y: 1 } },\n\t\t\t\ttype: TerminalBuiltinLinkType.Search\n\t\t\t});\n\t\t\tdeepStrictEqual(activationResult, {\n\t\t\t\tlink: 'file:///initial/cwd/foo/bar.txt',\n\t\t\t\tsource: 'editor'\n\t\t\t});\n\t\t});\n\n\t\ttest('should open single exact match against any folder for paths not containing a separator when there is a single search result, even when command detection isn\\'t available', async () => {\n\t\t\tlocalFileOpener = instantiationService.createInstance(TerminalLocalFileLinkOpener);\n\t\t\tconst localFolderOpener = instantiationService.createInstance(TerminalLocalFolderInWorkspaceLinkOpener);\n\t\t\topener = instantiationService.createInstance(TestTerminalSearchLinkOpener, capabilities, '/initial/cwd', localFileOpener, localFolderOpener, () => OperatingSystem.Linux);\n\t\t\tcapabilities.remove(TerminalCapability.CommandDetection);\n\t\t\topener.setFileQueryBuilder({ file: () => null! });\n\t\t\tfileService.setFiles([\n\t\t\t\tURI.from({ scheme: Schemas.file, path: '/initial/cwd/foo/bar.txt' }),\n\t\t\t\tURI.from({ scheme: Schemas.file, path: '/initial/cwd/foo2/baz.txt' })\n\t\t\t]);\n\t\t\tsearchService.setSearchResult({\n\t\t\t\tmessages: [],\n\t\t\t\tresults: [\n\t\t\t\t\t{ resource: URI.from({ scheme: Schemas.file, path: '/initial/cwd/foo/bar.txt' }) }\n\t\t\t\t]\n\t\t\t});\n\t\t\tawait opener.open({\n\t\t\t\ttext: 'bar.txt',\n\t\t\t\tbufferRange: { start: { x: 1, y: 1 }, end: { x: 8, y: 1 } },\n\t\t\t\ttype: TerminalBuiltinLinkType.Search\n\t\t\t});\n\t\t\tdeepStrictEqual(activationResult, {\n\t\t\t\tlink: 'file:///initial/cwd/foo/bar.txt',\n\t\t\t\tsource: 'editor'\n\t\t\t});\n\t\t});\n\n\t\ttest('should open single exact match against any folder for paths not containing a separator when there are multiple search results, even when command detection isn\\'t available', async () => {\n\t\t\tlocalFileOpener = instantiationService.createInstance(TerminalLocalFileLinkOpener);\n\t\t\tconst localFolderOpener = instantiationService.createInstance(TerminalLocalFolderInWorkspaceLinkOpener);\n\t\t\topener = instantiationService.createInstance(TestTerminalSearchLinkOpener, capabilities, '/initial/cwd', localFileOpener, localFolderOpener, () => OperatingSystem.Linux);\n\t\t\tcapabilities.remove(TerminalCapability.CommandDetection);\n\t\t\topener.setFileQueryBuilder({ file: () => null! });\n\t\t\tfileService.setFiles([\n\t\t\t\tURI.from({ scheme: Schemas.file, path: '/initial/cwd/foo/bar.txt' }),\n\t\t\t\tURI.from({ scheme: Schemas.file, path: '/initial/cwd/foo/bar.test.txt' }),\n\t\t\t\tURI.from({ scheme: Schemas.file, path: '/initial/cwd/foo2/bar.test.txt' })\n\t\t\t]);\n\t\t\tsearchService.setSearchResult({\n\t\t\t\tmessages: [],\n\t\t\t\tresults: [\n\t\t\t\t\t{ resource: URI.from({ scheme: Schemas.file, path: '/initial/cwd/foo/bar.txt' }) },\n\t\t\t\t\t{ resource: URI.from({ scheme: Schemas.file, path: '/initial/cwd/foo/bar.test.txt' }) },\n\t\t\t\t\t{ resource: URI.from({ scheme: Schemas.file, path: '/initial/cwd/foo2/bar.test.txt' }) }\n\t\t\t\t]\n\t\t\t});\n\t\t\tawait opener.open({\n\t\t\t\ttext: 'bar.txt',\n\t\t\t\tbufferRange: { start: { x: 1, y: 1 }, end: { x: 8, y: 1 } },\n\t\t\t\ttype: TerminalBuiltinLinkType.Search\n\t\t\t});\n\t\t\tdeepStrictEqual(activationResult, {\n\t\t\t\tlink: 'file:///initial/cwd/foo/bar.txt',\n\t\t\t\tsource: 'editor'\n\t\t\t});\n\t\t});\n\n\t\ttest('should not open single exact match for paths not containing a when command detection isn\\'t available', async () => {\n\t\t\tlocalFileOpener = instantiationService.createInstance(TerminalLocalFileLinkOpener);\n\t\t\tconst localFolderOpener = instantiationService.createInstance(TerminalLocalFolderInWorkspaceLinkOpener);\n\t\t\topener = instantiationService.createInstance(TestTerminalSearchLinkOpener, capabilities, '/initial/cwd', localFileOpener, localFolderOpener, () => OperatingSystem.Linux);\n\t\t\tfileService.setFiles([\n\t\t\t\tURI.from({ scheme: Schemas.file, path: '/initial/cwd/foo/bar.txt' }),\n\t\t\t\tURI.from({ scheme: Schemas.file, path: '/initial/cwd/foo2/bar.txt' })\n\t\t\t]);\n\t\t\tawait opener.open({\n\t\t\t\ttext: 'bar.txt',\n\t\t\t\tbufferRange: { start: { x: 1, y: 1 }, end: { x: 8, y: 1 } },\n\t\t\t\ttype: TerminalBuiltinLinkType.Search\n\t\t\t});\n\t\t\tdeepStrictEqual(activationResult, {\n\t\t\t\tlink: 'bar.txt',\n\t\t\t\tsource: 'search'\n\t\t\t});\n\t\t});\n\n\t\tsuite('macOS/Linux', () => {\n\t\t\tsetup(() => {\n\t\t\t\tlocalFileOpener = instantiationService.createInstance(TerminalLocalFileLinkOpener);\n\t\t\t\tconst localFolderOpener = instantiationService.createInstance(TerminalLocalFolderInWorkspaceLinkOpener);\n\t\t\t\topener = instantiationService.createInstance(TestTerminalSearchLinkOpener, capabilities, '', localFileOpener, localFolderOpener, () => OperatingSystem.Linux);\n\t\t\t});\n\n\t\t\ttest('should apply the cwd to the link only when the file exists and cwdDetection is enabled', async () => {\n\t\t\t\tconst cwd = '/Users/home/folder';\n\t\t\t\tconst absoluteFile = '/Users/home/folder/file.txt';\n\t\t\t\tfileService.setFiles([\n\t\t\t\t\tURI.from({ scheme: Schemas.file, path: absoluteFile }),\n\t\t\t\t\tURI.from({ scheme: Schemas.file, path: '/Users/home/folder/other/file.txt' })\n\t\t\t\t]);\n\n\t\t\t\t// Set a fake detected command starting as line 0 to establish the cwd\n\t\t\t\tcommandDetection.setCommands([{\n\t\t\t\t\tcommand: '',\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t\tcwd,\n\t\t\t\t\ttimestamp: 0,\n\t\t\t\t\tgetOutput() { return undefined; },\n\t\t\t\t\tgetOutputMatch(outputMatcher: ITerminalOutputMatcher) { return undefined; },\n\t\t\t\t\tmarker: {\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t} as Partial<IXtermMarker> as any,\n\t\t\t\t\thasOutput() { return true; },\n\t\t\t\t\texitCode: 0,\n\t\t\t\t\tcommandStartLineContent: '',\n\t\t\t\t\tmarkProperties: {}\n\t\t\t\t}]);\n\t\t\t\tawait opener.open({\n\t\t\t\t\ttext: 'file.txt',\n\t\t\t\t\tbufferRange: { start: { x: 1, y: 1 }, end: { x: 8, y: 1 } },\n\t\t\t\t\ttype: TerminalBuiltinLinkType.Search\n\t\t\t\t});\n\t\t\t\tdeepStrictEqual(activationResult, {\n\t\t\t\t\tlink: 'file:///Users/home/folder/file.txt',\n\t\t\t\t\tsource: 'editor'\n\t\t\t\t});\n\n\t\t\t\t// Clear detected commands and ensure the same request results in a search since there are 2 matches\n\t\t\t\tcommandDetection.setCommands([]);\n\t\t\t\topener.setFileQueryBuilder({ file: () => null! });\n\t\t\t\tsearchService.setSearchResult({\n\t\t\t\t\tmessages: [],\n\t\t\t\t\tresults: [\n\t\t\t\t\t\t{ resource: URI.from({ scheme: Schemas.file, path: 'file:///Users/home/folder/file.txt' }) },\n\t\t\t\t\t\t{ resource: URI.from({ scheme: Schemas.file, path: 'file:///Users/home/folder/other/file.txt' }) }\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tawait opener.open({\n\t\t\t\t\ttext: 'file.txt',\n\t\t\t\t\tbufferRange: { start: { x: 1, y: 1 }, end: { x: 8, y: 1 } },\n\t\t\t\t\ttype: TerminalBuiltinLinkType.Search\n\t\t\t\t});\n\t\t\t\tdeepStrictEqual(activationResult, {\n\t\t\t\t\tlink: 'file.txt',\n\t\t\t\t\tsource: 'search'\n\t\t\t\t});\n\t\t\t});\n\n\t\t\ttest('should extract line and column from links in a workspace containing spaces', async () => {\n\t\t\t\tlocalFileOpener = instantiationService.createInstance(TerminalLocalFileLinkOpener);\n\t\t\t\tconst localFolderOpener = instantiationService.createInstance(TerminalLocalFolderInWorkspaceLinkOpener);\n\t\t\t\topener = instantiationService.createInstance(TestTerminalSearchLinkOpener, capabilities, '/space folder', localFileOpener, localFolderOpener, () => OperatingSystem.Linux);\n\t\t\t\tfileService.setFiles([\n\t\t\t\t\tURI.from({ scheme: Schemas.file, path: '/space folder/foo/bar.txt' })\n\t\t\t\t]);\n\t\t\t\tawait opener.open({\n\t\t\t\t\ttext: './foo/bar.txt:10:5',\n\t\t\t\t\tbufferRange: { start: { x: 1, y: 1 }, end: { x: 8, y: 1 } },\n\t\t\t\t\ttype: TerminalBuiltinLinkType.Search\n\t\t\t\t});\n\t\t\t\tdeepStrictEqual(activationResult, {\n\t\t\t\t\tlink: 'file:///space%20folder/foo/bar.txt',\n\t\t\t\t\tsource: 'editor',\n\t\t\t\t\tselection: {\n\t\t\t\t\t\tstartColumn: 5,\n\t\t\t\t\t\tstartLineNumber: 10,\n\t\t\t\t\t\tendColumn: undefined,\n\t\t\t\t\t\tendLineNumber: undefined\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tsuite('Windows', () => {\n\t\t\tsetup(() => {\n\t\t\t\tlocalFileOpener = instantiationService.createInstance(TerminalLocalFileLinkOpener);\n\t\t\t\tconst localFolderOpener = instantiationService.createInstance(TerminalLocalFolderInWorkspaceLinkOpener);\n\t\t\t\topener = instantiationService.createInstance(TestTerminalSearchLinkOpener, capabilities, '', localFileOpener, localFolderOpener, () => OperatingSystem.Windows);\n\t\t\t});\n\n\t\t\ttest('should apply the cwd to the link only when the file exists and cwdDetection is enabled', async () => {\n\t\t\t\tlocalFileOpener = instantiationService.createInstance(TerminalLocalFileLinkOpener);\n\t\t\t\tconst localFolderOpener = instantiationService.createInstance(TerminalLocalFolderInWorkspaceLinkOpener);\n\t\t\t\topener = instantiationService.createInstance(TestTerminalSearchLinkOpener, capabilities, 'c:\\\\Users', localFileOpener, localFolderOpener, () => OperatingSystem.Windows);\n\n\t\t\t\tconst cwd = 'c:\\\\Users\\\\home\\\\folder';\n\t\t\t\tconst absoluteFile = 'c:\\\\Users\\\\home\\\\folder\\\\file.txt';\n\n\t\t\t\tfileService.setFiles([\n\t\t\t\t\tURI.file('/c:/Users/home/folder/file.txt')\n\t\t\t\t]);\n\n\t\t\t\t// Set a fake detected command starting as line 0 to establish the cwd\n\t\t\t\tcommandDetection.setCommands([{\n\t\t\t\t\texitCode: 0,\n\t\t\t\t\tcommandStartLineContent: '',\n\t\t\t\t\tmarkProperties: {},\n\t\t\t\t\tcommand: '',\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t\tcwd,\n\t\t\t\t\ttimestamp: 0,\n\t\t\t\t\tgetOutput() { return undefined; },\n\t\t\t\t\tgetOutputMatch(outputMatcher: ITerminalOutputMatcher) { return undefined; },\n\t\t\t\t\tmarker: {\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t} as Partial<IXtermMarker> as any,\n\t\t\t\t\thasOutput() { return true; }\n\t\t\t\t}]);\n\t\t\t\tawait opener.open({\n\t\t\t\t\ttext: 'file.txt',\n\t\t\t\t\tbufferRange: { start: { x: 1, y: 1 }, end: { x: 8, y: 1 } },\n\t\t\t\t\ttype: TerminalBuiltinLinkType.Search\n\t\t\t\t});\n\t\t\t\tdeepStrictEqual(activationResult, {\n\t\t\t\t\tlink: 'file:///c%3A/Users/home/folder/file.txt',\n\t\t\t\t\tsource: 'editor'\n\t\t\t\t});\n\n\t\t\t\t// Clear detected commands and ensure the same request results in a search\n\t\t\t\tcommandDetection.setCommands([]);\n\t\t\t\topener.setFileQueryBuilder({ file: () => null! });\n\t\t\t\tsearchService.setSearchResult({\n\t\t\t\t\tmessages: [],\n\t\t\t\t\tresults: [\n\t\t\t\t\t\t{ resource: URI.file(absoluteFile) },\n\t\t\t\t\t\t{ resource: URI.file('/c:/Users/home/folder/other/file.txt') }\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tawait opener.open({\n\t\t\t\t\ttext: 'file.txt',\n\t\t\t\t\tbufferRange: { start: { x: 1, y: 1 }, end: { x: 8, y: 1 } },\n\t\t\t\t\ttype: TerminalBuiltinLinkType.Search\n\t\t\t\t});\n\t\t\t\tdeepStrictEqual(activationResult, {\n\t\t\t\t\tlink: 'file.txt',\n\t\t\t\t\tsource: 'search'\n\t\t\t\t});\n\t\t\t});\n\n\t\t\ttest('should extract line and column from links in a workspace containing spaces', async () => {\n\t\t\t\tlocalFileOpener = instantiationService.createInstance(TerminalLocalFileLinkOpener);\n\t\t\t\tconst localFolderOpener = instantiationService.createInstance(TerminalLocalFolderInWorkspaceLinkOpener);\n\t\t\t\topener = instantiationService.createInstance(TestTerminalSearchLinkOpener, capabilities, 'c:/space folder', localFileOpener, localFolderOpener, () => OperatingSystem.Windows);\n\t\t\t\tfileService.setFiles([\n\t\t\t\t\tURI.from({ scheme: Schemas.file, path: 'c:/space folder/foo/bar.txt' })\n\t\t\t\t]);\n\t\t\t\tawait opener.open({\n\t\t\t\t\ttext: './foo/bar.txt:10:5',\n\t\t\t\t\tbufferRange: { start: { x: 1, y: 1 }, end: { x: 8, y: 1 } },\n\t\t\t\t\ttype: TerminalBuiltinLinkType.Search\n\t\t\t\t});\n\t\t\t\tdeepStrictEqual(activationResult, {\n\t\t\t\t\tlink: 'file:///c%3A/space%20folder/foo/bar.txt',\n\t\t\t\t\tsource: 'editor',\n\t\t\t\t\tselection: {\n\t\t\t\t\t\tstartColumn: 5,\n\t\t\t\t\t\tstartLineNumber: 10,\n\t\t\t\t\t\tendColumn: undefined,\n\t\t\t\t\t\tendLineNumber: undefined\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tawait opener.open({\n\t\t\t\t\ttext: '.\\\\foo\\\\bar.txt:10:5',\n\t\t\t\t\tbufferRange: { start: { x: 1, y: 1 }, end: { x: 8, y: 1 } },\n\t\t\t\t\ttype: TerminalBuiltinLinkType.Search\n\t\t\t\t});\n\t\t\t\tdeepStrictEqual(activationResult, {\n\t\t\t\t\tlink: 'file:///c%3A/space%20folder/foo/bar.txt',\n\t\t\t\t\tsource: 'editor',\n\t\t\t\t\tselection: {\n\t\t\t\t\t\tstartColumn: 5,\n\t\t\t\t\t\tstartLineNumber: 10,\n\t\t\t\t\t\tendColumn: undefined,\n\t\t\t\t\t\tendLineNumber: undefined\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n});\n"]}