{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminalContrib/links/test/browser/terminalWordLinkDetector.test.ts"],"names":[],"mappings":"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","file":"terminalWordLinkDetector.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { importAMDNodeModule } from 'vs/amdX';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from 'vs/base/test/common/utils';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITerminalSimpleLink, TerminalBuiltinLinkType } from 'vs/workbench/contrib/terminalContrib/links/browser/links';\nimport { TerminalWordLinkDetector } from 'vs/workbench/contrib/terminalContrib/links/browser/terminalWordLinkDetector';\nimport { assertLinkHelper } from 'vs/workbench/contrib/terminalContrib/links/test/browser/linkTestUtils';\nimport { TestProductService } from 'vs/workbench/test/common/workbenchTestServices';\nimport type { Terminal } from 'xterm';\n\nsuite('Workbench - TerminalWordLinkDetector', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet configurationService: TestConfigurationService;\n\tlet detector: TerminalWordLinkDetector;\n\tlet xterm: Terminal;\n\tlet instantiationService: TestInstantiationService;\n\n\tsetup(async () => {\n\t\tinstantiationService = store.add(new TestInstantiationService());\n\t\tconfigurationService = new TestConfigurationService();\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: '' } });\n\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\t\tinstantiationService.set(IProductService, TestProductService);\n\n\t\tconst TerminalCtor = (await importAMDNodeModule<typeof import('xterm')>('xterm', 'lib/xterm.js')).Terminal;\n\t\txterm = store.add(new TerminalCtor({ allowProposedApi: true, cols: 80, rows: 30 }));\n\t\tdetector = store.add(instantiationService.createInstance(TerminalWordLinkDetector, xterm));\n\t});\n\n\tasync function assertLink(\n\t\ttext: string,\n\t\texpected: (Pick<ITerminalSimpleLink, 'text'> & { range: [number, number][] })[]\n\t) {\n\t\tawait assertLinkHelper(text, expected, detector, TerminalBuiltinLinkType.Search);\n\t}\n\n\tsuite('should link words as defined by wordSeparators', () => {\n\t\ttest('\" ()[]\"', async () => {\n\t\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ()[]' } });\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\t\tawait assertLink('foo', [{ range: [[1, 1], [3, 1]], text: 'foo' }]);\n\t\t\tawait assertLink(' foo ', [{ range: [[2, 1], [4, 1]], text: 'foo' }]);\n\t\t\tawait assertLink('(foo)', [{ range: [[2, 1], [4, 1]], text: 'foo' }]);\n\t\t\tawait assertLink('[foo]', [{ range: [[2, 1], [4, 1]], text: 'foo' }]);\n\t\t\tawait assertLink('{foo}', [{ range: [[1, 1], [5, 1]], text: '{foo}' }]);\n\t\t});\n\t\ttest('\" \"', async () => {\n\t\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\t\tawait assertLink('foo', [{ range: [[1, 1], [3, 1]], text: 'foo' }]);\n\t\t\tawait assertLink(' foo ', [{ range: [[2, 1], [4, 1]], text: 'foo' }]);\n\t\t\tawait assertLink('(foo)', [{ range: [[1, 1], [5, 1]], text: '(foo)' }]);\n\t\t\tawait assertLink('[foo]', [{ range: [[1, 1], [5, 1]], text: '[foo]' }]);\n\t\t\tawait assertLink('{foo}', [{ range: [[1, 1], [5, 1]], text: '{foo}' }]);\n\t\t});\n\t\ttest('\" []\"', async () => {\n\t\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' []' } });\n\t\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\t\tawait assertLink('aabbccdd.txt ', [{ range: [[1, 1], [12, 1]], text: 'aabbccdd.txt' }]);\n\t\t\tawait assertLink(' aabbccdd.txt ', [{ range: [[2, 1], [13, 1]], text: 'aabbccdd.txt' }]);\n\t\t\tawait assertLink(' [aabbccdd.txt] ', [{ range: [[3, 1], [14, 1]], text: 'aabbccdd.txt' }]);\n\t\t});\n\t});\n\n\tsuite('should ignore powerline symbols', () => {\n\t\tfor (let i = 0xe0b0; i <= 0xe0bf; i++) {\n\t\t\ttest(`\\\\u${i.toString(16)}`, async () => {\n\t\t\t\tawait assertLink(`${String.fromCharCode(i)}foo${String.fromCharCode(i)}`, [{ range: [[2, 1], [4, 1]], text: 'foo' }]);\n\t\t\t});\n\t\t}\n\t});\n\n\t// These are failing - the link's start x is 1 px too far to the right bc it starts\n\t// with a wide character, which the terminalLinkHelper currently doesn't account for\n\ttest.skip('should support wide characters', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' []' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('我是学生.txt ', [{ range: [[1, 1], [12, 1]], text: '我是学生.txt' }]);\n\t\tawait assertLink(' 我是学生.txt ', [{ range: [[2, 1], [13, 1]], text: '我是学生.txt' }]);\n\t\tawait assertLink(' [我是学生.txt] ', [{ range: [[3, 1], [14, 1]], text: '我是学生.txt' }]);\n\t});\n\n\ttest('should support multiple link results', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('foo bar', [\n\t\t\t{ range: [[1, 1], [3, 1]], text: 'foo' },\n\t\t\t{ range: [[5, 1], [7, 1]], text: 'bar' }\n\t\t]);\n\t});\n\n\ttest('should remove trailing colon in the link results', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('foo:5:6: bar:0:32:', [\n\t\t\t{ range: [[1, 1], [7, 1]], text: 'foo:5:6' },\n\t\t\t{ range: [[10, 1], [17, 1]], text: 'bar:0:32' }\n\t\t]);\n\t});\n\n\ttest('should support wrapping', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('fsdjfsdkfjslkdfjskdfjsldkfjsdlkfjslkdjfskldjflskdfjskldjflskdfjsdklfjsdklfjsldkfjsdlkfjsdlkfjsdlkfjsldkfjslkdfjsdlkfjsldkfjsdlkfjskdfjsldkfjsdlkfjslkdfjsdlkfjsldkfjsldkfjsldkfjslkdfjsdlkfjslkdfjsdklfsd', [\n\t\t\t{ range: [[1, 1], [41, 3]], text: 'fsdjfsdkfjslkdfjskdfjsldkfjsdlkfjslkdjfskldjflskdfjskldjflskdfjsdklfjsdklfjsldkfjsdlkfjsdlkfjsdlkfjsldkfjslkdfjsdlkfjsldkfjsdlkfjskdfjsldkfjsdlkfjslkdfjsdlkfjsldkfjsldkfjsldkfjslkdfjsdlkfjslkdfjsdklfsd' },\n\t\t]);\n\t});\n\ttest('should support wrapping with multiple links', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('fsdjfsdkfjslkdfjskdfjsldkfj sdlkfjslkdjfskldjflskdfjskldjflskdfj sdklfjsdklfjsldkfjsdlkfjsdlkfjsdlkfjsldkfjslkdfjsdlkfjsldkfjsdlkfjskdfjsldkfjsdlkfjslkdfjsdlkfjsldkfjsldkfjsldkfjslkdfjsdlkfjslkdfjsdklfsd', [\n\t\t\t{ range: [[1, 1], [27, 1]], text: 'fsdjfsdkfjslkdfjskdfjsldkfj' },\n\t\t\t{ range: [[29, 1], [64, 1]], text: 'sdlkfjslkdjfskldjflskdfjskldjflskdfj' },\n\t\t\t{ range: [[66, 1], [43, 3]], text: 'sdklfjsdklfjsldkfjsdlkfjsdlkfjsdlkfjsldkfjslkdfjsdlkfjsldkfjsdlkfjskdfjsldkfjsdlkfjslkdfjsdlkfjsldkfjsldkfjsldkfjslkdfjsdlkfjslkdfjsdklfsd' }\n\t\t]);\n\t});\n\ttest('does not return any links for empty text', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('', []);\n\t});\n\ttest('should support file scheme links', async () => {\n\t\tawait configurationService.setUserConfiguration('terminal', { integrated: { wordSeparators: ' ' } });\n\t\tconfigurationService.onDidChangeConfigurationEmitter.fire({ affectsConfiguration: () => true } as any);\n\t\tawait assertLink('file:///C:/users/test/file.txt ', [{ range: [[1, 1], [30, 1]], text: 'file:///C:/users/test/file.txt' }]);\n\t\tawait assertLink('file:///C:/users/test/file.txt:1:10 ', [{ range: [[1, 1], [35, 1]], text: 'file:///C:/users/test/file.txt:1:10' }]);\n\t});\n});\n"]}