{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminalContrib/typeAhead/browser/terminalTypeAheadAddon.ts"],"names":[],"mappings":"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","file":"terminalTypeAheadAddon.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { disposableTimeout } from 'vs/base/common/async';\nimport { Color, RGBA } from 'vs/base/common/color';\nimport { debounce } from 'vs/base/common/decorators';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { XtermAttributes, IXtermCore } from 'vs/workbench/contrib/terminal/browser/xterm-private';\nimport { DEFAULT_LOCAL_ECHO_EXCLUDE, IBeforeProcessDataEvent, ITerminalConfiguration, ITerminalProcessManager, TERMINAL_CONFIG_SECTION } from 'vs/workbench/contrib/terminal/common/terminal';\nimport type { IBuffer, IBufferCell, IDisposable, ITerminalAddon, Terminal } from 'xterm';\n\nconst enum VT {\n\tEsc = '\\x1b',\n\tCsi = `\\x1b[`,\n\tShowCursor = `\\x1b[?25h`,\n\tHideCursor = `\\x1b[?25l`,\n\tDeleteChar = `\\x1b[X`,\n\tDeleteRestOfLine = `\\x1b[K`,\n}\n\nconst CSI_STYLE_RE = /^\\x1b\\[[0-9;]*m/;\nconst CSI_MOVE_RE = /^\\x1b\\[?([0-9]*)(;[35])?O?([DC])/;\nconst NOT_WORD_RE = /[^a-z0-9]/i;\n\nconst enum StatsConstants {\n\tStatsBufferSize = 24,\n\tStatsSendTelemetryEvery = 1000 * 60 * 5, // how often to collect stats\n\tStatsMinSamplesToTurnOn = 5,\n\tStatsMinAccuracyToTurnOn = 0.3,\n\tStatsToggleOffThreshold = 0.5, // if latency is less than `threshold * this`, turn off\n}\n\n/**\n * Codes that should be omitted from sending to the prediction engine and instead omitted directly:\n * - Hide cursor (DECTCEM): We wrap the local echo sequence in hide and show\n *   CSI ? 2 5 l\n * - Show cursor (DECTCEM): We wrap the local echo sequence in hide and show\n *   CSI ? 2 5 h\n * - Device Status Report (DSR): These sequence fire report events from xterm which could cause\n *   double reporting and potentially a stack overflow (#119472)\n *   CSI Ps n\n *   CSI ? Ps n\n */\nconst PREDICTION_OMIT_RE = /^(\\x1b\\[(\\??25[hl]|\\??[0-9;]+n))+/;\n\nconst core = (terminal: Terminal): IXtermCore => (terminal as any)._core;\nconst flushOutput = (terminal: Terminal) => {\n\t// TODO: Flushing output is not possible anymore without async\n};\n\nconst enum CursorMoveDirection {\n\tBack = 'D',\n\tForwards = 'C',\n}\n\ninterface ICoordinate {\n\tx: number;\n\ty: number;\n\tbaseY: number;\n}\n\nclass Cursor implements ICoordinate {\n\tprivate _x = 0;\n\tprivate _y = 1;\n\tprivate _baseY = 1;\n\n\tget x() {\n\t\treturn this._x;\n\t}\n\n\tget y() {\n\t\treturn this._y;\n\t}\n\n\tget baseY() {\n\t\treturn this._baseY;\n\t}\n\n\tget coordinate(): ICoordinate {\n\t\treturn { x: this._x, y: this._y, baseY: this._baseY };\n\t}\n\n\tconstructor(\n\t\treadonly rows: number,\n\t\treadonly cols: number,\n\t\tprivate readonly _buffer: IBuffer\n\t) {\n\t\tthis._x = _buffer.cursorX;\n\t\tthis._y = _buffer.cursorY;\n\t\tthis._baseY = _buffer.baseY;\n\t}\n\n\tgetLine() {\n\t\treturn this._buffer.getLine(this._y + this._baseY);\n\t}\n\n\tgetCell(loadInto?: IBufferCell) {\n\t\treturn this.getLine()?.getCell(this._x, loadInto);\n\t}\n\n\tmoveTo(coordinate: ICoordinate) {\n\t\tthis._x = coordinate.x;\n\t\tthis._y = (coordinate.y + coordinate.baseY) - this._baseY;\n\t\treturn this.moveInstruction();\n\t}\n\n\tclone() {\n\t\tconst c = new Cursor(this.rows, this.cols, this._buffer);\n\t\tc.moveTo(this);\n\t\treturn c;\n\t}\n\n\tmove(x: number, y: number) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\treturn this.moveInstruction();\n\t}\n\n\tshift(x: number = 0, y: number = 0) {\n\t\tthis._x += x;\n\t\tthis._y += y;\n\t\treturn this.moveInstruction();\n\t}\n\n\tmoveInstruction() {\n\t\tif (this._y >= this.rows) {\n\t\t\tthis._baseY += this._y - (this.rows - 1);\n\t\t\tthis._y = this.rows - 1;\n\t\t} else if (this._y < 0) {\n\t\t\tthis._baseY -= this._y;\n\t\t\tthis._y = 0;\n\t\t}\n\n\t\treturn `${VT.Csi}${this._y + 1};${this._x + 1}H`;\n\t}\n}\n\nconst moveToWordBoundary = (b: IBuffer, cursor: Cursor, direction: -1 | 1) => {\n\tlet ateLeadingWhitespace = false;\n\tif (direction < 0) {\n\t\tcursor.shift(-1);\n\t}\n\n\tlet cell: IBufferCell | undefined;\n\twhile (cursor.x >= 0) {\n\t\tcell = cursor.getCell(cell);\n\t\tif (!cell?.getCode()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst chars = cell.getChars();\n\t\tif (NOT_WORD_RE.test(chars)) {\n\t\t\tif (ateLeadingWhitespace) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tateLeadingWhitespace = true;\n\t\t}\n\n\t\tcursor.shift(direction);\n\t}\n\n\tif (direction < 0) {\n\t\tcursor.shift(1); // we want to place the cursor after the whitespace starting the word\n\t}\n};\n\nconst enum MatchResult {\n\t/** matched successfully */\n\tSuccess,\n\t/** failed to match */\n\tFailure,\n\t/** buffer data, it might match in the future one more data comes in */\n\tBuffer,\n}\n\nexport interface IPrediction {\n\t/**\n\t * Whether applying this prediction can modify the style attributes of the\n\t * terminal. If so it means we need to reset the cursor style if it's\n\t * rolled back.\n\t */\n\treadonly affectsStyle?: boolean;\n\n\t/**\n\t * If set to false, the prediction will not be cleared if no input is\n\t * received from the server.\n\t */\n\treadonly clearAfterTimeout?: boolean;\n\n\t/**\n\t * Returns a sequence to apply the prediction.\n\t * @param buffer to write to\n\t * @param cursor position to write the data. Should advance the cursor.\n\t * @returns a string to be written to the user terminal, or optionally a\n\t * string for the user terminal and real pty.\n\t */\n\tapply(buffer: IBuffer, cursor: Cursor): string;\n\n\t/**\n\t * Returns a sequence to roll back a previous `apply()` call. If\n\t * `rollForwards` is not given, then this is also called if a prediction\n\t * is correct before show the user's data.\n\t */\n\trollback(cursor: Cursor): string;\n\n\t/**\n\t * If available, this will be called when the prediction is correct.\n\t */\n\trollForwards(cursor: Cursor, withInput: string): string;\n\n\t/**\n\t * Returns whether the given input is one expected by this prediction.\n\t * @param input reader for the input the PTY is giving\n\t * @param lookBehind the last successfully-made prediction, if any\n\t */\n\tmatches(input: StringReader, lookBehind?: IPrediction): MatchResult;\n}\n\nclass StringReader {\n\tindex = 0;\n\n\tget remaining() {\n\t\treturn this._input.length - this.index;\n\t}\n\n\tget eof() {\n\t\treturn this.index === this._input.length;\n\t}\n\n\tget rest() {\n\t\treturn this._input.slice(this.index);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _input: string\n\t) { }\n\n\t/**\n\t * Advances the reader and returns the character if it matches.\n\t */\n\teatChar(char: string) {\n\t\tif (this._input[this.index] !== char) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.index++;\n\t\treturn char;\n\t}\n\n\t/**\n\t * Advances the reader and returns the string if it matches.\n\t */\n\teatStr(substr: string) {\n\t\tif (this._input.slice(this.index, substr.length) !== substr) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.index += substr.length;\n\t\treturn substr;\n\t}\n\n\t/**\n\t * Matches and eats the substring character-by-character. If EOF is reached\n\t * before the substring is consumed, it will buffer. Index is not moved\n\t * if it's not a match.\n\t */\n\teatGradually(substr: string): MatchResult {\n\t\tconst prevIndex = this.index;\n\t\tfor (let i = 0; i < substr.length; i++) {\n\t\t\tif (i > 0 && this.eof) {\n\t\t\t\treturn MatchResult.Buffer;\n\t\t\t}\n\n\t\t\tif (!this.eatChar(substr[i])) {\n\t\t\t\tthis.index = prevIndex;\n\t\t\t\treturn MatchResult.Failure;\n\t\t\t}\n\t\t}\n\n\t\treturn MatchResult.Success;\n\t}\n\n\t/**\n\t * Advances the reader and returns the regex if it matches.\n\t */\n\teatRe(re: RegExp) {\n\t\tconst match = re.exec(this._input.slice(this.index));\n\t\tif (!match) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.index += match[0].length;\n\t\treturn match;\n\t}\n\n\t/**\n\t * Advances the reader and returns the character if the code matches.\n\t */\n\teatCharCode(min = 0, max = min + 1) {\n\t\tconst code = this._input.charCodeAt(this.index);\n\t\tif (code < min || code >= max) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.index++;\n\t\treturn code;\n\t}\n}\n\n/**\n * Preidction which never tests true. Will always discard predictions made\n * after it.\n */\nclass HardBoundary implements IPrediction {\n\treadonly clearAfterTimeout = false;\n\n\tapply() {\n\t\treturn '';\n\t}\n\n\trollback() {\n\t\treturn '';\n\t}\n\n\trollForwards() {\n\t\treturn '';\n\t}\n\n\tmatches() {\n\t\treturn MatchResult.Failure;\n\t}\n}\n\n/**\n * Wraps another prediction. Does not apply the prediction, but will pass\n * through its `matches` request.\n */\nclass TentativeBoundary implements IPrediction {\n\tprivate _appliedCursor?: Cursor;\n\n\tconstructor(readonly inner: IPrediction) { }\n\n\tapply(buffer: IBuffer, cursor: Cursor) {\n\t\tthis._appliedCursor = cursor.clone();\n\t\tthis.inner.apply(buffer, this._appliedCursor);\n\t\treturn '';\n\t}\n\n\trollback(cursor: Cursor) {\n\t\tthis.inner.rollback(cursor.clone());\n\t\treturn '';\n\t}\n\n\trollForwards(cursor: Cursor, withInput: string) {\n\t\tif (this._appliedCursor) {\n\t\t\tcursor.moveTo(this._appliedCursor);\n\t\t}\n\n\t\treturn withInput;\n\t}\n\n\tmatches(input: StringReader) {\n\t\treturn this.inner.matches(input);\n\t}\n}\n\nconst isTenativeCharacterPrediction = (p: unknown): p is (TentativeBoundary & { inner: CharacterPrediction }) =>\n\tp instanceof TentativeBoundary && p.inner instanceof CharacterPrediction;\n\n/**\n * Prediction for a single alphanumeric character.\n */\nclass CharacterPrediction implements IPrediction {\n\treadonly affectsStyle = true;\n\n\tappliedAt?: {\n\t\tpos: ICoordinate;\n\t\toldAttributes: string;\n\t\toldChar: string;\n\t};\n\n\tconstructor(private readonly _style: TypeAheadStyle, private readonly _char: string) { }\n\n\tapply(_: IBuffer, cursor: Cursor) {\n\t\tconst cell = cursor.getCell();\n\t\tthis.appliedAt = cell\n\t\t\t? { pos: cursor.coordinate, oldAttributes: attributesToSeq(cell), oldChar: cell.getChars() }\n\t\t\t: { pos: cursor.coordinate, oldAttributes: '', oldChar: '' };\n\n\t\tcursor.shift(1);\n\n\t\treturn this._style.apply + this._char + this._style.undo;\n\t}\n\n\trollback(cursor: Cursor) {\n\t\tif (!this.appliedAt) {\n\t\t\treturn ''; // not applied\n\t\t}\n\n\t\tconst { oldAttributes, oldChar, pos } = this.appliedAt;\n\t\tconst r = cursor.moveTo(pos) + (oldChar ? `${oldAttributes}${oldChar}${cursor.moveTo(pos)}` : VT.DeleteChar);\n\t\treturn r;\n\t}\n\n\trollForwards(cursor: Cursor, input: string) {\n\t\tif (!this.appliedAt) {\n\t\t\treturn ''; // not applied\n\t\t}\n\n\t\treturn cursor.clone().moveTo(this.appliedAt.pos) + input;\n\t}\n\n\tmatches(input: StringReader, lookBehind?: IPrediction) {\n\t\tconst startIndex = input.index;\n\n\t\t// remove any styling CSI before checking the char\n\t\twhile (input.eatRe(CSI_STYLE_RE)) { }\n\n\t\tif (input.eof) {\n\t\t\treturn MatchResult.Buffer;\n\t\t}\n\n\t\tif (input.eatChar(this._char)) {\n\t\t\treturn MatchResult.Success;\n\t\t}\n\n\t\tif (lookBehind instanceof CharacterPrediction) {\n\t\t\t// see #112842\n\t\t\tconst sillyZshOutcome = input.eatGradually(`\\b${lookBehind._char}${this._char}`);\n\t\t\tif (sillyZshOutcome !== MatchResult.Failure) {\n\t\t\t\treturn sillyZshOutcome;\n\t\t\t}\n\t\t}\n\n\t\tinput.index = startIndex;\n\t\treturn MatchResult.Failure;\n\t}\n}\n\nclass BackspacePrediction implements IPrediction {\n\tprotected _appliedAt?: {\n\t\tpos: ICoordinate;\n\t\toldAttributes: string;\n\t\toldChar: string;\n\t\tisLastChar: boolean;\n\t};\n\n\tconstructor(private readonly _terminal: Terminal) { }\n\n\tapply(_: IBuffer, cursor: Cursor) {\n\t\t// at eol if everything to the right is whitespace (zsh will emit a \"clear line\" code in this case)\n\t\t// todo: can be optimized if `getTrimmedLength` is exposed from xterm\n\t\tconst isLastChar = !cursor.getLine()?.translateToString(undefined, cursor.x).trim();\n\t\tconst pos = cursor.coordinate;\n\t\tconst move = cursor.shift(-1);\n\t\tconst cell = cursor.getCell();\n\t\tthis._appliedAt = cell\n\t\t\t? { isLastChar, pos, oldAttributes: attributesToSeq(cell), oldChar: cell.getChars() }\n\t\t\t: { isLastChar, pos, oldAttributes: '', oldChar: '' };\n\n\t\treturn move + VT.DeleteChar;\n\t}\n\n\trollback(cursor: Cursor) {\n\t\tif (!this._appliedAt) {\n\t\t\treturn ''; // not applied\n\t\t}\n\n\t\tconst { oldAttributes, oldChar, pos } = this._appliedAt;\n\t\tif (!oldChar) {\n\t\t\treturn cursor.moveTo(pos) + VT.DeleteChar;\n\t\t}\n\n\t\treturn oldAttributes + oldChar + cursor.moveTo(pos) + attributesToSeq(core(this._terminal)._inputHandler._curAttrData);\n\t}\n\n\trollForwards() {\n\t\treturn '';\n\t}\n\n\tmatches(input: StringReader) {\n\t\tif (this._appliedAt?.isLastChar) {\n\t\t\tconst r1 = input.eatGradually(`\\b${VT.Csi}K`);\n\t\t\tif (r1 !== MatchResult.Failure) {\n\t\t\t\treturn r1;\n\t\t\t}\n\n\t\t\tconst r2 = input.eatGradually(`\\b \\b`);\n\t\t\tif (r2 !== MatchResult.Failure) {\n\t\t\t\treturn r2;\n\t\t\t}\n\t\t}\n\n\t\treturn MatchResult.Failure;\n\t}\n}\n\nclass NewlinePrediction implements IPrediction {\n\tprotected _prevPosition?: ICoordinate;\n\n\tapply(_: IBuffer, cursor: Cursor) {\n\t\tthis._prevPosition = cursor.coordinate;\n\t\tcursor.move(0, cursor.y + 1);\n\t\treturn '\\r\\n';\n\t}\n\n\trollback(cursor: Cursor) {\n\t\treturn this._prevPosition ? cursor.moveTo(this._prevPosition) : '';\n\t}\n\n\trollForwards() {\n\t\treturn ''; // does not need to rewrite\n\t}\n\n\tmatches(input: StringReader) {\n\t\treturn input.eatGradually('\\r\\n');\n\t}\n}\n\n/**\n * Prediction when the cursor reaches the end of the line. Similar to newline\n * prediction, but shells handle it slightly differently.\n */\nclass LinewrapPrediction extends NewlinePrediction implements IPrediction {\n\toverride apply(_: IBuffer, cursor: Cursor) {\n\t\tthis._prevPosition = cursor.coordinate;\n\t\tcursor.move(0, cursor.y + 1);\n\t\treturn ' \\r';\n\t}\n\n\toverride matches(input: StringReader) {\n\t\t// bash and zshell add a space which wraps in the terminal, then a CR\n\t\tconst r = input.eatGradually(' \\r');\n\t\tif (r !== MatchResult.Failure) {\n\t\t\t// zshell additionally adds a clear line after wrapping to be safe -- eat it\n\t\t\tconst r2 = input.eatGradually(VT.DeleteRestOfLine);\n\t\t\treturn r2 === MatchResult.Buffer ? MatchResult.Buffer : r;\n\t\t}\n\n\t\treturn input.eatGradually('\\r\\n');\n\t}\n}\n\nclass CursorMovePrediction implements IPrediction {\n\tprivate _applied?: {\n\t\trollForward: string;\n\t\tprevPosition: number;\n\t\tprevAttrs: string;\n\t\tamount: number;\n\t};\n\n\tconstructor(\n\t\tprivate readonly _direction: CursorMoveDirection,\n\t\tprivate readonly _moveByWords: boolean,\n\t\tprivate readonly _amount: number,\n\t) { }\n\n\tapply(buffer: IBuffer, cursor: Cursor) {\n\t\tconst prevPosition = cursor.x;\n\t\tconst currentCell = cursor.getCell();\n\t\tconst prevAttrs = currentCell ? attributesToSeq(currentCell) : '';\n\n\t\tconst { _amount: amount, _direction: direction, _moveByWords: moveByWords } = this;\n\t\tconst delta = direction === CursorMoveDirection.Back ? -1 : 1;\n\n\t\tconst target = cursor.clone();\n\t\tif (moveByWords) {\n\t\t\tfor (let i = 0; i < amount; i++) {\n\t\t\t\tmoveToWordBoundary(buffer, target, delta);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.shift(delta * amount);\n\t\t}\n\n\t\tthis._applied = {\n\t\t\tamount: Math.abs(cursor.x - target.x),\n\t\t\tprevPosition,\n\t\t\tprevAttrs,\n\t\t\trollForward: cursor.moveTo(target),\n\t\t};\n\n\t\treturn this._applied.rollForward;\n\t}\n\n\trollback(cursor: Cursor) {\n\t\tif (!this._applied) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn cursor.move(this._applied.prevPosition, cursor.y) + this._applied.prevAttrs;\n\t}\n\n\trollForwards() {\n\t\treturn ''; // does not need to rewrite\n\t}\n\n\tmatches(input: StringReader) {\n\t\tif (!this._applied) {\n\t\t\treturn MatchResult.Failure;\n\t\t}\n\n\t\tconst direction = this._direction;\n\t\tconst { amount, rollForward } = this._applied;\n\n\n\t\t// arg can be omitted to move one character. We don't eatGradually() here\n\t\t// or below moves that don't go as far as the cursor would be buffered\n\t\t// indefinitely\n\t\tif (input.eatStr(`${VT.Csi}${direction}`.repeat(amount))) {\n\t\t\treturn MatchResult.Success;\n\t\t}\n\n\t\t// \\b is the equivalent to moving one character back\n\t\tif (direction === CursorMoveDirection.Back) {\n\t\t\tif (input.eatStr(`\\b`.repeat(amount))) {\n\t\t\t\treturn MatchResult.Success;\n\t\t\t}\n\t\t}\n\n\t\t// check if the cursor position is set absolutely\n\t\tif (rollForward) {\n\t\t\tconst r = input.eatGradually(rollForward);\n\t\t\tif (r !== MatchResult.Failure) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\t// check for a relative move in the direction\n\t\treturn input.eatGradually(`${VT.Csi}${amount}${direction}`);\n\t}\n}\n\nexport class PredictionStats extends Disposable {\n\tprivate readonly _stats: [latency: number, correct: boolean][] = [];\n\tprivate _index = 0;\n\tprivate readonly _addedAtTime = new WeakMap<IPrediction, number>();\n\tprivate readonly _changeEmitter = new Emitter<void>();\n\treadonly onChange = this._changeEmitter.event;\n\n\t/**\n\t * Gets the percent (0-1) of predictions that were accurate.\n\t */\n\tget accuracy() {\n\t\tlet correctCount = 0;\n\t\tfor (const [, correct] of this._stats) {\n\t\t\tif (correct) {\n\t\t\t\tcorrectCount++;\n\t\t\t}\n\t\t}\n\n\t\treturn correctCount / (this._stats.length || 1);\n\t}\n\n\t/**\n\t * Gets the number of recorded stats.\n\t */\n\tget sampleSize() {\n\t\treturn this._stats.length;\n\t}\n\n\t/**\n\t * Gets latency stats of successful predictions.\n\t */\n\tget latency() {\n\t\tconst latencies = this._stats.filter(([, correct]) => correct).map(([s]) => s).sort();\n\n\t\treturn {\n\t\t\tcount: latencies.length,\n\t\t\tmin: latencies[0],\n\t\t\tmedian: latencies[Math.floor(latencies.length / 2)],\n\t\t\tmax: latencies[latencies.length - 1],\n\t\t};\n\t}\n\n\t/**\n\t * Gets the maximum observed latency.\n\t */\n\tget maxLatency() {\n\t\tlet max = -Infinity;\n\t\tfor (const [latency, correct] of this._stats) {\n\t\t\tif (correct) {\n\t\t\t\tmax = Math.max(latency, max);\n\t\t\t}\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tconstructor(timeline: PredictionTimeline) {\n\t\tsuper();\n\t\tthis._register(timeline.onPredictionAdded(p => this._addedAtTime.set(p, Date.now())));\n\t\tthis._register(timeline.onPredictionSucceeded(this._pushStat.bind(this, true)));\n\t\tthis._register(timeline.onPredictionFailed(this._pushStat.bind(this, false)));\n\t}\n\n\tprivate _pushStat(correct: boolean, prediction: IPrediction) {\n\t\tconst started = this._addedAtTime.get(prediction)!;\n\t\tthis._stats[this._index] = [Date.now() - started, correct];\n\t\tthis._index = (this._index + 1) % StatsConstants.StatsBufferSize;\n\t\tthis._changeEmitter.fire();\n\t}\n}\n\nexport class PredictionTimeline {\n\t/**\n\t * Expected queue of events. Only predictions for the lowest are\n\t * written into the terminal.\n\t */\n\tprivate _expected: ({ gen: number; p: IPrediction })[] = [];\n\n\t/**\n\t * Current prediction generation.\n\t */\n\tprivate _currentGen = 0;\n\n\t/**\n\t * Current cursor position -- kept outside the buffer since it can be ahead\n\t * if typing swiftly. The position of the cursor that the user is currently\n\t * looking at on their screen (or will be looking at after all pending writes\n\t * are flushed.)\n\t */\n\tprivate _physicalCursor: Cursor | undefined;\n\n\t/**\n\t * Cursor position taking into account all (possibly not-yet-applied)\n\t * predictions. A new prediction inserted, if applied, will be applied at\n\t * the position of the tentative cursor.\n\t */\n\tprivate _tenativeCursor: Cursor | undefined;\n\n\t/**\n\t * Previously sent data that was buffered and should be prepended to the\n\t * next input.\n\t */\n\tprivate _inputBuffer?: string;\n\n\t/**\n\t * Whether predictions are echoed to the terminal. If false, predictions\n\t * will still be computed internally for latency metrics, but input will\n\t * never be adjusted.\n\t */\n\tprivate _showPredictions = false;\n\n\t/**\n\t * The last successfully-made prediction.\n\t */\n\tprivate _lookBehind?: IPrediction;\n\n\tprivate readonly _addedEmitter = new Emitter<IPrediction>();\n\treadonly onPredictionAdded = this._addedEmitter.event;\n\tprivate readonly _failedEmitter = new Emitter<IPrediction>();\n\treadonly onPredictionFailed = this._failedEmitter.event;\n\tprivate readonly _succeededEmitter = new Emitter<IPrediction>();\n\treadonly onPredictionSucceeded = this._succeededEmitter.event;\n\n\tprivate get _currentGenerationPredictions() {\n\t\treturn this._expected.filter(({ gen }) => gen === this._expected[0].gen).map(({ p }) => p);\n\t}\n\n\tget isShowingPredictions() {\n\t\treturn this._showPredictions;\n\t}\n\n\tget length() {\n\t\treturn this._expected.length;\n\t}\n\n\tconstructor(readonly terminal: Terminal, private readonly _style: TypeAheadStyle) { }\n\n\tsetShowPredictions(show: boolean) {\n\t\tif (show === this._showPredictions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// console.log('set predictions:', show);\n\t\tthis._showPredictions = show;\n\n\t\tconst buffer = this._getActiveBuffer();\n\t\tif (!buffer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst toApply = this._currentGenerationPredictions;\n\t\tif (show) {\n\t\t\tthis.clearCursor();\n\t\t\tthis._style.expectIncomingStyle(toApply.reduce((count, p) => p.affectsStyle ? count + 1 : count, 0));\n\t\t\tthis.terminal.write(toApply.map(p => p.apply(buffer, this.physicalCursor(buffer))).join(''));\n\t\t} else {\n\t\t\tthis.terminal.write(toApply.reverse().map(p => p.rollback(this.physicalCursor(buffer))).join(''));\n\t\t}\n\t}\n\n\t/**\n\t * Undoes any predictions written and resets expectations.\n\t */\n\tundoAllPredictions() {\n\t\tconst buffer = this._getActiveBuffer();\n\t\tif (this._showPredictions && buffer) {\n\t\t\tthis.terminal.write(this._currentGenerationPredictions.reverse()\n\t\t\t\t.map(p => p.rollback(this.physicalCursor(buffer))).join(''));\n\t\t}\n\n\t\tthis._expected = [];\n\t}\n\n\t/**\n\t * Should be called when input is incoming to the temrinal.\n\t */\n\tbeforeServerInput(input: string): string {\n\t\tconst originalInput = input;\n\t\tif (this._inputBuffer) {\n\t\t\tinput = this._inputBuffer + input;\n\t\t\tthis._inputBuffer = undefined;\n\t\t}\n\n\t\tif (!this._expected.length) {\n\t\t\tthis._clearPredictionState();\n\t\t\treturn input;\n\t\t}\n\n\t\tconst buffer = this._getActiveBuffer();\n\t\tif (!buffer) {\n\t\t\tthis._clearPredictionState();\n\t\t\treturn input;\n\t\t}\n\n\t\tlet output = '';\n\n\t\tconst reader = new StringReader(input);\n\t\tconst startingGen = this._expected[0].gen;\n\t\tconst emitPredictionOmitted = () => {\n\t\t\tconst omit = reader.eatRe(PREDICTION_OMIT_RE);\n\t\t\tif (omit) {\n\t\t\t\toutput += omit[0];\n\t\t\t}\n\t\t};\n\n\t\tReadLoop: while (this._expected.length && reader.remaining > 0) {\n\t\t\temitPredictionOmitted();\n\n\t\t\tconst { p: prediction, gen } = this._expected[0];\n\t\t\tconst cursor = this.physicalCursor(buffer);\n\t\t\tconst beforeTestReaderIndex = reader.index;\n\t\t\tswitch (prediction.matches(reader, this._lookBehind)) {\n\t\t\t\tcase MatchResult.Success: {\n\t\t\t\t\t// if the input character matches what the next prediction expected, undo\n\t\t\t\t\t// the prediction and write the real character out.\n\t\t\t\t\tconst eaten = input.slice(beforeTestReaderIndex, reader.index);\n\t\t\t\t\tif (gen === startingGen) {\n\t\t\t\t\t\toutput += prediction.rollForwards?.(cursor, eaten);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprediction.apply(buffer, this.physicalCursor(buffer)); // move cursor for additional apply\n\t\t\t\t\t\toutput += eaten;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._succeededEmitter.fire(prediction);\n\t\t\t\t\tthis._lookBehind = prediction;\n\t\t\t\t\tthis._expected.shift();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase MatchResult.Buffer:\n\t\t\t\t\t// on a buffer, store the remaining data and completely read data\n\t\t\t\t\t// to be output as normal.\n\t\t\t\t\tthis._inputBuffer = input.slice(beforeTestReaderIndex);\n\t\t\t\t\treader.index = input.length;\n\t\t\t\t\tbreak ReadLoop;\n\t\t\t\tcase MatchResult.Failure: {\n\t\t\t\t\t// on a failure, roll back all remaining items in this generation\n\t\t\t\t\t// and clear predictions, since they are no longer valid\n\t\t\t\t\tconst rollback = this._expected.filter(p => p.gen === startingGen).reverse();\n\t\t\t\t\toutput += rollback.map(({ p }) => p.rollback(this.physicalCursor(buffer))).join('');\n\t\t\t\t\tif (rollback.some(r => r.p.affectsStyle)) {\n\t\t\t\t\t\t// reading the current style should generally be safe, since predictions\n\t\t\t\t\t\t// always restore the style if they modify it.\n\t\t\t\t\t\toutput += attributesToSeq(core(this.terminal)._inputHandler._curAttrData);\n\t\t\t\t\t}\n\t\t\t\t\tthis._clearPredictionState();\n\t\t\t\t\tthis._failedEmitter.fire(prediction);\n\t\t\t\t\tbreak ReadLoop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\temitPredictionOmitted();\n\n\t\t// Extra data (like the result of running a command) should cause us to\n\t\t// reset the cursor\n\t\tif (!reader.eof) {\n\t\t\toutput += reader.rest;\n\t\t\tthis._clearPredictionState();\n\t\t}\n\n\t\t// If we passed a generation boundary, apply the current generation's predictions\n\t\tif (this._expected.length && startingGen !== this._expected[0].gen) {\n\t\t\tfor (const { p, gen } of this._expected) {\n\t\t\t\tif (gen !== this._expected[0].gen) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (p.affectsStyle) {\n\t\t\t\t\tthis._style.expectIncomingStyle();\n\t\t\t\t}\n\n\t\t\t\toutput += p.apply(buffer, this.physicalCursor(buffer));\n\t\t\t}\n\t\t}\n\n\t\tif (!this._showPredictions) {\n\t\t\treturn originalInput;\n\t\t}\n\n\t\tif (output.length === 0 || output === input) {\n\t\t\treturn output;\n\t\t}\n\n\t\tif (this._physicalCursor) {\n\t\t\toutput += this._physicalCursor.moveInstruction();\n\t\t}\n\n\t\t// prevent cursor flickering while typing\n\t\toutput = VT.HideCursor + output + VT.ShowCursor;\n\n\t\treturn output;\n\t}\n\n\t/**\n\t * Clears any expected predictions and stored state. Should be called when\n\t * the pty gives us something we don't recognize.\n\t */\n\tprivate _clearPredictionState() {\n\t\tthis._expected = [];\n\t\tthis.clearCursor();\n\t\tthis._lookBehind = undefined;\n\t}\n\n\t/**\n\t * Appends a typeahead prediction.\n\t */\n\taddPrediction(buffer: IBuffer, prediction: IPrediction) {\n\t\tthis._expected.push({ gen: this._currentGen, p: prediction });\n\t\tthis._addedEmitter.fire(prediction);\n\n\t\tif (this._currentGen !== this._expected[0].gen) {\n\t\t\tprediction.apply(buffer, this.tentativeCursor(buffer));\n\t\t\treturn false;\n\t\t}\n\n\t\tconst text = prediction.apply(buffer, this.physicalCursor(buffer));\n\t\tthis._tenativeCursor = undefined; // next read will get or clone the physical cursor\n\n\t\tif (this._showPredictions && text) {\n\t\t\tif (prediction.affectsStyle) {\n\t\t\t\tthis._style.expectIncomingStyle();\n\t\t\t}\n\t\t\t// console.log('predict:', JSON.stringify(text));\n\t\t\tthis.terminal.write(text);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Appends a prediction followed by a boundary. The predictions applied\n\t * after this one will only be displayed after the give prediction matches\n\t * pty output/\n\t */\n\taddBoundary(): void;\n\taddBoundary(buffer: IBuffer, prediction: IPrediction): boolean;\n\taddBoundary(buffer?: IBuffer, prediction?: IPrediction) {\n\t\tlet applied = false;\n\t\tif (buffer && prediction) {\n\t\t\t// We apply the prediction so that it's matched against, but wrapped\n\t\t\t// in a tentativeboundary so that it doesn't affect the physical cursor.\n\t\t\t// Then we apply it specifically to the tentative cursor.\n\t\t\tapplied = this.addPrediction(buffer, new TentativeBoundary(prediction));\n\t\t\tprediction.apply(buffer, this.tentativeCursor(buffer));\n\t\t}\n\t\tthis._currentGen++;\n\t\treturn applied;\n\t}\n\n\t/**\n\t * Peeks the last prediction written.\n\t */\n\tpeekEnd(): IPrediction | undefined {\n\t\treturn this._expected[this._expected.length - 1]?.p;\n\t}\n\n\t/**\n\t * Peeks the first pending prediction.\n\t */\n\tpeekStart(): IPrediction | undefined {\n\t\treturn this._expected[0]?.p;\n\t}\n\n\t/**\n\t * Current position of the cursor in the terminal.\n\t */\n\tphysicalCursor(buffer: IBuffer) {\n\t\tif (!this._physicalCursor) {\n\t\t\tif (this._showPredictions) {\n\t\t\t\tflushOutput(this.terminal);\n\t\t\t}\n\t\t\tthis._physicalCursor = new Cursor(this.terminal.rows, this.terminal.cols, buffer);\n\t\t}\n\n\t\treturn this._physicalCursor;\n\t}\n\n\t/**\n\t * Cursor position if all predictions and boundaries that have been inserted\n\t * so far turn out to be successfully predicted.\n\t */\n\ttentativeCursor(buffer: IBuffer) {\n\t\tif (!this._tenativeCursor) {\n\t\t\tthis._tenativeCursor = this.physicalCursor(buffer).clone();\n\t\t}\n\n\t\treturn this._tenativeCursor;\n\t}\n\n\tclearCursor() {\n\t\tthis._physicalCursor = undefined;\n\t\tthis._tenativeCursor = undefined;\n\t}\n\n\tprivate _getActiveBuffer() {\n\t\tconst buffer = this.terminal.buffer.active;\n\t\treturn buffer.type === 'normal' ? buffer : undefined;\n\t}\n}\n\n/**\n * Gets the escape sequence args to restore state/appearance in the cell.\n */\nconst attributesToArgs = (cell: XtermAttributes) => {\n\tif (cell.isAttributeDefault()) { return [0]; }\n\n\tconst args = [];\n\tif (cell.isBold()) { args.push(1); }\n\tif (cell.isDim()) { args.push(2); }\n\tif (cell.isItalic()) { args.push(3); }\n\tif (cell.isUnderline()) { args.push(4); }\n\tif (cell.isBlink()) { args.push(5); }\n\tif (cell.isInverse()) { args.push(7); }\n\tif (cell.isInvisible()) { args.push(8); }\n\n\tif (cell.isFgRGB()) { args.push(38, 2, cell.getFgColor() >>> 24, (cell.getFgColor() >>> 16) & 0xFF, cell.getFgColor() & 0xFF); }\n\tif (cell.isFgPalette()) { args.push(38, 5, cell.getFgColor()); }\n\tif (cell.isFgDefault()) { args.push(39); }\n\n\tif (cell.isBgRGB()) { args.push(48, 2, cell.getBgColor() >>> 24, (cell.getBgColor() >>> 16) & 0xFF, cell.getBgColor() & 0xFF); }\n\tif (cell.isBgPalette()) { args.push(48, 5, cell.getBgColor()); }\n\tif (cell.isBgDefault()) { args.push(49); }\n\n\treturn args;\n};\n\n/**\n * Gets the escape sequence to restore state/appearance in the cell.\n */\nconst attributesToSeq = (cell: XtermAttributes) => `${VT.Csi}${attributesToArgs(cell).join(';')}m`;\n\nconst arrayHasPrefixAt = <T>(a: ReadonlyArray<T>, ai: number, b: ReadonlyArray<T>) => {\n\tif (a.length - ai > b.length) {\n\t\treturn false;\n\t}\n\n\tfor (let bi = 0; bi < b.length; bi++, ai++) {\n\t\tif (b[ai] !== a[ai]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\n/**\n * @see https://github.com/xtermjs/xterm.js/blob/065eb13a9d3145bea687239680ec9696d9112b8e/src/common/InputHandler.ts#L2127\n */\nconst getColorWidth = (params: (number | number[])[], pos: number) => {\n\tconst accu = [0, 0, -1, 0, 0, 0];\n\tlet cSpace = 0;\n\tlet advance = 0;\n\n\tdo {\n\t\tconst v = params[pos + advance];\n\t\taccu[advance + cSpace] = typeof v === 'number' ? v : v[0];\n\t\tif (typeof v !== 'number') {\n\t\t\tlet i = 0;\n\t\t\tdo {\n\t\t\t\tif (accu[1] === 5) {\n\t\t\t\t\tcSpace = 1;\n\t\t\t\t}\n\t\t\t\taccu[advance + i + 1 + cSpace] = v[i];\n\t\t\t} while (++i < v.length && i + advance + 1 + cSpace < accu.length);\n\t\t\tbreak;\n\t\t}\n\t\t// exit early if can decide color mode with semicolons\n\t\tif ((accu[1] === 5 && advance + cSpace >= 2)\n\t\t\t|| (accu[1] === 2 && advance + cSpace >= 5)) {\n\t\t\tbreak;\n\t\t}\n\t\t// offset colorSpace slot for semicolon mode\n\t\tif (accu[1]) {\n\t\t\tcSpace = 1;\n\t\t}\n\t} while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n\treturn advance;\n};\n\nclass TypeAheadStyle implements IDisposable {\n\tprivate static _compileArgs(args: ReadonlyArray<number>) {\n\t\treturn `${VT.Csi}${args.join(';')}m`;\n\t}\n\n\t/**\n\t * Number of typeahead style arguments we expect to read. If this is 0 and\n\t * we see a style coming in, we know that the PTY actually wanted to update.\n\t */\n\tprivate _expectedIncomingStyles = 0;\n\tprivate _applyArgs!: ReadonlyArray<number>;\n\tprivate _originalUndoArgs!: ReadonlyArray<number>;\n\tprivate _undoArgs!: ReadonlyArray<number>;\n\n\tapply!: string;\n\tundo!: string;\n\tprivate _csiHandler?: IDisposable;\n\n\tconstructor(value: ITerminalConfiguration['localEchoStyle'], private readonly _terminal: Terminal) {\n\t\tthis.onUpdate(value);\n\t}\n\n\t/**\n\t * Signals that a style was written to the terminal and we should watch\n\t * for it coming in.\n\t */\n\texpectIncomingStyle(n = 1) {\n\t\tthis._expectedIncomingStyles += n * 2;\n\t}\n\n\t/**\n\t * Starts tracking for CSI changes in the terminal.\n\t */\n\tstartTracking() {\n\t\tthis._expectedIncomingStyles = 0;\n\t\tthis._onDidWriteSGR(attributesToArgs(core(this._terminal)._inputHandler._curAttrData));\n\t\tthis._csiHandler = this._terminal.parser.registerCsiHandler({ final: 'm' }, args => {\n\t\t\tthis._onDidWriteSGR(args);\n\t\t\treturn false;\n\t\t});\n\t}\n\n\t/**\n\t * Stops tracking terminal CSI changes.\n\t */\n\t@debounce(2000)\n\tdebounceStopTracking() {\n\t\tthis._stopTracking();\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tdispose() {\n\t\tthis._stopTracking();\n\t}\n\n\tprivate _stopTracking() {\n\t\tthis._csiHandler?.dispose();\n\t\tthis._csiHandler = undefined;\n\t}\n\n\tprivate _onDidWriteSGR(args: (number | number[])[]) {\n\t\tconst originalUndo = this._undoArgs;\n\t\tfor (let i = 0; i < args.length;) {\n\t\t\tconst px = args[i];\n\t\t\tconst p = typeof px === 'number' ? px : px[0];\n\n\t\t\tif (this._expectedIncomingStyles) {\n\t\t\t\tif (arrayHasPrefixAt(args, i, this._undoArgs)) {\n\t\t\t\t\tthis._expectedIncomingStyles--;\n\t\t\t\t\ti += this._undoArgs.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (arrayHasPrefixAt(args, i, this._applyArgs)) {\n\t\t\t\t\tthis._expectedIncomingStyles--;\n\t\t\t\t\ti += this._applyArgs.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst width = p === 38 || p === 48 || p === 58 ? getColorWidth(args, i) : 1;\n\t\t\tswitch (this._applyArgs[0]) {\n\t\t\t\tcase 1:\n\t\t\t\t\tif (p === 2) {\n\t\t\t\t\t\tthis._undoArgs = [22, 2];\n\t\t\t\t\t} else if (p === 22 || p === 0) {\n\t\t\t\t\t\tthis._undoArgs = [22];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tif (p === 1) {\n\t\t\t\t\t\tthis._undoArgs = [22, 1];\n\t\t\t\t\t} else if (p === 22 || p === 0) {\n\t\t\t\t\t\tthis._undoArgs = [22];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 38:\n\t\t\t\t\tif (p === 0 || p === 39 || p === 100) {\n\t\t\t\t\t\tthis._undoArgs = [39];\n\t\t\t\t\t} else if ((p >= 30 && p <= 38) || (p >= 90 && p <= 97)) {\n\t\t\t\t\t\tthis._undoArgs = args.slice(i, i + width) as number[];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (p === this._applyArgs[0]) {\n\t\t\t\t\t\tthis._undoArgs = this._applyArgs;\n\t\t\t\t\t} else if (p === 0) {\n\t\t\t\t\t\tthis._undoArgs = this._originalUndoArgs;\n\t\t\t\t\t}\n\t\t\t\t// no-op\n\t\t\t}\n\n\t\t\ti += width;\n\t\t}\n\n\t\tif (originalUndo !== this._undoArgs) {\n\t\t\tthis.undo = TypeAheadStyle._compileArgs(this._undoArgs);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the current typeahead style.\n\t */\n\tonUpdate(style: ITerminalConfiguration['localEchoStyle']) {\n\t\tconst { applyArgs, undoArgs } = this._getArgs(style);\n\t\tthis._applyArgs = applyArgs;\n\t\tthis._undoArgs = this._originalUndoArgs = undoArgs;\n\t\tthis.apply = TypeAheadStyle._compileArgs(this._applyArgs);\n\t\tthis.undo = TypeAheadStyle._compileArgs(this._undoArgs);\n\t}\n\n\tprivate _getArgs(style: ITerminalConfiguration['localEchoStyle']) {\n\t\tswitch (style) {\n\t\t\tcase 'bold':\n\t\t\t\treturn { applyArgs: [1], undoArgs: [22] };\n\t\t\tcase 'dim':\n\t\t\t\treturn { applyArgs: [2], undoArgs: [22] };\n\t\t\tcase 'italic':\n\t\t\t\treturn { applyArgs: [3], undoArgs: [23] };\n\t\t\tcase 'underlined':\n\t\t\t\treturn { applyArgs: [4], undoArgs: [24] };\n\t\t\tcase 'inverted':\n\t\t\t\treturn { applyArgs: [7], undoArgs: [27] };\n\t\t\tdefault: {\n\t\t\t\tlet color: Color;\n\t\t\t\ttry {\n\t\t\t\t\tcolor = Color.fromHex(style);\n\t\t\t\t} catch {\n\t\t\t\t\tcolor = new Color(new RGBA(255, 0, 0, 1));\n\t\t\t\t}\n\n\t\t\t\tconst { r, g, b } = color.rgba;\n\t\t\t\treturn { applyArgs: [38, 2, r, g, b], undoArgs: [39] };\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst compileExcludeRegexp = (programs = DEFAULT_LOCAL_ECHO_EXCLUDE) =>\n\tnew RegExp(`\\\\b(${programs.map(escapeRegExpCharacters).join('|')})\\\\b`, 'i');\n\nexport const enum CharPredictState {\n\t/** No characters typed on this line yet */\n\tUnknown,\n\t/** Has a pending character prediction */\n\tHasPendingChar,\n\t/** Character validated on this line */\n\tValidated,\n}\n\nexport class TypeAheadAddon extends Disposable implements ITerminalAddon {\n\tprivate _typeaheadStyle?: TypeAheadStyle;\n\tprivate _typeaheadThreshold = this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION).localEchoLatencyThreshold;\n\tprivate _excludeProgramRe = compileExcludeRegexp(this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION).localEchoExcludePrograms);\n\tprotected _lastRow?: { y: number; startingX: number; endingX: number; charState: CharPredictState };\n\tprotected _timeline?: PredictionTimeline;\n\tprivate _terminalTitle = '';\n\tstats?: PredictionStats;\n\n\t/**\n\t * Debounce that clears predictions after a timeout if the PTY doesn't apply them.\n\t */\n\tprivate _clearPredictionDebounce?: IDisposable;\n\n\tconstructor(\n\t\tprivate _processManager: ITerminalProcessManager,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => this._clearPredictionDebounce?.dispose()));\n\t}\n\n\tactivate(terminal: Terminal): void {\n\t\tconst style = this._typeaheadStyle = this._register(new TypeAheadStyle(this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION).localEchoStyle, terminal));\n\t\tconst timeline = this._timeline = new PredictionTimeline(terminal, this._typeaheadStyle);\n\t\tconst stats = this.stats = this._register(new PredictionStats(this._timeline));\n\n\t\ttimeline.setShowPredictions(this._typeaheadThreshold === 0);\n\t\tthis._register(terminal.onData(e => this._onUserData(e)));\n\t\tthis._register(terminal.onTitleChange(title => {\n\t\t\tthis._terminalTitle = title;\n\t\t\tthis._reevaluatePredictorState(stats, timeline);\n\t\t}));\n\t\tthis._register(terminal.onResize(() => {\n\t\t\ttimeline.setShowPredictions(false);\n\t\t\ttimeline.clearCursor();\n\t\t\tthis._reevaluatePredictorState(stats, timeline);\n\t\t}));\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(TERMINAL_CONFIG_SECTION)) {\n\t\t\t\tstyle.onUpdate(this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION).localEchoStyle);\n\t\t\t\tthis._typeaheadThreshold = this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION).localEchoLatencyThreshold;\n\t\t\t\tthis._excludeProgramRe = compileExcludeRegexp(this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION).localEchoExcludePrograms);\n\t\t\t\tthis._reevaluatePredictorState(stats, timeline);\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._timeline.onPredictionSucceeded(p => {\n\t\t\tif (this._lastRow?.charState === CharPredictState.HasPendingChar && isTenativeCharacterPrediction(p) && p.inner.appliedAt) {\n\t\t\t\tif (p.inner.appliedAt.pos.y + p.inner.appliedAt.pos.baseY === this._lastRow.y) {\n\t\t\t\t\tthis._lastRow.charState = CharPredictState.Validated;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._processManager.onBeforeProcessData(e => this._onBeforeProcessData(e)));\n\n\t\tlet nextStatsSend: any;\n\t\tthis._register(stats.onChange(() => {\n\t\t\tif (!nextStatsSend) {\n\t\t\t\tnextStatsSend = setTimeout(() => {\n\t\t\t\t\tthis._sendLatencyStats(stats);\n\t\t\t\t\tnextStatsSend = undefined;\n\t\t\t\t}, StatsConstants.StatsSendTelemetryEvery);\n\t\t\t}\n\n\t\t\tif (timeline.length === 0) {\n\t\t\t\tstyle.debounceStopTracking();\n\t\t\t}\n\n\t\t\tthis._reevaluatePredictorState(stats, timeline);\n\t\t}));\n\t}\n\n\treset() {\n\t\tthis._lastRow = undefined;\n\t}\n\n\tprivate _deferClearingPredictions() {\n\t\tif (!this.stats || !this._timeline) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._clearPredictionDebounce?.dispose();\n\t\tif (this._timeline.length === 0 || this._timeline.peekStart()?.clearAfterTimeout === false) {\n\t\t\tthis._clearPredictionDebounce = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._clearPredictionDebounce = disposableTimeout(\n\t\t\t() => {\n\t\t\t\tthis._timeline?.undoAllPredictions();\n\t\t\t\tif (this._lastRow?.charState === CharPredictState.HasPendingChar) {\n\t\t\t\t\tthis._lastRow.charState = CharPredictState.Unknown;\n\t\t\t\t}\n\t\t\t},\n\t\t\tMath.max(500, this.stats.maxLatency * 3 / 2),\n\t\t);\n\t}\n\n\t/**\n\t * Note on debounce:\n\t *\n\t * We want to toggle the state only when the user has a pause in their\n\t * typing. Otherwise, we could turn this on when the PTY sent data but the\n\t * terminal cursor is not updated, causes issues.\n\t */\n\t@debounce(100)\n\tprotected _reevaluatePredictorState(stats: PredictionStats, timeline: PredictionTimeline) {\n\t\tthis._reevaluatePredictorStateNow(stats, timeline);\n\t}\n\n\tprotected _reevaluatePredictorStateNow(stats: PredictionStats, timeline: PredictionTimeline) {\n\t\tif (this._excludeProgramRe.test(this._terminalTitle)) {\n\t\t\ttimeline.setShowPredictions(false);\n\t\t} else if (this._typeaheadThreshold < 0) {\n\t\t\ttimeline.setShowPredictions(false);\n\t\t} else if (this._typeaheadThreshold === 0) {\n\t\t\ttimeline.setShowPredictions(true);\n\t\t} else if (stats.sampleSize > StatsConstants.StatsMinSamplesToTurnOn && stats.accuracy > StatsConstants.StatsMinAccuracyToTurnOn) {\n\t\t\tconst latency = stats.latency.median;\n\t\t\tif (latency >= this._typeaheadThreshold) {\n\t\t\t\ttimeline.setShowPredictions(true);\n\t\t\t} else if (latency < this._typeaheadThreshold / StatsConstants.StatsToggleOffThreshold) {\n\t\t\t\ttimeline.setShowPredictions(false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _sendLatencyStats(stats: PredictionStats) {\n\t\t/* __GDPR__\n\t\t\t\"terminalLatencyStats\" : {\n\t\t\t\t\"owner\": \"Tyriar\",\n\t\t\t\t\"min\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"max\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"median\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"count\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"predictionAccuracy\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true }\n\t\t\t}\n\t\t */\n\t\tthis._telemetryService.publicLog('terminalLatencyStats', {\n\t\t\t...stats.latency,\n\t\t\tpredictionAccuracy: stats.accuracy,\n\t\t});\n\t}\n\n\tprivate _onUserData(data: string): void {\n\t\tif (this._timeline?.terminal.buffer.active.type !== 'normal') {\n\t\t\treturn;\n\t\t}\n\n\t\t// console.log('user data:', JSON.stringify(data));\n\n\t\tconst terminal = this._timeline.terminal;\n\t\tconst buffer = terminal.buffer.active;\n\n\t\t// Detect programs like git log/less that use the normal buffer but don't\n\t\t// take input by deafult (fixes #109541)\n\t\tif (buffer.cursorX === 1 && buffer.cursorY === terminal.rows - 1) {\n\t\t\tif (buffer.getLine(buffer.cursorY + buffer.baseY)?.getCell(0)?.getChars() === ':') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// the following code guards the terminal prompt to avoid being able to\n\t\t// arrow or backspace-into the prompt. Record the lowest X value at which\n\t\t// the user gave input, and mark all additions before that as tentative.\n\t\tconst actualY = buffer.baseY + buffer.cursorY;\n\t\tif (actualY !== this._lastRow?.y) {\n\t\t\tthis._lastRow = { y: actualY, startingX: buffer.cursorX, endingX: buffer.cursorX, charState: CharPredictState.Unknown };\n\t\t} else {\n\t\t\tthis._lastRow.startingX = Math.min(this._lastRow.startingX, buffer.cursorX);\n\t\t\tthis._lastRow.endingX = Math.max(this._lastRow.endingX, this._timeline.physicalCursor(buffer).x);\n\t\t}\n\n\t\tconst addLeftNavigating = (p: IPrediction) =>\n\t\t\tthis._timeline!.tentativeCursor(buffer).x <= this._lastRow!.startingX\n\t\t\t\t? this._timeline!.addBoundary(buffer, p)\n\t\t\t\t: this._timeline!.addPrediction(buffer, p);\n\n\t\tconst addRightNavigating = (p: IPrediction) =>\n\t\t\tthis._timeline!.tentativeCursor(buffer).x >= this._lastRow!.endingX - 1\n\t\t\t\t? this._timeline!.addBoundary(buffer, p)\n\t\t\t\t: this._timeline!.addPrediction(buffer, p);\n\n\t\t/** @see https://github.com/xtermjs/xterm.js/blob/1913e9512c048e3cf56bb5f5df51bfff6899c184/src/common/input/Keyboard.ts */\n\t\tconst reader = new StringReader(data);\n\t\twhile (reader.remaining > 0) {\n\t\t\tif (reader.eatCharCode(127)) { // backspace\n\t\t\t\tconst previous = this._timeline.peekEnd();\n\t\t\t\tif (previous && previous instanceof CharacterPrediction) {\n\t\t\t\t\tthis._timeline.addBoundary();\n\t\t\t\t}\n\n\t\t\t\t// backspace must be able to read the previously-written character in\n\t\t\t\t// the event that it needs to undo it\n\t\t\t\tif (this._timeline.isShowingPredictions) {\n\t\t\t\t\tflushOutput(this._timeline.terminal);\n\t\t\t\t}\n\n\t\t\t\tif (this._timeline.tentativeCursor(buffer).x <= this._lastRow!.startingX) {\n\t\t\t\t\tthis._timeline.addBoundary(buffer, new BackspacePrediction(this._timeline.terminal));\n\t\t\t\t} else {\n\t\t\t\t\t// Backspace decrements our ability to go right.\n\t\t\t\t\tthis._lastRow.endingX--;\n\t\t\t\t\tthis._timeline!.addPrediction(buffer, new BackspacePrediction(this._timeline.terminal));\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (reader.eatCharCode(32, 126)) { // alphanum\n\t\t\t\tconst char = data[reader.index - 1];\n\t\t\t\tconst prediction = new CharacterPrediction(this._typeaheadStyle!, char);\n\t\t\t\tif (this._lastRow.charState === CharPredictState.Unknown) {\n\t\t\t\t\tthis._timeline.addBoundary(buffer, prediction);\n\t\t\t\t\tthis._lastRow.charState = CharPredictState.HasPendingChar;\n\t\t\t\t} else {\n\t\t\t\t\tthis._timeline.addPrediction(buffer, prediction);\n\t\t\t\t}\n\n\t\t\t\tif (this._timeline.tentativeCursor(buffer).x >= terminal.cols) {\n\t\t\t\t\tthis._timeline.addBoundary(buffer, new LinewrapPrediction());\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst cursorMv = reader.eatRe(CSI_MOVE_RE);\n\t\t\tif (cursorMv) {\n\t\t\t\tconst direction = cursorMv[3] as CursorMoveDirection;\n\t\t\t\tconst p = new CursorMovePrediction(direction, !!cursorMv[2], Number(cursorMv[1]) || 1);\n\t\t\t\tif (direction === CursorMoveDirection.Back) {\n\t\t\t\t\taddLeftNavigating(p);\n\t\t\t\t} else {\n\t\t\t\t\taddRightNavigating(p);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (reader.eatStr(`${VT.Esc}f`)) {\n\t\t\t\taddRightNavigating(new CursorMovePrediction(CursorMoveDirection.Forwards, true, 1));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (reader.eatStr(`${VT.Esc}b`)) {\n\t\t\t\taddLeftNavigating(new CursorMovePrediction(CursorMoveDirection.Back, true, 1));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (reader.eatChar('\\r') && buffer.cursorY < terminal.rows - 1) {\n\t\t\t\tthis._timeline.addPrediction(buffer, new NewlinePrediction());\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// something else\n\t\t\tthis._timeline.addBoundary(buffer, new HardBoundary());\n\t\t\tbreak;\n\t\t}\n\n\t\tif (this._timeline.length === 1) {\n\t\t\tthis._deferClearingPredictions();\n\t\t\tthis._typeaheadStyle!.startTracking();\n\t\t}\n\t}\n\n\tprivate _onBeforeProcessData(event: IBeforeProcessDataEvent): void {\n\t\tif (!this._timeline) {\n\t\t\treturn;\n\t\t}\n\n\t\t// console.log('incoming data:', JSON.stringify(event.data));\n\t\tevent.data = this._timeline.beforeServerInput(event.data);\n\t\t// console.log('emitted data:', JSON.stringify(event.data));\n\n\t\tthis._deferClearingPredictions();\n\t}\n}\n"]}