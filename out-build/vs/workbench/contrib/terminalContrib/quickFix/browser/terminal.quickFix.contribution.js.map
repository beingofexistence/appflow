{"version":3,"sources":["vs/workbench/contrib/terminalContrib/quickFix/browser/terminal.quickFix.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAqBhG,WAAW;IACX,IAAA,gBAAG,EAAe,eAAI,EAAsB,8BAAI,oCAA+C,CAAC;IAEhG,gBAAgB;IAChB,IAAM,4BAA4B,GAAlC,MAAM,4BAA6B,SAAQ,eAAG;;iBAC7B,OAAE,GAAG,UAAH,AAAa,CAAC;QAEhC,MAAM,CAAC,GAAG,CAAC,QAA2B;YACrC,OAAO,QAAQ,CAAC,eAAe,CAA+B,8BAA4B,CAAC,EAAE,CAAC,CAAC;QAChG,CAAC;QAGD,IAAI,KAAK,KAAwC,OAAO,IAAI,CAAC,CAAC,CAAM,CAAC,CAAC;QAEtE,YACkB,CAA4B,EAC7C,cAAuC,EACvC,aAAmB,EACqB,CAA0B;YAElE,KAAK,EAAE,CAAC;YALS,MAAC,GAAD,CAAC,CAA2B;YAGL,MAAC,GAAD,CAAC,CAAyB;QAGnE,CAAC;QAED,UAAU,CAAC,KAAiD;YAC3D,eAAe;YACf,IAAI,CAAC,CAAC,GAAQ,IAAI,CAAC,CAAC,CAAqB,cAAc,CAAC,oBAAI,EAAmB,SAAS,EAAE,IAAI,CAAC,CAAC,CAAS,YAAY,CAAC,CAAC;YACvH,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAM,CAAC;YAEjC,oBAAoB;YACpB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAM,wBAAwB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAS,UAAU,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YAEnH,uBAAuB;YACvB,KAAK,MAAM,YAAY,IAAI;gBAC1B,IAAA,qCAAI,GAAU;gBACd,IAAA,qCAAI,EAAK,CAAC,IAAY,EAAE,OAAe,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAS,mBAAmB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;gBAC9F,IAAA,qCAAI,GAAQ;gBACZ,IAAA,qCAAI,GAAgB;gBACpB,IAAA,qCAAI,GAAS;gBACb,IAAA,qCAAI,GAA0B;gBAC9B,IAAA,qCAAI,GAAc;aAClB,EAAE;gBACF,IAAI,CAAC,CAAC,CAAM,+BAA+B,CAAC,YAAY,CAAC,CAAC;aAC1D;QACF,CAAC;;IAvCI,4BAA4B;QAc/B,WAAA,mBAAG,CAAA;OAdA,4BAA4B,CAwCjC;IACD,IAAA,yBAAI,EAAyB,4BAA4B,CAAC,EAAE,EAAE,4BAA4B,CAAC,CAAC;IAE5F,UAAU;IACV,IAAA,sBAAI,EAAyB;QAC5B,EAAE,mFAAkC;QACpC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAA,cAAQ,EAAC,CAA0C,EAAE,IAA2B,CAAC,EAAE,QAAQ,EAAE,2BAA2B,EAAE;QAC1I,YAAY,EAAE,wCAAmB,CAAC,KAAK;QACvC,UAAU,EAAE;YACX,OAAO,EAAE,mDAA+B;YACxC,MAAM,6CAAmC;SACzC;QACD,GAAG,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,4BAA4B,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE;KAC5F,CAAC,CAAC","file":"terminal.quickFix.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/terminalQuickFix';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ITerminalContribution, ITerminalInstance, IXtermTerminal } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport { registerActiveInstanceAction } from 'vs/workbench/contrib/terminal/browser/terminalActions';\nimport { registerTerminalContribution } from 'vs/workbench/contrib/terminal/browser/terminalExtensions';\nimport { TerminalWidgetManager } from 'vs/workbench/contrib/terminal/browser/widgets/widgetManager';\nimport { ITerminalProcessManager, TerminalCommandId } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { TerminalContextKeys } from 'vs/workbench/contrib/terminal/common/terminalContextKey';\nimport { ITerminalQuickFixService } from 'vs/workbench/contrib/terminalContrib/quickFix/browser/quickFix';\nimport { TerminalQuickFixAddon } from 'vs/workbench/contrib/terminalContrib/quickFix/browser/quickFixAddon';\nimport { freePort, gitCreatePr, gitPushSetUpstream, gitSimilar, gitTwoDashes, pwshGeneralError, pwshUnixCommandNotFoundError } from 'vs/workbench/contrib/terminalContrib/quickFix/browser/terminalQuickFixBuiltinActions';\nimport { TerminalQuickFixService } from 'vs/workbench/contrib/terminalContrib/quickFix/browser/terminalQuickFixService';\nimport type { Terminal as RawXtermTerminal } from 'xterm';\n\n// Services\nregisterSingleton(ITerminalQuickFixService, TerminalQuickFixService, InstantiationType.Delayed);\n\n// Contributions\nclass TerminalQuickFixContribution extends DisposableStore implements ITerminalContribution {\n\tstatic readonly ID = 'quickFix';\n\n\tstatic get(instance: ITerminalInstance): TerminalQuickFixContribution | null {\n\t\treturn instance.getContribution<TerminalQuickFixContribution>(TerminalQuickFixContribution.ID);\n\t}\n\n\tprivate _addon?: TerminalQuickFixAddon;\n\tget addon(): TerminalQuickFixAddon | undefined { return this._addon; }\n\n\tconstructor(\n\t\tprivate readonly _instance: ITerminalInstance,\n\t\tprocessManager: ITerminalProcessManager,\n\t\twidgetManager: TerminalWidgetManager,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\txtermReady(xterm: IXtermTerminal & { raw: RawXtermTerminal }): void {\n\t\t// Create addon\n\t\tthis._addon = this._instantiationService.createInstance(TerminalQuickFixAddon, undefined, this._instance.capabilities);\n\t\txterm.raw.loadAddon(this._addon);\n\n\t\t// Hook up listeners\n\t\tthis.add(this._addon.onDidRequestRerunCommand((e) => this._instance.runCommand(e.command, e.addNewLine || false)));\n\n\t\t// Register quick fixes\n\t\tfor (const actionOption of [\n\t\t\tgitTwoDashes(),\n\t\t\tfreePort((port: string, command: string) => this._instance.freePortKillProcess(port, command)),\n\t\t\tgitSimilar(),\n\t\t\tgitPushSetUpstream(),\n\t\t\tgitCreatePr(),\n\t\t\tpwshUnixCommandNotFoundError(),\n\t\t\tpwshGeneralError()\n\t\t]) {\n\t\t\tthis._addon.registerCommandFinishedListener(actionOption);\n\t\t}\n\t}\n}\nregisterTerminalContribution(TerminalQuickFixContribution.ID, TerminalQuickFixContribution);\n\n// Actions\nregisterActiveInstanceAction({\n\tid: TerminalCommandId.ShowQuickFixes,\n\ttitle: { value: localize('workbench.action.terminal.showQuickFixes', \"Show Terminal Quick Fixes\"), original: 'Show Terminal Quick Fixes' },\n\tprecondition: TerminalContextKeys.focus,\n\tkeybinding: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\t\tweight: KeybindingWeight.WorkbenchContrib\n\t},\n\trun: (activeInstance) => TerminalQuickFixContribution.get(activeInstance)?.addon?.showMenu()\n});\n"]}