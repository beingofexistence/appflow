{"version":3,"sources":["vs/workbench/contrib/terminalContrib/quickFix/browser/terminalQuickFixService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAUhG,MAAa,IAAI;QAMhB,IAAI,SAAS,KAA6C,OAAO,IAAI,CAAC,CAAC,CAAU,CAAC,CAAC;QAWnF;YAdQ,MAAC,GAAmD,IAAI,GAAG,EAAE,CAAC;YAE9D,MAAC,GAAoD,IAAI,GAAG,EAAE,CAAC;YAGtD,MAAC,GAAwB,IAAI,WAAG,EAAyC,CAAC;YAClF,0BAAqB,GAAG,IAAI,CAAC,CAAC,CAAsB,KAAK,CAAC;YAClD,MAAC,GAA+B,IAAI,WAAG,EAAgC,CAAC;YAChF,iCAA4B,GAAG,IAAI,CAAC,CAAC,CAA6B,KAAK,CAAC;YAChE,MAAC,GAA0B,IAAI,WAAG,EAAc,CAAC;YACzD,4BAAuB,GAAG,IAAI,CAAC,CAAC,CAAwB,KAAK,CAAC;YAKtE,IAAI,CAAC,mBAAmB,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,sBAAsB,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;gBACvF,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAA,gBAAG,EAAkB,CAAC,CAAC,WAAW,EAAE,0BAA0B,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;oBAC5F,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE;wBACb,OAAO,EAAE,CAAC;qBACV;oBACD,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,OAAO,EAAE,GAAG,GAAG,EAAE,mBAAmB,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;YACZ,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBACzC,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;oBACjC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;iBACvC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,uBAAuB,CAAC,QAAkC;YACzD,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,CAAC,CAA6B,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnD,CAAC;QAED,wBAAwB,CAAC,EAAU,EAAE,QAAmC;YACvE,wFAAwF;YACxF,sFAAsF;YACtF,2DAA2D;YAC3D,IAAI,QAAQ,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE;gBAClC,IAAI,QAAQ,EAAE;oBACb,OAAO;iBACP;gBACD,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;gBAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,EAAE,CAAC,CAAC;gBACzC,IAAI,CAAC,QAAQ,EAAE;oBACd,MAAM,IAAI,KAAK,CAAC,kCAAkC,EAAE,EAAE,CAAC,CAAC;iBACxD;gBACD,IAAI,CAAC,CAAC,CAAsB,IAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;YACH,OAAO,IAAA,eAAG,EAAU,GAAG,EAAE;gBACxB,QAAQ,GAAG,IAAI,CAAC;gBAChB,IAAI,CAAC,CAAC,CAAU,MAAM,CAAC,EAAE,CAAC,CAAC;gBAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,EAAE,CAAC,CAAC;gBACzC,IAAI,QAAQ,EAAE;oBACb,IAAI,CAAC,CAAC,CAAU,MAAM,CAAC,EAAE,CAAC,CAAC;oBAC3B,IAAI,CAAC,CAAC,CAAwB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;iBAChD;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;KACD;IAhED,oBAgEC;IAED,MAAM,sBAAsB,GAAG,wBAAG,CAAgB,sBAAsB,CAA6B;QACpG,cAAc,EAAE,oBAAoB;QACpC,oBAAoB,EAAE,CAAC,WAAW,CAAC;QACnC,yBAAyB,EAAE,CAAC,kBAA8C,EAAE,MAAoC,EAAE,EAAE;YACnH,KAAK,MAAM,eAAe,IAAI,kBAAkB,IAAI,EAAE,EAAE;gBACvD,MAAM,CAAC,IAAI,CAAC,6BAA6B,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC;aAC/D;QACF,CAAC;QACD,UAAU,EAAE;YACX,WAAW,EAAE,IAAA,cAAQ,EAAC,CAAiD,EAAE,IAAmC,CAAC;YAC7G,IAAI,EAAE,OAAO;YACb,KAAK,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,oBAAoB,EAAE,KAAK;gBAC3B,QAAQ,EAAE,CAAC,IAAI,EAAE,oBAAoB,EAAE,eAAe,EAAE,mBAAmB,CAAC;gBAC5E,eAAe,EAAE,CAAC;wBACjB,IAAI,EAAE;4BACL,EAAE,EAAE,IAAI;4BACR,kBAAkB,EAAE,IAAI;4BACxB,aAAa,EAAE,IAAI;4BACnB,UAAU,EAAE,IAAI;yBAChB;qBACD,CAAC;gBACF,UAAU,EAAE;oBACX,EAAE,EAAE;wBACH,WAAW,EAAE,IAAA,cAAQ,EAAC,CAAoD,EAAE,IAAkC,CAAC;wBAC/G,IAAI,EAAE,QAAQ;qBACd;oBACD,kBAAkB,EAAE;wBACnB,WAAW,EAAE,IAAA,cAAQ,EAAC,CAAoE,EAAE,IAAiE,CAAC;wBAC9J,IAAI,EAAE,QAAQ;qBACd;oBACD,aAAa,EAAE;wBACd,mBAAmB,EAAE,IAAA,cAAQ,EAAC,CAA+D,EAAE,IAA0T,CAAC;wBAC1Z,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,CAAC,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;wBACvD,UAAU,EAAE;4BACX,WAAW,EAAE;gCACZ,WAAW,EAAE,iEAAiE;gCAC9E,IAAI,EAAE,QAAQ;6BACd;4BACD,MAAM,EAAE;gCACP,WAAW,EAAE,6CAA6C;gCAC1D,IAAI,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC;6BACvB;4BACD,MAAM,EAAE;gCACP,WAAW,EAAE,wFAAwF;gCACrG,IAAI,EAAE,QAAQ;6BACd;4BACD,MAAM,EAAE;gCACP,WAAW,EAAE,kGAAkG;gCAC/G,IAAI,EAAE,QAAQ;6BACd;yBACD;qBACD;oBACD,iBAAiB,EAAE;wBAClB,WAAW,EAAE,IAAA,cAAQ,EAAC,CAAmE,EAAE,IAAqC,CAAC;wBACjI,IAAI,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;wBAC1B,gBAAgB,EAAE;4BACjB,+CAA+C;4BAC/C,+CAA+C;yBAC/C;qBACD;oBACD,IAAI,EAAE;wBACL,WAAW,EAAE,IAAA,cAAQ,EAAC,CAAsD,EAAE,IAAoG,EAAE,SAAS,CAAC;wBAC9L,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;wBAC5B,gBAAgB,EAAE;4BACjB,8BAA8B;4BAC9B,gCAAgC;yBAChC;qBACD;iBACD;aACD;SACD;KACD,CAAC,CAAC","file":"terminalQuickFixService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { ITerminalCommandSelector } from 'vs/platform/terminal/common/terminal';\nimport { ITerminalQuickFixService, ITerminalQuickFixProvider, ITerminalQuickFixProviderSelector } from 'vs/workbench/contrib/terminalContrib/quickFix/browser/quickFix';\nimport { isProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\nimport { ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\n\nexport class TerminalQuickFixService implements ITerminalQuickFixService {\n\tdeclare _serviceBrand: undefined;\n\n\tprivate _selectors: Map<string, ITerminalCommandSelector> = new Map();\n\n\tprivate _providers: Map<string, ITerminalQuickFixProvider> = new Map();\n\tget providers(): Map<string, ITerminalQuickFixProvider> { return this._providers; }\n\n\tprivate readonly _onDidRegisterProvider = new Emitter<ITerminalQuickFixProviderSelector>();\n\treadonly onDidRegisterProvider = this._onDidRegisterProvider.event;\n\tprivate readonly _onDidRegisterCommandSelector = new Emitter<ITerminalCommandSelector>();\n\treadonly onDidRegisterCommandSelector = this._onDidRegisterCommandSelector.event;\n\tprivate readonly _onDidUnregisterProvider = new Emitter<string>();\n\treadonly onDidUnregisterProvider = this._onDidUnregisterProvider.event;\n\n\treadonly extensionQuickFixes: Promise<Array<ITerminalCommandSelector>>;\n\n\tconstructor() {\n\t\tthis.extensionQuickFixes = new Promise((r) => quickFixExtensionPoint.setHandler(fixes => {\n\t\t\tr(fixes.filter(c => isProposedApiEnabled(c.description, 'terminalQuickFixProvider')).map(c => {\n\t\t\t\tif (!c.value) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\treturn c.value.map(fix => { return { ...fix, extensionIdentifier: c.description.identifier.value }; });\n\t\t\t}).flat());\n\t\t}));\n\t\tthis.extensionQuickFixes.then(selectors => {\n\t\t\tfor (const selector of selectors) {\n\t\t\t\tthis.registerCommandSelector(selector);\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterCommandSelector(selector: ITerminalCommandSelector): void {\n\t\tthis._selectors.set(selector.id, selector);\n\t\tthis._onDidRegisterCommandSelector.fire(selector);\n\t}\n\n\tregisterQuickFixProvider(id: string, provider: ITerminalQuickFixProvider): IDisposable {\n\t\t// This is more complicated than it looks like it should be because we need to return an\n\t\t// IDisposable synchronously but we must await ITerminalContributionService.quickFixes\n\t\t// asynchronously before actually registering the provider.\n\t\tlet disposed = false;\n\t\tthis.extensionQuickFixes.then(() => {\n\t\t\tif (disposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._providers.set(id, provider);\n\t\t\tconst selector = this._selectors.get(id);\n\t\t\tif (!selector) {\n\t\t\t\tthrow new Error(`No registered selector for ID: ${id}`);\n\t\t\t}\n\t\t\tthis._onDidRegisterProvider.fire({ selector, provider });\n\t\t});\n\t\treturn toDisposable(() => {\n\t\t\tdisposed = true;\n\t\t\tthis._providers.delete(id);\n\t\t\tconst selector = this._selectors.get(id);\n\t\t\tif (selector) {\n\t\t\t\tthis._selectors.delete(id);\n\t\t\t\tthis._onDidUnregisterProvider.fire(selector.id);\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst quickFixExtensionPoint = ExtensionsRegistry.registerExtensionPoint<ITerminalCommandSelector[]>({\n\textensionPoint: 'terminalQuickFixes',\n\tdefaultExtensionKind: ['workspace'],\n\tactivationEventsGenerator: (terminalQuickFixes: ITerminalCommandSelector[], result: { push(item: string): void }) => {\n\t\tfor (const quickFixContrib of terminalQuickFixes ?? []) {\n\t\t\tresult.push(`onTerminalQuickFixRequest:${quickFixContrib.id}`);\n\t\t}\n\t},\n\tjsonSchema: {\n\t\tdescription: localize('vscode.extension.contributes.terminalQuickFixes', 'Contributes terminal quick fixes.'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\tadditionalProperties: false,\n\t\t\trequired: ['id', 'commandLineMatcher', 'outputMatcher', 'commandExitResult'],\n\t\t\tdefaultSnippets: [{\n\t\t\t\tbody: {\n\t\t\t\t\tid: '$1',\n\t\t\t\t\tcommandLineMatcher: '$2',\n\t\t\t\t\toutputMatcher: '$3',\n\t\t\t\t\texitStatus: '$4'\n\t\t\t\t}\n\t\t\t}],\n\t\t\tproperties: {\n\t\t\t\tid: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.terminalQuickFixes.id', \"The ID of the quick fix provider\"),\n\t\t\t\t\ttype: 'string',\n\t\t\t\t},\n\t\t\t\tcommandLineMatcher: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.terminalQuickFixes.commandLineMatcher', \"A regular expression or string to test the command line against\"),\n\t\t\t\t\ttype: 'string',\n\t\t\t\t},\n\t\t\t\toutputMatcher: {\n\t\t\t\t\tmarkdownDescription: localize('vscode.extension.contributes.terminalQuickFixes.outputMatcher', \"A regular expression or string to match a single line of the output against, which provides groups to be referenced in terminalCommand and uri.\\n\\nFor example:\\n\\n `lineMatcher: /git push --set-upstream origin (?<branchName>[^\\s]+)/;`\\n\\n`terminalCommand: 'git push --set-upstream origin ${group:branchName}';`\\n\"),\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\trequired: ['lineMatcher', 'anchor', 'offset', 'length'],\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlineMatcher: {\n\t\t\t\t\t\t\tdescription: 'A regular expression or string to test the command line against',\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tanchor: {\n\t\t\t\t\t\t\tdescription: 'Where the search should begin in the buffer',\n\t\t\t\t\t\t\tenum: ['top', 'bottom']\n\t\t\t\t\t\t},\n\t\t\t\t\t\toffset: {\n\t\t\t\t\t\t\tdescription: 'The number of lines vertically from the anchor in the buffer to start matching against',\n\t\t\t\t\t\t\ttype: 'number'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlength: {\n\t\t\t\t\t\t\tdescription: 'The number of rows to match against, this should be as small as possible for performance reasons',\n\t\t\t\t\t\t\ttype: 'number'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcommandExitResult: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.terminalQuickFixes.commandExitResult', \"The command exit result to match on\"),\n\t\t\t\t\tenum: ['success', 'error'],\n\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t'The command exited with an exit code of zero.',\n\t\t\t\t\t\t'The command exited with a non-zero exit code.'\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tkind: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.terminalQuickFixes.kind', \"The kind of the resulting quick fix. This changes how the quick fix is presented. Defaults to {0}.\", '`\"fix\"`'),\n\t\t\t\t\tenum: ['default', 'explain'],\n\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t'A high confidence quick fix.',\n\t\t\t\t\t\t'An explanation of the problem.'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t},\n});\n"]}