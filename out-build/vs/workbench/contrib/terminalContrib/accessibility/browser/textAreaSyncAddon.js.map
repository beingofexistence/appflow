{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminalContrib/accessibility/browser/textAreaSyncAddon.ts"],"names":[],"mappings":"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","file":"textAreaSyncAddon.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { ITerminalCapabilityStore, TerminalCapability } from 'vs/platform/terminal/common/capabilities/capabilities';\nimport { ITerminalLogService } from 'vs/platform/terminal/common/terminal';\nimport type { Terminal, ITerminalAddon } from 'xterm';\nimport { debounce } from 'vs/base/common/decorators';\nimport { addDisposableListener } from 'vs/base/browser/dom';\n\nexport interface ITextAreaData {\n\tcontent: string;\n\tcursorX: number;\n}\n\nexport class TextAreaSyncAddon extends Disposable implements ITerminalAddon {\n\tprivate _terminal: Terminal | undefined;\n\tprivate _listeners = this._register(new MutableDisposable<DisposableStore>());\n\tprivate _currentCommand: string | undefined;\n\tprivate _cursorX: number | undefined;\n\n\tactivate(terminal: Terminal): void {\n\t\tthis._terminal = terminal;\n\t\tif (this._accessibilityService.isScreenReaderOptimized()) {\n\t\t\tthis._registerSyncListeners();\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprivate readonly _capabilities: ITerminalCapabilityStore,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@ITerminalLogService private readonly _logService: ITerminalLogService\n\t) {\n\t\tsuper();\n\t\tthis._register(this._accessibilityService.onDidChangeScreenReaderOptimized(() => {\n\t\t\tif (this._accessibilityService.isScreenReaderOptimized()) {\n\t\t\t\tthis._syncTextArea();\n\t\t\t\tthis._registerSyncListeners();\n\t\t\t} else {\n\t\t\t\tthis._listeners.clear();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _registerSyncListeners(): void {\n\t\tif (this._accessibilityService.isScreenReaderOptimized() && this._terminal?.textarea) {\n\t\t\tthis._listeners.value = new DisposableStore();\n\t\t\tthis._listeners.value.add(this._terminal.onCursorMove(() => this._syncTextArea()));\n\t\t\tthis._listeners.value.add(this._terminal.onData(() => this._syncTextArea()));\n\t\t\tthis._listeners.value.add(addDisposableListener(this._terminal.textarea, 'focus', () => this._syncTextArea()));\n\t\t}\n\t}\n\n\t@debounce(50)\n\tprivate _syncTextArea(): void {\n\t\tthis._logService.debug('TextAreaSyncAddon#syncTextArea');\n\t\tconst textArea = this._terminal?.textarea;\n\t\tif (!textArea) {\n\t\t\tthis._logService.debug(`TextAreaSyncAddon#syncTextArea: no textarea`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateCommandAndCursor();\n\n\t\tif (this._currentCommand !== textArea.value) {\n\t\t\ttextArea.value = this._currentCommand || '';\n\t\t\tthis._logService.debug(`TextAreaSyncAddon#syncTextArea: text changed to \"${this._currentCommand}\"`);\n\t\t} else if (!this._currentCommand) {\n\t\t\ttextArea.value = '';\n\t\t\tthis._logService.debug(`TextAreaSyncAddon#syncTextArea: text cleared`);\n\t\t}\n\n\t\tif (this._cursorX !== textArea.selectionStart) {\n\t\t\ttextArea.selectionStart = this._cursorX ?? 0;\n\t\t\ttextArea.selectionEnd = this._cursorX ?? 0;\n\t\t\tthis._logService.debug(`TextAreaSyncAddon#syncTextArea: selection start/end changed to ${this._cursorX}`);\n\t\t}\n\t}\n\n\tprivate _updateCommandAndCursor(): void {\n\t\tif (!this._terminal) {\n\t\t\treturn;\n\t\t}\n\t\tconst commandCapability = this._capabilities.get(TerminalCapability.CommandDetection);\n\t\tconst currentCommand = commandCapability?.currentCommand;\n\t\tif (!currentCommand) {\n\t\t\tthis._logService.debug(`TextAreaSyncAddon#updateCommandAndCursor: no current command`);\n\t\t\treturn;\n\t\t}\n\t\tconst buffer = this._terminal.buffer.active;\n\t\tconst lineNumber = currentCommand.commandStartMarker?.line;\n\t\tif (!lineNumber) {\n\t\t\treturn;\n\t\t}\n\t\tconst commandLine = buffer.getLine(lineNumber)?.translateToString(true);\n\t\tif (!commandLine) {\n\t\t\tthis._logService.debug(`TextAreaSyncAddon#updateCommandAndCursor: no line`);\n\t\t\treturn;\n\t\t}\n\t\tif (currentCommand.commandStartX !== undefined) {\n\t\t\tthis._currentCommand = commandLine.substring(currentCommand.commandStartX);\n\t\t\tthis._cursorX = buffer.cursorX - currentCommand.commandStartX;\n\t\t} else {\n\t\t\tthis._currentCommand = undefined;\n\t\t\tthis._cursorX = undefined;\n\t\t\tthis._logService.debug(`TextAreaSyncAddon#updateCommandAndCursor: no commandStartX`);\n\t\t}\n\t}\n}\n"]}