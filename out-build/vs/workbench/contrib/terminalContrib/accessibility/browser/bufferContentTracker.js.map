{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/terminalContrib/accessibility/browser/bufferContentTracker.ts"],"names":[],"mappings":"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","file":"bufferContentTracker.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITerminalLogService, TerminalSettingId } from 'vs/platform/terminal/common/terminal';\nimport { IXtermTerminal } from 'vs/workbench/contrib/terminal/browser/terminal';\nimport type { IMarker, Terminal } from 'xterm';\n\nexport class BufferContentTracker extends Disposable {\n\t/**\n\t * Marks the last part of the buffer that was cached\n\t */\n\tprivate _lastCachedMarker: IMarker | undefined;\n\t/**\n\t * The number of wrapped lines in the viewport when the last cached marker was set\n\t */\n\tprivate _priorEditorViewportLineCount: number = 0;\n\n\tprivate _lines: string[] = [];\n\tget lines(): string[] { return this._lines; }\n\n\tbufferToEditorLineMapping: Map<number, number> = new Map();\n\n\tconstructor(\n\t\tprivate readonly _xterm: Pick<IXtermTerminal, 'getFont'> & { raw: Terminal },\n\t\t@ITerminalLogService private readonly _logService: ITerminalLogService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService) {\n\t\tsuper();\n\t}\n\n\treset(): void {\n\t\tthis._lines = [];\n\t\tthis._lastCachedMarker = undefined;\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tif (this._lastCachedMarker?.isDisposed) {\n\t\t\t// the terminal was cleared, reset the cache\n\t\t\tthis._lines = [];\n\t\t\tthis._lastCachedMarker = undefined;\n\t\t}\n\t\tthis._removeViewportContent();\n\t\tthis._updateCachedContent();\n\t\tthis._updateViewportContent();\n\t\tthis._lastCachedMarker = this._register(this._xterm.raw.registerMarker());\n\t\tthis._logService.debug('Buffer content tracker: set ', this._lines.length, ' lines');\n\t}\n\n\tprivate _updateCachedContent(): void {\n\t\tconst buffer = this._xterm.raw.buffer.active;\n\t\tconst start = this._lastCachedMarker?.line ? this._lastCachedMarker.line - this._xterm.raw.rows + 1 : 0;\n\t\tconst end = buffer.baseY;\n\t\tif (start < 0 || start > end) {\n\t\t\t// in the viewport, no need to cache\n\t\t\treturn;\n\t\t}\n\n\t\t// to keep the cache size down, remove any lines that are no longer in the scrollback\n\t\tconst scrollback: number = this._configurationService.getValue(TerminalSettingId.Scrollback);\n\t\tconst maxBufferSize = scrollback + this._xterm.raw.rows - 1;\n\t\tconst linesToAdd = end - start;\n\t\tif (linesToAdd + this._lines.length > maxBufferSize) {\n\t\t\tconst numToRemove = linesToAdd + this._lines.length - maxBufferSize;\n\t\t\tfor (let i = 0; i < numToRemove; i++) {\n\t\t\t\tthis._lines.shift();\n\t\t\t}\n\t\t\tthis._logService.debug('Buffer content tracker: removed ', numToRemove, ' lines from top of cached lines, now ', this._lines.length, ' lines');\n\t\t}\n\n\t\t// iterate through the buffer lines and add them to the editor line cache\n\t\tconst cachedLines = [];\n\t\tlet currentLine: string = '';\n\t\tfor (let i = start; i < end; i++) {\n\t\t\tconst line = buffer.getLine(i);\n\t\t\tif (!line) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.bufferToEditorLineMapping.set(i, this._lines.length + cachedLines.length);\n\t\t\tconst isWrapped = buffer.getLine(i + 1)?.isWrapped;\n\t\t\tcurrentLine += line.translateToString(!isWrapped);\n\t\t\tif (currentLine && !isWrapped || i === (buffer.baseY + this._xterm.raw.rows - 1)) {\n\t\t\t\tif (line.length) {\n\t\t\t\t\tcachedLines.push(currentLine);\n\t\t\t\t\tcurrentLine = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._logService.debug('Buffer content tracker:', cachedLines.length, ' lines cached');\n\t\tthis._lines.push(...cachedLines);\n\t}\n\n\tprivate _removeViewportContent(): void {\n\t\tif (!this._lines.length) {\n\t\t\treturn;\n\t\t}\n\t\t// remove previous viewport content in case it has changed\n\t\tlet linesToRemove = this._priorEditorViewportLineCount;\n\t\tlet index = 1;\n\t\twhile (linesToRemove) {\n\t\t\tthis.bufferToEditorLineMapping.forEach((value, key) => { if (value === this._lines.length - index) { this.bufferToEditorLineMapping.delete(key); } });\n\t\t\tthis._lines.pop();\n\t\t\tindex++;\n\t\t\tlinesToRemove--;\n\t\t}\n\t\tthis._logService.debug('Buffer content tracker: removed lines from viewport, now ', this._lines.length, ' lines cached');\n\t}\n\n\tprivate _updateViewportContent(): void {\n\t\tconst buffer = this._xterm.raw.buffer.active;\n\t\tthis._priorEditorViewportLineCount = 0;\n\t\tlet currentLine: string = '';\n\t\tfor (let i = buffer.baseY; i < buffer.baseY + this._xterm.raw.rows; i++) {\n\t\t\tconst line = buffer.getLine(i);\n\t\t\tif (!line) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.bufferToEditorLineMapping.set(i, this._lines.length);\n\t\t\tconst isWrapped = buffer.getLine(i + 1)?.isWrapped;\n\t\t\tcurrentLine += line.translateToString(!isWrapped);\n\t\t\tif (currentLine && !isWrapped || i === (buffer.baseY + this._xterm.raw.rows - 1)) {\n\t\t\t\tif (currentLine.length) {\n\t\t\t\t\tthis._priorEditorViewportLineCount++;\n\t\t\t\t\tthis._lines.push(currentLine);\n\t\t\t\t\tcurrentLine = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._logService.debug('Viewport content update complete, ', this._lines.length, ' lines in the viewport');\n\t}\n}\n"]}