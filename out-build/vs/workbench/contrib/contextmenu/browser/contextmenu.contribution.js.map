{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/contextmenu/browser/contextmenu.contribution.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;IAShG,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;QAI5B,YACiB,aAAkB,EACb,kBAAuB;YAJ5B,MAAC,GAAa,IAAI,eAAG,EAAc,CAAC;YAMpD,MAAM,MAAM,GAAG,CAAC,OAAgB,EAAE,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC;YAC/G,kBAAkB,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAW,CAAC;YACpF,kBAAkB,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAW,CAAC;QACtF,CAAC;KACD,CAAA;IAZK,uBAAuB;QAK1B,WAAA,mBAAG,CAAA;QACH,WAAA,iBAAG,CAAA;OANA,uBAAuB,CAY5B;IAED,cAAG,CAAM,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC;SACzE,6BAA6B,CAAC,uBAAuB,oCAA4B,CAAC","file":"contextmenu.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { ILayoutService } from 'vs/platform/layout/browser/layoutService';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\n\nclass ContextMenuContribution implements IWorkbenchContribution {\n\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\t@ILayoutService layoutService: ILayoutService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService\n\t) {\n\t\tconst update = (visible: boolean) => layoutService.container.classList.toggle('context-menu-visible', visible);\n\t\tcontextMenuService.onDidShowContextMenu(() => update(true), null, this.disposables);\n\t\tcontextMenuService.onDidHideContextMenu(() => update(false), null, this.disposables);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(ContextMenuContribution, LifecyclePhase.Eventually);\n"]}