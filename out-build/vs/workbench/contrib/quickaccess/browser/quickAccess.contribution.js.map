{"version":3,"sources":["vs/workbench/contrib/quickaccess/browser/quickAccess.contribution.ts"],"names":[],"mappings":"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","file":"quickAccess.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IQuickAccessRegistry, Extensions } from 'vs/platform/quickinput/common/quickAccess';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { HelpQuickAccessProvider } from 'vs/platform/quickinput/browser/helpQuickAccess';\nimport { ViewQuickAccessProvider, OpenViewPickerAction, QuickAccessViewPickerAction } from 'vs/workbench/contrib/quickaccess/browser/viewQuickAccess';\nimport { CommandsQuickAccessProvider, ShowAllCommandsAction, ClearCommandHistoryAction } from 'vs/workbench/contrib/quickaccess/browser/commandsQuickAccess';\nimport { MenuRegistry, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { KeyMod } from 'vs/base/common/keyCodes';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { inQuickPickContext, getQuickNavigateHandler } from 'vs/workbench/browser/quickaccess';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\n\n//#region Quick Access Proviers\n\nconst quickAccessRegistry = Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess);\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: HelpQuickAccessProvider,\n\tprefix: HelpQuickAccessProvider.PREFIX,\n\tplaceholder: localize('helpQuickAccessPlaceholder', \"Type '{0}' to get help on the actions you can take from here.\", HelpQuickAccessProvider.PREFIX),\n\thelpEntries: [{\n\t\tdescription: localize('helpQuickAccess', \"Show all Quick Access Providers\"),\n\t\tcommandCenterOrder: 70,\n\t\tcommandCenterLabel: localize('more', 'More')\n\t}]\n});\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: ViewQuickAccessProvider,\n\tprefix: ViewQuickAccessProvider.PREFIX,\n\tcontextKey: 'inViewsPicker',\n\tplaceholder: localize('viewQuickAccessPlaceholder', \"Type the name of a view, output channel or terminal to open.\"),\n\thelpEntries: [{ description: localize('viewQuickAccess', \"Open View\"), commandId: OpenViewPickerAction.ID }]\n});\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: CommandsQuickAccessProvider,\n\tprefix: CommandsQuickAccessProvider.PREFIX,\n\tcontextKey: 'inCommandsPicker',\n\tplaceholder: localize('commandsQuickAccessPlaceholder', \"Type the name of a command to run.\"),\n\thelpEntries: [{ description: localize('commandsQuickAccess', \"Show and Run Commands\"), commandId: ShowAllCommandsAction.ID, commandCenterOrder: 20 }]\n});\n\n//#endregion\n\n\n//#region Menu contributions\n\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\tgroup: '1_open',\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: localize({ key: 'miCommandPalette', comment: ['&& denotes a mnemonic'] }, \"&&Command Palette...\")\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\tgroup: '1_welcome',\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: localize({ key: 'miShowAllCommands', comment: ['&& denotes a mnemonic'] }, \"Show All Commands\")\n\t},\n\torder: 2\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\tgroup: '1_open',\n\tcommand: {\n\t\tid: OpenViewPickerAction.ID,\n\t\ttitle: localize({ key: 'miOpenView', comment: ['&& denotes a mnemonic'] }, \"&&Open View...\")\n\t},\n\torder: 2\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: '5_infile_nav',\n\tcommand: {\n\t\tid: 'workbench.action.gotoLine',\n\t\ttitle: localize({ key: 'miGotoLine', comment: ['&& denotes a mnemonic'] }, \"Go to &&Line/Column...\")\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.GlobalActivity, {\n\tgroup: '1_command',\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: localize('commandPalette', \"Command Palette...\")\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n\tgroup: 'z_commands',\n\twhen: EditorContextKeys.editorSimpleInput.toNegated(),\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: localize('commandPalette', \"Command Palette...\"),\n\t},\n\torder: 1\n});\n\n//#endregion\n\n\n//#region Workbench actions and commands\n\nregisterAction2(ClearCommandHistoryAction);\nregisterAction2(ShowAllCommandsAction);\nregisterAction2(OpenViewPickerAction);\nregisterAction2(QuickAccessViewPickerAction);\n\nconst inViewsPickerContextKey = 'inViewsPicker';\nconst inViewsPickerContext = ContextKeyExpr.and(inQuickPickContext, ContextKeyExpr.has(inViewsPickerContextKey));\nconst viewPickerKeybinding = QuickAccessViewPickerAction.KEYBINDING;\n\nconst quickAccessNavigateNextInViewPickerId = 'workbench.action.quickOpenNavigateNextInViewPicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickAccessNavigateNextInViewPickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickAccessNavigateNextInViewPickerId, true),\n\twhen: inViewsPickerContext,\n\tprimary: viewPickerKeybinding.primary,\n\tlinux: viewPickerKeybinding.linux,\n\tmac: viewPickerKeybinding.mac\n});\n\nconst quickAccessNavigatePreviousInViewPickerId = 'workbench.action.quickOpenNavigatePreviousInViewPicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickAccessNavigatePreviousInViewPickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickAccessNavigatePreviousInViewPickerId, false),\n\twhen: inViewsPickerContext,\n\tprimary: viewPickerKeybinding.primary | KeyMod.Shift,\n\tlinux: viewPickerKeybinding.linux,\n\tmac: {\n\t\tprimary: viewPickerKeybinding.mac.primary | KeyMod.Shift\n\t}\n});\n\n//#endregion\n"]}