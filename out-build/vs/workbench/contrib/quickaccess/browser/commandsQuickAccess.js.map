{"version":3,"sources":["vs/workbench/contrib/quickaccess/browser/commandsQuickAccess.ts"],"names":[],"mappings":"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","file":"commandsQuickAccess.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { ICommandQuickPick, CommandsHistory } from 'vs/platform/quickinput/browser/commandsQuickAccess';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IMenuService, MenuId, MenuItemAction, SubmenuItemAction, Action2 } from 'vs/platform/actions/common/actions';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { raceTimeout, timeout } from 'vs/base/common/async';\nimport { AbstractEditorCommandsQuickAccessProvider } from 'vs/editor/contrib/quickAccess/browser/commandsQuickAccess';\nimport { IEditor } from 'vs/editor/common/editorCommon';\nimport { Language } from 'vs/base/common/platform';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { DefaultQuickAccessFilterValue } from 'vs/platform/quickinput/common/quickAccess';\nimport { IConfigurationChangeEvent, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IWorkbenchQuickAccessConfiguration } from 'vs/workbench/browser/quickaccess';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { IQuickInputService, IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { TriggerAction } from 'vs/platform/quickinput/browser/pickerQuickAccess';\nimport { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';\nimport { stripIcons } from 'vs/base/common/iconLabels';\nimport { isFirefox } from 'vs/base/browser/browser';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IChatService } from 'vs/workbench/contrib/chat/common/chatService';\nimport { ASK_QUICK_QUESTION_ACTION_ID } from 'vs/workbench/contrib/chat/browser/actions/chatQuickInputActions';\nimport { CommandInformationResult, IAiRelatedInformationService, RelatedInformationType } from 'vs/workbench/services/aiRelatedInformation/common/aiRelatedInformation';\nimport { CHAT_OPEN_ACTION_ID } from 'vs/workbench/contrib/chat/browser/actions/chatActions';\n\nexport class CommandsQuickAccessProvider extends AbstractEditorCommandsQuickAccessProvider {\n\n\tprivate static AI_RELATED_INFORMATION_MAX_PICKS = 5;\n\tprivate static AI_RELATED_INFORMATION_THRESHOLD = 0.8;\n\tprivate static AI_RELATED_INFORMATION_DEBOUNCE = 200;\n\n\t// If extensions are not yet registered, we wait for a little moment to give them\n\t// a chance to register so that the complete set of commands shows up as result\n\t// We do not want to delay functionality beyond that time though to keep the commands\n\t// functional.\n\tprivate readonly extensionRegistrationRace = raceTimeout(this.extensionService.whenInstalledExtensionsRegistered(), 800);\n\n\tprivate useAiRelatedInfo = false;\n\n\tprotected get activeTextEditorControl(): IEditor | undefined { return this.editorService.activeTextEditorControl; }\n\n\tget defaultFilterValue(): DefaultQuickAccessFilterValue | undefined {\n\t\tif (this.configuration.preserveInput) {\n\t\t\treturn DefaultQuickAccessFilterValue.LAST;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IAiRelatedInformationService private readonly aiRelatedInformationService: IAiRelatedInformationService,\n\t\t@IChatService private readonly chatService: IChatService\n\t) {\n\t\tsuper({\n\t\t\tshowAlias: !Language.isDefaultVariant(),\n\t\t\tnoResultsPick: () => ({\n\t\t\t\tlabel: localize('noCommandResults', \"No matching commands\"),\n\t\t\t\tcommandId: ''\n\t\t\t}),\n\t\t}, instantiationService, keybindingService, commandService, telemetryService, dialogService);\n\n\t\tthis._register(configurationService.onDidChangeConfiguration((e) => this.updateOptions(e)));\n\t\tthis.updateOptions();\n\t}\n\n\tprivate get configuration() {\n\t\tconst commandPaletteConfig = this.configurationService.getValue<IWorkbenchQuickAccessConfiguration>().workbench.commandPalette;\n\n\t\treturn {\n\t\t\tpreserveInput: commandPaletteConfig.preserveInput,\n\t\t\texperimental: commandPaletteConfig.experimental\n\t\t};\n\t}\n\n\tprivate updateOptions(e?: IConfigurationChangeEvent): void {\n\t\tif (e && !e.affectsConfiguration('workbench.commandPalette.experimental')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst config = this.configuration;\n\t\tconst suggestedCommandIds = config.experimental.suggestCommands && this.productService.commandPaletteSuggestedCommandIds?.length\n\t\t\t? new Set(this.productService.commandPaletteSuggestedCommandIds)\n\t\t\t: undefined;\n\t\tthis.options.suggestedCommandIds = suggestedCommandIds;\n\t\tthis.useAiRelatedInfo = config.experimental.enableNaturalLanguageSearch;\n\t}\n\n\tprotected async getCommandPicks(token: CancellationToken): Promise<Array<ICommandQuickPick>> {\n\n\t\t// wait for extensions registration or 800ms once\n\t\tawait this.extensionRegistrationRace;\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\t...this.getCodeEditorCommandPicks(),\n\t\t\t...this.getGlobalCommandPicks()\n\t\t].map(picks => ({\n\t\t\t...picks,\n\t\t\tbuttons: [{\n\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.gear),\n\t\t\t\ttooltip: localize('configure keybinding', \"Configure Keybinding\"),\n\t\t\t}],\n\t\t\ttrigger: (): TriggerAction => {\n\t\t\t\tthis.preferencesService.openGlobalKeybindingSettings(false, { query: `@command:${picks.commandId}` });\n\t\t\t\treturn TriggerAction.CLOSE_PICKER;\n\t\t\t},\n\t\t}));\n\t}\n\n\tprotected hasAdditionalCommandPicks(filter: string, token: CancellationToken): boolean {\n\t\tif (\n\t\t\t!this.useAiRelatedInfo\n\t\t\t|| token.isCancellationRequested\n\t\t\t|| filter === ''\n\t\t\t|| !this.aiRelatedInformationService.isEnabled()\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected async getAdditionalCommandPicks(allPicks: ICommandQuickPick[], picksSoFar: ICommandQuickPick[], filter: string, token: CancellationToken): Promise<Array<ICommandQuickPick | IQuickPickSeparator>> {\n\t\tif (!this.hasAdditionalCommandPicks(filter, token)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet additionalPicks;\n\n\t\ttry {\n\t\t\t// Wait a bit to see if the user is still typing\n\t\t\tawait timeout(CommandsQuickAccessProvider.AI_RELATED_INFORMATION_DEBOUNCE, token);\n\t\t\tadditionalPicks = await this.getRelatedInformationPicks(allPicks, picksSoFar, filter, token);\n\t\t} catch (e) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (picksSoFar.length || additionalPicks.length) {\n\t\t\tadditionalPicks.push({\n\t\t\t\ttype: 'separator'\n\t\t\t});\n\t\t}\n\n\t\tconst info = this.chatService.getProviderInfos()[0];\n\t\tif (info) {\n\t\t\tadditionalPicks.push({\n\t\t\t\tlabel: localize('askXInChat', \"Ask {0}: {1}\", info.displayName, filter),\n\t\t\t\tcommandId: this.configuration.experimental.askChatLocation === 'quickChat' ? ASK_QUICK_QUESTION_ACTION_ID : CHAT_OPEN_ACTION_ID,\n\t\t\t\targs: [filter]\n\t\t\t});\n\t\t}\n\n\t\treturn additionalPicks;\n\t}\n\n\tprivate async getRelatedInformationPicks(allPicks: ICommandQuickPick[], picksSoFar: ICommandQuickPick[], filter: string, token: CancellationToken) {\n\t\tconst relatedInformation = await this.aiRelatedInformationService.getRelatedInformation(\n\t\t\tfilter,\n\t\t\t[RelatedInformationType.CommandInformation],\n\t\t\ttoken\n\t\t) as CommandInformationResult[];\n\n\t\t// Sort by weight descending to get the most relevant results first\n\t\trelatedInformation.sort((a, b) => b.weight - a.weight);\n\n\t\tconst setOfPicksSoFar = new Set(picksSoFar.map(p => p.commandId));\n\t\tconst additionalPicks = new Array<ICommandQuickPick | IQuickPickSeparator>();\n\n\t\tfor (const info of relatedInformation) {\n\t\t\tif (info.weight < CommandsQuickAccessProvider.AI_RELATED_INFORMATION_THRESHOLD || additionalPicks.length === CommandsQuickAccessProvider.AI_RELATED_INFORMATION_MAX_PICKS) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst pick = allPicks.find(p => p.commandId === info.command && !setOfPicksSoFar.has(p.commandId));\n\t\t\tif (pick) {\n\t\t\t\tadditionalPicks.push(pick);\n\t\t\t}\n\t\t}\n\n\t\treturn additionalPicks;\n\t}\n\n\tprivate getGlobalCommandPicks(): ICommandQuickPick[] {\n\t\tconst globalCommandPicks: ICommandQuickPick[] = [];\n\t\tconst scopedContextKeyService = this.editorService.activeEditorPane?.scopedContextKeyService || this.editorGroupService.activeGroup.scopedContextKeyService;\n\t\tconst globalCommandsMenu = this.menuService.createMenu(MenuId.CommandPalette, scopedContextKeyService);\n\t\tconst globalCommandsMenuActions = globalCommandsMenu.getActions()\n\t\t\t.reduce((r, [, actions]) => [...r, ...actions], <Array<MenuItemAction | SubmenuItemAction | string>>[])\n\t\t\t.filter(action => action instanceof MenuItemAction && action.enabled) as MenuItemAction[];\n\n\t\tfor (const action of globalCommandsMenuActions) {\n\n\t\t\t// Label\n\t\t\tlet label = (typeof action.item.title === 'string' ? action.item.title : action.item.title.value) || action.item.id;\n\n\t\t\t// Category\n\t\t\tconst category = typeof action.item.category === 'string' ? action.item.category : action.item.category?.value;\n\t\t\tif (category) {\n\t\t\t\tlabel = localize('commandWithCategory', \"{0}: {1}\", category, label);\n\t\t\t}\n\n\t\t\t// Alias\n\t\t\tconst aliasLabel = typeof action.item.title !== 'string' ? action.item.title.original : undefined;\n\t\t\tconst aliasCategory = (category && action.item.category && typeof action.item.category !== 'string') ? action.item.category.original : undefined;\n\t\t\tconst commandAlias = (aliasLabel && category) ?\n\t\t\t\taliasCategory ? `${aliasCategory}: ${aliasLabel}` : `${category}: ${aliasLabel}` :\n\t\t\t\taliasLabel;\n\n\t\t\tglobalCommandPicks.push({\n\t\t\t\tcommandId: action.item.id,\n\t\t\t\tcommandAlias,\n\t\t\t\tlabel: stripIcons(label)\n\t\t\t});\n\t\t}\n\n\t\t// Cleanup\n\t\tglobalCommandsMenu.dispose();\n\n\t\treturn globalCommandPicks;\n\t}\n}\n\n//#region Actions\n\nexport class ShowAllCommandsAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.showCommands';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowAllCommandsAction.ID,\n\t\t\ttitle: { value: localize('showTriggerActions', \"Show All Commands\"), original: 'Show All Commands' },\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: undefined,\n\t\t\t\tprimary: !isFirefox ? (KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyP) : undefined,\n\t\t\t\tsecondary: [KeyCode.F1]\n\t\t\t},\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\taccessor.get(IQuickInputService).quickAccess.show(CommandsQuickAccessProvider.PREFIX);\n\t}\n}\n\nexport class ClearCommandHistoryAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.clearCommandHistory',\n\t\t\ttitle: { value: localize('clearCommandHistory', \"Clear Command History\"), original: 'Clear Command History' },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst storageService = accessor.get(IStorageService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\n\t\tconst commandHistoryLength = CommandsHistory.getConfiguredCommandHistoryLength(configurationService);\n\t\tif (commandHistoryLength > 0) {\n\n\t\t\t// Ask for confirmation\n\t\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: localize('confirmClearMessage', \"Do you want to clear the history of recently used commands?\"),\n\t\t\t\tdetail: localize('confirmClearDetail', \"This action is irreversible!\"),\n\t\t\t\tprimaryButton: localize({ key: 'clearButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Clear\")\n\t\t\t});\n\n\t\t\tif (!confirmed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tCommandsHistory.clearHistory(configurationService, storageService);\n\t\t}\n\t}\n}\n\n//#endregion\n"]}