{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/search/test/browser/searchNotebookHelpers.test.ts"],"names":[],"mappings":"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","file":"searchNotebookHelpers.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Range } from 'vs/editor/common/core/range';\nimport { FindMatch, IReadonlyTextBuffer } from 'vs/editor/common/model';\nimport { IFileMatch, ISearchRange, ITextSearchMatch, QueryType } from 'vs/workbench/services/search/common/search';\nimport { ICellViewModel } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { CellKind } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { contentMatchesToTextSearchMatches, webviewMatchesToTextSearchMatches } from 'vs/workbench/contrib/search/browser/searchNotebookHelpers';\nimport { CellFindMatchModel } from 'vs/workbench/contrib/notebook/browser/contrib/find/findModel';\nimport { CellMatch, FileMatch, FolderMatch, SearchModel, textSearchMatchesToNotebookMatches } from 'vs/workbench/contrib/search/browser/searchModel';\nimport { URI } from 'vs/base/common/uri';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { createFileUriFromPathFromRoot, stubModelService, stubNotebookEditorService } from 'vs/workbench/contrib/search/test/browser/searchTestCommon';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { INotebookEditorService } from 'vs/workbench/contrib/notebook/browser/services/notebookEditorService';\n\nsuite('searchNotebookHelpers', () => {\n\tlet instantiationService: TestInstantiationService;\n\tlet mdCellFindMatch: CellFindMatchModel;\n\tlet codeCellFindMatch: CellFindMatchModel;\n\tlet mdInputCell: ICellViewModel;\n\tlet codeCell: ICellViewModel;\n\n\tlet markdownContentResults: ITextSearchMatch[];\n\tlet codeContentResults: ITextSearchMatch[];\n\tlet codeWebviewResults: ITextSearchMatch[];\n\tlet counter: number = 0;\n\tsetup(() => {\n\n\t\tinstantiationService = new TestInstantiationService();\n\t\tinstantiationService.stub(IModelService, stubModelService(instantiationService));\n\t\tinstantiationService.stub(INotebookEditorService, stubNotebookEditorService(instantiationService));\n\t\tmdInputCell = {\n\t\t\tcellKind: CellKind.Markup, textBuffer: <IReadonlyTextBuffer>{\n\t\t\t\tgetLineContent(lineNumber: number): string {\n\t\t\t\t\tif (lineNumber === 1) {\n\t\t\t\t\t\treturn '# Hello World Test';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} as ICellViewModel;\n\n\t\tconst findMatchMds = [new FindMatch(new Range(1, 15, 1, 19), ['Test'])];\n\t\tcodeCell = {\n\t\t\tcellKind: CellKind.Code, textBuffer: <IReadonlyTextBuffer>{\n\t\t\t\tgetLineContent(lineNumber: number): string {\n\t\t\t\t\tif (lineNumber === 1) {\n\t\t\t\t\t\treturn 'print(\"test! testing!!\")';\n\t\t\t\t\t} else if (lineNumber === 2) {\n\t\t\t\t\t\treturn 'print(\"this is a Test\")';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} as ICellViewModel;\n\t\tconst findMatchCodeCells =\n\t\t\t[new FindMatch(new Range(1, 8, 1, 12), ['test']),\n\t\t\tnew FindMatch(new Range(1, 14, 1, 18), ['test']),\n\t\t\tnew FindMatch(new Range(2, 18, 2, 22), ['Test'])\n\t\t\t];\n\n\t\tconst webviewMatches = [{\n\t\t\tindex: 0,\n\t\t\tsearchPreviewInfo: {\n\t\t\t\tline: 'test! testing!!',\n\t\t\t\trange: {\n\t\t\t\t\tstart: 1,\n\t\t\t\t\tend: 5\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tindex: 1,\n\t\t\tsearchPreviewInfo: {\n\t\t\t\tline: 'test! testing!!',\n\t\t\t\trange: {\n\t\t\t\t\tstart: 7,\n\t\t\t\t\tend: 11\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tindex: 3,\n\t\t\tsearchPreviewInfo: {\n\t\t\t\tline: 'this is a Test',\n\t\t\t\trange: {\n\t\t\t\t\tstart: 11,\n\t\t\t\t\tend: 15\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t];\n\n\n\t\tmdCellFindMatch = new CellFindMatchModel(\n\t\t\tmdInputCell,\n\t\t\t0,\n\t\t\tfindMatchMds,\n\t\t\t[],\n\t\t);\n\n\t\tcodeCellFindMatch = new CellFindMatchModel(\n\t\t\tcodeCell,\n\t\t\t5,\n\t\t\tfindMatchCodeCells,\n\t\t\twebviewMatches\n\t\t);\n\n\t});\n\n\tteardown(() => {\n\t\tinstantiationService.dispose();\n\t});\n\n\tsuite('notebookEditorMatchesToTextSearchResults', () => {\n\n\t\tfunction assertRangesEqual(actual: ISearchRange | ISearchRange[], expected: ISearchRange[]) {\n\t\t\tif (!Array.isArray(actual)) {\n\t\t\t\tactual = [actual];\n\t\t\t}\n\n\t\t\tassert.strictEqual(actual.length, expected.length);\n\t\t\tactual.forEach((r, i) => {\n\t\t\t\tconst expectedRange = expected[i];\n\t\t\t\tassert.deepStrictEqual(\n\t\t\t\t\t{ startLineNumber: r.startLineNumber, startColumn: r.startColumn, endLineNumber: r.endLineNumber, endColumn: r.endColumn },\n\t\t\t\t\t{ startLineNumber: expectedRange.startLineNumber, startColumn: expectedRange.startColumn, endLineNumber: expectedRange.endLineNumber, endColumn: expectedRange.endColumn });\n\t\t\t});\n\t\t}\n\n\t\ttest('convert CellFindMatchModel to ITextSearchMatch and check results', () => {\n\t\t\tmarkdownContentResults = contentMatchesToTextSearchMatches(mdCellFindMatch.contentMatches, mdInputCell);\n\t\t\tcodeContentResults = contentMatchesToTextSearchMatches(codeCellFindMatch.contentMatches, codeCell);\n\t\t\tcodeWebviewResults = webviewMatchesToTextSearchMatches(codeCellFindMatch.webviewMatches);\n\n\t\t\tassert.strictEqual(markdownContentResults.length, 1);\n\t\t\tassert.strictEqual(markdownContentResults[0].preview.text, '# Hello World Test\\n');\n\t\t\tassertRangesEqual(markdownContentResults[0].preview.matches, [new Range(0, 14, 0, 18)]);\n\t\t\tassertRangesEqual(markdownContentResults[0].ranges, [new Range(0, 14, 0, 18)]);\n\n\n\t\t\tassert.strictEqual(codeContentResults.length, 2);\n\t\t\tassert.strictEqual(codeContentResults[0].preview.text, 'print(\"test! testing!!\")\\n');\n\t\t\tassert.strictEqual(codeContentResults[1].preview.text, 'print(\"this is a Test\")\\n');\n\t\t\tassertRangesEqual(codeContentResults[0].preview.matches, [new Range(0, 7, 0, 11), new Range(0, 13, 0, 17)]);\n\t\t\tassertRangesEqual(codeContentResults[0].ranges, [new Range(0, 7, 0, 11), new Range(0, 13, 0, 17)]);\n\n\t\t\tassert.strictEqual(codeWebviewResults.length, 3);\n\t\t\tassert.strictEqual(codeWebviewResults[0].preview.text, 'test! testing!!');\n\t\t\tassert.strictEqual(codeWebviewResults[1].preview.text, 'test! testing!!');\n\t\t\tassert.strictEqual(codeWebviewResults[2].preview.text, 'this is a Test');\n\n\t\t\tassertRangesEqual(codeWebviewResults[0].preview.matches, [new Range(0, 1, 0, 5)]);\n\t\t\tassertRangesEqual(codeWebviewResults[1].preview.matches, [new Range(0, 7, 0, 11)]);\n\t\t\tassertRangesEqual(codeWebviewResults[2].preview.matches, [new Range(0, 11, 0, 15)]);\n\t\t\tassertRangesEqual(codeWebviewResults[0].ranges, [new Range(0, 1, 0, 5)]);\n\t\t\tassertRangesEqual(codeWebviewResults[1].ranges, [new Range(0, 7, 0, 11)]);\n\t\t\tassertRangesEqual(codeWebviewResults[2].ranges, [new Range(0, 11, 0, 15)]);\n\t\t});\n\n\t\ttest('convert ITextSearchMatch to MatchInNotebook', () => {\n\t\t\tconst mdCellMatch = new CellMatch(aFileMatch(), mdInputCell, 0);\n\t\t\tconst markdownCellContentMatchObjs = textSearchMatchesToNotebookMatches(markdownContentResults, mdCellMatch);\n\n\t\t\tconst codeCellMatch = new CellMatch(aFileMatch(), codeCell, 0);\n\t\t\tconst codeCellContentMatchObjs = textSearchMatchesToNotebookMatches(codeContentResults, codeCellMatch);\n\t\t\tconst codeWebviewContentMatchObjs = textSearchMatchesToNotebookMatches(codeWebviewResults, codeCellMatch);\n\n\n\t\t\tassert.strictEqual(markdownCellContentMatchObjs[0].cell.id, mdCellMatch.id);\n\t\t\tassertRangesEqual(markdownCellContentMatchObjs[0].range(), [new Range(1, 15, 1, 19)]);\n\n\t\t\tassert.strictEqual(codeCellContentMatchObjs[0].cell.id, codeCellMatch.id);\n\t\t\tassert.strictEqual(codeCellContentMatchObjs[1].cell.id, codeCellMatch.id);\n\t\t\tassertRangesEqual(codeCellContentMatchObjs[0].range(), [new Range(1, 8, 1, 12)]);\n\t\t\tassertRangesEqual(codeCellContentMatchObjs[1].range(), [new Range(1, 14, 1, 18)]);\n\t\t\tassertRangesEqual(codeCellContentMatchObjs[2].range(), [new Range(2, 18, 2, 22)]);\n\n\t\t\tassert.strictEqual(codeWebviewContentMatchObjs[0].cell.id, codeCellMatch.id);\n\t\t\tassert.strictEqual(codeWebviewContentMatchObjs[1].cell.id, codeCellMatch.id);\n\t\t\tassert.strictEqual(codeWebviewContentMatchObjs[2].cell.id, codeCellMatch.id);\n\t\t\tassertRangesEqual(codeWebviewContentMatchObjs[0].range(), [new Range(1, 2, 1, 6)]);\n\t\t\tassertRangesEqual(codeWebviewContentMatchObjs[1].range(), [new Range(1, 8, 1, 12)]);\n\t\t\tassertRangesEqual(codeWebviewContentMatchObjs[2].range(), [new Range(1, 12, 1, 16)]);\n\n\t\t});\n\n\n\t\tfunction aFileMatch(): FileMatch {\n\t\t\tconst rawMatch: IFileMatch = {\n\t\t\t\tresource: URI.file('somepath' + ++counter),\n\t\t\t\tresults: []\n\t\t\t};\n\n\t\t\tconst searchModel = instantiationService.createInstance(SearchModel);\n\t\t\tconst folderMatch = instantiationService.createInstance(FolderMatch, URI.file('somepath'), '', 0, {\n\t\t\t\ttype: QueryType.Text, folderQueries: [{ folder: createFileUriFromPathFromRoot() }], contentPattern: {\n\t\t\t\t\tpattern: ''\n\t\t\t\t}\n\t\t\t}, searchModel.searchResult, searchModel.searchResult, null);\n\t\t\treturn instantiationService.createInstance(FileMatch, {\n\t\t\t\tpattern: ''\n\t\t\t}, undefined, undefined, folderMatch, rawMatch, null, '');\n\t\t}\n\t});\n});\n"]}