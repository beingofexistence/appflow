{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/search/test/browser/searchModel.test.ts"],"names":[],"mappings":"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","file":"searchModel.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport * as sinon from 'sinon';\nimport * as arrays from 'vs/base/common/arrays';\nimport { DeferredPromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ModelService } from 'vs/editor/common/services/modelService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IFileMatch, IFileQuery, IFileSearchStats, IFolderQuery, ISearchComplete, ISearchProgressItem, ISearchQuery, ISearchService, ITextQuery, ITextSearchMatch, OneLineRange, QueryType, TextSearchMatch } from 'vs/workbench/services/search/common/search';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { CellMatch, MatchInNotebook, SearchModel } from 'vs/workbench/contrib/search/browser/searchModel';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { INotebookEditorService } from 'vs/workbench/contrib/notebook/browser/services/notebookEditorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { TestEditorGroupsService, TestEditorService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { NotebookEditorWidgetService } from 'vs/workbench/contrib/notebook/browser/services/notebookEditorServiceImpl';\nimport { createFileUriFromPathFromRoot, getRootName } from 'vs/workbench/contrib/search/test/browser/searchTestCommon';\nimport { ICellMatch, IFileMatchWithCells, contentMatchesToTextSearchMatches, webviewMatchesToTextSearchMatches } from 'vs/workbench/contrib/search/browser/searchNotebookHelpers';\nimport { CellKind } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { ICellViewModel } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';\nimport { FindMatch, IReadonlyTextBuffer } from 'vs/editor/common/model';\nimport { ResourceMap, ResourceSet } from 'vs/base/common/map';\nimport { INotebookService } from 'vs/workbench/contrib/notebook/common/notebookService';\nimport { INotebookSearchService } from 'vs/workbench/contrib/search/common/notebookSearch';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { MockContextKeyService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\n\nconst nullEvent = new class {\n\tid: number = -1;\n\ttopic!: string;\n\tname!: string;\n\tdescription!: string;\n\tdata: any;\n\n\tstartTime!: Date;\n\tstopTime!: Date;\n\n\tstop(): void {\n\t\treturn;\n\t}\n\n\ttimeTaken(): number {\n\t\treturn -1;\n\t}\n};\n\nconst lineOneRange = new OneLineRange(1, 0, 1);\n\nsuite('SearchModel', () => {\n\n\tlet instantiationService: TestInstantiationService;\n\n\tconst testSearchStats: IFileSearchStats = {\n\t\tfromCache: false,\n\t\tresultCount: 1,\n\t\ttype: 'searchProcess',\n\t\tdetailStats: {\n\t\t\tfileWalkTime: 0,\n\t\t\tcmdTime: 0,\n\t\t\tcmdResultCount: 0,\n\t\t\tdirectoriesWalked: 2,\n\t\t\tfilesWalked: 3\n\t\t}\n\t};\n\n\tconst folderQueries: IFolderQuery[] = [\n\t\t{ folder: createFileUriFromPathFromRoot() }\n\t];\n\n\tsetup(() => {\n\t\tinstantiationService = new TestInstantiationService();\n\t\tinstantiationService.stub(ITelemetryService, NullTelemetryService);\n\t\tinstantiationService.stub(ILabelService, { getUriBasenameLabel: (uri: URI) => '' });\n\t\tinstantiationService.stub(INotebookService, { getNotebookTextModels: () => [] });\n\t\tinstantiationService.stub(IModelService, stubModelService(instantiationService));\n\t\tinstantiationService.stub(INotebookEditorService, stubNotebookEditorService(instantiationService));\n\t\tinstantiationService.stub(ISearchService, {});\n\t\tinstantiationService.stub(ISearchService, 'textSearch', Promise.resolve({ results: [] }));\n\t\tinstantiationService.stub(IUriIdentityService, new UriIdentityService(new FileService(new NullLogService())));\n\t\tinstantiationService.stub(ILogService, new NullLogService());\n\t});\n\n\tteardown(() => sinon.restore());\n\n\tfunction searchServiceWithResults(results: IFileMatch[], complete: ISearchComplete | null = null): ISearchService {\n\t\treturn <ISearchService>{\n\t\t\ttextSearch(query: ISearchQuery, token?: CancellationToken, onProgress?: (result: ISearchProgressItem) => void, notebookURIs?: ResourceSet): Promise<ISearchComplete> {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\tresults.forEach(onProgress!);\n\t\t\t\t\t\tresolve(complete!);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tfileSearch(query: IFileQuery, token?: CancellationToken): Promise<ISearchComplete> {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\tresolve({ results: results, messages: [] });\n\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t},\n\t\t\ttextSearchSplitSyncAsync(query: ITextQuery, token?: CancellationToken | undefined, onProgress?: ((result: ISearchProgressItem) => void) | undefined): { syncResults: ISearchComplete; asyncResults: Promise<ISearchComplete> } {\n\t\t\t\treturn {\n\t\t\t\t\tsyncResults: {\n\t\t\t\t\t\tresults: [],\n\t\t\t\t\t\tmessages: []\n\t\t\t\t\t},\n\t\t\t\t\tasyncResults: new Promise(resolve => {\n\t\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\t\tresults.forEach(onProgress!);\n\t\t\t\t\t\t\tresolve(complete!);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction searchServiceWithError(error: Error): ISearchService {\n\t\treturn <ISearchService>{\n\t\t\ttextSearch(query: ISearchQuery, token?: CancellationToken, onProgress?: (result: ISearchProgressItem) => void): Promise<ISearchComplete> {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t\t},\n\t\t\tfileSearch(query: IFileQuery, token?: CancellationToken): Promise<ISearchComplete> {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\ttextSearchSplitSyncAsync(query: ITextQuery, token?: CancellationToken | undefined, onProgress?: ((result: ISearchProgressItem) => void) | undefined): { syncResults: ISearchComplete; asyncResults: Promise<ISearchComplete> } {\n\t\t\t\treturn {\n\t\t\t\t\tsyncResults: {\n\t\t\t\t\t\tresults: [],\n\t\t\t\t\t\tmessages: []\n\t\t\t\t\t},\n\t\t\t\t\tasyncResults: new Promise((resolve, reject) => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction canceleableSearchService(tokenSource: CancellationTokenSource): ISearchService {\n\t\treturn <ISearchService>{\n\t\t\ttextSearch(query: ITextQuery, token?: CancellationToken, onProgress?: (result: ISearchProgressItem) => void): Promise<ISearchComplete> {\n\t\t\t\ttoken?.onCancellationRequested(() => tokenSource.cancel());\n\n\t\t\t\treturn this.textSearchSplitSyncAsync(query, token, onProgress).asyncResults;\n\t\t\t},\n\t\t\tfileSearch(query: IFileQuery, token?: CancellationToken): Promise<ISearchComplete> {\n\t\t\t\ttoken?.onCancellationRequested(() => tokenSource.cancel());\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\tresolve(<any>{});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\ttextSearchSplitSyncAsync(query: ITextQuery, token?: CancellationToken | undefined, onProgress?: ((result: ISearchProgressItem) => void) | undefined): { syncResults: ISearchComplete; asyncResults: Promise<ISearchComplete> } {\n\t\t\t\ttoken?.onCancellationRequested(() => tokenSource.cancel());\n\t\t\t\treturn {\n\t\t\t\t\tsyncResults: {\n\t\t\t\t\t\tresults: [],\n\t\t\t\t\t\tmessages: []\n\t\t\t\t\t},\n\t\t\t\t\tasyncResults: new Promise(resolve => {\n\t\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\t\tresolve(<any>{\n\t\t\t\t\t\t\t\tresults: [],\n\t\t\t\t\t\t\t\tmessages: []\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction searchServiceWithDeferredPromise(p: Promise<ISearchComplete>): ISearchService {\n\t\treturn <ISearchService>{\n\t\t\ttextSearchSplitSyncAsync(query: ITextQuery, token?: CancellationToken | undefined, onProgress?: ((result: ISearchProgressItem) => void) | undefined): { syncResults: ISearchComplete; asyncResults: Promise<ISearchComplete> } {\n\t\t\t\treturn {\n\t\t\t\t\tsyncResults: {\n\t\t\t\t\t\tresults: [],\n\t\t\t\t\t\tmessages: []\n\t\t\t\t\t},\n\t\t\t\t\tasyncResults: p,\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\n\tfunction notebookSearchServiceWithInfo(results: IFileMatchWithCells[], tokenSource: CancellationTokenSource | undefined): INotebookSearchService {\n\t\treturn <INotebookSearchService>{\n\t\t\t_serviceBrand: undefined,\n\t\t\tnotebookSearch(query: ITextQuery, token: CancellationToken | undefined, searchInstanceID: string, onProgress?: (result: ISearchProgressItem) => void): {\n\t\t\t\topenFilesToScan: ResourceSet;\n\t\t\t\tcompleteData: Promise<ISearchComplete>;\n\t\t\t\tallScannedFiles: Promise<ResourceSet>;\n\t\t\t} {\n\t\t\t\ttoken?.onCancellationRequested(() => tokenSource?.cancel());\n\t\t\t\tconst localResults = new ResourceMap<IFileMatchWithCells | null>(uri => uri.path);\n\n\t\t\t\tresults.forEach(r => {\n\t\t\t\t\tlocalResults.set(r.resource, r);\n\t\t\t\t});\n\n\t\t\t\tif (onProgress) {\n\t\t\t\t\tarrays.coalesce([...localResults.values()]).forEach(onProgress);\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\topenFilesToScan: new ResourceSet([...localResults.keys()]),\n\t\t\t\t\tcompleteData: Promise.resolve({\n\t\t\t\t\t\tmessages: [],\n\t\t\t\t\t\tresults: arrays.coalesce([...localResults.values()]),\n\t\t\t\t\t\tlimitHit: false\n\t\t\t\t\t}),\n\t\t\t\t\tallScannedFiles: Promise.resolve(new ResourceSet()),\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\ttest('Search Model: Search adds to results', async () => {\n\t\tconst results = [\n\t\t\taRawMatch('/1',\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 1, 4)),\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 4, 11))),\n\t\t\taRawMatch('/2', new TextSearchMatch('preview 2', lineOneRange))];\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults(results, { limitHit: false, messages: [], results }));\n\t\tinstantiationService.stub(INotebookSearchService, notebookSearchServiceWithInfo([], undefined));\n\n\t\tconst testObject: SearchModel = instantiationService.createInstance(SearchModel);\n\t\tawait testObject.search({ contentPattern: { pattern: 'somestring' }, type: QueryType.Text, folderQueries }).asyncResults;\n\n\t\tconst actual = testObject.searchResult.matches();\n\n\t\tassert.strictEqual(2, actual.length);\n\t\tassert.strictEqual(URI.file(`${getRootName()}/1`).toString(), actual[0].resource.toString());\n\n\t\tlet actuaMatches = actual[0].matches();\n\t\tassert.strictEqual(2, actuaMatches.length);\n\t\tassert.strictEqual('preview 1', actuaMatches[0].text());\n\t\tassert.ok(new Range(2, 2, 2, 5).equalsRange(actuaMatches[0].range()));\n\t\tassert.strictEqual('preview 1', actuaMatches[1].text());\n\t\tassert.ok(new Range(2, 5, 2, 12).equalsRange(actuaMatches[1].range()));\n\n\t\tactuaMatches = actual[1].matches();\n\t\tassert.strictEqual(1, actuaMatches.length);\n\t\tassert.strictEqual('preview 2', actuaMatches[0].text());\n\t\tassert.ok(new Range(2, 1, 2, 2).equalsRange(actuaMatches[0].range()));\n\t});\n\n\n\ttest('Search Model: Search can return notebook results', async () => {\n\t\tconst results = [\n\t\t\taRawMatch('/2',\n\t\t\t\tnew TextSearchMatch('test', new OneLineRange(1, 1, 5)),\n\t\t\t\tnew TextSearchMatch('this is a test', new OneLineRange(1, 11, 15))),\n\t\t\taRawMatch('/3', new TextSearchMatch('test', lineOneRange))];\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults(results, { limitHit: false, messages: [], results }));\n\t\tsinon.stub(CellMatch.prototype, 'addContext');\n\n\t\tconst mdInputCell = {\n\t\t\tcellKind: CellKind.Markup, textBuffer: <IReadonlyTextBuffer>{\n\t\t\t\tgetLineContent(lineNumber: number): string {\n\t\t\t\t\tif (lineNumber === 1) {\n\t\t\t\t\t\treturn '# Test';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tid: 'mdInputCell'\n\t\t} as ICellViewModel;\n\n\t\tconst findMatchMds = [new FindMatch(new Range(1, 3, 1, 7), ['Test'])];\n\n\t\tconst codeCell = {\n\t\t\tcellKind: CellKind.Code, textBuffer: <IReadonlyTextBuffer>{\n\t\t\t\tgetLineContent(lineNumber: number): string {\n\t\t\t\t\tif (lineNumber === 1) {\n\t\t\t\t\t\treturn 'print(\"test! testing!!\")';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tid: 'codeCell'\n\t\t} as ICellViewModel;\n\n\t\tconst findMatchCodeCells =\n\t\t\t[new FindMatch(new Range(1, 8, 1, 12), ['test']),\n\t\t\tnew FindMatch(new Range(1, 14, 1, 18), ['test']),\n\t\t\t];\n\t\tconst webviewMatches = [{\n\t\t\tindex: 0,\n\t\t\tsearchPreviewInfo: {\n\t\t\t\tline: 'test! testing!!',\n\t\t\t\trange: {\n\t\t\t\t\tstart: 1,\n\t\t\t\t\tend: 5\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tindex: 1,\n\t\t\tsearchPreviewInfo: {\n\t\t\t\tline: 'test! testing!!',\n\t\t\t\trange: {\n\t\t\t\t\tstart: 7,\n\t\t\t\t\tend: 11\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t];\n\t\tconst cellMatchMd: ICellMatch = {\n\t\t\tcell: mdInputCell,\n\t\t\tindex: 0,\n\t\t\tcontentResults: contentMatchesToTextSearchMatches(findMatchMds, mdInputCell),\n\t\t\twebviewResults: []\n\t\t};\n\n\t\tconst cellMatchCode: ICellMatch = {\n\t\t\tcell: codeCell,\n\t\t\tindex: 1,\n\t\t\tcontentResults: contentMatchesToTextSearchMatches(findMatchCodeCells, codeCell),\n\t\t\twebviewResults: webviewMatchesToTextSearchMatches(webviewMatches),\n\t\t};\n\n\t\tconst notebookSearchService = instantiationService.stub(INotebookSearchService, notebookSearchServiceWithInfo([aRawMatchWithCells('/1', cellMatchMd, cellMatchCode)], undefined));\n\t\tconst notebookSearch = sinon.spy(notebookSearchService, \"notebookSearch\");\n\t\tconst model: SearchModel = instantiationService.createInstance(SearchModel);\n\t\tawait model.search({ contentPattern: { pattern: 'test' }, type: QueryType.Text, folderQueries }).asyncResults;\n\t\tconst actual = model.searchResult.matches();\n\n\t\tassert(notebookSearch.calledOnce);\n\n\t\tassert.strictEqual(3, actual.length);\n\t\tassert.strictEqual(URI.file(`${getRootName()}/1`).toString(), actual[0].resource.toString());\n\t\tconst notebookFileMatches = actual[0].matches();\n\n\t\tassert.ok(notebookFileMatches[0].range().equalsRange(new Range(1, 3, 1, 7)));\n\t\tassert.ok(notebookFileMatches[1].range().equalsRange(new Range(1, 8, 1, 12)));\n\t\tassert.ok(notebookFileMatches[2].range().equalsRange(new Range(1, 14, 1, 18)));\n\t\tassert.ok(notebookFileMatches[3].range().equalsRange(new Range(1, 2, 1, 6)));\n\t\tassert.ok(notebookFileMatches[4].range().equalsRange(new Range(1, 8, 1, 12)));\n\n\t\tnotebookFileMatches.forEach(match => match instanceof MatchInNotebook);\n\t\t// assert(notebookFileMatches[0] instanceof MatchInNotebook);\n\t\tassert((notebookFileMatches[0] as MatchInNotebook).cell.id === 'mdInputCell');\n\t\tassert((notebookFileMatches[1] as MatchInNotebook).cell.id === 'codeCell');\n\t\tassert((notebookFileMatches[2] as MatchInNotebook).cell.id === 'codeCell');\n\t\tassert((notebookFileMatches[3] as MatchInNotebook).cell.id === 'codeCell');\n\t\tassert((notebookFileMatches[4] as MatchInNotebook).cell.id === 'codeCell');\n\n\t\tconst mdCellMatchProcessed = (notebookFileMatches[0] as MatchInNotebook).cellParent;\n\t\tconst codeCellMatchProcessed = (notebookFileMatches[1] as MatchInNotebook).cellParent;\n\n\t\tassert(mdCellMatchProcessed.contentMatches.length === 1);\n\t\tassert(codeCellMatchProcessed.contentMatches.length === 2);\n\t\tassert(codeCellMatchProcessed.webviewMatches.length === 2);\n\n\t\tassert(mdCellMatchProcessed.contentMatches[0] === notebookFileMatches[0]);\n\t\tassert(codeCellMatchProcessed.contentMatches[0] === notebookFileMatches[1]);\n\t\tassert(codeCellMatchProcessed.contentMatches[1] === notebookFileMatches[2]);\n\t\tassert(codeCellMatchProcessed.webviewMatches[0] === notebookFileMatches[3]);\n\t\tassert(codeCellMatchProcessed.webviewMatches[1] === notebookFileMatches[4]);\n\n\t\tassert.strictEqual(URI.file(`${getRootName()}/2`).toString(), actual[1].resource.toString());\n\t\tassert.strictEqual(URI.file(`${getRootName()}/3`).toString(), actual[2].resource.toString());\n\t});\n\n\ttest('Search Model: Search reports telemetry on search completed', async () => {\n\t\tconst target = instantiationService.spy(ITelemetryService, 'publicLog');\n\t\tconst results = [\n\t\t\taRawMatch('/1',\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 1, 4)),\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 4, 11))),\n\t\t\taRawMatch('/2',\n\t\t\t\tnew TextSearchMatch('preview 2', lineOneRange))];\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults(results, { limitHit: false, messages: [], results }));\n\t\tinstantiationService.stub(INotebookSearchService, notebookSearchServiceWithInfo([], undefined));\n\n\t\tconst testObject: SearchModel = instantiationService.createInstance(SearchModel);\n\t\tawait testObject.search({ contentPattern: { pattern: 'somestring' }, type: QueryType.Text, folderQueries }).asyncResults;\n\n\t\tassert.ok(target.calledThrice);\n\t\tassert.ok(target.calledWith('searchResultsFirstRender'));\n\t\tassert.ok(target.calledWith('searchResultsFinished'));\n\t});\n\n\ttest('Search Model: Search reports timed telemetry on search when progress is not called', () => {\n\t\tconst target2 = sinon.spy();\n\t\tsinon.stub(nullEvent, 'stop').callsFake(target2);\n\t\tconst target1 = sinon.stub().returns(nullEvent);\n\t\tinstantiationService.stub(ITelemetryService, 'publicLog', target1);\n\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults([], { limitHit: false, messages: [], results: [] }));\n\t\tinstantiationService.stub(INotebookSearchService, notebookSearchServiceWithInfo([], undefined));\n\n\t\tconst testObject = instantiationService.createInstance(SearchModel);\n\t\tconst result = testObject.search({ contentPattern: { pattern: 'somestring' }, type: QueryType.Text, folderQueries }).asyncResults;\n\n\t\treturn result.then(() => {\n\t\t\treturn timeout(1).then(() => {\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFirstRender'));\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFinished'));\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Search Model: Search reports timed telemetry on search when progress is called', () => {\n\t\tconst target2 = sinon.spy();\n\t\tsinon.stub(nullEvent, 'stop').callsFake(target2);\n\t\tconst target1 = sinon.stub().returns(nullEvent);\n\t\tinstantiationService.stub(ITelemetryService, 'publicLog', target1);\n\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults(\n\t\t\t[aRawMatch('/1', new TextSearchMatch('some preview', lineOneRange))],\n\t\t\t{ results: [], stats: testSearchStats, messages: [] }));\n\t\tinstantiationService.stub(INotebookSearchService, notebookSearchServiceWithInfo([], undefined));\n\n\t\tconst testObject = instantiationService.createInstance(SearchModel);\n\t\tconst result = testObject.search({ contentPattern: { pattern: 'somestring' }, type: QueryType.Text, folderQueries }).asyncResults;\n\n\t\treturn result.then(() => {\n\t\t\treturn timeout(1).then(() => {\n\t\t\t\t// timeout because promise handlers may run in a different order. We only care that these\n\t\t\t\t// are fired at some point.\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFirstRender'));\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFinished'));\n\t\t\t\t// assert.strictEqual(1, target2.callCount);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Search Model: Search reports timed telemetry on search when error is called', () => {\n\t\tconst target2 = sinon.spy();\n\t\tsinon.stub(nullEvent, 'stop').callsFake(target2);\n\t\tconst target1 = sinon.stub().returns(nullEvent);\n\t\tinstantiationService.stub(ITelemetryService, 'publicLog', target1);\n\n\t\tinstantiationService.stub(ISearchService, searchServiceWithError(new Error('This error should be thrown by this test.')));\n\t\tinstantiationService.stub(INotebookSearchService, notebookSearchServiceWithInfo([], undefined));\n\n\t\tconst testObject = instantiationService.createInstance(SearchModel);\n\t\tconst result = testObject.search({ contentPattern: { pattern: 'somestring' }, type: QueryType.Text, folderQueries }).asyncResults;\n\n\t\treturn result.then(() => { }, () => {\n\t\t\treturn timeout(1).then(() => {\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFirstRender'));\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFinished'));\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Search Model: Search reports timed telemetry on search when error is cancelled error', () => {\n\t\tconst target2 = sinon.spy();\n\t\tsinon.stub(nullEvent, 'stop').callsFake(target2);\n\t\tconst target1 = sinon.stub().returns(nullEvent);\n\t\tinstantiationService.stub(ITelemetryService, 'publicLog', target1);\n\n\t\tconst deferredPromise = new DeferredPromise<ISearchComplete>();\n\n\t\tinstantiationService.stub(ISearchService, searchServiceWithDeferredPromise(deferredPromise.p));\n\t\tinstantiationService.stub(INotebookSearchService, notebookSearchServiceWithInfo([], undefined));\n\n\t\tconst testObject = instantiationService.createInstance(SearchModel);\n\t\tconst result = testObject.search({ contentPattern: { pattern: 'somestring' }, type: QueryType.Text, folderQueries }).asyncResults;\n\n\t\tdeferredPromise.cancel();\n\n\t\treturn result.then(() => { }, async () => {\n\t\t\treturn timeout(1).then(() => {\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFirstRender'));\n\t\t\t\tassert.ok(target1.calledWith('searchResultsFinished'));\n\t\t\t\t// assert.ok(target2.calledOnce);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Search Model: Search results are cleared during search', async () => {\n\t\tconst results = [\n\t\t\taRawMatch('/1',\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 1, 4)),\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 4, 11))),\n\t\t\taRawMatch('/2',\n\t\t\t\tnew TextSearchMatch('preview 2', lineOneRange))];\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults(results, { limitHit: false, messages: [], results: [] }));\n\t\tinstantiationService.stub(INotebookSearchService, notebookSearchServiceWithInfo([], undefined));\n\t\tconst testObject: SearchModel = instantiationService.createInstance(SearchModel);\n\t\tawait testObject.search({ contentPattern: { pattern: 'somestring' }, type: QueryType.Text, folderQueries }).asyncResults;\n\t\tassert.ok(!testObject.searchResult.isEmpty());\n\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults([]));\n\n\t\ttestObject.search({ contentPattern: { pattern: 'somestring' }, type: QueryType.Text, folderQueries });\n\t\tassert.ok(testObject.searchResult.isEmpty());\n\t});\n\n\ttest('Search Model: Previous search is cancelled when new search is called', async () => {\n\t\tconst tokenSource = new CancellationTokenSource();\n\t\tinstantiationService.stub(ISearchService, canceleableSearchService(tokenSource));\n\t\tinstantiationService.stub(INotebookSearchService, notebookSearchServiceWithInfo([], tokenSource));\n\t\tconst testObject: SearchModel = instantiationService.createInstance(SearchModel);\n\t\ttestObject.search({ contentPattern: { pattern: 'somestring' }, type: QueryType.Text, folderQueries });\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults([]));\n\t\tinstantiationService.stub(INotebookSearchService, notebookSearchServiceWithInfo([], undefined));\n\t\ttestObject.search({ contentPattern: { pattern: 'somestring' }, type: QueryType.Text, folderQueries });\n\n\t\tassert.ok(tokenSource.token.isCancellationRequested);\n\t});\n\n\ttest('getReplaceString returns proper replace string for regExpressions', async () => {\n\t\tconst results = [\n\t\t\taRawMatch('/1',\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 1, 4)),\n\t\t\t\tnew TextSearchMatch('preview 1', new OneLineRange(1, 4, 11)))];\n\t\tinstantiationService.stub(ISearchService, searchServiceWithResults(results, { limitHit: false, messages: [], results }));\n\t\tinstantiationService.stub(INotebookSearchService, notebookSearchServiceWithInfo([], undefined));\n\n\t\tconst testObject: SearchModel = instantiationService.createInstance(SearchModel);\n\t\tawait testObject.search({ contentPattern: { pattern: 're' }, type: QueryType.Text, folderQueries }).asyncResults;\n\t\ttestObject.replaceString = 'hello';\n\t\tlet match = testObject.searchResult.matches()[0].matches()[0];\n\t\tassert.strictEqual('hello', match.replaceString);\n\n\t\tawait testObject.search({ contentPattern: { pattern: 're', isRegExp: true }, type: QueryType.Text, folderQueries }).asyncResults;\n\t\tmatch = testObject.searchResult.matches()[0].matches()[0];\n\t\tassert.strictEqual('hello', match.replaceString);\n\n\t\tawait testObject.search({ contentPattern: { pattern: 're(?:vi)', isRegExp: true }, type: QueryType.Text, folderQueries }).asyncResults;\n\t\tmatch = testObject.searchResult.matches()[0].matches()[0];\n\t\tassert.strictEqual('hello', match.replaceString);\n\n\t\tawait testObject.search({ contentPattern: { pattern: 'r(e)(?:vi)', isRegExp: true }, type: QueryType.Text, folderQueries }).asyncResults;\n\t\tmatch = testObject.searchResult.matches()[0].matches()[0];\n\t\tassert.strictEqual('hello', match.replaceString);\n\n\t\tawait testObject.search({ contentPattern: { pattern: 'r(e)(?:vi)', isRegExp: true }, type: QueryType.Text, folderQueries }).asyncResults;\n\t\ttestObject.replaceString = 'hello$1';\n\t\tmatch = testObject.searchResult.matches()[0].matches()[0];\n\t\tassert.strictEqual('helloe', match.replaceString);\n\t});\n\n\tfunction aRawMatch(resource: string, ...results: ITextSearchMatch[]): IFileMatch {\n\t\treturn { resource: createFileUriFromPathFromRoot(resource), results };\n\t}\n\n\tfunction aRawMatchWithCells(resource: string, ...cells: ICellMatch[]) {\n\t\treturn { resource: createFileUriFromPathFromRoot(resource), cellResults: cells };\n\t}\n\n\tfunction stubModelService(instantiationService: TestInstantiationService): IModelService {\n\t\tinstantiationService.stub(IThemeService, new TestThemeService());\n\t\tconst config = new TestConfigurationService();\n\t\tconfig.setUserConfiguration('search', { searchOnType: true });\n\t\tinstantiationService.stub(IConfigurationService, config);\n\t\treturn instantiationService.createInstance(ModelService);\n\t}\n\n\tfunction stubNotebookEditorService(instantiationService: TestInstantiationService): INotebookEditorService {\n\t\tinstantiationService.stub(IEditorGroupsService, new TestEditorGroupsService());\n\t\tinstantiationService.stub(IContextKeyService, new MockContextKeyService());\n\t\tinstantiationService.stub(IEditorService, new TestEditorService());\n\t\treturn instantiationService.createInstance(NotebookEditorWidgetService);\n\t}\n});\n\n"]}