{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/search/test/browser/searchViewlet.test.ts"],"names":[],"mappings":"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","file":"searchViewlet.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from 'assert';\nimport { URI } from 'vs/base/common/uri';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ModelService } from 'vs/editor/common/services/modelService';\nimport { TestLanguageConfigurationService } from 'vs/editor/test/common/modes/testLanguageConfigurationService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { TestConfigurationService } from 'vs/platform/configuration/test/common/testConfigurationService';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { ILogService, NullLogService } from 'vs/platform/log/common/log';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { TestThemeService } from 'vs/platform/theme/test/common/testThemeService';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { TestWorkspace } from 'vs/platform/workspace/test/common/testWorkspace';\nimport { FileMatch, FolderMatch, Match, searchComparer, searchMatchComparer, SearchModel, SearchResult } from 'vs/workbench/contrib/search/browser/searchModel';\nimport { MockLabelService } from 'vs/workbench/services/label/test/common/mockLabelService';\nimport { IFileMatch, ITextSearchMatch, OneLineRange, QueryType, SearchSortOrder } from 'vs/workbench/services/search/common/search';\nimport { TestContextService } from 'vs/workbench/test/common/workbenchTestServices';\nimport { INotebookEditorService } from 'vs/workbench/contrib/notebook/browser/services/notebookEditorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { TestEditorGroupsService, TestEditorService } from 'vs/workbench/test/browser/workbenchTestServices';\nimport { NotebookEditorWidgetService } from 'vs/workbench/contrib/notebook/browser/services/notebookEditorServiceImpl';\nimport { createFileUriFromPathFromRoot, getRootName } from 'vs/workbench/contrib/search/test/browser/searchTestCommon';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { MockContextKeyService } from 'vs/platform/keybinding/test/common/mockKeybindingService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\n\nsuite('Search - Viewlet', () => {\n\tlet instantiation: TestInstantiationService;\n\n\tsetup(() => {\n\t\tinstantiation = new TestInstantiationService();\n\t\tinstantiation.stub(ILanguageConfigurationService, TestLanguageConfigurationService);\n\t\tinstantiation.stub(IModelService, stubModelService(instantiation));\n\t\tinstantiation.stub(INotebookEditorService, stubNotebookEditorService(instantiation));\n\n\t\tinstantiation.set(IWorkspaceContextService, new TestContextService(TestWorkspace));\n\t\tinstantiation.stub(IUriIdentityService, new UriIdentityService(new FileService(new NullLogService())));\n\t\tinstantiation.stub(ILabelService, new MockLabelService());\n\t\tinstantiation.stub(ILogService, new NullLogService());\n\t});\n\n\tteardown(() => {\n\t\tinstantiation.dispose();\n\t});\n\n\ttest('Data Source', function () {\n\t\tconst result: SearchResult = aSearchResult();\n\t\tresult.query = {\n\t\t\ttype: QueryType.Text,\n\t\t\tcontentPattern: { pattern: 'foo' },\n\t\t\tfolderQueries: [{\n\t\t\t\tfolder: createFileUriFromPathFromRoot()\n\t\t\t}]\n\t\t};\n\n\t\tresult.add([{\n\t\t\tresource: createFileUriFromPathFromRoot('/foo'),\n\t\t\tresults: [{\n\t\t\t\tpreview: {\n\t\t\t\t\ttext: 'bar',\n\t\t\t\t\tmatches: {\n\t\t\t\t\t\tstartLineNumber: 0,\n\t\t\t\t\t\tstartColumn: 0,\n\t\t\t\t\t\tendLineNumber: 0,\n\t\t\t\t\t\tendColumn: 1\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tranges: {\n\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\tstartColumn: 0,\n\t\t\t\t\tendLineNumber: 1,\n\t\t\t\t\tendColumn: 1\n\t\t\t\t}\n\t\t\t}]\n\t\t}], '');\n\n\t\tconst fileMatch = result.matches()[0];\n\t\tconst lineMatch = fileMatch.matches()[0];\n\n\t\tassert.strictEqual(fileMatch.id(), URI.file(`${getRootName()}/foo`).toString());\n\t\tassert.strictEqual(lineMatch.id(), `${URI.file(`${getRootName()}/foo`).toString()}>[2,1 -> 2,2]b`);\n\t});\n\n\ttest('Comparer', () => {\n\t\tconst fileMatch1 = aFileMatch('/foo');\n\t\tconst fileMatch2 = aFileMatch('/with/path');\n\t\tconst fileMatch3 = aFileMatch('/with/path/foo');\n\t\tconst lineMatch1 = new Match(fileMatch1, ['bar'], new OneLineRange(0, 1, 1), new OneLineRange(0, 1, 1));\n\t\tconst lineMatch2 = new Match(fileMatch1, ['bar'], new OneLineRange(0, 1, 1), new OneLineRange(2, 1, 1));\n\t\tconst lineMatch3 = new Match(fileMatch1, ['bar'], new OneLineRange(0, 1, 1), new OneLineRange(2, 1, 1));\n\n\t\tassert(searchMatchComparer(fileMatch1, fileMatch2) < 0);\n\t\tassert(searchMatchComparer(fileMatch2, fileMatch1) > 0);\n\t\tassert(searchMatchComparer(fileMatch1, fileMatch1) === 0);\n\t\tassert(searchMatchComparer(fileMatch2, fileMatch3) < 0);\n\n\t\tassert(searchMatchComparer(lineMatch1, lineMatch2) < 0);\n\t\tassert(searchMatchComparer(lineMatch2, lineMatch1) > 0);\n\t\tassert(searchMatchComparer(lineMatch2, lineMatch3) === 0);\n\t});\n\n\ttest('Advanced Comparer', () => {\n\t\tconst fileMatch1 = aFileMatch('/with/path/foo10');\n\t\tconst fileMatch2 = aFileMatch('/with/path2/foo1');\n\t\tconst fileMatch3 = aFileMatch('/with/path/bar.a');\n\t\tconst fileMatch4 = aFileMatch('/with/path/bar.b');\n\n\t\t// By default, path < path2\n\t\tassert(searchMatchComparer(fileMatch1, fileMatch2) < 0);\n\t\t// By filenames, foo10 > foo1\n\t\tassert(searchMatchComparer(fileMatch1, fileMatch2, SearchSortOrder.FileNames) > 0);\n\t\t// By type, bar.a < bar.b\n\t\tassert(searchMatchComparer(fileMatch3, fileMatch4, SearchSortOrder.Type) < 0);\n\t});\n\n\ttest('Cross-type Comparer', () => {\n\n\t\tconst searchResult = aSearchResult();\n\t\tconst folderMatch1 = aFolderMatch('/voo', 0, searchResult);\n\t\tconst folderMatch2 = aFolderMatch('/with', 1, searchResult);\n\n\t\tconst fileMatch1 = aFileMatch('/voo/foo.a', folderMatch1);\n\t\tconst fileMatch2 = aFileMatch('/with/path.c', folderMatch2);\n\t\tconst fileMatch3 = aFileMatch('/with/path/bar.b', folderMatch2);\n\n\t\tconst lineMatch1 = new Match(fileMatch1, ['bar'], new OneLineRange(0, 1, 1), new OneLineRange(0, 1, 1));\n\t\tconst lineMatch2 = new Match(fileMatch1, ['bar'], new OneLineRange(0, 1, 1), new OneLineRange(2, 1, 1));\n\n\t\tconst lineMatch3 = new Match(fileMatch2, ['barfoo'], new OneLineRange(0, 1, 1), new OneLineRange(0, 1, 1));\n\t\tconst lineMatch4 = new Match(fileMatch2, ['fooooo'], new OneLineRange(0, 1, 1), new OneLineRange(2, 1, 1));\n\n\t\tconst lineMatch5 = new Match(fileMatch3, ['foobar'], new OneLineRange(0, 1, 1), new OneLineRange(2, 1, 1));\n\n\t\t/***\n\t\t * Structure would take the following form:\n\t\t *\n\t\t *\tfolderMatch1 (voo)\n\t\t *\t\t> fileMatch1 (/foo.a)\n\t\t *\t\t\t>> lineMatch1\n\t\t *\t\t\t>> lineMatch2\n\t\t *\tfolderMatch2 (with)\n\t\t *\t\t> fileMatch2 (/path.c)\n\t\t *\t\t\t>> lineMatch4\n\t\t *\t\t\t>> lineMatch5\n\t\t *\t\t> fileMatch3 (/path/bar.b)\n\t\t *\t\t\t>> lineMatch3\n\t\t *\n\t\t */\n\n\t\t// for these, refer to diagram above\n\t\tassert(searchComparer(fileMatch1, fileMatch3) < 0);\n\t\tassert(searchComparer(fileMatch2, fileMatch3) < 0);\n\t\tassert(searchComparer(folderMatch2, fileMatch2) < 0);\n\t\tassert(searchComparer(lineMatch4, lineMatch5) < 0);\n\t\tassert(searchComparer(lineMatch1, lineMatch3) < 0);\n\t\tassert(searchComparer(lineMatch2, folderMatch2) < 0);\n\n\t\t// travel up hierarchy and order of folders take precedence. \"voo < with\" in indices\n\t\tassert(searchComparer(fileMatch1, fileMatch3, SearchSortOrder.FileNames) < 0);\n\t\t// bar.b < path.c\n\t\tassert(searchComparer(fileMatch3, fileMatch2, SearchSortOrder.FileNames) < 0);\n\t\t// lineMatch4's parent is fileMatch2, \"bar.b < path.c\"\n\t\tassert(searchComparer(fileMatch3, lineMatch4, SearchSortOrder.FileNames) < 0);\n\n\t\t// bar.b < path.c\n\t\tassert(searchComparer(fileMatch3, fileMatch2, SearchSortOrder.Type) < 0);\n\t\t// lineMatch4's parent is fileMatch2, \"bar.b < path.c\"\n\t\tassert(searchComparer(fileMatch3, lineMatch4, SearchSortOrder.Type) < 0);\n\t});\n\n\tfunction aFileMatch(path: string, parentFolder?: FolderMatch, ...lineMatches: ITextSearchMatch[]): FileMatch {\n\t\tconst rawMatch: IFileMatch = {\n\t\t\tresource: URI.file('/' + path),\n\t\t\tresults: lineMatches\n\t\t};\n\t\treturn instantiation.createInstance(FileMatch, {\n\t\t\tpattern: ''\n\t\t}, undefined, undefined, parentFolder ?? aFolderMatch('', 0), rawMatch, null, '');\n\t}\n\n\tfunction aFolderMatch(path: string, index: number, parent?: SearchResult): FolderMatch {\n\t\tconst searchModel = instantiation.createInstance(SearchModel);\n\t\treturn instantiation.createInstance(FolderMatch, createFileUriFromPathFromRoot(path), path, index, {\n\t\t\ttype: QueryType.Text, folderQueries: [{ folder: createFileUriFromPathFromRoot() }], contentPattern: {\n\t\t\t\tpattern: ''\n\t\t\t}\n\t\t}, parent ?? aSearchResult().folderMatches()[0], searchModel.searchResult, null);\n\t}\n\n\tfunction aSearchResult(): SearchResult {\n\t\tconst searchModel = instantiation.createInstance(SearchModel);\n\t\tsearchModel.searchResult.query = {\n\t\t\ttype: QueryType.Text, folderQueries: [{ folder: createFileUriFromPathFromRoot() }], contentPattern: {\n\t\t\t\tpattern: ''\n\t\t\t}\n\t\t};\n\t\treturn searchModel.searchResult;\n\t}\n\n\tfunction stubModelService(instantiationService: TestInstantiationService): IModelService {\n\t\tinstantiationService.stub(IThemeService, new TestThemeService());\n\n\t\tconst config = new TestConfigurationService();\n\t\tconfig.setUserConfiguration('search', { searchOnType: true });\n\t\tinstantiationService.stub(IConfigurationService, config);\n\n\t\treturn instantiationService.createInstance(ModelService);\n\t}\n\n\tfunction stubNotebookEditorService(instantiationService: TestInstantiationService): INotebookEditorService {\n\t\tinstantiationService.stub(IEditorGroupsService, new TestEditorGroupsService());\n\t\tinstantiationService.stub(IContextKeyService, new MockContextKeyService());\n\t\tinstantiationService.stub(IEditorService, new TestEditorService());\n\t\treturn instantiationService.createInstance(NotebookEditorWidgetService);\n\t}\n});\n"]}