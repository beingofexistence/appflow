{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/search/test/browser/searchActions.test.ts"],"names":[],"mappings":"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","file":"searchActions.test.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { Keybinding } from 'vs/base/common/keybindings';\nimport { OS } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { TestInstantiationService } from 'vs/platform/instantiation/test/common/instantiationServiceMock';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { USLayoutResolvedKeybinding } from 'vs/platform/keybinding/common/usLayoutResolvedKeybinding';\nimport { IFileMatch, QueryType } from 'vs/workbench/services/search/common/search';\nimport { getElementToFocusAfterRemoved, getLastNodeFromSameType } from 'vs/workbench/contrib/search/browser/searchActionsRemoveReplace';\nimport { FileMatch, FileMatchOrMatch, FolderMatch, Match, SearchModel } from 'vs/workbench/contrib/search/browser/searchModel';\nimport { MockObjectTree } from 'vs/workbench/contrib/search/test/browser/mockSearchTree';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { INotebookEditorService } from 'vs/workbench/contrib/notebook/browser/services/notebookEditorService';\nimport { createFileUriFromPathFromRoot, stubModelService, stubNotebookEditorService } from 'vs/workbench/contrib/search/test/browser/searchTestCommon';\n\nsuite('Search Actions', () => {\n\n\tlet instantiationService: TestInstantiationService;\n\tlet counter: number;\n\n\tsetup(() => {\n\t\tinstantiationService = new TestInstantiationService();\n\t\tinstantiationService.stub(IModelService, stubModelService(instantiationService));\n\t\tinstantiationService.stub(INotebookEditorService, stubNotebookEditorService(instantiationService));\n\t\tinstantiationService.stub(IKeybindingService, {});\n\t\tinstantiationService.stub(ILabelService, { getUriBasenameLabel: (uri: URI) => '' });\n\t\tinstantiationService.stub(IKeybindingService, 'resolveKeybinding', (keybinding: Keybinding) => USLayoutResolvedKeybinding.resolveKeybinding(keybinding, OS));\n\t\tinstantiationService.stub(IKeybindingService, 'lookupKeybinding', (id: string) => null);\n\t\tinstantiationService.stub(IKeybindingService, 'lookupKeybinding', (id: string) => null);\n\t\tcounter = 0;\n\t});\n\n\tteardown(() => {\n\t\tinstantiationService.dispose();\n\t});\n\n\ttest('get next element to focus after removing a match when it has next sibling file', function () {\n\t\tconst fileMatch1 = aFileMatch();\n\t\tconst fileMatch2 = aFileMatch();\n\t\tconst data = [fileMatch1, aMatch(fileMatch1), aMatch(fileMatch1), fileMatch2, aMatch(fileMatch2), aMatch(fileMatch2)];\n\t\tconst tree = aTree(data);\n\t\tconst target = data[2];\n\n\t\tconst actual = getElementToFocusAfterRemoved(tree, target, [target]);\n\t\tassert.strictEqual(data[4], actual);\n\t});\n\n\ttest('get next element to focus after removing a match when it is the only match', function () {\n\t\tconst fileMatch1 = aFileMatch();\n\t\tconst data = [fileMatch1, aMatch(fileMatch1)];\n\t\tconst tree = aTree(data);\n\t\tconst target = data[1];\n\n\t\tconst actual = getElementToFocusAfterRemoved(tree, target, [target]);\n\t\tassert.strictEqual(undefined, actual);\n\t});\n\n\ttest('get next element to focus after removing a file match when it has next sibling', function () {\n\t\tconst fileMatch1 = aFileMatch();\n\t\tconst fileMatch2 = aFileMatch();\n\t\tconst fileMatch3 = aFileMatch();\n\t\tconst data = [fileMatch1, aMatch(fileMatch1), fileMatch2, aMatch(fileMatch2), fileMatch3, aMatch(fileMatch3)];\n\t\tconst tree = aTree(data);\n\t\tconst target = data[2];\n\n\t\tconst actual = getElementToFocusAfterRemoved(tree, target, []);\n\t\tassert.strictEqual(data[4], actual);\n\t});\n\n\ttest('Find last FileMatch in Tree', function () {\n\t\tconst fileMatch1 = aFileMatch();\n\t\tconst fileMatch2 = aFileMatch();\n\t\tconst fileMatch3 = aFileMatch();\n\t\tconst data = [fileMatch1, aMatch(fileMatch1), fileMatch2, aMatch(fileMatch2), fileMatch3, aMatch(fileMatch3)];\n\t\tconst tree = aTree(data);\n\n\t\tconst actual = getLastNodeFromSameType(tree, fileMatch1);\n\t\tassert.strictEqual(fileMatch3, actual);\n\t});\n\n\ttest('Find last Match in Tree', function () {\n\t\tconst fileMatch1 = aFileMatch();\n\t\tconst fileMatch2 = aFileMatch();\n\t\tconst fileMatch3 = aFileMatch();\n\t\tconst data = [fileMatch1, aMatch(fileMatch1), fileMatch2, aMatch(fileMatch2), fileMatch3, aMatch(fileMatch3)];\n\t\tconst tree = aTree(data);\n\n\t\tconst actual = getLastNodeFromSameType(tree, aMatch(fileMatch1));\n\t\tassert.strictEqual(data[5], actual);\n\t});\n\n\ttest('get next element to focus after removing a file match when it is only match', function () {\n\t\tconst fileMatch1 = aFileMatch();\n\t\tconst data = [fileMatch1, aMatch(fileMatch1)];\n\t\tconst tree = aTree(data);\n\t\tconst target = data[0];\n\t\t// const testObject: ReplaceAction = instantiationService.createInstance(ReplaceAction, tree, target, null);\n\n\t\tconst actual = getElementToFocusAfterRemoved(tree, target, []);\n\t\tassert.strictEqual(undefined, actual);\n\t});\n\n\tfunction aFileMatch(): FileMatch {\n\t\tconst rawMatch: IFileMatch = {\n\t\t\tresource: URI.file('somepath' + ++counter),\n\t\t\tresults: []\n\t\t};\n\n\t\tconst searchModel = instantiationService.createInstance(SearchModel);\n\t\tconst folderMatch = instantiationService.createInstance(FolderMatch, URI.file('somepath'), '', 0, {\n\t\t\ttype: QueryType.Text, folderQueries: [{ folder: createFileUriFromPathFromRoot() }], contentPattern: {\n\t\t\t\tpattern: ''\n\t\t\t}\n\t\t}, searchModel.searchResult, searchModel.searchResult, null);\n\t\treturn instantiationService.createInstance(FileMatch, {\n\t\t\tpattern: ''\n\t\t}, undefined, undefined, folderMatch, rawMatch, null, '');\n\t}\n\n\tfunction aMatch(fileMatch: FileMatch): Match {\n\t\tconst line = ++counter;\n\t\tconst match = new Match(\n\t\t\tfileMatch,\n\t\t\t['some match'],\n\t\t\t{\n\t\t\t\tstartLineNumber: 0,\n\t\t\t\tstartColumn: 0,\n\t\t\t\tendLineNumber: 0,\n\t\t\t\tendColumn: 2\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartLineNumber: line,\n\t\t\t\tstartColumn: 0,\n\t\t\t\tendLineNumber: line,\n\t\t\t\tendColumn: 2\n\t\t\t}\n\t\t);\n\t\tfileMatch.add(match);\n\t\treturn match;\n\t}\n\n\tfunction aTree(elements: FileMatchOrMatch[]): any {\n\t\treturn new MockObjectTree(elements);\n\t}\n});\n"]}