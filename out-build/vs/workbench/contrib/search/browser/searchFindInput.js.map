{"version":3,"sources":["vs/workbench/contrib/search/browser/searchFindInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAYhG,MAAa,IAAgB,SAAQ,gCAAG;QAKvC,YACC,SAA6B,EAC7B,mBAAyC,EACzC,OAA0B,EAC1B,iBAAsB,EACb,kBAAuB,EACvB,oBAAyB,EACzB,OAAa,EACtB,sBAA+B;YAE/B,KAAK,CAAC,SAAS,EAAE,mBAAmB,EAAE,OAAO,EAAE,iBAAiB,CAAC,CAAC;YALzD,uBAAkB,GAAlB,kBAAkB,CAAK;YACvB,yBAAoB,GAApB,oBAAoB,CAAK;YACzB,YAAO,GAAP,OAAO,CAAM;YAVf,MAAC,GAAyB,KAAK,CAAC;YAChC,OAAE,GAAkB,KAAK,CAAC;YAajC,IAAI,CAAC,CAAC,GAAa,IAAI,CAAC,CAAC,CACxB,IAAI,gCAAI,CACP,OAAO,EACP,kBAAkB,EAClB,oBAAoB,EACpB,OAAO,EACP,GAAG,CAAC,QAAQ,CAAC,CAAqC,EAAE,IAAuB,CAAC,CAC5E,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,EAAc,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAW,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAM,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAW,KAAK,CAAC;YACxJ,IAAI,CAAC,CAAC,CAAQ,WAAW,CAAC,IAAI,CAAC,CAAC,CAAW,SAAS,CAAC,CAAC;YACtD,IAAI,CAAC,CAAC,CAAW,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YAEjE,IAAI,CAAC,aAAa,GAAG,sBAAsB,CAAC;QAC7C,CAAC;QAED,IAAI,aAAa,CAAC,IAAa;YAC9B,IAAI,CAAC,CAAC,CAAW,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;YAC9D,IAAI,CAAC,EAAE,GAAS,IAAI,CAAC;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;QACrB,CAAC;QAEQ,UAAU,CAAC,OAAgB;YACnC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAC1B,IAAI,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAiB,CAAC,IAAI,CAAC,EAAE,CAAO,EAAE;gBACxD,IAAI,CAAC,CAAC,EAAM,MAAM,EAAE,CAAC;aACrB;iBAAM;gBACN,IAAI,CAAC,CAAC,EAAM,OAAO,EAAE,CAAC;aACtB;QACF,CAAC;QAED,YAAY;YACX,mDAAmD;YACnD,IAAI,CAAC,CAAC;gBACL,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW;oBACzB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa;oBAC3B,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS;oBACvB,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YAE1B,uGAAuG;YAEvG,IAAI,CAAC,CAAC,CAAW,WAAW,CAAC,IAAI,CAAC,CAAC,CAAc,CAAC;QACnD,CAAC;KACD;IA1DD,oBA0DC","file":"searchFindInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IContextViewProvider } from 'vs/base/browser/ui/contextview/contextview';\nimport { IFindInputOptions } from 'vs/base/browser/ui/findinput/findInput';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { ContextScopedFindInput } from 'vs/platform/history/browser/contextScopedHistoryWidget';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { NotebookFindFilters } from 'vs/workbench/contrib/notebook/browser/contrib/find/findFilters';\nimport { NotebookFindInputFilterButton } from 'vs/workbench/contrib/notebook/browser/contrib/find/notebookFindReplaceWidget';\nimport * as nls from 'vs/nls';\n\nexport class SearchFindInput extends ContextScopedFindInput {\n\tprivate _findFilter: NotebookFindInputFilterButton;\n\tprivate _filterChecked: boolean = false;\n\tprivate _visible: boolean = false;\n\n\tconstructor(\n\t\tcontainer: HTMLElement | null,\n\t\tcontextViewProvider: IContextViewProvider,\n\t\toptions: IFindInputOptions,\n\t\tcontextKeyService: IContextKeyService,\n\t\treadonly contextMenuService: IContextMenuService,\n\t\treadonly instantiationService: IInstantiationService,\n\t\treadonly filters: NotebookFindFilters,\n\t\tfilterStartVisiblitity: boolean\n\t) {\n\t\tsuper(container, contextViewProvider, options, contextKeyService);\n\t\tthis._findFilter = this._register(\n\t\t\tnew NotebookFindInputFilterButton(\n\t\t\t\tfilters,\n\t\t\t\tcontextMenuService,\n\t\t\t\tinstantiationService,\n\t\t\t\toptions,\n\t\t\t\tnls.localize('searchFindInputNotebookFilter.label', \"Notebook Find Filters\")\n\t\t\t));\n\t\tthis.inputBox.paddingRight = (this.caseSensitive?.width() ?? 0) + (this.wholeWords?.width() ?? 0) + (this.regex?.width() ?? 0) + this._findFilter.width;\n\t\tthis.controls.appendChild(this._findFilter.container);\n\t\tthis._findFilter.container.classList.add('monaco-custom-toggle');\n\n\t\tthis.filterVisible = filterStartVisiblitity;\n\t}\n\n\tset filterVisible(show: boolean) {\n\t\tthis._findFilter.container.style.display = show ? '' : 'none';\n\t\tthis._visible = show;\n\t\tthis.updateStyles();\n\t}\n\n\toverride setEnabled(enabled: boolean) {\n\t\tsuper.setEnabled(enabled);\n\t\tif (enabled && (!this._filterChecked || !this._visible)) {\n\t\t\tthis.regex?.enable();\n\t\t} else {\n\t\t\tthis.regex?.disable();\n\t\t}\n\t}\n\n\tupdateStyles() {\n\t\t// filter is checked if it's in a non-default state\n\t\tthis._filterChecked =\n\t\t\t!this.filters.markupInput ||\n\t\t\t!this.filters.markupPreview ||\n\t\t\t!this.filters.codeInput ||\n\t\t\t!this.filters.codeOutput;\n\n\t\t// TODO: find a way to express that searching notebook output and markdown preview don't support regex.\n\n\t\tthis._findFilter.applyStyles(this._filterChecked);\n\t}\n}\n"]}