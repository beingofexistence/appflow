{"version":3,"sources":["vs/workbench/contrib/search/browser/search.contribution.ts"],"names":[],"mappings":"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","file":"search.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport * as platform from 'vs/base/common/platform';\nimport { AbstractGotoLineQuickAccessProvider } from 'vs/editor/contrib/quickAccess/browser/gotoLineQuickAccess';\nimport * as nls from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { Extensions as QuickAccessExtensions, IQuickAccessRegistry } from 'vs/platform/quickinput/common/quickAccess';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { defaultQuickAccessContextKeyValue } from 'vs/workbench/browser/quickaccess';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { Extensions as ViewExtensions, IViewContainersRegistry, IViewDescriptor, IViewDescriptorService, IViewsRegistry, ViewContainerLocation } from 'vs/workbench/common/views';\nimport { GotoSymbolQuickAccessProvider } from 'vs/workbench/contrib/codeEditor/browser/quickaccess/gotoSymbolQuickAccess';\nimport { AnythingQuickAccessProvider } from 'vs/workbench/contrib/search/browser/anythingQuickAccess';\nimport { registerContributions as replaceContributions } from 'vs/workbench/contrib/search/browser/replaceContributions';\nimport { registerContributions as notebookSearchContributions } from 'vs/workbench/contrib/search/browser/notebookSearchContributions';\nimport { searchViewIcon } from 'vs/workbench/contrib/search/browser/searchIcons';\nimport { SearchView } from 'vs/workbench/contrib/search/browser/searchView';\nimport { registerContributions as searchWidgetContributions } from 'vs/workbench/contrib/search/browser/searchWidget';\nimport { SymbolsQuickAccessProvider } from 'vs/workbench/contrib/search/browser/symbolsQuickAccess';\nimport { ISearchHistoryService, SearchHistoryService } from 'vs/workbench/contrib/search/common/searchHistoryService';\nimport { ISearchViewModelWorkbenchService, SearchViewModelWorkbenchService } from 'vs/workbench/contrib/search/browser/searchModel';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { SearchSortOrder, SEARCH_EXCLUDE_CONFIG, VIEWLET_ID, ViewMode, VIEW_ID } from 'vs/workbench/services/search/common/search';\nimport { Extensions, IConfigurationMigrationRegistry } from 'vs/workbench/common/configuration';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { assertType } from 'vs/base/common/types';\nimport { getWorkspaceSymbols, IWorkspaceSymbol } from 'vs/workbench/contrib/search/common/search';\nimport * as Constants from 'vs/workbench/contrib/search/common/constants';\n\nimport 'vs/workbench/contrib/search/browser/searchActionsCopy';\nimport 'vs/workbench/contrib/search/browser/searchActionsFind';\nimport 'vs/workbench/contrib/search/browser/searchActionsNav';\nimport 'vs/workbench/contrib/search/browser/searchActionsRemoveReplace';\nimport 'vs/workbench/contrib/search/browser/searchActionsSymbol';\nimport 'vs/workbench/contrib/search/browser/searchActionsTopBar';\nimport 'vs/workbench/contrib/search/browser/searchActionsTextQuickAccess';\nimport { TEXT_SEARCH_QUICK_ACCESS_PREFIX, TextSearchQuickAccess } from 'vs/workbench/contrib/search/browser/quickTextSearch/textSearchQuickAccess';\n\nregisterSingleton(ISearchViewModelWorkbenchService, SearchViewModelWorkbenchService, InstantiationType.Delayed);\nregisterSingleton(ISearchHistoryService, SearchHistoryService, InstantiationType.Delayed);\n\nreplaceContributions();\nnotebookSearchContributions();\nsearchWidgetContributions();\n\nconst SEARCH_MODE_CONFIG = 'search.mode';\n\nconst viewContainer = Registry.as<IViewContainersRegistry>(ViewExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: VIEWLET_ID,\n\ttitle: { value: nls.localize('name', \"Search\"), original: 'Search' },\n\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [VIEWLET_ID, { mergeViewWithContainerWhenSingleView: true }]),\n\thideIfEmpty: true,\n\ticon: searchViewIcon,\n\torder: 1,\n}, ViewContainerLocation.Sidebar, { doNotRegisterOpenCommand: true });\n\nconst viewDescriptor: IViewDescriptor = {\n\tid: VIEW_ID,\n\tcontainerIcon: searchViewIcon,\n\tname: nls.localize('search', \"Search\"),\n\tctorDescriptor: new SyncDescriptor(SearchView),\n\tcanToggleVisibility: false,\n\tcanMoveView: true,\n\topenCommandActionDescriptor: {\n\t\tid: viewContainer.id,\n\t\tmnemonicTitle: nls.localize({ key: 'miViewSearch', comment: ['&& denotes a mnemonic'] }, \"&&Search\"),\n\t\tkeybindings: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyF,\n\t\t\t// Yes, this is weird. See #116188, #115556, #115511, and now #124146, for examples of what can go wrong here.\n\t\t\twhen: ContextKeyExpr.regex('neverMatch', /doesNotMatch/)\n\t\t},\n\t\torder: 1\n\t}\n};\n\n// Register search default location to sidebar\nRegistry.as<IViewsRegistry>(ViewExtensions.ViewsRegistry).registerViews([viewDescriptor], viewContainer);\n\n// Migrate search location setting to new model\nclass RegisterSearchViewContribution implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService\n\t) {\n\t\tconst data = configurationService.inspect('search.location');\n\t\tif (data.value === 'panel') {\n\t\t\tviewDescriptorService.moveViewToLocation(viewDescriptor, ViewContainerLocation.Panel);\n\t\t}\n\t\tRegistry.as<IConfigurationMigrationRegistry>(Extensions.ConfigurationMigration)\n\t\t\t.registerConfigurationMigrations([{ key: 'search.location', migrateFn: (value: any) => ({ value: undefined }) }]);\n\t}\n}\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(RegisterSearchViewContribution, LifecyclePhase.Starting);\n\n// Register Quick Access Handler\nconst quickAccessRegistry = Registry.as<IQuickAccessRegistry>(QuickAccessExtensions.Quickaccess);\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: AnythingQuickAccessProvider,\n\tprefix: AnythingQuickAccessProvider.PREFIX,\n\tplaceholder: nls.localize('anythingQuickAccessPlaceholder', \"Search files by name (append {0} to go to line or {1} to go to symbol)\", AbstractGotoLineQuickAccessProvider.PREFIX, GotoSymbolQuickAccessProvider.PREFIX),\n\tcontextKey: defaultQuickAccessContextKeyValue,\n\thelpEntries: [{\n\t\tdescription: nls.localize('anythingQuickAccess', \"Go to File\"),\n\t\tcommandId: 'workbench.action.quickOpen',\n\t\tcommandCenterOrder: 10\n\t}]\n});\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: SymbolsQuickAccessProvider,\n\tprefix: SymbolsQuickAccessProvider.PREFIX,\n\tplaceholder: nls.localize('symbolsQuickAccessPlaceholder', \"Type the name of a symbol to open.\"),\n\tcontextKey: 'inWorkspaceSymbolsPicker',\n\thelpEntries: [{ description: nls.localize('symbolsQuickAccess', \"Go to Symbol in Workspace\"), commandId: Constants.ShowAllSymbolsActionId }]\n});\n\nquickAccessRegistry.registerQuickAccessProvider({\n\tctor: TextSearchQuickAccess,\n\tprefix: TEXT_SEARCH_QUICK_ACCESS_PREFIX,\n\tcontextKey: 'inTextSearchPicker',\n\tplaceholder: nls.localize('textSearchPickerPlaceholder', \"Search for text in your workspace files (experimental).\"),\n\thelpEntries: [\n\t\t{\n\t\t\tdescription: nls.localize('textSearchPickerHelp', \"Search for Text (Experimental)\"),\n\t\t\tcommandId: Constants.QuickTextSearchActionId,\n\t\t\tcommandCenterOrder: 65,\n\t\t}\n\t]\n});\n\n// Configuration\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\tid: 'search',\n\torder: 13,\n\ttitle: nls.localize('searchConfigurationTitle', \"Search\"),\n\ttype: 'object',\n\tproperties: {\n\t\t[SEARCH_EXCLUDE_CONFIG]: {\n\t\t\ttype: 'object',\n\t\t\tmarkdownDescription: nls.localize('exclude', \"Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders in fulltext searches and quick open. Inherits all glob patterns from the `#files.exclude#` setting.\"),\n\t\t\tdefault: { '**/node_modules': true, '**/bower_components': true, '**/*.code-search': true },\n\t\t\tadditionalProperties: {\n\t\t\t\tanyOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdescription: nls.localize('exclude.boolean', \"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\twhen: {\n\t\t\t\t\t\t\t\ttype: 'string', // expression ({ \"**/*.js\": { \"when\": \"$(basename).js\" } })\n\t\t\t\t\t\t\t\tpattern: '\\\\w*\\\\$\\\\(basename\\\\)\\\\w*',\n\t\t\t\t\t\t\t\tdefault: '$(basename).ext',\n\t\t\t\t\t\t\t\tmarkdownDescription: nls.localize({ key: 'exclude.when', comment: ['\\\\$(basename) should not be translated'] }, 'Additional check on the siblings of a matching file. Use \\\\$(basename) as variable for the matching file name.')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tscope: ConfigurationScope.RESOURCE\n\t\t},\n\t\t[SEARCH_MODE_CONFIG]: {\n\t\t\ttype: 'string',\n\t\t\tenum: ['view', 'reuseEditor', 'newEditor'],\n\t\t\tdefault: 'view',\n\t\t\tmarkdownDescription: nls.localize('search.mode', \"Controls where new `Search: Find in Files` and `Find in Folder` operations occur: either in the search view, or in a search editor.\"),\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('search.mode.view', \"Search in the search view, either in the panel or side bars.\"),\n\t\t\t\tnls.localize('search.mode.reuseEditor', \"Search in an existing search editor if present, otherwise in a new search editor.\"),\n\t\t\t\tnls.localize('search.mode.newEditor', \"Search in a new search editor.\"),\n\t\t\t]\n\t\t},\n\t\t'search.useRipgrep': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('useRipgrep', \"This setting is deprecated and now falls back on \\\"search.usePCRE2\\\".\"),\n\t\t\tdeprecationMessage: nls.localize('useRipgrepDeprecated', \"Deprecated. Consider \\\"search.usePCRE2\\\" for advanced regex feature support.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'search.maintainFileSearchCache': {\n\t\t\ttype: 'boolean',\n\t\t\tdeprecationMessage: nls.localize('maintainFileSearchCacheDeprecated', \"The search cache is kept in the extension host which never shuts down, so this setting is no longer needed.\"),\n\t\t\tdescription: nls.localize('search.maintainFileSearchCache', \"When enabled, the searchService process will be kept alive instead of being shut down after an hour of inactivity. This will keep the file search cache in memory.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'search.useIgnoreFiles': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: nls.localize('useIgnoreFiles', \"Controls whether to use `.gitignore` and `.ignore` files when searching for files.\"),\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.RESOURCE\n\t\t},\n\t\t'search.useGlobalIgnoreFiles': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: nls.localize('useGlobalIgnoreFiles', \"Controls whether to use your global gitignore file (e.g., from `$HOME/.config/git/ignore`) when searching for files. Requires `#search.useIgnoreFiles#` to be enabled.\"),\n\t\t\tdefault: false,\n\t\t\tscope: ConfigurationScope.RESOURCE\n\t\t},\n\t\t'search.useParentIgnoreFiles': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: nls.localize('useParentIgnoreFiles', \"Controls whether to use `.gitignore` and `.ignore` files in parent directories when searching for files. Requires `#search.useIgnoreFiles#` to be enabled.\"),\n\t\t\tdefault: false,\n\t\t\tscope: ConfigurationScope.RESOURCE\n\t\t},\n\t\t'search.quickOpen.includeSymbols': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.quickOpen.includeSymbols', \"Whether to include results from a global symbol search in the file results for Quick Open.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'search.quickOpen.includeHistory': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.quickOpen.includeHistory', \"Whether to include results from recently opened files in the file results for Quick Open.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'search.quickOpen.history.filterSortOrder': {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['default', 'recency'],\n\t\t\t'default': 'default',\n\t\t\t'enumDescriptions': [\n\t\t\t\tnls.localize('filterSortOrder.default', 'History entries are sorted by relevance based on the filter value used. More relevant entries appear first.'),\n\t\t\t\tnls.localize('filterSortOrder.recency', 'History entries are sorted by recency. More recently opened entries appear first.')\n\t\t\t],\n\t\t\t'description': nls.localize('filterSortOrder', \"Controls sorting order of editor history in quick open when filtering.\")\n\t\t},\n\t\t'search.followSymlinks': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.followSymlinks', \"Controls whether to follow symlinks while searching.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'search.smartCase': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.smartCase', \"Search case-insensitively if the pattern is all lowercase, otherwise, search case-sensitively.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'search.globalFindClipboard': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.globalFindClipboard', \"Controls whether the search view should read or modify the shared find clipboard on macOS.\"),\n\t\t\tincluded: platform.isMacintosh\n\t\t},\n\t\t'search.location': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['sidebar', 'panel'],\n\t\t\tdefault: 'sidebar',\n\t\t\tdescription: nls.localize('search.location', \"Controls whether the search will be shown as a view in the sidebar or as a panel in the panel area for more horizontal space.\"),\n\t\t\tdeprecationMessage: nls.localize('search.location.deprecationMessage', \"This setting is deprecated. You can drag the search icon to a new location instead.\")\n\t\t},\n\t\t'search.maxResults': {\n\t\t\ttype: ['number', 'null'],\n\t\t\tdefault: 20000,\n\t\t\tmarkdownDescription: nls.localize('search.maxResults', \"Controls the maximum number of search results, this can be set to `null` (empty) to return unlimited results.\")\n\t\t},\n\t\t'search.collapseResults': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['auto', 'alwaysCollapse', 'alwaysExpand'],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('search.collapseResults.auto', \"Files with less than 10 results are expanded. Others are collapsed.\"),\n\t\t\t\t'',\n\t\t\t\t''\n\t\t\t],\n\t\t\tdefault: 'alwaysExpand',\n\t\t\tdescription: nls.localize('search.collapseAllResults', \"Controls whether the search results will be collapsed or expanded.\"),\n\t\t},\n\t\t'search.useReplacePreview': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tdescription: nls.localize('search.useReplacePreview', \"Controls whether to open Replace Preview when selecting or replacing a match.\"),\n\t\t},\n\t\t'search.showLineNumbers': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.showLineNumbers', \"Controls whether to show line numbers for search results.\"),\n\t\t},\n\t\t'search.usePCRE2': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.usePCRE2', \"Whether to use the PCRE2 regex engine in text search. This enables using some advanced regex features like lookahead and backreferences. However, not all PCRE2 features are supported - only features that are also supported by JavaScript.\"),\n\t\t\tdeprecationMessage: nls.localize('usePCRE2Deprecated', \"Deprecated. PCRE2 will be used automatically when using regex features that are only supported by PCRE2.\"),\n\t\t},\n\t\t'search.actionsPosition': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['auto', 'right'],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('search.actionsPositionAuto', \"Position the actionbar to the right when the search view is narrow, and immediately after the content when the search view is wide.\"),\n\t\t\t\tnls.localize('search.actionsPositionRight', \"Always position the actionbar to the right.\"),\n\t\t\t],\n\t\t\tdefault: 'right',\n\t\t\tdescription: nls.localize('search.actionsPosition', \"Controls the positioning of the actionbar on rows in the search view.\")\n\t\t},\n\t\t'search.searchOnType': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tdescription: nls.localize('search.searchOnType', \"Search all files as you type.\")\n\t\t},\n\t\t'search.seedWithNearestWord': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.seedWithNearestWord', \"Enable seeding search from the word nearest the cursor when the active editor has no selection.\")\n\t\t},\n\t\t'search.seedOnFocus': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: nls.localize('search.seedOnFocus', \"Update the search query to the editor's selected text when focusing the search view. This happens either on click or when triggering the `workbench.views.search.focus` command.\")\n\t\t},\n\t\t'search.searchOnTypeDebouncePeriod': {\n\t\t\ttype: 'number',\n\t\t\tdefault: 300,\n\t\t\tmarkdownDescription: nls.localize('search.searchOnTypeDebouncePeriod', \"When {0} is enabled, controls the timeout in milliseconds between a character being typed and the search starting. Has no effect when {0} is disabled.\", '`#search.searchOnType#`')\n\t\t},\n\t\t'search.searchEditor.doubleClickBehaviour': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['selectWord', 'goToLocation', 'openLocationToSide'],\n\t\t\tdefault: 'goToLocation',\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('search.searchEditor.doubleClickBehaviour.selectWord', \"Double-clicking selects the word under the cursor.\"),\n\t\t\t\tnls.localize('search.searchEditor.doubleClickBehaviour.goToLocation', \"Double-clicking opens the result in the active editor group.\"),\n\t\t\t\tnls.localize('search.searchEditor.doubleClickBehaviour.openLocationToSide', \"Double-clicking opens the result in the editor group to the side, creating one if it does not yet exist.\"),\n\t\t\t],\n\t\t\tmarkdownDescription: nls.localize('search.searchEditor.doubleClickBehaviour', \"Configure effect of double-clicking a result in a search editor.\")\n\t\t},\n\t\t'search.searchEditor.reusePriorSearchConfiguration': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tmarkdownDescription: nls.localize({ key: 'search.searchEditor.reusePriorSearchConfiguration', comment: ['\"Search Editor\" is a type of editor that can display search results. \"includes, excludes, and flags\" refers to the \"files to include\" and \"files to exclude\" input boxes, and the flags that control whether a query is case-sensitive or a regex.'] }, \"When enabled, new Search Editors will reuse the includes, excludes, and flags of the previously opened Search Editor.\")\n\t\t},\n\t\t'search.searchEditor.defaultNumberOfContextLines': {\n\t\t\ttype: ['number', 'null'],\n\t\t\tdefault: 1,\n\t\t\tmarkdownDescription: nls.localize('search.searchEditor.defaultNumberOfContextLines', \"The default number of surrounding context lines to use when creating new Search Editors. If using `#search.searchEditor.reusePriorSearchConfiguration#`, this can be set to `null` (empty) to use the prior Search Editor's configuration.\")\n\t\t},\n\t\t'search.sortOrder': {\n\t\t\t'type': 'string',\n\t\t\t'enum': [SearchSortOrder.Default, SearchSortOrder.FileNames, SearchSortOrder.Type, SearchSortOrder.Modified, SearchSortOrder.CountDescending, SearchSortOrder.CountAscending],\n\t\t\t'default': SearchSortOrder.Default,\n\t\t\t'enumDescriptions': [\n\t\t\t\tnls.localize('searchSortOrder.default', \"Results are sorted by folder and file names, in alphabetical order.\"),\n\t\t\t\tnls.localize('searchSortOrder.filesOnly', \"Results are sorted by file names ignoring folder order, in alphabetical order.\"),\n\t\t\t\tnls.localize('searchSortOrder.type', \"Results are sorted by file extensions, in alphabetical order.\"),\n\t\t\t\tnls.localize('searchSortOrder.modified', \"Results are sorted by file last modified date, in descending order.\"),\n\t\t\t\tnls.localize('searchSortOrder.countDescending', \"Results are sorted by count per file, in descending order.\"),\n\t\t\t\tnls.localize('searchSortOrder.countAscending', \"Results are sorted by count per file, in ascending order.\")\n\t\t\t],\n\t\t\t'description': nls.localize('search.sortOrder', \"Controls sorting order of search results.\")\n\t\t},\n\t\t'search.decorations.colors': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.decorations.colors', \"Controls whether search file decorations should use colors.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'search.decorations.badges': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.decorations.badges', \"Controls whether search file decorations should use badges.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'search.defaultViewMode': {\n\t\t\t'type': 'string',\n\t\t\t'enum': [ViewMode.Tree, ViewMode.List],\n\t\t\t'default': ViewMode.List,\n\t\t\t'enumDescriptions': [\n\t\t\t\tnls.localize('scm.defaultViewMode.tree', \"Shows search results as a tree.\"),\n\t\t\t\tnls.localize('scm.defaultViewMode.list', \"Shows search results as a list.\")\n\t\t\t],\n\t\t\t'description': nls.localize('search.defaultViewMode', \"Controls the default search result view mode.\")\n\t\t},\n\t\t'search.experimental.closedNotebookRichContentResults': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.experimental.closedNotebookResults', \"Show notebook editor rich content results for closed notebooks. Please refresh your search results after changing this setting.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'search.experimental.quickAccess.preserveInput': {\n\t\t\t'type': 'boolean',\n\t\t\t'description': nls.localize('search.experimental.quickAccess.preserveInput', \"Controls whether the last typed input to Quick Search should be restored when opening it the next time.\"),\n\t\t\t'default': false\n\t\t},\n\t}\n});\n\nCommandsRegistry.registerCommand('_executeWorkspaceSymbolProvider', async function (accessor, ...args): Promise<IWorkspaceSymbol[]> {\n\tconst [query] = args;\n\tassertType(typeof query === 'string');\n\tconst result = await getWorkspaceSymbols(query);\n\treturn result.map(item => item.symbol);\n});\n"]}