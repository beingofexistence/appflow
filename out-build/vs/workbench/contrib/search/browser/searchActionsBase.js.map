{"version":3,"sources":["vs/workbench/contrib/search/browser/searchActionsBase.ts"],"names":[],"mappings":"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","file":"searchActionsBase.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { ResolvedKeybinding } from 'vs/base/common/keybindings';\nimport * as nls from 'vs/nls';\nimport { WorkbenchCompressibleObjectTree } from 'vs/platform/list/browser/listService';\nimport { IViewsService } from 'vs/workbench/common/views';\nimport { SearchView } from 'vs/workbench/contrib/search/browser/searchView';\nimport { FileMatch, FolderMatch, Match, RenderableMatch, searchComparer } from 'vs/workbench/contrib/search/browser/searchModel';\nimport { ISearchConfigurationProperties, VIEW_ID } from 'vs/workbench/services/search/common/search';\n\nexport const category = { value: nls.localize('search', \"Search\"), original: 'Search' };\n\nexport function isSearchViewFocused(viewsService: IViewsService): boolean {\n\tconst searchView = getSearchView(viewsService);\n\tconst activeElement = document.activeElement;\n\treturn !!(searchView && activeElement && DOM.isAncestor(activeElement, searchView.getContainer()));\n}\n\nexport function appendKeyBindingLabel(label: string, inputKeyBinding: ResolvedKeybinding | undefined): string {\n\treturn doAppendKeyBindingLabel(label, inputKeyBinding);\n}\n\nexport function getSearchView(viewsService: IViewsService): SearchView | undefined {\n\treturn viewsService.getActiveViewWithId(VIEW_ID) as SearchView;\n}\n\nexport function getElementsToOperateOn(viewer: WorkbenchCompressibleObjectTree<RenderableMatch, void>, currElement: RenderableMatch | undefined, sortConfig: ISearchConfigurationProperties): RenderableMatch[] {\n\tlet elements: RenderableMatch[] = viewer.getSelection().filter((x): x is RenderableMatch => x !== null).sort((a, b) => searchComparer(a, b, sortConfig.sortOrder));\n\n\t// if selection doesn't include multiple elements, just return current focus element.\n\tif (currElement && !(elements.length > 1 && elements.includes(currElement))) {\n\t\telements = [currElement];\n\t}\n\n\treturn elements;\n}\n\n/**\n * @param elements elements that are going to be removed\n * @param focusElement element that is focused\n * @returns whether we need to re-focus on a remove\n */\nexport function shouldRefocus(elements: RenderableMatch[], focusElement: RenderableMatch | undefined) {\n\tif (!focusElement) {\n\t\treturn false;\n\t}\n\treturn !focusElement || elements.includes(focusElement) || hasDownstreamMatch(elements, focusElement);\n}\n\nfunction hasDownstreamMatch(elements: RenderableMatch[], focusElement: RenderableMatch) {\n\tfor (const elem of elements) {\n\t\tif ((elem instanceof FileMatch && focusElement instanceof Match && elem.matches().includes(focusElement)) ||\n\t\t\t(elem instanceof FolderMatch && (\n\t\t\t\t(focusElement instanceof FileMatch && elem.getDownstreamFileMatch(focusElement.resource)) ||\n\t\t\t\t(focusElement instanceof Match && elem.getDownstreamFileMatch(focusElement.parent().resource))\n\t\t\t))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\n}\n\nexport function openSearchView(viewsService: IViewsService, focus?: boolean): Promise<SearchView | undefined> {\n\treturn viewsService.openView(VIEW_ID, focus).then(view => (view as SearchView ?? undefined));\n}\n\nfunction doAppendKeyBindingLabel(label: string, keyBinding: ResolvedKeybinding | undefined): string {\n\treturn keyBinding ? label + ' (' + keyBinding.getLabel() + ')' : label;\n}\n\n"]}