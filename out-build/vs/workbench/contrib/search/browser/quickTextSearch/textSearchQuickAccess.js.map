{"version":3,"sources":["vs/workbench/contrib/search/browser/quickTextSearch/textSearchQuickAccess.ts"],"names":[],"mappings":";;;;;;;;;;;;;IA+Ba,QAAA,IAAI,GAA8B,IAAI,CAAC;IAEpD,MAAM,kCAAkC,GAA6B;QACpE,OAAO,EAAE,mBAAmB;QAC5B,oBAAoB,EAAE,KAAK;QAC3B,wBAAwB,EAAE,KAAK;QAC/B,eAAe,EAAE,KAAK;QACtB,cAAc,EAAE,IAAI;KACpB,CAAC;IAEF,MAAM,eAAe,GAAG,EAAE,CAAC;IAC3B,MAAM,oBAAoB,GAAG,EAAE,CAAC;IAEzB,IAAM,IAAI,GAAV,MAAM,IAAsB,SAAQ,wBAAiD;QAInF,CAAC,CAA2B,YAAoB;YACvD,OAAO;gBACN,GAAG,kCAAkC;gBACrC,GAAI;oBACH,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAqB,cAAc,CAAC,YAAG,CAA8B;oBAC/F,UAAU,EAAE,IAAI,CAAC,CAAC,CAAa,UAAU,IAAI,SAAS;oBACtD,WAAW,EAAE,IAAI,CAAC,CAAC,CAAa,SAAS;iBACzC;gBAED,cAAc,EAAE;oBACf,UAAU,EAAE,CAAC;oBACb,YAAY;iBACZ;aACD,CAAC;QACH,CAAC;QAED,YACyC,CAA0B,EACvB,CAAoB,EAC9B,CAAmB,EACpB,CAAkB,EAClB,CAAkB,EACV,CAA0B;YAElE,KAAK,CAAC,YAAI,EAA6B,EAAE,qBAAqB,EAAE,IAAI,EAAE,CAAC,CAAC;YAPhC,MAAC,GAAD,CAAC,CAAyB;YACvB,MAAC,GAAD,CAAC,CAAmB;YAC9B,MAAC,GAAD,CAAC,CAAkB;YACpB,MAAC,GAAD,CAAC,CAAiB;YAClB,MAAC,GAAD,CAAC,CAAiB;YACV,MAAC,GAAD,CAAC,CAAyB;YAIlE,IAAI,CAAC,CAAC,GAAc,IAAI,CAAC,CAAC,CAAqB,cAAc,CAAC,kBAAG,CAAU,CAAC;YAC5E,IAAI,CAAC,CAAC,GAAa,IAAI,CAAC,CAAC,CAAqB,cAAc,CAAC,kBAAI,CAAQ,CAAC;QAC3E,CAAC;QAEQ,OAAO;YACf,IAAI,CAAC,CAAC,CAAW,OAAO,EAAE,CAAC;YAC3B,KAAK,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;QAEQ,OAAO,CAAC,MAA0C,EAAE,KAAwB,EAAE,UAA2C;YACjI,MAAM,WAAW,GAAG,IAAI,eAAG,EAAc,CAAC;YAC1C,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;YAC1D,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAW,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/F,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAW,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjG,OAAO,WAAW,CAAC;QACpB,CAAC;QAED,IAAY,CAAC;YACZ,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAqB,QAAQ,EAAiC,CAAC,SAAS,EAAE,MAAM,CAAC;YAC5G,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAqB,QAAQ,EAAiC,CAAC,MAAM,CAAC;YAEjG,OAAO;gBACN,gBAAgB,EAAE,CAAC,YAAY,EAAE,0BAA0B,IAAI,CAAC,YAAY,EAAE,aAAa;gBAC3F,aAAa,EAAE,YAAY,CAAC,YAAY,CAAC,WAAW,CAAC,aAAa;gBAClE,UAAU,EAAE,YAAY,CAAC,UAAU;gBACnC,SAAS,EAAE,YAAY,CAAC,SAAS;aACjC,CAAC;QACH,CAAC;QAED,IAAI,kBAAkB;YACrB,IAAI,IAAI,CAAC,CAAC,CAAa,aAAa,EAAE;gBACrC,OAAO,2CAA6B,CAAC,IAAI,CAAC;aAC1C;YAED,OAAO,SAAS,CAAC;QAClB,CAAC;QAEO,CAAC,CAAQ,cAAsB,EAAE,KAAwB;YAIhE,IAAI,cAAc,KAAK,EAAE,EAAE;gBAC1B,OAAO,SAAS,CAAC;aACjB;YAED,MAAM,eAAe,GAAuB,IAAI,CAAC,CAAC,CAAe,YAAY,EAAE,CAAC,OAAO,CAAC;YACxF,MAAM,OAAO,GAAiB;gBAC7B,OAAO,EAAE,cAAc;aACvB,CAAC;YACF,MAAM,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,qJAAqJ;YAE3M,MAAM,KAAK,GAAe,IAAI,CAAC,CAAC,CAAY,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAA2B,YAAY,CAAC,CAAC,CAAC;YAErJ,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAW,MAAM,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YAEhE,MAAM,eAAe,GAAG,KAAK,IAAI,EAAE;gBAClC,MAAM,MAAM,CAAC,YAAY,CAAC;gBAC1B,MAAM,cAAc,GAAG,IAAI,SAAG,CAAS,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChF,OAAO,IAAI,CAAC,CAAC,CAAW,YAAY,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7F,CAAC,CAAC;YACF,OAAO;gBACN,WAAW,EAAE,IAAI,CAAC,CAAC,CAAW,YAAY,CAAC,OAAO,EAAE;gBACpD,YAAY,EAAE,eAAe,EAAE;aAC/B,CAAC;QACH,CAAC;QAEO,CAAC,CAAmB,KAAW,EAAS,WAA4B;YAC3E,wGAAwG;YACxG,8HAA8H;YAC9H,IAAI,CAAC,CAAC,CAAa,QAAQ,CAAC,YAAG,EAAM,KAAK,CAAC,CAAC;YAC5C,MAAM,OAAO,GAA2B,IAAI,CAAC,CAAC,CAAa,mBAAmB,CAAC,YAAG,CAAa,CAAO;YACtG,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAElC,MAAM,MAAM,GAAiE,OAAO,EAAE,UAAU,EAAE,CAAC;YAEnG,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,IAAA,iBAAG,GAAwB,CAAC,CAAC;YAC5D,MAAM,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,EAAE,IAAA,iBAAG,GAAwB,CAAC,CAAC;YAChE,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC5B,CAAC;QAEO,CAAC,CAAoB,OAAoB,EAAE,KAAa;YAC/D,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,kBAAI,CAAW,CAAC;YAEvC,MAAM,KAAK,GAAG,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACzE,MAAM,KAAK,GAAwD,EAAE,CAAC;YAEtE,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,OAAO,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE;gBAChE,IAAI,SAAS,KAAK,KAAK,EAAE;oBAExB,KAAK,CAAC,IAAI,CAAC;wBACV,IAAI,EAAE,WAAW;qBACjB,CAAC,CAAC;oBAEH,KAAK,CAAC,IAAI,CAAC;wBACV,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAyB,EAAE,IAAgB,CAAC;wBAC5D,SAAS,EAAE,qBAAS,CAAC,WAAW,CAAC,kBAAI,CAAc;wBACnD,MAAM,EAAE,KAAK,IAAI,EAAE;4BAClB,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,CAAC,EAAY,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC5D,CAAC;qBACD,CAAC,CAAC;oBACH,MAAM;iBACN;gBAED,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;gBAEnC,MAAM,KAAK,GAAG,IAAA,eAAG,EAAiB,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACtD,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAa,WAAW,CAAC,IAAA,eAAG,EAAK,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAGpG,KAAK,CAAC,IAAI,CAAC;oBACV,KAAK;oBACL,IAAI,EAAE,WAAW;oBACjB,OAAO,EAAE,WAAW;oBACpB,OAAO,EAAE,CAAC;4BACT,SAAS,EAAE,qBAAS,CAAC,WAAW,CAAC,kBAAI,CAAiB;4BACtD,OAAO,EAAE,IAAA,cAAQ,EAAC,CAAuB,EAAE,IAAW,CAAC;yBACvD,CAAC;iBACF,CAAC,CAAC;gBAEH,MAAM,OAAO,GAAY,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC;gBACnD,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE;oBACnE,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;oBAEpC,IAAI,UAAU,KAAK,oBAAoB,EAAE;wBACxC,KAAK,CAAC,IAAI,CAAC;4BACV,KAAK,EAAE,IAAA,cAAQ,EAAC,CAAiB,EAAE,IAAM,CAAC;4BAC1C,SAAS,EAAE,qBAAS,CAAC,WAAW,CAAC,kBAAI,CAAc;4BACnD,MAAM,EAAE,KAAK,IAAI,EAAE;gCAClB,IAAI,CAAC,CAAC,CAAmB,IAAI,CAAC,CAAC,EAAY,OAAO,CAAC,CAAC;4BACrD,CAAC;yBACD,CAAC,CAAC;wBACH,MAAM;qBACN;oBAED,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;oBAClC,MAAM,WAAW,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;oBAC/F,MAAM,KAAK,GAAa,CAAC;4BACxB,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM;4BAC5B,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM;yBAClD,CAAC,CAAC;oBACH,KAAK,CAAC,IAAI,CAAC;wBACV,KAAK,EAAE,GAAG,WAAW,EAAE;wBACvB,UAAU,EAAE;4BACX,KAAK,EAAE,KAAK;yBACZ;wBACD,SAAS,EAAE,qBAAqB,OAAO,CAAC,KAAK,EAAE,CAAC,eAAe,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC,WAAW,MAAM,WAAW,EAAE;wBACjH,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE;4BAChC,MAAM,IAAI,CAAC,CAAC,CAAY,SAAS,EAAE;gCAClC,OAAO;gCACP,SAAS,EAAE,IAAA,iBAAI,EAAwB,OAAO,EAAE,IAAI,CAAC,CAAC,CAAW;gCACjE,aAAa,EAAE,KAAK,CAAC,YAAY;gCACjC,WAAW,EAAE,KAAK,CAAC,YAAY;gCAC/B,kBAAkB,EAAE,OAAO,YAAY,kBAAI,CAAY,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS;6BAC7H,CAAC,CAAC;wBACJ,CAAC;qBACD,CAAC,CAAC;iBACH;aACD;YACD,OAAO,KAAK,CAAC;QACd,CAAC;QAEO,KAAK,CAAC,CAAC,CAAY,SAAe,EAAO,OAA2N;YAC3Q,MAAM,aAAa,GAAG;gBACrB,aAAa,EAAE,OAAO,CAAC,aAAa;gBACpC,MAAM,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,IAAI,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAa,gBAAgB;gBAC9F,SAAS,EAAE,OAAO,CAAC,SAAS;aAC5B,CAAC;YAEF,8JAA8J;YAC9J,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAa,gBAAgB,IAAI,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,mBAAG,CAAQ,CAAC,CAAC,mBAAG,CAAU;YAEzK,MAAM,IAAI,CAAC,CAAC,CAAc,UAAU,CAAC;gBACpC,QAAQ,EAAE,SAAS,CAAC,QAAQ;gBAC5B,OAAO,EAAE,aAAa;aACtB,EAAE,WAAW,CAAC,CAAC;QACjB,CAAC;QAES,CAAC,CAAS,cAAsB,EAAE,WAAgB,EAAc,KAAwB;YAEjG,IAAI,cAAc,KAAK,EAAE,EAAE;gBAC1B,IAAI,CAAC,CAAC,CAAW,YAAY,CAAC,KAAK,EAAE,CAAC;gBACtC,OAAO,EAAE,CAAC;aACV;YACD,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAQ,cAAc,EAAE,KAAK,CAAC,CAAC;YAExD,IAAI,CAAC,UAAU,EAAE;gBAChB,OAAO,IAAI,CAAC;aACZ;YACD,MAAM,OAAO,GAAG,UAAU,CAAC,WAAW,CAAC;YACvC,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAoB,OAAO,EAAE,eAAe,CAAC,CAAC;YACvE,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1B,IAAI,CAAC,CAAC,CAAW,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aACrD;YAED,IAAI,OAAO,CAAC,MAAM,IAAI,eAAe,EAAE;gBACtC,OAAO,UAAU,CAAC;aAClB;YAED,OAAO;gBACN,KAAK,EAAE,UAAU;gBACjB,eAAe,EAAE,UAAU,CAAC,YAAY;qBACtC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAoB,YAAY,EAAE,eAAe,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;qBAC/F,IAAI,CAAC,KAAK,CAAC,EAAE;oBACb,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrB,IAAI,CAAC,CAAC,CAAW,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;qBACrD;oBACD,OAAO,KAAK,CAAC;gBACd,CAAC,CAAC;aACH,CAAC;QAEH,CAAC;KACD,CAAA;IAjPY,oBAAI;mBAAJ,IAAI;QAqBd,WAAA,mBAAG,CAAA;QACH,WAAA,eAAG,CAAA;QACH,WAAA,mBAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,WAAG,CAAA;QACH,WAAA,mBAAG,CAAA;OA1BO,IAAI,CAiPhB","file":"textSearchQuickAccess.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IMatch } from 'vs/base/common/filters';\nimport { DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { ResourceSet } from 'vs/base/common/map';\nimport { basenameOrAuthority, dirname } from 'vs/base/common/resources';\nimport { ThemeIcon } from 'vs/base/common/themables';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITextEditorSelection } from 'vs/platform/editor/common/editor';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { WorkbenchCompressibleObjectTree, getSelectionKeyboardEvent } from 'vs/platform/list/browser/listService';\nimport { FastAndSlowPicks, IPickerQuickAccessItem, PickerQuickAccessProvider, Picks } from 'vs/platform/quickinput/browser/pickerQuickAccess';\nimport { DefaultQuickAccessFilterValue, IQuickAccessProviderRunOptions } from 'vs/platform/quickinput/common/quickAccess';\nimport { IKeyMods, IQuickPick, IQuickPickItem, IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { IWorkspaceContextService, IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IWorkbenchEditorConfiguration } from 'vs/workbench/common/editor';\nimport { IViewsService } from 'vs/workbench/common/views';\nimport { searchDetailsIcon, searchOpenInFileIcon } from 'vs/workbench/contrib/search/browser/searchIcons';\nimport { FileMatch, Match, MatchInNotebook, RenderableMatch, SearchModel, searchComparer } from 'vs/workbench/contrib/search/browser/searchModel';\nimport { SearchView, getEditorSelectionFromMatch } from 'vs/workbench/contrib/search/browser/searchView';\nimport { IWorkbenchSearchConfiguration, getOutOfWorkspaceEditorResources } from 'vs/workbench/contrib/search/common/search';\nimport { ACTIVE_GROUP, IEditorService, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { ITextQueryBuilderOptions, QueryBuilder } from 'vs/workbench/services/search/common/queryBuilder';\nimport { IPatternInfo, ITextQuery, VIEW_ID } from 'vs/workbench/services/search/common/search';\n\nexport const TEXT_SEARCH_QUICK_ACCESS_PREFIX = '% ';\n\nconst DEFAULT_TEXT_QUERY_BUILDER_OPTIONS: ITextQueryBuilderOptions = {\n\t_reason: 'quickAccessSearch',\n\tdisregardIgnoreFiles: false,\n\tdisregardExcludeSettings: false,\n\tonlyOpenEditors: false,\n\texpandPatterns: true\n};\n\nconst MAX_FILES_SHOWN = 30;\nconst MAX_RESULTS_PER_FILE = 10;\n\nexport class TextSearchQuickAccess extends PickerQuickAccessProvider<IPickerQuickAccessItem> {\n\tprivate queryBuilder: QueryBuilder;\n\tprivate searchModel: SearchModel;\n\n\tprivate _getTextQueryBuilderOptions(charsPerLine: number): ITextQueryBuilderOptions {\n\t\treturn {\n\t\t\t...DEFAULT_TEXT_QUERY_BUILDER_OPTIONS,\n\t\t\t... {\n\t\t\t\textraFileResources: this._instantiationService.invokeFunction(getOutOfWorkspaceEditorResources),\n\t\t\t\tmaxResults: this.configuration.maxResults ?? undefined,\n\t\t\t\tisSmartCase: this.configuration.smartCase,\n\t\t\t},\n\n\t\t\tpreviewOptions: {\n\t\t\t\tmatchLines: 1,\n\t\t\t\tcharsPerLine\n\t\t\t}\n\t\t};\n\t}\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IViewsService private readonly _viewsService: IViewsService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper(TEXT_SEARCH_QUICK_ACCESS_PREFIX, { canAcceptInBackground: true });\n\n\t\tthis.queryBuilder = this._instantiationService.createInstance(QueryBuilder);\n\t\tthis.searchModel = this._instantiationService.createInstance(SearchModel);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.searchModel.dispose();\n\t\tsuper.dispose();\n\t}\n\n\toverride provide(picker: IQuickPick<IPickerQuickAccessItem>, token: CancellationToken, runOptions?: IQuickAccessProviderRunOptions): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tdisposables.add(super.provide(picker, token, runOptions));\n\t\tdisposables.add(picker.onDidHide(() => this.searchModel.searchResult.toggleHighlights(false)));\n\t\tdisposables.add(picker.onDidAccept(() => this.searchModel.searchResult.toggleHighlights(false)));\n\t\treturn disposables;\n\t}\n\n\tprivate get configuration() {\n\t\tconst editorConfig = this._configurationService.getValue<IWorkbenchEditorConfiguration>().workbench?.editor;\n\t\tconst searchConfig = this._configurationService.getValue<IWorkbenchSearchConfiguration>().search;\n\n\t\treturn {\n\t\t\topenEditorPinned: !editorConfig?.enablePreviewFromQuickOpen || !editorConfig?.enablePreview,\n\t\t\tpreserveInput: searchConfig.experimental.quickAccess.preserveInput,\n\t\t\tmaxResults: searchConfig.maxResults,\n\t\t\tsmartCase: searchConfig.smartCase,\n\t\t};\n\t}\n\n\tget defaultFilterValue(): DefaultQuickAccessFilterValue | undefined {\n\t\tif (this.configuration.preserveInput) {\n\t\t\treturn DefaultQuickAccessFilterValue.LAST;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate doSearch(contentPattern: string, token: CancellationToken): {\n\t\tsyncResults: FileMatch[];\n\t\tasyncResults: Promise<FileMatch[]>;\n\t} | undefined {\n\t\tif (contentPattern === '') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst folderResources: IWorkspaceFolder[] = this._contextService.getWorkspace().folders;\n\t\tconst content: IPatternInfo = {\n\t\t\tpattern: contentPattern,\n\t\t};\n\t\tconst charsPerLine = content.isRegExp ? 10000 : 1000; // from https://github.com/microsoft/vscode/blob/e7ad5651ac26fa00a40aa1e4010e81b92f655569/src/vs/workbench/contrib/search/browser/searchView.ts#L1508\n\n\t\tconst query: ITextQuery = this.queryBuilder.text(content, folderResources.map(folder => folder.uri), this._getTextQueryBuilderOptions(charsPerLine));\n\n\t\tconst result = this.searchModel.search(query, undefined, token);\n\n\t\tconst getAsyncResults = async () => {\n\t\t\tawait result.asyncResults;\n\t\t\tconst syncResultURIs = new ResourceSet(result.syncResults.map(e => e.resource));\n\t\t\treturn this.searchModel.searchResult.matches().filter(e => !syncResultURIs.has(e.resource));\n\t\t};\n\t\treturn {\n\t\t\tsyncResults: this.searchModel.searchResult.matches(),\n\t\t\tasyncResults: getAsyncResults()\n\t\t};\n\t}\n\n\tprivate moveToSearchViewlet(model: SearchModel, currentElem: RenderableMatch) {\n\t\t// this function takes this._searchModel.searchResult and moves it to the search viewlet's search model.\n\t\t// then, this._searchModel will construct a new (empty) SearchResult, and the search viewlet's search result will be disposed.\n\t\tthis._viewsService.openView(VIEW_ID, false);\n\t\tconst viewlet: SearchView | undefined = this._viewsService.getActiveViewWithId(VIEW_ID) as SearchView;\n\t\tviewlet.importSearchResult(model);\n\n\t\tconst viewer: WorkbenchCompressibleObjectTree<RenderableMatch> | undefined = viewlet?.getControl();\n\n\t\tviewer.setFocus([currentElem], getSelectionKeyboardEvent());\n\t\tviewer.setSelection([currentElem], getSelectionKeyboardEvent());\n\t\tviewer.reveal(currentElem);\n\t}\n\n\tprivate _getPicksFromMatches(matches: FileMatch[], limit: number): (IQuickPickSeparator | IPickerQuickAccessItem)[] {\n\t\tmatches = matches.sort(searchComparer);\n\n\t\tconst files = matches.length > limit ? matches.slice(0, limit) : matches;\n\t\tconst picks: Array<IPickerQuickAccessItem | IQuickPickSeparator> = [];\n\n\t\tfor (let fileIndex = 0; fileIndex < matches.length; fileIndex++) {\n\t\t\tif (fileIndex === limit) {\n\n\t\t\t\tpicks.push({\n\t\t\t\t\ttype: 'separator',\n\t\t\t\t});\n\n\t\t\t\tpicks.push({\n\t\t\t\t\tlabel: localize('QuickSearchSeeMoreFiles', \"See More Files\"),\n\t\t\t\t\ticonClass: ThemeIcon.asClassName(searchDetailsIcon),\n\t\t\t\t\taccept: async () => {\n\t\t\t\t\t\tthis.moveToSearchViewlet(this.searchModel, matches[limit]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst fileMatch = files[fileIndex];\n\n\t\t\tconst label = basenameOrAuthority(fileMatch.resource);\n\t\t\tconst description = this._labelService.getUriLabel(dirname(fileMatch.resource), { relative: true });\n\n\n\t\t\tpicks.push({\n\t\t\t\tlabel,\n\t\t\t\ttype: 'separator',\n\t\t\t\ttooltip: description,\n\t\t\t\tbuttons: [{\n\t\t\t\t\ticonClass: ThemeIcon.asClassName(searchOpenInFileIcon),\n\t\t\t\t\ttooltip: localize('QuickSearchOpenInFile', \"Open File\")\n\t\t\t\t}],\n\t\t\t});\n\n\t\t\tconst results: Match[] = fileMatch.matches() ?? [];\n\t\t\tfor (let matchIndex = 0; matchIndex < results.length; matchIndex++) {\n\t\t\t\tconst element = results[matchIndex];\n\n\t\t\t\tif (matchIndex === MAX_RESULTS_PER_FILE) {\n\t\t\t\t\tpicks.push({\n\t\t\t\t\t\tlabel: localize('QuickSearchMore', \"More\"),\n\t\t\t\t\t\ticonClass: ThemeIcon.asClassName(searchDetailsIcon),\n\t\t\t\t\t\taccept: async () => {\n\t\t\t\t\t\t\tthis.moveToSearchViewlet(this.searchModel, element);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst preview = element.preview();\n\t\t\t\tconst previewText = (preview.before + preview.inside + preview.after).trim().substring(0, 999);\n\t\t\t\tconst match: IMatch[] = [{\n\t\t\t\t\tstart: preview.before.length,\n\t\t\t\t\tend: preview.before.length + preview.inside.length\n\t\t\t\t}];\n\t\t\t\tpicks.push({\n\t\t\t\t\tlabel: `${previewText}`,\n\t\t\t\t\thighlights: {\n\t\t\t\t\t\tlabel: match\n\t\t\t\t\t},\n\t\t\t\t\tariaLabel: `Match at location ${element.range().startLineNumber}:${element.range().startColumn} - ${previewText}`,\n\t\t\t\t\taccept: async (keyMods, event) => {\n\t\t\t\t\t\tawait this.handleAccept(fileMatch, {\n\t\t\t\t\t\t\tkeyMods,\n\t\t\t\t\t\t\tselection: getEditorSelectionFromMatch(element, this.searchModel),\n\t\t\t\t\t\t\tpreserveFocus: event.inBackground,\n\t\t\t\t\t\t\tforcePinned: event.inBackground,\n\t\t\t\t\t\t\tindexedCellOptions: element instanceof MatchInNotebook ? { index: element.cellIndex, selection: element.range() } : undefined\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn picks;\n\t}\n\n\tprivate async handleAccept(fileMatch: FileMatch, options: { keyMods?: IKeyMods; selection?: ITextEditorSelection; preserveFocus?: boolean; range?: IRange; forcePinned?: boolean; forceOpenSideBySide?: boolean; indexedCellOptions?: { index: number; selection?: Range } }): Promise<void> {\n\t\tconst editorOptions = {\n\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\tpinned: options.keyMods?.ctrlCmd || options.forcePinned || this.configuration.openEditorPinned,\n\t\t\tselection: options.selection\n\t\t};\n\n\t\t// from https://github.com/microsoft/vscode/blob/f40dabca07a1622b2a0ae3ee741cfc94ab964bef/src/vs/workbench/contrib/search/browser/anythingQuickAccess.ts#L1037\n\t\tconst targetGroup = options.keyMods?.alt || (this.configuration.openEditorPinned && options.keyMods?.ctrlCmd) || options.forceOpenSideBySide ? SIDE_GROUP : ACTIVE_GROUP;\n\n\t\tawait this._editorService.openEditor({\n\t\t\tresource: fileMatch.resource,\n\t\t\toptions: editorOptions\n\t\t}, targetGroup);\n\t}\n\n\tprotected _getPicks(contentPattern: string, disposables: DisposableStore, token: CancellationToken): Picks<IQuickPickItem> | Promise<Picks<IQuickPickItem> | FastAndSlowPicks<IQuickPickItem>> | FastAndSlowPicks<IQuickPickItem> | null {\n\n\t\tif (contentPattern === '') {\n\t\t\tthis.searchModel.searchResult.clear();\n\t\t\treturn [];\n\t\t}\n\t\tconst allMatches = this.doSearch(contentPattern, token);\n\n\t\tif (!allMatches) {\n\t\t\treturn null;\n\t\t}\n\t\tconst matches = allMatches.syncResults;\n\t\tconst syncResult = this._getPicksFromMatches(matches, MAX_FILES_SHOWN);\n\t\tif (syncResult.length > 0) {\n\t\t\tthis.searchModel.searchResult.toggleHighlights(true);\n\t\t}\n\n\t\tif (matches.length >= MAX_FILES_SHOWN) {\n\t\t\treturn syncResult;\n\t\t}\n\n\t\treturn {\n\t\t\tpicks: syncResult,\n\t\t\tadditionalPicks: allMatches.asyncResults\n\t\t\t\t.then(asyncResults => this._getPicksFromMatches(asyncResults, MAX_FILES_SHOWN - matches.length))\n\t\t\t\t.then(picks => {\n\t\t\t\t\tif (picks.length > 0) {\n\t\t\t\t\t\tthis.searchModel.searchResult.toggleHighlights(true);\n\t\t\t\t\t}\n\t\t\t\t\treturn picks;\n\t\t\t\t})\n\t\t};\n\n\t}\n}\n"]}