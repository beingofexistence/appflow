{"version":3,"sources":["vs/workbench/contrib/search/browser/searchActionsFind.ts"],"names":[],"mappings":"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","file":"searchActionsFind.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { dirname } from 'vs/base/common/resources';\nimport * as nls from 'vs/nls';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IListService, WorkbenchCompressibleObjectTree } from 'vs/platform/list/browser/listService';\nimport { IViewsService, ViewContainerLocation } from 'vs/workbench/common/views';\nimport * as Constants from 'vs/workbench/contrib/search/common/constants';\nimport * as SearchEditorConstants from 'vs/workbench/contrib/searchEditor/browser/constants';\nimport { FileMatch, FolderMatchWithResource, Match, RenderableMatch } from 'vs/workbench/contrib/search/browser/searchModel';\nimport { OpenSearchEditorArgs } from 'vs/workbench/contrib/searchEditor/browser/searchEditor.contribution';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ISearchConfiguration, ISearchConfigurationProperties } from 'vs/workbench/services/search/common/search';\nimport { URI } from 'vs/base/common/uri';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { Action2, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { resolveResourcesForSearchIncludes } from 'vs/workbench/services/search/common/queryBuilder';\nimport { getMultiSelectedResources, IExplorerService } from 'vs/workbench/contrib/files/browser/files';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ExplorerFolderContext, ExplorerRootContext, FilesExplorerFocusCondition, VIEWLET_ID as VIEWLET_ID_FILES } from 'vs/workbench/contrib/files/common/files';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { ExplorerViewPaneContainer } from 'vs/workbench/contrib/files/browser/explorerViewlet';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { category, getElementsToOperateOn, getSearchView, openSearchView } from 'vs/workbench/contrib/search/browser/searchActionsBase';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { Schemas } from 'vs/base/common/network';\n\n\n//#region Interfaces\nexport interface IFindInFilesArgs {\n\tquery?: string;\n\treplace?: string;\n\tpreserveCase?: boolean;\n\ttriggerSearch?: boolean;\n\tfilesToInclude?: string;\n\tfilesToExclude?: string;\n\tisRegex?: boolean;\n\tisCaseSensitive?: boolean;\n\tmatchWholeWord?: boolean;\n\tuseExcludeSettingsAndIgnoreFiles?: boolean;\n\tonlyOpenEditors?: boolean;\n}\n//#endregion\n\nregisterAction2(class RestrictSearchToFolderAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.RestrictSearchToFolderId,\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('restrictResultsToFolder', \"Restrict Search to Folder\"),\n\t\t\t\toriginal: 'Restrict Search to Folder'\n\t\t\t},\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ResourceFolderFocusKey),\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\tgroup: 'search',\n\t\t\t\t\torder: 3,\n\t\t\t\t\twhen: ContextKeyExpr.and(Constants.ResourceFolderFocusKey)\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, folderMatch?: FolderMatchWithResource) {\n\t\tawait searchWithFolderCommand(accessor, false, true, undefined, folderMatch);\n\t}\n});\n\nregisterAction2(class ExcludeFolderFromSearchAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.ExcludeFolderFromSearchId,\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('excludeFolderFromSearch', \"Exclude Folder from Search\"),\n\t\t\t\toriginal: 'Exclude Folder from Search'\n\t\t\t},\n\t\t\tcategory,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\t\tgroup: 'search',\n\t\t\t\t\torder: 4,\n\t\t\t\t\twhen: ContextKeyExpr.and(Constants.ResourceFolderFocusKey)\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, folderMatch?: FolderMatchWithResource) {\n\t\tawait searchWithFolderCommand(accessor, false, false, undefined, folderMatch);\n\t}\n});\n\nregisterAction2(class RevealInSideBarForSearchResultsAction extends Action2 {\n\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.RevealInSideBarForSearchResults,\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('revealInSideBar', \"Reveal in Explorer View\"),\n\t\t\t\toriginal: 'Reveal in Explorer View'\n\t\t\t},\n\t\t\tcategory,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.SearchContext,\n\t\t\t\twhen: ContextKeyExpr.and(Constants.FileFocusKey, Constants.HasSearchResults),\n\t\t\t\tgroup: 'search_3',\n\t\t\t\torder: 1\n\t\t\t}]\n\t\t});\n\n\t}\n\n\toverride async run(accessor: ServicesAccessor, args: any): Promise<any> {\n\t\tconst paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tconst explorerService = accessor.get(IExplorerService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (!searchView) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet fileMatch: FileMatch;\n\t\tif (!(args instanceof FileMatch)) {\n\t\t\targs = searchView.getControl().getFocus()[0];\n\t\t}\n\t\tif (args instanceof FileMatch) {\n\t\t\tfileMatch = args;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tpaneCompositeService.openPaneComposite(VIEWLET_ID_FILES, ViewContainerLocation.Sidebar, false).then((viewlet) => {\n\t\t\tif (!viewlet) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst explorerViewContainer = viewlet.getViewPaneContainer() as ExplorerViewPaneContainer;\n\t\t\tconst uri = fileMatch.resource;\n\t\t\tif (uri && contextService.isInsideWorkspace(uri)) {\n\t\t\t\tconst explorerView = explorerViewContainer.getExplorerView();\n\t\t\t\texplorerView.setExpanded(true);\n\t\t\t\texplorerService.select(uri, true).then(() => explorerView.focus(), onUnexpectedError);\n\t\t\t}\n\t\t});\n\t}\n});\n\n// Find in Files by default is the same as View: Show Search, but can be configured to open a search editor instead with the `search.mode` binding\nregisterAction2(class FindInFilesAction extends Action2 {\n\n\tconstructor(\n\t) {\n\t\tsuper({\n\t\t\tid: Constants.FindInFilesActionId,\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('findInFiles', \"Find in Files\"),\n\t\t\t\tmnemonicTitle: nls.localize({ key: 'miFindInFiles', comment: ['&& denotes a mnemonic'] }, \"Find &&in Files\"),\n\t\t\t\toriginal: 'Find in Files'\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\tdescription: nls.localize('findInFiles.description', \"Open a workspace search\"),\n\t\t\t\targs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: nls.localize('findInFiles.args', \"A set of options for the search\"),\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tquery: { 'type': 'string' },\n\t\t\t\t\t\t\t\treplace: { 'type': 'string' },\n\t\t\t\t\t\t\t\tpreserveCase: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\ttriggerSearch: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\tfilesToInclude: { 'type': 'string' },\n\t\t\t\t\t\t\t\tfilesToExclude: { 'type': 'string' },\n\t\t\t\t\t\t\t\tisRegex: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\tisCaseSensitive: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\tmatchWholeWord: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\tuseExcludeSettingsAndIgnoreFiles: { 'type': 'boolean' },\n\t\t\t\t\t\t\t\tonlyOpenEditors: { 'type': 'boolean' },\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyF,\n\t\t\t},\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.MenubarEditMenu,\n\t\t\t\tgroup: '4_find_global',\n\t\t\t\torder: 1,\n\t\t\t}],\n\t\t\tf1: true\n\t\t});\n\n\t}\n\n\toverride async run(accessor: ServicesAccessor, args: IFindInFilesArgs = {}): Promise<any> {\n\t\tfindInFilesCommand(accessor, args);\n\t}\n});\n\nregisterAction2(class FindInFolderAction extends Action2 {\n\t// from explorer\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.FindInFolderId,\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('findInFolder', \"Find in Folder...\"),\n\t\t\t\toriginal: 'Find in Folder...'\n\t\t\t},\n\t\t\tcategory,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerFolderContext),\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KeyF,\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.ExplorerContext,\n\t\t\t\t\tgroup: '4_search',\n\t\t\t\t\torder: 10,\n\t\t\t\t\twhen: ContextKeyExpr.and(ExplorerFolderContext)\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, resource?: URI) {\n\t\tawait searchWithFolderCommand(accessor, true, true, resource);\n\t}\n});\n\nregisterAction2(class FindInWorkspaceAction extends Action2 {\n\t// from explorer\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: Constants.FindInWorkspaceId,\n\t\t\ttitle: {\n\t\t\t\tvalue: nls.localize('findInWorkspace', \"Find in Workspace...\"),\n\t\t\t\toriginal: 'Find in Workspace...'\n\t\t\t},\n\t\t\tcategory,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.ExplorerContext,\n\t\t\t\t\tgroup: '4_search',\n\t\t\t\t\torder: 10,\n\t\t\t\t\twhen: ContextKeyExpr.and(ExplorerRootContext, ExplorerFolderContext.toNegated())\n\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor) {\n\t\tconst searchConfig = accessor.get(IConfigurationService).getValue<ISearchConfiguration>().search;\n\t\tconst mode = searchConfig.mode;\n\n\t\tif (mode === 'view') {\n\t\t\tconst searchView = await openSearchView(accessor.get(IViewsService), true);\n\t\t\tsearchView?.searchInFolders();\n\t\t}\n\t\telse {\n\t\t\treturn accessor.get(ICommandService).executeCommand(SearchEditorConstants.OpenEditorCommandId, {\n\t\t\t\tlocation: mode === 'newEditor' ? 'new' : 'reuse',\n\t\t\t\tfilesToInclude: '',\n\t\t\t});\n\t\t}\n\t}\n});\n\n//#region Helpers\nasync function searchWithFolderCommand(accessor: ServicesAccessor, isFromExplorer: boolean, isIncludes: boolean, resource?: URI, folderMatch?: FolderMatchWithResource) {\n\tconst listService = accessor.get(IListService);\n\tconst fileService = accessor.get(IFileService);\n\tconst viewsService = accessor.get(IViewsService);\n\tconst contextService = accessor.get(IWorkspaceContextService);\n\tconst commandService = accessor.get(ICommandService);\n\tconst searchConfig = accessor.get(IConfigurationService).getValue<ISearchConfiguration>().search;\n\tconst mode = searchConfig.mode;\n\n\tlet resources: URI[];\n\n\tif (isFromExplorer) {\n\t\tresources = getMultiSelectedResources(resource, listService, accessor.get(IEditorService), accessor.get(IExplorerService));\n\t} else {\n\t\tconst searchView = getSearchView(accessor.get(IViewsService));\n\t\tif (!searchView) {\n\t\t\treturn;\n\t\t}\n\t\tresources = getMultiSelectedSearchResources(searchView.getControl(), folderMatch, searchConfig);\n\t}\n\n\tconst resolvedResources = fileService.resolveAll(resources.map(resource => ({ resource }))).then(results => {\n\t\tconst folders: URI[] = [];\n\t\tresults.forEach(result => {\n\t\t\tif (result.success && result.stat) {\n\t\t\t\tfolders.push(result.stat.isDirectory ? result.stat.resource : dirname(result.stat.resource));\n\t\t\t}\n\t\t});\n\t\treturn resolveResourcesForSearchIncludes(folders, contextService);\n\t});\n\n\tif (mode === 'view') {\n\t\tconst searchView = await openSearchView(viewsService, true);\n\t\tif (resources && resources.length && searchView) {\n\t\t\tif (isIncludes) {\n\t\t\t\tsearchView.searchInFolders(await resolvedResources);\n\t\t\t} else {\n\t\t\t\tsearchView.searchOutsideOfFolders(await resolvedResources);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t} else {\n\t\tif (isIncludes) {\n\t\t\treturn commandService.executeCommand(SearchEditorConstants.OpenEditorCommandId, {\n\t\t\t\tfilesToInclude: (await resolvedResources).join(', '),\n\t\t\t\tshowIncludesExcludes: true,\n\t\t\t\tlocation: mode === 'newEditor' ? 'new' : 'reuse',\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\treturn commandService.executeCommand(SearchEditorConstants.OpenEditorCommandId, {\n\t\t\t\tfilesToExclude: (await resolvedResources).join(', '),\n\t\t\t\tshowIncludesExcludes: true,\n\t\t\t\tlocation: mode === 'newEditor' ? 'new' : 'reuse',\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction getMultiSelectedSearchResources(viewer: WorkbenchCompressibleObjectTree<RenderableMatch, void>, currElement: RenderableMatch | undefined, sortConfig: ISearchConfigurationProperties): URI[] {\n\treturn getElementsToOperateOn(viewer, currElement, sortConfig)\n\t\t.map((renderableMatch) => ((renderableMatch instanceof Match) ? null : renderableMatch.resource))\n\t\t.filter((renderableMatch): renderableMatch is URI => (renderableMatch !== null));\n}\n\nexport async function findInFilesCommand(accessor: ServicesAccessor, _args: IFindInFilesArgs = {}) {\n\n\tconst searchConfig = accessor.get(IConfigurationService).getValue<ISearchConfiguration>().search;\n\tconst viewsService = accessor.get(IViewsService);\n\tconst commandService = accessor.get(ICommandService);\n\tconst args: IFindInFilesArgs = {};\n\tif (Object.keys(_args).length !== 0) {\n\t\t// resolve variables in the same way as in\n\t\t// https://github.com/microsoft/vscode/blob/8b76efe9d317d50cb5b57a7658e09ce6ebffaf36/src/vs/workbench/contrib/searchEditor/browser/searchEditorActions.ts#L152-L158\n\t\tconst configurationResolverService = accessor.get(IConfigurationResolverService);\n\t\tconst historyService = accessor.get(IHistoryService);\n\t\tconst workspaceContextService = accessor.get(IWorkspaceContextService);\n\t\tconst activeWorkspaceRootUri = historyService.getLastActiveWorkspaceRoot();\n\t\tconst filteredActiveWorkspaceRootUri = activeWorkspaceRootUri?.scheme === Schemas.file || activeWorkspaceRootUri?.scheme === Schemas.vscodeRemote ? activeWorkspaceRootUri : undefined;\n\t\tconst lastActiveWorkspaceRoot = filteredActiveWorkspaceRootUri ? workspaceContextService.getWorkspaceFolder(filteredActiveWorkspaceRootUri) ?? undefined : undefined;\n\n\t\tfor (const entry of Object.entries(_args)) {\n\t\t\tconst name = entry[0];\n\t\t\tconst value = entry[1];\n\t\t\tif (value !== undefined) {\n\t\t\t\t(args as any)[name as any] = (typeof value === 'string') ? await configurationResolverService.resolveAsync(lastActiveWorkspaceRoot, value) : value;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst mode = searchConfig.mode;\n\tif (mode === 'view') {\n\t\topenSearchView(viewsService, false).then(openedView => {\n\t\t\tif (openedView) {\n\t\t\t\tconst searchAndReplaceWidget = openedView.searchAndReplaceWidget;\n\t\t\t\tsearchAndReplaceWidget.toggleReplace(typeof args.replace === 'string');\n\t\t\t\tlet updatedText = false;\n\t\t\t\tif (typeof args.query !== 'string') {\n\t\t\t\t\tupdatedText = openedView.updateTextFromFindWidgetOrSelection({ allowUnselectedWord: typeof args.replace !== 'string' });\n\t\t\t\t}\n\t\t\t\topenedView.setSearchParameters(args);\n\n\t\t\t\topenedView.searchAndReplaceWidget.focus(undefined, updatedText, updatedText);\n\t\t\t}\n\t\t});\n\t} else {\n\t\tconst convertArgs = (args: IFindInFilesArgs): OpenSearchEditorArgs => ({\n\t\t\tlocation: mode === 'newEditor' ? 'new' : 'reuse',\n\t\t\tquery: args.query,\n\t\t\tfilesToInclude: args.filesToInclude,\n\t\t\tfilesToExclude: args.filesToExclude,\n\t\t\tmatchWholeWord: args.matchWholeWord,\n\t\t\tisCaseSensitive: args.isCaseSensitive,\n\t\t\tisRegexp: args.isRegex,\n\t\t\tuseExcludeSettingsAndIgnoreFiles: args.useExcludeSettingsAndIgnoreFiles,\n\t\t\tonlyOpenEditors: args.onlyOpenEditors,\n\t\t\tshowIncludesExcludes: !!(args.filesToExclude || args.filesToExclude || !args.useExcludeSettingsAndIgnoreFiles),\n\t\t});\n\t\tcommandService.executeCommand(SearchEditorConstants.OpenEditorCommandId, convertArgs(args));\n\t}\n}\n//#endregion\n"]}